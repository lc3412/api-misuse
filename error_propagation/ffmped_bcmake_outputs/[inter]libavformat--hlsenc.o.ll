; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavformat--hlsenc.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavformat--hlsenc.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVOutputFormat = type { i8*, i8*, i8*, i8*, i32, i32, i32, i32, %struct.AVCodecTag**, %struct.AVClass*, %struct.AVOutputFormat*, i32, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*, %struct.AVPacket*, i32)*, i32 (i32, i32)*, void (%struct.AVFormatContext*, i32, i64*, i64*)*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i32 (%struct.AVFormatContext*, i32, %struct.AVFrame**, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32, i32 (%struct.AVFormatContext*)*, void (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* }
%struct.AVCodecTag = type { i32, i32 }
%struct.AVFormatContext = type { %struct.AVClass*, %struct.AVInputFormat*, %struct.AVOutputFormat*, i8*, %struct.AVIOContext*, i32, i32, %struct.AVStream**, [1024 x i8], i8*, i64, i64, i64, i32, i32, i32, i64, i64, i8*, i32, i32, %struct.AVProgram**, i32, i32, i32, i32, i32, i32, %struct.AVChapter**, %struct.AVDictionary*, i64, i32, i32, %struct.AVIOInterruptCB, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i8*, i8*, %struct.AVFormatInternal*, i32, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, i32, i8*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i64, i8*, i32, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVIOInterruptCB*, %struct.AVDictionary**)*, i8*, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)*, void (%struct.AVFormatContext*, %struct.AVIOContext*)*, i8*, i32, i32 }
%struct.AVInputFormat = type { i8*, i8*, i32, i8*, %struct.AVCodecTag**, %struct.AVClass*, i8*, %struct.AVInputFormat*, i32, i32, i32 (%struct.AVProbeData*)*, {}*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, {}*, i32 (%struct.AVFormatContext*, i32, i64, i32)*, i64 (%struct.AVFormatContext*, i32, i64*, i64)*, {}*, {}*, i32 (%struct.AVFormatContext*, i32, i64, i64, i64, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* }
%struct.AVProbeData = type { i8*, i8*, i32, i8* }
%struct.AVIOContext = type { %struct.AVClass*, i8*, i32, i8*, i8*, i8*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i64, i32, i32, i32, i64, i8*, i64 (i64, i8*, i32)*, i32, i32 (i8*, i32)*, i64 (i8*, i32, i64, i32)*, i32, i64, i32, i64, i32, i32, i32, i32, i8*, i8*, i32 (i8*, i8*, i32, i32, i64)*, i32, i32, i64, i32 (i8*)*, i64, i8*, i32 }
%struct.AVStream = type { i32, i32, %struct.AVCodecContext*, i8*, %struct.AVRational, i64, i64, i64, i32, i32, %struct.AVRational, %struct.AVDictionary*, %struct.AVRational, %struct.AVPacket, %struct.AVPacketSideData*, i32, i32, %struct.AVRational, i8*, %struct.AVCodecParameters*, %struct.anon*, i32, i64, i64, i64, i32, i32, i32, i32, %struct.AVCodecParserContext*, %struct.AVPacketList*, %struct.AVProbeData, [17 x i64], %struct.AVIndexEntry*, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i64, i64, i64, i32, i64, i64, i32, i32, [17 x i64], [17 x i8], i64, i8, i8, i32, %struct.AVRational, %struct.AVStreamInternal* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type opaque
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVProfile = type { i32, i8* }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.anon = type { i64, i64, i32, i64, [2 x [399 x double]]*, i64, i64, i32, i32, i64, i64, i32, i64, i32 }
%struct.AVCodecParserContext = type { i8*, %struct.AVCodecParser*, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32, i32, [4 x i64], [4 x i64], [4 x i64], i32, i64, [4 x i64], i32, i64, i32, i32, i32, [4 x i64], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParser = type { [5 x i32], i32, i32 (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecParserContext*, %struct.AVCodecContext*, i8**, i32*, i8*, i32)*, void (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, %struct.AVCodecParser* }
%struct.AVPacketList = type { %struct.AVPacket, %struct.AVPacketList* }
%struct.AVIndexEntry = type { i64, i64, i32, i32 }
%struct.AVRational = type { i32, i32 }
%struct.AVStreamInternal = type { i32, %struct.AVBSFContext**, i32, i32, %struct.AVCodecContext*, i32, i32, %struct.anon.0, i32, %struct.FFFrac* }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.anon.0 = type { %struct.AVBSFContext*, %struct.AVPacket*, i32 }
%struct.FFFrac = type { i64, i64, i64 }
%struct.AVProgram = type { i32, i32, i32, i32*, i32, %struct.AVDictionary*, i32, i32, i32, i32, i64, i64, i64, i32 }
%struct.AVChapter = type { i32, %struct.AVRational, i64, i64, %struct.AVDictionary* }
%struct.AVDictionary = type opaque
%struct.AVIOInterruptCB = type { i32 (i8*)*, i8* }
%struct.AVFormatInternal = type { i32, %struct.AVPacketList*, %struct.AVPacketList*, i64, %struct.AVPacketList*, %struct.AVPacketList*, %struct.AVPacketList*, %struct.AVPacketList*, i32, i64, %struct.AVRational, i32, i32, i32, i64, i32, i32, %struct.AVDictionary*, i32 }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVCodecDefault = type opaque
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVDeviceInfoList = type opaque
%struct.AVDeviceCapabilitiesQuery = type opaque
%struct.HLSContext = type { %struct.AVClass*, i64, i32, float, float, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i64, i64, i8*, i8*, i8*, i8*, %struct.AVDictionary*, i32, i8*, i8*, i8*, i8*, i32, i8*, [1025 x i8], [1025 x i8], [33 x i8], [33 x i8], %struct.AVDictionary*, i8*, i8*, %struct.VariantStream*, i32, %struct.ClosedCaptionsStream*, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, %struct.AVIOContext*, %struct.AVIOContext*, i64, i32, i32, i32 }
%struct.VariantStream = type { i32, i32, i64, %struct.AVOutputFormat*, %struct.AVOutputFormat*, %struct.AVIOContext*, i32, i32, %struct.AVFormatContext*, %struct.AVFormatContext*, i32, i32, i32, double, i64, i64, double, i64, i64, i32, i32, i32, i32, %struct.HLSSegment*, %struct.HLSSegment*, %struct.HLSSegment*, i8*, i8*, i8*, i8*, double, [1024 x i8], i8*, i8*, %struct.AVStream**, [128 x i8], i32, i32, i32, i32, i8*, i8*, i8*, i8* }
%struct.HLSSegment = type { [1024 x i8], [1024 x i8], double, i32, i64, i64, i32, [1025 x i8], [33 x i8], %struct.HLSSegment* }
%struct.ClosedCaptionsStream = type { i8*, i8*, i8* }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.URLContext = type { %struct.AVClass*, %struct.URLProtocol*, i8*, i8*, i32, i32, i32, i32, %struct.AVIOInterruptCB, i64, i8*, i8*, i32 }
%struct.URLProtocol = type { i8*, i32 (%struct.URLContext*, i8*, i32)*, i32 (%struct.URLContext*, i8*, i32, %struct.AVDictionary**)*, i32 (%struct.URLContext*, %struct.URLContext**)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i8*, i32)*, i32 (%struct.URLContext*, i8*, i32)*, i64 (%struct.URLContext*, i64, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32)*, i64 (%struct.URLContext*, i32, i64, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32**, i32*)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32)*, i32, %struct.AVClass*, i32, i32 (%struct.URLContext*, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, %struct.AVIODirEntry**)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, %struct.URLContext*)*, i8* }
%struct.AVIODirEntry = type { i8*, i32, i32, i64, i64, i64, i64, i64, i64, i64 }
%struct.AVBPrint = type { i8*, i32, i32, i32, [1 x i8], [1000 x i8] }
%union.unaligned_64 = type { i64 }
%struct.AVCPBProperties = type { i32, i32, i32, i32, i64 }

@.str = private unnamed_addr constant [4 x i8] c"hls\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"Apple HTTP Live Streaming\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"m3u8\00", align 1
@hls_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* getelementptr inbounds ([58 x %struct.AVOption], [58 x %struct.AVOption]* bitcast (<{ %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }>* @options to [58 x %struct.AVOption]*), i32 0, i32 0), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@ff_hls_muxer = global %struct.AVOutputFormat { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i32 86018, i32 27, i32 96265, i32 67649, %struct.AVCodecTag** null, %struct.AVClass* @hls_class, %struct.AVOutputFormat* null, i32 2456, i32 (%struct.AVFormatContext*)* @hls_write_header, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* @hls_write_packet, i32 (%struct.AVFormatContext*)* @hls_write_trailer, i32 (%struct.AVFormatContext*, %struct.AVPacket*, %struct.AVPacket*, i32)* null, i32 (i32, i32)* null, void (%struct.AVFormatContext*, i32, i64*, i64*)* null, i32 (%struct.AVFormatContext*, i32, i8*, i64)* null, i32 (%struct.AVFormatContext*, i32, %struct.AVFrame**, i32)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* null, i32 0, i32 (%struct.AVFormatContext*)* @hls_init, void (%struct.AVFormatContext*)* null, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* null }, align 8
@.str.3 = private unnamed_addr constant [10 x i8] c"hls muxer\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"start_number\00", align 1
@.str.5 = private unnamed_addr constant [33 x i8] c"set first number in the sequence\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"hls_time\00", align 1
@.str.7 = private unnamed_addr constant [30 x i8] c"set segment length in seconds\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"hls_init_time\00", align 1
@.str.9 = private unnamed_addr constant [43 x i8] c"set segment length in seconds at init list\00", align 1
@.str.10 = private unnamed_addr constant [14 x i8] c"hls_list_size\00", align 1
@.str.11 = private unnamed_addr constant [39 x i8] c"set maximum number of playlist entries\00", align 1
@.str.12 = private unnamed_addr constant [21 x i8] c"hls_delete_threshold\00", align 1
@.str.13 = private unnamed_addr constant [60 x i8] c"set number of unreferenced segments to keep before deleting\00", align 1
@.str.14 = private unnamed_addr constant [15 x i8] c"hls_ts_options\00", align 1
@.str.15 = private unnamed_addr constant [69 x i8] c"set hls mpegts list of options for the container format used for hls\00", align 1
@.str.16 = private unnamed_addr constant [16 x i8] c"hls_vtt_options\00", align 1
@.str.17 = private unnamed_addr constant [66 x i8] c"set hls vtt list of options for the container format used for hls\00", align 1
@.str.18 = private unnamed_addr constant [9 x i8] c"hls_wrap\00", align 1
@.str.19 = private unnamed_addr constant [60 x i8] c"set number after which the index wraps (will be deprecated)\00", align 1
@.str.20 = private unnamed_addr constant [16 x i8] c"hls_allow_cache\00", align 1
@.str.21 = private unnamed_addr constant [79 x i8] c"explicitly set whether the client MAY (1) or MUST NOT (0) cache media segments\00", align 1
@.str.22 = private unnamed_addr constant [13 x i8] c"hls_base_url\00", align 1
@.str.23 = private unnamed_addr constant [38 x i8] c"url to prepend to each playlist entry\00", align 1
@.str.24 = private unnamed_addr constant [21 x i8] c"hls_segment_filename\00", align 1
@.str.25 = private unnamed_addr constant [36 x i8] c"filename template for segment files\00", align 1
@.str.26 = private unnamed_addr constant [17 x i8] c"hls_segment_size\00", align 1
@.str.27 = private unnamed_addr constant [42 x i8] c"maximum size per segment file, (in bytes)\00", align 1
@.str.28 = private unnamed_addr constant [18 x i8] c"hls_key_info_file\00", align 1
@.str.29 = private unnamed_addr constant [36 x i8] c"file with key URI and key file path\00", align 1
@.str.30 = private unnamed_addr constant [8 x i8] c"hls_enc\00", align 1
@.str.31 = private unnamed_addr constant [33 x i8] c"enable AES128 encryption support\00", align 1
@.str.32 = private unnamed_addr constant [12 x i8] c"hls_enc_key\00", align 1
@.str.33 = private unnamed_addr constant [46 x i8] c"hex-coded 16 byte key to encrypt the segments\00", align 1
@.str.34 = private unnamed_addr constant [16 x i8] c"hls_enc_key_url\00", align 1
@.str.35 = private unnamed_addr constant [46 x i8] c"url to access the key to decrypt the segments\00", align 1
@.str.36 = private unnamed_addr constant [11 x i8] c"hls_enc_iv\00", align 1
@.str.37 = private unnamed_addr constant [40 x i8] c"hex-coded 16 byte initialization vector\00", align 1
@.str.38 = private unnamed_addr constant [18 x i8] c"hls_subtitle_path\00", align 1
@.str.39 = private unnamed_addr constant [26 x i8] c"set path of hls subtitles\00", align 1
@.str.40 = private unnamed_addr constant [17 x i8] c"hls_segment_type\00", align 1
@.str.41 = private unnamed_addr constant [27 x i8] c"set hls segment files type\00", align 1
@.str.42 = private unnamed_addr constant [13 x i8] c"segment_type\00", align 1
@.str.43 = private unnamed_addr constant [7 x i8] c"mpegts\00", align 1
@.str.44 = private unnamed_addr constant [42 x i8] c"make segment file to mpegts files in m3u8\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c"fmp4\00", align 1
@.str.46 = private unnamed_addr constant [48 x i8] c"make segment file to fragment mp4 files in m3u8\00", align 1
@.str.47 = private unnamed_addr constant [23 x i8] c"hls_fmp4_init_filename\00", align 1
@.str.48 = private unnamed_addr constant [36 x i8] c"set fragment mp4 file init filename\00", align 1
@.str.49 = private unnamed_addr constant [9 x i8] c"init.mp4\00", align 1
@.str.50 = private unnamed_addr constant [10 x i8] c"hls_flags\00", align 1
@.str.51 = private unnamed_addr constant [59 x i8] c"set flags affecting HLS playlist and media file generation\00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"flags\00", align 1
@.str.53 = private unnamed_addr constant [12 x i8] c"single_file\00", align 1
@.str.54 = private unnamed_addr constant [54 x i8] c"generate a single media file indexed with byte ranges\00", align 1
@.str.55 = private unnamed_addr constant [10 x i8] c"temp_file\00", align 1
@.str.56 = private unnamed_addr constant [57 x i8] c"write segment to temporary file and rename when complete\00", align 1
@.str.57 = private unnamed_addr constant [16 x i8] c"delete_segments\00", align 1
@.str.58 = private unnamed_addr constant [61 x i8] c"delete segment files that are no longer part of the playlist\00", align 1
@.str.59 = private unnamed_addr constant [16 x i8] c"round_durations\00", align 1
@.str.60 = private unnamed_addr constant [41 x i8] c"round durations in m3u8 to whole numbers\00", align 1
@.str.61 = private unnamed_addr constant [14 x i8] c"discont_start\00", align 1
@.str.62 = private unnamed_addr constant [44 x i8] c"start the playlist with a discontinuity tag\00", align 1
@.str.63 = private unnamed_addr constant [13 x i8] c"omit_endlist\00", align 1
@.str.64 = private unnamed_addr constant [44 x i8] c"Do not append an endlist when ending stream\00", align 1
@.str.65 = private unnamed_addr constant [14 x i8] c"split_by_time\00", align 1
@.str.66 = private unnamed_addr constant [57 x i8] c"split the hls segment by time which user set by hls_time\00", align 1
@.str.67 = private unnamed_addr constant [12 x i8] c"append_list\00", align 1
@.str.68 = private unnamed_addr constant [50 x i8] c"append the new segments into old hls segment list\00", align 1
@.str.69 = private unnamed_addr constant [18 x i8] c"program_date_time\00", align 1
@.str.70 = private unnamed_addr constant [28 x i8] c"add EXT-X-PROGRAM-DATE-TIME\00", align 1
@.str.71 = private unnamed_addr constant [27 x i8] c"second_level_segment_index\00", align 1
@.str.72 = private unnamed_addr constant [62 x i8] c"include segment index in segment filenames when use_localtime\00", align 1
@.str.73 = private unnamed_addr constant [30 x i8] c"second_level_segment_duration\00", align 1
@.str.74 = private unnamed_addr constant [65 x i8] c"include segment duration in segment filenames when use_localtime\00", align 1
@.str.75 = private unnamed_addr constant [26 x i8] c"second_level_segment_size\00", align 1
@.str.76 = private unnamed_addr constant [61 x i8] c"include segment size in segment filenames when use_localtime\00", align 1
@.str.77 = private unnamed_addr constant [15 x i8] c"periodic_rekey\00", align 1
@.str.78 = private unnamed_addr constant [47 x i8] c"reload keyinfo file periodically for re-keying\00", align 1
@.str.79 = private unnamed_addr constant [21 x i8] c"independent_segments\00", align 1
@.str.80 = private unnamed_addr constant [52 x i8] c"add EXT-X-INDEPENDENT-SEGMENTS, whenever applicable\00", align 1
@.str.81 = private unnamed_addr constant [14 x i8] c"use_localtime\00", align 1
@.str.82 = private unnamed_addr constant [78 x i8] c"set filename expansion with strftime at segment creation(will be deprecated )\00", align 1
@.str.83 = private unnamed_addr constant [9 x i8] c"strftime\00", align 1
@.str.84 = private unnamed_addr constant [57 x i8] c"set filename expansion with strftime at segment creation\00", align 1
@.str.85 = private unnamed_addr constant [20 x i8] c"use_localtime_mkdir\00", align 1
@.str.86 = private unnamed_addr constant [83 x i8] c"create last directory component in strftime-generated filename(will be deprecated)\00", align 1
@.str.87 = private unnamed_addr constant [15 x i8] c"strftime_mkdir\00", align 1
@.str.88 = private unnamed_addr constant [63 x i8] c"create last directory component in strftime-generated filename\00", align 1
@.str.89 = private unnamed_addr constant [18 x i8] c"hls_playlist_type\00", align 1
@.str.90 = private unnamed_addr constant [26 x i8] c"set the HLS playlist type\00", align 1
@.str.91 = private unnamed_addr constant [8 x i8] c"pl_type\00", align 1
@.str.92 = private unnamed_addr constant [6 x i8] c"event\00", align 1
@.str.93 = private unnamed_addr constant [15 x i8] c"EVENT playlist\00", align 1
@.str.94 = private unnamed_addr constant [4 x i8] c"vod\00", align 1
@.str.95 = private unnamed_addr constant [13 x i8] c"VOD playlist\00", align 1
@.str.96 = private unnamed_addr constant [7 x i8] c"method\00", align 1
@.str.97 = private unnamed_addr constant [34 x i8] c"set the HTTP method(default: PUT)\00", align 1
@.str.98 = private unnamed_addr constant [24 x i8] c"hls_start_number_source\00", align 1
@.str.99 = private unnamed_addr constant [39 x i8] c"set source of first number in sequence\00", align 1
@.str.100 = private unnamed_addr constant [27 x i8] c"start_sequence_source_type\00", align 1
@.str.101 = private unnamed_addr constant [8 x i8] c"generic\00", align 1
@.str.102 = private unnamed_addr constant [29 x i8] c"start_number value (default)\00", align 1
@.str.103 = private unnamed_addr constant [6 x i8] c"epoch\00", align 1
@.str.104 = private unnamed_addr constant [20 x i8] c"seconds since epoch\00", align 1
@.str.105 = private unnamed_addr constant [9 x i8] c"datetime\00", align 1
@.str.106 = private unnamed_addr constant [35 x i8] c"current datetime as YYYYMMDDhhmmss\00", align 1
@.str.107 = private unnamed_addr constant [16 x i8] c"http_user_agent\00", align 1
@.str.108 = private unnamed_addr constant [41 x i8] c"override User-Agent field in HTTP header\00", align 1
@.str.109 = private unnamed_addr constant [15 x i8] c"var_stream_map\00", align 1
@.str.110 = private unnamed_addr constant [26 x i8] c"Variant stream map string\00", align 1
@.str.111 = private unnamed_addr constant [14 x i8] c"cc_stream_map\00", align 1
@.str.112 = private unnamed_addr constant [34 x i8] c"Closed captions stream map string\00", align 1
@.str.113 = private unnamed_addr constant [15 x i8] c"master_pl_name\00", align 1
@.str.114 = private unnamed_addr constant [42 x i8] c"Create HLS master playlist with this name\00", align 1
@.str.115 = private unnamed_addr constant [23 x i8] c"master_pl_publish_rate\00", align 1
@.str.116 = private unnamed_addr constant [65 x i8] c"Publish master play list every after this many segment intervals\00", align 1
@.str.117 = private unnamed_addr constant [16 x i8] c"http_persistent\00", align 1
@.str.118 = private unnamed_addr constant [32 x i8] c"Use persistent HTTP connections\00", align 1
@.str.119 = private unnamed_addr constant [8 x i8] c"timeout\00", align 1
@.str.120 = private unnamed_addr constant [38 x i8] c"set timeout for socket I/O operations\00", align 1
@.str.121 = private unnamed_addr constant [17 x i8] c"ignore_io_errors\00", align 1
@.str.122 = private unnamed_addr constant [67 x i8] c"Ignore IO errors for stable long-duration runs with network output\00", align 1
@options = internal constant <{ %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }> <{ %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i32 0, i32 0), i32 8, i32 2, %union.anon zeroinitializer, double 0.000000e+00, double 0x43E0000000000000, i32 1, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i32 0, i32 0), i32 20, i32 4, { double } { double 2.000000e+00 }, double 0.000000e+00, double 0x47EFFFFFE0000000, i32 1, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9, i32 0, i32 0), i32 24, i32 4, { double } zeroinitializer, double 0.000000e+00, double 0x47EFFFFFE0000000, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.11, i32 0, i32 0), i32 28, i32 1, %union.anon { i64 5 }, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.13, i32 0, i32 0), i32 32, i32 1, %union.anon { i64 1 }, double 1.000000e+00, double 0x41DFFFFFFFC00000, i32 1, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.15, i32 0, i32 0), i32 104, i32 5, { i8* } zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 1, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.17, i32 0, i32 0), i32 112, i32 5, { i8* } zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.19, i32 0, i32 0), i32 36, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.21, i32 0, i32 0), i32 76, i32 1, %union.anon { i64 -1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 1, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.23, i32 0, i32 0), i32 96, i32 5, { i8* } zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 1, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.25, i32 0, i32 0), i32 48, i32 5, { i8* } zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.27, i32 0, i32 0), i32 88, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 1, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.29, i32 0, i32 0), i32 184, i32 5, { i8* } zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.31, i32 0, i32 0), i32 136, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.33, i32 0, i32 0), i32 144, i32 5, %union.anon zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 1, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.35, i32 0, i32 0), i32 152, i32 5, { i8* } zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.37, i32 0, i32 0), i32 160, i32 5, %union.anon zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 1, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.39, i32 0, i32 0), i32 120, i32 5, { i8* } zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.41, i32 0, i32 0), i32 64, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.42, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.44, i32 0, i32 0), i32 0, i32 10, %union.anon zeroinitializer, double 0.000000e+00, double 0x41EFFFFFFFE00000, i32 1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.42, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.46, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0.000000e+00, double 0x41EFFFFFFFE00000, i32 1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.42, i32 0, i32 0) }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.48, i32 0, i32 0), i32 56, i32 5, { i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.49, i32 0, i32 0) }, double 0.000000e+00, double 0.000000e+00, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.51, i32 0, i32 0), i32 40, i32 0, %union.anon zeroinitializer, double 0.000000e+00, double 0x41EFFFFFFFE00000, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.54, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0.000000e+00, double 0x41EFFFFFFFE00000, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.56, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2048 }, double 0.000000e+00, double 0x41EFFFFFFFE00000, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.58, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0.000000e+00, double 0x41EFFFFFFFE00000, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.60, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 4 }, double 0.000000e+00, double 0x41EFFFFFFFE00000, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.62, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 8 }, double 0.000000e+00, double 0x41EFFFFFFFE00000, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.64, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 16 }, double 0.000000e+00, double 0x41EFFFFFFFE00000, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.66, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 32 }, double 0.000000e+00, double 0x41EFFFFFFFE00000, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.68, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 64 }, double 0.000000e+00, double 0x41EFFFFFFFE00000, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.70, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 128 }, double 0.000000e+00, double 0x41EFFFFFFFE00000, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.72, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 256 }, double 0.000000e+00, double 0x41EFFFFFFFE00000, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.74, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 512 }, double 0.000000e+00, double 0x41EFFFFFFFE00000, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.76, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1024 }, double 0.000000e+00, double 0x41EFFFFFFFE00000, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.78, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 4096 }, double 0.000000e+00, double 0x41EFFFFFFFE00000, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.80, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 8192 }, double 0.000000e+00, double 0x41EFFFFFFFE00000, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.82, i32 0, i32 0), i32 68, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.84, i32 0, i32 0), i32 68, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.86, i32 0, i32 0), i32 72, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.88, i32 0, i32 0), i32 72, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.89, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.90, i32 0, i32 0), i32 44, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 2.000000e+00, i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.91, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.93, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.91, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.95, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.91, i32 0, i32 0) }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.97, i32 0, i32 0), i32 2320, i32 5, { i8* } zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.99, i32 0, i32 0), i32 16, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 2.000000e+00, i32 1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.100, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.102, i32 0, i32 0), i32 0, i32 10, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.100, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.103, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.104, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.100, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.105, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.106, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.100, i32 0, i32 0) }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.107, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.108, i32 0, i32 0), i32 2328, i32 5, { i8* } zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 1, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.110, i32 0, i32 0), i32 2384, i32 5, { i8* } zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 1, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.111, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.112, i32 0, i32 0), i32 2392, i32 5, { i8* } zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 1, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.113, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.114, i32 0, i32 0), i32 2400, i32 5, { i8* } zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.115, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.116, i32 0, i32 0), i32 2408, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 0x41EFFFFFFFE00000, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.117, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.118, i32 0, i32 0), i32 2412, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.120, i32 0, i32 0), i32 2432, i32 15, %union.anon { i64 -1 }, double -1.000000e+00, double 0x41DFFFFFFFC00000, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.121, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.122, i32 0, i32 0), i32 2440, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 1, i8* null }, %struct.AVOption zeroinitializer }>, align 16
@.str.124 = private unnamed_addr constant [104 x i8] c"Your video bitrate is bigger than hls_segment_size, (%ld > %ld), the result maybe not be what you want.\00", align 1
@.str.125 = private unnamed_addr constant [18 x i8] c"avc1.%02x%02x%02x\00", align 1
@.str.126 = private unnamed_addr constant [11 x i8] c"mp4a.40.33\00", align 1
@.str.127 = private unnamed_addr constant [11 x i8] c"mp4a.40.34\00", align 1
@.str.128 = private unnamed_addr constant [10 x i8] c"mp4a.40.2\00", align 1
@.str.129 = private unnamed_addr constant [5 x i8] c"ac-3\00", align 1
@.str.130 = private unnamed_addr constant [5 x i8] c"ec-3\00", align 1
@.str.131 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@.str.132 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.133 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.134 = private unnamed_addr constant [39 x i8] c"Unable to find mapping variant stream\0A\00", align 1
@.str.135 = private unnamed_addr constant [68 x i8] c"pkt->duration = 0, maybe the hls segment duration will not precise\0A\00", align 1
@.str.136 = private unnamed_addr constant [5 x i8] c"file\00", align 1
@.str.137 = private unnamed_addr constant [13 x i8] c"mpegts_flags\00", align 1
@.str.138 = private unnamed_addr constant [15 x i8] c"resend_headers\00", align 1
@.str.139 = private unnamed_addr constant [26 x i8] c"Failed to open file '%s'\0A\00", align 1
@.str.140 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.141 = private unnamed_addr constant [17 x i8] c"http_url_context\00", align 1
@.str.142 = private unnamed_addr constant [21 x i8] c"libavformat/hlsenc.c\00", align 1
@.str.143 = private unnamed_addr constant [57 x i8] c"No HTTP method set, hls muxer defaulting to method PUT.\0A\00", align 1
@.str.144 = private unnamed_addr constant [4 x i8] c"PUT\00", align 1
@.str.145 = private unnamed_addr constant [11 x i8] c"user_agent\00", align 1
@.str.146 = private unnamed_addr constant [18 x i8] c"multiple_requests\00", align 1
@.str.147 = private unnamed_addr constant [5 x i8] c"styp\00", align 1
@.str.148 = private unnamed_addr constant [5 x i8] c"msdh\00", align 1
@.str.149 = private unnamed_addr constant [5 x i8] c"msix\00", align 1
@.str.150 = private unnamed_addr constant [36 x i8] c"failed to rename file %s to %s: %s\0A\00", align 1
@.str.151 = private unnamed_addr constant [42 x i8] c"Duplicated segment filename detected: %s\0A\00", align 1
@.str.152 = private unnamed_addr constant [107 x i8] c"Invalid second level segment filename template '%s', you can try to remove second_level_segment_size flag\0A\00", align 1
@.str.153 = private unnamed_addr constant [107 x i8] c"Invalid second level segment filename template '%s', you can try to remove second_level_segment_time flag\0A\00", align 1
@.str.154 = private unnamed_addr constant [6 x i8] c"%0*ld\00", align 1
@.str.155 = private unnamed_addr constant [3 x i8] c"%v\00", align 1
@.str.156 = private unnamed_addr constant [25 x i8] c"deleting old segment %s\0A\00", align 1
@.str.157 = private unnamed_addr constant [5 x i8] c"http\00", align 1
@.str.158 = private unnamed_addr constant [7 x i8] c"DELETE\00", align 1
@.str.159 = private unnamed_addr constant [37 x i8] c"failed to delete old segment %s: %s\0A\00", align 1
@.str.160 = private unnamed_addr constant [80 x i8] c"Invalid segment filename template '%s', you can try to use -strftime 1 with it\0A\00", align 1
@.str.161 = private unnamed_addr constant [46 x i8] c"Could not get segment filename with strftime\0A\00", align 1
@.str.162 = private unnamed_addr constant [56 x i8] c"Could not create directory %s with use_localtime_mkdir\0A\00", align 1
@.str.163 = private unnamed_addr constant [79 x i8] c"Invalid segment filename template '%s' you can try to use -strftime 1 with it\0A\00", align 1
@.str.164 = private unnamed_addr constant [40 x i8] c"Invalid segment filename template '%s'\0A\00", align 1
@.str.165 = private unnamed_addr constant [7 x i8] c"%s.tmp\00", align 1
@.str.166 = private unnamed_addr constant [34 x i8] c"Encrypted fmp4 not yet supported\0A\00", align 1
@.str.167 = private unnamed_addr constant [68 x i8] c"Cannot use both -hls_key_info_file and -hls_enc, ignoring -hls_enc\0A\00", align 1
@.str.168 = private unnamed_addr constant [15 x i8] c"encryption_key\00", align 1
@.str.169 = private unnamed_addr constant [7 x i8] c"%032lx\00", align 1
@.str.170 = private unnamed_addr constant [14 x i8] c"encryption_iv\00", align 1
@.str.171 = private unnamed_addr constant [10 x i8] c"crypto:%s\00", align 1
@.str.172 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.173 = private unnamed_addr constant [11 x i8] c"sdt_period\00", align 1
@.str.174 = private unnamed_addr constant [11 x i8] c"pat_period\00", align 1
@.str.175 = private unnamed_addr constant [108 x i8] c"Invalid second level segment filename template '%s', you can try to remove second_level_segment_index flag\0A\00", align 1
@.str.176 = private unnamed_addr constant [32 x i8] c"error opening key info file %s\0A\00", align 1
@.str.177 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.178 = private unnamed_addr constant [39 x i8] c"no key URI specified in key info file\0A\00", align 1
@.str.179 = private unnamed_addr constant [40 x i8] c"no key file specified in key info file\0A\00", align 1
@.str.180 = private unnamed_addr constant [27 x i8] c"error opening key file %s\0A\00", align 1
@.str.181 = private unnamed_addr constant [27 x i8] c"error reading key file %s\0A\00", align 1
@.str.182 = private unnamed_addr constant [5 x i8] c".key\00", align 1
@.str.183 = private unnamed_addr constant [37 x i8] c"Cannot generate a strong random key\0A\00", align 1
@hls_window.warned_non_file = internal global i32 0, align 4
@.str.184 = private unnamed_addr constant [92 x i8] c"Cannot use rename on non file protocol, this may lead to races and temporary partial files\0A\00", align 1
@.str.185 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.186 = private unnamed_addr constant [22 x i8] c"#EXT-X-DISCONTINUITY\0A\00", align 1
@.str.187 = private unnamed_addr constant [29 x i8] c"#EXT-X-INDEPENDENT-SEGMENTS\0A\00", align 1
@.str.188 = private unnamed_addr constant [35 x i8] c"#EXT-X-KEY:METHOD=AES-128,URI=\22%s\22\00", align 1
@.str.189 = private unnamed_addr constant [9 x i8] c",IV=0x%s\00", align 1
@.str.190 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.191 = private unnamed_addr constant [35 x i8] c"ff_hls_write_file_entry get error\0A\00", align 1
@.str.192 = private unnamed_addr constant [33 x i8] c"Master playlist creation failed\0A\00", align 1
@.str.193 = private unnamed_addr constant [43 x i8] c"Failed to open master play list file '%s'\0A\00", align 1
@.str.194 = private unnamed_addr constant [34 x i8] c"#EXT-X-MEDIA:TYPE=CLOSED-CAPTIONS\00", align 1
@.str.195 = private unnamed_addr constant [15 x i8] c",GROUP-ID=\22%s\22\00", align 1
@.str.196 = private unnamed_addr constant [11 x i8] c",NAME=\22%s\22\00", align 1
@.str.197 = private unnamed_addr constant [15 x i8] c",LANGUAGE=\22%s\22\00", align 1
@.str.198 = private unnamed_addr constant [19 x i8] c",INSTREAM-ID=\22%s\22\0A\00", align 1
@.str.199 = private unnamed_addr constant [29 x i8] c"Unable to find relative URL\0A\00", align 1
@.str.200 = private unnamed_addr constant [24 x i8] c"Media stream not found\0A\00", align 1
@.str.201 = private unnamed_addr constant [30 x i8] c"mapping ccgroup %s not found\0A\00", align 1
@.str.202 = private unnamed_addr constant [29 x i8] c"Unable to find relative url\0A\00", align 1
@.str.203 = private unnamed_addr constant [6 x i8] c"%d.ts\00", align 1
@.str.204 = private unnamed_addr constant [7 x i8] c"%d.vtt\00", align 1
@.str.205 = private unnamed_addr constant [50 x i8] c"Variant stream info update failed with status %x\0A\00", align 1
@.str.206 = private unnamed_addr constant [78 x i8] c"Periodic re-key not supported when more than one variant streams are present\0A\00", align 1
@.str.207 = private unnamed_addr constant [49 x i8] c"Master stream info update failed with status %x\0A\00", align 1
@.str.208 = private unnamed_addr constant [7 x i8] c"%d.m4s\00", align 1
@.str.209 = private unnamed_addr constant [13 x i8] c"%Y%m%d%H%M%S\00", align 1
@.str.210 = private unnamed_addr constant [31 x i8] c"start_number evaluated to %ld\0A\00", align 1
@.str.211 = private unnamed_addr constant [110 x i8] c"'split_by_time' and 'independent_segments' cannot be enabled together. Disabling 'independent_segments' flag\0A\00", align 1
@.str.212 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.213 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.214 = private unnamed_addr constant [42 x i8] c"Could not parse format options list '%s'\0A\00", align 1
@.str.215 = private unnamed_addr constant [69 x i8] c"More than a single video stream present, expect issues decoding it.\0A\00", align 1
@.str.216 = private unnamed_addr constant [4 x i8] c"mp4\00", align 1
@.str.217 = private unnamed_addr constant [7 x i8] c"webvtt\00", align 1
@.str.218 = private unnamed_addr constant [5 x i8] c".m4s\00", align 1
@.str.219 = private unnamed_addr constant [4 x i8] c".ts\00", align 1
@.str.220 = private unnamed_addr constant [5 x i8] c".vtt\00", align 1
@.str.221 = private unnamed_addr constant [10 x i8] c"_vtt.m3u8\00", align 1
@.str.222 = private unnamed_addr constant [90 x i8] c"append_list mode does not support hls_init_time, hls_init_time value will have no effect\0A\00", align 1
@.str.223 = private unnamed_addr constant [18 x i8] c"-%Y%m%d%H%M%S.m4s\00", align 1
@.str.224 = private unnamed_addr constant [8 x i8] c"-%s.m4s\00", align 1
@.str.225 = private unnamed_addr constant [17 x i8] c"-%Y%m%d%H%M%S.ts\00", align 1
@.str.226 = private unnamed_addr constant [7 x i8] c"-%s.ts\00", align 1
@.str.227 = private unnamed_addr constant [3 x i8] c" \09\00", align 1
@.str.228 = private unnamed_addr constant [9 x i8] c"ccgroup:\00", align 1
@.str.229 = private unnamed_addr constant [12 x i8] c"instreamid:\00", align 1
@.str.230 = private unnamed_addr constant [10 x i8] c"language:\00", align 1
@.str.231 = private unnamed_addr constant [19 x i8] c"Invalid keyval %s\0A\00", align 1
@.str.232 = private unnamed_addr constant [49 x i8] c"Insufficient parameters in cc stream map string\0A\00", align 1
@.str.233 = private unnamed_addr constant [3 x i8] c"CC\00", align 1
@.str.234 = private unnamed_addr constant [50 x i8] c"Invalid instream ID CC index %d in %s, range 1-4\0A\00", align 1
@.str.235 = private unnamed_addr constant [8 x i8] c"SERVICE\00", align 1
@.str.236 = private unnamed_addr constant [57 x i8] c"Invalid instream ID SERVICE index %d in %s, range 1-63 \0A\00", align 1
@.str.237 = private unnamed_addr constant [56 x i8] c"Invalid instream ID %s, supported are CCn or SERIVICEn\0A\00", align 1
@.str.238 = private unnamed_addr constant [3 x i8] c"a:\00", align 1
@.str.239 = private unnamed_addr constant [3 x i8] c"v:\00", align 1
@.str.240 = private unnamed_addr constant [3 x i8] c"s:\00", align 1
@.str.241 = private unnamed_addr constant [9 x i8] c"default:\00", align 1
@.str.242 = private unnamed_addr constant [4 x i8] c"YES\00", align 1
@.str.243 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.244 = private unnamed_addr constant [8 x i8] c"agroup:\00", align 1
@.str.245 = private unnamed_addr constant [28 x i8] c"Unable to map stream at %s\0A\00", align 1
@.str.246 = private unnamed_addr constant [30 x i8] c"Number of variant streams %d\0A\00", align 1
@.str.247 = private unnamed_addr constant [77 x i8] c"More than 1 variant streams are present, %%v is expected in the filename %s\0A\00", align 1
@.str.248 = private unnamed_addr constant [76 x i8] c"%%v is expected either in filename or in the sub-directory name of file %s\0A\00", align 1
@.str.249 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.250 = private unnamed_addr constant [4 x i8] c"_%d\00", align 1
@.str.251 = private unnamed_addr constant [69 x i8] c"second_level_segment_duration hls_flag requires strftime to be true\0A\00", align 1
@.str.252 = private unnamed_addr constant [64 x i8] c"second_level_segment_size hls_flag requires strfime to be true\0A\00", align 1
@.str.253 = private unnamed_addr constant [66 x i8] c"second_level_segment_index hls_flag requires strftime to be true\0A\00", align 1
@.str.254 = private unnamed_addr constant [84 x i8] c"second_level_segment_duration hls_flag works only with file protocol segment names\0A\00", align 1
@.str.255 = private unnamed_addr constant [80 x i8] c"second_level_segment_size hls_flag works only with file protocol segment names\0A\00", align 1
@.str.256 = private unnamed_addr constant [70 x i8] c"Multi-file byterange mode is currently unsupported in the HLS muxer.\0A\00", align 1
@.str.257 = private unnamed_addr constant [29 x i8] c"Failed to open segment '%s'\0A\00", align 1
@.str.258 = private unnamed_addr constant [7 x i8] c"fflags\00", align 1
@.str.259 = private unnamed_addr constant [9 x i8] c"-autobsf\00", align 1
@.str.260 = private unnamed_addr constant [9 x i8] c"movflags\00", align 1
@.str.261 = private unnamed_addr constant [29 x i8] c"+frag_custom+dash+delay_moov\00", align 1
@.str.262 = private unnamed_addr constant [64 x i8] c"Some of the provided format options in '%s' are not recognized\0A\00", align 1
@.str.263 = private unnamed_addr constant [8 x i8] c"#EXTM3U\00", align 1
@.str.264 = private unnamed_addr constant [23 x i8] c"#EXT-X-MEDIA-SEQUENCE:\00", align 1
@.str.265 = private unnamed_addr constant [102 x i8] c"Found playlist sequence number was smaller than specified start sequence number: %ld < %ld, omitting\0A\00", align 1
@.str.266 = private unnamed_addr constant [37 x i8] c"Found playlist sequence number: %ld\0A\00", align 1
@.str.267 = private unnamed_addr constant [21 x i8] c"#EXT-X-DISCONTINUITY\00", align 1
@.str.268 = private unnamed_addr constant [9 x i8] c"#EXTINF:\00", align 1
@.str.269 = private unnamed_addr constant [12 x i8] c"#EXT-X-KEY:\00", align 1
@.str.270 = private unnamed_addr constant [6 x i8] c"URI=\22\00", align 1
@.str.271 = private unnamed_addr constant [6 x i8] c"IV=0x\00", align 1
@.str.272 = private unnamed_addr constant [2 x i8] c"#\00", align 1

; Function Attrs: nounwind uwtable
define internal i32 @hls_write_header(%struct.AVFormatContext* %s) #0 !dbg !2331 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %hls = alloca %struct.HLSContext*, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %vs = alloca %struct.VariantStream*, align 8
  %inner_st = alloca %struct.AVStream*, align 8
  %outer_st = alloca %struct.AVStream*, align 8
  %vs_agroup = alloca %struct.VariantStream*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !2334, metadata !2335), !dbg !2336
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %hls, metadata !2337, metadata !2335), !dbg !2404
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2405
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !2406
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2406
  %2 = bitcast i8* %1 to %struct.HLSContext*, !dbg !2405
  store %struct.HLSContext* %2, %struct.HLSContext** %hls, align 8, !dbg !2404
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2407, metadata !2335), !dbg !2408
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2409, metadata !2335), !dbg !2410
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2411, metadata !2335), !dbg !2412
  call void @llvm.dbg.declare(metadata %struct.VariantStream** %vs, metadata !2413, metadata !2335), !dbg !2414
  store %struct.VariantStream* null, %struct.VariantStream** %vs, align 8, !dbg !2414
  store i32 0, i32* %i, align 4, !dbg !2415
  br label %for.cond, !dbg !2417

for.cond:                                         ; preds = %for.inc66, %entry
  %3 = load i32, i32* %i, align 4, !dbg !2418
  %4 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !2421
  %nb_varstreams = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %4, i32 0, i32 38, !dbg !2422
  %5 = load i32, i32* %nb_varstreams, align 8, !dbg !2422
  %cmp = icmp ult i32 %3, %5, !dbg !2423
  br i1 %cmp, label %for.body, label %for.end68, !dbg !2424

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !2425
  %idxprom = sext i32 %6 to i64, !dbg !2427
  %7 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !2427
  %var_streams = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %7, i32 0, i32 37, !dbg !2428
  %8 = load %struct.VariantStream*, %struct.VariantStream** %var_streams, align 8, !dbg !2428
  %arrayidx = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %8, i64 %idxprom, !dbg !2427
  store %struct.VariantStream* %arrayidx, %struct.VariantStream** %vs, align 8, !dbg !2429
  %9 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2430
  %avf = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %9, i32 0, i32 8, !dbg !2431
  %10 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf, align 8, !dbg !2431
  %call = call i32 @avformat_write_header(%struct.AVFormatContext* %10, %struct.AVDictionary** null), !dbg !2432
  store i32 %call, i32* %ret, align 4, !dbg !2433
  %11 = load i32, i32* %ret, align 4, !dbg !2434
  %cmp1 = icmp slt i32 %11, 0, !dbg !2436
  br i1 %cmp1, label %if.then, label %if.end, !dbg !2437

if.then:                                          ; preds = %for.body
  %12 = load i32, i32* %ret, align 4, !dbg !2438
  store i32 %12, i32* %retval, align 4, !dbg !2439
  br label %return, !dbg !2439

if.end:                                           ; preds = %for.body
  store i32 0, i32* %j, align 4, !dbg !2440
  br label %for.cond2, !dbg !2442

for.cond2:                                        ; preds = %for.inc, %if.end
  %13 = load i32, i32* %j, align 4, !dbg !2443
  %14 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2446
  %nb_streams = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %14, i32 0, i32 37, !dbg !2447
  %15 = load i32, i32* %nb_streams, align 4, !dbg !2447
  %cmp3 = icmp ult i32 %13, %15, !dbg !2448
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !2449

for.body4:                                        ; preds = %for.cond2
  call void @llvm.dbg.declare(metadata %struct.AVStream** %inner_st, metadata !2450, metadata !2335), !dbg !2452
  call void @llvm.dbg.declare(metadata %struct.AVStream** %outer_st, metadata !2453, metadata !2335), !dbg !2454
  %16 = load i32, i32* %j, align 4, !dbg !2455
  %idxprom5 = sext i32 %16 to i64, !dbg !2456
  %17 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2456
  %streams = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %17, i32 0, i32 34, !dbg !2457
  %18 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !2457
  %arrayidx6 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %18, i64 %idxprom5, !dbg !2456
  %19 = load %struct.AVStream*, %struct.AVStream** %arrayidx6, align 8, !dbg !2456
  store %struct.AVStream* %19, %struct.AVStream** %outer_st, align 8, !dbg !2454
  %20 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !2458
  %max_seg_size = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %20, i32 0, i32 17, !dbg !2460
  %21 = load i64, i64* %max_seg_size, align 8, !dbg !2460
  %cmp7 = icmp sgt i64 %21, 0, !dbg !2461
  br i1 %cmp7, label %if.then8, label %if.end18, !dbg !2462

if.then8:                                         ; preds = %for.body4
  %22 = load %struct.AVStream*, %struct.AVStream** %outer_st, align 8, !dbg !2463
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %22, i32 0, i32 19, !dbg !2466
  %23 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !2466
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %23, i32 0, i32 0, !dbg !2467
  %24 = load i32, i32* %codec_type, align 8, !dbg !2467
  %cmp9 = icmp eq i32 %24, 0, !dbg !2468
  br i1 %cmp9, label %land.lhs.true, label %if.end17, !dbg !2469

land.lhs.true:                                    ; preds = %if.then8
  %25 = load %struct.AVStream*, %struct.AVStream** %outer_st, align 8, !dbg !2470
  %codecpar10 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %25, i32 0, i32 19, !dbg !2471
  %26 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar10, align 8, !dbg !2471
  %bit_rate = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %26, i32 0, i32 6, !dbg !2472
  %27 = load i64, i64* %bit_rate, align 8, !dbg !2472
  %28 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !2473
  %max_seg_size11 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %28, i32 0, i32 17, !dbg !2474
  %29 = load i64, i64* %max_seg_size11, align 8, !dbg !2474
  %cmp12 = icmp sgt i64 %27, %29, !dbg !2475
  br i1 %cmp12, label %if.then13, label %if.end17, !dbg !2476

if.then13:                                        ; preds = %land.lhs.true
  %30 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2478
  %31 = bitcast %struct.AVFormatContext* %30 to i8*, !dbg !2478
  %32 = load %struct.AVStream*, %struct.AVStream** %outer_st, align 8, !dbg !2480
  %codecpar14 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %32, i32 0, i32 19, !dbg !2481
  %33 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar14, align 8, !dbg !2481
  %bit_rate15 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %33, i32 0, i32 6, !dbg !2482
  %34 = load i64, i64* %bit_rate15, align 8, !dbg !2482
  %35 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !2483
  %max_seg_size16 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %35, i32 0, i32 17, !dbg !2484
  %36 = load i64, i64* %max_seg_size16, align 8, !dbg !2484
  call void (i8*, i32, i8*, ...) @av_log(i8* %31, i32 24, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @.str.124, i32 0, i32 0), i64 %34, i64 %36), !dbg !2485
  br label %if.end17, !dbg !2486

if.end17:                                         ; preds = %if.then13, %land.lhs.true, %if.then8
  br label %if.end18, !dbg !2487

if.end18:                                         ; preds = %if.end17, %for.body4
  %37 = load %struct.AVStream*, %struct.AVStream** %outer_st, align 8, !dbg !2488
  %codecpar19 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %37, i32 0, i32 19, !dbg !2490
  %38 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar19, align 8, !dbg !2490
  %codec_type20 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %38, i32 0, i32 0, !dbg !2491
  %39 = load i32, i32* %codec_type20, align 8, !dbg !2491
  %cmp21 = icmp ne i32 %39, 3, !dbg !2492
  br i1 %cmp21, label %if.then22, label %if.else, !dbg !2493

if.then22:                                        ; preds = %if.end18
  %40 = load i32, i32* %j, align 4, !dbg !2494
  %idxprom23 = sext i32 %40 to i64, !dbg !2495
  %41 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2495
  %avf24 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %41, i32 0, i32 8, !dbg !2496
  %42 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf24, align 8, !dbg !2496
  %streams25 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %42, i32 0, i32 7, !dbg !2497
  %43 = load %struct.AVStream**, %struct.AVStream*** %streams25, align 8, !dbg !2497
  %arrayidx26 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %43, i64 %idxprom23, !dbg !2495
  %44 = load %struct.AVStream*, %struct.AVStream** %arrayidx26, align 8, !dbg !2495
  store %struct.AVStream* %44, %struct.AVStream** %inner_st, align 8, !dbg !2498
  br label %if.end33, !dbg !2499

if.else:                                          ; preds = %if.end18
  %45 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2500
  %vtt_avf = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %45, i32 0, i32 9, !dbg !2502
  %46 = load %struct.AVFormatContext*, %struct.AVFormatContext** %vtt_avf, align 8, !dbg !2502
  %tobool = icmp ne %struct.AVFormatContext* %46, null, !dbg !2500
  br i1 %tobool, label %if.then27, label %if.else31, !dbg !2503

if.then27:                                        ; preds = %if.else
  %47 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2504
  %vtt_avf28 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %47, i32 0, i32 9, !dbg !2505
  %48 = load %struct.AVFormatContext*, %struct.AVFormatContext** %vtt_avf28, align 8, !dbg !2505
  %streams29 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %48, i32 0, i32 7, !dbg !2506
  %49 = load %struct.AVStream**, %struct.AVStream*** %streams29, align 8, !dbg !2506
  %arrayidx30 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %49, i64 0, !dbg !2504
  %50 = load %struct.AVStream*, %struct.AVStream** %arrayidx30, align 8, !dbg !2504
  store %struct.AVStream* %50, %struct.AVStream** %inner_st, align 8, !dbg !2507
  br label %if.end32, !dbg !2508

if.else31:                                        ; preds = %if.else
  store %struct.AVStream* null, %struct.AVStream** %inner_st, align 8, !dbg !2509
  br label %for.inc, !dbg !2511

if.end32:                                         ; preds = %if.then27
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then22
  %51 = load %struct.AVStream*, %struct.AVStream** %outer_st, align 8, !dbg !2512
  %52 = load %struct.AVStream*, %struct.AVStream** %inner_st, align 8, !dbg !2513
  %pts_wrap_bits = getelementptr inbounds %struct.AVStream, %struct.AVStream* %52, i32 0, i32 21, !dbg !2514
  %53 = load i32, i32* %pts_wrap_bits, align 8, !dbg !2514
  %54 = load %struct.AVStream*, %struct.AVStream** %inner_st, align 8, !dbg !2515
  %time_base = getelementptr inbounds %struct.AVStream, %struct.AVStream* %54, i32 0, i32 4, !dbg !2516
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base, i32 0, i32 0, !dbg !2517
  %55 = load i32, i32* %num, align 8, !dbg !2517
  %56 = load %struct.AVStream*, %struct.AVStream** %inner_st, align 8, !dbg !2518
  %time_base34 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %56, i32 0, i32 4, !dbg !2519
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base34, i32 0, i32 1, !dbg !2520
  %57 = load i32, i32* %den, align 4, !dbg !2520
  call void @avpriv_set_pts_info(%struct.AVStream* %51, i32 %53, i32 %55, i32 %57), !dbg !2521
  %58 = load %struct.AVStream*, %struct.AVStream** %outer_st, align 8, !dbg !2522
  %59 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2523
  call void @write_codec_attr(%struct.AVStream* %58, %struct.VariantStream* %59), !dbg !2524
  br label %for.inc, !dbg !2525

for.inc:                                          ; preds = %if.end33, %if.else31
  %60 = load i32, i32* %j, align 4, !dbg !2526
  %inc = add nsw i32 %60, 1, !dbg !2526
  store i32 %inc, i32* %j, align 4, !dbg !2526
  br label %for.cond2, !dbg !2528, !llvm.loop !2529

for.end:                                          ; preds = %for.cond2
  %61 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2531
  %has_video = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %61, i32 0, i32 10, !dbg !2533
  %62 = load i32, i32* %has_video, align 8, !dbg !2533
  %tobool35 = icmp ne i32 %62, 0, !dbg !2531
  br i1 %tobool35, label %land.lhs.true36, label %if.end65, !dbg !2534

land.lhs.true36:                                  ; preds = %for.end
  %63 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2535
  %agroup = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %63, i32 0, i32 41, !dbg !2537
  %64 = load i8*, i8** %agroup, align 8, !dbg !2537
  %tobool37 = icmp ne i8* %64, null, !dbg !2535
  br i1 %tobool37, label %if.then38, label %if.end65, !dbg !2538

if.then38:                                        ; preds = %land.lhs.true36
  store i32 0, i32* %j, align 4, !dbg !2539
  br label %for.cond39, !dbg !2542

for.cond39:                                       ; preds = %for.inc62, %if.then38
  %65 = load i32, i32* %j, align 4, !dbg !2543
  %66 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !2546
  %nb_varstreams40 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %66, i32 0, i32 38, !dbg !2547
  %67 = load i32, i32* %nb_varstreams40, align 8, !dbg !2547
  %cmp41 = icmp ult i32 %65, %67, !dbg !2548
  br i1 %cmp41, label %for.body42, label %for.end64, !dbg !2549

for.body42:                                       ; preds = %for.cond39
  call void @llvm.dbg.declare(metadata %struct.VariantStream** %vs_agroup, metadata !2550, metadata !2335), !dbg !2552
  %68 = load i32, i32* %j, align 4, !dbg !2553
  %idxprom43 = sext i32 %68 to i64, !dbg !2554
  %69 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !2554
  %var_streams44 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %69, i32 0, i32 37, !dbg !2555
  %70 = load %struct.VariantStream*, %struct.VariantStream** %var_streams44, align 8, !dbg !2555
  %arrayidx45 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %70, i64 %idxprom43, !dbg !2554
  store %struct.VariantStream* %arrayidx45, %struct.VariantStream** %vs_agroup, align 8, !dbg !2552
  %71 = load %struct.VariantStream*, %struct.VariantStream** %vs_agroup, align 8, !dbg !2556
  %has_video46 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %71, i32 0, i32 10, !dbg !2558
  %72 = load i32, i32* %has_video46, align 8, !dbg !2558
  %tobool47 = icmp ne i32 %72, 0, !dbg !2556
  br i1 %tobool47, label %if.end61, label %land.lhs.true48, !dbg !2559

land.lhs.true48:                                  ; preds = %for.body42
  %73 = load %struct.VariantStream*, %struct.VariantStream** %vs_agroup, align 8, !dbg !2560
  %has_subtitle = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %73, i32 0, i32 11, !dbg !2562
  %74 = load i32, i32* %has_subtitle, align 4, !dbg !2562
  %tobool49 = icmp ne i32 %74, 0, !dbg !2560
  br i1 %tobool49, label %if.end61, label %land.lhs.true50, !dbg !2563

land.lhs.true50:                                  ; preds = %land.lhs.true48
  %75 = load %struct.VariantStream*, %struct.VariantStream** %vs_agroup, align 8, !dbg !2564
  %agroup51 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %75, i32 0, i32 41, !dbg !2565
  %76 = load i8*, i8** %agroup51, align 8, !dbg !2565
  %tobool52 = icmp ne i8* %76, null, !dbg !2564
  br i1 %tobool52, label %land.lhs.true53, label %if.end61, !dbg !2566

land.lhs.true53:                                  ; preds = %land.lhs.true50
  %77 = load %struct.VariantStream*, %struct.VariantStream** %vs_agroup, align 8, !dbg !2567
  %agroup54 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %77, i32 0, i32 41, !dbg !2568
  %78 = load i8*, i8** %agroup54, align 8, !dbg !2568
  %79 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2569
  %agroup55 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %79, i32 0, i32 41, !dbg !2570
  %80 = load i8*, i8** %agroup55, align 8, !dbg !2570
  %call56 = call i32 @av_strcasecmp(i8* %78, i8* %80), !dbg !2571
  %tobool57 = icmp ne i32 %call56, 0, !dbg !2571
  br i1 %tobool57, label %if.end61, label %if.then58, !dbg !2572

if.then58:                                        ; preds = %land.lhs.true53
  %81 = load %struct.VariantStream*, %struct.VariantStream** %vs_agroup, align 8, !dbg !2574
  %streams59 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %81, i32 0, i32 34, !dbg !2576
  %82 = load %struct.AVStream**, %struct.AVStream*** %streams59, align 8, !dbg !2576
  %arrayidx60 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %82, i64 0, !dbg !2574
  %83 = load %struct.AVStream*, %struct.AVStream** %arrayidx60, align 8, !dbg !2574
  %84 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2577
  call void @write_codec_attr(%struct.AVStream* %83, %struct.VariantStream* %84), !dbg !2578
  br label %if.end61, !dbg !2579

if.end61:                                         ; preds = %if.then58, %land.lhs.true53, %land.lhs.true50, %land.lhs.true48, %for.body42
  br label %for.inc62, !dbg !2580

for.inc62:                                        ; preds = %if.end61
  %85 = load i32, i32* %j, align 4, !dbg !2581
  %inc63 = add nsw i32 %85, 1, !dbg !2581
  store i32 %inc63, i32* %j, align 4, !dbg !2581
  br label %for.cond39, !dbg !2583, !llvm.loop !2584

for.end64:                                        ; preds = %for.cond39
  br label %if.end65, !dbg !2586

if.end65:                                         ; preds = %for.end64, %land.lhs.true36, %for.end
  br label %for.inc66, !dbg !2587

for.inc66:                                        ; preds = %if.end65
  %86 = load i32, i32* %i, align 4, !dbg !2588
  %inc67 = add nsw i32 %86, 1, !dbg !2588
  store i32 %inc67, i32* %i, align 4, !dbg !2588
  br label %for.cond, !dbg !2590, !llvm.loop !2591

for.end68:                                        ; preds = %for.cond
  %87 = load i32, i32* %ret, align 4, !dbg !2593
  store i32 %87, i32* %retval, align 4, !dbg !2594
  br label %return, !dbg !2594

return:                                           ; preds = %for.end68, %if.then
  %88 = load i32, i32* %retval, align 4, !dbg !2595
  ret i32 %88, !dbg !2595
}

; Function Attrs: nounwind uwtable
define internal i32 @hls_write_packet(%struct.AVFormatContext* %s, %struct.AVPacket* %pkt) #0 !dbg !2596 {
entry:
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2599, metadata !2335), !dbg !2603
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %hls = alloca %struct.HLSContext*, align 8
  %oc = alloca %struct.AVFormatContext*, align 8
  %st = alloca %struct.AVStream*, align 8
  %end_pts = alloca i64, align 8
  %is_ref_pkt = alloca i32, align 4
  %ret = alloca i32, align 4
  %can_split = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %stream_index1 = alloca i32, align 4
  %range_length = alloca i32, align 4
  %proto = alloca i8*, align 8
  %use_temp_file = alloca i32, align 4
  %buffer = alloca i8*, align 8
  %vs = alloca %struct.VariantStream*, align 8
  %options = alloca %struct.AVDictionary*, align 8
  %old_filename = alloca i8*, align 8
  %init_list_dur = alloca i32, align 4
  %after_init_list_dur = alloca i32, align 4
  %.compoundliteral = alloca %struct.AVRational, align 4
  %new_start_pos = alloca i64, align 8
  %byterange_mode = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !2607, metadata !2335), !dbg !2608
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !2609, metadata !2335), !dbg !2610
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %hls, metadata !2611, metadata !2335), !dbg !2612
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2613
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !2614
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2614
  %2 = bitcast i8* %1 to %struct.HLSContext*, !dbg !2613
  store %struct.HLSContext* %2, %struct.HLSContext** %hls, align 8, !dbg !2612
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %oc, metadata !2615, metadata !2335), !dbg !2616
  store %struct.AVFormatContext* null, %struct.AVFormatContext** %oc, align 8, !dbg !2616
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !2617, metadata !2335), !dbg !2618
  %3 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !2619
  %stream_index = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %3, i32 0, i32 5, !dbg !2620
  %4 = load i32, i32* %stream_index, align 4, !dbg !2620
  %idxprom = sext i32 %4 to i64, !dbg !2621
  %5 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2621
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %5, i32 0, i32 7, !dbg !2622
  %6 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !2622
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %6, i64 %idxprom, !dbg !2621
  %7 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !2621
  store %struct.AVStream* %7, %struct.AVStream** %st, align 8, !dbg !2618
  call void @llvm.dbg.declare(metadata i64* %end_pts, metadata !2623, metadata !2335), !dbg !2624
  store i64 0, i64* %end_pts, align 8, !dbg !2624
  call void @llvm.dbg.declare(metadata i32* %is_ref_pkt, metadata !2625, metadata !2335), !dbg !2626
  store i32 1, i32* %is_ref_pkt, align 4, !dbg !2626
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2627, metadata !2335), !dbg !2628
  store i32 0, i32* %ret, align 4, !dbg !2628
  call void @llvm.dbg.declare(metadata i32* %can_split, metadata !2629, metadata !2335), !dbg !2630
  store i32 1, i32* %can_split, align 4, !dbg !2630
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2631, metadata !2335), !dbg !2632
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2633, metadata !2335), !dbg !2634
  call void @llvm.dbg.declare(metadata i32* %stream_index1, metadata !2635, metadata !2335), !dbg !2636
  store i32 0, i32* %stream_index1, align 4, !dbg !2636
  call void @llvm.dbg.declare(metadata i32* %range_length, metadata !2637, metadata !2335), !dbg !2638
  store i32 0, i32* %range_length, align 4, !dbg !2638
  call void @llvm.dbg.declare(metadata i8** %proto, metadata !2639, metadata !2335), !dbg !2640
  store i8* null, i8** %proto, align 8, !dbg !2640
  call void @llvm.dbg.declare(metadata i32* %use_temp_file, metadata !2641, metadata !2335), !dbg !2642
  store i32 0, i32* %use_temp_file, align 4, !dbg !2642
  call void @llvm.dbg.declare(metadata i8** %buffer, metadata !2643, metadata !2335), !dbg !2644
  store i8* null, i8** %buffer, align 8, !dbg !2644
  call void @llvm.dbg.declare(metadata %struct.VariantStream** %vs, metadata !2645, metadata !2335), !dbg !2646
  store %struct.VariantStream* null, %struct.VariantStream** %vs, align 8, !dbg !2646
  call void @llvm.dbg.declare(metadata %struct.AVDictionary** %options, metadata !2647, metadata !2335), !dbg !2648
  store %struct.AVDictionary* null, %struct.AVDictionary** %options, align 8, !dbg !2648
  call void @llvm.dbg.declare(metadata i8** %old_filename, metadata !2649, metadata !2335), !dbg !2650
  store i8* null, i8** %old_filename, align 8, !dbg !2650
  store i32 0, i32* %i, align 4, !dbg !2651
  br label %for.cond, !dbg !2653

for.cond:                                         ; preds = %for.inc16, %entry
  %8 = load i32, i32* %i, align 4, !dbg !2654
  %9 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !2657
  %nb_varstreams = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %9, i32 0, i32 38, !dbg !2658
  %10 = load i32, i32* %nb_varstreams, align 8, !dbg !2658
  %cmp = icmp ult i32 %8, %10, !dbg !2659
  br i1 %cmp, label %for.body, label %for.end18, !dbg !2660

for.body:                                         ; preds = %for.cond
  %11 = load i32, i32* %i, align 4, !dbg !2661
  %idxprom2 = sext i32 %11 to i64, !dbg !2663
  %12 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !2663
  %var_streams = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %12, i32 0, i32 37, !dbg !2664
  %13 = load %struct.VariantStream*, %struct.VariantStream** %var_streams, align 8, !dbg !2664
  %arrayidx3 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %13, i64 %idxprom2, !dbg !2663
  store %struct.VariantStream* %arrayidx3, %struct.VariantStream** %vs, align 8, !dbg !2665
  store i32 0, i32* %j, align 4, !dbg !2666
  br label %for.cond4, !dbg !2668

for.cond4:                                        ; preds = %for.inc, %for.body
  %14 = load i32, i32* %j, align 4, !dbg !2669
  %15 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2672
  %nb_streams = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %15, i32 0, i32 37, !dbg !2673
  %16 = load i32, i32* %nb_streams, align 4, !dbg !2673
  %cmp5 = icmp ult i32 %14, %16, !dbg !2674
  br i1 %cmp5, label %for.body6, label %for.end, !dbg !2675

for.body6:                                        ; preds = %for.cond4
  %17 = load i32, i32* %j, align 4, !dbg !2676
  %idxprom7 = sext i32 %17 to i64, !dbg !2679
  %18 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2679
  %streams8 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %18, i32 0, i32 34, !dbg !2680
  %19 = load %struct.AVStream**, %struct.AVStream*** %streams8, align 8, !dbg !2680
  %arrayidx9 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %19, i64 %idxprom7, !dbg !2679
  %20 = load %struct.AVStream*, %struct.AVStream** %arrayidx9, align 8, !dbg !2679
  %21 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !2681
  %cmp10 = icmp eq %struct.AVStream* %20, %21, !dbg !2682
  br i1 %cmp10, label %if.then, label %if.end13, !dbg !2683

if.then:                                          ; preds = %for.body6
  %22 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !2684
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %22, i32 0, i32 19, !dbg !2687
  %23 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !2687
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %23, i32 0, i32 0, !dbg !2688
  %24 = load i32, i32* %codec_type, align 8, !dbg !2688
  %cmp11 = icmp eq i32 %24, 3, !dbg !2689
  br i1 %cmp11, label %if.then12, label %if.else, !dbg !2690

if.then12:                                        ; preds = %if.then
  %25 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2691
  %vtt_avf = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %25, i32 0, i32 9, !dbg !2693
  %26 = load %struct.AVFormatContext*, %struct.AVFormatContext** %vtt_avf, align 8, !dbg !2693
  store %struct.AVFormatContext* %26, %struct.AVFormatContext** %oc, align 8, !dbg !2694
  store i32 0, i32* %stream_index1, align 4, !dbg !2695
  br label %if.end, !dbg !2696

if.else:                                          ; preds = %if.then
  %27 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2697
  %avf = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %27, i32 0, i32 8, !dbg !2699
  %28 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf, align 8, !dbg !2699
  store %struct.AVFormatContext* %28, %struct.AVFormatContext** %oc, align 8, !dbg !2700
  %29 = load i32, i32* %j, align 4, !dbg !2701
  store i32 %29, i32* %stream_index1, align 4, !dbg !2702
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then12
  br label %for.end, !dbg !2703

if.end13:                                         ; preds = %for.body6
  br label %for.inc, !dbg !2704

for.inc:                                          ; preds = %if.end13
  %30 = load i32, i32* %j, align 4, !dbg !2705
  %inc = add nsw i32 %30, 1, !dbg !2705
  store i32 %inc, i32* %j, align 4, !dbg !2705
  br label %for.cond4, !dbg !2707, !llvm.loop !2708

for.end:                                          ; preds = %if.end, %for.cond4
  %31 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !2710
  %tobool = icmp ne %struct.AVFormatContext* %31, null, !dbg !2710
  br i1 %tobool, label %if.then14, label %if.end15, !dbg !2712

if.then14:                                        ; preds = %for.end
  br label %for.end18, !dbg !2713

if.end15:                                         ; preds = %for.end
  br label %for.inc16, !dbg !2714

for.inc16:                                        ; preds = %if.end15
  %32 = load i32, i32* %i, align 4, !dbg !2715
  %inc17 = add nsw i32 %32, 1, !dbg !2715
  store i32 %inc17, i32* %i, align 4, !dbg !2715
  br label %for.cond, !dbg !2717, !llvm.loop !2718

for.end18:                                        ; preds = %if.then14, %for.cond
  %33 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !2720
  %tobool19 = icmp ne %struct.AVFormatContext* %33, null, !dbg !2720
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !2722

if.then20:                                        ; preds = %for.end18
  %34 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2723
  %35 = bitcast %struct.AVFormatContext* %34 to i8*, !dbg !2723
  call void (i8*, i32, i8*, ...) @av_log(i8* %35, i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.134, i32 0, i32 0)), !dbg !2725
  store i32 -12, i32* %retval, align 4, !dbg !2726
  br label %return, !dbg !2726

if.end21:                                         ; preds = %for.end18
  %36 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !2727
  %recording_time = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %36, i32 0, i32 16, !dbg !2728
  %37 = load i64, i64* %recording_time, align 8, !dbg !2728
  %38 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2729
  %number = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %38, i32 0, i32 1, !dbg !2730
  %39 = load i32, i32* %number, align 4, !dbg !2730
  %conv = zext i32 %39 to i64, !dbg !2729
  %mul = mul nsw i64 %37, %conv, !dbg !2731
  store i64 %mul, i64* %end_pts, align 8, !dbg !2732
  %40 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2733
  %sequence = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %40, i32 0, i32 2, !dbg !2735
  %41 = load i64, i64* %sequence, align 8, !dbg !2735
  %42 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2736
  %nb_entries = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %42, i32 0, i32 19, !dbg !2737
  %43 = load i32, i32* %nb_entries, align 8, !dbg !2737
  %conv22 = sext i32 %43 to i64, !dbg !2736
  %sub = sub nsw i64 %41, %conv22, !dbg !2738
  %44 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !2739
  %start_sequence = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %44, i32 0, i32 1, !dbg !2740
  %45 = load i64, i64* %start_sequence, align 8, !dbg !2740
  %cmp23 = icmp sgt i64 %sub, %45, !dbg !2741
  br i1 %cmp23, label %land.lhs.true, label %if.end49, !dbg !2742

land.lhs.true:                                    ; preds = %if.end21
  %46 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !2743
  %init_time = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %46, i32 0, i32 4, !dbg !2745
  %47 = load float, float* %init_time, align 8, !dbg !2745
  %cmp25 = fcmp ogt float %47, 0.000000e+00, !dbg !2746
  br i1 %cmp25, label %if.then27, label %if.end49, !dbg !2747

if.then27:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %init_list_dur, metadata !2748, metadata !2335), !dbg !2750
  %48 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !2751
  %init_time28 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %48, i32 0, i32 4, !dbg !2752
  %49 = load float, float* %init_time28, align 8, !dbg !2752
  %50 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2753
  %nb_entries29 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %50, i32 0, i32 19, !dbg !2754
  %51 = load i32, i32* %nb_entries29, align 8, !dbg !2754
  %conv30 = sitofp i32 %51 to float, !dbg !2753
  %mul31 = fmul float %49, %conv30, !dbg !2755
  %mul32 = fmul float %mul31, 1.000000e+06, !dbg !2756
  %conv33 = fptosi float %mul32 to i32, !dbg !2751
  store i32 %conv33, i32* %init_list_dur, align 4, !dbg !2750
  call void @llvm.dbg.declare(metadata i32* %after_init_list_dur, metadata !2757, metadata !2335), !dbg !2758
  %52 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2759
  %sequence34 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %52, i32 0, i32 2, !dbg !2760
  %53 = load i64, i64* %sequence34, align 8, !dbg !2760
  %54 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !2761
  %start_sequence35 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %54, i32 0, i32 1, !dbg !2762
  %55 = load i64, i64* %start_sequence35, align 8, !dbg !2762
  %sub36 = sub nsw i64 %53, %55, !dbg !2763
  %56 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2764
  %nb_entries37 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %56, i32 0, i32 19, !dbg !2765
  %57 = load i32, i32* %nb_entries37, align 8, !dbg !2765
  %conv38 = sext i32 %57 to i64, !dbg !2764
  %sub39 = sub nsw i64 %sub36, %conv38, !dbg !2766
  %conv40 = sitofp i64 %sub39 to float, !dbg !2767
  %58 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !2768
  %time = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %58, i32 0, i32 3, !dbg !2769
  %59 = load float, float* %time, align 4, !dbg !2769
  %mul41 = fmul float %59, 1.000000e+06, !dbg !2770
  %mul42 = fmul float %conv40, %mul41, !dbg !2771
  %conv43 = fptosi float %mul42 to i32, !dbg !2767
  store i32 %conv43, i32* %after_init_list_dur, align 4, !dbg !2758
  %60 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !2772
  %time44 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %60, i32 0, i32 3, !dbg !2773
  %61 = load float, float* %time44, align 4, !dbg !2773
  %mul45 = fmul float %61, 1.000000e+06, !dbg !2774
  %conv46 = fptosi float %mul45 to i64, !dbg !2772
  %62 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !2775
  %recording_time47 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %62, i32 0, i32 16, !dbg !2776
  store i64 %conv46, i64* %recording_time47, align 8, !dbg !2777
  %63 = load i32, i32* %init_list_dur, align 4, !dbg !2778
  %64 = load i32, i32* %after_init_list_dur, align 4, !dbg !2779
  %add = add nsw i32 %63, %64, !dbg !2780
  %conv48 = sext i32 %add to i64, !dbg !2778
  store i64 %conv48, i64* %end_pts, align 8, !dbg !2781
  br label %if.end49, !dbg !2782

if.end49:                                         ; preds = %if.then27, %land.lhs.true, %if.end21
  %65 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2783
  %start_pts = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %65, i32 0, i32 14, !dbg !2785
  %66 = load i64, i64* %start_pts, align 8, !dbg !2785
  %cmp50 = icmp eq i64 %66, -9223372036854775808, !dbg !2786
  br i1 %cmp50, label %if.then52, label %if.end54, !dbg !2787

if.then52:                                        ; preds = %if.end49
  %67 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !2788
  %pts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %67, i32 0, i32 1, !dbg !2790
  %68 = load i64, i64* %pts, align 8, !dbg !2790
  %69 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2791
  %start_pts53 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %69, i32 0, i32 14, !dbg !2792
  store i64 %68, i64* %start_pts53, align 8, !dbg !2793
  br label %if.end54, !dbg !2794

if.end54:                                         ; preds = %if.then52, %if.end49
  %70 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2795
  %has_video = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %70, i32 0, i32 10, !dbg !2797
  %71 = load i32, i32* %has_video, align 8, !dbg !2797
  %tobool55 = icmp ne i32 %71, 0, !dbg !2795
  br i1 %tobool55, label %if.then56, label %if.end75, !dbg !2798

if.then56:                                        ; preds = %if.end54
  %72 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !2799
  %codecpar57 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %72, i32 0, i32 19, !dbg !2801
  %73 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar57, align 8, !dbg !2801
  %codec_type58 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %73, i32 0, i32 0, !dbg !2802
  %74 = load i32, i32* %codec_type58, align 8, !dbg !2802
  %cmp59 = icmp eq i32 %74, 0, !dbg !2803
  br i1 %cmp59, label %land.rhs, label %land.end, !dbg !2804

land.rhs:                                         ; preds = %if.then56
  %75 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !2805
  %flags = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %75, i32 0, i32 6, !dbg !2806
  %76 = load i32, i32* %flags, align 8, !dbg !2806
  %and = and i32 %76, 1, !dbg !2807
  %tobool61 = icmp ne i32 %and, 0, !dbg !2807
  br i1 %tobool61, label %lor.end, label %lor.rhs, !dbg !2808

lor.rhs:                                          ; preds = %land.rhs
  %77 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !2809
  %flags62 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %77, i32 0, i32 8, !dbg !2811
  %78 = load i32, i32* %flags62, align 8, !dbg !2811
  %and63 = and i32 %78, 32, !dbg !2812
  %tobool64 = icmp ne i32 %and63, 0, !dbg !2813
  br label %lor.end, !dbg !2813

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %79 = phi i1 [ true, %land.rhs ], [ %tobool64, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %if.then56
  %80 = phi i1 [ false, %if.then56 ], [ %79, %lor.end ]
  %land.ext = zext i1 %80 to i32, !dbg !2814
  store i32 %land.ext, i32* %can_split, align 4, !dbg !2815
  %81 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !2816
  %codecpar65 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %81, i32 0, i32 19, !dbg !2817
  %82 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar65, align 8, !dbg !2817
  %codec_type66 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %82, i32 0, i32 0, !dbg !2818
  %83 = load i32, i32* %codec_type66, align 8, !dbg !2818
  %cmp67 = icmp eq i32 %83, 0, !dbg !2819
  br i1 %cmp67, label %land.rhs69, label %land.end73, !dbg !2820

land.rhs69:                                       ; preds = %land.end
  %84 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !2821
  %stream_index70 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %84, i32 0, i32 5, !dbg !2822
  %85 = load i32, i32* %stream_index70, align 4, !dbg !2822
  %86 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2823
  %reference_stream_index = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %86, i32 0, i32 22, !dbg !2824
  %87 = load i32, i32* %reference_stream_index, align 4, !dbg !2824
  %cmp71 = icmp eq i32 %85, %87, !dbg !2825
  br label %land.end73

land.end73:                                       ; preds = %land.rhs69, %land.end
  %88 = phi i1 [ false, %land.end ], [ %cmp71, %land.rhs69 ]
  %land.ext74 = zext i1 %88 to i32, !dbg !2826
  store i32 %land.ext74, i32* %is_ref_pkt, align 4, !dbg !2828
  br label %if.end75, !dbg !2829

if.end75:                                         ; preds = %land.end73, %if.end54
  %89 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !2830
  %pts76 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %89, i32 0, i32 1, !dbg !2832
  %90 = load i64, i64* %pts76, align 8, !dbg !2832
  %cmp77 = icmp eq i64 %90, -9223372036854775808, !dbg !2833
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !2834

if.then79:                                        ; preds = %if.end75
  store i32 0, i32* %can_split, align 4, !dbg !2835
  store i32 0, i32* %is_ref_pkt, align 4, !dbg !2836
  br label %if.end80, !dbg !2837

if.end80:                                         ; preds = %if.then79, %if.end75
  %91 = load i32, i32* %is_ref_pkt, align 4, !dbg !2838
  %tobool81 = icmp ne i32 %91, 0, !dbg !2838
  br i1 %tobool81, label %if.then82, label %if.end143, !dbg !2840

if.then82:                                        ; preds = %if.end80
  %92 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2841
  %end_pts83 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %92, i32 0, i32 15, !dbg !2844
  %93 = load i64, i64* %end_pts83, align 8, !dbg !2844
  %cmp84 = icmp eq i64 %93, -9223372036854775808, !dbg !2845
  br i1 %cmp84, label %if.then86, label %if.end89, !dbg !2846

if.then86:                                        ; preds = %if.then82
  %94 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !2847
  %pts87 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %94, i32 0, i32 1, !dbg !2848
  %95 = load i64, i64* %pts87, align 8, !dbg !2848
  %96 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2849
  %end_pts88 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %96, i32 0, i32 15, !dbg !2850
  store i64 %95, i64* %end_pts88, align 8, !dbg !2851
  br label %if.end89, !dbg !2849

if.end89:                                         ; preds = %if.then86, %if.then82
  %97 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2852
  %new_start = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %97, i32 0, i32 12, !dbg !2854
  %98 = load i32, i32* %new_start, align 8, !dbg !2854
  %tobool90 = icmp ne i32 %98, 0, !dbg !2852
  br i1 %tobool90, label %if.then91, label %if.else111, !dbg !2855

if.then91:                                        ; preds = %if.end89
  %99 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2856
  %new_start92 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %99, i32 0, i32 12, !dbg !2858
  store i32 0, i32* %new_start92, align 8, !dbg !2859
  %100 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !2860
  %pts93 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %100, i32 0, i32 1, !dbg !2861
  %101 = load i64, i64* %pts93, align 8, !dbg !2861
  %102 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2862
  %end_pts94 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %102, i32 0, i32 15, !dbg !2863
  %103 = load i64, i64* %end_pts94, align 8, !dbg !2863
  %sub95 = sub nsw i64 %101, %103, !dbg !2864
  %conv96 = sitofp i64 %sub95 to double, !dbg !2865
  %104 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !2866
  %time_base = getelementptr inbounds %struct.AVStream, %struct.AVStream* %104, i32 0, i32 4, !dbg !2867
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base, i32 0, i32 0, !dbg !2868
  %105 = load i32, i32* %num, align 8, !dbg !2868
  %conv97 = sitofp i32 %105 to double, !dbg !2866
  %mul98 = fmul double %conv96, %conv97, !dbg !2869
  %106 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !2870
  %time_base99 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %106, i32 0, i32 4, !dbg !2871
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base99, i32 0, i32 1, !dbg !2872
  %107 = load i32, i32* %den, align 4, !dbg !2872
  %conv100 = sitofp i32 %107 to double, !dbg !2870
  %div = fdiv double %mul98, %conv100, !dbg !2873
  %108 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2874
  %duration = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %108, i32 0, i32 16, !dbg !2875
  store double %div, double* %duration, align 8, !dbg !2876
  %109 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !2877
  %duration101 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %109, i32 0, i32 9, !dbg !2878
  %110 = load i64, i64* %duration101, align 8, !dbg !2878
  %conv102 = sitofp i64 %110 to double, !dbg !2879
  %111 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !2880
  %time_base103 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %111, i32 0, i32 4, !dbg !2881
  %num104 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base103, i32 0, i32 0, !dbg !2882
  %112 = load i32, i32* %num104, align 8, !dbg !2882
  %conv105 = sitofp i32 %112 to double, !dbg !2880
  %mul106 = fmul double %conv102, %conv105, !dbg !2883
  %113 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !2884
  %time_base107 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %113, i32 0, i32 4, !dbg !2885
  %den108 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base107, i32 0, i32 1, !dbg !2886
  %114 = load i32, i32* %den108, align 4, !dbg !2886
  %conv109 = sitofp i32 %114 to double, !dbg !2884
  %div110 = fdiv double %mul106, %conv109, !dbg !2887
  %115 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2888
  %dpp = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %115, i32 0, i32 13, !dbg !2889
  store double %div110, double* %dpp, align 8, !dbg !2890
  br label %if.end142, !dbg !2891

if.else111:                                       ; preds = %if.end89
  %116 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !2892
  %duration112 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %116, i32 0, i32 9, !dbg !2895
  %117 = load i64, i64* %duration112, align 8, !dbg !2895
  %tobool113 = icmp ne i64 %117, 0, !dbg !2892
  br i1 %tobool113, label %if.then114, label %if.else127, !dbg !2896

if.then114:                                       ; preds = %if.else111
  %118 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !2897
  %duration115 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %118, i32 0, i32 9, !dbg !2899
  %119 = load i64, i64* %duration115, align 8, !dbg !2899
  %conv116 = sitofp i64 %119 to double, !dbg !2900
  %120 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !2901
  %time_base117 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %120, i32 0, i32 4, !dbg !2902
  %num118 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base117, i32 0, i32 0, !dbg !2903
  %121 = load i32, i32* %num118, align 8, !dbg !2903
  %conv119 = sitofp i32 %121 to double, !dbg !2901
  %mul120 = fmul double %conv116, %conv119, !dbg !2904
  %122 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !2905
  %time_base121 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %122, i32 0, i32 4, !dbg !2906
  %den122 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base121, i32 0, i32 1, !dbg !2907
  %123 = load i32, i32* %den122, align 4, !dbg !2907
  %conv123 = sitofp i32 %123 to double, !dbg !2905
  %div124 = fdiv double %mul120, %conv123, !dbg !2908
  %124 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2909
  %duration125 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %124, i32 0, i32 16, !dbg !2910
  %125 = load double, double* %duration125, align 8, !dbg !2911
  %add126 = fadd double %125, %div124, !dbg !2911
  store double %add126, double* %duration125, align 8, !dbg !2911
  br label %if.end141, !dbg !2912

if.else127:                                       ; preds = %if.else111
  %126 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2913
  %127 = bitcast %struct.AVFormatContext* %126 to i8*, !dbg !2913
  call void (i8*, i32, i8*, ...) @av_log(i8* %127, i32 24, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.135, i32 0, i32 0)), !dbg !2915
  %128 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !2916
  %pts128 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %128, i32 0, i32 1, !dbg !2917
  %129 = load i64, i64* %pts128, align 8, !dbg !2917
  %130 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2918
  %end_pts129 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %130, i32 0, i32 15, !dbg !2919
  %131 = load i64, i64* %end_pts129, align 8, !dbg !2919
  %sub130 = sub nsw i64 %129, %131, !dbg !2920
  %conv131 = sitofp i64 %sub130 to double, !dbg !2921
  %132 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !2922
  %time_base132 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %132, i32 0, i32 4, !dbg !2923
  %num133 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base132, i32 0, i32 0, !dbg !2924
  %133 = load i32, i32* %num133, align 8, !dbg !2924
  %conv134 = sitofp i32 %133 to double, !dbg !2922
  %mul135 = fmul double %conv131, %conv134, !dbg !2925
  %134 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !2926
  %time_base136 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %134, i32 0, i32 4, !dbg !2927
  %den137 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base136, i32 0, i32 1, !dbg !2928
  %135 = load i32, i32* %den137, align 4, !dbg !2928
  %conv138 = sitofp i32 %135 to double, !dbg !2926
  %div139 = fdiv double %mul135, %conv138, !dbg !2929
  %136 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2930
  %duration140 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %136, i32 0, i32 16, !dbg !2931
  store double %div139, double* %duration140, align 8, !dbg !2932
  br label %if.end141

if.end141:                                        ; preds = %if.else127, %if.then114
  br label %if.end142

if.end142:                                        ; preds = %if.end141, %if.then91
  br label %if.end143, !dbg !2933

if.end143:                                        ; preds = %if.end142, %if.end80
  %137 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2934
  %packets_written = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %137, i32 0, i32 6, !dbg !2935
  %138 = load i32, i32* %packets_written, align 8, !dbg !2935
  %tobool144 = icmp ne i32 %138, 0, !dbg !2934
  br i1 %tobool144, label %land.lhs.true145, label %if.end379, !dbg !2936

land.lhs.true145:                                 ; preds = %if.end143
  %139 = load i32, i32* %can_split, align 4, !dbg !2937
  %tobool146 = icmp ne i32 %139, 0, !dbg !2937
  br i1 %tobool146, label %land.lhs.true147, label %if.end379, !dbg !2939

land.lhs.true147:                                 ; preds = %land.lhs.true145
  %140 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !2940
  %pts148 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %140, i32 0, i32 1, !dbg !2942
  %141 = load i64, i64* %pts148, align 8, !dbg !2942
  %142 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2943
  %start_pts149 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %142, i32 0, i32 14, !dbg !2944
  %143 = load i64, i64* %start_pts149, align 8, !dbg !2944
  %sub150 = sub nsw i64 %141, %143, !dbg !2945
  %144 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !2946
  %time_base151 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %144, i32 0, i32 4, !dbg !2947
  %145 = load i64, i64* %end_pts, align 8, !dbg !2948
  %num152 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !2949
  store i32 1, i32* %num152, align 4, !dbg !2949
  %den153 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !2949
  store i32 1000000, i32* %den153, align 4, !dbg !2949
  %146 = bitcast %struct.AVRational* %time_base151 to i64*, !dbg !2950
  %147 = load i64, i64* %146, align 8, !dbg !2950
  %148 = bitcast %struct.AVRational* %.compoundliteral to i64*, !dbg !2950
  %149 = load i64, i64* %148, align 4, !dbg !2950
  %call = call i32 @av_compare_ts(i64 %sub150, i64 %147, i64 %145, i64 %149), !dbg !2950
  %cmp154 = icmp sge i32 %call, 0, !dbg !2951
  br i1 %cmp154, label %if.then156, label %if.end379, !dbg !2952

if.then156:                                       ; preds = %land.lhs.true147
  call void @llvm.dbg.declare(metadata i64* %new_start_pos, metadata !2953, metadata !2335), !dbg !2954
  call void @llvm.dbg.declare(metadata i32* %byterange_mode, metadata !2955, metadata !2335), !dbg !2956
  %150 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !2957
  %flags157 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %150, i32 0, i32 8, !dbg !2958
  %151 = load i32, i32* %flags157, align 8, !dbg !2958
  %and158 = and i32 %151, 1, !dbg !2959
  %tobool159 = icmp ne i32 %and158, 0, !dbg !2959
  br i1 %tobool159, label %lor.end163, label %lor.rhs160, !dbg !2960

lor.rhs160:                                       ; preds = %if.then156
  %152 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !2961
  %max_seg_size = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %152, i32 0, i32 17, !dbg !2963
  %153 = load i64, i64* %max_seg_size, align 8, !dbg !2963
  %cmp161 = icmp sgt i64 %153, 0, !dbg !2964
  br label %lor.end163, !dbg !2965

lor.end163:                                       ; preds = %lor.rhs160, %if.then156
  %154 = phi i1 [ true, %if.then156 ], [ %cmp161, %lor.rhs160 ]
  %lor.ext = zext i1 %154 to i32, !dbg !2966
  store i32 %lor.ext, i32* %byterange_mode, align 4, !dbg !2968
  %155 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2969
  %avf164 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %155, i32 0, i32 8, !dbg !2970
  %156 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf164, align 8, !dbg !2970
  %call165 = call i32 @av_write_frame(%struct.AVFormatContext* %156, %struct.AVPacket* null), !dbg !2971
  %157 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2972
  %avf166 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %157, i32 0, i32 8, !dbg !2973
  %158 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf166, align 8, !dbg !2973
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %158, i32 0, i32 4, !dbg !2974
  %159 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !2974
  store %struct.AVIOContext* %159, %struct.AVIOContext** %s.addr.i, align 8, !dbg !2975
  %160 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !2976
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %160, i64 0, i32 1) #10, !dbg !2977
  store i64 %call.i, i64* %new_start_pos, align 8, !dbg !2978
  %161 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !2979
  %segment_type = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %161, i32 0, i32 12, !dbg !2981
  %162 = load i32, i32* %segment_type, align 8, !dbg !2981
  %cmp168 = icmp ne i32 %162, 1, !dbg !2982
  br i1 %cmp168, label %if.then170, label %if.else172, !dbg !2983

if.then170:                                       ; preds = %lor.end163
  %163 = load i64, i64* %new_start_pos, align 8, !dbg !2984
  %164 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2986
  %start_pos = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %164, i32 0, i32 17, !dbg !2987
  %165 = load i64, i64* %start_pos, align 8, !dbg !2987
  %sub171 = sub nsw i64 %163, %165, !dbg !2988
  %166 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2989
  %size = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %166, i32 0, i32 18, !dbg !2990
  store i64 %sub171, i64* %size, align 8, !dbg !2991
  br label %if.end174, !dbg !2992

if.else172:                                       ; preds = %lor.end163
  %167 = load i64, i64* %new_start_pos, align 8, !dbg !2993
  %168 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !2995
  %size173 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %168, i32 0, i32 18, !dbg !2996
  store i64 %167, i64* %size173, align 8, !dbg !2997
  br label %if.end174

if.end174:                                        ; preds = %if.else172, %if.then170
  %169 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !2998
  %segment_type175 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %169, i32 0, i32 12, !dbg !3000
  %170 = load i32, i32* %segment_type175, align 8, !dbg !3000
  %cmp176 = icmp eq i32 %170, 1, !dbg !3001
  br i1 %cmp176, label %if.then178, label %if.else196, !dbg !3002

if.then178:                                       ; preds = %if.end174
  %171 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3003
  %init_range_length = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %171, i32 0, i32 7, !dbg !3006
  %172 = load i32, i32* %init_range_length, align 4, !dbg !3006
  %tobool179 = icmp ne i32 %172, 0, !dbg !3003
  br i1 %tobool179, label %if.end195, label %if.then180, !dbg !3007

if.then180:                                       ; preds = %if.then178
  %173 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !3008
  %pb181 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %173, i32 0, i32 4, !dbg !3010
  %174 = load %struct.AVIOContext*, %struct.AVIOContext** %pb181, align 8, !dbg !3010
  call void @avio_flush(%struct.AVIOContext* %174), !dbg !3011
  %175 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !3012
  %pb182 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %175, i32 0, i32 4, !dbg !3013
  %176 = load %struct.AVIOContext*, %struct.AVIOContext** %pb182, align 8, !dbg !3013
  %call183 = call i32 @avio_close_dyn_buf(%struct.AVIOContext* %176, i8** %buffer), !dbg !3014
  store i32 %call183, i32* %range_length, align 4, !dbg !3015
  %177 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3016
  %out = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %177, i32 0, i32 5, !dbg !3017
  %178 = load %struct.AVIOContext*, %struct.AVIOContext** %out, align 8, !dbg !3017
  %179 = load i8*, i8** %buffer, align 8, !dbg !3018
  %180 = load i32, i32* %range_length, align 4, !dbg !3019
  call void @avio_write(%struct.AVIOContext* %178, i8* %179, i32 %180), !dbg !3020
  %181 = load i8*, i8** %buffer, align 8, !dbg !3021
  call void @av_free(i8* %181), !dbg !3022
  %182 = load i32, i32* %range_length, align 4, !dbg !3023
  %183 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3024
  %init_range_length184 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %183, i32 0, i32 7, !dbg !3025
  store i32 %182, i32* %init_range_length184, align 4, !dbg !3026
  %184 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !3027
  %pb185 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %184, i32 0, i32 4, !dbg !3028
  %call186 = call i32 @avio_open_dyn_buf(%struct.AVIOContext** %pb185), !dbg !3029
  %185 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3030
  %packets_written187 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %185, i32 0, i32 6, !dbg !3031
  store i32 0, i32* %packets_written187, align 8, !dbg !3032
  %186 = load i32, i32* %range_length, align 4, !dbg !3033
  %conv188 = sext i32 %186 to i64, !dbg !3033
  %187 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3034
  %start_pos189 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %187, i32 0, i32 17, !dbg !3035
  store i64 %conv188, i64* %start_pos189, align 8, !dbg !3036
  %188 = load i32, i32* %byterange_mode, align 4, !dbg !3037
  %tobool190 = icmp ne i32 %188, 0, !dbg !3037
  br i1 %tobool190, label %if.end194, label %if.then191, !dbg !3039

if.then191:                                       ; preds = %if.then180
  %189 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3040
  %190 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3042
  %out192 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %190, i32 0, i32 5, !dbg !3043
  call void @ff_format_io_close(%struct.AVFormatContext* %189, %struct.AVIOContext** %out192), !dbg !3044
  %191 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3045
  %192 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3046
  %out193 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %192, i32 0, i32 5, !dbg !3047
  %193 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3048
  %base_output_dirname = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %193, i32 0, i32 33, !dbg !3049
  %194 = load i8*, i8** %base_output_dirname, align 8, !dbg !3049
  call void @hlsenc_io_close(%struct.AVFormatContext* %191, %struct.AVIOContext** %out193, i8* %194), !dbg !3050
  br label %if.end194, !dbg !3051

if.end194:                                        ; preds = %if.then191, %if.then180
  br label %if.end195, !dbg !3052

if.end195:                                        ; preds = %if.end194, %if.then178
  br label %if.end201, !dbg !3053

if.else196:                                       ; preds = %if.end174
  %195 = load i32, i32* %byterange_mode, align 4, !dbg !3054
  %tobool197 = icmp ne i32 %195, 0, !dbg !3054
  br i1 %tobool197, label %if.end200, label %if.then198, !dbg !3057

if.then198:                                       ; preds = %if.else196
  %196 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3058
  %197 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !3060
  %pb199 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %197, i32 0, i32 4, !dbg !3061
  %198 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !3062
  %url = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %198, i32 0, i32 9, !dbg !3063
  %199 = load i8*, i8** %url, align 8, !dbg !3063
  call void @hlsenc_io_close(%struct.AVFormatContext* %196, %struct.AVIOContext** %pb199, i8* %199), !dbg !3064
  br label %if.end200, !dbg !3065

if.end200:                                        ; preds = %if.then198, %if.else196
  br label %if.end201

if.end201:                                        ; preds = %if.end200, %if.end195
  %200 = load i32, i32* %byterange_mode, align 4, !dbg !3066
  %tobool202 = icmp ne i32 %200, 0, !dbg !3066
  br i1 %tobool202, label %if.end212, label %if.then203, !dbg !3068

if.then203:                                       ; preds = %if.end201
  %201 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3069
  %vtt_avf204 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %201, i32 0, i32 9, !dbg !3072
  %202 = load %struct.AVFormatContext*, %struct.AVFormatContext** %vtt_avf204, align 8, !dbg !3072
  %tobool205 = icmp ne %struct.AVFormatContext* %202, null, !dbg !3069
  br i1 %tobool205, label %if.then206, label %if.end211, !dbg !3073

if.then206:                                       ; preds = %if.then203
  %203 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3074
  %204 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3076
  %vtt_avf207 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %204, i32 0, i32 9, !dbg !3077
  %205 = load %struct.AVFormatContext*, %struct.AVFormatContext** %vtt_avf207, align 8, !dbg !3077
  %pb208 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %205, i32 0, i32 4, !dbg !3078
  %206 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3079
  %vtt_avf209 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %206, i32 0, i32 9, !dbg !3080
  %207 = load %struct.AVFormatContext*, %struct.AVFormatContext** %vtt_avf209, align 8, !dbg !3080
  %url210 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %207, i32 0, i32 9, !dbg !3081
  %208 = load i8*, i8** %url210, align 8, !dbg !3081
  call void @hlsenc_io_close(%struct.AVFormatContext* %203, %struct.AVIOContext** %pb208, i8* %208), !dbg !3082
  br label %if.end211, !dbg !3083

if.end211:                                        ; preds = %if.then206, %if.then203
  br label %if.end212, !dbg !3084

if.end212:                                        ; preds = %if.end211, %if.end201
  %209 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !3085
  %url213 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %209, i32 0, i32 9, !dbg !3087
  %210 = load i8*, i8** %url213, align 8, !dbg !3087
  %arrayidx214 = getelementptr inbounds i8, i8* %210, i64 0, !dbg !3085
  %211 = load i8, i8* %arrayidx214, align 1, !dbg !3085
  %tobool215 = icmp ne i8 %211, 0, !dbg !3085
  br i1 %tobool215, label %if.then216, label %if.end229, !dbg !3088

if.then216:                                       ; preds = %if.end212
  %212 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !3089
  %url217 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %212, i32 0, i32 9, !dbg !3091
  %213 = load i8*, i8** %url217, align 8, !dbg !3091
  %call218 = call i8* @avio_find_protocol_name(i8* %213), !dbg !3092
  store i8* %call218, i8** %proto, align 8, !dbg !3093
  %214 = load i8*, i8** %proto, align 8, !dbg !3094
  %tobool219 = icmp ne i8* %214, null, !dbg !3094
  br i1 %tobool219, label %land.lhs.true220, label %land.end227, !dbg !3095

land.lhs.true220:                                 ; preds = %if.then216
  %215 = load i8*, i8** %proto, align 8, !dbg !3096
  %call221 = call i32 @strcmp(i8* %215, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.136, i32 0, i32 0)) #11, !dbg !3098
  %tobool222 = icmp ne i32 %call221, 0, !dbg !3098
  br i1 %tobool222, label %land.end227, label %land.rhs223, !dbg !3099

land.rhs223:                                      ; preds = %land.lhs.true220
  %216 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3100
  %flags224 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %216, i32 0, i32 8, !dbg !3102
  %217 = load i32, i32* %flags224, align 8, !dbg !3102
  %and225 = and i32 %217, 2048, !dbg !3103
  %tobool226 = icmp ne i32 %and225, 0, !dbg !3104
  br label %land.end227

land.end227:                                      ; preds = %land.rhs223, %land.lhs.true220, %if.then216
  %218 = phi i1 [ false, %land.lhs.true220 ], [ false, %if.then216 ], [ %tobool226, %land.rhs223 ]
  %land.ext228 = zext i1 %218 to i32, !dbg !3105
  store i32 %land.ext228, i32* %use_temp_file, align 4, !dbg !3107
  br label %if.end229, !dbg !3108

if.end229:                                        ; preds = %land.end227, %if.end212
  %219 = load i32, i32* %use_temp_file, align 4, !dbg !3109
  %tobool230 = icmp ne i32 %219, 0, !dbg !3109
  br i1 %tobool230, label %if.then231, label %if.end255, !dbg !3111

if.then231:                                       ; preds = %if.end229
  %220 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3112
  %flags232 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %220, i32 0, i32 8, !dbg !3115
  %221 = load i32, i32* %flags232, align 8, !dbg !3115
  %and233 = and i32 %221, 1, !dbg !3116
  %tobool234 = icmp ne i32 %and233, 0, !dbg !3116
  br i1 %tobool234, label %lor.lhs.false, label %if.then238, !dbg !3117

lor.lhs.false:                                    ; preds = %if.then231
  %222 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3118
  %max_seg_size235 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %222, i32 0, i32 17, !dbg !3120
  %223 = load i64, i64* %max_seg_size235, align 8, !dbg !3120
  %cmp236 = icmp sle i64 %223, 0, !dbg !3121
  br i1 %cmp236, label %if.then238, label %if.end254, !dbg !3122

if.then238:                                       ; preds = %lor.lhs.false, %if.then231
  %224 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3123
  %avf239 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %224, i32 0, i32 8, !dbg !3125
  %225 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf239, align 8, !dbg !3125
  %oformat = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %225, i32 0, i32 2, !dbg !3126
  %226 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat, align 8, !dbg !3126
  %priv_class = getelementptr inbounds %struct.AVOutputFormat, %struct.AVOutputFormat* %226, i32 0, i32 9, !dbg !3127
  %227 = load %struct.AVClass*, %struct.AVClass** %priv_class, align 8, !dbg !3127
  %tobool240 = icmp ne %struct.AVClass* %227, null, !dbg !3123
  br i1 %tobool240, label %land.lhs.true241, label %if.end253, !dbg !3128

land.lhs.true241:                                 ; preds = %if.then238
  %228 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3129
  %avf242 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %228, i32 0, i32 8, !dbg !3131
  %229 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf242, align 8, !dbg !3131
  %priv_data243 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %229, i32 0, i32 3, !dbg !3132
  %230 = load i8*, i8** %priv_data243, align 8, !dbg !3132
  %tobool244 = icmp ne i8* %230, null, !dbg !3129
  br i1 %tobool244, label %land.lhs.true245, label %if.end253, !dbg !3133

land.lhs.true245:                                 ; preds = %land.lhs.true241
  %231 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3134
  %segment_type246 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %231, i32 0, i32 12, !dbg !3136
  %232 = load i32, i32* %segment_type246, align 8, !dbg !3136
  %cmp247 = icmp ne i32 %232, 1, !dbg !3137
  br i1 %cmp247, label %if.then249, label %if.end253, !dbg !3138

if.then249:                                       ; preds = %land.lhs.true245
  %233 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3139
  %avf250 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %233, i32 0, i32 8, !dbg !3140
  %234 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf250, align 8, !dbg !3140
  %priv_data251 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %234, i32 0, i32 3, !dbg !3141
  %235 = load i8*, i8** %priv_data251, align 8, !dbg !3141
  %call252 = call i32 @av_opt_set(i8* %235, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.138, i32 0, i32 0), i32 0), !dbg !3142
  br label %if.end253, !dbg !3142

if.end253:                                        ; preds = %if.then249, %land.lhs.true245, %land.lhs.true241, %if.then238
  br label %if.end254, !dbg !3143

if.end254:                                        ; preds = %if.end253, %lor.lhs.false
  br label %if.end255, !dbg !3145

if.end255:                                        ; preds = %if.end254, %if.end229
  %236 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3146
  %segment_type256 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %236, i32 0, i32 12, !dbg !3148
  %237 = load i32, i32* %segment_type256, align 8, !dbg !3148
  %cmp257 = icmp eq i32 %237, 1, !dbg !3149
  br i1 %cmp257, label %if.then259, label %if.end294, !dbg !3150

if.then259:                                       ; preds = %if.end255
  %238 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3151
  %flags260 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %238, i32 0, i32 8, !dbg !3154
  %239 = load i32, i32* %flags260, align 8, !dbg !3154
  %and261 = and i32 %239, 1, !dbg !3155
  %tobool262 = icmp ne i32 %and261, 0, !dbg !3155
  br i1 %tobool262, label %if.then263, label %if.else271, !dbg !3156

if.then263:                                       ; preds = %if.then259
  %240 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3157
  %call264 = call i32 @flush_dynbuf(%struct.VariantStream* %240, i32* %range_length), !dbg !3159
  store i32 %call264, i32* %ret, align 4, !dbg !3160
  %241 = load i32, i32* %ret, align 4, !dbg !3161
  %cmp265 = icmp slt i32 %241, 0, !dbg !3163
  br i1 %cmp265, label %if.then267, label %if.end268, !dbg !3164

if.then267:                                       ; preds = %if.then263
  %242 = load i32, i32* %ret, align 4, !dbg !3165
  store i32 %242, i32* %retval, align 4, !dbg !3167
  br label %return, !dbg !3167

if.end268:                                        ; preds = %if.then263
  %243 = load i32, i32* %range_length, align 4, !dbg !3168
  %conv269 = sext i32 %243 to i64, !dbg !3168
  %244 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3169
  %size270 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %244, i32 0, i32 18, !dbg !3170
  store i64 %conv269, i64* %size270, align 8, !dbg !3171
  br label %if.end293, !dbg !3172

if.else271:                                       ; preds = %if.then259
  %245 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3173
  %246 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3175
  call void @set_http_options(%struct.AVFormatContext* %245, %struct.AVDictionary** %options, %struct.HLSContext* %246), !dbg !3176
  %247 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3177
  %248 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3178
  %out272 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %248, i32 0, i32 5, !dbg !3179
  %249 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3180
  %avf273 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %249, i32 0, i32 8, !dbg !3181
  %250 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf273, align 8, !dbg !3181
  %url274 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %250, i32 0, i32 9, !dbg !3182
  %251 = load i8*, i8** %url274, align 8, !dbg !3182
  %call275 = call i32 @hlsenc_io_open(%struct.AVFormatContext* %247, %struct.AVIOContext** %out272, i8* %251, %struct.AVDictionary** %options), !dbg !3183
  store i32 %call275, i32* %ret, align 4, !dbg !3184
  %252 = load i32, i32* %ret, align 4, !dbg !3185
  %cmp276 = icmp slt i32 %252, 0, !dbg !3187
  br i1 %cmp276, label %if.then278, label %if.end285, !dbg !3188

if.then278:                                       ; preds = %if.else271
  %253 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3189
  %254 = bitcast %struct.AVFormatContext* %253 to i8*, !dbg !3189
  %255 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3191
  %ignore_io_errors = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %255, i32 0, i32 52, !dbg !3192
  %256 = load i32, i32* %ignore_io_errors, align 8, !dbg !3192
  %tobool279 = icmp ne i32 %256, 0, !dbg !3191
  %cond = select i1 %tobool279, i32 24, i32 16, !dbg !3191
  %257 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3193
  %avf280 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %257, i32 0, i32 8, !dbg !3194
  %258 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf280, align 8, !dbg !3194
  %url281 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %258, i32 0, i32 9, !dbg !3195
  %259 = load i8*, i8** %url281, align 8, !dbg !3195
  call void (i8*, i32, i8*, ...) @av_log(i8* %254, i32 %cond, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.139, i32 0, i32 0), i8* %259), !dbg !3196
  %260 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3197
  %ignore_io_errors282 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %260, i32 0, i32 52, !dbg !3198
  %261 = load i32, i32* %ignore_io_errors282, align 8, !dbg !3198
  %tobool283 = icmp ne i32 %261, 0, !dbg !3197
  br i1 %tobool283, label %cond.true, label %cond.false, !dbg !3197

cond.true:                                        ; preds = %if.then278
  br label %cond.end, !dbg !3199

cond.false:                                       ; preds = %if.then278
  %262 = load i32, i32* %ret, align 4, !dbg !3201
  br label %cond.end, !dbg !3203

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond284 = phi i32 [ 0, %cond.true ], [ %262, %cond.false ], !dbg !3204
  store i32 %cond284, i32* %retval, align 4, !dbg !3206
  br label %return, !dbg !3206

if.end285:                                        ; preds = %if.else271
  %263 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3207
  %out286 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %263, i32 0, i32 5, !dbg !3208
  %264 = load %struct.AVIOContext*, %struct.AVIOContext** %out286, align 8, !dbg !3208
  call void @write_styp(%struct.AVIOContext* %264), !dbg !3209
  %265 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3210
  %call287 = call i32 @flush_dynbuf(%struct.VariantStream* %265, i32* %range_length), !dbg !3211
  store i32 %call287, i32* %ret, align 4, !dbg !3212
  %266 = load i32, i32* %ret, align 4, !dbg !3213
  %cmp288 = icmp slt i32 %266, 0, !dbg !3215
  br i1 %cmp288, label %if.then290, label %if.end291, !dbg !3216

if.then290:                                       ; preds = %if.end285
  %267 = load i32, i32* %ret, align 4, !dbg !3217
  store i32 %267, i32* %retval, align 4, !dbg !3219
  br label %return, !dbg !3219

if.end291:                                        ; preds = %if.end285
  %268 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3220
  %269 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3221
  %out292 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %269, i32 0, i32 5, !dbg !3222
  call void @ff_format_io_close(%struct.AVFormatContext* %268, %struct.AVIOContext** %out292), !dbg !3223
  br label %if.end293

if.end293:                                        ; preds = %if.end291, %if.end268
  br label %if.end294, !dbg !3224

if.end294:                                        ; preds = %if.end293, %if.end255
  %270 = load i32, i32* %use_temp_file, align 4, !dbg !3225
  %tobool295 = icmp ne i32 %270, 0, !dbg !3225
  br i1 %tobool295, label %land.lhs.true296, label %if.end302, !dbg !3227

land.lhs.true296:                                 ; preds = %if.end294
  %271 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3228
  %flags297 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %271, i32 0, i32 8, !dbg !3230
  %272 = load i32, i32* %flags297, align 8, !dbg !3230
  %and298 = and i32 %272, 1, !dbg !3231
  %tobool299 = icmp ne i32 %and298, 0, !dbg !3231
  br i1 %tobool299, label %if.end302, label %if.then300, !dbg !3232

if.then300:                                       ; preds = %land.lhs.true296
  %273 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3233
  %274 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !3235
  %call301 = call i32 @hls_rename_temp_file(%struct.AVFormatContext* %273, %struct.AVFormatContext* %274), !dbg !3236
  br label %if.end302, !dbg !3237

if.end302:                                        ; preds = %if.then300, %land.lhs.true296, %if.end294
  %275 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3238
  %avf303 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %275, i32 0, i32 8, !dbg !3239
  %276 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf303, align 8, !dbg !3239
  %url304 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %276, i32 0, i32 9, !dbg !3240
  %277 = load i8*, i8** %url304, align 8, !dbg !3240
  %call305 = call noalias i8* @av_strdup(i8* %277), !dbg !3241
  store i8* %call305, i8** %old_filename, align 8, !dbg !3242
  %278 = load i8*, i8** %old_filename, align 8, !dbg !3243
  %tobool306 = icmp ne i8* %278, null, !dbg !3243
  br i1 %tobool306, label %if.end308, label %if.then307, !dbg !3245

if.then307:                                       ; preds = %if.end302
  store i32 -12, i32* %retval, align 4, !dbg !3246
  br label %return, !dbg !3246

if.end308:                                        ; preds = %if.end302
  %279 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3248
  %start_pos309 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %279, i32 0, i32 17, !dbg !3250
  %280 = load i64, i64* %start_pos309, align 8, !dbg !3250
  %tobool310 = icmp ne i64 %280, 0, !dbg !3248
  br i1 %tobool310, label %if.then315, label %lor.lhs.false311, !dbg !3251

lor.lhs.false311:                                 ; preds = %if.end308
  %281 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3252
  %segment_type312 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %281, i32 0, i32 12, !dbg !3254
  %282 = load i32, i32* %segment_type312, align 8, !dbg !3254
  %cmp313 = icmp ne i32 %282, 1, !dbg !3255
  br i1 %cmp313, label %if.then315, label %if.end327, !dbg !3256

if.then315:                                       ; preds = %lor.lhs.false311, %if.end308
  %283 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3257
  %284 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3259
  %285 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3260
  %286 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3261
  %duration316 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %286, i32 0, i32 16, !dbg !3262
  %287 = load double, double* %duration316, align 8, !dbg !3262
  %288 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3263
  %start_pos317 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %288, i32 0, i32 17, !dbg !3264
  %289 = load i64, i64* %start_pos317, align 8, !dbg !3264
  %290 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3265
  %size318 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %290, i32 0, i32 18, !dbg !3266
  %291 = load i64, i64* %size318, align 8, !dbg !3266
  %call319 = call i32 @hls_append_segment(%struct.AVFormatContext* %283, %struct.HLSContext* %284, %struct.VariantStream* %285, double %287, i64 %289, i64 %291), !dbg !3267
  store i32 %call319, i32* %ret, align 4, !dbg !3268
  %292 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3269
  %pts320 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %292, i32 0, i32 1, !dbg !3270
  %293 = load i64, i64* %pts320, align 8, !dbg !3270
  %294 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3271
  %end_pts321 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %294, i32 0, i32 15, !dbg !3272
  store i64 %293, i64* %end_pts321, align 8, !dbg !3273
  %295 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3274
  %duration322 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %295, i32 0, i32 16, !dbg !3275
  store double 0.000000e+00, double* %duration322, align 8, !dbg !3276
  %296 = load i32, i32* %ret, align 4, !dbg !3277
  %cmp323 = icmp slt i32 %296, 0, !dbg !3279
  br i1 %cmp323, label %if.then325, label %if.end326, !dbg !3280

if.then325:                                       ; preds = %if.then315
  %297 = load i8*, i8** %old_filename, align 8, !dbg !3281
  call void @av_free(i8* %297), !dbg !3283
  %298 = load i32, i32* %ret, align 4, !dbg !3284
  store i32 %298, i32* %retval, align 4, !dbg !3285
  br label %return, !dbg !3285

if.end326:                                        ; preds = %if.then315
  br label %if.end327, !dbg !3286

if.end327:                                        ; preds = %if.end326, %lor.lhs.false311
  %299 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3287
  %segment_type328 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %299, i32 0, i32 12, !dbg !3289
  %300 = load i32, i32* %segment_type328, align 8, !dbg !3289
  %cmp329 = icmp ne i32 %300, 1, !dbg !3290
  br i1 %cmp329, label %if.then331, label %if.else333, !dbg !3291

if.then331:                                       ; preds = %if.end327
  %301 = load i64, i64* %new_start_pos, align 8, !dbg !3292
  %302 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3294
  %start_pos332 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %302, i32 0, i32 17, !dbg !3295
  store i64 %301, i64* %start_pos332, align 8, !dbg !3296
  br label %if.end337, !dbg !3297

if.else333:                                       ; preds = %if.end327
  %303 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3298
  %size334 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %303, i32 0, i32 18, !dbg !3300
  %304 = load i64, i64* %size334, align 8, !dbg !3300
  %305 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3301
  %start_pos335 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %305, i32 0, i32 17, !dbg !3302
  %306 = load i64, i64* %start_pos335, align 8, !dbg !3303
  %add336 = add nsw i64 %306, %304, !dbg !3303
  store i64 %add336, i64* %start_pos335, align 8, !dbg !3303
  br label %if.end337

if.end337:                                        ; preds = %if.else333, %if.then331
  %307 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3304
  %flags338 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %307, i32 0, i32 8, !dbg !3306
  %308 = load i32, i32* %flags338, align 8, !dbg !3306
  %and339 = and i32 %308, 1, !dbg !3307
  %tobool340 = icmp ne i32 %and339, 0, !dbg !3307
  br i1 %tobool340, label %if.then341, label %if.else344, !dbg !3308

if.then341:                                       ; preds = %if.end337
  %309 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3309
  %number342 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %309, i32 0, i32 1, !dbg !3311
  %310 = load i32, i32* %number342, align 4, !dbg !3312
  %inc343 = add i32 %310, 1, !dbg !3312
  store i32 %inc343, i32* %number342, align 4, !dbg !3312
  br label %if.end365, !dbg !3313

if.else344:                                       ; preds = %if.end337
  %311 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3314
  %max_seg_size345 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %311, i32 0, i32 17, !dbg !3317
  %312 = load i64, i64* %max_seg_size345, align 8, !dbg !3317
  %cmp346 = icmp sgt i64 %312, 0, !dbg !3318
  br i1 %cmp346, label %if.then348, label %if.else362, !dbg !3314

if.then348:                                       ; preds = %if.else344
  %313 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3319
  %start_pos349 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %313, i32 0, i32 17, !dbg !3322
  %314 = load i64, i64* %start_pos349, align 8, !dbg !3322
  %315 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3323
  %max_seg_size350 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %315, i32 0, i32 17, !dbg !3324
  %316 = load i64, i64* %max_seg_size350, align 8, !dbg !3324
  %cmp351 = icmp sge i64 %314, %316, !dbg !3325
  br i1 %cmp351, label %if.then353, label %if.end359, !dbg !3326

if.then353:                                       ; preds = %if.then348
  %317 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3327
  %sequence354 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %317, i32 0, i32 2, !dbg !3329
  %318 = load i64, i64* %sequence354, align 8, !dbg !3330
  %inc355 = add nsw i64 %318, 1, !dbg !3330
  store i64 %inc355, i64* %sequence354, align 8, !dbg !3330
  %319 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3331
  %320 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3332
  %321 = load i8*, i8** %old_filename, align 8, !dbg !3333
  call void @sls_flag_file_rename(%struct.HLSContext* %319, %struct.VariantStream* %320, i8* %321), !dbg !3334
  %322 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3335
  %323 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3336
  %call356 = call i32 @hls_start(%struct.AVFormatContext* %322, %struct.VariantStream* %323), !dbg !3337
  store i32 %call356, i32* %ret, align 4, !dbg !3338
  %324 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3339
  %start_pos357 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %324, i32 0, i32 17, !dbg !3340
  store i64 0, i64* %start_pos357, align 8, !dbg !3341
  %325 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3342
  %number358 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %325, i32 0, i32 1, !dbg !3343
  %326 = load i32, i32* %number358, align 4, !dbg !3344
  %dec = add i32 %326, -1, !dbg !3344
  store i32 %dec, i32* %number358, align 4, !dbg !3344
  br label %if.end359, !dbg !3345

if.end359:                                        ; preds = %if.then353, %if.then348
  %327 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3346
  %number360 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %327, i32 0, i32 1, !dbg !3347
  %328 = load i32, i32* %number360, align 4, !dbg !3348
  %inc361 = add i32 %328, 1, !dbg !3348
  store i32 %inc361, i32* %number360, align 4, !dbg !3348
  br label %if.end364, !dbg !3349

if.else362:                                       ; preds = %if.else344
  %329 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3350
  %330 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3352
  %331 = load i8*, i8** %old_filename, align 8, !dbg !3353
  call void @sls_flag_file_rename(%struct.HLSContext* %329, %struct.VariantStream* %330, i8* %331), !dbg !3354
  %332 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3355
  %333 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3356
  %call363 = call i32 @hls_start(%struct.AVFormatContext* %332, %struct.VariantStream* %333), !dbg !3357
  store i32 %call363, i32* %ret, align 4, !dbg !3358
  br label %if.end364

if.end364:                                        ; preds = %if.else362, %if.end359
  br label %if.end365

if.end365:                                        ; preds = %if.end364, %if.then341
  %334 = load i8*, i8** %old_filename, align 8, !dbg !3359
  call void @av_free(i8* %334), !dbg !3360
  %335 = load i32, i32* %ret, align 4, !dbg !3361
  %cmp366 = icmp slt i32 %335, 0, !dbg !3363
  br i1 %cmp366, label %if.then368, label %if.end369, !dbg !3364

if.then368:                                       ; preds = %if.end365
  %336 = load i32, i32* %ret, align 4, !dbg !3365
  store i32 %336, i32* %retval, align 4, !dbg !3367
  br label %return, !dbg !3367

if.end369:                                        ; preds = %if.end365
  %337 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3368
  %pl_type = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %337, i32 0, i32 9, !dbg !3370
  %338 = load i32, i32* %pl_type, align 4, !dbg !3370
  %cmp370 = icmp ne i32 %338, 2, !dbg !3371
  br i1 %cmp370, label %if.then372, label %if.end378, !dbg !3372

if.then372:                                       ; preds = %if.end369
  %339 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3373
  %340 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3376
  %call373 = call i32 @hls_window(%struct.AVFormatContext* %339, i32 0, %struct.VariantStream* %340), !dbg !3377
  store i32 %call373, i32* %ret, align 4, !dbg !3378
  %cmp374 = icmp slt i32 %call373, 0, !dbg !3379
  br i1 %cmp374, label %if.then376, label %if.end377, !dbg !3380

if.then376:                                       ; preds = %if.then372
  %341 = load i32, i32* %ret, align 4, !dbg !3381
  store i32 %341, i32* %retval, align 4, !dbg !3383
  br label %return, !dbg !3383

if.end377:                                        ; preds = %if.then372
  br label %if.end378, !dbg !3384

if.end378:                                        ; preds = %if.end377, %if.end369
  br label %if.end379, !dbg !3385

if.end379:                                        ; preds = %if.end378, %land.lhs.true147, %land.lhs.true145, %if.end143
  %342 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3386
  %packets_written380 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %342, i32 0, i32 6, !dbg !3387
  %343 = load i32, i32* %packets_written380, align 8, !dbg !3388
  %inc381 = add nsw i32 %343, 1, !dbg !3388
  store i32 %inc381, i32* %packets_written380, align 8, !dbg !3388
  %344 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !3389
  %pb382 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %344, i32 0, i32 4, !dbg !3391
  %345 = load %struct.AVIOContext*, %struct.AVIOContext** %pb382, align 8, !dbg !3391
  %tobool383 = icmp ne %struct.AVIOContext* %345, null, !dbg !3389
  br i1 %tobool383, label %if.then384, label %if.end390, !dbg !3392

if.then384:                                       ; preds = %if.end379
  %346 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !3393
  %347 = load i32, i32* %stream_index1, align 4, !dbg !3395
  %348 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3396
  %349 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3397
  %call385 = call i32 @ff_write_chained(%struct.AVFormatContext* %346, i32 %347, %struct.AVPacket* %348, %struct.AVFormatContext* %349, i32 0), !dbg !3398
  store i32 %call385, i32* %ret, align 4, !dbg !3399
  %350 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3400
  %ignore_io_errors386 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %350, i32 0, i32 52, !dbg !3402
  %351 = load i32, i32* %ignore_io_errors386, align 8, !dbg !3402
  %tobool387 = icmp ne i32 %351, 0, !dbg !3400
  br i1 %tobool387, label %if.then388, label %if.end389, !dbg !3403

if.then388:                                       ; preds = %if.then384
  store i32 0, i32* %ret, align 4, !dbg !3404
  br label %if.end389, !dbg !3405

if.end389:                                        ; preds = %if.then388, %if.then384
  br label %if.end390, !dbg !3406

if.end390:                                        ; preds = %if.end389, %if.end379
  %352 = load i32, i32* %ret, align 4, !dbg !3407
  store i32 %352, i32* %retval, align 4, !dbg !3408
  br label %return, !dbg !3408

return:                                           ; preds = %if.end390, %if.then376, %if.then368, %if.then325, %if.then307, %if.then290, %cond.end, %if.then267, %if.then20
  %353 = load i32, i32* %retval, align 4, !dbg !3409
  ret i32 %353, !dbg !3409
}

; Function Attrs: nounwind uwtable
define internal i32 @hls_write_trailer(%struct.AVFormatContext* %s) #0 !dbg !3410 {
entry:
  %s.addr.i121 = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i121, metadata !2599, metadata !2335), !dbg !3411
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2599, metadata !2335), !dbg !3418
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %hls = alloca %struct.HLSContext*, align 8
  %oc = alloca %struct.AVFormatContext*, align 8
  %vtt_oc = alloca %struct.AVFormatContext*, align 8
  %old_filename = alloca i8*, align 8
  %proto = alloca i8*, align 8
  %use_temp_file = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %vs = alloca %struct.VariantStream*, align 8
  %range_length = alloca i32, align 4
  %buffer = alloca i8*, align 8
  %range_length6 = alloca i32, align 4
  %byterange_mode = alloca i32, align 4
  %ccs = alloca %struct.ClosedCaptionsStream*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !3424, metadata !2335), !dbg !3425
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %hls, metadata !3426, metadata !2335), !dbg !3427
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3428
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !3429
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3429
  %2 = bitcast i8* %1 to %struct.HLSContext*, !dbg !3428
  store %struct.HLSContext* %2, %struct.HLSContext** %hls, align 8, !dbg !3427
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %oc, metadata !3430, metadata !2335), !dbg !3431
  store %struct.AVFormatContext* null, %struct.AVFormatContext** %oc, align 8, !dbg !3431
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %vtt_oc, metadata !3432, metadata !2335), !dbg !3433
  store %struct.AVFormatContext* null, %struct.AVFormatContext** %vtt_oc, align 8, !dbg !3433
  call void @llvm.dbg.declare(metadata i8** %old_filename, metadata !3434, metadata !2335), !dbg !3435
  store i8* null, i8** %old_filename, align 8, !dbg !3435
  call void @llvm.dbg.declare(metadata i8** %proto, metadata !3436, metadata !2335), !dbg !3437
  store i8* null, i8** %proto, align 8, !dbg !3437
  call void @llvm.dbg.declare(metadata i32* %use_temp_file, metadata !3438, metadata !2335), !dbg !3439
  store i32 0, i32* %use_temp_file, align 4, !dbg !3439
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3440, metadata !2335), !dbg !3441
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3442, metadata !2335), !dbg !3443
  store i32 0, i32* %ret, align 4, !dbg !3443
  call void @llvm.dbg.declare(metadata %struct.VariantStream** %vs, metadata !3444, metadata !2335), !dbg !3445
  store %struct.VariantStream* null, %struct.VariantStream** %vs, align 8, !dbg !3445
  store i32 0, i32* %i, align 4, !dbg !3446
  br label %for.cond, !dbg !3447

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !3448
  %4 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3450
  %nb_varstreams = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %4, i32 0, i32 38, !dbg !3451
  %5 = load i32, i32* %nb_varstreams, align 8, !dbg !3451
  %cmp = icmp ult i32 %3, %5, !dbg !3452
  br i1 %cmp, label %for.body, label %for.end, !dbg !3453

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !3454
  %idxprom = sext i32 %6 to i64, !dbg !3455
  %7 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3455
  %var_streams = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %7, i32 0, i32 37, !dbg !3456
  %8 = load %struct.VariantStream*, %struct.VariantStream** %var_streams, align 8, !dbg !3456
  %arrayidx = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %8, i64 %idxprom, !dbg !3455
  store %struct.VariantStream* %arrayidx, %struct.VariantStream** %vs, align 8, !dbg !3457
  %9 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3458
  %avf = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %9, i32 0, i32 8, !dbg !3459
  %10 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf, align 8, !dbg !3459
  store %struct.AVFormatContext* %10, %struct.AVFormatContext** %oc, align 8, !dbg !3460
  %11 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3461
  %vtt_avf = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %11, i32 0, i32 9, !dbg !3462
  %12 = load %struct.AVFormatContext*, %struct.AVFormatContext** %vtt_avf, align 8, !dbg !3462
  store %struct.AVFormatContext* %12, %struct.AVFormatContext** %vtt_oc, align 8, !dbg !3463
  %13 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3464
  %avf1 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %13, i32 0, i32 8, !dbg !3465
  %14 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf1, align 8, !dbg !3465
  %url = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %14, i32 0, i32 9, !dbg !3466
  %15 = load i8*, i8** %url, align 8, !dbg !3466
  %call = call noalias i8* @av_strdup(i8* %15), !dbg !3467
  store i8* %call, i8** %old_filename, align 8, !dbg !3468
  store i32 0, i32* %use_temp_file, align 4, !dbg !3469
  %16 = load i8*, i8** %old_filename, align 8, !dbg !3470
  %tobool = icmp ne i8* %16, null, !dbg !3470
  br i1 %tobool, label %if.end, label %if.then, !dbg !3472

if.then:                                          ; preds = %for.body
  store i32 -12, i32* %retval, align 4, !dbg !3473
  br label %return, !dbg !3473

if.end:                                           ; preds = %for.body
  %17 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3475
  %segment_type = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %17, i32 0, i32 12, !dbg !3477
  %18 = load i32, i32* %segment_type, align 8, !dbg !3477
  %cmp2 = icmp eq i32 %18, 1, !dbg !3478
  br i1 %cmp2, label %if.then3, label %if.end46, !dbg !3479

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %range_length, metadata !3480, metadata !2335), !dbg !3482
  store i32 0, i32* %range_length, align 4, !dbg !3482
  %19 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3483
  %init_range_length = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %19, i32 0, i32 7, !dbg !3485
  %20 = load i32, i32* %init_range_length, align 4, !dbg !3485
  %tobool4 = icmp ne i32 %20, 0, !dbg !3483
  br i1 %tobool4, label %if.end22, label %if.then5, !dbg !3486

if.then5:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata i8** %buffer, metadata !3487, metadata !2335), !dbg !3489
  store i8* null, i8** %buffer, align 8, !dbg !3489
  call void @llvm.dbg.declare(metadata i32* %range_length6, metadata !3490, metadata !2335), !dbg !3491
  call void @llvm.dbg.declare(metadata i32* %byterange_mode, metadata !3492, metadata !2335), !dbg !3493
  %21 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3494
  %avf7 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %21, i32 0, i32 8, !dbg !3495
  %22 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf7, align 8, !dbg !3495
  %call8 = call i32 @av_write_frame(%struct.AVFormatContext* %22, %struct.AVPacket* null), !dbg !3496
  %23 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !3497
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %23, i32 0, i32 4, !dbg !3498
  %24 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3498
  call void @avio_flush(%struct.AVIOContext* %24), !dbg !3499
  %25 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !3500
  %pb9 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %25, i32 0, i32 4, !dbg !3501
  %26 = load %struct.AVIOContext*, %struct.AVIOContext** %pb9, align 8, !dbg !3501
  %call10 = call i32 @avio_close_dyn_buf(%struct.AVIOContext* %26, i8** %buffer), !dbg !3502
  store i32 %call10, i32* %range_length6, align 4, !dbg !3503
  %27 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3504
  %out = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %27, i32 0, i32 5, !dbg !3505
  %28 = load %struct.AVIOContext*, %struct.AVIOContext** %out, align 8, !dbg !3505
  %29 = load i8*, i8** %buffer, align 8, !dbg !3506
  %30 = load i32, i32* %range_length6, align 4, !dbg !3507
  call void @avio_write(%struct.AVIOContext* %28, i8* %29, i32 %30), !dbg !3508
  %31 = load i8*, i8** %buffer, align 8, !dbg !3509
  call void @av_free(i8* %31), !dbg !3510
  %32 = load i32, i32* %range_length6, align 4, !dbg !3511
  %33 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3512
  %init_range_length11 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %33, i32 0, i32 7, !dbg !3513
  store i32 %32, i32* %init_range_length11, align 4, !dbg !3514
  %34 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !3515
  %pb12 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %34, i32 0, i32 4, !dbg !3516
  %call13 = call i32 @avio_open_dyn_buf(%struct.AVIOContext** %pb12), !dbg !3517
  %35 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3518
  %packets_written = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %35, i32 0, i32 6, !dbg !3519
  store i32 0, i32* %packets_written, align 8, !dbg !3520
  %36 = load i32, i32* %range_length6, align 4, !dbg !3521
  %conv = sext i32 %36 to i64, !dbg !3521
  %37 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3522
  %start_pos = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %37, i32 0, i32 17, !dbg !3523
  store i64 %conv, i64* %start_pos, align 8, !dbg !3524
  %38 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3525
  %flags = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %38, i32 0, i32 8, !dbg !3526
  %39 = load i32, i32* %flags, align 8, !dbg !3526
  %and = and i32 %39, 1, !dbg !3527
  %tobool14 = icmp ne i32 %and, 0, !dbg !3527
  br i1 %tobool14, label %lor.end, label %lor.rhs, !dbg !3528

lor.rhs:                                          ; preds = %if.then5
  %40 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3529
  %max_seg_size = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %40, i32 0, i32 17, !dbg !3531
  %41 = load i64, i64* %max_seg_size, align 8, !dbg !3531
  %cmp15 = icmp sgt i64 %41, 0, !dbg !3532
  br label %lor.end, !dbg !3533

lor.end:                                          ; preds = %lor.rhs, %if.then5
  %42 = phi i1 [ true, %if.then5 ], [ %cmp15, %lor.rhs ]
  %lor.ext = zext i1 %42 to i32, !dbg !3534
  store i32 %lor.ext, i32* %byterange_mode, align 4, !dbg !3536
  %43 = load i32, i32* %byterange_mode, align 4, !dbg !3537
  %tobool17 = icmp ne i32 %43, 0, !dbg !3537
  br i1 %tobool17, label %if.end21, label %if.then18, !dbg !3539

if.then18:                                        ; preds = %lor.end
  %44 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3540
  %45 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3542
  %out19 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %45, i32 0, i32 5, !dbg !3543
  call void @ff_format_io_close(%struct.AVFormatContext* %44, %struct.AVIOContext** %out19), !dbg !3544
  %46 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3545
  %47 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3546
  %out20 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %47, i32 0, i32 5, !dbg !3547
  %48 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3548
  %base_output_dirname = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %48, i32 0, i32 33, !dbg !3549
  %49 = load i8*, i8** %base_output_dirname, align 8, !dbg !3549
  call void @hlsenc_io_close(%struct.AVFormatContext* %46, %struct.AVIOContext** %out20, i8* %49), !dbg !3550
  br label %if.end21, !dbg !3551

if.end21:                                         ; preds = %if.then18, %lor.end
  br label %if.end22, !dbg !3552

if.end22:                                         ; preds = %if.end21, %if.then3
  %50 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3553
  %flags23 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %50, i32 0, i32 8, !dbg !3555
  %51 = load i32, i32* %flags23, align 8, !dbg !3555
  %and24 = and i32 %51, 1, !dbg !3556
  %tobool25 = icmp ne i32 %and24, 0, !dbg !3556
  br i1 %tobool25, label %if.end38, label %if.then26, !dbg !3557

if.then26:                                        ; preds = %if.end22
  %52 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3558
  %53 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3560
  %out27 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %53, i32 0, i32 5, !dbg !3561
  %54 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3562
  %avf28 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %54, i32 0, i32 8, !dbg !3563
  %55 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf28, align 8, !dbg !3563
  %url29 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %55, i32 0, i32 9, !dbg !3564
  %56 = load i8*, i8** %url29, align 8, !dbg !3564
  %call30 = call i32 @hlsenc_io_open(%struct.AVFormatContext* %52, %struct.AVIOContext** %out27, i8* %56, %struct.AVDictionary** null), !dbg !3565
  store i32 %call30, i32* %ret, align 4, !dbg !3566
  %57 = load i32, i32* %ret, align 4, !dbg !3567
  %cmp31 = icmp slt i32 %57, 0, !dbg !3569
  br i1 %cmp31, label %if.then33, label %if.end36, !dbg !3570

if.then33:                                        ; preds = %if.then26
  %58 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3571
  %59 = bitcast %struct.AVFormatContext* %58 to i8*, !dbg !3571
  %60 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3573
  %avf34 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %60, i32 0, i32 8, !dbg !3574
  %61 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf34, align 8, !dbg !3574
  %url35 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %61, i32 0, i32 9, !dbg !3575
  %62 = load i8*, i8** %url35, align 8, !dbg !3575
  call void (i8*, i32, i8*, ...) @av_log(i8* %59, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.139, i32 0, i32 0), i8* %62), !dbg !3576
  br label %failed, !dbg !3577

if.end36:                                         ; preds = %if.then26
  %63 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3578
  %out37 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %63, i32 0, i32 5, !dbg !3579
  %64 = load %struct.AVIOContext*, %struct.AVIOContext** %out37, align 8, !dbg !3579
  call void @write_styp(%struct.AVIOContext* %64), !dbg !3580
  br label %if.end38, !dbg !3581

if.end38:                                         ; preds = %if.end36, %if.end22
  %65 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3582
  %call39 = call i32 @flush_dynbuf(%struct.VariantStream* %65, i32* %range_length), !dbg !3583
  store i32 %call39, i32* %ret, align 4, !dbg !3584
  %66 = load i32, i32* %ret, align 4, !dbg !3585
  %cmp40 = icmp slt i32 %66, 0, !dbg !3587
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !3588

if.then42:                                        ; preds = %if.end38
  br label %failed, !dbg !3589

if.end43:                                         ; preds = %if.end38
  %67 = load i32, i32* %range_length, align 4, !dbg !3591
  %conv44 = sext i32 %67 to i64, !dbg !3591
  %68 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3592
  %size = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %68, i32 0, i32 18, !dbg !3593
  store i64 %conv44, i64* %size, align 8, !dbg !3594
  %69 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3595
  %70 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3596
  %out45 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %70, i32 0, i32 5, !dbg !3597
  call void @ff_format_io_close(%struct.AVFormatContext* %69, %struct.AVIOContext** %out45), !dbg !3598
  br label %if.end46, !dbg !3599

if.end46:                                         ; preds = %if.end43, %if.end
  br label %failed, !dbg !3600

failed:                                           ; preds = %if.end46, %if.then42, %if.then33
  %71 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !3602
  %call47 = call i32 @av_write_trailer(%struct.AVFormatContext* %71), !dbg !3603
  %72 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !3604
  %url48 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %72, i32 0, i32 9, !dbg !3606
  %73 = load i8*, i8** %url48, align 8, !dbg !3606
  %arrayidx49 = getelementptr inbounds i8, i8* %73, i64 0, !dbg !3604
  %74 = load i8, i8* %arrayidx49, align 1, !dbg !3604
  %tobool50 = icmp ne i8 %74, 0, !dbg !3604
  br i1 %tobool50, label %if.then51, label %if.end60, !dbg !3607

if.then51:                                        ; preds = %failed
  %75 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !3608
  %url52 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %75, i32 0, i32 9, !dbg !3610
  %76 = load i8*, i8** %url52, align 8, !dbg !3610
  %call53 = call i8* @avio_find_protocol_name(i8* %76), !dbg !3611
  store i8* %call53, i8** %proto, align 8, !dbg !3612
  %77 = load i8*, i8** %proto, align 8, !dbg !3613
  %tobool54 = icmp ne i8* %77, null, !dbg !3613
  br i1 %tobool54, label %land.lhs.true, label %land.end, !dbg !3614

land.lhs.true:                                    ; preds = %if.then51
  %78 = load i8*, i8** %proto, align 8, !dbg !3615
  %call55 = call i32 @strcmp(i8* %78, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.136, i32 0, i32 0)) #11, !dbg !3617
  %tobool56 = icmp ne i32 %call55, 0, !dbg !3617
  br i1 %tobool56, label %land.end, label %land.rhs, !dbg !3618

land.rhs:                                         ; preds = %land.lhs.true
  %79 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3619
  %flags57 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %79, i32 0, i32 8, !dbg !3621
  %80 = load i32, i32* %flags57, align 8, !dbg !3621
  %and58 = and i32 %80, 2048, !dbg !3622
  %tobool59 = icmp ne i32 %and58, 0, !dbg !3623
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %if.then51
  %81 = phi i1 [ false, %land.lhs.true ], [ false, %if.then51 ], [ %tobool59, %land.rhs ]
  %land.ext = zext i1 %81 to i32, !dbg !3624
  store i32 %land.ext, i32* %use_temp_file, align 4, !dbg !3626
  br label %if.end60, !dbg !3627

if.end60:                                         ; preds = %land.end, %failed
  %82 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !3628
  %pb61 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %82, i32 0, i32 4, !dbg !3629
  %83 = load %struct.AVIOContext*, %struct.AVIOContext** %pb61, align 8, !dbg !3629
  %tobool62 = icmp ne %struct.AVIOContext* %83, null, !dbg !3628
  br i1 %tobool62, label %if.then63, label %if.end92, !dbg !3630

if.then63:                                        ; preds = %if.end60
  %84 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3631
  %segment_type64 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %84, i32 0, i32 12, !dbg !3632
  %85 = load i32, i32* %segment_type64, align 8, !dbg !3632
  %cmp65 = icmp ne i32 %85, 1, !dbg !3633
  br i1 %cmp65, label %if.then67, label %if.end74, !dbg !3634

if.then67:                                        ; preds = %if.then63
  %86 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3635
  %avf68 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %86, i32 0, i32 8, !dbg !3636
  %87 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf68, align 8, !dbg !3636
  %pb69 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %87, i32 0, i32 4, !dbg !3637
  %88 = load %struct.AVIOContext*, %struct.AVIOContext** %pb69, align 8, !dbg !3637
  store %struct.AVIOContext* %88, %struct.AVIOContext** %s.addr.i, align 8, !dbg !3638
  %89 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !3639
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %89, i64 0, i32 1) #10, !dbg !3640
  %90 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3641
  %start_pos71 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %90, i32 0, i32 17, !dbg !3642
  %91 = load i64, i64* %start_pos71, align 8, !dbg !3642
  %sub = sub nsw i64 %call.i, %91, !dbg !3643
  %92 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3644
  %size72 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %92, i32 0, i32 18, !dbg !3645
  store i64 %sub, i64* %size72, align 8, !dbg !3646
  %93 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3647
  %94 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !3648
  %pb73 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %94, i32 0, i32 4, !dbg !3649
  call void @ff_format_io_close(%struct.AVFormatContext* %93, %struct.AVIOContext** %pb73), !dbg !3650
  br label %if.end74, !dbg !3651

if.end74:                                         ; preds = %if.then67, %if.then63
  %95 = load i32, i32* %use_temp_file, align 4, !dbg !3652
  %tobool75 = icmp ne i32 %95, 0, !dbg !3652
  br i1 %tobool75, label %land.lhs.true76, label %if.end88, !dbg !3654

land.lhs.true76:                                  ; preds = %if.end74
  %96 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3655
  %flags77 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %96, i32 0, i32 8, !dbg !3657
  %97 = load i32, i32* %flags77, align 8, !dbg !3657
  %and78 = and i32 %97, 1, !dbg !3658
  %tobool79 = icmp ne i32 %and78, 0, !dbg !3658
  br i1 %tobool79, label %if.end88, label %if.then80, !dbg !3659

if.then80:                                        ; preds = %land.lhs.true76
  %98 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3660
  %99 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !3662
  %call81 = call i32 @hls_rename_temp_file(%struct.AVFormatContext* %98, %struct.AVFormatContext* %99), !dbg !3663
  %100 = load i8*, i8** %old_filename, align 8, !dbg !3664
  call void @av_free(i8* %100), !dbg !3665
  %101 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3666
  %avf82 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %101, i32 0, i32 8, !dbg !3667
  %102 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf82, align 8, !dbg !3667
  %url83 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %102, i32 0, i32 9, !dbg !3668
  %103 = load i8*, i8** %url83, align 8, !dbg !3668
  %call84 = call noalias i8* @av_strdup(i8* %103), !dbg !3669
  store i8* %call84, i8** %old_filename, align 8, !dbg !3670
  %104 = load i8*, i8** %old_filename, align 8, !dbg !3671
  %tobool85 = icmp ne i8* %104, null, !dbg !3671
  br i1 %tobool85, label %if.end87, label %if.then86, !dbg !3673

if.then86:                                        ; preds = %if.then80
  store i32 -12, i32* %retval, align 4, !dbg !3674
  br label %return, !dbg !3674

if.end87:                                         ; preds = %if.then80
  br label %if.end88, !dbg !3676

if.end88:                                         ; preds = %if.end87, %land.lhs.true76, %if.end74
  %105 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3677
  %106 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3678
  %107 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3679
  %108 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3680
  %duration = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %108, i32 0, i32 16, !dbg !3681
  %109 = load double, double* %duration, align 8, !dbg !3681
  %110 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3682
  %dpp = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %110, i32 0, i32 13, !dbg !3683
  %111 = load double, double* %dpp, align 8, !dbg !3683
  %add = fadd double %109, %111, !dbg !3684
  %112 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3685
  %start_pos89 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %112, i32 0, i32 17, !dbg !3686
  %113 = load i64, i64* %start_pos89, align 8, !dbg !3686
  %114 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3687
  %size90 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %114, i32 0, i32 18, !dbg !3688
  %115 = load i64, i64* %size90, align 8, !dbg !3688
  %call91 = call i32 @hls_append_segment(%struct.AVFormatContext* %105, %struct.HLSContext* %106, %struct.VariantStream* %107, double %add, i64 %113, i64 %115), !dbg !3689
  br label %if.end92, !dbg !3690

if.end92:                                         ; preds = %if.end88, %if.end60
  %116 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3691
  %117 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3692
  %118 = load i8*, i8** %old_filename, align 8, !dbg !3693
  call void @sls_flag_file_rename(%struct.HLSContext* %116, %struct.VariantStream* %117, i8* %118), !dbg !3694
  %119 = load %struct.AVFormatContext*, %struct.AVFormatContext** %vtt_oc, align 8, !dbg !3695
  %tobool93 = icmp ne %struct.AVFormatContext* %119, null, !dbg !3695
  br i1 %tobool93, label %if.then94, label %if.end107, !dbg !3696

if.then94:                                        ; preds = %if.end92
  %120 = load %struct.AVFormatContext*, %struct.AVFormatContext** %vtt_oc, align 8, !dbg !3697
  %pb95 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %120, i32 0, i32 4, !dbg !3699
  %121 = load %struct.AVIOContext*, %struct.AVIOContext** %pb95, align 8, !dbg !3699
  %tobool96 = icmp ne %struct.AVIOContext* %121, null, !dbg !3697
  br i1 %tobool96, label %if.then97, label %if.end99, !dbg !3700

if.then97:                                        ; preds = %if.then94
  %122 = load %struct.AVFormatContext*, %struct.AVFormatContext** %vtt_oc, align 8, !dbg !3701
  %call98 = call i32 @av_write_trailer(%struct.AVFormatContext* %122), !dbg !3702
  br label %if.end99, !dbg !3702

if.end99:                                         ; preds = %if.then97, %if.then94
  %123 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3703
  %vtt_avf100 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %123, i32 0, i32 9, !dbg !3704
  %124 = load %struct.AVFormatContext*, %struct.AVFormatContext** %vtt_avf100, align 8, !dbg !3704
  %pb101 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %124, i32 0, i32 4, !dbg !3705
  %125 = load %struct.AVIOContext*, %struct.AVIOContext** %pb101, align 8, !dbg !3705
  store %struct.AVIOContext* %125, %struct.AVIOContext** %s.addr.i121, align 8, !dbg !3706
  %126 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i121, align 8, !dbg !3707
  %call.i122 = call i64 @avio_seek(%struct.AVIOContext* %126, i64 0, i32 1) #10, !dbg !3708
  %127 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3709
  %start_pos103 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %127, i32 0, i32 17, !dbg !3710
  %128 = load i64, i64* %start_pos103, align 8, !dbg !3710
  %sub104 = sub nsw i64 %call.i122, %128, !dbg !3711
  %129 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3712
  %size105 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %129, i32 0, i32 18, !dbg !3713
  store i64 %sub104, i64* %size105, align 8, !dbg !3714
  %130 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3715
  %131 = load %struct.AVFormatContext*, %struct.AVFormatContext** %vtt_oc, align 8, !dbg !3716
  %pb106 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %131, i32 0, i32 4, !dbg !3717
  call void @ff_format_io_close(%struct.AVFormatContext* %130, %struct.AVIOContext** %pb106), !dbg !3718
  %132 = load %struct.AVFormatContext*, %struct.AVFormatContext** %vtt_oc, align 8, !dbg !3719
  call void @avformat_free_context(%struct.AVFormatContext* %132), !dbg !3720
  br label %if.end107, !dbg !3721

if.end107:                                        ; preds = %if.end99, %if.end92
  %133 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !3722
  call void @avformat_free_context(%struct.AVFormatContext* %133), !dbg !3723
  %134 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3724
  %avf108 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %134, i32 0, i32 8, !dbg !3725
  store %struct.AVFormatContext* null, %struct.AVFormatContext** %avf108, align 8, !dbg !3726
  %135 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3727
  %136 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !3728
  %call109 = call i32 @hls_window(%struct.AVFormatContext* %135, i32 1, %struct.VariantStream* %136), !dbg !3729
  %137 = load i8*, i8** %old_filename, align 8, !dbg !3730
  call void @av_free(i8* %137), !dbg !3731
  br label %for.inc, !dbg !3732

for.inc:                                          ; preds = %if.end107
  %138 = load i32, i32* %i, align 4, !dbg !3733
  %inc = add nsw i32 %138, 1, !dbg !3733
  store i32 %inc, i32* %i, align 4, !dbg !3733
  br label %for.cond, !dbg !3735, !llvm.loop !3736

for.end:                                          ; preds = %for.cond
  %139 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3738
  call void @hls_free_variant_streams(%struct.HLSContext* %139), !dbg !3739
  store i32 0, i32* %i, align 4, !dbg !3740
  br label %for.cond110, !dbg !3742

for.cond110:                                      ; preds = %for.inc116, %for.end
  %140 = load i32, i32* %i, align 4, !dbg !3743
  %141 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3746
  %nb_ccstreams = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %141, i32 0, i32 40, !dbg !3747
  %142 = load i32, i32* %nb_ccstreams, align 8, !dbg !3747
  %cmp111 = icmp ult i32 %140, %142, !dbg !3748
  br i1 %cmp111, label %for.body113, label %for.end118, !dbg !3749

for.body113:                                      ; preds = %for.cond110
  call void @llvm.dbg.declare(metadata %struct.ClosedCaptionsStream** %ccs, metadata !3750, metadata !2335), !dbg !3752
  %143 = load i32, i32* %i, align 4, !dbg !3753
  %idxprom114 = sext i32 %143 to i64, !dbg !3754
  %144 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3754
  %cc_streams = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %144, i32 0, i32 39, !dbg !3755
  %145 = load %struct.ClosedCaptionsStream*, %struct.ClosedCaptionsStream** %cc_streams, align 8, !dbg !3755
  %arrayidx115 = getelementptr inbounds %struct.ClosedCaptionsStream, %struct.ClosedCaptionsStream* %145, i64 %idxprom114, !dbg !3754
  store %struct.ClosedCaptionsStream* %arrayidx115, %struct.ClosedCaptionsStream** %ccs, align 8, !dbg !3752
  %146 = load %struct.ClosedCaptionsStream*, %struct.ClosedCaptionsStream** %ccs, align 8, !dbg !3756
  %ccgroup = getelementptr inbounds %struct.ClosedCaptionsStream, %struct.ClosedCaptionsStream* %146, i32 0, i32 0, !dbg !3757
  %147 = bitcast i8** %ccgroup to i8*, !dbg !3758
  call void @av_freep(i8* %147), !dbg !3759
  %148 = load %struct.ClosedCaptionsStream*, %struct.ClosedCaptionsStream** %ccs, align 8, !dbg !3760
  %instreamid = getelementptr inbounds %struct.ClosedCaptionsStream, %struct.ClosedCaptionsStream* %148, i32 0, i32 1, !dbg !3761
  %149 = bitcast i8** %instreamid to i8*, !dbg !3762
  call void @av_freep(i8* %149), !dbg !3763
  %150 = load %struct.ClosedCaptionsStream*, %struct.ClosedCaptionsStream** %ccs, align 8, !dbg !3764
  %language = getelementptr inbounds %struct.ClosedCaptionsStream, %struct.ClosedCaptionsStream* %150, i32 0, i32 2, !dbg !3765
  %151 = bitcast i8** %language to i8*, !dbg !3766
  call void @av_freep(i8* %151), !dbg !3767
  br label %for.inc116, !dbg !3768

for.inc116:                                       ; preds = %for.body113
  %152 = load i32, i32* %i, align 4, !dbg !3769
  %inc117 = add nsw i32 %152, 1, !dbg !3769
  store i32 %inc117, i32* %i, align 4, !dbg !3769
  br label %for.cond110, !dbg !3771, !llvm.loop !3772

for.end118:                                       ; preds = %for.cond110
  %153 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3774
  %154 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3775
  %m3u8_out = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %154, i32 0, i32 49, !dbg !3776
  call void @ff_format_io_close(%struct.AVFormatContext* %153, %struct.AVIOContext** %m3u8_out), !dbg !3777
  %155 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3778
  %156 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3779
  %sub_m3u8_out = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %156, i32 0, i32 50, !dbg !3780
  call void @ff_format_io_close(%struct.AVFormatContext* %155, %struct.AVIOContext** %sub_m3u8_out), !dbg !3781
  %157 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3782
  %key_basename = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %157, i32 0, i32 27, !dbg !3783
  %158 = bitcast i8** %key_basename to i8*, !dbg !3784
  call void @av_freep(i8* %158), !dbg !3785
  %159 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3786
  %var_streams119 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %159, i32 0, i32 37, !dbg !3787
  %160 = bitcast %struct.VariantStream** %var_streams119 to i8*, !dbg !3788
  call void @av_freep(i8* %160), !dbg !3789
  %161 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3790
  %cc_streams120 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %161, i32 0, i32 39, !dbg !3791
  %162 = bitcast %struct.ClosedCaptionsStream** %cc_streams120 to i8*, !dbg !3792
  call void @av_freep(i8* %162), !dbg !3793
  %163 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3794
  %master_m3u8_url = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %163, i32 0, i32 42, !dbg !3795
  %164 = bitcast i8** %master_m3u8_url to i8*, !dbg !3796
  call void @av_freep(i8* %164), !dbg !3797
  store i32 0, i32* %retval, align 4, !dbg !3798
  br label %return, !dbg !3798

return:                                           ; preds = %for.end118, %if.then86, %if.then
  %165 = load i32, i32* %retval, align 4, !dbg !3799
  ret i32 %165, !dbg !3799
}

; Function Attrs: nounwind uwtable
define internal i32 @hls_init(%struct.AVFormatContext* %s) #0 !dbg !3800 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %hls = alloca %struct.HLSContext*, align 8
  %pattern = alloca i8*, align 8
  %vs = alloca %struct.VariantStream*, align 8
  %basename_size = alloca i32, align 4
  %pattern_localtime_fmt = alloca i8*, align 8
  %vtt_pattern = alloca i8*, align 8
  %p = alloca i8*, align 8
  %vtt_basename_size = alloca i32, align 4
  %fmp4_init_filename_len = alloca i32, align 4
  %t = alloca i64, align 8
  %b = alloca [15 x i8], align 1
  %p73 = alloca %struct.tm*, align 8
  %tmbuf = alloca %struct.tm, align 8
  %now0 = alloca i64, align 8
  %ccs = alloca %struct.ClosedCaptionsStream*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !3801, metadata !2335), !dbg !3802
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3803, metadata !2335), !dbg !3804
  store i32 0, i32* %ret, align 4, !dbg !3804
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3805, metadata !2335), !dbg !3806
  store i32 0, i32* %i, align 4, !dbg !3806
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3807, metadata !2335), !dbg !3808
  store i32 0, i32* %j, align 4, !dbg !3808
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %hls, metadata !3809, metadata !2335), !dbg !3810
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3811
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !3812
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3812
  %2 = bitcast i8* %1 to %struct.HLSContext*, !dbg !3811
  store %struct.HLSContext* %2, %struct.HLSContext** %hls, align 8, !dbg !3810
  call void @llvm.dbg.declare(metadata i8** %pattern, metadata !3813, metadata !2335), !dbg !3814
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.203, i32 0, i32 0), i8** %pattern, align 8, !dbg !3814
  call void @llvm.dbg.declare(metadata %struct.VariantStream** %vs, metadata !3815, metadata !2335), !dbg !3816
  store %struct.VariantStream* null, %struct.VariantStream** %vs, align 8, !dbg !3816
  call void @llvm.dbg.declare(metadata i32* %basename_size, metadata !3817, metadata !2335), !dbg !3818
  store i32 0, i32* %basename_size, align 4, !dbg !3818
  call void @llvm.dbg.declare(metadata i8** %pattern_localtime_fmt, metadata !3819, metadata !2335), !dbg !3820
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3821
  %call = call i8* @get_default_pattern_localtime_fmt(%struct.AVFormatContext* %3), !dbg !3822
  store i8* %call, i8** %pattern_localtime_fmt, align 8, !dbg !3820
  call void @llvm.dbg.declare(metadata i8** %vtt_pattern, metadata !3823, metadata !2335), !dbg !3824
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.204, i32 0, i32 0), i8** %vtt_pattern, align 8, !dbg !3824
  call void @llvm.dbg.declare(metadata i8** %p, metadata !3825, metadata !2335), !dbg !3826
  store i8* null, i8** %p, align 8, !dbg !3826
  call void @llvm.dbg.declare(metadata i32* %vtt_basename_size, metadata !3827, metadata !2335), !dbg !3828
  store i32 0, i32* %vtt_basename_size, align 4, !dbg !3828
  call void @llvm.dbg.declare(metadata i32* %fmp4_init_filename_len, metadata !3829, metadata !2335), !dbg !3830
  %4 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3831
  %fmp4_init_filename = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %4, i32 0, i32 11, !dbg !3832
  %5 = load i8*, i8** %fmp4_init_filename, align 8, !dbg !3832
  %call1 = call i64 @strlen(i8* %5) #11, !dbg !3833
  %add = add i64 %call1, 1, !dbg !3834
  %conv = trunc i64 %add to i32, !dbg !3833
  store i32 %conv, i32* %fmp4_init_filename_len, align 4, !dbg !3830
  %6 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3835
  %has_default_key = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %6, i32 0, i32 53, !dbg !3836
  store i32 0, i32* %has_default_key, align 4, !dbg !3837
  %7 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3838
  %has_video_m3u8 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %7, i32 0, i32 54, !dbg !3839
  store i32 0, i32* %has_video_m3u8, align 8, !dbg !3840
  %8 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3841
  %call2 = call i32 @update_variant_stream_info(%struct.AVFormatContext* %8), !dbg !3842
  store i32 %call2, i32* %ret, align 4, !dbg !3843
  %9 = load i32, i32* %ret, align 4, !dbg !3844
  %cmp = icmp slt i32 %9, 0, !dbg !3846
  br i1 %cmp, label %if.then, label %if.end, !dbg !3847

if.then:                                          ; preds = %entry
  %10 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3848
  %11 = bitcast %struct.AVFormatContext* %10 to i8*, !dbg !3848
  %12 = load i32, i32* %ret, align 4, !dbg !3850
  call void (i8*, i32, i8*, ...) @av_log(i8* %11, i32 16, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.205, i32 0, i32 0), i32 %12), !dbg !3851
  br label %fail, !dbg !3852

if.end:                                           ; preds = %entry
  %13 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3853
  %nb_varstreams = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %13, i32 0, i32 38, !dbg !3855
  %14 = load i32, i32* %nb_varstreams, align 8, !dbg !3855
  %cmp4 = icmp ugt i32 %14, 1, !dbg !3856
  br i1 %cmp4, label %land.lhs.true, label %if.end7, !dbg !3857

land.lhs.true:                                    ; preds = %if.end
  %15 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3858
  %flags = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %15, i32 0, i32 8, !dbg !3860
  %16 = load i32, i32* %flags, align 8, !dbg !3860
  %and = and i32 %16, 4096, !dbg !3861
  %tobool = icmp ne i32 %and, 0, !dbg !3861
  br i1 %tobool, label %if.then6, label %if.end7, !dbg !3862

if.then6:                                         ; preds = %land.lhs.true
  store i32 -22, i32* %ret, align 4, !dbg !3863
  %17 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3865
  %18 = bitcast %struct.AVFormatContext* %17 to i8*, !dbg !3865
  call void (i8*, i32, i8*, ...) @av_log(i8* %18, i32 16, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.206, i32 0, i32 0)), !dbg !3866
  br label %fail, !dbg !3867

if.end7:                                          ; preds = %land.lhs.true, %if.end
  %19 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3868
  %nb_varstreams8 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %19, i32 0, i32 38, !dbg !3869
  %20 = load i32, i32* %nb_varstreams8, align 8, !dbg !3869
  %21 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3870
  %url = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %21, i32 0, i32 9, !dbg !3871
  %22 = load i8*, i8** %url, align 8, !dbg !3871
  %call9 = call i32 @validate_name(i32 %20, i8* %22), !dbg !3872
  store i32 %call9, i32* %ret, align 4, !dbg !3873
  %23 = load i32, i32* %ret, align 4, !dbg !3874
  %cmp10 = icmp slt i32 %23, 0, !dbg !3876
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !3877

if.then12:                                        ; preds = %if.end7
  br label %fail, !dbg !3878

if.end13:                                         ; preds = %if.end7
  %24 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3879
  %segment_filename = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %24, i32 0, i32 10, !dbg !3881
  %25 = load i8*, i8** %segment_filename, align 8, !dbg !3881
  %tobool14 = icmp ne i8* %25, null, !dbg !3879
  br i1 %tobool14, label %if.then15, label %if.end23, !dbg !3882

if.then15:                                        ; preds = %if.end13
  %26 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3883
  %nb_varstreams16 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %26, i32 0, i32 38, !dbg !3885
  %27 = load i32, i32* %nb_varstreams16, align 8, !dbg !3885
  %28 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3886
  %segment_filename17 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %28, i32 0, i32 10, !dbg !3887
  %29 = load i8*, i8** %segment_filename17, align 8, !dbg !3887
  %call18 = call i32 @validate_name(i32 %27, i8* %29), !dbg !3888
  store i32 %call18, i32* %ret, align 4, !dbg !3889
  %30 = load i32, i32* %ret, align 4, !dbg !3890
  %cmp19 = icmp slt i32 %30, 0, !dbg !3892
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !3893

if.then21:                                        ; preds = %if.then15
  br label %fail, !dbg !3894

if.end22:                                         ; preds = %if.then15
  br label %if.end23, !dbg !3895

if.end23:                                         ; preds = %if.end22, %if.end13
  %31 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3896
  %fmp4_init_filename24 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %31, i32 0, i32 11, !dbg !3898
  %32 = load i8*, i8** %fmp4_init_filename24, align 8, !dbg !3898
  %call25 = call i32 @av_strcasecmp(i8* %32, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.49, i32 0, i32 0)), !dbg !3899
  %tobool26 = icmp ne i32 %call25, 0, !dbg !3899
  br i1 %tobool26, label %if.then27, label %if.end35, !dbg !3900

if.then27:                                        ; preds = %if.end23
  %33 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3901
  %nb_varstreams28 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %33, i32 0, i32 38, !dbg !3903
  %34 = load i32, i32* %nb_varstreams28, align 8, !dbg !3903
  %35 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3904
  %fmp4_init_filename29 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %35, i32 0, i32 11, !dbg !3905
  %36 = load i8*, i8** %fmp4_init_filename29, align 8, !dbg !3905
  %call30 = call i32 @validate_name(i32 %34, i8* %36), !dbg !3906
  store i32 %call30, i32* %ret, align 4, !dbg !3907
  %37 = load i32, i32* %ret, align 4, !dbg !3908
  %cmp31 = icmp slt i32 %37, 0, !dbg !3910
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !3911

if.then33:                                        ; preds = %if.then27
  br label %fail, !dbg !3912

if.end34:                                         ; preds = %if.then27
  br label %if.end35, !dbg !3913

if.end35:                                         ; preds = %if.end34, %if.end23
  %38 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3914
  %subtitle_filename = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %38, i32 0, i32 21, !dbg !3916
  %39 = load i8*, i8** %subtitle_filename, align 8, !dbg !3916
  %tobool36 = icmp ne i8* %39, null, !dbg !3914
  br i1 %tobool36, label %if.then37, label %if.end45, !dbg !3917

if.then37:                                        ; preds = %if.end35
  %40 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3918
  %nb_varstreams38 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %40, i32 0, i32 38, !dbg !3920
  %41 = load i32, i32* %nb_varstreams38, align 8, !dbg !3920
  %42 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3921
  %subtitle_filename39 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %42, i32 0, i32 21, !dbg !3922
  %43 = load i8*, i8** %subtitle_filename39, align 8, !dbg !3922
  %call40 = call i32 @validate_name(i32 %41, i8* %43), !dbg !3923
  store i32 %call40, i32* %ret, align 4, !dbg !3924
  %44 = load i32, i32* %ret, align 4, !dbg !3925
  %cmp41 = icmp slt i32 %44, 0, !dbg !3927
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !3928

if.then43:                                        ; preds = %if.then37
  br label %fail, !dbg !3929

if.end44:                                         ; preds = %if.then37
  br label %if.end45, !dbg !3930

if.end45:                                         ; preds = %if.end44, %if.end35
  %45 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3931
  %master_pl_name = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %45, i32 0, i32 46, !dbg !3933
  %46 = load i8*, i8** %master_pl_name, align 8, !dbg !3933
  %tobool46 = icmp ne i8* %46, null, !dbg !3931
  br i1 %tobool46, label %if.then47, label %if.end53, !dbg !3934

if.then47:                                        ; preds = %if.end45
  %47 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3935
  %call48 = call i32 @update_master_pl_info(%struct.AVFormatContext* %47), !dbg !3937
  store i32 %call48, i32* %ret, align 4, !dbg !3938
  %48 = load i32, i32* %ret, align 4, !dbg !3939
  %cmp49 = icmp slt i32 %48, 0, !dbg !3941
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !3942

if.then51:                                        ; preds = %if.then47
  %49 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3943
  %50 = bitcast %struct.AVFormatContext* %49 to i8*, !dbg !3943
  %51 = load i32, i32* %ret, align 4, !dbg !3945
  call void (i8*, i32, i8*, ...) @av_log(i8* %50, i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.207, i32 0, i32 0), i32 %51), !dbg !3946
  br label %fail, !dbg !3947

if.end52:                                         ; preds = %if.then47
  br label %if.end53, !dbg !3948

if.end53:                                         ; preds = %if.end52, %if.end45
  %52 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3949
  %segment_type = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %52, i32 0, i32 12, !dbg !3951
  %53 = load i32, i32* %segment_type, align 8, !dbg !3951
  %cmp54 = icmp eq i32 %53, 1, !dbg !3952
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !3953

if.then56:                                        ; preds = %if.end53
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.208, i32 0, i32 0), i8** %pattern, align 8, !dbg !3954
  br label %if.end57, !dbg !3956

if.end57:                                         ; preds = %if.then56, %if.end53
  %54 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3957
  %start_sequence_source_type = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %54, i32 0, i32 2, !dbg !3959
  %55 = load i32, i32* %start_sequence_source_type, align 8, !dbg !3959
  %cmp58 = icmp eq i32 %55, 1, !dbg !3960
  br i1 %cmp58, label %if.then63, label %lor.lhs.false, !dbg !3961

lor.lhs.false:                                    ; preds = %if.end57
  %56 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3962
  %start_sequence_source_type60 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %56, i32 0, i32 2, !dbg !3963
  %57 = load i32, i32* %start_sequence_source_type60, align 8, !dbg !3963
  %cmp61 = icmp eq i32 %57, 2, !dbg !3964
  br i1 %cmp61, label %if.then63, label %if.end88, !dbg !3965

if.then63:                                        ; preds = %lor.lhs.false, %if.end57
  call void @llvm.dbg.declare(metadata i64* %t, metadata !3967, metadata !2335), !dbg !3973
  %call64 = call i64 @time(i64* null) #10, !dbg !3974
  store i64 %call64, i64* %t, align 8, !dbg !3973
  %58 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3975
  %start_sequence_source_type65 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %58, i32 0, i32 2, !dbg !3977
  %59 = load i32, i32* %start_sequence_source_type65, align 8, !dbg !3977
  %cmp66 = icmp eq i32 %59, 1, !dbg !3978
  br i1 %cmp66, label %if.then68, label %if.else, !dbg !3979

if.then68:                                        ; preds = %if.then63
  %60 = load i64, i64* %t, align 8, !dbg !3980
  %61 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3982
  %start_sequence = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %61, i32 0, i32 1, !dbg !3983
  store i64 %60, i64* %start_sequence, align 8, !dbg !3984
  br label %if.end86, !dbg !3985

if.else:                                          ; preds = %if.then63
  %62 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !3986
  %start_sequence_source_type69 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %62, i32 0, i32 2, !dbg !3989
  %63 = load i32, i32* %start_sequence_source_type69, align 8, !dbg !3989
  %cmp70 = icmp eq i32 %63, 2, !dbg !3990
  br i1 %cmp70, label %if.then72, label %if.end85, !dbg !3986

if.then72:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata [15 x i8]* %b, metadata !3991, metadata !2335), !dbg !3996
  call void @llvm.dbg.declare(metadata %struct.tm** %p73, metadata !3997, metadata !2335), !dbg !4012
  call void @llvm.dbg.declare(metadata %struct.tm* %tmbuf, metadata !4013, metadata !2335), !dbg !4014
  %call74 = call %struct.tm* @localtime_r(i64* %t, %struct.tm* %tmbuf) #10, !dbg !4015
  store %struct.tm* %call74, %struct.tm** %p73, align 8, !dbg !4017
  %tobool75 = icmp ne %struct.tm* %call74, null, !dbg !4017
  br i1 %tobool75, label %if.end77, label %if.then76, !dbg !4018

if.then76:                                        ; preds = %if.then72
  store i32 -12, i32* %retval, align 4, !dbg !4019
  br label %return, !dbg !4019

if.end77:                                         ; preds = %if.then72
  %arraydecay = getelementptr inbounds [15 x i8], [15 x i8]* %b, i32 0, i32 0, !dbg !4020
  %64 = load %struct.tm*, %struct.tm** %p73, align 8, !dbg !4022
  %call78 = call i64 @strftime(i8* %arraydecay, i64 15, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.209, i32 0, i32 0), %struct.tm* %64) #10, !dbg !4023
  %tobool79 = icmp ne i64 %call78, 0, !dbg !4023
  br i1 %tobool79, label %if.end81, label %if.then80, !dbg !4024

if.then80:                                        ; preds = %if.end77
  store i32 -12, i32* %retval, align 4, !dbg !4025
  br label %return, !dbg !4025

if.end81:                                         ; preds = %if.end77
  %arraydecay82 = getelementptr inbounds [15 x i8], [15 x i8]* %b, i32 0, i32 0, !dbg !4026
  %call83 = call i64 @strtoll(i8* %arraydecay82, i8** null, i32 10) #10, !dbg !4027
  %65 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4028
  %start_sequence84 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %65, i32 0, i32 1, !dbg !4029
  store i64 %call83, i64* %start_sequence84, align 8, !dbg !4030
  br label %if.end85, !dbg !4031

if.end85:                                         ; preds = %if.end81, %if.else
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %if.then68
  %66 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4032
  %67 = bitcast %struct.HLSContext* %66 to i8*, !dbg !4032
  %68 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4033
  %start_sequence87 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %68, i32 0, i32 1, !dbg !4034
  %69 = load i64, i64* %start_sequence87, align 8, !dbg !4034
  call void (i8*, i32, i8*, ...) @av_log(i8* %67, i32 48, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.210, i32 0, i32 0), i64 %69), !dbg !4035
  br label %if.end88, !dbg !4036

if.end88:                                         ; preds = %if.end86, %lor.lhs.false
  %70 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4037
  %init_time = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %70, i32 0, i32 4, !dbg !4038
  %71 = load float, float* %init_time, align 8, !dbg !4038
  %tobool89 = fcmp une float %71, 0.000000e+00, !dbg !4037
  br i1 %tobool89, label %cond.true, label %cond.false, !dbg !4037

cond.true:                                        ; preds = %if.end88
  %72 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4039
  %init_time90 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %72, i32 0, i32 4, !dbg !4040
  %73 = load float, float* %init_time90, align 8, !dbg !4040
  br label %cond.end, !dbg !4041

cond.false:                                       ; preds = %if.end88
  %74 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4042
  %time = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %74, i32 0, i32 3, !dbg !4044
  %75 = load float, float* %time, align 4, !dbg !4044
  br label %cond.end, !dbg !4045

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %73, %cond.true ], [ %75, %cond.false ], !dbg !4046
  %mul = fmul float %cond, 1.000000e+06, !dbg !4048
  %conv91 = fptosi float %mul to i64, !dbg !4049
  %76 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4050
  %recording_time = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %76, i32 0, i32 16, !dbg !4051
  store i64 %conv91, i64* %recording_time, align 8, !dbg !4052
  store i32 0, i32* %i, align 4, !dbg !4053
  br label %for.cond, !dbg !4055

for.cond:                                         ; preds = %for.inc478, %cond.end
  %77 = load i32, i32* %i, align 4, !dbg !4056
  %78 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4059
  %nb_varstreams92 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %78, i32 0, i32 38, !dbg !4060
  %79 = load i32, i32* %nb_varstreams92, align 8, !dbg !4060
  %cmp93 = icmp ult i32 %77, %79, !dbg !4061
  br i1 %cmp93, label %for.body, label %for.end480, !dbg !4062

for.body:                                         ; preds = %for.cond
  %80 = load i32, i32* %i, align 4, !dbg !4063
  %idxprom = sext i32 %80 to i64, !dbg !4065
  %81 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4065
  %var_streams = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %81, i32 0, i32 37, !dbg !4066
  %82 = load %struct.VariantStream*, %struct.VariantStream** %var_streams, align 8, !dbg !4066
  %arrayidx = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %82, i64 %idxprom, !dbg !4065
  store %struct.VariantStream* %arrayidx, %struct.VariantStream** %vs, align 8, !dbg !4067
  %83 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4068
  %url95 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %83, i32 0, i32 9, !dbg !4069
  %84 = load i8*, i8** %url95, align 8, !dbg !4069
  %call96 = call noalias i8* @av_strdup(i8* %84), !dbg !4070
  %85 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4071
  %m3u8_name = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %85, i32 0, i32 29, !dbg !4072
  store i8* %call96, i8** %m3u8_name, align 8, !dbg !4073
  %86 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4074
  %m3u8_name97 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %86, i32 0, i32 29, !dbg !4076
  %87 = load i8*, i8** %m3u8_name97, align 8, !dbg !4076
  %tobool98 = icmp ne i8* %87, null, !dbg !4074
  br i1 %tobool98, label %if.end100, label %if.then99, !dbg !4077

if.then99:                                        ; preds = %for.body
  store i32 -12, i32* %ret, align 4, !dbg !4078
  br label %fail, !dbg !4080

if.end100:                                        ; preds = %for.body
  %88 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4081
  %m3u8_name101 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %88, i32 0, i32 29, !dbg !4082
  %89 = load i8*, i8** %m3u8_name101, align 8, !dbg !4082
  %90 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4083
  %url102 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %90, i32 0, i32 9, !dbg !4084
  %91 = load i8*, i8** %url102, align 8, !dbg !4084
  %call103 = call i64 @strlen(i8* %91) #11, !dbg !4085
  %add104 = add i64 %call103, 1, !dbg !4086
  %conv105 = trunc i64 %add104 to i32, !dbg !4085
  %92 = load i32, i32* %i, align 4, !dbg !4087
  %call106 = call i32 @format_name(i8* %89, i32 %conv105, i32 %92), !dbg !4088
  store i32 %call106, i32* %ret, align 4, !dbg !4090
  %93 = load i32, i32* %ret, align 4, !dbg !4091
  %cmp107 = icmp slt i32 %93, 0, !dbg !4093
  br i1 %cmp107, label %if.then109, label %if.end110, !dbg !4094

if.then109:                                       ; preds = %if.end100
  br label %fail, !dbg !4095

if.end110:                                        ; preds = %if.end100
  %94 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4096
  %start_sequence111 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %94, i32 0, i32 1, !dbg !4097
  %95 = load i64, i64* %start_sequence111, align 8, !dbg !4097
  %96 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4098
  %sequence = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %96, i32 0, i32 2, !dbg !4099
  store i64 %95, i64* %sequence, align 8, !dbg !4100
  %97 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4101
  %start_pts = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %97, i32 0, i32 14, !dbg !4102
  store i64 -9223372036854775808, i64* %start_pts, align 8, !dbg !4103
  %98 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4104
  %end_pts = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %98, i32 0, i32 15, !dbg !4105
  store i64 -9223372036854775808, i64* %end_pts, align 8, !dbg !4106
  %99 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4107
  %current_segment_final_filename_fmt = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %99, i32 0, i32 31, !dbg !4108
  %arrayidx112 = getelementptr inbounds [1024 x i8], [1024 x i8]* %current_segment_final_filename_fmt, i64 0, i64 0, !dbg !4107
  store i8 0, i8* %arrayidx112, align 8, !dbg !4109
  %100 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4110
  %flags113 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %100, i32 0, i32 8, !dbg !4112
  %101 = load i32, i32* %flags113, align 8, !dbg !4112
  %and114 = and i32 %101, 32, !dbg !4113
  %tobool115 = icmp ne i32 %and114, 0, !dbg !4113
  br i1 %tobool115, label %land.lhs.true116, label %if.end123, !dbg !4114

land.lhs.true116:                                 ; preds = %if.end110
  %102 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4115
  %flags117 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %102, i32 0, i32 8, !dbg !4117
  %103 = load i32, i32* %flags117, align 8, !dbg !4117
  %and118 = and i32 %103, 8192, !dbg !4118
  %tobool119 = icmp ne i32 %and118, 0, !dbg !4118
  br i1 %tobool119, label %if.then120, label %if.end123, !dbg !4119

if.then120:                                       ; preds = %land.lhs.true116
  %104 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4120
  %flags121 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %104, i32 0, i32 8, !dbg !4122
  %105 = load i32, i32* %flags121, align 8, !dbg !4123
  %and122 = and i32 %105, -8193, !dbg !4123
  store i32 %and122, i32* %flags121, align 8, !dbg !4123
  %106 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4124
  %107 = bitcast %struct.AVFormatContext* %106 to i8*, !dbg !4124
  call void (i8*, i32, i8*, ...) @av_log(i8* %107, i32 24, i8* getelementptr inbounds ([110 x i8], [110 x i8]* @.str.211, i32 0, i32 0)), !dbg !4125
  br label %if.end123, !dbg !4126

if.end123:                                        ; preds = %if.then120, %land.lhs.true116, %if.end110
  %108 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4127
  %flags124 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %108, i32 0, i32 8, !dbg !4129
  %109 = load i32, i32* %flags124, align 8, !dbg !4129
  %and125 = and i32 %109, 128, !dbg !4130
  %tobool126 = icmp ne i32 %and125, 0, !dbg !4130
  br i1 %tobool126, label %if.then127, label %if.end130, !dbg !4131

if.then127:                                       ; preds = %if.end123
  call void @llvm.dbg.declare(metadata i64* %now0, metadata !4132, metadata !2335), !dbg !4134
  %call128 = call i64 @time(i64* %now0) #10, !dbg !4135
  %110 = load i64, i64* %now0, align 8, !dbg !4136
  %conv129 = sitofp i64 %110 to double, !dbg !4136
  %111 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4137
  %initial_prog_date_time = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %111, i32 0, i32 30, !dbg !4138
  store double %conv129, double* %initial_prog_date_time, align 8, !dbg !4139
  br label %if.end130, !dbg !4140

if.end130:                                        ; preds = %if.then127, %if.end123
  %112 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4141
  %format_options_str = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %112, i32 0, i32 19, !dbg !4143
  %113 = load i8*, i8** %format_options_str, align 8, !dbg !4143
  %tobool131 = icmp ne i8* %113, null, !dbg !4141
  br i1 %tobool131, label %if.then132, label %if.end140, !dbg !4144

if.then132:                                       ; preds = %if.end130
  %114 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4145
  %format_options = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %114, i32 0, i32 22, !dbg !4147
  %115 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4148
  %format_options_str133 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %115, i32 0, i32 19, !dbg !4149
  %116 = load i8*, i8** %format_options_str133, align 8, !dbg !4149
  %call134 = call i32 @av_dict_parse_string(%struct.AVDictionary** %format_options, i8* %116, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.213, i32 0, i32 0), i32 0), !dbg !4150
  store i32 %call134, i32* %ret, align 4, !dbg !4151
  %117 = load i32, i32* %ret, align 4, !dbg !4152
  %cmp135 = icmp slt i32 %117, 0, !dbg !4154
  br i1 %cmp135, label %if.then137, label %if.end139, !dbg !4155

if.then137:                                       ; preds = %if.then132
  %118 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4156
  %119 = bitcast %struct.AVFormatContext* %118 to i8*, !dbg !4156
  %120 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4158
  %format_options_str138 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %120, i32 0, i32 19, !dbg !4159
  %121 = load i8*, i8** %format_options_str138, align 8, !dbg !4159
  call void (i8*, i32, i8*, ...) @av_log(i8* %119, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.214, i32 0, i32 0), i8* %121), !dbg !4160
  br label %fail, !dbg !4161

if.end139:                                        ; preds = %if.then132
  br label %if.end140, !dbg !4162

if.end140:                                        ; preds = %if.end139, %if.end130
  store i32 0, i32* %j, align 4, !dbg !4163
  br label %for.cond141, !dbg !4165

for.cond141:                                      ; preds = %for.inc, %if.end140
  %122 = load i32, i32* %j, align 4, !dbg !4166
  %123 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4169
  %nb_streams = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %123, i32 0, i32 37, !dbg !4170
  %124 = load i32, i32* %nb_streams, align 4, !dbg !4170
  %cmp142 = icmp ult i32 %122, %124, !dbg !4171
  br i1 %cmp142, label %for.body144, label %for.end, !dbg !4172

for.body144:                                      ; preds = %for.cond141
  %125 = load i32, i32* %j, align 4, !dbg !4173
  %idxprom145 = sext i32 %125 to i64, !dbg !4175
  %126 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4175
  %streams = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %126, i32 0, i32 34, !dbg !4176
  %127 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !4176
  %arrayidx146 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %127, i64 %idxprom145, !dbg !4175
  %128 = load %struct.AVStream*, %struct.AVStream** %arrayidx146, align 8, !dbg !4175
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %128, i32 0, i32 19, !dbg !4177
  %129 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !4177
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %129, i32 0, i32 0, !dbg !4178
  %130 = load i32, i32* %codec_type, align 8, !dbg !4178
  %cmp147 = icmp eq i32 %130, 0, !dbg !4179
  %conv148 = zext i1 %cmp147 to i32, !dbg !4179
  %131 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4180
  %has_video = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %131, i32 0, i32 10, !dbg !4181
  %132 = load i32, i32* %has_video, align 8, !dbg !4182
  %add149 = add nsw i32 %132, %conv148, !dbg !4182
  store i32 %add149, i32* %has_video, align 8, !dbg !4182
  %133 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4183
  %has_video150 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %133, i32 0, i32 10, !dbg !4185
  %134 = load i32, i32* %has_video150, align 8, !dbg !4185
  %cmp151 = icmp eq i32 %134, 1, !dbg !4186
  br i1 %cmp151, label %land.lhs.true153, label %if.end165, !dbg !4187

land.lhs.true153:                                 ; preds = %for.body144
  %135 = load i32, i32* %j, align 4, !dbg !4188
  %idxprom154 = sext i32 %135 to i64, !dbg !4190
  %136 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4190
  %streams155 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %136, i32 0, i32 34, !dbg !4191
  %137 = load %struct.AVStream**, %struct.AVStream*** %streams155, align 8, !dbg !4191
  %arrayidx156 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %137, i64 %idxprom154, !dbg !4190
  %138 = load %struct.AVStream*, %struct.AVStream** %arrayidx156, align 8, !dbg !4190
  %codecpar157 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %138, i32 0, i32 19, !dbg !4192
  %139 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar157, align 8, !dbg !4192
  %codec_type158 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %139, i32 0, i32 0, !dbg !4193
  %140 = load i32, i32* %codec_type158, align 8, !dbg !4193
  %cmp159 = icmp eq i32 %140, 0, !dbg !4194
  br i1 %cmp159, label %if.then161, label %if.end165, !dbg !4195

if.then161:                                       ; preds = %land.lhs.true153
  %141 = load i32, i32* %j, align 4, !dbg !4196
  %idxprom162 = sext i32 %141 to i64, !dbg !4198
  %142 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4198
  %streams163 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %142, i32 0, i32 34, !dbg !4199
  %143 = load %struct.AVStream**, %struct.AVStream*** %streams163, align 8, !dbg !4199
  %arrayidx164 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %143, i64 %idxprom162, !dbg !4198
  %144 = load %struct.AVStream*, %struct.AVStream** %arrayidx164, align 8, !dbg !4198
  %index = getelementptr inbounds %struct.AVStream, %struct.AVStream* %144, i32 0, i32 0, !dbg !4200
  %145 = load i32, i32* %index, align 8, !dbg !4200
  %146 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4201
  %reference_stream_index = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %146, i32 0, i32 22, !dbg !4202
  store i32 %145, i32* %reference_stream_index, align 4, !dbg !4203
  br label %if.end165, !dbg !4204

if.end165:                                        ; preds = %if.then161, %land.lhs.true153, %for.body144
  %147 = load i32, i32* %j, align 4, !dbg !4205
  %idxprom166 = sext i32 %147 to i64, !dbg !4206
  %148 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4206
  %streams167 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %148, i32 0, i32 34, !dbg !4207
  %149 = load %struct.AVStream**, %struct.AVStream*** %streams167, align 8, !dbg !4207
  %arrayidx168 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %149, i64 %idxprom166, !dbg !4206
  %150 = load %struct.AVStream*, %struct.AVStream** %arrayidx168, align 8, !dbg !4206
  %codecpar169 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %150, i32 0, i32 19, !dbg !4208
  %151 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar169, align 8, !dbg !4208
  %codec_type170 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %151, i32 0, i32 0, !dbg !4209
  %152 = load i32, i32* %codec_type170, align 8, !dbg !4209
  %cmp171 = icmp eq i32 %152, 3, !dbg !4210
  %conv172 = zext i1 %cmp171 to i32, !dbg !4210
  %153 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4211
  %has_subtitle = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %153, i32 0, i32 11, !dbg !4212
  %154 = load i32, i32* %has_subtitle, align 4, !dbg !4213
  %add173 = add nsw i32 %154, %conv172, !dbg !4213
  store i32 %add173, i32* %has_subtitle, align 4, !dbg !4213
  br label %for.inc, !dbg !4214

for.inc:                                          ; preds = %if.end165
  %155 = load i32, i32* %j, align 4, !dbg !4215
  %inc = add nsw i32 %155, 1, !dbg !4215
  store i32 %inc, i32* %j, align 4, !dbg !4215
  br label %for.cond141, !dbg !4217, !llvm.loop !4218

for.end:                                          ; preds = %for.cond141
  %156 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4220
  %has_video174 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %156, i32 0, i32 10, !dbg !4222
  %157 = load i32, i32* %has_video174, align 8, !dbg !4222
  %cmp175 = icmp sgt i32 %157, 1, !dbg !4223
  br i1 %cmp175, label %if.then177, label %if.end178, !dbg !4224

if.then177:                                       ; preds = %for.end
  %158 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4225
  %159 = bitcast %struct.AVFormatContext* %158 to i8*, !dbg !4225
  call void (i8*, i32, i8*, ...) @av_log(i8* %159, i32 24, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.215, i32 0, i32 0)), !dbg !4226
  br label %if.end178, !dbg !4226

if.end178:                                        ; preds = %if.then177, %for.end
  %160 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4227
  %segment_type179 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %160, i32 0, i32 12, !dbg !4229
  %161 = load i32, i32* %segment_type179, align 8, !dbg !4229
  %cmp180 = icmp eq i32 %161, 1, !dbg !4230
  br i1 %cmp180, label %if.then182, label %if.else184, !dbg !4231

if.then182:                                       ; preds = %if.end178
  %call183 = call %struct.AVOutputFormat* @av_guess_format(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.216, i32 0, i32 0), i8* null, i8* null), !dbg !4232
  %162 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4234
  %oformat = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %162, i32 0, i32 3, !dbg !4235
  store %struct.AVOutputFormat* %call183, %struct.AVOutputFormat** %oformat, align 8, !dbg !4236
  br label %if.end187, !dbg !4237

if.else184:                                       ; preds = %if.end178
  %call185 = call %struct.AVOutputFormat* @av_guess_format(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.43, i32 0, i32 0), i8* null, i8* null), !dbg !4238
  %163 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4240
  %oformat186 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %163, i32 0, i32 3, !dbg !4241
  store %struct.AVOutputFormat* %call185, %struct.AVOutputFormat** %oformat186, align 8, !dbg !4242
  br label %if.end187

if.end187:                                        ; preds = %if.else184, %if.then182
  %164 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4243
  %oformat188 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %164, i32 0, i32 3, !dbg !4245
  %165 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat188, align 8, !dbg !4245
  %tobool189 = icmp ne %struct.AVOutputFormat* %165, null, !dbg !4243
  br i1 %tobool189, label %if.end191, label %if.then190, !dbg !4246

if.then190:                                       ; preds = %if.end187
  store i32 -1481985528, i32* %ret, align 4, !dbg !4247
  br label %fail, !dbg !4249

if.end191:                                        ; preds = %if.end187
  %166 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4250
  %has_subtitle192 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %166, i32 0, i32 11, !dbg !4252
  %167 = load i32, i32* %has_subtitle192, align 4, !dbg !4252
  %tobool193 = icmp ne i32 %167, 0, !dbg !4250
  br i1 %tobool193, label %if.then194, label %if.end200, !dbg !4253

if.then194:                                       ; preds = %if.end191
  %call195 = call %struct.AVOutputFormat* @av_guess_format(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.217, i32 0, i32 0), i8* null, i8* null), !dbg !4254
  %168 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4256
  %vtt_oformat = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %168, i32 0, i32 4, !dbg !4257
  store %struct.AVOutputFormat* %call195, %struct.AVOutputFormat** %vtt_oformat, align 8, !dbg !4258
  %169 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4259
  %oformat196 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %169, i32 0, i32 3, !dbg !4261
  %170 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat196, align 8, !dbg !4261
  %tobool197 = icmp ne %struct.AVOutputFormat* %170, null, !dbg !4259
  br i1 %tobool197, label %if.end199, label %if.then198, !dbg !4262

if.then198:                                       ; preds = %if.then194
  store i32 -1481985528, i32* %ret, align 4, !dbg !4263
  br label %fail, !dbg !4265

if.end199:                                        ; preds = %if.then194
  br label %if.end200, !dbg !4266

if.end200:                                        ; preds = %if.end199, %if.end191
  %171 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4267
  %segment_filename201 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %171, i32 0, i32 10, !dbg !4269
  %172 = load i8*, i8** %segment_filename201, align 8, !dbg !4269
  %tobool202 = icmp ne i8* %172, null, !dbg !4267
  br i1 %tobool202, label %if.then203, label %if.else224, !dbg !4270

if.then203:                                       ; preds = %if.end200
  %173 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4271
  %segment_filename204 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %173, i32 0, i32 10, !dbg !4273
  %174 = load i8*, i8** %segment_filename204, align 8, !dbg !4273
  %call205 = call i64 @strlen(i8* %174) #11, !dbg !4274
  %add206 = add i64 %call205, 1, !dbg !4275
  %conv207 = trunc i64 %add206 to i32, !dbg !4274
  store i32 %conv207, i32* %basename_size, align 4, !dbg !4276
  %175 = load i32, i32* %basename_size, align 4, !dbg !4277
  %conv208 = sext i32 %175 to i64, !dbg !4277
  %call209 = call noalias i8* @av_malloc(i64 %conv208), !dbg !4278
  %176 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4279
  %basename = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %176, i32 0, i32 26, !dbg !4280
  store i8* %call209, i8** %basename, align 8, !dbg !4281
  %177 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4282
  %basename210 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %177, i32 0, i32 26, !dbg !4284
  %178 = load i8*, i8** %basename210, align 8, !dbg !4284
  %tobool211 = icmp ne i8* %178, null, !dbg !4282
  br i1 %tobool211, label %if.end213, label %if.then212, !dbg !4285

if.then212:                                       ; preds = %if.then203
  store i32 -12, i32* %ret, align 4, !dbg !4286
  br label %fail, !dbg !4288

if.end213:                                        ; preds = %if.then203
  %179 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4289
  %basename214 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %179, i32 0, i32 26, !dbg !4290
  %180 = load i8*, i8** %basename214, align 8, !dbg !4290
  %181 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4291
  %segment_filename215 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %181, i32 0, i32 10, !dbg !4292
  %182 = load i8*, i8** %segment_filename215, align 8, !dbg !4292
  %183 = load i32, i32* %basename_size, align 4, !dbg !4293
  %conv216 = sext i32 %183 to i64, !dbg !4293
  %call217 = call i64 @av_strlcpy(i8* %180, i8* %182, i64 %conv216), !dbg !4294
  %184 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4295
  %basename218 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %184, i32 0, i32 26, !dbg !4296
  %185 = load i8*, i8** %basename218, align 8, !dbg !4296
  %186 = load i32, i32* %basename_size, align 4, !dbg !4297
  %187 = load i32, i32* %i, align 4, !dbg !4298
  %call219 = call i32 @format_name(i8* %185, i32 %186, i32 %187), !dbg !4299
  store i32 %call219, i32* %ret, align 4, !dbg !4300
  %188 = load i32, i32* %ret, align 4, !dbg !4301
  %cmp220 = icmp slt i32 %188, 0, !dbg !4303
  br i1 %cmp220, label %if.then222, label %if.end223, !dbg !4304

if.then222:                                       ; preds = %if.end213
  br label %fail, !dbg !4305

if.end223:                                        ; preds = %if.end213
  br label %if.end279, !dbg !4306

if.else224:                                       ; preds = %if.end200
  %189 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4307
  %flags225 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %189, i32 0, i32 8, !dbg !4310
  %190 = load i32, i32* %flags225, align 8, !dbg !4310
  %and226 = and i32 %190, 1, !dbg !4311
  %tobool227 = icmp ne i32 %and226, 0, !dbg !4311
  br i1 %tobool227, label %if.then228, label %if.end235, !dbg !4312

if.then228:                                       ; preds = %if.else224
  %191 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4313
  %segment_type229 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %191, i32 0, i32 12, !dbg !4316
  %192 = load i32, i32* %segment_type229, align 8, !dbg !4316
  %cmp230 = icmp eq i32 %192, 1, !dbg !4317
  br i1 %cmp230, label %if.then232, label %if.else233, !dbg !4318

if.then232:                                       ; preds = %if.then228
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.218, i32 0, i32 0), i8** %pattern, align 8, !dbg !4319
  br label %if.end234, !dbg !4321

if.else233:                                       ; preds = %if.then228
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.219, i32 0, i32 0), i8** %pattern, align 8, !dbg !4322
  br label %if.end234

if.end234:                                        ; preds = %if.else233, %if.then232
  br label %if.end235, !dbg !4324

if.end235:                                        ; preds = %if.end234, %if.else224
  %193 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4325
  %use_localtime = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %193, i32 0, i32 13, !dbg !4327
  %194 = load i32, i32* %use_localtime, align 4, !dbg !4327
  %tobool236 = icmp ne i32 %194, 0, !dbg !4325
  br i1 %tobool236, label %if.then237, label %if.else244, !dbg !4328

if.then237:                                       ; preds = %if.end235
  %195 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4329
  %m3u8_name238 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %195, i32 0, i32 29, !dbg !4331
  %196 = load i8*, i8** %m3u8_name238, align 8, !dbg !4331
  %call239 = call i64 @strlen(i8* %196) #11, !dbg !4332
  %197 = load i8*, i8** %pattern_localtime_fmt, align 8, !dbg !4333
  %call240 = call i64 @strlen(i8* %197) #11, !dbg !4334
  %add241 = add i64 %call239, %call240, !dbg !4336
  %add242 = add i64 %add241, 1, !dbg !4337
  %conv243 = trunc i64 %add242 to i32, !dbg !4332
  store i32 %conv243, i32* %basename_size, align 4, !dbg !4338
  br label %if.end251, !dbg !4339

if.else244:                                       ; preds = %if.end235
  %198 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4340
  %m3u8_name245 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %198, i32 0, i32 29, !dbg !4342
  %199 = load i8*, i8** %m3u8_name245, align 8, !dbg !4342
  %call246 = call i64 @strlen(i8* %199) #11, !dbg !4343
  %200 = load i8*, i8** %pattern, align 8, !dbg !4344
  %call247 = call i64 @strlen(i8* %200) #11, !dbg !4345
  %add248 = add i64 %call246, %call247, !dbg !4347
  %add249 = add i64 %add248, 1, !dbg !4348
  %conv250 = trunc i64 %add249 to i32, !dbg !4343
  store i32 %conv250, i32* %basename_size, align 4, !dbg !4349
  br label %if.end251

if.end251:                                        ; preds = %if.else244, %if.then237
  %201 = load i32, i32* %basename_size, align 4, !dbg !4350
  %conv252 = sext i32 %201 to i64, !dbg !4350
  %call253 = call noalias i8* @av_malloc(i64 %conv252), !dbg !4351
  %202 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4352
  %basename254 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %202, i32 0, i32 26, !dbg !4353
  store i8* %call253, i8** %basename254, align 8, !dbg !4354
  %203 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4355
  %basename255 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %203, i32 0, i32 26, !dbg !4357
  %204 = load i8*, i8** %basename255, align 8, !dbg !4357
  %tobool256 = icmp ne i8* %204, null, !dbg !4355
  br i1 %tobool256, label %if.end258, label %if.then257, !dbg !4358

if.then257:                                       ; preds = %if.end251
  store i32 -12, i32* %ret, align 4, !dbg !4359
  br label %fail, !dbg !4361

if.end258:                                        ; preds = %if.end251
  %205 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4362
  %basename259 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %205, i32 0, i32 26, !dbg !4363
  %206 = load i8*, i8** %basename259, align 8, !dbg !4363
  %207 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4364
  %m3u8_name260 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %207, i32 0, i32 29, !dbg !4365
  %208 = load i8*, i8** %m3u8_name260, align 8, !dbg !4365
  %209 = load i32, i32* %basename_size, align 4, !dbg !4366
  %conv261 = sext i32 %209 to i64, !dbg !4366
  %call262 = call i64 @av_strlcpy(i8* %206, i8* %208, i64 %conv261), !dbg !4367
  %210 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4368
  %basename263 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %210, i32 0, i32 26, !dbg !4369
  %211 = load i8*, i8** %basename263, align 8, !dbg !4369
  %call264 = call i8* @strrchr(i8* %211, i32 46) #11, !dbg !4370
  store i8* %call264, i8** %p, align 8, !dbg !4371
  %212 = load i8*, i8** %p, align 8, !dbg !4372
  %tobool265 = icmp ne i8* %212, null, !dbg !4372
  br i1 %tobool265, label %if.then266, label %if.end267, !dbg !4374

if.then266:                                       ; preds = %if.end258
  %213 = load i8*, i8** %p, align 8, !dbg !4375
  store i8 0, i8* %213, align 1, !dbg !4376
  br label %if.end267, !dbg !4377

if.end267:                                        ; preds = %if.then266, %if.end258
  %214 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4378
  %use_localtime268 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %214, i32 0, i32 13, !dbg !4380
  %215 = load i32, i32* %use_localtime268, align 4, !dbg !4380
  %tobool269 = icmp ne i32 %215, 0, !dbg !4378
  br i1 %tobool269, label %if.then270, label %if.else274, !dbg !4381

if.then270:                                       ; preds = %if.end267
  %216 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4382
  %basename271 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %216, i32 0, i32 26, !dbg !4384
  %217 = load i8*, i8** %basename271, align 8, !dbg !4384
  %218 = load i8*, i8** %pattern_localtime_fmt, align 8, !dbg !4385
  %219 = load i32, i32* %basename_size, align 4, !dbg !4386
  %conv272 = sext i32 %219 to i64, !dbg !4386
  %call273 = call i64 @av_strlcat(i8* %217, i8* %218, i64 %conv272), !dbg !4387
  br label %if.end278, !dbg !4388

if.else274:                                       ; preds = %if.end267
  %220 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4389
  %basename275 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %220, i32 0, i32 26, !dbg !4391
  %221 = load i8*, i8** %basename275, align 8, !dbg !4391
  %222 = load i8*, i8** %pattern, align 8, !dbg !4392
  %223 = load i32, i32* %basename_size, align 4, !dbg !4393
  %conv276 = sext i32 %223 to i64, !dbg !4393
  %call277 = call i64 @av_strlcat(i8* %221, i8* %222, i64 %conv276), !dbg !4394
  br label %if.end278

if.end278:                                        ; preds = %if.else274, %if.then270
  br label %if.end279

if.end279:                                        ; preds = %if.end278, %if.end223
  %224 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4395
  %segment_type280 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %224, i32 0, i32 12, !dbg !4397
  %225 = load i32, i32* %segment_type280, align 8, !dbg !4397
  %cmp281 = icmp eq i32 %225, 1, !dbg !4398
  br i1 %cmp281, label %if.then283, label %if.end366, !dbg !4399

if.then283:                                       ; preds = %if.end279
  %226 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4400
  %nb_varstreams284 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %226, i32 0, i32 38, !dbg !4403
  %227 = load i32, i32* %nb_varstreams284, align 8, !dbg !4403
  %cmp285 = icmp ugt i32 %227, 1, !dbg !4404
  br i1 %cmp285, label %if.then287, label %if.end291, !dbg !4405

if.then287:                                       ; preds = %if.then283
  %228 = load i32, i32* %fmp4_init_filename_len, align 4, !dbg !4406
  %conv288 = sext i32 %228 to i64, !dbg !4406
  %add289 = add i64 %conv288, 3, !dbg !4406
  %conv290 = trunc i64 %add289 to i32, !dbg !4406
  store i32 %conv290, i32* %fmp4_init_filename_len, align 4, !dbg !4406
  br label %if.end291, !dbg !4407

if.end291:                                        ; preds = %if.then287, %if.then283
  %229 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4408
  %flags292 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %229, i32 0, i32 8, !dbg !4410
  %230 = load i32, i32* %flags292, align 8, !dbg !4410
  %and293 = and i32 %230, 1, !dbg !4411
  %tobool294 = icmp ne i32 %and293, 0, !dbg !4411
  br i1 %tobool294, label %if.then295, label %if.else303, !dbg !4412

if.then295:                                       ; preds = %if.end291
  %231 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4413
  %basename296 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %231, i32 0, i32 26, !dbg !4415
  %232 = load i8*, i8** %basename296, align 8, !dbg !4415
  %call297 = call noalias i8* @av_strdup(i8* %232), !dbg !4416
  %233 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4417
  %fmp4_init_filename298 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %233, i32 0, i32 32, !dbg !4418
  store i8* %call297, i8** %fmp4_init_filename298, align 8, !dbg !4419
  %234 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4420
  %fmp4_init_filename299 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %234, i32 0, i32 32, !dbg !4422
  %235 = load i8*, i8** %fmp4_init_filename299, align 8, !dbg !4422
  %tobool300 = icmp ne i8* %235, null, !dbg !4420
  br i1 %tobool300, label %if.end302, label %if.then301, !dbg !4423

if.then301:                                       ; preds = %if.then295
  store i32 -12, i32* %ret, align 4, !dbg !4424
  br label %fail, !dbg !4426

if.end302:                                        ; preds = %if.then295
  br label %if.end365, !dbg !4427

if.else303:                                       ; preds = %if.end291
  %236 = load i32, i32* %fmp4_init_filename_len, align 4, !dbg !4428
  %conv304 = sext i32 %236 to i64, !dbg !4428
  %call305 = call noalias i8* @av_malloc(i64 %conv304), !dbg !4430
  %237 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4431
  %fmp4_init_filename306 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %237, i32 0, i32 32, !dbg !4432
  store i8* %call305, i8** %fmp4_init_filename306, align 8, !dbg !4433
  %238 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4434
  %fmp4_init_filename307 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %238, i32 0, i32 32, !dbg !4436
  %239 = load i8*, i8** %fmp4_init_filename307, align 8, !dbg !4436
  %tobool308 = icmp ne i8* %239, null, !dbg !4434
  br i1 %tobool308, label %if.end310, label %if.then309, !dbg !4437

if.then309:                                       ; preds = %if.else303
  store i32 -12, i32* %ret, align 4, !dbg !4438
  br label %fail, !dbg !4440

if.end310:                                        ; preds = %if.else303
  %240 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4441
  %fmp4_init_filename311 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %240, i32 0, i32 32, !dbg !4442
  %241 = load i8*, i8** %fmp4_init_filename311, align 8, !dbg !4442
  %242 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4443
  %fmp4_init_filename312 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %242, i32 0, i32 11, !dbg !4444
  %243 = load i8*, i8** %fmp4_init_filename312, align 8, !dbg !4444
  %244 = load i32, i32* %fmp4_init_filename_len, align 4, !dbg !4445
  %conv313 = sext i32 %244 to i64, !dbg !4445
  %call314 = call i64 @av_strlcpy(i8* %241, i8* %243, i64 %conv313), !dbg !4446
  %245 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4447
  %nb_varstreams315 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %245, i32 0, i32 38, !dbg !4449
  %246 = load i32, i32* %nb_varstreams315, align 8, !dbg !4449
  %cmp316 = icmp ugt i32 %246, 1, !dbg !4450
  br i1 %cmp316, label %if.then318, label %if.end333, !dbg !4451

if.then318:                                       ; preds = %if.end310
  %247 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4452
  %fmp4_init_filename319 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %247, i32 0, i32 32, !dbg !4455
  %248 = load i8*, i8** %fmp4_init_filename319, align 8, !dbg !4455
  %call320 = call i8* @av_stristr(i8* %248, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.155, i32 0, i32 0)), !dbg !4456
  %tobool321 = icmp ne i8* %call320, null, !dbg !4456
  br i1 %tobool321, label %if.then322, label %if.else325, !dbg !4457

if.then322:                                       ; preds = %if.then318
  %249 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4458
  %fmp4_init_filename323 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %249, i32 0, i32 32, !dbg !4460
  %250 = load i8*, i8** %fmp4_init_filename323, align 8, !dbg !4460
  %251 = load i32, i32* %fmp4_init_filename_len, align 4, !dbg !4461
  %252 = load i32, i32* %i, align 4, !dbg !4462
  %call324 = call i32 @format_name(i8* %250, i32 %251, i32 %252), !dbg !4463
  br label %if.end328, !dbg !4464

if.else325:                                       ; preds = %if.then318
  %253 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4465
  %fmp4_init_filename326 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %253, i32 0, i32 32, !dbg !4467
  %254 = load i8*, i8** %fmp4_init_filename326, align 8, !dbg !4467
  %255 = load i32, i32* %fmp4_init_filename_len, align 4, !dbg !4468
  %256 = load i32, i32* %i, align 4, !dbg !4469
  %call327 = call i32 @append_postfix(i8* %254, i32 %255, i32 %256), !dbg !4470
  store i32 %call327, i32* %ret, align 4, !dbg !4471
  br label %if.end328

if.end328:                                        ; preds = %if.else325, %if.then322
  %257 = load i32, i32* %ret, align 4, !dbg !4472
  %cmp329 = icmp slt i32 %257, 0, !dbg !4474
  br i1 %cmp329, label %if.then331, label %if.end332, !dbg !4475

if.then331:                                       ; preds = %if.end328
  br label %fail, !dbg !4476

if.end332:                                        ; preds = %if.end328
  br label %if.end333, !dbg !4477

if.end333:                                        ; preds = %if.end332, %if.end310
  %258 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4478
  %m3u8_name334 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %258, i32 0, i32 29, !dbg !4479
  %259 = load i8*, i8** %m3u8_name334, align 8, !dbg !4479
  %call335 = call i64 @strlen(i8* %259) #11, !dbg !4480
  %260 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4481
  %fmp4_init_filename336 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %260, i32 0, i32 32, !dbg !4482
  %261 = load i8*, i8** %fmp4_init_filename336, align 8, !dbg !4482
  %call337 = call i64 @strlen(i8* %261) #11, !dbg !4483
  %add338 = add i64 %call335, %call337, !dbg !4484
  %add339 = add i64 %add338, 1, !dbg !4485
  %conv340 = trunc i64 %add339 to i32, !dbg !4480
  store i32 %conv340, i32* %fmp4_init_filename_len, align 4, !dbg !4486
  %262 = load i32, i32* %fmp4_init_filename_len, align 4, !dbg !4487
  %conv341 = sext i32 %262 to i64, !dbg !4487
  %call342 = call noalias i8* @av_malloc(i64 %conv341), !dbg !4488
  %263 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4489
  %base_output_dirname = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %263, i32 0, i32 33, !dbg !4490
  store i8* %call342, i8** %base_output_dirname, align 8, !dbg !4491
  %264 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4492
  %base_output_dirname343 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %264, i32 0, i32 33, !dbg !4494
  %265 = load i8*, i8** %base_output_dirname343, align 8, !dbg !4494
  %tobool344 = icmp ne i8* %265, null, !dbg !4492
  br i1 %tobool344, label %if.end346, label %if.then345, !dbg !4495

if.then345:                                       ; preds = %if.end333
  store i32 -12, i32* %ret, align 4, !dbg !4496
  br label %fail, !dbg !4498

if.end346:                                        ; preds = %if.end333
  %266 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4499
  %base_output_dirname347 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %266, i32 0, i32 33, !dbg !4500
  %267 = load i8*, i8** %base_output_dirname347, align 8, !dbg !4500
  %268 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4501
  %m3u8_name348 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %268, i32 0, i32 29, !dbg !4502
  %269 = load i8*, i8** %m3u8_name348, align 8, !dbg !4502
  %270 = load i32, i32* %fmp4_init_filename_len, align 4, !dbg !4503
  %conv349 = sext i32 %270 to i64, !dbg !4503
  %call350 = call i64 @av_strlcpy(i8* %267, i8* %269, i64 %conv349), !dbg !4504
  %271 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4505
  %base_output_dirname351 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %271, i32 0, i32 33, !dbg !4506
  %272 = load i8*, i8** %base_output_dirname351, align 8, !dbg !4506
  %call352 = call i8* @strrchr(i8* %272, i32 47) #11, !dbg !4507
  store i8* %call352, i8** %p, align 8, !dbg !4508
  %273 = load i8*, i8** %p, align 8, !dbg !4509
  %tobool353 = icmp ne i8* %273, null, !dbg !4509
  br i1 %tobool353, label %if.then354, label %if.else359, !dbg !4511

if.then354:                                       ; preds = %if.end346
  %274 = load i8*, i8** %p, align 8, !dbg !4512
  %add.ptr = getelementptr inbounds i8, i8* %274, i64 1, !dbg !4514
  store i8 0, i8* %add.ptr, align 1, !dbg !4515
  %275 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4516
  %base_output_dirname355 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %275, i32 0, i32 33, !dbg !4517
  %276 = load i8*, i8** %base_output_dirname355, align 8, !dbg !4517
  %277 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4518
  %fmp4_init_filename356 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %277, i32 0, i32 32, !dbg !4519
  %278 = load i8*, i8** %fmp4_init_filename356, align 8, !dbg !4519
  %279 = load i32, i32* %fmp4_init_filename_len, align 4, !dbg !4520
  %conv357 = sext i32 %279 to i64, !dbg !4520
  %call358 = call i64 @av_strlcat(i8* %276, i8* %278, i64 %conv357), !dbg !4521
  br label %if.end364, !dbg !4522

if.else359:                                       ; preds = %if.end346
  %280 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4523
  %base_output_dirname360 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %280, i32 0, i32 33, !dbg !4525
  %281 = load i8*, i8** %base_output_dirname360, align 8, !dbg !4525
  %282 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4526
  %fmp4_init_filename361 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %282, i32 0, i32 32, !dbg !4527
  %283 = load i8*, i8** %fmp4_init_filename361, align 8, !dbg !4527
  %284 = load i32, i32* %fmp4_init_filename_len, align 4, !dbg !4528
  %conv362 = sext i32 %284 to i64, !dbg !4528
  %call363 = call i64 @av_strlcpy(i8* %281, i8* %283, i64 %conv362), !dbg !4529
  br label %if.end364

if.end364:                                        ; preds = %if.else359, %if.then354
  br label %if.end365

if.end365:                                        ; preds = %if.end364, %if.end302
  br label %if.end366, !dbg !4530

if.end366:                                        ; preds = %if.end365, %if.end279
  %285 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4531
  %use_localtime367 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %285, i32 0, i32 13, !dbg !4533
  %286 = load i32, i32* %use_localtime367, align 4, !dbg !4533
  %tobool368 = icmp ne i32 %286, 0, !dbg !4531
  br i1 %tobool368, label %if.else375, label %if.then369, !dbg !4534

if.then369:                                       ; preds = %if.end366
  %287 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4535
  %call370 = call i32 @sls_flag_check_duration_size_index(%struct.HLSContext* %287), !dbg !4537
  store i32 %call370, i32* %ret, align 4, !dbg !4538
  %288 = load i32, i32* %ret, align 4, !dbg !4539
  %cmp371 = icmp slt i32 %288, 0, !dbg !4541
  br i1 %cmp371, label %if.then373, label %if.end374, !dbg !4542

if.then373:                                       ; preds = %if.then369
  br label %fail, !dbg !4543

if.end374:                                        ; preds = %if.then369
  br label %if.end381, !dbg !4545

if.else375:                                       ; preds = %if.end366
  %289 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4546
  %290 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4548
  %call376 = call i32 @sls_flag_check_duration_size(%struct.HLSContext* %289, %struct.VariantStream* %290), !dbg !4549
  store i32 %call376, i32* %ret, align 4, !dbg !4550
  %291 = load i32, i32* %ret, align 4, !dbg !4551
  %cmp377 = icmp slt i32 %291, 0, !dbg !4553
  br i1 %cmp377, label %if.then379, label %if.end380, !dbg !4554

if.then379:                                       ; preds = %if.else375
  br label %fail, !dbg !4555

if.end380:                                        ; preds = %if.else375
  br label %if.end381

if.end381:                                        ; preds = %if.end380, %if.end374
  %292 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4557
  %has_subtitle382 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %292, i32 0, i32 11, !dbg !4559
  %293 = load i32, i32* %has_subtitle382, align 4, !dbg !4559
  %tobool383 = icmp ne i32 %293, 0, !dbg !4557
  br i1 %tobool383, label %if.then384, label %if.end440, !dbg !4560

if.then384:                                       ; preds = %if.end381
  %294 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4561
  %flags385 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %294, i32 0, i32 8, !dbg !4564
  %295 = load i32, i32* %flags385, align 8, !dbg !4564
  %and386 = and i32 %295, 1, !dbg !4565
  %tobool387 = icmp ne i32 %and386, 0, !dbg !4565
  br i1 %tobool387, label %if.then388, label %if.end389, !dbg !4566

if.then388:                                       ; preds = %if.then384
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.220, i32 0, i32 0), i8** %vtt_pattern, align 8, !dbg !4567
  br label %if.end389, !dbg !4568

if.end389:                                        ; preds = %if.then388, %if.then384
  %296 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4569
  %m3u8_name390 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %296, i32 0, i32 29, !dbg !4570
  %297 = load i8*, i8** %m3u8_name390, align 8, !dbg !4570
  %call391 = call i64 @strlen(i8* %297) #11, !dbg !4571
  %298 = load i8*, i8** %vtt_pattern, align 8, !dbg !4572
  %call392 = call i64 @strlen(i8* %298) #11, !dbg !4573
  %add393 = add i64 %call391, %call392, !dbg !4575
  %add394 = add i64 %add393, 1, !dbg !4576
  %conv395 = trunc i64 %add394 to i32, !dbg !4571
  store i32 %conv395, i32* %vtt_basename_size, align 4, !dbg !4577
  %299 = load i32, i32* %vtt_basename_size, align 4, !dbg !4578
  %conv396 = sext i32 %299 to i64, !dbg !4578
  %call397 = call noalias i8* @av_malloc(i64 %conv396), !dbg !4579
  %300 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4580
  %vtt_basename = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %300, i32 0, i32 27, !dbg !4581
  store i8* %call397, i8** %vtt_basename, align 8, !dbg !4582
  %301 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4583
  %vtt_basename398 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %301, i32 0, i32 27, !dbg !4585
  %302 = load i8*, i8** %vtt_basename398, align 8, !dbg !4585
  %tobool399 = icmp ne i8* %302, null, !dbg !4583
  br i1 %tobool399, label %if.end401, label %if.then400, !dbg !4586

if.then400:                                       ; preds = %if.end389
  store i32 -12, i32* %ret, align 4, !dbg !4587
  br label %fail, !dbg !4589

if.end401:                                        ; preds = %if.end389
  %303 = load i32, i32* %vtt_basename_size, align 4, !dbg !4590
  %conv402 = sext i32 %303 to i64, !dbg !4590
  %call403 = call noalias i8* @av_malloc(i64 %conv402), !dbg !4591
  %304 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4592
  %vtt_m3u8_name = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %304, i32 0, i32 28, !dbg !4593
  store i8* %call403, i8** %vtt_m3u8_name, align 8, !dbg !4594
  %305 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4595
  %vtt_m3u8_name404 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %305, i32 0, i32 28, !dbg !4597
  %306 = load i8*, i8** %vtt_m3u8_name404, align 8, !dbg !4597
  %tobool405 = icmp ne i8* %306, null, !dbg !4595
  br i1 %tobool405, label %if.end407, label %if.then406, !dbg !4598

if.then406:                                       ; preds = %if.end401
  store i32 -12, i32* %ret, align 4, !dbg !4599
  br label %fail, !dbg !4601

if.end407:                                        ; preds = %if.end401
  %307 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4602
  %vtt_basename408 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %307, i32 0, i32 27, !dbg !4603
  %308 = load i8*, i8** %vtt_basename408, align 8, !dbg !4603
  %309 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4604
  %m3u8_name409 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %309, i32 0, i32 29, !dbg !4605
  %310 = load i8*, i8** %m3u8_name409, align 8, !dbg !4605
  %311 = load i32, i32* %vtt_basename_size, align 4, !dbg !4606
  %conv410 = sext i32 %311 to i64, !dbg !4606
  %call411 = call i64 @av_strlcpy(i8* %308, i8* %310, i64 %conv410), !dbg !4607
  %312 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4608
  %vtt_basename412 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %312, i32 0, i32 27, !dbg !4609
  %313 = load i8*, i8** %vtt_basename412, align 8, !dbg !4609
  %call413 = call i8* @strrchr(i8* %313, i32 46) #11, !dbg !4610
  store i8* %call413, i8** %p, align 8, !dbg !4611
  %314 = load i8*, i8** %p, align 8, !dbg !4612
  %tobool414 = icmp ne i8* %314, null, !dbg !4612
  br i1 %tobool414, label %if.then415, label %if.end416, !dbg !4614

if.then415:                                       ; preds = %if.end407
  %315 = load i8*, i8** %p, align 8, !dbg !4615
  store i8 0, i8* %315, align 1, !dbg !4616
  br label %if.end416, !dbg !4617

if.end416:                                        ; preds = %if.then415, %if.end407
  %316 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4618
  %subtitle_filename417 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %316, i32 0, i32 21, !dbg !4620
  %317 = load i8*, i8** %subtitle_filename417, align 8, !dbg !4620
  %tobool418 = icmp ne i8* %317, null, !dbg !4618
  br i1 %tobool418, label %if.then419, label %if.else429, !dbg !4621

if.then419:                                       ; preds = %if.end416
  %318 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4622
  %vtt_m3u8_name420 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %318, i32 0, i32 28, !dbg !4624
  %319 = load i8*, i8** %vtt_m3u8_name420, align 8, !dbg !4624
  %320 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4625
  %subtitle_filename421 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %320, i32 0, i32 21, !dbg !4626
  %321 = load i8*, i8** %subtitle_filename421, align 8, !dbg !4626
  %call422 = call i8* @strcpy(i8* %319, i8* %321) #10, !dbg !4627
  %322 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4628
  %vtt_m3u8_name423 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %322, i32 0, i32 28, !dbg !4629
  %323 = load i8*, i8** %vtt_m3u8_name423, align 8, !dbg !4629
  %324 = load i32, i32* %vtt_basename_size, align 4, !dbg !4630
  %325 = load i32, i32* %i, align 4, !dbg !4631
  %call424 = call i32 @format_name(i8* %323, i32 %324, i32 %325), !dbg !4632
  store i32 %call424, i32* %ret, align 4, !dbg !4633
  %326 = load i32, i32* %ret, align 4, !dbg !4634
  %cmp425 = icmp slt i32 %326, 0, !dbg !4636
  br i1 %cmp425, label %if.then427, label %if.end428, !dbg !4637

if.then427:                                       ; preds = %if.then419
  br label %fail, !dbg !4638

if.end428:                                        ; preds = %if.then419
  br label %if.end436, !dbg !4639

if.else429:                                       ; preds = %if.end416
  %327 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4640
  %vtt_m3u8_name430 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %327, i32 0, i32 28, !dbg !4642
  %328 = load i8*, i8** %vtt_m3u8_name430, align 8, !dbg !4642
  %329 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4643
  %vtt_basename431 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %329, i32 0, i32 27, !dbg !4644
  %330 = load i8*, i8** %vtt_basename431, align 8, !dbg !4644
  %call432 = call i8* @strcpy(i8* %328, i8* %330) #10, !dbg !4645
  %331 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4646
  %vtt_m3u8_name433 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %331, i32 0, i32 28, !dbg !4647
  %332 = load i8*, i8** %vtt_m3u8_name433, align 8, !dbg !4647
  %333 = load i32, i32* %vtt_basename_size, align 4, !dbg !4648
  %conv434 = sext i32 %333 to i64, !dbg !4648
  %call435 = call i64 @av_strlcat(i8* %332, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.221, i32 0, i32 0), i64 %conv434), !dbg !4649
  br label %if.end436

if.end436:                                        ; preds = %if.else429, %if.end428
  %334 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4650
  %vtt_basename437 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %334, i32 0, i32 27, !dbg !4651
  %335 = load i8*, i8** %vtt_basename437, align 8, !dbg !4651
  %336 = load i8*, i8** %vtt_pattern, align 8, !dbg !4652
  %337 = load i32, i32* %vtt_basename_size, align 4, !dbg !4653
  %conv438 = sext i32 %337 to i64, !dbg !4653
  %call439 = call i64 @av_strlcat(i8* %335, i8* %336, i64 %conv438), !dbg !4654
  br label %if.end440, !dbg !4655

if.end440:                                        ; preds = %if.end436, %if.end381
  %338 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4656
  %baseurl = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %338, i32 0, i32 18, !dbg !4658
  %339 = load i8*, i8** %baseurl, align 8, !dbg !4658
  %tobool441 = icmp ne i8* %339, null, !dbg !4656
  br i1 %tobool441, label %if.then442, label %if.end450, !dbg !4659

if.then442:                                       ; preds = %if.end440
  %340 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4660
  %baseurl443 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %340, i32 0, i32 18, !dbg !4662
  %341 = load i8*, i8** %baseurl443, align 8, !dbg !4662
  %call444 = call noalias i8* @av_strdup(i8* %341), !dbg !4663
  %342 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4664
  %baseurl445 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %342, i32 0, i32 43, !dbg !4665
  store i8* %call444, i8** %baseurl445, align 8, !dbg !4666
  %343 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4667
  %baseurl446 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %343, i32 0, i32 43, !dbg !4669
  %344 = load i8*, i8** %baseurl446, align 8, !dbg !4669
  %tobool447 = icmp ne i8* %344, null, !dbg !4667
  br i1 %tobool447, label %if.end449, label %if.then448, !dbg !4670

if.then448:                                       ; preds = %if.then442
  store i32 -12, i32* %ret, align 4, !dbg !4671
  br label %fail, !dbg !4673

if.end449:                                        ; preds = %if.then442
  br label %if.end450, !dbg !4674

if.end450:                                        ; preds = %if.end449, %if.end440
  %345 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4675
  %346 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4677
  %call451 = call i32 @hls_mux_init(%struct.AVFormatContext* %345, %struct.VariantStream* %346), !dbg !4678
  store i32 %call451, i32* %ret, align 4, !dbg !4679
  %cmp452 = icmp slt i32 %call451, 0, !dbg !4680
  br i1 %cmp452, label %if.then454, label %if.end455, !dbg !4681

if.then454:                                       ; preds = %if.end450
  br label %fail, !dbg !4682

if.end455:                                        ; preds = %if.end450
  %347 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4683
  %flags456 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %347, i32 0, i32 8, !dbg !4685
  %348 = load i32, i32* %flags456, align 8, !dbg !4685
  %and457 = and i32 %348, 64, !dbg !4686
  %tobool458 = icmp ne i32 %and457, 0, !dbg !4686
  br i1 %tobool458, label %if.then459, label %if.end472, !dbg !4687

if.then459:                                       ; preds = %if.end455
  %349 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4688
  %350 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4690
  %m3u8_name460 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %350, i32 0, i32 29, !dbg !4691
  %351 = load i8*, i8** %m3u8_name460, align 8, !dbg !4691
  %352 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4692
  %call461 = call i32 @parse_playlist(%struct.AVFormatContext* %349, i8* %351, %struct.VariantStream* %352), !dbg !4693
  %353 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4694
  %discontinuity = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %353, i32 0, i32 21, !dbg !4695
  store i32 1, i32* %discontinuity, align 8, !dbg !4696
  %354 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4697
  %init_time462 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %354, i32 0, i32 4, !dbg !4699
  %355 = load float, float* %init_time462, align 8, !dbg !4699
  %cmp463 = fcmp ogt float %355, 0.000000e+00, !dbg !4700
  br i1 %cmp463, label %if.then465, label %if.end471, !dbg !4701

if.then465:                                       ; preds = %if.then459
  %356 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4702
  %357 = bitcast %struct.AVFormatContext* %356 to i8*, !dbg !4702
  call void (i8*, i32, i8*, ...) @av_log(i8* %357, i32 24, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.222, i32 0, i32 0)), !dbg !4704
  %358 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4705
  %init_time466 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %358, i32 0, i32 4, !dbg !4706
  store float 0.000000e+00, float* %init_time466, align 8, !dbg !4707
  %359 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4708
  %time467 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %359, i32 0, i32 3, !dbg !4709
  %360 = load float, float* %time467, align 4, !dbg !4709
  %mul468 = fmul float %360, 1.000000e+06, !dbg !4710
  %conv469 = fptosi float %mul468 to i64, !dbg !4708
  %361 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4711
  %recording_time470 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %361, i32 0, i32 16, !dbg !4712
  store i64 %conv469, i64* %recording_time470, align 8, !dbg !4713
  br label %if.end471, !dbg !4714

if.end471:                                        ; preds = %if.then465, %if.then459
  br label %if.end472, !dbg !4715

if.end472:                                        ; preds = %if.end471, %if.end455
  %362 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4716
  %363 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4718
  %call473 = call i32 @hls_start(%struct.AVFormatContext* %362, %struct.VariantStream* %363), !dbg !4719
  store i32 %call473, i32* %ret, align 4, !dbg !4720
  %cmp474 = icmp slt i32 %call473, 0, !dbg !4721
  br i1 %cmp474, label %if.then476, label %if.end477, !dbg !4722

if.then476:                                       ; preds = %if.end472
  br label %fail, !dbg !4723

if.end477:                                        ; preds = %if.end472
  br label %for.inc478, !dbg !4724

for.inc478:                                       ; preds = %if.end477
  %364 = load i32, i32* %i, align 4, !dbg !4725
  %inc479 = add nsw i32 %364, 1, !dbg !4725
  store i32 %inc479, i32* %i, align 4, !dbg !4725
  br label %for.cond, !dbg !4727, !llvm.loop !4728

for.end480:                                       ; preds = %for.cond
  br label %fail, !dbg !4730

fail:                                             ; preds = %for.end480, %if.then476, %if.then454, %if.then448, %if.then427, %if.then406, %if.then400, %if.then379, %if.then373, %if.then345, %if.then331, %if.then309, %if.then301, %if.then257, %if.then222, %if.then212, %if.then198, %if.then190, %if.then137, %if.then109, %if.then99, %if.then51, %if.then43, %if.then33, %if.then21, %if.then12, %if.then6, %if.then
  %365 = load i32, i32* %ret, align 4, !dbg !4732
  %cmp481 = icmp slt i32 %365, 0, !dbg !4734
  br i1 %cmp481, label %if.then483, label %if.end525, !dbg !4735

if.then483:                                       ; preds = %fail
  %366 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4736
  %key_basename = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %366, i32 0, i32 27, !dbg !4738
  %367 = bitcast i8** %key_basename to i8*, !dbg !4739
  call void @av_freep(i8* %367), !dbg !4740
  store i32 0, i32* %i, align 4, !dbg !4741
  br label %for.cond484, !dbg !4743

for.cond484:                                      ; preds = %for.inc509, %if.then483
  %368 = load i32, i32* %i, align 4, !dbg !4744
  %369 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4747
  %nb_varstreams485 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %369, i32 0, i32 38, !dbg !4748
  %370 = load i32, i32* %nb_varstreams485, align 8, !dbg !4748
  %cmp486 = icmp ult i32 %368, %370, !dbg !4749
  br i1 %cmp486, label %land.rhs, label %land.end, !dbg !4750

land.rhs:                                         ; preds = %for.cond484
  %371 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4751
  %var_streams488 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %371, i32 0, i32 37, !dbg !4753
  %372 = load %struct.VariantStream*, %struct.VariantStream** %var_streams488, align 8, !dbg !4753
  %tobool489 = icmp ne %struct.VariantStream* %372, null, !dbg !4754
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond484
  %373 = phi i1 [ false, %for.cond484 ], [ %tobool489, %land.rhs ]
  br i1 %373, label %for.body490, label %for.end511, !dbg !4755

for.body490:                                      ; preds = %land.end
  %374 = load i32, i32* %i, align 4, !dbg !4757
  %idxprom491 = sext i32 %374 to i64, !dbg !4759
  %375 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4759
  %var_streams492 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %375, i32 0, i32 37, !dbg !4760
  %376 = load %struct.VariantStream*, %struct.VariantStream** %var_streams492, align 8, !dbg !4760
  %arrayidx493 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %376, i64 %idxprom491, !dbg !4759
  store %struct.VariantStream* %arrayidx493, %struct.VariantStream** %vs, align 8, !dbg !4761
  %377 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4762
  %basename494 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %377, i32 0, i32 26, !dbg !4763
  %378 = bitcast i8** %basename494 to i8*, !dbg !4764
  call void @av_freep(i8* %378), !dbg !4765
  %379 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4766
  %vtt_basename495 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %379, i32 0, i32 27, !dbg !4767
  %380 = bitcast i8** %vtt_basename495 to i8*, !dbg !4768
  call void @av_freep(i8* %380), !dbg !4769
  %381 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4770
  %fmp4_init_filename496 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %381, i32 0, i32 32, !dbg !4771
  %382 = bitcast i8** %fmp4_init_filename496 to i8*, !dbg !4772
  call void @av_freep(i8* %382), !dbg !4773
  %383 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4774
  %m3u8_name497 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %383, i32 0, i32 29, !dbg !4775
  %384 = bitcast i8** %m3u8_name497 to i8*, !dbg !4776
  call void @av_freep(i8* %384), !dbg !4777
  %385 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4778
  %vtt_m3u8_name498 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %385, i32 0, i32 28, !dbg !4779
  %386 = bitcast i8** %vtt_m3u8_name498 to i8*, !dbg !4780
  call void @av_freep(i8* %386), !dbg !4781
  %387 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4782
  %streams499 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %387, i32 0, i32 34, !dbg !4783
  %388 = bitcast %struct.AVStream*** %streams499 to i8*, !dbg !4784
  call void @av_freep(i8* %388), !dbg !4785
  %389 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4786
  %language = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %389, i32 0, i32 40, !dbg !4787
  %390 = bitcast i8** %language to i8*, !dbg !4788
  call void @av_freep(i8* %390), !dbg !4789
  %391 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4790
  %agroup = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %391, i32 0, i32 41, !dbg !4791
  %392 = bitcast i8** %agroup to i8*, !dbg !4792
  call void @av_freep(i8* %392), !dbg !4793
  %393 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4794
  %ccgroup = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %393, i32 0, i32 42, !dbg !4795
  %394 = bitcast i8** %ccgroup to i8*, !dbg !4796
  call void @av_freep(i8* %394), !dbg !4797
  %395 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4798
  %baseurl500 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %395, i32 0, i32 43, !dbg !4799
  %396 = bitcast i8** %baseurl500 to i8*, !dbg !4800
  call void @av_freep(i8* %396), !dbg !4801
  %397 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4802
  %avf = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %397, i32 0, i32 8, !dbg !4804
  %398 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf, align 8, !dbg !4804
  %tobool501 = icmp ne %struct.AVFormatContext* %398, null, !dbg !4802
  br i1 %tobool501, label %if.then502, label %if.end504, !dbg !4805

if.then502:                                       ; preds = %for.body490
  %399 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4806
  %avf503 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %399, i32 0, i32 8, !dbg !4807
  %400 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf503, align 8, !dbg !4807
  call void @avformat_free_context(%struct.AVFormatContext* %400), !dbg !4808
  br label %if.end504, !dbg !4808

if.end504:                                        ; preds = %if.then502, %for.body490
  %401 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4809
  %vtt_avf = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %401, i32 0, i32 9, !dbg !4811
  %402 = load %struct.AVFormatContext*, %struct.AVFormatContext** %vtt_avf, align 8, !dbg !4811
  %tobool505 = icmp ne %struct.AVFormatContext* %402, null, !dbg !4809
  br i1 %tobool505, label %if.then506, label %if.end508, !dbg !4812

if.then506:                                       ; preds = %if.end504
  %403 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !4813
  %vtt_avf507 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %403, i32 0, i32 9, !dbg !4814
  %404 = load %struct.AVFormatContext*, %struct.AVFormatContext** %vtt_avf507, align 8, !dbg !4814
  call void @avformat_free_context(%struct.AVFormatContext* %404), !dbg !4815
  br label %if.end508, !dbg !4815

if.end508:                                        ; preds = %if.then506, %if.end504
  br label %for.inc509, !dbg !4816

for.inc509:                                       ; preds = %if.end508
  %405 = load i32, i32* %i, align 4, !dbg !4817
  %inc510 = add nsw i32 %405, 1, !dbg !4817
  store i32 %inc510, i32* %i, align 4, !dbg !4817
  br label %for.cond484, !dbg !4819, !llvm.loop !4820

for.end511:                                       ; preds = %land.end
  store i32 0, i32* %i, align 4, !dbg !4822
  br label %for.cond512, !dbg !4824

for.cond512:                                      ; preds = %for.inc520, %for.end511
  %406 = load i32, i32* %i, align 4, !dbg !4825
  %407 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4828
  %nb_ccstreams = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %407, i32 0, i32 40, !dbg !4829
  %408 = load i32, i32* %nb_ccstreams, align 8, !dbg !4829
  %cmp513 = icmp ult i32 %406, %408, !dbg !4830
  br i1 %cmp513, label %for.body515, label %for.end522, !dbg !4831

for.body515:                                      ; preds = %for.cond512
  call void @llvm.dbg.declare(metadata %struct.ClosedCaptionsStream** %ccs, metadata !4832, metadata !2335), !dbg !4834
  %409 = load i32, i32* %i, align 4, !dbg !4835
  %idxprom516 = sext i32 %409 to i64, !dbg !4836
  %410 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4836
  %cc_streams = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %410, i32 0, i32 39, !dbg !4837
  %411 = load %struct.ClosedCaptionsStream*, %struct.ClosedCaptionsStream** %cc_streams, align 8, !dbg !4837
  %arrayidx517 = getelementptr inbounds %struct.ClosedCaptionsStream, %struct.ClosedCaptionsStream* %411, i64 %idxprom516, !dbg !4836
  store %struct.ClosedCaptionsStream* %arrayidx517, %struct.ClosedCaptionsStream** %ccs, align 8, !dbg !4834
  %412 = load %struct.ClosedCaptionsStream*, %struct.ClosedCaptionsStream** %ccs, align 8, !dbg !4838
  %ccgroup518 = getelementptr inbounds %struct.ClosedCaptionsStream, %struct.ClosedCaptionsStream* %412, i32 0, i32 0, !dbg !4839
  %413 = bitcast i8** %ccgroup518 to i8*, !dbg !4840
  call void @av_freep(i8* %413), !dbg !4841
  %414 = load %struct.ClosedCaptionsStream*, %struct.ClosedCaptionsStream** %ccs, align 8, !dbg !4842
  %instreamid = getelementptr inbounds %struct.ClosedCaptionsStream, %struct.ClosedCaptionsStream* %414, i32 0, i32 1, !dbg !4843
  %415 = bitcast i8** %instreamid to i8*, !dbg !4844
  call void @av_freep(i8* %415), !dbg !4845
  %416 = load %struct.ClosedCaptionsStream*, %struct.ClosedCaptionsStream** %ccs, align 8, !dbg !4846
  %language519 = getelementptr inbounds %struct.ClosedCaptionsStream, %struct.ClosedCaptionsStream* %416, i32 0, i32 2, !dbg !4847
  %417 = bitcast i8** %language519 to i8*, !dbg !4848
  call void @av_freep(i8* %417), !dbg !4849
  br label %for.inc520, !dbg !4850

for.inc520:                                       ; preds = %for.body515
  %418 = load i32, i32* %i, align 4, !dbg !4851
  %inc521 = add nsw i32 %418, 1, !dbg !4851
  store i32 %inc521, i32* %i, align 4, !dbg !4851
  br label %for.cond512, !dbg !4853, !llvm.loop !4854

for.end522:                                       ; preds = %for.cond512
  %419 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4856
  %var_streams523 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %419, i32 0, i32 37, !dbg !4857
  %420 = bitcast %struct.VariantStream** %var_streams523 to i8*, !dbg !4858
  call void @av_freep(i8* %420), !dbg !4859
  %421 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4860
  %cc_streams524 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %421, i32 0, i32 39, !dbg !4861
  %422 = bitcast %struct.ClosedCaptionsStream** %cc_streams524 to i8*, !dbg !4862
  call void @av_freep(i8* %422), !dbg !4863
  %423 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !4864
  %master_m3u8_url = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %423, i32 0, i32 42, !dbg !4865
  %424 = bitcast i8** %master_m3u8_url to i8*, !dbg !4866
  call void @av_freep(i8* %424), !dbg !4867
  br label %if.end525, !dbg !4868

if.end525:                                        ; preds = %for.end522, %fail
  %425 = load i32, i32* %ret, align 4, !dbg !4869
  store i32 %425, i32* %retval, align 4, !dbg !4870
  br label %return, !dbg !4870

return:                                           ; preds = %if.end525, %if.then80, %if.then76
  %426 = load i32, i32* %retval, align 4, !dbg !4871
  ret i32 %426, !dbg !4871
}

declare i8* @av_default_item_name(i8*) #1

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

declare i32 @avformat_write_header(%struct.AVFormatContext*, %struct.AVDictionary**) #1

declare void @av_log(i8*, i32, i8*, ...) #1

declare void @avpriv_set_pts_info(%struct.AVStream*, i32, i32, i32) #1

; Function Attrs: nounwind uwtable
define internal void @write_codec_attr(%struct.AVStream* %st, %struct.VariantStream* %vs) #0 !dbg !4872 {
entry:
  %st.addr = alloca %struct.AVStream*, align 8
  %vs.addr = alloca %struct.VariantStream*, align 8
  %codec_strlen = alloca i32, align 4
  %attr = alloca [32 x i8], align 16
  %data = alloca i8*, align 8
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !4875, metadata !2335), !dbg !4876
  store %struct.VariantStream* %vs, %struct.VariantStream** %vs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VariantStream** %vs.addr, metadata !4877, metadata !2335), !dbg !4878
  call void @llvm.dbg.declare(metadata i32* %codec_strlen, metadata !4879, metadata !2335), !dbg !4880
  %0 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !4881
  %codec_attr = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %0, i32 0, i32 35, !dbg !4882
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %codec_attr, i32 0, i32 0, !dbg !4881
  %call = call i64 @strlen(i8* %arraydecay) #11, !dbg !4883
  %conv = trunc i64 %call to i32, !dbg !4883
  store i32 %conv, i32* %codec_strlen, align 4, !dbg !4880
  call void @llvm.dbg.declare(metadata [32 x i8]* %attr, metadata !4884, metadata !2335), !dbg !4888
  %1 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4889
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %1, i32 0, i32 19, !dbg !4891
  %2 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !4891
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i32 0, i32 0, !dbg !4892
  %3 = load i32, i32* %codec_type, align 8, !dbg !4892
  %cmp = icmp eq i32 %3, 3, !dbg !4893
  br i1 %cmp, label %if.then, label %if.end, !dbg !4894

if.then:                                          ; preds = %entry
  br label %return, !dbg !4895

if.end:                                           ; preds = %entry
  %4 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !4896
  %attr_status = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %4, i32 0, i32 36, !dbg !4898
  %5 = load i32, i32* %attr_status, align 8, !dbg !4898
  %cmp2 = icmp eq i32 %5, 1, !dbg !4899
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !4900

if.then4:                                         ; preds = %if.end
  br label %return, !dbg !4901

if.end5:                                          ; preds = %if.end
  %6 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4902
  %codecpar6 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %6, i32 0, i32 19, !dbg !4904
  %7 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar6, align 8, !dbg !4904
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %7, i32 0, i32 1, !dbg !4905
  %8 = load i32, i32* %codec_id, align 4, !dbg !4905
  %cmp7 = icmp eq i32 %8, 27, !dbg !4906
  br i1 %cmp7, label %if.then9, label %if.else39, !dbg !4907

if.then9:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata i8** %data, metadata !4908, metadata !2335), !dbg !4910
  %9 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4911
  %codecpar10 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %9, i32 0, i32 19, !dbg !4912
  %10 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar10, align 8, !dbg !4912
  %extradata = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %10, i32 0, i32 3, !dbg !4913
  %11 = load i8*, i8** %extradata, align 8, !dbg !4913
  store i8* %11, i8** %data, align 8, !dbg !4910
  %12 = load i8*, i8** %data, align 8, !dbg !4914
  %tobool = icmp ne i8* %12, null, !dbg !4914
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !4916

land.lhs.true:                                    ; preds = %if.then9
  %13 = load i8*, i8** %data, align 8, !dbg !4917
  %arrayidx = getelementptr inbounds i8, i8* %13, i64 0, !dbg !4917
  %14 = load i8, i8* %arrayidx, align 1, !dbg !4917
  %conv11 = zext i8 %14 to i32, !dbg !4917
  %15 = load i8*, i8** %data, align 8, !dbg !4919
  %arrayidx12 = getelementptr inbounds i8, i8* %15, i64 1, !dbg !4919
  %16 = load i8, i8* %arrayidx12, align 1, !dbg !4919
  %conv13 = zext i8 %16 to i32, !dbg !4919
  %or = or i32 %conv11, %conv13, !dbg !4920
  %17 = load i8*, i8** %data, align 8, !dbg !4921
  %arrayidx14 = getelementptr inbounds i8, i8* %17, i64 2, !dbg !4921
  %18 = load i8, i8* %arrayidx14, align 1, !dbg !4921
  %conv15 = zext i8 %18 to i32, !dbg !4921
  %or16 = or i32 %or, %conv15, !dbg !4922
  %cmp17 = icmp eq i32 %or16, 0, !dbg !4923
  br i1 %cmp17, label %land.lhs.true19, label %if.else, !dbg !4924

land.lhs.true19:                                  ; preds = %land.lhs.true
  %19 = load i8*, i8** %data, align 8, !dbg !4925
  %arrayidx20 = getelementptr inbounds i8, i8* %19, i64 3, !dbg !4925
  %20 = load i8, i8* %arrayidx20, align 1, !dbg !4925
  %conv21 = zext i8 %20 to i32, !dbg !4925
  %cmp22 = icmp eq i32 %conv21, 1, !dbg !4927
  br i1 %cmp22, label %land.lhs.true24, label %if.else, !dbg !4928

land.lhs.true24:                                  ; preds = %land.lhs.true19
  %21 = load i8*, i8** %data, align 8, !dbg !4929
  %arrayidx25 = getelementptr inbounds i8, i8* %21, i64 4, !dbg !4929
  %22 = load i8, i8* %arrayidx25, align 1, !dbg !4929
  %conv26 = zext i8 %22 to i32, !dbg !4929
  %and = and i32 %conv26, 31, !dbg !4931
  %cmp27 = icmp eq i32 %and, 7, !dbg !4932
  br i1 %cmp27, label %if.then29, label %if.else, !dbg !4933

if.then29:                                        ; preds = %land.lhs.true24
  %arraydecay30 = getelementptr inbounds [32 x i8], [32 x i8]* %attr, i32 0, i32 0, !dbg !4934
  %23 = load i8*, i8** %data, align 8, !dbg !4936
  %arrayidx31 = getelementptr inbounds i8, i8* %23, i64 5, !dbg !4936
  %24 = load i8, i8* %arrayidx31, align 1, !dbg !4936
  %conv32 = zext i8 %24 to i32, !dbg !4936
  %25 = load i8*, i8** %data, align 8, !dbg !4937
  %arrayidx33 = getelementptr inbounds i8, i8* %25, i64 6, !dbg !4937
  %26 = load i8, i8* %arrayidx33, align 1, !dbg !4937
  %conv34 = zext i8 %26 to i32, !dbg !4937
  %27 = load i8*, i8** %data, align 8, !dbg !4938
  %arrayidx35 = getelementptr inbounds i8, i8* %27, i64 7, !dbg !4938
  %28 = load i8, i8* %arrayidx35, align 1, !dbg !4938
  %conv36 = zext i8 %28 to i32, !dbg !4938
  %call37 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay30, i64 32, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.125, i32 0, i32 0), i32 %conv32, i32 %conv34, i32 %conv36) #10, !dbg !4939
  br label %if.end38, !dbg !4940

if.else:                                          ; preds = %land.lhs.true24, %land.lhs.true19, %land.lhs.true, %if.then9
  br label %fail, !dbg !4941

if.end38:                                         ; preds = %if.then29
  br label %if.end85, !dbg !4943

if.else39:                                        ; preds = %if.end5
  %29 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4944
  %codecpar40 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %29, i32 0, i32 19, !dbg !4947
  %30 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar40, align 8, !dbg !4947
  %codec_id41 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %30, i32 0, i32 1, !dbg !4948
  %31 = load i32, i32* %codec_id41, align 4, !dbg !4948
  %cmp42 = icmp eq i32 %31, 86016, !dbg !4949
  br i1 %cmp42, label %if.then44, label %if.else47, !dbg !4944

if.then44:                                        ; preds = %if.else39
  %arraydecay45 = getelementptr inbounds [32 x i8], [32 x i8]* %attr, i32 0, i32 0, !dbg !4950
  %call46 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay45, i64 32, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.126, i32 0, i32 0)) #10, !dbg !4952
  br label %if.end84, !dbg !4953

if.else47:                                        ; preds = %if.else39
  %32 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4954
  %codecpar48 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %32, i32 0, i32 19, !dbg !4957
  %33 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar48, align 8, !dbg !4957
  %codec_id49 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %33, i32 0, i32 1, !dbg !4958
  %34 = load i32, i32* %codec_id49, align 4, !dbg !4958
  %cmp50 = icmp eq i32 %34, 86017, !dbg !4959
  br i1 %cmp50, label %if.then52, label %if.else55, !dbg !4954

if.then52:                                        ; preds = %if.else47
  %arraydecay53 = getelementptr inbounds [32 x i8], [32 x i8]* %attr, i32 0, i32 0, !dbg !4960
  %call54 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay53, i64 32, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.127, i32 0, i32 0)) #10, !dbg !4962
  br label %if.end83, !dbg !4963

if.else55:                                        ; preds = %if.else47
  %35 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4964
  %codecpar56 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %35, i32 0, i32 19, !dbg !4967
  %36 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar56, align 8, !dbg !4967
  %codec_id57 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %36, i32 0, i32 1, !dbg !4968
  %37 = load i32, i32* %codec_id57, align 4, !dbg !4968
  %cmp58 = icmp eq i32 %37, 86018, !dbg !4969
  br i1 %cmp58, label %if.then60, label %if.else63, !dbg !4964

if.then60:                                        ; preds = %if.else55
  %arraydecay61 = getelementptr inbounds [32 x i8], [32 x i8]* %attr, i32 0, i32 0, !dbg !4970
  %call62 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay61, i64 32, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.128, i32 0, i32 0)) #10, !dbg !4972
  br label %if.end82, !dbg !4973

if.else63:                                        ; preds = %if.else55
  %38 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4974
  %codecpar64 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %38, i32 0, i32 19, !dbg !4977
  %39 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar64, align 8, !dbg !4977
  %codec_id65 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %39, i32 0, i32 1, !dbg !4978
  %40 = load i32, i32* %codec_id65, align 4, !dbg !4978
  %cmp66 = icmp eq i32 %40, 86019, !dbg !4979
  br i1 %cmp66, label %if.then68, label %if.else71, !dbg !4974

if.then68:                                        ; preds = %if.else63
  %arraydecay69 = getelementptr inbounds [32 x i8], [32 x i8]* %attr, i32 0, i32 0, !dbg !4980
  %call70 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay69, i64 32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.129, i32 0, i32 0)) #10, !dbg !4982
  br label %if.end81, !dbg !4983

if.else71:                                        ; preds = %if.else63
  %41 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4984
  %codecpar72 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %41, i32 0, i32 19, !dbg !4987
  %42 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar72, align 8, !dbg !4987
  %codec_id73 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %42, i32 0, i32 1, !dbg !4988
  %43 = load i32, i32* %codec_id73, align 4, !dbg !4988
  %cmp74 = icmp eq i32 %43, 86056, !dbg !4989
  br i1 %cmp74, label %if.then76, label %if.else79, !dbg !4984

if.then76:                                        ; preds = %if.else71
  %arraydecay77 = getelementptr inbounds [32 x i8], [32 x i8]* %attr, i32 0, i32 0, !dbg !4990
  %call78 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay77, i64 32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.130, i32 0, i32 0)) #10, !dbg !4992
  br label %if.end80, !dbg !4993

if.else79:                                        ; preds = %if.else71
  br label %fail, !dbg !4994

if.end80:                                         ; preds = %if.then76
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.then68
  br label %if.end82

if.end82:                                         ; preds = %if.end81, %if.then60
  br label %if.end83

if.end83:                                         ; preds = %if.end82, %if.then52
  br label %if.end84

if.end84:                                         ; preds = %if.end83, %if.then44
  br label %if.end85

if.end85:                                         ; preds = %if.end84, %if.end38
  %44 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !4996
  %codec_attr86 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %44, i32 0, i32 35, !dbg !4998
  %arraydecay87 = getelementptr inbounds [128 x i8], [128 x i8]* %codec_attr86, i32 0, i32 0, !dbg !4996
  %arraydecay88 = getelementptr inbounds [32 x i8], [32 x i8]* %attr, i32 0, i32 0, !dbg !4999
  %call89 = call i8* @av_stristr(i8* %arraydecay87, i8* %arraydecay88), !dbg !5000
  %tobool90 = icmp ne i8* %call89, null, !dbg !5000
  br i1 %tobool90, label %if.end98, label %if.then91, !dbg !5001

if.then91:                                        ; preds = %if.end85
  %45 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5002
  %codec_attr92 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %45, i32 0, i32 35, !dbg !5004
  %arraydecay93 = getelementptr inbounds [128 x i8], [128 x i8]* %codec_attr92, i32 0, i32 0, !dbg !5002
  %46 = load i32, i32* %codec_strlen, align 4, !dbg !5005
  %idx.ext = sext i32 %46 to i64, !dbg !5006
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay93, i64 %idx.ext, !dbg !5006
  %47 = load i32, i32* %codec_strlen, align 4, !dbg !5007
  %conv94 = sext i32 %47 to i64, !dbg !5007
  %sub = sub i64 128, %conv94, !dbg !5008
  %48 = load i32, i32* %codec_strlen, align 4, !dbg !5009
  %tobool95 = icmp ne i32 %48, 0, !dbg !5009
  %cond = select i1 %tobool95, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.133, i32 0, i32 0), !dbg !5009
  %arraydecay96 = getelementptr inbounds [32 x i8], [32 x i8]* %attr, i32 0, i32 0, !dbg !5010
  %call97 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %add.ptr, i64 %sub, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.131, i32 0, i32 0), i8* %cond, i8* %arraydecay96) #10, !dbg !5011
  br label %if.end98, !dbg !5012

if.end98:                                         ; preds = %if.then91, %if.end85
  br label %return, !dbg !5013

fail:                                             ; preds = %if.else79, %if.else
  %49 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5014
  %codec_attr99 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %49, i32 0, i32 35, !dbg !5015
  %arrayidx100 = getelementptr inbounds [128 x i8], [128 x i8]* %codec_attr99, i64 0, i64 0, !dbg !5014
  store i8 0, i8* %arrayidx100, align 8, !dbg !5016
  %50 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5017
  %attr_status101 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %50, i32 0, i32 36, !dbg !5018
  store i32 1, i32* %attr_status101, align 8, !dbg !5019
  br label %return, !dbg !5020

return:                                           ; preds = %fail, %if.end98, %if.then4, %if.then
  ret void, !dbg !5021
}

declare i32 @av_strcasecmp(i8*, i8*) #1

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #3

; Function Attrs: nounwind
declare i32 @snprintf(i8*, i64, i8*, ...) #4

declare i8* @av_stristr(i8*, i8*) #1

declare i32 @av_compare_ts(i64, i64, i64, i64) #1

declare i32 @av_write_frame(%struct.AVFormatContext*, %struct.AVPacket*) #1

declare void @avio_flush(%struct.AVIOContext*) #1

declare i32 @avio_close_dyn_buf(%struct.AVIOContext*, i8**) #1

declare void @avio_write(%struct.AVIOContext*, i8*, i32) #1

declare void @av_free(i8*) #1

declare i32 @avio_open_dyn_buf(%struct.AVIOContext**) #1

declare void @ff_format_io_close(%struct.AVFormatContext*, %struct.AVIOContext**) #1

; Function Attrs: nounwind uwtable
define internal void @hlsenc_io_close(%struct.AVFormatContext* %s, %struct.AVIOContext** %pb, i8* %filename) #0 !dbg !5022 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pb.addr = alloca %struct.AVIOContext**, align 8
  %filename.addr = alloca i8*, align 8
  %hls = alloca %struct.HLSContext*, align 8
  %http_base_proto = alloca i32, align 4
  %http_url_context = alloca %struct.URLContext*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !5025, metadata !2335), !dbg !5026
  store %struct.AVIOContext** %pb, %struct.AVIOContext*** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext*** %pb.addr, metadata !5027, metadata !2335), !dbg !5028
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !5029, metadata !2335), !dbg !5030
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %hls, metadata !5031, metadata !2335), !dbg !5032
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5033
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !5034
  %1 = load i8*, i8** %priv_data, align 8, !dbg !5034
  %2 = bitcast i8* %1 to %struct.HLSContext*, !dbg !5033
  store %struct.HLSContext* %2, %struct.HLSContext** %hls, align 8, !dbg !5032
  call void @llvm.dbg.declare(metadata i32* %http_base_proto, metadata !5035, metadata !2335), !dbg !5036
  %3 = load i8*, i8** %filename.addr, align 8, !dbg !5037
  %tobool = icmp ne i8* %3, null, !dbg !5037
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5037

cond.true:                                        ; preds = %entry
  %4 = load i8*, i8** %filename.addr, align 8, !dbg !5038
  %call = call i32 @ff_is_http_proto(i8* %4), !dbg !5040
  br label %cond.end, !dbg !5041

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5042

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ 0, %cond.false ], !dbg !5044
  store i32 %cond, i32* %http_base_proto, align 4, !dbg !5046
  %5 = load %struct.AVIOContext**, %struct.AVIOContext*** %pb.addr, align 8, !dbg !5047
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %5, align 8, !dbg !5049
  %tobool1 = icmp ne %struct.AVIOContext* %6, null, !dbg !5049
  br i1 %tobool1, label %if.end, label %if.then, !dbg !5050

if.then:                                          ; preds = %cond.end
  br label %if.end14, !dbg !5051

if.end:                                           ; preds = %cond.end
  %7 = load i32, i32* %http_base_proto, align 4, !dbg !5052
  %tobool2 = icmp ne i32 %7, 0, !dbg !5052
  br i1 %tobool2, label %lor.lhs.false, label %if.then8, !dbg !5054

lor.lhs.false:                                    ; preds = %if.end
  %8 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !5055
  %http_persistent = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %8, i32 0, i32 48, !dbg !5057
  %9 = load i32, i32* %http_persistent, align 4, !dbg !5057
  %tobool3 = icmp ne i32 %9, 0, !dbg !5055
  br i1 %tobool3, label %lor.lhs.false4, label %if.then8, !dbg !5058

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %10 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !5059
  %key_info_file = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %10, i32 0, i32 29, !dbg !5061
  %11 = load i8*, i8** %key_info_file, align 8, !dbg !5061
  %tobool5 = icmp ne i8* %11, null, !dbg !5059
  br i1 %tobool5, label %if.then8, label %lor.lhs.false6, !dbg !5062

lor.lhs.false6:                                   ; preds = %lor.lhs.false4
  %12 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !5063
  %encrypt = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %12, i32 0, i32 23, !dbg !5065
  %13 = load i32, i32* %encrypt, align 8, !dbg !5065
  %tobool7 = icmp ne i32 %13, 0, !dbg !5063
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !5066

if.then8:                                         ; preds = %lor.lhs.false6, %lor.lhs.false4, %lor.lhs.false, %if.end
  %14 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5067
  %15 = load %struct.AVIOContext**, %struct.AVIOContext*** %pb.addr, align 8, !dbg !5069
  call void @ff_format_io_close(%struct.AVFormatContext* %14, %struct.AVIOContext** %15), !dbg !5070
  br label %if.end14, !dbg !5071

if.else:                                          ; preds = %lor.lhs.false6
  call void @llvm.dbg.declare(metadata %struct.URLContext** %http_url_context, metadata !5072, metadata !2335), !dbg !5176
  %16 = load %struct.AVIOContext**, %struct.AVIOContext*** %pb.addr, align 8, !dbg !5177
  %17 = load %struct.AVIOContext*, %struct.AVIOContext** %16, align 8, !dbg !5178
  %call9 = call %struct.URLContext* @ffio_geturlcontext(%struct.AVIOContext* %17), !dbg !5179
  store %struct.URLContext* %call9, %struct.URLContext** %http_url_context, align 8, !dbg !5176
  br label %do.body, !dbg !5180, !llvm.loop !5181

do.body:                                          ; preds = %if.else
  %18 = load %struct.URLContext*, %struct.URLContext** %http_url_context, align 8, !dbg !5182
  %tobool10 = icmp ne %struct.URLContext* %18, null, !dbg !5186
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !5187

if.then11:                                        ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.140, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.141, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.142, i32 0, i32 0), i32 267), !dbg !5188
  call void @abort() #12, !dbg !5191
  unreachable, !dbg !5193

if.end12:                                         ; preds = %do.body
  br label %do.end, !dbg !5194

do.end:                                           ; preds = %if.end12
  %19 = load %struct.AVIOContext**, %struct.AVIOContext*** %pb.addr, align 8, !dbg !5196
  %20 = load %struct.AVIOContext*, %struct.AVIOContext** %19, align 8, !dbg !5197
  call void @avio_flush(%struct.AVIOContext* %20), !dbg !5198
  %21 = load %struct.URLContext*, %struct.URLContext** %http_url_context, align 8, !dbg !5199
  %call13 = call i32 @ffurl_shutdown(%struct.URLContext* %21, i32 2), !dbg !5200
  br label %if.end14

if.end14:                                         ; preds = %if.then, %do.end, %if.then8
  ret void, !dbg !5201
}

declare i8* @avio_find_protocol_name(i8*) #1

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #3

declare i32 @av_opt_set(i8*, i8*, i8*, i32) #1

; Function Attrs: nounwind uwtable
define internal i32 @flush_dynbuf(%struct.VariantStream* %vs, i32* %range_length) #0 !dbg !5202 {
entry:
  %retval = alloca i32, align 4
  %vs.addr = alloca %struct.VariantStream*, align 8
  %range_length.addr = alloca i32*, align 8
  %ctx = alloca %struct.AVFormatContext*, align 8
  %buffer = alloca i8*, align 8
  store %struct.VariantStream* %vs, %struct.VariantStream** %vs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VariantStream** %vs.addr, metadata !5205, metadata !2335), !dbg !5206
  store i32* %range_length, i32** %range_length.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %range_length.addr, metadata !5207, metadata !2335), !dbg !5208
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %ctx, metadata !5209, metadata !2335), !dbg !5210
  %0 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5211
  %avf = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %0, i32 0, i32 8, !dbg !5212
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf, align 8, !dbg !5212
  store %struct.AVFormatContext* %1, %struct.AVFormatContext** %ctx, align 8, !dbg !5210
  call void @llvm.dbg.declare(metadata i8** %buffer, metadata !5213, metadata !2335), !dbg !5214
  %2 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !5215
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %2, i32 0, i32 4, !dbg !5217
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !5217
  %tobool = icmp ne %struct.AVIOContext* %3, null, !dbg !5215
  br i1 %tobool, label %if.end, label %if.then, !dbg !5218

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !5219
  br label %return, !dbg !5219

if.end:                                           ; preds = %entry
  %4 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !5221
  %call = call i32 @av_write_frame(%struct.AVFormatContext* %4, %struct.AVPacket* null), !dbg !5222
  %5 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !5223
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %5, i32 0, i32 4, !dbg !5224
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !5224
  call void @avio_flush(%struct.AVIOContext* %6), !dbg !5225
  %7 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !5226
  %pb2 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %7, i32 0, i32 4, !dbg !5227
  %8 = load %struct.AVIOContext*, %struct.AVIOContext** %pb2, align 8, !dbg !5227
  %call3 = call i32 @avio_close_dyn_buf(%struct.AVIOContext* %8, i8** %buffer), !dbg !5228
  %9 = load i32*, i32** %range_length.addr, align 8, !dbg !5229
  store i32 %call3, i32* %9, align 4, !dbg !5230
  %10 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !5231
  %pb4 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %10, i32 0, i32 4, !dbg !5232
  store %struct.AVIOContext* null, %struct.AVIOContext** %pb4, align 8, !dbg !5233
  %11 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5234
  %out = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %11, i32 0, i32 5, !dbg !5235
  %12 = load %struct.AVIOContext*, %struct.AVIOContext** %out, align 8, !dbg !5235
  %13 = load i8*, i8** %buffer, align 8, !dbg !5236
  %14 = load i32*, i32** %range_length.addr, align 8, !dbg !5237
  %15 = load i32, i32* %14, align 4, !dbg !5238
  call void @avio_write(%struct.AVIOContext* %12, i8* %13, i32 %15), !dbg !5239
  %16 = load i8*, i8** %buffer, align 8, !dbg !5240
  call void @av_free(i8* %16), !dbg !5241
  %17 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !5242
  %pb5 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %17, i32 0, i32 4, !dbg !5243
  %call6 = call i32 @avio_open_dyn_buf(%struct.AVIOContext** %pb5), !dbg !5244
  store i32 %call6, i32* %retval, align 4, !dbg !5245
  br label %return, !dbg !5245

return:                                           ; preds = %if.end, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !5246
  ret i32 %18, !dbg !5246
}

; Function Attrs: nounwind uwtable
define internal void @set_http_options(%struct.AVFormatContext* %s, %struct.AVDictionary** %options, %struct.HLSContext* %c) #0 !dbg !5247 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %options.addr = alloca %struct.AVDictionary**, align 8
  %c.addr = alloca %struct.HLSContext*, align 8
  %http_base_proto = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !5250, metadata !2335), !dbg !5251
  store %struct.AVDictionary** %options, %struct.AVDictionary*** %options.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVDictionary*** %options.addr, metadata !5252, metadata !2335), !dbg !5253
  store %struct.HLSContext* %c, %struct.HLSContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %c.addr, metadata !5254, metadata !2335), !dbg !5255
  call void @llvm.dbg.declare(metadata i32* %http_base_proto, metadata !5256, metadata !2335), !dbg !5257
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5258
  %url = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 9, !dbg !5259
  %1 = load i8*, i8** %url, align 8, !dbg !5259
  %call = call i32 @ff_is_http_proto(i8* %1), !dbg !5260
  store i32 %call, i32* %http_base_proto, align 4, !dbg !5257
  %2 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !5261
  %method = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %2, i32 0, i32 35, !dbg !5263
  %3 = load i8*, i8** %method, align 8, !dbg !5263
  %tobool = icmp ne i8* %3, null, !dbg !5261
  br i1 %tobool, label %if.then, label %if.else, !dbg !5264

if.then:                                          ; preds = %entry
  %4 = load %struct.AVDictionary**, %struct.AVDictionary*** %options.addr, align 8, !dbg !5265
  %5 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !5267
  %method1 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %5, i32 0, i32 35, !dbg !5268
  %6 = load i8*, i8** %method1, align 8, !dbg !5268
  %call2 = call i32 @av_dict_set(%struct.AVDictionary** %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.96, i32 0, i32 0), i8* %6, i32 0), !dbg !5269
  br label %if.end6, !dbg !5270

if.else:                                          ; preds = %entry
  %7 = load i32, i32* %http_base_proto, align 4, !dbg !5271
  %tobool3 = icmp ne i32 %7, 0, !dbg !5271
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !5271

if.then4:                                         ; preds = %if.else
  %8 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !5274
  %9 = bitcast %struct.HLSContext* %8 to i8*, !dbg !5274
  call void (i8*, i32, i8*, ...) @av_log(i8* %9, i32 24, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.143, i32 0, i32 0)), !dbg !5276
  %10 = load %struct.AVDictionary**, %struct.AVDictionary*** %options.addr, align 8, !dbg !5277
  %call5 = call i32 @av_dict_set(%struct.AVDictionary** %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.144, i32 0, i32 0), i32 0), !dbg !5278
  br label %if.end, !dbg !5279

if.end:                                           ; preds = %if.then4, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  %11 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !5280
  %user_agent = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %11, i32 0, i32 36, !dbg !5282
  %12 = load i8*, i8** %user_agent, align 8, !dbg !5282
  %tobool7 = icmp ne i8* %12, null, !dbg !5280
  br i1 %tobool7, label %if.then8, label %if.end11, !dbg !5283

if.then8:                                         ; preds = %if.end6
  %13 = load %struct.AVDictionary**, %struct.AVDictionary*** %options.addr, align 8, !dbg !5284
  %14 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !5285
  %user_agent9 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %14, i32 0, i32 36, !dbg !5286
  %15 = load i8*, i8** %user_agent9, align 8, !dbg !5286
  %call10 = call i32 @av_dict_set(%struct.AVDictionary** %13, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.145, i32 0, i32 0), i8* %15, i32 0), !dbg !5287
  br label %if.end11, !dbg !5287

if.end11:                                         ; preds = %if.then8, %if.end6
  %16 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !5288
  %http_persistent = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %16, i32 0, i32 48, !dbg !5290
  %17 = load i32, i32* %http_persistent, align 4, !dbg !5290
  %tobool12 = icmp ne i32 %17, 0, !dbg !5288
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !5291

if.then13:                                        ; preds = %if.end11
  %18 = load %struct.AVDictionary**, %struct.AVDictionary*** %options.addr, align 8, !dbg !5292
  %call14 = call i32 @av_dict_set_int(%struct.AVDictionary** %18, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.146, i32 0, i32 0), i64 1, i32 0), !dbg !5293
  br label %if.end15, !dbg !5293

if.end15:                                         ; preds = %if.then13, %if.end11
  %19 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !5294
  %timeout = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %19, i32 0, i32 51, !dbg !5296
  %20 = load i64, i64* %timeout, align 8, !dbg !5296
  %cmp = icmp sge i64 %20, 0, !dbg !5297
  br i1 %cmp, label %if.then16, label %if.end19, !dbg !5298

if.then16:                                        ; preds = %if.end15
  %21 = load %struct.AVDictionary**, %struct.AVDictionary*** %options.addr, align 8, !dbg !5299
  %22 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !5300
  %timeout17 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %22, i32 0, i32 51, !dbg !5301
  %23 = load i64, i64* %timeout17, align 8, !dbg !5301
  %call18 = call i32 @av_dict_set_int(%struct.AVDictionary** %21, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.119, i32 0, i32 0), i64 %23, i32 0), !dbg !5302
  br label %if.end19, !dbg !5302

if.end19:                                         ; preds = %if.then16, %if.end15
  ret void, !dbg !5303
}

; Function Attrs: nounwind uwtable
define internal i32 @hlsenc_io_open(%struct.AVFormatContext* %s, %struct.AVIOContext** %pb, i8* %filename, %struct.AVDictionary** %options) #0 !dbg !5304 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pb.addr = alloca %struct.AVIOContext**, align 8
  %filename.addr = alloca i8*, align 8
  %options.addr = alloca %struct.AVDictionary**, align 8
  %hls = alloca %struct.HLSContext*, align 8
  %http_base_proto = alloca i32, align 4
  %err = alloca i32, align 4
  %http_url_context = alloca %struct.URLContext*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !5307, metadata !2335), !dbg !5308
  store %struct.AVIOContext** %pb, %struct.AVIOContext*** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext*** %pb.addr, metadata !5309, metadata !2335), !dbg !5310
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !5311, metadata !2335), !dbg !5312
  store %struct.AVDictionary** %options, %struct.AVDictionary*** %options.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVDictionary*** %options.addr, metadata !5313, metadata !2335), !dbg !5314
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %hls, metadata !5315, metadata !2335), !dbg !5316
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5317
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !5318
  %1 = load i8*, i8** %priv_data, align 8, !dbg !5318
  %2 = bitcast i8* %1 to %struct.HLSContext*, !dbg !5317
  store %struct.HLSContext* %2, %struct.HLSContext** %hls, align 8, !dbg !5316
  call void @llvm.dbg.declare(metadata i32* %http_base_proto, metadata !5319, metadata !2335), !dbg !5320
  %3 = load i8*, i8** %filename.addr, align 8, !dbg !5321
  %tobool = icmp ne i8* %3, null, !dbg !5321
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5321

cond.true:                                        ; preds = %entry
  %4 = load i8*, i8** %filename.addr, align 8, !dbg !5322
  %call = call i32 @ff_is_http_proto(i8* %4), !dbg !5324
  br label %cond.end, !dbg !5325

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5326

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ 0, %cond.false ], !dbg !5328
  store i32 %cond, i32* %http_base_proto, align 4, !dbg !5330
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5331, metadata !2335), !dbg !5332
  store i32 -1481985528, i32* %err, align 4, !dbg !5332
  %5 = load %struct.AVIOContext**, %struct.AVIOContext*** %pb.addr, align 8, !dbg !5333
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %5, align 8, !dbg !5335
  %tobool1 = icmp ne %struct.AVIOContext* %6, null, !dbg !5335
  br i1 %tobool1, label %lor.lhs.false, label %if.then, !dbg !5336

lor.lhs.false:                                    ; preds = %cond.end
  %7 = load i32, i32* %http_base_proto, align 4, !dbg !5337
  %tobool2 = icmp ne i32 %7, 0, !dbg !5337
  br i1 %tobool2, label %lor.lhs.false3, label %if.then, !dbg !5339

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %8 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !5340
  %http_persistent = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %8, i32 0, i32 48, !dbg !5342
  %9 = load i32, i32* %http_persistent, align 4, !dbg !5342
  %tobool4 = icmp ne i32 %9, 0, !dbg !5340
  br i1 %tobool4, label %if.else, label %if.then, !dbg !5343

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %cond.end
  %10 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5344
  %io_open = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %10, i32 0, i32 69, !dbg !5346
  %11 = load i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)*, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)** %io_open, align 8, !dbg !5346
  %12 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5347
  %13 = load %struct.AVIOContext**, %struct.AVIOContext*** %pb.addr, align 8, !dbg !5348
  %14 = load i8*, i8** %filename.addr, align 8, !dbg !5349
  %15 = load %struct.AVDictionary**, %struct.AVDictionary*** %options.addr, align 8, !dbg !5350
  %call5 = call i32 %11(%struct.AVFormatContext* %12, %struct.AVIOContext** %13, i8* %14, i32 2, %struct.AVDictionary** %15), !dbg !5344
  store i32 %call5, i32* %err, align 4, !dbg !5351
  br label %if.end12, !dbg !5352

if.else:                                          ; preds = %lor.lhs.false3
  call void @llvm.dbg.declare(metadata %struct.URLContext** %http_url_context, metadata !5353, metadata !2335), !dbg !5355
  %16 = load %struct.AVIOContext**, %struct.AVIOContext*** %pb.addr, align 8, !dbg !5356
  %17 = load %struct.AVIOContext*, %struct.AVIOContext** %16, align 8, !dbg !5357
  %call6 = call %struct.URLContext* @ffio_geturlcontext(%struct.AVIOContext* %17), !dbg !5358
  store %struct.URLContext* %call6, %struct.URLContext** %http_url_context, align 8, !dbg !5355
  br label %do.body, !dbg !5359, !llvm.loop !5360

do.body:                                          ; preds = %if.else
  %18 = load %struct.URLContext*, %struct.URLContext** %http_url_context, align 8, !dbg !5361
  %tobool7 = icmp ne %struct.URLContext* %18, null, !dbg !5365
  br i1 %tobool7, label %if.end, label %if.then8, !dbg !5366

if.then8:                                         ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.140, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.141, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.142, i32 0, i32 0), i32 247), !dbg !5367
  call void @abort() #12, !dbg !5370
  unreachable, !dbg !5372

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !5373

do.end:                                           ; preds = %if.end
  %19 = load %struct.URLContext*, %struct.URLContext** %http_url_context, align 8, !dbg !5375
  %20 = load i8*, i8** %filename.addr, align 8, !dbg !5376
  %call9 = call i32 @ff_http_do_new_request(%struct.URLContext* %19, i8* %20), !dbg !5377
  store i32 %call9, i32* %err, align 4, !dbg !5378
  %21 = load i32, i32* %err, align 4, !dbg !5379
  %cmp = icmp slt i32 %21, 0, !dbg !5381
  br i1 %cmp, label %if.then10, label %if.end11, !dbg !5382

if.then10:                                        ; preds = %do.end
  %22 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5383
  %23 = load %struct.AVIOContext**, %struct.AVIOContext*** %pb.addr, align 8, !dbg !5384
  call void @ff_format_io_close(%struct.AVFormatContext* %22, %struct.AVIOContext** %23), !dbg !5385
  br label %if.end11, !dbg !5385

if.end11:                                         ; preds = %if.then10, %do.end
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.then
  %24 = load i32, i32* %err, align 4, !dbg !5386
  ret i32 %24, !dbg !5387
}

; Function Attrs: nounwind uwtable
define internal void @write_styp(%struct.AVIOContext* %pb) #0 !dbg !5388 {
entry:
  %pb.addr.i31 = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr.i31, metadata !5391, metadata !2335), !dbg !5396
  %s.addr.i32 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr.i32, metadata !5398, metadata !2335), !dbg !5399
  %pb.addr.i16 = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr.i16, metadata !5391, metadata !2335), !dbg !5400
  %s.addr.i17 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr.i17, metadata !5398, metadata !2335), !dbg !5402
  %pb.addr.i1 = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr.i1, metadata !5391, metadata !2335), !dbg !5403
  %s.addr.i2 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr.i2, metadata !5398, metadata !2335), !dbg !5405
  %pb.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr.i, metadata !5391, metadata !2335), !dbg !5406
  %s.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr.i, metadata !5398, metadata !2335), !dbg !5408
  %pb.addr = alloca %struct.AVIOContext*, align 8
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !5409, metadata !2335), !dbg !5410
  %0 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !5411
  call void @avio_wb32(%struct.AVIOContext* %0, i32 24), !dbg !5412
  %1 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !5413
  store %struct.AVIOContext* %1, %struct.AVIOContext** %pb.addr.i, align 8, !dbg !5414
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.147, i32 0, i32 0), i8** %s.addr.i, align 8, !dbg !5414
  %2 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr.i, align 8, !dbg !5415
  %3 = load i8*, i8** %s.addr.i, align 8, !dbg !5416
  %4 = load i8, i8* %3, align 1, !dbg !5416
  %conv.i = zext i8 %4 to i32, !dbg !5417
  %5 = load i8*, i8** %s.addr.i, align 8, !dbg !5418
  %arrayidx1.i = getelementptr inbounds i8, i8* %5, i64 1, !dbg !5418
  %6 = load i8, i8* %arrayidx1.i, align 1, !dbg !5418
  %conv2.i = zext i8 %6 to i32, !dbg !5419
  %shl.i = shl i32 %conv2.i, 8, !dbg !5420
  %or.i = or i32 %conv.i, %shl.i, !dbg !5421
  %7 = load i8*, i8** %s.addr.i, align 8, !dbg !5422
  %arrayidx3.i = getelementptr inbounds i8, i8* %7, i64 2, !dbg !5422
  %8 = load i8, i8* %arrayidx3.i, align 1, !dbg !5422
  %conv4.i = zext i8 %8 to i32, !dbg !5423
  %shl5.i = shl i32 %conv4.i, 16, !dbg !5424
  %or6.i = or i32 %or.i, %shl5.i, !dbg !5425
  %9 = load i8*, i8** %s.addr.i, align 8, !dbg !5426
  %arrayidx7.i = getelementptr inbounds i8, i8* %9, i64 3, !dbg !5426
  %10 = load i8, i8* %arrayidx7.i, align 1, !dbg !5426
  %conv8.i = zext i8 %10 to i32, !dbg !5427
  %shl9.i = shl i32 %conv8.i, 24, !dbg !5428
  %or10.i = or i32 %or6.i, %shl9.i, !dbg !5429
  call void @avio_wl32(%struct.AVIOContext* %2, i32 %or10.i) #10, !dbg !5430
  %11 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !5431
  store %struct.AVIOContext* %11, %struct.AVIOContext** %pb.addr.i1, align 8, !dbg !5432
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.148, i32 0, i32 0), i8** %s.addr.i2, align 8, !dbg !5432
  %12 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr.i1, align 8, !dbg !5433
  %13 = load i8*, i8** %s.addr.i2, align 8, !dbg !5434
  %14 = load i8, i8* %13, align 1, !dbg !5434
  %conv.i3 = zext i8 %14 to i32, !dbg !5435
  %15 = load i8*, i8** %s.addr.i2, align 8, !dbg !5436
  %arrayidx1.i4 = getelementptr inbounds i8, i8* %15, i64 1, !dbg !5436
  %16 = load i8, i8* %arrayidx1.i4, align 1, !dbg !5436
  %conv2.i5 = zext i8 %16 to i32, !dbg !5437
  %shl.i6 = shl i32 %conv2.i5, 8, !dbg !5438
  %or.i7 = or i32 %conv.i3, %shl.i6, !dbg !5439
  %17 = load i8*, i8** %s.addr.i2, align 8, !dbg !5440
  %arrayidx3.i8 = getelementptr inbounds i8, i8* %17, i64 2, !dbg !5440
  %18 = load i8, i8* %arrayidx3.i8, align 1, !dbg !5440
  %conv4.i9 = zext i8 %18 to i32, !dbg !5441
  %shl5.i10 = shl i32 %conv4.i9, 16, !dbg !5442
  %or6.i11 = or i32 %or.i7, %shl5.i10, !dbg !5443
  %19 = load i8*, i8** %s.addr.i2, align 8, !dbg !5444
  %arrayidx7.i12 = getelementptr inbounds i8, i8* %19, i64 3, !dbg !5444
  %20 = load i8, i8* %arrayidx7.i12, align 1, !dbg !5444
  %conv8.i13 = zext i8 %20 to i32, !dbg !5445
  %shl9.i14 = shl i32 %conv8.i13, 24, !dbg !5446
  %or10.i15 = or i32 %or6.i11, %shl9.i14, !dbg !5447
  call void @avio_wl32(%struct.AVIOContext* %12, i32 %or10.i15) #10, !dbg !5448
  %21 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !5449
  call void @avio_wb32(%struct.AVIOContext* %21, i32 0), !dbg !5450
  %22 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !5451
  store %struct.AVIOContext* %22, %struct.AVIOContext** %pb.addr.i16, align 8, !dbg !5452
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.148, i32 0, i32 0), i8** %s.addr.i17, align 8, !dbg !5452
  %23 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr.i16, align 8, !dbg !5453
  %24 = load i8*, i8** %s.addr.i17, align 8, !dbg !5454
  %25 = load i8, i8* %24, align 1, !dbg !5454
  %conv.i18 = zext i8 %25 to i32, !dbg !5455
  %26 = load i8*, i8** %s.addr.i17, align 8, !dbg !5456
  %arrayidx1.i19 = getelementptr inbounds i8, i8* %26, i64 1, !dbg !5456
  %27 = load i8, i8* %arrayidx1.i19, align 1, !dbg !5456
  %conv2.i20 = zext i8 %27 to i32, !dbg !5457
  %shl.i21 = shl i32 %conv2.i20, 8, !dbg !5458
  %or.i22 = or i32 %conv.i18, %shl.i21, !dbg !5459
  %28 = load i8*, i8** %s.addr.i17, align 8, !dbg !5460
  %arrayidx3.i23 = getelementptr inbounds i8, i8* %28, i64 2, !dbg !5460
  %29 = load i8, i8* %arrayidx3.i23, align 1, !dbg !5460
  %conv4.i24 = zext i8 %29 to i32, !dbg !5461
  %shl5.i25 = shl i32 %conv4.i24, 16, !dbg !5462
  %or6.i26 = or i32 %or.i22, %shl5.i25, !dbg !5463
  %30 = load i8*, i8** %s.addr.i17, align 8, !dbg !5464
  %arrayidx7.i27 = getelementptr inbounds i8, i8* %30, i64 3, !dbg !5464
  %31 = load i8, i8* %arrayidx7.i27, align 1, !dbg !5464
  %conv8.i28 = zext i8 %31 to i32, !dbg !5465
  %shl9.i29 = shl i32 %conv8.i28, 24, !dbg !5466
  %or10.i30 = or i32 %or6.i26, %shl9.i29, !dbg !5467
  call void @avio_wl32(%struct.AVIOContext* %23, i32 %or10.i30) #10, !dbg !5468
  %32 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !5469
  store %struct.AVIOContext* %32, %struct.AVIOContext** %pb.addr.i31, align 8, !dbg !5470
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.149, i32 0, i32 0), i8** %s.addr.i32, align 8, !dbg !5470
  %33 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr.i31, align 8, !dbg !5471
  %34 = load i8*, i8** %s.addr.i32, align 8, !dbg !5472
  %35 = load i8, i8* %34, align 1, !dbg !5472
  %conv.i33 = zext i8 %35 to i32, !dbg !5473
  %36 = load i8*, i8** %s.addr.i32, align 8, !dbg !5474
  %arrayidx1.i34 = getelementptr inbounds i8, i8* %36, i64 1, !dbg !5474
  %37 = load i8, i8* %arrayidx1.i34, align 1, !dbg !5474
  %conv2.i35 = zext i8 %37 to i32, !dbg !5475
  %shl.i36 = shl i32 %conv2.i35, 8, !dbg !5476
  %or.i37 = or i32 %conv.i33, %shl.i36, !dbg !5477
  %38 = load i8*, i8** %s.addr.i32, align 8, !dbg !5478
  %arrayidx3.i38 = getelementptr inbounds i8, i8* %38, i64 2, !dbg !5478
  %39 = load i8, i8* %arrayidx3.i38, align 1, !dbg !5478
  %conv4.i39 = zext i8 %39 to i32, !dbg !5479
  %shl5.i40 = shl i32 %conv4.i39, 16, !dbg !5480
  %or6.i41 = or i32 %or.i37, %shl5.i40, !dbg !5481
  %40 = load i8*, i8** %s.addr.i32, align 8, !dbg !5482
  %arrayidx7.i42 = getelementptr inbounds i8, i8* %40, i64 3, !dbg !5482
  %41 = load i8, i8* %arrayidx7.i42, align 1, !dbg !5482
  %conv8.i43 = zext i8 %41 to i32, !dbg !5483
  %shl9.i44 = shl i32 %conv8.i43, 24, !dbg !5484
  %or10.i45 = or i32 %or6.i41, %shl9.i44, !dbg !5485
  call void @avio_wl32(%struct.AVIOContext* %33, i32 %or10.i45) #10, !dbg !5486
  ret void, !dbg !5487
}

; Function Attrs: nounwind uwtable
define internal i32 @hls_rename_temp_file(%struct.AVFormatContext* %s, %struct.AVFormatContext* %oc) #0 !dbg !5488 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %oc.addr = alloca %struct.AVFormatContext*, align 8
  %len = alloca i64, align 8
  %final_filename = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !5491, metadata !2335), !dbg !5492
  store %struct.AVFormatContext* %oc, %struct.AVFormatContext** %oc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %oc.addr, metadata !5493, metadata !2335), !dbg !5494
  call void @llvm.dbg.declare(metadata i64* %len, metadata !5495, metadata !2335), !dbg !5496
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !5497
  %url = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 9, !dbg !5498
  %1 = load i8*, i8** %url, align 8, !dbg !5498
  %call = call i64 @strlen(i8* %1) #11, !dbg !5499
  store i64 %call, i64* %len, align 8, !dbg !5496
  call void @llvm.dbg.declare(metadata i8** %final_filename, metadata !5500, metadata !2335), !dbg !5501
  %2 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !5502
  %url1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %2, i32 0, i32 9, !dbg !5503
  %3 = load i8*, i8** %url1, align 8, !dbg !5503
  %call2 = call noalias i8* @av_strdup(i8* %3), !dbg !5504
  store i8* %call2, i8** %final_filename, align 8, !dbg !5501
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5505, metadata !2335), !dbg !5506
  %4 = load i8*, i8** %final_filename, align 8, !dbg !5507
  %tobool = icmp ne i8* %4, null, !dbg !5507
  br i1 %tobool, label %if.end, label %if.then, !dbg !5509

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !5510
  br label %return, !dbg !5510

if.end:                                           ; preds = %entry
  %5 = load i64, i64* %len, align 8, !dbg !5511
  %sub = sub i64 %5, 4, !dbg !5512
  %6 = load i8*, i8** %final_filename, align 8, !dbg !5513
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 %sub, !dbg !5513
  store i8 0, i8* %arrayidx, align 1, !dbg !5514
  %7 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !5515
  %url3 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %7, i32 0, i32 9, !dbg !5516
  %8 = load i8*, i8** %url3, align 8, !dbg !5516
  %9 = load i8*, i8** %final_filename, align 8, !dbg !5517
  %10 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5518
  %11 = bitcast %struct.AVFormatContext* %10 to i8*, !dbg !5518
  %call4 = call i32 @ff_rename(i8* %8, i8* %9, i8* %11), !dbg !5519
  store i32 %call4, i32* %ret, align 4, !dbg !5520
  %12 = load i64, i64* %len, align 8, !dbg !5521
  %sub5 = sub i64 %12, 4, !dbg !5522
  %13 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !5523
  %url6 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %13, i32 0, i32 9, !dbg !5524
  %14 = load i8*, i8** %url6, align 8, !dbg !5524
  %arrayidx7 = getelementptr inbounds i8, i8* %14, i64 %sub5, !dbg !5523
  store i8 0, i8* %arrayidx7, align 1, !dbg !5525
  %15 = bitcast i8** %final_filename to i8*, !dbg !5526
  call void @av_freep(i8* %15), !dbg !5527
  %16 = load i32, i32* %ret, align 4, !dbg !5528
  store i32 %16, i32* %retval, align 4, !dbg !5529
  br label %return, !dbg !5529

return:                                           ; preds = %if.end, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !5530
  ret i32 %17, !dbg !5530
}

declare noalias i8* @av_strdup(i8*) #1

; Function Attrs: nounwind uwtable
define internal i32 @hls_append_segment(%struct.AVFormatContext* %s, %struct.HLSContext* %hls, %struct.VariantStream* %vs, double %duration, i64 %pos, i64 %size) #0 !dbg !5531 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %hls.addr = alloca %struct.HLSContext*, align 8
  %vs.addr = alloca %struct.VariantStream*, align 8
  %duration.addr = alloca double, align 8
  %pos.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %en = alloca %struct.HLSSegment*, align 8
  %filename = alloca i8*, align 8
  %byterange_mode = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !5534, metadata !2335), !dbg !5535
  store %struct.HLSContext* %hls, %struct.HLSContext** %hls.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %hls.addr, metadata !5536, metadata !2335), !dbg !5537
  store %struct.VariantStream* %vs, %struct.VariantStream** %vs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VariantStream** %vs.addr, metadata !5538, metadata !2335), !dbg !5539
  store double %duration, double* %duration.addr, align 8
  call void @llvm.dbg.declare(metadata double* %duration.addr, metadata !5540, metadata !2335), !dbg !5541
  store i64 %pos, i64* %pos.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %pos.addr, metadata !5542, metadata !2335), !dbg !5543
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5544, metadata !2335), !dbg !5545
  call void @llvm.dbg.declare(metadata %struct.HLSSegment** %en, metadata !5546, metadata !2335), !dbg !5547
  %call = call noalias i8* @av_malloc(i64 3152), !dbg !5548
  %0 = bitcast i8* %call to %struct.HLSSegment*, !dbg !5548
  store %struct.HLSSegment* %0, %struct.HLSSegment** %en, align 8, !dbg !5547
  call void @llvm.dbg.declare(metadata i8** %filename, metadata !5549, metadata !2335), !dbg !5550
  call void @llvm.dbg.declare(metadata i32* %byterange_mode, metadata !5551, metadata !2335), !dbg !5552
  %1 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !5553
  %flags = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %1, i32 0, i32 8, !dbg !5554
  %2 = load i32, i32* %flags, align 8, !dbg !5554
  %and = and i32 %2, 1, !dbg !5555
  %tobool = icmp ne i32 %and, 0, !dbg !5555
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !5556

lor.rhs:                                          ; preds = %entry
  %3 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !5557
  %max_seg_size = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %3, i32 0, i32 17, !dbg !5559
  %4 = load i64, i64* %max_seg_size, align 8, !dbg !5559
  %cmp = icmp sgt i64 %4, 0, !dbg !5560
  br label %lor.end, !dbg !5561

lor.end:                                          ; preds = %lor.rhs, %entry
  %5 = phi i1 [ true, %entry ], [ %cmp, %lor.rhs ]
  %lor.ext = zext i1 %5 to i32, !dbg !5562
  store i32 %lor.ext, i32* %byterange_mode, align 4, !dbg !5564
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5565, metadata !2335), !dbg !5566
  %6 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !5567
  %tobool1 = icmp ne %struct.HLSSegment* %6, null, !dbg !5567
  br i1 %tobool1, label %if.end, label %if.then, !dbg !5569

if.then:                                          ; preds = %lor.end
  store i32 -12, i32* %retval, align 4, !dbg !5570
  br label %return, !dbg !5570

if.end:                                           ; preds = %lor.end
  %7 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5571
  %var_stream_idx = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %7, i32 0, i32 0, !dbg !5572
  %8 = load i32, i32* %var_stream_idx, align 8, !dbg !5572
  %9 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !5573
  %var_stream_idx2 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %9, i32 0, i32 6, !dbg !5574
  store i32 %8, i32* %var_stream_idx2, align 8, !dbg !5575
  %10 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5576
  %11 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !5577
  %12 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5578
  %13 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !5579
  %14 = load double, double* %duration.addr, align 8, !dbg !5580
  %15 = load i64, i64* %pos.addr, align 8, !dbg !5581
  %16 = load i64, i64* %size.addr, align 8, !dbg !5582
  %call3 = call i32 @sls_flags_filename_process(%struct.AVFormatContext* %10, %struct.HLSContext* %11, %struct.VariantStream* %12, %struct.HLSSegment* %13, double %14, i64 %15, i64 %16), !dbg !5583
  store i32 %call3, i32* %ret, align 4, !dbg !5584
  %17 = load i32, i32* %ret, align 4, !dbg !5585
  %cmp4 = icmp slt i32 %17, 0, !dbg !5587
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !5588

if.then5:                                         ; preds = %if.end
  %18 = load i32, i32* %ret, align 4, !dbg !5589
  store i32 %18, i32* %retval, align 4, !dbg !5591
  br label %return, !dbg !5591

if.end6:                                          ; preds = %if.end
  %19 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5592
  %avf = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %19, i32 0, i32 8, !dbg !5593
  %20 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf, align 8, !dbg !5593
  %url = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %20, i32 0, i32 9, !dbg !5594
  %21 = load i8*, i8** %url, align 8, !dbg !5594
  %call7 = call i8* @av_basename(i8* %21), !dbg !5595
  store i8* %call7, i8** %filename, align 8, !dbg !5596
  %22 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !5597
  %use_localtime_mkdir = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %22, i32 0, i32 14, !dbg !5599
  %23 = load i32, i32* %use_localtime_mkdir, align 8, !dbg !5599
  %tobool8 = icmp ne i32 %23, 0, !dbg !5597
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !5600

if.then9:                                         ; preds = %if.end6
  %24 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5601
  %avf10 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %24, i32 0, i32 8, !dbg !5603
  %25 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf10, align 8, !dbg !5603
  %url11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %25, i32 0, i32 9, !dbg !5604
  %26 = load i8*, i8** %url11, align 8, !dbg !5604
  store i8* %26, i8** %filename, align 8, !dbg !5605
  br label %if.end12, !dbg !5606

if.end12:                                         ; preds = %if.then9, %if.end6
  %27 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5607
  %segments = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %27, i32 0, i32 23, !dbg !5609
  %28 = load %struct.HLSSegment*, %struct.HLSSegment** %segments, align 8, !dbg !5609
  %29 = load i8*, i8** %filename, align 8, !dbg !5610
  %call13 = call %struct.HLSSegment* @find_segment_by_filename(%struct.HLSSegment* %28, i8* %29), !dbg !5611
  %tobool14 = icmp ne %struct.HLSSegment* %call13, null, !dbg !5611
  br i1 %tobool14, label %land.lhs.true, label %lor.lhs.false, !dbg !5612

lor.lhs.false:                                    ; preds = %if.end12
  %30 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5613
  %old_segments = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %30, i32 0, i32 25, !dbg !5615
  %31 = load %struct.HLSSegment*, %struct.HLSSegment** %old_segments, align 8, !dbg !5615
  %32 = load i8*, i8** %filename, align 8, !dbg !5616
  %call15 = call %struct.HLSSegment* @find_segment_by_filename(%struct.HLSSegment* %31, i8* %32), !dbg !5617
  %tobool16 = icmp ne %struct.HLSSegment* %call15, null, !dbg !5617
  br i1 %tobool16, label %land.lhs.true, label %if.end19, !dbg !5618

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end12
  %33 = load i32, i32* %byterange_mode, align 4, !dbg !5619
  %tobool17 = icmp ne i32 %33, 0, !dbg !5619
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !5620

if.then18:                                        ; preds = %land.lhs.true
  %34 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !5621
  %35 = bitcast %struct.HLSContext* %34 to i8*, !dbg !5621
  %36 = load i8*, i8** %filename, align 8, !dbg !5623
  call void (i8*, i32, i8*, ...) @av_log(i8* %35, i32 24, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.151, i32 0, i32 0), i8* %36), !dbg !5624
  br label %if.end19, !dbg !5625

if.end19:                                         ; preds = %if.then18, %land.lhs.true, %lor.lhs.false
  %37 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !5626
  %filename20 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %37, i32 0, i32 0, !dbg !5627
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %filename20, i32 0, i32 0, !dbg !5626
  %38 = load i8*, i8** %filename, align 8, !dbg !5628
  %call21 = call i64 @av_strlcpy(i8* %arraydecay, i8* %38, i64 1024), !dbg !5629
  %39 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5630
  %has_subtitle = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %39, i32 0, i32 11, !dbg !5632
  %40 = load i32, i32* %has_subtitle, align 4, !dbg !5632
  %tobool22 = icmp ne i32 %40, 0, !dbg !5630
  br i1 %tobool22, label %if.then23, label %if.else, !dbg !5633

if.then23:                                        ; preds = %if.end19
  %41 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !5634
  %sub_filename = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %41, i32 0, i32 1, !dbg !5635
  %arraydecay24 = getelementptr inbounds [1024 x i8], [1024 x i8]* %sub_filename, i32 0, i32 0, !dbg !5634
  %42 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5636
  %vtt_avf = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %42, i32 0, i32 9, !dbg !5637
  %43 = load %struct.AVFormatContext*, %struct.AVFormatContext** %vtt_avf, align 8, !dbg !5637
  %url25 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %43, i32 0, i32 9, !dbg !5638
  %44 = load i8*, i8** %url25, align 8, !dbg !5638
  %call26 = call i8* @av_basename(i8* %44), !dbg !5639
  %call27 = call i64 @av_strlcpy(i8* %arraydecay24, i8* %call26, i64 1024), !dbg !5640
  br label %if.end29, !dbg !5642

if.else:                                          ; preds = %if.end19
  %45 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !5643
  %sub_filename28 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %45, i32 0, i32 1, !dbg !5644
  %arrayidx = getelementptr inbounds [1024 x i8], [1024 x i8]* %sub_filename28, i64 0, i64 0, !dbg !5643
  store i8 0, i8* %arrayidx, align 8, !dbg !5645
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then23
  %46 = load double, double* %duration.addr, align 8, !dbg !5646
  %47 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !5647
  %duration30 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %47, i32 0, i32 2, !dbg !5648
  store double %46, double* %duration30, align 8, !dbg !5649
  %48 = load i64, i64* %pos.addr, align 8, !dbg !5650
  %49 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !5651
  %pos31 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %49, i32 0, i32 4, !dbg !5652
  store i64 %48, i64* %pos31, align 8, !dbg !5653
  %50 = load i64, i64* %size.addr, align 8, !dbg !5654
  %51 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !5655
  %size32 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %51, i32 0, i32 5, !dbg !5656
  store i64 %50, i64* %size32, align 8, !dbg !5657
  %52 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !5658
  %next = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %52, i32 0, i32 9, !dbg !5659
  store %struct.HLSSegment* null, %struct.HLSSegment** %next, align 8, !dbg !5660
  %53 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !5661
  %discont = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %53, i32 0, i32 3, !dbg !5662
  store i32 0, i32* %discont, align 8, !dbg !5663
  %54 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5664
  %discontinuity = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %54, i32 0, i32 21, !dbg !5666
  %55 = load i32, i32* %discontinuity, align 8, !dbg !5666
  %tobool33 = icmp ne i32 %55, 0, !dbg !5664
  br i1 %tobool33, label %if.then34, label %if.end37, !dbg !5667

if.then34:                                        ; preds = %if.end29
  %56 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !5668
  %discont35 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %56, i32 0, i32 3, !dbg !5670
  store i32 1, i32* %discont35, align 8, !dbg !5671
  %57 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5672
  %discontinuity36 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %57, i32 0, i32 21, !dbg !5673
  store i32 0, i32* %discontinuity36, align 8, !dbg !5674
  br label %if.end37, !dbg !5675

if.end37:                                         ; preds = %if.then34, %if.end29
  %58 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !5676
  %key_info_file = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %58, i32 0, i32 29, !dbg !5678
  %59 = load i8*, i8** %key_info_file, align 8, !dbg !5678
  %tobool38 = icmp ne i8* %59, null, !dbg !5676
  br i1 %tobool38, label %if.then41, label %lor.lhs.false39, !dbg !5679

lor.lhs.false39:                                  ; preds = %if.end37
  %60 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !5680
  %encrypt = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %60, i32 0, i32 23, !dbg !5682
  %61 = load i32, i32* %encrypt, align 8, !dbg !5682
  %tobool40 = icmp ne i32 %61, 0, !dbg !5680
  br i1 %tobool40, label %if.then41, label %if.end50, !dbg !5683

if.then41:                                        ; preds = %lor.lhs.false39, %if.end37
  %62 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !5684
  %key_uri = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %62, i32 0, i32 7, !dbg !5686
  %arraydecay42 = getelementptr inbounds [1025 x i8], [1025 x i8]* %key_uri, i32 0, i32 0, !dbg !5684
  %63 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !5687
  %key_uri43 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %63, i32 0, i32 31, !dbg !5688
  %arraydecay44 = getelementptr inbounds [1025 x i8], [1025 x i8]* %key_uri43, i32 0, i32 0, !dbg !5687
  %call45 = call i64 @av_strlcpy(i8* %arraydecay42, i8* %arraydecay44, i64 1025), !dbg !5689
  %64 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !5690
  %iv_string = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %64, i32 0, i32 8, !dbg !5691
  %arraydecay46 = getelementptr inbounds [33 x i8], [33 x i8]* %iv_string, i32 0, i32 0, !dbg !5690
  %65 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !5692
  %iv_string47 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %65, i32 0, i32 33, !dbg !5693
  %arraydecay48 = getelementptr inbounds [33 x i8], [33 x i8]* %iv_string47, i32 0, i32 0, !dbg !5692
  %call49 = call i64 @av_strlcpy(i8* %arraydecay46, i8* %arraydecay48, i64 33), !dbg !5694
  br label %if.end50, !dbg !5695

if.end50:                                         ; preds = %if.then41, %lor.lhs.false39
  %66 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5696
  %segments51 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %66, i32 0, i32 23, !dbg !5698
  %67 = load %struct.HLSSegment*, %struct.HLSSegment** %segments51, align 8, !dbg !5698
  %tobool52 = icmp ne %struct.HLSSegment* %67, null, !dbg !5696
  br i1 %tobool52, label %if.else55, label %if.then53, !dbg !5699

if.then53:                                        ; preds = %if.end50
  %68 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !5700
  %69 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5701
  %segments54 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %69, i32 0, i32 23, !dbg !5702
  store %struct.HLSSegment* %68, %struct.HLSSegment** %segments54, align 8, !dbg !5703
  br label %if.end57, !dbg !5701

if.else55:                                        ; preds = %if.end50
  %70 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !5704
  %71 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5705
  %last_segment = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %71, i32 0, i32 24, !dbg !5706
  %72 = load %struct.HLSSegment*, %struct.HLSSegment** %last_segment, align 8, !dbg !5706
  %next56 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %72, i32 0, i32 9, !dbg !5707
  store %struct.HLSSegment* %70, %struct.HLSSegment** %next56, align 8, !dbg !5708
  br label %if.end57

if.end57:                                         ; preds = %if.else55, %if.then53
  %73 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !5709
  %74 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5710
  %last_segment58 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %74, i32 0, i32 24, !dbg !5711
  store %struct.HLSSegment* %73, %struct.HLSSegment** %last_segment58, align 8, !dbg !5712
  %75 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !5713
  %pl_type = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %75, i32 0, i32 9, !dbg !5715
  %76 = load i32, i32* %pl_type, align 4, !dbg !5715
  %cmp59 = icmp ne i32 %76, 0, !dbg !5716
  br i1 %cmp59, label %if.then60, label %if.end61, !dbg !5717

if.then60:                                        ; preds = %if.end57
  %77 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !5718
  %max_nb_segments = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %77, i32 0, i32 5, !dbg !5719
  store i32 0, i32* %max_nb_segments, align 4, !dbg !5720
  br label %if.end61, !dbg !5718

if.end61:                                         ; preds = %if.then60, %if.end57
  %78 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !5721
  %max_nb_segments62 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %78, i32 0, i32 5, !dbg !5723
  %79 = load i32, i32* %max_nb_segments62, align 4, !dbg !5723
  %tobool63 = icmp ne i32 %79, 0, !dbg !5721
  br i1 %tobool63, label %land.lhs.true64, label %if.else93, !dbg !5724

land.lhs.true64:                                  ; preds = %if.end61
  %80 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5725
  %nb_entries = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %80, i32 0, i32 19, !dbg !5727
  %81 = load i32, i32* %nb_entries, align 8, !dbg !5727
  %82 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !5728
  %max_nb_segments65 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %82, i32 0, i32 5, !dbg !5729
  %83 = load i32, i32* %max_nb_segments65, align 4, !dbg !5729
  %cmp66 = icmp sge i32 %81, %83, !dbg !5730
  br i1 %cmp66, label %if.then67, label %if.else93, !dbg !5731

if.then67:                                        ; preds = %land.lhs.true64
  %84 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5732
  %segments68 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %84, i32 0, i32 23, !dbg !5734
  %85 = load %struct.HLSSegment*, %struct.HLSSegment** %segments68, align 8, !dbg !5734
  store %struct.HLSSegment* %85, %struct.HLSSegment** %en, align 8, !dbg !5735
  %86 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !5736
  %duration69 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %86, i32 0, i32 2, !dbg !5737
  %87 = load double, double* %duration69, align 8, !dbg !5737
  %88 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5738
  %initial_prog_date_time = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %88, i32 0, i32 30, !dbg !5739
  %89 = load double, double* %initial_prog_date_time, align 8, !dbg !5740
  %add = fadd double %89, %87, !dbg !5740
  store double %add, double* %initial_prog_date_time, align 8, !dbg !5740
  %90 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !5741
  %next70 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %90, i32 0, i32 9, !dbg !5742
  %91 = load %struct.HLSSegment*, %struct.HLSSegment** %next70, align 8, !dbg !5742
  %92 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5743
  %segments71 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %92, i32 0, i32 23, !dbg !5744
  store %struct.HLSSegment* %91, %struct.HLSSegment** %segments71, align 8, !dbg !5745
  %93 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !5746
  %tobool72 = icmp ne %struct.HLSSegment* %93, null, !dbg !5746
  br i1 %tobool72, label %land.lhs.true73, label %if.else91, !dbg !5748

land.lhs.true73:                                  ; preds = %if.then67
  %94 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !5749
  %flags74 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %94, i32 0, i32 8, !dbg !5751
  %95 = load i32, i32* %flags74, align 8, !dbg !5751
  %and75 = and i32 %95, 2, !dbg !5752
  %tobool76 = icmp ne i32 %and75, 0, !dbg !5752
  br i1 %tobool76, label %land.lhs.true77, label %if.else91, !dbg !5753

land.lhs.true77:                                  ; preds = %land.lhs.true73
  %96 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !5754
  %flags78 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %96, i32 0, i32 8, !dbg !5755
  %97 = load i32, i32* %flags78, align 8, !dbg !5755
  %and79 = and i32 %97, 1, !dbg !5756
  %tobool80 = icmp ne i32 %and79, 0, !dbg !5756
  br i1 %tobool80, label %if.else91, label %lor.lhs.false81, !dbg !5757

lor.lhs.false81:                                  ; preds = %land.lhs.true77
  %98 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !5758
  %wrap = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %98, i32 0, i32 7, !dbg !5759
  %99 = load i32, i32* %wrap, align 4, !dbg !5759
  %tobool82 = icmp ne i32 %99, 0, !dbg !5758
  br i1 %tobool82, label %if.else91, label %if.then83, !dbg !5760

if.then83:                                        ; preds = %lor.lhs.false81
  %100 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5762
  %old_segments84 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %100, i32 0, i32 25, !dbg !5764
  %101 = load %struct.HLSSegment*, %struct.HLSSegment** %old_segments84, align 8, !dbg !5764
  %102 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !5765
  %next85 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %102, i32 0, i32 9, !dbg !5766
  store %struct.HLSSegment* %101, %struct.HLSSegment** %next85, align 8, !dbg !5767
  %103 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !5768
  %104 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5769
  %old_segments86 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %104, i32 0, i32 25, !dbg !5770
  store %struct.HLSSegment* %103, %struct.HLSSegment** %old_segments86, align 8, !dbg !5771
  %105 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5772
  %106 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !5774
  %107 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5775
  %call87 = call i32 @hls_delete_old_segments(%struct.AVFormatContext* %105, %struct.HLSContext* %106, %struct.VariantStream* %107), !dbg !5776
  store i32 %call87, i32* %ret, align 4, !dbg !5777
  %cmp88 = icmp slt i32 %call87, 0, !dbg !5778
  br i1 %cmp88, label %if.then89, label %if.end90, !dbg !5779

if.then89:                                        ; preds = %if.then83
  %108 = load i32, i32* %ret, align 4, !dbg !5780
  store i32 %108, i32* %retval, align 4, !dbg !5781
  br label %return, !dbg !5781

if.end90:                                         ; preds = %if.then83
  br label %if.end92, !dbg !5782

if.else91:                                        ; preds = %lor.lhs.false81, %land.lhs.true77, %land.lhs.true73, %if.then67
  %109 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !5783
  %110 = bitcast %struct.HLSSegment* %109 to i8*, !dbg !5783
  call void @av_free(i8* %110), !dbg !5784
  br label %if.end92

if.end92:                                         ; preds = %if.else91, %if.end90
  br label %if.end95, !dbg !5785

if.else93:                                        ; preds = %land.lhs.true64, %if.end61
  %111 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5786
  %nb_entries94 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %111, i32 0, i32 19, !dbg !5787
  %112 = load i32, i32* %nb_entries94, align 8, !dbg !5788
  %inc = add nsw i32 %112, 1, !dbg !5788
  store i32 %inc, i32* %nb_entries94, align 8, !dbg !5788
  br label %if.end95

if.end95:                                         ; preds = %if.else93, %if.end92
  %113 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !5789
  %max_seg_size96 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %113, i32 0, i32 17, !dbg !5791
  %114 = load i64, i64* %max_seg_size96, align 8, !dbg !5791
  %cmp97 = icmp sgt i64 %114, 0, !dbg !5792
  br i1 %cmp97, label %if.then98, label %if.end99, !dbg !5793

if.then98:                                        ; preds = %if.end95
  store i32 0, i32* %retval, align 4, !dbg !5794
  br label %return, !dbg !5794

if.end99:                                         ; preds = %if.end95
  %115 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5796
  %sequence = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %115, i32 0, i32 2, !dbg !5797
  %116 = load i64, i64* %sequence, align 8, !dbg !5798
  %inc100 = add nsw i64 %116, 1, !dbg !5798
  store i64 %inc100, i64* %sequence, align 8, !dbg !5798
  store i32 0, i32* %retval, align 4, !dbg !5799
  br label %return, !dbg !5799

return:                                           ; preds = %if.end99, %if.then98, %if.then89, %if.then5, %if.then
  %117 = load i32, i32* %retval, align 4, !dbg !5800
  ret i32 %117, !dbg !5800
}

; Function Attrs: nounwind uwtable
define internal void @sls_flag_file_rename(%struct.HLSContext* %hls, %struct.VariantStream* %vs, i8* %old_filename) #0 !dbg !5801 {
entry:
  %hls.addr = alloca %struct.HLSContext*, align 8
  %vs.addr = alloca %struct.VariantStream*, align 8
  %old_filename.addr = alloca i8*, align 8
  store %struct.HLSContext* %hls, %struct.HLSContext** %hls.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %hls.addr, metadata !5804, metadata !2335), !dbg !5805
  store %struct.VariantStream* %vs, %struct.VariantStream** %vs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VariantStream** %vs.addr, metadata !5806, metadata !2335), !dbg !5807
  store i8* %old_filename, i8** %old_filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %old_filename.addr, metadata !5808, metadata !2335), !dbg !5809
  %0 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !5810
  %flags = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %0, i32 0, i32 8, !dbg !5812
  %1 = load i32, i32* %flags, align 8, !dbg !5812
  %and = and i32 %1, 1536, !dbg !5813
  %tobool = icmp ne i32 %and, 0, !dbg !5813
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5814

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5815
  %current_segment_final_filename_fmt = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %2, i32 0, i32 31, !dbg !5816
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %current_segment_final_filename_fmt, i32 0, i32 0, !dbg !5815
  %call = call i64 @strlen(i8* %arraydecay) #11, !dbg !5817
  %tobool1 = icmp ne i64 %call, 0, !dbg !5817
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5818

if.then:                                          ; preds = %land.lhs.true
  %3 = load i8*, i8** %old_filename.addr, align 8, !dbg !5820
  %4 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5822
  %avf = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %4, i32 0, i32 8, !dbg !5823
  %5 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf, align 8, !dbg !5823
  %url = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %5, i32 0, i32 9, !dbg !5824
  %6 = load i8*, i8** %url, align 8, !dbg !5824
  %7 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !5825
  %8 = bitcast %struct.HLSContext* %7 to i8*, !dbg !5825
  %call2 = call i32 @ff_rename(i8* %3, i8* %6, i8* %8), !dbg !5826
  br label %if.end, !dbg !5827

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !5828
}

; Function Attrs: nounwind uwtable
define internal i32 @hls_start(%struct.AVFormatContext* %s, %struct.VariantStream* %vs) #0 !dbg !5829 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %vs.addr = alloca %struct.VariantStream*, align 8
  %c = alloca %struct.HLSContext*, align 8
  %oc = alloca %struct.AVFormatContext*, align 8
  %vtt_oc = alloca %struct.AVFormatContext*, align 8
  %options = alloca %struct.AVDictionary*, align 8
  %proto = alloca i8*, align 8
  %use_temp_file = alloca i32, align 4
  %filename = alloca i8*, align 8
  %iv_string = alloca [33 x i8], align 16
  %err = alloca i32, align 4
  %new_name = alloca i8*, align 8
  %filename12 = alloca i8*, align 8
  %now0 = alloca i64, align 8
  %tm = alloca %struct.tm*, align 8
  %tmpbuf = alloca %struct.tm, align 8
  %bufsize = alloca i32, align 4
  %buf = alloca i8*, align 8
  %dir = alloca i8*, align 8
  %fn_copy = alloca i8*, align 8
  %filename66 = alloca i8*, align 8
  %filename89 = alloca i8*, align 8
  %new_name122 = alloca i8*, align 8
  %period = alloca [21 x i8], align 16
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !5832, metadata !2335), !dbg !5833
  store %struct.VariantStream* %vs, %struct.VariantStream** %vs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VariantStream** %vs.addr, metadata !5834, metadata !2335), !dbg !5835
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %c, metadata !5836, metadata !2335), !dbg !5837
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5838
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !5839
  %1 = load i8*, i8** %priv_data, align 8, !dbg !5839
  %2 = bitcast i8* %1 to %struct.HLSContext*, !dbg !5838
  store %struct.HLSContext* %2, %struct.HLSContext** %c, align 8, !dbg !5837
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %oc, metadata !5840, metadata !2335), !dbg !5841
  %3 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5842
  %avf = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %3, i32 0, i32 8, !dbg !5843
  %4 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf, align 8, !dbg !5843
  store %struct.AVFormatContext* %4, %struct.AVFormatContext** %oc, align 8, !dbg !5841
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %vtt_oc, metadata !5844, metadata !2335), !dbg !5845
  %5 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5846
  %vtt_avf = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %5, i32 0, i32 9, !dbg !5847
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %vtt_avf, align 8, !dbg !5847
  store %struct.AVFormatContext* %6, %struct.AVFormatContext** %vtt_oc, align 8, !dbg !5845
  call void @llvm.dbg.declare(metadata %struct.AVDictionary** %options, metadata !5848, metadata !2335), !dbg !5849
  store %struct.AVDictionary* null, %struct.AVDictionary** %options, align 8, !dbg !5849
  call void @llvm.dbg.declare(metadata i8** %proto, metadata !5850, metadata !2335), !dbg !5851
  store i8* null, i8** %proto, align 8, !dbg !5851
  call void @llvm.dbg.declare(metadata i32* %use_temp_file, metadata !5852, metadata !2335), !dbg !5853
  store i32 0, i32* %use_temp_file, align 4, !dbg !5853
  call void @llvm.dbg.declare(metadata i8** %filename, metadata !5854, metadata !2335), !dbg !5855
  call void @llvm.dbg.declare(metadata [33 x i8]* %iv_string, metadata !5856, metadata !2335), !dbg !5857
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5858, metadata !2335), !dbg !5859
  store i32 0, i32* %err, align 4, !dbg !5859
  %7 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !5860
  %flags = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %7, i32 0, i32 8, !dbg !5862
  %8 = load i32, i32* %flags, align 8, !dbg !5862
  %and = and i32 %8, 1, !dbg !5863
  %tobool = icmp ne i32 %and, 0, !dbg !5863
  br i1 %tobool, label %if.then, label %if.else, !dbg !5864

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %new_name, metadata !5865, metadata !2335), !dbg !5867
  %9 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5868
  %basename = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %9, i32 0, i32 26, !dbg !5869
  %10 = load i8*, i8** %basename, align 8, !dbg !5869
  %call = call noalias i8* @av_strdup(i8* %10), !dbg !5870
  store i8* %call, i8** %new_name, align 8, !dbg !5867
  %11 = load i8*, i8** %new_name, align 8, !dbg !5871
  %tobool1 = icmp ne i8* %11, null, !dbg !5871
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !5873

if.then2:                                         ; preds = %if.then
  store i32 -12, i32* %retval, align 4, !dbg !5874
  br label %return, !dbg !5874

if.end:                                           ; preds = %if.then
  %12 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !5875
  %13 = load i8*, i8** %new_name, align 8, !dbg !5876
  call void @ff_format_set_url(%struct.AVFormatContext* %12, i8* %13), !dbg !5877
  %14 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5878
  %vtt_basename = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %14, i32 0, i32 27, !dbg !5880
  %15 = load i8*, i8** %vtt_basename, align 8, !dbg !5880
  %tobool3 = icmp ne i8* %15, null, !dbg !5878
  br i1 %tobool3, label %if.then4, label %if.end10, !dbg !5881

if.then4:                                         ; preds = %if.end
  %16 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5882
  %vtt_basename5 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %16, i32 0, i32 27, !dbg !5884
  %17 = load i8*, i8** %vtt_basename5, align 8, !dbg !5884
  %call6 = call noalias i8* @av_strdup(i8* %17), !dbg !5885
  store i8* %call6, i8** %new_name, align 8, !dbg !5886
  %18 = load i8*, i8** %new_name, align 8, !dbg !5887
  %tobool7 = icmp ne i8* %18, null, !dbg !5887
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !5889

if.then8:                                         ; preds = %if.then4
  store i32 -12, i32* %retval, align 4, !dbg !5890
  br label %return, !dbg !5890

if.end9:                                          ; preds = %if.then4
  %19 = load %struct.AVFormatContext*, %struct.AVFormatContext** %vtt_oc, align 8, !dbg !5891
  %20 = load i8*, i8** %new_name, align 8, !dbg !5892
  call void @ff_format_set_url(%struct.AVFormatContext* %19, i8* %20), !dbg !5893
  br label %if.end10, !dbg !5894

if.end10:                                         ; preds = %if.end9, %if.end
  br label %if.end110, !dbg !5895

if.else:                                          ; preds = %entry
  %21 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !5896
  %max_seg_size = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %21, i32 0, i32 17, !dbg !5899
  %22 = load i64, i64* %max_seg_size, align 8, !dbg !5899
  %cmp = icmp sgt i64 %22, 0, !dbg !5900
  br i1 %cmp, label %if.then11, label %if.else23, !dbg !5896

if.then11:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i8** %filename12, metadata !5901, metadata !2335), !dbg !5903
  store i8* null, i8** %filename12, align 8, !dbg !5903
  %23 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5904
  %basename13 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %23, i32 0, i32 26, !dbg !5906
  %24 = load i8*, i8** %basename13, align 8, !dbg !5906
  %25 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !5907
  %wrap = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %25, i32 0, i32 7, !dbg !5908
  %26 = load i32, i32* %wrap, align 4, !dbg !5908
  %tobool14 = icmp ne i32 %26, 0, !dbg !5907
  br i1 %tobool14, label %cond.true, label %cond.false, !dbg !5907

cond.true:                                        ; preds = %if.then11
  %27 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5909
  %sequence = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %27, i32 0, i32 2, !dbg !5911
  %28 = load i64, i64* %sequence, align 8, !dbg !5911
  %29 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !5912
  %wrap15 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %29, i32 0, i32 7, !dbg !5913
  %30 = load i32, i32* %wrap15, align 4, !dbg !5913
  %conv = sext i32 %30 to i64, !dbg !5912
  %rem = srem i64 %28, %conv, !dbg !5914
  br label %cond.end, !dbg !5915

cond.false:                                       ; preds = %if.then11
  %31 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5916
  %sequence16 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %31, i32 0, i32 2, !dbg !5918
  %32 = load i64, i64* %sequence16, align 8, !dbg !5918
  br label %cond.end, !dbg !5919

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %rem, %cond.true ], [ %32, %cond.false ], !dbg !5920
  %call17 = call i32 @replace_int_data_in_filename(i8** %filename12, i8* %24, i8 signext 100, i64 %cond), !dbg !5922
  %cmp18 = icmp slt i32 %call17, 1, !dbg !5923
  br i1 %cmp18, label %if.then20, label %if.end22, !dbg !5924

if.then20:                                        ; preds = %cond.end
  %33 = load i8*, i8** %filename12, align 8, !dbg !5925
  call void @av_free(i8* %33), !dbg !5927
  %34 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !5928
  %35 = bitcast %struct.AVFormatContext* %34 to i8*, !dbg !5928
  %36 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5929
  %basename21 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %36, i32 0, i32 26, !dbg !5930
  %37 = load i8*, i8** %basename21, align 8, !dbg !5930
  call void (i8*, i32, i8*, ...) @av_log(i8* %35, i32 16, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.160, i32 0, i32 0), i8* %37), !dbg !5931
  store i32 -22, i32* %retval, align 4, !dbg !5932
  br label %return, !dbg !5932

if.end22:                                         ; preds = %cond.end
  %38 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !5933
  %39 = load i8*, i8** %filename12, align 8, !dbg !5934
  call void @ff_format_set_url(%struct.AVFormatContext* %38, i8* %39), !dbg !5935
  br label %if.end109, !dbg !5936

if.else23:                                        ; preds = %if.else
  %40 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !5937
  %use_localtime = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %40, i32 0, i32 13, !dbg !5940
  %41 = load i32, i32* %use_localtime, align 4, !dbg !5940
  %tobool24 = icmp ne i32 %41, 0, !dbg !5937
  br i1 %tobool24, label %if.then25, label %if.else65, !dbg !5941

if.then25:                                        ; preds = %if.else23
  call void @llvm.dbg.declare(metadata i64* %now0, metadata !5942, metadata !2335), !dbg !5944
  call void @llvm.dbg.declare(metadata %struct.tm** %tm, metadata !5945, metadata !2335), !dbg !5946
  call void @llvm.dbg.declare(metadata %struct.tm* %tmpbuf, metadata !5947, metadata !2335), !dbg !5948
  call void @llvm.dbg.declare(metadata i32* %bufsize, metadata !5949, metadata !2335), !dbg !5950
  %42 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5951
  %basename26 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %42, i32 0, i32 26, !dbg !5952
  %43 = load i8*, i8** %basename26, align 8, !dbg !5952
  %call27 = call i64 @strlen(i8* %43) #11, !dbg !5953
  %add = add i64 %call27, 1024, !dbg !5954
  %conv28 = trunc i64 %add to i32, !dbg !5953
  store i32 %conv28, i32* %bufsize, align 4, !dbg !5950
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !5955, metadata !2335), !dbg !5956
  %44 = load i32, i32* %bufsize, align 4, !dbg !5957
  %conv29 = sext i32 %44 to i64, !dbg !5957
  %call30 = call noalias i8* @av_mallocz(i64 %conv29), !dbg !5958
  store i8* %call30, i8** %buf, align 8, !dbg !5956
  %45 = load i8*, i8** %buf, align 8, !dbg !5959
  %tobool31 = icmp ne i8* %45, null, !dbg !5959
  br i1 %tobool31, label %if.end33, label %if.then32, !dbg !5961

if.then32:                                        ; preds = %if.then25
  store i32 -12, i32* %retval, align 4, !dbg !5962
  br label %return, !dbg !5962

if.end33:                                         ; preds = %if.then25
  %call34 = call i64 @time(i64* %now0) #10, !dbg !5963
  %call35 = call %struct.tm* @localtime_r(i64* %now0, %struct.tm* %tmpbuf) #10, !dbg !5964
  store %struct.tm* %call35, %struct.tm** %tm, align 8, !dbg !5965
  %46 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !5966
  %47 = load i8*, i8** %buf, align 8, !dbg !5967
  call void @ff_format_set_url(%struct.AVFormatContext* %46, i8* %47), !dbg !5968
  %48 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !5969
  %url = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %48, i32 0, i32 9, !dbg !5971
  %49 = load i8*, i8** %url, align 8, !dbg !5971
  %50 = load i32, i32* %bufsize, align 4, !dbg !5972
  %conv36 = sext i32 %50 to i64, !dbg !5972
  %51 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5973
  %basename37 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %51, i32 0, i32 26, !dbg !5974
  %52 = load i8*, i8** %basename37, align 8, !dbg !5974
  %53 = load %struct.tm*, %struct.tm** %tm, align 8, !dbg !5975
  %call38 = call i64 @strftime(i8* %49, i64 %conv36, i8* %52, %struct.tm* %53) #10, !dbg !5976
  %tobool39 = icmp ne i64 %call38, 0, !dbg !5976
  br i1 %tobool39, label %if.end41, label %if.then40, !dbg !5977

if.then40:                                        ; preds = %if.end33
  %54 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !5978
  %55 = bitcast %struct.AVFormatContext* %54 to i8*, !dbg !5978
  call void (i8*, i32, i8*, ...) @av_log(i8* %55, i32 16, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.161, i32 0, i32 0)), !dbg !5980
  store i32 -22, i32* %retval, align 4, !dbg !5981
  br label %return, !dbg !5981

if.end41:                                         ; preds = %if.end33
  %56 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !5982
  %57 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !5983
  %58 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !5984
  %call42 = call i32 @sls_flag_use_localtime_filename(%struct.AVFormatContext* %56, %struct.HLSContext* %57, %struct.VariantStream* %58), !dbg !5985
  store i32 %call42, i32* %err, align 4, !dbg !5986
  %59 = load i32, i32* %err, align 4, !dbg !5987
  %cmp43 = icmp slt i32 %59, 0, !dbg !5989
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !5990

if.then45:                                        ; preds = %if.end41
  store i32 -12, i32* %retval, align 4, !dbg !5991
  br label %return, !dbg !5991

if.end46:                                         ; preds = %if.end41
  %60 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !5993
  %use_localtime_mkdir = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %60, i32 0, i32 14, !dbg !5995
  %61 = load i32, i32* %use_localtime_mkdir, align 8, !dbg !5995
  %tobool47 = icmp ne i32 %61, 0, !dbg !5993
  br i1 %tobool47, label %if.then48, label %if.end64, !dbg !5996

if.then48:                                        ; preds = %if.end46
  call void @llvm.dbg.declare(metadata i8** %dir, metadata !5997, metadata !2335), !dbg !5999
  call void @llvm.dbg.declare(metadata i8** %fn_copy, metadata !6000, metadata !2335), !dbg !6001
  %62 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6002
  %url49 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %62, i32 0, i32 9, !dbg !6003
  %63 = load i8*, i8** %url49, align 8, !dbg !6003
  %call50 = call noalias i8* @av_strdup(i8* %63), !dbg !6004
  store i8* %call50, i8** %fn_copy, align 8, !dbg !6001
  %64 = load i8*, i8** %fn_copy, align 8, !dbg !6005
  %tobool51 = icmp ne i8* %64, null, !dbg !6005
  br i1 %tobool51, label %if.end53, label %if.then52, !dbg !6007

if.then52:                                        ; preds = %if.then48
  store i32 -12, i32* %retval, align 4, !dbg !6008
  br label %return, !dbg !6008

if.end53:                                         ; preds = %if.then48
  %65 = load i8*, i8** %fn_copy, align 8, !dbg !6010
  %call54 = call i8* @av_dirname(i8* %65), !dbg !6011
  store i8* %call54, i8** %dir, align 8, !dbg !6012
  %66 = load i8*, i8** %dir, align 8, !dbg !6013
  %call55 = call i32 @ff_mkdir_p(i8* %66), !dbg !6015
  %cmp56 = icmp eq i32 %call55, -1, !dbg !6016
  br i1 %cmp56, label %land.lhs.true, label %if.end63, !dbg !6017

land.lhs.true:                                    ; preds = %if.end53
  %call58 = call i32* @__errno_location() #2, !dbg !6018
  %67 = load i32, i32* %call58, align 4, !dbg !6020
  %cmp59 = icmp ne i32 %67, 17, !dbg !6021
  br i1 %cmp59, label %if.then61, label %if.end63, !dbg !6022

if.then61:                                        ; preds = %land.lhs.true
  %68 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6023
  %69 = bitcast %struct.AVFormatContext* %68 to i8*, !dbg !6023
  %70 = load i8*, i8** %dir, align 8, !dbg !6025
  call void (i8*, i32, i8*, ...) @av_log(i8* %69, i32 16, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.162, i32 0, i32 0), i8* %70), !dbg !6026
  %71 = load i8*, i8** %fn_copy, align 8, !dbg !6027
  call void @av_free(i8* %71), !dbg !6028
  %call62 = call i32* @__errno_location() #2, !dbg !6029
  %72 = load i32, i32* %call62, align 4, !dbg !6030
  %sub = sub nsw i32 0, %72, !dbg !6029
  store i32 %sub, i32* %retval, align 4, !dbg !6031
  br label %return, !dbg !6031

if.end63:                                         ; preds = %land.lhs.true, %if.end53
  %73 = load i8*, i8** %fn_copy, align 8, !dbg !6032
  call void @av_free(i8* %73), !dbg !6033
  br label %if.end64, !dbg !6034

if.end64:                                         ; preds = %if.end63, %if.end46
  br label %if.end85, !dbg !6035

if.else65:                                        ; preds = %if.else23
  call void @llvm.dbg.declare(metadata i8** %filename66, metadata !6036, metadata !2335), !dbg !6038
  store i8* null, i8** %filename66, align 8, !dbg !6038
  %74 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6039
  %basename67 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %74, i32 0, i32 26, !dbg !6041
  %75 = load i8*, i8** %basename67, align 8, !dbg !6041
  %76 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !6042
  %wrap68 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %76, i32 0, i32 7, !dbg !6043
  %77 = load i32, i32* %wrap68, align 4, !dbg !6043
  %tobool69 = icmp ne i32 %77, 0, !dbg !6042
  br i1 %tobool69, label %cond.true70, label %cond.false75, !dbg !6042

cond.true70:                                      ; preds = %if.else65
  %78 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6044
  %sequence71 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %78, i32 0, i32 2, !dbg !6046
  %79 = load i64, i64* %sequence71, align 8, !dbg !6046
  %80 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !6047
  %wrap72 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %80, i32 0, i32 7, !dbg !6048
  %81 = load i32, i32* %wrap72, align 4, !dbg !6048
  %conv73 = sext i32 %81 to i64, !dbg !6047
  %rem74 = srem i64 %79, %conv73, !dbg !6049
  br label %cond.end77, !dbg !6050

cond.false75:                                     ; preds = %if.else65
  %82 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6051
  %sequence76 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %82, i32 0, i32 2, !dbg !6053
  %83 = load i64, i64* %sequence76, align 8, !dbg !6053
  br label %cond.end77, !dbg !6054

cond.end77:                                       ; preds = %cond.false75, %cond.true70
  %cond78 = phi i64 [ %rem74, %cond.true70 ], [ %83, %cond.false75 ], !dbg !6055
  %call79 = call i32 @replace_int_data_in_filename(i8** %filename66, i8* %75, i8 signext 100, i64 %cond78), !dbg !6057
  %cmp80 = icmp slt i32 %call79, 1, !dbg !6058
  br i1 %cmp80, label %if.then82, label %if.end84, !dbg !6059

if.then82:                                        ; preds = %cond.end77
  %84 = load i8*, i8** %filename66, align 8, !dbg !6060
  call void @av_free(i8* %84), !dbg !6062
  %85 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6063
  %86 = bitcast %struct.AVFormatContext* %85 to i8*, !dbg !6063
  %87 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6064
  %basename83 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %87, i32 0, i32 26, !dbg !6065
  %88 = load i8*, i8** %basename83, align 8, !dbg !6065
  call void (i8*, i32, i8*, ...) @av_log(i8* %86, i32 16, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.163, i32 0, i32 0), i8* %88), !dbg !6066
  store i32 -22, i32* %retval, align 4, !dbg !6067
  br label %return, !dbg !6067

if.end84:                                         ; preds = %cond.end77
  %89 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6068
  %90 = load i8*, i8** %filename66, align 8, !dbg !6069
  call void @ff_format_set_url(%struct.AVFormatContext* %89, i8* %90), !dbg !6070
  br label %if.end85

if.end85:                                         ; preds = %if.end84, %if.end64
  %91 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6071
  %vtt_basename86 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %91, i32 0, i32 27, !dbg !6073
  %92 = load i8*, i8** %vtt_basename86, align 8, !dbg !6073
  %tobool87 = icmp ne i8* %92, null, !dbg !6071
  br i1 %tobool87, label %if.then88, label %if.end108, !dbg !6074

if.then88:                                        ; preds = %if.end85
  call void @llvm.dbg.declare(metadata i8** %filename89, metadata !6075, metadata !2335), !dbg !6077
  store i8* null, i8** %filename89, align 8, !dbg !6077
  %93 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6078
  %vtt_basename90 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %93, i32 0, i32 27, !dbg !6080
  %94 = load i8*, i8** %vtt_basename90, align 8, !dbg !6080
  %95 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !6081
  %wrap91 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %95, i32 0, i32 7, !dbg !6082
  %96 = load i32, i32* %wrap91, align 4, !dbg !6082
  %tobool92 = icmp ne i32 %96, 0, !dbg !6081
  br i1 %tobool92, label %cond.true93, label %cond.false98, !dbg !6081

cond.true93:                                      ; preds = %if.then88
  %97 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6083
  %sequence94 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %97, i32 0, i32 2, !dbg !6085
  %98 = load i64, i64* %sequence94, align 8, !dbg !6085
  %99 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !6086
  %wrap95 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %99, i32 0, i32 7, !dbg !6087
  %100 = load i32, i32* %wrap95, align 4, !dbg !6087
  %conv96 = sext i32 %100 to i64, !dbg !6086
  %rem97 = srem i64 %98, %conv96, !dbg !6088
  br label %cond.end100, !dbg !6089

cond.false98:                                     ; preds = %if.then88
  %101 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6090
  %sequence99 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %101, i32 0, i32 2, !dbg !6092
  %102 = load i64, i64* %sequence99, align 8, !dbg !6092
  br label %cond.end100, !dbg !6093

cond.end100:                                      ; preds = %cond.false98, %cond.true93
  %cond101 = phi i64 [ %rem97, %cond.true93 ], [ %102, %cond.false98 ], !dbg !6094
  %call102 = call i32 @replace_int_data_in_filename(i8** %filename89, i8* %94, i8 signext 100, i64 %cond101), !dbg !6096
  %cmp103 = icmp slt i32 %call102, 1, !dbg !6097
  br i1 %cmp103, label %if.then105, label %if.end107, !dbg !6098

if.then105:                                       ; preds = %cond.end100
  %103 = load i8*, i8** %filename89, align 8, !dbg !6099
  call void @av_free(i8* %103), !dbg !6101
  %104 = load %struct.AVFormatContext*, %struct.AVFormatContext** %vtt_oc, align 8, !dbg !6102
  %105 = bitcast %struct.AVFormatContext* %104 to i8*, !dbg !6102
  %106 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6103
  %vtt_basename106 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %106, i32 0, i32 27, !dbg !6104
  %107 = load i8*, i8** %vtt_basename106, align 8, !dbg !6104
  call void (i8*, i32, i8*, ...) @av_log(i8* %105, i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.164, i32 0, i32 0), i8* %107), !dbg !6105
  store i32 -22, i32* %retval, align 4, !dbg !6106
  br label %return, !dbg !6106

if.end107:                                        ; preds = %cond.end100
  %108 = load %struct.AVFormatContext*, %struct.AVFormatContext** %vtt_oc, align 8, !dbg !6107
  %109 = load i8*, i8** %filename89, align 8, !dbg !6108
  call void @ff_format_set_url(%struct.AVFormatContext* %108, i8* %109), !dbg !6109
  br label %if.end108, !dbg !6110

if.end108:                                        ; preds = %if.end107, %if.end85
  br label %if.end109

if.end109:                                        ; preds = %if.end108, %if.end22
  br label %if.end110

if.end110:                                        ; preds = %if.end109, %if.end10
  %110 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6111
  %number = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %110, i32 0, i32 1, !dbg !6112
  %111 = load i32, i32* %number, align 4, !dbg !6113
  %inc = add i32 %111, 1, !dbg !6113
  store i32 %inc, i32* %number, align 4, !dbg !6113
  %112 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6114
  %113 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !6115
  call void @set_http_options(%struct.AVFormatContext* %112, %struct.AVDictionary** %options, %struct.HLSContext* %113), !dbg !6116
  %114 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6117
  %url111 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %114, i32 0, i32 9, !dbg !6118
  %115 = load i8*, i8** %url111, align 8, !dbg !6118
  %call112 = call i8* @avio_find_protocol_name(i8* %115), !dbg !6119
  store i8* %call112, i8** %proto, align 8, !dbg !6120
  %116 = load i8*, i8** %proto, align 8, !dbg !6121
  %tobool113 = icmp ne i8* %116, null, !dbg !6121
  br i1 %tobool113, label %land.lhs.true114, label %land.end, !dbg !6122

land.lhs.true114:                                 ; preds = %if.end110
  %117 = load i8*, i8** %proto, align 8, !dbg !6123
  %call115 = call i32 @strcmp(i8* %117, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.136, i32 0, i32 0)) #11, !dbg !6125
  %tobool116 = icmp ne i32 %call115, 0, !dbg !6125
  br i1 %tobool116, label %land.end, label %land.rhs, !dbg !6126

land.rhs:                                         ; preds = %land.lhs.true114
  %118 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !6127
  %flags117 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %118, i32 0, i32 8, !dbg !6129
  %119 = load i32, i32* %flags117, align 8, !dbg !6129
  %and118 = and i32 %119, 2048, !dbg !6130
  %tobool119 = icmp ne i32 %and118, 0, !dbg !6131
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true114, %if.end110
  %120 = phi i1 [ false, %land.lhs.true114 ], [ false, %if.end110 ], [ %tobool119, %land.rhs ]
  %land.ext = zext i1 %120 to i32, !dbg !6132
  store i32 %land.ext, i32* %use_temp_file, align 4, !dbg !6134
  %121 = load i32, i32* %use_temp_file, align 4, !dbg !6135
  %tobool120 = icmp ne i32 %121, 0, !dbg !6135
  br i1 %tobool120, label %if.then121, label %if.end128, !dbg !6137

if.then121:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i8** %new_name122, metadata !6138, metadata !2335), !dbg !6140
  %122 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6141
  %url123 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %122, i32 0, i32 9, !dbg !6142
  %123 = load i8*, i8** %url123, align 8, !dbg !6142
  %call124 = call i8* (i8*, ...) @av_asprintf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.165, i32 0, i32 0), i8* %123), !dbg !6143
  store i8* %call124, i8** %new_name122, align 8, !dbg !6140
  %124 = load i8*, i8** %new_name122, align 8, !dbg !6144
  %tobool125 = icmp ne i8* %124, null, !dbg !6144
  br i1 %tobool125, label %if.end127, label %if.then126, !dbg !6146

if.then126:                                       ; preds = %if.then121
  store i32 -12, i32* %retval, align 4, !dbg !6147
  br label %return, !dbg !6147

if.end127:                                        ; preds = %if.then121
  %125 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6148
  %126 = load i8*, i8** %new_name122, align 8, !dbg !6149
  call void @ff_format_set_url(%struct.AVFormatContext* %125, i8* %126), !dbg !6150
  br label %if.end128, !dbg !6151

if.end128:                                        ; preds = %if.end127, %land.end
  %127 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !6152
  %key_info_file = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %127, i32 0, i32 29, !dbg !6154
  %128 = load i8*, i8** %key_info_file, align 8, !dbg !6154
  %tobool129 = icmp ne i8* %128, null, !dbg !6152
  br i1 %tobool129, label %if.then131, label %lor.lhs.false, !dbg !6155

lor.lhs.false:                                    ; preds = %if.end128
  %129 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !6156
  %encrypt = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %129, i32 0, i32 23, !dbg !6158
  %130 = load i32, i32* %encrypt, align 8, !dbg !6158
  %tobool130 = icmp ne i32 %130, 0, !dbg !6156
  br i1 %tobool130, label %if.then131, label %if.else198, !dbg !6159

if.then131:                                       ; preds = %lor.lhs.false, %if.end128
  %131 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !6160
  %segment_type = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %131, i32 0, i32 12, !dbg !6163
  %132 = load i32, i32* %segment_type, align 8, !dbg !6163
  %cmp132 = icmp eq i32 %132, 1, !dbg !6164
  br i1 %cmp132, label %if.then134, label %if.end135, !dbg !6165

if.then134:                                       ; preds = %if.then131
  %133 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6166
  %134 = bitcast %struct.AVFormatContext* %133 to i8*, !dbg !6166
  call void (i8*, i32, i8*, ...) @av_log(i8* %134, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.166, i32 0, i32 0)), !dbg !6168
  store i32 -1163346256, i32* %retval, align 4, !dbg !6169
  br label %return, !dbg !6169

if.end135:                                        ; preds = %if.then131
  %135 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !6170
  %key_info_file136 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %135, i32 0, i32 29, !dbg !6172
  %136 = load i8*, i8** %key_info_file136, align 8, !dbg !6172
  %tobool137 = icmp ne i8* %136, null, !dbg !6170
  br i1 %tobool137, label %land.lhs.true138, label %if.end142, !dbg !6173

land.lhs.true138:                                 ; preds = %if.end135
  %137 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !6174
  %encrypt139 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %137, i32 0, i32 23, !dbg !6176
  %138 = load i32, i32* %encrypt139, align 8, !dbg !6176
  %tobool140 = icmp ne i32 %138, 0, !dbg !6174
  br i1 %tobool140, label %if.then141, label %if.end142, !dbg !6177

if.then141:                                       ; preds = %land.lhs.true138
  %139 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6178
  %140 = bitcast %struct.AVFormatContext* %139 to i8*, !dbg !6178
  call void (i8*, i32, i8*, ...) @av_log(i8* %140, i32 24, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.167, i32 0, i32 0)), !dbg !6180
  br label %if.end142, !dbg !6181

if.end142:                                        ; preds = %if.then141, %land.lhs.true138, %if.end135
  %141 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !6182
  %encrypt_started = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %141, i32 0, i32 28, !dbg !6184
  %142 = load i32, i32* %encrypt_started, align 8, !dbg !6184
  %tobool143 = icmp ne i32 %142, 0, !dbg !6182
  br i1 %tobool143, label %lor.lhs.false144, label %if.then148, !dbg !6185

lor.lhs.false144:                                 ; preds = %if.end142
  %143 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !6186
  %flags145 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %143, i32 0, i32 8, !dbg !6188
  %144 = load i32, i32* %flags145, align 8, !dbg !6188
  %and146 = and i32 %144, 4096, !dbg !6189
  %tobool147 = icmp ne i32 %and146, 0, !dbg !6189
  br i1 %tobool147, label %if.then148, label %if.end165, !dbg !6190

if.then148:                                       ; preds = %lor.lhs.false144, %if.end142
  %145 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !6191
  %key_info_file149 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %145, i32 0, i32 29, !dbg !6194
  %146 = load i8*, i8** %key_info_file149, align 8, !dbg !6194
  %tobool150 = icmp ne i8* %146, null, !dbg !6191
  br i1 %tobool150, label %if.then151, label %if.else157, !dbg !6195

if.then151:                                       ; preds = %if.then148
  %147 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6196
  %call152 = call i32 @hls_encryption_start(%struct.AVFormatContext* %147), !dbg !6199
  store i32 %call152, i32* %err, align 4, !dbg !6200
  %cmp153 = icmp slt i32 %call152, 0, !dbg !6201
  br i1 %cmp153, label %if.then155, label %if.end156, !dbg !6202

if.then155:                                       ; preds = %if.then151
  br label %fail, !dbg !6203

if.end156:                                        ; preds = %if.then151
  br label %if.end163, !dbg !6204

if.else157:                                       ; preds = %if.then148
  %148 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6205
  %149 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6208
  %call158 = call i32 @do_encrypt(%struct.AVFormatContext* %148, %struct.VariantStream* %149), !dbg !6209
  store i32 %call158, i32* %err, align 4, !dbg !6210
  %cmp159 = icmp slt i32 %call158, 0, !dbg !6211
  br i1 %cmp159, label %if.then161, label %if.end162, !dbg !6212

if.then161:                                       ; preds = %if.else157
  br label %fail, !dbg !6213

if.end162:                                        ; preds = %if.else157
  br label %if.end163

if.end163:                                        ; preds = %if.end162, %if.end156
  %150 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !6214
  %encrypt_started164 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %150, i32 0, i32 28, !dbg !6215
  store i32 1, i32* %encrypt_started164, align 8, !dbg !6216
  br label %if.end165, !dbg !6217

if.end165:                                        ; preds = %if.end163, %lor.lhs.false144
  %151 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !6218
  %key_string = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %151, i32 0, i32 32, !dbg !6220
  %arraydecay = getelementptr inbounds [33 x i8], [33 x i8]* %key_string, i32 0, i32 0, !dbg !6218
  %call166 = call i32 @av_dict_set(%struct.AVDictionary** %options, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.168, i32 0, i32 0), i8* %arraydecay, i32 0), !dbg !6221
  store i32 %call166, i32* %err, align 4, !dbg !6222
  %cmp167 = icmp slt i32 %call166, 0, !dbg !6223
  br i1 %cmp167, label %if.then169, label %if.end170, !dbg !6224

if.then169:                                       ; preds = %if.end165
  br label %fail, !dbg !6225

if.end170:                                        ; preds = %if.end165
  %arraydecay171 = getelementptr inbounds [33 x i8], [33 x i8]* %iv_string, i32 0, i32 0, !dbg !6226
  %152 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !6227
  %iv_string172 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %152, i32 0, i32 33, !dbg !6228
  %arraydecay173 = getelementptr inbounds [33 x i8], [33 x i8]* %iv_string172, i32 0, i32 0, !dbg !6227
  %call174 = call i64 @av_strlcpy(i8* %arraydecay171, i8* %arraydecay173, i64 33), !dbg !6229
  %conv175 = trunc i64 %call174 to i32, !dbg !6229
  store i32 %conv175, i32* %err, align 4, !dbg !6230
  %153 = load i32, i32* %err, align 4, !dbg !6231
  %tobool176 = icmp ne i32 %153, 0, !dbg !6231
  br i1 %tobool176, label %if.end181, label %if.then177, !dbg !6233

if.then177:                                       ; preds = %if.end170
  %arraydecay178 = getelementptr inbounds [33 x i8], [33 x i8]* %iv_string, i32 0, i32 0, !dbg !6234
  %154 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6235
  %sequence179 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %154, i32 0, i32 2, !dbg !6236
  %155 = load i64, i64* %sequence179, align 8, !dbg !6236
  %call180 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay178, i64 33, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.169, i32 0, i32 0), i64 %155) #10, !dbg !6237
  br label %if.end181, !dbg !6237

if.end181:                                        ; preds = %if.then177, %if.end170
  %arraydecay182 = getelementptr inbounds [33 x i8], [33 x i8]* %iv_string, i32 0, i32 0, !dbg !6238
  %call183 = call i32 @av_dict_set(%struct.AVDictionary** %options, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.170, i32 0, i32 0), i8* %arraydecay182, i32 0), !dbg !6240
  store i32 %call183, i32* %err, align 4, !dbg !6241
  %cmp184 = icmp slt i32 %call183, 0, !dbg !6242
  br i1 %cmp184, label %if.then186, label %if.end187, !dbg !6243

if.then186:                                       ; preds = %if.end181
  br label %fail, !dbg !6244

if.end187:                                        ; preds = %if.end181
  %156 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6245
  %url188 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %156, i32 0, i32 9, !dbg !6246
  %157 = load i8*, i8** %url188, align 8, !dbg !6246
  %call189 = call i8* (i8*, ...) @av_asprintf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.171, i32 0, i32 0), i8* %157), !dbg !6247
  store i8* %call189, i8** %filename, align 8, !dbg !6248
  %158 = load i8*, i8** %filename, align 8, !dbg !6249
  %tobool190 = icmp ne i8* %158, null, !dbg !6249
  br i1 %tobool190, label %if.end192, label %if.then191, !dbg !6251

if.then191:                                       ; preds = %if.end187
  store i32 -12, i32* %err, align 4, !dbg !6252
  br label %fail, !dbg !6254

if.end192:                                        ; preds = %if.end187
  %159 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6255
  %160 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6256
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %160, i32 0, i32 4, !dbg !6257
  %161 = load i8*, i8** %filename, align 8, !dbg !6258
  %call193 = call i32 @hlsenc_io_open(%struct.AVFormatContext* %159, %struct.AVIOContext** %pb, i8* %161, %struct.AVDictionary** %options), !dbg !6259
  store i32 %call193, i32* %err, align 4, !dbg !6260
  %162 = load i8*, i8** %filename, align 8, !dbg !6261
  call void @av_free(i8* %162), !dbg !6262
  call void @av_dict_free(%struct.AVDictionary** %options), !dbg !6263
  %163 = load i32, i32* %err, align 4, !dbg !6264
  %cmp194 = icmp slt i32 %163, 0, !dbg !6266
  br i1 %cmp194, label %if.then196, label %if.end197, !dbg !6267

if.then196:                                       ; preds = %if.end192
  %164 = load i32, i32* %err, align 4, !dbg !6268
  store i32 %164, i32* %retval, align 4, !dbg !6269
  br label %return, !dbg !6269

if.end197:                                        ; preds = %if.end192
  br label %if.end214, !dbg !6270

if.else198:                                       ; preds = %lor.lhs.false
  %165 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !6271
  %segment_type199 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %165, i32 0, i32 12, !dbg !6274
  %166 = load i32, i32* %segment_type199, align 8, !dbg !6274
  %cmp200 = icmp ne i32 %166, 1, !dbg !6275
  br i1 %cmp200, label %if.then202, label %if.end213, !dbg !6271

if.then202:                                       ; preds = %if.else198
  %167 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6276
  %168 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6279
  %pb203 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %168, i32 0, i32 4, !dbg !6280
  %169 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6281
  %url204 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %169, i32 0, i32 9, !dbg !6282
  %170 = load i8*, i8** %url204, align 8, !dbg !6282
  %call205 = call i32 @hlsenc_io_open(%struct.AVFormatContext* %167, %struct.AVIOContext** %pb203, i8* %170, %struct.AVDictionary** %options), !dbg !6283
  store i32 %call205, i32* %err, align 4, !dbg !6284
  %cmp206 = icmp slt i32 %call205, 0, !dbg !6285
  br i1 %cmp206, label %if.then208, label %if.end212, !dbg !6286

if.then208:                                       ; preds = %if.then202
  %171 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !6287
  %ignore_io_errors = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %171, i32 0, i32 52, !dbg !6290
  %172 = load i32, i32* %ignore_io_errors, align 8, !dbg !6290
  %tobool209 = icmp ne i32 %172, 0, !dbg !6287
  br i1 %tobool209, label %if.then210, label %if.end211, !dbg !6291

if.then210:                                       ; preds = %if.then208
  store i32 0, i32* %err, align 4, !dbg !6292
  br label %if.end211, !dbg !6293

if.end211:                                        ; preds = %if.then210, %if.then208
  br label %fail, !dbg !6294

if.end212:                                        ; preds = %if.then202
  br label %if.end213, !dbg !6295

if.end213:                                        ; preds = %if.end212, %if.else198
  br label %if.end214

if.end214:                                        ; preds = %if.end213, %if.end197
  %173 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6296
  %vtt_basename215 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %173, i32 0, i32 27, !dbg !6298
  %174 = load i8*, i8** %vtt_basename215, align 8, !dbg !6298
  %tobool216 = icmp ne i8* %174, null, !dbg !6296
  br i1 %tobool216, label %if.then217, label %if.end229, !dbg !6299

if.then217:                                       ; preds = %if.end214
  %175 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6300
  %176 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !6302
  call void @set_http_options(%struct.AVFormatContext* %175, %struct.AVDictionary** %options, %struct.HLSContext* %176), !dbg !6303
  %177 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6304
  %178 = load %struct.AVFormatContext*, %struct.AVFormatContext** %vtt_oc, align 8, !dbg !6306
  %pb218 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %178, i32 0, i32 4, !dbg !6307
  %179 = load %struct.AVFormatContext*, %struct.AVFormatContext** %vtt_oc, align 8, !dbg !6308
  %url219 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %179, i32 0, i32 9, !dbg !6309
  %180 = load i8*, i8** %url219, align 8, !dbg !6309
  %call220 = call i32 @hlsenc_io_open(%struct.AVFormatContext* %177, %struct.AVIOContext** %pb218, i8* %180, %struct.AVDictionary** %options), !dbg !6310
  store i32 %call220, i32* %err, align 4, !dbg !6311
  %cmp221 = icmp slt i32 %call220, 0, !dbg !6312
  br i1 %cmp221, label %if.then223, label %if.end228, !dbg !6313

if.then223:                                       ; preds = %if.then217
  %181 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !6314
  %ignore_io_errors224 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %181, i32 0, i32 52, !dbg !6317
  %182 = load i32, i32* %ignore_io_errors224, align 8, !dbg !6317
  %tobool225 = icmp ne i32 %182, 0, !dbg !6314
  br i1 %tobool225, label %if.then226, label %if.end227, !dbg !6318

if.then226:                                       ; preds = %if.then223
  store i32 0, i32* %err, align 4, !dbg !6319
  br label %if.end227, !dbg !6320

if.end227:                                        ; preds = %if.then226, %if.then223
  br label %fail, !dbg !6321

if.end228:                                        ; preds = %if.then217
  br label %if.end229, !dbg !6322

if.end229:                                        ; preds = %if.end228, %if.end214
  call void @av_dict_free(%struct.AVDictionary** %options), !dbg !6323
  %183 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !6324
  %segment_type230 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %183, i32 0, i32 12, !dbg !6326
  %184 = load i32, i32* %segment_type230, align 8, !dbg !6326
  %cmp231 = icmp ne i32 %184, 1, !dbg !6327
  br i1 %cmp231, label %if.then233, label %if.end250, !dbg !6328

if.then233:                                       ; preds = %if.end229
  %185 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6329
  %oformat = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %185, i32 0, i32 2, !dbg !6332
  %186 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat, align 8, !dbg !6332
  %priv_class = getelementptr inbounds %struct.AVOutputFormat, %struct.AVOutputFormat* %186, i32 0, i32 9, !dbg !6333
  %187 = load %struct.AVClass*, %struct.AVClass** %priv_class, align 8, !dbg !6333
  %tobool234 = icmp ne %struct.AVClass* %187, null, !dbg !6329
  br i1 %tobool234, label %land.lhs.true235, label %if.end249, !dbg !6334

land.lhs.true235:                                 ; preds = %if.then233
  %188 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6335
  %priv_data236 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %188, i32 0, i32 3, !dbg !6337
  %189 = load i8*, i8** %priv_data236, align 8, !dbg !6337
  %tobool237 = icmp ne i8* %189, null, !dbg !6335
  br i1 %tobool237, label %if.then238, label %if.end249, !dbg !6338

if.then238:                                       ; preds = %land.lhs.true235
  call void @llvm.dbg.declare(metadata [21 x i8]* %period, metadata !6339, metadata !2335), !dbg !6344
  %arraydecay239 = getelementptr inbounds [21 x i8], [21 x i8]* %period, i32 0, i32 0, !dbg !6345
  %call240 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay239, i64 21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.172, i32 0, i32 0), i32 1073741822) #10, !dbg !6346
  %190 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6347
  %priv_data241 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %190, i32 0, i32 3, !dbg !6348
  %191 = load i8*, i8** %priv_data241, align 8, !dbg !6348
  %call242 = call i32 @av_opt_set(i8* %191, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.138, i32 0, i32 0), i32 0), !dbg !6349
  %192 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6350
  %priv_data243 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %192, i32 0, i32 3, !dbg !6351
  %193 = load i8*, i8** %priv_data243, align 8, !dbg !6351
  %arraydecay244 = getelementptr inbounds [21 x i8], [21 x i8]* %period, i32 0, i32 0, !dbg !6352
  %call245 = call i32 @av_opt_set(i8* %193, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.173, i32 0, i32 0), i8* %arraydecay244, i32 0), !dbg !6353
  %194 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6354
  %priv_data246 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %194, i32 0, i32 3, !dbg !6355
  %195 = load i8*, i8** %priv_data246, align 8, !dbg !6355
  %arraydecay247 = getelementptr inbounds [21 x i8], [21 x i8]* %period, i32 0, i32 0, !dbg !6356
  %call248 = call i32 @av_opt_set(i8* %195, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.174, i32 0, i32 0), i8* %arraydecay247, i32 0), !dbg !6357
  br label %if.end249, !dbg !6358

if.end249:                                        ; preds = %if.then238, %land.lhs.true235, %if.then233
  br label %if.end250, !dbg !6359

if.end250:                                        ; preds = %if.end249, %if.end229
  %196 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6360
  %vtt_basename251 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %196, i32 0, i32 27, !dbg !6362
  %197 = load i8*, i8** %vtt_basename251, align 8, !dbg !6362
  %tobool252 = icmp ne i8* %197, null, !dbg !6360
  br i1 %tobool252, label %if.then253, label %if.end259, !dbg !6363

if.then253:                                       ; preds = %if.end250
  %198 = load %struct.AVFormatContext*, %struct.AVFormatContext** %vtt_oc, align 8, !dbg !6364
  %call254 = call i32 @avformat_write_header(%struct.AVFormatContext* %198, %struct.AVDictionary** null), !dbg !6366
  store i32 %call254, i32* %err, align 4, !dbg !6367
  %199 = load i32, i32* %err, align 4, !dbg !6368
  %cmp255 = icmp slt i32 %199, 0, !dbg !6370
  br i1 %cmp255, label %if.then257, label %if.end258, !dbg !6371

if.then257:                                       ; preds = %if.then253
  %200 = load i32, i32* %err, align 4, !dbg !6372
  store i32 %200, i32* %retval, align 4, !dbg !6373
  br label %return, !dbg !6373

if.end258:                                        ; preds = %if.then253
  br label %if.end259, !dbg !6374

if.end259:                                        ; preds = %if.end258, %if.end250
  store i32 0, i32* %retval, align 4, !dbg !6375
  br label %return, !dbg !6375

fail:                                             ; preds = %if.end227, %if.end211, %if.then191, %if.then186, %if.then169, %if.then161, %if.then155
  call void @av_dict_free(%struct.AVDictionary** %options), !dbg !6376
  %201 = load i32, i32* %err, align 4, !dbg !6377
  store i32 %201, i32* %retval, align 4, !dbg !6378
  br label %return, !dbg !6378

return:                                           ; preds = %fail, %if.end259, %if.then257, %if.then196, %if.then134, %if.then126, %if.then105, %if.then82, %if.then61, %if.then52, %if.then45, %if.then40, %if.then32, %if.then20, %if.then8, %if.then2
  %202 = load i32, i32* %retval, align 4, !dbg !6379
  ret i32 %202, !dbg !6379
}

; Function Attrs: nounwind uwtable
define internal i32 @hls_window(%struct.AVFormatContext* %s, i32 %last, %struct.VariantStream* %vs) #0 !dbg !2269 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %last.addr = alloca i32, align 4
  %vs.addr = alloca %struct.VariantStream*, align 8
  %hls = alloca %struct.HLSContext*, align 8
  %en = alloca %struct.HLSSegment*, align 8
  %target_duration = alloca i32, align 4
  %ret = alloca i32, align 4
  %temp_filename = alloca [1024 x i8], align 16
  %sequence = alloca i64, align 8
  %proto = alloca i8*, align 8
  %is_file_proto = alloca i32, align 4
  %use_temp_file = alloca i32, align 4
  %key_uri = alloca i8*, align 8
  %iv_string = alloca i8*, align 8
  %options = alloca %struct.AVDictionary*, align 8
  %prog_date_time = alloca double, align 8
  %prog_date_time_p = alloca double*, align 8
  %byterange_mode = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !6380, metadata !2335), !dbg !6381
  store i32 %last, i32* %last.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %last.addr, metadata !6382, metadata !2335), !dbg !6383
  store %struct.VariantStream* %vs, %struct.VariantStream** %vs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VariantStream** %vs.addr, metadata !6384, metadata !2335), !dbg !6385
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %hls, metadata !6386, metadata !2335), !dbg !6387
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6388
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !6389
  %1 = load i8*, i8** %priv_data, align 8, !dbg !6389
  %2 = bitcast i8* %1 to %struct.HLSContext*, !dbg !6388
  store %struct.HLSContext* %2, %struct.HLSContext** %hls, align 8, !dbg !6387
  call void @llvm.dbg.declare(metadata %struct.HLSSegment** %en, metadata !6390, metadata !2335), !dbg !6391
  call void @llvm.dbg.declare(metadata i32* %target_duration, metadata !6392, metadata !2335), !dbg !6393
  store i32 0, i32* %target_duration, align 4, !dbg !6393
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6394, metadata !2335), !dbg !6395
  store i32 0, i32* %ret, align 4, !dbg !6395
  call void @llvm.dbg.declare(metadata [1024 x i8]* %temp_filename, metadata !6396, metadata !2335), !dbg !6397
  call void @llvm.dbg.declare(metadata i64* %sequence, metadata !6398, metadata !2335), !dbg !6399
  %3 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6400
  %start_sequence = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %3, i32 0, i32 1, !dbg !6401
  %4 = load i64, i64* %start_sequence, align 8, !dbg !6401
  %5 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6402
  %sequence1 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %5, i32 0, i32 2, !dbg !6403
  %6 = load i64, i64* %sequence1, align 8, !dbg !6403
  %7 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6404
  %nb_entries = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %7, i32 0, i32 19, !dbg !6405
  %8 = load i32, i32* %nb_entries, align 8, !dbg !6405
  %conv = sext i32 %8 to i64, !dbg !6404
  %sub = sub nsw i64 %6, %conv, !dbg !6406
  %cmp = icmp sgt i64 %4, %sub, !dbg !6407
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6408

cond.true:                                        ; preds = %entry
  %9 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6409
  %start_sequence3 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %9, i32 0, i32 1, !dbg !6411
  %10 = load i64, i64* %start_sequence3, align 8, !dbg !6411
  br label %cond.end, !dbg !6412

cond.false:                                       ; preds = %entry
  %11 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6413
  %sequence4 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %11, i32 0, i32 2, !dbg !6415
  %12 = load i64, i64* %sequence4, align 8, !dbg !6415
  %13 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6416
  %nb_entries5 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %13, i32 0, i32 19, !dbg !6417
  %14 = load i32, i32* %nb_entries5, align 8, !dbg !6417
  %conv6 = sext i32 %14 to i64, !dbg !6416
  %sub7 = sub nsw i64 %12, %conv6, !dbg !6418
  br label %cond.end, !dbg !6419

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %10, %cond.true ], [ %sub7, %cond.false ], !dbg !6420
  store i64 %cond, i64* %sequence, align 8, !dbg !6422
  call void @llvm.dbg.declare(metadata i8** %proto, metadata !6423, metadata !2335), !dbg !6424
  %15 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6425
  %m3u8_name = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %15, i32 0, i32 29, !dbg !6426
  %16 = load i8*, i8** %m3u8_name, align 8, !dbg !6426
  %call = call i8* @avio_find_protocol_name(i8* %16), !dbg !6427
  store i8* %call, i8** %proto, align 8, !dbg !6424
  call void @llvm.dbg.declare(metadata i32* %is_file_proto, metadata !6428, metadata !2335), !dbg !6429
  %17 = load i8*, i8** %proto, align 8, !dbg !6430
  %tobool = icmp ne i8* %17, null, !dbg !6430
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !6431

land.rhs:                                         ; preds = %cond.end
  %18 = load i8*, i8** %proto, align 8, !dbg !6432
  %call8 = call i32 @strcmp(i8* %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.136, i32 0, i32 0)) #11, !dbg !6433
  %tobool9 = icmp ne i32 %call8, 0, !dbg !6434
  %lnot = xor i1 %tobool9, true, !dbg !6434
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.end
  %19 = phi i1 [ false, %cond.end ], [ %lnot, %land.rhs ]
  %land.ext = zext i1 %19 to i32, !dbg !6435
  store i32 %land.ext, i32* %is_file_proto, align 4, !dbg !6436
  call void @llvm.dbg.declare(metadata i32* %use_temp_file, metadata !6437, metadata !2335), !dbg !6438
  %20 = load i32, i32* %is_file_proto, align 4, !dbg !6439
  %tobool10 = icmp ne i32 %20, 0, !dbg !6439
  br i1 %tobool10, label %land.rhs11, label %land.end16, !dbg !6440

land.rhs11:                                       ; preds = %land.end
  %21 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6441
  %flags = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %21, i32 0, i32 8, !dbg !6442
  %22 = load i32, i32* %flags, align 8, !dbg !6442
  %and = and i32 %22, 2048, !dbg !6443
  %tobool12 = icmp ne i32 %and, 0, !dbg !6443
  br i1 %tobool12, label %lor.end, label %lor.rhs, !dbg !6444

lor.rhs:                                          ; preds = %land.rhs11
  %23 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6445
  %pl_type = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %23, i32 0, i32 9, !dbg !6446
  %24 = load i32, i32* %pl_type, align 4, !dbg !6446
  %cmp13 = icmp eq i32 %24, 2, !dbg !6447
  %lnot15 = xor i1 %cmp13, true, !dbg !6448
  br label %lor.end, !dbg !6449

lor.end:                                          ; preds = %lor.rhs, %land.rhs11
  %25 = phi i1 [ true, %land.rhs11 ], [ %lnot15, %lor.rhs ]
  br label %land.end16

land.end16:                                       ; preds = %lor.end, %land.end
  %26 = phi i1 [ false, %land.end ], [ %25, %lor.end ]
  %land.ext17 = zext i1 %26 to i32, !dbg !6450
  store i32 %land.ext17, i32* %use_temp_file, align 4, !dbg !6451
  call void @llvm.dbg.declare(metadata i8** %key_uri, metadata !6452, metadata !2335), !dbg !6453
  store i8* null, i8** %key_uri, align 8, !dbg !6453
  call void @llvm.dbg.declare(metadata i8** %iv_string, metadata !6454, metadata !2335), !dbg !6455
  store i8* null, i8** %iv_string, align 8, !dbg !6455
  call void @llvm.dbg.declare(metadata %struct.AVDictionary** %options, metadata !6456, metadata !2335), !dbg !6457
  store %struct.AVDictionary* null, %struct.AVDictionary** %options, align 8, !dbg !6457
  call void @llvm.dbg.declare(metadata double* %prog_date_time, metadata !6458, metadata !2335), !dbg !6459
  %27 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6460
  %initial_prog_date_time = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %27, i32 0, i32 30, !dbg !6461
  %28 = load double, double* %initial_prog_date_time, align 8, !dbg !6461
  store double %28, double* %prog_date_time, align 8, !dbg !6459
  call void @llvm.dbg.declare(metadata double** %prog_date_time_p, metadata !6462, metadata !2335), !dbg !6464
  %29 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6465
  %flags18 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %29, i32 0, i32 8, !dbg !6466
  %30 = load i32, i32* %flags18, align 8, !dbg !6466
  %and19 = and i32 %30, 128, !dbg !6467
  %tobool20 = icmp ne i32 %and19, 0, !dbg !6467
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !6468

cond.true21:                                      ; preds = %land.end16
  br label %cond.end23, !dbg !6469

cond.false22:                                     ; preds = %land.end16
  br label %cond.end23, !dbg !6470

cond.end23:                                       ; preds = %cond.false22, %cond.true21
  %cond24 = phi double* [ %prog_date_time, %cond.true21 ], [ null, %cond.false22 ], !dbg !6471
  store double* %cond24, double** %prog_date_time_p, align 8, !dbg !6472
  call void @llvm.dbg.declare(metadata i32* %byterange_mode, metadata !6473, metadata !2335), !dbg !6474
  %31 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6475
  %flags25 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %31, i32 0, i32 8, !dbg !6476
  %32 = load i32, i32* %flags25, align 8, !dbg !6476
  %and26 = and i32 %32, 1, !dbg !6477
  %tobool27 = icmp ne i32 %and26, 0, !dbg !6477
  br i1 %tobool27, label %lor.end31, label %lor.rhs28, !dbg !6478

lor.rhs28:                                        ; preds = %cond.end23
  %33 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6479
  %max_seg_size = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %33, i32 0, i32 17, !dbg !6480
  %34 = load i64, i64* %max_seg_size, align 8, !dbg !6480
  %cmp29 = icmp sgt i64 %34, 0, !dbg !6481
  br label %lor.end31, !dbg !6482

lor.end31:                                        ; preds = %lor.rhs28, %cond.end23
  %35 = phi i1 [ true, %cond.end23 ], [ %cmp29, %lor.rhs28 ]
  %lor.ext = zext i1 %35 to i32, !dbg !6483
  store i32 %lor.ext, i32* %byterange_mode, align 4, !dbg !6484
  %36 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6485
  %version = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %36, i32 0, i32 43, !dbg !6486
  store i32 3, i32* %version, align 8, !dbg !6487
  %37 = load i32, i32* %byterange_mode, align 4, !dbg !6488
  %tobool32 = icmp ne i32 %37, 0, !dbg !6488
  br i1 %tobool32, label %if.then, label %if.end, !dbg !6490

if.then:                                          ; preds = %lor.end31
  %38 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6491
  %version33 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %38, i32 0, i32 43, !dbg !6493
  store i32 4, i32* %version33, align 8, !dbg !6494
  store i64 0, i64* %sequence, align 8, !dbg !6495
  br label %if.end, !dbg !6496

if.end:                                           ; preds = %if.then, %lor.end31
  %39 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6497
  %flags34 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %39, i32 0, i32 8, !dbg !6499
  %40 = load i32, i32* %flags34, align 8, !dbg !6499
  %and35 = and i32 %40, 8192, !dbg !6500
  %tobool36 = icmp ne i32 %and35, 0, !dbg !6500
  br i1 %tobool36, label %if.then37, label %if.end39, !dbg !6501

if.then37:                                        ; preds = %if.end
  %41 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6502
  %version38 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %41, i32 0, i32 43, !dbg !6504
  store i32 6, i32* %version38, align 8, !dbg !6505
  br label %if.end39, !dbg !6506

if.end39:                                         ; preds = %if.then37, %if.end
  %42 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6507
  %segment_type = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %42, i32 0, i32 12, !dbg !6509
  %43 = load i32, i32* %segment_type, align 8, !dbg !6509
  %cmp40 = icmp eq i32 %43, 1, !dbg !6510
  br i1 %cmp40, label %if.then42, label %if.end44, !dbg !6511

if.then42:                                        ; preds = %if.end39
  %44 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6512
  %version43 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %44, i32 0, i32 43, !dbg !6514
  store i32 7, i32* %version43, align 8, !dbg !6515
  br label %if.end44, !dbg !6516

if.end44:                                         ; preds = %if.then42, %if.end39
  %45 = load i32, i32* %is_file_proto, align 4, !dbg !6517
  %tobool45 = icmp ne i32 %45, 0, !dbg !6517
  br i1 %tobool45, label %if.end52, label %land.lhs.true, !dbg !6519

land.lhs.true:                                    ; preds = %if.end44
  %46 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6520
  %flags46 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %46, i32 0, i32 8, !dbg !6522
  %47 = load i32, i32* %flags46, align 8, !dbg !6522
  %and47 = and i32 %47, 2048, !dbg !6523
  %tobool48 = icmp ne i32 %and47, 0, !dbg !6523
  br i1 %tobool48, label %land.lhs.true49, label %if.end52, !dbg !6524

land.lhs.true49:                                  ; preds = %land.lhs.true
  %48 = load i32, i32* @hls_window.warned_non_file, align 4, !dbg !6525
  %inc = add i32 %48, 1, !dbg !6525
  store i32 %inc, i32* @hls_window.warned_non_file, align 4, !dbg !6525
  %tobool50 = icmp ne i32 %48, 0, !dbg !6525
  br i1 %tobool50, label %if.end52, label %if.then51, !dbg !6527

if.then51:                                        ; preds = %land.lhs.true49
  %49 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6528
  %50 = bitcast %struct.AVFormatContext* %49 to i8*, !dbg !6528
  call void (i8*, i32, i8*, ...) @av_log(i8* %50, i32 16, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.184, i32 0, i32 0)), !dbg !6529
  br label %if.end52, !dbg !6529

if.end52:                                         ; preds = %if.then51, %land.lhs.true49, %land.lhs.true, %if.end44
  %51 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6530
  %52 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6531
  call void @set_http_options(%struct.AVFormatContext* %51, %struct.AVDictionary** %options, %struct.HLSContext* %52), !dbg !6532
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %temp_filename, i32 0, i32 0, !dbg !6533
  %53 = load i32, i32* %use_temp_file, align 4, !dbg !6534
  %tobool53 = icmp ne i32 %53, 0, !dbg !6534
  %cond54 = select i1 %tobool53, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.185, i32 0, i32 0), !dbg !6534
  %54 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6535
  %m3u8_name55 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %54, i32 0, i32 29, !dbg !6536
  %55 = load i8*, i8** %m3u8_name55, align 8, !dbg !6536
  %call56 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 1024, i8* %cond54, i8* %55) #10, !dbg !6537
  %56 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6538
  %57 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6540
  %m3u8_out = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %57, i32 0, i32 49, !dbg !6541
  %arraydecay57 = getelementptr inbounds [1024 x i8], [1024 x i8]* %temp_filename, i32 0, i32 0, !dbg !6542
  %call58 = call i32 @hlsenc_io_open(%struct.AVFormatContext* %56, %struct.AVIOContext** %m3u8_out, i8* %arraydecay57, %struct.AVDictionary** %options), !dbg !6543
  store i32 %call58, i32* %ret, align 4, !dbg !6544
  %cmp59 = icmp slt i32 %call58, 0, !dbg !6545
  br i1 %cmp59, label %if.then61, label %if.end65, !dbg !6546

if.then61:                                        ; preds = %if.end52
  %58 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6547
  %ignore_io_errors = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %58, i32 0, i32 52, !dbg !6550
  %59 = load i32, i32* %ignore_io_errors, align 8, !dbg !6550
  %tobool62 = icmp ne i32 %59, 0, !dbg !6547
  br i1 %tobool62, label %if.then63, label %if.end64, !dbg !6551

if.then63:                                        ; preds = %if.then61
  store i32 0, i32* %ret, align 4, !dbg !6552
  br label %if.end64, !dbg !6553

if.end64:                                         ; preds = %if.then63, %if.then61
  br label %fail, !dbg !6554

if.end65:                                         ; preds = %if.end52
  %60 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6555
  %segments = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %60, i32 0, i32 23, !dbg !6557
  %61 = load %struct.HLSSegment*, %struct.HLSSegment** %segments, align 8, !dbg !6557
  store %struct.HLSSegment* %61, %struct.HLSSegment** %en, align 8, !dbg !6558
  br label %for.cond, !dbg !6559

for.cond:                                         ; preds = %for.inc, %if.end65
  %62 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !6560
  %tobool66 = icmp ne %struct.HLSSegment* %62, null, !dbg !6563
  br i1 %tobool66, label %for.body, label %for.end, !dbg !6563

for.body:                                         ; preds = %for.cond
  %63 = load i32, i32* %target_duration, align 4, !dbg !6564
  %conv67 = sitofp i32 %63 to double, !dbg !6564
  %64 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !6567
  %duration = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %64, i32 0, i32 2, !dbg !6568
  %65 = load double, double* %duration, align 8, !dbg !6568
  %cmp68 = fcmp ole double %conv67, %65, !dbg !6569
  br i1 %cmp68, label %if.then70, label %if.end74, !dbg !6570

if.then70:                                        ; preds = %for.body
  %66 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !6571
  %duration71 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %66, i32 0, i32 2, !dbg !6572
  %67 = load double, double* %duration71, align 8, !dbg !6572
  %call72 = call i64 @lrint(double %67) #10, !dbg !6573
  %conv73 = trunc i64 %call72 to i32, !dbg !6573
  store i32 %conv73, i32* %target_duration, align 4, !dbg !6574
  br label %if.end74, !dbg !6575

if.end74:                                         ; preds = %if.then70, %for.body
  br label %for.inc, !dbg !6576

for.inc:                                          ; preds = %if.end74
  %68 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !6577
  %next = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %68, i32 0, i32 9, !dbg !6579
  %69 = load %struct.HLSSegment*, %struct.HLSSegment** %next, align 8, !dbg !6579
  store %struct.HLSSegment* %69, %struct.HLSSegment** %en, align 8, !dbg !6580
  br label %for.cond, !dbg !6581, !llvm.loop !6582

for.end:                                          ; preds = %for.cond
  %70 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6584
  %discontinuity_set = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %70, i32 0, i32 20, !dbg !6585
  store i32 0, i32* %discontinuity_set, align 4, !dbg !6586
  %71 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6587
  %m3u8_out75 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %71, i32 0, i32 49, !dbg !6588
  %72 = load %struct.AVIOContext*, %struct.AVIOContext** %m3u8_out75, align 8, !dbg !6588
  %73 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6589
  %version76 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %73, i32 0, i32 43, !dbg !6590
  %74 = load i32, i32* %version76, align 8, !dbg !6590
  %75 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6591
  %allowcache = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %75, i32 0, i32 15, !dbg !6592
  %76 = load i32, i32* %allowcache, align 4, !dbg !6592
  %77 = load i32, i32* %target_duration, align 4, !dbg !6593
  %78 = load i64, i64* %sequence, align 8, !dbg !6594
  %79 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6595
  %pl_type77 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %79, i32 0, i32 9, !dbg !6596
  %80 = load i32, i32* %pl_type77, align 4, !dbg !6596
  call void @ff_hls_write_playlist_header(%struct.AVIOContext* %72, i32 %74, i32 %76, i32 %77, i64 %78, i32 %80), !dbg !6597
  %81 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6598
  %flags78 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %81, i32 0, i32 8, !dbg !6600
  %82 = load i32, i32* %flags78, align 8, !dbg !6600
  %and79 = and i32 %82, 8, !dbg !6601
  %tobool80 = icmp ne i32 %and79, 0, !dbg !6601
  br i1 %tobool80, label %land.lhs.true81, label %if.end93, !dbg !6602

land.lhs.true81:                                  ; preds = %for.end
  %83 = load i64, i64* %sequence, align 8, !dbg !6603
  %84 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6605
  %start_sequence82 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %84, i32 0, i32 1, !dbg !6606
  %85 = load i64, i64* %start_sequence82, align 8, !dbg !6606
  %cmp83 = icmp eq i64 %83, %85, !dbg !6607
  br i1 %cmp83, label %land.lhs.true85, label %if.end93, !dbg !6608

land.lhs.true85:                                  ; preds = %land.lhs.true81
  %86 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6609
  %discontinuity_set86 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %86, i32 0, i32 20, !dbg !6611
  %87 = load i32, i32* %discontinuity_set86, align 4, !dbg !6611
  %cmp87 = icmp eq i32 %87, 0, !dbg !6612
  br i1 %cmp87, label %if.then89, label %if.end93, !dbg !6613

if.then89:                                        ; preds = %land.lhs.true85
  %88 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6614
  %m3u8_out90 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %88, i32 0, i32 49, !dbg !6616
  %89 = load %struct.AVIOContext*, %struct.AVIOContext** %m3u8_out90, align 8, !dbg !6616
  %call91 = call i32 (%struct.AVIOContext*, i8*, ...) @avio_printf(%struct.AVIOContext* %89, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.186, i32 0, i32 0)), !dbg !6617
  %90 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6618
  %discontinuity_set92 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %90, i32 0, i32 20, !dbg !6619
  store i32 1, i32* %discontinuity_set92, align 4, !dbg !6620
  br label %if.end93, !dbg !6621

if.end93:                                         ; preds = %if.then89, %land.lhs.true85, %land.lhs.true81, %for.end
  %91 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6622
  %has_video = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %91, i32 0, i32 10, !dbg !6624
  %92 = load i32, i32* %has_video, align 8, !dbg !6624
  %tobool94 = icmp ne i32 %92, 0, !dbg !6622
  br i1 %tobool94, label %land.lhs.true95, label %if.end102, !dbg !6625

land.lhs.true95:                                  ; preds = %if.end93
  %93 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6626
  %flags96 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %93, i32 0, i32 8, !dbg !6628
  %94 = load i32, i32* %flags96, align 8, !dbg !6628
  %and97 = and i32 %94, 8192, !dbg !6629
  %tobool98 = icmp ne i32 %and97, 0, !dbg !6629
  br i1 %tobool98, label %if.then99, label %if.end102, !dbg !6630

if.then99:                                        ; preds = %land.lhs.true95
  %95 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6631
  %m3u8_out100 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %95, i32 0, i32 49, !dbg !6633
  %96 = load %struct.AVIOContext*, %struct.AVIOContext** %m3u8_out100, align 8, !dbg !6633
  %call101 = call i32 (%struct.AVIOContext*, i8*, ...) @avio_printf(%struct.AVIOContext* %96, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.187, i32 0, i32 0)), !dbg !6634
  br label %if.end102, !dbg !6635

if.end102:                                        ; preds = %if.then99, %land.lhs.true95, %if.end93
  %97 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6636
  %segments103 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %97, i32 0, i32 23, !dbg !6638
  %98 = load %struct.HLSSegment*, %struct.HLSSegment** %segments103, align 8, !dbg !6638
  store %struct.HLSSegment* %98, %struct.HLSSegment** %en, align 8, !dbg !6639
  br label %for.cond104, !dbg !6640

for.cond104:                                      ; preds = %for.inc174, %if.end102
  %99 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !6641
  %tobool105 = icmp ne %struct.HLSSegment* %99, null, !dbg !6644
  br i1 %tobool105, label %for.body106, label %for.end176, !dbg !6644

for.body106:                                      ; preds = %for.cond104
  %100 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6645
  %encrypt = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %100, i32 0, i32 23, !dbg !6648
  %101 = load i32, i32* %encrypt, align 8, !dbg !6648
  %tobool107 = icmp ne i32 %101, 0, !dbg !6645
  br i1 %tobool107, label %land.lhs.true109, label %lor.lhs.false, !dbg !6649

lor.lhs.false:                                    ; preds = %for.body106
  %102 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6650
  %key_info_file = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %102, i32 0, i32 29, !dbg !6652
  %103 = load i8*, i8** %key_info_file, align 8, !dbg !6652
  %tobool108 = icmp ne i8* %103, null, !dbg !6650
  br i1 %tobool108, label %land.lhs.true109, label %if.end141, !dbg !6653

land.lhs.true109:                                 ; preds = %lor.lhs.false, %for.body106
  %104 = load i8*, i8** %key_uri, align 8, !dbg !6654
  %tobool110 = icmp ne i8* %104, null, !dbg !6654
  br i1 %tobool110, label %lor.lhs.false111, label %if.then121, !dbg !6656

lor.lhs.false111:                                 ; preds = %land.lhs.true109
  %105 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !6657
  %key_uri112 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %105, i32 0, i32 7, !dbg !6659
  %arraydecay113 = getelementptr inbounds [1025 x i8], [1025 x i8]* %key_uri112, i32 0, i32 0, !dbg !6657
  %106 = load i8*, i8** %key_uri, align 8, !dbg !6660
  %call114 = call i32 @strcmp(i8* %arraydecay113, i8* %106) #11, !dbg !6661
  %tobool115 = icmp ne i32 %call114, 0, !dbg !6661
  br i1 %tobool115, label %if.then121, label %lor.lhs.false116, !dbg !6662

lor.lhs.false116:                                 ; preds = %lor.lhs.false111
  %107 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !6663
  %iv_string117 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %107, i32 0, i32 8, !dbg !6664
  %arraydecay118 = getelementptr inbounds [33 x i8], [33 x i8]* %iv_string117, i32 0, i32 0, !dbg !6663
  %108 = load i8*, i8** %iv_string, align 8, !dbg !6665
  %call119 = call i32 @av_strcasecmp(i8* %arraydecay118, i8* %108), !dbg !6666
  %tobool120 = icmp ne i32 %call119, 0, !dbg !6666
  br i1 %tobool120, label %if.then121, label %if.end141, !dbg !6667

if.then121:                                       ; preds = %lor.lhs.false116, %lor.lhs.false111, %land.lhs.true109
  %109 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6669
  %m3u8_out122 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %109, i32 0, i32 49, !dbg !6671
  %110 = load %struct.AVIOContext*, %struct.AVIOContext** %m3u8_out122, align 8, !dbg !6671
  %111 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !6672
  %key_uri123 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %111, i32 0, i32 7, !dbg !6673
  %arraydecay124 = getelementptr inbounds [1025 x i8], [1025 x i8]* %key_uri123, i32 0, i32 0, !dbg !6672
  %call125 = call i32 (%struct.AVIOContext*, i8*, ...) @avio_printf(%struct.AVIOContext* %110, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.188, i32 0, i32 0), i8* %arraydecay124), !dbg !6674
  %112 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !6675
  %iv_string126 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %112, i32 0, i32 8, !dbg !6677
  %arraydecay127 = getelementptr inbounds [33 x i8], [33 x i8]* %iv_string126, i32 0, i32 0, !dbg !6678
  %113 = load i8, i8* %arraydecay127, align 1, !dbg !6678
  %tobool128 = icmp ne i8 %113, 0, !dbg !6678
  br i1 %tobool128, label %if.then129, label %if.end134, !dbg !6679

if.then129:                                       ; preds = %if.then121
  %114 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6680
  %m3u8_out130 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %114, i32 0, i32 49, !dbg !6681
  %115 = load %struct.AVIOContext*, %struct.AVIOContext** %m3u8_out130, align 8, !dbg !6681
  %116 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !6682
  %iv_string131 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %116, i32 0, i32 8, !dbg !6683
  %arraydecay132 = getelementptr inbounds [33 x i8], [33 x i8]* %iv_string131, i32 0, i32 0, !dbg !6682
  %call133 = call i32 (%struct.AVIOContext*, i8*, ...) @avio_printf(%struct.AVIOContext* %115, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.189, i32 0, i32 0), i8* %arraydecay132), !dbg !6684
  br label %if.end134, !dbg !6684

if.end134:                                        ; preds = %if.then129, %if.then121
  %117 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6685
  %m3u8_out135 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %117, i32 0, i32 49, !dbg !6686
  %118 = load %struct.AVIOContext*, %struct.AVIOContext** %m3u8_out135, align 8, !dbg !6686
  %call136 = call i32 (%struct.AVIOContext*, i8*, ...) @avio_printf(%struct.AVIOContext* %118, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.190, i32 0, i32 0)), !dbg !6687
  %119 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !6688
  %key_uri137 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %119, i32 0, i32 7, !dbg !6689
  %arraydecay138 = getelementptr inbounds [1025 x i8], [1025 x i8]* %key_uri137, i32 0, i32 0, !dbg !6688
  store i8* %arraydecay138, i8** %key_uri, align 8, !dbg !6690
  %120 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !6691
  %iv_string139 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %120, i32 0, i32 8, !dbg !6692
  %arraydecay140 = getelementptr inbounds [33 x i8], [33 x i8]* %iv_string139, i32 0, i32 0, !dbg !6691
  store i8* %arraydecay140, i8** %iv_string, align 8, !dbg !6693
  br label %if.end141, !dbg !6694

if.end141:                                        ; preds = %if.end134, %lor.lhs.false116, %lor.lhs.false
  %121 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6695
  %segment_type142 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %121, i32 0, i32 12, !dbg !6697
  %122 = load i32, i32* %segment_type142, align 8, !dbg !6697
  %cmp143 = icmp eq i32 %122, 1, !dbg !6698
  br i1 %cmp143, label %land.lhs.true145, label %if.end162, !dbg !6699

land.lhs.true145:                                 ; preds = %if.end141
  %123 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !6700
  %124 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6702
  %segments146 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %124, i32 0, i32 23, !dbg !6703
  %125 = load %struct.HLSSegment*, %struct.HLSSegment** %segments146, align 8, !dbg !6703
  %cmp147 = icmp eq %struct.HLSSegment* %123, %125, !dbg !6704
  br i1 %cmp147, label %if.then149, label %if.end162, !dbg !6705

if.then149:                                       ; preds = %land.lhs.true145
  %126 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6706
  %m3u8_out150 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %126, i32 0, i32 49, !dbg !6708
  %127 = load %struct.AVIOContext*, %struct.AVIOContext** %m3u8_out150, align 8, !dbg !6708
  %128 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6709
  %flags151 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %128, i32 0, i32 8, !dbg !6710
  %129 = load i32, i32* %flags151, align 8, !dbg !6710
  %and152 = and i32 %129, 1, !dbg !6711
  %tobool153 = icmp ne i32 %and152, 0, !dbg !6711
  br i1 %tobool153, label %cond.true154, label %cond.false156, !dbg !6712

cond.true154:                                     ; preds = %if.then149
  %130 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !6713
  %filename = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %130, i32 0, i32 0, !dbg !6715
  %arraydecay155 = getelementptr inbounds [1024 x i8], [1024 x i8]* %filename, i32 0, i32 0, !dbg !6713
  br label %cond.end157, !dbg !6716

cond.false156:                                    ; preds = %if.then149
  %131 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6717
  %fmp4_init_filename = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %131, i32 0, i32 32, !dbg !6719
  %132 = load i8*, i8** %fmp4_init_filename, align 8, !dbg !6719
  br label %cond.end157, !dbg !6720

cond.end157:                                      ; preds = %cond.false156, %cond.true154
  %cond158 = phi i8* [ %arraydecay155, %cond.true154 ], [ %132, %cond.false156 ], !dbg !6721
  %133 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6723
  %flags159 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %133, i32 0, i32 8, !dbg !6724
  %134 = load i32, i32* %flags159, align 8, !dbg !6724
  %and160 = and i32 %134, 1, !dbg !6725
  %135 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6726
  %init_range_length = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %135, i32 0, i32 7, !dbg !6727
  %136 = load i32, i32* %init_range_length, align 4, !dbg !6727
  %conv161 = sext i32 %136 to i64, !dbg !6726
  call void @ff_hls_write_init_file(%struct.AVIOContext* %127, i8* %cond158, i32 %and160, i64 %conv161, i64 0), !dbg !6728
  br label %if.end162, !dbg !6729

if.end162:                                        ; preds = %cond.end157, %land.lhs.true145, %if.end141
  %137 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6730
  %m3u8_out163 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %137, i32 0, i32 49, !dbg !6731
  %138 = load %struct.AVIOContext*, %struct.AVIOContext** %m3u8_out163, align 8, !dbg !6731
  %139 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !6732
  %discont = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %139, i32 0, i32 3, !dbg !6733
  %140 = load i32, i32* %discont, align 8, !dbg !6733
  %141 = load i32, i32* %byterange_mode, align 4, !dbg !6734
  %142 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !6735
  %duration164 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %142, i32 0, i32 2, !dbg !6736
  %143 = load double, double* %duration164, align 8, !dbg !6736
  %144 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6737
  %flags165 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %144, i32 0, i32 8, !dbg !6738
  %145 = load i32, i32* %flags165, align 8, !dbg !6738
  %and166 = and i32 %145, 4, !dbg !6739
  %146 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !6740
  %size = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %146, i32 0, i32 5, !dbg !6741
  %147 = load i64, i64* %size, align 8, !dbg !6741
  %148 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !6742
  %pos = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %148, i32 0, i32 4, !dbg !6743
  %149 = load i64, i64* %pos, align 8, !dbg !6743
  %150 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6744
  %baseurl = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %150, i32 0, i32 43, !dbg !6745
  %151 = load i8*, i8** %baseurl, align 8, !dbg !6745
  %152 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !6746
  %filename167 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %152, i32 0, i32 0, !dbg !6747
  %arraydecay168 = getelementptr inbounds [1024 x i8], [1024 x i8]* %filename167, i32 0, i32 0, !dbg !6746
  %153 = load double*, double** %prog_date_time_p, align 8, !dbg !6748
  %call169 = call i32 @ff_hls_write_file_entry(%struct.AVIOContext* %138, i32 %140, i32 %141, double %143, i32 %and166, i64 %147, i64 %149, i8* %151, i8* %arraydecay168, double* %153), !dbg !6749
  store i32 %call169, i32* %ret, align 4, !dbg !6750
  %154 = load i32, i32* %ret, align 4, !dbg !6751
  %cmp170 = icmp slt i32 %154, 0, !dbg !6753
  br i1 %cmp170, label %if.then172, label %if.end173, !dbg !6754

if.then172:                                       ; preds = %if.end162
  %155 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6755
  %156 = bitcast %struct.AVFormatContext* %155 to i8*, !dbg !6755
  call void (i8*, i32, i8*, ...) @av_log(i8* %156, i32 24, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.191, i32 0, i32 0)), !dbg !6757
  br label %if.end173, !dbg !6758

if.end173:                                        ; preds = %if.then172, %if.end162
  br label %for.inc174, !dbg !6759

for.inc174:                                       ; preds = %if.end173
  %157 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !6760
  %next175 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %157, i32 0, i32 9, !dbg !6762
  %158 = load %struct.HLSSegment*, %struct.HLSSegment** %next175, align 8, !dbg !6762
  store %struct.HLSSegment* %158, %struct.HLSSegment** %en, align 8, !dbg !6763
  br label %for.cond104, !dbg !6764, !llvm.loop !6765

for.end176:                                       ; preds = %for.cond104
  %159 = load i32, i32* %last.addr, align 4, !dbg !6767
  %tobool177 = icmp ne i32 %159, 0, !dbg !6767
  br i1 %tobool177, label %land.lhs.true178, label %if.end185, !dbg !6769

land.lhs.true178:                                 ; preds = %for.end176
  %160 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6770
  %flags179 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %160, i32 0, i32 8, !dbg !6772
  %161 = load i32, i32* %flags179, align 8, !dbg !6772
  %and180 = and i32 %161, 16, !dbg !6773
  %cmp181 = icmp eq i32 %and180, 0, !dbg !6774
  br i1 %cmp181, label %if.then183, label %if.end185, !dbg !6775

if.then183:                                       ; preds = %land.lhs.true178
  %162 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6776
  %m3u8_out184 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %162, i32 0, i32 49, !dbg !6777
  %163 = load %struct.AVIOContext*, %struct.AVIOContext** %m3u8_out184, align 8, !dbg !6777
  call void @ff_hls_write_end_list(%struct.AVIOContext* %163), !dbg !6778
  br label %if.end185, !dbg !6778

if.end185:                                        ; preds = %if.then183, %land.lhs.true178, %for.end176
  %164 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6779
  %vtt_m3u8_name = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %164, i32 0, i32 28, !dbg !6781
  %165 = load i8*, i8** %vtt_m3u8_name, align 8, !dbg !6781
  %tobool186 = icmp ne i8* %165, null, !dbg !6779
  br i1 %tobool186, label %if.then187, label %if.end223, !dbg !6782

if.then187:                                       ; preds = %if.end185
  %166 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6783
  %167 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6786
  %sub_m3u8_out = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %167, i32 0, i32 50, !dbg !6787
  %168 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6788
  %vtt_m3u8_name188 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %168, i32 0, i32 28, !dbg !6789
  %169 = load i8*, i8** %vtt_m3u8_name188, align 8, !dbg !6789
  %call189 = call i32 @hlsenc_io_open(%struct.AVFormatContext* %166, %struct.AVIOContext** %sub_m3u8_out, i8* %169, %struct.AVDictionary** %options), !dbg !6790
  store i32 %call189, i32* %ret, align 4, !dbg !6791
  %cmp190 = icmp slt i32 %call189, 0, !dbg !6792
  br i1 %cmp190, label %if.then192, label %if.end197, !dbg !6793

if.then192:                                       ; preds = %if.then187
  %170 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6794
  %ignore_io_errors193 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %170, i32 0, i32 52, !dbg !6797
  %171 = load i32, i32* %ignore_io_errors193, align 8, !dbg !6797
  %tobool194 = icmp ne i32 %171, 0, !dbg !6794
  br i1 %tobool194, label %if.then195, label %if.end196, !dbg !6798

if.then195:                                       ; preds = %if.then192
  store i32 0, i32* %ret, align 4, !dbg !6799
  br label %if.end196, !dbg !6800

if.end196:                                        ; preds = %if.then195, %if.then192
  br label %fail, !dbg !6801

if.end197:                                        ; preds = %if.then187
  %172 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6802
  %sub_m3u8_out198 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %172, i32 0, i32 50, !dbg !6803
  %173 = load %struct.AVIOContext*, %struct.AVIOContext** %sub_m3u8_out198, align 8, !dbg !6803
  %174 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6804
  %version199 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %174, i32 0, i32 43, !dbg !6805
  %175 = load i32, i32* %version199, align 8, !dbg !6805
  %176 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6806
  %allowcache200 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %176, i32 0, i32 15, !dbg !6807
  %177 = load i32, i32* %allowcache200, align 4, !dbg !6807
  %178 = load i32, i32* %target_duration, align 4, !dbg !6808
  %179 = load i64, i64* %sequence, align 8, !dbg !6809
  call void @ff_hls_write_playlist_header(%struct.AVIOContext* %173, i32 %175, i32 %177, i32 %178, i64 %179, i32 0), !dbg !6810
  %180 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6811
  %segments201 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %180, i32 0, i32 23, !dbg !6813
  %181 = load %struct.HLSSegment*, %struct.HLSSegment** %segments201, align 8, !dbg !6813
  store %struct.HLSSegment* %181, %struct.HLSSegment** %en, align 8, !dbg !6814
  br label %for.cond202, !dbg !6815

for.cond202:                                      ; preds = %for.inc216, %if.end197
  %182 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !6816
  %tobool203 = icmp ne %struct.HLSSegment* %182, null, !dbg !6819
  br i1 %tobool203, label %for.body204, label %for.end218, !dbg !6819

for.body204:                                      ; preds = %for.cond202
  %183 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6820
  %sub_m3u8_out205 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %183, i32 0, i32 50, !dbg !6822
  %184 = load %struct.AVIOContext*, %struct.AVIOContext** %sub_m3u8_out205, align 8, !dbg !6822
  %185 = load i32, i32* %byterange_mode, align 4, !dbg !6823
  %186 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !6824
  %duration206 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %186, i32 0, i32 2, !dbg !6825
  %187 = load double, double* %duration206, align 8, !dbg !6825
  %188 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !6826
  %size207 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %188, i32 0, i32 5, !dbg !6827
  %189 = load i64, i64* %size207, align 8, !dbg !6827
  %190 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !6828
  %pos208 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %190, i32 0, i32 4, !dbg !6829
  %191 = load i64, i64* %pos208, align 8, !dbg !6829
  %192 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6830
  %baseurl209 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %192, i32 0, i32 43, !dbg !6831
  %193 = load i8*, i8** %baseurl209, align 8, !dbg !6831
  %194 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !6832
  %sub_filename = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %194, i32 0, i32 1, !dbg !6833
  %arraydecay210 = getelementptr inbounds [1024 x i8], [1024 x i8]* %sub_filename, i32 0, i32 0, !dbg !6832
  %call211 = call i32 @ff_hls_write_file_entry(%struct.AVIOContext* %184, i32 0, i32 %185, double %187, i32 0, i64 %189, i64 %191, i8* %193, i8* %arraydecay210, double* null), !dbg !6834
  store i32 %call211, i32* %ret, align 4, !dbg !6835
  %195 = load i32, i32* %ret, align 4, !dbg !6836
  %cmp212 = icmp slt i32 %195, 0, !dbg !6838
  br i1 %cmp212, label %if.then214, label %if.end215, !dbg !6839

if.then214:                                       ; preds = %for.body204
  %196 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6840
  %197 = bitcast %struct.AVFormatContext* %196 to i8*, !dbg !6840
  call void (i8*, i32, i8*, ...) @av_log(i8* %197, i32 24, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.191, i32 0, i32 0)), !dbg !6842
  br label %if.end215, !dbg !6843

if.end215:                                        ; preds = %if.then214, %for.body204
  br label %for.inc216, !dbg !6844

for.inc216:                                       ; preds = %if.end215
  %198 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !6845
  %next217 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %198, i32 0, i32 9, !dbg !6847
  %199 = load %struct.HLSSegment*, %struct.HLSSegment** %next217, align 8, !dbg !6847
  store %struct.HLSSegment* %199, %struct.HLSSegment** %en, align 8, !dbg !6848
  br label %for.cond202, !dbg !6849, !llvm.loop !6850

for.end218:                                       ; preds = %for.cond202
  %200 = load i32, i32* %last.addr, align 4, !dbg !6852
  %tobool219 = icmp ne i32 %200, 0, !dbg !6852
  br i1 %tobool219, label %if.then220, label %if.end222, !dbg !6854

if.then220:                                       ; preds = %for.end218
  %201 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6855
  %sub_m3u8_out221 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %201, i32 0, i32 50, !dbg !6856
  %202 = load %struct.AVIOContext*, %struct.AVIOContext** %sub_m3u8_out221, align 8, !dbg !6856
  call void @ff_hls_write_end_list(%struct.AVIOContext* %202), !dbg !6857
  br label %if.end222, !dbg !6857

if.end222:                                        ; preds = %if.then220, %for.end218
  br label %if.end223, !dbg !6858

if.end223:                                        ; preds = %if.end222, %if.end185
  br label %fail, !dbg !6859

fail:                                             ; preds = %if.end223, %if.end196, %if.end64
  call void @av_dict_free(%struct.AVDictionary** %options), !dbg !6861
  %203 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6862
  %204 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6863
  %m3u8_out224 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %204, i32 0, i32 49, !dbg !6864
  %arraydecay225 = getelementptr inbounds [1024 x i8], [1024 x i8]* %temp_filename, i32 0, i32 0, !dbg !6865
  call void @hlsenc_io_close(%struct.AVFormatContext* %203, %struct.AVIOContext** %m3u8_out224, i8* %arraydecay225), !dbg !6866
  %205 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6867
  %206 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6868
  %sub_m3u8_out226 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %206, i32 0, i32 50, !dbg !6869
  %207 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6870
  %vtt_m3u8_name227 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %207, i32 0, i32 28, !dbg !6871
  %208 = load i8*, i8** %vtt_m3u8_name227, align 8, !dbg !6871
  call void @hlsenc_io_close(%struct.AVFormatContext* %205, %struct.AVIOContext** %sub_m3u8_out226, i8* %208), !dbg !6872
  %209 = load i32, i32* %use_temp_file, align 4, !dbg !6873
  %tobool228 = icmp ne i32 %209, 0, !dbg !6873
  br i1 %tobool228, label %if.then229, label %if.end233, !dbg !6875

if.then229:                                       ; preds = %fail
  %arraydecay230 = getelementptr inbounds [1024 x i8], [1024 x i8]* %temp_filename, i32 0, i32 0, !dbg !6876
  %210 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6877
  %m3u8_name231 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %210, i32 0, i32 29, !dbg !6878
  %211 = load i8*, i8** %m3u8_name231, align 8, !dbg !6878
  %212 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6879
  %213 = bitcast %struct.AVFormatContext* %212 to i8*, !dbg !6879
  %call232 = call i32 @ff_rename(i8* %arraydecay230, i8* %211, i8* %213), !dbg !6880
  br label %if.end233, !dbg !6880

if.end233:                                        ; preds = %if.then229, %fail
  %214 = load i32, i32* %ret, align 4, !dbg !6881
  %cmp234 = icmp sge i32 %214, 0, !dbg !6883
  br i1 %cmp234, label %land.lhs.true236, label %if.end244, !dbg !6884

land.lhs.true236:                                 ; preds = %if.end233
  %215 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !6885
  %master_pl_name = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %215, i32 0, i32 46, !dbg !6887
  %216 = load i8*, i8** %master_pl_name, align 8, !dbg !6887
  %tobool237 = icmp ne i8* %216, null, !dbg !6885
  br i1 %tobool237, label %if.then238, label %if.end244, !dbg !6888

if.then238:                                       ; preds = %land.lhs.true236
  %217 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6889
  %218 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6891
  %call239 = call i32 @create_master_playlist(%struct.AVFormatContext* %217, %struct.VariantStream* %218), !dbg !6892
  %cmp240 = icmp slt i32 %call239, 0, !dbg !6893
  br i1 %cmp240, label %if.then242, label %if.end243, !dbg !6894

if.then242:                                       ; preds = %if.then238
  %219 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6895
  %220 = bitcast %struct.AVFormatContext* %219 to i8*, !dbg !6895
  call void (i8*, i32, i8*, ...) @av_log(i8* %220, i32 24, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.192, i32 0, i32 0)), !dbg !6896
  br label %if.end243, !dbg !6896

if.end243:                                        ; preds = %if.then242, %if.then238
  br label %if.end244, !dbg !6897

if.end244:                                        ; preds = %if.end243, %land.lhs.true236, %if.end233
  %221 = load i32, i32* %ret, align 4, !dbg !6899
  ret i32 %221, !dbg !6900
}

declare i32 @ff_write_chained(%struct.AVFormatContext*, i32, %struct.AVPacket*, %struct.AVFormatContext*, i32) #1

declare i64 @avio_seek(%struct.AVIOContext*, i64, i32) #1

declare i32 @ff_is_http_proto(i8*) #1

declare %struct.URLContext* @ffio_geturlcontext(%struct.AVIOContext*) #1

; Function Attrs: noreturn nounwind
declare void @abort() #5

declare i32 @ffurl_shutdown(%struct.URLContext*, i32) #1

declare i32 @av_dict_set(%struct.AVDictionary**, i8*, i8*, i32) #1

declare i32 @av_dict_set_int(%struct.AVDictionary**, i8*, i64, i32) #1

declare i32 @ff_http_do_new_request(%struct.URLContext*, i8*) #1

declare void @avio_wb32(%struct.AVIOContext*, i32) #1

declare void @avio_wl32(%struct.AVIOContext*, i32) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @ff_rename(i8* %oldpath, i8* %newpath, i8* %logctx) #6 !dbg !6901 {
entry:
  %oldpath.addr = alloca i8*, align 8
  %newpath.addr = alloca i8*, align 8
  %logctx.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  %err = alloca [64 x i8], align 16
  store i8* %oldpath, i8** %oldpath.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %oldpath.addr, metadata !6904, metadata !2335), !dbg !6905
  store i8* %newpath, i8** %newpath.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %newpath.addr, metadata !6906, metadata !2335), !dbg !6907
  store i8* %logctx, i8** %logctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %logctx.addr, metadata !6908, metadata !2335), !dbg !6909
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6910, metadata !2335), !dbg !6911
  store i32 0, i32* %ret, align 4, !dbg !6911
  %0 = load i8*, i8** %oldpath.addr, align 8, !dbg !6912
  %1 = load i8*, i8** %newpath.addr, align 8, !dbg !6914
  %call = call i32 @rename(i8* %0, i8* %1) #10, !dbg !6915
  %cmp = icmp eq i32 %call, -1, !dbg !6916
  br i1 %cmp, label %if.then, label %if.end5, !dbg !6917

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #2, !dbg !6918
  %2 = load i32, i32* %call1, align 4, !dbg !6920
  %sub = sub nsw i32 0, %2, !dbg !6918
  store i32 %sub, i32* %ret, align 4, !dbg !6921
  %3 = load i8*, i8** %logctx.addr, align 8, !dbg !6922
  %tobool = icmp ne i8* %3, null, !dbg !6922
  br i1 %tobool, label %if.then2, label %if.end, !dbg !6924

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata [64 x i8]* %err, metadata !6925, metadata !2335), !dbg !6930
  %4 = bitcast [64 x i8]* %err to i8*, !dbg !6930
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 64, i32 16, i1 false), !dbg !6930
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %err, i32 0, i32 0, !dbg !6931
  %5 = load i32, i32* %ret, align 4, !dbg !6932
  %call3 = call i8* @av_make_error_string(i8* %arraydecay, i64 64, i32 %5), !dbg !6933
  %6 = load i8*, i8** %logctx.addr, align 8, !dbg !6934
  %7 = load i8*, i8** %oldpath.addr, align 8, !dbg !6935
  %8 = load i8*, i8** %newpath.addr, align 8, !dbg !6936
  %arraydecay4 = getelementptr inbounds [64 x i8], [64 x i8]* %err, i32 0, i32 0, !dbg !6937
  call void (i8*, i32, i8*, ...) @av_log(i8* %6, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.150, i32 0, i32 0), i8* %7, i8* %8, i8* %arraydecay4), !dbg !6938
  br label %if.end, !dbg !6939

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end5, !dbg !6940

if.end5:                                          ; preds = %if.end, %entry
  %9 = load i32, i32* %ret, align 4, !dbg !6941
  ret i32 %9, !dbg !6942
}

declare void @av_freep(i8*) #1

; Function Attrs: nounwind
declare i32 @rename(i8*, i8*) #4

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #8

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @av_make_error_string(i8* %errbuf, i64 %errbuf_size, i32 %errnum) #6 !dbg !6943 {
entry:
  %errbuf.addr = alloca i8*, align 8
  %errbuf_size.addr = alloca i64, align 8
  %errnum.addr = alloca i32, align 4
  store i8* %errbuf, i8** %errbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %errbuf.addr, metadata !6947, metadata !2335), !dbg !6948
  store i64 %errbuf_size, i64* %errbuf_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %errbuf_size.addr, metadata !6949, metadata !2335), !dbg !6950
  store i32 %errnum, i32* %errnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !6951, metadata !2335), !dbg !6952
  %0 = load i32, i32* %errnum.addr, align 4, !dbg !6953
  %1 = load i8*, i8** %errbuf.addr, align 8, !dbg !6954
  %2 = load i64, i64* %errbuf_size.addr, align 8, !dbg !6955
  %call = call i32 @av_strerror(i32 %0, i8* %1, i64 %2), !dbg !6956
  %3 = load i8*, i8** %errbuf.addr, align 8, !dbg !6957
  ret i8* %3, !dbg !6958
}

declare i32 @av_strerror(i32, i8*, i64) #1

declare noalias i8* @av_malloc(i64) #1

; Function Attrs: nounwind uwtable
define internal i32 @sls_flags_filename_process(%struct.AVFormatContext* %s, %struct.HLSContext* %hls, %struct.VariantStream* %vs, %struct.HLSSegment* %en, double %duration, i64 %pos, i64 %size) #0 !dbg !6959 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %hls.addr = alloca %struct.HLSContext*, align 8
  %vs.addr = alloca %struct.VariantStream*, align 8
  %en.addr = alloca %struct.HLSSegment*, align 8
  %duration.addr = alloca double, align 8
  %pos.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %new_url = alloca i8*, align 8
  %filename = alloca i8*, align 8
  %filename23 = alloca i8*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !6962, metadata !2335), !dbg !6963
  store %struct.HLSContext* %hls, %struct.HLSContext** %hls.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %hls.addr, metadata !6964, metadata !2335), !dbg !6965
  store %struct.VariantStream* %vs, %struct.VariantStream** %vs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VariantStream** %vs.addr, metadata !6966, metadata !2335), !dbg !6967
  store %struct.HLSSegment* %en, %struct.HLSSegment** %en.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HLSSegment** %en.addr, metadata !6968, metadata !2335), !dbg !6969
  store double %duration, double* %duration.addr, align 8
  call void @llvm.dbg.declare(metadata double* %duration.addr, metadata !6970, metadata !2335), !dbg !6971
  store i64 %pos, i64* %pos.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %pos.addr, metadata !6972, metadata !2335), !dbg !6973
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6974, metadata !2335), !dbg !6975
  %0 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !6976
  %flags = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %0, i32 0, i32 8, !dbg !6978
  %1 = load i32, i32* %flags, align 8, !dbg !6978
  %and = and i32 %1, 1536, !dbg !6979
  %tobool = icmp ne i32 %and, 0, !dbg !6979
  br i1 %tobool, label %land.lhs.true, label %if.end36, !dbg !6980

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6981
  %current_segment_final_filename_fmt = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %2, i32 0, i32 31, !dbg !6982
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %current_segment_final_filename_fmt, i32 0, i32 0, !dbg !6981
  %call = call i64 @strlen(i8* %arraydecay) #11, !dbg !6983
  %tobool1 = icmp ne i64 %call, 0, !dbg !6983
  br i1 %tobool1, label %if.then, label %if.end36, !dbg !6984

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %new_url, metadata !6986, metadata !2335), !dbg !6988
  %3 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6989
  %current_segment_final_filename_fmt2 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %3, i32 0, i32 31, !dbg !6990
  %arraydecay3 = getelementptr inbounds [1024 x i8], [1024 x i8]* %current_segment_final_filename_fmt2, i32 0, i32 0, !dbg !6989
  %call4 = call noalias i8* @av_strdup(i8* %arraydecay3), !dbg !6991
  store i8* %call4, i8** %new_url, align 8, !dbg !6988
  %4 = load i8*, i8** %new_url, align 8, !dbg !6992
  %tobool5 = icmp ne i8* %4, null, !dbg !6992
  br i1 %tobool5, label %if.end, label %if.then6, !dbg !6994

if.then6:                                         ; preds = %if.then
  %5 = load %struct.HLSSegment*, %struct.HLSSegment** %en.addr, align 8, !dbg !6995
  %6 = bitcast %struct.HLSSegment* %5 to i8*, !dbg !6995
  call void @av_free(i8* %6), !dbg !6997
  store i32 -12, i32* %retval, align 4, !dbg !6998
  br label %return, !dbg !6998

if.end:                                           ; preds = %if.then
  %7 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !6999
  %avf = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %7, i32 0, i32 8, !dbg !7000
  %8 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf, align 8, !dbg !7000
  %9 = load i8*, i8** %new_url, align 8, !dbg !7001
  call void @ff_format_set_url(%struct.AVFormatContext* %8, i8* %9), !dbg !7002
  %10 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !7003
  %flags7 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %10, i32 0, i32 8, !dbg !7005
  %11 = load i32, i32* %flags7, align 8, !dbg !7005
  %and8 = and i32 %11, 1024, !dbg !7006
  %tobool9 = icmp ne i32 %and8, 0, !dbg !7006
  br i1 %tobool9, label %if.then10, label %if.end18, !dbg !7007

if.then10:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %filename, metadata !7008, metadata !2335), !dbg !7010
  store i8* null, i8** %filename, align 8, !dbg !7010
  %12 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !7011
  %avf11 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %12, i32 0, i32 8, !dbg !7013
  %13 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf11, align 8, !dbg !7013
  %url = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %13, i32 0, i32 9, !dbg !7014
  %14 = load i8*, i8** %url, align 8, !dbg !7014
  %15 = load i64, i64* %pos.addr, align 8, !dbg !7015
  %16 = load i64, i64* %size.addr, align 8, !dbg !7016
  %add = add nsw i64 %15, %16, !dbg !7017
  %call12 = call i32 @replace_int_data_in_filename(i8** %filename, i8* %14, i8 signext 115, i64 %add), !dbg !7018
  %cmp = icmp slt i32 %call12, 1, !dbg !7019
  br i1 %cmp, label %if.then13, label %if.end16, !dbg !7020

if.then13:                                        ; preds = %if.then10
  %17 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !7021
  %18 = bitcast %struct.HLSContext* %17 to i8*, !dbg !7021
  %19 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !7023
  %avf14 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %19, i32 0, i32 8, !dbg !7024
  %20 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf14, align 8, !dbg !7024
  %url15 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %20, i32 0, i32 9, !dbg !7025
  %21 = load i8*, i8** %url15, align 8, !dbg !7025
  call void (i8*, i32, i8*, ...) @av_log(i8* %18, i32 16, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @.str.152, i32 0, i32 0), i8* %21), !dbg !7026
  %22 = load i8*, i8** %filename, align 8, !dbg !7027
  call void @av_free(i8* %22), !dbg !7028
  %23 = load %struct.HLSSegment*, %struct.HLSSegment** %en.addr, align 8, !dbg !7029
  %24 = bitcast %struct.HLSSegment* %23 to i8*, !dbg !7029
  call void @av_free(i8* %24), !dbg !7030
  store i32 -22, i32* %retval, align 4, !dbg !7031
  br label %return, !dbg !7031

if.end16:                                         ; preds = %if.then10
  %25 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !7032
  %avf17 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %25, i32 0, i32 8, !dbg !7033
  %26 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf17, align 8, !dbg !7033
  %27 = load i8*, i8** %filename, align 8, !dbg !7034
  call void @ff_format_set_url(%struct.AVFormatContext* %26, i8* %27), !dbg !7035
  br label %if.end18, !dbg !7036

if.end18:                                         ; preds = %if.end16, %if.end
  %28 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !7037
  %flags19 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %28, i32 0, i32 8, !dbg !7039
  %29 = load i32, i32* %flags19, align 8, !dbg !7039
  %and20 = and i32 %29, 512, !dbg !7040
  %tobool21 = icmp ne i32 %and20, 0, !dbg !7040
  br i1 %tobool21, label %if.then22, label %if.end35, !dbg !7041

if.then22:                                        ; preds = %if.end18
  call void @llvm.dbg.declare(metadata i8** %filename23, metadata !7042, metadata !2335), !dbg !7044
  store i8* null, i8** %filename23, align 8, !dbg !7044
  %30 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !7045
  %avf24 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %30, i32 0, i32 8, !dbg !7047
  %31 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf24, align 8, !dbg !7047
  %url25 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %31, i32 0, i32 9, !dbg !7048
  %32 = load i8*, i8** %url25, align 8, !dbg !7048
  %33 = load double, double* %duration.addr, align 8, !dbg !7049
  %mul = fmul double %33, 1.000000e+06, !dbg !7050
  %call26 = call double @round(double %mul) #2, !dbg !7051
  %conv = fptosi double %call26 to i64, !dbg !7052
  %call27 = call i32 @replace_int_data_in_filename(i8** %filename23, i8* %32, i8 signext 116, i64 %conv), !dbg !7053
  %cmp28 = icmp slt i32 %call27, 1, !dbg !7054
  br i1 %cmp28, label %if.then30, label %if.end33, !dbg !7055

if.then30:                                        ; preds = %if.then22
  %34 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !7056
  %35 = bitcast %struct.HLSContext* %34 to i8*, !dbg !7056
  %36 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !7058
  %avf31 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %36, i32 0, i32 8, !dbg !7059
  %37 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf31, align 8, !dbg !7059
  %url32 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %37, i32 0, i32 9, !dbg !7060
  %38 = load i8*, i8** %url32, align 8, !dbg !7060
  call void (i8*, i32, i8*, ...) @av_log(i8* %35, i32 16, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @.str.153, i32 0, i32 0), i8* %38), !dbg !7061
  %39 = load i8*, i8** %filename23, align 8, !dbg !7062
  call void @av_free(i8* %39), !dbg !7063
  %40 = load %struct.HLSSegment*, %struct.HLSSegment** %en.addr, align 8, !dbg !7064
  %41 = bitcast %struct.HLSSegment* %40 to i8*, !dbg !7064
  call void @av_free(i8* %41), !dbg !7065
  store i32 -22, i32* %retval, align 4, !dbg !7066
  br label %return, !dbg !7066

if.end33:                                         ; preds = %if.then22
  %42 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !7067
  %avf34 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %42, i32 0, i32 8, !dbg !7068
  %43 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf34, align 8, !dbg !7068
  %44 = load i8*, i8** %filename23, align 8, !dbg !7069
  call void @ff_format_set_url(%struct.AVFormatContext* %43, i8* %44), !dbg !7070
  br label %if.end35, !dbg !7071

if.end35:                                         ; preds = %if.end33, %if.end18
  br label %if.end36, !dbg !7072

if.end36:                                         ; preds = %if.end35, %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !7073
  br label %return, !dbg !7073

return:                                           ; preds = %if.end36, %if.then30, %if.then13, %if.then6
  %45 = load i32, i32* %retval, align 4, !dbg !7074
  ret i32 %45, !dbg !7074
}

declare i8* @av_basename(i8*) #1

; Function Attrs: nounwind uwtable
define internal %struct.HLSSegment* @find_segment_by_filename(%struct.HLSSegment* %segment, i8* %filename) #0 !dbg !7075 {
entry:
  %retval = alloca %struct.HLSSegment*, align 8
  %segment.addr = alloca %struct.HLSSegment*, align 8
  %filename.addr = alloca i8*, align 8
  store %struct.HLSSegment* %segment, %struct.HLSSegment** %segment.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HLSSegment** %segment.addr, metadata !7078, metadata !2335), !dbg !7079
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !7080, metadata !2335), !dbg !7081
  br label %while.cond, !dbg !7082

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.HLSSegment*, %struct.HLSSegment** %segment.addr, align 8, !dbg !7083
  %tobool = icmp ne %struct.HLSSegment* %0, null, !dbg !7085
  br i1 %tobool, label %while.body, label %while.end, !dbg !7085

while.body:                                       ; preds = %while.cond
  %1 = load %struct.HLSSegment*, %struct.HLSSegment** %segment.addr, align 8, !dbg !7086
  %filename1 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %1, i32 0, i32 0, !dbg !7089
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %filename1, i32 0, i32 0, !dbg !7086
  %2 = load i8*, i8** %filename.addr, align 8, !dbg !7090
  %call = call i32 @av_strcasecmp(i8* %arraydecay, i8* %2), !dbg !7091
  %tobool2 = icmp ne i32 %call, 0, !dbg !7091
  br i1 %tobool2, label %if.end, label %if.then, !dbg !7092

if.then:                                          ; preds = %while.body
  %3 = load %struct.HLSSegment*, %struct.HLSSegment** %segment.addr, align 8, !dbg !7093
  store %struct.HLSSegment* %3, %struct.HLSSegment** %retval, align 8, !dbg !7094
  br label %return, !dbg !7094

if.end:                                           ; preds = %while.body
  %4 = load %struct.HLSSegment*, %struct.HLSSegment** %segment.addr, align 8, !dbg !7095
  %next = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %4, i32 0, i32 9, !dbg !7096
  %5 = load %struct.HLSSegment*, %struct.HLSSegment** %next, align 8, !dbg !7096
  store %struct.HLSSegment* %5, %struct.HLSSegment** %segment.addr, align 8, !dbg !7097
  br label %while.cond, !dbg !7098, !llvm.loop !7100

while.end:                                        ; preds = %while.cond
  store %struct.HLSSegment* null, %struct.HLSSegment** %retval, align 8, !dbg !7101
  br label %return, !dbg !7101

return:                                           ; preds = %while.end, %if.then
  %6 = load %struct.HLSSegment*, %struct.HLSSegment** %retval, align 8, !dbg !7102
  ret %struct.HLSSegment* %6, !dbg !7102
}

declare i64 @av_strlcpy(i8*, i8*, i64) #1

; Function Attrs: nounwind uwtable
define internal i32 @hls_delete_old_segments(%struct.AVFormatContext* %s, %struct.HLSContext* %hls, %struct.VariantStream* %vs) #0 !dbg !7103 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %hls.addr = alloca %struct.HLSContext*, align 8
  %vs.addr = alloca %struct.VariantStream*, align 8
  %segment = alloca %struct.HLSSegment*, align 8
  %previous_segment = alloca %struct.HLSSegment*, align 8
  %playlist_duration = alloca float, align 4
  %ret = alloca i32, align 4
  %path_size = alloca i32, align 4
  %sub_path_size = alloca i32, align 4
  %segment_cnt = alloca i32, align 4
  %dirname = alloca i8*, align 8
  %p = alloca i8*, align 8
  %sub_path = alloca i8*, align 8
  %path = alloca i8*, align 8
  %vtt_dirname = alloca i8*, align 8
  %options = alloca %struct.AVDictionary*, align 8
  %out = alloca %struct.AVIOContext*, align 8
  %proto = alloca i8*, align 8
  %r_dirname = alloca i8*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !7106, metadata !2335), !dbg !7107
  store %struct.HLSContext* %hls, %struct.HLSContext** %hls.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %hls.addr, metadata !7108, metadata !2335), !dbg !7109
  store %struct.VariantStream* %vs, %struct.VariantStream** %vs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VariantStream** %vs.addr, metadata !7110, metadata !2335), !dbg !7111
  call void @llvm.dbg.declare(metadata %struct.HLSSegment** %segment, metadata !7112, metadata !2335), !dbg !7113
  call void @llvm.dbg.declare(metadata %struct.HLSSegment** %previous_segment, metadata !7114, metadata !2335), !dbg !7115
  store %struct.HLSSegment* null, %struct.HLSSegment** %previous_segment, align 8, !dbg !7115
  call void @llvm.dbg.declare(metadata float* %playlist_duration, metadata !7116, metadata !2335), !dbg !7117
  store float 0.000000e+00, float* %playlist_duration, align 4, !dbg !7117
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7118, metadata !2335), !dbg !7119
  store i32 0, i32* %ret, align 4, !dbg !7119
  call void @llvm.dbg.declare(metadata i32* %path_size, metadata !7120, metadata !2335), !dbg !7121
  call void @llvm.dbg.declare(metadata i32* %sub_path_size, metadata !7122, metadata !2335), !dbg !7123
  call void @llvm.dbg.declare(metadata i32* %segment_cnt, metadata !7124, metadata !2335), !dbg !7125
  store i32 0, i32* %segment_cnt, align 4, !dbg !7125
  call void @llvm.dbg.declare(metadata i8** %dirname, metadata !7126, metadata !2335), !dbg !7127
  store i8* null, i8** %dirname, align 8, !dbg !7127
  call void @llvm.dbg.declare(metadata i8** %p, metadata !7128, metadata !2335), !dbg !7129
  call void @llvm.dbg.declare(metadata i8** %sub_path, metadata !7130, metadata !2335), !dbg !7131
  call void @llvm.dbg.declare(metadata i8** %path, metadata !7132, metadata !2335), !dbg !7133
  store i8* null, i8** %path, align 8, !dbg !7133
  call void @llvm.dbg.declare(metadata i8** %vtt_dirname, metadata !7134, metadata !2335), !dbg !7135
  store i8* null, i8** %vtt_dirname, align 8, !dbg !7135
  call void @llvm.dbg.declare(metadata %struct.AVDictionary** %options, metadata !7136, metadata !2335), !dbg !7137
  store %struct.AVDictionary* null, %struct.AVDictionary** %options, align 8, !dbg !7137
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %out, metadata !7138, metadata !2335), !dbg !7139
  store %struct.AVIOContext* null, %struct.AVIOContext** %out, align 8, !dbg !7139
  call void @llvm.dbg.declare(metadata i8** %proto, metadata !7140, metadata !2335), !dbg !7141
  store i8* null, i8** %proto, align 8, !dbg !7141
  %0 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !7142
  %segments = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %0, i32 0, i32 23, !dbg !7143
  %1 = load %struct.HLSSegment*, %struct.HLSSegment** %segments, align 8, !dbg !7143
  store %struct.HLSSegment* %1, %struct.HLSSegment** %segment, align 8, !dbg !7144
  br label %while.cond, !dbg !7145

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct.HLSSegment*, %struct.HLSSegment** %segment, align 8, !dbg !7146
  %tobool = icmp ne %struct.HLSSegment* %2, null, !dbg !7148
  br i1 %tobool, label %while.body, label %while.end, !dbg !7148

while.body:                                       ; preds = %while.cond
  %3 = load %struct.HLSSegment*, %struct.HLSSegment** %segment, align 8, !dbg !7149
  %duration = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %3, i32 0, i32 2, !dbg !7151
  %4 = load double, double* %duration, align 8, !dbg !7151
  %5 = load float, float* %playlist_duration, align 4, !dbg !7152
  %conv = fpext float %5 to double, !dbg !7152
  %add = fadd double %conv, %4, !dbg !7152
  %conv1 = fptrunc double %add to float, !dbg !7152
  store float %conv1, float* %playlist_duration, align 4, !dbg !7152
  %6 = load %struct.HLSSegment*, %struct.HLSSegment** %segment, align 8, !dbg !7153
  %next = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %6, i32 0, i32 9, !dbg !7154
  %7 = load %struct.HLSSegment*, %struct.HLSSegment** %next, align 8, !dbg !7154
  store %struct.HLSSegment* %7, %struct.HLSSegment** %segment, align 8, !dbg !7155
  br label %while.cond, !dbg !7156, !llvm.loop !7158

while.end:                                        ; preds = %while.cond
  %8 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !7159
  %old_segments = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %8, i32 0, i32 25, !dbg !7160
  %9 = load %struct.HLSSegment*, %struct.HLSSegment** %old_segments, align 8, !dbg !7160
  store %struct.HLSSegment* %9, %struct.HLSSegment** %segment, align 8, !dbg !7161
  store i32 0, i32* %segment_cnt, align 4, !dbg !7162
  br label %while.cond2, !dbg !7163

while.cond2:                                      ; preds = %if.end18, %while.end
  %10 = load %struct.HLSSegment*, %struct.HLSSegment** %segment, align 8, !dbg !7164
  %tobool3 = icmp ne %struct.HLSSegment* %10, null, !dbg !7165
  br i1 %tobool3, label %while.body4, label %while.end19, !dbg !7165

while.body4:                                      ; preds = %while.cond2
  %11 = load %struct.HLSSegment*, %struct.HLSSegment** %segment, align 8, !dbg !7166
  %duration5 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %11, i32 0, i32 2, !dbg !7168
  %12 = load double, double* %duration5, align 8, !dbg !7168
  %13 = load float, float* %playlist_duration, align 4, !dbg !7169
  %conv6 = fpext float %13 to double, !dbg !7169
  %sub = fsub double %conv6, %12, !dbg !7169
  %conv7 = fptrunc double %sub to float, !dbg !7169
  store float %conv7, float* %playlist_duration, align 4, !dbg !7169
  %14 = load %struct.HLSSegment*, %struct.HLSSegment** %segment, align 8, !dbg !7170
  store %struct.HLSSegment* %14, %struct.HLSSegment** %previous_segment, align 8, !dbg !7171
  %15 = load %struct.HLSSegment*, %struct.HLSSegment** %previous_segment, align 8, !dbg !7172
  %next8 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %15, i32 0, i32 9, !dbg !7173
  %16 = load %struct.HLSSegment*, %struct.HLSSegment** %next8, align 8, !dbg !7173
  store %struct.HLSSegment* %16, %struct.HLSSegment** %segment, align 8, !dbg !7174
  %17 = load i32, i32* %segment_cnt, align 4, !dbg !7175
  %inc = add nsw i32 %17, 1, !dbg !7175
  store i32 %inc, i32* %segment_cnt, align 4, !dbg !7175
  %18 = load float, float* %playlist_duration, align 4, !dbg !7176
  %conv9 = fpext float %18 to double, !dbg !7176
  %19 = load %struct.HLSSegment*, %struct.HLSSegment** %previous_segment, align 8, !dbg !7178
  %duration10 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %19, i32 0, i32 2, !dbg !7179
  %20 = load double, double* %duration10, align 8, !dbg !7179
  %sub11 = fsub double -0.000000e+00, %20, !dbg !7180
  %cmp = fcmp ole double %conv9, %sub11, !dbg !7181
  br i1 %cmp, label %if.then, label %if.end, !dbg !7182

if.then:                                          ; preds = %while.body4
  %21 = load %struct.HLSSegment*, %struct.HLSSegment** %previous_segment, align 8, !dbg !7183
  %next13 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %21, i32 0, i32 9, !dbg !7185
  store %struct.HLSSegment* null, %struct.HLSSegment** %next13, align 8, !dbg !7186
  br label %while.end19, !dbg !7187

if.end:                                           ; preds = %while.body4
  %22 = load i32, i32* %segment_cnt, align 4, !dbg !7188
  %23 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !7190
  %hls_delete_threshold = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %23, i32 0, i32 6, !dbg !7191
  %24 = load i32, i32* %hls_delete_threshold, align 8, !dbg !7191
  %cmp14 = icmp sge i32 %22, %24, !dbg !7192
  br i1 %cmp14, label %if.then16, label %if.end18, !dbg !7193

if.then16:                                        ; preds = %if.end
  %25 = load %struct.HLSSegment*, %struct.HLSSegment** %previous_segment, align 8, !dbg !7194
  %next17 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %25, i32 0, i32 9, !dbg !7196
  store %struct.HLSSegment* null, %struct.HLSSegment** %next17, align 8, !dbg !7197
  br label %while.end19, !dbg !7198

if.end18:                                         ; preds = %if.end
  br label %while.cond2, !dbg !7199, !llvm.loop !7200

while.end19:                                      ; preds = %if.then16, %if.then, %while.cond2
  %26 = load %struct.HLSSegment*, %struct.HLSSegment** %segment, align 8, !dbg !7201
  %tobool20 = icmp ne %struct.HLSSegment* %26, null, !dbg !7201
  br i1 %tobool20, label %land.lhs.true, label %if.end32, !dbg !7203

land.lhs.true:                                    ; preds = %while.end19
  %27 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !7204
  %use_localtime_mkdir = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %27, i32 0, i32 14, !dbg !7206
  %28 = load i32, i32* %use_localtime_mkdir, align 8, !dbg !7206
  %tobool21 = icmp ne i32 %28, 0, !dbg !7204
  br i1 %tobool21, label %if.end32, label %if.then22, !dbg !7207

if.then22:                                        ; preds = %land.lhs.true
  %29 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !7208
  %segment_filename = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %29, i32 0, i32 10, !dbg !7211
  %30 = load i8*, i8** %segment_filename, align 8, !dbg !7211
  %tobool23 = icmp ne i8* %30, null, !dbg !7208
  br i1 %tobool23, label %if.then24, label %if.else, !dbg !7212

if.then24:                                        ; preds = %if.then22
  %31 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !7213
  %segment_filename25 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %31, i32 0, i32 10, !dbg !7215
  %32 = load i8*, i8** %segment_filename25, align 8, !dbg !7215
  %call = call noalias i8* @av_strdup(i8* %32), !dbg !7216
  store i8* %call, i8** %dirname, align 8, !dbg !7217
  br label %if.end27, !dbg !7218

if.else:                                          ; preds = %if.then22
  %33 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !7219
  %avf = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %33, i32 0, i32 8, !dbg !7221
  %34 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf, align 8, !dbg !7221
  %url = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %34, i32 0, i32 9, !dbg !7222
  %35 = load i8*, i8** %url, align 8, !dbg !7222
  %call26 = call noalias i8* @av_strdup(i8* %35), !dbg !7223
  store i8* %call26, i8** %dirname, align 8, !dbg !7224
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.then24
  %36 = load i8*, i8** %dirname, align 8, !dbg !7225
  %tobool28 = icmp ne i8* %36, null, !dbg !7225
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !7227

if.then29:                                        ; preds = %if.end27
  store i32 -12, i32* %ret, align 4, !dbg !7228
  br label %fail, !dbg !7230

if.end30:                                         ; preds = %if.end27
  %37 = load i8*, i8** %dirname, align 8, !dbg !7231
  %call31 = call i8* @av_basename(i8* %37), !dbg !7232
  store i8* %call31, i8** %p, align 8, !dbg !7233
  %38 = load i8*, i8** %p, align 8, !dbg !7234
  store i8 0, i8* %38, align 1, !dbg !7235
  br label %if.end32, !dbg !7236

if.end32:                                         ; preds = %if.end30, %land.lhs.true, %while.end19
  br label %while.cond33, !dbg !7237

while.cond33:                                     ; preds = %if.end165, %if.end32
  %39 = load %struct.HLSSegment*, %struct.HLSSegment** %segment, align 8, !dbg !7238
  %tobool34 = icmp ne %struct.HLSSegment* %39, null, !dbg !7239
  br i1 %tobool34, label %while.body35, label %while.end167, !dbg !7239

while.body35:                                     ; preds = %while.cond33
  call void @llvm.dbg.declare(metadata i8** %r_dirname, metadata !7240, metadata !2335), !dbg !7242
  %40 = load i8*, i8** %dirname, align 8, !dbg !7243
  store i8* %40, i8** %r_dirname, align 8, !dbg !7242
  %41 = load i8*, i8** %dirname, align 8, !dbg !7244
  %tobool36 = icmp ne i8* %41, null, !dbg !7244
  br i1 %tobool36, label %land.lhs.true37, label %if.end47, !dbg !7246

land.lhs.true37:                                  ; preds = %while.body35
  %42 = load i8*, i8** %dirname, align 8, !dbg !7247
  %call38 = call i8* @av_stristr(i8* %42, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.155, i32 0, i32 0)), !dbg !7249
  %tobool39 = icmp ne i8* %call38, null, !dbg !7249
  br i1 %tobool39, label %if.then40, label %if.end47, !dbg !7250

if.then40:                                        ; preds = %land.lhs.true37
  %43 = load i8*, i8** %dirname, align 8, !dbg !7251
  %44 = load %struct.HLSSegment*, %struct.HLSSegment** %segment, align 8, !dbg !7254
  %var_stream_idx = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %44, i32 0, i32 6, !dbg !7255
  %45 = load i32, i32* %var_stream_idx, align 8, !dbg !7255
  %conv41 = zext i32 %45 to i64, !dbg !7254
  %call42 = call i32 @replace_int_data_in_filename(i8** %r_dirname, i8* %43, i8 signext 118, i64 %conv41), !dbg !7256
  %cmp43 = icmp slt i32 %call42, 1, !dbg !7257
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !7258

if.then45:                                        ; preds = %if.then40
  store i32 -22, i32* %ret, align 4, !dbg !7259
  br label %fail, !dbg !7261

if.end46:                                         ; preds = %if.then40
  %46 = load i8*, i8** %dirname, align 8, !dbg !7262
  call void @av_free(i8* %46), !dbg !7263
  %47 = load i8*, i8** %r_dirname, align 8, !dbg !7264
  store i8* %47, i8** %dirname, align 8, !dbg !7265
  br label %if.end47, !dbg !7266

if.end47:                                         ; preds = %if.end46, %land.lhs.true37, %while.body35
  %48 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !7267
  %49 = bitcast %struct.HLSContext* %48 to i8*, !dbg !7267
  %50 = load %struct.HLSSegment*, %struct.HLSSegment** %segment, align 8, !dbg !7268
  %filename = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %50, i32 0, i32 0, !dbg !7269
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %filename, i32 0, i32 0, !dbg !7268
  call void (i8*, i32, i8*, ...) @av_log(i8* %49, i32 48, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.156, i32 0, i32 0), i8* %arraydecay), !dbg !7270
  %51 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !7271
  %use_localtime_mkdir48 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %51, i32 0, i32 14, !dbg !7272
  %52 = load i32, i32* %use_localtime_mkdir48, align 8, !dbg !7272
  %tobool49 = icmp ne i32 %52, 0, !dbg !7271
  br i1 %tobool49, label %cond.true, label %cond.false, !dbg !7271

cond.true:                                        ; preds = %if.end47
  br label %cond.end, !dbg !7273

cond.false:                                       ; preds = %if.end47
  %53 = load i8*, i8** %dirname, align 8, !dbg !7275
  %call50 = call i64 @strlen(i8* %53) #11, !dbg !7277
  br label %cond.end, !dbg !7278

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %call50, %cond.false ], !dbg !7279
  %54 = load %struct.HLSSegment*, %struct.HLSSegment** %segment, align 8, !dbg !7281
  %filename51 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %54, i32 0, i32 0, !dbg !7282
  %arraydecay52 = getelementptr inbounds [1024 x i8], [1024 x i8]* %filename51, i32 0, i32 0, !dbg !7281
  %call53 = call i64 @strlen(i8* %arraydecay52) #11, !dbg !7283
  %add54 = add i64 %cond, %call53, !dbg !7284
  %add55 = add i64 %add54, 1, !dbg !7285
  %conv56 = trunc i64 %add55 to i32, !dbg !7286
  store i32 %conv56, i32* %path_size, align 4, !dbg !7287
  %55 = load i32, i32* %path_size, align 4, !dbg !7288
  %conv57 = sext i32 %55 to i64, !dbg !7288
  %call58 = call noalias i8* @av_malloc(i64 %conv57), !dbg !7289
  store i8* %call58, i8** %path, align 8, !dbg !7290
  %56 = load i8*, i8** %path, align 8, !dbg !7291
  %tobool59 = icmp ne i8* %56, null, !dbg !7291
  br i1 %tobool59, label %if.end61, label %if.then60, !dbg !7293

if.then60:                                        ; preds = %cond.end
  store i32 -12, i32* %ret, align 4, !dbg !7294
  br label %fail, !dbg !7296

if.end61:                                         ; preds = %cond.end
  %57 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !7297
  %use_localtime_mkdir62 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %57, i32 0, i32 14, !dbg !7299
  %58 = load i32, i32* %use_localtime_mkdir62, align 8, !dbg !7299
  %tobool63 = icmp ne i32 %58, 0, !dbg !7297
  br i1 %tobool63, label %if.then64, label %if.else69, !dbg !7300

if.then64:                                        ; preds = %if.end61
  %59 = load i8*, i8** %path, align 8, !dbg !7301
  %60 = load %struct.HLSSegment*, %struct.HLSSegment** %segment, align 8, !dbg !7302
  %filename65 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %60, i32 0, i32 0, !dbg !7303
  %arraydecay66 = getelementptr inbounds [1024 x i8], [1024 x i8]* %filename65, i32 0, i32 0, !dbg !7302
  %61 = load i32, i32* %path_size, align 4, !dbg !7304
  %conv67 = sext i32 %61 to i64, !dbg !7304
  %call68 = call i64 @av_strlcpy(i8* %59, i8* %arraydecay66, i64 %conv67), !dbg !7305
  br label %if.end76, !dbg !7305

if.else69:                                        ; preds = %if.end61
  %62 = load i8*, i8** %path, align 8, !dbg !7306
  %63 = load i8*, i8** %dirname, align 8, !dbg !7308
  %64 = load i32, i32* %path_size, align 4, !dbg !7309
  %conv70 = sext i32 %64 to i64, !dbg !7309
  %call71 = call i64 @av_strlcpy(i8* %62, i8* %63, i64 %conv70), !dbg !7310
  %65 = load i8*, i8** %path, align 8, !dbg !7311
  %66 = load %struct.HLSSegment*, %struct.HLSSegment** %segment, align 8, !dbg !7312
  %filename72 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %66, i32 0, i32 0, !dbg !7313
  %arraydecay73 = getelementptr inbounds [1024 x i8], [1024 x i8]* %filename72, i32 0, i32 0, !dbg !7312
  %67 = load i32, i32* %path_size, align 4, !dbg !7314
  %conv74 = sext i32 %67 to i64, !dbg !7314
  %call75 = call i64 @av_strlcat(i8* %65, i8* %arraydecay73, i64 %conv74), !dbg !7315
  br label %if.end76

if.end76:                                         ; preds = %if.else69, %if.then64
  %68 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7316
  %url77 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %68, i32 0, i32 9, !dbg !7317
  %69 = load i8*, i8** %url77, align 8, !dbg !7317
  %call78 = call i8* @avio_find_protocol_name(i8* %69), !dbg !7318
  store i8* %call78, i8** %proto, align 8, !dbg !7319
  %70 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !7320
  %method = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %70, i32 0, i32 35, !dbg !7322
  %71 = load i8*, i8** %method, align 8, !dbg !7322
  %tobool79 = icmp ne i8* %71, null, !dbg !7320
  br i1 %tobool79, label %if.then84, label %lor.lhs.false, !dbg !7323

lor.lhs.false:                                    ; preds = %if.end76
  %72 = load i8*, i8** %proto, align 8, !dbg !7324
  %tobool80 = icmp ne i8* %72, null, !dbg !7324
  br i1 %tobool80, label %land.lhs.true81, label %if.else97, !dbg !7326

land.lhs.true81:                                  ; preds = %lor.lhs.false
  %73 = load i8*, i8** %proto, align 8, !dbg !7327
  %call82 = call i32 @av_strcasecmp(i8* %73, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.157, i32 0, i32 0)), !dbg !7329
  %tobool83 = icmp ne i32 %call82, 0, !dbg !7329
  br i1 %tobool83, label %if.else97, label %if.then84, !dbg !7330

if.then84:                                        ; preds = %land.lhs.true81, %if.end76
  %call85 = call i32 @av_dict_set(%struct.AVDictionary** %options, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.158, i32 0, i32 0), i32 0), !dbg !7331
  %74 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !7333
  %avf86 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %74, i32 0, i32 8, !dbg !7335
  %75 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf86, align 8, !dbg !7335
  %io_open = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %75, i32 0, i32 69, !dbg !7336
  %76 = load i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)*, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)** %io_open, align 8, !dbg !7336
  %77 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !7337
  %avf87 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %77, i32 0, i32 8, !dbg !7338
  %78 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf87, align 8, !dbg !7338
  %79 = load i8*, i8** %path, align 8, !dbg !7339
  %call88 = call i32 %76(%struct.AVFormatContext* %78, %struct.AVIOContext** %out, i8* %79, i32 2, %struct.AVDictionary** %options), !dbg !7333
  store i32 %call88, i32* %ret, align 4, !dbg !7340
  %cmp89 = icmp slt i32 %call88, 0, !dbg !7341
  br i1 %cmp89, label %if.then91, label %if.end95, !dbg !7342

if.then91:                                        ; preds = %if.then84
  %80 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !7343
  %ignore_io_errors = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %80, i32 0, i32 52, !dbg !7346
  %81 = load i32, i32* %ignore_io_errors, align 8, !dbg !7346
  %tobool92 = icmp ne i32 %81, 0, !dbg !7343
  br i1 %tobool92, label %if.then93, label %if.end94, !dbg !7347

if.then93:                                        ; preds = %if.then91
  store i32 0, i32* %ret, align 4, !dbg !7348
  br label %if.end94, !dbg !7349

if.end94:                                         ; preds = %if.then93, %if.then91
  br label %fail, !dbg !7350

if.end95:                                         ; preds = %if.then84
  %82 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !7351
  %avf96 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %82, i32 0, i32 8, !dbg !7352
  %83 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf96, align 8, !dbg !7352
  call void @ff_format_io_close(%struct.AVFormatContext* %83, %struct.AVIOContext** %out), !dbg !7353
  br label %if.end105, !dbg !7354

if.else97:                                        ; preds = %land.lhs.true81, %lor.lhs.false
  %84 = load i8*, i8** %path, align 8, !dbg !7355
  %call98 = call i32 @unlink(i8* %84) #10, !dbg !7358
  %cmp99 = icmp slt i32 %call98, 0, !dbg !7359
  br i1 %cmp99, label %if.then101, label %if.end104, !dbg !7358

if.then101:                                       ; preds = %if.else97
  %85 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !7360
  %86 = bitcast %struct.HLSContext* %85 to i8*, !dbg !7360
  %87 = load i8*, i8** %path, align 8, !dbg !7362
  %call102 = call i32* @__errno_location() #2, !dbg !7363
  %88 = load i32, i32* %call102, align 4, !dbg !7364
  %call103 = call i8* @strerror(i32 %88) #10, !dbg !7365
  call void (i8*, i32, i8*, ...) @av_log(i8* %86, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.159, i32 0, i32 0), i8* %87, i8* %call103), !dbg !7367
  br label %if.end104, !dbg !7368

if.end104:                                        ; preds = %if.then101, %if.else97
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.end95
  %89 = load %struct.HLSSegment*, %struct.HLSSegment** %segment, align 8, !dbg !7369
  %sub_filename = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %89, i32 0, i32 1, !dbg !7371
  %arrayidx = getelementptr inbounds [1024 x i8], [1024 x i8]* %sub_filename, i64 0, i64 0, !dbg !7369
  %90 = load i8, i8* %arrayidx, align 8, !dbg !7369
  %conv106 = sext i8 %90 to i32, !dbg !7369
  %cmp107 = icmp ne i32 %conv106, 0, !dbg !7372
  br i1 %cmp107, label %if.then109, label %if.end165, !dbg !7373

if.then109:                                       ; preds = %if.end105
  %91 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !7374
  %vtt_avf = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %91, i32 0, i32 9, !dbg !7376
  %92 = load %struct.AVFormatContext*, %struct.AVFormatContext** %vtt_avf, align 8, !dbg !7376
  %url110 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %92, i32 0, i32 9, !dbg !7377
  %93 = load i8*, i8** %url110, align 8, !dbg !7377
  %call111 = call noalias i8* @av_strdup(i8* %93), !dbg !7378
  store i8* %call111, i8** %vtt_dirname, align 8, !dbg !7379
  %94 = load i8*, i8** %vtt_dirname, align 8, !dbg !7380
  %tobool112 = icmp ne i8* %94, null, !dbg !7380
  br i1 %tobool112, label %if.end114, label %if.then113, !dbg !7382

if.then113:                                       ; preds = %if.then109
  store i32 -12, i32* %ret, align 4, !dbg !7383
  br label %fail, !dbg !7385

if.end114:                                        ; preds = %if.then109
  %95 = load i8*, i8** %vtt_dirname, align 8, !dbg !7386
  %call115 = call i8* @av_basename(i8* %95), !dbg !7387
  store i8* %call115, i8** %p, align 8, !dbg !7388
  %96 = load i8*, i8** %p, align 8, !dbg !7389
  store i8 0, i8* %96, align 1, !dbg !7390
  %97 = load %struct.HLSSegment*, %struct.HLSSegment** %segment, align 8, !dbg !7391
  %sub_filename116 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %97, i32 0, i32 1, !dbg !7392
  %arraydecay117 = getelementptr inbounds [1024 x i8], [1024 x i8]* %sub_filename116, i32 0, i32 0, !dbg !7391
  %call118 = call i64 @strlen(i8* %arraydecay117) #11, !dbg !7393
  %add119 = add i64 %call118, 1, !dbg !7394
  %98 = load i8*, i8** %vtt_dirname, align 8, !dbg !7395
  %call120 = call i64 @strlen(i8* %98) #11, !dbg !7396
  %add121 = add i64 %add119, %call120, !dbg !7398
  %conv122 = trunc i64 %add121 to i32, !dbg !7393
  store i32 %conv122, i32* %sub_path_size, align 4, !dbg !7399
  %99 = load i32, i32* %sub_path_size, align 4, !dbg !7400
  %conv123 = sext i32 %99 to i64, !dbg !7400
  %call124 = call noalias i8* @av_malloc(i64 %conv123), !dbg !7401
  store i8* %call124, i8** %sub_path, align 8, !dbg !7402
  %100 = load i8*, i8** %sub_path, align 8, !dbg !7403
  %tobool125 = icmp ne i8* %100, null, !dbg !7403
  br i1 %tobool125, label %if.end127, label %if.then126, !dbg !7405

if.then126:                                       ; preds = %if.end114
  store i32 -12, i32* %ret, align 4, !dbg !7406
  br label %fail, !dbg !7408

if.end127:                                        ; preds = %if.end114
  %101 = load i8*, i8** %sub_path, align 8, !dbg !7409
  %102 = load i8*, i8** %vtt_dirname, align 8, !dbg !7410
  %103 = load i32, i32* %sub_path_size, align 4, !dbg !7411
  %conv128 = sext i32 %103 to i64, !dbg !7411
  %call129 = call i64 @av_strlcpy(i8* %101, i8* %102, i64 %conv128), !dbg !7412
  %104 = load i8*, i8** %sub_path, align 8, !dbg !7413
  %105 = load %struct.HLSSegment*, %struct.HLSSegment** %segment, align 8, !dbg !7414
  %sub_filename130 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %105, i32 0, i32 1, !dbg !7415
  %arraydecay131 = getelementptr inbounds [1024 x i8], [1024 x i8]* %sub_filename130, i32 0, i32 0, !dbg !7414
  %106 = load i32, i32* %sub_path_size, align 4, !dbg !7416
  %conv132 = sext i32 %106 to i64, !dbg !7416
  %call133 = call i64 @av_strlcat(i8* %104, i8* %arraydecay131, i64 %conv132), !dbg !7417
  %107 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !7418
  %method134 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %107, i32 0, i32 35, !dbg !7420
  %108 = load i8*, i8** %method134, align 8, !dbg !7420
  %tobool135 = icmp ne i8* %108, null, !dbg !7418
  br i1 %tobool135, label %if.then141, label %lor.lhs.false136, !dbg !7421

lor.lhs.false136:                                 ; preds = %if.end127
  %109 = load i8*, i8** %proto, align 8, !dbg !7422
  %tobool137 = icmp ne i8* %109, null, !dbg !7422
  br i1 %tobool137, label %land.lhs.true138, label %if.else156, !dbg !7424

land.lhs.true138:                                 ; preds = %lor.lhs.false136
  %110 = load i8*, i8** %proto, align 8, !dbg !7425
  %call139 = call i32 @av_strcasecmp(i8* %110, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.157, i32 0, i32 0)), !dbg !7427
  %tobool140 = icmp ne i32 %call139, 0, !dbg !7427
  br i1 %tobool140, label %if.else156, label %if.then141, !dbg !7428

if.then141:                                       ; preds = %land.lhs.true138, %if.end127
  %call142 = call i32 @av_dict_set(%struct.AVDictionary** %options, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.158, i32 0, i32 0), i32 0), !dbg !7429
  %111 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !7431
  %vtt_avf143 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %111, i32 0, i32 9, !dbg !7433
  %112 = load %struct.AVFormatContext*, %struct.AVFormatContext** %vtt_avf143, align 8, !dbg !7433
  %io_open144 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %112, i32 0, i32 69, !dbg !7434
  %113 = load i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)*, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)** %io_open144, align 8, !dbg !7434
  %114 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !7435
  %vtt_avf145 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %114, i32 0, i32 9, !dbg !7436
  %115 = load %struct.AVFormatContext*, %struct.AVFormatContext** %vtt_avf145, align 8, !dbg !7436
  %116 = load i8*, i8** %sub_path, align 8, !dbg !7437
  %call146 = call i32 %113(%struct.AVFormatContext* %115, %struct.AVIOContext** %out, i8* %116, i32 2, %struct.AVDictionary** %options), !dbg !7431
  store i32 %call146, i32* %ret, align 4, !dbg !7438
  %cmp147 = icmp slt i32 %call146, 0, !dbg !7439
  br i1 %cmp147, label %if.then149, label %if.end154, !dbg !7440

if.then149:                                       ; preds = %if.then141
  %117 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !7441
  %ignore_io_errors150 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %117, i32 0, i32 52, !dbg !7444
  %118 = load i32, i32* %ignore_io_errors150, align 8, !dbg !7444
  %tobool151 = icmp ne i32 %118, 0, !dbg !7441
  br i1 %tobool151, label %if.then152, label %if.end153, !dbg !7445

if.then152:                                       ; preds = %if.then149
  store i32 0, i32* %ret, align 4, !dbg !7446
  br label %if.end153, !dbg !7447

if.end153:                                        ; preds = %if.then152, %if.then149
  %119 = load i8*, i8** %sub_path, align 8, !dbg !7448
  call void @av_free(i8* %119), !dbg !7449
  br label %fail, !dbg !7450

if.end154:                                        ; preds = %if.then141
  %120 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !7451
  %vtt_avf155 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %120, i32 0, i32 9, !dbg !7452
  %121 = load %struct.AVFormatContext*, %struct.AVFormatContext** %vtt_avf155, align 8, !dbg !7452
  call void @ff_format_io_close(%struct.AVFormatContext* %121, %struct.AVIOContext** %out), !dbg !7453
  br label %if.end164, !dbg !7454

if.else156:                                       ; preds = %land.lhs.true138, %lor.lhs.false136
  %122 = load i8*, i8** %sub_path, align 8, !dbg !7455
  %call157 = call i32 @unlink(i8* %122) #10, !dbg !7458
  %cmp158 = icmp slt i32 %call157, 0, !dbg !7459
  br i1 %cmp158, label %if.then160, label %if.end163, !dbg !7458

if.then160:                                       ; preds = %if.else156
  %123 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !7460
  %124 = bitcast %struct.HLSContext* %123 to i8*, !dbg !7460
  %125 = load i8*, i8** %sub_path, align 8, !dbg !7462
  %call161 = call i32* @__errno_location() #2, !dbg !7463
  %126 = load i32, i32* %call161, align 4, !dbg !7464
  %call162 = call i8* @strerror(i32 %126) #10, !dbg !7465
  call void (i8*, i32, i8*, ...) @av_log(i8* %124, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.159, i32 0, i32 0), i8* %125, i8* %call162), !dbg !7467
  br label %if.end163, !dbg !7468

if.end163:                                        ; preds = %if.then160, %if.else156
  br label %if.end164

if.end164:                                        ; preds = %if.end163, %if.end154
  %127 = load i8*, i8** %sub_path, align 8, !dbg !7469
  call void @av_free(i8* %127), !dbg !7470
  br label %if.end165, !dbg !7471

if.end165:                                        ; preds = %if.end164, %if.end105
  %128 = bitcast i8** %path to i8*, !dbg !7472
  call void @av_freep(i8* %128), !dbg !7473
  %129 = load %struct.HLSSegment*, %struct.HLSSegment** %segment, align 8, !dbg !7474
  store %struct.HLSSegment* %129, %struct.HLSSegment** %previous_segment, align 8, !dbg !7475
  %130 = load %struct.HLSSegment*, %struct.HLSSegment** %previous_segment, align 8, !dbg !7476
  %next166 = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %130, i32 0, i32 9, !dbg !7477
  %131 = load %struct.HLSSegment*, %struct.HLSSegment** %next166, align 8, !dbg !7477
  store %struct.HLSSegment* %131, %struct.HLSSegment** %segment, align 8, !dbg !7478
  %132 = load %struct.HLSSegment*, %struct.HLSSegment** %previous_segment, align 8, !dbg !7479
  %133 = bitcast %struct.HLSSegment* %132 to i8*, !dbg !7479
  call void @av_free(i8* %133), !dbg !7480
  br label %while.cond33, !dbg !7481, !llvm.loop !7482

while.end167:                                     ; preds = %while.cond33
  br label %fail, !dbg !7483

fail:                                             ; preds = %while.end167, %if.end153, %if.then126, %if.then113, %if.end94, %if.then60, %if.then45, %if.then29
  %134 = load i8*, i8** %path, align 8, !dbg !7485
  call void @av_free(i8* %134), !dbg !7486
  %135 = load i8*, i8** %dirname, align 8, !dbg !7487
  call void @av_free(i8* %135), !dbg !7488
  %136 = load i8*, i8** %vtt_dirname, align 8, !dbg !7489
  call void @av_free(i8* %136), !dbg !7490
  %137 = load i32, i32* %ret, align 4, !dbg !7491
  ret i32 %137, !dbg !7492
}

declare void @ff_format_set_url(%struct.AVFormatContext*, i8*) #1

; Function Attrs: nounwind uwtable
define internal i32 @replace_int_data_in_filename(i8** %s, i8* %filename, i8 signext %placeholder, i64 %number) #0 !dbg !7493 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca i8**, align 8
  %filename.addr = alloca i8*, align 8
  %placeholder.addr = alloca i8, align 1
  %number.addr = alloca i64, align 8
  %p = alloca i8*, align 8
  %new_filename = alloca i8*, align 8
  %c = alloca i8, align 1
  %nd = alloca i32, align 4
  %addchar_count = alloca i32, align 4
  %found_count = alloca i32, align 4
  %buf = alloca %struct.AVBPrint, align 8
  store i8** %s, i8*** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %s.addr, metadata !7497, metadata !2335), !dbg !7498
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !7499, metadata !2335), !dbg !7500
  store i8 %placeholder, i8* %placeholder.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %placeholder.addr, metadata !7501, metadata !2335), !dbg !7502
  store i64 %number, i64* %number.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number.addr, metadata !7503, metadata !2335), !dbg !7504
  call void @llvm.dbg.declare(metadata i8** %p, metadata !7505, metadata !2335), !dbg !7506
  call void @llvm.dbg.declare(metadata i8** %new_filename, metadata !7507, metadata !2335), !dbg !7508
  call void @llvm.dbg.declare(metadata i8* %c, metadata !7509, metadata !2335), !dbg !7510
  call void @llvm.dbg.declare(metadata i32* %nd, metadata !7511, metadata !2335), !dbg !7512
  call void @llvm.dbg.declare(metadata i32* %addchar_count, metadata !7513, metadata !2335), !dbg !7514
  call void @llvm.dbg.declare(metadata i32* %found_count, metadata !7515, metadata !2335), !dbg !7516
  store i32 0, i32* %found_count, align 4, !dbg !7516
  call void @llvm.dbg.declare(metadata %struct.AVBPrint* %buf, metadata !7517, metadata !2335), !dbg !7534
  call void @av_bprint_init(%struct.AVBPrint* %buf, i32 0, i32 -1), !dbg !7535
  %0 = load i8*, i8** %filename.addr, align 8, !dbg !7536
  store i8* %0, i8** %p, align 8, !dbg !7537
  br label %for.cond, !dbg !7538

for.cond:                                         ; preds = %if.end45, %entry
  %1 = load i8*, i8** %p, align 8, !dbg !7539
  %2 = load i8, i8* %1, align 1, !dbg !7543
  store i8 %2, i8* %c, align 1, !dbg !7544
  %3 = load i8, i8* %c, align 1, !dbg !7545
  %conv = sext i8 %3 to i32, !dbg !7545
  %cmp = icmp eq i32 %conv, 0, !dbg !7547
  br i1 %cmp, label %if.then, label %if.end, !dbg !7548

if.then:                                          ; preds = %for.cond
  br label %for.end, !dbg !7549

if.end:                                           ; preds = %for.cond
  %4 = load i8, i8* %c, align 1, !dbg !7550
  %conv2 = sext i8 %4 to i32, !dbg !7550
  %cmp3 = icmp eq i32 %conv2, 37, !dbg !7552
  br i1 %cmp3, label %land.lhs.true, label %if.else, !dbg !7553

land.lhs.true:                                    ; preds = %if.end
  %5 = load i8*, i8** %p, align 8, !dbg !7554
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 1, !dbg !7556
  %6 = load i8, i8* %add.ptr, align 1, !dbg !7557
  %conv5 = sext i8 %6 to i32, !dbg !7557
  %cmp6 = icmp eq i32 %conv5, 37, !dbg !7558
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !7559

if.then8:                                         ; preds = %land.lhs.true
  store i32 2, i32* %addchar_count, align 4, !dbg !7560
  br label %if.end45, !dbg !7561

if.else:                                          ; preds = %land.lhs.true, %if.end
  %7 = load i8, i8* %c, align 1, !dbg !7562
  %conv9 = sext i8 %7 to i32, !dbg !7562
  %cmp10 = icmp eq i32 %conv9, 37, !dbg !7564
  br i1 %cmp10, label %land.lhs.true12, label %if.else43, !dbg !7565

land.lhs.true12:                                  ; preds = %if.else
  %8 = load i8*, i8** %p, align 8, !dbg !7566
  %add.ptr13 = getelementptr inbounds i8, i8* %8, i64 1, !dbg !7568
  %9 = load i8, i8* %add.ptr13, align 1, !dbg !7569
  %conv14 = sext i8 %9 to i32, !dbg !7569
  %call = call i32 @av_isdigit(i32 %conv14) #2, !dbg !7570
  %tobool = icmp ne i32 %call, 0, !dbg !7570
  br i1 %tobool, label %if.then20, label %lor.lhs.false, !dbg !7571

lor.lhs.false:                                    ; preds = %land.lhs.true12
  %10 = load i8*, i8** %p, align 8, !dbg !7572
  %add.ptr15 = getelementptr inbounds i8, i8* %10, i64 1, !dbg !7574
  %11 = load i8, i8* %add.ptr15, align 1, !dbg !7575
  %conv16 = sext i8 %11 to i32, !dbg !7575
  %12 = load i8, i8* %placeholder.addr, align 1, !dbg !7576
  %conv17 = sext i8 %12 to i32, !dbg !7576
  %cmp18 = icmp eq i32 %conv16, %conv17, !dbg !7577
  br i1 %cmp18, label %if.then20, label %if.else43, !dbg !7578

if.then20:                                        ; preds = %lor.lhs.false, %land.lhs.true12
  store i32 0, i32* %nd, align 4, !dbg !7579
  store i32 1, i32* %addchar_count, align 4, !dbg !7581
  br label %while.cond, !dbg !7582

while.cond:                                       ; preds = %while.body, %if.then20
  %13 = load i8*, i8** %p, align 8, !dbg !7583
  %14 = load i32, i32* %addchar_count, align 4, !dbg !7585
  %idx.ext = sext i32 %14 to i64, !dbg !7586
  %add.ptr21 = getelementptr inbounds i8, i8* %13, i64 %idx.ext, !dbg !7586
  %15 = load i8, i8* %add.ptr21, align 1, !dbg !7587
  %conv22 = sext i8 %15 to i32, !dbg !7587
  %call23 = call i32 @av_isdigit(i32 %conv22) #2, !dbg !7588
  %tobool24 = icmp ne i32 %call23, 0, !dbg !7589
  br i1 %tobool24, label %while.body, label %while.end, !dbg !7589

while.body:                                       ; preds = %while.cond
  %16 = load i32, i32* %nd, align 4, !dbg !7590
  %mul = mul nsw i32 %16, 10, !dbg !7592
  %17 = load i8*, i8** %p, align 8, !dbg !7593
  %18 = load i32, i32* %addchar_count, align 4, !dbg !7594
  %idx.ext25 = sext i32 %18 to i64, !dbg !7595
  %add.ptr26 = getelementptr inbounds i8, i8* %17, i64 %idx.ext25, !dbg !7595
  %19 = load i8, i8* %add.ptr26, align 1, !dbg !7596
  %conv27 = sext i8 %19 to i32, !dbg !7596
  %add = add nsw i32 %mul, %conv27, !dbg !7597
  %sub = sub nsw i32 %add, 48, !dbg !7598
  store i32 %sub, i32* %nd, align 4, !dbg !7599
  %20 = load i32, i32* %addchar_count, align 4, !dbg !7600
  %inc = add nsw i32 %20, 1, !dbg !7600
  store i32 %inc, i32* %addchar_count, align 4, !dbg !7600
  br label %while.cond, !dbg !7601, !llvm.loop !7603

while.end:                                        ; preds = %while.cond
  %21 = load i8*, i8** %p, align 8, !dbg !7604
  %22 = load i32, i32* %addchar_count, align 4, !dbg !7606
  %idx.ext28 = sext i32 %22 to i64, !dbg !7607
  %add.ptr29 = getelementptr inbounds i8, i8* %21, i64 %idx.ext28, !dbg !7607
  %23 = load i8, i8* %add.ptr29, align 1, !dbg !7608
  %conv30 = sext i8 %23 to i32, !dbg !7608
  %24 = load i8, i8* %placeholder.addr, align 1, !dbg !7609
  %conv31 = sext i8 %24 to i32, !dbg !7609
  %cmp32 = icmp eq i32 %conv30, %conv31, !dbg !7610
  br i1 %cmp32, label %if.then34, label %if.end42, !dbg !7611

if.then34:                                        ; preds = %while.end
  %25 = load i64, i64* %number.addr, align 8, !dbg !7612
  %cmp35 = icmp slt i64 %25, 0, !dbg !7614
  br i1 %cmp35, label %cond.true, label %cond.false, !dbg !7615

cond.true:                                        ; preds = %if.then34
  %26 = load i32, i32* %nd, align 4, !dbg !7616
  br label %cond.end, !dbg !7618

cond.false:                                       ; preds = %if.then34
  %27 = load i32, i32* %nd, align 4, !dbg !7619
  %inc37 = add nsw i32 %27, 1, !dbg !7619
  store i32 %inc37, i32* %nd, align 4, !dbg !7619
  br label %cond.end, !dbg !7621

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %26, %cond.true ], [ %27, %cond.false ], !dbg !7622
  %28 = load i64, i64* %number.addr, align 8, !dbg !7624
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %buf, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.154, i32 0, i32 0), i32 %cond, i64 %28), !dbg !7625
  %29 = load i32, i32* %addchar_count, align 4, !dbg !7626
  %add38 = add nsw i32 %29, 1, !dbg !7627
  %30 = load i8*, i8** %p, align 8, !dbg !7628
  %idx.ext39 = sext i32 %add38 to i64, !dbg !7628
  %add.ptr40 = getelementptr inbounds i8, i8* %30, i64 %idx.ext39, !dbg !7628
  store i8* %add.ptr40, i8** %p, align 8, !dbg !7628
  store i32 0, i32* %addchar_count, align 4, !dbg !7629
  %31 = load i32, i32* %found_count, align 4, !dbg !7630
  %inc41 = add nsw i32 %31, 1, !dbg !7630
  store i32 %inc41, i32* %found_count, align 4, !dbg !7630
  br label %if.end42, !dbg !7631

if.end42:                                         ; preds = %cond.end, %while.end
  br label %if.end44, !dbg !7632

if.else43:                                        ; preds = %lor.lhs.false, %if.else
  store i32 1, i32* %addchar_count, align 4, !dbg !7633
  br label %if.end44

if.end44:                                         ; preds = %if.else43, %if.end42
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.then8
  %32 = load i8*, i8** %p, align 8, !dbg !7634
  %33 = load i32, i32* %addchar_count, align 4, !dbg !7635
  call void @av_bprint_append_data(%struct.AVBPrint* %buf, i8* %32, i32 %33), !dbg !7636
  %34 = load i32, i32* %addchar_count, align 4, !dbg !7637
  %35 = load i8*, i8** %p, align 8, !dbg !7638
  %idx.ext46 = sext i32 %34 to i64, !dbg !7638
  %add.ptr47 = getelementptr inbounds i8, i8* %35, i64 %idx.ext46, !dbg !7638
  store i8* %add.ptr47, i8** %p, align 8, !dbg !7638
  br label %for.cond, !dbg !7639, !llvm.loop !7641

for.end:                                          ; preds = %if.then
  %call48 = call i32 @av_bprint_is_complete(%struct.AVBPrint* %buf), !dbg !7642
  %tobool49 = icmp ne i32 %call48, 0, !dbg !7642
  br i1 %tobool49, label %if.end52, label %if.then50, !dbg !7644

if.then50:                                        ; preds = %for.end
  %call51 = call i32 @av_bprint_finalize(%struct.AVBPrint* %buf, i8** null), !dbg !7645
  store i32 -1, i32* %retval, align 4, !dbg !7647
  br label %return, !dbg !7647

if.end52:                                         ; preds = %for.end
  %call53 = call i32 @av_bprint_finalize(%struct.AVBPrint* %buf, i8** %new_filename), !dbg !7648
  %cmp54 = icmp slt i32 %call53, 0, !dbg !7650
  br i1 %cmp54, label %if.then58, label %lor.lhs.false56, !dbg !7651

lor.lhs.false56:                                  ; preds = %if.end52
  %36 = load i8*, i8** %new_filename, align 8, !dbg !7652
  %tobool57 = icmp ne i8* %36, null, !dbg !7652
  br i1 %tobool57, label %if.end59, label %if.then58, !dbg !7654

if.then58:                                        ; preds = %lor.lhs.false56, %if.end52
  store i32 -1, i32* %retval, align 4, !dbg !7655
  br label %return, !dbg !7655

if.end59:                                         ; preds = %lor.lhs.false56
  %37 = load i8*, i8** %new_filename, align 8, !dbg !7656
  %38 = load i8**, i8*** %s.addr, align 8, !dbg !7657
  store i8* %37, i8** %38, align 8, !dbg !7658
  %39 = load i32, i32* %found_count, align 4, !dbg !7659
  store i32 %39, i32* %retval, align 4, !dbg !7660
  br label %return, !dbg !7660

return:                                           ; preds = %if.end59, %if.then58, %if.then50
  %40 = load i32, i32* %retval, align 4, !dbg !7661
  ret i32 %40, !dbg !7661
}

; Function Attrs: nounwind readnone
declare double @round(double) #7

declare void @av_bprint_init(%struct.AVBPrint*, i32, i32) #1

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i32 @av_isdigit(i32 %c) #9 !dbg !7662 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !7666, metadata !2335), !dbg !7667
  %0 = load i32, i32* %c.addr, align 4, !dbg !7668
  %cmp = icmp sge i32 %0, 48, !dbg !7669
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7670

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !7671
  %cmp1 = icmp sle i32 %1, 57, !dbg !7673
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ]
  %land.ext = zext i1 %2 to i32, !dbg !7674
  ret i32 %land.ext, !dbg !7676
}

declare void @av_bprintf(%struct.AVBPrint*, i8*, ...) #1

declare void @av_bprint_append_data(%struct.AVBPrint*, i8*, i32) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @av_bprint_is_complete(%struct.AVBPrint* %buf) #6 !dbg !7677 {
entry:
  %buf.addr = alloca %struct.AVBPrint*, align 8
  store %struct.AVBPrint* %buf, %struct.AVBPrint** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVBPrint** %buf.addr, metadata !7682, metadata !2335), !dbg !7683
  %0 = load %struct.AVBPrint*, %struct.AVBPrint** %buf.addr, align 8, !dbg !7684
  %len = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i32 0, i32 1, !dbg !7685
  %1 = load i32, i32* %len, align 8, !dbg !7685
  %2 = load %struct.AVBPrint*, %struct.AVBPrint** %buf.addr, align 8, !dbg !7686
  %size = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %2, i32 0, i32 2, !dbg !7687
  %3 = load i32, i32* %size, align 4, !dbg !7687
  %cmp = icmp ult i32 %1, %3, !dbg !7688
  %conv = zext i1 %cmp to i32, !dbg !7688
  ret i32 %conv, !dbg !7689
}

declare i32 @av_bprint_finalize(%struct.AVBPrint*, i8**) #1

declare i64 @av_strlcat(i8*, i8*, i64) #1

; Function Attrs: nounwind
declare i32 @unlink(i8*) #4

; Function Attrs: nounwind
declare i8* @strerror(i32) #4

declare noalias i8* @av_mallocz(i64) #1

; Function Attrs: nounwind
declare i64 @time(i64*) #4

; Function Attrs: nounwind
declare %struct.tm* @localtime_r(i64*, %struct.tm*) #4

; Function Attrs: nounwind
declare i64 @strftime(i8*, i64, i8*, %struct.tm*) #4

; Function Attrs: nounwind uwtable
define internal i32 @sls_flag_use_localtime_filename(%struct.AVFormatContext* %oc, %struct.HLSContext* %c, %struct.VariantStream* %vs) #0 !dbg !7690 {
entry:
  %retval = alloca i32, align 4
  %oc.addr = alloca %struct.AVFormatContext*, align 8
  %c.addr = alloca %struct.HLSContext*, align 8
  %vs.addr = alloca %struct.VariantStream*, align 8
  %filename = alloca i8*, align 8
  %filename18 = alloca i8*, align 8
  %filename31 = alloca i8*, align 8
  store %struct.AVFormatContext* %oc, %struct.AVFormatContext** %oc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %oc.addr, metadata !7691, metadata !2335), !dbg !7692
  store %struct.HLSContext* %c, %struct.HLSContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %c.addr, metadata !7693, metadata !2335), !dbg !7694
  store %struct.VariantStream* %vs, %struct.VariantStream** %vs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VariantStream** %vs.addr, metadata !7695, metadata !2335), !dbg !7696
  %0 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !7697
  %flags = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %0, i32 0, i32 8, !dbg !7699
  %1 = load i32, i32* %flags, align 8, !dbg !7699
  %and = and i32 %1, 256, !dbg !7700
  %tobool = icmp ne i32 %and, 0, !dbg !7700
  br i1 %tobool, label %if.then, label %if.end7, !dbg !7701

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %filename, metadata !7702, metadata !2335), !dbg !7704
  store i8* null, i8** %filename, align 8, !dbg !7704
  %2 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !7705
  %url = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %2, i32 0, i32 9, !dbg !7707
  %3 = load i8*, i8** %url, align 8, !dbg !7707
  %4 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !7708
  %wrap = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %4, i32 0, i32 7, !dbg !7709
  %5 = load i32, i32* %wrap, align 4, !dbg !7709
  %tobool1 = icmp ne i32 %5, 0, !dbg !7708
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !7708

cond.true:                                        ; preds = %if.then
  %6 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !7710
  %sequence = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %6, i32 0, i32 2, !dbg !7712
  %7 = load i64, i64* %sequence, align 8, !dbg !7712
  %8 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !7713
  %wrap2 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %8, i32 0, i32 7, !dbg !7714
  %9 = load i32, i32* %wrap2, align 4, !dbg !7714
  %conv = sext i32 %9 to i64, !dbg !7713
  %rem = srem i64 %7, %conv, !dbg !7715
  br label %cond.end, !dbg !7716

cond.false:                                       ; preds = %if.then
  %10 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !7717
  %sequence3 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %10, i32 0, i32 2, !dbg !7719
  %11 = load i64, i64* %sequence3, align 8, !dbg !7719
  br label %cond.end, !dbg !7720

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %rem, %cond.true ], [ %11, %cond.false ], !dbg !7721
  %call = call i32 @replace_int_data_in_filename(i8** %filename, i8* %3, i8 signext 100, i64 %cond), !dbg !7723
  %cmp = icmp slt i32 %call, 1, !dbg !7724
  br i1 %cmp, label %if.then5, label %if.end, !dbg !7725

if.then5:                                         ; preds = %cond.end
  %12 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !7726
  %13 = bitcast %struct.HLSContext* %12 to i8*, !dbg !7726
  %14 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !7728
  %url6 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %14, i32 0, i32 9, !dbg !7729
  %15 = load i8*, i8** %url6, align 8, !dbg !7729
  call void (i8*, i32, i8*, ...) @av_log(i8* %13, i32 16, i8* getelementptr inbounds ([108 x i8], [108 x i8]* @.str.175, i32 0, i32 0), i8* %15), !dbg !7730
  %16 = load i8*, i8** %filename, align 8, !dbg !7731
  call void @av_free(i8* %16), !dbg !7732
  store i32 -22, i32* %retval, align 4, !dbg !7733
  br label %return, !dbg !7733

if.end:                                           ; preds = %cond.end
  %17 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !7734
  %18 = load i8*, i8** %filename, align 8, !dbg !7735
  call void @ff_format_set_url(%struct.AVFormatContext* %17, i8* %18), !dbg !7736
  br label %if.end7, !dbg !7737

if.end7:                                          ; preds = %if.end, %entry
  %19 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !7738
  %flags8 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %19, i32 0, i32 8, !dbg !7740
  %20 = load i32, i32* %flags8, align 8, !dbg !7740
  %and9 = and i32 %20, 1536, !dbg !7741
  %tobool10 = icmp ne i32 %and9, 0, !dbg !7741
  br i1 %tobool10, label %if.then11, label %if.end40, !dbg !7742

if.then11:                                        ; preds = %if.end7
  %21 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !7743
  %current_segment_final_filename_fmt = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %21, i32 0, i32 31, !dbg !7745
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %current_segment_final_filename_fmt, i32 0, i32 0, !dbg !7743
  %22 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !7746
  %url12 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %22, i32 0, i32 9, !dbg !7747
  %23 = load i8*, i8** %url12, align 8, !dbg !7747
  %call13 = call i64 @av_strlcpy(i8* %arraydecay, i8* %23, i64 1024), !dbg !7748
  %24 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !7749
  %flags14 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %24, i32 0, i32 8, !dbg !7751
  %25 = load i32, i32* %flags14, align 8, !dbg !7751
  %and15 = and i32 %25, 1024, !dbg !7752
  %tobool16 = icmp ne i32 %and15, 0, !dbg !7752
  br i1 %tobool16, label %if.then17, label %if.end26, !dbg !7753

if.then17:                                        ; preds = %if.then11
  call void @llvm.dbg.declare(metadata i8** %filename18, metadata !7754, metadata !2335), !dbg !7756
  store i8* null, i8** %filename18, align 8, !dbg !7756
  %26 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !7757
  %url19 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %26, i32 0, i32 9, !dbg !7759
  %27 = load i8*, i8** %url19, align 8, !dbg !7759
  %call20 = call i32 @replace_int_data_in_filename(i8** %filename18, i8* %27, i8 signext 115, i64 0), !dbg !7760
  %cmp21 = icmp slt i32 %call20, 1, !dbg !7761
  br i1 %cmp21, label %if.then23, label %if.end25, !dbg !7762

if.then23:                                        ; preds = %if.then17
  %28 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !7763
  %29 = bitcast %struct.HLSContext* %28 to i8*, !dbg !7763
  %30 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !7765
  %url24 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %30, i32 0, i32 9, !dbg !7766
  %31 = load i8*, i8** %url24, align 8, !dbg !7766
  call void (i8*, i32, i8*, ...) @av_log(i8* %29, i32 16, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @.str.152, i32 0, i32 0), i8* %31), !dbg !7767
  %32 = load i8*, i8** %filename18, align 8, !dbg !7768
  call void @av_free(i8* %32), !dbg !7769
  store i32 -22, i32* %retval, align 4, !dbg !7770
  br label %return, !dbg !7770

if.end25:                                         ; preds = %if.then17
  %33 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !7771
  %34 = load i8*, i8** %filename18, align 8, !dbg !7772
  call void @ff_format_set_url(%struct.AVFormatContext* %33, i8* %34), !dbg !7773
  br label %if.end26, !dbg !7774

if.end26:                                         ; preds = %if.end25, %if.then11
  %35 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !7775
  %flags27 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %35, i32 0, i32 8, !dbg !7777
  %36 = load i32, i32* %flags27, align 8, !dbg !7777
  %and28 = and i32 %36, 512, !dbg !7778
  %tobool29 = icmp ne i32 %and28, 0, !dbg !7778
  br i1 %tobool29, label %if.then30, label %if.end39, !dbg !7779

if.then30:                                        ; preds = %if.end26
  call void @llvm.dbg.declare(metadata i8** %filename31, metadata !7780, metadata !2335), !dbg !7782
  store i8* null, i8** %filename31, align 8, !dbg !7782
  %37 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !7783
  %url32 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %37, i32 0, i32 9, !dbg !7785
  %38 = load i8*, i8** %url32, align 8, !dbg !7785
  %call33 = call i32 @replace_int_data_in_filename(i8** %filename31, i8* %38, i8 signext 116, i64 0), !dbg !7786
  %cmp34 = icmp slt i32 %call33, 1, !dbg !7787
  br i1 %cmp34, label %if.then36, label %if.end38, !dbg !7788

if.then36:                                        ; preds = %if.then30
  %39 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !7789
  %40 = bitcast %struct.HLSContext* %39 to i8*, !dbg !7789
  %41 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !7791
  %url37 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %41, i32 0, i32 9, !dbg !7792
  %42 = load i8*, i8** %url37, align 8, !dbg !7792
  call void (i8*, i32, i8*, ...) @av_log(i8* %40, i32 16, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @.str.153, i32 0, i32 0), i8* %42), !dbg !7793
  %43 = load i8*, i8** %filename31, align 8, !dbg !7794
  call void @av_free(i8* %43), !dbg !7795
  store i32 -22, i32* %retval, align 4, !dbg !7796
  br label %return, !dbg !7796

if.end38:                                         ; preds = %if.then30
  %44 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !7797
  %45 = load i8*, i8** %filename31, align 8, !dbg !7798
  call void @ff_format_set_url(%struct.AVFormatContext* %44, i8* %45), !dbg !7799
  br label %if.end39, !dbg !7800

if.end39:                                         ; preds = %if.end38, %if.end26
  br label %if.end40, !dbg !7801

if.end40:                                         ; preds = %if.end39, %if.end7
  store i32 0, i32* %retval, align 4, !dbg !7802
  br label %return, !dbg !7802

return:                                           ; preds = %if.end40, %if.then36, %if.then23, %if.then5
  %46 = load i32, i32* %retval, align 4, !dbg !7803
  ret i32 %46, !dbg !7803
}

declare i8* @av_dirname(i8*) #1

declare i32 @ff_mkdir_p(i8*) #1

declare i8* @av_asprintf(i8*, ...) #1

; Function Attrs: nounwind uwtable
define internal i32 @hls_encryption_start(%struct.AVFormatContext* %s) #0 !dbg !7804 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %hls = alloca %struct.HLSContext*, align 8
  %ret = alloca i32, align 4
  %pb = alloca %struct.AVIOContext*, align 8
  %key = alloca [16 x i8], align 16
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !7805, metadata !2335), !dbg !7806
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %hls, metadata !7807, metadata !2335), !dbg !7808
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7809
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !7810
  %1 = load i8*, i8** %priv_data, align 8, !dbg !7810
  %2 = bitcast i8* %1 to %struct.HLSContext*, !dbg !7809
  store %struct.HLSContext* %2, %struct.HLSContext** %hls, align 8, !dbg !7808
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7811, metadata !2335), !dbg !7812
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !7813, metadata !2335), !dbg !7814
  call void @llvm.dbg.declare(metadata [16 x i8]* %key, metadata !7815, metadata !2335), !dbg !7819
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7820
  %io_open = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 69, !dbg !7822
  %4 = load i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)*, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)** %io_open, align 8, !dbg !7822
  %5 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7823
  %6 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !7824
  %key_info_file = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %6, i32 0, i32 29, !dbg !7825
  %7 = load i8*, i8** %key_info_file, align 8, !dbg !7825
  %call = call i32 %4(%struct.AVFormatContext* %5, %struct.AVIOContext** %pb, i8* %7, i32 1, %struct.AVDictionary** null), !dbg !7820
  store i32 %call, i32* %ret, align 4, !dbg !7826
  %cmp = icmp slt i32 %call, 0, !dbg !7827
  br i1 %cmp, label %if.then, label %if.end, !dbg !7828

if.then:                                          ; preds = %entry
  %8 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !7829
  %9 = bitcast %struct.HLSContext* %8 to i8*, !dbg !7829
  %10 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !7831
  %key_info_file1 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %10, i32 0, i32 29, !dbg !7832
  %11 = load i8*, i8** %key_info_file1, align 8, !dbg !7832
  call void (i8*, i32, i8*, ...) @av_log(i8* %9, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.176, i32 0, i32 0), i8* %11), !dbg !7833
  %12 = load i32, i32* %ret, align 4, !dbg !7834
  store i32 %12, i32* %retval, align 4, !dbg !7835
  br label %return, !dbg !7835

if.end:                                           ; preds = %entry
  %13 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7836
  %14 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !7837
  %key_uri = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %14, i32 0, i32 31, !dbg !7838
  %arraydecay = getelementptr inbounds [1025 x i8], [1025 x i8]* %key_uri, i32 0, i32 0, !dbg !7837
  %call2 = call i32 @ff_get_line(%struct.AVIOContext* %13, i8* %arraydecay, i32 1025), !dbg !7839
  %15 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !7840
  %key_uri3 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %15, i32 0, i32 31, !dbg !7841
  %arraydecay4 = getelementptr inbounds [1025 x i8], [1025 x i8]* %key_uri3, i32 0, i32 0, !dbg !7840
  %call5 = call i64 @strcspn(i8* %arraydecay4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.177, i32 0, i32 0)) #11, !dbg !7842
  %16 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !7843
  %key_uri6 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %16, i32 0, i32 31, !dbg !7844
  %arrayidx = getelementptr inbounds [1025 x i8], [1025 x i8]* %key_uri6, i64 0, i64 %call5, !dbg !7843
  store i8 0, i8* %arrayidx, align 1, !dbg !7845
  %17 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7846
  %18 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !7847
  %key_file = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %18, i32 0, i32 30, !dbg !7848
  %arraydecay7 = getelementptr inbounds [1025 x i8], [1025 x i8]* %key_file, i32 0, i32 0, !dbg !7847
  %call8 = call i32 @ff_get_line(%struct.AVIOContext* %17, i8* %arraydecay7, i32 1025), !dbg !7849
  %19 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !7850
  %key_file9 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %19, i32 0, i32 30, !dbg !7851
  %arraydecay10 = getelementptr inbounds [1025 x i8], [1025 x i8]* %key_file9, i32 0, i32 0, !dbg !7850
  %call11 = call i64 @strcspn(i8* %arraydecay10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.177, i32 0, i32 0)) #11, !dbg !7852
  %20 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !7853
  %key_file12 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %20, i32 0, i32 30, !dbg !7854
  %arrayidx13 = getelementptr inbounds [1025 x i8], [1025 x i8]* %key_file12, i64 0, i64 %call11, !dbg !7853
  store i8 0, i8* %arrayidx13, align 1, !dbg !7855
  %21 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7856
  %22 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !7857
  %iv_string = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %22, i32 0, i32 33, !dbg !7858
  %arraydecay14 = getelementptr inbounds [33 x i8], [33 x i8]* %iv_string, i32 0, i32 0, !dbg !7857
  %call15 = call i32 @ff_get_line(%struct.AVIOContext* %21, i8* %arraydecay14, i32 33), !dbg !7859
  %23 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !7860
  %iv_string16 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %23, i32 0, i32 33, !dbg !7861
  %arraydecay17 = getelementptr inbounds [33 x i8], [33 x i8]* %iv_string16, i32 0, i32 0, !dbg !7860
  %call18 = call i64 @strcspn(i8* %arraydecay17, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.177, i32 0, i32 0)) #11, !dbg !7862
  %24 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !7863
  %iv_string19 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %24, i32 0, i32 33, !dbg !7864
  %arrayidx20 = getelementptr inbounds [33 x i8], [33 x i8]* %iv_string19, i64 0, i64 %call18, !dbg !7863
  store i8 0, i8* %arrayidx20, align 1, !dbg !7865
  %25 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7866
  call void @ff_format_io_close(%struct.AVFormatContext* %25, %struct.AVIOContext** %pb), !dbg !7867
  %26 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !7868
  %key_uri21 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %26, i32 0, i32 31, !dbg !7870
  %arraydecay22 = getelementptr inbounds [1025 x i8], [1025 x i8]* %key_uri21, i32 0, i32 0, !dbg !7871
  %27 = load i8, i8* %arraydecay22, align 1, !dbg !7871
  %tobool = icmp ne i8 %27, 0, !dbg !7871
  br i1 %tobool, label %if.end24, label %if.then23, !dbg !7872

if.then23:                                        ; preds = %if.end
  %28 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !7873
  %29 = bitcast %struct.HLSContext* %28 to i8*, !dbg !7873
  call void (i8*, i32, i8*, ...) @av_log(i8* %29, i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.178, i32 0, i32 0)), !dbg !7875
  store i32 -22, i32* %retval, align 4, !dbg !7876
  br label %return, !dbg !7876

if.end24:                                         ; preds = %if.end
  %30 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !7877
  %key_file25 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %30, i32 0, i32 30, !dbg !7879
  %arraydecay26 = getelementptr inbounds [1025 x i8], [1025 x i8]* %key_file25, i32 0, i32 0, !dbg !7880
  %31 = load i8, i8* %arraydecay26, align 8, !dbg !7880
  %tobool27 = icmp ne i8 %31, 0, !dbg !7880
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !7881

if.then28:                                        ; preds = %if.end24
  %32 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !7882
  %33 = bitcast %struct.HLSContext* %32 to i8*, !dbg !7882
  call void (i8*, i32, i8*, ...) @av_log(i8* %33, i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.179, i32 0, i32 0)), !dbg !7884
  store i32 -22, i32* %retval, align 4, !dbg !7885
  br label %return, !dbg !7885

if.end29:                                         ; preds = %if.end24
  %34 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7886
  %io_open30 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %34, i32 0, i32 69, !dbg !7888
  %35 = load i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)*, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)** %io_open30, align 8, !dbg !7888
  %36 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7889
  %37 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !7890
  %key_file31 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %37, i32 0, i32 30, !dbg !7891
  %arraydecay32 = getelementptr inbounds [1025 x i8], [1025 x i8]* %key_file31, i32 0, i32 0, !dbg !7890
  %call33 = call i32 %35(%struct.AVFormatContext* %36, %struct.AVIOContext** %pb, i8* %arraydecay32, i32 1, %struct.AVDictionary** null), !dbg !7886
  store i32 %call33, i32* %ret, align 4, !dbg !7892
  %cmp34 = icmp slt i32 %call33, 0, !dbg !7893
  br i1 %cmp34, label %if.then35, label %if.end38, !dbg !7894

if.then35:                                        ; preds = %if.end29
  %38 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !7895
  %39 = bitcast %struct.HLSContext* %38 to i8*, !dbg !7895
  %40 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !7897
  %key_file36 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %40, i32 0, i32 30, !dbg !7898
  %arraydecay37 = getelementptr inbounds [1025 x i8], [1025 x i8]* %key_file36, i32 0, i32 0, !dbg !7897
  call void (i8*, i32, i8*, ...) @av_log(i8* %39, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.180, i32 0, i32 0), i8* %arraydecay37), !dbg !7899
  %41 = load i32, i32* %ret, align 4, !dbg !7900
  store i32 %41, i32* %retval, align 4, !dbg !7901
  br label %return, !dbg !7901

if.end38:                                         ; preds = %if.end29
  %42 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7902
  %arraydecay39 = getelementptr inbounds [16 x i8], [16 x i8]* %key, i32 0, i32 0, !dbg !7903
  %call40 = call i32 @avio_read(%struct.AVIOContext* %42, i8* %arraydecay39, i32 16), !dbg !7904
  store i32 %call40, i32* %ret, align 4, !dbg !7905
  %43 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7906
  call void @ff_format_io_close(%struct.AVFormatContext* %43, %struct.AVIOContext** %pb), !dbg !7907
  %44 = load i32, i32* %ret, align 4, !dbg !7908
  %conv = sext i32 %44 to i64, !dbg !7908
  %cmp41 = icmp ne i64 %conv, 16, !dbg !7910
  br i1 %cmp41, label %if.then43, label %if.end52, !dbg !7911

if.then43:                                        ; preds = %if.end38
  %45 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !7912
  %46 = bitcast %struct.HLSContext* %45 to i8*, !dbg !7912
  %47 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !7914
  %key_file44 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %47, i32 0, i32 30, !dbg !7915
  %arraydecay45 = getelementptr inbounds [1025 x i8], [1025 x i8]* %key_file44, i32 0, i32 0, !dbg !7914
  call void (i8*, i32, i8*, ...) @av_log(i8* %46, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.181, i32 0, i32 0), i8* %arraydecay45), !dbg !7916
  %48 = load i32, i32* %ret, align 4, !dbg !7917
  %cmp46 = icmp sge i32 %48, 0, !dbg !7919
  br i1 %cmp46, label %if.then50, label %lor.lhs.false, !dbg !7920

lor.lhs.false:                                    ; preds = %if.then43
  %49 = load i32, i32* %ret, align 4, !dbg !7921
  %cmp48 = icmp eq i32 %49, -541478725, !dbg !7923
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !7924

if.then50:                                        ; preds = %lor.lhs.false, %if.then43
  store i32 -22, i32* %ret, align 4, !dbg !7925
  br label %if.end51, !dbg !7926

if.end51:                                         ; preds = %if.then50, %lor.lhs.false
  %50 = load i32, i32* %ret, align 4, !dbg !7927
  store i32 %50, i32* %retval, align 4, !dbg !7928
  br label %return, !dbg !7928

if.end52:                                         ; preds = %if.end38
  %51 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !7929
  %key_string = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %51, i32 0, i32 32, !dbg !7930
  %arraydecay53 = getelementptr inbounds [33 x i8], [33 x i8]* %key_string, i32 0, i32 0, !dbg !7929
  %arraydecay54 = getelementptr inbounds [16 x i8], [16 x i8]* %key, i32 0, i32 0, !dbg !7931
  %call55 = call i8* @ff_data_to_hex(i8* %arraydecay53, i8* %arraydecay54, i32 16, i32 0), !dbg !7932
  store i32 0, i32* %retval, align 4, !dbg !7933
  br label %return, !dbg !7933

return:                                           ; preds = %if.end52, %if.end51, %if.then35, %if.then28, %if.then23, %if.then
  %52 = load i32, i32* %retval, align 4, !dbg !7934
  ret i32 %52, !dbg !7934
}

; Function Attrs: nounwind uwtable
define internal i32 @do_encrypt(%struct.AVFormatContext* %s, %struct.VariantStream* %vs) #0 !dbg !7935 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %vs.addr = alloca %struct.VariantStream*, align 8
  %hls = alloca %struct.HLSContext*, align 8
  %ret = alloca i32, align 4
  %len = alloca i32, align 4
  %pb = alloca %struct.AVIOContext*, align 8
  %key = alloca [16 x i8], align 16
  %iv = alloca [16 x i8], align 16
  %buf = alloca [33 x i8], align 16
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !7936, metadata !2335), !dbg !7937
  store %struct.VariantStream* %vs, %struct.VariantStream** %vs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VariantStream** %vs.addr, metadata !7938, metadata !2335), !dbg !7939
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %hls, metadata !7940, metadata !2335), !dbg !7941
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7942
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !7943
  %1 = load i8*, i8** %priv_data, align 8, !dbg !7943
  %2 = bitcast i8* %1 to %struct.HLSContext*, !dbg !7942
  store %struct.HLSContext* %2, %struct.HLSContext** %hls, align 8, !dbg !7941
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7944, metadata !2335), !dbg !7945
  call void @llvm.dbg.declare(metadata i32* %len, metadata !7946, metadata !2335), !dbg !7947
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !7948, metadata !2335), !dbg !7949
  call void @llvm.dbg.declare(metadata [16 x i8]* %key, metadata !7950, metadata !2335), !dbg !7951
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7952
  %url = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 9, !dbg !7953
  %4 = load i8*, i8** %url, align 8, !dbg !7953
  %call = call i64 @strlen(i8* %4) #11, !dbg !7954
  %add = add i64 %call, 4, !dbg !7955
  %add1 = add i64 %add, 1, !dbg !7956
  %conv = trunc i64 %add1 to i32, !dbg !7954
  store i32 %conv, i32* %len, align 4, !dbg !7957
  %5 = load i32, i32* %len, align 4, !dbg !7958
  %conv2 = sext i32 %5 to i64, !dbg !7958
  %call3 = call noalias i8* @av_mallocz(i64 %conv2), !dbg !7959
  %6 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !7960
  %key_basename = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %6, i32 0, i32 27, !dbg !7961
  store i8* %call3, i8** %key_basename, align 8, !dbg !7962
  %7 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !7963
  %key_basename4 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %7, i32 0, i32 27, !dbg !7965
  %8 = load i8*, i8** %key_basename4, align 8, !dbg !7965
  %tobool = icmp ne i8* %8, null, !dbg !7963
  br i1 %tobool, label %if.end, label %if.then, !dbg !7966

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !7967
  br label %return, !dbg !7967

if.end:                                           ; preds = %entry
  %9 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !7968
  %key_basename5 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %9, i32 0, i32 27, !dbg !7969
  %10 = load i8*, i8** %key_basename5, align 8, !dbg !7969
  %11 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7970
  %url6 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %11, i32 0, i32 9, !dbg !7971
  %12 = load i8*, i8** %url6, align 8, !dbg !7971
  %13 = load i32, i32* %len, align 4, !dbg !7972
  %conv7 = sext i32 %13 to i64, !dbg !7972
  %call8 = call i64 @av_strlcpy(i8* %10, i8* %12, i64 %conv7), !dbg !7973
  %14 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !7974
  %key_basename9 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %14, i32 0, i32 27, !dbg !7975
  %15 = load i8*, i8** %key_basename9, align 8, !dbg !7975
  %16 = load i32, i32* %len, align 4, !dbg !7976
  %conv10 = sext i32 %16 to i64, !dbg !7976
  %call11 = call i64 @av_strlcat(i8* %15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.182, i32 0, i32 0), i64 %conv10), !dbg !7977
  %17 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !7978
  %key_url = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %17, i32 0, i32 25, !dbg !7980
  %18 = load i8*, i8** %key_url, align 8, !dbg !7980
  %tobool12 = icmp ne i8* %18, null, !dbg !7978
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !7981

if.then13:                                        ; preds = %if.end
  %19 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !7982
  %key_file = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %19, i32 0, i32 30, !dbg !7984
  %arraydecay = getelementptr inbounds [1025 x i8], [1025 x i8]* %key_file, i32 0, i32 0, !dbg !7982
  %20 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !7985
  %key_url14 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %20, i32 0, i32 25, !dbg !7986
  %21 = load i8*, i8** %key_url14, align 8, !dbg !7986
  %call15 = call i64 @av_strlcpy(i8* %arraydecay, i8* %21, i64 1025), !dbg !7987
  %22 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !7988
  %key_uri = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %22, i32 0, i32 31, !dbg !7989
  %arraydecay16 = getelementptr inbounds [1025 x i8], [1025 x i8]* %key_uri, i32 0, i32 0, !dbg !7988
  %23 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !7990
  %key_url17 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %23, i32 0, i32 25, !dbg !7991
  %24 = load i8*, i8** %key_url17, align 8, !dbg !7991
  %call18 = call i64 @av_strlcpy(i8* %arraydecay16, i8* %24, i64 1025), !dbg !7992
  br label %if.end27, !dbg !7993

if.else:                                          ; preds = %if.end
  %25 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !7994
  %key_file19 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %25, i32 0, i32 30, !dbg !7996
  %arraydecay20 = getelementptr inbounds [1025 x i8], [1025 x i8]* %key_file19, i32 0, i32 0, !dbg !7994
  %26 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !7997
  %key_basename21 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %26, i32 0, i32 27, !dbg !7998
  %27 = load i8*, i8** %key_basename21, align 8, !dbg !7998
  %call22 = call i64 @av_strlcpy(i8* %arraydecay20, i8* %27, i64 1025), !dbg !7999
  %28 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8000
  %key_uri23 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %28, i32 0, i32 31, !dbg !8001
  %arraydecay24 = getelementptr inbounds [1025 x i8], [1025 x i8]* %key_uri23, i32 0, i32 0, !dbg !8000
  %29 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8002
  %key_basename25 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %29, i32 0, i32 27, !dbg !8003
  %30 = load i8*, i8** %key_basename25, align 8, !dbg !8003
  %call26 = call i64 @av_strlcpy(i8* %arraydecay24, i8* %30, i64 1025), !dbg !8004
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.then13
  %31 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8005
  %iv_string = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %31, i32 0, i32 33, !dbg !8007
  %arraydecay28 = getelementptr inbounds [33 x i8], [33 x i8]* %iv_string, i32 0, i32 0, !dbg !8008
  %32 = load i8, i8* %arraydecay28, align 1, !dbg !8008
  %tobool29 = icmp ne i8 %32, 0, !dbg !8008
  br i1 %tobool29, label %if.end46, label %if.then30, !dbg !8009

if.then30:                                        ; preds = %if.end27
  call void @llvm.dbg.declare(metadata [16 x i8]* %iv, metadata !8010, metadata !2335), !dbg !8012
  %33 = bitcast [16 x i8]* %iv to i8*, !dbg !8012
  call void @llvm.memset.p0i8.i64(i8* %33, i8 0, i64 16, i32 16, i1 false), !dbg !8012
  call void @llvm.dbg.declare(metadata [33 x i8]* %buf, metadata !8013, metadata !2335), !dbg !8014
  %34 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8015
  %iv31 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %34, i32 0, i32 26, !dbg !8017
  %35 = load i8*, i8** %iv31, align 8, !dbg !8017
  %tobool32 = icmp ne i8* %35, null, !dbg !8015
  br i1 %tobool32, label %if.else36, label %if.then33, !dbg !8018

if.then33:                                        ; preds = %if.then30
  %36 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !8019
  %sequence = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %36, i32 0, i32 2, !dbg !8021
  %37 = load i64, i64* %sequence, align 8, !dbg !8021
  %call34 = call i64 @av_bswap64(i64 %37) #2, !dbg !8022
  %arraydecay35 = getelementptr inbounds [16 x i8], [16 x i8]* %iv, i32 0, i32 0, !dbg !8023
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay35, i64 8, !dbg !8024
  %38 = bitcast i8* %add.ptr to %union.unaligned_64*, !dbg !8025
  %l = bitcast %union.unaligned_64* %38 to i64*, !dbg !8025
  store i64 %call34, i64* %l, align 1, !dbg !8026
  br label %if.end39, !dbg !8027

if.else36:                                        ; preds = %if.then30
  %arraydecay37 = getelementptr inbounds [16 x i8], [16 x i8]* %iv, i32 0, i32 0, !dbg !8028
  %39 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8030
  %iv38 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %39, i32 0, i32 26, !dbg !8031
  %40 = load i8*, i8** %iv38, align 8, !dbg !8031
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay37, i8* %40, i64 16, i32 1, i1 false), !dbg !8028
  br label %if.end39

if.end39:                                         ; preds = %if.else36, %if.then33
  %arraydecay40 = getelementptr inbounds [33 x i8], [33 x i8]* %buf, i32 0, i32 0, !dbg !8032
  %arraydecay41 = getelementptr inbounds [16 x i8], [16 x i8]* %iv, i32 0, i32 0, !dbg !8033
  %call42 = call i8* @ff_data_to_hex(i8* %arraydecay40, i8* %arraydecay41, i32 16, i32 0), !dbg !8034
  %arrayidx = getelementptr inbounds [33 x i8], [33 x i8]* %buf, i64 0, i64 32, !dbg !8035
  store i8 0, i8* %arrayidx, align 16, !dbg !8036
  %41 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8037
  %iv_string43 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %41, i32 0, i32 33, !dbg !8038
  %arraydecay44 = getelementptr inbounds [33 x i8], [33 x i8]* %iv_string43, i32 0, i32 0, !dbg !8039
  %arraydecay45 = getelementptr inbounds [33 x i8], [33 x i8]* %buf, i32 0, i32 0, !dbg !8039
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay44, i8* %arraydecay45, i64 33, i32 1, i1 false), !dbg !8039
  br label %if.end46, !dbg !8040

if.end46:                                         ; preds = %if.end39, %if.end27
  %42 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8041
  %key_uri47 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %42, i32 0, i32 31, !dbg !8043
  %arraydecay48 = getelementptr inbounds [1025 x i8], [1025 x i8]* %key_uri47, i32 0, i32 0, !dbg !8044
  %43 = load i8, i8* %arraydecay48, align 1, !dbg !8044
  %tobool49 = icmp ne i8 %43, 0, !dbg !8044
  br i1 %tobool49, label %if.end51, label %if.then50, !dbg !8045

if.then50:                                        ; preds = %if.end46
  %44 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8046
  %45 = bitcast %struct.HLSContext* %44 to i8*, !dbg !8046
  call void (i8*, i32, i8*, ...) @av_log(i8* %45, i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.178, i32 0, i32 0)), !dbg !8048
  store i32 -22, i32* %retval, align 4, !dbg !8049
  br label %return, !dbg !8049

if.end51:                                         ; preds = %if.end46
  %46 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8050
  %key_file52 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %46, i32 0, i32 30, !dbg !8052
  %arraydecay53 = getelementptr inbounds [1025 x i8], [1025 x i8]* %key_file52, i32 0, i32 0, !dbg !8053
  %47 = load i8, i8* %arraydecay53, align 8, !dbg !8053
  %tobool54 = icmp ne i8 %47, 0, !dbg !8053
  br i1 %tobool54, label %if.end56, label %if.then55, !dbg !8054

if.then55:                                        ; preds = %if.end51
  %48 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8055
  %49 = bitcast %struct.HLSContext* %48 to i8*, !dbg !8055
  call void (i8*, i32, i8*, ...) @av_log(i8* %49, i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.179, i32 0, i32 0)), !dbg !8057
  store i32 -22, i32* %retval, align 4, !dbg !8058
  br label %return, !dbg !8058

if.end56:                                         ; preds = %if.end51
  %50 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8059
  %key_string = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %50, i32 0, i32 32, !dbg !8061
  %arraydecay57 = getelementptr inbounds [33 x i8], [33 x i8]* %key_string, i32 0, i32 0, !dbg !8062
  %51 = load i8, i8* %arraydecay57, align 2, !dbg !8062
  %tobool58 = icmp ne i8 %51, 0, !dbg !8062
  br i1 %tobool58, label %if.end86, label %if.then59, !dbg !8063

if.then59:                                        ; preds = %if.end56
  %52 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8064
  %key60 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %52, i32 0, i32 24, !dbg !8067
  %53 = load i8*, i8** %key60, align 8, !dbg !8067
  %tobool61 = icmp ne i8* %53, null, !dbg !8064
  br i1 %tobool61, label %if.else68, label %if.then62, !dbg !8068

if.then62:                                        ; preds = %if.then59
  %arraydecay63 = getelementptr inbounds [16 x i8], [16 x i8]* %key, i32 0, i32 0, !dbg !8069
  %call64 = call i32 @randomize(i8* %arraydecay63, i32 16), !dbg !8072
  store i32 %call64, i32* %ret, align 4, !dbg !8073
  %cmp = icmp slt i32 %call64, 0, !dbg !8074
  br i1 %cmp, label %if.then66, label %if.end67, !dbg !8075

if.then66:                                        ; preds = %if.then62
  %54 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8076
  %55 = bitcast %struct.AVFormatContext* %54 to i8*, !dbg !8076
  call void (i8*, i32, i8*, ...) @av_log(i8* %55, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.183, i32 0, i32 0)), !dbg !8078
  %56 = load i32, i32* %ret, align 4, !dbg !8079
  store i32 %56, i32* %retval, align 4, !dbg !8080
  br label %return, !dbg !8080

if.end67:                                         ; preds = %if.then62
  br label %if.end71, !dbg !8081

if.else68:                                        ; preds = %if.then59
  %arraydecay69 = getelementptr inbounds [16 x i8], [16 x i8]* %key, i32 0, i32 0, !dbg !8082
  %57 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8084
  %key70 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %57, i32 0, i32 24, !dbg !8085
  %58 = load i8*, i8** %key70, align 8, !dbg !8085
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay69, i8* %58, i64 16, i32 1, i1 false), !dbg !8082
  br label %if.end71

if.end71:                                         ; preds = %if.else68, %if.end67
  %59 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8086
  %key_string72 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %59, i32 0, i32 32, !dbg !8087
  %arraydecay73 = getelementptr inbounds [33 x i8], [33 x i8]* %key_string72, i32 0, i32 0, !dbg !8086
  %arraydecay74 = getelementptr inbounds [16 x i8], [16 x i8]* %key, i32 0, i32 0, !dbg !8088
  %call75 = call i8* @ff_data_to_hex(i8* %arraydecay73, i8* %arraydecay74, i32 16, i32 0), !dbg !8089
  %60 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8090
  %io_open = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %60, i32 0, i32 69, !dbg !8092
  %61 = load i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)*, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)** %io_open, align 8, !dbg !8092
  %62 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8093
  %63 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8094
  %key_file76 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %63, i32 0, i32 30, !dbg !8095
  %arraydecay77 = getelementptr inbounds [1025 x i8], [1025 x i8]* %key_file76, i32 0, i32 0, !dbg !8094
  %call78 = call i32 %61(%struct.AVFormatContext* %62, %struct.AVIOContext** %pb, i8* %arraydecay77, i32 2, %struct.AVDictionary** null), !dbg !8090
  store i32 %call78, i32* %ret, align 4, !dbg !8096
  %cmp79 = icmp slt i32 %call78, 0, !dbg !8097
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !8098

if.then81:                                        ; preds = %if.end71
  %64 = load i32, i32* %ret, align 4, !dbg !8099
  store i32 %64, i32* %retval, align 4, !dbg !8100
  br label %return, !dbg !8100

if.end82:                                         ; preds = %if.end71
  %65 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8101
  %call83 = call i64 @avio_seek(%struct.AVIOContext* %65, i64 0, i32 1), !dbg !8102
  %66 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8103
  %arraydecay84 = getelementptr inbounds [16 x i8], [16 x i8]* %key, i32 0, i32 0, !dbg !8104
  call void @avio_write(%struct.AVIOContext* %66, i8* %arraydecay84, i32 16), !dbg !8105
  %67 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8106
  %call85 = call i32 @avio_close(%struct.AVIOContext* %67), !dbg !8107
  br label %if.end86, !dbg !8108

if.end86:                                         ; preds = %if.end82, %if.end56
  store i32 0, i32* %retval, align 4, !dbg !8109
  br label %return, !dbg !8109

return:                                           ; preds = %if.end86, %if.then81, %if.then66, %if.then55, %if.then50, %if.then
  %68 = load i32, i32* %retval, align 4, !dbg !8110
  ret i32 %68, !dbg !8110
}

declare void @av_dict_free(%struct.AVDictionary**) #1

declare i32 @ff_get_line(%struct.AVIOContext*, i8*, i32) #1

; Function Attrs: nounwind readonly
declare i64 @strcspn(i8*, i8*) #3

declare i32 @avio_read(%struct.AVIOContext*, i8*, i32) #1

declare i8* @ff_data_to_hex(i8*, i8*, i32, i32) #1

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i64 @av_bswap64(i64 %x) #9 !dbg !8111 {
entry:
  %x.addr.i5 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i5, metadata !8115, metadata !2335), !dbg !8119
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !8115, metadata !2335), !dbg !8122
  %x.addr = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !8124, metadata !2335), !dbg !8125
  %0 = load i64, i64* %x.addr, align 8, !dbg !8126
  %conv = trunc i64 %0 to i32, !dbg !8126
  store i32 %conv, i32* %x.addr.i, align 4, !dbg !8127
  %1 = load i32, i32* %x.addr.i, align 4, !dbg !8128
  %shl.i = shl i32 %1, 8, !dbg !8129
  %and.i = and i32 %shl.i, 65280, !dbg !8130
  %2 = load i32, i32* %x.addr.i, align 4, !dbg !8131
  %shr.i = lshr i32 %2, 8, !dbg !8132
  %and1.i = and i32 %shr.i, 255, !dbg !8133
  %or.i = or i32 %and.i, %and1.i, !dbg !8134
  %shl2.i = shl i32 %or.i, 16, !dbg !8135
  %3 = load i32, i32* %x.addr.i, align 4, !dbg !8136
  %shr3.i = lshr i32 %3, 16, !dbg !8137
  %shl4.i = shl i32 %shr3.i, 8, !dbg !8138
  %and5.i = and i32 %shl4.i, 65280, !dbg !8139
  %4 = load i32, i32* %x.addr.i, align 4, !dbg !8140
  %shr6.i = lshr i32 %4, 16, !dbg !8141
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !8142
  %and8.i = and i32 %shr7.i, 255, !dbg !8143
  %or9.i = or i32 %and5.i, %and8.i, !dbg !8144
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !8145
  %conv1 = zext i32 %or10.i to i64, !dbg !8146
  %shl = shl i64 %conv1, 32, !dbg !8147
  %5 = load i64, i64* %x.addr, align 8, !dbg !8148
  %shr = lshr i64 %5, 32, !dbg !8149
  %conv2 = trunc i64 %shr to i32, !dbg !8148
  store i32 %conv2, i32* %x.addr.i5, align 4, !dbg !8150
  %6 = load i32, i32* %x.addr.i5, align 4, !dbg !8151
  %shl.i6 = shl i32 %6, 8, !dbg !8152
  %and.i7 = and i32 %shl.i6, 65280, !dbg !8153
  %7 = load i32, i32* %x.addr.i5, align 4, !dbg !8154
  %shr.i8 = lshr i32 %7, 8, !dbg !8155
  %and1.i9 = and i32 %shr.i8, 255, !dbg !8156
  %or.i10 = or i32 %and.i7, %and1.i9, !dbg !8157
  %shl2.i11 = shl i32 %or.i10, 16, !dbg !8158
  %8 = load i32, i32* %x.addr.i5, align 4, !dbg !8159
  %shr3.i12 = lshr i32 %8, 16, !dbg !8160
  %shl4.i13 = shl i32 %shr3.i12, 8, !dbg !8161
  %and5.i14 = and i32 %shl4.i13, 65280, !dbg !8162
  %9 = load i32, i32* %x.addr.i5, align 4, !dbg !8163
  %shr6.i15 = lshr i32 %9, 16, !dbg !8164
  %shr7.i16 = lshr i32 %shr6.i15, 8, !dbg !8165
  %and8.i17 = and i32 %shr7.i16, 255, !dbg !8166
  %or9.i18 = or i32 %and5.i14, %and8.i17, !dbg !8167
  %or10.i19 = or i32 %shl2.i11, %or9.i18, !dbg !8168
  %conv4 = zext i32 %or10.i19 to i64, !dbg !8169
  %or = or i64 %shl, %conv4, !dbg !8170
  ret i64 %or, !dbg !8171
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #8

; Function Attrs: nounwind uwtable
define internal i32 @randomize(i8* %buf, i32 %len) #0 !dbg !8172 {
entry:
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8175, metadata !2335), !dbg !8176
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !8177, metadata !2335), !dbg !8178
  ret i32 -38, !dbg !8179
}

declare i32 @avio_close(%struct.AVIOContext*) #1

; Function Attrs: nounwind
declare i64 @lrint(double) #4

declare void @ff_hls_write_playlist_header(%struct.AVIOContext*, i32, i32, i32, i64, i32) #1

declare i32 @avio_printf(%struct.AVIOContext*, i8*, ...) #1

declare void @ff_hls_write_init_file(%struct.AVIOContext*, i8*, i32, i64, i64) #1

declare i32 @ff_hls_write_file_entry(%struct.AVIOContext*, i32, i32, double, i32, i64, i64, i8*, i8*, double*) #1

declare void @ff_hls_write_end_list(%struct.AVIOContext*) #1

; Function Attrs: nounwind uwtable
define internal i32 @create_master_playlist(%struct.AVFormatContext* %s, %struct.VariantStream* %input_vs) #0 !dbg !8180 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %input_vs.addr = alloca %struct.VariantStream*, align 8
  %hls = alloca %struct.HLSContext*, align 8
  %vs = alloca %struct.VariantStream*, align 8
  %temp_vs = alloca %struct.VariantStream*, align 8
  %vid_st = alloca %struct.AVStream*, align 8
  %aud_st = alloca %struct.AVStream*, align 8
  %options = alloca %struct.AVDictionary*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %m3u8_name_size = alloca i32, align 4
  %ret = alloca i32, align 4
  %bandwidth = alloca i32, align 4
  %m3u8_rel_name = alloca i8*, align 8
  %ccgroup = alloca i8*, align 8
  %ccs = alloca %struct.ClosedCaptionsStream*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !8184, metadata !2335), !dbg !8185
  store %struct.VariantStream* %input_vs, %struct.VariantStream** %input_vs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VariantStream** %input_vs.addr, metadata !8186, metadata !2335), !dbg !8187
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %hls, metadata !8188, metadata !2335), !dbg !8189
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8190
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !8191
  %1 = load i8*, i8** %priv_data, align 8, !dbg !8191
  %2 = bitcast i8* %1 to %struct.HLSContext*, !dbg !8190
  store %struct.HLSContext* %2, %struct.HLSContext** %hls, align 8, !dbg !8189
  call void @llvm.dbg.declare(metadata %struct.VariantStream** %vs, metadata !8192, metadata !2335), !dbg !8193
  call void @llvm.dbg.declare(metadata %struct.VariantStream** %temp_vs, metadata !8194, metadata !2335), !dbg !8195
  call void @llvm.dbg.declare(metadata %struct.AVStream** %vid_st, metadata !8196, metadata !2335), !dbg !8197
  call void @llvm.dbg.declare(metadata %struct.AVStream** %aud_st, metadata !8198, metadata !2335), !dbg !8199
  call void @llvm.dbg.declare(metadata %struct.AVDictionary** %options, metadata !8200, metadata !2335), !dbg !8201
  store %struct.AVDictionary* null, %struct.AVDictionary** %options, align 8, !dbg !8201
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8202, metadata !2335), !dbg !8203
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8204, metadata !2335), !dbg !8205
  call void @llvm.dbg.declare(metadata i32* %m3u8_name_size, metadata !8206, metadata !2335), !dbg !8207
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8208, metadata !2335), !dbg !8209
  call void @llvm.dbg.declare(metadata i32* %bandwidth, metadata !8210, metadata !2335), !dbg !8211
  call void @llvm.dbg.declare(metadata i8** %m3u8_rel_name, metadata !8212, metadata !2335), !dbg !8213
  call void @llvm.dbg.declare(metadata i8** %ccgroup, metadata !8214, metadata !2335), !dbg !8215
  call void @llvm.dbg.declare(metadata %struct.ClosedCaptionsStream** %ccs, metadata !8216, metadata !2335), !dbg !8217
  %3 = load %struct.VariantStream*, %struct.VariantStream** %input_vs.addr, align 8, !dbg !8218
  %m3u8_created = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %3, i32 0, i32 38, !dbg !8219
  store i32 1, i32* %m3u8_created, align 8, !dbg !8220
  %4 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8221
  %master_m3u8_created = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %4, i32 0, i32 41, !dbg !8223
  %5 = load i32, i32* %master_m3u8_created, align 4, !dbg !8223
  %tobool = icmp ne i32 %5, 0, !dbg !8221
  br i1 %tobool, label %if.else, label %if.then, !dbg !8224

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !8225
  br label %for.cond, !dbg !8228

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = load i32, i32* %i, align 4, !dbg !8229
  %7 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8232
  %nb_varstreams = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %7, i32 0, i32 38, !dbg !8233
  %8 = load i32, i32* %nb_varstreams, align 8, !dbg !8233
  %cmp = icmp ult i32 %6, %8, !dbg !8234
  br i1 %cmp, label %for.body, label %for.end, !dbg !8235

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %i, align 4, !dbg !8236
  %idxprom = zext i32 %9 to i64, !dbg !8238
  %10 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8238
  %var_streams = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %10, i32 0, i32 37, !dbg !8239
  %11 = load %struct.VariantStream*, %struct.VariantStream** %var_streams, align 8, !dbg !8239
  %arrayidx = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %11, i64 %idxprom, !dbg !8238
  %m3u8_created1 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %arrayidx, i32 0, i32 38, !dbg !8240
  %12 = load i32, i32* %m3u8_created1, align 8, !dbg !8240
  %tobool2 = icmp ne i32 %12, 0, !dbg !8238
  br i1 %tobool2, label %if.end, label %if.then3, !dbg !8241

if.then3:                                         ; preds = %for.body
  store i32 0, i32* %retval, align 4, !dbg !8242
  br label %return, !dbg !8242

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !8243

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %i, align 4, !dbg !8245
  %inc = add i32 %13, 1, !dbg !8245
  store i32 %inc, i32* %i, align 4, !dbg !8245
  br label %for.cond, !dbg !8247, !llvm.loop !8248

for.end:                                          ; preds = %for.cond
  br label %if.end13, !dbg !8250

if.else:                                          ; preds = %entry
  %14 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8251
  %var_streams4 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %14, i32 0, i32 37, !dbg !8254
  %15 = load %struct.VariantStream*, %struct.VariantStream** %var_streams4, align 8, !dbg !8254
  %arrayidx5 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %15, i64 0, !dbg !8251
  %16 = load %struct.VariantStream*, %struct.VariantStream** %input_vs.addr, align 8, !dbg !8255
  %cmp6 = icmp ne %struct.VariantStream* %arrayidx5, %16, !dbg !8256
  br i1 %cmp6, label %if.then11, label %lor.lhs.false, !dbg !8257

lor.lhs.false:                                    ; preds = %if.else
  %17 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8258
  %master_publish_rate = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %17, i32 0, i32 47, !dbg !8260
  %18 = load i32, i32* %master_publish_rate, align 8, !dbg !8260
  %tobool7 = icmp ne i32 %18, 0, !dbg !8258
  br i1 %tobool7, label %lor.lhs.false8, label %if.then11, !dbg !8261

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %19 = load %struct.VariantStream*, %struct.VariantStream** %input_vs.addr, align 8, !dbg !8262
  %number = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %19, i32 0, i32 1, !dbg !8263
  %20 = load i32, i32* %number, align 4, !dbg !8263
  %21 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8264
  %master_publish_rate9 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %21, i32 0, i32 47, !dbg !8265
  %22 = load i32, i32* %master_publish_rate9, align 8, !dbg !8265
  %rem = urem i32 %20, %22, !dbg !8266
  %tobool10 = icmp ne i32 %rem, 0, !dbg !8266
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !8267

if.then11:                                        ; preds = %lor.lhs.false8, %lor.lhs.false, %if.else
  store i32 0, i32* %retval, align 4, !dbg !8269
  br label %return, !dbg !8269

if.end12:                                         ; preds = %lor.lhs.false8
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %for.end
  %23 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8270
  %24 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8271
  call void @set_http_options(%struct.AVFormatContext* %23, %struct.AVDictionary** %options, %struct.HLSContext* %24), !dbg !8272
  %25 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8273
  %26 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8274
  %m3u8_out = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %26, i32 0, i32 49, !dbg !8275
  %27 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8276
  %master_m3u8_url = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %27, i32 0, i32 42, !dbg !8277
  %28 = load i8*, i8** %master_m3u8_url, align 8, !dbg !8277
  %call = call i32 @hlsenc_io_open(%struct.AVFormatContext* %25, %struct.AVIOContext** %m3u8_out, i8* %28, %struct.AVDictionary** %options), !dbg !8278
  store i32 %call, i32* %ret, align 4, !dbg !8279
  call void @av_dict_free(%struct.AVDictionary** %options), !dbg !8280
  %29 = load i32, i32* %ret, align 4, !dbg !8281
  %cmp14 = icmp slt i32 %29, 0, !dbg !8283
  br i1 %cmp14, label %if.then15, label %if.end17, !dbg !8284

if.then15:                                        ; preds = %if.end13
  %30 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8285
  %master_m3u8_url16 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %30, i32 0, i32 42, !dbg !8287
  %31 = load i8*, i8** %master_m3u8_url16, align 8, !dbg !8287
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.193, i32 0, i32 0), i8* %31), !dbg !8288
  br label %fail, !dbg !8289

if.end17:                                         ; preds = %if.end13
  %32 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8290
  %m3u8_out18 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %32, i32 0, i32 49, !dbg !8291
  %33 = load %struct.AVIOContext*, %struct.AVIOContext** %m3u8_out18, align 8, !dbg !8291
  %34 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8292
  %version = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %34, i32 0, i32 43, !dbg !8293
  %35 = load i32, i32* %version, align 8, !dbg !8293
  call void @ff_hls_write_playlist_version(%struct.AVIOContext* %33, i32 %35), !dbg !8294
  store i32 0, i32* %i, align 4, !dbg !8295
  br label %for.cond19, !dbg !8297

for.cond19:                                       ; preds = %for.inc40, %if.end17
  %36 = load i32, i32* %i, align 4, !dbg !8298
  %37 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8301
  %nb_ccstreams = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %37, i32 0, i32 40, !dbg !8302
  %38 = load i32, i32* %nb_ccstreams, align 8, !dbg !8302
  %cmp20 = icmp ult i32 %36, %38, !dbg !8303
  br i1 %cmp20, label %for.body21, label %for.end42, !dbg !8304

for.body21:                                       ; preds = %for.cond19
  %39 = load i32, i32* %i, align 4, !dbg !8305
  %idxprom22 = zext i32 %39 to i64, !dbg !8307
  %40 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8307
  %cc_streams = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %40, i32 0, i32 39, !dbg !8308
  %41 = load %struct.ClosedCaptionsStream*, %struct.ClosedCaptionsStream** %cc_streams, align 8, !dbg !8308
  %arrayidx23 = getelementptr inbounds %struct.ClosedCaptionsStream, %struct.ClosedCaptionsStream* %41, i64 %idxprom22, !dbg !8307
  store %struct.ClosedCaptionsStream* %arrayidx23, %struct.ClosedCaptionsStream** %ccs, align 8, !dbg !8309
  %42 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8310
  %m3u8_out24 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %42, i32 0, i32 49, !dbg !8311
  %43 = load %struct.AVIOContext*, %struct.AVIOContext** %m3u8_out24, align 8, !dbg !8311
  %call25 = call i32 (%struct.AVIOContext*, i8*, ...) @avio_printf(%struct.AVIOContext* %43, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.194, i32 0, i32 0)), !dbg !8312
  %44 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8313
  %m3u8_out26 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %44, i32 0, i32 49, !dbg !8314
  %45 = load %struct.AVIOContext*, %struct.AVIOContext** %m3u8_out26, align 8, !dbg !8314
  %46 = load %struct.ClosedCaptionsStream*, %struct.ClosedCaptionsStream** %ccs, align 8, !dbg !8315
  %ccgroup27 = getelementptr inbounds %struct.ClosedCaptionsStream, %struct.ClosedCaptionsStream* %46, i32 0, i32 0, !dbg !8316
  %47 = load i8*, i8** %ccgroup27, align 8, !dbg !8316
  %call28 = call i32 (%struct.AVIOContext*, i8*, ...) @avio_printf(%struct.AVIOContext* %45, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.195, i32 0, i32 0), i8* %47), !dbg !8317
  %48 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8318
  %m3u8_out29 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %48, i32 0, i32 49, !dbg !8319
  %49 = load %struct.AVIOContext*, %struct.AVIOContext** %m3u8_out29, align 8, !dbg !8319
  %50 = load %struct.ClosedCaptionsStream*, %struct.ClosedCaptionsStream** %ccs, align 8, !dbg !8320
  %instreamid = getelementptr inbounds %struct.ClosedCaptionsStream, %struct.ClosedCaptionsStream* %50, i32 0, i32 1, !dbg !8321
  %51 = load i8*, i8** %instreamid, align 8, !dbg !8321
  %call30 = call i32 (%struct.AVIOContext*, i8*, ...) @avio_printf(%struct.AVIOContext* %49, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.196, i32 0, i32 0), i8* %51), !dbg !8322
  %52 = load %struct.ClosedCaptionsStream*, %struct.ClosedCaptionsStream** %ccs, align 8, !dbg !8323
  %language = getelementptr inbounds %struct.ClosedCaptionsStream, %struct.ClosedCaptionsStream* %52, i32 0, i32 2, !dbg !8325
  %53 = load i8*, i8** %language, align 8, !dbg !8325
  %tobool31 = icmp ne i8* %53, null, !dbg !8323
  br i1 %tobool31, label %if.then32, label %if.end36, !dbg !8326

if.then32:                                        ; preds = %for.body21
  %54 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8327
  %m3u8_out33 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %54, i32 0, i32 49, !dbg !8328
  %55 = load %struct.AVIOContext*, %struct.AVIOContext** %m3u8_out33, align 8, !dbg !8328
  %56 = load %struct.ClosedCaptionsStream*, %struct.ClosedCaptionsStream** %ccs, align 8, !dbg !8329
  %language34 = getelementptr inbounds %struct.ClosedCaptionsStream, %struct.ClosedCaptionsStream* %56, i32 0, i32 2, !dbg !8330
  %57 = load i8*, i8** %language34, align 8, !dbg !8330
  %call35 = call i32 (%struct.AVIOContext*, i8*, ...) @avio_printf(%struct.AVIOContext* %55, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.197, i32 0, i32 0), i8* %57), !dbg !8331
  br label %if.end36, !dbg !8331

if.end36:                                         ; preds = %if.then32, %for.body21
  %58 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8332
  %m3u8_out37 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %58, i32 0, i32 49, !dbg !8333
  %59 = load %struct.AVIOContext*, %struct.AVIOContext** %m3u8_out37, align 8, !dbg !8333
  %60 = load %struct.ClosedCaptionsStream*, %struct.ClosedCaptionsStream** %ccs, align 8, !dbg !8334
  %instreamid38 = getelementptr inbounds %struct.ClosedCaptionsStream, %struct.ClosedCaptionsStream* %60, i32 0, i32 1, !dbg !8335
  %61 = load i8*, i8** %instreamid38, align 8, !dbg !8335
  %call39 = call i32 (%struct.AVIOContext*, i8*, ...) @avio_printf(%struct.AVIOContext* %59, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.198, i32 0, i32 0), i8* %61), !dbg !8336
  br label %for.inc40, !dbg !8337

for.inc40:                                        ; preds = %if.end36
  %62 = load i32, i32* %i, align 4, !dbg !8338
  %inc41 = add i32 %62, 1, !dbg !8338
  store i32 %inc41, i32* %i, align 4, !dbg !8338
  br label %for.cond19, !dbg !8340, !llvm.loop !8341

for.end42:                                        ; preds = %for.cond19
  store i32 0, i32* %i, align 4, !dbg !8343
  br label %for.cond43, !dbg !8345

for.cond43:                                       ; preds = %for.inc77, %for.end42
  %63 = load i32, i32* %i, align 4, !dbg !8346
  %64 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8349
  %nb_varstreams44 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %64, i32 0, i32 38, !dbg !8350
  %65 = load i32, i32* %nb_varstreams44, align 8, !dbg !8350
  %cmp45 = icmp ult i32 %63, %65, !dbg !8351
  br i1 %cmp45, label %for.body46, label %for.end79, !dbg !8352

for.body46:                                       ; preds = %for.cond43
  %66 = load i32, i32* %i, align 4, !dbg !8353
  %idxprom47 = zext i32 %66 to i64, !dbg !8355
  %67 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8355
  %var_streams48 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %67, i32 0, i32 37, !dbg !8356
  %68 = load %struct.VariantStream*, %struct.VariantStream** %var_streams48, align 8, !dbg !8356
  %arrayidx49 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %68, i64 %idxprom47, !dbg !8355
  store %struct.VariantStream* %arrayidx49, %struct.VariantStream** %vs, align 8, !dbg !8357
  %69 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8358
  %has_video = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %69, i32 0, i32 10, !dbg !8360
  %70 = load i32, i32* %has_video, align 8, !dbg !8360
  %tobool50 = icmp ne i32 %70, 0, !dbg !8358
  br i1 %tobool50, label %if.then55, label %lor.lhs.false51, !dbg !8361

lor.lhs.false51:                                  ; preds = %for.body46
  %71 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8362
  %has_subtitle = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %71, i32 0, i32 11, !dbg !8364
  %72 = load i32, i32* %has_subtitle, align 4, !dbg !8364
  %tobool52 = icmp ne i32 %72, 0, !dbg !8362
  br i1 %tobool52, label %if.then55, label %lor.lhs.false53, !dbg !8365

lor.lhs.false53:                                  ; preds = %lor.lhs.false51
  %73 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8366
  %agroup = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %73, i32 0, i32 41, !dbg !8368
  %74 = load i8*, i8** %agroup, align 8, !dbg !8368
  %tobool54 = icmp ne i8* %74, null, !dbg !8366
  br i1 %tobool54, label %if.end56, label %if.then55, !dbg !8369

if.then55:                                        ; preds = %lor.lhs.false53, %lor.lhs.false51, %for.body46
  br label %for.inc77, !dbg !8370

if.end56:                                         ; preds = %lor.lhs.false53
  %75 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8371
  %m3u8_name = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %75, i32 0, i32 29, !dbg !8372
  %76 = load i8*, i8** %m3u8_name, align 8, !dbg !8372
  %call57 = call i64 @strlen(i8* %76) #11, !dbg !8373
  %add = add i64 %call57, 1, !dbg !8374
  %conv = trunc i64 %add to i32, !dbg !8373
  store i32 %conv, i32* %m3u8_name_size, align 4, !dbg !8375
  %77 = load i32, i32* %m3u8_name_size, align 4, !dbg !8376
  %conv58 = sext i32 %77 to i64, !dbg !8376
  %call59 = call noalias i8* @av_malloc(i64 %conv58), !dbg !8377
  store i8* %call59, i8** %m3u8_rel_name, align 8, !dbg !8378
  %78 = load i8*, i8** %m3u8_rel_name, align 8, !dbg !8379
  %tobool60 = icmp ne i8* %78, null, !dbg !8379
  br i1 %tobool60, label %if.end62, label %if.then61, !dbg !8381

if.then61:                                        ; preds = %if.end56
  store i32 -12, i32* %ret, align 4, !dbg !8382
  br label %fail, !dbg !8384

if.end62:                                         ; preds = %if.end56
  %79 = load i8*, i8** %m3u8_rel_name, align 8, !dbg !8385
  %80 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8386
  %m3u8_name63 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %80, i32 0, i32 29, !dbg !8387
  %81 = load i8*, i8** %m3u8_name63, align 8, !dbg !8387
  %82 = load i32, i32* %m3u8_name_size, align 4, !dbg !8388
  %conv64 = sext i32 %82 to i64, !dbg !8388
  %call65 = call i64 @av_strlcpy(i8* %79, i8* %81, i64 %conv64), !dbg !8389
  %83 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8390
  %master_m3u8_url66 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %83, i32 0, i32 42, !dbg !8391
  %84 = load i8*, i8** %master_m3u8_url66, align 8, !dbg !8391
  %85 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8392
  %m3u8_name67 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %85, i32 0, i32 29, !dbg !8393
  %86 = load i8*, i8** %m3u8_name67, align 8, !dbg !8393
  %87 = load i8*, i8** %m3u8_rel_name, align 8, !dbg !8394
  %88 = load i32, i32* %m3u8_name_size, align 4, !dbg !8395
  %call68 = call i32 @get_relative_url(i8* %84, i8* %86, i8* %87, i32 %88), !dbg !8396
  store i32 %call68, i32* %ret, align 4, !dbg !8397
  %89 = load i32, i32* %ret, align 4, !dbg !8398
  %cmp69 = icmp slt i32 %89, 0, !dbg !8400
  br i1 %cmp69, label %if.then71, label %if.end72, !dbg !8401

if.then71:                                        ; preds = %if.end62
  %90 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8402
  %91 = bitcast %struct.AVFormatContext* %90 to i8*, !dbg !8402
  call void (i8*, i32, i8*, ...) @av_log(i8* %91, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.199, i32 0, i32 0)), !dbg !8404
  br label %fail, !dbg !8405

if.end72:                                         ; preds = %if.end62
  %92 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8406
  %m3u8_out73 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %92, i32 0, i32 49, !dbg !8407
  %93 = load %struct.AVIOContext*, %struct.AVIOContext** %m3u8_out73, align 8, !dbg !8407
  %94 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8408
  %agroup74 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %94, i32 0, i32 41, !dbg !8409
  %95 = load i8*, i8** %agroup74, align 8, !dbg !8409
  %96 = load i8*, i8** %m3u8_rel_name, align 8, !dbg !8410
  %97 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8411
  %language75 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %97, i32 0, i32 40, !dbg !8412
  %98 = load i8*, i8** %language75, align 8, !dbg !8412
  %99 = load i32, i32* %i, align 4, !dbg !8413
  %100 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8414
  %has_default_key = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %100, i32 0, i32 53, !dbg !8415
  %101 = load i32, i32* %has_default_key, align 4, !dbg !8415
  %tobool76 = icmp ne i32 %101, 0, !dbg !8414
  br i1 %tobool76, label %cond.true, label %cond.false, !dbg !8414

cond.true:                                        ; preds = %if.end72
  %102 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8416
  %is_default = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %102, i32 0, i32 39, !dbg !8418
  %103 = load i32, i32* %is_default, align 4, !dbg !8418
  br label %cond.end, !dbg !8419

cond.false:                                       ; preds = %if.end72
  br label %cond.end, !dbg !8420

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %103, %cond.true ], [ 1, %cond.false ], !dbg !8422
  call void @ff_hls_write_audio_rendition(%struct.AVIOContext* %93, i8* %95, i8* %96, i8* %98, i32 %99, i32 %cond), !dbg !8424
  %104 = bitcast i8** %m3u8_rel_name to i8*, !dbg !8425
  call void @av_freep(i8* %104), !dbg !8426
  br label %for.inc77, !dbg !8427

for.inc77:                                        ; preds = %cond.end, %if.then55
  %105 = load i32, i32* %i, align 4, !dbg !8428
  %inc78 = add i32 %105, 1, !dbg !8428
  store i32 %inc78, i32* %i, align 4, !dbg !8428
  br label %for.cond43, !dbg !8430, !llvm.loop !8431

for.end79:                                        ; preds = %for.cond43
  store i32 0, i32* %i, align 4, !dbg !8433
  br label %for.cond80, !dbg !8435

for.cond80:                                       ; preds = %for.inc257, %for.end79
  %106 = load i32, i32* %i, align 4, !dbg !8436
  %107 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8439
  %nb_varstreams81 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %107, i32 0, i32 38, !dbg !8440
  %108 = load i32, i32* %nb_varstreams81, align 8, !dbg !8440
  %cmp82 = icmp ult i32 %106, %108, !dbg !8441
  br i1 %cmp82, label %for.body84, label %for.end259, !dbg !8442

for.body84:                                       ; preds = %for.cond80
  %109 = load i32, i32* %i, align 4, !dbg !8443
  %idxprom85 = zext i32 %109 to i64, !dbg !8445
  %110 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8445
  %var_streams86 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %110, i32 0, i32 37, !dbg !8446
  %111 = load %struct.VariantStream*, %struct.VariantStream** %var_streams86, align 8, !dbg !8446
  %arrayidx87 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %111, i64 %idxprom85, !dbg !8445
  store %struct.VariantStream* %arrayidx87, %struct.VariantStream** %vs, align 8, !dbg !8447
  %112 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8448
  %m3u8_name88 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %112, i32 0, i32 29, !dbg !8449
  %113 = load i8*, i8** %m3u8_name88, align 8, !dbg !8449
  %call89 = call i64 @strlen(i8* %113) #11, !dbg !8450
  %add90 = add i64 %call89, 1, !dbg !8451
  %conv91 = trunc i64 %add90 to i32, !dbg !8450
  store i32 %conv91, i32* %m3u8_name_size, align 4, !dbg !8452
  %114 = load i32, i32* %m3u8_name_size, align 4, !dbg !8453
  %conv92 = sext i32 %114 to i64, !dbg !8453
  %call93 = call noalias i8* @av_malloc(i64 %conv92), !dbg !8454
  store i8* %call93, i8** %m3u8_rel_name, align 8, !dbg !8455
  %115 = load i8*, i8** %m3u8_rel_name, align 8, !dbg !8456
  %tobool94 = icmp ne i8* %115, null, !dbg !8456
  br i1 %tobool94, label %if.end96, label %if.then95, !dbg !8458

if.then95:                                        ; preds = %for.body84
  store i32 -12, i32* %ret, align 4, !dbg !8459
  br label %fail, !dbg !8461

if.end96:                                         ; preds = %for.body84
  %116 = load i8*, i8** %m3u8_rel_name, align 8, !dbg !8462
  %117 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8463
  %m3u8_name97 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %117, i32 0, i32 29, !dbg !8464
  %118 = load i8*, i8** %m3u8_name97, align 8, !dbg !8464
  %119 = load i32, i32* %m3u8_name_size, align 4, !dbg !8465
  %conv98 = sext i32 %119 to i64, !dbg !8465
  %call99 = call i64 @av_strlcpy(i8* %116, i8* %118, i64 %conv98), !dbg !8466
  %120 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8467
  %master_m3u8_url100 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %120, i32 0, i32 42, !dbg !8468
  %121 = load i8*, i8** %master_m3u8_url100, align 8, !dbg !8468
  %122 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8469
  %m3u8_name101 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %122, i32 0, i32 29, !dbg !8470
  %123 = load i8*, i8** %m3u8_name101, align 8, !dbg !8470
  %124 = load i8*, i8** %m3u8_rel_name, align 8, !dbg !8471
  %125 = load i32, i32* %m3u8_name_size, align 4, !dbg !8472
  %call102 = call i32 @get_relative_url(i8* %121, i8* %123, i8* %124, i32 %125), !dbg !8473
  store i32 %call102, i32* %ret, align 4, !dbg !8474
  %126 = load i32, i32* %ret, align 4, !dbg !8475
  %cmp103 = icmp slt i32 %126, 0, !dbg !8477
  br i1 %cmp103, label %if.then105, label %if.end106, !dbg !8478

if.then105:                                       ; preds = %if.end96
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.199, i32 0, i32 0)), !dbg !8479
  br label %fail, !dbg !8481

if.end106:                                        ; preds = %if.end96
  store %struct.AVStream* null, %struct.AVStream** %vid_st, align 8, !dbg !8482
  store %struct.AVStream* null, %struct.AVStream** %aud_st, align 8, !dbg !8483
  store i32 0, i32* %j, align 4, !dbg !8484
  br label %for.cond107, !dbg !8486

for.cond107:                                      ; preds = %for.inc133, %if.end106
  %127 = load i32, i32* %j, align 4, !dbg !8487
  %128 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8490
  %nb_streams = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %128, i32 0, i32 37, !dbg !8491
  %129 = load i32, i32* %nb_streams, align 4, !dbg !8491
  %cmp108 = icmp ult i32 %127, %129, !dbg !8492
  br i1 %cmp108, label %for.body110, label %for.end135, !dbg !8493

for.body110:                                      ; preds = %for.cond107
  %130 = load i32, i32* %j, align 4, !dbg !8494
  %idxprom111 = zext i32 %130 to i64, !dbg !8497
  %131 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8497
  %streams = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %131, i32 0, i32 34, !dbg !8498
  %132 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !8498
  %arrayidx112 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %132, i64 %idxprom111, !dbg !8497
  %133 = load %struct.AVStream*, %struct.AVStream** %arrayidx112, align 8, !dbg !8497
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %133, i32 0, i32 19, !dbg !8499
  %134 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !8499
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %134, i32 0, i32 0, !dbg !8500
  %135 = load i32, i32* %codec_type, align 8, !dbg !8500
  %cmp113 = icmp eq i32 %135, 0, !dbg !8501
  br i1 %cmp113, label %if.then115, label %if.else119, !dbg !8502

if.then115:                                       ; preds = %for.body110
  %136 = load i32, i32* %j, align 4, !dbg !8503
  %idxprom116 = zext i32 %136 to i64, !dbg !8504
  %137 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8504
  %streams117 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %137, i32 0, i32 34, !dbg !8505
  %138 = load %struct.AVStream**, %struct.AVStream*** %streams117, align 8, !dbg !8505
  %arrayidx118 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %138, i64 %idxprom116, !dbg !8504
  %139 = load %struct.AVStream*, %struct.AVStream** %arrayidx118, align 8, !dbg !8504
  store %struct.AVStream* %139, %struct.AVStream** %vid_st, align 8, !dbg !8506
  br label %if.end132, !dbg !8507

if.else119:                                       ; preds = %for.body110
  %140 = load i32, i32* %j, align 4, !dbg !8508
  %idxprom120 = zext i32 %140 to i64, !dbg !8510
  %141 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8510
  %streams121 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %141, i32 0, i32 34, !dbg !8511
  %142 = load %struct.AVStream**, %struct.AVStream*** %streams121, align 8, !dbg !8511
  %arrayidx122 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %142, i64 %idxprom120, !dbg !8510
  %143 = load %struct.AVStream*, %struct.AVStream** %arrayidx122, align 8, !dbg !8510
  %codecpar123 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %143, i32 0, i32 19, !dbg !8512
  %144 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar123, align 8, !dbg !8512
  %codec_type124 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %144, i32 0, i32 0, !dbg !8513
  %145 = load i32, i32* %codec_type124, align 8, !dbg !8513
  %cmp125 = icmp eq i32 %145, 1, !dbg !8514
  br i1 %cmp125, label %if.then127, label %if.end131, !dbg !8515

if.then127:                                       ; preds = %if.else119
  %146 = load i32, i32* %j, align 4, !dbg !8516
  %idxprom128 = zext i32 %146 to i64, !dbg !8517
  %147 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8517
  %streams129 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %147, i32 0, i32 34, !dbg !8518
  %148 = load %struct.AVStream**, %struct.AVStream*** %streams129, align 8, !dbg !8518
  %arrayidx130 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %148, i64 %idxprom128, !dbg !8517
  %149 = load %struct.AVStream*, %struct.AVStream** %arrayidx130, align 8, !dbg !8517
  store %struct.AVStream* %149, %struct.AVStream** %aud_st, align 8, !dbg !8519
  br label %if.end131, !dbg !8520

if.end131:                                        ; preds = %if.then127, %if.else119
  br label %if.end132

if.end132:                                        ; preds = %if.end131, %if.then115
  br label %for.inc133, !dbg !8521

for.inc133:                                       ; preds = %if.end132
  %150 = load i32, i32* %j, align 4, !dbg !8522
  %inc134 = add i32 %150, 1, !dbg !8522
  store i32 %inc134, i32* %j, align 4, !dbg !8522
  br label %for.cond107, !dbg !8524, !llvm.loop !8525

for.end135:                                       ; preds = %for.cond107
  %151 = load %struct.AVStream*, %struct.AVStream** %vid_st, align 8, !dbg !8527
  %tobool136 = icmp ne %struct.AVStream* %151, null, !dbg !8527
  br i1 %tobool136, label %if.end139, label %land.lhs.true, !dbg !8529

land.lhs.true:                                    ; preds = %for.end135
  %152 = load %struct.AVStream*, %struct.AVStream** %aud_st, align 8, !dbg !8530
  %tobool137 = icmp ne %struct.AVStream* %152, null, !dbg !8530
  br i1 %tobool137, label %if.end139, label %if.then138, !dbg !8532

if.then138:                                       ; preds = %land.lhs.true
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.200, i32 0, i32 0)), !dbg !8533
  br label %for.inc257, !dbg !8535

if.end139:                                        ; preds = %land.lhs.true, %for.end135
  %153 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8536
  %agroup140 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %153, i32 0, i32 41, !dbg !8538
  %154 = load i8*, i8** %agroup140, align 8, !dbg !8538
  %tobool141 = icmp ne i8* %154, null, !dbg !8536
  br i1 %tobool141, label %if.then142, label %if.end185, !dbg !8539

if.then142:                                       ; preds = %if.end139
  store i32 0, i32* %j, align 4, !dbg !8540
  br label %for.cond143, !dbg !8543

for.cond143:                                      ; preds = %for.inc182, %if.then142
  %155 = load i32, i32* %j, align 4, !dbg !8544
  %156 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8547
  %nb_varstreams144 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %156, i32 0, i32 38, !dbg !8548
  %157 = load i32, i32* %nb_varstreams144, align 8, !dbg !8548
  %cmp145 = icmp ult i32 %155, %157, !dbg !8549
  br i1 %cmp145, label %for.body147, label %for.end184, !dbg !8550

for.body147:                                      ; preds = %for.cond143
  %158 = load i32, i32* %j, align 4, !dbg !8551
  %idxprom148 = zext i32 %158 to i64, !dbg !8553
  %159 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8553
  %var_streams149 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %159, i32 0, i32 37, !dbg !8554
  %160 = load %struct.VariantStream*, %struct.VariantStream** %var_streams149, align 8, !dbg !8554
  %arrayidx150 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %160, i64 %idxprom148, !dbg !8553
  store %struct.VariantStream* %arrayidx150, %struct.VariantStream** %temp_vs, align 8, !dbg !8555
  %161 = load %struct.VariantStream*, %struct.VariantStream** %temp_vs, align 8, !dbg !8556
  %has_video151 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %161, i32 0, i32 10, !dbg !8558
  %162 = load i32, i32* %has_video151, align 8, !dbg !8558
  %tobool152 = icmp ne i32 %162, 0, !dbg !8556
  br i1 %tobool152, label %if.end181, label %land.lhs.true153, !dbg !8559

land.lhs.true153:                                 ; preds = %for.body147
  %163 = load %struct.VariantStream*, %struct.VariantStream** %temp_vs, align 8, !dbg !8560
  %has_subtitle154 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %163, i32 0, i32 11, !dbg !8562
  %164 = load i32, i32* %has_subtitle154, align 4, !dbg !8562
  %tobool155 = icmp ne i32 %164, 0, !dbg !8560
  br i1 %tobool155, label %if.end181, label %land.lhs.true156, !dbg !8563

land.lhs.true156:                                 ; preds = %land.lhs.true153
  %165 = load %struct.VariantStream*, %struct.VariantStream** %temp_vs, align 8, !dbg !8564
  %agroup157 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %165, i32 0, i32 41, !dbg !8565
  %166 = load i8*, i8** %agroup157, align 8, !dbg !8565
  %tobool158 = icmp ne i8* %166, null, !dbg !8564
  br i1 %tobool158, label %land.lhs.true159, label %if.end181, !dbg !8566

land.lhs.true159:                                 ; preds = %land.lhs.true156
  %167 = load %struct.VariantStream*, %struct.VariantStream** %temp_vs, align 8, !dbg !8567
  %agroup160 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %167, i32 0, i32 41, !dbg !8568
  %168 = load i8*, i8** %agroup160, align 8, !dbg !8568
  %169 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8569
  %agroup161 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %169, i32 0, i32 41, !dbg !8570
  %170 = load i8*, i8** %agroup161, align 8, !dbg !8570
  %call162 = call i32 @av_strcasecmp(i8* %168, i8* %170), !dbg !8571
  %tobool163 = icmp ne i32 %call162, 0, !dbg !8571
  br i1 %tobool163, label %if.end181, label %if.then164, !dbg !8572

if.then164:                                       ; preds = %land.lhs.true159
  %171 = load %struct.AVStream*, %struct.AVStream** %aud_st, align 8, !dbg !8574
  %tobool165 = icmp ne %struct.AVStream* %171, null, !dbg !8574
  br i1 %tobool165, label %if.end169, label %if.then166, !dbg !8577

if.then166:                                       ; preds = %if.then164
  %172 = load %struct.VariantStream*, %struct.VariantStream** %temp_vs, align 8, !dbg !8578
  %streams167 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %172, i32 0, i32 34, !dbg !8579
  %173 = load %struct.AVStream**, %struct.AVStream*** %streams167, align 8, !dbg !8579
  %arrayidx168 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %173, i64 0, !dbg !8578
  %174 = load %struct.AVStream*, %struct.AVStream** %arrayidx168, align 8, !dbg !8578
  store %struct.AVStream* %174, %struct.AVStream** %aud_st, align 8, !dbg !8580
  br label %if.end169, !dbg !8581

if.end169:                                        ; preds = %if.then166, %if.then164
  %175 = load %struct.VariantStream*, %struct.VariantStream** %temp_vs, align 8, !dbg !8582
  %streams170 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %175, i32 0, i32 34, !dbg !8584
  %176 = load %struct.AVStream**, %struct.AVStream*** %streams170, align 8, !dbg !8584
  %arrayidx171 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %176, i64 0, !dbg !8582
  %177 = load %struct.AVStream*, %struct.AVStream** %arrayidx171, align 8, !dbg !8582
  %codecpar172 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %177, i32 0, i32 19, !dbg !8585
  %178 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar172, align 8, !dbg !8585
  %bit_rate = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %178, i32 0, i32 6, !dbg !8586
  %179 = load i64, i64* %bit_rate, align 8, !dbg !8586
  %180 = load %struct.AVStream*, %struct.AVStream** %aud_st, align 8, !dbg !8587
  %codecpar173 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %180, i32 0, i32 19, !dbg !8588
  %181 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar173, align 8, !dbg !8588
  %bit_rate174 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %181, i32 0, i32 6, !dbg !8589
  %182 = load i64, i64* %bit_rate174, align 8, !dbg !8589
  %cmp175 = icmp sgt i64 %179, %182, !dbg !8590
  br i1 %cmp175, label %if.then177, label %if.end180, !dbg !8591

if.then177:                                       ; preds = %if.end169
  %183 = load %struct.VariantStream*, %struct.VariantStream** %temp_vs, align 8, !dbg !8592
  %streams178 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %183, i32 0, i32 34, !dbg !8593
  %184 = load %struct.AVStream**, %struct.AVStream*** %streams178, align 8, !dbg !8593
  %arrayidx179 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %184, i64 0, !dbg !8592
  %185 = load %struct.AVStream*, %struct.AVStream** %arrayidx179, align 8, !dbg !8592
  store %struct.AVStream* %185, %struct.AVStream** %aud_st, align 8, !dbg !8594
  br label %if.end180, !dbg !8595

if.end180:                                        ; preds = %if.then177, %if.end169
  br label %if.end181, !dbg !8596

if.end181:                                        ; preds = %if.end180, %land.lhs.true159, %land.lhs.true156, %land.lhs.true153, %for.body147
  br label %for.inc182, !dbg !8597

for.inc182:                                       ; preds = %if.end181
  %186 = load i32, i32* %j, align 4, !dbg !8598
  %inc183 = add i32 %186, 1, !dbg !8598
  store i32 %inc183, i32* %j, align 4, !dbg !8598
  br label %for.cond143, !dbg !8600, !llvm.loop !8601

for.end184:                                       ; preds = %for.cond143
  br label %if.end185, !dbg !8603

if.end185:                                        ; preds = %for.end184, %if.end139
  store i32 0, i32* %bandwidth, align 4, !dbg !8604
  %187 = load %struct.AVStream*, %struct.AVStream** %vid_st, align 8, !dbg !8605
  %tobool186 = icmp ne %struct.AVStream* %187, null, !dbg !8605
  br i1 %tobool186, label %if.then187, label %if.end192, !dbg !8607

if.then187:                                       ; preds = %if.end185
  %188 = load %struct.AVStream*, %struct.AVStream** %vid_st, align 8, !dbg !8608
  %call188 = call i64 @get_stream_bit_rate(%struct.AVStream* %188), !dbg !8609
  %189 = load i32, i32* %bandwidth, align 4, !dbg !8610
  %conv189 = sext i32 %189 to i64, !dbg !8610
  %add190 = add nsw i64 %conv189, %call188, !dbg !8610
  %conv191 = trunc i64 %add190 to i32, !dbg !8610
  store i32 %conv191, i32* %bandwidth, align 4, !dbg !8610
  br label %if.end192, !dbg !8611

if.end192:                                        ; preds = %if.then187, %if.end185
  %190 = load %struct.AVStream*, %struct.AVStream** %aud_st, align 8, !dbg !8612
  %tobool193 = icmp ne %struct.AVStream* %190, null, !dbg !8612
  br i1 %tobool193, label %if.then194, label %if.end199, !dbg !8614

if.then194:                                       ; preds = %if.end192
  %191 = load %struct.AVStream*, %struct.AVStream** %aud_st, align 8, !dbg !8615
  %call195 = call i64 @get_stream_bit_rate(%struct.AVStream* %191), !dbg !8616
  %192 = load i32, i32* %bandwidth, align 4, !dbg !8617
  %conv196 = sext i32 %192 to i64, !dbg !8617
  %add197 = add nsw i64 %conv196, %call195, !dbg !8617
  %conv198 = trunc i64 %add197 to i32, !dbg !8617
  store i32 %conv198, i32* %bandwidth, align 4, !dbg !8617
  br label %if.end199, !dbg !8618

if.end199:                                        ; preds = %if.then194, %if.end192
  %193 = load i32, i32* %bandwidth, align 4, !dbg !8619
  %div = sdiv i32 %193, 10, !dbg !8620
  %194 = load i32, i32* %bandwidth, align 4, !dbg !8621
  %add200 = add nsw i32 %194, %div, !dbg !8621
  store i32 %add200, i32* %bandwidth, align 4, !dbg !8621
  store i8* null, i8** %ccgroup, align 8, !dbg !8622
  %195 = load %struct.AVStream*, %struct.AVStream** %vid_st, align 8, !dbg !8623
  %tobool201 = icmp ne %struct.AVStream* %195, null, !dbg !8623
  br i1 %tobool201, label %land.lhs.true202, label %if.end230, !dbg !8625

land.lhs.true202:                                 ; preds = %if.end199
  %196 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8626
  %ccgroup203 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %196, i32 0, i32 42, !dbg !8628
  %197 = load i8*, i8** %ccgroup203, align 8, !dbg !8628
  %tobool204 = icmp ne i8* %197, null, !dbg !8626
  br i1 %tobool204, label %if.then205, label %if.end230, !dbg !8629

if.then205:                                       ; preds = %land.lhs.true202
  store i32 0, i32* %j, align 4, !dbg !8630
  br label %for.cond206, !dbg !8633

for.cond206:                                      ; preds = %for.inc221, %if.then205
  %198 = load i32, i32* %j, align 4, !dbg !8634
  %199 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8637
  %nb_ccstreams207 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %199, i32 0, i32 40, !dbg !8638
  %200 = load i32, i32* %nb_ccstreams207, align 8, !dbg !8638
  %cmp208 = icmp ult i32 %198, %200, !dbg !8639
  br i1 %cmp208, label %for.body210, label %for.end223, !dbg !8640

for.body210:                                      ; preds = %for.cond206
  %201 = load i32, i32* %j, align 4, !dbg !8641
  %idxprom211 = zext i32 %201 to i64, !dbg !8643
  %202 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8643
  %cc_streams212 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %202, i32 0, i32 39, !dbg !8644
  %203 = load %struct.ClosedCaptionsStream*, %struct.ClosedCaptionsStream** %cc_streams212, align 8, !dbg !8644
  %arrayidx213 = getelementptr inbounds %struct.ClosedCaptionsStream, %struct.ClosedCaptionsStream* %203, i64 %idxprom211, !dbg !8643
  store %struct.ClosedCaptionsStream* %arrayidx213, %struct.ClosedCaptionsStream** %ccs, align 8, !dbg !8645
  %204 = load %struct.ClosedCaptionsStream*, %struct.ClosedCaptionsStream** %ccs, align 8, !dbg !8646
  %ccgroup214 = getelementptr inbounds %struct.ClosedCaptionsStream, %struct.ClosedCaptionsStream* %204, i32 0, i32 0, !dbg !8648
  %205 = load i8*, i8** %ccgroup214, align 8, !dbg !8648
  %206 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8649
  %ccgroup215 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %206, i32 0, i32 42, !dbg !8650
  %207 = load i8*, i8** %ccgroup215, align 8, !dbg !8650
  %call216 = call i32 @av_strcasecmp(i8* %205, i8* %207), !dbg !8651
  %tobool217 = icmp ne i32 %call216, 0, !dbg !8651
  br i1 %tobool217, label %if.end220, label %if.then218, !dbg !8652

if.then218:                                       ; preds = %for.body210
  %208 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8653
  %ccgroup219 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %208, i32 0, i32 42, !dbg !8655
  %209 = load i8*, i8** %ccgroup219, align 8, !dbg !8655
  store i8* %209, i8** %ccgroup, align 8, !dbg !8656
  br label %for.end223, !dbg !8657

if.end220:                                        ; preds = %for.body210
  br label %for.inc221, !dbg !8658

for.inc221:                                       ; preds = %if.end220
  %210 = load i32, i32* %j, align 4, !dbg !8659
  %inc222 = add i32 %210, 1, !dbg !8659
  store i32 %inc222, i32* %j, align 4, !dbg !8659
  br label %for.cond206, !dbg !8661, !llvm.loop !8662

for.end223:                                       ; preds = %if.then218, %for.cond206
  %211 = load i32, i32* %j, align 4, !dbg !8664
  %212 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8666
  %nb_ccstreams224 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %212, i32 0, i32 40, !dbg !8667
  %213 = load i32, i32* %nb_ccstreams224, align 8, !dbg !8667
  %cmp225 = icmp eq i32 %211, %213, !dbg !8668
  br i1 %cmp225, label %if.then227, label %if.end229, !dbg !8669

if.then227:                                       ; preds = %for.end223
  %214 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8670
  %ccgroup228 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %214, i32 0, i32 42, !dbg !8671
  %215 = load i8*, i8** %ccgroup228, align 8, !dbg !8671
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.201, i32 0, i32 0), i8* %215), !dbg !8672
  br label %if.end229, !dbg !8672

if.end229:                                        ; preds = %if.then227, %for.end223
  br label %if.end230, !dbg !8673

if.end230:                                        ; preds = %if.end229, %land.lhs.true202, %if.end199
  %216 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8674
  %has_default_key231 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %216, i32 0, i32 53, !dbg !8676
  %217 = load i32, i32* %has_default_key231, align 4, !dbg !8676
  %tobool232 = icmp ne i32 %217, 0, !dbg !8674
  br i1 %tobool232, label %lor.lhs.false233, label %if.then235, !dbg !8677

lor.lhs.false233:                                 ; preds = %if.end230
  %218 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8678
  %has_video_m3u8 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %218, i32 0, i32 54, !dbg !8680
  %219 = load i32, i32* %has_video_m3u8, align 8, !dbg !8680
  %tobool234 = icmp ne i32 %219, 0, !dbg !8678
  br i1 %tobool234, label %if.else243, label %if.then235, !dbg !8681

if.then235:                                       ; preds = %lor.lhs.false233, %if.end230
  %220 = load %struct.AVStream*, %struct.AVStream** %vid_st, align 8, !dbg !8682
  %221 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8684
  %m3u8_out236 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %221, i32 0, i32 49, !dbg !8685
  %222 = load %struct.AVIOContext*, %struct.AVIOContext** %m3u8_out236, align 8, !dbg !8685
  %223 = load i32, i32* %bandwidth, align 4, !dbg !8686
  %224 = load i8*, i8** %m3u8_rel_name, align 8, !dbg !8687
  %225 = load %struct.AVStream*, %struct.AVStream** %aud_st, align 8, !dbg !8688
  %tobool237 = icmp ne %struct.AVStream* %225, null, !dbg !8688
  br i1 %tobool237, label %cond.true238, label %cond.false240, !dbg !8688

cond.true238:                                     ; preds = %if.then235
  %226 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8689
  %agroup239 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %226, i32 0, i32 41, !dbg !8691
  %227 = load i8*, i8** %agroup239, align 8, !dbg !8691
  br label %cond.end241, !dbg !8692

cond.false240:                                    ; preds = %if.then235
  br label %cond.end241, !dbg !8693

cond.end241:                                      ; preds = %cond.false240, %cond.true238
  %cond242 = phi i8* [ %227, %cond.true238 ], [ null, %cond.false240 ], !dbg !8695
  %228 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8697
  %codec_attr = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %228, i32 0, i32 35, !dbg !8698
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %codec_attr, i32 0, i32 0, !dbg !8697
  %229 = load i8*, i8** %ccgroup, align 8, !dbg !8699
  call void @ff_hls_write_stream_info(%struct.AVStream* %220, %struct.AVIOContext* %222, i32 %223, i8* %224, i8* %cond242, i8* %arraydecay, i8* %229), !dbg !8700
  br label %if.end256, !dbg !8701

if.else243:                                       ; preds = %lor.lhs.false233
  %230 = load %struct.AVStream*, %struct.AVStream** %vid_st, align 8, !dbg !8702
  %tobool244 = icmp ne %struct.AVStream* %230, null, !dbg !8702
  br i1 %tobool244, label %if.then245, label %if.end255, !dbg !8705

if.then245:                                       ; preds = %if.else243
  %231 = load %struct.AVStream*, %struct.AVStream** %vid_st, align 8, !dbg !8706
  %232 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8708
  %m3u8_out246 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %232, i32 0, i32 49, !dbg !8709
  %233 = load %struct.AVIOContext*, %struct.AVIOContext** %m3u8_out246, align 8, !dbg !8709
  %234 = load i32, i32* %bandwidth, align 4, !dbg !8710
  %235 = load i8*, i8** %m3u8_rel_name, align 8, !dbg !8711
  %236 = load %struct.AVStream*, %struct.AVStream** %aud_st, align 8, !dbg !8712
  %tobool247 = icmp ne %struct.AVStream* %236, null, !dbg !8712
  br i1 %tobool247, label %cond.true248, label %cond.false250, !dbg !8712

cond.true248:                                     ; preds = %if.then245
  %237 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8713
  %agroup249 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %237, i32 0, i32 41, !dbg !8715
  %238 = load i8*, i8** %agroup249, align 8, !dbg !8715
  br label %cond.end251, !dbg !8716

cond.false250:                                    ; preds = %if.then245
  br label %cond.end251, !dbg !8717

cond.end251:                                      ; preds = %cond.false250, %cond.true248
  %cond252 = phi i8* [ %238, %cond.true248 ], [ null, %cond.false250 ], !dbg !8719
  %239 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8721
  %codec_attr253 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %239, i32 0, i32 35, !dbg !8722
  %arraydecay254 = getelementptr inbounds [128 x i8], [128 x i8]* %codec_attr253, i32 0, i32 0, !dbg !8721
  %240 = load i8*, i8** %ccgroup, align 8, !dbg !8723
  call void @ff_hls_write_stream_info(%struct.AVStream* %231, %struct.AVIOContext* %233, i32 %234, i8* %235, i8* %cond252, i8* %arraydecay254, i8* %240), !dbg !8724
  br label %if.end255, !dbg !8725

if.end255:                                        ; preds = %cond.end251, %if.else243
  br label %if.end256

if.end256:                                        ; preds = %if.end255, %cond.end241
  %241 = bitcast i8** %m3u8_rel_name to i8*, !dbg !8726
  call void @av_freep(i8* %241), !dbg !8727
  br label %for.inc257, !dbg !8728

for.inc257:                                       ; preds = %if.end256, %if.then138
  %242 = load i32, i32* %i, align 4, !dbg !8729
  %inc258 = add i32 %242, 1, !dbg !8729
  store i32 %inc258, i32* %i, align 4, !dbg !8729
  br label %for.cond80, !dbg !8731, !llvm.loop !8732

for.end259:                                       ; preds = %for.cond80
  br label %fail, !dbg !8734

fail:                                             ; preds = %for.end259, %if.then105, %if.then95, %if.then71, %if.then61, %if.then15
  %243 = load i32, i32* %ret, align 4, !dbg !8736
  %cmp260 = icmp sge i32 %243, 0, !dbg !8738
  br i1 %cmp260, label %if.then262, label %if.end264, !dbg !8739

if.then262:                                       ; preds = %fail
  %244 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8740
  %master_m3u8_created263 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %244, i32 0, i32 41, !dbg !8741
  store i32 1, i32* %master_m3u8_created263, align 4, !dbg !8742
  br label %if.end264, !dbg !8740

if.end264:                                        ; preds = %if.then262, %fail
  %245 = bitcast i8** %m3u8_rel_name to i8*, !dbg !8743
  call void @av_freep(i8* %245), !dbg !8744
  %246 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8745
  %247 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8746
  %m3u8_out265 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %247, i32 0, i32 49, !dbg !8747
  %248 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8748
  %master_m3u8_url266 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %248, i32 0, i32 42, !dbg !8749
  %249 = load i8*, i8** %master_m3u8_url266, align 8, !dbg !8749
  call void @hlsenc_io_close(%struct.AVFormatContext* %246, %struct.AVIOContext** %m3u8_out265, i8* %249), !dbg !8750
  %250 = load i32, i32* %ret, align 4, !dbg !8751
  store i32 %250, i32* %retval, align 4, !dbg !8752
  br label %return, !dbg !8752

return:                                           ; preds = %if.end264, %if.then11, %if.then3
  %251 = load i32, i32* %retval, align 4, !dbg !8753
  ret i32 %251, !dbg !8753
}

declare void @ff_hls_write_playlist_version(%struct.AVIOContext*, i32) #1

; Function Attrs: nounwind uwtable
define internal i32 @get_relative_url(i8* %master_url, i8* %media_url, i8* %rel_url, i32 %rel_url_buf_size) #0 !dbg !8754 {
entry:
  %retval = alloca i32, align 4
  %master_url.addr = alloca i8*, align 8
  %media_url.addr = alloca i8*, align 8
  %rel_url.addr = alloca i8*, align 8
  %rel_url_buf_size.addr = alloca i32, align 4
  %p = alloca i8*, align 8
  %base_len = alloca i32, align 4
  store i8* %master_url, i8** %master_url.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %master_url.addr, metadata !8757, metadata !2335), !dbg !8758
  store i8* %media_url, i8** %media_url.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %media_url.addr, metadata !8759, metadata !2335), !dbg !8760
  store i8* %rel_url, i8** %rel_url.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rel_url.addr, metadata !8761, metadata !2335), !dbg !8762
  store i32 %rel_url_buf_size, i32* %rel_url_buf_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rel_url_buf_size.addr, metadata !8763, metadata !2335), !dbg !8764
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8765, metadata !2335), !dbg !8766
  store i8* null, i8** %p, align 8, !dbg !8766
  call void @llvm.dbg.declare(metadata i32* %base_len, metadata !8767, metadata !2335), !dbg !8768
  store i32 -1, i32* %base_len, align 4, !dbg !8768
  %0 = load i8*, i8** %master_url.addr, align 8, !dbg !8769
  %call = call i8* @strrchr(i8* %0, i32 47) #11, !dbg !8770
  %tobool = icmp ne i8* %call, null, !dbg !8770
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8770

cond.true:                                        ; preds = %entry
  %1 = load i8*, i8** %master_url.addr, align 8, !dbg !8771
  %call1 = call i8* @strrchr(i8* %1, i32 47) #11, !dbg !8773
  br label %cond.end, !dbg !8774

cond.false:                                       ; preds = %entry
  %2 = load i8*, i8** %master_url.addr, align 8, !dbg !8775
  %call2 = call i8* @strrchr(i8* %2, i32 92) #11, !dbg !8776
  br label %cond.end, !dbg !8777

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call1, %cond.true ], [ %call2, %cond.false ], !dbg !8779
  store i8* %cond, i8** %p, align 8, !dbg !8781
  %3 = load i8*, i8** %p, align 8, !dbg !8782
  %tobool3 = icmp ne i8* %3, null, !dbg !8782
  br i1 %tobool3, label %if.then, label %if.end18, !dbg !8784

if.then:                                          ; preds = %cond.end
  %4 = load i8*, i8** %p, align 8, !dbg !8785
  %5 = load i8*, i8** %master_url.addr, align 8, !dbg !8787
  %sub.ptr.lhs.cast = ptrtoint i8* %4 to i64, !dbg !8788
  %sub.ptr.rhs.cast = ptrtoint i8* %5 to i64, !dbg !8788
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8788
  %cmp = icmp sge i64 %sub.ptr.sub, 0, !dbg !8789
  br i1 %cmp, label %cond.true4, label %cond.false8, !dbg !8790

cond.true4:                                       ; preds = %if.then
  %6 = load i8*, i8** %p, align 8, !dbg !8791
  %7 = load i8*, i8** %master_url.addr, align 8, !dbg !8793
  %sub.ptr.lhs.cast5 = ptrtoint i8* %6 to i64, !dbg !8794
  %sub.ptr.rhs.cast6 = ptrtoint i8* %7 to i64, !dbg !8794
  %sub.ptr.sub7 = sub i64 %sub.ptr.lhs.cast5, %sub.ptr.rhs.cast6, !dbg !8794
  br label %cond.end12, !dbg !8795

cond.false8:                                      ; preds = %if.then
  %8 = load i8*, i8** %p, align 8, !dbg !8796
  %9 = load i8*, i8** %master_url.addr, align 8, !dbg !8798
  %sub.ptr.lhs.cast9 = ptrtoint i8* %8 to i64, !dbg !8799
  %sub.ptr.rhs.cast10 = ptrtoint i8* %9 to i64, !dbg !8799
  %sub.ptr.sub11 = sub i64 %sub.ptr.lhs.cast9, %sub.ptr.rhs.cast10, !dbg !8799
  %sub = sub nsw i64 0, %sub.ptr.sub11, !dbg !8800
  br label %cond.end12, !dbg !8801

cond.end12:                                       ; preds = %cond.false8, %cond.true4
  %cond13 = phi i64 [ %sub.ptr.sub7, %cond.true4 ], [ %sub, %cond.false8 ], !dbg !8802
  %conv = trunc i64 %cond13 to i32, !dbg !8804
  store i32 %conv, i32* %base_len, align 4, !dbg !8805
  %10 = load i8*, i8** %master_url.addr, align 8, !dbg !8806
  %11 = load i8*, i8** %media_url.addr, align 8, !dbg !8808
  %12 = load i32, i32* %base_len, align 4, !dbg !8809
  %conv14 = sext i32 %12 to i64, !dbg !8809
  %call15 = call i32 @av_strncasecmp(i8* %10, i8* %11, i64 %conv14), !dbg !8810
  %tobool16 = icmp ne i32 %call15, 0, !dbg !8810
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !8811

if.then17:                                        ; preds = %cond.end12
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.202, i32 0, i32 0)), !dbg !8812
  store i32 -22, i32* %retval, align 4, !dbg !8814
  br label %return, !dbg !8814

if.end:                                           ; preds = %cond.end12
  br label %if.end18, !dbg !8815

if.end18:                                         ; preds = %if.end, %cond.end
  %13 = load i8*, i8** %rel_url.addr, align 8, !dbg !8816
  %14 = load i32, i32* %base_len, align 4, !dbg !8817
  %add = add nsw i32 %14, 1, !dbg !8818
  %idxprom = sext i32 %add to i64, !dbg !8819
  %15 = load i8*, i8** %media_url.addr, align 8, !dbg !8819
  %arrayidx = getelementptr inbounds i8, i8* %15, i64 %idxprom, !dbg !8819
  %16 = load i32, i32* %rel_url_buf_size.addr, align 4, !dbg !8820
  %conv19 = sext i32 %16 to i64, !dbg !8820
  %call20 = call i64 @av_strlcpy(i8* %13, i8* %arrayidx, i64 %conv19), !dbg !8821
  store i32 0, i32* %retval, align 4, !dbg !8822
  br label %return, !dbg !8822

return:                                           ; preds = %if.end18, %if.then17
  %17 = load i32, i32* %retval, align 4, !dbg !8823
  ret i32 %17, !dbg !8823
}

declare void @ff_hls_write_audio_rendition(%struct.AVIOContext*, i8*, i8*, i8*, i32, i32) #1

; Function Attrs: nounwind uwtable
define internal i64 @get_stream_bit_rate(%struct.AVStream* %stream) #0 !dbg !8824 {
entry:
  %retval = alloca i64, align 8
  %stream.addr = alloca %struct.AVStream*, align 8
  %props = alloca %struct.AVCPBProperties*, align 8
  store %struct.AVStream* %stream, %struct.AVStream** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %stream.addr, metadata !8827, metadata !2335), !dbg !8828
  call void @llvm.dbg.declare(metadata %struct.AVCPBProperties** %props, metadata !8829, metadata !2335), !dbg !8830
  %0 = load %struct.AVStream*, %struct.AVStream** %stream.addr, align 8, !dbg !8831
  %call = call i8* @av_stream_get_side_data(%struct.AVStream* %0, i32 10, i32* null), !dbg !8832
  %1 = bitcast i8* %call to %struct.AVCPBProperties*, !dbg !8833
  store %struct.AVCPBProperties* %1, %struct.AVCPBProperties** %props, align 8, !dbg !8830
  %2 = load %struct.AVStream*, %struct.AVStream** %stream.addr, align 8, !dbg !8834
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %2, i32 0, i32 19, !dbg !8836
  %3 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !8836
  %bit_rate = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %3, i32 0, i32 6, !dbg !8837
  %4 = load i64, i64* %bit_rate, align 8, !dbg !8837
  %tobool = icmp ne i64 %4, 0, !dbg !8834
  br i1 %tobool, label %if.then, label %if.else, !dbg !8838

if.then:                                          ; preds = %entry
  %5 = load %struct.AVStream*, %struct.AVStream** %stream.addr, align 8, !dbg !8839
  %codecpar1 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %5, i32 0, i32 19, !dbg !8840
  %6 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar1, align 8, !dbg !8840
  %bit_rate2 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %6, i32 0, i32 6, !dbg !8841
  %7 = load i64, i64* %bit_rate2, align 8, !dbg !8841
  store i64 %7, i64* %retval, align 8, !dbg !8842
  br label %return, !dbg !8842

if.else:                                          ; preds = %entry
  %8 = load %struct.AVCPBProperties*, %struct.AVCPBProperties** %props, align 8, !dbg !8843
  %tobool3 = icmp ne %struct.AVCPBProperties* %8, null, !dbg !8843
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !8845

if.then4:                                         ; preds = %if.else
  %9 = load %struct.AVCPBProperties*, %struct.AVCPBProperties** %props, align 8, !dbg !8846
  %max_bitrate = getelementptr inbounds %struct.AVCPBProperties, %struct.AVCPBProperties* %9, i32 0, i32 0, !dbg !8847
  %10 = load i32, i32* %max_bitrate, align 8, !dbg !8847
  %conv = sext i32 %10 to i64, !dbg !8846
  store i64 %conv, i64* %retval, align 8, !dbg !8848
  br label %return, !dbg !8848

if.end:                                           ; preds = %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end
  store i64 0, i64* %retval, align 8, !dbg !8849
  br label %return, !dbg !8849

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %11 = load i64, i64* %retval, align 8, !dbg !8850
  ret i64 %11, !dbg !8850
}

declare void @ff_hls_write_stream_info(%struct.AVStream*, %struct.AVIOContext*, i32, i8*, i8*, i8*, i8*) #1

; Function Attrs: nounwind readonly
declare i8* @strrchr(i8*, i32) #3

declare i32 @av_strncasecmp(i8*, i8*, i64) #1

declare i8* @av_stream_get_side_data(%struct.AVStream*, i32, i32*) #1

declare i32 @av_write_trailer(%struct.AVFormatContext*) #1

declare void @avformat_free_context(%struct.AVFormatContext*) #1

; Function Attrs: nounwind uwtable
define internal void @hls_free_variant_streams(%struct.HLSContext* %hls) #0 !dbg !8851 {
entry:
  %hls.addr = alloca %struct.HLSContext*, align 8
  %i = alloca i32, align 4
  %vtt_oc = alloca %struct.AVFormatContext*, align 8
  %vs = alloca %struct.VariantStream*, align 8
  store %struct.HLSContext* %hls, %struct.HLSContext** %hls.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %hls.addr, metadata !8855, metadata !2335), !dbg !8856
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8857, metadata !2335), !dbg !8858
  store i32 0, i32* %i, align 4, !dbg !8858
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %vtt_oc, metadata !8859, metadata !2335), !dbg !8860
  store %struct.AVFormatContext* null, %struct.AVFormatContext** %vtt_oc, align 8, !dbg !8860
  call void @llvm.dbg.declare(metadata %struct.VariantStream** %vs, metadata !8861, metadata !2335), !dbg !8862
  store %struct.VariantStream* null, %struct.VariantStream** %vs, align 8, !dbg !8862
  store i32 0, i32* %i, align 4, !dbg !8863
  br label %for.cond, !dbg !8865

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8866
  %1 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !8869
  %nb_varstreams = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %1, i32 0, i32 38, !dbg !8870
  %2 = load i32, i32* %nb_varstreams, align 8, !dbg !8870
  %cmp = icmp ult i32 %0, %2, !dbg !8871
  br i1 %cmp, label %for.body, label %for.end, !dbg !8872

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !8873
  %idxprom = sext i32 %3 to i64, !dbg !8875
  %4 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !8875
  %var_streams = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %4, i32 0, i32 37, !dbg !8876
  %5 = load %struct.VariantStream*, %struct.VariantStream** %var_streams, align 8, !dbg !8876
  %arrayidx = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %5, i64 %idxprom, !dbg !8875
  store %struct.VariantStream* %arrayidx, %struct.VariantStream** %vs, align 8, !dbg !8877
  %6 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8878
  %vtt_avf = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %6, i32 0, i32 9, !dbg !8879
  %7 = load %struct.AVFormatContext*, %struct.AVFormatContext** %vtt_avf, align 8, !dbg !8879
  store %struct.AVFormatContext* %7, %struct.AVFormatContext** %vtt_oc, align 8, !dbg !8880
  %8 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8881
  %basename = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %8, i32 0, i32 26, !dbg !8882
  %9 = bitcast i8** %basename to i8*, !dbg !8883
  call void @av_freep(i8* %9), !dbg !8884
  %10 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8885
  %base_output_dirname = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %10, i32 0, i32 33, !dbg !8886
  %11 = bitcast i8** %base_output_dirname to i8*, !dbg !8887
  call void @av_freep(i8* %11), !dbg !8888
  %12 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8889
  %fmp4_init_filename = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %12, i32 0, i32 32, !dbg !8890
  %13 = bitcast i8** %fmp4_init_filename to i8*, !dbg !8891
  call void @av_freep(i8* %13), !dbg !8892
  %14 = load %struct.AVFormatContext*, %struct.AVFormatContext** %vtt_oc, align 8, !dbg !8893
  %tobool = icmp ne %struct.AVFormatContext* %14, null, !dbg !8893
  br i1 %tobool, label %if.then, label %if.end, !dbg !8895

if.then:                                          ; preds = %for.body
  %15 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8896
  %vtt_basename = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %15, i32 0, i32 27, !dbg !8898
  %16 = bitcast i8** %vtt_basename to i8*, !dbg !8899
  call void @av_freep(i8* %16), !dbg !8900
  %17 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8901
  %vtt_m3u8_name = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %17, i32 0, i32 28, !dbg !8902
  %18 = bitcast i8** %vtt_m3u8_name to i8*, !dbg !8903
  call void @av_freep(i8* %18), !dbg !8904
  br label %if.end, !dbg !8905

if.end:                                           ; preds = %if.then, %for.body
  %19 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8906
  %segments = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %19, i32 0, i32 23, !dbg !8907
  %20 = load %struct.HLSSegment*, %struct.HLSSegment** %segments, align 8, !dbg !8907
  call void @hls_free_segments(%struct.HLSSegment* %20), !dbg !8908
  %21 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8909
  %old_segments = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %21, i32 0, i32 25, !dbg !8910
  %22 = load %struct.HLSSegment*, %struct.HLSSegment** %old_segments, align 8, !dbg !8910
  call void @hls_free_segments(%struct.HLSSegment* %22), !dbg !8911
  %23 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8912
  %m3u8_name = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %23, i32 0, i32 29, !dbg !8913
  %24 = bitcast i8** %m3u8_name to i8*, !dbg !8914
  call void @av_freep(i8* %24), !dbg !8915
  %25 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8916
  %streams = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %25, i32 0, i32 34, !dbg !8917
  %26 = bitcast %struct.AVStream*** %streams to i8*, !dbg !8918
  call void @av_freep(i8* %26), !dbg !8919
  %27 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8920
  %agroup = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %27, i32 0, i32 41, !dbg !8921
  %28 = bitcast i8** %agroup to i8*, !dbg !8922
  call void @av_freep(i8* %28), !dbg !8923
  %29 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8924
  %language = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %29, i32 0, i32 40, !dbg !8925
  %30 = bitcast i8** %language to i8*, !dbg !8926
  call void @av_freep(i8* %30), !dbg !8927
  %31 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8928
  %ccgroup = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %31, i32 0, i32 42, !dbg !8929
  %32 = bitcast i8** %ccgroup to i8*, !dbg !8930
  call void @av_freep(i8* %32), !dbg !8931
  %33 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !8932
  %baseurl = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %33, i32 0, i32 43, !dbg !8933
  %34 = bitcast i8** %baseurl to i8*, !dbg !8934
  call void @av_freep(i8* %34), !dbg !8935
  br label %for.inc, !dbg !8936

for.inc:                                          ; preds = %if.end
  %35 = load i32, i32* %i, align 4, !dbg !8937
  %inc = add nsw i32 %35, 1, !dbg !8937
  store i32 %inc, i32* %i, align 4, !dbg !8937
  br label %for.cond, !dbg !8939, !llvm.loop !8940

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8942
}

; Function Attrs: nounwind uwtable
define internal void @hls_free_segments(%struct.HLSSegment* %p) #0 !dbg !8943 {
entry:
  %p.addr = alloca %struct.HLSSegment*, align 8
  %en = alloca %struct.HLSSegment*, align 8
  store %struct.HLSSegment* %p, %struct.HLSSegment** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HLSSegment** %p.addr, metadata !8946, metadata !2335), !dbg !8947
  call void @llvm.dbg.declare(metadata %struct.HLSSegment** %en, metadata !8948, metadata !2335), !dbg !8949
  br label %while.cond, !dbg !8950

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.HLSSegment*, %struct.HLSSegment** %p.addr, align 8, !dbg !8951
  %tobool = icmp ne %struct.HLSSegment* %0, null, !dbg !8953
  br i1 %tobool, label %while.body, label %while.end, !dbg !8953

while.body:                                       ; preds = %while.cond
  %1 = load %struct.HLSSegment*, %struct.HLSSegment** %p.addr, align 8, !dbg !8954
  store %struct.HLSSegment* %1, %struct.HLSSegment** %en, align 8, !dbg !8956
  %2 = load %struct.HLSSegment*, %struct.HLSSegment** %p.addr, align 8, !dbg !8957
  %next = getelementptr inbounds %struct.HLSSegment, %struct.HLSSegment* %2, i32 0, i32 9, !dbg !8958
  %3 = load %struct.HLSSegment*, %struct.HLSSegment** %next, align 8, !dbg !8958
  store %struct.HLSSegment* %3, %struct.HLSSegment** %p.addr, align 8, !dbg !8959
  %4 = load %struct.HLSSegment*, %struct.HLSSegment** %en, align 8, !dbg !8960
  %5 = bitcast %struct.HLSSegment* %4 to i8*, !dbg !8960
  call void @av_free(i8* %5), !dbg !8961
  br label %while.cond, !dbg !8962, !llvm.loop !8964

while.end:                                        ; preds = %while.cond
  ret void, !dbg !8965
}

; Function Attrs: nounwind uwtable
define internal i8* @get_default_pattern_localtime_fmt(%struct.AVFormatContext* %s) #0 !dbg !8966 {
entry:
  %retval = alloca i8*, align 8
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %b = alloca [21 x i8], align 16
  %t = alloca i64, align 8
  %p = alloca %struct.tm*, align 8
  %tmbuf = alloca %struct.tm, align 8
  %hls = alloca %struct.HLSContext*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !8969, metadata !2335), !dbg !8970
  call void @llvm.dbg.declare(metadata [21 x i8]* %b, metadata !8971, metadata !2335), !dbg !8972
  call void @llvm.dbg.declare(metadata i64* %t, metadata !8973, metadata !2335), !dbg !8974
  %call = call i64 @time(i64* null) #10, !dbg !8975
  store i64 %call, i64* %t, align 8, !dbg !8974
  call void @llvm.dbg.declare(metadata %struct.tm** %p, metadata !8976, metadata !2335), !dbg !8977
  call void @llvm.dbg.declare(metadata %struct.tm* %tmbuf, metadata !8978, metadata !2335), !dbg !8979
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %hls, metadata !8980, metadata !2335), !dbg !8981
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8982
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !8983
  %1 = load i8*, i8** %priv_data, align 8, !dbg !8983
  %2 = bitcast i8* %1 to %struct.HLSContext*, !dbg !8982
  store %struct.HLSContext* %2, %struct.HLSContext** %hls, align 8, !dbg !8981
  %call1 = call %struct.tm* @localtime_r(i64* %t, %struct.tm* %tmbuf) #10, !dbg !8984
  store %struct.tm* %call1, %struct.tm** %p, align 8, !dbg !8985
  %3 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !8986
  %segment_type = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %3, i32 0, i32 12, !dbg !8988
  %4 = load i32, i32* %segment_type, align 8, !dbg !8988
  %cmp = icmp eq i32 %4, 1, !dbg !8989
  br i1 %cmp, label %if.then, label %if.end, !dbg !8990

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [21 x i8], [21 x i8]* %b, i32 0, i32 0, !dbg !8991
  %5 = load %struct.tm*, %struct.tm** %p, align 8, !dbg !8993
  %call2 = call i64 @strftime(i8* %arraydecay, i64 21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.185, i32 0, i32 0), %struct.tm* %5) #10, !dbg !8994
  %tobool = icmp ne i64 %call2, 0, !dbg !8994
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !8995

lor.rhs:                                          ; preds = %if.then
  %arraydecay3 = getelementptr inbounds [21 x i8], [21 x i8]* %b, i32 0, i32 0, !dbg !8996
  %call4 = call i32 @strcmp(i8* %arraydecay3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.185, i32 0, i32 0)) #11, !dbg !8998
  %tobool5 = icmp ne i32 %call4, 0, !dbg !8999
  %lnot = xor i1 %tobool5, true, !dbg !8999
  br label %lor.end, !dbg !9000

lor.end:                                          ; preds = %lor.rhs, %if.then
  %6 = phi i1 [ true, %if.then ], [ %lnot, %lor.rhs ]
  %cond = select i1 %6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.223, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.224, i32 0, i32 0), !dbg !9001
  store i8* %cond, i8** %retval, align 8, !dbg !9003
  br label %return, !dbg !9003

if.end:                                           ; preds = %entry
  %arraydecay6 = getelementptr inbounds [21 x i8], [21 x i8]* %b, i32 0, i32 0, !dbg !9004
  %7 = load %struct.tm*, %struct.tm** %p, align 8, !dbg !9005
  %call7 = call i64 @strftime(i8* %arraydecay6, i64 21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.185, i32 0, i32 0), %struct.tm* %7) #10, !dbg !9006
  %tobool8 = icmp ne i64 %call7, 0, !dbg !9006
  br i1 %tobool8, label %lor.rhs9, label %lor.end14, !dbg !9007

lor.rhs9:                                         ; preds = %if.end
  %arraydecay10 = getelementptr inbounds [21 x i8], [21 x i8]* %b, i32 0, i32 0, !dbg !9008
  %call11 = call i32 @strcmp(i8* %arraydecay10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.185, i32 0, i32 0)) #11, !dbg !9010
  %tobool12 = icmp ne i32 %call11, 0, !dbg !9011
  %lnot13 = xor i1 %tobool12, true, !dbg !9011
  br label %lor.end14, !dbg !9012

lor.end14:                                        ; preds = %lor.rhs9, %if.end
  %8 = phi i1 [ true, %if.end ], [ %lnot13, %lor.rhs9 ]
  %cond15 = select i1 %8, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.225, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.226, i32 0, i32 0), !dbg !9013
  store i8* %cond15, i8** %retval, align 8, !dbg !9015
  br label %return, !dbg !9015

return:                                           ; preds = %lor.end14, %lor.end
  %9 = load i8*, i8** %retval, align 8, !dbg !9016
  ret i8* %9, !dbg !9016
}

; Function Attrs: nounwind uwtable
define internal i32 @update_variant_stream_info(%struct.AVFormatContext* %s) #0 !dbg !9017 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %hls = alloca %struct.HLSContext*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !9018, metadata !2335), !dbg !9019
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %hls, metadata !9020, metadata !2335), !dbg !9021
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9022
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !9023
  %1 = load i8*, i8** %priv_data, align 8, !dbg !9023
  %2 = bitcast i8* %1 to %struct.HLSContext*, !dbg !9022
  store %struct.HLSContext* %2, %struct.HLSContext** %hls, align 8, !dbg !9021
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9024, metadata !2335), !dbg !9025
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9026, metadata !2335), !dbg !9027
  store i32 0, i32* %ret, align 4, !dbg !9027
  %3 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !9028
  %cc_stream_map = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %3, i32 0, i32 45, !dbg !9030
  %4 = load i8*, i8** %cc_stream_map, align 8, !dbg !9030
  %tobool = icmp ne i8* %4, null, !dbg !9028
  br i1 %tobool, label %if.then, label %if.end2, !dbg !9031

if.then:                                          ; preds = %entry
  %5 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9032
  %call = call i32 @parse_cc_stream_mapstring(%struct.AVFormatContext* %5), !dbg !9034
  store i32 %call, i32* %ret, align 4, !dbg !9035
  %6 = load i32, i32* %ret, align 4, !dbg !9036
  %cmp = icmp slt i32 %6, 0, !dbg !9038
  br i1 %cmp, label %if.then1, label %if.end, !dbg !9039

if.then1:                                         ; preds = %if.then
  %7 = load i32, i32* %ret, align 4, !dbg !9040
  store i32 %7, i32* %retval, align 4, !dbg !9041
  br label %return, !dbg !9041

if.end:                                           ; preds = %if.then
  br label %if.end2, !dbg !9042

if.end2:                                          ; preds = %if.end, %entry
  %8 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !9043
  %var_stream_map = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %8, i32 0, i32 44, !dbg !9045
  %9 = load i8*, i8** %var_stream_map, align 8, !dbg !9045
  %tobool3 = icmp ne i8* %9, null, !dbg !9043
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !9046

if.then4:                                         ; preds = %if.end2
  %10 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9047
  %call5 = call i32 @parse_variant_stream_mapstring(%struct.AVFormatContext* %10), !dbg !9049
  store i32 %call5, i32* %retval, align 4, !dbg !9050
  br label %return, !dbg !9050

if.else:                                          ; preds = %if.end2
  %11 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !9051
  %nb_varstreams = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %11, i32 0, i32 38, !dbg !9053
  store i32 1, i32* %nb_varstreams, align 8, !dbg !9054
  %12 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !9055
  %nb_varstreams6 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %12, i32 0, i32 38, !dbg !9056
  %13 = load i32, i32* %nb_varstreams6, align 8, !dbg !9056
  %conv = zext i32 %13 to i64, !dbg !9055
  %mul = mul i64 1432, %conv, !dbg !9057
  %call7 = call noalias i8* @av_mallocz(i64 %mul), !dbg !9058
  %14 = bitcast i8* %call7 to %struct.VariantStream*, !dbg !9058
  %15 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !9059
  %var_streams = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %15, i32 0, i32 37, !dbg !9060
  store %struct.VariantStream* %14, %struct.VariantStream** %var_streams, align 8, !dbg !9061
  %16 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !9062
  %var_streams8 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %16, i32 0, i32 37, !dbg !9064
  %17 = load %struct.VariantStream*, %struct.VariantStream** %var_streams8, align 8, !dbg !9064
  %tobool9 = icmp ne %struct.VariantStream* %17, null, !dbg !9062
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !9065

if.then10:                                        ; preds = %if.else
  store i32 -12, i32* %retval, align 4, !dbg !9066
  br label %return, !dbg !9066

if.end11:                                         ; preds = %if.else
  %18 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !9067
  %var_streams12 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %18, i32 0, i32 37, !dbg !9068
  %19 = load %struct.VariantStream*, %struct.VariantStream** %var_streams12, align 8, !dbg !9068
  %arrayidx = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %19, i64 0, !dbg !9067
  %var_stream_idx = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %arrayidx, i32 0, i32 0, !dbg !9069
  store i32 0, i32* %var_stream_idx, align 8, !dbg !9070
  %20 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9071
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %20, i32 0, i32 6, !dbg !9072
  %21 = load i32, i32* %nb_streams, align 4, !dbg !9072
  %22 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !9073
  %var_streams13 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %22, i32 0, i32 37, !dbg !9074
  %23 = load %struct.VariantStream*, %struct.VariantStream** %var_streams13, align 8, !dbg !9074
  %arrayidx14 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %23, i64 0, !dbg !9073
  %nb_streams15 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %arrayidx14, i32 0, i32 37, !dbg !9075
  store i32 %21, i32* %nb_streams15, align 4, !dbg !9076
  %24 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !9077
  %var_streams16 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %24, i32 0, i32 37, !dbg !9078
  %25 = load %struct.VariantStream*, %struct.VariantStream** %var_streams16, align 8, !dbg !9078
  %arrayidx17 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %25, i64 0, !dbg !9077
  %nb_streams18 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %arrayidx17, i32 0, i32 37, !dbg !9079
  %26 = load i32, i32* %nb_streams18, align 4, !dbg !9079
  %conv19 = zext i32 %26 to i64, !dbg !9077
  %mul20 = mul i64 8, %conv19, !dbg !9080
  %call21 = call noalias i8* @av_mallocz(i64 %mul20), !dbg !9081
  %27 = bitcast i8* %call21 to %struct.AVStream**, !dbg !9081
  %28 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !9082
  %var_streams22 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %28, i32 0, i32 37, !dbg !9083
  %29 = load %struct.VariantStream*, %struct.VariantStream** %var_streams22, align 8, !dbg !9083
  %arrayidx23 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %29, i64 0, !dbg !9082
  %streams = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %arrayidx23, i32 0, i32 34, !dbg !9084
  store %struct.AVStream** %27, %struct.AVStream*** %streams, align 8, !dbg !9085
  %30 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !9086
  %var_streams24 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %30, i32 0, i32 37, !dbg !9088
  %31 = load %struct.VariantStream*, %struct.VariantStream** %var_streams24, align 8, !dbg !9088
  %arrayidx25 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %31, i64 0, !dbg !9086
  %streams26 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %arrayidx25, i32 0, i32 34, !dbg !9089
  %32 = load %struct.AVStream**, %struct.AVStream*** %streams26, align 8, !dbg !9089
  %tobool27 = icmp ne %struct.AVStream** %32, null, !dbg !9086
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !9090

if.then28:                                        ; preds = %if.end11
  store i32 -12, i32* %retval, align 4, !dbg !9091
  br label %return, !dbg !9091

if.end29:                                         ; preds = %if.end11
  %33 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !9092
  %nb_ccstreams = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %33, i32 0, i32 40, !dbg !9094
  %34 = load i32, i32* %nb_ccstreams, align 8, !dbg !9094
  %tobool30 = icmp ne i32 %34, 0, !dbg !9092
  br i1 %tobool30, label %if.then31, label %if.end43, !dbg !9095

if.then31:                                        ; preds = %if.end29
  %35 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !9096
  %cc_streams = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %35, i32 0, i32 39, !dbg !9098
  %36 = load %struct.ClosedCaptionsStream*, %struct.ClosedCaptionsStream** %cc_streams, align 8, !dbg !9098
  %arrayidx32 = getelementptr inbounds %struct.ClosedCaptionsStream, %struct.ClosedCaptionsStream* %36, i64 0, !dbg !9096
  %ccgroup = getelementptr inbounds %struct.ClosedCaptionsStream, %struct.ClosedCaptionsStream* %arrayidx32, i32 0, i32 0, !dbg !9099
  %37 = load i8*, i8** %ccgroup, align 8, !dbg !9099
  %call33 = call noalias i8* @av_strdup(i8* %37), !dbg !9100
  %38 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !9101
  %var_streams34 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %38, i32 0, i32 37, !dbg !9102
  %39 = load %struct.VariantStream*, %struct.VariantStream** %var_streams34, align 8, !dbg !9102
  %arrayidx35 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %39, i64 0, !dbg !9101
  %ccgroup36 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %arrayidx35, i32 0, i32 42, !dbg !9103
  store i8* %call33, i8** %ccgroup36, align 8, !dbg !9104
  %40 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !9105
  %var_streams37 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %40, i32 0, i32 37, !dbg !9107
  %41 = load %struct.VariantStream*, %struct.VariantStream** %var_streams37, align 8, !dbg !9107
  %arrayidx38 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %41, i64 0, !dbg !9105
  %ccgroup39 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %arrayidx38, i32 0, i32 42, !dbg !9108
  %42 = load i8*, i8** %ccgroup39, align 8, !dbg !9108
  %tobool40 = icmp ne i8* %42, null, !dbg !9105
  br i1 %tobool40, label %if.end42, label %if.then41, !dbg !9109

if.then41:                                        ; preds = %if.then31
  store i32 -12, i32* %retval, align 4, !dbg !9110
  br label %return, !dbg !9110

if.end42:                                         ; preds = %if.then31
  br label %if.end43, !dbg !9111

if.end43:                                         ; preds = %if.end42, %if.end29
  store i32 0, i32* %i, align 4, !dbg !9112
  br label %for.cond, !dbg !9114

for.cond:                                         ; preds = %for.inc, %if.end43
  %43 = load i32, i32* %i, align 4, !dbg !9115
  %44 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9118
  %nb_streams44 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %44, i32 0, i32 6, !dbg !9119
  %45 = load i32, i32* %nb_streams44, align 4, !dbg !9119
  %cmp45 = icmp ult i32 %43, %45, !dbg !9120
  br i1 %cmp45, label %for.body, label %for.end, !dbg !9121

for.body:                                         ; preds = %for.cond
  %46 = load i32, i32* %i, align 4, !dbg !9122
  %idxprom = zext i32 %46 to i64, !dbg !9123
  %47 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9123
  %streams47 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %47, i32 0, i32 7, !dbg !9124
  %48 = load %struct.AVStream**, %struct.AVStream*** %streams47, align 8, !dbg !9124
  %arrayidx48 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %48, i64 %idxprom, !dbg !9123
  %49 = load %struct.AVStream*, %struct.AVStream** %arrayidx48, align 8, !dbg !9123
  %50 = load i32, i32* %i, align 4, !dbg !9125
  %idxprom49 = zext i32 %50 to i64, !dbg !9126
  %51 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !9126
  %var_streams50 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %51, i32 0, i32 37, !dbg !9127
  %52 = load %struct.VariantStream*, %struct.VariantStream** %var_streams50, align 8, !dbg !9127
  %arrayidx51 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %52, i64 0, !dbg !9126
  %streams52 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %arrayidx51, i32 0, i32 34, !dbg !9128
  %53 = load %struct.AVStream**, %struct.AVStream*** %streams52, align 8, !dbg !9128
  %arrayidx53 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %53, i64 %idxprom49, !dbg !9126
  store %struct.AVStream* %49, %struct.AVStream** %arrayidx53, align 8, !dbg !9129
  br label %for.inc, !dbg !9126

for.inc:                                          ; preds = %for.body
  %54 = load i32, i32* %i, align 4, !dbg !9130
  %inc = add i32 %54, 1, !dbg !9130
  store i32 %inc, i32* %i, align 4, !dbg !9130
  br label %for.cond, !dbg !9132, !llvm.loop !9133

for.end:                                          ; preds = %for.cond
  br label %if.end54

if.end54:                                         ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !9135
  br label %return, !dbg !9135

return:                                           ; preds = %if.end54, %if.then41, %if.then28, %if.then10, %if.then4, %if.then1
  %55 = load i32, i32* %retval, align 4, !dbg !9136
  ret i32 %55, !dbg !9136
}

; Function Attrs: nounwind uwtable
define internal i32 @validate_name(i32 %nb_vs, i8* %fn) #0 !dbg !9137 {
entry:
  %nb_vs.addr = alloca i32, align 4
  %fn.addr = alloca i8*, align 8
  %filename = alloca i8*, align 8
  %subdir_name = alloca i8*, align 8
  %fn_dup = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i32 %nb_vs, i32* %nb_vs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_vs.addr, metadata !9140, metadata !2335), !dbg !9141
  store i8* %fn, i8** %fn.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fn.addr, metadata !9142, metadata !2335), !dbg !9143
  call void @llvm.dbg.declare(metadata i8** %filename, metadata !9144, metadata !2335), !dbg !9145
  call void @llvm.dbg.declare(metadata i8** %subdir_name, metadata !9146, metadata !2335), !dbg !9147
  call void @llvm.dbg.declare(metadata i8** %fn_dup, metadata !9148, metadata !2335), !dbg !9149
  store i8* null, i8** %fn_dup, align 8, !dbg !9149
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9150, metadata !2335), !dbg !9151
  store i32 0, i32* %ret, align 4, !dbg !9151
  %0 = load i8*, i8** %fn.addr, align 8, !dbg !9152
  %tobool = icmp ne i8* %0, null, !dbg !9152
  br i1 %tobool, label %if.end, label %if.then, !dbg !9154

if.then:                                          ; preds = %entry
  store i32 -22, i32* %ret, align 4, !dbg !9155
  br label %fail, !dbg !9157

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %fn.addr, align 8, !dbg !9158
  %call = call noalias i8* @av_strdup(i8* %1), !dbg !9159
  store i8* %call, i8** %fn_dup, align 8, !dbg !9160
  %2 = load i8*, i8** %fn_dup, align 8, !dbg !9161
  %tobool1 = icmp ne i8* %2, null, !dbg !9161
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !9163

if.then2:                                         ; preds = %if.end
  store i32 -12, i32* %ret, align 4, !dbg !9164
  br label %fail, !dbg !9166

if.end3:                                          ; preds = %if.end
  %3 = load i8*, i8** %fn.addr, align 8, !dbg !9167
  %call4 = call i8* @av_basename(i8* %3), !dbg !9168
  store i8* %call4, i8** %filename, align 8, !dbg !9169
  %4 = load i8*, i8** %fn_dup, align 8, !dbg !9170
  %call5 = call i8* @av_dirname(i8* %4), !dbg !9171
  store i8* %call5, i8** %subdir_name, align 8, !dbg !9172
  %5 = load i32, i32* %nb_vs.addr, align 4, !dbg !9173
  %cmp = icmp sgt i32 %5, 1, !dbg !9175
  br i1 %cmp, label %land.lhs.true, label %if.end12, !dbg !9176

land.lhs.true:                                    ; preds = %if.end3
  %6 = load i8*, i8** %filename, align 8, !dbg !9177
  %call6 = call i8* @av_stristr(i8* %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.155, i32 0, i32 0)), !dbg !9179
  %tobool7 = icmp ne i8* %call6, null, !dbg !9179
  br i1 %tobool7, label %if.end12, label %land.lhs.true8, !dbg !9180

land.lhs.true8:                                   ; preds = %land.lhs.true
  %7 = load i8*, i8** %subdir_name, align 8, !dbg !9181
  %call9 = call i8* @av_stristr(i8* %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.155, i32 0, i32 0)), !dbg !9183
  %tobool10 = icmp ne i8* %call9, null, !dbg !9183
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !9184

if.then11:                                        ; preds = %land.lhs.true8
  %8 = load i8*, i8** %fn.addr, align 8, !dbg !9185
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.247, i32 0, i32 0), i8* %8), !dbg !9187
  store i32 -22, i32* %ret, align 4, !dbg !9188
  br label %fail, !dbg !9189

if.end12:                                         ; preds = %land.lhs.true8, %land.lhs.true, %if.end3
  %9 = load i8*, i8** %filename, align 8, !dbg !9190
  %call13 = call i8* @av_stristr(i8* %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.155, i32 0, i32 0)), !dbg !9192
  %tobool14 = icmp ne i8* %call13, null, !dbg !9192
  br i1 %tobool14, label %land.lhs.true15, label %if.end19, !dbg !9193

land.lhs.true15:                                  ; preds = %if.end12
  %10 = load i8*, i8** %subdir_name, align 8, !dbg !9194
  %call16 = call i8* @av_stristr(i8* %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.155, i32 0, i32 0)), !dbg !9196
  %tobool17 = icmp ne i8* %call16, null, !dbg !9196
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !9197

if.then18:                                        ; preds = %land.lhs.true15
  %11 = load i8*, i8** %fn.addr, align 8, !dbg !9198
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.248, i32 0, i32 0), i8* %11), !dbg !9200
  store i32 -22, i32* %ret, align 4, !dbg !9201
  br label %fail, !dbg !9202

if.end19:                                         ; preds = %land.lhs.true15, %if.end12
  br label %fail, !dbg !9203

fail:                                             ; preds = %if.end19, %if.then18, %if.then11, %if.then2, %if.then
  %12 = bitcast i8** %fn_dup to i8*, !dbg !9205
  call void @av_freep(i8* %12), !dbg !9206
  %13 = load i32, i32* %ret, align 4, !dbg !9207
  ret i32 %13, !dbg !9208
}

; Function Attrs: nounwind uwtable
define internal i32 @update_master_pl_info(%struct.AVFormatContext* %s) #0 !dbg !9209 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %hls = alloca %struct.HLSContext*, align 8
  %dir = alloca i8*, align 8
  %fn1 = alloca i8*, align 8
  %fn2 = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !9210, metadata !2335), !dbg !9211
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %hls, metadata !9212, metadata !2335), !dbg !9213
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9214
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !9215
  %1 = load i8*, i8** %priv_data, align 8, !dbg !9215
  %2 = bitcast i8* %1 to %struct.HLSContext*, !dbg !9214
  store %struct.HLSContext* %2, %struct.HLSContext** %hls, align 8, !dbg !9213
  call void @llvm.dbg.declare(metadata i8** %dir, metadata !9216, metadata !2335), !dbg !9217
  call void @llvm.dbg.declare(metadata i8** %fn1, metadata !9218, metadata !2335), !dbg !9219
  store i8* null, i8** %fn1, align 8, !dbg !9219
  call void @llvm.dbg.declare(metadata i8** %fn2, metadata !9220, metadata !2335), !dbg !9221
  store i8* null, i8** %fn2, align 8, !dbg !9221
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9222, metadata !2335), !dbg !9223
  store i32 0, i32* %ret, align 4, !dbg !9223
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9224
  %url = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 9, !dbg !9225
  %4 = load i8*, i8** %url, align 8, !dbg !9225
  %call = call noalias i8* @av_strdup(i8* %4), !dbg !9226
  store i8* %call, i8** %fn1, align 8, !dbg !9227
  %5 = load i8*, i8** %fn1, align 8, !dbg !9228
  %tobool = icmp ne i8* %5, null, !dbg !9228
  br i1 %tobool, label %if.end, label %if.then, !dbg !9230

if.then:                                          ; preds = %entry
  store i32 -12, i32* %ret, align 4, !dbg !9231
  br label %fail, !dbg !9233

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %fn1, align 8, !dbg !9234
  %call1 = call i8* @av_dirname(i8* %6), !dbg !9235
  store i8* %call1, i8** %dir, align 8, !dbg !9236
  %7 = load i8*, i8** %dir, align 8, !dbg !9237
  %tobool2 = icmp ne i8* %7, null, !dbg !9237
  br i1 %tobool2, label %land.lhs.true, label %if.end12, !dbg !9239

land.lhs.true:                                    ; preds = %if.end
  %8 = load i8*, i8** %dir, align 8, !dbg !9240
  %call3 = call i8* @av_basename(i8* %8), !dbg !9242
  %call4 = call i8* @av_stristr(i8* %call3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.155, i32 0, i32 0)), !dbg !9243
  %tobool5 = icmp ne i8* %call4, null, !dbg !9245
  br i1 %tobool5, label %if.then6, label %if.end12, !dbg !9246

if.then6:                                         ; preds = %land.lhs.true
  %9 = load i8*, i8** %dir, align 8, !dbg !9247
  %call7 = call noalias i8* @av_strdup(i8* %9), !dbg !9249
  store i8* %call7, i8** %fn2, align 8, !dbg !9250
  %10 = load i8*, i8** %fn2, align 8, !dbg !9251
  %tobool8 = icmp ne i8* %10, null, !dbg !9251
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !9253

if.then9:                                         ; preds = %if.then6
  store i32 -12, i32* %ret, align 4, !dbg !9254
  br label %fail, !dbg !9256

if.end10:                                         ; preds = %if.then6
  %11 = load i8*, i8** %fn2, align 8, !dbg !9257
  %call11 = call i8* @av_dirname(i8* %11), !dbg !9258
  store i8* %call11, i8** %dir, align 8, !dbg !9259
  br label %if.end12, !dbg !9260

if.end12:                                         ; preds = %if.end10, %land.lhs.true, %if.end
  %12 = load i8*, i8** %dir, align 8, !dbg !9261
  %tobool13 = icmp ne i8* %12, null, !dbg !9261
  br i1 %tobool13, label %land.lhs.true14, label %if.else, !dbg !9263

land.lhs.true14:                                  ; preds = %if.end12
  %13 = load i8*, i8** %dir, align 8, !dbg !9264
  %call15 = call i32 @strcmp(i8* %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.249, i32 0, i32 0)) #11, !dbg !9266
  %tobool16 = icmp ne i32 %call15, 0, !dbg !9266
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !9267

if.then17:                                        ; preds = %land.lhs.true14
  %14 = load i8*, i8** %dir, align 8, !dbg !9268
  %15 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !9269
  %master_pl_name = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %15, i32 0, i32 46, !dbg !9270
  %16 = load i8*, i8** %master_pl_name, align 8, !dbg !9270
  %call18 = call i8* @av_append_path_component(i8* %14, i8* %16), !dbg !9271
  %17 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !9272
  %master_m3u8_url = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %17, i32 0, i32 42, !dbg !9273
  store i8* %call18, i8** %master_m3u8_url, align 8, !dbg !9274
  br label %if.end22, !dbg !9272

if.else:                                          ; preds = %land.lhs.true14, %if.end12
  %18 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !9275
  %master_pl_name19 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %18, i32 0, i32 46, !dbg !9276
  %19 = load i8*, i8** %master_pl_name19, align 8, !dbg !9276
  %call20 = call noalias i8* @av_strdup(i8* %19), !dbg !9277
  %20 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !9278
  %master_m3u8_url21 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %20, i32 0, i32 42, !dbg !9279
  store i8* %call20, i8** %master_m3u8_url21, align 8, !dbg !9280
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.then17
  %21 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !9281
  %master_m3u8_url23 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %21, i32 0, i32 42, !dbg !9283
  %22 = load i8*, i8** %master_m3u8_url23, align 8, !dbg !9283
  %tobool24 = icmp ne i8* %22, null, !dbg !9281
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !9284

if.then25:                                        ; preds = %if.end22
  store i32 -12, i32* %ret, align 4, !dbg !9285
  br label %fail, !dbg !9287

if.end26:                                         ; preds = %if.end22
  br label %fail, !dbg !9288

fail:                                             ; preds = %if.end26, %if.then25, %if.then9, %if.then
  %23 = bitcast i8** %fn1 to i8*, !dbg !9290
  call void @av_freep(i8* %23), !dbg !9291
  %24 = bitcast i8** %fn2 to i8*, !dbg !9292
  call void @av_freep(i8* %24), !dbg !9293
  %25 = load i32, i32* %ret, align 4, !dbg !9294
  ret i32 %25, !dbg !9295
}

; Function Attrs: nounwind
declare i64 @strtoll(i8*, i8**, i32) #4

; Function Attrs: nounwind uwtable
define internal i32 @format_name(i8* %buf, i32 %buf_len, i32 %index) #0 !dbg !9296 {
entry:
  %retval = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %buf_len.addr = alloca i32, align 4
  %index.addr = alloca i32, align 4
  %proto = alloca i8*, align 8
  %dir = alloca i8*, align 8
  %orig_buf_dup = alloca i8*, align 8
  %mod_buf = alloca i8*, align 8
  %mod_buf_dup = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9299, metadata !2335), !dbg !9300
  store i32 %buf_len, i32* %buf_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_len.addr, metadata !9301, metadata !2335), !dbg !9302
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !9303, metadata !2335), !dbg !9304
  call void @llvm.dbg.declare(metadata i8** %proto, metadata !9305, metadata !2335), !dbg !9306
  call void @llvm.dbg.declare(metadata i8** %dir, metadata !9307, metadata !2335), !dbg !9308
  call void @llvm.dbg.declare(metadata i8** %orig_buf_dup, metadata !9309, metadata !2335), !dbg !9310
  store i8* null, i8** %orig_buf_dup, align 8, !dbg !9310
  call void @llvm.dbg.declare(metadata i8** %mod_buf, metadata !9311, metadata !2335), !dbg !9312
  store i8* null, i8** %mod_buf, align 8, !dbg !9312
  call void @llvm.dbg.declare(metadata i8** %mod_buf_dup, metadata !9313, metadata !2335), !dbg !9314
  store i8* null, i8** %mod_buf_dup, align 8, !dbg !9314
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9315, metadata !2335), !dbg !9316
  store i32 0, i32* %ret, align 4, !dbg !9316
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !9317
  %call = call i8* @av_stristr(i8* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.155, i32 0, i32 0)), !dbg !9319
  %tobool = icmp ne i8* %call, null, !dbg !9319
  br i1 %tobool, label %if.end, label %if.then, !dbg !9320

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %ret, align 4, !dbg !9321
  store i32 %1, i32* %retval, align 4, !dbg !9322
  br label %return, !dbg !9322

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !9323
  %call1 = call noalias i8* @av_strdup(i8* %2), !dbg !9324
  store i8* %call1, i8** %orig_buf_dup, align 8, !dbg !9325
  %3 = load i8*, i8** %orig_buf_dup, align 8, !dbg !9326
  %tobool2 = icmp ne i8* %3, null, !dbg !9326
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !9328

if.then3:                                         ; preds = %if.end
  store i32 -12, i32* %ret, align 4, !dbg !9329
  br label %fail, !dbg !9331

if.end4:                                          ; preds = %if.end
  %4 = load i8*, i8** %orig_buf_dup, align 8, !dbg !9332
  %5 = load i32, i32* %index.addr, align 4, !dbg !9334
  %conv = sext i32 %5 to i64, !dbg !9334
  %call5 = call i32 @replace_int_data_in_filename(i8** %mod_buf, i8* %4, i8 signext 118, i64 %conv), !dbg !9335
  %cmp = icmp slt i32 %call5, 1, !dbg !9336
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !9337

if.then7:                                         ; preds = %if.end4
  store i32 -22, i32* %ret, align 4, !dbg !9338
  br label %fail, !dbg !9340

if.end8:                                          ; preds = %if.end4
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !9341
  %7 = load i8*, i8** %mod_buf, align 8, !dbg !9342
  %8 = load i32, i32* %buf_len.addr, align 4, !dbg !9343
  %conv9 = sext i32 %8 to i64, !dbg !9343
  %call10 = call i64 @av_strlcpy(i8* %6, i8* %7, i64 %conv9), !dbg !9344
  %9 = load i8*, i8** %orig_buf_dup, align 8, !dbg !9345
  %call11 = call i8* @avio_find_protocol_name(i8* %9), !dbg !9346
  store i8* %call11, i8** %proto, align 8, !dbg !9347
  %10 = load i8*, i8** %orig_buf_dup, align 8, !dbg !9348
  %call12 = call i8* @av_dirname(i8* %10), !dbg !9349
  store i8* %call12, i8** %dir, align 8, !dbg !9350
  %11 = load i8*, i8** %dir, align 8, !dbg !9351
  %call13 = call i8* @av_stristr(i8* %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.155, i32 0, i32 0)), !dbg !9353
  %tobool14 = icmp ne i8* %call13, null, !dbg !9353
  br i1 %tobool14, label %land.lhs.true, label %if.end35, !dbg !9354

land.lhs.true:                                    ; preds = %if.end8
  %12 = load i8*, i8** %proto, align 8, !dbg !9355
  %tobool15 = icmp ne i8* %12, null, !dbg !9355
  br i1 %tobool15, label %land.lhs.true16, label %if.end35, !dbg !9357

land.lhs.true16:                                  ; preds = %land.lhs.true
  %13 = load i8*, i8** %proto, align 8, !dbg !9358
  %call17 = call i32 @strcmp(i8* %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.136, i32 0, i32 0)) #11, !dbg !9360
  %tobool18 = icmp ne i32 %call17, 0, !dbg !9360
  br i1 %tobool18, label %if.end35, label %if.then19, !dbg !9361

if.then19:                                        ; preds = %land.lhs.true16
  %14 = load i8*, i8** %buf.addr, align 8, !dbg !9362
  %call20 = call noalias i8* @av_strdup(i8* %14), !dbg !9364
  store i8* %call20, i8** %mod_buf_dup, align 8, !dbg !9365
  %15 = load i8*, i8** %mod_buf_dup, align 8, !dbg !9366
  %tobool21 = icmp ne i8* %15, null, !dbg !9366
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !9368

if.then22:                                        ; preds = %if.then19
  store i32 -12, i32* %ret, align 4, !dbg !9369
  br label %fail, !dbg !9371

if.end23:                                         ; preds = %if.then19
  %16 = load i8*, i8** %mod_buf_dup, align 8, !dbg !9372
  %call24 = call i8* @av_dirname(i8* %16), !dbg !9373
  store i8* %call24, i8** %dir, align 8, !dbg !9374
  %17 = load i8*, i8** %dir, align 8, !dbg !9375
  %call25 = call i32 @ff_mkdir_p(i8* %17), !dbg !9377
  %cmp26 = icmp eq i32 %call25, -1, !dbg !9378
  br i1 %cmp26, label %land.lhs.true28, label %if.end34, !dbg !9379

land.lhs.true28:                                  ; preds = %if.end23
  %call29 = call i32* @__errno_location() #2, !dbg !9380
  %18 = load i32, i32* %call29, align 4, !dbg !9382
  %cmp30 = icmp ne i32 %18, 17, !dbg !9383
  br i1 %cmp30, label %if.then32, label %if.end34, !dbg !9384

if.then32:                                        ; preds = %land.lhs.true28
  %call33 = call i32* @__errno_location() #2, !dbg !9385
  %19 = load i32, i32* %call33, align 4, !dbg !9387
  %sub = sub nsw i32 0, %19, !dbg !9385
  store i32 %sub, i32* %ret, align 4, !dbg !9388
  br label %fail, !dbg !9389

if.end34:                                         ; preds = %land.lhs.true28, %if.end23
  br label %if.end35, !dbg !9390

if.end35:                                         ; preds = %if.end34, %land.lhs.true16, %land.lhs.true, %if.end8
  br label %fail, !dbg !9391

fail:                                             ; preds = %if.end35, %if.then32, %if.then22, %if.then7, %if.then3
  %20 = bitcast i8** %orig_buf_dup to i8*, !dbg !9393
  call void @av_freep(i8* %20), !dbg !9394
  %21 = bitcast i8** %mod_buf_dup to i8*, !dbg !9395
  call void @av_freep(i8* %21), !dbg !9396
  %22 = bitcast i8** %mod_buf to i8*, !dbg !9397
  call void @av_freep(i8* %22), !dbg !9398
  %23 = load i32, i32* %ret, align 4, !dbg !9399
  store i32 %23, i32* %retval, align 4, !dbg !9400
  br label %return, !dbg !9400

return:                                           ; preds = %fail, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !9401
  ret i32 %24, !dbg !9401
}

declare i32 @av_dict_parse_string(%struct.AVDictionary**, i8*, i8*, i8*, i32) #1

declare %struct.AVOutputFormat* @av_guess_format(i8*, i8*, i8*) #1

; Function Attrs: nounwind uwtable
define internal i32 @append_postfix(i8* %name, i32 %name_buf_len, i32 %i) #0 !dbg !9402 {
entry:
  %name.addr = alloca i8*, align 8
  %name_buf_len.addr = alloca i32, align 4
  %i.addr = alloca i32, align 4
  %p = alloca i8*, align 8
  %extension = alloca [10 x i8], align 1
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9403, metadata !2335), !dbg !9404
  store i32 %name_buf_len, i32* %name_buf_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %name_buf_len.addr, metadata !9405, metadata !2335), !dbg !9406
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !9407, metadata !2335), !dbg !9408
  call void @llvm.dbg.declare(metadata i8** %p, metadata !9409, metadata !2335), !dbg !9410
  call void @llvm.dbg.declare(metadata [10 x i8]* %extension, metadata !9411, metadata !2335), !dbg !9415
  %0 = bitcast [10 x i8]* %extension to i8*, !dbg !9415
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 10, i32 1, i1 false), !dbg !9415
  %1 = load i8*, i8** %name.addr, align 8, !dbg !9416
  %call = call i8* @strrchr(i8* %1, i32 46) #11, !dbg !9417
  store i8* %call, i8** %p, align 8, !dbg !9418
  %2 = load i8*, i8** %p, align 8, !dbg !9419
  %tobool = icmp ne i8* %2, null, !dbg !9419
  br i1 %tobool, label %if.then, label %if.end, !dbg !9421

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [10 x i8], [10 x i8]* %extension, i32 0, i32 0, !dbg !9422
  %3 = load i8*, i8** %p, align 8, !dbg !9424
  %call1 = call i64 @av_strlcpy(i8* %arraydecay, i8* %3, i64 10), !dbg !9425
  %4 = load i8*, i8** %p, align 8, !dbg !9426
  store i8 0, i8* %4, align 1, !dbg !9427
  br label %if.end, !dbg !9428

if.end:                                           ; preds = %if.then, %entry
  %5 = load i8*, i8** %name.addr, align 8, !dbg !9429
  %6 = load i8*, i8** %name.addr, align 8, !dbg !9430
  %call2 = call i64 @strlen(i8* %6) #11, !dbg !9431
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %call2, !dbg !9432
  %7 = load i32, i32* %name_buf_len.addr, align 4, !dbg !9433
  %conv = sext i32 %7 to i64, !dbg !9433
  %8 = load i8*, i8** %name.addr, align 8, !dbg !9434
  %call3 = call i64 @strlen(i8* %8) #11, !dbg !9435
  %sub = sub i64 %conv, %call3, !dbg !9437
  %9 = load i32, i32* %i.addr, align 4, !dbg !9438
  %call4 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %add.ptr, i64 %sub, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.250, i32 0, i32 0), i32 %9) #10, !dbg !9439
  %arraydecay5 = getelementptr inbounds [10 x i8], [10 x i8]* %extension, i32 0, i32 0, !dbg !9441
  %call6 = call i64 @strlen(i8* %arraydecay5) #11, !dbg !9443
  %tobool7 = icmp ne i64 %call6, 0, !dbg !9443
  br i1 %tobool7, label %if.then8, label %if.end12, !dbg !9444

if.then8:                                         ; preds = %if.end
  %10 = load i8*, i8** %name.addr, align 8, !dbg !9445
  %arraydecay9 = getelementptr inbounds [10 x i8], [10 x i8]* %extension, i32 0, i32 0, !dbg !9446
  %11 = load i32, i32* %name_buf_len.addr, align 4, !dbg !9447
  %conv10 = sext i32 %11 to i64, !dbg !9447
  %call11 = call i64 @av_strlcat(i8* %10, i8* %arraydecay9, i64 %conv10), !dbg !9448
  br label %if.end12, !dbg !9448

if.end12:                                         ; preds = %if.then8, %if.end
  ret i32 0, !dbg !9449
}

; Function Attrs: nounwind uwtable
define internal i32 @sls_flag_check_duration_size_index(%struct.HLSContext* %hls) #0 !dbg !9450 {
entry:
  %hls.addr = alloca %struct.HLSContext*, align 8
  %ret = alloca i32, align 4
  store %struct.HLSContext* %hls, %struct.HLSContext** %hls.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %hls.addr, metadata !9453, metadata !2335), !dbg !9454
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9455, metadata !2335), !dbg !9456
  store i32 0, i32* %ret, align 4, !dbg !9456
  %0 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !9457
  %flags = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %0, i32 0, i32 8, !dbg !9459
  %1 = load i32, i32* %flags, align 8, !dbg !9459
  %and = and i32 %1, 512, !dbg !9460
  %tobool = icmp ne i32 %and, 0, !dbg !9460
  br i1 %tobool, label %if.then, label %if.end, !dbg !9461

if.then:                                          ; preds = %entry
  %2 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !9462
  %3 = bitcast %struct.HLSContext* %2 to i8*, !dbg !9462
  call void (i8*, i32, i8*, ...) @av_log(i8* %3, i32 16, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.251, i32 0, i32 0)), !dbg !9464
  store i32 -22, i32* %ret, align 4, !dbg !9465
  br label %if.end, !dbg !9466

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !9467
  %flags1 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %4, i32 0, i32 8, !dbg !9469
  %5 = load i32, i32* %flags1, align 8, !dbg !9469
  %and2 = and i32 %5, 1024, !dbg !9470
  %tobool3 = icmp ne i32 %and2, 0, !dbg !9470
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !9471

if.then4:                                         ; preds = %if.end
  %6 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !9472
  %7 = bitcast %struct.HLSContext* %6 to i8*, !dbg !9472
  call void (i8*, i32, i8*, ...) @av_log(i8* %7, i32 16, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.252, i32 0, i32 0)), !dbg !9474
  store i32 -22, i32* %ret, align 4, !dbg !9475
  br label %if.end5, !dbg !9476

if.end5:                                          ; preds = %if.then4, %if.end
  %8 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !9477
  %flags6 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %8, i32 0, i32 8, !dbg !9479
  %9 = load i32, i32* %flags6, align 8, !dbg !9479
  %and7 = and i32 %9, 256, !dbg !9480
  %tobool8 = icmp ne i32 %and7, 0, !dbg !9480
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !9481

if.then9:                                         ; preds = %if.end5
  %10 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !9482
  %11 = bitcast %struct.HLSContext* %10 to i8*, !dbg !9482
  call void (i8*, i32, i8*, ...) @av_log(i8* %11, i32 16, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.253, i32 0, i32 0)), !dbg !9484
  store i32 -22, i32* %ret, align 4, !dbg !9485
  br label %if.end10, !dbg !9486

if.end10:                                         ; preds = %if.then9, %if.end5
  %12 = load i32, i32* %ret, align 4, !dbg !9487
  ret i32 %12, !dbg !9488
}

; Function Attrs: nounwind uwtable
define internal i32 @sls_flag_check_duration_size(%struct.HLSContext* %hls, %struct.VariantStream* %vs) #0 !dbg !9489 {
entry:
  %hls.addr = alloca %struct.HLSContext*, align 8
  %vs.addr = alloca %struct.VariantStream*, align 8
  %proto = alloca i8*, align 8
  %segment_renaming_ok = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.HLSContext* %hls, %struct.HLSContext** %hls.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %hls.addr, metadata !9492, metadata !2335), !dbg !9493
  store %struct.VariantStream* %vs, %struct.VariantStream** %vs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VariantStream** %vs.addr, metadata !9494, metadata !2335), !dbg !9495
  call void @llvm.dbg.declare(metadata i8** %proto, metadata !9496, metadata !2335), !dbg !9497
  %0 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !9498
  %basename = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %0, i32 0, i32 26, !dbg !9499
  %1 = load i8*, i8** %basename, align 8, !dbg !9499
  %call = call i8* @avio_find_protocol_name(i8* %1), !dbg !9500
  store i8* %call, i8** %proto, align 8, !dbg !9497
  call void @llvm.dbg.declare(metadata i32* %segment_renaming_ok, metadata !9501, metadata !2335), !dbg !9502
  %2 = load i8*, i8** %proto, align 8, !dbg !9503
  %tobool = icmp ne i8* %2, null, !dbg !9503
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !9504

land.rhs:                                         ; preds = %entry
  %3 = load i8*, i8** %proto, align 8, !dbg !9505
  %call1 = call i32 @strcmp(i8* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.136, i32 0, i32 0)) #11, !dbg !9507
  %tobool2 = icmp ne i32 %call1, 0, !dbg !9508
  %lnot = xor i1 %tobool2, true, !dbg !9508
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ]
  %land.ext = zext i1 %4 to i32, !dbg !9509
  store i32 %land.ext, i32* %segment_renaming_ok, align 4, !dbg !9511
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9512, metadata !2335), !dbg !9513
  store i32 0, i32* %ret, align 4, !dbg !9513
  %5 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !9514
  %flags = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %5, i32 0, i32 8, !dbg !9516
  %6 = load i32, i32* %flags, align 8, !dbg !9516
  %and = and i32 %6, 512, !dbg !9517
  %tobool3 = icmp ne i32 %and, 0, !dbg !9517
  br i1 %tobool3, label %land.lhs.true, label %if.end, !dbg !9518

land.lhs.true:                                    ; preds = %land.end
  %7 = load i32, i32* %segment_renaming_ok, align 4, !dbg !9519
  %tobool4 = icmp ne i32 %7, 0, !dbg !9519
  br i1 %tobool4, label %if.end, label %if.then, !dbg !9521

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !9522
  %9 = bitcast %struct.HLSContext* %8 to i8*, !dbg !9522
  call void (i8*, i32, i8*, ...) @av_log(i8* %9, i32 16, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.254, i32 0, i32 0)), !dbg !9524
  store i32 -22, i32* %ret, align 4, !dbg !9525
  br label %if.end, !dbg !9526

if.end:                                           ; preds = %if.then, %land.lhs.true, %land.end
  %10 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !9527
  %flags5 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %10, i32 0, i32 8, !dbg !9529
  %11 = load i32, i32* %flags5, align 8, !dbg !9529
  %and6 = and i32 %11, 1024, !dbg !9530
  %tobool7 = icmp ne i32 %and6, 0, !dbg !9530
  br i1 %tobool7, label %land.lhs.true8, label %if.end11, !dbg !9531

land.lhs.true8:                                   ; preds = %if.end
  %12 = load i32, i32* %segment_renaming_ok, align 4, !dbg !9532
  %tobool9 = icmp ne i32 %12, 0, !dbg !9532
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !9534

if.then10:                                        ; preds = %land.lhs.true8
  %13 = load %struct.HLSContext*, %struct.HLSContext** %hls.addr, align 8, !dbg !9535
  %14 = bitcast %struct.HLSContext* %13 to i8*, !dbg !9535
  call void (i8*, i32, i8*, ...) @av_log(i8* %14, i32 16, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.255, i32 0, i32 0)), !dbg !9537
  store i32 -22, i32* %ret, align 4, !dbg !9538
  br label %if.end11, !dbg !9539

if.end11:                                         ; preds = %if.then10, %land.lhs.true8, %if.end
  %15 = load i32, i32* %ret, align 4, !dbg !9540
  ret i32 %15, !dbg !9541
}

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #4

; Function Attrs: nounwind uwtable
define internal i32 @hls_mux_init(%struct.AVFormatContext* %s, %struct.VariantStream* %vs) #0 !dbg !9542 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %vs.addr = alloca %struct.VariantStream*, align 8
  %options = alloca %struct.AVDictionary*, align 8
  %hls = alloca %struct.HLSContext*, align 8
  %oc = alloca %struct.AVFormatContext*, align 8
  %vtt_oc = alloca %struct.AVFormatContext*, align 8
  %byterange_mode = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %st = alloca %struct.AVStream*, align 8
  %loc = alloca %struct.AVFormatContext*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !9543, metadata !2335), !dbg !9544
  store %struct.VariantStream* %vs, %struct.VariantStream** %vs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VariantStream** %vs.addr, metadata !9545, metadata !2335), !dbg !9546
  call void @llvm.dbg.declare(metadata %struct.AVDictionary** %options, metadata !9547, metadata !2335), !dbg !9548
  store %struct.AVDictionary* null, %struct.AVDictionary** %options, align 8, !dbg !9548
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %hls, metadata !9549, metadata !2335), !dbg !9550
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9551
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !9552
  %1 = load i8*, i8** %priv_data, align 8, !dbg !9552
  %2 = bitcast i8* %1 to %struct.HLSContext*, !dbg !9551
  store %struct.HLSContext* %2, %struct.HLSContext** %hls, align 8, !dbg !9550
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %oc, metadata !9553, metadata !2335), !dbg !9554
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %vtt_oc, metadata !9555, metadata !2335), !dbg !9556
  store %struct.AVFormatContext* null, %struct.AVFormatContext** %vtt_oc, align 8, !dbg !9556
  call void @llvm.dbg.declare(metadata i32* %byterange_mode, metadata !9557, metadata !2335), !dbg !9558
  %3 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !9559
  %flags = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %3, i32 0, i32 8, !dbg !9560
  %4 = load i32, i32* %flags, align 8, !dbg !9560
  %and = and i32 %4, 1, !dbg !9561
  %tobool = icmp ne i32 %and, 0, !dbg !9561
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !9562

lor.rhs:                                          ; preds = %entry
  %5 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !9563
  %max_seg_size = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %5, i32 0, i32 17, !dbg !9565
  %6 = load i64, i64* %max_seg_size, align 8, !dbg !9565
  %cmp = icmp sgt i64 %6, 0, !dbg !9566
  br label %lor.end, !dbg !9567

lor.end:                                          ; preds = %lor.rhs, %entry
  %7 = phi i1 [ true, %entry ], [ %cmp, %lor.rhs ]
  %lor.ext = zext i1 %7 to i32, !dbg !9568
  store i32 %lor.ext, i32* %byterange_mode, align 4, !dbg !9570
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9571, metadata !2335), !dbg !9572
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9573, metadata !2335), !dbg !9574
  %8 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !9575
  %avf = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %8, i32 0, i32 8, !dbg !9576
  %9 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !9577
  %oformat = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %9, i32 0, i32 3, !dbg !9578
  %10 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat, align 8, !dbg !9578
  %call = call i32 @avformat_alloc_output_context2(%struct.AVFormatContext** %avf, %struct.AVOutputFormat* %10, i8* null, i8* null), !dbg !9579
  store i32 %call, i32* %ret, align 4, !dbg !9580
  %11 = load i32, i32* %ret, align 4, !dbg !9581
  %cmp1 = icmp slt i32 %11, 0, !dbg !9583
  br i1 %cmp1, label %if.then, label %if.end, !dbg !9584

if.then:                                          ; preds = %lor.end
  %12 = load i32, i32* %ret, align 4, !dbg !9585
  store i32 %12, i32* %retval, align 4, !dbg !9586
  br label %return, !dbg !9586

if.end:                                           ; preds = %lor.end
  %13 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !9587
  %avf2 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %13, i32 0, i32 8, !dbg !9588
  %14 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf2, align 8, !dbg !9588
  store %struct.AVFormatContext* %14, %struct.AVFormatContext** %oc, align 8, !dbg !9589
  %call3 = call noalias i8* @av_strdup(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.133, i32 0, i32 0)), !dbg !9590
  %15 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !9591
  %url = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %15, i32 0, i32 9, !dbg !9592
  store i8* %call3, i8** %url, align 8, !dbg !9593
  %16 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !9594
  %url4 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %16, i32 0, i32 9, !dbg !9596
  %17 = load i8*, i8** %url4, align 8, !dbg !9596
  %tobool5 = icmp ne i8* %17, null, !dbg !9594
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !9597

if.then6:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !9598
  br label %return, !dbg !9598

if.end7:                                          ; preds = %if.end
  %18 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !9599
  %oformat8 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %18, i32 0, i32 3, !dbg !9600
  %19 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat8, align 8, !dbg !9600
  %20 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !9601
  %oformat9 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %20, i32 0, i32 2, !dbg !9602
  store %struct.AVOutputFormat* %19, %struct.AVOutputFormat** %oformat9, align 8, !dbg !9603
  %21 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !9604
  %interrupt_callback = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %21, i32 0, i32 33, !dbg !9605
  %22 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9606
  %interrupt_callback10 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %22, i32 0, i32 33, !dbg !9607
  %23 = bitcast %struct.AVIOInterruptCB* %interrupt_callback to i8*, !dbg !9607
  %24 = bitcast %struct.AVIOInterruptCB* %interrupt_callback10 to i8*, !dbg !9607
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 16, i32 8, i1 false), !dbg !9607
  %25 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9608
  %max_delay = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %25, i32 0, i32 14, !dbg !9609
  %26 = load i32, i32* %max_delay, align 4, !dbg !9609
  %27 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !9610
  %max_delay11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %27, i32 0, i32 14, !dbg !9611
  store i32 %26, i32* %max_delay11, align 4, !dbg !9612
  %28 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9613
  %opaque = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %28, i32 0, i32 62, !dbg !9614
  %29 = load i8*, i8** %opaque, align 8, !dbg !9614
  %30 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !9615
  %opaque12 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %30, i32 0, i32 62, !dbg !9616
  store i8* %29, i8** %opaque12, align 8, !dbg !9617
  %31 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9618
  %io_open = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %31, i32 0, i32 69, !dbg !9619
  %32 = load i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)*, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)** %io_open, align 8, !dbg !9619
  %33 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !9620
  %io_open13 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %33, i32 0, i32 69, !dbg !9621
  store i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)* %32, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)** %io_open13, align 8, !dbg !9622
  %34 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9623
  %io_close = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %34, i32 0, i32 70, !dbg !9624
  %35 = load void (%struct.AVFormatContext*, %struct.AVIOContext*)*, void (%struct.AVFormatContext*, %struct.AVIOContext*)** %io_close, align 8, !dbg !9624
  %36 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !9625
  %io_close14 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %36, i32 0, i32 70, !dbg !9626
  store void (%struct.AVFormatContext*, %struct.AVIOContext*)* %35, void (%struct.AVFormatContext*, %struct.AVIOContext*)** %io_close14, align 8, !dbg !9627
  %37 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !9628
  %metadata = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %37, i32 0, i32 29, !dbg !9629
  %38 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9630
  %metadata15 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %38, i32 0, i32 29, !dbg !9631
  %39 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata15, align 8, !dbg !9631
  %call16 = call i32 @av_dict_copy(%struct.AVDictionary** %metadata, %struct.AVDictionary* %39, i32 0), !dbg !9632
  %40 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !9633
  %vtt_oformat = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %40, i32 0, i32 4, !dbg !9635
  %41 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %vtt_oformat, align 8, !dbg !9635
  %tobool17 = icmp ne %struct.AVOutputFormat* %41, null, !dbg !9633
  br i1 %tobool17, label %if.then18, label %if.end30, !dbg !9636

if.then18:                                        ; preds = %if.end7
  %42 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !9637
  %vtt_avf = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %42, i32 0, i32 9, !dbg !9639
  %43 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !9640
  %vtt_oformat19 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %43, i32 0, i32 4, !dbg !9641
  %44 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %vtt_oformat19, align 8, !dbg !9641
  %call20 = call i32 @avformat_alloc_output_context2(%struct.AVFormatContext** %vtt_avf, %struct.AVOutputFormat* %44, i8* null, i8* null), !dbg !9642
  store i32 %call20, i32* %ret, align 4, !dbg !9643
  %45 = load i32, i32* %ret, align 4, !dbg !9644
  %cmp21 = icmp slt i32 %45, 0, !dbg !9646
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !9647

if.then22:                                        ; preds = %if.then18
  %46 = load i32, i32* %ret, align 4, !dbg !9648
  store i32 %46, i32* %retval, align 4, !dbg !9649
  br label %return, !dbg !9649

if.end23:                                         ; preds = %if.then18
  %47 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !9650
  %vtt_avf24 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %47, i32 0, i32 9, !dbg !9651
  %48 = load %struct.AVFormatContext*, %struct.AVFormatContext** %vtt_avf24, align 8, !dbg !9651
  store %struct.AVFormatContext* %48, %struct.AVFormatContext** %vtt_oc, align 8, !dbg !9652
  %49 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !9653
  %vtt_oformat25 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %49, i32 0, i32 4, !dbg !9654
  %50 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %vtt_oformat25, align 8, !dbg !9654
  %51 = load %struct.AVFormatContext*, %struct.AVFormatContext** %vtt_oc, align 8, !dbg !9655
  %oformat26 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %51, i32 0, i32 2, !dbg !9656
  store %struct.AVOutputFormat* %50, %struct.AVOutputFormat** %oformat26, align 8, !dbg !9657
  %52 = load %struct.AVFormatContext*, %struct.AVFormatContext** %vtt_oc, align 8, !dbg !9658
  %metadata27 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %52, i32 0, i32 29, !dbg !9659
  %53 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9660
  %metadata28 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %53, i32 0, i32 29, !dbg !9661
  %54 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata28, align 8, !dbg !9661
  %call29 = call i32 @av_dict_copy(%struct.AVDictionary** %metadata27, %struct.AVDictionary* %54, i32 0), !dbg !9662
  br label %if.end30, !dbg !9663

if.end30:                                         ; preds = %if.end23, %if.end7
  store i32 0, i32* %i, align 4, !dbg !9664
  br label %for.cond, !dbg !9666

for.cond:                                         ; preds = %for.inc, %if.end30
  %55 = load i32, i32* %i, align 4, !dbg !9667
  %56 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !9670
  %nb_streams = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %56, i32 0, i32 37, !dbg !9671
  %57 = load i32, i32* %nb_streams, align 4, !dbg !9671
  %cmp31 = icmp ult i32 %55, %57, !dbg !9672
  br i1 %cmp31, label %for.body, label %for.end, !dbg !9673

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !9674, metadata !2335), !dbg !9676
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %loc, metadata !9677, metadata !2335), !dbg !9678
  %58 = load i32, i32* %i, align 4, !dbg !9679
  %idxprom = sext i32 %58 to i64, !dbg !9681
  %59 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !9681
  %streams = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %59, i32 0, i32 34, !dbg !9682
  %60 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !9682
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %60, i64 %idxprom, !dbg !9681
  %61 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !9681
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %61, i32 0, i32 19, !dbg !9683
  %62 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !9683
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %62, i32 0, i32 0, !dbg !9684
  %63 = load i32, i32* %codec_type, align 8, !dbg !9684
  %cmp32 = icmp eq i32 %63, 3, !dbg !9685
  br i1 %cmp32, label %if.then33, label %if.else, !dbg !9686

if.then33:                                        ; preds = %for.body
  %64 = load %struct.AVFormatContext*, %struct.AVFormatContext** %vtt_oc, align 8, !dbg !9687
  store %struct.AVFormatContext* %64, %struct.AVFormatContext** %loc, align 8, !dbg !9688
  br label %if.end34, !dbg !9689

if.else:                                          ; preds = %for.body
  %65 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !9690
  store %struct.AVFormatContext* %65, %struct.AVFormatContext** %loc, align 8, !dbg !9691
  br label %if.end34

if.end34:                                         ; preds = %if.else, %if.then33
  %66 = load %struct.AVFormatContext*, %struct.AVFormatContext** %loc, align 8, !dbg !9692
  %call35 = call %struct.AVStream* @avformat_new_stream(%struct.AVFormatContext* %66, %struct.AVCodec* null), !dbg !9694
  store %struct.AVStream* %call35, %struct.AVStream** %st, align 8, !dbg !9695
  %tobool36 = icmp ne %struct.AVStream* %call35, null, !dbg !9695
  br i1 %tobool36, label %if.end38, label %if.then37, !dbg !9696

if.then37:                                        ; preds = %if.end34
  store i32 -12, i32* %retval, align 4, !dbg !9697
  br label %return, !dbg !9697

if.end38:                                         ; preds = %if.end34
  %67 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9698
  %codecpar39 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %67, i32 0, i32 19, !dbg !9699
  %68 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar39, align 8, !dbg !9699
  %69 = load i32, i32* %i, align 4, !dbg !9700
  %idxprom40 = sext i32 %69 to i64, !dbg !9701
  %70 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !9701
  %streams41 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %70, i32 0, i32 34, !dbg !9702
  %71 = load %struct.AVStream**, %struct.AVStream*** %streams41, align 8, !dbg !9702
  %arrayidx42 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %71, i64 %idxprom40, !dbg !9701
  %72 = load %struct.AVStream*, %struct.AVStream** %arrayidx42, align 8, !dbg !9701
  %codecpar43 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %72, i32 0, i32 19, !dbg !9703
  %73 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar43, align 8, !dbg !9703
  %call44 = call i32 @avcodec_parameters_copy(%struct.AVCodecParameters* %68, %struct.AVCodecParameters* %73), !dbg !9704
  %74 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !9705
  %oformat45 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %74, i32 0, i32 2, !dbg !9707
  %75 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat45, align 8, !dbg !9707
  %codec_tag = getelementptr inbounds %struct.AVOutputFormat, %struct.AVOutputFormat* %75, i32 0, i32 8, !dbg !9708
  %76 = load %struct.AVCodecTag**, %struct.AVCodecTag*** %codec_tag, align 8, !dbg !9708
  %tobool46 = icmp ne %struct.AVCodecTag** %76, null, !dbg !9705
  br i1 %tobool46, label %lor.lhs.false, label %if.then67, !dbg !9709

lor.lhs.false:                                    ; preds = %if.end38
  %77 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !9710
  %oformat47 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %77, i32 0, i32 2, !dbg !9711
  %78 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat47, align 8, !dbg !9711
  %codec_tag48 = getelementptr inbounds %struct.AVOutputFormat, %struct.AVOutputFormat* %78, i32 0, i32 8, !dbg !9712
  %79 = load %struct.AVCodecTag**, %struct.AVCodecTag*** %codec_tag48, align 8, !dbg !9712
  %80 = load i32, i32* %i, align 4, !dbg !9713
  %idxprom49 = sext i32 %80 to i64, !dbg !9714
  %81 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !9714
  %streams50 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %81, i32 0, i32 34, !dbg !9715
  %82 = load %struct.AVStream**, %struct.AVStream*** %streams50, align 8, !dbg !9715
  %arrayidx51 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %82, i64 %idxprom49, !dbg !9714
  %83 = load %struct.AVStream*, %struct.AVStream** %arrayidx51, align 8, !dbg !9714
  %codecpar52 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %83, i32 0, i32 19, !dbg !9716
  %84 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar52, align 8, !dbg !9716
  %codec_tag53 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %84, i32 0, i32 2, !dbg !9717
  %85 = load i32, i32* %codec_tag53, align 8, !dbg !9717
  %call54 = call i32 @av_codec_get_id(%struct.AVCodecTag** %79, i32 %85), !dbg !9718
  %86 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9719
  %codecpar55 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %86, i32 0, i32 19, !dbg !9720
  %87 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar55, align 8, !dbg !9720
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %87, i32 0, i32 1, !dbg !9721
  %88 = load i32, i32* %codec_id, align 4, !dbg !9721
  %cmp56 = icmp eq i32 %call54, %88, !dbg !9722
  br i1 %cmp56, label %if.then67, label %lor.lhs.false57, !dbg !9723

lor.lhs.false57:                                  ; preds = %lor.lhs.false
  %89 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !9724
  %oformat58 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %89, i32 0, i32 2, !dbg !9725
  %90 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat58, align 8, !dbg !9725
  %codec_tag59 = getelementptr inbounds %struct.AVOutputFormat, %struct.AVOutputFormat* %90, i32 0, i32 8, !dbg !9726
  %91 = load %struct.AVCodecTag**, %struct.AVCodecTag*** %codec_tag59, align 8, !dbg !9726
  %92 = load i32, i32* %i, align 4, !dbg !9727
  %idxprom60 = sext i32 %92 to i64, !dbg !9728
  %93 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !9728
  %streams61 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %93, i32 0, i32 34, !dbg !9729
  %94 = load %struct.AVStream**, %struct.AVStream*** %streams61, align 8, !dbg !9729
  %arrayidx62 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %94, i64 %idxprom60, !dbg !9728
  %95 = load %struct.AVStream*, %struct.AVStream** %arrayidx62, align 8, !dbg !9728
  %codecpar63 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %95, i32 0, i32 19, !dbg !9730
  %96 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar63, align 8, !dbg !9730
  %codec_id64 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %96, i32 0, i32 1, !dbg !9731
  %97 = load i32, i32* %codec_id64, align 4, !dbg !9731
  %call65 = call i32 @av_codec_get_tag(%struct.AVCodecTag** %91, i32 %97), !dbg !9732
  %cmp66 = icmp ule i32 %call65, 0, !dbg !9733
  br i1 %cmp66, label %if.then67, label %if.else75, !dbg !9734

if.then67:                                        ; preds = %lor.lhs.false57, %lor.lhs.false, %if.end38
  %98 = load i32, i32* %i, align 4, !dbg !9736
  %idxprom68 = sext i32 %98 to i64, !dbg !9738
  %99 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !9738
  %streams69 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %99, i32 0, i32 34, !dbg !9739
  %100 = load %struct.AVStream**, %struct.AVStream*** %streams69, align 8, !dbg !9739
  %arrayidx70 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %100, i64 %idxprom68, !dbg !9738
  %101 = load %struct.AVStream*, %struct.AVStream** %arrayidx70, align 8, !dbg !9738
  %codecpar71 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %101, i32 0, i32 19, !dbg !9740
  %102 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar71, align 8, !dbg !9740
  %codec_tag72 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %102, i32 0, i32 2, !dbg !9741
  %103 = load i32, i32* %codec_tag72, align 8, !dbg !9741
  %104 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9742
  %codecpar73 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %104, i32 0, i32 19, !dbg !9743
  %105 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar73, align 8, !dbg !9743
  %codec_tag74 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %105, i32 0, i32 2, !dbg !9744
  store i32 %103, i32* %codec_tag74, align 8, !dbg !9745
  br label %if.end78, !dbg !9746

if.else75:                                        ; preds = %lor.lhs.false57
  %106 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9747
  %codecpar76 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %106, i32 0, i32 19, !dbg !9749
  %107 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar76, align 8, !dbg !9749
  %codec_tag77 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %107, i32 0, i32 2, !dbg !9750
  store i32 0, i32* %codec_tag77, align 8, !dbg !9751
  br label %if.end78

if.end78:                                         ; preds = %if.else75, %if.then67
  %108 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9752
  %sample_aspect_ratio = getelementptr inbounds %struct.AVStream, %struct.AVStream* %108, i32 0, i32 10, !dbg !9753
  %109 = load i32, i32* %i, align 4, !dbg !9754
  %idxprom79 = sext i32 %109 to i64, !dbg !9755
  %110 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !9755
  %streams80 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %110, i32 0, i32 34, !dbg !9756
  %111 = load %struct.AVStream**, %struct.AVStream*** %streams80, align 8, !dbg !9756
  %arrayidx81 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %111, i64 %idxprom79, !dbg !9755
  %112 = load %struct.AVStream*, %struct.AVStream** %arrayidx81, align 8, !dbg !9755
  %sample_aspect_ratio82 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %112, i32 0, i32 10, !dbg !9757
  %113 = bitcast %struct.AVRational* %sample_aspect_ratio to i8*, !dbg !9757
  %114 = bitcast %struct.AVRational* %sample_aspect_ratio82 to i8*, !dbg !9757
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %113, i8* %114, i64 8, i32 8, i1 false), !dbg !9757
  %115 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9758
  %time_base = getelementptr inbounds %struct.AVStream, %struct.AVStream* %115, i32 0, i32 4, !dbg !9759
  %116 = load i32, i32* %i, align 4, !dbg !9760
  %idxprom83 = sext i32 %116 to i64, !dbg !9761
  %117 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !9761
  %streams84 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %117, i32 0, i32 34, !dbg !9762
  %118 = load %struct.AVStream**, %struct.AVStream*** %streams84, align 8, !dbg !9762
  %arrayidx85 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %118, i64 %idxprom83, !dbg !9761
  %119 = load %struct.AVStream*, %struct.AVStream** %arrayidx85, align 8, !dbg !9761
  %time_base86 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %119, i32 0, i32 4, !dbg !9763
  %120 = bitcast %struct.AVRational* %time_base to i8*, !dbg !9763
  %121 = bitcast %struct.AVRational* %time_base86 to i8*, !dbg !9763
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %120, i8* %121, i64 8, i32 8, i1 false), !dbg !9763
  %122 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9764
  %metadata87 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %122, i32 0, i32 11, !dbg !9765
  %123 = load i32, i32* %i, align 4, !dbg !9766
  %idxprom88 = sext i32 %123 to i64, !dbg !9767
  %124 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !9767
  %streams89 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %124, i32 0, i32 34, !dbg !9768
  %125 = load %struct.AVStream**, %struct.AVStream*** %streams89, align 8, !dbg !9768
  %arrayidx90 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %125, i64 %idxprom88, !dbg !9767
  %126 = load %struct.AVStream*, %struct.AVStream** %arrayidx90, align 8, !dbg !9767
  %metadata91 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %126, i32 0, i32 11, !dbg !9769
  %127 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata91, align 8, !dbg !9769
  %call92 = call i32 @av_dict_copy(%struct.AVDictionary** %metadata87, %struct.AVDictionary* %127, i32 0), !dbg !9770
  br label %for.inc, !dbg !9771

for.inc:                                          ; preds = %if.end78
  %128 = load i32, i32* %i, align 4, !dbg !9772
  %inc = add nsw i32 %128, 1, !dbg !9772
  store i32 %inc, i32* %i, align 4, !dbg !9772
  br label %for.cond, !dbg !9774, !llvm.loop !9775

for.end:                                          ; preds = %for.cond
  %129 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !9777
  %packets_written = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %129, i32 0, i32 6, !dbg !9778
  store i32 1, i32* %packets_written, align 8, !dbg !9779
  %130 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !9780
  %start_pos = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %130, i32 0, i32 17, !dbg !9781
  store i64 0, i64* %start_pos, align 8, !dbg !9782
  %131 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !9783
  %new_start = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %131, i32 0, i32 12, !dbg !9784
  store i32 1, i32* %new_start, align 8, !dbg !9785
  %132 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !9786
  %segment_type = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %132, i32 0, i32 12, !dbg !9788
  %133 = load i32, i32* %segment_type, align 8, !dbg !9788
  %cmp93 = icmp eq i32 %133, 1, !dbg !9789
  br i1 %cmp93, label %if.then94, label %if.end137, !dbg !9790

if.then94:                                        ; preds = %for.end
  %134 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !9791
  %max_seg_size95 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %134, i32 0, i32 17, !dbg !9794
  %135 = load i64, i64* %max_seg_size95, align 8, !dbg !9794
  %cmp96 = icmp sgt i64 %135, 0, !dbg !9795
  br i1 %cmp96, label %if.then97, label %if.end98, !dbg !9796

if.then97:                                        ; preds = %if.then94
  %136 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9797
  %137 = bitcast %struct.AVFormatContext* %136 to i8*, !dbg !9797
  call void (i8*, i32, i8*, ...) @av_log(i8* %137, i32 24, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.256, i32 0, i32 0)), !dbg !9799
  store i32 -1163346256, i32* %retval, align 4, !dbg !9800
  br label %return, !dbg !9800

if.end98:                                         ; preds = %if.then94
  %138 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !9801
  %packets_written99 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %138, i32 0, i32 6, !dbg !9802
  store i32 0, i32* %packets_written99, align 8, !dbg !9803
  %139 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !9804
  %init_range_length = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %139, i32 0, i32 7, !dbg !9805
  store i32 0, i32* %init_range_length, align 4, !dbg !9806
  %140 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9807
  %141 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !9808
  call void @set_http_options(%struct.AVFormatContext* %140, %struct.AVDictionary** %options, %struct.HLSContext* %141), !dbg !9809
  %142 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !9810
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %142, i32 0, i32 4, !dbg !9812
  %call100 = call i32 @avio_open_dyn_buf(%struct.AVIOContext** %pb), !dbg !9813
  store i32 %call100, i32* %ret, align 4, !dbg !9814
  %cmp101 = icmp slt i32 %call100, 0, !dbg !9815
  br i1 %cmp101, label %if.then102, label %if.end103, !dbg !9816

if.then102:                                       ; preds = %if.end98
  %143 = load i32, i32* %ret, align 4, !dbg !9817
  store i32 %143, i32* %retval, align 4, !dbg !9818
  br label %return, !dbg !9818

if.end103:                                        ; preds = %if.end98
  %144 = load i32, i32* %byterange_mode, align 4, !dbg !9819
  %tobool104 = icmp ne i32 %144, 0, !dbg !9819
  br i1 %tobool104, label %if.then105, label %if.else107, !dbg !9821

if.then105:                                       ; preds = %if.end103
  %145 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9822
  %146 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !9824
  %out = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %146, i32 0, i32 5, !dbg !9825
  %147 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !9826
  %basename = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %147, i32 0, i32 26, !dbg !9827
  %148 = load i8*, i8** %basename, align 8, !dbg !9827
  %call106 = call i32 @hlsenc_io_open(%struct.AVFormatContext* %145, %struct.AVIOContext** %out, i8* %148, %struct.AVDictionary** %options), !dbg !9828
  store i32 %call106, i32* %ret, align 4, !dbg !9829
  br label %if.end110, !dbg !9830

if.else107:                                       ; preds = %if.end103
  %149 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9831
  %150 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !9833
  %out108 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %150, i32 0, i32 5, !dbg !9834
  %151 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !9835
  %base_output_dirname = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %151, i32 0, i32 33, !dbg !9836
  %152 = load i8*, i8** %base_output_dirname, align 8, !dbg !9836
  %call109 = call i32 @hlsenc_io_open(%struct.AVFormatContext* %149, %struct.AVIOContext** %out108, i8* %152, %struct.AVDictionary** %options), !dbg !9837
  store i32 %call109, i32* %ret, align 4, !dbg !9838
  br label %if.end110

if.end110:                                        ; preds = %if.else107, %if.then105
  call void @av_dict_free(%struct.AVDictionary** %options), !dbg !9839
  %153 = load i32, i32* %ret, align 4, !dbg !9840
  %cmp111 = icmp slt i32 %153, 0, !dbg !9842
  br i1 %cmp111, label %if.then112, label %if.end113, !dbg !9843

if.then112:                                       ; preds = %if.end110
  %154 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9844
  %155 = bitcast %struct.AVFormatContext* %154 to i8*, !dbg !9844
  %156 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !9846
  %fmp4_init_filename = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %156, i32 0, i32 32, !dbg !9847
  %157 = load i8*, i8** %fmp4_init_filename, align 8, !dbg !9847
  call void (i8*, i32, i8*, ...) @av_log(i8* %155, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.257, i32 0, i32 0), i8* %157), !dbg !9848
  %158 = load i32, i32* %ret, align 4, !dbg !9849
  store i32 %158, i32* %retval, align 4, !dbg !9850
  br label %return, !dbg !9850

if.end113:                                        ; preds = %if.end110
  %159 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !9851
  %format_options_str = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %159, i32 0, i32 19, !dbg !9853
  %160 = load i8*, i8** %format_options_str, align 8, !dbg !9853
  %tobool114 = icmp ne i8* %160, null, !dbg !9851
  br i1 %tobool114, label %if.then115, label %if.end122, !dbg !9854

if.then115:                                       ; preds = %if.end113
  %161 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !9855
  %format_options = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %161, i32 0, i32 22, !dbg !9857
  %162 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !9858
  %format_options_str116 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %162, i32 0, i32 19, !dbg !9859
  %163 = load i8*, i8** %format_options_str116, align 8, !dbg !9859
  %call117 = call i32 @av_dict_parse_string(%struct.AVDictionary** %format_options, i8* %163, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.213, i32 0, i32 0), i32 0), !dbg !9860
  store i32 %call117, i32* %ret, align 4, !dbg !9861
  %164 = load i32, i32* %ret, align 4, !dbg !9862
  %cmp118 = icmp slt i32 %164, 0, !dbg !9864
  br i1 %cmp118, label %if.then119, label %if.end121, !dbg !9865

if.then119:                                       ; preds = %if.then115
  %165 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9866
  %166 = bitcast %struct.AVFormatContext* %165 to i8*, !dbg !9866
  %167 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !9868
  %format_options_str120 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %167, i32 0, i32 19, !dbg !9869
  %168 = load i8*, i8** %format_options_str120, align 8, !dbg !9869
  call void (i8*, i32, i8*, ...) @av_log(i8* %166, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.214, i32 0, i32 0), i8* %168), !dbg !9870
  %169 = load i32, i32* %ret, align 4, !dbg !9871
  store i32 %169, i32* %retval, align 4, !dbg !9872
  br label %return, !dbg !9872

if.end121:                                        ; preds = %if.then115
  br label %if.end122, !dbg !9873

if.end122:                                        ; preds = %if.end121, %if.end113
  %170 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !9874
  %format_options123 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %170, i32 0, i32 22, !dbg !9875
  %171 = load %struct.AVDictionary*, %struct.AVDictionary** %format_options123, align 8, !dbg !9875
  %call124 = call i32 @av_dict_copy(%struct.AVDictionary** %options, %struct.AVDictionary* %171, i32 0), !dbg !9876
  %call125 = call i32 @av_dict_set(%struct.AVDictionary** %options, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.258, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.259, i32 0, i32 0), i32 0), !dbg !9877
  %call126 = call i32 @av_dict_set(%struct.AVDictionary** %options, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.260, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.261, i32 0, i32 0), i32 32), !dbg !9878
  %172 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !9879
  %call127 = call i32 @avformat_init_output(%struct.AVFormatContext* %172, %struct.AVDictionary** %options), !dbg !9880
  store i32 %call127, i32* %ret, align 4, !dbg !9881
  %173 = load i32, i32* %ret, align 4, !dbg !9882
  %cmp128 = icmp slt i32 %173, 0, !dbg !9884
  br i1 %cmp128, label %if.then129, label %if.end130, !dbg !9885

if.then129:                                       ; preds = %if.end122
  %174 = load i32, i32* %ret, align 4, !dbg !9886
  store i32 %174, i32* %retval, align 4, !dbg !9887
  br label %return, !dbg !9887

if.end130:                                        ; preds = %if.end122
  %175 = load %struct.AVDictionary*, %struct.AVDictionary** %options, align 8, !dbg !9888
  %call131 = call i32 @av_dict_count(%struct.AVDictionary* %175), !dbg !9890
  %tobool132 = icmp ne i32 %call131, 0, !dbg !9890
  br i1 %tobool132, label %if.then133, label %if.end135, !dbg !9891

if.then133:                                       ; preds = %if.end130
  %176 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9892
  %177 = bitcast %struct.AVFormatContext* %176 to i8*, !dbg !9892
  %178 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !9894
  %format_options_str134 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %178, i32 0, i32 19, !dbg !9895
  %179 = load i8*, i8** %format_options_str134, align 8, !dbg !9895
  call void (i8*, i32, i8*, ...) @av_log(i8* %177, i32 16, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.262, i32 0, i32 0), i8* %179), !dbg !9896
  call void @av_dict_free(%struct.AVDictionary** %options), !dbg !9897
  store i32 -22, i32* %retval, align 4, !dbg !9898
  br label %return, !dbg !9898

if.end135:                                        ; preds = %if.end130
  %180 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !9899
  %pb136 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %180, i32 0, i32 4, !dbg !9900
  %181 = load %struct.AVIOContext*, %struct.AVIOContext** %pb136, align 8, !dbg !9900
  call void @avio_flush(%struct.AVIOContext* %181), !dbg !9901
  call void @av_dict_free(%struct.AVDictionary** %options), !dbg !9902
  br label %if.end137, !dbg !9903

if.end137:                                        ; preds = %if.end135, %for.end
  store i32 0, i32* %retval, align 4, !dbg !9904
  br label %return, !dbg !9904

return:                                           ; preds = %if.end137, %if.then133, %if.then129, %if.then119, %if.then112, %if.then102, %if.then97, %if.then37, %if.then22, %if.then6, %if.then
  %182 = load i32, i32* %retval, align 4, !dbg !9905
  ret i32 %182, !dbg !9905
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_playlist(%struct.AVFormatContext* %s, i8* %url, %struct.VariantStream* %vs) #0 !dbg !9906 {
entry:
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2599, metadata !2335), !dbg !9909
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %url.addr = alloca i8*, align 8
  %vs.addr = alloca %struct.VariantStream*, align 8
  %hls = alloca %struct.HLSContext*, align 8
  %in = alloca %struct.AVIOContext*, align 8
  %ret = alloca i32, align 4
  %is_segment = alloca i32, align 4
  %new_start_pos = alloca i64, align 8
  %line = alloca [1024 x i8], align 16
  %ptr = alloca i8*, align 8
  %end = alloca i8*, align 8
  %tmp_sequence = alloca i64, align 8
  %new_file = alloca i8*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !9921, metadata !2335), !dbg !9922
  store i8* %url, i8** %url.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %url.addr, metadata !9923, metadata !2335), !dbg !9924
  store %struct.VariantStream* %vs, %struct.VariantStream** %vs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VariantStream** %vs.addr, metadata !9925, metadata !2335), !dbg !9926
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %hls, metadata !9927, metadata !2335), !dbg !9928
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9929
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !9930
  %1 = load i8*, i8** %priv_data, align 8, !dbg !9930
  %2 = bitcast i8* %1 to %struct.HLSContext*, !dbg !9929
  store %struct.HLSContext* %2, %struct.HLSContext** %hls, align 8, !dbg !9928
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %in, metadata !9931, metadata !2335), !dbg !9932
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9933, metadata !2335), !dbg !9934
  store i32 0, i32* %ret, align 4, !dbg !9934
  call void @llvm.dbg.declare(metadata i32* %is_segment, metadata !9935, metadata !2335), !dbg !9936
  store i32 0, i32* %is_segment, align 4, !dbg !9936
  call void @llvm.dbg.declare(metadata i64* %new_start_pos, metadata !9937, metadata !2335), !dbg !9938
  call void @llvm.dbg.declare(metadata [1024 x i8]* %line, metadata !9939, metadata !2335), !dbg !9940
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !9941, metadata !2335), !dbg !9942
  call void @llvm.dbg.declare(metadata i8** %end, metadata !9943, metadata !2335), !dbg !9944
  %3 = load i8*, i8** %url.addr, align 8, !dbg !9945
  %4 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9947
  %interrupt_callback = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %4, i32 0, i32 33, !dbg !9948
  %5 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9949
  %protocol_whitelist = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %5, i32 0, i32 68, !dbg !9950
  %6 = load i8*, i8** %protocol_whitelist, align 8, !dbg !9950
  %7 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9951
  %protocol_blacklist = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %7, i32 0, i32 71, !dbg !9952
  %8 = load i8*, i8** %protocol_blacklist, align 8, !dbg !9952
  %call = call i32 @ffio_open_whitelist(%struct.AVIOContext** %in, i8* %3, i32 1, %struct.AVIOInterruptCB* %interrupt_callback, %struct.AVDictionary** null, i8* %6, i8* %8), !dbg !9953
  store i32 %call, i32* %ret, align 4, !dbg !9954
  %cmp = icmp slt i32 %call, 0, !dbg !9955
  br i1 %cmp, label %if.then, label %if.end, !dbg !9956

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %ret, align 4, !dbg !9957
  store i32 %9, i32* %retval, align 4, !dbg !9958
  br label %return, !dbg !9958

if.end:                                           ; preds = %entry
  %10 = load %struct.AVIOContext*, %struct.AVIOContext** %in, align 8, !dbg !9959
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %line, i32 0, i32 0, !dbg !9960
  %call1 = call i32 @ff_get_chomp_line(%struct.AVIOContext* %10, i8* %arraydecay, i32 1024), !dbg !9961
  %arraydecay2 = getelementptr inbounds [1024 x i8], [1024 x i8]* %line, i32 0, i32 0, !dbg !9962
  %call3 = call i32 @strcmp(i8* %arraydecay2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.263, i32 0, i32 0)) #11, !dbg !9964
  %tobool = icmp ne i32 %call3, 0, !dbg !9964
  br i1 %tobool, label %if.then4, label %if.end5, !dbg !9965

if.then4:                                         ; preds = %if.end
  store i32 -1094995529, i32* %ret, align 4, !dbg !9966
  br label %fail, !dbg !9968

if.end5:                                          ; preds = %if.end
  %11 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !9969
  %discontinuity = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %11, i32 0, i32 21, !dbg !9970
  store i32 0, i32* %discontinuity, align 8, !dbg !9971
  br label %while.cond, !dbg !9972

while.cond:                                       ; preds = %if.end101, %if.then74, %if.end5
  %12 = load %struct.AVIOContext*, %struct.AVIOContext** %in, align 8, !dbg !9973
  %call6 = call i32 @avio_feof(%struct.AVIOContext* %12), !dbg !9975
  %tobool7 = icmp ne i32 %call6, 0, !dbg !9976
  %lnot = xor i1 %tobool7, true, !dbg !9976
  br i1 %lnot, label %while.body, label %while.end, !dbg !9977

while.body:                                       ; preds = %while.cond
  %13 = load %struct.AVIOContext*, %struct.AVIOContext** %in, align 8, !dbg !9978
  %arraydecay8 = getelementptr inbounds [1024 x i8], [1024 x i8]* %line, i32 0, i32 0, !dbg !9979
  %call9 = call i32 @ff_get_chomp_line(%struct.AVIOContext* %13, i8* %arraydecay8, i32 1024), !dbg !9980
  %arraydecay10 = getelementptr inbounds [1024 x i8], [1024 x i8]* %line, i32 0, i32 0, !dbg !9981
  %call11 = call i32 @av_strstart(i8* %arraydecay10, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.264, i32 0, i32 0), i8** %ptr), !dbg !9982
  %tobool12 = icmp ne i32 %call11, 0, !dbg !9982
  br i1 %tobool12, label %if.then13, label %if.else19, !dbg !9983

if.then13:                                        ; preds = %while.body
  call void @llvm.dbg.declare(metadata i64* %tmp_sequence, metadata !9984, metadata !2335), !dbg !9986
  %14 = load i8*, i8** %ptr, align 8, !dbg !9987
  %call14 = call i64 @strtoll(i8* %14, i8** null, i32 10) #10, !dbg !9988
  store i64 %call14, i64* %tmp_sequence, align 8, !dbg !9986
  %15 = load i64, i64* %tmp_sequence, align 8, !dbg !9989
  %16 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !9991
  %sequence = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %16, i32 0, i32 2, !dbg !9992
  %17 = load i64, i64* %sequence, align 8, !dbg !9992
  %cmp15 = icmp slt i64 %15, %17, !dbg !9993
  br i1 %cmp15, label %if.then16, label %if.else, !dbg !9994

if.then16:                                        ; preds = %if.then13
  %18 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !9995
  %19 = bitcast %struct.HLSContext* %18 to i8*, !dbg !9995
  %20 = load i64, i64* %tmp_sequence, align 8, !dbg !9996
  %21 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !9997
  %start_sequence = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %21, i32 0, i32 1, !dbg !9998
  %22 = load i64, i64* %start_sequence, align 8, !dbg !9998
  call void (i8*, i32, i8*, ...) @av_log(i8* %19, i32 40, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.265, i32 0, i32 0), i64 %20, i64 %22), !dbg !9999
  br label %if.end18, !dbg !9999

if.else:                                          ; preds = %if.then13
  %23 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !10000
  %24 = bitcast %struct.HLSContext* %23 to i8*, !dbg !10000
  %25 = load i64, i64* %tmp_sequence, align 8, !dbg !10002
  call void (i8*, i32, i8*, ...) @av_log(i8* %24, i32 48, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.266, i32 0, i32 0), i64 %25), !dbg !10003
  %26 = load i64, i64* %tmp_sequence, align 8, !dbg !10004
  %27 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !10005
  %sequence17 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %27, i32 0, i32 2, !dbg !10006
  store i64 %26, i64* %sequence17, align 8, !dbg !10007
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then16
  br label %if.end101, !dbg !10008

if.else19:                                        ; preds = %while.body
  %arraydecay20 = getelementptr inbounds [1024 x i8], [1024 x i8]* %line, i32 0, i32 0, !dbg !10009
  %call21 = call i32 @av_strstart(i8* %arraydecay20, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.267, i32 0, i32 0), i8** %ptr), !dbg !10011
  %tobool22 = icmp ne i32 %call21, 0, !dbg !10011
  br i1 %tobool22, label %if.then23, label %if.else25, !dbg !10011

if.then23:                                        ; preds = %if.else19
  store i32 1, i32* %is_segment, align 4, !dbg !10012
  %28 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !10014
  %discontinuity24 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %28, i32 0, i32 21, !dbg !10015
  store i32 1, i32* %discontinuity24, align 8, !dbg !10016
  br label %if.end100, !dbg !10017

if.else25:                                        ; preds = %if.else19
  %arraydecay26 = getelementptr inbounds [1024 x i8], [1024 x i8]* %line, i32 0, i32 0, !dbg !10018
  %call27 = call i32 @av_strstart(i8* %arraydecay26, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.268, i32 0, i32 0), i8** %ptr), !dbg !10020
  %tobool28 = icmp ne i32 %call27, 0, !dbg !10020
  br i1 %tobool28, label %if.then29, label %if.else31, !dbg !10020

if.then29:                                        ; preds = %if.else25
  store i32 1, i32* %is_segment, align 4, !dbg !10021
  %29 = load i8*, i8** %ptr, align 8, !dbg !10023
  %call30 = call double @atof(i8* %29) #11, !dbg !10024
  %30 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !10025
  %duration = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %30, i32 0, i32 16, !dbg !10026
  store double %call30, double* %duration, align 8, !dbg !10027
  br label %if.end99, !dbg !10028

if.else31:                                        ; preds = %if.else25
  %arraydecay32 = getelementptr inbounds [1024 x i8], [1024 x i8]* %line, i32 0, i32 0, !dbg !10029
  %call33 = call i32 @av_stristart(i8* %arraydecay32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.269, i32 0, i32 0), i8** %ptr), !dbg !10031
  %tobool34 = icmp ne i32 %call33, 0, !dbg !10031
  br i1 %tobool34, label %if.then35, label %if.else70, !dbg !10031

if.then35:                                        ; preds = %if.else31
  %arraydecay36 = getelementptr inbounds [1024 x i8], [1024 x i8]* %line, i32 0, i32 0, !dbg !10032
  %call37 = call i8* @av_stristr(i8* %arraydecay36, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.270, i32 0, i32 0)), !dbg !10034
  store i8* %call37, i8** %ptr, align 8, !dbg !10035
  %31 = load i8*, i8** %ptr, align 8, !dbg !10036
  %tobool38 = icmp ne i8* %31, null, !dbg !10036
  br i1 %tobool38, label %if.then39, label %if.end50, !dbg !10038

if.then39:                                        ; preds = %if.then35
  %32 = load i8*, i8** %ptr, align 8, !dbg !10039
  %add.ptr = getelementptr inbounds i8, i8* %32, i64 5, !dbg !10039
  store i8* %add.ptr, i8** %ptr, align 8, !dbg !10039
  %33 = load i8*, i8** %ptr, align 8, !dbg !10041
  %call40 = call i8* @av_stristr(i8* %33, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.132, i32 0, i32 0)), !dbg !10042
  store i8* %call40, i8** %end, align 8, !dbg !10043
  %34 = load i8*, i8** %end, align 8, !dbg !10044
  %tobool41 = icmp ne i8* %34, null, !dbg !10044
  br i1 %tobool41, label %if.then42, label %if.else45, !dbg !10046

if.then42:                                        ; preds = %if.then39
  %35 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !10047
  %key_uri = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %35, i32 0, i32 31, !dbg !10049
  %arraydecay43 = getelementptr inbounds [1025 x i8], [1025 x i8]* %key_uri, i32 0, i32 0, !dbg !10047
  %36 = load i8*, i8** %ptr, align 8, !dbg !10050
  %37 = load i8*, i8** %end, align 8, !dbg !10051
  %38 = load i8*, i8** %ptr, align 8, !dbg !10052
  %sub.ptr.lhs.cast = ptrtoint i8* %37 to i64, !dbg !10053
  %sub.ptr.rhs.cast = ptrtoint i8* %38 to i64, !dbg !10053
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10053
  %call44 = call i64 @av_strlcpy(i8* %arraydecay43, i8* %36, i64 %sub.ptr.sub), !dbg !10054
  br label %if.end49, !dbg !10055

if.else45:                                        ; preds = %if.then39
  %39 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !10056
  %key_uri46 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %39, i32 0, i32 31, !dbg !10058
  %arraydecay47 = getelementptr inbounds [1025 x i8], [1025 x i8]* %key_uri46, i32 0, i32 0, !dbg !10056
  %40 = load i8*, i8** %ptr, align 8, !dbg !10059
  %call48 = call i64 @av_strlcpy(i8* %arraydecay47, i8* %40, i64 1025), !dbg !10060
  br label %if.end49

if.end49:                                         ; preds = %if.else45, %if.then42
  br label %if.end50, !dbg !10061

if.end50:                                         ; preds = %if.end49, %if.then35
  %arraydecay51 = getelementptr inbounds [1024 x i8], [1024 x i8]* %line, i32 0, i32 0, !dbg !10062
  %call52 = call i8* @av_stristr(i8* %arraydecay51, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.271, i32 0, i32 0)), !dbg !10063
  store i8* %call52, i8** %ptr, align 8, !dbg !10064
  %41 = load i8*, i8** %ptr, align 8, !dbg !10065
  %tobool53 = icmp ne i8* %41, null, !dbg !10065
  br i1 %tobool53, label %if.then54, label %if.end69, !dbg !10067

if.then54:                                        ; preds = %if.end50
  %42 = load i8*, i8** %ptr, align 8, !dbg !10068
  %add.ptr55 = getelementptr inbounds i8, i8* %42, i64 5, !dbg !10068
  store i8* %add.ptr55, i8** %ptr, align 8, !dbg !10068
  %43 = load i8*, i8** %ptr, align 8, !dbg !10070
  %call56 = call i8* @av_stristr(i8* %43, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.132, i32 0, i32 0)), !dbg !10071
  store i8* %call56, i8** %end, align 8, !dbg !10072
  %44 = load i8*, i8** %end, align 8, !dbg !10073
  %tobool57 = icmp ne i8* %44, null, !dbg !10073
  br i1 %tobool57, label %if.then58, label %if.else64, !dbg !10075

if.then58:                                        ; preds = %if.then54
  %45 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !10076
  %iv_string = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %45, i32 0, i32 33, !dbg !10078
  %arraydecay59 = getelementptr inbounds [33 x i8], [33 x i8]* %iv_string, i32 0, i32 0, !dbg !10076
  %46 = load i8*, i8** %ptr, align 8, !dbg !10079
  %47 = load i8*, i8** %end, align 8, !dbg !10080
  %48 = load i8*, i8** %ptr, align 8, !dbg !10081
  %sub.ptr.lhs.cast60 = ptrtoint i8* %47 to i64, !dbg !10082
  %sub.ptr.rhs.cast61 = ptrtoint i8* %48 to i64, !dbg !10082
  %sub.ptr.sub62 = sub i64 %sub.ptr.lhs.cast60, %sub.ptr.rhs.cast61, !dbg !10082
  %call63 = call i64 @av_strlcpy(i8* %arraydecay59, i8* %46, i64 %sub.ptr.sub62), !dbg !10083
  br label %if.end68, !dbg !10084

if.else64:                                        ; preds = %if.then54
  %49 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !10085
  %iv_string65 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %49, i32 0, i32 33, !dbg !10087
  %arraydecay66 = getelementptr inbounds [33 x i8], [33 x i8]* %iv_string65, i32 0, i32 0, !dbg !10085
  %50 = load i8*, i8** %ptr, align 8, !dbg !10088
  %call67 = call i64 @av_strlcpy(i8* %arraydecay66, i8* %50, i64 33), !dbg !10089
  br label %if.end68

if.end68:                                         ; preds = %if.else64, %if.then58
  br label %if.end69, !dbg !10090

if.end69:                                         ; preds = %if.end68, %if.end50
  br label %if.end98, !dbg !10091

if.else70:                                        ; preds = %if.else31
  %arraydecay71 = getelementptr inbounds [1024 x i8], [1024 x i8]* %line, i32 0, i32 0, !dbg !10092
  %call72 = call i32 @av_strstart(i8* %arraydecay71, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.272, i32 0, i32 0), i8** null), !dbg !10094
  %tobool73 = icmp ne i32 %call72, 0, !dbg !10094
  br i1 %tobool73, label %if.then74, label %if.else75, !dbg !10094

if.then74:                                        ; preds = %if.else70
  br label %while.cond, !dbg !10095, !llvm.loop !10097

if.else75:                                        ; preds = %if.else70
  %arrayidx = getelementptr inbounds [1024 x i8], [1024 x i8]* %line, i64 0, i64 0, !dbg !10098
  %51 = load i8, i8* %arrayidx, align 16, !dbg !10098
  %tobool76 = icmp ne i8 %51, 0, !dbg !10098
  br i1 %tobool76, label %if.then77, label %if.end96, !dbg !10099

if.then77:                                        ; preds = %if.else75
  %52 = load i32, i32* %is_segment, align 4, !dbg !10100
  %tobool78 = icmp ne i32 %52, 0, !dbg !10100
  br i1 %tobool78, label %if.then79, label %if.end95, !dbg !10101

if.then79:                                        ; preds = %if.then77
  call void @llvm.dbg.declare(metadata i8** %new_file, metadata !10102, metadata !2335), !dbg !10103
  %arraydecay80 = getelementptr inbounds [1024 x i8], [1024 x i8]* %line, i32 0, i32 0, !dbg !10104
  %call81 = call noalias i8* @av_strdup(i8* %arraydecay80), !dbg !10105
  store i8* %call81, i8** %new_file, align 8, !dbg !10103
  %53 = load i8*, i8** %new_file, align 8, !dbg !10106
  %tobool82 = icmp ne i8* %53, null, !dbg !10106
  br i1 %tobool82, label %if.end84, label %if.then83, !dbg !10108

if.then83:                                        ; preds = %if.then79
  store i32 -12, i32* %ret, align 4, !dbg !10109
  br label %fail, !dbg !10111

if.end84:                                         ; preds = %if.then79
  %54 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !10112
  %avf = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %54, i32 0, i32 8, !dbg !10113
  %55 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf, align 8, !dbg !10113
  %56 = load i8*, i8** %new_file, align 8, !dbg !10114
  call void @ff_format_set_url(%struct.AVFormatContext* %55, i8* %56), !dbg !10115
  store i32 0, i32* %is_segment, align 4, !dbg !10116
  %57 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !10117
  %avf85 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %57, i32 0, i32 8, !dbg !10118
  %58 = load %struct.AVFormatContext*, %struct.AVFormatContext** %avf85, align 8, !dbg !10118
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %58, i32 0, i32 4, !dbg !10119
  %59 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !10119
  store %struct.AVIOContext* %59, %struct.AVIOContext** %s.addr.i, align 8, !dbg !10120
  %60 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !10121
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %60, i64 0, i32 1) #10, !dbg !10122
  store i64 %call.i, i64* %new_start_pos, align 8, !dbg !10123
  %61 = load i64, i64* %new_start_pos, align 8, !dbg !10124
  %62 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !10125
  %start_pos = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %62, i32 0, i32 17, !dbg !10126
  %63 = load i64, i64* %start_pos, align 8, !dbg !10126
  %sub = sub nsw i64 %61, %63, !dbg !10127
  %64 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !10128
  %size = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %64, i32 0, i32 18, !dbg !10129
  store i64 %sub, i64* %size, align 8, !dbg !10130
  %65 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !10131
  %66 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !10132
  %67 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !10133
  %68 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !10134
  %duration87 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %68, i32 0, i32 16, !dbg !10135
  %69 = load double, double* %duration87, align 8, !dbg !10135
  %70 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !10136
  %start_pos88 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %70, i32 0, i32 17, !dbg !10137
  %71 = load i64, i64* %start_pos88, align 8, !dbg !10137
  %72 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !10138
  %size89 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %72, i32 0, i32 18, !dbg !10139
  %73 = load i64, i64* %size89, align 8, !dbg !10139
  %call90 = call i32 @hls_append_segment(%struct.AVFormatContext* %65, %struct.HLSContext* %66, %struct.VariantStream* %67, double %69, i64 %71, i64 %73), !dbg !10140
  store i32 %call90, i32* %ret, align 4, !dbg !10141
  %74 = load i32, i32* %ret, align 4, !dbg !10142
  %cmp91 = icmp slt i32 %74, 0, !dbg !10144
  br i1 %cmp91, label %if.then92, label %if.end93, !dbg !10145

if.then92:                                        ; preds = %if.end84
  br label %fail, !dbg !10146

if.end93:                                         ; preds = %if.end84
  %75 = load i64, i64* %new_start_pos, align 8, !dbg !10147
  %76 = load %struct.VariantStream*, %struct.VariantStream** %vs.addr, align 8, !dbg !10148
  %start_pos94 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %76, i32 0, i32 17, !dbg !10149
  store i64 %75, i64* %start_pos94, align 8, !dbg !10150
  br label %if.end95, !dbg !10151

if.end95:                                         ; preds = %if.end93, %if.then77
  br label %if.end96, !dbg !10152

if.end96:                                         ; preds = %if.end95, %if.else75
  br label %if.end97

if.end97:                                         ; preds = %if.end96
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %if.end69
  br label %if.end99

if.end99:                                         ; preds = %if.end98, %if.then29
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.then23
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %if.end18
  br label %while.cond, !dbg !10153, !llvm.loop !10097

while.end:                                        ; preds = %while.cond
  br label %fail, !dbg !10155

fail:                                             ; preds = %while.end, %if.then92, %if.then83, %if.then4
  %77 = load %struct.AVIOContext*, %struct.AVIOContext** %in, align 8, !dbg !10157
  %call102 = call i32 @avio_close(%struct.AVIOContext* %77), !dbg !10158
  %78 = load i32, i32* %ret, align 4, !dbg !10159
  store i32 %78, i32* %retval, align 4, !dbg !10160
  br label %return, !dbg !10160

return:                                           ; preds = %fail, %if.then
  %79 = load i32, i32* %retval, align 4, !dbg !10161
  ret i32 %79, !dbg !10161
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_cc_stream_mapstring(%struct.AVFormatContext* %s) #0 !dbg !10162 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %hls = alloca %struct.HLSContext*, align 8
  %nb_ccstreams = alloca i32, align 4
  %p = alloca i8*, align 8
  %q = alloca i8*, align 8
  %ccstr = alloca i8*, align 8
  %keyval = alloca i8*, align 8
  %saveptr1 = alloca i8*, align 8
  %saveptr2 = alloca i8*, align 8
  %val = alloca i8*, align 8
  %ccs = alloca %struct.ClosedCaptionsStream*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !10163, metadata !2335), !dbg !10164
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %hls, metadata !10165, metadata !2335), !dbg !10166
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !10167
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !10168
  %1 = load i8*, i8** %priv_data, align 8, !dbg !10168
  %2 = bitcast i8* %1 to %struct.HLSContext*, !dbg !10167
  store %struct.HLSContext* %2, %struct.HLSContext** %hls, align 8, !dbg !10166
  call void @llvm.dbg.declare(metadata i32* %nb_ccstreams, metadata !10169, metadata !2335), !dbg !10170
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10171, metadata !2335), !dbg !10172
  call void @llvm.dbg.declare(metadata i8** %q, metadata !10173, metadata !2335), !dbg !10174
  call void @llvm.dbg.declare(metadata i8** %ccstr, metadata !10175, metadata !2335), !dbg !10176
  call void @llvm.dbg.declare(metadata i8** %keyval, metadata !10177, metadata !2335), !dbg !10178
  call void @llvm.dbg.declare(metadata i8** %saveptr1, metadata !10179, metadata !2335), !dbg !10180
  store i8* null, i8** %saveptr1, align 8, !dbg !10180
  call void @llvm.dbg.declare(metadata i8** %saveptr2, metadata !10181, metadata !2335), !dbg !10182
  store i8* null, i8** %saveptr2, align 8, !dbg !10182
  call void @llvm.dbg.declare(metadata i8** %val, metadata !10183, metadata !2335), !dbg !10184
  call void @llvm.dbg.declare(metadata %struct.ClosedCaptionsStream** %ccs, metadata !10185, metadata !2335), !dbg !10186
  %3 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !10187
  %cc_stream_map = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %3, i32 0, i32 45, !dbg !10188
  %4 = load i8*, i8** %cc_stream_map, align 8, !dbg !10188
  %call = call noalias i8* @av_strdup(i8* %4), !dbg !10189
  store i8* %call, i8** %p, align 8, !dbg !10190
  %5 = load i8*, i8** %p, align 8, !dbg !10191
  store i8* %5, i8** %q, align 8, !dbg !10192
  br label %while.cond, !dbg !10193

while.cond:                                       ; preds = %while.body, %entry
  %6 = load i8*, i8** %q, align 8, !dbg !10194
  %call1 = call i8* @av_strtok(i8* %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.227, i32 0, i32 0), i8** %saveptr1), !dbg !10196
  %tobool = icmp ne i8* %call1, null, !dbg !10197
  br i1 %tobool, label %while.body, label %while.end, !dbg !10197

while.body:                                       ; preds = %while.cond
  store i8* null, i8** %q, align 8, !dbg !10198
  %7 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !10200
  %nb_ccstreams2 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %7, i32 0, i32 40, !dbg !10201
  %8 = load i32, i32* %nb_ccstreams2, align 8, !dbg !10202
  %inc = add i32 %8, 1, !dbg !10202
  store i32 %inc, i32* %nb_ccstreams2, align 8, !dbg !10202
  br label %while.cond, !dbg !10203, !llvm.loop !10205

while.end:                                        ; preds = %while.cond
  %9 = bitcast i8** %p to i8*, !dbg !10206
  call void @av_freep(i8* %9), !dbg !10207
  %10 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !10208
  %nb_ccstreams3 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %10, i32 0, i32 40, !dbg !10209
  %11 = load i32, i32* %nb_ccstreams3, align 8, !dbg !10209
  %conv = zext i32 %11 to i64, !dbg !10208
  %mul = mul i64 24, %conv, !dbg !10210
  %call4 = call noalias i8* @av_mallocz(i64 %mul), !dbg !10211
  %12 = bitcast i8* %call4 to %struct.ClosedCaptionsStream*, !dbg !10211
  %13 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !10212
  %cc_streams = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %13, i32 0, i32 39, !dbg !10213
  store %struct.ClosedCaptionsStream* %12, %struct.ClosedCaptionsStream** %cc_streams, align 8, !dbg !10214
  %14 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !10215
  %cc_streams5 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %14, i32 0, i32 39, !dbg !10217
  %15 = load %struct.ClosedCaptionsStream*, %struct.ClosedCaptionsStream** %cc_streams5, align 8, !dbg !10217
  %tobool6 = icmp ne %struct.ClosedCaptionsStream* %15, null, !dbg !10215
  br i1 %tobool6, label %if.end, label %if.then, !dbg !10218

if.then:                                          ; preds = %while.end
  store i32 -12, i32* %retval, align 4, !dbg !10219
  br label %return, !dbg !10219

if.end:                                           ; preds = %while.end
  %16 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !10220
  %cc_stream_map7 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %16, i32 0, i32 45, !dbg !10221
  %17 = load i8*, i8** %cc_stream_map7, align 8, !dbg !10221
  store i8* %17, i8** %p, align 8, !dbg !10222
  store i32 0, i32* %nb_ccstreams, align 4, !dbg !10223
  br label %while.cond8, !dbg !10224

while.cond8:                                      ; preds = %if.end93, %if.end
  %18 = load i8*, i8** %p, align 8, !dbg !10225
  %call9 = call i8* @av_strtok(i8* %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.227, i32 0, i32 0), i8** %saveptr1), !dbg !10226
  store i8* %call9, i8** %ccstr, align 8, !dbg !10227
  %tobool10 = icmp ne i8* %call9, null, !dbg !10228
  br i1 %tobool10, label %while.body11, label %while.end94, !dbg !10228

while.body11:                                     ; preds = %while.cond8
  store i8* null, i8** %p, align 8, !dbg !10229
  %19 = load i32, i32* %nb_ccstreams, align 4, !dbg !10231
  %20 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !10233
  %nb_ccstreams12 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %20, i32 0, i32 40, !dbg !10234
  %21 = load i32, i32* %nb_ccstreams12, align 8, !dbg !10234
  %cmp = icmp ult i32 %19, %21, !dbg !10235
  br i1 %cmp, label %if.then14, label %if.else, !dbg !10236

if.then14:                                        ; preds = %while.body11
  %22 = load i32, i32* %nb_ccstreams, align 4, !dbg !10237
  %inc15 = add nsw i32 %22, 1, !dbg !10237
  store i32 %inc15, i32* %nb_ccstreams, align 4, !dbg !10237
  %idxprom = sext i32 %22 to i64, !dbg !10238
  %23 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !10238
  %cc_streams16 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %23, i32 0, i32 39, !dbg !10239
  %24 = load %struct.ClosedCaptionsStream*, %struct.ClosedCaptionsStream** %cc_streams16, align 8, !dbg !10239
  %arrayidx = getelementptr inbounds %struct.ClosedCaptionsStream, %struct.ClosedCaptionsStream* %24, i64 %idxprom, !dbg !10238
  store %struct.ClosedCaptionsStream* %arrayidx, %struct.ClosedCaptionsStream** %ccs, align 8, !dbg !10240
  br label %if.end17, !dbg !10241

if.else:                                          ; preds = %while.body11
  store i32 -22, i32* %retval, align 4, !dbg !10242
  br label %return, !dbg !10242

if.end17:                                         ; preds = %if.then14
  br label %while.cond18, !dbg !10243

while.cond18:                                     ; preds = %if.end51, %if.end17
  %25 = load i8*, i8** %ccstr, align 8, !dbg !10244
  %call19 = call i8* @av_strtok(i8* %25, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.132, i32 0, i32 0), i8** %saveptr2), !dbg !10246
  store i8* %call19, i8** %keyval, align 8, !dbg !10247
  %tobool20 = icmp ne i8* %call19, null, !dbg !10248
  br i1 %tobool20, label %while.body21, label %while.end52, !dbg !10248

while.body21:                                     ; preds = %while.cond18
  store i8* null, i8** %ccstr, align 8, !dbg !10249
  %26 = load i8*, i8** %keyval, align 8, !dbg !10251
  %call22 = call i32 @av_strstart(i8* %26, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.228, i32 0, i32 0), i8** %val), !dbg !10253
  %tobool23 = icmp ne i32 %call22, 0, !dbg !10253
  br i1 %tobool23, label %if.then24, label %if.else30, !dbg !10254

if.then24:                                        ; preds = %while.body21
  %27 = load i8*, i8** %val, align 8, !dbg !10255
  %call25 = call noalias i8* @av_strdup(i8* %27), !dbg !10257
  %28 = load %struct.ClosedCaptionsStream*, %struct.ClosedCaptionsStream** %ccs, align 8, !dbg !10258
  %ccgroup = getelementptr inbounds %struct.ClosedCaptionsStream, %struct.ClosedCaptionsStream* %28, i32 0, i32 0, !dbg !10259
  store i8* %call25, i8** %ccgroup, align 8, !dbg !10260
  %29 = load %struct.ClosedCaptionsStream*, %struct.ClosedCaptionsStream** %ccs, align 8, !dbg !10261
  %ccgroup26 = getelementptr inbounds %struct.ClosedCaptionsStream, %struct.ClosedCaptionsStream* %29, i32 0, i32 0, !dbg !10263
  %30 = load i8*, i8** %ccgroup26, align 8, !dbg !10263
  %tobool27 = icmp ne i8* %30, null, !dbg !10261
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !10264

if.then28:                                        ; preds = %if.then24
  store i32 -12, i32* %retval, align 4, !dbg !10265
  br label %return, !dbg !10265

if.end29:                                         ; preds = %if.then24
  br label %if.end51, !dbg !10266

if.else30:                                        ; preds = %while.body21
  %31 = load i8*, i8** %keyval, align 8, !dbg !10267
  %call31 = call i32 @av_strstart(i8* %31, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.229, i32 0, i32 0), i8** %val), !dbg !10270
  %tobool32 = icmp ne i32 %call31, 0, !dbg !10270
  br i1 %tobool32, label %if.then33, label %if.else39, !dbg !10270

if.then33:                                        ; preds = %if.else30
  %32 = load i8*, i8** %val, align 8, !dbg !10271
  %call34 = call noalias i8* @av_strdup(i8* %32), !dbg !10273
  %33 = load %struct.ClosedCaptionsStream*, %struct.ClosedCaptionsStream** %ccs, align 8, !dbg !10274
  %instreamid = getelementptr inbounds %struct.ClosedCaptionsStream, %struct.ClosedCaptionsStream* %33, i32 0, i32 1, !dbg !10275
  store i8* %call34, i8** %instreamid, align 8, !dbg !10276
  %34 = load %struct.ClosedCaptionsStream*, %struct.ClosedCaptionsStream** %ccs, align 8, !dbg !10277
  %instreamid35 = getelementptr inbounds %struct.ClosedCaptionsStream, %struct.ClosedCaptionsStream* %34, i32 0, i32 1, !dbg !10279
  %35 = load i8*, i8** %instreamid35, align 8, !dbg !10279
  %tobool36 = icmp ne i8* %35, null, !dbg !10277
  br i1 %tobool36, label %if.end38, label %if.then37, !dbg !10280

if.then37:                                        ; preds = %if.then33
  store i32 -12, i32* %retval, align 4, !dbg !10281
  br label %return, !dbg !10281

if.end38:                                         ; preds = %if.then33
  br label %if.end50, !dbg !10282

if.else39:                                        ; preds = %if.else30
  %36 = load i8*, i8** %keyval, align 8, !dbg !10283
  %call40 = call i32 @av_strstart(i8* %36, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.230, i32 0, i32 0), i8** %val), !dbg !10286
  %tobool41 = icmp ne i32 %call40, 0, !dbg !10286
  br i1 %tobool41, label %if.then42, label %if.else48, !dbg !10286

if.then42:                                        ; preds = %if.else39
  %37 = load i8*, i8** %val, align 8, !dbg !10287
  %call43 = call noalias i8* @av_strdup(i8* %37), !dbg !10289
  %38 = load %struct.ClosedCaptionsStream*, %struct.ClosedCaptionsStream** %ccs, align 8, !dbg !10290
  %language = getelementptr inbounds %struct.ClosedCaptionsStream, %struct.ClosedCaptionsStream* %38, i32 0, i32 2, !dbg !10291
  store i8* %call43, i8** %language, align 8, !dbg !10292
  %39 = load %struct.ClosedCaptionsStream*, %struct.ClosedCaptionsStream** %ccs, align 8, !dbg !10293
  %language44 = getelementptr inbounds %struct.ClosedCaptionsStream, %struct.ClosedCaptionsStream* %39, i32 0, i32 2, !dbg !10295
  %40 = load i8*, i8** %language44, align 8, !dbg !10295
  %tobool45 = icmp ne i8* %40, null, !dbg !10293
  br i1 %tobool45, label %if.end47, label %if.then46, !dbg !10296

if.then46:                                        ; preds = %if.then42
  store i32 -12, i32* %retval, align 4, !dbg !10297
  br label %return, !dbg !10297

if.end47:                                         ; preds = %if.then42
  br label %if.end49, !dbg !10298

if.else48:                                        ; preds = %if.else39
  %41 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !10299
  %42 = bitcast %struct.AVFormatContext* %41 to i8*, !dbg !10299
  %43 = load i8*, i8** %keyval, align 8, !dbg !10301
  call void (i8*, i32, i8*, ...) @av_log(i8* %42, i32 16, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.231, i32 0, i32 0), i8* %43), !dbg !10302
  store i32 -22, i32* %retval, align 4, !dbg !10303
  br label %return, !dbg !10303

if.end49:                                         ; preds = %if.end47
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.end38
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.end29
  br label %while.cond18, !dbg !10304, !llvm.loop !10306

while.end52:                                      ; preds = %while.cond18
  %44 = load %struct.ClosedCaptionsStream*, %struct.ClosedCaptionsStream** %ccs, align 8, !dbg !10307
  %ccgroup53 = getelementptr inbounds %struct.ClosedCaptionsStream, %struct.ClosedCaptionsStream* %44, i32 0, i32 0, !dbg !10309
  %45 = load i8*, i8** %ccgroup53, align 8, !dbg !10309
  %tobool54 = icmp ne i8* %45, null, !dbg !10307
  br i1 %tobool54, label %lor.lhs.false, label %if.then57, !dbg !10310

lor.lhs.false:                                    ; preds = %while.end52
  %46 = load %struct.ClosedCaptionsStream*, %struct.ClosedCaptionsStream** %ccs, align 8, !dbg !10311
  %instreamid55 = getelementptr inbounds %struct.ClosedCaptionsStream, %struct.ClosedCaptionsStream* %46, i32 0, i32 1, !dbg !10313
  %47 = load i8*, i8** %instreamid55, align 8, !dbg !10313
  %tobool56 = icmp ne i8* %47, null, !dbg !10311
  br i1 %tobool56, label %if.end58, label %if.then57, !dbg !10314

if.then57:                                        ; preds = %lor.lhs.false, %while.end52
  %48 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !10315
  %49 = bitcast %struct.AVFormatContext* %48 to i8*, !dbg !10315
  call void (i8*, i32, i8*, ...) @av_log(i8* %49, i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.232, i32 0, i32 0)), !dbg !10317
  store i32 -22, i32* %retval, align 4, !dbg !10318
  br label %return, !dbg !10318

if.end58:                                         ; preds = %lor.lhs.false
  %50 = load %struct.ClosedCaptionsStream*, %struct.ClosedCaptionsStream** %ccs, align 8, !dbg !10319
  %instreamid59 = getelementptr inbounds %struct.ClosedCaptionsStream, %struct.ClosedCaptionsStream* %50, i32 0, i32 1, !dbg !10321
  %51 = load i8*, i8** %instreamid59, align 8, !dbg !10321
  %call60 = call i32 @av_strstart(i8* %51, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.233, i32 0, i32 0), i8** %val), !dbg !10322
  %tobool61 = icmp ne i32 %call60, 0, !dbg !10322
  br i1 %tobool61, label %if.then62, label %if.else74, !dbg !10323

if.then62:                                        ; preds = %if.end58
  %52 = load i8*, i8** %val, align 8, !dbg !10324
  %call63 = call i32 @atoi(i8* %52) #11, !dbg !10327
  %cmp64 = icmp slt i32 %call63, 1, !dbg !10328
  br i1 %cmp64, label %if.then70, label %lor.lhs.false66, !dbg !10329

lor.lhs.false66:                                  ; preds = %if.then62
  %53 = load i8*, i8** %val, align 8, !dbg !10330
  %call67 = call i32 @atoi(i8* %53) #11, !dbg !10332
  %cmp68 = icmp sgt i32 %call67, 4, !dbg !10333
  br i1 %cmp68, label %if.then70, label %if.end73, !dbg !10334

if.then70:                                        ; preds = %lor.lhs.false66, %if.then62
  %54 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !10335
  %55 = bitcast %struct.AVFormatContext* %54 to i8*, !dbg !10335
  %56 = load i8*, i8** %val, align 8, !dbg !10337
  %call71 = call i32 @atoi(i8* %56) #11, !dbg !10338
  %57 = load %struct.ClosedCaptionsStream*, %struct.ClosedCaptionsStream** %ccs, align 8, !dbg !10339
  %instreamid72 = getelementptr inbounds %struct.ClosedCaptionsStream, %struct.ClosedCaptionsStream* %57, i32 0, i32 1, !dbg !10340
  %58 = load i8*, i8** %instreamid72, align 8, !dbg !10340
  call void (i8*, i32, i8*, ...) @av_log(i8* %55, i32 16, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.234, i32 0, i32 0), i32 %call71, i8* %58), !dbg !10341
  store i32 -22, i32* %retval, align 4, !dbg !10342
  br label %return, !dbg !10342

if.end73:                                         ; preds = %lor.lhs.false66
  br label %if.end93, !dbg !10343

if.else74:                                        ; preds = %if.end58
  %59 = load %struct.ClosedCaptionsStream*, %struct.ClosedCaptionsStream** %ccs, align 8, !dbg !10344
  %instreamid75 = getelementptr inbounds %struct.ClosedCaptionsStream, %struct.ClosedCaptionsStream* %59, i32 0, i32 1, !dbg !10347
  %60 = load i8*, i8** %instreamid75, align 8, !dbg !10347
  %call76 = call i32 @av_strstart(i8* %60, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.235, i32 0, i32 0), i8** %val), !dbg !10348
  %tobool77 = icmp ne i32 %call76, 0, !dbg !10348
  br i1 %tobool77, label %if.then78, label %if.else90, !dbg !10348

if.then78:                                        ; preds = %if.else74
  %61 = load i8*, i8** %val, align 8, !dbg !10349
  %call79 = call i32 @atoi(i8* %61) #11, !dbg !10352
  %cmp80 = icmp slt i32 %call79, 1, !dbg !10353
  br i1 %cmp80, label %if.then86, label %lor.lhs.false82, !dbg !10354

lor.lhs.false82:                                  ; preds = %if.then78
  %62 = load i8*, i8** %val, align 8, !dbg !10355
  %call83 = call i32 @atoi(i8* %62) #11, !dbg !10357
  %cmp84 = icmp sgt i32 %call83, 63, !dbg !10358
  br i1 %cmp84, label %if.then86, label %if.end89, !dbg !10359

if.then86:                                        ; preds = %lor.lhs.false82, %if.then78
  %63 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !10360
  %64 = bitcast %struct.AVFormatContext* %63 to i8*, !dbg !10360
  %65 = load i8*, i8** %val, align 8, !dbg !10362
  %call87 = call i32 @atoi(i8* %65) #11, !dbg !10363
  %66 = load %struct.ClosedCaptionsStream*, %struct.ClosedCaptionsStream** %ccs, align 8, !dbg !10364
  %instreamid88 = getelementptr inbounds %struct.ClosedCaptionsStream, %struct.ClosedCaptionsStream* %66, i32 0, i32 1, !dbg !10365
  %67 = load i8*, i8** %instreamid88, align 8, !dbg !10365
  call void (i8*, i32, i8*, ...) @av_log(i8* %64, i32 16, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.236, i32 0, i32 0), i32 %call87, i8* %67), !dbg !10366
  store i32 -22, i32* %retval, align 4, !dbg !10367
  br label %return, !dbg !10367

if.end89:                                         ; preds = %lor.lhs.false82
  br label %if.end92, !dbg !10368

if.else90:                                        ; preds = %if.else74
  %68 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !10369
  %69 = bitcast %struct.AVFormatContext* %68 to i8*, !dbg !10369
  %70 = load %struct.ClosedCaptionsStream*, %struct.ClosedCaptionsStream** %ccs, align 8, !dbg !10371
  %instreamid91 = getelementptr inbounds %struct.ClosedCaptionsStream, %struct.ClosedCaptionsStream* %70, i32 0, i32 1, !dbg !10372
  %71 = load i8*, i8** %instreamid91, align 8, !dbg !10372
  call void (i8*, i32, i8*, ...) @av_log(i8* %69, i32 16, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.237, i32 0, i32 0), i8* %71), !dbg !10373
  store i32 -22, i32* %retval, align 4, !dbg !10374
  br label %return, !dbg !10374

if.end92:                                         ; preds = %if.end89
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %if.end73
  br label %while.cond8, !dbg !10375, !llvm.loop !10376

while.end94:                                      ; preds = %while.cond8
  store i32 0, i32* %retval, align 4, !dbg !10377
  br label %return, !dbg !10377

return:                                           ; preds = %while.end94, %if.else90, %if.then86, %if.then70, %if.then57, %if.else48, %if.then46, %if.then37, %if.then28, %if.else, %if.then
  %72 = load i32, i32* %retval, align 4, !dbg !10378
  ret i32 %72, !dbg !10378
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_variant_stream_mapstring(%struct.AVFormatContext* %s) #0 !dbg !10379 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %hls = alloca %struct.HLSContext*, align 8
  %vs = alloca %struct.VariantStream*, align 8
  %stream_index = alloca i32, align 4
  %codec_type = alloca i32, align 4
  %nb_varstreams = alloca i32, align 4
  %nb_streams = alloca i32, align 4
  %p = alloca i8*, align 8
  %q = alloca i8*, align 8
  %saveptr1 = alloca i8*, align 8
  %saveptr2 = alloca i8*, align 8
  %varstr = alloca i8*, align 8
  %keyval = alloca i8*, align 8
  %val = alloca i8*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !10380, metadata !2335), !dbg !10381
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %hls, metadata !10382, metadata !2335), !dbg !10383
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !10384
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !10385
  %1 = load i8*, i8** %priv_data, align 8, !dbg !10385
  %2 = bitcast i8* %1 to %struct.HLSContext*, !dbg !10384
  store %struct.HLSContext* %2, %struct.HLSContext** %hls, align 8, !dbg !10383
  call void @llvm.dbg.declare(metadata %struct.VariantStream** %vs, metadata !10386, metadata !2335), !dbg !10387
  call void @llvm.dbg.declare(metadata i32* %stream_index, metadata !10388, metadata !2335), !dbg !10389
  call void @llvm.dbg.declare(metadata i32* %codec_type, metadata !10390, metadata !2335), !dbg !10391
  call void @llvm.dbg.declare(metadata i32* %nb_varstreams, metadata !10392, metadata !2335), !dbg !10393
  call void @llvm.dbg.declare(metadata i32* %nb_streams, metadata !10394, metadata !2335), !dbg !10395
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10396, metadata !2335), !dbg !10397
  call void @llvm.dbg.declare(metadata i8** %q, metadata !10398, metadata !2335), !dbg !10399
  call void @llvm.dbg.declare(metadata i8** %saveptr1, metadata !10400, metadata !2335), !dbg !10401
  call void @llvm.dbg.declare(metadata i8** %saveptr2, metadata !10402, metadata !2335), !dbg !10403
  call void @llvm.dbg.declare(metadata i8** %varstr, metadata !10404, metadata !2335), !dbg !10405
  call void @llvm.dbg.declare(metadata i8** %keyval, metadata !10406, metadata !2335), !dbg !10407
  call void @llvm.dbg.declare(metadata i8** %val, metadata !10408, metadata !2335), !dbg !10409
  %3 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !10410
  %var_stream_map = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %3, i32 0, i32 44, !dbg !10411
  %4 = load i8*, i8** %var_stream_map, align 8, !dbg !10411
  %call = call noalias i8* @av_strdup(i8* %4), !dbg !10412
  store i8* %call, i8** %p, align 8, !dbg !10413
  %5 = load i8*, i8** %p, align 8, !dbg !10414
  store i8* %5, i8** %q, align 8, !dbg !10415
  br label %while.cond, !dbg !10416

while.cond:                                       ; preds = %while.body, %entry
  %6 = load i8*, i8** %q, align 8, !dbg !10417
  %call1 = call i8* @av_strtok(i8* %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.227, i32 0, i32 0), i8** %saveptr1), !dbg !10419
  %tobool = icmp ne i8* %call1, null, !dbg !10420
  br i1 %tobool, label %while.body, label %while.end, !dbg !10420

while.body:                                       ; preds = %while.cond
  store i8* null, i8** %q, align 8, !dbg !10421
  %7 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !10423
  %nb_varstreams2 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %7, i32 0, i32 38, !dbg !10424
  %8 = load i32, i32* %nb_varstreams2, align 8, !dbg !10425
  %inc = add i32 %8, 1, !dbg !10425
  store i32 %inc, i32* %nb_varstreams2, align 8, !dbg !10425
  br label %while.cond, !dbg !10426, !llvm.loop !10428

while.end:                                        ; preds = %while.cond
  %9 = bitcast i8** %p to i8*, !dbg !10429
  call void @av_freep(i8* %9), !dbg !10430
  %10 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !10431
  %nb_varstreams3 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %10, i32 0, i32 38, !dbg !10432
  %11 = load i32, i32* %nb_varstreams3, align 8, !dbg !10432
  %conv = zext i32 %11 to i64, !dbg !10431
  %mul = mul i64 1432, %conv, !dbg !10433
  %call4 = call noalias i8* @av_mallocz(i64 %mul), !dbg !10434
  %12 = bitcast i8* %call4 to %struct.VariantStream*, !dbg !10434
  %13 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !10435
  %var_streams = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %13, i32 0, i32 37, !dbg !10436
  store %struct.VariantStream* %12, %struct.VariantStream** %var_streams, align 8, !dbg !10437
  %14 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !10438
  %var_streams5 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %14, i32 0, i32 37, !dbg !10440
  %15 = load %struct.VariantStream*, %struct.VariantStream** %var_streams5, align 8, !dbg !10440
  %tobool6 = icmp ne %struct.VariantStream* %15, null, !dbg !10438
  br i1 %tobool6, label %if.end, label %if.then, !dbg !10441

if.then:                                          ; preds = %while.end
  store i32 -12, i32* %retval, align 4, !dbg !10442
  br label %return, !dbg !10442

if.end:                                           ; preds = %while.end
  %16 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !10443
  %var_stream_map7 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %16, i32 0, i32 44, !dbg !10444
  %17 = load i8*, i8** %var_stream_map7, align 8, !dbg !10444
  store i8* %17, i8** %p, align 8, !dbg !10445
  store i32 0, i32* %nb_varstreams, align 4, !dbg !10446
  br label %while.cond8, !dbg !10447

while.cond8:                                      ; preds = %while.end124, %if.end
  %18 = load i8*, i8** %p, align 8, !dbg !10448
  %call9 = call i8* @av_strtok(i8* %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.227, i32 0, i32 0), i8** %saveptr1), !dbg !10449
  store i8* %call9, i8** %varstr, align 8, !dbg !10450
  %tobool10 = icmp ne i8* %call9, null, !dbg !10451
  br i1 %tobool10, label %while.body11, label %while.end125, !dbg !10451

while.body11:                                     ; preds = %while.cond8
  store i8* null, i8** %p, align 8, !dbg !10452
  %19 = load i32, i32* %nb_varstreams, align 4, !dbg !10454
  %20 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !10456
  %nb_varstreams12 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %20, i32 0, i32 38, !dbg !10457
  %21 = load i32, i32* %nb_varstreams12, align 8, !dbg !10457
  %cmp = icmp ult i32 %19, %21, !dbg !10458
  br i1 %cmp, label %if.then14, label %if.else, !dbg !10459

if.then14:                                        ; preds = %while.body11
  %22 = load i32, i32* %nb_varstreams, align 4, !dbg !10460
  %idxprom = sext i32 %22 to i64, !dbg !10462
  %23 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !10462
  %var_streams15 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %23, i32 0, i32 37, !dbg !10463
  %24 = load %struct.VariantStream*, %struct.VariantStream** %var_streams15, align 8, !dbg !10463
  %arrayidx = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %24, i64 %idxprom, !dbg !10462
  store %struct.VariantStream* %arrayidx, %struct.VariantStream** %vs, align 8, !dbg !10464
  %25 = load i32, i32* %nb_varstreams, align 4, !dbg !10465
  %26 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !10466
  %var_stream_idx = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %26, i32 0, i32 0, !dbg !10467
  store i32 %25, i32* %var_stream_idx, align 8, !dbg !10468
  %27 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !10469
  %is_default = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %27, i32 0, i32 39, !dbg !10470
  store i32 0, i32* %is_default, align 4, !dbg !10471
  %28 = load i32, i32* %nb_varstreams, align 4, !dbg !10472
  %inc16 = add nsw i32 %28, 1, !dbg !10472
  store i32 %inc16, i32* %nb_varstreams, align 4, !dbg !10472
  br label %if.end17, !dbg !10473

if.else:                                          ; preds = %while.body11
  store i32 -22, i32* %retval, align 4, !dbg !10474
  br label %return, !dbg !10474

if.end17:                                         ; preds = %if.then14
  %29 = load i8*, i8** %varstr, align 8, !dbg !10475
  store i8* %29, i8** %q, align 8, !dbg !10476
  br label %while.cond18, !dbg !10477

while.cond18:                                     ; preds = %if.end33, %if.end17
  %30 = load i8*, i8** %q, align 8, !dbg !10478
  %31 = load i8*, i8** %varstr, align 8, !dbg !10480
  %32 = load i8*, i8** %varstr, align 8, !dbg !10481
  %call19 = call i64 @strlen(i8* %32) #11, !dbg !10482
  %add.ptr = getelementptr inbounds i8, i8* %31, i64 %call19, !dbg !10483
  %cmp20 = icmp ult i8* %30, %add.ptr, !dbg !10484
  br i1 %cmp20, label %while.body22, label %while.end34, !dbg !10485

while.body22:                                     ; preds = %while.cond18
  %33 = load i8*, i8** %q, align 8, !dbg !10486
  %call23 = call i32 @av_strncasecmp(i8* %33, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.238, i32 0, i32 0), i64 2), !dbg !10489
  %tobool24 = icmp ne i32 %call23, 0, !dbg !10489
  br i1 %tobool24, label %lor.lhs.false, label %if.then30, !dbg !10490

lor.lhs.false:                                    ; preds = %while.body22
  %34 = load i8*, i8** %q, align 8, !dbg !10491
  %call25 = call i32 @av_strncasecmp(i8* %34, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.239, i32 0, i32 0), i64 2), !dbg !10493
  %tobool26 = icmp ne i32 %call25, 0, !dbg !10493
  br i1 %tobool26, label %lor.lhs.false27, label %if.then30, !dbg !10494

lor.lhs.false27:                                  ; preds = %lor.lhs.false
  %35 = load i8*, i8** %q, align 8, !dbg !10495
  %call28 = call i32 @av_strncasecmp(i8* %35, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.240, i32 0, i32 0), i64 2), !dbg !10496
  %tobool29 = icmp ne i32 %call28, 0, !dbg !10496
  br i1 %tobool29, label %if.end33, label %if.then30, !dbg !10497

if.then30:                                        ; preds = %lor.lhs.false27, %lor.lhs.false, %while.body22
  %36 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !10499
  %nb_streams31 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %36, i32 0, i32 37, !dbg !10500
  %37 = load i32, i32* %nb_streams31, align 4, !dbg !10501
  %inc32 = add i32 %37, 1, !dbg !10501
  store i32 %inc32, i32* %nb_streams31, align 4, !dbg !10501
  br label %if.end33, !dbg !10499

if.end33:                                         ; preds = %if.then30, %lor.lhs.false27
  %38 = load i8*, i8** %q, align 8, !dbg !10502
  %incdec.ptr = getelementptr inbounds i8, i8* %38, i32 1, !dbg !10502
  store i8* %incdec.ptr, i8** %q, align 8, !dbg !10502
  br label %while.cond18, !dbg !10503, !llvm.loop !10505

while.end34:                                      ; preds = %while.cond18
  %39 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !10506
  %nb_streams35 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %39, i32 0, i32 37, !dbg !10507
  %40 = load i32, i32* %nb_streams35, align 4, !dbg !10507
  %conv36 = zext i32 %40 to i64, !dbg !10506
  %mul37 = mul i64 8, %conv36, !dbg !10508
  %call38 = call noalias i8* @av_mallocz(i64 %mul37), !dbg !10509
  %41 = bitcast i8* %call38 to %struct.AVStream**, !dbg !10509
  %42 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !10510
  %streams = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %42, i32 0, i32 34, !dbg !10511
  store %struct.AVStream** %41, %struct.AVStream*** %streams, align 8, !dbg !10512
  %43 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !10513
  %streams39 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %43, i32 0, i32 34, !dbg !10515
  %44 = load %struct.AVStream**, %struct.AVStream*** %streams39, align 8, !dbg !10515
  %tobool40 = icmp ne %struct.AVStream** %44, null, !dbg !10513
  br i1 %tobool40, label %if.end42, label %if.then41, !dbg !10516

if.then41:                                        ; preds = %while.end34
  store i32 -12, i32* %retval, align 4, !dbg !10517
  br label %return, !dbg !10517

if.end42:                                         ; preds = %while.end34
  store i32 0, i32* %nb_streams, align 4, !dbg !10518
  br label %while.cond43, !dbg !10519

while.cond43:                                     ; preds = %if.end123, %if.end81, %if.end72, %lor.end, %if.end54, %if.end42
  %45 = load i8*, i8** %varstr, align 8, !dbg !10520
  %call44 = call i8* @av_strtok(i8* %45, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.132, i32 0, i32 0), i8** %saveptr2), !dbg !10521
  store i8* %call44, i8** %keyval, align 8, !dbg !10522
  %tobool45 = icmp ne i8* %call44, null, !dbg !10523
  br i1 %tobool45, label %while.body46, label %while.end124, !dbg !10523

while.body46:                                     ; preds = %while.cond43
  store i8* null, i8** %varstr, align 8, !dbg !10524
  %46 = load i8*, i8** %keyval, align 8, !dbg !10526
  %call47 = call i32 @av_strstart(i8* %46, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.230, i32 0, i32 0), i8** %val), !dbg !10528
  %tobool48 = icmp ne i32 %call47, 0, !dbg !10528
  br i1 %tobool48, label %if.then49, label %if.else55, !dbg !10529

if.then49:                                        ; preds = %while.body46
  %47 = load i8*, i8** %val, align 8, !dbg !10530
  %call50 = call noalias i8* @av_strdup(i8* %47), !dbg !10532
  %48 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !10533
  %language = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %48, i32 0, i32 40, !dbg !10534
  store i8* %call50, i8** %language, align 8, !dbg !10535
  %49 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !10536
  %language51 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %49, i32 0, i32 40, !dbg !10538
  %50 = load i8*, i8** %language51, align 8, !dbg !10538
  %tobool52 = icmp ne i8* %50, null, !dbg !10536
  br i1 %tobool52, label %if.end54, label %if.then53, !dbg !10539

if.then53:                                        ; preds = %if.then49
  store i32 -12, i32* %retval, align 4, !dbg !10540
  br label %return, !dbg !10540

if.end54:                                         ; preds = %if.then49
  br label %while.cond43, !dbg !10541, !llvm.loop !10542

if.else55:                                        ; preds = %while.body46
  %51 = load i8*, i8** %keyval, align 8, !dbg !10543
  %call56 = call i32 @av_strstart(i8* %51, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.241, i32 0, i32 0), i8** %val), !dbg !10545
  %tobool57 = icmp ne i32 %call56, 0, !dbg !10545
  br i1 %tobool57, label %if.then58, label %if.else64, !dbg !10546

if.then58:                                        ; preds = %if.else55
  %52 = load i8*, i8** %val, align 8, !dbg !10547
  %call59 = call i32 @av_strncasecmp(i8* %52, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.242, i32 0, i32 0), i64 3), !dbg !10549
  %tobool60 = icmp ne i32 %call59, 0, !dbg !10549
  br i1 %tobool60, label %lor.rhs, label %lor.end, !dbg !10550

lor.rhs:                                          ; preds = %if.then58
  %53 = load i8*, i8** %val, align 8, !dbg !10551
  %call61 = call i32 @av_strncasecmp(i8* %53, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.243, i32 0, i32 0), i64 1), !dbg !10552
  %tobool62 = icmp ne i32 %call61, 0, !dbg !10553
  %lnot = xor i1 %tobool62, true, !dbg !10553
  br label %lor.end, !dbg !10554

lor.end:                                          ; preds = %lor.rhs, %if.then58
  %54 = phi i1 [ true, %if.then58 ], [ %lnot, %lor.rhs ]
  %lor.ext = zext i1 %54 to i32, !dbg !10556
  %55 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !10558
  %is_default63 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %55, i32 0, i32 39, !dbg !10559
  store i32 %lor.ext, i32* %is_default63, align 4, !dbg !10560
  %56 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !10561
  %has_default_key = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %56, i32 0, i32 53, !dbg !10562
  store i32 1, i32* %has_default_key, align 4, !dbg !10563
  br label %while.cond43, !dbg !10564, !llvm.loop !10542

if.else64:                                        ; preds = %if.else55
  %57 = load i8*, i8** %keyval, align 8, !dbg !10565
  %call65 = call i32 @av_strstart(i8* %57, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.244, i32 0, i32 0), i8** %val), !dbg !10567
  %tobool66 = icmp ne i32 %call65, 0, !dbg !10567
  br i1 %tobool66, label %if.then67, label %if.else73, !dbg !10568

if.then67:                                        ; preds = %if.else64
  %58 = load i8*, i8** %val, align 8, !dbg !10569
  %call68 = call noalias i8* @av_strdup(i8* %58), !dbg !10571
  %59 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !10572
  %agroup = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %59, i32 0, i32 41, !dbg !10573
  store i8* %call68, i8** %agroup, align 8, !dbg !10574
  %60 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !10575
  %agroup69 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %60, i32 0, i32 41, !dbg !10577
  %61 = load i8*, i8** %agroup69, align 8, !dbg !10577
  %tobool70 = icmp ne i8* %61, null, !dbg !10575
  br i1 %tobool70, label %if.end72, label %if.then71, !dbg !10578

if.then71:                                        ; preds = %if.then67
  store i32 -12, i32* %retval, align 4, !dbg !10579
  br label %return, !dbg !10579

if.end72:                                         ; preds = %if.then67
  br label %while.cond43, !dbg !10580, !llvm.loop !10542

if.else73:                                        ; preds = %if.else64
  %62 = load i8*, i8** %keyval, align 8, !dbg !10581
  %call74 = call i32 @av_strstart(i8* %62, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.228, i32 0, i32 0), i8** %val), !dbg !10583
  %tobool75 = icmp ne i32 %call74, 0, !dbg !10583
  br i1 %tobool75, label %if.then76, label %if.else82, !dbg !10584

if.then76:                                        ; preds = %if.else73
  %63 = load i8*, i8** %val, align 8, !dbg !10585
  %call77 = call noalias i8* @av_strdup(i8* %63), !dbg !10587
  %64 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !10588
  %ccgroup = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %64, i32 0, i32 42, !dbg !10589
  store i8* %call77, i8** %ccgroup, align 8, !dbg !10590
  %65 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !10591
  %ccgroup78 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %65, i32 0, i32 42, !dbg !10593
  %66 = load i8*, i8** %ccgroup78, align 8, !dbg !10593
  %tobool79 = icmp ne i8* %66, null, !dbg !10591
  br i1 %tobool79, label %if.end81, label %if.then80, !dbg !10594

if.then80:                                        ; preds = %if.then76
  store i32 -12, i32* %retval, align 4, !dbg !10595
  br label %return, !dbg !10595

if.end81:                                         ; preds = %if.then76
  br label %while.cond43, !dbg !10596, !llvm.loop !10542

if.else82:                                        ; preds = %if.else73
  %67 = load i8*, i8** %keyval, align 8, !dbg !10597
  %call83 = call i32 @av_strstart(i8* %67, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.239, i32 0, i32 0), i8** %val), !dbg !10599
  %tobool84 = icmp ne i32 %call83, 0, !dbg !10599
  br i1 %tobool84, label %if.then85, label %if.else86, !dbg !10600

if.then85:                                        ; preds = %if.else82
  store i32 0, i32* %codec_type, align 4, !dbg !10601
  %68 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !10603
  %has_video_m3u8 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %68, i32 0, i32 54, !dbg !10604
  store i32 1, i32* %has_video_m3u8, align 8, !dbg !10605
  br label %if.end97, !dbg !10606

if.else86:                                        ; preds = %if.else82
  %69 = load i8*, i8** %keyval, align 8, !dbg !10607
  %call87 = call i32 @av_strstart(i8* %69, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.238, i32 0, i32 0), i8** %val), !dbg !10610
  %tobool88 = icmp ne i32 %call87, 0, !dbg !10610
  br i1 %tobool88, label %if.then89, label %if.else90, !dbg !10610

if.then89:                                        ; preds = %if.else86
  store i32 1, i32* %codec_type, align 4, !dbg !10611
  br label %if.end96, !dbg !10613

if.else90:                                        ; preds = %if.else86
  %70 = load i8*, i8** %keyval, align 8, !dbg !10614
  %call91 = call i32 @av_strstart(i8* %70, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.240, i32 0, i32 0), i8** %val), !dbg !10617
  %tobool92 = icmp ne i32 %call91, 0, !dbg !10617
  br i1 %tobool92, label %if.then93, label %if.else94, !dbg !10617

if.then93:                                        ; preds = %if.else90
  store i32 3, i32* %codec_type, align 4, !dbg !10618
  br label %if.end95, !dbg !10620

if.else94:                                        ; preds = %if.else90
  %71 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !10621
  %72 = bitcast %struct.AVFormatContext* %71 to i8*, !dbg !10621
  %73 = load i8*, i8** %keyval, align 8, !dbg !10623
  call void (i8*, i32, i8*, ...) @av_log(i8* %72, i32 16, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.231, i32 0, i32 0), i8* %73), !dbg !10624
  store i32 -22, i32* %retval, align 4, !dbg !10625
  br label %return, !dbg !10625

if.end95:                                         ; preds = %if.then93
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then89
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.then85
  br label %if.end98

if.end98:                                         ; preds = %if.end97
  br label %if.end99

if.end99:                                         ; preds = %if.end98
  br label %if.end100

if.end100:                                        ; preds = %if.end99
  br label %if.end101

if.end101:                                        ; preds = %if.end100
  store i32 -1, i32* %stream_index, align 4, !dbg !10626
  %74 = load i8*, i8** %val, align 8, !dbg !10627
  %75 = load i8, i8* %74, align 1, !dbg !10629
  %conv102 = sext i8 %75 to i32, !dbg !10629
  %call103 = call i32 @av_isdigit(i32 %conv102) #2, !dbg !10630
  %tobool104 = icmp ne i32 %call103, 0, !dbg !10630
  br i1 %tobool104, label %if.then105, label %if.end108, !dbg !10631

if.then105:                                       ; preds = %if.end101
  %76 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !10632
  %77 = load i32, i32* %codec_type, align 4, !dbg !10633
  %78 = load i8*, i8** %val, align 8, !dbg !10634
  %call106 = call i32 @atoi(i8* %78) #11, !dbg !10635
  %call107 = call i32 @get_nth_codec_stream_index(%struct.AVFormatContext* %76, i32 %77, i32 %call106), !dbg !10636
  store i32 %call107, i32* %stream_index, align 4, !dbg !10637
  br label %if.end108, !dbg !10638

if.end108:                                        ; preds = %if.then105, %if.end101
  %79 = load i32, i32* %stream_index, align 4, !dbg !10639
  %cmp109 = icmp sge i32 %79, 0, !dbg !10641
  br i1 %cmp109, label %land.lhs.true, label %if.else122, !dbg !10642

land.lhs.true:                                    ; preds = %if.end108
  %80 = load i32, i32* %nb_streams, align 4, !dbg !10643
  %81 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !10645
  %nb_streams111 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %81, i32 0, i32 37, !dbg !10646
  %82 = load i32, i32* %nb_streams111, align 4, !dbg !10646
  %cmp112 = icmp ult i32 %80, %82, !dbg !10647
  br i1 %cmp112, label %if.then114, label %if.else122, !dbg !10648

if.then114:                                       ; preds = %land.lhs.true
  %83 = load i32, i32* %stream_index, align 4, !dbg !10649
  %idxprom115 = sext i32 %83 to i64, !dbg !10651
  %84 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !10651
  %streams116 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %84, i32 0, i32 7, !dbg !10652
  %85 = load %struct.AVStream**, %struct.AVStream*** %streams116, align 8, !dbg !10652
  %arrayidx117 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %85, i64 %idxprom115, !dbg !10651
  %86 = load %struct.AVStream*, %struct.AVStream** %arrayidx117, align 8, !dbg !10651
  %87 = load i32, i32* %nb_streams, align 4, !dbg !10653
  %inc118 = add nsw i32 %87, 1, !dbg !10653
  store i32 %inc118, i32* %nb_streams, align 4, !dbg !10653
  %idxprom119 = sext i32 %87 to i64, !dbg !10654
  %88 = load %struct.VariantStream*, %struct.VariantStream** %vs, align 8, !dbg !10654
  %streams120 = getelementptr inbounds %struct.VariantStream, %struct.VariantStream* %88, i32 0, i32 34, !dbg !10655
  %89 = load %struct.AVStream**, %struct.AVStream*** %streams120, align 8, !dbg !10655
  %arrayidx121 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %89, i64 %idxprom119, !dbg !10654
  store %struct.AVStream* %86, %struct.AVStream** %arrayidx121, align 8, !dbg !10656
  br label %if.end123, !dbg !10657

if.else122:                                       ; preds = %land.lhs.true, %if.end108
  %90 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !10658
  %91 = bitcast %struct.AVFormatContext* %90 to i8*, !dbg !10658
  %92 = load i8*, i8** %keyval, align 8, !dbg !10660
  call void (i8*, i32, i8*, ...) @av_log(i8* %91, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.245, i32 0, i32 0), i8* %92), !dbg !10661
  store i32 -22, i32* %retval, align 4, !dbg !10662
  br label %return, !dbg !10662

if.end123:                                        ; preds = %if.then114
  br label %while.cond43, !dbg !10663, !llvm.loop !10542

while.end124:                                     ; preds = %while.cond43
  br label %while.cond8, !dbg !10664, !llvm.loop !10665

while.end125:                                     ; preds = %while.cond8
  %93 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !10666
  %94 = bitcast %struct.AVFormatContext* %93 to i8*, !dbg !10666
  %95 = load %struct.HLSContext*, %struct.HLSContext** %hls, align 8, !dbg !10667
  %nb_varstreams126 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %95, i32 0, i32 38, !dbg !10668
  %96 = load i32, i32* %nb_varstreams126, align 8, !dbg !10668
  call void (i8*, i32, i8*, ...) @av_log(i8* %94, i32 48, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.246, i32 0, i32 0), i32 %96), !dbg !10669
  store i32 0, i32* %retval, align 4, !dbg !10670
  br label %return, !dbg !10670

return:                                           ; preds = %while.end125, %if.else122, %if.else94, %if.then80, %if.then71, %if.then53, %if.then41, %if.else, %if.then
  %97 = load i32, i32* %retval, align 4, !dbg !10671
  ret i32 %97, !dbg !10671
}

declare i8* @av_strtok(i8*, i8*, i8**) #1

declare i32 @av_strstart(i8*, i8*, i8**) #1

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #3

; Function Attrs: nounwind uwtable
define internal i32 @get_nth_codec_stream_index(%struct.AVFormatContext* %s, i32 %codec_type, i32 %stream_id) #0 !dbg !10672 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %codec_type.addr = alloca i32, align 4
  %stream_id.addr = alloca i32, align 4
  %stream_index = alloca i32, align 4
  %cnt = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !10675, metadata !2335), !dbg !10676
  store i32 %codec_type, i32* %codec_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %codec_type.addr, metadata !10677, metadata !2335), !dbg !10678
  store i32 %stream_id, i32* %stream_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stream_id.addr, metadata !10679, metadata !2335), !dbg !10680
  call void @llvm.dbg.declare(metadata i32* %stream_index, metadata !10681, metadata !2335), !dbg !10682
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !10683, metadata !2335), !dbg !10684
  %0 = load i32, i32* %stream_id.addr, align 4, !dbg !10685
  %cmp = icmp slt i32 %0, 0, !dbg !10687
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10688

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %stream_id.addr, align 4, !dbg !10689
  %2 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !10691
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %2, i32 0, i32 6, !dbg !10692
  %3 = load i32, i32* %nb_streams, align 4, !dbg !10692
  %sub = sub i32 %3, 1, !dbg !10693
  %cmp1 = icmp ugt i32 %1, %sub, !dbg !10694
  br i1 %cmp1, label %if.then, label %if.end, !dbg !10695

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %retval, align 4, !dbg !10696
  br label %return, !dbg !10696

if.end:                                           ; preds = %lor.lhs.false
  store i32 0, i32* %cnt, align 4, !dbg !10697
  store i32 0, i32* %stream_index, align 4, !dbg !10698
  br label %for.cond, !dbg !10700

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i32, i32* %stream_index, align 4, !dbg !10701
  %5 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !10704
  %nb_streams2 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %5, i32 0, i32 6, !dbg !10705
  %6 = load i32, i32* %nb_streams2, align 4, !dbg !10705
  %cmp3 = icmp ult i32 %4, %6, !dbg !10706
  br i1 %cmp3, label %for.body, label %for.end, !dbg !10707

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %stream_index, align 4, !dbg !10708
  %idxprom = zext i32 %7 to i64, !dbg !10711
  %8 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !10711
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %8, i32 0, i32 7, !dbg !10712
  %9 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !10712
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %9, i64 %idxprom, !dbg !10711
  %10 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !10711
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %10, i32 0, i32 19, !dbg !10713
  %11 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !10713
  %codec_type4 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %11, i32 0, i32 0, !dbg !10714
  %12 = load i32, i32* %codec_type4, align 8, !dbg !10714
  %13 = load i32, i32* %codec_type.addr, align 4, !dbg !10715
  %cmp5 = icmp ne i32 %12, %13, !dbg !10716
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !10717

if.then6:                                         ; preds = %for.body
  br label %for.inc, !dbg !10718

if.end7:                                          ; preds = %for.body
  %14 = load i32, i32* %cnt, align 4, !dbg !10719
  %15 = load i32, i32* %stream_id.addr, align 4, !dbg !10721
  %cmp8 = icmp eq i32 %14, %15, !dbg !10722
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !10723

if.then9:                                         ; preds = %if.end7
  %16 = load i32, i32* %stream_index, align 4, !dbg !10724
  store i32 %16, i32* %retval, align 4, !dbg !10725
  br label %return, !dbg !10725

if.end10:                                         ; preds = %if.end7
  %17 = load i32, i32* %cnt, align 4, !dbg !10726
  %inc = add i32 %17, 1, !dbg !10726
  store i32 %inc, i32* %cnt, align 4, !dbg !10726
  br label %for.inc, !dbg !10727

for.inc:                                          ; preds = %if.end10, %if.then6
  %18 = load i32, i32* %stream_index, align 4, !dbg !10728
  %inc11 = add i32 %18, 1, !dbg !10728
  store i32 %inc11, i32* %stream_index, align 4, !dbg !10728
  br label %for.cond, !dbg !10730, !llvm.loop !10731

for.end:                                          ; preds = %for.cond
  store i32 -1, i32* %retval, align 4, !dbg !10733
  br label %return, !dbg !10733

return:                                           ; preds = %for.end, %if.then9, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !10734
  ret i32 %19, !dbg !10734
}

declare i8* @av_append_path_component(i8*, i8*) #1

declare i32 @avformat_alloc_output_context2(%struct.AVFormatContext**, %struct.AVOutputFormat*, i8*, i8*) #1

declare i32 @av_dict_copy(%struct.AVDictionary**, %struct.AVDictionary*, i32) #1

declare %struct.AVStream* @avformat_new_stream(%struct.AVFormatContext*, %struct.AVCodec*) #1

declare i32 @avcodec_parameters_copy(%struct.AVCodecParameters*, %struct.AVCodecParameters*) #1

declare i32 @av_codec_get_id(%struct.AVCodecTag**, i32) #1

declare i32 @av_codec_get_tag(%struct.AVCodecTag**, i32) #1

declare i32 @avformat_init_output(%struct.AVFormatContext*, %struct.AVDictionary**) #1

declare i32 @av_dict_count(%struct.AVDictionary*) #1

declare i32 @ffio_open_whitelist(%struct.AVIOContext**, i8*, i32, %struct.AVIOInterruptCB*, %struct.AVDictionary**, i8*, i8*) #1

declare i32 @ff_get_chomp_line(%struct.AVIOContext*, i8*, i32) #1

declare i32 @avio_feof(%struct.AVIOContext*) #1

; Function Attrs: nounwind readonly
declare double @atof(i8*) #3

declare i32 @av_stristart(i8*, i8*, i8**) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind }
attributes #9 = { inlinehint nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { nounwind readonly }
attributes #12 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2328, !2329}
!llvm.ident = !{!2330}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !975, globals: !1025)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavformat--hlsenc.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2 = !{!3, !463, !485, !506, !536, !545, !555, !755, !772, !778, !788, !812, !818, !836, !860, !879, !889, !897, !909, !918, !927, !933, !938, !943, !959, !963, !970}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !4, line: 215, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462}
!6 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!7 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!8 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!9 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!10 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!11 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!12 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!13 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!14 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!15 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!16 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!17 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!18 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!19 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!20 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!21 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!22 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!23 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!24 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!25 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!26 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!27 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!28 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!29 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!30 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!31 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!32 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!33 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!34 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!35 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!36 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!37 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!38 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!39 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!40 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!41 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!42 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!43 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!44 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!45 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!46 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!47 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!48 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!49 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!50 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!51 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!52 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!53 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!54 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!55 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!56 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!57 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!58 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!59 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!60 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!61 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!62 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!63 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!64 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!65 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!66 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!67 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!68 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!69 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!70 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!71 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!72 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!73 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!74 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!75 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!76 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!77 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!78 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!79 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!80 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!81 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!82 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!83 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!84 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!85 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!86 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!87 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!88 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!89 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!90 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!91 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!93 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!94 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!95 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!96 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!97 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!98 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!99 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!100 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!101 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!102 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!103 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!104 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!105 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!106 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!107 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!108 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!109 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!110 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!111 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!112 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!113 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!114 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!115 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!116 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!117 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!118 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!119 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!120 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!121 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!122 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!123 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!124 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!125 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!126 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!127 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!128 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!129 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!130 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!131 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!132 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!133 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!134 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!135 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!136 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!137 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!138 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!139 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!140 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!141 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!142 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!143 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!144 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!145 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!146 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!147 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!148 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!149 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!150 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!151 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!152 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!153 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!154 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!155 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!156 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!157 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!158 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!159 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!160 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!161 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!162 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!163 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!164 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!165 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!166 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!167 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!168 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!169 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!170 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!171 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!172 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!173 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!174 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!175 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!176 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!177 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!178 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!179 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!180 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!181 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!182 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!183 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!184 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!185 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!186 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!187 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!188 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!189 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!190 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!191 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!192 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!193 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!194 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!195 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!197 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!198 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!199 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!200 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!201 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!202 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!203 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!204 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!205 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!206 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!207 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!208 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!209 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!210 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!211 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!212 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!213 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!214 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!215 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!216 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!217 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!218 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!219 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!220 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!221 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!222 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!223 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!224 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!225 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!226 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!227 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!228 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!229 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!230 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!231 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!232 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!233 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!234 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!235 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!236 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!237 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!238 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!239 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!240 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!241 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!242 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!243 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!244 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!245 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!246 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!247 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!248 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!249 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!250 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!251 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!252 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!254 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!255 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!257 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!258 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!259 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!260 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!261 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!262 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!263 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!265 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!266 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!268 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!269 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!270 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!271 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!273 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!279 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!280 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!281 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!282 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!283 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!284 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!285 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!286 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!287 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!288 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!289 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!290 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!291 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!292 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!293 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!295 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!296 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!297 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!298 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!299 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!300 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!301 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!302 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!303 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!304 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!305 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!306 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!307 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!308 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!309 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!320 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!321 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!322 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!323 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!325 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!326 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!327 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!328 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!329 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!330 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!331 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!332 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!333 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!334 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!335 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!336 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!337 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!338 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!339 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!341 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!342 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!343 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!344 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!345 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!346 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!347 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!348 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!349 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!350 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!351 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!352 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!353 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!354 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!355 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!356 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!357 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!358 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!359 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!360 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!361 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!362 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!363 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!364 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!365 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!366 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!367 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!368 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!369 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!370 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!371 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!372 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!373 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!374 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!375 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!376 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!377 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!378 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!379 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!380 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!381 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!382 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!383 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!384 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!385 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!386 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!387 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!388 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!389 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!390 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!391 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!392 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!393 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!394 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!395 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!396 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!397 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!398 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!399 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!400 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!401 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!402 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!403 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!404 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!405 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!406 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!407 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!408 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!409 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!410 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!411 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!412 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!413 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!414 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!415 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!416 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!417 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!418 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!419 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!420 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!421 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!422 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!423 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!424 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!425 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!426 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!427 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!428 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!429 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!430 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!431 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!432 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!433 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!434 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!435 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!436 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!437 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!438 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!439 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!441 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!442 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!443 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!444 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!445 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!446 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!447 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!448 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!449 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!450 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!451 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!452 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!453 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!454 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!455 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!456 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!457 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!458 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!459 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!460 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!461 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!462 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!463 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !464, line: 221, size: 32, align: 32, elements: !465)
!464 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!465 = !{!466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484}
!466 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!467 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!468 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!469 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!470 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!471 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!472 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!473 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!474 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!475 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!476 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!477 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!478 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!479 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!480 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!481 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!482 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!483 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!484 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!485 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !486, line: 29, size: 32, align: 32, elements: !487)
!486 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!487 = !{!488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505}
!488 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!489 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!490 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!491 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!492 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!493 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!494 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!495 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!496 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!497 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!498 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!499 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!500 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!501 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!502 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!503 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!504 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!505 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!506 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !4, line: 1175, size: 32, align: 32, elements: !507)
!507 = !{!508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535}
!508 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!509 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!510 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!511 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!512 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!513 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!514 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!515 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!516 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!517 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!518 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!519 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!520 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!521 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!522 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!523 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!524 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!525 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!526 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!527 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!528 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!529 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!530 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!531 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!532 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!533 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!534 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!535 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!536 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVIODataMarkerType", file: !537, line: 111, size: 32, align: 32, elements: !538)
!537 = !DIFile(filename: "libavformat/avio.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!538 = !{!539, !540, !541, !542, !543, !544}
!539 = !DIEnumerator(name: "AVIO_DATA_MARKER_HEADER", value: 0)
!540 = !DIEnumerator(name: "AVIO_DATA_MARKER_SYNC_POINT", value: 1)
!541 = !DIEnumerator(name: "AVIO_DATA_MARKER_BOUNDARY_POINT", value: 2)
!542 = !DIEnumerator(name: "AVIO_DATA_MARKER_UNKNOWN", value: 3)
!543 = !DIEnumerator(name: "AVIO_DATA_MARKER_TRAILER", value: 4)
!544 = !DIEnumerator(name: "AVIO_DATA_MARKER_FLUSH_POINT", value: 5)
!545 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !546, line: 199, size: 32, align: 32, elements: !547)
!546 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!547 = !{!548, !549, !550, !551, !552, !553, !554}
!548 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!549 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!550 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!551 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!552 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!553 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!554 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!555 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !556, line: 64, size: 32, align: 32, elements: !557)
!556 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!557 = !{!558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754}
!558 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!559 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!560 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!561 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!562 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!567 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!568 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!569 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!570 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!574 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!575 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!576 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!577 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!578 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!579 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!580 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!581 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!582 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!583 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!584 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!585 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!586 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!587 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!588 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!589 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!590 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!593 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!594 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!595 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!596 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!597 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!598 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!599 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!600 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!601 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!602 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!603 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!604 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!605 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!606 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!613 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!614 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!615 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!616 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!617 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!618 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!619 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!620 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!621 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!622 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!623 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!624 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!625 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!626 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!627 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!628 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!629 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!630 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!631 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!632 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!633 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!634 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!635 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!636 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!637 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!638 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!639 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!640 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!641 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!642 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!643 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!644 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!645 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!646 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!647 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!648 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!649 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!650 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!651 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!652 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!653 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!654 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!655 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!656 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!657 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!658 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!659 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!660 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!661 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!662 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!663 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!664 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!665 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!666 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!667 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!668 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!669 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!670 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!671 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!672 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!673 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!674 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!675 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!676 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!677 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!678 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!679 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!680 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!681 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!682 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!683 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!684 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!685 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!686 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!687 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!688 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!689 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!690 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!691 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!692 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!693 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!694 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!695 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!696 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!697 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!698 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!699 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!700 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!701 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!702 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!703 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!704 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!705 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!706 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!707 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!708 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!709 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!710 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!711 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!712 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!713 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!714 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!715 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!716 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!717 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!718 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!719 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!720 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!721 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!722 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!723 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!724 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!725 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!726 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!727 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!728 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!729 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!730 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!731 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!732 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!733 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!734 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!735 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!736 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!737 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!738 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!739 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!740 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!741 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!742 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!743 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!744 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!745 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!746 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!747 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!748 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!749 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!750 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!751 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!752 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!753 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!754 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!755 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !756, line: 58, size: 32, align: 32, elements: !757)
!756 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!757 = !{!758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771}
!758 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!759 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!760 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!761 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!762 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!763 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!764 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!765 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!766 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!767 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!768 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!769 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!770 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!771 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!772 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !4, line: 3865, size: 32, align: 32, elements: !773)
!773 = !{!774, !775, !776, !777}
!774 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!775 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!776 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!777 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!778 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !546, line: 272, size: 32, align: 32, elements: !779)
!779 = !{!780, !781, !782, !783, !784, !785, !786, !787}
!780 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!781 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!782 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!783 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!784 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!785 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!786 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!787 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!788 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !789, line: 48, size: 32, align: 32, elements: !790)
!789 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!790 = !{!791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811}
!791 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!792 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!793 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!794 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!795 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!796 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!797 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!798 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!799 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!800 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!801 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!802 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!803 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!804 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!805 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!806 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!807 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!808 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!809 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!810 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!811 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!812 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !556, line: 516, size: 32, align: 32, elements: !813)
!813 = !{!814, !815, !816, !817}
!814 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!815 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!816 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!817 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!818 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !556, line: 440, size: 32, align: 32, elements: !819)
!819 = !{!820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835}
!820 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!821 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!822 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!823 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!824 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!825 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!826 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!827 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!828 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!829 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!830 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!831 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!832 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!833 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!834 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!835 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!836 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !556, line: 464, size: 32, align: 32, elements: !837)
!837 = !{!838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859}
!838 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!839 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!840 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!841 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!842 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!843 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!844 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!845 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!846 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!847 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!848 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!849 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!850 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!851 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!852 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!853 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!854 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!855 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!856 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!857 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!858 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!859 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!860 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !556, line: 493, size: 32, align: 32, elements: !861)
!861 = !{!862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878}
!862 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!863 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!864 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!865 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!866 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!867 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!868 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!869 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!870 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!871 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!872 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!873 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!874 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!875 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!876 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!877 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!878 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!879 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !556, line: 538, size: 32, align: 32, elements: !880)
!880 = !{!881, !882, !883, !884, !885, !886, !887, !888}
!881 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!882 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!883 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!884 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!885 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!886 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!887 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!888 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!889 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !4, line: 1534, size: 32, align: 32, elements: !890)
!890 = !{!891, !892, !893, !894, !895, !896}
!891 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!892 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!893 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!894 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!895 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!896 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!897 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !4, line: 810, size: 32, align: 32, elements: !898)
!898 = !{!899, !900, !901, !902, !903, !904, !905, !906, !907, !908}
!899 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!900 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!901 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!902 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!903 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!904 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!905 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!906 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!907 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!908 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!909 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !4, line: 798, size: 32, align: 32, elements: !910)
!910 = !{!911, !912, !913, !914, !915, !916, !917}
!911 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!912 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!913 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!914 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!915 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!916 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!917 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!918 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVStreamParseType", file: !919, line: 782, size: 32, align: 32, elements: !920)
!919 = !DIFile(filename: "libavformat/avformat.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!920 = !{!921, !922, !923, !924, !925, !926}
!921 = !DIEnumerator(name: "AVSTREAM_PARSE_NONE", value: 0)
!922 = !DIEnumerator(name: "AVSTREAM_PARSE_FULL", value: 1)
!923 = !DIEnumerator(name: "AVSTREAM_PARSE_HEADERS", value: 2)
!924 = !DIEnumerator(name: "AVSTREAM_PARSE_TIMESTAMPS", value: 3)
!925 = !DIEnumerator(name: "AVSTREAM_PARSE_FULL_ONCE", value: 4)
!926 = !DIEnumerator(name: "AVSTREAM_PARSE_FULL_RAW", value: 5)
!927 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureStructure", file: !4, line: 5085, size: 32, align: 32, elements: !928)
!928 = !{!929, !930, !931, !932}
!929 = !DIEnumerator(name: "AV_PICTURE_STRUCTURE_UNKNOWN", value: 0)
!930 = !DIEnumerator(name: "AV_PICTURE_STRUCTURE_TOP_FIELD", value: 1)
!931 = !DIEnumerator(name: "AV_PICTURE_STRUCTURE_BOTTOM_FIELD", value: 2)
!932 = !DIEnumerator(name: "AV_PICTURE_STRUCTURE_FRAME", value: 3)
!933 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDurationEstimationMethod", file: !919, line: 1315, size: 32, align: 32, elements: !934)
!934 = !{!935, !936, !937}
!935 = !DIEnumerator(name: "AVFMT_DURATION_FROM_PTS", value: 0)
!936 = !DIEnumerator(name: "AVFMT_DURATION_FROM_STREAM", value: 1)
!937 = !DIEnumerator(name: "AVFMT_DURATION_FROM_BITRATE", value: 2)
!938 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !939, line: 61, size: 32, align: 32, elements: !940)
!939 = !DIFile(filename: "libavformat/hlsenc.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!940 = !{!941, !942}
!941 = !DIEnumerator(name: "CODEC_ATTRIBUTE_WRITTEN", value: 0)
!942 = !DIEnumerator(name: "CODEC_ATTRIBUTE_WILL_NOT_BE_WRITTEN", value: 1)
!943 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "HLSFlags", file: !939, line: 86, size: 32, align: 32, elements: !944)
!944 = !{!945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958}
!945 = !DIEnumerator(name: "HLS_SINGLE_FILE", value: 1)
!946 = !DIEnumerator(name: "HLS_DELETE_SEGMENTS", value: 2)
!947 = !DIEnumerator(name: "HLS_ROUND_DURATIONS", value: 4)
!948 = !DIEnumerator(name: "HLS_DISCONT_START", value: 8)
!949 = !DIEnumerator(name: "HLS_OMIT_ENDLIST", value: 16)
!950 = !DIEnumerator(name: "HLS_SPLIT_BY_TIME", value: 32)
!951 = !DIEnumerator(name: "HLS_APPEND_LIST", value: 64)
!952 = !DIEnumerator(name: "HLS_PROGRAM_DATE_TIME", value: 128)
!953 = !DIEnumerator(name: "HLS_SECOND_LEVEL_SEGMENT_INDEX", value: 256)
!954 = !DIEnumerator(name: "HLS_SECOND_LEVEL_SEGMENT_DURATION", value: 512)
!955 = !DIEnumerator(name: "HLS_SECOND_LEVEL_SEGMENT_SIZE", value: 1024)
!956 = !DIEnumerator(name: "HLS_TEMP_FILE", value: 2048)
!957 = !DIEnumerator(name: "HLS_PERIODIC_REKEY", value: 4096)
!958 = !DIEnumerator(name: "HLS_INDEPENDENT_SEGMENTS", value: 8192)
!959 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !939, line: 104, size: 32, align: 32, elements: !960)
!960 = !{!961, !962}
!961 = !DIEnumerator(name: "SEGMENT_TYPE_MPEGTS", value: 0)
!962 = !DIEnumerator(name: "SEGMENT_TYPE_FMP4", value: 1)
!963 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !964, line: 32, size: 32, align: 32, elements: !965)
!964 = !DIFile(filename: "libavformat/hlsplaylist.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!965 = !{!966, !967, !968, !969}
!966 = !DIEnumerator(name: "PLAYLIST_TYPE_NONE", value: 0)
!967 = !DIEnumerator(name: "PLAYLIST_TYPE_EVENT", value: 1)
!968 = !DIEnumerator(name: "PLAYLIST_TYPE_VOD", value: 2)
!969 = !DIEnumerator(name: "PLAYLIST_TYPE_NB", value: 3)
!970 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !939, line: 55, size: 32, align: 32, elements: !971)
!971 = !{!972, !973, !974}
!972 = !DIEnumerator(name: "HLS_START_SEQUENCE_AS_START_NUMBER", value: 0)
!973 = !DIEnumerator(name: "HLS_START_SEQUENCE_AS_SECONDS_SINCE_EPOCH", value: 1)
!974 = !DIEnumerator(name: "HLS_START_SEQUENCE_AS_FORMATTED_DATETIME", value: 2)
!975 = !{!976, !979, !980, !981, !982, !983, !1008, !1009, !1014, !1016}
!976 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !977, line: 40, baseType: !978)
!977 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!978 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!979 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!981 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!982 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64, align: 64)
!984 = !DIDerivedType(tag: DW_TAG_typedef, name: "HLSSegment", file: !939, line: 84, baseType: !985)
!985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HLSSegment", file: !939, line: 71, size: 25216, align: 64, elements: !986)
!986 = !{!987, !992, !993, !994, !995, !996, !997, !998, !1002, !1006}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !985, file: !939, line: 72, baseType: !988, size: 8192, align: 8)
!988 = !DICompositeType(tag: DW_TAG_array_type, baseType: !989, size: 8192, align: 8, elements: !990)
!989 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!990 = !{!991}
!991 = !DISubrange(count: 1024)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "sub_filename", scope: !985, file: !939, line: 73, baseType: !988, size: 8192, align: 8, offset: 8192)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !985, file: !939, line: 74, baseType: !979, size: 64, align: 64, offset: 16384)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "discont", scope: !985, file: !939, line: 75, baseType: !981, size: 32, align: 32, offset: 16448)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !985, file: !939, line: 76, baseType: !976, size: 64, align: 64, offset: 16512)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !985, file: !939, line: 77, baseType: !976, size: 64, align: 64, offset: 16576)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "var_stream_idx", scope: !985, file: !939, line: 78, baseType: !982, size: 32, align: 32, offset: 16640)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "key_uri", scope: !985, file: !939, line: 80, baseType: !999, size: 8200, align: 8, offset: 16672)
!999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !989, size: 8200, align: 8, elements: !1000)
!1000 = !{!1001}
!1001 = !DISubrange(count: 1025)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "iv_string", scope: !985, file: !939, line: 81, baseType: !1003, size: 264, align: 8, offset: 24872)
!1003 = !DICompositeType(tag: DW_TAG_array_type, baseType: !989, size: 264, align: 8, elements: !1004)
!1004 = !{!1005}
!1005 = !DISubrange(count: 33)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !985, file: !939, line: 83, baseType: !1007, size: 64, align: 64, offset: 25152)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64, align: 64)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64, align: 64)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64, align: 64)
!1010 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_64", file: !1011, line: 220, size: 64, align: 8, elements: !1012)
!1011 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1012 = !{!1013}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1010, file: !1011, line: 220, baseType: !1014, size: 64, align: 64)
!1014 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !977, line: 55, baseType: !1015)
!1015 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64, align: 64)
!1017 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCPBProperties", file: !4, line: 1162, baseType: !1018)
!1018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCPBProperties", file: !4, line: 1119, size: 192, align: 64, elements: !1019)
!1019 = !{!1020, !1021, !1022, !1023, !1024}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "max_bitrate", scope: !1018, file: !4, line: 1125, baseType: !981, size: 32, align: 32)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "min_bitrate", scope: !1018, file: !4, line: 1134, baseType: !981, size: 32, align: 32, offset: 32)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "avg_bitrate", scope: !1018, file: !4, line: 1143, baseType: !981, size: 32, align: 32, offset: 64)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_size", scope: !1018, file: !4, line: 1152, baseType: !981, size: 32, align: 32, offset: 96)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1018, file: !4, line: 1161, baseType: !1014, size: 64, align: 64, offset: 128)
!1025 = !{!1026, !2261, !2262, !2268}
!1026 = distinct !DIGlobalVariable(name: "ff_hls_muxer", scope: !0, file: !939, line: 2956, type: !1027, isLocal: false, isDefinition: true, variable: %struct.AVOutputFormat* @ff_hls_muxer)
!1027 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOutputFormat", file: !919, line: 624, baseType: !1028)
!1028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOutputFormat", file: !919, line: 497, size: 1600, align: 64, elements: !1029)
!1029 = !{!1030, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1050, !1128, !1130, !1131, !2226, !2227, !2228, !2232, !2236, !2240, !2241, !2246, !2247, !2248, !2249, !2250, !2251, !2255}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1028, file: !919, line: 498, baseType: !1031, size: 64, align: 64)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64, align: 64)
!1032 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !989)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1028, file: !919, line: 504, baseType: !1031, size: 64, align: 64, offset: 64)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !1028, file: !919, line: 505, baseType: !1031, size: 64, align: 64, offset: 128)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "extensions", scope: !1028, file: !919, line: 506, baseType: !1031, size: 64, align: 64, offset: 192)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1028, file: !919, line: 508, baseType: !3, size: 32, align: 32, offset: 256)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "video_codec", scope: !1028, file: !919, line: 509, baseType: !3, size: 32, align: 32, offset: 288)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_codec", scope: !1028, file: !919, line: 510, baseType: !3, size: 32, align: 32, offset: 320)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1028, file: !919, line: 517, baseType: !981, size: 32, align: 32, offset: 352)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1028, file: !919, line: 523, baseType: !1041, size: 64, align: 64, offset: 384)
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64, align: 64)
!1042 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1043)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64, align: 64)
!1044 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1045)
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecTag", file: !1046, line: 44, size: 64, align: 32, elements: !1047)
!1046 = !DIFile(filename: "libavformat/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1047 = !{!1048, !1049}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1045, file: !1046, line: 45, baseType: !3, size: 32, align: 32)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !1045, file: !1046, line: 46, baseType: !982, size: 32, align: 32, offset: 32)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1028, file: !919, line: 526, baseType: !1051, size: 64, align: 64, offset: 448)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64, align: 64)
!1052 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1053)
!1053 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !486, line: 143, baseType: !1054)
!1054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !486, line: 67, size: 640, align: 64, elements: !1055)
!1055 = !{!1056, !1057, !1061, !1087, !1088, !1089, !1090, !1094, !1100, !1102, !1106}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !1054, file: !486, line: 72, baseType: !1031, size: 64, align: 64)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !1054, file: !486, line: 78, baseType: !1058, size: 64, align: 64, offset: 64)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 64, align: 64)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{!1031, !980}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !1054, file: !486, line: 85, baseType: !1062, size: 64, align: 64, offset: 128)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 64, align: 64)
!1063 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1064)
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !464, line: 246, size: 512, align: 64, elements: !1065)
!1065 = !{!1066, !1067, !1068, !1069, !1070, !1083, !1084, !1085, !1086}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1064, file: !464, line: 247, baseType: !1031, size: 64, align: 64)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !1064, file: !464, line: 253, baseType: !1031, size: 64, align: 64, offset: 64)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1064, file: !464, line: 259, baseType: !981, size: 32, align: 32, offset: 128)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1064, file: !464, line: 260, baseType: !463, size: 32, align: 32, offset: 160)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !1064, file: !464, line: 271, baseType: !1071, size: 64, align: 64, offset: 192)
!1071 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1064, file: !464, line: 265, size: 64, align: 64, elements: !1072)
!1072 = !{!1073, !1074, !1075, !1076}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !1071, file: !464, line: 266, baseType: !976, size: 64, align: 64)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !1071, file: !464, line: 267, baseType: !979, size: 64, align: 64)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1071, file: !464, line: 268, baseType: !1031, size: 64, align: 64)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1071, file: !464, line: 270, baseType: !1077, size: 64, align: 32)
!1077 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1078, line: 61, baseType: !1079)
!1078 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1078, line: 58, size: 64, align: 32, elements: !1080)
!1080 = !{!1081, !1082}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1079, file: !1078, line: 59, baseType: !981, size: 32, align: 32)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1079, file: !1078, line: 60, baseType: !981, size: 32, align: 32, offset: 32)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1064, file: !464, line: 272, baseType: !979, size: 64, align: 64, offset: 256)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1064, file: !464, line: 273, baseType: !979, size: 64, align: 64, offset: 320)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1064, file: !464, line: 275, baseType: !981, size: 32, align: 32, offset: 384)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1064, file: !464, line: 300, baseType: !1031, size: 64, align: 64, offset: 448)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1054, file: !486, line: 93, baseType: !981, size: 32, align: 32, offset: 192)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !1054, file: !486, line: 99, baseType: !981, size: 32, align: 32, offset: 224)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !1054, file: !486, line: 108, baseType: !981, size: 32, align: 32, offset: 256)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !1054, file: !486, line: 113, baseType: !1091, size: 64, align: 64, offset: 320)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 64, align: 64)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{!980, !980, !980}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !1054, file: !486, line: 123, baseType: !1095, size: 64, align: 64, offset: 384)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64, align: 64)
!1096 = !DISubroutineType(types: !1097)
!1097 = !{!1098, !1098}
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 64, align: 64)
!1099 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1054)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1054, file: !486, line: 130, baseType: !1101, size: 32, align: 32, offset: 448)
!1101 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !486, line: 48, baseType: !485)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !1054, file: !486, line: 136, baseType: !1103, size: 64, align: 64, offset: 512)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64, align: 64)
!1104 = !DISubroutineType(types: !1105)
!1105 = !{!1101, !980}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !1054, file: !486, line: 142, baseType: !1107, size: 64, align: 64, offset: 576)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64, align: 64)
!1108 = !DISubroutineType(types: !1109)
!1109 = !{!981, !1110, !980, !1031, !981}
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64, align: 64)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64, align: 64)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !464, line: 329, size: 128, align: 64, elements: !1113)
!1113 = !{!1114, !1126, !1127}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1112, file: !464, line: 360, baseType: !1115, size: 64, align: 64)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64, align: 64)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 64, align: 64)
!1117 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !464, line: 324, baseType: !1118)
!1118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !464, line: 306, size: 384, align: 64, elements: !1119)
!1119 = !{!1120, !1121, !1122, !1123, !1124, !1125}
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1118, file: !464, line: 307, baseType: !1031, size: 64, align: 64)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !1118, file: !464, line: 313, baseType: !979, size: 64, align: 64, offset: 64)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !1118, file: !464, line: 313, baseType: !979, size: 64, align: 64, offset: 128)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !1118, file: !464, line: 318, baseType: !979, size: 64, align: 64, offset: 192)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !1118, file: !464, line: 318, baseType: !979, size: 64, align: 64, offset: 256)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !1118, file: !464, line: 323, baseType: !981, size: 32, align: 32, offset: 320)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !1112, file: !464, line: 364, baseType: !981, size: 32, align: 32, offset: 64)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !1112, file: !464, line: 368, baseType: !981, size: 32, align: 32, offset: 96)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1028, file: !919, line: 535, baseType: !1129, size: 64, align: 64, offset: 512)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64, align: 64)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1028, file: !919, line: 539, baseType: !981, size: 32, align: 32, offset: 576)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "write_header", scope: !1028, file: !919, line: 541, baseType: !1132, size: 64, align: 64, offset: 640)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 64, align: 64)
!1133 = !DISubroutineType(types: !1134)
!1134 = !{!981, !1135}
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 64, align: 64)
!1136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFormatContext", file: !919, line: 1337, size: 11968, align: 64, elements: !1137)
!1137 = !{!1138, !1139, !1237, !1238, !1239, !1304, !1305, !1306, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2134, !2135, !2136, !2137, !2138, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2189, !2190, !2193, !2194, !2195, !2196, !2197, !2198, !2203, !2204, !2205, !2206, !2214, !2215, !2219, !2223, !2224, !2225}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1136, file: !919, line: 1342, baseType: !1051, size: 64, align: 64)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "iformat", scope: !1136, file: !919, line: 1349, baseType: !1140, size: 64, align: 64, offset: 64)
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 64, align: 64)
!1141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVInputFormat", file: !919, line: 633, size: 1344, align: 64, elements: !1142)
!1142 = !{!1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1167, !1168, !1208, !1209, !1213, !1218, !1219, !1220, !1224, !1230, !1236}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1141, file: !919, line: 638, baseType: !1031, size: 64, align: 64)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1141, file: !919, line: 645, baseType: !1031, size: 64, align: 64, offset: 64)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1141, file: !919, line: 652, baseType: !981, size: 32, align: 32, offset: 128)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "extensions", scope: !1141, file: !919, line: 659, baseType: !1031, size: 64, align: 64, offset: 192)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1141, file: !919, line: 661, baseType: !1041, size: 64, align: 64, offset: 256)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1141, file: !919, line: 663, baseType: !1051, size: 64, align: 64, offset: 320)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !1141, file: !919, line: 670, baseType: !1031, size: 64, align: 64, offset: 384)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1141, file: !919, line: 679, baseType: !1140, size: 64, align: 64, offset: 448)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "raw_codec_id", scope: !1141, file: !919, line: 684, baseType: !981, size: 32, align: 32, offset: 512)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1141, file: !919, line: 689, baseType: !981, size: 32, align: 32, offset: 544)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "read_probe", scope: !1141, file: !919, line: 696, baseType: !1154, size: 64, align: 64, offset: 576)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 64, align: 64)
!1155 = !DISubroutineType(types: !1156)
!1156 = !{!981, !1157}
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 64, align: 64)
!1158 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProbeData", file: !919, line: 453, baseType: !1159)
!1159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProbeData", file: !919, line: 448, size: 256, align: 64, elements: !1160)
!1160 = !{!1161, !1162, !1165, !1166}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !1159, file: !919, line: 449, baseType: !1031, size: 64, align: 64)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1159, file: !919, line: 450, baseType: !1163, size: 64, align: 64, offset: 64)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 64, align: 64)
!1164 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "buf_size", scope: !1159, file: !919, line: 451, baseType: !981, size: 32, align: 32, offset: 128)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !1159, file: !919, line: 452, baseType: !1031, size: 64, align: 64, offset: 192)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "read_header", scope: !1141, file: !919, line: 703, baseType: !1132, size: 64, align: 64, offset: 640)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "read_packet", scope: !1141, file: !919, line: 714, baseType: !1169, size: 64, align: 64, offset: 704)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 64, align: 64)
!1170 = !DISubroutineType(types: !1171)
!1171 = !{!981, !1135, !1172}
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64, align: 64)
!1173 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !4, line: 1499, baseType: !1174)
!1174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !4, line: 1445, size: 704, align: 64, elements: !1175)
!1175 = !{!1176, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1204, !1205, !1206, !1207}
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1174, file: !4, line: 1451, baseType: !1177, size: 64, align: 64)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 64, align: 64)
!1178 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1179, line: 94, baseType: !1180)
!1179 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1179, line: 81, size: 192, align: 64, elements: !1181)
!1181 = !{!1182, !1186, !1189}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1180, file: !1179, line: 82, baseType: !1183, size: 64, align: 64)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 64, align: 64)
!1184 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1179, line: 73, baseType: !1185)
!1185 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1179, line: 73, flags: DIFlagFwdDecl)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1180, file: !1179, line: 89, baseType: !1187, size: 64, align: 64, offset: 64)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64, align: 64)
!1188 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !977, line: 48, baseType: !1164)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1180, file: !1179, line: 93, baseType: !981, size: 32, align: 32, offset: 128)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1174, file: !4, line: 1461, baseType: !976, size: 64, align: 64, offset: 64)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1174, file: !4, line: 1467, baseType: !976, size: 64, align: 64, offset: 128)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1174, file: !4, line: 1468, baseType: !1187, size: 64, align: 64, offset: 192)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1174, file: !4, line: 1469, baseType: !981, size: 32, align: 32, offset: 256)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1174, file: !4, line: 1470, baseType: !981, size: 32, align: 32, offset: 288)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1174, file: !4, line: 1474, baseType: !981, size: 32, align: 32, offset: 320)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1174, file: !4, line: 1479, baseType: !1197, size: 64, align: 64, offset: 384)
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 64, align: 64)
!1198 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !4, line: 1415, baseType: !1199)
!1199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !4, line: 1411, size: 128, align: 64, elements: !1200)
!1200 = !{!1201, !1202, !1203}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1199, file: !4, line: 1412, baseType: !1187, size: 64, align: 64)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1199, file: !4, line: 1413, baseType: !981, size: 32, align: 32, offset: 64)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1199, file: !4, line: 1414, baseType: !506, size: 32, align: 32, offset: 96)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1174, file: !4, line: 1480, baseType: !981, size: 32, align: 32, offset: 448)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1174, file: !4, line: 1486, baseType: !976, size: 64, align: 64, offset: 512)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1174, file: !4, line: 1488, baseType: !976, size: 64, align: 64, offset: 576)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1174, file: !4, line: 1497, baseType: !976, size: 64, align: 64, offset: 640)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "read_close", scope: !1141, file: !919, line: 720, baseType: !1132, size: 64, align: 64, offset: 768)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "read_seek", scope: !1141, file: !919, line: 730, baseType: !1210, size: 64, align: 64, offset: 832)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 64, align: 64)
!1211 = !DISubroutineType(types: !1212)
!1212 = !{!981, !1135, !981, !976, !981}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "read_timestamp", scope: !1141, file: !919, line: 737, baseType: !1214, size: 64, align: 64, offset: 896)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 64, align: 64)
!1215 = !DISubroutineType(types: !1216)
!1216 = !{!976, !1135, !981, !1217, !976}
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64, align: 64)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "read_play", scope: !1141, file: !919, line: 744, baseType: !1132, size: 64, align: 64, offset: 960)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "read_pause", scope: !1141, file: !919, line: 750, baseType: !1132, size: 64, align: 64, offset: 1024)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "read_seek2", scope: !1141, file: !919, line: 758, baseType: !1221, size: 64, align: 64, offset: 1088)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 64, align: 64)
!1222 = !DISubroutineType(types: !1223)
!1223 = !{!981, !1135, !981, !976, !976, !976, !981}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "get_device_list", scope: !1141, file: !919, line: 764, baseType: !1225, size: 64, align: 64, offset: 1152)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 64, align: 64)
!1226 = !DISubroutineType(types: !1227)
!1227 = !{!981, !1135, !1228}
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 64, align: 64)
!1229 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDeviceInfoList", file: !919, line: 328, flags: DIFlagFwdDecl)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "create_device_capabilities", scope: !1141, file: !919, line: 770, baseType: !1231, size: 64, align: 64, offset: 1216)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64, align: 64)
!1232 = !DISubroutineType(types: !1233)
!1233 = !{!981, !1135, !1234}
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 64, align: 64)
!1235 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDeviceCapabilitiesQuery", file: !919, line: 329, flags: DIFlagFwdDecl)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "free_device_capabilities", scope: !1141, file: !919, line: 776, baseType: !1231, size: 64, align: 64, offset: 1280)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "oformat", scope: !1136, file: !919, line: 1356, baseType: !1129, size: 64, align: 64, offset: 128)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1136, file: !919, line: 1365, baseType: !980, size: 64, align: 64, offset: 192)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "pb", scope: !1136, file: !919, line: 1379, baseType: !1240, size: 64, align: 64, offset: 256)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 64, align: 64)
!1241 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVIOContext", file: !537, line: 352, baseType: !1242)
!1242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVIOContext", file: !537, line: 161, size: 2112, align: 64, elements: !1243)
!1243 = !{!1244, !1245, !1246, !1247, !1248, !1249, !1250, !1254, !1255, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1271, !1272, !1276, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1294, !1295, !1296, !1297, !1301, !1302, !1303}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1242, file: !537, line: 174, baseType: !1051, size: 64, align: 64)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1242, file: !537, line: 226, baseType: !1163, size: 64, align: 64, offset: 64)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_size", scope: !1242, file: !537, line: 227, baseType: !981, size: 32, align: 32, offset: 128)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr", scope: !1242, file: !537, line: 228, baseType: !1163, size: 64, align: 64, offset: 192)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "buf_end", scope: !1242, file: !537, line: 229, baseType: !1163, size: 64, align: 64, offset: 256)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1242, file: !537, line: 233, baseType: !980, size: 64, align: 64, offset: 320)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "read_packet", scope: !1242, file: !537, line: 235, baseType: !1251, size: 64, align: 64, offset: 384)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 64, align: 64)
!1252 = !DISubroutineType(types: !1253)
!1253 = !{!981, !980, !1187, !981}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "write_packet", scope: !1242, file: !537, line: 236, baseType: !1251, size: 64, align: 64, offset: 448)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "seek", scope: !1242, file: !537, line: 237, baseType: !1256, size: 64, align: 64, offset: 512)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64, align: 64)
!1257 = !DISubroutineType(types: !1258)
!1258 = !{!976, !980, !976, !981}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1242, file: !537, line: 238, baseType: !976, size: 64, align: 64, offset: 576)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "eof_reached", scope: !1242, file: !537, line: 239, baseType: !981, size: 32, align: 32, offset: 640)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "write_flag", scope: !1242, file: !537, line: 240, baseType: !981, size: 32, align: 32, offset: 672)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "max_packet_size", scope: !1242, file: !537, line: 241, baseType: !981, size: 32, align: 32, offset: 704)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "checksum", scope: !1242, file: !537, line: 242, baseType: !1015, size: 64, align: 64, offset: 768)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "checksum_ptr", scope: !1242, file: !537, line: 243, baseType: !1163, size: 64, align: 64, offset: 832)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "update_checksum", scope: !1242, file: !537, line: 244, baseType: !1266, size: 64, align: 64, offset: 896)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64, align: 64)
!1267 = !DISubroutineType(types: !1268)
!1268 = !{!1015, !1015, !1269, !982}
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64, align: 64)
!1270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1188)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1242, file: !537, line: 245, baseType: !981, size: 32, align: 32, offset: 960)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "read_pause", scope: !1242, file: !537, line: 249, baseType: !1273, size: 64, align: 64, offset: 1024)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 64, align: 64)
!1274 = !DISubroutineType(types: !1275)
!1275 = !{!981, !980, !981}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "read_seek", scope: !1242, file: !537, line: 255, baseType: !1277, size: 64, align: 64, offset: 1088)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64, align: 64)
!1278 = !DISubroutineType(types: !1279)
!1279 = !{!976, !980, !981, !976, !981}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "seekable", scope: !1242, file: !537, line: 260, baseType: !981, size: 32, align: 32, offset: 1152)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "maxsize", scope: !1242, file: !537, line: 266, baseType: !976, size: 64, align: 64, offset: 1216)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "direct", scope: !1242, file: !537, line: 273, baseType: !981, size: 32, align: 32, offset: 1280)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_read", scope: !1242, file: !537, line: 279, baseType: !976, size: 64, align: 64, offset: 1344)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "seek_count", scope: !1242, file: !537, line: 285, baseType: !981, size: 32, align: 32, offset: 1408)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "writeout_count", scope: !1242, file: !537, line: 291, baseType: !981, size: 32, align: 32, offset: 1440)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "orig_buffer_size", scope: !1242, file: !537, line: 298, baseType: !981, size: 32, align: 32, offset: 1472)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "short_seek_threshold", scope: !1242, file: !537, line: 304, baseType: !981, size: 32, align: 32, offset: 1504)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_whitelist", scope: !1242, file: !537, line: 309, baseType: !1031, size: 64, align: 64, offset: 1536)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_blacklist", scope: !1242, file: !537, line: 314, baseType: !1031, size: 64, align: 64, offset: 1600)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "write_data_type", scope: !1242, file: !537, line: 319, baseType: !1291, size: 64, align: 64, offset: 1664)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 64, align: 64)
!1292 = !DISubroutineType(types: !1293)
!1293 = !{!981, !980, !1187, !981, !536, !976}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_boundary_point", scope: !1242, file: !537, line: 326, baseType: !981, size: 32, align: 32, offset: 1728)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "current_type", scope: !1242, file: !537, line: 331, baseType: !536, size: 32, align: 32, offset: 1760)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !1242, file: !537, line: 332, baseType: !976, size: 64, align: 64, offset: 1792)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "short_seek_get", scope: !1242, file: !537, line: 338, baseType: !1298, size: 64, align: 64, offset: 1856)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64, align: 64)
!1299 = !DISubroutineType(types: !1300)
!1300 = !{!981, !980}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "written", scope: !1242, file: !537, line: 340, baseType: !976, size: 64, align: 64, offset: 1920)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr_max", scope: !1242, file: !537, line: 346, baseType: !1163, size: 64, align: 64, offset: 1984)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "min_packet_size", scope: !1242, file: !537, line: 351, baseType: !981, size: 32, align: 32, offset: 2048)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_flags", scope: !1136, file: !919, line: 1386, baseType: !981, size: 32, align: 32, offset: 320)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "nb_streams", scope: !1136, file: !919, line: 1393, baseType: !982, size: 32, align: 32, offset: 352)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "streams", scope: !1136, file: !919, line: 1405, baseType: !1307, size: 64, align: 64, offset: 384)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 64, align: 64)
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 64, align: 64)
!1309 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVStream", file: !919, line: 1223, baseType: !1310)
!1310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVStream", file: !919, line: 865, size: 6144, align: 64, elements: !1311)
!1311 = !{!1312, !1313, !1314, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1869, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1969, !1975, !1976, !1980, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2012, !2013, !2014, !2015, !2016, !2017}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1310, file: !919, line: 866, baseType: !981, size: 32, align: 32)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1310, file: !919, line: 872, baseType: !981, size: 32, align: 32, offset: 32)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1310, file: !919, line: 878, baseType: !1315, size: 64, align: 64, offset: 64)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64, align: 64)
!1316 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !4, line: 3360, baseType: !1317)
!1317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !4, line: 1556, size: 8448, align: 64, elements: !1318)
!1318 = !{!1319, !1320, !1321, !1322, !1544, !1545, !1546, !1547, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1573, !1577, !1578, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1757, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1317, file: !4, line: 1561, baseType: !1051, size: 64, align: 64)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1317, file: !4, line: 1562, baseType: !981, size: 32, align: 32, offset: 64)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1317, file: !4, line: 1564, baseType: !545, size: 32, align: 32, offset: 96)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1317, file: !4, line: 1565, baseType: !1323, size: 64, align: 64, offset: 128)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 64, align: 64)
!1324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1325)
!1325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !4, line: 3468, size: 1984, align: 64, elements: !1326)
!1326 = !{!1327, !1328, !1329, !1330, !1331, !1332, !1335, !1338, !1341, !1344, !1347, !1348, !1349, !1357, !1358, !1359, !1361, !1365, !1371, !1376, !1380, !1381, !1428, !1515, !1519, !1520, !1524, !1528, !1533, !1537, !1538, !1539}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1325, file: !4, line: 3475, baseType: !1031, size: 64, align: 64)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1325, file: !4, line: 3480, baseType: !1031, size: 64, align: 64, offset: 64)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1325, file: !4, line: 3481, baseType: !545, size: 32, align: 32, offset: 128)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1325, file: !4, line: 3482, baseType: !3, size: 32, align: 32, offset: 160)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1325, file: !4, line: 3487, baseType: !981, size: 32, align: 32, offset: 192)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1325, file: !4, line: 3488, baseType: !1333, size: 64, align: 64, offset: 256)
!1333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 64, align: 64)
!1334 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1077)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1325, file: !4, line: 3489, baseType: !1336, size: 64, align: 64, offset: 320)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 64, align: 64)
!1337 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !555)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1325, file: !4, line: 3490, baseType: !1339, size: 64, align: 64, offset: 384)
!1339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 64, align: 64)
!1340 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !981)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1325, file: !4, line: 3491, baseType: !1342, size: 64, align: 64, offset: 448)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 64, align: 64)
!1343 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !755)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1325, file: !4, line: 3492, baseType: !1345, size: 64, align: 64, offset: 512)
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 64, align: 64)
!1346 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1014)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1325, file: !4, line: 3493, baseType: !1188, size: 8, align: 8, offset: 576)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1325, file: !4, line: 3494, baseType: !1051, size: 64, align: 64, offset: 640)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1325, file: !4, line: 3495, baseType: !1350, size: 64, align: 64, offset: 704)
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 64, align: 64)
!1351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1352)
!1352 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !4, line: 3404, baseType: !1353)
!1353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !4, line: 3401, size: 128, align: 64, elements: !1354)
!1354 = !{!1355, !1356}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1353, file: !4, line: 3402, baseType: !981, size: 32, align: 32)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1353, file: !4, line: 3403, baseType: !1031, size: 64, align: 64, offset: 64)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1325, file: !4, line: 3507, baseType: !1031, size: 64, align: 64, offset: 768)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1325, file: !4, line: 3516, baseType: !981, size: 32, align: 32, offset: 832)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1325, file: !4, line: 3517, baseType: !1360, size: 64, align: 64, offset: 896)
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64, align: 64)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1325, file: !4, line: 3527, baseType: !1362, size: 64, align: 64, offset: 960)
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 64, align: 64)
!1363 = !DISubroutineType(types: !1364)
!1364 = !{!981, !1315}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1325, file: !4, line: 3535, baseType: !1366, size: 64, align: 64, offset: 1024)
!1366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 64, align: 64)
!1367 = !DISubroutineType(types: !1368)
!1368 = !{!981, !1315, !1369}
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 64, align: 64)
!1370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1316)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1325, file: !4, line: 3541, baseType: !1372, size: 64, align: 64, offset: 1088)
!1372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1373, size: 64, align: 64)
!1373 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1374)
!1374 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !4, line: 3461, baseType: !1375)
!1375 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !4, line: 3461, flags: DIFlagFwdDecl)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1325, file: !4, line: 3549, baseType: !1377, size: 64, align: 64, offset: 1152)
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 64, align: 64)
!1378 = !DISubroutineType(types: !1379)
!1379 = !{null, !1360}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1325, file: !4, line: 3551, baseType: !1362, size: 64, align: 64, offset: 1216)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1325, file: !4, line: 3552, baseType: !1382, size: 64, align: 64, offset: 1280)
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 64, align: 64)
!1383 = !DISubroutineType(types: !1384)
!1384 = !{!981, !1315, !1187, !981, !1385}
!1385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1386, size: 64, align: 64)
!1386 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1387)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !4, line: 3920, size: 256, align: 64, elements: !1388)
!1388 = !{!1389, !1392, !1394, !1395, !1396, !1427}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1387, file: !4, line: 3921, baseType: !1390, size: 16, align: 16)
!1390 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !977, line: 49, baseType: !1391)
!1391 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1387, file: !4, line: 3922, baseType: !1393, size: 32, align: 32, offset: 32)
!1393 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !977, line: 51, baseType: !982)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1387, file: !4, line: 3923, baseType: !1393, size: 32, align: 32, offset: 64)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1387, file: !4, line: 3924, baseType: !982, size: 32, align: 32, offset: 96)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1387, file: !4, line: 3925, baseType: !1397, size: 64, align: 64, offset: 128)
!1397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 64, align: 64)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 64, align: 64)
!1399 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !4, line: 3918, baseType: !1400)
!1400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !4, line: 3885, size: 1600, align: 64, elements: !1401)
!1401 = !{!1402, !1403, !1404, !1405, !1406, !1407, !1417, !1421, !1423, !1424, !1425, !1426}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1400, file: !4, line: 3886, baseType: !981, size: 32, align: 32)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1400, file: !4, line: 3887, baseType: !981, size: 32, align: 32, offset: 32)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1400, file: !4, line: 3888, baseType: !981, size: 32, align: 32, offset: 64)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1400, file: !4, line: 3889, baseType: !981, size: 32, align: 32, offset: 96)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1400, file: !4, line: 3890, baseType: !981, size: 32, align: 32, offset: 128)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1400, file: !4, line: 3897, baseType: !1408, size: 768, align: 64, offset: 192)
!1408 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !4, line: 3858, baseType: !1409)
!1409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !4, line: 3853, size: 768, align: 64, elements: !1410)
!1410 = !{!1411, !1415}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1409, file: !4, line: 3855, baseType: !1412, size: 512, align: 64)
!1412 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1187, size: 512, align: 64, elements: !1413)
!1413 = !{!1414}
!1414 = !DISubrange(count: 8)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1409, file: !4, line: 3857, baseType: !1416, size: 256, align: 32, offset: 512)
!1416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !981, size: 256, align: 32, elements: !1413)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1400, file: !4, line: 3903, baseType: !1418, size: 256, align: 64, offset: 960)
!1418 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1187, size: 256, align: 64, elements: !1419)
!1419 = !{!1420}
!1420 = !DISubrange(count: 4)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1400, file: !4, line: 3904, baseType: !1422, size: 128, align: 32, offset: 1216)
!1422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !981, size: 128, align: 32, elements: !1419)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1400, file: !4, line: 3906, baseType: !772, size: 32, align: 32, offset: 1344)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1400, file: !4, line: 3908, baseType: !1008, size: 64, align: 64, offset: 1408)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1400, file: !4, line: 3915, baseType: !1008, size: 64, align: 64, offset: 1472)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1400, file: !4, line: 3917, baseType: !981, size: 32, align: 32, offset: 1536)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1387, file: !4, line: 3926, baseType: !976, size: 64, align: 64, offset: 192)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1325, file: !4, line: 3564, baseType: !1429, size: 64, align: 64, offset: 1344)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 64, align: 64)
!1430 = !DISubroutineType(types: !1431)
!1431 = !{!981, !1315, !1172, !1432, !1514}
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 64, align: 64)
!1433 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1434)
!1434 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !789, line: 646, baseType: !1435)
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !789, line: 268, size: 4288, align: 64, elements: !1436)
!1436 = !{!1437, !1438, !1439, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1466, !1468, !1469, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1502, !1503, !1504, !1505, !1506, !1507, !1510, !1511, !1512, !1513}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1435, file: !789, line: 282, baseType: !1412, size: 512, align: 64)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1435, file: !789, line: 299, baseType: !1416, size: 256, align: 32, offset: 512)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1435, file: !789, line: 315, baseType: !1440, size: 64, align: 64, offset: 768)
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 64, align: 64)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1435, file: !789, line: 326, baseType: !981, size: 32, align: 32, offset: 832)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1435, file: !789, line: 326, baseType: !981, size: 32, align: 32, offset: 864)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1435, file: !789, line: 334, baseType: !981, size: 32, align: 32, offset: 896)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1435, file: !789, line: 341, baseType: !981, size: 32, align: 32, offset: 928)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1435, file: !789, line: 346, baseType: !981, size: 32, align: 32, offset: 960)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1435, file: !789, line: 351, baseType: !778, size: 32, align: 32, offset: 992)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1435, file: !789, line: 356, baseType: !1077, size: 64, align: 32, offset: 1024)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1435, file: !789, line: 361, baseType: !976, size: 64, align: 64, offset: 1088)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1435, file: !789, line: 369, baseType: !976, size: 64, align: 64, offset: 1152)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1435, file: !789, line: 377, baseType: !976, size: 64, align: 64, offset: 1216)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1435, file: !789, line: 382, baseType: !981, size: 32, align: 32, offset: 1280)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1435, file: !789, line: 386, baseType: !981, size: 32, align: 32, offset: 1312)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1435, file: !789, line: 391, baseType: !981, size: 32, align: 32, offset: 1344)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1435, file: !789, line: 396, baseType: !980, size: 64, align: 64, offset: 1408)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1435, file: !789, line: 403, baseType: !1456, size: 512, align: 64, offset: 1472)
!1456 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1014, size: 512, align: 64, elements: !1413)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1435, file: !789, line: 410, baseType: !981, size: 32, align: 32, offset: 1984)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1435, file: !789, line: 415, baseType: !981, size: 32, align: 32, offset: 2016)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1435, file: !789, line: 420, baseType: !981, size: 32, align: 32, offset: 2048)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1435, file: !789, line: 425, baseType: !981, size: 32, align: 32, offset: 2080)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1435, file: !789, line: 435, baseType: !976, size: 64, align: 64, offset: 2112)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1435, file: !789, line: 440, baseType: !981, size: 32, align: 32, offset: 2176)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1435, file: !789, line: 445, baseType: !1014, size: 64, align: 64, offset: 2240)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1435, file: !789, line: 459, baseType: !1465, size: 512, align: 64, offset: 2304)
!1465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1177, size: 512, align: 64, elements: !1413)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1435, file: !789, line: 473, baseType: !1467, size: 64, align: 64, offset: 2816)
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 64, align: 64)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1435, file: !789, line: 477, baseType: !981, size: 32, align: 32, offset: 2880)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1435, file: !789, line: 479, baseType: !1470, size: 64, align: 64, offset: 2944)
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 64, align: 64)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 64, align: 64)
!1472 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !789, line: 207, baseType: !1473)
!1473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !789, line: 201, size: 320, align: 64, elements: !1474)
!1474 = !{!1475, !1476, !1477, !1478, !1483}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1473, file: !789, line: 202, baseType: !788, size: 32, align: 32)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1473, file: !789, line: 203, baseType: !1187, size: 64, align: 64, offset: 64)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1473, file: !789, line: 204, baseType: !981, size: 32, align: 32, offset: 128)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1473, file: !789, line: 205, baseType: !1479, size: 64, align: 64, offset: 192)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 64, align: 64)
!1480 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1481, line: 86, baseType: !1482)
!1481 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1482 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1481, line: 86, flags: DIFlagFwdDecl)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1473, file: !789, line: 206, baseType: !1177, size: 64, align: 64, offset: 256)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1435, file: !789, line: 480, baseType: !981, size: 32, align: 32, offset: 3008)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1435, file: !789, line: 505, baseType: !981, size: 32, align: 32, offset: 3040)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1435, file: !789, line: 512, baseType: !812, size: 32, align: 32, offset: 3072)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1435, file: !789, line: 514, baseType: !818, size: 32, align: 32, offset: 3104)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1435, file: !789, line: 516, baseType: !836, size: 32, align: 32, offset: 3136)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1435, file: !789, line: 523, baseType: !860, size: 32, align: 32, offset: 3168)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1435, file: !789, line: 525, baseType: !879, size: 32, align: 32, offset: 3200)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1435, file: !789, line: 532, baseType: !976, size: 64, align: 64, offset: 3264)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1435, file: !789, line: 539, baseType: !976, size: 64, align: 64, offset: 3328)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1435, file: !789, line: 547, baseType: !976, size: 64, align: 64, offset: 3392)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1435, file: !789, line: 554, baseType: !1479, size: 64, align: 64, offset: 3456)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1435, file: !789, line: 563, baseType: !981, size: 32, align: 32, offset: 3520)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1435, file: !789, line: 572, baseType: !981, size: 32, align: 32, offset: 3552)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1435, file: !789, line: 581, baseType: !981, size: 32, align: 32, offset: 3584)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1435, file: !789, line: 588, baseType: !1499, size: 64, align: 64, offset: 3648)
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 64, align: 64)
!1500 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !977, line: 36, baseType: !1501)
!1501 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1435, file: !789, line: 593, baseType: !981, size: 32, align: 32, offset: 3712)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1435, file: !789, line: 596, baseType: !981, size: 32, align: 32, offset: 3744)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1435, file: !789, line: 599, baseType: !1177, size: 64, align: 64, offset: 3776)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1435, file: !789, line: 605, baseType: !1177, size: 64, align: 64, offset: 3840)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1435, file: !789, line: 616, baseType: !1177, size: 64, align: 64, offset: 3904)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1435, file: !789, line: 626, baseType: !1508, size: 64, align: 64, offset: 3968)
!1508 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1509, line: 216, baseType: !1015)
!1509 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1435, file: !789, line: 627, baseType: !1508, size: 64, align: 64, offset: 4032)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1435, file: !789, line: 628, baseType: !1508, size: 64, align: 64, offset: 4096)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1435, file: !789, line: 629, baseType: !1508, size: 64, align: 64, offset: 4160)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1435, file: !789, line: 645, baseType: !1177, size: 64, align: 64, offset: 4224)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64, align: 64)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1325, file: !4, line: 3566, baseType: !1516, size: 64, align: 64, offset: 1408)
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 64, align: 64)
!1517 = !DISubroutineType(types: !1518)
!1518 = !{!981, !1315, !980, !1514, !1172}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1325, file: !4, line: 3567, baseType: !1362, size: 64, align: 64, offset: 1472)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1325, file: !4, line: 3576, baseType: !1521, size: 64, align: 64, offset: 1536)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 64, align: 64)
!1522 = !DISubroutineType(types: !1523)
!1523 = !{!981, !1315, !1432}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1325, file: !4, line: 3577, baseType: !1525, size: 64, align: 64, offset: 1600)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64, align: 64)
!1526 = !DISubroutineType(types: !1527)
!1527 = !{!981, !1315, !1172}
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1325, file: !4, line: 3584, baseType: !1529, size: 64, align: 64, offset: 1664)
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 64, align: 64)
!1530 = !DISubroutineType(types: !1531)
!1531 = !{!981, !1315, !1532}
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1434, size: 64, align: 64)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1325, file: !4, line: 3589, baseType: !1534, size: 64, align: 64, offset: 1728)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 64, align: 64)
!1535 = !DISubroutineType(types: !1536)
!1536 = !{null, !1315}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1325, file: !4, line: 3594, baseType: !981, size: 32, align: 32, offset: 1792)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1325, file: !4, line: 3600, baseType: !1031, size: 64, align: 64, offset: 1856)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1325, file: !4, line: 3609, baseType: !1540, size: 64, align: 64, offset: 1920)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 64, align: 64)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64, align: 64)
!1542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1543)
!1543 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !4, line: 3609, flags: DIFlagFwdDecl)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1317, file: !4, line: 1566, baseType: !3, size: 32, align: 32, offset: 192)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1317, file: !4, line: 1581, baseType: !982, size: 32, align: 32, offset: 224)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1317, file: !4, line: 1583, baseType: !980, size: 64, align: 64, offset: 256)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1317, file: !4, line: 1591, baseType: !1548, size: 64, align: 64, offset: 320)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 64, align: 64)
!1549 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !4, line: 1532, flags: DIFlagFwdDecl)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1317, file: !4, line: 1598, baseType: !980, size: 64, align: 64, offset: 384)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1317, file: !4, line: 1606, baseType: !976, size: 64, align: 64, offset: 448)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1317, file: !4, line: 1614, baseType: !981, size: 32, align: 32, offset: 512)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1317, file: !4, line: 1622, baseType: !981, size: 32, align: 32, offset: 544)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1317, file: !4, line: 1628, baseType: !981, size: 32, align: 32, offset: 576)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1317, file: !4, line: 1636, baseType: !981, size: 32, align: 32, offset: 608)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1317, file: !4, line: 1643, baseType: !981, size: 32, align: 32, offset: 640)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1317, file: !4, line: 1657, baseType: !1187, size: 64, align: 64, offset: 704)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1317, file: !4, line: 1658, baseType: !981, size: 32, align: 32, offset: 768)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1317, file: !4, line: 1679, baseType: !1077, size: 64, align: 32, offset: 800)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1317, file: !4, line: 1688, baseType: !981, size: 32, align: 32, offset: 864)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1317, file: !4, line: 1712, baseType: !981, size: 32, align: 32, offset: 896)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1317, file: !4, line: 1729, baseType: !981, size: 32, align: 32, offset: 928)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1317, file: !4, line: 1729, baseType: !981, size: 32, align: 32, offset: 960)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1317, file: !4, line: 1744, baseType: !981, size: 32, align: 32, offset: 992)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1317, file: !4, line: 1744, baseType: !981, size: 32, align: 32, offset: 1024)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1317, file: !4, line: 1751, baseType: !981, size: 32, align: 32, offset: 1056)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1317, file: !4, line: 1766, baseType: !555, size: 32, align: 32, offset: 1088)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1317, file: !4, line: 1791, baseType: !1569, size: 64, align: 64, offset: 1152)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 64, align: 64)
!1570 = !DISubroutineType(types: !1571)
!1571 = !{null, !1572, !1432, !1514, !981, !981, !981}
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 64, align: 64)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1317, file: !4, line: 1808, baseType: !1574, size: 64, align: 64, offset: 1216)
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 64, align: 64)
!1575 = !DISubroutineType(types: !1576)
!1576 = !{!555, !1572, !1336}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1317, file: !4, line: 1816, baseType: !981, size: 32, align: 32, offset: 1280)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1317, file: !4, line: 1825, baseType: !1579, size: 32, align: 32, offset: 1312)
!1579 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1317, file: !4, line: 1830, baseType: !981, size: 32, align: 32, offset: 1344)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1317, file: !4, line: 1838, baseType: !1579, size: 32, align: 32, offset: 1376)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1317, file: !4, line: 1846, baseType: !981, size: 32, align: 32, offset: 1408)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1317, file: !4, line: 1851, baseType: !981, size: 32, align: 32, offset: 1440)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1317, file: !4, line: 1861, baseType: !1579, size: 32, align: 32, offset: 1472)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1317, file: !4, line: 1868, baseType: !1579, size: 32, align: 32, offset: 1504)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1317, file: !4, line: 1875, baseType: !1579, size: 32, align: 32, offset: 1536)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1317, file: !4, line: 1882, baseType: !1579, size: 32, align: 32, offset: 1568)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1317, file: !4, line: 1889, baseType: !1579, size: 32, align: 32, offset: 1600)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1317, file: !4, line: 1896, baseType: !1579, size: 32, align: 32, offset: 1632)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1317, file: !4, line: 1903, baseType: !1579, size: 32, align: 32, offset: 1664)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1317, file: !4, line: 1910, baseType: !981, size: 32, align: 32, offset: 1696)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1317, file: !4, line: 1915, baseType: !981, size: 32, align: 32, offset: 1728)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1317, file: !4, line: 1926, baseType: !1514, size: 64, align: 64, offset: 1792)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1317, file: !4, line: 1935, baseType: !1077, size: 64, align: 32, offset: 1856)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1317, file: !4, line: 1942, baseType: !981, size: 32, align: 32, offset: 1920)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1317, file: !4, line: 1948, baseType: !981, size: 32, align: 32, offset: 1952)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1317, file: !4, line: 1954, baseType: !981, size: 32, align: 32, offset: 1984)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1317, file: !4, line: 1960, baseType: !981, size: 32, align: 32, offset: 2016)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1317, file: !4, line: 1984, baseType: !981, size: 32, align: 32, offset: 2048)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1317, file: !4, line: 1991, baseType: !981, size: 32, align: 32, offset: 2080)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1317, file: !4, line: 1996, baseType: !981, size: 32, align: 32, offset: 2112)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1317, file: !4, line: 2004, baseType: !981, size: 32, align: 32, offset: 2144)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1317, file: !4, line: 2011, baseType: !981, size: 32, align: 32, offset: 2176)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1317, file: !4, line: 2018, baseType: !981, size: 32, align: 32, offset: 2208)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1317, file: !4, line: 2027, baseType: !981, size: 32, align: 32, offset: 2240)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1317, file: !4, line: 2034, baseType: !981, size: 32, align: 32, offset: 2272)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1317, file: !4, line: 2044, baseType: !981, size: 32, align: 32, offset: 2304)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1317, file: !4, line: 2054, baseType: !1609, size: 64, align: 64, offset: 2368)
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64, align: 64)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1317, file: !4, line: 2061, baseType: !1609, size: 64, align: 64, offset: 2432)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1317, file: !4, line: 2066, baseType: !981, size: 32, align: 32, offset: 2496)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1317, file: !4, line: 2070, baseType: !981, size: 32, align: 32, offset: 2528)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1317, file: !4, line: 2078, baseType: !981, size: 32, align: 32, offset: 2560)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1317, file: !4, line: 2085, baseType: !981, size: 32, align: 32, offset: 2592)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1317, file: !4, line: 2092, baseType: !981, size: 32, align: 32, offset: 2624)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1317, file: !4, line: 2099, baseType: !981, size: 32, align: 32, offset: 2656)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1317, file: !4, line: 2106, baseType: !981, size: 32, align: 32, offset: 2688)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1317, file: !4, line: 2113, baseType: !981, size: 32, align: 32, offset: 2720)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1317, file: !4, line: 2120, baseType: !981, size: 32, align: 32, offset: 2752)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1317, file: !4, line: 2125, baseType: !981, size: 32, align: 32, offset: 2784)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1317, file: !4, line: 2133, baseType: !981, size: 32, align: 32, offset: 2816)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1317, file: !4, line: 2140, baseType: !981, size: 32, align: 32, offset: 2848)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1317, file: !4, line: 2145, baseType: !981, size: 32, align: 32, offset: 2880)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1317, file: !4, line: 2153, baseType: !981, size: 32, align: 32, offset: 2912)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1317, file: !4, line: 2158, baseType: !981, size: 32, align: 32, offset: 2944)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1317, file: !4, line: 2166, baseType: !818, size: 32, align: 32, offset: 2976)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1317, file: !4, line: 2173, baseType: !836, size: 32, align: 32, offset: 3008)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1317, file: !4, line: 2180, baseType: !860, size: 32, align: 32, offset: 3040)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1317, file: !4, line: 2187, baseType: !812, size: 32, align: 32, offset: 3072)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1317, file: !4, line: 2194, baseType: !879, size: 32, align: 32, offset: 3104)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1317, file: !4, line: 2203, baseType: !981, size: 32, align: 32, offset: 3136)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1317, file: !4, line: 2209, baseType: !889, size: 32, align: 32, offset: 3168)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1317, file: !4, line: 2212, baseType: !981, size: 32, align: 32, offset: 3200)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1317, file: !4, line: 2213, baseType: !981, size: 32, align: 32, offset: 3232)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1317, file: !4, line: 2220, baseType: !755, size: 32, align: 32, offset: 3264)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1317, file: !4, line: 2232, baseType: !981, size: 32, align: 32, offset: 3296)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1317, file: !4, line: 2243, baseType: !981, size: 32, align: 32, offset: 3328)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1317, file: !4, line: 2249, baseType: !981, size: 32, align: 32, offset: 3360)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1317, file: !4, line: 2256, baseType: !981, size: 32, align: 32, offset: 3392)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1317, file: !4, line: 2263, baseType: !1014, size: 64, align: 64, offset: 3456)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1317, file: !4, line: 2270, baseType: !1014, size: 64, align: 64, offset: 3520)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1317, file: !4, line: 2277, baseType: !897, size: 32, align: 32, offset: 3584)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1317, file: !4, line: 2285, baseType: !755, size: 32, align: 32, offset: 3616)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1317, file: !4, line: 2367, baseType: !1645, size: 64, align: 64, offset: 3648)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 64, align: 64)
!1646 = !DISubroutineType(types: !1647)
!1647 = !{!981, !1572, !1532, !981}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1317, file: !4, line: 2383, baseType: !981, size: 32, align: 32, offset: 3712)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1317, file: !4, line: 2386, baseType: !1579, size: 32, align: 32, offset: 3744)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1317, file: !4, line: 2387, baseType: !1579, size: 32, align: 32, offset: 3776)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1317, file: !4, line: 2394, baseType: !981, size: 32, align: 32, offset: 3808)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1317, file: !4, line: 2401, baseType: !981, size: 32, align: 32, offset: 3840)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1317, file: !4, line: 2408, baseType: !981, size: 32, align: 32, offset: 3872)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1317, file: !4, line: 2415, baseType: !981, size: 32, align: 32, offset: 3904)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1317, file: !4, line: 2422, baseType: !981, size: 32, align: 32, offset: 3936)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1317, file: !4, line: 2423, baseType: !1657, size: 64, align: 64, offset: 3968)
!1657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1658, size: 64, align: 64)
!1658 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !4, line: 831, baseType: !1659)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !4, line: 826, size: 128, align: 32, elements: !1660)
!1660 = !{!1661, !1662, !1663, !1664}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1659, file: !4, line: 827, baseType: !981, size: 32, align: 32)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1659, file: !4, line: 828, baseType: !981, size: 32, align: 32, offset: 32)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1659, file: !4, line: 829, baseType: !981, size: 32, align: 32, offset: 64)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1659, file: !4, line: 830, baseType: !1579, size: 32, align: 32, offset: 96)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1317, file: !4, line: 2430, baseType: !976, size: 64, align: 64, offset: 4032)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1317, file: !4, line: 2437, baseType: !976, size: 64, align: 64, offset: 4096)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1317, file: !4, line: 2444, baseType: !1579, size: 32, align: 32, offset: 4160)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1317, file: !4, line: 2451, baseType: !1579, size: 32, align: 32, offset: 4192)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1317, file: !4, line: 2458, baseType: !981, size: 32, align: 32, offset: 4224)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1317, file: !4, line: 2469, baseType: !981, size: 32, align: 32, offset: 4256)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1317, file: !4, line: 2475, baseType: !981, size: 32, align: 32, offset: 4288)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1317, file: !4, line: 2481, baseType: !981, size: 32, align: 32, offset: 4320)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1317, file: !4, line: 2485, baseType: !981, size: 32, align: 32, offset: 4352)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1317, file: !4, line: 2489, baseType: !981, size: 32, align: 32, offset: 4384)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1317, file: !4, line: 2493, baseType: !981, size: 32, align: 32, offset: 4416)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1317, file: !4, line: 2501, baseType: !981, size: 32, align: 32, offset: 4448)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1317, file: !4, line: 2506, baseType: !981, size: 32, align: 32, offset: 4480)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1317, file: !4, line: 2510, baseType: !981, size: 32, align: 32, offset: 4512)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1317, file: !4, line: 2514, baseType: !976, size: 64, align: 64, offset: 4544)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1317, file: !4, line: 2528, baseType: !1681, size: 64, align: 64, offset: 4608)
!1681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1682, size: 64, align: 64)
!1682 = !DISubroutineType(types: !1683)
!1683 = !{null, !1572, !980, !981, !981}
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1317, file: !4, line: 2534, baseType: !981, size: 32, align: 32, offset: 4672)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1317, file: !4, line: 2545, baseType: !981, size: 32, align: 32, offset: 4704)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1317, file: !4, line: 2547, baseType: !981, size: 32, align: 32, offset: 4736)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1317, file: !4, line: 2549, baseType: !981, size: 32, align: 32, offset: 4768)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1317, file: !4, line: 2551, baseType: !981, size: 32, align: 32, offset: 4800)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1317, file: !4, line: 2553, baseType: !981, size: 32, align: 32, offset: 4832)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1317, file: !4, line: 2555, baseType: !981, size: 32, align: 32, offset: 4864)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1317, file: !4, line: 2557, baseType: !981, size: 32, align: 32, offset: 4896)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1317, file: !4, line: 2559, baseType: !981, size: 32, align: 32, offset: 4928)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1317, file: !4, line: 2563, baseType: !981, size: 32, align: 32, offset: 4960)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1317, file: !4, line: 2571, baseType: !1008, size: 64, align: 64, offset: 4992)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1317, file: !4, line: 2579, baseType: !1008, size: 64, align: 64, offset: 5056)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1317, file: !4, line: 2586, baseType: !981, size: 32, align: 32, offset: 5120)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1317, file: !4, line: 2615, baseType: !981, size: 32, align: 32, offset: 5152)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1317, file: !4, line: 2627, baseType: !981, size: 32, align: 32, offset: 5184)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1317, file: !4, line: 2637, baseType: !981, size: 32, align: 32, offset: 5216)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1317, file: !4, line: 2681, baseType: !981, size: 32, align: 32, offset: 5248)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1317, file: !4, line: 2709, baseType: !976, size: 64, align: 64, offset: 5312)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1317, file: !4, line: 2716, baseType: !1703, size: 64, align: 64, offset: 5376)
!1703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 64, align: 64)
!1704 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1705)
!1705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !4, line: 3636, size: 896, align: 64, elements: !1706)
!1706 = !{!1707, !1708, !1709, !1710, !1711, !1712, !1713, !1717, !1721, !1722, !1723, !1724, !1730, !1731, !1732, !1733, !1734}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1705, file: !4, line: 3642, baseType: !1031, size: 64, align: 64)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1705, file: !4, line: 3649, baseType: !545, size: 32, align: 32, offset: 64)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1705, file: !4, line: 3656, baseType: !3, size: 32, align: 32, offset: 96)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1705, file: !4, line: 3663, baseType: !555, size: 32, align: 32, offset: 128)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1705, file: !4, line: 3669, baseType: !981, size: 32, align: 32, offset: 160)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1705, file: !4, line: 3682, baseType: !1529, size: 64, align: 64, offset: 192)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1705, file: !4, line: 3698, baseType: !1714, size: 64, align: 64, offset: 256)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 64, align: 64)
!1715 = !DISubroutineType(types: !1716)
!1716 = !{!981, !1315, !1269, !1393}
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1705, file: !4, line: 3712, baseType: !1718, size: 64, align: 64, offset: 320)
!1718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 64, align: 64)
!1719 = !DISubroutineType(types: !1720)
!1720 = !{!981, !1315, !981, !1269, !1393}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1705, file: !4, line: 3726, baseType: !1714, size: 64, align: 64, offset: 384)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1705, file: !4, line: 3737, baseType: !1362, size: 64, align: 64, offset: 448)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1705, file: !4, line: 3746, baseType: !981, size: 32, align: 32, offset: 512)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1705, file: !4, line: 3757, baseType: !1725, size: 64, align: 64, offset: 576)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 64, align: 64)
!1726 = !DISubroutineType(types: !1727)
!1727 = !{null, !1728}
!1728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1729, size: 64, align: 64)
!1729 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !4, line: 3617, flags: DIFlagFwdDecl)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1705, file: !4, line: 3766, baseType: !1362, size: 64, align: 64, offset: 640)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1705, file: !4, line: 3774, baseType: !1362, size: 64, align: 64, offset: 704)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1705, file: !4, line: 3780, baseType: !981, size: 32, align: 32, offset: 768)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1705, file: !4, line: 3785, baseType: !981, size: 32, align: 32, offset: 800)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1705, file: !4, line: 3795, baseType: !1735, size: 64, align: 64, offset: 832)
!1735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 64, align: 64)
!1736 = !DISubroutineType(types: !1737)
!1737 = !{!981, !1315, !1177}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1317, file: !4, line: 2728, baseType: !980, size: 64, align: 64, offset: 5440)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1317, file: !4, line: 2735, baseType: !1456, size: 512, align: 64, offset: 5504)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1317, file: !4, line: 2742, baseType: !981, size: 32, align: 32, offset: 6016)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1317, file: !4, line: 2755, baseType: !981, size: 32, align: 32, offset: 6048)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1317, file: !4, line: 2776, baseType: !981, size: 32, align: 32, offset: 6080)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1317, file: !4, line: 2783, baseType: !981, size: 32, align: 32, offset: 6112)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1317, file: !4, line: 2791, baseType: !981, size: 32, align: 32, offset: 6144)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1317, file: !4, line: 2802, baseType: !1532, size: 64, align: 64, offset: 6208)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1317, file: !4, line: 2811, baseType: !981, size: 32, align: 32, offset: 6272)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1317, file: !4, line: 2821, baseType: !981, size: 32, align: 32, offset: 6304)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1317, file: !4, line: 2830, baseType: !981, size: 32, align: 32, offset: 6336)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1317, file: !4, line: 2840, baseType: !981, size: 32, align: 32, offset: 6368)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1317, file: !4, line: 2851, baseType: !1751, size: 64, align: 64, offset: 6400)
!1751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 64, align: 64)
!1752 = !DISubroutineType(types: !1753)
!1753 = !{!981, !1572, !1754, !980, !1514, !981, !981}
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 64, align: 64)
!1755 = !DISubroutineType(types: !1756)
!1756 = !{!981, !1572, !980}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1317, file: !4, line: 2871, baseType: !1758, size: 64, align: 64, offset: 6464)
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 64, align: 64)
!1759 = !DISubroutineType(types: !1760)
!1760 = !{!981, !1572, !1761, !980, !1514, !981}
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 64, align: 64)
!1762 = !DISubroutineType(types: !1763)
!1763 = !{!981, !1572, !980, !981, !981}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1317, file: !4, line: 2878, baseType: !981, size: 32, align: 32, offset: 6528)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1317, file: !4, line: 2885, baseType: !981, size: 32, align: 32, offset: 6560)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1317, file: !4, line: 3005, baseType: !981, size: 32, align: 32, offset: 6592)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1317, file: !4, line: 3013, baseType: !909, size: 32, align: 32, offset: 6624)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1317, file: !4, line: 3020, baseType: !909, size: 32, align: 32, offset: 6656)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1317, file: !4, line: 3027, baseType: !909, size: 32, align: 32, offset: 6688)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1317, file: !4, line: 3037, baseType: !1187, size: 64, align: 64, offset: 6720)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1317, file: !4, line: 3038, baseType: !981, size: 32, align: 32, offset: 6784)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1317, file: !4, line: 3050, baseType: !1014, size: 64, align: 64, offset: 6848)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1317, file: !4, line: 3065, baseType: !981, size: 32, align: 32, offset: 6912)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1317, file: !4, line: 3083, baseType: !981, size: 32, align: 32, offset: 6944)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1317, file: !4, line: 3092, baseType: !1077, size: 64, align: 32, offset: 6976)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1317, file: !4, line: 3099, baseType: !555, size: 32, align: 32, offset: 7040)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1317, file: !4, line: 3106, baseType: !1077, size: 64, align: 32, offset: 7072)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1317, file: !4, line: 3113, baseType: !1779, size: 64, align: 64, offset: 7168)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 64, align: 64)
!1780 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1781)
!1781 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !4, line: 740, baseType: !1782)
!1782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !4, line: 712, size: 384, align: 64, elements: !1783)
!1783 = !{!1784, !1785, !1786, !1787, !1788, !1789, !1792}
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1782, file: !4, line: 713, baseType: !3, size: 32, align: 32)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1782, file: !4, line: 714, baseType: !545, size: 32, align: 32, offset: 32)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1782, file: !4, line: 720, baseType: !1031, size: 64, align: 64, offset: 64)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1782, file: !4, line: 724, baseType: !1031, size: 64, align: 64, offset: 128)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1782, file: !4, line: 728, baseType: !981, size: 32, align: 32, offset: 192)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1782, file: !4, line: 734, baseType: !1790, size: 64, align: 64, offset: 256)
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 64, align: 64)
!1791 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1031)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1782, file: !4, line: 739, baseType: !1793, size: 64, align: 64, offset: 320)
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 64, align: 64)
!1794 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1353)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1317, file: !4, line: 3129, baseType: !976, size: 64, align: 64, offset: 7232)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1317, file: !4, line: 3130, baseType: !976, size: 64, align: 64, offset: 7296)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1317, file: !4, line: 3131, baseType: !976, size: 64, align: 64, offset: 7360)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1317, file: !4, line: 3132, baseType: !976, size: 64, align: 64, offset: 7424)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1317, file: !4, line: 3139, baseType: !1008, size: 64, align: 64, offset: 7488)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1317, file: !4, line: 3147, baseType: !981, size: 32, align: 32, offset: 7552)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1317, file: !4, line: 3165, baseType: !981, size: 32, align: 32, offset: 7584)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1317, file: !4, line: 3172, baseType: !981, size: 32, align: 32, offset: 7616)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1317, file: !4, line: 3180, baseType: !981, size: 32, align: 32, offset: 7648)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1317, file: !4, line: 3191, baseType: !1609, size: 64, align: 64, offset: 7680)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1317, file: !4, line: 3199, baseType: !1187, size: 64, align: 64, offset: 7744)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1317, file: !4, line: 3207, baseType: !1008, size: 64, align: 64, offset: 7808)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1317, file: !4, line: 3214, baseType: !982, size: 32, align: 32, offset: 7872)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1317, file: !4, line: 3224, baseType: !1197, size: 64, align: 64, offset: 7936)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1317, file: !4, line: 3225, baseType: !981, size: 32, align: 32, offset: 8000)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1317, file: !4, line: 3249, baseType: !1177, size: 64, align: 64, offset: 8064)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1317, file: !4, line: 3256, baseType: !981, size: 32, align: 32, offset: 8128)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1317, file: !4, line: 3271, baseType: !981, size: 32, align: 32, offset: 8160)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1317, file: !4, line: 3279, baseType: !976, size: 64, align: 64, offset: 8192)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1317, file: !4, line: 3301, baseType: !1177, size: 64, align: 64, offset: 8256)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1317, file: !4, line: 3310, baseType: !981, size: 32, align: 32, offset: 8320)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1317, file: !4, line: 3337, baseType: !981, size: 32, align: 32, offset: 8352)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1317, file: !4, line: 3351, baseType: !981, size: 32, align: 32, offset: 8384)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1317, file: !4, line: 3359, baseType: !981, size: 32, align: 32, offset: 8416)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1310, file: !919, line: 880, baseType: !980, size: 64, align: 64, offset: 128)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1310, file: !919, line: 894, baseType: !1077, size: 64, align: 32, offset: 192)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1310, file: !919, line: 904, baseType: !976, size: 64, align: 64, offset: 256)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1310, file: !919, line: 914, baseType: !976, size: 64, align: 64, offset: 320)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "nb_frames", scope: !1310, file: !919, line: 916, baseType: !976, size: 64, align: 64, offset: 384)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "disposition", scope: !1310, file: !919, line: 918, baseType: !981, size: 32, align: 32, offset: 448)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "discard", scope: !1310, file: !919, line: 920, baseType: !909, size: 32, align: 32, offset: 480)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1310, file: !919, line: 927, baseType: !1077, size: 64, align: 32, offset: 512)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1310, file: !919, line: 929, baseType: !1479, size: 64, align: 64, offset: 576)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "avg_frame_rate", scope: !1310, file: !919, line: 938, baseType: !1077, size: 64, align: 32, offset: 640)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "attached_pic", scope: !1310, file: !919, line: 947, baseType: !1173, size: 704, align: 64, offset: 704)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1310, file: !919, line: 967, baseType: !1197, size: 64, align: 64, offset: 1408)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1310, file: !919, line: 971, baseType: !981, size: 32, align: 32, offset: 1472)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !1310, file: !919, line: 978, baseType: !981, size: 32, align: 32, offset: 1504)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "r_frame_rate", scope: !1310, file: !919, line: 989, baseType: !1077, size: 64, align: 32, offset: 1536)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "recommended_encoder_configuration", scope: !1310, file: !919, line: 1000, baseType: !1008, size: 64, align: 64, offset: 1600)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "codecpar", scope: !1310, file: !919, line: 1012, baseType: !1836, size: 64, align: 64, offset: 1664)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 64, align: 64)
!1837 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !4, line: 4085, baseType: !1838)
!1838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !4, line: 3936, size: 1152, align: 64, elements: !1839)
!1839 = !{!1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868}
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1838, file: !4, line: 3940, baseType: !545, size: 32, align: 32)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1838, file: !4, line: 3944, baseType: !3, size: 32, align: 32, offset: 32)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1838, file: !4, line: 3948, baseType: !1393, size: 32, align: 32, offset: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1838, file: !4, line: 3958, baseType: !1187, size: 64, align: 64, offset: 128)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1838, file: !4, line: 3962, baseType: !981, size: 32, align: 32, offset: 192)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1838, file: !4, line: 3968, baseType: !981, size: 32, align: 32, offset: 224)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1838, file: !4, line: 3973, baseType: !976, size: 64, align: 64, offset: 256)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1838, file: !4, line: 3986, baseType: !981, size: 32, align: 32, offset: 320)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1838, file: !4, line: 3999, baseType: !981, size: 32, align: 32, offset: 352)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1838, file: !4, line: 4004, baseType: !981, size: 32, align: 32, offset: 384)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1838, file: !4, line: 4005, baseType: !981, size: 32, align: 32, offset: 416)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1838, file: !4, line: 4010, baseType: !981, size: 32, align: 32, offset: 448)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1838, file: !4, line: 4011, baseType: !981, size: 32, align: 32, offset: 480)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1838, file: !4, line: 4020, baseType: !1077, size: 64, align: 32, offset: 512)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1838, file: !4, line: 4025, baseType: !889, size: 32, align: 32, offset: 576)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1838, file: !4, line: 4030, baseType: !812, size: 32, align: 32, offset: 608)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1838, file: !4, line: 4031, baseType: !818, size: 32, align: 32, offset: 640)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1838, file: !4, line: 4032, baseType: !836, size: 32, align: 32, offset: 672)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1838, file: !4, line: 4033, baseType: !860, size: 32, align: 32, offset: 704)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1838, file: !4, line: 4034, baseType: !879, size: 32, align: 32, offset: 736)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1838, file: !4, line: 4039, baseType: !981, size: 32, align: 32, offset: 768)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1838, file: !4, line: 4046, baseType: !1014, size: 64, align: 64, offset: 832)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1838, file: !4, line: 4050, baseType: !981, size: 32, align: 32, offset: 896)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1838, file: !4, line: 4054, baseType: !981, size: 32, align: 32, offset: 928)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1838, file: !4, line: 4061, baseType: !981, size: 32, align: 32, offset: 960)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1838, file: !4, line: 4065, baseType: !981, size: 32, align: 32, offset: 992)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1838, file: !4, line: 4073, baseType: !981, size: 32, align: 32, offset: 1024)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1838, file: !4, line: 4080, baseType: !981, size: 32, align: 32, offset: 1056)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1838, file: !4, line: 4084, baseType: !981, size: 32, align: 32, offset: 1088)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1310, file: !919, line: 1055, baseType: !1870, size: 64, align: 64, offset: 1728)
!1870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 64, align: 64)
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1310, file: !919, line: 1028, size: 832, align: 64, elements: !1872)
!1872 = !{!1873, !1874, !1875, !1876, !1877, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "last_dts", scope: !1871, file: !919, line: 1029, baseType: !976, size: 64, align: 64)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "duration_gcd", scope: !1871, file: !919, line: 1030, baseType: !976, size: 64, align: 64, offset: 64)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "duration_count", scope: !1871, file: !919, line: 1031, baseType: !981, size: 32, align: 32, offset: 128)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "rfps_duration_sum", scope: !1871, file: !919, line: 1032, baseType: !976, size: 64, align: 64, offset: 192)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "duration_error", scope: !1871, file: !919, line: 1033, baseType: !1878, size: 64, align: 64, offset: 256)
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 64, align: 64)
!1879 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 51072, align: 64, elements: !1880)
!1880 = !{!1881, !1882}
!1881 = !DISubrange(count: 2)
!1882 = !DISubrange(count: 399)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "codec_info_duration", scope: !1871, file: !919, line: 1034, baseType: !976, size: 64, align: 64, offset: 320)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "codec_info_duration_fields", scope: !1871, file: !919, line: 1035, baseType: !976, size: 64, align: 64, offset: 384)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "frame_delay_evidence", scope: !1871, file: !919, line: 1036, baseType: !981, size: 32, align: 32, offset: 448)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "found_decoder", scope: !1871, file: !919, line: 1043, baseType: !981, size: 32, align: 32, offset: 480)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "last_duration", scope: !1871, file: !919, line: 1045, baseType: !976, size: 64, align: 64, offset: 512)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "fps_first_dts", scope: !1871, file: !919, line: 1050, baseType: !976, size: 64, align: 64, offset: 576)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "fps_first_dts_idx", scope: !1871, file: !919, line: 1051, baseType: !981, size: 32, align: 32, offset: 640)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "fps_last_dts", scope: !1871, file: !919, line: 1052, baseType: !976, size: 64, align: 64, offset: 704)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "fps_last_dts_idx", scope: !1871, file: !919, line: 1053, baseType: !981, size: 32, align: 32, offset: 768)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_bits", scope: !1310, file: !919, line: 1057, baseType: !981, size: 32, align: 32, offset: 1792)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "first_dts", scope: !1310, file: !919, line: 1067, baseType: !976, size: 64, align: 64, offset: 1856)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "cur_dts", scope: !1310, file: !919, line: 1068, baseType: !976, size: 64, align: 64, offset: 1920)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "last_IP_pts", scope: !1310, file: !919, line: 1069, baseType: !976, size: 64, align: 64, offset: 1984)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "last_IP_duration", scope: !1310, file: !919, line: 1070, baseType: !981, size: 32, align: 32, offset: 2048)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "probe_packets", scope: !1310, file: !919, line: 1075, baseType: !981, size: 32, align: 32, offset: 2080)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "codec_info_nb_frames", scope: !1310, file: !919, line: 1080, baseType: !981, size: 32, align: 32, offset: 2112)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "need_parsing", scope: !1310, file: !919, line: 1083, baseType: !918, size: 32, align: 32, offset: 2144)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "parser", scope: !1310, file: !919, line: 1084, baseType: !1901, size: 64, align: 64, offset: 2176)
!1901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 64, align: 64)
!1902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParserContext", file: !4, line: 5092, size: 2816, align: 64, elements: !1903)
!1903 = !{!1904, !1905, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1902, file: !4, line: 5093, baseType: !980, size: 64, align: 64)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "parser", scope: !1902, file: !4, line: 5094, baseType: !1906, size: 64, align: 64, offset: 64)
!1906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1907, size: 64, align: 64)
!1907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParser", file: !4, line: 5259, size: 512, align: 64, elements: !1908)
!1908 = !{!1909, !1913, !1914, !1920, !1925, !1929, !1933}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1907, file: !4, line: 5260, baseType: !1910, size: 160, align: 32)
!1910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !981, size: 160, align: 32, elements: !1911)
!1911 = !{!1912}
!1912 = !DISubrange(count: 5)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1907, file: !4, line: 5261, baseType: !981, size: 32, align: 32, offset: 160)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "parser_init", scope: !1907, file: !4, line: 5262, baseType: !1915, size: 64, align: 64, offset: 192)
!1915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 64, align: 64)
!1916 = !DISubroutineType(types: !1917)
!1917 = !{!981, !1918}
!1918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1919, size: 64, align: 64)
!1919 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParserContext", file: !4, line: 5257, baseType: !1902)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "parser_parse", scope: !1907, file: !4, line: 5265, baseType: !1921, size: 64, align: 64, offset: 256)
!1921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 64, align: 64)
!1922 = !DISubroutineType(types: !1923)
!1923 = !{!981, !1918, !1315, !1924, !1514, !1269, !981}
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 64, align: 64)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "parser_close", scope: !1907, file: !4, line: 5269, baseType: !1926, size: 64, align: 64, offset: 320)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 64, align: 64)
!1927 = !DISubroutineType(types: !1928)
!1928 = !{null, !1918}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1907, file: !4, line: 5270, baseType: !1930, size: 64, align: 64, offset: 384)
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 64, align: 64)
!1931 = !DISubroutineType(types: !1932)
!1932 = !{!981, !1315, !1269, !981}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1907, file: !4, line: 5271, baseType: !1906, size: 64, align: 64, offset: 448)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !1902, file: !4, line: 5095, baseType: !976, size: 64, align: 64, offset: 128)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "cur_offset", scope: !1902, file: !4, line: 5096, baseType: !976, size: 64, align: 64, offset: 192)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "next_frame_offset", scope: !1902, file: !4, line: 5098, baseType: !976, size: 64, align: 64, offset: 256)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1902, file: !4, line: 5100, baseType: !981, size: 32, align: 32, offset: 320)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1902, file: !4, line: 5110, baseType: !981, size: 32, align: 32, offset: 352)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1902, file: !4, line: 5111, baseType: !976, size: 64, align: 64, offset: 384)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1902, file: !4, line: 5112, baseType: !976, size: 64, align: 64, offset: 448)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "last_pts", scope: !1902, file: !4, line: 5115, baseType: !976, size: 64, align: 64, offset: 512)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "last_dts", scope: !1902, file: !4, line: 5116, baseType: !976, size: 64, align: 64, offset: 576)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "fetch_timestamp", scope: !1902, file: !4, line: 5117, baseType: !981, size: 32, align: 32, offset: 640)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_start_index", scope: !1902, file: !4, line: 5120, baseType: !981, size: 32, align: 32, offset: 672)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_offset", scope: !1902, file: !4, line: 5121, baseType: !1946, size: 256, align: 64, offset: 704)
!1946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !976, size: 256, align: 64, elements: !1419)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_pts", scope: !1902, file: !4, line: 5122, baseType: !1946, size: 256, align: 64, offset: 960)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_dts", scope: !1902, file: !4, line: 5123, baseType: !1946, size: 256, align: 64, offset: 1216)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1902, file: !4, line: 5125, baseType: !981, size: 32, align: 32, offset: 1472)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1902, file: !4, line: 5132, baseType: !976, size: 64, align: 64, offset: 1536)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_end", scope: !1902, file: !4, line: 5133, baseType: !1946, size: 256, align: 64, offset: 1600)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1902, file: !4, line: 5141, baseType: !981, size: 32, align: 32, offset: 1856)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1902, file: !4, line: 5148, baseType: !976, size: 64, align: 64, offset: 1920)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "dts_sync_point", scope: !1902, file: !4, line: 5161, baseType: !981, size: 32, align: 32, offset: 1984)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "dts_ref_dts_delta", scope: !1902, file: !4, line: 5176, baseType: !981, size: 32, align: 32, offset: 2016)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "pts_dts_delta", scope: !1902, file: !4, line: 5190, baseType: !981, size: 32, align: 32, offset: 2048)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_pos", scope: !1902, file: !4, line: 5197, baseType: !1946, size: 256, align: 64, offset: 2112)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1902, file: !4, line: 5202, baseType: !976, size: 64, align: 64, offset: 2368)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "last_pos", scope: !1902, file: !4, line: 5207, baseType: !976, size: 64, align: 64, offset: 2432)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1902, file: !4, line: 5214, baseType: !981, size: 32, align: 32, offset: 2496)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1902, file: !4, line: 5216, baseType: !889, size: 32, align: 32, offset: 2528)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "picture_structure", scope: !1902, file: !4, line: 5226, baseType: !927, size: 32, align: 32, offset: 2560)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "output_picture_number", scope: !1902, file: !4, line: 5234, baseType: !981, size: 32, align: 32, offset: 2592)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1902, file: !4, line: 5239, baseType: !981, size: 32, align: 32, offset: 2624)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1902, file: !4, line: 5240, baseType: !981, size: 32, align: 32, offset: 2656)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1902, file: !4, line: 5245, baseType: !981, size: 32, align: 32, offset: 2688)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1902, file: !4, line: 5246, baseType: !981, size: 32, align: 32, offset: 2720)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1902, file: !4, line: 5256, baseType: !981, size: 32, align: 32, offset: 2752)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "last_in_packet_buffer", scope: !1310, file: !919, line: 1089, baseType: !1970, size: 64, align: 64, offset: 2240)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 64, align: 64)
!1971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketList", file: !919, line: 2003, size: 768, align: 64, elements: !1972)
!1972 = !{!1973, !1974}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", scope: !1971, file: !919, line: 2004, baseType: !1173, size: 704, align: 64)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1971, file: !919, line: 2005, baseType: !1970, size: 64, align: 64, offset: 704)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "probe_data", scope: !1310, file: !919, line: 1090, baseType: !1158, size: 256, align: 64, offset: 2304)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "pts_buffer", scope: !1310, file: !919, line: 1092, baseType: !1977, size: 1088, align: 64, offset: 2560)
!1977 = !DICompositeType(tag: DW_TAG_array_type, baseType: !976, size: 1088, align: 64, elements: !1978)
!1978 = !{!1979}
!1979 = !DISubrange(count: 17)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "index_entries", scope: !1310, file: !919, line: 1094, baseType: !1981, size: 64, align: 64, offset: 3648)
!1981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1982, size: 64, align: 64)
!1982 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVIndexEntry", file: !919, line: 808, baseType: !1983)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVIndexEntry", file: !919, line: 793, size: 192, align: 64, elements: !1984)
!1984 = !{!1985, !1986, !1987, !1988, !1989}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1983, file: !919, line: 794, baseType: !976, size: 64, align: 64)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !1983, file: !919, line: 795, baseType: !976, size: 64, align: 64, offset: 64)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1983, file: !919, line: 805, baseType: !981, size: 2, align: 32, offset: 128, flags: DIFlagBitField, extraData: i64 128)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1983, file: !919, line: 806, baseType: !981, size: 30, align: 32, offset: 130, flags: DIFlagBitField, extraData: i64 128)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "min_distance", scope: !1983, file: !919, line: 807, baseType: !981, size: 32, align: 32, offset: 160)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "nb_index_entries", scope: !1310, file: !919, line: 1096, baseType: !981, size: 32, align: 32, offset: 3712)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "index_entries_allocated_size", scope: !1310, file: !919, line: 1097, baseType: !982, size: 32, align: 32, offset: 3744)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "stream_identifier", scope: !1310, file: !919, line: 1104, baseType: !981, size: 32, align: 32, offset: 3776)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "program_num", scope: !1310, file: !919, line: 1109, baseType: !981, size: 32, align: 32, offset: 3808)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "pmt_version", scope: !1310, file: !919, line: 1110, baseType: !981, size: 32, align: 32, offset: 3840)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "pmt_stream_idx", scope: !1310, file: !919, line: 1111, baseType: !981, size: 32, align: 32, offset: 3872)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "interleaver_chunk_size", scope: !1310, file: !919, line: 1113, baseType: !976, size: 64, align: 64, offset: 3904)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "interleaver_chunk_duration", scope: !1310, file: !919, line: 1114, baseType: !976, size: 64, align: 64, offset: 3968)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "request_probe", scope: !1310, file: !919, line: 1123, baseType: !981, size: 32, align: 32, offset: 4032)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "skip_to_keyframe", scope: !1310, file: !919, line: 1128, baseType: !981, size: 32, align: 32, offset: 4064)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1310, file: !919, line: 1133, baseType: !981, size: 32, align: 32, offset: 4096)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "start_skip_samples", scope: !1310, file: !919, line: 1142, baseType: !976, size: 64, align: 64, offset: 4160)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "first_discard_sample", scope: !1310, file: !919, line: 1150, baseType: !976, size: 64, align: 64, offset: 4224)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "last_discard_sample", scope: !1310, file: !919, line: 1157, baseType: !976, size: 64, align: 64, offset: 4288)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "nb_decoded_frames", scope: !1310, file: !919, line: 1163, baseType: !981, size: 32, align: 32, offset: 4352)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "mux_ts_offset", scope: !1310, file: !919, line: 1169, baseType: !976, size: 64, align: 64, offset: 4416)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_reference", scope: !1310, file: !919, line: 1174, baseType: !976, size: 64, align: 64, offset: 4480)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_behavior", scope: !1310, file: !919, line: 1186, baseType: !981, size: 32, align: 32, offset: 4544)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "update_initial_durations_done", scope: !1310, file: !919, line: 1191, baseType: !981, size: 32, align: 32, offset: 4576)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "pts_reorder_error", scope: !1310, file: !919, line: 1196, baseType: !1977, size: 1088, align: 64, offset: 4608)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "pts_reorder_error_count", scope: !1310, file: !919, line: 1197, baseType: !2011, size: 136, align: 8, offset: 5696)
!2011 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1188, size: 136, align: 8, elements: !1978)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "last_dts_for_order_check", scope: !1310, file: !919, line: 1202, baseType: !976, size: 64, align: 64, offset: 5888)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "dts_ordered", scope: !1310, file: !919, line: 1203, baseType: !1188, size: 8, align: 8, offset: 5952)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "dts_misordered", scope: !1310, file: !919, line: 1204, baseType: !1188, size: 8, align: 8, offset: 5960)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "inject_global_side_data", scope: !1310, file: !919, line: 1209, baseType: !981, size: 32, align: 32, offset: 5984)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "display_aspect_ratio", scope: !1310, file: !919, line: 1216, baseType: !1077, size: 64, align: 32, offset: 6016)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1310, file: !919, line: 1222, baseType: !2018, size: 64, align: 64, offset: 6080)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 64, align: 64)
!2019 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVStreamInternal", file: !919, line: 840, baseType: !2020)
!2020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVStreamInternal", file: !1046, line: 149, size: 640, align: 64, elements: !2021)
!2021 = !{!2022, !2023, !2063, !2064, !2065, !2066, !2067, !2068, !2074, !2075}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "reorder", scope: !2020, file: !1046, line: 154, baseType: !981, size: 32, align: 32)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "bsfcs", scope: !2020, file: !1046, line: 161, baseType: !2024, size: 64, align: 64, offset: 64)
!2024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2025, size: 64, align: 64)
!2025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 64, align: 64)
!2026 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !4, line: 5794, baseType: !2027)
!2027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !4, line: 5747, size: 512, align: 64, elements: !2028)
!2028 = !{!2029, !2030, !2054, !2058, !2059, !2060, !2061, !2062}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !2027, file: !4, line: 5751, baseType: !1051, size: 64, align: 64)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2027, file: !4, line: 5756, baseType: !2031, size: 64, align: 64, offset: 64)
!2031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2032, size: 64, align: 64)
!2032 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2033)
!2033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !4, line: 5796, size: 512, align: 64, elements: !2034)
!2034 = !{!2035, !2036, !2039, !2040, !2041, !2045, !2049, !2053}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2033, file: !4, line: 5797, baseType: !1031, size: 64, align: 64)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !2033, file: !4, line: 5804, baseType: !2037, size: 64, align: 64, offset: 64)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 64, align: 64)
!2038 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !2033, file: !4, line: 5815, baseType: !1051, size: 64, align: 64, offset: 128)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !2033, file: !4, line: 5825, baseType: !981, size: 32, align: 32, offset: 192)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2033, file: !4, line: 5826, baseType: !2042, size: 64, align: 64, offset: 256)
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2043, size: 64, align: 64)
!2043 = !DISubroutineType(types: !2044)
!2044 = !{!981, !2025}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2033, file: !4, line: 5827, baseType: !2046, size: 64, align: 64, offset: 320)
!2046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2047, size: 64, align: 64)
!2047 = !DISubroutineType(types: !2048)
!2048 = !{!981, !2025, !1172}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !2033, file: !4, line: 5828, baseType: !2050, size: 64, align: 64, offset: 384)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 64, align: 64)
!2051 = !DISubroutineType(types: !2052)
!2052 = !{null, !2025}
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2033, file: !4, line: 5829, baseType: !2050, size: 64, align: 64, offset: 448)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !2027, file: !4, line: 5762, baseType: !2055, size: 64, align: 64, offset: 128)
!2055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2056, size: 64, align: 64)
!2056 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !4, line: 5735, baseType: !2057)
!2057 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !4, line: 5735, flags: DIFlagFwdDecl)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !2027, file: !4, line: 5768, baseType: !980, size: 64, align: 64, offset: 192)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !2027, file: !4, line: 5775, baseType: !1836, size: 64, align: 64, offset: 256)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !2027, file: !4, line: 5781, baseType: !1836, size: 64, align: 64, offset: 320)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !2027, file: !4, line: 5787, baseType: !1077, size: 64, align: 32, offset: 384)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !2027, file: !4, line: 5793, baseType: !1077, size: 64, align: 32, offset: 448)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfcs", scope: !2020, file: !1046, line: 162, baseType: !981, size: 32, align: 32, offset: 128)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "bitstream_checked", scope: !2020, file: !1046, line: 167, baseType: !981, size: 32, align: 32, offset: 160)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !2020, file: !1046, line: 172, baseType: !1315, size: 64, align: 64, offset: 192)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "avctx_inited", scope: !2020, file: !1046, line: 176, baseType: !981, size: 32, align: 32, offset: 256)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "orig_codec_id", scope: !2020, file: !1046, line: 178, baseType: !3, size: 32, align: 32, offset: 288)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "extract_extradata", scope: !2020, file: !1046, line: 187, baseType: !2069, size: 192, align: 64, offset: 320)
!2069 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2020, file: !1046, line: 183, size: 192, align: 64, elements: !2070)
!2070 = !{!2071, !2072, !2073}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "bsf", scope: !2069, file: !1046, line: 184, baseType: !2025, size: 64, align: 64)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", scope: !2069, file: !1046, line: 185, baseType: !1172, size: 64, align: 64, offset: 64)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "inited", scope: !2069, file: !1046, line: 186, baseType: !981, size: 32, align: 32, offset: 128)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "need_context_update", scope: !2020, file: !1046, line: 192, baseType: !981, size: 32, align: 32, offset: 512)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "priv_pts", scope: !2020, file: !1046, line: 194, baseType: !2076, size: 64, align: 64, offset: 576)
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 64, align: 64)
!2077 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFFrac", file: !1046, line: 63, baseType: !2078)
!2078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFFrac", file: !1046, line: 61, size: 192, align: 64, elements: !2079)
!2079 = !{!2080, !2081, !2082}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2078, file: !1046, line: 62, baseType: !976, size: 64, align: 64)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2078, file: !1046, line: 62, baseType: !976, size: 64, align: 64, offset: 64)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !2078, file: !1046, line: 62, baseType: !976, size: 64, align: 64, offset: 128)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !1136, file: !919, line: 1417, baseType: !988, size: 8192, align: 8, offset: 448)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "url", scope: !1136, file: !919, line: 1433, baseType: !1008, size: 64, align: 64, offset: 8640)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1136, file: !919, line: 1442, baseType: !976, size: 64, align: 64, offset: 8704)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1136, file: !919, line: 1452, baseType: !976, size: 64, align: 64, offset: 8768)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1136, file: !919, line: 1459, baseType: !976, size: 64, align: 64, offset: 8832)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "packet_size", scope: !1136, file: !919, line: 1461, baseType: !982, size: 32, align: 32, offset: 8896)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "max_delay", scope: !1136, file: !919, line: 1462, baseType: !981, size: 32, align: 32, offset: 8928)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1136, file: !919, line: 1468, baseType: !981, size: 32, align: 32, offset: 8960)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "probesize", scope: !1136, file: !919, line: 1503, baseType: !976, size: 64, align: 64, offset: 9024)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "max_analyze_duration", scope: !1136, file: !919, line: 1511, baseType: !976, size: 64, align: 64, offset: 9088)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1136, file: !919, line: 1513, baseType: !1269, size: 64, align: 64, offset: 9152)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "keylen", scope: !1136, file: !919, line: 1514, baseType: !981, size: 32, align: 32, offset: 9216)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "nb_programs", scope: !1136, file: !919, line: 1516, baseType: !982, size: 32, align: 32, offset: 9248)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "programs", scope: !1136, file: !919, line: 1517, baseType: !2097, size: 64, align: 64, offset: 9280)
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 64, align: 64)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 64, align: 64)
!2099 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProgram", file: !919, line: 1284, baseType: !2100)
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProgram", file: !919, line: 1259, size: 704, align: 64, elements: !2101)
!2101 = !{!2102, !2103, !2104, !2105, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2100, file: !919, line: 1260, baseType: !981, size: 32, align: 32)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2100, file: !919, line: 1261, baseType: !981, size: 32, align: 32, offset: 32)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "discard", scope: !2100, file: !919, line: 1262, baseType: !909, size: 32, align: 32, offset: 64)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !2100, file: !919, line: 1263, baseType: !2106, size: 64, align: 64, offset: 128)
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 64, align: 64)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "nb_stream_indexes", scope: !2100, file: !919, line: 1264, baseType: !982, size: 32, align: 32, offset: 192)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !2100, file: !919, line: 1265, baseType: !1479, size: 64, align: 64, offset: 256)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "program_num", scope: !2100, file: !919, line: 1267, baseType: !981, size: 32, align: 32, offset: 320)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "pmt_pid", scope: !2100, file: !919, line: 1268, baseType: !981, size: 32, align: 32, offset: 352)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "pcr_pid", scope: !2100, file: !919, line: 1269, baseType: !981, size: 32, align: 32, offset: 384)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "pmt_version", scope: !2100, file: !919, line: 1270, baseType: !981, size: 32, align: 32, offset: 416)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2100, file: !919, line: 1279, baseType: !976, size: 64, align: 64, offset: 448)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "end_time", scope: !2100, file: !919, line: 1280, baseType: !976, size: 64, align: 64, offset: 512)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_reference", scope: !2100, file: !919, line: 1282, baseType: !976, size: 64, align: 64, offset: 576)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_behavior", scope: !2100, file: !919, line: 1283, baseType: !981, size: 32, align: 32, offset: 640)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "video_codec_id", scope: !1136, file: !919, line: 1523, baseType: !3, size: 32, align: 32, offset: 9344)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec_id", scope: !1136, file: !919, line: 1529, baseType: !3, size: 32, align: 32, offset: 9376)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_codec_id", scope: !1136, file: !919, line: 1535, baseType: !3, size: 32, align: 32, offset: 9408)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "max_index_size", scope: !1136, file: !919, line: 1547, baseType: !982, size: 32, align: 32, offset: 9440)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "max_picture_buffer", scope: !1136, file: !919, line: 1553, baseType: !982, size: 32, align: 32, offset: 9472)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "nb_chapters", scope: !1136, file: !919, line: 1566, baseType: !982, size: 32, align: 32, offset: 9504)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "chapters", scope: !1136, file: !919, line: 1567, baseType: !2124, size: 64, align: 64, offset: 9536)
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 64, align: 64)
!2125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2126, size: 64, align: 64)
!2126 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVChapter", file: !919, line: 1299, baseType: !2127)
!2127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVChapter", file: !919, line: 1294, size: 320, align: 64, elements: !2128)
!2128 = !{!2129, !2130, !2131, !2132, !2133}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2127, file: !919, line: 1295, baseType: !981, size: 32, align: 32)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !2127, file: !919, line: 1296, baseType: !1077, size: 64, align: 32, offset: 32)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2127, file: !919, line: 1297, baseType: !976, size: 64, align: 64, offset: 128)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2127, file: !919, line: 1297, baseType: !976, size: 64, align: 64, offset: 192)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !2127, file: !919, line: 1298, baseType: !1479, size: 64, align: 64, offset: 256)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1136, file: !919, line: 1577, baseType: !1479, size: 64, align: 64, offset: 9600)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_realtime", scope: !1136, file: !919, line: 1590, baseType: !976, size: 64, align: 64, offset: 9664)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "fps_probe_size", scope: !1136, file: !919, line: 1597, baseType: !981, size: 32, align: 32, offset: 9728)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "error_recognition", scope: !1136, file: !919, line: 1604, baseType: !981, size: 32, align: 32, offset: 9760)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "interrupt_callback", scope: !1136, file: !919, line: 1615, baseType: !2139, size: 128, align: 64, offset: 9792)
!2139 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVIOInterruptCB", file: !537, line: 61, baseType: !2140)
!2140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVIOInterruptCB", file: !537, line: 58, size: 128, align: 64, elements: !2141)
!2141 = !{!2142, !2143}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !2140, file: !537, line: 59, baseType: !1298, size: 64, align: 64)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !2140, file: !537, line: 60, baseType: !980, size: 64, align: 64, offset: 64)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1136, file: !919, line: 1620, baseType: !981, size: 32, align: 32, offset: 9920)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "max_interleave_delta", scope: !1136, file: !919, line: 1639, baseType: !976, size: 64, align: 64, offset: 9984)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1136, file: !919, line: 1645, baseType: !981, size: 32, align: 32, offset: 10048)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !1136, file: !919, line: 1652, baseType: !981, size: 32, align: 32, offset: 10080)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "max_ts_probe", scope: !1136, file: !919, line: 1659, baseType: !981, size: 32, align: 32, offset: 10112)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "avoid_negative_ts", scope: !1136, file: !919, line: 1668, baseType: !981, size: 32, align: 32, offset: 10144)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "ts_id", scope: !1136, file: !919, line: 1677, baseType: !981, size: 32, align: 32, offset: 10176)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "audio_preload", scope: !1136, file: !919, line: 1685, baseType: !981, size: 32, align: 32, offset: 10208)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "max_chunk_duration", scope: !1136, file: !919, line: 1693, baseType: !981, size: 32, align: 32, offset: 10240)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "max_chunk_size", scope: !1136, file: !919, line: 1701, baseType: !981, size: 32, align: 32, offset: 10272)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "use_wallclock_as_timestamps", scope: !1136, file: !919, line: 1709, baseType: !981, size: 32, align: 32, offset: 10304)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "avio_flags", scope: !1136, file: !919, line: 1716, baseType: !981, size: 32, align: 32, offset: 10336)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "duration_estimation_method", scope: !1136, file: !919, line: 1724, baseType: !933, size: 32, align: 32, offset: 10368)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "skip_initial_bytes", scope: !1136, file: !919, line: 1731, baseType: !976, size: 64, align: 64, offset: 10432)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "correct_ts_overflow", scope: !1136, file: !919, line: 1738, baseType: !982, size: 32, align: 32, offset: 10496)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "seek2any", scope: !1136, file: !919, line: 1745, baseType: !981, size: 32, align: 32, offset: 10528)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "flush_packets", scope: !1136, file: !919, line: 1752, baseType: !981, size: 32, align: 32, offset: 10560)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "probe_score", scope: !1136, file: !919, line: 1761, baseType: !981, size: 32, align: 32, offset: 10592)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "format_probesize", scope: !1136, file: !919, line: 1768, baseType: !981, size: 32, align: 32, offset: 10624)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1136, file: !919, line: 1776, baseType: !1008, size: 64, align: 64, offset: 10688)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "format_whitelist", scope: !1136, file: !919, line: 1784, baseType: !1008, size: 64, align: 64, offset: 10752)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1136, file: !919, line: 1790, baseType: !2166, size: 64, align: 64, offset: 10816)
!2166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2167, size: 64, align: 64)
!2167 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFormatInternal", file: !919, line: 1321, baseType: !2168)
!2168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFormatInternal", file: !1046, line: 66, size: 1088, align: 64, elements: !2169)
!2169 = !{!2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "nb_interleaved_streams", scope: !2168, file: !1046, line: 71, baseType: !981, size: 32, align: 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "packet_buffer", scope: !2168, file: !1046, line: 78, baseType: !1970, size: 64, align: 64, offset: 64)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "packet_buffer_end", scope: !2168, file: !1046, line: 79, baseType: !1970, size: 64, align: 64, offset: 128)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "data_offset", scope: !2168, file: !1046, line: 82, baseType: !976, size: 64, align: 64, offset: 192)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "raw_packet_buffer", scope: !2168, file: !1046, line: 90, baseType: !1970, size: 64, align: 64, offset: 256)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "raw_packet_buffer_end", scope: !2168, file: !1046, line: 91, baseType: !1970, size: 64, align: 64, offset: 320)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "parse_queue", scope: !2168, file: !1046, line: 95, baseType: !1970, size: 64, align: 64, offset: 384)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "parse_queue_end", scope: !2168, file: !1046, line: 96, baseType: !1970, size: 64, align: 64, offset: 448)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "raw_packet_buffer_remaining_size", scope: !2168, file: !1046, line: 101, baseType: !981, size: 32, align: 32, offset: 512)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2168, file: !1046, line: 108, baseType: !976, size: 64, align: 64, offset: 576)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "offset_timebase", scope: !2168, file: !1046, line: 113, baseType: !1077, size: 64, align: 32, offset: 640)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "missing_ts_warning", scope: !2168, file: !1046, line: 116, baseType: !981, size: 32, align: 32, offset: 704)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "inject_global_side_data", scope: !2168, file: !1046, line: 119, baseType: !981, size: 32, align: 32, offset: 736)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "avoid_negative_ts_use_pts", scope: !2168, file: !1046, line: 121, baseType: !981, size: 32, align: 32, offset: 768)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "shortest_end", scope: !2168, file: !1046, line: 126, baseType: !976, size: 64, align: 64, offset: 832)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2168, file: !1046, line: 131, baseType: !981, size: 32, align: 32, offset: 896)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "streams_initialized", scope: !2168, file: !1046, line: 136, baseType: !981, size: 32, align: 32, offset: 928)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "id3v2_meta", scope: !2168, file: !1046, line: 141, baseType: !1479, size: 64, align: 64, offset: 960)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "prefer_codec_framerate", scope: !2168, file: !1046, line: 146, baseType: !981, size: 32, align: 32, offset: 1024)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "io_repositioned", scope: !1136, file: !919, line: 1798, baseType: !981, size: 32, align: 32, offset: 10880)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "video_codec", scope: !1136, file: !919, line: 1806, baseType: !2191, size: 64, align: 64, offset: 10944)
!2191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 64, align: 64)
!2192 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !4, line: 3610, baseType: !1325)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1136, file: !919, line: 1814, baseType: !2191, size: 64, align: 64, offset: 11008)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_codec", scope: !1136, file: !919, line: 1822, baseType: !2191, size: 64, align: 64, offset: 11072)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "data_codec", scope: !1136, file: !919, line: 1830, baseType: !2191, size: 64, align: 64, offset: 11136)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_header_padding", scope: !1136, file: !919, line: 1837, baseType: !981, size: 32, align: 32, offset: 11200)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1136, file: !919, line: 1843, baseType: !980, size: 64, align: 64, offset: 11264)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "control_message_cb", scope: !1136, file: !919, line: 1848, baseType: !2199, size: 64, align: 64, offset: 11328)
!2199 = !DIDerivedType(tag: DW_TAG_typedef, name: "av_format_control_message", file: !919, line: 1305, baseType: !2200)
!2200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2201, size: 64, align: 64)
!2201 = !DISubroutineType(types: !2202)
!2202 = !{!981, !1135, !981, !980, !1508}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "output_ts_offset", scope: !1136, file: !919, line: 1854, baseType: !976, size: 64, align: 64, offset: 11392)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1136, file: !919, line: 1862, baseType: !1187, size: 64, align: 64, offset: 11456)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "data_codec_id", scope: !1136, file: !919, line: 1868, baseType: !3, size: 32, align: 32, offset: 11520)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "open_cb", scope: !1136, file: !919, line: 1889, baseType: !2207, size: 64, align: 64, offset: 11584)
!2207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2208, size: 64, align: 64)
!2208 = !DISubroutineType(types: !2209)
!2209 = !{!981, !1135, !2210, !1031, !981, !2211, !2213}
!2210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 64, align: 64)
!2211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2212, size: 64, align: 64)
!2212 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2139)
!2213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64, align: 64)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_whitelist", scope: !1136, file: !919, line: 1897, baseType: !1008, size: 64, align: 64, offset: 11648)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "io_open", scope: !1136, file: !919, line: 1919, baseType: !2216, size: 64, align: 64, offset: 11712)
!2216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2217, size: 64, align: 64)
!2217 = !DISubroutineType(types: !2218)
!2218 = !{!981, !1135, !2210, !1031, !981, !2213}
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "io_close", scope: !1136, file: !919, line: 1925, baseType: !2220, size: 64, align: 64, offset: 11776)
!2220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 64, align: 64)
!2221 = !DISubroutineType(types: !2222)
!2222 = !{null, !1135, !1240}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_blacklist", scope: !1136, file: !919, line: 1932, baseType: !1008, size: 64, align: 64, offset: 11840)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "max_streams", scope: !1136, file: !919, line: 1939, baseType: !981, size: 32, align: 32, offset: 11904)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "skip_estimate_duration_from_pts", scope: !1136, file: !919, line: 1946, baseType: !981, size: 32, align: 32, offset: 11936)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "write_packet", scope: !1028, file: !919, line: 549, baseType: !1169, size: 64, align: 64, offset: 704)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "write_trailer", scope: !1028, file: !919, line: 550, baseType: !1132, size: 64, align: 64, offset: 768)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "interleave_packet", scope: !1028, file: !919, line: 554, baseType: !2229, size: 64, align: 64, offset: 832)
!2229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2230, size: 64, align: 64)
!2230 = !DISubroutineType(types: !2231)
!2231 = !{!981, !1135, !1172, !1172, !981}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "query_codec", scope: !1028, file: !919, line: 563, baseType: !2233, size: 64, align: 64, offset: 896)
!2233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2234, size: 64, align: 64)
!2234 = !DISubroutineType(types: !2235)
!2235 = !{!981, !3, !981}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "get_output_timestamp", scope: !1028, file: !919, line: 565, baseType: !2237, size: 64, align: 64, offset: 960)
!2237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2238, size: 64, align: 64)
!2238 = !DISubroutineType(types: !2239)
!2239 = !{null, !1135, !981, !1217, !1217}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "control_message", scope: !1028, file: !919, line: 570, baseType: !2200, size: 64, align: 64, offset: 1024)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "write_uncoded_frame", scope: !1028, file: !919, line: 581, baseType: !2242, size: 64, align: 64, offset: 1088)
!2242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2243, size: 64, align: 64)
!2243 = !DISubroutineType(types: !2244)
!2244 = !{!981, !1135, !981, !2245, !982}
!2245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 64, align: 64)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "get_device_list", scope: !1028, file: !919, line: 587, baseType: !1225, size: 64, align: 64, offset: 1152)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "create_device_capabilities", scope: !1028, file: !919, line: 592, baseType: !1231, size: 64, align: 64, offset: 1216)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "free_device_capabilities", scope: !1028, file: !919, line: 597, baseType: !1231, size: 64, align: 64, offset: 1280)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "data_codec", scope: !1028, file: !919, line: 598, baseType: !3, size: 32, align: 32, offset: 1344)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1028, file: !919, line: 608, baseType: !1132, size: 64, align: 64, offset: 1408)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "deinit", scope: !1028, file: !919, line: 617, baseType: !2252, size: 64, align: 64, offset: 1472)
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 64, align: 64)
!2253 = !DISubroutineType(types: !2254)
!2254 = !{null, !1135}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "check_bitstream", scope: !1028, file: !919, line: 623, baseType: !2256, size: 64, align: 64, offset: 1536)
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 64, align: 64)
!2257 = !DISubroutineType(types: !2258)
!2258 = !{!981, !1135, !2259}
!2259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2260, size: 64, align: 64)
!2260 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1173)
!2261 = distinct !DIGlobalVariable(name: "hls_class", scope: !0, file: !939, line: 2948, type: !1052, isLocal: true, isDefinition: true, variable: %struct.AVClass* @hls_class)
!2262 = distinct !DIGlobalVariable(name: "options", scope: !0, file: !939, line: 2881, type: !2263, isLocal: true, isDefinition: true, variable: <{ %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }>* @options)
!2263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2264, size: 29696, align: 64, elements: !2266)
!2264 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2265)
!2265 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOption", file: !464, line: 301, baseType: !1064)
!2266 = !{!2267}
!2267 = !DISubrange(count: 58)
!2268 = distinct !DIGlobalVariable(name: "warned_non_file", scope: !2269, file: !939, line: 1374, type: !982, isLocal: true, isDefinition: true, variable: i32* @hls_window.warned_non_file)
!2269 = distinct !DISubprogram(name: "hls_window", scope: !939, file: !939, line: 1363, type: !2270, isLocal: true, isDefinition: true, scopeLine: 1364, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!2270 = !DISubroutineType(types: !2271)
!2271 = !{!981, !2272, !981, !2274}
!2272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 64, align: 64)
!2273 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFormatContext", file: !919, line: 1947, baseType: !1136)
!2274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 64, align: 64)
!2275 = !DIDerivedType(tag: DW_TAG_typedef, name: "VariantStream", file: !939, line: 161, baseType: !2276)
!2276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VariantStream", file: !939, line: 109, size: 11456, align: 64, elements: !2277)
!2277 = !{!2278, !2279, !2280, !2281, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2318, !2320, !2321, !2322, !2323, !2324, !2325, !2326}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "var_stream_idx", scope: !2276, file: !939, line: 110, baseType: !982, size: 32, align: 32)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !2276, file: !939, line: 111, baseType: !982, size: 32, align: 32, offset: 32)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !2276, file: !939, line: 112, baseType: !976, size: 64, align: 64, offset: 64)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "oformat", scope: !2276, file: !939, line: 113, baseType: !2282, size: 64, align: 64, offset: 128)
!2282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64, align: 64)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_oformat", scope: !2276, file: !939, line: 114, baseType: !2282, size: 64, align: 64, offset: 192)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !2276, file: !939, line: 115, baseType: !1240, size: 64, align: 64, offset: 256)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "packets_written", scope: !2276, file: !939, line: 116, baseType: !981, size: 32, align: 32, offset: 320)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "init_range_length", scope: !2276, file: !939, line: 117, baseType: !981, size: 32, align: 32, offset: 352)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "avf", scope: !2276, file: !939, line: 119, baseType: !2272, size: 64, align: 64, offset: 384)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_avf", scope: !2276, file: !939, line: 120, baseType: !2272, size: 64, align: 64, offset: 448)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "has_video", scope: !2276, file: !939, line: 122, baseType: !981, size: 32, align: 32, offset: 512)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "has_subtitle", scope: !2276, file: !939, line: 123, baseType: !981, size: 32, align: 32, offset: 544)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "new_start", scope: !2276, file: !939, line: 124, baseType: !981, size: 32, align: 32, offset: 576)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "dpp", scope: !2276, file: !939, line: 125, baseType: !979, size: 64, align: 64, offset: 640)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "start_pts", scope: !2276, file: !939, line: 126, baseType: !976, size: 64, align: 64, offset: 704)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "end_pts", scope: !2276, file: !939, line: 127, baseType: !976, size: 64, align: 64, offset: 768)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !2276, file: !939, line: 128, baseType: !979, size: 64, align: 64, offset: 832)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "start_pos", scope: !2276, file: !939, line: 129, baseType: !976, size: 64, align: 64, offset: 896)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2276, file: !939, line: 130, baseType: !976, size: 64, align: 64, offset: 960)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "nb_entries", scope: !2276, file: !939, line: 131, baseType: !981, size: 32, align: 32, offset: 1024)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "discontinuity_set", scope: !2276, file: !939, line: 132, baseType: !981, size: 32, align: 32, offset: 1056)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "discontinuity", scope: !2276, file: !939, line: 133, baseType: !981, size: 32, align: 32, offset: 1088)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "reference_stream_index", scope: !2276, file: !939, line: 134, baseType: !981, size: 32, align: 32, offset: 1120)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !2276, file: !939, line: 136, baseType: !983, size: 64, align: 64, offset: 1152)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "last_segment", scope: !2276, file: !939, line: 137, baseType: !983, size: 64, align: 64, offset: 1216)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "old_segments", scope: !2276, file: !939, line: 138, baseType: !983, size: 64, align: 64, offset: 1280)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "basename", scope: !2276, file: !939, line: 140, baseType: !1008, size: 64, align: 64, offset: 1344)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_basename", scope: !2276, file: !939, line: 141, baseType: !1008, size: 64, align: 64, offset: 1408)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_m3u8_name", scope: !2276, file: !939, line: 142, baseType: !1008, size: 64, align: 64, offset: 1472)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "m3u8_name", scope: !2276, file: !939, line: 143, baseType: !1008, size: 64, align: 64, offset: 1536)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "initial_prog_date_time", scope: !2276, file: !939, line: 145, baseType: !979, size: 64, align: 64, offset: 1600)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "current_segment_final_filename_fmt", scope: !2276, file: !939, line: 146, baseType: !988, size: 8192, align: 8, offset: 1664)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "fmp4_init_filename", scope: !2276, file: !939, line: 148, baseType: !1008, size: 64, align: 64, offset: 9856)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "base_output_dirname", scope: !2276, file: !939, line: 149, baseType: !1008, size: 64, align: 64, offset: 9920)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "streams", scope: !2276, file: !939, line: 151, baseType: !1307, size: 64, align: 64, offset: 9984)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "codec_attr", scope: !2276, file: !939, line: 152, baseType: !2315, size: 1024, align: 8, offset: 10048)
!2315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !989, size: 1024, align: 8, elements: !2316)
!2316 = !{!2317}
!2317 = !DISubrange(count: 128)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "attr_status", scope: !2276, file: !939, line: 153, baseType: !2319, size: 32, align: 32, offset: 11072)
!2319 = !DIDerivedType(tag: DW_TAG_typedef, name: "CodecAttributeStatus", file: !939, line: 64, baseType: !938)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "nb_streams", scope: !2276, file: !939, line: 154, baseType: !982, size: 32, align: 32, offset: 11104)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "m3u8_created", scope: !2276, file: !939, line: 155, baseType: !981, size: 32, align: 32, offset: 11136)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "is_default", scope: !2276, file: !939, line: 156, baseType: !981, size: 32, align: 32, offset: 11168)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !2276, file: !939, line: 157, baseType: !1008, size: 64, align: 64, offset: 11200)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "agroup", scope: !2276, file: !939, line: 158, baseType: !1008, size: 64, align: 64, offset: 11264)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "ccgroup", scope: !2276, file: !939, line: 159, baseType: !1008, size: 64, align: 64, offset: 11328)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "baseurl", scope: !2276, file: !939, line: 160, baseType: !1008, size: 64, align: 64, offset: 11392)
!2327 = !{}
!2328 = !{i32 2, !"Dwarf Version", i32 4}
!2329 = !{i32 2, !"Debug Info Version", i32 3}
!2330 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!2331 = distinct !DISubprogram(name: "hls_write_header", scope: !939, file: !939, line: 2098, type: !2332, isLocal: true, isDefinition: true, scopeLine: 2099, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!2332 = !DISubroutineType(types: !2333)
!2333 = !{!981, !2272}
!2334 = !DILocalVariable(name: "s", arg: 1, scope: !2331, file: !939, line: 2098, type: !2272)
!2335 = !DIExpression()
!2336 = !DILocation(line: 2098, column: 46, scope: !2331)
!2337 = !DILocalVariable(name: "hls", scope: !2331, file: !939, line: 2100, type: !2338)
!2338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2339, size: 64, align: 64)
!2339 = !DIDerivedType(tag: DW_TAG_typedef, name: "HLSContext", file: !939, line: 235, baseType: !2340)
!2340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HLSContext", file: !939, line: 169, size: 19648, align: 64, elements: !2341)
!2341 = !{!2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !2340, file: !939, line: 170, baseType: !1051, size: 64, align: 64)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "start_sequence", scope: !2340, file: !939, line: 171, baseType: !976, size: 64, align: 64, offset: 64)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "start_sequence_source_type", scope: !2340, file: !939, line: 172, baseType: !1393, size: 32, align: 32, offset: 128)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2340, file: !939, line: 174, baseType: !1579, size: 32, align: 32, offset: 160)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "init_time", scope: !2340, file: !939, line: 175, baseType: !1579, size: 32, align: 32, offset: 192)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "max_nb_segments", scope: !2340, file: !939, line: 176, baseType: !981, size: 32, align: 32, offset: 224)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "hls_delete_threshold", scope: !2340, file: !939, line: 177, baseType: !981, size: 32, align: 32, offset: 256)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "wrap", scope: !2340, file: !939, line: 179, baseType: !981, size: 32, align: 32, offset: 288)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2340, file: !939, line: 181, baseType: !1393, size: 32, align: 32, offset: 320)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "pl_type", scope: !2340, file: !939, line: 182, baseType: !1393, size: 32, align: 32, offset: 352)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "segment_filename", scope: !2340, file: !939, line: 183, baseType: !1008, size: 64, align: 64, offset: 384)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "fmp4_init_filename", scope: !2340, file: !939, line: 184, baseType: !1008, size: 64, align: 64, offset: 448)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "segment_type", scope: !2340, file: !939, line: 185, baseType: !981, size: 32, align: 32, offset: 512)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "use_localtime", scope: !2340, file: !939, line: 187, baseType: !981, size: 32, align: 32, offset: 544)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "use_localtime_mkdir", scope: !2340, file: !939, line: 188, baseType: !981, size: 32, align: 32, offset: 576)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "allowcache", scope: !2340, file: !939, line: 189, baseType: !981, size: 32, align: 32, offset: 608)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "recording_time", scope: !2340, file: !939, line: 190, baseType: !976, size: 64, align: 64, offset: 640)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "max_seg_size", scope: !2340, file: !939, line: 191, baseType: !976, size: 64, align: 64, offset: 704)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "baseurl", scope: !2340, file: !939, line: 193, baseType: !1008, size: 64, align: 64, offset: 768)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "format_options_str", scope: !2340, file: !939, line: 194, baseType: !1008, size: 64, align: 64, offset: 832)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_format_options_str", scope: !2340, file: !939, line: 195, baseType: !1008, size: 64, align: 64, offset: 896)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_filename", scope: !2340, file: !939, line: 196, baseType: !1008, size: 64, align: 64, offset: 960)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "format_options", scope: !2340, file: !939, line: 197, baseType: !1479, size: 64, align: 64, offset: 1024)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "encrypt", scope: !2340, file: !939, line: 199, baseType: !981, size: 32, align: 32, offset: 1088)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2340, file: !939, line: 200, baseType: !1008, size: 64, align: 64, offset: 1152)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "key_url", scope: !2340, file: !939, line: 201, baseType: !1008, size: 64, align: 64, offset: 1216)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "iv", scope: !2340, file: !939, line: 202, baseType: !1008, size: 64, align: 64, offset: 1280)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "key_basename", scope: !2340, file: !939, line: 203, baseType: !1008, size: 64, align: 64, offset: 1344)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "encrypt_started", scope: !2340, file: !939, line: 204, baseType: !981, size: 32, align: 32, offset: 1408)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "key_info_file", scope: !2340, file: !939, line: 206, baseType: !1008, size: 64, align: 64, offset: 1472)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "key_file", scope: !2340, file: !939, line: 207, baseType: !999, size: 8200, align: 8, offset: 1536)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "key_uri", scope: !2340, file: !939, line: 208, baseType: !999, size: 8200, align: 8, offset: 9736)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "key_string", scope: !2340, file: !939, line: 209, baseType: !1003, size: 264, align: 8, offset: 17936)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "iv_string", scope: !2340, file: !939, line: 210, baseType: !1003, size: 264, align: 8, offset: 18200)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_format_options", scope: !2340, file: !939, line: 211, baseType: !1479, size: 64, align: 64, offset: 18496)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "method", scope: !2340, file: !939, line: 213, baseType: !1008, size: 64, align: 64, offset: 18560)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "user_agent", scope: !2340, file: !939, line: 214, baseType: !1008, size: 64, align: 64, offset: 18624)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "var_streams", scope: !2340, file: !939, line: 216, baseType: !2274, size: 64, align: 64, offset: 18688)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "nb_varstreams", scope: !2340, file: !939, line: 217, baseType: !982, size: 32, align: 32, offset: 18752)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "cc_streams", scope: !2340, file: !939, line: 218, baseType: !2382, size: 64, align: 64, offset: 18816)
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2383, size: 64, align: 64)
!2383 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClosedCaptionsStream", file: !939, line: 167, baseType: !2384)
!2384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ClosedCaptionsStream", file: !939, line: 163, size: 192, align: 64, elements: !2385)
!2385 = !{!2386, !2387, !2388}
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "ccgroup", scope: !2384, file: !939, line: 164, baseType: !1008, size: 64, align: 64)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "instreamid", scope: !2384, file: !939, line: 165, baseType: !1008, size: 64, align: 64, offset: 64)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !2384, file: !939, line: 166, baseType: !1008, size: 64, align: 64, offset: 128)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ccstreams", scope: !2340, file: !939, line: 219, baseType: !982, size: 32, align: 32, offset: 18880)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "master_m3u8_created", scope: !2340, file: !939, line: 221, baseType: !981, size: 32, align: 32, offset: 18912)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "master_m3u8_url", scope: !2340, file: !939, line: 222, baseType: !1008, size: 64, align: 64, offset: 18944)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !2340, file: !939, line: 223, baseType: !981, size: 32, align: 32, offset: 19008)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "var_stream_map", scope: !2340, file: !939, line: 224, baseType: !1008, size: 64, align: 64, offset: 19072)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "cc_stream_map", scope: !2340, file: !939, line: 225, baseType: !1008, size: 64, align: 64, offset: 19136)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "master_pl_name", scope: !2340, file: !939, line: 226, baseType: !1008, size: 64, align: 64, offset: 19200)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "master_publish_rate", scope: !2340, file: !939, line: 227, baseType: !982, size: 32, align: 32, offset: 19264)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "http_persistent", scope: !2340, file: !939, line: 228, baseType: !981, size: 32, align: 32, offset: 19296)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "m3u8_out", scope: !2340, file: !939, line: 229, baseType: !1240, size: 64, align: 64, offset: 19328)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "sub_m3u8_out", scope: !2340, file: !939, line: 230, baseType: !1240, size: 64, align: 64, offset: 19392)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2340, file: !939, line: 231, baseType: !976, size: 64, align: 64, offset: 19456)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_io_errors", scope: !2340, file: !939, line: 232, baseType: !981, size: 32, align: 32, offset: 19520)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "has_default_key", scope: !2340, file: !939, line: 233, baseType: !981, size: 32, align: 32, offset: 19552)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "has_video_m3u8", scope: !2340, file: !939, line: 234, baseType: !981, size: 32, align: 32, offset: 19584)
!2404 = !DILocation(line: 2100, column: 17, scope: !2331)
!2405 = !DILocation(line: 2100, column: 23, scope: !2331)
!2406 = !DILocation(line: 2100, column: 26, scope: !2331)
!2407 = !DILocalVariable(name: "ret", scope: !2331, file: !939, line: 2101, type: !981)
!2408 = !DILocation(line: 2101, column: 9, scope: !2331)
!2409 = !DILocalVariable(name: "i", scope: !2331, file: !939, line: 2101, type: !981)
!2410 = !DILocation(line: 2101, column: 14, scope: !2331)
!2411 = !DILocalVariable(name: "j", scope: !2331, file: !939, line: 2101, type: !981)
!2412 = !DILocation(line: 2101, column: 17, scope: !2331)
!2413 = !DILocalVariable(name: "vs", scope: !2331, file: !939, line: 2102, type: !2274)
!2414 = !DILocation(line: 2102, column: 20, scope: !2331)
!2415 = !DILocation(line: 2104, column: 12, scope: !2416)
!2416 = distinct !DILexicalBlock(scope: !2331, file: !939, line: 2104, column: 5)
!2417 = !DILocation(line: 2104, column: 10, scope: !2416)
!2418 = !DILocation(line: 2104, column: 17, scope: !2419)
!2419 = !DILexicalBlockFile(scope: !2420, file: !939, discriminator: 1)
!2420 = distinct !DILexicalBlock(scope: !2416, file: !939, line: 2104, column: 5)
!2421 = !DILocation(line: 2104, column: 21, scope: !2419)
!2422 = !DILocation(line: 2104, column: 26, scope: !2419)
!2423 = !DILocation(line: 2104, column: 19, scope: !2419)
!2424 = !DILocation(line: 2104, column: 5, scope: !2419)
!2425 = !DILocation(line: 2105, column: 32, scope: !2426)
!2426 = distinct !DILexicalBlock(scope: !2420, file: !939, line: 2104, column: 46)
!2427 = !DILocation(line: 2105, column: 15, scope: !2426)
!2428 = !DILocation(line: 2105, column: 20, scope: !2426)
!2429 = !DILocation(line: 2105, column: 12, scope: !2426)
!2430 = !DILocation(line: 2107, column: 37, scope: !2426)
!2431 = !DILocation(line: 2107, column: 41, scope: !2426)
!2432 = !DILocation(line: 2107, column: 15, scope: !2426)
!2433 = !DILocation(line: 2107, column: 13, scope: !2426)
!2434 = !DILocation(line: 2108, column: 13, scope: !2435)
!2435 = distinct !DILexicalBlock(scope: !2426, file: !939, line: 2108, column: 13)
!2436 = !DILocation(line: 2108, column: 17, scope: !2435)
!2437 = !DILocation(line: 2108, column: 13, scope: !2426)
!2438 = !DILocation(line: 2109, column: 20, scope: !2435)
!2439 = !DILocation(line: 2109, column: 13, scope: !2435)
!2440 = !DILocation(line: 2111, column: 16, scope: !2441)
!2441 = distinct !DILexicalBlock(scope: !2426, file: !939, line: 2111, column: 9)
!2442 = !DILocation(line: 2111, column: 14, scope: !2441)
!2443 = !DILocation(line: 2111, column: 21, scope: !2444)
!2444 = !DILexicalBlockFile(scope: !2445, file: !939, discriminator: 1)
!2445 = distinct !DILexicalBlock(scope: !2441, file: !939, line: 2111, column: 9)
!2446 = !DILocation(line: 2111, column: 25, scope: !2444)
!2447 = !DILocation(line: 2111, column: 29, scope: !2444)
!2448 = !DILocation(line: 2111, column: 23, scope: !2444)
!2449 = !DILocation(line: 2111, column: 9, scope: !2444)
!2450 = !DILocalVariable(name: "inner_st", scope: !2451, file: !939, line: 2112, type: !1308)
!2451 = distinct !DILexicalBlock(scope: !2445, file: !939, line: 2111, column: 46)
!2452 = !DILocation(line: 2112, column: 23, scope: !2451)
!2453 = !DILocalVariable(name: "outer_st", scope: !2451, file: !939, line: 2113, type: !1308)
!2454 = !DILocation(line: 2113, column: 23, scope: !2451)
!2455 = !DILocation(line: 2113, column: 46, scope: !2451)
!2456 = !DILocation(line: 2113, column: 34, scope: !2451)
!2457 = !DILocation(line: 2113, column: 38, scope: !2451)
!2458 = !DILocation(line: 2115, column: 17, scope: !2459)
!2459 = distinct !DILexicalBlock(scope: !2451, file: !939, line: 2115, column: 17)
!2460 = !DILocation(line: 2115, column: 22, scope: !2459)
!2461 = !DILocation(line: 2115, column: 35, scope: !2459)
!2462 = !DILocation(line: 2115, column: 17, scope: !2451)
!2463 = !DILocation(line: 2116, column: 22, scope: !2464)
!2464 = distinct !DILexicalBlock(scope: !2465, file: !939, line: 2116, column: 21)
!2465 = distinct !DILexicalBlock(scope: !2459, file: !939, line: 2115, column: 40)
!2466 = !DILocation(line: 2116, column: 32, scope: !2464)
!2467 = !DILocation(line: 2116, column: 42, scope: !2464)
!2468 = !DILocation(line: 2116, column: 53, scope: !2464)
!2469 = !DILocation(line: 2116, column: 76, scope: !2464)
!2470 = !DILocation(line: 2117, column: 22, scope: !2464)
!2471 = !DILocation(line: 2117, column: 32, scope: !2464)
!2472 = !DILocation(line: 2117, column: 42, scope: !2464)
!2473 = !DILocation(line: 2117, column: 53, scope: !2464)
!2474 = !DILocation(line: 2117, column: 58, scope: !2464)
!2475 = !DILocation(line: 2117, column: 51, scope: !2464)
!2476 = !DILocation(line: 2116, column: 21, scope: !2477)
!2477 = !DILexicalBlockFile(scope: !2465, file: !939, discriminator: 1)
!2478 = !DILocation(line: 2118, column: 28, scope: !2479)
!2479 = distinct !DILexicalBlock(scope: !2464, file: !939, line: 2117, column: 73)
!2480 = !DILocation(line: 2120, column: 28, scope: !2479)
!2481 = !DILocation(line: 2120, column: 38, scope: !2479)
!2482 = !DILocation(line: 2120, column: 48, scope: !2479)
!2483 = !DILocation(line: 2120, column: 58, scope: !2479)
!2484 = !DILocation(line: 2120, column: 63, scope: !2479)
!2485 = !DILocation(line: 2118, column: 21, scope: !2479)
!2486 = !DILocation(line: 2121, column: 17, scope: !2479)
!2487 = !DILocation(line: 2122, column: 13, scope: !2465)
!2488 = !DILocation(line: 2124, column: 17, scope: !2489)
!2489 = distinct !DILexicalBlock(scope: !2451, file: !939, line: 2124, column: 17)
!2490 = !DILocation(line: 2124, column: 27, scope: !2489)
!2491 = !DILocation(line: 2124, column: 37, scope: !2489)
!2492 = !DILocation(line: 2124, column: 48, scope: !2489)
!2493 = !DILocation(line: 2124, column: 17, scope: !2451)
!2494 = !DILocation(line: 2125, column: 45, scope: !2489)
!2495 = !DILocation(line: 2125, column: 28, scope: !2489)
!2496 = !DILocation(line: 2125, column: 32, scope: !2489)
!2497 = !DILocation(line: 2125, column: 37, scope: !2489)
!2498 = !DILocation(line: 2125, column: 26, scope: !2489)
!2499 = !DILocation(line: 2125, column: 17, scope: !2489)
!2500 = !DILocation(line: 2126, column: 22, scope: !2501)
!2501 = distinct !DILexicalBlock(scope: !2489, file: !939, line: 2126, column: 22)
!2502 = !DILocation(line: 2126, column: 26, scope: !2501)
!2503 = !DILocation(line: 2126, column: 22, scope: !2489)
!2504 = !DILocation(line: 2127, column: 28, scope: !2501)
!2505 = !DILocation(line: 2127, column: 32, scope: !2501)
!2506 = !DILocation(line: 2127, column: 41, scope: !2501)
!2507 = !DILocation(line: 2127, column: 26, scope: !2501)
!2508 = !DILocation(line: 2127, column: 17, scope: !2501)
!2509 = !DILocation(line: 2130, column: 26, scope: !2510)
!2510 = distinct !DILexicalBlock(scope: !2501, file: !939, line: 2128, column: 18)
!2511 = !DILocation(line: 2131, column: 17, scope: !2510)
!2512 = !DILocation(line: 2133, column: 33, scope: !2451)
!2513 = !DILocation(line: 2133, column: 43, scope: !2451)
!2514 = !DILocation(line: 2133, column: 53, scope: !2451)
!2515 = !DILocation(line: 2133, column: 68, scope: !2451)
!2516 = !DILocation(line: 2133, column: 78, scope: !2451)
!2517 = !DILocation(line: 2133, column: 88, scope: !2451)
!2518 = !DILocation(line: 2133, column: 93, scope: !2451)
!2519 = !DILocation(line: 2133, column: 103, scope: !2451)
!2520 = !DILocation(line: 2133, column: 113, scope: !2451)
!2521 = !DILocation(line: 2133, column: 13, scope: !2451)
!2522 = !DILocation(line: 2134, column: 30, scope: !2451)
!2523 = !DILocation(line: 2134, column: 40, scope: !2451)
!2524 = !DILocation(line: 2134, column: 13, scope: !2451)
!2525 = !DILocation(line: 2136, column: 9, scope: !2451)
!2526 = !DILocation(line: 2111, column: 42, scope: !2527)
!2527 = !DILexicalBlockFile(scope: !2445, file: !939, discriminator: 2)
!2528 = !DILocation(line: 2111, column: 9, scope: !2527)
!2529 = distinct !{!2529, !2530}
!2530 = !DILocation(line: 2111, column: 9, scope: !2426)
!2531 = !DILocation(line: 2138, column: 13, scope: !2532)
!2532 = distinct !DILexicalBlock(scope: !2426, file: !939, line: 2138, column: 13)
!2533 = !DILocation(line: 2138, column: 17, scope: !2532)
!2534 = !DILocation(line: 2138, column: 27, scope: !2532)
!2535 = !DILocation(line: 2138, column: 30, scope: !2536)
!2536 = !DILexicalBlockFile(scope: !2532, file: !939, discriminator: 1)
!2537 = !DILocation(line: 2138, column: 34, scope: !2536)
!2538 = !DILocation(line: 2138, column: 13, scope: !2536)
!2539 = !DILocation(line: 2139, column: 20, scope: !2540)
!2540 = distinct !DILexicalBlock(scope: !2541, file: !939, line: 2139, column: 13)
!2541 = distinct !DILexicalBlock(scope: !2532, file: !939, line: 2138, column: 42)
!2542 = !DILocation(line: 2139, column: 18, scope: !2540)
!2543 = !DILocation(line: 2139, column: 25, scope: !2544)
!2544 = !DILexicalBlockFile(scope: !2545, file: !939, discriminator: 1)
!2545 = distinct !DILexicalBlock(scope: !2540, file: !939, line: 2139, column: 13)
!2546 = !DILocation(line: 2139, column: 29, scope: !2544)
!2547 = !DILocation(line: 2139, column: 34, scope: !2544)
!2548 = !DILocation(line: 2139, column: 27, scope: !2544)
!2549 = !DILocation(line: 2139, column: 13, scope: !2544)
!2550 = !DILocalVariable(name: "vs_agroup", scope: !2551, file: !939, line: 2140, type: !2274)
!2551 = distinct !DILexicalBlock(scope: !2545, file: !939, line: 2139, column: 54)
!2552 = !DILocation(line: 2140, column: 32, scope: !2551)
!2553 = !DILocation(line: 2140, column: 63, scope: !2551)
!2554 = !DILocation(line: 2140, column: 46, scope: !2551)
!2555 = !DILocation(line: 2140, column: 51, scope: !2551)
!2556 = !DILocation(line: 2141, column: 22, scope: !2557)
!2557 = distinct !DILexicalBlock(scope: !2551, file: !939, line: 2141, column: 21)
!2558 = !DILocation(line: 2141, column: 33, scope: !2557)
!2559 = !DILocation(line: 2141, column: 43, scope: !2557)
!2560 = !DILocation(line: 2141, column: 47, scope: !2561)
!2561 = !DILexicalBlockFile(scope: !2557, file: !939, discriminator: 1)
!2562 = !DILocation(line: 2141, column: 58, scope: !2561)
!2563 = !DILocation(line: 2141, column: 71, scope: !2561)
!2564 = !DILocation(line: 2142, column: 21, scope: !2557)
!2565 = !DILocation(line: 2142, column: 32, scope: !2557)
!2566 = !DILocation(line: 2142, column: 39, scope: !2557)
!2567 = !DILocation(line: 2143, column: 36, scope: !2557)
!2568 = !DILocation(line: 2143, column: 47, scope: !2557)
!2569 = !DILocation(line: 2143, column: 55, scope: !2557)
!2570 = !DILocation(line: 2143, column: 59, scope: !2557)
!2571 = !DILocation(line: 2143, column: 22, scope: !2557)
!2572 = !DILocation(line: 2141, column: 21, scope: !2573)
!2573 = !DILexicalBlockFile(scope: !2551, file: !939, discriminator: 2)
!2574 = !DILocation(line: 2144, column: 38, scope: !2575)
!2575 = distinct !DILexicalBlock(scope: !2557, file: !939, line: 2143, column: 68)
!2576 = !DILocation(line: 2144, column: 49, scope: !2575)
!2577 = !DILocation(line: 2144, column: 61, scope: !2575)
!2578 = !DILocation(line: 2144, column: 21, scope: !2575)
!2579 = !DILocation(line: 2145, column: 17, scope: !2575)
!2580 = !DILocation(line: 2146, column: 13, scope: !2551)
!2581 = !DILocation(line: 2139, column: 50, scope: !2582)
!2582 = !DILexicalBlockFile(scope: !2545, file: !939, discriminator: 2)
!2583 = !DILocation(line: 2139, column: 13, scope: !2582)
!2584 = distinct !{!2584, !2585}
!2585 = !DILocation(line: 2139, column: 13, scope: !2541)
!2586 = !DILocation(line: 2147, column: 9, scope: !2541)
!2587 = !DILocation(line: 2148, column: 5, scope: !2426)
!2588 = !DILocation(line: 2104, column: 42, scope: !2589)
!2589 = !DILexicalBlockFile(scope: !2420, file: !939, discriminator: 2)
!2590 = !DILocation(line: 2104, column: 5, scope: !2589)
!2591 = distinct !{!2591, !2592}
!2592 = !DILocation(line: 2104, column: 5, scope: !2331)
!2593 = !DILocation(line: 2150, column: 12, scope: !2331)
!2594 = !DILocation(line: 2150, column: 5, scope: !2331)
!2595 = !DILocation(line: 2151, column: 1, scope: !2331)
!2596 = distinct !DISubprogram(name: "hls_write_packet", scope: !939, file: !939, line: 2153, type: !2597, isLocal: true, isDefinition: true, scopeLine: 2154, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!2597 = !DISubroutineType(types: !2598)
!2598 = !{!981, !2272, !1172}
!2599 = !DILocalVariable(name: "s", arg: 1, scope: !2600, file: !537, line: 557, type: !1240)
!2600 = distinct !DISubprogram(name: "avio_tell", scope: !537, file: !537, line: 557, type: !2601, isLocal: true, isDefinition: true, scopeLine: 558, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!2601 = !DISubroutineType(types: !2602)
!2602 = !{!976, !1240}
!2603 = !DILocation(line: 557, column: 77, scope: !2600, inlinedAt: !2604)
!2604 = distinct !DILocation(line: 2242, column: 25, scope: !2605)
!2605 = distinct !DILexicalBlock(scope: !2606, file: !939, line: 2236, column: 100)
!2606 = distinct !DILexicalBlock(scope: !2596, file: !939, line: 2235, column: 9)
!2607 = !DILocalVariable(name: "s", arg: 1, scope: !2596, file: !939, line: 2153, type: !2272)
!2608 = !DILocation(line: 2153, column: 46, scope: !2596)
!2609 = !DILocalVariable(name: "pkt", arg: 2, scope: !2596, file: !939, line: 2153, type: !1172)
!2610 = !DILocation(line: 2153, column: 59, scope: !2596)
!2611 = !DILocalVariable(name: "hls", scope: !2596, file: !939, line: 2155, type: !2338)
!2612 = !DILocation(line: 2155, column: 17, scope: !2596)
!2613 = !DILocation(line: 2155, column: 23, scope: !2596)
!2614 = !DILocation(line: 2155, column: 26, scope: !2596)
!2615 = !DILocalVariable(name: "oc", scope: !2596, file: !939, line: 2156, type: !2272)
!2616 = !DILocation(line: 2156, column: 22, scope: !2596)
!2617 = !DILocalVariable(name: "st", scope: !2596, file: !939, line: 2157, type: !1308)
!2618 = !DILocation(line: 2157, column: 15, scope: !2596)
!2619 = !DILocation(line: 2157, column: 31, scope: !2596)
!2620 = !DILocation(line: 2157, column: 36, scope: !2596)
!2621 = !DILocation(line: 2157, column: 20, scope: !2596)
!2622 = !DILocation(line: 2157, column: 23, scope: !2596)
!2623 = !DILocalVariable(name: "end_pts", scope: !2596, file: !939, line: 2158, type: !976)
!2624 = !DILocation(line: 2158, column: 13, scope: !2596)
!2625 = !DILocalVariable(name: "is_ref_pkt", scope: !2596, file: !939, line: 2159, type: !981)
!2626 = !DILocation(line: 2159, column: 9, scope: !2596)
!2627 = !DILocalVariable(name: "ret", scope: !2596, file: !939, line: 2160, type: !981)
!2628 = !DILocation(line: 2160, column: 9, scope: !2596)
!2629 = !DILocalVariable(name: "can_split", scope: !2596, file: !939, line: 2160, type: !981)
!2630 = !DILocation(line: 2160, column: 18, scope: !2596)
!2631 = !DILocalVariable(name: "i", scope: !2596, file: !939, line: 2160, type: !981)
!2632 = !DILocation(line: 2160, column: 33, scope: !2596)
!2633 = !DILocalVariable(name: "j", scope: !2596, file: !939, line: 2160, type: !981)
!2634 = !DILocation(line: 2160, column: 36, scope: !2596)
!2635 = !DILocalVariable(name: "stream_index", scope: !2596, file: !939, line: 2161, type: !981)
!2636 = !DILocation(line: 2161, column: 9, scope: !2596)
!2637 = !DILocalVariable(name: "range_length", scope: !2596, file: !939, line: 2162, type: !981)
!2638 = !DILocation(line: 2162, column: 9, scope: !2596)
!2639 = !DILocalVariable(name: "proto", scope: !2596, file: !939, line: 2163, type: !1031)
!2640 = !DILocation(line: 2163, column: 17, scope: !2596)
!2641 = !DILocalVariable(name: "use_temp_file", scope: !2596, file: !939, line: 2164, type: !981)
!2642 = !DILocation(line: 2164, column: 9, scope: !2596)
!2643 = !DILocalVariable(name: "buffer", scope: !2596, file: !939, line: 2165, type: !1187)
!2644 = !DILocation(line: 2165, column: 14, scope: !2596)
!2645 = !DILocalVariable(name: "vs", scope: !2596, file: !939, line: 2166, type: !2274)
!2646 = !DILocation(line: 2166, column: 20, scope: !2596)
!2647 = !DILocalVariable(name: "options", scope: !2596, file: !939, line: 2167, type: !1479)
!2648 = !DILocation(line: 2167, column: 19, scope: !2596)
!2649 = !DILocalVariable(name: "old_filename", scope: !2596, file: !939, line: 2168, type: !1008)
!2650 = !DILocation(line: 2168, column: 11, scope: !2596)
!2651 = !DILocation(line: 2170, column: 12, scope: !2652)
!2652 = distinct !DILexicalBlock(scope: !2596, file: !939, line: 2170, column: 5)
!2653 = !DILocation(line: 2170, column: 10, scope: !2652)
!2654 = !DILocation(line: 2170, column: 17, scope: !2655)
!2655 = !DILexicalBlockFile(scope: !2656, file: !939, discriminator: 1)
!2656 = distinct !DILexicalBlock(scope: !2652, file: !939, line: 2170, column: 5)
!2657 = !DILocation(line: 2170, column: 21, scope: !2655)
!2658 = !DILocation(line: 2170, column: 26, scope: !2655)
!2659 = !DILocation(line: 2170, column: 19, scope: !2655)
!2660 = !DILocation(line: 2170, column: 5, scope: !2655)
!2661 = !DILocation(line: 2171, column: 32, scope: !2662)
!2662 = distinct !DILexicalBlock(scope: !2656, file: !939, line: 2170, column: 46)
!2663 = !DILocation(line: 2171, column: 15, scope: !2662)
!2664 = !DILocation(line: 2171, column: 20, scope: !2662)
!2665 = !DILocation(line: 2171, column: 12, scope: !2662)
!2666 = !DILocation(line: 2172, column: 16, scope: !2667)
!2667 = distinct !DILexicalBlock(scope: !2662, file: !939, line: 2172, column: 9)
!2668 = !DILocation(line: 2172, column: 14, scope: !2667)
!2669 = !DILocation(line: 2172, column: 21, scope: !2670)
!2670 = !DILexicalBlockFile(scope: !2671, file: !939, discriminator: 1)
!2671 = distinct !DILexicalBlock(scope: !2667, file: !939, line: 2172, column: 9)
!2672 = !DILocation(line: 2172, column: 25, scope: !2670)
!2673 = !DILocation(line: 2172, column: 29, scope: !2670)
!2674 = !DILocation(line: 2172, column: 23, scope: !2670)
!2675 = !DILocation(line: 2172, column: 9, scope: !2670)
!2676 = !DILocation(line: 2173, column: 29, scope: !2677)
!2677 = distinct !DILexicalBlock(scope: !2678, file: !939, line: 2173, column: 17)
!2678 = distinct !DILexicalBlock(scope: !2671, file: !939, line: 2172, column: 46)
!2679 = !DILocation(line: 2173, column: 17, scope: !2677)
!2680 = !DILocation(line: 2173, column: 21, scope: !2677)
!2681 = !DILocation(line: 2173, column: 35, scope: !2677)
!2682 = !DILocation(line: 2173, column: 32, scope: !2677)
!2683 = !DILocation(line: 2173, column: 17, scope: !2678)
!2684 = !DILocation(line: 2174, column: 21, scope: !2685)
!2685 = distinct !DILexicalBlock(scope: !2686, file: !939, line: 2174, column: 21)
!2686 = distinct !DILexicalBlock(scope: !2677, file: !939, line: 2173, column: 39)
!2687 = !DILocation(line: 2174, column: 25, scope: !2685)
!2688 = !DILocation(line: 2174, column: 35, scope: !2685)
!2689 = !DILocation(line: 2174, column: 46, scope: !2685)
!2690 = !DILocation(line: 2174, column: 21, scope: !2686)
!2691 = !DILocation(line: 2175, column: 26, scope: !2692)
!2692 = distinct !DILexicalBlock(scope: !2685, file: !939, line: 2174, column: 73)
!2693 = !DILocation(line: 2175, column: 30, scope: !2692)
!2694 = !DILocation(line: 2175, column: 24, scope: !2692)
!2695 = !DILocation(line: 2176, column: 34, scope: !2692)
!2696 = !DILocation(line: 2177, column: 17, scope: !2692)
!2697 = !DILocation(line: 2178, column: 26, scope: !2698)
!2698 = distinct !DILexicalBlock(scope: !2685, file: !939, line: 2177, column: 24)
!2699 = !DILocation(line: 2178, column: 30, scope: !2698)
!2700 = !DILocation(line: 2178, column: 24, scope: !2698)
!2701 = !DILocation(line: 2179, column: 36, scope: !2698)
!2702 = !DILocation(line: 2179, column: 34, scope: !2698)
!2703 = !DILocation(line: 2181, column: 17, scope: !2686)
!2704 = !DILocation(line: 2183, column: 9, scope: !2678)
!2705 = !DILocation(line: 2172, column: 42, scope: !2706)
!2706 = !DILexicalBlockFile(scope: !2671, file: !939, discriminator: 2)
!2707 = !DILocation(line: 2172, column: 9, scope: !2706)
!2708 = distinct !{!2708, !2709}
!2709 = !DILocation(line: 2172, column: 9, scope: !2662)
!2710 = !DILocation(line: 2185, column: 13, scope: !2711)
!2711 = distinct !DILexicalBlock(scope: !2662, file: !939, line: 2185, column: 13)
!2712 = !DILocation(line: 2185, column: 13, scope: !2662)
!2713 = !DILocation(line: 2186, column: 13, scope: !2711)
!2714 = !DILocation(line: 2187, column: 5, scope: !2662)
!2715 = !DILocation(line: 2170, column: 42, scope: !2716)
!2716 = !DILexicalBlockFile(scope: !2656, file: !939, discriminator: 2)
!2717 = !DILocation(line: 2170, column: 5, scope: !2716)
!2718 = distinct !{!2718, !2719}
!2719 = !DILocation(line: 2170, column: 5, scope: !2596)
!2720 = !DILocation(line: 2189, column: 10, scope: !2721)
!2721 = distinct !DILexicalBlock(scope: !2596, file: !939, line: 2189, column: 9)
!2722 = !DILocation(line: 2189, column: 9, scope: !2596)
!2723 = !DILocation(line: 2190, column: 16, scope: !2724)
!2724 = distinct !DILexicalBlock(scope: !2721, file: !939, line: 2189, column: 14)
!2725 = !DILocation(line: 2190, column: 9, scope: !2724)
!2726 = !DILocation(line: 2191, column: 9, scope: !2724)
!2727 = !DILocation(line: 2194, column: 15, scope: !2596)
!2728 = !DILocation(line: 2194, column: 20, scope: !2596)
!2729 = !DILocation(line: 2194, column: 37, scope: !2596)
!2730 = !DILocation(line: 2194, column: 41, scope: !2596)
!2731 = !DILocation(line: 2194, column: 35, scope: !2596)
!2732 = !DILocation(line: 2194, column: 13, scope: !2596)
!2733 = !DILocation(line: 2196, column: 9, scope: !2734)
!2734 = distinct !DILexicalBlock(scope: !2596, file: !939, line: 2196, column: 9)
!2735 = !DILocation(line: 2196, column: 13, scope: !2734)
!2736 = !DILocation(line: 2196, column: 24, scope: !2734)
!2737 = !DILocation(line: 2196, column: 28, scope: !2734)
!2738 = !DILocation(line: 2196, column: 22, scope: !2734)
!2739 = !DILocation(line: 2196, column: 41, scope: !2734)
!2740 = !DILocation(line: 2196, column: 46, scope: !2734)
!2741 = !DILocation(line: 2196, column: 39, scope: !2734)
!2742 = !DILocation(line: 2196, column: 61, scope: !2734)
!2743 = !DILocation(line: 2196, column: 64, scope: !2744)
!2744 = !DILexicalBlockFile(scope: !2734, file: !939, discriminator: 1)
!2745 = !DILocation(line: 2196, column: 69, scope: !2744)
!2746 = !DILocation(line: 2196, column: 79, scope: !2744)
!2747 = !DILocation(line: 2196, column: 9, scope: !2744)
!2748 = !DILocalVariable(name: "init_list_dur", scope: !2749, file: !939, line: 2198, type: !981)
!2749 = distinct !DILexicalBlock(scope: !2734, file: !939, line: 2196, column: 84)
!2750 = !DILocation(line: 2198, column: 13, scope: !2749)
!2751 = !DILocation(line: 2198, column: 29, scope: !2749)
!2752 = !DILocation(line: 2198, column: 34, scope: !2749)
!2753 = !DILocation(line: 2198, column: 46, scope: !2749)
!2754 = !DILocation(line: 2198, column: 50, scope: !2749)
!2755 = !DILocation(line: 2198, column: 44, scope: !2749)
!2756 = !DILocation(line: 2198, column: 61, scope: !2749)
!2757 = !DILocalVariable(name: "after_init_list_dur", scope: !2749, file: !939, line: 2199, type: !981)
!2758 = !DILocation(line: 2199, column: 13, scope: !2749)
!2759 = !DILocation(line: 2199, column: 36, scope: !2749)
!2760 = !DILocation(line: 2199, column: 40, scope: !2749)
!2761 = !DILocation(line: 2199, column: 51, scope: !2749)
!2762 = !DILocation(line: 2199, column: 56, scope: !2749)
!2763 = !DILocation(line: 2199, column: 49, scope: !2749)
!2764 = !DILocation(line: 2199, column: 73, scope: !2749)
!2765 = !DILocation(line: 2199, column: 77, scope: !2749)
!2766 = !DILocation(line: 2199, column: 71, scope: !2749)
!2767 = !DILocation(line: 2199, column: 35, scope: !2749)
!2768 = !DILocation(line: 2199, column: 93, scope: !2749)
!2769 = !DILocation(line: 2199, column: 98, scope: !2749)
!2770 = !DILocation(line: 2199, column: 103, scope: !2749)
!2771 = !DILocation(line: 2199, column: 90, scope: !2749)
!2772 = !DILocation(line: 2200, column: 31, scope: !2749)
!2773 = !DILocation(line: 2200, column: 36, scope: !2749)
!2774 = !DILocation(line: 2200, column: 41, scope: !2749)
!2775 = !DILocation(line: 2200, column: 9, scope: !2749)
!2776 = !DILocation(line: 2200, column: 14, scope: !2749)
!2777 = !DILocation(line: 2200, column: 29, scope: !2749)
!2778 = !DILocation(line: 2201, column: 19, scope: !2749)
!2779 = !DILocation(line: 2201, column: 35, scope: !2749)
!2780 = !DILocation(line: 2201, column: 33, scope: !2749)
!2781 = !DILocation(line: 2201, column: 17, scope: !2749)
!2782 = !DILocation(line: 2202, column: 5, scope: !2749)
!2783 = !DILocation(line: 2204, column: 9, scope: !2784)
!2784 = distinct !DILexicalBlock(scope: !2596, file: !939, line: 2204, column: 9)
!2785 = !DILocation(line: 2204, column: 13, scope: !2784)
!2786 = !DILocation(line: 2204, column: 23, scope: !2784)
!2787 = !DILocation(line: 2204, column: 9, scope: !2596)
!2788 = !DILocation(line: 2205, column: 25, scope: !2789)
!2789 = distinct !DILexicalBlock(scope: !2784, file: !939, line: 2204, column: 59)
!2790 = !DILocation(line: 2205, column: 30, scope: !2789)
!2791 = !DILocation(line: 2205, column: 9, scope: !2789)
!2792 = !DILocation(line: 2205, column: 13, scope: !2789)
!2793 = !DILocation(line: 2205, column: 23, scope: !2789)
!2794 = !DILocation(line: 2206, column: 5, scope: !2789)
!2795 = !DILocation(line: 2208, column: 9, scope: !2796)
!2796 = distinct !DILexicalBlock(scope: !2596, file: !939, line: 2208, column: 9)
!2797 = !DILocation(line: 2208, column: 13, scope: !2796)
!2798 = !DILocation(line: 2208, column: 9, scope: !2596)
!2799 = !DILocation(line: 2209, column: 21, scope: !2800)
!2800 = distinct !DILexicalBlock(scope: !2796, file: !939, line: 2208, column: 24)
!2801 = !DILocation(line: 2209, column: 25, scope: !2800)
!2802 = !DILocation(line: 2209, column: 35, scope: !2800)
!2803 = !DILocation(line: 2209, column: 46, scope: !2800)
!2804 = !DILocation(line: 2209, column: 68, scope: !2800)
!2805 = !DILocation(line: 2210, column: 23, scope: !2800)
!2806 = !DILocation(line: 2210, column: 28, scope: !2800)
!2807 = !DILocation(line: 2210, column: 34, scope: !2800)
!2808 = !DILocation(line: 2210, column: 44, scope: !2800)
!2809 = !DILocation(line: 2210, column: 48, scope: !2810)
!2810 = !DILexicalBlockFile(scope: !2800, file: !939, discriminator: 1)
!2811 = !DILocation(line: 2210, column: 53, scope: !2810)
!2812 = !DILocation(line: 2210, column: 59, scope: !2810)
!2813 = !DILocation(line: 2210, column: 44, scope: !2810)
!2814 = !DILocation(line: 2209, column: 68, scope: !2810)
!2815 = !DILocation(line: 2209, column: 19, scope: !2810)
!2816 = !DILocation(line: 2211, column: 23, scope: !2800)
!2817 = !DILocation(line: 2211, column: 27, scope: !2800)
!2818 = !DILocation(line: 2211, column: 37, scope: !2800)
!2819 = !DILocation(line: 2211, column: 48, scope: !2800)
!2820 = !DILocation(line: 2211, column: 71, scope: !2800)
!2821 = !DILocation(line: 2211, column: 75, scope: !2810)
!2822 = !DILocation(line: 2211, column: 80, scope: !2810)
!2823 = !DILocation(line: 2211, column: 96, scope: !2810)
!2824 = !DILocation(line: 2211, column: 100, scope: !2810)
!2825 = !DILocation(line: 2211, column: 93, scope: !2810)
!2826 = !DILocation(line: 2211, column: 71, scope: !2827)
!2827 = !DILexicalBlockFile(scope: !2800, file: !939, discriminator: 2)
!2828 = !DILocation(line: 2211, column: 20, scope: !2827)
!2829 = !DILocation(line: 2212, column: 5, scope: !2800)
!2830 = !DILocation(line: 2213, column: 9, scope: !2831)
!2831 = distinct !DILexicalBlock(scope: !2596, file: !939, line: 2213, column: 9)
!2832 = !DILocation(line: 2213, column: 14, scope: !2831)
!2833 = !DILocation(line: 2213, column: 18, scope: !2831)
!2834 = !DILocation(line: 2213, column: 9, scope: !2596)
!2835 = !DILocation(line: 2214, column: 32, scope: !2831)
!2836 = !DILocation(line: 2214, column: 20, scope: !2831)
!2837 = !DILocation(line: 2214, column: 9, scope: !2831)
!2838 = !DILocation(line: 2216, column: 9, scope: !2839)
!2839 = distinct !DILexicalBlock(scope: !2596, file: !939, line: 2216, column: 9)
!2840 = !DILocation(line: 2216, column: 9, scope: !2596)
!2841 = !DILocation(line: 2217, column: 13, scope: !2842)
!2842 = distinct !DILexicalBlock(scope: !2843, file: !939, line: 2217, column: 13)
!2843 = distinct !DILexicalBlock(scope: !2839, file: !939, line: 2216, column: 21)
!2844 = !DILocation(line: 2217, column: 17, scope: !2842)
!2845 = !DILocation(line: 2217, column: 25, scope: !2842)
!2846 = !DILocation(line: 2217, column: 13, scope: !2843)
!2847 = !DILocation(line: 2218, column: 27, scope: !2842)
!2848 = !DILocation(line: 2218, column: 32, scope: !2842)
!2849 = !DILocation(line: 2218, column: 13, scope: !2842)
!2850 = !DILocation(line: 2218, column: 17, scope: !2842)
!2851 = !DILocation(line: 2218, column: 25, scope: !2842)
!2852 = !DILocation(line: 2219, column: 13, scope: !2853)
!2853 = distinct !DILexicalBlock(scope: !2843, file: !939, line: 2219, column: 13)
!2854 = !DILocation(line: 2219, column: 17, scope: !2853)
!2855 = !DILocation(line: 2219, column: 13, scope: !2843)
!2856 = !DILocation(line: 2220, column: 13, scope: !2857)
!2857 = distinct !DILexicalBlock(scope: !2853, file: !939, line: 2219, column: 28)
!2858 = !DILocation(line: 2220, column: 17, scope: !2857)
!2859 = !DILocation(line: 2220, column: 27, scope: !2857)
!2860 = !DILocation(line: 2221, column: 37, scope: !2857)
!2861 = !DILocation(line: 2221, column: 42, scope: !2857)
!2862 = !DILocation(line: 2221, column: 48, scope: !2857)
!2863 = !DILocation(line: 2221, column: 52, scope: !2857)
!2864 = !DILocation(line: 2221, column: 46, scope: !2857)
!2865 = !DILocation(line: 2221, column: 28, scope: !2857)
!2866 = !DILocation(line: 2222, column: 42, scope: !2857)
!2867 = !DILocation(line: 2222, column: 46, scope: !2857)
!2868 = !DILocation(line: 2222, column: 56, scope: !2857)
!2869 = !DILocation(line: 2222, column: 40, scope: !2857)
!2870 = !DILocation(line: 2222, column: 62, scope: !2857)
!2871 = !DILocation(line: 2222, column: 66, scope: !2857)
!2872 = !DILocation(line: 2222, column: 76, scope: !2857)
!2873 = !DILocation(line: 2222, column: 60, scope: !2857)
!2874 = !DILocation(line: 2221, column: 13, scope: !2857)
!2875 = !DILocation(line: 2221, column: 17, scope: !2857)
!2876 = !DILocation(line: 2221, column: 26, scope: !2857)
!2877 = !DILocation(line: 2223, column: 32, scope: !2857)
!2878 = !DILocation(line: 2223, column: 37, scope: !2857)
!2879 = !DILocation(line: 2223, column: 23, scope: !2857)
!2880 = !DILocation(line: 2223, column: 49, scope: !2857)
!2881 = !DILocation(line: 2223, column: 53, scope: !2857)
!2882 = !DILocation(line: 2223, column: 63, scope: !2857)
!2883 = !DILocation(line: 2223, column: 47, scope: !2857)
!2884 = !DILocation(line: 2223, column: 69, scope: !2857)
!2885 = !DILocation(line: 2223, column: 73, scope: !2857)
!2886 = !DILocation(line: 2223, column: 83, scope: !2857)
!2887 = !DILocation(line: 2223, column: 67, scope: !2857)
!2888 = !DILocation(line: 2223, column: 13, scope: !2857)
!2889 = !DILocation(line: 2223, column: 17, scope: !2857)
!2890 = !DILocation(line: 2223, column: 21, scope: !2857)
!2891 = !DILocation(line: 2224, column: 9, scope: !2857)
!2892 = !DILocation(line: 2225, column: 17, scope: !2893)
!2893 = distinct !DILexicalBlock(scope: !2894, file: !939, line: 2225, column: 17)
!2894 = distinct !DILexicalBlock(scope: !2853, file: !939, line: 2224, column: 16)
!2895 = !DILocation(line: 2225, column: 22, scope: !2893)
!2896 = !DILocation(line: 2225, column: 17, scope: !2894)
!2897 = !DILocation(line: 2226, column: 42, scope: !2898)
!2898 = distinct !DILexicalBlock(scope: !2893, file: !939, line: 2225, column: 32)
!2899 = !DILocation(line: 2226, column: 47, scope: !2898)
!2900 = !DILocation(line: 2226, column: 33, scope: !2898)
!2901 = !DILocation(line: 2226, column: 59, scope: !2898)
!2902 = !DILocation(line: 2226, column: 63, scope: !2898)
!2903 = !DILocation(line: 2226, column: 73, scope: !2898)
!2904 = !DILocation(line: 2226, column: 57, scope: !2898)
!2905 = !DILocation(line: 2226, column: 79, scope: !2898)
!2906 = !DILocation(line: 2226, column: 83, scope: !2898)
!2907 = !DILocation(line: 2226, column: 93, scope: !2898)
!2908 = !DILocation(line: 2226, column: 77, scope: !2898)
!2909 = !DILocation(line: 2226, column: 17, scope: !2898)
!2910 = !DILocation(line: 2226, column: 21, scope: !2898)
!2911 = !DILocation(line: 2226, column: 30, scope: !2898)
!2912 = !DILocation(line: 2227, column: 13, scope: !2898)
!2913 = !DILocation(line: 2228, column: 24, scope: !2914)
!2914 = distinct !DILexicalBlock(scope: !2893, file: !939, line: 2227, column: 20)
!2915 = !DILocation(line: 2228, column: 17, scope: !2914)
!2916 = !DILocation(line: 2229, column: 41, scope: !2914)
!2917 = !DILocation(line: 2229, column: 46, scope: !2914)
!2918 = !DILocation(line: 2229, column: 52, scope: !2914)
!2919 = !DILocation(line: 2229, column: 56, scope: !2914)
!2920 = !DILocation(line: 2229, column: 50, scope: !2914)
!2921 = !DILocation(line: 2229, column: 32, scope: !2914)
!2922 = !DILocation(line: 2229, column: 67, scope: !2914)
!2923 = !DILocation(line: 2229, column: 71, scope: !2914)
!2924 = !DILocation(line: 2229, column: 81, scope: !2914)
!2925 = !DILocation(line: 2229, column: 65, scope: !2914)
!2926 = !DILocation(line: 2229, column: 87, scope: !2914)
!2927 = !DILocation(line: 2229, column: 91, scope: !2914)
!2928 = !DILocation(line: 2229, column: 101, scope: !2914)
!2929 = !DILocation(line: 2229, column: 85, scope: !2914)
!2930 = !DILocation(line: 2229, column: 17, scope: !2914)
!2931 = !DILocation(line: 2229, column: 21, scope: !2914)
!2932 = !DILocation(line: 2229, column: 30, scope: !2914)
!2933 = !DILocation(line: 2233, column: 5, scope: !2843)
!2934 = !DILocation(line: 2235, column: 9, scope: !2606)
!2935 = !DILocation(line: 2235, column: 13, scope: !2606)
!2936 = !DILocation(line: 2235, column: 29, scope: !2606)
!2937 = !DILocation(line: 2235, column: 32, scope: !2938)
!2938 = !DILexicalBlockFile(scope: !2606, file: !939, discriminator: 1)
!2939 = !DILocation(line: 2235, column: 42, scope: !2938)
!2940 = !DILocation(line: 2235, column: 59, scope: !2941)
!2941 = !DILexicalBlockFile(scope: !2606, file: !939, discriminator: 2)
!2942 = !DILocation(line: 2235, column: 64, scope: !2941)
!2943 = !DILocation(line: 2235, column: 70, scope: !2941)
!2944 = !DILocation(line: 2235, column: 74, scope: !2941)
!2945 = !DILocation(line: 2235, column: 68, scope: !2941)
!2946 = !DILocation(line: 2235, column: 85, scope: !2941)
!2947 = !DILocation(line: 2235, column: 89, scope: !2941)
!2948 = !DILocation(line: 2236, column: 59, scope: !2606)
!2949 = !DILocation(line: 2236, column: 80, scope: !2606)
!2950 = !DILocation(line: 2235, column: 45, scope: !2941)
!2951 = !DILocation(line: 2236, column: 94, scope: !2606)
!2952 = !DILocation(line: 2235, column: 9, scope: !2941)
!2953 = !DILocalVariable(name: "new_start_pos", scope: !2605, file: !939, line: 2237, type: !976)
!2954 = !DILocation(line: 2237, column: 17, scope: !2605)
!2955 = !DILocalVariable(name: "byterange_mode", scope: !2605, file: !939, line: 2238, type: !981)
!2956 = !DILocation(line: 2238, column: 13, scope: !2605)
!2957 = !DILocation(line: 2238, column: 31, scope: !2605)
!2958 = !DILocation(line: 2238, column: 36, scope: !2605)
!2959 = !DILocation(line: 2238, column: 42, scope: !2605)
!2960 = !DILocation(line: 2238, column: 61, scope: !2605)
!2961 = !DILocation(line: 2238, column: 65, scope: !2962)
!2962 = !DILexicalBlockFile(scope: !2605, file: !939, discriminator: 1)
!2963 = !DILocation(line: 2238, column: 70, scope: !2962)
!2964 = !DILocation(line: 2238, column: 83, scope: !2962)
!2965 = !DILocation(line: 2238, column: 61, scope: !2962)
!2966 = !DILocation(line: 2238, column: 61, scope: !2967)
!2967 = !DILexicalBlockFile(scope: !2605, file: !939, discriminator: 2)
!2968 = !DILocation(line: 2238, column: 13, scope: !2967)
!2969 = !DILocation(line: 2240, column: 24, scope: !2605)
!2970 = !DILocation(line: 2240, column: 28, scope: !2605)
!2971 = !DILocation(line: 2240, column: 9, scope: !2605)
!2972 = !DILocation(line: 2242, column: 35, scope: !2605)
!2973 = !DILocation(line: 2242, column: 39, scope: !2605)
!2974 = !DILocation(line: 2242, column: 44, scope: !2605)
!2975 = !DILocation(line: 2242, column: 25, scope: !2605)
!2976 = !DILocation(line: 559, column: 22, scope: !2600, inlinedAt: !2604)
!2977 = !DILocation(line: 559, column: 12, scope: !2600, inlinedAt: !2604)
!2978 = !DILocation(line: 2242, column: 23, scope: !2605)
!2979 = !DILocation(line: 2243, column: 13, scope: !2980)
!2980 = distinct !DILexicalBlock(scope: !2605, file: !939, line: 2243, column: 13)
!2981 = !DILocation(line: 2243, column: 18, scope: !2980)
!2982 = !DILocation(line: 2243, column: 31, scope: !2980)
!2983 = !DILocation(line: 2243, column: 13, scope: !2605)
!2984 = !DILocation(line: 2244, column: 24, scope: !2985)
!2985 = distinct !DILexicalBlock(scope: !2980, file: !939, line: 2243, column: 53)
!2986 = !DILocation(line: 2244, column: 40, scope: !2985)
!2987 = !DILocation(line: 2244, column: 44, scope: !2985)
!2988 = !DILocation(line: 2244, column: 38, scope: !2985)
!2989 = !DILocation(line: 2244, column: 13, scope: !2985)
!2990 = !DILocation(line: 2244, column: 17, scope: !2985)
!2991 = !DILocation(line: 2244, column: 22, scope: !2985)
!2992 = !DILocation(line: 2245, column: 9, scope: !2985)
!2993 = !DILocation(line: 2246, column: 24, scope: !2994)
!2994 = distinct !DILexicalBlock(scope: !2980, file: !939, line: 2245, column: 16)
!2995 = !DILocation(line: 2246, column: 13, scope: !2994)
!2996 = !DILocation(line: 2246, column: 17, scope: !2994)
!2997 = !DILocation(line: 2246, column: 22, scope: !2994)
!2998 = !DILocation(line: 2249, column: 13, scope: !2999)
!2999 = distinct !DILexicalBlock(scope: !2605, file: !939, line: 2249, column: 13)
!3000 = !DILocation(line: 2249, column: 18, scope: !2999)
!3001 = !DILocation(line: 2249, column: 31, scope: !2999)
!3002 = !DILocation(line: 2249, column: 13, scope: !2605)
!3003 = !DILocation(line: 2250, column: 18, scope: !3004)
!3004 = distinct !DILexicalBlock(scope: !3005, file: !939, line: 2250, column: 17)
!3005 = distinct !DILexicalBlock(scope: !2999, file: !939, line: 2249, column: 53)
!3006 = !DILocation(line: 2250, column: 22, scope: !3004)
!3007 = !DILocation(line: 2250, column: 17, scope: !3005)
!3008 = !DILocation(line: 2251, column: 28, scope: !3009)
!3009 = distinct !DILexicalBlock(scope: !3004, file: !939, line: 2250, column: 41)
!3010 = !DILocation(line: 2251, column: 32, scope: !3009)
!3011 = !DILocation(line: 2251, column: 17, scope: !3009)
!3012 = !DILocation(line: 2252, column: 51, scope: !3009)
!3013 = !DILocation(line: 2252, column: 55, scope: !3009)
!3014 = !DILocation(line: 2252, column: 32, scope: !3009)
!3015 = !DILocation(line: 2252, column: 30, scope: !3009)
!3016 = !DILocation(line: 2253, column: 28, scope: !3009)
!3017 = !DILocation(line: 2253, column: 32, scope: !3009)
!3018 = !DILocation(line: 2253, column: 37, scope: !3009)
!3019 = !DILocation(line: 2253, column: 45, scope: !3009)
!3020 = !DILocation(line: 2253, column: 17, scope: !3009)
!3021 = !DILocation(line: 2254, column: 25, scope: !3009)
!3022 = !DILocation(line: 2254, column: 17, scope: !3009)
!3023 = !DILocation(line: 2255, column: 41, scope: !3009)
!3024 = !DILocation(line: 2255, column: 17, scope: !3009)
!3025 = !DILocation(line: 2255, column: 21, scope: !3009)
!3026 = !DILocation(line: 2255, column: 39, scope: !3009)
!3027 = !DILocation(line: 2256, column: 36, scope: !3009)
!3028 = !DILocation(line: 2256, column: 40, scope: !3009)
!3029 = !DILocation(line: 2256, column: 17, scope: !3009)
!3030 = !DILocation(line: 2257, column: 17, scope: !3009)
!3031 = !DILocation(line: 2257, column: 21, scope: !3009)
!3032 = !DILocation(line: 2257, column: 37, scope: !3009)
!3033 = !DILocation(line: 2258, column: 33, scope: !3009)
!3034 = !DILocation(line: 2258, column: 17, scope: !3009)
!3035 = !DILocation(line: 2258, column: 21, scope: !3009)
!3036 = !DILocation(line: 2258, column: 31, scope: !3009)
!3037 = !DILocation(line: 2259, column: 22, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !3009, file: !939, line: 2259, column: 21)
!3039 = !DILocation(line: 2259, column: 21, scope: !3009)
!3040 = !DILocation(line: 2260, column: 40, scope: !3041)
!3041 = distinct !DILexicalBlock(scope: !3038, file: !939, line: 2259, column: 38)
!3042 = !DILocation(line: 2260, column: 44, scope: !3041)
!3043 = !DILocation(line: 2260, column: 48, scope: !3041)
!3044 = !DILocation(line: 2260, column: 21, scope: !3041)
!3045 = !DILocation(line: 2261, column: 37, scope: !3041)
!3046 = !DILocation(line: 2261, column: 41, scope: !3041)
!3047 = !DILocation(line: 2261, column: 45, scope: !3041)
!3048 = !DILocation(line: 2261, column: 50, scope: !3041)
!3049 = !DILocation(line: 2261, column: 54, scope: !3041)
!3050 = !DILocation(line: 2261, column: 21, scope: !3041)
!3051 = !DILocation(line: 2262, column: 17, scope: !3041)
!3052 = !DILocation(line: 2263, column: 13, scope: !3009)
!3053 = !DILocation(line: 2264, column: 9, scope: !3005)
!3054 = !DILocation(line: 2265, column: 18, scope: !3055)
!3055 = distinct !DILexicalBlock(scope: !3056, file: !939, line: 2265, column: 17)
!3056 = distinct !DILexicalBlock(scope: !2999, file: !939, line: 2264, column: 16)
!3057 = !DILocation(line: 2265, column: 17, scope: !3056)
!3058 = !DILocation(line: 2266, column: 33, scope: !3059)
!3059 = distinct !DILexicalBlock(scope: !3055, file: !939, line: 2265, column: 34)
!3060 = !DILocation(line: 2266, column: 37, scope: !3059)
!3061 = !DILocation(line: 2266, column: 41, scope: !3059)
!3062 = !DILocation(line: 2266, column: 45, scope: !3059)
!3063 = !DILocation(line: 2266, column: 49, scope: !3059)
!3064 = !DILocation(line: 2266, column: 17, scope: !3059)
!3065 = !DILocation(line: 2267, column: 13, scope: !3059)
!3066 = !DILocation(line: 2269, column: 14, scope: !3067)
!3067 = distinct !DILexicalBlock(scope: !2605, file: !939, line: 2269, column: 13)
!3068 = !DILocation(line: 2269, column: 13, scope: !2605)
!3069 = !DILocation(line: 2270, column: 17, scope: !3070)
!3070 = distinct !DILexicalBlock(scope: !3071, file: !939, line: 2270, column: 17)
!3071 = distinct !DILexicalBlock(scope: !3067, file: !939, line: 2269, column: 30)
!3072 = !DILocation(line: 2270, column: 21, scope: !3070)
!3073 = !DILocation(line: 2270, column: 17, scope: !3071)
!3074 = !DILocation(line: 2271, column: 33, scope: !3075)
!3075 = distinct !DILexicalBlock(scope: !3070, file: !939, line: 2270, column: 30)
!3076 = !DILocation(line: 2271, column: 37, scope: !3075)
!3077 = !DILocation(line: 2271, column: 41, scope: !3075)
!3078 = !DILocation(line: 2271, column: 50, scope: !3075)
!3079 = !DILocation(line: 2271, column: 54, scope: !3075)
!3080 = !DILocation(line: 2271, column: 58, scope: !3075)
!3081 = !DILocation(line: 2271, column: 67, scope: !3075)
!3082 = !DILocation(line: 2271, column: 17, scope: !3075)
!3083 = !DILocation(line: 2272, column: 13, scope: !3075)
!3084 = !DILocation(line: 2273, column: 9, scope: !3071)
!3085 = !DILocation(line: 2275, column: 13, scope: !3086)
!3086 = distinct !DILexicalBlock(scope: !2605, file: !939, line: 2275, column: 13)
!3087 = !DILocation(line: 2275, column: 17, scope: !3086)
!3088 = !DILocation(line: 2275, column: 13, scope: !2605)
!3089 = !DILocation(line: 2276, column: 45, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !3086, file: !939, line: 2275, column: 25)
!3091 = !DILocation(line: 2276, column: 49, scope: !3090)
!3092 = !DILocation(line: 2276, column: 21, scope: !3090)
!3093 = !DILocation(line: 2276, column: 19, scope: !3090)
!3094 = !DILocation(line: 2277, column: 29, scope: !3090)
!3095 = !DILocation(line: 2277, column: 35, scope: !3090)
!3096 = !DILocation(line: 2277, column: 46, scope: !3097)
!3097 = !DILexicalBlockFile(scope: !3090, file: !939, discriminator: 1)
!3098 = !DILocation(line: 2277, column: 39, scope: !3097)
!3099 = !DILocation(line: 2277, column: 61, scope: !3097)
!3100 = !DILocation(line: 2277, column: 65, scope: !3101)
!3101 = !DILexicalBlockFile(scope: !3090, file: !939, discriminator: 2)
!3102 = !DILocation(line: 2277, column: 70, scope: !3101)
!3103 = !DILocation(line: 2277, column: 76, scope: !3101)
!3104 = !DILocation(line: 2277, column: 61, scope: !3101)
!3105 = !DILocation(line: 2277, column: 61, scope: !3106)
!3106 = !DILexicalBlockFile(scope: !3090, file: !939, discriminator: 3)
!3107 = !DILocation(line: 2277, column: 27, scope: !3106)
!3108 = !DILocation(line: 2278, column: 9, scope: !3090)
!3109 = !DILocation(line: 2281, column: 13, scope: !3110)
!3110 = distinct !DILexicalBlock(scope: !2605, file: !939, line: 2281, column: 13)
!3111 = !DILocation(line: 2281, column: 13, scope: !2605)
!3112 = !DILocation(line: 2282, column: 19, scope: !3113)
!3113 = distinct !DILexicalBlock(scope: !3114, file: !939, line: 2282, column: 17)
!3114 = distinct !DILexicalBlock(scope: !3110, file: !939, line: 2281, column: 28)
!3115 = !DILocation(line: 2282, column: 24, scope: !3113)
!3116 = !DILocation(line: 2282, column: 30, scope: !3113)
!3117 = !DILocation(line: 2282, column: 49, scope: !3113)
!3118 = !DILocation(line: 2282, column: 53, scope: !3119)
!3119 = !DILexicalBlockFile(scope: !3113, file: !939, discriminator: 1)
!3120 = !DILocation(line: 2282, column: 58, scope: !3119)
!3121 = !DILocation(line: 2282, column: 71, scope: !3119)
!3122 = !DILocation(line: 2282, column: 17, scope: !3119)
!3123 = !DILocation(line: 2283, column: 22, scope: !3124)
!3124 = distinct !DILexicalBlock(scope: !3113, file: !939, line: 2283, column: 21)
!3125 = !DILocation(line: 2283, column: 26, scope: !3124)
!3126 = !DILocation(line: 2283, column: 31, scope: !3124)
!3127 = !DILocation(line: 2283, column: 40, scope: !3124)
!3128 = !DILocation(line: 2283, column: 51, scope: !3124)
!3129 = !DILocation(line: 2283, column: 54, scope: !3130)
!3130 = !DILexicalBlockFile(scope: !3124, file: !939, discriminator: 1)
!3131 = !DILocation(line: 2283, column: 58, scope: !3130)
!3132 = !DILocation(line: 2283, column: 63, scope: !3130)
!3133 = !DILocation(line: 2283, column: 74, scope: !3130)
!3134 = !DILocation(line: 2283, column: 77, scope: !3135)
!3135 = !DILexicalBlockFile(scope: !3124, file: !939, discriminator: 2)
!3136 = !DILocation(line: 2283, column: 82, scope: !3135)
!3137 = !DILocation(line: 2283, column: 95, scope: !3135)
!3138 = !DILocation(line: 2283, column: 21, scope: !3135)
!3139 = !DILocation(line: 2284, column: 32, scope: !3124)
!3140 = !DILocation(line: 2284, column: 36, scope: !3124)
!3141 = !DILocation(line: 2284, column: 41, scope: !3124)
!3142 = !DILocation(line: 2284, column: 21, scope: !3124)
!3143 = !DILocation(line: 2283, column: 98, scope: !3144)
!3144 = !DILexicalBlockFile(scope: !3124, file: !939, discriminator: 3)
!3145 = !DILocation(line: 2285, column: 9, scope: !3114)
!3146 = !DILocation(line: 2287, column: 13, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !2605, file: !939, line: 2287, column: 13)
!3148 = !DILocation(line: 2287, column: 18, scope: !3147)
!3149 = !DILocation(line: 2287, column: 31, scope: !3147)
!3150 = !DILocation(line: 2287, column: 13, scope: !2605)
!3151 = !DILocation(line: 2288, column: 17, scope: !3152)
!3152 = distinct !DILexicalBlock(scope: !3153, file: !939, line: 2288, column: 17)
!3153 = distinct !DILexicalBlock(scope: !3147, file: !939, line: 2287, column: 53)
!3154 = !DILocation(line: 2288, column: 22, scope: !3152)
!3155 = !DILocation(line: 2288, column: 28, scope: !3152)
!3156 = !DILocation(line: 2288, column: 17, scope: !3153)
!3157 = !DILocation(line: 2289, column: 36, scope: !3158)
!3158 = distinct !DILexicalBlock(scope: !3152, file: !939, line: 2288, column: 47)
!3159 = !DILocation(line: 2289, column: 23, scope: !3158)
!3160 = !DILocation(line: 2289, column: 21, scope: !3158)
!3161 = !DILocation(line: 2290, column: 21, scope: !3162)
!3162 = distinct !DILexicalBlock(scope: !3158, file: !939, line: 2290, column: 21)
!3163 = !DILocation(line: 2290, column: 25, scope: !3162)
!3164 = !DILocation(line: 2290, column: 21, scope: !3158)
!3165 = !DILocation(line: 2291, column: 28, scope: !3166)
!3166 = distinct !DILexicalBlock(scope: !3162, file: !939, line: 2290, column: 30)
!3167 = !DILocation(line: 2291, column: 21, scope: !3166)
!3168 = !DILocation(line: 2293, column: 28, scope: !3158)
!3169 = !DILocation(line: 2293, column: 17, scope: !3158)
!3170 = !DILocation(line: 2293, column: 21, scope: !3158)
!3171 = !DILocation(line: 2293, column: 26, scope: !3158)
!3172 = !DILocation(line: 2294, column: 13, scope: !3158)
!3173 = !DILocation(line: 2295, column: 34, scope: !3174)
!3174 = distinct !DILexicalBlock(scope: !3152, file: !939, line: 2294, column: 20)
!3175 = !DILocation(line: 2295, column: 47, scope: !3174)
!3176 = !DILocation(line: 2295, column: 17, scope: !3174)
!3177 = !DILocation(line: 2296, column: 38, scope: !3174)
!3178 = !DILocation(line: 2296, column: 42, scope: !3174)
!3179 = !DILocation(line: 2296, column: 46, scope: !3174)
!3180 = !DILocation(line: 2296, column: 51, scope: !3174)
!3181 = !DILocation(line: 2296, column: 55, scope: !3174)
!3182 = !DILocation(line: 2296, column: 60, scope: !3174)
!3183 = !DILocation(line: 2296, column: 23, scope: !3174)
!3184 = !DILocation(line: 2296, column: 21, scope: !3174)
!3185 = !DILocation(line: 2297, column: 21, scope: !3186)
!3186 = distinct !DILexicalBlock(scope: !3174, file: !939, line: 2297, column: 21)
!3187 = !DILocation(line: 2297, column: 25, scope: !3186)
!3188 = !DILocation(line: 2297, column: 21, scope: !3174)
!3189 = !DILocation(line: 2298, column: 28, scope: !3190)
!3190 = distinct !DILexicalBlock(scope: !3186, file: !939, line: 2297, column: 30)
!3191 = !DILocation(line: 2298, column: 31, scope: !3190)
!3192 = !DILocation(line: 2298, column: 36, scope: !3190)
!3193 = !DILocation(line: 2299, column: 58, scope: !3190)
!3194 = !DILocation(line: 2299, column: 62, scope: !3190)
!3195 = !DILocation(line: 2299, column: 67, scope: !3190)
!3196 = !DILocation(line: 2298, column: 21, scope: !3190)
!3197 = !DILocation(line: 2300, column: 28, scope: !3190)
!3198 = !DILocation(line: 2300, column: 33, scope: !3190)
!3199 = !DILocation(line: 2300, column: 28, scope: !3200)
!3200 = !DILexicalBlockFile(scope: !3190, file: !939, discriminator: 1)
!3201 = !DILocation(line: 2300, column: 56, scope: !3202)
!3202 = !DILexicalBlockFile(scope: !3190, file: !939, discriminator: 2)
!3203 = !DILocation(line: 2300, column: 28, scope: !3202)
!3204 = !DILocation(line: 2300, column: 28, scope: !3205)
!3205 = !DILexicalBlockFile(scope: !3190, file: !939, discriminator: 3)
!3206 = !DILocation(line: 2300, column: 21, scope: !3205)
!3207 = !DILocation(line: 2302, column: 28, scope: !3174)
!3208 = !DILocation(line: 2302, column: 32, scope: !3174)
!3209 = !DILocation(line: 2302, column: 17, scope: !3174)
!3210 = !DILocation(line: 2303, column: 36, scope: !3174)
!3211 = !DILocation(line: 2303, column: 23, scope: !3174)
!3212 = !DILocation(line: 2303, column: 21, scope: !3174)
!3213 = !DILocation(line: 2304, column: 21, scope: !3214)
!3214 = distinct !DILexicalBlock(scope: !3174, file: !939, line: 2304, column: 21)
!3215 = !DILocation(line: 2304, column: 25, scope: !3214)
!3216 = !DILocation(line: 2304, column: 21, scope: !3174)
!3217 = !DILocation(line: 2305, column: 28, scope: !3218)
!3218 = distinct !DILexicalBlock(scope: !3214, file: !939, line: 2304, column: 30)
!3219 = !DILocation(line: 2305, column: 21, scope: !3218)
!3220 = !DILocation(line: 2307, column: 36, scope: !3174)
!3221 = !DILocation(line: 2307, column: 40, scope: !3174)
!3222 = !DILocation(line: 2307, column: 44, scope: !3174)
!3223 = !DILocation(line: 2307, column: 17, scope: !3174)
!3224 = !DILocation(line: 2309, column: 9, scope: !3153)
!3225 = !DILocation(line: 2311, column: 13, scope: !3226)
!3226 = distinct !DILexicalBlock(scope: !2605, file: !939, line: 2311, column: 13)
!3227 = !DILocation(line: 2311, column: 27, scope: !3226)
!3228 = !DILocation(line: 2311, column: 32, scope: !3229)
!3229 = !DILexicalBlockFile(scope: !3226, file: !939, discriminator: 1)
!3230 = !DILocation(line: 2311, column: 37, scope: !3229)
!3231 = !DILocation(line: 2311, column: 43, scope: !3229)
!3232 = !DILocation(line: 2311, column: 13, scope: !3229)
!3233 = !DILocation(line: 2312, column: 34, scope: !3234)
!3234 = distinct !DILexicalBlock(scope: !3226, file: !939, line: 2311, column: 63)
!3235 = !DILocation(line: 2312, column: 37, scope: !3234)
!3236 = !DILocation(line: 2312, column: 13, scope: !3234)
!3237 = !DILocation(line: 2313, column: 9, scope: !3234)
!3238 = !DILocation(line: 2315, column: 34, scope: !2605)
!3239 = !DILocation(line: 2315, column: 38, scope: !2605)
!3240 = !DILocation(line: 2315, column: 43, scope: !2605)
!3241 = !DILocation(line: 2315, column: 24, scope: !2605)
!3242 = !DILocation(line: 2315, column: 22, scope: !2605)
!3243 = !DILocation(line: 2316, column: 14, scope: !3244)
!3244 = distinct !DILexicalBlock(scope: !2605, file: !939, line: 2316, column: 13)
!3245 = !DILocation(line: 2316, column: 13, scope: !2605)
!3246 = !DILocation(line: 2317, column: 13, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !3244, file: !939, line: 2316, column: 28)
!3248 = !DILocation(line: 2320, column: 13, scope: !3249)
!3249 = distinct !DILexicalBlock(scope: !2605, file: !939, line: 2320, column: 13)
!3250 = !DILocation(line: 2320, column: 17, scope: !3249)
!3251 = !DILocation(line: 2320, column: 27, scope: !3249)
!3252 = !DILocation(line: 2320, column: 30, scope: !3253)
!3253 = !DILexicalBlockFile(scope: !3249, file: !939, discriminator: 1)
!3254 = !DILocation(line: 2320, column: 35, scope: !3253)
!3255 = !DILocation(line: 2320, column: 48, scope: !3253)
!3256 = !DILocation(line: 2320, column: 13, scope: !3253)
!3257 = !DILocation(line: 2321, column: 38, scope: !3258)
!3258 = distinct !DILexicalBlock(scope: !3249, file: !939, line: 2320, column: 70)
!3259 = !DILocation(line: 2321, column: 41, scope: !3258)
!3260 = !DILocation(line: 2321, column: 46, scope: !3258)
!3261 = !DILocation(line: 2321, column: 50, scope: !3258)
!3262 = !DILocation(line: 2321, column: 54, scope: !3258)
!3263 = !DILocation(line: 2321, column: 64, scope: !3258)
!3264 = !DILocation(line: 2321, column: 68, scope: !3258)
!3265 = !DILocation(line: 2321, column: 79, scope: !3258)
!3266 = !DILocation(line: 2321, column: 83, scope: !3258)
!3267 = !DILocation(line: 2321, column: 19, scope: !3258)
!3268 = !DILocation(line: 2321, column: 17, scope: !3258)
!3269 = !DILocation(line: 2322, column: 27, scope: !3258)
!3270 = !DILocation(line: 2322, column: 32, scope: !3258)
!3271 = !DILocation(line: 2322, column: 13, scope: !3258)
!3272 = !DILocation(line: 2322, column: 17, scope: !3258)
!3273 = !DILocation(line: 2322, column: 25, scope: !3258)
!3274 = !DILocation(line: 2323, column: 13, scope: !3258)
!3275 = !DILocation(line: 2323, column: 17, scope: !3258)
!3276 = !DILocation(line: 2323, column: 26, scope: !3258)
!3277 = !DILocation(line: 2324, column: 17, scope: !3278)
!3278 = distinct !DILexicalBlock(scope: !3258, file: !939, line: 2324, column: 17)
!3279 = !DILocation(line: 2324, column: 21, scope: !3278)
!3280 = !DILocation(line: 2324, column: 17, scope: !3258)
!3281 = !DILocation(line: 2325, column: 25, scope: !3282)
!3282 = distinct !DILexicalBlock(scope: !3278, file: !939, line: 2324, column: 26)
!3283 = !DILocation(line: 2325, column: 17, scope: !3282)
!3284 = !DILocation(line: 2326, column: 24, scope: !3282)
!3285 = !DILocation(line: 2326, column: 17, scope: !3282)
!3286 = !DILocation(line: 2328, column: 9, scope: !3258)
!3287 = !DILocation(line: 2330, column: 13, scope: !3288)
!3288 = distinct !DILexicalBlock(scope: !2605, file: !939, line: 2330, column: 13)
!3289 = !DILocation(line: 2330, column: 18, scope: !3288)
!3290 = !DILocation(line: 2330, column: 31, scope: !3288)
!3291 = !DILocation(line: 2330, column: 13, scope: !2605)
!3292 = !DILocation(line: 2331, column: 29, scope: !3293)
!3293 = distinct !DILexicalBlock(scope: !3288, file: !939, line: 2330, column: 53)
!3294 = !DILocation(line: 2331, column: 13, scope: !3293)
!3295 = !DILocation(line: 2331, column: 17, scope: !3293)
!3296 = !DILocation(line: 2331, column: 27, scope: !3293)
!3297 = !DILocation(line: 2332, column: 9, scope: !3293)
!3298 = !DILocation(line: 2333, column: 30, scope: !3299)
!3299 = distinct !DILexicalBlock(scope: !3288, file: !939, line: 2332, column: 16)
!3300 = !DILocation(line: 2333, column: 34, scope: !3299)
!3301 = !DILocation(line: 2333, column: 13, scope: !3299)
!3302 = !DILocation(line: 2333, column: 17, scope: !3299)
!3303 = !DILocation(line: 2333, column: 27, scope: !3299)
!3304 = !DILocation(line: 2336, column: 13, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !2605, file: !939, line: 2336, column: 13)
!3306 = !DILocation(line: 2336, column: 18, scope: !3305)
!3307 = !DILocation(line: 2336, column: 24, scope: !3305)
!3308 = !DILocation(line: 2336, column: 13, scope: !2605)
!3309 = !DILocation(line: 2337, column: 13, scope: !3310)
!3310 = distinct !DILexicalBlock(scope: !3305, file: !939, line: 2336, column: 43)
!3311 = !DILocation(line: 2337, column: 17, scope: !3310)
!3312 = !DILocation(line: 2337, column: 23, scope: !3310)
!3313 = !DILocation(line: 2338, column: 9, scope: !3310)
!3314 = !DILocation(line: 2338, column: 20, scope: !3315)
!3315 = !DILexicalBlockFile(scope: !3316, file: !939, discriminator: 1)
!3316 = distinct !DILexicalBlock(scope: !3305, file: !939, line: 2338, column: 20)
!3317 = !DILocation(line: 2338, column: 25, scope: !3315)
!3318 = !DILocation(line: 2338, column: 38, scope: !3315)
!3319 = !DILocation(line: 2339, column: 17, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !3321, file: !939, line: 2339, column: 17)
!3321 = distinct !DILexicalBlock(scope: !3316, file: !939, line: 2338, column: 43)
!3322 = !DILocation(line: 2339, column: 21, scope: !3320)
!3323 = !DILocation(line: 2339, column: 34, scope: !3320)
!3324 = !DILocation(line: 2339, column: 39, scope: !3320)
!3325 = !DILocation(line: 2339, column: 31, scope: !3320)
!3326 = !DILocation(line: 2339, column: 17, scope: !3321)
!3327 = !DILocation(line: 2340, column: 17, scope: !3328)
!3328 = distinct !DILexicalBlock(scope: !3320, file: !939, line: 2339, column: 53)
!3329 = !DILocation(line: 2340, column: 21, scope: !3328)
!3330 = !DILocation(line: 2340, column: 29, scope: !3328)
!3331 = !DILocation(line: 2341, column: 38, scope: !3328)
!3332 = !DILocation(line: 2341, column: 43, scope: !3328)
!3333 = !DILocation(line: 2341, column: 47, scope: !3328)
!3334 = !DILocation(line: 2341, column: 17, scope: !3328)
!3335 = !DILocation(line: 2342, column: 33, scope: !3328)
!3336 = !DILocation(line: 2342, column: 36, scope: !3328)
!3337 = !DILocation(line: 2342, column: 23, scope: !3328)
!3338 = !DILocation(line: 2342, column: 21, scope: !3328)
!3339 = !DILocation(line: 2343, column: 17, scope: !3328)
!3340 = !DILocation(line: 2343, column: 21, scope: !3328)
!3341 = !DILocation(line: 2343, column: 31, scope: !3328)
!3342 = !DILocation(line: 2346, column: 17, scope: !3328)
!3343 = !DILocation(line: 2346, column: 21, scope: !3328)
!3344 = !DILocation(line: 2346, column: 27, scope: !3328)
!3345 = !DILocation(line: 2347, column: 13, scope: !3328)
!3346 = !DILocation(line: 2348, column: 13, scope: !3321)
!3347 = !DILocation(line: 2348, column: 17, scope: !3321)
!3348 = !DILocation(line: 2348, column: 23, scope: !3321)
!3349 = !DILocation(line: 2349, column: 9, scope: !3321)
!3350 = !DILocation(line: 2350, column: 34, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3316, file: !939, line: 2349, column: 16)
!3352 = !DILocation(line: 2350, column: 39, scope: !3351)
!3353 = !DILocation(line: 2350, column: 43, scope: !3351)
!3354 = !DILocation(line: 2350, column: 13, scope: !3351)
!3355 = !DILocation(line: 2351, column: 29, scope: !3351)
!3356 = !DILocation(line: 2351, column: 32, scope: !3351)
!3357 = !DILocation(line: 2351, column: 19, scope: !3351)
!3358 = !DILocation(line: 2351, column: 17, scope: !3351)
!3359 = !DILocation(line: 2353, column: 17, scope: !2605)
!3360 = !DILocation(line: 2353, column: 9, scope: !2605)
!3361 = !DILocation(line: 2355, column: 13, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !2605, file: !939, line: 2355, column: 13)
!3363 = !DILocation(line: 2355, column: 17, scope: !3362)
!3364 = !DILocation(line: 2355, column: 13, scope: !2605)
!3365 = !DILocation(line: 2356, column: 20, scope: !3366)
!3366 = distinct !DILexicalBlock(scope: !3362, file: !939, line: 2355, column: 22)
!3367 = !DILocation(line: 2356, column: 13, scope: !3366)
!3368 = !DILocation(line: 2360, column: 13, scope: !3369)
!3369 = distinct !DILexicalBlock(scope: !2605, file: !939, line: 2360, column: 13)
!3370 = !DILocation(line: 2360, column: 18, scope: !3369)
!3371 = !DILocation(line: 2360, column: 26, scope: !3369)
!3372 = !DILocation(line: 2360, column: 13, scope: !2605)
!3373 = !DILocation(line: 2361, column: 35, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3375, file: !939, line: 2361, column: 17)
!3375 = distinct !DILexicalBlock(scope: !3369, file: !939, line: 2360, column: 48)
!3376 = !DILocation(line: 2361, column: 41, scope: !3374)
!3377 = !DILocation(line: 2361, column: 24, scope: !3374)
!3378 = !DILocation(line: 2361, column: 22, scope: !3374)
!3379 = !DILocation(line: 2361, column: 46, scope: !3374)
!3380 = !DILocation(line: 2361, column: 17, scope: !3375)
!3381 = !DILocation(line: 2362, column: 24, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !3374, file: !939, line: 2361, column: 51)
!3383 = !DILocation(line: 2362, column: 17, scope: !3382)
!3384 = !DILocation(line: 2364, column: 9, scope: !3375)
!3385 = !DILocation(line: 2365, column: 5, scope: !2605)
!3386 = !DILocation(line: 2367, column: 5, scope: !2596)
!3387 = !DILocation(line: 2367, column: 9, scope: !2596)
!3388 = !DILocation(line: 2367, column: 24, scope: !2596)
!3389 = !DILocation(line: 2368, column: 9, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !2596, file: !939, line: 2368, column: 9)
!3391 = !DILocation(line: 2368, column: 13, scope: !3390)
!3392 = !DILocation(line: 2368, column: 9, scope: !2596)
!3393 = !DILocation(line: 2369, column: 32, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3390, file: !939, line: 2368, column: 17)
!3395 = !DILocation(line: 2369, column: 36, scope: !3394)
!3396 = !DILocation(line: 2369, column: 50, scope: !3394)
!3397 = !DILocation(line: 2369, column: 55, scope: !3394)
!3398 = !DILocation(line: 2369, column: 15, scope: !3394)
!3399 = !DILocation(line: 2369, column: 13, scope: !3394)
!3400 = !DILocation(line: 2370, column: 13, scope: !3401)
!3401 = distinct !DILexicalBlock(scope: !3394, file: !939, line: 2370, column: 13)
!3402 = !DILocation(line: 2370, column: 18, scope: !3401)
!3403 = !DILocation(line: 2370, column: 13, scope: !3394)
!3404 = !DILocation(line: 2371, column: 17, scope: !3401)
!3405 = !DILocation(line: 2371, column: 13, scope: !3401)
!3406 = !DILocation(line: 2372, column: 5, scope: !3394)
!3407 = !DILocation(line: 2374, column: 12, scope: !2596)
!3408 = !DILocation(line: 2374, column: 5, scope: !2596)
!3409 = !DILocation(line: 2375, column: 1, scope: !2596)
!3410 = distinct !DISubprogram(name: "hls_write_trailer", scope: !939, file: !939, line: 2406, type: !1133, isLocal: true, isDefinition: true, scopeLine: 2407, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!3411 = !DILocation(line: 557, column: 77, scope: !2600, inlinedAt: !3412)
!3412 = distinct !DILocation(line: 2500, column: 24, scope: !3413)
!3413 = distinct !DILexicalBlock(scope: !3414, file: !939, line: 2497, column: 21)
!3414 = distinct !DILexicalBlock(scope: !3415, file: !939, line: 2497, column: 13)
!3415 = distinct !DILexicalBlock(scope: !3416, file: !939, line: 2418, column: 46)
!3416 = distinct !DILexicalBlock(scope: !3417, file: !939, line: 2418, column: 5)
!3417 = distinct !DILexicalBlock(scope: !3410, file: !939, line: 2418, column: 5)
!3418 = !DILocation(line: 557, column: 77, scope: !2600, inlinedAt: !3419)
!3419 = distinct !DILocation(line: 2476, column: 28, scope: !3420)
!3420 = distinct !DILexicalBlock(scope: !3421, file: !939, line: 2475, column: 57)
!3421 = distinct !DILexicalBlock(scope: !3422, file: !939, line: 2475, column: 17)
!3422 = distinct !DILexicalBlock(scope: !3423, file: !939, line: 2474, column: 21)
!3423 = distinct !DILexicalBlock(scope: !3415, file: !939, line: 2474, column: 13)
!3424 = !DILocalVariable(name: "s", arg: 1, scope: !3410, file: !939, line: 2406, type: !1135)
!3425 = !DILocation(line: 2406, column: 54, scope: !3410)
!3426 = !DILocalVariable(name: "hls", scope: !3410, file: !939, line: 2408, type: !2338)
!3427 = !DILocation(line: 2408, column: 17, scope: !3410)
!3428 = !DILocation(line: 2408, column: 23, scope: !3410)
!3429 = !DILocation(line: 2408, column: 26, scope: !3410)
!3430 = !DILocalVariable(name: "oc", scope: !3410, file: !939, line: 2409, type: !2272)
!3431 = !DILocation(line: 2409, column: 22, scope: !3410)
!3432 = !DILocalVariable(name: "vtt_oc", scope: !3410, file: !939, line: 2410, type: !2272)
!3433 = !DILocation(line: 2410, column: 22, scope: !3410)
!3434 = !DILocalVariable(name: "old_filename", scope: !3410, file: !939, line: 2411, type: !1008)
!3435 = !DILocation(line: 2411, column: 11, scope: !3410)
!3436 = !DILocalVariable(name: "proto", scope: !3410, file: !939, line: 2412, type: !1031)
!3437 = !DILocation(line: 2412, column: 17, scope: !3410)
!3438 = !DILocalVariable(name: "use_temp_file", scope: !3410, file: !939, line: 2413, type: !981)
!3439 = !DILocation(line: 2413, column: 9, scope: !3410)
!3440 = !DILocalVariable(name: "i", scope: !3410, file: !939, line: 2414, type: !981)
!3441 = !DILocation(line: 2414, column: 9, scope: !3410)
!3442 = !DILocalVariable(name: "ret", scope: !3410, file: !939, line: 2415, type: !981)
!3443 = !DILocation(line: 2415, column: 9, scope: !3410)
!3444 = !DILocalVariable(name: "vs", scope: !3410, file: !939, line: 2416, type: !2274)
!3445 = !DILocation(line: 2416, column: 20, scope: !3410)
!3446 = !DILocation(line: 2418, column: 12, scope: !3417)
!3447 = !DILocation(line: 2418, column: 10, scope: !3417)
!3448 = !DILocation(line: 2418, column: 17, scope: !3449)
!3449 = !DILexicalBlockFile(scope: !3416, file: !939, discriminator: 1)
!3450 = !DILocation(line: 2418, column: 21, scope: !3449)
!3451 = !DILocation(line: 2418, column: 26, scope: !3449)
!3452 = !DILocation(line: 2418, column: 19, scope: !3449)
!3453 = !DILocation(line: 2418, column: 5, scope: !3449)
!3454 = !DILocation(line: 2419, column: 32, scope: !3415)
!3455 = !DILocation(line: 2419, column: 15, scope: !3415)
!3456 = !DILocation(line: 2419, column: 20, scope: !3415)
!3457 = !DILocation(line: 2419, column: 12, scope: !3415)
!3458 = !DILocation(line: 2421, column: 14, scope: !3415)
!3459 = !DILocation(line: 2421, column: 18, scope: !3415)
!3460 = !DILocation(line: 2421, column: 12, scope: !3415)
!3461 = !DILocation(line: 2422, column: 18, scope: !3415)
!3462 = !DILocation(line: 2422, column: 22, scope: !3415)
!3463 = !DILocation(line: 2422, column: 16, scope: !3415)
!3464 = !DILocation(line: 2423, column: 34, scope: !3415)
!3465 = !DILocation(line: 2423, column: 38, scope: !3415)
!3466 = !DILocation(line: 2423, column: 43, scope: !3415)
!3467 = !DILocation(line: 2423, column: 24, scope: !3415)
!3468 = !DILocation(line: 2423, column: 22, scope: !3415)
!3469 = !DILocation(line: 2424, column: 23, scope: !3415)
!3470 = !DILocation(line: 2426, column: 14, scope: !3471)
!3471 = distinct !DILexicalBlock(scope: !3415, file: !939, line: 2426, column: 13)
!3472 = !DILocation(line: 2426, column: 13, scope: !3415)
!3473 = !DILocation(line: 2427, column: 13, scope: !3474)
!3474 = distinct !DILexicalBlock(scope: !3471, file: !939, line: 2426, column: 28)
!3475 = !DILocation(line: 2429, column: 14, scope: !3476)
!3476 = distinct !DILexicalBlock(scope: !3415, file: !939, line: 2429, column: 14)
!3477 = !DILocation(line: 2429, column: 19, scope: !3476)
!3478 = !DILocation(line: 2429, column: 32, scope: !3476)
!3479 = !DILocation(line: 2429, column: 14, scope: !3415)
!3480 = !DILocalVariable(name: "range_length", scope: !3481, file: !939, line: 2430, type: !981)
!3481 = distinct !DILexicalBlock(scope: !3476, file: !939, line: 2429, column: 54)
!3482 = !DILocation(line: 2430, column: 17, scope: !3481)
!3483 = !DILocation(line: 2431, column: 18, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3481, file: !939, line: 2431, column: 17)
!3485 = !DILocation(line: 2431, column: 22, scope: !3484)
!3486 = !DILocation(line: 2431, column: 17, scope: !3481)
!3487 = !DILocalVariable(name: "buffer", scope: !3488, file: !939, line: 2432, type: !1187)
!3488 = distinct !DILexicalBlock(scope: !3484, file: !939, line: 2431, column: 41)
!3489 = !DILocation(line: 2432, column: 26, scope: !3488)
!3490 = !DILocalVariable(name: "range_length", scope: !3488, file: !939, line: 2433, type: !981)
!3491 = !DILocation(line: 2433, column: 21, scope: !3488)
!3492 = !DILocalVariable(name: "byterange_mode", scope: !3488, file: !939, line: 2433, type: !981)
!3493 = !DILocation(line: 2433, column: 35, scope: !3488)
!3494 = !DILocation(line: 2434, column: 32, scope: !3488)
!3495 = !DILocation(line: 2434, column: 36, scope: !3488)
!3496 = !DILocation(line: 2434, column: 17, scope: !3488)
!3497 = !DILocation(line: 2435, column: 28, scope: !3488)
!3498 = !DILocation(line: 2435, column: 32, scope: !3488)
!3499 = !DILocation(line: 2435, column: 17, scope: !3488)
!3500 = !DILocation(line: 2437, column: 51, scope: !3488)
!3501 = !DILocation(line: 2437, column: 55, scope: !3488)
!3502 = !DILocation(line: 2437, column: 32, scope: !3488)
!3503 = !DILocation(line: 2437, column: 30, scope: !3488)
!3504 = !DILocation(line: 2438, column: 28, scope: !3488)
!3505 = !DILocation(line: 2438, column: 32, scope: !3488)
!3506 = !DILocation(line: 2438, column: 37, scope: !3488)
!3507 = !DILocation(line: 2438, column: 45, scope: !3488)
!3508 = !DILocation(line: 2438, column: 17, scope: !3488)
!3509 = !DILocation(line: 2439, column: 25, scope: !3488)
!3510 = !DILocation(line: 2439, column: 17, scope: !3488)
!3511 = !DILocation(line: 2440, column: 41, scope: !3488)
!3512 = !DILocation(line: 2440, column: 17, scope: !3488)
!3513 = !DILocation(line: 2440, column: 21, scope: !3488)
!3514 = !DILocation(line: 2440, column: 39, scope: !3488)
!3515 = !DILocation(line: 2441, column: 36, scope: !3488)
!3516 = !DILocation(line: 2441, column: 40, scope: !3488)
!3517 = !DILocation(line: 2441, column: 17, scope: !3488)
!3518 = !DILocation(line: 2442, column: 17, scope: !3488)
!3519 = !DILocation(line: 2442, column: 21, scope: !3488)
!3520 = !DILocation(line: 2442, column: 37, scope: !3488)
!3521 = !DILocation(line: 2443, column: 33, scope: !3488)
!3522 = !DILocation(line: 2443, column: 17, scope: !3488)
!3523 = !DILocation(line: 2443, column: 21, scope: !3488)
!3524 = !DILocation(line: 2443, column: 31, scope: !3488)
!3525 = !DILocation(line: 2444, column: 35, scope: !3488)
!3526 = !DILocation(line: 2444, column: 40, scope: !3488)
!3527 = !DILocation(line: 2444, column: 46, scope: !3488)
!3528 = !DILocation(line: 2444, column: 65, scope: !3488)
!3529 = !DILocation(line: 2444, column: 69, scope: !3530)
!3530 = !DILexicalBlockFile(scope: !3488, file: !939, discriminator: 1)
!3531 = !DILocation(line: 2444, column: 74, scope: !3530)
!3532 = !DILocation(line: 2444, column: 87, scope: !3530)
!3533 = !DILocation(line: 2444, column: 65, scope: !3530)
!3534 = !DILocation(line: 2444, column: 65, scope: !3535)
!3535 = !DILexicalBlockFile(scope: !3488, file: !939, discriminator: 2)
!3536 = !DILocation(line: 2444, column: 32, scope: !3535)
!3537 = !DILocation(line: 2445, column: 22, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3488, file: !939, line: 2445, column: 21)
!3539 = !DILocation(line: 2445, column: 21, scope: !3488)
!3540 = !DILocation(line: 2446, column: 40, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3538, file: !939, line: 2445, column: 38)
!3542 = !DILocation(line: 2446, column: 44, scope: !3541)
!3543 = !DILocation(line: 2446, column: 48, scope: !3541)
!3544 = !DILocation(line: 2446, column: 21, scope: !3541)
!3545 = !DILocation(line: 2447, column: 37, scope: !3541)
!3546 = !DILocation(line: 2447, column: 41, scope: !3541)
!3547 = !DILocation(line: 2447, column: 45, scope: !3541)
!3548 = !DILocation(line: 2447, column: 50, scope: !3541)
!3549 = !DILocation(line: 2447, column: 54, scope: !3541)
!3550 = !DILocation(line: 2447, column: 21, scope: !3541)
!3551 = !DILocation(line: 2448, column: 17, scope: !3541)
!3552 = !DILocation(line: 2449, column: 13, scope: !3488)
!3553 = !DILocation(line: 2450, column: 19, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3481, file: !939, line: 2450, column: 17)
!3555 = !DILocation(line: 2450, column: 24, scope: !3554)
!3556 = !DILocation(line: 2450, column: 30, scope: !3554)
!3557 = !DILocation(line: 2450, column: 17, scope: !3481)
!3558 = !DILocation(line: 2451, column: 38, scope: !3559)
!3559 = distinct !DILexicalBlock(scope: !3554, file: !939, line: 2450, column: 50)
!3560 = !DILocation(line: 2451, column: 42, scope: !3559)
!3561 = !DILocation(line: 2451, column: 46, scope: !3559)
!3562 = !DILocation(line: 2451, column: 51, scope: !3559)
!3563 = !DILocation(line: 2451, column: 55, scope: !3559)
!3564 = !DILocation(line: 2451, column: 60, scope: !3559)
!3565 = !DILocation(line: 2451, column: 23, scope: !3559)
!3566 = !DILocation(line: 2451, column: 21, scope: !3559)
!3567 = !DILocation(line: 2452, column: 21, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3559, file: !939, line: 2452, column: 21)
!3569 = !DILocation(line: 2452, column: 25, scope: !3568)
!3570 = !DILocation(line: 2452, column: 21, scope: !3559)
!3571 = !DILocation(line: 2453, column: 28, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !3568, file: !939, line: 2452, column: 30)
!3573 = !DILocation(line: 2453, column: 65, scope: !3572)
!3574 = !DILocation(line: 2453, column: 69, scope: !3572)
!3575 = !DILocation(line: 2453, column: 74, scope: !3572)
!3576 = !DILocation(line: 2453, column: 21, scope: !3572)
!3577 = !DILocation(line: 2454, column: 21, scope: !3572)
!3578 = !DILocation(line: 2456, column: 28, scope: !3559)
!3579 = !DILocation(line: 2456, column: 32, scope: !3559)
!3580 = !DILocation(line: 2456, column: 17, scope: !3559)
!3581 = !DILocation(line: 2457, column: 13, scope: !3559)
!3582 = !DILocation(line: 2458, column: 32, scope: !3481)
!3583 = !DILocation(line: 2458, column: 19, scope: !3481)
!3584 = !DILocation(line: 2458, column: 17, scope: !3481)
!3585 = !DILocation(line: 2459, column: 17, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !3481, file: !939, line: 2459, column: 17)
!3587 = !DILocation(line: 2459, column: 21, scope: !3586)
!3588 = !DILocation(line: 2459, column: 17, scope: !3481)
!3589 = !DILocation(line: 2460, column: 17, scope: !3590)
!3590 = distinct !DILexicalBlock(scope: !3586, file: !939, line: 2459, column: 26)
!3591 = !DILocation(line: 2462, column: 24, scope: !3481)
!3592 = !DILocation(line: 2462, column: 13, scope: !3481)
!3593 = !DILocation(line: 2462, column: 17, scope: !3481)
!3594 = !DILocation(line: 2462, column: 22, scope: !3481)
!3595 = !DILocation(line: 2463, column: 32, scope: !3481)
!3596 = !DILocation(line: 2463, column: 36, scope: !3481)
!3597 = !DILocation(line: 2463, column: 40, scope: !3481)
!3598 = !DILocation(line: 2463, column: 13, scope: !3481)
!3599 = !DILocation(line: 2464, column: 9, scope: !3481)
!3600 = !DILocation(line: 2429, column: 35, scope: !3601)
!3601 = !DILexicalBlockFile(scope: !3476, file: !939, discriminator: 1)
!3602 = !DILocation(line: 2467, column: 26, scope: !3415)
!3603 = !DILocation(line: 2467, column: 9, scope: !3415)
!3604 = !DILocation(line: 2469, column: 13, scope: !3605)
!3605 = distinct !DILexicalBlock(scope: !3415, file: !939, line: 2469, column: 13)
!3606 = !DILocation(line: 2469, column: 17, scope: !3605)
!3607 = !DILocation(line: 2469, column: 13, scope: !3415)
!3608 = !DILocation(line: 2470, column: 45, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3605, file: !939, line: 2469, column: 25)
!3610 = !DILocation(line: 2470, column: 49, scope: !3609)
!3611 = !DILocation(line: 2470, column: 21, scope: !3609)
!3612 = !DILocation(line: 2470, column: 19, scope: !3609)
!3613 = !DILocation(line: 2471, column: 29, scope: !3609)
!3614 = !DILocation(line: 2471, column: 35, scope: !3609)
!3615 = !DILocation(line: 2471, column: 46, scope: !3616)
!3616 = !DILexicalBlockFile(scope: !3609, file: !939, discriminator: 1)
!3617 = !DILocation(line: 2471, column: 39, scope: !3616)
!3618 = !DILocation(line: 2471, column: 61, scope: !3616)
!3619 = !DILocation(line: 2471, column: 65, scope: !3620)
!3620 = !DILexicalBlockFile(scope: !3609, file: !939, discriminator: 2)
!3621 = !DILocation(line: 2471, column: 70, scope: !3620)
!3622 = !DILocation(line: 2471, column: 76, scope: !3620)
!3623 = !DILocation(line: 2471, column: 61, scope: !3620)
!3624 = !DILocation(line: 2471, column: 61, scope: !3625)
!3625 = !DILexicalBlockFile(scope: !3609, file: !939, discriminator: 3)
!3626 = !DILocation(line: 2471, column: 27, scope: !3625)
!3627 = !DILocation(line: 2472, column: 9, scope: !3609)
!3628 = !DILocation(line: 2474, column: 13, scope: !3423)
!3629 = !DILocation(line: 2474, column: 17, scope: !3423)
!3630 = !DILocation(line: 2474, column: 13, scope: !3415)
!3631 = !DILocation(line: 2475, column: 17, scope: !3421)
!3632 = !DILocation(line: 2475, column: 22, scope: !3421)
!3633 = !DILocation(line: 2475, column: 35, scope: !3421)
!3634 = !DILocation(line: 2475, column: 17, scope: !3422)
!3635 = !DILocation(line: 2476, column: 38, scope: !3420)
!3636 = !DILocation(line: 2476, column: 42, scope: !3420)
!3637 = !DILocation(line: 2476, column: 47, scope: !3420)
!3638 = !DILocation(line: 2476, column: 28, scope: !3420)
!3639 = !DILocation(line: 559, column: 22, scope: !2600, inlinedAt: !3419)
!3640 = !DILocation(line: 559, column: 12, scope: !2600, inlinedAt: !3419)
!3641 = !DILocation(line: 2476, column: 53, scope: !3420)
!3642 = !DILocation(line: 2476, column: 57, scope: !3420)
!3643 = !DILocation(line: 2476, column: 51, scope: !3420)
!3644 = !DILocation(line: 2476, column: 17, scope: !3420)
!3645 = !DILocation(line: 2476, column: 21, scope: !3420)
!3646 = !DILocation(line: 2476, column: 26, scope: !3420)
!3647 = !DILocation(line: 2477, column: 36, scope: !3420)
!3648 = !DILocation(line: 2477, column: 40, scope: !3420)
!3649 = !DILocation(line: 2477, column: 44, scope: !3420)
!3650 = !DILocation(line: 2477, column: 17, scope: !3420)
!3651 = !DILocation(line: 2478, column: 13, scope: !3420)
!3652 = !DILocation(line: 2481, column: 17, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3422, file: !939, line: 2481, column: 17)
!3654 = !DILocation(line: 2481, column: 31, scope: !3653)
!3655 = !DILocation(line: 2481, column: 36, scope: !3656)
!3656 = !DILexicalBlockFile(scope: !3653, file: !939, discriminator: 1)
!3657 = !DILocation(line: 2481, column: 41, scope: !3656)
!3658 = !DILocation(line: 2481, column: 47, scope: !3656)
!3659 = !DILocation(line: 2481, column: 17, scope: !3656)
!3660 = !DILocation(line: 2482, column: 38, scope: !3661)
!3661 = distinct !DILexicalBlock(scope: !3653, file: !939, line: 2481, column: 67)
!3662 = !DILocation(line: 2482, column: 41, scope: !3661)
!3663 = !DILocation(line: 2482, column: 17, scope: !3661)
!3664 = !DILocation(line: 2483, column: 25, scope: !3661)
!3665 = !DILocation(line: 2483, column: 17, scope: !3661)
!3666 = !DILocation(line: 2484, column: 42, scope: !3661)
!3667 = !DILocation(line: 2484, column: 46, scope: !3661)
!3668 = !DILocation(line: 2484, column: 51, scope: !3661)
!3669 = !DILocation(line: 2484, column: 32, scope: !3661)
!3670 = !DILocation(line: 2484, column: 30, scope: !3661)
!3671 = !DILocation(line: 2486, column: 22, scope: !3672)
!3672 = distinct !DILexicalBlock(scope: !3661, file: !939, line: 2486, column: 21)
!3673 = !DILocation(line: 2486, column: 21, scope: !3661)
!3674 = !DILocation(line: 2487, column: 21, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3672, file: !939, line: 2486, column: 36)
!3676 = !DILocation(line: 2489, column: 13, scope: !3661)
!3677 = !DILocation(line: 2492, column: 32, scope: !3422)
!3678 = !DILocation(line: 2492, column: 35, scope: !3422)
!3679 = !DILocation(line: 2492, column: 40, scope: !3422)
!3680 = !DILocation(line: 2492, column: 44, scope: !3422)
!3681 = !DILocation(line: 2492, column: 48, scope: !3422)
!3682 = !DILocation(line: 2492, column: 59, scope: !3422)
!3683 = !DILocation(line: 2492, column: 63, scope: !3422)
!3684 = !DILocation(line: 2492, column: 57, scope: !3422)
!3685 = !DILocation(line: 2492, column: 68, scope: !3422)
!3686 = !DILocation(line: 2492, column: 72, scope: !3422)
!3687 = !DILocation(line: 2492, column: 83, scope: !3422)
!3688 = !DILocation(line: 2492, column: 87, scope: !3422)
!3689 = !DILocation(line: 2492, column: 13, scope: !3422)
!3690 = !DILocation(line: 2493, column: 9, scope: !3422)
!3691 = !DILocation(line: 2495, column: 30, scope: !3415)
!3692 = !DILocation(line: 2495, column: 35, scope: !3415)
!3693 = !DILocation(line: 2495, column: 39, scope: !3415)
!3694 = !DILocation(line: 2495, column: 9, scope: !3415)
!3695 = !DILocation(line: 2497, column: 13, scope: !3414)
!3696 = !DILocation(line: 2497, column: 13, scope: !3415)
!3697 = !DILocation(line: 2498, column: 17, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3413, file: !939, line: 2498, column: 17)
!3699 = !DILocation(line: 2498, column: 25, scope: !3698)
!3700 = !DILocation(line: 2498, column: 17, scope: !3413)
!3701 = !DILocation(line: 2499, column: 34, scope: !3698)
!3702 = !DILocation(line: 2499, column: 17, scope: !3698)
!3703 = !DILocation(line: 2500, column: 34, scope: !3413)
!3704 = !DILocation(line: 2500, column: 38, scope: !3413)
!3705 = !DILocation(line: 2500, column: 47, scope: !3413)
!3706 = !DILocation(line: 2500, column: 24, scope: !3413)
!3707 = !DILocation(line: 559, column: 22, scope: !2600, inlinedAt: !3412)
!3708 = !DILocation(line: 559, column: 12, scope: !2600, inlinedAt: !3412)
!3709 = !DILocation(line: 2500, column: 53, scope: !3413)
!3710 = !DILocation(line: 2500, column: 57, scope: !3413)
!3711 = !DILocation(line: 2500, column: 51, scope: !3413)
!3712 = !DILocation(line: 2500, column: 13, scope: !3413)
!3713 = !DILocation(line: 2500, column: 17, scope: !3413)
!3714 = !DILocation(line: 2500, column: 22, scope: !3413)
!3715 = !DILocation(line: 2501, column: 32, scope: !3413)
!3716 = !DILocation(line: 2501, column: 36, scope: !3413)
!3717 = !DILocation(line: 2501, column: 44, scope: !3413)
!3718 = !DILocation(line: 2501, column: 13, scope: !3413)
!3719 = !DILocation(line: 2502, column: 35, scope: !3413)
!3720 = !DILocation(line: 2502, column: 13, scope: !3413)
!3721 = !DILocation(line: 2503, column: 9, scope: !3413)
!3722 = !DILocation(line: 2504, column: 31, scope: !3415)
!3723 = !DILocation(line: 2504, column: 9, scope: !3415)
!3724 = !DILocation(line: 2506, column: 9, scope: !3415)
!3725 = !DILocation(line: 2506, column: 13, scope: !3415)
!3726 = !DILocation(line: 2506, column: 17, scope: !3415)
!3727 = !DILocation(line: 2507, column: 20, scope: !3415)
!3728 = !DILocation(line: 2507, column: 26, scope: !3415)
!3729 = !DILocation(line: 2507, column: 9, scope: !3415)
!3730 = !DILocation(line: 2508, column: 17, scope: !3415)
!3731 = !DILocation(line: 2508, column: 9, scope: !3415)
!3732 = !DILocation(line: 2509, column: 5, scope: !3415)
!3733 = !DILocation(line: 2418, column: 42, scope: !3734)
!3734 = !DILexicalBlockFile(scope: !3416, file: !939, discriminator: 2)
!3735 = !DILocation(line: 2418, column: 5, scope: !3734)
!3736 = distinct !{!3736, !3737}
!3737 = !DILocation(line: 2418, column: 5, scope: !3410)
!3738 = !DILocation(line: 2511, column: 30, scope: !3410)
!3739 = !DILocation(line: 2511, column: 5, scope: !3410)
!3740 = !DILocation(line: 2513, column: 12, scope: !3741)
!3741 = distinct !DILexicalBlock(scope: !3410, file: !939, line: 2513, column: 5)
!3742 = !DILocation(line: 2513, column: 10, scope: !3741)
!3743 = !DILocation(line: 2513, column: 17, scope: !3744)
!3744 = !DILexicalBlockFile(scope: !3745, file: !939, discriminator: 1)
!3745 = distinct !DILexicalBlock(scope: !3741, file: !939, line: 2513, column: 5)
!3746 = !DILocation(line: 2513, column: 21, scope: !3744)
!3747 = !DILocation(line: 2513, column: 26, scope: !3744)
!3748 = !DILocation(line: 2513, column: 19, scope: !3744)
!3749 = !DILocation(line: 2513, column: 5, scope: !3744)
!3750 = !DILocalVariable(name: "ccs", scope: !3751, file: !939, line: 2514, type: !2382)
!3751 = distinct !DILexicalBlock(scope: !3745, file: !939, line: 2513, column: 45)
!3752 = !DILocation(line: 2514, column: 31, scope: !3751)
!3753 = !DILocation(line: 2514, column: 54, scope: !3751)
!3754 = !DILocation(line: 2514, column: 38, scope: !3751)
!3755 = !DILocation(line: 2514, column: 43, scope: !3751)
!3756 = !DILocation(line: 2515, column: 19, scope: !3751)
!3757 = !DILocation(line: 2515, column: 24, scope: !3751)
!3758 = !DILocation(line: 2515, column: 18, scope: !3751)
!3759 = !DILocation(line: 2515, column: 9, scope: !3751)
!3760 = !DILocation(line: 2516, column: 19, scope: !3751)
!3761 = !DILocation(line: 2516, column: 24, scope: !3751)
!3762 = !DILocation(line: 2516, column: 18, scope: !3751)
!3763 = !DILocation(line: 2516, column: 9, scope: !3751)
!3764 = !DILocation(line: 2517, column: 19, scope: !3751)
!3765 = !DILocation(line: 2517, column: 24, scope: !3751)
!3766 = !DILocation(line: 2517, column: 18, scope: !3751)
!3767 = !DILocation(line: 2517, column: 9, scope: !3751)
!3768 = !DILocation(line: 2518, column: 5, scope: !3751)
!3769 = !DILocation(line: 2513, column: 41, scope: !3770)
!3770 = !DILexicalBlockFile(scope: !3745, file: !939, discriminator: 2)
!3771 = !DILocation(line: 2513, column: 5, scope: !3770)
!3772 = distinct !{!3772, !3773}
!3773 = !DILocation(line: 2513, column: 5, scope: !3410)
!3774 = !DILocation(line: 2520, column: 24, scope: !3410)
!3775 = !DILocation(line: 2520, column: 28, scope: !3410)
!3776 = !DILocation(line: 2520, column: 33, scope: !3410)
!3777 = !DILocation(line: 2520, column: 5, scope: !3410)
!3778 = !DILocation(line: 2521, column: 24, scope: !3410)
!3779 = !DILocation(line: 2521, column: 28, scope: !3410)
!3780 = !DILocation(line: 2521, column: 33, scope: !3410)
!3781 = !DILocation(line: 2521, column: 5, scope: !3410)
!3782 = !DILocation(line: 2522, column: 15, scope: !3410)
!3783 = !DILocation(line: 2522, column: 20, scope: !3410)
!3784 = !DILocation(line: 2522, column: 14, scope: !3410)
!3785 = !DILocation(line: 2522, column: 5, scope: !3410)
!3786 = !DILocation(line: 2523, column: 15, scope: !3410)
!3787 = !DILocation(line: 2523, column: 20, scope: !3410)
!3788 = !DILocation(line: 2523, column: 14, scope: !3410)
!3789 = !DILocation(line: 2523, column: 5, scope: !3410)
!3790 = !DILocation(line: 2524, column: 15, scope: !3410)
!3791 = !DILocation(line: 2524, column: 20, scope: !3410)
!3792 = !DILocation(line: 2524, column: 14, scope: !3410)
!3793 = !DILocation(line: 2524, column: 5, scope: !3410)
!3794 = !DILocation(line: 2525, column: 15, scope: !3410)
!3795 = !DILocation(line: 2525, column: 20, scope: !3410)
!3796 = !DILocation(line: 2525, column: 14, scope: !3410)
!3797 = !DILocation(line: 2525, column: 5, scope: !3410)
!3798 = !DILocation(line: 2526, column: 5, scope: !3410)
!3799 = !DILocation(line: 2527, column: 1, scope: !3410)
!3800 = distinct !DISubprogram(name: "hls_init", scope: !939, file: !939, line: 2530, type: !2332, isLocal: true, isDefinition: true, scopeLine: 2531, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!3801 = !DILocalVariable(name: "s", arg: 1, scope: !3800, file: !939, line: 2530, type: !2272)
!3802 = !DILocation(line: 2530, column: 38, scope: !3800)
!3803 = !DILocalVariable(name: "ret", scope: !3800, file: !939, line: 2532, type: !981)
!3804 = !DILocation(line: 2532, column: 9, scope: !3800)
!3805 = !DILocalVariable(name: "i", scope: !3800, file: !939, line: 2533, type: !981)
!3806 = !DILocation(line: 2533, column: 9, scope: !3800)
!3807 = !DILocalVariable(name: "j", scope: !3800, file: !939, line: 2534, type: !981)
!3808 = !DILocation(line: 2534, column: 9, scope: !3800)
!3809 = !DILocalVariable(name: "hls", scope: !3800, file: !939, line: 2535, type: !2338)
!3810 = !DILocation(line: 2535, column: 17, scope: !3800)
!3811 = !DILocation(line: 2535, column: 23, scope: !3800)
!3812 = !DILocation(line: 2535, column: 26, scope: !3800)
!3813 = !DILocalVariable(name: "pattern", scope: !3800, file: !939, line: 2536, type: !1031)
!3814 = !DILocation(line: 2536, column: 17, scope: !3800)
!3815 = !DILocalVariable(name: "vs", scope: !3800, file: !939, line: 2537, type: !2274)
!3816 = !DILocation(line: 2537, column: 20, scope: !3800)
!3817 = !DILocalVariable(name: "basename_size", scope: !3800, file: !939, line: 2538, type: !981)
!3818 = !DILocation(line: 2538, column: 9, scope: !3800)
!3819 = !DILocalVariable(name: "pattern_localtime_fmt", scope: !3800, file: !939, line: 2539, type: !1031)
!3820 = !DILocation(line: 2539, column: 17, scope: !3800)
!3821 = !DILocation(line: 2539, column: 75, scope: !3800)
!3822 = !DILocation(line: 2539, column: 41, scope: !3800)
!3823 = !DILocalVariable(name: "vtt_pattern", scope: !3800, file: !939, line: 2540, type: !1031)
!3824 = !DILocation(line: 2540, column: 17, scope: !3800)
!3825 = !DILocalVariable(name: "p", scope: !3800, file: !939, line: 2541, type: !1008)
!3826 = !DILocation(line: 2541, column: 11, scope: !3800)
!3827 = !DILocalVariable(name: "vtt_basename_size", scope: !3800, file: !939, line: 2542, type: !981)
!3828 = !DILocation(line: 2542, column: 9, scope: !3800)
!3829 = !DILocalVariable(name: "fmp4_init_filename_len", scope: !3800, file: !939, line: 2543, type: !981)
!3830 = !DILocation(line: 2543, column: 9, scope: !3800)
!3831 = !DILocation(line: 2543, column: 41, scope: !3800)
!3832 = !DILocation(line: 2543, column: 46, scope: !3800)
!3833 = !DILocation(line: 2543, column: 34, scope: !3800)
!3834 = !DILocation(line: 2543, column: 66, scope: !3800)
!3835 = !DILocation(line: 2545, column: 5, scope: !3800)
!3836 = !DILocation(line: 2545, column: 10, scope: !3800)
!3837 = !DILocation(line: 2545, column: 26, scope: !3800)
!3838 = !DILocation(line: 2546, column: 5, scope: !3800)
!3839 = !DILocation(line: 2546, column: 10, scope: !3800)
!3840 = !DILocation(line: 2546, column: 25, scope: !3800)
!3841 = !DILocation(line: 2547, column: 38, scope: !3800)
!3842 = !DILocation(line: 2547, column: 11, scope: !3800)
!3843 = !DILocation(line: 2547, column: 9, scope: !3800)
!3844 = !DILocation(line: 2548, column: 9, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3800, file: !939, line: 2548, column: 9)
!3846 = !DILocation(line: 2548, column: 13, scope: !3845)
!3847 = !DILocation(line: 2548, column: 9, scope: !3800)
!3848 = !DILocation(line: 2549, column: 16, scope: !3849)
!3849 = distinct !DILexicalBlock(scope: !3845, file: !939, line: 2548, column: 18)
!3850 = !DILocation(line: 2550, column: 16, scope: !3849)
!3851 = !DILocation(line: 2549, column: 9, scope: !3849)
!3852 = !DILocation(line: 2551, column: 9, scope: !3849)
!3853 = !DILocation(line: 2554, column: 9, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3800, file: !939, line: 2554, column: 9)
!3855 = !DILocation(line: 2554, column: 14, scope: !3854)
!3856 = !DILocation(line: 2554, column: 28, scope: !3854)
!3857 = !DILocation(line: 2554, column: 32, scope: !3854)
!3858 = !DILocation(line: 2554, column: 35, scope: !3859)
!3859 = !DILexicalBlockFile(scope: !3854, file: !939, discriminator: 1)
!3860 = !DILocation(line: 2554, column: 40, scope: !3859)
!3861 = !DILocation(line: 2554, column: 46, scope: !3859)
!3862 = !DILocation(line: 2554, column: 9, scope: !3859)
!3863 = !DILocation(line: 2555, column: 13, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3854, file: !939, line: 2554, column: 68)
!3865 = !DILocation(line: 2556, column: 16, scope: !3864)
!3866 = !DILocation(line: 2556, column: 9, scope: !3864)
!3867 = !DILocation(line: 2557, column: 9, scope: !3864)
!3868 = !DILocation(line: 2560, column: 25, scope: !3800)
!3869 = !DILocation(line: 2560, column: 30, scope: !3800)
!3870 = !DILocation(line: 2560, column: 45, scope: !3800)
!3871 = !DILocation(line: 2560, column: 48, scope: !3800)
!3872 = !DILocation(line: 2560, column: 11, scope: !3800)
!3873 = !DILocation(line: 2560, column: 9, scope: !3800)
!3874 = !DILocation(line: 2561, column: 9, scope: !3875)
!3875 = distinct !DILexicalBlock(scope: !3800, file: !939, line: 2561, column: 9)
!3876 = !DILocation(line: 2561, column: 13, scope: !3875)
!3877 = !DILocation(line: 2561, column: 9, scope: !3800)
!3878 = !DILocation(line: 2562, column: 9, scope: !3875)
!3879 = !DILocation(line: 2564, column: 9, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !3800, file: !939, line: 2564, column: 9)
!3881 = !DILocation(line: 2564, column: 14, scope: !3880)
!3882 = !DILocation(line: 2564, column: 9, scope: !3800)
!3883 = !DILocation(line: 2565, column: 29, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3880, file: !939, line: 2564, column: 32)
!3885 = !DILocation(line: 2565, column: 34, scope: !3884)
!3886 = !DILocation(line: 2565, column: 49, scope: !3884)
!3887 = !DILocation(line: 2565, column: 54, scope: !3884)
!3888 = !DILocation(line: 2565, column: 15, scope: !3884)
!3889 = !DILocation(line: 2565, column: 13, scope: !3884)
!3890 = !DILocation(line: 2566, column: 13, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3884, file: !939, line: 2566, column: 13)
!3892 = !DILocation(line: 2566, column: 17, scope: !3891)
!3893 = !DILocation(line: 2566, column: 13, scope: !3884)
!3894 = !DILocation(line: 2567, column: 13, scope: !3891)
!3895 = !DILocation(line: 2568, column: 5, scope: !3884)
!3896 = !DILocation(line: 2570, column: 23, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3800, file: !939, line: 2570, column: 9)
!3898 = !DILocation(line: 2570, column: 28, scope: !3897)
!3899 = !DILocation(line: 2570, column: 9, scope: !3897)
!3900 = !DILocation(line: 2570, column: 9, scope: !3800)
!3901 = !DILocation(line: 2571, column: 29, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3897, file: !939, line: 2570, column: 61)
!3903 = !DILocation(line: 2571, column: 34, scope: !3902)
!3904 = !DILocation(line: 2571, column: 49, scope: !3902)
!3905 = !DILocation(line: 2571, column: 54, scope: !3902)
!3906 = !DILocation(line: 2571, column: 15, scope: !3902)
!3907 = !DILocation(line: 2571, column: 13, scope: !3902)
!3908 = !DILocation(line: 2572, column: 13, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3902, file: !939, line: 2572, column: 13)
!3910 = !DILocation(line: 2572, column: 17, scope: !3909)
!3911 = !DILocation(line: 2572, column: 13, scope: !3902)
!3912 = !DILocation(line: 2573, column: 13, scope: !3909)
!3913 = !DILocation(line: 2574, column: 5, scope: !3902)
!3914 = !DILocation(line: 2576, column: 9, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3800, file: !939, line: 2576, column: 9)
!3916 = !DILocation(line: 2576, column: 14, scope: !3915)
!3917 = !DILocation(line: 2576, column: 9, scope: !3800)
!3918 = !DILocation(line: 2577, column: 29, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3915, file: !939, line: 2576, column: 33)
!3920 = !DILocation(line: 2577, column: 34, scope: !3919)
!3921 = !DILocation(line: 2577, column: 49, scope: !3919)
!3922 = !DILocation(line: 2577, column: 54, scope: !3919)
!3923 = !DILocation(line: 2577, column: 15, scope: !3919)
!3924 = !DILocation(line: 2577, column: 13, scope: !3919)
!3925 = !DILocation(line: 2578, column: 13, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !3919, file: !939, line: 2578, column: 13)
!3927 = !DILocation(line: 2578, column: 17, scope: !3926)
!3928 = !DILocation(line: 2578, column: 13, scope: !3919)
!3929 = !DILocation(line: 2579, column: 13, scope: !3926)
!3930 = !DILocation(line: 2580, column: 5, scope: !3919)
!3931 = !DILocation(line: 2582, column: 9, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3800, file: !939, line: 2582, column: 9)
!3933 = !DILocation(line: 2582, column: 14, scope: !3932)
!3934 = !DILocation(line: 2582, column: 9, scope: !3800)
!3935 = !DILocation(line: 2583, column: 37, scope: !3936)
!3936 = distinct !DILexicalBlock(scope: !3932, file: !939, line: 2582, column: 30)
!3937 = !DILocation(line: 2583, column: 15, scope: !3936)
!3938 = !DILocation(line: 2583, column: 13, scope: !3936)
!3939 = !DILocation(line: 2584, column: 13, scope: !3940)
!3940 = distinct !DILexicalBlock(scope: !3936, file: !939, line: 2584, column: 13)
!3941 = !DILocation(line: 2584, column: 17, scope: !3940)
!3942 = !DILocation(line: 2584, column: 13, scope: !3936)
!3943 = !DILocation(line: 2585, column: 20, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3940, file: !939, line: 2584, column: 22)
!3945 = !DILocation(line: 2586, column: 20, scope: !3944)
!3946 = !DILocation(line: 2585, column: 13, scope: !3944)
!3947 = !DILocation(line: 2587, column: 13, scope: !3944)
!3948 = !DILocation(line: 2589, column: 5, scope: !3936)
!3949 = !DILocation(line: 2591, column: 9, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3800, file: !939, line: 2591, column: 9)
!3951 = !DILocation(line: 2591, column: 14, scope: !3950)
!3952 = !DILocation(line: 2591, column: 27, scope: !3950)
!3953 = !DILocation(line: 2591, column: 9, scope: !3800)
!3954 = !DILocation(line: 2592, column: 17, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !3950, file: !939, line: 2591, column: 49)
!3956 = !DILocation(line: 2593, column: 5, scope: !3955)
!3957 = !DILocation(line: 2594, column: 10, scope: !3958)
!3958 = distinct !DILexicalBlock(scope: !3800, file: !939, line: 2594, column: 9)
!3959 = !DILocation(line: 2594, column: 15, scope: !3958)
!3960 = !DILocation(line: 2594, column: 42, scope: !3958)
!3961 = !DILocation(line: 2594, column: 88, scope: !3958)
!3962 = !DILocation(line: 2595, column: 10, scope: !3958)
!3963 = !DILocation(line: 2595, column: 15, scope: !3958)
!3964 = !DILocation(line: 2595, column: 42, scope: !3958)
!3965 = !DILocation(line: 2594, column: 9, scope: !3966)
!3966 = !DILexicalBlockFile(scope: !3800, file: !939, discriminator: 1)
!3967 = !DILocalVariable(name: "t", scope: !3968, file: !939, line: 2596, type: !3969)
!3968 = distinct !DILexicalBlock(scope: !3958, file: !939, line: 2595, column: 88)
!3969 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !3970, line: 75, baseType: !3971)
!3970 = !DIFile(filename: "/usr/include/time.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!3971 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !3972, line: 139, baseType: !978)
!3972 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!3973 = !DILocation(line: 2596, column: 16, scope: !3968)
!3974 = !DILocation(line: 2596, column: 20, scope: !3968)
!3975 = !DILocation(line: 2597, column: 13, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3968, file: !939, line: 2597, column: 13)
!3977 = !DILocation(line: 2597, column: 18, scope: !3976)
!3978 = !DILocation(line: 2597, column: 45, scope: !3976)
!3979 = !DILocation(line: 2597, column: 13, scope: !3968)
!3980 = !DILocation(line: 2598, column: 44, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3976, file: !939, line: 2597, column: 91)
!3982 = !DILocation(line: 2598, column: 13, scope: !3981)
!3983 = !DILocation(line: 2598, column: 18, scope: !3981)
!3984 = !DILocation(line: 2598, column: 33, scope: !3981)
!3985 = !DILocation(line: 2599, column: 9, scope: !3981)
!3986 = !DILocation(line: 2599, column: 20, scope: !3987)
!3987 = !DILexicalBlockFile(scope: !3988, file: !939, discriminator: 1)
!3988 = distinct !DILexicalBlock(scope: !3976, file: !939, line: 2599, column: 20)
!3989 = !DILocation(line: 2599, column: 25, scope: !3987)
!3990 = !DILocation(line: 2599, column: 52, scope: !3987)
!3991 = !DILocalVariable(name: "b", scope: !3992, file: !939, line: 2600, type: !3993)
!3992 = distinct !DILexicalBlock(scope: !3988, file: !939, line: 2599, column: 97)
!3993 = !DICompositeType(tag: DW_TAG_array_type, baseType: !989, size: 120, align: 8, elements: !3994)
!3994 = !{!3995}
!3995 = !DISubrange(count: 15)
!3996 = !DILocation(line: 2600, column: 18, scope: !3992)
!3997 = !DILocalVariable(name: "p", scope: !3992, file: !939, line: 2601, type: !3998)
!3998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3999, size: 64, align: 64)
!3999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !3970, line: 133, size: 448, align: 64, elements: !4000)
!4000 = !{!4001, !4002, !4003, !4004, !4005, !4006, !4007, !4008, !4009, !4010, !4011}
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !3999, file: !3970, line: 135, baseType: !981, size: 32, align: 32)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !3999, file: !3970, line: 136, baseType: !981, size: 32, align: 32, offset: 32)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !3999, file: !3970, line: 137, baseType: !981, size: 32, align: 32, offset: 64)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !3999, file: !3970, line: 138, baseType: !981, size: 32, align: 32, offset: 96)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !3999, file: !3970, line: 139, baseType: !981, size: 32, align: 32, offset: 128)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !3999, file: !3970, line: 140, baseType: !981, size: 32, align: 32, offset: 160)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !3999, file: !3970, line: 141, baseType: !981, size: 32, align: 32, offset: 192)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !3999, file: !3970, line: 142, baseType: !981, size: 32, align: 32, offset: 224)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !3999, file: !3970, line: 143, baseType: !981, size: 32, align: 32, offset: 256)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_gmtoff", scope: !3999, file: !3970, line: 149, baseType: !978, size: 64, align: 64, offset: 320)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_zone", scope: !3999, file: !3970, line: 150, baseType: !1031, size: 64, align: 64, offset: 384)
!4012 = !DILocation(line: 2601, column: 24, scope: !3992)
!4013 = !DILocalVariable(name: "tmbuf", scope: !3992, file: !939, line: 2601, type: !3999)
!4014 = !DILocation(line: 2601, column: 27, scope: !3992)
!4015 = !DILocation(line: 2602, column: 23, scope: !4016)
!4016 = distinct !DILexicalBlock(scope: !3992, file: !939, line: 2602, column: 17)
!4017 = !DILocation(line: 2602, column: 21, scope: !4016)
!4018 = !DILocation(line: 2602, column: 17, scope: !3992)
!4019 = !DILocation(line: 2603, column: 17, scope: !4016)
!4020 = !DILocation(line: 2604, column: 27, scope: !4021)
!4021 = distinct !DILexicalBlock(scope: !3992, file: !939, line: 2604, column: 17)
!4022 = !DILocation(line: 2604, column: 57, scope: !4021)
!4023 = !DILocation(line: 2604, column: 18, scope: !4021)
!4024 = !DILocation(line: 2604, column: 17, scope: !3992)
!4025 = !DILocation(line: 2605, column: 17, scope: !4021)
!4026 = !DILocation(line: 2606, column: 43, scope: !3992)
!4027 = !DILocation(line: 2606, column: 35, scope: !3992)
!4028 = !DILocation(line: 2606, column: 13, scope: !3992)
!4029 = !DILocation(line: 2606, column: 18, scope: !3992)
!4030 = !DILocation(line: 2606, column: 33, scope: !3992)
!4031 = !DILocation(line: 2607, column: 9, scope: !3992)
!4032 = !DILocation(line: 2608, column: 16, scope: !3968)
!4033 = !DILocation(line: 2608, column: 75, scope: !3968)
!4034 = !DILocation(line: 2608, column: 80, scope: !3968)
!4035 = !DILocation(line: 2608, column: 9, scope: !3968)
!4036 = !DILocation(line: 2609, column: 5, scope: !3968)
!4037 = !DILocation(line: 2611, column: 28, scope: !3800)
!4038 = !DILocation(line: 2611, column: 33, scope: !3800)
!4039 = !DILocation(line: 2611, column: 45, scope: !3966)
!4040 = !DILocation(line: 2611, column: 50, scope: !3966)
!4041 = !DILocation(line: 2611, column: 28, scope: !3966)
!4042 = !DILocation(line: 2611, column: 62, scope: !4043)
!4043 = !DILexicalBlockFile(scope: !3800, file: !939, discriminator: 2)
!4044 = !DILocation(line: 2611, column: 67, scope: !4043)
!4045 = !DILocation(line: 2611, column: 28, scope: !4043)
!4046 = !DILocation(line: 2611, column: 28, scope: !4047)
!4047 = !DILexicalBlockFile(scope: !3800, file: !939, discriminator: 3)
!4048 = !DILocation(line: 2611, column: 73, scope: !4047)
!4049 = !DILocation(line: 2611, column: 27, scope: !4047)
!4050 = !DILocation(line: 2611, column: 5, scope: !4047)
!4051 = !DILocation(line: 2611, column: 10, scope: !4047)
!4052 = !DILocation(line: 2611, column: 25, scope: !4047)
!4053 = !DILocation(line: 2612, column: 12, scope: !4054)
!4054 = distinct !DILexicalBlock(scope: !3800, file: !939, line: 2612, column: 5)
!4055 = !DILocation(line: 2612, column: 10, scope: !4054)
!4056 = !DILocation(line: 2612, column: 17, scope: !4057)
!4057 = !DILexicalBlockFile(scope: !4058, file: !939, discriminator: 1)
!4058 = distinct !DILexicalBlock(scope: !4054, file: !939, line: 2612, column: 5)
!4059 = !DILocation(line: 2612, column: 21, scope: !4057)
!4060 = !DILocation(line: 2612, column: 26, scope: !4057)
!4061 = !DILocation(line: 2612, column: 19, scope: !4057)
!4062 = !DILocation(line: 2612, column: 5, scope: !4057)
!4063 = !DILocation(line: 2613, column: 32, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !4058, file: !939, line: 2612, column: 46)
!4065 = !DILocation(line: 2613, column: 15, scope: !4064)
!4066 = !DILocation(line: 2613, column: 20, scope: !4064)
!4067 = !DILocation(line: 2613, column: 12, scope: !4064)
!4068 = !DILocation(line: 2615, column: 35, scope: !4064)
!4069 = !DILocation(line: 2615, column: 38, scope: !4064)
!4070 = !DILocation(line: 2615, column: 25, scope: !4064)
!4071 = !DILocation(line: 2615, column: 9, scope: !4064)
!4072 = !DILocation(line: 2615, column: 13, scope: !4064)
!4073 = !DILocation(line: 2615, column: 23, scope: !4064)
!4074 = !DILocation(line: 2616, column: 14, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !4064, file: !939, line: 2616, column: 13)
!4076 = !DILocation(line: 2616, column: 18, scope: !4075)
!4077 = !DILocation(line: 2616, column: 13, scope: !4064)
!4078 = !DILocation(line: 2617, column: 17, scope: !4079)
!4079 = distinct !DILexicalBlock(scope: !4075, file: !939, line: 2616, column: 30)
!4080 = !DILocation(line: 2618, column: 13, scope: !4079)
!4081 = !DILocation(line: 2620, column: 27, scope: !4064)
!4082 = !DILocation(line: 2620, column: 31, scope: !4064)
!4083 = !DILocation(line: 2620, column: 49, scope: !4064)
!4084 = !DILocation(line: 2620, column: 52, scope: !4064)
!4085 = !DILocation(line: 2620, column: 42, scope: !4064)
!4086 = !DILocation(line: 2620, column: 57, scope: !4064)
!4087 = !DILocation(line: 2620, column: 62, scope: !4064)
!4088 = !DILocation(line: 2620, column: 15, scope: !4089)
!4089 = !DILexicalBlockFile(scope: !4064, file: !939, discriminator: 1)
!4090 = !DILocation(line: 2620, column: 13, scope: !4064)
!4091 = !DILocation(line: 2621, column: 13, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4064, file: !939, line: 2621, column: 13)
!4093 = !DILocation(line: 2621, column: 17, scope: !4092)
!4094 = !DILocation(line: 2621, column: 13, scope: !4064)
!4095 = !DILocation(line: 2622, column: 13, scope: !4092)
!4096 = !DILocation(line: 2624, column: 24, scope: !4064)
!4097 = !DILocation(line: 2624, column: 29, scope: !4064)
!4098 = !DILocation(line: 2624, column: 9, scope: !4064)
!4099 = !DILocation(line: 2624, column: 13, scope: !4064)
!4100 = !DILocation(line: 2624, column: 22, scope: !4064)
!4101 = !DILocation(line: 2625, column: 9, scope: !4064)
!4102 = !DILocation(line: 2625, column: 13, scope: !4064)
!4103 = !DILocation(line: 2625, column: 23, scope: !4064)
!4104 = !DILocation(line: 2626, column: 9, scope: !4064)
!4105 = !DILocation(line: 2626, column: 13, scope: !4064)
!4106 = !DILocation(line: 2626, column: 21, scope: !4064)
!4107 = !DILocation(line: 2627, column: 9, scope: !4064)
!4108 = !DILocation(line: 2627, column: 13, scope: !4064)
!4109 = !DILocation(line: 2627, column: 51, scope: !4064)
!4110 = !DILocation(line: 2629, column: 13, scope: !4111)
!4111 = distinct !DILexicalBlock(scope: !4064, file: !939, line: 2629, column: 13)
!4112 = !DILocation(line: 2629, column: 18, scope: !4111)
!4113 = !DILocation(line: 2629, column: 24, scope: !4111)
!4114 = !DILocation(line: 2629, column: 44, scope: !4111)
!4115 = !DILocation(line: 2629, column: 47, scope: !4116)
!4116 = !DILexicalBlockFile(scope: !4111, file: !939, discriminator: 1)
!4117 = !DILocation(line: 2629, column: 52, scope: !4116)
!4118 = !DILocation(line: 2629, column: 58, scope: !4116)
!4119 = !DILocation(line: 2629, column: 13, scope: !4116)
!4120 = !DILocation(line: 2631, column: 13, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !4111, file: !939, line: 2629, column: 86)
!4122 = !DILocation(line: 2631, column: 18, scope: !4121)
!4123 = !DILocation(line: 2631, column: 24, scope: !4121)
!4124 = !DILocation(line: 2632, column: 20, scope: !4121)
!4125 = !DILocation(line: 2632, column: 13, scope: !4121)
!4126 = !DILocation(line: 2635, column: 9, scope: !4121)
!4127 = !DILocation(line: 2637, column: 13, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4064, file: !939, line: 2637, column: 13)
!4129 = !DILocation(line: 2637, column: 18, scope: !4128)
!4130 = !DILocation(line: 2637, column: 24, scope: !4128)
!4131 = !DILocation(line: 2637, column: 13, scope: !4064)
!4132 = !DILocalVariable(name: "now0", scope: !4133, file: !939, line: 2638, type: !3969)
!4133 = distinct !DILexicalBlock(scope: !4128, file: !939, line: 2637, column: 49)
!4134 = !DILocation(line: 2638, column: 20, scope: !4133)
!4135 = !DILocation(line: 2639, column: 13, scope: !4133)
!4136 = !DILocation(line: 2640, column: 42, scope: !4133)
!4137 = !DILocation(line: 2640, column: 13, scope: !4133)
!4138 = !DILocation(line: 2640, column: 17, scope: !4133)
!4139 = !DILocation(line: 2640, column: 40, scope: !4133)
!4140 = !DILocation(line: 2641, column: 9, scope: !4133)
!4141 = !DILocation(line: 2642, column: 13, scope: !4142)
!4142 = distinct !DILexicalBlock(scope: !4064, file: !939, line: 2642, column: 13)
!4143 = !DILocation(line: 2642, column: 18, scope: !4142)
!4144 = !DILocation(line: 2642, column: 13, scope: !4064)
!4145 = !DILocation(line: 2643, column: 41, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !4142, file: !939, line: 2642, column: 38)
!4147 = !DILocation(line: 2643, column: 46, scope: !4146)
!4148 = !DILocation(line: 2643, column: 62, scope: !4146)
!4149 = !DILocation(line: 2643, column: 67, scope: !4146)
!4150 = !DILocation(line: 2643, column: 19, scope: !4146)
!4151 = !DILocation(line: 2643, column: 17, scope: !4146)
!4152 = !DILocation(line: 2644, column: 17, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4146, file: !939, line: 2644, column: 17)
!4154 = !DILocation(line: 2644, column: 21, scope: !4153)
!4155 = !DILocation(line: 2644, column: 17, scope: !4146)
!4156 = !DILocation(line: 2645, column: 24, scope: !4157)
!4157 = distinct !DILexicalBlock(scope: !4153, file: !939, line: 2644, column: 26)
!4158 = !DILocation(line: 2645, column: 77, scope: !4157)
!4159 = !DILocation(line: 2645, column: 82, scope: !4157)
!4160 = !DILocation(line: 2645, column: 17, scope: !4157)
!4161 = !DILocation(line: 2646, column: 17, scope: !4157)
!4162 = !DILocation(line: 2648, column: 9, scope: !4146)
!4163 = !DILocation(line: 2650, column: 16, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4064, file: !939, line: 2650, column: 9)
!4165 = !DILocation(line: 2650, column: 14, scope: !4164)
!4166 = !DILocation(line: 2650, column: 21, scope: !4167)
!4167 = !DILexicalBlockFile(scope: !4168, file: !939, discriminator: 1)
!4168 = distinct !DILexicalBlock(scope: !4164, file: !939, line: 2650, column: 9)
!4169 = !DILocation(line: 2650, column: 25, scope: !4167)
!4170 = !DILocation(line: 2650, column: 29, scope: !4167)
!4171 = !DILocation(line: 2650, column: 23, scope: !4167)
!4172 = !DILocation(line: 2650, column: 9, scope: !4167)
!4173 = !DILocation(line: 2651, column: 42, scope: !4174)
!4174 = distinct !DILexicalBlock(scope: !4168, file: !939, line: 2650, column: 46)
!4175 = !DILocation(line: 2651, column: 30, scope: !4174)
!4176 = !DILocation(line: 2651, column: 34, scope: !4174)
!4177 = !DILocation(line: 2651, column: 46, scope: !4174)
!4178 = !DILocation(line: 2651, column: 56, scope: !4174)
!4179 = !DILocation(line: 2651, column: 67, scope: !4174)
!4180 = !DILocation(line: 2651, column: 13, scope: !4174)
!4181 = !DILocation(line: 2651, column: 17, scope: !4174)
!4182 = !DILocation(line: 2651, column: 27, scope: !4174)
!4183 = !DILocation(line: 2654, column: 18, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4174, file: !939, line: 2654, column: 17)
!4185 = !DILocation(line: 2654, column: 22, scope: !4184)
!4186 = !DILocation(line: 2654, column: 32, scope: !4184)
!4187 = !DILocation(line: 2654, column: 38, scope: !4184)
!4188 = !DILocation(line: 2654, column: 54, scope: !4189)
!4189 = !DILexicalBlockFile(scope: !4184, file: !939, discriminator: 1)
!4190 = !DILocation(line: 2654, column: 42, scope: !4189)
!4191 = !DILocation(line: 2654, column: 46, scope: !4189)
!4192 = !DILocation(line: 2654, column: 58, scope: !4189)
!4193 = !DILocation(line: 2654, column: 68, scope: !4189)
!4194 = !DILocation(line: 2654, column: 79, scope: !4189)
!4195 = !DILocation(line: 2654, column: 17, scope: !4189)
!4196 = !DILocation(line: 2655, column: 58, scope: !4197)
!4197 = distinct !DILexicalBlock(scope: !4184, file: !939, line: 2654, column: 103)
!4198 = !DILocation(line: 2655, column: 46, scope: !4197)
!4199 = !DILocation(line: 2655, column: 50, scope: !4197)
!4200 = !DILocation(line: 2655, column: 62, scope: !4197)
!4201 = !DILocation(line: 2655, column: 17, scope: !4197)
!4202 = !DILocation(line: 2655, column: 21, scope: !4197)
!4203 = !DILocation(line: 2655, column: 44, scope: !4197)
!4204 = !DILocation(line: 2656, column: 13, scope: !4197)
!4205 = !DILocation(line: 2657, column: 45, scope: !4174)
!4206 = !DILocation(line: 2657, column: 33, scope: !4174)
!4207 = !DILocation(line: 2657, column: 37, scope: !4174)
!4208 = !DILocation(line: 2657, column: 49, scope: !4174)
!4209 = !DILocation(line: 2657, column: 59, scope: !4174)
!4210 = !DILocation(line: 2657, column: 70, scope: !4174)
!4211 = !DILocation(line: 2657, column: 13, scope: !4174)
!4212 = !DILocation(line: 2657, column: 17, scope: !4174)
!4213 = !DILocation(line: 2657, column: 30, scope: !4174)
!4214 = !DILocation(line: 2658, column: 9, scope: !4174)
!4215 = !DILocation(line: 2650, column: 42, scope: !4216)
!4216 = !DILexicalBlockFile(scope: !4168, file: !939, discriminator: 2)
!4217 = !DILocation(line: 2650, column: 9, scope: !4216)
!4218 = distinct !{!4218, !4219}
!4219 = !DILocation(line: 2650, column: 9, scope: !4064)
!4220 = !DILocation(line: 2660, column: 13, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4064, file: !939, line: 2660, column: 13)
!4222 = !DILocation(line: 2660, column: 17, scope: !4221)
!4223 = !DILocation(line: 2660, column: 27, scope: !4221)
!4224 = !DILocation(line: 2660, column: 13, scope: !4064)
!4225 = !DILocation(line: 2661, column: 20, scope: !4221)
!4226 = !DILocation(line: 2661, column: 13, scope: !4221)
!4227 = !DILocation(line: 2662, column: 13, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !4064, file: !939, line: 2662, column: 13)
!4229 = !DILocation(line: 2662, column: 18, scope: !4228)
!4230 = !DILocation(line: 2662, column: 31, scope: !4228)
!4231 = !DILocation(line: 2662, column: 13, scope: !4064)
!4232 = !DILocation(line: 2663, column: 27, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4228, file: !939, line: 2662, column: 53)
!4234 = !DILocation(line: 2663, column: 13, scope: !4233)
!4235 = !DILocation(line: 2663, column: 17, scope: !4233)
!4236 = !DILocation(line: 2663, column: 25, scope: !4233)
!4237 = !DILocation(line: 2664, column: 9, scope: !4233)
!4238 = !DILocation(line: 2665, column: 27, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !4228, file: !939, line: 2664, column: 16)
!4240 = !DILocation(line: 2665, column: 13, scope: !4239)
!4241 = !DILocation(line: 2665, column: 17, scope: !4239)
!4242 = !DILocation(line: 2665, column: 25, scope: !4239)
!4243 = !DILocation(line: 2668, column: 14, scope: !4244)
!4244 = distinct !DILexicalBlock(scope: !4064, file: !939, line: 2668, column: 13)
!4245 = !DILocation(line: 2668, column: 18, scope: !4244)
!4246 = !DILocation(line: 2668, column: 13, scope: !4064)
!4247 = !DILocation(line: 2669, column: 17, scope: !4248)
!4248 = distinct !DILexicalBlock(scope: !4244, file: !939, line: 2668, column: 27)
!4249 = !DILocation(line: 2670, column: 13, scope: !4248)
!4250 = !DILocation(line: 2673, column: 13, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4064, file: !939, line: 2673, column: 13)
!4252 = !DILocation(line: 2673, column: 17, scope: !4251)
!4253 = !DILocation(line: 2673, column: 13, scope: !4064)
!4254 = !DILocation(line: 2674, column: 31, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4251, file: !939, line: 2673, column: 31)
!4256 = !DILocation(line: 2674, column: 13, scope: !4255)
!4257 = !DILocation(line: 2674, column: 17, scope: !4255)
!4258 = !DILocation(line: 2674, column: 29, scope: !4255)
!4259 = !DILocation(line: 2675, column: 18, scope: !4260)
!4260 = distinct !DILexicalBlock(scope: !4255, file: !939, line: 2675, column: 17)
!4261 = !DILocation(line: 2675, column: 22, scope: !4260)
!4262 = !DILocation(line: 2675, column: 17, scope: !4255)
!4263 = !DILocation(line: 2676, column: 21, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4260, file: !939, line: 2675, column: 31)
!4265 = !DILocation(line: 2677, column: 17, scope: !4264)
!4266 = !DILocation(line: 2679, column: 9, scope: !4255)
!4267 = !DILocation(line: 2680, column: 13, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !4064, file: !939, line: 2680, column: 13)
!4269 = !DILocation(line: 2680, column: 18, scope: !4268)
!4270 = !DILocation(line: 2680, column: 13, scope: !4064)
!4271 = !DILocation(line: 2681, column: 36, scope: !4272)
!4272 = distinct !DILexicalBlock(scope: !4268, file: !939, line: 2680, column: 36)
!4273 = !DILocation(line: 2681, column: 41, scope: !4272)
!4274 = !DILocation(line: 2681, column: 29, scope: !4272)
!4275 = !DILocation(line: 2681, column: 59, scope: !4272)
!4276 = !DILocation(line: 2681, column: 27, scope: !4272)
!4277 = !DILocation(line: 2682, column: 38, scope: !4272)
!4278 = !DILocation(line: 2682, column: 28, scope: !4272)
!4279 = !DILocation(line: 2682, column: 13, scope: !4272)
!4280 = !DILocation(line: 2682, column: 17, scope: !4272)
!4281 = !DILocation(line: 2682, column: 26, scope: !4272)
!4282 = !DILocation(line: 2683, column: 18, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4272, file: !939, line: 2683, column: 17)
!4284 = !DILocation(line: 2683, column: 22, scope: !4283)
!4285 = !DILocation(line: 2683, column: 17, scope: !4272)
!4286 = !DILocation(line: 2684, column: 21, scope: !4287)
!4287 = distinct !DILexicalBlock(scope: !4283, file: !939, line: 2683, column: 32)
!4288 = !DILocation(line: 2685, column: 17, scope: !4287)
!4289 = !DILocation(line: 2688, column: 24, scope: !4272)
!4290 = !DILocation(line: 2688, column: 28, scope: !4272)
!4291 = !DILocation(line: 2688, column: 38, scope: !4272)
!4292 = !DILocation(line: 2688, column: 43, scope: !4272)
!4293 = !DILocation(line: 2688, column: 61, scope: !4272)
!4294 = !DILocation(line: 2688, column: 13, scope: !4272)
!4295 = !DILocation(line: 2689, column: 31, scope: !4272)
!4296 = !DILocation(line: 2689, column: 35, scope: !4272)
!4297 = !DILocation(line: 2689, column: 45, scope: !4272)
!4298 = !DILocation(line: 2689, column: 60, scope: !4272)
!4299 = !DILocation(line: 2689, column: 19, scope: !4272)
!4300 = !DILocation(line: 2689, column: 17, scope: !4272)
!4301 = !DILocation(line: 2690, column: 17, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4272, file: !939, line: 2690, column: 17)
!4303 = !DILocation(line: 2690, column: 21, scope: !4302)
!4304 = !DILocation(line: 2690, column: 17, scope: !4272)
!4305 = !DILocation(line: 2691, column: 17, scope: !4302)
!4306 = !DILocation(line: 2692, column: 9, scope: !4272)
!4307 = !DILocation(line: 2693, column: 17, scope: !4308)
!4308 = distinct !DILexicalBlock(scope: !4309, file: !939, line: 2693, column: 17)
!4309 = distinct !DILexicalBlock(scope: !4268, file: !939, line: 2692, column: 16)
!4310 = !DILocation(line: 2693, column: 22, scope: !4308)
!4311 = !DILocation(line: 2693, column: 28, scope: !4308)
!4312 = !DILocation(line: 2693, column: 17, scope: !4309)
!4313 = !DILocation(line: 2694, column: 21, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4315, file: !939, line: 2694, column: 21)
!4315 = distinct !DILexicalBlock(scope: !4308, file: !939, line: 2693, column: 47)
!4316 = !DILocation(line: 2694, column: 26, scope: !4314)
!4317 = !DILocation(line: 2694, column: 39, scope: !4314)
!4318 = !DILocation(line: 2694, column: 21, scope: !4315)
!4319 = !DILocation(line: 2695, column: 29, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4314, file: !939, line: 2694, column: 61)
!4321 = !DILocation(line: 2696, column: 17, scope: !4320)
!4322 = !DILocation(line: 2697, column: 29, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4314, file: !939, line: 2696, column: 24)
!4324 = !DILocation(line: 2699, column: 13, scope: !4315)
!4325 = !DILocation(line: 2701, column: 17, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4309, file: !939, line: 2701, column: 17)
!4327 = !DILocation(line: 2701, column: 22, scope: !4326)
!4328 = !DILocation(line: 2701, column: 17, scope: !4309)
!4329 = !DILocation(line: 2702, column: 40, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4326, file: !939, line: 2701, column: 37)
!4331 = !DILocation(line: 2702, column: 44, scope: !4330)
!4332 = !DILocation(line: 2702, column: 33, scope: !4330)
!4333 = !DILocation(line: 2702, column: 64, scope: !4330)
!4334 = !DILocation(line: 2702, column: 57, scope: !4335)
!4335 = !DILexicalBlockFile(scope: !4330, file: !939, discriminator: 1)
!4336 = !DILocation(line: 2702, column: 55, scope: !4330)
!4337 = !DILocation(line: 2702, column: 87, scope: !4330)
!4338 = !DILocation(line: 2702, column: 31, scope: !4330)
!4339 = !DILocation(line: 2703, column: 13, scope: !4330)
!4340 = !DILocation(line: 2704, column: 40, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !4326, file: !939, line: 2703, column: 20)
!4342 = !DILocation(line: 2704, column: 44, scope: !4341)
!4343 = !DILocation(line: 2704, column: 33, scope: !4341)
!4344 = !DILocation(line: 2704, column: 64, scope: !4341)
!4345 = !DILocation(line: 2704, column: 57, scope: !4346)
!4346 = !DILexicalBlockFile(scope: !4341, file: !939, discriminator: 1)
!4347 = !DILocation(line: 2704, column: 55, scope: !4341)
!4348 = !DILocation(line: 2704, column: 73, scope: !4341)
!4349 = !DILocation(line: 2704, column: 31, scope: !4341)
!4350 = !DILocation(line: 2707, column: 38, scope: !4309)
!4351 = !DILocation(line: 2707, column: 28, scope: !4309)
!4352 = !DILocation(line: 2707, column: 13, scope: !4309)
!4353 = !DILocation(line: 2707, column: 17, scope: !4309)
!4354 = !DILocation(line: 2707, column: 26, scope: !4309)
!4355 = !DILocation(line: 2708, column: 18, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !4309, file: !939, line: 2708, column: 17)
!4357 = !DILocation(line: 2708, column: 22, scope: !4356)
!4358 = !DILocation(line: 2708, column: 17, scope: !4309)
!4359 = !DILocation(line: 2709, column: 21, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4356, file: !939, line: 2708, column: 32)
!4361 = !DILocation(line: 2710, column: 17, scope: !4360)
!4362 = !DILocation(line: 2713, column: 24, scope: !4309)
!4363 = !DILocation(line: 2713, column: 28, scope: !4309)
!4364 = !DILocation(line: 2713, column: 38, scope: !4309)
!4365 = !DILocation(line: 2713, column: 42, scope: !4309)
!4366 = !DILocation(line: 2713, column: 53, scope: !4309)
!4367 = !DILocation(line: 2713, column: 13, scope: !4309)
!4368 = !DILocation(line: 2715, column: 25, scope: !4309)
!4369 = !DILocation(line: 2715, column: 29, scope: !4309)
!4370 = !DILocation(line: 2715, column: 17, scope: !4309)
!4371 = !DILocation(line: 2715, column: 15, scope: !4309)
!4372 = !DILocation(line: 2716, column: 17, scope: !4373)
!4373 = distinct !DILexicalBlock(scope: !4309, file: !939, line: 2716, column: 17)
!4374 = !DILocation(line: 2716, column: 17, scope: !4309)
!4375 = !DILocation(line: 2717, column: 18, scope: !4373)
!4376 = !DILocation(line: 2717, column: 20, scope: !4373)
!4377 = !DILocation(line: 2717, column: 17, scope: !4373)
!4378 = !DILocation(line: 2718, column: 17, scope: !4379)
!4379 = distinct !DILexicalBlock(scope: !4309, file: !939, line: 2718, column: 17)
!4380 = !DILocation(line: 2718, column: 22, scope: !4379)
!4381 = !DILocation(line: 2718, column: 17, scope: !4309)
!4382 = !DILocation(line: 2719, column: 28, scope: !4383)
!4383 = distinct !DILexicalBlock(scope: !4379, file: !939, line: 2718, column: 37)
!4384 = !DILocation(line: 2719, column: 32, scope: !4383)
!4385 = !DILocation(line: 2719, column: 42, scope: !4383)
!4386 = !DILocation(line: 2719, column: 65, scope: !4383)
!4387 = !DILocation(line: 2719, column: 17, scope: !4383)
!4388 = !DILocation(line: 2720, column: 13, scope: !4383)
!4389 = !DILocation(line: 2721, column: 28, scope: !4390)
!4390 = distinct !DILexicalBlock(scope: !4379, file: !939, line: 2720, column: 20)
!4391 = !DILocation(line: 2721, column: 32, scope: !4390)
!4392 = !DILocation(line: 2721, column: 42, scope: !4390)
!4393 = !DILocation(line: 2721, column: 51, scope: !4390)
!4394 = !DILocation(line: 2721, column: 17, scope: !4390)
!4395 = !DILocation(line: 2725, column: 13, scope: !4396)
!4396 = distinct !DILexicalBlock(scope: !4064, file: !939, line: 2725, column: 13)
!4397 = !DILocation(line: 2725, column: 18, scope: !4396)
!4398 = !DILocation(line: 2725, column: 31, scope: !4396)
!4399 = !DILocation(line: 2725, column: 13, scope: !4064)
!4400 = !DILocation(line: 2726, column: 17, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4402, file: !939, line: 2726, column: 17)
!4402 = distinct !DILexicalBlock(scope: !4396, file: !939, line: 2725, column: 53)
!4403 = !DILocation(line: 2726, column: 22, scope: !4401)
!4404 = !DILocation(line: 2726, column: 36, scope: !4401)
!4405 = !DILocation(line: 2726, column: 17, scope: !4402)
!4406 = !DILocation(line: 2727, column: 40, scope: !4401)
!4407 = !DILocation(line: 2727, column: 17, scope: !4401)
!4408 = !DILocation(line: 2728, column: 17, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4402, file: !939, line: 2728, column: 17)
!4410 = !DILocation(line: 2728, column: 22, scope: !4409)
!4411 = !DILocation(line: 2728, column: 28, scope: !4409)
!4412 = !DILocation(line: 2728, column: 17, scope: !4402)
!4413 = !DILocation(line: 2729, column: 52, scope: !4414)
!4414 = distinct !DILexicalBlock(scope: !4409, file: !939, line: 2728, column: 47)
!4415 = !DILocation(line: 2729, column: 56, scope: !4414)
!4416 = !DILocation(line: 2729, column: 42, scope: !4414)
!4417 = !DILocation(line: 2729, column: 17, scope: !4414)
!4418 = !DILocation(line: 2729, column: 21, scope: !4414)
!4419 = !DILocation(line: 2729, column: 40, scope: !4414)
!4420 = !DILocation(line: 2730, column: 22, scope: !4421)
!4421 = distinct !DILexicalBlock(scope: !4414, file: !939, line: 2730, column: 21)
!4422 = !DILocation(line: 2730, column: 26, scope: !4421)
!4423 = !DILocation(line: 2730, column: 21, scope: !4414)
!4424 = !DILocation(line: 2731, column: 25, scope: !4425)
!4425 = distinct !DILexicalBlock(scope: !4421, file: !939, line: 2730, column: 46)
!4426 = !DILocation(line: 2732, column: 21, scope: !4425)
!4427 = !DILocation(line: 2734, column: 13, scope: !4414)
!4428 = !DILocation(line: 2735, column: 52, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4409, file: !939, line: 2734, column: 20)
!4430 = !DILocation(line: 2735, column: 42, scope: !4429)
!4431 = !DILocation(line: 2735, column: 17, scope: !4429)
!4432 = !DILocation(line: 2735, column: 21, scope: !4429)
!4433 = !DILocation(line: 2735, column: 40, scope: !4429)
!4434 = !DILocation(line: 2736, column: 22, scope: !4435)
!4435 = distinct !DILexicalBlock(scope: !4429, file: !939, line: 2736, column: 21)
!4436 = !DILocation(line: 2736, column: 26, scope: !4435)
!4437 = !DILocation(line: 2736, column: 21, scope: !4429)
!4438 = !DILocation(line: 2737, column: 25, scope: !4439)
!4439 = distinct !DILexicalBlock(scope: !4435, file: !939, line: 2736, column: 47)
!4440 = !DILocation(line: 2738, column: 21, scope: !4439)
!4441 = !DILocation(line: 2740, column: 28, scope: !4429)
!4442 = !DILocation(line: 2740, column: 32, scope: !4429)
!4443 = !DILocation(line: 2740, column: 52, scope: !4429)
!4444 = !DILocation(line: 2740, column: 57, scope: !4429)
!4445 = !DILocation(line: 2741, column: 28, scope: !4429)
!4446 = !DILocation(line: 2740, column: 17, scope: !4429)
!4447 = !DILocation(line: 2742, column: 21, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !4429, file: !939, line: 2742, column: 21)
!4449 = !DILocation(line: 2742, column: 26, scope: !4448)
!4450 = !DILocation(line: 2742, column: 40, scope: !4448)
!4451 = !DILocation(line: 2742, column: 21, scope: !4429)
!4452 = !DILocation(line: 2743, column: 36, scope: !4453)
!4453 = distinct !DILexicalBlock(scope: !4454, file: !939, line: 2743, column: 25)
!4454 = distinct !DILexicalBlock(scope: !4448, file: !939, line: 2742, column: 45)
!4455 = !DILocation(line: 2743, column: 40, scope: !4453)
!4456 = !DILocation(line: 2743, column: 25, scope: !4453)
!4457 = !DILocation(line: 2743, column: 25, scope: !4454)
!4458 = !DILocation(line: 2744, column: 37, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4453, file: !939, line: 2743, column: 67)
!4460 = !DILocation(line: 2744, column: 41, scope: !4459)
!4461 = !DILocation(line: 2744, column: 61, scope: !4459)
!4462 = !DILocation(line: 2744, column: 85, scope: !4459)
!4463 = !DILocation(line: 2744, column: 25, scope: !4459)
!4464 = !DILocation(line: 2745, column: 21, scope: !4459)
!4465 = !DILocation(line: 2746, column: 46, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4453, file: !939, line: 2745, column: 28)
!4467 = !DILocation(line: 2746, column: 50, scope: !4466)
!4468 = !DILocation(line: 2746, column: 70, scope: !4466)
!4469 = !DILocation(line: 2746, column: 94, scope: !4466)
!4470 = !DILocation(line: 2746, column: 31, scope: !4466)
!4471 = !DILocation(line: 2746, column: 29, scope: !4466)
!4472 = !DILocation(line: 2748, column: 25, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4454, file: !939, line: 2748, column: 25)
!4474 = !DILocation(line: 2748, column: 29, scope: !4473)
!4475 = !DILocation(line: 2748, column: 25, scope: !4454)
!4476 = !DILocation(line: 2749, column: 25, scope: !4473)
!4477 = !DILocation(line: 2750, column: 17, scope: !4454)
!4478 = !DILocation(line: 2752, column: 49, scope: !4429)
!4479 = !DILocation(line: 2752, column: 53, scope: !4429)
!4480 = !DILocation(line: 2752, column: 42, scope: !4429)
!4481 = !DILocation(line: 2753, column: 28, scope: !4429)
!4482 = !DILocation(line: 2753, column: 32, scope: !4429)
!4483 = !DILocation(line: 2753, column: 21, scope: !4429)
!4484 = !DILocation(line: 2752, column: 64, scope: !4429)
!4485 = !DILocation(line: 2753, column: 52, scope: !4429)
!4486 = !DILocation(line: 2752, column: 40, scope: !4429)
!4487 = !DILocation(line: 2755, column: 53, scope: !4429)
!4488 = !DILocation(line: 2755, column: 43, scope: !4429)
!4489 = !DILocation(line: 2755, column: 17, scope: !4429)
!4490 = !DILocation(line: 2755, column: 21, scope: !4429)
!4491 = !DILocation(line: 2755, column: 41, scope: !4429)
!4492 = !DILocation(line: 2756, column: 22, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4429, file: !939, line: 2756, column: 21)
!4494 = !DILocation(line: 2756, column: 26, scope: !4493)
!4495 = !DILocation(line: 2756, column: 21, scope: !4429)
!4496 = !DILocation(line: 2757, column: 25, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !4493, file: !939, line: 2756, column: 47)
!4498 = !DILocation(line: 2758, column: 21, scope: !4497)
!4499 = !DILocation(line: 2761, column: 28, scope: !4429)
!4500 = !DILocation(line: 2761, column: 32, scope: !4429)
!4501 = !DILocation(line: 2761, column: 53, scope: !4429)
!4502 = !DILocation(line: 2761, column: 57, scope: !4429)
!4503 = !DILocation(line: 2762, column: 28, scope: !4429)
!4504 = !DILocation(line: 2761, column: 17, scope: !4429)
!4505 = !DILocation(line: 2763, column: 29, scope: !4429)
!4506 = !DILocation(line: 2763, column: 33, scope: !4429)
!4507 = !DILocation(line: 2763, column: 21, scope: !4429)
!4508 = !DILocation(line: 2763, column: 19, scope: !4429)
!4509 = !DILocation(line: 2764, column: 21, scope: !4510)
!4510 = distinct !DILexicalBlock(scope: !4429, file: !939, line: 2764, column: 21)
!4511 = !DILocation(line: 2764, column: 21, scope: !4429)
!4512 = !DILocation(line: 2765, column: 23, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4510, file: !939, line: 2764, column: 24)
!4514 = !DILocation(line: 2765, column: 25, scope: !4513)
!4515 = !DILocation(line: 2765, column: 30, scope: !4513)
!4516 = !DILocation(line: 2766, column: 32, scope: !4513)
!4517 = !DILocation(line: 2766, column: 36, scope: !4513)
!4518 = !DILocation(line: 2766, column: 57, scope: !4513)
!4519 = !DILocation(line: 2766, column: 61, scope: !4513)
!4520 = !DILocation(line: 2767, column: 32, scope: !4513)
!4521 = !DILocation(line: 2766, column: 21, scope: !4513)
!4522 = !DILocation(line: 2768, column: 17, scope: !4513)
!4523 = !DILocation(line: 2769, column: 32, scope: !4524)
!4524 = distinct !DILexicalBlock(scope: !4510, file: !939, line: 2768, column: 24)
!4525 = !DILocation(line: 2769, column: 36, scope: !4524)
!4526 = !DILocation(line: 2769, column: 57, scope: !4524)
!4527 = !DILocation(line: 2769, column: 61, scope: !4524)
!4528 = !DILocation(line: 2770, column: 32, scope: !4524)
!4529 = !DILocation(line: 2769, column: 21, scope: !4524)
!4530 = !DILocation(line: 2773, column: 9, scope: !4402)
!4531 = !DILocation(line: 2775, column: 14, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4064, file: !939, line: 2775, column: 13)
!4533 = !DILocation(line: 2775, column: 19, scope: !4532)
!4534 = !DILocation(line: 2775, column: 13, scope: !4064)
!4535 = !DILocation(line: 2776, column: 54, scope: !4536)
!4536 = distinct !DILexicalBlock(scope: !4532, file: !939, line: 2775, column: 34)
!4537 = !DILocation(line: 2776, column: 19, scope: !4536)
!4538 = !DILocation(line: 2776, column: 17, scope: !4536)
!4539 = !DILocation(line: 2777, column: 17, scope: !4540)
!4540 = distinct !DILexicalBlock(scope: !4536, file: !939, line: 2777, column: 17)
!4541 = !DILocation(line: 2777, column: 21, scope: !4540)
!4542 = !DILocation(line: 2777, column: 17, scope: !4536)
!4543 = !DILocation(line: 2778, column: 17, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !4540, file: !939, line: 2777, column: 26)
!4545 = !DILocation(line: 2780, column: 9, scope: !4536)
!4546 = !DILocation(line: 2781, column: 48, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4532, file: !939, line: 2780, column: 16)
!4548 = !DILocation(line: 2781, column: 53, scope: !4547)
!4549 = !DILocation(line: 2781, column: 19, scope: !4547)
!4550 = !DILocation(line: 2781, column: 17, scope: !4547)
!4551 = !DILocation(line: 2782, column: 17, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4547, file: !939, line: 2782, column: 17)
!4553 = !DILocation(line: 2782, column: 21, scope: !4552)
!4554 = !DILocation(line: 2782, column: 17, scope: !4547)
!4555 = !DILocation(line: 2783, column: 17, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4552, file: !939, line: 2782, column: 26)
!4557 = !DILocation(line: 2786, column: 13, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4064, file: !939, line: 2786, column: 13)
!4559 = !DILocation(line: 2786, column: 17, scope: !4558)
!4560 = !DILocation(line: 2786, column: 13, scope: !4064)
!4561 = !DILocation(line: 2788, column: 17, scope: !4562)
!4562 = distinct !DILexicalBlock(scope: !4563, file: !939, line: 2788, column: 17)
!4563 = distinct !DILexicalBlock(scope: !4558, file: !939, line: 2786, column: 31)
!4564 = !DILocation(line: 2788, column: 22, scope: !4562)
!4565 = !DILocation(line: 2788, column: 28, scope: !4562)
!4566 = !DILocation(line: 2788, column: 17, scope: !4563)
!4567 = !DILocation(line: 2789, column: 29, scope: !4562)
!4568 = !DILocation(line: 2789, column: 17, scope: !4562)
!4569 = !DILocation(line: 2790, column: 40, scope: !4563)
!4570 = !DILocation(line: 2790, column: 44, scope: !4563)
!4571 = !DILocation(line: 2790, column: 33, scope: !4563)
!4572 = !DILocation(line: 2790, column: 64, scope: !4563)
!4573 = !DILocation(line: 2790, column: 57, scope: !4574)
!4574 = !DILexicalBlockFile(scope: !4563, file: !939, discriminator: 1)
!4575 = !DILocation(line: 2790, column: 55, scope: !4563)
!4576 = !DILocation(line: 2790, column: 77, scope: !4563)
!4577 = !DILocation(line: 2790, column: 31, scope: !4563)
!4578 = !DILocation(line: 2792, column: 42, scope: !4563)
!4579 = !DILocation(line: 2792, column: 32, scope: !4563)
!4580 = !DILocation(line: 2792, column: 13, scope: !4563)
!4581 = !DILocation(line: 2792, column: 17, scope: !4563)
!4582 = !DILocation(line: 2792, column: 30, scope: !4563)
!4583 = !DILocation(line: 2793, column: 18, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4563, file: !939, line: 2793, column: 17)
!4585 = !DILocation(line: 2793, column: 22, scope: !4584)
!4586 = !DILocation(line: 2793, column: 17, scope: !4563)
!4587 = !DILocation(line: 2794, column: 21, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4584, file: !939, line: 2793, column: 36)
!4589 = !DILocation(line: 2795, column: 17, scope: !4588)
!4590 = !DILocation(line: 2797, column: 43, scope: !4563)
!4591 = !DILocation(line: 2797, column: 33, scope: !4563)
!4592 = !DILocation(line: 2797, column: 13, scope: !4563)
!4593 = !DILocation(line: 2797, column: 17, scope: !4563)
!4594 = !DILocation(line: 2797, column: 31, scope: !4563)
!4595 = !DILocation(line: 2798, column: 18, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4563, file: !939, line: 2798, column: 17)
!4597 = !DILocation(line: 2798, column: 22, scope: !4596)
!4598 = !DILocation(line: 2798, column: 17, scope: !4563)
!4599 = !DILocation(line: 2799, column: 21, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4596, file: !939, line: 2798, column: 38)
!4601 = !DILocation(line: 2800, column: 17, scope: !4600)
!4602 = !DILocation(line: 2802, column: 24, scope: !4563)
!4603 = !DILocation(line: 2802, column: 28, scope: !4563)
!4604 = !DILocation(line: 2802, column: 42, scope: !4563)
!4605 = !DILocation(line: 2802, column: 46, scope: !4563)
!4606 = !DILocation(line: 2802, column: 57, scope: !4563)
!4607 = !DILocation(line: 2802, column: 13, scope: !4563)
!4608 = !DILocation(line: 2803, column: 25, scope: !4563)
!4609 = !DILocation(line: 2803, column: 29, scope: !4563)
!4610 = !DILocation(line: 2803, column: 17, scope: !4563)
!4611 = !DILocation(line: 2803, column: 15, scope: !4563)
!4612 = !DILocation(line: 2804, column: 17, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4563, file: !939, line: 2804, column: 17)
!4614 = !DILocation(line: 2804, column: 17, scope: !4563)
!4615 = !DILocation(line: 2805, column: 18, scope: !4613)
!4616 = !DILocation(line: 2805, column: 20, scope: !4613)
!4617 = !DILocation(line: 2805, column: 17, scope: !4613)
!4618 = !DILocation(line: 2807, column: 18, scope: !4619)
!4619 = distinct !DILexicalBlock(scope: !4563, file: !939, line: 2807, column: 18)
!4620 = !DILocation(line: 2807, column: 23, scope: !4619)
!4621 = !DILocation(line: 2807, column: 18, scope: !4563)
!4622 = !DILocation(line: 2808, column: 24, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4619, file: !939, line: 2807, column: 43)
!4624 = !DILocation(line: 2808, column: 28, scope: !4623)
!4625 = !DILocation(line: 2808, column: 43, scope: !4623)
!4626 = !DILocation(line: 2808, column: 48, scope: !4623)
!4627 = !DILocation(line: 2808, column: 17, scope: !4623)
!4628 = !DILocation(line: 2809, column: 35, scope: !4623)
!4629 = !DILocation(line: 2809, column: 39, scope: !4623)
!4630 = !DILocation(line: 2809, column: 54, scope: !4623)
!4631 = !DILocation(line: 2809, column: 73, scope: !4623)
!4632 = !DILocation(line: 2809, column: 23, scope: !4623)
!4633 = !DILocation(line: 2809, column: 21, scope: !4623)
!4634 = !DILocation(line: 2810, column: 21, scope: !4635)
!4635 = distinct !DILexicalBlock(scope: !4623, file: !939, line: 2810, column: 21)
!4636 = !DILocation(line: 2810, column: 25, scope: !4635)
!4637 = !DILocation(line: 2810, column: 21, scope: !4623)
!4638 = !DILocation(line: 2811, column: 21, scope: !4635)
!4639 = !DILocation(line: 2812, column: 13, scope: !4623)
!4640 = !DILocation(line: 2813, column: 24, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4619, file: !939, line: 2812, column: 20)
!4642 = !DILocation(line: 2813, column: 28, scope: !4641)
!4643 = !DILocation(line: 2813, column: 43, scope: !4641)
!4644 = !DILocation(line: 2813, column: 47, scope: !4641)
!4645 = !DILocation(line: 2813, column: 17, scope: !4641)
!4646 = !DILocation(line: 2814, column: 28, scope: !4641)
!4647 = !DILocation(line: 2814, column: 32, scope: !4641)
!4648 = !DILocation(line: 2814, column: 60, scope: !4641)
!4649 = !DILocation(line: 2814, column: 17, scope: !4641)
!4650 = !DILocation(line: 2816, column: 24, scope: !4563)
!4651 = !DILocation(line: 2816, column: 28, scope: !4563)
!4652 = !DILocation(line: 2816, column: 42, scope: !4563)
!4653 = !DILocation(line: 2816, column: 55, scope: !4563)
!4654 = !DILocation(line: 2816, column: 13, scope: !4563)
!4655 = !DILocation(line: 2817, column: 9, scope: !4563)
!4656 = !DILocation(line: 2819, column: 13, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4064, file: !939, line: 2819, column: 13)
!4658 = !DILocation(line: 2819, column: 18, scope: !4657)
!4659 = !DILocation(line: 2819, column: 13, scope: !4064)
!4660 = !DILocation(line: 2820, column: 37, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4657, file: !939, line: 2819, column: 27)
!4662 = !DILocation(line: 2820, column: 42, scope: !4661)
!4663 = !DILocation(line: 2820, column: 27, scope: !4661)
!4664 = !DILocation(line: 2820, column: 13, scope: !4661)
!4665 = !DILocation(line: 2820, column: 17, scope: !4661)
!4666 = !DILocation(line: 2820, column: 25, scope: !4661)
!4667 = !DILocation(line: 2821, column: 18, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4661, file: !939, line: 2821, column: 17)
!4669 = !DILocation(line: 2821, column: 22, scope: !4668)
!4670 = !DILocation(line: 2821, column: 17, scope: !4661)
!4671 = !DILocation(line: 2822, column: 21, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4668, file: !939, line: 2821, column: 31)
!4673 = !DILocation(line: 2823, column: 17, scope: !4672)
!4674 = !DILocation(line: 2825, column: 9, scope: !4661)
!4675 = !DILocation(line: 2827, column: 33, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4064, file: !939, line: 2827, column: 13)
!4677 = !DILocation(line: 2827, column: 36, scope: !4676)
!4678 = !DILocation(line: 2827, column: 20, scope: !4676)
!4679 = !DILocation(line: 2827, column: 18, scope: !4676)
!4680 = !DILocation(line: 2827, column: 41, scope: !4676)
!4681 = !DILocation(line: 2827, column: 13, scope: !4064)
!4682 = !DILocation(line: 2828, column: 13, scope: !4676)
!4683 = !DILocation(line: 2830, column: 13, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4064, file: !939, line: 2830, column: 13)
!4685 = !DILocation(line: 2830, column: 18, scope: !4684)
!4686 = !DILocation(line: 2830, column: 24, scope: !4684)
!4687 = !DILocation(line: 2830, column: 13, scope: !4064)
!4688 = !DILocation(line: 2831, column: 28, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4684, file: !939, line: 2830, column: 43)
!4690 = !DILocation(line: 2831, column: 31, scope: !4689)
!4691 = !DILocation(line: 2831, column: 35, scope: !4689)
!4692 = !DILocation(line: 2831, column: 46, scope: !4689)
!4693 = !DILocation(line: 2831, column: 13, scope: !4689)
!4694 = !DILocation(line: 2832, column: 13, scope: !4689)
!4695 = !DILocation(line: 2832, column: 17, scope: !4689)
!4696 = !DILocation(line: 2832, column: 31, scope: !4689)
!4697 = !DILocation(line: 2833, column: 17, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !4689, file: !939, line: 2833, column: 17)
!4699 = !DILocation(line: 2833, column: 22, scope: !4698)
!4700 = !DILocation(line: 2833, column: 32, scope: !4698)
!4701 = !DILocation(line: 2833, column: 17, scope: !4689)
!4702 = !DILocation(line: 2834, column: 24, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4698, file: !939, line: 2833, column: 37)
!4704 = !DILocation(line: 2834, column: 17, scope: !4703)
!4705 = !DILocation(line: 2836, column: 17, scope: !4703)
!4706 = !DILocation(line: 2836, column: 22, scope: !4703)
!4707 = !DILocation(line: 2836, column: 32, scope: !4703)
!4708 = !DILocation(line: 2837, column: 39, scope: !4703)
!4709 = !DILocation(line: 2837, column: 44, scope: !4703)
!4710 = !DILocation(line: 2837, column: 49, scope: !4703)
!4711 = !DILocation(line: 2837, column: 17, scope: !4703)
!4712 = !DILocation(line: 2837, column: 22, scope: !4703)
!4713 = !DILocation(line: 2837, column: 37, scope: !4703)
!4714 = !DILocation(line: 2838, column: 13, scope: !4703)
!4715 = !DILocation(line: 2839, column: 9, scope: !4689)
!4716 = !DILocation(line: 2841, column: 30, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4064, file: !939, line: 2841, column: 13)
!4718 = !DILocation(line: 2841, column: 33, scope: !4717)
!4719 = !DILocation(line: 2841, column: 20, scope: !4717)
!4720 = !DILocation(line: 2841, column: 18, scope: !4717)
!4721 = !DILocation(line: 2841, column: 38, scope: !4717)
!4722 = !DILocation(line: 2841, column: 13, scope: !4064)
!4723 = !DILocation(line: 2842, column: 13, scope: !4717)
!4724 = !DILocation(line: 2843, column: 5, scope: !4064)
!4725 = !DILocation(line: 2612, column: 42, scope: !4726)
!4726 = !DILexicalBlockFile(scope: !4058, file: !939, discriminator: 2)
!4727 = !DILocation(line: 2612, column: 5, scope: !4726)
!4728 = distinct !{!4728, !4729}
!4729 = !DILocation(line: 2612, column: 5, scope: !3800)
!4730 = !DILocation(line: 2843, column: 5, scope: !4731)
!4731 = !DILexicalBlockFile(scope: !4054, file: !939, discriminator: 1)
!4732 = !DILocation(line: 2846, column: 9, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !3800, file: !939, line: 2846, column: 9)
!4734 = !DILocation(line: 2846, column: 13, scope: !4733)
!4735 = !DILocation(line: 2846, column: 9, scope: !3800)
!4736 = !DILocation(line: 2847, column: 19, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4733, file: !939, line: 2846, column: 18)
!4738 = !DILocation(line: 2847, column: 24, scope: !4737)
!4739 = !DILocation(line: 2847, column: 18, scope: !4737)
!4740 = !DILocation(line: 2847, column: 9, scope: !4737)
!4741 = !DILocation(line: 2848, column: 16, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4737, file: !939, line: 2848, column: 9)
!4743 = !DILocation(line: 2848, column: 14, scope: !4742)
!4744 = !DILocation(line: 2848, column: 21, scope: !4745)
!4745 = !DILexicalBlockFile(scope: !4746, file: !939, discriminator: 1)
!4746 = distinct !DILexicalBlock(scope: !4742, file: !939, line: 2848, column: 9)
!4747 = !DILocation(line: 2848, column: 25, scope: !4745)
!4748 = !DILocation(line: 2848, column: 30, scope: !4745)
!4749 = !DILocation(line: 2848, column: 23, scope: !4745)
!4750 = !DILocation(line: 2848, column: 44, scope: !4745)
!4751 = !DILocation(line: 2848, column: 47, scope: !4752)
!4752 = !DILexicalBlockFile(scope: !4746, file: !939, discriminator: 2)
!4753 = !DILocation(line: 2848, column: 52, scope: !4752)
!4754 = !DILocation(line: 2848, column: 44, scope: !4752)
!4755 = !DILocation(line: 2848, column: 9, scope: !4756)
!4756 = !DILexicalBlockFile(scope: !4742, file: !939, discriminator: 3)
!4757 = !DILocation(line: 2849, column: 36, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4746, file: !939, line: 2848, column: 70)
!4759 = !DILocation(line: 2849, column: 19, scope: !4758)
!4760 = !DILocation(line: 2849, column: 24, scope: !4758)
!4761 = !DILocation(line: 2849, column: 16, scope: !4758)
!4762 = !DILocation(line: 2850, column: 23, scope: !4758)
!4763 = !DILocation(line: 2850, column: 27, scope: !4758)
!4764 = !DILocation(line: 2850, column: 22, scope: !4758)
!4765 = !DILocation(line: 2850, column: 13, scope: !4758)
!4766 = !DILocation(line: 2851, column: 23, scope: !4758)
!4767 = !DILocation(line: 2851, column: 27, scope: !4758)
!4768 = !DILocation(line: 2851, column: 22, scope: !4758)
!4769 = !DILocation(line: 2851, column: 13, scope: !4758)
!4770 = !DILocation(line: 2852, column: 23, scope: !4758)
!4771 = !DILocation(line: 2852, column: 27, scope: !4758)
!4772 = !DILocation(line: 2852, column: 22, scope: !4758)
!4773 = !DILocation(line: 2852, column: 13, scope: !4758)
!4774 = !DILocation(line: 2853, column: 23, scope: !4758)
!4775 = !DILocation(line: 2853, column: 27, scope: !4758)
!4776 = !DILocation(line: 2853, column: 22, scope: !4758)
!4777 = !DILocation(line: 2853, column: 13, scope: !4758)
!4778 = !DILocation(line: 2854, column: 23, scope: !4758)
!4779 = !DILocation(line: 2854, column: 27, scope: !4758)
!4780 = !DILocation(line: 2854, column: 22, scope: !4758)
!4781 = !DILocation(line: 2854, column: 13, scope: !4758)
!4782 = !DILocation(line: 2855, column: 23, scope: !4758)
!4783 = !DILocation(line: 2855, column: 27, scope: !4758)
!4784 = !DILocation(line: 2855, column: 22, scope: !4758)
!4785 = !DILocation(line: 2855, column: 13, scope: !4758)
!4786 = !DILocation(line: 2856, column: 23, scope: !4758)
!4787 = !DILocation(line: 2856, column: 27, scope: !4758)
!4788 = !DILocation(line: 2856, column: 22, scope: !4758)
!4789 = !DILocation(line: 2856, column: 13, scope: !4758)
!4790 = !DILocation(line: 2857, column: 23, scope: !4758)
!4791 = !DILocation(line: 2857, column: 27, scope: !4758)
!4792 = !DILocation(line: 2857, column: 22, scope: !4758)
!4793 = !DILocation(line: 2857, column: 13, scope: !4758)
!4794 = !DILocation(line: 2858, column: 23, scope: !4758)
!4795 = !DILocation(line: 2858, column: 27, scope: !4758)
!4796 = !DILocation(line: 2858, column: 22, scope: !4758)
!4797 = !DILocation(line: 2858, column: 13, scope: !4758)
!4798 = !DILocation(line: 2859, column: 23, scope: !4758)
!4799 = !DILocation(line: 2859, column: 27, scope: !4758)
!4800 = !DILocation(line: 2859, column: 22, scope: !4758)
!4801 = !DILocation(line: 2859, column: 13, scope: !4758)
!4802 = !DILocation(line: 2860, column: 17, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4758, file: !939, line: 2860, column: 17)
!4804 = !DILocation(line: 2860, column: 21, scope: !4803)
!4805 = !DILocation(line: 2860, column: 17, scope: !4758)
!4806 = !DILocation(line: 2861, column: 39, scope: !4803)
!4807 = !DILocation(line: 2861, column: 43, scope: !4803)
!4808 = !DILocation(line: 2861, column: 17, scope: !4803)
!4809 = !DILocation(line: 2862, column: 17, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4758, file: !939, line: 2862, column: 17)
!4811 = !DILocation(line: 2862, column: 21, scope: !4810)
!4812 = !DILocation(line: 2862, column: 17, scope: !4758)
!4813 = !DILocation(line: 2863, column: 39, scope: !4810)
!4814 = !DILocation(line: 2863, column: 43, scope: !4810)
!4815 = !DILocation(line: 2863, column: 17, scope: !4810)
!4816 = !DILocation(line: 2864, column: 9, scope: !4758)
!4817 = !DILocation(line: 2848, column: 66, scope: !4818)
!4818 = !DILexicalBlockFile(scope: !4746, file: !939, discriminator: 4)
!4819 = !DILocation(line: 2848, column: 9, scope: !4818)
!4820 = distinct !{!4820, !4821}
!4821 = !DILocation(line: 2848, column: 9, scope: !4737)
!4822 = !DILocation(line: 2865, column: 16, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4737, file: !939, line: 2865, column: 9)
!4824 = !DILocation(line: 2865, column: 14, scope: !4823)
!4825 = !DILocation(line: 2865, column: 21, scope: !4826)
!4826 = !DILexicalBlockFile(scope: !4827, file: !939, discriminator: 1)
!4827 = distinct !DILexicalBlock(scope: !4823, file: !939, line: 2865, column: 9)
!4828 = !DILocation(line: 2865, column: 25, scope: !4826)
!4829 = !DILocation(line: 2865, column: 30, scope: !4826)
!4830 = !DILocation(line: 2865, column: 23, scope: !4826)
!4831 = !DILocation(line: 2865, column: 9, scope: !4826)
!4832 = !DILocalVariable(name: "ccs", scope: !4833, file: !939, line: 2866, type: !2382)
!4833 = distinct !DILexicalBlock(scope: !4827, file: !939, line: 2865, column: 49)
!4834 = !DILocation(line: 2866, column: 35, scope: !4833)
!4835 = !DILocation(line: 2866, column: 58, scope: !4833)
!4836 = !DILocation(line: 2866, column: 42, scope: !4833)
!4837 = !DILocation(line: 2866, column: 47, scope: !4833)
!4838 = !DILocation(line: 2867, column: 23, scope: !4833)
!4839 = !DILocation(line: 2867, column: 28, scope: !4833)
!4840 = !DILocation(line: 2867, column: 22, scope: !4833)
!4841 = !DILocation(line: 2867, column: 13, scope: !4833)
!4842 = !DILocation(line: 2868, column: 23, scope: !4833)
!4843 = !DILocation(line: 2868, column: 28, scope: !4833)
!4844 = !DILocation(line: 2868, column: 22, scope: !4833)
!4845 = !DILocation(line: 2868, column: 13, scope: !4833)
!4846 = !DILocation(line: 2869, column: 23, scope: !4833)
!4847 = !DILocation(line: 2869, column: 28, scope: !4833)
!4848 = !DILocation(line: 2869, column: 22, scope: !4833)
!4849 = !DILocation(line: 2869, column: 13, scope: !4833)
!4850 = !DILocation(line: 2870, column: 9, scope: !4833)
!4851 = !DILocation(line: 2865, column: 45, scope: !4852)
!4852 = !DILexicalBlockFile(scope: !4827, file: !939, discriminator: 2)
!4853 = !DILocation(line: 2865, column: 9, scope: !4852)
!4854 = distinct !{!4854, !4855}
!4855 = !DILocation(line: 2865, column: 9, scope: !4737)
!4856 = !DILocation(line: 2871, column: 19, scope: !4737)
!4857 = !DILocation(line: 2871, column: 24, scope: !4737)
!4858 = !DILocation(line: 2871, column: 18, scope: !4737)
!4859 = !DILocation(line: 2871, column: 9, scope: !4737)
!4860 = !DILocation(line: 2872, column: 19, scope: !4737)
!4861 = !DILocation(line: 2872, column: 24, scope: !4737)
!4862 = !DILocation(line: 2872, column: 18, scope: !4737)
!4863 = !DILocation(line: 2872, column: 9, scope: !4737)
!4864 = !DILocation(line: 2873, column: 19, scope: !4737)
!4865 = !DILocation(line: 2873, column: 24, scope: !4737)
!4866 = !DILocation(line: 2873, column: 18, scope: !4737)
!4867 = !DILocation(line: 2873, column: 9, scope: !4737)
!4868 = !DILocation(line: 2874, column: 5, scope: !4737)
!4869 = !DILocation(line: 2876, column: 12, scope: !3800)
!4870 = !DILocation(line: 2876, column: 5, scope: !3800)
!4871 = !DILocation(line: 2877, column: 1, scope: !3800)
!4872 = distinct !DISubprogram(name: "write_codec_attr", scope: !939, file: !939, line: 292, type: !4873, isLocal: true, isDefinition: true, scopeLine: 292, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!4873 = !DISubroutineType(types: !4874)
!4874 = !{null, !1308, !2274}
!4875 = !DILocalVariable(name: "st", arg: 1, scope: !4872, file: !939, line: 292, type: !1308)
!4876 = !DILocation(line: 292, column: 40, scope: !4872)
!4877 = !DILocalVariable(name: "vs", arg: 2, scope: !4872, file: !939, line: 292, type: !2274)
!4878 = !DILocation(line: 292, column: 59, scope: !4872)
!4879 = !DILocalVariable(name: "codec_strlen", scope: !4872, file: !939, line: 293, type: !981)
!4880 = !DILocation(line: 293, column: 9, scope: !4872)
!4881 = !DILocation(line: 293, column: 31, scope: !4872)
!4882 = !DILocation(line: 293, column: 35, scope: !4872)
!4883 = !DILocation(line: 293, column: 24, scope: !4872)
!4884 = !DILocalVariable(name: "attr", scope: !4872, file: !939, line: 294, type: !4885)
!4885 = !DICompositeType(tag: DW_TAG_array_type, baseType: !989, size: 256, align: 8, elements: !4886)
!4886 = !{!4887}
!4887 = !DISubrange(count: 32)
!4888 = !DILocation(line: 294, column: 10, scope: !4872)
!4889 = !DILocation(line: 296, column: 9, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4872, file: !939, line: 296, column: 9)
!4891 = !DILocation(line: 296, column: 13, scope: !4890)
!4892 = !DILocation(line: 296, column: 23, scope: !4890)
!4893 = !DILocation(line: 296, column: 34, scope: !4890)
!4894 = !DILocation(line: 296, column: 9, scope: !4872)
!4895 = !DILocation(line: 297, column: 9, scope: !4890)
!4896 = !DILocation(line: 298, column: 9, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4872, file: !939, line: 298, column: 9)
!4898 = !DILocation(line: 298, column: 13, scope: !4897)
!4899 = !DILocation(line: 298, column: 25, scope: !4897)
!4900 = !DILocation(line: 298, column: 9, scope: !4872)
!4901 = !DILocation(line: 299, column: 9, scope: !4897)
!4902 = !DILocation(line: 301, column: 9, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4872, file: !939, line: 301, column: 9)
!4904 = !DILocation(line: 301, column: 13, scope: !4903)
!4905 = !DILocation(line: 301, column: 23, scope: !4903)
!4906 = !DILocation(line: 301, column: 32, scope: !4903)
!4907 = !DILocation(line: 301, column: 9, scope: !4872)
!4908 = !DILocalVariable(name: "data", scope: !4909, file: !939, line: 302, type: !1187)
!4909 = distinct !DILexicalBlock(scope: !4903, file: !939, line: 301, column: 53)
!4910 = !DILocation(line: 302, column: 18, scope: !4909)
!4911 = !DILocation(line: 302, column: 25, scope: !4909)
!4912 = !DILocation(line: 302, column: 29, scope: !4909)
!4913 = !DILocation(line: 302, column: 39, scope: !4909)
!4914 = !DILocation(line: 303, column: 13, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4909, file: !939, line: 303, column: 13)
!4916 = !DILocation(line: 303, column: 18, scope: !4915)
!4917 = !DILocation(line: 303, column: 22, scope: !4918)
!4918 = !DILexicalBlockFile(scope: !4915, file: !939, discriminator: 1)
!4919 = !DILocation(line: 303, column: 32, scope: !4918)
!4920 = !DILocation(line: 303, column: 30, scope: !4918)
!4921 = !DILocation(line: 303, column: 42, scope: !4918)
!4922 = !DILocation(line: 303, column: 40, scope: !4918)
!4923 = !DILocation(line: 303, column: 51, scope: !4918)
!4924 = !DILocation(line: 303, column: 56, scope: !4918)
!4925 = !DILocation(line: 303, column: 59, scope: !4926)
!4926 = !DILexicalBlockFile(scope: !4915, file: !939, discriminator: 2)
!4927 = !DILocation(line: 303, column: 67, scope: !4926)
!4928 = !DILocation(line: 303, column: 72, scope: !4926)
!4929 = !DILocation(line: 303, column: 76, scope: !4930)
!4930 = !DILexicalBlockFile(scope: !4915, file: !939, discriminator: 3)
!4931 = !DILocation(line: 303, column: 84, scope: !4930)
!4932 = !DILocation(line: 303, column: 92, scope: !4930)
!4933 = !DILocation(line: 303, column: 13, scope: !4930)
!4934 = !DILocation(line: 304, column: 22, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4915, file: !939, line: 303, column: 98)
!4936 = !DILocation(line: 305, column: 43, scope: !4935)
!4937 = !DILocation(line: 305, column: 52, scope: !4935)
!4938 = !DILocation(line: 305, column: 61, scope: !4935)
!4939 = !DILocation(line: 304, column: 13, scope: !4935)
!4940 = !DILocation(line: 306, column: 9, scope: !4935)
!4941 = !DILocation(line: 307, column: 13, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4915, file: !939, line: 306, column: 16)
!4943 = !DILocation(line: 309, column: 5, scope: !4909)
!4944 = !DILocation(line: 309, column: 16, scope: !4945)
!4945 = !DILexicalBlockFile(scope: !4946, file: !939, discriminator: 1)
!4946 = distinct !DILexicalBlock(scope: !4903, file: !939, line: 309, column: 16)
!4947 = !DILocation(line: 309, column: 20, scope: !4945)
!4948 = !DILocation(line: 309, column: 30, scope: !4945)
!4949 = !DILocation(line: 309, column: 39, scope: !4945)
!4950 = !DILocation(line: 310, column: 18, scope: !4951)
!4951 = distinct !DILexicalBlock(scope: !4946, file: !939, line: 309, column: 59)
!4952 = !DILocation(line: 310, column: 9, scope: !4951)
!4953 = !DILocation(line: 311, column: 5, scope: !4951)
!4954 = !DILocation(line: 311, column: 16, scope: !4955)
!4955 = !DILexicalBlockFile(scope: !4956, file: !939, discriminator: 1)
!4956 = distinct !DILexicalBlock(scope: !4946, file: !939, line: 311, column: 16)
!4957 = !DILocation(line: 311, column: 20, scope: !4955)
!4958 = !DILocation(line: 311, column: 30, scope: !4955)
!4959 = !DILocation(line: 311, column: 39, scope: !4955)
!4960 = !DILocation(line: 312, column: 18, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4956, file: !939, line: 311, column: 59)
!4962 = !DILocation(line: 312, column: 9, scope: !4961)
!4963 = !DILocation(line: 313, column: 5, scope: !4961)
!4964 = !DILocation(line: 313, column: 16, scope: !4965)
!4965 = !DILexicalBlockFile(scope: !4966, file: !939, discriminator: 1)
!4966 = distinct !DILexicalBlock(scope: !4956, file: !939, line: 313, column: 16)
!4967 = !DILocation(line: 313, column: 20, scope: !4965)
!4968 = !DILocation(line: 313, column: 30, scope: !4965)
!4969 = !DILocation(line: 313, column: 39, scope: !4965)
!4970 = !DILocation(line: 315, column: 18, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4966, file: !939, line: 313, column: 59)
!4972 = !DILocation(line: 315, column: 9, scope: !4971)
!4973 = !DILocation(line: 316, column: 5, scope: !4971)
!4974 = !DILocation(line: 316, column: 16, scope: !4975)
!4975 = !DILexicalBlockFile(scope: !4976, file: !939, discriminator: 1)
!4976 = distinct !DILexicalBlock(scope: !4966, file: !939, line: 316, column: 16)
!4977 = !DILocation(line: 316, column: 20, scope: !4975)
!4978 = !DILocation(line: 316, column: 30, scope: !4975)
!4979 = !DILocation(line: 316, column: 39, scope: !4975)
!4980 = !DILocation(line: 317, column: 18, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4976, file: !939, line: 316, column: 59)
!4982 = !DILocation(line: 317, column: 9, scope: !4981)
!4983 = !DILocation(line: 318, column: 5, scope: !4981)
!4984 = !DILocation(line: 318, column: 16, scope: !4985)
!4985 = !DILexicalBlockFile(scope: !4986, file: !939, discriminator: 1)
!4986 = distinct !DILexicalBlock(scope: !4976, file: !939, line: 318, column: 16)
!4987 = !DILocation(line: 318, column: 20, scope: !4985)
!4988 = !DILocation(line: 318, column: 30, scope: !4985)
!4989 = !DILocation(line: 318, column: 39, scope: !4985)
!4990 = !DILocation(line: 319, column: 18, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !4986, file: !939, line: 318, column: 60)
!4992 = !DILocation(line: 319, column: 9, scope: !4991)
!4993 = !DILocation(line: 320, column: 5, scope: !4991)
!4994 = !DILocation(line: 321, column: 9, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4986, file: !939, line: 320, column: 12)
!4996 = !DILocation(line: 324, column: 21, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4872, file: !939, line: 324, column: 9)
!4998 = !DILocation(line: 324, column: 25, scope: !4997)
!4999 = !DILocation(line: 324, column: 37, scope: !4997)
!5000 = !DILocation(line: 324, column: 10, scope: !4997)
!5001 = !DILocation(line: 324, column: 9, scope: !4872)
!5002 = !DILocation(line: 325, column: 18, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4997, file: !939, line: 324, column: 44)
!5004 = !DILocation(line: 325, column: 22, scope: !5003)
!5005 = !DILocation(line: 325, column: 35, scope: !5003)
!5006 = !DILocation(line: 325, column: 33, scope: !5003)
!5007 = !DILocation(line: 326, column: 43, scope: !5003)
!5008 = !DILocation(line: 326, column: 41, scope: !5003)
!5009 = !DILocation(line: 327, column: 26, scope: !5003)
!5010 = !DILocation(line: 327, column: 51, scope: !5003)
!5011 = !DILocation(line: 325, column: 9, scope: !5003)
!5012 = !DILocation(line: 328, column: 5, scope: !5003)
!5013 = !DILocation(line: 329, column: 5, scope: !4872)
!5014 = !DILocation(line: 332, column: 5, scope: !4872)
!5015 = !DILocation(line: 332, column: 9, scope: !4872)
!5016 = !DILocation(line: 332, column: 23, scope: !4872)
!5017 = !DILocation(line: 333, column: 5, scope: !4872)
!5018 = !DILocation(line: 333, column: 9, scope: !4872)
!5019 = !DILocation(line: 333, column: 21, scope: !4872)
!5020 = !DILocation(line: 334, column: 5, scope: !4872)
!5021 = !DILocation(line: 335, column: 1, scope: !4872)
!5022 = distinct !DISubprogram(name: "hlsenc_io_close", scope: !939, file: !939, line: 257, type: !5023, isLocal: true, isDefinition: true, scopeLine: 257, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!5023 = !DISubroutineType(types: !5024)
!5024 = !{null, !2272, !2210, !1008}
!5025 = !DILocalVariable(name: "s", arg: 1, scope: !5022, file: !939, line: 257, type: !2272)
!5026 = !DILocation(line: 257, column: 46, scope: !5022)
!5027 = !DILocalVariable(name: "pb", arg: 2, scope: !5022, file: !939, line: 257, type: !2210)
!5028 = !DILocation(line: 257, column: 63, scope: !5022)
!5029 = !DILocalVariable(name: "filename", arg: 3, scope: !5022, file: !939, line: 257, type: !1008)
!5030 = !DILocation(line: 257, column: 73, scope: !5022)
!5031 = !DILocalVariable(name: "hls", scope: !5022, file: !939, line: 258, type: !2338)
!5032 = !DILocation(line: 258, column: 17, scope: !5022)
!5033 = !DILocation(line: 258, column: 23, scope: !5022)
!5034 = !DILocation(line: 258, column: 26, scope: !5022)
!5035 = !DILocalVariable(name: "http_base_proto", scope: !5022, file: !939, line: 259, type: !981)
!5036 = !DILocation(line: 259, column: 9, scope: !5022)
!5037 = !DILocation(line: 259, column: 27, scope: !5022)
!5038 = !DILocation(line: 259, column: 55, scope: !5039)
!5039 = !DILexicalBlockFile(scope: !5022, file: !939, discriminator: 1)
!5040 = !DILocation(line: 259, column: 38, scope: !5039)
!5041 = !DILocation(line: 259, column: 27, scope: !5039)
!5042 = !DILocation(line: 259, column: 27, scope: !5043)
!5043 = !DILexicalBlockFile(scope: !5022, file: !939, discriminator: 2)
!5044 = !DILocation(line: 259, column: 27, scope: !5045)
!5045 = !DILexicalBlockFile(scope: !5022, file: !939, discriminator: 3)
!5046 = !DILocation(line: 259, column: 9, scope: !5045)
!5047 = !DILocation(line: 260, column: 11, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5022, file: !939, line: 260, column: 9)
!5049 = !DILocation(line: 260, column: 10, scope: !5048)
!5050 = !DILocation(line: 260, column: 9, scope: !5022)
!5051 = !DILocation(line: 261, column: 9, scope: !5048)
!5052 = !DILocation(line: 262, column: 10, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !5022, file: !939, line: 262, column: 9)
!5054 = !DILocation(line: 262, column: 26, scope: !5053)
!5055 = !DILocation(line: 262, column: 30, scope: !5056)
!5056 = !DILexicalBlockFile(scope: !5053, file: !939, discriminator: 1)
!5057 = !DILocation(line: 262, column: 35, scope: !5056)
!5058 = !DILocation(line: 262, column: 51, scope: !5056)
!5059 = !DILocation(line: 262, column: 54, scope: !5060)
!5060 = !DILexicalBlockFile(scope: !5053, file: !939, discriminator: 2)
!5061 = !DILocation(line: 262, column: 59, scope: !5060)
!5062 = !DILocation(line: 262, column: 73, scope: !5060)
!5063 = !DILocation(line: 262, column: 76, scope: !5064)
!5064 = !DILexicalBlockFile(scope: !5053, file: !939, discriminator: 3)
!5065 = !DILocation(line: 262, column: 81, scope: !5064)
!5066 = !DILocation(line: 262, column: 9, scope: !5064)
!5067 = !DILocation(line: 263, column: 28, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !5053, file: !939, line: 262, column: 90)
!5069 = !DILocation(line: 263, column: 31, scope: !5068)
!5070 = !DILocation(line: 263, column: 9, scope: !5068)
!5071 = !DILocation(line: 265, column: 5, scope: !5068)
!5072 = !DILocalVariable(name: "http_url_context", scope: !5073, file: !939, line: 266, type: !5074)
!5073 = distinct !DILexicalBlock(scope: !5053, file: !939, line: 265, column: 12)
!5074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5075, size: 64, align: 64)
!5075 = !DIDerivedType(tag: DW_TAG_typedef, name: "URLContext", file: !5076, line: 52, baseType: !5077)
!5076 = !DIFile(filename: "libavformat/url.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "URLContext", file: !5076, line: 38, size: 768, align: 64, elements: !5078)
!5078 = !{!5079, !5080, !5165, !5166, !5167, !5168, !5169, !5170, !5171, !5172, !5173, !5174, !5175}
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !5077, file: !5076, line: 39, baseType: !1051, size: 64, align: 64)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "prot", scope: !5077, file: !5076, line: 40, baseType: !5081, size: 64, align: 64, offset: 64)
!5081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5082, size: 64, align: 64)
!5082 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5083)
!5083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "URLProtocol", file: !5076, line: 54, size: 1600, align: 64, elements: !5084)
!5084 = !{!5085, !5086, !5090, !5094, !5099, !5103, !5107, !5113, !5117, !5118, !5122, !5126, !5127, !5132, !5133, !5134, !5135, !5136, !5137, !5138, !5139, !5158, !5159, !5160, !5164}
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5083, file: !5076, line: 55, baseType: !1031, size: 64, align: 64)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "url_open", scope: !5083, file: !5076, line: 56, baseType: !5087, size: 64, align: 64, offset: 64)
!5087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5088, size: 64, align: 64)
!5088 = !DISubroutineType(types: !5089)
!5089 = !{!981, !5074, !1031, !981}
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "url_open2", scope: !5083, file: !5076, line: 62, baseType: !5091, size: 64, align: 64, offset: 128)
!5091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5092, size: 64, align: 64)
!5092 = !DISubroutineType(types: !5093)
!5093 = !{!981, !5074, !1031, !981, !2213}
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "url_accept", scope: !5083, file: !5076, line: 63, baseType: !5095, size: 64, align: 64, offset: 192)
!5095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5096, size: 64, align: 64)
!5096 = !DISubroutineType(types: !5097)
!5097 = !{!981, !5074, !5098}
!5098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5074, size: 64, align: 64)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "url_handshake", scope: !5083, file: !5076, line: 64, baseType: !5100, size: 64, align: 64, offset: 256)
!5100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5101, size: 64, align: 64)
!5101 = !DISubroutineType(types: !5102)
!5102 = !{!981, !5074}
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "url_read", scope: !5083, file: !5076, line: 78, baseType: !5104, size: 64, align: 64, offset: 320)
!5104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5105, size: 64, align: 64)
!5105 = !DISubroutineType(types: !5106)
!5106 = !{!981, !5074, !1163, !981}
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "url_write", scope: !5083, file: !5076, line: 79, baseType: !5108, size: 64, align: 64, offset: 384)
!5108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5109, size: 64, align: 64)
!5109 = !DISubroutineType(types: !5110)
!5110 = !{!981, !5074, !5111, !981}
!5111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5112, size: 64, align: 64)
!5112 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1164)
!5113 = !DIDerivedType(tag: DW_TAG_member, name: "url_seek", scope: !5083, file: !5076, line: 80, baseType: !5114, size: 64, align: 64, offset: 448)
!5114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5115, size: 64, align: 64)
!5115 = !DISubroutineType(types: !5116)
!5116 = !{!976, !5074, !976, !981}
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "url_close", scope: !5083, file: !5076, line: 81, baseType: !5100, size: 64, align: 64, offset: 512)
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "url_read_pause", scope: !5083, file: !5076, line: 82, baseType: !5119, size: 64, align: 64, offset: 576)
!5119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5120, size: 64, align: 64)
!5120 = !DISubroutineType(types: !5121)
!5121 = !{!981, !5074, !981}
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "url_read_seek", scope: !5083, file: !5076, line: 83, baseType: !5123, size: 64, align: 64, offset: 640)
!5123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5124, size: 64, align: 64)
!5124 = !DISubroutineType(types: !5125)
!5125 = !{!976, !5074, !981, !976, !981}
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "url_get_file_handle", scope: !5083, file: !5076, line: 85, baseType: !5100, size: 64, align: 64, offset: 704)
!5127 = !DIDerivedType(tag: DW_TAG_member, name: "url_get_multi_file_handle", scope: !5083, file: !5076, line: 86, baseType: !5128, size: 64, align: 64, offset: 768)
!5128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5129, size: 64, align: 64)
!5129 = !DISubroutineType(types: !5130)
!5130 = !{!981, !5074, !5131, !1514}
!5131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 64, align: 64)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "url_get_short_seek", scope: !5083, file: !5076, line: 88, baseType: !5100, size: 64, align: 64, offset: 832)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "url_shutdown", scope: !5083, file: !5076, line: 89, baseType: !5119, size: 64, align: 64, offset: 896)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !5083, file: !5076, line: 90, baseType: !981, size: 32, align: 32, offset: 960)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_class", scope: !5083, file: !5076, line: 91, baseType: !1051, size: 64, align: 64, offset: 1024)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5083, file: !5076, line: 92, baseType: !981, size: 32, align: 32, offset: 1088)
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "url_check", scope: !5083, file: !5076, line: 93, baseType: !5119, size: 64, align: 64, offset: 1152)
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "url_open_dir", scope: !5083, file: !5076, line: 94, baseType: !5100, size: 64, align: 64, offset: 1216)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "url_read_dir", scope: !5083, file: !5076, line: 95, baseType: !5140, size: 64, align: 64, offset: 1280)
!5140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5141, size: 64, align: 64)
!5141 = !DISubroutineType(types: !5142)
!5142 = !{!981, !5074, !5143}
!5143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5144, size: 64, align: 64)
!5144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5145, size: 64, align: 64)
!5145 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVIODirEntry", file: !537, line: 101, baseType: !5146)
!5146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVIODirEntry", file: !537, line: 86, size: 576, align: 64, elements: !5147)
!5147 = !{!5148, !5149, !5150, !5151, !5152, !5153, !5154, !5155, !5156, !5157}
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5146, file: !537, line: 87, baseType: !1008, size: 64, align: 64)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5146, file: !537, line: 88, baseType: !981, size: 32, align: 32, offset: 64)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "utf8", scope: !5146, file: !537, line: 89, baseType: !981, size: 32, align: 32, offset: 96)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5146, file: !537, line: 91, baseType: !976, size: 64, align: 64, offset: 128)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "modification_timestamp", scope: !5146, file: !537, line: 92, baseType: !976, size: 64, align: 64, offset: 192)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "access_timestamp", scope: !5146, file: !537, line: 94, baseType: !976, size: 64, align: 64, offset: 256)
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "status_change_timestamp", scope: !5146, file: !537, line: 96, baseType: !976, size: 64, align: 64, offset: 320)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "user_id", scope: !5146, file: !537, line: 98, baseType: !976, size: 64, align: 64, offset: 384)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "group_id", scope: !5146, file: !537, line: 99, baseType: !976, size: 64, align: 64, offset: 448)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "filemode", scope: !5146, file: !537, line: 100, baseType: !976, size: 64, align: 64, offset: 512)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "url_close_dir", scope: !5083, file: !5076, line: 96, baseType: !5100, size: 64, align: 64, offset: 1344)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "url_delete", scope: !5083, file: !5076, line: 97, baseType: !5100, size: 64, align: 64, offset: 1408)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "url_move", scope: !5083, file: !5076, line: 98, baseType: !5161, size: 64, align: 64, offset: 1472)
!5161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5162, size: 64, align: 64)
!5162 = !DISubroutineType(types: !5163)
!5163 = !{!981, !5074, !5074}
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "default_whitelist", scope: !5083, file: !5076, line: 99, baseType: !1031, size: 64, align: 64, offset: 1536)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !5077, file: !5076, line: 41, baseType: !980, size: 64, align: 64, offset: 128)
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !5077, file: !5076, line: 42, baseType: !1008, size: 64, align: 64, offset: 192)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5077, file: !5076, line: 43, baseType: !981, size: 32, align: 32, offset: 256)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "max_packet_size", scope: !5077, file: !5076, line: 44, baseType: !981, size: 32, align: 32, offset: 288)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "is_streamed", scope: !5077, file: !5076, line: 45, baseType: !981, size: 32, align: 32, offset: 320)
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "is_connected", scope: !5077, file: !5076, line: 46, baseType: !981, size: 32, align: 32, offset: 352)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "interrupt_callback", scope: !5077, file: !5076, line: 47, baseType: !2139, size: 128, align: 64, offset: 384)
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "rw_timeout", scope: !5077, file: !5076, line: 48, baseType: !976, size: 64, align: 64, offset: 512)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_whitelist", scope: !5077, file: !5076, line: 49, baseType: !1031, size: 64, align: 64, offset: 576)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_blacklist", scope: !5077, file: !5076, line: 50, baseType: !1031, size: 64, align: 64, offset: 640)
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "min_packet_size", scope: !5077, file: !5076, line: 51, baseType: !981, size: 32, align: 32, offset: 704)
!5176 = !DILocation(line: 266, column: 21, scope: !5073)
!5177 = !DILocation(line: 266, column: 60, scope: !5073)
!5178 = !DILocation(line: 266, column: 59, scope: !5073)
!5179 = !DILocation(line: 266, column: 40, scope: !5073)
!5180 = !DILocation(line: 267, column: 9, scope: !5073)
!5181 = distinct !{!5181, !5180}
!5182 = !DILocation(line: 267, column: 20, scope: !5183)
!5183 = !DILexicalBlockFile(scope: !5184, file: !939, discriminator: 1)
!5184 = distinct !DILexicalBlock(scope: !5185, file: !939, line: 267, column: 18)
!5185 = distinct !DILexicalBlock(scope: !5073, file: !939, line: 267, column: 12)
!5186 = !DILocation(line: 267, column: 19, scope: !5183)
!5187 = !DILocation(line: 267, column: 18, scope: !5183)
!5188 = !DILocation(line: 267, column: 41, scope: !5189)
!5189 = !DILexicalBlockFile(scope: !5190, file: !939, discriminator: 2)
!5190 = distinct !DILexicalBlock(scope: !5184, file: !939, line: 267, column: 39)
!5191 = !DILocation(line: 267, column: 97, scope: !5192)
!5192 = !DILexicalBlockFile(scope: !5189, file: !939, discriminator: 4)
!5193 = !DILocation(line: 267, column: 97, scope: !5189)
!5194 = !DILocation(line: 267, column: 108, scope: !5195)
!5195 = !DILexicalBlockFile(scope: !5185, file: !939, discriminator: 3)
!5196 = !DILocation(line: 268, column: 21, scope: !5073)
!5197 = !DILocation(line: 268, column: 20, scope: !5073)
!5198 = !DILocation(line: 268, column: 9, scope: !5073)
!5199 = !DILocation(line: 269, column: 24, scope: !5073)
!5200 = !DILocation(line: 269, column: 9, scope: !5073)
!5201 = !DILocation(line: 272, column: 1, scope: !5022)
!5202 = distinct !DISubprogram(name: "flush_dynbuf", scope: !939, file: !939, line: 396, type: !5203, isLocal: true, isDefinition: true, scopeLine: 397, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!5203 = !DISubroutineType(types: !5204)
!5204 = !{!981, !2274, !1514}
!5205 = !DILocalVariable(name: "vs", arg: 1, scope: !5202, file: !939, line: 396, type: !2274)
!5206 = !DILocation(line: 396, column: 40, scope: !5202)
!5207 = !DILocalVariable(name: "range_length", arg: 2, scope: !5202, file: !939, line: 396, type: !1514)
!5208 = !DILocation(line: 396, column: 49, scope: !5202)
!5209 = !DILocalVariable(name: "ctx", scope: !5202, file: !939, line: 398, type: !2272)
!5210 = !DILocation(line: 398, column: 22, scope: !5202)
!5211 = !DILocation(line: 398, column: 28, scope: !5202)
!5212 = !DILocation(line: 398, column: 32, scope: !5202)
!5213 = !DILocalVariable(name: "buffer", scope: !5202, file: !939, line: 399, type: !1187)
!5214 = !DILocation(line: 399, column: 14, scope: !5202)
!5215 = !DILocation(line: 401, column: 10, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5202, file: !939, line: 401, column: 9)
!5217 = !DILocation(line: 401, column: 15, scope: !5216)
!5218 = !DILocation(line: 401, column: 9, scope: !5202)
!5219 = !DILocation(line: 402, column: 9, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5216, file: !939, line: 401, column: 19)
!5221 = !DILocation(line: 406, column: 20, scope: !5202)
!5222 = !DILocation(line: 406, column: 5, scope: !5202)
!5223 = !DILocation(line: 407, column: 16, scope: !5202)
!5224 = !DILocation(line: 407, column: 21, scope: !5202)
!5225 = !DILocation(line: 407, column: 5, scope: !5202)
!5226 = !DILocation(line: 410, column: 40, scope: !5202)
!5227 = !DILocation(line: 410, column: 45, scope: !5202)
!5228 = !DILocation(line: 410, column: 21, scope: !5202)
!5229 = !DILocation(line: 410, column: 6, scope: !5202)
!5230 = !DILocation(line: 410, column: 19, scope: !5202)
!5231 = !DILocation(line: 411, column: 5, scope: !5202)
!5232 = !DILocation(line: 411, column: 10, scope: !5202)
!5233 = !DILocation(line: 411, column: 13, scope: !5202)
!5234 = !DILocation(line: 412, column: 16, scope: !5202)
!5235 = !DILocation(line: 412, column: 20, scope: !5202)
!5236 = !DILocation(line: 412, column: 25, scope: !5202)
!5237 = !DILocation(line: 412, column: 34, scope: !5202)
!5238 = !DILocation(line: 412, column: 33, scope: !5202)
!5239 = !DILocation(line: 412, column: 5, scope: !5202)
!5240 = !DILocation(line: 413, column: 13, scope: !5202)
!5241 = !DILocation(line: 413, column: 5, scope: !5202)
!5242 = !DILocation(line: 416, column: 31, scope: !5202)
!5243 = !DILocation(line: 416, column: 36, scope: !5202)
!5244 = !DILocation(line: 416, column: 12, scope: !5202)
!5245 = !DILocation(line: 416, column: 5, scope: !5202)
!5246 = !DILocation(line: 417, column: 1, scope: !5202)
!5247 = distinct !DISubprogram(name: "set_http_options", scope: !939, file: !939, line: 274, type: !5248, isLocal: true, isDefinition: true, scopeLine: 275, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!5248 = !DISubroutineType(types: !5249)
!5249 = !{null, !2272, !2213, !2338}
!5250 = !DILocalVariable(name: "s", arg: 1, scope: !5247, file: !939, line: 274, type: !2272)
!5251 = !DILocation(line: 274, column: 47, scope: !5247)
!5252 = !DILocalVariable(name: "options", arg: 2, scope: !5247, file: !939, line: 274, type: !2213)
!5253 = !DILocation(line: 274, column: 65, scope: !5247)
!5254 = !DILocalVariable(name: "c", arg: 3, scope: !5247, file: !939, line: 274, type: !2338)
!5255 = !DILocation(line: 274, column: 86, scope: !5247)
!5256 = !DILocalVariable(name: "http_base_proto", scope: !5247, file: !939, line: 276, type: !981)
!5257 = !DILocation(line: 276, column: 9, scope: !5247)
!5258 = !DILocation(line: 276, column: 44, scope: !5247)
!5259 = !DILocation(line: 276, column: 47, scope: !5247)
!5260 = !DILocation(line: 276, column: 27, scope: !5247)
!5261 = !DILocation(line: 278, column: 9, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5247, file: !939, line: 278, column: 9)
!5263 = !DILocation(line: 278, column: 12, scope: !5262)
!5264 = !DILocation(line: 278, column: 9, scope: !5247)
!5265 = !DILocation(line: 279, column: 21, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5262, file: !939, line: 278, column: 20)
!5267 = !DILocation(line: 279, column: 40, scope: !5266)
!5268 = !DILocation(line: 279, column: 43, scope: !5266)
!5269 = !DILocation(line: 279, column: 9, scope: !5266)
!5270 = !DILocation(line: 280, column: 5, scope: !5266)
!5271 = !DILocation(line: 280, column: 16, scope: !5272)
!5272 = !DILexicalBlockFile(scope: !5273, file: !939, discriminator: 1)
!5273 = distinct !DILexicalBlock(scope: !5262, file: !939, line: 280, column: 16)
!5274 = !DILocation(line: 281, column: 16, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !5273, file: !939, line: 280, column: 33)
!5276 = !DILocation(line: 281, column: 9, scope: !5275)
!5277 = !DILocation(line: 282, column: 21, scope: !5275)
!5278 = !DILocation(line: 282, column: 9, scope: !5275)
!5279 = !DILocation(line: 283, column: 5, scope: !5275)
!5280 = !DILocation(line: 284, column: 9, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5247, file: !939, line: 284, column: 9)
!5282 = !DILocation(line: 284, column: 12, scope: !5281)
!5283 = !DILocation(line: 284, column: 9, scope: !5247)
!5284 = !DILocation(line: 285, column: 21, scope: !5281)
!5285 = !DILocation(line: 285, column: 44, scope: !5281)
!5286 = !DILocation(line: 285, column: 47, scope: !5281)
!5287 = !DILocation(line: 285, column: 9, scope: !5281)
!5288 = !DILocation(line: 286, column: 9, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5247, file: !939, line: 286, column: 9)
!5290 = !DILocation(line: 286, column: 12, scope: !5289)
!5291 = !DILocation(line: 286, column: 9, scope: !5247)
!5292 = !DILocation(line: 287, column: 25, scope: !5289)
!5293 = !DILocation(line: 287, column: 9, scope: !5289)
!5294 = !DILocation(line: 288, column: 9, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5247, file: !939, line: 288, column: 9)
!5296 = !DILocation(line: 288, column: 12, scope: !5295)
!5297 = !DILocation(line: 288, column: 20, scope: !5295)
!5298 = !DILocation(line: 288, column: 9, scope: !5247)
!5299 = !DILocation(line: 289, column: 25, scope: !5295)
!5300 = !DILocation(line: 289, column: 45, scope: !5295)
!5301 = !DILocation(line: 289, column: 48, scope: !5295)
!5302 = !DILocation(line: 289, column: 9, scope: !5295)
!5303 = !DILocation(line: 290, column: 1, scope: !5247)
!5304 = distinct !DISubprogram(name: "hlsenc_io_open", scope: !939, file: !939, line: 237, type: !5305, isLocal: true, isDefinition: true, scopeLine: 238, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!5305 = !DISubroutineType(types: !5306)
!5306 = !{!981, !2272, !2210, !1008, !2213}
!5307 = !DILocalVariable(name: "s", arg: 1, scope: !5304, file: !939, line: 237, type: !2272)
!5308 = !DILocation(line: 237, column: 44, scope: !5304)
!5309 = !DILocalVariable(name: "pb", arg: 2, scope: !5304, file: !939, line: 237, type: !2210)
!5310 = !DILocation(line: 237, column: 61, scope: !5304)
!5311 = !DILocalVariable(name: "filename", arg: 3, scope: !5304, file: !939, line: 237, type: !1008)
!5312 = !DILocation(line: 237, column: 71, scope: !5304)
!5313 = !DILocalVariable(name: "options", arg: 4, scope: !5304, file: !939, line: 238, type: !2213)
!5314 = !DILocation(line: 238, column: 42, scope: !5304)
!5315 = !DILocalVariable(name: "hls", scope: !5304, file: !939, line: 239, type: !2338)
!5316 = !DILocation(line: 239, column: 17, scope: !5304)
!5317 = !DILocation(line: 239, column: 23, scope: !5304)
!5318 = !DILocation(line: 239, column: 26, scope: !5304)
!5319 = !DILocalVariable(name: "http_base_proto", scope: !5304, file: !939, line: 240, type: !981)
!5320 = !DILocation(line: 240, column: 9, scope: !5304)
!5321 = !DILocation(line: 240, column: 27, scope: !5304)
!5322 = !DILocation(line: 240, column: 55, scope: !5323)
!5323 = !DILexicalBlockFile(scope: !5304, file: !939, discriminator: 1)
!5324 = !DILocation(line: 240, column: 38, scope: !5323)
!5325 = !DILocation(line: 240, column: 27, scope: !5323)
!5326 = !DILocation(line: 240, column: 27, scope: !5327)
!5327 = !DILexicalBlockFile(scope: !5304, file: !939, discriminator: 2)
!5328 = !DILocation(line: 240, column: 27, scope: !5329)
!5329 = !DILexicalBlockFile(scope: !5304, file: !939, discriminator: 3)
!5330 = !DILocation(line: 240, column: 9, scope: !5329)
!5331 = !DILocalVariable(name: "err", scope: !5304, file: !939, line: 241, type: !981)
!5332 = !DILocation(line: 241, column: 9, scope: !5304)
!5333 = !DILocation(line: 242, column: 11, scope: !5334)
!5334 = distinct !DILexicalBlock(scope: !5304, file: !939, line: 242, column: 9)
!5335 = !DILocation(line: 242, column: 10, scope: !5334)
!5336 = !DILocation(line: 242, column: 14, scope: !5334)
!5337 = !DILocation(line: 242, column: 18, scope: !5338)
!5338 = !DILexicalBlockFile(scope: !5334, file: !939, discriminator: 1)
!5339 = !DILocation(line: 242, column: 34, scope: !5338)
!5340 = !DILocation(line: 242, column: 38, scope: !5341)
!5341 = !DILexicalBlockFile(scope: !5334, file: !939, discriminator: 2)
!5342 = !DILocation(line: 242, column: 43, scope: !5341)
!5343 = !DILocation(line: 242, column: 9, scope: !5341)
!5344 = !DILocation(line: 243, column: 15, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5334, file: !939, line: 242, column: 60)
!5346 = !DILocation(line: 243, column: 18, scope: !5345)
!5347 = !DILocation(line: 243, column: 26, scope: !5345)
!5348 = !DILocation(line: 243, column: 29, scope: !5345)
!5349 = !DILocation(line: 243, column: 33, scope: !5345)
!5350 = !DILocation(line: 243, column: 46, scope: !5345)
!5351 = !DILocation(line: 243, column: 13, scope: !5345)
!5352 = !DILocation(line: 245, column: 5, scope: !5345)
!5353 = !DILocalVariable(name: "http_url_context", scope: !5354, file: !939, line: 246, type: !5074)
!5354 = distinct !DILexicalBlock(scope: !5334, file: !939, line: 245, column: 12)
!5355 = !DILocation(line: 246, column: 21, scope: !5354)
!5356 = !DILocation(line: 246, column: 60, scope: !5354)
!5357 = !DILocation(line: 246, column: 59, scope: !5354)
!5358 = !DILocation(line: 246, column: 40, scope: !5354)
!5359 = !DILocation(line: 247, column: 9, scope: !5354)
!5360 = distinct !{!5360, !5359}
!5361 = !DILocation(line: 247, column: 20, scope: !5362)
!5362 = !DILexicalBlockFile(scope: !5363, file: !939, discriminator: 1)
!5363 = distinct !DILexicalBlock(scope: !5364, file: !939, line: 247, column: 18)
!5364 = distinct !DILexicalBlock(scope: !5354, file: !939, line: 247, column: 12)
!5365 = !DILocation(line: 247, column: 19, scope: !5362)
!5366 = !DILocation(line: 247, column: 18, scope: !5362)
!5367 = !DILocation(line: 247, column: 41, scope: !5368)
!5368 = !DILexicalBlockFile(scope: !5369, file: !939, discriminator: 2)
!5369 = distinct !DILexicalBlock(scope: !5363, file: !939, line: 247, column: 39)
!5370 = !DILocation(line: 247, column: 97, scope: !5371)
!5371 = !DILexicalBlockFile(scope: !5368, file: !939, discriminator: 4)
!5372 = !DILocation(line: 247, column: 97, scope: !5368)
!5373 = !DILocation(line: 247, column: 108, scope: !5374)
!5374 = !DILexicalBlockFile(scope: !5364, file: !939, discriminator: 3)
!5375 = !DILocation(line: 248, column: 38, scope: !5354)
!5376 = !DILocation(line: 248, column: 56, scope: !5354)
!5377 = !DILocation(line: 248, column: 15, scope: !5354)
!5378 = !DILocation(line: 248, column: 13, scope: !5354)
!5379 = !DILocation(line: 249, column: 13, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5354, file: !939, line: 249, column: 13)
!5381 = !DILocation(line: 249, column: 17, scope: !5380)
!5382 = !DILocation(line: 249, column: 13, scope: !5354)
!5383 = !DILocation(line: 250, column: 32, scope: !5380)
!5384 = !DILocation(line: 250, column: 35, scope: !5380)
!5385 = !DILocation(line: 250, column: 13, scope: !5380)
!5386 = !DILocation(line: 254, column: 12, scope: !5304)
!5387 = !DILocation(line: 254, column: 5, scope: !5304)
!5388 = distinct !DISubprogram(name: "write_styp", scope: !939, file: !939, line: 386, type: !5389, isLocal: true, isDefinition: true, scopeLine: 387, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!5389 = !DISubroutineType(types: !5390)
!5390 = !{null, !1240}
!5391 = !DILocalVariable(name: "pb", arg: 1, scope: !5392, file: !5393, line: 58, type: !1240)
!5392 = distinct !DISubprogram(name: "ffio_wfourcc", scope: !5393, file: !5393, line: 58, type: !5394, isLocal: true, isDefinition: true, scopeLine: 59, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!5393 = !DIFile(filename: "libavformat/avio_internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5394 = !DISubroutineType(types: !5395)
!5395 = !{null, !1240, !1269}
!5396 = !DILocation(line: 58, column: 77, scope: !5392, inlinedAt: !5397)
!5397 = distinct !DILocation(line: 393, column: 5, scope: !5388)
!5398 = !DILocalVariable(name: "s", arg: 2, scope: !5392, file: !5393, line: 58, type: !1269)
!5399 = !DILocation(line: 58, column: 96, scope: !5392, inlinedAt: !5397)
!5400 = !DILocation(line: 58, column: 77, scope: !5392, inlinedAt: !5401)
!5401 = distinct !DILocation(line: 392, column: 5, scope: !5388)
!5402 = !DILocation(line: 58, column: 96, scope: !5392, inlinedAt: !5401)
!5403 = !DILocation(line: 58, column: 77, scope: !5392, inlinedAt: !5404)
!5404 = distinct !DILocation(line: 390, column: 5, scope: !5388)
!5405 = !DILocation(line: 58, column: 96, scope: !5392, inlinedAt: !5404)
!5406 = !DILocation(line: 58, column: 77, scope: !5392, inlinedAt: !5407)
!5407 = distinct !DILocation(line: 389, column: 5, scope: !5388)
!5408 = !DILocation(line: 58, column: 96, scope: !5392, inlinedAt: !5407)
!5409 = !DILocalVariable(name: "pb", arg: 1, scope: !5388, file: !939, line: 386, type: !1240)
!5410 = !DILocation(line: 386, column: 37, scope: !5388)
!5411 = !DILocation(line: 388, column: 15, scope: !5388)
!5412 = !DILocation(line: 388, column: 5, scope: !5388)
!5413 = !DILocation(line: 389, column: 18, scope: !5388)
!5414 = !DILocation(line: 389, column: 5, scope: !5388)
!5415 = !DILocation(line: 60, column: 15, scope: !5392, inlinedAt: !5407)
!5416 = !DILocation(line: 60, column: 21, scope: !5392, inlinedAt: !5407)
!5417 = !DILocation(line: 60, column: 20, scope: !5392, inlinedAt: !5407)
!5418 = !DILocation(line: 60, column: 31, scope: !5392, inlinedAt: !5407)
!5419 = !DILocation(line: 60, column: 30, scope: !5392, inlinedAt: !5407)
!5420 = !DILocation(line: 60, column: 37, scope: !5392, inlinedAt: !5407)
!5421 = !DILocation(line: 60, column: 27, scope: !5392, inlinedAt: !5407)
!5422 = !DILocation(line: 60, column: 47, scope: !5392, inlinedAt: !5407)
!5423 = !DILocation(line: 60, column: 46, scope: !5392, inlinedAt: !5407)
!5424 = !DILocation(line: 60, column: 53, scope: !5392, inlinedAt: !5407)
!5425 = !DILocation(line: 60, column: 43, scope: !5392, inlinedAt: !5407)
!5426 = !DILocation(line: 60, column: 74, scope: !5392, inlinedAt: !5407)
!5427 = !DILocation(line: 60, column: 63, scope: !5392, inlinedAt: !5407)
!5428 = !DILocation(line: 60, column: 80, scope: !5392, inlinedAt: !5407)
!5429 = !DILocation(line: 60, column: 60, scope: !5392, inlinedAt: !5407)
!5430 = !DILocation(line: 60, column: 5, scope: !5392, inlinedAt: !5407)
!5431 = !DILocation(line: 390, column: 18, scope: !5388)
!5432 = !DILocation(line: 390, column: 5, scope: !5388)
!5433 = !DILocation(line: 60, column: 15, scope: !5392, inlinedAt: !5404)
!5434 = !DILocation(line: 60, column: 21, scope: !5392, inlinedAt: !5404)
!5435 = !DILocation(line: 60, column: 20, scope: !5392, inlinedAt: !5404)
!5436 = !DILocation(line: 60, column: 31, scope: !5392, inlinedAt: !5404)
!5437 = !DILocation(line: 60, column: 30, scope: !5392, inlinedAt: !5404)
!5438 = !DILocation(line: 60, column: 37, scope: !5392, inlinedAt: !5404)
!5439 = !DILocation(line: 60, column: 27, scope: !5392, inlinedAt: !5404)
!5440 = !DILocation(line: 60, column: 47, scope: !5392, inlinedAt: !5404)
!5441 = !DILocation(line: 60, column: 46, scope: !5392, inlinedAt: !5404)
!5442 = !DILocation(line: 60, column: 53, scope: !5392, inlinedAt: !5404)
!5443 = !DILocation(line: 60, column: 43, scope: !5392, inlinedAt: !5404)
!5444 = !DILocation(line: 60, column: 74, scope: !5392, inlinedAt: !5404)
!5445 = !DILocation(line: 60, column: 63, scope: !5392, inlinedAt: !5404)
!5446 = !DILocation(line: 60, column: 80, scope: !5392, inlinedAt: !5404)
!5447 = !DILocation(line: 60, column: 60, scope: !5392, inlinedAt: !5404)
!5448 = !DILocation(line: 60, column: 5, scope: !5392, inlinedAt: !5404)
!5449 = !DILocation(line: 391, column: 15, scope: !5388)
!5450 = !DILocation(line: 391, column: 5, scope: !5388)
!5451 = !DILocation(line: 392, column: 18, scope: !5388)
!5452 = !DILocation(line: 392, column: 5, scope: !5388)
!5453 = !DILocation(line: 60, column: 15, scope: !5392, inlinedAt: !5401)
!5454 = !DILocation(line: 60, column: 21, scope: !5392, inlinedAt: !5401)
!5455 = !DILocation(line: 60, column: 20, scope: !5392, inlinedAt: !5401)
!5456 = !DILocation(line: 60, column: 31, scope: !5392, inlinedAt: !5401)
!5457 = !DILocation(line: 60, column: 30, scope: !5392, inlinedAt: !5401)
!5458 = !DILocation(line: 60, column: 37, scope: !5392, inlinedAt: !5401)
!5459 = !DILocation(line: 60, column: 27, scope: !5392, inlinedAt: !5401)
!5460 = !DILocation(line: 60, column: 47, scope: !5392, inlinedAt: !5401)
!5461 = !DILocation(line: 60, column: 46, scope: !5392, inlinedAt: !5401)
!5462 = !DILocation(line: 60, column: 53, scope: !5392, inlinedAt: !5401)
!5463 = !DILocation(line: 60, column: 43, scope: !5392, inlinedAt: !5401)
!5464 = !DILocation(line: 60, column: 74, scope: !5392, inlinedAt: !5401)
!5465 = !DILocation(line: 60, column: 63, scope: !5392, inlinedAt: !5401)
!5466 = !DILocation(line: 60, column: 80, scope: !5392, inlinedAt: !5401)
!5467 = !DILocation(line: 60, column: 60, scope: !5392, inlinedAt: !5401)
!5468 = !DILocation(line: 60, column: 5, scope: !5392, inlinedAt: !5401)
!5469 = !DILocation(line: 393, column: 18, scope: !5388)
!5470 = !DILocation(line: 393, column: 5, scope: !5388)
!5471 = !DILocation(line: 60, column: 15, scope: !5392, inlinedAt: !5397)
!5472 = !DILocation(line: 60, column: 21, scope: !5392, inlinedAt: !5397)
!5473 = !DILocation(line: 60, column: 20, scope: !5392, inlinedAt: !5397)
!5474 = !DILocation(line: 60, column: 31, scope: !5392, inlinedAt: !5397)
!5475 = !DILocation(line: 60, column: 30, scope: !5392, inlinedAt: !5397)
!5476 = !DILocation(line: 60, column: 37, scope: !5392, inlinedAt: !5397)
!5477 = !DILocation(line: 60, column: 27, scope: !5392, inlinedAt: !5397)
!5478 = !DILocation(line: 60, column: 47, scope: !5392, inlinedAt: !5397)
!5479 = !DILocation(line: 60, column: 46, scope: !5392, inlinedAt: !5397)
!5480 = !DILocation(line: 60, column: 53, scope: !5392, inlinedAt: !5397)
!5481 = !DILocation(line: 60, column: 43, scope: !5392, inlinedAt: !5397)
!5482 = !DILocation(line: 60, column: 74, scope: !5392, inlinedAt: !5397)
!5483 = !DILocation(line: 60, column: 63, scope: !5392, inlinedAt: !5397)
!5484 = !DILocation(line: 60, column: 80, scope: !5392, inlinedAt: !5397)
!5485 = !DILocation(line: 60, column: 60, scope: !5392, inlinedAt: !5397)
!5486 = !DILocation(line: 60, column: 5, scope: !5392, inlinedAt: !5397)
!5487 = !DILocation(line: 394, column: 1, scope: !5388)
!5488 = distinct !DISubprogram(name: "hls_rename_temp_file", scope: !939, file: !939, line: 1149, type: !5489, isLocal: true, isDefinition: true, scopeLine: 1150, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!5489 = !DISubroutineType(types: !5490)
!5490 = !{!981, !2272, !2272}
!5491 = !DILocalVariable(name: "s", arg: 1, scope: !5488, file: !939, line: 1149, type: !2272)
!5492 = !DILocation(line: 1149, column: 50, scope: !5488)
!5493 = !DILocalVariable(name: "oc", arg: 2, scope: !5488, file: !939, line: 1149, type: !2272)
!5494 = !DILocation(line: 1149, column: 70, scope: !5488)
!5495 = !DILocalVariable(name: "len", scope: !5488, file: !939, line: 1151, type: !1508)
!5496 = !DILocation(line: 1151, column: 12, scope: !5488)
!5497 = !DILocation(line: 1151, column: 25, scope: !5488)
!5498 = !DILocation(line: 1151, column: 29, scope: !5488)
!5499 = !DILocation(line: 1151, column: 18, scope: !5488)
!5500 = !DILocalVariable(name: "final_filename", scope: !5488, file: !939, line: 1152, type: !1008)
!5501 = !DILocation(line: 1152, column: 11, scope: !5488)
!5502 = !DILocation(line: 1152, column: 38, scope: !5488)
!5503 = !DILocation(line: 1152, column: 42, scope: !5488)
!5504 = !DILocation(line: 1152, column: 28, scope: !5488)
!5505 = !DILocalVariable(name: "ret", scope: !5488, file: !939, line: 1153, type: !981)
!5506 = !DILocation(line: 1153, column: 9, scope: !5488)
!5507 = !DILocation(line: 1155, column: 10, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5488, file: !939, line: 1155, column: 9)
!5509 = !DILocation(line: 1155, column: 9, scope: !5488)
!5510 = !DILocation(line: 1156, column: 9, scope: !5508)
!5511 = !DILocation(line: 1157, column: 20, scope: !5488)
!5512 = !DILocation(line: 1157, column: 23, scope: !5488)
!5513 = !DILocation(line: 1157, column: 5, scope: !5488)
!5514 = !DILocation(line: 1157, column: 27, scope: !5488)
!5515 = !DILocation(line: 1158, column: 21, scope: !5488)
!5516 = !DILocation(line: 1158, column: 25, scope: !5488)
!5517 = !DILocation(line: 1158, column: 30, scope: !5488)
!5518 = !DILocation(line: 1158, column: 46, scope: !5488)
!5519 = !DILocation(line: 1158, column: 11, scope: !5488)
!5520 = !DILocation(line: 1158, column: 9, scope: !5488)
!5521 = !DILocation(line: 1159, column: 13, scope: !5488)
!5522 = !DILocation(line: 1159, column: 16, scope: !5488)
!5523 = !DILocation(line: 1159, column: 5, scope: !5488)
!5524 = !DILocation(line: 1159, column: 9, scope: !5488)
!5525 = !DILocation(line: 1159, column: 20, scope: !5488)
!5526 = !DILocation(line: 1160, column: 14, scope: !5488)
!5527 = !DILocation(line: 1160, column: 5, scope: !5488)
!5528 = !DILocation(line: 1161, column: 12, scope: !5488)
!5529 = !DILocation(line: 1161, column: 5, scope: !5488)
!5530 = !DILocation(line: 1162, column: 1, scope: !5488)
!5531 = distinct !DISubprogram(name: "hls_append_segment", scope: !939, file: !939, line: 960, type: !5532, isLocal: true, isDefinition: true, scopeLine: 963, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!5532 = !DISubroutineType(types: !5533)
!5533 = !{!981, !1135, !2338, !2274, !979, !976, !976}
!5534 = !DILocalVariable(name: "s", arg: 1, scope: !5531, file: !939, line: 960, type: !1135)
!5535 = !DILocation(line: 960, column: 55, scope: !5531)
!5536 = !DILocalVariable(name: "hls", arg: 2, scope: !5531, file: !939, line: 960, type: !2338)
!5537 = !DILocation(line: 960, column: 70, scope: !5531)
!5538 = !DILocalVariable(name: "vs", arg: 3, scope: !5531, file: !939, line: 961, type: !2274)
!5539 = !DILocation(line: 961, column: 46, scope: !5531)
!5540 = !DILocalVariable(name: "duration", arg: 4, scope: !5531, file: !939, line: 961, type: !979)
!5541 = !DILocation(line: 961, column: 57, scope: !5531)
!5542 = !DILocalVariable(name: "pos", arg: 5, scope: !5531, file: !939, line: 961, type: !976)
!5543 = !DILocation(line: 961, column: 75, scope: !5531)
!5544 = !DILocalVariable(name: "size", arg: 6, scope: !5531, file: !939, line: 962, type: !976)
!5545 = !DILocation(line: 962, column: 39, scope: !5531)
!5546 = !DILocalVariable(name: "en", scope: !5531, file: !939, line: 964, type: !983)
!5547 = !DILocation(line: 964, column: 17, scope: !5531)
!5548 = !DILocation(line: 964, column: 22, scope: !5531)
!5549 = !DILocalVariable(name: "filename", scope: !5531, file: !939, line: 965, type: !1031)
!5550 = !DILocation(line: 965, column: 17, scope: !5531)
!5551 = !DILocalVariable(name: "byterange_mode", scope: !5531, file: !939, line: 966, type: !981)
!5552 = !DILocation(line: 966, column: 9, scope: !5531)
!5553 = !DILocation(line: 966, column: 27, scope: !5531)
!5554 = !DILocation(line: 966, column: 32, scope: !5531)
!5555 = !DILocation(line: 966, column: 38, scope: !5531)
!5556 = !DILocation(line: 966, column: 57, scope: !5531)
!5557 = !DILocation(line: 966, column: 61, scope: !5558)
!5558 = !DILexicalBlockFile(scope: !5531, file: !939, discriminator: 1)
!5559 = !DILocation(line: 966, column: 66, scope: !5558)
!5560 = !DILocation(line: 966, column: 79, scope: !5558)
!5561 = !DILocation(line: 966, column: 57, scope: !5558)
!5562 = !DILocation(line: 966, column: 57, scope: !5563)
!5563 = !DILexicalBlockFile(scope: !5531, file: !939, discriminator: 2)
!5564 = !DILocation(line: 966, column: 9, scope: !5563)
!5565 = !DILocalVariable(name: "ret", scope: !5531, file: !939, line: 967, type: !981)
!5566 = !DILocation(line: 967, column: 9, scope: !5531)
!5567 = !DILocation(line: 969, column: 10, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5531, file: !939, line: 969, column: 9)
!5569 = !DILocation(line: 969, column: 9, scope: !5531)
!5570 = !DILocation(line: 970, column: 9, scope: !5568)
!5571 = !DILocation(line: 972, column: 26, scope: !5531)
!5572 = !DILocation(line: 972, column: 30, scope: !5531)
!5573 = !DILocation(line: 972, column: 5, scope: !5531)
!5574 = !DILocation(line: 972, column: 9, scope: !5531)
!5575 = !DILocation(line: 972, column: 24, scope: !5531)
!5576 = !DILocation(line: 973, column: 38, scope: !5531)
!5577 = !DILocation(line: 973, column: 41, scope: !5531)
!5578 = !DILocation(line: 973, column: 46, scope: !5531)
!5579 = !DILocation(line: 973, column: 50, scope: !5531)
!5580 = !DILocation(line: 973, column: 54, scope: !5531)
!5581 = !DILocation(line: 973, column: 64, scope: !5531)
!5582 = !DILocation(line: 973, column: 69, scope: !5531)
!5583 = !DILocation(line: 973, column: 11, scope: !5531)
!5584 = !DILocation(line: 973, column: 9, scope: !5531)
!5585 = !DILocation(line: 974, column: 9, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5531, file: !939, line: 974, column: 9)
!5587 = !DILocation(line: 974, column: 13, scope: !5586)
!5588 = !DILocation(line: 974, column: 9, scope: !5531)
!5589 = !DILocation(line: 975, column: 16, scope: !5590)
!5590 = distinct !DILexicalBlock(scope: !5586, file: !939, line: 974, column: 18)
!5591 = !DILocation(line: 975, column: 9, scope: !5590)
!5592 = !DILocation(line: 978, column: 28, scope: !5531)
!5593 = !DILocation(line: 978, column: 32, scope: !5531)
!5594 = !DILocation(line: 978, column: 37, scope: !5531)
!5595 = !DILocation(line: 978, column: 16, scope: !5531)
!5596 = !DILocation(line: 978, column: 14, scope: !5531)
!5597 = !DILocation(line: 980, column: 9, scope: !5598)
!5598 = distinct !DILexicalBlock(scope: !5531, file: !939, line: 980, column: 9)
!5599 = !DILocation(line: 980, column: 14, scope: !5598)
!5600 = !DILocation(line: 980, column: 9, scope: !5531)
!5601 = !DILocation(line: 981, column: 20, scope: !5602)
!5602 = distinct !DILexicalBlock(scope: !5598, file: !939, line: 980, column: 35)
!5603 = !DILocation(line: 981, column: 24, scope: !5602)
!5604 = !DILocation(line: 981, column: 29, scope: !5602)
!5605 = !DILocation(line: 981, column: 18, scope: !5602)
!5606 = !DILocation(line: 982, column: 5, scope: !5602)
!5607 = !DILocation(line: 983, column: 35, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5531, file: !939, line: 983, column: 9)
!5609 = !DILocation(line: 983, column: 39, scope: !5608)
!5610 = !DILocation(line: 983, column: 49, scope: !5608)
!5611 = !DILocation(line: 983, column: 10, scope: !5608)
!5612 = !DILocation(line: 983, column: 59, scope: !5608)
!5613 = !DILocation(line: 983, column: 87, scope: !5614)
!5614 = !DILexicalBlockFile(scope: !5608, file: !939, discriminator: 1)
!5615 = !DILocation(line: 983, column: 91, scope: !5614)
!5616 = !DILocation(line: 983, column: 105, scope: !5614)
!5617 = !DILocation(line: 983, column: 62, scope: !5614)
!5618 = !DILocation(line: 984, column: 9, scope: !5608)
!5619 = !DILocation(line: 984, column: 13, scope: !5614)
!5620 = !DILocation(line: 983, column: 9, scope: !5563)
!5621 = !DILocation(line: 985, column: 16, scope: !5622)
!5622 = distinct !DILexicalBlock(scope: !5608, file: !939, line: 984, column: 29)
!5623 = !DILocation(line: 985, column: 71, scope: !5622)
!5624 = !DILocation(line: 985, column: 9, scope: !5622)
!5625 = !DILocation(line: 986, column: 5, scope: !5622)
!5626 = !DILocation(line: 987, column: 16, scope: !5531)
!5627 = !DILocation(line: 987, column: 20, scope: !5531)
!5628 = !DILocation(line: 987, column: 30, scope: !5531)
!5629 = !DILocation(line: 987, column: 5, scope: !5531)
!5630 = !DILocation(line: 989, column: 8, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5531, file: !939, line: 989, column: 8)
!5632 = !DILocation(line: 989, column: 12, scope: !5631)
!5633 = !DILocation(line: 989, column: 8, scope: !5531)
!5634 = !DILocation(line: 990, column: 20, scope: !5631)
!5635 = !DILocation(line: 990, column: 24, scope: !5631)
!5636 = !DILocation(line: 990, column: 50, scope: !5631)
!5637 = !DILocation(line: 990, column: 54, scope: !5631)
!5638 = !DILocation(line: 990, column: 63, scope: !5631)
!5639 = !DILocation(line: 990, column: 38, scope: !5631)
!5640 = !DILocation(line: 990, column: 9, scope: !5641)
!5641 = !DILexicalBlockFile(scope: !5631, file: !939, discriminator: 1)
!5642 = !DILocation(line: 990, column: 9, scope: !5631)
!5643 = !DILocation(line: 992, column: 9, scope: !5631)
!5644 = !DILocation(line: 992, column: 13, scope: !5631)
!5645 = !DILocation(line: 992, column: 29, scope: !5631)
!5646 = !DILocation(line: 994, column: 20, scope: !5531)
!5647 = !DILocation(line: 994, column: 5, scope: !5531)
!5648 = !DILocation(line: 994, column: 9, scope: !5531)
!5649 = !DILocation(line: 994, column: 18, scope: !5531)
!5650 = !DILocation(line: 995, column: 15, scope: !5531)
!5651 = !DILocation(line: 995, column: 5, scope: !5531)
!5652 = !DILocation(line: 995, column: 9, scope: !5531)
!5653 = !DILocation(line: 995, column: 13, scope: !5531)
!5654 = !DILocation(line: 996, column: 16, scope: !5531)
!5655 = !DILocation(line: 996, column: 5, scope: !5531)
!5656 = !DILocation(line: 996, column: 9, scope: !5531)
!5657 = !DILocation(line: 996, column: 14, scope: !5531)
!5658 = !DILocation(line: 997, column: 5, scope: !5531)
!5659 = !DILocation(line: 997, column: 9, scope: !5531)
!5660 = !DILocation(line: 997, column: 14, scope: !5531)
!5661 = !DILocation(line: 998, column: 5, scope: !5531)
!5662 = !DILocation(line: 998, column: 9, scope: !5531)
!5663 = !DILocation(line: 998, column: 17, scope: !5531)
!5664 = !DILocation(line: 1000, column: 9, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5531, file: !939, line: 1000, column: 9)
!5666 = !DILocation(line: 1000, column: 13, scope: !5665)
!5667 = !DILocation(line: 1000, column: 9, scope: !5531)
!5668 = !DILocation(line: 1001, column: 9, scope: !5669)
!5669 = distinct !DILexicalBlock(scope: !5665, file: !939, line: 1000, column: 28)
!5670 = !DILocation(line: 1001, column: 13, scope: !5669)
!5671 = !DILocation(line: 1001, column: 21, scope: !5669)
!5672 = !DILocation(line: 1002, column: 9, scope: !5669)
!5673 = !DILocation(line: 1002, column: 13, scope: !5669)
!5674 = !DILocation(line: 1002, column: 27, scope: !5669)
!5675 = !DILocation(line: 1003, column: 5, scope: !5669)
!5676 = !DILocation(line: 1005, column: 9, scope: !5677)
!5677 = distinct !DILexicalBlock(scope: !5531, file: !939, line: 1005, column: 9)
!5678 = !DILocation(line: 1005, column: 14, scope: !5677)
!5679 = !DILocation(line: 1005, column: 28, scope: !5677)
!5680 = !DILocation(line: 1005, column: 31, scope: !5681)
!5681 = !DILexicalBlockFile(scope: !5677, file: !939, discriminator: 1)
!5682 = !DILocation(line: 1005, column: 36, scope: !5681)
!5683 = !DILocation(line: 1005, column: 9, scope: !5681)
!5684 = !DILocation(line: 1006, column: 20, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5677, file: !939, line: 1005, column: 45)
!5686 = !DILocation(line: 1006, column: 24, scope: !5685)
!5687 = !DILocation(line: 1006, column: 33, scope: !5685)
!5688 = !DILocation(line: 1006, column: 38, scope: !5685)
!5689 = !DILocation(line: 1006, column: 9, scope: !5685)
!5690 = !DILocation(line: 1007, column: 20, scope: !5685)
!5691 = !DILocation(line: 1007, column: 24, scope: !5685)
!5692 = !DILocation(line: 1007, column: 35, scope: !5685)
!5693 = !DILocation(line: 1007, column: 40, scope: !5685)
!5694 = !DILocation(line: 1007, column: 9, scope: !5685)
!5695 = !DILocation(line: 1008, column: 5, scope: !5685)
!5696 = !DILocation(line: 1010, column: 10, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5531, file: !939, line: 1010, column: 9)
!5698 = !DILocation(line: 1010, column: 14, scope: !5697)
!5699 = !DILocation(line: 1010, column: 9, scope: !5531)
!5700 = !DILocation(line: 1011, column: 24, scope: !5697)
!5701 = !DILocation(line: 1011, column: 9, scope: !5697)
!5702 = !DILocation(line: 1011, column: 13, scope: !5697)
!5703 = !DILocation(line: 1011, column: 22, scope: !5697)
!5704 = !DILocation(line: 1013, column: 34, scope: !5697)
!5705 = !DILocation(line: 1013, column: 9, scope: !5697)
!5706 = !DILocation(line: 1013, column: 13, scope: !5697)
!5707 = !DILocation(line: 1013, column: 27, scope: !5697)
!5708 = !DILocation(line: 1013, column: 32, scope: !5697)
!5709 = !DILocation(line: 1015, column: 24, scope: !5531)
!5710 = !DILocation(line: 1015, column: 5, scope: !5531)
!5711 = !DILocation(line: 1015, column: 9, scope: !5531)
!5712 = !DILocation(line: 1015, column: 22, scope: !5531)
!5713 = !DILocation(line: 1018, column: 9, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5531, file: !939, line: 1018, column: 9)
!5715 = !DILocation(line: 1018, column: 14, scope: !5714)
!5716 = !DILocation(line: 1018, column: 22, scope: !5714)
!5717 = !DILocation(line: 1018, column: 9, scope: !5531)
!5718 = !DILocation(line: 1019, column: 9, scope: !5714)
!5719 = !DILocation(line: 1019, column: 14, scope: !5714)
!5720 = !DILocation(line: 1019, column: 30, scope: !5714)
!5721 = !DILocation(line: 1021, column: 9, scope: !5722)
!5722 = distinct !DILexicalBlock(scope: !5531, file: !939, line: 1021, column: 9)
!5723 = !DILocation(line: 1021, column: 14, scope: !5722)
!5724 = !DILocation(line: 1021, column: 30, scope: !5722)
!5725 = !DILocation(line: 1021, column: 33, scope: !5726)
!5726 = !DILexicalBlockFile(scope: !5722, file: !939, discriminator: 1)
!5727 = !DILocation(line: 1021, column: 37, scope: !5726)
!5728 = !DILocation(line: 1021, column: 51, scope: !5726)
!5729 = !DILocation(line: 1021, column: 56, scope: !5726)
!5730 = !DILocation(line: 1021, column: 48, scope: !5726)
!5731 = !DILocation(line: 1021, column: 9, scope: !5726)
!5732 = !DILocation(line: 1022, column: 14, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5722, file: !939, line: 1021, column: 73)
!5734 = !DILocation(line: 1022, column: 18, scope: !5733)
!5735 = !DILocation(line: 1022, column: 12, scope: !5733)
!5736 = !DILocation(line: 1023, column: 39, scope: !5733)
!5737 = !DILocation(line: 1023, column: 43, scope: !5733)
!5738 = !DILocation(line: 1023, column: 9, scope: !5733)
!5739 = !DILocation(line: 1023, column: 13, scope: !5733)
!5740 = !DILocation(line: 1023, column: 36, scope: !5733)
!5741 = !DILocation(line: 1024, column: 24, scope: !5733)
!5742 = !DILocation(line: 1024, column: 28, scope: !5733)
!5743 = !DILocation(line: 1024, column: 9, scope: !5733)
!5744 = !DILocation(line: 1024, column: 13, scope: !5733)
!5745 = !DILocation(line: 1024, column: 22, scope: !5733)
!5746 = !DILocation(line: 1025, column: 13, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5733, file: !939, line: 1025, column: 13)
!5748 = !DILocation(line: 1025, column: 16, scope: !5747)
!5749 = !DILocation(line: 1025, column: 19, scope: !5750)
!5750 = !DILexicalBlockFile(scope: !5747, file: !939, discriminator: 1)
!5751 = !DILocation(line: 1025, column: 24, scope: !5750)
!5752 = !DILocation(line: 1025, column: 30, scope: !5750)
!5753 = !DILocation(line: 1025, column: 52, scope: !5750)
!5754 = !DILocation(line: 1027, column: 19, scope: !5747)
!5755 = !DILocation(line: 1027, column: 24, scope: !5747)
!5756 = !DILocation(line: 1027, column: 30, scope: !5747)
!5757 = !DILocation(line: 1027, column: 48, scope: !5747)
!5758 = !DILocation(line: 1027, column: 51, scope: !5750)
!5759 = !DILocation(line: 1027, column: 56, scope: !5750)
!5760 = !DILocation(line: 1025, column: 13, scope: !5761)
!5761 = !DILexicalBlockFile(scope: !5733, file: !939, discriminator: 2)
!5762 = !DILocation(line: 1031, column: 24, scope: !5763)
!5763 = distinct !DILexicalBlock(scope: !5747, file: !939, line: 1027, column: 63)
!5764 = !DILocation(line: 1031, column: 28, scope: !5763)
!5765 = !DILocation(line: 1031, column: 13, scope: !5763)
!5766 = !DILocation(line: 1031, column: 17, scope: !5763)
!5767 = !DILocation(line: 1031, column: 22, scope: !5763)
!5768 = !DILocation(line: 1032, column: 32, scope: !5763)
!5769 = !DILocation(line: 1032, column: 13, scope: !5763)
!5770 = !DILocation(line: 1032, column: 17, scope: !5763)
!5771 = !DILocation(line: 1032, column: 30, scope: !5763)
!5772 = !DILocation(line: 1033, column: 48, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !5763, file: !939, line: 1033, column: 17)
!5774 = !DILocation(line: 1033, column: 51, scope: !5773)
!5775 = !DILocation(line: 1033, column: 56, scope: !5773)
!5776 = !DILocation(line: 1033, column: 24, scope: !5773)
!5777 = !DILocation(line: 1033, column: 22, scope: !5773)
!5778 = !DILocation(line: 1033, column: 61, scope: !5773)
!5779 = !DILocation(line: 1033, column: 17, scope: !5763)
!5780 = !DILocation(line: 1034, column: 24, scope: !5773)
!5781 = !DILocation(line: 1034, column: 17, scope: !5773)
!5782 = !DILocation(line: 1035, column: 9, scope: !5763)
!5783 = !DILocation(line: 1036, column: 21, scope: !5747)
!5784 = !DILocation(line: 1036, column: 13, scope: !5747)
!5785 = !DILocation(line: 1037, column: 5, scope: !5733)
!5786 = !DILocation(line: 1038, column: 9, scope: !5722)
!5787 = !DILocation(line: 1038, column: 13, scope: !5722)
!5788 = !DILocation(line: 1038, column: 23, scope: !5722)
!5789 = !DILocation(line: 1040, column: 9, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5531, file: !939, line: 1040, column: 9)
!5791 = !DILocation(line: 1040, column: 14, scope: !5790)
!5792 = !DILocation(line: 1040, column: 27, scope: !5790)
!5793 = !DILocation(line: 1040, column: 9, scope: !5531)
!5794 = !DILocation(line: 1041, column: 9, scope: !5795)
!5795 = distinct !DILexicalBlock(scope: !5790, file: !939, line: 1040, column: 32)
!5796 = !DILocation(line: 1043, column: 5, scope: !5531)
!5797 = !DILocation(line: 1043, column: 9, scope: !5531)
!5798 = !DILocation(line: 1043, column: 17, scope: !5531)
!5799 = !DILocation(line: 1045, column: 5, scope: !5531)
!5800 = !DILocation(line: 1046, column: 1, scope: !5531)
!5801 = distinct !DISubprogram(name: "sls_flag_file_rename", scope: !939, file: !939, line: 905, type: !5802, isLocal: true, isDefinition: true, scopeLine: 905, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!5802 = !DISubroutineType(types: !5803)
!5803 = !{null, !2338, !2274, !1008}
!5804 = !DILocalVariable(name: "hls", arg: 1, scope: !5801, file: !939, line: 905, type: !2338)
!5805 = !DILocation(line: 905, column: 46, scope: !5801)
!5806 = !DILocalVariable(name: "vs", arg: 2, scope: !5801, file: !939, line: 905, type: !2274)
!5807 = !DILocation(line: 905, column: 66, scope: !5801)
!5808 = !DILocalVariable(name: "old_filename", arg: 3, scope: !5801, file: !939, line: 905, type: !1008)
!5809 = !DILocation(line: 905, column: 76, scope: !5801)
!5810 = !DILocation(line: 906, column: 10, scope: !5811)
!5811 = distinct !DILexicalBlock(scope: !5801, file: !939, line: 906, column: 9)
!5812 = !DILocation(line: 906, column: 15, scope: !5811)
!5813 = !DILocation(line: 906, column: 21, scope: !5811)
!5814 = !DILocation(line: 906, column: 92, scope: !5811)
!5815 = !DILocation(line: 907, column: 16, scope: !5811)
!5816 = !DILocation(line: 907, column: 20, scope: !5811)
!5817 = !DILocation(line: 907, column: 9, scope: !5811)
!5818 = !DILocation(line: 906, column: 9, scope: !5819)
!5819 = !DILexicalBlockFile(scope: !5801, file: !939, discriminator: 1)
!5820 = !DILocation(line: 908, column: 19, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !5811, file: !939, line: 907, column: 57)
!5822 = !DILocation(line: 908, column: 33, scope: !5821)
!5823 = !DILocation(line: 908, column: 37, scope: !5821)
!5824 = !DILocation(line: 908, column: 42, scope: !5821)
!5825 = !DILocation(line: 908, column: 47, scope: !5821)
!5826 = !DILocation(line: 908, column: 9, scope: !5821)
!5827 = !DILocation(line: 909, column: 5, scope: !5821)
!5828 = !DILocation(line: 910, column: 1, scope: !5801)
!5829 = distinct !DISubprogram(name: "hls_start", scope: !939, file: !939, line: 1486, type: !5830, isLocal: true, isDefinition: true, scopeLine: 1487, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!5830 = !DISubroutineType(types: !5831)
!5831 = !{!981, !2272, !2274}
!5832 = !DILocalVariable(name: "s", arg: 1, scope: !5829, file: !939, line: 1486, type: !2272)
!5833 = !DILocation(line: 1486, column: 39, scope: !5829)
!5834 = !DILocalVariable(name: "vs", arg: 2, scope: !5829, file: !939, line: 1486, type: !2274)
!5835 = !DILocation(line: 1486, column: 57, scope: !5829)
!5836 = !DILocalVariable(name: "c", scope: !5829, file: !939, line: 1488, type: !2338)
!5837 = !DILocation(line: 1488, column: 17, scope: !5829)
!5838 = !DILocation(line: 1488, column: 21, scope: !5829)
!5839 = !DILocation(line: 1488, column: 24, scope: !5829)
!5840 = !DILocalVariable(name: "oc", scope: !5829, file: !939, line: 1489, type: !2272)
!5841 = !DILocation(line: 1489, column: 22, scope: !5829)
!5842 = !DILocation(line: 1489, column: 27, scope: !5829)
!5843 = !DILocation(line: 1489, column: 31, scope: !5829)
!5844 = !DILocalVariable(name: "vtt_oc", scope: !5829, file: !939, line: 1490, type: !2272)
!5845 = !DILocation(line: 1490, column: 22, scope: !5829)
!5846 = !DILocation(line: 1490, column: 31, scope: !5829)
!5847 = !DILocation(line: 1490, column: 35, scope: !5829)
!5848 = !DILocalVariable(name: "options", scope: !5829, file: !939, line: 1491, type: !1479)
!5849 = !DILocation(line: 1491, column: 19, scope: !5829)
!5850 = !DILocalVariable(name: "proto", scope: !5829, file: !939, line: 1492, type: !1031)
!5851 = !DILocation(line: 1492, column: 17, scope: !5829)
!5852 = !DILocalVariable(name: "use_temp_file", scope: !5829, file: !939, line: 1493, type: !981)
!5853 = !DILocation(line: 1493, column: 9, scope: !5829)
!5854 = !DILocalVariable(name: "filename", scope: !5829, file: !939, line: 1494, type: !1008)
!5855 = !DILocation(line: 1494, column: 11, scope: !5829)
!5856 = !DILocalVariable(name: "iv_string", scope: !5829, file: !939, line: 1494, type: !1003)
!5857 = !DILocation(line: 1494, column: 21, scope: !5829)
!5858 = !DILocalVariable(name: "err", scope: !5829, file: !939, line: 1495, type: !981)
!5859 = !DILocation(line: 1495, column: 9, scope: !5829)
!5860 = !DILocation(line: 1497, column: 9, scope: !5861)
!5861 = distinct !DILexicalBlock(scope: !5829, file: !939, line: 1497, column: 9)
!5862 = !DILocation(line: 1497, column: 12, scope: !5861)
!5863 = !DILocation(line: 1497, column: 18, scope: !5861)
!5864 = !DILocation(line: 1497, column: 9, scope: !5829)
!5865 = !DILocalVariable(name: "new_name", scope: !5866, file: !939, line: 1498, type: !1008)
!5866 = distinct !DILexicalBlock(scope: !5861, file: !939, line: 1497, column: 37)
!5867 = !DILocation(line: 1498, column: 15, scope: !5866)
!5868 = !DILocation(line: 1498, column: 36, scope: !5866)
!5869 = !DILocation(line: 1498, column: 40, scope: !5866)
!5870 = !DILocation(line: 1498, column: 26, scope: !5866)
!5871 = !DILocation(line: 1499, column: 14, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5866, file: !939, line: 1499, column: 13)
!5873 = !DILocation(line: 1499, column: 13, scope: !5866)
!5874 = !DILocation(line: 1500, column: 13, scope: !5872)
!5875 = !DILocation(line: 1501, column: 27, scope: !5866)
!5876 = !DILocation(line: 1501, column: 31, scope: !5866)
!5877 = !DILocation(line: 1501, column: 9, scope: !5866)
!5878 = !DILocation(line: 1502, column: 13, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5866, file: !939, line: 1502, column: 13)
!5880 = !DILocation(line: 1502, column: 17, scope: !5879)
!5881 = !DILocation(line: 1502, column: 13, scope: !5866)
!5882 = !DILocation(line: 1503, column: 34, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5879, file: !939, line: 1502, column: 31)
!5884 = !DILocation(line: 1503, column: 38, scope: !5883)
!5885 = !DILocation(line: 1503, column: 24, scope: !5883)
!5886 = !DILocation(line: 1503, column: 22, scope: !5883)
!5887 = !DILocation(line: 1504, column: 18, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5883, file: !939, line: 1504, column: 17)
!5889 = !DILocation(line: 1504, column: 17, scope: !5883)
!5890 = !DILocation(line: 1505, column: 17, scope: !5888)
!5891 = !DILocation(line: 1506, column: 31, scope: !5883)
!5892 = !DILocation(line: 1506, column: 39, scope: !5883)
!5893 = !DILocation(line: 1506, column: 13, scope: !5883)
!5894 = !DILocation(line: 1507, column: 9, scope: !5883)
!5895 = !DILocation(line: 1508, column: 5, scope: !5866)
!5896 = !DILocation(line: 1508, column: 16, scope: !5897)
!5897 = !DILexicalBlockFile(scope: !5898, file: !939, discriminator: 1)
!5898 = distinct !DILexicalBlock(scope: !5861, file: !939, line: 1508, column: 16)
!5899 = !DILocation(line: 1508, column: 19, scope: !5897)
!5900 = !DILocation(line: 1508, column: 32, scope: !5897)
!5901 = !DILocalVariable(name: "filename", scope: !5902, file: !939, line: 1509, type: !1008)
!5902 = distinct !DILexicalBlock(scope: !5898, file: !939, line: 1508, column: 37)
!5903 = !DILocation(line: 1509, column: 15, scope: !5902)
!5904 = !DILocation(line: 1512, column: 13, scope: !5905)
!5905 = distinct !DILexicalBlock(scope: !5902, file: !939, line: 1510, column: 13)
!5906 = !DILocation(line: 1512, column: 17, scope: !5905)
!5907 = !DILocation(line: 1512, column: 32, scope: !5905)
!5908 = !DILocation(line: 1512, column: 35, scope: !5905)
!5909 = !DILocation(line: 1512, column: 42, scope: !5910)
!5910 = !DILexicalBlockFile(scope: !5905, file: !939, discriminator: 1)
!5911 = !DILocation(line: 1512, column: 46, scope: !5910)
!5912 = !DILocation(line: 1512, column: 57, scope: !5910)
!5913 = !DILocation(line: 1512, column: 60, scope: !5910)
!5914 = !DILocation(line: 1512, column: 55, scope: !5910)
!5915 = !DILocation(line: 1512, column: 32, scope: !5910)
!5916 = !DILocation(line: 1512, column: 67, scope: !5917)
!5917 = !DILexicalBlockFile(scope: !5905, file: !939, discriminator: 2)
!5918 = !DILocation(line: 1512, column: 71, scope: !5917)
!5919 = !DILocation(line: 1512, column: 32, scope: !5917)
!5920 = !DILocation(line: 1512, column: 32, scope: !5921)
!5921 = !DILexicalBlockFile(scope: !5905, file: !939, discriminator: 3)
!5922 = !DILocation(line: 1510, column: 13, scope: !5905)
!5923 = !DILocation(line: 1512, column: 81, scope: !5921)
!5924 = !DILocation(line: 1510, column: 13, scope: !5902)
!5925 = !DILocation(line: 1516, column: 25, scope: !5926)
!5926 = distinct !DILexicalBlock(scope: !5905, file: !939, line: 1512, column: 86)
!5927 = !DILocation(line: 1516, column: 17, scope: !5926)
!5928 = !DILocation(line: 1517, column: 24, scope: !5926)
!5929 = !DILocation(line: 1517, column: 116, scope: !5926)
!5930 = !DILocation(line: 1517, column: 120, scope: !5926)
!5931 = !DILocation(line: 1517, column: 17, scope: !5926)
!5932 = !DILocation(line: 1518, column: 17, scope: !5926)
!5933 = !DILocation(line: 1520, column: 27, scope: !5902)
!5934 = !DILocation(line: 1520, column: 31, scope: !5902)
!5935 = !DILocation(line: 1520, column: 9, scope: !5902)
!5936 = !DILocation(line: 1521, column: 5, scope: !5902)
!5937 = !DILocation(line: 1522, column: 13, scope: !5938)
!5938 = distinct !DILexicalBlock(scope: !5939, file: !939, line: 1522, column: 13)
!5939 = distinct !DILexicalBlock(scope: !5898, file: !939, line: 1521, column: 12)
!5940 = !DILocation(line: 1522, column: 16, scope: !5938)
!5941 = !DILocation(line: 1522, column: 13, scope: !5939)
!5942 = !DILocalVariable(name: "now0", scope: !5943, file: !939, line: 1523, type: !3969)
!5943 = distinct !DILexicalBlock(scope: !5938, file: !939, line: 1522, column: 31)
!5944 = !DILocation(line: 1523, column: 20, scope: !5943)
!5945 = !DILocalVariable(name: "tm", scope: !5943, file: !939, line: 1524, type: !3998)
!5946 = !DILocation(line: 1524, column: 24, scope: !5943)
!5947 = !DILocalVariable(name: "tmpbuf", scope: !5943, file: !939, line: 1524, type: !3999)
!5948 = !DILocation(line: 1524, column: 28, scope: !5943)
!5949 = !DILocalVariable(name: "bufsize", scope: !5943, file: !939, line: 1525, type: !981)
!5950 = !DILocation(line: 1525, column: 17, scope: !5943)
!5951 = !DILocation(line: 1525, column: 34, scope: !5943)
!5952 = !DILocation(line: 1525, column: 38, scope: !5943)
!5953 = !DILocation(line: 1525, column: 27, scope: !5943)
!5954 = !DILocation(line: 1525, column: 48, scope: !5943)
!5955 = !DILocalVariable(name: "buf", scope: !5943, file: !939, line: 1526, type: !1008)
!5956 = !DILocation(line: 1526, column: 19, scope: !5943)
!5957 = !DILocation(line: 1526, column: 36, scope: !5943)
!5958 = !DILocation(line: 1526, column: 25, scope: !5943)
!5959 = !DILocation(line: 1527, column: 18, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5943, file: !939, line: 1527, column: 17)
!5961 = !DILocation(line: 1527, column: 17, scope: !5943)
!5962 = !DILocation(line: 1528, column: 17, scope: !5960)
!5963 = !DILocation(line: 1529, column: 13, scope: !5943)
!5964 = !DILocation(line: 1530, column: 18, scope: !5943)
!5965 = !DILocation(line: 1530, column: 16, scope: !5943)
!5966 = !DILocation(line: 1531, column: 31, scope: !5943)
!5967 = !DILocation(line: 1531, column: 35, scope: !5943)
!5968 = !DILocation(line: 1531, column: 13, scope: !5943)
!5969 = !DILocation(line: 1532, column: 27, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5943, file: !939, line: 1532, column: 17)
!5971 = !DILocation(line: 1532, column: 31, scope: !5970)
!5972 = !DILocation(line: 1532, column: 36, scope: !5970)
!5973 = !DILocation(line: 1532, column: 45, scope: !5970)
!5974 = !DILocation(line: 1532, column: 49, scope: !5970)
!5975 = !DILocation(line: 1532, column: 59, scope: !5970)
!5976 = !DILocation(line: 1532, column: 18, scope: !5970)
!5977 = !DILocation(line: 1532, column: 17, scope: !5943)
!5978 = !DILocation(line: 1533, column: 24, scope: !5979)
!5979 = distinct !DILexicalBlock(scope: !5970, file: !939, line: 1532, column: 64)
!5980 = !DILocation(line: 1533, column: 17, scope: !5979)
!5981 = !DILocation(line: 1534, column: 17, scope: !5979)
!5982 = !DILocation(line: 1537, column: 51, scope: !5943)
!5983 = !DILocation(line: 1537, column: 55, scope: !5943)
!5984 = !DILocation(line: 1537, column: 58, scope: !5943)
!5985 = !DILocation(line: 1537, column: 19, scope: !5943)
!5986 = !DILocation(line: 1537, column: 17, scope: !5943)
!5987 = !DILocation(line: 1538, column: 17, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !5943, file: !939, line: 1538, column: 17)
!5989 = !DILocation(line: 1538, column: 21, scope: !5988)
!5990 = !DILocation(line: 1538, column: 17, scope: !5943)
!5991 = !DILocation(line: 1539, column: 17, scope: !5992)
!5992 = distinct !DILexicalBlock(scope: !5988, file: !939, line: 1538, column: 26)
!5993 = !DILocation(line: 1542, column: 17, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5943, file: !939, line: 1542, column: 17)
!5995 = !DILocation(line: 1542, column: 20, scope: !5994)
!5996 = !DILocation(line: 1542, column: 17, scope: !5943)
!5997 = !DILocalVariable(name: "dir", scope: !5998, file: !939, line: 1543, type: !1031)
!5998 = distinct !DILexicalBlock(scope: !5994, file: !939, line: 1542, column: 41)
!5999 = !DILocation(line: 1543, column: 29, scope: !5998)
!6000 = !DILocalVariable(name: "fn_copy", scope: !5998, file: !939, line: 1544, type: !1008)
!6001 = !DILocation(line: 1544, column: 23, scope: !5998)
!6002 = !DILocation(line: 1544, column: 43, scope: !5998)
!6003 = !DILocation(line: 1544, column: 47, scope: !5998)
!6004 = !DILocation(line: 1544, column: 33, scope: !5998)
!6005 = !DILocation(line: 1545, column: 22, scope: !6006)
!6006 = distinct !DILexicalBlock(scope: !5998, file: !939, line: 1545, column: 21)
!6007 = !DILocation(line: 1545, column: 21, scope: !5998)
!6008 = !DILocation(line: 1546, column: 21, scope: !6009)
!6009 = distinct !DILexicalBlock(scope: !6006, file: !939, line: 1545, column: 31)
!6010 = !DILocation(line: 1548, column: 34, scope: !5998)
!6011 = !DILocation(line: 1548, column: 23, scope: !5998)
!6012 = !DILocation(line: 1548, column: 21, scope: !5998)
!6013 = !DILocation(line: 1549, column: 32, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !5998, file: !939, line: 1549, column: 21)
!6015 = !DILocation(line: 1549, column: 21, scope: !6014)
!6016 = !DILocation(line: 1549, column: 37, scope: !6014)
!6017 = !DILocation(line: 1549, column: 43, scope: !6014)
!6018 = !DILocation(line: 1549, column: 47, scope: !6019)
!6019 = !DILexicalBlockFile(scope: !6014, file: !939, discriminator: 1)
!6020 = !DILocation(line: 1549, column: 46, scope: !6019)
!6021 = !DILocation(line: 1549, column: 51, scope: !6019)
!6022 = !DILocation(line: 1549, column: 21, scope: !6019)
!6023 = !DILocation(line: 1550, column: 28, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !6014, file: !939, line: 1549, column: 62)
!6025 = !DILocation(line: 1550, column: 96, scope: !6024)
!6026 = !DILocation(line: 1550, column: 21, scope: !6024)
!6027 = !DILocation(line: 1551, column: 29, scope: !6024)
!6028 = !DILocation(line: 1551, column: 21, scope: !6024)
!6029 = !DILocation(line: 1552, column: 29, scope: !6024)
!6030 = !DILocation(line: 1552, column: 28, scope: !6024)
!6031 = !DILocation(line: 1552, column: 21, scope: !6024)
!6032 = !DILocation(line: 1554, column: 25, scope: !5998)
!6033 = !DILocation(line: 1554, column: 17, scope: !5998)
!6034 = !DILocation(line: 1555, column: 13, scope: !5998)
!6035 = !DILocation(line: 1556, column: 9, scope: !5943)
!6036 = !DILocalVariable(name: "filename", scope: !6037, file: !939, line: 1557, type: !1008)
!6037 = distinct !DILexicalBlock(scope: !5938, file: !939, line: 1556, column: 16)
!6038 = !DILocation(line: 1557, column: 19, scope: !6037)
!6039 = !DILocation(line: 1560, column: 20, scope: !6040)
!6040 = distinct !DILexicalBlock(scope: !6037, file: !939, line: 1558, column: 17)
!6041 = !DILocation(line: 1560, column: 24, scope: !6040)
!6042 = !DILocation(line: 1560, column: 39, scope: !6040)
!6043 = !DILocation(line: 1560, column: 42, scope: !6040)
!6044 = !DILocation(line: 1560, column: 49, scope: !6045)
!6045 = !DILexicalBlockFile(scope: !6040, file: !939, discriminator: 1)
!6046 = !DILocation(line: 1560, column: 53, scope: !6045)
!6047 = !DILocation(line: 1560, column: 64, scope: !6045)
!6048 = !DILocation(line: 1560, column: 67, scope: !6045)
!6049 = !DILocation(line: 1560, column: 62, scope: !6045)
!6050 = !DILocation(line: 1560, column: 39, scope: !6045)
!6051 = !DILocation(line: 1560, column: 74, scope: !6052)
!6052 = !DILexicalBlockFile(scope: !6040, file: !939, discriminator: 2)
!6053 = !DILocation(line: 1560, column: 78, scope: !6052)
!6054 = !DILocation(line: 1560, column: 39, scope: !6052)
!6055 = !DILocation(line: 1560, column: 39, scope: !6056)
!6056 = !DILexicalBlockFile(scope: !6040, file: !939, discriminator: 3)
!6057 = !DILocation(line: 1558, column: 17, scope: !6040)
!6058 = !DILocation(line: 1560, column: 88, scope: !6056)
!6059 = !DILocation(line: 1558, column: 17, scope: !6037)
!6060 = !DILocation(line: 1564, column: 25, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6040, file: !939, line: 1560, column: 93)
!6062 = !DILocation(line: 1564, column: 17, scope: !6061)
!6063 = !DILocation(line: 1565, column: 24, scope: !6061)
!6064 = !DILocation(line: 1565, column: 115, scope: !6061)
!6065 = !DILocation(line: 1565, column: 119, scope: !6061)
!6066 = !DILocation(line: 1565, column: 17, scope: !6061)
!6067 = !DILocation(line: 1566, column: 17, scope: !6061)
!6068 = !DILocation(line: 1568, column: 31, scope: !6037)
!6069 = !DILocation(line: 1568, column: 35, scope: !6037)
!6070 = !DILocation(line: 1568, column: 13, scope: !6037)
!6071 = !DILocation(line: 1570, column: 13, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !5939, file: !939, line: 1570, column: 13)
!6073 = !DILocation(line: 1570, column: 17, scope: !6072)
!6074 = !DILocation(line: 1570, column: 13, scope: !5939)
!6075 = !DILocalVariable(name: "filename", scope: !6076, file: !939, line: 1571, type: !1008)
!6076 = distinct !DILexicalBlock(scope: !6072, file: !939, line: 1570, column: 31)
!6077 = !DILocation(line: 1571, column: 19, scope: !6076)
!6078 = !DILocation(line: 1574, column: 17, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !6076, file: !939, line: 1572, column: 17)
!6080 = !DILocation(line: 1574, column: 21, scope: !6079)
!6081 = !DILocation(line: 1574, column: 40, scope: !6079)
!6082 = !DILocation(line: 1574, column: 43, scope: !6079)
!6083 = !DILocation(line: 1574, column: 50, scope: !6084)
!6084 = !DILexicalBlockFile(scope: !6079, file: !939, discriminator: 1)
!6085 = !DILocation(line: 1574, column: 54, scope: !6084)
!6086 = !DILocation(line: 1574, column: 65, scope: !6084)
!6087 = !DILocation(line: 1574, column: 68, scope: !6084)
!6088 = !DILocation(line: 1574, column: 63, scope: !6084)
!6089 = !DILocation(line: 1574, column: 40, scope: !6084)
!6090 = !DILocation(line: 1574, column: 75, scope: !6091)
!6091 = !DILexicalBlockFile(scope: !6079, file: !939, discriminator: 2)
!6092 = !DILocation(line: 1574, column: 79, scope: !6091)
!6093 = !DILocation(line: 1574, column: 40, scope: !6091)
!6094 = !DILocation(line: 1574, column: 40, scope: !6095)
!6095 = !DILexicalBlockFile(scope: !6079, file: !939, discriminator: 3)
!6096 = !DILocation(line: 1572, column: 17, scope: !6079)
!6097 = !DILocation(line: 1574, column: 89, scope: !6095)
!6098 = !DILocation(line: 1572, column: 17, scope: !6076)
!6099 = !DILocation(line: 1578, column: 25, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !6079, file: !939, line: 1574, column: 94)
!6101 = !DILocation(line: 1578, column: 17, scope: !6100)
!6102 = !DILocation(line: 1579, column: 24, scope: !6100)
!6103 = !DILocation(line: 1579, column: 80, scope: !6100)
!6104 = !DILocation(line: 1579, column: 84, scope: !6100)
!6105 = !DILocation(line: 1579, column: 17, scope: !6100)
!6106 = !DILocation(line: 1580, column: 17, scope: !6100)
!6107 = !DILocation(line: 1582, column: 31, scope: !6076)
!6108 = !DILocation(line: 1582, column: 39, scope: !6076)
!6109 = !DILocation(line: 1582, column: 13, scope: !6076)
!6110 = !DILocation(line: 1583, column: 8, scope: !6076)
!6111 = !DILocation(line: 1585, column: 5, scope: !5829)
!6112 = !DILocation(line: 1585, column: 9, scope: !5829)
!6113 = !DILocation(line: 1585, column: 15, scope: !5829)
!6114 = !DILocation(line: 1587, column: 22, scope: !5829)
!6115 = !DILocation(line: 1587, column: 35, scope: !5829)
!6116 = !DILocation(line: 1587, column: 5, scope: !5829)
!6117 = !DILocation(line: 1589, column: 37, scope: !5829)
!6118 = !DILocation(line: 1589, column: 41, scope: !5829)
!6119 = !DILocation(line: 1589, column: 13, scope: !5829)
!6120 = !DILocation(line: 1589, column: 11, scope: !5829)
!6121 = !DILocation(line: 1590, column: 21, scope: !5829)
!6122 = !DILocation(line: 1590, column: 27, scope: !5829)
!6123 = !DILocation(line: 1590, column: 38, scope: !6124)
!6124 = !DILexicalBlockFile(scope: !5829, file: !939, discriminator: 1)
!6125 = !DILocation(line: 1590, column: 31, scope: !6124)
!6126 = !DILocation(line: 1590, column: 53, scope: !6124)
!6127 = !DILocation(line: 1590, column: 57, scope: !6128)
!6128 = !DILexicalBlockFile(scope: !5829, file: !939, discriminator: 2)
!6129 = !DILocation(line: 1590, column: 60, scope: !6128)
!6130 = !DILocation(line: 1590, column: 66, scope: !6128)
!6131 = !DILocation(line: 1590, column: 53, scope: !6128)
!6132 = !DILocation(line: 1590, column: 53, scope: !6133)
!6133 = !DILexicalBlockFile(scope: !5829, file: !939, discriminator: 3)
!6134 = !DILocation(line: 1590, column: 19, scope: !6133)
!6135 = !DILocation(line: 1592, column: 9, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !5829, file: !939, line: 1592, column: 9)
!6137 = !DILocation(line: 1592, column: 9, scope: !5829)
!6138 = !DILocalVariable(name: "new_name", scope: !6139, file: !939, line: 1593, type: !1008)
!6139 = distinct !DILexicalBlock(scope: !6136, file: !939, line: 1592, column: 24)
!6140 = !DILocation(line: 1593, column: 15, scope: !6139)
!6141 = !DILocation(line: 1593, column: 48, scope: !6139)
!6142 = !DILocation(line: 1593, column: 52, scope: !6139)
!6143 = !DILocation(line: 1593, column: 26, scope: !6139)
!6144 = !DILocation(line: 1594, column: 14, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6139, file: !939, line: 1594, column: 13)
!6146 = !DILocation(line: 1594, column: 13, scope: !6139)
!6147 = !DILocation(line: 1595, column: 13, scope: !6145)
!6148 = !DILocation(line: 1596, column: 27, scope: !6139)
!6149 = !DILocation(line: 1596, column: 31, scope: !6139)
!6150 = !DILocation(line: 1596, column: 9, scope: !6139)
!6151 = !DILocation(line: 1597, column: 5, scope: !6139)
!6152 = !DILocation(line: 1599, column: 9, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !5829, file: !939, line: 1599, column: 9)
!6154 = !DILocation(line: 1599, column: 12, scope: !6153)
!6155 = !DILocation(line: 1599, column: 26, scope: !6153)
!6156 = !DILocation(line: 1599, column: 29, scope: !6157)
!6157 = !DILexicalBlockFile(scope: !6153, file: !939, discriminator: 1)
!6158 = !DILocation(line: 1599, column: 32, scope: !6157)
!6159 = !DILocation(line: 1599, column: 9, scope: !6157)
!6160 = !DILocation(line: 1600, column: 13, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6162, file: !939, line: 1600, column: 13)
!6162 = distinct !DILexicalBlock(scope: !6153, file: !939, line: 1599, column: 41)
!6163 = !DILocation(line: 1600, column: 16, scope: !6161)
!6164 = !DILocation(line: 1600, column: 29, scope: !6161)
!6165 = !DILocation(line: 1600, column: 13, scope: !6162)
!6166 = !DILocation(line: 1601, column: 20, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !6161, file: !939, line: 1600, column: 51)
!6168 = !DILocation(line: 1601, column: 13, scope: !6167)
!6169 = !DILocation(line: 1602, column: 13, scope: !6167)
!6170 = !DILocation(line: 1605, column: 13, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6162, file: !939, line: 1605, column: 13)
!6172 = !DILocation(line: 1605, column: 16, scope: !6171)
!6173 = !DILocation(line: 1605, column: 30, scope: !6171)
!6174 = !DILocation(line: 1605, column: 33, scope: !6175)
!6175 = !DILexicalBlockFile(scope: !6171, file: !939, discriminator: 1)
!6176 = !DILocation(line: 1605, column: 36, scope: !6175)
!6177 = !DILocation(line: 1605, column: 13, scope: !6175)
!6178 = !DILocation(line: 1606, column: 20, scope: !6179)
!6179 = distinct !DILexicalBlock(scope: !6171, file: !939, line: 1605, column: 45)
!6180 = !DILocation(line: 1606, column: 13, scope: !6179)
!6181 = !DILocation(line: 1608, column: 9, scope: !6179)
!6182 = !DILocation(line: 1610, column: 14, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !6162, file: !939, line: 1610, column: 13)
!6184 = !DILocation(line: 1610, column: 17, scope: !6183)
!6185 = !DILocation(line: 1610, column: 33, scope: !6183)
!6186 = !DILocation(line: 1610, column: 37, scope: !6187)
!6187 = !DILexicalBlockFile(scope: !6183, file: !939, discriminator: 1)
!6188 = !DILocation(line: 1610, column: 40, scope: !6187)
!6189 = !DILocation(line: 1610, column: 46, scope: !6187)
!6190 = !DILocation(line: 1610, column: 13, scope: !6187)
!6191 = !DILocation(line: 1611, column: 17, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6193, file: !939, line: 1611, column: 17)
!6193 = distinct !DILexicalBlock(scope: !6183, file: !939, line: 1610, column: 69)
!6194 = !DILocation(line: 1611, column: 20, scope: !6192)
!6195 = !DILocation(line: 1611, column: 17, scope: !6193)
!6196 = !DILocation(line: 1612, column: 49, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !6198, file: !939, line: 1612, column: 21)
!6198 = distinct !DILexicalBlock(scope: !6192, file: !939, line: 1611, column: 35)
!6199 = !DILocation(line: 1612, column: 28, scope: !6197)
!6200 = !DILocation(line: 1612, column: 26, scope: !6197)
!6201 = !DILocation(line: 1612, column: 53, scope: !6197)
!6202 = !DILocation(line: 1612, column: 21, scope: !6198)
!6203 = !DILocation(line: 1613, column: 21, scope: !6197)
!6204 = !DILocation(line: 1614, column: 13, scope: !6198)
!6205 = !DILocation(line: 1615, column: 39, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6207, file: !939, line: 1615, column: 21)
!6207 = distinct !DILexicalBlock(scope: !6192, file: !939, line: 1614, column: 20)
!6208 = !DILocation(line: 1615, column: 42, scope: !6206)
!6209 = !DILocation(line: 1615, column: 28, scope: !6206)
!6210 = !DILocation(line: 1615, column: 26, scope: !6206)
!6211 = !DILocation(line: 1615, column: 47, scope: !6206)
!6212 = !DILocation(line: 1615, column: 21, scope: !6207)
!6213 = !DILocation(line: 1616, column: 21, scope: !6206)
!6214 = !DILocation(line: 1618, column: 13, scope: !6193)
!6215 = !DILocation(line: 1618, column: 16, scope: !6193)
!6216 = !DILocation(line: 1618, column: 32, scope: !6193)
!6217 = !DILocation(line: 1619, column: 9, scope: !6193)
!6218 = !DILocation(line: 1620, column: 60, scope: !6219)
!6219 = distinct !DILexicalBlock(scope: !6162, file: !939, line: 1620, column: 13)
!6220 = !DILocation(line: 1620, column: 63, scope: !6219)
!6221 = !DILocation(line: 1620, column: 20, scope: !6219)
!6222 = !DILocation(line: 1620, column: 18, scope: !6219)
!6223 = !DILocation(line: 1621, column: 17, scope: !6219)
!6224 = !DILocation(line: 1620, column: 13, scope: !6162)
!6225 = !DILocation(line: 1622, column: 13, scope: !6219)
!6226 = !DILocation(line: 1623, column: 26, scope: !6162)
!6227 = !DILocation(line: 1623, column: 37, scope: !6162)
!6228 = !DILocation(line: 1623, column: 40, scope: !6162)
!6229 = !DILocation(line: 1623, column: 15, scope: !6162)
!6230 = !DILocation(line: 1623, column: 13, scope: !6162)
!6231 = !DILocation(line: 1624, column: 14, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6162, file: !939, line: 1624, column: 13)
!6233 = !DILocation(line: 1624, column: 13, scope: !6162)
!6234 = !DILocation(line: 1625, column: 22, scope: !6232)
!6235 = !DILocation(line: 1625, column: 65, scope: !6232)
!6236 = !DILocation(line: 1625, column: 69, scope: !6232)
!6237 = !DILocation(line: 1625, column: 13, scope: !6232)
!6238 = !DILocation(line: 1626, column: 59, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6162, file: !939, line: 1626, column: 13)
!6240 = !DILocation(line: 1626, column: 20, scope: !6239)
!6241 = !DILocation(line: 1626, column: 18, scope: !6239)
!6242 = !DILocation(line: 1626, column: 74, scope: !6239)
!6243 = !DILocation(line: 1626, column: 13, scope: !6162)
!6244 = !DILocation(line: 1627, column: 12, scope: !6239)
!6245 = !DILocation(line: 1629, column: 45, scope: !6162)
!6246 = !DILocation(line: 1629, column: 49, scope: !6162)
!6247 = !DILocation(line: 1629, column: 20, scope: !6162)
!6248 = !DILocation(line: 1629, column: 18, scope: !6162)
!6249 = !DILocation(line: 1630, column: 14, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !6162, file: !939, line: 1630, column: 13)
!6251 = !DILocation(line: 1630, column: 13, scope: !6162)
!6252 = !DILocation(line: 1631, column: 17, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6250, file: !939, line: 1630, column: 24)
!6254 = !DILocation(line: 1632, column: 13, scope: !6253)
!6255 = !DILocation(line: 1634, column: 30, scope: !6162)
!6256 = !DILocation(line: 1634, column: 34, scope: !6162)
!6257 = !DILocation(line: 1634, column: 38, scope: !6162)
!6258 = !DILocation(line: 1634, column: 42, scope: !6162)
!6259 = !DILocation(line: 1634, column: 15, scope: !6162)
!6260 = !DILocation(line: 1634, column: 13, scope: !6162)
!6261 = !DILocation(line: 1635, column: 17, scope: !6162)
!6262 = !DILocation(line: 1635, column: 9, scope: !6162)
!6263 = !DILocation(line: 1636, column: 9, scope: !6162)
!6264 = !DILocation(line: 1637, column: 13, scope: !6265)
!6265 = distinct !DILexicalBlock(scope: !6162, file: !939, line: 1637, column: 13)
!6266 = !DILocation(line: 1637, column: 17, scope: !6265)
!6267 = !DILocation(line: 1637, column: 13, scope: !6162)
!6268 = !DILocation(line: 1638, column: 20, scope: !6265)
!6269 = !DILocation(line: 1638, column: 13, scope: !6265)
!6270 = !DILocation(line: 1639, column: 5, scope: !6162)
!6271 = !DILocation(line: 1639, column: 16, scope: !6272)
!6272 = !DILexicalBlockFile(scope: !6273, file: !939, discriminator: 1)
!6273 = distinct !DILexicalBlock(scope: !6153, file: !939, line: 1639, column: 16)
!6274 = !DILocation(line: 1639, column: 19, scope: !6272)
!6275 = !DILocation(line: 1639, column: 32, scope: !6272)
!6276 = !DILocation(line: 1640, column: 35, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !6278, file: !939, line: 1640, column: 13)
!6278 = distinct !DILexicalBlock(scope: !6273, file: !939, line: 1639, column: 54)
!6279 = !DILocation(line: 1640, column: 39, scope: !6277)
!6280 = !DILocation(line: 1640, column: 43, scope: !6277)
!6281 = !DILocation(line: 1640, column: 47, scope: !6277)
!6282 = !DILocation(line: 1640, column: 51, scope: !6277)
!6283 = !DILocation(line: 1640, column: 20, scope: !6277)
!6284 = !DILocation(line: 1640, column: 18, scope: !6277)
!6285 = !DILocation(line: 1640, column: 67, scope: !6277)
!6286 = !DILocation(line: 1640, column: 13, scope: !6278)
!6287 = !DILocation(line: 1641, column: 17, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !6289, file: !939, line: 1641, column: 17)
!6289 = distinct !DILexicalBlock(scope: !6277, file: !939, line: 1640, column: 72)
!6290 = !DILocation(line: 1641, column: 20, scope: !6288)
!6291 = !DILocation(line: 1641, column: 17, scope: !6289)
!6292 = !DILocation(line: 1642, column: 21, scope: !6288)
!6293 = !DILocation(line: 1642, column: 17, scope: !6288)
!6294 = !DILocation(line: 1643, column: 13, scope: !6289)
!6295 = !DILocation(line: 1645, column: 5, scope: !6278)
!6296 = !DILocation(line: 1646, column: 9, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !5829, file: !939, line: 1646, column: 9)
!6298 = !DILocation(line: 1646, column: 13, scope: !6297)
!6299 = !DILocation(line: 1646, column: 9, scope: !5829)
!6300 = !DILocation(line: 1647, column: 26, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !6297, file: !939, line: 1646, column: 27)
!6302 = !DILocation(line: 1647, column: 39, scope: !6301)
!6303 = !DILocation(line: 1647, column: 9, scope: !6301)
!6304 = !DILocation(line: 1648, column: 35, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6301, file: !939, line: 1648, column: 13)
!6306 = !DILocation(line: 1648, column: 39, scope: !6305)
!6307 = !DILocation(line: 1648, column: 47, scope: !6305)
!6308 = !DILocation(line: 1648, column: 51, scope: !6305)
!6309 = !DILocation(line: 1648, column: 59, scope: !6305)
!6310 = !DILocation(line: 1648, column: 20, scope: !6305)
!6311 = !DILocation(line: 1648, column: 18, scope: !6305)
!6312 = !DILocation(line: 1648, column: 75, scope: !6305)
!6313 = !DILocation(line: 1648, column: 13, scope: !6301)
!6314 = !DILocation(line: 1649, column: 17, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6316, file: !939, line: 1649, column: 17)
!6316 = distinct !DILexicalBlock(scope: !6305, file: !939, line: 1648, column: 80)
!6317 = !DILocation(line: 1649, column: 20, scope: !6315)
!6318 = !DILocation(line: 1649, column: 17, scope: !6316)
!6319 = !DILocation(line: 1650, column: 21, scope: !6315)
!6320 = !DILocation(line: 1650, column: 17, scope: !6315)
!6321 = !DILocation(line: 1651, column: 13, scope: !6316)
!6322 = !DILocation(line: 1653, column: 5, scope: !6301)
!6323 = !DILocation(line: 1654, column: 5, scope: !5829)
!6324 = !DILocation(line: 1656, column: 9, scope: !6325)
!6325 = distinct !DILexicalBlock(scope: !5829, file: !939, line: 1656, column: 9)
!6326 = !DILocation(line: 1656, column: 12, scope: !6325)
!6327 = !DILocation(line: 1656, column: 25, scope: !6325)
!6328 = !DILocation(line: 1656, column: 9, scope: !5829)
!6329 = !DILocation(line: 1658, column: 13, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6331, file: !939, line: 1658, column: 13)
!6331 = distinct !DILexicalBlock(scope: !6325, file: !939, line: 1656, column: 47)
!6332 = !DILocation(line: 1658, column: 17, scope: !6330)
!6333 = !DILocation(line: 1658, column: 26, scope: !6330)
!6334 = !DILocation(line: 1658, column: 37, scope: !6330)
!6335 = !DILocation(line: 1658, column: 40, scope: !6336)
!6336 = !DILexicalBlockFile(scope: !6330, file: !939, discriminator: 1)
!6337 = !DILocation(line: 1658, column: 44, scope: !6336)
!6338 = !DILocation(line: 1658, column: 13, scope: !6336)
!6339 = !DILocalVariable(name: "period", scope: !6340, file: !939, line: 1659, type: !6341)
!6340 = distinct !DILexicalBlock(scope: !6330, file: !939, line: 1658, column: 55)
!6341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !989, size: 168, align: 8, elements: !6342)
!6342 = !{!6343}
!6343 = !DISubrange(count: 21)
!6344 = !DILocation(line: 1659, column: 18, scope: !6340)
!6345 = !DILocation(line: 1661, column: 22, scope: !6340)
!6346 = !DILocation(line: 1661, column: 13, scope: !6340)
!6347 = !DILocation(line: 1663, column: 24, scope: !6340)
!6348 = !DILocation(line: 1663, column: 28, scope: !6340)
!6349 = !DILocation(line: 1663, column: 13, scope: !6340)
!6350 = !DILocation(line: 1664, column: 24, scope: !6340)
!6351 = !DILocation(line: 1664, column: 28, scope: !6340)
!6352 = !DILocation(line: 1664, column: 53, scope: !6340)
!6353 = !DILocation(line: 1664, column: 13, scope: !6340)
!6354 = !DILocation(line: 1665, column: 24, scope: !6340)
!6355 = !DILocation(line: 1665, column: 28, scope: !6340)
!6356 = !DILocation(line: 1665, column: 53, scope: !6340)
!6357 = !DILocation(line: 1665, column: 13, scope: !6340)
!6358 = !DILocation(line: 1666, column: 9, scope: !6340)
!6359 = !DILocation(line: 1667, column: 5, scope: !6331)
!6360 = !DILocation(line: 1669, column: 9, scope: !6361)
!6361 = distinct !DILexicalBlock(scope: !5829, file: !939, line: 1669, column: 9)
!6362 = !DILocation(line: 1669, column: 13, scope: !6361)
!6363 = !DILocation(line: 1669, column: 9, scope: !5829)
!6364 = !DILocation(line: 1670, column: 37, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6361, file: !939, line: 1669, column: 27)
!6366 = !DILocation(line: 1670, column: 15, scope: !6365)
!6367 = !DILocation(line: 1670, column: 13, scope: !6365)
!6368 = !DILocation(line: 1671, column: 13, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !6365, file: !939, line: 1671, column: 13)
!6370 = !DILocation(line: 1671, column: 17, scope: !6369)
!6371 = !DILocation(line: 1671, column: 13, scope: !6365)
!6372 = !DILocation(line: 1672, column: 20, scope: !6369)
!6373 = !DILocation(line: 1672, column: 13, scope: !6369)
!6374 = !DILocation(line: 1673, column: 5, scope: !6365)
!6375 = !DILocation(line: 1675, column: 5, scope: !5829)
!6376 = !DILocation(line: 1677, column: 5, scope: !5829)
!6377 = !DILocation(line: 1679, column: 12, scope: !5829)
!6378 = !DILocation(line: 1679, column: 5, scope: !5829)
!6379 = !DILocation(line: 1680, column: 1, scope: !5829)
!6380 = !DILocalVariable(name: "s", arg: 1, scope: !2269, file: !939, line: 1363, type: !2272)
!6381 = !DILocation(line: 1363, column: 40, scope: !2269)
!6382 = !DILocalVariable(name: "last", arg: 2, scope: !2269, file: !939, line: 1363, type: !981)
!6383 = !DILocation(line: 1363, column: 47, scope: !2269)
!6384 = !DILocalVariable(name: "vs", arg: 3, scope: !2269, file: !939, line: 1363, type: !2274)
!6385 = !DILocation(line: 1363, column: 68, scope: !2269)
!6386 = !DILocalVariable(name: "hls", scope: !2269, file: !939, line: 1365, type: !2338)
!6387 = !DILocation(line: 1365, column: 17, scope: !2269)
!6388 = !DILocation(line: 1365, column: 23, scope: !2269)
!6389 = !DILocation(line: 1365, column: 26, scope: !2269)
!6390 = !DILocalVariable(name: "en", scope: !2269, file: !939, line: 1366, type: !983)
!6391 = !DILocation(line: 1366, column: 17, scope: !2269)
!6392 = !DILocalVariable(name: "target_duration", scope: !2269, file: !939, line: 1367, type: !981)
!6393 = !DILocation(line: 1367, column: 9, scope: !2269)
!6394 = !DILocalVariable(name: "ret", scope: !2269, file: !939, line: 1368, type: !981)
!6395 = !DILocation(line: 1368, column: 9, scope: !2269)
!6396 = !DILocalVariable(name: "temp_filename", scope: !2269, file: !939, line: 1369, type: !988)
!6397 = !DILocation(line: 1369, column: 10, scope: !2269)
!6398 = !DILocalVariable(name: "sequence", scope: !2269, file: !939, line: 1370, type: !976)
!6399 = !DILocation(line: 1370, column: 13, scope: !2269)
!6400 = !DILocation(line: 1370, column: 26, scope: !2269)
!6401 = !DILocation(line: 1370, column: 31, scope: !2269)
!6402 = !DILocation(line: 1370, column: 50, scope: !2269)
!6403 = !DILocation(line: 1370, column: 54, scope: !2269)
!6404 = !DILocation(line: 1370, column: 65, scope: !2269)
!6405 = !DILocation(line: 1370, column: 69, scope: !2269)
!6406 = !DILocation(line: 1370, column: 63, scope: !2269)
!6407 = !DILocation(line: 1370, column: 47, scope: !2269)
!6408 = !DILocation(line: 1370, column: 25, scope: !2269)
!6409 = !DILocation(line: 1370, column: 84, scope: !6410)
!6410 = !DILexicalBlockFile(scope: !2269, file: !939, discriminator: 1)
!6411 = !DILocation(line: 1370, column: 89, scope: !6410)
!6412 = !DILocation(line: 1370, column: 25, scope: !6410)
!6413 = !DILocation(line: 1370, column: 108, scope: !6414)
!6414 = !DILexicalBlockFile(scope: !2269, file: !939, discriminator: 2)
!6415 = !DILocation(line: 1370, column: 112, scope: !6414)
!6416 = !DILocation(line: 1370, column: 123, scope: !6414)
!6417 = !DILocation(line: 1370, column: 127, scope: !6414)
!6418 = !DILocation(line: 1370, column: 121, scope: !6414)
!6419 = !DILocation(line: 1370, column: 25, scope: !6414)
!6420 = !DILocation(line: 1370, column: 25, scope: !6421)
!6421 = !DILexicalBlockFile(scope: !2269, file: !939, discriminator: 3)
!6422 = !DILocation(line: 1370, column: 13, scope: !6421)
!6423 = !DILocalVariable(name: "proto", scope: !2269, file: !939, line: 1371, type: !1031)
!6424 = !DILocation(line: 1371, column: 17, scope: !2269)
!6425 = !DILocation(line: 1371, column: 49, scope: !2269)
!6426 = !DILocation(line: 1371, column: 53, scope: !2269)
!6427 = !DILocation(line: 1371, column: 25, scope: !2269)
!6428 = !DILocalVariable(name: "is_file_proto", scope: !2269, file: !939, line: 1372, type: !981)
!6429 = !DILocation(line: 1372, column: 9, scope: !2269)
!6430 = !DILocation(line: 1372, column: 25, scope: !2269)
!6431 = !DILocation(line: 1372, column: 31, scope: !2269)
!6432 = !DILocation(line: 1372, column: 42, scope: !6410)
!6433 = !DILocation(line: 1372, column: 35, scope: !6410)
!6434 = !DILocation(line: 1372, column: 34, scope: !6410)
!6435 = !DILocation(line: 1372, column: 31, scope: !6414)
!6436 = !DILocation(line: 1372, column: 9, scope: !6414)
!6437 = !DILocalVariable(name: "use_temp_file", scope: !2269, file: !939, line: 1373, type: !981)
!6438 = !DILocation(line: 1373, column: 9, scope: !2269)
!6439 = !DILocation(line: 1373, column: 25, scope: !2269)
!6440 = !DILocation(line: 1373, column: 39, scope: !2269)
!6441 = !DILocation(line: 1373, column: 44, scope: !6410)
!6442 = !DILocation(line: 1373, column: 49, scope: !6410)
!6443 = !DILocation(line: 1373, column: 55, scope: !6410)
!6444 = !DILocation(line: 1373, column: 72, scope: !6410)
!6445 = !DILocation(line: 1373, column: 77, scope: !6414)
!6446 = !DILocation(line: 1373, column: 82, scope: !6414)
!6447 = !DILocation(line: 1373, column: 90, scope: !6414)
!6448 = !DILocation(line: 1373, column: 75, scope: !6414)
!6449 = !DILocation(line: 1373, column: 72, scope: !6414)
!6450 = !DILocation(line: 1373, column: 39, scope: !6421)
!6451 = !DILocation(line: 1373, column: 9, scope: !6421)
!6452 = !DILocalVariable(name: "key_uri", scope: !2269, file: !939, line: 1375, type: !1008)
!6453 = !DILocation(line: 1375, column: 11, scope: !2269)
!6454 = !DILocalVariable(name: "iv_string", scope: !2269, file: !939, line: 1376, type: !1008)
!6455 = !DILocation(line: 1376, column: 11, scope: !2269)
!6456 = !DILocalVariable(name: "options", scope: !2269, file: !939, line: 1377, type: !1479)
!6457 = !DILocation(line: 1377, column: 19, scope: !2269)
!6458 = !DILocalVariable(name: "prog_date_time", scope: !2269, file: !939, line: 1378, type: !979)
!6459 = !DILocation(line: 1378, column: 12, scope: !2269)
!6460 = !DILocation(line: 1378, column: 29, scope: !2269)
!6461 = !DILocation(line: 1378, column: 33, scope: !2269)
!6462 = !DILocalVariable(name: "prog_date_time_p", scope: !2269, file: !939, line: 1379, type: !6463)
!6463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64, align: 64)
!6464 = !DILocation(line: 1379, column: 13, scope: !2269)
!6465 = !DILocation(line: 1379, column: 33, scope: !2269)
!6466 = !DILocation(line: 1379, column: 38, scope: !2269)
!6467 = !DILocation(line: 1379, column: 44, scope: !2269)
!6468 = !DILocation(line: 1379, column: 32, scope: !2269)
!6469 = !DILocation(line: 1379, column: 32, scope: !6410)
!6470 = !DILocation(line: 1379, column: 32, scope: !6414)
!6471 = !DILocation(line: 1379, column: 32, scope: !6421)
!6472 = !DILocation(line: 1379, column: 13, scope: !6421)
!6473 = !DILocalVariable(name: "byterange_mode", scope: !2269, file: !939, line: 1380, type: !981)
!6474 = !DILocation(line: 1380, column: 9, scope: !2269)
!6475 = !DILocation(line: 1380, column: 27, scope: !2269)
!6476 = !DILocation(line: 1380, column: 32, scope: !2269)
!6477 = !DILocation(line: 1380, column: 38, scope: !2269)
!6478 = !DILocation(line: 1380, column: 57, scope: !2269)
!6479 = !DILocation(line: 1380, column: 61, scope: !6410)
!6480 = !DILocation(line: 1380, column: 66, scope: !6410)
!6481 = !DILocation(line: 1380, column: 79, scope: !6410)
!6482 = !DILocation(line: 1380, column: 57, scope: !6410)
!6483 = !DILocation(line: 1380, column: 57, scope: !6414)
!6484 = !DILocation(line: 1380, column: 9, scope: !6414)
!6485 = !DILocation(line: 1382, column: 5, scope: !2269)
!6486 = !DILocation(line: 1382, column: 10, scope: !2269)
!6487 = !DILocation(line: 1382, column: 18, scope: !2269)
!6488 = !DILocation(line: 1383, column: 9, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !2269, file: !939, line: 1383, column: 9)
!6490 = !DILocation(line: 1383, column: 9, scope: !2269)
!6491 = !DILocation(line: 1384, column: 9, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6489, file: !939, line: 1383, column: 25)
!6493 = !DILocation(line: 1384, column: 14, scope: !6492)
!6494 = !DILocation(line: 1384, column: 22, scope: !6492)
!6495 = !DILocation(line: 1385, column: 18, scope: !6492)
!6496 = !DILocation(line: 1386, column: 5, scope: !6492)
!6497 = !DILocation(line: 1388, column: 9, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !2269, file: !939, line: 1388, column: 9)
!6499 = !DILocation(line: 1388, column: 14, scope: !6498)
!6500 = !DILocation(line: 1388, column: 20, scope: !6498)
!6501 = !DILocation(line: 1388, column: 9, scope: !2269)
!6502 = !DILocation(line: 1389, column: 9, scope: !6503)
!6503 = distinct !DILexicalBlock(scope: !6498, file: !939, line: 1388, column: 48)
!6504 = !DILocation(line: 1389, column: 14, scope: !6503)
!6505 = !DILocation(line: 1389, column: 22, scope: !6503)
!6506 = !DILocation(line: 1390, column: 5, scope: !6503)
!6507 = !DILocation(line: 1392, column: 9, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !2269, file: !939, line: 1392, column: 9)
!6509 = !DILocation(line: 1392, column: 14, scope: !6508)
!6510 = !DILocation(line: 1392, column: 27, scope: !6508)
!6511 = !DILocation(line: 1392, column: 9, scope: !2269)
!6512 = !DILocation(line: 1393, column: 9, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6508, file: !939, line: 1392, column: 49)
!6514 = !DILocation(line: 1393, column: 14, scope: !6513)
!6515 = !DILocation(line: 1393, column: 22, scope: !6513)
!6516 = !DILocation(line: 1394, column: 5, scope: !6513)
!6517 = !DILocation(line: 1396, column: 10, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !2269, file: !939, line: 1396, column: 9)
!6519 = !DILocation(line: 1396, column: 24, scope: !6518)
!6520 = !DILocation(line: 1396, column: 28, scope: !6521)
!6521 = !DILexicalBlockFile(scope: !6518, file: !939, discriminator: 1)
!6522 = !DILocation(line: 1396, column: 33, scope: !6521)
!6523 = !DILocation(line: 1396, column: 39, scope: !6521)
!6524 = !DILocation(line: 1396, column: 56, scope: !6521)
!6525 = !DILocation(line: 1396, column: 75, scope: !6526)
!6526 = !DILexicalBlockFile(scope: !6518, file: !939, discriminator: 2)
!6527 = !DILocation(line: 1396, column: 9, scope: !6526)
!6528 = !DILocation(line: 1397, column: 16, scope: !6518)
!6529 = !DILocation(line: 1397, column: 9, scope: !6518)
!6530 = !DILocation(line: 1399, column: 22, scope: !2269)
!6531 = !DILocation(line: 1399, column: 35, scope: !2269)
!6532 = !DILocation(line: 1399, column: 5, scope: !2269)
!6533 = !DILocation(line: 1400, column: 14, scope: !2269)
!6534 = !DILocation(line: 1400, column: 52, scope: !2269)
!6535 = !DILocation(line: 1400, column: 85, scope: !2269)
!6536 = !DILocation(line: 1400, column: 89, scope: !2269)
!6537 = !DILocation(line: 1400, column: 5, scope: !2269)
!6538 = !DILocation(line: 1401, column: 31, scope: !6539)
!6539 = distinct !DILexicalBlock(scope: !2269, file: !939, line: 1401, column: 9)
!6540 = !DILocation(line: 1401, column: 35, scope: !6539)
!6541 = !DILocation(line: 1401, column: 40, scope: !6539)
!6542 = !DILocation(line: 1401, column: 50, scope: !6539)
!6543 = !DILocation(line: 1401, column: 16, scope: !6539)
!6544 = !DILocation(line: 1401, column: 14, scope: !6539)
!6545 = !DILocation(line: 1401, column: 76, scope: !6539)
!6546 = !DILocation(line: 1401, column: 9, scope: !2269)
!6547 = !DILocation(line: 1402, column: 13, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6549, file: !939, line: 1402, column: 13)
!6549 = distinct !DILexicalBlock(scope: !6539, file: !939, line: 1401, column: 81)
!6550 = !DILocation(line: 1402, column: 18, scope: !6548)
!6551 = !DILocation(line: 1402, column: 13, scope: !6549)
!6552 = !DILocation(line: 1403, column: 17, scope: !6548)
!6553 = !DILocation(line: 1403, column: 13, scope: !6548)
!6554 = !DILocation(line: 1404, column: 9, scope: !6549)
!6555 = !DILocation(line: 1407, column: 15, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !2269, file: !939, line: 1407, column: 5)
!6557 = !DILocation(line: 1407, column: 19, scope: !6556)
!6558 = !DILocation(line: 1407, column: 13, scope: !6556)
!6559 = !DILocation(line: 1407, column: 10, scope: !6556)
!6560 = !DILocation(line: 1407, column: 29, scope: !6561)
!6561 = !DILexicalBlockFile(scope: !6562, file: !939, discriminator: 1)
!6562 = distinct !DILexicalBlock(scope: !6556, file: !939, line: 1407, column: 5)
!6563 = !DILocation(line: 1407, column: 5, scope: !6561)
!6564 = !DILocation(line: 1408, column: 13, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6566, file: !939, line: 1408, column: 13)
!6566 = distinct !DILexicalBlock(scope: !6562, file: !939, line: 1407, column: 48)
!6567 = !DILocation(line: 1408, column: 32, scope: !6565)
!6568 = !DILocation(line: 1408, column: 36, scope: !6565)
!6569 = !DILocation(line: 1408, column: 29, scope: !6565)
!6570 = !DILocation(line: 1408, column: 13, scope: !6566)
!6571 = !DILocation(line: 1409, column: 37, scope: !6565)
!6572 = !DILocation(line: 1409, column: 41, scope: !6565)
!6573 = !DILocation(line: 1409, column: 31, scope: !6565)
!6574 = !DILocation(line: 1409, column: 29, scope: !6565)
!6575 = !DILocation(line: 1409, column: 13, scope: !6565)
!6576 = !DILocation(line: 1410, column: 5, scope: !6566)
!6577 = !DILocation(line: 1407, column: 38, scope: !6578)
!6578 = !DILexicalBlockFile(scope: !6562, file: !939, discriminator: 2)
!6579 = !DILocation(line: 1407, column: 42, scope: !6578)
!6580 = !DILocation(line: 1407, column: 36, scope: !6578)
!6581 = !DILocation(line: 1407, column: 5, scope: !6578)
!6582 = distinct !{!6582, !6583}
!6583 = !DILocation(line: 1407, column: 5, scope: !2269)
!6584 = !DILocation(line: 1412, column: 5, scope: !2269)
!6585 = !DILocation(line: 1412, column: 9, scope: !2269)
!6586 = !DILocation(line: 1412, column: 27, scope: !2269)
!6587 = !DILocation(line: 1413, column: 34, scope: !2269)
!6588 = !DILocation(line: 1413, column: 39, scope: !2269)
!6589 = !DILocation(line: 1413, column: 49, scope: !2269)
!6590 = !DILocation(line: 1413, column: 54, scope: !2269)
!6591 = !DILocation(line: 1413, column: 63, scope: !2269)
!6592 = !DILocation(line: 1413, column: 68, scope: !2269)
!6593 = !DILocation(line: 1414, column: 34, scope: !2269)
!6594 = !DILocation(line: 1414, column: 51, scope: !2269)
!6595 = !DILocation(line: 1414, column: 61, scope: !2269)
!6596 = !DILocation(line: 1414, column: 66, scope: !2269)
!6597 = !DILocation(line: 1413, column: 5, scope: !2269)
!6598 = !DILocation(line: 1416, column: 9, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !2269, file: !939, line: 1416, column: 8)
!6600 = !DILocation(line: 1416, column: 14, scope: !6599)
!6601 = !DILocation(line: 1416, column: 20, scope: !6599)
!6602 = !DILocation(line: 1416, column: 41, scope: !6599)
!6603 = !DILocation(line: 1416, column: 44, scope: !6604)
!6604 = !DILexicalBlockFile(scope: !6599, file: !939, discriminator: 1)
!6605 = !DILocation(line: 1416, column: 54, scope: !6604)
!6606 = !DILocation(line: 1416, column: 59, scope: !6604)
!6607 = !DILocation(line: 1416, column: 52, scope: !6604)
!6608 = !DILocation(line: 1416, column: 74, scope: !6604)
!6609 = !DILocation(line: 1416, column: 77, scope: !6610)
!6610 = !DILexicalBlockFile(scope: !6599, file: !939, discriminator: 2)
!6611 = !DILocation(line: 1416, column: 81, scope: !6610)
!6612 = !DILocation(line: 1416, column: 98, scope: !6610)
!6613 = !DILocation(line: 1416, column: 8, scope: !6610)
!6614 = !DILocation(line: 1417, column: 21, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6599, file: !939, line: 1416, column: 103)
!6616 = !DILocation(line: 1417, column: 26, scope: !6615)
!6617 = !DILocation(line: 1417, column: 9, scope: !6615)
!6618 = !DILocation(line: 1418, column: 9, scope: !6615)
!6619 = !DILocation(line: 1418, column: 13, scope: !6615)
!6620 = !DILocation(line: 1418, column: 31, scope: !6615)
!6621 = !DILocation(line: 1419, column: 5, scope: !6615)
!6622 = !DILocation(line: 1420, column: 9, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !2269, file: !939, line: 1420, column: 9)
!6624 = !DILocation(line: 1420, column: 13, scope: !6623)
!6625 = !DILocation(line: 1420, column: 23, scope: !6623)
!6626 = !DILocation(line: 1420, column: 27, scope: !6627)
!6627 = !DILexicalBlockFile(scope: !6623, file: !939, discriminator: 1)
!6628 = !DILocation(line: 1420, column: 32, scope: !6627)
!6629 = !DILocation(line: 1420, column: 38, scope: !6627)
!6630 = !DILocation(line: 1420, column: 9, scope: !6627)
!6631 = !DILocation(line: 1421, column: 21, scope: !6632)
!6632 = distinct !DILexicalBlock(scope: !6623, file: !939, line: 1420, column: 67)
!6633 = !DILocation(line: 1421, column: 26, scope: !6632)
!6634 = !DILocation(line: 1421, column: 9, scope: !6632)
!6635 = !DILocation(line: 1422, column: 5, scope: !6632)
!6636 = !DILocation(line: 1423, column: 15, scope: !6637)
!6637 = distinct !DILexicalBlock(scope: !2269, file: !939, line: 1423, column: 5)
!6638 = !DILocation(line: 1423, column: 19, scope: !6637)
!6639 = !DILocation(line: 1423, column: 13, scope: !6637)
!6640 = !DILocation(line: 1423, column: 10, scope: !6637)
!6641 = !DILocation(line: 1423, column: 29, scope: !6642)
!6642 = !DILexicalBlockFile(scope: !6643, file: !939, discriminator: 1)
!6643 = distinct !DILexicalBlock(scope: !6637, file: !939, line: 1423, column: 5)
!6644 = !DILocation(line: 1423, column: 5, scope: !6642)
!6645 = !DILocation(line: 1424, column: 14, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6647, file: !939, line: 1424, column: 13)
!6647 = distinct !DILexicalBlock(scope: !6643, file: !939, line: 1423, column: 48)
!6648 = !DILocation(line: 1424, column: 19, scope: !6646)
!6649 = !DILocation(line: 1424, column: 27, scope: !6646)
!6650 = !DILocation(line: 1424, column: 30, scope: !6651)
!6651 = !DILexicalBlockFile(scope: !6646, file: !939, discriminator: 1)
!6652 = !DILocation(line: 1424, column: 35, scope: !6651)
!6653 = !DILocation(line: 1424, column: 50, scope: !6651)
!6654 = !DILocation(line: 1424, column: 55, scope: !6655)
!6655 = !DILexicalBlockFile(scope: !6646, file: !939, discriminator: 2)
!6656 = !DILocation(line: 1424, column: 63, scope: !6655)
!6657 = !DILocation(line: 1424, column: 73, scope: !6658)
!6658 = !DILexicalBlockFile(scope: !6646, file: !939, discriminator: 3)
!6659 = !DILocation(line: 1424, column: 77, scope: !6658)
!6660 = !DILocation(line: 1424, column: 86, scope: !6658)
!6661 = !DILocation(line: 1424, column: 66, scope: !6658)
!6662 = !DILocation(line: 1424, column: 95, scope: !6658)
!6663 = !DILocation(line: 1425, column: 51, scope: !6646)
!6664 = !DILocation(line: 1425, column: 55, scope: !6646)
!6665 = !DILocation(line: 1425, column: 66, scope: !6646)
!6666 = !DILocation(line: 1425, column: 37, scope: !6646)
!6667 = !DILocation(line: 1424, column: 13, scope: !6668)
!6668 = !DILexicalBlockFile(scope: !6647, file: !939, discriminator: 4)
!6669 = !DILocation(line: 1426, column: 25, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6646, file: !939, line: 1425, column: 79)
!6671 = !DILocation(line: 1426, column: 30, scope: !6670)
!6672 = !DILocation(line: 1426, column: 80, scope: !6670)
!6673 = !DILocation(line: 1426, column: 84, scope: !6670)
!6674 = !DILocation(line: 1426, column: 13, scope: !6670)
!6675 = !DILocation(line: 1427, column: 18, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6670, file: !939, line: 1427, column: 17)
!6677 = !DILocation(line: 1427, column: 22, scope: !6676)
!6678 = !DILocation(line: 1427, column: 17, scope: !6676)
!6679 = !DILocation(line: 1427, column: 17, scope: !6670)
!6680 = !DILocation(line: 1428, column: 29, scope: !6676)
!6681 = !DILocation(line: 1428, column: 34, scope: !6676)
!6682 = !DILocation(line: 1428, column: 56, scope: !6676)
!6683 = !DILocation(line: 1428, column: 60, scope: !6676)
!6684 = !DILocation(line: 1428, column: 17, scope: !6676)
!6685 = !DILocation(line: 1429, column: 25, scope: !6670)
!6686 = !DILocation(line: 1429, column: 30, scope: !6670)
!6687 = !DILocation(line: 1429, column: 13, scope: !6670)
!6688 = !DILocation(line: 1430, column: 23, scope: !6670)
!6689 = !DILocation(line: 1430, column: 27, scope: !6670)
!6690 = !DILocation(line: 1430, column: 21, scope: !6670)
!6691 = !DILocation(line: 1431, column: 25, scope: !6670)
!6692 = !DILocation(line: 1431, column: 29, scope: !6670)
!6693 = !DILocation(line: 1431, column: 23, scope: !6670)
!6694 = !DILocation(line: 1432, column: 9, scope: !6670)
!6695 = !DILocation(line: 1434, column: 14, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6647, file: !939, line: 1434, column: 13)
!6697 = !DILocation(line: 1434, column: 19, scope: !6696)
!6698 = !DILocation(line: 1434, column: 32, scope: !6696)
!6699 = !DILocation(line: 1434, column: 54, scope: !6696)
!6700 = !DILocation(line: 1434, column: 58, scope: !6701)
!6701 = !DILexicalBlockFile(scope: !6696, file: !939, discriminator: 1)
!6702 = !DILocation(line: 1434, column: 64, scope: !6701)
!6703 = !DILocation(line: 1434, column: 68, scope: !6701)
!6704 = !DILocation(line: 1434, column: 61, scope: !6701)
!6705 = !DILocation(line: 1434, column: 13, scope: !6701)
!6706 = !DILocation(line: 1435, column: 36, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6696, file: !939, line: 1434, column: 79)
!6708 = !DILocation(line: 1435, column: 41, scope: !6707)
!6709 = !DILocation(line: 1435, column: 52, scope: !6707)
!6710 = !DILocation(line: 1435, column: 57, scope: !6707)
!6711 = !DILocation(line: 1435, column: 63, scope: !6707)
!6712 = !DILocation(line: 1435, column: 51, scope: !6707)
!6713 = !DILocation(line: 1435, column: 84, scope: !6714)
!6714 = !DILexicalBlockFile(scope: !6707, file: !939, discriminator: 1)
!6715 = !DILocation(line: 1435, column: 88, scope: !6714)
!6716 = !DILocation(line: 1435, column: 51, scope: !6714)
!6717 = !DILocation(line: 1435, column: 99, scope: !6718)
!6718 = !DILexicalBlockFile(scope: !6707, file: !939, discriminator: 2)
!6719 = !DILocation(line: 1435, column: 103, scope: !6718)
!6720 = !DILocation(line: 1435, column: 51, scope: !6718)
!6721 = !DILocation(line: 1435, column: 51, scope: !6722)
!6722 = !DILexicalBlockFile(scope: !6707, file: !939, discriminator: 3)
!6723 = !DILocation(line: 1436, column: 36, scope: !6707)
!6724 = !DILocation(line: 1436, column: 41, scope: !6707)
!6725 = !DILocation(line: 1436, column: 47, scope: !6707)
!6726 = !DILocation(line: 1436, column: 66, scope: !6707)
!6727 = !DILocation(line: 1436, column: 70, scope: !6707)
!6728 = !DILocation(line: 1435, column: 13, scope: !6722)
!6729 = !DILocation(line: 1437, column: 9, scope: !6707)
!6730 = !DILocation(line: 1439, column: 39, scope: !6647)
!6731 = !DILocation(line: 1439, column: 44, scope: !6647)
!6732 = !DILocation(line: 1439, column: 54, scope: !6647)
!6733 = !DILocation(line: 1439, column: 58, scope: !6647)
!6734 = !DILocation(line: 1439, column: 67, scope: !6647)
!6735 = !DILocation(line: 1440, column: 39, scope: !6647)
!6736 = !DILocation(line: 1440, column: 43, scope: !6647)
!6737 = !DILocation(line: 1440, column: 53, scope: !6647)
!6738 = !DILocation(line: 1440, column: 58, scope: !6647)
!6739 = !DILocation(line: 1440, column: 64, scope: !6647)
!6740 = !DILocation(line: 1441, column: 39, scope: !6647)
!6741 = !DILocation(line: 1441, column: 43, scope: !6647)
!6742 = !DILocation(line: 1441, column: 49, scope: !6647)
!6743 = !DILocation(line: 1441, column: 53, scope: !6647)
!6744 = !DILocation(line: 1441, column: 58, scope: !6647)
!6745 = !DILocation(line: 1441, column: 62, scope: !6647)
!6746 = !DILocation(line: 1442, column: 39, scope: !6647)
!6747 = !DILocation(line: 1442, column: 43, scope: !6647)
!6748 = !DILocation(line: 1442, column: 53, scope: !6647)
!6749 = !DILocation(line: 1439, column: 15, scope: !6647)
!6750 = !DILocation(line: 1439, column: 13, scope: !6647)
!6751 = !DILocation(line: 1443, column: 13, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6647, file: !939, line: 1443, column: 13)
!6753 = !DILocation(line: 1443, column: 17, scope: !6752)
!6754 = !DILocation(line: 1443, column: 13, scope: !6647)
!6755 = !DILocation(line: 1444, column: 20, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6752, file: !939, line: 1443, column: 22)
!6757 = !DILocation(line: 1444, column: 13, scope: !6756)
!6758 = !DILocation(line: 1445, column: 9, scope: !6756)
!6759 = !DILocation(line: 1446, column: 5, scope: !6647)
!6760 = !DILocation(line: 1423, column: 38, scope: !6761)
!6761 = !DILexicalBlockFile(scope: !6643, file: !939, discriminator: 2)
!6762 = !DILocation(line: 1423, column: 42, scope: !6761)
!6763 = !DILocation(line: 1423, column: 36, scope: !6761)
!6764 = !DILocation(line: 1423, column: 5, scope: !6761)
!6765 = distinct !{!6765, !6766}
!6766 = !DILocation(line: 1423, column: 5, scope: !2269)
!6767 = !DILocation(line: 1448, column: 9, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !2269, file: !939, line: 1448, column: 9)
!6769 = !DILocation(line: 1448, column: 14, scope: !6768)
!6770 = !DILocation(line: 1448, column: 18, scope: !6771)
!6771 = !DILexicalBlockFile(scope: !6768, file: !939, discriminator: 1)
!6772 = !DILocation(line: 1448, column: 23, scope: !6771)
!6773 = !DILocation(line: 1448, column: 29, scope: !6771)
!6774 = !DILocation(line: 1448, column: 48, scope: !6771)
!6775 = !DILocation(line: 1448, column: 9, scope: !6771)
!6776 = !DILocation(line: 1449, column: 31, scope: !6768)
!6777 = !DILocation(line: 1449, column: 36, scope: !6768)
!6778 = !DILocation(line: 1449, column: 9, scope: !6768)
!6779 = !DILocation(line: 1451, column: 9, scope: !6780)
!6780 = distinct !DILexicalBlock(scope: !2269, file: !939, line: 1451, column: 9)
!6781 = !DILocation(line: 1451, column: 13, scope: !6780)
!6782 = !DILocation(line: 1451, column: 9, scope: !2269)
!6783 = !DILocation(line: 1452, column: 35, scope: !6784)
!6784 = distinct !DILexicalBlock(scope: !6785, file: !939, line: 1452, column: 13)
!6785 = distinct !DILexicalBlock(scope: !6780, file: !939, line: 1451, column: 29)
!6786 = !DILocation(line: 1452, column: 39, scope: !6784)
!6787 = !DILocation(line: 1452, column: 44, scope: !6784)
!6788 = !DILocation(line: 1452, column: 58, scope: !6784)
!6789 = !DILocation(line: 1452, column: 62, scope: !6784)
!6790 = !DILocation(line: 1452, column: 20, scope: !6784)
!6791 = !DILocation(line: 1452, column: 18, scope: !6784)
!6792 = !DILocation(line: 1452, column: 88, scope: !6784)
!6793 = !DILocation(line: 1452, column: 13, scope: !6785)
!6794 = !DILocation(line: 1453, column: 17, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6796, file: !939, line: 1453, column: 17)
!6796 = distinct !DILexicalBlock(scope: !6784, file: !939, line: 1452, column: 93)
!6797 = !DILocation(line: 1453, column: 22, scope: !6795)
!6798 = !DILocation(line: 1453, column: 17, scope: !6796)
!6799 = !DILocation(line: 1454, column: 21, scope: !6795)
!6800 = !DILocation(line: 1454, column: 17, scope: !6795)
!6801 = !DILocation(line: 1455, column: 13, scope: !6796)
!6802 = !DILocation(line: 1457, column: 38, scope: !6785)
!6803 = !DILocation(line: 1457, column: 43, scope: !6785)
!6804 = !DILocation(line: 1457, column: 57, scope: !6785)
!6805 = !DILocation(line: 1457, column: 62, scope: !6785)
!6806 = !DILocation(line: 1457, column: 71, scope: !6785)
!6807 = !DILocation(line: 1457, column: 76, scope: !6785)
!6808 = !DILocation(line: 1458, column: 38, scope: !6785)
!6809 = !DILocation(line: 1458, column: 55, scope: !6785)
!6810 = !DILocation(line: 1457, column: 9, scope: !6785)
!6811 = !DILocation(line: 1459, column: 19, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6785, file: !939, line: 1459, column: 9)
!6813 = !DILocation(line: 1459, column: 23, scope: !6812)
!6814 = !DILocation(line: 1459, column: 17, scope: !6812)
!6815 = !DILocation(line: 1459, column: 14, scope: !6812)
!6816 = !DILocation(line: 1459, column: 33, scope: !6817)
!6817 = !DILexicalBlockFile(scope: !6818, file: !939, discriminator: 1)
!6818 = distinct !DILexicalBlock(scope: !6812, file: !939, line: 1459, column: 9)
!6819 = !DILocation(line: 1459, column: 9, scope: !6817)
!6820 = !DILocation(line: 1460, column: 43, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6818, file: !939, line: 1459, column: 52)
!6822 = !DILocation(line: 1460, column: 48, scope: !6821)
!6823 = !DILocation(line: 1460, column: 65, scope: !6821)
!6824 = !DILocation(line: 1461, column: 43, scope: !6821)
!6825 = !DILocation(line: 1461, column: 47, scope: !6821)
!6826 = !DILocation(line: 1461, column: 60, scope: !6821)
!6827 = !DILocation(line: 1461, column: 64, scope: !6821)
!6828 = !DILocation(line: 1461, column: 70, scope: !6821)
!6829 = !DILocation(line: 1461, column: 74, scope: !6821)
!6830 = !DILocation(line: 1462, column: 43, scope: !6821)
!6831 = !DILocation(line: 1462, column: 47, scope: !6821)
!6832 = !DILocation(line: 1462, column: 56, scope: !6821)
!6833 = !DILocation(line: 1462, column: 60, scope: !6821)
!6834 = !DILocation(line: 1460, column: 19, scope: !6821)
!6835 = !DILocation(line: 1460, column: 17, scope: !6821)
!6836 = !DILocation(line: 1463, column: 17, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6821, file: !939, line: 1463, column: 17)
!6838 = !DILocation(line: 1463, column: 21, scope: !6837)
!6839 = !DILocation(line: 1463, column: 17, scope: !6821)
!6840 = !DILocation(line: 1464, column: 24, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6837, file: !939, line: 1463, column: 26)
!6842 = !DILocation(line: 1464, column: 17, scope: !6841)
!6843 = !DILocation(line: 1465, column: 13, scope: !6841)
!6844 = !DILocation(line: 1466, column: 9, scope: !6821)
!6845 = !DILocation(line: 1459, column: 42, scope: !6846)
!6846 = !DILexicalBlockFile(scope: !6818, file: !939, discriminator: 2)
!6847 = !DILocation(line: 1459, column: 46, scope: !6846)
!6848 = !DILocation(line: 1459, column: 40, scope: !6846)
!6849 = !DILocation(line: 1459, column: 9, scope: !6846)
!6850 = distinct !{!6850, !6851}
!6851 = !DILocation(line: 1459, column: 9, scope: !6785)
!6852 = !DILocation(line: 1468, column: 13, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6785, file: !939, line: 1468, column: 13)
!6854 = !DILocation(line: 1468, column: 13, scope: !6785)
!6855 = !DILocation(line: 1469, column: 35, scope: !6853)
!6856 = !DILocation(line: 1469, column: 40, scope: !6853)
!6857 = !DILocation(line: 1469, column: 13, scope: !6853)
!6858 = !DILocation(line: 1471, column: 5, scope: !6785)
!6859 = !DILocation(line: 1451, column: 13, scope: !6860)
!6860 = !DILexicalBlockFile(scope: !6780, file: !939, discriminator: 1)
!6861 = !DILocation(line: 1474, column: 5, scope: !2269)
!6862 = !DILocation(line: 1475, column: 21, scope: !2269)
!6863 = !DILocation(line: 1475, column: 25, scope: !2269)
!6864 = !DILocation(line: 1475, column: 30, scope: !2269)
!6865 = !DILocation(line: 1475, column: 40, scope: !2269)
!6866 = !DILocation(line: 1475, column: 5, scope: !2269)
!6867 = !DILocation(line: 1476, column: 21, scope: !2269)
!6868 = !DILocation(line: 1476, column: 25, scope: !2269)
!6869 = !DILocation(line: 1476, column: 30, scope: !2269)
!6870 = !DILocation(line: 1476, column: 44, scope: !2269)
!6871 = !DILocation(line: 1476, column: 48, scope: !2269)
!6872 = !DILocation(line: 1476, column: 5, scope: !2269)
!6873 = !DILocation(line: 1477, column: 9, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !2269, file: !939, line: 1477, column: 9)
!6875 = !DILocation(line: 1477, column: 9, scope: !2269)
!6876 = !DILocation(line: 1478, column: 19, scope: !6874)
!6877 = !DILocation(line: 1478, column: 34, scope: !6874)
!6878 = !DILocation(line: 1478, column: 38, scope: !6874)
!6879 = !DILocation(line: 1478, column: 49, scope: !6874)
!6880 = !DILocation(line: 1478, column: 9, scope: !6874)
!6881 = !DILocation(line: 1479, column: 9, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !2269, file: !939, line: 1479, column: 9)
!6883 = !DILocation(line: 1479, column: 13, scope: !6882)
!6884 = !DILocation(line: 1479, column: 18, scope: !6882)
!6885 = !DILocation(line: 1479, column: 21, scope: !6886)
!6886 = !DILexicalBlockFile(scope: !6882, file: !939, discriminator: 1)
!6887 = !DILocation(line: 1479, column: 26, scope: !6886)
!6888 = !DILocation(line: 1479, column: 9, scope: !6886)
!6889 = !DILocation(line: 1480, column: 36, scope: !6890)
!6890 = distinct !DILexicalBlock(scope: !6882, file: !939, line: 1480, column: 13)
!6891 = !DILocation(line: 1480, column: 39, scope: !6890)
!6892 = !DILocation(line: 1480, column: 13, scope: !6890)
!6893 = !DILocation(line: 1480, column: 43, scope: !6890)
!6894 = !DILocation(line: 1480, column: 13, scope: !6882)
!6895 = !DILocation(line: 1481, column: 20, scope: !6890)
!6896 = !DILocation(line: 1481, column: 13, scope: !6890)
!6897 = !DILocation(line: 1480, column: 45, scope: !6898)
!6898 = !DILexicalBlockFile(scope: !6890, file: !939, discriminator: 1)
!6899 = !DILocation(line: 1483, column: 12, scope: !2269)
!6900 = !DILocation(line: 1483, column: 5, scope: !2269)
!6901 = distinct !DISubprogram(name: "ff_rename", scope: !1046, file: !1046, line: 591, type: !6902, isLocal: true, isDefinition: true, scopeLine: 592, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!6902 = !DISubroutineType(types: !6903)
!6903 = !{!981, !1031, !1031, !980}
!6904 = !DILocalVariable(name: "oldpath", arg: 1, scope: !6901, file: !1046, line: 591, type: !1031)
!6905 = !DILocation(line: 591, column: 41, scope: !6901)
!6906 = !DILocalVariable(name: "newpath", arg: 2, scope: !6901, file: !1046, line: 591, type: !1031)
!6907 = !DILocation(line: 591, column: 62, scope: !6901)
!6908 = !DILocalVariable(name: "logctx", arg: 3, scope: !6901, file: !1046, line: 591, type: !980)
!6909 = !DILocation(line: 591, column: 77, scope: !6901)
!6910 = !DILocalVariable(name: "ret", scope: !6901, file: !1046, line: 593, type: !981)
!6911 = !DILocation(line: 593, column: 9, scope: !6901)
!6912 = !DILocation(line: 594, column: 16, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6901, file: !1046, line: 594, column: 9)
!6914 = !DILocation(line: 594, column: 25, scope: !6913)
!6915 = !DILocation(line: 594, column: 9, scope: !6913)
!6916 = !DILocation(line: 594, column: 34, scope: !6913)
!6917 = !DILocation(line: 594, column: 9, scope: !6901)
!6918 = !DILocation(line: 595, column: 16, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6913, file: !1046, line: 594, column: 41)
!6920 = !DILocation(line: 595, column: 15, scope: !6919)
!6921 = !DILocation(line: 595, column: 13, scope: !6919)
!6922 = !DILocation(line: 596, column: 13, scope: !6923)
!6923 = distinct !DILexicalBlock(scope: !6919, file: !1046, line: 596, column: 13)
!6924 = !DILocation(line: 596, column: 13, scope: !6919)
!6925 = !DILocalVariable(name: "err", scope: !6926, file: !1046, line: 597, type: !6927)
!6926 = distinct !DILexicalBlock(scope: !6923, file: !1046, line: 596, column: 21)
!6927 = !DICompositeType(tag: DW_TAG_array_type, baseType: !989, size: 512, align: 8, elements: !6928)
!6928 = !{!6929}
!6929 = !DISubrange(count: 64)
!6930 = !DILocation(line: 597, column: 18, scope: !6926)
!6931 = !DILocation(line: 598, column: 34, scope: !6926)
!6932 = !DILocation(line: 598, column: 43, scope: !6926)
!6933 = !DILocation(line: 598, column: 13, scope: !6926)
!6934 = !DILocation(line: 599, column: 20, scope: !6926)
!6935 = !DILocation(line: 599, column: 72, scope: !6926)
!6936 = !DILocation(line: 599, column: 81, scope: !6926)
!6937 = !DILocation(line: 599, column: 90, scope: !6926)
!6938 = !DILocation(line: 599, column: 13, scope: !6926)
!6939 = !DILocation(line: 600, column: 9, scope: !6926)
!6940 = !DILocation(line: 601, column: 5, scope: !6919)
!6941 = !DILocation(line: 602, column: 12, scope: !6901)
!6942 = !DILocation(line: 602, column: 5, scope: !6901)
!6943 = distinct !DISubprogram(name: "av_make_error_string", scope: !6944, file: !6944, line: 109, type: !6945, isLocal: true, isDefinition: true, scopeLine: 110, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!6944 = !DIFile(filename: "./libavutil/error.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!6945 = !DISubroutineType(types: !6946)
!6946 = !{!1008, !1008, !1508, !981}
!6947 = !DILocalVariable(name: "errbuf", arg: 1, scope: !6943, file: !6944, line: 109, type: !1008)
!6948 = !DILocation(line: 109, column: 48, scope: !6943)
!6949 = !DILocalVariable(name: "errbuf_size", arg: 2, scope: !6943, file: !6944, line: 109, type: !1508)
!6950 = !DILocation(line: 109, column: 63, scope: !6943)
!6951 = !DILocalVariable(name: "errnum", arg: 3, scope: !6943, file: !6944, line: 109, type: !981)
!6952 = !DILocation(line: 109, column: 80, scope: !6943)
!6953 = !DILocation(line: 111, column: 17, scope: !6943)
!6954 = !DILocation(line: 111, column: 25, scope: !6943)
!6955 = !DILocation(line: 111, column: 33, scope: !6943)
!6956 = !DILocation(line: 111, column: 5, scope: !6943)
!6957 = !DILocation(line: 112, column: 12, scope: !6943)
!6958 = !DILocation(line: 112, column: 5, scope: !6943)
!6959 = distinct !DISubprogram(name: "sls_flags_filename_process", scope: !939, file: !939, line: 819, type: !6960, isLocal: true, isDefinition: true, scopeLine: 822, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!6960 = !DISubroutineType(types: !6961)
!6961 = !{!981, !1135, !2338, !2274, !983, !979, !976, !976}
!6962 = !DILocalVariable(name: "s", arg: 1, scope: !6959, file: !939, line: 819, type: !1135)
!6963 = !DILocation(line: 819, column: 63, scope: !6959)
!6964 = !DILocalVariable(name: "hls", arg: 2, scope: !6959, file: !939, line: 819, type: !2338)
!6965 = !DILocation(line: 819, column: 78, scope: !6959)
!6966 = !DILocalVariable(name: "vs", arg: 3, scope: !6959, file: !939, line: 820, type: !2274)
!6967 = !DILocation(line: 820, column: 54, scope: !6959)
!6968 = !DILocalVariable(name: "en", arg: 4, scope: !6959, file: !939, line: 820, type: !983)
!6969 = !DILocation(line: 820, column: 70, scope: !6959)
!6970 = !DILocalVariable(name: "duration", arg: 5, scope: !6959, file: !939, line: 821, type: !979)
!6971 = !DILocation(line: 821, column: 46, scope: !6959)
!6972 = !DILocalVariable(name: "pos", arg: 6, scope: !6959, file: !939, line: 821, type: !976)
!6973 = !DILocation(line: 821, column: 64, scope: !6959)
!6974 = !DILocalVariable(name: "size", arg: 7, scope: !6959, file: !939, line: 821, type: !976)
!6975 = !DILocation(line: 821, column: 77, scope: !6959)
!6976 = !DILocation(line: 823, column: 10, scope: !6977)
!6977 = distinct !DILexicalBlock(scope: !6959, file: !939, line: 823, column: 9)
!6978 = !DILocation(line: 823, column: 15, scope: !6977)
!6979 = !DILocation(line: 823, column: 21, scope: !6977)
!6980 = !DILocation(line: 823, column: 92, scope: !6977)
!6981 = !DILocation(line: 824, column: 16, scope: !6977)
!6982 = !DILocation(line: 824, column: 20, scope: !6977)
!6983 = !DILocation(line: 824, column: 9, scope: !6977)
!6984 = !DILocation(line: 823, column: 9, scope: !6985)
!6985 = !DILexicalBlockFile(scope: !6959, file: !939, discriminator: 1)
!6986 = !DILocalVariable(name: "new_url", scope: !6987, file: !939, line: 825, type: !1008)
!6987 = distinct !DILexicalBlock(scope: !6977, file: !939, line: 824, column: 57)
!6988 = !DILocation(line: 825, column: 16, scope: !6987)
!6989 = !DILocation(line: 825, column: 36, scope: !6987)
!6990 = !DILocation(line: 825, column: 40, scope: !6987)
!6991 = !DILocation(line: 825, column: 26, scope: !6987)
!6992 = !DILocation(line: 826, column: 14, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6987, file: !939, line: 826, column: 13)
!6994 = !DILocation(line: 826, column: 13, scope: !6987)
!6995 = !DILocation(line: 827, column: 21, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6993, file: !939, line: 826, column: 23)
!6997 = !DILocation(line: 827, column: 13, scope: !6996)
!6998 = !DILocation(line: 828, column: 13, scope: !6996)
!6999 = !DILocation(line: 830, column: 27, scope: !6987)
!7000 = !DILocation(line: 830, column: 31, scope: !6987)
!7001 = !DILocation(line: 830, column: 36, scope: !6987)
!7002 = !DILocation(line: 830, column: 9, scope: !6987)
!7003 = !DILocation(line: 831, column: 13, scope: !7004)
!7004 = distinct !DILexicalBlock(scope: !6987, file: !939, line: 831, column: 13)
!7005 = !DILocation(line: 831, column: 18, scope: !7004)
!7006 = !DILocation(line: 831, column: 24, scope: !7004)
!7007 = !DILocation(line: 831, column: 13, scope: !6987)
!7008 = !DILocalVariable(name: "filename", scope: !7009, file: !939, line: 832, type: !1008)
!7009 = distinct !DILexicalBlock(scope: !7004, file: !939, line: 831, column: 57)
!7010 = !DILocation(line: 832, column: 19, scope: !7009)
!7011 = !DILocation(line: 833, column: 57, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !7009, file: !939, line: 833, column: 17)
!7013 = !DILocation(line: 833, column: 61, scope: !7012)
!7014 = !DILocation(line: 833, column: 66, scope: !7012)
!7015 = !DILocation(line: 833, column: 76, scope: !7012)
!7016 = !DILocation(line: 833, column: 82, scope: !7012)
!7017 = !DILocation(line: 833, column: 80, scope: !7012)
!7018 = !DILocation(line: 833, column: 17, scope: !7012)
!7019 = !DILocation(line: 833, column: 88, scope: !7012)
!7020 = !DILocation(line: 833, column: 17, scope: !7009)
!7021 = !DILocation(line: 834, column: 24, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !7012, file: !939, line: 833, column: 93)
!7023 = !DILocation(line: 837, column: 24, scope: !7022)
!7024 = !DILocation(line: 837, column: 28, scope: !7022)
!7025 = !DILocation(line: 837, column: 33, scope: !7022)
!7026 = !DILocation(line: 834, column: 17, scope: !7022)
!7027 = !DILocation(line: 838, column: 25, scope: !7022)
!7028 = !DILocation(line: 838, column: 17, scope: !7022)
!7029 = !DILocation(line: 839, column: 25, scope: !7022)
!7030 = !DILocation(line: 839, column: 17, scope: !7022)
!7031 = !DILocation(line: 840, column: 17, scope: !7022)
!7032 = !DILocation(line: 842, column: 31, scope: !7009)
!7033 = !DILocation(line: 842, column: 35, scope: !7009)
!7034 = !DILocation(line: 842, column: 40, scope: !7009)
!7035 = !DILocation(line: 842, column: 13, scope: !7009)
!7036 = !DILocation(line: 843, column: 9, scope: !7009)
!7037 = !DILocation(line: 844, column: 13, scope: !7038)
!7038 = distinct !DILexicalBlock(scope: !6987, file: !939, line: 844, column: 13)
!7039 = !DILocation(line: 844, column: 18, scope: !7038)
!7040 = !DILocation(line: 844, column: 24, scope: !7038)
!7041 = !DILocation(line: 844, column: 13, scope: !6987)
!7042 = !DILocalVariable(name: "filename", scope: !7043, file: !939, line: 845, type: !1008)
!7043 = distinct !DILexicalBlock(scope: !7038, file: !939, line: 844, column: 61)
!7044 = !DILocation(line: 845, column: 19, scope: !7043)
!7045 = !DILocation(line: 846, column: 57, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !7043, file: !939, line: 846, column: 17)
!7047 = !DILocation(line: 846, column: 61, scope: !7046)
!7048 = !DILocation(line: 846, column: 66, scope: !7046)
!7049 = !DILocation(line: 847, column: 37, scope: !7046)
!7050 = !DILocation(line: 847, column: 46, scope: !7046)
!7051 = !DILocation(line: 847, column: 31, scope: !7046)
!7052 = !DILocation(line: 847, column: 22, scope: !7046)
!7053 = !DILocation(line: 846, column: 17, scope: !7046)
!7054 = !DILocation(line: 847, column: 58, scope: !7046)
!7055 = !DILocation(line: 846, column: 17, scope: !7043)
!7056 = !DILocation(line: 848, column: 24, scope: !7057)
!7057 = distinct !DILexicalBlock(scope: !7046, file: !939, line: 847, column: 63)
!7058 = !DILocation(line: 851, column: 24, scope: !7057)
!7059 = !DILocation(line: 851, column: 28, scope: !7057)
!7060 = !DILocation(line: 851, column: 33, scope: !7057)
!7061 = !DILocation(line: 848, column: 17, scope: !7057)
!7062 = !DILocation(line: 852, column: 25, scope: !7057)
!7063 = !DILocation(line: 852, column: 17, scope: !7057)
!7064 = !DILocation(line: 853, column: 25, scope: !7057)
!7065 = !DILocation(line: 853, column: 17, scope: !7057)
!7066 = !DILocation(line: 854, column: 17, scope: !7057)
!7067 = !DILocation(line: 856, column: 31, scope: !7043)
!7068 = !DILocation(line: 856, column: 35, scope: !7043)
!7069 = !DILocation(line: 856, column: 40, scope: !7043)
!7070 = !DILocation(line: 856, column: 13, scope: !7043)
!7071 = !DILocation(line: 857, column: 9, scope: !7043)
!7072 = !DILocation(line: 858, column: 5, scope: !6987)
!7073 = !DILocation(line: 859, column: 5, scope: !6959)
!7074 = !DILocation(line: 860, column: 1, scope: !6959)
!7075 = distinct !DISubprogram(name: "find_segment_by_filename", scope: !939, file: !939, line: 809, type: !7076, isLocal: true, isDefinition: true, scopeLine: 810, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!7076 = !DISubroutineType(types: !7077)
!7077 = !{!983, !983, !1031}
!7078 = !DILocalVariable(name: "segment", arg: 1, scope: !7075, file: !939, line: 809, type: !983)
!7079 = !DILocation(line: 809, column: 57, scope: !7075)
!7080 = !DILocalVariable(name: "filename", arg: 2, scope: !7075, file: !939, line: 809, type: !1031)
!7081 = !DILocation(line: 809, column: 78, scope: !7075)
!7082 = !DILocation(line: 811, column: 5, scope: !7075)
!7083 = !DILocation(line: 811, column: 12, scope: !7084)
!7084 = !DILexicalBlockFile(scope: !7075, file: !939, discriminator: 1)
!7085 = !DILocation(line: 811, column: 5, scope: !7084)
!7086 = !DILocation(line: 812, column: 28, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7088, file: !939, line: 812, column: 13)
!7088 = distinct !DILexicalBlock(scope: !7075, file: !939, line: 811, column: 21)
!7089 = !DILocation(line: 812, column: 37, scope: !7087)
!7090 = !DILocation(line: 812, column: 46, scope: !7087)
!7091 = !DILocation(line: 812, column: 14, scope: !7087)
!7092 = !DILocation(line: 812, column: 13, scope: !7088)
!7093 = !DILocation(line: 813, column: 20, scope: !7087)
!7094 = !DILocation(line: 813, column: 13, scope: !7087)
!7095 = !DILocation(line: 814, column: 19, scope: !7088)
!7096 = !DILocation(line: 814, column: 28, scope: !7088)
!7097 = !DILocation(line: 814, column: 17, scope: !7088)
!7098 = !DILocation(line: 811, column: 5, scope: !7099)
!7099 = !DILexicalBlockFile(scope: !7075, file: !939, discriminator: 2)
!7100 = distinct !{!7100, !7082}
!7101 = !DILocation(line: 816, column: 5, scope: !7075)
!7102 = !DILocation(line: 817, column: 1, scope: !7075)
!7103 = distinct !DISubprogram(name: "hls_delete_old_segments", scope: !939, file: !939, line: 419, type: !7104, isLocal: true, isDefinition: true, scopeLine: 420, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!7104 = !DISubroutineType(types: !7105)
!7105 = !{!981, !2272, !2338, !2274}
!7106 = !DILocalVariable(name: "s", arg: 1, scope: !7103, file: !939, line: 419, type: !2272)
!7107 = !DILocation(line: 419, column: 53, scope: !7103)
!7108 = !DILocalVariable(name: "hls", arg: 2, scope: !7103, file: !939, line: 419, type: !2338)
!7109 = !DILocation(line: 419, column: 68, scope: !7103)
!7110 = !DILocalVariable(name: "vs", arg: 3, scope: !7103, file: !939, line: 420, type: !2274)
!7111 = !DILocation(line: 420, column: 51, scope: !7103)
!7112 = !DILocalVariable(name: "segment", scope: !7103, file: !939, line: 422, type: !983)
!7113 = !DILocation(line: 422, column: 17, scope: !7103)
!7114 = !DILocalVariable(name: "previous_segment", scope: !7103, file: !939, line: 422, type: !983)
!7115 = !DILocation(line: 422, column: 27, scope: !7103)
!7116 = !DILocalVariable(name: "playlist_duration", scope: !7103, file: !939, line: 423, type: !1579)
!7117 = !DILocation(line: 423, column: 11, scope: !7103)
!7118 = !DILocalVariable(name: "ret", scope: !7103, file: !939, line: 424, type: !981)
!7119 = !DILocation(line: 424, column: 9, scope: !7103)
!7120 = !DILocalVariable(name: "path_size", scope: !7103, file: !939, line: 424, type: !981)
!7121 = !DILocation(line: 424, column: 18, scope: !7103)
!7122 = !DILocalVariable(name: "sub_path_size", scope: !7103, file: !939, line: 424, type: !981)
!7123 = !DILocation(line: 424, column: 29, scope: !7103)
!7124 = !DILocalVariable(name: "segment_cnt", scope: !7103, file: !939, line: 425, type: !981)
!7125 = !DILocation(line: 425, column: 9, scope: !7103)
!7126 = !DILocalVariable(name: "dirname", scope: !7103, file: !939, line: 426, type: !1008)
!7127 = !DILocation(line: 426, column: 11, scope: !7103)
!7128 = !DILocalVariable(name: "p", scope: !7103, file: !939, line: 426, type: !1008)
!7129 = !DILocation(line: 426, column: 27, scope: !7103)
!7130 = !DILocalVariable(name: "sub_path", scope: !7103, file: !939, line: 426, type: !1008)
!7131 = !DILocation(line: 426, column: 31, scope: !7103)
!7132 = !DILocalVariable(name: "path", scope: !7103, file: !939, line: 427, type: !1008)
!7133 = !DILocation(line: 427, column: 11, scope: !7103)
!7134 = !DILocalVariable(name: "vtt_dirname", scope: !7103, file: !939, line: 428, type: !1008)
!7135 = !DILocation(line: 428, column: 11, scope: !7103)
!7136 = !DILocalVariable(name: "options", scope: !7103, file: !939, line: 429, type: !1479)
!7137 = !DILocation(line: 429, column: 19, scope: !7103)
!7138 = !DILocalVariable(name: "out", scope: !7103, file: !939, line: 430, type: !1240)
!7139 = !DILocation(line: 430, column: 18, scope: !7103)
!7140 = !DILocalVariable(name: "proto", scope: !7103, file: !939, line: 431, type: !1031)
!7141 = !DILocation(line: 431, column: 17, scope: !7103)
!7142 = !DILocation(line: 433, column: 15, scope: !7103)
!7143 = !DILocation(line: 433, column: 19, scope: !7103)
!7144 = !DILocation(line: 433, column: 13, scope: !7103)
!7145 = !DILocation(line: 434, column: 5, scope: !7103)
!7146 = !DILocation(line: 434, column: 12, scope: !7147)
!7147 = !DILexicalBlockFile(scope: !7103, file: !939, discriminator: 1)
!7148 = !DILocation(line: 434, column: 5, scope: !7147)
!7149 = !DILocation(line: 435, column: 30, scope: !7150)
!7150 = distinct !DILexicalBlock(scope: !7103, file: !939, line: 434, column: 21)
!7151 = !DILocation(line: 435, column: 39, scope: !7150)
!7152 = !DILocation(line: 435, column: 27, scope: !7150)
!7153 = !DILocation(line: 436, column: 19, scope: !7150)
!7154 = !DILocation(line: 436, column: 28, scope: !7150)
!7155 = !DILocation(line: 436, column: 17, scope: !7150)
!7156 = !DILocation(line: 434, column: 5, scope: !7157)
!7157 = !DILexicalBlockFile(scope: !7103, file: !939, discriminator: 2)
!7158 = distinct !{!7158, !7145}
!7159 = !DILocation(line: 439, column: 15, scope: !7103)
!7160 = !DILocation(line: 439, column: 19, scope: !7103)
!7161 = !DILocation(line: 439, column: 13, scope: !7103)
!7162 = !DILocation(line: 440, column: 17, scope: !7103)
!7163 = !DILocation(line: 441, column: 5, scope: !7103)
!7164 = !DILocation(line: 441, column: 12, scope: !7147)
!7165 = !DILocation(line: 441, column: 5, scope: !7147)
!7166 = !DILocation(line: 442, column: 30, scope: !7167)
!7167 = distinct !DILexicalBlock(scope: !7103, file: !939, line: 441, column: 21)
!7168 = !DILocation(line: 442, column: 39, scope: !7167)
!7169 = !DILocation(line: 442, column: 27, scope: !7167)
!7170 = !DILocation(line: 443, column: 28, scope: !7167)
!7171 = !DILocation(line: 443, column: 26, scope: !7167)
!7172 = !DILocation(line: 444, column: 19, scope: !7167)
!7173 = !DILocation(line: 444, column: 37, scope: !7167)
!7174 = !DILocation(line: 444, column: 17, scope: !7167)
!7175 = !DILocation(line: 445, column: 20, scope: !7167)
!7176 = !DILocation(line: 446, column: 13, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7167, file: !939, line: 446, column: 13)
!7178 = !DILocation(line: 446, column: 35, scope: !7177)
!7179 = !DILocation(line: 446, column: 53, scope: !7177)
!7180 = !DILocation(line: 446, column: 34, scope: !7177)
!7181 = !DILocation(line: 446, column: 31, scope: !7177)
!7182 = !DILocation(line: 446, column: 13, scope: !7167)
!7183 = !DILocation(line: 447, column: 13, scope: !7184)
!7184 = distinct !DILexicalBlock(scope: !7177, file: !939, line: 446, column: 63)
!7185 = !DILocation(line: 447, column: 31, scope: !7184)
!7186 = !DILocation(line: 447, column: 36, scope: !7184)
!7187 = !DILocation(line: 448, column: 13, scope: !7184)
!7188 = !DILocation(line: 450, column: 13, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !7167, file: !939, line: 450, column: 13)
!7190 = !DILocation(line: 450, column: 28, scope: !7189)
!7191 = !DILocation(line: 450, column: 33, scope: !7189)
!7192 = !DILocation(line: 450, column: 25, scope: !7189)
!7193 = !DILocation(line: 450, column: 13, scope: !7167)
!7194 = !DILocation(line: 451, column: 13, scope: !7195)
!7195 = distinct !DILexicalBlock(scope: !7189, file: !939, line: 450, column: 55)
!7196 = !DILocation(line: 451, column: 31, scope: !7195)
!7197 = !DILocation(line: 451, column: 36, scope: !7195)
!7198 = !DILocation(line: 452, column: 13, scope: !7195)
!7199 = !DILocation(line: 441, column: 5, scope: !7157)
!7200 = distinct !{!7200, !7163}
!7201 = !DILocation(line: 456, column: 9, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7103, file: !939, line: 456, column: 9)
!7203 = !DILocation(line: 456, column: 17, scope: !7202)
!7204 = !DILocation(line: 456, column: 21, scope: !7205)
!7205 = !DILexicalBlockFile(scope: !7202, file: !939, discriminator: 1)
!7206 = !DILocation(line: 456, column: 26, scope: !7205)
!7207 = !DILocation(line: 456, column: 9, scope: !7205)
!7208 = !DILocation(line: 457, column: 13, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !7210, file: !939, line: 457, column: 13)
!7210 = distinct !DILexicalBlock(scope: !7202, file: !939, line: 456, column: 47)
!7211 = !DILocation(line: 457, column: 18, scope: !7209)
!7212 = !DILocation(line: 457, column: 13, scope: !7210)
!7213 = !DILocation(line: 458, column: 33, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7209, file: !939, line: 457, column: 36)
!7215 = !DILocation(line: 458, column: 38, scope: !7214)
!7216 = !DILocation(line: 458, column: 23, scope: !7214)
!7217 = !DILocation(line: 458, column: 21, scope: !7214)
!7218 = !DILocation(line: 459, column: 9, scope: !7214)
!7219 = !DILocation(line: 460, column: 33, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7209, file: !939, line: 459, column: 16)
!7221 = !DILocation(line: 460, column: 37, scope: !7220)
!7222 = !DILocation(line: 460, column: 42, scope: !7220)
!7223 = !DILocation(line: 460, column: 23, scope: !7220)
!7224 = !DILocation(line: 460, column: 21, scope: !7220)
!7225 = !DILocation(line: 462, column: 14, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7210, file: !939, line: 462, column: 13)
!7227 = !DILocation(line: 462, column: 13, scope: !7210)
!7228 = !DILocation(line: 463, column: 17, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7226, file: !939, line: 462, column: 23)
!7230 = !DILocation(line: 464, column: 13, scope: !7229)
!7231 = !DILocation(line: 466, column: 33, scope: !7210)
!7232 = !DILocation(line: 466, column: 21, scope: !7210)
!7233 = !DILocation(line: 466, column: 11, scope: !7210)
!7234 = !DILocation(line: 467, column: 10, scope: !7210)
!7235 = !DILocation(line: 467, column: 12, scope: !7210)
!7236 = !DILocation(line: 469, column: 5, scope: !7210)
!7237 = !DILocation(line: 471, column: 5, scope: !7103)
!7238 = !DILocation(line: 471, column: 12, scope: !7147)
!7239 = !DILocation(line: 471, column: 5, scope: !7147)
!7240 = !DILocalVariable(name: "r_dirname", scope: !7241, file: !939, line: 472, type: !1008)
!7241 = distinct !DILexicalBlock(scope: !7103, file: !939, line: 471, column: 21)
!7242 = !DILocation(line: 472, column: 16, scope: !7241)
!7243 = !DILocation(line: 472, column: 28, scope: !7241)
!7244 = !DILocation(line: 475, column: 13, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7241, file: !939, line: 475, column: 13)
!7246 = !DILocation(line: 475, column: 21, scope: !7245)
!7247 = !DILocation(line: 475, column: 35, scope: !7248)
!7248 = !DILexicalBlockFile(scope: !7245, file: !939, discriminator: 1)
!7249 = !DILocation(line: 475, column: 24, scope: !7248)
!7250 = !DILocation(line: 475, column: 13, scope: !7248)
!7251 = !DILocation(line: 477, column: 58, scope: !7252)
!7252 = distinct !DILexicalBlock(scope: !7253, file: !939, line: 477, column: 17)
!7253 = distinct !DILexicalBlock(scope: !7245, file: !939, line: 475, column: 51)
!7254 = !DILocation(line: 477, column: 72, scope: !7252)
!7255 = !DILocation(line: 477, column: 81, scope: !7252)
!7256 = !DILocation(line: 477, column: 17, scope: !7252)
!7257 = !DILocation(line: 477, column: 97, scope: !7252)
!7258 = !DILocation(line: 477, column: 17, scope: !7253)
!7259 = !DILocation(line: 478, column: 21, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7252, file: !939, line: 477, column: 102)
!7261 = !DILocation(line: 479, column: 17, scope: !7260)
!7262 = !DILocation(line: 481, column: 21, scope: !7253)
!7263 = !DILocation(line: 481, column: 13, scope: !7253)
!7264 = !DILocation(line: 482, column: 23, scope: !7253)
!7265 = !DILocation(line: 482, column: 21, scope: !7253)
!7266 = !DILocation(line: 483, column: 9, scope: !7253)
!7267 = !DILocation(line: 485, column: 16, scope: !7241)
!7268 = !DILocation(line: 486, column: 35, scope: !7241)
!7269 = !DILocation(line: 486, column: 44, scope: !7241)
!7270 = !DILocation(line: 485, column: 9, scope: !7241)
!7271 = !DILocation(line: 487, column: 22, scope: !7241)
!7272 = !DILocation(line: 487, column: 27, scope: !7241)
!7273 = !DILocation(line: 487, column: 22, scope: !7274)
!7274 = !DILexicalBlockFile(scope: !7241, file: !939, discriminator: 1)
!7275 = !DILocation(line: 487, column: 60, scope: !7276)
!7276 = !DILexicalBlockFile(scope: !7241, file: !939, discriminator: 2)
!7277 = !DILocation(line: 487, column: 53, scope: !7276)
!7278 = !DILocation(line: 487, column: 22, scope: !7276)
!7279 = !DILocation(line: 487, column: 22, scope: !7280)
!7280 = !DILexicalBlockFile(scope: !7241, file: !939, discriminator: 3)
!7281 = !DILocation(line: 487, column: 79, scope: !7280)
!7282 = !DILocation(line: 487, column: 88, scope: !7280)
!7283 = !DILocation(line: 487, column: 72, scope: !7280)
!7284 = !DILocation(line: 487, column: 70, scope: !7280)
!7285 = !DILocation(line: 487, column: 98, scope: !7280)
!7286 = !DILocation(line: 487, column: 21, scope: !7280)
!7287 = !DILocation(line: 487, column: 19, scope: !7280)
!7288 = !DILocation(line: 488, column: 26, scope: !7241)
!7289 = !DILocation(line: 488, column: 16, scope: !7241)
!7290 = !DILocation(line: 488, column: 14, scope: !7241)
!7291 = !DILocation(line: 489, column: 14, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7241, file: !939, line: 489, column: 13)
!7293 = !DILocation(line: 489, column: 13, scope: !7241)
!7294 = !DILocation(line: 490, column: 17, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !7292, file: !939, line: 489, column: 20)
!7296 = !DILocation(line: 491, column: 13, scope: !7295)
!7297 = !DILocation(line: 494, column: 13, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7241, file: !939, line: 494, column: 13)
!7299 = !DILocation(line: 494, column: 18, scope: !7298)
!7300 = !DILocation(line: 494, column: 13, scope: !7241)
!7301 = !DILocation(line: 495, column: 24, scope: !7298)
!7302 = !DILocation(line: 495, column: 30, scope: !7298)
!7303 = !DILocation(line: 495, column: 39, scope: !7298)
!7304 = !DILocation(line: 495, column: 49, scope: !7298)
!7305 = !DILocation(line: 495, column: 13, scope: !7298)
!7306 = !DILocation(line: 497, column: 24, scope: !7307)
!7307 = distinct !DILexicalBlock(scope: !7298, file: !939, line: 496, column: 14)
!7308 = !DILocation(line: 497, column: 30, scope: !7307)
!7309 = !DILocation(line: 497, column: 39, scope: !7307)
!7310 = !DILocation(line: 497, column: 13, scope: !7307)
!7311 = !DILocation(line: 498, column: 24, scope: !7307)
!7312 = !DILocation(line: 498, column: 30, scope: !7307)
!7313 = !DILocation(line: 498, column: 39, scope: !7307)
!7314 = !DILocation(line: 498, column: 49, scope: !7307)
!7315 = !DILocation(line: 498, column: 13, scope: !7307)
!7316 = !DILocation(line: 501, column: 41, scope: !7241)
!7317 = !DILocation(line: 501, column: 44, scope: !7241)
!7318 = !DILocation(line: 501, column: 17, scope: !7241)
!7319 = !DILocation(line: 501, column: 15, scope: !7241)
!7320 = !DILocation(line: 502, column: 13, scope: !7321)
!7321 = distinct !DILexicalBlock(scope: !7241, file: !939, line: 502, column: 13)
!7322 = !DILocation(line: 502, column: 18, scope: !7321)
!7323 = !DILocation(line: 502, column: 25, scope: !7321)
!7324 = !DILocation(line: 502, column: 29, scope: !7325)
!7325 = !DILexicalBlockFile(scope: !7321, file: !939, discriminator: 1)
!7326 = !DILocation(line: 502, column: 35, scope: !7325)
!7327 = !DILocation(line: 502, column: 53, scope: !7328)
!7328 = !DILexicalBlockFile(scope: !7321, file: !939, discriminator: 2)
!7329 = !DILocation(line: 502, column: 39, scope: !7328)
!7330 = !DILocation(line: 502, column: 13, scope: !7328)
!7331 = !DILocation(line: 503, column: 13, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7321, file: !939, line: 502, column: 70)
!7333 = !DILocation(line: 504, column: 24, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !7332, file: !939, line: 504, column: 17)
!7335 = !DILocation(line: 504, column: 28, scope: !7334)
!7336 = !DILocation(line: 504, column: 33, scope: !7334)
!7337 = !DILocation(line: 504, column: 41, scope: !7334)
!7338 = !DILocation(line: 504, column: 45, scope: !7334)
!7339 = !DILocation(line: 504, column: 56, scope: !7334)
!7340 = !DILocation(line: 504, column: 22, scope: !7334)
!7341 = !DILocation(line: 504, column: 76, scope: !7334)
!7342 = !DILocation(line: 504, column: 17, scope: !7332)
!7343 = !DILocation(line: 505, column: 21, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7345, file: !939, line: 505, column: 21)
!7345 = distinct !DILexicalBlock(scope: !7334, file: !939, line: 504, column: 81)
!7346 = !DILocation(line: 505, column: 26, scope: !7344)
!7347 = !DILocation(line: 505, column: 21, scope: !7345)
!7348 = !DILocation(line: 506, column: 25, scope: !7344)
!7349 = !DILocation(line: 506, column: 21, scope: !7344)
!7350 = !DILocation(line: 507, column: 17, scope: !7345)
!7351 = !DILocation(line: 509, column: 32, scope: !7332)
!7352 = !DILocation(line: 509, column: 36, scope: !7332)
!7353 = !DILocation(line: 509, column: 13, scope: !7332)
!7354 = !DILocation(line: 510, column: 9, scope: !7332)
!7355 = !DILocation(line: 510, column: 27, scope: !7356)
!7356 = !DILexicalBlockFile(scope: !7357, file: !939, discriminator: 1)
!7357 = distinct !DILexicalBlock(scope: !7321, file: !939, line: 510, column: 20)
!7358 = !DILocation(line: 510, column: 20, scope: !7356)
!7359 = !DILocation(line: 510, column: 33, scope: !7356)
!7360 = !DILocation(line: 511, column: 20, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7357, file: !939, line: 510, column: 38)
!7362 = !DILocation(line: 512, column: 38, scope: !7361)
!7363 = !DILocation(line: 512, column: 54, scope: !7361)
!7364 = !DILocation(line: 512, column: 53, scope: !7361)
!7365 = !DILocation(line: 512, column: 44, scope: !7366)
!7366 = !DILexicalBlockFile(scope: !7361, file: !939, discriminator: 1)
!7367 = !DILocation(line: 511, column: 13, scope: !7361)
!7368 = !DILocation(line: 513, column: 9, scope: !7361)
!7369 = !DILocation(line: 515, column: 14, scope: !7370)
!7370 = distinct !DILexicalBlock(scope: !7241, file: !939, line: 515, column: 13)
!7371 = !DILocation(line: 515, column: 23, scope: !7370)
!7372 = !DILocation(line: 515, column: 39, scope: !7370)
!7373 = !DILocation(line: 515, column: 13, scope: !7241)
!7374 = !DILocation(line: 516, column: 37, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7370, file: !939, line: 515, column: 49)
!7376 = !DILocation(line: 516, column: 41, scope: !7375)
!7377 = !DILocation(line: 516, column: 50, scope: !7375)
!7378 = !DILocation(line: 516, column: 27, scope: !7375)
!7379 = !DILocation(line: 516, column: 25, scope: !7375)
!7380 = !DILocation(line: 517, column: 18, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7375, file: !939, line: 517, column: 17)
!7382 = !DILocation(line: 517, column: 17, scope: !7375)
!7383 = !DILocation(line: 518, column: 21, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7381, file: !939, line: 517, column: 31)
!7385 = !DILocation(line: 519, column: 17, scope: !7384)
!7386 = !DILocation(line: 521, column: 37, scope: !7375)
!7387 = !DILocation(line: 521, column: 25, scope: !7375)
!7388 = !DILocation(line: 521, column: 15, scope: !7375)
!7389 = !DILocation(line: 522, column: 14, scope: !7375)
!7390 = !DILocation(line: 522, column: 16, scope: !7375)
!7391 = !DILocation(line: 523, column: 36, scope: !7375)
!7392 = !DILocation(line: 523, column: 45, scope: !7375)
!7393 = !DILocation(line: 523, column: 29, scope: !7375)
!7394 = !DILocation(line: 523, column: 59, scope: !7375)
!7395 = !DILocation(line: 523, column: 72, scope: !7375)
!7396 = !DILocation(line: 523, column: 65, scope: !7397)
!7397 = !DILexicalBlockFile(scope: !7375, file: !939, discriminator: 1)
!7398 = !DILocation(line: 523, column: 63, scope: !7375)
!7399 = !DILocation(line: 523, column: 27, scope: !7375)
!7400 = !DILocation(line: 524, column: 34, scope: !7375)
!7401 = !DILocation(line: 524, column: 24, scope: !7375)
!7402 = !DILocation(line: 524, column: 22, scope: !7375)
!7403 = !DILocation(line: 525, column: 18, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7375, file: !939, line: 525, column: 17)
!7405 = !DILocation(line: 525, column: 17, scope: !7375)
!7406 = !DILocation(line: 526, column: 21, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !7404, file: !939, line: 525, column: 28)
!7408 = !DILocation(line: 527, column: 17, scope: !7407)
!7409 = !DILocation(line: 530, column: 24, scope: !7375)
!7410 = !DILocation(line: 530, column: 34, scope: !7375)
!7411 = !DILocation(line: 530, column: 47, scope: !7375)
!7412 = !DILocation(line: 530, column: 13, scope: !7375)
!7413 = !DILocation(line: 531, column: 24, scope: !7375)
!7414 = !DILocation(line: 531, column: 34, scope: !7375)
!7415 = !DILocation(line: 531, column: 43, scope: !7375)
!7416 = !DILocation(line: 531, column: 57, scope: !7375)
!7417 = !DILocation(line: 531, column: 13, scope: !7375)
!7418 = !DILocation(line: 533, column: 17, scope: !7419)
!7419 = distinct !DILexicalBlock(scope: !7375, file: !939, line: 533, column: 17)
!7420 = !DILocation(line: 533, column: 22, scope: !7419)
!7421 = !DILocation(line: 533, column: 29, scope: !7419)
!7422 = !DILocation(line: 533, column: 33, scope: !7423)
!7423 = !DILexicalBlockFile(scope: !7419, file: !939, discriminator: 1)
!7424 = !DILocation(line: 533, column: 39, scope: !7423)
!7425 = !DILocation(line: 533, column: 57, scope: !7426)
!7426 = !DILexicalBlockFile(scope: !7419, file: !939, discriminator: 2)
!7427 = !DILocation(line: 533, column: 43, scope: !7426)
!7428 = !DILocation(line: 533, column: 17, scope: !7426)
!7429 = !DILocation(line: 534, column: 17, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !7419, file: !939, line: 533, column: 74)
!7431 = !DILocation(line: 535, column: 28, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7430, file: !939, line: 535, column: 21)
!7433 = !DILocation(line: 535, column: 32, scope: !7432)
!7434 = !DILocation(line: 535, column: 41, scope: !7432)
!7435 = !DILocation(line: 535, column: 49, scope: !7432)
!7436 = !DILocation(line: 535, column: 53, scope: !7432)
!7437 = !DILocation(line: 535, column: 68, scope: !7432)
!7438 = !DILocation(line: 535, column: 26, scope: !7432)
!7439 = !DILocation(line: 535, column: 92, scope: !7432)
!7440 = !DILocation(line: 535, column: 21, scope: !7430)
!7441 = !DILocation(line: 536, column: 25, scope: !7442)
!7442 = distinct !DILexicalBlock(scope: !7443, file: !939, line: 536, column: 25)
!7443 = distinct !DILexicalBlock(scope: !7432, file: !939, line: 535, column: 97)
!7444 = !DILocation(line: 536, column: 30, scope: !7442)
!7445 = !DILocation(line: 536, column: 25, scope: !7443)
!7446 = !DILocation(line: 537, column: 29, scope: !7442)
!7447 = !DILocation(line: 537, column: 25, scope: !7442)
!7448 = !DILocation(line: 538, column: 29, scope: !7443)
!7449 = !DILocation(line: 538, column: 21, scope: !7443)
!7450 = !DILocation(line: 539, column: 21, scope: !7443)
!7451 = !DILocation(line: 541, column: 36, scope: !7430)
!7452 = !DILocation(line: 541, column: 40, scope: !7430)
!7453 = !DILocation(line: 541, column: 17, scope: !7430)
!7454 = !DILocation(line: 542, column: 13, scope: !7430)
!7455 = !DILocation(line: 542, column: 31, scope: !7456)
!7456 = !DILexicalBlockFile(scope: !7457, file: !939, discriminator: 1)
!7457 = distinct !DILexicalBlock(scope: !7419, file: !939, line: 542, column: 24)
!7458 = !DILocation(line: 542, column: 24, scope: !7456)
!7459 = !DILocation(line: 542, column: 41, scope: !7456)
!7460 = !DILocation(line: 543, column: 24, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7457, file: !939, line: 542, column: 46)
!7462 = !DILocation(line: 544, column: 42, scope: !7461)
!7463 = !DILocation(line: 544, column: 62, scope: !7461)
!7464 = !DILocation(line: 544, column: 61, scope: !7461)
!7465 = !DILocation(line: 544, column: 52, scope: !7466)
!7466 = !DILexicalBlockFile(scope: !7461, file: !939, discriminator: 1)
!7467 = !DILocation(line: 543, column: 17, scope: !7461)
!7468 = !DILocation(line: 545, column: 13, scope: !7461)
!7469 = !DILocation(line: 546, column: 21, scope: !7375)
!7470 = !DILocation(line: 546, column: 13, scope: !7375)
!7471 = !DILocation(line: 547, column: 9, scope: !7375)
!7472 = !DILocation(line: 548, column: 18, scope: !7241)
!7473 = !DILocation(line: 548, column: 9, scope: !7241)
!7474 = !DILocation(line: 549, column: 28, scope: !7241)
!7475 = !DILocation(line: 549, column: 26, scope: !7241)
!7476 = !DILocation(line: 550, column: 19, scope: !7241)
!7477 = !DILocation(line: 550, column: 37, scope: !7241)
!7478 = !DILocation(line: 550, column: 17, scope: !7241)
!7479 = !DILocation(line: 551, column: 17, scope: !7241)
!7480 = !DILocation(line: 551, column: 9, scope: !7241)
!7481 = !DILocation(line: 471, column: 5, scope: !7157)
!7482 = distinct !{!7482, !7237}
!7483 = !DILocation(line: 471, column: 5, scope: !7484)
!7484 = !DILexicalBlockFile(scope: !7103, file: !939, discriminator: 3)
!7485 = !DILocation(line: 555, column: 13, scope: !7103)
!7486 = !DILocation(line: 555, column: 5, scope: !7103)
!7487 = !DILocation(line: 556, column: 13, scope: !7103)
!7488 = !DILocation(line: 556, column: 5, scope: !7103)
!7489 = !DILocation(line: 557, column: 13, scope: !7103)
!7490 = !DILocation(line: 557, column: 5, scope: !7103)
!7491 = !DILocation(line: 559, column: 12, scope: !7103)
!7492 = !DILocation(line: 559, column: 5, scope: !7103)
!7493 = distinct !DISubprogram(name: "replace_int_data_in_filename", scope: !939, file: !939, line: 337, type: !7494, isLocal: true, isDefinition: true, scopeLine: 338, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!7494 = !DISubroutineType(types: !7495)
!7495 = !{!981, !7496, !1031, !989, !976}
!7496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64, align: 64)
!7497 = !DILocalVariable(name: "s", arg: 1, scope: !7493, file: !939, line: 337, type: !7496)
!7498 = !DILocation(line: 337, column: 48, scope: !7493)
!7499 = !DILocalVariable(name: "filename", arg: 2, scope: !7493, file: !939, line: 337, type: !1031)
!7500 = !DILocation(line: 337, column: 63, scope: !7493)
!7501 = !DILocalVariable(name: "placeholder", arg: 3, scope: !7493, file: !939, line: 337, type: !989)
!7502 = !DILocation(line: 337, column: 78, scope: !7493)
!7503 = !DILocalVariable(name: "number", arg: 4, scope: !7493, file: !939, line: 337, type: !976)
!7504 = !DILocation(line: 337, column: 99, scope: !7493)
!7505 = !DILocalVariable(name: "p", scope: !7493, file: !939, line: 339, type: !1031)
!7506 = !DILocation(line: 339, column: 17, scope: !7493)
!7507 = !DILocalVariable(name: "new_filename", scope: !7493, file: !939, line: 340, type: !1008)
!7508 = !DILocation(line: 340, column: 11, scope: !7493)
!7509 = !DILocalVariable(name: "c", scope: !7493, file: !939, line: 341, type: !989)
!7510 = !DILocation(line: 341, column: 10, scope: !7493)
!7511 = !DILocalVariable(name: "nd", scope: !7493, file: !939, line: 342, type: !981)
!7512 = !DILocation(line: 342, column: 9, scope: !7493)
!7513 = !DILocalVariable(name: "addchar_count", scope: !7493, file: !939, line: 342, type: !981)
!7514 = !DILocation(line: 342, column: 13, scope: !7493)
!7515 = !DILocalVariable(name: "found_count", scope: !7493, file: !939, line: 343, type: !981)
!7516 = !DILocation(line: 343, column: 9, scope: !7493)
!7517 = !DILocalVariable(name: "buf", scope: !7493, file: !939, line: 344, type: !7518)
!7518 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBPrint", file: !7519, line: 82, baseType: !7520)
!7519 = !DIFile(filename: "./libavutil/bprint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!7520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBPrint", file: !7519, line: 82, size: 8192, align: 64, elements: !7521)
!7521 = !{!7522, !7523, !7524, !7525, !7526, !7530}
!7522 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !7520, file: !7519, line: 82, baseType: !1008, size: 64, align: 64)
!7523 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7520, file: !7519, line: 82, baseType: !982, size: 32, align: 32, offset: 64)
!7524 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7520, file: !7519, line: 82, baseType: !982, size: 32, align: 32, offset: 96)
!7525 = !DIDerivedType(tag: DW_TAG_member, name: "size_max", scope: !7520, file: !7519, line: 82, baseType: !982, size: 32, align: 32, offset: 128)
!7526 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_internal_buffer", scope: !7520, file: !7519, line: 82, baseType: !7527, size: 8, align: 8, offset: 160)
!7527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !989, size: 8, align: 8, elements: !7528)
!7528 = !{!7529}
!7529 = !DISubrange(count: 1)
!7530 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_padding", scope: !7520, file: !7519, line: 82, baseType: !7531, size: 8000, align: 8, offset: 168)
!7531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !989, size: 8000, align: 8, elements: !7532)
!7532 = !{!7533}
!7533 = !DISubrange(count: 1000)
!7534 = !DILocation(line: 344, column: 14, scope: !7493)
!7535 = !DILocation(line: 346, column: 5, scope: !7493)
!7536 = !DILocation(line: 348, column: 9, scope: !7493)
!7537 = !DILocation(line: 348, column: 7, scope: !7493)
!7538 = !DILocation(line: 349, column: 5, scope: !7493)
!7539 = !DILocation(line: 350, column: 14, scope: !7540)
!7540 = distinct !DILexicalBlock(scope: !7541, file: !939, line: 349, column: 14)
!7541 = distinct !DILexicalBlock(scope: !7542, file: !939, line: 349, column: 5)
!7542 = distinct !DILexicalBlock(scope: !7493, file: !939, line: 349, column: 5)
!7543 = !DILocation(line: 350, column: 13, scope: !7540)
!7544 = !DILocation(line: 350, column: 11, scope: !7540)
!7545 = !DILocation(line: 351, column: 13, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7540, file: !939, line: 351, column: 13)
!7547 = !DILocation(line: 351, column: 15, scope: !7546)
!7548 = !DILocation(line: 351, column: 13, scope: !7540)
!7549 = !DILocation(line: 352, column: 13, scope: !7546)
!7550 = !DILocation(line: 353, column: 13, scope: !7551)
!7551 = distinct !DILexicalBlock(scope: !7540, file: !939, line: 353, column: 13)
!7552 = !DILocation(line: 353, column: 15, scope: !7551)
!7553 = !DILocation(line: 353, column: 22, scope: !7551)
!7554 = !DILocation(line: 353, column: 27, scope: !7555)
!7555 = !DILexicalBlockFile(scope: !7551, file: !939, discriminator: 1)
!7556 = !DILocation(line: 353, column: 28, scope: !7555)
!7557 = !DILocation(line: 353, column: 25, scope: !7555)
!7558 = !DILocation(line: 353, column: 32, scope: !7555)
!7559 = !DILocation(line: 353, column: 13, scope: !7555)
!7560 = !DILocation(line: 354, column: 27, scope: !7551)
!7561 = !DILocation(line: 354, column: 13, scope: !7551)
!7562 = !DILocation(line: 355, column: 18, scope: !7563)
!7563 = distinct !DILexicalBlock(scope: !7551, file: !939, line: 355, column: 18)
!7564 = !DILocation(line: 355, column: 20, scope: !7563)
!7565 = !DILocation(line: 355, column: 27, scope: !7563)
!7566 = !DILocation(line: 355, column: 44, scope: !7567)
!7567 = !DILexicalBlockFile(scope: !7563, file: !939, discriminator: 1)
!7568 = !DILocation(line: 355, column: 45, scope: !7567)
!7569 = !DILocation(line: 355, column: 42, scope: !7567)
!7570 = !DILocation(line: 355, column: 31, scope: !7567)
!7571 = !DILocation(line: 355, column: 50, scope: !7567)
!7572 = !DILocation(line: 355, column: 55, scope: !7573)
!7573 = !DILexicalBlockFile(scope: !7563, file: !939, discriminator: 2)
!7574 = !DILocation(line: 355, column: 56, scope: !7573)
!7575 = !DILocation(line: 355, column: 53, scope: !7573)
!7576 = !DILocation(line: 355, column: 63, scope: !7573)
!7577 = !DILocation(line: 355, column: 60, scope: !7573)
!7578 = !DILocation(line: 355, column: 18, scope: !7573)
!7579 = !DILocation(line: 356, column: 16, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7563, file: !939, line: 355, column: 77)
!7581 = !DILocation(line: 357, column: 27, scope: !7580)
!7582 = !DILocation(line: 358, column: 13, scope: !7580)
!7583 = !DILocation(line: 358, column: 33, scope: !7584)
!7584 = !DILexicalBlockFile(scope: !7580, file: !939, discriminator: 1)
!7585 = !DILocation(line: 358, column: 37, scope: !7584)
!7586 = !DILocation(line: 358, column: 35, scope: !7584)
!7587 = !DILocation(line: 358, column: 31, scope: !7584)
!7588 = !DILocation(line: 358, column: 20, scope: !7584)
!7589 = !DILocation(line: 358, column: 13, scope: !7584)
!7590 = !DILocation(line: 359, column: 22, scope: !7591)
!7591 = distinct !DILexicalBlock(scope: !7580, file: !939, line: 358, column: 54)
!7592 = !DILocation(line: 359, column: 25, scope: !7591)
!7593 = !DILocation(line: 359, column: 34, scope: !7591)
!7594 = !DILocation(line: 359, column: 38, scope: !7591)
!7595 = !DILocation(line: 359, column: 36, scope: !7591)
!7596 = !DILocation(line: 359, column: 32, scope: !7591)
!7597 = !DILocation(line: 359, column: 30, scope: !7591)
!7598 = !DILocation(line: 359, column: 53, scope: !7591)
!7599 = !DILocation(line: 359, column: 20, scope: !7591)
!7600 = !DILocation(line: 360, column: 30, scope: !7591)
!7601 = !DILocation(line: 358, column: 13, scope: !7602)
!7602 = !DILexicalBlockFile(scope: !7580, file: !939, discriminator: 2)
!7603 = distinct !{!7603, !7582}
!7604 = !DILocation(line: 363, column: 19, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7580, file: !939, line: 363, column: 17)
!7606 = !DILocation(line: 363, column: 23, scope: !7605)
!7607 = !DILocation(line: 363, column: 21, scope: !7605)
!7608 = !DILocation(line: 363, column: 17, scope: !7605)
!7609 = !DILocation(line: 363, column: 41, scope: !7605)
!7610 = !DILocation(line: 363, column: 38, scope: !7605)
!7611 = !DILocation(line: 363, column: 17, scope: !7580)
!7612 = !DILocation(line: 364, column: 47, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7605, file: !939, line: 363, column: 54)
!7614 = !DILocation(line: 364, column: 54, scope: !7613)
!7615 = !DILocation(line: 364, column: 46, scope: !7613)
!7616 = !DILocation(line: 364, column: 61, scope: !7617)
!7617 = !DILexicalBlockFile(scope: !7613, file: !939, discriminator: 1)
!7618 = !DILocation(line: 364, column: 46, scope: !7617)
!7619 = !DILocation(line: 364, column: 68, scope: !7620)
!7620 = !DILexicalBlockFile(scope: !7613, file: !939, discriminator: 2)
!7621 = !DILocation(line: 364, column: 46, scope: !7620)
!7622 = !DILocation(line: 364, column: 46, scope: !7623)
!7623 = !DILexicalBlockFile(scope: !7613, file: !939, discriminator: 3)
!7624 = !DILocation(line: 364, column: 72, scope: !7623)
!7625 = !DILocation(line: 364, column: 17, scope: !7623)
!7626 = !DILocation(line: 365, column: 23, scope: !7613)
!7627 = !DILocation(line: 365, column: 37, scope: !7613)
!7628 = !DILocation(line: 365, column: 19, scope: !7613)
!7629 = !DILocation(line: 366, column: 31, scope: !7613)
!7630 = !DILocation(line: 367, column: 28, scope: !7613)
!7631 = !DILocation(line: 368, column: 13, scope: !7613)
!7632 = !DILocation(line: 370, column: 9, scope: !7580)
!7633 = !DILocation(line: 371, column: 27, scope: !7563)
!7634 = !DILocation(line: 373, column: 37, scope: !7540)
!7635 = !DILocation(line: 373, column: 40, scope: !7540)
!7636 = !DILocation(line: 373, column: 9, scope: !7540)
!7637 = !DILocation(line: 374, column: 14, scope: !7540)
!7638 = !DILocation(line: 374, column: 11, scope: !7540)
!7639 = !DILocation(line: 349, column: 5, scope: !7640)
!7640 = !DILexicalBlockFile(scope: !7541, file: !939, discriminator: 1)
!7641 = distinct !{!7641, !7538}
!7642 = !DILocation(line: 376, column: 10, scope: !7643)
!7643 = distinct !DILexicalBlock(scope: !7493, file: !939, line: 376, column: 9)
!7644 = !DILocation(line: 376, column: 9, scope: !7493)
!7645 = !DILocation(line: 377, column: 9, scope: !7646)
!7646 = distinct !DILexicalBlock(scope: !7643, file: !939, line: 376, column: 39)
!7647 = !DILocation(line: 378, column: 9, scope: !7646)
!7648 = !DILocation(line: 380, column: 9, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7493, file: !939, line: 380, column: 9)
!7650 = !DILocation(line: 380, column: 49, scope: !7649)
!7651 = !DILocation(line: 380, column: 53, scope: !7649)
!7652 = !DILocation(line: 380, column: 57, scope: !7653)
!7653 = !DILexicalBlockFile(scope: !7649, file: !939, discriminator: 1)
!7654 = !DILocation(line: 380, column: 9, scope: !7653)
!7655 = !DILocation(line: 381, column: 9, scope: !7649)
!7656 = !DILocation(line: 382, column: 10, scope: !7493)
!7657 = !DILocation(line: 382, column: 6, scope: !7493)
!7658 = !DILocation(line: 382, column: 8, scope: !7493)
!7659 = !DILocation(line: 383, column: 12, scope: !7493)
!7660 = !DILocation(line: 383, column: 5, scope: !7493)
!7661 = !DILocation(line: 384, column: 1, scope: !7493)
!7662 = distinct !DISubprogram(name: "av_isdigit", scope: !7663, file: !7663, line: 206, type: !7664, isLocal: true, isDefinition: true, scopeLine: 207, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!7663 = !DIFile(filename: "./libavutil/avstring.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!7664 = !DISubroutineType(types: !7665)
!7665 = !{!981, !981}
!7666 = !DILocalVariable(name: "c", arg: 1, scope: !7662, file: !7663, line: 206, type: !981)
!7667 = !DILocation(line: 206, column: 57, scope: !7662)
!7668 = !DILocation(line: 208, column: 12, scope: !7662)
!7669 = !DILocation(line: 208, column: 14, scope: !7662)
!7670 = !DILocation(line: 208, column: 21, scope: !7662)
!7671 = !DILocation(line: 208, column: 24, scope: !7672)
!7672 = !DILexicalBlockFile(scope: !7662, file: !7663, discriminator: 1)
!7673 = !DILocation(line: 208, column: 26, scope: !7672)
!7674 = !DILocation(line: 208, column: 21, scope: !7675)
!7675 = !DILexicalBlockFile(scope: !7662, file: !7663, discriminator: 2)
!7676 = !DILocation(line: 208, column: 5, scope: !7675)
!7677 = distinct !DISubprogram(name: "av_bprint_is_complete", scope: !7519, file: !7519, line: 185, type: !7678, isLocal: true, isDefinition: true, scopeLine: 186, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!7678 = !DISubroutineType(types: !7679)
!7679 = !{!981, !7680}
!7680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7681, size: 64, align: 64)
!7681 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7518)
!7682 = !DILocalVariable(name: "buf", arg: 1, scope: !7677, file: !7519, line: 185, type: !7680)
!7683 = !DILocation(line: 185, column: 57, scope: !7677)
!7684 = !DILocation(line: 187, column: 12, scope: !7677)
!7685 = !DILocation(line: 187, column: 17, scope: !7677)
!7686 = !DILocation(line: 187, column: 23, scope: !7677)
!7687 = !DILocation(line: 187, column: 28, scope: !7677)
!7688 = !DILocation(line: 187, column: 21, scope: !7677)
!7689 = !DILocation(line: 187, column: 5, scope: !7677)
!7690 = distinct !DISubprogram(name: "sls_flag_use_localtime_filename", scope: !939, file: !939, line: 912, type: !7104, isLocal: true, isDefinition: true, scopeLine: 913, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!7691 = !DILocalVariable(name: "oc", arg: 1, scope: !7690, file: !939, line: 912, type: !2272)
!7692 = !DILocation(line: 912, column: 61, scope: !7690)
!7693 = !DILocalVariable(name: "c", arg: 2, scope: !7690, file: !939, line: 912, type: !2338)
!7694 = !DILocation(line: 912, column: 77, scope: !7690)
!7695 = !DILocalVariable(name: "vs", arg: 3, scope: !7690, file: !939, line: 912, type: !2274)
!7696 = !DILocation(line: 912, column: 95, scope: !7690)
!7697 = !DILocation(line: 914, column: 9, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7690, file: !939, line: 914, column: 9)
!7699 = !DILocation(line: 914, column: 12, scope: !7698)
!7700 = !DILocation(line: 914, column: 18, scope: !7698)
!7701 = !DILocation(line: 914, column: 9, scope: !7690)
!7702 = !DILocalVariable(name: "filename", scope: !7703, file: !939, line: 915, type: !1008)
!7703 = distinct !DILexicalBlock(scope: !7698, file: !939, line: 914, column: 52)
!7704 = !DILocation(line: 915, column: 15, scope: !7703)
!7705 = !DILocation(line: 918, column: 13, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7703, file: !939, line: 916, column: 13)
!7707 = !DILocation(line: 918, column: 17, scope: !7706)
!7708 = !DILocation(line: 918, column: 27, scope: !7706)
!7709 = !DILocation(line: 918, column: 30, scope: !7706)
!7710 = !DILocation(line: 918, column: 37, scope: !7711)
!7711 = !DILexicalBlockFile(scope: !7706, file: !939, discriminator: 1)
!7712 = !DILocation(line: 918, column: 41, scope: !7711)
!7713 = !DILocation(line: 918, column: 52, scope: !7711)
!7714 = !DILocation(line: 918, column: 55, scope: !7711)
!7715 = !DILocation(line: 918, column: 50, scope: !7711)
!7716 = !DILocation(line: 918, column: 27, scope: !7711)
!7717 = !DILocation(line: 918, column: 62, scope: !7718)
!7718 = !DILexicalBlockFile(scope: !7706, file: !939, discriminator: 2)
!7719 = !DILocation(line: 918, column: 66, scope: !7718)
!7720 = !DILocation(line: 918, column: 27, scope: !7718)
!7721 = !DILocation(line: 918, column: 27, scope: !7722)
!7722 = !DILexicalBlockFile(scope: !7706, file: !939, discriminator: 3)
!7723 = !DILocation(line: 916, column: 13, scope: !7706)
!7724 = !DILocation(line: 918, column: 76, scope: !7722)
!7725 = !DILocation(line: 916, column: 13, scope: !7703)
!7726 = !DILocation(line: 922, column: 20, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7706, file: !939, line: 918, column: 81)
!7728 = !DILocation(line: 924, column: 20, scope: !7727)
!7729 = !DILocation(line: 924, column: 24, scope: !7727)
!7730 = !DILocation(line: 922, column: 13, scope: !7727)
!7731 = !DILocation(line: 925, column: 21, scope: !7727)
!7732 = !DILocation(line: 925, column: 13, scope: !7727)
!7733 = !DILocation(line: 926, column: 13, scope: !7727)
!7734 = !DILocation(line: 928, column: 27, scope: !7703)
!7735 = !DILocation(line: 928, column: 31, scope: !7703)
!7736 = !DILocation(line: 928, column: 9, scope: !7703)
!7737 = !DILocation(line: 929, column: 5, scope: !7703)
!7738 = !DILocation(line: 930, column: 9, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !7690, file: !939, line: 930, column: 9)
!7740 = !DILocation(line: 930, column: 12, scope: !7739)
!7741 = !DILocation(line: 930, column: 18, scope: !7739)
!7742 = !DILocation(line: 930, column: 9, scope: !7690)
!7743 = !DILocation(line: 931, column: 20, scope: !7744)
!7744 = distinct !DILexicalBlock(scope: !7739, file: !939, line: 930, column: 89)
!7745 = !DILocation(line: 931, column: 24, scope: !7744)
!7746 = !DILocation(line: 931, column: 60, scope: !7744)
!7747 = !DILocation(line: 931, column: 64, scope: !7744)
!7748 = !DILocation(line: 931, column: 9, scope: !7744)
!7749 = !DILocation(line: 933, column: 13, scope: !7750)
!7750 = distinct !DILexicalBlock(scope: !7744, file: !939, line: 933, column: 13)
!7751 = !DILocation(line: 933, column: 16, scope: !7750)
!7752 = !DILocation(line: 933, column: 22, scope: !7750)
!7753 = !DILocation(line: 933, column: 13, scope: !7744)
!7754 = !DILocalVariable(name: "filename", scope: !7755, file: !939, line: 934, type: !1008)
!7755 = distinct !DILexicalBlock(scope: !7750, file: !939, line: 933, column: 55)
!7756 = !DILocation(line: 934, column: 19, scope: !7755)
!7757 = !DILocation(line: 935, column: 57, scope: !7758)
!7758 = distinct !DILexicalBlock(scope: !7755, file: !939, line: 935, column: 17)
!7759 = !DILocation(line: 935, column: 61, scope: !7758)
!7760 = !DILocation(line: 935, column: 17, scope: !7758)
!7761 = !DILocation(line: 935, column: 74, scope: !7758)
!7762 = !DILocation(line: 935, column: 17, scope: !7755)
!7763 = !DILocation(line: 936, column: 24, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7758, file: !939, line: 935, column: 79)
!7765 = !DILocation(line: 938, column: 24, scope: !7764)
!7766 = !DILocation(line: 938, column: 28, scope: !7764)
!7767 = !DILocation(line: 936, column: 17, scope: !7764)
!7768 = !DILocation(line: 939, column: 25, scope: !7764)
!7769 = !DILocation(line: 939, column: 17, scope: !7764)
!7770 = !DILocation(line: 940, column: 17, scope: !7764)
!7771 = !DILocation(line: 942, column: 31, scope: !7755)
!7772 = !DILocation(line: 942, column: 35, scope: !7755)
!7773 = !DILocation(line: 942, column: 13, scope: !7755)
!7774 = !DILocation(line: 943, column: 9, scope: !7755)
!7775 = !DILocation(line: 944, column: 13, scope: !7776)
!7776 = distinct !DILexicalBlock(scope: !7744, file: !939, line: 944, column: 13)
!7777 = !DILocation(line: 944, column: 16, scope: !7776)
!7778 = !DILocation(line: 944, column: 22, scope: !7776)
!7779 = !DILocation(line: 944, column: 13, scope: !7744)
!7780 = !DILocalVariable(name: "filename", scope: !7781, file: !939, line: 945, type: !1008)
!7781 = distinct !DILexicalBlock(scope: !7776, file: !939, line: 944, column: 59)
!7782 = !DILocation(line: 945, column: 19, scope: !7781)
!7783 = !DILocation(line: 946, column: 57, scope: !7784)
!7784 = distinct !DILexicalBlock(scope: !7781, file: !939, line: 946, column: 17)
!7785 = !DILocation(line: 946, column: 61, scope: !7784)
!7786 = !DILocation(line: 946, column: 17, scope: !7784)
!7787 = !DILocation(line: 946, column: 74, scope: !7784)
!7788 = !DILocation(line: 946, column: 17, scope: !7781)
!7789 = !DILocation(line: 947, column: 24, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7784, file: !939, line: 946, column: 79)
!7791 = !DILocation(line: 949, column: 24, scope: !7790)
!7792 = !DILocation(line: 949, column: 28, scope: !7790)
!7793 = !DILocation(line: 947, column: 17, scope: !7790)
!7794 = !DILocation(line: 950, column: 25, scope: !7790)
!7795 = !DILocation(line: 950, column: 17, scope: !7790)
!7796 = !DILocation(line: 951, column: 17, scope: !7790)
!7797 = !DILocation(line: 953, column: 31, scope: !7781)
!7798 = !DILocation(line: 953, column: 35, scope: !7781)
!7799 = !DILocation(line: 953, column: 13, scope: !7781)
!7800 = !DILocation(line: 954, column: 9, scope: !7781)
!7801 = !DILocation(line: 955, column: 5, scope: !7744)
!7802 = !DILocation(line: 956, column: 5, scope: !7690)
!7803 = !DILocation(line: 957, column: 1, scope: !7690)
!7804 = distinct !DISubprogram(name: "hls_encryption_start", scope: !939, file: !939, line: 645, type: !2332, isLocal: true, isDefinition: true, scopeLine: 646, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!7805 = !DILocalVariable(name: "s", arg: 1, scope: !7804, file: !939, line: 645, type: !2272)
!7806 = !DILocation(line: 645, column: 50, scope: !7804)
!7807 = !DILocalVariable(name: "hls", scope: !7804, file: !939, line: 647, type: !2338)
!7808 = !DILocation(line: 647, column: 17, scope: !7804)
!7809 = !DILocation(line: 647, column: 23, scope: !7804)
!7810 = !DILocation(line: 647, column: 26, scope: !7804)
!7811 = !DILocalVariable(name: "ret", scope: !7804, file: !939, line: 648, type: !981)
!7812 = !DILocation(line: 648, column: 9, scope: !7804)
!7813 = !DILocalVariable(name: "pb", scope: !7804, file: !939, line: 649, type: !1240)
!7814 = !DILocation(line: 649, column: 18, scope: !7804)
!7815 = !DILocalVariable(name: "key", scope: !7804, file: !939, line: 650, type: !7816)
!7816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1188, size: 128, align: 8, elements: !7817)
!7817 = !{!7818}
!7818 = !DISubrange(count: 16)
!7819 = !DILocation(line: 650, column: 13, scope: !7804)
!7820 = !DILocation(line: 652, column: 16, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7804, file: !939, line: 652, column: 9)
!7822 = !DILocation(line: 652, column: 19, scope: !7821)
!7823 = !DILocation(line: 652, column: 27, scope: !7821)
!7824 = !DILocation(line: 652, column: 35, scope: !7821)
!7825 = !DILocation(line: 652, column: 40, scope: !7821)
!7826 = !DILocation(line: 652, column: 14, scope: !7821)
!7827 = !DILocation(line: 652, column: 77, scope: !7821)
!7828 = !DILocation(line: 652, column: 9, scope: !7804)
!7829 = !DILocation(line: 653, column: 16, scope: !7830)
!7830 = distinct !DILexicalBlock(scope: !7821, file: !939, line: 652, column: 82)
!7831 = !DILocation(line: 654, column: 53, scope: !7830)
!7832 = !DILocation(line: 654, column: 58, scope: !7830)
!7833 = !DILocation(line: 653, column: 9, scope: !7830)
!7834 = !DILocation(line: 655, column: 16, scope: !7830)
!7835 = !DILocation(line: 655, column: 9, scope: !7830)
!7836 = !DILocation(line: 658, column: 17, scope: !7804)
!7837 = !DILocation(line: 658, column: 21, scope: !7804)
!7838 = !DILocation(line: 658, column: 26, scope: !7804)
!7839 = !DILocation(line: 658, column: 5, scope: !7804)
!7840 = !DILocation(line: 659, column: 26, scope: !7804)
!7841 = !DILocation(line: 659, column: 31, scope: !7804)
!7842 = !DILocation(line: 659, column: 18, scope: !7804)
!7843 = !DILocation(line: 659, column: 5, scope: !7804)
!7844 = !DILocation(line: 659, column: 10, scope: !7804)
!7845 = !DILocation(line: 659, column: 49, scope: !7804)
!7846 = !DILocation(line: 661, column: 17, scope: !7804)
!7847 = !DILocation(line: 661, column: 21, scope: !7804)
!7848 = !DILocation(line: 661, column: 26, scope: !7804)
!7849 = !DILocation(line: 661, column: 5, scope: !7804)
!7850 = !DILocation(line: 662, column: 27, scope: !7804)
!7851 = !DILocation(line: 662, column: 32, scope: !7804)
!7852 = !DILocation(line: 662, column: 19, scope: !7804)
!7853 = !DILocation(line: 662, column: 5, scope: !7804)
!7854 = !DILocation(line: 662, column: 10, scope: !7804)
!7855 = !DILocation(line: 662, column: 51, scope: !7804)
!7856 = !DILocation(line: 664, column: 17, scope: !7804)
!7857 = !DILocation(line: 664, column: 21, scope: !7804)
!7858 = !DILocation(line: 664, column: 26, scope: !7804)
!7859 = !DILocation(line: 664, column: 5, scope: !7804)
!7860 = !DILocation(line: 665, column: 28, scope: !7804)
!7861 = !DILocation(line: 665, column: 33, scope: !7804)
!7862 = !DILocation(line: 665, column: 20, scope: !7804)
!7863 = !DILocation(line: 665, column: 5, scope: !7804)
!7864 = !DILocation(line: 665, column: 10, scope: !7804)
!7865 = !DILocation(line: 665, column: 53, scope: !7804)
!7866 = !DILocation(line: 667, column: 24, scope: !7804)
!7867 = !DILocation(line: 667, column: 5, scope: !7804)
!7868 = !DILocation(line: 669, column: 11, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7804, file: !939, line: 669, column: 9)
!7870 = !DILocation(line: 669, column: 16, scope: !7869)
!7871 = !DILocation(line: 669, column: 10, scope: !7869)
!7872 = !DILocation(line: 669, column: 9, scope: !7804)
!7873 = !DILocation(line: 670, column: 16, scope: !7874)
!7874 = distinct !DILexicalBlock(scope: !7869, file: !939, line: 669, column: 25)
!7875 = !DILocation(line: 670, column: 9, scope: !7874)
!7876 = !DILocation(line: 671, column: 9, scope: !7874)
!7877 = !DILocation(line: 674, column: 11, scope: !7878)
!7878 = distinct !DILexicalBlock(scope: !7804, file: !939, line: 674, column: 9)
!7879 = !DILocation(line: 674, column: 16, scope: !7878)
!7880 = !DILocation(line: 674, column: 10, scope: !7878)
!7881 = !DILocation(line: 674, column: 9, scope: !7804)
!7882 = !DILocation(line: 675, column: 16, scope: !7883)
!7883 = distinct !DILexicalBlock(scope: !7878, file: !939, line: 674, column: 26)
!7884 = !DILocation(line: 675, column: 9, scope: !7883)
!7885 = !DILocation(line: 676, column: 9, scope: !7883)
!7886 = !DILocation(line: 679, column: 16, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7804, file: !939, line: 679, column: 9)
!7888 = !DILocation(line: 679, column: 19, scope: !7887)
!7889 = !DILocation(line: 679, column: 27, scope: !7887)
!7890 = !DILocation(line: 679, column: 35, scope: !7887)
!7891 = !DILocation(line: 679, column: 40, scope: !7887)
!7892 = !DILocation(line: 679, column: 14, scope: !7887)
!7893 = !DILocation(line: 679, column: 72, scope: !7887)
!7894 = !DILocation(line: 679, column: 9, scope: !7804)
!7895 = !DILocation(line: 680, column: 16, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7887, file: !939, line: 679, column: 77)
!7897 = !DILocation(line: 680, column: 56, scope: !7896)
!7898 = !DILocation(line: 680, column: 61, scope: !7896)
!7899 = !DILocation(line: 680, column: 9, scope: !7896)
!7900 = !DILocation(line: 681, column: 16, scope: !7896)
!7901 = !DILocation(line: 681, column: 9, scope: !7896)
!7902 = !DILocation(line: 684, column: 21, scope: !7804)
!7903 = !DILocation(line: 684, column: 25, scope: !7804)
!7904 = !DILocation(line: 684, column: 11, scope: !7804)
!7905 = !DILocation(line: 684, column: 9, scope: !7804)
!7906 = !DILocation(line: 685, column: 24, scope: !7804)
!7907 = !DILocation(line: 685, column: 5, scope: !7804)
!7908 = !DILocation(line: 686, column: 9, scope: !7909)
!7909 = distinct !DILexicalBlock(scope: !7804, file: !939, line: 686, column: 9)
!7910 = !DILocation(line: 686, column: 13, scope: !7909)
!7911 = !DILocation(line: 686, column: 9, scope: !7804)
!7912 = !DILocation(line: 687, column: 16, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7909, file: !939, line: 686, column: 29)
!7914 = !DILocation(line: 687, column: 56, scope: !7913)
!7915 = !DILocation(line: 687, column: 61, scope: !7913)
!7916 = !DILocation(line: 687, column: 9, scope: !7913)
!7917 = !DILocation(line: 688, column: 13, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7913, file: !939, line: 688, column: 13)
!7919 = !DILocation(line: 688, column: 17, scope: !7918)
!7920 = !DILocation(line: 688, column: 22, scope: !7918)
!7921 = !DILocation(line: 688, column: 25, scope: !7922)
!7922 = !DILexicalBlockFile(scope: !7918, file: !939, discriminator: 1)
!7923 = !DILocation(line: 688, column: 29, scope: !7922)
!7924 = !DILocation(line: 688, column: 13, scope: !7922)
!7925 = !DILocation(line: 689, column: 17, scope: !7918)
!7926 = !DILocation(line: 689, column: 13, scope: !7918)
!7927 = !DILocation(line: 690, column: 16, scope: !7913)
!7928 = !DILocation(line: 690, column: 9, scope: !7913)
!7929 = !DILocation(line: 692, column: 20, scope: !7804)
!7930 = !DILocation(line: 692, column: 25, scope: !7804)
!7931 = !DILocation(line: 692, column: 37, scope: !7804)
!7932 = !DILocation(line: 692, column: 5, scope: !7804)
!7933 = !DILocation(line: 694, column: 5, scope: !7804)
!7934 = !DILocation(line: 695, column: 1, scope: !7804)
!7935 = distinct !DISubprogram(name: "do_encrypt", scope: !939, file: !939, line: 576, type: !5830, isLocal: true, isDefinition: true, scopeLine: 577, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!7936 = !DILocalVariable(name: "s", arg: 1, scope: !7935, file: !939, line: 576, type: !2272)
!7937 = !DILocation(line: 576, column: 40, scope: !7935)
!7938 = !DILocalVariable(name: "vs", arg: 2, scope: !7935, file: !939, line: 576, type: !2274)
!7939 = !DILocation(line: 576, column: 58, scope: !7935)
!7940 = !DILocalVariable(name: "hls", scope: !7935, file: !939, line: 578, type: !2338)
!7941 = !DILocation(line: 578, column: 17, scope: !7935)
!7942 = !DILocation(line: 578, column: 23, scope: !7935)
!7943 = !DILocation(line: 578, column: 26, scope: !7935)
!7944 = !DILocalVariable(name: "ret", scope: !7935, file: !939, line: 579, type: !981)
!7945 = !DILocation(line: 579, column: 9, scope: !7935)
!7946 = !DILocalVariable(name: "len", scope: !7935, file: !939, line: 580, type: !981)
!7947 = !DILocation(line: 580, column: 9, scope: !7935)
!7948 = !DILocalVariable(name: "pb", scope: !7935, file: !939, line: 581, type: !1240)
!7949 = !DILocation(line: 581, column: 18, scope: !7935)
!7950 = !DILocalVariable(name: "key", scope: !7935, file: !939, line: 582, type: !7816)
!7951 = !DILocation(line: 582, column: 13, scope: !7935)
!7952 = !DILocation(line: 584, column: 18, scope: !7935)
!7953 = !DILocation(line: 584, column: 21, scope: !7935)
!7954 = !DILocation(line: 584, column: 11, scope: !7935)
!7955 = !DILocation(line: 584, column: 26, scope: !7935)
!7956 = !DILocation(line: 584, column: 30, scope: !7935)
!7957 = !DILocation(line: 584, column: 9, scope: !7935)
!7958 = !DILocation(line: 585, column: 36, scope: !7935)
!7959 = !DILocation(line: 585, column: 25, scope: !7935)
!7960 = !DILocation(line: 585, column: 5, scope: !7935)
!7961 = !DILocation(line: 585, column: 10, scope: !7935)
!7962 = !DILocation(line: 585, column: 23, scope: !7935)
!7963 = !DILocation(line: 586, column: 10, scope: !7964)
!7964 = distinct !DILexicalBlock(scope: !7935, file: !939, line: 586, column: 9)
!7965 = !DILocation(line: 586, column: 15, scope: !7964)
!7966 = !DILocation(line: 586, column: 9, scope: !7935)
!7967 = !DILocation(line: 587, column: 9, scope: !7964)
!7968 = !DILocation(line: 589, column: 16, scope: !7935)
!7969 = !DILocation(line: 589, column: 21, scope: !7935)
!7970 = !DILocation(line: 589, column: 35, scope: !7935)
!7971 = !DILocation(line: 589, column: 38, scope: !7935)
!7972 = !DILocation(line: 589, column: 43, scope: !7935)
!7973 = !DILocation(line: 589, column: 5, scope: !7935)
!7974 = !DILocation(line: 590, column: 16, scope: !7935)
!7975 = !DILocation(line: 590, column: 21, scope: !7935)
!7976 = !DILocation(line: 590, column: 43, scope: !7935)
!7977 = !DILocation(line: 590, column: 5, scope: !7935)
!7978 = !DILocation(line: 592, column: 9, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7935, file: !939, line: 592, column: 9)
!7980 = !DILocation(line: 592, column: 14, scope: !7979)
!7981 = !DILocation(line: 592, column: 9, scope: !7935)
!7982 = !DILocation(line: 593, column: 20, scope: !7983)
!7983 = distinct !DILexicalBlock(scope: !7979, file: !939, line: 592, column: 23)
!7984 = !DILocation(line: 593, column: 25, scope: !7983)
!7985 = !DILocation(line: 593, column: 35, scope: !7983)
!7986 = !DILocation(line: 593, column: 40, scope: !7983)
!7987 = !DILocation(line: 593, column: 9, scope: !7983)
!7988 = !DILocation(line: 594, column: 20, scope: !7983)
!7989 = !DILocation(line: 594, column: 25, scope: !7983)
!7990 = !DILocation(line: 594, column: 34, scope: !7983)
!7991 = !DILocation(line: 594, column: 39, scope: !7983)
!7992 = !DILocation(line: 594, column: 9, scope: !7983)
!7993 = !DILocation(line: 595, column: 5, scope: !7983)
!7994 = !DILocation(line: 596, column: 20, scope: !7995)
!7995 = distinct !DILexicalBlock(scope: !7979, file: !939, line: 595, column: 12)
!7996 = !DILocation(line: 596, column: 25, scope: !7995)
!7997 = !DILocation(line: 596, column: 35, scope: !7995)
!7998 = !DILocation(line: 596, column: 40, scope: !7995)
!7999 = !DILocation(line: 596, column: 9, scope: !7995)
!8000 = !DILocation(line: 597, column: 20, scope: !7995)
!8001 = !DILocation(line: 597, column: 25, scope: !7995)
!8002 = !DILocation(line: 597, column: 34, scope: !7995)
!8003 = !DILocation(line: 597, column: 39, scope: !7995)
!8004 = !DILocation(line: 597, column: 9, scope: !7995)
!8005 = !DILocation(line: 600, column: 11, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !7935, file: !939, line: 600, column: 9)
!8007 = !DILocation(line: 600, column: 16, scope: !8006)
!8008 = !DILocation(line: 600, column: 10, scope: !8006)
!8009 = !DILocation(line: 600, column: 9, scope: !7935)
!8010 = !DILocalVariable(name: "iv", scope: !8011, file: !939, line: 601, type: !7816)
!8011 = distinct !DILexicalBlock(scope: !8006, file: !939, line: 600, column: 27)
!8012 = !DILocation(line: 601, column: 17, scope: !8011)
!8013 = !DILocalVariable(name: "buf", scope: !8011, file: !939, line: 602, type: !1003)
!8014 = !DILocation(line: 602, column: 14, scope: !8011)
!8015 = !DILocation(line: 604, column: 14, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !8011, file: !939, line: 604, column: 13)
!8017 = !DILocation(line: 604, column: 19, scope: !8016)
!8018 = !DILocation(line: 604, column: 13, scope: !8011)
!8019 = !DILocation(line: 605, column: 67, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !8016, file: !939, line: 604, column: 23)
!8021 = !DILocation(line: 605, column: 71, scope: !8020)
!8022 = !DILocation(line: 605, column: 56, scope: !8020)
!8023 = !DILocation(line: 605, column: 40, scope: !8020)
!8024 = !DILocation(line: 605, column: 43, scope: !8020)
!8025 = !DILocation(line: 605, column: 50, scope: !8020)
!8026 = !DILocation(line: 605, column: 53, scope: !8020)
!8027 = !DILocation(line: 606, column: 9, scope: !8020)
!8028 = !DILocation(line: 607, column: 13, scope: !8029)
!8029 = distinct !DILexicalBlock(scope: !8016, file: !939, line: 606, column: 16)
!8030 = !DILocation(line: 607, column: 24, scope: !8029)
!8031 = !DILocation(line: 607, column: 29, scope: !8029)
!8032 = !DILocation(line: 609, column: 24, scope: !8011)
!8033 = !DILocation(line: 609, column: 29, scope: !8011)
!8034 = !DILocation(line: 609, column: 9, scope: !8011)
!8035 = !DILocation(line: 610, column: 9, scope: !8011)
!8036 = !DILocation(line: 610, column: 17, scope: !8011)
!8037 = !DILocation(line: 611, column: 16, scope: !8011)
!8038 = !DILocation(line: 611, column: 21, scope: !8011)
!8039 = !DILocation(line: 611, column: 9, scope: !8011)
!8040 = !DILocation(line: 612, column: 5, scope: !8011)
!8041 = !DILocation(line: 614, column: 11, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !7935, file: !939, line: 614, column: 9)
!8043 = !DILocation(line: 614, column: 16, scope: !8042)
!8044 = !DILocation(line: 614, column: 10, scope: !8042)
!8045 = !DILocation(line: 614, column: 9, scope: !7935)
!8046 = !DILocation(line: 615, column: 16, scope: !8047)
!8047 = distinct !DILexicalBlock(scope: !8042, file: !939, line: 614, column: 25)
!8048 = !DILocation(line: 615, column: 9, scope: !8047)
!8049 = !DILocation(line: 616, column: 9, scope: !8047)
!8050 = !DILocation(line: 619, column: 11, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !7935, file: !939, line: 619, column: 9)
!8052 = !DILocation(line: 619, column: 16, scope: !8051)
!8053 = !DILocation(line: 619, column: 10, scope: !8051)
!8054 = !DILocation(line: 619, column: 9, scope: !7935)
!8055 = !DILocation(line: 620, column: 16, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !8051, file: !939, line: 619, column: 26)
!8057 = !DILocation(line: 620, column: 9, scope: !8056)
!8058 = !DILocation(line: 621, column: 9, scope: !8056)
!8059 = !DILocation(line: 624, column: 11, scope: !8060)
!8060 = distinct !DILexicalBlock(scope: !7935, file: !939, line: 624, column: 9)
!8061 = !DILocation(line: 624, column: 16, scope: !8060)
!8062 = !DILocation(line: 624, column: 10, scope: !8060)
!8063 = !DILocation(line: 624, column: 9, scope: !7935)
!8064 = !DILocation(line: 625, column: 14, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8066, file: !939, line: 625, column: 13)
!8066 = distinct !DILexicalBlock(scope: !8060, file: !939, line: 624, column: 28)
!8067 = !DILocation(line: 625, column: 19, scope: !8065)
!8068 = !DILocation(line: 625, column: 13, scope: !8066)
!8069 = !DILocation(line: 626, column: 34, scope: !8070)
!8070 = distinct !DILexicalBlock(scope: !8071, file: !939, line: 626, column: 17)
!8071 = distinct !DILexicalBlock(scope: !8065, file: !939, line: 625, column: 24)
!8072 = !DILocation(line: 626, column: 24, scope: !8070)
!8073 = !DILocation(line: 626, column: 22, scope: !8070)
!8074 = !DILocation(line: 626, column: 53, scope: !8070)
!8075 = !DILocation(line: 626, column: 17, scope: !8071)
!8076 = !DILocation(line: 627, column: 24, scope: !8077)
!8077 = distinct !DILexicalBlock(scope: !8070, file: !939, line: 626, column: 58)
!8078 = !DILocation(line: 627, column: 17, scope: !8077)
!8079 = !DILocation(line: 628, column: 24, scope: !8077)
!8080 = !DILocation(line: 628, column: 17, scope: !8077)
!8081 = !DILocation(line: 630, column: 9, scope: !8071)
!8082 = !DILocation(line: 631, column: 13, scope: !8083)
!8083 = distinct !DILexicalBlock(scope: !8065, file: !939, line: 630, column: 16)
!8084 = !DILocation(line: 631, column: 25, scope: !8083)
!8085 = !DILocation(line: 631, column: 30, scope: !8083)
!8086 = !DILocation(line: 634, column: 24, scope: !8066)
!8087 = !DILocation(line: 634, column: 29, scope: !8066)
!8088 = !DILocation(line: 634, column: 41, scope: !8066)
!8089 = !DILocation(line: 634, column: 9, scope: !8066)
!8090 = !DILocation(line: 635, column: 20, scope: !8091)
!8091 = distinct !DILexicalBlock(scope: !8066, file: !939, line: 635, column: 13)
!8092 = !DILocation(line: 635, column: 23, scope: !8091)
!8093 = !DILocation(line: 635, column: 31, scope: !8091)
!8094 = !DILocation(line: 635, column: 39, scope: !8091)
!8095 = !DILocation(line: 635, column: 44, scope: !8091)
!8096 = !DILocation(line: 635, column: 18, scope: !8091)
!8097 = !DILocation(line: 635, column: 77, scope: !8091)
!8098 = !DILocation(line: 635, column: 13, scope: !8066)
!8099 = !DILocation(line: 636, column: 20, scope: !8091)
!8100 = !DILocation(line: 636, column: 13, scope: !8091)
!8101 = !DILocation(line: 637, column: 19, scope: !8066)
!8102 = !DILocation(line: 637, column: 9, scope: !8066)
!8103 = !DILocation(line: 638, column: 20, scope: !8066)
!8104 = !DILocation(line: 638, column: 24, scope: !8066)
!8105 = !DILocation(line: 638, column: 9, scope: !8066)
!8106 = !DILocation(line: 639, column: 20, scope: !8066)
!8107 = !DILocation(line: 639, column: 9, scope: !8066)
!8108 = !DILocation(line: 640, column: 5, scope: !8066)
!8109 = !DILocation(line: 641, column: 5, scope: !7935)
!8110 = !DILocation(line: 642, column: 1, scope: !7935)
!8111 = distinct !DISubprogram(name: "av_bswap64", scope: !8112, file: !8112, line: 73, type: !8113, isLocal: true, isDefinition: true, scopeLine: 74, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!8112 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!8113 = !DISubroutineType(types: !8114)
!8114 = !{!1014, !1014}
!8115 = !DILocalVariable(name: "x", arg: 1, scope: !8116, file: !8112, line: 66, type: !1393)
!8116 = distinct !DISubprogram(name: "av_bswap32", scope: !8112, file: !8112, line: 66, type: !8117, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!8117 = !DISubroutineType(types: !8118)
!8118 = !{!1393, !1393}
!8119 = !DILocation(line: 66, column: 98, scope: !8116, inlinedAt: !8120)
!8120 = distinct !DILocation(line: 75, column: 44, scope: !8121)
!8121 = !DILexicalBlockFile(scope: !8111, file: !8112, discriminator: 1)
!8122 = !DILocation(line: 66, column: 98, scope: !8116, inlinedAt: !8123)
!8123 = distinct !DILocation(line: 75, column: 22, scope: !8111)
!8124 = !DILocalVariable(name: "x", arg: 1, scope: !8111, file: !8112, line: 73, type: !1014)
!8125 = !DILocation(line: 73, column: 67, scope: !8111)
!8126 = !DILocation(line: 75, column: 33, scope: !8111)
!8127 = !DILocation(line: 75, column: 22, scope: !8111)
!8128 = !DILocation(line: 68, column: 16, scope: !8116, inlinedAt: !8123)
!8129 = !DILocation(line: 68, column: 19, scope: !8116, inlinedAt: !8123)
!8130 = !DILocation(line: 68, column: 24, scope: !8116, inlinedAt: !8123)
!8131 = !DILocation(line: 68, column: 38, scope: !8116, inlinedAt: !8123)
!8132 = !DILocation(line: 68, column: 41, scope: !8116, inlinedAt: !8123)
!8133 = !DILocation(line: 68, column: 46, scope: !8116, inlinedAt: !8123)
!8134 = !DILocation(line: 68, column: 34, scope: !8116, inlinedAt: !8123)
!8135 = !DILocation(line: 68, column: 57, scope: !8116, inlinedAt: !8123)
!8136 = !DILocation(line: 68, column: 69, scope: !8116, inlinedAt: !8123)
!8137 = !DILocation(line: 68, column: 72, scope: !8116, inlinedAt: !8123)
!8138 = !DILocation(line: 68, column: 79, scope: !8116, inlinedAt: !8123)
!8139 = !DILocation(line: 68, column: 84, scope: !8116, inlinedAt: !8123)
!8140 = !DILocation(line: 68, column: 99, scope: !8116, inlinedAt: !8123)
!8141 = !DILocation(line: 68, column: 102, scope: !8116, inlinedAt: !8123)
!8142 = !DILocation(line: 68, column: 109, scope: !8116, inlinedAt: !8123)
!8143 = !DILocation(line: 68, column: 114, scope: !8116, inlinedAt: !8123)
!8144 = !DILocation(line: 68, column: 94, scope: !8116, inlinedAt: !8123)
!8145 = !DILocation(line: 68, column: 63, scope: !8116, inlinedAt: !8123)
!8146 = !DILocation(line: 75, column: 12, scope: !8111)
!8147 = !DILocation(line: 75, column: 36, scope: !8111)
!8148 = !DILocation(line: 75, column: 55, scope: !8111)
!8149 = !DILocation(line: 75, column: 57, scope: !8111)
!8150 = !DILocation(line: 75, column: 44, scope: !8121)
!8151 = !DILocation(line: 68, column: 16, scope: !8116, inlinedAt: !8120)
!8152 = !DILocation(line: 68, column: 19, scope: !8116, inlinedAt: !8120)
!8153 = !DILocation(line: 68, column: 24, scope: !8116, inlinedAt: !8120)
!8154 = !DILocation(line: 68, column: 38, scope: !8116, inlinedAt: !8120)
!8155 = !DILocation(line: 68, column: 41, scope: !8116, inlinedAt: !8120)
!8156 = !DILocation(line: 68, column: 46, scope: !8116, inlinedAt: !8120)
!8157 = !DILocation(line: 68, column: 34, scope: !8116, inlinedAt: !8120)
!8158 = !DILocation(line: 68, column: 57, scope: !8116, inlinedAt: !8120)
!8159 = !DILocation(line: 68, column: 69, scope: !8116, inlinedAt: !8120)
!8160 = !DILocation(line: 68, column: 72, scope: !8116, inlinedAt: !8120)
!8161 = !DILocation(line: 68, column: 79, scope: !8116, inlinedAt: !8120)
!8162 = !DILocation(line: 68, column: 84, scope: !8116, inlinedAt: !8120)
!8163 = !DILocation(line: 68, column: 99, scope: !8116, inlinedAt: !8120)
!8164 = !DILocation(line: 68, column: 102, scope: !8116, inlinedAt: !8120)
!8165 = !DILocation(line: 68, column: 109, scope: !8116, inlinedAt: !8120)
!8166 = !DILocation(line: 68, column: 114, scope: !8116, inlinedAt: !8120)
!8167 = !DILocation(line: 68, column: 94, scope: !8116, inlinedAt: !8120)
!8168 = !DILocation(line: 68, column: 63, scope: !8116, inlinedAt: !8120)
!8169 = !DILocation(line: 75, column: 44, scope: !8111)
!8170 = !DILocation(line: 75, column: 42, scope: !8111)
!8171 = !DILocation(line: 75, column: 5, scope: !8111)
!8172 = distinct !DISubprogram(name: "randomize", scope: !939, file: !939, line: 562, type: !8173, isLocal: true, isDefinition: true, scopeLine: 563, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!8173 = !DISubroutineType(types: !8174)
!8174 = !{!981, !1187, !981}
!8175 = !DILocalVariable(name: "buf", arg: 1, scope: !8172, file: !939, line: 562, type: !1187)
!8176 = !DILocation(line: 562, column: 31, scope: !8172)
!8177 = !DILocalVariable(name: "len", arg: 2, scope: !8172, file: !939, line: 562, type: !981)
!8178 = !DILocation(line: 562, column: 40, scope: !8172)
!8179 = !DILocation(line: 571, column: 5, scope: !8172)
!8180 = distinct !DISubprogram(name: "create_master_playlist", scope: !939, file: !939, line: 1197, type: !8181, isLocal: true, isDefinition: true, scopeLine: 1199, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!8181 = !DISubroutineType(types: !8182)
!8182 = !{!981, !2272, !8183}
!8183 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2274)
!8184 = !DILocalVariable(name: "s", arg: 1, scope: !8180, file: !939, line: 1197, type: !2272)
!8185 = !DILocation(line: 1197, column: 52, scope: !8180)
!8186 = !DILocalVariable(name: "input_vs", arg: 2, scope: !8180, file: !939, line: 1198, type: !8183)
!8187 = !DILocation(line: 1198, column: 57, scope: !8180)
!8188 = !DILocalVariable(name: "hls", scope: !8180, file: !939, line: 1200, type: !2338)
!8189 = !DILocation(line: 1200, column: 17, scope: !8180)
!8190 = !DILocation(line: 1200, column: 23, scope: !8180)
!8191 = !DILocation(line: 1200, column: 26, scope: !8180)
!8192 = !DILocalVariable(name: "vs", scope: !8180, file: !939, line: 1201, type: !2274)
!8193 = !DILocation(line: 1201, column: 20, scope: !8180)
!8194 = !DILocalVariable(name: "temp_vs", scope: !8180, file: !939, line: 1201, type: !2274)
!8195 = !DILocation(line: 1201, column: 25, scope: !8180)
!8196 = !DILocalVariable(name: "vid_st", scope: !8180, file: !939, line: 1202, type: !1308)
!8197 = !DILocation(line: 1202, column: 15, scope: !8180)
!8198 = !DILocalVariable(name: "aud_st", scope: !8180, file: !939, line: 1202, type: !1308)
!8199 = !DILocation(line: 1202, column: 24, scope: !8180)
!8200 = !DILocalVariable(name: "options", scope: !8180, file: !939, line: 1203, type: !1479)
!8201 = !DILocation(line: 1203, column: 19, scope: !8180)
!8202 = !DILocalVariable(name: "i", scope: !8180, file: !939, line: 1204, type: !982)
!8203 = !DILocation(line: 1204, column: 18, scope: !8180)
!8204 = !DILocalVariable(name: "j", scope: !8180, file: !939, line: 1204, type: !982)
!8205 = !DILocation(line: 1204, column: 21, scope: !8180)
!8206 = !DILocalVariable(name: "m3u8_name_size", scope: !8180, file: !939, line: 1205, type: !981)
!8207 = !DILocation(line: 1205, column: 9, scope: !8180)
!8208 = !DILocalVariable(name: "ret", scope: !8180, file: !939, line: 1205, type: !981)
!8209 = !DILocation(line: 1205, column: 25, scope: !8180)
!8210 = !DILocalVariable(name: "bandwidth", scope: !8180, file: !939, line: 1205, type: !981)
!8211 = !DILocation(line: 1205, column: 30, scope: !8180)
!8212 = !DILocalVariable(name: "m3u8_rel_name", scope: !8180, file: !939, line: 1206, type: !1008)
!8213 = !DILocation(line: 1206, column: 11, scope: !8180)
!8214 = !DILocalVariable(name: "ccgroup", scope: !8180, file: !939, line: 1206, type: !1008)
!8215 = !DILocation(line: 1206, column: 27, scope: !8180)
!8216 = !DILocalVariable(name: "ccs", scope: !8180, file: !939, line: 1207, type: !2382)
!8217 = !DILocation(line: 1207, column: 27, scope: !8180)
!8218 = !DILocation(line: 1209, column: 5, scope: !8180)
!8219 = !DILocation(line: 1209, column: 15, scope: !8180)
!8220 = !DILocation(line: 1209, column: 28, scope: !8180)
!8221 = !DILocation(line: 1210, column: 10, scope: !8222)
!8222 = distinct !DILexicalBlock(scope: !8180, file: !939, line: 1210, column: 9)
!8223 = !DILocation(line: 1210, column: 15, scope: !8222)
!8224 = !DILocation(line: 1210, column: 9, scope: !8180)
!8225 = !DILocation(line: 1212, column: 16, scope: !8226)
!8226 = distinct !DILexicalBlock(scope: !8227, file: !939, line: 1212, column: 9)
!8227 = distinct !DILexicalBlock(scope: !8222, file: !939, line: 1210, column: 36)
!8228 = !DILocation(line: 1212, column: 14, scope: !8226)
!8229 = !DILocation(line: 1212, column: 21, scope: !8230)
!8230 = !DILexicalBlockFile(scope: !8231, file: !939, discriminator: 1)
!8231 = distinct !DILexicalBlock(scope: !8226, file: !939, line: 1212, column: 9)
!8232 = !DILocation(line: 1212, column: 25, scope: !8230)
!8233 = !DILocation(line: 1212, column: 30, scope: !8230)
!8234 = !DILocation(line: 1212, column: 23, scope: !8230)
!8235 = !DILocation(line: 1212, column: 9, scope: !8230)
!8236 = !DILocation(line: 1213, column: 35, scope: !8237)
!8237 = distinct !DILexicalBlock(scope: !8231, file: !939, line: 1213, column: 17)
!8238 = !DILocation(line: 1213, column: 18, scope: !8237)
!8239 = !DILocation(line: 1213, column: 23, scope: !8237)
!8240 = !DILocation(line: 1213, column: 38, scope: !8237)
!8241 = !DILocation(line: 1213, column: 17, scope: !8231)
!8242 = !DILocation(line: 1214, column: 17, scope: !8237)
!8243 = !DILocation(line: 1213, column: 38, scope: !8244)
!8244 = !DILexicalBlockFile(scope: !8237, file: !939, discriminator: 1)
!8245 = !DILocation(line: 1212, column: 46, scope: !8246)
!8246 = !DILexicalBlockFile(scope: !8231, file: !939, discriminator: 2)
!8247 = !DILocation(line: 1212, column: 9, scope: !8246)
!8248 = distinct !{!8248, !8249}
!8249 = !DILocation(line: 1212, column: 9, scope: !8227)
!8250 = !DILocation(line: 1215, column: 5, scope: !8227)
!8251 = !DILocation(line: 1217, column: 14, scope: !8252)
!8252 = distinct !DILexicalBlock(scope: !8253, file: !939, line: 1217, column: 13)
!8253 = distinct !DILexicalBlock(scope: !8222, file: !939, line: 1215, column: 12)
!8254 = !DILocation(line: 1217, column: 19, scope: !8252)
!8255 = !DILocation(line: 1217, column: 37, scope: !8252)
!8256 = !DILocation(line: 1217, column: 34, scope: !8252)
!8257 = !DILocation(line: 1217, column: 46, scope: !8252)
!8258 = !DILocation(line: 1217, column: 50, scope: !8259)
!8259 = !DILexicalBlockFile(scope: !8252, file: !939, discriminator: 1)
!8260 = !DILocation(line: 1217, column: 55, scope: !8259)
!8261 = !DILocation(line: 1217, column: 75, scope: !8259)
!8262 = !DILocation(line: 1218, column: 13, scope: !8252)
!8263 = !DILocation(line: 1218, column: 23, scope: !8252)
!8264 = !DILocation(line: 1218, column: 32, scope: !8252)
!8265 = !DILocation(line: 1218, column: 37, scope: !8252)
!8266 = !DILocation(line: 1218, column: 30, scope: !8252)
!8267 = !DILocation(line: 1217, column: 13, scope: !8268)
!8268 = !DILexicalBlockFile(scope: !8253, file: !939, discriminator: 2)
!8269 = !DILocation(line: 1219, column: 13, scope: !8252)
!8270 = !DILocation(line: 1222, column: 22, scope: !8180)
!8271 = !DILocation(line: 1222, column: 35, scope: !8180)
!8272 = !DILocation(line: 1222, column: 5, scope: !8180)
!8273 = !DILocation(line: 1224, column: 26, scope: !8180)
!8274 = !DILocation(line: 1224, column: 30, scope: !8180)
!8275 = !DILocation(line: 1224, column: 35, scope: !8180)
!8276 = !DILocation(line: 1224, column: 45, scope: !8180)
!8277 = !DILocation(line: 1224, column: 50, scope: !8180)
!8278 = !DILocation(line: 1224, column: 11, scope: !8180)
!8279 = !DILocation(line: 1224, column: 9, scope: !8180)
!8280 = !DILocation(line: 1225, column: 5, scope: !8180)
!8281 = !DILocation(line: 1226, column: 9, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !8180, file: !939, line: 1226, column: 9)
!8283 = !DILocation(line: 1226, column: 13, scope: !8282)
!8284 = !DILocation(line: 1226, column: 9, scope: !8180)
!8285 = !DILocation(line: 1228, column: 17, scope: !8286)
!8286 = distinct !DILexicalBlock(scope: !8282, file: !939, line: 1226, column: 18)
!8287 = !DILocation(line: 1228, column: 22, scope: !8286)
!8288 = !DILocation(line: 1227, column: 9, scope: !8286)
!8289 = !DILocation(line: 1229, column: 9, scope: !8286)
!8290 = !DILocation(line: 1232, column: 35, scope: !8180)
!8291 = !DILocation(line: 1232, column: 40, scope: !8180)
!8292 = !DILocation(line: 1232, column: 50, scope: !8180)
!8293 = !DILocation(line: 1232, column: 55, scope: !8180)
!8294 = !DILocation(line: 1232, column: 5, scope: !8180)
!8295 = !DILocation(line: 1234, column: 12, scope: !8296)
!8296 = distinct !DILexicalBlock(scope: !8180, file: !939, line: 1234, column: 5)
!8297 = !DILocation(line: 1234, column: 10, scope: !8296)
!8298 = !DILocation(line: 1234, column: 17, scope: !8299)
!8299 = !DILexicalBlockFile(scope: !8300, file: !939, discriminator: 1)
!8300 = distinct !DILexicalBlock(scope: !8296, file: !939, line: 1234, column: 5)
!8301 = !DILocation(line: 1234, column: 21, scope: !8299)
!8302 = !DILocation(line: 1234, column: 26, scope: !8299)
!8303 = !DILocation(line: 1234, column: 19, scope: !8299)
!8304 = !DILocation(line: 1234, column: 5, scope: !8299)
!8305 = !DILocation(line: 1235, column: 33, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8300, file: !939, line: 1234, column: 45)
!8307 = !DILocation(line: 1235, column: 17, scope: !8306)
!8308 = !DILocation(line: 1235, column: 22, scope: !8306)
!8309 = !DILocation(line: 1235, column: 13, scope: !8306)
!8310 = !DILocation(line: 1236, column: 21, scope: !8306)
!8311 = !DILocation(line: 1236, column: 26, scope: !8306)
!8312 = !DILocation(line: 1236, column: 9, scope: !8306)
!8313 = !DILocation(line: 1237, column: 21, scope: !8306)
!8314 = !DILocation(line: 1237, column: 26, scope: !8306)
!8315 = !DILocation(line: 1237, column: 56, scope: !8306)
!8316 = !DILocation(line: 1237, column: 61, scope: !8306)
!8317 = !DILocation(line: 1237, column: 9, scope: !8306)
!8318 = !DILocation(line: 1238, column: 21, scope: !8306)
!8319 = !DILocation(line: 1238, column: 26, scope: !8306)
!8320 = !DILocation(line: 1238, column: 52, scope: !8306)
!8321 = !DILocation(line: 1238, column: 57, scope: !8306)
!8322 = !DILocation(line: 1238, column: 9, scope: !8306)
!8323 = !DILocation(line: 1239, column: 13, scope: !8324)
!8324 = distinct !DILexicalBlock(scope: !8306, file: !939, line: 1239, column: 13)
!8325 = !DILocation(line: 1239, column: 18, scope: !8324)
!8326 = !DILocation(line: 1239, column: 13, scope: !8306)
!8327 = !DILocation(line: 1240, column: 25, scope: !8324)
!8328 = !DILocation(line: 1240, column: 30, scope: !8324)
!8329 = !DILocation(line: 1240, column: 60, scope: !8324)
!8330 = !DILocation(line: 1240, column: 65, scope: !8324)
!8331 = !DILocation(line: 1240, column: 13, scope: !8324)
!8332 = !DILocation(line: 1241, column: 21, scope: !8306)
!8333 = !DILocation(line: 1241, column: 26, scope: !8306)
!8334 = !DILocation(line: 1241, column: 61, scope: !8306)
!8335 = !DILocation(line: 1241, column: 66, scope: !8306)
!8336 = !DILocation(line: 1241, column: 9, scope: !8306)
!8337 = !DILocation(line: 1242, column: 5, scope: !8306)
!8338 = !DILocation(line: 1234, column: 41, scope: !8339)
!8339 = !DILexicalBlockFile(scope: !8300, file: !939, discriminator: 2)
!8340 = !DILocation(line: 1234, column: 5, scope: !8339)
!8341 = distinct !{!8341, !8342}
!8342 = !DILocation(line: 1234, column: 5, scope: !8180)
!8343 = !DILocation(line: 1245, column: 12, scope: !8344)
!8344 = distinct !DILexicalBlock(scope: !8180, file: !939, line: 1245, column: 5)
!8345 = !DILocation(line: 1245, column: 10, scope: !8344)
!8346 = !DILocation(line: 1245, column: 17, scope: !8347)
!8347 = !DILexicalBlockFile(scope: !8348, file: !939, discriminator: 1)
!8348 = distinct !DILexicalBlock(scope: !8344, file: !939, line: 1245, column: 5)
!8349 = !DILocation(line: 1245, column: 21, scope: !8347)
!8350 = !DILocation(line: 1245, column: 26, scope: !8347)
!8351 = !DILocation(line: 1245, column: 19, scope: !8347)
!8352 = !DILocation(line: 1245, column: 5, scope: !8347)
!8353 = !DILocation(line: 1246, column: 33, scope: !8354)
!8354 = distinct !DILexicalBlock(scope: !8348, file: !939, line: 1245, column: 46)
!8355 = !DILocation(line: 1246, column: 16, scope: !8354)
!8356 = !DILocation(line: 1246, column: 21, scope: !8354)
!8357 = !DILocation(line: 1246, column: 12, scope: !8354)
!8358 = !DILocation(line: 1248, column: 13, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8354, file: !939, line: 1248, column: 13)
!8360 = !DILocation(line: 1248, column: 17, scope: !8359)
!8361 = !DILocation(line: 1248, column: 27, scope: !8359)
!8362 = !DILocation(line: 1248, column: 30, scope: !8363)
!8363 = !DILexicalBlockFile(scope: !8359, file: !939, discriminator: 1)
!8364 = !DILocation(line: 1248, column: 34, scope: !8363)
!8365 = !DILocation(line: 1248, column: 47, scope: !8363)
!8366 = !DILocation(line: 1248, column: 51, scope: !8367)
!8367 = !DILexicalBlockFile(scope: !8359, file: !939, discriminator: 2)
!8368 = !DILocation(line: 1248, column: 55, scope: !8367)
!8369 = !DILocation(line: 1248, column: 13, scope: !8367)
!8370 = !DILocation(line: 1249, column: 13, scope: !8359)
!8371 = !DILocation(line: 1251, column: 33, scope: !8354)
!8372 = !DILocation(line: 1251, column: 37, scope: !8354)
!8373 = !DILocation(line: 1251, column: 26, scope: !8354)
!8374 = !DILocation(line: 1251, column: 48, scope: !8354)
!8375 = !DILocation(line: 1251, column: 24, scope: !8354)
!8376 = !DILocation(line: 1252, column: 35, scope: !8354)
!8377 = !DILocation(line: 1252, column: 25, scope: !8354)
!8378 = !DILocation(line: 1252, column: 23, scope: !8354)
!8379 = !DILocation(line: 1253, column: 14, scope: !8380)
!8380 = distinct !DILexicalBlock(scope: !8354, file: !939, line: 1253, column: 13)
!8381 = !DILocation(line: 1253, column: 13, scope: !8354)
!8382 = !DILocation(line: 1254, column: 17, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8380, file: !939, line: 1253, column: 29)
!8384 = !DILocation(line: 1255, column: 13, scope: !8383)
!8385 = !DILocation(line: 1257, column: 20, scope: !8354)
!8386 = !DILocation(line: 1257, column: 35, scope: !8354)
!8387 = !DILocation(line: 1257, column: 39, scope: !8354)
!8388 = !DILocation(line: 1257, column: 50, scope: !8354)
!8389 = !DILocation(line: 1257, column: 9, scope: !8354)
!8390 = !DILocation(line: 1258, column: 32, scope: !8354)
!8391 = !DILocation(line: 1258, column: 37, scope: !8354)
!8392 = !DILocation(line: 1258, column: 54, scope: !8354)
!8393 = !DILocation(line: 1258, column: 58, scope: !8354)
!8394 = !DILocation(line: 1259, column: 32, scope: !8354)
!8395 = !DILocation(line: 1259, column: 47, scope: !8354)
!8396 = !DILocation(line: 1258, column: 15, scope: !8354)
!8397 = !DILocation(line: 1258, column: 13, scope: !8354)
!8398 = !DILocation(line: 1260, column: 13, scope: !8399)
!8399 = distinct !DILexicalBlock(scope: !8354, file: !939, line: 1260, column: 13)
!8400 = !DILocation(line: 1260, column: 17, scope: !8399)
!8401 = !DILocation(line: 1260, column: 13, scope: !8354)
!8402 = !DILocation(line: 1261, column: 20, scope: !8403)
!8403 = distinct !DILexicalBlock(scope: !8399, file: !939, line: 1260, column: 22)
!8404 = !DILocation(line: 1261, column: 13, scope: !8403)
!8405 = !DILocation(line: 1262, column: 13, scope: !8403)
!8406 = !DILocation(line: 1265, column: 38, scope: !8354)
!8407 = !DILocation(line: 1265, column: 43, scope: !8354)
!8408 = !DILocation(line: 1265, column: 53, scope: !8354)
!8409 = !DILocation(line: 1265, column: 57, scope: !8354)
!8410 = !DILocation(line: 1265, column: 65, scope: !8354)
!8411 = !DILocation(line: 1265, column: 80, scope: !8354)
!8412 = !DILocation(line: 1265, column: 84, scope: !8354)
!8413 = !DILocation(line: 1265, column: 94, scope: !8354)
!8414 = !DILocation(line: 1265, column: 97, scope: !8354)
!8415 = !DILocation(line: 1265, column: 102, scope: !8354)
!8416 = !DILocation(line: 1265, column: 120, scope: !8417)
!8417 = !DILexicalBlockFile(scope: !8354, file: !939, discriminator: 1)
!8418 = !DILocation(line: 1265, column: 124, scope: !8417)
!8419 = !DILocation(line: 1265, column: 97, scope: !8417)
!8420 = !DILocation(line: 1265, column: 97, scope: !8421)
!8421 = !DILexicalBlockFile(scope: !8354, file: !939, discriminator: 2)
!8422 = !DILocation(line: 1265, column: 97, scope: !8423)
!8423 = !DILexicalBlockFile(scope: !8354, file: !939, discriminator: 3)
!8424 = !DILocation(line: 1265, column: 9, scope: !8423)
!8425 = !DILocation(line: 1267, column: 18, scope: !8354)
!8426 = !DILocation(line: 1267, column: 9, scope: !8354)
!8427 = !DILocation(line: 1268, column: 5, scope: !8354)
!8428 = !DILocation(line: 1245, column: 42, scope: !8429)
!8429 = !DILexicalBlockFile(scope: !8348, file: !939, discriminator: 2)
!8430 = !DILocation(line: 1245, column: 5, scope: !8429)
!8431 = distinct !{!8431, !8432}
!8432 = !DILocation(line: 1245, column: 5, scope: !8180)
!8433 = !DILocation(line: 1271, column: 12, scope: !8434)
!8434 = distinct !DILexicalBlock(scope: !8180, file: !939, line: 1271, column: 5)
!8435 = !DILocation(line: 1271, column: 10, scope: !8434)
!8436 = !DILocation(line: 1271, column: 17, scope: !8437)
!8437 = !DILexicalBlockFile(scope: !8438, file: !939, discriminator: 1)
!8438 = distinct !DILexicalBlock(scope: !8434, file: !939, line: 1271, column: 5)
!8439 = !DILocation(line: 1271, column: 21, scope: !8437)
!8440 = !DILocation(line: 1271, column: 26, scope: !8437)
!8441 = !DILocation(line: 1271, column: 19, scope: !8437)
!8442 = !DILocation(line: 1271, column: 5, scope: !8437)
!8443 = !DILocation(line: 1272, column: 33, scope: !8444)
!8444 = distinct !DILexicalBlock(scope: !8438, file: !939, line: 1271, column: 46)
!8445 = !DILocation(line: 1272, column: 16, scope: !8444)
!8446 = !DILocation(line: 1272, column: 21, scope: !8444)
!8447 = !DILocation(line: 1272, column: 12, scope: !8444)
!8448 = !DILocation(line: 1274, column: 33, scope: !8444)
!8449 = !DILocation(line: 1274, column: 37, scope: !8444)
!8450 = !DILocation(line: 1274, column: 26, scope: !8444)
!8451 = !DILocation(line: 1274, column: 48, scope: !8444)
!8452 = !DILocation(line: 1274, column: 24, scope: !8444)
!8453 = !DILocation(line: 1275, column: 35, scope: !8444)
!8454 = !DILocation(line: 1275, column: 25, scope: !8444)
!8455 = !DILocation(line: 1275, column: 23, scope: !8444)
!8456 = !DILocation(line: 1276, column: 14, scope: !8457)
!8457 = distinct !DILexicalBlock(scope: !8444, file: !939, line: 1276, column: 13)
!8458 = !DILocation(line: 1276, column: 13, scope: !8444)
!8459 = !DILocation(line: 1277, column: 17, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8457, file: !939, line: 1276, column: 29)
!8461 = !DILocation(line: 1278, column: 13, scope: !8460)
!8462 = !DILocation(line: 1280, column: 20, scope: !8444)
!8463 = !DILocation(line: 1280, column: 35, scope: !8444)
!8464 = !DILocation(line: 1280, column: 39, scope: !8444)
!8465 = !DILocation(line: 1280, column: 50, scope: !8444)
!8466 = !DILocation(line: 1280, column: 9, scope: !8444)
!8467 = !DILocation(line: 1281, column: 32, scope: !8444)
!8468 = !DILocation(line: 1281, column: 37, scope: !8444)
!8469 = !DILocation(line: 1281, column: 54, scope: !8444)
!8470 = !DILocation(line: 1281, column: 58, scope: !8444)
!8471 = !DILocation(line: 1282, column: 32, scope: !8444)
!8472 = !DILocation(line: 1282, column: 47, scope: !8444)
!8473 = !DILocation(line: 1281, column: 15, scope: !8444)
!8474 = !DILocation(line: 1281, column: 13, scope: !8444)
!8475 = !DILocation(line: 1283, column: 13, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !8444, file: !939, line: 1283, column: 13)
!8477 = !DILocation(line: 1283, column: 17, scope: !8476)
!8478 = !DILocation(line: 1283, column: 13, scope: !8444)
!8479 = !DILocation(line: 1284, column: 13, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8476, file: !939, line: 1283, column: 22)
!8481 = !DILocation(line: 1285, column: 13, scope: !8480)
!8482 = !DILocation(line: 1288, column: 16, scope: !8444)
!8483 = !DILocation(line: 1289, column: 16, scope: !8444)
!8484 = !DILocation(line: 1290, column: 16, scope: !8485)
!8485 = distinct !DILexicalBlock(scope: !8444, file: !939, line: 1290, column: 9)
!8486 = !DILocation(line: 1290, column: 14, scope: !8485)
!8487 = !DILocation(line: 1290, column: 21, scope: !8488)
!8488 = !DILexicalBlockFile(scope: !8489, file: !939, discriminator: 1)
!8489 = distinct !DILexicalBlock(scope: !8485, file: !939, line: 1290, column: 9)
!8490 = !DILocation(line: 1290, column: 25, scope: !8488)
!8491 = !DILocation(line: 1290, column: 29, scope: !8488)
!8492 = !DILocation(line: 1290, column: 23, scope: !8488)
!8493 = !DILocation(line: 1290, column: 9, scope: !8488)
!8494 = !DILocation(line: 1291, column: 29, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8496, file: !939, line: 1291, column: 17)
!8496 = distinct !DILexicalBlock(scope: !8489, file: !939, line: 1290, column: 46)
!8497 = !DILocation(line: 1291, column: 17, scope: !8495)
!8498 = !DILocation(line: 1291, column: 21, scope: !8495)
!8499 = !DILocation(line: 1291, column: 33, scope: !8495)
!8500 = !DILocation(line: 1291, column: 43, scope: !8495)
!8501 = !DILocation(line: 1291, column: 54, scope: !8495)
!8502 = !DILocation(line: 1291, column: 17, scope: !8496)
!8503 = !DILocation(line: 1292, column: 38, scope: !8495)
!8504 = !DILocation(line: 1292, column: 26, scope: !8495)
!8505 = !DILocation(line: 1292, column: 30, scope: !8495)
!8506 = !DILocation(line: 1292, column: 24, scope: !8495)
!8507 = !DILocation(line: 1292, column: 17, scope: !8495)
!8508 = !DILocation(line: 1293, column: 34, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8495, file: !939, line: 1293, column: 22)
!8510 = !DILocation(line: 1293, column: 22, scope: !8509)
!8511 = !DILocation(line: 1293, column: 26, scope: !8509)
!8512 = !DILocation(line: 1293, column: 38, scope: !8509)
!8513 = !DILocation(line: 1293, column: 48, scope: !8509)
!8514 = !DILocation(line: 1293, column: 59, scope: !8509)
!8515 = !DILocation(line: 1293, column: 22, scope: !8495)
!8516 = !DILocation(line: 1294, column: 38, scope: !8509)
!8517 = !DILocation(line: 1294, column: 26, scope: !8509)
!8518 = !DILocation(line: 1294, column: 30, scope: !8509)
!8519 = !DILocation(line: 1294, column: 24, scope: !8509)
!8520 = !DILocation(line: 1294, column: 17, scope: !8509)
!8521 = !DILocation(line: 1295, column: 9, scope: !8496)
!8522 = !DILocation(line: 1290, column: 42, scope: !8523)
!8523 = !DILexicalBlockFile(scope: !8489, file: !939, discriminator: 2)
!8524 = !DILocation(line: 1290, column: 9, scope: !8523)
!8525 = distinct !{!8525, !8526}
!8526 = !DILocation(line: 1290, column: 9, scope: !8444)
!8527 = !DILocation(line: 1297, column: 14, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !8444, file: !939, line: 1297, column: 13)
!8529 = !DILocation(line: 1297, column: 21, scope: !8528)
!8530 = !DILocation(line: 1297, column: 25, scope: !8531)
!8531 = !DILexicalBlockFile(scope: !8528, file: !939, discriminator: 1)
!8532 = !DILocation(line: 1297, column: 13, scope: !8531)
!8533 = !DILocation(line: 1298, column: 13, scope: !8534)
!8534 = distinct !DILexicalBlock(scope: !8528, file: !939, line: 1297, column: 33)
!8535 = !DILocation(line: 1299, column: 13, scope: !8534)
!8536 = !DILocation(line: 1306, column: 13, scope: !8537)
!8537 = distinct !DILexicalBlock(scope: !8444, file: !939, line: 1306, column: 13)
!8538 = !DILocation(line: 1306, column: 17, scope: !8537)
!8539 = !DILocation(line: 1306, column: 13, scope: !8444)
!8540 = !DILocation(line: 1307, column: 20, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !8542, file: !939, line: 1307, column: 13)
!8542 = distinct !DILexicalBlock(scope: !8537, file: !939, line: 1306, column: 25)
!8543 = !DILocation(line: 1307, column: 18, scope: !8541)
!8544 = !DILocation(line: 1307, column: 25, scope: !8545)
!8545 = !DILexicalBlockFile(scope: !8546, file: !939, discriminator: 1)
!8546 = distinct !DILexicalBlock(scope: !8541, file: !939, line: 1307, column: 13)
!8547 = !DILocation(line: 1307, column: 29, scope: !8545)
!8548 = !DILocation(line: 1307, column: 34, scope: !8545)
!8549 = !DILocation(line: 1307, column: 27, scope: !8545)
!8550 = !DILocation(line: 1307, column: 13, scope: !8545)
!8551 = !DILocation(line: 1308, column: 46, scope: !8552)
!8552 = distinct !DILexicalBlock(scope: !8546, file: !939, line: 1307, column: 54)
!8553 = !DILocation(line: 1308, column: 29, scope: !8552)
!8554 = !DILocation(line: 1308, column: 34, scope: !8552)
!8555 = !DILocation(line: 1308, column: 25, scope: !8552)
!8556 = !DILocation(line: 1309, column: 22, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !8552, file: !939, line: 1309, column: 21)
!8558 = !DILocation(line: 1309, column: 31, scope: !8557)
!8559 = !DILocation(line: 1309, column: 41, scope: !8557)
!8560 = !DILocation(line: 1309, column: 45, scope: !8561)
!8561 = !DILexicalBlockFile(scope: !8557, file: !939, discriminator: 1)
!8562 = !DILocation(line: 1309, column: 54, scope: !8561)
!8563 = !DILocation(line: 1309, column: 67, scope: !8561)
!8564 = !DILocation(line: 1310, column: 21, scope: !8557)
!8565 = !DILocation(line: 1310, column: 30, scope: !8557)
!8566 = !DILocation(line: 1310, column: 37, scope: !8557)
!8567 = !DILocation(line: 1311, column: 36, scope: !8557)
!8568 = !DILocation(line: 1311, column: 45, scope: !8557)
!8569 = !DILocation(line: 1311, column: 53, scope: !8557)
!8570 = !DILocation(line: 1311, column: 57, scope: !8557)
!8571 = !DILocation(line: 1311, column: 22, scope: !8557)
!8572 = !DILocation(line: 1309, column: 21, scope: !8573)
!8573 = !DILexicalBlockFile(scope: !8552, file: !939, discriminator: 2)
!8574 = !DILocation(line: 1312, column: 26, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8576, file: !939, line: 1312, column: 25)
!8576 = distinct !DILexicalBlock(scope: !8557, file: !939, line: 1311, column: 66)
!8577 = !DILocation(line: 1312, column: 25, scope: !8576)
!8578 = !DILocation(line: 1313, column: 34, scope: !8575)
!8579 = !DILocation(line: 1313, column: 43, scope: !8575)
!8580 = !DILocation(line: 1313, column: 32, scope: !8575)
!8581 = !DILocation(line: 1313, column: 25, scope: !8575)
!8582 = !DILocation(line: 1314, column: 25, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8576, file: !939, line: 1314, column: 25)
!8584 = !DILocation(line: 1314, column: 34, scope: !8583)
!8585 = !DILocation(line: 1314, column: 46, scope: !8583)
!8586 = !DILocation(line: 1314, column: 56, scope: !8583)
!8587 = !DILocation(line: 1315, column: 29, scope: !8583)
!8588 = !DILocation(line: 1315, column: 37, scope: !8583)
!8589 = !DILocation(line: 1315, column: 47, scope: !8583)
!8590 = !DILocation(line: 1314, column: 65, scope: !8583)
!8591 = !DILocation(line: 1314, column: 25, scope: !8576)
!8592 = !DILocation(line: 1316, column: 34, scope: !8583)
!8593 = !DILocation(line: 1316, column: 43, scope: !8583)
!8594 = !DILocation(line: 1316, column: 32, scope: !8583)
!8595 = !DILocation(line: 1316, column: 25, scope: !8583)
!8596 = !DILocation(line: 1317, column: 17, scope: !8576)
!8597 = !DILocation(line: 1318, column: 13, scope: !8552)
!8598 = !DILocation(line: 1307, column: 50, scope: !8599)
!8599 = !DILexicalBlockFile(scope: !8546, file: !939, discriminator: 2)
!8600 = !DILocation(line: 1307, column: 13, scope: !8599)
!8601 = distinct !{!8601, !8602}
!8602 = !DILocation(line: 1307, column: 13, scope: !8542)
!8603 = !DILocation(line: 1319, column: 9, scope: !8542)
!8604 = !DILocation(line: 1321, column: 19, scope: !8444)
!8605 = !DILocation(line: 1322, column: 13, scope: !8606)
!8606 = distinct !DILexicalBlock(scope: !8444, file: !939, line: 1322, column: 13)
!8607 = !DILocation(line: 1322, column: 13, scope: !8444)
!8608 = !DILocation(line: 1323, column: 46, scope: !8606)
!8609 = !DILocation(line: 1323, column: 26, scope: !8606)
!8610 = !DILocation(line: 1323, column: 23, scope: !8606)
!8611 = !DILocation(line: 1323, column: 13, scope: !8606)
!8612 = !DILocation(line: 1324, column: 13, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8444, file: !939, line: 1324, column: 13)
!8614 = !DILocation(line: 1324, column: 13, scope: !8444)
!8615 = !DILocation(line: 1325, column: 46, scope: !8613)
!8616 = !DILocation(line: 1325, column: 26, scope: !8613)
!8617 = !DILocation(line: 1325, column: 23, scope: !8613)
!8618 = !DILocation(line: 1325, column: 13, scope: !8613)
!8619 = !DILocation(line: 1326, column: 22, scope: !8444)
!8620 = !DILocation(line: 1326, column: 32, scope: !8444)
!8621 = !DILocation(line: 1326, column: 19, scope: !8444)
!8622 = !DILocation(line: 1328, column: 17, scope: !8444)
!8623 = !DILocation(line: 1329, column: 13, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8444, file: !939, line: 1329, column: 13)
!8625 = !DILocation(line: 1329, column: 20, scope: !8624)
!8626 = !DILocation(line: 1329, column: 23, scope: !8627)
!8627 = !DILexicalBlockFile(scope: !8624, file: !939, discriminator: 1)
!8628 = !DILocation(line: 1329, column: 27, scope: !8627)
!8629 = !DILocation(line: 1329, column: 13, scope: !8627)
!8630 = !DILocation(line: 1331, column: 20, scope: !8631)
!8631 = distinct !DILexicalBlock(scope: !8632, file: !939, line: 1331, column: 13)
!8632 = distinct !DILexicalBlock(scope: !8624, file: !939, line: 1329, column: 36)
!8633 = !DILocation(line: 1331, column: 18, scope: !8631)
!8634 = !DILocation(line: 1331, column: 25, scope: !8635)
!8635 = !DILexicalBlockFile(scope: !8636, file: !939, discriminator: 1)
!8636 = distinct !DILexicalBlock(scope: !8631, file: !939, line: 1331, column: 13)
!8637 = !DILocation(line: 1331, column: 29, scope: !8635)
!8638 = !DILocation(line: 1331, column: 34, scope: !8635)
!8639 = !DILocation(line: 1331, column: 27, scope: !8635)
!8640 = !DILocation(line: 1331, column: 13, scope: !8635)
!8641 = !DILocation(line: 1332, column: 41, scope: !8642)
!8642 = distinct !DILexicalBlock(scope: !8636, file: !939, line: 1331, column: 53)
!8643 = !DILocation(line: 1332, column: 25, scope: !8642)
!8644 = !DILocation(line: 1332, column: 30, scope: !8642)
!8645 = !DILocation(line: 1332, column: 21, scope: !8642)
!8646 = !DILocation(line: 1333, column: 36, scope: !8647)
!8647 = distinct !DILexicalBlock(scope: !8642, file: !939, line: 1333, column: 21)
!8648 = !DILocation(line: 1333, column: 41, scope: !8647)
!8649 = !DILocation(line: 1333, column: 50, scope: !8647)
!8650 = !DILocation(line: 1333, column: 54, scope: !8647)
!8651 = !DILocation(line: 1333, column: 22, scope: !8647)
!8652 = !DILocation(line: 1333, column: 21, scope: !8642)
!8653 = !DILocation(line: 1334, column: 31, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !8647, file: !939, line: 1333, column: 64)
!8655 = !DILocation(line: 1334, column: 35, scope: !8654)
!8656 = !DILocation(line: 1334, column: 29, scope: !8654)
!8657 = !DILocation(line: 1335, column: 21, scope: !8654)
!8658 = !DILocation(line: 1337, column: 13, scope: !8642)
!8659 = !DILocation(line: 1331, column: 49, scope: !8660)
!8660 = !DILexicalBlockFile(scope: !8636, file: !939, discriminator: 2)
!8661 = !DILocation(line: 1331, column: 13, scope: !8660)
!8662 = distinct !{!8662, !8663}
!8663 = !DILocation(line: 1331, column: 13, scope: !8632)
!8664 = !DILocation(line: 1338, column: 17, scope: !8665)
!8665 = distinct !DILexicalBlock(scope: !8632, file: !939, line: 1338, column: 17)
!8666 = !DILocation(line: 1338, column: 22, scope: !8665)
!8667 = !DILocation(line: 1338, column: 27, scope: !8665)
!8668 = !DILocation(line: 1338, column: 19, scope: !8665)
!8669 = !DILocation(line: 1338, column: 17, scope: !8632)
!8670 = !DILocation(line: 1340, column: 25, scope: !8665)
!8671 = !DILocation(line: 1340, column: 29, scope: !8665)
!8672 = !DILocation(line: 1339, column: 17, scope: !8665)
!8673 = !DILocation(line: 1341, column: 9, scope: !8632)
!8674 = !DILocation(line: 1343, column: 14, scope: !8675)
!8675 = distinct !DILexicalBlock(scope: !8444, file: !939, line: 1343, column: 13)
!8676 = !DILocation(line: 1343, column: 19, scope: !8675)
!8677 = !DILocation(line: 1343, column: 35, scope: !8675)
!8678 = !DILocation(line: 1343, column: 39, scope: !8679)
!8679 = !DILexicalBlockFile(scope: !8675, file: !939, discriminator: 1)
!8680 = !DILocation(line: 1343, column: 44, scope: !8679)
!8681 = !DILocation(line: 1343, column: 13, scope: !8679)
!8682 = !DILocation(line: 1344, column: 38, scope: !8683)
!8683 = distinct !DILexicalBlock(scope: !8675, file: !939, line: 1343, column: 60)
!8684 = !DILocation(line: 1344, column: 46, scope: !8683)
!8685 = !DILocation(line: 1344, column: 51, scope: !8683)
!8686 = !DILocation(line: 1344, column: 61, scope: !8683)
!8687 = !DILocation(line: 1344, column: 72, scope: !8683)
!8688 = !DILocation(line: 1345, column: 21, scope: !8683)
!8689 = !DILocation(line: 1345, column: 30, scope: !8690)
!8690 = !DILexicalBlockFile(scope: !8683, file: !939, discriminator: 1)
!8691 = !DILocation(line: 1345, column: 34, scope: !8690)
!8692 = !DILocation(line: 1345, column: 21, scope: !8690)
!8693 = !DILocation(line: 1345, column: 21, scope: !8694)
!8694 = !DILexicalBlockFile(scope: !8683, file: !939, discriminator: 2)
!8695 = !DILocation(line: 1345, column: 21, scope: !8696)
!8696 = !DILexicalBlockFile(scope: !8683, file: !939, discriminator: 3)
!8697 = !DILocation(line: 1345, column: 48, scope: !8696)
!8698 = !DILocation(line: 1345, column: 52, scope: !8696)
!8699 = !DILocation(line: 1345, column: 64, scope: !8696)
!8700 = !DILocation(line: 1344, column: 13, scope: !8690)
!8701 = !DILocation(line: 1346, column: 9, scope: !8683)
!8702 = !DILocation(line: 1347, column: 17, scope: !8703)
!8703 = distinct !DILexicalBlock(scope: !8704, file: !939, line: 1347, column: 17)
!8704 = distinct !DILexicalBlock(scope: !8675, file: !939, line: 1346, column: 16)
!8705 = !DILocation(line: 1347, column: 17, scope: !8704)
!8706 = !DILocation(line: 1348, column: 42, scope: !8707)
!8707 = distinct !DILexicalBlock(scope: !8703, file: !939, line: 1347, column: 25)
!8708 = !DILocation(line: 1348, column: 50, scope: !8707)
!8709 = !DILocation(line: 1348, column: 55, scope: !8707)
!8710 = !DILocation(line: 1348, column: 65, scope: !8707)
!8711 = !DILocation(line: 1348, column: 76, scope: !8707)
!8712 = !DILocation(line: 1349, column: 42, scope: !8707)
!8713 = !DILocation(line: 1349, column: 51, scope: !8714)
!8714 = !DILexicalBlockFile(scope: !8707, file: !939, discriminator: 1)
!8715 = !DILocation(line: 1349, column: 55, scope: !8714)
!8716 = !DILocation(line: 1349, column: 42, scope: !8714)
!8717 = !DILocation(line: 1349, column: 42, scope: !8718)
!8718 = !DILexicalBlockFile(scope: !8707, file: !939, discriminator: 2)
!8719 = !DILocation(line: 1349, column: 42, scope: !8720)
!8720 = !DILexicalBlockFile(scope: !8707, file: !939, discriminator: 3)
!8721 = !DILocation(line: 1349, column: 69, scope: !8720)
!8722 = !DILocation(line: 1349, column: 73, scope: !8720)
!8723 = !DILocation(line: 1349, column: 85, scope: !8720)
!8724 = !DILocation(line: 1348, column: 17, scope: !8714)
!8725 = !DILocation(line: 1350, column: 13, scope: !8707)
!8726 = !DILocation(line: 1353, column: 18, scope: !8444)
!8727 = !DILocation(line: 1353, column: 9, scope: !8444)
!8728 = !DILocation(line: 1354, column: 5, scope: !8444)
!8729 = !DILocation(line: 1271, column: 42, scope: !8730)
!8730 = !DILexicalBlockFile(scope: !8438, file: !939, discriminator: 2)
!8731 = !DILocation(line: 1271, column: 5, scope: !8730)
!8732 = distinct !{!8732, !8733}
!8733 = !DILocation(line: 1271, column: 5, scope: !8180)
!8734 = !DILocation(line: 1354, column: 5, scope: !8735)
!8735 = !DILexicalBlockFile(scope: !8434, file: !939, discriminator: 1)
!8736 = !DILocation(line: 1356, column: 8, scope: !8737)
!8737 = distinct !DILexicalBlock(scope: !8180, file: !939, line: 1356, column: 8)
!8738 = !DILocation(line: 1356, column: 12, scope: !8737)
!8739 = !DILocation(line: 1356, column: 8, scope: !8180)
!8740 = !DILocation(line: 1357, column: 9, scope: !8737)
!8741 = !DILocation(line: 1357, column: 14, scope: !8737)
!8742 = !DILocation(line: 1357, column: 34, scope: !8737)
!8743 = !DILocation(line: 1358, column: 14, scope: !8180)
!8744 = !DILocation(line: 1358, column: 5, scope: !8180)
!8745 = !DILocation(line: 1359, column: 21, scope: !8180)
!8746 = !DILocation(line: 1359, column: 25, scope: !8180)
!8747 = !DILocation(line: 1359, column: 30, scope: !8180)
!8748 = !DILocation(line: 1359, column: 40, scope: !8180)
!8749 = !DILocation(line: 1359, column: 45, scope: !8180)
!8750 = !DILocation(line: 1359, column: 5, scope: !8180)
!8751 = !DILocation(line: 1360, column: 12, scope: !8180)
!8752 = !DILocation(line: 1360, column: 5, scope: !8180)
!8753 = !DILocation(line: 1361, column: 1, scope: !8180)
!8754 = distinct !DISubprogram(name: "get_relative_url", scope: !939, file: !939, line: 1164, type: !8755, isLocal: true, isDefinition: true, scopeLine: 1166, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!8755 = !DISubroutineType(types: !8756)
!8756 = !{!981, !1031, !1031, !1008, !981}
!8757 = !DILocalVariable(name: "master_url", arg: 1, scope: !8754, file: !939, line: 1164, type: !1031)
!8758 = !DILocation(line: 1164, column: 41, scope: !8754)
!8759 = !DILocalVariable(name: "media_url", arg: 2, scope: !8754, file: !939, line: 1164, type: !1031)
!8760 = !DILocation(line: 1164, column: 65, scope: !8754)
!8761 = !DILocalVariable(name: "rel_url", arg: 3, scope: !8754, file: !939, line: 1165, type: !1008)
!8762 = !DILocation(line: 1165, column: 35, scope: !8754)
!8763 = !DILocalVariable(name: "rel_url_buf_size", arg: 4, scope: !8754, file: !939, line: 1165, type: !981)
!8764 = !DILocation(line: 1165, column: 48, scope: !8754)
!8765 = !DILocalVariable(name: "p", scope: !8754, file: !939, line: 1167, type: !1008)
!8766 = !DILocation(line: 1167, column: 11, scope: !8754)
!8767 = !DILocalVariable(name: "base_len", scope: !8754, file: !939, line: 1168, type: !981)
!8768 = !DILocation(line: 1168, column: 9, scope: !8754)
!8769 = !DILocation(line: 1169, column: 17, scope: !8754)
!8770 = !DILocation(line: 1169, column: 9, scope: !8754)
!8771 = !DILocation(line: 1169, column: 44, scope: !8772)
!8772 = !DILexicalBlockFile(scope: !8754, file: !939, discriminator: 1)
!8773 = !DILocation(line: 1169, column: 36, scope: !8772)
!8774 = !DILocation(line: 1169, column: 9, scope: !8772)
!8775 = !DILocation(line: 1170, column: 21, scope: !8754)
!8776 = !DILocation(line: 1170, column: 13, scope: !8754)
!8777 = !DILocation(line: 1169, column: 9, scope: !8778)
!8778 = !DILexicalBlockFile(scope: !8754, file: !939, discriminator: 2)
!8779 = !DILocation(line: 1169, column: 9, scope: !8780)
!8780 = !DILexicalBlockFile(scope: !8754, file: !939, discriminator: 3)
!8781 = !DILocation(line: 1169, column: 7, scope: !8780)
!8782 = !DILocation(line: 1171, column: 9, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8754, file: !939, line: 1171, column: 9)
!8784 = !DILocation(line: 1171, column: 9, scope: !8754)
!8785 = !DILocation(line: 1172, column: 22, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8783, file: !939, line: 1171, column: 12)
!8787 = !DILocation(line: 1172, column: 26, scope: !8786)
!8788 = !DILocation(line: 1172, column: 24, scope: !8786)
!8789 = !DILocation(line: 1172, column: 38, scope: !8786)
!8790 = !DILocation(line: 1172, column: 21, scope: !8786)
!8791 = !DILocation(line: 1172, column: 46, scope: !8792)
!8792 = !DILexicalBlockFile(scope: !8786, file: !939, discriminator: 1)
!8793 = !DILocation(line: 1172, column: 50, scope: !8792)
!8794 = !DILocation(line: 1172, column: 48, scope: !8792)
!8795 = !DILocation(line: 1172, column: 21, scope: !8792)
!8796 = !DILocation(line: 1172, column: 67, scope: !8797)
!8797 = !DILexicalBlockFile(scope: !8786, file: !939, discriminator: 2)
!8798 = !DILocation(line: 1172, column: 71, scope: !8797)
!8799 = !DILocation(line: 1172, column: 69, scope: !8797)
!8800 = !DILocation(line: 1172, column: 65, scope: !8797)
!8801 = !DILocation(line: 1172, column: 21, scope: !8797)
!8802 = !DILocation(line: 1172, column: 21, scope: !8803)
!8803 = !DILexicalBlockFile(scope: !8786, file: !939, discriminator: 3)
!8804 = !DILocation(line: 1172, column: 20, scope: !8803)
!8805 = !DILocation(line: 1172, column: 18, scope: !8803)
!8806 = !DILocation(line: 1173, column: 28, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8786, file: !939, line: 1173, column: 13)
!8808 = !DILocation(line: 1173, column: 40, scope: !8807)
!8809 = !DILocation(line: 1173, column: 51, scope: !8807)
!8810 = !DILocation(line: 1173, column: 13, scope: !8807)
!8811 = !DILocation(line: 1173, column: 13, scope: !8786)
!8812 = !DILocation(line: 1174, column: 13, scope: !8813)
!8813 = distinct !DILexicalBlock(scope: !8807, file: !939, line: 1173, column: 62)
!8814 = !DILocation(line: 1175, column: 13, scope: !8813)
!8815 = !DILocation(line: 1177, column: 5, scope: !8786)
!8816 = !DILocation(line: 1178, column: 16, scope: !8754)
!8817 = !DILocation(line: 1178, column: 37, scope: !8754)
!8818 = !DILocation(line: 1178, column: 46, scope: !8754)
!8819 = !DILocation(line: 1178, column: 27, scope: !8754)
!8820 = !DILocation(line: 1178, column: 53, scope: !8754)
!8821 = !DILocation(line: 1178, column: 5, scope: !8754)
!8822 = !DILocation(line: 1179, column: 5, scope: !8754)
!8823 = !DILocation(line: 1180, column: 1, scope: !8754)
!8824 = distinct !DISubprogram(name: "get_stream_bit_rate", scope: !939, file: !939, line: 1182, type: !8825, isLocal: true, isDefinition: true, scopeLine: 1182, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!8825 = !DISubroutineType(types: !8826)
!8826 = !{!976, !1308}
!8827 = !DILocalVariable(name: "stream", arg: 1, scope: !8824, file: !939, line: 1182, type: !1308)
!8828 = !DILocation(line: 1182, column: 46, scope: !8824)
!8829 = !DILocalVariable(name: "props", scope: !8824, file: !939, line: 1183, type: !1016)
!8830 = !DILocation(line: 1183, column: 22, scope: !8824)
!8831 = !DILocation(line: 1184, column: 9, scope: !8824)
!8832 = !DILocation(line: 1183, column: 48, scope: !8824)
!8833 = !DILocation(line: 1183, column: 30, scope: !8824)
!8834 = !DILocation(line: 1189, column: 9, scope: !8835)
!8835 = distinct !DILexicalBlock(scope: !8824, file: !939, line: 1189, column: 9)
!8836 = !DILocation(line: 1189, column: 17, scope: !8835)
!8837 = !DILocation(line: 1189, column: 27, scope: !8835)
!8838 = !DILocation(line: 1189, column: 9, scope: !8824)
!8839 = !DILocation(line: 1190, column: 16, scope: !8835)
!8840 = !DILocation(line: 1190, column: 24, scope: !8835)
!8841 = !DILocation(line: 1190, column: 34, scope: !8835)
!8842 = !DILocation(line: 1190, column: 9, scope: !8835)
!8843 = !DILocation(line: 1191, column: 14, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8835, file: !939, line: 1191, column: 14)
!8845 = !DILocation(line: 1191, column: 14, scope: !8835)
!8846 = !DILocation(line: 1192, column: 16, scope: !8844)
!8847 = !DILocation(line: 1192, column: 23, scope: !8844)
!8848 = !DILocation(line: 1192, column: 9, scope: !8844)
!8849 = !DILocation(line: 1194, column: 5, scope: !8824)
!8850 = !DILocation(line: 1195, column: 1, scope: !8824)
!8851 = distinct !DISubprogram(name: "hls_free_variant_streams", scope: !939, file: !939, line: 2377, type: !8852, isLocal: true, isDefinition: true, scopeLine: 2378, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!8852 = !DISubroutineType(types: !8853)
!8853 = !{null, !8854}
!8854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2340, size: 64, align: 64)
!8855 = !DILocalVariable(name: "hls", arg: 1, scope: !8851, file: !939, line: 2377, type: !8854)
!8856 = !DILocation(line: 2377, column: 57, scope: !8851)
!8857 = !DILocalVariable(name: "i", scope: !8851, file: !939, line: 2379, type: !981)
!8858 = !DILocation(line: 2379, column: 9, scope: !8851)
!8859 = !DILocalVariable(name: "vtt_oc", scope: !8851, file: !939, line: 2380, type: !2272)
!8860 = !DILocation(line: 2380, column: 22, scope: !8851)
!8861 = !DILocalVariable(name: "vs", scope: !8851, file: !939, line: 2381, type: !2274)
!8862 = !DILocation(line: 2381, column: 20, scope: !8851)
!8863 = !DILocation(line: 2383, column: 12, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8851, file: !939, line: 2383, column: 5)
!8865 = !DILocation(line: 2383, column: 10, scope: !8864)
!8866 = !DILocation(line: 2383, column: 17, scope: !8867)
!8867 = !DILexicalBlockFile(scope: !8868, file: !939, discriminator: 1)
!8868 = distinct !DILexicalBlock(scope: !8864, file: !939, line: 2383, column: 5)
!8869 = !DILocation(line: 2383, column: 21, scope: !8867)
!8870 = !DILocation(line: 2383, column: 26, scope: !8867)
!8871 = !DILocation(line: 2383, column: 19, scope: !8867)
!8872 = !DILocation(line: 2383, column: 5, scope: !8867)
!8873 = !DILocation(line: 2384, column: 32, scope: !8874)
!8874 = distinct !DILexicalBlock(scope: !8868, file: !939, line: 2383, column: 46)
!8875 = !DILocation(line: 2384, column: 15, scope: !8874)
!8876 = !DILocation(line: 2384, column: 20, scope: !8874)
!8877 = !DILocation(line: 2384, column: 12, scope: !8874)
!8878 = !DILocation(line: 2385, column: 18, scope: !8874)
!8879 = !DILocation(line: 2385, column: 22, scope: !8874)
!8880 = !DILocation(line: 2385, column: 16, scope: !8874)
!8881 = !DILocation(line: 2387, column: 19, scope: !8874)
!8882 = !DILocation(line: 2387, column: 23, scope: !8874)
!8883 = !DILocation(line: 2387, column: 18, scope: !8874)
!8884 = !DILocation(line: 2387, column: 9, scope: !8874)
!8885 = !DILocation(line: 2388, column: 19, scope: !8874)
!8886 = !DILocation(line: 2388, column: 23, scope: !8874)
!8887 = !DILocation(line: 2388, column: 18, scope: !8874)
!8888 = !DILocation(line: 2388, column: 9, scope: !8874)
!8889 = !DILocation(line: 2389, column: 19, scope: !8874)
!8890 = !DILocation(line: 2389, column: 23, scope: !8874)
!8891 = !DILocation(line: 2389, column: 18, scope: !8874)
!8892 = !DILocation(line: 2389, column: 9, scope: !8874)
!8893 = !DILocation(line: 2390, column: 13, scope: !8894)
!8894 = distinct !DILexicalBlock(scope: !8874, file: !939, line: 2390, column: 13)
!8895 = !DILocation(line: 2390, column: 13, scope: !8874)
!8896 = !DILocation(line: 2391, column: 23, scope: !8897)
!8897 = distinct !DILexicalBlock(scope: !8894, file: !939, line: 2390, column: 21)
!8898 = !DILocation(line: 2391, column: 27, scope: !8897)
!8899 = !DILocation(line: 2391, column: 22, scope: !8897)
!8900 = !DILocation(line: 2391, column: 13, scope: !8897)
!8901 = !DILocation(line: 2392, column: 23, scope: !8897)
!8902 = !DILocation(line: 2392, column: 27, scope: !8897)
!8903 = !DILocation(line: 2392, column: 22, scope: !8897)
!8904 = !DILocation(line: 2392, column: 13, scope: !8897)
!8905 = !DILocation(line: 2393, column: 9, scope: !8897)
!8906 = !DILocation(line: 2395, column: 27, scope: !8874)
!8907 = !DILocation(line: 2395, column: 31, scope: !8874)
!8908 = !DILocation(line: 2395, column: 9, scope: !8874)
!8909 = !DILocation(line: 2396, column: 27, scope: !8874)
!8910 = !DILocation(line: 2396, column: 31, scope: !8874)
!8911 = !DILocation(line: 2396, column: 9, scope: !8874)
!8912 = !DILocation(line: 2397, column: 19, scope: !8874)
!8913 = !DILocation(line: 2397, column: 23, scope: !8874)
!8914 = !DILocation(line: 2397, column: 18, scope: !8874)
!8915 = !DILocation(line: 2397, column: 9, scope: !8874)
!8916 = !DILocation(line: 2398, column: 19, scope: !8874)
!8917 = !DILocation(line: 2398, column: 23, scope: !8874)
!8918 = !DILocation(line: 2398, column: 18, scope: !8874)
!8919 = !DILocation(line: 2398, column: 9, scope: !8874)
!8920 = !DILocation(line: 2399, column: 19, scope: !8874)
!8921 = !DILocation(line: 2399, column: 23, scope: !8874)
!8922 = !DILocation(line: 2399, column: 18, scope: !8874)
!8923 = !DILocation(line: 2399, column: 9, scope: !8874)
!8924 = !DILocation(line: 2400, column: 19, scope: !8874)
!8925 = !DILocation(line: 2400, column: 23, scope: !8874)
!8926 = !DILocation(line: 2400, column: 18, scope: !8874)
!8927 = !DILocation(line: 2400, column: 9, scope: !8874)
!8928 = !DILocation(line: 2401, column: 19, scope: !8874)
!8929 = !DILocation(line: 2401, column: 23, scope: !8874)
!8930 = !DILocation(line: 2401, column: 18, scope: !8874)
!8931 = !DILocation(line: 2401, column: 9, scope: !8874)
!8932 = !DILocation(line: 2402, column: 19, scope: !8874)
!8933 = !DILocation(line: 2402, column: 23, scope: !8874)
!8934 = !DILocation(line: 2402, column: 18, scope: !8874)
!8935 = !DILocation(line: 2402, column: 9, scope: !8874)
!8936 = !DILocation(line: 2403, column: 5, scope: !8874)
!8937 = !DILocation(line: 2383, column: 42, scope: !8938)
!8938 = !DILexicalBlockFile(scope: !8868, file: !939, discriminator: 2)
!8939 = !DILocation(line: 2383, column: 5, scope: !8938)
!8940 = distinct !{!8940, !8941}
!8941 = !DILocation(line: 2383, column: 5, scope: !8851)
!8942 = !DILocation(line: 2404, column: 1, scope: !8851)
!8943 = distinct !DISubprogram(name: "hls_free_segments", scope: !939, file: !939, line: 1138, type: !8944, isLocal: true, isDefinition: true, scopeLine: 1139, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!8944 = !DISubroutineType(types: !8945)
!8945 = !{null, !983}
!8946 = !DILocalVariable(name: "p", arg: 1, scope: !8943, file: !939, line: 1138, type: !983)
!8947 = !DILocation(line: 1138, column: 43, scope: !8943)
!8948 = !DILocalVariable(name: "en", scope: !8943, file: !939, line: 1140, type: !983)
!8949 = !DILocation(line: 1140, column: 17, scope: !8943)
!8950 = !DILocation(line: 1142, column: 5, scope: !8943)
!8951 = !DILocation(line: 1142, column: 11, scope: !8952)
!8952 = !DILexicalBlockFile(scope: !8943, file: !939, discriminator: 1)
!8953 = !DILocation(line: 1142, column: 5, scope: !8952)
!8954 = !DILocation(line: 1143, column: 14, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8943, file: !939, line: 1142, column: 14)
!8956 = !DILocation(line: 1143, column: 12, scope: !8955)
!8957 = !DILocation(line: 1144, column: 13, scope: !8955)
!8958 = !DILocation(line: 1144, column: 16, scope: !8955)
!8959 = !DILocation(line: 1144, column: 11, scope: !8955)
!8960 = !DILocation(line: 1145, column: 17, scope: !8955)
!8961 = !DILocation(line: 1145, column: 9, scope: !8955)
!8962 = !DILocation(line: 1142, column: 5, scope: !8963)
!8963 = !DILexicalBlockFile(scope: !8943, file: !939, discriminator: 2)
!8964 = distinct !{!8964, !8950}
!8965 = !DILocation(line: 1147, column: 1, scope: !8943)
!8966 = distinct !DISubprogram(name: "get_default_pattern_localtime_fmt", scope: !939, file: !939, line: 1682, type: !8967, isLocal: true, isDefinition: true, scopeLine: 1683, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!8967 = !DISubroutineType(types: !8968)
!8968 = !{!1031, !2272}
!8969 = !DILocalVariable(name: "s", arg: 1, scope: !8966, file: !939, line: 1682, type: !2272)
!8970 = !DILocation(line: 1682, column: 72, scope: !8966)
!8971 = !DILocalVariable(name: "b", scope: !8966, file: !939, line: 1684, type: !6341)
!8972 = !DILocation(line: 1684, column: 10, scope: !8966)
!8973 = !DILocalVariable(name: "t", scope: !8966, file: !939, line: 1685, type: !3969)
!8974 = !DILocation(line: 1685, column: 12, scope: !8966)
!8975 = !DILocation(line: 1685, column: 16, scope: !8966)
!8976 = !DILocalVariable(name: "p", scope: !8966, file: !939, line: 1686, type: !3998)
!8977 = !DILocation(line: 1686, column: 16, scope: !8966)
!8978 = !DILocalVariable(name: "tmbuf", scope: !8966, file: !939, line: 1686, type: !3999)
!8979 = !DILocation(line: 1686, column: 19, scope: !8966)
!8980 = !DILocalVariable(name: "hls", scope: !8966, file: !939, line: 1687, type: !2338)
!8981 = !DILocation(line: 1687, column: 17, scope: !8966)
!8982 = !DILocation(line: 1687, column: 23, scope: !8966)
!8983 = !DILocation(line: 1687, column: 26, scope: !8966)
!8984 = !DILocation(line: 1689, column: 9, scope: !8966)
!8985 = !DILocation(line: 1689, column: 7, scope: !8966)
!8986 = !DILocation(line: 1692, column: 9, scope: !8987)
!8987 = distinct !DILexicalBlock(scope: !8966, file: !939, line: 1692, column: 9)
!8988 = !DILocation(line: 1692, column: 14, scope: !8987)
!8989 = !DILocation(line: 1692, column: 27, scope: !8987)
!8990 = !DILocation(line: 1692, column: 9, scope: !8966)
!8991 = !DILocation(line: 1693, column: 32, scope: !8992)
!8992 = distinct !DILexicalBlock(scope: !8987, file: !939, line: 1692, column: 49)
!8993 = !DILocation(line: 1693, column: 52, scope: !8992)
!8994 = !DILocation(line: 1693, column: 23, scope: !8992)
!8995 = !DILocation(line: 1693, column: 55, scope: !8992)
!8996 = !DILocation(line: 1693, column: 66, scope: !8997)
!8997 = !DILexicalBlockFile(scope: !8992, file: !939, discriminator: 1)
!8998 = !DILocation(line: 1693, column: 59, scope: !8997)
!8999 = !DILocation(line: 1693, column: 58, scope: !8997)
!9000 = !DILocation(line: 1693, column: 55, scope: !8997)
!9001 = !DILocation(line: 1693, column: 16, scope: !9002)
!9002 = !DILexicalBlockFile(scope: !8992, file: !939, discriminator: 2)
!9003 = !DILocation(line: 1693, column: 9, scope: !9002)
!9004 = !DILocation(line: 1695, column: 28, scope: !8966)
!9005 = !DILocation(line: 1695, column: 48, scope: !8966)
!9006 = !DILocation(line: 1695, column: 19, scope: !8966)
!9007 = !DILocation(line: 1695, column: 51, scope: !8966)
!9008 = !DILocation(line: 1695, column: 62, scope: !9009)
!9009 = !DILexicalBlockFile(scope: !8966, file: !939, discriminator: 1)
!9010 = !DILocation(line: 1695, column: 55, scope: !9009)
!9011 = !DILocation(line: 1695, column: 54, scope: !9009)
!9012 = !DILocation(line: 1695, column: 51, scope: !9009)
!9013 = !DILocation(line: 1695, column: 12, scope: !9014)
!9014 = !DILexicalBlockFile(scope: !8966, file: !939, discriminator: 2)
!9015 = !DILocation(line: 1695, column: 5, scope: !9014)
!9016 = !DILocation(line: 1696, column: 1, scope: !8966)
!9017 = distinct !DISubprogram(name: "update_variant_stream_info", scope: !939, file: !939, line: 2013, type: !2332, isLocal: true, isDefinition: true, scopeLine: 2013, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!9018 = !DILocalVariable(name: "s", arg: 1, scope: !9017, file: !939, line: 2013, type: !2272)
!9019 = !DILocation(line: 2013, column: 56, scope: !9017)
!9020 = !DILocalVariable(name: "hls", scope: !9017, file: !939, line: 2014, type: !2338)
!9021 = !DILocation(line: 2014, column: 17, scope: !9017)
!9022 = !DILocation(line: 2014, column: 23, scope: !9017)
!9023 = !DILocation(line: 2014, column: 26, scope: !9017)
!9024 = !DILocalVariable(name: "i", scope: !9017, file: !939, line: 2015, type: !982)
!9025 = !DILocation(line: 2015, column: 18, scope: !9017)
!9026 = !DILocalVariable(name: "ret", scope: !9017, file: !939, line: 2016, type: !981)
!9027 = !DILocation(line: 2016, column: 9, scope: !9017)
!9028 = !DILocation(line: 2018, column: 9, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !9017, file: !939, line: 2018, column: 9)
!9030 = !DILocation(line: 2018, column: 14, scope: !9029)
!9031 = !DILocation(line: 2018, column: 9, scope: !9017)
!9032 = !DILocation(line: 2019, column: 41, scope: !9033)
!9033 = distinct !DILexicalBlock(scope: !9029, file: !939, line: 2018, column: 29)
!9034 = !DILocation(line: 2019, column: 15, scope: !9033)
!9035 = !DILocation(line: 2019, column: 13, scope: !9033)
!9036 = !DILocation(line: 2020, column: 13, scope: !9037)
!9037 = distinct !DILexicalBlock(scope: !9033, file: !939, line: 2020, column: 13)
!9038 = !DILocation(line: 2020, column: 17, scope: !9037)
!9039 = !DILocation(line: 2020, column: 13, scope: !9033)
!9040 = !DILocation(line: 2021, column: 20, scope: !9037)
!9041 = !DILocation(line: 2021, column: 13, scope: !9037)
!9042 = !DILocation(line: 2022, column: 5, scope: !9033)
!9043 = !DILocation(line: 2024, column: 9, scope: !9044)
!9044 = distinct !DILexicalBlock(scope: !9017, file: !939, line: 2024, column: 9)
!9045 = !DILocation(line: 2024, column: 14, scope: !9044)
!9046 = !DILocation(line: 2024, column: 9, scope: !9017)
!9047 = !DILocation(line: 2025, column: 47, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !9044, file: !939, line: 2024, column: 30)
!9049 = !DILocation(line: 2025, column: 16, scope: !9048)
!9050 = !DILocation(line: 2025, column: 9, scope: !9048)
!9051 = !DILocation(line: 2028, column: 9, scope: !9052)
!9052 = distinct !DILexicalBlock(scope: !9044, file: !939, line: 2026, column: 12)
!9053 = !DILocation(line: 2028, column: 14, scope: !9052)
!9054 = !DILocation(line: 2028, column: 28, scope: !9052)
!9055 = !DILocation(line: 2030, column: 46, scope: !9052)
!9056 = !DILocation(line: 2030, column: 51, scope: !9052)
!9057 = !DILocation(line: 2029, column: 65, scope: !9052)
!9058 = !DILocation(line: 2029, column: 28, scope: !9052)
!9059 = !DILocation(line: 2029, column: 9, scope: !9052)
!9060 = !DILocation(line: 2029, column: 14, scope: !9052)
!9061 = !DILocation(line: 2029, column: 26, scope: !9052)
!9062 = !DILocation(line: 2031, column: 14, scope: !9063)
!9063 = distinct !DILexicalBlock(scope: !9052, file: !939, line: 2031, column: 13)
!9064 = !DILocation(line: 2031, column: 19, scope: !9063)
!9065 = !DILocation(line: 2031, column: 13, scope: !9052)
!9066 = !DILocation(line: 2032, column: 13, scope: !9063)
!9067 = !DILocation(line: 2034, column: 9, scope: !9052)
!9068 = !DILocation(line: 2034, column: 14, scope: !9052)
!9069 = !DILocation(line: 2034, column: 29, scope: !9052)
!9070 = !DILocation(line: 2034, column: 44, scope: !9052)
!9071 = !DILocation(line: 2035, column: 42, scope: !9052)
!9072 = !DILocation(line: 2035, column: 45, scope: !9052)
!9073 = !DILocation(line: 2035, column: 9, scope: !9052)
!9074 = !DILocation(line: 2035, column: 14, scope: !9052)
!9075 = !DILocation(line: 2035, column: 29, scope: !9052)
!9076 = !DILocation(line: 2035, column: 40, scope: !9052)
!9077 = !DILocation(line: 2037, column: 45, scope: !9052)
!9078 = !DILocation(line: 2037, column: 50, scope: !9052)
!9079 = !DILocation(line: 2037, column: 65, scope: !9052)
!9080 = !DILocation(line: 2036, column: 69, scope: !9052)
!9081 = !DILocation(line: 2036, column: 39, scope: !9052)
!9082 = !DILocation(line: 2036, column: 9, scope: !9052)
!9083 = !DILocation(line: 2036, column: 14, scope: !9052)
!9084 = !DILocation(line: 2036, column: 29, scope: !9052)
!9085 = !DILocation(line: 2036, column: 37, scope: !9052)
!9086 = !DILocation(line: 2038, column: 14, scope: !9087)
!9087 = distinct !DILexicalBlock(scope: !9052, file: !939, line: 2038, column: 13)
!9088 = !DILocation(line: 2038, column: 19, scope: !9087)
!9089 = !DILocation(line: 2038, column: 34, scope: !9087)
!9090 = !DILocation(line: 2038, column: 13, scope: !9052)
!9091 = !DILocation(line: 2039, column: 13, scope: !9087)
!9092 = !DILocation(line: 2042, column: 13, scope: !9093)
!9093 = distinct !DILexicalBlock(scope: !9052, file: !939, line: 2042, column: 13)
!9094 = !DILocation(line: 2042, column: 18, scope: !9093)
!9095 = !DILocation(line: 2042, column: 13, scope: !9052)
!9096 = !DILocation(line: 2043, column: 53, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9093, file: !939, line: 2042, column: 32)
!9098 = !DILocation(line: 2043, column: 58, scope: !9097)
!9099 = !DILocation(line: 2043, column: 72, scope: !9097)
!9100 = !DILocation(line: 2043, column: 43, scope: !9097)
!9101 = !DILocation(line: 2043, column: 13, scope: !9097)
!9102 = !DILocation(line: 2043, column: 18, scope: !9097)
!9103 = !DILocation(line: 2043, column: 33, scope: !9097)
!9104 = !DILocation(line: 2043, column: 41, scope: !9097)
!9105 = !DILocation(line: 2044, column: 18, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9097, file: !939, line: 2044, column: 17)
!9107 = !DILocation(line: 2044, column: 23, scope: !9106)
!9108 = !DILocation(line: 2044, column: 38, scope: !9106)
!9109 = !DILocation(line: 2044, column: 17, scope: !9097)
!9110 = !DILocation(line: 2045, column: 17, scope: !9106)
!9111 = !DILocation(line: 2046, column: 9, scope: !9097)
!9112 = !DILocation(line: 2048, column: 16, scope: !9113)
!9113 = distinct !DILexicalBlock(scope: !9052, file: !939, line: 2048, column: 9)
!9114 = !DILocation(line: 2048, column: 14, scope: !9113)
!9115 = !DILocation(line: 2048, column: 21, scope: !9116)
!9116 = !DILexicalBlockFile(scope: !9117, file: !939, discriminator: 1)
!9117 = distinct !DILexicalBlock(scope: !9113, file: !939, line: 2048, column: 9)
!9118 = !DILocation(line: 2048, column: 25, scope: !9116)
!9119 = !DILocation(line: 2048, column: 28, scope: !9116)
!9120 = !DILocation(line: 2048, column: 23, scope: !9116)
!9121 = !DILocation(line: 2048, column: 9, scope: !9116)
!9122 = !DILocation(line: 2049, column: 57, scope: !9117)
!9123 = !DILocation(line: 2049, column: 46, scope: !9117)
!9124 = !DILocation(line: 2049, column: 49, scope: !9117)
!9125 = !DILocation(line: 2049, column: 41, scope: !9117)
!9126 = !DILocation(line: 2049, column: 13, scope: !9117)
!9127 = !DILocation(line: 2049, column: 18, scope: !9117)
!9128 = !DILocation(line: 2049, column: 33, scope: !9117)
!9129 = !DILocation(line: 2049, column: 44, scope: !9117)
!9130 = !DILocation(line: 2048, column: 41, scope: !9131)
!9131 = !DILexicalBlockFile(scope: !9117, file: !939, discriminator: 2)
!9132 = !DILocation(line: 2048, column: 9, scope: !9131)
!9133 = distinct !{!9133, !9134}
!9134 = !DILocation(line: 2048, column: 9, scope: !9052)
!9135 = !DILocation(line: 2051, column: 5, scope: !9017)
!9136 = !DILocation(line: 2052, column: 1, scope: !9017)
!9137 = distinct !DISubprogram(name: "validate_name", scope: !939, file: !939, line: 1717, type: !9138, isLocal: true, isDefinition: true, scopeLine: 1718, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!9138 = !DISubroutineType(types: !9139)
!9139 = !{!981, !981, !1031}
!9140 = !DILocalVariable(name: "nb_vs", arg: 1, scope: !9137, file: !939, line: 1717, type: !981)
!9141 = !DILocation(line: 1717, column: 30, scope: !9137)
!9142 = !DILocalVariable(name: "fn", arg: 2, scope: !9137, file: !939, line: 1717, type: !1031)
!9143 = !DILocation(line: 1717, column: 49, scope: !9137)
!9144 = !DILocalVariable(name: "filename", scope: !9137, file: !939, line: 1719, type: !1031)
!9145 = !DILocation(line: 1719, column: 17, scope: !9137)
!9146 = !DILocalVariable(name: "subdir_name", scope: !9137, file: !939, line: 1719, type: !1031)
!9147 = !DILocation(line: 1719, column: 28, scope: !9137)
!9148 = !DILocalVariable(name: "fn_dup", scope: !9137, file: !939, line: 1720, type: !1008)
!9149 = !DILocation(line: 1720, column: 11, scope: !9137)
!9150 = !DILocalVariable(name: "ret", scope: !9137, file: !939, line: 1721, type: !981)
!9151 = !DILocation(line: 1721, column: 9, scope: !9137)
!9152 = !DILocation(line: 1723, column: 10, scope: !9153)
!9153 = distinct !DILexicalBlock(scope: !9137, file: !939, line: 1723, column: 9)
!9154 = !DILocation(line: 1723, column: 9, scope: !9137)
!9155 = !DILocation(line: 1724, column: 13, scope: !9156)
!9156 = distinct !DILexicalBlock(scope: !9153, file: !939, line: 1723, column: 14)
!9157 = !DILocation(line: 1725, column: 9, scope: !9156)
!9158 = !DILocation(line: 1728, column: 24, scope: !9137)
!9159 = !DILocation(line: 1728, column: 14, scope: !9137)
!9160 = !DILocation(line: 1728, column: 12, scope: !9137)
!9161 = !DILocation(line: 1729, column: 10, scope: !9162)
!9162 = distinct !DILexicalBlock(scope: !9137, file: !939, line: 1729, column: 9)
!9163 = !DILocation(line: 1729, column: 9, scope: !9137)
!9164 = !DILocation(line: 1730, column: 13, scope: !9165)
!9165 = distinct !DILexicalBlock(scope: !9162, file: !939, line: 1729, column: 18)
!9166 = !DILocation(line: 1731, column: 9, scope: !9165)
!9167 = !DILocation(line: 1734, column: 28, scope: !9137)
!9168 = !DILocation(line: 1734, column: 16, scope: !9137)
!9169 = !DILocation(line: 1734, column: 14, scope: !9137)
!9170 = !DILocation(line: 1735, column: 30, scope: !9137)
!9171 = !DILocation(line: 1735, column: 19, scope: !9137)
!9172 = !DILocation(line: 1735, column: 17, scope: !9137)
!9173 = !DILocation(line: 1737, column: 9, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !9137, file: !939, line: 1737, column: 9)
!9175 = !DILocation(line: 1737, column: 15, scope: !9174)
!9176 = !DILocation(line: 1737, column: 19, scope: !9174)
!9177 = !DILocation(line: 1737, column: 34, scope: !9178)
!9178 = !DILexicalBlockFile(scope: !9174, file: !939, discriminator: 1)
!9179 = !DILocation(line: 1737, column: 23, scope: !9178)
!9180 = !DILocation(line: 1737, column: 50, scope: !9178)
!9181 = !DILocation(line: 1737, column: 65, scope: !9182)
!9182 = !DILexicalBlockFile(scope: !9174, file: !939, discriminator: 2)
!9183 = !DILocation(line: 1737, column: 54, scope: !9182)
!9184 = !DILocation(line: 1737, column: 9, scope: !9182)
!9185 = !DILocation(line: 1739, column: 17, scope: !9186)
!9186 = distinct !DILexicalBlock(scope: !9174, file: !939, line: 1737, column: 85)
!9187 = !DILocation(line: 1738, column: 9, scope: !9186)
!9188 = !DILocation(line: 1740, column: 13, scope: !9186)
!9189 = !DILocation(line: 1741, column: 9, scope: !9186)
!9190 = !DILocation(line: 1744, column: 20, scope: !9191)
!9191 = distinct !DILexicalBlock(scope: !9137, file: !939, line: 1744, column: 9)
!9192 = !DILocation(line: 1744, column: 9, scope: !9191)
!9193 = !DILocation(line: 1744, column: 36, scope: !9191)
!9194 = !DILocation(line: 1744, column: 50, scope: !9195)
!9195 = !DILexicalBlockFile(scope: !9191, file: !939, discriminator: 1)
!9196 = !DILocation(line: 1744, column: 39, scope: !9195)
!9197 = !DILocation(line: 1744, column: 9, scope: !9195)
!9198 = !DILocation(line: 1746, column: 17, scope: !9199)
!9199 = distinct !DILexicalBlock(scope: !9191, file: !939, line: 1744, column: 70)
!9200 = !DILocation(line: 1745, column: 9, scope: !9199)
!9201 = !DILocation(line: 1747, column: 13, scope: !9199)
!9202 = !DILocation(line: 1748, column: 9, scope: !9199)
!9203 = !DILocation(line: 1744, column: 67, scope: !9204)
!9204 = !DILexicalBlockFile(scope: !9191, file: !939, discriminator: 2)
!9205 = !DILocation(line: 1752, column: 14, scope: !9137)
!9206 = !DILocation(line: 1752, column: 5, scope: !9137)
!9207 = !DILocation(line: 1753, column: 12, scope: !9137)
!9208 = !DILocation(line: 1753, column: 5, scope: !9137)
!9209 = distinct !DISubprogram(name: "update_master_pl_info", scope: !939, file: !939, line: 2054, type: !2332, isLocal: true, isDefinition: true, scopeLine: 2054, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!9210 = !DILocalVariable(name: "s", arg: 1, scope: !9209, file: !939, line: 2054, type: !2272)
!9211 = !DILocation(line: 2054, column: 51, scope: !9209)
!9212 = !DILocalVariable(name: "hls", scope: !9209, file: !939, line: 2055, type: !2338)
!9213 = !DILocation(line: 2055, column: 17, scope: !9209)
!9214 = !DILocation(line: 2055, column: 23, scope: !9209)
!9215 = !DILocation(line: 2055, column: 26, scope: !9209)
!9216 = !DILocalVariable(name: "dir", scope: !9209, file: !939, line: 2056, type: !1031)
!9217 = !DILocation(line: 2056, column: 17, scope: !9209)
!9218 = !DILocalVariable(name: "fn1", scope: !9209, file: !939, line: 2057, type: !1008)
!9219 = !DILocation(line: 2057, column: 11, scope: !9209)
!9220 = !DILocalVariable(name: "fn2", scope: !9209, file: !939, line: 2057, type: !1008)
!9221 = !DILocation(line: 2057, column: 22, scope: !9209)
!9222 = !DILocalVariable(name: "ret", scope: !9209, file: !939, line: 2058, type: !981)
!9223 = !DILocation(line: 2058, column: 9, scope: !9209)
!9224 = !DILocation(line: 2060, column: 21, scope: !9209)
!9225 = !DILocation(line: 2060, column: 24, scope: !9209)
!9226 = !DILocation(line: 2060, column: 11, scope: !9209)
!9227 = !DILocation(line: 2060, column: 9, scope: !9209)
!9228 = !DILocation(line: 2061, column: 10, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9209, file: !939, line: 2061, column: 9)
!9230 = !DILocation(line: 2061, column: 9, scope: !9209)
!9231 = !DILocation(line: 2062, column: 13, scope: !9232)
!9232 = distinct !DILexicalBlock(scope: !9229, file: !939, line: 2061, column: 15)
!9233 = !DILocation(line: 2063, column: 9, scope: !9232)
!9234 = !DILocation(line: 2066, column: 22, scope: !9209)
!9235 = !DILocation(line: 2066, column: 11, scope: !9209)
!9236 = !DILocation(line: 2066, column: 9, scope: !9209)
!9237 = !DILocation(line: 2072, column: 9, scope: !9238)
!9238 = distinct !DILexicalBlock(scope: !9209, file: !939, line: 2072, column: 9)
!9239 = !DILocation(line: 2072, column: 13, scope: !9238)
!9240 = !DILocation(line: 2072, column: 39, scope: !9241)
!9241 = !DILexicalBlockFile(scope: !9238, file: !939, discriminator: 1)
!9242 = !DILocation(line: 2072, column: 27, scope: !9241)
!9243 = !DILocation(line: 2072, column: 16, scope: !9244)
!9244 = !DILexicalBlockFile(scope: !9241, file: !939, discriminator: 2)
!9245 = !DILocation(line: 2072, column: 16, scope: !9241)
!9246 = !DILocation(line: 2072, column: 9, scope: !9241)
!9247 = !DILocation(line: 2073, column: 25, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9238, file: !939, line: 2072, column: 52)
!9249 = !DILocation(line: 2073, column: 15, scope: !9248)
!9250 = !DILocation(line: 2073, column: 13, scope: !9248)
!9251 = !DILocation(line: 2074, column: 14, scope: !9252)
!9252 = distinct !DILexicalBlock(scope: !9248, file: !939, line: 2074, column: 13)
!9253 = !DILocation(line: 2074, column: 13, scope: !9248)
!9254 = !DILocation(line: 2075, column: 17, scope: !9255)
!9255 = distinct !DILexicalBlock(scope: !9252, file: !939, line: 2074, column: 19)
!9256 = !DILocation(line: 2076, column: 13, scope: !9255)
!9257 = !DILocation(line: 2078, column: 26, scope: !9248)
!9258 = !DILocation(line: 2078, column: 15, scope: !9248)
!9259 = !DILocation(line: 2078, column: 13, scope: !9248)
!9260 = !DILocation(line: 2079, column: 5, scope: !9248)
!9261 = !DILocation(line: 2081, column: 9, scope: !9262)
!9262 = distinct !DILexicalBlock(scope: !9209, file: !939, line: 2081, column: 9)
!9263 = !DILocation(line: 2081, column: 13, scope: !9262)
!9264 = !DILocation(line: 2081, column: 23, scope: !9265)
!9265 = !DILexicalBlockFile(scope: !9262, file: !939, discriminator: 1)
!9266 = !DILocation(line: 2081, column: 16, scope: !9265)
!9267 = !DILocation(line: 2081, column: 9, scope: !9265)
!9268 = !DILocation(line: 2082, column: 57, scope: !9262)
!9269 = !DILocation(line: 2082, column: 62, scope: !9262)
!9270 = !DILocation(line: 2082, column: 67, scope: !9262)
!9271 = !DILocation(line: 2082, column: 32, scope: !9262)
!9272 = !DILocation(line: 2082, column: 9, scope: !9262)
!9273 = !DILocation(line: 2082, column: 14, scope: !9262)
!9274 = !DILocation(line: 2082, column: 30, scope: !9262)
!9275 = !DILocation(line: 2084, column: 42, scope: !9262)
!9276 = !DILocation(line: 2084, column: 47, scope: !9262)
!9277 = !DILocation(line: 2084, column: 32, scope: !9262)
!9278 = !DILocation(line: 2084, column: 9, scope: !9262)
!9279 = !DILocation(line: 2084, column: 14, scope: !9262)
!9280 = !DILocation(line: 2084, column: 30, scope: !9262)
!9281 = !DILocation(line: 2086, column: 10, scope: !9282)
!9282 = distinct !DILexicalBlock(scope: !9209, file: !939, line: 2086, column: 9)
!9283 = !DILocation(line: 2086, column: 15, scope: !9282)
!9284 = !DILocation(line: 2086, column: 9, scope: !9209)
!9285 = !DILocation(line: 2087, column: 13, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9282, file: !939, line: 2086, column: 32)
!9287 = !DILocation(line: 2088, column: 9, scope: !9286)
!9288 = !DILocation(line: 2086, column: 15, scope: !9289)
!9289 = !DILexicalBlockFile(scope: !9282, file: !939, discriminator: 1)
!9290 = !DILocation(line: 2092, column: 14, scope: !9209)
!9291 = !DILocation(line: 2092, column: 5, scope: !9209)
!9292 = !DILocation(line: 2093, column: 14, scope: !9209)
!9293 = !DILocation(line: 2093, column: 5, scope: !9209)
!9294 = !DILocation(line: 2095, column: 12, scope: !9209)
!9295 = !DILocation(line: 2095, column: 5, scope: !9209)
!9296 = distinct !DISubprogram(name: "format_name", scope: !939, file: !939, line: 1756, type: !9297, isLocal: true, isDefinition: true, scopeLine: 1757, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!9297 = !DISubroutineType(types: !9298)
!9298 = !{!981, !1008, !981, !981}
!9299 = !DILocalVariable(name: "buf", arg: 1, scope: !9296, file: !939, line: 1756, type: !1008)
!9300 = !DILocation(line: 1756, column: 30, scope: !9296)
!9301 = !DILocalVariable(name: "buf_len", arg: 2, scope: !9296, file: !939, line: 1756, type: !981)
!9302 = !DILocation(line: 1756, column: 39, scope: !9296)
!9303 = !DILocalVariable(name: "index", arg: 3, scope: !9296, file: !939, line: 1756, type: !981)
!9304 = !DILocation(line: 1756, column: 52, scope: !9296)
!9305 = !DILocalVariable(name: "proto", scope: !9296, file: !939, line: 1758, type: !1031)
!9306 = !DILocation(line: 1758, column: 17, scope: !9296)
!9307 = !DILocalVariable(name: "dir", scope: !9296, file: !939, line: 1758, type: !1031)
!9308 = !DILocation(line: 1758, column: 25, scope: !9296)
!9309 = !DILocalVariable(name: "orig_buf_dup", scope: !9296, file: !939, line: 1759, type: !1008)
!9310 = !DILocation(line: 1759, column: 11, scope: !9296)
!9311 = !DILocalVariable(name: "mod_buf", scope: !9296, file: !939, line: 1759, type: !1008)
!9312 = !DILocation(line: 1759, column: 32, scope: !9296)
!9313 = !DILocalVariable(name: "mod_buf_dup", scope: !9296, file: !939, line: 1759, type: !1008)
!9314 = !DILocation(line: 1759, column: 49, scope: !9296)
!9315 = !DILocalVariable(name: "ret", scope: !9296, file: !939, line: 1760, type: !981)
!9316 = !DILocation(line: 1760, column: 9, scope: !9296)
!9317 = !DILocation(line: 1762, column: 21, scope: !9318)
!9318 = distinct !DILexicalBlock(scope: !9296, file: !939, line: 1762, column: 9)
!9319 = !DILocation(line: 1762, column: 10, scope: !9318)
!9320 = !DILocation(line: 1762, column: 9, scope: !9296)
!9321 = !DILocation(line: 1763, column: 16, scope: !9318)
!9322 = !DILocation(line: 1763, column: 9, scope: !9318)
!9323 = !DILocation(line: 1765, column: 30, scope: !9296)
!9324 = !DILocation(line: 1765, column: 20, scope: !9296)
!9325 = !DILocation(line: 1765, column: 18, scope: !9296)
!9326 = !DILocation(line: 1766, column: 10, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !9296, file: !939, line: 1766, column: 9)
!9328 = !DILocation(line: 1766, column: 9, scope: !9296)
!9329 = !DILocation(line: 1767, column: 13, scope: !9330)
!9330 = distinct !DILexicalBlock(scope: !9327, file: !939, line: 1766, column: 24)
!9331 = !DILocation(line: 1768, column: 9, scope: !9330)
!9332 = !DILocation(line: 1771, column: 48, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9296, file: !939, line: 1771, column: 9)
!9334 = !DILocation(line: 1771, column: 67, scope: !9333)
!9335 = !DILocation(line: 1771, column: 9, scope: !9333)
!9336 = !DILocation(line: 1771, column: 74, scope: !9333)
!9337 = !DILocation(line: 1771, column: 9, scope: !9296)
!9338 = !DILocation(line: 1772, column: 13, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !9333, file: !939, line: 1771, column: 79)
!9340 = !DILocation(line: 1773, column: 9, scope: !9339)
!9341 = !DILocation(line: 1775, column: 16, scope: !9296)
!9342 = !DILocation(line: 1775, column: 21, scope: !9296)
!9343 = !DILocation(line: 1775, column: 30, scope: !9296)
!9344 = !DILocation(line: 1775, column: 5, scope: !9296)
!9345 = !DILocation(line: 1777, column: 37, scope: !9296)
!9346 = !DILocation(line: 1777, column: 13, scope: !9296)
!9347 = !DILocation(line: 1777, column: 11, scope: !9296)
!9348 = !DILocation(line: 1778, column: 22, scope: !9296)
!9349 = !DILocation(line: 1778, column: 11, scope: !9296)
!9350 = !DILocation(line: 1778, column: 9, scope: !9296)
!9351 = !DILocation(line: 1781, column: 20, scope: !9352)
!9352 = distinct !DILexicalBlock(scope: !9296, file: !939, line: 1781, column: 9)
!9353 = !DILocation(line: 1781, column: 9, scope: !9352)
!9354 = !DILocation(line: 1781, column: 31, scope: !9352)
!9355 = !DILocation(line: 1781, column: 34, scope: !9356)
!9356 = !DILexicalBlockFile(scope: !9352, file: !939, discriminator: 1)
!9357 = !DILocation(line: 1781, column: 40, scope: !9356)
!9358 = !DILocation(line: 1781, column: 51, scope: !9359)
!9359 = !DILexicalBlockFile(scope: !9352, file: !939, discriminator: 2)
!9360 = !DILocation(line: 1781, column: 44, scope: !9359)
!9361 = !DILocation(line: 1781, column: 9, scope: !9359)
!9362 = !DILocation(line: 1782, column: 33, scope: !9363)
!9363 = distinct !DILexicalBlock(scope: !9352, file: !939, line: 1781, column: 67)
!9364 = !DILocation(line: 1782, column: 23, scope: !9363)
!9365 = !DILocation(line: 1782, column: 21, scope: !9363)
!9366 = !DILocation(line: 1783, column: 14, scope: !9367)
!9367 = distinct !DILexicalBlock(scope: !9363, file: !939, line: 1783, column: 13)
!9368 = !DILocation(line: 1783, column: 13, scope: !9363)
!9369 = !DILocation(line: 1784, column: 17, scope: !9370)
!9370 = distinct !DILexicalBlock(scope: !9367, file: !939, line: 1783, column: 27)
!9371 = !DILocation(line: 1785, column: 13, scope: !9370)
!9372 = !DILocation(line: 1788, column: 26, scope: !9363)
!9373 = !DILocation(line: 1788, column: 15, scope: !9363)
!9374 = !DILocation(line: 1788, column: 13, scope: !9363)
!9375 = !DILocation(line: 1789, column: 24, scope: !9376)
!9376 = distinct !DILexicalBlock(scope: !9363, file: !939, line: 1789, column: 13)
!9377 = !DILocation(line: 1789, column: 13, scope: !9376)
!9378 = !DILocation(line: 1789, column: 29, scope: !9376)
!9379 = !DILocation(line: 1789, column: 35, scope: !9376)
!9380 = !DILocation(line: 1789, column: 39, scope: !9381)
!9381 = !DILexicalBlockFile(scope: !9376, file: !939, discriminator: 1)
!9382 = !DILocation(line: 1789, column: 38, scope: !9381)
!9383 = !DILocation(line: 1789, column: 43, scope: !9381)
!9384 = !DILocation(line: 1789, column: 13, scope: !9381)
!9385 = !DILocation(line: 1790, column: 20, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9376, file: !939, line: 1789, column: 54)
!9387 = !DILocation(line: 1790, column: 19, scope: !9386)
!9388 = !DILocation(line: 1790, column: 17, scope: !9386)
!9389 = !DILocation(line: 1791, column: 13, scope: !9386)
!9390 = !DILocation(line: 1793, column: 5, scope: !9363)
!9391 = !DILocation(line: 1781, column: 64, scope: !9392)
!9392 = !DILexicalBlockFile(scope: !9352, file: !939, discriminator: 3)
!9393 = !DILocation(line: 1796, column: 14, scope: !9296)
!9394 = !DILocation(line: 1796, column: 5, scope: !9296)
!9395 = !DILocation(line: 1797, column: 14, scope: !9296)
!9396 = !DILocation(line: 1797, column: 5, scope: !9296)
!9397 = !DILocation(line: 1798, column: 14, scope: !9296)
!9398 = !DILocation(line: 1798, column: 5, scope: !9296)
!9399 = !DILocation(line: 1799, column: 12, scope: !9296)
!9400 = !DILocation(line: 1799, column: 5, scope: !9296)
!9401 = !DILocation(line: 1800, column: 1, scope: !9296)
!9402 = distinct !DISubprogram(name: "append_postfix", scope: !939, file: !939, line: 1698, type: !9297, isLocal: true, isDefinition: true, scopeLine: 1699, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!9403 = !DILocalVariable(name: "name", arg: 1, scope: !9402, file: !939, line: 1698, type: !1008)
!9404 = !DILocation(line: 1698, column: 33, scope: !9402)
!9405 = !DILocalVariable(name: "name_buf_len", arg: 2, scope: !9402, file: !939, line: 1698, type: !981)
!9406 = !DILocation(line: 1698, column: 43, scope: !9402)
!9407 = !DILocalVariable(name: "i", arg: 3, scope: !9402, file: !939, line: 1698, type: !981)
!9408 = !DILocation(line: 1698, column: 61, scope: !9402)
!9409 = !DILocalVariable(name: "p", scope: !9402, file: !939, line: 1700, type: !1008)
!9410 = !DILocation(line: 1700, column: 11, scope: !9402)
!9411 = !DILocalVariable(name: "extension", scope: !9402, file: !939, line: 1701, type: !9412)
!9412 = !DICompositeType(tag: DW_TAG_array_type, baseType: !989, size: 80, align: 8, elements: !9413)
!9413 = !{!9414}
!9414 = !DISubrange(count: 10)
!9415 = !DILocation(line: 1701, column: 10, scope: !9402)
!9416 = !DILocation(line: 1703, column: 17, scope: !9402)
!9417 = !DILocation(line: 1703, column: 9, scope: !9402)
!9418 = !DILocation(line: 1703, column: 7, scope: !9402)
!9419 = !DILocation(line: 1704, column: 9, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !9402, file: !939, line: 1704, column: 9)
!9421 = !DILocation(line: 1704, column: 9, scope: !9402)
!9422 = !DILocation(line: 1705, column: 20, scope: !9423)
!9423 = distinct !DILexicalBlock(scope: !9420, file: !939, line: 1704, column: 12)
!9424 = !DILocation(line: 1705, column: 31, scope: !9423)
!9425 = !DILocation(line: 1705, column: 9, scope: !9423)
!9426 = !DILocation(line: 1706, column: 10, scope: !9423)
!9427 = !DILocation(line: 1706, column: 12, scope: !9423)
!9428 = !DILocation(line: 1707, column: 5, scope: !9423)
!9429 = !DILocation(line: 1709, column: 14, scope: !9402)
!9430 = !DILocation(line: 1709, column: 28, scope: !9402)
!9431 = !DILocation(line: 1709, column: 21, scope: !9402)
!9432 = !DILocation(line: 1709, column: 19, scope: !9402)
!9433 = !DILocation(line: 1709, column: 35, scope: !9402)
!9434 = !DILocation(line: 1709, column: 57, scope: !9402)
!9435 = !DILocation(line: 1709, column: 50, scope: !9436)
!9436 = !DILexicalBlockFile(scope: !9402, file: !939, discriminator: 1)
!9437 = !DILocation(line: 1709, column: 48, scope: !9402)
!9438 = !DILocation(line: 1709, column: 71, scope: !9402)
!9439 = !DILocation(line: 1709, column: 5, scope: !9440)
!9440 = !DILexicalBlockFile(scope: !9402, file: !939, discriminator: 2)
!9441 = !DILocation(line: 1711, column: 16, scope: !9442)
!9442 = distinct !DILexicalBlock(scope: !9402, file: !939, line: 1711, column: 9)
!9443 = !DILocation(line: 1711, column: 9, scope: !9442)
!9444 = !DILocation(line: 1711, column: 9, scope: !9402)
!9445 = !DILocation(line: 1712, column: 20, scope: !9442)
!9446 = !DILocation(line: 1712, column: 26, scope: !9442)
!9447 = !DILocation(line: 1712, column: 37, scope: !9442)
!9448 = !DILocation(line: 1712, column: 9, scope: !9442)
!9449 = !DILocation(line: 1714, column: 5, scope: !9402)
!9450 = distinct !DISubprogram(name: "sls_flag_check_duration_size_index", scope: !939, file: !939, line: 862, type: !9451, isLocal: true, isDefinition: true, scopeLine: 863, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!9451 = !DISubroutineType(types: !9452)
!9452 = !{!981, !2338}
!9453 = !DILocalVariable(name: "hls", arg: 1, scope: !9450, file: !939, line: 862, type: !2338)
!9454 = !DILocation(line: 862, column: 59, scope: !9450)
!9455 = !DILocalVariable(name: "ret", scope: !9450, file: !939, line: 864, type: !981)
!9456 = !DILocation(line: 864, column: 9, scope: !9450)
!9457 = !DILocation(line: 866, column: 9, scope: !9458)
!9458 = distinct !DILexicalBlock(scope: !9450, file: !939, line: 866, column: 9)
!9459 = !DILocation(line: 866, column: 14, scope: !9458)
!9460 = !DILocation(line: 866, column: 20, scope: !9458)
!9461 = !DILocation(line: 866, column: 9, scope: !9450)
!9462 = !DILocation(line: 867, column: 17, scope: !9463)
!9463 = distinct !DILexicalBlock(scope: !9458, file: !939, line: 866, column: 57)
!9464 = !DILocation(line: 867, column: 10, scope: !9463)
!9465 = !DILocation(line: 869, column: 14, scope: !9463)
!9466 = !DILocation(line: 870, column: 5, scope: !9463)
!9467 = !DILocation(line: 871, column: 9, scope: !9468)
!9468 = distinct !DILexicalBlock(scope: !9450, file: !939, line: 871, column: 9)
!9469 = !DILocation(line: 871, column: 14, scope: !9468)
!9470 = !DILocation(line: 871, column: 20, scope: !9468)
!9471 = !DILocation(line: 871, column: 9, scope: !9450)
!9472 = !DILocation(line: 872, column: 17, scope: !9473)
!9473 = distinct !DILexicalBlock(scope: !9468, file: !939, line: 871, column: 53)
!9474 = !DILocation(line: 872, column: 10, scope: !9473)
!9475 = !DILocation(line: 874, column: 14, scope: !9473)
!9476 = !DILocation(line: 875, column: 5, scope: !9473)
!9477 = !DILocation(line: 876, column: 9, scope: !9478)
!9478 = distinct !DILexicalBlock(scope: !9450, file: !939, line: 876, column: 9)
!9479 = !DILocation(line: 876, column: 14, scope: !9478)
!9480 = !DILocation(line: 876, column: 20, scope: !9478)
!9481 = !DILocation(line: 876, column: 9, scope: !9450)
!9482 = !DILocation(line: 877, column: 16, scope: !9483)
!9483 = distinct !DILexicalBlock(scope: !9478, file: !939, line: 876, column: 54)
!9484 = !DILocation(line: 877, column: 9, scope: !9483)
!9485 = !DILocation(line: 879, column: 13, scope: !9483)
!9486 = !DILocation(line: 880, column: 5, scope: !9483)
!9487 = !DILocation(line: 882, column: 12, scope: !9450)
!9488 = !DILocation(line: 882, column: 5, scope: !9450)
!9489 = distinct !DISubprogram(name: "sls_flag_check_duration_size", scope: !939, file: !939, line: 885, type: !9490, isLocal: true, isDefinition: true, scopeLine: 886, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!9490 = !DISubroutineType(types: !9491)
!9491 = !{!981, !2338, !2274}
!9492 = !DILocalVariable(name: "hls", arg: 1, scope: !9489, file: !939, line: 885, type: !2338)
!9493 = !DILocation(line: 885, column: 53, scope: !9489)
!9494 = !DILocalVariable(name: "vs", arg: 2, scope: !9489, file: !939, line: 885, type: !2274)
!9495 = !DILocation(line: 885, column: 73, scope: !9489)
!9496 = !DILocalVariable(name: "proto", scope: !9489, file: !939, line: 887, type: !1031)
!9497 = !DILocation(line: 887, column: 17, scope: !9489)
!9498 = !DILocation(line: 887, column: 49, scope: !9489)
!9499 = !DILocation(line: 887, column: 53, scope: !9489)
!9500 = !DILocation(line: 887, column: 25, scope: !9489)
!9501 = !DILocalVariable(name: "segment_renaming_ok", scope: !9489, file: !939, line: 888, type: !981)
!9502 = !DILocation(line: 888, column: 9, scope: !9489)
!9503 = !DILocation(line: 888, column: 31, scope: !9489)
!9504 = !DILocation(line: 888, column: 37, scope: !9489)
!9505 = !DILocation(line: 888, column: 48, scope: !9506)
!9506 = !DILexicalBlockFile(scope: !9489, file: !939, discriminator: 1)
!9507 = !DILocation(line: 888, column: 41, scope: !9506)
!9508 = !DILocation(line: 888, column: 40, scope: !9506)
!9509 = !DILocation(line: 888, column: 37, scope: !9510)
!9510 = !DILexicalBlockFile(scope: !9489, file: !939, discriminator: 2)
!9511 = !DILocation(line: 888, column: 9, scope: !9510)
!9512 = !DILocalVariable(name: "ret", scope: !9489, file: !939, line: 889, type: !981)
!9513 = !DILocation(line: 889, column: 9, scope: !9489)
!9514 = !DILocation(line: 891, column: 10, scope: !9515)
!9515 = distinct !DILexicalBlock(scope: !9489, file: !939, line: 891, column: 9)
!9516 = !DILocation(line: 891, column: 15, scope: !9515)
!9517 = !DILocation(line: 891, column: 21, scope: !9515)
!9518 = !DILocation(line: 891, column: 58, scope: !9515)
!9519 = !DILocation(line: 891, column: 62, scope: !9520)
!9520 = !DILexicalBlockFile(scope: !9515, file: !939, discriminator: 1)
!9521 = !DILocation(line: 891, column: 9, scope: !9520)
!9522 = !DILocation(line: 892, column: 17, scope: !9523)
!9523 = distinct !DILexicalBlock(scope: !9515, file: !939, line: 891, column: 83)
!9524 = !DILocation(line: 892, column: 10, scope: !9523)
!9525 = !DILocation(line: 894, column: 14, scope: !9523)
!9526 = !DILocation(line: 895, column: 5, scope: !9523)
!9527 = !DILocation(line: 896, column: 10, scope: !9528)
!9528 = distinct !DILexicalBlock(scope: !9489, file: !939, line: 896, column: 9)
!9529 = !DILocation(line: 896, column: 15, scope: !9528)
!9530 = !DILocation(line: 896, column: 21, scope: !9528)
!9531 = !DILocation(line: 896, column: 54, scope: !9528)
!9532 = !DILocation(line: 896, column: 58, scope: !9533)
!9533 = !DILexicalBlockFile(scope: !9528, file: !939, discriminator: 1)
!9534 = !DILocation(line: 896, column: 9, scope: !9533)
!9535 = !DILocation(line: 897, column: 17, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9528, file: !939, line: 896, column: 79)
!9537 = !DILocation(line: 897, column: 10, scope: !9536)
!9538 = !DILocation(line: 899, column: 14, scope: !9536)
!9539 = !DILocation(line: 900, column: 5, scope: !9536)
!9540 = !DILocation(line: 902, column: 12, scope: !9489)
!9541 = !DILocation(line: 902, column: 5, scope: !9489)
!9542 = distinct !DISubprogram(name: "hls_mux_init", scope: !939, file: !939, line: 697, type: !5830, isLocal: true, isDefinition: true, scopeLine: 698, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!9543 = !DILocalVariable(name: "s", arg: 1, scope: !9542, file: !939, line: 697, type: !2272)
!9544 = !DILocation(line: 697, column: 42, scope: !9542)
!9545 = !DILocalVariable(name: "vs", arg: 2, scope: !9542, file: !939, line: 697, type: !2274)
!9546 = !DILocation(line: 697, column: 60, scope: !9542)
!9547 = !DILocalVariable(name: "options", scope: !9542, file: !939, line: 699, type: !1479)
!9548 = !DILocation(line: 699, column: 19, scope: !9542)
!9549 = !DILocalVariable(name: "hls", scope: !9542, file: !939, line: 700, type: !2338)
!9550 = !DILocation(line: 700, column: 17, scope: !9542)
!9551 = !DILocation(line: 700, column: 23, scope: !9542)
!9552 = !DILocation(line: 700, column: 26, scope: !9542)
!9553 = !DILocalVariable(name: "oc", scope: !9542, file: !939, line: 701, type: !2272)
!9554 = !DILocation(line: 701, column: 22, scope: !9542)
!9555 = !DILocalVariable(name: "vtt_oc", scope: !9542, file: !939, line: 702, type: !2272)
!9556 = !DILocation(line: 702, column: 22, scope: !9542)
!9557 = !DILocalVariable(name: "byterange_mode", scope: !9542, file: !939, line: 703, type: !981)
!9558 = !DILocation(line: 703, column: 9, scope: !9542)
!9559 = !DILocation(line: 703, column: 27, scope: !9542)
!9560 = !DILocation(line: 703, column: 32, scope: !9542)
!9561 = !DILocation(line: 703, column: 38, scope: !9542)
!9562 = !DILocation(line: 703, column: 57, scope: !9542)
!9563 = !DILocation(line: 703, column: 61, scope: !9564)
!9564 = !DILexicalBlockFile(scope: !9542, file: !939, discriminator: 1)
!9565 = !DILocation(line: 703, column: 66, scope: !9564)
!9566 = !DILocation(line: 703, column: 79, scope: !9564)
!9567 = !DILocation(line: 703, column: 57, scope: !9564)
!9568 = !DILocation(line: 703, column: 57, scope: !9569)
!9569 = !DILexicalBlockFile(scope: !9542, file: !939, discriminator: 2)
!9570 = !DILocation(line: 703, column: 9, scope: !9569)
!9571 = !DILocalVariable(name: "i", scope: !9542, file: !939, line: 704, type: !981)
!9572 = !DILocation(line: 704, column: 9, scope: !9542)
!9573 = !DILocalVariable(name: "ret", scope: !9542, file: !939, line: 704, type: !981)
!9574 = !DILocation(line: 704, column: 12, scope: !9542)
!9575 = !DILocation(line: 706, column: 43, scope: !9542)
!9576 = !DILocation(line: 706, column: 47, scope: !9542)
!9577 = !DILocation(line: 706, column: 52, scope: !9542)
!9578 = !DILocation(line: 706, column: 56, scope: !9542)
!9579 = !DILocation(line: 706, column: 11, scope: !9542)
!9580 = !DILocation(line: 706, column: 9, scope: !9542)
!9581 = !DILocation(line: 707, column: 9, scope: !9582)
!9582 = distinct !DILexicalBlock(scope: !9542, file: !939, line: 707, column: 9)
!9583 = !DILocation(line: 707, column: 13, scope: !9582)
!9584 = !DILocation(line: 707, column: 9, scope: !9542)
!9585 = !DILocation(line: 708, column: 16, scope: !9582)
!9586 = !DILocation(line: 708, column: 9, scope: !9582)
!9587 = !DILocation(line: 709, column: 10, scope: !9542)
!9588 = !DILocation(line: 709, column: 14, scope: !9542)
!9589 = !DILocation(line: 709, column: 8, scope: !9542)
!9590 = !DILocation(line: 711, column: 15, scope: !9542)
!9591 = !DILocation(line: 711, column: 5, scope: !9542)
!9592 = !DILocation(line: 711, column: 9, scope: !9542)
!9593 = !DILocation(line: 711, column: 13, scope: !9542)
!9594 = !DILocation(line: 712, column: 10, scope: !9595)
!9595 = distinct !DILexicalBlock(scope: !9542, file: !939, line: 712, column: 9)
!9596 = !DILocation(line: 712, column: 14, scope: !9595)
!9597 = !DILocation(line: 712, column: 9, scope: !9542)
!9598 = !DILocation(line: 713, column: 9, scope: !9595)
!9599 = !DILocation(line: 715, column: 19, scope: !9542)
!9600 = !DILocation(line: 715, column: 23, scope: !9542)
!9601 = !DILocation(line: 715, column: 5, scope: !9542)
!9602 = !DILocation(line: 715, column: 9, scope: !9542)
!9603 = !DILocation(line: 715, column: 17, scope: !9542)
!9604 = !DILocation(line: 716, column: 5, scope: !9542)
!9605 = !DILocation(line: 716, column: 9, scope: !9542)
!9606 = !DILocation(line: 716, column: 30, scope: !9542)
!9607 = !DILocation(line: 716, column: 33, scope: !9542)
!9608 = !DILocation(line: 717, column: 21, scope: !9542)
!9609 = !DILocation(line: 717, column: 24, scope: !9542)
!9610 = !DILocation(line: 717, column: 5, scope: !9542)
!9611 = !DILocation(line: 717, column: 9, scope: !9542)
!9612 = !DILocation(line: 717, column: 19, scope: !9542)
!9613 = !DILocation(line: 718, column: 18, scope: !9542)
!9614 = !DILocation(line: 718, column: 21, scope: !9542)
!9615 = !DILocation(line: 718, column: 5, scope: !9542)
!9616 = !DILocation(line: 718, column: 9, scope: !9542)
!9617 = !DILocation(line: 718, column: 16, scope: !9542)
!9618 = !DILocation(line: 719, column: 19, scope: !9542)
!9619 = !DILocation(line: 719, column: 22, scope: !9542)
!9620 = !DILocation(line: 719, column: 5, scope: !9542)
!9621 = !DILocation(line: 719, column: 9, scope: !9542)
!9622 = !DILocation(line: 719, column: 17, scope: !9542)
!9623 = !DILocation(line: 720, column: 20, scope: !9542)
!9624 = !DILocation(line: 720, column: 23, scope: !9542)
!9625 = !DILocation(line: 720, column: 5, scope: !9542)
!9626 = !DILocation(line: 720, column: 9, scope: !9542)
!9627 = !DILocation(line: 720, column: 18, scope: !9542)
!9628 = !DILocation(line: 721, column: 19, scope: !9542)
!9629 = !DILocation(line: 721, column: 23, scope: !9542)
!9630 = !DILocation(line: 721, column: 33, scope: !9542)
!9631 = !DILocation(line: 721, column: 36, scope: !9542)
!9632 = !DILocation(line: 721, column: 5, scope: !9542)
!9633 = !DILocation(line: 723, column: 8, scope: !9634)
!9634 = distinct !DILexicalBlock(scope: !9542, file: !939, line: 723, column: 8)
!9635 = !DILocation(line: 723, column: 12, scope: !9634)
!9636 = !DILocation(line: 723, column: 8, scope: !9542)
!9637 = !DILocation(line: 724, column: 47, scope: !9638)
!9638 = distinct !DILexicalBlock(scope: !9634, file: !939, line: 723, column: 25)
!9639 = !DILocation(line: 724, column: 51, scope: !9638)
!9640 = !DILocation(line: 724, column: 60, scope: !9638)
!9641 = !DILocation(line: 724, column: 64, scope: !9638)
!9642 = !DILocation(line: 724, column: 15, scope: !9638)
!9643 = !DILocation(line: 724, column: 13, scope: !9638)
!9644 = !DILocation(line: 725, column: 13, scope: !9645)
!9645 = distinct !DILexicalBlock(scope: !9638, file: !939, line: 725, column: 13)
!9646 = !DILocation(line: 725, column: 17, scope: !9645)
!9647 = !DILocation(line: 725, column: 13, scope: !9638)
!9648 = !DILocation(line: 726, column: 20, scope: !9645)
!9649 = !DILocation(line: 726, column: 13, scope: !9645)
!9650 = !DILocation(line: 727, column: 18, scope: !9638)
!9651 = !DILocation(line: 727, column: 22, scope: !9638)
!9652 = !DILocation(line: 727, column: 16, scope: !9638)
!9653 = !DILocation(line: 728, column: 27, scope: !9638)
!9654 = !DILocation(line: 728, column: 31, scope: !9638)
!9655 = !DILocation(line: 728, column: 9, scope: !9638)
!9656 = !DILocation(line: 728, column: 17, scope: !9638)
!9657 = !DILocation(line: 728, column: 25, scope: !9638)
!9658 = !DILocation(line: 729, column: 23, scope: !9638)
!9659 = !DILocation(line: 729, column: 31, scope: !9638)
!9660 = !DILocation(line: 729, column: 41, scope: !9638)
!9661 = !DILocation(line: 729, column: 44, scope: !9638)
!9662 = !DILocation(line: 729, column: 9, scope: !9638)
!9663 = !DILocation(line: 730, column: 5, scope: !9638)
!9664 = !DILocation(line: 732, column: 12, scope: !9665)
!9665 = distinct !DILexicalBlock(scope: !9542, file: !939, line: 732, column: 5)
!9666 = !DILocation(line: 732, column: 10, scope: !9665)
!9667 = !DILocation(line: 732, column: 17, scope: !9668)
!9668 = !DILexicalBlockFile(scope: !9669, file: !939, discriminator: 1)
!9669 = distinct !DILexicalBlock(scope: !9665, file: !939, line: 732, column: 5)
!9670 = !DILocation(line: 732, column: 21, scope: !9668)
!9671 = !DILocation(line: 732, column: 25, scope: !9668)
!9672 = !DILocation(line: 732, column: 19, scope: !9668)
!9673 = !DILocation(line: 732, column: 5, scope: !9668)
!9674 = !DILocalVariable(name: "st", scope: !9675, file: !939, line: 733, type: !1308)
!9675 = distinct !DILexicalBlock(scope: !9669, file: !939, line: 732, column: 42)
!9676 = !DILocation(line: 733, column: 19, scope: !9675)
!9677 = !DILocalVariable(name: "loc", scope: !9675, file: !939, line: 734, type: !2272)
!9678 = !DILocation(line: 734, column: 26, scope: !9675)
!9679 = !DILocation(line: 735, column: 25, scope: !9680)
!9680 = distinct !DILexicalBlock(scope: !9675, file: !939, line: 735, column: 13)
!9681 = !DILocation(line: 735, column: 13, scope: !9680)
!9682 = !DILocation(line: 735, column: 17, scope: !9680)
!9683 = !DILocation(line: 735, column: 29, scope: !9680)
!9684 = !DILocation(line: 735, column: 39, scope: !9680)
!9685 = !DILocation(line: 735, column: 50, scope: !9680)
!9686 = !DILocation(line: 735, column: 13, scope: !9675)
!9687 = !DILocation(line: 736, column: 19, scope: !9680)
!9688 = !DILocation(line: 736, column: 17, scope: !9680)
!9689 = !DILocation(line: 736, column: 13, scope: !9680)
!9690 = !DILocation(line: 738, column: 19, scope: !9680)
!9691 = !DILocation(line: 738, column: 17, scope: !9680)
!9692 = !DILocation(line: 740, column: 40, scope: !9693)
!9693 = distinct !DILexicalBlock(scope: !9675, file: !939, line: 740, column: 13)
!9694 = !DILocation(line: 740, column: 20, scope: !9693)
!9695 = !DILocation(line: 740, column: 18, scope: !9693)
!9696 = !DILocation(line: 740, column: 13, scope: !9675)
!9697 = !DILocation(line: 741, column: 13, scope: !9693)
!9698 = !DILocation(line: 742, column: 33, scope: !9675)
!9699 = !DILocation(line: 742, column: 37, scope: !9675)
!9700 = !DILocation(line: 742, column: 59, scope: !9675)
!9701 = !DILocation(line: 742, column: 47, scope: !9675)
!9702 = !DILocation(line: 742, column: 51, scope: !9675)
!9703 = !DILocation(line: 742, column: 63, scope: !9675)
!9704 = !DILocation(line: 742, column: 9, scope: !9675)
!9705 = !DILocation(line: 743, column: 14, scope: !9706)
!9706 = distinct !DILexicalBlock(scope: !9675, file: !939, line: 743, column: 13)
!9707 = !DILocation(line: 743, column: 18, scope: !9706)
!9708 = !DILocation(line: 743, column: 27, scope: !9706)
!9709 = !DILocation(line: 743, column: 37, scope: !9706)
!9710 = !DILocation(line: 744, column: 30, scope: !9706)
!9711 = !DILocation(line: 744, column: 34, scope: !9706)
!9712 = !DILocation(line: 744, column: 43, scope: !9706)
!9713 = !DILocation(line: 744, column: 66, scope: !9706)
!9714 = !DILocation(line: 744, column: 54, scope: !9706)
!9715 = !DILocation(line: 744, column: 58, scope: !9706)
!9716 = !DILocation(line: 744, column: 70, scope: !9706)
!9717 = !DILocation(line: 744, column: 80, scope: !9706)
!9718 = !DILocation(line: 744, column: 13, scope: !9706)
!9719 = !DILocation(line: 744, column: 94, scope: !9706)
!9720 = !DILocation(line: 744, column: 98, scope: !9706)
!9721 = !DILocation(line: 744, column: 108, scope: !9706)
!9722 = !DILocation(line: 744, column: 91, scope: !9706)
!9723 = !DILocation(line: 744, column: 117, scope: !9706)
!9724 = !DILocation(line: 745, column: 30, scope: !9706)
!9725 = !DILocation(line: 745, column: 34, scope: !9706)
!9726 = !DILocation(line: 745, column: 43, scope: !9706)
!9727 = !DILocation(line: 745, column: 66, scope: !9706)
!9728 = !DILocation(line: 745, column: 54, scope: !9706)
!9729 = !DILocation(line: 745, column: 58, scope: !9706)
!9730 = !DILocation(line: 745, column: 70, scope: !9706)
!9731 = !DILocation(line: 745, column: 80, scope: !9706)
!9732 = !DILocation(line: 745, column: 13, scope: !9706)
!9733 = !DILocation(line: 745, column: 90, scope: !9706)
!9734 = !DILocation(line: 743, column: 13, scope: !9735)
!9735 = !DILexicalBlockFile(scope: !9675, file: !939, discriminator: 1)
!9736 = !DILocation(line: 746, column: 51, scope: !9737)
!9737 = distinct !DILexicalBlock(scope: !9706, file: !939, line: 745, column: 96)
!9738 = !DILocation(line: 746, column: 39, scope: !9737)
!9739 = !DILocation(line: 746, column: 43, scope: !9737)
!9740 = !DILocation(line: 746, column: 55, scope: !9737)
!9741 = !DILocation(line: 746, column: 65, scope: !9737)
!9742 = !DILocation(line: 746, column: 13, scope: !9737)
!9743 = !DILocation(line: 746, column: 17, scope: !9737)
!9744 = !DILocation(line: 746, column: 27, scope: !9737)
!9745 = !DILocation(line: 746, column: 37, scope: !9737)
!9746 = !DILocation(line: 747, column: 9, scope: !9737)
!9747 = !DILocation(line: 748, column: 13, scope: !9748)
!9748 = distinct !DILexicalBlock(scope: !9706, file: !939, line: 747, column: 16)
!9749 = !DILocation(line: 748, column: 17, scope: !9748)
!9750 = !DILocation(line: 748, column: 27, scope: !9748)
!9751 = !DILocation(line: 748, column: 37, scope: !9748)
!9752 = !DILocation(line: 751, column: 9, scope: !9675)
!9753 = !DILocation(line: 751, column: 13, scope: !9675)
!9754 = !DILocation(line: 751, column: 47, scope: !9675)
!9755 = !DILocation(line: 751, column: 35, scope: !9675)
!9756 = !DILocation(line: 751, column: 39, scope: !9675)
!9757 = !DILocation(line: 751, column: 51, scope: !9675)
!9758 = !DILocation(line: 752, column: 9, scope: !9675)
!9759 = !DILocation(line: 752, column: 13, scope: !9675)
!9760 = !DILocation(line: 752, column: 37, scope: !9675)
!9761 = !DILocation(line: 752, column: 25, scope: !9675)
!9762 = !DILocation(line: 752, column: 29, scope: !9675)
!9763 = !DILocation(line: 752, column: 41, scope: !9675)
!9764 = !DILocation(line: 753, column: 23, scope: !9675)
!9765 = !DILocation(line: 753, column: 27, scope: !9675)
!9766 = !DILocation(line: 753, column: 49, scope: !9675)
!9767 = !DILocation(line: 753, column: 37, scope: !9675)
!9768 = !DILocation(line: 753, column: 41, scope: !9675)
!9769 = !DILocation(line: 753, column: 53, scope: !9675)
!9770 = !DILocation(line: 753, column: 9, scope: !9675)
!9771 = !DILocation(line: 754, column: 5, scope: !9675)
!9772 = !DILocation(line: 732, column: 38, scope: !9773)
!9773 = !DILexicalBlockFile(scope: !9669, file: !939, discriminator: 2)
!9774 = !DILocation(line: 732, column: 5, scope: !9773)
!9775 = distinct !{!9775, !9776}
!9776 = !DILocation(line: 732, column: 5, scope: !9542)
!9777 = !DILocation(line: 756, column: 5, scope: !9542)
!9778 = !DILocation(line: 756, column: 9, scope: !9542)
!9779 = !DILocation(line: 756, column: 25, scope: !9542)
!9780 = !DILocation(line: 757, column: 5, scope: !9542)
!9781 = !DILocation(line: 757, column: 9, scope: !9542)
!9782 = !DILocation(line: 757, column: 19, scope: !9542)
!9783 = !DILocation(line: 758, column: 5, scope: !9542)
!9784 = !DILocation(line: 758, column: 9, scope: !9542)
!9785 = !DILocation(line: 758, column: 19, scope: !9542)
!9786 = !DILocation(line: 760, column: 9, scope: !9787)
!9787 = distinct !DILexicalBlock(scope: !9542, file: !939, line: 760, column: 9)
!9788 = !DILocation(line: 760, column: 14, scope: !9787)
!9789 = !DILocation(line: 760, column: 27, scope: !9787)
!9790 = !DILocation(line: 760, column: 9, scope: !9542)
!9791 = !DILocation(line: 761, column: 13, scope: !9792)
!9792 = distinct !DILexicalBlock(scope: !9793, file: !939, line: 761, column: 13)
!9793 = distinct !DILexicalBlock(scope: !9787, file: !939, line: 760, column: 49)
!9794 = !DILocation(line: 761, column: 18, scope: !9792)
!9795 = !DILocation(line: 761, column: 31, scope: !9792)
!9796 = !DILocation(line: 761, column: 13, scope: !9793)
!9797 = !DILocation(line: 762, column: 20, scope: !9798)
!9798 = distinct !DILexicalBlock(scope: !9792, file: !939, line: 761, column: 36)
!9799 = !DILocation(line: 762, column: 13, scope: !9798)
!9800 = !DILocation(line: 763, column: 13, scope: !9798)
!9801 = !DILocation(line: 766, column: 9, scope: !9793)
!9802 = !DILocation(line: 766, column: 13, scope: !9793)
!9803 = !DILocation(line: 766, column: 29, scope: !9793)
!9804 = !DILocation(line: 767, column: 9, scope: !9793)
!9805 = !DILocation(line: 767, column: 13, scope: !9793)
!9806 = !DILocation(line: 767, column: 31, scope: !9793)
!9807 = !DILocation(line: 768, column: 26, scope: !9793)
!9808 = !DILocation(line: 768, column: 39, scope: !9793)
!9809 = !DILocation(line: 768, column: 9, scope: !9793)
!9810 = !DILocation(line: 769, column: 39, scope: !9811)
!9811 = distinct !DILexicalBlock(scope: !9793, file: !939, line: 769, column: 13)
!9812 = !DILocation(line: 769, column: 43, scope: !9811)
!9813 = !DILocation(line: 769, column: 20, scope: !9811)
!9814 = !DILocation(line: 769, column: 18, scope: !9811)
!9815 = !DILocation(line: 769, column: 48, scope: !9811)
!9816 = !DILocation(line: 769, column: 13, scope: !9793)
!9817 = !DILocation(line: 770, column: 20, scope: !9811)
!9818 = !DILocation(line: 770, column: 13, scope: !9811)
!9819 = !DILocation(line: 772, column: 13, scope: !9820)
!9820 = distinct !DILexicalBlock(scope: !9793, file: !939, line: 772, column: 13)
!9821 = !DILocation(line: 772, column: 13, scope: !9793)
!9822 = !DILocation(line: 773, column: 34, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !9820, file: !939, line: 772, column: 29)
!9824 = !DILocation(line: 773, column: 38, scope: !9823)
!9825 = !DILocation(line: 773, column: 42, scope: !9823)
!9826 = !DILocation(line: 773, column: 47, scope: !9823)
!9827 = !DILocation(line: 773, column: 51, scope: !9823)
!9828 = !DILocation(line: 773, column: 19, scope: !9823)
!9829 = !DILocation(line: 773, column: 17, scope: !9823)
!9830 = !DILocation(line: 774, column: 9, scope: !9823)
!9831 = !DILocation(line: 775, column: 34, scope: !9832)
!9832 = distinct !DILexicalBlock(scope: !9820, file: !939, line: 774, column: 16)
!9833 = !DILocation(line: 775, column: 38, scope: !9832)
!9834 = !DILocation(line: 775, column: 42, scope: !9832)
!9835 = !DILocation(line: 775, column: 47, scope: !9832)
!9836 = !DILocation(line: 775, column: 51, scope: !9832)
!9837 = !DILocation(line: 775, column: 19, scope: !9832)
!9838 = !DILocation(line: 775, column: 17, scope: !9832)
!9839 = !DILocation(line: 777, column: 9, scope: !9793)
!9840 = !DILocation(line: 778, column: 13, scope: !9841)
!9841 = distinct !DILexicalBlock(scope: !9793, file: !939, line: 778, column: 13)
!9842 = !DILocation(line: 778, column: 17, scope: !9841)
!9843 = !DILocation(line: 778, column: 13, scope: !9793)
!9844 = !DILocation(line: 779, column: 20, scope: !9845)
!9845 = distinct !DILexicalBlock(scope: !9841, file: !939, line: 778, column: 22)
!9846 = !DILocation(line: 779, column: 60, scope: !9845)
!9847 = !DILocation(line: 779, column: 64, scope: !9845)
!9848 = !DILocation(line: 779, column: 13, scope: !9845)
!9849 = !DILocation(line: 780, column: 20, scope: !9845)
!9850 = !DILocation(line: 780, column: 13, scope: !9845)
!9851 = !DILocation(line: 783, column: 13, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9793, file: !939, line: 783, column: 13)
!9853 = !DILocation(line: 783, column: 18, scope: !9852)
!9854 = !DILocation(line: 783, column: 13, scope: !9793)
!9855 = !DILocation(line: 784, column: 41, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !9852, file: !939, line: 783, column: 38)
!9857 = !DILocation(line: 784, column: 46, scope: !9856)
!9858 = !DILocation(line: 784, column: 62, scope: !9856)
!9859 = !DILocation(line: 784, column: 67, scope: !9856)
!9860 = !DILocation(line: 784, column: 19, scope: !9856)
!9861 = !DILocation(line: 784, column: 17, scope: !9856)
!9862 = !DILocation(line: 785, column: 17, scope: !9863)
!9863 = distinct !DILexicalBlock(scope: !9856, file: !939, line: 785, column: 17)
!9864 = !DILocation(line: 785, column: 21, scope: !9863)
!9865 = !DILocation(line: 785, column: 17, scope: !9856)
!9866 = !DILocation(line: 786, column: 24, scope: !9867)
!9867 = distinct !DILexicalBlock(scope: !9863, file: !939, line: 785, column: 26)
!9868 = !DILocation(line: 787, column: 24, scope: !9867)
!9869 = !DILocation(line: 787, column: 29, scope: !9867)
!9870 = !DILocation(line: 786, column: 17, scope: !9867)
!9871 = !DILocation(line: 788, column: 24, scope: !9867)
!9872 = !DILocation(line: 788, column: 17, scope: !9867)
!9873 = !DILocation(line: 790, column: 9, scope: !9856)
!9874 = !DILocation(line: 792, column: 32, scope: !9793)
!9875 = !DILocation(line: 792, column: 37, scope: !9793)
!9876 = !DILocation(line: 792, column: 9, scope: !9793)
!9877 = !DILocation(line: 793, column: 9, scope: !9793)
!9878 = !DILocation(line: 794, column: 9, scope: !9793)
!9879 = !DILocation(line: 795, column: 36, scope: !9793)
!9880 = !DILocation(line: 795, column: 15, scope: !9793)
!9881 = !DILocation(line: 795, column: 13, scope: !9793)
!9882 = !DILocation(line: 796, column: 13, scope: !9883)
!9883 = distinct !DILexicalBlock(scope: !9793, file: !939, line: 796, column: 13)
!9884 = !DILocation(line: 796, column: 17, scope: !9883)
!9885 = !DILocation(line: 796, column: 13, scope: !9793)
!9886 = !DILocation(line: 797, column: 20, scope: !9883)
!9887 = !DILocation(line: 797, column: 13, scope: !9883)
!9888 = !DILocation(line: 798, column: 27, scope: !9889)
!9889 = distinct !DILexicalBlock(scope: !9793, file: !939, line: 798, column: 13)
!9890 = !DILocation(line: 798, column: 13, scope: !9889)
!9891 = !DILocation(line: 798, column: 13, scope: !9793)
!9892 = !DILocation(line: 799, column: 20, scope: !9893)
!9893 = distinct !DILexicalBlock(scope: !9889, file: !939, line: 798, column: 37)
!9894 = !DILocation(line: 799, column: 95, scope: !9893)
!9895 = !DILocation(line: 799, column: 100, scope: !9893)
!9896 = !DILocation(line: 799, column: 13, scope: !9893)
!9897 = !DILocation(line: 800, column: 13, scope: !9893)
!9898 = !DILocation(line: 801, column: 13, scope: !9893)
!9899 = !DILocation(line: 803, column: 20, scope: !9793)
!9900 = !DILocation(line: 803, column: 24, scope: !9793)
!9901 = !DILocation(line: 803, column: 9, scope: !9793)
!9902 = !DILocation(line: 804, column: 9, scope: !9793)
!9903 = !DILocation(line: 805, column: 5, scope: !9793)
!9904 = !DILocation(line: 806, column: 5, scope: !9542)
!9905 = !DILocation(line: 807, column: 1, scope: !9542)
!9906 = distinct !DISubprogram(name: "parse_playlist", scope: !939, file: !939, line: 1048, type: !9907, isLocal: true, isDefinition: true, scopeLine: 1049, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!9907 = !DISubroutineType(types: !9908)
!9908 = !{!981, !2272, !1031, !2274}
!9909 = !DILocation(line: 557, column: 77, scope: !2600, inlinedAt: !9910)
!9910 = distinct !DILocation(line: 1123, column: 33, scope: !9911)
!9911 = distinct !DILexicalBlock(scope: !9912, file: !939, line: 1115, column: 29)
!9912 = distinct !DILexicalBlock(scope: !9913, file: !939, line: 1115, column: 17)
!9913 = distinct !DILexicalBlock(scope: !9914, file: !939, line: 1114, column: 29)
!9914 = distinct !DILexicalBlock(scope: !9915, file: !939, line: 1114, column: 20)
!9915 = distinct !DILexicalBlock(scope: !9916, file: !939, line: 1112, column: 20)
!9916 = distinct !DILexicalBlock(scope: !9917, file: !939, line: 1089, column: 20)
!9917 = distinct !DILexicalBlock(scope: !9918, file: !939, line: 1086, column: 20)
!9918 = distinct !DILexicalBlock(scope: !9919, file: !939, line: 1083, column: 20)
!9919 = distinct !DILexicalBlock(scope: !9920, file: !939, line: 1072, column: 13)
!9920 = distinct !DILexicalBlock(scope: !9906, file: !939, line: 1070, column: 28)
!9921 = !DILocalVariable(name: "s", arg: 1, scope: !9906, file: !939, line: 1048, type: !2272)
!9922 = !DILocation(line: 1048, column: 44, scope: !9906)
!9923 = !DILocalVariable(name: "url", arg: 2, scope: !9906, file: !939, line: 1048, type: !1031)
!9924 = !DILocation(line: 1048, column: 59, scope: !9906)
!9925 = !DILocalVariable(name: "vs", arg: 3, scope: !9906, file: !939, line: 1048, type: !2274)
!9926 = !DILocation(line: 1048, column: 79, scope: !9906)
!9927 = !DILocalVariable(name: "hls", scope: !9906, file: !939, line: 1050, type: !2338)
!9928 = !DILocation(line: 1050, column: 17, scope: !9906)
!9929 = !DILocation(line: 1050, column: 23, scope: !9906)
!9930 = !DILocation(line: 1050, column: 26, scope: !9906)
!9931 = !DILocalVariable(name: "in", scope: !9906, file: !939, line: 1051, type: !1240)
!9932 = !DILocation(line: 1051, column: 18, scope: !9906)
!9933 = !DILocalVariable(name: "ret", scope: !9906, file: !939, line: 1052, type: !981)
!9934 = !DILocation(line: 1052, column: 9, scope: !9906)
!9935 = !DILocalVariable(name: "is_segment", scope: !9906, file: !939, line: 1052, type: !981)
!9936 = !DILocation(line: 1052, column: 18, scope: !9906)
!9937 = !DILocalVariable(name: "new_start_pos", scope: !9906, file: !939, line: 1053, type: !976)
!9938 = !DILocation(line: 1053, column: 13, scope: !9906)
!9939 = !DILocalVariable(name: "line", scope: !9906, file: !939, line: 1054, type: !988)
!9940 = !DILocation(line: 1054, column: 10, scope: !9906)
!9941 = !DILocalVariable(name: "ptr", scope: !9906, file: !939, line: 1055, type: !1031)
!9942 = !DILocation(line: 1055, column: 17, scope: !9906)
!9943 = !DILocalVariable(name: "end", scope: !9906, file: !939, line: 1056, type: !1031)
!9944 = !DILocation(line: 1056, column: 17, scope: !9906)
!9945 = !DILocation(line: 1058, column: 41, scope: !9946)
!9946 = distinct !DILexicalBlock(scope: !9906, file: !939, line: 1058, column: 9)
!9947 = !DILocation(line: 1059, column: 37, scope: !9946)
!9948 = !DILocation(line: 1059, column: 40, scope: !9946)
!9949 = !DILocation(line: 1060, column: 36, scope: !9946)
!9950 = !DILocation(line: 1060, column: 39, scope: !9946)
!9951 = !DILocation(line: 1060, column: 59, scope: !9946)
!9952 = !DILocation(line: 1060, column: 62, scope: !9946)
!9953 = !DILocation(line: 1058, column: 16, scope: !9946)
!9954 = !DILocation(line: 1058, column: 14, scope: !9946)
!9955 = !DILocation(line: 1060, column: 83, scope: !9946)
!9956 = !DILocation(line: 1058, column: 9, scope: !9906)
!9957 = !DILocation(line: 1061, column: 16, scope: !9946)
!9958 = !DILocation(line: 1061, column: 9, scope: !9946)
!9959 = !DILocation(line: 1063, column: 23, scope: !9906)
!9960 = !DILocation(line: 1063, column: 27, scope: !9906)
!9961 = !DILocation(line: 1063, column: 5, scope: !9906)
!9962 = !DILocation(line: 1064, column: 16, scope: !9963)
!9963 = distinct !DILexicalBlock(scope: !9906, file: !939, line: 1064, column: 9)
!9964 = !DILocation(line: 1064, column: 9, scope: !9963)
!9965 = !DILocation(line: 1064, column: 9, scope: !9906)
!9966 = !DILocation(line: 1065, column: 13, scope: !9967)
!9967 = distinct !DILexicalBlock(scope: !9963, file: !939, line: 1064, column: 34)
!9968 = !DILocation(line: 1066, column: 9, scope: !9967)
!9969 = !DILocation(line: 1069, column: 5, scope: !9906)
!9970 = !DILocation(line: 1069, column: 9, scope: !9906)
!9971 = !DILocation(line: 1069, column: 23, scope: !9906)
!9972 = !DILocation(line: 1070, column: 5, scope: !9906)
!9973 = !DILocation(line: 1070, column: 23, scope: !9974)
!9974 = !DILexicalBlockFile(scope: !9906, file: !939, discriminator: 1)
!9975 = !DILocation(line: 1070, column: 13, scope: !9974)
!9976 = !DILocation(line: 1070, column: 12, scope: !9974)
!9977 = !DILocation(line: 1070, column: 5, scope: !9974)
!9978 = !DILocation(line: 1071, column: 27, scope: !9920)
!9979 = !DILocation(line: 1071, column: 31, scope: !9920)
!9980 = !DILocation(line: 1071, column: 9, scope: !9920)
!9981 = !DILocation(line: 1072, column: 25, scope: !9919)
!9982 = !DILocation(line: 1072, column: 13, scope: !9919)
!9983 = !DILocation(line: 1072, column: 13, scope: !9920)
!9984 = !DILocalVariable(name: "tmp_sequence", scope: !9985, file: !939, line: 1073, type: !976)
!9985 = distinct !DILexicalBlock(scope: !9919, file: !939, line: 1072, column: 64)
!9986 = !DILocation(line: 1073, column: 21, scope: !9985)
!9987 = !DILocation(line: 1073, column: 44, scope: !9985)
!9988 = !DILocation(line: 1073, column: 36, scope: !9985)
!9989 = !DILocation(line: 1074, column: 17, scope: !9990)
!9990 = distinct !DILexicalBlock(scope: !9985, file: !939, line: 1074, column: 17)
!9991 = !DILocation(line: 1074, column: 32, scope: !9990)
!9992 = !DILocation(line: 1074, column: 36, scope: !9990)
!9993 = !DILocation(line: 1074, column: 30, scope: !9990)
!9994 = !DILocation(line: 1074, column: 17, scope: !9985)
!9995 = !DILocation(line: 1075, column: 22, scope: !9990)
!9996 = !DILocation(line: 1078, column: 36, scope: !9990)
!9997 = !DILocation(line: 1078, column: 50, scope: !9990)
!9998 = !DILocation(line: 1078, column: 55, scope: !9990)
!9999 = !DILocation(line: 1075, column: 15, scope: !9990)
!10000 = !DILocation(line: 1080, column: 22, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !9990, file: !939, line: 1079, column: 18)
!10002 = !DILocation(line: 1080, column: 87, scope: !10001)
!10003 = !DILocation(line: 1080, column: 15, scope: !10001)
!10004 = !DILocation(line: 1081, column: 30, scope: !10001)
!10005 = !DILocation(line: 1081, column: 15, scope: !10001)
!10006 = !DILocation(line: 1081, column: 19, scope: !10001)
!10007 = !DILocation(line: 1081, column: 28, scope: !10001)
!10008 = !DILocation(line: 1083, column: 9, scope: !9985)
!10009 = !DILocation(line: 1083, column: 32, scope: !10010)
!10010 = !DILexicalBlockFile(scope: !9918, file: !939, discriminator: 1)
!10011 = !DILocation(line: 1083, column: 20, scope: !10010)
!10012 = !DILocation(line: 1084, column: 24, scope: !10013)
!10013 = distinct !DILexicalBlock(scope: !9918, file: !939, line: 1083, column: 69)
!10014 = !DILocation(line: 1085, column: 13, scope: !10013)
!10015 = !DILocation(line: 1085, column: 17, scope: !10013)
!10016 = !DILocation(line: 1085, column: 31, scope: !10013)
!10017 = !DILocation(line: 1086, column: 9, scope: !10013)
!10018 = !DILocation(line: 1086, column: 32, scope: !10019)
!10019 = !DILexicalBlockFile(scope: !9917, file: !939, discriminator: 1)
!10020 = !DILocation(line: 1086, column: 20, scope: !10019)
!10021 = !DILocation(line: 1087, column: 24, scope: !10022)
!10022 = distinct !DILexicalBlock(scope: !9917, file: !939, line: 1086, column: 57)
!10023 = !DILocation(line: 1088, column: 33, scope: !10022)
!10024 = !DILocation(line: 1088, column: 28, scope: !10022)
!10025 = !DILocation(line: 1088, column: 13, scope: !10022)
!10026 = !DILocation(line: 1088, column: 17, scope: !10022)
!10027 = !DILocation(line: 1088, column: 26, scope: !10022)
!10028 = !DILocation(line: 1089, column: 9, scope: !10022)
!10029 = !DILocation(line: 1089, column: 33, scope: !10030)
!10030 = !DILexicalBlockFile(scope: !9916, file: !939, discriminator: 1)
!10031 = !DILocation(line: 1089, column: 20, scope: !10030)
!10032 = !DILocation(line: 1090, column: 30, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !9916, file: !939, line: 1089, column: 61)
!10034 = !DILocation(line: 1090, column: 19, scope: !10033)
!10035 = !DILocation(line: 1090, column: 17, scope: !10033)
!10036 = !DILocation(line: 1091, column: 17, scope: !10037)
!10037 = distinct !DILexicalBlock(scope: !10033, file: !939, line: 1091, column: 17)
!10038 = !DILocation(line: 1091, column: 17, scope: !10033)
!10039 = !DILocation(line: 1092, column: 21, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !10037, file: !939, line: 1091, column: 22)
!10041 = !DILocation(line: 1093, column: 34, scope: !10040)
!10042 = !DILocation(line: 1093, column: 23, scope: !10040)
!10043 = !DILocation(line: 1093, column: 21, scope: !10040)
!10044 = !DILocation(line: 1094, column: 21, scope: !10045)
!10045 = distinct !DILexicalBlock(scope: !10040, file: !939, line: 1094, column: 21)
!10046 = !DILocation(line: 1094, column: 21, scope: !10040)
!10047 = !DILocation(line: 1095, column: 32, scope: !10048)
!10048 = distinct !DILexicalBlock(scope: !10045, file: !939, line: 1094, column: 26)
!10049 = !DILocation(line: 1095, column: 37, scope: !10048)
!10050 = !DILocation(line: 1095, column: 46, scope: !10048)
!10051 = !DILocation(line: 1095, column: 51, scope: !10048)
!10052 = !DILocation(line: 1095, column: 57, scope: !10048)
!10053 = !DILocation(line: 1095, column: 55, scope: !10048)
!10054 = !DILocation(line: 1095, column: 21, scope: !10048)
!10055 = !DILocation(line: 1096, column: 17, scope: !10048)
!10056 = !DILocation(line: 1097, column: 32, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !10045, file: !939, line: 1096, column: 24)
!10058 = !DILocation(line: 1097, column: 37, scope: !10057)
!10059 = !DILocation(line: 1097, column: 46, scope: !10057)
!10060 = !DILocation(line: 1097, column: 21, scope: !10057)
!10061 = !DILocation(line: 1099, column: 13, scope: !10040)
!10062 = !DILocation(line: 1101, column: 30, scope: !10033)
!10063 = !DILocation(line: 1101, column: 19, scope: !10033)
!10064 = !DILocation(line: 1101, column: 17, scope: !10033)
!10065 = !DILocation(line: 1102, column: 17, scope: !10066)
!10066 = distinct !DILexicalBlock(scope: !10033, file: !939, line: 1102, column: 17)
!10067 = !DILocation(line: 1102, column: 17, scope: !10033)
!10068 = !DILocation(line: 1103, column: 21, scope: !10069)
!10069 = distinct !DILexicalBlock(scope: !10066, file: !939, line: 1102, column: 22)
!10070 = !DILocation(line: 1104, column: 34, scope: !10069)
!10071 = !DILocation(line: 1104, column: 23, scope: !10069)
!10072 = !DILocation(line: 1104, column: 21, scope: !10069)
!10073 = !DILocation(line: 1105, column: 21, scope: !10074)
!10074 = distinct !DILexicalBlock(scope: !10069, file: !939, line: 1105, column: 21)
!10075 = !DILocation(line: 1105, column: 21, scope: !10069)
!10076 = !DILocation(line: 1106, column: 32, scope: !10077)
!10077 = distinct !DILexicalBlock(scope: !10074, file: !939, line: 1105, column: 26)
!10078 = !DILocation(line: 1106, column: 37, scope: !10077)
!10079 = !DILocation(line: 1106, column: 48, scope: !10077)
!10080 = !DILocation(line: 1106, column: 53, scope: !10077)
!10081 = !DILocation(line: 1106, column: 59, scope: !10077)
!10082 = !DILocation(line: 1106, column: 57, scope: !10077)
!10083 = !DILocation(line: 1106, column: 21, scope: !10077)
!10084 = !DILocation(line: 1107, column: 17, scope: !10077)
!10085 = !DILocation(line: 1108, column: 32, scope: !10086)
!10086 = distinct !DILexicalBlock(scope: !10074, file: !939, line: 1107, column: 24)
!10087 = !DILocation(line: 1108, column: 37, scope: !10086)
!10088 = !DILocation(line: 1108, column: 48, scope: !10086)
!10089 = !DILocation(line: 1108, column: 21, scope: !10086)
!10090 = !DILocation(line: 1110, column: 13, scope: !10069)
!10091 = !DILocation(line: 1112, column: 9, scope: !10033)
!10092 = !DILocation(line: 1112, column: 32, scope: !10093)
!10093 = !DILexicalBlockFile(scope: !9915, file: !939, discriminator: 1)
!10094 = !DILocation(line: 1112, column: 20, scope: !10093)
!10095 = !DILocation(line: 1113, column: 13, scope: !10096)
!10096 = distinct !DILexicalBlock(scope: !9915, file: !939, line: 1112, column: 49)
!10097 = distinct !{!10097, !9972}
!10098 = !DILocation(line: 1114, column: 20, scope: !9914)
!10099 = !DILocation(line: 1114, column: 20, scope: !9915)
!10100 = !DILocation(line: 1115, column: 17, scope: !9912)
!10101 = !DILocation(line: 1115, column: 17, scope: !9913)
!10102 = !DILocalVariable(name: "new_file", scope: !9911, file: !939, line: 1116, type: !1008)
!10103 = !DILocation(line: 1116, column: 23, scope: !9911)
!10104 = !DILocation(line: 1116, column: 44, scope: !9911)
!10105 = !DILocation(line: 1116, column: 34, scope: !9911)
!10106 = !DILocation(line: 1117, column: 22, scope: !10107)
!10107 = distinct !DILexicalBlock(scope: !9911, file: !939, line: 1117, column: 21)
!10108 = !DILocation(line: 1117, column: 21, scope: !9911)
!10109 = !DILocation(line: 1118, column: 25, scope: !10110)
!10110 = distinct !DILexicalBlock(scope: !10107, file: !939, line: 1117, column: 32)
!10111 = !DILocation(line: 1119, column: 21, scope: !10110)
!10112 = !DILocation(line: 1121, column: 35, scope: !9911)
!10113 = !DILocation(line: 1121, column: 39, scope: !9911)
!10114 = !DILocation(line: 1121, column: 44, scope: !9911)
!10115 = !DILocation(line: 1121, column: 17, scope: !9911)
!10116 = !DILocation(line: 1122, column: 28, scope: !9911)
!10117 = !DILocation(line: 1123, column: 43, scope: !9911)
!10118 = !DILocation(line: 1123, column: 47, scope: !9911)
!10119 = !DILocation(line: 1123, column: 52, scope: !9911)
!10120 = !DILocation(line: 1123, column: 33, scope: !9911)
!10121 = !DILocation(line: 559, column: 22, scope: !2600, inlinedAt: !9910)
!10122 = !DILocation(line: 559, column: 12, scope: !2600, inlinedAt: !9910)
!10123 = !DILocation(line: 1123, column: 31, scope: !9911)
!10124 = !DILocation(line: 1124, column: 28, scope: !9911)
!10125 = !DILocation(line: 1124, column: 44, scope: !9911)
!10126 = !DILocation(line: 1124, column: 48, scope: !9911)
!10127 = !DILocation(line: 1124, column: 42, scope: !9911)
!10128 = !DILocation(line: 1124, column: 17, scope: !9911)
!10129 = !DILocation(line: 1124, column: 21, scope: !9911)
!10130 = !DILocation(line: 1124, column: 26, scope: !9911)
!10131 = !DILocation(line: 1125, column: 42, scope: !9911)
!10132 = !DILocation(line: 1125, column: 45, scope: !9911)
!10133 = !DILocation(line: 1125, column: 50, scope: !9911)
!10134 = !DILocation(line: 1125, column: 54, scope: !9911)
!10135 = !DILocation(line: 1125, column: 58, scope: !9911)
!10136 = !DILocation(line: 1125, column: 68, scope: !9911)
!10137 = !DILocation(line: 1125, column: 72, scope: !9911)
!10138 = !DILocation(line: 1125, column: 83, scope: !9911)
!10139 = !DILocation(line: 1125, column: 87, scope: !9911)
!10140 = !DILocation(line: 1125, column: 23, scope: !9911)
!10141 = !DILocation(line: 1125, column: 21, scope: !9911)
!10142 = !DILocation(line: 1126, column: 21, scope: !10143)
!10143 = distinct !DILexicalBlock(scope: !9911, file: !939, line: 1126, column: 21)
!10144 = !DILocation(line: 1126, column: 25, scope: !10143)
!10145 = !DILocation(line: 1126, column: 21, scope: !9911)
!10146 = !DILocation(line: 1127, column: 21, scope: !10143)
!10147 = !DILocation(line: 1128, column: 33, scope: !9911)
!10148 = !DILocation(line: 1128, column: 17, scope: !9911)
!10149 = !DILocation(line: 1128, column: 21, scope: !9911)
!10150 = !DILocation(line: 1128, column: 31, scope: !9911)
!10151 = !DILocation(line: 1129, column: 13, scope: !9911)
!10152 = !DILocation(line: 1130, column: 9, scope: !9913)
!10153 = !DILocation(line: 1070, column: 5, scope: !10154)
!10154 = !DILexicalBlockFile(scope: !9906, file: !939, discriminator: 2)
!10155 = !DILocation(line: 1070, column: 5, scope: !10156)
!10156 = !DILexicalBlockFile(scope: !9906, file: !939, discriminator: 3)
!10157 = !DILocation(line: 1134, column: 16, scope: !9906)
!10158 = !DILocation(line: 1134, column: 5, scope: !9906)
!10159 = !DILocation(line: 1135, column: 12, scope: !9906)
!10160 = !DILocation(line: 1135, column: 5, scope: !9906)
!10161 = !DILocation(line: 1136, column: 1, scope: !9906)
!10162 = distinct !DISubprogram(name: "parse_cc_stream_mapstring", scope: !939, file: !939, line: 1934, type: !2332, isLocal: true, isDefinition: true, scopeLine: 1935, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!10163 = !DILocalVariable(name: "s", arg: 1, scope: !10162, file: !939, line: 1934, type: !2272)
!10164 = !DILocation(line: 1934, column: 55, scope: !10162)
!10165 = !DILocalVariable(name: "hls", scope: !10162, file: !939, line: 1936, type: !2338)
!10166 = !DILocation(line: 1936, column: 17, scope: !10162)
!10167 = !DILocation(line: 1936, column: 23, scope: !10162)
!10168 = !DILocation(line: 1936, column: 26, scope: !10162)
!10169 = !DILocalVariable(name: "nb_ccstreams", scope: !10162, file: !939, line: 1937, type: !981)
!10170 = !DILocation(line: 1937, column: 9, scope: !10162)
!10171 = !DILocalVariable(name: "p", scope: !10162, file: !939, line: 1938, type: !1008)
!10172 = !DILocation(line: 1938, column: 11, scope: !10162)
!10173 = !DILocalVariable(name: "q", scope: !10162, file: !939, line: 1938, type: !1008)
!10174 = !DILocation(line: 1938, column: 15, scope: !10162)
!10175 = !DILocalVariable(name: "ccstr", scope: !10162, file: !939, line: 1938, type: !1008)
!10176 = !DILocation(line: 1938, column: 19, scope: !10162)
!10177 = !DILocalVariable(name: "keyval", scope: !10162, file: !939, line: 1938, type: !1008)
!10178 = !DILocation(line: 1938, column: 27, scope: !10162)
!10179 = !DILocalVariable(name: "saveptr1", scope: !10162, file: !939, line: 1939, type: !1008)
!10180 = !DILocation(line: 1939, column: 11, scope: !10162)
!10181 = !DILocalVariable(name: "saveptr2", scope: !10162, file: !939, line: 1939, type: !1008)
!10182 = !DILocation(line: 1939, column: 28, scope: !10162)
!10183 = !DILocalVariable(name: "val", scope: !10162, file: !939, line: 1940, type: !1031)
!10184 = !DILocation(line: 1940, column: 17, scope: !10162)
!10185 = !DILocalVariable(name: "ccs", scope: !10162, file: !939, line: 1941, type: !2382)
!10186 = !DILocation(line: 1941, column: 27, scope: !10162)
!10187 = !DILocation(line: 1943, column: 19, scope: !10162)
!10188 = !DILocation(line: 1943, column: 24, scope: !10162)
!10189 = !DILocation(line: 1943, column: 9, scope: !10162)
!10190 = !DILocation(line: 1943, column: 7, scope: !10162)
!10191 = !DILocation(line: 1944, column: 9, scope: !10162)
!10192 = !DILocation(line: 1944, column: 7, scope: !10162)
!10193 = !DILocation(line: 1945, column: 5, scope: !10162)
!10194 = !DILocation(line: 1945, column: 21, scope: !10195)
!10195 = !DILexicalBlockFile(scope: !10162, file: !939, discriminator: 1)
!10196 = !DILocation(line: 1945, column: 11, scope: !10195)
!10197 = !DILocation(line: 1945, column: 5, scope: !10195)
!10198 = !DILocation(line: 1946, column: 11, scope: !10199)
!10199 = distinct !DILexicalBlock(scope: !10162, file: !939, line: 1945, column: 43)
!10200 = !DILocation(line: 1947, column: 9, scope: !10199)
!10201 = !DILocation(line: 1947, column: 14, scope: !10199)
!10202 = !DILocation(line: 1947, column: 26, scope: !10199)
!10203 = !DILocation(line: 1945, column: 5, scope: !10204)
!10204 = !DILexicalBlockFile(scope: !10162, file: !939, discriminator: 2)
!10205 = distinct !{!10205, !10193}
!10206 = !DILocation(line: 1949, column: 14, scope: !10162)
!10207 = !DILocation(line: 1949, column: 5, scope: !10162)
!10208 = !DILocation(line: 1951, column: 61, scope: !10162)
!10209 = !DILocation(line: 1951, column: 66, scope: !10162)
!10210 = !DILocation(line: 1951, column: 59, scope: !10162)
!10211 = !DILocation(line: 1951, column: 23, scope: !10162)
!10212 = !DILocation(line: 1951, column: 5, scope: !10162)
!10213 = !DILocation(line: 1951, column: 10, scope: !10162)
!10214 = !DILocation(line: 1951, column: 21, scope: !10162)
!10215 = !DILocation(line: 1952, column: 10, scope: !10216)
!10216 = distinct !DILexicalBlock(scope: !10162, file: !939, line: 1952, column: 9)
!10217 = !DILocation(line: 1952, column: 15, scope: !10216)
!10218 = !DILocation(line: 1952, column: 9, scope: !10162)
!10219 = !DILocation(line: 1953, column: 9, scope: !10216)
!10220 = !DILocation(line: 1955, column: 9, scope: !10162)
!10221 = !DILocation(line: 1955, column: 14, scope: !10162)
!10222 = !DILocation(line: 1955, column: 7, scope: !10162)
!10223 = !DILocation(line: 1956, column: 18, scope: !10162)
!10224 = !DILocation(line: 1957, column: 5, scope: !10162)
!10225 = !DILocation(line: 1957, column: 30, scope: !10195)
!10226 = !DILocation(line: 1957, column: 20, scope: !10195)
!10227 = !DILocation(line: 1957, column: 18, scope: !10195)
!10228 = !DILocation(line: 1957, column: 5, scope: !10195)
!10229 = !DILocation(line: 1958, column: 11, scope: !10230)
!10230 = distinct !DILexicalBlock(scope: !10162, file: !939, line: 1957, column: 52)
!10231 = !DILocation(line: 1960, column: 13, scope: !10232)
!10232 = distinct !DILexicalBlock(scope: !10230, file: !939, line: 1960, column: 13)
!10233 = !DILocation(line: 1960, column: 28, scope: !10232)
!10234 = !DILocation(line: 1960, column: 33, scope: !10232)
!10235 = !DILocation(line: 1960, column: 26, scope: !10232)
!10236 = !DILocation(line: 1960, column: 13, scope: !10230)
!10237 = !DILocation(line: 1961, column: 49, scope: !10232)
!10238 = !DILocation(line: 1961, column: 21, scope: !10232)
!10239 = !DILocation(line: 1961, column: 26, scope: !10232)
!10240 = !DILocation(line: 1961, column: 17, scope: !10232)
!10241 = !DILocation(line: 1961, column: 13, scope: !10232)
!10242 = !DILocation(line: 1963, column: 13, scope: !10232)
!10243 = !DILocation(line: 1965, column: 9, scope: !10230)
!10244 = !DILocation(line: 1965, column: 35, scope: !10245)
!10245 = !DILexicalBlockFile(scope: !10230, file: !939, discriminator: 1)
!10246 = !DILocation(line: 1965, column: 25, scope: !10245)
!10247 = !DILocation(line: 1965, column: 23, scope: !10245)
!10248 = !DILocation(line: 1965, column: 9, scope: !10245)
!10249 = !DILocation(line: 1966, column: 19, scope: !10250)
!10250 = distinct !DILexicalBlock(scope: !10230, file: !939, line: 1965, column: 59)
!10251 = !DILocation(line: 1968, column: 29, scope: !10252)
!10252 = distinct !DILexicalBlock(scope: !10250, file: !939, line: 1968, column: 17)
!10253 = !DILocation(line: 1968, column: 17, scope: !10252)
!10254 = !DILocation(line: 1968, column: 17, scope: !10250)
!10255 = !DILocation(line: 1969, column: 42, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !10252, file: !939, line: 1968, column: 56)
!10257 = !DILocation(line: 1969, column: 32, scope: !10256)
!10258 = !DILocation(line: 1969, column: 17, scope: !10256)
!10259 = !DILocation(line: 1969, column: 22, scope: !10256)
!10260 = !DILocation(line: 1969, column: 30, scope: !10256)
!10261 = !DILocation(line: 1970, column: 22, scope: !10262)
!10262 = distinct !DILexicalBlock(scope: !10256, file: !939, line: 1970, column: 21)
!10263 = !DILocation(line: 1970, column: 27, scope: !10262)
!10264 = !DILocation(line: 1970, column: 21, scope: !10256)
!10265 = !DILocation(line: 1971, column: 21, scope: !10262)
!10266 = !DILocation(line: 1972, column: 13, scope: !10256)
!10267 = !DILocation(line: 1972, column: 36, scope: !10268)
!10268 = !DILexicalBlockFile(scope: !10269, file: !939, discriminator: 1)
!10269 = distinct !DILexicalBlock(scope: !10252, file: !939, line: 1972, column: 24)
!10270 = !DILocation(line: 1972, column: 24, scope: !10268)
!10271 = !DILocation(line: 1973, column: 45, scope: !10272)
!10272 = distinct !DILexicalBlock(scope: !10269, file: !939, line: 1972, column: 66)
!10273 = !DILocation(line: 1973, column: 35, scope: !10272)
!10274 = !DILocation(line: 1973, column: 17, scope: !10272)
!10275 = !DILocation(line: 1973, column: 22, scope: !10272)
!10276 = !DILocation(line: 1973, column: 33, scope: !10272)
!10277 = !DILocation(line: 1974, column: 22, scope: !10278)
!10278 = distinct !DILexicalBlock(scope: !10272, file: !939, line: 1974, column: 21)
!10279 = !DILocation(line: 1974, column: 27, scope: !10278)
!10280 = !DILocation(line: 1974, column: 21, scope: !10272)
!10281 = !DILocation(line: 1975, column: 21, scope: !10278)
!10282 = !DILocation(line: 1976, column: 13, scope: !10272)
!10283 = !DILocation(line: 1976, column: 36, scope: !10284)
!10284 = !DILexicalBlockFile(scope: !10285, file: !939, discriminator: 1)
!10285 = distinct !DILexicalBlock(scope: !10269, file: !939, line: 1976, column: 24)
!10286 = !DILocation(line: 1976, column: 24, scope: !10284)
!10287 = !DILocation(line: 1977, column: 43, scope: !10288)
!10288 = distinct !DILexicalBlock(scope: !10285, file: !939, line: 1976, column: 64)
!10289 = !DILocation(line: 1977, column: 33, scope: !10288)
!10290 = !DILocation(line: 1977, column: 17, scope: !10288)
!10291 = !DILocation(line: 1977, column: 22, scope: !10288)
!10292 = !DILocation(line: 1977, column: 31, scope: !10288)
!10293 = !DILocation(line: 1978, column: 22, scope: !10294)
!10294 = distinct !DILexicalBlock(scope: !10288, file: !939, line: 1978, column: 21)
!10295 = !DILocation(line: 1978, column: 27, scope: !10294)
!10296 = !DILocation(line: 1978, column: 21, scope: !10288)
!10297 = !DILocation(line: 1979, column: 21, scope: !10294)
!10298 = !DILocation(line: 1980, column: 13, scope: !10288)
!10299 = !DILocation(line: 1981, column: 24, scope: !10300)
!10300 = distinct !DILexicalBlock(scope: !10285, file: !939, line: 1980, column: 20)
!10301 = !DILocation(line: 1981, column: 54, scope: !10300)
!10302 = !DILocation(line: 1981, column: 17, scope: !10300)
!10303 = !DILocation(line: 1982, column: 17, scope: !10300)
!10304 = !DILocation(line: 1965, column: 9, scope: !10305)
!10305 = !DILexicalBlockFile(scope: !10230, file: !939, discriminator: 2)
!10306 = distinct !{!10306, !10243}
!10307 = !DILocation(line: 1986, column: 14, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10230, file: !939, line: 1986, column: 13)
!10309 = !DILocation(line: 1986, column: 19, scope: !10308)
!10310 = !DILocation(line: 1986, column: 27, scope: !10308)
!10311 = !DILocation(line: 1986, column: 31, scope: !10312)
!10312 = !DILexicalBlockFile(scope: !10308, file: !939, discriminator: 1)
!10313 = !DILocation(line: 1986, column: 36, scope: !10312)
!10314 = !DILocation(line: 1986, column: 13, scope: !10312)
!10315 = !DILocation(line: 1987, column: 20, scope: !10316)
!10316 = distinct !DILexicalBlock(scope: !10308, file: !939, line: 1986, column: 48)
!10317 = !DILocation(line: 1987, column: 13, scope: !10316)
!10318 = !DILocation(line: 1988, column: 13, scope: !10316)
!10319 = !DILocation(line: 1991, column: 25, scope: !10320)
!10320 = distinct !DILexicalBlock(scope: !10230, file: !939, line: 1991, column: 13)
!10321 = !DILocation(line: 1991, column: 30, scope: !10320)
!10322 = !DILocation(line: 1991, column: 13, scope: !10320)
!10323 = !DILocation(line: 1991, column: 13, scope: !10230)
!10324 = !DILocation(line: 1992, column: 21, scope: !10325)
!10325 = distinct !DILexicalBlock(scope: !10326, file: !939, line: 1992, column: 16)
!10326 = distinct !DILexicalBlock(scope: !10320, file: !939, line: 1991, column: 55)
!10327 = !DILocation(line: 1992, column: 16, scope: !10325)
!10328 = !DILocation(line: 1992, column: 26, scope: !10325)
!10329 = !DILocation(line: 1992, column: 30, scope: !10325)
!10330 = !DILocation(line: 1992, column: 38, scope: !10331)
!10331 = !DILexicalBlockFile(scope: !10325, file: !939, discriminator: 1)
!10332 = !DILocation(line: 1992, column: 33, scope: !10331)
!10333 = !DILocation(line: 1992, column: 43, scope: !10331)
!10334 = !DILocation(line: 1992, column: 16, scope: !10331)
!10335 = !DILocation(line: 1993, column: 24, scope: !10336)
!10336 = distinct !DILexicalBlock(scope: !10325, file: !939, line: 1992, column: 48)
!10337 = !DILocation(line: 1994, column: 29, scope: !10336)
!10338 = !DILocation(line: 1994, column: 24, scope: !10336)
!10339 = !DILocation(line: 1994, column: 35, scope: !10336)
!10340 = !DILocation(line: 1994, column: 40, scope: !10336)
!10341 = !DILocation(line: 1993, column: 17, scope: !10336)
!10342 = !DILocation(line: 1995, column: 17, scope: !10336)
!10343 = !DILocation(line: 1997, column: 9, scope: !10326)
!10344 = !DILocation(line: 1997, column: 32, scope: !10345)
!10345 = !DILexicalBlockFile(scope: !10346, file: !939, discriminator: 1)
!10346 = distinct !DILexicalBlock(scope: !10320, file: !939, line: 1997, column: 20)
!10347 = !DILocation(line: 1997, column: 37, scope: !10345)
!10348 = !DILocation(line: 1997, column: 20, scope: !10345)
!10349 = !DILocation(line: 1998, column: 21, scope: !10350)
!10350 = distinct !DILexicalBlock(scope: !10351, file: !939, line: 1998, column: 16)
!10351 = distinct !DILexicalBlock(scope: !10346, file: !939, line: 1997, column: 67)
!10352 = !DILocation(line: 1998, column: 16, scope: !10350)
!10353 = !DILocation(line: 1998, column: 26, scope: !10350)
!10354 = !DILocation(line: 1998, column: 30, scope: !10350)
!10355 = !DILocation(line: 1998, column: 38, scope: !10356)
!10356 = !DILexicalBlockFile(scope: !10350, file: !939, discriminator: 1)
!10357 = !DILocation(line: 1998, column: 33, scope: !10356)
!10358 = !DILocation(line: 1998, column: 43, scope: !10356)
!10359 = !DILocation(line: 1998, column: 16, scope: !10356)
!10360 = !DILocation(line: 1999, column: 24, scope: !10361)
!10361 = distinct !DILexicalBlock(scope: !10350, file: !939, line: 1998, column: 49)
!10362 = !DILocation(line: 2000, column: 29, scope: !10361)
!10363 = !DILocation(line: 2000, column: 24, scope: !10361)
!10364 = !DILocation(line: 2000, column: 35, scope: !10361)
!10365 = !DILocation(line: 2000, column: 40, scope: !10361)
!10366 = !DILocation(line: 1999, column: 17, scope: !10361)
!10367 = !DILocation(line: 2001, column: 17, scope: !10361)
!10368 = !DILocation(line: 2003, column: 9, scope: !10351)
!10369 = !DILocation(line: 2004, column: 20, scope: !10370)
!10370 = distinct !DILexicalBlock(scope: !10346, file: !939, line: 2003, column: 16)
!10371 = !DILocation(line: 2005, column: 20, scope: !10370)
!10372 = !DILocation(line: 2005, column: 25, scope: !10370)
!10373 = !DILocation(line: 2004, column: 13, scope: !10370)
!10374 = !DILocation(line: 2006, column: 13, scope: !10370)
!10375 = !DILocation(line: 1957, column: 5, scope: !10204)
!10376 = distinct !{!10376, !10224}
!10377 = !DILocation(line: 2010, column: 5, scope: !10162)
!10378 = !DILocation(line: 2011, column: 1, scope: !10162)
!10379 = distinct !DISubprogram(name: "parse_variant_stream_mapstring", scope: !939, file: !939, line: 1820, type: !2332, isLocal: true, isDefinition: true, scopeLine: 1821, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!10380 = !DILocalVariable(name: "s", arg: 1, scope: !10379, file: !939, line: 1820, type: !2272)
!10381 = !DILocation(line: 1820, column: 60, scope: !10379)
!10382 = !DILocalVariable(name: "hls", scope: !10379, file: !939, line: 1822, type: !2338)
!10383 = !DILocation(line: 1822, column: 17, scope: !10379)
!10384 = !DILocation(line: 1822, column: 23, scope: !10379)
!10385 = !DILocation(line: 1822, column: 26, scope: !10379)
!10386 = !DILocalVariable(name: "vs", scope: !10379, file: !939, line: 1823, type: !2274)
!10387 = !DILocation(line: 1823, column: 20, scope: !10379)
!10388 = !DILocalVariable(name: "stream_index", scope: !10379, file: !939, line: 1824, type: !981)
!10389 = !DILocation(line: 1824, column: 9, scope: !10379)
!10390 = !DILocalVariable(name: "codec_type", scope: !10379, file: !939, line: 1825, type: !545)
!10391 = !DILocation(line: 1825, column: 22, scope: !10379)
!10392 = !DILocalVariable(name: "nb_varstreams", scope: !10379, file: !939, line: 1826, type: !981)
!10393 = !DILocation(line: 1826, column: 9, scope: !10379)
!10394 = !DILocalVariable(name: "nb_streams", scope: !10379, file: !939, line: 1826, type: !981)
!10395 = !DILocation(line: 1826, column: 24, scope: !10379)
!10396 = !DILocalVariable(name: "p", scope: !10379, file: !939, line: 1827, type: !1008)
!10397 = !DILocation(line: 1827, column: 11, scope: !10379)
!10398 = !DILocalVariable(name: "q", scope: !10379, file: !939, line: 1827, type: !1008)
!10399 = !DILocation(line: 1827, column: 15, scope: !10379)
!10400 = !DILocalVariable(name: "saveptr1", scope: !10379, file: !939, line: 1827, type: !1008)
!10401 = !DILocation(line: 1827, column: 19, scope: !10379)
!10402 = !DILocalVariable(name: "saveptr2", scope: !10379, file: !939, line: 1827, type: !1008)
!10403 = !DILocation(line: 1827, column: 30, scope: !10379)
!10404 = !DILocalVariable(name: "varstr", scope: !10379, file: !939, line: 1827, type: !1008)
!10405 = !DILocation(line: 1827, column: 41, scope: !10379)
!10406 = !DILocalVariable(name: "keyval", scope: !10379, file: !939, line: 1827, type: !1008)
!10407 = !DILocation(line: 1827, column: 50, scope: !10379)
!10408 = !DILocalVariable(name: "val", scope: !10379, file: !939, line: 1828, type: !1031)
!10409 = !DILocation(line: 1828, column: 17, scope: !10379)
!10410 = !DILocation(line: 1844, column: 19, scope: !10379)
!10411 = !DILocation(line: 1844, column: 24, scope: !10379)
!10412 = !DILocation(line: 1844, column: 9, scope: !10379)
!10413 = !DILocation(line: 1844, column: 7, scope: !10379)
!10414 = !DILocation(line: 1845, column: 9, scope: !10379)
!10415 = !DILocation(line: 1845, column: 7, scope: !10379)
!10416 = !DILocation(line: 1846, column: 5, scope: !10379)
!10417 = !DILocation(line: 1846, column: 21, scope: !10418)
!10418 = !DILexicalBlockFile(scope: !10379, file: !939, discriminator: 1)
!10419 = !DILocation(line: 1846, column: 11, scope: !10418)
!10420 = !DILocation(line: 1846, column: 5, scope: !10418)
!10421 = !DILocation(line: 1847, column: 11, scope: !10422)
!10422 = distinct !DILexicalBlock(scope: !10379, file: !939, line: 1846, column: 43)
!10423 = !DILocation(line: 1848, column: 9, scope: !10422)
!10424 = !DILocation(line: 1848, column: 14, scope: !10422)
!10425 = !DILocation(line: 1848, column: 27, scope: !10422)
!10426 = !DILocation(line: 1846, column: 5, scope: !10427)
!10427 = !DILexicalBlockFile(scope: !10379, file: !939, discriminator: 2)
!10428 = distinct !{!10428, !10416}
!10429 = !DILocation(line: 1850, column: 14, scope: !10379)
!10430 = !DILocation(line: 1850, column: 5, scope: !10379)
!10431 = !DILocation(line: 1852, column: 63, scope: !10379)
!10432 = !DILocation(line: 1852, column: 68, scope: !10379)
!10433 = !DILocation(line: 1852, column: 61, scope: !10379)
!10434 = !DILocation(line: 1852, column: 24, scope: !10379)
!10435 = !DILocation(line: 1852, column: 5, scope: !10379)
!10436 = !DILocation(line: 1852, column: 10, scope: !10379)
!10437 = !DILocation(line: 1852, column: 22, scope: !10379)
!10438 = !DILocation(line: 1853, column: 10, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10379, file: !939, line: 1853, column: 9)
!10440 = !DILocation(line: 1853, column: 15, scope: !10439)
!10441 = !DILocation(line: 1853, column: 9, scope: !10379)
!10442 = !DILocation(line: 1854, column: 9, scope: !10439)
!10443 = !DILocation(line: 1856, column: 9, scope: !10379)
!10444 = !DILocation(line: 1856, column: 14, scope: !10379)
!10445 = !DILocation(line: 1856, column: 7, scope: !10379)
!10446 = !DILocation(line: 1857, column: 19, scope: !10379)
!10447 = !DILocation(line: 1858, column: 5, scope: !10379)
!10448 = !DILocation(line: 1858, column: 31, scope: !10418)
!10449 = !DILocation(line: 1858, column: 21, scope: !10418)
!10450 = !DILocation(line: 1858, column: 19, scope: !10418)
!10451 = !DILocation(line: 1858, column: 5, scope: !10418)
!10452 = !DILocation(line: 1859, column: 11, scope: !10453)
!10453 = distinct !DILexicalBlock(scope: !10379, file: !939, line: 1858, column: 53)
!10454 = !DILocation(line: 1861, column: 13, scope: !10455)
!10455 = distinct !DILexicalBlock(scope: !10453, file: !939, line: 1861, column: 13)
!10456 = !DILocation(line: 1861, column: 29, scope: !10455)
!10457 = !DILocation(line: 1861, column: 34, scope: !10455)
!10458 = !DILocation(line: 1861, column: 27, scope: !10455)
!10459 = !DILocation(line: 1861, column: 13, scope: !10453)
!10460 = !DILocation(line: 1862, column: 37, scope: !10461)
!10461 = distinct !DILexicalBlock(scope: !10455, file: !939, line: 1861, column: 49)
!10462 = !DILocation(line: 1862, column: 20, scope: !10461)
!10463 = !DILocation(line: 1862, column: 25, scope: !10461)
!10464 = !DILocation(line: 1862, column: 16, scope: !10461)
!10465 = !DILocation(line: 1863, column: 34, scope: !10461)
!10466 = !DILocation(line: 1863, column: 13, scope: !10461)
!10467 = !DILocation(line: 1863, column: 17, scope: !10461)
!10468 = !DILocation(line: 1863, column: 32, scope: !10461)
!10469 = !DILocation(line: 1864, column: 13, scope: !10461)
!10470 = !DILocation(line: 1864, column: 17, scope: !10461)
!10471 = !DILocation(line: 1864, column: 28, scope: !10461)
!10472 = !DILocation(line: 1865, column: 26, scope: !10461)
!10473 = !DILocation(line: 1866, column: 9, scope: !10461)
!10474 = !DILocation(line: 1867, column: 13, scope: !10455)
!10475 = !DILocation(line: 1869, column: 13, scope: !10453)
!10476 = !DILocation(line: 1869, column: 11, scope: !10453)
!10477 = !DILocation(line: 1870, column: 9, scope: !10453)
!10478 = !DILocation(line: 1870, column: 16, scope: !10479)
!10479 = !DILexicalBlockFile(scope: !10453, file: !939, discriminator: 1)
!10480 = !DILocation(line: 1870, column: 20, scope: !10479)
!10481 = !DILocation(line: 1870, column: 36, scope: !10479)
!10482 = !DILocation(line: 1870, column: 29, scope: !10479)
!10483 = !DILocation(line: 1870, column: 27, scope: !10479)
!10484 = !DILocation(line: 1870, column: 18, scope: !10479)
!10485 = !DILocation(line: 1870, column: 9, scope: !10479)
!10486 = !DILocation(line: 1871, column: 33, scope: !10487)
!10487 = distinct !DILexicalBlock(scope: !10488, file: !939, line: 1871, column: 17)
!10488 = distinct !DILexicalBlock(scope: !10453, file: !939, line: 1870, column: 45)
!10489 = !DILocation(line: 1871, column: 18, scope: !10487)
!10490 = !DILocation(line: 1871, column: 45, scope: !10487)
!10491 = !DILocation(line: 1871, column: 64, scope: !10492)
!10492 = !DILexicalBlockFile(scope: !10487, file: !939, discriminator: 1)
!10493 = !DILocation(line: 1871, column: 49, scope: !10492)
!10494 = !DILocation(line: 1871, column: 76, scope: !10492)
!10495 = !DILocation(line: 1872, column: 33, scope: !10487)
!10496 = !DILocation(line: 1872, column: 18, scope: !10487)
!10497 = !DILocation(line: 1871, column: 17, scope: !10498)
!10498 = !DILexicalBlockFile(scope: !10488, file: !939, discriminator: 2)
!10499 = !DILocation(line: 1873, column: 17, scope: !10487)
!10500 = !DILocation(line: 1873, column: 21, scope: !10487)
!10501 = !DILocation(line: 1873, column: 31, scope: !10487)
!10502 = !DILocation(line: 1874, column: 14, scope: !10488)
!10503 = !DILocation(line: 1870, column: 9, scope: !10504)
!10504 = !DILexicalBlockFile(scope: !10453, file: !939, discriminator: 2)
!10505 = distinct !{!10505, !10477}
!10506 = !DILocation(line: 1876, column: 55, scope: !10453)
!10507 = !DILocation(line: 1876, column: 59, scope: !10453)
!10508 = !DILocation(line: 1876, column: 53, scope: !10453)
!10509 = !DILocation(line: 1876, column: 23, scope: !10453)
!10510 = !DILocation(line: 1876, column: 9, scope: !10453)
!10511 = !DILocation(line: 1876, column: 13, scope: !10453)
!10512 = !DILocation(line: 1876, column: 21, scope: !10453)
!10513 = !DILocation(line: 1877, column: 14, scope: !10514)
!10514 = distinct !DILexicalBlock(scope: !10453, file: !939, line: 1877, column: 13)
!10515 = !DILocation(line: 1877, column: 18, scope: !10514)
!10516 = !DILocation(line: 1877, column: 13, scope: !10453)
!10517 = !DILocation(line: 1878, column: 13, scope: !10514)
!10518 = !DILocation(line: 1880, column: 20, scope: !10453)
!10519 = !DILocation(line: 1881, column: 9, scope: !10453)
!10520 = !DILocation(line: 1881, column: 35, scope: !10479)
!10521 = !DILocation(line: 1881, column: 25, scope: !10479)
!10522 = !DILocation(line: 1881, column: 23, scope: !10479)
!10523 = !DILocation(line: 1881, column: 9, scope: !10479)
!10524 = !DILocation(line: 1882, column: 20, scope: !10525)
!10525 = distinct !DILexicalBlock(scope: !10453, file: !939, line: 1881, column: 60)
!10526 = !DILocation(line: 1883, column: 29, scope: !10527)
!10527 = distinct !DILexicalBlock(scope: !10525, file: !939, line: 1883, column: 17)
!10528 = !DILocation(line: 1883, column: 17, scope: !10527)
!10529 = !DILocation(line: 1883, column: 17, scope: !10525)
!10530 = !DILocation(line: 1884, column: 42, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10527, file: !939, line: 1883, column: 57)
!10532 = !DILocation(line: 1884, column: 32, scope: !10531)
!10533 = !DILocation(line: 1884, column: 17, scope: !10531)
!10534 = !DILocation(line: 1884, column: 21, scope: !10531)
!10535 = !DILocation(line: 1884, column: 30, scope: !10531)
!10536 = !DILocation(line: 1885, column: 22, scope: !10537)
!10537 = distinct !DILexicalBlock(scope: !10531, file: !939, line: 1885, column: 21)
!10538 = !DILocation(line: 1885, column: 26, scope: !10537)
!10539 = !DILocation(line: 1885, column: 21, scope: !10531)
!10540 = !DILocation(line: 1886, column: 21, scope: !10537)
!10541 = !DILocation(line: 1887, column: 17, scope: !10531)
!10542 = distinct !{!10542, !10519}
!10543 = !DILocation(line: 1888, column: 36, scope: !10544)
!10544 = distinct !DILexicalBlock(scope: !10527, file: !939, line: 1888, column: 24)
!10545 = !DILocation(line: 1888, column: 24, scope: !10544)
!10546 = !DILocation(line: 1888, column: 24, scope: !10527)
!10547 = !DILocation(line: 1889, column: 51, scope: !10548)
!10548 = distinct !DILexicalBlock(scope: !10544, file: !939, line: 1888, column: 63)
!10549 = !DILocation(line: 1889, column: 36, scope: !10548)
!10550 = !DILocation(line: 1889, column: 78, scope: !10548)
!10551 = !DILocation(line: 1890, column: 52, scope: !10548)
!10552 = !DILocation(line: 1890, column: 37, scope: !10548)
!10553 = !DILocation(line: 1890, column: 36, scope: !10548)
!10554 = !DILocation(line: 1889, column: 78, scope: !10555)
!10555 = !DILexicalBlockFile(scope: !10548, file: !939, discriminator: 1)
!10556 = !DILocation(line: 1889, column: 78, scope: !10557)
!10557 = !DILexicalBlockFile(scope: !10548, file: !939, discriminator: 2)
!10558 = !DILocation(line: 1889, column: 17, scope: !10557)
!10559 = !DILocation(line: 1889, column: 21, scope: !10557)
!10560 = !DILocation(line: 1889, column: 32, scope: !10557)
!10561 = !DILocation(line: 1891, column: 17, scope: !10548)
!10562 = !DILocation(line: 1891, column: 22, scope: !10548)
!10563 = !DILocation(line: 1891, column: 38, scope: !10548)
!10564 = !DILocation(line: 1892, column: 17, scope: !10548)
!10565 = !DILocation(line: 1893, column: 36, scope: !10566)
!10566 = distinct !DILexicalBlock(scope: !10544, file: !939, line: 1893, column: 24)
!10567 = !DILocation(line: 1893, column: 24, scope: !10566)
!10568 = !DILocation(line: 1893, column: 24, scope: !10544)
!10569 = !DILocation(line: 1894, column: 40, scope: !10570)
!10570 = distinct !DILexicalBlock(scope: !10566, file: !939, line: 1893, column: 62)
!10571 = !DILocation(line: 1894, column: 30, scope: !10570)
!10572 = !DILocation(line: 1894, column: 17, scope: !10570)
!10573 = !DILocation(line: 1894, column: 21, scope: !10570)
!10574 = !DILocation(line: 1894, column: 28, scope: !10570)
!10575 = !DILocation(line: 1895, column: 22, scope: !10576)
!10576 = distinct !DILexicalBlock(scope: !10570, file: !939, line: 1895, column: 21)
!10577 = !DILocation(line: 1895, column: 26, scope: !10576)
!10578 = !DILocation(line: 1895, column: 21, scope: !10570)
!10579 = !DILocation(line: 1896, column: 21, scope: !10576)
!10580 = !DILocation(line: 1897, column: 17, scope: !10570)
!10581 = !DILocation(line: 1898, column: 36, scope: !10582)
!10582 = distinct !DILexicalBlock(scope: !10566, file: !939, line: 1898, column: 24)
!10583 = !DILocation(line: 1898, column: 24, scope: !10582)
!10584 = !DILocation(line: 1898, column: 24, scope: !10566)
!10585 = !DILocation(line: 1899, column: 41, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !10582, file: !939, line: 1898, column: 63)
!10587 = !DILocation(line: 1899, column: 31, scope: !10586)
!10588 = !DILocation(line: 1899, column: 17, scope: !10586)
!10589 = !DILocation(line: 1899, column: 21, scope: !10586)
!10590 = !DILocation(line: 1899, column: 29, scope: !10586)
!10591 = !DILocation(line: 1900, column: 22, scope: !10592)
!10592 = distinct !DILexicalBlock(scope: !10586, file: !939, line: 1900, column: 21)
!10593 = !DILocation(line: 1900, column: 26, scope: !10592)
!10594 = !DILocation(line: 1900, column: 21, scope: !10586)
!10595 = !DILocation(line: 1901, column: 21, scope: !10592)
!10596 = !DILocation(line: 1902, column: 17, scope: !10586)
!10597 = !DILocation(line: 1903, column: 36, scope: !10598)
!10598 = distinct !DILexicalBlock(scope: !10582, file: !939, line: 1903, column: 24)
!10599 = !DILocation(line: 1903, column: 24, scope: !10598)
!10600 = !DILocation(line: 1903, column: 24, scope: !10582)
!10601 = !DILocation(line: 1904, column: 28, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10598, file: !939, line: 1903, column: 57)
!10603 = !DILocation(line: 1905, column: 17, scope: !10602)
!10604 = !DILocation(line: 1905, column: 22, scope: !10602)
!10605 = !DILocation(line: 1905, column: 37, scope: !10602)
!10606 = !DILocation(line: 1906, column: 13, scope: !10602)
!10607 = !DILocation(line: 1906, column: 36, scope: !10608)
!10608 = !DILexicalBlockFile(scope: !10609, file: !939, discriminator: 1)
!10609 = distinct !DILexicalBlock(scope: !10598, file: !939, line: 1906, column: 24)
!10610 = !DILocation(line: 1906, column: 24, scope: !10608)
!10611 = !DILocation(line: 1907, column: 28, scope: !10612)
!10612 = distinct !DILexicalBlock(scope: !10609, file: !939, line: 1906, column: 57)
!10613 = !DILocation(line: 1908, column: 13, scope: !10612)
!10614 = !DILocation(line: 1908, column: 36, scope: !10615)
!10615 = !DILexicalBlockFile(scope: !10616, file: !939, discriminator: 1)
!10616 = distinct !DILexicalBlock(scope: !10609, file: !939, line: 1908, column: 24)
!10617 = !DILocation(line: 1908, column: 24, scope: !10615)
!10618 = !DILocation(line: 1909, column: 28, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10616, file: !939, line: 1908, column: 57)
!10620 = !DILocation(line: 1910, column: 13, scope: !10619)
!10621 = !DILocation(line: 1911, column: 24, scope: !10622)
!10622 = distinct !DILexicalBlock(scope: !10616, file: !939, line: 1910, column: 20)
!10623 = !DILocation(line: 1911, column: 54, scope: !10622)
!10624 = !DILocation(line: 1911, column: 17, scope: !10622)
!10625 = !DILocation(line: 1912, column: 17, scope: !10622)
!10626 = !DILocation(line: 1915, column: 26, scope: !10525)
!10627 = !DILocation(line: 1916, column: 29, scope: !10628)
!10628 = distinct !DILexicalBlock(scope: !10525, file: !939, line: 1916, column: 17)
!10629 = !DILocation(line: 1916, column: 28, scope: !10628)
!10630 = !DILocation(line: 1916, column: 17, scope: !10628)
!10631 = !DILocation(line: 1916, column: 17, scope: !10525)
!10632 = !DILocation(line: 1917, column: 60, scope: !10628)
!10633 = !DILocation(line: 1917, column: 63, scope: !10628)
!10634 = !DILocation(line: 1918, column: 65, scope: !10628)
!10635 = !DILocation(line: 1918, column: 60, scope: !10628)
!10636 = !DILocation(line: 1917, column: 32, scope: !10628)
!10637 = !DILocation(line: 1917, column: 30, scope: !10628)
!10638 = !DILocation(line: 1917, column: 17, scope: !10628)
!10639 = !DILocation(line: 1920, column: 17, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !10525, file: !939, line: 1920, column: 17)
!10641 = !DILocation(line: 1920, column: 30, scope: !10640)
!10642 = !DILocation(line: 1920, column: 35, scope: !10640)
!10643 = !DILocation(line: 1920, column: 38, scope: !10644)
!10644 = !DILexicalBlockFile(scope: !10640, file: !939, discriminator: 1)
!10645 = !DILocation(line: 1920, column: 51, scope: !10644)
!10646 = !DILocation(line: 1920, column: 55, scope: !10644)
!10647 = !DILocation(line: 1920, column: 49, scope: !10644)
!10648 = !DILocation(line: 1920, column: 17, scope: !10644)
!10649 = !DILocation(line: 1921, column: 56, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !10640, file: !939, line: 1920, column: 67)
!10651 = !DILocation(line: 1921, column: 45, scope: !10650)
!10652 = !DILocation(line: 1921, column: 48, scope: !10650)
!10653 = !DILocation(line: 1921, column: 39, scope: !10650)
!10654 = !DILocation(line: 1921, column: 17, scope: !10650)
!10655 = !DILocation(line: 1921, column: 21, scope: !10650)
!10656 = !DILocation(line: 1921, column: 43, scope: !10650)
!10657 = !DILocation(line: 1922, column: 13, scope: !10650)
!10658 = !DILocation(line: 1923, column: 24, scope: !10659)
!10659 = distinct !DILexicalBlock(scope: !10640, file: !939, line: 1922, column: 20)
!10660 = !DILocation(line: 1923, column: 63, scope: !10659)
!10661 = !DILocation(line: 1923, column: 17, scope: !10659)
!10662 = !DILocation(line: 1924, column: 17, scope: !10659)
!10663 = !DILocation(line: 1881, column: 9, scope: !10504)
!10664 = !DILocation(line: 1858, column: 5, scope: !10427)
!10665 = distinct !{!10665, !10447}
!10666 = !DILocation(line: 1928, column: 12, scope: !10379)
!10667 = !DILocation(line: 1929, column: 13, scope: !10379)
!10668 = !DILocation(line: 1929, column: 18, scope: !10379)
!10669 = !DILocation(line: 1928, column: 5, scope: !10379)
!10670 = !DILocation(line: 1931, column: 5, scope: !10379)
!10671 = !DILocation(line: 1932, column: 1, scope: !10379)
!10672 = distinct !DISubprogram(name: "get_nth_codec_stream_index", scope: !939, file: !939, line: 1802, type: !10673, isLocal: true, isDefinition: true, scopeLine: 1805, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2327)
!10673 = !DISubroutineType(types: !10674)
!10674 = !{!981, !2272, !545, !981}
!10675 = !DILocalVariable(name: "s", arg: 1, scope: !10672, file: !939, line: 1802, type: !2272)
!10676 = !DILocation(line: 1802, column: 56, scope: !10672)
!10677 = !DILocalVariable(name: "codec_type", arg: 2, scope: !10672, file: !939, line: 1803, type: !545)
!10678 = !DILocation(line: 1803, column: 56, scope: !10672)
!10679 = !DILocalVariable(name: "stream_id", arg: 3, scope: !10672, file: !939, line: 1804, type: !981)
!10680 = !DILocation(line: 1804, column: 43, scope: !10672)
!10681 = !DILocalVariable(name: "stream_index", scope: !10672, file: !939, line: 1806, type: !982)
!10682 = !DILocation(line: 1806, column: 18, scope: !10672)
!10683 = !DILocalVariable(name: "cnt", scope: !10672, file: !939, line: 1806, type: !982)
!10684 = !DILocation(line: 1806, column: 32, scope: !10672)
!10685 = !DILocation(line: 1807, column: 9, scope: !10686)
!10686 = distinct !DILexicalBlock(scope: !10672, file: !939, line: 1807, column: 9)
!10687 = !DILocation(line: 1807, column: 19, scope: !10686)
!10688 = !DILocation(line: 1807, column: 23, scope: !10686)
!10689 = !DILocation(line: 1807, column: 26, scope: !10690)
!10690 = !DILexicalBlockFile(scope: !10686, file: !939, discriminator: 1)
!10691 = !DILocation(line: 1807, column: 38, scope: !10690)
!10692 = !DILocation(line: 1807, column: 41, scope: !10690)
!10693 = !DILocation(line: 1807, column: 52, scope: !10690)
!10694 = !DILocation(line: 1807, column: 36, scope: !10690)
!10695 = !DILocation(line: 1807, column: 9, scope: !10690)
!10696 = !DILocation(line: 1808, column: 9, scope: !10686)
!10697 = !DILocation(line: 1809, column: 9, scope: !10672)
!10698 = !DILocation(line: 1810, column: 23, scope: !10699)
!10699 = distinct !DILexicalBlock(scope: !10672, file: !939, line: 1810, column: 5)
!10700 = !DILocation(line: 1810, column: 10, scope: !10699)
!10701 = !DILocation(line: 1810, column: 28, scope: !10702)
!10702 = !DILexicalBlockFile(scope: !10703, file: !939, discriminator: 1)
!10703 = distinct !DILexicalBlock(scope: !10699, file: !939, line: 1810, column: 5)
!10704 = !DILocation(line: 1810, column: 43, scope: !10702)
!10705 = !DILocation(line: 1810, column: 46, scope: !10702)
!10706 = !DILocation(line: 1810, column: 41, scope: !10702)
!10707 = !DILocation(line: 1810, column: 5, scope: !10702)
!10708 = !DILocation(line: 1811, column: 24, scope: !10709)
!10709 = distinct !DILexicalBlock(scope: !10710, file: !939, line: 1811, column: 13)
!10710 = distinct !DILexicalBlock(scope: !10703, file: !939, line: 1810, column: 74)
!10711 = !DILocation(line: 1811, column: 13, scope: !10709)
!10712 = !DILocation(line: 1811, column: 16, scope: !10709)
!10713 = !DILocation(line: 1811, column: 39, scope: !10709)
!10714 = !DILocation(line: 1811, column: 49, scope: !10709)
!10715 = !DILocation(line: 1811, column: 63, scope: !10709)
!10716 = !DILocation(line: 1811, column: 60, scope: !10709)
!10717 = !DILocation(line: 1811, column: 13, scope: !10710)
!10718 = !DILocation(line: 1812, column: 13, scope: !10709)
!10719 = !DILocation(line: 1813, column: 13, scope: !10720)
!10720 = distinct !DILexicalBlock(scope: !10710, file: !939, line: 1813, column: 13)
!10721 = !DILocation(line: 1813, column: 20, scope: !10720)
!10722 = !DILocation(line: 1813, column: 17, scope: !10720)
!10723 = !DILocation(line: 1813, column: 13, scope: !10710)
!10724 = !DILocation(line: 1814, column: 20, scope: !10720)
!10725 = !DILocation(line: 1814, column: 13, scope: !10720)
!10726 = !DILocation(line: 1815, column: 12, scope: !10710)
!10727 = !DILocation(line: 1816, column: 5, scope: !10710)
!10728 = !DILocation(line: 1810, column: 70, scope: !10729)
!10729 = !DILexicalBlockFile(scope: !10703, file: !939, discriminator: 2)
!10730 = !DILocation(line: 1810, column: 5, scope: !10729)
!10731 = distinct !{!10731, !10732}
!10732 = !DILocation(line: 1810, column: 5, scope: !10672)
!10733 = !DILocation(line: 1817, column: 5, scope: !10672)
!10734 = !DILocation(line: 1818, column: 1, scope: !10672)
