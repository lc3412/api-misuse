; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavfilter--avf_showcqt.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavfilter--avf_showcqt.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVFilterPad = type { i8*, i32, %struct.AVFrame* (%struct.AVFilterLink*, i32, i32)*, %struct.AVFrame* (%struct.AVFilterLink*, i32)*, i32 (%struct.AVFilterLink*, %struct.AVFrame*)*, i32 (%struct.AVFilterLink*)*, i32 (%struct.AVFilterLink*)*, i32 (%struct.AVFilterLink*)*, i32, i32 }
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVRational = type { i32, i32 }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVFilterLink = type { %struct.AVFilterContext*, %struct.AVFilterPad*, %struct.AVFilterContext*, %struct.AVFilterPad*, i32, i32, i32, %struct.AVRational, i64, i32, i32, %struct.AVRational, %struct.AVFilterFormats*, %struct.AVFilterFormats*, %struct.AVFilterFormats*, %struct.AVFilterFormats*, %struct.AVFilterChannelLayouts*, %struct.AVFilterChannelLayouts*, i32, i32, %struct.AVFilterGraph*, i64, i64, i32, %struct.AVRational, %struct.AVFrame*, i32, i32, i32, i32, i32, i64, i64, i8*, i32, %struct.AVBufferRef*, [61440 x i8] }
%struct.AVFilterContext = type { %struct.AVClass*, %struct.AVFilter*, i8*, %struct.AVFilterPad*, %struct.AVFilterLink**, i32, %struct.AVFilterPad*, %struct.AVFilterLink**, i32, i8*, %struct.AVFilterGraph*, i32, %struct.AVFilterInternal*, %struct.AVFilterCommand*, i8*, i8*, double*, i32, %struct.AVBufferRef*, i32, i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVFilter = type { i8*, i8*, %struct.AVFilterPad*, %struct.AVFilterPad*, %struct.AVClass*, i32, i32 (%struct.AVFilterContext*)*, i32 (%struct.AVFilterContext*)*, i32 (%struct.AVFilterContext*, %struct.AVDictionary**)*, void (%struct.AVFilterContext*)*, i32 (%struct.AVFilterContext*)*, i32, i32, %struct.AVFilter*, i32 (%struct.AVFilterContext*, i8*, i8*, i8*, i32, i32)*, i32 (%struct.AVFilterContext*, i8*)*, i32 (%struct.AVFilterContext*)* }
%struct.AVFilterInternal = type { i32 (%struct.AVFilterContext*, i32 (%struct.AVFilterContext*, i8*, i32, i32)*, i8*, i32*, i32)* }
%struct.AVFilterCommand = type { double, i8*, i8*, i32, %struct.AVFilterCommand* }
%struct.AVFilterFormats = type { i32, i32*, i32, %struct.AVFilterFormats*** }
%struct.AVFilterChannelLayouts = type { i64*, i32, i8, i8, i32, %struct.AVFilterChannelLayouts*** }
%struct.AVFilterGraph = type { %struct.AVClass*, %struct.AVFilterContext**, i32, i8*, i8*, i32, i32, %struct.AVFilterGraphInternal*, i8*, i32 (%struct.AVFilterContext*, i32 (%struct.AVFilterContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i8*, %struct.AVFilterLink**, i32, i32 }
%struct.AVFilterGraphInternal = type { i8*, i32 (%struct.AVFilterContext*, i32 (%struct.AVFilterContext*, i8*, i32, i32)*, i8*, i32*, i32)*, %struct.FFFrameQueueGlobal }
%struct.FFFrameQueueGlobal = type { i8 }
%struct.ShowCQTContext = type { %struct.AVClass*, %struct.AVFilterContext*, %struct.AVFrame*, %struct.AVFrame*, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i64, double*, %struct.FFTContext*, %struct.Coeffs*, %struct.FFTComplex*, %struct.FFTComplex*, %struct.FFTComplex*, float*, i32, i32, i32, i32, %union.ColorFloat*, float*, float*, float*, float*, [3 x [3 x float]], [6 x float], void (%struct.FFTComplex*, %struct.FFTComplex*, %struct.Coeffs*, i32, i32)*, void (float*, i32)*, void (%struct.AVFrame*, float*, float*, %union.ColorFloat*, i32, float)*, void (%struct.AVFrame*, %struct.AVFrame*, %union.ColorFloat*, i32)*, void (%struct.AVFrame*, %struct.AVFrame*, i32, i32)*, void (%struct.AVFrame*, %union.ColorFloat*, i32)*, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.AVRational, i32, i32, i32, i32, i8*, i8*, float, float, float, double, double, double, double, float, i8*, i32, i32, i8*, i8*, i8*, i8*, i32, i32, i8* }
%struct.FFTContext = type opaque
%struct.Coeffs = type { float*, i32, i32 }
%struct.FFTComplex = type { float, float }
%union.ColorFloat = type { %struct.RGBFloat }
%struct.RGBFloat = type { float, float, float }
%struct.YUVFloat = type { float, float, float }
%struct.AVExpr = type opaque

@.str = private unnamed_addr constant [8 x i8] c"showcqt\00", align 1
@.str.1 = private unnamed_addr constant [83 x i8] c"Convert input audio to a CQT (Constant/Clamped Q Transform) spectrum video output.\00", align 1
@showcqt_inputs = internal constant [2 x %struct.AVFilterPad] [%struct.AVFilterPad { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i32 0, i32 0), i32 1, %struct.AVFrame* (%struct.AVFilterLink*, i32, i32)* null, %struct.AVFrame* (%struct.AVFilterLink*, i32)* null, i32 (%struct.AVFilterLink*, %struct.AVFrame*)* @filter_frame, i32 (%struct.AVFilterLink*)* null, i32 (%struct.AVFilterLink*)* null, i32 (%struct.AVFilterLink*)* null, i32 0, i32 0 }, %struct.AVFilterPad zeroinitializer], align 16
@showcqt_outputs = internal constant [2 x %struct.AVFilterPad] [%struct.AVFilterPad { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i32 0, i32 0), i32 0, %struct.AVFrame* (%struct.AVFilterLink*, i32, i32)* null, %struct.AVFrame* (%struct.AVFilterLink*, i32)* null, i32 (%struct.AVFilterLink*, %struct.AVFrame*)* null, i32 (%struct.AVFilterLink*)* null, i32 (%struct.AVFilterLink*)* @request_frame, i32 (%struct.AVFilterLink*)* @config_output, i32 0, i32 0 }, %struct.AVFilterPad zeroinitializer], align 16
@showcqt_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* getelementptr inbounds ([43 x %struct.AVOption], [43 x %struct.AVOption]* bitcast (<{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption }>* @showcqt_options to [43 x %struct.AVOption]*), i32 0, i32 0), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 7, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@ff_avf_showcqt = global %struct.AVFilter { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.1, i32 0, i32 0), %struct.AVFilterPad* getelementptr inbounds ([2 x %struct.AVFilterPad], [2 x %struct.AVFilterPad]* @showcqt_inputs, i32 0, i32 0), %struct.AVFilterPad* getelementptr inbounds ([2 x %struct.AVFilterPad], [2 x %struct.AVFilterPad]* @showcqt_outputs, i32 0, i32 0), %struct.AVClass* @showcqt_class, i32 0, i32 (%struct.AVFilterContext*)* null, i32 (%struct.AVFilterContext*)* @init, i32 (%struct.AVFilterContext*, %struct.AVDictionary**)* null, void (%struct.AVFilterContext*)* @uninit, i32 (%struct.AVFilterContext*)* @query_formats, i32 536, i32 0, %struct.AVFilter* null, i32 (%struct.AVFilterContext*, i8*, i8*, i8*, i32, i32)* null, i32 (%struct.AVFilterContext*, i8*)* null, i32 (%struct.AVFilterContext*)* null }, align 8
@.str.2 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.3 = private unnamed_addr constant [45 x i8] c"changing pts from %ld (%.3f) to %ld (%.3f).\0A\00", align 1
@.str.4 = private unnamed_addr constant [66 x i8] c"video: %dx%d %s %d/%d fps, bar_h = %d, axis_h = %d, sono_h = %d.\0A\00", align 1
@.str.5 = private unnamed_addr constant [29 x i8] c"fft_len = %d, cqt_len = %d.\0A\00", align 1
@.str.6 = private unnamed_addr constant [56 x i8] c"loading axis image failed, fallback to font rendering.\0A\00", align 1
@.str.7 = private unnamed_addr constant [49 x i8] c"loading axis font failed, disable text drawing.\0A\00", align 1
@.str.8 = private unnamed_addr constant [34 x i8] c"audio: %d Hz, step = %d + %d/%d.\0A\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"fractional step.\0A\00", align 1
@.str.10 = private unnamed_addr constant [26 x i8] c"audio: %d Hz, step = %d.\0A\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"fft_time         = %16.3f s.\0A\00", align 1
@.str.12 = private unnamed_addr constant [30 x i8] c"cqt_time         = %16.3f s.\0A\00", align 1
@.str.13 = private unnamed_addr constant [30 x i8] c"process_cqt_time = %16.3f s.\0A\00", align 1
@.str.14 = private unnamed_addr constant [30 x i8] c"update_sono_time = %16.3f s.\0A\00", align 1
@.str.15 = private unnamed_addr constant [30 x i8] c"alloc_time       = %16.3f s.\0A\00", align 1
@.str.16 = private unnamed_addr constant [30 x i8] c"bar_time         = %16.3f s.\0A\00", align 1
@.str.17 = private unnamed_addr constant [30 x i8] c"axis_time        = %16.3f s.\0A\00", align 1
@.str.18 = private unnamed_addr constant [30 x i8] c"sono_time        = %16.3f s.\0A\00", align 1
@.str.19 = private unnamed_addr constant [30 x i8] c"plot_time        = %16.3f s.\0A\00", align 1
@.str.20 = private unnamed_addr constant [12 x i8] c"a_weighting\00", align 1
@.str.21 = private unnamed_addr constant [12 x i8] c"b_weighting\00", align 1
@.str.22 = private unnamed_addr constant [12 x i8] c"c_weighting\00", align 1
@init_volume.func_names = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.22, i32 0, i32 0), i8* null], align 16
@.str.23 = private unnamed_addr constant [10 x i8] c"timeclamp\00", align 1
@.str.24 = private unnamed_addr constant [3 x i8] c"tc\00", align 1
@.str.25 = private unnamed_addr constant [10 x i8] c"frequency\00", align 1
@.str.26 = private unnamed_addr constant [5 x i8] c"freq\00", align 1
@.str.27 = private unnamed_addr constant [2 x i8] c"f\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"bar_v\00", align 1
@.str.29 = private unnamed_addr constant [7 x i8] c"sono_v\00", align 1
@init_volume.funcs = private unnamed_addr constant [3 x double (i8*, double)*] [double (i8*, double)* @a_weighting, double (i8*, double)* @b_weighting, double (i8*, double)* @c_weighting], align 16
@.str.30 = private unnamed_addr constant [35 x i8] c"[%d] %s is nan, setting it to %g.\0A\00", align 1
@.str.31 = private unnamed_addr constant [44 x i8] c"[%d] %s is too low (%g), setting it to %g.\0A\00", align 1
@.str.32 = private unnamed_addr constant [45 x i8] c"[%d] %s it too high (%g), setting it to %g.\0A\00", align 1
@.str.33 = private unnamed_addr constant [8 x i8] c"tlength\00", align 1
@.str.34 = private unnamed_addr constant [21 x i8] c"nb_cqt_coeffs = %d.\0A\00", align 1
@.str.35 = private unnamed_addr constant [54 x i8] c"freetype is not available, ignoring fontfile option.\0A\00", align 1
@.str.36 = private unnamed_addr constant [52 x i8] c"fontconfig is not available, ignoring font option.\0A\00", align 1
@.str.37 = private unnamed_addr constant [13 x i8] c"EF G A BC D \00", align 1
@avpriv_vga16_font = external constant [4096 x i8], align 16
@.str.38 = private unnamed_addr constant [5 x i8] c"midi\00", align 1
@.str.39 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.40 = private unnamed_addr constant [2 x i8] c"g\00", align 1
@.str.41 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@init_axis_color.funcs = private unnamed_addr constant [4 x double (i8*, double)*] [double (i8*, double)* @midi, double (i8*, double)* @r_func, double (i8*, double)* @g_func, double (i8*, double)* @b_func], align 16
@.str.42 = private unnamed_addr constant [108 x i8] c"font axis rendering is not implemented in non-default frequency range, please use axisfile option instead.\0A\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.44 = private unnamed_addr constant [15 x i8] c"set video size\00", align 1
@.str.45 = private unnamed_addr constant [10 x i8] c"1920x1080\00", align 1
@.str.46 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.47 = private unnamed_addr constant [4 x i8] c"fps\00", align 1
@.str.48 = private unnamed_addr constant [15 x i8] c"set video rate\00", align 1
@.str.49 = private unnamed_addr constant [3 x i8] c"25\00", align 1
@.str.50 = private unnamed_addr constant [5 x i8] c"rate\00", align 1
@.str.51 = private unnamed_addr constant [6 x i8] c"bar_h\00", align 1
@.str.52 = private unnamed_addr constant [20 x i8] c"set bargraph height\00", align 1
@.str.53 = private unnamed_addr constant [7 x i8] c"axis_h\00", align 1
@.str.54 = private unnamed_addr constant [16 x i8] c"set axis height\00", align 1
@.str.55 = private unnamed_addr constant [7 x i8] c"sono_h\00", align 1
@.str.56 = private unnamed_addr constant [20 x i8] c"set sonogram height\00", align 1
@.str.57 = private unnamed_addr constant [7 x i8] c"fullhd\00", align 1
@.str.58 = private unnamed_addr constant [16 x i8] c"set fullhd size\00", align 1
@.str.59 = private unnamed_addr constant [20 x i8] c"set sonogram volume\00", align 1
@.str.60 = private unnamed_addr constant [3 x i8] c"16\00", align 1
@.str.61 = private unnamed_addr constant [7 x i8] c"volume\00", align 1
@.str.62 = private unnamed_addr constant [20 x i8] c"set bargraph volume\00", align 1
@.str.63 = private unnamed_addr constant [8 x i8] c"volume2\00", align 1
@.str.64 = private unnamed_addr constant [7 x i8] c"sono_g\00", align 1
@.str.65 = private unnamed_addr constant [19 x i8] c"set sonogram gamma\00", align 1
@.str.66 = private unnamed_addr constant [6 x i8] c"gamma\00", align 1
@.str.67 = private unnamed_addr constant [6 x i8] c"bar_g\00", align 1
@.str.68 = private unnamed_addr constant [19 x i8] c"set bargraph gamma\00", align 1
@.str.69 = private unnamed_addr constant [7 x i8] c"gamma2\00", align 1
@.str.70 = private unnamed_addr constant [6 x i8] c"bar_t\00", align 1
@.str.71 = private unnamed_addr constant [21 x i8] c"set bar transparency\00", align 1
@.str.72 = private unnamed_addr constant [14 x i8] c"set timeclamp\00", align 1
@.str.73 = private unnamed_addr constant [7 x i8] c"attack\00", align 1
@.str.74 = private unnamed_addr constant [16 x i8] c"set attack time\00", align 1
@.str.75 = private unnamed_addr constant [9 x i8] c"basefreq\00", align 1
@.str.76 = private unnamed_addr constant [19 x i8] c"set base frequency\00", align 1
@.str.77 = private unnamed_addr constant [8 x i8] c"endfreq\00", align 1
@.str.78 = private unnamed_addr constant [18 x i8] c"set end frequency\00", align 1
@.str.79 = private unnamed_addr constant [11 x i8] c"coeffclamp\00", align 1
@.str.80 = private unnamed_addr constant [15 x i8] c"set coeffclamp\00", align 1
@.str.81 = private unnamed_addr constant [12 x i8] c"set tlength\00", align 1
@.str.82 = private unnamed_addr constant [18 x i8] c"384*tc/(384+tc*f)\00", align 1
@.str.83 = private unnamed_addr constant [6 x i8] c"count\00", align 1
@.str.84 = private unnamed_addr constant [20 x i8] c"set transform count\00", align 1
@.str.85 = private unnamed_addr constant [7 x i8] c"fcount\00", align 1
@.str.86 = private unnamed_addr constant [20 x i8] c"set frequency count\00", align 1
@.str.87 = private unnamed_addr constant [9 x i8] c"fontfile\00", align 1
@.str.88 = private unnamed_addr constant [19 x i8] c"set axis font file\00", align 1
@.str.89 = private unnamed_addr constant [5 x i8] c"font\00", align 1
@.str.90 = private unnamed_addr constant [14 x i8] c"set axis font\00", align 1
@.str.91 = private unnamed_addr constant [10 x i8] c"fontcolor\00", align 1
@.str.92 = private unnamed_addr constant [15 x i8] c"set font color\00", align 1
@.str.93 = private unnamed_addr constant [105 x i8] c"st(0, (midi(f)-59.5)/12);st(1, if(between(ld(0),0,1), 0.5-0.5*cos(2*PI*ld(0)), 0));r(1-ld(1)) + b(ld(1))\00", align 1
@.str.94 = private unnamed_addr constant [9 x i8] c"axisfile\00", align 1
@.str.95 = private unnamed_addr constant [15 x i8] c"set axis image\00", align 1
@.str.96 = private unnamed_addr constant [5 x i8] c"axis\00", align 1
@.str.97 = private unnamed_addr constant [10 x i8] c"draw axis\00", align 1
@.str.98 = private unnamed_addr constant [5 x i8] c"text\00", align 1
@.str.99 = private unnamed_addr constant [4 x i8] c"csp\00", align 1
@.str.100 = private unnamed_addr constant [16 x i8] c"set color space\00", align 1
@.str.101 = private unnamed_addr constant [12 x i8] c"unspecified\00", align 1
@.str.102 = private unnamed_addr constant [6 x i8] c"bt709\00", align 1
@.str.103 = private unnamed_addr constant [4 x i8] c"fcc\00", align 1
@.str.104 = private unnamed_addr constant [8 x i8] c"bt470bg\00", align 1
@.str.105 = private unnamed_addr constant [10 x i8] c"smpte170m\00", align 1
@.str.106 = private unnamed_addr constant [10 x i8] c"smpte240m\00", align 1
@.str.107 = private unnamed_addr constant [10 x i8] c"bt2020ncl\00", align 1
@.str.108 = private unnamed_addr constant [8 x i8] c"cscheme\00", align 1
@.str.109 = private unnamed_addr constant [17 x i8] c"set color scheme\00", align 1
@.str.110 = private unnamed_addr constant [16 x i8] c"1|0.5|0|0|0.5|1\00", align 1
@showcqt_options = internal constant <{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption }> <{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.44, i32 0, i32 0), i32 368, i32 11, { i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.45, i32 0, i32 0) }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.44, i32 0, i32 0), i32 368, i32 11, { i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.45, i32 0, i32 0) }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.48, i32 0, i32 0), i32 376, i32 14, { i8* } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49, i32 0, i32 0) }, double 1.000000e+00, double 1.000000e+03, i32 65552, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.48, i32 0, i32 0), i32 376, i32 14, { i8* } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49, i32 0, i32 0) }, double 1.000000e+00, double 1.000000e+03, i32 65552, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.48, i32 0, i32 0), i32 376, i32 14, { i8* } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49, i32 0, i32 0) }, double 1.000000e+00, double 1.000000e+03, i32 65552, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.52, i32 0, i32 0), i32 384, i32 1, %union.anon { i64 -1 }, double -1.000000e+00, double 0x41DFFFFFFFC00000, i32 65552, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.54, i32 0, i32 0), i32 388, i32 1, %union.anon { i64 -1 }, double -1.000000e+00, double 0x41DFFFFFFFC00000, i32 65552, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.56, i32 0, i32 0), i32 392, i32 1, %union.anon { i64 -1 }, double -1.000000e+00, double 0x41DFFFFFFFC00000, i32 65552, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.58, i32 0, i32 0), i32 396, i32 18, %union.anon { i64 1 }, double 0.000000e+00, double 1.000000e+00, i32 65552, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.59, i32 0, i32 0), i32 400, i32 5, { i8* } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.60, i32 0, i32 0) }, double -1.280000e+02, double 1.270000e+02, i32 65552, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.59, i32 0, i32 0), i32 400, i32 5, { i8* } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.60, i32 0, i32 0) }, double -1.280000e+02, double 1.270000e+02, i32 65552, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.62, i32 0, i32 0), i32 408, i32 5, { i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i32 0, i32 0) }, double -1.280000e+02, double 1.270000e+02, i32 65552, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.62, i32 0, i32 0), i32 408, i32 5, { i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i32 0, i32 0) }, double -1.280000e+02, double 1.270000e+02, i32 65552, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.65, i32 0, i32 0), i32 416, i32 4, { double } { double 3.000000e+00 }, double 1.000000e+00, double 7.000000e+00, i32 65552, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.65, i32 0, i32 0), i32 416, i32 4, { double } { double 3.000000e+00 }, double 1.000000e+00, double 7.000000e+00, i32 65552, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.68, i32 0, i32 0), i32 420, i32 4, { double } { double 1.000000e+00 }, double 1.000000e+00, double 7.000000e+00, i32 65552, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.68, i32 0, i32 0), i32 420, i32 4, { double } { double 1.000000e+00 }, double 1.000000e+00, double 7.000000e+00, i32 65552, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.71, i32 0, i32 0), i32 424, i32 4, { double } { double 1.000000e+00 }, double 0.000000e+00, double 1.000000e+00, i32 65552, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.72, i32 0, i32 0), i32 432, i32 3, { double } { double 1.700000e-01 }, double 2.000000e-03, double 1.000000e+00, i32 65552, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.72, i32 0, i32 0), i32 432, i32 3, { double } { double 1.700000e-01 }, double 2.000000e-03, double 1.000000e+00, i32 65552, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.74, i32 0, i32 0), i32 440, i32 3, { double } zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 65552, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.76, i32 0, i32 0), i32 448, i32 3, { double } { double 0x403403E6323519C5 }, double 1.000000e+01, double 1.000000e+05, i32 65552, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.78, i32 0, i32 0), i32 456, i32 3, { double } { double 0x40D403E6323519C5 }, double 1.000000e+01, double 1.000000e+05, i32 65552, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.80, i32 0, i32 0), i32 464, i32 4, { double } { double 1.000000e+00 }, double 1.000000e-01, double 1.000000e+01, i32 65552, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.81, i32 0, i32 0), i32 472, i32 5, { i8* } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.82, i32 0, i32 0) }, double -1.280000e+02, double 1.270000e+02, i32 65552, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.84, i32 0, i32 0), i32 480, i32 1, %union.anon { i64 6 }, double 1.000000e+00, double 3.000000e+01, i32 65552, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.86, i32 0, i32 0), i32 484, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+01, i32 65552, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.88, i32 0, i32 0), i32 488, i32 5, { i8* } zeroinitializer, double -1.280000e+02, double 1.270000e+02, i32 65552, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.89, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.90, i32 0, i32 0), i32 496, i32 5, { i8* } zeroinitializer, double -1.280000e+02, double 1.270000e+02, i32 65552, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.91, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.92, i32 0, i32 0), i32 504, i32 5, { i8* } { i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.93, i32 0, i32 0) }, double -1.280000e+02, double 1.270000e+02, i32 65552, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.95, i32 0, i32 0), i32 512, i32 5, { i8* } zeroinitializer, double -1.280000e+02, double 1.270000e+02, i32 65552, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.97, i32 0, i32 0), i32 520, i32 18, %union.anon { i64 1 }, double 0.000000e+00, double 1.000000e+00, i32 65552, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.97, i32 0, i32 0), i32 520, i32 18, %union.anon { i64 1 }, double 0.000000e+00, double 1.000000e+00, i32 65552, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.100, i32 0, i32 0), i32 524, i32 1, %union.anon { i64 2 }, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 65552, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.99, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.101, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.99, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.102, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.102, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.99, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.103, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.103, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 4 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.99, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.104, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.104, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 5 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.99, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.105, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.105, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 6 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.99, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.106, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 7 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.99, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.107, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.107, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 9 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.99, i32 0, i32 0) }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.109, i32 0, i32 0), i32 528, i32 5, { i8* } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.110, i32 0, i32 0) }, double -1.280000e+02, double 1.270000e+02, i32 65552, i8* null }, %struct.AVOption zeroinitializer }>, align 16
@.str.112 = private unnamed_addr constant [57 x i8] c"fullhd option is deprecated, use size/s option instead.\0A\00", align 1
@.str.113 = private unnamed_addr constant [44 x i8] c"fullhd set to 0 but with custom dimension.\0A\00", align 1
@.str.114 = private unnamed_addr constant [20 x i8] c"invalid dimension.\0A\00", align 1
@.str.115 = private unnamed_addr constant [52 x i8] c"unsupported colorspace, setting it to unspecified.\0A\00", align 1
@.str.116 = private unnamed_addr constant [33 x i8] c" %f | %f | %f | %f | %f | %f %1s\00", align 1
@.str.117 = private unnamed_addr constant [18 x i8] c"invalid cscheme.\0A\00", align 1
@query_formats.sample_fmts = private unnamed_addr constant [2 x i32] [i32 3, i32 -1], align 4
@query_formats.pix_fmts = private unnamed_addr constant [5 x i32] [i32 0, i32 4, i32 5, i32 2, i32 -1], align 16
@query_formats.channel_layouts = private unnamed_addr constant [3 x i64] [i64 3, i64 1610612736, i64 -1], align 16

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @init(%struct.AVFilterContext* %ctx) #0 !dbg !817 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.AVFilterContext*, align 8
  %s = alloca %struct.ShowCQTContext*, align 8
  store %struct.AVFilterContext* %ctx, %struct.AVFilterContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx.addr, metadata !819, metadata !820), !dbg !821
  call void @llvm.dbg.declare(metadata %struct.ShowCQTContext** %s, metadata !822, metadata !820), !dbg !969
  %0 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !970
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %0, i32 0, i32 9, !dbg !971
  %1 = load i8*, i8** %priv, align 8, !dbg !971
  %2 = bitcast i8* %1 to %struct.ShowCQTContext*, !dbg !970
  store %struct.ShowCQTContext* %2, %struct.ShowCQTContext** %s, align 8, !dbg !969
  %3 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !972
  %4 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !973
  %ctx1 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %4, i32 0, i32 1, !dbg !974
  store %struct.AVFilterContext* %3, %struct.AVFilterContext** %ctx1, align 8, !dbg !975
  %5 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !976
  %fullhd = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %5, i32 0, i32 51, !dbg !978
  %6 = load i32, i32* %fullhd, align 4, !dbg !978
  %tobool = icmp ne i32 %6, 0, !dbg !976
  br i1 %tobool, label %if.end8, label %if.then, !dbg !979

if.then:                                          ; preds = %entry
  %7 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !980
  %8 = bitcast %struct.AVFilterContext* %7 to i8*, !dbg !980
  call void (i8*, i32, i8*, ...) @av_log(i8* %8, i32 24, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.112, i32 0, i32 0)), !dbg !982
  %9 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !983
  %width = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %9, i32 0, i32 45, !dbg !985
  %10 = load i32, i32* %width, align 8, !dbg !985
  %cmp = icmp ne i32 %10, 1920, !dbg !986
  br i1 %cmp, label %if.then3, label %lor.lhs.false, !dbg !987

lor.lhs.false:                                    ; preds = %if.then
  %11 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !988
  %height = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %11, i32 0, i32 46, !dbg !990
  %12 = load i32, i32* %height, align 4, !dbg !990
  %cmp2 = icmp ne i32 %12, 1080, !dbg !991
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !992

if.then3:                                         ; preds = %lor.lhs.false, %if.then
  %13 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !993
  %14 = bitcast %struct.AVFilterContext* %13 to i8*, !dbg !993
  call void (i8*, i32, i8*, ...) @av_log(i8* %14, i32 16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.113, i32 0, i32 0)), !dbg !995
  store i32 -22, i32* %retval, align 4, !dbg !996
  br label %return, !dbg !996

if.end:                                           ; preds = %lor.lhs.false
  %15 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !997
  %width4 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %15, i32 0, i32 45, !dbg !998
  %16 = load i32, i32* %width4, align 8, !dbg !999
  %div = sdiv i32 %16, 2, !dbg !999
  store i32 %div, i32* %width4, align 8, !dbg !999
  %17 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1000
  %height5 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %17, i32 0, i32 46, !dbg !1001
  %18 = load i32, i32* %height5, align 4, !dbg !1002
  %div6 = sdiv i32 %18, 2, !dbg !1002
  store i32 %div6, i32* %height5, align 4, !dbg !1002
  %19 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1003
  %fullhd7 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %19, i32 0, i32 51, !dbg !1004
  store i32 1, i32* %fullhd7, align 4, !dbg !1005
  br label %if.end8, !dbg !1006

if.end8:                                          ; preds = %if.end, %entry
  %20 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1007
  %axis_h = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %20, i32 0, i32 49, !dbg !1009
  %21 = load i32, i32* %axis_h, align 4, !dbg !1009
  %cmp9 = icmp slt i32 %21, 0, !dbg !1010
  br i1 %cmp9, label %if.then10, label %if.end66, !dbg !1011

if.then10:                                        ; preds = %if.end8
  %22 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1012
  %width11 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %22, i32 0, i32 45, !dbg !1014
  %23 = load i32, i32* %width11, align 8, !dbg !1014
  %div12 = sdiv i32 %23, 60, !dbg !1015
  %24 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1016
  %axis_h13 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %24, i32 0, i32 49, !dbg !1017
  store i32 %div12, i32* %axis_h13, align 4, !dbg !1018
  %25 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1019
  %axis_h14 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %25, i32 0, i32 49, !dbg !1021
  %26 = load i32, i32* %axis_h14, align 4, !dbg !1021
  %and = and i32 %26, 1, !dbg !1022
  %tobool15 = icmp ne i32 %and, 0, !dbg !1022
  br i1 %tobool15, label %if.then16, label %if.end18, !dbg !1023

if.then16:                                        ; preds = %if.then10
  %27 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1024
  %axis_h17 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %27, i32 0, i32 49, !dbg !1025
  %28 = load i32, i32* %axis_h17, align 4, !dbg !1026
  %inc = add nsw i32 %28, 1, !dbg !1026
  store i32 %inc, i32* %axis_h17, align 4, !dbg !1026
  br label %if.end18, !dbg !1024

if.end18:                                         ; preds = %if.then16, %if.then10
  %29 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1027
  %bar_h = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %29, i32 0, i32 48, !dbg !1029
  %30 = load i32, i32* %bar_h, align 8, !dbg !1029
  %cmp19 = icmp sge i32 %30, 0, !dbg !1030
  br i1 %cmp19, label %land.lhs.true, label %if.end27, !dbg !1031

land.lhs.true:                                    ; preds = %if.end18
  %31 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1032
  %sono_h = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %31, i32 0, i32 50, !dbg !1034
  %32 = load i32, i32* %sono_h, align 8, !dbg !1034
  %cmp20 = icmp sge i32 %32, 0, !dbg !1035
  br i1 %cmp20, label %if.then21, label %if.end27, !dbg !1036

if.then21:                                        ; preds = %land.lhs.true
  %33 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1037
  %height22 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %33, i32 0, i32 46, !dbg !1038
  %34 = load i32, i32* %height22, align 4, !dbg !1038
  %35 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1039
  %bar_h23 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %35, i32 0, i32 48, !dbg !1040
  %36 = load i32, i32* %bar_h23, align 8, !dbg !1040
  %sub = sub nsw i32 %34, %36, !dbg !1041
  %37 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1042
  %sono_h24 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %37, i32 0, i32 50, !dbg !1043
  %38 = load i32, i32* %sono_h24, align 8, !dbg !1043
  %sub25 = sub nsw i32 %sub, %38, !dbg !1044
  %39 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1045
  %axis_h26 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %39, i32 0, i32 49, !dbg !1046
  store i32 %sub25, i32* %axis_h26, align 4, !dbg !1047
  br label %if.end27, !dbg !1045

if.end27:                                         ; preds = %if.then21, %land.lhs.true, %if.end18
  %40 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1048
  %bar_h28 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %40, i32 0, i32 48, !dbg !1050
  %41 = load i32, i32* %bar_h28, align 8, !dbg !1050
  %cmp29 = icmp sge i32 %41, 0, !dbg !1051
  br i1 %cmp29, label %land.lhs.true30, label %if.end44, !dbg !1052

land.lhs.true30:                                  ; preds = %if.end27
  %42 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1053
  %sono_h31 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %42, i32 0, i32 50, !dbg !1055
  %43 = load i32, i32* %sono_h31, align 8, !dbg !1055
  %cmp32 = icmp slt i32 %43, 0, !dbg !1056
  br i1 %cmp32, label %if.then33, label %if.end44, !dbg !1057

if.then33:                                        ; preds = %land.lhs.true30
  %44 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1058
  %axis_h34 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %44, i32 0, i32 49, !dbg !1059
  %45 = load i32, i32* %axis_h34, align 4, !dbg !1059
  %46 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1060
  %height35 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %46, i32 0, i32 46, !dbg !1061
  %47 = load i32, i32* %height35, align 4, !dbg !1061
  %48 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1062
  %bar_h36 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %48, i32 0, i32 48, !dbg !1063
  %49 = load i32, i32* %bar_h36, align 8, !dbg !1063
  %sub37 = sub nsw i32 %47, %49, !dbg !1064
  %cmp38 = icmp sgt i32 %45, %sub37, !dbg !1065
  br i1 %cmp38, label %cond.true, label %cond.false, !dbg !1066

cond.true:                                        ; preds = %if.then33
  %50 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1067
  %height39 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %50, i32 0, i32 46, !dbg !1068
  %51 = load i32, i32* %height39, align 4, !dbg !1068
  %52 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1069
  %bar_h40 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %52, i32 0, i32 48, !dbg !1070
  %53 = load i32, i32* %bar_h40, align 8, !dbg !1070
  %sub41 = sub nsw i32 %51, %53, !dbg !1071
  br label %cond.end, !dbg !1072

cond.false:                                       ; preds = %if.then33
  %54 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1073
  %axis_h42 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %54, i32 0, i32 49, !dbg !1075
  %55 = load i32, i32* %axis_h42, align 4, !dbg !1075
  br label %cond.end, !dbg !1076

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub41, %cond.true ], [ %55, %cond.false ], !dbg !1077
  %56 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1079
  %axis_h43 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %56, i32 0, i32 49, !dbg !1080
  store i32 %cond, i32* %axis_h43, align 4, !dbg !1081
  br label %if.end44, !dbg !1079

if.end44:                                         ; preds = %cond.end, %land.lhs.true30, %if.end27
  %57 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1082
  %bar_h45 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %57, i32 0, i32 48, !dbg !1084
  %58 = load i32, i32* %bar_h45, align 8, !dbg !1084
  %cmp46 = icmp slt i32 %58, 0, !dbg !1085
  br i1 %cmp46, label %land.lhs.true47, label %if.end65, !dbg !1086

land.lhs.true47:                                  ; preds = %if.end44
  %59 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1087
  %sono_h48 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %59, i32 0, i32 50, !dbg !1089
  %60 = load i32, i32* %sono_h48, align 8, !dbg !1089
  %cmp49 = icmp sge i32 %60, 0, !dbg !1090
  br i1 %cmp49, label %if.then50, label %if.end65, !dbg !1091

if.then50:                                        ; preds = %land.lhs.true47
  %61 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1092
  %axis_h51 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %61, i32 0, i32 49, !dbg !1093
  %62 = load i32, i32* %axis_h51, align 4, !dbg !1093
  %63 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1094
  %height52 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %63, i32 0, i32 46, !dbg !1095
  %64 = load i32, i32* %height52, align 4, !dbg !1095
  %65 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1096
  %sono_h53 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %65, i32 0, i32 50, !dbg !1097
  %66 = load i32, i32* %sono_h53, align 8, !dbg !1097
  %sub54 = sub nsw i32 %64, %66, !dbg !1098
  %cmp55 = icmp sgt i32 %62, %sub54, !dbg !1099
  br i1 %cmp55, label %cond.true56, label %cond.false60, !dbg !1100

cond.true56:                                      ; preds = %if.then50
  %67 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1101
  %height57 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %67, i32 0, i32 46, !dbg !1102
  %68 = load i32, i32* %height57, align 4, !dbg !1102
  %69 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1103
  %sono_h58 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %69, i32 0, i32 50, !dbg !1104
  %70 = load i32, i32* %sono_h58, align 8, !dbg !1104
  %sub59 = sub nsw i32 %68, %70, !dbg !1105
  br label %cond.end62, !dbg !1106

cond.false60:                                     ; preds = %if.then50
  %71 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1107
  %axis_h61 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %71, i32 0, i32 49, !dbg !1109
  %72 = load i32, i32* %axis_h61, align 4, !dbg !1109
  br label %cond.end62, !dbg !1110

cond.end62:                                       ; preds = %cond.false60, %cond.true56
  %cond63 = phi i32 [ %sub59, %cond.true56 ], [ %72, %cond.false60 ], !dbg !1111
  %73 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1113
  %axis_h64 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %73, i32 0, i32 49, !dbg !1114
  store i32 %cond63, i32* %axis_h64, align 4, !dbg !1115
  br label %if.end65, !dbg !1113

if.end65:                                         ; preds = %cond.end62, %land.lhs.true47, %if.end44
  br label %if.end66, !dbg !1116

if.end66:                                         ; preds = %if.end65, %if.end8
  %74 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1117
  %bar_h67 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %74, i32 0, i32 48, !dbg !1119
  %75 = load i32, i32* %bar_h67, align 8, !dbg !1119
  %cmp68 = icmp slt i32 %75, 0, !dbg !1120
  br i1 %cmp68, label %if.then69, label %if.end91, !dbg !1121

if.then69:                                        ; preds = %if.end66
  %76 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1122
  %height70 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %76, i32 0, i32 46, !dbg !1124
  %77 = load i32, i32* %height70, align 4, !dbg !1124
  %78 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1125
  %axis_h71 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %78, i32 0, i32 49, !dbg !1126
  %79 = load i32, i32* %axis_h71, align 4, !dbg !1126
  %sub72 = sub nsw i32 %77, %79, !dbg !1127
  %div73 = sdiv i32 %sub72, 2, !dbg !1128
  %80 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1129
  %bar_h74 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %80, i32 0, i32 48, !dbg !1130
  store i32 %div73, i32* %bar_h74, align 8, !dbg !1131
  %81 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1132
  %bar_h75 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %81, i32 0, i32 48, !dbg !1134
  %82 = load i32, i32* %bar_h75, align 8, !dbg !1134
  %and76 = and i32 %82, 1, !dbg !1135
  %tobool77 = icmp ne i32 %and76, 0, !dbg !1135
  br i1 %tobool77, label %if.then78, label %if.end80, !dbg !1136

if.then78:                                        ; preds = %if.then69
  %83 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1137
  %bar_h79 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %83, i32 0, i32 48, !dbg !1138
  %84 = load i32, i32* %bar_h79, align 8, !dbg !1139
  %dec = add nsw i32 %84, -1, !dbg !1139
  store i32 %dec, i32* %bar_h79, align 8, !dbg !1139
  br label %if.end80, !dbg !1137

if.end80:                                         ; preds = %if.then78, %if.then69
  %85 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1140
  %sono_h81 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %85, i32 0, i32 50, !dbg !1142
  %86 = load i32, i32* %sono_h81, align 8, !dbg !1142
  %cmp82 = icmp sge i32 %86, 0, !dbg !1143
  br i1 %cmp82, label %if.then83, label %if.end90, !dbg !1144

if.then83:                                        ; preds = %if.end80
  %87 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1145
  %height84 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %87, i32 0, i32 46, !dbg !1146
  %88 = load i32, i32* %height84, align 4, !dbg !1146
  %89 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1147
  %sono_h85 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %89, i32 0, i32 50, !dbg !1148
  %90 = load i32, i32* %sono_h85, align 8, !dbg !1148
  %sub86 = sub nsw i32 %88, %90, !dbg !1149
  %91 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1150
  %axis_h87 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %91, i32 0, i32 49, !dbg !1151
  %92 = load i32, i32* %axis_h87, align 4, !dbg !1151
  %sub88 = sub nsw i32 %sub86, %92, !dbg !1152
  %93 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1153
  %bar_h89 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %93, i32 0, i32 48, !dbg !1154
  store i32 %sub88, i32* %bar_h89, align 8, !dbg !1155
  br label %if.end90, !dbg !1153

if.end90:                                         ; preds = %if.then83, %if.end80
  br label %if.end91, !dbg !1156

if.end91:                                         ; preds = %if.end90, %if.end66
  %94 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1157
  %sono_h92 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %94, i32 0, i32 50, !dbg !1159
  %95 = load i32, i32* %sono_h92, align 8, !dbg !1159
  %cmp93 = icmp slt i32 %95, 0, !dbg !1160
  br i1 %cmp93, label %if.then94, label %if.end101, !dbg !1161

if.then94:                                        ; preds = %if.end91
  %96 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1162
  %height95 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %96, i32 0, i32 46, !dbg !1163
  %97 = load i32, i32* %height95, align 4, !dbg !1163
  %98 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1164
  %axis_h96 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %98, i32 0, i32 49, !dbg !1165
  %99 = load i32, i32* %axis_h96, align 4, !dbg !1165
  %sub97 = sub nsw i32 %97, %99, !dbg !1166
  %100 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1167
  %bar_h98 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %100, i32 0, i32 48, !dbg !1168
  %101 = load i32, i32* %bar_h98, align 8, !dbg !1168
  %sub99 = sub nsw i32 %sub97, %101, !dbg !1169
  %102 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1170
  %sono_h100 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %102, i32 0, i32 50, !dbg !1171
  store i32 %sub99, i32* %sono_h100, align 8, !dbg !1172
  br label %if.end101, !dbg !1170

if.end101:                                        ; preds = %if.then94, %if.end91
  %103 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1173
  %width102 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %103, i32 0, i32 45, !dbg !1175
  %104 = load i32, i32* %width102, align 8, !dbg !1175
  %and103 = and i32 %104, 1, !dbg !1176
  %tobool104 = icmp ne i32 %and103, 0, !dbg !1176
  br i1 %tobool104, label %if.then149, label %lor.lhs.false105, !dbg !1177

lor.lhs.false105:                                 ; preds = %if.end101
  %105 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1178
  %height106 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %105, i32 0, i32 46, !dbg !1180
  %106 = load i32, i32* %height106, align 4, !dbg !1180
  %and107 = and i32 %106, 1, !dbg !1181
  %tobool108 = icmp ne i32 %and107, 0, !dbg !1181
  br i1 %tobool108, label %if.then149, label %lor.lhs.false109, !dbg !1182

lor.lhs.false109:                                 ; preds = %lor.lhs.false105
  %107 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1183
  %bar_h110 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %107, i32 0, i32 48, !dbg !1185
  %108 = load i32, i32* %bar_h110, align 8, !dbg !1185
  %and111 = and i32 %108, 1, !dbg !1186
  %tobool112 = icmp ne i32 %and111, 0, !dbg !1186
  br i1 %tobool112, label %if.then149, label %lor.lhs.false113, !dbg !1187

lor.lhs.false113:                                 ; preds = %lor.lhs.false109
  %109 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1188
  %axis_h114 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %109, i32 0, i32 49, !dbg !1190
  %110 = load i32, i32* %axis_h114, align 4, !dbg !1190
  %and115 = and i32 %110, 1, !dbg !1191
  %tobool116 = icmp ne i32 %and115, 0, !dbg !1191
  br i1 %tobool116, label %if.then149, label %lor.lhs.false117, !dbg !1192

lor.lhs.false117:                                 ; preds = %lor.lhs.false113
  %111 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1193
  %sono_h118 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %111, i32 0, i32 50, !dbg !1195
  %112 = load i32, i32* %sono_h118, align 8, !dbg !1195
  %and119 = and i32 %112, 1, !dbg !1196
  %tobool120 = icmp ne i32 %and119, 0, !dbg !1196
  br i1 %tobool120, label %if.then149, label %lor.lhs.false121, !dbg !1197

lor.lhs.false121:                                 ; preds = %lor.lhs.false117
  %113 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1198
  %bar_h122 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %113, i32 0, i32 48, !dbg !1199
  %114 = load i32, i32* %bar_h122, align 8, !dbg !1199
  %cmp123 = icmp slt i32 %114, 0, !dbg !1200
  br i1 %cmp123, label %if.then149, label %lor.lhs.false124, !dbg !1201

lor.lhs.false124:                                 ; preds = %lor.lhs.false121
  %115 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1202
  %axis_h125 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %115, i32 0, i32 49, !dbg !1203
  %116 = load i32, i32* %axis_h125, align 4, !dbg !1203
  %cmp126 = icmp slt i32 %116, 0, !dbg !1204
  br i1 %cmp126, label %if.then149, label %lor.lhs.false127, !dbg !1205

lor.lhs.false127:                                 ; preds = %lor.lhs.false124
  %117 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1206
  %sono_h128 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %117, i32 0, i32 50, !dbg !1207
  %118 = load i32, i32* %sono_h128, align 8, !dbg !1207
  %cmp129 = icmp slt i32 %118, 0, !dbg !1208
  br i1 %cmp129, label %if.then149, label %lor.lhs.false130, !dbg !1209

lor.lhs.false130:                                 ; preds = %lor.lhs.false127
  %119 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1210
  %bar_h131 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %119, i32 0, i32 48, !dbg !1211
  %120 = load i32, i32* %bar_h131, align 8, !dbg !1211
  %121 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1212
  %height132 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %121, i32 0, i32 46, !dbg !1213
  %122 = load i32, i32* %height132, align 4, !dbg !1213
  %cmp133 = icmp sgt i32 %120, %122, !dbg !1214
  br i1 %cmp133, label %if.then149, label %lor.lhs.false134, !dbg !1215

lor.lhs.false134:                                 ; preds = %lor.lhs.false130
  %123 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1216
  %axis_h135 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %123, i32 0, i32 49, !dbg !1217
  %124 = load i32, i32* %axis_h135, align 4, !dbg !1217
  %125 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1218
  %height136 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %125, i32 0, i32 46, !dbg !1219
  %126 = load i32, i32* %height136, align 4, !dbg !1219
  %cmp137 = icmp sgt i32 %124, %126, !dbg !1220
  br i1 %cmp137, label %if.then149, label %lor.lhs.false138, !dbg !1221

lor.lhs.false138:                                 ; preds = %lor.lhs.false134
  %127 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1222
  %sono_h139 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %127, i32 0, i32 50, !dbg !1223
  %128 = load i32, i32* %sono_h139, align 8, !dbg !1223
  %129 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1224
  %height140 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %129, i32 0, i32 46, !dbg !1225
  %130 = load i32, i32* %height140, align 4, !dbg !1225
  %cmp141 = icmp sgt i32 %128, %130, !dbg !1226
  br i1 %cmp141, label %if.then149, label %lor.lhs.false142, !dbg !1227

lor.lhs.false142:                                 ; preds = %lor.lhs.false138
  %131 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1228
  %bar_h143 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %131, i32 0, i32 48, !dbg !1229
  %132 = load i32, i32* %bar_h143, align 8, !dbg !1229
  %133 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1230
  %axis_h144 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %133, i32 0, i32 49, !dbg !1231
  %134 = load i32, i32* %axis_h144, align 4, !dbg !1231
  %add = add nsw i32 %132, %134, !dbg !1232
  %135 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1233
  %sono_h145 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %135, i32 0, i32 50, !dbg !1234
  %136 = load i32, i32* %sono_h145, align 8, !dbg !1234
  %add146 = add nsw i32 %add, %136, !dbg !1235
  %137 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1236
  %height147 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %137, i32 0, i32 46, !dbg !1237
  %138 = load i32, i32* %height147, align 4, !dbg !1237
  %cmp148 = icmp ne i32 %add146, %138, !dbg !1238
  br i1 %cmp148, label %if.then149, label %if.end150, !dbg !1239

if.then149:                                       ; preds = %lor.lhs.false142, %lor.lhs.false138, %lor.lhs.false134, %lor.lhs.false130, %lor.lhs.false127, %lor.lhs.false124, %lor.lhs.false121, %lor.lhs.false117, %lor.lhs.false113, %lor.lhs.false109, %lor.lhs.false105, %if.end101
  %139 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !1241
  %140 = bitcast %struct.AVFilterContext* %139 to i8*, !dbg !1241
  call void (i8*, i32, i8*, ...) @av_log(i8* %140, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.114, i32 0, i32 0)), !dbg !1243
  store i32 -22, i32* %retval, align 4, !dbg !1244
  br label %return, !dbg !1244

if.end150:                                        ; preds = %lor.lhs.false142
  %141 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1245
  %fcount = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %141, i32 0, i32 64, !dbg !1247
  %142 = load i32, i32* %fcount, align 4, !dbg !1247
  %tobool151 = icmp ne i32 %142, 0, !dbg !1245
  br i1 %tobool151, label %if.end160, label %if.then152, !dbg !1248

if.then152:                                       ; preds = %if.end150
  br label %do.body, !dbg !1249, !llvm.loop !1251

do.body:                                          ; preds = %land.end, %if.then152
  %143 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1252
  %fcount153 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %143, i32 0, i32 64, !dbg !1254
  %144 = load i32, i32* %fcount153, align 4, !dbg !1255
  %inc154 = add nsw i32 %144, 1, !dbg !1255
  store i32 %inc154, i32* %fcount153, align 4, !dbg !1255
  br label %do.cond, !dbg !1256

do.cond:                                          ; preds = %do.body
  %145 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1257
  %fcount155 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %145, i32 0, i32 64, !dbg !1259
  %146 = load i32, i32* %fcount155, align 4, !dbg !1259
  %147 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1260
  %width156 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %147, i32 0, i32 45, !dbg !1261
  %148 = load i32, i32* %width156, align 8, !dbg !1261
  %mul = mul nsw i32 %146, %148, !dbg !1262
  %cmp157 = icmp slt i32 %mul, 1920, !dbg !1263
  br i1 %cmp157, label %land.rhs, label %land.end, !dbg !1264

land.rhs:                                         ; preds = %do.cond
  %149 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1265
  %fcount158 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %149, i32 0, i32 64, !dbg !1267
  %150 = load i32, i32* %fcount158, align 4, !dbg !1267
  %cmp159 = icmp slt i32 %150, 10, !dbg !1268
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %151 = phi i1 [ false, %do.cond ], [ %cmp159, %land.rhs ]
  br i1 %151, label %do.body, label %do.end, !dbg !1269, !llvm.loop !1251

do.end:                                           ; preds = %land.end
  br label %if.end160, !dbg !1271

if.end160:                                        ; preds = %do.end, %if.end150
  %152 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1272
  call void @init_colormatrix(%struct.ShowCQTContext* %152), !dbg !1273
  %153 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1274
  %call = call i32 @init_cscheme(%struct.ShowCQTContext* %153), !dbg !1275
  store i32 %call, i32* %retval, align 4, !dbg !1276
  br label %return, !dbg !1276

return:                                           ; preds = %if.end160, %if.then149, %if.then3
  %154 = load i32, i32* %retval, align 4, !dbg !1277
  ret i32 %154, !dbg !1277
}

; Function Attrs: cold nounwind optsize uwtable
define internal void @uninit(%struct.AVFilterContext* %ctx) #0 !dbg !1278 {
entry:
  %ctx.addr = alloca %struct.AVFilterContext*, align 8
  store %struct.AVFilterContext* %ctx, %struct.AVFilterContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx.addr, metadata !1279, metadata !820), !dbg !1280
  %0 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !1281
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %0, i32 0, i32 9, !dbg !1282
  %1 = load i8*, i8** %priv, align 8, !dbg !1282
  %2 = bitcast i8* %1 to %struct.ShowCQTContext*, !dbg !1281
  call void @common_uninit(%struct.ShowCQTContext* %2), !dbg !1283
  ret void, !dbg !1284
}

; Function Attrs: nounwind uwtable
define internal i32 @query_formats(%struct.AVFilterContext* %ctx) #1 !dbg !1285 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.AVFilterContext*, align 8
  %formats = alloca %struct.AVFilterFormats*, align 8
  %layouts = alloca %struct.AVFilterChannelLayouts*, align 8
  %inlink = alloca %struct.AVFilterLink*, align 8
  %outlink = alloca %struct.AVFilterLink*, align 8
  %sample_fmts = alloca [2 x i32], align 4
  %pix_fmts = alloca [5 x i32], align 16
  %channel_layouts = alloca [3 x i64], align 16
  %ret = alloca i32, align 4
  store %struct.AVFilterContext* %ctx, %struct.AVFilterContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx.addr, metadata !1286, metadata !820), !dbg !1287
  call void @llvm.dbg.declare(metadata %struct.AVFilterFormats** %formats, metadata !1288, metadata !820), !dbg !1289
  store %struct.AVFilterFormats* null, %struct.AVFilterFormats** %formats, align 8, !dbg !1289
  call void @llvm.dbg.declare(metadata %struct.AVFilterChannelLayouts** %layouts, metadata !1290, metadata !820), !dbg !1293
  store %struct.AVFilterChannelLayouts* null, %struct.AVFilterChannelLayouts** %layouts, align 8, !dbg !1293
  call void @llvm.dbg.declare(metadata %struct.AVFilterLink** %inlink, metadata !1294, metadata !820), !dbg !1295
  %0 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !1296
  %inputs = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %0, i32 0, i32 4, !dbg !1297
  %1 = load %struct.AVFilterLink**, %struct.AVFilterLink*** %inputs, align 8, !dbg !1297
  %arrayidx = getelementptr inbounds %struct.AVFilterLink*, %struct.AVFilterLink** %1, i64 0, !dbg !1296
  %2 = load %struct.AVFilterLink*, %struct.AVFilterLink** %arrayidx, align 8, !dbg !1296
  store %struct.AVFilterLink* %2, %struct.AVFilterLink** %inlink, align 8, !dbg !1295
  call void @llvm.dbg.declare(metadata %struct.AVFilterLink** %outlink, metadata !1298, metadata !820), !dbg !1299
  %3 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !1300
  %outputs = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %3, i32 0, i32 7, !dbg !1301
  %4 = load %struct.AVFilterLink**, %struct.AVFilterLink*** %outputs, align 8, !dbg !1301
  %arrayidx1 = getelementptr inbounds %struct.AVFilterLink*, %struct.AVFilterLink** %4, i64 0, !dbg !1300
  %5 = load %struct.AVFilterLink*, %struct.AVFilterLink** %arrayidx1, align 8, !dbg !1300
  store %struct.AVFilterLink* %5, %struct.AVFilterLink** %outlink, align 8, !dbg !1299
  call void @llvm.dbg.declare(metadata [2 x i32]* %sample_fmts, metadata !1302, metadata !820), !dbg !1304
  %6 = bitcast [2 x i32]* %sample_fmts to i8*, !dbg !1304
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* bitcast ([2 x i32]* @query_formats.sample_fmts to i8*), i64 8, i32 4, i1 false), !dbg !1304
  call void @llvm.dbg.declare(metadata [5 x i32]* %pix_fmts, metadata !1305, metadata !820), !dbg !1309
  %7 = bitcast [5 x i32]* %pix_fmts to i8*, !dbg !1309
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* bitcast ([5 x i32]* @query_formats.pix_fmts to i8*), i64 20, i32 16, i1 false), !dbg !1309
  call void @llvm.dbg.declare(metadata [3 x i64]* %channel_layouts, metadata !1310, metadata !820), !dbg !1313
  %8 = bitcast [3 x i64]* %channel_layouts to i8*, !dbg !1313
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* bitcast ([3 x i64]* @query_formats.channel_layouts to i8*), i64 24, i32 16, i1 false), !dbg !1313
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1314, metadata !820), !dbg !1315
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %sample_fmts, i32 0, i32 0, !dbg !1316
  %call = call %struct.AVFilterFormats* @ff_make_format_list(i32* %arraydecay), !dbg !1317
  store %struct.AVFilterFormats* %call, %struct.AVFilterFormats** %formats, align 8, !dbg !1318
  %9 = load %struct.AVFilterFormats*, %struct.AVFilterFormats** %formats, align 8, !dbg !1319
  %10 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink, align 8, !dbg !1321
  %out_formats = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %10, i32 0, i32 13, !dbg !1322
  %call2 = call i32 @ff_formats_ref(%struct.AVFilterFormats* %9, %struct.AVFilterFormats** %out_formats), !dbg !1323
  store i32 %call2, i32* %ret, align 4, !dbg !1324
  %cmp = icmp slt i32 %call2, 0, !dbg !1325
  br i1 %cmp, label %if.then, label %if.end, !dbg !1326

if.then:                                          ; preds = %entry
  %11 = load i32, i32* %ret, align 4, !dbg !1327
  store i32 %11, i32* %retval, align 4, !dbg !1328
  br label %return, !dbg !1328

if.end:                                           ; preds = %entry
  %arraydecay3 = getelementptr inbounds [3 x i64], [3 x i64]* %channel_layouts, i32 0, i32 0, !dbg !1329
  %call4 = call %struct.AVFilterChannelLayouts* @avfilter_make_format64_list(i64* %arraydecay3), !dbg !1330
  store %struct.AVFilterChannelLayouts* %call4, %struct.AVFilterChannelLayouts** %layouts, align 8, !dbg !1331
  %12 = load %struct.AVFilterChannelLayouts*, %struct.AVFilterChannelLayouts** %layouts, align 8, !dbg !1332
  %13 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink, align 8, !dbg !1334
  %out_channel_layouts = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %13, i32 0, i32 17, !dbg !1335
  %call5 = call i32 @ff_channel_layouts_ref(%struct.AVFilterChannelLayouts* %12, %struct.AVFilterChannelLayouts** %out_channel_layouts), !dbg !1336
  store i32 %call5, i32* %ret, align 4, !dbg !1337
  %cmp6 = icmp slt i32 %call5, 0, !dbg !1338
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !1339

if.then7:                                         ; preds = %if.end
  %14 = load i32, i32* %ret, align 4, !dbg !1340
  store i32 %14, i32* %retval, align 4, !dbg !1341
  br label %return, !dbg !1341

if.end8:                                          ; preds = %if.end
  %call9 = call %struct.AVFilterFormats* @ff_all_samplerates(), !dbg !1342
  store %struct.AVFilterFormats* %call9, %struct.AVFilterFormats** %formats, align 8, !dbg !1343
  %15 = load %struct.AVFilterFormats*, %struct.AVFilterFormats** %formats, align 8, !dbg !1344
  %16 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink, align 8, !dbg !1346
  %out_samplerates = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %16, i32 0, i32 15, !dbg !1347
  %call10 = call i32 @ff_formats_ref(%struct.AVFilterFormats* %15, %struct.AVFilterFormats** %out_samplerates), !dbg !1348
  store i32 %call10, i32* %ret, align 4, !dbg !1349
  %cmp11 = icmp slt i32 %call10, 0, !dbg !1350
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !1351

if.then12:                                        ; preds = %if.end8
  %17 = load i32, i32* %ret, align 4, !dbg !1352
  store i32 %17, i32* %retval, align 4, !dbg !1353
  br label %return, !dbg !1353

if.end13:                                         ; preds = %if.end8
  %arraydecay14 = getelementptr inbounds [5 x i32], [5 x i32]* %pix_fmts, i32 0, i32 0, !dbg !1354
  %call15 = call %struct.AVFilterFormats* @ff_make_format_list(i32* %arraydecay14), !dbg !1355
  store %struct.AVFilterFormats* %call15, %struct.AVFilterFormats** %formats, align 8, !dbg !1356
  %18 = load %struct.AVFilterFormats*, %struct.AVFilterFormats** %formats, align 8, !dbg !1357
  %19 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink, align 8, !dbg !1359
  %in_formats = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %19, i32 0, i32 12, !dbg !1360
  %call16 = call i32 @ff_formats_ref(%struct.AVFilterFormats* %18, %struct.AVFilterFormats** %in_formats), !dbg !1361
  store i32 %call16, i32* %ret, align 4, !dbg !1362
  %cmp17 = icmp slt i32 %call16, 0, !dbg !1363
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !1364

if.then18:                                        ; preds = %if.end13
  %20 = load i32, i32* %ret, align 4, !dbg !1365
  store i32 %20, i32* %retval, align 4, !dbg !1366
  br label %return, !dbg !1366

if.end19:                                         ; preds = %if.end13
  store i32 0, i32* %retval, align 4, !dbg !1367
  br label %return, !dbg !1367

return:                                           ; preds = %if.end19, %if.then18, %if.then12, %if.then7, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !1368
  ret i32 %21, !dbg !1368
}

; Function Attrs: nounwind uwtable
define internal i32 @filter_frame(%struct.AVFilterLink* %inlink, %struct.AVFrame* %insamples) #1 !dbg !1369 {
entry:
  %retval = alloca i32, align 4
  %inlink.addr = alloca %struct.AVFilterLink*, align 8
  %insamples.addr = alloca %struct.AVFrame*, align 8
  %ctx = alloca %struct.AVFilterContext*, align 8
  %outlink = alloca %struct.AVFilterLink*, align 8
  %s = alloca %struct.ShowCQTContext*, align 8
  %remaining = alloca i32, align 4
  %step = alloca i32, align 4
  %ret = alloca i32, align 4
  %x = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %m = alloca i32, align 4
  %audio_data = alloca float*, align 8
  %out = alloca %struct.AVFrame*, align 8
  %pts = alloca i64, align 8
  %agg.tmp = alloca %struct.AVRational, align 4
  %agg.tmp100 = alloca %struct.AVRational, align 4
  store %struct.AVFilterLink* %inlink, %struct.AVFilterLink** %inlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterLink** %inlink.addr, metadata !1370, metadata !820), !dbg !1371
  store %struct.AVFrame* %insamples, %struct.AVFrame** %insamples.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %insamples.addr, metadata !1372, metadata !820), !dbg !1373
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx, metadata !1374, metadata !820), !dbg !1375
  %0 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink.addr, align 8, !dbg !1376
  %dst = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %0, i32 0, i32 2, !dbg !1377
  %1 = load %struct.AVFilterContext*, %struct.AVFilterContext** %dst, align 8, !dbg !1377
  store %struct.AVFilterContext* %1, %struct.AVFilterContext** %ctx, align 8, !dbg !1375
  call void @llvm.dbg.declare(metadata %struct.AVFilterLink** %outlink, metadata !1378, metadata !820), !dbg !1379
  %2 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !1380
  %outputs = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %2, i32 0, i32 7, !dbg !1381
  %3 = load %struct.AVFilterLink**, %struct.AVFilterLink*** %outputs, align 8, !dbg !1381
  %arrayidx = getelementptr inbounds %struct.AVFilterLink*, %struct.AVFilterLink** %3, i64 0, !dbg !1380
  %4 = load %struct.AVFilterLink*, %struct.AVFilterLink** %arrayidx, align 8, !dbg !1380
  store %struct.AVFilterLink* %4, %struct.AVFilterLink** %outlink, align 8, !dbg !1379
  call void @llvm.dbg.declare(metadata %struct.ShowCQTContext** %s, metadata !1382, metadata !820), !dbg !1383
  %5 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !1384
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %5, i32 0, i32 9, !dbg !1385
  %6 = load i8*, i8** %priv, align 8, !dbg !1385
  %7 = bitcast i8* %6 to %struct.ShowCQTContext*, !dbg !1384
  store %struct.ShowCQTContext* %7, %struct.ShowCQTContext** %s, align 8, !dbg !1383
  call void @llvm.dbg.declare(metadata i32* %remaining, metadata !1386, metadata !820), !dbg !1387
  call void @llvm.dbg.declare(metadata i32* %step, metadata !1388, metadata !820), !dbg !1389
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1390, metadata !820), !dbg !1391
  call void @llvm.dbg.declare(metadata i32* %x, metadata !1392, metadata !820), !dbg !1393
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1394, metadata !820), !dbg !1395
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1396, metadata !820), !dbg !1397
  call void @llvm.dbg.declare(metadata i32* %m, metadata !1398, metadata !820), !dbg !1399
  call void @llvm.dbg.declare(metadata float** %audio_data, metadata !1400, metadata !820), !dbg !1401
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %out, metadata !1402, metadata !820), !dbg !1403
  store %struct.AVFrame* null, %struct.AVFrame** %out, align 8, !dbg !1403
  %8 = load %struct.AVFrame*, %struct.AVFrame** %insamples.addr, align 8, !dbg !1404
  %tobool = icmp ne %struct.AVFrame* %8, null, !dbg !1404
  br i1 %tobool, label %if.end40, label %if.then, !dbg !1406

if.then:                                          ; preds = %entry
  br label %while.cond, !dbg !1407

while.cond:                                       ; preds = %if.end39, %if.then
  %9 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1409
  %remaining_fill = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %9, i32 0, i32 10, !dbg !1411
  %10 = load i32, i32* %remaining_fill, align 4, !dbg !1411
  %11 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1412
  %remaining_fill_max = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %11, i32 0, i32 11, !dbg !1413
  %12 = load i32, i32* %remaining_fill_max, align 8, !dbg !1413
  %cmp = icmp slt i32 %10, %12, !dbg !1414
  br i1 %cmp, label %while.body, label %while.end, !dbg !1415

while.body:                                       ; preds = %while.cond
  %13 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1416
  %fft_len = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %13, i32 0, i32 21, !dbg !1418
  %14 = load i32, i32* %fft_len, align 4, !dbg !1418
  %div = sdiv i32 %14, 2, !dbg !1419
  %15 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1420
  %remaining_fill_max1 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %15, i32 0, i32 11, !dbg !1421
  %16 = load i32, i32* %remaining_fill_max1, align 8, !dbg !1421
  %add = add nsw i32 %div, %16, !dbg !1422
  %17 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1423
  %remaining_fill2 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %17, i32 0, i32 10, !dbg !1424
  %18 = load i32, i32* %remaining_fill2, align 4, !dbg !1424
  %sub = sub nsw i32 %add, %18, !dbg !1425
  %idxprom = sext i32 %sub to i64, !dbg !1426
  %19 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1426
  %fft_data = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %19, i32 0, i32 16, !dbg !1427
  %20 = load %struct.FFTComplex*, %struct.FFTComplex** %fft_data, align 8, !dbg !1427
  %arrayidx3 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %20, i64 %idxprom, !dbg !1426
  %21 = bitcast %struct.FFTComplex* %arrayidx3 to i8*, !dbg !1428
  %22 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1429
  %remaining_fill4 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %22, i32 0, i32 10, !dbg !1430
  %23 = load i32, i32* %remaining_fill4, align 4, !dbg !1430
  %conv = sext i32 %23 to i64, !dbg !1429
  %mul = mul i64 8, %conv, !dbg !1431
  call void @llvm.memset.p0i8.i64(i8* %21, i8 0, i64 %mul, i32 4, i1 false), !dbg !1428
  %24 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !1432
  %call = call i32 @plot_cqt(%struct.AVFilterContext* %24, %struct.AVFrame** %out), !dbg !1433
  store i32 %call, i32* %ret, align 4, !dbg !1434
  %25 = load i32, i32* %ret, align 4, !dbg !1435
  %cmp5 = icmp slt i32 %25, 0, !dbg !1437
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !1438

if.then7:                                         ; preds = %while.body
  %26 = load i32, i32* %ret, align 4, !dbg !1439
  store i32 %26, i32* %retval, align 4, !dbg !1440
  br label %return, !dbg !1440

if.end:                                           ; preds = %while.body
  %27 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1441
  %step8 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %27, i32 0, i32 7, !dbg !1442
  %28 = load i32, i32* %step8, align 4, !dbg !1442
  %29 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1443
  %step_frac = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %29, i32 0, i32 8, !dbg !1444
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %step_frac, i32 0, i32 0, !dbg !1445
  %30 = load i32, i32* %num, align 8, !dbg !1445
  %31 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1446
  %remaining_frac = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %31, i32 0, i32 9, !dbg !1447
  %32 = load i32, i32* %remaining_frac, align 8, !dbg !1447
  %add9 = add nsw i32 %30, %32, !dbg !1448
  %33 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1449
  %step_frac10 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %33, i32 0, i32 8, !dbg !1450
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %step_frac10, i32 0, i32 1, !dbg !1451
  %34 = load i32, i32* %den, align 4, !dbg !1451
  %div11 = sdiv i32 %add9, %34, !dbg !1452
  %add12 = add nsw i32 %28, %div11, !dbg !1453
  store i32 %add12, i32* %step, align 4, !dbg !1454
  %35 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1455
  %step_frac13 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %35, i32 0, i32 8, !dbg !1456
  %num14 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %step_frac13, i32 0, i32 0, !dbg !1457
  %36 = load i32, i32* %num14, align 8, !dbg !1457
  %37 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1458
  %remaining_frac15 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %37, i32 0, i32 9, !dbg !1459
  %38 = load i32, i32* %remaining_frac15, align 8, !dbg !1459
  %add16 = add nsw i32 %36, %38, !dbg !1460
  %39 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1461
  %step_frac17 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %39, i32 0, i32 8, !dbg !1462
  %den18 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %step_frac17, i32 0, i32 1, !dbg !1463
  %40 = load i32, i32* %den18, align 4, !dbg !1463
  %rem = srem i32 %add16, %40, !dbg !1464
  %41 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1465
  %remaining_frac19 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %41, i32 0, i32 9, !dbg !1466
  store i32 %rem, i32* %remaining_frac19, align 8, !dbg !1467
  store i32 0, i32* %x, align 4, !dbg !1468
  br label %for.cond, !dbg !1470

for.cond:                                         ; preds = %for.inc, %if.end
  %42 = load i32, i32* %x, align 4, !dbg !1471
  %43 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1474
  %fft_len20 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %43, i32 0, i32 21, !dbg !1475
  %44 = load i32, i32* %fft_len20, align 4, !dbg !1475
  %div21 = sdiv i32 %44, 2, !dbg !1476
  %45 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1477
  %remaining_fill_max22 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %45, i32 0, i32 11, !dbg !1478
  %46 = load i32, i32* %remaining_fill_max22, align 8, !dbg !1478
  %add23 = add nsw i32 %div21, %46, !dbg !1479
  %47 = load i32, i32* %step, align 4, !dbg !1480
  %sub24 = sub nsw i32 %add23, %47, !dbg !1481
  %cmp25 = icmp slt i32 %42, %sub24, !dbg !1482
  br i1 %cmp25, label %for.body, label %for.end, !dbg !1483

for.body:                                         ; preds = %for.cond
  %48 = load i32, i32* %x, align 4, !dbg !1484
  %idxprom27 = sext i32 %48 to i64, !dbg !1485
  %49 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1485
  %fft_data28 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %49, i32 0, i32 16, !dbg !1486
  %50 = load %struct.FFTComplex*, %struct.FFTComplex** %fft_data28, align 8, !dbg !1486
  %arrayidx29 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %50, i64 %idxprom27, !dbg !1485
  %51 = load i32, i32* %x, align 4, !dbg !1487
  %52 = load i32, i32* %step, align 4, !dbg !1488
  %add30 = add nsw i32 %51, %52, !dbg !1489
  %idxprom31 = sext i32 %add30 to i64, !dbg !1490
  %53 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1490
  %fft_data32 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %53, i32 0, i32 16, !dbg !1491
  %54 = load %struct.FFTComplex*, %struct.FFTComplex** %fft_data32, align 8, !dbg !1491
  %arrayidx33 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %54, i64 %idxprom31, !dbg !1490
  %55 = bitcast %struct.FFTComplex* %arrayidx29 to i8*, !dbg !1490
  %56 = bitcast %struct.FFTComplex* %arrayidx33 to i8*, !dbg !1490
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %55, i8* %56, i64 8, i32 4, i1 false), !dbg !1490
  br label %for.inc, !dbg !1485

for.inc:                                          ; preds = %for.body
  %57 = load i32, i32* %x, align 4, !dbg !1492
  %inc = add nsw i32 %57, 1, !dbg !1492
  store i32 %inc, i32* %x, align 4, !dbg !1492
  br label %for.cond, !dbg !1494, !llvm.loop !1495

for.end:                                          ; preds = %for.cond
  %58 = load i32, i32* %step, align 4, !dbg !1497
  %59 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1498
  %remaining_fill34 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %59, i32 0, i32 10, !dbg !1499
  %60 = load i32, i32* %remaining_fill34, align 4, !dbg !1500
  %add35 = add nsw i32 %60, %58, !dbg !1500
  store i32 %add35, i32* %remaining_fill34, align 4, !dbg !1500
  %61 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !1501
  %tobool36 = icmp ne %struct.AVFrame* %61, null, !dbg !1501
  br i1 %tobool36, label %if.then37, label %if.end39, !dbg !1503

if.then37:                                        ; preds = %for.end
  %62 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink, align 8, !dbg !1504
  %63 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !1505
  %call38 = call i32 @ff_filter_frame(%struct.AVFilterLink* %62, %struct.AVFrame* %63), !dbg !1506
  store i32 %call38, i32* %retval, align 4, !dbg !1507
  br label %return, !dbg !1507

if.end39:                                         ; preds = %for.end
  br label %while.cond, !dbg !1508, !llvm.loop !1510

while.end:                                        ; preds = %while.cond
  store i32 -541478725, i32* %retval, align 4, !dbg !1511
  br label %return, !dbg !1511

if.end40:                                         ; preds = %entry
  %64 = load %struct.AVFrame*, %struct.AVFrame** %insamples.addr, align 8, !dbg !1512
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %64, i32 0, i32 5, !dbg !1513
  %65 = load i32, i32* %nb_samples, align 8, !dbg !1513
  store i32 %65, i32* %remaining, align 4, !dbg !1514
  %66 = load %struct.AVFrame*, %struct.AVFrame** %insamples.addr, align 8, !dbg !1515
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %66, i32 0, i32 0, !dbg !1516
  %arrayidx41 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 0, !dbg !1515
  %67 = load i8*, i8** %arrayidx41, align 8, !dbg !1515
  %68 = bitcast i8* %67 to float*, !dbg !1517
  store float* %68, float** %audio_data, align 8, !dbg !1518
  br label %while.cond42, !dbg !1519

while.cond42:                                     ; preds = %if.end201, %if.end40
  %69 = load i32, i32* %remaining, align 4, !dbg !1520
  %tobool43 = icmp ne i32 %69, 0, !dbg !1522
  br i1 %tobool43, label %while.body44, label %while.end202, !dbg !1522

while.body44:                                     ; preds = %while.cond42
  %70 = load %struct.AVFrame*, %struct.AVFrame** %insamples.addr, align 8, !dbg !1523
  %nb_samples45 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %70, i32 0, i32 5, !dbg !1525
  %71 = load i32, i32* %nb_samples45, align 8, !dbg !1525
  %72 = load i32, i32* %remaining, align 4, !dbg !1526
  %sub46 = sub nsw i32 %71, %72, !dbg !1527
  store i32 %sub46, i32* %i, align 4, !dbg !1528
  %73 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1529
  %fft_len47 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %73, i32 0, i32 21, !dbg !1530
  %74 = load i32, i32* %fft_len47, align 4, !dbg !1530
  %div48 = sdiv i32 %74, 2, !dbg !1531
  %75 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1532
  %remaining_fill_max49 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %75, i32 0, i32 11, !dbg !1533
  %76 = load i32, i32* %remaining_fill_max49, align 8, !dbg !1533
  %add50 = add nsw i32 %div48, %76, !dbg !1534
  %77 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1535
  %remaining_fill51 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %77, i32 0, i32 10, !dbg !1536
  %78 = load i32, i32* %remaining_fill51, align 4, !dbg !1536
  %sub52 = sub nsw i32 %add50, %78, !dbg !1537
  store i32 %sub52, i32* %j, align 4, !dbg !1538
  %79 = load i32, i32* %remaining, align 4, !dbg !1539
  %80 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1541
  %remaining_fill53 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %80, i32 0, i32 10, !dbg !1542
  %81 = load i32, i32* %remaining_fill53, align 4, !dbg !1542
  %cmp54 = icmp sge i32 %79, %81, !dbg !1543
  br i1 %cmp54, label %if.then56, label %if.else, !dbg !1544

if.then56:                                        ; preds = %while.body44
  store i32 0, i32* %m, align 4, !dbg !1545
  br label %for.cond57, !dbg !1548

for.cond57:                                       ; preds = %for.inc79, %if.then56
  %82 = load i32, i32* %m, align 4, !dbg !1549
  %83 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1552
  %remaining_fill58 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %83, i32 0, i32 10, !dbg !1553
  %84 = load i32, i32* %remaining_fill58, align 4, !dbg !1553
  %cmp59 = icmp slt i32 %82, %84, !dbg !1554
  br i1 %cmp59, label %for.body61, label %for.end81, !dbg !1555

for.body61:                                       ; preds = %for.cond57
  %85 = load i32, i32* %i, align 4, !dbg !1556
  %86 = load i32, i32* %m, align 4, !dbg !1558
  %add62 = add nsw i32 %85, %86, !dbg !1559
  %mul63 = mul nsw i32 2, %add62, !dbg !1560
  %idxprom64 = sext i32 %mul63 to i64, !dbg !1561
  %87 = load float*, float** %audio_data, align 8, !dbg !1561
  %arrayidx65 = getelementptr inbounds float, float* %87, i64 %idxprom64, !dbg !1561
  %88 = load float, float* %arrayidx65, align 4, !dbg !1561
  %89 = load i32, i32* %j, align 4, !dbg !1562
  %90 = load i32, i32* %m, align 4, !dbg !1563
  %add66 = add nsw i32 %89, %90, !dbg !1564
  %idxprom67 = sext i32 %add66 to i64, !dbg !1565
  %91 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1565
  %fft_data68 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %91, i32 0, i32 16, !dbg !1566
  %92 = load %struct.FFTComplex*, %struct.FFTComplex** %fft_data68, align 8, !dbg !1566
  %arrayidx69 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %92, i64 %idxprom67, !dbg !1565
  %re = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx69, i32 0, i32 0, !dbg !1567
  store float %88, float* %re, align 4, !dbg !1568
  %93 = load i32, i32* %i, align 4, !dbg !1569
  %94 = load i32, i32* %m, align 4, !dbg !1570
  %add70 = add nsw i32 %93, %94, !dbg !1571
  %mul71 = mul nsw i32 2, %add70, !dbg !1572
  %add72 = add nsw i32 %mul71, 1, !dbg !1573
  %idxprom73 = sext i32 %add72 to i64, !dbg !1574
  %95 = load float*, float** %audio_data, align 8, !dbg !1574
  %arrayidx74 = getelementptr inbounds float, float* %95, i64 %idxprom73, !dbg !1574
  %96 = load float, float* %arrayidx74, align 4, !dbg !1574
  %97 = load i32, i32* %j, align 4, !dbg !1575
  %98 = load i32, i32* %m, align 4, !dbg !1576
  %add75 = add nsw i32 %97, %98, !dbg !1577
  %idxprom76 = sext i32 %add75 to i64, !dbg !1578
  %99 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1578
  %fft_data77 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %99, i32 0, i32 16, !dbg !1579
  %100 = load %struct.FFTComplex*, %struct.FFTComplex** %fft_data77, align 8, !dbg !1579
  %arrayidx78 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %100, i64 %idxprom76, !dbg !1578
  %im = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx78, i32 0, i32 1, !dbg !1580
  store float %96, float* %im, align 4, !dbg !1581
  br label %for.inc79, !dbg !1582

for.inc79:                                        ; preds = %for.body61
  %101 = load i32, i32* %m, align 4, !dbg !1583
  %inc80 = add nsw i32 %101, 1, !dbg !1583
  store i32 %inc80, i32* %m, align 4, !dbg !1583
  br label %for.cond57, !dbg !1585, !llvm.loop !1586

for.end81:                                        ; preds = %for.cond57
  %102 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !1588
  %call82 = call i32 @plot_cqt(%struct.AVFilterContext* %102, %struct.AVFrame** %out), !dbg !1589
  store i32 %call82, i32* %ret, align 4, !dbg !1590
  %103 = load i32, i32* %ret, align 4, !dbg !1591
  %cmp83 = icmp slt i32 %103, 0, !dbg !1593
  br i1 %cmp83, label %if.then85, label %if.end86, !dbg !1594

if.then85:                                        ; preds = %for.end81
  call void @av_frame_free(%struct.AVFrame** %insamples.addr), !dbg !1595
  %104 = load i32, i32* %ret, align 4, !dbg !1597
  store i32 %104, i32* %retval, align 4, !dbg !1598
  br label %return, !dbg !1598

if.end86:                                         ; preds = %for.end81
  %105 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1599
  %remaining_fill87 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %105, i32 0, i32 10, !dbg !1600
  %106 = load i32, i32* %remaining_fill87, align 4, !dbg !1600
  %107 = load i32, i32* %remaining, align 4, !dbg !1601
  %sub88 = sub nsw i32 %107, %106, !dbg !1601
  store i32 %sub88, i32* %remaining, align 4, !dbg !1601
  %108 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !1602
  %tobool89 = icmp ne %struct.AVFrame* %108, null, !dbg !1602
  br i1 %tobool89, label %if.then90, label %if.end135, !dbg !1604

if.then90:                                        ; preds = %if.end86
  call void @llvm.dbg.declare(metadata i64* %pts, metadata !1605, metadata !820), !dbg !1607
  %109 = load %struct.AVFrame*, %struct.AVFrame** %insamples.addr, align 8, !dbg !1608
  %pts91 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %109, i32 0, i32 10, !dbg !1609
  %110 = load i64, i64* %pts91, align 8, !dbg !1609
  %111 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink.addr, align 8, !dbg !1610
  %time_base = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %111, i32 0, i32 11, !dbg !1611
  %112 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink.addr, align 8, !dbg !1612
  %sample_rate = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %112, i32 0, i32 9, !dbg !1613
  %113 = load i32, i32* %sample_rate, align 8, !dbg !1613
  %call92 = call i64 @av_make_q(i32 1, i32 %113), !dbg !1614
  %114 = bitcast %struct.AVRational* %agg.tmp to i64*, !dbg !1614
  store i64 %call92, i64* %114, align 4, !dbg !1614
  %115 = bitcast %struct.AVRational* %time_base to i64*, !dbg !1615
  %116 = load i64, i64* %115, align 8, !dbg !1615
  %117 = bitcast %struct.AVRational* %agg.tmp to i64*, !dbg !1615
  %118 = load i64, i64* %117, align 4, !dbg !1615
  %call93 = call i64 @av_rescale_q(i64 %110, i64 %116, i64 %118) #2, !dbg !1616
  store i64 %call93, i64* %pts, align 8, !dbg !1607
  %119 = load %struct.AVFrame*, %struct.AVFrame** %insamples.addr, align 8, !dbg !1618
  %nb_samples94 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %119, i32 0, i32 5, !dbg !1619
  %120 = load i32, i32* %nb_samples94, align 8, !dbg !1619
  %121 = load i32, i32* %remaining, align 4, !dbg !1620
  %sub95 = sub nsw i32 %120, %121, !dbg !1621
  %122 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1622
  %remaining_fill_max96 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %122, i32 0, i32 11, !dbg !1623
  %123 = load i32, i32* %remaining_fill_max96, align 8, !dbg !1623
  %sub97 = sub nsw i32 %sub95, %123, !dbg !1624
  %conv98 = sext i32 %sub97 to i64, !dbg !1618
  %124 = load i64, i64* %pts, align 8, !dbg !1625
  %add99 = add nsw i64 %124, %conv98, !dbg !1625
  store i64 %add99, i64* %pts, align 8, !dbg !1625
  %125 = load i64, i64* %pts, align 8, !dbg !1626
  %126 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink.addr, align 8, !dbg !1627
  %sample_rate101 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %126, i32 0, i32 9, !dbg !1628
  %127 = load i32, i32* %sample_rate101, align 8, !dbg !1628
  %call102 = call i64 @av_make_q(i32 1, i32 %127), !dbg !1629
  %128 = bitcast %struct.AVRational* %agg.tmp100 to i64*, !dbg !1629
  store i64 %call102, i64* %128, align 4, !dbg !1629
  %129 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink, align 8, !dbg !1630
  %time_base103 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %129, i32 0, i32 11, !dbg !1631
  %130 = bitcast %struct.AVRational* %agg.tmp100 to i64*, !dbg !1632
  %131 = load i64, i64* %130, align 4, !dbg !1632
  %132 = bitcast %struct.AVRational* %time_base103 to i64*, !dbg !1632
  %133 = load i64, i64* %132, align 8, !dbg !1632
  %call104 = call i64 @av_rescale_q(i64 %125, i64 %131, i64 %133) #2, !dbg !1633
  store i64 %call104, i64* %pts, align 8, !dbg !1634
  %134 = load i64, i64* %pts, align 8, !dbg !1635
  %135 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !1637
  %pts105 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %135, i32 0, i32 10, !dbg !1638
  %136 = load i64, i64* %pts105, align 8, !dbg !1638
  %sub106 = sub nsw i64 %134, %136, !dbg !1639
  %cmp107 = icmp sge i64 %sub106, 0, !dbg !1640
  br i1 %cmp107, label %cond.true, label %cond.false, !dbg !1641

cond.true:                                        ; preds = %if.then90
  %137 = load i64, i64* %pts, align 8, !dbg !1642
  %138 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !1644
  %pts109 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %138, i32 0, i32 10, !dbg !1645
  %139 = load i64, i64* %pts109, align 8, !dbg !1645
  %sub110 = sub nsw i64 %137, %139, !dbg !1646
  br label %cond.end, !dbg !1647

cond.false:                                       ; preds = %if.then90
  %140 = load i64, i64* %pts, align 8, !dbg !1648
  %141 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !1650
  %pts111 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %141, i32 0, i32 10, !dbg !1651
  %142 = load i64, i64* %pts111, align 8, !dbg !1651
  %sub112 = sub nsw i64 %140, %142, !dbg !1652
  %sub113 = sub nsw i64 0, %sub112, !dbg !1653
  br label %cond.end, !dbg !1654

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub110, %cond.true ], [ %sub113, %cond.false ], !dbg !1655
  %cmp114 = icmp sgt i64 %cond, 1, !dbg !1657
  br i1 %cmp114, label %if.then116, label %if.end129, !dbg !1658

if.then116:                                       ; preds = %cond.end
  %143 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !1659
  %144 = bitcast %struct.AVFilterContext* %143 to i8*, !dbg !1659
  %145 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !1661
  %pts117 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %145, i32 0, i32 10, !dbg !1662
  %146 = load i64, i64* %pts117, align 8, !dbg !1662
  %147 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !1663
  %pts118 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %147, i32 0, i32 10, !dbg !1664
  %148 = load i64, i64* %pts118, align 8, !dbg !1664
  %conv119 = sitofp i64 %148 to double, !dbg !1663
  %149 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink, align 8, !dbg !1665
  %time_base120 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %149, i32 0, i32 11, !dbg !1666
  %150 = bitcast %struct.AVRational* %time_base120 to i64*, !dbg !1667
  %151 = load i64, i64* %150, align 8, !dbg !1667
  %call121 = call double @av_q2d(i64 %151), !dbg !1667
  %mul122 = fmul double %conv119, %call121, !dbg !1668
  %152 = load i64, i64* %pts, align 8, !dbg !1669
  %153 = load i64, i64* %pts, align 8, !dbg !1670
  %conv123 = sitofp i64 %153 to double, !dbg !1670
  %154 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink, align 8, !dbg !1671
  %time_base124 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %154, i32 0, i32 11, !dbg !1672
  %155 = bitcast %struct.AVRational* %time_base124 to i64*, !dbg !1673
  %156 = load i64, i64* %155, align 8, !dbg !1673
  %call125 = call double @av_q2d(i64 %156), !dbg !1673
  %mul126 = fmul double %conv123, %call125, !dbg !1674
  call void (i8*, i32, i8*, ...) @av_log(i8* %144, i32 48, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i32 0, i32 0), i64 %146, double %mul122, i64 %152, double %mul126), !dbg !1675
  %157 = load i64, i64* %pts, align 8, !dbg !1676
  %158 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !1677
  %pts127 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %158, i32 0, i32 10, !dbg !1678
  store i64 %157, i64* %pts127, align 8, !dbg !1679
  %159 = load i64, i64* %pts, align 8, !dbg !1680
  %add128 = add nsw i64 %159, 10, !dbg !1681
  %160 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1682
  %next_pts = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %160, i32 0, i32 12, !dbg !1683
  store i64 %add128, i64* %next_pts, align 8, !dbg !1684
  br label %if.end129, !dbg !1685

if.end129:                                        ; preds = %if.then116, %cond.end
  %161 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink, align 8, !dbg !1686
  %162 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !1687
  %call130 = call i32 @ff_filter_frame(%struct.AVFilterLink* %161, %struct.AVFrame* %162), !dbg !1688
  store i32 %call130, i32* %ret, align 4, !dbg !1689
  %163 = load i32, i32* %ret, align 4, !dbg !1690
  %cmp131 = icmp slt i32 %163, 0, !dbg !1692
  br i1 %cmp131, label %if.then133, label %if.end134, !dbg !1693

if.then133:                                       ; preds = %if.end129
  call void @av_frame_free(%struct.AVFrame** %insamples.addr), !dbg !1694
  %164 = load i32, i32* %ret, align 4, !dbg !1696
  store i32 %164, i32* %retval, align 4, !dbg !1697
  br label %return, !dbg !1697

if.end134:                                        ; preds = %if.end129
  store %struct.AVFrame* null, %struct.AVFrame** %out, align 8, !dbg !1698
  br label %if.end135, !dbg !1699

if.end135:                                        ; preds = %if.end134, %if.end86
  %165 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1700
  %step136 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %165, i32 0, i32 7, !dbg !1701
  %166 = load i32, i32* %step136, align 4, !dbg !1701
  %167 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1702
  %step_frac137 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %167, i32 0, i32 8, !dbg !1703
  %num138 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %step_frac137, i32 0, i32 0, !dbg !1704
  %168 = load i32, i32* %num138, align 8, !dbg !1704
  %169 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1705
  %remaining_frac139 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %169, i32 0, i32 9, !dbg !1706
  %170 = load i32, i32* %remaining_frac139, align 8, !dbg !1706
  %add140 = add nsw i32 %168, %170, !dbg !1707
  %171 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1708
  %step_frac141 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %171, i32 0, i32 8, !dbg !1709
  %den142 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %step_frac141, i32 0, i32 1, !dbg !1710
  %172 = load i32, i32* %den142, align 4, !dbg !1710
  %div143 = sdiv i32 %add140, %172, !dbg !1711
  %add144 = add nsw i32 %166, %div143, !dbg !1712
  store i32 %add144, i32* %step, align 4, !dbg !1713
  %173 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1714
  %step_frac145 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %173, i32 0, i32 8, !dbg !1715
  %num146 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %step_frac145, i32 0, i32 0, !dbg !1716
  %174 = load i32, i32* %num146, align 8, !dbg !1716
  %175 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1717
  %remaining_frac147 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %175, i32 0, i32 9, !dbg !1718
  %176 = load i32, i32* %remaining_frac147, align 8, !dbg !1718
  %add148 = add nsw i32 %174, %176, !dbg !1719
  %177 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1720
  %step_frac149 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %177, i32 0, i32 8, !dbg !1721
  %den150 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %step_frac149, i32 0, i32 1, !dbg !1722
  %178 = load i32, i32* %den150, align 4, !dbg !1722
  %rem151 = srem i32 %add148, %178, !dbg !1723
  %179 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1724
  %remaining_frac152 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %179, i32 0, i32 9, !dbg !1725
  store i32 %rem151, i32* %remaining_frac152, align 8, !dbg !1726
  store i32 0, i32* %m, align 4, !dbg !1727
  br label %for.cond153, !dbg !1729

for.cond153:                                      ; preds = %for.inc169, %if.end135
  %180 = load i32, i32* %m, align 4, !dbg !1730
  %181 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1733
  %fft_len154 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %181, i32 0, i32 21, !dbg !1734
  %182 = load i32, i32* %fft_len154, align 4, !dbg !1734
  %div155 = sdiv i32 %182, 2, !dbg !1735
  %183 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1736
  %remaining_fill_max156 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %183, i32 0, i32 11, !dbg !1737
  %184 = load i32, i32* %remaining_fill_max156, align 8, !dbg !1737
  %add157 = add nsw i32 %div155, %184, !dbg !1738
  %185 = load i32, i32* %step, align 4, !dbg !1739
  %sub158 = sub nsw i32 %add157, %185, !dbg !1740
  %cmp159 = icmp slt i32 %180, %sub158, !dbg !1741
  br i1 %cmp159, label %for.body161, label %for.end171, !dbg !1742

for.body161:                                      ; preds = %for.cond153
  %186 = load i32, i32* %m, align 4, !dbg !1743
  %idxprom162 = sext i32 %186 to i64, !dbg !1744
  %187 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1744
  %fft_data163 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %187, i32 0, i32 16, !dbg !1745
  %188 = load %struct.FFTComplex*, %struct.FFTComplex** %fft_data163, align 8, !dbg !1745
  %arrayidx164 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %188, i64 %idxprom162, !dbg !1744
  %189 = load i32, i32* %m, align 4, !dbg !1746
  %190 = load i32, i32* %step, align 4, !dbg !1747
  %add165 = add nsw i32 %189, %190, !dbg !1748
  %idxprom166 = sext i32 %add165 to i64, !dbg !1749
  %191 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1749
  %fft_data167 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %191, i32 0, i32 16, !dbg !1750
  %192 = load %struct.FFTComplex*, %struct.FFTComplex** %fft_data167, align 8, !dbg !1750
  %arrayidx168 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %192, i64 %idxprom166, !dbg !1749
  %193 = bitcast %struct.FFTComplex* %arrayidx164 to i8*, !dbg !1749
  %194 = bitcast %struct.FFTComplex* %arrayidx168 to i8*, !dbg !1749
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %193, i8* %194, i64 8, i32 4, i1 false), !dbg !1749
  br label %for.inc169, !dbg !1744

for.inc169:                                       ; preds = %for.body161
  %195 = load i32, i32* %m, align 4, !dbg !1751
  %inc170 = add nsw i32 %195, 1, !dbg !1751
  store i32 %inc170, i32* %m, align 4, !dbg !1751
  br label %for.cond153, !dbg !1753, !llvm.loop !1754

for.end171:                                       ; preds = %for.cond153
  %196 = load i32, i32* %step, align 4, !dbg !1756
  %197 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1757
  %remaining_fill172 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %197, i32 0, i32 10, !dbg !1758
  store i32 %196, i32* %remaining_fill172, align 4, !dbg !1759
  br label %if.end201, !dbg !1760

if.else:                                          ; preds = %while.body44
  store i32 0, i32* %m, align 4, !dbg !1761
  br label %for.cond173, !dbg !1764

for.cond173:                                      ; preds = %for.inc196, %if.else
  %198 = load i32, i32* %m, align 4, !dbg !1765
  %199 = load i32, i32* %remaining, align 4, !dbg !1768
  %cmp174 = icmp slt i32 %198, %199, !dbg !1769
  br i1 %cmp174, label %for.body176, label %for.end198, !dbg !1770

for.body176:                                      ; preds = %for.cond173
  %200 = load i32, i32* %i, align 4, !dbg !1771
  %201 = load i32, i32* %m, align 4, !dbg !1773
  %add177 = add nsw i32 %200, %201, !dbg !1774
  %mul178 = mul nsw i32 2, %add177, !dbg !1775
  %idxprom179 = sext i32 %mul178 to i64, !dbg !1776
  %202 = load float*, float** %audio_data, align 8, !dbg !1776
  %arrayidx180 = getelementptr inbounds float, float* %202, i64 %idxprom179, !dbg !1776
  %203 = load float, float* %arrayidx180, align 4, !dbg !1776
  %204 = load i32, i32* %j, align 4, !dbg !1777
  %205 = load i32, i32* %m, align 4, !dbg !1778
  %add181 = add nsw i32 %204, %205, !dbg !1779
  %idxprom182 = sext i32 %add181 to i64, !dbg !1780
  %206 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1780
  %fft_data183 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %206, i32 0, i32 16, !dbg !1781
  %207 = load %struct.FFTComplex*, %struct.FFTComplex** %fft_data183, align 8, !dbg !1781
  %arrayidx184 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %207, i64 %idxprom182, !dbg !1780
  %re185 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx184, i32 0, i32 0, !dbg !1782
  store float %203, float* %re185, align 4, !dbg !1783
  %208 = load i32, i32* %i, align 4, !dbg !1784
  %209 = load i32, i32* %m, align 4, !dbg !1785
  %add186 = add nsw i32 %208, %209, !dbg !1786
  %mul187 = mul nsw i32 2, %add186, !dbg !1787
  %add188 = add nsw i32 %mul187, 1, !dbg !1788
  %idxprom189 = sext i32 %add188 to i64, !dbg !1789
  %210 = load float*, float** %audio_data, align 8, !dbg !1789
  %arrayidx190 = getelementptr inbounds float, float* %210, i64 %idxprom189, !dbg !1789
  %211 = load float, float* %arrayidx190, align 4, !dbg !1789
  %212 = load i32, i32* %j, align 4, !dbg !1790
  %213 = load i32, i32* %m, align 4, !dbg !1791
  %add191 = add nsw i32 %212, %213, !dbg !1792
  %idxprom192 = sext i32 %add191 to i64, !dbg !1793
  %214 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1793
  %fft_data193 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %214, i32 0, i32 16, !dbg !1794
  %215 = load %struct.FFTComplex*, %struct.FFTComplex** %fft_data193, align 8, !dbg !1794
  %arrayidx194 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %215, i64 %idxprom192, !dbg !1793
  %im195 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx194, i32 0, i32 1, !dbg !1795
  store float %211, float* %im195, align 4, !dbg !1796
  br label %for.inc196, !dbg !1797

for.inc196:                                       ; preds = %for.body176
  %216 = load i32, i32* %m, align 4, !dbg !1798
  %inc197 = add nsw i32 %216, 1, !dbg !1798
  store i32 %inc197, i32* %m, align 4, !dbg !1798
  br label %for.cond173, !dbg !1800, !llvm.loop !1801

for.end198:                                       ; preds = %for.cond173
  %217 = load i32, i32* %remaining, align 4, !dbg !1803
  %218 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1804
  %remaining_fill199 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %218, i32 0, i32 10, !dbg !1805
  %219 = load i32, i32* %remaining_fill199, align 4, !dbg !1806
  %sub200 = sub nsw i32 %219, %217, !dbg !1806
  store i32 %sub200, i32* %remaining_fill199, align 4, !dbg !1806
  store i32 0, i32* %remaining, align 4, !dbg !1807
  br label %if.end201

if.end201:                                        ; preds = %for.end198, %for.end171
  br label %while.cond42, !dbg !1808, !llvm.loop !1810

while.end202:                                     ; preds = %while.cond42
  call void @av_frame_free(%struct.AVFrame** %insamples.addr), !dbg !1811
  store i32 0, i32* %retval, align 4, !dbg !1812
  br label %return, !dbg !1812

return:                                           ; preds = %while.end202, %if.then133, %if.then85, %while.end, %if.then37, %if.then7
  %220 = load i32, i32* %retval, align 4, !dbg !1813
  ret i32 %220, !dbg !1813
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #3

; Function Attrs: nounwind uwtable
define internal i32 @plot_cqt(%struct.AVFilterContext* %ctx, %struct.AVFrame** %frameout) #1 !dbg !1814 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.AVFilterContext*, align 8
  %frameout.addr = alloca %struct.AVFrame**, align 8
  %outlink = alloca %struct.AVFilterLink*, align 8
  %s = alloca %struct.ShowCQTContext*, align 8
  %last_time = alloca i64, align 8
  %cur_time = alloca i64, align 8
  %k = alloca i32, align 4
  %out = alloca %struct.AVFrame*, align 8
  %coerce = alloca %struct.AVRational, align 4
  store %struct.AVFilterContext* %ctx, %struct.AVFilterContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx.addr, metadata !1818, metadata !820), !dbg !1819
  store %struct.AVFrame** %frameout, %struct.AVFrame*** %frameout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame*** %frameout.addr, metadata !1820, metadata !820), !dbg !1821
  call void @llvm.dbg.declare(metadata %struct.AVFilterLink** %outlink, metadata !1822, metadata !820), !dbg !1823
  %0 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !1824
  %outputs = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %0, i32 0, i32 7, !dbg !1825
  %1 = load %struct.AVFilterLink**, %struct.AVFilterLink*** %outputs, align 8, !dbg !1825
  %arrayidx = getelementptr inbounds %struct.AVFilterLink*, %struct.AVFilterLink** %1, i64 0, !dbg !1824
  %2 = load %struct.AVFilterLink*, %struct.AVFilterLink** %arrayidx, align 8, !dbg !1824
  store %struct.AVFilterLink* %2, %struct.AVFilterLink** %outlink, align 8, !dbg !1823
  call void @llvm.dbg.declare(metadata %struct.ShowCQTContext** %s, metadata !1826, metadata !820), !dbg !1827
  %3 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !1828
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %3, i32 0, i32 9, !dbg !1829
  %4 = load i8*, i8** %priv, align 8, !dbg !1829
  %5 = bitcast i8* %4 to %struct.ShowCQTContext*, !dbg !1828
  store %struct.ShowCQTContext* %5, %struct.ShowCQTContext** %s, align 8, !dbg !1827
  call void @llvm.dbg.declare(metadata i64* %last_time, metadata !1830, metadata !820), !dbg !1831
  call void @llvm.dbg.declare(metadata i64* %cur_time, metadata !1832, metadata !820), !dbg !1833
  %call = call i64 @av_gettime(), !dbg !1834
  store i64 %call, i64* %last_time, align 8, !dbg !1835
  %6 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1836
  %fft_result = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %6, i32 0, i32 17, !dbg !1837
  %7 = load %struct.FFTComplex*, %struct.FFTComplex** %fft_result, align 8, !dbg !1837
  %8 = bitcast %struct.FFTComplex* %7 to i8*, !dbg !1838
  %9 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1839
  %fft_data = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %9, i32 0, i32 16, !dbg !1840
  %10 = load %struct.FFTComplex*, %struct.FFTComplex** %fft_data, align 8, !dbg !1840
  %11 = bitcast %struct.FFTComplex* %10 to i8*, !dbg !1838
  %12 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1841
  %fft_len = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %12, i32 0, i32 21, !dbg !1842
  %13 = load i32, i32* %fft_len, align 4, !dbg !1842
  %conv = sext i32 %13 to i64, !dbg !1841
  %mul = mul i64 %conv, 8, !dbg !1843
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %11, i64 %mul, i32 4, i1 false), !dbg !1838
  %14 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1844
  %attack_data = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %14, i32 0, i32 19, !dbg !1846
  %15 = load float*, float** %attack_data, align 8, !dbg !1846
  %tobool = icmp ne float* %15, null, !dbg !1844
  br i1 %tobool, label %if.then, label %if.end, !dbg !1847

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %k, metadata !1848, metadata !820), !dbg !1850
  store i32 0, i32* %k, align 4, !dbg !1851
  br label %for.cond, !dbg !1853

for.cond:                                         ; preds = %for.inc, %if.then
  %16 = load i32, i32* %k, align 4, !dbg !1854
  %17 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1857
  %remaining_fill_max = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %17, i32 0, i32 11, !dbg !1858
  %18 = load i32, i32* %remaining_fill_max, align 8, !dbg !1858
  %cmp = icmp slt i32 %16, %18, !dbg !1859
  br i1 %cmp, label %for.body, label %for.end, !dbg !1860

for.body:                                         ; preds = %for.cond
  %19 = load i32, i32* %k, align 4, !dbg !1861
  %idxprom = sext i32 %19 to i64, !dbg !1863
  %20 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1863
  %attack_data2 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %20, i32 0, i32 19, !dbg !1864
  %21 = load float*, float** %attack_data2, align 8, !dbg !1864
  %arrayidx3 = getelementptr inbounds float, float* %21, i64 %idxprom, !dbg !1863
  %22 = load float, float* %arrayidx3, align 4, !dbg !1863
  %23 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1865
  %fft_len4 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %23, i32 0, i32 21, !dbg !1866
  %24 = load i32, i32* %fft_len4, align 4, !dbg !1866
  %div = sdiv i32 %24, 2, !dbg !1867
  %25 = load i32, i32* %k, align 4, !dbg !1868
  %add = add nsw i32 %div, %25, !dbg !1869
  %idxprom5 = sext i32 %add to i64, !dbg !1870
  %26 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1870
  %fft_result6 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %26, i32 0, i32 17, !dbg !1871
  %27 = load %struct.FFTComplex*, %struct.FFTComplex** %fft_result6, align 8, !dbg !1871
  %arrayidx7 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %27, i64 %idxprom5, !dbg !1870
  %re = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx7, i32 0, i32 0, !dbg !1872
  %28 = load float, float* %re, align 4, !dbg !1873
  %mul8 = fmul float %28, %22, !dbg !1873
  store float %mul8, float* %re, align 4, !dbg !1873
  %29 = load i32, i32* %k, align 4, !dbg !1874
  %idxprom9 = sext i32 %29 to i64, !dbg !1875
  %30 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1875
  %attack_data10 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %30, i32 0, i32 19, !dbg !1876
  %31 = load float*, float** %attack_data10, align 8, !dbg !1876
  %arrayidx11 = getelementptr inbounds float, float* %31, i64 %idxprom9, !dbg !1875
  %32 = load float, float* %arrayidx11, align 4, !dbg !1875
  %33 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1877
  %fft_len12 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %33, i32 0, i32 21, !dbg !1878
  %34 = load i32, i32* %fft_len12, align 4, !dbg !1878
  %div13 = sdiv i32 %34, 2, !dbg !1879
  %35 = load i32, i32* %k, align 4, !dbg !1880
  %add14 = add nsw i32 %div13, %35, !dbg !1881
  %idxprom15 = sext i32 %add14 to i64, !dbg !1882
  %36 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1882
  %fft_result16 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %36, i32 0, i32 17, !dbg !1883
  %37 = load %struct.FFTComplex*, %struct.FFTComplex** %fft_result16, align 8, !dbg !1883
  %arrayidx17 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %37, i64 %idxprom15, !dbg !1882
  %im = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx17, i32 0, i32 1, !dbg !1884
  %38 = load float, float* %im, align 4, !dbg !1885
  %mul18 = fmul float %38, %32, !dbg !1885
  store float %mul18, float* %im, align 4, !dbg !1885
  br label %for.inc, !dbg !1886

for.inc:                                          ; preds = %for.body
  %39 = load i32, i32* %k, align 4, !dbg !1887
  %inc = add nsw i32 %39, 1, !dbg !1887
  store i32 %inc, i32* %k, align 4, !dbg !1887
  br label %for.cond, !dbg !1889, !llvm.loop !1890

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !1892

if.end:                                           ; preds = %for.end, %entry
  %40 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1893
  %fft_ctx = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %40, i32 0, i32 14, !dbg !1894
  %41 = load %struct.FFTContext*, %struct.FFTContext** %fft_ctx, align 8, !dbg !1894
  %42 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1895
  %fft_result19 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %42, i32 0, i32 17, !dbg !1896
  %43 = load %struct.FFTComplex*, %struct.FFTComplex** %fft_result19, align 8, !dbg !1896
  call void @av_fft_permute(%struct.FFTContext* %41, %struct.FFTComplex* %43), !dbg !1897
  %44 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1898
  %fft_ctx20 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %44, i32 0, i32 14, !dbg !1899
  %45 = load %struct.FFTContext*, %struct.FFTContext** %fft_ctx20, align 8, !dbg !1899
  %46 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1900
  %fft_result21 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %46, i32 0, i32 17, !dbg !1901
  %47 = load %struct.FFTComplex*, %struct.FFTComplex** %fft_result21, align 8, !dbg !1901
  call void @av_fft_calc(%struct.FFTContext* %45, %struct.FFTComplex* %47), !dbg !1902
  %48 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1903
  %fft_len22 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %48, i32 0, i32 21, !dbg !1904
  %49 = load i32, i32* %fft_len22, align 4, !dbg !1904
  %idxprom23 = sext i32 %49 to i64, !dbg !1905
  %50 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1905
  %fft_result24 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %50, i32 0, i32 17, !dbg !1906
  %51 = load %struct.FFTComplex*, %struct.FFTComplex** %fft_result24, align 8, !dbg !1906
  %arrayidx25 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %51, i64 %idxprom23, !dbg !1905
  %52 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1907
  %fft_result26 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %52, i32 0, i32 17, !dbg !1908
  %53 = load %struct.FFTComplex*, %struct.FFTComplex** %fft_result26, align 8, !dbg !1908
  %arrayidx27 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %53, i64 0, !dbg !1907
  %54 = bitcast %struct.FFTComplex* %arrayidx25 to i8*, !dbg !1907
  %55 = bitcast %struct.FFTComplex* %arrayidx27 to i8*, !dbg !1907
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %54, i8* %55, i64 8, i32 4, i1 false), !dbg !1907
  %call28 = call i64 @av_gettime(), !dbg !1909
  store i64 %call28, i64* %cur_time, align 8, !dbg !1910
  %56 = load i64, i64* %cur_time, align 8, !dbg !1911
  %57 = load i64, i64* %last_time, align 8, !dbg !1912
  %sub = sub nsw i64 %56, %57, !dbg !1913
  %58 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1914
  %fft_time = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %58, i32 0, i32 37, !dbg !1915
  %59 = load i64, i64* %fft_time, align 8, !dbg !1916
  %add29 = add nsw i64 %59, %sub, !dbg !1916
  store i64 %add29, i64* %fft_time, align 8, !dbg !1916
  %60 = load i64, i64* %cur_time, align 8, !dbg !1917
  store i64 %60, i64* %last_time, align 8, !dbg !1918
  %61 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1919
  %cqt_calc = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %61, i32 0, i32 31, !dbg !1920
  %62 = load void (%struct.FFTComplex*, %struct.FFTComplex*, %struct.Coeffs*, i32, i32)*, void (%struct.FFTComplex*, %struct.FFTComplex*, %struct.Coeffs*, i32, i32)** %cqt_calc, align 8, !dbg !1920
  %63 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1921
  %cqt_result = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %63, i32 0, i32 18, !dbg !1922
  %64 = load %struct.FFTComplex*, %struct.FFTComplex** %cqt_result, align 8, !dbg !1922
  %65 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1923
  %fft_result30 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %65, i32 0, i32 17, !dbg !1924
  %66 = load %struct.FFTComplex*, %struct.FFTComplex** %fft_result30, align 8, !dbg !1924
  %67 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1925
  %coeffs = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %67, i32 0, i32 15, !dbg !1926
  %68 = load %struct.Coeffs*, %struct.Coeffs** %coeffs, align 8, !dbg !1926
  %69 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1927
  %cqt_len = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %69, i32 0, i32 22, !dbg !1928
  %70 = load i32, i32* %cqt_len, align 8, !dbg !1928
  %71 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1929
  %fft_len31 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %71, i32 0, i32 21, !dbg !1930
  %72 = load i32, i32* %fft_len31, align 4, !dbg !1930
  call void %62(%struct.FFTComplex* %64, %struct.FFTComplex* %66, %struct.Coeffs* %68, i32 %70, i32 %72), !dbg !1919
  %call32 = call i64 @av_gettime(), !dbg !1931
  store i64 %call32, i64* %cur_time, align 8, !dbg !1932
  %73 = load i64, i64* %cur_time, align 8, !dbg !1933
  %74 = load i64, i64* %last_time, align 8, !dbg !1934
  %sub33 = sub nsw i64 %73, %74, !dbg !1935
  %75 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1936
  %cqt_time = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %75, i32 0, i32 38, !dbg !1937
  %76 = load i64, i64* %cqt_time, align 8, !dbg !1938
  %add34 = add nsw i64 %76, %sub33, !dbg !1938
  store i64 %add34, i64* %cqt_time, align 8, !dbg !1938
  %77 = load i64, i64* %cur_time, align 8, !dbg !1939
  store i64 %77, i64* %last_time, align 8, !dbg !1940
  %78 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1941
  call void @process_cqt(%struct.ShowCQTContext* %78), !dbg !1942
  %call35 = call i64 @av_gettime(), !dbg !1943
  store i64 %call35, i64* %cur_time, align 8, !dbg !1944
  %79 = load i64, i64* %cur_time, align 8, !dbg !1945
  %80 = load i64, i64* %last_time, align 8, !dbg !1946
  %sub36 = sub nsw i64 %79, %80, !dbg !1947
  %81 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1948
  %process_cqt_time = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %81, i32 0, i32 39, !dbg !1949
  %82 = load i64, i64* %process_cqt_time, align 8, !dbg !1950
  %add37 = add nsw i64 %82, %sub36, !dbg !1950
  store i64 %add37, i64* %process_cqt_time, align 8, !dbg !1950
  %83 = load i64, i64* %cur_time, align 8, !dbg !1951
  store i64 %83, i64* %last_time, align 8, !dbg !1952
  %84 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1953
  %sono_h = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %84, i32 0, i32 50, !dbg !1955
  %85 = load i32, i32* %sono_h, align 8, !dbg !1955
  %tobool38 = icmp ne i32 %85, 0, !dbg !1953
  br i1 %tobool38, label %if.then39, label %if.end43, !dbg !1956

if.then39:                                        ; preds = %if.end
  %86 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1957
  %update_sono = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %86, i32 0, i32 36, !dbg !1959
  %87 = load void (%struct.AVFrame*, %union.ColorFloat*, i32)*, void (%struct.AVFrame*, %union.ColorFloat*, i32)** %update_sono, align 8, !dbg !1959
  %88 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1960
  %sono_frame = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %88, i32 0, i32 3, !dbg !1961
  %89 = load %struct.AVFrame*, %struct.AVFrame** %sono_frame, align 8, !dbg !1961
  %90 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1962
  %c_buf = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %90, i32 0, i32 24, !dbg !1963
  %91 = load %union.ColorFloat*, %union.ColorFloat** %c_buf, align 8, !dbg !1963
  %92 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1964
  %sono_idx = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %92, i32 0, i32 5, !dbg !1965
  %93 = load i32, i32* %sono_idx, align 4, !dbg !1965
  call void %87(%struct.AVFrame* %89, %union.ColorFloat* %91, i32 %93), !dbg !1957
  %call40 = call i64 @av_gettime(), !dbg !1966
  store i64 %call40, i64* %cur_time, align 8, !dbg !1967
  %94 = load i64, i64* %cur_time, align 8, !dbg !1968
  %95 = load i64, i64* %last_time, align 8, !dbg !1969
  %sub41 = sub nsw i64 %94, %95, !dbg !1970
  %96 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1971
  %update_sono_time = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %96, i32 0, i32 40, !dbg !1972
  %97 = load i64, i64* %update_sono_time, align 8, !dbg !1973
  %add42 = add nsw i64 %97, %sub41, !dbg !1973
  store i64 %add42, i64* %update_sono_time, align 8, !dbg !1973
  %98 = load i64, i64* %cur_time, align 8, !dbg !1974
  store i64 %98, i64* %last_time, align 8, !dbg !1975
  br label %if.end43, !dbg !1976

if.end43:                                         ; preds = %if.then39, %if.end
  %99 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !1977
  %sono_count = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %99, i32 0, i32 6, !dbg !1979
  %100 = load i32, i32* %sono_count, align 8, !dbg !1979
  %tobool44 = icmp ne i32 %100, 0, !dbg !1977
  br i1 %tobool44, label %if.end84, label %if.then45, !dbg !1980

if.then45:                                        ; preds = %if.end43
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %out, metadata !1981, metadata !820), !dbg !1983
  %101 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink, align 8, !dbg !1984
  %102 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink, align 8, !dbg !1985
  %w = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %102, i32 0, i32 5, !dbg !1986
  %103 = load i32, i32* %w, align 4, !dbg !1986
  %104 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink, align 8, !dbg !1987
  %h = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %104, i32 0, i32 6, !dbg !1988
  %105 = load i32, i32* %h, align 8, !dbg !1988
  %call46 = call %struct.AVFrame* @ff_get_video_buffer(%struct.AVFilterLink* %101, i32 %103, i32 %105), !dbg !1989
  %106 = load %struct.AVFrame**, %struct.AVFrame*** %frameout.addr, align 8, !dbg !1990
  store %struct.AVFrame* %call46, %struct.AVFrame** %106, align 8, !dbg !1991
  store %struct.AVFrame* %call46, %struct.AVFrame** %out, align 8, !dbg !1983
  %107 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !1992
  %tobool47 = icmp ne %struct.AVFrame* %107, null, !dbg !1992
  br i1 %tobool47, label %if.end49, label %if.then48, !dbg !1994

if.then48:                                        ; preds = %if.then45
  store i32 -12, i32* %retval, align 4, !dbg !1995
  br label %return, !dbg !1995

if.end49:                                         ; preds = %if.then45
  %108 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !1996
  %sample_aspect_ratio = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %108, i32 0, i32 9, !dbg !1997
  %call50 = call i64 @av_make_q(i32 1, i32 1), !dbg !1998
  %109 = bitcast %struct.AVRational* %coerce to i64*, !dbg !1998
  store i64 %call50, i64* %109, align 4, !dbg !1998
  %110 = bitcast %struct.AVRational* %sample_aspect_ratio to i8*, !dbg !1998
  %111 = bitcast %struct.AVRational* %coerce to i8*, !dbg !1998
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %110, i8* %111, i64 8, i32 4, i1 false), !dbg !1999
  %112 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !2001
  %color_range = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %112, i32 0, i32 31, !dbg !2002
  store i32 1, i32* %color_range, align 8, !dbg !2003
  %113 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2004
  %csp = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %113, i32 0, i32 70, !dbg !2005
  %114 = load i32, i32* %csp, align 4, !dbg !2005
  %115 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !2006
  %colorspace = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %115, i32 0, i32 34, !dbg !2007
  store i32 %114, i32* %colorspace, align 4, !dbg !2008
  %call51 = call i64 @av_gettime(), !dbg !2009
  store i64 %call51, i64* %cur_time, align 8, !dbg !2010
  %116 = load i64, i64* %cur_time, align 8, !dbg !2011
  %117 = load i64, i64* %last_time, align 8, !dbg !2012
  %sub52 = sub nsw i64 %116, %117, !dbg !2013
  %118 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2014
  %alloc_time = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %118, i32 0, i32 41, !dbg !2015
  %119 = load i64, i64* %alloc_time, align 8, !dbg !2016
  %add53 = add nsw i64 %119, %sub52, !dbg !2016
  store i64 %add53, i64* %alloc_time, align 8, !dbg !2016
  %120 = load i64, i64* %cur_time, align 8, !dbg !2017
  store i64 %120, i64* %last_time, align 8, !dbg !2018
  %121 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2019
  %bar_h = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %121, i32 0, i32 48, !dbg !2021
  %122 = load i32, i32* %bar_h, align 8, !dbg !2021
  %tobool54 = icmp ne i32 %122, 0, !dbg !2019
  br i1 %tobool54, label %if.then55, label %if.end61, !dbg !2022

if.then55:                                        ; preds = %if.end49
  %123 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2023
  %draw_bar = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %123, i32 0, i32 33, !dbg !2025
  %124 = load void (%struct.AVFrame*, float*, float*, %union.ColorFloat*, i32, float)*, void (%struct.AVFrame*, float*, float*, %union.ColorFloat*, i32, float)** %draw_bar, align 8, !dbg !2025
  %125 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !2026
  %126 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2027
  %h_buf = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %126, i32 0, i32 25, !dbg !2028
  %127 = load float*, float** %h_buf, align 8, !dbg !2028
  %128 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2029
  %rcp_h_buf = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %128, i32 0, i32 26, !dbg !2030
  %129 = load float*, float** %rcp_h_buf, align 8, !dbg !2030
  %130 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2031
  %c_buf56 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %130, i32 0, i32 24, !dbg !2032
  %131 = load %union.ColorFloat*, %union.ColorFloat** %c_buf56, align 8, !dbg !2032
  %132 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2033
  %bar_h57 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %132, i32 0, i32 48, !dbg !2034
  %133 = load i32, i32* %bar_h57, align 8, !dbg !2034
  %134 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2035
  %bar_t = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %134, i32 0, i32 56, !dbg !2036
  %135 = load float, float* %bar_t, align 8, !dbg !2036
  call void %124(%struct.AVFrame* %125, float* %127, float* %129, %union.ColorFloat* %131, i32 %133, float %135), !dbg !2023
  %call58 = call i64 @av_gettime(), !dbg !2037
  store i64 %call58, i64* %cur_time, align 8, !dbg !2038
  %136 = load i64, i64* %cur_time, align 8, !dbg !2039
  %137 = load i64, i64* %last_time, align 8, !dbg !2040
  %sub59 = sub nsw i64 %136, %137, !dbg !2041
  %138 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2042
  %bar_time = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %138, i32 0, i32 42, !dbg !2043
  %139 = load i64, i64* %bar_time, align 8, !dbg !2044
  %add60 = add nsw i64 %139, %sub59, !dbg !2044
  store i64 %add60, i64* %bar_time, align 8, !dbg !2044
  %140 = load i64, i64* %cur_time, align 8, !dbg !2045
  store i64 %140, i64* %last_time, align 8, !dbg !2046
  br label %if.end61, !dbg !2047

if.end61:                                         ; preds = %if.then55, %if.end49
  %141 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2048
  %axis_h = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %141, i32 0, i32 49, !dbg !2050
  %142 = load i32, i32* %axis_h, align 4, !dbg !2050
  %tobool62 = icmp ne i32 %142, 0, !dbg !2048
  br i1 %tobool62, label %if.then63, label %if.end69, !dbg !2051

if.then63:                                        ; preds = %if.end61
  %143 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2052
  %draw_axis = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %143, i32 0, i32 34, !dbg !2054
  %144 = load void (%struct.AVFrame*, %struct.AVFrame*, %union.ColorFloat*, i32)*, void (%struct.AVFrame*, %struct.AVFrame*, %union.ColorFloat*, i32)** %draw_axis, align 8, !dbg !2054
  %145 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !2055
  %146 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2056
  %axis_frame = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %146, i32 0, i32 2, !dbg !2057
  %147 = load %struct.AVFrame*, %struct.AVFrame** %axis_frame, align 8, !dbg !2057
  %148 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2058
  %c_buf64 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %148, i32 0, i32 24, !dbg !2059
  %149 = load %union.ColorFloat*, %union.ColorFloat** %c_buf64, align 8, !dbg !2059
  %150 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2060
  %bar_h65 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %150, i32 0, i32 48, !dbg !2061
  %151 = load i32, i32* %bar_h65, align 8, !dbg !2061
  call void %144(%struct.AVFrame* %145, %struct.AVFrame* %147, %union.ColorFloat* %149, i32 %151), !dbg !2052
  %call66 = call i64 @av_gettime(), !dbg !2062
  store i64 %call66, i64* %cur_time, align 8, !dbg !2063
  %152 = load i64, i64* %cur_time, align 8, !dbg !2064
  %153 = load i64, i64* %last_time, align 8, !dbg !2065
  %sub67 = sub nsw i64 %152, %153, !dbg !2066
  %154 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2067
  %axis_time = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %154, i32 0, i32 43, !dbg !2068
  %155 = load i64, i64* %axis_time, align 8, !dbg !2069
  %add68 = add nsw i64 %155, %sub67, !dbg !2069
  store i64 %add68, i64* %axis_time, align 8, !dbg !2069
  %156 = load i64, i64* %cur_time, align 8, !dbg !2070
  store i64 %156, i64* %last_time, align 8, !dbg !2071
  br label %if.end69, !dbg !2072

if.end69:                                         ; preds = %if.then63, %if.end61
  %157 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2073
  %sono_h70 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %157, i32 0, i32 50, !dbg !2075
  %158 = load i32, i32* %sono_h70, align 8, !dbg !2075
  %tobool71 = icmp ne i32 %158, 0, !dbg !2073
  br i1 %tobool71, label %if.then72, label %if.end81, !dbg !2076

if.then72:                                        ; preds = %if.end69
  %159 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2077
  %draw_sono = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %159, i32 0, i32 35, !dbg !2079
  %160 = load void (%struct.AVFrame*, %struct.AVFrame*, i32, i32)*, void (%struct.AVFrame*, %struct.AVFrame*, i32, i32)** %draw_sono, align 8, !dbg !2079
  %161 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !2080
  %162 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2081
  %sono_frame73 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %162, i32 0, i32 3, !dbg !2082
  %163 = load %struct.AVFrame*, %struct.AVFrame** %sono_frame73, align 8, !dbg !2082
  %164 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2083
  %bar_h74 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %164, i32 0, i32 48, !dbg !2084
  %165 = load i32, i32* %bar_h74, align 8, !dbg !2084
  %166 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2085
  %axis_h75 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %166, i32 0, i32 49, !dbg !2086
  %167 = load i32, i32* %axis_h75, align 4, !dbg !2086
  %add76 = add nsw i32 %165, %167, !dbg !2087
  %168 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2088
  %sono_idx77 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %168, i32 0, i32 5, !dbg !2089
  %169 = load i32, i32* %sono_idx77, align 4, !dbg !2089
  call void %160(%struct.AVFrame* %161, %struct.AVFrame* %163, i32 %add76, i32 %169), !dbg !2077
  %call78 = call i64 @av_gettime(), !dbg !2090
  store i64 %call78, i64* %cur_time, align 8, !dbg !2091
  %170 = load i64, i64* %cur_time, align 8, !dbg !2092
  %171 = load i64, i64* %last_time, align 8, !dbg !2093
  %sub79 = sub nsw i64 %170, %171, !dbg !2094
  %172 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2095
  %sono_time = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %172, i32 0, i32 44, !dbg !2096
  %173 = load i64, i64* %sono_time, align 8, !dbg !2097
  %add80 = add nsw i64 %173, %sub79, !dbg !2097
  store i64 %add80, i64* %sono_time, align 8, !dbg !2097
  %174 = load i64, i64* %cur_time, align 8, !dbg !2098
  store i64 %174, i64* %last_time, align 8, !dbg !2099
  br label %if.end81, !dbg !2100

if.end81:                                         ; preds = %if.then72, %if.end69
  %175 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2101
  %next_pts = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %175, i32 0, i32 12, !dbg !2102
  %176 = load i64, i64* %next_pts, align 8, !dbg !2102
  %177 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !2103
  %pts = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %177, i32 0, i32 10, !dbg !2104
  store i64 %176, i64* %pts, align 8, !dbg !2105
  %178 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2106
  %next_pts82 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %178, i32 0, i32 12, !dbg !2107
  %179 = load i64, i64* %next_pts82, align 8, !dbg !2108
  %add83 = add nsw i64 %179, 10, !dbg !2108
  store i64 %add83, i64* %next_pts82, align 8, !dbg !2108
  br label %if.end84, !dbg !2109

if.end84:                                         ; preds = %if.end81, %if.end43
  %180 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2110
  %sono_count85 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %180, i32 0, i32 6, !dbg !2111
  %181 = load i32, i32* %sono_count85, align 8, !dbg !2111
  %add86 = add nsw i32 %181, 1, !dbg !2112
  %182 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2113
  %count = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %182, i32 0, i32 63, !dbg !2114
  %183 = load i32, i32* %count, align 8, !dbg !2114
  %rem = srem i32 %add86, %183, !dbg !2115
  %184 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2116
  %sono_count87 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %184, i32 0, i32 6, !dbg !2117
  store i32 %rem, i32* %sono_count87, align 8, !dbg !2118
  %185 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2119
  %sono_h88 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %185, i32 0, i32 50, !dbg !2121
  %186 = load i32, i32* %sono_h88, align 8, !dbg !2121
  %tobool89 = icmp ne i32 %186, 0, !dbg !2119
  br i1 %tobool89, label %if.then90, label %if.end98, !dbg !2122

if.then90:                                        ; preds = %if.end84
  %187 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2123
  %sono_idx91 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %187, i32 0, i32 5, !dbg !2124
  %188 = load i32, i32* %sono_idx91, align 4, !dbg !2124
  %189 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2125
  %sono_h92 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %189, i32 0, i32 50, !dbg !2126
  %190 = load i32, i32* %sono_h92, align 8, !dbg !2126
  %add93 = add nsw i32 %188, %190, !dbg !2127
  %sub94 = sub nsw i32 %add93, 1, !dbg !2128
  %191 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2129
  %sono_h95 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %191, i32 0, i32 50, !dbg !2130
  %192 = load i32, i32* %sono_h95, align 8, !dbg !2130
  %rem96 = srem i32 %sub94, %192, !dbg !2131
  %193 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2132
  %sono_idx97 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %193, i32 0, i32 5, !dbg !2133
  store i32 %rem96, i32* %sono_idx97, align 4, !dbg !2134
  br label %if.end98, !dbg !2132

if.end98:                                         ; preds = %if.then90, %if.end84
  store i32 0, i32* %retval, align 4, !dbg !2135
  br label %return, !dbg !2135

return:                                           ; preds = %if.end98, %if.then48
  %194 = load i32, i32* %retval, align 4, !dbg !2136
  ret i32 %194, !dbg !2136
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #3

declare i32 @ff_filter_frame(%struct.AVFilterLink*, %struct.AVFrame*) #4

declare void @av_frame_free(%struct.AVFrame**) #4

; Function Attrs: nounwind readnone
declare i64 @av_rescale_q(i64, i64, i64) #5

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @av_make_q(i32 %num, i32 %den) #6 !dbg !2137 {
entry:
  %retval = alloca %struct.AVRational, align 4
  %num.addr = alloca i32, align 4
  %den.addr = alloca i32, align 4
  %r = alloca %struct.AVRational, align 4
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !2140, metadata !820), !dbg !2141
  store i32 %den, i32* %den.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %den.addr, metadata !2142, metadata !820), !dbg !2143
  call void @llvm.dbg.declare(metadata %struct.AVRational* %r, metadata !2144, metadata !820), !dbg !2145
  %num1 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r, i32 0, i32 0, !dbg !2146
  %0 = load i32, i32* %num.addr, align 4, !dbg !2147
  store i32 %0, i32* %num1, align 4, !dbg !2146
  %den2 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r, i32 0, i32 1, !dbg !2146
  %1 = load i32, i32* %den.addr, align 4, !dbg !2148
  store i32 %1, i32* %den2, align 4, !dbg !2146
  %2 = bitcast %struct.AVRational* %retval to i8*, !dbg !2149
  %3 = bitcast %struct.AVRational* %r to i8*, !dbg !2149
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %3, i64 8, i32 4, i1 false), !dbg !2149
  %4 = bitcast %struct.AVRational* %retval to i64*, !dbg !2150
  %5 = load i64, i64* %4, align 4, !dbg !2150
  ret i64 %5, !dbg !2150
}

declare void @av_log(i8*, i32, i8*, ...) #4

; Function Attrs: inlinehint nounwind uwtable
define internal double @av_q2d(i64 %a.coerce) #6 !dbg !2151 {
entry:
  %a = alloca %struct.AVRational, align 4
  %0 = bitcast %struct.AVRational* %a to i64*
  store i64 %a.coerce, i64* %0, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %a, metadata !2154, metadata !820), !dbg !2155
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %a, i32 0, i32 0, !dbg !2156
  %1 = load i32, i32* %num, align 4, !dbg !2156
  %conv = sitofp i32 %1 to double, !dbg !2157
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %a, i32 0, i32 1, !dbg !2158
  %2 = load i32, i32* %den, align 4, !dbg !2158
  %conv1 = sitofp i32 %2 to double, !dbg !2159
  %div = fdiv double %conv, %conv1, !dbg !2160
  ret double %div, !dbg !2161
}

declare i64 @av_gettime() #4

declare void @av_fft_permute(%struct.FFTContext*, %struct.FFTComplex*) #4

declare void @av_fft_calc(%struct.FFTContext*, %struct.FFTComplex*) #4

; Function Attrs: nounwind uwtable
define internal void @process_cqt(%struct.ShowCQTContext* %s) #1 !dbg !2162 {
entry:
  %s.addr = alloca %struct.ShowCQTContext*, align 8
  %x = alloca i32, align 4
  %i = alloca i32, align 4
  %rcp_fcount = alloca float, align 4
  %h = alloca float, align 4
  %rcp_fcount87 = alloca float, align 4
  %result = alloca %struct.FFTComplex, align 4
  store %struct.ShowCQTContext* %s, %struct.ShowCQTContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShowCQTContext** %s.addr, metadata !2165, metadata !820), !dbg !2166
  call void @llvm.dbg.declare(metadata i32* %x, metadata !2167, metadata !820), !dbg !2168
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2169, metadata !820), !dbg !2170
  %0 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2171
  %sono_count = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %0, i32 0, i32 6, !dbg !2173
  %1 = load i32, i32* %sono_count, align 8, !dbg !2173
  %tobool = icmp ne i32 %1, 0, !dbg !2171
  br i1 %tobool, label %if.end59, label %if.then, !dbg !2174

if.then:                                          ; preds = %entry
  store i32 0, i32* %x, align 4, !dbg !2175
  br label %for.cond, !dbg !2178

for.cond:                                         ; preds = %for.inc, %if.then
  %2 = load i32, i32* %x, align 4, !dbg !2179
  %3 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2182
  %cqt_len = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %3, i32 0, i32 22, !dbg !2183
  %4 = load i32, i32* %cqt_len, align 8, !dbg !2183
  %cmp = icmp slt i32 %2, %4, !dbg !2184
  br i1 %cmp, label %for.body, label %for.end, !dbg !2185

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %x, align 4, !dbg !2186
  %idxprom = sext i32 %5 to i64, !dbg !2188
  %6 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2188
  %bar_v_buf = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %6, i32 0, i32 28, !dbg !2189
  %7 = load float*, float** %bar_v_buf, align 8, !dbg !2189
  %arrayidx = getelementptr inbounds float, float* %7, i64 %idxprom, !dbg !2188
  %8 = load float, float* %arrayidx, align 4, !dbg !2188
  %mul = fmul float %8, 5.000000e-01, !dbg !2190
  %9 = load i32, i32* %x, align 4, !dbg !2191
  %idxprom1 = sext i32 %9 to i64, !dbg !2192
  %10 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2192
  %cqt_result = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %10, i32 0, i32 18, !dbg !2193
  %11 = load %struct.FFTComplex*, %struct.FFTComplex** %cqt_result, align 8, !dbg !2193
  %arrayidx2 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %11, i64 %idxprom1, !dbg !2192
  %re = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx2, i32 0, i32 0, !dbg !2194
  %12 = load float, float* %re, align 4, !dbg !2194
  %13 = load i32, i32* %x, align 4, !dbg !2195
  %idxprom3 = sext i32 %13 to i64, !dbg !2196
  %14 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2196
  %cqt_result4 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %14, i32 0, i32 18, !dbg !2197
  %15 = load %struct.FFTComplex*, %struct.FFTComplex** %cqt_result4, align 8, !dbg !2197
  %arrayidx5 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %15, i64 %idxprom3, !dbg !2196
  %im = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx5, i32 0, i32 1, !dbg !2198
  %16 = load float, float* %im, align 4, !dbg !2198
  %add = fadd float %12, %16, !dbg !2199
  %mul6 = fmul float %mul, %add, !dbg !2200
  %17 = load i32, i32* %x, align 4, !dbg !2201
  %idxprom7 = sext i32 %17 to i64, !dbg !2202
  %18 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2202
  %h_buf = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %18, i32 0, i32 25, !dbg !2203
  %19 = load float*, float** %h_buf, align 8, !dbg !2203
  %arrayidx8 = getelementptr inbounds float, float* %19, i64 %idxprom7, !dbg !2202
  store float %mul6, float* %arrayidx8, align 4, !dbg !2204
  br label %for.inc, !dbg !2205

for.inc:                                          ; preds = %for.body
  %20 = load i32, i32* %x, align 4, !dbg !2206
  %inc = add nsw i32 %20, 1, !dbg !2206
  store i32 %inc, i32* %x, align 4, !dbg !2206
  br label %for.cond, !dbg !2208, !llvm.loop !2209

for.end:                                          ; preds = %for.cond
  %21 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2211
  %fcount = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %21, i32 0, i32 64, !dbg !2213
  %22 = load i32, i32* %fcount, align 4, !dbg !2213
  %cmp9 = icmp sgt i32 %22, 1, !dbg !2214
  br i1 %cmp9, label %if.then10, label %if.end, !dbg !2215

if.then10:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata float* %rcp_fcount, metadata !2216, metadata !820), !dbg !2218
  %23 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2219
  %fcount11 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %23, i32 0, i32 64, !dbg !2220
  %24 = load i32, i32* %fcount11, align 4, !dbg !2220
  %conv = sitofp i32 %24 to float, !dbg !2219
  %div = fdiv float 1.000000e+00, %conv, !dbg !2221
  store float %div, float* %rcp_fcount, align 4, !dbg !2218
  store i32 0, i32* %x, align 4, !dbg !2222
  br label %for.cond12, !dbg !2224

for.cond12:                                       ; preds = %for.inc35, %if.then10
  %25 = load i32, i32* %x, align 4, !dbg !2225
  %26 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2228
  %width = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %26, i32 0, i32 45, !dbg !2229
  %27 = load i32, i32* %width, align 8, !dbg !2229
  %cmp13 = icmp slt i32 %25, %27, !dbg !2230
  br i1 %cmp13, label %for.body15, label %for.end37, !dbg !2231

for.body15:                                       ; preds = %for.cond12
  call void @llvm.dbg.declare(metadata float* %h, metadata !2232, metadata !820), !dbg !2234
  store float 0.000000e+00, float* %h, align 4, !dbg !2234
  store i32 0, i32* %i, align 4, !dbg !2235
  br label %for.cond16, !dbg !2237

for.cond16:                                       ; preds = %for.inc28, %for.body15
  %28 = load i32, i32* %i, align 4, !dbg !2238
  %29 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2241
  %fcount17 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %29, i32 0, i32 64, !dbg !2242
  %30 = load i32, i32* %fcount17, align 4, !dbg !2242
  %cmp18 = icmp slt i32 %28, %30, !dbg !2243
  br i1 %cmp18, label %for.body20, label %for.end30, !dbg !2244

for.body20:                                       ; preds = %for.cond16
  %31 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2245
  %fcount21 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %31, i32 0, i32 64, !dbg !2246
  %32 = load i32, i32* %fcount21, align 4, !dbg !2246
  %33 = load i32, i32* %x, align 4, !dbg !2247
  %mul22 = mul nsw i32 %32, %33, !dbg !2248
  %34 = load i32, i32* %i, align 4, !dbg !2249
  %add23 = add nsw i32 %mul22, %34, !dbg !2250
  %idxprom24 = sext i32 %add23 to i64, !dbg !2251
  %35 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2251
  %h_buf25 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %35, i32 0, i32 25, !dbg !2252
  %36 = load float*, float** %h_buf25, align 8, !dbg !2252
  %arrayidx26 = getelementptr inbounds float, float* %36, i64 %idxprom24, !dbg !2251
  %37 = load float, float* %arrayidx26, align 4, !dbg !2251
  %38 = load float, float* %h, align 4, !dbg !2253
  %add27 = fadd float %38, %37, !dbg !2253
  store float %add27, float* %h, align 4, !dbg !2253
  br label %for.inc28, !dbg !2254

for.inc28:                                        ; preds = %for.body20
  %39 = load i32, i32* %i, align 4, !dbg !2255
  %inc29 = add nsw i32 %39, 1, !dbg !2255
  store i32 %inc29, i32* %i, align 4, !dbg !2255
  br label %for.cond16, !dbg !2257, !llvm.loop !2258

for.end30:                                        ; preds = %for.cond16
  %40 = load float, float* %rcp_fcount, align 4, !dbg !2260
  %41 = load float, float* %h, align 4, !dbg !2261
  %mul31 = fmul float %40, %41, !dbg !2262
  %42 = load i32, i32* %x, align 4, !dbg !2263
  %idxprom32 = sext i32 %42 to i64, !dbg !2264
  %43 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2264
  %h_buf33 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %43, i32 0, i32 25, !dbg !2265
  %44 = load float*, float** %h_buf33, align 8, !dbg !2265
  %arrayidx34 = getelementptr inbounds float, float* %44, i64 %idxprom32, !dbg !2264
  store float %mul31, float* %arrayidx34, align 4, !dbg !2266
  br label %for.inc35, !dbg !2267

for.inc35:                                        ; preds = %for.end30
  %45 = load i32, i32* %x, align 4, !dbg !2268
  %inc36 = add nsw i32 %45, 1, !dbg !2268
  store i32 %inc36, i32* %x, align 4, !dbg !2268
  br label %for.cond12, !dbg !2270, !llvm.loop !2271

for.end37:                                        ; preds = %for.cond12
  br label %if.end, !dbg !2273

if.end:                                           ; preds = %for.end37, %for.end
  store i32 0, i32* %x, align 4, !dbg !2274
  br label %for.cond38, !dbg !2276

for.cond38:                                       ; preds = %for.inc56, %if.end
  %46 = load i32, i32* %x, align 4, !dbg !2277
  %47 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2280
  %width39 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %47, i32 0, i32 45, !dbg !2281
  %48 = load i32, i32* %width39, align 8, !dbg !2281
  %cmp40 = icmp slt i32 %46, %48, !dbg !2282
  br i1 %cmp40, label %for.body42, label %for.end58, !dbg !2283

for.body42:                                       ; preds = %for.cond38
  %49 = load i32, i32* %x, align 4, !dbg !2284
  %idxprom43 = sext i32 %49 to i64, !dbg !2286
  %50 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2286
  %h_buf44 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %50, i32 0, i32 25, !dbg !2287
  %51 = load float*, float** %h_buf44, align 8, !dbg !2287
  %arrayidx45 = getelementptr inbounds float, float* %51, i64 %idxprom43, !dbg !2286
  %52 = load float, float* %arrayidx45, align 4, !dbg !2286
  %53 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2288
  %bar_g = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %53, i32 0, i32 55, !dbg !2289
  %54 = load float, float* %bar_g, align 4, !dbg !2289
  %call = call float @calculate_gamma(float %52, float %54), !dbg !2290
  %55 = load i32, i32* %x, align 4, !dbg !2291
  %idxprom46 = sext i32 %55 to i64, !dbg !2292
  %56 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2292
  %h_buf47 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %56, i32 0, i32 25, !dbg !2293
  %57 = load float*, float** %h_buf47, align 8, !dbg !2293
  %arrayidx48 = getelementptr inbounds float, float* %57, i64 %idxprom46, !dbg !2292
  store float %call, float* %arrayidx48, align 4, !dbg !2294
  %58 = load i32, i32* %x, align 4, !dbg !2295
  %idxprom49 = sext i32 %58 to i64, !dbg !2296
  %59 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2296
  %h_buf50 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %59, i32 0, i32 25, !dbg !2297
  %60 = load float*, float** %h_buf50, align 8, !dbg !2297
  %arrayidx51 = getelementptr inbounds float, float* %60, i64 %idxprom49, !dbg !2296
  %61 = load float, float* %arrayidx51, align 4, !dbg !2296
  %add52 = fadd float %61, 0x3F1A36E2E0000000, !dbg !2298
  %div53 = fdiv float 1.000000e+00, %add52, !dbg !2299
  %62 = load i32, i32* %x, align 4, !dbg !2300
  %idxprom54 = sext i32 %62 to i64, !dbg !2301
  %63 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2301
  %rcp_h_buf = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %63, i32 0, i32 26, !dbg !2302
  %64 = load float*, float** %rcp_h_buf, align 8, !dbg !2302
  %arrayidx55 = getelementptr inbounds float, float* %64, i64 %idxprom54, !dbg !2301
  store float %div53, float* %arrayidx55, align 4, !dbg !2303
  br label %for.inc56, !dbg !2304

for.inc56:                                        ; preds = %for.body42
  %65 = load i32, i32* %x, align 4, !dbg !2305
  %inc57 = add nsw i32 %65, 1, !dbg !2305
  store i32 %inc57, i32* %x, align 4, !dbg !2305
  br label %for.cond38, !dbg !2307, !llvm.loop !2308

for.end58:                                        ; preds = %for.cond38
  br label %if.end59, !dbg !2310

if.end59:                                         ; preds = %for.end58, %entry
  store i32 0, i32* %x, align 4, !dbg !2311
  br label %for.cond60, !dbg !2313

for.cond60:                                       ; preds = %for.inc80, %if.end59
  %66 = load i32, i32* %x, align 4, !dbg !2314
  %67 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2317
  %cqt_len61 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %67, i32 0, i32 22, !dbg !2318
  %68 = load i32, i32* %cqt_len61, align 8, !dbg !2318
  %cmp62 = icmp slt i32 %66, %68, !dbg !2319
  br i1 %cmp62, label %for.body64, label %for.end82, !dbg !2320

for.body64:                                       ; preds = %for.cond60
  %69 = load i32, i32* %x, align 4, !dbg !2321
  %idxprom65 = sext i32 %69 to i64, !dbg !2323
  %70 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2323
  %sono_v_buf = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %70, i32 0, i32 27, !dbg !2324
  %71 = load float*, float** %sono_v_buf, align 8, !dbg !2324
  %arrayidx66 = getelementptr inbounds float, float* %71, i64 %idxprom65, !dbg !2323
  %72 = load float, float* %arrayidx66, align 4, !dbg !2323
  %73 = load i32, i32* %x, align 4, !dbg !2325
  %idxprom67 = sext i32 %73 to i64, !dbg !2326
  %74 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2326
  %cqt_result68 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %74, i32 0, i32 18, !dbg !2327
  %75 = load %struct.FFTComplex*, %struct.FFTComplex** %cqt_result68, align 8, !dbg !2327
  %arrayidx69 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %75, i64 %idxprom67, !dbg !2326
  %re70 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx69, i32 0, i32 0, !dbg !2328
  %76 = load float, float* %re70, align 4, !dbg !2329
  %mul71 = fmul float %76, %72, !dbg !2329
  store float %mul71, float* %re70, align 4, !dbg !2329
  %77 = load i32, i32* %x, align 4, !dbg !2330
  %idxprom72 = sext i32 %77 to i64, !dbg !2331
  %78 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2331
  %sono_v_buf73 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %78, i32 0, i32 27, !dbg !2332
  %79 = load float*, float** %sono_v_buf73, align 8, !dbg !2332
  %arrayidx74 = getelementptr inbounds float, float* %79, i64 %idxprom72, !dbg !2331
  %80 = load float, float* %arrayidx74, align 4, !dbg !2331
  %81 = load i32, i32* %x, align 4, !dbg !2333
  %idxprom75 = sext i32 %81 to i64, !dbg !2334
  %82 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2334
  %cqt_result76 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %82, i32 0, i32 18, !dbg !2335
  %83 = load %struct.FFTComplex*, %struct.FFTComplex** %cqt_result76, align 8, !dbg !2335
  %arrayidx77 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %83, i64 %idxprom75, !dbg !2334
  %im78 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx77, i32 0, i32 1, !dbg !2336
  %84 = load float, float* %im78, align 4, !dbg !2337
  %mul79 = fmul float %84, %80, !dbg !2337
  store float %mul79, float* %im78, align 4, !dbg !2337
  br label %for.inc80, !dbg !2338

for.inc80:                                        ; preds = %for.body64
  %85 = load i32, i32* %x, align 4, !dbg !2339
  %inc81 = add nsw i32 %85, 1, !dbg !2339
  store i32 %inc81, i32* %x, align 4, !dbg !2339
  br label %for.cond60, !dbg !2341, !llvm.loop !2342

for.end82:                                        ; preds = %for.cond60
  %86 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2344
  %fcount83 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %86, i32 0, i32 64, !dbg !2346
  %87 = load i32, i32* %fcount83, align 4, !dbg !2346
  %cmp84 = icmp sgt i32 %87, 1, !dbg !2347
  br i1 %cmp84, label %if.then86, label %if.end137, !dbg !2348

if.then86:                                        ; preds = %for.end82
  call void @llvm.dbg.declare(metadata float* %rcp_fcount87, metadata !2349, metadata !820), !dbg !2351
  %88 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2352
  %fcount88 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %88, i32 0, i32 64, !dbg !2353
  %89 = load i32, i32* %fcount88, align 4, !dbg !2353
  %conv89 = sitofp i32 %89 to float, !dbg !2352
  %div90 = fdiv float 1.000000e+00, %conv89, !dbg !2354
  store float %div90, float* %rcp_fcount87, align 4, !dbg !2351
  store i32 0, i32* %x, align 4, !dbg !2355
  br label %for.cond91, !dbg !2357

for.cond91:                                       ; preds = %for.inc134, %if.then86
  %90 = load i32, i32* %x, align 4, !dbg !2358
  %91 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2361
  %width92 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %91, i32 0, i32 45, !dbg !2362
  %92 = load i32, i32* %width92, align 8, !dbg !2362
  %cmp93 = icmp slt i32 %90, %92, !dbg !2363
  br i1 %cmp93, label %for.body95, label %for.end136, !dbg !2364

for.body95:                                       ; preds = %for.cond91
  call void @llvm.dbg.declare(metadata %struct.FFTComplex* %result, metadata !2365, metadata !820), !dbg !2367
  %93 = bitcast %struct.FFTComplex* %result to i8*, !dbg !2367
  call void @llvm.memset.p0i8.i64(i8* %93, i8 0, i64 8, i32 4, i1 false), !dbg !2367
  store i32 0, i32* %i, align 4, !dbg !2368
  br label %for.cond96, !dbg !2370

for.cond96:                                       ; preds = %for.inc119, %for.body95
  %94 = load i32, i32* %i, align 4, !dbg !2371
  %95 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2374
  %fcount97 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %95, i32 0, i32 64, !dbg !2375
  %96 = load i32, i32* %fcount97, align 4, !dbg !2375
  %cmp98 = icmp slt i32 %94, %96, !dbg !2376
  br i1 %cmp98, label %for.body100, label %for.end121, !dbg !2377

for.body100:                                      ; preds = %for.cond96
  %97 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2378
  %fcount101 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %97, i32 0, i32 64, !dbg !2380
  %98 = load i32, i32* %fcount101, align 4, !dbg !2380
  %99 = load i32, i32* %x, align 4, !dbg !2381
  %mul102 = mul nsw i32 %98, %99, !dbg !2382
  %100 = load i32, i32* %i, align 4, !dbg !2383
  %add103 = add nsw i32 %mul102, %100, !dbg !2384
  %idxprom104 = sext i32 %add103 to i64, !dbg !2385
  %101 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2385
  %cqt_result105 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %101, i32 0, i32 18, !dbg !2386
  %102 = load %struct.FFTComplex*, %struct.FFTComplex** %cqt_result105, align 8, !dbg !2386
  %arrayidx106 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %102, i64 %idxprom104, !dbg !2385
  %re107 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx106, i32 0, i32 0, !dbg !2387
  %103 = load float, float* %re107, align 4, !dbg !2387
  %re108 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %result, i32 0, i32 0, !dbg !2388
  %104 = load float, float* %re108, align 4, !dbg !2389
  %add109 = fadd float %104, %103, !dbg !2389
  store float %add109, float* %re108, align 4, !dbg !2389
  %105 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2390
  %fcount110 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %105, i32 0, i32 64, !dbg !2391
  %106 = load i32, i32* %fcount110, align 4, !dbg !2391
  %107 = load i32, i32* %x, align 4, !dbg !2392
  %mul111 = mul nsw i32 %106, %107, !dbg !2393
  %108 = load i32, i32* %i, align 4, !dbg !2394
  %add112 = add nsw i32 %mul111, %108, !dbg !2395
  %idxprom113 = sext i32 %add112 to i64, !dbg !2396
  %109 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2396
  %cqt_result114 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %109, i32 0, i32 18, !dbg !2397
  %110 = load %struct.FFTComplex*, %struct.FFTComplex** %cqt_result114, align 8, !dbg !2397
  %arrayidx115 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %110, i64 %idxprom113, !dbg !2396
  %im116 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx115, i32 0, i32 1, !dbg !2398
  %111 = load float, float* %im116, align 4, !dbg !2398
  %im117 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %result, i32 0, i32 1, !dbg !2399
  %112 = load float, float* %im117, align 4, !dbg !2400
  %add118 = fadd float %112, %111, !dbg !2400
  store float %add118, float* %im117, align 4, !dbg !2400
  br label %for.inc119, !dbg !2401

for.inc119:                                       ; preds = %for.body100
  %113 = load i32, i32* %i, align 4, !dbg !2402
  %inc120 = add nsw i32 %113, 1, !dbg !2402
  store i32 %inc120, i32* %i, align 4, !dbg !2402
  br label %for.cond96, !dbg !2404, !llvm.loop !2405

for.end121:                                       ; preds = %for.cond96
  %114 = load float, float* %rcp_fcount87, align 4, !dbg !2407
  %re122 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %result, i32 0, i32 0, !dbg !2408
  %115 = load float, float* %re122, align 4, !dbg !2408
  %mul123 = fmul float %114, %115, !dbg !2409
  %116 = load i32, i32* %x, align 4, !dbg !2410
  %idxprom124 = sext i32 %116 to i64, !dbg !2411
  %117 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2411
  %cqt_result125 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %117, i32 0, i32 18, !dbg !2412
  %118 = load %struct.FFTComplex*, %struct.FFTComplex** %cqt_result125, align 8, !dbg !2412
  %arrayidx126 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %118, i64 %idxprom124, !dbg !2411
  %re127 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx126, i32 0, i32 0, !dbg !2413
  store float %mul123, float* %re127, align 4, !dbg !2414
  %119 = load float, float* %rcp_fcount87, align 4, !dbg !2415
  %im128 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %result, i32 0, i32 1, !dbg !2416
  %120 = load float, float* %im128, align 4, !dbg !2416
  %mul129 = fmul float %119, %120, !dbg !2417
  %121 = load i32, i32* %x, align 4, !dbg !2418
  %idxprom130 = sext i32 %121 to i64, !dbg !2419
  %122 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2419
  %cqt_result131 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %122, i32 0, i32 18, !dbg !2420
  %123 = load %struct.FFTComplex*, %struct.FFTComplex** %cqt_result131, align 8, !dbg !2420
  %arrayidx132 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %123, i64 %idxprom130, !dbg !2419
  %im133 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx132, i32 0, i32 1, !dbg !2421
  store float %mul129, float* %im133, align 4, !dbg !2422
  br label %for.inc134, !dbg !2423

for.inc134:                                       ; preds = %for.end121
  %124 = load i32, i32* %x, align 4, !dbg !2424
  %inc135 = add nsw i32 %124, 1, !dbg !2424
  store i32 %inc135, i32* %x, align 4, !dbg !2424
  br label %for.cond91, !dbg !2426, !llvm.loop !2427

for.end136:                                       ; preds = %for.cond91
  br label %if.end137, !dbg !2429

if.end137:                                        ; preds = %for.end136, %for.end82
  %125 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2430
  %format = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %125, i32 0, i32 4, !dbg !2432
  %126 = load i32, i32* %format, align 8, !dbg !2432
  %cmp138 = icmp eq i32 %126, 2, !dbg !2433
  br i1 %cmp138, label %if.then140, label %if.else, !dbg !2434

if.then140:                                       ; preds = %if.end137
  %127 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2435
  %c_buf = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %127, i32 0, i32 24, !dbg !2436
  %128 = load %union.ColorFloat*, %union.ColorFloat** %c_buf, align 8, !dbg !2436
  %129 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2437
  %cqt_result141 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %129, i32 0, i32 18, !dbg !2438
  %130 = load %struct.FFTComplex*, %struct.FFTComplex** %cqt_result141, align 8, !dbg !2438
  %131 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2439
  %sono_g = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %131, i32 0, i32 54, !dbg !2440
  %132 = load float, float* %sono_g, align 8, !dbg !2440
  %133 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2441
  %width142 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %133, i32 0, i32 45, !dbg !2442
  %134 = load i32, i32* %width142, align 8, !dbg !2442
  %135 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2443
  %cscheme_v = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %135, i32 0, i32 30, !dbg !2444
  %arraydecay = getelementptr inbounds [6 x float], [6 x float]* %cscheme_v, i32 0, i32 0, !dbg !2443
  call void @rgb_from_cqt(%union.ColorFloat* %128, %struct.FFTComplex* %130, float %132, i32 %134, float* %arraydecay), !dbg !2445
  br label %if.end150, !dbg !2445

if.else:                                          ; preds = %if.end137
  %136 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2446
  %c_buf143 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %136, i32 0, i32 24, !dbg !2447
  %137 = load %union.ColorFloat*, %union.ColorFloat** %c_buf143, align 8, !dbg !2447
  %138 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2448
  %cqt_result144 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %138, i32 0, i32 18, !dbg !2449
  %139 = load %struct.FFTComplex*, %struct.FFTComplex** %cqt_result144, align 8, !dbg !2449
  %140 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2450
  %sono_g145 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %140, i32 0, i32 54, !dbg !2451
  %141 = load float, float* %sono_g145, align 8, !dbg !2451
  %142 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2452
  %width146 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %142, i32 0, i32 45, !dbg !2453
  %143 = load i32, i32* %width146, align 8, !dbg !2453
  %144 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2454
  %cmatrix = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %144, i32 0, i32 29, !dbg !2455
  %arraydecay147 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %cmatrix, i32 0, i32 0, !dbg !2454
  %145 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !2456
  %cscheme_v148 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %145, i32 0, i32 30, !dbg !2457
  %arraydecay149 = getelementptr inbounds [6 x float], [6 x float]* %cscheme_v148, i32 0, i32 0, !dbg !2456
  call void @yuv_from_cqt(%union.ColorFloat* %137, %struct.FFTComplex* %139, float %141, i32 %143, [3 x float]* %arraydecay147, float* %arraydecay149), !dbg !2458
  br label %if.end150

if.end150:                                        ; preds = %if.else, %if.then140
  ret void, !dbg !2459
}

declare %struct.AVFrame* @ff_get_video_buffer(%struct.AVFilterLink*, i32, i32) #4

; Function Attrs: nounwind uwtable
define internal float @calculate_gamma(float %v, float %g) #1 !dbg !2460 {
entry:
  %retval = alloca float, align 4
  %v.addr = alloca float, align 4
  %g.addr = alloca float, align 4
  store float %v, float* %v.addr, align 4
  call void @llvm.dbg.declare(metadata float* %v.addr, metadata !2463, metadata !820), !dbg !2464
  store float %g, float* %g.addr, align 4
  call void @llvm.dbg.declare(metadata float* %g.addr, metadata !2465, metadata !820), !dbg !2466
  %0 = load float, float* %g.addr, align 4, !dbg !2467
  %cmp = fcmp oeq float %0, 1.000000e+00, !dbg !2469
  br i1 %cmp, label %if.then, label %if.end, !dbg !2470

if.then:                                          ; preds = %entry
  %1 = load float, float* %v.addr, align 4, !dbg !2471
  store float %1, float* %retval, align 4, !dbg !2472
  br label %return, !dbg !2472

if.end:                                           ; preds = %entry
  %2 = load float, float* %g.addr, align 4, !dbg !2473
  %cmp1 = fcmp oeq float %2, 2.000000e+00, !dbg !2475
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !2476

if.then2:                                         ; preds = %if.end
  %3 = load float, float* %v.addr, align 4, !dbg !2477
  %call = call float @sqrtf(float %3) #8, !dbg !2478
  store float %call, float* %retval, align 4, !dbg !2479
  br label %return, !dbg !2479

if.end3:                                          ; preds = %if.end
  %4 = load float, float* %g.addr, align 4, !dbg !2480
  %cmp4 = fcmp oeq float %4, 3.000000e+00, !dbg !2482
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !2483

if.then5:                                         ; preds = %if.end3
  %5 = load float, float* %v.addr, align 4, !dbg !2484
  %call6 = call float @cbrtf(float %5) #8, !dbg !2485
  store float %call6, float* %retval, align 4, !dbg !2486
  br label %return, !dbg !2486

if.end7:                                          ; preds = %if.end3
  %6 = load float, float* %g.addr, align 4, !dbg !2487
  %cmp8 = fcmp oeq float %6, 4.000000e+00, !dbg !2489
  br i1 %cmp8, label %if.then9, label %if.end12, !dbg !2490

if.then9:                                         ; preds = %if.end7
  %7 = load float, float* %v.addr, align 4, !dbg !2491
  %call10 = call float @sqrtf(float %7) #8, !dbg !2492
  %call11 = call float @sqrtf(float %call10) #8, !dbg !2493
  store float %call11, float* %retval, align 4, !dbg !2495
  br label %return, !dbg !2495

if.end12:                                         ; preds = %if.end7
  %8 = load float, float* %v.addr, align 4, !dbg !2496
  %call13 = call float @logf(float %8) #8, !dbg !2497
  %9 = load float, float* %g.addr, align 4, !dbg !2498
  %div = fdiv float %call13, %9, !dbg !2499
  %call14 = call float @expf(float %div) #8, !dbg !2500
  store float %call14, float* %retval, align 4, !dbg !2502
  br label %return, !dbg !2502

return:                                           ; preds = %if.end12, %if.then9, %if.then5, %if.then2, %if.then
  %10 = load float, float* %retval, align 4, !dbg !2503
  ret float %10, !dbg !2503
}

; Function Attrs: nounwind uwtable
define internal void @rgb_from_cqt(%union.ColorFloat* %c, %struct.FFTComplex* %v, float %g, i32 %len, float* %cscheme) #1 !dbg !2504 {
entry:
  %c.addr = alloca %union.ColorFloat*, align 8
  %v.addr = alloca %struct.FFTComplex*, align 8
  %g.addr = alloca float, align 4
  %len.addr = alloca i32, align 4
  %cscheme.addr = alloca float*, align 8
  %x = alloca i32, align 4
  store %union.ColorFloat* %c, %union.ColorFloat** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %union.ColorFloat** %c.addr, metadata !2507, metadata !820), !dbg !2508
  store %struct.FFTComplex* %v, %struct.FFTComplex** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FFTComplex** %v.addr, metadata !2509, metadata !820), !dbg !2510
  store float %g, float* %g.addr, align 4
  call void @llvm.dbg.declare(metadata float* %g.addr, metadata !2511, metadata !820), !dbg !2512
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !2513, metadata !820), !dbg !2514
  store float* %cscheme, float** %cscheme.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cscheme.addr, metadata !2515, metadata !820), !dbg !2516
  call void @llvm.dbg.declare(metadata i32* %x, metadata !2517, metadata !820), !dbg !2518
  store i32 0, i32* %x, align 4, !dbg !2519
  br label %for.cond, !dbg !2521

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %x, align 4, !dbg !2522
  %1 = load i32, i32* %len.addr, align 4, !dbg !2525
  %cmp = icmp slt i32 %0, %1, !dbg !2526
  br i1 %cmp, label %for.body, label %for.end, !dbg !2527

for.body:                                         ; preds = %for.cond
  %2 = load float*, float** %cscheme.addr, align 8, !dbg !2528
  %arrayidx = getelementptr inbounds float, float* %2, i64 0, !dbg !2528
  %3 = load float, float* %arrayidx, align 4, !dbg !2528
  %4 = load i32, i32* %x, align 4, !dbg !2530
  %idxprom = sext i32 %4 to i64, !dbg !2531
  %5 = load %struct.FFTComplex*, %struct.FFTComplex** %v.addr, align 8, !dbg !2531
  %arrayidx1 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %5, i64 %idxprom, !dbg !2531
  %re = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx1, i32 0, i32 0, !dbg !2532
  %6 = load float, float* %re, align 4, !dbg !2532
  %mul = fmul float %3, %6, !dbg !2533
  %7 = load float*, float** %cscheme.addr, align 8, !dbg !2534
  %arrayidx2 = getelementptr inbounds float, float* %7, i64 3, !dbg !2534
  %8 = load float, float* %arrayidx2, align 4, !dbg !2534
  %9 = load i32, i32* %x, align 4, !dbg !2535
  %idxprom3 = sext i32 %9 to i64, !dbg !2536
  %10 = load %struct.FFTComplex*, %struct.FFTComplex** %v.addr, align 8, !dbg !2536
  %arrayidx4 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %10, i64 %idxprom3, !dbg !2536
  %im = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx4, i32 0, i32 1, !dbg !2537
  %11 = load float, float* %im, align 4, !dbg !2537
  %mul5 = fmul float %8, %11, !dbg !2538
  %add = fadd float %mul, %mul5, !dbg !2539
  %cmp6 = fcmp ogt float 1.000000e+00, %add, !dbg !2540
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !2541

cond.true:                                        ; preds = %for.body
  %12 = load float*, float** %cscheme.addr, align 8, !dbg !2542
  %arrayidx7 = getelementptr inbounds float, float* %12, i64 0, !dbg !2542
  %13 = load float, float* %arrayidx7, align 4, !dbg !2542
  %14 = load i32, i32* %x, align 4, !dbg !2544
  %idxprom8 = sext i32 %14 to i64, !dbg !2545
  %15 = load %struct.FFTComplex*, %struct.FFTComplex** %v.addr, align 8, !dbg !2545
  %arrayidx9 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %15, i64 %idxprom8, !dbg !2545
  %re10 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx9, i32 0, i32 0, !dbg !2546
  %16 = load float, float* %re10, align 4, !dbg !2546
  %mul11 = fmul float %13, %16, !dbg !2547
  %17 = load float*, float** %cscheme.addr, align 8, !dbg !2548
  %arrayidx12 = getelementptr inbounds float, float* %17, i64 3, !dbg !2548
  %18 = load float, float* %arrayidx12, align 4, !dbg !2548
  %19 = load i32, i32* %x, align 4, !dbg !2549
  %idxprom13 = sext i32 %19 to i64, !dbg !2550
  %20 = load %struct.FFTComplex*, %struct.FFTComplex** %v.addr, align 8, !dbg !2550
  %arrayidx14 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %20, i64 %idxprom13, !dbg !2550
  %im15 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx14, i32 0, i32 1, !dbg !2551
  %21 = load float, float* %im15, align 4, !dbg !2551
  %mul16 = fmul float %18, %21, !dbg !2552
  %add17 = fadd float %mul11, %mul16, !dbg !2553
  br label %cond.end, !dbg !2554

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !2555

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %add17, %cond.true ], [ 1.000000e+00, %cond.false ], !dbg !2557
  %22 = load float, float* %g.addr, align 4, !dbg !2559
  %call = call float @calculate_gamma(float %cond, float %22), !dbg !2560
  %mul18 = fmul float 2.550000e+02, %call, !dbg !2561
  %23 = load i32, i32* %x, align 4, !dbg !2562
  %idxprom19 = sext i32 %23 to i64, !dbg !2563
  %24 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !2563
  %arrayidx20 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %24, i64 %idxprom19, !dbg !2563
  %rgb = bitcast %union.ColorFloat* %arrayidx20 to %struct.RGBFloat*, !dbg !2564
  %r = getelementptr inbounds %struct.RGBFloat, %struct.RGBFloat* %rgb, i32 0, i32 0, !dbg !2565
  store float %mul18, float* %r, align 4, !dbg !2566
  %25 = load float*, float** %cscheme.addr, align 8, !dbg !2567
  %arrayidx21 = getelementptr inbounds float, float* %25, i64 1, !dbg !2567
  %26 = load float, float* %arrayidx21, align 4, !dbg !2567
  %27 = load i32, i32* %x, align 4, !dbg !2568
  %idxprom22 = sext i32 %27 to i64, !dbg !2569
  %28 = load %struct.FFTComplex*, %struct.FFTComplex** %v.addr, align 8, !dbg !2569
  %arrayidx23 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %28, i64 %idxprom22, !dbg !2569
  %re24 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx23, i32 0, i32 0, !dbg !2570
  %29 = load float, float* %re24, align 4, !dbg !2570
  %mul25 = fmul float %26, %29, !dbg !2571
  %30 = load float*, float** %cscheme.addr, align 8, !dbg !2572
  %arrayidx26 = getelementptr inbounds float, float* %30, i64 4, !dbg !2572
  %31 = load float, float* %arrayidx26, align 4, !dbg !2572
  %32 = load i32, i32* %x, align 4, !dbg !2573
  %idxprom27 = sext i32 %32 to i64, !dbg !2574
  %33 = load %struct.FFTComplex*, %struct.FFTComplex** %v.addr, align 8, !dbg !2574
  %arrayidx28 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %33, i64 %idxprom27, !dbg !2574
  %im29 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx28, i32 0, i32 1, !dbg !2575
  %34 = load float, float* %im29, align 4, !dbg !2575
  %mul30 = fmul float %31, %34, !dbg !2576
  %add31 = fadd float %mul25, %mul30, !dbg !2577
  %cmp32 = fcmp ogt float 1.000000e+00, %add31, !dbg !2578
  br i1 %cmp32, label %cond.true33, label %cond.false45, !dbg !2579

cond.true33:                                      ; preds = %cond.end
  %35 = load float*, float** %cscheme.addr, align 8, !dbg !2580
  %arrayidx34 = getelementptr inbounds float, float* %35, i64 1, !dbg !2580
  %36 = load float, float* %arrayidx34, align 4, !dbg !2580
  %37 = load i32, i32* %x, align 4, !dbg !2581
  %idxprom35 = sext i32 %37 to i64, !dbg !2582
  %38 = load %struct.FFTComplex*, %struct.FFTComplex** %v.addr, align 8, !dbg !2582
  %arrayidx36 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %38, i64 %idxprom35, !dbg !2582
  %re37 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx36, i32 0, i32 0, !dbg !2583
  %39 = load float, float* %re37, align 4, !dbg !2583
  %mul38 = fmul float %36, %39, !dbg !2584
  %40 = load float*, float** %cscheme.addr, align 8, !dbg !2585
  %arrayidx39 = getelementptr inbounds float, float* %40, i64 4, !dbg !2585
  %41 = load float, float* %arrayidx39, align 4, !dbg !2585
  %42 = load i32, i32* %x, align 4, !dbg !2586
  %idxprom40 = sext i32 %42 to i64, !dbg !2587
  %43 = load %struct.FFTComplex*, %struct.FFTComplex** %v.addr, align 8, !dbg !2587
  %arrayidx41 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %43, i64 %idxprom40, !dbg !2587
  %im42 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx41, i32 0, i32 1, !dbg !2588
  %44 = load float, float* %im42, align 4, !dbg !2588
  %mul43 = fmul float %41, %44, !dbg !2589
  %add44 = fadd float %mul38, %mul43, !dbg !2590
  br label %cond.end46, !dbg !2591

cond.false45:                                     ; preds = %cond.end
  br label %cond.end46, !dbg !2592

cond.end46:                                       ; preds = %cond.false45, %cond.true33
  %cond47 = phi float [ %add44, %cond.true33 ], [ 1.000000e+00, %cond.false45 ], !dbg !2593
  %45 = load float, float* %g.addr, align 4, !dbg !2594
  %call48 = call float @calculate_gamma(float %cond47, float %45), !dbg !2595
  %mul49 = fmul float 2.550000e+02, %call48, !dbg !2596
  %46 = load i32, i32* %x, align 4, !dbg !2597
  %idxprom50 = sext i32 %46 to i64, !dbg !2598
  %47 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !2598
  %arrayidx51 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %47, i64 %idxprom50, !dbg !2598
  %rgb52 = bitcast %union.ColorFloat* %arrayidx51 to %struct.RGBFloat*, !dbg !2599
  %g53 = getelementptr inbounds %struct.RGBFloat, %struct.RGBFloat* %rgb52, i32 0, i32 1, !dbg !2600
  store float %mul49, float* %g53, align 4, !dbg !2601
  %48 = load float*, float** %cscheme.addr, align 8, !dbg !2602
  %arrayidx54 = getelementptr inbounds float, float* %48, i64 2, !dbg !2602
  %49 = load float, float* %arrayidx54, align 4, !dbg !2602
  %50 = load i32, i32* %x, align 4, !dbg !2603
  %idxprom55 = sext i32 %50 to i64, !dbg !2604
  %51 = load %struct.FFTComplex*, %struct.FFTComplex** %v.addr, align 8, !dbg !2604
  %arrayidx56 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %51, i64 %idxprom55, !dbg !2604
  %re57 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx56, i32 0, i32 0, !dbg !2605
  %52 = load float, float* %re57, align 4, !dbg !2605
  %mul58 = fmul float %49, %52, !dbg !2606
  %53 = load float*, float** %cscheme.addr, align 8, !dbg !2607
  %arrayidx59 = getelementptr inbounds float, float* %53, i64 5, !dbg !2607
  %54 = load float, float* %arrayidx59, align 4, !dbg !2607
  %55 = load i32, i32* %x, align 4, !dbg !2608
  %idxprom60 = sext i32 %55 to i64, !dbg !2609
  %56 = load %struct.FFTComplex*, %struct.FFTComplex** %v.addr, align 8, !dbg !2609
  %arrayidx61 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %56, i64 %idxprom60, !dbg !2609
  %im62 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx61, i32 0, i32 1, !dbg !2610
  %57 = load float, float* %im62, align 4, !dbg !2610
  %mul63 = fmul float %54, %57, !dbg !2611
  %add64 = fadd float %mul58, %mul63, !dbg !2612
  %cmp65 = fcmp ogt float 1.000000e+00, %add64, !dbg !2613
  br i1 %cmp65, label %cond.true66, label %cond.false78, !dbg !2614

cond.true66:                                      ; preds = %cond.end46
  %58 = load float*, float** %cscheme.addr, align 8, !dbg !2615
  %arrayidx67 = getelementptr inbounds float, float* %58, i64 2, !dbg !2615
  %59 = load float, float* %arrayidx67, align 4, !dbg !2615
  %60 = load i32, i32* %x, align 4, !dbg !2616
  %idxprom68 = sext i32 %60 to i64, !dbg !2617
  %61 = load %struct.FFTComplex*, %struct.FFTComplex** %v.addr, align 8, !dbg !2617
  %arrayidx69 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %61, i64 %idxprom68, !dbg !2617
  %re70 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx69, i32 0, i32 0, !dbg !2618
  %62 = load float, float* %re70, align 4, !dbg !2618
  %mul71 = fmul float %59, %62, !dbg !2619
  %63 = load float*, float** %cscheme.addr, align 8, !dbg !2620
  %arrayidx72 = getelementptr inbounds float, float* %63, i64 5, !dbg !2620
  %64 = load float, float* %arrayidx72, align 4, !dbg !2620
  %65 = load i32, i32* %x, align 4, !dbg !2621
  %idxprom73 = sext i32 %65 to i64, !dbg !2622
  %66 = load %struct.FFTComplex*, %struct.FFTComplex** %v.addr, align 8, !dbg !2622
  %arrayidx74 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %66, i64 %idxprom73, !dbg !2622
  %im75 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx74, i32 0, i32 1, !dbg !2623
  %67 = load float, float* %im75, align 4, !dbg !2623
  %mul76 = fmul float %64, %67, !dbg !2624
  %add77 = fadd float %mul71, %mul76, !dbg !2625
  br label %cond.end79, !dbg !2626

cond.false78:                                     ; preds = %cond.end46
  br label %cond.end79, !dbg !2627

cond.end79:                                       ; preds = %cond.false78, %cond.true66
  %cond80 = phi float [ %add77, %cond.true66 ], [ 1.000000e+00, %cond.false78 ], !dbg !2628
  %68 = load float, float* %g.addr, align 4, !dbg !2629
  %call81 = call float @calculate_gamma(float %cond80, float %68), !dbg !2630
  %mul82 = fmul float 2.550000e+02, %call81, !dbg !2631
  %69 = load i32, i32* %x, align 4, !dbg !2632
  %idxprom83 = sext i32 %69 to i64, !dbg !2633
  %70 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !2633
  %arrayidx84 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %70, i64 %idxprom83, !dbg !2633
  %rgb85 = bitcast %union.ColorFloat* %arrayidx84 to %struct.RGBFloat*, !dbg !2634
  %b = getelementptr inbounds %struct.RGBFloat, %struct.RGBFloat* %rgb85, i32 0, i32 2, !dbg !2635
  store float %mul82, float* %b, align 4, !dbg !2636
  br label %for.inc, !dbg !2637

for.inc:                                          ; preds = %cond.end79
  %71 = load i32, i32* %x, align 4, !dbg !2638
  %inc = add nsw i32 %71, 1, !dbg !2638
  store i32 %inc, i32* %x, align 4, !dbg !2638
  br label %for.cond, !dbg !2640, !llvm.loop !2641

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2643
}

; Function Attrs: nounwind uwtable
define internal void @yuv_from_cqt(%union.ColorFloat* %c, %struct.FFTComplex* %v, float %gamma, i32 %len, [3 x float]* %cm, float* %cscheme) #1 !dbg !2644 {
entry:
  %c.addr = alloca %union.ColorFloat*, align 8
  %v.addr = alloca %struct.FFTComplex*, align 8
  %gamma.addr = alloca float, align 4
  %len.addr = alloca i32, align 4
  %cm.addr = alloca [3 x float]*, align 8
  %cscheme.addr = alloca float*, align 8
  %x = alloca i32, align 4
  %r = alloca float, align 4
  %g = alloca float, align 4
  %b = alloca float, align 4
  store %union.ColorFloat* %c, %union.ColorFloat** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %union.ColorFloat** %c.addr, metadata !2649, metadata !820), !dbg !2650
  store %struct.FFTComplex* %v, %struct.FFTComplex** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FFTComplex** %v.addr, metadata !2651, metadata !820), !dbg !2652
  store float %gamma, float* %gamma.addr, align 4
  call void @llvm.dbg.declare(metadata float* %gamma.addr, metadata !2653, metadata !820), !dbg !2654
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !2655, metadata !820), !dbg !2656
  store [3 x float]* %cm, [3 x float]** %cm.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %cm.addr, metadata !2657, metadata !820), !dbg !2658
  store float* %cscheme, float** %cscheme.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cscheme.addr, metadata !2659, metadata !820), !dbg !2660
  call void @llvm.dbg.declare(metadata i32* %x, metadata !2661, metadata !820), !dbg !2662
  store i32 0, i32* %x, align 4, !dbg !2663
  br label %for.cond, !dbg !2665

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %x, align 4, !dbg !2666
  %1 = load i32, i32* %len.addr, align 4, !dbg !2669
  %cmp = icmp slt i32 %0, %1, !dbg !2670
  br i1 %cmp, label %for.body, label %for.end, !dbg !2671

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %r, metadata !2672, metadata !820), !dbg !2674
  call void @llvm.dbg.declare(metadata float* %g, metadata !2675, metadata !820), !dbg !2676
  call void @llvm.dbg.declare(metadata float* %b, metadata !2677, metadata !820), !dbg !2678
  %2 = load float*, float** %cscheme.addr, align 8, !dbg !2679
  %arrayidx = getelementptr inbounds float, float* %2, i64 0, !dbg !2679
  %3 = load float, float* %arrayidx, align 4, !dbg !2679
  %4 = load i32, i32* %x, align 4, !dbg !2680
  %idxprom = sext i32 %4 to i64, !dbg !2681
  %5 = load %struct.FFTComplex*, %struct.FFTComplex** %v.addr, align 8, !dbg !2681
  %arrayidx1 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %5, i64 %idxprom, !dbg !2681
  %re = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx1, i32 0, i32 0, !dbg !2682
  %6 = load float, float* %re, align 4, !dbg !2682
  %mul = fmul float %3, %6, !dbg !2683
  %7 = load float*, float** %cscheme.addr, align 8, !dbg !2684
  %arrayidx2 = getelementptr inbounds float, float* %7, i64 3, !dbg !2684
  %8 = load float, float* %arrayidx2, align 4, !dbg !2684
  %9 = load i32, i32* %x, align 4, !dbg !2685
  %idxprom3 = sext i32 %9 to i64, !dbg !2686
  %10 = load %struct.FFTComplex*, %struct.FFTComplex** %v.addr, align 8, !dbg !2686
  %arrayidx4 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %10, i64 %idxprom3, !dbg !2686
  %im = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx4, i32 0, i32 1, !dbg !2687
  %11 = load float, float* %im, align 4, !dbg !2687
  %mul5 = fmul float %8, %11, !dbg !2688
  %add = fadd float %mul, %mul5, !dbg !2689
  %cmp6 = fcmp ogt float 1.000000e+00, %add, !dbg !2690
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !2691

cond.true:                                        ; preds = %for.body
  %12 = load float*, float** %cscheme.addr, align 8, !dbg !2692
  %arrayidx7 = getelementptr inbounds float, float* %12, i64 0, !dbg !2692
  %13 = load float, float* %arrayidx7, align 4, !dbg !2692
  %14 = load i32, i32* %x, align 4, !dbg !2694
  %idxprom8 = sext i32 %14 to i64, !dbg !2695
  %15 = load %struct.FFTComplex*, %struct.FFTComplex** %v.addr, align 8, !dbg !2695
  %arrayidx9 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %15, i64 %idxprom8, !dbg !2695
  %re10 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx9, i32 0, i32 0, !dbg !2696
  %16 = load float, float* %re10, align 4, !dbg !2696
  %mul11 = fmul float %13, %16, !dbg !2697
  %17 = load float*, float** %cscheme.addr, align 8, !dbg !2698
  %arrayidx12 = getelementptr inbounds float, float* %17, i64 3, !dbg !2698
  %18 = load float, float* %arrayidx12, align 4, !dbg !2698
  %19 = load i32, i32* %x, align 4, !dbg !2699
  %idxprom13 = sext i32 %19 to i64, !dbg !2700
  %20 = load %struct.FFTComplex*, %struct.FFTComplex** %v.addr, align 8, !dbg !2700
  %arrayidx14 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %20, i64 %idxprom13, !dbg !2700
  %im15 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx14, i32 0, i32 1, !dbg !2701
  %21 = load float, float* %im15, align 4, !dbg !2701
  %mul16 = fmul float %18, %21, !dbg !2702
  %add17 = fadd float %mul11, %mul16, !dbg !2703
  br label %cond.end, !dbg !2704

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !2705

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %add17, %cond.true ], [ 1.000000e+00, %cond.false ], !dbg !2707
  %22 = load float, float* %gamma.addr, align 4, !dbg !2709
  %call = call float @calculate_gamma(float %cond, float %22), !dbg !2710
  store float %call, float* %r, align 4, !dbg !2711
  %23 = load float*, float** %cscheme.addr, align 8, !dbg !2712
  %arrayidx18 = getelementptr inbounds float, float* %23, i64 1, !dbg !2712
  %24 = load float, float* %arrayidx18, align 4, !dbg !2712
  %25 = load i32, i32* %x, align 4, !dbg !2713
  %idxprom19 = sext i32 %25 to i64, !dbg !2714
  %26 = load %struct.FFTComplex*, %struct.FFTComplex** %v.addr, align 8, !dbg !2714
  %arrayidx20 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %26, i64 %idxprom19, !dbg !2714
  %re21 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx20, i32 0, i32 0, !dbg !2715
  %27 = load float, float* %re21, align 4, !dbg !2715
  %mul22 = fmul float %24, %27, !dbg !2716
  %28 = load float*, float** %cscheme.addr, align 8, !dbg !2717
  %arrayidx23 = getelementptr inbounds float, float* %28, i64 4, !dbg !2717
  %29 = load float, float* %arrayidx23, align 4, !dbg !2717
  %30 = load i32, i32* %x, align 4, !dbg !2718
  %idxprom24 = sext i32 %30 to i64, !dbg !2719
  %31 = load %struct.FFTComplex*, %struct.FFTComplex** %v.addr, align 8, !dbg !2719
  %arrayidx25 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %31, i64 %idxprom24, !dbg !2719
  %im26 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx25, i32 0, i32 1, !dbg !2720
  %32 = load float, float* %im26, align 4, !dbg !2720
  %mul27 = fmul float %29, %32, !dbg !2721
  %add28 = fadd float %mul22, %mul27, !dbg !2722
  %cmp29 = fcmp ogt float 1.000000e+00, %add28, !dbg !2723
  br i1 %cmp29, label %cond.true30, label %cond.false42, !dbg !2724

cond.true30:                                      ; preds = %cond.end
  %33 = load float*, float** %cscheme.addr, align 8, !dbg !2725
  %arrayidx31 = getelementptr inbounds float, float* %33, i64 1, !dbg !2725
  %34 = load float, float* %arrayidx31, align 4, !dbg !2725
  %35 = load i32, i32* %x, align 4, !dbg !2726
  %idxprom32 = sext i32 %35 to i64, !dbg !2727
  %36 = load %struct.FFTComplex*, %struct.FFTComplex** %v.addr, align 8, !dbg !2727
  %arrayidx33 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %36, i64 %idxprom32, !dbg !2727
  %re34 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx33, i32 0, i32 0, !dbg !2728
  %37 = load float, float* %re34, align 4, !dbg !2728
  %mul35 = fmul float %34, %37, !dbg !2729
  %38 = load float*, float** %cscheme.addr, align 8, !dbg !2730
  %arrayidx36 = getelementptr inbounds float, float* %38, i64 4, !dbg !2730
  %39 = load float, float* %arrayidx36, align 4, !dbg !2730
  %40 = load i32, i32* %x, align 4, !dbg !2731
  %idxprom37 = sext i32 %40 to i64, !dbg !2732
  %41 = load %struct.FFTComplex*, %struct.FFTComplex** %v.addr, align 8, !dbg !2732
  %arrayidx38 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %41, i64 %idxprom37, !dbg !2732
  %im39 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx38, i32 0, i32 1, !dbg !2733
  %42 = load float, float* %im39, align 4, !dbg !2733
  %mul40 = fmul float %39, %42, !dbg !2734
  %add41 = fadd float %mul35, %mul40, !dbg !2735
  br label %cond.end43, !dbg !2736

cond.false42:                                     ; preds = %cond.end
  br label %cond.end43, !dbg !2737

cond.end43:                                       ; preds = %cond.false42, %cond.true30
  %cond44 = phi float [ %add41, %cond.true30 ], [ 1.000000e+00, %cond.false42 ], !dbg !2738
  %43 = load float, float* %gamma.addr, align 4, !dbg !2739
  %call45 = call float @calculate_gamma(float %cond44, float %43), !dbg !2740
  store float %call45, float* %g, align 4, !dbg !2741
  %44 = load float*, float** %cscheme.addr, align 8, !dbg !2742
  %arrayidx46 = getelementptr inbounds float, float* %44, i64 2, !dbg !2742
  %45 = load float, float* %arrayidx46, align 4, !dbg !2742
  %46 = load i32, i32* %x, align 4, !dbg !2743
  %idxprom47 = sext i32 %46 to i64, !dbg !2744
  %47 = load %struct.FFTComplex*, %struct.FFTComplex** %v.addr, align 8, !dbg !2744
  %arrayidx48 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %47, i64 %idxprom47, !dbg !2744
  %re49 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx48, i32 0, i32 0, !dbg !2745
  %48 = load float, float* %re49, align 4, !dbg !2745
  %mul50 = fmul float %45, %48, !dbg !2746
  %49 = load float*, float** %cscheme.addr, align 8, !dbg !2747
  %arrayidx51 = getelementptr inbounds float, float* %49, i64 5, !dbg !2747
  %50 = load float, float* %arrayidx51, align 4, !dbg !2747
  %51 = load i32, i32* %x, align 4, !dbg !2748
  %idxprom52 = sext i32 %51 to i64, !dbg !2749
  %52 = load %struct.FFTComplex*, %struct.FFTComplex** %v.addr, align 8, !dbg !2749
  %arrayidx53 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %52, i64 %idxprom52, !dbg !2749
  %im54 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx53, i32 0, i32 1, !dbg !2750
  %53 = load float, float* %im54, align 4, !dbg !2750
  %mul55 = fmul float %50, %53, !dbg !2751
  %add56 = fadd float %mul50, %mul55, !dbg !2752
  %cmp57 = fcmp ogt float 1.000000e+00, %add56, !dbg !2753
  br i1 %cmp57, label %cond.true58, label %cond.false70, !dbg !2754

cond.true58:                                      ; preds = %cond.end43
  %54 = load float*, float** %cscheme.addr, align 8, !dbg !2755
  %arrayidx59 = getelementptr inbounds float, float* %54, i64 2, !dbg !2755
  %55 = load float, float* %arrayidx59, align 4, !dbg !2755
  %56 = load i32, i32* %x, align 4, !dbg !2756
  %idxprom60 = sext i32 %56 to i64, !dbg !2757
  %57 = load %struct.FFTComplex*, %struct.FFTComplex** %v.addr, align 8, !dbg !2757
  %arrayidx61 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %57, i64 %idxprom60, !dbg !2757
  %re62 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx61, i32 0, i32 0, !dbg !2758
  %58 = load float, float* %re62, align 4, !dbg !2758
  %mul63 = fmul float %55, %58, !dbg !2759
  %59 = load float*, float** %cscheme.addr, align 8, !dbg !2760
  %arrayidx64 = getelementptr inbounds float, float* %59, i64 5, !dbg !2760
  %60 = load float, float* %arrayidx64, align 4, !dbg !2760
  %61 = load i32, i32* %x, align 4, !dbg !2761
  %idxprom65 = sext i32 %61 to i64, !dbg !2762
  %62 = load %struct.FFTComplex*, %struct.FFTComplex** %v.addr, align 8, !dbg !2762
  %arrayidx66 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %62, i64 %idxprom65, !dbg !2762
  %im67 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx66, i32 0, i32 1, !dbg !2763
  %63 = load float, float* %im67, align 4, !dbg !2763
  %mul68 = fmul float %60, %63, !dbg !2764
  %add69 = fadd float %mul63, %mul68, !dbg !2765
  br label %cond.end71, !dbg !2766

cond.false70:                                     ; preds = %cond.end43
  br label %cond.end71, !dbg !2767

cond.end71:                                       ; preds = %cond.false70, %cond.true58
  %cond72 = phi float [ %add69, %cond.true58 ], [ 1.000000e+00, %cond.false70 ], !dbg !2768
  %64 = load float, float* %gamma.addr, align 4, !dbg !2769
  %call73 = call float @calculate_gamma(float %cond72, float %64), !dbg !2770
  store float %call73, float* %b, align 4, !dbg !2771
  %65 = load [3 x float]*, [3 x float]** %cm.addr, align 8, !dbg !2772
  %arrayidx74 = getelementptr inbounds [3 x float], [3 x float]* %65, i64 0, !dbg !2772
  %arrayidx75 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx74, i64 0, i64 0, !dbg !2772
  %66 = load float, float* %arrayidx75, align 4, !dbg !2772
  %67 = load float, float* %r, align 4, !dbg !2773
  %mul76 = fmul float %66, %67, !dbg !2774
  %68 = load [3 x float]*, [3 x float]** %cm.addr, align 8, !dbg !2775
  %arrayidx77 = getelementptr inbounds [3 x float], [3 x float]* %68, i64 0, !dbg !2775
  %arrayidx78 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx77, i64 0, i64 1, !dbg !2775
  %69 = load float, float* %arrayidx78, align 4, !dbg !2775
  %70 = load float, float* %g, align 4, !dbg !2776
  %mul79 = fmul float %69, %70, !dbg !2777
  %add80 = fadd float %mul76, %mul79, !dbg !2778
  %71 = load [3 x float]*, [3 x float]** %cm.addr, align 8, !dbg !2779
  %arrayidx81 = getelementptr inbounds [3 x float], [3 x float]* %71, i64 0, !dbg !2779
  %arrayidx82 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx81, i64 0, i64 2, !dbg !2779
  %72 = load float, float* %arrayidx82, align 4, !dbg !2779
  %73 = load float, float* %b, align 4, !dbg !2780
  %mul83 = fmul float %72, %73, !dbg !2781
  %add84 = fadd float %add80, %mul83, !dbg !2782
  %74 = load i32, i32* %x, align 4, !dbg !2783
  %idxprom85 = sext i32 %74 to i64, !dbg !2784
  %75 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !2784
  %arrayidx86 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %75, i64 %idxprom85, !dbg !2784
  %yuv = bitcast %union.ColorFloat* %arrayidx86 to %struct.YUVFloat*, !dbg !2785
  %y = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv, i32 0, i32 0, !dbg !2786
  store float %add84, float* %y, align 4, !dbg !2787
  %76 = load [3 x float]*, [3 x float]** %cm.addr, align 8, !dbg !2788
  %arrayidx87 = getelementptr inbounds [3 x float], [3 x float]* %76, i64 1, !dbg !2788
  %arrayidx88 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx87, i64 0, i64 0, !dbg !2788
  %77 = load float, float* %arrayidx88, align 4, !dbg !2788
  %78 = load float, float* %r, align 4, !dbg !2789
  %mul89 = fmul float %77, %78, !dbg !2790
  %79 = load [3 x float]*, [3 x float]** %cm.addr, align 8, !dbg !2791
  %arrayidx90 = getelementptr inbounds [3 x float], [3 x float]* %79, i64 1, !dbg !2791
  %arrayidx91 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx90, i64 0, i64 1, !dbg !2791
  %80 = load float, float* %arrayidx91, align 4, !dbg !2791
  %81 = load float, float* %g, align 4, !dbg !2792
  %mul92 = fmul float %80, %81, !dbg !2793
  %add93 = fadd float %mul89, %mul92, !dbg !2794
  %82 = load [3 x float]*, [3 x float]** %cm.addr, align 8, !dbg !2795
  %arrayidx94 = getelementptr inbounds [3 x float], [3 x float]* %82, i64 1, !dbg !2795
  %arrayidx95 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx94, i64 0, i64 2, !dbg !2795
  %83 = load float, float* %arrayidx95, align 4, !dbg !2795
  %84 = load float, float* %b, align 4, !dbg !2796
  %mul96 = fmul float %83, %84, !dbg !2797
  %add97 = fadd float %add93, %mul96, !dbg !2798
  %85 = load i32, i32* %x, align 4, !dbg !2799
  %idxprom98 = sext i32 %85 to i64, !dbg !2800
  %86 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !2800
  %arrayidx99 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %86, i64 %idxprom98, !dbg !2800
  %yuv100 = bitcast %union.ColorFloat* %arrayidx99 to %struct.YUVFloat*, !dbg !2801
  %u = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv100, i32 0, i32 1, !dbg !2802
  store float %add97, float* %u, align 4, !dbg !2803
  %87 = load [3 x float]*, [3 x float]** %cm.addr, align 8, !dbg !2804
  %arrayidx101 = getelementptr inbounds [3 x float], [3 x float]* %87, i64 2, !dbg !2804
  %arrayidx102 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx101, i64 0, i64 0, !dbg !2804
  %88 = load float, float* %arrayidx102, align 4, !dbg !2804
  %89 = load float, float* %r, align 4, !dbg !2805
  %mul103 = fmul float %88, %89, !dbg !2806
  %90 = load [3 x float]*, [3 x float]** %cm.addr, align 8, !dbg !2807
  %arrayidx104 = getelementptr inbounds [3 x float], [3 x float]* %90, i64 2, !dbg !2807
  %arrayidx105 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx104, i64 0, i64 1, !dbg !2807
  %91 = load float, float* %arrayidx105, align 4, !dbg !2807
  %92 = load float, float* %g, align 4, !dbg !2808
  %mul106 = fmul float %91, %92, !dbg !2809
  %add107 = fadd float %mul103, %mul106, !dbg !2810
  %93 = load [3 x float]*, [3 x float]** %cm.addr, align 8, !dbg !2811
  %arrayidx108 = getelementptr inbounds [3 x float], [3 x float]* %93, i64 2, !dbg !2811
  %arrayidx109 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx108, i64 0, i64 2, !dbg !2811
  %94 = load float, float* %arrayidx109, align 4, !dbg !2811
  %95 = load float, float* %b, align 4, !dbg !2812
  %mul110 = fmul float %94, %95, !dbg !2813
  %add111 = fadd float %add107, %mul110, !dbg !2814
  %96 = load i32, i32* %x, align 4, !dbg !2815
  %idxprom112 = sext i32 %96 to i64, !dbg !2816
  %97 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !2816
  %arrayidx113 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %97, i64 %idxprom112, !dbg !2816
  %yuv114 = bitcast %union.ColorFloat* %arrayidx113 to %struct.YUVFloat*, !dbg !2817
  %v115 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv114, i32 0, i32 2, !dbg !2818
  store float %add111, float* %v115, align 4, !dbg !2819
  br label %for.inc, !dbg !2820

for.inc:                                          ; preds = %cond.end71
  %98 = load i32, i32* %x, align 4, !dbg !2821
  %inc = add nsw i32 %98, 1, !dbg !2821
  store i32 %inc, i32* %x, align 4, !dbg !2821
  br label %for.cond, !dbg !2823, !llvm.loop !2824

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2826
}

; Function Attrs: nounwind
declare float @sqrtf(float) #7

; Function Attrs: nounwind
declare float @cbrtf(float) #7

; Function Attrs: nounwind
declare float @expf(float) #7

; Function Attrs: nounwind
declare float @logf(float) #7

; Function Attrs: nounwind uwtable
define internal i32 @request_frame(%struct.AVFilterLink* %outlink) #1 !dbg !2827 {
entry:
  %outlink.addr = alloca %struct.AVFilterLink*, align 8
  %inlink = alloca %struct.AVFilterLink*, align 8
  %ret = alloca i32, align 4
  store %struct.AVFilterLink* %outlink, %struct.AVFilterLink** %outlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterLink** %outlink.addr, metadata !2828, metadata !820), !dbg !2829
  call void @llvm.dbg.declare(metadata %struct.AVFilterLink** %inlink, metadata !2830, metadata !820), !dbg !2831
  %0 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !2832
  %src = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %0, i32 0, i32 0, !dbg !2833
  %1 = load %struct.AVFilterContext*, %struct.AVFilterContext** %src, align 8, !dbg !2833
  %inputs = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %1, i32 0, i32 4, !dbg !2834
  %2 = load %struct.AVFilterLink**, %struct.AVFilterLink*** %inputs, align 8, !dbg !2834
  %arrayidx = getelementptr inbounds %struct.AVFilterLink*, %struct.AVFilterLink** %2, i64 0, !dbg !2832
  %3 = load %struct.AVFilterLink*, %struct.AVFilterLink** %arrayidx, align 8, !dbg !2832
  store %struct.AVFilterLink* %3, %struct.AVFilterLink** %inlink, align 8, !dbg !2831
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2835, metadata !820), !dbg !2836
  %4 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink, align 8, !dbg !2837
  %call = call i32 @ff_request_frame(%struct.AVFilterLink* %4), !dbg !2838
  store i32 %call, i32* %ret, align 4, !dbg !2839
  %5 = load i32, i32* %ret, align 4, !dbg !2840
  %cmp = icmp eq i32 %5, -541478725, !dbg !2842
  br i1 %cmp, label %if.then, label %if.end, !dbg !2843

if.then:                                          ; preds = %entry
  %6 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink, align 8, !dbg !2844
  %call1 = call i32 @filter_frame(%struct.AVFilterLink* %6, %struct.AVFrame* null), !dbg !2845
  store i32 %call1, i32* %ret, align 4, !dbg !2846
  br label %if.end, !dbg !2847

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32, i32* %ret, align 4, !dbg !2848
  ret i32 %7, !dbg !2849
}

; Function Attrs: nounwind uwtable
define internal i32 @config_output(%struct.AVFilterLink* %outlink) #1 !dbg !2850 {
entry:
  %retval.i = alloca %struct.AVRational, align 4
  %q.i = alloca %struct.AVRational, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %q.i, metadata !2851, metadata !820), !dbg !2855
  %r.i = alloca %struct.AVRational, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %r.i, metadata !2857, metadata !820), !dbg !2858
  %retval = alloca i32, align 4
  %outlink.addr = alloca %struct.AVFilterLink*, align 8
  %ctx = alloca %struct.AVFilterContext*, align 8
  %inlink = alloca %struct.AVFilterLink*, align 8
  %s = alloca %struct.ShowCQTContext*, align 8
  %ret = alloca i32, align 4
  %coerce = alloca %struct.AVRational, align 4
  %agg.tmp = alloca %struct.AVRational, align 4
  %agg.tmp4 = alloca %struct.AVRational, align 4
  %coerce7 = alloca %struct.AVRational, align 4
  %k = alloca i32, align 4
  %y = alloca double, align 8
  %agg.tmp210 = alloca %struct.AVRational, align 4
  %coerce215 = alloca %struct.AVRational, align 4
  store %struct.AVFilterLink* %outlink, %struct.AVFilterLink** %outlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterLink** %outlink.addr, metadata !2859, metadata !820), !dbg !2860
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx, metadata !2861, metadata !820), !dbg !2862
  %0 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !2863
  %src = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %0, i32 0, i32 0, !dbg !2864
  %1 = load %struct.AVFilterContext*, %struct.AVFilterContext** %src, align 8, !dbg !2864
  store %struct.AVFilterContext* %1, %struct.AVFilterContext** %ctx, align 8, !dbg !2862
  call void @llvm.dbg.declare(metadata %struct.AVFilterLink** %inlink, metadata !2865, metadata !820), !dbg !2866
  %2 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !2867
  %inputs = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %2, i32 0, i32 4, !dbg !2868
  %3 = load %struct.AVFilterLink**, %struct.AVFilterLink*** %inputs, align 8, !dbg !2868
  %arrayidx = getelementptr inbounds %struct.AVFilterLink*, %struct.AVFilterLink** %3, i64 0, !dbg !2867
  %4 = load %struct.AVFilterLink*, %struct.AVFilterLink** %arrayidx, align 8, !dbg !2867
  store %struct.AVFilterLink* %4, %struct.AVFilterLink** %inlink, align 8, !dbg !2866
  call void @llvm.dbg.declare(metadata %struct.ShowCQTContext** %s, metadata !2869, metadata !820), !dbg !2870
  %5 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !2871
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %5, i32 0, i32 9, !dbg !2872
  %6 = load i8*, i8** %priv, align 8, !dbg !2872
  %7 = bitcast i8* %6 to %struct.ShowCQTContext*, !dbg !2871
  store %struct.ShowCQTContext* %7, %struct.ShowCQTContext** %s, align 8, !dbg !2870
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2873, metadata !820), !dbg !2874
  %8 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2875
  call void @common_uninit(%struct.ShowCQTContext* %8), !dbg !2876
  %9 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2877
  %width = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %9, i32 0, i32 45, !dbg !2878
  %10 = load i32, i32* %width, align 8, !dbg !2878
  %11 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !2879
  %w = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %11, i32 0, i32 5, !dbg !2880
  store i32 %10, i32* %w, align 4, !dbg !2881
  %12 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2882
  %height = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %12, i32 0, i32 46, !dbg !2883
  %13 = load i32, i32* %height, align 4, !dbg !2883
  %14 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !2884
  %h = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %14, i32 0, i32 6, !dbg !2885
  store i32 %13, i32* %h, align 8, !dbg !2886
  %15 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !2887
  %format = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %15, i32 0, i32 10, !dbg !2888
  %16 = load i32, i32* %format, align 4, !dbg !2888
  %17 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2889
  %format1 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %17, i32 0, i32 4, !dbg !2890
  store i32 %16, i32* %format1, align 8, !dbg !2891
  %18 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !2892
  %sample_aspect_ratio = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %18, i32 0, i32 7, !dbg !2893
  %call = call i64 @av_make_q(i32 1, i32 1), !dbg !2894
  %19 = bitcast %struct.AVRational* %coerce to i64*, !dbg !2894
  store i64 %call, i64* %19, align 4, !dbg !2894
  %20 = bitcast %struct.AVRational* %sample_aspect_ratio to i8*, !dbg !2894
  %21 = bitcast %struct.AVRational* %coerce to i8*, !dbg !2894
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 4, i1 false), !dbg !2895
  %22 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !2897
  %frame_rate = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %22, i32 0, i32 24, !dbg !2898
  %23 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2899
  %rate = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %23, i32 0, i32 47, !dbg !2900
  %24 = bitcast %struct.AVRational* %frame_rate to i8*, !dbg !2900
  %25 = bitcast %struct.AVRational* %rate to i8*, !dbg !2900
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 8, i32 4, i1 false), !dbg !2900
  %26 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !2901
  %time_base = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %26, i32 0, i32 11, !dbg !2902
  %27 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2903
  %rate2 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %27, i32 0, i32 47, !dbg !2904
  %28 = bitcast %struct.AVRational* %rate2 to i64*, !dbg !2905
  %29 = load i64, i64* %28, align 8, !dbg !2905
  %30 = bitcast %struct.AVRational* %q.i to i64*, !dbg !2905
  store i64 %29, i64* %30, align 4, !dbg !2905
  %num.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r.i, i32 0, i32 0, !dbg !2906
  %den.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q.i, i32 0, i32 1, !dbg !2907
  %31 = load i32, i32* %den.i, align 4, !dbg !2907
  store i32 %31, i32* %num.i, align 4, !dbg !2906
  %den1.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r.i, i32 0, i32 1, !dbg !2906
  %num2.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q.i, i32 0, i32 0, !dbg !2908
  %32 = load i32, i32* %num2.i, align 4, !dbg !2908
  store i32 %32, i32* %den1.i, align 4, !dbg !2906
  %33 = bitcast %struct.AVRational* %retval.i to i8*, !dbg !2909
  %34 = bitcast %struct.AVRational* %r.i to i8*, !dbg !2909
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %34, i64 8, i32 4, i1 false) #8, !dbg !2909
  %35 = bitcast %struct.AVRational* %retval.i to i64*, !dbg !2910
  %36 = load i64, i64* %35, align 4, !dbg !2910
  %37 = bitcast %struct.AVRational* %agg.tmp to i64*, !dbg !2905
  store i64 %36, i64* %37, align 4, !dbg !2905
  %call5 = call i64 @av_make_q(i32 1, i32 10), !dbg !2911
  %38 = bitcast %struct.AVRational* %agg.tmp4 to i64*, !dbg !2912
  store i64 %call5, i64* %38, align 4, !dbg !2912
  %39 = bitcast %struct.AVRational* %agg.tmp to i64*, !dbg !2913
  %40 = load i64, i64* %39, align 4, !dbg !2913
  %41 = bitcast %struct.AVRational* %agg.tmp4 to i64*, !dbg !2913
  %42 = load i64, i64* %41, align 4, !dbg !2913
  %call6 = call i64 @av_mul_q(i64 %40, i64 %42) #2, !dbg !2914
  %43 = bitcast %struct.AVRational* %coerce7 to i64*, !dbg !2913
  store i64 %call6, i64* %43, align 4, !dbg !2913
  %44 = bitcast %struct.AVRational* %time_base to i8*, !dbg !2913
  %45 = bitcast %struct.AVRational* %coerce7 to i8*, !dbg !2913
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %44, i8* %45, i64 8, i32 4, i1 false), !dbg !2916
  %46 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !2918
  %47 = bitcast %struct.AVFilterContext* %46 to i8*, !dbg !2918
  %48 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2919
  %width8 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %48, i32 0, i32 45, !dbg !2920
  %49 = load i32, i32* %width8, align 8, !dbg !2920
  %50 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2921
  %height9 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %50, i32 0, i32 46, !dbg !2922
  %51 = load i32, i32* %height9, align 4, !dbg !2922
  %52 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2923
  %format10 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %52, i32 0, i32 4, !dbg !2924
  %53 = load i32, i32* %format10, align 8, !dbg !2924
  %call11 = call i8* @av_get_pix_fmt_name(i32 %53), !dbg !2925
  %54 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2926
  %rate12 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %54, i32 0, i32 47, !dbg !2927
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %rate12, i32 0, i32 0, !dbg !2928
  %55 = load i32, i32* %num, align 8, !dbg !2928
  %56 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2929
  %rate13 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %56, i32 0, i32 47, !dbg !2930
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %rate13, i32 0, i32 1, !dbg !2931
  %57 = load i32, i32* %den, align 4, !dbg !2931
  %58 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2932
  %bar_h = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %58, i32 0, i32 48, !dbg !2933
  %59 = load i32, i32* %bar_h, align 8, !dbg !2933
  %60 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2934
  %axis_h = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %60, i32 0, i32 49, !dbg !2935
  %61 = load i32, i32* %axis_h, align 4, !dbg !2935
  %62 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2936
  %sono_h = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %62, i32 0, i32 50, !dbg !2937
  %63 = load i32, i32* %sono_h, align 8, !dbg !2937
  call void (i8*, i32, i8*, ...) @av_log(i8* %47, i32 32, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.4, i32 0, i32 0), i32 %49, i32 %51, i8* %call11, i32 %55, i32 %57, i32 %59, i32 %61, i32 %63), !dbg !2938
  %64 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2939
  %width14 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %64, i32 0, i32 45, !dbg !2940
  %65 = load i32, i32* %width14, align 8, !dbg !2940
  %66 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2941
  %fcount = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %66, i32 0, i32 64, !dbg !2942
  %67 = load i32, i32* %fcount, align 4, !dbg !2942
  %mul = mul nsw i32 %65, %67, !dbg !2943
  %68 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2944
  %cqt_len = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %68, i32 0, i32 22, !dbg !2945
  store i32 %mul, i32* %cqt_len, align 8, !dbg !2946
  %69 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2947
  %basefreq = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %69, i32 0, i32 59, !dbg !2949
  %70 = load double, double* %basefreq, align 8, !dbg !2949
  %71 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2950
  %endfreq = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %71, i32 0, i32 60, !dbg !2951
  %72 = load double, double* %endfreq, align 8, !dbg !2951
  %73 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2952
  %cqt_len15 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %73, i32 0, i32 22, !dbg !2953
  %74 = load i32, i32* %cqt_len15, align 8, !dbg !2953
  %call16 = call double* @create_freq_table(double %70, double %72, i32 %74), !dbg !2954
  %75 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2955
  %freq = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %75, i32 0, i32 13, !dbg !2956
  store double* %call16, double** %freq, align 8, !dbg !2957
  %tobool = icmp ne double* %call16, null, !dbg !2957
  br i1 %tobool, label %if.end, label %if.then, !dbg !2958

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !2959
  br label %return, !dbg !2959

if.end:                                           ; preds = %entry
  %76 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2960
  %call17 = call i32 @init_volume(%struct.ShowCQTContext* %76), !dbg !2962
  store i32 %call17, i32* %ret, align 4, !dbg !2963
  %cmp = icmp slt i32 %call17, 0, !dbg !2964
  br i1 %cmp, label %if.then18, label %if.end19, !dbg !2965

if.then18:                                        ; preds = %if.end
  %77 = load i32, i32* %ret, align 4, !dbg !2966
  store i32 %77, i32* %retval, align 4, !dbg !2967
  br label %return, !dbg !2967

if.end19:                                         ; preds = %if.end
  %78 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink, align 8, !dbg !2968
  %sample_rate = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %78, i32 0, i32 9, !dbg !2969
  %79 = load i32, i32* %sample_rate, align 8, !dbg !2969
  %conv = sitofp i32 %79 to double, !dbg !2968
  %80 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2970
  %timeclamp = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %80, i32 0, i32 57, !dbg !2971
  %81 = load double, double* %timeclamp, align 8, !dbg !2971
  %mul20 = fmul double %conv, %81, !dbg !2972
  %call21 = call double @log2(double %mul20) #8, !dbg !2973
  %call22 = call double @ceil(double %call21) #2, !dbg !2974
  %cmp23 = fcmp ogt double %call22, 4.000000e+00, !dbg !2976
  br i1 %cmp23, label %cond.true, label %cond.false, !dbg !2977

cond.true:                                        ; preds = %if.end19
  %82 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink, align 8, !dbg !2978
  %sample_rate25 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %82, i32 0, i32 9, !dbg !2979
  %83 = load i32, i32* %sample_rate25, align 8, !dbg !2979
  %conv26 = sitofp i32 %83 to double, !dbg !2978
  %84 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2980
  %timeclamp27 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %84, i32 0, i32 57, !dbg !2981
  %85 = load double, double* %timeclamp27, align 8, !dbg !2981
  %mul28 = fmul double %conv26, %85, !dbg !2982
  %call29 = call double @log2(double %mul28) #8, !dbg !2983
  %call30 = call double @ceil(double %call29) #2, !dbg !2984
  br label %cond.end, !dbg !2986

cond.false:                                       ; preds = %if.end19
  br label %cond.end, !dbg !2987

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %call30, %cond.true ], [ 4.000000e+00, %cond.false ], !dbg !2988
  %conv31 = fptosi double %cond to i32, !dbg !2989
  %86 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2990
  %fft_bits = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %86, i32 0, i32 20, !dbg !2991
  store i32 %conv31, i32* %fft_bits, align 8, !dbg !2992
  %87 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2993
  %fft_bits32 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %87, i32 0, i32 20, !dbg !2994
  %88 = load i32, i32* %fft_bits32, align 8, !dbg !2994
  %shl = shl i32 1, %88, !dbg !2995
  %89 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !2996
  %fft_len = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %89, i32 0, i32 21, !dbg !2997
  store i32 %shl, i32* %fft_len, align 4, !dbg !2998
  %90 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !2999
  %91 = bitcast %struct.AVFilterContext* %90 to i8*, !dbg !2999
  %92 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3000
  %fft_len33 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %92, i32 0, i32 21, !dbg !3001
  %93 = load i32, i32* %fft_len33, align 4, !dbg !3001
  %94 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3002
  %cqt_len34 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %94, i32 0, i32 22, !dbg !3003
  %95 = load i32, i32* %cqt_len34, align 8, !dbg !3003
  call void (i8*, i32, i8*, ...) @av_log(i8* %91, i32 32, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i32 0, i32 0), i32 %93, i32 %95), !dbg !3004
  %96 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3005
  %fft_bits35 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %96, i32 0, i32 20, !dbg !3006
  %97 = load i32, i32* %fft_bits35, align 8, !dbg !3006
  %call36 = call %struct.FFTContext* @av_fft_init(i32 %97, i32 0), !dbg !3007
  %98 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3008
  %fft_ctx = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %98, i32 0, i32 14, !dbg !3009
  store %struct.FFTContext* %call36, %struct.FFTContext** %fft_ctx, align 8, !dbg !3010
  %99 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3011
  %fft_len37 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %99, i32 0, i32 21, !dbg !3012
  %100 = load i32, i32* %fft_len37, align 4, !dbg !3012
  %conv38 = sext i32 %100 to i64, !dbg !3011
  %call39 = call noalias i8* @av_calloc(i64 %conv38, i64 8), !dbg !3013
  %101 = bitcast i8* %call39 to %struct.FFTComplex*, !dbg !3013
  %102 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3014
  %fft_data = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %102, i32 0, i32 16, !dbg !3015
  store %struct.FFTComplex* %101, %struct.FFTComplex** %fft_data, align 8, !dbg !3016
  %103 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3017
  %fft_len40 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %103, i32 0, i32 21, !dbg !3018
  %104 = load i32, i32* %fft_len40, align 4, !dbg !3018
  %add = add nsw i32 %104, 64, !dbg !3019
  %conv41 = sext i32 %add to i64, !dbg !3017
  %call42 = call noalias i8* @av_calloc(i64 %conv41, i64 8), !dbg !3020
  %105 = bitcast i8* %call42 to %struct.FFTComplex*, !dbg !3020
  %106 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3021
  %fft_result = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %106, i32 0, i32 17, !dbg !3022
  store %struct.FFTComplex* %105, %struct.FFTComplex** %fft_result, align 8, !dbg !3023
  %107 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3024
  %cqt_len43 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %107, i32 0, i32 22, !dbg !3025
  %108 = load i32, i32* %cqt_len43, align 8, !dbg !3025
  %conv44 = sext i32 %108 to i64, !dbg !3024
  %call45 = call i8* @av_malloc_array(i64 %conv44, i64 8), !dbg !3026
  %109 = bitcast i8* %call45 to %struct.FFTComplex*, !dbg !3026
  %110 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3027
  %cqt_result = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %110, i32 0, i32 18, !dbg !3028
  store %struct.FFTComplex* %109, %struct.FFTComplex** %cqt_result, align 8, !dbg !3029
  %111 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3030
  %fft_ctx46 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %111, i32 0, i32 14, !dbg !3032
  %112 = load %struct.FFTContext*, %struct.FFTContext** %fft_ctx46, align 8, !dbg !3032
  %tobool47 = icmp ne %struct.FFTContext* %112, null, !dbg !3030
  br i1 %tobool47, label %lor.lhs.false, label %if.then56, !dbg !3033

lor.lhs.false:                                    ; preds = %cond.end
  %113 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3034
  %fft_data48 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %113, i32 0, i32 16, !dbg !3036
  %114 = load %struct.FFTComplex*, %struct.FFTComplex** %fft_data48, align 8, !dbg !3036
  %tobool49 = icmp ne %struct.FFTComplex* %114, null, !dbg !3034
  br i1 %tobool49, label %lor.lhs.false50, label %if.then56, !dbg !3037

lor.lhs.false50:                                  ; preds = %lor.lhs.false
  %115 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3038
  %fft_result51 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %115, i32 0, i32 17, !dbg !3040
  %116 = load %struct.FFTComplex*, %struct.FFTComplex** %fft_result51, align 8, !dbg !3040
  %tobool52 = icmp ne %struct.FFTComplex* %116, null, !dbg !3038
  br i1 %tobool52, label %lor.lhs.false53, label %if.then56, !dbg !3041

lor.lhs.false53:                                  ; preds = %lor.lhs.false50
  %117 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3042
  %cqt_result54 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %117, i32 0, i32 18, !dbg !3044
  %118 = load %struct.FFTComplex*, %struct.FFTComplex** %cqt_result54, align 8, !dbg !3044
  %tobool55 = icmp ne %struct.FFTComplex* %118, null, !dbg !3042
  br i1 %tobool55, label %if.end57, label %if.then56, !dbg !3045

if.then56:                                        ; preds = %lor.lhs.false53, %lor.lhs.false50, %lor.lhs.false, %cond.end
  store i32 -12, i32* %retval, align 4, !dbg !3046
  br label %return, !dbg !3046

if.end57:                                         ; preds = %lor.lhs.false53
  %119 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3047
  %fft_len58 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %119, i32 0, i32 21, !dbg !3048
  %120 = load i32, i32* %fft_len58, align 4, !dbg !3048
  %div = sdiv i32 %120, 2, !dbg !3049
  %121 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3050
  %remaining_fill_max = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %121, i32 0, i32 11, !dbg !3051
  store i32 %div, i32* %remaining_fill_max, align 8, !dbg !3052
  %122 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3053
  %attack = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %122, i32 0, i32 58, !dbg !3055
  %123 = load double, double* %attack, align 8, !dbg !3055
  %cmp59 = fcmp ogt double %123, 0.000000e+00, !dbg !3056
  br i1 %cmp59, label %if.then61, label %if.end115, !dbg !3057

if.then61:                                        ; preds = %if.end57
  call void @llvm.dbg.declare(metadata i32* %k, metadata !3058, metadata !820), !dbg !3060
  %124 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3061
  %remaining_fill_max62 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %124, i32 0, i32 11, !dbg !3062
  %125 = load i32, i32* %remaining_fill_max62, align 8, !dbg !3062
  %conv63 = sitofp i32 %125 to double, !dbg !3063
  %126 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink, align 8, !dbg !3064
  %sample_rate64 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %126, i32 0, i32 9, !dbg !3065
  %127 = load i32, i32* %sample_rate64, align 8, !dbg !3065
  %conv65 = sitofp i32 %127 to double, !dbg !3064
  %128 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3066
  %attack66 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %128, i32 0, i32 58, !dbg !3067
  %129 = load double, double* %attack66, align 8, !dbg !3067
  %mul67 = fmul double %conv65, %129, !dbg !3068
  %call68 = call double @ceil(double %mul67) #2, !dbg !3069
  %cmp69 = fcmp ogt double %conv63, %call68, !dbg !3070
  br i1 %cmp69, label %cond.true71, label %cond.false77, !dbg !3063

cond.true71:                                      ; preds = %if.then61
  %130 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink, align 8, !dbg !3071
  %sample_rate72 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %130, i32 0, i32 9, !dbg !3073
  %131 = load i32, i32* %sample_rate72, align 8, !dbg !3073
  %conv73 = sitofp i32 %131 to double, !dbg !3071
  %132 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3074
  %attack74 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %132, i32 0, i32 58, !dbg !3075
  %133 = load double, double* %attack74, align 8, !dbg !3075
  %mul75 = fmul double %conv73, %133, !dbg !3076
  %call76 = call double @ceil(double %mul75) #2, !dbg !3077
  br label %cond.end80, !dbg !3078

cond.false77:                                     ; preds = %if.then61
  %134 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3079
  %remaining_fill_max78 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %134, i32 0, i32 11, !dbg !3081
  %135 = load i32, i32* %remaining_fill_max78, align 8, !dbg !3081
  %conv79 = sitofp i32 %135 to double, !dbg !3082
  br label %cond.end80, !dbg !3083

cond.end80:                                       ; preds = %cond.false77, %cond.true71
  %cond81 = phi double [ %call76, %cond.true71 ], [ %conv79, %cond.false77 ], !dbg !3084
  %conv82 = fptosi double %cond81 to i32, !dbg !3086
  %136 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3087
  %remaining_fill_max83 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %136, i32 0, i32 11, !dbg !3088
  store i32 %conv82, i32* %remaining_fill_max83, align 8, !dbg !3089
  %137 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3090
  %remaining_fill_max84 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %137, i32 0, i32 11, !dbg !3091
  %138 = load i32, i32* %remaining_fill_max84, align 8, !dbg !3091
  %conv85 = sext i32 %138 to i64, !dbg !3090
  %call86 = call i8* @av_malloc_array(i64 %conv85, i64 4), !dbg !3092
  %139 = bitcast i8* %call86 to float*, !dbg !3092
  %140 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3093
  %attack_data = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %140, i32 0, i32 19, !dbg !3094
  store float* %139, float** %attack_data, align 8, !dbg !3095
  %141 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3096
  %attack_data87 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %141, i32 0, i32 19, !dbg !3098
  %142 = load float*, float** %attack_data87, align 8, !dbg !3098
  %tobool88 = icmp ne float* %142, null, !dbg !3096
  br i1 %tobool88, label %if.end90, label %if.then89, !dbg !3099

if.then89:                                        ; preds = %cond.end80
  store i32 -12, i32* %retval, align 4, !dbg !3100
  br label %return, !dbg !3100

if.end90:                                         ; preds = %cond.end80
  store i32 0, i32* %k, align 4, !dbg !3101
  br label %for.cond, !dbg !3103

for.cond:                                         ; preds = %for.inc, %if.end90
  %143 = load i32, i32* %k, align 4, !dbg !3104
  %144 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3107
  %remaining_fill_max91 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %144, i32 0, i32 11, !dbg !3108
  %145 = load i32, i32* %remaining_fill_max91, align 8, !dbg !3108
  %cmp92 = icmp slt i32 %143, %145, !dbg !3109
  br i1 %cmp92, label %for.body, label %for.end, !dbg !3110

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata double* %y, metadata !3111, metadata !820), !dbg !3113
  %146 = load i32, i32* %k, align 4, !dbg !3114
  %conv94 = sitofp i32 %146 to double, !dbg !3114
  %mul95 = fmul double 0x400921FB54442D18, %conv94, !dbg !3115
  %147 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink, align 8, !dbg !3116
  %sample_rate96 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %147, i32 0, i32 9, !dbg !3117
  %148 = load i32, i32* %sample_rate96, align 8, !dbg !3117
  %conv97 = sitofp i32 %148 to double, !dbg !3116
  %149 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3118
  %attack98 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %149, i32 0, i32 58, !dbg !3119
  %150 = load double, double* %attack98, align 8, !dbg !3119
  %mul99 = fmul double %conv97, %150, !dbg !3120
  %div100 = fdiv double %mul95, %mul99, !dbg !3121
  store double %div100, double* %y, align 8, !dbg !3113
  %151 = load double, double* %y, align 8, !dbg !3122
  %call101 = call double @cos(double %151) #8, !dbg !3123
  %mul102 = fmul double 4.873960e-01, %call101, !dbg !3124
  %add103 = fadd double 3.557680e-01, %mul102, !dbg !3125
  %152 = load double, double* %y, align 8, !dbg !3126
  %mul104 = fmul double 2.000000e+00, %152, !dbg !3127
  %call105 = call double @cos(double %mul104) #8, !dbg !3128
  %mul106 = fmul double 1.442320e-01, %call105, !dbg !3130
  %add107 = fadd double %add103, %mul106, !dbg !3131
  %153 = load double, double* %y, align 8, !dbg !3132
  %mul108 = fmul double 3.000000e+00, %153, !dbg !3133
  %call109 = call double @cos(double %mul108) #8, !dbg !3134
  %mul110 = fmul double 1.260400e-02, %call109, !dbg !3136
  %add111 = fadd double %add107, %mul110, !dbg !3137
  %conv112 = fptrunc double %add111 to float, !dbg !3138
  %154 = load i32, i32* %k, align 4, !dbg !3139
  %idxprom = sext i32 %154 to i64, !dbg !3140
  %155 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3140
  %attack_data113 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %155, i32 0, i32 19, !dbg !3141
  %156 = load float*, float** %attack_data113, align 8, !dbg !3141
  %arrayidx114 = getelementptr inbounds float, float* %156, i64 %idxprom, !dbg !3140
  store float %conv112, float* %arrayidx114, align 4, !dbg !3142
  br label %for.inc, !dbg !3143

for.inc:                                          ; preds = %for.body
  %157 = load i32, i32* %k, align 4, !dbg !3144
  %inc = add nsw i32 %157, 1, !dbg !3144
  store i32 %inc, i32* %k, align 4, !dbg !3144
  br label %for.cond, !dbg !3146, !llvm.loop !3147

for.end:                                          ; preds = %for.cond
  br label %if.end115, !dbg !3149

if.end115:                                        ; preds = %for.end, %if.end57
  %158 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3150
  %cqt_align = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %158, i32 0, i32 23, !dbg !3151
  store i32 1, i32* %cqt_align, align 4, !dbg !3152
  %159 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3153
  %cqt_calc = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %159, i32 0, i32 31, !dbg !3154
  store void (%struct.FFTComplex*, %struct.FFTComplex*, %struct.Coeffs*, i32, i32)* @cqt_calc, void (%struct.FFTComplex*, %struct.FFTComplex*, %struct.Coeffs*, i32, i32)** %cqt_calc, align 8, !dbg !3155
  %160 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3156
  %permute_coeffs = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %160, i32 0, i32 32, !dbg !3157
  store void (float*, i32)* null, void (float*, i32)** %permute_coeffs, align 8, !dbg !3158
  %161 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3159
  %draw_sono = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %161, i32 0, i32 35, !dbg !3160
  store void (%struct.AVFrame*, %struct.AVFrame*, i32, i32)* @draw_sono, void (%struct.AVFrame*, %struct.AVFrame*, i32, i32)** %draw_sono, align 8, !dbg !3161
  %162 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3162
  %format116 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %162, i32 0, i32 4, !dbg !3164
  %163 = load i32, i32* %format116, align 8, !dbg !3164
  %cmp117 = icmp eq i32 %163, 2, !dbg !3165
  br i1 %cmp117, label %if.then119, label %if.else, !dbg !3166

if.then119:                                       ; preds = %if.end115
  %164 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3167
  %draw_bar = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %164, i32 0, i32 33, !dbg !3169
  store void (%struct.AVFrame*, float*, float*, %union.ColorFloat*, i32, float)* @draw_bar_rgb, void (%struct.AVFrame*, float*, float*, %union.ColorFloat*, i32, float)** %draw_bar, align 8, !dbg !3170
  %165 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3171
  %draw_axis = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %165, i32 0, i32 34, !dbg !3172
  store void (%struct.AVFrame*, %struct.AVFrame*, %union.ColorFloat*, i32)* @draw_axis_rgb, void (%struct.AVFrame*, %struct.AVFrame*, %union.ColorFloat*, i32)** %draw_axis, align 8, !dbg !3173
  %166 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3174
  %update_sono = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %166, i32 0, i32 36, !dbg !3175
  store void (%struct.AVFrame*, %union.ColorFloat*, i32)* @update_sono_rgb, void (%struct.AVFrame*, %union.ColorFloat*, i32)** %update_sono, align 8, !dbg !3176
  br label %if.end123, !dbg !3177

if.else:                                          ; preds = %if.end115
  %167 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3178
  %draw_bar120 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %167, i32 0, i32 33, !dbg !3180
  store void (%struct.AVFrame*, float*, float*, %union.ColorFloat*, i32, float)* @draw_bar_yuv, void (%struct.AVFrame*, float*, float*, %union.ColorFloat*, i32, float)** %draw_bar120, align 8, !dbg !3181
  %168 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3182
  %draw_axis121 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %168, i32 0, i32 34, !dbg !3183
  store void (%struct.AVFrame*, %struct.AVFrame*, %union.ColorFloat*, i32)* @draw_axis_yuv, void (%struct.AVFrame*, %struct.AVFrame*, %union.ColorFloat*, i32)** %draw_axis121, align 8, !dbg !3184
  %169 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3185
  %update_sono122 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %169, i32 0, i32 36, !dbg !3186
  store void (%struct.AVFrame*, %union.ColorFloat*, i32)* @update_sono_yuv, void (%struct.AVFrame*, %union.ColorFloat*, i32)** %update_sono122, align 8, !dbg !3187
  br label %if.end123

if.end123:                                        ; preds = %if.else, %if.then119
  %170 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3188
  call void @ff_showcqt_init_x86(%struct.ShowCQTContext* %170), !dbg !3190
  %171 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3191
  %call124 = call i32 @init_cqt(%struct.ShowCQTContext* %171), !dbg !3193
  store i32 %call124, i32* %ret, align 4, !dbg !3194
  %cmp125 = icmp slt i32 %call124, 0, !dbg !3195
  br i1 %cmp125, label %if.then127, label %if.end128, !dbg !3196

if.then127:                                       ; preds = %if.end123
  %172 = load i32, i32* %ret, align 4, !dbg !3197
  store i32 %172, i32* %retval, align 4, !dbg !3198
  br label %return, !dbg !3198

if.end128:                                        ; preds = %if.end123
  %173 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3199
  %axis_h129 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %173, i32 0, i32 49, !dbg !3201
  %174 = load i32, i32* %axis_h129, align 4, !dbg !3201
  %tobool130 = icmp ne i32 %174, 0, !dbg !3199
  br i1 %tobool130, label %if.then131, label %if.end170, !dbg !3202

if.then131:                                       ; preds = %if.end128
  %175 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3203
  %axis = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %175, i32 0, i32 69, !dbg !3206
  %176 = load i32, i32* %axis, align 8, !dbg !3206
  %tobool132 = icmp ne i32 %176, 0, !dbg !3203
  br i1 %tobool132, label %if.else139, label %if.then133, !dbg !3207

if.then133:                                       ; preds = %if.then131
  %177 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3208
  %call134 = call i32 @init_axis_empty(%struct.ShowCQTContext* %177), !dbg !3211
  store i32 %call134, i32* %ret, align 4, !dbg !3212
  %cmp135 = icmp slt i32 %call134, 0, !dbg !3213
  br i1 %cmp135, label %if.then137, label %if.end138, !dbg !3214

if.then137:                                       ; preds = %if.then133
  %178 = load i32, i32* %ret, align 4, !dbg !3215
  store i32 %178, i32* %retval, align 4, !dbg !3216
  br label %return, !dbg !3216

if.end138:                                        ; preds = %if.then133
  br label %if.end169, !dbg !3217

if.else139:                                       ; preds = %if.then131
  %179 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3218
  %axisfile = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %179, i32 0, i32 68, !dbg !3221
  %180 = load i8*, i8** %axisfile, align 8, !dbg !3221
  %tobool140 = icmp ne i8* %180, null, !dbg !3218
  br i1 %tobool140, label %if.then141, label %if.else157, !dbg !3218

if.then141:                                       ; preds = %if.else139
  %181 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3222
  %call142 = call i32 @init_axis_from_file(%struct.ShowCQTContext* %181), !dbg !3225
  %cmp143 = icmp slt i32 %call142, 0, !dbg !3226
  br i1 %cmp143, label %if.then145, label %if.end156, !dbg !3227

if.then145:                                       ; preds = %if.then141
  %182 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !3228
  %183 = bitcast %struct.AVFilterContext* %182 to i8*, !dbg !3228
  call void (i8*, i32, i8*, ...) @av_log(i8* %183, i32 24, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.6, i32 0, i32 0)), !dbg !3230
  %184 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3231
  %call146 = call i32 @init_axis_from_font(%struct.ShowCQTContext* %184), !dbg !3233
  %cmp147 = icmp slt i32 %call146, 0, !dbg !3234
  br i1 %cmp147, label %if.then149, label %if.end155, !dbg !3235

if.then149:                                       ; preds = %if.then145
  %185 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !3236
  %186 = bitcast %struct.AVFilterContext* %185 to i8*, !dbg !3236
  call void (i8*, i32, i8*, ...) @av_log(i8* %186, i32 24, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.7, i32 0, i32 0)), !dbg !3238
  %187 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3239
  %call150 = call i32 @init_axis_empty(%struct.ShowCQTContext* %187), !dbg !3241
  store i32 %call150, i32* %ret, align 4, !dbg !3242
  %cmp151 = icmp slt i32 %call150, 0, !dbg !3243
  br i1 %cmp151, label %if.then153, label %if.end154, !dbg !3244

if.then153:                                       ; preds = %if.then149
  %188 = load i32, i32* %ret, align 4, !dbg !3245
  store i32 %188, i32* %retval, align 4, !dbg !3246
  br label %return, !dbg !3246

if.end154:                                        ; preds = %if.then149
  br label %if.end155, !dbg !3247

if.end155:                                        ; preds = %if.end154, %if.then145
  br label %if.end156, !dbg !3248

if.end156:                                        ; preds = %if.end155, %if.then141
  br label %if.end168, !dbg !3249

if.else157:                                       ; preds = %if.else139
  %189 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3250
  %call158 = call i32 @init_axis_from_font(%struct.ShowCQTContext* %189), !dbg !3253
  %cmp159 = icmp slt i32 %call158, 0, !dbg !3254
  br i1 %cmp159, label %if.then161, label %if.end167, !dbg !3255

if.then161:                                       ; preds = %if.else157
  %190 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !3256
  %191 = bitcast %struct.AVFilterContext* %190 to i8*, !dbg !3256
  call void (i8*, i32, i8*, ...) @av_log(i8* %191, i32 24, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.7, i32 0, i32 0)), !dbg !3258
  %192 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3259
  %call162 = call i32 @init_axis_empty(%struct.ShowCQTContext* %192), !dbg !3261
  store i32 %call162, i32* %ret, align 4, !dbg !3262
  %cmp163 = icmp slt i32 %call162, 0, !dbg !3263
  br i1 %cmp163, label %if.then165, label %if.end166, !dbg !3264

if.then165:                                       ; preds = %if.then161
  %193 = load i32, i32* %ret, align 4, !dbg !3265
  store i32 %193, i32* %retval, align 4, !dbg !3266
  br label %return, !dbg !3266

if.end166:                                        ; preds = %if.then161
  br label %if.end167, !dbg !3267

if.end167:                                        ; preds = %if.end166, %if.else157
  br label %if.end168

if.end168:                                        ; preds = %if.end167, %if.end156
  br label %if.end169

if.end169:                                        ; preds = %if.end168, %if.end138
  br label %if.end170, !dbg !3268

if.end170:                                        ; preds = %if.end169, %if.end128
  %194 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3269
  %sono_h171 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %194, i32 0, i32 50, !dbg !3271
  %195 = load i32, i32* %sono_h171, align 8, !dbg !3271
  %tobool172 = icmp ne i32 %195, 0, !dbg !3269
  br i1 %tobool172, label %if.then173, label %if.end189, !dbg !3272

if.then173:                                       ; preds = %if.end170
  %196 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !3273
  %format174 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %196, i32 0, i32 10, !dbg !3275
  %197 = load i32, i32* %format174, align 4, !dbg !3275
  %cmp175 = icmp eq i32 %197, 0, !dbg !3276
  br i1 %cmp175, label %cond.true177, label %cond.false178, !dbg !3277

cond.true177:                                     ; preds = %if.then173
  br label %cond.end180, !dbg !3278

cond.false178:                                    ; preds = %if.then173
  %198 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !3280
  %format179 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %198, i32 0, i32 10, !dbg !3281
  %199 = load i32, i32* %format179, align 4, !dbg !3281
  br label %cond.end180, !dbg !3282

cond.end180:                                      ; preds = %cond.false178, %cond.true177
  %cond181 = phi i32 [ 4, %cond.true177 ], [ %199, %cond.false178 ], !dbg !3284
  %200 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3286
  %width182 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %200, i32 0, i32 45, !dbg !3287
  %201 = load i32, i32* %width182, align 8, !dbg !3287
  %202 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3288
  %sono_h183 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %202, i32 0, i32 50, !dbg !3289
  %203 = load i32, i32* %sono_h183, align 8, !dbg !3289
  %call184 = call %struct.AVFrame* @alloc_frame_empty(i32 %cond181, i32 %201, i32 %203), !dbg !3290
  %204 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3291
  %sono_frame = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %204, i32 0, i32 3, !dbg !3292
  store %struct.AVFrame* %call184, %struct.AVFrame** %sono_frame, align 8, !dbg !3293
  %205 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3294
  %sono_frame185 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %205, i32 0, i32 3, !dbg !3296
  %206 = load %struct.AVFrame*, %struct.AVFrame** %sono_frame185, align 8, !dbg !3296
  %tobool186 = icmp ne %struct.AVFrame* %206, null, !dbg !3294
  br i1 %tobool186, label %if.end188, label %if.then187, !dbg !3297

if.then187:                                       ; preds = %cond.end180
  store i32 -12, i32* %retval, align 4, !dbg !3298
  br label %return, !dbg !3298

if.end188:                                        ; preds = %cond.end180
  br label %if.end189, !dbg !3299

if.end189:                                        ; preds = %if.end188, %if.end170
  %207 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3300
  %cqt_len190 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %207, i32 0, i32 22, !dbg !3301
  %208 = load i32, i32* %cqt_len190, align 8, !dbg !3301
  %conv191 = sext i32 %208 to i64, !dbg !3300
  %call192 = call i8* @av_malloc_array(i64 %conv191, i64 4), !dbg !3302
  %209 = bitcast i8* %call192 to float*, !dbg !3302
  %210 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3303
  %h_buf = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %210, i32 0, i32 25, !dbg !3304
  store float* %209, float** %h_buf, align 8, !dbg !3305
  %211 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3306
  %width193 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %211, i32 0, i32 45, !dbg !3307
  %212 = load i32, i32* %width193, align 8, !dbg !3307
  %conv194 = sext i32 %212 to i64, !dbg !3306
  %call195 = call i8* @av_malloc_array(i64 %conv194, i64 4), !dbg !3308
  %213 = bitcast i8* %call195 to float*, !dbg !3308
  %214 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3309
  %rcp_h_buf = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %214, i32 0, i32 26, !dbg !3310
  store float* %213, float** %rcp_h_buf, align 8, !dbg !3311
  %215 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3312
  %width196 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %215, i32 0, i32 45, !dbg !3313
  %216 = load i32, i32* %width196, align 8, !dbg !3313
  %conv197 = sext i32 %216 to i64, !dbg !3312
  %call198 = call i8* @av_malloc_array(i64 %conv197, i64 12), !dbg !3314
  %217 = bitcast i8* %call198 to %union.ColorFloat*, !dbg !3314
  %218 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3315
  %c_buf = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %218, i32 0, i32 24, !dbg !3316
  store %union.ColorFloat* %217, %union.ColorFloat** %c_buf, align 8, !dbg !3317
  %219 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3318
  %h_buf199 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %219, i32 0, i32 25, !dbg !3320
  %220 = load float*, float** %h_buf199, align 8, !dbg !3320
  %tobool200 = icmp ne float* %220, null, !dbg !3318
  br i1 %tobool200, label %lor.lhs.false201, label %if.then207, !dbg !3321

lor.lhs.false201:                                 ; preds = %if.end189
  %221 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3322
  %rcp_h_buf202 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %221, i32 0, i32 26, !dbg !3324
  %222 = load float*, float** %rcp_h_buf202, align 8, !dbg !3324
  %tobool203 = icmp ne float* %222, null, !dbg !3322
  br i1 %tobool203, label %lor.lhs.false204, label %if.then207, !dbg !3325

lor.lhs.false204:                                 ; preds = %lor.lhs.false201
  %223 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3326
  %c_buf205 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %223, i32 0, i32 24, !dbg !3328
  %224 = load %union.ColorFloat*, %union.ColorFloat** %c_buf205, align 8, !dbg !3328
  %tobool206 = icmp ne %union.ColorFloat* %224, null, !dbg !3326
  br i1 %tobool206, label %if.end208, label %if.then207, !dbg !3329

if.then207:                                       ; preds = %lor.lhs.false204, %lor.lhs.false201, %if.end189
  store i32 -12, i32* %retval, align 4, !dbg !3330
  br label %return, !dbg !3330

if.end208:                                        ; preds = %lor.lhs.false204
  %225 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3331
  %sono_count = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %225, i32 0, i32 6, !dbg !3332
  store i32 0, i32* %sono_count, align 8, !dbg !3333
  %226 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3334
  %next_pts = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %226, i32 0, i32 12, !dbg !3335
  store i64 0, i64* %next_pts, align 8, !dbg !3336
  %227 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3337
  %sono_idx = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %227, i32 0, i32 5, !dbg !3338
  store i32 0, i32* %sono_idx, align 4, !dbg !3339
  %228 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3340
  %remaining_fill_max209 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %228, i32 0, i32 11, !dbg !3341
  %229 = load i32, i32* %remaining_fill_max209, align 8, !dbg !3341
  %230 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3342
  %remaining_fill = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %230, i32 0, i32 10, !dbg !3343
  store i32 %229, i32* %remaining_fill, align 4, !dbg !3344
  %231 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3345
  %remaining_frac = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %231, i32 0, i32 9, !dbg !3346
  store i32 0, i32* %remaining_frac, align 8, !dbg !3347
  %232 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3348
  %step_frac = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %232, i32 0, i32 8, !dbg !3349
  %233 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink, align 8, !dbg !3350
  %sample_rate211 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %233, i32 0, i32 9, !dbg !3351
  %234 = load i32, i32* %sample_rate211, align 8, !dbg !3351
  %235 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3352
  %count = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %235, i32 0, i32 63, !dbg !3353
  %236 = load i32, i32* %count, align 8, !dbg !3353
  %call212 = call i64 @av_make_q(i32 %234, i32 %236), !dbg !3354
  %237 = bitcast %struct.AVRational* %agg.tmp210 to i64*, !dbg !3354
  store i64 %call212, i64* %237, align 4, !dbg !3354
  %238 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3355
  %rate213 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %238, i32 0, i32 47, !dbg !3356
  %239 = bitcast %struct.AVRational* %agg.tmp210 to i64*, !dbg !3357
  %240 = load i64, i64* %239, align 4, !dbg !3357
  %241 = bitcast %struct.AVRational* %rate213 to i64*, !dbg !3357
  %242 = load i64, i64* %241, align 8, !dbg !3357
  %call214 = call i64 @av_div_q(i64 %240, i64 %242) #2, !dbg !3358
  %243 = bitcast %struct.AVRational* %coerce215 to i64*, !dbg !3357
  store i64 %call214, i64* %243, align 4, !dbg !3357
  %244 = bitcast %struct.AVRational* %step_frac to i8*, !dbg !3357
  %245 = bitcast %struct.AVRational* %coerce215 to i8*, !dbg !3357
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %244, i8* %245, i64 8, i32 4, i1 false), !dbg !3359
  %246 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3360
  %step_frac216 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %246, i32 0, i32 8, !dbg !3361
  %num217 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %step_frac216, i32 0, i32 0, !dbg !3362
  %247 = load i32, i32* %num217, align 8, !dbg !3362
  %248 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3363
  %step_frac218 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %248, i32 0, i32 8, !dbg !3364
  %den219 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %step_frac218, i32 0, i32 1, !dbg !3365
  %249 = load i32, i32* %den219, align 4, !dbg !3365
  %div220 = sdiv i32 %247, %249, !dbg !3366
  %250 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3367
  %step = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %250, i32 0, i32 7, !dbg !3368
  store i32 %div220, i32* %step, align 4, !dbg !3369
  %251 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3370
  %step_frac221 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %251, i32 0, i32 8, !dbg !3371
  %den222 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %step_frac221, i32 0, i32 1, !dbg !3372
  %252 = load i32, i32* %den222, align 4, !dbg !3372
  %253 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3373
  %step_frac223 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %253, i32 0, i32 8, !dbg !3374
  %num224 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %step_frac223, i32 0, i32 0, !dbg !3375
  %254 = load i32, i32* %num224, align 8, !dbg !3376
  %rem = srem i32 %254, %252, !dbg !3376
  store i32 %rem, i32* %num224, align 8, !dbg !3376
  %255 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3377
  %step_frac225 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %255, i32 0, i32 8, !dbg !3379
  %num226 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %step_frac225, i32 0, i32 0, !dbg !3380
  %256 = load i32, i32* %num226, align 8, !dbg !3380
  %tobool227 = icmp ne i32 %256, 0, !dbg !3377
  br i1 %tobool227, label %if.then228, label %if.else235, !dbg !3381

if.then228:                                       ; preds = %if.end208
  %257 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !3382
  %258 = bitcast %struct.AVFilterContext* %257 to i8*, !dbg !3382
  %259 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink, align 8, !dbg !3384
  %sample_rate229 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %259, i32 0, i32 9, !dbg !3385
  %260 = load i32, i32* %sample_rate229, align 8, !dbg !3385
  %261 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3386
  %step230 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %261, i32 0, i32 7, !dbg !3387
  %262 = load i32, i32* %step230, align 4, !dbg !3387
  %263 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3388
  %step_frac231 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %263, i32 0, i32 8, !dbg !3389
  %num232 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %step_frac231, i32 0, i32 0, !dbg !3390
  %264 = load i32, i32* %num232, align 8, !dbg !3390
  %265 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3391
  %step_frac233 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %265, i32 0, i32 8, !dbg !3392
  %den234 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %step_frac233, i32 0, i32 1, !dbg !3393
  %266 = load i32, i32* %den234, align 4, !dbg !3393
  call void (i8*, i32, i8*, ...) @av_log(i8* %258, i32 32, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.8, i32 0, i32 0), i32 %260, i32 %262, i32 %264, i32 %266), !dbg !3394
  %267 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !3395
  %268 = bitcast %struct.AVFilterContext* %267 to i8*, !dbg !3395
  call void (i8*, i32, i8*, ...) @av_log(i8* %268, i32 24, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i32 0, i32 0)), !dbg !3396
  br label %if.end238, !dbg !3397

if.else235:                                       ; preds = %if.end208
  %269 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !3398
  %270 = bitcast %struct.AVFilterContext* %269 to i8*, !dbg !3398
  %271 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink, align 8, !dbg !3400
  %sample_rate236 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %271, i32 0, i32 9, !dbg !3401
  %272 = load i32, i32* %sample_rate236, align 8, !dbg !3401
  %273 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s, align 8, !dbg !3402
  %step237 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %273, i32 0, i32 7, !dbg !3403
  %274 = load i32, i32* %step237, align 4, !dbg !3403
  call void (i8*, i32, i8*, ...) @av_log(i8* %270, i32 32, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.10, i32 0, i32 0), i32 %272, i32 %274), !dbg !3404
  br label %if.end238

if.end238:                                        ; preds = %if.else235, %if.then228
  store i32 0, i32* %retval, align 4, !dbg !3405
  br label %return, !dbg !3405

return:                                           ; preds = %if.end238, %if.then207, %if.then187, %if.then165, %if.then153, %if.then137, %if.then127, %if.then89, %if.then56, %if.then18, %if.then
  %275 = load i32, i32* %retval, align 4, !dbg !3406
  ret i32 %275, !dbg !3406
}

declare i32 @ff_request_frame(%struct.AVFilterLink*) #4

; Function Attrs: nounwind uwtable
define internal void @common_uninit(%struct.ShowCQTContext* %s) #1 !dbg !3407 {
entry:
  %s.addr = alloca %struct.ShowCQTContext*, align 8
  %k = alloca i32, align 4
  %level = alloca i32, align 4
  %plot_time = alloca i64, align 8
  store %struct.ShowCQTContext* %s, %struct.ShowCQTContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShowCQTContext** %s.addr, metadata !3408, metadata !820), !dbg !3409
  call void @llvm.dbg.declare(metadata i32* %k, metadata !3410, metadata !820), !dbg !3411
  call void @llvm.dbg.declare(metadata i32* %level, metadata !3412, metadata !820), !dbg !3413
  store i32 48, i32* %level, align 4, !dbg !3413
  call void @llvm.dbg.declare(metadata i64* %plot_time, metadata !3414, metadata !820), !dbg !3415
  %0 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3416
  %fft_time = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %0, i32 0, i32 37, !dbg !3418
  %1 = load i64, i64* %fft_time, align 8, !dbg !3418
  %tobool = icmp ne i64 %1, 0, !dbg !3416
  br i1 %tobool, label %if.then, label %if.end, !dbg !3419

if.then:                                          ; preds = %entry
  %2 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3420
  %ctx = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %2, i32 0, i32 1, !dbg !3421
  %3 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !3421
  %4 = bitcast %struct.AVFilterContext* %3 to i8*, !dbg !3420
  %5 = load i32, i32* %level, align 4, !dbg !3422
  %6 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3423
  %fft_time1 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %6, i32 0, i32 37, !dbg !3424
  %7 = load i64, i64* %fft_time1, align 8, !dbg !3424
  %conv = sitofp i64 %7 to double, !dbg !3423
  %mul = fmul double %conv, 1.000000e-06, !dbg !3425
  call void (i8*, i32, i8*, ...) @av_log(i8* %4, i32 %5, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i32 0, i32 0), double %mul), !dbg !3426
  br label %if.end, !dbg !3426

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3427
  %cqt_time = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %8, i32 0, i32 38, !dbg !3429
  %9 = load i64, i64* %cqt_time, align 8, !dbg !3429
  %tobool2 = icmp ne i64 %9, 0, !dbg !3427
  br i1 %tobool2, label %if.then3, label %if.end8, !dbg !3430

if.then3:                                         ; preds = %if.end
  %10 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3431
  %ctx4 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %10, i32 0, i32 1, !dbg !3432
  %11 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx4, align 8, !dbg !3432
  %12 = bitcast %struct.AVFilterContext* %11 to i8*, !dbg !3431
  %13 = load i32, i32* %level, align 4, !dbg !3433
  %14 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3434
  %cqt_time5 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %14, i32 0, i32 38, !dbg !3435
  %15 = load i64, i64* %cqt_time5, align 8, !dbg !3435
  %conv6 = sitofp i64 %15 to double, !dbg !3434
  %mul7 = fmul double %conv6, 1.000000e-06, !dbg !3436
  call void (i8*, i32, i8*, ...) @av_log(i8* %12, i32 %13, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12, i32 0, i32 0), double %mul7), !dbg !3437
  br label %if.end8, !dbg !3437

if.end8:                                          ; preds = %if.then3, %if.end
  %16 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3438
  %process_cqt_time = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %16, i32 0, i32 39, !dbg !3440
  %17 = load i64, i64* %process_cqt_time, align 8, !dbg !3440
  %tobool9 = icmp ne i64 %17, 0, !dbg !3438
  br i1 %tobool9, label %if.then10, label %if.end15, !dbg !3441

if.then10:                                        ; preds = %if.end8
  %18 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3442
  %ctx11 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %18, i32 0, i32 1, !dbg !3443
  %19 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx11, align 8, !dbg !3443
  %20 = bitcast %struct.AVFilterContext* %19 to i8*, !dbg !3442
  %21 = load i32, i32* %level, align 4, !dbg !3444
  %22 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3445
  %process_cqt_time12 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %22, i32 0, i32 39, !dbg !3446
  %23 = load i64, i64* %process_cqt_time12, align 8, !dbg !3446
  %conv13 = sitofp i64 %23 to double, !dbg !3445
  %mul14 = fmul double %conv13, 1.000000e-06, !dbg !3447
  call void (i8*, i32, i8*, ...) @av_log(i8* %20, i32 %21, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.13, i32 0, i32 0), double %mul14), !dbg !3448
  br label %if.end15, !dbg !3448

if.end15:                                         ; preds = %if.then10, %if.end8
  %24 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3449
  %update_sono_time = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %24, i32 0, i32 40, !dbg !3451
  %25 = load i64, i64* %update_sono_time, align 8, !dbg !3451
  %tobool16 = icmp ne i64 %25, 0, !dbg !3449
  br i1 %tobool16, label %if.then17, label %if.end22, !dbg !3452

if.then17:                                        ; preds = %if.end15
  %26 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3453
  %ctx18 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %26, i32 0, i32 1, !dbg !3454
  %27 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx18, align 8, !dbg !3454
  %28 = bitcast %struct.AVFilterContext* %27 to i8*, !dbg !3453
  %29 = load i32, i32* %level, align 4, !dbg !3455
  %30 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3456
  %update_sono_time19 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %30, i32 0, i32 40, !dbg !3457
  %31 = load i64, i64* %update_sono_time19, align 8, !dbg !3457
  %conv20 = sitofp i64 %31 to double, !dbg !3456
  %mul21 = fmul double %conv20, 1.000000e-06, !dbg !3458
  call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 %29, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i32 0, i32 0), double %mul21), !dbg !3459
  br label %if.end22, !dbg !3459

if.end22:                                         ; preds = %if.then17, %if.end15
  %32 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3460
  %alloc_time = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %32, i32 0, i32 41, !dbg !3462
  %33 = load i64, i64* %alloc_time, align 8, !dbg !3462
  %tobool23 = icmp ne i64 %33, 0, !dbg !3460
  br i1 %tobool23, label %if.then24, label %if.end29, !dbg !3463

if.then24:                                        ; preds = %if.end22
  %34 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3464
  %ctx25 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %34, i32 0, i32 1, !dbg !3465
  %35 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx25, align 8, !dbg !3465
  %36 = bitcast %struct.AVFilterContext* %35 to i8*, !dbg !3464
  %37 = load i32, i32* %level, align 4, !dbg !3466
  %38 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3467
  %alloc_time26 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %38, i32 0, i32 41, !dbg !3468
  %39 = load i64, i64* %alloc_time26, align 8, !dbg !3468
  %conv27 = sitofp i64 %39 to double, !dbg !3467
  %mul28 = fmul double %conv27, 1.000000e-06, !dbg !3469
  call void (i8*, i32, i8*, ...) @av_log(i8* %36, i32 %37, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15, i32 0, i32 0), double %mul28), !dbg !3470
  br label %if.end29, !dbg !3470

if.end29:                                         ; preds = %if.then24, %if.end22
  %40 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3471
  %bar_time = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %40, i32 0, i32 42, !dbg !3473
  %41 = load i64, i64* %bar_time, align 8, !dbg !3473
  %tobool30 = icmp ne i64 %41, 0, !dbg !3471
  br i1 %tobool30, label %if.then31, label %if.end36, !dbg !3474

if.then31:                                        ; preds = %if.end29
  %42 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3475
  %ctx32 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %42, i32 0, i32 1, !dbg !3476
  %43 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx32, align 8, !dbg !3476
  %44 = bitcast %struct.AVFilterContext* %43 to i8*, !dbg !3475
  %45 = load i32, i32* %level, align 4, !dbg !3477
  %46 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3478
  %bar_time33 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %46, i32 0, i32 42, !dbg !3479
  %47 = load i64, i64* %bar_time33, align 8, !dbg !3479
  %conv34 = sitofp i64 %47 to double, !dbg !3478
  %mul35 = fmul double %conv34, 1.000000e-06, !dbg !3480
  call void (i8*, i32, i8*, ...) @av_log(i8* %44, i32 %45, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.16, i32 0, i32 0), double %mul35), !dbg !3481
  br label %if.end36, !dbg !3481

if.end36:                                         ; preds = %if.then31, %if.end29
  %48 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3482
  %axis_time = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %48, i32 0, i32 43, !dbg !3484
  %49 = load i64, i64* %axis_time, align 8, !dbg !3484
  %tobool37 = icmp ne i64 %49, 0, !dbg !3482
  br i1 %tobool37, label %if.then38, label %if.end43, !dbg !3485

if.then38:                                        ; preds = %if.end36
  %50 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3486
  %ctx39 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %50, i32 0, i32 1, !dbg !3487
  %51 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx39, align 8, !dbg !3487
  %52 = bitcast %struct.AVFilterContext* %51 to i8*, !dbg !3486
  %53 = load i32, i32* %level, align 4, !dbg !3488
  %54 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3489
  %axis_time40 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %54, i32 0, i32 43, !dbg !3490
  %55 = load i64, i64* %axis_time40, align 8, !dbg !3490
  %conv41 = sitofp i64 %55 to double, !dbg !3489
  %mul42 = fmul double %conv41, 1.000000e-06, !dbg !3491
  call void (i8*, i32, i8*, ...) @av_log(i8* %52, i32 %53, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17, i32 0, i32 0), double %mul42), !dbg !3492
  br label %if.end43, !dbg !3492

if.end43:                                         ; preds = %if.then38, %if.end36
  %56 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3493
  %sono_time = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %56, i32 0, i32 44, !dbg !3495
  %57 = load i64, i64* %sono_time, align 8, !dbg !3495
  %tobool44 = icmp ne i64 %57, 0, !dbg !3493
  br i1 %tobool44, label %if.then45, label %if.end50, !dbg !3496

if.then45:                                        ; preds = %if.end43
  %58 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3497
  %ctx46 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %58, i32 0, i32 1, !dbg !3498
  %59 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx46, align 8, !dbg !3498
  %60 = bitcast %struct.AVFilterContext* %59 to i8*, !dbg !3497
  %61 = load i32, i32* %level, align 4, !dbg !3499
  %62 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3500
  %sono_time47 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %62, i32 0, i32 44, !dbg !3501
  %63 = load i64, i64* %sono_time47, align 8, !dbg !3501
  %conv48 = sitofp i64 %63 to double, !dbg !3500
  %mul49 = fmul double %conv48, 1.000000e-06, !dbg !3502
  call void (i8*, i32, i8*, ...) @av_log(i8* %60, i32 %61, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.18, i32 0, i32 0), double %mul49), !dbg !3503
  br label %if.end50, !dbg !3503

if.end50:                                         ; preds = %if.then45, %if.end43
  %64 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3504
  %fft_time51 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %64, i32 0, i32 37, !dbg !3505
  %65 = load i64, i64* %fft_time51, align 8, !dbg !3505
  %66 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3506
  %cqt_time52 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %66, i32 0, i32 38, !dbg !3507
  %67 = load i64, i64* %cqt_time52, align 8, !dbg !3507
  %add = add nsw i64 %65, %67, !dbg !3508
  %68 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3509
  %process_cqt_time53 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %68, i32 0, i32 39, !dbg !3510
  %69 = load i64, i64* %process_cqt_time53, align 8, !dbg !3510
  %add54 = add nsw i64 %add, %69, !dbg !3511
  %70 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3512
  %update_sono_time55 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %70, i32 0, i32 40, !dbg !3513
  %71 = load i64, i64* %update_sono_time55, align 8, !dbg !3513
  %add56 = add nsw i64 %add54, %71, !dbg !3514
  %72 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3515
  %alloc_time57 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %72, i32 0, i32 41, !dbg !3516
  %73 = load i64, i64* %alloc_time57, align 8, !dbg !3516
  %add58 = add nsw i64 %add56, %73, !dbg !3517
  %74 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3518
  %bar_time59 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %74, i32 0, i32 42, !dbg !3519
  %75 = load i64, i64* %bar_time59, align 8, !dbg !3519
  %add60 = add nsw i64 %add58, %75, !dbg !3520
  %76 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3521
  %axis_time61 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %76, i32 0, i32 43, !dbg !3522
  %77 = load i64, i64* %axis_time61, align 8, !dbg !3522
  %add62 = add nsw i64 %add60, %77, !dbg !3523
  %78 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3524
  %sono_time63 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %78, i32 0, i32 44, !dbg !3525
  %79 = load i64, i64* %sono_time63, align 8, !dbg !3525
  %add64 = add nsw i64 %add62, %79, !dbg !3526
  store i64 %add64, i64* %plot_time, align 8, !dbg !3527
  %80 = load i64, i64* %plot_time, align 8, !dbg !3528
  %tobool65 = icmp ne i64 %80, 0, !dbg !3528
  br i1 %tobool65, label %if.then66, label %if.end70, !dbg !3530

if.then66:                                        ; preds = %if.end50
  %81 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3531
  %ctx67 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %81, i32 0, i32 1, !dbg !3532
  %82 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx67, align 8, !dbg !3532
  %83 = bitcast %struct.AVFilterContext* %82 to i8*, !dbg !3531
  %84 = load i32, i32* %level, align 4, !dbg !3533
  %85 = load i64, i64* %plot_time, align 8, !dbg !3534
  %conv68 = sitofp i64 %85 to double, !dbg !3534
  %mul69 = fmul double %conv68, 1.000000e-06, !dbg !3535
  call void (i8*, i32, i8*, ...) @av_log(i8* %83, i32 %84, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.19, i32 0, i32 0), double %mul69), !dbg !3536
  br label %if.end70, !dbg !3536

if.end70:                                         ; preds = %if.then66, %if.end50
  %86 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3537
  %sono_time71 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %86, i32 0, i32 44, !dbg !3538
  store i64 0, i64* %sono_time71, align 8, !dbg !3539
  %87 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3540
  %axis_time72 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %87, i32 0, i32 43, !dbg !3541
  store i64 0, i64* %axis_time72, align 8, !dbg !3542
  %88 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3543
  %bar_time73 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %88, i32 0, i32 42, !dbg !3544
  store i64 0, i64* %bar_time73, align 8, !dbg !3545
  %89 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3546
  %alloc_time74 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %89, i32 0, i32 41, !dbg !3547
  store i64 0, i64* %alloc_time74, align 8, !dbg !3548
  %90 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3549
  %update_sono_time75 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %90, i32 0, i32 40, !dbg !3550
  store i64 0, i64* %update_sono_time75, align 8, !dbg !3551
  %91 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3552
  %process_cqt_time76 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %91, i32 0, i32 39, !dbg !3553
  store i64 0, i64* %process_cqt_time76, align 8, !dbg !3554
  %92 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3555
  %cqt_time77 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %92, i32 0, i32 38, !dbg !3556
  store i64 0, i64* %cqt_time77, align 8, !dbg !3557
  %93 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3558
  %fft_time78 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %93, i32 0, i32 37, !dbg !3559
  store i64 0, i64* %fft_time78, align 8, !dbg !3560
  %94 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3561
  %axis_frame = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %94, i32 0, i32 2, !dbg !3563
  %95 = load %struct.AVFrame*, %struct.AVFrame** %axis_frame, align 8, !dbg !3563
  %tobool79 = icmp ne %struct.AVFrame* %95, null, !dbg !3561
  br i1 %tobool79, label %land.lhs.true, label %if.end88, !dbg !3564

land.lhs.true:                                    ; preds = %if.end70
  %96 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3565
  %axis_frame80 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %96, i32 0, i32 2, !dbg !3567
  %97 = load %struct.AVFrame*, %struct.AVFrame** %axis_frame80, align 8, !dbg !3567
  %buf = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %97, i32 0, i32 25, !dbg !3568
  %arrayidx = getelementptr inbounds [8 x %struct.AVBufferRef*], [8 x %struct.AVBufferRef*]* %buf, i64 0, i64 0, !dbg !3565
  %98 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx, align 8, !dbg !3565
  %tobool81 = icmp ne %struct.AVBufferRef* %98, null, !dbg !3565
  br i1 %tobool81, label %if.end88, label %if.then82, !dbg !3569

if.then82:                                        ; preds = %land.lhs.true
  %99 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3570
  %axis_frame83 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %99, i32 0, i32 2, !dbg !3572
  %100 = load %struct.AVFrame*, %struct.AVFrame** %axis_frame83, align 8, !dbg !3572
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %100, i32 0, i32 0, !dbg !3573
  %arraydecay = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i32 0, i32 0, !dbg !3570
  %101 = bitcast i8** %arraydecay to i8*, !dbg !3570
  call void @av_freep(i8* %101), !dbg !3574
  store i32 0, i32* %k, align 4, !dbg !3575
  br label %for.cond, !dbg !3577

for.cond:                                         ; preds = %for.inc, %if.then82
  %102 = load i32, i32* %k, align 4, !dbg !3578
  %cmp = icmp slt i32 %102, 4, !dbg !3581
  br i1 %cmp, label %for.body, label %for.end, !dbg !3582

for.body:                                         ; preds = %for.cond
  %103 = load i32, i32* %k, align 4, !dbg !3583
  %idxprom = sext i32 %103 to i64, !dbg !3584
  %104 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3584
  %axis_frame85 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %104, i32 0, i32 2, !dbg !3585
  %105 = load %struct.AVFrame*, %struct.AVFrame** %axis_frame85, align 8, !dbg !3585
  %data86 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %105, i32 0, i32 0, !dbg !3586
  %arrayidx87 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data86, i64 0, i64 %idxprom, !dbg !3584
  store i8* null, i8** %arrayidx87, align 8, !dbg !3587
  br label %for.inc, !dbg !3584

for.inc:                                          ; preds = %for.body
  %106 = load i32, i32* %k, align 4, !dbg !3588
  %inc = add nsw i32 %106, 1, !dbg !3588
  store i32 %inc, i32* %k, align 4, !dbg !3588
  br label %for.cond, !dbg !3590, !llvm.loop !3591

for.end:                                          ; preds = %for.cond
  br label %if.end88, !dbg !3593

if.end88:                                         ; preds = %for.end, %land.lhs.true, %if.end70
  %107 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3594
  %axis_frame89 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %107, i32 0, i32 2, !dbg !3595
  call void @av_frame_free(%struct.AVFrame** %axis_frame89), !dbg !3596
  %108 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3597
  %sono_frame = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %108, i32 0, i32 3, !dbg !3598
  call void @av_frame_free(%struct.AVFrame** %sono_frame), !dbg !3599
  %109 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3600
  %fft_ctx = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %109, i32 0, i32 14, !dbg !3601
  %110 = load %struct.FFTContext*, %struct.FFTContext** %fft_ctx, align 8, !dbg !3601
  call void @av_fft_end(%struct.FFTContext* %110), !dbg !3602
  %111 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3603
  %fft_ctx90 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %111, i32 0, i32 14, !dbg !3604
  store %struct.FFTContext* null, %struct.FFTContext** %fft_ctx90, align 8, !dbg !3605
  %112 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3606
  %coeffs = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %112, i32 0, i32 15, !dbg !3608
  %113 = load %struct.Coeffs*, %struct.Coeffs** %coeffs, align 8, !dbg !3608
  %tobool91 = icmp ne %struct.Coeffs* %113, null, !dbg !3606
  br i1 %tobool91, label %if.then92, label %if.end103, !dbg !3609

if.then92:                                        ; preds = %if.end88
  store i32 0, i32* %k, align 4, !dbg !3610
  br label %for.cond93, !dbg !3612

for.cond93:                                       ; preds = %for.inc100, %if.then92
  %114 = load i32, i32* %k, align 4, !dbg !3613
  %115 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3616
  %cqt_len = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %115, i32 0, i32 22, !dbg !3617
  %116 = load i32, i32* %cqt_len, align 8, !dbg !3617
  %cmp94 = icmp slt i32 %114, %116, !dbg !3618
  br i1 %cmp94, label %for.body96, label %for.end102, !dbg !3619

for.body96:                                       ; preds = %for.cond93
  %117 = load i32, i32* %k, align 4, !dbg !3620
  %idxprom97 = sext i32 %117 to i64, !dbg !3621
  %118 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3621
  %coeffs98 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %118, i32 0, i32 15, !dbg !3622
  %119 = load %struct.Coeffs*, %struct.Coeffs** %coeffs98, align 8, !dbg !3622
  %arrayidx99 = getelementptr inbounds %struct.Coeffs, %struct.Coeffs* %119, i64 %idxprom97, !dbg !3621
  %val = getelementptr inbounds %struct.Coeffs, %struct.Coeffs* %arrayidx99, i32 0, i32 0, !dbg !3623
  %120 = bitcast float** %val to i8*, !dbg !3624
  call void @av_freep(i8* %120), !dbg !3625
  br label %for.inc100, !dbg !3625

for.inc100:                                       ; preds = %for.body96
  %121 = load i32, i32* %k, align 4, !dbg !3626
  %inc101 = add nsw i32 %121, 1, !dbg !3626
  store i32 %inc101, i32* %k, align 4, !dbg !3626
  br label %for.cond93, !dbg !3628, !llvm.loop !3629

for.end102:                                       ; preds = %for.cond93
  br label %if.end103, !dbg !3631

if.end103:                                        ; preds = %for.end102, %if.end88
  %122 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3633
  %coeffs104 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %122, i32 0, i32 15, !dbg !3634
  %123 = bitcast %struct.Coeffs** %coeffs104 to i8*, !dbg !3635
  call void @av_freep(i8* %123), !dbg !3636
  %124 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3637
  %fft_data = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %124, i32 0, i32 16, !dbg !3638
  %125 = bitcast %struct.FFTComplex** %fft_data to i8*, !dbg !3639
  call void @av_freep(i8* %125), !dbg !3640
  %126 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3641
  %fft_result = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %126, i32 0, i32 17, !dbg !3642
  %127 = bitcast %struct.FFTComplex** %fft_result to i8*, !dbg !3643
  call void @av_freep(i8* %127), !dbg !3644
  %128 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3645
  %cqt_result = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %128, i32 0, i32 18, !dbg !3646
  %129 = bitcast %struct.FFTComplex** %cqt_result to i8*, !dbg !3647
  call void @av_freep(i8* %129), !dbg !3648
  %130 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3649
  %attack_data = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %130, i32 0, i32 19, !dbg !3650
  %131 = bitcast float** %attack_data to i8*, !dbg !3651
  call void @av_freep(i8* %131), !dbg !3652
  %132 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3653
  %c_buf = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %132, i32 0, i32 24, !dbg !3654
  %133 = bitcast %union.ColorFloat** %c_buf to i8*, !dbg !3655
  call void @av_freep(i8* %133), !dbg !3656
  %134 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3657
  %h_buf = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %134, i32 0, i32 25, !dbg !3658
  %135 = bitcast float** %h_buf to i8*, !dbg !3659
  call void @av_freep(i8* %135), !dbg !3660
  %136 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3661
  %rcp_h_buf = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %136, i32 0, i32 26, !dbg !3662
  %137 = bitcast float** %rcp_h_buf to i8*, !dbg !3663
  call void @av_freep(i8* %137), !dbg !3664
  %138 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3665
  %freq = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %138, i32 0, i32 13, !dbg !3666
  %139 = bitcast double** %freq to i8*, !dbg !3667
  call void @av_freep(i8* %139), !dbg !3668
  %140 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3669
  %sono_v_buf = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %140, i32 0, i32 27, !dbg !3670
  %141 = bitcast float** %sono_v_buf to i8*, !dbg !3671
  call void @av_freep(i8* %141), !dbg !3672
  %142 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3673
  %bar_v_buf = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %142, i32 0, i32 28, !dbg !3674
  %143 = bitcast float** %bar_v_buf to i8*, !dbg !3675
  call void @av_freep(i8* %143), !dbg !3676
  ret void, !dbg !3677
}

; Function Attrs: nounwind readnone
declare i64 @av_mul_q(i64, i64) #5

declare i8* @av_get_pix_fmt_name(i32) #4

; Function Attrs: nounwind uwtable
define internal double* @create_freq_table(double %base, double %end, i32 %n) #1 !dbg !3678 {
entry:
  %retval = alloca double*, align 8
  %base.addr = alloca double, align 8
  %end.addr = alloca double, align 8
  %n.addr = alloca i32, align 4
  %log_base = alloca double, align 8
  %log_end = alloca double, align 8
  %rcp_n = alloca double, align 8
  %freq = alloca double*, align 8
  %x = alloca i32, align 4
  %log_freq = alloca double, align 8
  store double %base, double* %base.addr, align 8
  call void @llvm.dbg.declare(metadata double* %base.addr, metadata !3681, metadata !820), !dbg !3682
  store double %end, double* %end.addr, align 8
  call void @llvm.dbg.declare(metadata double* %end.addr, metadata !3683, metadata !820), !dbg !3684
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3685, metadata !820), !dbg !3686
  call void @llvm.dbg.declare(metadata double* %log_base, metadata !3687, metadata !820), !dbg !3688
  call void @llvm.dbg.declare(metadata double* %log_end, metadata !3689, metadata !820), !dbg !3690
  call void @llvm.dbg.declare(metadata double* %rcp_n, metadata !3691, metadata !820), !dbg !3692
  %0 = load i32, i32* %n.addr, align 4, !dbg !3693
  %conv = sitofp i32 %0 to double, !dbg !3693
  %div = fdiv double 1.000000e+00, %conv, !dbg !3694
  store double %div, double* %rcp_n, align 8, !dbg !3692
  call void @llvm.dbg.declare(metadata double** %freq, metadata !3695, metadata !820), !dbg !3696
  call void @llvm.dbg.declare(metadata i32* %x, metadata !3697, metadata !820), !dbg !3698
  %1 = load i32, i32* %n.addr, align 4, !dbg !3699
  %conv1 = sext i32 %1 to i64, !dbg !3699
  %call = call i8* @av_malloc_array(i64 %conv1, i64 8), !dbg !3700
  %2 = bitcast i8* %call to double*, !dbg !3700
  store double* %2, double** %freq, align 8, !dbg !3701
  %3 = load double*, double** %freq, align 8, !dbg !3702
  %tobool = icmp ne double* %3, null, !dbg !3702
  br i1 %tobool, label %if.end, label %if.then, !dbg !3704

if.then:                                          ; preds = %entry
  store double* null, double** %retval, align 8, !dbg !3705
  br label %return, !dbg !3705

if.end:                                           ; preds = %entry
  %4 = load double, double* %base.addr, align 8, !dbg !3706
  %call2 = call double @log(double %4) #8, !dbg !3707
  store double %call2, double* %log_base, align 8, !dbg !3708
  %5 = load double, double* %end.addr, align 8, !dbg !3709
  %call3 = call double @log(double %5) #8, !dbg !3710
  store double %call3, double* %log_end, align 8, !dbg !3711
  store i32 0, i32* %x, align 4, !dbg !3712
  br label %for.cond, !dbg !3714

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i32, i32* %x, align 4, !dbg !3715
  %7 = load i32, i32* %n.addr, align 4, !dbg !3718
  %cmp = icmp slt i32 %6, %7, !dbg !3719
  br i1 %cmp, label %for.body, label %for.end, !dbg !3720

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata double* %log_freq, metadata !3721, metadata !820), !dbg !3723
  %8 = load double, double* %log_base, align 8, !dbg !3724
  %9 = load i32, i32* %x, align 4, !dbg !3725
  %conv5 = sitofp i32 %9 to double, !dbg !3725
  %add = fadd double %conv5, 5.000000e-01, !dbg !3726
  %10 = load double, double* %log_end, align 8, !dbg !3727
  %11 = load double, double* %log_base, align 8, !dbg !3728
  %sub = fsub double %10, %11, !dbg !3729
  %mul = fmul double %add, %sub, !dbg !3730
  %12 = load double, double* %rcp_n, align 8, !dbg !3731
  %mul6 = fmul double %mul, %12, !dbg !3732
  %add7 = fadd double %8, %mul6, !dbg !3733
  store double %add7, double* %log_freq, align 8, !dbg !3723
  %13 = load double, double* %log_freq, align 8, !dbg !3734
  %call8 = call double @exp(double %13) #8, !dbg !3735
  %14 = load i32, i32* %x, align 4, !dbg !3736
  %idxprom = sext i32 %14 to i64, !dbg !3737
  %15 = load double*, double** %freq, align 8, !dbg !3737
  %arrayidx = getelementptr inbounds double, double* %15, i64 %idxprom, !dbg !3737
  store double %call8, double* %arrayidx, align 8, !dbg !3738
  br label %for.inc, !dbg !3739

for.inc:                                          ; preds = %for.body
  %16 = load i32, i32* %x, align 4, !dbg !3740
  %inc = add nsw i32 %16, 1, !dbg !3740
  store i32 %inc, i32* %x, align 4, !dbg !3740
  br label %for.cond, !dbg !3742, !llvm.loop !3743

for.end:                                          ; preds = %for.cond
  %17 = load double*, double** %freq, align 8, !dbg !3745
  store double* %17, double** %retval, align 8, !dbg !3746
  br label %return, !dbg !3746

return:                                           ; preds = %for.end, %if.then
  %18 = load double*, double** %retval, align 8, !dbg !3747
  ret double* %18, !dbg !3747
}

; Function Attrs: nounwind uwtable
define internal i32 @init_volume(%struct.ShowCQTContext* %s) #1 !dbg !3748 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.ShowCQTContext*, align 8
  %func_names = alloca [4 x i8*], align 16
  %sono_names = alloca [7 x i8*], align 16
  %bar_names = alloca [7 x i8*], align 16
  %funcs = alloca [3 x double (i8*, double)*], align 16
  %sono = alloca %struct.AVExpr*, align 8
  %bar = alloca %struct.AVExpr*, align 8
  %x = alloca i32, align 4
  %ret = alloca i32, align 4
  %vars = alloca [6 x double], align 16
  %vol = alloca double, align 8
  store %struct.ShowCQTContext* %s, %struct.ShowCQTContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShowCQTContext** %s.addr, metadata !3751, metadata !820), !dbg !3752
  call void @llvm.dbg.declare(metadata [4 x i8*]* %func_names, metadata !3753, metadata !820), !dbg !3757
  %0 = bitcast [4 x i8*]* %func_names to i8*, !dbg !3757
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* bitcast ([4 x i8*]* @init_volume.func_names to i8*), i64 32, i32 16, i1 false), !dbg !3757
  call void @llvm.dbg.declare(metadata [7 x i8*]* %sono_names, metadata !3758, metadata !820), !dbg !3762
  %1 = bitcast [7 x i8*]* %sono_names to i8*, !dbg !3762
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 56, i32 16, i1 false), !dbg !3762
  %2 = bitcast i8* %1 to [7 x i8*]*, !dbg !3762
  %3 = getelementptr [7 x i8*], [7 x i8*]* %2, i32 0, i32 0, !dbg !3762
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i32 0, i32 0), i8** %3, !dbg !3762
  %4 = getelementptr [7 x i8*], [7 x i8*]* %2, i32 0, i32 1, !dbg !3762
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i32 0, i32 0), i8** %4, !dbg !3762
  %5 = getelementptr [7 x i8*], [7 x i8*]* %2, i32 0, i32 2, !dbg !3762
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i32 0, i32 0), i8** %5, !dbg !3762
  %6 = getelementptr [7 x i8*], [7 x i8*]* %2, i32 0, i32 3, !dbg !3762
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i32 0, i32 0), i8** %6, !dbg !3762
  %7 = getelementptr [7 x i8*], [7 x i8*]* %2, i32 0, i32 4, !dbg !3762
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i32 0, i32 0), i8** %7, !dbg !3762
  %8 = getelementptr [7 x i8*], [7 x i8*]* %2, i32 0, i32 5, !dbg !3762
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), i8** %8, !dbg !3762
  call void @llvm.dbg.declare(metadata [7 x i8*]* %bar_names, metadata !3763, metadata !820), !dbg !3764
  %9 = bitcast [7 x i8*]* %bar_names to i8*, !dbg !3764
  call void @llvm.memset.p0i8.i64(i8* %9, i8 0, i64 56, i32 16, i1 false), !dbg !3764
  %10 = bitcast i8* %9 to [7 x i8*]*, !dbg !3764
  %11 = getelementptr [7 x i8*], [7 x i8*]* %10, i32 0, i32 0, !dbg !3764
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i32 0, i32 0), i8** %11, !dbg !3764
  %12 = getelementptr [7 x i8*], [7 x i8*]* %10, i32 0, i32 1, !dbg !3764
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i32 0, i32 0), i8** %12, !dbg !3764
  %13 = getelementptr [7 x i8*], [7 x i8*]* %10, i32 0, i32 2, !dbg !3764
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i32 0, i32 0), i8** %13, !dbg !3764
  %14 = getelementptr [7 x i8*], [7 x i8*]* %10, i32 0, i32 3, !dbg !3764
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i32 0, i32 0), i8** %14, !dbg !3764
  %15 = getelementptr [7 x i8*], [7 x i8*]* %10, i32 0, i32 4, !dbg !3764
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i32 0, i32 0), i8** %15, !dbg !3764
  %16 = getelementptr [7 x i8*], [7 x i8*]* %10, i32 0, i32 5, !dbg !3764
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i32 0, i32 0), i8** %16, !dbg !3764
  call void @llvm.dbg.declare(metadata [3 x double (i8*, double)*]* %funcs, metadata !3765, metadata !820), !dbg !3770
  %17 = bitcast [3 x double (i8*, double)*]* %funcs to i8*, !dbg !3770
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* bitcast ([3 x double (i8*, double)*]* @init_volume.funcs to i8*), i64 24, i32 16, i1 false), !dbg !3770
  call void @llvm.dbg.declare(metadata %struct.AVExpr** %sono, metadata !3771, metadata !820), !dbg !3776
  store %struct.AVExpr* null, %struct.AVExpr** %sono, align 8, !dbg !3776
  call void @llvm.dbg.declare(metadata %struct.AVExpr** %bar, metadata !3777, metadata !820), !dbg !3778
  store %struct.AVExpr* null, %struct.AVExpr** %bar, align 8, !dbg !3778
  call void @llvm.dbg.declare(metadata i32* %x, metadata !3779, metadata !820), !dbg !3780
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3781, metadata !820), !dbg !3782
  store i32 -12, i32* %ret, align 4, !dbg !3782
  %18 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3783
  %cqt_len = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %18, i32 0, i32 22, !dbg !3784
  %19 = load i32, i32* %cqt_len, align 8, !dbg !3784
  %conv = sext i32 %19 to i64, !dbg !3783
  %call = call i8* @av_malloc_array(i64 %conv, i64 4), !dbg !3785
  %20 = bitcast i8* %call to float*, !dbg !3785
  %21 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3786
  %sono_v_buf = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %21, i32 0, i32 27, !dbg !3787
  store float* %20, float** %sono_v_buf, align 8, !dbg !3788
  %22 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3789
  %cqt_len1 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %22, i32 0, i32 22, !dbg !3790
  %23 = load i32, i32* %cqt_len1, align 8, !dbg !3790
  %conv2 = sext i32 %23 to i64, !dbg !3789
  %call3 = call i8* @av_malloc_array(i64 %conv2, i64 4), !dbg !3791
  %24 = bitcast i8* %call3 to float*, !dbg !3791
  %25 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3792
  %bar_v_buf = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %25, i32 0, i32 28, !dbg !3793
  store float* %24, float** %bar_v_buf, align 8, !dbg !3794
  %26 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3795
  %sono_v_buf4 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %26, i32 0, i32 27, !dbg !3797
  %27 = load float*, float** %sono_v_buf4, align 8, !dbg !3797
  %tobool = icmp ne float* %27, null, !dbg !3795
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !3798

lor.lhs.false:                                    ; preds = %entry
  %28 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3799
  %bar_v_buf5 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %28, i32 0, i32 28, !dbg !3801
  %29 = load float*, float** %bar_v_buf5, align 8, !dbg !3801
  %tobool6 = icmp ne float* %29, null, !dbg !3799
  br i1 %tobool6, label %if.end, label %if.then, !dbg !3802

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %error, !dbg !3803

if.end:                                           ; preds = %lor.lhs.false
  %30 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3804
  %sono_v = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %30, i32 0, i32 52, !dbg !3806
  %31 = load i8*, i8** %sono_v, align 8, !dbg !3806
  %arraydecay = getelementptr inbounds [7 x i8*], [7 x i8*]* %sono_names, i32 0, i32 0, !dbg !3807
  %arraydecay7 = getelementptr inbounds [4 x i8*], [4 x i8*]* %func_names, i32 0, i32 0, !dbg !3808
  %arraydecay8 = getelementptr inbounds [3 x double (i8*, double)*], [3 x double (i8*, double)*]* %funcs, i32 0, i32 0, !dbg !3809
  %32 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3810
  %ctx = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %32, i32 0, i32 1, !dbg !3811
  %33 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !3811
  %34 = bitcast %struct.AVFilterContext* %33 to i8*, !dbg !3810
  %call9 = call i32 @av_expr_parse(%struct.AVExpr** %sono, i8* %31, i8** %arraydecay, i8** %arraydecay7, double (i8*, double)** %arraydecay8, i8** null, double (i8*, double, double)** null, i32 0, i8* %34), !dbg !3812
  store i32 %call9, i32* %ret, align 4, !dbg !3813
  %cmp = icmp slt i32 %call9, 0, !dbg !3814
  br i1 %cmp, label %if.then11, label %if.end12, !dbg !3815

if.then11:                                        ; preds = %if.end
  br label %error, !dbg !3816

if.end12:                                         ; preds = %if.end
  %35 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3817
  %bar_v = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %35, i32 0, i32 53, !dbg !3819
  %36 = load i8*, i8** %bar_v, align 8, !dbg !3819
  %arraydecay13 = getelementptr inbounds [7 x i8*], [7 x i8*]* %bar_names, i32 0, i32 0, !dbg !3820
  %arraydecay14 = getelementptr inbounds [4 x i8*], [4 x i8*]* %func_names, i32 0, i32 0, !dbg !3821
  %arraydecay15 = getelementptr inbounds [3 x double (i8*, double)*], [3 x double (i8*, double)*]* %funcs, i32 0, i32 0, !dbg !3822
  %37 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3823
  %ctx16 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %37, i32 0, i32 1, !dbg !3824
  %38 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx16, align 8, !dbg !3824
  %39 = bitcast %struct.AVFilterContext* %38 to i8*, !dbg !3823
  %call17 = call i32 @av_expr_parse(%struct.AVExpr** %bar, i8* %36, i8** %arraydecay13, i8** %arraydecay14, double (i8*, double)** %arraydecay15, i8** null, double (i8*, double, double)** null, i32 0, i8* %39), !dbg !3825
  store i32 %call17, i32* %ret, align 4, !dbg !3826
  %cmp18 = icmp slt i32 %call17, 0, !dbg !3827
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !3828

if.then20:                                        ; preds = %if.end12
  br label %error, !dbg !3829

if.end21:                                         ; preds = %if.end12
  store i32 0, i32* %x, align 4, !dbg !3830
  br label %for.cond, !dbg !3832

for.cond:                                         ; preds = %for.inc, %if.end21
  %40 = load i32, i32* %x, align 4, !dbg !3833
  %41 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3836
  %cqt_len22 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %41, i32 0, i32 22, !dbg !3837
  %42 = load i32, i32* %cqt_len22, align 8, !dbg !3837
  %cmp23 = icmp slt i32 %40, %42, !dbg !3838
  br i1 %cmp23, label %for.body, label %for.end, !dbg !3839

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [6 x double]* %vars, metadata !3840, metadata !820), !dbg !3843
  %arrayinit.begin = getelementptr inbounds [6 x double], [6 x double]* %vars, i64 0, i64 0, !dbg !3844
  %43 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3845
  %timeclamp = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %43, i32 0, i32 57, !dbg !3846
  %44 = load double, double* %timeclamp, align 8, !dbg !3846
  store double %44, double* %arrayinit.begin, align 8, !dbg !3844
  %arrayinit.element = getelementptr inbounds double, double* %arrayinit.begin, i64 1, !dbg !3844
  %45 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3847
  %timeclamp25 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %45, i32 0, i32 57, !dbg !3848
  %46 = load double, double* %timeclamp25, align 8, !dbg !3848
  store double %46, double* %arrayinit.element, align 8, !dbg !3844
  %arrayinit.element26 = getelementptr inbounds double, double* %arrayinit.element, i64 1, !dbg !3844
  %47 = load i32, i32* %x, align 4, !dbg !3849
  %idxprom = sext i32 %47 to i64, !dbg !3850
  %48 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3850
  %freq = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %48, i32 0, i32 13, !dbg !3851
  %49 = load double*, double** %freq, align 8, !dbg !3851
  %arrayidx = getelementptr inbounds double, double* %49, i64 %idxprom, !dbg !3850
  %50 = load double, double* %arrayidx, align 8, !dbg !3850
  store double %50, double* %arrayinit.element26, align 8, !dbg !3844
  %arrayinit.element27 = getelementptr inbounds double, double* %arrayinit.element26, i64 1, !dbg !3844
  %51 = load i32, i32* %x, align 4, !dbg !3852
  %idxprom28 = sext i32 %51 to i64, !dbg !3853
  %52 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3853
  %freq29 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %52, i32 0, i32 13, !dbg !3854
  %53 = load double*, double** %freq29, align 8, !dbg !3854
  %arrayidx30 = getelementptr inbounds double, double* %53, i64 %idxprom28, !dbg !3853
  %54 = load double, double* %arrayidx30, align 8, !dbg !3853
  store double %54, double* %arrayinit.element27, align 8, !dbg !3844
  %arrayinit.element31 = getelementptr inbounds double, double* %arrayinit.element27, i64 1, !dbg !3844
  %55 = load i32, i32* %x, align 4, !dbg !3855
  %idxprom32 = sext i32 %55 to i64, !dbg !3856
  %56 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3856
  %freq33 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %56, i32 0, i32 13, !dbg !3857
  %57 = load double*, double** %freq33, align 8, !dbg !3857
  %arrayidx34 = getelementptr inbounds double, double* %57, i64 %idxprom32, !dbg !3856
  %58 = load double, double* %arrayidx34, align 8, !dbg !3856
  store double %58, double* %arrayinit.element31, align 8, !dbg !3844
  %arrayinit.element35 = getelementptr inbounds double, double* %arrayinit.element31, i64 1, !dbg !3844
  store double 0.000000e+00, double* %arrayinit.element35, align 8, !dbg !3844
  call void @llvm.dbg.declare(metadata double* %vol, metadata !3858, metadata !820), !dbg !3859
  %59 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3860
  %ctx36 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %59, i32 0, i32 1, !dbg !3861
  %60 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx36, align 8, !dbg !3861
  %61 = bitcast %struct.AVFilterContext* %60 to i8*, !dbg !3860
  %62 = load %struct.AVExpr*, %struct.AVExpr** %sono, align 8, !dbg !3862
  %arraydecay37 = getelementptr inbounds [6 x double], [6 x double]* %vars, i32 0, i32 0, !dbg !3863
  %call38 = call double @av_expr_eval(%struct.AVExpr* %62, double* %arraydecay37, i8* null), !dbg !3864
  %63 = load i32, i32* %x, align 4, !dbg !3865
  %call39 = call double @clip_with_log(i8* %61, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i32 0, i32 0), double %call38, double 0.000000e+00, double 1.000000e+02, double 0.000000e+00, i32 %63), !dbg !3866
  store double %call39, double* %vol, align 8, !dbg !3859
  %64 = load double, double* %vol, align 8, !dbg !3868
  %arrayidx40 = getelementptr inbounds [6 x double], [6 x double]* %vars, i64 0, i64 5, !dbg !3869
  store double %64, double* %arrayidx40, align 8, !dbg !3870
  %65 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3871
  %ctx41 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %65, i32 0, i32 1, !dbg !3872
  %66 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx41, align 8, !dbg !3872
  %67 = bitcast %struct.AVFilterContext* %66 to i8*, !dbg !3871
  %68 = load %struct.AVExpr*, %struct.AVExpr** %bar, align 8, !dbg !3873
  %arraydecay42 = getelementptr inbounds [6 x double], [6 x double]* %vars, i32 0, i32 0, !dbg !3874
  %call43 = call double @av_expr_eval(%struct.AVExpr* %68, double* %arraydecay42, i8* null), !dbg !3875
  %69 = load i32, i32* %x, align 4, !dbg !3876
  %call44 = call double @clip_with_log(i8* %67, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), double %call43, double 0.000000e+00, double 1.000000e+02, double 0.000000e+00, i32 %69), !dbg !3877
  store double %call44, double* %vol, align 8, !dbg !3878
  %70 = load double, double* %vol, align 8, !dbg !3879
  %71 = load double, double* %vol, align 8, !dbg !3880
  %mul = fmul double %70, %71, !dbg !3881
  %conv45 = fptrunc double %mul to float, !dbg !3879
  %72 = load i32, i32* %x, align 4, !dbg !3882
  %idxprom46 = sext i32 %72 to i64, !dbg !3883
  %73 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3883
  %bar_v_buf47 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %73, i32 0, i32 28, !dbg !3884
  %74 = load float*, float** %bar_v_buf47, align 8, !dbg !3884
  %arrayidx48 = getelementptr inbounds float, float* %74, i64 %idxprom46, !dbg !3883
  store float %conv45, float* %arrayidx48, align 4, !dbg !3885
  %75 = load double, double* %vol, align 8, !dbg !3886
  %arrayidx49 = getelementptr inbounds [6 x double], [6 x double]* %vars, i64 0, i64 5, !dbg !3887
  store double %75, double* %arrayidx49, align 8, !dbg !3888
  %76 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3889
  %ctx50 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %76, i32 0, i32 1, !dbg !3890
  %77 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx50, align 8, !dbg !3890
  %78 = bitcast %struct.AVFilterContext* %77 to i8*, !dbg !3889
  %79 = load %struct.AVExpr*, %struct.AVExpr** %sono, align 8, !dbg !3891
  %arraydecay51 = getelementptr inbounds [6 x double], [6 x double]* %vars, i32 0, i32 0, !dbg !3892
  %call52 = call double @av_expr_eval(%struct.AVExpr* %79, double* %arraydecay51, i8* null), !dbg !3893
  %80 = load i32, i32* %x, align 4, !dbg !3894
  %call53 = call double @clip_with_log(i8* %78, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i32 0, i32 0), double %call52, double 0.000000e+00, double 1.000000e+02, double 0.000000e+00, i32 %80), !dbg !3895
  store double %call53, double* %vol, align 8, !dbg !3896
  %81 = load double, double* %vol, align 8, !dbg !3897
  %82 = load double, double* %vol, align 8, !dbg !3898
  %mul54 = fmul double %81, %82, !dbg !3899
  %conv55 = fptrunc double %mul54 to float, !dbg !3897
  %83 = load i32, i32* %x, align 4, !dbg !3900
  %idxprom56 = sext i32 %83 to i64, !dbg !3901
  %84 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3901
  %sono_v_buf57 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %84, i32 0, i32 27, !dbg !3902
  %85 = load float*, float** %sono_v_buf57, align 8, !dbg !3902
  %arrayidx58 = getelementptr inbounds float, float* %85, i64 %idxprom56, !dbg !3901
  store float %conv55, float* %arrayidx58, align 4, !dbg !3903
  br label %for.inc, !dbg !3904

for.inc:                                          ; preds = %for.body
  %86 = load i32, i32* %x, align 4, !dbg !3905
  %inc = add nsw i32 %86, 1, !dbg !3905
  store i32 %inc, i32* %x, align 4, !dbg !3905
  br label %for.cond, !dbg !3907, !llvm.loop !3908

for.end:                                          ; preds = %for.cond
  %87 = load %struct.AVExpr*, %struct.AVExpr** %sono, align 8, !dbg !3910
  call void @av_expr_free(%struct.AVExpr* %87), !dbg !3911
  %88 = load %struct.AVExpr*, %struct.AVExpr** %bar, align 8, !dbg !3912
  call void @av_expr_free(%struct.AVExpr* %88), !dbg !3913
  store i32 0, i32* %retval, align 4, !dbg !3914
  br label %return, !dbg !3914

error:                                            ; preds = %if.then20, %if.then11, %if.then
  %89 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3915
  %sono_v_buf59 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %89, i32 0, i32 27, !dbg !3916
  %90 = bitcast float** %sono_v_buf59 to i8*, !dbg !3917
  call void @av_freep(i8* %90), !dbg !3918
  %91 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !3919
  %bar_v_buf60 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %91, i32 0, i32 28, !dbg !3920
  %92 = bitcast float** %bar_v_buf60 to i8*, !dbg !3921
  call void @av_freep(i8* %92), !dbg !3922
  %93 = load %struct.AVExpr*, %struct.AVExpr** %sono, align 8, !dbg !3923
  call void @av_expr_free(%struct.AVExpr* %93), !dbg !3924
  %94 = load %struct.AVExpr*, %struct.AVExpr** %bar, align 8, !dbg !3925
  call void @av_expr_free(%struct.AVExpr* %94), !dbg !3926
  %95 = load i32, i32* %ret, align 4, !dbg !3927
  store i32 %95, i32* %retval, align 4, !dbg !3928
  br label %return, !dbg !3928

return:                                           ; preds = %error, %for.end
  %96 = load i32, i32* %retval, align 4, !dbg !3929
  ret i32 %96, !dbg !3929
}

; Function Attrs: nounwind readnone
declare double @ceil(double) #5

; Function Attrs: nounwind
declare double @log2(double) #7

declare %struct.FFTContext* @av_fft_init(i32, i32) #4

declare noalias i8* @av_calloc(i64, i64) #4

declare i8* @av_malloc_array(i64, i64) #4

; Function Attrs: nounwind
declare double @cos(double) #7

; Function Attrs: nounwind uwtable
define internal void @cqt_calc(%struct.FFTComplex* %dst, %struct.FFTComplex* %src, %struct.Coeffs* %coeffs, i32 %len, i32 %fft_len) #1 !dbg !3930 {
entry:
  %dst.addr = alloca %struct.FFTComplex*, align 8
  %src.addr = alloca %struct.FFTComplex*, align 8
  %coeffs.addr = alloca %struct.Coeffs*, align 8
  %len.addr = alloca i32, align 4
  %fft_len.addr = alloca i32, align 4
  %k = alloca i32, align 4
  %x = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %l = alloca %struct.FFTComplex, align 4
  %r = alloca %struct.FFTComplex, align 4
  %a = alloca %struct.FFTComplex, align 4
  %b = alloca %struct.FFTComplex, align 4
  %u = alloca float, align 4
  store %struct.FFTComplex* %dst, %struct.FFTComplex** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FFTComplex** %dst.addr, metadata !3931, metadata !820), !dbg !3932
  store %struct.FFTComplex* %src, %struct.FFTComplex** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FFTComplex** %src.addr, metadata !3933, metadata !820), !dbg !3934
  store %struct.Coeffs* %coeffs, %struct.Coeffs** %coeffs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Coeffs** %coeffs.addr, metadata !3935, metadata !820), !dbg !3936
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !3937, metadata !820), !dbg !3938
  store i32 %fft_len, i32* %fft_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fft_len.addr, metadata !3939, metadata !820), !dbg !3940
  call void @llvm.dbg.declare(metadata i32* %k, metadata !3941, metadata !820), !dbg !3942
  call void @llvm.dbg.declare(metadata i32* %x, metadata !3943, metadata !820), !dbg !3944
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3945, metadata !820), !dbg !3946
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3947, metadata !820), !dbg !3948
  store i32 0, i32* %k, align 4, !dbg !3949
  br label %for.cond, !dbg !3951

for.cond:                                         ; preds = %for.inc68, %entry
  %0 = load i32, i32* %k, align 4, !dbg !3952
  %1 = load i32, i32* %len.addr, align 4, !dbg !3955
  %cmp = icmp slt i32 %0, %1, !dbg !3956
  br i1 %cmp, label %for.body, label %for.end70, !dbg !3957

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.FFTComplex* %l, metadata !3958, metadata !820), !dbg !3960
  call void @llvm.dbg.declare(metadata %struct.FFTComplex* %r, metadata !3961, metadata !820), !dbg !3962
  call void @llvm.dbg.declare(metadata %struct.FFTComplex* %a, metadata !3963, metadata !820), !dbg !3964
  %2 = bitcast %struct.FFTComplex* %a to i8*, !dbg !3964
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 8, i32 4, i1 false), !dbg !3964
  call void @llvm.dbg.declare(metadata %struct.FFTComplex* %b, metadata !3965, metadata !820), !dbg !3966
  %3 = bitcast %struct.FFTComplex* %b to i8*, !dbg !3966
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 8, i32 4, i1 false), !dbg !3967
  store i32 0, i32* %x, align 4, !dbg !3969
  br label %for.cond1, !dbg !3971

for.cond1:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %x, align 4, !dbg !3972
  %5 = load i32, i32* %k, align 4, !dbg !3975
  %idxprom = sext i32 %5 to i64, !dbg !3976
  %6 = load %struct.Coeffs*, %struct.Coeffs** %coeffs.addr, align 8, !dbg !3976
  %arrayidx = getelementptr inbounds %struct.Coeffs, %struct.Coeffs* %6, i64 %idxprom, !dbg !3976
  %len2 = getelementptr inbounds %struct.Coeffs, %struct.Coeffs* %arrayidx, i32 0, i32 2, !dbg !3977
  %7 = load i32, i32* %len2, align 4, !dbg !3977
  %cmp3 = icmp slt i32 %4, %7, !dbg !3978
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !3979

for.body4:                                        ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata float* %u, metadata !3980, metadata !820), !dbg !3982
  %8 = load i32, i32* %x, align 4, !dbg !3983
  %idxprom5 = sext i32 %8 to i64, !dbg !3984
  %9 = load i32, i32* %k, align 4, !dbg !3985
  %idxprom6 = sext i32 %9 to i64, !dbg !3984
  %10 = load %struct.Coeffs*, %struct.Coeffs** %coeffs.addr, align 8, !dbg !3984
  %arrayidx7 = getelementptr inbounds %struct.Coeffs, %struct.Coeffs* %10, i64 %idxprom6, !dbg !3984
  %val = getelementptr inbounds %struct.Coeffs, %struct.Coeffs* %arrayidx7, i32 0, i32 0, !dbg !3986
  %11 = load float*, float** %val, align 8, !dbg !3986
  %arrayidx8 = getelementptr inbounds float, float* %11, i64 %idxprom5, !dbg !3984
  %12 = load float, float* %arrayidx8, align 4, !dbg !3984
  store float %12, float* %u, align 4, !dbg !3982
  %13 = load i32, i32* %k, align 4, !dbg !3987
  %idxprom9 = sext i32 %13 to i64, !dbg !3988
  %14 = load %struct.Coeffs*, %struct.Coeffs** %coeffs.addr, align 8, !dbg !3988
  %arrayidx10 = getelementptr inbounds %struct.Coeffs, %struct.Coeffs* %14, i64 %idxprom9, !dbg !3988
  %start = getelementptr inbounds %struct.Coeffs, %struct.Coeffs* %arrayidx10, i32 0, i32 1, !dbg !3989
  %15 = load i32, i32* %start, align 8, !dbg !3989
  %16 = load i32, i32* %x, align 4, !dbg !3990
  %add = add nsw i32 %15, %16, !dbg !3991
  store i32 %add, i32* %i, align 4, !dbg !3992
  %17 = load i32, i32* %fft_len.addr, align 4, !dbg !3993
  %18 = load i32, i32* %i, align 4, !dbg !3994
  %sub = sub nsw i32 %17, %18, !dbg !3995
  store i32 %sub, i32* %j, align 4, !dbg !3996
  %19 = load float, float* %u, align 4, !dbg !3997
  %20 = load i32, i32* %i, align 4, !dbg !3998
  %idxprom11 = sext i32 %20 to i64, !dbg !3999
  %21 = load %struct.FFTComplex*, %struct.FFTComplex** %src.addr, align 8, !dbg !3999
  %arrayidx12 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %21, i64 %idxprom11, !dbg !3999
  %re = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx12, i32 0, i32 0, !dbg !4000
  %22 = load float, float* %re, align 4, !dbg !4000
  %mul = fmul float %19, %22, !dbg !4001
  %re13 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %a, i32 0, i32 0, !dbg !4002
  %23 = load float, float* %re13, align 4, !dbg !4003
  %add14 = fadd float %23, %mul, !dbg !4003
  store float %add14, float* %re13, align 4, !dbg !4003
  %24 = load float, float* %u, align 4, !dbg !4004
  %25 = load i32, i32* %i, align 4, !dbg !4005
  %idxprom15 = sext i32 %25 to i64, !dbg !4006
  %26 = load %struct.FFTComplex*, %struct.FFTComplex** %src.addr, align 8, !dbg !4006
  %arrayidx16 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %26, i64 %idxprom15, !dbg !4006
  %im = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx16, i32 0, i32 1, !dbg !4007
  %27 = load float, float* %im, align 4, !dbg !4007
  %mul17 = fmul float %24, %27, !dbg !4008
  %im18 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %a, i32 0, i32 1, !dbg !4009
  %28 = load float, float* %im18, align 4, !dbg !4010
  %add19 = fadd float %28, %mul17, !dbg !4010
  store float %add19, float* %im18, align 4, !dbg !4010
  %29 = load float, float* %u, align 4, !dbg !4011
  %30 = load i32, i32* %j, align 4, !dbg !4012
  %idxprom20 = sext i32 %30 to i64, !dbg !4013
  %31 = load %struct.FFTComplex*, %struct.FFTComplex** %src.addr, align 8, !dbg !4013
  %arrayidx21 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %31, i64 %idxprom20, !dbg !4013
  %re22 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx21, i32 0, i32 0, !dbg !4014
  %32 = load float, float* %re22, align 4, !dbg !4014
  %mul23 = fmul float %29, %32, !dbg !4015
  %re24 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %b, i32 0, i32 0, !dbg !4016
  %33 = load float, float* %re24, align 4, !dbg !4017
  %add25 = fadd float %33, %mul23, !dbg !4017
  store float %add25, float* %re24, align 4, !dbg !4017
  %34 = load float, float* %u, align 4, !dbg !4018
  %35 = load i32, i32* %j, align 4, !dbg !4019
  %idxprom26 = sext i32 %35 to i64, !dbg !4020
  %36 = load %struct.FFTComplex*, %struct.FFTComplex** %src.addr, align 8, !dbg !4020
  %arrayidx27 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %36, i64 %idxprom26, !dbg !4020
  %im28 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx27, i32 0, i32 1, !dbg !4021
  %37 = load float, float* %im28, align 4, !dbg !4021
  %mul29 = fmul float %34, %37, !dbg !4022
  %im30 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %b, i32 0, i32 1, !dbg !4023
  %38 = load float, float* %im30, align 4, !dbg !4024
  %add31 = fadd float %38, %mul29, !dbg !4024
  store float %add31, float* %im30, align 4, !dbg !4024
  br label %for.inc, !dbg !4025

for.inc:                                          ; preds = %for.body4
  %39 = load i32, i32* %x, align 4, !dbg !4026
  %inc = add nsw i32 %39, 1, !dbg !4026
  store i32 %inc, i32* %x, align 4, !dbg !4026
  br label %for.cond1, !dbg !4028, !llvm.loop !4029

for.end:                                          ; preds = %for.cond1
  %re32 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %a, i32 0, i32 0, !dbg !4031
  %40 = load float, float* %re32, align 4, !dbg !4031
  %re33 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %b, i32 0, i32 0, !dbg !4032
  %41 = load float, float* %re33, align 4, !dbg !4032
  %add34 = fadd float %40, %41, !dbg !4033
  %re35 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %l, i32 0, i32 0, !dbg !4034
  store float %add34, float* %re35, align 4, !dbg !4035
  %im36 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %a, i32 0, i32 1, !dbg !4036
  %42 = load float, float* %im36, align 4, !dbg !4036
  %im37 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %b, i32 0, i32 1, !dbg !4037
  %43 = load float, float* %im37, align 4, !dbg !4037
  %sub38 = fsub float %42, %43, !dbg !4038
  %im39 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %l, i32 0, i32 1, !dbg !4039
  store float %sub38, float* %im39, align 4, !dbg !4040
  %im40 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %b, i32 0, i32 1, !dbg !4041
  %44 = load float, float* %im40, align 4, !dbg !4041
  %im41 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %a, i32 0, i32 1, !dbg !4042
  %45 = load float, float* %im41, align 4, !dbg !4042
  %add42 = fadd float %44, %45, !dbg !4043
  %re43 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %r, i32 0, i32 0, !dbg !4044
  store float %add42, float* %re43, align 4, !dbg !4045
  %re44 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %b, i32 0, i32 0, !dbg !4046
  %46 = load float, float* %re44, align 4, !dbg !4046
  %re45 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %a, i32 0, i32 0, !dbg !4047
  %47 = load float, float* %re45, align 4, !dbg !4047
  %sub46 = fsub float %46, %47, !dbg !4048
  %im47 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %r, i32 0, i32 1, !dbg !4049
  store float %sub46, float* %im47, align 4, !dbg !4050
  %re48 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %l, i32 0, i32 0, !dbg !4051
  %48 = load float, float* %re48, align 4, !dbg !4051
  %re49 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %l, i32 0, i32 0, !dbg !4052
  %49 = load float, float* %re49, align 4, !dbg !4052
  %mul50 = fmul float %48, %49, !dbg !4053
  %im51 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %l, i32 0, i32 1, !dbg !4054
  %50 = load float, float* %im51, align 4, !dbg !4054
  %im52 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %l, i32 0, i32 1, !dbg !4055
  %51 = load float, float* %im52, align 4, !dbg !4055
  %mul53 = fmul float %50, %51, !dbg !4056
  %add54 = fadd float %mul50, %mul53, !dbg !4057
  %52 = load i32, i32* %k, align 4, !dbg !4058
  %idxprom55 = sext i32 %52 to i64, !dbg !4059
  %53 = load %struct.FFTComplex*, %struct.FFTComplex** %dst.addr, align 8, !dbg !4059
  %arrayidx56 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %53, i64 %idxprom55, !dbg !4059
  %re57 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx56, i32 0, i32 0, !dbg !4060
  store float %add54, float* %re57, align 4, !dbg !4061
  %re58 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %r, i32 0, i32 0, !dbg !4062
  %54 = load float, float* %re58, align 4, !dbg !4062
  %re59 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %r, i32 0, i32 0, !dbg !4063
  %55 = load float, float* %re59, align 4, !dbg !4063
  %mul60 = fmul float %54, %55, !dbg !4064
  %im61 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %r, i32 0, i32 1, !dbg !4065
  %56 = load float, float* %im61, align 4, !dbg !4065
  %im62 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %r, i32 0, i32 1, !dbg !4066
  %57 = load float, float* %im62, align 4, !dbg !4066
  %mul63 = fmul float %56, %57, !dbg !4067
  %add64 = fadd float %mul60, %mul63, !dbg !4068
  %58 = load i32, i32* %k, align 4, !dbg !4069
  %idxprom65 = sext i32 %58 to i64, !dbg !4070
  %59 = load %struct.FFTComplex*, %struct.FFTComplex** %dst.addr, align 8, !dbg !4070
  %arrayidx66 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %59, i64 %idxprom65, !dbg !4070
  %im67 = getelementptr inbounds %struct.FFTComplex, %struct.FFTComplex* %arrayidx66, i32 0, i32 1, !dbg !4071
  store float %add64, float* %im67, align 4, !dbg !4072
  br label %for.inc68, !dbg !4073

for.inc68:                                        ; preds = %for.end
  %60 = load i32, i32* %k, align 4, !dbg !4074
  %inc69 = add nsw i32 %60, 1, !dbg !4074
  store i32 %inc69, i32* %k, align 4, !dbg !4074
  br label %for.cond, !dbg !4076, !llvm.loop !4077

for.end70:                                        ; preds = %for.cond
  ret void, !dbg !4079
}

; Function Attrs: nounwind uwtable
define internal void @draw_sono(%struct.AVFrame* %out, %struct.AVFrame* %sono, i32 %off, i32 %idx) #1 !dbg !4080 {
entry:
  %out.addr = alloca %struct.AVFrame*, align 8
  %sono.addr = alloca %struct.AVFrame*, align 8
  %off.addr = alloca i32, align 4
  %idx.addr = alloca i32, align 4
  %fmt = alloca i32, align 4
  %h = alloca i32, align 4
  %nb_planes = alloca i32, align 4
  %offh = alloca i32, align 4
  %inc = alloca i32, align 4
  %ls = alloca i32, align 4
  %i = alloca i32, align 4
  %y = alloca i32, align 4
  %yh = alloca i32, align 4
  store %struct.AVFrame* %out, %struct.AVFrame** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %out.addr, metadata !4081, metadata !820), !dbg !4082
  store %struct.AVFrame* %sono, %struct.AVFrame** %sono.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %sono.addr, metadata !4083, metadata !820), !dbg !4084
  store i32 %off, i32* %off.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %off.addr, metadata !4085, metadata !820), !dbg !4086
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !4087, metadata !820), !dbg !4088
  call void @llvm.dbg.declare(metadata i32* %fmt, metadata !4089, metadata !820), !dbg !4090
  %0 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4091
  %format = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i32 0, i32 6, !dbg !4092
  %1 = load i32, i32* %format, align 4, !dbg !4092
  store i32 %1, i32* %fmt, align 4, !dbg !4090
  call void @llvm.dbg.declare(metadata i32* %h, metadata !4093, metadata !820), !dbg !4094
  %2 = load %struct.AVFrame*, %struct.AVFrame** %sono.addr, align 8, !dbg !4095
  %height = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %2, i32 0, i32 4, !dbg !4096
  %3 = load i32, i32* %height, align 4, !dbg !4096
  store i32 %3, i32* %h, align 4, !dbg !4094
  call void @llvm.dbg.declare(metadata i32* %nb_planes, metadata !4097, metadata !820), !dbg !4098
  %4 = load i32, i32* %fmt, align 4, !dbg !4099
  %cmp = icmp eq i32 %4, 2, !dbg !4100
  %cond = select i1 %cmp, i32 1, i32 3, !dbg !4101
  store i32 %cond, i32* %nb_planes, align 4, !dbg !4098
  call void @llvm.dbg.declare(metadata i32* %offh, metadata !4102, metadata !820), !dbg !4103
  %5 = load i32, i32* %fmt, align 4, !dbg !4104
  %cmp1 = icmp eq i32 %5, 0, !dbg !4105
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !4106

cond.true:                                        ; preds = %entry
  %6 = load i32, i32* %off.addr, align 4, !dbg !4107
  %div = sdiv i32 %6, 2, !dbg !4109
  br label %cond.end, !dbg !4110

cond.false:                                       ; preds = %entry
  %7 = load i32, i32* %off.addr, align 4, !dbg !4111
  br label %cond.end, !dbg !4113

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond2 = phi i32 [ %div, %cond.true ], [ %7, %cond.false ], !dbg !4114
  store i32 %cond2, i32* %offh, align 4, !dbg !4116
  call void @llvm.dbg.declare(metadata i32* %inc, metadata !4117, metadata !820), !dbg !4118
  %8 = load i32, i32* %fmt, align 4, !dbg !4119
  %cmp3 = icmp eq i32 %8, 0, !dbg !4120
  %cond4 = select i1 %cmp3, i32 2, i32 1, !dbg !4121
  store i32 %cond4, i32* %inc, align 4, !dbg !4118
  call void @llvm.dbg.declare(metadata i32* %ls, metadata !4122, metadata !820), !dbg !4123
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4124, metadata !820), !dbg !4125
  call void @llvm.dbg.declare(metadata i32* %y, metadata !4126, metadata !820), !dbg !4127
  call void @llvm.dbg.declare(metadata i32* %yh, metadata !4128, metadata !820), !dbg !4129
  %9 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4130
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %9, i32 0, i32 1, !dbg !4131
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 0, !dbg !4130
  %10 = load i32, i32* %arrayidx, align 8, !dbg !4130
  %11 = load %struct.AVFrame*, %struct.AVFrame** %sono.addr, align 8, !dbg !4132
  %linesize5 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %11, i32 0, i32 1, !dbg !4133
  %arrayidx6 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize5, i64 0, i64 0, !dbg !4132
  %12 = load i32, i32* %arrayidx6, align 8, !dbg !4132
  %cmp7 = icmp sgt i32 %10, %12, !dbg !4134
  br i1 %cmp7, label %cond.true8, label %cond.false11, !dbg !4135

cond.true8:                                       ; preds = %cond.end
  %13 = load %struct.AVFrame*, %struct.AVFrame** %sono.addr, align 8, !dbg !4136
  %linesize9 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %13, i32 0, i32 1, !dbg !4137
  %arrayidx10 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize9, i64 0, i64 0, !dbg !4136
  %14 = load i32, i32* %arrayidx10, align 8, !dbg !4136
  br label %cond.end14, !dbg !4138

cond.false11:                                     ; preds = %cond.end
  %15 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4139
  %linesize12 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %15, i32 0, i32 1, !dbg !4140
  %arrayidx13 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize12, i64 0, i64 0, !dbg !4139
  %16 = load i32, i32* %arrayidx13, align 8, !dbg !4139
  br label %cond.end14, !dbg !4141

cond.end14:                                       ; preds = %cond.false11, %cond.true8
  %cond15 = phi i32 [ %14, %cond.true8 ], [ %16, %cond.false11 ], !dbg !4142
  store i32 %cond15, i32* %ls, align 4, !dbg !4143
  store i32 0, i32* %y, align 4, !dbg !4144
  br label %for.cond, !dbg !4146

for.cond:                                         ; preds = %for.inc, %cond.end14
  %17 = load i32, i32* %y, align 4, !dbg !4147
  %18 = load i32, i32* %h, align 4, !dbg !4150
  %cmp16 = icmp slt i32 %17, %18, !dbg !4151
  br i1 %cmp16, label %for.body, label %for.end, !dbg !4152

for.body:                                         ; preds = %for.cond
  %19 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4153
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %19, i32 0, i32 0, !dbg !4155
  %arrayidx17 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 0, !dbg !4153
  %20 = load i8*, i8** %arrayidx17, align 8, !dbg !4153
  %21 = load i32, i32* %off.addr, align 4, !dbg !4156
  %22 = load i32, i32* %y, align 4, !dbg !4157
  %add = add nsw i32 %21, %22, !dbg !4158
  %23 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4159
  %linesize18 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %23, i32 0, i32 1, !dbg !4160
  %arrayidx19 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize18, i64 0, i64 0, !dbg !4159
  %24 = load i32, i32* %arrayidx19, align 8, !dbg !4159
  %mul = mul nsw i32 %add, %24, !dbg !4161
  %idx.ext = sext i32 %mul to i64, !dbg !4162
  %add.ptr = getelementptr inbounds i8, i8* %20, i64 %idx.ext, !dbg !4162
  %25 = load %struct.AVFrame*, %struct.AVFrame** %sono.addr, align 8, !dbg !4163
  %data20 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %25, i32 0, i32 0, !dbg !4164
  %arrayidx21 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data20, i64 0, i64 0, !dbg !4163
  %26 = load i8*, i8** %arrayidx21, align 8, !dbg !4163
  %27 = load i32, i32* %idx.addr, align 4, !dbg !4165
  %28 = load i32, i32* %y, align 4, !dbg !4166
  %add22 = add nsw i32 %27, %28, !dbg !4167
  %29 = load i32, i32* %h, align 4, !dbg !4168
  %rem = srem i32 %add22, %29, !dbg !4169
  %30 = load %struct.AVFrame*, %struct.AVFrame** %sono.addr, align 8, !dbg !4170
  %linesize23 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %30, i32 0, i32 1, !dbg !4171
  %arrayidx24 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize23, i64 0, i64 0, !dbg !4170
  %31 = load i32, i32* %arrayidx24, align 8, !dbg !4170
  %mul25 = mul nsw i32 %rem, %31, !dbg !4172
  %idx.ext26 = sext i32 %mul25 to i64, !dbg !4173
  %add.ptr27 = getelementptr inbounds i8, i8* %26, i64 %idx.ext26, !dbg !4173
  %32 = load i32, i32* %ls, align 4, !dbg !4174
  %conv = sext i32 %32 to i64, !dbg !4174
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr, i8* %add.ptr27, i64 %conv, i32 1, i1 false), !dbg !4175
  br label %for.inc, !dbg !4176

for.inc:                                          ; preds = %for.body
  %33 = load i32, i32* %y, align 4, !dbg !4177
  %inc28 = add nsw i32 %33, 1, !dbg !4177
  store i32 %inc28, i32* %y, align 4, !dbg !4177
  br label %for.cond, !dbg !4179, !llvm.loop !4180

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %i, align 4, !dbg !4182
  br label %for.cond29, !dbg !4184

for.cond29:                                       ; preds = %for.inc86, %for.end
  %34 = load i32, i32* %i, align 4, !dbg !4185
  %35 = load i32, i32* %nb_planes, align 4, !dbg !4188
  %cmp30 = icmp slt i32 %34, %35, !dbg !4189
  br i1 %cmp30, label %for.body32, label %for.end88, !dbg !4190

for.body32:                                       ; preds = %for.cond29
  %36 = load i32, i32* %i, align 4, !dbg !4191
  %idxprom = sext i32 %36 to i64, !dbg !4193
  %37 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4193
  %linesize33 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %37, i32 0, i32 1, !dbg !4194
  %arrayidx34 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize33, i64 0, i64 %idxprom, !dbg !4193
  %38 = load i32, i32* %arrayidx34, align 4, !dbg !4193
  %39 = load i32, i32* %i, align 4, !dbg !4195
  %idxprom35 = sext i32 %39 to i64, !dbg !4196
  %40 = load %struct.AVFrame*, %struct.AVFrame** %sono.addr, align 8, !dbg !4196
  %linesize36 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %40, i32 0, i32 1, !dbg !4197
  %arrayidx37 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize36, i64 0, i64 %idxprom35, !dbg !4196
  %41 = load i32, i32* %arrayidx37, align 4, !dbg !4196
  %cmp38 = icmp sgt i32 %38, %41, !dbg !4198
  br i1 %cmp38, label %cond.true40, label %cond.false44, !dbg !4199

cond.true40:                                      ; preds = %for.body32
  %42 = load i32, i32* %i, align 4, !dbg !4200
  %idxprom41 = sext i32 %42 to i64, !dbg !4202
  %43 = load %struct.AVFrame*, %struct.AVFrame** %sono.addr, align 8, !dbg !4202
  %linesize42 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %43, i32 0, i32 1, !dbg !4203
  %arrayidx43 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize42, i64 0, i64 %idxprom41, !dbg !4202
  %44 = load i32, i32* %arrayidx43, align 4, !dbg !4202
  br label %cond.end48, !dbg !4204

cond.false44:                                     ; preds = %for.body32
  %45 = load i32, i32* %i, align 4, !dbg !4205
  %idxprom45 = sext i32 %45 to i64, !dbg !4207
  %46 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4207
  %linesize46 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %46, i32 0, i32 1, !dbg !4208
  %arrayidx47 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize46, i64 0, i64 %idxprom45, !dbg !4207
  %47 = load i32, i32* %arrayidx47, align 4, !dbg !4207
  br label %cond.end48, !dbg !4209

cond.end48:                                       ; preds = %cond.false44, %cond.true40
  %cond49 = phi i32 [ %44, %cond.true40 ], [ %47, %cond.false44 ], !dbg !4210
  store i32 %cond49, i32* %ls, align 4, !dbg !4212
  store i32 0, i32* %y, align 4, !dbg !4213
  br label %for.cond50, !dbg !4215

for.cond50:                                       ; preds = %for.inc83, %cond.end48
  %48 = load i32, i32* %y, align 4, !dbg !4216
  %49 = load i32, i32* %h, align 4, !dbg !4219
  %cmp51 = icmp slt i32 %48, %49, !dbg !4220
  br i1 %cmp51, label %for.body53, label %for.end85, !dbg !4221

for.body53:                                       ; preds = %for.cond50
  %50 = load i32, i32* %fmt, align 4, !dbg !4222
  %cmp54 = icmp eq i32 %50, 0, !dbg !4224
  br i1 %cmp54, label %cond.true56, label %cond.false58, !dbg !4225

cond.true56:                                      ; preds = %for.body53
  %51 = load i32, i32* %y, align 4, !dbg !4226
  %div57 = sdiv i32 %51, 2, !dbg !4228
  br label %cond.end59, !dbg !4229

cond.false58:                                     ; preds = %for.body53
  %52 = load i32, i32* %y, align 4, !dbg !4230
  br label %cond.end59, !dbg !4232

cond.end59:                                       ; preds = %cond.false58, %cond.true56
  %cond60 = phi i32 [ %div57, %cond.true56 ], [ %52, %cond.false58 ], !dbg !4233
  store i32 %cond60, i32* %yh, align 4, !dbg !4235
  %53 = load i32, i32* %i, align 4, !dbg !4236
  %idxprom61 = sext i32 %53 to i64, !dbg !4237
  %54 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4237
  %data62 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %54, i32 0, i32 0, !dbg !4238
  %arrayidx63 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data62, i64 0, i64 %idxprom61, !dbg !4237
  %55 = load i8*, i8** %arrayidx63, align 8, !dbg !4237
  %56 = load i32, i32* %offh, align 4, !dbg !4239
  %57 = load i32, i32* %yh, align 4, !dbg !4240
  %add64 = add nsw i32 %56, %57, !dbg !4241
  %58 = load i32, i32* %i, align 4, !dbg !4242
  %idxprom65 = sext i32 %58 to i64, !dbg !4243
  %59 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4243
  %linesize66 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %59, i32 0, i32 1, !dbg !4244
  %arrayidx67 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize66, i64 0, i64 %idxprom65, !dbg !4243
  %60 = load i32, i32* %arrayidx67, align 4, !dbg !4243
  %mul68 = mul nsw i32 %add64, %60, !dbg !4245
  %idx.ext69 = sext i32 %mul68 to i64, !dbg !4246
  %add.ptr70 = getelementptr inbounds i8, i8* %55, i64 %idx.ext69, !dbg !4246
  %61 = load i32, i32* %i, align 4, !dbg !4247
  %idxprom71 = sext i32 %61 to i64, !dbg !4248
  %62 = load %struct.AVFrame*, %struct.AVFrame** %sono.addr, align 8, !dbg !4248
  %data72 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %62, i32 0, i32 0, !dbg !4249
  %arrayidx73 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data72, i64 0, i64 %idxprom71, !dbg !4248
  %63 = load i8*, i8** %arrayidx73, align 8, !dbg !4248
  %64 = load i32, i32* %idx.addr, align 4, !dbg !4250
  %65 = load i32, i32* %y, align 4, !dbg !4251
  %add74 = add nsw i32 %64, %65, !dbg !4252
  %66 = load i32, i32* %h, align 4, !dbg !4253
  %rem75 = srem i32 %add74, %66, !dbg !4254
  %67 = load i32, i32* %i, align 4, !dbg !4255
  %idxprom76 = sext i32 %67 to i64, !dbg !4256
  %68 = load %struct.AVFrame*, %struct.AVFrame** %sono.addr, align 8, !dbg !4256
  %linesize77 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %68, i32 0, i32 1, !dbg !4257
  %arrayidx78 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize77, i64 0, i64 %idxprom76, !dbg !4256
  %69 = load i32, i32* %arrayidx78, align 4, !dbg !4256
  %mul79 = mul nsw i32 %rem75, %69, !dbg !4258
  %idx.ext80 = sext i32 %mul79 to i64, !dbg !4259
  %add.ptr81 = getelementptr inbounds i8, i8* %63, i64 %idx.ext80, !dbg !4259
  %70 = load i32, i32* %ls, align 4, !dbg !4260
  %conv82 = sext i32 %70 to i64, !dbg !4260
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr70, i8* %add.ptr81, i64 %conv82, i32 1, i1 false), !dbg !4261
  br label %for.inc83, !dbg !4262

for.inc83:                                        ; preds = %cond.end59
  %71 = load i32, i32* %inc, align 4, !dbg !4263
  %72 = load i32, i32* %y, align 4, !dbg !4265
  %add84 = add nsw i32 %72, %71, !dbg !4265
  store i32 %add84, i32* %y, align 4, !dbg !4265
  br label %for.cond50, !dbg !4266, !llvm.loop !4267

for.end85:                                        ; preds = %for.cond50
  br label %for.inc86, !dbg !4269

for.inc86:                                        ; preds = %for.end85
  %73 = load i32, i32* %i, align 4, !dbg !4270
  %inc87 = add nsw i32 %73, 1, !dbg !4270
  store i32 %inc87, i32* %i, align 4, !dbg !4270
  br label %for.cond29, !dbg !4272, !llvm.loop !4273

for.end88:                                        ; preds = %for.cond29
  ret void, !dbg !4275
}

; Function Attrs: nounwind uwtable
define internal void @draw_bar_rgb(%struct.AVFrame* %out, float* %h, float* %rcp_h, %union.ColorFloat* %c, i32 %bar_h, float %bar_t) #1 !dbg !4276 {
entry:
  %out.addr = alloca %struct.AVFrame*, align 8
  %h.addr = alloca float*, align 8
  %rcp_h.addr = alloca float*, align 8
  %c.addr = alloca %union.ColorFloat*, align 8
  %bar_h.addr = alloca i32, align 4
  %bar_t.addr = alloca float, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %w = alloca i32, align 4
  %mul = alloca float, align 4
  %ht = alloca float, align 4
  %rcp_bar_h = alloca float, align 4
  %rcp_bar_t = alloca float, align 4
  %v = alloca i8*, align 8
  %lp = alloca i8*, align 8
  %ls = alloca i32, align 4
  store %struct.AVFrame* %out, %struct.AVFrame** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %out.addr, metadata !4277, metadata !820), !dbg !4278
  store float* %h, float** %h.addr, align 8
  call void @llvm.dbg.declare(metadata float** %h.addr, metadata !4279, metadata !820), !dbg !4280
  store float* %rcp_h, float** %rcp_h.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rcp_h.addr, metadata !4281, metadata !820), !dbg !4282
  store %union.ColorFloat* %c, %union.ColorFloat** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %union.ColorFloat** %c.addr, metadata !4283, metadata !820), !dbg !4284
  store i32 %bar_h, i32* %bar_h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bar_h.addr, metadata !4285, metadata !820), !dbg !4286
  store float %bar_t, float* %bar_t.addr, align 4
  call void @llvm.dbg.declare(metadata float* %bar_t.addr, metadata !4287, metadata !820), !dbg !4288
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4289, metadata !820), !dbg !4290
  call void @llvm.dbg.declare(metadata i32* %y, metadata !4291, metadata !820), !dbg !4292
  call void @llvm.dbg.declare(metadata i32* %w, metadata !4293, metadata !820), !dbg !4294
  %0 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4295
  %width = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i32 0, i32 3, !dbg !4296
  %1 = load i32, i32* %width, align 8, !dbg !4296
  store i32 %1, i32* %w, align 4, !dbg !4294
  call void @llvm.dbg.declare(metadata float* %mul, metadata !4297, metadata !820), !dbg !4298
  call void @llvm.dbg.declare(metadata float* %ht, metadata !4299, metadata !820), !dbg !4300
  call void @llvm.dbg.declare(metadata float* %rcp_bar_h, metadata !4301, metadata !820), !dbg !4302
  %2 = load i32, i32* %bar_h.addr, align 4, !dbg !4303
  %conv = sitofp i32 %2 to float, !dbg !4303
  %div = fdiv float 1.000000e+00, %conv, !dbg !4304
  store float %div, float* %rcp_bar_h, align 4, !dbg !4302
  call void @llvm.dbg.declare(metadata float* %rcp_bar_t, metadata !4305, metadata !820), !dbg !4306
  %3 = load float, float* %bar_t.addr, align 4, !dbg !4307
  %div1 = fdiv float 1.000000e+00, %3, !dbg !4308
  store float %div1, float* %rcp_bar_t, align 4, !dbg !4306
  call void @llvm.dbg.declare(metadata i8** %v, metadata !4309, metadata !820), !dbg !4310
  %4 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4311
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %4, i32 0, i32 0, !dbg !4312
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 0, !dbg !4311
  %5 = load i8*, i8** %arrayidx, align 8, !dbg !4311
  store i8* %5, i8** %v, align 8, !dbg !4310
  call void @llvm.dbg.declare(metadata i8** %lp, metadata !4313, metadata !820), !dbg !4314
  call void @llvm.dbg.declare(metadata i32* %ls, metadata !4315, metadata !820), !dbg !4316
  %6 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4317
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %6, i32 0, i32 1, !dbg !4318
  %arrayidx2 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 0, !dbg !4317
  %7 = load i32, i32* %arrayidx2, align 8, !dbg !4317
  store i32 %7, i32* %ls, align 4, !dbg !4316
  store i32 0, i32* %y, align 4, !dbg !4319
  br label %for.cond, !dbg !4321

for.cond:                                         ; preds = %for.inc44, %entry
  %8 = load i32, i32* %y, align 4, !dbg !4322
  %9 = load i32, i32* %bar_h.addr, align 4, !dbg !4325
  %cmp = icmp slt i32 %8, %9, !dbg !4326
  br i1 %cmp, label %for.body, label %for.end46, !dbg !4327

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %bar_h.addr, align 4, !dbg !4328
  %11 = load i32, i32* %y, align 4, !dbg !4330
  %sub = sub nsw i32 %10, %11, !dbg !4331
  %conv4 = sitofp i32 %sub to float, !dbg !4332
  %12 = load float, float* %rcp_bar_h, align 4, !dbg !4333
  %mul5 = fmul float %conv4, %12, !dbg !4334
  store float %mul5, float* %ht, align 4, !dbg !4335
  %13 = load i8*, i8** %v, align 8, !dbg !4336
  %14 = load i32, i32* %y, align 4, !dbg !4337
  %15 = load i32, i32* %ls, align 4, !dbg !4338
  %mul6 = mul nsw i32 %14, %15, !dbg !4339
  %idx.ext = sext i32 %mul6 to i64, !dbg !4340
  %add.ptr = getelementptr inbounds i8, i8* %13, i64 %idx.ext, !dbg !4340
  store i8* %add.ptr, i8** %lp, align 8, !dbg !4341
  store i32 0, i32* %x, align 4, !dbg !4342
  br label %for.cond7, !dbg !4344

for.cond7:                                        ; preds = %for.inc, %for.body
  %16 = load i32, i32* %x, align 4, !dbg !4345
  %17 = load i32, i32* %w, align 4, !dbg !4348
  %cmp8 = icmp slt i32 %16, %17, !dbg !4349
  br i1 %cmp8, label %for.body10, label %for.end, !dbg !4350

for.body10:                                       ; preds = %for.cond7
  %18 = load i32, i32* %x, align 4, !dbg !4351
  %idxprom = sext i32 %18 to i64, !dbg !4354
  %19 = load float*, float** %h.addr, align 8, !dbg !4354
  %arrayidx11 = getelementptr inbounds float, float* %19, i64 %idxprom, !dbg !4354
  %20 = load float, float* %arrayidx11, align 4, !dbg !4354
  %21 = load float, float* %ht, align 4, !dbg !4355
  %cmp12 = fcmp ole float %20, %21, !dbg !4356
  br i1 %cmp12, label %if.then, label %if.else, !dbg !4357

if.then:                                          ; preds = %for.body10
  %22 = load i8*, i8** %lp, align 8, !dbg !4358
  %incdec.ptr = getelementptr inbounds i8, i8* %22, i32 1, !dbg !4358
  store i8* %incdec.ptr, i8** %lp, align 8, !dbg !4358
  store i8 0, i8* %22, align 1, !dbg !4360
  %23 = load i8*, i8** %lp, align 8, !dbg !4361
  %incdec.ptr14 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !4361
  store i8* %incdec.ptr14, i8** %lp, align 8, !dbg !4361
  store i8 0, i8* %23, align 1, !dbg !4362
  %24 = load i8*, i8** %lp, align 8, !dbg !4363
  %incdec.ptr15 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4363
  store i8* %incdec.ptr15, i8** %lp, align 8, !dbg !4363
  store i8 0, i8* %24, align 1, !dbg !4364
  br label %if.end, !dbg !4365

if.else:                                          ; preds = %for.body10
  %25 = load i32, i32* %x, align 4, !dbg !4366
  %idxprom16 = sext i32 %25 to i64, !dbg !4368
  %26 = load float*, float** %h.addr, align 8, !dbg !4368
  %arrayidx17 = getelementptr inbounds float, float* %26, i64 %idxprom16, !dbg !4368
  %27 = load float, float* %arrayidx17, align 4, !dbg !4368
  %28 = load float, float* %ht, align 4, !dbg !4369
  %sub18 = fsub float %27, %28, !dbg !4370
  %29 = load i32, i32* %x, align 4, !dbg !4371
  %idxprom19 = sext i32 %29 to i64, !dbg !4372
  %30 = load float*, float** %rcp_h.addr, align 8, !dbg !4372
  %arrayidx20 = getelementptr inbounds float, float* %30, i64 %idxprom19, !dbg !4372
  %31 = load float, float* %arrayidx20, align 4, !dbg !4372
  %mul21 = fmul float %sub18, %31, !dbg !4373
  store float %mul21, float* %mul, align 4, !dbg !4374
  %32 = load float, float* %mul, align 4, !dbg !4375
  %33 = load float, float* %bar_t.addr, align 4, !dbg !4376
  %cmp22 = fcmp olt float %32, %33, !dbg !4377
  br i1 %cmp22, label %cond.true, label %cond.false, !dbg !4378

cond.true:                                        ; preds = %if.else
  %34 = load float, float* %mul, align 4, !dbg !4379
  %35 = load float, float* %rcp_bar_t, align 4, !dbg !4381
  %mul24 = fmul float %34, %35, !dbg !4382
  br label %cond.end, !dbg !4383

cond.false:                                       ; preds = %if.else
  br label %cond.end, !dbg !4384

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul24, %cond.true ], [ 1.000000e+00, %cond.false ], !dbg !4386
  store float %cond, float* %mul, align 4, !dbg !4388
  %36 = load float, float* %mul, align 4, !dbg !4389
  %37 = load i32, i32* %x, align 4, !dbg !4390
  %idxprom25 = sext i32 %37 to i64, !dbg !4391
  %38 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !4391
  %arrayidx26 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %38, i64 %idxprom25, !dbg !4391
  %rgb = bitcast %union.ColorFloat* %arrayidx26 to %struct.RGBFloat*, !dbg !4392
  %r = getelementptr inbounds %struct.RGBFloat, %struct.RGBFloat* %rgb, i32 0, i32 0, !dbg !4393
  %39 = load float, float* %r, align 4, !dbg !4393
  %mul27 = fmul float %36, %39, !dbg !4394
  %call = call i64 @lrintf(float %mul27) #8, !dbg !4395
  %conv28 = trunc i64 %call to i8, !dbg !4395
  %40 = load i8*, i8** %lp, align 8, !dbg !4396
  %incdec.ptr29 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4396
  store i8* %incdec.ptr29, i8** %lp, align 8, !dbg !4396
  store i8 %conv28, i8* %40, align 1, !dbg !4397
  %41 = load float, float* %mul, align 4, !dbg !4398
  %42 = load i32, i32* %x, align 4, !dbg !4399
  %idxprom30 = sext i32 %42 to i64, !dbg !4400
  %43 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !4400
  %arrayidx31 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %43, i64 %idxprom30, !dbg !4400
  %rgb32 = bitcast %union.ColorFloat* %arrayidx31 to %struct.RGBFloat*, !dbg !4401
  %g = getelementptr inbounds %struct.RGBFloat, %struct.RGBFloat* %rgb32, i32 0, i32 1, !dbg !4402
  %44 = load float, float* %g, align 4, !dbg !4402
  %mul33 = fmul float %41, %44, !dbg !4403
  %call34 = call i64 @lrintf(float %mul33) #8, !dbg !4404
  %conv35 = trunc i64 %call34 to i8, !dbg !4404
  %45 = load i8*, i8** %lp, align 8, !dbg !4405
  %incdec.ptr36 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !4405
  store i8* %incdec.ptr36, i8** %lp, align 8, !dbg !4405
  store i8 %conv35, i8* %45, align 1, !dbg !4406
  %46 = load float, float* %mul, align 4, !dbg !4407
  %47 = load i32, i32* %x, align 4, !dbg !4408
  %idxprom37 = sext i32 %47 to i64, !dbg !4409
  %48 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !4409
  %arrayidx38 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %48, i64 %idxprom37, !dbg !4409
  %rgb39 = bitcast %union.ColorFloat* %arrayidx38 to %struct.RGBFloat*, !dbg !4410
  %b = getelementptr inbounds %struct.RGBFloat, %struct.RGBFloat* %rgb39, i32 0, i32 2, !dbg !4411
  %49 = load float, float* %b, align 4, !dbg !4411
  %mul40 = fmul float %46, %49, !dbg !4412
  %call41 = call i64 @lrintf(float %mul40) #8, !dbg !4413
  %conv42 = trunc i64 %call41 to i8, !dbg !4413
  %50 = load i8*, i8** %lp, align 8, !dbg !4414
  %incdec.ptr43 = getelementptr inbounds i8, i8* %50, i32 1, !dbg !4414
  store i8* %incdec.ptr43, i8** %lp, align 8, !dbg !4414
  store i8 %conv42, i8* %50, align 1, !dbg !4415
  br label %if.end

if.end:                                           ; preds = %cond.end, %if.then
  br label %for.inc, !dbg !4416

for.inc:                                          ; preds = %if.end
  %51 = load i32, i32* %x, align 4, !dbg !4417
  %inc = add nsw i32 %51, 1, !dbg !4417
  store i32 %inc, i32* %x, align 4, !dbg !4417
  br label %for.cond7, !dbg !4419, !llvm.loop !4420

for.end:                                          ; preds = %for.cond7
  br label %for.inc44, !dbg !4422

for.inc44:                                        ; preds = %for.end
  %52 = load i32, i32* %y, align 4, !dbg !4423
  %inc45 = add nsw i32 %52, 1, !dbg !4423
  store i32 %inc45, i32* %y, align 4, !dbg !4423
  br label %for.cond, !dbg !4425, !llvm.loop !4426

for.end46:                                        ; preds = %for.cond
  ret void, !dbg !4428
}

; Function Attrs: nounwind uwtable
define internal void @draw_axis_rgb(%struct.AVFrame* %out, %struct.AVFrame* %axis, %union.ColorFloat* %c, i32 %off) #1 !dbg !4429 {
entry:
  %out.addr = alloca %struct.AVFrame*, align 8
  %axis.addr = alloca %struct.AVFrame*, align 8
  %c.addr = alloca %union.ColorFloat*, align 8
  %off.addr = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %w = alloca i32, align 4
  %h = alloca i32, align 4
  %a = alloca float, align 4
  %rcp_255 = alloca float, align 4
  %lp = alloca i8*, align 8
  %lpa = alloca i8*, align 8
  store %struct.AVFrame* %out, %struct.AVFrame** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %out.addr, metadata !4430, metadata !820), !dbg !4431
  store %struct.AVFrame* %axis, %struct.AVFrame** %axis.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %axis.addr, metadata !4432, metadata !820), !dbg !4433
  store %union.ColorFloat* %c, %union.ColorFloat** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %union.ColorFloat** %c.addr, metadata !4434, metadata !820), !dbg !4435
  store i32 %off, i32* %off.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %off.addr, metadata !4436, metadata !820), !dbg !4437
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4438, metadata !820), !dbg !4439
  call void @llvm.dbg.declare(metadata i32* %y, metadata !4440, metadata !820), !dbg !4441
  call void @llvm.dbg.declare(metadata i32* %w, metadata !4442, metadata !820), !dbg !4443
  %0 = load %struct.AVFrame*, %struct.AVFrame** %axis.addr, align 8, !dbg !4444
  %width = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i32 0, i32 3, !dbg !4445
  %1 = load i32, i32* %width, align 8, !dbg !4445
  store i32 %1, i32* %w, align 4, !dbg !4443
  call void @llvm.dbg.declare(metadata i32* %h, metadata !4446, metadata !820), !dbg !4447
  %2 = load %struct.AVFrame*, %struct.AVFrame** %axis.addr, align 8, !dbg !4448
  %height = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %2, i32 0, i32 4, !dbg !4449
  %3 = load i32, i32* %height, align 4, !dbg !4449
  store i32 %3, i32* %h, align 4, !dbg !4447
  call void @llvm.dbg.declare(metadata float* %a, metadata !4450, metadata !820), !dbg !4451
  call void @llvm.dbg.declare(metadata float* %rcp_255, metadata !4452, metadata !820), !dbg !4453
  store float 0x3F70101020000000, float* %rcp_255, align 4, !dbg !4453
  call void @llvm.dbg.declare(metadata i8** %lp, metadata !4454, metadata !820), !dbg !4455
  call void @llvm.dbg.declare(metadata i8** %lpa, metadata !4456, metadata !820), !dbg !4457
  store i32 0, i32* %y, align 4, !dbg !4458
  br label %for.cond, !dbg !4460

for.cond:                                         ; preds = %for.inc85, %entry
  %4 = load i32, i32* %y, align 4, !dbg !4461
  %5 = load i32, i32* %h, align 4, !dbg !4464
  %cmp = icmp slt i32 %4, %5, !dbg !4465
  br i1 %cmp, label %for.body, label %for.end87, !dbg !4466

for.body:                                         ; preds = %for.cond
  %6 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4467
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %6, i32 0, i32 0, !dbg !4469
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 0, !dbg !4467
  %7 = load i8*, i8** %arrayidx, align 8, !dbg !4467
  %8 = load i32, i32* %off.addr, align 4, !dbg !4470
  %9 = load i32, i32* %y, align 4, !dbg !4471
  %add = add nsw i32 %8, %9, !dbg !4472
  %10 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4473
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %10, i32 0, i32 1, !dbg !4474
  %arrayidx1 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 0, !dbg !4473
  %11 = load i32, i32* %arrayidx1, align 8, !dbg !4473
  %mul = mul nsw i32 %add, %11, !dbg !4475
  %idx.ext = sext i32 %mul to i64, !dbg !4476
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %idx.ext, !dbg !4476
  store i8* %add.ptr, i8** %lp, align 8, !dbg !4477
  %12 = load %struct.AVFrame*, %struct.AVFrame** %axis.addr, align 8, !dbg !4478
  %data2 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %12, i32 0, i32 0, !dbg !4479
  %arrayidx3 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data2, i64 0, i64 0, !dbg !4478
  %13 = load i8*, i8** %arrayidx3, align 8, !dbg !4478
  %14 = load i32, i32* %y, align 4, !dbg !4480
  %15 = load %struct.AVFrame*, %struct.AVFrame** %axis.addr, align 8, !dbg !4481
  %linesize4 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %15, i32 0, i32 1, !dbg !4482
  %arrayidx5 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize4, i64 0, i64 0, !dbg !4481
  %16 = load i32, i32* %arrayidx5, align 8, !dbg !4481
  %mul6 = mul nsw i32 %14, %16, !dbg !4483
  %idx.ext7 = sext i32 %mul6 to i64, !dbg !4484
  %add.ptr8 = getelementptr inbounds i8, i8* %13, i64 %idx.ext7, !dbg !4484
  store i8* %add.ptr8, i8** %lpa, align 8, !dbg !4485
  store i32 0, i32* %x, align 4, !dbg !4486
  br label %for.cond9, !dbg !4488

for.cond9:                                        ; preds = %for.inc, %for.body
  %17 = load i32, i32* %x, align 4, !dbg !4489
  %18 = load i32, i32* %w, align 4, !dbg !4492
  %cmp10 = icmp slt i32 %17, %18, !dbg !4493
  br i1 %cmp10, label %for.body11, label %for.end, !dbg !4494

for.body11:                                       ; preds = %for.cond9
  %19 = load i8*, i8** %lpa, align 8, !dbg !4495
  %arrayidx12 = getelementptr inbounds i8, i8* %19, i64 3, !dbg !4495
  %20 = load i8, i8* %arrayidx12, align 1, !dbg !4495
  %tobool = icmp ne i8 %20, 0, !dbg !4495
  br i1 %tobool, label %if.else, label %if.then, !dbg !4498

if.then:                                          ; preds = %for.body11
  %21 = load i32, i32* %x, align 4, !dbg !4499
  %idxprom = sext i32 %21 to i64, !dbg !4501
  %22 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !4501
  %arrayidx13 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %22, i64 %idxprom, !dbg !4501
  %rgb = bitcast %union.ColorFloat* %arrayidx13 to %struct.RGBFloat*, !dbg !4502
  %r = getelementptr inbounds %struct.RGBFloat, %struct.RGBFloat* %rgb, i32 0, i32 0, !dbg !4503
  %23 = load float, float* %r, align 4, !dbg !4503
  %call = call i64 @lrintf(float %23) #8, !dbg !4504
  %conv = trunc i64 %call to i8, !dbg !4504
  %24 = load i8*, i8** %lp, align 8, !dbg !4505
  %incdec.ptr = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4505
  store i8* %incdec.ptr, i8** %lp, align 8, !dbg !4505
  store i8 %conv, i8* %24, align 1, !dbg !4506
  %25 = load i32, i32* %x, align 4, !dbg !4507
  %idxprom14 = sext i32 %25 to i64, !dbg !4508
  %26 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !4508
  %arrayidx15 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %26, i64 %idxprom14, !dbg !4508
  %rgb16 = bitcast %union.ColorFloat* %arrayidx15 to %struct.RGBFloat*, !dbg !4509
  %g = getelementptr inbounds %struct.RGBFloat, %struct.RGBFloat* %rgb16, i32 0, i32 1, !dbg !4510
  %27 = load float, float* %g, align 4, !dbg !4510
  %call17 = call i64 @lrintf(float %27) #8, !dbg !4511
  %conv18 = trunc i64 %call17 to i8, !dbg !4511
  %28 = load i8*, i8** %lp, align 8, !dbg !4512
  %incdec.ptr19 = getelementptr inbounds i8, i8* %28, i32 1, !dbg !4512
  store i8* %incdec.ptr19, i8** %lp, align 8, !dbg !4512
  store i8 %conv18, i8* %28, align 1, !dbg !4513
  %29 = load i32, i32* %x, align 4, !dbg !4514
  %idxprom20 = sext i32 %29 to i64, !dbg !4515
  %30 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !4515
  %arrayidx21 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %30, i64 %idxprom20, !dbg !4515
  %rgb22 = bitcast %union.ColorFloat* %arrayidx21 to %struct.RGBFloat*, !dbg !4516
  %b = getelementptr inbounds %struct.RGBFloat, %struct.RGBFloat* %rgb22, i32 0, i32 2, !dbg !4517
  %31 = load float, float* %b, align 4, !dbg !4517
  %call23 = call i64 @lrintf(float %31) #8, !dbg !4518
  %conv24 = trunc i64 %call23 to i8, !dbg !4518
  %32 = load i8*, i8** %lp, align 8, !dbg !4519
  %incdec.ptr25 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !4519
  store i8* %incdec.ptr25, i8** %lp, align 8, !dbg !4519
  store i8 %conv24, i8* %32, align 1, !dbg !4520
  br label %if.end83, !dbg !4521

if.else:                                          ; preds = %for.body11
  %33 = load i8*, i8** %lpa, align 8, !dbg !4522
  %arrayidx26 = getelementptr inbounds i8, i8* %33, i64 3, !dbg !4522
  %34 = load i8, i8* %arrayidx26, align 1, !dbg !4522
  %conv27 = zext i8 %34 to i32, !dbg !4522
  %cmp28 = icmp eq i32 %conv27, 255, !dbg !4525
  br i1 %cmp28, label %if.then30, label %if.else37, !dbg !4522

if.then30:                                        ; preds = %if.else
  %35 = load i8*, i8** %lpa, align 8, !dbg !4526
  %arrayidx31 = getelementptr inbounds i8, i8* %35, i64 0, !dbg !4526
  %36 = load i8, i8* %arrayidx31, align 1, !dbg !4526
  %37 = load i8*, i8** %lp, align 8, !dbg !4528
  %incdec.ptr32 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !4528
  store i8* %incdec.ptr32, i8** %lp, align 8, !dbg !4528
  store i8 %36, i8* %37, align 1, !dbg !4529
  %38 = load i8*, i8** %lpa, align 8, !dbg !4530
  %arrayidx33 = getelementptr inbounds i8, i8* %38, i64 1, !dbg !4530
  %39 = load i8, i8* %arrayidx33, align 1, !dbg !4530
  %40 = load i8*, i8** %lp, align 8, !dbg !4531
  %incdec.ptr34 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4531
  store i8* %incdec.ptr34, i8** %lp, align 8, !dbg !4531
  store i8 %39, i8* %40, align 1, !dbg !4532
  %41 = load i8*, i8** %lpa, align 8, !dbg !4533
  %arrayidx35 = getelementptr inbounds i8, i8* %41, i64 2, !dbg !4533
  %42 = load i8, i8* %arrayidx35, align 1, !dbg !4533
  %43 = load i8*, i8** %lp, align 8, !dbg !4534
  %incdec.ptr36 = getelementptr inbounds i8, i8* %43, i32 1, !dbg !4534
  store i8* %incdec.ptr36, i8** %lp, align 8, !dbg !4534
  store i8 %42, i8* %43, align 1, !dbg !4535
  br label %if.end, !dbg !4536

if.else37:                                        ; preds = %if.else
  %44 = load float, float* %rcp_255, align 4, !dbg !4537
  %45 = load i8*, i8** %lpa, align 8, !dbg !4539
  %arrayidx38 = getelementptr inbounds i8, i8* %45, i64 3, !dbg !4539
  %46 = load i8, i8* %arrayidx38, align 1, !dbg !4539
  %conv39 = zext i8 %46 to i32, !dbg !4539
  %conv40 = sitofp i32 %conv39 to float, !dbg !4539
  %mul41 = fmul float %44, %conv40, !dbg !4540
  store float %mul41, float* %a, align 4, !dbg !4541
  %47 = load float, float* %a, align 4, !dbg !4542
  %48 = load i8*, i8** %lpa, align 8, !dbg !4543
  %arrayidx42 = getelementptr inbounds i8, i8* %48, i64 0, !dbg !4543
  %49 = load i8, i8* %arrayidx42, align 1, !dbg !4543
  %conv43 = zext i8 %49 to i32, !dbg !4543
  %conv44 = sitofp i32 %conv43 to float, !dbg !4543
  %mul45 = fmul float %47, %conv44, !dbg !4544
  %50 = load float, float* %a, align 4, !dbg !4545
  %sub = fsub float 1.000000e+00, %50, !dbg !4546
  %51 = load i32, i32* %x, align 4, !dbg !4547
  %idxprom46 = sext i32 %51 to i64, !dbg !4548
  %52 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !4548
  %arrayidx47 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %52, i64 %idxprom46, !dbg !4548
  %rgb48 = bitcast %union.ColorFloat* %arrayidx47 to %struct.RGBFloat*, !dbg !4549
  %r49 = getelementptr inbounds %struct.RGBFloat, %struct.RGBFloat* %rgb48, i32 0, i32 0, !dbg !4550
  %53 = load float, float* %r49, align 4, !dbg !4550
  %mul50 = fmul float %sub, %53, !dbg !4551
  %add51 = fadd float %mul45, %mul50, !dbg !4552
  %call52 = call i64 @lrintf(float %add51) #8, !dbg !4553
  %conv53 = trunc i64 %call52 to i8, !dbg !4553
  %54 = load i8*, i8** %lp, align 8, !dbg !4554
  %incdec.ptr54 = getelementptr inbounds i8, i8* %54, i32 1, !dbg !4554
  store i8* %incdec.ptr54, i8** %lp, align 8, !dbg !4554
  store i8 %conv53, i8* %54, align 1, !dbg !4555
  %55 = load float, float* %a, align 4, !dbg !4556
  %56 = load i8*, i8** %lpa, align 8, !dbg !4557
  %arrayidx55 = getelementptr inbounds i8, i8* %56, i64 1, !dbg !4557
  %57 = load i8, i8* %arrayidx55, align 1, !dbg !4557
  %conv56 = zext i8 %57 to i32, !dbg !4557
  %conv57 = sitofp i32 %conv56 to float, !dbg !4557
  %mul58 = fmul float %55, %conv57, !dbg !4558
  %58 = load float, float* %a, align 4, !dbg !4559
  %sub59 = fsub float 1.000000e+00, %58, !dbg !4560
  %59 = load i32, i32* %x, align 4, !dbg !4561
  %idxprom60 = sext i32 %59 to i64, !dbg !4562
  %60 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !4562
  %arrayidx61 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %60, i64 %idxprom60, !dbg !4562
  %rgb62 = bitcast %union.ColorFloat* %arrayidx61 to %struct.RGBFloat*, !dbg !4563
  %g63 = getelementptr inbounds %struct.RGBFloat, %struct.RGBFloat* %rgb62, i32 0, i32 1, !dbg !4564
  %61 = load float, float* %g63, align 4, !dbg !4564
  %mul64 = fmul float %sub59, %61, !dbg !4565
  %add65 = fadd float %mul58, %mul64, !dbg !4566
  %call66 = call i64 @lrintf(float %add65) #8, !dbg !4567
  %conv67 = trunc i64 %call66 to i8, !dbg !4567
  %62 = load i8*, i8** %lp, align 8, !dbg !4568
  %incdec.ptr68 = getelementptr inbounds i8, i8* %62, i32 1, !dbg !4568
  store i8* %incdec.ptr68, i8** %lp, align 8, !dbg !4568
  store i8 %conv67, i8* %62, align 1, !dbg !4569
  %63 = load float, float* %a, align 4, !dbg !4570
  %64 = load i8*, i8** %lpa, align 8, !dbg !4571
  %arrayidx69 = getelementptr inbounds i8, i8* %64, i64 2, !dbg !4571
  %65 = load i8, i8* %arrayidx69, align 1, !dbg !4571
  %conv70 = zext i8 %65 to i32, !dbg !4571
  %conv71 = sitofp i32 %conv70 to float, !dbg !4571
  %mul72 = fmul float %63, %conv71, !dbg !4572
  %66 = load float, float* %a, align 4, !dbg !4573
  %sub73 = fsub float 1.000000e+00, %66, !dbg !4574
  %67 = load i32, i32* %x, align 4, !dbg !4575
  %idxprom74 = sext i32 %67 to i64, !dbg !4576
  %68 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !4576
  %arrayidx75 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %68, i64 %idxprom74, !dbg !4576
  %rgb76 = bitcast %union.ColorFloat* %arrayidx75 to %struct.RGBFloat*, !dbg !4577
  %b77 = getelementptr inbounds %struct.RGBFloat, %struct.RGBFloat* %rgb76, i32 0, i32 2, !dbg !4578
  %69 = load float, float* %b77, align 4, !dbg !4578
  %mul78 = fmul float %sub73, %69, !dbg !4579
  %add79 = fadd float %mul72, %mul78, !dbg !4580
  %call80 = call i64 @lrintf(float %add79) #8, !dbg !4581
  %conv81 = trunc i64 %call80 to i8, !dbg !4581
  %70 = load i8*, i8** %lp, align 8, !dbg !4582
  %incdec.ptr82 = getelementptr inbounds i8, i8* %70, i32 1, !dbg !4582
  store i8* %incdec.ptr82, i8** %lp, align 8, !dbg !4582
  store i8 %conv81, i8* %70, align 1, !dbg !4583
  br label %if.end

if.end:                                           ; preds = %if.else37, %if.then30
  br label %if.end83

if.end83:                                         ; preds = %if.end, %if.then
  %71 = load i8*, i8** %lpa, align 8, !dbg !4584
  %add.ptr84 = getelementptr inbounds i8, i8* %71, i64 4, !dbg !4584
  store i8* %add.ptr84, i8** %lpa, align 8, !dbg !4584
  br label %for.inc, !dbg !4585

for.inc:                                          ; preds = %if.end83
  %72 = load i32, i32* %x, align 4, !dbg !4586
  %inc = add nsw i32 %72, 1, !dbg !4586
  store i32 %inc, i32* %x, align 4, !dbg !4586
  br label %for.cond9, !dbg !4588, !llvm.loop !4589

for.end:                                          ; preds = %for.cond9
  br label %for.inc85, !dbg !4591

for.inc85:                                        ; preds = %for.end
  %73 = load i32, i32* %y, align 4, !dbg !4592
  %inc86 = add nsw i32 %73, 1, !dbg !4592
  store i32 %inc86, i32* %y, align 4, !dbg !4592
  br label %for.cond, !dbg !4594, !llvm.loop !4595

for.end87:                                        ; preds = %for.cond
  ret void, !dbg !4597
}

; Function Attrs: nounwind uwtable
define internal void @update_sono_rgb(%struct.AVFrame* %sono, %union.ColorFloat* %c, i32 %idx) #1 !dbg !4598 {
entry:
  %sono.addr = alloca %struct.AVFrame*, align 8
  %c.addr = alloca %union.ColorFloat*, align 8
  %idx.addr = alloca i32, align 4
  %x = alloca i32, align 4
  %w = alloca i32, align 4
  %lp = alloca i8*, align 8
  store %struct.AVFrame* %sono, %struct.AVFrame** %sono.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %sono.addr, metadata !4599, metadata !820), !dbg !4600
  store %union.ColorFloat* %c, %union.ColorFloat** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %union.ColorFloat** %c.addr, metadata !4601, metadata !820), !dbg !4602
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !4603, metadata !820), !dbg !4604
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4605, metadata !820), !dbg !4606
  call void @llvm.dbg.declare(metadata i32* %w, metadata !4607, metadata !820), !dbg !4608
  %0 = load %struct.AVFrame*, %struct.AVFrame** %sono.addr, align 8, !dbg !4609
  %width = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i32 0, i32 3, !dbg !4610
  %1 = load i32, i32* %width, align 8, !dbg !4610
  store i32 %1, i32* %w, align 4, !dbg !4608
  call void @llvm.dbg.declare(metadata i8** %lp, metadata !4611, metadata !820), !dbg !4612
  %2 = load %struct.AVFrame*, %struct.AVFrame** %sono.addr, align 8, !dbg !4613
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %2, i32 0, i32 0, !dbg !4614
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 0, !dbg !4613
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !4613
  %4 = load i32, i32* %idx.addr, align 4, !dbg !4615
  %5 = load %struct.AVFrame*, %struct.AVFrame** %sono.addr, align 8, !dbg !4616
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %5, i32 0, i32 1, !dbg !4617
  %arrayidx1 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 0, !dbg !4616
  %6 = load i32, i32* %arrayidx1, align 8, !dbg !4616
  %mul = mul nsw i32 %4, %6, !dbg !4618
  %idx.ext = sext i32 %mul to i64, !dbg !4619
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %idx.ext, !dbg !4619
  store i8* %add.ptr, i8** %lp, align 8, !dbg !4612
  store i32 0, i32* %x, align 4, !dbg !4620
  br label %for.cond, !dbg !4622

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %x, align 4, !dbg !4623
  %8 = load i32, i32* %w, align 4, !dbg !4626
  %cmp = icmp slt i32 %7, %8, !dbg !4627
  br i1 %cmp, label %for.body, label %for.end, !dbg !4628

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %x, align 4, !dbg !4629
  %idxprom = sext i32 %9 to i64, !dbg !4631
  %10 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !4631
  %arrayidx2 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %10, i64 %idxprom, !dbg !4631
  %rgb = bitcast %union.ColorFloat* %arrayidx2 to %struct.RGBFloat*, !dbg !4632
  %r = getelementptr inbounds %struct.RGBFloat, %struct.RGBFloat* %rgb, i32 0, i32 0, !dbg !4633
  %11 = load float, float* %r, align 4, !dbg !4633
  %call = call i64 @lrintf(float %11) #8, !dbg !4634
  %conv = trunc i64 %call to i8, !dbg !4634
  %12 = load i8*, i8** %lp, align 8, !dbg !4635
  %incdec.ptr = getelementptr inbounds i8, i8* %12, i32 1, !dbg !4635
  store i8* %incdec.ptr, i8** %lp, align 8, !dbg !4635
  store i8 %conv, i8* %12, align 1, !dbg !4636
  %13 = load i32, i32* %x, align 4, !dbg !4637
  %idxprom3 = sext i32 %13 to i64, !dbg !4638
  %14 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !4638
  %arrayidx4 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %14, i64 %idxprom3, !dbg !4638
  %rgb5 = bitcast %union.ColorFloat* %arrayidx4 to %struct.RGBFloat*, !dbg !4639
  %g = getelementptr inbounds %struct.RGBFloat, %struct.RGBFloat* %rgb5, i32 0, i32 1, !dbg !4640
  %15 = load float, float* %g, align 4, !dbg !4640
  %call6 = call i64 @lrintf(float %15) #8, !dbg !4641
  %conv7 = trunc i64 %call6 to i8, !dbg !4641
  %16 = load i8*, i8** %lp, align 8, !dbg !4642
  %incdec.ptr8 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !4642
  store i8* %incdec.ptr8, i8** %lp, align 8, !dbg !4642
  store i8 %conv7, i8* %16, align 1, !dbg !4643
  %17 = load i32, i32* %x, align 4, !dbg !4644
  %idxprom9 = sext i32 %17 to i64, !dbg !4645
  %18 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !4645
  %arrayidx10 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %18, i64 %idxprom9, !dbg !4645
  %rgb11 = bitcast %union.ColorFloat* %arrayidx10 to %struct.RGBFloat*, !dbg !4646
  %b = getelementptr inbounds %struct.RGBFloat, %struct.RGBFloat* %rgb11, i32 0, i32 2, !dbg !4647
  %19 = load float, float* %b, align 4, !dbg !4647
  %call12 = call i64 @lrintf(float %19) #8, !dbg !4648
  %conv13 = trunc i64 %call12 to i8, !dbg !4648
  %20 = load i8*, i8** %lp, align 8, !dbg !4649
  %incdec.ptr14 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !4649
  store i8* %incdec.ptr14, i8** %lp, align 8, !dbg !4649
  store i8 %conv13, i8* %20, align 1, !dbg !4650
  br label %for.inc, !dbg !4651

for.inc:                                          ; preds = %for.body
  %21 = load i32, i32* %x, align 4, !dbg !4652
  %inc = add nsw i32 %21, 1, !dbg !4652
  store i32 %inc, i32* %x, align 4, !dbg !4652
  br label %for.cond, !dbg !4654, !llvm.loop !4655

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4657
}

; Function Attrs: nounwind uwtable
define internal void @draw_bar_yuv(%struct.AVFrame* %out, float* %h, float* %rcp_h, %union.ColorFloat* %c, i32 %bar_h, float %bar_t) #1 !dbg !4658 {
entry:
  %out.addr = alloca %struct.AVFrame*, align 8
  %h.addr = alloca float*, align 8
  %rcp_h.addr = alloca float*, align 8
  %c.addr = alloca %union.ColorFloat*, align 8
  %bar_h.addr = alloca i32, align 4
  %bar_t.addr = alloca float, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %yh = alloca i32, align 4
  %w = alloca i32, align 4
  %mul = alloca float, align 4
  %ht = alloca float, align 4
  %rcp_bar_h = alloca float, align 4
  %rcp_bar_t = alloca float, align 4
  %vy = alloca i8*, align 8
  %vu = alloca i8*, align 8
  %vv = alloca i8*, align 8
  %lpy = alloca i8*, align 8
  %lpu = alloca i8*, align 8
  %lpv = alloca i8*, align 8
  %lsy = alloca i32, align 4
  %lsu = alloca i32, align 4
  %lsv = alloca i32, align 4
  %fmt = alloca i32, align 4
  store %struct.AVFrame* %out, %struct.AVFrame** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %out.addr, metadata !4659, metadata !820), !dbg !4660
  store float* %h, float** %h.addr, align 8
  call void @llvm.dbg.declare(metadata float** %h.addr, metadata !4661, metadata !820), !dbg !4662
  store float* %rcp_h, float** %rcp_h.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rcp_h.addr, metadata !4663, metadata !820), !dbg !4664
  store %union.ColorFloat* %c, %union.ColorFloat** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %union.ColorFloat** %c.addr, metadata !4665, metadata !820), !dbg !4666
  store i32 %bar_h, i32* %bar_h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bar_h.addr, metadata !4667, metadata !820), !dbg !4668
  store float %bar_t, float* %bar_t.addr, align 4
  call void @llvm.dbg.declare(metadata float* %bar_t.addr, metadata !4669, metadata !820), !dbg !4670
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4671, metadata !820), !dbg !4672
  call void @llvm.dbg.declare(metadata i32* %y, metadata !4673, metadata !820), !dbg !4674
  call void @llvm.dbg.declare(metadata i32* %yh, metadata !4675, metadata !820), !dbg !4676
  call void @llvm.dbg.declare(metadata i32* %w, metadata !4677, metadata !820), !dbg !4678
  %0 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4679
  %width = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i32 0, i32 3, !dbg !4680
  %1 = load i32, i32* %width, align 8, !dbg !4680
  store i32 %1, i32* %w, align 4, !dbg !4678
  call void @llvm.dbg.declare(metadata float* %mul, metadata !4681, metadata !820), !dbg !4682
  call void @llvm.dbg.declare(metadata float* %ht, metadata !4683, metadata !820), !dbg !4684
  call void @llvm.dbg.declare(metadata float* %rcp_bar_h, metadata !4685, metadata !820), !dbg !4686
  %2 = load i32, i32* %bar_h.addr, align 4, !dbg !4687
  %conv = sitofp i32 %2 to float, !dbg !4687
  %div = fdiv float 1.000000e+00, %conv, !dbg !4688
  store float %div, float* %rcp_bar_h, align 4, !dbg !4686
  call void @llvm.dbg.declare(metadata float* %rcp_bar_t, metadata !4689, metadata !820), !dbg !4690
  %3 = load float, float* %bar_t.addr, align 4, !dbg !4691
  %div1 = fdiv float 1.000000e+00, %3, !dbg !4692
  store float %div1, float* %rcp_bar_t, align 4, !dbg !4690
  call void @llvm.dbg.declare(metadata i8** %vy, metadata !4693, metadata !820), !dbg !4694
  %4 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4695
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %4, i32 0, i32 0, !dbg !4696
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 0, !dbg !4695
  %5 = load i8*, i8** %arrayidx, align 8, !dbg !4695
  store i8* %5, i8** %vy, align 8, !dbg !4694
  call void @llvm.dbg.declare(metadata i8** %vu, metadata !4697, metadata !820), !dbg !4698
  %6 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4699
  %data2 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %6, i32 0, i32 0, !dbg !4700
  %arrayidx3 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data2, i64 0, i64 1, !dbg !4699
  %7 = load i8*, i8** %arrayidx3, align 8, !dbg !4699
  store i8* %7, i8** %vu, align 8, !dbg !4698
  call void @llvm.dbg.declare(metadata i8** %vv, metadata !4701, metadata !820), !dbg !4702
  %8 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4703
  %data4 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %8, i32 0, i32 0, !dbg !4704
  %arrayidx5 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data4, i64 0, i64 2, !dbg !4703
  %9 = load i8*, i8** %arrayidx5, align 8, !dbg !4703
  store i8* %9, i8** %vv, align 8, !dbg !4702
  call void @llvm.dbg.declare(metadata i8** %lpy, metadata !4705, metadata !820), !dbg !4706
  call void @llvm.dbg.declare(metadata i8** %lpu, metadata !4707, metadata !820), !dbg !4708
  call void @llvm.dbg.declare(metadata i8** %lpv, metadata !4709, metadata !820), !dbg !4710
  call void @llvm.dbg.declare(metadata i32* %lsy, metadata !4711, metadata !820), !dbg !4712
  %10 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4713
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %10, i32 0, i32 1, !dbg !4714
  %arrayidx6 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 0, !dbg !4713
  %11 = load i32, i32* %arrayidx6, align 8, !dbg !4713
  store i32 %11, i32* %lsy, align 4, !dbg !4712
  call void @llvm.dbg.declare(metadata i32* %lsu, metadata !4715, metadata !820), !dbg !4716
  %12 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4717
  %linesize7 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %12, i32 0, i32 1, !dbg !4718
  %arrayidx8 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize7, i64 0, i64 1, !dbg !4717
  %13 = load i32, i32* %arrayidx8, align 4, !dbg !4717
  store i32 %13, i32* %lsu, align 4, !dbg !4716
  call void @llvm.dbg.declare(metadata i32* %lsv, metadata !4719, metadata !820), !dbg !4720
  %14 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4721
  %linesize9 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %14, i32 0, i32 1, !dbg !4722
  %arrayidx10 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize9, i64 0, i64 2, !dbg !4721
  %15 = load i32, i32* %arrayidx10, align 8, !dbg !4721
  store i32 %15, i32* %lsv, align 4, !dbg !4720
  call void @llvm.dbg.declare(metadata i32* %fmt, metadata !4723, metadata !820), !dbg !4724
  %16 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4725
  %format = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %16, i32 0, i32 6, !dbg !4726
  %17 = load i32, i32* %format, align 4, !dbg !4726
  store i32 %17, i32* %fmt, align 4, !dbg !4724
  store i32 0, i32* %y, align 4, !dbg !4727
  br label %for.cond, !dbg !4729

for.cond:                                         ; preds = %for.inc540, %entry
  %18 = load i32, i32* %y, align 4, !dbg !4730
  %19 = load i32, i32* %bar_h.addr, align 4, !dbg !4733
  %cmp = icmp slt i32 %18, %19, !dbg !4734
  br i1 %cmp, label %for.body, label %for.end542, !dbg !4735

for.body:                                         ; preds = %for.cond
  %20 = load i32, i32* %fmt, align 4, !dbg !4736
  %cmp12 = icmp eq i32 %20, 0, !dbg !4738
  br i1 %cmp12, label %cond.true, label %cond.false, !dbg !4739

cond.true:                                        ; preds = %for.body
  %21 = load i32, i32* %y, align 4, !dbg !4740
  %div14 = sdiv i32 %21, 2, !dbg !4742
  br label %cond.end, !dbg !4743

cond.false:                                       ; preds = %for.body
  %22 = load i32, i32* %y, align 4, !dbg !4744
  br label %cond.end, !dbg !4746

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %div14, %cond.true ], [ %22, %cond.false ], !dbg !4747
  store i32 %cond, i32* %yh, align 4, !dbg !4749
  %23 = load i32, i32* %bar_h.addr, align 4, !dbg !4750
  %24 = load i32, i32* %y, align 4, !dbg !4751
  %sub = sub nsw i32 %23, %24, !dbg !4752
  %conv15 = sitofp i32 %sub to float, !dbg !4753
  %25 = load float, float* %rcp_bar_h, align 4, !dbg !4754
  %mul16 = fmul float %conv15, %25, !dbg !4755
  store float %mul16, float* %ht, align 4, !dbg !4756
  %26 = load i8*, i8** %vy, align 8, !dbg !4757
  %27 = load i32, i32* %y, align 4, !dbg !4758
  %28 = load i32, i32* %lsy, align 4, !dbg !4759
  %mul17 = mul nsw i32 %27, %28, !dbg !4760
  %idx.ext = sext i32 %mul17 to i64, !dbg !4761
  %add.ptr = getelementptr inbounds i8, i8* %26, i64 %idx.ext, !dbg !4761
  store i8* %add.ptr, i8** %lpy, align 8, !dbg !4762
  %29 = load i8*, i8** %vu, align 8, !dbg !4763
  %30 = load i32, i32* %yh, align 4, !dbg !4764
  %31 = load i32, i32* %lsu, align 4, !dbg !4765
  %mul18 = mul nsw i32 %30, %31, !dbg !4766
  %idx.ext19 = sext i32 %mul18 to i64, !dbg !4767
  %add.ptr20 = getelementptr inbounds i8, i8* %29, i64 %idx.ext19, !dbg !4767
  store i8* %add.ptr20, i8** %lpu, align 8, !dbg !4768
  %32 = load i8*, i8** %vv, align 8, !dbg !4769
  %33 = load i32, i32* %yh, align 4, !dbg !4770
  %34 = load i32, i32* %lsv, align 4, !dbg !4771
  %mul21 = mul nsw i32 %33, %34, !dbg !4772
  %idx.ext22 = sext i32 %mul21 to i64, !dbg !4773
  %add.ptr23 = getelementptr inbounds i8, i8* %32, i64 %idx.ext22, !dbg !4773
  store i8* %add.ptr23, i8** %lpv, align 8, !dbg !4774
  %35 = load i32, i32* %fmt, align 4, !dbg !4775
  %cmp24 = icmp eq i32 %35, 5, !dbg !4777
  br i1 %cmp24, label %if.then, label %if.else130, !dbg !4778

if.then:                                          ; preds = %cond.end
  store i32 0, i32* %x, align 4, !dbg !4779
  br label %for.cond26, !dbg !4782

for.cond26:                                       ; preds = %for.inc, %if.then
  %36 = load i32, i32* %x, align 4, !dbg !4783
  %37 = load i32, i32* %w, align 4, !dbg !4786
  %cmp27 = icmp slt i32 %36, %37, !dbg !4787
  br i1 %cmp27, label %for.body29, label %for.end, !dbg !4788

for.body29:                                       ; preds = %for.cond26
  br label %do.body, !dbg !4789, !llvm.loop !4791

do.body:                                          ; preds = %for.body29
  %38 = load i32, i32* %x, align 4, !dbg !4792
  %idxprom = sext i32 %38 to i64, !dbg !4796
  %39 = load float*, float** %h.addr, align 8, !dbg !4796
  %arrayidx30 = getelementptr inbounds float, float* %39, i64 %idxprom, !dbg !4796
  %40 = load float, float* %arrayidx30, align 4, !dbg !4796
  %41 = load float, float* %ht, align 4, !dbg !4797
  %cmp31 = fcmp ole float %40, %41, !dbg !4798
  br i1 %cmp31, label %if.then33, label %if.else, !dbg !4796

if.then33:                                        ; preds = %do.body
  %42 = load i8*, i8** %lpy, align 8, !dbg !4799
  %incdec.ptr = getelementptr inbounds i8, i8* %42, i32 1, !dbg !4799
  store i8* %incdec.ptr, i8** %lpy, align 8, !dbg !4799
  store i8 16, i8* %42, align 1, !dbg !4802
  %43 = load i8*, i8** %lpu, align 8, !dbg !4803
  %incdec.ptr34 = getelementptr inbounds i8, i8* %43, i32 1, !dbg !4803
  store i8* %incdec.ptr34, i8** %lpu, align 8, !dbg !4803
  store i8 -128, i8* %43, align 1, !dbg !4804
  %44 = load i8*, i8** %lpv, align 8, !dbg !4805
  %incdec.ptr35 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !4805
  store i8* %incdec.ptr35, i8** %lpv, align 8, !dbg !4805
  store i8 -128, i8* %44, align 1, !dbg !4806
  br label %if.end, !dbg !4807

if.else:                                          ; preds = %do.body
  %45 = load i32, i32* %x, align 4, !dbg !4808
  %idxprom36 = sext i32 %45 to i64, !dbg !4811
  %46 = load float*, float** %h.addr, align 8, !dbg !4811
  %arrayidx37 = getelementptr inbounds float, float* %46, i64 %idxprom36, !dbg !4811
  %47 = load float, float* %arrayidx37, align 4, !dbg !4811
  %48 = load float, float* %ht, align 4, !dbg !4812
  %sub38 = fsub float %47, %48, !dbg !4813
  %49 = load i32, i32* %x, align 4, !dbg !4814
  %idxprom39 = sext i32 %49 to i64, !dbg !4815
  %50 = load float*, float** %rcp_h.addr, align 8, !dbg !4815
  %arrayidx40 = getelementptr inbounds float, float* %50, i64 %idxprom39, !dbg !4815
  %51 = load float, float* %arrayidx40, align 4, !dbg !4815
  %mul41 = fmul float %sub38, %51, !dbg !4816
  store float %mul41, float* %mul, align 4, !dbg !4817
  %52 = load float, float* %mul, align 4, !dbg !4818
  %53 = load float, float* %bar_t.addr, align 4, !dbg !4819
  %cmp42 = fcmp olt float %52, %53, !dbg !4820
  br i1 %cmp42, label %cond.true44, label %cond.false46, !dbg !4821

cond.true44:                                      ; preds = %if.else
  %54 = load float, float* %mul, align 4, !dbg !4822
  %55 = load float, float* %rcp_bar_t, align 4, !dbg !4824
  %mul45 = fmul float %54, %55, !dbg !4825
  br label %cond.end47, !dbg !4826

cond.false46:                                     ; preds = %if.else
  br label %cond.end47, !dbg !4827

cond.end47:                                       ; preds = %cond.false46, %cond.true44
  %cond48 = phi float [ %mul45, %cond.true44 ], [ 1.000000e+00, %cond.false46 ], !dbg !4829
  store float %cond48, float* %mul, align 4, !dbg !4831
  %56 = load float, float* %mul, align 4, !dbg !4832
  %57 = load i32, i32* %x, align 4, !dbg !4833
  %idxprom49 = sext i32 %57 to i64, !dbg !4834
  %58 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !4834
  %arrayidx50 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %58, i64 %idxprom49, !dbg !4834
  %yuv = bitcast %union.ColorFloat* %arrayidx50 to %struct.YUVFloat*, !dbg !4835
  %y51 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv, i32 0, i32 0, !dbg !4836
  %59 = load float, float* %y51, align 4, !dbg !4836
  %mul52 = fmul float %56, %59, !dbg !4837
  %add = fadd float %mul52, 1.600000e+01, !dbg !4838
  %call = call i64 @lrintf(float %add) #8, !dbg !4839
  %conv53 = trunc i64 %call to i8, !dbg !4839
  %60 = load i8*, i8** %lpy, align 8, !dbg !4840
  %incdec.ptr54 = getelementptr inbounds i8, i8* %60, i32 1, !dbg !4840
  store i8* %incdec.ptr54, i8** %lpy, align 8, !dbg !4840
  store i8 %conv53, i8* %60, align 1, !dbg !4841
  %61 = load float, float* %mul, align 4, !dbg !4842
  %62 = load i32, i32* %x, align 4, !dbg !4843
  %idxprom55 = sext i32 %62 to i64, !dbg !4844
  %63 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !4844
  %arrayidx56 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %63, i64 %idxprom55, !dbg !4844
  %yuv57 = bitcast %union.ColorFloat* %arrayidx56 to %struct.YUVFloat*, !dbg !4845
  %u = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv57, i32 0, i32 1, !dbg !4846
  %64 = load float, float* %u, align 4, !dbg !4846
  %mul58 = fmul float %61, %64, !dbg !4847
  %add59 = fadd float %mul58, 1.280000e+02, !dbg !4848
  %call60 = call i64 @lrintf(float %add59) #8, !dbg !4849
  %conv61 = trunc i64 %call60 to i8, !dbg !4851
  %65 = load i8*, i8** %lpu, align 8, !dbg !4852
  %incdec.ptr62 = getelementptr inbounds i8, i8* %65, i32 1, !dbg !4852
  store i8* %incdec.ptr62, i8** %lpu, align 8, !dbg !4852
  store i8 %conv61, i8* %65, align 1, !dbg !4853
  %66 = load float, float* %mul, align 4, !dbg !4854
  %67 = load i32, i32* %x, align 4, !dbg !4855
  %idxprom63 = sext i32 %67 to i64, !dbg !4856
  %68 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !4856
  %arrayidx64 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %68, i64 %idxprom63, !dbg !4856
  %yuv65 = bitcast %union.ColorFloat* %arrayidx64 to %struct.YUVFloat*, !dbg !4857
  %v = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv65, i32 0, i32 2, !dbg !4858
  %69 = load float, float* %v, align 4, !dbg !4858
  %mul66 = fmul float %66, %69, !dbg !4859
  %add67 = fadd float %mul66, 1.280000e+02, !dbg !4860
  %call68 = call i64 @lrintf(float %add67) #8, !dbg !4861
  %conv69 = trunc i64 %call68 to i8, !dbg !4863
  %70 = load i8*, i8** %lpv, align 8, !dbg !4864
  %incdec.ptr70 = getelementptr inbounds i8, i8* %70, i32 1, !dbg !4864
  store i8* %incdec.ptr70, i8** %lpv, align 8, !dbg !4864
  store i8 %conv69, i8* %70, align 1, !dbg !4865
  br label %if.end

if.end:                                           ; preds = %cond.end47, %if.then33
  br label %do.end, !dbg !4866

do.end:                                           ; preds = %if.end
  br label %do.body71, !dbg !4868, !llvm.loop !4869

do.body71:                                        ; preds = %do.end
  %71 = load i32, i32* %x, align 4, !dbg !4870
  %add72 = add nsw i32 %71, 1, !dbg !4874
  %idxprom73 = sext i32 %add72 to i64, !dbg !4875
  %72 = load float*, float** %h.addr, align 8, !dbg !4875
  %arrayidx74 = getelementptr inbounds float, float* %72, i64 %idxprom73, !dbg !4875
  %73 = load float, float* %arrayidx74, align 4, !dbg !4875
  %74 = load float, float* %ht, align 4, !dbg !4876
  %cmp75 = fcmp ole float %73, %74, !dbg !4877
  br i1 %cmp75, label %if.then77, label %if.else81, !dbg !4875

if.then77:                                        ; preds = %do.body71
  %75 = load i8*, i8** %lpy, align 8, !dbg !4878
  %incdec.ptr78 = getelementptr inbounds i8, i8* %75, i32 1, !dbg !4878
  store i8* %incdec.ptr78, i8** %lpy, align 8, !dbg !4878
  store i8 16, i8* %75, align 1, !dbg !4881
  %76 = load i8*, i8** %lpu, align 8, !dbg !4882
  %incdec.ptr79 = getelementptr inbounds i8, i8* %76, i32 1, !dbg !4882
  store i8* %incdec.ptr79, i8** %lpu, align 8, !dbg !4882
  store i8 -128, i8* %76, align 1, !dbg !4883
  %77 = load i8*, i8** %lpv, align 8, !dbg !4884
  %incdec.ptr80 = getelementptr inbounds i8, i8* %77, i32 1, !dbg !4884
  store i8* %incdec.ptr80, i8** %lpv, align 8, !dbg !4884
  store i8 -128, i8* %77, align 1, !dbg !4885
  br label %if.end127, !dbg !4886

if.else81:                                        ; preds = %do.body71
  %78 = load i32, i32* %x, align 4, !dbg !4887
  %add82 = add nsw i32 %78, 1, !dbg !4890
  %idxprom83 = sext i32 %add82 to i64, !dbg !4891
  %79 = load float*, float** %h.addr, align 8, !dbg !4891
  %arrayidx84 = getelementptr inbounds float, float* %79, i64 %idxprom83, !dbg !4891
  %80 = load float, float* %arrayidx84, align 4, !dbg !4891
  %81 = load float, float* %ht, align 4, !dbg !4892
  %sub85 = fsub float %80, %81, !dbg !4893
  %82 = load i32, i32* %x, align 4, !dbg !4894
  %add86 = add nsw i32 %82, 1, !dbg !4895
  %idxprom87 = sext i32 %add86 to i64, !dbg !4896
  %83 = load float*, float** %rcp_h.addr, align 8, !dbg !4896
  %arrayidx88 = getelementptr inbounds float, float* %83, i64 %idxprom87, !dbg !4896
  %84 = load float, float* %arrayidx88, align 4, !dbg !4896
  %mul89 = fmul float %sub85, %84, !dbg !4897
  store float %mul89, float* %mul, align 4, !dbg !4898
  %85 = load float, float* %mul, align 4, !dbg !4899
  %86 = load float, float* %bar_t.addr, align 4, !dbg !4900
  %cmp90 = fcmp olt float %85, %86, !dbg !4901
  br i1 %cmp90, label %cond.true92, label %cond.false94, !dbg !4902

cond.true92:                                      ; preds = %if.else81
  %87 = load float, float* %mul, align 4, !dbg !4903
  %88 = load float, float* %rcp_bar_t, align 4, !dbg !4905
  %mul93 = fmul float %87, %88, !dbg !4906
  br label %cond.end95, !dbg !4907

cond.false94:                                     ; preds = %if.else81
  br label %cond.end95, !dbg !4908

cond.end95:                                       ; preds = %cond.false94, %cond.true92
  %cond96 = phi float [ %mul93, %cond.true92 ], [ 1.000000e+00, %cond.false94 ], !dbg !4910
  store float %cond96, float* %mul, align 4, !dbg !4912
  %89 = load float, float* %mul, align 4, !dbg !4913
  %90 = load i32, i32* %x, align 4, !dbg !4914
  %add97 = add nsw i32 %90, 1, !dbg !4915
  %idxprom98 = sext i32 %add97 to i64, !dbg !4916
  %91 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !4916
  %arrayidx99 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %91, i64 %idxprom98, !dbg !4916
  %yuv100 = bitcast %union.ColorFloat* %arrayidx99 to %struct.YUVFloat*, !dbg !4917
  %y101 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv100, i32 0, i32 0, !dbg !4918
  %92 = load float, float* %y101, align 4, !dbg !4918
  %mul102 = fmul float %89, %92, !dbg !4919
  %add103 = fadd float %mul102, 1.600000e+01, !dbg !4920
  %call104 = call i64 @lrintf(float %add103) #8, !dbg !4921
  %conv105 = trunc i64 %call104 to i8, !dbg !4921
  %93 = load i8*, i8** %lpy, align 8, !dbg !4922
  %incdec.ptr106 = getelementptr inbounds i8, i8* %93, i32 1, !dbg !4922
  store i8* %incdec.ptr106, i8** %lpy, align 8, !dbg !4922
  store i8 %conv105, i8* %93, align 1, !dbg !4923
  %94 = load float, float* %mul, align 4, !dbg !4924
  %95 = load i32, i32* %x, align 4, !dbg !4925
  %add107 = add nsw i32 %95, 1, !dbg !4926
  %idxprom108 = sext i32 %add107 to i64, !dbg !4927
  %96 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !4927
  %arrayidx109 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %96, i64 %idxprom108, !dbg !4927
  %yuv110 = bitcast %union.ColorFloat* %arrayidx109 to %struct.YUVFloat*, !dbg !4928
  %u111 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv110, i32 0, i32 1, !dbg !4929
  %97 = load float, float* %u111, align 4, !dbg !4929
  %mul112 = fmul float %94, %97, !dbg !4930
  %add113 = fadd float %mul112, 1.280000e+02, !dbg !4931
  %call114 = call i64 @lrintf(float %add113) #8, !dbg !4932
  %conv115 = trunc i64 %call114 to i8, !dbg !4934
  %98 = load i8*, i8** %lpu, align 8, !dbg !4935
  %incdec.ptr116 = getelementptr inbounds i8, i8* %98, i32 1, !dbg !4935
  store i8* %incdec.ptr116, i8** %lpu, align 8, !dbg !4935
  store i8 %conv115, i8* %98, align 1, !dbg !4936
  %99 = load float, float* %mul, align 4, !dbg !4937
  %100 = load i32, i32* %x, align 4, !dbg !4938
  %add117 = add nsw i32 %100, 1, !dbg !4939
  %idxprom118 = sext i32 %add117 to i64, !dbg !4940
  %101 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !4940
  %arrayidx119 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %101, i64 %idxprom118, !dbg !4940
  %yuv120 = bitcast %union.ColorFloat* %arrayidx119 to %struct.YUVFloat*, !dbg !4941
  %v121 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv120, i32 0, i32 2, !dbg !4942
  %102 = load float, float* %v121, align 4, !dbg !4942
  %mul122 = fmul float %99, %102, !dbg !4943
  %add123 = fadd float %mul122, 1.280000e+02, !dbg !4944
  %call124 = call i64 @lrintf(float %add123) #8, !dbg !4945
  %conv125 = trunc i64 %call124 to i8, !dbg !4947
  %103 = load i8*, i8** %lpv, align 8, !dbg !4948
  %incdec.ptr126 = getelementptr inbounds i8, i8* %103, i32 1, !dbg !4948
  store i8* %incdec.ptr126, i8** %lpv, align 8, !dbg !4948
  store i8 %conv125, i8* %103, align 1, !dbg !4949
  br label %if.end127

if.end127:                                        ; preds = %cond.end95, %if.then77
  br label %do.end128, !dbg !4950

do.end128:                                        ; preds = %if.end127
  br label %for.inc, !dbg !4952

for.inc:                                          ; preds = %do.end128
  %104 = load i32, i32* %x, align 4, !dbg !4953
  %add129 = add nsw i32 %104, 2, !dbg !4953
  store i32 %add129, i32* %x, align 4, !dbg !4953
  br label %for.cond26, !dbg !4955, !llvm.loop !4956

for.end:                                          ; preds = %for.cond26
  br label %if.end226, !dbg !4958

if.else130:                                       ; preds = %cond.end
  store i32 0, i32* %x, align 4, !dbg !4959
  br label %for.cond131, !dbg !4962

for.cond131:                                      ; preds = %for.inc223, %if.else130
  %105 = load i32, i32* %x, align 4, !dbg !4963
  %106 = load i32, i32* %w, align 4, !dbg !4966
  %cmp132 = icmp slt i32 %105, %106, !dbg !4967
  br i1 %cmp132, label %for.body134, label %for.end225, !dbg !4968

for.body134:                                      ; preds = %for.cond131
  br label %do.body135, !dbg !4969, !llvm.loop !4971

do.body135:                                       ; preds = %for.body134
  %107 = load i32, i32* %x, align 4, !dbg !4972
  %idxprom136 = sext i32 %107 to i64, !dbg !4976
  %108 = load float*, float** %h.addr, align 8, !dbg !4976
  %arrayidx137 = getelementptr inbounds float, float* %108, i64 %idxprom136, !dbg !4976
  %109 = load float, float* %arrayidx137, align 4, !dbg !4976
  %110 = load float, float* %ht, align 4, !dbg !4977
  %cmp138 = fcmp ole float %109, %110, !dbg !4978
  br i1 %cmp138, label %if.then140, label %if.else144, !dbg !4976

if.then140:                                       ; preds = %do.body135
  %111 = load i8*, i8** %lpy, align 8, !dbg !4979
  %incdec.ptr141 = getelementptr inbounds i8, i8* %111, i32 1, !dbg !4979
  store i8* %incdec.ptr141, i8** %lpy, align 8, !dbg !4979
  store i8 16, i8* %111, align 1, !dbg !4982
  %112 = load i8*, i8** %lpu, align 8, !dbg !4983
  %incdec.ptr142 = getelementptr inbounds i8, i8* %112, i32 1, !dbg !4983
  store i8* %incdec.ptr142, i8** %lpu, align 8, !dbg !4983
  store i8 -128, i8* %112, align 1, !dbg !4984
  %113 = load i8*, i8** %lpv, align 8, !dbg !4985
  %incdec.ptr143 = getelementptr inbounds i8, i8* %113, i32 1, !dbg !4985
  store i8* %incdec.ptr143, i8** %lpv, align 8, !dbg !4985
  store i8 -128, i8* %113, align 1, !dbg !4986
  br label %if.end185, !dbg !4987

if.else144:                                       ; preds = %do.body135
  %114 = load i32, i32* %x, align 4, !dbg !4988
  %idxprom145 = sext i32 %114 to i64, !dbg !4991
  %115 = load float*, float** %h.addr, align 8, !dbg !4991
  %arrayidx146 = getelementptr inbounds float, float* %115, i64 %idxprom145, !dbg !4991
  %116 = load float, float* %arrayidx146, align 4, !dbg !4991
  %117 = load float, float* %ht, align 4, !dbg !4992
  %sub147 = fsub float %116, %117, !dbg !4993
  %118 = load i32, i32* %x, align 4, !dbg !4994
  %idxprom148 = sext i32 %118 to i64, !dbg !4995
  %119 = load float*, float** %rcp_h.addr, align 8, !dbg !4995
  %arrayidx149 = getelementptr inbounds float, float* %119, i64 %idxprom148, !dbg !4995
  %120 = load float, float* %arrayidx149, align 4, !dbg !4995
  %mul150 = fmul float %sub147, %120, !dbg !4996
  store float %mul150, float* %mul, align 4, !dbg !4997
  %121 = load float, float* %mul, align 4, !dbg !4998
  %122 = load float, float* %bar_t.addr, align 4, !dbg !4999
  %cmp151 = fcmp olt float %121, %122, !dbg !5000
  br i1 %cmp151, label %cond.true153, label %cond.false155, !dbg !5001

cond.true153:                                     ; preds = %if.else144
  %123 = load float, float* %mul, align 4, !dbg !5002
  %124 = load float, float* %rcp_bar_t, align 4, !dbg !5004
  %mul154 = fmul float %123, %124, !dbg !5005
  br label %cond.end156, !dbg !5006

cond.false155:                                    ; preds = %if.else144
  br label %cond.end156, !dbg !5007

cond.end156:                                      ; preds = %cond.false155, %cond.true153
  %cond157 = phi float [ %mul154, %cond.true153 ], [ 1.000000e+00, %cond.false155 ], !dbg !5009
  store float %cond157, float* %mul, align 4, !dbg !5011
  %125 = load float, float* %mul, align 4, !dbg !5012
  %126 = load i32, i32* %x, align 4, !dbg !5013
  %idxprom158 = sext i32 %126 to i64, !dbg !5014
  %127 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !5014
  %arrayidx159 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %127, i64 %idxprom158, !dbg !5014
  %yuv160 = bitcast %union.ColorFloat* %arrayidx159 to %struct.YUVFloat*, !dbg !5015
  %y161 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv160, i32 0, i32 0, !dbg !5016
  %128 = load float, float* %y161, align 4, !dbg !5016
  %mul162 = fmul float %125, %128, !dbg !5017
  %add163 = fadd float %mul162, 1.600000e+01, !dbg !5018
  %call164 = call i64 @lrintf(float %add163) #8, !dbg !5019
  %conv165 = trunc i64 %call164 to i8, !dbg !5019
  %129 = load i8*, i8** %lpy, align 8, !dbg !5020
  %incdec.ptr166 = getelementptr inbounds i8, i8* %129, i32 1, !dbg !5020
  store i8* %incdec.ptr166, i8** %lpy, align 8, !dbg !5020
  store i8 %conv165, i8* %129, align 1, !dbg !5021
  %130 = load float, float* %mul, align 4, !dbg !5022
  %131 = load i32, i32* %x, align 4, !dbg !5023
  %idxprom167 = sext i32 %131 to i64, !dbg !5024
  %132 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !5024
  %arrayidx168 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %132, i64 %idxprom167, !dbg !5024
  %yuv169 = bitcast %union.ColorFloat* %arrayidx168 to %struct.YUVFloat*, !dbg !5025
  %u170 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv169, i32 0, i32 1, !dbg !5026
  %133 = load float, float* %u170, align 4, !dbg !5026
  %mul171 = fmul float %130, %133, !dbg !5027
  %add172 = fadd float %mul171, 1.280000e+02, !dbg !5028
  %call173 = call i64 @lrintf(float %add172) #8, !dbg !5029
  %conv174 = trunc i64 %call173 to i8, !dbg !5031
  %134 = load i8*, i8** %lpu, align 8, !dbg !5032
  %incdec.ptr175 = getelementptr inbounds i8, i8* %134, i32 1, !dbg !5032
  store i8* %incdec.ptr175, i8** %lpu, align 8, !dbg !5032
  store i8 %conv174, i8* %134, align 1, !dbg !5033
  %135 = load float, float* %mul, align 4, !dbg !5034
  %136 = load i32, i32* %x, align 4, !dbg !5035
  %idxprom176 = sext i32 %136 to i64, !dbg !5036
  %137 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !5036
  %arrayidx177 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %137, i64 %idxprom176, !dbg !5036
  %yuv178 = bitcast %union.ColorFloat* %arrayidx177 to %struct.YUVFloat*, !dbg !5037
  %v179 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv178, i32 0, i32 2, !dbg !5038
  %138 = load float, float* %v179, align 4, !dbg !5038
  %mul180 = fmul float %135, %138, !dbg !5039
  %add181 = fadd float %mul180, 1.280000e+02, !dbg !5040
  %call182 = call i64 @lrintf(float %add181) #8, !dbg !5041
  %conv183 = trunc i64 %call182 to i8, !dbg !5043
  %139 = load i8*, i8** %lpv, align 8, !dbg !5044
  %incdec.ptr184 = getelementptr inbounds i8, i8* %139, i32 1, !dbg !5044
  store i8* %incdec.ptr184, i8** %lpv, align 8, !dbg !5044
  store i8 %conv183, i8* %139, align 1, !dbg !5045
  br label %if.end185

if.end185:                                        ; preds = %cond.end156, %if.then140
  br label %do.end186, !dbg !5046

do.end186:                                        ; preds = %if.end185
  br label %do.body187, !dbg !5048, !llvm.loop !5049

do.body187:                                       ; preds = %do.end186
  %140 = load i32, i32* %x, align 4, !dbg !5050
  %add188 = add nsw i32 %140, 1, !dbg !5054
  %idxprom189 = sext i32 %add188 to i64, !dbg !5055
  %141 = load float*, float** %h.addr, align 8, !dbg !5055
  %arrayidx190 = getelementptr inbounds float, float* %141, i64 %idxprom189, !dbg !5055
  %142 = load float, float* %arrayidx190, align 4, !dbg !5055
  %143 = load float, float* %ht, align 4, !dbg !5056
  %cmp191 = fcmp ole float %142, %143, !dbg !5057
  br i1 %cmp191, label %if.then193, label %if.else195, !dbg !5055

if.then193:                                       ; preds = %do.body187
  %144 = load i8*, i8** %lpy, align 8, !dbg !5058
  %incdec.ptr194 = getelementptr inbounds i8, i8* %144, i32 1, !dbg !5058
  store i8* %incdec.ptr194, i8** %lpy, align 8, !dbg !5058
  store i8 16, i8* %144, align 1, !dbg !5061
  br label %if.end221, !dbg !5062

if.else195:                                       ; preds = %do.body187
  %145 = load i32, i32* %x, align 4, !dbg !5063
  %add196 = add nsw i32 %145, 1, !dbg !5066
  %idxprom197 = sext i32 %add196 to i64, !dbg !5067
  %146 = load float*, float** %h.addr, align 8, !dbg !5067
  %arrayidx198 = getelementptr inbounds float, float* %146, i64 %idxprom197, !dbg !5067
  %147 = load float, float* %arrayidx198, align 4, !dbg !5067
  %148 = load float, float* %ht, align 4, !dbg !5068
  %sub199 = fsub float %147, %148, !dbg !5069
  %149 = load i32, i32* %x, align 4, !dbg !5070
  %add200 = add nsw i32 %149, 1, !dbg !5071
  %idxprom201 = sext i32 %add200 to i64, !dbg !5072
  %150 = load float*, float** %rcp_h.addr, align 8, !dbg !5072
  %arrayidx202 = getelementptr inbounds float, float* %150, i64 %idxprom201, !dbg !5072
  %151 = load float, float* %arrayidx202, align 4, !dbg !5072
  %mul203 = fmul float %sub199, %151, !dbg !5073
  store float %mul203, float* %mul, align 4, !dbg !5074
  %152 = load float, float* %mul, align 4, !dbg !5075
  %153 = load float, float* %bar_t.addr, align 4, !dbg !5076
  %cmp204 = fcmp olt float %152, %153, !dbg !5077
  br i1 %cmp204, label %cond.true206, label %cond.false208, !dbg !5078

cond.true206:                                     ; preds = %if.else195
  %154 = load float, float* %mul, align 4, !dbg !5079
  %155 = load float, float* %rcp_bar_t, align 4, !dbg !5081
  %mul207 = fmul float %154, %155, !dbg !5082
  br label %cond.end209, !dbg !5083

cond.false208:                                    ; preds = %if.else195
  br label %cond.end209, !dbg !5084

cond.end209:                                      ; preds = %cond.false208, %cond.true206
  %cond210 = phi float [ %mul207, %cond.true206 ], [ 1.000000e+00, %cond.false208 ], !dbg !5086
  store float %cond210, float* %mul, align 4, !dbg !5088
  %156 = load float, float* %mul, align 4, !dbg !5089
  %157 = load i32, i32* %x, align 4, !dbg !5090
  %add211 = add nsw i32 %157, 1, !dbg !5091
  %idxprom212 = sext i32 %add211 to i64, !dbg !5092
  %158 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !5092
  %arrayidx213 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %158, i64 %idxprom212, !dbg !5092
  %yuv214 = bitcast %union.ColorFloat* %arrayidx213 to %struct.YUVFloat*, !dbg !5093
  %y215 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv214, i32 0, i32 0, !dbg !5094
  %159 = load float, float* %y215, align 4, !dbg !5094
  %mul216 = fmul float %156, %159, !dbg !5095
  %add217 = fadd float %mul216, 1.600000e+01, !dbg !5096
  %call218 = call i64 @lrintf(float %add217) #8, !dbg !5097
  %conv219 = trunc i64 %call218 to i8, !dbg !5097
  %160 = load i8*, i8** %lpy, align 8, !dbg !5098
  %incdec.ptr220 = getelementptr inbounds i8, i8* %160, i32 1, !dbg !5098
  store i8* %incdec.ptr220, i8** %lpy, align 8, !dbg !5098
  store i8 %conv219, i8* %160, align 1, !dbg !5099
  br label %if.end221

if.end221:                                        ; preds = %cond.end209, %if.then193
  br label %do.end222, !dbg !5100

do.end222:                                        ; preds = %if.end221
  br label %for.inc223, !dbg !5102

for.inc223:                                       ; preds = %do.end222
  %161 = load i32, i32* %x, align 4, !dbg !5103
  %add224 = add nsw i32 %161, 2, !dbg !5103
  store i32 %add224, i32* %x, align 4, !dbg !5103
  br label %for.cond131, !dbg !5105, !llvm.loop !5106

for.end225:                                       ; preds = %for.cond131
  br label %if.end226

if.end226:                                        ; preds = %for.end225, %for.end
  %162 = load i32, i32* %bar_h.addr, align 4, !dbg !5108
  %163 = load i32, i32* %y, align 4, !dbg !5109
  %add227 = add nsw i32 %163, 1, !dbg !5110
  %sub228 = sub nsw i32 %162, %add227, !dbg !5111
  %conv229 = sitofp i32 %sub228 to float, !dbg !5112
  %164 = load float, float* %rcp_bar_h, align 4, !dbg !5113
  %mul230 = fmul float %conv229, %164, !dbg !5114
  store float %mul230, float* %ht, align 4, !dbg !5115
  %165 = load i8*, i8** %vy, align 8, !dbg !5116
  %166 = load i32, i32* %y, align 4, !dbg !5117
  %add231 = add nsw i32 %166, 1, !dbg !5118
  %167 = load i32, i32* %lsy, align 4, !dbg !5119
  %mul232 = mul nsw i32 %add231, %167, !dbg !5120
  %idx.ext233 = sext i32 %mul232 to i64, !dbg !5121
  %add.ptr234 = getelementptr inbounds i8, i8* %165, i64 %idx.ext233, !dbg !5121
  store i8* %add.ptr234, i8** %lpy, align 8, !dbg !5122
  %168 = load i8*, i8** %vu, align 8, !dbg !5123
  %169 = load i32, i32* %y, align 4, !dbg !5124
  %add235 = add nsw i32 %169, 1, !dbg !5125
  %170 = load i32, i32* %lsu, align 4, !dbg !5126
  %mul236 = mul nsw i32 %add235, %170, !dbg !5127
  %idx.ext237 = sext i32 %mul236 to i64, !dbg !5128
  %add.ptr238 = getelementptr inbounds i8, i8* %168, i64 %idx.ext237, !dbg !5128
  store i8* %add.ptr238, i8** %lpu, align 8, !dbg !5129
  %171 = load i8*, i8** %vv, align 8, !dbg !5130
  %172 = load i32, i32* %y, align 4, !dbg !5131
  %add239 = add nsw i32 %172, 1, !dbg !5132
  %173 = load i32, i32* %lsv, align 4, !dbg !5133
  %mul240 = mul nsw i32 %add239, %173, !dbg !5134
  %idx.ext241 = sext i32 %mul240 to i64, !dbg !5135
  %add.ptr242 = getelementptr inbounds i8, i8* %171, i64 %idx.ext241, !dbg !5135
  store i8* %add.ptr242, i8** %lpv, align 8, !dbg !5136
  %174 = load i32, i32* %fmt, align 4, !dbg !5137
  %cmp243 = icmp eq i32 %174, 5, !dbg !5139
  br i1 %cmp243, label %if.then245, label %if.else363, !dbg !5140

if.then245:                                       ; preds = %if.end226
  store i32 0, i32* %x, align 4, !dbg !5141
  br label %for.cond246, !dbg !5144

for.cond246:                                      ; preds = %for.inc360, %if.then245
  %175 = load i32, i32* %x, align 4, !dbg !5145
  %176 = load i32, i32* %w, align 4, !dbg !5148
  %cmp247 = icmp slt i32 %175, %176, !dbg !5149
  br i1 %cmp247, label %for.body249, label %for.end362, !dbg !5150

for.body249:                                      ; preds = %for.cond246
  br label %do.body250, !dbg !5151, !llvm.loop !5153

do.body250:                                       ; preds = %for.body249
  %177 = load i32, i32* %x, align 4, !dbg !5154
  %idxprom251 = sext i32 %177 to i64, !dbg !5158
  %178 = load float*, float** %h.addr, align 8, !dbg !5158
  %arrayidx252 = getelementptr inbounds float, float* %178, i64 %idxprom251, !dbg !5158
  %179 = load float, float* %arrayidx252, align 4, !dbg !5158
  %180 = load float, float* %ht, align 4, !dbg !5159
  %cmp253 = fcmp ole float %179, %180, !dbg !5160
  br i1 %cmp253, label %if.then255, label %if.else259, !dbg !5158

if.then255:                                       ; preds = %do.body250
  %181 = load i8*, i8** %lpy, align 8, !dbg !5161
  %incdec.ptr256 = getelementptr inbounds i8, i8* %181, i32 1, !dbg !5161
  store i8* %incdec.ptr256, i8** %lpy, align 8, !dbg !5161
  store i8 16, i8* %181, align 1, !dbg !5164
  %182 = load i8*, i8** %lpu, align 8, !dbg !5165
  %incdec.ptr257 = getelementptr inbounds i8, i8* %182, i32 1, !dbg !5165
  store i8* %incdec.ptr257, i8** %lpu, align 8, !dbg !5165
  store i8 -128, i8* %182, align 1, !dbg !5166
  %183 = load i8*, i8** %lpv, align 8, !dbg !5167
  %incdec.ptr258 = getelementptr inbounds i8, i8* %183, i32 1, !dbg !5167
  store i8* %incdec.ptr258, i8** %lpv, align 8, !dbg !5167
  store i8 -128, i8* %183, align 1, !dbg !5168
  br label %if.end300, !dbg !5169

if.else259:                                       ; preds = %do.body250
  %184 = load i32, i32* %x, align 4, !dbg !5170
  %idxprom260 = sext i32 %184 to i64, !dbg !5173
  %185 = load float*, float** %h.addr, align 8, !dbg !5173
  %arrayidx261 = getelementptr inbounds float, float* %185, i64 %idxprom260, !dbg !5173
  %186 = load float, float* %arrayidx261, align 4, !dbg !5173
  %187 = load float, float* %ht, align 4, !dbg !5174
  %sub262 = fsub float %186, %187, !dbg !5175
  %188 = load i32, i32* %x, align 4, !dbg !5176
  %idxprom263 = sext i32 %188 to i64, !dbg !5177
  %189 = load float*, float** %rcp_h.addr, align 8, !dbg !5177
  %arrayidx264 = getelementptr inbounds float, float* %189, i64 %idxprom263, !dbg !5177
  %190 = load float, float* %arrayidx264, align 4, !dbg !5177
  %mul265 = fmul float %sub262, %190, !dbg !5178
  store float %mul265, float* %mul, align 4, !dbg !5179
  %191 = load float, float* %mul, align 4, !dbg !5180
  %192 = load float, float* %bar_t.addr, align 4, !dbg !5181
  %cmp266 = fcmp olt float %191, %192, !dbg !5182
  br i1 %cmp266, label %cond.true268, label %cond.false270, !dbg !5183

cond.true268:                                     ; preds = %if.else259
  %193 = load float, float* %mul, align 4, !dbg !5184
  %194 = load float, float* %rcp_bar_t, align 4, !dbg !5186
  %mul269 = fmul float %193, %194, !dbg !5187
  br label %cond.end271, !dbg !5188

cond.false270:                                    ; preds = %if.else259
  br label %cond.end271, !dbg !5189

cond.end271:                                      ; preds = %cond.false270, %cond.true268
  %cond272 = phi float [ %mul269, %cond.true268 ], [ 1.000000e+00, %cond.false270 ], !dbg !5191
  store float %cond272, float* %mul, align 4, !dbg !5193
  %195 = load float, float* %mul, align 4, !dbg !5194
  %196 = load i32, i32* %x, align 4, !dbg !5195
  %idxprom273 = sext i32 %196 to i64, !dbg !5196
  %197 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !5196
  %arrayidx274 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %197, i64 %idxprom273, !dbg !5196
  %yuv275 = bitcast %union.ColorFloat* %arrayidx274 to %struct.YUVFloat*, !dbg !5197
  %y276 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv275, i32 0, i32 0, !dbg !5198
  %198 = load float, float* %y276, align 4, !dbg !5198
  %mul277 = fmul float %195, %198, !dbg !5199
  %add278 = fadd float %mul277, 1.600000e+01, !dbg !5200
  %call279 = call i64 @lrintf(float %add278) #8, !dbg !5201
  %conv280 = trunc i64 %call279 to i8, !dbg !5201
  %199 = load i8*, i8** %lpy, align 8, !dbg !5202
  %incdec.ptr281 = getelementptr inbounds i8, i8* %199, i32 1, !dbg !5202
  store i8* %incdec.ptr281, i8** %lpy, align 8, !dbg !5202
  store i8 %conv280, i8* %199, align 1, !dbg !5203
  %200 = load float, float* %mul, align 4, !dbg !5204
  %201 = load i32, i32* %x, align 4, !dbg !5205
  %idxprom282 = sext i32 %201 to i64, !dbg !5206
  %202 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !5206
  %arrayidx283 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %202, i64 %idxprom282, !dbg !5206
  %yuv284 = bitcast %union.ColorFloat* %arrayidx283 to %struct.YUVFloat*, !dbg !5207
  %u285 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv284, i32 0, i32 1, !dbg !5208
  %203 = load float, float* %u285, align 4, !dbg !5208
  %mul286 = fmul float %200, %203, !dbg !5209
  %add287 = fadd float %mul286, 1.280000e+02, !dbg !5210
  %call288 = call i64 @lrintf(float %add287) #8, !dbg !5211
  %conv289 = trunc i64 %call288 to i8, !dbg !5213
  %204 = load i8*, i8** %lpu, align 8, !dbg !5214
  %incdec.ptr290 = getelementptr inbounds i8, i8* %204, i32 1, !dbg !5214
  store i8* %incdec.ptr290, i8** %lpu, align 8, !dbg !5214
  store i8 %conv289, i8* %204, align 1, !dbg !5215
  %205 = load float, float* %mul, align 4, !dbg !5216
  %206 = load i32, i32* %x, align 4, !dbg !5217
  %idxprom291 = sext i32 %206 to i64, !dbg !5218
  %207 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !5218
  %arrayidx292 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %207, i64 %idxprom291, !dbg !5218
  %yuv293 = bitcast %union.ColorFloat* %arrayidx292 to %struct.YUVFloat*, !dbg !5219
  %v294 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv293, i32 0, i32 2, !dbg !5220
  %208 = load float, float* %v294, align 4, !dbg !5220
  %mul295 = fmul float %205, %208, !dbg !5221
  %add296 = fadd float %mul295, 1.280000e+02, !dbg !5222
  %call297 = call i64 @lrintf(float %add296) #8, !dbg !5223
  %conv298 = trunc i64 %call297 to i8, !dbg !5225
  %209 = load i8*, i8** %lpv, align 8, !dbg !5226
  %incdec.ptr299 = getelementptr inbounds i8, i8* %209, i32 1, !dbg !5226
  store i8* %incdec.ptr299, i8** %lpv, align 8, !dbg !5226
  store i8 %conv298, i8* %209, align 1, !dbg !5227
  br label %if.end300

if.end300:                                        ; preds = %cond.end271, %if.then255
  br label %do.end301, !dbg !5228

do.end301:                                        ; preds = %if.end300
  br label %do.body302, !dbg !5230, !llvm.loop !5231

do.body302:                                       ; preds = %do.end301
  %210 = load i32, i32* %x, align 4, !dbg !5232
  %add303 = add nsw i32 %210, 1, !dbg !5236
  %idxprom304 = sext i32 %add303 to i64, !dbg !5237
  %211 = load float*, float** %h.addr, align 8, !dbg !5237
  %arrayidx305 = getelementptr inbounds float, float* %211, i64 %idxprom304, !dbg !5237
  %212 = load float, float* %arrayidx305, align 4, !dbg !5237
  %213 = load float, float* %ht, align 4, !dbg !5238
  %cmp306 = fcmp ole float %212, %213, !dbg !5239
  br i1 %cmp306, label %if.then308, label %if.else312, !dbg !5237

if.then308:                                       ; preds = %do.body302
  %214 = load i8*, i8** %lpy, align 8, !dbg !5240
  %incdec.ptr309 = getelementptr inbounds i8, i8* %214, i32 1, !dbg !5240
  store i8* %incdec.ptr309, i8** %lpy, align 8, !dbg !5240
  store i8 16, i8* %214, align 1, !dbg !5243
  %215 = load i8*, i8** %lpu, align 8, !dbg !5244
  %incdec.ptr310 = getelementptr inbounds i8, i8* %215, i32 1, !dbg !5244
  store i8* %incdec.ptr310, i8** %lpu, align 8, !dbg !5244
  store i8 -128, i8* %215, align 1, !dbg !5245
  %216 = load i8*, i8** %lpv, align 8, !dbg !5246
  %incdec.ptr311 = getelementptr inbounds i8, i8* %216, i32 1, !dbg !5246
  store i8* %incdec.ptr311, i8** %lpv, align 8, !dbg !5246
  store i8 -128, i8* %216, align 1, !dbg !5247
  br label %if.end358, !dbg !5248

if.else312:                                       ; preds = %do.body302
  %217 = load i32, i32* %x, align 4, !dbg !5249
  %add313 = add nsw i32 %217, 1, !dbg !5252
  %idxprom314 = sext i32 %add313 to i64, !dbg !5253
  %218 = load float*, float** %h.addr, align 8, !dbg !5253
  %arrayidx315 = getelementptr inbounds float, float* %218, i64 %idxprom314, !dbg !5253
  %219 = load float, float* %arrayidx315, align 4, !dbg !5253
  %220 = load float, float* %ht, align 4, !dbg !5254
  %sub316 = fsub float %219, %220, !dbg !5255
  %221 = load i32, i32* %x, align 4, !dbg !5256
  %add317 = add nsw i32 %221, 1, !dbg !5257
  %idxprom318 = sext i32 %add317 to i64, !dbg !5258
  %222 = load float*, float** %rcp_h.addr, align 8, !dbg !5258
  %arrayidx319 = getelementptr inbounds float, float* %222, i64 %idxprom318, !dbg !5258
  %223 = load float, float* %arrayidx319, align 4, !dbg !5258
  %mul320 = fmul float %sub316, %223, !dbg !5259
  store float %mul320, float* %mul, align 4, !dbg !5260
  %224 = load float, float* %mul, align 4, !dbg !5261
  %225 = load float, float* %bar_t.addr, align 4, !dbg !5262
  %cmp321 = fcmp olt float %224, %225, !dbg !5263
  br i1 %cmp321, label %cond.true323, label %cond.false325, !dbg !5264

cond.true323:                                     ; preds = %if.else312
  %226 = load float, float* %mul, align 4, !dbg !5265
  %227 = load float, float* %rcp_bar_t, align 4, !dbg !5267
  %mul324 = fmul float %226, %227, !dbg !5268
  br label %cond.end326, !dbg !5269

cond.false325:                                    ; preds = %if.else312
  br label %cond.end326, !dbg !5270

cond.end326:                                      ; preds = %cond.false325, %cond.true323
  %cond327 = phi float [ %mul324, %cond.true323 ], [ 1.000000e+00, %cond.false325 ], !dbg !5272
  store float %cond327, float* %mul, align 4, !dbg !5274
  %228 = load float, float* %mul, align 4, !dbg !5275
  %229 = load i32, i32* %x, align 4, !dbg !5276
  %add328 = add nsw i32 %229, 1, !dbg !5277
  %idxprom329 = sext i32 %add328 to i64, !dbg !5278
  %230 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !5278
  %arrayidx330 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %230, i64 %idxprom329, !dbg !5278
  %yuv331 = bitcast %union.ColorFloat* %arrayidx330 to %struct.YUVFloat*, !dbg !5279
  %y332 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv331, i32 0, i32 0, !dbg !5280
  %231 = load float, float* %y332, align 4, !dbg !5280
  %mul333 = fmul float %228, %231, !dbg !5281
  %add334 = fadd float %mul333, 1.600000e+01, !dbg !5282
  %call335 = call i64 @lrintf(float %add334) #8, !dbg !5283
  %conv336 = trunc i64 %call335 to i8, !dbg !5283
  %232 = load i8*, i8** %lpy, align 8, !dbg !5284
  %incdec.ptr337 = getelementptr inbounds i8, i8* %232, i32 1, !dbg !5284
  store i8* %incdec.ptr337, i8** %lpy, align 8, !dbg !5284
  store i8 %conv336, i8* %232, align 1, !dbg !5285
  %233 = load float, float* %mul, align 4, !dbg !5286
  %234 = load i32, i32* %x, align 4, !dbg !5287
  %add338 = add nsw i32 %234, 1, !dbg !5288
  %idxprom339 = sext i32 %add338 to i64, !dbg !5289
  %235 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !5289
  %arrayidx340 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %235, i64 %idxprom339, !dbg !5289
  %yuv341 = bitcast %union.ColorFloat* %arrayidx340 to %struct.YUVFloat*, !dbg !5290
  %u342 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv341, i32 0, i32 1, !dbg !5291
  %236 = load float, float* %u342, align 4, !dbg !5291
  %mul343 = fmul float %233, %236, !dbg !5292
  %add344 = fadd float %mul343, 1.280000e+02, !dbg !5293
  %call345 = call i64 @lrintf(float %add344) #8, !dbg !5294
  %conv346 = trunc i64 %call345 to i8, !dbg !5296
  %237 = load i8*, i8** %lpu, align 8, !dbg !5297
  %incdec.ptr347 = getelementptr inbounds i8, i8* %237, i32 1, !dbg !5297
  store i8* %incdec.ptr347, i8** %lpu, align 8, !dbg !5297
  store i8 %conv346, i8* %237, align 1, !dbg !5298
  %238 = load float, float* %mul, align 4, !dbg !5299
  %239 = load i32, i32* %x, align 4, !dbg !5300
  %add348 = add nsw i32 %239, 1, !dbg !5301
  %idxprom349 = sext i32 %add348 to i64, !dbg !5302
  %240 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !5302
  %arrayidx350 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %240, i64 %idxprom349, !dbg !5302
  %yuv351 = bitcast %union.ColorFloat* %arrayidx350 to %struct.YUVFloat*, !dbg !5303
  %v352 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv351, i32 0, i32 2, !dbg !5304
  %241 = load float, float* %v352, align 4, !dbg !5304
  %mul353 = fmul float %238, %241, !dbg !5305
  %add354 = fadd float %mul353, 1.280000e+02, !dbg !5306
  %call355 = call i64 @lrintf(float %add354) #8, !dbg !5307
  %conv356 = trunc i64 %call355 to i8, !dbg !5309
  %242 = load i8*, i8** %lpv, align 8, !dbg !5310
  %incdec.ptr357 = getelementptr inbounds i8, i8* %242, i32 1, !dbg !5310
  store i8* %incdec.ptr357, i8** %lpv, align 8, !dbg !5310
  store i8 %conv356, i8* %242, align 1, !dbg !5311
  br label %if.end358

if.end358:                                        ; preds = %cond.end326, %if.then308
  br label %do.end359, !dbg !5312

do.end359:                                        ; preds = %if.end358
  br label %for.inc360, !dbg !5314

for.inc360:                                       ; preds = %do.end359
  %243 = load i32, i32* %x, align 4, !dbg !5315
  %add361 = add nsw i32 %243, 2, !dbg !5315
  store i32 %add361, i32* %x, align 4, !dbg !5315
  br label %for.cond246, !dbg !5317, !llvm.loop !5318

for.end362:                                       ; preds = %for.cond246
  br label %if.end539, !dbg !5320

if.else363:                                       ; preds = %if.end226
  %244 = load i32, i32* %fmt, align 4, !dbg !5321
  %cmp364 = icmp eq i32 %244, 4, !dbg !5324
  br i1 %cmp364, label %if.then366, label %if.else462, !dbg !5321

if.then366:                                       ; preds = %if.else363
  store i32 0, i32* %x, align 4, !dbg !5325
  br label %for.cond367, !dbg !5328

for.cond367:                                      ; preds = %for.inc459, %if.then366
  %245 = load i32, i32* %x, align 4, !dbg !5329
  %246 = load i32, i32* %w, align 4, !dbg !5332
  %cmp368 = icmp slt i32 %245, %246, !dbg !5333
  br i1 %cmp368, label %for.body370, label %for.end461, !dbg !5334

for.body370:                                      ; preds = %for.cond367
  br label %do.body371, !dbg !5335, !llvm.loop !5337

do.body371:                                       ; preds = %for.body370
  %247 = load i32, i32* %x, align 4, !dbg !5338
  %idxprom372 = sext i32 %247 to i64, !dbg !5342
  %248 = load float*, float** %h.addr, align 8, !dbg !5342
  %arrayidx373 = getelementptr inbounds float, float* %248, i64 %idxprom372, !dbg !5342
  %249 = load float, float* %arrayidx373, align 4, !dbg !5342
  %250 = load float, float* %ht, align 4, !dbg !5343
  %cmp374 = fcmp ole float %249, %250, !dbg !5344
  br i1 %cmp374, label %if.then376, label %if.else380, !dbg !5342

if.then376:                                       ; preds = %do.body371
  %251 = load i8*, i8** %lpy, align 8, !dbg !5345
  %incdec.ptr377 = getelementptr inbounds i8, i8* %251, i32 1, !dbg !5345
  store i8* %incdec.ptr377, i8** %lpy, align 8, !dbg !5345
  store i8 16, i8* %251, align 1, !dbg !5348
  %252 = load i8*, i8** %lpu, align 8, !dbg !5349
  %incdec.ptr378 = getelementptr inbounds i8, i8* %252, i32 1, !dbg !5349
  store i8* %incdec.ptr378, i8** %lpu, align 8, !dbg !5349
  store i8 -128, i8* %252, align 1, !dbg !5350
  %253 = load i8*, i8** %lpv, align 8, !dbg !5351
  %incdec.ptr379 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !5351
  store i8* %incdec.ptr379, i8** %lpv, align 8, !dbg !5351
  store i8 -128, i8* %253, align 1, !dbg !5352
  br label %if.end421, !dbg !5353

if.else380:                                       ; preds = %do.body371
  %254 = load i32, i32* %x, align 4, !dbg !5354
  %idxprom381 = sext i32 %254 to i64, !dbg !5357
  %255 = load float*, float** %h.addr, align 8, !dbg !5357
  %arrayidx382 = getelementptr inbounds float, float* %255, i64 %idxprom381, !dbg !5357
  %256 = load float, float* %arrayidx382, align 4, !dbg !5357
  %257 = load float, float* %ht, align 4, !dbg !5358
  %sub383 = fsub float %256, %257, !dbg !5359
  %258 = load i32, i32* %x, align 4, !dbg !5360
  %idxprom384 = sext i32 %258 to i64, !dbg !5361
  %259 = load float*, float** %rcp_h.addr, align 8, !dbg !5361
  %arrayidx385 = getelementptr inbounds float, float* %259, i64 %idxprom384, !dbg !5361
  %260 = load float, float* %arrayidx385, align 4, !dbg !5361
  %mul386 = fmul float %sub383, %260, !dbg !5362
  store float %mul386, float* %mul, align 4, !dbg !5363
  %261 = load float, float* %mul, align 4, !dbg !5364
  %262 = load float, float* %bar_t.addr, align 4, !dbg !5365
  %cmp387 = fcmp olt float %261, %262, !dbg !5366
  br i1 %cmp387, label %cond.true389, label %cond.false391, !dbg !5367

cond.true389:                                     ; preds = %if.else380
  %263 = load float, float* %mul, align 4, !dbg !5368
  %264 = load float, float* %rcp_bar_t, align 4, !dbg !5370
  %mul390 = fmul float %263, %264, !dbg !5371
  br label %cond.end392, !dbg !5372

cond.false391:                                    ; preds = %if.else380
  br label %cond.end392, !dbg !5373

cond.end392:                                      ; preds = %cond.false391, %cond.true389
  %cond393 = phi float [ %mul390, %cond.true389 ], [ 1.000000e+00, %cond.false391 ], !dbg !5375
  store float %cond393, float* %mul, align 4, !dbg !5377
  %265 = load float, float* %mul, align 4, !dbg !5378
  %266 = load i32, i32* %x, align 4, !dbg !5379
  %idxprom394 = sext i32 %266 to i64, !dbg !5380
  %267 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !5380
  %arrayidx395 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %267, i64 %idxprom394, !dbg !5380
  %yuv396 = bitcast %union.ColorFloat* %arrayidx395 to %struct.YUVFloat*, !dbg !5381
  %y397 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv396, i32 0, i32 0, !dbg !5382
  %268 = load float, float* %y397, align 4, !dbg !5382
  %mul398 = fmul float %265, %268, !dbg !5383
  %add399 = fadd float %mul398, 1.600000e+01, !dbg !5384
  %call400 = call i64 @lrintf(float %add399) #8, !dbg !5385
  %conv401 = trunc i64 %call400 to i8, !dbg !5385
  %269 = load i8*, i8** %lpy, align 8, !dbg !5386
  %incdec.ptr402 = getelementptr inbounds i8, i8* %269, i32 1, !dbg !5386
  store i8* %incdec.ptr402, i8** %lpy, align 8, !dbg !5386
  store i8 %conv401, i8* %269, align 1, !dbg !5387
  %270 = load float, float* %mul, align 4, !dbg !5388
  %271 = load i32, i32* %x, align 4, !dbg !5389
  %idxprom403 = sext i32 %271 to i64, !dbg !5390
  %272 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !5390
  %arrayidx404 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %272, i64 %idxprom403, !dbg !5390
  %yuv405 = bitcast %union.ColorFloat* %arrayidx404 to %struct.YUVFloat*, !dbg !5391
  %u406 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv405, i32 0, i32 1, !dbg !5392
  %273 = load float, float* %u406, align 4, !dbg !5392
  %mul407 = fmul float %270, %273, !dbg !5393
  %add408 = fadd float %mul407, 1.280000e+02, !dbg !5394
  %call409 = call i64 @lrintf(float %add408) #8, !dbg !5395
  %conv410 = trunc i64 %call409 to i8, !dbg !5397
  %274 = load i8*, i8** %lpu, align 8, !dbg !5398
  %incdec.ptr411 = getelementptr inbounds i8, i8* %274, i32 1, !dbg !5398
  store i8* %incdec.ptr411, i8** %lpu, align 8, !dbg !5398
  store i8 %conv410, i8* %274, align 1, !dbg !5399
  %275 = load float, float* %mul, align 4, !dbg !5400
  %276 = load i32, i32* %x, align 4, !dbg !5401
  %idxprom412 = sext i32 %276 to i64, !dbg !5402
  %277 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !5402
  %arrayidx413 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %277, i64 %idxprom412, !dbg !5402
  %yuv414 = bitcast %union.ColorFloat* %arrayidx413 to %struct.YUVFloat*, !dbg !5403
  %v415 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv414, i32 0, i32 2, !dbg !5404
  %278 = load float, float* %v415, align 4, !dbg !5404
  %mul416 = fmul float %275, %278, !dbg !5405
  %add417 = fadd float %mul416, 1.280000e+02, !dbg !5406
  %call418 = call i64 @lrintf(float %add417) #8, !dbg !5407
  %conv419 = trunc i64 %call418 to i8, !dbg !5409
  %279 = load i8*, i8** %lpv, align 8, !dbg !5410
  %incdec.ptr420 = getelementptr inbounds i8, i8* %279, i32 1, !dbg !5410
  store i8* %incdec.ptr420, i8** %lpv, align 8, !dbg !5410
  store i8 %conv419, i8* %279, align 1, !dbg !5411
  br label %if.end421

if.end421:                                        ; preds = %cond.end392, %if.then376
  br label %do.end422, !dbg !5412

do.end422:                                        ; preds = %if.end421
  br label %do.body423, !dbg !5414, !llvm.loop !5415

do.body423:                                       ; preds = %do.end422
  %280 = load i32, i32* %x, align 4, !dbg !5416
  %add424 = add nsw i32 %280, 1, !dbg !5420
  %idxprom425 = sext i32 %add424 to i64, !dbg !5421
  %281 = load float*, float** %h.addr, align 8, !dbg !5421
  %arrayidx426 = getelementptr inbounds float, float* %281, i64 %idxprom425, !dbg !5421
  %282 = load float, float* %arrayidx426, align 4, !dbg !5421
  %283 = load float, float* %ht, align 4, !dbg !5422
  %cmp427 = fcmp ole float %282, %283, !dbg !5423
  br i1 %cmp427, label %if.then429, label %if.else431, !dbg !5421

if.then429:                                       ; preds = %do.body423
  %284 = load i8*, i8** %lpy, align 8, !dbg !5424
  %incdec.ptr430 = getelementptr inbounds i8, i8* %284, i32 1, !dbg !5424
  store i8* %incdec.ptr430, i8** %lpy, align 8, !dbg !5424
  store i8 16, i8* %284, align 1, !dbg !5427
  br label %if.end457, !dbg !5428

if.else431:                                       ; preds = %do.body423
  %285 = load i32, i32* %x, align 4, !dbg !5429
  %add432 = add nsw i32 %285, 1, !dbg !5432
  %idxprom433 = sext i32 %add432 to i64, !dbg !5433
  %286 = load float*, float** %h.addr, align 8, !dbg !5433
  %arrayidx434 = getelementptr inbounds float, float* %286, i64 %idxprom433, !dbg !5433
  %287 = load float, float* %arrayidx434, align 4, !dbg !5433
  %288 = load float, float* %ht, align 4, !dbg !5434
  %sub435 = fsub float %287, %288, !dbg !5435
  %289 = load i32, i32* %x, align 4, !dbg !5436
  %add436 = add nsw i32 %289, 1, !dbg !5437
  %idxprom437 = sext i32 %add436 to i64, !dbg !5438
  %290 = load float*, float** %rcp_h.addr, align 8, !dbg !5438
  %arrayidx438 = getelementptr inbounds float, float* %290, i64 %idxprom437, !dbg !5438
  %291 = load float, float* %arrayidx438, align 4, !dbg !5438
  %mul439 = fmul float %sub435, %291, !dbg !5439
  store float %mul439, float* %mul, align 4, !dbg !5440
  %292 = load float, float* %mul, align 4, !dbg !5441
  %293 = load float, float* %bar_t.addr, align 4, !dbg !5442
  %cmp440 = fcmp olt float %292, %293, !dbg !5443
  br i1 %cmp440, label %cond.true442, label %cond.false444, !dbg !5444

cond.true442:                                     ; preds = %if.else431
  %294 = load float, float* %mul, align 4, !dbg !5445
  %295 = load float, float* %rcp_bar_t, align 4, !dbg !5447
  %mul443 = fmul float %294, %295, !dbg !5448
  br label %cond.end445, !dbg !5449

cond.false444:                                    ; preds = %if.else431
  br label %cond.end445, !dbg !5450

cond.end445:                                      ; preds = %cond.false444, %cond.true442
  %cond446 = phi float [ %mul443, %cond.true442 ], [ 1.000000e+00, %cond.false444 ], !dbg !5452
  store float %cond446, float* %mul, align 4, !dbg !5454
  %296 = load float, float* %mul, align 4, !dbg !5455
  %297 = load i32, i32* %x, align 4, !dbg !5456
  %add447 = add nsw i32 %297, 1, !dbg !5457
  %idxprom448 = sext i32 %add447 to i64, !dbg !5458
  %298 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !5458
  %arrayidx449 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %298, i64 %idxprom448, !dbg !5458
  %yuv450 = bitcast %union.ColorFloat* %arrayidx449 to %struct.YUVFloat*, !dbg !5459
  %y451 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv450, i32 0, i32 0, !dbg !5460
  %299 = load float, float* %y451, align 4, !dbg !5460
  %mul452 = fmul float %296, %299, !dbg !5461
  %add453 = fadd float %mul452, 1.600000e+01, !dbg !5462
  %call454 = call i64 @lrintf(float %add453) #8, !dbg !5463
  %conv455 = trunc i64 %call454 to i8, !dbg !5463
  %300 = load i8*, i8** %lpy, align 8, !dbg !5464
  %incdec.ptr456 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !5464
  store i8* %incdec.ptr456, i8** %lpy, align 8, !dbg !5464
  store i8 %conv455, i8* %300, align 1, !dbg !5465
  br label %if.end457

if.end457:                                        ; preds = %cond.end445, %if.then429
  br label %do.end458, !dbg !5466

do.end458:                                        ; preds = %if.end457
  br label %for.inc459, !dbg !5468

for.inc459:                                       ; preds = %do.end458
  %301 = load i32, i32* %x, align 4, !dbg !5469
  %add460 = add nsw i32 %301, 2, !dbg !5469
  store i32 %add460, i32* %x, align 4, !dbg !5469
  br label %for.cond367, !dbg !5471, !llvm.loop !5472

for.end461:                                       ; preds = %for.cond367
  br label %if.end538, !dbg !5474

if.else462:                                       ; preds = %if.else363
  store i32 0, i32* %x, align 4, !dbg !5475
  br label %for.cond463, !dbg !5478

for.cond463:                                      ; preds = %for.inc535, %if.else462
  %302 = load i32, i32* %x, align 4, !dbg !5479
  %303 = load i32, i32* %w, align 4, !dbg !5482
  %cmp464 = icmp slt i32 %302, %303, !dbg !5483
  br i1 %cmp464, label %for.body466, label %for.end537, !dbg !5484

for.body466:                                      ; preds = %for.cond463
  br label %do.body467, !dbg !5485, !llvm.loop !5487

do.body467:                                       ; preds = %for.body466
  %304 = load i32, i32* %x, align 4, !dbg !5488
  %idxprom468 = sext i32 %304 to i64, !dbg !5492
  %305 = load float*, float** %h.addr, align 8, !dbg !5492
  %arrayidx469 = getelementptr inbounds float, float* %305, i64 %idxprom468, !dbg !5492
  %306 = load float, float* %arrayidx469, align 4, !dbg !5492
  %307 = load float, float* %ht, align 4, !dbg !5493
  %cmp470 = fcmp ole float %306, %307, !dbg !5494
  br i1 %cmp470, label %if.then472, label %if.else474, !dbg !5492

if.then472:                                       ; preds = %do.body467
  %308 = load i8*, i8** %lpy, align 8, !dbg !5495
  %incdec.ptr473 = getelementptr inbounds i8, i8* %308, i32 1, !dbg !5495
  store i8* %incdec.ptr473, i8** %lpy, align 8, !dbg !5495
  store i8 16, i8* %308, align 1, !dbg !5498
  br label %if.end497, !dbg !5499

if.else474:                                       ; preds = %do.body467
  %309 = load i32, i32* %x, align 4, !dbg !5500
  %idxprom475 = sext i32 %309 to i64, !dbg !5503
  %310 = load float*, float** %h.addr, align 8, !dbg !5503
  %arrayidx476 = getelementptr inbounds float, float* %310, i64 %idxprom475, !dbg !5503
  %311 = load float, float* %arrayidx476, align 4, !dbg !5503
  %312 = load float, float* %ht, align 4, !dbg !5504
  %sub477 = fsub float %311, %312, !dbg !5505
  %313 = load i32, i32* %x, align 4, !dbg !5506
  %idxprom478 = sext i32 %313 to i64, !dbg !5507
  %314 = load float*, float** %rcp_h.addr, align 8, !dbg !5507
  %arrayidx479 = getelementptr inbounds float, float* %314, i64 %idxprom478, !dbg !5507
  %315 = load float, float* %arrayidx479, align 4, !dbg !5507
  %mul480 = fmul float %sub477, %315, !dbg !5508
  store float %mul480, float* %mul, align 4, !dbg !5509
  %316 = load float, float* %mul, align 4, !dbg !5510
  %317 = load float, float* %bar_t.addr, align 4, !dbg !5511
  %cmp481 = fcmp olt float %316, %317, !dbg !5512
  br i1 %cmp481, label %cond.true483, label %cond.false485, !dbg !5513

cond.true483:                                     ; preds = %if.else474
  %318 = load float, float* %mul, align 4, !dbg !5514
  %319 = load float, float* %rcp_bar_t, align 4, !dbg !5516
  %mul484 = fmul float %318, %319, !dbg !5517
  br label %cond.end486, !dbg !5518

cond.false485:                                    ; preds = %if.else474
  br label %cond.end486, !dbg !5519

cond.end486:                                      ; preds = %cond.false485, %cond.true483
  %cond487 = phi float [ %mul484, %cond.true483 ], [ 1.000000e+00, %cond.false485 ], !dbg !5521
  store float %cond487, float* %mul, align 4, !dbg !5523
  %320 = load float, float* %mul, align 4, !dbg !5524
  %321 = load i32, i32* %x, align 4, !dbg !5525
  %idxprom488 = sext i32 %321 to i64, !dbg !5526
  %322 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !5526
  %arrayidx489 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %322, i64 %idxprom488, !dbg !5526
  %yuv490 = bitcast %union.ColorFloat* %arrayidx489 to %struct.YUVFloat*, !dbg !5527
  %y491 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv490, i32 0, i32 0, !dbg !5528
  %323 = load float, float* %y491, align 4, !dbg !5528
  %mul492 = fmul float %320, %323, !dbg !5529
  %add493 = fadd float %mul492, 1.600000e+01, !dbg !5530
  %call494 = call i64 @lrintf(float %add493) #8, !dbg !5531
  %conv495 = trunc i64 %call494 to i8, !dbg !5531
  %324 = load i8*, i8** %lpy, align 8, !dbg !5532
  %incdec.ptr496 = getelementptr inbounds i8, i8* %324, i32 1, !dbg !5532
  store i8* %incdec.ptr496, i8** %lpy, align 8, !dbg !5532
  store i8 %conv495, i8* %324, align 1, !dbg !5533
  br label %if.end497

if.end497:                                        ; preds = %cond.end486, %if.then472
  br label %do.end498, !dbg !5534

do.end498:                                        ; preds = %if.end497
  br label %do.body499, !dbg !5536, !llvm.loop !5537

do.body499:                                       ; preds = %do.end498
  %325 = load i32, i32* %x, align 4, !dbg !5538
  %add500 = add nsw i32 %325, 1, !dbg !5542
  %idxprom501 = sext i32 %add500 to i64, !dbg !5543
  %326 = load float*, float** %h.addr, align 8, !dbg !5543
  %arrayidx502 = getelementptr inbounds float, float* %326, i64 %idxprom501, !dbg !5543
  %327 = load float, float* %arrayidx502, align 4, !dbg !5543
  %328 = load float, float* %ht, align 4, !dbg !5544
  %cmp503 = fcmp ole float %327, %328, !dbg !5545
  br i1 %cmp503, label %if.then505, label %if.else507, !dbg !5543

if.then505:                                       ; preds = %do.body499
  %329 = load i8*, i8** %lpy, align 8, !dbg !5546
  %incdec.ptr506 = getelementptr inbounds i8, i8* %329, i32 1, !dbg !5546
  store i8* %incdec.ptr506, i8** %lpy, align 8, !dbg !5546
  store i8 16, i8* %329, align 1, !dbg !5549
  br label %if.end533, !dbg !5550

if.else507:                                       ; preds = %do.body499
  %330 = load i32, i32* %x, align 4, !dbg !5551
  %add508 = add nsw i32 %330, 1, !dbg !5554
  %idxprom509 = sext i32 %add508 to i64, !dbg !5555
  %331 = load float*, float** %h.addr, align 8, !dbg !5555
  %arrayidx510 = getelementptr inbounds float, float* %331, i64 %idxprom509, !dbg !5555
  %332 = load float, float* %arrayidx510, align 4, !dbg !5555
  %333 = load float, float* %ht, align 4, !dbg !5556
  %sub511 = fsub float %332, %333, !dbg !5557
  %334 = load i32, i32* %x, align 4, !dbg !5558
  %add512 = add nsw i32 %334, 1, !dbg !5559
  %idxprom513 = sext i32 %add512 to i64, !dbg !5560
  %335 = load float*, float** %rcp_h.addr, align 8, !dbg !5560
  %arrayidx514 = getelementptr inbounds float, float* %335, i64 %idxprom513, !dbg !5560
  %336 = load float, float* %arrayidx514, align 4, !dbg !5560
  %mul515 = fmul float %sub511, %336, !dbg !5561
  store float %mul515, float* %mul, align 4, !dbg !5562
  %337 = load float, float* %mul, align 4, !dbg !5563
  %338 = load float, float* %bar_t.addr, align 4, !dbg !5564
  %cmp516 = fcmp olt float %337, %338, !dbg !5565
  br i1 %cmp516, label %cond.true518, label %cond.false520, !dbg !5566

cond.true518:                                     ; preds = %if.else507
  %339 = load float, float* %mul, align 4, !dbg !5567
  %340 = load float, float* %rcp_bar_t, align 4, !dbg !5569
  %mul519 = fmul float %339, %340, !dbg !5570
  br label %cond.end521, !dbg !5571

cond.false520:                                    ; preds = %if.else507
  br label %cond.end521, !dbg !5572

cond.end521:                                      ; preds = %cond.false520, %cond.true518
  %cond522 = phi float [ %mul519, %cond.true518 ], [ 1.000000e+00, %cond.false520 ], !dbg !5574
  store float %cond522, float* %mul, align 4, !dbg !5576
  %341 = load float, float* %mul, align 4, !dbg !5577
  %342 = load i32, i32* %x, align 4, !dbg !5578
  %add523 = add nsw i32 %342, 1, !dbg !5579
  %idxprom524 = sext i32 %add523 to i64, !dbg !5580
  %343 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !5580
  %arrayidx525 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %343, i64 %idxprom524, !dbg !5580
  %yuv526 = bitcast %union.ColorFloat* %arrayidx525 to %struct.YUVFloat*, !dbg !5581
  %y527 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv526, i32 0, i32 0, !dbg !5582
  %344 = load float, float* %y527, align 4, !dbg !5582
  %mul528 = fmul float %341, %344, !dbg !5583
  %add529 = fadd float %mul528, 1.600000e+01, !dbg !5584
  %call530 = call i64 @lrintf(float %add529) #8, !dbg !5585
  %conv531 = trunc i64 %call530 to i8, !dbg !5585
  %345 = load i8*, i8** %lpy, align 8, !dbg !5586
  %incdec.ptr532 = getelementptr inbounds i8, i8* %345, i32 1, !dbg !5586
  store i8* %incdec.ptr532, i8** %lpy, align 8, !dbg !5586
  store i8 %conv531, i8* %345, align 1, !dbg !5587
  br label %if.end533

if.end533:                                        ; preds = %cond.end521, %if.then505
  br label %do.end534, !dbg !5588

do.end534:                                        ; preds = %if.end533
  br label %for.inc535, !dbg !5590

for.inc535:                                       ; preds = %do.end534
  %346 = load i32, i32* %x, align 4, !dbg !5591
  %add536 = add nsw i32 %346, 2, !dbg !5591
  store i32 %add536, i32* %x, align 4, !dbg !5591
  br label %for.cond463, !dbg !5593, !llvm.loop !5594

for.end537:                                       ; preds = %for.cond463
  br label %if.end538

if.end538:                                        ; preds = %for.end537, %for.end461
  br label %if.end539

if.end539:                                        ; preds = %if.end538, %for.end362
  br label %for.inc540, !dbg !5596

for.inc540:                                       ; preds = %if.end539
  %347 = load i32, i32* %y, align 4, !dbg !5597
  %add541 = add nsw i32 %347, 2, !dbg !5597
  store i32 %add541, i32* %y, align 4, !dbg !5597
  br label %for.cond, !dbg !5599, !llvm.loop !5600

for.end542:                                       ; preds = %for.cond
  ret void, !dbg !5602
}

; Function Attrs: nounwind uwtable
define internal void @draw_axis_yuv(%struct.AVFrame* %out, %struct.AVFrame* %axis, %union.ColorFloat* %c, i32 %off) #1 !dbg !5603 {
entry:
  %out.addr = alloca %struct.AVFrame*, align 8
  %axis.addr = alloca %struct.AVFrame*, align 8
  %c.addr = alloca %union.ColorFloat*, align 8
  %off.addr = alloca i32, align 4
  %fmt = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %yh = alloca i32, align 4
  %w = alloca i32, align 4
  %h = alloca i32, align 4
  %offh = alloca i32, align 4
  %vy = alloca i8*, align 8
  %vu = alloca i8*, align 8
  %vv = alloca i8*, align 8
  %vay = alloca i8*, align 8
  %vau = alloca i8*, align 8
  %vav = alloca i8*, align 8
  %vaa = alloca i8*, align 8
  %lsy = alloca i32, align 4
  %lsu = alloca i32, align 4
  %lsv = alloca i32, align 4
  %lsay = alloca i32, align 4
  %lsau = alloca i32, align 4
  %lsav = alloca i32, align 4
  %lsaa = alloca i32, align 4
  %lpy = alloca i8*, align 8
  %lpu = alloca i8*, align 8
  %lpv = alloca i8*, align 8
  %lpay = alloca i8*, align 8
  %lpau = alloca i8*, align 8
  %lpav = alloca i8*, align 8
  %lpaa = alloca i8*, align 8
  %a = alloca float, align 4
  %a159 = alloca float, align 4
  %a240 = alloca float, align 4
  %a0 = alloca float, align 4
  %a1 = alloca float, align 4
  %b = alloca float, align 4
  %a366 = alloca float, align 4
  %a414 = alloca float, align 4
  %a0492 = alloca float, align 4
  %a1497 = alloca float, align 4
  %a2 = alloca float, align 4
  %a3 = alloca float, align 4
  %b513 = alloca float, align 4
  %a605 = alloca float, align 4
  %a702 = alloca float, align 4
  %a788 = alloca float, align 4
  %a871 = alloca float, align 4
  %a0927 = alloca float, align 4
  %a1932 = alloca float, align 4
  %b937 = alloca float, align 4
  %a1001 = alloca float, align 4
  %a1049 = alloca float, align 4
  %a1089 = alloca float, align 4
  store %struct.AVFrame* %out, %struct.AVFrame** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %out.addr, metadata !5604, metadata !820), !dbg !5605
  store %struct.AVFrame* %axis, %struct.AVFrame** %axis.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %axis.addr, metadata !5606, metadata !820), !dbg !5607
  store %union.ColorFloat* %c, %union.ColorFloat** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %union.ColorFloat** %c.addr, metadata !5608, metadata !820), !dbg !5609
  store i32 %off, i32* %off.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %off.addr, metadata !5610, metadata !820), !dbg !5611
  call void @llvm.dbg.declare(metadata i32* %fmt, metadata !5612, metadata !820), !dbg !5613
  %0 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5614
  %format = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i32 0, i32 6, !dbg !5615
  %1 = load i32, i32* %format, align 4, !dbg !5615
  store i32 %1, i32* %fmt, align 4, !dbg !5613
  call void @llvm.dbg.declare(metadata i32* %x, metadata !5616, metadata !820), !dbg !5617
  call void @llvm.dbg.declare(metadata i32* %y, metadata !5618, metadata !820), !dbg !5619
  call void @llvm.dbg.declare(metadata i32* %yh, metadata !5620, metadata !820), !dbg !5621
  call void @llvm.dbg.declare(metadata i32* %w, metadata !5622, metadata !820), !dbg !5623
  %2 = load %struct.AVFrame*, %struct.AVFrame** %axis.addr, align 8, !dbg !5624
  %width = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %2, i32 0, i32 3, !dbg !5625
  %3 = load i32, i32* %width, align 8, !dbg !5625
  store i32 %3, i32* %w, align 4, !dbg !5623
  call void @llvm.dbg.declare(metadata i32* %h, metadata !5626, metadata !820), !dbg !5627
  %4 = load %struct.AVFrame*, %struct.AVFrame** %axis.addr, align 8, !dbg !5628
  %height = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %4, i32 0, i32 4, !dbg !5629
  %5 = load i32, i32* %height, align 4, !dbg !5629
  store i32 %5, i32* %h, align 4, !dbg !5627
  call void @llvm.dbg.declare(metadata i32* %offh, metadata !5630, metadata !820), !dbg !5631
  %6 = load i32, i32* %fmt, align 4, !dbg !5632
  %cmp = icmp eq i32 %6, 0, !dbg !5633
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5634

cond.true:                                        ; preds = %entry
  %7 = load i32, i32* %off.addr, align 4, !dbg !5635
  %div = sdiv i32 %7, 2, !dbg !5637
  br label %cond.end, !dbg !5638

cond.false:                                       ; preds = %entry
  %8 = load i32, i32* %off.addr, align 4, !dbg !5639
  br label %cond.end, !dbg !5641

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %div, %cond.true ], [ %8, %cond.false ], !dbg !5642
  store i32 %cond, i32* %offh, align 4, !dbg !5644
  call void @llvm.dbg.declare(metadata i8** %vy, metadata !5645, metadata !820), !dbg !5646
  %9 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5647
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %9, i32 0, i32 0, !dbg !5648
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 0, !dbg !5647
  %10 = load i8*, i8** %arrayidx, align 8, !dbg !5647
  store i8* %10, i8** %vy, align 8, !dbg !5646
  call void @llvm.dbg.declare(metadata i8** %vu, metadata !5649, metadata !820), !dbg !5650
  %11 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5651
  %data1 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %11, i32 0, i32 0, !dbg !5652
  %arrayidx2 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data1, i64 0, i64 1, !dbg !5651
  %12 = load i8*, i8** %arrayidx2, align 8, !dbg !5651
  store i8* %12, i8** %vu, align 8, !dbg !5650
  call void @llvm.dbg.declare(metadata i8** %vv, metadata !5653, metadata !820), !dbg !5654
  %13 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5655
  %data3 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %13, i32 0, i32 0, !dbg !5656
  %arrayidx4 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data3, i64 0, i64 2, !dbg !5655
  %14 = load i8*, i8** %arrayidx4, align 8, !dbg !5655
  store i8* %14, i8** %vv, align 8, !dbg !5654
  call void @llvm.dbg.declare(metadata i8** %vay, metadata !5657, metadata !820), !dbg !5658
  %15 = load %struct.AVFrame*, %struct.AVFrame** %axis.addr, align 8, !dbg !5659
  %data5 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %15, i32 0, i32 0, !dbg !5660
  %arrayidx6 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data5, i64 0, i64 0, !dbg !5659
  %16 = load i8*, i8** %arrayidx6, align 8, !dbg !5659
  store i8* %16, i8** %vay, align 8, !dbg !5658
  call void @llvm.dbg.declare(metadata i8** %vau, metadata !5661, metadata !820), !dbg !5662
  %17 = load %struct.AVFrame*, %struct.AVFrame** %axis.addr, align 8, !dbg !5663
  %data7 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %17, i32 0, i32 0, !dbg !5664
  %arrayidx8 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data7, i64 0, i64 1, !dbg !5663
  %18 = load i8*, i8** %arrayidx8, align 8, !dbg !5663
  store i8* %18, i8** %vau, align 8, !dbg !5662
  call void @llvm.dbg.declare(metadata i8** %vav, metadata !5665, metadata !820), !dbg !5666
  %19 = load %struct.AVFrame*, %struct.AVFrame** %axis.addr, align 8, !dbg !5667
  %data9 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %19, i32 0, i32 0, !dbg !5668
  %arrayidx10 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data9, i64 0, i64 2, !dbg !5667
  %20 = load i8*, i8** %arrayidx10, align 8, !dbg !5667
  store i8* %20, i8** %vav, align 8, !dbg !5666
  call void @llvm.dbg.declare(metadata i8** %vaa, metadata !5669, metadata !820), !dbg !5670
  %21 = load %struct.AVFrame*, %struct.AVFrame** %axis.addr, align 8, !dbg !5671
  %data11 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %21, i32 0, i32 0, !dbg !5672
  %arrayidx12 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data11, i64 0, i64 3, !dbg !5671
  %22 = load i8*, i8** %arrayidx12, align 8, !dbg !5671
  store i8* %22, i8** %vaa, align 8, !dbg !5670
  call void @llvm.dbg.declare(metadata i32* %lsy, metadata !5673, metadata !820), !dbg !5674
  %23 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5675
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %23, i32 0, i32 1, !dbg !5676
  %arrayidx13 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 0, !dbg !5675
  %24 = load i32, i32* %arrayidx13, align 8, !dbg !5675
  store i32 %24, i32* %lsy, align 4, !dbg !5674
  call void @llvm.dbg.declare(metadata i32* %lsu, metadata !5677, metadata !820), !dbg !5678
  %25 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5679
  %linesize14 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %25, i32 0, i32 1, !dbg !5680
  %arrayidx15 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize14, i64 0, i64 1, !dbg !5679
  %26 = load i32, i32* %arrayidx15, align 4, !dbg !5679
  store i32 %26, i32* %lsu, align 4, !dbg !5678
  call void @llvm.dbg.declare(metadata i32* %lsv, metadata !5681, metadata !820), !dbg !5682
  %27 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5683
  %linesize16 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %27, i32 0, i32 1, !dbg !5684
  %arrayidx17 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize16, i64 0, i64 2, !dbg !5683
  %28 = load i32, i32* %arrayidx17, align 8, !dbg !5683
  store i32 %28, i32* %lsv, align 4, !dbg !5682
  call void @llvm.dbg.declare(metadata i32* %lsay, metadata !5685, metadata !820), !dbg !5686
  %29 = load %struct.AVFrame*, %struct.AVFrame** %axis.addr, align 8, !dbg !5687
  %linesize18 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %29, i32 0, i32 1, !dbg !5688
  %arrayidx19 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize18, i64 0, i64 0, !dbg !5687
  %30 = load i32, i32* %arrayidx19, align 8, !dbg !5687
  store i32 %30, i32* %lsay, align 4, !dbg !5686
  call void @llvm.dbg.declare(metadata i32* %lsau, metadata !5689, metadata !820), !dbg !5690
  %31 = load %struct.AVFrame*, %struct.AVFrame** %axis.addr, align 8, !dbg !5691
  %linesize20 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %31, i32 0, i32 1, !dbg !5692
  %arrayidx21 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize20, i64 0, i64 1, !dbg !5691
  %32 = load i32, i32* %arrayidx21, align 4, !dbg !5691
  store i32 %32, i32* %lsau, align 4, !dbg !5690
  call void @llvm.dbg.declare(metadata i32* %lsav, metadata !5693, metadata !820), !dbg !5694
  %33 = load %struct.AVFrame*, %struct.AVFrame** %axis.addr, align 8, !dbg !5695
  %linesize22 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %33, i32 0, i32 1, !dbg !5696
  %arrayidx23 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize22, i64 0, i64 2, !dbg !5695
  %34 = load i32, i32* %arrayidx23, align 8, !dbg !5695
  store i32 %34, i32* %lsav, align 4, !dbg !5694
  call void @llvm.dbg.declare(metadata i32* %lsaa, metadata !5697, metadata !820), !dbg !5698
  %35 = load %struct.AVFrame*, %struct.AVFrame** %axis.addr, align 8, !dbg !5699
  %linesize24 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %35, i32 0, i32 1, !dbg !5700
  %arrayidx25 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize24, i64 0, i64 3, !dbg !5699
  %36 = load i32, i32* %arrayidx25, align 4, !dbg !5699
  store i32 %36, i32* %lsaa, align 4, !dbg !5698
  call void @llvm.dbg.declare(metadata i8** %lpy, metadata !5701, metadata !820), !dbg !5702
  call void @llvm.dbg.declare(metadata i8** %lpu, metadata !5703, metadata !820), !dbg !5704
  call void @llvm.dbg.declare(metadata i8** %lpv, metadata !5705, metadata !820), !dbg !5706
  call void @llvm.dbg.declare(metadata i8** %lpay, metadata !5707, metadata !820), !dbg !5708
  call void @llvm.dbg.declare(metadata i8** %lpau, metadata !5709, metadata !820), !dbg !5710
  call void @llvm.dbg.declare(metadata i8** %lpav, metadata !5711, metadata !820), !dbg !5712
  call void @llvm.dbg.declare(metadata i8** %lpaa, metadata !5713, metadata !820), !dbg !5714
  store i32 0, i32* %y, align 4, !dbg !5715
  br label %for.cond, !dbg !5717

for.cond:                                         ; preds = %for.inc1118, %cond.end
  %37 = load i32, i32* %y, align 4, !dbg !5718
  %38 = load i32, i32* %h, align 4, !dbg !5721
  %cmp26 = icmp slt i32 %37, %38, !dbg !5722
  br i1 %cmp26, label %for.body, label %for.end1120, !dbg !5723

for.body:                                         ; preds = %for.cond
  %39 = load i32, i32* %fmt, align 4, !dbg !5724
  %cmp27 = icmp eq i32 %39, 0, !dbg !5726
  br i1 %cmp27, label %cond.true28, label %cond.false30, !dbg !5727

cond.true28:                                      ; preds = %for.body
  %40 = load i32, i32* %y, align 4, !dbg !5728
  %div29 = sdiv i32 %40, 2, !dbg !5730
  br label %cond.end31, !dbg !5731

cond.false30:                                     ; preds = %for.body
  %41 = load i32, i32* %y, align 4, !dbg !5732
  br label %cond.end31, !dbg !5734

cond.end31:                                       ; preds = %cond.false30, %cond.true28
  %cond32 = phi i32 [ %div29, %cond.true28 ], [ %41, %cond.false30 ], !dbg !5735
  store i32 %cond32, i32* %yh, align 4, !dbg !5737
  %42 = load i8*, i8** %vy, align 8, !dbg !5738
  %43 = load i32, i32* %off.addr, align 4, !dbg !5739
  %44 = load i32, i32* %y, align 4, !dbg !5740
  %add = add nsw i32 %43, %44, !dbg !5741
  %45 = load i32, i32* %lsy, align 4, !dbg !5742
  %mul = mul nsw i32 %add, %45, !dbg !5743
  %idx.ext = sext i32 %mul to i64, !dbg !5744
  %add.ptr = getelementptr inbounds i8, i8* %42, i64 %idx.ext, !dbg !5744
  store i8* %add.ptr, i8** %lpy, align 8, !dbg !5745
  %46 = load i8*, i8** %vu, align 8, !dbg !5746
  %47 = load i32, i32* %offh, align 4, !dbg !5747
  %48 = load i32, i32* %yh, align 4, !dbg !5748
  %add33 = add nsw i32 %47, %48, !dbg !5749
  %49 = load i32, i32* %lsu, align 4, !dbg !5750
  %mul34 = mul nsw i32 %add33, %49, !dbg !5751
  %idx.ext35 = sext i32 %mul34 to i64, !dbg !5752
  %add.ptr36 = getelementptr inbounds i8, i8* %46, i64 %idx.ext35, !dbg !5752
  store i8* %add.ptr36, i8** %lpu, align 8, !dbg !5753
  %50 = load i8*, i8** %vv, align 8, !dbg !5754
  %51 = load i32, i32* %offh, align 4, !dbg !5755
  %52 = load i32, i32* %yh, align 4, !dbg !5756
  %add37 = add nsw i32 %51, %52, !dbg !5757
  %53 = load i32, i32* %lsv, align 4, !dbg !5758
  %mul38 = mul nsw i32 %add37, %53, !dbg !5759
  %idx.ext39 = sext i32 %mul38 to i64, !dbg !5760
  %add.ptr40 = getelementptr inbounds i8, i8* %50, i64 %idx.ext39, !dbg !5760
  store i8* %add.ptr40, i8** %lpv, align 8, !dbg !5761
  %54 = load i8*, i8** %vay, align 8, !dbg !5762
  %55 = load i32, i32* %y, align 4, !dbg !5763
  %56 = load i32, i32* %lsay, align 4, !dbg !5764
  %mul41 = mul nsw i32 %55, %56, !dbg !5765
  %idx.ext42 = sext i32 %mul41 to i64, !dbg !5766
  %add.ptr43 = getelementptr inbounds i8, i8* %54, i64 %idx.ext42, !dbg !5766
  store i8* %add.ptr43, i8** %lpay, align 8, !dbg !5767
  %57 = load i8*, i8** %vau, align 8, !dbg !5768
  %58 = load i32, i32* %y, align 4, !dbg !5769
  %59 = load i32, i32* %lsau, align 4, !dbg !5770
  %mul44 = mul nsw i32 %58, %59, !dbg !5771
  %idx.ext45 = sext i32 %mul44 to i64, !dbg !5772
  %add.ptr46 = getelementptr inbounds i8, i8* %57, i64 %idx.ext45, !dbg !5772
  store i8* %add.ptr46, i8** %lpau, align 8, !dbg !5773
  %60 = load i8*, i8** %vav, align 8, !dbg !5774
  %61 = load i32, i32* %y, align 4, !dbg !5775
  %62 = load i32, i32* %lsav, align 4, !dbg !5776
  %mul47 = mul nsw i32 %61, %62, !dbg !5777
  %idx.ext48 = sext i32 %mul47 to i64, !dbg !5778
  %add.ptr49 = getelementptr inbounds i8, i8* %60, i64 %idx.ext48, !dbg !5778
  store i8* %add.ptr49, i8** %lpav, align 8, !dbg !5779
  %63 = load i8*, i8** %vaa, align 8, !dbg !5780
  %64 = load i32, i32* %y, align 4, !dbg !5781
  %65 = load i32, i32* %lsaa, align 4, !dbg !5782
  %mul50 = mul nsw i32 %64, %65, !dbg !5783
  %idx.ext51 = sext i32 %mul50 to i64, !dbg !5784
  %add.ptr52 = getelementptr inbounds i8, i8* %63, i64 %idx.ext51, !dbg !5784
  store i8* %add.ptr52, i8** %lpaa, align 8, !dbg !5785
  %66 = load i32, i32* %fmt, align 4, !dbg !5786
  %cmp53 = icmp eq i32 %66, 5, !dbg !5788
  br i1 %cmp53, label %if.then, label %if.else216, !dbg !5789

if.then:                                          ; preds = %cond.end31
  store i32 0, i32* %x, align 4, !dbg !5790
  br label %for.cond54, !dbg !5793

for.cond54:                                       ; preds = %for.inc, %if.then
  %67 = load i32, i32* %x, align 4, !dbg !5794
  %68 = load i32, i32* %w, align 4, !dbg !5797
  %cmp55 = icmp slt i32 %67, %68, !dbg !5798
  br i1 %cmp55, label %for.body56, label %for.end, !dbg !5799

for.body56:                                       ; preds = %for.cond54
  br label %do.body, !dbg !5800, !llvm.loop !5802

do.body:                                          ; preds = %for.body56
  %69 = load i8*, i8** %lpaa, align 8, !dbg !5803
  %70 = load i8, i8* %69, align 1, !dbg !5807
  %tobool = icmp ne i8 %70, 0, !dbg !5807
  br i1 %tobool, label %if.else, label %if.then57, !dbg !5808

if.then57:                                        ; preds = %do.body
  %71 = load i32, i32* %x, align 4, !dbg !5809
  %idxprom = sext i32 %71 to i64, !dbg !5812
  %72 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !5812
  %arrayidx58 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %72, i64 %idxprom, !dbg !5812
  %yuv = bitcast %union.ColorFloat* %arrayidx58 to %struct.YUVFloat*, !dbg !5813
  %y59 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv, i32 0, i32 0, !dbg !5814
  %73 = load float, float* %y59, align 4, !dbg !5814
  %add60 = fadd float %73, 1.600000e+01, !dbg !5815
  %call = call i64 @lrintf(float %add60) #8, !dbg !5816
  %conv = trunc i64 %call to i8, !dbg !5816
  %74 = load i8*, i8** %lpy, align 8, !dbg !5817
  store i8 %conv, i8* %74, align 1, !dbg !5818
  %75 = load i32, i32* %x, align 4, !dbg !5819
  %idxprom61 = sext i32 %75 to i64, !dbg !5820
  %76 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !5820
  %arrayidx62 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %76, i64 %idxprom61, !dbg !5820
  %yuv63 = bitcast %union.ColorFloat* %arrayidx62 to %struct.YUVFloat*, !dbg !5821
  %u = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv63, i32 0, i32 1, !dbg !5822
  %77 = load float, float* %u, align 4, !dbg !5822
  %add64 = fadd float %77, 1.280000e+02, !dbg !5823
  %call65 = call i64 @lrintf(float %add64) #8, !dbg !5824
  %conv66 = trunc i64 %call65 to i8, !dbg !5826
  %78 = load i8*, i8** %lpu, align 8, !dbg !5827
  store i8 %conv66, i8* %78, align 1, !dbg !5828
  %79 = load i32, i32* %x, align 4, !dbg !5829
  %idxprom67 = sext i32 %79 to i64, !dbg !5830
  %80 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !5830
  %arrayidx68 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %80, i64 %idxprom67, !dbg !5830
  %yuv69 = bitcast %union.ColorFloat* %arrayidx68 to %struct.YUVFloat*, !dbg !5831
  %v = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv69, i32 0, i32 2, !dbg !5832
  %81 = load float, float* %v, align 4, !dbg !5832
  %add70 = fadd float %81, 1.280000e+02, !dbg !5833
  %call71 = call i64 @lrintf(float %add70) #8, !dbg !5834
  %conv72 = trunc i64 %call71 to i8, !dbg !5836
  %82 = load i8*, i8** %lpv, align 8, !dbg !5837
  store i8 %conv72, i8* %82, align 1, !dbg !5838
  br label %if.end119, !dbg !5839

if.else:                                          ; preds = %do.body
  %83 = load i8*, i8** %lpaa, align 8, !dbg !5840
  %84 = load i8, i8* %83, align 1, !dbg !5843
  %conv73 = zext i8 %84 to i32, !dbg !5843
  %cmp74 = icmp eq i32 255, %conv73, !dbg !5844
  br i1 %cmp74, label %if.then76, label %if.else77, !dbg !5845

if.then76:                                        ; preds = %if.else
  %85 = load i8*, i8** %lpay, align 8, !dbg !5846
  %86 = load i8, i8* %85, align 1, !dbg !5849
  %87 = load i8*, i8** %lpy, align 8, !dbg !5850
  store i8 %86, i8* %87, align 1, !dbg !5851
  %88 = load i8*, i8** %lpau, align 8, !dbg !5852
  %89 = load i8, i8* %88, align 1, !dbg !5853
  %90 = load i8*, i8** %lpu, align 8, !dbg !5854
  store i8 %89, i8* %90, align 1, !dbg !5855
  %91 = load i8*, i8** %lpav, align 8, !dbg !5856
  %92 = load i8, i8* %91, align 1, !dbg !5857
  %93 = load i8*, i8** %lpv, align 8, !dbg !5858
  store i8 %92, i8* %93, align 1, !dbg !5859
  br label %if.end, !dbg !5860

if.else77:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata float* %a, metadata !5861, metadata !820), !dbg !5863
  %94 = load i8*, i8** %lpaa, align 8, !dbg !5864
  %95 = load i8, i8* %94, align 1, !dbg !5866
  %conv78 = zext i8 %95 to i32, !dbg !5867
  %conv79 = sitofp i32 %conv78 to float, !dbg !5867
  %mul80 = fmul float 0x3F70101020000000, %conv79, !dbg !5868
  store float %mul80, float* %a, align 4, !dbg !5869
  %96 = load float, float* %a, align 4, !dbg !5870
  %97 = load i8*, i8** %lpay, align 8, !dbg !5871
  %98 = load i8, i8* %97, align 1, !dbg !5872
  %conv81 = zext i8 %98 to i32, !dbg !5873
  %conv82 = sitofp i32 %conv81 to float, !dbg !5873
  %mul83 = fmul float %96, %conv82, !dbg !5874
  %99 = load float, float* %a, align 4, !dbg !5875
  %sub = fsub float 1.000000e+00, %99, !dbg !5876
  %100 = load i32, i32* %x, align 4, !dbg !5877
  %idxprom84 = sext i32 %100 to i64, !dbg !5878
  %101 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !5878
  %arrayidx85 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %101, i64 %idxprom84, !dbg !5878
  %yuv86 = bitcast %union.ColorFloat* %arrayidx85 to %struct.YUVFloat*, !dbg !5879
  %y87 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv86, i32 0, i32 0, !dbg !5880
  %102 = load float, float* %y87, align 4, !dbg !5880
  %add88 = fadd float %102, 1.600000e+01, !dbg !5881
  %mul89 = fmul float %sub, %add88, !dbg !5882
  %add90 = fadd float %mul83, %mul89, !dbg !5883
  %call91 = call i64 @lrintf(float %add90) #8, !dbg !5884
  %conv92 = trunc i64 %call91 to i8, !dbg !5884
  %103 = load i8*, i8** %lpy, align 8, !dbg !5885
  store i8 %conv92, i8* %103, align 1, !dbg !5886
  %104 = load float, float* %a, align 4, !dbg !5887
  %105 = load i8*, i8** %lpau, align 8, !dbg !5888
  %106 = load i8, i8* %105, align 1, !dbg !5889
  %conv93 = zext i8 %106 to i32, !dbg !5890
  %conv94 = sitofp i32 %conv93 to float, !dbg !5890
  %mul95 = fmul float %104, %conv94, !dbg !5891
  %107 = load float, float* %a, align 4, !dbg !5892
  %sub96 = fsub float 1.000000e+00, %107, !dbg !5893
  %108 = load i32, i32* %x, align 4, !dbg !5894
  %idxprom97 = sext i32 %108 to i64, !dbg !5895
  %109 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !5895
  %arrayidx98 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %109, i64 %idxprom97, !dbg !5895
  %yuv99 = bitcast %union.ColorFloat* %arrayidx98 to %struct.YUVFloat*, !dbg !5896
  %u100 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv99, i32 0, i32 1, !dbg !5897
  %110 = load float, float* %u100, align 4, !dbg !5897
  %add101 = fadd float %110, 1.280000e+02, !dbg !5898
  %mul102 = fmul float %sub96, %add101, !dbg !5899
  %add103 = fadd float %mul95, %mul102, !dbg !5900
  %call104 = call i64 @lrintf(float %add103) #8, !dbg !5901
  %conv105 = trunc i64 %call104 to i8, !dbg !5903
  %111 = load i8*, i8** %lpu, align 8, !dbg !5904
  store i8 %conv105, i8* %111, align 1, !dbg !5905
  %112 = load float, float* %a, align 4, !dbg !5906
  %113 = load i8*, i8** %lpav, align 8, !dbg !5907
  %114 = load i8, i8* %113, align 1, !dbg !5908
  %conv106 = zext i8 %114 to i32, !dbg !5909
  %conv107 = sitofp i32 %conv106 to float, !dbg !5909
  %mul108 = fmul float %112, %conv107, !dbg !5910
  %115 = load float, float* %a, align 4, !dbg !5911
  %sub109 = fsub float 1.000000e+00, %115, !dbg !5912
  %116 = load i32, i32* %x, align 4, !dbg !5913
  %idxprom110 = sext i32 %116 to i64, !dbg !5914
  %117 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !5914
  %arrayidx111 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %117, i64 %idxprom110, !dbg !5914
  %yuv112 = bitcast %union.ColorFloat* %arrayidx111 to %struct.YUVFloat*, !dbg !5915
  %v113 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv112, i32 0, i32 2, !dbg !5916
  %118 = load float, float* %v113, align 4, !dbg !5916
  %add114 = fadd float %118, 1.280000e+02, !dbg !5917
  %mul115 = fmul float %sub109, %add114, !dbg !5918
  %add116 = fadd float %mul108, %mul115, !dbg !5919
  %call117 = call i64 @lrintf(float %add116) #8, !dbg !5920
  %conv118 = trunc i64 %call117 to i8, !dbg !5922
  %119 = load i8*, i8** %lpv, align 8, !dbg !5923
  store i8 %conv118, i8* %119, align 1, !dbg !5924
  br label %if.end

if.end:                                           ; preds = %if.else77, %if.then76
  br label %if.end119

if.end119:                                        ; preds = %if.end, %if.then57
  %120 = load i8*, i8** %lpy, align 8, !dbg !5925
  %incdec.ptr = getelementptr inbounds i8, i8* %120, i32 1, !dbg !5925
  store i8* %incdec.ptr, i8** %lpy, align 8, !dbg !5925
  %121 = load i8*, i8** %lpu, align 8, !dbg !5927
  %incdec.ptr120 = getelementptr inbounds i8, i8* %121, i32 1, !dbg !5927
  store i8* %incdec.ptr120, i8** %lpu, align 8, !dbg !5927
  %122 = load i8*, i8** %lpv, align 8, !dbg !5928
  %incdec.ptr121 = getelementptr inbounds i8, i8* %122, i32 1, !dbg !5928
  store i8* %incdec.ptr121, i8** %lpv, align 8, !dbg !5928
  %123 = load i8*, i8** %lpay, align 8, !dbg !5929
  %incdec.ptr122 = getelementptr inbounds i8, i8* %123, i32 1, !dbg !5929
  store i8* %incdec.ptr122, i8** %lpay, align 8, !dbg !5929
  %124 = load i8*, i8** %lpau, align 8, !dbg !5930
  %incdec.ptr123 = getelementptr inbounds i8, i8* %124, i32 1, !dbg !5930
  store i8* %incdec.ptr123, i8** %lpau, align 8, !dbg !5930
  %125 = load i8*, i8** %lpav, align 8, !dbg !5931
  %incdec.ptr124 = getelementptr inbounds i8, i8* %125, i32 1, !dbg !5931
  store i8* %incdec.ptr124, i8** %lpav, align 8, !dbg !5931
  %126 = load i8*, i8** %lpaa, align 8, !dbg !5932
  %incdec.ptr125 = getelementptr inbounds i8, i8* %126, i32 1, !dbg !5932
  store i8* %incdec.ptr125, i8** %lpaa, align 8, !dbg !5932
  br label %do.end, !dbg !5933

do.end:                                           ; preds = %if.end119
  br label %do.body126, !dbg !5934, !llvm.loop !5935

do.body126:                                       ; preds = %do.end
  %127 = load i8*, i8** %lpaa, align 8, !dbg !5936
  %128 = load i8, i8* %127, align 1, !dbg !5940
  %tobool127 = icmp ne i8 %128, 0, !dbg !5940
  br i1 %tobool127, label %if.else153, label %if.then128, !dbg !5941

if.then128:                                       ; preds = %do.body126
  %129 = load i32, i32* %x, align 4, !dbg !5942
  %add129 = add nsw i32 %129, 1, !dbg !5945
  %idxprom130 = sext i32 %add129 to i64, !dbg !5946
  %130 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !5946
  %arrayidx131 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %130, i64 %idxprom130, !dbg !5946
  %yuv132 = bitcast %union.ColorFloat* %arrayidx131 to %struct.YUVFloat*, !dbg !5947
  %y133 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv132, i32 0, i32 0, !dbg !5948
  %131 = load float, float* %y133, align 4, !dbg !5948
  %add134 = fadd float %131, 1.600000e+01, !dbg !5949
  %call135 = call i64 @lrintf(float %add134) #8, !dbg !5950
  %conv136 = trunc i64 %call135 to i8, !dbg !5950
  %132 = load i8*, i8** %lpy, align 8, !dbg !5951
  store i8 %conv136, i8* %132, align 1, !dbg !5952
  %133 = load i32, i32* %x, align 4, !dbg !5953
  %add137 = add nsw i32 %133, 1, !dbg !5954
  %idxprom138 = sext i32 %add137 to i64, !dbg !5955
  %134 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !5955
  %arrayidx139 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %134, i64 %idxprom138, !dbg !5955
  %yuv140 = bitcast %union.ColorFloat* %arrayidx139 to %struct.YUVFloat*, !dbg !5956
  %u141 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv140, i32 0, i32 1, !dbg !5957
  %135 = load float, float* %u141, align 4, !dbg !5957
  %add142 = fadd float %135, 1.280000e+02, !dbg !5958
  %call143 = call i64 @lrintf(float %add142) #8, !dbg !5959
  %conv144 = trunc i64 %call143 to i8, !dbg !5961
  %136 = load i8*, i8** %lpu, align 8, !dbg !5962
  store i8 %conv144, i8* %136, align 1, !dbg !5963
  %137 = load i32, i32* %x, align 4, !dbg !5964
  %add145 = add nsw i32 %137, 1, !dbg !5965
  %idxprom146 = sext i32 %add145 to i64, !dbg !5966
  %138 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !5966
  %arrayidx147 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %138, i64 %idxprom146, !dbg !5966
  %yuv148 = bitcast %union.ColorFloat* %arrayidx147 to %struct.YUVFloat*, !dbg !5967
  %v149 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv148, i32 0, i32 2, !dbg !5968
  %139 = load float, float* %v149, align 4, !dbg !5968
  %add150 = fadd float %139, 1.280000e+02, !dbg !5969
  %call151 = call i64 @lrintf(float %add150) #8, !dbg !5970
  %conv152 = trunc i64 %call151 to i8, !dbg !5972
  %140 = load i8*, i8** %lpv, align 8, !dbg !5973
  store i8 %conv152, i8* %140, align 1, !dbg !5974
  br label %if.end206, !dbg !5975

if.else153:                                       ; preds = %do.body126
  %141 = load i8*, i8** %lpaa, align 8, !dbg !5976
  %142 = load i8, i8* %141, align 1, !dbg !5979
  %conv154 = zext i8 %142 to i32, !dbg !5979
  %cmp155 = icmp eq i32 255, %conv154, !dbg !5980
  br i1 %cmp155, label %if.then157, label %if.else158, !dbg !5981

if.then157:                                       ; preds = %if.else153
  %143 = load i8*, i8** %lpay, align 8, !dbg !5982
  %144 = load i8, i8* %143, align 1, !dbg !5985
  %145 = load i8*, i8** %lpy, align 8, !dbg !5986
  store i8 %144, i8* %145, align 1, !dbg !5987
  %146 = load i8*, i8** %lpau, align 8, !dbg !5988
  %147 = load i8, i8* %146, align 1, !dbg !5989
  %148 = load i8*, i8** %lpu, align 8, !dbg !5990
  store i8 %147, i8* %148, align 1, !dbg !5991
  %149 = load i8*, i8** %lpav, align 8, !dbg !5992
  %150 = load i8, i8* %149, align 1, !dbg !5993
  %151 = load i8*, i8** %lpv, align 8, !dbg !5994
  store i8 %150, i8* %151, align 1, !dbg !5995
  br label %if.end205, !dbg !5996

if.else158:                                       ; preds = %if.else153
  call void @llvm.dbg.declare(metadata float* %a159, metadata !5997, metadata !820), !dbg !5999
  %152 = load i8*, i8** %lpaa, align 8, !dbg !6000
  %153 = load i8, i8* %152, align 1, !dbg !6002
  %conv160 = zext i8 %153 to i32, !dbg !6003
  %conv161 = sitofp i32 %conv160 to float, !dbg !6003
  %mul162 = fmul float 0x3F70101020000000, %conv161, !dbg !6004
  store float %mul162, float* %a159, align 4, !dbg !6005
  %154 = load float, float* %a159, align 4, !dbg !6006
  %155 = load i8*, i8** %lpay, align 8, !dbg !6007
  %156 = load i8, i8* %155, align 1, !dbg !6008
  %conv163 = zext i8 %156 to i32, !dbg !6009
  %conv164 = sitofp i32 %conv163 to float, !dbg !6009
  %mul165 = fmul float %154, %conv164, !dbg !6010
  %157 = load float, float* %a159, align 4, !dbg !6011
  %sub166 = fsub float 1.000000e+00, %157, !dbg !6012
  %158 = load i32, i32* %x, align 4, !dbg !6013
  %add167 = add nsw i32 %158, 1, !dbg !6014
  %idxprom168 = sext i32 %add167 to i64, !dbg !6015
  %159 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !6015
  %arrayidx169 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %159, i64 %idxprom168, !dbg !6015
  %yuv170 = bitcast %union.ColorFloat* %arrayidx169 to %struct.YUVFloat*, !dbg !6016
  %y171 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv170, i32 0, i32 0, !dbg !6017
  %160 = load float, float* %y171, align 4, !dbg !6017
  %add172 = fadd float %160, 1.600000e+01, !dbg !6018
  %mul173 = fmul float %sub166, %add172, !dbg !6019
  %add174 = fadd float %mul165, %mul173, !dbg !6020
  %call175 = call i64 @lrintf(float %add174) #8, !dbg !6021
  %conv176 = trunc i64 %call175 to i8, !dbg !6021
  %161 = load i8*, i8** %lpy, align 8, !dbg !6022
  store i8 %conv176, i8* %161, align 1, !dbg !6023
  %162 = load float, float* %a159, align 4, !dbg !6024
  %163 = load i8*, i8** %lpau, align 8, !dbg !6025
  %164 = load i8, i8* %163, align 1, !dbg !6026
  %conv177 = zext i8 %164 to i32, !dbg !6027
  %conv178 = sitofp i32 %conv177 to float, !dbg !6027
  %mul179 = fmul float %162, %conv178, !dbg !6028
  %165 = load float, float* %a159, align 4, !dbg !6029
  %sub180 = fsub float 1.000000e+00, %165, !dbg !6030
  %166 = load i32, i32* %x, align 4, !dbg !6031
  %add181 = add nsw i32 %166, 1, !dbg !6032
  %idxprom182 = sext i32 %add181 to i64, !dbg !6033
  %167 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !6033
  %arrayidx183 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %167, i64 %idxprom182, !dbg !6033
  %yuv184 = bitcast %union.ColorFloat* %arrayidx183 to %struct.YUVFloat*, !dbg !6034
  %u185 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv184, i32 0, i32 1, !dbg !6035
  %168 = load float, float* %u185, align 4, !dbg !6035
  %add186 = fadd float %168, 1.280000e+02, !dbg !6036
  %mul187 = fmul float %sub180, %add186, !dbg !6037
  %add188 = fadd float %mul179, %mul187, !dbg !6038
  %call189 = call i64 @lrintf(float %add188) #8, !dbg !6039
  %conv190 = trunc i64 %call189 to i8, !dbg !6041
  %169 = load i8*, i8** %lpu, align 8, !dbg !6042
  store i8 %conv190, i8* %169, align 1, !dbg !6043
  %170 = load float, float* %a159, align 4, !dbg !6044
  %171 = load i8*, i8** %lpav, align 8, !dbg !6045
  %172 = load i8, i8* %171, align 1, !dbg !6046
  %conv191 = zext i8 %172 to i32, !dbg !6047
  %conv192 = sitofp i32 %conv191 to float, !dbg !6047
  %mul193 = fmul float %170, %conv192, !dbg !6048
  %173 = load float, float* %a159, align 4, !dbg !6049
  %sub194 = fsub float 1.000000e+00, %173, !dbg !6050
  %174 = load i32, i32* %x, align 4, !dbg !6051
  %add195 = add nsw i32 %174, 1, !dbg !6052
  %idxprom196 = sext i32 %add195 to i64, !dbg !6053
  %175 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !6053
  %arrayidx197 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %175, i64 %idxprom196, !dbg !6053
  %yuv198 = bitcast %union.ColorFloat* %arrayidx197 to %struct.YUVFloat*, !dbg !6054
  %v199 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv198, i32 0, i32 2, !dbg !6055
  %176 = load float, float* %v199, align 4, !dbg !6055
  %add200 = fadd float %176, 1.280000e+02, !dbg !6056
  %mul201 = fmul float %sub194, %add200, !dbg !6057
  %add202 = fadd float %mul193, %mul201, !dbg !6058
  %call203 = call i64 @lrintf(float %add202) #8, !dbg !6059
  %conv204 = trunc i64 %call203 to i8, !dbg !6061
  %177 = load i8*, i8** %lpv, align 8, !dbg !6062
  store i8 %conv204, i8* %177, align 1, !dbg !6063
  br label %if.end205

if.end205:                                        ; preds = %if.else158, %if.then157
  br label %if.end206

if.end206:                                        ; preds = %if.end205, %if.then128
  %178 = load i8*, i8** %lpy, align 8, !dbg !6064
  %incdec.ptr207 = getelementptr inbounds i8, i8* %178, i32 1, !dbg !6064
  store i8* %incdec.ptr207, i8** %lpy, align 8, !dbg !6064
  %179 = load i8*, i8** %lpu, align 8, !dbg !6066
  %incdec.ptr208 = getelementptr inbounds i8, i8* %179, i32 1, !dbg !6066
  store i8* %incdec.ptr208, i8** %lpu, align 8, !dbg !6066
  %180 = load i8*, i8** %lpv, align 8, !dbg !6067
  %incdec.ptr209 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !6067
  store i8* %incdec.ptr209, i8** %lpv, align 8, !dbg !6067
  %181 = load i8*, i8** %lpay, align 8, !dbg !6068
  %incdec.ptr210 = getelementptr inbounds i8, i8* %181, i32 1, !dbg !6068
  store i8* %incdec.ptr210, i8** %lpay, align 8, !dbg !6068
  %182 = load i8*, i8** %lpau, align 8, !dbg !6069
  %incdec.ptr211 = getelementptr inbounds i8, i8* %182, i32 1, !dbg !6069
  store i8* %incdec.ptr211, i8** %lpau, align 8, !dbg !6069
  %183 = load i8*, i8** %lpav, align 8, !dbg !6070
  %incdec.ptr212 = getelementptr inbounds i8, i8* %183, i32 1, !dbg !6070
  store i8* %incdec.ptr212, i8** %lpav, align 8, !dbg !6070
  %184 = load i8*, i8** %lpaa, align 8, !dbg !6071
  %incdec.ptr213 = getelementptr inbounds i8, i8* %184, i32 1, !dbg !6071
  store i8* %incdec.ptr213, i8** %lpaa, align 8, !dbg !6071
  br label %do.end214, !dbg !6072

do.end214:                                        ; preds = %if.end206
  br label %for.inc, !dbg !6073

for.inc:                                          ; preds = %do.end214
  %185 = load i32, i32* %x, align 4, !dbg !6074
  %add215 = add nsw i32 %185, 2, !dbg !6074
  store i32 %add215, i32* %x, align 4, !dbg !6074
  br label %for.cond54, !dbg !6076, !llvm.loop !6077

for.end:                                          ; preds = %for.cond54
  br label %if.end633, !dbg !6079

if.else216:                                       ; preds = %cond.end31
  %186 = load i32, i32* %fmt, align 4, !dbg !6080
  %cmp217 = icmp eq i32 %186, 4, !dbg !6083
  br i1 %cmp217, label %if.then219, label %if.else393, !dbg !6080

if.then219:                                       ; preds = %if.else216
  store i32 0, i32* %x, align 4, !dbg !6084
  br label %for.cond220, !dbg !6087

for.cond220:                                      ; preds = %for.inc390, %if.then219
  %187 = load i32, i32* %x, align 4, !dbg !6088
  %188 = load i32, i32* %w, align 4, !dbg !6091
  %cmp221 = icmp slt i32 %187, %188, !dbg !6092
  br i1 %cmp221, label %for.body223, label %for.end392, !dbg !6093

for.body223:                                      ; preds = %for.cond220
  br label %do.body224, !dbg !6094, !llvm.loop !6096

do.body224:                                       ; preds = %for.body223
  %189 = load i8*, i8** %lpaa, align 8, !dbg !6097
  %190 = load i8, i8* %189, align 1, !dbg !6101
  %tobool225 = icmp ne i8 %190, 0, !dbg !6101
  br i1 %tobool225, label %if.else234, label %if.then226, !dbg !6102

if.then226:                                       ; preds = %do.body224
  %191 = load i32, i32* %x, align 4, !dbg !6103
  %idxprom227 = sext i32 %191 to i64, !dbg !6106
  %192 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !6106
  %arrayidx228 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %192, i64 %idxprom227, !dbg !6106
  %yuv229 = bitcast %union.ColorFloat* %arrayidx228 to %struct.YUVFloat*, !dbg !6107
  %y230 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv229, i32 0, i32 0, !dbg !6108
  %193 = load float, float* %y230, align 4, !dbg !6108
  %add231 = fadd float %193, 1.600000e+01, !dbg !6109
  %call232 = call i64 @lrintf(float %add231) #8, !dbg !6110
  %conv233 = trunc i64 %call232 to i8, !dbg !6110
  %194 = load i8*, i8** %lpy, align 8, !dbg !6111
  store i8 %conv233, i8* %194, align 1, !dbg !6112
  br label %if.end258, !dbg !6113

if.else234:                                       ; preds = %do.body224
  %195 = load i8*, i8** %lpaa, align 8, !dbg !6114
  %196 = load i8, i8* %195, align 1, !dbg !6117
  %conv235 = zext i8 %196 to i32, !dbg !6117
  %cmp236 = icmp eq i32 255, %conv235, !dbg !6118
  br i1 %cmp236, label %if.then238, label %if.else239, !dbg !6119

if.then238:                                       ; preds = %if.else234
  %197 = load i8*, i8** %lpay, align 8, !dbg !6120
  %198 = load i8, i8* %197, align 1, !dbg !6123
  %199 = load i8*, i8** %lpy, align 8, !dbg !6124
  store i8 %198, i8* %199, align 1, !dbg !6125
  br label %if.end257, !dbg !6126

if.else239:                                       ; preds = %if.else234
  call void @llvm.dbg.declare(metadata float* %a240, metadata !6127, metadata !820), !dbg !6129
  %200 = load i8*, i8** %lpaa, align 8, !dbg !6130
  %201 = load i8, i8* %200, align 1, !dbg !6132
  %conv241 = zext i8 %201 to i32, !dbg !6133
  %conv242 = sitofp i32 %conv241 to float, !dbg !6133
  %mul243 = fmul float 0x3F70101020000000, %conv242, !dbg !6134
  store float %mul243, float* %a240, align 4, !dbg !6135
  %202 = load float, float* %a240, align 4, !dbg !6136
  %203 = load i8*, i8** %lpay, align 8, !dbg !6137
  %204 = load i8, i8* %203, align 1, !dbg !6138
  %conv244 = zext i8 %204 to i32, !dbg !6139
  %conv245 = sitofp i32 %conv244 to float, !dbg !6139
  %mul246 = fmul float %202, %conv245, !dbg !6140
  %205 = load float, float* %a240, align 4, !dbg !6141
  %sub247 = fsub float 1.000000e+00, %205, !dbg !6142
  %206 = load i32, i32* %x, align 4, !dbg !6143
  %idxprom248 = sext i32 %206 to i64, !dbg !6144
  %207 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !6144
  %arrayidx249 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %207, i64 %idxprom248, !dbg !6144
  %yuv250 = bitcast %union.ColorFloat* %arrayidx249 to %struct.YUVFloat*, !dbg !6145
  %y251 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv250, i32 0, i32 0, !dbg !6146
  %208 = load float, float* %y251, align 4, !dbg !6146
  %add252 = fadd float %208, 1.600000e+01, !dbg !6147
  %mul253 = fmul float %sub247, %add252, !dbg !6148
  %add254 = fadd float %mul246, %mul253, !dbg !6149
  %call255 = call i64 @lrintf(float %add254) #8, !dbg !6150
  %conv256 = trunc i64 %call255 to i8, !dbg !6150
  %209 = load i8*, i8** %lpy, align 8, !dbg !6151
  store i8 %conv256, i8* %209, align 1, !dbg !6152
  br label %if.end257

if.end257:                                        ; preds = %if.else239, %if.then238
  br label %if.end258

if.end258:                                        ; preds = %if.end257, %if.then226
  %210 = load i8*, i8** %lpy, align 8, !dbg !6153
  %incdec.ptr259 = getelementptr inbounds i8, i8* %210, i32 1, !dbg !6153
  store i8* %incdec.ptr259, i8** %lpy, align 8, !dbg !6153
  %211 = load i8*, i8** %lpay, align 8, !dbg !6155
  %incdec.ptr260 = getelementptr inbounds i8, i8* %211, i32 1, !dbg !6155
  store i8* %incdec.ptr260, i8** %lpay, align 8, !dbg !6155
  %212 = load i8*, i8** %lpaa, align 8, !dbg !6156
  %add.ptr261 = getelementptr inbounds i8, i8* %212, i64 0, !dbg !6156
  store i8* %add.ptr261, i8** %lpaa, align 8, !dbg !6156
  br label %do.end262, !dbg !6157

do.end262:                                        ; preds = %if.end258
  br label %do.body263, !dbg !6158, !llvm.loop !6159

do.body263:                                       ; preds = %do.end262
  %213 = load i8*, i8** %lpaa, align 8, !dbg !6160
  %arrayidx264 = getelementptr inbounds i8, i8* %213, i64 0, !dbg !6160
  %214 = load i8, i8* %arrayidx264, align 1, !dbg !6160
  %tobool265 = icmp ne i8 %214, 0, !dbg !6160
  br i1 %tobool265, label %if.else283, label %land.lhs.true, !dbg !6164

land.lhs.true:                                    ; preds = %do.body263
  %215 = load i8*, i8** %lpaa, align 8, !dbg !6165
  %arrayidx266 = getelementptr inbounds i8, i8* %215, i64 1, !dbg !6165
  %216 = load i8, i8* %arrayidx266, align 1, !dbg !6165
  %tobool267 = icmp ne i8 %216, 0, !dbg !6165
  br i1 %tobool267, label %if.else283, label %if.then268, !dbg !6167

if.then268:                                       ; preds = %land.lhs.true
  %217 = load i32, i32* %x, align 4, !dbg !6168
  %idxprom269 = sext i32 %217 to i64, !dbg !6171
  %218 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !6171
  %arrayidx270 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %218, i64 %idxprom269, !dbg !6171
  %yuv271 = bitcast %union.ColorFloat* %arrayidx270 to %struct.YUVFloat*, !dbg !6172
  %u272 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv271, i32 0, i32 1, !dbg !6173
  %219 = load float, float* %u272, align 4, !dbg !6173
  %add273 = fadd float %219, 1.280000e+02, !dbg !6174
  %call274 = call i64 @lrintf(float %add273) #8, !dbg !6175
  %conv275 = trunc i64 %call274 to i8, !dbg !6175
  %220 = load i8*, i8** %lpu, align 8, !dbg !6176
  store i8 %conv275, i8* %220, align 1, !dbg !6177
  %221 = load i32, i32* %x, align 4, !dbg !6178
  %idxprom276 = sext i32 %221 to i64, !dbg !6179
  %222 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !6179
  %arrayidx277 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %222, i64 %idxprom276, !dbg !6179
  %yuv278 = bitcast %union.ColorFloat* %arrayidx277 to %struct.YUVFloat*, !dbg !6180
  %v279 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv278, i32 0, i32 2, !dbg !6181
  %223 = load float, float* %v279, align 4, !dbg !6181
  %add280 = fadd float %223, 1.280000e+02, !dbg !6182
  %call281 = call i64 @lrintf(float %add280) #8, !dbg !6183
  %conv282 = trunc i64 %call281 to i8, !dbg !6185
  %224 = load i8*, i8** %lpv, align 8, !dbg !6186
  store i8 %conv282, i8* %224, align 1, !dbg !6187
  br label %if.end342, !dbg !6188

if.else283:                                       ; preds = %land.lhs.true, %do.body263
  %225 = load i8*, i8** %lpaa, align 8, !dbg !6189
  %arrayidx284 = getelementptr inbounds i8, i8* %225, i64 0, !dbg !6189
  %226 = load i8, i8* %arrayidx284, align 1, !dbg !6189
  %conv285 = zext i8 %226 to i32, !dbg !6189
  %cmp286 = icmp eq i32 255, %conv285, !dbg !6192
  br i1 %cmp286, label %land.lhs.true288, label %if.else294, !dbg !6193

land.lhs.true288:                                 ; preds = %if.else283
  %227 = load i8*, i8** %lpaa, align 8, !dbg !6194
  %arrayidx289 = getelementptr inbounds i8, i8* %227, i64 1, !dbg !6194
  %228 = load i8, i8* %arrayidx289, align 1, !dbg !6194
  %conv290 = zext i8 %228 to i32, !dbg !6194
  %cmp291 = icmp eq i32 255, %conv290, !dbg !6196
  br i1 %cmp291, label %if.then293, label %if.else294, !dbg !6197

if.then293:                                       ; preds = %land.lhs.true288
  %229 = load i8*, i8** %lpau, align 8, !dbg !6198
  %230 = load i8, i8* %229, align 1, !dbg !6201
  %231 = load i8*, i8** %lpu, align 8, !dbg !6202
  store i8 %230, i8* %231, align 1, !dbg !6203
  %232 = load i8*, i8** %lpav, align 8, !dbg !6204
  %233 = load i8, i8* %232, align 1, !dbg !6205
  %234 = load i8*, i8** %lpv, align 8, !dbg !6206
  store i8 %233, i8* %234, align 1, !dbg !6207
  br label %if.end341, !dbg !6208

if.else294:                                       ; preds = %land.lhs.true288, %if.else283
  call void @llvm.dbg.declare(metadata float* %a0, metadata !6209, metadata !820), !dbg !6211
  %235 = load i8*, i8** %lpaa, align 8, !dbg !6212
  %arrayidx295 = getelementptr inbounds i8, i8* %235, i64 0, !dbg !6212
  %236 = load i8, i8* %arrayidx295, align 1, !dbg !6212
  %conv296 = zext i8 %236 to i32, !dbg !6212
  %conv297 = sitofp i32 %conv296 to float, !dbg !6212
  %mul298 = fmul float 0x3F60101020000000, %conv297, !dbg !6214
  store float %mul298, float* %a0, align 4, !dbg !6215
  call void @llvm.dbg.declare(metadata float* %a1, metadata !6216, metadata !820), !dbg !6217
  %237 = load i8*, i8** %lpaa, align 8, !dbg !6218
  %arrayidx299 = getelementptr inbounds i8, i8* %237, i64 1, !dbg !6218
  %238 = load i8, i8* %arrayidx299, align 1, !dbg !6218
  %conv300 = zext i8 %238 to i32, !dbg !6218
  %conv301 = sitofp i32 %conv300 to float, !dbg !6218
  %mul302 = fmul float 0x3F60101020000000, %conv301, !dbg !6219
  store float %mul302, float* %a1, align 4, !dbg !6220
  call void @llvm.dbg.declare(metadata float* %b, metadata !6221, metadata !820), !dbg !6222
  %239 = load float, float* %a0, align 4, !dbg !6223
  %sub303 = fsub float 1.000000e+00, %239, !dbg !6224
  %240 = load float, float* %a1, align 4, !dbg !6225
  %sub304 = fsub float %sub303, %240, !dbg !6226
  store float %sub304, float* %b, align 4, !dbg !6227
  %241 = load float, float* %a0, align 4, !dbg !6228
  %242 = load i8*, i8** %lpau, align 8, !dbg !6229
  %arrayidx305 = getelementptr inbounds i8, i8* %242, i64 0, !dbg !6229
  %243 = load i8, i8* %arrayidx305, align 1, !dbg !6229
  %conv306 = zext i8 %243 to i32, !dbg !6229
  %conv307 = sitofp i32 %conv306 to float, !dbg !6229
  %mul308 = fmul float %241, %conv307, !dbg !6230
  %244 = load float, float* %a1, align 4, !dbg !6231
  %245 = load i8*, i8** %lpau, align 8, !dbg !6232
  %arrayidx309 = getelementptr inbounds i8, i8* %245, i64 1, !dbg !6232
  %246 = load i8, i8* %arrayidx309, align 1, !dbg !6232
  %conv310 = zext i8 %246 to i32, !dbg !6232
  %conv311 = sitofp i32 %conv310 to float, !dbg !6232
  %mul312 = fmul float %244, %conv311, !dbg !6233
  %add313 = fadd float %mul308, %mul312, !dbg !6234
  %247 = load float, float* %b, align 4, !dbg !6235
  %248 = load i32, i32* %x, align 4, !dbg !6236
  %idxprom314 = sext i32 %248 to i64, !dbg !6237
  %249 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !6237
  %arrayidx315 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %249, i64 %idxprom314, !dbg !6237
  %yuv316 = bitcast %union.ColorFloat* %arrayidx315 to %struct.YUVFloat*, !dbg !6238
  %u317 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv316, i32 0, i32 1, !dbg !6239
  %250 = load float, float* %u317, align 4, !dbg !6239
  %add318 = fadd float %250, 1.280000e+02, !dbg !6240
  %mul319 = fmul float %247, %add318, !dbg !6241
  %add320 = fadd float %add313, %mul319, !dbg !6242
  %call321 = call i64 @lrintf(float %add320) #8, !dbg !6243
  %conv322 = trunc i64 %call321 to i8, !dbg !6243
  %251 = load i8*, i8** %lpu, align 8, !dbg !6244
  store i8 %conv322, i8* %251, align 1, !dbg !6245
  %252 = load float, float* %a0, align 4, !dbg !6246
  %253 = load i8*, i8** %lpav, align 8, !dbg !6247
  %arrayidx323 = getelementptr inbounds i8, i8* %253, i64 0, !dbg !6247
  %254 = load i8, i8* %arrayidx323, align 1, !dbg !6247
  %conv324 = zext i8 %254 to i32, !dbg !6247
  %conv325 = sitofp i32 %conv324 to float, !dbg !6247
  %mul326 = fmul float %252, %conv325, !dbg !6248
  %255 = load float, float* %a1, align 4, !dbg !6249
  %256 = load i8*, i8** %lpav, align 8, !dbg !6250
  %arrayidx327 = getelementptr inbounds i8, i8* %256, i64 1, !dbg !6250
  %257 = load i8, i8* %arrayidx327, align 1, !dbg !6250
  %conv328 = zext i8 %257 to i32, !dbg !6250
  %conv329 = sitofp i32 %conv328 to float, !dbg !6250
  %mul330 = fmul float %255, %conv329, !dbg !6251
  %add331 = fadd float %mul326, %mul330, !dbg !6252
  %258 = load float, float* %b, align 4, !dbg !6253
  %259 = load i32, i32* %x, align 4, !dbg !6254
  %idxprom332 = sext i32 %259 to i64, !dbg !6255
  %260 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !6255
  %arrayidx333 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %260, i64 %idxprom332, !dbg !6255
  %yuv334 = bitcast %union.ColorFloat* %arrayidx333 to %struct.YUVFloat*, !dbg !6256
  %v335 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv334, i32 0, i32 2, !dbg !6257
  %261 = load float, float* %v335, align 4, !dbg !6257
  %add336 = fadd float %261, 1.280000e+02, !dbg !6258
  %mul337 = fmul float %258, %add336, !dbg !6259
  %add338 = fadd float %add331, %mul337, !dbg !6260
  %call339 = call i64 @lrintf(float %add338) #8, !dbg !6261
  %conv340 = trunc i64 %call339 to i8, !dbg !6263
  %262 = load i8*, i8** %lpv, align 8, !dbg !6264
  store i8 %conv340, i8* %262, align 1, !dbg !6265
  br label %if.end341

if.end341:                                        ; preds = %if.else294, %if.then293
  br label %if.end342

if.end342:                                        ; preds = %if.end341, %if.then268
  %263 = load i8*, i8** %lpau, align 8, !dbg !6266
  %add.ptr343 = getelementptr inbounds i8, i8* %263, i64 2, !dbg !6266
  store i8* %add.ptr343, i8** %lpau, align 8, !dbg !6266
  %264 = load i8*, i8** %lpav, align 8, !dbg !6268
  %add.ptr344 = getelementptr inbounds i8, i8* %264, i64 2, !dbg !6268
  store i8* %add.ptr344, i8** %lpav, align 8, !dbg !6268
  %265 = load i8*, i8** %lpaa, align 8, !dbg !6269
  %incdec.ptr345 = getelementptr inbounds i8, i8* %265, i32 1, !dbg !6269
  store i8* %incdec.ptr345, i8** %lpaa, align 8, !dbg !6269
  %266 = load i8*, i8** %lpu, align 8, !dbg !6270
  %incdec.ptr346 = getelementptr inbounds i8, i8* %266, i32 1, !dbg !6270
  store i8* %incdec.ptr346, i8** %lpu, align 8, !dbg !6270
  %267 = load i8*, i8** %lpv, align 8, !dbg !6271
  %incdec.ptr347 = getelementptr inbounds i8, i8* %267, i32 1, !dbg !6271
  store i8* %incdec.ptr347, i8** %lpv, align 8, !dbg !6271
  br label %do.end348, !dbg !6272

do.end348:                                        ; preds = %if.end342
  br label %do.body349, !dbg !6273, !llvm.loop !6274

do.body349:                                       ; preds = %do.end348
  %268 = load i8*, i8** %lpaa, align 8, !dbg !6275
  %269 = load i8, i8* %268, align 1, !dbg !6279
  %tobool350 = icmp ne i8 %269, 0, !dbg !6279
  br i1 %tobool350, label %if.else360, label %if.then351, !dbg !6280

if.then351:                                       ; preds = %do.body349
  %270 = load i32, i32* %x, align 4, !dbg !6281
  %add352 = add nsw i32 %270, 1, !dbg !6284
  %idxprom353 = sext i32 %add352 to i64, !dbg !6285
  %271 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !6285
  %arrayidx354 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %271, i64 %idxprom353, !dbg !6285
  %yuv355 = bitcast %union.ColorFloat* %arrayidx354 to %struct.YUVFloat*, !dbg !6286
  %y356 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv355, i32 0, i32 0, !dbg !6287
  %272 = load float, float* %y356, align 4, !dbg !6287
  %add357 = fadd float %272, 1.600000e+01, !dbg !6288
  %call358 = call i64 @lrintf(float %add357) #8, !dbg !6289
  %conv359 = trunc i64 %call358 to i8, !dbg !6289
  %273 = load i8*, i8** %lpy, align 8, !dbg !6290
  store i8 %conv359, i8* %273, align 1, !dbg !6291
  br label %if.end385, !dbg !6292

if.else360:                                       ; preds = %do.body349
  %274 = load i8*, i8** %lpaa, align 8, !dbg !6293
  %275 = load i8, i8* %274, align 1, !dbg !6296
  %conv361 = zext i8 %275 to i32, !dbg !6296
  %cmp362 = icmp eq i32 255, %conv361, !dbg !6297
  br i1 %cmp362, label %if.then364, label %if.else365, !dbg !6298

if.then364:                                       ; preds = %if.else360
  %276 = load i8*, i8** %lpay, align 8, !dbg !6299
  %277 = load i8, i8* %276, align 1, !dbg !6302
  %278 = load i8*, i8** %lpy, align 8, !dbg !6303
  store i8 %277, i8* %278, align 1, !dbg !6304
  br label %if.end384, !dbg !6305

if.else365:                                       ; preds = %if.else360
  call void @llvm.dbg.declare(metadata float* %a366, metadata !6306, metadata !820), !dbg !6308
  %279 = load i8*, i8** %lpaa, align 8, !dbg !6309
  %280 = load i8, i8* %279, align 1, !dbg !6311
  %conv367 = zext i8 %280 to i32, !dbg !6312
  %conv368 = sitofp i32 %conv367 to float, !dbg !6312
  %mul369 = fmul float 0x3F70101020000000, %conv368, !dbg !6313
  store float %mul369, float* %a366, align 4, !dbg !6314
  %281 = load float, float* %a366, align 4, !dbg !6315
  %282 = load i8*, i8** %lpay, align 8, !dbg !6316
  %283 = load i8, i8* %282, align 1, !dbg !6317
  %conv370 = zext i8 %283 to i32, !dbg !6318
  %conv371 = sitofp i32 %conv370 to float, !dbg !6318
  %mul372 = fmul float %281, %conv371, !dbg !6319
  %284 = load float, float* %a366, align 4, !dbg !6320
  %sub373 = fsub float 1.000000e+00, %284, !dbg !6321
  %285 = load i32, i32* %x, align 4, !dbg !6322
  %add374 = add nsw i32 %285, 1, !dbg !6323
  %idxprom375 = sext i32 %add374 to i64, !dbg !6324
  %286 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !6324
  %arrayidx376 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %286, i64 %idxprom375, !dbg !6324
  %yuv377 = bitcast %union.ColorFloat* %arrayidx376 to %struct.YUVFloat*, !dbg !6325
  %y378 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv377, i32 0, i32 0, !dbg !6326
  %287 = load float, float* %y378, align 4, !dbg !6326
  %add379 = fadd float %287, 1.600000e+01, !dbg !6327
  %mul380 = fmul float %sub373, %add379, !dbg !6328
  %add381 = fadd float %mul372, %mul380, !dbg !6329
  %call382 = call i64 @lrintf(float %add381) #8, !dbg !6330
  %conv383 = trunc i64 %call382 to i8, !dbg !6330
  %288 = load i8*, i8** %lpy, align 8, !dbg !6331
  store i8 %conv383, i8* %288, align 1, !dbg !6332
  br label %if.end384

if.end384:                                        ; preds = %if.else365, %if.then364
  br label %if.end385

if.end385:                                        ; preds = %if.end384, %if.then351
  %289 = load i8*, i8** %lpy, align 8, !dbg !6333
  %incdec.ptr386 = getelementptr inbounds i8, i8* %289, i32 1, !dbg !6333
  store i8* %incdec.ptr386, i8** %lpy, align 8, !dbg !6333
  %290 = load i8*, i8** %lpay, align 8, !dbg !6335
  %incdec.ptr387 = getelementptr inbounds i8, i8* %290, i32 1, !dbg !6335
  store i8* %incdec.ptr387, i8** %lpay, align 8, !dbg !6335
  %291 = load i8*, i8** %lpaa, align 8, !dbg !6336
  %add.ptr388 = getelementptr inbounds i8, i8* %291, i64 1, !dbg !6336
  store i8* %add.ptr388, i8** %lpaa, align 8, !dbg !6336
  br label %do.end389, !dbg !6337

do.end389:                                        ; preds = %if.end385
  br label %for.inc390, !dbg !6338

for.inc390:                                       ; preds = %do.end389
  %292 = load i32, i32* %x, align 4, !dbg !6339
  %add391 = add nsw i32 %292, 2, !dbg !6339
  store i32 %add391, i32* %x, align 4, !dbg !6339
  br label %for.cond220, !dbg !6341, !llvm.loop !6342

for.end392:                                       ; preds = %for.cond220
  br label %if.end632, !dbg !6344

if.else393:                                       ; preds = %if.else216
  store i32 0, i32* %x, align 4, !dbg !6345
  br label %for.cond394, !dbg !6348

for.cond394:                                      ; preds = %for.inc629, %if.else393
  %293 = load i32, i32* %x, align 4, !dbg !6349
  %294 = load i32, i32* %w, align 4, !dbg !6352
  %cmp395 = icmp slt i32 %293, %294, !dbg !6353
  br i1 %cmp395, label %for.body397, label %for.end631, !dbg !6354

for.body397:                                      ; preds = %for.cond394
  br label %do.body398, !dbg !6355, !llvm.loop !6357

do.body398:                                       ; preds = %for.body397
  %295 = load i8*, i8** %lpaa, align 8, !dbg !6358
  %296 = load i8, i8* %295, align 1, !dbg !6362
  %tobool399 = icmp ne i8 %296, 0, !dbg !6362
  br i1 %tobool399, label %if.else408, label %if.then400, !dbg !6363

if.then400:                                       ; preds = %do.body398
  %297 = load i32, i32* %x, align 4, !dbg !6364
  %idxprom401 = sext i32 %297 to i64, !dbg !6367
  %298 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !6367
  %arrayidx402 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %298, i64 %idxprom401, !dbg !6367
  %yuv403 = bitcast %union.ColorFloat* %arrayidx402 to %struct.YUVFloat*, !dbg !6368
  %y404 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv403, i32 0, i32 0, !dbg !6369
  %299 = load float, float* %y404, align 4, !dbg !6369
  %add405 = fadd float %299, 1.600000e+01, !dbg !6370
  %call406 = call i64 @lrintf(float %add405) #8, !dbg !6371
  %conv407 = trunc i64 %call406 to i8, !dbg !6371
  %300 = load i8*, i8** %lpy, align 8, !dbg !6372
  store i8 %conv407, i8* %300, align 1, !dbg !6373
  br label %if.end432, !dbg !6374

if.else408:                                       ; preds = %do.body398
  %301 = load i8*, i8** %lpaa, align 8, !dbg !6375
  %302 = load i8, i8* %301, align 1, !dbg !6378
  %conv409 = zext i8 %302 to i32, !dbg !6378
  %cmp410 = icmp eq i32 255, %conv409, !dbg !6379
  br i1 %cmp410, label %if.then412, label %if.else413, !dbg !6380

if.then412:                                       ; preds = %if.else408
  %303 = load i8*, i8** %lpay, align 8, !dbg !6381
  %304 = load i8, i8* %303, align 1, !dbg !6384
  %305 = load i8*, i8** %lpy, align 8, !dbg !6385
  store i8 %304, i8* %305, align 1, !dbg !6386
  br label %if.end431, !dbg !6387

if.else413:                                       ; preds = %if.else408
  call void @llvm.dbg.declare(metadata float* %a414, metadata !6388, metadata !820), !dbg !6390
  %306 = load i8*, i8** %lpaa, align 8, !dbg !6391
  %307 = load i8, i8* %306, align 1, !dbg !6393
  %conv415 = zext i8 %307 to i32, !dbg !6394
  %conv416 = sitofp i32 %conv415 to float, !dbg !6394
  %mul417 = fmul float 0x3F70101020000000, %conv416, !dbg !6395
  store float %mul417, float* %a414, align 4, !dbg !6396
  %308 = load float, float* %a414, align 4, !dbg !6397
  %309 = load i8*, i8** %lpay, align 8, !dbg !6398
  %310 = load i8, i8* %309, align 1, !dbg !6399
  %conv418 = zext i8 %310 to i32, !dbg !6400
  %conv419 = sitofp i32 %conv418 to float, !dbg !6400
  %mul420 = fmul float %308, %conv419, !dbg !6401
  %311 = load float, float* %a414, align 4, !dbg !6402
  %sub421 = fsub float 1.000000e+00, %311, !dbg !6403
  %312 = load i32, i32* %x, align 4, !dbg !6404
  %idxprom422 = sext i32 %312 to i64, !dbg !6405
  %313 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !6405
  %arrayidx423 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %313, i64 %idxprom422, !dbg !6405
  %yuv424 = bitcast %union.ColorFloat* %arrayidx423 to %struct.YUVFloat*, !dbg !6406
  %y425 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv424, i32 0, i32 0, !dbg !6407
  %314 = load float, float* %y425, align 4, !dbg !6407
  %add426 = fadd float %314, 1.600000e+01, !dbg !6408
  %mul427 = fmul float %sub421, %add426, !dbg !6409
  %add428 = fadd float %mul420, %mul427, !dbg !6410
  %call429 = call i64 @lrintf(float %add428) #8, !dbg !6411
  %conv430 = trunc i64 %call429 to i8, !dbg !6411
  %315 = load i8*, i8** %lpy, align 8, !dbg !6412
  store i8 %conv430, i8* %315, align 1, !dbg !6413
  br label %if.end431

if.end431:                                        ; preds = %if.else413, %if.then412
  br label %if.end432

if.end432:                                        ; preds = %if.end431, %if.then400
  %316 = load i8*, i8** %lpy, align 8, !dbg !6414
  %incdec.ptr433 = getelementptr inbounds i8, i8* %316, i32 1, !dbg !6414
  store i8* %incdec.ptr433, i8** %lpy, align 8, !dbg !6414
  %317 = load i8*, i8** %lpay, align 8, !dbg !6416
  %incdec.ptr434 = getelementptr inbounds i8, i8* %317, i32 1, !dbg !6416
  store i8* %incdec.ptr434, i8** %lpay, align 8, !dbg !6416
  %318 = load i8*, i8** %lpaa, align 8, !dbg !6417
  %add.ptr435 = getelementptr inbounds i8, i8* %318, i64 0, !dbg !6417
  store i8* %add.ptr435, i8** %lpaa, align 8, !dbg !6417
  br label %do.end436, !dbg !6418

do.end436:                                        ; preds = %if.end432
  br label %do.body437, !dbg !6419, !llvm.loop !6420

do.body437:                                       ; preds = %do.end436
  %319 = load i8*, i8** %lpaa, align 8, !dbg !6421
  %arrayidx438 = getelementptr inbounds i8, i8* %319, i64 0, !dbg !6421
  %320 = load i8, i8* %arrayidx438, align 1, !dbg !6421
  %tobool439 = icmp ne i8 %320, 0, !dbg !6421
  br i1 %tobool439, label %if.else467, label %land.lhs.true440, !dbg !6425

land.lhs.true440:                                 ; preds = %do.body437
  %321 = load i8*, i8** %lpaa, align 8, !dbg !6426
  %arrayidx441 = getelementptr inbounds i8, i8* %321, i64 1, !dbg !6426
  %322 = load i8, i8* %arrayidx441, align 1, !dbg !6426
  %tobool442 = icmp ne i8 %322, 0, !dbg !6426
  br i1 %tobool442, label %if.else467, label %land.lhs.true443, !dbg !6428

land.lhs.true443:                                 ; preds = %land.lhs.true440
  %323 = load i32, i32* %lsaa, align 4, !dbg !6429
  %idxprom444 = sext i32 %323 to i64, !dbg !6431
  %324 = load i8*, i8** %lpaa, align 8, !dbg !6431
  %arrayidx445 = getelementptr inbounds i8, i8* %324, i64 %idxprom444, !dbg !6431
  %325 = load i8, i8* %arrayidx445, align 1, !dbg !6431
  %tobool446 = icmp ne i8 %325, 0, !dbg !6431
  br i1 %tobool446, label %if.else467, label %land.lhs.true447, !dbg !6432

land.lhs.true447:                                 ; preds = %land.lhs.true443
  %326 = load i32, i32* %lsaa, align 4, !dbg !6433
  %add448 = add nsw i32 %326, 1, !dbg !6435
  %idxprom449 = sext i32 %add448 to i64, !dbg !6436
  %327 = load i8*, i8** %lpaa, align 8, !dbg !6436
  %arrayidx450 = getelementptr inbounds i8, i8* %327, i64 %idxprom449, !dbg !6436
  %328 = load i8, i8* %arrayidx450, align 1, !dbg !6436
  %tobool451 = icmp ne i8 %328, 0, !dbg !6436
  br i1 %tobool451, label %if.else467, label %if.then452, !dbg !6437

if.then452:                                       ; preds = %land.lhs.true447
  %329 = load i32, i32* %x, align 4, !dbg !6438
  %idxprom453 = sext i32 %329 to i64, !dbg !6441
  %330 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !6441
  %arrayidx454 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %330, i64 %idxprom453, !dbg !6441
  %yuv455 = bitcast %union.ColorFloat* %arrayidx454 to %struct.YUVFloat*, !dbg !6442
  %u456 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv455, i32 0, i32 1, !dbg !6443
  %331 = load float, float* %u456, align 4, !dbg !6443
  %add457 = fadd float %331, 1.280000e+02, !dbg !6444
  %call458 = call i64 @lrintf(float %add457) #8, !dbg !6445
  %conv459 = trunc i64 %call458 to i8, !dbg !6445
  %332 = load i8*, i8** %lpu, align 8, !dbg !6446
  store i8 %conv459, i8* %332, align 1, !dbg !6447
  %333 = load i32, i32* %x, align 4, !dbg !6448
  %idxprom460 = sext i32 %333 to i64, !dbg !6449
  %334 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !6449
  %arrayidx461 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %334, i64 %idxprom460, !dbg !6449
  %yuv462 = bitcast %union.ColorFloat* %arrayidx461 to %struct.YUVFloat*, !dbg !6450
  %v463 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv462, i32 0, i32 2, !dbg !6451
  %335 = load float, float* %v463, align 4, !dbg !6451
  %add464 = fadd float %335, 1.280000e+02, !dbg !6452
  %call465 = call i64 @lrintf(float %add464) #8, !dbg !6453
  %conv466 = trunc i64 %call465 to i8, !dbg !6455
  %336 = load i8*, i8** %lpv, align 8, !dbg !6456
  store i8 %conv466, i8* %336, align 1, !dbg !6457
  br label %if.end581, !dbg !6458

if.else467:                                       ; preds = %land.lhs.true447, %land.lhs.true443, %land.lhs.true440, %do.body437
  %337 = load i8*, i8** %lpaa, align 8, !dbg !6459
  %arrayidx468 = getelementptr inbounds i8, i8* %337, i64 0, !dbg !6459
  %338 = load i8, i8* %arrayidx468, align 1, !dbg !6459
  %conv469 = zext i8 %338 to i32, !dbg !6459
  %cmp470 = icmp eq i32 255, %conv469, !dbg !6462
  br i1 %cmp470, label %land.lhs.true472, label %if.else491, !dbg !6463

land.lhs.true472:                                 ; preds = %if.else467
  %339 = load i8*, i8** %lpaa, align 8, !dbg !6464
  %arrayidx473 = getelementptr inbounds i8, i8* %339, i64 1, !dbg !6464
  %340 = load i8, i8* %arrayidx473, align 1, !dbg !6464
  %conv474 = zext i8 %340 to i32, !dbg !6464
  %cmp475 = icmp eq i32 255, %conv474, !dbg !6466
  br i1 %cmp475, label %land.lhs.true477, label %if.else491, !dbg !6467

land.lhs.true477:                                 ; preds = %land.lhs.true472
  %341 = load i32, i32* %lsaa, align 4, !dbg !6468
  %idxprom478 = sext i32 %341 to i64, !dbg !6470
  %342 = load i8*, i8** %lpaa, align 8, !dbg !6470
  %arrayidx479 = getelementptr inbounds i8, i8* %342, i64 %idxprom478, !dbg !6470
  %343 = load i8, i8* %arrayidx479, align 1, !dbg !6470
  %conv480 = zext i8 %343 to i32, !dbg !6470
  %cmp481 = icmp eq i32 255, %conv480, !dbg !6471
  br i1 %cmp481, label %land.lhs.true483, label %if.else491, !dbg !6472

land.lhs.true483:                                 ; preds = %land.lhs.true477
  %344 = load i32, i32* %lsaa, align 4, !dbg !6473
  %add484 = add nsw i32 %344, 1, !dbg !6475
  %idxprom485 = sext i32 %add484 to i64, !dbg !6476
  %345 = load i8*, i8** %lpaa, align 8, !dbg !6476
  %arrayidx486 = getelementptr inbounds i8, i8* %345, i64 %idxprom485, !dbg !6476
  %346 = load i8, i8* %arrayidx486, align 1, !dbg !6476
  %conv487 = zext i8 %346 to i32, !dbg !6476
  %cmp488 = icmp eq i32 255, %conv487, !dbg !6477
  br i1 %cmp488, label %if.then490, label %if.else491, !dbg !6478

if.then490:                                       ; preds = %land.lhs.true483
  %347 = load i8*, i8** %lpau, align 8, !dbg !6479
  %348 = load i8, i8* %347, align 1, !dbg !6482
  %349 = load i8*, i8** %lpu, align 8, !dbg !6483
  store i8 %348, i8* %349, align 1, !dbg !6484
  %350 = load i8*, i8** %lpav, align 8, !dbg !6485
  %351 = load i8, i8* %350, align 1, !dbg !6486
  %352 = load i8*, i8** %lpv, align 8, !dbg !6487
  store i8 %351, i8* %352, align 1, !dbg !6488
  br label %if.end580, !dbg !6489

if.else491:                                       ; preds = %land.lhs.true483, %land.lhs.true477, %land.lhs.true472, %if.else467
  call void @llvm.dbg.declare(metadata float* %a0492, metadata !6490, metadata !820), !dbg !6492
  %353 = load i8*, i8** %lpaa, align 8, !dbg !6493
  %arrayidx493 = getelementptr inbounds i8, i8* %353, i64 0, !dbg !6493
  %354 = load i8, i8* %arrayidx493, align 1, !dbg !6493
  %conv494 = zext i8 %354 to i32, !dbg !6493
  %conv495 = sitofp i32 %conv494 to float, !dbg !6493
  %mul496 = fmul float 0x3F50101020000000, %conv495, !dbg !6495
  store float %mul496, float* %a0492, align 4, !dbg !6496
  call void @llvm.dbg.declare(metadata float* %a1497, metadata !6497, metadata !820), !dbg !6498
  %355 = load i8*, i8** %lpaa, align 8, !dbg !6499
  %arrayidx498 = getelementptr inbounds i8, i8* %355, i64 1, !dbg !6499
  %356 = load i8, i8* %arrayidx498, align 1, !dbg !6499
  %conv499 = zext i8 %356 to i32, !dbg !6499
  %conv500 = sitofp i32 %conv499 to float, !dbg !6499
  %mul501 = fmul float 0x3F50101020000000, %conv500, !dbg !6500
  store float %mul501, float* %a1497, align 4, !dbg !6501
  call void @llvm.dbg.declare(metadata float* %a2, metadata !6502, metadata !820), !dbg !6503
  %357 = load i32, i32* %lsaa, align 4, !dbg !6504
  %idxprom502 = sext i32 %357 to i64, !dbg !6505
  %358 = load i8*, i8** %lpaa, align 8, !dbg !6505
  %arrayidx503 = getelementptr inbounds i8, i8* %358, i64 %idxprom502, !dbg !6505
  %359 = load i8, i8* %arrayidx503, align 1, !dbg !6505
  %conv504 = zext i8 %359 to i32, !dbg !6505
  %conv505 = sitofp i32 %conv504 to float, !dbg !6505
  %mul506 = fmul float 0x3F50101020000000, %conv505, !dbg !6506
  store float %mul506, float* %a2, align 4, !dbg !6507
  call void @llvm.dbg.declare(metadata float* %a3, metadata !6508, metadata !820), !dbg !6509
  %360 = load i32, i32* %lsaa, align 4, !dbg !6510
  %add507 = add nsw i32 %360, 1, !dbg !6511
  %idxprom508 = sext i32 %add507 to i64, !dbg !6512
  %361 = load i8*, i8** %lpaa, align 8, !dbg !6512
  %arrayidx509 = getelementptr inbounds i8, i8* %361, i64 %idxprom508, !dbg !6512
  %362 = load i8, i8* %arrayidx509, align 1, !dbg !6512
  %conv510 = zext i8 %362 to i32, !dbg !6512
  %conv511 = sitofp i32 %conv510 to float, !dbg !6512
  %mul512 = fmul float 0x3F50101020000000, %conv511, !dbg !6513
  store float %mul512, float* %a3, align 4, !dbg !6514
  call void @llvm.dbg.declare(metadata float* %b513, metadata !6515, metadata !820), !dbg !6516
  %363 = load float, float* %a0492, align 4, !dbg !6517
  %sub514 = fsub float 1.000000e+00, %363, !dbg !6518
  %364 = load float, float* %a1497, align 4, !dbg !6519
  %sub515 = fsub float %sub514, %364, !dbg !6520
  %365 = load float, float* %a2, align 4, !dbg !6521
  %sub516 = fsub float %sub515, %365, !dbg !6522
  %366 = load float, float* %a3, align 4, !dbg !6523
  %sub517 = fsub float %sub516, %366, !dbg !6524
  store float %sub517, float* %b513, align 4, !dbg !6525
  %367 = load float, float* %a0492, align 4, !dbg !6526
  %368 = load i8*, i8** %lpau, align 8, !dbg !6527
  %arrayidx518 = getelementptr inbounds i8, i8* %368, i64 0, !dbg !6527
  %369 = load i8, i8* %arrayidx518, align 1, !dbg !6527
  %conv519 = zext i8 %369 to i32, !dbg !6527
  %conv520 = sitofp i32 %conv519 to float, !dbg !6527
  %mul521 = fmul float %367, %conv520, !dbg !6528
  %370 = load float, float* %a1497, align 4, !dbg !6529
  %371 = load i8*, i8** %lpau, align 8, !dbg !6530
  %arrayidx522 = getelementptr inbounds i8, i8* %371, i64 1, !dbg !6530
  %372 = load i8, i8* %arrayidx522, align 1, !dbg !6530
  %conv523 = zext i8 %372 to i32, !dbg !6530
  %conv524 = sitofp i32 %conv523 to float, !dbg !6530
  %mul525 = fmul float %370, %conv524, !dbg !6531
  %add526 = fadd float %mul521, %mul525, !dbg !6532
  %373 = load float, float* %a2, align 4, !dbg !6533
  %374 = load i32, i32* %lsau, align 4, !dbg !6534
  %idxprom527 = sext i32 %374 to i64, !dbg !6535
  %375 = load i8*, i8** %lpau, align 8, !dbg !6535
  %arrayidx528 = getelementptr inbounds i8, i8* %375, i64 %idxprom527, !dbg !6535
  %376 = load i8, i8* %arrayidx528, align 1, !dbg !6535
  %conv529 = zext i8 %376 to i32, !dbg !6535
  %conv530 = sitofp i32 %conv529 to float, !dbg !6535
  %mul531 = fmul float %373, %conv530, !dbg !6536
  %add532 = fadd float %add526, %mul531, !dbg !6537
  %377 = load float, float* %a3, align 4, !dbg !6538
  %378 = load i32, i32* %lsau, align 4, !dbg !6539
  %add533 = add nsw i32 %378, 1, !dbg !6540
  %idxprom534 = sext i32 %add533 to i64, !dbg !6541
  %379 = load i8*, i8** %lpau, align 8, !dbg !6541
  %arrayidx535 = getelementptr inbounds i8, i8* %379, i64 %idxprom534, !dbg !6541
  %380 = load i8, i8* %arrayidx535, align 1, !dbg !6541
  %conv536 = zext i8 %380 to i32, !dbg !6541
  %conv537 = sitofp i32 %conv536 to float, !dbg !6541
  %mul538 = fmul float %377, %conv537, !dbg !6542
  %add539 = fadd float %add532, %mul538, !dbg !6543
  %381 = load float, float* %b513, align 4, !dbg !6544
  %382 = load i32, i32* %x, align 4, !dbg !6545
  %idxprom540 = sext i32 %382 to i64, !dbg !6546
  %383 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !6546
  %arrayidx541 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %383, i64 %idxprom540, !dbg !6546
  %yuv542 = bitcast %union.ColorFloat* %arrayidx541 to %struct.YUVFloat*, !dbg !6547
  %u543 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv542, i32 0, i32 1, !dbg !6548
  %384 = load float, float* %u543, align 4, !dbg !6548
  %add544 = fadd float %384, 1.280000e+02, !dbg !6549
  %mul545 = fmul float %381, %add544, !dbg !6550
  %add546 = fadd float %add539, %mul545, !dbg !6551
  %call547 = call i64 @lrintf(float %add546) #8, !dbg !6552
  %conv548 = trunc i64 %call547 to i8, !dbg !6552
  %385 = load i8*, i8** %lpu, align 8, !dbg !6553
  store i8 %conv548, i8* %385, align 1, !dbg !6554
  %386 = load float, float* %a0492, align 4, !dbg !6555
  %387 = load i8*, i8** %lpav, align 8, !dbg !6556
  %arrayidx549 = getelementptr inbounds i8, i8* %387, i64 0, !dbg !6556
  %388 = load i8, i8* %arrayidx549, align 1, !dbg !6556
  %conv550 = zext i8 %388 to i32, !dbg !6556
  %conv551 = sitofp i32 %conv550 to float, !dbg !6556
  %mul552 = fmul float %386, %conv551, !dbg !6557
  %389 = load float, float* %a1497, align 4, !dbg !6558
  %390 = load i8*, i8** %lpav, align 8, !dbg !6559
  %arrayidx553 = getelementptr inbounds i8, i8* %390, i64 1, !dbg !6559
  %391 = load i8, i8* %arrayidx553, align 1, !dbg !6559
  %conv554 = zext i8 %391 to i32, !dbg !6559
  %conv555 = sitofp i32 %conv554 to float, !dbg !6559
  %mul556 = fmul float %389, %conv555, !dbg !6560
  %add557 = fadd float %mul552, %mul556, !dbg !6561
  %392 = load float, float* %a2, align 4, !dbg !6562
  %393 = load i32, i32* %lsav, align 4, !dbg !6563
  %idxprom558 = sext i32 %393 to i64, !dbg !6564
  %394 = load i8*, i8** %lpav, align 8, !dbg !6564
  %arrayidx559 = getelementptr inbounds i8, i8* %394, i64 %idxprom558, !dbg !6564
  %395 = load i8, i8* %arrayidx559, align 1, !dbg !6564
  %conv560 = zext i8 %395 to i32, !dbg !6564
  %conv561 = sitofp i32 %conv560 to float, !dbg !6564
  %mul562 = fmul float %392, %conv561, !dbg !6565
  %add563 = fadd float %add557, %mul562, !dbg !6566
  %396 = load float, float* %a3, align 4, !dbg !6567
  %397 = load i32, i32* %lsav, align 4, !dbg !6568
  %add564 = add nsw i32 %397, 1, !dbg !6569
  %idxprom565 = sext i32 %add564 to i64, !dbg !6570
  %398 = load i8*, i8** %lpav, align 8, !dbg !6570
  %arrayidx566 = getelementptr inbounds i8, i8* %398, i64 %idxprom565, !dbg !6570
  %399 = load i8, i8* %arrayidx566, align 1, !dbg !6570
  %conv567 = zext i8 %399 to i32, !dbg !6570
  %conv568 = sitofp i32 %conv567 to float, !dbg !6570
  %mul569 = fmul float %396, %conv568, !dbg !6571
  %add570 = fadd float %add563, %mul569, !dbg !6572
  %400 = load float, float* %b513, align 4, !dbg !6573
  %401 = load i32, i32* %x, align 4, !dbg !6574
  %idxprom571 = sext i32 %401 to i64, !dbg !6575
  %402 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !6575
  %arrayidx572 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %402, i64 %idxprom571, !dbg !6575
  %yuv573 = bitcast %union.ColorFloat* %arrayidx572 to %struct.YUVFloat*, !dbg !6576
  %v574 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv573, i32 0, i32 2, !dbg !6577
  %403 = load float, float* %v574, align 4, !dbg !6577
  %add575 = fadd float %403, 1.280000e+02, !dbg !6578
  %mul576 = fmul float %400, %add575, !dbg !6579
  %add577 = fadd float %add570, %mul576, !dbg !6580
  %call578 = call i64 @lrintf(float %add577) #8, !dbg !6581
  %conv579 = trunc i64 %call578 to i8, !dbg !6583
  %404 = load i8*, i8** %lpv, align 8, !dbg !6584
  store i8 %conv579, i8* %404, align 1, !dbg !6585
  br label %if.end580

if.end580:                                        ; preds = %if.else491, %if.then490
  br label %if.end581

if.end581:                                        ; preds = %if.end580, %if.then452
  %405 = load i8*, i8** %lpau, align 8, !dbg !6586
  %add.ptr582 = getelementptr inbounds i8, i8* %405, i64 2, !dbg !6586
  store i8* %add.ptr582, i8** %lpau, align 8, !dbg !6586
  %406 = load i8*, i8** %lpav, align 8, !dbg !6588
  %add.ptr583 = getelementptr inbounds i8, i8* %406, i64 2, !dbg !6588
  store i8* %add.ptr583, i8** %lpav, align 8, !dbg !6588
  %407 = load i8*, i8** %lpaa, align 8, !dbg !6589
  %incdec.ptr584 = getelementptr inbounds i8, i8* %407, i32 1, !dbg !6589
  store i8* %incdec.ptr584, i8** %lpaa, align 8, !dbg !6589
  %408 = load i8*, i8** %lpu, align 8, !dbg !6590
  %incdec.ptr585 = getelementptr inbounds i8, i8* %408, i32 1, !dbg !6590
  store i8* %incdec.ptr585, i8** %lpu, align 8, !dbg !6590
  %409 = load i8*, i8** %lpv, align 8, !dbg !6591
  %incdec.ptr586 = getelementptr inbounds i8, i8* %409, i32 1, !dbg !6591
  store i8* %incdec.ptr586, i8** %lpv, align 8, !dbg !6591
  br label %do.end587, !dbg !6592

do.end587:                                        ; preds = %if.end581
  br label %do.body588, !dbg !6593, !llvm.loop !6594

do.body588:                                       ; preds = %do.end587
  %410 = load i8*, i8** %lpaa, align 8, !dbg !6595
  %411 = load i8, i8* %410, align 1, !dbg !6599
  %tobool589 = icmp ne i8 %411, 0, !dbg !6599
  br i1 %tobool589, label %if.else599, label %if.then590, !dbg !6600

if.then590:                                       ; preds = %do.body588
  %412 = load i32, i32* %x, align 4, !dbg !6601
  %add591 = add nsw i32 %412, 1, !dbg !6604
  %idxprom592 = sext i32 %add591 to i64, !dbg !6605
  %413 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !6605
  %arrayidx593 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %413, i64 %idxprom592, !dbg !6605
  %yuv594 = bitcast %union.ColorFloat* %arrayidx593 to %struct.YUVFloat*, !dbg !6606
  %y595 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv594, i32 0, i32 0, !dbg !6607
  %414 = load float, float* %y595, align 4, !dbg !6607
  %add596 = fadd float %414, 1.600000e+01, !dbg !6608
  %call597 = call i64 @lrintf(float %add596) #8, !dbg !6609
  %conv598 = trunc i64 %call597 to i8, !dbg !6609
  %415 = load i8*, i8** %lpy, align 8, !dbg !6610
  store i8 %conv598, i8* %415, align 1, !dbg !6611
  br label %if.end624, !dbg !6612

if.else599:                                       ; preds = %do.body588
  %416 = load i8*, i8** %lpaa, align 8, !dbg !6613
  %417 = load i8, i8* %416, align 1, !dbg !6616
  %conv600 = zext i8 %417 to i32, !dbg !6616
  %cmp601 = icmp eq i32 255, %conv600, !dbg !6617
  br i1 %cmp601, label %if.then603, label %if.else604, !dbg !6618

if.then603:                                       ; preds = %if.else599
  %418 = load i8*, i8** %lpay, align 8, !dbg !6619
  %419 = load i8, i8* %418, align 1, !dbg !6622
  %420 = load i8*, i8** %lpy, align 8, !dbg !6623
  store i8 %419, i8* %420, align 1, !dbg !6624
  br label %if.end623, !dbg !6625

if.else604:                                       ; preds = %if.else599
  call void @llvm.dbg.declare(metadata float* %a605, metadata !6626, metadata !820), !dbg !6628
  %421 = load i8*, i8** %lpaa, align 8, !dbg !6629
  %422 = load i8, i8* %421, align 1, !dbg !6631
  %conv606 = zext i8 %422 to i32, !dbg !6632
  %conv607 = sitofp i32 %conv606 to float, !dbg !6632
  %mul608 = fmul float 0x3F70101020000000, %conv607, !dbg !6633
  store float %mul608, float* %a605, align 4, !dbg !6634
  %423 = load float, float* %a605, align 4, !dbg !6635
  %424 = load i8*, i8** %lpay, align 8, !dbg !6636
  %425 = load i8, i8* %424, align 1, !dbg !6637
  %conv609 = zext i8 %425 to i32, !dbg !6638
  %conv610 = sitofp i32 %conv609 to float, !dbg !6638
  %mul611 = fmul float %423, %conv610, !dbg !6639
  %426 = load float, float* %a605, align 4, !dbg !6640
  %sub612 = fsub float 1.000000e+00, %426, !dbg !6641
  %427 = load i32, i32* %x, align 4, !dbg !6642
  %add613 = add nsw i32 %427, 1, !dbg !6643
  %idxprom614 = sext i32 %add613 to i64, !dbg !6644
  %428 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !6644
  %arrayidx615 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %428, i64 %idxprom614, !dbg !6644
  %yuv616 = bitcast %union.ColorFloat* %arrayidx615 to %struct.YUVFloat*, !dbg !6645
  %y617 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv616, i32 0, i32 0, !dbg !6646
  %429 = load float, float* %y617, align 4, !dbg !6646
  %add618 = fadd float %429, 1.600000e+01, !dbg !6647
  %mul619 = fmul float %sub612, %add618, !dbg !6648
  %add620 = fadd float %mul611, %mul619, !dbg !6649
  %call621 = call i64 @lrintf(float %add620) #8, !dbg !6650
  %conv622 = trunc i64 %call621 to i8, !dbg !6650
  %430 = load i8*, i8** %lpy, align 8, !dbg !6651
  store i8 %conv622, i8* %430, align 1, !dbg !6652
  br label %if.end623

if.end623:                                        ; preds = %if.else604, %if.then603
  br label %if.end624

if.end624:                                        ; preds = %if.end623, %if.then590
  %431 = load i8*, i8** %lpy, align 8, !dbg !6653
  %incdec.ptr625 = getelementptr inbounds i8, i8* %431, i32 1, !dbg !6653
  store i8* %incdec.ptr625, i8** %lpy, align 8, !dbg !6653
  %432 = load i8*, i8** %lpay, align 8, !dbg !6655
  %incdec.ptr626 = getelementptr inbounds i8, i8* %432, i32 1, !dbg !6655
  store i8* %incdec.ptr626, i8** %lpay, align 8, !dbg !6655
  %433 = load i8*, i8** %lpaa, align 8, !dbg !6656
  %add.ptr627 = getelementptr inbounds i8, i8* %433, i64 1, !dbg !6656
  store i8* %add.ptr627, i8** %lpaa, align 8, !dbg !6656
  br label %do.end628, !dbg !6657

do.end628:                                        ; preds = %if.end624
  br label %for.inc629, !dbg !6658

for.inc629:                                       ; preds = %do.end628
  %434 = load i32, i32* %x, align 4, !dbg !6659
  %add630 = add nsw i32 %434, 2, !dbg !6659
  store i32 %add630, i32* %x, align 4, !dbg !6659
  br label %for.cond394, !dbg !6661, !llvm.loop !6662

for.end631:                                       ; preds = %for.cond394
  br label %if.end632

if.end632:                                        ; preds = %for.end631, %for.end392
  br label %if.end633

if.end633:                                        ; preds = %if.end632, %for.end
  %435 = load i8*, i8** %vy, align 8, !dbg !6664
  %436 = load i32, i32* %off.addr, align 4, !dbg !6665
  %437 = load i32, i32* %y, align 4, !dbg !6666
  %add634 = add nsw i32 %436, %437, !dbg !6667
  %add635 = add nsw i32 %add634, 1, !dbg !6668
  %438 = load i32, i32* %lsy, align 4, !dbg !6669
  %mul636 = mul nsw i32 %add635, %438, !dbg !6670
  %idx.ext637 = sext i32 %mul636 to i64, !dbg !6671
  %add.ptr638 = getelementptr inbounds i8, i8* %435, i64 %idx.ext637, !dbg !6671
  store i8* %add.ptr638, i8** %lpy, align 8, !dbg !6672
  %439 = load i8*, i8** %vu, align 8, !dbg !6673
  %440 = load i32, i32* %off.addr, align 4, !dbg !6674
  %441 = load i32, i32* %y, align 4, !dbg !6675
  %add639 = add nsw i32 %440, %441, !dbg !6676
  %add640 = add nsw i32 %add639, 1, !dbg !6677
  %442 = load i32, i32* %lsu, align 4, !dbg !6678
  %mul641 = mul nsw i32 %add640, %442, !dbg !6679
  %idx.ext642 = sext i32 %mul641 to i64, !dbg !6680
  %add.ptr643 = getelementptr inbounds i8, i8* %439, i64 %idx.ext642, !dbg !6680
  store i8* %add.ptr643, i8** %lpu, align 8, !dbg !6681
  %443 = load i8*, i8** %vv, align 8, !dbg !6682
  %444 = load i32, i32* %off.addr, align 4, !dbg !6683
  %445 = load i32, i32* %y, align 4, !dbg !6684
  %add644 = add nsw i32 %444, %445, !dbg !6685
  %add645 = add nsw i32 %add644, 1, !dbg !6686
  %446 = load i32, i32* %lsv, align 4, !dbg !6687
  %mul646 = mul nsw i32 %add645, %446, !dbg !6688
  %idx.ext647 = sext i32 %mul646 to i64, !dbg !6689
  %add.ptr648 = getelementptr inbounds i8, i8* %443, i64 %idx.ext647, !dbg !6689
  store i8* %add.ptr648, i8** %lpv, align 8, !dbg !6690
  %447 = load i8*, i8** %vay, align 8, !dbg !6691
  %448 = load i32, i32* %y, align 4, !dbg !6692
  %add649 = add nsw i32 %448, 1, !dbg !6693
  %449 = load i32, i32* %lsay, align 4, !dbg !6694
  %mul650 = mul nsw i32 %add649, %449, !dbg !6695
  %idx.ext651 = sext i32 %mul650 to i64, !dbg !6696
  %add.ptr652 = getelementptr inbounds i8, i8* %447, i64 %idx.ext651, !dbg !6696
  store i8* %add.ptr652, i8** %lpay, align 8, !dbg !6697
  %450 = load i8*, i8** %vau, align 8, !dbg !6698
  %451 = load i32, i32* %y, align 4, !dbg !6699
  %add653 = add nsw i32 %451, 1, !dbg !6700
  %452 = load i32, i32* %lsau, align 4, !dbg !6701
  %mul654 = mul nsw i32 %add653, %452, !dbg !6702
  %idx.ext655 = sext i32 %mul654 to i64, !dbg !6703
  %add.ptr656 = getelementptr inbounds i8, i8* %450, i64 %idx.ext655, !dbg !6703
  store i8* %add.ptr656, i8** %lpau, align 8, !dbg !6704
  %453 = load i8*, i8** %vav, align 8, !dbg !6705
  %454 = load i32, i32* %y, align 4, !dbg !6706
  %add657 = add nsw i32 %454, 1, !dbg !6707
  %455 = load i32, i32* %lsav, align 4, !dbg !6708
  %mul658 = mul nsw i32 %add657, %455, !dbg !6709
  %idx.ext659 = sext i32 %mul658 to i64, !dbg !6710
  %add.ptr660 = getelementptr inbounds i8, i8* %453, i64 %idx.ext659, !dbg !6710
  store i8* %add.ptr660, i8** %lpav, align 8, !dbg !6711
  %456 = load i8*, i8** %vaa, align 8, !dbg !6712
  %457 = load i32, i32* %y, align 4, !dbg !6713
  %add661 = add nsw i32 %457, 1, !dbg !6714
  %458 = load i32, i32* %lsaa, align 4, !dbg !6715
  %mul662 = mul nsw i32 %add661, %458, !dbg !6716
  %idx.ext663 = sext i32 %mul662 to i64, !dbg !6717
  %add.ptr664 = getelementptr inbounds i8, i8* %456, i64 %idx.ext663, !dbg !6717
  store i8* %add.ptr664, i8** %lpaa, align 8, !dbg !6718
  %459 = load i32, i32* %fmt, align 4, !dbg !6719
  %cmp665 = icmp eq i32 %459, 5, !dbg !6721
  br i1 %cmp665, label %if.then667, label %if.else847, !dbg !6722

if.then667:                                       ; preds = %if.end633
  store i32 0, i32* %x, align 4, !dbg !6723
  br label %for.cond668, !dbg !6726

for.cond668:                                      ; preds = %for.inc844, %if.then667
  %460 = load i32, i32* %x, align 4, !dbg !6727
  %461 = load i32, i32* %w, align 4, !dbg !6730
  %cmp669 = icmp slt i32 %460, %461, !dbg !6731
  br i1 %cmp669, label %for.body671, label %for.end846, !dbg !6732

for.body671:                                      ; preds = %for.cond668
  br label %do.body672, !dbg !6733, !llvm.loop !6735

do.body672:                                       ; preds = %for.body671
  %462 = load i8*, i8** %lpaa, align 8, !dbg !6736
  %463 = load i8, i8* %462, align 1, !dbg !6740
  %tobool673 = icmp ne i8 %463, 0, !dbg !6740
  br i1 %tobool673, label %if.else696, label %if.then674, !dbg !6741

if.then674:                                       ; preds = %do.body672
  %464 = load i32, i32* %x, align 4, !dbg !6742
  %idxprom675 = sext i32 %464 to i64, !dbg !6745
  %465 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !6745
  %arrayidx676 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %465, i64 %idxprom675, !dbg !6745
  %yuv677 = bitcast %union.ColorFloat* %arrayidx676 to %struct.YUVFloat*, !dbg !6746
  %y678 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv677, i32 0, i32 0, !dbg !6747
  %466 = load float, float* %y678, align 4, !dbg !6747
  %add679 = fadd float %466, 1.600000e+01, !dbg !6748
  %call680 = call i64 @lrintf(float %add679) #8, !dbg !6749
  %conv681 = trunc i64 %call680 to i8, !dbg !6749
  %467 = load i8*, i8** %lpy, align 8, !dbg !6750
  store i8 %conv681, i8* %467, align 1, !dbg !6751
  %468 = load i32, i32* %x, align 4, !dbg !6752
  %idxprom682 = sext i32 %468 to i64, !dbg !6753
  %469 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !6753
  %arrayidx683 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %469, i64 %idxprom682, !dbg !6753
  %yuv684 = bitcast %union.ColorFloat* %arrayidx683 to %struct.YUVFloat*, !dbg !6754
  %u685 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv684, i32 0, i32 1, !dbg !6755
  %470 = load float, float* %u685, align 4, !dbg !6755
  %add686 = fadd float %470, 1.280000e+02, !dbg !6756
  %call687 = call i64 @lrintf(float %add686) #8, !dbg !6757
  %conv688 = trunc i64 %call687 to i8, !dbg !6759
  %471 = load i8*, i8** %lpu, align 8, !dbg !6760
  store i8 %conv688, i8* %471, align 1, !dbg !6761
  %472 = load i32, i32* %x, align 4, !dbg !6762
  %idxprom689 = sext i32 %472 to i64, !dbg !6763
  %473 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !6763
  %arrayidx690 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %473, i64 %idxprom689, !dbg !6763
  %yuv691 = bitcast %union.ColorFloat* %arrayidx690 to %struct.YUVFloat*, !dbg !6764
  %v692 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv691, i32 0, i32 2, !dbg !6765
  %474 = load float, float* %v692, align 4, !dbg !6765
  %add693 = fadd float %474, 1.280000e+02, !dbg !6766
  %call694 = call i64 @lrintf(float %add693) #8, !dbg !6767
  %conv695 = trunc i64 %call694 to i8, !dbg !6769
  %475 = load i8*, i8** %lpv, align 8, !dbg !6770
  store i8 %conv695, i8* %475, align 1, !dbg !6771
  br label %if.end746, !dbg !6772

if.else696:                                       ; preds = %do.body672
  %476 = load i8*, i8** %lpaa, align 8, !dbg !6773
  %477 = load i8, i8* %476, align 1, !dbg !6776
  %conv697 = zext i8 %477 to i32, !dbg !6776
  %cmp698 = icmp eq i32 255, %conv697, !dbg !6777
  br i1 %cmp698, label %if.then700, label %if.else701, !dbg !6778

if.then700:                                       ; preds = %if.else696
  %478 = load i8*, i8** %lpay, align 8, !dbg !6779
  %479 = load i8, i8* %478, align 1, !dbg !6782
  %480 = load i8*, i8** %lpy, align 8, !dbg !6783
  store i8 %479, i8* %480, align 1, !dbg !6784
  %481 = load i8*, i8** %lpau, align 8, !dbg !6785
  %482 = load i8, i8* %481, align 1, !dbg !6786
  %483 = load i8*, i8** %lpu, align 8, !dbg !6787
  store i8 %482, i8* %483, align 1, !dbg !6788
  %484 = load i8*, i8** %lpav, align 8, !dbg !6789
  %485 = load i8, i8* %484, align 1, !dbg !6790
  %486 = load i8*, i8** %lpv, align 8, !dbg !6791
  store i8 %485, i8* %486, align 1, !dbg !6792
  br label %if.end745, !dbg !6793

if.else701:                                       ; preds = %if.else696
  call void @llvm.dbg.declare(metadata float* %a702, metadata !6794, metadata !820), !dbg !6796
  %487 = load i8*, i8** %lpaa, align 8, !dbg !6797
  %488 = load i8, i8* %487, align 1, !dbg !6799
  %conv703 = zext i8 %488 to i32, !dbg !6800
  %conv704 = sitofp i32 %conv703 to float, !dbg !6800
  %mul705 = fmul float 0x3F70101020000000, %conv704, !dbg !6801
  store float %mul705, float* %a702, align 4, !dbg !6802
  %489 = load float, float* %a702, align 4, !dbg !6803
  %490 = load i8*, i8** %lpay, align 8, !dbg !6804
  %491 = load i8, i8* %490, align 1, !dbg !6805
  %conv706 = zext i8 %491 to i32, !dbg !6806
  %conv707 = sitofp i32 %conv706 to float, !dbg !6806
  %mul708 = fmul float %489, %conv707, !dbg !6807
  %492 = load float, float* %a702, align 4, !dbg !6808
  %sub709 = fsub float 1.000000e+00, %492, !dbg !6809
  %493 = load i32, i32* %x, align 4, !dbg !6810
  %idxprom710 = sext i32 %493 to i64, !dbg !6811
  %494 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !6811
  %arrayidx711 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %494, i64 %idxprom710, !dbg !6811
  %yuv712 = bitcast %union.ColorFloat* %arrayidx711 to %struct.YUVFloat*, !dbg !6812
  %y713 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv712, i32 0, i32 0, !dbg !6813
  %495 = load float, float* %y713, align 4, !dbg !6813
  %add714 = fadd float %495, 1.600000e+01, !dbg !6814
  %mul715 = fmul float %sub709, %add714, !dbg !6815
  %add716 = fadd float %mul708, %mul715, !dbg !6816
  %call717 = call i64 @lrintf(float %add716) #8, !dbg !6817
  %conv718 = trunc i64 %call717 to i8, !dbg !6817
  %496 = load i8*, i8** %lpy, align 8, !dbg !6818
  store i8 %conv718, i8* %496, align 1, !dbg !6819
  %497 = load float, float* %a702, align 4, !dbg !6820
  %498 = load i8*, i8** %lpau, align 8, !dbg !6821
  %499 = load i8, i8* %498, align 1, !dbg !6822
  %conv719 = zext i8 %499 to i32, !dbg !6823
  %conv720 = sitofp i32 %conv719 to float, !dbg !6823
  %mul721 = fmul float %497, %conv720, !dbg !6824
  %500 = load float, float* %a702, align 4, !dbg !6825
  %sub722 = fsub float 1.000000e+00, %500, !dbg !6826
  %501 = load i32, i32* %x, align 4, !dbg !6827
  %idxprom723 = sext i32 %501 to i64, !dbg !6828
  %502 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !6828
  %arrayidx724 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %502, i64 %idxprom723, !dbg !6828
  %yuv725 = bitcast %union.ColorFloat* %arrayidx724 to %struct.YUVFloat*, !dbg !6829
  %u726 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv725, i32 0, i32 1, !dbg !6830
  %503 = load float, float* %u726, align 4, !dbg !6830
  %add727 = fadd float %503, 1.280000e+02, !dbg !6831
  %mul728 = fmul float %sub722, %add727, !dbg !6832
  %add729 = fadd float %mul721, %mul728, !dbg !6833
  %call730 = call i64 @lrintf(float %add729) #8, !dbg !6834
  %conv731 = trunc i64 %call730 to i8, !dbg !6836
  %504 = load i8*, i8** %lpu, align 8, !dbg !6837
  store i8 %conv731, i8* %504, align 1, !dbg !6838
  %505 = load float, float* %a702, align 4, !dbg !6839
  %506 = load i8*, i8** %lpav, align 8, !dbg !6840
  %507 = load i8, i8* %506, align 1, !dbg !6841
  %conv732 = zext i8 %507 to i32, !dbg !6842
  %conv733 = sitofp i32 %conv732 to float, !dbg !6842
  %mul734 = fmul float %505, %conv733, !dbg !6843
  %508 = load float, float* %a702, align 4, !dbg !6844
  %sub735 = fsub float 1.000000e+00, %508, !dbg !6845
  %509 = load i32, i32* %x, align 4, !dbg !6846
  %idxprom736 = sext i32 %509 to i64, !dbg !6847
  %510 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !6847
  %arrayidx737 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %510, i64 %idxprom736, !dbg !6847
  %yuv738 = bitcast %union.ColorFloat* %arrayidx737 to %struct.YUVFloat*, !dbg !6848
  %v739 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv738, i32 0, i32 2, !dbg !6849
  %511 = load float, float* %v739, align 4, !dbg !6849
  %add740 = fadd float %511, 1.280000e+02, !dbg !6850
  %mul741 = fmul float %sub735, %add740, !dbg !6851
  %add742 = fadd float %mul734, %mul741, !dbg !6852
  %call743 = call i64 @lrintf(float %add742) #8, !dbg !6853
  %conv744 = trunc i64 %call743 to i8, !dbg !6855
  %512 = load i8*, i8** %lpv, align 8, !dbg !6856
  store i8 %conv744, i8* %512, align 1, !dbg !6857
  br label %if.end745

if.end745:                                        ; preds = %if.else701, %if.then700
  br label %if.end746

if.end746:                                        ; preds = %if.end745, %if.then674
  %513 = load i8*, i8** %lpy, align 8, !dbg !6858
  %incdec.ptr747 = getelementptr inbounds i8, i8* %513, i32 1, !dbg !6858
  store i8* %incdec.ptr747, i8** %lpy, align 8, !dbg !6858
  %514 = load i8*, i8** %lpu, align 8, !dbg !6860
  %incdec.ptr748 = getelementptr inbounds i8, i8* %514, i32 1, !dbg !6860
  store i8* %incdec.ptr748, i8** %lpu, align 8, !dbg !6860
  %515 = load i8*, i8** %lpv, align 8, !dbg !6861
  %incdec.ptr749 = getelementptr inbounds i8, i8* %515, i32 1, !dbg !6861
  store i8* %incdec.ptr749, i8** %lpv, align 8, !dbg !6861
  %516 = load i8*, i8** %lpay, align 8, !dbg !6862
  %incdec.ptr750 = getelementptr inbounds i8, i8* %516, i32 1, !dbg !6862
  store i8* %incdec.ptr750, i8** %lpay, align 8, !dbg !6862
  %517 = load i8*, i8** %lpau, align 8, !dbg !6863
  %incdec.ptr751 = getelementptr inbounds i8, i8* %517, i32 1, !dbg !6863
  store i8* %incdec.ptr751, i8** %lpau, align 8, !dbg !6863
  %518 = load i8*, i8** %lpav, align 8, !dbg !6864
  %incdec.ptr752 = getelementptr inbounds i8, i8* %518, i32 1, !dbg !6864
  store i8* %incdec.ptr752, i8** %lpav, align 8, !dbg !6864
  %519 = load i8*, i8** %lpaa, align 8, !dbg !6865
  %incdec.ptr753 = getelementptr inbounds i8, i8* %519, i32 1, !dbg !6865
  store i8* %incdec.ptr753, i8** %lpaa, align 8, !dbg !6865
  br label %do.end754, !dbg !6866

do.end754:                                        ; preds = %if.end746
  br label %do.body755, !dbg !6867, !llvm.loop !6868

do.body755:                                       ; preds = %do.end754
  %520 = load i8*, i8** %lpaa, align 8, !dbg !6869
  %521 = load i8, i8* %520, align 1, !dbg !6873
  %tobool756 = icmp ne i8 %521, 0, !dbg !6873
  br i1 %tobool756, label %if.else782, label %if.then757, !dbg !6874

if.then757:                                       ; preds = %do.body755
  %522 = load i32, i32* %x, align 4, !dbg !6875
  %add758 = add nsw i32 %522, 1, !dbg !6878
  %idxprom759 = sext i32 %add758 to i64, !dbg !6879
  %523 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !6879
  %arrayidx760 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %523, i64 %idxprom759, !dbg !6879
  %yuv761 = bitcast %union.ColorFloat* %arrayidx760 to %struct.YUVFloat*, !dbg !6880
  %y762 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv761, i32 0, i32 0, !dbg !6881
  %524 = load float, float* %y762, align 4, !dbg !6881
  %add763 = fadd float %524, 1.600000e+01, !dbg !6882
  %call764 = call i64 @lrintf(float %add763) #8, !dbg !6883
  %conv765 = trunc i64 %call764 to i8, !dbg !6883
  %525 = load i8*, i8** %lpy, align 8, !dbg !6884
  store i8 %conv765, i8* %525, align 1, !dbg !6885
  %526 = load i32, i32* %x, align 4, !dbg !6886
  %add766 = add nsw i32 %526, 1, !dbg !6887
  %idxprom767 = sext i32 %add766 to i64, !dbg !6888
  %527 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !6888
  %arrayidx768 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %527, i64 %idxprom767, !dbg !6888
  %yuv769 = bitcast %union.ColorFloat* %arrayidx768 to %struct.YUVFloat*, !dbg !6889
  %u770 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv769, i32 0, i32 1, !dbg !6890
  %528 = load float, float* %u770, align 4, !dbg !6890
  %add771 = fadd float %528, 1.280000e+02, !dbg !6891
  %call772 = call i64 @lrintf(float %add771) #8, !dbg !6892
  %conv773 = trunc i64 %call772 to i8, !dbg !6894
  %529 = load i8*, i8** %lpu, align 8, !dbg !6895
  store i8 %conv773, i8* %529, align 1, !dbg !6896
  %530 = load i32, i32* %x, align 4, !dbg !6897
  %add774 = add nsw i32 %530, 1, !dbg !6898
  %idxprom775 = sext i32 %add774 to i64, !dbg !6899
  %531 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !6899
  %arrayidx776 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %531, i64 %idxprom775, !dbg !6899
  %yuv777 = bitcast %union.ColorFloat* %arrayidx776 to %struct.YUVFloat*, !dbg !6900
  %v778 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv777, i32 0, i32 2, !dbg !6901
  %532 = load float, float* %v778, align 4, !dbg !6901
  %add779 = fadd float %532, 1.280000e+02, !dbg !6902
  %call780 = call i64 @lrintf(float %add779) #8, !dbg !6903
  %conv781 = trunc i64 %call780 to i8, !dbg !6905
  %533 = load i8*, i8** %lpv, align 8, !dbg !6906
  store i8 %conv781, i8* %533, align 1, !dbg !6907
  br label %if.end835, !dbg !6908

if.else782:                                       ; preds = %do.body755
  %534 = load i8*, i8** %lpaa, align 8, !dbg !6909
  %535 = load i8, i8* %534, align 1, !dbg !6912
  %conv783 = zext i8 %535 to i32, !dbg !6912
  %cmp784 = icmp eq i32 255, %conv783, !dbg !6913
  br i1 %cmp784, label %if.then786, label %if.else787, !dbg !6914

if.then786:                                       ; preds = %if.else782
  %536 = load i8*, i8** %lpay, align 8, !dbg !6915
  %537 = load i8, i8* %536, align 1, !dbg !6918
  %538 = load i8*, i8** %lpy, align 8, !dbg !6919
  store i8 %537, i8* %538, align 1, !dbg !6920
  %539 = load i8*, i8** %lpau, align 8, !dbg !6921
  %540 = load i8, i8* %539, align 1, !dbg !6922
  %541 = load i8*, i8** %lpu, align 8, !dbg !6923
  store i8 %540, i8* %541, align 1, !dbg !6924
  %542 = load i8*, i8** %lpav, align 8, !dbg !6925
  %543 = load i8, i8* %542, align 1, !dbg !6926
  %544 = load i8*, i8** %lpv, align 8, !dbg !6927
  store i8 %543, i8* %544, align 1, !dbg !6928
  br label %if.end834, !dbg !6929

if.else787:                                       ; preds = %if.else782
  call void @llvm.dbg.declare(metadata float* %a788, metadata !6930, metadata !820), !dbg !6932
  %545 = load i8*, i8** %lpaa, align 8, !dbg !6933
  %546 = load i8, i8* %545, align 1, !dbg !6935
  %conv789 = zext i8 %546 to i32, !dbg !6936
  %conv790 = sitofp i32 %conv789 to float, !dbg !6936
  %mul791 = fmul float 0x3F70101020000000, %conv790, !dbg !6937
  store float %mul791, float* %a788, align 4, !dbg !6938
  %547 = load float, float* %a788, align 4, !dbg !6939
  %548 = load i8*, i8** %lpay, align 8, !dbg !6940
  %549 = load i8, i8* %548, align 1, !dbg !6941
  %conv792 = zext i8 %549 to i32, !dbg !6942
  %conv793 = sitofp i32 %conv792 to float, !dbg !6942
  %mul794 = fmul float %547, %conv793, !dbg !6943
  %550 = load float, float* %a788, align 4, !dbg !6944
  %sub795 = fsub float 1.000000e+00, %550, !dbg !6945
  %551 = load i32, i32* %x, align 4, !dbg !6946
  %add796 = add nsw i32 %551, 1, !dbg !6947
  %idxprom797 = sext i32 %add796 to i64, !dbg !6948
  %552 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !6948
  %arrayidx798 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %552, i64 %idxprom797, !dbg !6948
  %yuv799 = bitcast %union.ColorFloat* %arrayidx798 to %struct.YUVFloat*, !dbg !6949
  %y800 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv799, i32 0, i32 0, !dbg !6950
  %553 = load float, float* %y800, align 4, !dbg !6950
  %add801 = fadd float %553, 1.600000e+01, !dbg !6951
  %mul802 = fmul float %sub795, %add801, !dbg !6952
  %add803 = fadd float %mul794, %mul802, !dbg !6953
  %call804 = call i64 @lrintf(float %add803) #8, !dbg !6954
  %conv805 = trunc i64 %call804 to i8, !dbg !6954
  %554 = load i8*, i8** %lpy, align 8, !dbg !6955
  store i8 %conv805, i8* %554, align 1, !dbg !6956
  %555 = load float, float* %a788, align 4, !dbg !6957
  %556 = load i8*, i8** %lpau, align 8, !dbg !6958
  %557 = load i8, i8* %556, align 1, !dbg !6959
  %conv806 = zext i8 %557 to i32, !dbg !6960
  %conv807 = sitofp i32 %conv806 to float, !dbg !6960
  %mul808 = fmul float %555, %conv807, !dbg !6961
  %558 = load float, float* %a788, align 4, !dbg !6962
  %sub809 = fsub float 1.000000e+00, %558, !dbg !6963
  %559 = load i32, i32* %x, align 4, !dbg !6964
  %add810 = add nsw i32 %559, 1, !dbg !6965
  %idxprom811 = sext i32 %add810 to i64, !dbg !6966
  %560 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !6966
  %arrayidx812 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %560, i64 %idxprom811, !dbg !6966
  %yuv813 = bitcast %union.ColorFloat* %arrayidx812 to %struct.YUVFloat*, !dbg !6967
  %u814 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv813, i32 0, i32 1, !dbg !6968
  %561 = load float, float* %u814, align 4, !dbg !6968
  %add815 = fadd float %561, 1.280000e+02, !dbg !6969
  %mul816 = fmul float %sub809, %add815, !dbg !6970
  %add817 = fadd float %mul808, %mul816, !dbg !6971
  %call818 = call i64 @lrintf(float %add817) #8, !dbg !6972
  %conv819 = trunc i64 %call818 to i8, !dbg !6974
  %562 = load i8*, i8** %lpu, align 8, !dbg !6975
  store i8 %conv819, i8* %562, align 1, !dbg !6976
  %563 = load float, float* %a788, align 4, !dbg !6977
  %564 = load i8*, i8** %lpav, align 8, !dbg !6978
  %565 = load i8, i8* %564, align 1, !dbg !6979
  %conv820 = zext i8 %565 to i32, !dbg !6980
  %conv821 = sitofp i32 %conv820 to float, !dbg !6980
  %mul822 = fmul float %563, %conv821, !dbg !6981
  %566 = load float, float* %a788, align 4, !dbg !6982
  %sub823 = fsub float 1.000000e+00, %566, !dbg !6983
  %567 = load i32, i32* %x, align 4, !dbg !6984
  %add824 = add nsw i32 %567, 1, !dbg !6985
  %idxprom825 = sext i32 %add824 to i64, !dbg !6986
  %568 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !6986
  %arrayidx826 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %568, i64 %idxprom825, !dbg !6986
  %yuv827 = bitcast %union.ColorFloat* %arrayidx826 to %struct.YUVFloat*, !dbg !6987
  %v828 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv827, i32 0, i32 2, !dbg !6988
  %569 = load float, float* %v828, align 4, !dbg !6988
  %add829 = fadd float %569, 1.280000e+02, !dbg !6989
  %mul830 = fmul float %sub823, %add829, !dbg !6990
  %add831 = fadd float %mul822, %mul830, !dbg !6991
  %call832 = call i64 @lrintf(float %add831) #8, !dbg !6992
  %conv833 = trunc i64 %call832 to i8, !dbg !6994
  %570 = load i8*, i8** %lpv, align 8, !dbg !6995
  store i8 %conv833, i8* %570, align 1, !dbg !6996
  br label %if.end834

if.end834:                                        ; preds = %if.else787, %if.then786
  br label %if.end835

if.end835:                                        ; preds = %if.end834, %if.then757
  %571 = load i8*, i8** %lpy, align 8, !dbg !6997
  %incdec.ptr836 = getelementptr inbounds i8, i8* %571, i32 1, !dbg !6997
  store i8* %incdec.ptr836, i8** %lpy, align 8, !dbg !6997
  %572 = load i8*, i8** %lpu, align 8, !dbg !6999
  %incdec.ptr837 = getelementptr inbounds i8, i8* %572, i32 1, !dbg !6999
  store i8* %incdec.ptr837, i8** %lpu, align 8, !dbg !6999
  %573 = load i8*, i8** %lpv, align 8, !dbg !7000
  %incdec.ptr838 = getelementptr inbounds i8, i8* %573, i32 1, !dbg !7000
  store i8* %incdec.ptr838, i8** %lpv, align 8, !dbg !7000
  %574 = load i8*, i8** %lpay, align 8, !dbg !7001
  %incdec.ptr839 = getelementptr inbounds i8, i8* %574, i32 1, !dbg !7001
  store i8* %incdec.ptr839, i8** %lpay, align 8, !dbg !7001
  %575 = load i8*, i8** %lpau, align 8, !dbg !7002
  %incdec.ptr840 = getelementptr inbounds i8, i8* %575, i32 1, !dbg !7002
  store i8* %incdec.ptr840, i8** %lpau, align 8, !dbg !7002
  %576 = load i8*, i8** %lpav, align 8, !dbg !7003
  %incdec.ptr841 = getelementptr inbounds i8, i8* %576, i32 1, !dbg !7003
  store i8* %incdec.ptr841, i8** %lpav, align 8, !dbg !7003
  %577 = load i8*, i8** %lpaa, align 8, !dbg !7004
  %incdec.ptr842 = getelementptr inbounds i8, i8* %577, i32 1, !dbg !7004
  store i8* %incdec.ptr842, i8** %lpaa, align 8, !dbg !7004
  br label %do.end843, !dbg !7005

do.end843:                                        ; preds = %if.end835
  br label %for.inc844, !dbg !7006

for.inc844:                                       ; preds = %do.end843
  %578 = load i32, i32* %x, align 4, !dbg !7007
  %add845 = add nsw i32 %578, 2, !dbg !7007
  store i32 %add845, i32* %x, align 4, !dbg !7007
  br label %for.cond668, !dbg !7009, !llvm.loop !7010

for.end846:                                       ; preds = %for.cond668
  br label %if.end1117, !dbg !7012

if.else847:                                       ; preds = %if.end633
  %579 = load i32, i32* %fmt, align 4, !dbg !7013
  %cmp848 = icmp eq i32 %579, 4, !dbg !7016
  br i1 %cmp848, label %if.then850, label %if.else1028, !dbg !7013

if.then850:                                       ; preds = %if.else847
  store i32 0, i32* %x, align 4, !dbg !7017
  br label %for.cond851, !dbg !7020

for.cond851:                                      ; preds = %for.inc1025, %if.then850
  %580 = load i32, i32* %x, align 4, !dbg !7021
  %581 = load i32, i32* %w, align 4, !dbg !7024
  %cmp852 = icmp slt i32 %580, %581, !dbg !7025
  br i1 %cmp852, label %for.body854, label %for.end1027, !dbg !7026

for.body854:                                      ; preds = %for.cond851
  br label %do.body855, !dbg !7027, !llvm.loop !7029

do.body855:                                       ; preds = %for.body854
  %582 = load i8*, i8** %lpaa, align 8, !dbg !7030
  %583 = load i8, i8* %582, align 1, !dbg !7034
  %tobool856 = icmp ne i8 %583, 0, !dbg !7034
  br i1 %tobool856, label %if.else865, label %if.then857, !dbg !7035

if.then857:                                       ; preds = %do.body855
  %584 = load i32, i32* %x, align 4, !dbg !7036
  %idxprom858 = sext i32 %584 to i64, !dbg !7039
  %585 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !7039
  %arrayidx859 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %585, i64 %idxprom858, !dbg !7039
  %yuv860 = bitcast %union.ColorFloat* %arrayidx859 to %struct.YUVFloat*, !dbg !7040
  %y861 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv860, i32 0, i32 0, !dbg !7041
  %586 = load float, float* %y861, align 4, !dbg !7041
  %add862 = fadd float %586, 1.600000e+01, !dbg !7042
  %call863 = call i64 @lrintf(float %add862) #8, !dbg !7043
  %conv864 = trunc i64 %call863 to i8, !dbg !7043
  %587 = load i8*, i8** %lpy, align 8, !dbg !7044
  store i8 %conv864, i8* %587, align 1, !dbg !7045
  br label %if.end889, !dbg !7046

if.else865:                                       ; preds = %do.body855
  %588 = load i8*, i8** %lpaa, align 8, !dbg !7047
  %589 = load i8, i8* %588, align 1, !dbg !7050
  %conv866 = zext i8 %589 to i32, !dbg !7050
  %cmp867 = icmp eq i32 255, %conv866, !dbg !7051
  br i1 %cmp867, label %if.then869, label %if.else870, !dbg !7052

if.then869:                                       ; preds = %if.else865
  %590 = load i8*, i8** %lpay, align 8, !dbg !7053
  %591 = load i8, i8* %590, align 1, !dbg !7056
  %592 = load i8*, i8** %lpy, align 8, !dbg !7057
  store i8 %591, i8* %592, align 1, !dbg !7058
  br label %if.end888, !dbg !7059

if.else870:                                       ; preds = %if.else865
  call void @llvm.dbg.declare(metadata float* %a871, metadata !7060, metadata !820), !dbg !7062
  %593 = load i8*, i8** %lpaa, align 8, !dbg !7063
  %594 = load i8, i8* %593, align 1, !dbg !7065
  %conv872 = zext i8 %594 to i32, !dbg !7066
  %conv873 = sitofp i32 %conv872 to float, !dbg !7066
  %mul874 = fmul float 0x3F70101020000000, %conv873, !dbg !7067
  store float %mul874, float* %a871, align 4, !dbg !7068
  %595 = load float, float* %a871, align 4, !dbg !7069
  %596 = load i8*, i8** %lpay, align 8, !dbg !7070
  %597 = load i8, i8* %596, align 1, !dbg !7071
  %conv875 = zext i8 %597 to i32, !dbg !7072
  %conv876 = sitofp i32 %conv875 to float, !dbg !7072
  %mul877 = fmul float %595, %conv876, !dbg !7073
  %598 = load float, float* %a871, align 4, !dbg !7074
  %sub878 = fsub float 1.000000e+00, %598, !dbg !7075
  %599 = load i32, i32* %x, align 4, !dbg !7076
  %idxprom879 = sext i32 %599 to i64, !dbg !7077
  %600 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !7077
  %arrayidx880 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %600, i64 %idxprom879, !dbg !7077
  %yuv881 = bitcast %union.ColorFloat* %arrayidx880 to %struct.YUVFloat*, !dbg !7078
  %y882 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv881, i32 0, i32 0, !dbg !7079
  %601 = load float, float* %y882, align 4, !dbg !7079
  %add883 = fadd float %601, 1.600000e+01, !dbg !7080
  %mul884 = fmul float %sub878, %add883, !dbg !7081
  %add885 = fadd float %mul877, %mul884, !dbg !7082
  %call886 = call i64 @lrintf(float %add885) #8, !dbg !7083
  %conv887 = trunc i64 %call886 to i8, !dbg !7083
  %602 = load i8*, i8** %lpy, align 8, !dbg !7084
  store i8 %conv887, i8* %602, align 1, !dbg !7085
  br label %if.end888

if.end888:                                        ; preds = %if.else870, %if.then869
  br label %if.end889

if.end889:                                        ; preds = %if.end888, %if.then857
  %603 = load i8*, i8** %lpy, align 8, !dbg !7086
  %incdec.ptr890 = getelementptr inbounds i8, i8* %603, i32 1, !dbg !7086
  store i8* %incdec.ptr890, i8** %lpy, align 8, !dbg !7086
  %604 = load i8*, i8** %lpay, align 8, !dbg !7088
  %incdec.ptr891 = getelementptr inbounds i8, i8* %604, i32 1, !dbg !7088
  store i8* %incdec.ptr891, i8** %lpay, align 8, !dbg !7088
  %605 = load i8*, i8** %lpaa, align 8, !dbg !7089
  %add.ptr892 = getelementptr inbounds i8, i8* %605, i64 0, !dbg !7089
  store i8* %add.ptr892, i8** %lpaa, align 8, !dbg !7089
  br label %do.end893, !dbg !7090

do.end893:                                        ; preds = %if.end889
  br label %do.body894, !dbg !7091, !llvm.loop !7092

do.body894:                                       ; preds = %do.end893
  %606 = load i8*, i8** %lpaa, align 8, !dbg !7093
  %arrayidx895 = getelementptr inbounds i8, i8* %606, i64 0, !dbg !7093
  %607 = load i8, i8* %arrayidx895, align 1, !dbg !7093
  %tobool896 = icmp ne i8 %607, 0, !dbg !7093
  br i1 %tobool896, label %if.else915, label %land.lhs.true897, !dbg !7097

land.lhs.true897:                                 ; preds = %do.body894
  %608 = load i8*, i8** %lpaa, align 8, !dbg !7098
  %arrayidx898 = getelementptr inbounds i8, i8* %608, i64 1, !dbg !7098
  %609 = load i8, i8* %arrayidx898, align 1, !dbg !7098
  %tobool899 = icmp ne i8 %609, 0, !dbg !7098
  br i1 %tobool899, label %if.else915, label %if.then900, !dbg !7100

if.then900:                                       ; preds = %land.lhs.true897
  %610 = load i32, i32* %x, align 4, !dbg !7101
  %idxprom901 = sext i32 %610 to i64, !dbg !7104
  %611 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !7104
  %arrayidx902 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %611, i64 %idxprom901, !dbg !7104
  %yuv903 = bitcast %union.ColorFloat* %arrayidx902 to %struct.YUVFloat*, !dbg !7105
  %u904 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv903, i32 0, i32 1, !dbg !7106
  %612 = load float, float* %u904, align 4, !dbg !7106
  %add905 = fadd float %612, 1.280000e+02, !dbg !7107
  %call906 = call i64 @lrintf(float %add905) #8, !dbg !7108
  %conv907 = trunc i64 %call906 to i8, !dbg !7108
  %613 = load i8*, i8** %lpu, align 8, !dbg !7109
  store i8 %conv907, i8* %613, align 1, !dbg !7110
  %614 = load i32, i32* %x, align 4, !dbg !7111
  %idxprom908 = sext i32 %614 to i64, !dbg !7112
  %615 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !7112
  %arrayidx909 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %615, i64 %idxprom908, !dbg !7112
  %yuv910 = bitcast %union.ColorFloat* %arrayidx909 to %struct.YUVFloat*, !dbg !7113
  %v911 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv910, i32 0, i32 2, !dbg !7114
  %616 = load float, float* %v911, align 4, !dbg !7114
  %add912 = fadd float %616, 1.280000e+02, !dbg !7115
  %call913 = call i64 @lrintf(float %add912) #8, !dbg !7116
  %conv914 = trunc i64 %call913 to i8, !dbg !7118
  %617 = load i8*, i8** %lpv, align 8, !dbg !7119
  store i8 %conv914, i8* %617, align 1, !dbg !7120
  br label %if.end977, !dbg !7121

if.else915:                                       ; preds = %land.lhs.true897, %do.body894
  %618 = load i8*, i8** %lpaa, align 8, !dbg !7122
  %arrayidx916 = getelementptr inbounds i8, i8* %618, i64 0, !dbg !7122
  %619 = load i8, i8* %arrayidx916, align 1, !dbg !7122
  %conv917 = zext i8 %619 to i32, !dbg !7122
  %cmp918 = icmp eq i32 255, %conv917, !dbg !7125
  br i1 %cmp918, label %land.lhs.true920, label %if.else926, !dbg !7126

land.lhs.true920:                                 ; preds = %if.else915
  %620 = load i8*, i8** %lpaa, align 8, !dbg !7127
  %arrayidx921 = getelementptr inbounds i8, i8* %620, i64 1, !dbg !7127
  %621 = load i8, i8* %arrayidx921, align 1, !dbg !7127
  %conv922 = zext i8 %621 to i32, !dbg !7127
  %cmp923 = icmp eq i32 255, %conv922, !dbg !7129
  br i1 %cmp923, label %if.then925, label %if.else926, !dbg !7130

if.then925:                                       ; preds = %land.lhs.true920
  %622 = load i8*, i8** %lpau, align 8, !dbg !7131
  %623 = load i8, i8* %622, align 1, !dbg !7134
  %624 = load i8*, i8** %lpu, align 8, !dbg !7135
  store i8 %623, i8* %624, align 1, !dbg !7136
  %625 = load i8*, i8** %lpav, align 8, !dbg !7137
  %626 = load i8, i8* %625, align 1, !dbg !7138
  %627 = load i8*, i8** %lpv, align 8, !dbg !7139
  store i8 %626, i8* %627, align 1, !dbg !7140
  br label %if.end976, !dbg !7141

if.else926:                                       ; preds = %land.lhs.true920, %if.else915
  call void @llvm.dbg.declare(metadata float* %a0927, metadata !7142, metadata !820), !dbg !7144
  %628 = load i8*, i8** %lpaa, align 8, !dbg !7145
  %arrayidx928 = getelementptr inbounds i8, i8* %628, i64 0, !dbg !7145
  %629 = load i8, i8* %arrayidx928, align 1, !dbg !7145
  %conv929 = zext i8 %629 to i32, !dbg !7145
  %conv930 = sitofp i32 %conv929 to float, !dbg !7145
  %mul931 = fmul float 0x3F60101020000000, %conv930, !dbg !7147
  store float %mul931, float* %a0927, align 4, !dbg !7148
  call void @llvm.dbg.declare(metadata float* %a1932, metadata !7149, metadata !820), !dbg !7150
  %630 = load i8*, i8** %lpaa, align 8, !dbg !7151
  %arrayidx933 = getelementptr inbounds i8, i8* %630, i64 1, !dbg !7151
  %631 = load i8, i8* %arrayidx933, align 1, !dbg !7151
  %conv934 = zext i8 %631 to i32, !dbg !7151
  %conv935 = sitofp i32 %conv934 to float, !dbg !7151
  %mul936 = fmul float 0x3F60101020000000, %conv935, !dbg !7152
  store float %mul936, float* %a1932, align 4, !dbg !7153
  call void @llvm.dbg.declare(metadata float* %b937, metadata !7154, metadata !820), !dbg !7155
  %632 = load float, float* %a0927, align 4, !dbg !7156
  %sub938 = fsub float 1.000000e+00, %632, !dbg !7157
  %633 = load float, float* %a1932, align 4, !dbg !7158
  %sub939 = fsub float %sub938, %633, !dbg !7159
  store float %sub939, float* %b937, align 4, !dbg !7160
  %634 = load float, float* %a0927, align 4, !dbg !7161
  %635 = load i8*, i8** %lpau, align 8, !dbg !7162
  %arrayidx940 = getelementptr inbounds i8, i8* %635, i64 0, !dbg !7162
  %636 = load i8, i8* %arrayidx940, align 1, !dbg !7162
  %conv941 = zext i8 %636 to i32, !dbg !7162
  %conv942 = sitofp i32 %conv941 to float, !dbg !7162
  %mul943 = fmul float %634, %conv942, !dbg !7163
  %637 = load float, float* %a1932, align 4, !dbg !7164
  %638 = load i8*, i8** %lpau, align 8, !dbg !7165
  %arrayidx944 = getelementptr inbounds i8, i8* %638, i64 1, !dbg !7165
  %639 = load i8, i8* %arrayidx944, align 1, !dbg !7165
  %conv945 = zext i8 %639 to i32, !dbg !7165
  %conv946 = sitofp i32 %conv945 to float, !dbg !7165
  %mul947 = fmul float %637, %conv946, !dbg !7166
  %add948 = fadd float %mul943, %mul947, !dbg !7167
  %640 = load float, float* %b937, align 4, !dbg !7168
  %641 = load i32, i32* %x, align 4, !dbg !7169
  %idxprom949 = sext i32 %641 to i64, !dbg !7170
  %642 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !7170
  %arrayidx950 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %642, i64 %idxprom949, !dbg !7170
  %yuv951 = bitcast %union.ColorFloat* %arrayidx950 to %struct.YUVFloat*, !dbg !7171
  %u952 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv951, i32 0, i32 1, !dbg !7172
  %643 = load float, float* %u952, align 4, !dbg !7172
  %add953 = fadd float %643, 1.280000e+02, !dbg !7173
  %mul954 = fmul float %640, %add953, !dbg !7174
  %add955 = fadd float %add948, %mul954, !dbg !7175
  %call956 = call i64 @lrintf(float %add955) #8, !dbg !7176
  %conv957 = trunc i64 %call956 to i8, !dbg !7176
  %644 = load i8*, i8** %lpu, align 8, !dbg !7177
  store i8 %conv957, i8* %644, align 1, !dbg !7178
  %645 = load float, float* %a0927, align 4, !dbg !7179
  %646 = load i8*, i8** %lpav, align 8, !dbg !7180
  %arrayidx958 = getelementptr inbounds i8, i8* %646, i64 0, !dbg !7180
  %647 = load i8, i8* %arrayidx958, align 1, !dbg !7180
  %conv959 = zext i8 %647 to i32, !dbg !7180
  %conv960 = sitofp i32 %conv959 to float, !dbg !7180
  %mul961 = fmul float %645, %conv960, !dbg !7181
  %648 = load float, float* %a1932, align 4, !dbg !7182
  %649 = load i8*, i8** %lpav, align 8, !dbg !7183
  %arrayidx962 = getelementptr inbounds i8, i8* %649, i64 1, !dbg !7183
  %650 = load i8, i8* %arrayidx962, align 1, !dbg !7183
  %conv963 = zext i8 %650 to i32, !dbg !7183
  %conv964 = sitofp i32 %conv963 to float, !dbg !7183
  %mul965 = fmul float %648, %conv964, !dbg !7184
  %add966 = fadd float %mul961, %mul965, !dbg !7185
  %651 = load float, float* %b937, align 4, !dbg !7186
  %652 = load i32, i32* %x, align 4, !dbg !7187
  %idxprom967 = sext i32 %652 to i64, !dbg !7188
  %653 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !7188
  %arrayidx968 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %653, i64 %idxprom967, !dbg !7188
  %yuv969 = bitcast %union.ColorFloat* %arrayidx968 to %struct.YUVFloat*, !dbg !7189
  %v970 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv969, i32 0, i32 2, !dbg !7190
  %654 = load float, float* %v970, align 4, !dbg !7190
  %add971 = fadd float %654, 1.280000e+02, !dbg !7191
  %mul972 = fmul float %651, %add971, !dbg !7192
  %add973 = fadd float %add966, %mul972, !dbg !7193
  %call974 = call i64 @lrintf(float %add973) #8, !dbg !7194
  %conv975 = trunc i64 %call974 to i8, !dbg !7196
  %655 = load i8*, i8** %lpv, align 8, !dbg !7197
  store i8 %conv975, i8* %655, align 1, !dbg !7198
  br label %if.end976

if.end976:                                        ; preds = %if.else926, %if.then925
  br label %if.end977

if.end977:                                        ; preds = %if.end976, %if.then900
  %656 = load i8*, i8** %lpau, align 8, !dbg !7199
  %add.ptr978 = getelementptr inbounds i8, i8* %656, i64 2, !dbg !7199
  store i8* %add.ptr978, i8** %lpau, align 8, !dbg !7199
  %657 = load i8*, i8** %lpav, align 8, !dbg !7201
  %add.ptr979 = getelementptr inbounds i8, i8* %657, i64 2, !dbg !7201
  store i8* %add.ptr979, i8** %lpav, align 8, !dbg !7201
  %658 = load i8*, i8** %lpaa, align 8, !dbg !7202
  %incdec.ptr980 = getelementptr inbounds i8, i8* %658, i32 1, !dbg !7202
  store i8* %incdec.ptr980, i8** %lpaa, align 8, !dbg !7202
  %659 = load i8*, i8** %lpu, align 8, !dbg !7203
  %incdec.ptr981 = getelementptr inbounds i8, i8* %659, i32 1, !dbg !7203
  store i8* %incdec.ptr981, i8** %lpu, align 8, !dbg !7203
  %660 = load i8*, i8** %lpv, align 8, !dbg !7204
  %incdec.ptr982 = getelementptr inbounds i8, i8* %660, i32 1, !dbg !7204
  store i8* %incdec.ptr982, i8** %lpv, align 8, !dbg !7204
  br label %do.end983, !dbg !7205

do.end983:                                        ; preds = %if.end977
  br label %do.body984, !dbg !7206, !llvm.loop !7207

do.body984:                                       ; preds = %do.end983
  %661 = load i8*, i8** %lpaa, align 8, !dbg !7208
  %662 = load i8, i8* %661, align 1, !dbg !7212
  %tobool985 = icmp ne i8 %662, 0, !dbg !7212
  br i1 %tobool985, label %if.else995, label %if.then986, !dbg !7213

if.then986:                                       ; preds = %do.body984
  %663 = load i32, i32* %x, align 4, !dbg !7214
  %add987 = add nsw i32 %663, 1, !dbg !7217
  %idxprom988 = sext i32 %add987 to i64, !dbg !7218
  %664 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !7218
  %arrayidx989 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %664, i64 %idxprom988, !dbg !7218
  %yuv990 = bitcast %union.ColorFloat* %arrayidx989 to %struct.YUVFloat*, !dbg !7219
  %y991 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv990, i32 0, i32 0, !dbg !7220
  %665 = load float, float* %y991, align 4, !dbg !7220
  %add992 = fadd float %665, 1.600000e+01, !dbg !7221
  %call993 = call i64 @lrintf(float %add992) #8, !dbg !7222
  %conv994 = trunc i64 %call993 to i8, !dbg !7222
  %666 = load i8*, i8** %lpy, align 8, !dbg !7223
  store i8 %conv994, i8* %666, align 1, !dbg !7224
  br label %if.end1020, !dbg !7225

if.else995:                                       ; preds = %do.body984
  %667 = load i8*, i8** %lpaa, align 8, !dbg !7226
  %668 = load i8, i8* %667, align 1, !dbg !7229
  %conv996 = zext i8 %668 to i32, !dbg !7229
  %cmp997 = icmp eq i32 255, %conv996, !dbg !7230
  br i1 %cmp997, label %if.then999, label %if.else1000, !dbg !7231

if.then999:                                       ; preds = %if.else995
  %669 = load i8*, i8** %lpay, align 8, !dbg !7232
  %670 = load i8, i8* %669, align 1, !dbg !7235
  %671 = load i8*, i8** %lpy, align 8, !dbg !7236
  store i8 %670, i8* %671, align 1, !dbg !7237
  br label %if.end1019, !dbg !7238

if.else1000:                                      ; preds = %if.else995
  call void @llvm.dbg.declare(metadata float* %a1001, metadata !7239, metadata !820), !dbg !7241
  %672 = load i8*, i8** %lpaa, align 8, !dbg !7242
  %673 = load i8, i8* %672, align 1, !dbg !7244
  %conv1002 = zext i8 %673 to i32, !dbg !7245
  %conv1003 = sitofp i32 %conv1002 to float, !dbg !7245
  %mul1004 = fmul float 0x3F70101020000000, %conv1003, !dbg !7246
  store float %mul1004, float* %a1001, align 4, !dbg !7247
  %674 = load float, float* %a1001, align 4, !dbg !7248
  %675 = load i8*, i8** %lpay, align 8, !dbg !7249
  %676 = load i8, i8* %675, align 1, !dbg !7250
  %conv1005 = zext i8 %676 to i32, !dbg !7251
  %conv1006 = sitofp i32 %conv1005 to float, !dbg !7251
  %mul1007 = fmul float %674, %conv1006, !dbg !7252
  %677 = load float, float* %a1001, align 4, !dbg !7253
  %sub1008 = fsub float 1.000000e+00, %677, !dbg !7254
  %678 = load i32, i32* %x, align 4, !dbg !7255
  %add1009 = add nsw i32 %678, 1, !dbg !7256
  %idxprom1010 = sext i32 %add1009 to i64, !dbg !7257
  %679 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !7257
  %arrayidx1011 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %679, i64 %idxprom1010, !dbg !7257
  %yuv1012 = bitcast %union.ColorFloat* %arrayidx1011 to %struct.YUVFloat*, !dbg !7258
  %y1013 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv1012, i32 0, i32 0, !dbg !7259
  %680 = load float, float* %y1013, align 4, !dbg !7259
  %add1014 = fadd float %680, 1.600000e+01, !dbg !7260
  %mul1015 = fmul float %sub1008, %add1014, !dbg !7261
  %add1016 = fadd float %mul1007, %mul1015, !dbg !7262
  %call1017 = call i64 @lrintf(float %add1016) #8, !dbg !7263
  %conv1018 = trunc i64 %call1017 to i8, !dbg !7263
  %681 = load i8*, i8** %lpy, align 8, !dbg !7264
  store i8 %conv1018, i8* %681, align 1, !dbg !7265
  br label %if.end1019

if.end1019:                                       ; preds = %if.else1000, %if.then999
  br label %if.end1020

if.end1020:                                       ; preds = %if.end1019, %if.then986
  %682 = load i8*, i8** %lpy, align 8, !dbg !7266
  %incdec.ptr1021 = getelementptr inbounds i8, i8* %682, i32 1, !dbg !7266
  store i8* %incdec.ptr1021, i8** %lpy, align 8, !dbg !7266
  %683 = load i8*, i8** %lpay, align 8, !dbg !7268
  %incdec.ptr1022 = getelementptr inbounds i8, i8* %683, i32 1, !dbg !7268
  store i8* %incdec.ptr1022, i8** %lpay, align 8, !dbg !7268
  %684 = load i8*, i8** %lpaa, align 8, !dbg !7269
  %add.ptr1023 = getelementptr inbounds i8, i8* %684, i64 1, !dbg !7269
  store i8* %add.ptr1023, i8** %lpaa, align 8, !dbg !7269
  br label %do.end1024, !dbg !7270

do.end1024:                                       ; preds = %if.end1020
  br label %for.inc1025, !dbg !7271

for.inc1025:                                      ; preds = %do.end1024
  %685 = load i32, i32* %x, align 4, !dbg !7272
  %add1026 = add nsw i32 %685, 2, !dbg !7272
  store i32 %add1026, i32* %x, align 4, !dbg !7272
  br label %for.cond851, !dbg !7274, !llvm.loop !7275

for.end1027:                                      ; preds = %for.cond851
  br label %if.end1116, !dbg !7277

if.else1028:                                      ; preds = %if.else847
  store i32 0, i32* %x, align 4, !dbg !7278
  br label %for.cond1029, !dbg !7281

for.cond1029:                                     ; preds = %for.inc1113, %if.else1028
  %686 = load i32, i32* %x, align 4, !dbg !7282
  %687 = load i32, i32* %w, align 4, !dbg !7285
  %cmp1030 = icmp slt i32 %686, %687, !dbg !7286
  br i1 %cmp1030, label %for.body1032, label %for.end1115, !dbg !7287

for.body1032:                                     ; preds = %for.cond1029
  br label %do.body1033, !dbg !7288, !llvm.loop !7290

do.body1033:                                      ; preds = %for.body1032
  %688 = load i8*, i8** %lpaa, align 8, !dbg !7291
  %689 = load i8, i8* %688, align 1, !dbg !7295
  %tobool1034 = icmp ne i8 %689, 0, !dbg !7295
  br i1 %tobool1034, label %if.else1043, label %if.then1035, !dbg !7296

if.then1035:                                      ; preds = %do.body1033
  %690 = load i32, i32* %x, align 4, !dbg !7297
  %idxprom1036 = sext i32 %690 to i64, !dbg !7300
  %691 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !7300
  %arrayidx1037 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %691, i64 %idxprom1036, !dbg !7300
  %yuv1038 = bitcast %union.ColorFloat* %arrayidx1037 to %struct.YUVFloat*, !dbg !7301
  %y1039 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv1038, i32 0, i32 0, !dbg !7302
  %692 = load float, float* %y1039, align 4, !dbg !7302
  %add1040 = fadd float %692, 1.600000e+01, !dbg !7303
  %call1041 = call i64 @lrintf(float %add1040) #8, !dbg !7304
  %conv1042 = trunc i64 %call1041 to i8, !dbg !7304
  %693 = load i8*, i8** %lpy, align 8, !dbg !7305
  store i8 %conv1042, i8* %693, align 1, !dbg !7306
  br label %if.end1067, !dbg !7307

if.else1043:                                      ; preds = %do.body1033
  %694 = load i8*, i8** %lpaa, align 8, !dbg !7308
  %695 = load i8, i8* %694, align 1, !dbg !7311
  %conv1044 = zext i8 %695 to i32, !dbg !7311
  %cmp1045 = icmp eq i32 255, %conv1044, !dbg !7312
  br i1 %cmp1045, label %if.then1047, label %if.else1048, !dbg !7313

if.then1047:                                      ; preds = %if.else1043
  %696 = load i8*, i8** %lpay, align 8, !dbg !7314
  %697 = load i8, i8* %696, align 1, !dbg !7317
  %698 = load i8*, i8** %lpy, align 8, !dbg !7318
  store i8 %697, i8* %698, align 1, !dbg !7319
  br label %if.end1066, !dbg !7320

if.else1048:                                      ; preds = %if.else1043
  call void @llvm.dbg.declare(metadata float* %a1049, metadata !7321, metadata !820), !dbg !7323
  %699 = load i8*, i8** %lpaa, align 8, !dbg !7324
  %700 = load i8, i8* %699, align 1, !dbg !7326
  %conv1050 = zext i8 %700 to i32, !dbg !7327
  %conv1051 = sitofp i32 %conv1050 to float, !dbg !7327
  %mul1052 = fmul float 0x3F70101020000000, %conv1051, !dbg !7328
  store float %mul1052, float* %a1049, align 4, !dbg !7329
  %701 = load float, float* %a1049, align 4, !dbg !7330
  %702 = load i8*, i8** %lpay, align 8, !dbg !7331
  %703 = load i8, i8* %702, align 1, !dbg !7332
  %conv1053 = zext i8 %703 to i32, !dbg !7333
  %conv1054 = sitofp i32 %conv1053 to float, !dbg !7333
  %mul1055 = fmul float %701, %conv1054, !dbg !7334
  %704 = load float, float* %a1049, align 4, !dbg !7335
  %sub1056 = fsub float 1.000000e+00, %704, !dbg !7336
  %705 = load i32, i32* %x, align 4, !dbg !7337
  %idxprom1057 = sext i32 %705 to i64, !dbg !7338
  %706 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !7338
  %arrayidx1058 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %706, i64 %idxprom1057, !dbg !7338
  %yuv1059 = bitcast %union.ColorFloat* %arrayidx1058 to %struct.YUVFloat*, !dbg !7339
  %y1060 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv1059, i32 0, i32 0, !dbg !7340
  %707 = load float, float* %y1060, align 4, !dbg !7340
  %add1061 = fadd float %707, 1.600000e+01, !dbg !7341
  %mul1062 = fmul float %sub1056, %add1061, !dbg !7342
  %add1063 = fadd float %mul1055, %mul1062, !dbg !7343
  %call1064 = call i64 @lrintf(float %add1063) #8, !dbg !7344
  %conv1065 = trunc i64 %call1064 to i8, !dbg !7344
  %708 = load i8*, i8** %lpy, align 8, !dbg !7345
  store i8 %conv1065, i8* %708, align 1, !dbg !7346
  br label %if.end1066

if.end1066:                                       ; preds = %if.else1048, %if.then1047
  br label %if.end1067

if.end1067:                                       ; preds = %if.end1066, %if.then1035
  %709 = load i8*, i8** %lpy, align 8, !dbg !7347
  %incdec.ptr1068 = getelementptr inbounds i8, i8* %709, i32 1, !dbg !7347
  store i8* %incdec.ptr1068, i8** %lpy, align 8, !dbg !7347
  %710 = load i8*, i8** %lpay, align 8, !dbg !7349
  %incdec.ptr1069 = getelementptr inbounds i8, i8* %710, i32 1, !dbg !7349
  store i8* %incdec.ptr1069, i8** %lpay, align 8, !dbg !7349
  %711 = load i8*, i8** %lpaa, align 8, !dbg !7350
  %add.ptr1070 = getelementptr inbounds i8, i8* %711, i64 1, !dbg !7350
  store i8* %add.ptr1070, i8** %lpaa, align 8, !dbg !7350
  br label %do.end1071, !dbg !7351

do.end1071:                                       ; preds = %if.end1067
  br label %do.body1072, !dbg !7352, !llvm.loop !7353

do.body1072:                                      ; preds = %do.end1071
  %712 = load i8*, i8** %lpaa, align 8, !dbg !7354
  %713 = load i8, i8* %712, align 1, !dbg !7358
  %tobool1073 = icmp ne i8 %713, 0, !dbg !7358
  br i1 %tobool1073, label %if.else1083, label %if.then1074, !dbg !7359

if.then1074:                                      ; preds = %do.body1072
  %714 = load i32, i32* %x, align 4, !dbg !7360
  %add1075 = add nsw i32 %714, 1, !dbg !7363
  %idxprom1076 = sext i32 %add1075 to i64, !dbg !7364
  %715 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !7364
  %arrayidx1077 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %715, i64 %idxprom1076, !dbg !7364
  %yuv1078 = bitcast %union.ColorFloat* %arrayidx1077 to %struct.YUVFloat*, !dbg !7365
  %y1079 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv1078, i32 0, i32 0, !dbg !7366
  %716 = load float, float* %y1079, align 4, !dbg !7366
  %add1080 = fadd float %716, 1.600000e+01, !dbg !7367
  %call1081 = call i64 @lrintf(float %add1080) #8, !dbg !7368
  %conv1082 = trunc i64 %call1081 to i8, !dbg !7368
  %717 = load i8*, i8** %lpy, align 8, !dbg !7369
  store i8 %conv1082, i8* %717, align 1, !dbg !7370
  br label %if.end1108, !dbg !7371

if.else1083:                                      ; preds = %do.body1072
  %718 = load i8*, i8** %lpaa, align 8, !dbg !7372
  %719 = load i8, i8* %718, align 1, !dbg !7375
  %conv1084 = zext i8 %719 to i32, !dbg !7375
  %cmp1085 = icmp eq i32 255, %conv1084, !dbg !7376
  br i1 %cmp1085, label %if.then1087, label %if.else1088, !dbg !7377

if.then1087:                                      ; preds = %if.else1083
  %720 = load i8*, i8** %lpay, align 8, !dbg !7378
  %721 = load i8, i8* %720, align 1, !dbg !7381
  %722 = load i8*, i8** %lpy, align 8, !dbg !7382
  store i8 %721, i8* %722, align 1, !dbg !7383
  br label %if.end1107, !dbg !7384

if.else1088:                                      ; preds = %if.else1083
  call void @llvm.dbg.declare(metadata float* %a1089, metadata !7385, metadata !820), !dbg !7387
  %723 = load i8*, i8** %lpaa, align 8, !dbg !7388
  %724 = load i8, i8* %723, align 1, !dbg !7390
  %conv1090 = zext i8 %724 to i32, !dbg !7391
  %conv1091 = sitofp i32 %conv1090 to float, !dbg !7391
  %mul1092 = fmul float 0x3F70101020000000, %conv1091, !dbg !7392
  store float %mul1092, float* %a1089, align 4, !dbg !7393
  %725 = load float, float* %a1089, align 4, !dbg !7394
  %726 = load i8*, i8** %lpay, align 8, !dbg !7395
  %727 = load i8, i8* %726, align 1, !dbg !7396
  %conv1093 = zext i8 %727 to i32, !dbg !7397
  %conv1094 = sitofp i32 %conv1093 to float, !dbg !7397
  %mul1095 = fmul float %725, %conv1094, !dbg !7398
  %728 = load float, float* %a1089, align 4, !dbg !7399
  %sub1096 = fsub float 1.000000e+00, %728, !dbg !7400
  %729 = load i32, i32* %x, align 4, !dbg !7401
  %add1097 = add nsw i32 %729, 1, !dbg !7402
  %idxprom1098 = sext i32 %add1097 to i64, !dbg !7403
  %730 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !7403
  %arrayidx1099 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %730, i64 %idxprom1098, !dbg !7403
  %yuv1100 = bitcast %union.ColorFloat* %arrayidx1099 to %struct.YUVFloat*, !dbg !7404
  %y1101 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv1100, i32 0, i32 0, !dbg !7405
  %731 = load float, float* %y1101, align 4, !dbg !7405
  %add1102 = fadd float %731, 1.600000e+01, !dbg !7406
  %mul1103 = fmul float %sub1096, %add1102, !dbg !7407
  %add1104 = fadd float %mul1095, %mul1103, !dbg !7408
  %call1105 = call i64 @lrintf(float %add1104) #8, !dbg !7409
  %conv1106 = trunc i64 %call1105 to i8, !dbg !7409
  %732 = load i8*, i8** %lpy, align 8, !dbg !7410
  store i8 %conv1106, i8* %732, align 1, !dbg !7411
  br label %if.end1107

if.end1107:                                       ; preds = %if.else1088, %if.then1087
  br label %if.end1108

if.end1108:                                       ; preds = %if.end1107, %if.then1074
  %733 = load i8*, i8** %lpy, align 8, !dbg !7412
  %incdec.ptr1109 = getelementptr inbounds i8, i8* %733, i32 1, !dbg !7412
  store i8* %incdec.ptr1109, i8** %lpy, align 8, !dbg !7412
  %734 = load i8*, i8** %lpay, align 8, !dbg !7414
  %incdec.ptr1110 = getelementptr inbounds i8, i8* %734, i32 1, !dbg !7414
  store i8* %incdec.ptr1110, i8** %lpay, align 8, !dbg !7414
  %735 = load i8*, i8** %lpaa, align 8, !dbg !7415
  %add.ptr1111 = getelementptr inbounds i8, i8* %735, i64 1, !dbg !7415
  store i8* %add.ptr1111, i8** %lpaa, align 8, !dbg !7415
  br label %do.end1112, !dbg !7416

do.end1112:                                       ; preds = %if.end1108
  br label %for.inc1113, !dbg !7417

for.inc1113:                                      ; preds = %do.end1112
  %736 = load i32, i32* %x, align 4, !dbg !7418
  %add1114 = add nsw i32 %736, 2, !dbg !7418
  store i32 %add1114, i32* %x, align 4, !dbg !7418
  br label %for.cond1029, !dbg !7420, !llvm.loop !7421

for.end1115:                                      ; preds = %for.cond1029
  br label %if.end1116

if.end1116:                                       ; preds = %for.end1115, %for.end1027
  br label %if.end1117

if.end1117:                                       ; preds = %if.end1116, %for.end846
  br label %for.inc1118, !dbg !7423

for.inc1118:                                      ; preds = %if.end1117
  %737 = load i32, i32* %y, align 4, !dbg !7424
  %add1119 = add nsw i32 %737, 2, !dbg !7424
  store i32 %add1119, i32* %y, align 4, !dbg !7424
  br label %for.cond, !dbg !7426, !llvm.loop !7427

for.end1120:                                      ; preds = %for.cond
  ret void, !dbg !7429
}

; Function Attrs: nounwind uwtable
define internal void @update_sono_yuv(%struct.AVFrame* %sono, %union.ColorFloat* %c, i32 %idx) #1 !dbg !7430 {
entry:
  %sono.addr = alloca %struct.AVFrame*, align 8
  %c.addr = alloca %union.ColorFloat*, align 8
  %idx.addr = alloca i32, align 4
  %x = alloca i32, align 4
  %fmt = alloca i32, align 4
  %w = alloca i32, align 4
  %lpy = alloca i8*, align 8
  %lpu = alloca i8*, align 8
  %lpv = alloca i8*, align 8
  store %struct.AVFrame* %sono, %struct.AVFrame** %sono.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %sono.addr, metadata !7431, metadata !820), !dbg !7432
  store %union.ColorFloat* %c, %union.ColorFloat** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %union.ColorFloat** %c.addr, metadata !7433, metadata !820), !dbg !7434
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !7435, metadata !820), !dbg !7436
  call void @llvm.dbg.declare(metadata i32* %x, metadata !7437, metadata !820), !dbg !7438
  call void @llvm.dbg.declare(metadata i32* %fmt, metadata !7439, metadata !820), !dbg !7440
  %0 = load %struct.AVFrame*, %struct.AVFrame** %sono.addr, align 8, !dbg !7441
  %format = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i32 0, i32 6, !dbg !7442
  %1 = load i32, i32* %format, align 4, !dbg !7442
  store i32 %1, i32* %fmt, align 4, !dbg !7440
  call void @llvm.dbg.declare(metadata i32* %w, metadata !7443, metadata !820), !dbg !7444
  %2 = load %struct.AVFrame*, %struct.AVFrame** %sono.addr, align 8, !dbg !7445
  %width = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %2, i32 0, i32 3, !dbg !7446
  %3 = load i32, i32* %width, align 8, !dbg !7446
  store i32 %3, i32* %w, align 4, !dbg !7444
  call void @llvm.dbg.declare(metadata i8** %lpy, metadata !7447, metadata !820), !dbg !7448
  %4 = load %struct.AVFrame*, %struct.AVFrame** %sono.addr, align 8, !dbg !7449
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %4, i32 0, i32 0, !dbg !7450
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 0, !dbg !7449
  %5 = load i8*, i8** %arrayidx, align 8, !dbg !7449
  %6 = load i32, i32* %idx.addr, align 4, !dbg !7451
  %7 = load %struct.AVFrame*, %struct.AVFrame** %sono.addr, align 8, !dbg !7452
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %7, i32 0, i32 1, !dbg !7453
  %arrayidx1 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 0, !dbg !7452
  %8 = load i32, i32* %arrayidx1, align 8, !dbg !7452
  %mul = mul nsw i32 %6, %8, !dbg !7454
  %idx.ext = sext i32 %mul to i64, !dbg !7455
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !7455
  store i8* %add.ptr, i8** %lpy, align 8, !dbg !7448
  call void @llvm.dbg.declare(metadata i8** %lpu, metadata !7456, metadata !820), !dbg !7457
  %9 = load %struct.AVFrame*, %struct.AVFrame** %sono.addr, align 8, !dbg !7458
  %data2 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %9, i32 0, i32 0, !dbg !7459
  %arrayidx3 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data2, i64 0, i64 1, !dbg !7458
  %10 = load i8*, i8** %arrayidx3, align 8, !dbg !7458
  %11 = load i32, i32* %idx.addr, align 4, !dbg !7460
  %12 = load %struct.AVFrame*, %struct.AVFrame** %sono.addr, align 8, !dbg !7461
  %linesize4 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %12, i32 0, i32 1, !dbg !7462
  %arrayidx5 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize4, i64 0, i64 1, !dbg !7461
  %13 = load i32, i32* %arrayidx5, align 4, !dbg !7461
  %mul6 = mul nsw i32 %11, %13, !dbg !7463
  %idx.ext7 = sext i32 %mul6 to i64, !dbg !7464
  %add.ptr8 = getelementptr inbounds i8, i8* %10, i64 %idx.ext7, !dbg !7464
  store i8* %add.ptr8, i8** %lpu, align 8, !dbg !7457
  call void @llvm.dbg.declare(metadata i8** %lpv, metadata !7465, metadata !820), !dbg !7466
  %14 = load %struct.AVFrame*, %struct.AVFrame** %sono.addr, align 8, !dbg !7467
  %data9 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %14, i32 0, i32 0, !dbg !7468
  %arrayidx10 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data9, i64 0, i64 2, !dbg !7467
  %15 = load i8*, i8** %arrayidx10, align 8, !dbg !7467
  %16 = load i32, i32* %idx.addr, align 4, !dbg !7469
  %17 = load %struct.AVFrame*, %struct.AVFrame** %sono.addr, align 8, !dbg !7470
  %linesize11 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %17, i32 0, i32 1, !dbg !7471
  %arrayidx12 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize11, i64 0, i64 2, !dbg !7470
  %18 = load i32, i32* %arrayidx12, align 8, !dbg !7470
  %mul13 = mul nsw i32 %16, %18, !dbg !7472
  %idx.ext14 = sext i32 %mul13 to i64, !dbg !7473
  %add.ptr15 = getelementptr inbounds i8, i8* %15, i64 %idx.ext14, !dbg !7473
  store i8* %add.ptr15, i8** %lpv, align 8, !dbg !7466
  store i32 0, i32* %x, align 4, !dbg !7474
  br label %for.cond, !dbg !7476

for.cond:                                         ; preds = %for.inc, %entry
  %19 = load i32, i32* %x, align 4, !dbg !7477
  %20 = load i32, i32* %w, align 4, !dbg !7480
  %cmp = icmp slt i32 %19, %20, !dbg !7481
  br i1 %cmp, label %for.body, label %for.end, !dbg !7482

for.body:                                         ; preds = %for.cond
  %21 = load i32, i32* %x, align 4, !dbg !7483
  %idxprom = sext i32 %21 to i64, !dbg !7485
  %22 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !7485
  %arrayidx16 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %22, i64 %idxprom, !dbg !7485
  %yuv = bitcast %union.ColorFloat* %arrayidx16 to %struct.YUVFloat*, !dbg !7486
  %y = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv, i32 0, i32 0, !dbg !7487
  %23 = load float, float* %y, align 4, !dbg !7487
  %add = fadd float %23, 1.600000e+01, !dbg !7488
  %call = call i64 @lrintf(float %add) #8, !dbg !7489
  %conv = trunc i64 %call to i8, !dbg !7489
  %24 = load i8*, i8** %lpy, align 8, !dbg !7490
  %incdec.ptr = getelementptr inbounds i8, i8* %24, i32 1, !dbg !7490
  store i8* %incdec.ptr, i8** %lpy, align 8, !dbg !7490
  store i8 %conv, i8* %24, align 1, !dbg !7491
  %25 = load i32, i32* %x, align 4, !dbg !7492
  %idxprom17 = sext i32 %25 to i64, !dbg !7493
  %26 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !7493
  %arrayidx18 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %26, i64 %idxprom17, !dbg !7493
  %yuv19 = bitcast %union.ColorFloat* %arrayidx18 to %struct.YUVFloat*, !dbg !7494
  %u = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv19, i32 0, i32 1, !dbg !7495
  %27 = load float, float* %u, align 4, !dbg !7495
  %add20 = fadd float %27, 1.280000e+02, !dbg !7496
  %call21 = call i64 @lrintf(float %add20) #8, !dbg !7497
  %conv22 = trunc i64 %call21 to i8, !dbg !7497
  %28 = load i8*, i8** %lpu, align 8, !dbg !7498
  %incdec.ptr23 = getelementptr inbounds i8, i8* %28, i32 1, !dbg !7498
  store i8* %incdec.ptr23, i8** %lpu, align 8, !dbg !7498
  store i8 %conv22, i8* %28, align 1, !dbg !7499
  %29 = load i32, i32* %x, align 4, !dbg !7500
  %idxprom24 = sext i32 %29 to i64, !dbg !7501
  %30 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !7501
  %arrayidx25 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %30, i64 %idxprom24, !dbg !7501
  %yuv26 = bitcast %union.ColorFloat* %arrayidx25 to %struct.YUVFloat*, !dbg !7502
  %v = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv26, i32 0, i32 2, !dbg !7503
  %31 = load float, float* %v, align 4, !dbg !7503
  %add27 = fadd float %31, 1.280000e+02, !dbg !7504
  %call28 = call i64 @lrintf(float %add27) #8, !dbg !7505
  %conv29 = trunc i64 %call28 to i8, !dbg !7505
  %32 = load i8*, i8** %lpv, align 8, !dbg !7506
  %incdec.ptr30 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !7506
  store i8* %incdec.ptr30, i8** %lpv, align 8, !dbg !7506
  store i8 %conv29, i8* %32, align 1, !dbg !7507
  %33 = load i32, i32* %x, align 4, !dbg !7508
  %add31 = add nsw i32 %33, 1, !dbg !7509
  %idxprom32 = sext i32 %add31 to i64, !dbg !7510
  %34 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !7510
  %arrayidx33 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %34, i64 %idxprom32, !dbg !7510
  %yuv34 = bitcast %union.ColorFloat* %arrayidx33 to %struct.YUVFloat*, !dbg !7511
  %y35 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv34, i32 0, i32 0, !dbg !7512
  %35 = load float, float* %y35, align 4, !dbg !7512
  %add36 = fadd float %35, 1.600000e+01, !dbg !7513
  %call37 = call i64 @lrintf(float %add36) #8, !dbg !7514
  %conv38 = trunc i64 %call37 to i8, !dbg !7514
  %36 = load i8*, i8** %lpy, align 8, !dbg !7515
  %incdec.ptr39 = getelementptr inbounds i8, i8* %36, i32 1, !dbg !7515
  store i8* %incdec.ptr39, i8** %lpy, align 8, !dbg !7515
  store i8 %conv38, i8* %36, align 1, !dbg !7516
  %37 = load i32, i32* %fmt, align 4, !dbg !7517
  %cmp40 = icmp eq i32 %37, 5, !dbg !7519
  br i1 %cmp40, label %if.then, label %if.end, !dbg !7520

if.then:                                          ; preds = %for.body
  %38 = load i32, i32* %x, align 4, !dbg !7521
  %add42 = add nsw i32 %38, 1, !dbg !7523
  %idxprom43 = sext i32 %add42 to i64, !dbg !7524
  %39 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !7524
  %arrayidx44 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %39, i64 %idxprom43, !dbg !7524
  %yuv45 = bitcast %union.ColorFloat* %arrayidx44 to %struct.YUVFloat*, !dbg !7525
  %u46 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv45, i32 0, i32 1, !dbg !7526
  %40 = load float, float* %u46, align 4, !dbg !7526
  %add47 = fadd float %40, 1.280000e+02, !dbg !7527
  %call48 = call i64 @lrintf(float %add47) #8, !dbg !7528
  %conv49 = trunc i64 %call48 to i8, !dbg !7528
  %41 = load i8*, i8** %lpu, align 8, !dbg !7529
  %incdec.ptr50 = getelementptr inbounds i8, i8* %41, i32 1, !dbg !7529
  store i8* %incdec.ptr50, i8** %lpu, align 8, !dbg !7529
  store i8 %conv49, i8* %41, align 1, !dbg !7530
  %42 = load i32, i32* %x, align 4, !dbg !7531
  %add51 = add nsw i32 %42, 1, !dbg !7532
  %idxprom52 = sext i32 %add51 to i64, !dbg !7533
  %43 = load %union.ColorFloat*, %union.ColorFloat** %c.addr, align 8, !dbg !7533
  %arrayidx53 = getelementptr inbounds %union.ColorFloat, %union.ColorFloat* %43, i64 %idxprom52, !dbg !7533
  %yuv54 = bitcast %union.ColorFloat* %arrayidx53 to %struct.YUVFloat*, !dbg !7534
  %v55 = getelementptr inbounds %struct.YUVFloat, %struct.YUVFloat* %yuv54, i32 0, i32 2, !dbg !7535
  %44 = load float, float* %v55, align 4, !dbg !7535
  %add56 = fadd float %44, 1.280000e+02, !dbg !7536
  %call57 = call i64 @lrintf(float %add56) #8, !dbg !7537
  %conv58 = trunc i64 %call57 to i8, !dbg !7537
  %45 = load i8*, i8** %lpv, align 8, !dbg !7538
  %incdec.ptr59 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !7538
  store i8* %incdec.ptr59, i8** %lpv, align 8, !dbg !7538
  store i8 %conv58, i8* %45, align 1, !dbg !7539
  br label %if.end, !dbg !7540

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !7541

for.inc:                                          ; preds = %if.end
  %46 = load i32, i32* %x, align 4, !dbg !7542
  %add60 = add nsw i32 %46, 2, !dbg !7542
  store i32 %add60, i32* %x, align 4, !dbg !7542
  br label %for.cond, !dbg !7544, !llvm.loop !7545

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7547
}

declare void @ff_showcqt_init_x86(%struct.ShowCQTContext*) #4

; Function Attrs: nounwind uwtable
define internal i32 @init_cqt(%struct.ShowCQTContext* %s) #1 !dbg !7548 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.ShowCQTContext*, align 8
  %var_names = alloca [6 x i8*], align 16
  %expr = alloca %struct.AVExpr*, align 8
  %rate = alloca i32, align 4
  %nb_cqt_coeffs = alloca i32, align 4
  %k = alloca i32, align 4
  %x = alloca i32, align 4
  %ret = alloca i32, align 4
  %vars = alloca [5 x double], align 16
  %flen = alloca double, align 8
  %center = alloca double, align 8
  %tlength19 = alloca double, align 8
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %m = alloca i32, align 4
  %sign = alloca i32, align 4
  %y = alloca double, align 8
  %w = alloca double, align 8
  store %struct.ShowCQTContext* %s, %struct.ShowCQTContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShowCQTContext** %s.addr, metadata !7549, metadata !820), !dbg !7550
  call void @llvm.dbg.declare(metadata [6 x i8*]* %var_names, metadata !7551, metadata !820), !dbg !7553
  %0 = bitcast [6 x i8*]* %var_names to i8*, !dbg !7553
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 48, i32 16, i1 false), !dbg !7553
  %1 = bitcast i8* %0 to [6 x i8*]*, !dbg !7553
  %2 = getelementptr [6 x i8*], [6 x i8*]* %1, i32 0, i32 0, !dbg !7553
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i32 0, i32 0), i8** %2, !dbg !7553
  %3 = getelementptr [6 x i8*], [6 x i8*]* %1, i32 0, i32 1, !dbg !7553
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i32 0, i32 0), i8** %3, !dbg !7553
  %4 = getelementptr [6 x i8*], [6 x i8*]* %1, i32 0, i32 2, !dbg !7553
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i32 0, i32 0), i8** %4, !dbg !7553
  %5 = getelementptr [6 x i8*], [6 x i8*]* %1, i32 0, i32 3, !dbg !7553
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i32 0, i32 0), i8** %5, !dbg !7553
  %6 = getelementptr [6 x i8*], [6 x i8*]* %1, i32 0, i32 4, !dbg !7553
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i32 0, i32 0), i8** %6, !dbg !7553
  call void @llvm.dbg.declare(metadata %struct.AVExpr** %expr, metadata !7554, metadata !820), !dbg !7555
  store %struct.AVExpr* null, %struct.AVExpr** %expr, align 8, !dbg !7555
  call void @llvm.dbg.declare(metadata i32* %rate, metadata !7556, metadata !820), !dbg !7557
  %7 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7558
  %ctx = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %7, i32 0, i32 1, !dbg !7559
  %8 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !7559
  %inputs = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %8, i32 0, i32 4, !dbg !7560
  %9 = load %struct.AVFilterLink**, %struct.AVFilterLink*** %inputs, align 8, !dbg !7560
  %arrayidx = getelementptr inbounds %struct.AVFilterLink*, %struct.AVFilterLink** %9, i64 0, !dbg !7558
  %10 = load %struct.AVFilterLink*, %struct.AVFilterLink** %arrayidx, align 8, !dbg !7558
  %sample_rate = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %10, i32 0, i32 9, !dbg !7561
  %11 = load i32, i32* %sample_rate, align 8, !dbg !7561
  store i32 %11, i32* %rate, align 4, !dbg !7557
  call void @llvm.dbg.declare(metadata i32* %nb_cqt_coeffs, metadata !7562, metadata !820), !dbg !7563
  store i32 0, i32* %nb_cqt_coeffs, align 4, !dbg !7563
  call void @llvm.dbg.declare(metadata i32* %k, metadata !7564, metadata !820), !dbg !7565
  call void @llvm.dbg.declare(metadata i32* %x, metadata !7566, metadata !820), !dbg !7567
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7568, metadata !820), !dbg !7569
  %12 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7570
  %tlength = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %12, i32 0, i32 62, !dbg !7572
  %13 = load i8*, i8** %tlength, align 8, !dbg !7572
  %arraydecay = getelementptr inbounds [6 x i8*], [6 x i8*]* %var_names, i32 0, i32 0, !dbg !7573
  %14 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7574
  %ctx1 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %14, i32 0, i32 1, !dbg !7575
  %15 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx1, align 8, !dbg !7575
  %16 = bitcast %struct.AVFilterContext* %15 to i8*, !dbg !7574
  %call = call i32 @av_expr_parse(%struct.AVExpr** %expr, i8* %13, i8** %arraydecay, i8** null, double (i8*, double)** null, i8** null, double (i8*, double, double)** null, i32 0, i8* %16), !dbg !7576
  store i32 %call, i32* %ret, align 4, !dbg !7577
  %cmp = icmp slt i32 %call, 0, !dbg !7578
  br i1 %cmp, label %if.then, label %if.end, !dbg !7579

if.then:                                          ; preds = %entry
  br label %error, !dbg !7580

if.end:                                           ; preds = %entry
  store i32 -12, i32* %ret, align 4, !dbg !7581
  %17 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7582
  %cqt_len = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %17, i32 0, i32 22, !dbg !7584
  %18 = load i32, i32* %cqt_len, align 8, !dbg !7584
  %conv = sext i32 %18 to i64, !dbg !7582
  %call2 = call noalias i8* @av_calloc(i64 %conv, i64 16), !dbg !7585
  %19 = bitcast i8* %call2 to %struct.Coeffs*, !dbg !7585
  %20 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7586
  %coeffs = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %20, i32 0, i32 15, !dbg !7587
  store %struct.Coeffs* %19, %struct.Coeffs** %coeffs, align 8, !dbg !7588
  %tobool = icmp ne %struct.Coeffs* %19, null, !dbg !7588
  br i1 %tobool, label %if.end4, label %if.then3, !dbg !7589

if.then3:                                         ; preds = %if.end
  br label %error, !dbg !7590

if.end4:                                          ; preds = %if.end
  store i32 0, i32* %k, align 4, !dbg !7591
  br label %for.cond, !dbg !7593

for.cond:                                         ; preds = %for.inc156, %if.end4
  %21 = load i32, i32* %k, align 4, !dbg !7594
  %22 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7597
  %cqt_len5 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %22, i32 0, i32 22, !dbg !7598
  %23 = load i32, i32* %cqt_len5, align 8, !dbg !7598
  %cmp6 = icmp slt i32 %21, %23, !dbg !7599
  br i1 %cmp6, label %for.body, label %for.end158, !dbg !7600

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [5 x double]* %vars, metadata !7601, metadata !820), !dbg !7604
  %arrayinit.begin = getelementptr inbounds [5 x double], [5 x double]* %vars, i64 0, i64 0, !dbg !7605
  %24 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7606
  %timeclamp = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %24, i32 0, i32 57, !dbg !7607
  %25 = load double, double* %timeclamp, align 8, !dbg !7607
  store double %25, double* %arrayinit.begin, align 8, !dbg !7605
  %arrayinit.element = getelementptr inbounds double, double* %arrayinit.begin, i64 1, !dbg !7605
  %26 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7608
  %timeclamp8 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %26, i32 0, i32 57, !dbg !7609
  %27 = load double, double* %timeclamp8, align 8, !dbg !7609
  store double %27, double* %arrayinit.element, align 8, !dbg !7605
  %arrayinit.element9 = getelementptr inbounds double, double* %arrayinit.element, i64 1, !dbg !7605
  %28 = load i32, i32* %k, align 4, !dbg !7610
  %idxprom = sext i32 %28 to i64, !dbg !7611
  %29 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7611
  %freq = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %29, i32 0, i32 13, !dbg !7612
  %30 = load double*, double** %freq, align 8, !dbg !7612
  %arrayidx10 = getelementptr inbounds double, double* %30, i64 %idxprom, !dbg !7611
  %31 = load double, double* %arrayidx10, align 8, !dbg !7611
  store double %31, double* %arrayinit.element9, align 8, !dbg !7605
  %arrayinit.element11 = getelementptr inbounds double, double* %arrayinit.element9, i64 1, !dbg !7605
  %32 = load i32, i32* %k, align 4, !dbg !7613
  %idxprom12 = sext i32 %32 to i64, !dbg !7614
  %33 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7614
  %freq13 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %33, i32 0, i32 13, !dbg !7615
  %34 = load double*, double** %freq13, align 8, !dbg !7615
  %arrayidx14 = getelementptr inbounds double, double* %34, i64 %idxprom12, !dbg !7614
  %35 = load double, double* %arrayidx14, align 8, !dbg !7614
  store double %35, double* %arrayinit.element11, align 8, !dbg !7605
  %arrayinit.element15 = getelementptr inbounds double, double* %arrayinit.element11, i64 1, !dbg !7605
  %36 = load i32, i32* %k, align 4, !dbg !7616
  %idxprom16 = sext i32 %36 to i64, !dbg !7617
  %37 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7617
  %freq17 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %37, i32 0, i32 13, !dbg !7618
  %38 = load double*, double** %freq17, align 8, !dbg !7618
  %arrayidx18 = getelementptr inbounds double, double* %38, i64 %idxprom16, !dbg !7617
  %39 = load double, double* %arrayidx18, align 8, !dbg !7617
  store double %39, double* %arrayinit.element15, align 8, !dbg !7605
  call void @llvm.dbg.declare(metadata double* %flen, metadata !7619, metadata !820), !dbg !7620
  call void @llvm.dbg.declare(metadata double* %center, metadata !7621, metadata !820), !dbg !7622
  call void @llvm.dbg.declare(metadata double* %tlength19, metadata !7623, metadata !820), !dbg !7624
  call void @llvm.dbg.declare(metadata i32* %start, metadata !7625, metadata !820), !dbg !7626
  call void @llvm.dbg.declare(metadata i32* %end, metadata !7627, metadata !820), !dbg !7628
  call void @llvm.dbg.declare(metadata i32* %m, metadata !7629, metadata !820), !dbg !7630
  %40 = load i32, i32* %k, align 4, !dbg !7631
  store i32 %40, i32* %m, align 4, !dbg !7630
  %41 = load i32, i32* %k, align 4, !dbg !7632
  %idxprom20 = sext i32 %41 to i64, !dbg !7634
  %42 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7634
  %freq21 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %42, i32 0, i32 13, !dbg !7635
  %43 = load double*, double** %freq21, align 8, !dbg !7635
  %arrayidx22 = getelementptr inbounds double, double* %43, i64 %idxprom20, !dbg !7634
  %44 = load double, double* %arrayidx22, align 8, !dbg !7634
  %45 = load i32, i32* %rate, align 4, !dbg !7636
  %conv23 = sitofp i32 %45 to double, !dbg !7636
  %mul = fmul double 5.000000e-01, %conv23, !dbg !7637
  %cmp24 = fcmp ogt double %44, %mul, !dbg !7638
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !7639

if.then26:                                        ; preds = %for.body
  br label %for.inc156, !dbg !7640

if.end27:                                         ; preds = %for.body
  %46 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7641
  %ctx28 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %46, i32 0, i32 1, !dbg !7642
  %47 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx28, align 8, !dbg !7642
  %48 = bitcast %struct.AVFilterContext* %47 to i8*, !dbg !7641
  %49 = load %struct.AVExpr*, %struct.AVExpr** %expr, align 8, !dbg !7643
  %arraydecay29 = getelementptr inbounds [5 x double], [5 x double]* %vars, i32 0, i32 0, !dbg !7644
  %call30 = call double @av_expr_eval(%struct.AVExpr* %49, double* %arraydecay29, i8* null), !dbg !7645
  %50 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7646
  %timeclamp31 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %50, i32 0, i32 57, !dbg !7647
  %51 = load double, double* %timeclamp31, align 8, !dbg !7647
  %52 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7648
  %timeclamp32 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %52, i32 0, i32 57, !dbg !7649
  %53 = load double, double* %timeclamp32, align 8, !dbg !7649
  %54 = load i32, i32* %k, align 4, !dbg !7650
  %call33 = call double @clip_with_log(i8* %48, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i32 0, i32 0), double %call30, double 1.000000e-03, double %51, double %53, i32 %54), !dbg !7651
  store double %call33, double* %tlength19, align 8, !dbg !7653
  %55 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7654
  %fft_len = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %55, i32 0, i32 21, !dbg !7655
  %56 = load i32, i32* %fft_len, align 4, !dbg !7655
  %conv34 = sitofp i32 %56 to double, !dbg !7654
  %mul35 = fmul double 8.000000e+00, %conv34, !dbg !7656
  %57 = load double, double* %tlength19, align 8, !dbg !7657
  %58 = load i32, i32* %rate, align 4, !dbg !7658
  %conv36 = sitofp i32 %58 to double, !dbg !7658
  %mul37 = fmul double %57, %conv36, !dbg !7659
  %div = fdiv double %mul35, %mul37, !dbg !7660
  store double %div, double* %flen, align 8, !dbg !7661
  %59 = load i32, i32* %k, align 4, !dbg !7662
  %idxprom38 = sext i32 %59 to i64, !dbg !7663
  %60 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7663
  %freq39 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %60, i32 0, i32 13, !dbg !7664
  %61 = load double*, double** %freq39, align 8, !dbg !7664
  %arrayidx40 = getelementptr inbounds double, double* %61, i64 %idxprom38, !dbg !7663
  %62 = load double, double* %arrayidx40, align 8, !dbg !7663
  %63 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7665
  %fft_len41 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %63, i32 0, i32 21, !dbg !7666
  %64 = load i32, i32* %fft_len41, align 4, !dbg !7666
  %conv42 = sitofp i32 %64 to double, !dbg !7665
  %mul43 = fmul double %62, %conv42, !dbg !7667
  %65 = load i32, i32* %rate, align 4, !dbg !7668
  %conv44 = sitofp i32 %65 to double, !dbg !7668
  %div45 = fdiv double %mul43, %conv44, !dbg !7669
  store double %div45, double* %center, align 8, !dbg !7670
  %66 = load double, double* %center, align 8, !dbg !7671
  %67 = load double, double* %flen, align 8, !dbg !7672
  %mul46 = fmul double 5.000000e-01, %67, !dbg !7673
  %sub = fsub double %66, %mul46, !dbg !7674
  %call47 = call double @ceil(double %sub) #2, !dbg !7675
  %cmp48 = fcmp ogt double 0.000000e+00, %call47, !dbg !7676
  br i1 %cmp48, label %cond.true, label %cond.false, !dbg !7677

cond.true:                                        ; preds = %if.end27
  br label %cond.end, !dbg !7678

cond.false:                                       ; preds = %if.end27
  %68 = load double, double* %center, align 8, !dbg !7679
  %69 = load double, double* %flen, align 8, !dbg !7681
  %mul50 = fmul double 5.000000e-01, %69, !dbg !7682
  %sub51 = fsub double %68, %mul50, !dbg !7683
  %call52 = call double @ceil(double %sub51) #2, !dbg !7684
  br label %cond.end, !dbg !7685

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ 0.000000e+00, %cond.true ], [ %call52, %cond.false ], !dbg !7686
  %conv53 = fptosi double %cond to i32, !dbg !7688
  store i32 %conv53, i32* %start, align 4, !dbg !7689
  %70 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7690
  %fft_len54 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %70, i32 0, i32 21, !dbg !7691
  %71 = load i32, i32* %fft_len54, align 4, !dbg !7691
  %conv55 = sitofp i32 %71 to double, !dbg !7692
  %72 = load double, double* %center, align 8, !dbg !7693
  %73 = load double, double* %flen, align 8, !dbg !7694
  %mul56 = fmul double 5.000000e-01, %73, !dbg !7695
  %add = fadd double %72, %mul56, !dbg !7696
  %call57 = call double @floor(double %add) #2, !dbg !7697
  %cmp58 = fcmp ogt double %conv55, %call57, !dbg !7698
  br i1 %cmp58, label %cond.true60, label %cond.false64, !dbg !7692

cond.true60:                                      ; preds = %cond.end
  %74 = load double, double* %center, align 8, !dbg !7699
  %75 = load double, double* %flen, align 8, !dbg !7700
  %mul61 = fmul double 5.000000e-01, %75, !dbg !7701
  %add62 = fadd double %74, %mul61, !dbg !7702
  %call63 = call double @floor(double %add62) #2, !dbg !7703
  br label %cond.end67, !dbg !7704

cond.false64:                                     ; preds = %cond.end
  %76 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7705
  %fft_len65 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %76, i32 0, i32 21, !dbg !7706
  %77 = load i32, i32* %fft_len65, align 4, !dbg !7706
  %conv66 = sitofp i32 %77 to double, !dbg !7707
  br label %cond.end67, !dbg !7708

cond.end67:                                       ; preds = %cond.false64, %cond.true60
  %cond68 = phi double [ %call63, %cond.true60 ], [ %conv66, %cond.false64 ], !dbg !7709
  %conv69 = fptosi double %cond68 to i32, !dbg !7710
  store i32 %conv69, i32* %end, align 4, !dbg !7711
  %78 = load i32, i32* %start, align 4, !dbg !7712
  %79 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7713
  %cqt_align = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %79, i32 0, i32 23, !dbg !7714
  %80 = load i32, i32* %cqt_align, align 4, !dbg !7714
  %sub70 = sub nsw i32 %80, 1, !dbg !7715
  %neg = xor i32 %sub70, -1, !dbg !7716
  %and = and i32 %78, %neg, !dbg !7717
  %81 = load i32, i32* %m, align 4, !dbg !7718
  %idxprom71 = sext i32 %81 to i64, !dbg !7719
  %82 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7719
  %coeffs72 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %82, i32 0, i32 15, !dbg !7720
  %83 = load %struct.Coeffs*, %struct.Coeffs** %coeffs72, align 8, !dbg !7720
  %arrayidx73 = getelementptr inbounds %struct.Coeffs, %struct.Coeffs* %83, i64 %idxprom71, !dbg !7719
  %start74 = getelementptr inbounds %struct.Coeffs, %struct.Coeffs* %arrayidx73, i32 0, i32 1, !dbg !7721
  store i32 %and, i32* %start74, align 8, !dbg !7722
  %84 = load i32, i32* %end, align 4, !dbg !7723
  %85 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7724
  %cqt_align75 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %85, i32 0, i32 23, !dbg !7725
  %86 = load i32, i32* %cqt_align75, align 4, !dbg !7725
  %sub76 = sub nsw i32 %86, 1, !dbg !7726
  %or = or i32 %84, %sub76, !dbg !7727
  %add77 = add nsw i32 %or, 1, !dbg !7728
  %87 = load i32, i32* %m, align 4, !dbg !7729
  %idxprom78 = sext i32 %87 to i64, !dbg !7730
  %88 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7730
  %coeffs79 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %88, i32 0, i32 15, !dbg !7731
  %89 = load %struct.Coeffs*, %struct.Coeffs** %coeffs79, align 8, !dbg !7731
  %arrayidx80 = getelementptr inbounds %struct.Coeffs, %struct.Coeffs* %89, i64 %idxprom78, !dbg !7730
  %start81 = getelementptr inbounds %struct.Coeffs, %struct.Coeffs* %arrayidx80, i32 0, i32 1, !dbg !7732
  %90 = load i32, i32* %start81, align 8, !dbg !7732
  %sub82 = sub nsw i32 %add77, %90, !dbg !7733
  %91 = load i32, i32* %m, align 4, !dbg !7734
  %idxprom83 = sext i32 %91 to i64, !dbg !7735
  %92 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7735
  %coeffs84 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %92, i32 0, i32 15, !dbg !7736
  %93 = load %struct.Coeffs*, %struct.Coeffs** %coeffs84, align 8, !dbg !7736
  %arrayidx85 = getelementptr inbounds %struct.Coeffs, %struct.Coeffs* %93, i64 %idxprom83, !dbg !7735
  %len = getelementptr inbounds %struct.Coeffs, %struct.Coeffs* %arrayidx85, i32 0, i32 2, !dbg !7737
  store i32 %sub82, i32* %len, align 4, !dbg !7738
  %94 = load i32, i32* %m, align 4, !dbg !7739
  %idxprom86 = sext i32 %94 to i64, !dbg !7740
  %95 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7740
  %coeffs87 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %95, i32 0, i32 15, !dbg !7741
  %96 = load %struct.Coeffs*, %struct.Coeffs** %coeffs87, align 8, !dbg !7741
  %arrayidx88 = getelementptr inbounds %struct.Coeffs, %struct.Coeffs* %96, i64 %idxprom86, !dbg !7740
  %len89 = getelementptr inbounds %struct.Coeffs, %struct.Coeffs* %arrayidx88, i32 0, i32 2, !dbg !7742
  %97 = load i32, i32* %len89, align 4, !dbg !7742
  %98 = load i32, i32* %nb_cqt_coeffs, align 4, !dbg !7743
  %add90 = add nsw i32 %98, %97, !dbg !7743
  store i32 %add90, i32* %nb_cqt_coeffs, align 4, !dbg !7743
  %99 = load i32, i32* %m, align 4, !dbg !7744
  %idxprom91 = sext i32 %99 to i64, !dbg !7746
  %100 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7746
  %coeffs92 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %100, i32 0, i32 15, !dbg !7747
  %101 = load %struct.Coeffs*, %struct.Coeffs** %coeffs92, align 8, !dbg !7747
  %arrayidx93 = getelementptr inbounds %struct.Coeffs, %struct.Coeffs* %101, i64 %idxprom91, !dbg !7746
  %len94 = getelementptr inbounds %struct.Coeffs, %struct.Coeffs* %arrayidx93, i32 0, i32 2, !dbg !7748
  %102 = load i32, i32* %len94, align 4, !dbg !7748
  %conv95 = sext i32 %102 to i64, !dbg !7746
  %call96 = call noalias i8* @av_calloc(i64 %conv95, i64 4), !dbg !7749
  %103 = bitcast i8* %call96 to float*, !dbg !7749
  %104 = load i32, i32* %m, align 4, !dbg !7750
  %idxprom97 = sext i32 %104 to i64, !dbg !7751
  %105 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7751
  %coeffs98 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %105, i32 0, i32 15, !dbg !7752
  %106 = load %struct.Coeffs*, %struct.Coeffs** %coeffs98, align 8, !dbg !7752
  %arrayidx99 = getelementptr inbounds %struct.Coeffs, %struct.Coeffs* %106, i64 %idxprom97, !dbg !7751
  %val = getelementptr inbounds %struct.Coeffs, %struct.Coeffs* %arrayidx99, i32 0, i32 0, !dbg !7753
  store float* %103, float** %val, align 8, !dbg !7754
  %tobool100 = icmp ne float* %103, null, !dbg !7754
  br i1 %tobool100, label %if.end102, label %if.then101, !dbg !7755

if.then101:                                       ; preds = %cond.end67
  br label %error, !dbg !7756

if.end102:                                        ; preds = %cond.end67
  %107 = load i32, i32* %start, align 4, !dbg !7757
  store i32 %107, i32* %x, align 4, !dbg !7759
  br label %for.cond103, !dbg !7760

for.cond103:                                      ; preds = %for.inc, %if.end102
  %108 = load i32, i32* %x, align 4, !dbg !7761
  %109 = load i32, i32* %end, align 4, !dbg !7764
  %cmp104 = icmp sle i32 %108, %109, !dbg !7765
  br i1 %cmp104, label %for.body106, label %for.end, !dbg !7766

for.body106:                                      ; preds = %for.cond103
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !7767, metadata !820), !dbg !7769
  %110 = load i32, i32* %x, align 4, !dbg !7770
  %and107 = and i32 %110, 1, !dbg !7771
  %tobool108 = icmp ne i32 %and107, 0, !dbg !7772
  %cond109 = select i1 %tobool108, i32 -1, i32 1, !dbg !7772
  store i32 %cond109, i32* %sign, align 4, !dbg !7769
  call void @llvm.dbg.declare(metadata double* %y, metadata !7773, metadata !820), !dbg !7774
  %111 = load i32, i32* %x, align 4, !dbg !7775
  %conv110 = sitofp i32 %111 to double, !dbg !7775
  %112 = load double, double* %center, align 8, !dbg !7776
  %sub111 = fsub double %conv110, %112, !dbg !7777
  %mul112 = fmul double 0x401921FB54442D18, %sub111, !dbg !7778
  %113 = load double, double* %flen, align 8, !dbg !7779
  %div113 = fdiv double 1.000000e+00, %113, !dbg !7780
  %mul114 = fmul double %mul112, %div113, !dbg !7781
  store double %mul114, double* %y, align 8, !dbg !7774
  call void @llvm.dbg.declare(metadata double* %w, metadata !7782, metadata !820), !dbg !7783
  %114 = load double, double* %y, align 8, !dbg !7784
  %call115 = call double @cos(double %114) #8, !dbg !7785
  %mul116 = fmul double 4.873960e-01, %call115, !dbg !7786
  %add117 = fadd double 3.557680e-01, %mul116, !dbg !7787
  %115 = load double, double* %y, align 8, !dbg !7788
  %mul118 = fmul double 2.000000e+00, %115, !dbg !7789
  %call119 = call double @cos(double %mul118) #8, !dbg !7790
  %mul120 = fmul double 1.442320e-01, %call119, !dbg !7792
  %add121 = fadd double %add117, %mul120, !dbg !7793
  %116 = load double, double* %y, align 8, !dbg !7794
  %mul122 = fmul double 3.000000e+00, %116, !dbg !7795
  %call123 = call double @cos(double %mul122) #8, !dbg !7796
  %mul124 = fmul double 1.260400e-02, %call123, !dbg !7798
  %add125 = fadd double %add121, %mul124, !dbg !7799
  store double %add125, double* %w, align 8, !dbg !7783
  %117 = load i32, i32* %sign, align 4, !dbg !7800
  %conv126 = sitofp i32 %117 to double, !dbg !7800
  %118 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7801
  %fft_len127 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %118, i32 0, i32 21, !dbg !7802
  %119 = load i32, i32* %fft_len127, align 4, !dbg !7802
  %conv128 = sitofp i32 %119 to double, !dbg !7801
  %div129 = fdiv double 1.000000e+00, %conv128, !dbg !7803
  %mul130 = fmul double %conv126, %div129, !dbg !7804
  %120 = load double, double* %w, align 8, !dbg !7805
  %mul131 = fmul double %120, %mul130, !dbg !7805
  store double %mul131, double* %w, align 8, !dbg !7805
  %121 = load double, double* %w, align 8, !dbg !7806
  %conv132 = fptrunc double %121 to float, !dbg !7806
  %122 = load i32, i32* %x, align 4, !dbg !7807
  %123 = load i32, i32* %m, align 4, !dbg !7808
  %idxprom133 = sext i32 %123 to i64, !dbg !7809
  %124 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7809
  %coeffs134 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %124, i32 0, i32 15, !dbg !7810
  %125 = load %struct.Coeffs*, %struct.Coeffs** %coeffs134, align 8, !dbg !7810
  %arrayidx135 = getelementptr inbounds %struct.Coeffs, %struct.Coeffs* %125, i64 %idxprom133, !dbg !7809
  %start136 = getelementptr inbounds %struct.Coeffs, %struct.Coeffs* %arrayidx135, i32 0, i32 1, !dbg !7811
  %126 = load i32, i32* %start136, align 8, !dbg !7811
  %sub137 = sub nsw i32 %122, %126, !dbg !7812
  %idxprom138 = sext i32 %sub137 to i64, !dbg !7813
  %127 = load i32, i32* %m, align 4, !dbg !7814
  %idxprom139 = sext i32 %127 to i64, !dbg !7813
  %128 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7813
  %coeffs140 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %128, i32 0, i32 15, !dbg !7815
  %129 = load %struct.Coeffs*, %struct.Coeffs** %coeffs140, align 8, !dbg !7815
  %arrayidx141 = getelementptr inbounds %struct.Coeffs, %struct.Coeffs* %129, i64 %idxprom139, !dbg !7813
  %val142 = getelementptr inbounds %struct.Coeffs, %struct.Coeffs* %arrayidx141, i32 0, i32 0, !dbg !7816
  %130 = load float*, float** %val142, align 8, !dbg !7816
  %arrayidx143 = getelementptr inbounds float, float* %130, i64 %idxprom138, !dbg !7813
  store float %conv132, float* %arrayidx143, align 4, !dbg !7817
  br label %for.inc, !dbg !7818

for.inc:                                          ; preds = %for.body106
  %131 = load i32, i32* %x, align 4, !dbg !7819
  %inc = add nsw i32 %131, 1, !dbg !7819
  store i32 %inc, i32* %x, align 4, !dbg !7819
  br label %for.cond103, !dbg !7821, !llvm.loop !7822

for.end:                                          ; preds = %for.cond103
  %132 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7824
  %permute_coeffs = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %132, i32 0, i32 32, !dbg !7826
  %133 = load void (float*, i32)*, void (float*, i32)** %permute_coeffs, align 8, !dbg !7826
  %tobool144 = icmp ne void (float*, i32)* %133, null, !dbg !7824
  br i1 %tobool144, label %if.then145, label %if.end155, !dbg !7827

if.then145:                                       ; preds = %for.end
  %134 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7828
  %permute_coeffs146 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %134, i32 0, i32 32, !dbg !7829
  %135 = load void (float*, i32)*, void (float*, i32)** %permute_coeffs146, align 8, !dbg !7829
  %136 = load i32, i32* %m, align 4, !dbg !7830
  %idxprom147 = sext i32 %136 to i64, !dbg !7831
  %137 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7831
  %coeffs148 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %137, i32 0, i32 15, !dbg !7832
  %138 = load %struct.Coeffs*, %struct.Coeffs** %coeffs148, align 8, !dbg !7832
  %arrayidx149 = getelementptr inbounds %struct.Coeffs, %struct.Coeffs* %138, i64 %idxprom147, !dbg !7831
  %val150 = getelementptr inbounds %struct.Coeffs, %struct.Coeffs* %arrayidx149, i32 0, i32 0, !dbg !7833
  %139 = load float*, float** %val150, align 8, !dbg !7833
  %140 = load i32, i32* %m, align 4, !dbg !7834
  %idxprom151 = sext i32 %140 to i64, !dbg !7835
  %141 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7835
  %coeffs152 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %141, i32 0, i32 15, !dbg !7836
  %142 = load %struct.Coeffs*, %struct.Coeffs** %coeffs152, align 8, !dbg !7836
  %arrayidx153 = getelementptr inbounds %struct.Coeffs, %struct.Coeffs* %142, i64 %idxprom151, !dbg !7835
  %len154 = getelementptr inbounds %struct.Coeffs, %struct.Coeffs* %arrayidx153, i32 0, i32 2, !dbg !7837
  %143 = load i32, i32* %len154, align 4, !dbg !7837
  call void %135(float* %139, i32 %143), !dbg !7828
  br label %if.end155, !dbg !7828

if.end155:                                        ; preds = %if.then145, %for.end
  br label %for.inc156, !dbg !7838

for.inc156:                                       ; preds = %if.end155, %if.then26
  %144 = load i32, i32* %k, align 4, !dbg !7839
  %inc157 = add nsw i32 %144, 1, !dbg !7839
  store i32 %inc157, i32* %k, align 4, !dbg !7839
  br label %for.cond, !dbg !7841, !llvm.loop !7842

for.end158:                                       ; preds = %for.cond
  %145 = load %struct.AVExpr*, %struct.AVExpr** %expr, align 8, !dbg !7844
  call void @av_expr_free(%struct.AVExpr* %145), !dbg !7845
  %146 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7846
  %ctx159 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %146, i32 0, i32 1, !dbg !7847
  %147 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx159, align 8, !dbg !7847
  %148 = bitcast %struct.AVFilterContext* %147 to i8*, !dbg !7846
  %149 = load i32, i32* %nb_cqt_coeffs, align 4, !dbg !7848
  call void (i8*, i32, i8*, ...) @av_log(i8* %148, i32 32, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.34, i32 0, i32 0), i32 %149), !dbg !7849
  store i32 0, i32* %retval, align 4, !dbg !7850
  br label %return, !dbg !7850

error:                                            ; preds = %if.then101, %if.then3, %if.then
  %150 = load %struct.AVExpr*, %struct.AVExpr** %expr, align 8, !dbg !7851
  call void @av_expr_free(%struct.AVExpr* %150), !dbg !7852
  %151 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7853
  %coeffs160 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %151, i32 0, i32 15, !dbg !7855
  %152 = load %struct.Coeffs*, %struct.Coeffs** %coeffs160, align 8, !dbg !7855
  %tobool161 = icmp ne %struct.Coeffs* %152, null, !dbg !7853
  br i1 %tobool161, label %if.then162, label %if.end175, !dbg !7856

if.then162:                                       ; preds = %error
  store i32 0, i32* %k, align 4, !dbg !7857
  br label %for.cond163, !dbg !7859

for.cond163:                                      ; preds = %for.inc172, %if.then162
  %153 = load i32, i32* %k, align 4, !dbg !7860
  %154 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7863
  %cqt_len164 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %154, i32 0, i32 22, !dbg !7864
  %155 = load i32, i32* %cqt_len164, align 8, !dbg !7864
  %cmp165 = icmp slt i32 %153, %155, !dbg !7865
  br i1 %cmp165, label %for.body167, label %for.end174, !dbg !7866

for.body167:                                      ; preds = %for.cond163
  %156 = load i32, i32* %k, align 4, !dbg !7867
  %idxprom168 = sext i32 %156 to i64, !dbg !7868
  %157 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7868
  %coeffs169 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %157, i32 0, i32 15, !dbg !7869
  %158 = load %struct.Coeffs*, %struct.Coeffs** %coeffs169, align 8, !dbg !7869
  %arrayidx170 = getelementptr inbounds %struct.Coeffs, %struct.Coeffs* %158, i64 %idxprom168, !dbg !7868
  %val171 = getelementptr inbounds %struct.Coeffs, %struct.Coeffs* %arrayidx170, i32 0, i32 0, !dbg !7870
  %159 = bitcast float** %val171 to i8*, !dbg !7871
  call void @av_freep(i8* %159), !dbg !7872
  br label %for.inc172, !dbg !7872

for.inc172:                                       ; preds = %for.body167
  %160 = load i32, i32* %k, align 4, !dbg !7873
  %inc173 = add nsw i32 %160, 1, !dbg !7873
  store i32 %inc173, i32* %k, align 4, !dbg !7873
  br label %for.cond163, !dbg !7875, !llvm.loop !7876

for.end174:                                       ; preds = %for.cond163
  br label %if.end175, !dbg !7878

if.end175:                                        ; preds = %for.end174, %error
  %161 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7880
  %coeffs176 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %161, i32 0, i32 15, !dbg !7881
  %162 = bitcast %struct.Coeffs** %coeffs176 to i8*, !dbg !7882
  call void @av_freep(i8* %162), !dbg !7883
  %163 = load i32, i32* %ret, align 4, !dbg !7884
  store i32 %163, i32* %retval, align 4, !dbg !7885
  br label %return, !dbg !7885

return:                                           ; preds = %if.end175, %for.end158
  %164 = load i32, i32* %retval, align 4, !dbg !7886
  ret i32 %164, !dbg !7886
}

; Function Attrs: nounwind uwtable
define internal i32 @init_axis_empty(%struct.ShowCQTContext* %s) #1 !dbg !7887 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.ShowCQTContext*, align 8
  store %struct.ShowCQTContext* %s, %struct.ShowCQTContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShowCQTContext** %s.addr, metadata !7888, metadata !820), !dbg !7889
  %0 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7890
  %format = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %0, i32 0, i32 4, !dbg !7892
  %1 = load i32, i32* %format, align 8, !dbg !7892
  %call = call i32 @convert_axis_pixel_format(i32 %1), !dbg !7893
  %2 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7894
  %width = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %2, i32 0, i32 45, !dbg !7895
  %3 = load i32, i32* %width, align 8, !dbg !7895
  %4 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7896
  %axis_h = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %4, i32 0, i32 49, !dbg !7897
  %5 = load i32, i32* %axis_h, align 4, !dbg !7897
  %call1 = call %struct.AVFrame* @alloc_frame_empty(i32 %call, i32 %3, i32 %5), !dbg !7898
  %6 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7900
  %axis_frame = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %6, i32 0, i32 2, !dbg !7901
  store %struct.AVFrame* %call1, %struct.AVFrame** %axis_frame, align 8, !dbg !7902
  %tobool = icmp ne %struct.AVFrame* %call1, null, !dbg !7902
  br i1 %tobool, label %if.end, label %if.then, !dbg !7903

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !7904
  br label %return, !dbg !7904

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7905
  br label %return, !dbg !7905

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !7906
  ret i32 %7, !dbg !7906
}

; Function Attrs: nounwind uwtable
define internal i32 @init_axis_from_file(%struct.ShowCQTContext* %s) #1 !dbg !7907 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.ShowCQTContext*, align 8
  %tmp_data = alloca [4 x i8*], align 16
  %tmp_linesize = alloca [4 x i32], align 16
  %tmp_format = alloca i32, align 4
  %tmp_w = alloca i32, align 4
  %tmp_h = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.ShowCQTContext* %s, %struct.ShowCQTContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShowCQTContext** %s.addr, metadata !7908, metadata !820), !dbg !7909
  call void @llvm.dbg.declare(metadata [4 x i8*]* %tmp_data, metadata !7910, metadata !820), !dbg !7912
  %0 = bitcast [4 x i8*]* %tmp_data to i8*, !dbg !7912
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 32, i32 16, i1 false), !dbg !7912
  call void @llvm.dbg.declare(metadata [4 x i32]* %tmp_linesize, metadata !7913, metadata !820), !dbg !7915
  call void @llvm.dbg.declare(metadata i32* %tmp_format, metadata !7916, metadata !820), !dbg !7917
  call void @llvm.dbg.declare(metadata i32* %tmp_w, metadata !7918, metadata !820), !dbg !7919
  call void @llvm.dbg.declare(metadata i32* %tmp_h, metadata !7920, metadata !820), !dbg !7921
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7922, metadata !820), !dbg !7923
  %arraydecay = getelementptr inbounds [4 x i8*], [4 x i8*]* %tmp_data, i32 0, i32 0, !dbg !7924
  %arraydecay1 = getelementptr inbounds [4 x i32], [4 x i32]* %tmp_linesize, i32 0, i32 0, !dbg !7926
  %1 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7927
  %axisfile = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %1, i32 0, i32 68, !dbg !7928
  %2 = load i8*, i8** %axisfile, align 8, !dbg !7928
  %3 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7929
  %ctx = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %3, i32 0, i32 1, !dbg !7930
  %4 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !7930
  %5 = bitcast %struct.AVFilterContext* %4 to i8*, !dbg !7929
  %call = call i32 @ff_load_image(i8** %arraydecay, i32* %arraydecay1, i32* %tmp_w, i32* %tmp_h, i32* %tmp_format, i8* %2, i8* %5), !dbg !7931
  store i32 %call, i32* %ret, align 4, !dbg !7932
  %cmp = icmp slt i32 %call, 0, !dbg !7933
  br i1 %cmp, label %if.then, label %if.end, !dbg !7934

if.then:                                          ; preds = %entry
  br label %error, !dbg !7935

if.end:                                           ; preds = %entry
  store i32 -12, i32* %ret, align 4, !dbg !7936
  %call2 = call %struct.AVFrame* @av_frame_alloc(), !dbg !7937
  %6 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7939
  %axis_frame = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %6, i32 0, i32 2, !dbg !7940
  store %struct.AVFrame* %call2, %struct.AVFrame** %axis_frame, align 8, !dbg !7941
  %tobool = icmp ne %struct.AVFrame* %call2, null, !dbg !7941
  br i1 %tobool, label %if.end4, label %if.then3, !dbg !7942

if.then3:                                         ; preds = %if.end
  br label %error, !dbg !7943

if.end4:                                          ; preds = %if.end
  %7 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7944
  %axis_frame5 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %7, i32 0, i32 2, !dbg !7946
  %8 = load %struct.AVFrame*, %struct.AVFrame** %axis_frame5, align 8, !dbg !7946
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %8, i32 0, i32 0, !dbg !7947
  %arraydecay6 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i32 0, i32 0, !dbg !7944
  %9 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7948
  %axis_frame7 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %9, i32 0, i32 2, !dbg !7949
  %10 = load %struct.AVFrame*, %struct.AVFrame** %axis_frame7, align 8, !dbg !7949
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %10, i32 0, i32 1, !dbg !7950
  %arraydecay8 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i32 0, i32 0, !dbg !7948
  %11 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7951
  %width = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %11, i32 0, i32 45, !dbg !7952
  %12 = load i32, i32* %width, align 8, !dbg !7952
  %13 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7953
  %axis_h = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %13, i32 0, i32 49, !dbg !7954
  %14 = load i32, i32* %axis_h, align 4, !dbg !7954
  %15 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7955
  %format = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %15, i32 0, i32 4, !dbg !7956
  %16 = load i32, i32* %format, align 8, !dbg !7956
  %call9 = call i32 @convert_axis_pixel_format(i32 %16), !dbg !7957
  %arraydecay10 = getelementptr inbounds [4 x i8*], [4 x i8*]* %tmp_data, i32 0, i32 0, !dbg !7958
  %arraydecay11 = getelementptr inbounds [4 x i32], [4 x i32]* %tmp_linesize, i32 0, i32 0, !dbg !7959
  %17 = load i32, i32* %tmp_w, align 4, !dbg !7960
  %18 = load i32, i32* %tmp_h, align 4, !dbg !7961
  %19 = load i32, i32* %tmp_format, align 4, !dbg !7962
  %20 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7963
  %ctx12 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %20, i32 0, i32 1, !dbg !7964
  %21 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx12, align 8, !dbg !7964
  %22 = bitcast %struct.AVFilterContext* %21 to i8*, !dbg !7963
  %call13 = call i32 @ff_scale_image(i8** %arraydecay6, i32* %arraydecay8, i32 %12, i32 %14, i32 %call9, i8** %arraydecay10, i32* %arraydecay11, i32 %17, i32 %18, i32 %19, i8* %22), !dbg !7965
  store i32 %call13, i32* %ret, align 4, !dbg !7966
  %cmp14 = icmp slt i32 %call13, 0, !dbg !7967
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !7968

if.then15:                                        ; preds = %if.end4
  br label %error, !dbg !7969

if.end16:                                         ; preds = %if.end4
  %23 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7970
  %width17 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %23, i32 0, i32 45, !dbg !7971
  %24 = load i32, i32* %width17, align 8, !dbg !7971
  %25 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7972
  %axis_frame18 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %25, i32 0, i32 2, !dbg !7973
  %26 = load %struct.AVFrame*, %struct.AVFrame** %axis_frame18, align 8, !dbg !7973
  %width19 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %26, i32 0, i32 3, !dbg !7974
  store i32 %24, i32* %width19, align 8, !dbg !7975
  %27 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7976
  %axis_h20 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %27, i32 0, i32 49, !dbg !7977
  %28 = load i32, i32* %axis_h20, align 4, !dbg !7977
  %29 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7978
  %axis_frame21 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %29, i32 0, i32 2, !dbg !7979
  %30 = load %struct.AVFrame*, %struct.AVFrame** %axis_frame21, align 8, !dbg !7979
  %height = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %30, i32 0, i32 4, !dbg !7980
  store i32 %28, i32* %height, align 4, !dbg !7981
  %31 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7982
  %format22 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %31, i32 0, i32 4, !dbg !7983
  %32 = load i32, i32* %format22, align 8, !dbg !7983
  %call23 = call i32 @convert_axis_pixel_format(i32 %32), !dbg !7984
  %33 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7985
  %axis_frame24 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %33, i32 0, i32 2, !dbg !7986
  %34 = load %struct.AVFrame*, %struct.AVFrame** %axis_frame24, align 8, !dbg !7986
  %format25 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %34, i32 0, i32 6, !dbg !7987
  store i32 %call23, i32* %format25, align 4, !dbg !7988
  %arraydecay26 = getelementptr inbounds [4 x i8*], [4 x i8*]* %tmp_data, i32 0, i32 0, !dbg !7989
  %35 = bitcast i8** %arraydecay26 to i8*, !dbg !7989
  call void @av_freep(i8* %35), !dbg !7990
  store i32 0, i32* %retval, align 4, !dbg !7991
  br label %return, !dbg !7991

error:                                            ; preds = %if.then15, %if.then3, %if.then
  %36 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !7992
  %axis_frame27 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %36, i32 0, i32 2, !dbg !7993
  call void @av_frame_free(%struct.AVFrame** %axis_frame27), !dbg !7994
  %arraydecay28 = getelementptr inbounds [4 x i8*], [4 x i8*]* %tmp_data, i32 0, i32 0, !dbg !7995
  %37 = bitcast i8** %arraydecay28 to i8*, !dbg !7995
  call void @av_freep(i8* %37), !dbg !7996
  %38 = load i32, i32* %ret, align 4, !dbg !7997
  store i32 %38, i32* %retval, align 4, !dbg !7998
  br label %return, !dbg !7998

return:                                           ; preds = %error, %if.end16
  %39 = load i32, i32* %retval, align 4, !dbg !7999
  ret i32 %39, !dbg !7999
}

; Function Attrs: nounwind uwtable
define internal i32 @init_axis_from_font(%struct.ShowCQTContext* %s) #1 !dbg !8000 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.ShowCQTContext*, align 8
  %tmp = alloca %struct.AVFrame*, align 8
  %ret = alloca i32, align 4
  %width = alloca i32, align 4
  %height = alloca i32, align 4
  %default_font = alloca i32, align 4
  store %struct.ShowCQTContext* %s, %struct.ShowCQTContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShowCQTContext** %s.addr, metadata !8001, metadata !820), !dbg !8002
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %tmp, metadata !8003, metadata !820), !dbg !8004
  store %struct.AVFrame* null, %struct.AVFrame** %tmp, align 8, !dbg !8004
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8005, metadata !820), !dbg !8006
  store i32 -12, i32* %ret, align 4, !dbg !8006
  call void @llvm.dbg.declare(metadata i32* %width, metadata !8007, metadata !820), !dbg !8008
  store i32 1920, i32* %width, align 4, !dbg !8008
  call void @llvm.dbg.declare(metadata i32* %height, metadata !8009, metadata !820), !dbg !8010
  store i32 32, i32* %height, align 4, !dbg !8010
  call void @llvm.dbg.declare(metadata i32* %default_font, metadata !8011, metadata !820), !dbg !8012
  store i32 0, i32* %default_font, align 4, !dbg !8012
  %0 = load i32, i32* %width, align 4, !dbg !8013
  %1 = load i32, i32* %height, align 4, !dbg !8015
  %call = call %struct.AVFrame* @alloc_frame_empty(i32 26, i32 %0, i32 %1), !dbg !8016
  store %struct.AVFrame* %call, %struct.AVFrame** %tmp, align 8, !dbg !8017
  %tobool = icmp ne %struct.AVFrame* %call, null, !dbg !8017
  br i1 %tobool, label %if.end, label %if.then, !dbg !8018

if.then:                                          ; preds = %entry
  br label %fail, !dbg !8019

if.end:                                           ; preds = %entry
  %call5 = call %struct.AVFrame* @av_frame_alloc(), !dbg !8020
  %2 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8022
  %axis_frame = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %2, i32 0, i32 2, !dbg !8023
  store %struct.AVFrame* %call5, %struct.AVFrame** %axis_frame, align 8, !dbg !8024
  %tobool6 = icmp ne %struct.AVFrame* %call5, null, !dbg !8024
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !8025

if.then7:                                         ; preds = %if.end
  br label %fail, !dbg !8026

if.end8:                                          ; preds = %if.end
  %3 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8027
  %4 = load %struct.AVFrame*, %struct.AVFrame** %tmp, align 8, !dbg !8029
  %5 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8030
  %fontfile = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %5, i32 0, i32 65, !dbg !8031
  %6 = load i8*, i8** %fontfile, align 8, !dbg !8031
  %call9 = call i32 @render_freetype(%struct.ShowCQTContext* %3, %struct.AVFrame* %4, i8* %6), !dbg !8032
  %cmp = icmp slt i32 %call9, 0, !dbg !8033
  br i1 %cmp, label %land.lhs.true, label %if.end16, !dbg !8034

land.lhs.true:                                    ; preds = %if.end8
  %7 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8035
  %8 = load %struct.AVFrame*, %struct.AVFrame** %tmp, align 8, !dbg !8036
  %9 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8037
  %font = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %9, i32 0, i32 66, !dbg !8038
  %10 = load i8*, i8** %font, align 8, !dbg !8038
  %call10 = call i32 @render_fontconfig(%struct.ShowCQTContext* %7, %struct.AVFrame* %8, i8* %10), !dbg !8039
  %cmp11 = icmp slt i32 %call10, 0, !dbg !8040
  br i1 %cmp11, label %land.lhs.true12, label %if.end16, !dbg !8041

land.lhs.true12:                                  ; preds = %land.lhs.true
  store i32 1, i32* %default_font, align 4, !dbg !8042
  %11 = load %struct.AVFrame*, %struct.AVFrame** %tmp, align 8, !dbg !8043
  %call13 = call i32 @render_default_font(%struct.AVFrame* %11), !dbg !8044
  store i32 %call13, i32* %ret, align 4, !dbg !8045
  %cmp14 = icmp slt i32 %call13, 0, !dbg !8046
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !8047

if.then15:                                        ; preds = %land.lhs.true12
  br label %fail, !dbg !8049

if.end16:                                         ; preds = %land.lhs.true12, %land.lhs.true, %if.end8
  %12 = load i32, i32* %default_font, align 4, !dbg !8050
  %tobool17 = icmp ne i32 %12, 0, !dbg !8050
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !8052

if.then18:                                        ; preds = %if.end16
  %13 = load i32, i32* %width, align 4, !dbg !8053
  %div = sdiv i32 %13, 2, !dbg !8053
  store i32 %div, i32* %width, align 4, !dbg !8053
  %14 = load i32, i32* %height, align 4, !dbg !8054
  %div19 = sdiv i32 %14, 2, !dbg !8054
  store i32 %div19, i32* %height, align 4, !dbg !8054
  br label %if.end20, !dbg !8055

if.end20:                                         ; preds = %if.then18, %if.end16
  %15 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8056
  %16 = load %struct.AVFrame*, %struct.AVFrame** %tmp, align 8, !dbg !8058
  %17 = load i32, i32* %default_font, align 4, !dbg !8059
  %call21 = call i32 @init_axis_color(%struct.ShowCQTContext* %15, %struct.AVFrame* %16, i32 %17), !dbg !8060
  store i32 %call21, i32* %ret, align 4, !dbg !8061
  %cmp22 = icmp slt i32 %call21, 0, !dbg !8062
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !8063

if.then23:                                        ; preds = %if.end20
  br label %fail, !dbg !8064

if.end24:                                         ; preds = %if.end20
  %18 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8065
  %axis_frame25 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %18, i32 0, i32 2, !dbg !8067
  %19 = load %struct.AVFrame*, %struct.AVFrame** %axis_frame25, align 8, !dbg !8067
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %19, i32 0, i32 0, !dbg !8068
  %arraydecay = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i32 0, i32 0, !dbg !8065
  %20 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8069
  %axis_frame26 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %20, i32 0, i32 2, !dbg !8070
  %21 = load %struct.AVFrame*, %struct.AVFrame** %axis_frame26, align 8, !dbg !8070
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %21, i32 0, i32 1, !dbg !8071
  %arraydecay27 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i32 0, i32 0, !dbg !8069
  %22 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8072
  %width28 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %22, i32 0, i32 45, !dbg !8073
  %23 = load i32, i32* %width28, align 8, !dbg !8073
  %24 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8074
  %axis_h = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %24, i32 0, i32 49, !dbg !8075
  %25 = load i32, i32* %axis_h, align 4, !dbg !8075
  %26 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8076
  %format = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %26, i32 0, i32 4, !dbg !8077
  %27 = load i32, i32* %format, align 8, !dbg !8077
  %call29 = call i32 @convert_axis_pixel_format(i32 %27), !dbg !8078
  %28 = load %struct.AVFrame*, %struct.AVFrame** %tmp, align 8, !dbg !8079
  %data30 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %28, i32 0, i32 0, !dbg !8080
  %arraydecay31 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data30, i32 0, i32 0, !dbg !8079
  %29 = load %struct.AVFrame*, %struct.AVFrame** %tmp, align 8, !dbg !8081
  %linesize32 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %29, i32 0, i32 1, !dbg !8082
  %arraydecay33 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize32, i32 0, i32 0, !dbg !8081
  %30 = load i32, i32* %width, align 4, !dbg !8083
  %31 = load i32, i32* %height, align 4, !dbg !8084
  %32 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8085
  %ctx = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %32, i32 0, i32 1, !dbg !8086
  %33 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !8086
  %34 = bitcast %struct.AVFilterContext* %33 to i8*, !dbg !8085
  %call34 = call i32 @ff_scale_image(i8** %arraydecay, i32* %arraydecay27, i32 %23, i32 %25, i32 %call29, i8** %arraydecay31, i32* %arraydecay33, i32 %30, i32 %31, i32 26, i8* %34), !dbg !8087
  store i32 %call34, i32* %ret, align 4, !dbg !8088
  %cmp35 = icmp slt i32 %call34, 0, !dbg !8089
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !8090

if.then36:                                        ; preds = %if.end24
  br label %fail, !dbg !8091

if.end37:                                         ; preds = %if.end24
  call void @av_frame_free(%struct.AVFrame** %tmp), !dbg !8092
  %35 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8093
  %width38 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %35, i32 0, i32 45, !dbg !8094
  %36 = load i32, i32* %width38, align 8, !dbg !8094
  %37 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8095
  %axis_frame39 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %37, i32 0, i32 2, !dbg !8096
  %38 = load %struct.AVFrame*, %struct.AVFrame** %axis_frame39, align 8, !dbg !8096
  %width40 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %38, i32 0, i32 3, !dbg !8097
  store i32 %36, i32* %width40, align 8, !dbg !8098
  %39 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8099
  %axis_h41 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %39, i32 0, i32 49, !dbg !8100
  %40 = load i32, i32* %axis_h41, align 4, !dbg !8100
  %41 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8101
  %axis_frame42 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %41, i32 0, i32 2, !dbg !8102
  %42 = load %struct.AVFrame*, %struct.AVFrame** %axis_frame42, align 8, !dbg !8102
  %height43 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %42, i32 0, i32 4, !dbg !8103
  store i32 %40, i32* %height43, align 4, !dbg !8104
  %43 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8105
  %format44 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %43, i32 0, i32 4, !dbg !8106
  %44 = load i32, i32* %format44, align 8, !dbg !8106
  %call45 = call i32 @convert_axis_pixel_format(i32 %44), !dbg !8107
  %45 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8108
  %axis_frame46 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %45, i32 0, i32 2, !dbg !8109
  %46 = load %struct.AVFrame*, %struct.AVFrame** %axis_frame46, align 8, !dbg !8109
  %format47 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %46, i32 0, i32 6, !dbg !8110
  store i32 %call45, i32* %format47, align 4, !dbg !8111
  store i32 0, i32* %retval, align 4, !dbg !8112
  br label %return, !dbg !8112

fail:                                             ; preds = %if.then36, %if.then23, %if.then15, %if.then7, %if.then
  call void @av_frame_free(%struct.AVFrame** %tmp), !dbg !8113
  %47 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8114
  %axis_frame48 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %47, i32 0, i32 2, !dbg !8115
  call void @av_frame_free(%struct.AVFrame** %axis_frame48), !dbg !8116
  %48 = load i32, i32* %ret, align 4, !dbg !8117
  store i32 %48, i32* %retval, align 4, !dbg !8118
  br label %return, !dbg !8118

return:                                           ; preds = %fail, %if.end37
  %49 = load i32, i32* %retval, align 4, !dbg !8119
  ret i32 %49, !dbg !8119
}

; Function Attrs: nounwind uwtable
define internal %struct.AVFrame* @alloc_frame_empty(i32 %format, i32 %w, i32 %h) #1 !dbg !8120 {
entry:
  %retval = alloca %struct.AVFrame*, align 8
  %format.addr = alloca i32, align 4
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %out = alloca %struct.AVFrame*, align 8
  %hh = alloca i32, align 4
  store i32 %format, i32* %format.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %format.addr, metadata !8123, metadata !820), !dbg !8124
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !8125, metadata !820), !dbg !8126
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !8127, metadata !820), !dbg !8128
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %out, metadata !8129, metadata !820), !dbg !8130
  %call = call %struct.AVFrame* @av_frame_alloc(), !dbg !8131
  store %struct.AVFrame* %call, %struct.AVFrame** %out, align 8, !dbg !8132
  %0 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !8133
  %tobool = icmp ne %struct.AVFrame* %0, null, !dbg !8133
  br i1 %tobool, label %if.end, label %if.then, !dbg !8135

if.then:                                          ; preds = %entry
  store %struct.AVFrame* null, %struct.AVFrame** %retval, align 8, !dbg !8136
  br label %return, !dbg !8136

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %format.addr, align 4, !dbg !8137
  %2 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !8138
  %format1 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %2, i32 0, i32 6, !dbg !8139
  store i32 %1, i32* %format1, align 4, !dbg !8140
  %3 = load i32, i32* %w.addr, align 4, !dbg !8141
  %4 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !8142
  %width = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %4, i32 0, i32 3, !dbg !8143
  store i32 %3, i32* %width, align 8, !dbg !8144
  %5 = load i32, i32* %h.addr, align 4, !dbg !8145
  %6 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !8146
  %height = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %6, i32 0, i32 4, !dbg !8147
  store i32 %5, i32* %height, align 4, !dbg !8148
  %7 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !8149
  %call2 = call i32 @av_frame_get_buffer(%struct.AVFrame* %7, i32 32), !dbg !8151
  %cmp = icmp slt i32 %call2, 0, !dbg !8152
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !8153

if.then3:                                         ; preds = %if.end
  call void @av_frame_free(%struct.AVFrame** %out), !dbg !8154
  store %struct.AVFrame* null, %struct.AVFrame** %retval, align 8, !dbg !8156
  br label %return, !dbg !8156

if.end4:                                          ; preds = %if.end
  %8 = load i32, i32* %format.addr, align 4, !dbg !8157
  %cmp5 = icmp eq i32 %8, 2, !dbg !8159
  br i1 %cmp5, label %if.then7, label %lor.lhs.false, !dbg !8160

lor.lhs.false:                                    ; preds = %if.end4
  %9 = load i32, i32* %format.addr, align 4, !dbg !8161
  %cmp6 = icmp eq i32 %9, 26, !dbg !8163
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !8164

if.then7:                                         ; preds = %lor.lhs.false, %if.end4
  %10 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !8165
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %10, i32 0, i32 0, !dbg !8167
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 0, !dbg !8165
  %11 = load i8*, i8** %arrayidx, align 8, !dbg !8165
  %12 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !8168
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %12, i32 0, i32 1, !dbg !8169
  %arrayidx8 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 0, !dbg !8168
  %13 = load i32, i32* %arrayidx8, align 8, !dbg !8168
  %14 = load i32, i32* %h.addr, align 4, !dbg !8170
  %mul = mul nsw i32 %13, %14, !dbg !8171
  %conv = sext i32 %mul to i64, !dbg !8168
  call void @llvm.memset.p0i8.i64(i8* %11, i8 0, i64 %conv, i32 1, i1 false), !dbg !8172
  br label %if.end43, !dbg !8173

if.else:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i32* %hh, metadata !8174, metadata !820), !dbg !8176
  %15 = load i32, i32* %format.addr, align 4, !dbg !8177
  %cmp9 = icmp eq i32 %15, 0, !dbg !8178
  br i1 %cmp9, label %cond.true, label %lor.lhs.false11, !dbg !8179

lor.lhs.false11:                                  ; preds = %if.else
  %16 = load i32, i32* %format.addr, align 4, !dbg !8180
  %cmp12 = icmp eq i32 %16, 33, !dbg !8182
  br i1 %cmp12, label %cond.true, label %cond.false, !dbg !8183

cond.true:                                        ; preds = %lor.lhs.false11, %if.else
  %17 = load i32, i32* %h.addr, align 4, !dbg !8184
  %div = sdiv i32 %17, 2, !dbg !8186
  br label %cond.end, !dbg !8187

cond.false:                                       ; preds = %lor.lhs.false11
  %18 = load i32, i32* %h.addr, align 4, !dbg !8188
  br label %cond.end, !dbg !8190

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %div, %cond.true ], [ %18, %cond.false ], !dbg !8191
  store i32 %cond, i32* %hh, align 4, !dbg !8193
  %19 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !8194
  %data14 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %19, i32 0, i32 0, !dbg !8195
  %arrayidx15 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data14, i64 0, i64 0, !dbg !8194
  %20 = load i8*, i8** %arrayidx15, align 8, !dbg !8194
  %21 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !8196
  %linesize16 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %21, i32 0, i32 1, !dbg !8197
  %arrayidx17 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize16, i64 0, i64 0, !dbg !8196
  %22 = load i32, i32* %arrayidx17, align 8, !dbg !8196
  %23 = load i32, i32* %h.addr, align 4, !dbg !8198
  %mul18 = mul nsw i32 %22, %23, !dbg !8199
  %conv19 = sext i32 %mul18 to i64, !dbg !8196
  call void @llvm.memset.p0i8.i64(i8* %20, i8 16, i64 %conv19, i32 1, i1 false), !dbg !8200
  %24 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !8201
  %data20 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %24, i32 0, i32 0, !dbg !8202
  %arrayidx21 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data20, i64 0, i64 1, !dbg !8201
  %25 = load i8*, i8** %arrayidx21, align 8, !dbg !8201
  %26 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !8203
  %linesize22 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %26, i32 0, i32 1, !dbg !8204
  %arrayidx23 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize22, i64 0, i64 1, !dbg !8203
  %27 = load i32, i32* %arrayidx23, align 4, !dbg !8203
  %28 = load i32, i32* %hh, align 4, !dbg !8205
  %mul24 = mul nsw i32 %27, %28, !dbg !8206
  %conv25 = sext i32 %mul24 to i64, !dbg !8203
  call void @llvm.memset.p0i8.i64(i8* %25, i8 -128, i64 %conv25, i32 1, i1 false), !dbg !8207
  %29 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !8208
  %data26 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %29, i32 0, i32 0, !dbg !8209
  %arrayidx27 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data26, i64 0, i64 2, !dbg !8208
  %30 = load i8*, i8** %arrayidx27, align 8, !dbg !8208
  %31 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !8210
  %linesize28 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %31, i32 0, i32 1, !dbg !8211
  %arrayidx29 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize28, i64 0, i64 2, !dbg !8210
  %32 = load i32, i32* %arrayidx29, align 8, !dbg !8210
  %33 = load i32, i32* %hh, align 4, !dbg !8212
  %mul30 = mul nsw i32 %32, %33, !dbg !8213
  %conv31 = sext i32 %mul30 to i64, !dbg !8210
  call void @llvm.memset.p0i8.i64(i8* %30, i8 -128, i64 %conv31, i32 1, i1 false), !dbg !8214
  %34 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !8215
  %data32 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %34, i32 0, i32 0, !dbg !8217
  %arrayidx33 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data32, i64 0, i64 3, !dbg !8215
  %35 = load i8*, i8** %arrayidx33, align 8, !dbg !8215
  %tobool34 = icmp ne i8* %35, null, !dbg !8215
  br i1 %tobool34, label %if.then35, label %if.end42, !dbg !8218

if.then35:                                        ; preds = %cond.end
  %36 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !8219
  %data36 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %36, i32 0, i32 0, !dbg !8220
  %arrayidx37 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data36, i64 0, i64 3, !dbg !8219
  %37 = load i8*, i8** %arrayidx37, align 8, !dbg !8219
  %38 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !8221
  %linesize38 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %38, i32 0, i32 1, !dbg !8222
  %arrayidx39 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize38, i64 0, i64 3, !dbg !8221
  %39 = load i32, i32* %arrayidx39, align 4, !dbg !8221
  %40 = load i32, i32* %h.addr, align 4, !dbg !8223
  %mul40 = mul nsw i32 %39, %40, !dbg !8224
  %conv41 = sext i32 %mul40 to i64, !dbg !8221
  call void @llvm.memset.p0i8.i64(i8* %37, i8 0, i64 %conv41, i32 1, i1 false), !dbg !8225
  br label %if.end42, !dbg !8225

if.end42:                                         ; preds = %if.then35, %cond.end
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then7
  %41 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !8226
  store %struct.AVFrame* %41, %struct.AVFrame** %retval, align 8, !dbg !8227
  br label %return, !dbg !8227

return:                                           ; preds = %if.end43, %if.then3, %if.then
  %42 = load %struct.AVFrame*, %struct.AVFrame** %retval, align 8, !dbg !8228
  ret %struct.AVFrame* %42, !dbg !8228
}

; Function Attrs: nounwind readnone
declare i64 @av_div_q(i64, i64) #5

declare void @av_freep(i8*) #4

declare void @av_fft_end(%struct.FFTContext*) #4

; Function Attrs: nounwind
declare double @log(double) #7

; Function Attrs: nounwind
declare double @exp(double) #7

; Function Attrs: nounwind uwtable
define internal double @a_weighting(i8* %p, double %f) #1 !dbg !8229 {
entry:
  %p.addr = alloca i8*, align 8
  %f.addr = alloca double, align 8
  %ret = alloca double, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !8230, metadata !820), !dbg !8231
  store double %f, double* %f.addr, align 8
  call void @llvm.dbg.declare(metadata double* %f.addr, metadata !8232, metadata !820), !dbg !8233
  call void @llvm.dbg.declare(metadata double* %ret, metadata !8234, metadata !820), !dbg !8235
  %0 = load double, double* %f.addr, align 8, !dbg !8236
  %1 = load double, double* %f.addr, align 8, !dbg !8237
  %mul = fmul double %0, %1, !dbg !8238
  %2 = load double, double* %f.addr, align 8, !dbg !8239
  %mul1 = fmul double %mul, %2, !dbg !8240
  %3 = load double, double* %f.addr, align 8, !dbg !8241
  %mul2 = fmul double %mul1, %3, !dbg !8242
  %mul3 = fmul double 1.488400e+08, %mul2, !dbg !8243
  store double %mul3, double* %ret, align 8, !dbg !8235
  %4 = load double, double* %f.addr, align 8, !dbg !8244
  %5 = load double, double* %f.addr, align 8, !dbg !8245
  %mul4 = fmul double %4, %5, !dbg !8246
  %add = fadd double %mul4, 0x407A85C28F5C28F7, !dbg !8247
  %6 = load double, double* %f.addr, align 8, !dbg !8248
  %7 = load double, double* %f.addr, align 8, !dbg !8249
  %mul5 = fmul double %6, %7, !dbg !8250
  %add6 = fadd double %mul5, 1.488400e+08, !dbg !8251
  %mul7 = fmul double %add, %add6, !dbg !8252
  %8 = load double, double* %f.addr, align 8, !dbg !8253
  %9 = load double, double* %f.addr, align 8, !dbg !8254
  %mul8 = fmul double %8, %9, !dbg !8255
  %add9 = fadd double %mul8, 1.159929e+04, !dbg !8256
  %10 = load double, double* %f.addr, align 8, !dbg !8257
  %11 = load double, double* %f.addr, align 8, !dbg !8258
  %mul10 = fmul double %10, %11, !dbg !8259
  %add11 = fadd double %mul10, 0x41209DE0D1EB851E, !dbg !8260
  %mul12 = fmul double %add9, %add11, !dbg !8261
  %call = call double @sqrt(double %mul12) #8, !dbg !8262
  %mul13 = fmul double %mul7, %call, !dbg !8263
  %12 = load double, double* %ret, align 8, !dbg !8264
  %div = fdiv double %12, %mul13, !dbg !8264
  store double %div, double* %ret, align 8, !dbg !8264
  %13 = load double, double* %ret, align 8, !dbg !8265
  ret double %13, !dbg !8266
}

; Function Attrs: nounwind uwtable
define internal double @b_weighting(i8* %p, double %f) #1 !dbg !8267 {
entry:
  %p.addr = alloca i8*, align 8
  %f.addr = alloca double, align 8
  %ret = alloca double, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !8268, metadata !820), !dbg !8269
  store double %f, double* %f.addr, align 8
  call void @llvm.dbg.declare(metadata double* %f.addr, metadata !8270, metadata !820), !dbg !8271
  call void @llvm.dbg.declare(metadata double* %ret, metadata !8272, metadata !820), !dbg !8273
  %0 = load double, double* %f.addr, align 8, !dbg !8274
  %1 = load double, double* %f.addr, align 8, !dbg !8275
  %mul = fmul double %0, %1, !dbg !8276
  %2 = load double, double* %f.addr, align 8, !dbg !8277
  %mul1 = fmul double %mul, %2, !dbg !8278
  %mul2 = fmul double 1.488400e+08, %mul1, !dbg !8279
  store double %mul2, double* %ret, align 8, !dbg !8273
  %3 = load double, double* %f.addr, align 8, !dbg !8280
  %4 = load double, double* %f.addr, align 8, !dbg !8281
  %mul3 = fmul double %3, %4, !dbg !8282
  %add = fadd double %mul3, 0x407A85C28F5C28F7, !dbg !8283
  %5 = load double, double* %f.addr, align 8, !dbg !8284
  %6 = load double, double* %f.addr, align 8, !dbg !8285
  %mul4 = fmul double %5, %6, !dbg !8286
  %add5 = fadd double %mul4, 1.488400e+08, !dbg !8287
  %mul6 = fmul double %add, %add5, !dbg !8288
  %7 = load double, double* %f.addr, align 8, !dbg !8289
  %8 = load double, double* %f.addr, align 8, !dbg !8290
  %mul7 = fmul double %7, %8, !dbg !8291
  %add8 = fadd double %mul7, 2.512225e+04, !dbg !8292
  %call = call double @sqrt(double %add8) #8, !dbg !8293
  %mul9 = fmul double %mul6, %call, !dbg !8294
  %9 = load double, double* %ret, align 8, !dbg !8295
  %div = fdiv double %9, %mul9, !dbg !8295
  store double %div, double* %ret, align 8, !dbg !8295
  %10 = load double, double* %ret, align 8, !dbg !8296
  ret double %10, !dbg !8297
}

; Function Attrs: nounwind uwtable
define internal double @c_weighting(i8* %p, double %f) #1 !dbg !8298 {
entry:
  %p.addr = alloca i8*, align 8
  %f.addr = alloca double, align 8
  %ret = alloca double, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !8299, metadata !820), !dbg !8300
  store double %f, double* %f.addr, align 8
  call void @llvm.dbg.declare(metadata double* %f.addr, metadata !8301, metadata !820), !dbg !8302
  call void @llvm.dbg.declare(metadata double* %ret, metadata !8303, metadata !820), !dbg !8304
  %0 = load double, double* %f.addr, align 8, !dbg !8305
  %1 = load double, double* %f.addr, align 8, !dbg !8306
  %mul = fmul double %0, %1, !dbg !8307
  %mul1 = fmul double 1.488400e+08, %mul, !dbg !8308
  store double %mul1, double* %ret, align 8, !dbg !8304
  %2 = load double, double* %f.addr, align 8, !dbg !8309
  %3 = load double, double* %f.addr, align 8, !dbg !8310
  %mul2 = fmul double %2, %3, !dbg !8311
  %add = fadd double %mul2, 0x407A85C28F5C28F7, !dbg !8312
  %4 = load double, double* %f.addr, align 8, !dbg !8313
  %5 = load double, double* %f.addr, align 8, !dbg !8314
  %mul3 = fmul double %4, %5, !dbg !8315
  %add4 = fadd double %mul3, 1.488400e+08, !dbg !8316
  %mul5 = fmul double %add, %add4, !dbg !8317
  %6 = load double, double* %ret, align 8, !dbg !8318
  %div = fdiv double %6, %mul5, !dbg !8318
  store double %div, double* %ret, align 8, !dbg !8318
  %7 = load double, double* %ret, align 8, !dbg !8319
  ret double %7, !dbg !8320
}

declare i32 @av_expr_parse(%struct.AVExpr**, i8*, i8**, i8**, double (i8*, double)**, i8**, double (i8*, double, double)**, i32, i8*) #4

; Function Attrs: nounwind uwtable
define internal double @clip_with_log(i8* %log_ctx, i8* %name, double %val, double %min, double %max, double %nan_replace, i32 %idx) #1 !dbg !8321 {
entry:
  %log_ctx.addr = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %val.addr = alloca double, align 8
  %min.addr = alloca double, align 8
  %max.addr = alloca double, align 8
  %nan_replace.addr = alloca double, align 8
  %idx.addr = alloca i32, align 4
  %level = alloca i32, align 4
  store i8* %log_ctx, i8** %log_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %log_ctx.addr, metadata !8324, metadata !820), !dbg !8325
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8326, metadata !820), !dbg !8327
  store double %val, double* %val.addr, align 8
  call void @llvm.dbg.declare(metadata double* %val.addr, metadata !8328, metadata !820), !dbg !8329
  store double %min, double* %min.addr, align 8
  call void @llvm.dbg.declare(metadata double* %min.addr, metadata !8330, metadata !820), !dbg !8331
  store double %max, double* %max.addr, align 8
  call void @llvm.dbg.declare(metadata double* %max.addr, metadata !8332, metadata !820), !dbg !8333
  store double %nan_replace, double* %nan_replace.addr, align 8
  call void @llvm.dbg.declare(metadata double* %nan_replace.addr, metadata !8334, metadata !820), !dbg !8335
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !8336, metadata !820), !dbg !8337
  call void @llvm.dbg.declare(metadata i32* %level, metadata !8338, metadata !820), !dbg !8339
  store i32 24, i32* %level, align 4, !dbg !8339
  %0 = load double, double* %val.addr, align 8, !dbg !8340
  %cmp = fcmp uno double %0, %0, !dbg !8340
  br i1 %cmp, label %if.then, label %if.else, !dbg !8342

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %log_ctx.addr, align 8, !dbg !8343
  %2 = load i32, i32* %level, align 4, !dbg !8345
  %3 = load i32, i32* %idx.addr, align 4, !dbg !8346
  %4 = load i8*, i8** %name.addr, align 8, !dbg !8347
  %5 = load double, double* %nan_replace.addr, align 8, !dbg !8348
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 %2, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.30, i32 0, i32 0), i32 %3, i8* %4, double %5), !dbg !8349
  %6 = load double, double* %nan_replace.addr, align 8, !dbg !8350
  store double %6, double* %val.addr, align 8, !dbg !8351
  br label %if.end7, !dbg !8352

if.else:                                          ; preds = %entry
  %7 = load double, double* %val.addr, align 8, !dbg !8353
  %8 = load double, double* %min.addr, align 8, !dbg !8356
  %cmp1 = fcmp olt double %7, %8, !dbg !8357
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !8353

if.then2:                                         ; preds = %if.else
  %9 = load i8*, i8** %log_ctx.addr, align 8, !dbg !8358
  %10 = load i32, i32* %level, align 4, !dbg !8360
  %11 = load i32, i32* %idx.addr, align 4, !dbg !8361
  %12 = load i8*, i8** %name.addr, align 8, !dbg !8362
  %13 = load double, double* %val.addr, align 8, !dbg !8363
  %14 = load double, double* %min.addr, align 8, !dbg !8364
  call void (i8*, i32, i8*, ...) @av_log(i8* %9, i32 %10, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.31, i32 0, i32 0), i32 %11, i8* %12, double %13, double %14), !dbg !8365
  %15 = load double, double* %min.addr, align 8, !dbg !8366
  store double %15, double* %val.addr, align 8, !dbg !8367
  br label %if.end6, !dbg !8368

if.else3:                                         ; preds = %if.else
  %16 = load double, double* %val.addr, align 8, !dbg !8369
  %17 = load double, double* %max.addr, align 8, !dbg !8372
  %cmp4 = fcmp ogt double %16, %17, !dbg !8373
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !8369

if.then5:                                         ; preds = %if.else3
  %18 = load i8*, i8** %log_ctx.addr, align 8, !dbg !8374
  %19 = load i32, i32* %level, align 4, !dbg !8376
  %20 = load i32, i32* %idx.addr, align 4, !dbg !8377
  %21 = load i8*, i8** %name.addr, align 8, !dbg !8378
  %22 = load double, double* %val.addr, align 8, !dbg !8379
  %23 = load double, double* %max.addr, align 8, !dbg !8380
  call void (i8*, i32, i8*, ...) @av_log(i8* %18, i32 %19, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.32, i32 0, i32 0), i32 %20, i8* %21, double %22, double %23), !dbg !8381
  %24 = load double, double* %max.addr, align 8, !dbg !8382
  store double %24, double* %val.addr, align 8, !dbg !8383
  br label %if.end, !dbg !8384

if.end:                                           ; preds = %if.then5, %if.else3
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then2
  br label %if.end7

if.end7:                                          ; preds = %if.end6, %if.then
  %25 = load double, double* %val.addr, align 8, !dbg !8385
  ret double %25, !dbg !8386
}

declare double @av_expr_eval(%struct.AVExpr*, double*, i8*) #4

declare void @av_expr_free(%struct.AVExpr*) #4

; Function Attrs: nounwind
declare double @sqrt(double) #7

; Function Attrs: nounwind
declare i64 @lrintf(float) #7

; Function Attrs: nounwind readnone
declare double @floor(double) #5

; Function Attrs: nounwind uwtable
define internal i32 @convert_axis_pixel_format(i32 %format) #1 !dbg !8387 {
entry:
  %format.addr = alloca i32, align 4
  store i32 %format, i32* %format.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %format.addr, metadata !8390, metadata !820), !dbg !8391
  %0 = load i32, i32* %format.addr, align 4, !dbg !8392
  switch i32 %0, label %sw.epilog [
    i32 2, label %sw.bb
    i32 5, label %sw.bb1
    i32 4, label %sw.bb1
    i32 0, label %sw.bb1
  ], !dbg !8393

sw.bb:                                            ; preds = %entry
  store i32 26, i32* %format.addr, align 4, !dbg !8394
  br label %sw.epilog, !dbg !8396

sw.bb1:                                           ; preds = %entry, %entry, %entry
  store i32 81, i32* %format.addr, align 4, !dbg !8397
  br label %sw.epilog, !dbg !8398

sw.epilog:                                        ; preds = %entry, %sw.bb1, %sw.bb
  %1 = load i32, i32* %format.addr, align 4, !dbg !8399
  ret i32 %1, !dbg !8400
}

declare i32 @ff_load_image(i8**, i32*, i32*, i32*, i32*, i8*, i8*) #4

declare %struct.AVFrame* @av_frame_alloc() #4

declare i32 @ff_scale_image(i8**, i32*, i32, i32, i32, i8**, i32*, i32, i32, i32, i8*) #4

; Function Attrs: nounwind uwtable
define internal i32 @render_freetype(%struct.ShowCQTContext* %s, %struct.AVFrame* %tmp, i8* %fontfile) #1 !dbg !8401 {
entry:
  %s.addr = alloca %struct.ShowCQTContext*, align 8
  %tmp.addr = alloca %struct.AVFrame*, align 8
  %fontfile.addr = alloca i8*, align 8
  store %struct.ShowCQTContext* %s, %struct.ShowCQTContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShowCQTContext** %s.addr, metadata !8404, metadata !820), !dbg !8405
  store %struct.AVFrame* %tmp, %struct.AVFrame** %tmp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %tmp.addr, metadata !8406, metadata !820), !dbg !8407
  store i8* %fontfile, i8** %fontfile.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fontfile.addr, metadata !8408, metadata !820), !dbg !8409
  %0 = load i8*, i8** %fontfile.addr, align 8, !dbg !8410
  %tobool = icmp ne i8* %0, null, !dbg !8410
  br i1 %tobool, label %if.then, label %if.end, !dbg !8412

if.then:                                          ; preds = %entry
  %1 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8413
  %ctx = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %1, i32 0, i32 1, !dbg !8414
  %2 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !8414
  %3 = bitcast %struct.AVFilterContext* %2 to i8*, !dbg !8413
  call void (i8*, i32, i8*, ...) @av_log(i8* %3, i32 24, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.35, i32 0, i32 0)), !dbg !8415
  br label %if.end, !dbg !8415

if.end:                                           ; preds = %if.then, %entry
  ret i32 -22, !dbg !8416
}

; Function Attrs: nounwind uwtable
define internal i32 @render_fontconfig(%struct.ShowCQTContext* %s, %struct.AVFrame* %tmp, i8* %font) #1 !dbg !8417 {
entry:
  %s.addr = alloca %struct.ShowCQTContext*, align 8
  %tmp.addr = alloca %struct.AVFrame*, align 8
  %font.addr = alloca i8*, align 8
  store %struct.ShowCQTContext* %s, %struct.ShowCQTContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShowCQTContext** %s.addr, metadata !8418, metadata !820), !dbg !8419
  store %struct.AVFrame* %tmp, %struct.AVFrame** %tmp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %tmp.addr, metadata !8420, metadata !820), !dbg !8421
  store i8* %font, i8** %font.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %font.addr, metadata !8422, metadata !820), !dbg !8423
  %0 = load i8*, i8** %font.addr, align 8, !dbg !8424
  %tobool = icmp ne i8* %0, null, !dbg !8424
  br i1 %tobool, label %if.then, label %if.end, !dbg !8426

if.then:                                          ; preds = %entry
  %1 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8427
  %ctx = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %1, i32 0, i32 1, !dbg !8428
  %2 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !8428
  %3 = bitcast %struct.AVFilterContext* %2 to i8*, !dbg !8427
  call void (i8*, i32, i8*, ...) @av_log(i8* %3, i32 24, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.36, i32 0, i32 0)), !dbg !8429
  br label %if.end, !dbg !8429

if.end:                                           ; preds = %if.then, %entry
  ret i32 -22, !dbg !8430
}

; Function Attrs: nounwind uwtable
define internal i32 @render_default_font(%struct.AVFrame* %tmp) #1 !dbg !8431 {
entry:
  %tmp.addr = alloca %struct.AVFrame*, align 8
  %str = alloca i8*, align 8
  %x = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %mask = alloca i32, align 4
  %data = alloca i8*, align 8
  %linesize = alloca i32, align 4
  %width = alloca i32, align 4
  %height = alloca i32, align 4
  %startptr = alloca i8*, align 8
  %p = alloca i8*, align 8
  store %struct.AVFrame* %tmp, %struct.AVFrame** %tmp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %tmp.addr, metadata !8434, metadata !820), !dbg !8435
  call void @llvm.dbg.declare(metadata i8** %str, metadata !8436, metadata !820), !dbg !8437
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.37, i32 0, i32 0), i8** %str, align 8, !dbg !8437
  call void @llvm.dbg.declare(metadata i32* %x, metadata !8438, metadata !820), !dbg !8439
  call void @llvm.dbg.declare(metadata i32* %u, metadata !8440, metadata !820), !dbg !8441
  call void @llvm.dbg.declare(metadata i32* %v, metadata !8442, metadata !820), !dbg !8443
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !8444, metadata !820), !dbg !8445
  call void @llvm.dbg.declare(metadata i8** %data, metadata !8446, metadata !820), !dbg !8447
  %0 = load %struct.AVFrame*, %struct.AVFrame** %tmp.addr, align 8, !dbg !8448
  %data7 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i32 0, i32 0, !dbg !8449
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data7, i64 0, i64 0, !dbg !8448
  %1 = load i8*, i8** %arrayidx, align 8, !dbg !8448
  store i8* %1, i8** %data, align 8, !dbg !8447
  call void @llvm.dbg.declare(metadata i32* %linesize, metadata !8450, metadata !820), !dbg !8451
  %2 = load %struct.AVFrame*, %struct.AVFrame** %tmp.addr, align 8, !dbg !8452
  %linesize9 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %2, i32 0, i32 1, !dbg !8453
  %arrayidx10 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize9, i64 0, i64 0, !dbg !8452
  %3 = load i32, i32* %arrayidx10, align 8, !dbg !8452
  store i32 %3, i32* %linesize, align 4, !dbg !8451
  call void @llvm.dbg.declare(metadata i32* %width, metadata !8454, metadata !820), !dbg !8455
  store i32 960, i32* %width, align 4, !dbg !8455
  call void @llvm.dbg.declare(metadata i32* %height, metadata !8456, metadata !820), !dbg !8457
  store i32 16, i32* %height, align 4, !dbg !8457
  store i32 0, i32* %x, align 4, !dbg !8458
  br label %for.cond, !dbg !8460

for.cond:                                         ; preds = %for.inc44, %entry
  %4 = load i32, i32* %x, align 4, !dbg !8461
  %5 = load i32, i32* %width, align 4, !dbg !8464
  %cmp = icmp slt i32 %4, %5, !dbg !8465
  br i1 %cmp, label %for.body, label %for.end47, !dbg !8466

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %startptr, metadata !8467, metadata !820), !dbg !8469
  %6 = load i8*, i8** %data, align 8, !dbg !8470
  %7 = load i32, i32* %x, align 4, !dbg !8471
  %mul = mul nsw i32 4, %7, !dbg !8472
  %idx.ext = sext i32 %mul to i64, !dbg !8473
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %idx.ext, !dbg !8473
  store i8* %add.ptr, i8** %startptr, align 8, !dbg !8469
  store i32 0, i32* %u, align 4, !dbg !8474
  br label %for.cond14, !dbg !8476

for.cond14:                                       ; preds = %for.inc41, %for.body
  %8 = load i32, i32* %u, align 4, !dbg !8477
  %cmp15 = icmp slt i32 %8, 12, !dbg !8480
  br i1 %cmp15, label %for.body16, label %for.end43, !dbg !8481

for.body16:                                       ; preds = %for.cond14
  store i32 0, i32* %v, align 4, !dbg !8482
  br label %for.cond17, !dbg !8485

for.cond17:                                       ; preds = %for.inc39, %for.body16
  %9 = load i32, i32* %v, align 4, !dbg !8486
  %10 = load i32, i32* %height, align 4, !dbg !8489
  %cmp18 = icmp slt i32 %9, %10, !dbg !8490
  br i1 %cmp18, label %for.body19, label %for.end40, !dbg !8491

for.body19:                                       ; preds = %for.cond17
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8492, metadata !820), !dbg !8494
  %11 = load i8*, i8** %startptr, align 8, !dbg !8495
  %12 = load i32, i32* %v, align 4, !dbg !8496
  %13 = load i32, i32* %linesize, align 4, !dbg !8497
  %mul21 = mul nsw i32 %12, %13, !dbg !8498
  %idx.ext22 = sext i32 %mul21 to i64, !dbg !8499
  %add.ptr23 = getelementptr inbounds i8, i8* %11, i64 %idx.ext22, !dbg !8499
  %14 = load i32, i32* %height, align 4, !dbg !8500
  %div = sdiv i32 %14, 2, !dbg !8501
  %mul24 = mul nsw i32 %div, 4, !dbg !8502
  %15 = load i32, i32* %u, align 4, !dbg !8503
  %mul25 = mul nsw i32 %mul24, %15, !dbg !8504
  %idx.ext26 = sext i32 %mul25 to i64, !dbg !8505
  %add.ptr27 = getelementptr inbounds i8, i8* %add.ptr23, i64 %idx.ext26, !dbg !8505
  store i8* %add.ptr27, i8** %p, align 8, !dbg !8494
  store i32 128, i32* %mask, align 4, !dbg !8506
  br label %for.cond28, !dbg !8508

for.cond28:                                       ; preds = %for.inc, %for.body19
  %16 = load i32, i32* %mask, align 4, !dbg !8509
  %tobool = icmp ne i32 %16, 0, !dbg !8512
  br i1 %tobool, label %for.body29, label %for.end, !dbg !8512

for.body29:                                       ; preds = %for.cond28
  %17 = load i32, i32* %mask, align 4, !dbg !8513
  %18 = load i32, i32* %u, align 4, !dbg !8516
  %idxprom = sext i32 %18 to i64, !dbg !8517
  %19 = load i8*, i8** %str, align 8, !dbg !8517
  %arrayidx30 = getelementptr inbounds i8, i8* %19, i64 %idxprom, !dbg !8517
  %20 = load i8, i8* %arrayidx30, align 1, !dbg !8517
  %conv = sext i8 %20 to i32, !dbg !8517
  %mul31 = mul nsw i32 %conv, 16, !dbg !8518
  %21 = load i32, i32* %v, align 4, !dbg !8519
  %add = add nsw i32 %mul31, %21, !dbg !8520
  %idxprom32 = sext i32 %add to i64, !dbg !8521
  %arrayidx33 = getelementptr inbounds [4096 x i8], [4096 x i8]* @avpriv_vga16_font, i64 0, i64 %idxprom32, !dbg !8521
  %22 = load i8, i8* %arrayidx33, align 1, !dbg !8521
  %conv34 = zext i8 %22 to i32, !dbg !8521
  %and = and i32 %17, %conv34, !dbg !8522
  %tobool35 = icmp ne i32 %and, 0, !dbg !8522
  br i1 %tobool35, label %if.then, label %if.else, !dbg !8523

if.then:                                          ; preds = %for.body29
  %23 = load i8*, i8** %p, align 8, !dbg !8524
  %arrayidx36 = getelementptr inbounds i8, i8* %23, i64 3, !dbg !8524
  store i8 -1, i8* %arrayidx36, align 1, !dbg !8525
  br label %if.end, !dbg !8524

if.else:                                          ; preds = %for.body29
  %24 = load i8*, i8** %p, align 8, !dbg !8526
  %arrayidx37 = getelementptr inbounds i8, i8* %24, i64 3, !dbg !8526
  store i8 0, i8* %arrayidx37, align 1, !dbg !8527
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !8528

for.inc:                                          ; preds = %if.end
  %25 = load i32, i32* %mask, align 4, !dbg !8529
  %shr = ashr i32 %25, 1, !dbg !8529
  store i32 %shr, i32* %mask, align 4, !dbg !8529
  %26 = load i8*, i8** %p, align 8, !dbg !8531
  %add.ptr38 = getelementptr inbounds i8, i8* %26, i64 4, !dbg !8531
  store i8* %add.ptr38, i8** %p, align 8, !dbg !8531
  br label %for.cond28, !dbg !8532, !llvm.loop !8533

for.end:                                          ; preds = %for.cond28
  br label %for.inc39, !dbg !8535

for.inc39:                                        ; preds = %for.end
  %27 = load i32, i32* %v, align 4, !dbg !8536
  %inc = add nsw i32 %27, 1, !dbg !8536
  store i32 %inc, i32* %v, align 4, !dbg !8536
  br label %for.cond17, !dbg !8538, !llvm.loop !8539

for.end40:                                        ; preds = %for.cond17
  br label %for.inc41, !dbg !8541

for.inc41:                                        ; preds = %for.end40
  %28 = load i32, i32* %u, align 4, !dbg !8542
  %inc42 = add nsw i32 %28, 1, !dbg !8542
  store i32 %inc42, i32* %u, align 4, !dbg !8542
  br label %for.cond14, !dbg !8544, !llvm.loop !8545

for.end43:                                        ; preds = %for.cond14
  br label %for.inc44, !dbg !8547

for.inc44:                                        ; preds = %for.end43
  %29 = load i32, i32* %width, align 4, !dbg !8548
  %div45 = sdiv i32 %29, 10, !dbg !8550
  %30 = load i32, i32* %x, align 4, !dbg !8551
  %add46 = add nsw i32 %30, %div45, !dbg !8551
  store i32 %add46, i32* %x, align 4, !dbg !8551
  br label %for.cond, !dbg !8552, !llvm.loop !8553

for.end47:                                        ; preds = %for.cond
  ret i32 0, !dbg !8555
}

; Function Attrs: nounwind uwtable
define internal i32 @init_axis_color(%struct.ShowCQTContext* %s, %struct.AVFrame* %tmp, i32 %half) #1 !dbg !8556 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.ShowCQTContext*, align 8
  %tmp.addr = alloca %struct.AVFrame*, align 8
  %half.addr = alloca i32, align 4
  %var_names = alloca [6 x i8*], align 16
  %func_names = alloca [5 x i8*], align 16
  %funcs = alloca [4 x double (i8*, double)*], align 16
  %expr = alloca %struct.AVExpr*, align 8
  %freq = alloca double*, align 8
  %x = alloca i32, align 4
  %xs = alloca i32, align 4
  %y = alloca i32, align 4
  %ret = alloca i32, align 4
  %width = alloca i32, align 4
  %height = alloca i32, align 4
  %step = alloca i32, align 4
  %vars = alloca [5 x double], align 16
  %color = alloca i32, align 4
  %r = alloca i8, align 1
  %g = alloca i8, align 1
  %b = alloca i8, align 1
  %data = alloca i8*, align 8
  %linesize = alloca i32, align 4
  store %struct.ShowCQTContext* %s, %struct.ShowCQTContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShowCQTContext** %s.addr, metadata !8559, metadata !820), !dbg !8560
  store %struct.AVFrame* %tmp, %struct.AVFrame** %tmp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %tmp.addr, metadata !8561, metadata !820), !dbg !8562
  store i32 %half, i32* %half.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %half.addr, metadata !8563, metadata !820), !dbg !8564
  call void @llvm.dbg.declare(metadata [6 x i8*]* %var_names, metadata !8565, metadata !820), !dbg !8566
  %0 = bitcast [6 x i8*]* %var_names to i8*, !dbg !8566
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 48, i32 16, i1 false), !dbg !8566
  %1 = bitcast i8* %0 to [6 x i8*]*, !dbg !8566
  %2 = getelementptr [6 x i8*], [6 x i8*]* %1, i32 0, i32 0, !dbg !8566
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i32 0, i32 0), i8** %2, !dbg !8566
  %3 = getelementptr [6 x i8*], [6 x i8*]* %1, i32 0, i32 1, !dbg !8566
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i32 0, i32 0), i8** %3, !dbg !8566
  %4 = getelementptr [6 x i8*], [6 x i8*]* %1, i32 0, i32 2, !dbg !8566
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i32 0, i32 0), i8** %4, !dbg !8566
  %5 = getelementptr [6 x i8*], [6 x i8*]* %1, i32 0, i32 3, !dbg !8566
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i32 0, i32 0), i8** %5, !dbg !8566
  %6 = getelementptr [6 x i8*], [6 x i8*]* %1, i32 0, i32 4, !dbg !8566
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i32 0, i32 0), i8** %6, !dbg !8566
  call void @llvm.dbg.declare(metadata [5 x i8*]* %func_names, metadata !8567, metadata !820), !dbg !8569
  %7 = bitcast [5 x i8*]* %func_names to i8*, !dbg !8569
  call void @llvm.memset.p0i8.i64(i8* %7, i8 0, i64 40, i32 16, i1 false), !dbg !8569
  %8 = bitcast i8* %7 to [5 x i8*]*, !dbg !8569
  %9 = getelementptr [5 x i8*], [5 x i8*]* %8, i32 0, i32 0, !dbg !8569
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i32 0, i32 0), i8** %9, !dbg !8569
  %10 = getelementptr [5 x i8*], [5 x i8*]* %8, i32 0, i32 1, !dbg !8569
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39, i32 0, i32 0), i8** %10, !dbg !8569
  %11 = getelementptr [5 x i8*], [5 x i8*]* %8, i32 0, i32 2, !dbg !8569
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.40, i32 0, i32 0), i8** %11, !dbg !8569
  %12 = getelementptr [5 x i8*], [5 x i8*]* %8, i32 0, i32 3, !dbg !8569
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i32 0, i32 0), i8** %12, !dbg !8569
  call void @llvm.dbg.declare(metadata [4 x double (i8*, double)*]* %funcs, metadata !8570, metadata !820), !dbg !8572
  %13 = bitcast [4 x double (i8*, double)*]* %funcs to i8*, !dbg !8572
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* bitcast ([4 x double (i8*, double)*]* @init_axis_color.funcs to i8*), i64 32, i32 16, i1 false), !dbg !8572
  call void @llvm.dbg.declare(metadata %struct.AVExpr** %expr, metadata !8573, metadata !820), !dbg !8574
  store %struct.AVExpr* null, %struct.AVExpr** %expr, align 8, !dbg !8574
  call void @llvm.dbg.declare(metadata double** %freq, metadata !8575, metadata !820), !dbg !8576
  store double* null, double** %freq, align 8, !dbg !8576
  call void @llvm.dbg.declare(metadata i32* %x, metadata !8577, metadata !820), !dbg !8578
  call void @llvm.dbg.declare(metadata i32* %xs, metadata !8579, metadata !820), !dbg !8580
  call void @llvm.dbg.declare(metadata i32* %y, metadata !8581, metadata !820), !dbg !8582
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8583, metadata !820), !dbg !8584
  call void @llvm.dbg.declare(metadata i32* %width, metadata !8585, metadata !820), !dbg !8586
  %14 = load i32, i32* %half.addr, align 4, !dbg !8587
  %tobool = icmp ne i32 %14, 0, !dbg !8587
  %cond = select i1 %tobool, i32 960, i32 1920, !dbg !8587
  store i32 %cond, i32* %width, align 4, !dbg !8586
  call void @llvm.dbg.declare(metadata i32* %height, metadata !8588, metadata !820), !dbg !8589
  %15 = load i32, i32* %half.addr, align 4, !dbg !8590
  %tobool12 = icmp ne i32 %15, 0, !dbg !8590
  %cond13 = select i1 %tobool12, i32 16, i32 32, !dbg !8590
  store i32 %cond13, i32* %height, align 4, !dbg !8589
  call void @llvm.dbg.declare(metadata i32* %step, metadata !8591, metadata !820), !dbg !8592
  %16 = load i32, i32* %half.addr, align 4, !dbg !8593
  %tobool15 = icmp ne i32 %16, 0, !dbg !8593
  %cond16 = select i1 %tobool15, i32 2, i32 1, !dbg !8593
  store i32 %cond16, i32* %step, align 4, !dbg !8592
  %17 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8594
  %basefreq = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %17, i32 0, i32 59, !dbg !8596
  %18 = load double, double* %basefreq, align 8, !dbg !8596
  %cmp = fcmp une double %18, 0x403403E6323519C5, !dbg !8597
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8598

lor.lhs.false:                                    ; preds = %entry
  %19 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8599
  %endfreq = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %19, i32 0, i32 60, !dbg !8601
  %20 = load double, double* %endfreq, align 8, !dbg !8601
  %cmp17 = fcmp une double %20, 0x40D403E6323519C5, !dbg !8602
  br i1 %cmp17, label %if.then, label %if.end, !dbg !8603

if.then:                                          ; preds = %lor.lhs.false, %entry
  %21 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8604
  %ctx = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %21, i32 0, i32 1, !dbg !8606
  %22 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !8606
  %23 = bitcast %struct.AVFilterContext* %22 to i8*, !dbg !8604
  call void (i8*, i32, i8*, ...) @av_log(i8* %23, i32 24, i8* getelementptr inbounds ([108 x i8], [108 x i8]* @.str.42, i32 0, i32 0)), !dbg !8607
  store i32 -22, i32* %retval, align 4, !dbg !8608
  br label %return, !dbg !8608

if.end:                                           ; preds = %lor.lhs.false
  %24 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8609
  %cqt_len = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %24, i32 0, i32 22, !dbg !8611
  %25 = load i32, i32* %cqt_len, align 8, !dbg !8611
  %cmp18 = icmp eq i32 %25, 1920, !dbg !8612
  br i1 %cmp18, label %if.then19, label %if.else, !dbg !8613

if.then19:                                        ; preds = %if.end
  %26 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8614
  %freq20 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %26, i32 0, i32 13, !dbg !8615
  %27 = load double*, double** %freq20, align 8, !dbg !8615
  store double* %27, double** %freq, align 8, !dbg !8616
  br label %if.end26, !dbg !8617

if.else:                                          ; preds = %if.end
  %28 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8618
  %basefreq21 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %28, i32 0, i32 59, !dbg !8620
  %29 = load double, double* %basefreq21, align 8, !dbg !8620
  %30 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8621
  %endfreq22 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %30, i32 0, i32 60, !dbg !8622
  %31 = load double, double* %endfreq22, align 8, !dbg !8622
  %call = call double* @create_freq_table(double %29, double %31, i32 1920), !dbg !8623
  store double* %call, double** %freq, align 8, !dbg !8624
  %tobool23 = icmp ne double* %call, null, !dbg !8624
  br i1 %tobool23, label %if.end25, label %if.then24, !dbg !8625

if.then24:                                        ; preds = %if.else
  store i32 -12, i32* %retval, align 4, !dbg !8626
  br label %return, !dbg !8626

if.end25:                                         ; preds = %if.else
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then19
  %32 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8627
  %fontcolor = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %32, i32 0, i32 67, !dbg !8629
  %33 = load i8*, i8** %fontcolor, align 8, !dbg !8629
  %arraydecay = getelementptr inbounds [6 x i8*], [6 x i8*]* %var_names, i32 0, i32 0, !dbg !8630
  %arraydecay27 = getelementptr inbounds [5 x i8*], [5 x i8*]* %func_names, i32 0, i32 0, !dbg !8631
  %arraydecay28 = getelementptr inbounds [4 x double (i8*, double)*], [4 x double (i8*, double)*]* %funcs, i32 0, i32 0, !dbg !8632
  %34 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8633
  %ctx29 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %34, i32 0, i32 1, !dbg !8634
  %35 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx29, align 8, !dbg !8634
  %36 = bitcast %struct.AVFilterContext* %35 to i8*, !dbg !8633
  %call30 = call i32 @av_expr_parse(%struct.AVExpr** %expr, i8* %33, i8** %arraydecay, i8** %arraydecay27, double (i8*, double)** %arraydecay28, i8** null, double (i8*, double, double)** null, i32 0, i8* %36), !dbg !8635
  store i32 %call30, i32* %ret, align 4, !dbg !8636
  %cmp31 = icmp slt i32 %call30, 0, !dbg !8637
  br i1 %cmp31, label %if.then32, label %if.end37, !dbg !8638

if.then32:                                        ; preds = %if.end26
  %37 = load double*, double** %freq, align 8, !dbg !8639
  %38 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8642
  %freq33 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %38, i32 0, i32 13, !dbg !8643
  %39 = load double*, double** %freq33, align 8, !dbg !8643
  %cmp34 = icmp ne double* %37, %39, !dbg !8644
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !8645

if.then35:                                        ; preds = %if.then32
  %40 = bitcast double** %freq to i8*, !dbg !8646
  call void @av_freep(i8* %40), !dbg !8647
  br label %if.end36, !dbg !8647

if.end36:                                         ; preds = %if.then35, %if.then32
  %41 = load i32, i32* %ret, align 4, !dbg !8648
  store i32 %41, i32* %retval, align 4, !dbg !8649
  br label %return, !dbg !8649

if.end37:                                         ; preds = %if.end26
  store i32 0, i32* %x, align 4, !dbg !8650
  store i32 0, i32* %xs, align 4, !dbg !8652
  br label %for.cond, !dbg !8653

for.cond:                                         ; preds = %for.inc85, %if.end37
  %42 = load i32, i32* %x, align 4, !dbg !8654
  %43 = load i32, i32* %width, align 4, !dbg !8657
  %cmp38 = icmp slt i32 %42, %43, !dbg !8658
  br i1 %cmp38, label %for.body, label %for.end88, !dbg !8659

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [5 x double]* %vars, metadata !8660, metadata !820), !dbg !8662
  %arrayinit.begin = getelementptr inbounds [5 x double], [5 x double]* %vars, i64 0, i64 0, !dbg !8663
  %44 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8664
  %timeclamp = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %44, i32 0, i32 57, !dbg !8665
  %45 = load double, double* %timeclamp, align 8, !dbg !8665
  store double %45, double* %arrayinit.begin, align 8, !dbg !8663
  %arrayinit.element = getelementptr inbounds double, double* %arrayinit.begin, i64 1, !dbg !8663
  %46 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8666
  %timeclamp40 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %46, i32 0, i32 57, !dbg !8667
  %47 = load double, double* %timeclamp40, align 8, !dbg !8667
  store double %47, double* %arrayinit.element, align 8, !dbg !8663
  %arrayinit.element41 = getelementptr inbounds double, double* %arrayinit.element, i64 1, !dbg !8663
  %48 = load i32, i32* %xs, align 4, !dbg !8668
  %idxprom = sext i32 %48 to i64, !dbg !8669
  %49 = load double*, double** %freq, align 8, !dbg !8669
  %arrayidx = getelementptr inbounds double, double* %49, i64 %idxprom, !dbg !8669
  %50 = load double, double* %arrayidx, align 8, !dbg !8669
  store double %50, double* %arrayinit.element41, align 8, !dbg !8663
  %arrayinit.element42 = getelementptr inbounds double, double* %arrayinit.element41, i64 1, !dbg !8663
  %51 = load i32, i32* %xs, align 4, !dbg !8670
  %idxprom43 = sext i32 %51 to i64, !dbg !8671
  %52 = load double*, double** %freq, align 8, !dbg !8671
  %arrayidx44 = getelementptr inbounds double, double* %52, i64 %idxprom43, !dbg !8671
  %53 = load double, double* %arrayidx44, align 8, !dbg !8671
  store double %53, double* %arrayinit.element42, align 8, !dbg !8663
  %arrayinit.element45 = getelementptr inbounds double, double* %arrayinit.element42, i64 1, !dbg !8663
  %54 = load i32, i32* %xs, align 4, !dbg !8672
  %idxprom46 = sext i32 %54 to i64, !dbg !8673
  %55 = load double*, double** %freq, align 8, !dbg !8673
  %arrayidx47 = getelementptr inbounds double, double* %55, i64 %idxprom46, !dbg !8673
  %56 = load double, double* %arrayidx47, align 8, !dbg !8673
  store double %56, double* %arrayinit.element45, align 8, !dbg !8663
  call void @llvm.dbg.declare(metadata i32* %color, metadata !8674, metadata !820), !dbg !8675
  %57 = load %struct.AVExpr*, %struct.AVExpr** %expr, align 8, !dbg !8676
  %arraydecay49 = getelementptr inbounds [5 x double], [5 x double]* %vars, i32 0, i32 0, !dbg !8677
  %call50 = call double @av_expr_eval(%struct.AVExpr* %57, double* %arraydecay49, i8* null), !dbg !8678
  %conv = fptosi double %call50 to i32, !dbg !8679
  store i32 %conv, i32* %color, align 4, !dbg !8675
  call void @llvm.dbg.declare(metadata i8* %r, metadata !8680, metadata !820), !dbg !8681
  %58 = load i32, i32* %color, align 4, !dbg !8682
  %shr = ashr i32 %58, 16, !dbg !8683
  %and = and i32 %shr, 255, !dbg !8684
  %conv52 = trunc i32 %and to i8, !dbg !8685
  store i8 %conv52, i8* %r, align 1, !dbg !8681
  call void @llvm.dbg.declare(metadata i8* %g, metadata !8686, metadata !820), !dbg !8687
  %59 = load i32, i32* %color, align 4, !dbg !8688
  %shr54 = ashr i32 %59, 8, !dbg !8689
  %and55 = and i32 %shr54, 255, !dbg !8690
  %conv56 = trunc i32 %and55 to i8, !dbg !8691
  store i8 %conv56, i8* %g, align 1, !dbg !8687
  call void @llvm.dbg.declare(metadata i8* %b, metadata !8692, metadata !820), !dbg !8693
  %60 = load i32, i32* %color, align 4, !dbg !8694
  %and58 = and i32 %60, 255, !dbg !8695
  %conv59 = trunc i32 %and58 to i8, !dbg !8694
  store i8 %conv59, i8* %b, align 1, !dbg !8693
  call void @llvm.dbg.declare(metadata i8** %data, metadata !8696, metadata !820), !dbg !8697
  %61 = load %struct.AVFrame*, %struct.AVFrame** %tmp.addr, align 8, !dbg !8698
  %data61 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %61, i32 0, i32 0, !dbg !8699
  %arrayidx62 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data61, i64 0, i64 0, !dbg !8698
  %62 = load i8*, i8** %arrayidx62, align 8, !dbg !8698
  store i8* %62, i8** %data, align 8, !dbg !8697
  call void @llvm.dbg.declare(metadata i32* %linesize, metadata !8700, metadata !820), !dbg !8701
  %63 = load %struct.AVFrame*, %struct.AVFrame** %tmp.addr, align 8, !dbg !8702
  %linesize64 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %63, i32 0, i32 1, !dbg !8703
  %arrayidx65 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize64, i64 0, i64 0, !dbg !8702
  %64 = load i32, i32* %arrayidx65, align 8, !dbg !8702
  store i32 %64, i32* %linesize, align 4, !dbg !8701
  store i32 0, i32* %y, align 4, !dbg !8704
  br label %for.cond66, !dbg !8706

for.cond66:                                       ; preds = %for.inc, %for.body
  %65 = load i32, i32* %y, align 4, !dbg !8707
  %66 = load i32, i32* %height, align 4, !dbg !8710
  %cmp67 = icmp slt i32 %65, %66, !dbg !8711
  br i1 %cmp67, label %for.body69, label %for.end, !dbg !8712

for.body69:                                       ; preds = %for.cond66
  %67 = load i8, i8* %r, align 1, !dbg !8713
  %68 = load i32, i32* %linesize, align 4, !dbg !8715
  %69 = load i32, i32* %y, align 4, !dbg !8716
  %mul = mul nsw i32 %68, %69, !dbg !8717
  %70 = load i32, i32* %x, align 4, !dbg !8718
  %mul70 = mul nsw i32 4, %70, !dbg !8719
  %add = add nsw i32 %mul, %mul70, !dbg !8720
  %idxprom71 = sext i32 %add to i64, !dbg !8721
  %71 = load i8*, i8** %data, align 8, !dbg !8721
  %arrayidx72 = getelementptr inbounds i8, i8* %71, i64 %idxprom71, !dbg !8721
  store i8 %67, i8* %arrayidx72, align 1, !dbg !8722
  %72 = load i8, i8* %g, align 1, !dbg !8723
  %73 = load i32, i32* %linesize, align 4, !dbg !8724
  %74 = load i32, i32* %y, align 4, !dbg !8725
  %mul73 = mul nsw i32 %73, %74, !dbg !8726
  %75 = load i32, i32* %x, align 4, !dbg !8727
  %mul74 = mul nsw i32 4, %75, !dbg !8728
  %add75 = add nsw i32 %mul73, %mul74, !dbg !8729
  %add76 = add nsw i32 %add75, 1, !dbg !8730
  %idxprom77 = sext i32 %add76 to i64, !dbg !8731
  %76 = load i8*, i8** %data, align 8, !dbg !8731
  %arrayidx78 = getelementptr inbounds i8, i8* %76, i64 %idxprom77, !dbg !8731
  store i8 %72, i8* %arrayidx78, align 1, !dbg !8732
  %77 = load i8, i8* %b, align 1, !dbg !8733
  %78 = load i32, i32* %linesize, align 4, !dbg !8734
  %79 = load i32, i32* %y, align 4, !dbg !8735
  %mul79 = mul nsw i32 %78, %79, !dbg !8736
  %80 = load i32, i32* %x, align 4, !dbg !8737
  %mul80 = mul nsw i32 4, %80, !dbg !8738
  %add81 = add nsw i32 %mul79, %mul80, !dbg !8739
  %add82 = add nsw i32 %add81, 2, !dbg !8740
  %idxprom83 = sext i32 %add82 to i64, !dbg !8741
  %81 = load i8*, i8** %data, align 8, !dbg !8741
  %arrayidx84 = getelementptr inbounds i8, i8* %81, i64 %idxprom83, !dbg !8741
  store i8 %77, i8* %arrayidx84, align 1, !dbg !8742
  br label %for.inc, !dbg !8743

for.inc:                                          ; preds = %for.body69
  %82 = load i32, i32* %y, align 4, !dbg !8744
  %inc = add nsw i32 %82, 1, !dbg !8744
  store i32 %inc, i32* %y, align 4, !dbg !8744
  br label %for.cond66, !dbg !8746, !llvm.loop !8747

for.end:                                          ; preds = %for.cond66
  br label %for.inc85, !dbg !8749

for.inc85:                                        ; preds = %for.end
  %83 = load i32, i32* %x, align 4, !dbg !8750
  %inc86 = add nsw i32 %83, 1, !dbg !8750
  store i32 %inc86, i32* %x, align 4, !dbg !8750
  %84 = load i32, i32* %step, align 4, !dbg !8752
  %85 = load i32, i32* %xs, align 4, !dbg !8753
  %add87 = add nsw i32 %85, %84, !dbg !8753
  store i32 %add87, i32* %xs, align 4, !dbg !8753
  br label %for.cond, !dbg !8754, !llvm.loop !8755

for.end88:                                        ; preds = %for.cond
  %86 = load %struct.AVExpr*, %struct.AVExpr** %expr, align 8, !dbg !8757
  call void @av_expr_free(%struct.AVExpr* %86), !dbg !8758
  %87 = load double*, double** %freq, align 8, !dbg !8759
  %88 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8761
  %freq89 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %88, i32 0, i32 13, !dbg !8762
  %89 = load double*, double** %freq89, align 8, !dbg !8762
  %cmp90 = icmp ne double* %87, %89, !dbg !8763
  br i1 %cmp90, label %if.then92, label %if.end93, !dbg !8764

if.then92:                                        ; preds = %for.end88
  %90 = bitcast double** %freq to i8*, !dbg !8765
  call void @av_freep(i8* %90), !dbg !8766
  br label %if.end93, !dbg !8766

if.end93:                                         ; preds = %if.then92, %for.end88
  store i32 0, i32* %retval, align 4, !dbg !8767
  br label %return, !dbg !8767

return:                                           ; preds = %if.end93, %if.end36, %if.then24, %if.then
  %91 = load i32, i32* %retval, align 4, !dbg !8768
  ret i32 %91, !dbg !8768
}

; Function Attrs: nounwind uwtable
define internal double @midi(i8* %p, double %f) #1 !dbg !8769 {
entry:
  %p.addr = alloca i8*, align 8
  %f.addr = alloca double, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !8770, metadata !820), !dbg !8771
  store double %f, double* %f.addr, align 8
  call void @llvm.dbg.declare(metadata double* %f.addr, metadata !8772, metadata !820), !dbg !8773
  %0 = load double, double* %f.addr, align 8, !dbg !8774
  %div = fdiv double %0, 4.400000e+02, !dbg !8775
  %call = call double @log2(double %div) #8, !dbg !8776
  %mul = fmul double %call, 1.200000e+01, !dbg !8777
  %add = fadd double %mul, 6.900000e+01, !dbg !8778
  ret double %add, !dbg !8779
}

; Function Attrs: nounwind uwtable
define internal double @r_func(i8* %p, double %x) #1 !dbg !8780 {
entry:
  %a.addr.i = alloca double, align 8
  call void @llvm.dbg.declare(metadata double* %a.addr.i, metadata !8781, metadata !820), !dbg !8786
  %amin.addr.i = alloca double, align 8
  call void @llvm.dbg.declare(metadata double* %amin.addr.i, metadata !8788, metadata !820), !dbg !8789
  %amax.addr.i = alloca double, align 8
  call void @llvm.dbg.declare(metadata double* %amax.addr.i, metadata !8790, metadata !820), !dbg !8791
  %p.addr = alloca i8*, align 8
  %x.addr = alloca double, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !8792, metadata !820), !dbg !8793
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !8794, metadata !820), !dbg !8795
  %0 = load double, double* %x.addr, align 8, !dbg !8796
  store double %0, double* %a.addr.i, align 8, !dbg !8797
  store double 0.000000e+00, double* %amin.addr.i, align 8, !dbg !8797
  store double 1.000000e+00, double* %amax.addr.i, align 8, !dbg !8797
  %1 = load double, double* %a.addr.i, align 8, !dbg !8798
  %2 = load double, double* %amin.addr.i, align 8, !dbg !8799
  %3 = load double, double* %amax.addr.i, align 8, !dbg !8800
  %4 = call double asm "minsd $2, $0 \0A\09maxsd $1, $0 \0A\09", "=&x,xm,xm,0,~{dirflag},~{fpsr},~{flags}"(double %2, double %3, double %1) #9, !dbg !8798, !srcloc !8801
  store double %4, double* %a.addr.i, align 8, !dbg !8798
  %5 = load double, double* %a.addr.i, align 8, !dbg !8802
  store double %5, double* %x.addr, align 8, !dbg !8803
  %6 = load double, double* %x.addr, align 8, !dbg !8804
  %mul = fmul double %6, 2.550000e+02, !dbg !8805
  %call1 = call i64 @lrint(double %mul) #8, !dbg !8806
  %shl = shl i64 %call1, 16, !dbg !8807
  %conv = sitofp i64 %shl to double, !dbg !8806
  ret double %conv, !dbg !8808
}

; Function Attrs: nounwind uwtable
define internal double @g_func(i8* %p, double %x) #1 !dbg !8809 {
entry:
  %a.addr.i = alloca double, align 8
  call void @llvm.dbg.declare(metadata double* %a.addr.i, metadata !8781, metadata !820), !dbg !8810
  %amin.addr.i = alloca double, align 8
  call void @llvm.dbg.declare(metadata double* %amin.addr.i, metadata !8788, metadata !820), !dbg !8812
  %amax.addr.i = alloca double, align 8
  call void @llvm.dbg.declare(metadata double* %amax.addr.i, metadata !8790, metadata !820), !dbg !8813
  %p.addr = alloca i8*, align 8
  %x.addr = alloca double, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !8814, metadata !820), !dbg !8815
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !8816, metadata !820), !dbg !8817
  %0 = load double, double* %x.addr, align 8, !dbg !8818
  store double %0, double* %a.addr.i, align 8, !dbg !8819
  store double 0.000000e+00, double* %amin.addr.i, align 8, !dbg !8819
  store double 1.000000e+00, double* %amax.addr.i, align 8, !dbg !8819
  %1 = load double, double* %a.addr.i, align 8, !dbg !8820
  %2 = load double, double* %amin.addr.i, align 8, !dbg !8821
  %3 = load double, double* %amax.addr.i, align 8, !dbg !8822
  %4 = call double asm "minsd $2, $0 \0A\09maxsd $1, $0 \0A\09", "=&x,xm,xm,0,~{dirflag},~{fpsr},~{flags}"(double %2, double %3, double %1) #9, !dbg !8820, !srcloc !8801
  store double %4, double* %a.addr.i, align 8, !dbg !8820
  %5 = load double, double* %a.addr.i, align 8, !dbg !8823
  store double %5, double* %x.addr, align 8, !dbg !8824
  %6 = load double, double* %x.addr, align 8, !dbg !8825
  %mul = fmul double %6, 2.550000e+02, !dbg !8826
  %call1 = call i64 @lrint(double %mul) #8, !dbg !8827
  %shl = shl i64 %call1, 8, !dbg !8828
  %conv = sitofp i64 %shl to double, !dbg !8827
  ret double %conv, !dbg !8829
}

; Function Attrs: nounwind uwtable
define internal double @b_func(i8* %p, double %x) #1 !dbg !8830 {
entry:
  %a.addr.i = alloca double, align 8
  call void @llvm.dbg.declare(metadata double* %a.addr.i, metadata !8781, metadata !820), !dbg !8831
  %amin.addr.i = alloca double, align 8
  call void @llvm.dbg.declare(metadata double* %amin.addr.i, metadata !8788, metadata !820), !dbg !8833
  %amax.addr.i = alloca double, align 8
  call void @llvm.dbg.declare(metadata double* %amax.addr.i, metadata !8790, metadata !820), !dbg !8834
  %p.addr = alloca i8*, align 8
  %x.addr = alloca double, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !8835, metadata !820), !dbg !8836
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !8837, metadata !820), !dbg !8838
  %0 = load double, double* %x.addr, align 8, !dbg !8839
  store double %0, double* %a.addr.i, align 8, !dbg !8840
  store double 0.000000e+00, double* %amin.addr.i, align 8, !dbg !8840
  store double 1.000000e+00, double* %amax.addr.i, align 8, !dbg !8840
  %1 = load double, double* %a.addr.i, align 8, !dbg !8841
  %2 = load double, double* %amin.addr.i, align 8, !dbg !8842
  %3 = load double, double* %amax.addr.i, align 8, !dbg !8843
  %4 = call double asm "minsd $2, $0 \0A\09maxsd $1, $0 \0A\09", "=&x,xm,xm,0,~{dirflag},~{fpsr},~{flags}"(double %2, double %3, double %1) #9, !dbg !8841, !srcloc !8801
  store double %4, double* %a.addr.i, align 8, !dbg !8841
  %5 = load double, double* %a.addr.i, align 8, !dbg !8844
  store double %5, double* %x.addr, align 8, !dbg !8845
  %6 = load double, double* %x.addr, align 8, !dbg !8846
  %mul = fmul double %6, 2.550000e+02, !dbg !8847
  %call1 = call i64 @lrint(double %mul) #8, !dbg !8848
  %conv = sitofp i64 %call1 to double, !dbg !8848
  ret double %conv, !dbg !8849
}

; Function Attrs: nounwind
declare i64 @lrint(double) #7

declare i32 @av_frame_get_buffer(%struct.AVFrame*, i32) #4

declare i8* @av_default_item_name(i8*) #4

; Function Attrs: nounwind uwtable
define internal void @init_colormatrix(%struct.ShowCQTContext* %s) #1 !dbg !8850 {
entry:
  %s.addr = alloca %struct.ShowCQTContext*, align 8
  %kr = alloca double, align 8
  %kg = alloca double, align 8
  %kb = alloca double, align 8
  store %struct.ShowCQTContext* %s, %struct.ShowCQTContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShowCQTContext** %s.addr, metadata !8851, metadata !820), !dbg !8852
  call void @llvm.dbg.declare(metadata double* %kr, metadata !8853, metadata !820), !dbg !8854
  call void @llvm.dbg.declare(metadata double* %kg, metadata !8855, metadata !820), !dbg !8856
  call void @llvm.dbg.declare(metadata double* %kb, metadata !8857, metadata !820), !dbg !8858
  %0 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8859
  %csp = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %0, i32 0, i32 70, !dbg !8860
  %1 = load i32, i32* %csp, align 4, !dbg !8860
  switch i32 %1, label %sw.default [
    i32 2, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 1, label %sw.bb2
    i32 4, label %sw.bb3
    i32 7, label %sw.bb4
    i32 9, label %sw.bb5
  ], !dbg !8861

sw.default:                                       ; preds = %entry
  %2 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8862
  %ctx = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %2, i32 0, i32 1, !dbg !8864
  %3 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !8864
  %4 = bitcast %struct.AVFilterContext* %3 to i8*, !dbg !8862
  call void (i8*, i32, i8*, ...) @av_log(i8* %4, i32 24, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.115, i32 0, i32 0)), !dbg !8865
  %5 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8866
  %csp1 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %5, i32 0, i32 70, !dbg !8867
  store i32 2, i32* %csp1, align 4, !dbg !8868
  br label %sw.bb, !dbg !8866

sw.bb:                                            ; preds = %entry, %entry, %entry, %sw.default
  store double 2.990000e-01, double* %kr, align 8, !dbg !8869
  store double 1.140000e-01, double* %kb, align 8, !dbg !8870
  br label %sw.epilog, !dbg !8871

sw.bb2:                                           ; preds = %entry
  store double 2.126000e-01, double* %kr, align 8, !dbg !8872
  store double 7.220000e-02, double* %kb, align 8, !dbg !8873
  br label %sw.epilog, !dbg !8874

sw.bb3:                                           ; preds = %entry
  store double 3.000000e-01, double* %kr, align 8, !dbg !8875
  store double 1.100000e-01, double* %kb, align 8, !dbg !8876
  br label %sw.epilog, !dbg !8877

sw.bb4:                                           ; preds = %entry
  store double 2.120000e-01, double* %kr, align 8, !dbg !8878
  store double 8.700000e-02, double* %kb, align 8, !dbg !8879
  br label %sw.epilog, !dbg !8880

sw.bb5:                                           ; preds = %entry
  store double 2.627000e-01, double* %kr, align 8, !dbg !8881
  store double 5.930000e-02, double* %kb, align 8, !dbg !8882
  br label %sw.epilog, !dbg !8883

sw.epilog:                                        ; preds = %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb
  %6 = load double, double* %kr, align 8, !dbg !8884
  %sub = fsub double 1.000000e+00, %6, !dbg !8885
  %7 = load double, double* %kb, align 8, !dbg !8886
  %sub6 = fsub double %sub, %7, !dbg !8887
  store double %sub6, double* %kg, align 8, !dbg !8888
  %8 = load double, double* %kr, align 8, !dbg !8889
  %mul = fmul double 2.190000e+02, %8, !dbg !8890
  %conv = fptrunc double %mul to float, !dbg !8891
  %9 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8892
  %cmatrix = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %9, i32 0, i32 29, !dbg !8893
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %cmatrix, i64 0, i64 0, !dbg !8892
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !8892
  store float %conv, float* %arrayidx7, align 8, !dbg !8894
  %10 = load double, double* %kg, align 8, !dbg !8895
  %mul8 = fmul double 2.190000e+02, %10, !dbg !8896
  %conv9 = fptrunc double %mul8 to float, !dbg !8897
  %11 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8898
  %cmatrix10 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %11, i32 0, i32 29, !dbg !8899
  %arrayidx11 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %cmatrix10, i64 0, i64 0, !dbg !8898
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx11, i64 0, i64 1, !dbg !8898
  store float %conv9, float* %arrayidx12, align 4, !dbg !8900
  %12 = load double, double* %kb, align 8, !dbg !8901
  %mul13 = fmul double 2.190000e+02, %12, !dbg !8902
  %conv14 = fptrunc double %mul13 to float, !dbg !8903
  %13 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8904
  %cmatrix15 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %13, i32 0, i32 29, !dbg !8905
  %arrayidx16 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %cmatrix15, i64 0, i64 0, !dbg !8904
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx16, i64 0, i64 2, !dbg !8904
  store float %conv14, float* %arrayidx17, align 8, !dbg !8906
  %14 = load double, double* %kr, align 8, !dbg !8907
  %mul18 = fmul double -1.120000e+02, %14, !dbg !8908
  %15 = load double, double* %kb, align 8, !dbg !8909
  %sub19 = fsub double 1.000000e+00, %15, !dbg !8910
  %div = fdiv double %mul18, %sub19, !dbg !8911
  %conv20 = fptrunc double %div to float, !dbg !8912
  %16 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8913
  %cmatrix21 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %16, i32 0, i32 29, !dbg !8914
  %arrayidx22 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %cmatrix21, i64 0, i64 1, !dbg !8913
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx22, i64 0, i64 0, !dbg !8913
  store float %conv20, float* %arrayidx23, align 4, !dbg !8915
  %17 = load double, double* %kg, align 8, !dbg !8916
  %mul24 = fmul double -1.120000e+02, %17, !dbg !8917
  %18 = load double, double* %kb, align 8, !dbg !8918
  %sub25 = fsub double 1.000000e+00, %18, !dbg !8919
  %div26 = fdiv double %mul24, %sub25, !dbg !8920
  %conv27 = fptrunc double %div26 to float, !dbg !8921
  %19 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8922
  %cmatrix28 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %19, i32 0, i32 29, !dbg !8923
  %arrayidx29 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %cmatrix28, i64 0, i64 1, !dbg !8922
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx29, i64 0, i64 1, !dbg !8922
  store float %conv27, float* %arrayidx30, align 4, !dbg !8924
  %20 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8925
  %cmatrix31 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %20, i32 0, i32 29, !dbg !8926
  %arrayidx32 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %cmatrix31, i64 0, i64 1, !dbg !8925
  %arrayidx33 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx32, i64 0, i64 2, !dbg !8925
  store float 1.120000e+02, float* %arrayidx33, align 4, !dbg !8927
  %21 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8928
  %cmatrix34 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %21, i32 0, i32 29, !dbg !8929
  %arrayidx35 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %cmatrix34, i64 0, i64 2, !dbg !8928
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx35, i64 0, i64 0, !dbg !8928
  store float 1.120000e+02, float* %arrayidx36, align 8, !dbg !8930
  %22 = load double, double* %kg, align 8, !dbg !8931
  %mul37 = fmul double -1.120000e+02, %22, !dbg !8932
  %23 = load double, double* %kr, align 8, !dbg !8933
  %sub38 = fsub double 1.000000e+00, %23, !dbg !8934
  %div39 = fdiv double %mul37, %sub38, !dbg !8935
  %conv40 = fptrunc double %div39 to float, !dbg !8936
  %24 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8937
  %cmatrix41 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %24, i32 0, i32 29, !dbg !8938
  %arrayidx42 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %cmatrix41, i64 0, i64 2, !dbg !8937
  %arrayidx43 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx42, i64 0, i64 1, !dbg !8937
  store float %conv40, float* %arrayidx43, align 4, !dbg !8939
  %25 = load double, double* %kb, align 8, !dbg !8940
  %mul44 = fmul double -1.120000e+02, %25, !dbg !8941
  %26 = load double, double* %kr, align 8, !dbg !8942
  %sub45 = fsub double 1.000000e+00, %26, !dbg !8943
  %div46 = fdiv double %mul44, %sub45, !dbg !8944
  %conv47 = fptrunc double %div46 to float, !dbg !8945
  %27 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8946
  %cmatrix48 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %27, i32 0, i32 29, !dbg !8947
  %arrayidx49 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %cmatrix48, i64 0, i64 2, !dbg !8946
  %arrayidx50 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx49, i64 0, i64 2, !dbg !8946
  store float %conv47, float* %arrayidx50, align 8, !dbg !8948
  ret void, !dbg !8949
}

; Function Attrs: nounwind uwtable
define internal i32 @init_cscheme(%struct.ShowCQTContext* %s) #1 !dbg !8950 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.ShowCQTContext*, align 8
  %tail = alloca [2 x i8], align 1
  %k = alloca i32, align 4
  store %struct.ShowCQTContext* %s, %struct.ShowCQTContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShowCQTContext** %s.addr, metadata !8951, metadata !820), !dbg !8952
  call void @llvm.dbg.declare(metadata [2 x i8]* %tail, metadata !8953, metadata !820), !dbg !8955
  call void @llvm.dbg.declare(metadata i32* %k, metadata !8956, metadata !820), !dbg !8957
  %0 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8958
  %cscheme = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %0, i32 0, i32 71, !dbg !8960
  %1 = load i8*, i8** %cscheme, align 8, !dbg !8960
  %2 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8961
  %cscheme_v = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %2, i32 0, i32 30, !dbg !8962
  %arrayidx = getelementptr inbounds [6 x float], [6 x float]* %cscheme_v, i64 0, i64 0, !dbg !8961
  %3 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8963
  %cscheme_v1 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %3, i32 0, i32 30, !dbg !8964
  %arrayidx2 = getelementptr inbounds [6 x float], [6 x float]* %cscheme_v1, i64 0, i64 1, !dbg !8963
  %4 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8965
  %cscheme_v3 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %4, i32 0, i32 30, !dbg !8966
  %arrayidx4 = getelementptr inbounds [6 x float], [6 x float]* %cscheme_v3, i64 0, i64 2, !dbg !8965
  %5 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8967
  %cscheme_v5 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %5, i32 0, i32 30, !dbg !8968
  %arrayidx6 = getelementptr inbounds [6 x float], [6 x float]* %cscheme_v5, i64 0, i64 3, !dbg !8967
  %6 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8969
  %cscheme_v7 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %6, i32 0, i32 30, !dbg !8970
  %arrayidx8 = getelementptr inbounds [6 x float], [6 x float]* %cscheme_v7, i64 0, i64 4, !dbg !8969
  %7 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8971
  %cscheme_v9 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %7, i32 0, i32 30, !dbg !8972
  %arrayidx10 = getelementptr inbounds [6 x float], [6 x float]* %cscheme_v9, i64 0, i64 5, !dbg !8971
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %tail, i32 0, i32 0, !dbg !8973
  %call = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.116, i32 0, i32 0), float* %arrayidx, float* %arrayidx2, float* %arrayidx4, float* %arrayidx6, float* %arrayidx8, float* %arrayidx10, i8* %arraydecay) #8, !dbg !8974
  %cmp = icmp ne i32 %call, 6, !dbg !8975
  br i1 %cmp, label %if.then, label %if.end, !dbg !8976

if.then:                                          ; preds = %entry
  br label %fail, !dbg !8977

if.end:                                           ; preds = %entry
  store i32 0, i32* %k, align 4, !dbg !8978
  br label %for.cond, !dbg !8980

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load i32, i32* %k, align 4, !dbg !8981
  %cmp11 = icmp slt i32 %8, 6, !dbg !8984
  br i1 %cmp11, label %for.body, label %for.end, !dbg !8985

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %k, align 4, !dbg !8986
  %idxprom = sext i32 %9 to i64, !dbg !8988
  %10 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8988
  %cscheme_v12 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %10, i32 0, i32 30, !dbg !8989
  %arrayidx13 = getelementptr inbounds [6 x float], [6 x float]* %cscheme_v12, i64 0, i64 %idxprom, !dbg !8988
  %11 = load float, float* %arrayidx13, align 4, !dbg !8988
  %cmp14 = fcmp uno float %11, %11, !dbg !8988
  br i1 %cmp14, label %if.then24, label %lor.lhs.false, !dbg !8990

lor.lhs.false:                                    ; preds = %for.body
  %12 = load i32, i32* %k, align 4, !dbg !8991
  %idxprom15 = sext i32 %12 to i64, !dbg !8993
  %13 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8993
  %cscheme_v16 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %13, i32 0, i32 30, !dbg !8994
  %arrayidx17 = getelementptr inbounds [6 x float], [6 x float]* %cscheme_v16, i64 0, i64 %idxprom15, !dbg !8993
  %14 = load float, float* %arrayidx17, align 4, !dbg !8993
  %cmp18 = fcmp olt float %14, 0.000000e+00, !dbg !8995
  br i1 %cmp18, label %if.then24, label %lor.lhs.false19, !dbg !8996

lor.lhs.false19:                                  ; preds = %lor.lhs.false
  %15 = load i32, i32* %k, align 4, !dbg !8997
  %idxprom20 = sext i32 %15 to i64, !dbg !8999
  %16 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !8999
  %cscheme_v21 = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %16, i32 0, i32 30, !dbg !9000
  %arrayidx22 = getelementptr inbounds [6 x float], [6 x float]* %cscheme_v21, i64 0, i64 %idxprom20, !dbg !8999
  %17 = load float, float* %arrayidx22, align 4, !dbg !8999
  %cmp23 = fcmp ogt float %17, 1.000000e+00, !dbg !9001
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !9002

if.then24:                                        ; preds = %lor.lhs.false19, %lor.lhs.false, %for.body
  br label %fail, !dbg !9003

if.end25:                                         ; preds = %lor.lhs.false19
  br label %for.inc, !dbg !9004

for.inc:                                          ; preds = %if.end25
  %18 = load i32, i32* %k, align 4, !dbg !9006
  %inc = add nsw i32 %18, 1, !dbg !9006
  store i32 %inc, i32* %k, align 4, !dbg !9006
  br label %for.cond, !dbg !9008, !llvm.loop !9009

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !9011
  br label %return, !dbg !9011

fail:                                             ; preds = %if.then24, %if.then
  %19 = load %struct.ShowCQTContext*, %struct.ShowCQTContext** %s.addr, align 8, !dbg !9012
  %ctx = getelementptr inbounds %struct.ShowCQTContext, %struct.ShowCQTContext* %19, i32 0, i32 1, !dbg !9013
  %20 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !9013
  %21 = bitcast %struct.AVFilterContext* %20 to i8*, !dbg !9012
  call void (i8*, i32, i8*, ...) @av_log(i8* %21, i32 16, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.117, i32 0, i32 0)), !dbg !9014
  store i32 -22, i32* %retval, align 4, !dbg !9015
  br label %return, !dbg !9015

return:                                           ; preds = %fail, %for.end
  %22 = load i32, i32* %retval, align 4, !dbg !9016
  ret i32 %22, !dbg !9016
}

; Function Attrs: nounwind
declare i32 @__isoc99_sscanf(i8*, i8*, ...) #7

declare %struct.AVFilterFormats* @ff_make_format_list(i32*) #4

declare i32 @ff_formats_ref(%struct.AVFilterFormats*, %struct.AVFilterFormats**) #4

declare %struct.AVFilterChannelLayouts* @avfilter_make_format64_list(i64*) #4

declare i32 @ff_channel_layouts_ref(%struct.AVFilterChannelLayouts*, %struct.AVFilterChannelLayouts**) #4

declare %struct.AVFilterFormats* @ff_all_samplerates() #4

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!814, !815}
!llvm.ident = !{!816}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !796, globals: !799)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavfilter--avf_showcqt.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2 = !{!3, !13, !23, !47, !54, !72, !96, !115, !125, !147, !168, !580, !779}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !4, line: 199, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5 = !{!6, !7, !8, !9, !10, !11, !12}
!6 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!7 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!8 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!9 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!10 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!11 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!12 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !4, line: 272, size: 32, align: 32, elements: !14)
!14 = !{!15, !16, !17, !18, !19, !20, !21, !22}
!15 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!16 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!17 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!18 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!19 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!20 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!21 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!22 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!23 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !24, line: 48, size: 32, align: 32, elements: !25)
!24 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!25 = !{!26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46}
!26 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!27 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!28 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!29 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!30 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!31 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!32 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!33 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!34 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!35 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!36 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!37 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!38 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!39 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!40 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!41 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!42 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!43 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!44 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!45 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!46 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !48, line: 516, size: 32, align: 32, elements: !49)
!48 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!49 = !{!50, !51, !52, !53}
!50 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!51 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!52 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!53 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!54 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !48, line: 440, size: 32, align: 32, elements: !55)
!55 = !{!56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71}
!56 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!57 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!58 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!59 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!60 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!61 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!62 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!63 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!64 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!65 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!66 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!67 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!68 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!69 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!70 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!71 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !48, line: 464, size: 32, align: 32, elements: !73)
!73 = !{!74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95}
!74 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!75 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!76 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!77 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!78 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!79 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!80 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!81 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!82 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!83 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!84 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!85 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!86 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!87 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!88 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!89 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!90 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!91 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!92 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!93 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!94 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!95 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!96 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !48, line: 493, size: 32, align: 32, elements: !97)
!97 = !{!98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114}
!98 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!99 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!100 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!101 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!102 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!103 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!104 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!105 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!106 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!107 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!108 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!109 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!110 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!111 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!112 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!113 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!114 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!115 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !48, line: 538, size: 32, align: 32, elements: !116)
!116 = !{!117, !118, !119, !120, !121, !122, !123, !124}
!117 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!118 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!119 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!120 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!121 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!122 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!123 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!124 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!125 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !126, line: 221, size: 32, align: 32, elements: !127)
!126 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!127 = !{!128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146}
!128 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!129 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!130 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!131 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!132 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!133 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!134 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!135 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!136 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!137 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!138 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!139 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!140 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!141 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!142 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!143 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!144 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!145 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!146 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!147 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !148, line: 29, size: 32, align: 32, elements: !149)
!148 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!149 = !{!150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167}
!150 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!151 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!152 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!153 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!154 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!155 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!156 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!157 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!158 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!159 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!160 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!161 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!162 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!163 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!164 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!165 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!166 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!167 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!168 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !170, file: !169, line: 503, size: 32, align: 32, elements: !576)
!169 = !DIFile(filename: "libavfilter/avfilter.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterLink", file: !169, line: 439, size: 493504, align: 64, elements: !171)
!171 = !{!172, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !537, !538, !539, !540, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !170, file: !169, line: 440, baseType: !173, size: 64, align: 64)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 64, align: 64)
!174 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterContext", file: !169, line: 67, baseType: !175)
!175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterContext", file: !169, line: 338, size: 1344, align: 64, elements: !176)
!176 = !{!177, !264, !437, !438, !440, !442, !444, !445, !446, !447, !448, !488, !489, !495, !504, !505, !506, !508, !509, !510, !511, !512}
!177 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !175, file: !169, line: 339, baseType: !178, size: 64, align: 64)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 64, align: 64)
!179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !180)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !148, line: 143, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !148, line: 67, size: 640, align: 64, elements: !182)
!182 = !{!183, !187, !192, !223, !224, !225, !226, !230, !236, !238, !242}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !181, file: !148, line: 72, baseType: !184, size: 64, align: 64)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64, align: 64)
!185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !186)
!186 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !181, file: !148, line: 78, baseType: !188, size: 64, align: 64, offset: 64)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 64, align: 64)
!189 = !DISubroutineType(types: !190)
!190 = !{!184, !191}
!191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !181, file: !148, line: 85, baseType: !193, size: 64, align: 64, offset: 128)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 64, align: 64)
!194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !126, line: 246, size: 512, align: 64, elements: !196)
!196 = !{!197, !198, !199, !201, !202, !219, !220, !221, !222}
!197 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !195, file: !126, line: 247, baseType: !184, size: 64, align: 64)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !195, file: !126, line: 253, baseType: !184, size: 64, align: 64, offset: 64)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !195, file: !126, line: 259, baseType: !200, size: 32, align: 32, offset: 128)
!200 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !195, file: !126, line: 260, baseType: !125, size: 32, align: 32, offset: 160)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !195, file: !126, line: 271, baseType: !203, size: 64, align: 64, offset: 192)
!203 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !195, file: !126, line: 265, size: 64, align: 64, elements: !204)
!204 = !{!205, !209, !211, !212}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !203, file: !126, line: 266, baseType: !206, size: 64, align: 64)
!206 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !207, line: 197, baseType: !208)
!207 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!208 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !203, file: !126, line: 267, baseType: !210, size: 64, align: 64)
!210 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !203, file: !126, line: 268, baseType: !184, size: 64, align: 64)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !203, file: !126, line: 270, baseType: !213, size: 64, align: 32)
!213 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !214, line: 61, baseType: !215)
!214 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !214, line: 58, size: 64, align: 32, elements: !216)
!216 = !{!217, !218}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !215, file: !214, line: 59, baseType: !200, size: 32, align: 32)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !215, file: !214, line: 60, baseType: !200, size: 32, align: 32, offset: 32)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !195, file: !126, line: 272, baseType: !210, size: 64, align: 64, offset: 256)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !195, file: !126, line: 273, baseType: !210, size: 64, align: 64, offset: 320)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !195, file: !126, line: 275, baseType: !200, size: 32, align: 32, offset: 384)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !195, file: !126, line: 300, baseType: !184, size: 64, align: 64, offset: 448)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !181, file: !148, line: 93, baseType: !200, size: 32, align: 32, offset: 192)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !181, file: !148, line: 99, baseType: !200, size: 32, align: 32, offset: 224)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !181, file: !148, line: 108, baseType: !200, size: 32, align: 32, offset: 256)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !181, file: !148, line: 113, baseType: !227, size: 64, align: 64, offset: 320)
!227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !228, size: 64, align: 64)
!228 = !DISubroutineType(types: !229)
!229 = !{!191, !191, !191}
!230 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !181, file: !148, line: 123, baseType: !231, size: 64, align: 64, offset: 384)
!231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 64, align: 64)
!232 = !DISubroutineType(types: !233)
!233 = !{!234, !234}
!234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 64, align: 64)
!235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !181, file: !148, line: 130, baseType: !237, size: 32, align: 32, offset: 448)
!237 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !148, line: 48, baseType: !147)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !181, file: !148, line: 136, baseType: !239, size: 64, align: 64, offset: 512)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64, align: 64)
!240 = !DISubroutineType(types: !241)
!241 = !{!237, !191}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !181, file: !148, line: 142, baseType: !243, size: 64, align: 64, offset: 576)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64, align: 64)
!244 = !DISubroutineType(types: !245)
!245 = !{!200, !246, !191, !184, !200}
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 64, align: 64)
!247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 64, align: 64)
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !126, line: 329, size: 128, align: 64, elements: !249)
!249 = !{!250, !262, !263}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !248, file: !126, line: 360, baseType: !251, size: 64, align: 64)
!251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64, align: 64)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 64, align: 64)
!253 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !126, line: 324, baseType: !254)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !126, line: 306, size: 384, align: 64, elements: !255)
!255 = !{!256, !257, !258, !259, !260, !261}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !254, file: !126, line: 307, baseType: !184, size: 64, align: 64)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !254, file: !126, line: 313, baseType: !210, size: 64, align: 64, offset: 64)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !254, file: !126, line: 313, baseType: !210, size: 64, align: 64, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !254, file: !126, line: 318, baseType: !210, size: 64, align: 64, offset: 192)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !254, file: !126, line: 318, baseType: !210, size: 64, align: 64, offset: 256)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !254, file: !126, line: 323, baseType: !200, size: 32, align: 32, offset: 320)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !248, file: !126, line: 364, baseType: !200, size: 32, align: 32, offset: 64)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !248, file: !126, line: 368, baseType: !200, size: 32, align: 32, offset: 96)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !175, file: !169, line: 341, baseType: !265, size: 64, align: 64, offset: 64)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 64, align: 64)
!266 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !267)
!267 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilter", file: !169, line: 328, baseType: !268)
!268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilter", file: !169, line: 144, size: 1024, align: 64, elements: !269)
!269 = !{!270, !271, !272, !405, !406, !407, !408, !412, !413, !418, !422, !423, !424, !425, !427, !432, !436}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !268, file: !169, line: 148, baseType: !184, size: 64, align: 64)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !268, file: !169, line: 155, baseType: !184, size: 64, align: 64, offset: 64)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !268, file: !169, line: 164, baseType: !273, size: 64, align: 64, offset: 128)
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 64, align: 64)
!274 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !275)
!275 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterPad", file: !169, line: 69, baseType: !276)
!276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterPad", file: !277, line: 54, size: 576, align: 64, elements: !278)
!277 = !DIFile(filename: "libavfilter/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!278 = !{!279, !280, !281, !389, !393, !397, !401, !402, !403, !404}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !276, file: !277, line: 60, baseType: !184, size: 64, align: 64)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !276, file: !277, line: 65, baseType: !3, size: 32, align: 32, offset: 64)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "get_video_buffer", scope: !276, file: !277, line: 73, baseType: !282, size: 64, align: 64, offset: 128)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 64, align: 64)
!283 = !DISubroutineType(types: !284)
!284 = !{!285, !387, !200, !200}
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !286, size: 64, align: 64)
!286 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !24, line: 646, baseType: !287)
!287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !24, line: 268, size: 4288, align: 64, elements: !288)
!288 = !{!289, !297, !299, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !319, !320, !321, !322, !323, !324, !325, !326, !339, !341, !342, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !375, !376, !377, !378, !379, !380, !383, !384, !385, !386}
!289 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !287, file: !24, line: 282, baseType: !290, size: 512, align: 64)
!290 = !DICompositeType(tag: DW_TAG_array_type, baseType: !291, size: 512, align: 64, elements: !295)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64, align: 64)
!292 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !293, line: 48, baseType: !294)
!293 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!294 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!295 = !{!296}
!296 = !DISubrange(count: 8)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !287, file: !24, line: 299, baseType: !298, size: 256, align: 32, offset: 512)
!298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !200, size: 256, align: 32, elements: !295)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !287, file: !24, line: 315, baseType: !300, size: 64, align: 64, offset: 768)
!300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 64, align: 64)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !287, file: !24, line: 326, baseType: !200, size: 32, align: 32, offset: 832)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !287, file: !24, line: 326, baseType: !200, size: 32, align: 32, offset: 864)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !287, file: !24, line: 334, baseType: !200, size: 32, align: 32, offset: 896)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !287, file: !24, line: 341, baseType: !200, size: 32, align: 32, offset: 928)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !287, file: !24, line: 346, baseType: !200, size: 32, align: 32, offset: 960)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !287, file: !24, line: 351, baseType: !13, size: 32, align: 32, offset: 992)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !287, file: !24, line: 356, baseType: !213, size: 64, align: 32, offset: 1024)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !287, file: !24, line: 361, baseType: !206, size: 64, align: 64, offset: 1088)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !287, file: !24, line: 369, baseType: !206, size: 64, align: 64, offset: 1152)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !287, file: !24, line: 377, baseType: !206, size: 64, align: 64, offset: 1216)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !287, file: !24, line: 382, baseType: !200, size: 32, align: 32, offset: 1280)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !287, file: !24, line: 386, baseType: !200, size: 32, align: 32, offset: 1312)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !287, file: !24, line: 391, baseType: !200, size: 32, align: 32, offset: 1344)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !287, file: !24, line: 396, baseType: !191, size: 64, align: 64, offset: 1408)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !287, file: !24, line: 403, baseType: !316, size: 512, align: 64, offset: 1472)
!316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 512, align: 64, elements: !295)
!317 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !293, line: 55, baseType: !318)
!318 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !287, file: !24, line: 410, baseType: !200, size: 32, align: 32, offset: 1984)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !287, file: !24, line: 415, baseType: !200, size: 32, align: 32, offset: 2016)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !287, file: !24, line: 420, baseType: !200, size: 32, align: 32, offset: 2048)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !287, file: !24, line: 425, baseType: !200, size: 32, align: 32, offset: 2080)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !287, file: !24, line: 435, baseType: !206, size: 64, align: 64, offset: 2112)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !287, file: !24, line: 440, baseType: !200, size: 32, align: 32, offset: 2176)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !287, file: !24, line: 445, baseType: !317, size: 64, align: 64, offset: 2240)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !287, file: !24, line: 459, baseType: !327, size: 512, align: 64, offset: 2304)
!327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !328, size: 512, align: 64, elements: !295)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64, align: 64)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !330, line: 94, baseType: !331)
!330 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !330, line: 81, size: 192, align: 64, elements: !332)
!332 = !{!333, !337, !338}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !331, file: !330, line: 82, baseType: !334, size: 64, align: 64)
!334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 64, align: 64)
!335 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !330, line: 73, baseType: !336)
!336 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !330, line: 73, flags: DIFlagFwdDecl)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !331, file: !330, line: 89, baseType: !291, size: 64, align: 64, offset: 64)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !331, file: !330, line: 93, baseType: !200, size: 32, align: 32, offset: 128)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !287, file: !24, line: 473, baseType: !340, size: 64, align: 64, offset: 2816)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 64, align: 64)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !287, file: !24, line: 477, baseType: !200, size: 32, align: 32, offset: 2880)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !287, file: !24, line: 479, baseType: !343, size: 64, align: 64, offset: 2944)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64, align: 64)
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64, align: 64)
!345 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !24, line: 207, baseType: !346)
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !24, line: 201, size: 320, align: 64, elements: !347)
!347 = !{!348, !349, !350, !351, !356}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !346, file: !24, line: 202, baseType: !23, size: 32, align: 32)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !346, file: !24, line: 203, baseType: !291, size: 64, align: 64, offset: 64)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !346, file: !24, line: 204, baseType: !200, size: 32, align: 32, offset: 128)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !346, file: !24, line: 205, baseType: !352, size: 64, align: 64, offset: 192)
!352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !353, size: 64, align: 64)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !354, line: 86, baseType: !355)
!354 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!355 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !354, line: 86, flags: DIFlagFwdDecl)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !346, file: !24, line: 206, baseType: !328, size: 64, align: 64, offset: 256)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !287, file: !24, line: 480, baseType: !200, size: 32, align: 32, offset: 3008)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !287, file: !24, line: 505, baseType: !200, size: 32, align: 32, offset: 3040)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !287, file: !24, line: 512, baseType: !47, size: 32, align: 32, offset: 3072)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !287, file: !24, line: 514, baseType: !54, size: 32, align: 32, offset: 3104)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !287, file: !24, line: 516, baseType: !72, size: 32, align: 32, offset: 3136)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !287, file: !24, line: 523, baseType: !96, size: 32, align: 32, offset: 3168)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !287, file: !24, line: 525, baseType: !115, size: 32, align: 32, offset: 3200)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !287, file: !24, line: 532, baseType: !206, size: 64, align: 64, offset: 3264)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !287, file: !24, line: 539, baseType: !206, size: 64, align: 64, offset: 3328)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !287, file: !24, line: 547, baseType: !206, size: 64, align: 64, offset: 3392)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !287, file: !24, line: 554, baseType: !352, size: 64, align: 64, offset: 3456)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !287, file: !24, line: 563, baseType: !200, size: 32, align: 32, offset: 3520)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !287, file: !24, line: 572, baseType: !200, size: 32, align: 32, offset: 3552)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !287, file: !24, line: 581, baseType: !200, size: 32, align: 32, offset: 3584)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !287, file: !24, line: 588, baseType: !372, size: 64, align: 64, offset: 3648)
!372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !373, size: 64, align: 64)
!373 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !207, line: 194, baseType: !374)
!374 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !287, file: !24, line: 593, baseType: !200, size: 32, align: 32, offset: 3712)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !287, file: !24, line: 596, baseType: !200, size: 32, align: 32, offset: 3744)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !287, file: !24, line: 599, baseType: !328, size: 64, align: 64, offset: 3776)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !287, file: !24, line: 605, baseType: !328, size: 64, align: 64, offset: 3840)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !287, file: !24, line: 616, baseType: !328, size: 64, align: 64, offset: 3904)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !287, file: !24, line: 626, baseType: !381, size: 64, align: 64, offset: 3968)
!381 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !382, line: 216, baseType: !318)
!382 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!383 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !287, file: !24, line: 627, baseType: !381, size: 64, align: 64, offset: 4032)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !287, file: !24, line: 628, baseType: !381, size: 64, align: 64, offset: 4096)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !287, file: !24, line: 629, baseType: !381, size: 64, align: 64, offset: 4160)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !287, file: !24, line: 645, baseType: !328, size: 64, align: 64, offset: 4224)
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64, align: 64)
!388 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterLink", file: !169, line: 68, baseType: !170)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "get_audio_buffer", scope: !276, file: !277, line: 81, baseType: !390, size: 64, align: 64, offset: 192)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 64, align: 64)
!391 = !DISubroutineType(types: !392)
!392 = !{!285, !387, !200}
!393 = !DIDerivedType(tag: DW_TAG_member, name: "filter_frame", scope: !276, file: !277, line: 93, baseType: !394, size: 64, align: 64, offset: 256)
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 64, align: 64)
!395 = !DISubroutineType(types: !396)
!396 = !{!200, !387, !285}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "poll_frame", scope: !276, file: !277, line: 104, baseType: !398, size: 64, align: 64, offset: 320)
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 64, align: 64)
!399 = !DISubroutineType(types: !400)
!400 = !{!200, !387}
!401 = !DIDerivedType(tag: DW_TAG_member, name: "request_frame", scope: !276, file: !277, line: 113, baseType: !398, size: 64, align: 64, offset: 384)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "config_props", scope: !276, file: !277, line: 129, baseType: !398, size: 64, align: 64, offset: 448)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "needs_fifo", scope: !276, file: !277, line: 137, baseType: !200, size: 32, align: 32, offset: 512)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "needs_writable", scope: !276, file: !277, line: 145, baseType: !200, size: 32, align: 32, offset: 544)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !268, file: !169, line: 172, baseType: !273, size: 64, align: 64, offset: 192)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !268, file: !169, line: 182, baseType: !178, size: 64, align: 64, offset: 256)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !268, file: !169, line: 187, baseType: !200, size: 32, align: 32, offset: 320)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "preinit", scope: !268, file: !169, line: 210, baseType: !409, size: 64, align: 64, offset: 384)
!409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 64, align: 64)
!410 = !DISubroutineType(types: !411)
!411 = !{!200, !173}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !268, file: !169, line: 233, baseType: !409, size: 64, align: 64, offset: 448)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "init_dict", scope: !268, file: !169, line: 246, baseType: !414, size: 64, align: 64, offset: 512)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64, align: 64)
!415 = !DISubroutineType(types: !416)
!416 = !{!200, !173, !417}
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64, align: 64)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !268, file: !169, line: 258, baseType: !419, size: 64, align: 64, offset: 576)
!419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64, align: 64)
!420 = !DISubroutineType(types: !421)
!421 = !{null, !173}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "query_formats", scope: !268, file: !169, line: 282, baseType: !409, size: 64, align: 64, offset: 640)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !268, file: !169, line: 284, baseType: !200, size: 32, align: 32, offset: 704)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "flags_internal", scope: !268, file: !169, line: 286, baseType: !200, size: 32, align: 32, offset: 736)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !268, file: !169, line: 292, baseType: !426, size: 64, align: 64, offset: 768)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64, align: 64)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "process_command", scope: !268, file: !169, line: 306, baseType: !428, size: 64, align: 64, offset: 832)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 64, align: 64)
!429 = !DISubroutineType(types: !430)
!430 = !{!200, !173, !184, !184, !431, !200, !200}
!431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 64, align: 64)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "init_opaque", scope: !268, file: !169, line: 313, baseType: !433, size: 64, align: 64, offset: 896)
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 64, align: 64)
!434 = !DISubroutineType(types: !435)
!435 = !{!200, !173, !191}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !268, file: !169, line: 327, baseType: !409, size: 64, align: 64, offset: 960)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !175, file: !169, line: 343, baseType: !431, size: 64, align: 64, offset: 128)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "input_pads", scope: !175, file: !169, line: 345, baseType: !439, size: 64, align: 64, offset: 192)
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 64, align: 64)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !175, file: !169, line: 346, baseType: !441, size: 64, align: 64, offset: 256)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64, align: 64)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inputs", scope: !175, file: !169, line: 347, baseType: !443, size: 32, align: 32, offset: 320)
!443 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "output_pads", scope: !175, file: !169, line: 349, baseType: !439, size: 64, align: 64, offset: 384)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !175, file: !169, line: 350, baseType: !441, size: 64, align: 64, offset: 448)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "nb_outputs", scope: !175, file: !169, line: 351, baseType: !443, size: 32, align: 32, offset: 512)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !175, file: !169, line: 353, baseType: !191, size: 64, align: 64, offset: 576)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "graph", scope: !175, file: !169, line: 355, baseType: !449, size: 64, align: 64, offset: 640)
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 64, align: 64)
!450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterGraph", file: !169, line: 840, size: 768, align: 64, elements: !451)
!451 = !{!452, !453, !455, !456, !457, !458, !459, !460, !482, !483, !484, !485, !486, !487}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !450, file: !169, line: 841, baseType: !178, size: 64, align: 64)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "filters", scope: !450, file: !169, line: 842, baseType: !454, size: 64, align: 64, offset: 64)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 64, align: 64)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "nb_filters", scope: !450, file: !169, line: 843, baseType: !443, size: 32, align: 32, offset: 128)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "scale_sws_opts", scope: !450, file: !169, line: 845, baseType: !431, size: 64, align: 64, offset: 192)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "resample_lavr_opts", scope: !450, file: !169, line: 847, baseType: !431, size: 64, align: 64, offset: 256)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !450, file: !169, line: 862, baseType: !200, size: 32, align: 32, offset: 320)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "nb_threads", scope: !450, file: !169, line: 869, baseType: !200, size: 32, align: 32, offset: 352)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !450, file: !169, line: 874, baseType: !461, size: 64, align: 64, offset: 384)
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 64, align: 64)
!462 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterGraphInternal", file: !169, line: 809, baseType: !463)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterGraphInternal", file: !277, line: 148, size: 192, align: 64, elements: !464)
!464 = !{!465, !466, !476}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !463, file: !277, line: 149, baseType: !191, size: 64, align: 64)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "thread_execute", scope: !463, file: !277, line: 150, baseType: !467, size: 64, align: 64, offset: 64)
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 64, align: 64)
!468 = !DIDerivedType(tag: DW_TAG_typedef, name: "avfilter_execute_func", file: !169, line: 837, baseType: !469)
!469 = !DISubroutineType(types: !470)
!470 = !{!200, !173, !471, !191, !475, !200}
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64, align: 64)
!472 = !DIDerivedType(tag: DW_TAG_typedef, name: "avfilter_action_func", file: !169, line: 823, baseType: !473)
!473 = !DISubroutineType(types: !474)
!474 = !{!200, !173, !191, !200, !200}
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64, align: 64)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "frame_queues", scope: !463, file: !277, line: 151, baseType: !477, size: 8, align: 8, offset: 128)
!477 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFFrameQueueGlobal", file: !478, line: 48, baseType: !479)
!478 = !DIFile(filename: "libavfilter/framequeue.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFFrameQueueGlobal", file: !478, line: 46, size: 8, align: 8, elements: !480)
!480 = !{!481}
!481 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !479, file: !478, line: 47, baseType: !186, size: 8, align: 8)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !450, file: !169, line: 881, baseType: !191, size: 64, align: 64, offset: 448)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !450, file: !169, line: 895, baseType: !467, size: 64, align: 64, offset: 512)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "aresample_swr_opts", scope: !450, file: !169, line: 897, baseType: !431, size: 64, align: 64, offset: 576)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "sink_links", scope: !450, file: !169, line: 906, baseType: !441, size: 64, align: 64, offset: 640)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "sink_links_count", scope: !450, file: !169, line: 907, baseType: !200, size: 32, align: 32, offset: 704)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "disable_auto_convert", scope: !450, file: !169, line: 909, baseType: !443, size: 32, align: 32, offset: 736)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !175, file: !169, line: 373, baseType: !200, size: 32, align: 32, offset: 704)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !175, file: !169, line: 378, baseType: !490, size: 64, align: 64, offset: 768)
!490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !491, size: 64, align: 64)
!491 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterInternal", file: !169, line: 335, baseType: !492)
!492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterInternal", file: !277, line: 154, size: 64, align: 64, elements: !493)
!493 = !{!494}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !492, file: !277, line: 155, baseType: !467, size: 64, align: 64)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "command_queue", scope: !175, file: !169, line: 380, baseType: !496, size: 64, align: 64, offset: 832)
!496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !497, size: 64, align: 64)
!497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterCommand", file: !277, line: 38, size: 320, align: 64, elements: !498)
!498 = !{!499, !500, !501, !502, !503}
!499 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !497, file: !277, line: 39, baseType: !210, size: 64, align: 64)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !497, file: !277, line: 40, baseType: !431, size: 64, align: 64, offset: 64)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !497, file: !277, line: 41, baseType: !431, size: 64, align: 64, offset: 128)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !497, file: !277, line: 42, baseType: !200, size: 32, align: 32, offset: 192)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !497, file: !277, line: 43, baseType: !496, size: 64, align: 64, offset: 256)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "enable_str", scope: !175, file: !169, line: 382, baseType: !431, size: 64, align: 64, offset: 896)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !175, file: !169, line: 383, baseType: !191, size: 64, align: 64, offset: 960)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "var_values", scope: !175, file: !169, line: 384, baseType: !507, size: 64, align: 64, offset: 1024)
!507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64, align: 64)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "is_disabled", scope: !175, file: !169, line: 385, baseType: !200, size: 32, align: 32, offset: 1088)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !175, file: !169, line: 394, baseType: !328, size: 64, align: 64, offset: 1152)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "nb_threads", scope: !175, file: !169, line: 401, baseType: !200, size: 32, align: 32, offset: 1216)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "ready", scope: !175, file: !169, line: 408, baseType: !443, size: 32, align: 32, offset: 1248)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !175, file: !169, line: 424, baseType: !200, size: 32, align: 32, offset: 1280)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "srcpad", scope: !170, file: !169, line: 441, baseType: !439, size: 64, align: 64, offset: 64)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !170, file: !169, line: 443, baseType: !173, size: 64, align: 64, offset: 128)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "dstpad", scope: !170, file: !169, line: 444, baseType: !439, size: 64, align: 64, offset: 192)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !170, file: !169, line: 446, baseType: !3, size: 32, align: 32, offset: 256)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !170, file: !169, line: 449, baseType: !200, size: 32, align: 32, offset: 288)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !170, file: !169, line: 450, baseType: !200, size: 32, align: 32, offset: 320)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !170, file: !169, line: 451, baseType: !213, size: 64, align: 32, offset: 352)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !170, file: !169, line: 453, baseType: !317, size: 64, align: 64, offset: 448)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !170, file: !169, line: 454, baseType: !200, size: 32, align: 32, offset: 512)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !170, file: !169, line: 456, baseType: !200, size: 32, align: 32, offset: 544)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !170, file: !169, line: 465, baseType: !213, size: 64, align: 32, offset: 576)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "in_formats", scope: !170, file: !169, line: 481, baseType: !525, size: 64, align: 64, offset: 640)
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64, align: 64)
!526 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterFormats", file: !169, line: 70, baseType: !527)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterFormats", file: !528, line: 64, size: 256, align: 64, elements: !529)
!528 = !DIFile(filename: "libavfilter/formats.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!529 = !{!530, !531, !532, !533}
!530 = !DIDerivedType(tag: DW_TAG_member, name: "nb_formats", scope: !527, file: !528, line: 65, baseType: !443, size: 32, align: 32)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "formats", scope: !527, file: !528, line: 66, baseType: !475, size: 64, align: 64, offset: 64)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !527, file: !528, line: 68, baseType: !443, size: 32, align: 32, offset: 128)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !527, file: !528, line: 69, baseType: !534, size: 64, align: 64, offset: 192)
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !535, size: 64, align: 64)
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 64, align: 64)
!536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 64, align: 64)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "out_formats", scope: !170, file: !169, line: 482, baseType: !525, size: 64, align: 64, offset: 704)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "in_samplerates", scope: !170, file: !169, line: 488, baseType: !525, size: 64, align: 64, offset: 768)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "out_samplerates", scope: !170, file: !169, line: 489, baseType: !525, size: 64, align: 64, offset: 832)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "in_channel_layouts", scope: !170, file: !169, line: 490, baseType: !541, size: 64, align: 64, offset: 896)
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64, align: 64)
!542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterChannelLayouts", file: !528, line: 85, size: 256, align: 64, elements: !543)
!543 = !{!544, !546, !547, !548, !549, !550}
!544 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !542, file: !528, line: 86, baseType: !545, size: 64, align: 64)
!545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64, align: 64)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "nb_channel_layouts", scope: !542, file: !528, line: 87, baseType: !200, size: 32, align: 32, offset: 64)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "all_layouts", scope: !542, file: !528, line: 88, baseType: !186, size: 8, align: 8, offset: 96)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "all_counts", scope: !542, file: !528, line: 89, baseType: !186, size: 8, align: 8, offset: 104)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !542, file: !528, line: 91, baseType: !443, size: 32, align: 32, offset: 128)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !542, file: !528, line: 92, baseType: !551, size: 64, align: 64, offset: 192)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64, align: 64)
!552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 64, align: 64)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "out_channel_layouts", scope: !170, file: !169, line: 491, baseType: !541, size: 64, align: 64, offset: 960)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "request_samples", scope: !170, file: !169, line: 500, baseType: !200, size: 32, align: 32, offset: 1024)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !170, file: !169, line: 507, baseType: !168, size: 32, align: 32, offset: 1056)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "graph", scope: !170, file: !169, line: 512, baseType: !449, size: 64, align: 64, offset: 1088)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "current_pts", scope: !170, file: !169, line: 518, baseType: !206, size: 64, align: 64, offset: 1152)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "current_pts_us", scope: !170, file: !169, line: 524, baseType: !206, size: 64, align: 64, offset: 1216)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "age_index", scope: !170, file: !169, line: 529, baseType: !200, size: 32, align: 32, offset: 1280)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "frame_rate", scope: !170, file: !169, line: 542, baseType: !213, size: 64, align: 32, offset: 1312)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "partial_buf", scope: !170, file: !169, line: 547, baseType: !285, size: 64, align: 64, offset: 1408)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "partial_buf_size", scope: !170, file: !169, line: 553, baseType: !200, size: 32, align: 32, offset: 1472)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "min_samples", scope: !170, file: !169, line: 562, baseType: !200, size: 32, align: 32, offset: 1504)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "max_samples", scope: !170, file: !169, line: 568, baseType: !200, size: 32, align: 32, offset: 1536)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !170, file: !169, line: 573, baseType: !200, size: 32, align: 32, offset: 1568)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !170, file: !169, line: 578, baseType: !443, size: 32, align: 32, offset: 1600)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "frame_count_in", scope: !170, file: !169, line: 583, baseType: !206, size: 64, align: 64, offset: 1664)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "frame_count_out", scope: !170, file: !169, line: 583, baseType: !206, size: 64, align: 64, offset: 1728)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "frame_pool", scope: !170, file: !169, line: 588, baseType: !191, size: 64, align: 64, offset: 1792)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "frame_wanted_out", scope: !170, file: !169, line: 595, baseType: !200, size: 32, align: 32, offset: 1856)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !170, file: !169, line: 601, baseType: !328, size: 64, align: 64, offset: 1920)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !170, file: !169, line: 610, baseType: !573, size: 491520, align: 8, offset: 1984)
!573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, size: 491520, align: 8, elements: !574)
!574 = !{!575}
!575 = !DISubrange(count: 61440)
!576 = !{!577, !578, !579}
!577 = !DIEnumerator(name: "AVLINK_UNINIT", value: 0)
!578 = !DIEnumerator(name: "AVLINK_STARTINIT", value: 1)
!579 = !DIEnumerator(name: "AVLINK_INIT", value: 2)
!580 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !48, line: 64, size: 32, align: 32, elements: !581)
!581 = !{!582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778}
!582 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!583 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!584 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!585 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!586 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!587 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!588 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!589 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!590 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!591 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!592 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!593 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!594 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!595 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!596 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!597 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!598 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!599 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!600 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!601 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!602 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!603 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!604 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!605 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!606 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!607 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!608 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!609 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!610 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!611 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!612 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!613 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!617 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!618 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!619 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!620 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!621 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!622 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!623 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!624 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!626 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!627 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!628 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!629 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!630 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!631 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!632 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!633 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!634 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!637 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!638 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!639 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!640 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!641 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!642 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!643 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!644 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!645 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!646 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!647 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!648 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!649 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!650 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!651 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!652 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!653 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!654 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!655 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!656 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!657 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!658 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!659 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!662 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!663 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!664 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!667 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!668 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!669 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!670 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!671 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!672 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!673 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!674 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!675 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!676 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!677 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!678 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!679 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!680 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!681 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!682 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!683 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!684 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!685 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!686 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!687 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!688 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!689 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!690 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!691 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!692 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!693 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!694 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!695 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!696 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!697 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!698 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!699 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!700 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!701 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!702 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!703 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!704 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!705 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!706 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!707 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!708 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!709 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!710 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!711 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!712 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!713 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!714 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!715 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!716 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!717 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!718 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!719 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!720 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!721 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!722 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!723 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!724 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!725 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!726 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!727 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!728 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!729 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!730 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!731 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!732 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!733 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!734 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!735 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!736 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!737 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!738 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!739 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!740 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!741 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!742 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!743 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!744 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!745 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!746 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!747 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!748 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!749 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!750 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!751 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!752 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!753 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!754 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!755 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!756 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!757 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!758 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!759 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!760 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!761 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!762 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!763 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!764 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!765 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!766 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!767 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!768 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!769 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!770 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!771 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!772 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!773 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!774 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!775 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!776 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!777 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!778 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!779 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !780, line: 58, size: 32, align: 32, elements: !781)
!780 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!781 = !{!782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795}
!782 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!783 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!784 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!785 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!786 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!787 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!788 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!789 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!790 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!791 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!792 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!793 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!794 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!795 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!796 = !{!200, !443, !797, !210, !191}
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64, align: 64)
!798 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!799 = !{!800, !802, !806, !807, !808}
!800 = distinct !DIGlobalVariable(name: "ff_avf_showcqt", scope: !0, file: !801, line: 1592, type: !267, isLocal: false, isDefinition: true, variable: %struct.AVFilter* @ff_avf_showcqt)
!801 = !DIFile(filename: "libavfilter/avf_showcqt.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!802 = distinct !DIGlobalVariable(name: "showcqt_inputs", scope: !0, file: !801, line: 1573, type: !803, isLocal: true, isDefinition: true, variable: [2 x %struct.AVFilterPad]* @showcqt_inputs)
!803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !274, size: 1152, align: 64, elements: !804)
!804 = !{!805}
!805 = !DISubrange(count: 2)
!806 = distinct !DIGlobalVariable(name: "showcqt_outputs", scope: !0, file: !801, line: 1582, type: !803, isLocal: true, isDefinition: true, variable: [2 x %struct.AVFilterPad]* @showcqt_outputs)
!807 = distinct !DIGlobalVariable(name: "showcqt_class", scope: !0, file: !801, line: 106, type: !179, isLocal: true, isDefinition: true, variable: %struct.AVClass* @showcqt_class)
!808 = distinct !DIGlobalVariable(name: "showcqt_options", scope: !0, file: !801, line: 60, type: !809, isLocal: true, isDefinition: true, variable: <{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption }>* @showcqt_options)
!809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !810, size: 22016, align: 64, elements: !812)
!810 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !811)
!811 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOption", file: !126, line: 301, baseType: !195)
!812 = !{!813}
!813 = !DISubrange(count: 43)
!814 = !{i32 2, !"Dwarf Version", i32 4}
!815 = !{i32 2, !"Debug Info Version", i32 3}
!816 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!817 = distinct !DISubprogram(name: "init", scope: !801, file: !801, line: 1256, type: !410, isLocal: true, isDefinition: true, scopeLine: 1257, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!818 = !{}
!819 = !DILocalVariable(name: "ctx", arg: 1, scope: !817, file: !801, line: 1256, type: !173)
!820 = !DIExpression()
!821 = !DILocation(line: 1256, column: 56, scope: !817)
!822 = !DILocalVariable(name: "s", scope: !817, file: !801, line: 1258, type: !823)
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 64, align: 64)
!824 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShowCQTContext", file: !825, line: 123, baseType: !826)
!825 = !DIFile(filename: "libavfilter/avf_showcqt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShowCQTContext", file: !825, line: 46, size: 4288, align: 64, elements: !827)
!827 = !{!828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !847, !857, !864, !865, !866, !867, !868, !869, !870, !871, !890, !891, !892, !893, !894, !898, !902, !910, !914, !922, !926, !930, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !826, file: !825, line: 47, baseType: !178, size: 64, align: 64)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !826, file: !825, line: 48, baseType: !173, size: 64, align: 64, offset: 64)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "axis_frame", scope: !826, file: !825, line: 49, baseType: !285, size: 64, align: 64, offset: 128)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "sono_frame", scope: !826, file: !825, line: 50, baseType: !285, size: 64, align: 64, offset: 192)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !826, file: !825, line: 51, baseType: !580, size: 32, align: 32, offset: 256)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "sono_idx", scope: !826, file: !825, line: 52, baseType: !200, size: 32, align: 32, offset: 288)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "sono_count", scope: !826, file: !825, line: 53, baseType: !200, size: 32, align: 32, offset: 320)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !826, file: !825, line: 54, baseType: !200, size: 32, align: 32, offset: 352)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "step_frac", scope: !826, file: !825, line: 55, baseType: !213, size: 64, align: 32, offset: 384)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "remaining_frac", scope: !826, file: !825, line: 56, baseType: !200, size: 32, align: 32, offset: 448)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "remaining_fill", scope: !826, file: !825, line: 57, baseType: !200, size: 32, align: 32, offset: 480)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "remaining_fill_max", scope: !826, file: !825, line: 58, baseType: !200, size: 32, align: 32, offset: 512)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "next_pts", scope: !826, file: !825, line: 59, baseType: !206, size: 64, align: 64, offset: 576)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "freq", scope: !826, file: !825, line: 60, baseType: !507, size: 64, align: 64, offset: 640)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "fft_ctx", scope: !826, file: !825, line: 61, baseType: !843, size: 64, align: 64, offset: 704)
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64, align: 64)
!844 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTContext", file: !845, line: 41, baseType: !846)
!845 = !DIFile(filename: "./libavcodec/avfft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!846 = !DICompositeType(tag: DW_TAG_structure_type, name: "FFTContext", file: !845, line: 41, flags: DIFlagFwdDecl)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "coeffs", scope: !826, file: !825, line: 62, baseType: !848, size: 64, align: 64, offset: 768)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64, align: 64)
!849 = !DIDerivedType(tag: DW_TAG_typedef, name: "Coeffs", file: !825, line: 31, baseType: !850)
!850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Coeffs", file: !825, line: 28, size: 128, align: 64, elements: !851)
!851 = !{!852, !855, !856}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !850, file: !825, line: 29, baseType: !853, size: 64, align: 64)
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64, align: 64)
!854 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTSample", file: !845, line: 35, baseType: !798)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !850, file: !825, line: 30, baseType: !200, size: 32, align: 32, offset: 64)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !850, file: !825, line: 30, baseType: !200, size: 32, align: 32, offset: 96)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "fft_data", scope: !826, file: !825, line: 63, baseType: !858, size: 64, align: 64, offset: 832)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 64, align: 64)
!859 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTComplex", file: !845, line: 39, baseType: !860)
!860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTComplex", file: !845, line: 37, size: 64, align: 32, elements: !861)
!861 = !{!862, !863}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "re", scope: !860, file: !845, line: 38, baseType: !854, size: 32, align: 32)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !860, file: !845, line: 38, baseType: !854, size: 32, align: 32, offset: 32)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "fft_result", scope: !826, file: !825, line: 64, baseType: !858, size: 64, align: 64, offset: 896)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "cqt_result", scope: !826, file: !825, line: 65, baseType: !858, size: 64, align: 64, offset: 960)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "attack_data", scope: !826, file: !825, line: 66, baseType: !797, size: 64, align: 64, offset: 1024)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "fft_bits", scope: !826, file: !825, line: 67, baseType: !200, size: 32, align: 32, offset: 1088)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "fft_len", scope: !826, file: !825, line: 68, baseType: !200, size: 32, align: 32, offset: 1120)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "cqt_len", scope: !826, file: !825, line: 69, baseType: !200, size: 32, align: 32, offset: 1152)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "cqt_align", scope: !826, file: !825, line: 70, baseType: !200, size: 32, align: 32, offset: 1184)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "c_buf", scope: !826, file: !825, line: 71, baseType: !872, size: 64, align: 64, offset: 1216)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64, align: 64)
!873 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorFloat", file: !825, line: 44, baseType: !874)
!874 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !825, line: 41, size: 96, align: 32, elements: !875)
!875 = !{!876, !883}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !874, file: !825, line: 42, baseType: !877, size: 96, align: 32)
!877 = !DIDerivedType(tag: DW_TAG_typedef, name: "RGBFloat", file: !825, line: 35, baseType: !878)
!878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RGBFloat", file: !825, line: 33, size: 96, align: 32, elements: !879)
!879 = !{!880, !881, !882}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !878, file: !825, line: 34, baseType: !798, size: 32, align: 32)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !878, file: !825, line: 34, baseType: !798, size: 32, align: 32, offset: 32)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !878, file: !825, line: 34, baseType: !798, size: 32, align: 32, offset: 64)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "yuv", scope: !874, file: !825, line: 43, baseType: !884, size: 96, align: 32)
!884 = !DIDerivedType(tag: DW_TAG_typedef, name: "YUVFloat", file: !825, line: 39, baseType: !885)
!885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "YUVFloat", file: !825, line: 37, size: 96, align: 32, elements: !886)
!886 = !{!887, !888, !889}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !885, file: !825, line: 38, baseType: !798, size: 32, align: 32)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !885, file: !825, line: 38, baseType: !798, size: 32, align: 32, offset: 32)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !885, file: !825, line: 38, baseType: !798, size: 32, align: 32, offset: 64)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "h_buf", scope: !826, file: !825, line: 72, baseType: !797, size: 64, align: 64, offset: 1280)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "rcp_h_buf", scope: !826, file: !825, line: 73, baseType: !797, size: 64, align: 64, offset: 1344)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "sono_v_buf", scope: !826, file: !825, line: 74, baseType: !797, size: 64, align: 64, offset: 1408)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "bar_v_buf", scope: !826, file: !825, line: 75, baseType: !797, size: 64, align: 64, offset: 1472)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "cmatrix", scope: !826, file: !825, line: 76, baseType: !895, size: 288, align: 32, offset: 1536)
!895 = !DICompositeType(tag: DW_TAG_array_type, baseType: !798, size: 288, align: 32, elements: !896)
!896 = !{!897, !897}
!897 = !DISubrange(count: 3)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "cscheme_v", scope: !826, file: !825, line: 77, baseType: !899, size: 192, align: 32, offset: 1824)
!899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !798, size: 192, align: 32, elements: !900)
!900 = !{!901}
!901 = !DISubrange(count: 6)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "cqt_calc", scope: !826, file: !825, line: 79, baseType: !903, size: 64, align: 64, offset: 2048)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64, align: 64)
!904 = !DISubroutineType(types: !905)
!905 = !{null, !858, !906, !908, !200, !200}
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64, align: 64)
!907 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !859)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64, align: 64)
!909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !849)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "permute_coeffs", scope: !826, file: !825, line: 81, baseType: !911, size: 64, align: 64, offset: 2112)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64, align: 64)
!912 = !DISubroutineType(types: !913)
!913 = !{null, !797, !200}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "draw_bar", scope: !826, file: !825, line: 82, baseType: !915, size: 64, align: 64, offset: 2176)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64, align: 64)
!916 = !DISubroutineType(types: !917)
!917 = !{null, !285, !918, !918, !920, !200, !798}
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64, align: 64)
!919 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !798)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64, align: 64)
!921 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !873)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "draw_axis", scope: !826, file: !825, line: 84, baseType: !923, size: 64, align: 64, offset: 2240)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64, align: 64)
!924 = !DISubroutineType(types: !925)
!925 = !{null, !285, !285, !920, !200}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "draw_sono", scope: !826, file: !825, line: 85, baseType: !927, size: 64, align: 64, offset: 2304)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64, align: 64)
!928 = !DISubroutineType(types: !929)
!929 = !{null, !285, !285, !200, !200}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "update_sono", scope: !826, file: !825, line: 86, baseType: !931, size: 64, align: 64, offset: 2368)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64, align: 64)
!932 = !DISubroutineType(types: !933)
!933 = !{null, !285, !920, !200}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "fft_time", scope: !826, file: !825, line: 88, baseType: !206, size: 64, align: 64, offset: 2432)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "cqt_time", scope: !826, file: !825, line: 89, baseType: !206, size: 64, align: 64, offset: 2496)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "process_cqt_time", scope: !826, file: !825, line: 90, baseType: !206, size: 64, align: 64, offset: 2560)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "update_sono_time", scope: !826, file: !825, line: 91, baseType: !206, size: 64, align: 64, offset: 2624)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_time", scope: !826, file: !825, line: 92, baseType: !206, size: 64, align: 64, offset: 2688)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "bar_time", scope: !826, file: !825, line: 93, baseType: !206, size: 64, align: 64, offset: 2752)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "axis_time", scope: !826, file: !825, line: 94, baseType: !206, size: 64, align: 64, offset: 2816)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "sono_time", scope: !826, file: !825, line: 95, baseType: !206, size: 64, align: 64, offset: 2880)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !826, file: !825, line: 97, baseType: !200, size: 32, align: 32, offset: 2944)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !826, file: !825, line: 97, baseType: !200, size: 32, align: 32, offset: 2976)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "rate", scope: !826, file: !825, line: 98, baseType: !213, size: 64, align: 32, offset: 3008)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "bar_h", scope: !826, file: !825, line: 99, baseType: !200, size: 32, align: 32, offset: 3072)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "axis_h", scope: !826, file: !825, line: 100, baseType: !200, size: 32, align: 32, offset: 3104)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "sono_h", scope: !826, file: !825, line: 101, baseType: !200, size: 32, align: 32, offset: 3136)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "fullhd", scope: !826, file: !825, line: 102, baseType: !200, size: 32, align: 32, offset: 3168)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "sono_v", scope: !826, file: !825, line: 103, baseType: !431, size: 64, align: 64, offset: 3200)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "bar_v", scope: !826, file: !825, line: 104, baseType: !431, size: 64, align: 64, offset: 3264)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "sono_g", scope: !826, file: !825, line: 105, baseType: !798, size: 32, align: 32, offset: 3328)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "bar_g", scope: !826, file: !825, line: 106, baseType: !798, size: 32, align: 32, offset: 3360)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "bar_t", scope: !826, file: !825, line: 107, baseType: !798, size: 32, align: 32, offset: 3392)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "timeclamp", scope: !826, file: !825, line: 108, baseType: !210, size: 64, align: 64, offset: 3456)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "attack", scope: !826, file: !825, line: 109, baseType: !210, size: 64, align: 64, offset: 3520)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "basefreq", scope: !826, file: !825, line: 110, baseType: !210, size: 64, align: 64, offset: 3584)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "endfreq", scope: !826, file: !825, line: 111, baseType: !210, size: 64, align: 64, offset: 3648)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "coeffclamp", scope: !826, file: !825, line: 112, baseType: !798, size: 32, align: 32, offset: 3712)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "tlength", scope: !826, file: !825, line: 113, baseType: !431, size: 64, align: 64, offset: 3776)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !826, file: !825, line: 114, baseType: !200, size: 32, align: 32, offset: 3840)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "fcount", scope: !826, file: !825, line: 115, baseType: !200, size: 32, align: 32, offset: 3872)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "fontfile", scope: !826, file: !825, line: 116, baseType: !431, size: 64, align: 64, offset: 3904)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "font", scope: !826, file: !825, line: 117, baseType: !431, size: 64, align: 64, offset: 3968)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "fontcolor", scope: !826, file: !825, line: 118, baseType: !431, size: 64, align: 64, offset: 4032)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "axisfile", scope: !826, file: !825, line: 119, baseType: !431, size: 64, align: 64, offset: 4096)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "axis", scope: !826, file: !825, line: 120, baseType: !200, size: 32, align: 32, offset: 4160)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "csp", scope: !826, file: !825, line: 121, baseType: !200, size: 32, align: 32, offset: 4192)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "cscheme", scope: !826, file: !825, line: 122, baseType: !431, size: 64, align: 64, offset: 4224)
!969 = !DILocation(line: 1258, column: 21, scope: !817)
!970 = !DILocation(line: 1258, column: 25, scope: !817)
!971 = !DILocation(line: 1258, column: 30, scope: !817)
!972 = !DILocation(line: 1259, column: 14, scope: !817)
!973 = !DILocation(line: 1259, column: 5, scope: !817)
!974 = !DILocation(line: 1259, column: 8, scope: !817)
!975 = !DILocation(line: 1259, column: 12, scope: !817)
!976 = !DILocation(line: 1261, column: 10, scope: !977)
!977 = distinct !DILexicalBlock(scope: !817, file: !801, line: 1261, column: 9)
!978 = !DILocation(line: 1261, column: 13, scope: !977)
!979 = !DILocation(line: 1261, column: 9, scope: !817)
!980 = !DILocation(line: 1262, column: 16, scope: !981)
!981 = distinct !DILexicalBlock(scope: !977, file: !801, line: 1261, column: 21)
!982 = !DILocation(line: 1262, column: 9, scope: !981)
!983 = !DILocation(line: 1263, column: 13, scope: !984)
!984 = distinct !DILexicalBlock(scope: !981, file: !801, line: 1263, column: 13)
!985 = !DILocation(line: 1263, column: 16, scope: !984)
!986 = !DILocation(line: 1263, column: 22, scope: !984)
!987 = !DILocation(line: 1263, column: 30, scope: !984)
!988 = !DILocation(line: 1263, column: 33, scope: !989)
!989 = !DILexicalBlockFile(scope: !984, file: !801, discriminator: 1)
!990 = !DILocation(line: 1263, column: 36, scope: !989)
!991 = !DILocation(line: 1263, column: 43, scope: !989)
!992 = !DILocation(line: 1263, column: 13, scope: !989)
!993 = !DILocation(line: 1264, column: 20, scope: !994)
!994 = distinct !DILexicalBlock(scope: !984, file: !801, line: 1263, column: 52)
!995 = !DILocation(line: 1264, column: 13, scope: !994)
!996 = !DILocation(line: 1265, column: 13, scope: !994)
!997 = !DILocation(line: 1267, column: 9, scope: !981)
!998 = !DILocation(line: 1267, column: 12, scope: !981)
!999 = !DILocation(line: 1267, column: 18, scope: !981)
!1000 = !DILocation(line: 1268, column: 9, scope: !981)
!1001 = !DILocation(line: 1268, column: 12, scope: !981)
!1002 = !DILocation(line: 1268, column: 19, scope: !981)
!1003 = !DILocation(line: 1269, column: 9, scope: !981)
!1004 = !DILocation(line: 1269, column: 12, scope: !981)
!1005 = !DILocation(line: 1269, column: 19, scope: !981)
!1006 = !DILocation(line: 1270, column: 5, scope: !981)
!1007 = !DILocation(line: 1272, column: 9, scope: !1008)
!1008 = distinct !DILexicalBlock(scope: !817, file: !801, line: 1272, column: 9)
!1009 = !DILocation(line: 1272, column: 12, scope: !1008)
!1010 = !DILocation(line: 1272, column: 19, scope: !1008)
!1011 = !DILocation(line: 1272, column: 9, scope: !817)
!1012 = !DILocation(line: 1273, column: 21, scope: !1013)
!1013 = distinct !DILexicalBlock(scope: !1008, file: !801, line: 1272, column: 24)
!1014 = !DILocation(line: 1273, column: 24, scope: !1013)
!1015 = !DILocation(line: 1273, column: 30, scope: !1013)
!1016 = !DILocation(line: 1273, column: 9, scope: !1013)
!1017 = !DILocation(line: 1273, column: 12, scope: !1013)
!1018 = !DILocation(line: 1273, column: 19, scope: !1013)
!1019 = !DILocation(line: 1274, column: 13, scope: !1020)
!1020 = distinct !DILexicalBlock(scope: !1013, file: !801, line: 1274, column: 13)
!1021 = !DILocation(line: 1274, column: 16, scope: !1020)
!1022 = !DILocation(line: 1274, column: 23, scope: !1020)
!1023 = !DILocation(line: 1274, column: 13, scope: !1013)
!1024 = !DILocation(line: 1275, column: 13, scope: !1020)
!1025 = !DILocation(line: 1275, column: 16, scope: !1020)
!1026 = !DILocation(line: 1275, column: 22, scope: !1020)
!1027 = !DILocation(line: 1276, column: 13, scope: !1028)
!1028 = distinct !DILexicalBlock(scope: !1013, file: !801, line: 1276, column: 13)
!1029 = !DILocation(line: 1276, column: 16, scope: !1028)
!1030 = !DILocation(line: 1276, column: 22, scope: !1028)
!1031 = !DILocation(line: 1276, column: 27, scope: !1028)
!1032 = !DILocation(line: 1276, column: 30, scope: !1033)
!1033 = !DILexicalBlockFile(scope: !1028, file: !801, discriminator: 1)
!1034 = !DILocation(line: 1276, column: 33, scope: !1033)
!1035 = !DILocation(line: 1276, column: 40, scope: !1033)
!1036 = !DILocation(line: 1276, column: 13, scope: !1033)
!1037 = !DILocation(line: 1277, column: 25, scope: !1028)
!1038 = !DILocation(line: 1277, column: 28, scope: !1028)
!1039 = !DILocation(line: 1277, column: 37, scope: !1028)
!1040 = !DILocation(line: 1277, column: 40, scope: !1028)
!1041 = !DILocation(line: 1277, column: 35, scope: !1028)
!1042 = !DILocation(line: 1277, column: 48, scope: !1028)
!1043 = !DILocation(line: 1277, column: 51, scope: !1028)
!1044 = !DILocation(line: 1277, column: 46, scope: !1028)
!1045 = !DILocation(line: 1277, column: 13, scope: !1028)
!1046 = !DILocation(line: 1277, column: 16, scope: !1028)
!1047 = !DILocation(line: 1277, column: 23, scope: !1028)
!1048 = !DILocation(line: 1278, column: 13, scope: !1049)
!1049 = distinct !DILexicalBlock(scope: !1013, file: !801, line: 1278, column: 13)
!1050 = !DILocation(line: 1278, column: 16, scope: !1049)
!1051 = !DILocation(line: 1278, column: 22, scope: !1049)
!1052 = !DILocation(line: 1278, column: 27, scope: !1049)
!1053 = !DILocation(line: 1278, column: 30, scope: !1054)
!1054 = !DILexicalBlockFile(scope: !1049, file: !801, discriminator: 1)
!1055 = !DILocation(line: 1278, column: 33, scope: !1054)
!1056 = !DILocation(line: 1278, column: 40, scope: !1054)
!1057 = !DILocation(line: 1278, column: 13, scope: !1054)
!1058 = !DILocation(line: 1279, column: 27, scope: !1049)
!1059 = !DILocation(line: 1279, column: 30, scope: !1049)
!1060 = !DILocation(line: 1279, column: 41, scope: !1049)
!1061 = !DILocation(line: 1279, column: 44, scope: !1049)
!1062 = !DILocation(line: 1279, column: 53, scope: !1049)
!1063 = !DILocation(line: 1279, column: 56, scope: !1049)
!1064 = !DILocation(line: 1279, column: 51, scope: !1049)
!1065 = !DILocation(line: 1279, column: 38, scope: !1049)
!1066 = !DILocation(line: 1279, column: 26, scope: !1049)
!1067 = !DILocation(line: 1279, column: 66, scope: !1054)
!1068 = !DILocation(line: 1279, column: 69, scope: !1054)
!1069 = !DILocation(line: 1279, column: 78, scope: !1054)
!1070 = !DILocation(line: 1279, column: 81, scope: !1054)
!1071 = !DILocation(line: 1279, column: 76, scope: !1054)
!1072 = !DILocation(line: 1279, column: 26, scope: !1054)
!1073 = !DILocation(line: 1279, column: 91, scope: !1074)
!1074 = !DILexicalBlockFile(scope: !1049, file: !801, discriminator: 2)
!1075 = !DILocation(line: 1279, column: 94, scope: !1074)
!1076 = !DILocation(line: 1279, column: 26, scope: !1074)
!1077 = !DILocation(line: 1279, column: 26, scope: !1078)
!1078 = !DILexicalBlockFile(scope: !1049, file: !801, discriminator: 3)
!1079 = !DILocation(line: 1279, column: 13, scope: !1078)
!1080 = !DILocation(line: 1279, column: 16, scope: !1078)
!1081 = !DILocation(line: 1279, column: 23, scope: !1078)
!1082 = !DILocation(line: 1280, column: 13, scope: !1083)
!1083 = distinct !DILexicalBlock(scope: !1013, file: !801, line: 1280, column: 13)
!1084 = !DILocation(line: 1280, column: 16, scope: !1083)
!1085 = !DILocation(line: 1280, column: 22, scope: !1083)
!1086 = !DILocation(line: 1280, column: 26, scope: !1083)
!1087 = !DILocation(line: 1280, column: 29, scope: !1088)
!1088 = !DILexicalBlockFile(scope: !1083, file: !801, discriminator: 1)
!1089 = !DILocation(line: 1280, column: 32, scope: !1088)
!1090 = !DILocation(line: 1280, column: 39, scope: !1088)
!1091 = !DILocation(line: 1280, column: 13, scope: !1088)
!1092 = !DILocation(line: 1281, column: 27, scope: !1083)
!1093 = !DILocation(line: 1281, column: 30, scope: !1083)
!1094 = !DILocation(line: 1281, column: 41, scope: !1083)
!1095 = !DILocation(line: 1281, column: 44, scope: !1083)
!1096 = !DILocation(line: 1281, column: 53, scope: !1083)
!1097 = !DILocation(line: 1281, column: 56, scope: !1083)
!1098 = !DILocation(line: 1281, column: 51, scope: !1083)
!1099 = !DILocation(line: 1281, column: 38, scope: !1083)
!1100 = !DILocation(line: 1281, column: 26, scope: !1083)
!1101 = !DILocation(line: 1281, column: 67, scope: !1088)
!1102 = !DILocation(line: 1281, column: 70, scope: !1088)
!1103 = !DILocation(line: 1281, column: 79, scope: !1088)
!1104 = !DILocation(line: 1281, column: 82, scope: !1088)
!1105 = !DILocation(line: 1281, column: 77, scope: !1088)
!1106 = !DILocation(line: 1281, column: 26, scope: !1088)
!1107 = !DILocation(line: 1281, column: 93, scope: !1108)
!1108 = !DILexicalBlockFile(scope: !1083, file: !801, discriminator: 2)
!1109 = !DILocation(line: 1281, column: 96, scope: !1108)
!1110 = !DILocation(line: 1281, column: 26, scope: !1108)
!1111 = !DILocation(line: 1281, column: 26, scope: !1112)
!1112 = !DILexicalBlockFile(scope: !1083, file: !801, discriminator: 3)
!1113 = !DILocation(line: 1281, column: 13, scope: !1112)
!1114 = !DILocation(line: 1281, column: 16, scope: !1112)
!1115 = !DILocation(line: 1281, column: 23, scope: !1112)
!1116 = !DILocation(line: 1282, column: 5, scope: !1013)
!1117 = !DILocation(line: 1284, column: 9, scope: !1118)
!1118 = distinct !DILexicalBlock(scope: !817, file: !801, line: 1284, column: 9)
!1119 = !DILocation(line: 1284, column: 12, scope: !1118)
!1120 = !DILocation(line: 1284, column: 18, scope: !1118)
!1121 = !DILocation(line: 1284, column: 9, scope: !817)
!1122 = !DILocation(line: 1285, column: 21, scope: !1123)
!1123 = distinct !DILexicalBlock(scope: !1118, file: !801, line: 1284, column: 23)
!1124 = !DILocation(line: 1285, column: 24, scope: !1123)
!1125 = !DILocation(line: 1285, column: 33, scope: !1123)
!1126 = !DILocation(line: 1285, column: 36, scope: !1123)
!1127 = !DILocation(line: 1285, column: 31, scope: !1123)
!1128 = !DILocation(line: 1285, column: 44, scope: !1123)
!1129 = !DILocation(line: 1285, column: 9, scope: !1123)
!1130 = !DILocation(line: 1285, column: 12, scope: !1123)
!1131 = !DILocation(line: 1285, column: 18, scope: !1123)
!1132 = !DILocation(line: 1286, column: 13, scope: !1133)
!1133 = distinct !DILexicalBlock(scope: !1123, file: !801, line: 1286, column: 13)
!1134 = !DILocation(line: 1286, column: 16, scope: !1133)
!1135 = !DILocation(line: 1286, column: 22, scope: !1133)
!1136 = !DILocation(line: 1286, column: 13, scope: !1123)
!1137 = !DILocation(line: 1287, column: 13, scope: !1133)
!1138 = !DILocation(line: 1287, column: 16, scope: !1133)
!1139 = !DILocation(line: 1287, column: 21, scope: !1133)
!1140 = !DILocation(line: 1288, column: 13, scope: !1141)
!1141 = distinct !DILexicalBlock(scope: !1123, file: !801, line: 1288, column: 13)
!1142 = !DILocation(line: 1288, column: 16, scope: !1141)
!1143 = !DILocation(line: 1288, column: 23, scope: !1141)
!1144 = !DILocation(line: 1288, column: 13, scope: !1123)
!1145 = !DILocation(line: 1289, column: 24, scope: !1141)
!1146 = !DILocation(line: 1289, column: 27, scope: !1141)
!1147 = !DILocation(line: 1289, column: 36, scope: !1141)
!1148 = !DILocation(line: 1289, column: 39, scope: !1141)
!1149 = !DILocation(line: 1289, column: 34, scope: !1141)
!1150 = !DILocation(line: 1289, column: 48, scope: !1141)
!1151 = !DILocation(line: 1289, column: 51, scope: !1141)
!1152 = !DILocation(line: 1289, column: 46, scope: !1141)
!1153 = !DILocation(line: 1289, column: 13, scope: !1141)
!1154 = !DILocation(line: 1289, column: 16, scope: !1141)
!1155 = !DILocation(line: 1289, column: 22, scope: !1141)
!1156 = !DILocation(line: 1290, column: 5, scope: !1123)
!1157 = !DILocation(line: 1292, column: 9, scope: !1158)
!1158 = distinct !DILexicalBlock(scope: !817, file: !801, line: 1292, column: 9)
!1159 = !DILocation(line: 1292, column: 12, scope: !1158)
!1160 = !DILocation(line: 1292, column: 19, scope: !1158)
!1161 = !DILocation(line: 1292, column: 9, scope: !817)
!1162 = !DILocation(line: 1293, column: 21, scope: !1158)
!1163 = !DILocation(line: 1293, column: 24, scope: !1158)
!1164 = !DILocation(line: 1293, column: 33, scope: !1158)
!1165 = !DILocation(line: 1293, column: 36, scope: !1158)
!1166 = !DILocation(line: 1293, column: 31, scope: !1158)
!1167 = !DILocation(line: 1293, column: 45, scope: !1158)
!1168 = !DILocation(line: 1293, column: 48, scope: !1158)
!1169 = !DILocation(line: 1293, column: 43, scope: !1158)
!1170 = !DILocation(line: 1293, column: 9, scope: !1158)
!1171 = !DILocation(line: 1293, column: 12, scope: !1158)
!1172 = !DILocation(line: 1293, column: 19, scope: !1158)
!1173 = !DILocation(line: 1295, column: 10, scope: !1174)
!1174 = distinct !DILexicalBlock(scope: !817, file: !801, line: 1295, column: 9)
!1175 = !DILocation(line: 1295, column: 13, scope: !1174)
!1176 = !DILocation(line: 1295, column: 19, scope: !1174)
!1177 = !DILocation(line: 1295, column: 24, scope: !1174)
!1178 = !DILocation(line: 1295, column: 28, scope: !1179)
!1179 = !DILexicalBlockFile(scope: !1174, file: !801, discriminator: 1)
!1180 = !DILocation(line: 1295, column: 31, scope: !1179)
!1181 = !DILocation(line: 1295, column: 38, scope: !1179)
!1182 = !DILocation(line: 1295, column: 43, scope: !1179)
!1183 = !DILocation(line: 1295, column: 47, scope: !1184)
!1184 = !DILexicalBlockFile(scope: !1174, file: !801, discriminator: 2)
!1185 = !DILocation(line: 1295, column: 50, scope: !1184)
!1186 = !DILocation(line: 1295, column: 56, scope: !1184)
!1187 = !DILocation(line: 1295, column: 61, scope: !1184)
!1188 = !DILocation(line: 1295, column: 65, scope: !1189)
!1189 = !DILexicalBlockFile(scope: !1174, file: !801, discriminator: 3)
!1190 = !DILocation(line: 1295, column: 68, scope: !1189)
!1191 = !DILocation(line: 1295, column: 75, scope: !1189)
!1192 = !DILocation(line: 1295, column: 80, scope: !1189)
!1193 = !DILocation(line: 1295, column: 84, scope: !1194)
!1194 = !DILexicalBlockFile(scope: !1174, file: !801, discriminator: 4)
!1195 = !DILocation(line: 1295, column: 87, scope: !1194)
!1196 = !DILocation(line: 1295, column: 94, scope: !1194)
!1197 = !DILocation(line: 1295, column: 99, scope: !1194)
!1198 = !DILocation(line: 1296, column: 10, scope: !1174)
!1199 = !DILocation(line: 1296, column: 13, scope: !1174)
!1200 = !DILocation(line: 1296, column: 19, scope: !1174)
!1201 = !DILocation(line: 1296, column: 24, scope: !1174)
!1202 = !DILocation(line: 1296, column: 28, scope: !1179)
!1203 = !DILocation(line: 1296, column: 31, scope: !1179)
!1204 = !DILocation(line: 1296, column: 38, scope: !1179)
!1205 = !DILocation(line: 1296, column: 43, scope: !1179)
!1206 = !DILocation(line: 1296, column: 47, scope: !1184)
!1207 = !DILocation(line: 1296, column: 50, scope: !1184)
!1208 = !DILocation(line: 1296, column: 57, scope: !1184)
!1209 = !DILocation(line: 1296, column: 62, scope: !1184)
!1210 = !DILocation(line: 1296, column: 66, scope: !1189)
!1211 = !DILocation(line: 1296, column: 69, scope: !1189)
!1212 = !DILocation(line: 1296, column: 77, scope: !1189)
!1213 = !DILocation(line: 1296, column: 80, scope: !1189)
!1214 = !DILocation(line: 1296, column: 75, scope: !1189)
!1215 = !DILocation(line: 1296, column: 88, scope: !1189)
!1216 = !DILocation(line: 1297, column: 10, scope: !1174)
!1217 = !DILocation(line: 1297, column: 13, scope: !1174)
!1218 = !DILocation(line: 1297, column: 22, scope: !1174)
!1219 = !DILocation(line: 1297, column: 25, scope: !1174)
!1220 = !DILocation(line: 1297, column: 20, scope: !1174)
!1221 = !DILocation(line: 1297, column: 33, scope: !1174)
!1222 = !DILocation(line: 1297, column: 37, scope: !1179)
!1223 = !DILocation(line: 1297, column: 40, scope: !1179)
!1224 = !DILocation(line: 1297, column: 49, scope: !1179)
!1225 = !DILocation(line: 1297, column: 52, scope: !1179)
!1226 = !DILocation(line: 1297, column: 47, scope: !1179)
!1227 = !DILocation(line: 1297, column: 60, scope: !1179)
!1228 = !DILocation(line: 1297, column: 64, scope: !1184)
!1229 = !DILocation(line: 1297, column: 67, scope: !1184)
!1230 = !DILocation(line: 1297, column: 75, scope: !1184)
!1231 = !DILocation(line: 1297, column: 78, scope: !1184)
!1232 = !DILocation(line: 1297, column: 73, scope: !1184)
!1233 = !DILocation(line: 1297, column: 87, scope: !1184)
!1234 = !DILocation(line: 1297, column: 90, scope: !1184)
!1235 = !DILocation(line: 1297, column: 85, scope: !1184)
!1236 = !DILocation(line: 1297, column: 100, scope: !1184)
!1237 = !DILocation(line: 1297, column: 103, scope: !1184)
!1238 = !DILocation(line: 1297, column: 97, scope: !1184)
!1239 = !DILocation(line: 1295, column: 9, scope: !1240)
!1240 = !DILexicalBlockFile(scope: !817, file: !801, discriminator: 5)
!1241 = !DILocation(line: 1298, column: 16, scope: !1242)
!1242 = distinct !DILexicalBlock(scope: !1174, file: !801, line: 1297, column: 112)
!1243 = !DILocation(line: 1298, column: 9, scope: !1242)
!1244 = !DILocation(line: 1299, column: 9, scope: !1242)
!1245 = !DILocation(line: 1302, column: 10, scope: !1246)
!1246 = distinct !DILexicalBlock(scope: !817, file: !801, line: 1302, column: 9)
!1247 = !DILocation(line: 1302, column: 13, scope: !1246)
!1248 = !DILocation(line: 1302, column: 9, scope: !817)
!1249 = !DILocation(line: 1303, column: 9, scope: !1250)
!1250 = distinct !DILexicalBlock(scope: !1246, file: !801, line: 1302, column: 21)
!1251 = distinct !{!1251, !1249}
!1252 = !DILocation(line: 1304, column: 13, scope: !1253)
!1253 = distinct !DILexicalBlock(scope: !1250, file: !801, line: 1303, column: 12)
!1254 = !DILocation(line: 1304, column: 16, scope: !1253)
!1255 = !DILocation(line: 1304, column: 22, scope: !1253)
!1256 = !DILocation(line: 1305, column: 9, scope: !1253)
!1257 = !DILocation(line: 1305, column: 17, scope: !1258)
!1258 = !DILexicalBlockFile(scope: !1250, file: !801, discriminator: 1)
!1259 = !DILocation(line: 1305, column: 20, scope: !1258)
!1260 = !DILocation(line: 1305, column: 29, scope: !1258)
!1261 = !DILocation(line: 1305, column: 32, scope: !1258)
!1262 = !DILocation(line: 1305, column: 27, scope: !1258)
!1263 = !DILocation(line: 1305, column: 38, scope: !1258)
!1264 = !DILocation(line: 1305, column: 45, scope: !1258)
!1265 = !DILocation(line: 1305, column: 48, scope: !1266)
!1266 = !DILexicalBlockFile(scope: !1250, file: !801, discriminator: 2)
!1267 = !DILocation(line: 1305, column: 51, scope: !1266)
!1268 = !DILocation(line: 1305, column: 58, scope: !1266)
!1269 = !DILocation(line: 1305, column: 9, scope: !1270)
!1270 = !DILexicalBlockFile(scope: !1253, file: !801, discriminator: 3)
!1271 = !DILocation(line: 1306, column: 5, scope: !1250)
!1272 = !DILocation(line: 1308, column: 22, scope: !817)
!1273 = !DILocation(line: 1308, column: 5, scope: !817)
!1274 = !DILocation(line: 1310, column: 25, scope: !817)
!1275 = !DILocation(line: 1310, column: 12, scope: !817)
!1276 = !DILocation(line: 1310, column: 5, scope: !817)
!1277 = !DILocation(line: 1311, column: 1, scope: !817)
!1278 = distinct !DISubprogram(name: "uninit", scope: !801, file: !801, line: 1313, type: !420, isLocal: true, isDefinition: true, scopeLine: 1314, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!1279 = !DILocalVariable(name: "ctx", arg: 1, scope: !1278, file: !801, line: 1313, type: !173)
!1280 = !DILocation(line: 1313, column: 59, scope: !1278)
!1281 = !DILocation(line: 1315, column: 19, scope: !1278)
!1282 = !DILocation(line: 1315, column: 24, scope: !1278)
!1283 = !DILocation(line: 1315, column: 5, scope: !1278)
!1284 = !DILocation(line: 1316, column: 1, scope: !1278)
!1285 = distinct !DISubprogram(name: "query_formats", scope: !801, file: !801, line: 1318, type: !410, isLocal: true, isDefinition: true, scopeLine: 1319, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!1286 = !DILocalVariable(name: "ctx", arg: 1, scope: !1285, file: !801, line: 1318, type: !173)
!1287 = !DILocation(line: 1318, column: 43, scope: !1285)
!1288 = !DILocalVariable(name: "formats", scope: !1285, file: !801, line: 1320, type: !525)
!1289 = !DILocation(line: 1320, column: 22, scope: !1285)
!1290 = !DILocalVariable(name: "layouts", scope: !1285, file: !801, line: 1321, type: !1291)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 64, align: 64)
!1292 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterChannelLayouts", file: !528, line: 93, baseType: !542)
!1293 = !DILocation(line: 1321, column: 29, scope: !1285)
!1294 = !DILocalVariable(name: "inlink", scope: !1285, file: !801, line: 1322, type: !387)
!1295 = !DILocation(line: 1322, column: 19, scope: !1285)
!1296 = !DILocation(line: 1322, column: 28, scope: !1285)
!1297 = !DILocation(line: 1322, column: 33, scope: !1285)
!1298 = !DILocalVariable(name: "outlink", scope: !1285, file: !801, line: 1323, type: !387)
!1299 = !DILocation(line: 1323, column: 19, scope: !1285)
!1300 = !DILocation(line: 1323, column: 29, scope: !1285)
!1301 = !DILocation(line: 1323, column: 34, scope: !1285)
!1302 = !DILocalVariable(name: "sample_fmts", scope: !1285, file: !801, line: 1324, type: !1303)
!1303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !779, size: 64, align: 32, elements: !804)
!1304 = !DILocation(line: 1324, column: 25, scope: !1285)
!1305 = !DILocalVariable(name: "pix_fmts", scope: !1285, file: !801, line: 1325, type: !1306)
!1306 = !DICompositeType(tag: DW_TAG_array_type, baseType: !580, size: 160, align: 32, elements: !1307)
!1307 = !{!1308}
!1308 = !DISubrange(count: 5)
!1309 = !DILocation(line: 1325, column: 24, scope: !1285)
!1310 = !DILocalVariable(name: "channel_layouts", scope: !1285, file: !801, line: 1329, type: !1311)
!1311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 192, align: 64, elements: !1312)
!1312 = !{!897}
!1313 = !DILocation(line: 1329, column: 13, scope: !1285)
!1314 = !DILocalVariable(name: "ret", scope: !1285, file: !801, line: 1330, type: !200)
!1315 = !DILocation(line: 1330, column: 9, scope: !1285)
!1316 = !DILocation(line: 1333, column: 35, scope: !1285)
!1317 = !DILocation(line: 1333, column: 15, scope: !1285)
!1318 = !DILocation(line: 1333, column: 13, scope: !1285)
!1319 = !DILocation(line: 1334, column: 31, scope: !1320)
!1320 = distinct !DILexicalBlock(scope: !1285, file: !801, line: 1334, column: 9)
!1321 = !DILocation(line: 1334, column: 41, scope: !1320)
!1322 = !DILocation(line: 1334, column: 49, scope: !1320)
!1323 = !DILocation(line: 1334, column: 16, scope: !1320)
!1324 = !DILocation(line: 1334, column: 14, scope: !1320)
!1325 = !DILocation(line: 1334, column: 63, scope: !1320)
!1326 = !DILocation(line: 1334, column: 9, scope: !1285)
!1327 = !DILocation(line: 1335, column: 16, scope: !1320)
!1328 = !DILocation(line: 1335, column: 9, scope: !1320)
!1329 = !DILocation(line: 1337, column: 43, scope: !1285)
!1330 = !DILocation(line: 1337, column: 15, scope: !1285)
!1331 = !DILocation(line: 1337, column: 13, scope: !1285)
!1332 = !DILocation(line: 1338, column: 39, scope: !1333)
!1333 = distinct !DILexicalBlock(scope: !1285, file: !801, line: 1338, column: 9)
!1334 = !DILocation(line: 1338, column: 49, scope: !1333)
!1335 = !DILocation(line: 1338, column: 57, scope: !1333)
!1336 = !DILocation(line: 1338, column: 16, scope: !1333)
!1337 = !DILocation(line: 1338, column: 14, scope: !1333)
!1338 = !DILocation(line: 1338, column: 79, scope: !1333)
!1339 = !DILocation(line: 1338, column: 9, scope: !1285)
!1340 = !DILocation(line: 1339, column: 16, scope: !1333)
!1341 = !DILocation(line: 1339, column: 9, scope: !1333)
!1342 = !DILocation(line: 1341, column: 15, scope: !1285)
!1343 = !DILocation(line: 1341, column: 13, scope: !1285)
!1344 = !DILocation(line: 1342, column: 31, scope: !1345)
!1345 = distinct !DILexicalBlock(scope: !1285, file: !801, line: 1342, column: 9)
!1346 = !DILocation(line: 1342, column: 41, scope: !1345)
!1347 = !DILocation(line: 1342, column: 49, scope: !1345)
!1348 = !DILocation(line: 1342, column: 16, scope: !1345)
!1349 = !DILocation(line: 1342, column: 14, scope: !1345)
!1350 = !DILocation(line: 1342, column: 67, scope: !1345)
!1351 = !DILocation(line: 1342, column: 9, scope: !1285)
!1352 = !DILocation(line: 1343, column: 16, scope: !1345)
!1353 = !DILocation(line: 1343, column: 9, scope: !1345)
!1354 = !DILocation(line: 1346, column: 35, scope: !1285)
!1355 = !DILocation(line: 1346, column: 15, scope: !1285)
!1356 = !DILocation(line: 1346, column: 13, scope: !1285)
!1357 = !DILocation(line: 1347, column: 31, scope: !1358)
!1358 = distinct !DILexicalBlock(scope: !1285, file: !801, line: 1347, column: 9)
!1359 = !DILocation(line: 1347, column: 41, scope: !1358)
!1360 = !DILocation(line: 1347, column: 50, scope: !1358)
!1361 = !DILocation(line: 1347, column: 16, scope: !1358)
!1362 = !DILocation(line: 1347, column: 14, scope: !1358)
!1363 = !DILocation(line: 1347, column: 63, scope: !1358)
!1364 = !DILocation(line: 1347, column: 9, scope: !1285)
!1365 = !DILocation(line: 1348, column: 16, scope: !1358)
!1366 = !DILocation(line: 1348, column: 9, scope: !1358)
!1367 = !DILocation(line: 1350, column: 5, scope: !1285)
!1368 = !DILocation(line: 1351, column: 1, scope: !1285)
!1369 = distinct !DISubprogram(name: "filter_frame", scope: !801, file: !801, line: 1481, type: !395, isLocal: true, isDefinition: true, scopeLine: 1482, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!1370 = !DILocalVariable(name: "inlink", arg: 1, scope: !1369, file: !801, line: 1481, type: !387)
!1371 = !DILocation(line: 1481, column: 39, scope: !1369)
!1372 = !DILocalVariable(name: "insamples", arg: 2, scope: !1369, file: !801, line: 1481, type: !285)
!1373 = !DILocation(line: 1481, column: 56, scope: !1369)
!1374 = !DILocalVariable(name: "ctx", scope: !1369, file: !801, line: 1483, type: !173)
!1375 = !DILocation(line: 1483, column: 22, scope: !1369)
!1376 = !DILocation(line: 1483, column: 28, scope: !1369)
!1377 = !DILocation(line: 1483, column: 36, scope: !1369)
!1378 = !DILocalVariable(name: "outlink", scope: !1369, file: !801, line: 1484, type: !387)
!1379 = !DILocation(line: 1484, column: 19, scope: !1369)
!1380 = !DILocation(line: 1484, column: 29, scope: !1369)
!1381 = !DILocation(line: 1484, column: 34, scope: !1369)
!1382 = !DILocalVariable(name: "s", scope: !1369, file: !801, line: 1485, type: !823)
!1383 = !DILocation(line: 1485, column: 21, scope: !1369)
!1384 = !DILocation(line: 1485, column: 25, scope: !1369)
!1385 = !DILocation(line: 1485, column: 30, scope: !1369)
!1386 = !DILocalVariable(name: "remaining", scope: !1369, file: !801, line: 1486, type: !200)
!1387 = !DILocation(line: 1486, column: 9, scope: !1369)
!1388 = !DILocalVariable(name: "step", scope: !1369, file: !801, line: 1486, type: !200)
!1389 = !DILocation(line: 1486, column: 20, scope: !1369)
!1390 = !DILocalVariable(name: "ret", scope: !1369, file: !801, line: 1486, type: !200)
!1391 = !DILocation(line: 1486, column: 26, scope: !1369)
!1392 = !DILocalVariable(name: "x", scope: !1369, file: !801, line: 1486, type: !200)
!1393 = !DILocation(line: 1486, column: 31, scope: !1369)
!1394 = !DILocalVariable(name: "i", scope: !1369, file: !801, line: 1486, type: !200)
!1395 = !DILocation(line: 1486, column: 34, scope: !1369)
!1396 = !DILocalVariable(name: "j", scope: !1369, file: !801, line: 1486, type: !200)
!1397 = !DILocation(line: 1486, column: 37, scope: !1369)
!1398 = !DILocalVariable(name: "m", scope: !1369, file: !801, line: 1486, type: !200)
!1399 = !DILocation(line: 1486, column: 40, scope: !1369)
!1400 = !DILocalVariable(name: "audio_data", scope: !1369, file: !801, line: 1487, type: !797)
!1401 = !DILocation(line: 1487, column: 12, scope: !1369)
!1402 = !DILocalVariable(name: "out", scope: !1369, file: !801, line: 1488, type: !285)
!1403 = !DILocation(line: 1488, column: 14, scope: !1369)
!1404 = !DILocation(line: 1490, column: 10, scope: !1405)
!1405 = distinct !DILexicalBlock(scope: !1369, file: !801, line: 1490, column: 9)
!1406 = !DILocation(line: 1490, column: 9, scope: !1369)
!1407 = !DILocation(line: 1491, column: 9, scope: !1408)
!1408 = distinct !DILexicalBlock(scope: !1405, file: !801, line: 1490, column: 21)
!1409 = !DILocation(line: 1491, column: 16, scope: !1410)
!1410 = !DILexicalBlockFile(scope: !1408, file: !801, discriminator: 1)
!1411 = !DILocation(line: 1491, column: 19, scope: !1410)
!1412 = !DILocation(line: 1491, column: 36, scope: !1410)
!1413 = !DILocation(line: 1491, column: 39, scope: !1410)
!1414 = !DILocation(line: 1491, column: 34, scope: !1410)
!1415 = !DILocation(line: 1491, column: 9, scope: !1410)
!1416 = !DILocation(line: 1492, column: 33, scope: !1417)
!1417 = distinct !DILexicalBlock(scope: !1408, file: !801, line: 1491, column: 59)
!1418 = !DILocation(line: 1492, column: 36, scope: !1417)
!1419 = !DILocation(line: 1492, column: 43, scope: !1417)
!1420 = !DILocation(line: 1492, column: 48, scope: !1417)
!1421 = !DILocation(line: 1492, column: 51, scope: !1417)
!1422 = !DILocation(line: 1492, column: 46, scope: !1417)
!1423 = !DILocation(line: 1492, column: 72, scope: !1417)
!1424 = !DILocation(line: 1492, column: 75, scope: !1417)
!1425 = !DILocation(line: 1492, column: 70, scope: !1417)
!1426 = !DILocation(line: 1492, column: 21, scope: !1417)
!1427 = !DILocation(line: 1492, column: 24, scope: !1417)
!1428 = !DILocation(line: 1492, column: 13, scope: !1417)
!1429 = !DILocation(line: 1492, column: 118, scope: !1417)
!1430 = !DILocation(line: 1492, column: 121, scope: !1417)
!1431 = !DILocation(line: 1492, column: 116, scope: !1417)
!1432 = !DILocation(line: 1493, column: 28, scope: !1417)
!1433 = !DILocation(line: 1493, column: 19, scope: !1417)
!1434 = !DILocation(line: 1493, column: 17, scope: !1417)
!1435 = !DILocation(line: 1494, column: 17, scope: !1436)
!1436 = distinct !DILexicalBlock(scope: !1417, file: !801, line: 1494, column: 17)
!1437 = !DILocation(line: 1494, column: 21, scope: !1436)
!1438 = !DILocation(line: 1494, column: 17, scope: !1417)
!1439 = !DILocation(line: 1495, column: 24, scope: !1436)
!1440 = !DILocation(line: 1495, column: 17, scope: !1436)
!1441 = !DILocation(line: 1497, column: 20, scope: !1417)
!1442 = !DILocation(line: 1497, column: 23, scope: !1417)
!1443 = !DILocation(line: 1497, column: 31, scope: !1417)
!1444 = !DILocation(line: 1497, column: 34, scope: !1417)
!1445 = !DILocation(line: 1497, column: 44, scope: !1417)
!1446 = !DILocation(line: 1497, column: 50, scope: !1417)
!1447 = !DILocation(line: 1497, column: 53, scope: !1417)
!1448 = !DILocation(line: 1497, column: 48, scope: !1417)
!1449 = !DILocation(line: 1497, column: 71, scope: !1417)
!1450 = !DILocation(line: 1497, column: 74, scope: !1417)
!1451 = !DILocation(line: 1497, column: 84, scope: !1417)
!1452 = !DILocation(line: 1497, column: 69, scope: !1417)
!1453 = !DILocation(line: 1497, column: 28, scope: !1417)
!1454 = !DILocation(line: 1497, column: 18, scope: !1417)
!1455 = !DILocation(line: 1498, column: 34, scope: !1417)
!1456 = !DILocation(line: 1498, column: 37, scope: !1417)
!1457 = !DILocation(line: 1498, column: 47, scope: !1417)
!1458 = !DILocation(line: 1498, column: 53, scope: !1417)
!1459 = !DILocation(line: 1498, column: 56, scope: !1417)
!1460 = !DILocation(line: 1498, column: 51, scope: !1417)
!1461 = !DILocation(line: 1498, column: 74, scope: !1417)
!1462 = !DILocation(line: 1498, column: 77, scope: !1417)
!1463 = !DILocation(line: 1498, column: 87, scope: !1417)
!1464 = !DILocation(line: 1498, column: 72, scope: !1417)
!1465 = !DILocation(line: 1498, column: 13, scope: !1417)
!1466 = !DILocation(line: 1498, column: 16, scope: !1417)
!1467 = !DILocation(line: 1498, column: 31, scope: !1417)
!1468 = !DILocation(line: 1499, column: 20, scope: !1469)
!1469 = distinct !DILexicalBlock(scope: !1417, file: !801, line: 1499, column: 13)
!1470 = !DILocation(line: 1499, column: 18, scope: !1469)
!1471 = !DILocation(line: 1499, column: 25, scope: !1472)
!1472 = !DILexicalBlockFile(scope: !1473, file: !801, discriminator: 1)
!1473 = distinct !DILexicalBlock(scope: !1469, file: !801, line: 1499, column: 13)
!1474 = !DILocation(line: 1499, column: 30, scope: !1472)
!1475 = !DILocation(line: 1499, column: 33, scope: !1472)
!1476 = !DILocation(line: 1499, column: 40, scope: !1472)
!1477 = !DILocation(line: 1499, column: 45, scope: !1472)
!1478 = !DILocation(line: 1499, column: 48, scope: !1472)
!1479 = !DILocation(line: 1499, column: 43, scope: !1472)
!1480 = !DILocation(line: 1499, column: 69, scope: !1472)
!1481 = !DILocation(line: 1499, column: 67, scope: !1472)
!1482 = !DILocation(line: 1499, column: 27, scope: !1472)
!1483 = !DILocation(line: 1499, column: 13, scope: !1472)
!1484 = !DILocation(line: 1500, column: 29, scope: !1473)
!1485 = !DILocation(line: 1500, column: 17, scope: !1473)
!1486 = !DILocation(line: 1500, column: 20, scope: !1473)
!1487 = !DILocation(line: 1500, column: 46, scope: !1473)
!1488 = !DILocation(line: 1500, column: 48, scope: !1473)
!1489 = !DILocation(line: 1500, column: 47, scope: !1473)
!1490 = !DILocation(line: 1500, column: 34, scope: !1473)
!1491 = !DILocation(line: 1500, column: 37, scope: !1473)
!1492 = !DILocation(line: 1499, column: 77, scope: !1493)
!1493 = !DILexicalBlockFile(scope: !1473, file: !801, discriminator: 2)
!1494 = !DILocation(line: 1499, column: 13, scope: !1493)
!1495 = distinct !{!1495, !1496}
!1496 = !DILocation(line: 1499, column: 13, scope: !1417)
!1497 = !DILocation(line: 1501, column: 34, scope: !1417)
!1498 = !DILocation(line: 1501, column: 13, scope: !1417)
!1499 = !DILocation(line: 1501, column: 16, scope: !1417)
!1500 = !DILocation(line: 1501, column: 31, scope: !1417)
!1501 = !DILocation(line: 1503, column: 17, scope: !1502)
!1502 = distinct !DILexicalBlock(scope: !1417, file: !801, line: 1503, column: 17)
!1503 = !DILocation(line: 1503, column: 17, scope: !1417)
!1504 = !DILocation(line: 1504, column: 40, scope: !1502)
!1505 = !DILocation(line: 1504, column: 49, scope: !1502)
!1506 = !DILocation(line: 1504, column: 24, scope: !1502)
!1507 = !DILocation(line: 1504, column: 17, scope: !1502)
!1508 = !DILocation(line: 1491, column: 9, scope: !1509)
!1509 = !DILexicalBlockFile(scope: !1408, file: !801, discriminator: 2)
!1510 = distinct !{!1510, !1407}
!1511 = !DILocation(line: 1506, column: 9, scope: !1408)
!1512 = !DILocation(line: 1509, column: 17, scope: !1369)
!1513 = !DILocation(line: 1509, column: 28, scope: !1369)
!1514 = !DILocation(line: 1509, column: 15, scope: !1369)
!1515 = !DILocation(line: 1510, column: 27, scope: !1369)
!1516 = !DILocation(line: 1510, column: 38, scope: !1369)
!1517 = !DILocation(line: 1510, column: 18, scope: !1369)
!1518 = !DILocation(line: 1510, column: 16, scope: !1369)
!1519 = !DILocation(line: 1512, column: 5, scope: !1369)
!1520 = !DILocation(line: 1512, column: 12, scope: !1521)
!1521 = !DILexicalBlockFile(scope: !1369, file: !801, discriminator: 1)
!1522 = !DILocation(line: 1512, column: 5, scope: !1521)
!1523 = !DILocation(line: 1513, column: 13, scope: !1524)
!1524 = distinct !DILexicalBlock(scope: !1369, file: !801, line: 1512, column: 23)
!1525 = !DILocation(line: 1513, column: 24, scope: !1524)
!1526 = !DILocation(line: 1513, column: 37, scope: !1524)
!1527 = !DILocation(line: 1513, column: 35, scope: !1524)
!1528 = !DILocation(line: 1513, column: 11, scope: !1524)
!1529 = !DILocation(line: 1514, column: 13, scope: !1524)
!1530 = !DILocation(line: 1514, column: 16, scope: !1524)
!1531 = !DILocation(line: 1514, column: 23, scope: !1524)
!1532 = !DILocation(line: 1514, column: 28, scope: !1524)
!1533 = !DILocation(line: 1514, column: 31, scope: !1524)
!1534 = !DILocation(line: 1514, column: 26, scope: !1524)
!1535 = !DILocation(line: 1514, column: 52, scope: !1524)
!1536 = !DILocation(line: 1514, column: 55, scope: !1524)
!1537 = !DILocation(line: 1514, column: 50, scope: !1524)
!1538 = !DILocation(line: 1514, column: 11, scope: !1524)
!1539 = !DILocation(line: 1515, column: 13, scope: !1540)
!1540 = distinct !DILexicalBlock(scope: !1524, file: !801, line: 1515, column: 13)
!1541 = !DILocation(line: 1515, column: 26, scope: !1540)
!1542 = !DILocation(line: 1515, column: 29, scope: !1540)
!1543 = !DILocation(line: 1515, column: 23, scope: !1540)
!1544 = !DILocation(line: 1515, column: 13, scope: !1524)
!1545 = !DILocation(line: 1516, column: 20, scope: !1546)
!1546 = distinct !DILexicalBlock(scope: !1547, file: !801, line: 1516, column: 13)
!1547 = distinct !DILexicalBlock(scope: !1540, file: !801, line: 1515, column: 45)
!1548 = !DILocation(line: 1516, column: 18, scope: !1546)
!1549 = !DILocation(line: 1516, column: 25, scope: !1550)
!1550 = !DILexicalBlockFile(scope: !1551, file: !801, discriminator: 1)
!1551 = distinct !DILexicalBlock(scope: !1546, file: !801, line: 1516, column: 13)
!1552 = !DILocation(line: 1516, column: 29, scope: !1550)
!1553 = !DILocation(line: 1516, column: 32, scope: !1550)
!1554 = !DILocation(line: 1516, column: 27, scope: !1550)
!1555 = !DILocation(line: 1516, column: 13, scope: !1550)
!1556 = !DILocation(line: 1517, column: 53, scope: !1557)
!1557 = distinct !DILexicalBlock(scope: !1551, file: !801, line: 1516, column: 53)
!1558 = !DILocation(line: 1517, column: 55, scope: !1557)
!1559 = !DILocation(line: 1517, column: 54, scope: !1557)
!1560 = !DILocation(line: 1517, column: 51, scope: !1557)
!1561 = !DILocation(line: 1517, column: 39, scope: !1557)
!1562 = !DILocation(line: 1517, column: 29, scope: !1557)
!1563 = !DILocation(line: 1517, column: 31, scope: !1557)
!1564 = !DILocation(line: 1517, column: 30, scope: !1557)
!1565 = !DILocation(line: 1517, column: 17, scope: !1557)
!1566 = !DILocation(line: 1517, column: 20, scope: !1557)
!1567 = !DILocation(line: 1517, column: 34, scope: !1557)
!1568 = !DILocation(line: 1517, column: 37, scope: !1557)
!1569 = !DILocation(line: 1518, column: 53, scope: !1557)
!1570 = !DILocation(line: 1518, column: 55, scope: !1557)
!1571 = !DILocation(line: 1518, column: 54, scope: !1557)
!1572 = !DILocation(line: 1518, column: 51, scope: !1557)
!1573 = !DILocation(line: 1518, column: 57, scope: !1557)
!1574 = !DILocation(line: 1518, column: 39, scope: !1557)
!1575 = !DILocation(line: 1518, column: 29, scope: !1557)
!1576 = !DILocation(line: 1518, column: 31, scope: !1557)
!1577 = !DILocation(line: 1518, column: 30, scope: !1557)
!1578 = !DILocation(line: 1518, column: 17, scope: !1557)
!1579 = !DILocation(line: 1518, column: 20, scope: !1557)
!1580 = !DILocation(line: 1518, column: 34, scope: !1557)
!1581 = !DILocation(line: 1518, column: 37, scope: !1557)
!1582 = !DILocation(line: 1519, column: 13, scope: !1557)
!1583 = !DILocation(line: 1516, column: 49, scope: !1584)
!1584 = !DILexicalBlockFile(scope: !1551, file: !801, discriminator: 2)
!1585 = !DILocation(line: 1516, column: 13, scope: !1584)
!1586 = distinct !{!1586, !1587}
!1587 = !DILocation(line: 1516, column: 13, scope: !1547)
!1588 = !DILocation(line: 1520, column: 28, scope: !1547)
!1589 = !DILocation(line: 1520, column: 19, scope: !1547)
!1590 = !DILocation(line: 1520, column: 17, scope: !1547)
!1591 = !DILocation(line: 1521, column: 17, scope: !1592)
!1592 = distinct !DILexicalBlock(scope: !1547, file: !801, line: 1521, column: 17)
!1593 = !DILocation(line: 1521, column: 21, scope: !1592)
!1594 = !DILocation(line: 1521, column: 17, scope: !1547)
!1595 = !DILocation(line: 1522, column: 17, scope: !1596)
!1596 = distinct !DILexicalBlock(scope: !1592, file: !801, line: 1521, column: 26)
!1597 = !DILocation(line: 1523, column: 24, scope: !1596)
!1598 = !DILocation(line: 1523, column: 17, scope: !1596)
!1599 = !DILocation(line: 1525, column: 26, scope: !1547)
!1600 = !DILocation(line: 1525, column: 29, scope: !1547)
!1601 = !DILocation(line: 1525, column: 23, scope: !1547)
!1602 = !DILocation(line: 1526, column: 17, scope: !1603)
!1603 = distinct !DILexicalBlock(scope: !1547, file: !801, line: 1526, column: 17)
!1604 = !DILocation(line: 1526, column: 17, scope: !1547)
!1605 = !DILocalVariable(name: "pts", scope: !1606, file: !801, line: 1527, type: !206)
!1606 = distinct !DILexicalBlock(scope: !1603, file: !801, line: 1526, column: 22)
!1607 = !DILocation(line: 1527, column: 25, scope: !1606)
!1608 = !DILocation(line: 1527, column: 44, scope: !1606)
!1609 = !DILocation(line: 1527, column: 55, scope: !1606)
!1610 = !DILocation(line: 1527, column: 60, scope: !1606)
!1611 = !DILocation(line: 1527, column: 68, scope: !1606)
!1612 = !DILocation(line: 1527, column: 92, scope: !1606)
!1613 = !DILocation(line: 1527, column: 100, scope: !1606)
!1614 = !DILocation(line: 1527, column: 79, scope: !1606)
!1615 = !DILocation(line: 1527, column: 31, scope: !1606)
!1616 = !DILocation(line: 1527, column: 31, scope: !1617)
!1617 = !DILexicalBlockFile(scope: !1606, file: !801, discriminator: 1)
!1618 = !DILocation(line: 1528, column: 24, scope: !1606)
!1619 = !DILocation(line: 1528, column: 35, scope: !1606)
!1620 = !DILocation(line: 1528, column: 48, scope: !1606)
!1621 = !DILocation(line: 1528, column: 46, scope: !1606)
!1622 = !DILocation(line: 1528, column: 60, scope: !1606)
!1623 = !DILocation(line: 1528, column: 63, scope: !1606)
!1624 = !DILocation(line: 1528, column: 58, scope: !1606)
!1625 = !DILocation(line: 1528, column: 21, scope: !1606)
!1626 = !DILocation(line: 1529, column: 36, scope: !1606)
!1627 = !DILocation(line: 1529, column: 54, scope: !1606)
!1628 = !DILocation(line: 1529, column: 62, scope: !1606)
!1629 = !DILocation(line: 1529, column: 41, scope: !1606)
!1630 = !DILocation(line: 1529, column: 76, scope: !1606)
!1631 = !DILocation(line: 1529, column: 85, scope: !1606)
!1632 = !DILocation(line: 1529, column: 23, scope: !1606)
!1633 = !DILocation(line: 1529, column: 23, scope: !1617)
!1634 = !DILocation(line: 1529, column: 21, scope: !1606)
!1635 = !DILocation(line: 1530, column: 23, scope: !1636)
!1636 = distinct !DILexicalBlock(scope: !1606, file: !801, line: 1530, column: 21)
!1637 = !DILocation(line: 1530, column: 29, scope: !1636)
!1638 = !DILocation(line: 1530, column: 34, scope: !1636)
!1639 = !DILocation(line: 1530, column: 27, scope: !1636)
!1640 = !DILocation(line: 1530, column: 39, scope: !1636)
!1641 = !DILocation(line: 1530, column: 22, scope: !1636)
!1642 = !DILocation(line: 1530, column: 47, scope: !1643)
!1643 = !DILexicalBlockFile(scope: !1636, file: !801, discriminator: 1)
!1644 = !DILocation(line: 1530, column: 53, scope: !1643)
!1645 = !DILocation(line: 1530, column: 58, scope: !1643)
!1646 = !DILocation(line: 1530, column: 51, scope: !1643)
!1647 = !DILocation(line: 1530, column: 22, scope: !1643)
!1648 = !DILocation(line: 1530, column: 68, scope: !1649)
!1649 = !DILexicalBlockFile(scope: !1636, file: !801, discriminator: 2)
!1650 = !DILocation(line: 1530, column: 74, scope: !1649)
!1651 = !DILocation(line: 1530, column: 79, scope: !1649)
!1652 = !DILocation(line: 1530, column: 72, scope: !1649)
!1653 = !DILocation(line: 1530, column: 66, scope: !1649)
!1654 = !DILocation(line: 1530, column: 22, scope: !1649)
!1655 = !DILocation(line: 1530, column: 22, scope: !1656)
!1656 = !DILexicalBlockFile(scope: !1636, file: !801, discriminator: 3)
!1657 = !DILocation(line: 1530, column: 86, scope: !1656)
!1658 = !DILocation(line: 1530, column: 21, scope: !1656)
!1659 = !DILocation(line: 1531, column: 28, scope: !1660)
!1660 = distinct !DILexicalBlock(scope: !1636, file: !801, line: 1530, column: 91)
!1661 = !DILocation(line: 1532, column: 28, scope: !1660)
!1662 = !DILocation(line: 1532, column: 33, scope: !1660)
!1663 = !DILocation(line: 1532, column: 38, scope: !1660)
!1664 = !DILocation(line: 1532, column: 43, scope: !1660)
!1665 = !DILocation(line: 1532, column: 56, scope: !1660)
!1666 = !DILocation(line: 1532, column: 65, scope: !1660)
!1667 = !DILocation(line: 1532, column: 49, scope: !1660)
!1668 = !DILocation(line: 1532, column: 47, scope: !1660)
!1669 = !DILocation(line: 1533, column: 28, scope: !1660)
!1670 = !DILocation(line: 1533, column: 33, scope: !1660)
!1671 = !DILocation(line: 1533, column: 46, scope: !1660)
!1672 = !DILocation(line: 1533, column: 55, scope: !1660)
!1673 = !DILocation(line: 1533, column: 39, scope: !1660)
!1674 = !DILocation(line: 1533, column: 37, scope: !1660)
!1675 = !DILocation(line: 1531, column: 21, scope: !1660)
!1676 = !DILocation(line: 1534, column: 32, scope: !1660)
!1677 = !DILocation(line: 1534, column: 21, scope: !1660)
!1678 = !DILocation(line: 1534, column: 26, scope: !1660)
!1679 = !DILocation(line: 1534, column: 30, scope: !1660)
!1680 = !DILocation(line: 1535, column: 35, scope: !1660)
!1681 = !DILocation(line: 1535, column: 39, scope: !1660)
!1682 = !DILocation(line: 1535, column: 21, scope: !1660)
!1683 = !DILocation(line: 1535, column: 24, scope: !1660)
!1684 = !DILocation(line: 1535, column: 33, scope: !1660)
!1685 = !DILocation(line: 1536, column: 17, scope: !1660)
!1686 = !DILocation(line: 1537, column: 39, scope: !1606)
!1687 = !DILocation(line: 1537, column: 48, scope: !1606)
!1688 = !DILocation(line: 1537, column: 23, scope: !1606)
!1689 = !DILocation(line: 1537, column: 21, scope: !1606)
!1690 = !DILocation(line: 1538, column: 21, scope: !1691)
!1691 = distinct !DILexicalBlock(scope: !1606, file: !801, line: 1538, column: 21)
!1692 = !DILocation(line: 1538, column: 25, scope: !1691)
!1693 = !DILocation(line: 1538, column: 21, scope: !1606)
!1694 = !DILocation(line: 1539, column: 21, scope: !1695)
!1695 = distinct !DILexicalBlock(scope: !1691, file: !801, line: 1538, column: 30)
!1696 = !DILocation(line: 1540, column: 28, scope: !1695)
!1697 = !DILocation(line: 1540, column: 21, scope: !1695)
!1698 = !DILocation(line: 1542, column: 21, scope: !1606)
!1699 = !DILocation(line: 1543, column: 13, scope: !1606)
!1700 = !DILocation(line: 1544, column: 20, scope: !1547)
!1701 = !DILocation(line: 1544, column: 23, scope: !1547)
!1702 = !DILocation(line: 1544, column: 31, scope: !1547)
!1703 = !DILocation(line: 1544, column: 34, scope: !1547)
!1704 = !DILocation(line: 1544, column: 44, scope: !1547)
!1705 = !DILocation(line: 1544, column: 50, scope: !1547)
!1706 = !DILocation(line: 1544, column: 53, scope: !1547)
!1707 = !DILocation(line: 1544, column: 48, scope: !1547)
!1708 = !DILocation(line: 1544, column: 71, scope: !1547)
!1709 = !DILocation(line: 1544, column: 74, scope: !1547)
!1710 = !DILocation(line: 1544, column: 84, scope: !1547)
!1711 = !DILocation(line: 1544, column: 69, scope: !1547)
!1712 = !DILocation(line: 1544, column: 28, scope: !1547)
!1713 = !DILocation(line: 1544, column: 18, scope: !1547)
!1714 = !DILocation(line: 1545, column: 34, scope: !1547)
!1715 = !DILocation(line: 1545, column: 37, scope: !1547)
!1716 = !DILocation(line: 1545, column: 47, scope: !1547)
!1717 = !DILocation(line: 1545, column: 53, scope: !1547)
!1718 = !DILocation(line: 1545, column: 56, scope: !1547)
!1719 = !DILocation(line: 1545, column: 51, scope: !1547)
!1720 = !DILocation(line: 1545, column: 74, scope: !1547)
!1721 = !DILocation(line: 1545, column: 77, scope: !1547)
!1722 = !DILocation(line: 1545, column: 87, scope: !1547)
!1723 = !DILocation(line: 1545, column: 72, scope: !1547)
!1724 = !DILocation(line: 1545, column: 13, scope: !1547)
!1725 = !DILocation(line: 1545, column: 16, scope: !1547)
!1726 = !DILocation(line: 1545, column: 31, scope: !1547)
!1727 = !DILocation(line: 1546, column: 20, scope: !1728)
!1728 = distinct !DILexicalBlock(scope: !1547, file: !801, line: 1546, column: 13)
!1729 = !DILocation(line: 1546, column: 18, scope: !1728)
!1730 = !DILocation(line: 1546, column: 25, scope: !1731)
!1731 = !DILexicalBlockFile(scope: !1732, file: !801, discriminator: 1)
!1732 = distinct !DILexicalBlock(scope: !1728, file: !801, line: 1546, column: 13)
!1733 = !DILocation(line: 1546, column: 29, scope: !1731)
!1734 = !DILocation(line: 1546, column: 32, scope: !1731)
!1735 = !DILocation(line: 1546, column: 39, scope: !1731)
!1736 = !DILocation(line: 1546, column: 44, scope: !1731)
!1737 = !DILocation(line: 1546, column: 47, scope: !1731)
!1738 = !DILocation(line: 1546, column: 42, scope: !1731)
!1739 = !DILocation(line: 1546, column: 68, scope: !1731)
!1740 = !DILocation(line: 1546, column: 66, scope: !1731)
!1741 = !DILocation(line: 1546, column: 27, scope: !1731)
!1742 = !DILocation(line: 1546, column: 13, scope: !1731)
!1743 = !DILocation(line: 1547, column: 29, scope: !1732)
!1744 = !DILocation(line: 1547, column: 17, scope: !1732)
!1745 = !DILocation(line: 1547, column: 20, scope: !1732)
!1746 = !DILocation(line: 1547, column: 46, scope: !1732)
!1747 = !DILocation(line: 1547, column: 48, scope: !1732)
!1748 = !DILocation(line: 1547, column: 47, scope: !1732)
!1749 = !DILocation(line: 1547, column: 34, scope: !1732)
!1750 = !DILocation(line: 1547, column: 37, scope: !1732)
!1751 = !DILocation(line: 1546, column: 75, scope: !1752)
!1752 = !DILexicalBlockFile(scope: !1732, file: !801, discriminator: 2)
!1753 = !DILocation(line: 1546, column: 13, scope: !1752)
!1754 = distinct !{!1754, !1755}
!1755 = !DILocation(line: 1546, column: 13, scope: !1547)
!1756 = !DILocation(line: 1548, column: 33, scope: !1547)
!1757 = !DILocation(line: 1548, column: 13, scope: !1547)
!1758 = !DILocation(line: 1548, column: 16, scope: !1547)
!1759 = !DILocation(line: 1548, column: 31, scope: !1547)
!1760 = !DILocation(line: 1549, column: 9, scope: !1547)
!1761 = !DILocation(line: 1550, column: 20, scope: !1762)
!1762 = distinct !DILexicalBlock(scope: !1763, file: !801, line: 1550, column: 13)
!1763 = distinct !DILexicalBlock(scope: !1540, file: !801, line: 1549, column: 16)
!1764 = !DILocation(line: 1550, column: 18, scope: !1762)
!1765 = !DILocation(line: 1550, column: 25, scope: !1766)
!1766 = !DILexicalBlockFile(scope: !1767, file: !801, discriminator: 1)
!1767 = distinct !DILexicalBlock(scope: !1762, file: !801, line: 1550, column: 13)
!1768 = !DILocation(line: 1550, column: 29, scope: !1766)
!1769 = !DILocation(line: 1550, column: 27, scope: !1766)
!1770 = !DILocation(line: 1550, column: 13, scope: !1766)
!1771 = !DILocation(line: 1551, column: 53, scope: !1772)
!1772 = distinct !DILexicalBlock(scope: !1767, file: !801, line: 1550, column: 45)
!1773 = !DILocation(line: 1551, column: 55, scope: !1772)
!1774 = !DILocation(line: 1551, column: 54, scope: !1772)
!1775 = !DILocation(line: 1551, column: 51, scope: !1772)
!1776 = !DILocation(line: 1551, column: 39, scope: !1772)
!1777 = !DILocation(line: 1551, column: 29, scope: !1772)
!1778 = !DILocation(line: 1551, column: 31, scope: !1772)
!1779 = !DILocation(line: 1551, column: 30, scope: !1772)
!1780 = !DILocation(line: 1551, column: 17, scope: !1772)
!1781 = !DILocation(line: 1551, column: 20, scope: !1772)
!1782 = !DILocation(line: 1551, column: 34, scope: !1772)
!1783 = !DILocation(line: 1551, column: 37, scope: !1772)
!1784 = !DILocation(line: 1552, column: 53, scope: !1772)
!1785 = !DILocation(line: 1552, column: 55, scope: !1772)
!1786 = !DILocation(line: 1552, column: 54, scope: !1772)
!1787 = !DILocation(line: 1552, column: 51, scope: !1772)
!1788 = !DILocation(line: 1552, column: 57, scope: !1772)
!1789 = !DILocation(line: 1552, column: 39, scope: !1772)
!1790 = !DILocation(line: 1552, column: 29, scope: !1772)
!1791 = !DILocation(line: 1552, column: 31, scope: !1772)
!1792 = !DILocation(line: 1552, column: 30, scope: !1772)
!1793 = !DILocation(line: 1552, column: 17, scope: !1772)
!1794 = !DILocation(line: 1552, column: 20, scope: !1772)
!1795 = !DILocation(line: 1552, column: 34, scope: !1772)
!1796 = !DILocation(line: 1552, column: 37, scope: !1772)
!1797 = !DILocation(line: 1553, column: 13, scope: !1772)
!1798 = !DILocation(line: 1550, column: 41, scope: !1799)
!1799 = !DILexicalBlockFile(scope: !1767, file: !801, discriminator: 2)
!1800 = !DILocation(line: 1550, column: 13, scope: !1799)
!1801 = distinct !{!1801, !1802}
!1802 = !DILocation(line: 1550, column: 13, scope: !1763)
!1803 = !DILocation(line: 1554, column: 34, scope: !1763)
!1804 = !DILocation(line: 1554, column: 13, scope: !1763)
!1805 = !DILocation(line: 1554, column: 16, scope: !1763)
!1806 = !DILocation(line: 1554, column: 31, scope: !1763)
!1807 = !DILocation(line: 1555, column: 23, scope: !1763)
!1808 = !DILocation(line: 1512, column: 5, scope: !1809)
!1809 = !DILexicalBlockFile(scope: !1369, file: !801, discriminator: 2)
!1810 = distinct !{!1810, !1519}
!1811 = !DILocation(line: 1558, column: 5, scope: !1369)
!1812 = !DILocation(line: 1559, column: 5, scope: !1369)
!1813 = !DILocation(line: 1560, column: 1, scope: !1369)
!1814 = distinct !DISubprogram(name: "plot_cqt", scope: !801, file: !801, line: 1129, type: !1815, isLocal: true, isDefinition: true, scopeLine: 1130, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!1815 = !DISubroutineType(types: !1816)
!1816 = !{!200, !173, !1817}
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64, align: 64)
!1818 = !DILocalVariable(name: "ctx", arg: 1, scope: !1814, file: !801, line: 1129, type: !173)
!1819 = !DILocation(line: 1129, column: 38, scope: !1814)
!1820 = !DILocalVariable(name: "frameout", arg: 2, scope: !1814, file: !801, line: 1129, type: !1817)
!1821 = !DILocation(line: 1129, column: 53, scope: !1814)
!1822 = !DILocalVariable(name: "outlink", scope: !1814, file: !801, line: 1131, type: !387)
!1823 = !DILocation(line: 1131, column: 19, scope: !1814)
!1824 = !DILocation(line: 1131, column: 29, scope: !1814)
!1825 = !DILocation(line: 1131, column: 34, scope: !1814)
!1826 = !DILocalVariable(name: "s", scope: !1814, file: !801, line: 1132, type: !823)
!1827 = !DILocation(line: 1132, column: 21, scope: !1814)
!1828 = !DILocation(line: 1132, column: 25, scope: !1814)
!1829 = !DILocation(line: 1132, column: 30, scope: !1814)
!1830 = !DILocalVariable(name: "last_time", scope: !1814, file: !801, line: 1133, type: !206)
!1831 = !DILocation(line: 1133, column: 13, scope: !1814)
!1832 = !DILocalVariable(name: "cur_time", scope: !1814, file: !801, line: 1133, type: !206)
!1833 = !DILocation(line: 1133, column: 24, scope: !1814)
!1834 = !DILocation(line: 1140, column: 17, scope: !1814)
!1835 = !DILocation(line: 1140, column: 15, scope: !1814)
!1836 = !DILocation(line: 1142, column: 12, scope: !1814)
!1837 = !DILocation(line: 1142, column: 15, scope: !1814)
!1838 = !DILocation(line: 1142, column: 5, scope: !1814)
!1839 = !DILocation(line: 1142, column: 27, scope: !1814)
!1840 = !DILocation(line: 1142, column: 30, scope: !1814)
!1841 = !DILocation(line: 1142, column: 40, scope: !1814)
!1842 = !DILocation(line: 1142, column: 43, scope: !1814)
!1843 = !DILocation(line: 1142, column: 51, scope: !1814)
!1844 = !DILocation(line: 1143, column: 9, scope: !1845)
!1845 = distinct !DILexicalBlock(scope: !1814, file: !801, line: 1143, column: 9)
!1846 = !DILocation(line: 1143, column: 12, scope: !1845)
!1847 = !DILocation(line: 1143, column: 9, scope: !1814)
!1848 = !DILocalVariable(name: "k", scope: !1849, file: !801, line: 1144, type: !200)
!1849 = distinct !DILexicalBlock(scope: !1845, file: !801, line: 1143, column: 25)
!1850 = !DILocation(line: 1144, column: 13, scope: !1849)
!1851 = !DILocation(line: 1145, column: 16, scope: !1852)
!1852 = distinct !DILexicalBlock(scope: !1849, file: !801, line: 1145, column: 9)
!1853 = !DILocation(line: 1145, column: 14, scope: !1852)
!1854 = !DILocation(line: 1145, column: 21, scope: !1855)
!1855 = !DILexicalBlockFile(scope: !1856, file: !801, discriminator: 1)
!1856 = distinct !DILexicalBlock(scope: !1852, file: !801, line: 1145, column: 9)
!1857 = !DILocation(line: 1145, column: 25, scope: !1855)
!1858 = !DILocation(line: 1145, column: 28, scope: !1855)
!1859 = !DILocation(line: 1145, column: 23, scope: !1855)
!1860 = !DILocation(line: 1145, column: 9, scope: !1855)
!1861 = !DILocation(line: 1146, column: 64, scope: !1862)
!1862 = distinct !DILexicalBlock(scope: !1856, file: !801, line: 1145, column: 53)
!1863 = !DILocation(line: 1146, column: 49, scope: !1862)
!1864 = !DILocation(line: 1146, column: 52, scope: !1862)
!1865 = !DILocation(line: 1146, column: 27, scope: !1862)
!1866 = !DILocation(line: 1146, column: 30, scope: !1862)
!1867 = !DILocation(line: 1146, column: 37, scope: !1862)
!1868 = !DILocation(line: 1146, column: 40, scope: !1862)
!1869 = !DILocation(line: 1146, column: 39, scope: !1862)
!1870 = !DILocation(line: 1146, column: 13, scope: !1862)
!1871 = !DILocation(line: 1146, column: 16, scope: !1862)
!1872 = !DILocation(line: 1146, column: 43, scope: !1862)
!1873 = !DILocation(line: 1146, column: 46, scope: !1862)
!1874 = !DILocation(line: 1147, column: 64, scope: !1862)
!1875 = !DILocation(line: 1147, column: 49, scope: !1862)
!1876 = !DILocation(line: 1147, column: 52, scope: !1862)
!1877 = !DILocation(line: 1147, column: 27, scope: !1862)
!1878 = !DILocation(line: 1147, column: 30, scope: !1862)
!1879 = !DILocation(line: 1147, column: 37, scope: !1862)
!1880 = !DILocation(line: 1147, column: 40, scope: !1862)
!1881 = !DILocation(line: 1147, column: 39, scope: !1862)
!1882 = !DILocation(line: 1147, column: 13, scope: !1862)
!1883 = !DILocation(line: 1147, column: 16, scope: !1862)
!1884 = !DILocation(line: 1147, column: 43, scope: !1862)
!1885 = !DILocation(line: 1147, column: 46, scope: !1862)
!1886 = !DILocation(line: 1148, column: 9, scope: !1862)
!1887 = !DILocation(line: 1145, column: 49, scope: !1888)
!1888 = !DILexicalBlockFile(scope: !1856, file: !801, discriminator: 2)
!1889 = !DILocation(line: 1145, column: 9, scope: !1888)
!1890 = distinct !{!1890, !1891}
!1891 = !DILocation(line: 1145, column: 9, scope: !1849)
!1892 = !DILocation(line: 1149, column: 5, scope: !1849)
!1893 = !DILocation(line: 1151, column: 20, scope: !1814)
!1894 = !DILocation(line: 1151, column: 23, scope: !1814)
!1895 = !DILocation(line: 1151, column: 32, scope: !1814)
!1896 = !DILocation(line: 1151, column: 35, scope: !1814)
!1897 = !DILocation(line: 1151, column: 5, scope: !1814)
!1898 = !DILocation(line: 1152, column: 17, scope: !1814)
!1899 = !DILocation(line: 1152, column: 20, scope: !1814)
!1900 = !DILocation(line: 1152, column: 29, scope: !1814)
!1901 = !DILocation(line: 1152, column: 32, scope: !1814)
!1902 = !DILocation(line: 1152, column: 5, scope: !1814)
!1903 = !DILocation(line: 1153, column: 19, scope: !1814)
!1904 = !DILocation(line: 1153, column: 22, scope: !1814)
!1905 = !DILocation(line: 1153, column: 5, scope: !1814)
!1906 = !DILocation(line: 1153, column: 8, scope: !1814)
!1907 = !DILocation(line: 1153, column: 33, scope: !1814)
!1908 = !DILocation(line: 1153, column: 36, scope: !1814)
!1909 = !DILocation(line: 1154, column: 16, scope: !1814)
!1910 = !DILocation(line: 1154, column: 14, scope: !1814)
!1911 = !DILocation(line: 1154, column: 45, scope: !1814)
!1912 = !DILocation(line: 1154, column: 56, scope: !1814)
!1913 = !DILocation(line: 1154, column: 54, scope: !1814)
!1914 = !DILocation(line: 1154, column: 30, scope: !1814)
!1915 = !DILocation(line: 1154, column: 33, scope: !1814)
!1916 = !DILocation(line: 1154, column: 42, scope: !1814)
!1917 = !DILocation(line: 1154, column: 79, scope: !1814)
!1918 = !DILocation(line: 1154, column: 77, scope: !1814)
!1919 = !DILocation(line: 1156, column: 5, scope: !1814)
!1920 = !DILocation(line: 1156, column: 8, scope: !1814)
!1921 = !DILocation(line: 1156, column: 17, scope: !1814)
!1922 = !DILocation(line: 1156, column: 20, scope: !1814)
!1923 = !DILocation(line: 1156, column: 32, scope: !1814)
!1924 = !DILocation(line: 1156, column: 35, scope: !1814)
!1925 = !DILocation(line: 1156, column: 47, scope: !1814)
!1926 = !DILocation(line: 1156, column: 50, scope: !1814)
!1927 = !DILocation(line: 1156, column: 58, scope: !1814)
!1928 = !DILocation(line: 1156, column: 61, scope: !1814)
!1929 = !DILocation(line: 1156, column: 70, scope: !1814)
!1930 = !DILocation(line: 1156, column: 73, scope: !1814)
!1931 = !DILocation(line: 1157, column: 16, scope: !1814)
!1932 = !DILocation(line: 1157, column: 14, scope: !1814)
!1933 = !DILocation(line: 1157, column: 45, scope: !1814)
!1934 = !DILocation(line: 1157, column: 56, scope: !1814)
!1935 = !DILocation(line: 1157, column: 54, scope: !1814)
!1936 = !DILocation(line: 1157, column: 30, scope: !1814)
!1937 = !DILocation(line: 1157, column: 33, scope: !1814)
!1938 = !DILocation(line: 1157, column: 42, scope: !1814)
!1939 = !DILocation(line: 1157, column: 79, scope: !1814)
!1940 = !DILocation(line: 1157, column: 77, scope: !1814)
!1941 = !DILocation(line: 1159, column: 17, scope: !1814)
!1942 = !DILocation(line: 1159, column: 5, scope: !1814)
!1943 = !DILocation(line: 1160, column: 16, scope: !1814)
!1944 = !DILocation(line: 1160, column: 14, scope: !1814)
!1945 = !DILocation(line: 1160, column: 53, scope: !1814)
!1946 = !DILocation(line: 1160, column: 64, scope: !1814)
!1947 = !DILocation(line: 1160, column: 62, scope: !1814)
!1948 = !DILocation(line: 1160, column: 30, scope: !1814)
!1949 = !DILocation(line: 1160, column: 33, scope: !1814)
!1950 = !DILocation(line: 1160, column: 50, scope: !1814)
!1951 = !DILocation(line: 1160, column: 87, scope: !1814)
!1952 = !DILocation(line: 1160, column: 85, scope: !1814)
!1953 = !DILocation(line: 1162, column: 9, scope: !1954)
!1954 = distinct !DILexicalBlock(scope: !1814, file: !801, line: 1162, column: 9)
!1955 = !DILocation(line: 1162, column: 12, scope: !1954)
!1956 = !DILocation(line: 1162, column: 9, scope: !1814)
!1957 = !DILocation(line: 1163, column: 9, scope: !1958)
!1958 = distinct !DILexicalBlock(scope: !1954, file: !801, line: 1162, column: 20)
!1959 = !DILocation(line: 1163, column: 12, scope: !1958)
!1960 = !DILocation(line: 1163, column: 24, scope: !1958)
!1961 = !DILocation(line: 1163, column: 27, scope: !1958)
!1962 = !DILocation(line: 1163, column: 39, scope: !1958)
!1963 = !DILocation(line: 1163, column: 42, scope: !1958)
!1964 = !DILocation(line: 1163, column: 49, scope: !1958)
!1965 = !DILocation(line: 1163, column: 52, scope: !1958)
!1966 = !DILocation(line: 1164, column: 20, scope: !1958)
!1967 = !DILocation(line: 1164, column: 18, scope: !1958)
!1968 = !DILocation(line: 1164, column: 57, scope: !1958)
!1969 = !DILocation(line: 1164, column: 68, scope: !1958)
!1970 = !DILocation(line: 1164, column: 66, scope: !1958)
!1971 = !DILocation(line: 1164, column: 34, scope: !1958)
!1972 = !DILocation(line: 1164, column: 37, scope: !1958)
!1973 = !DILocation(line: 1164, column: 54, scope: !1958)
!1974 = !DILocation(line: 1164, column: 91, scope: !1958)
!1975 = !DILocation(line: 1164, column: 89, scope: !1958)
!1976 = !DILocation(line: 1165, column: 5, scope: !1958)
!1977 = !DILocation(line: 1167, column: 10, scope: !1978)
!1978 = distinct !DILexicalBlock(scope: !1814, file: !801, line: 1167, column: 9)
!1979 = !DILocation(line: 1167, column: 13, scope: !1978)
!1980 = !DILocation(line: 1167, column: 9, scope: !1814)
!1981 = !DILocalVariable(name: "out", scope: !1982, file: !801, line: 1168, type: !285)
!1982 = distinct !DILexicalBlock(scope: !1978, file: !801, line: 1167, column: 25)
!1983 = !DILocation(line: 1168, column: 18, scope: !1982)
!1984 = !DILocation(line: 1168, column: 56, scope: !1982)
!1985 = !DILocation(line: 1168, column: 65, scope: !1982)
!1986 = !DILocation(line: 1168, column: 74, scope: !1982)
!1987 = !DILocation(line: 1168, column: 77, scope: !1982)
!1988 = !DILocation(line: 1168, column: 86, scope: !1982)
!1989 = !DILocation(line: 1168, column: 36, scope: !1982)
!1990 = !DILocation(line: 1168, column: 25, scope: !1982)
!1991 = !DILocation(line: 1168, column: 34, scope: !1982)
!1992 = !DILocation(line: 1169, column: 14, scope: !1993)
!1993 = distinct !DILexicalBlock(scope: !1982, file: !801, line: 1169, column: 13)
!1994 = !DILocation(line: 1169, column: 13, scope: !1982)
!1995 = !DILocation(line: 1170, column: 13, scope: !1993)
!1996 = !DILocation(line: 1171, column: 9, scope: !1982)
!1997 = !DILocation(line: 1171, column: 14, scope: !1982)
!1998 = !DILocation(line: 1171, column: 36, scope: !1982)
!1999 = !DILocation(line: 1171, column: 36, scope: !2000)
!2000 = !DILexicalBlockFile(scope: !1982, file: !801, discriminator: 1)
!2001 = !DILocation(line: 1172, column: 9, scope: !1982)
!2002 = !DILocation(line: 1172, column: 14, scope: !1982)
!2003 = !DILocation(line: 1172, column: 26, scope: !1982)
!2004 = !DILocation(line: 1173, column: 27, scope: !1982)
!2005 = !DILocation(line: 1173, column: 30, scope: !1982)
!2006 = !DILocation(line: 1173, column: 9, scope: !1982)
!2007 = !DILocation(line: 1173, column: 14, scope: !1982)
!2008 = !DILocation(line: 1173, column: 25, scope: !1982)
!2009 = !DILocation(line: 1174, column: 20, scope: !1982)
!2010 = !DILocation(line: 1174, column: 18, scope: !1982)
!2011 = !DILocation(line: 1174, column: 51, scope: !1982)
!2012 = !DILocation(line: 1174, column: 62, scope: !1982)
!2013 = !DILocation(line: 1174, column: 60, scope: !1982)
!2014 = !DILocation(line: 1174, column: 34, scope: !1982)
!2015 = !DILocation(line: 1174, column: 37, scope: !1982)
!2016 = !DILocation(line: 1174, column: 48, scope: !1982)
!2017 = !DILocation(line: 1174, column: 85, scope: !1982)
!2018 = !DILocation(line: 1174, column: 83, scope: !1982)
!2019 = !DILocation(line: 1176, column: 13, scope: !2020)
!2020 = distinct !DILexicalBlock(scope: !1982, file: !801, line: 1176, column: 13)
!2021 = !DILocation(line: 1176, column: 16, scope: !2020)
!2022 = !DILocation(line: 1176, column: 13, scope: !1982)
!2023 = !DILocation(line: 1177, column: 13, scope: !2024)
!2024 = distinct !DILexicalBlock(scope: !2020, file: !801, line: 1176, column: 23)
!2025 = !DILocation(line: 1177, column: 16, scope: !2024)
!2026 = !DILocation(line: 1177, column: 25, scope: !2024)
!2027 = !DILocation(line: 1177, column: 30, scope: !2024)
!2028 = !DILocation(line: 1177, column: 33, scope: !2024)
!2029 = !DILocation(line: 1177, column: 40, scope: !2024)
!2030 = !DILocation(line: 1177, column: 43, scope: !2024)
!2031 = !DILocation(line: 1177, column: 54, scope: !2024)
!2032 = !DILocation(line: 1177, column: 57, scope: !2024)
!2033 = !DILocation(line: 1177, column: 64, scope: !2024)
!2034 = !DILocation(line: 1177, column: 67, scope: !2024)
!2035 = !DILocation(line: 1177, column: 74, scope: !2024)
!2036 = !DILocation(line: 1177, column: 77, scope: !2024)
!2037 = !DILocation(line: 1178, column: 24, scope: !2024)
!2038 = !DILocation(line: 1178, column: 22, scope: !2024)
!2039 = !DILocation(line: 1178, column: 53, scope: !2024)
!2040 = !DILocation(line: 1178, column: 64, scope: !2024)
!2041 = !DILocation(line: 1178, column: 62, scope: !2024)
!2042 = !DILocation(line: 1178, column: 38, scope: !2024)
!2043 = !DILocation(line: 1178, column: 41, scope: !2024)
!2044 = !DILocation(line: 1178, column: 50, scope: !2024)
!2045 = !DILocation(line: 1178, column: 87, scope: !2024)
!2046 = !DILocation(line: 1178, column: 85, scope: !2024)
!2047 = !DILocation(line: 1179, column: 9, scope: !2024)
!2048 = !DILocation(line: 1181, column: 13, scope: !2049)
!2049 = distinct !DILexicalBlock(scope: !1982, file: !801, line: 1181, column: 13)
!2050 = !DILocation(line: 1181, column: 16, scope: !2049)
!2051 = !DILocation(line: 1181, column: 13, scope: !1982)
!2052 = !DILocation(line: 1182, column: 13, scope: !2053)
!2053 = distinct !DILexicalBlock(scope: !2049, file: !801, line: 1181, column: 24)
!2054 = !DILocation(line: 1182, column: 16, scope: !2053)
!2055 = !DILocation(line: 1182, column: 26, scope: !2053)
!2056 = !DILocation(line: 1182, column: 31, scope: !2053)
!2057 = !DILocation(line: 1182, column: 34, scope: !2053)
!2058 = !DILocation(line: 1182, column: 46, scope: !2053)
!2059 = !DILocation(line: 1182, column: 49, scope: !2053)
!2060 = !DILocation(line: 1182, column: 56, scope: !2053)
!2061 = !DILocation(line: 1182, column: 59, scope: !2053)
!2062 = !DILocation(line: 1183, column: 24, scope: !2053)
!2063 = !DILocation(line: 1183, column: 22, scope: !2053)
!2064 = !DILocation(line: 1183, column: 54, scope: !2053)
!2065 = !DILocation(line: 1183, column: 65, scope: !2053)
!2066 = !DILocation(line: 1183, column: 63, scope: !2053)
!2067 = !DILocation(line: 1183, column: 38, scope: !2053)
!2068 = !DILocation(line: 1183, column: 41, scope: !2053)
!2069 = !DILocation(line: 1183, column: 51, scope: !2053)
!2070 = !DILocation(line: 1183, column: 88, scope: !2053)
!2071 = !DILocation(line: 1183, column: 86, scope: !2053)
!2072 = !DILocation(line: 1184, column: 9, scope: !2053)
!2073 = !DILocation(line: 1186, column: 13, scope: !2074)
!2074 = distinct !DILexicalBlock(scope: !1982, file: !801, line: 1186, column: 13)
!2075 = !DILocation(line: 1186, column: 16, scope: !2074)
!2076 = !DILocation(line: 1186, column: 13, scope: !1982)
!2077 = !DILocation(line: 1187, column: 13, scope: !2078)
!2078 = distinct !DILexicalBlock(scope: !2074, file: !801, line: 1186, column: 24)
!2079 = !DILocation(line: 1187, column: 16, scope: !2078)
!2080 = !DILocation(line: 1187, column: 26, scope: !2078)
!2081 = !DILocation(line: 1187, column: 31, scope: !2078)
!2082 = !DILocation(line: 1187, column: 34, scope: !2078)
!2083 = !DILocation(line: 1187, column: 46, scope: !2078)
!2084 = !DILocation(line: 1187, column: 49, scope: !2078)
!2085 = !DILocation(line: 1187, column: 57, scope: !2078)
!2086 = !DILocation(line: 1187, column: 60, scope: !2078)
!2087 = !DILocation(line: 1187, column: 55, scope: !2078)
!2088 = !DILocation(line: 1187, column: 68, scope: !2078)
!2089 = !DILocation(line: 1187, column: 71, scope: !2078)
!2090 = !DILocation(line: 1188, column: 24, scope: !2078)
!2091 = !DILocation(line: 1188, column: 22, scope: !2078)
!2092 = !DILocation(line: 1188, column: 54, scope: !2078)
!2093 = !DILocation(line: 1188, column: 65, scope: !2078)
!2094 = !DILocation(line: 1188, column: 63, scope: !2078)
!2095 = !DILocation(line: 1188, column: 38, scope: !2078)
!2096 = !DILocation(line: 1188, column: 41, scope: !2078)
!2097 = !DILocation(line: 1188, column: 51, scope: !2078)
!2098 = !DILocation(line: 1188, column: 88, scope: !2078)
!2099 = !DILocation(line: 1188, column: 86, scope: !2078)
!2100 = !DILocation(line: 1189, column: 9, scope: !2078)
!2101 = !DILocation(line: 1190, column: 20, scope: !1982)
!2102 = !DILocation(line: 1190, column: 23, scope: !1982)
!2103 = !DILocation(line: 1190, column: 9, scope: !1982)
!2104 = !DILocation(line: 1190, column: 14, scope: !1982)
!2105 = !DILocation(line: 1190, column: 18, scope: !1982)
!2106 = !DILocation(line: 1191, column: 9, scope: !1982)
!2107 = !DILocation(line: 1191, column: 12, scope: !1982)
!2108 = !DILocation(line: 1191, column: 21, scope: !1982)
!2109 = !DILocation(line: 1192, column: 5, scope: !1982)
!2110 = !DILocation(line: 1193, column: 22, scope: !1814)
!2111 = !DILocation(line: 1193, column: 25, scope: !1814)
!2112 = !DILocation(line: 1193, column: 36, scope: !1814)
!2113 = !DILocation(line: 1193, column: 43, scope: !1814)
!2114 = !DILocation(line: 1193, column: 46, scope: !1814)
!2115 = !DILocation(line: 1193, column: 41, scope: !1814)
!2116 = !DILocation(line: 1193, column: 5, scope: !1814)
!2117 = !DILocation(line: 1193, column: 8, scope: !1814)
!2118 = !DILocation(line: 1193, column: 19, scope: !1814)
!2119 = !DILocation(line: 1194, column: 9, scope: !2120)
!2120 = distinct !DILexicalBlock(scope: !1814, file: !801, line: 1194, column: 9)
!2121 = !DILocation(line: 1194, column: 12, scope: !2120)
!2122 = !DILocation(line: 1194, column: 9, scope: !1814)
!2123 = !DILocation(line: 1195, column: 24, scope: !2120)
!2124 = !DILocation(line: 1195, column: 27, scope: !2120)
!2125 = !DILocation(line: 1195, column: 38, scope: !2120)
!2126 = !DILocation(line: 1195, column: 41, scope: !2120)
!2127 = !DILocation(line: 1195, column: 36, scope: !2120)
!2128 = !DILocation(line: 1195, column: 48, scope: !2120)
!2129 = !DILocation(line: 1195, column: 55, scope: !2120)
!2130 = !DILocation(line: 1195, column: 58, scope: !2120)
!2131 = !DILocation(line: 1195, column: 53, scope: !2120)
!2132 = !DILocation(line: 1195, column: 9, scope: !2120)
!2133 = !DILocation(line: 1195, column: 12, scope: !2120)
!2134 = !DILocation(line: 1195, column: 21, scope: !2120)
!2135 = !DILocation(line: 1196, column: 5, scope: !1814)
!2136 = !DILocation(line: 1197, column: 1, scope: !1814)
!2137 = distinct !DISubprogram(name: "av_make_q", scope: !214, file: !214, line: 71, type: !2138, isLocal: true, isDefinition: true, scopeLine: 72, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!2138 = !DISubroutineType(types: !2139)
!2139 = !{!213, !200, !200}
!2140 = !DILocalVariable(name: "num", arg: 1, scope: !2137, file: !214, line: 71, type: !200)
!2141 = !DILocation(line: 71, column: 40, scope: !2137)
!2142 = !DILocalVariable(name: "den", arg: 2, scope: !2137, file: !214, line: 71, type: !200)
!2143 = !DILocation(line: 71, column: 49, scope: !2137)
!2144 = !DILocalVariable(name: "r", scope: !2137, file: !214, line: 73, type: !213)
!2145 = !DILocation(line: 73, column: 16, scope: !2137)
!2146 = !DILocation(line: 73, column: 20, scope: !2137)
!2147 = !DILocation(line: 73, column: 22, scope: !2137)
!2148 = !DILocation(line: 73, column: 27, scope: !2137)
!2149 = !DILocation(line: 74, column: 12, scope: !2137)
!2150 = !DILocation(line: 74, column: 5, scope: !2137)
!2151 = distinct !DISubprogram(name: "av_q2d", scope: !214, file: !214, line: 104, type: !2152, isLocal: true, isDefinition: true, scopeLine: 104, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!2152 = !DISubroutineType(types: !2153)
!2153 = !{!210, !213}
!2154 = !DILocalVariable(name: "a", arg: 1, scope: !2151, file: !214, line: 104, type: !213)
!2155 = !DILocation(line: 104, column: 40, scope: !2151)
!2156 = !DILocation(line: 105, column: 14, scope: !2151)
!2157 = !DILocation(line: 105, column: 12, scope: !2151)
!2158 = !DILocation(line: 105, column: 31, scope: !2151)
!2159 = !DILocation(line: 105, column: 20, scope: !2151)
!2160 = !DILocation(line: 105, column: 18, scope: !2151)
!2161 = !DILocation(line: 105, column: 5, scope: !2151)
!2162 = distinct !DISubprogram(name: "process_cqt", scope: !801, file: !801, line: 1083, type: !2163, isLocal: true, isDefinition: true, scopeLine: 1084, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!2163 = !DISubroutineType(types: !2164)
!2164 = !{null, !823}
!2165 = !DILocalVariable(name: "s", arg: 1, scope: !2162, file: !801, line: 1083, type: !823)
!2166 = !DILocation(line: 1083, column: 41, scope: !2162)
!2167 = !DILocalVariable(name: "x", scope: !2162, file: !801, line: 1085, type: !200)
!2168 = !DILocation(line: 1085, column: 9, scope: !2162)
!2169 = !DILocalVariable(name: "i", scope: !2162, file: !801, line: 1085, type: !200)
!2170 = !DILocation(line: 1085, column: 12, scope: !2162)
!2171 = !DILocation(line: 1086, column: 10, scope: !2172)
!2172 = distinct !DILexicalBlock(scope: !2162, file: !801, line: 1086, column: 9)
!2173 = !DILocation(line: 1086, column: 13, scope: !2172)
!2174 = !DILocation(line: 1086, column: 9, scope: !2162)
!2175 = !DILocation(line: 1087, column: 16, scope: !2176)
!2176 = distinct !DILexicalBlock(scope: !2177, file: !801, line: 1087, column: 9)
!2177 = distinct !DILexicalBlock(scope: !2172, file: !801, line: 1086, column: 25)
!2178 = !DILocation(line: 1087, column: 14, scope: !2176)
!2179 = !DILocation(line: 1087, column: 21, scope: !2180)
!2180 = !DILexicalBlockFile(scope: !2181, file: !801, discriminator: 1)
!2181 = distinct !DILexicalBlock(scope: !2176, file: !801, line: 1087, column: 9)
!2182 = !DILocation(line: 1087, column: 25, scope: !2180)
!2183 = !DILocation(line: 1087, column: 28, scope: !2180)
!2184 = !DILocation(line: 1087, column: 23, scope: !2180)
!2185 = !DILocation(line: 1087, column: 9, scope: !2180)
!2186 = !DILocation(line: 1088, column: 40, scope: !2187)
!2187 = distinct !DILexicalBlock(scope: !2181, file: !801, line: 1087, column: 42)
!2188 = !DILocation(line: 1088, column: 27, scope: !2187)
!2189 = !DILocation(line: 1088, column: 30, scope: !2187)
!2190 = !DILocation(line: 1088, column: 43, scope: !2187)
!2191 = !DILocation(line: 1088, column: 67, scope: !2187)
!2192 = !DILocation(line: 1088, column: 53, scope: !2187)
!2193 = !DILocation(line: 1088, column: 56, scope: !2187)
!2194 = !DILocation(line: 1088, column: 70, scope: !2187)
!2195 = !DILocation(line: 1088, column: 89, scope: !2187)
!2196 = !DILocation(line: 1088, column: 75, scope: !2187)
!2197 = !DILocation(line: 1088, column: 78, scope: !2187)
!2198 = !DILocation(line: 1088, column: 92, scope: !2187)
!2199 = !DILocation(line: 1088, column: 73, scope: !2187)
!2200 = !DILocation(line: 1088, column: 50, scope: !2187)
!2201 = !DILocation(line: 1088, column: 22, scope: !2187)
!2202 = !DILocation(line: 1088, column: 13, scope: !2187)
!2203 = !DILocation(line: 1088, column: 16, scope: !2187)
!2204 = !DILocation(line: 1088, column: 25, scope: !2187)
!2205 = !DILocation(line: 1089, column: 9, scope: !2187)
!2206 = !DILocation(line: 1087, column: 38, scope: !2207)
!2207 = !DILexicalBlockFile(scope: !2181, file: !801, discriminator: 2)
!2208 = !DILocation(line: 1087, column: 9, scope: !2207)
!2209 = distinct !{!2209, !2210}
!2210 = !DILocation(line: 1087, column: 9, scope: !2177)
!2211 = !DILocation(line: 1090, column: 13, scope: !2212)
!2212 = distinct !DILexicalBlock(scope: !2177, file: !801, line: 1090, column: 13)
!2213 = !DILocation(line: 1090, column: 16, scope: !2212)
!2214 = !DILocation(line: 1090, column: 23, scope: !2212)
!2215 = !DILocation(line: 1090, column: 13, scope: !2177)
!2216 = !DILocalVariable(name: "rcp_fcount", scope: !2217, file: !801, line: 1091, type: !798)
!2217 = distinct !DILexicalBlock(scope: !2212, file: !801, line: 1090, column: 28)
!2218 = !DILocation(line: 1091, column: 19, scope: !2217)
!2219 = !DILocation(line: 1091, column: 39, scope: !2217)
!2220 = !DILocation(line: 1091, column: 42, scope: !2217)
!2221 = !DILocation(line: 1091, column: 37, scope: !2217)
!2222 = !DILocation(line: 1092, column: 20, scope: !2223)
!2223 = distinct !DILexicalBlock(scope: !2217, file: !801, line: 1092, column: 13)
!2224 = !DILocation(line: 1092, column: 18, scope: !2223)
!2225 = !DILocation(line: 1092, column: 25, scope: !2226)
!2226 = !DILexicalBlockFile(scope: !2227, file: !801, discriminator: 1)
!2227 = distinct !DILexicalBlock(scope: !2223, file: !801, line: 1092, column: 13)
!2228 = !DILocation(line: 1092, column: 29, scope: !2226)
!2229 = !DILocation(line: 1092, column: 32, scope: !2226)
!2230 = !DILocation(line: 1092, column: 27, scope: !2226)
!2231 = !DILocation(line: 1092, column: 13, scope: !2226)
!2232 = !DILocalVariable(name: "h", scope: !2233, file: !801, line: 1093, type: !798)
!2233 = distinct !DILexicalBlock(scope: !2227, file: !801, line: 1092, column: 44)
!2234 = !DILocation(line: 1093, column: 23, scope: !2233)
!2235 = !DILocation(line: 1094, column: 24, scope: !2236)
!2236 = distinct !DILexicalBlock(scope: !2233, file: !801, line: 1094, column: 17)
!2237 = !DILocation(line: 1094, column: 22, scope: !2236)
!2238 = !DILocation(line: 1094, column: 29, scope: !2239)
!2239 = !DILexicalBlockFile(scope: !2240, file: !801, discriminator: 1)
!2240 = distinct !DILexicalBlock(scope: !2236, file: !801, line: 1094, column: 17)
!2241 = !DILocation(line: 1094, column: 33, scope: !2239)
!2242 = !DILocation(line: 1094, column: 36, scope: !2239)
!2243 = !DILocation(line: 1094, column: 31, scope: !2239)
!2244 = !DILocation(line: 1094, column: 17, scope: !2239)
!2245 = !DILocation(line: 1095, column: 35, scope: !2240)
!2246 = !DILocation(line: 1095, column: 38, scope: !2240)
!2247 = !DILocation(line: 1095, column: 47, scope: !2240)
!2248 = !DILocation(line: 1095, column: 45, scope: !2240)
!2249 = !DILocation(line: 1095, column: 51, scope: !2240)
!2250 = !DILocation(line: 1095, column: 49, scope: !2240)
!2251 = !DILocation(line: 1095, column: 26, scope: !2240)
!2252 = !DILocation(line: 1095, column: 29, scope: !2240)
!2253 = !DILocation(line: 1095, column: 23, scope: !2240)
!2254 = !DILocation(line: 1095, column: 21, scope: !2240)
!2255 = !DILocation(line: 1094, column: 45, scope: !2256)
!2256 = !DILexicalBlockFile(scope: !2240, file: !801, discriminator: 2)
!2257 = !DILocation(line: 1094, column: 17, scope: !2256)
!2258 = distinct !{!2258, !2259}
!2259 = !DILocation(line: 1094, column: 17, scope: !2233)
!2260 = !DILocation(line: 1096, column: 31, scope: !2233)
!2261 = !DILocation(line: 1096, column: 44, scope: !2233)
!2262 = !DILocation(line: 1096, column: 42, scope: !2233)
!2263 = !DILocation(line: 1096, column: 26, scope: !2233)
!2264 = !DILocation(line: 1096, column: 17, scope: !2233)
!2265 = !DILocation(line: 1096, column: 20, scope: !2233)
!2266 = !DILocation(line: 1096, column: 29, scope: !2233)
!2267 = !DILocation(line: 1097, column: 13, scope: !2233)
!2268 = !DILocation(line: 1092, column: 40, scope: !2269)
!2269 = !DILexicalBlockFile(scope: !2227, file: !801, discriminator: 2)
!2270 = !DILocation(line: 1092, column: 13, scope: !2269)
!2271 = distinct !{!2271, !2272}
!2272 = !DILocation(line: 1092, column: 13, scope: !2217)
!2273 = !DILocation(line: 1098, column: 9, scope: !2217)
!2274 = !DILocation(line: 1099, column: 16, scope: !2275)
!2275 = distinct !DILexicalBlock(scope: !2177, file: !801, line: 1099, column: 9)
!2276 = !DILocation(line: 1099, column: 14, scope: !2275)
!2277 = !DILocation(line: 1099, column: 21, scope: !2278)
!2278 = !DILexicalBlockFile(scope: !2279, file: !801, discriminator: 1)
!2279 = distinct !DILexicalBlock(scope: !2275, file: !801, line: 1099, column: 9)
!2280 = !DILocation(line: 1099, column: 25, scope: !2278)
!2281 = !DILocation(line: 1099, column: 28, scope: !2278)
!2282 = !DILocation(line: 1099, column: 23, scope: !2278)
!2283 = !DILocation(line: 1099, column: 9, scope: !2278)
!2284 = !DILocation(line: 1100, column: 52, scope: !2285)
!2285 = distinct !DILexicalBlock(scope: !2279, file: !801, line: 1099, column: 40)
!2286 = !DILocation(line: 1100, column: 43, scope: !2285)
!2287 = !DILocation(line: 1100, column: 46, scope: !2285)
!2288 = !DILocation(line: 1100, column: 56, scope: !2285)
!2289 = !DILocation(line: 1100, column: 59, scope: !2285)
!2290 = !DILocation(line: 1100, column: 27, scope: !2285)
!2291 = !DILocation(line: 1100, column: 22, scope: !2285)
!2292 = !DILocation(line: 1100, column: 13, scope: !2285)
!2293 = !DILocation(line: 1100, column: 16, scope: !2285)
!2294 = !DILocation(line: 1100, column: 25, scope: !2285)
!2295 = !DILocation(line: 1101, column: 48, scope: !2285)
!2296 = !DILocation(line: 1101, column: 39, scope: !2285)
!2297 = !DILocation(line: 1101, column: 42, scope: !2285)
!2298 = !DILocation(line: 1101, column: 51, scope: !2285)
!2299 = !DILocation(line: 1101, column: 36, scope: !2285)
!2300 = !DILocation(line: 1101, column: 26, scope: !2285)
!2301 = !DILocation(line: 1101, column: 13, scope: !2285)
!2302 = !DILocation(line: 1101, column: 16, scope: !2285)
!2303 = !DILocation(line: 1101, column: 29, scope: !2285)
!2304 = !DILocation(line: 1102, column: 9, scope: !2285)
!2305 = !DILocation(line: 1099, column: 36, scope: !2306)
!2306 = !DILexicalBlockFile(scope: !2279, file: !801, discriminator: 2)
!2307 = !DILocation(line: 1099, column: 9, scope: !2306)
!2308 = distinct !{!2308, !2309}
!2309 = !DILocation(line: 1099, column: 9, scope: !2177)
!2310 = !DILocation(line: 1103, column: 5, scope: !2177)
!2311 = !DILocation(line: 1105, column: 12, scope: !2312)
!2312 = distinct !DILexicalBlock(scope: !2162, file: !801, line: 1105, column: 5)
!2313 = !DILocation(line: 1105, column: 10, scope: !2312)
!2314 = !DILocation(line: 1105, column: 17, scope: !2315)
!2315 = !DILexicalBlockFile(scope: !2316, file: !801, discriminator: 1)
!2316 = distinct !DILexicalBlock(scope: !2312, file: !801, line: 1105, column: 5)
!2317 = !DILocation(line: 1105, column: 21, scope: !2315)
!2318 = !DILocation(line: 1105, column: 24, scope: !2315)
!2319 = !DILocation(line: 1105, column: 19, scope: !2315)
!2320 = !DILocation(line: 1105, column: 5, scope: !2315)
!2321 = !DILocation(line: 1106, column: 46, scope: !2322)
!2322 = distinct !DILexicalBlock(scope: !2316, file: !801, line: 1105, column: 38)
!2323 = !DILocation(line: 1106, column: 32, scope: !2322)
!2324 = !DILocation(line: 1106, column: 35, scope: !2322)
!2325 = !DILocation(line: 1106, column: 23, scope: !2322)
!2326 = !DILocation(line: 1106, column: 9, scope: !2322)
!2327 = !DILocation(line: 1106, column: 12, scope: !2322)
!2328 = !DILocation(line: 1106, column: 26, scope: !2322)
!2329 = !DILocation(line: 1106, column: 29, scope: !2322)
!2330 = !DILocation(line: 1107, column: 46, scope: !2322)
!2331 = !DILocation(line: 1107, column: 32, scope: !2322)
!2332 = !DILocation(line: 1107, column: 35, scope: !2322)
!2333 = !DILocation(line: 1107, column: 23, scope: !2322)
!2334 = !DILocation(line: 1107, column: 9, scope: !2322)
!2335 = !DILocation(line: 1107, column: 12, scope: !2322)
!2336 = !DILocation(line: 1107, column: 26, scope: !2322)
!2337 = !DILocation(line: 1107, column: 29, scope: !2322)
!2338 = !DILocation(line: 1108, column: 5, scope: !2322)
!2339 = !DILocation(line: 1105, column: 34, scope: !2340)
!2340 = !DILexicalBlockFile(scope: !2316, file: !801, discriminator: 2)
!2341 = !DILocation(line: 1105, column: 5, scope: !2340)
!2342 = distinct !{!2342, !2343}
!2343 = !DILocation(line: 1105, column: 5, scope: !2162)
!2344 = !DILocation(line: 1110, column: 9, scope: !2345)
!2345 = distinct !DILexicalBlock(scope: !2162, file: !801, line: 1110, column: 9)
!2346 = !DILocation(line: 1110, column: 12, scope: !2345)
!2347 = !DILocation(line: 1110, column: 19, scope: !2345)
!2348 = !DILocation(line: 1110, column: 9, scope: !2162)
!2349 = !DILocalVariable(name: "rcp_fcount", scope: !2350, file: !801, line: 1111, type: !798)
!2350 = distinct !DILexicalBlock(scope: !2345, file: !801, line: 1110, column: 24)
!2351 = !DILocation(line: 1111, column: 15, scope: !2350)
!2352 = !DILocation(line: 1111, column: 35, scope: !2350)
!2353 = !DILocation(line: 1111, column: 38, scope: !2350)
!2354 = !DILocation(line: 1111, column: 33, scope: !2350)
!2355 = !DILocation(line: 1112, column: 16, scope: !2356)
!2356 = distinct !DILexicalBlock(scope: !2350, file: !801, line: 1112, column: 9)
!2357 = !DILocation(line: 1112, column: 14, scope: !2356)
!2358 = !DILocation(line: 1112, column: 21, scope: !2359)
!2359 = !DILexicalBlockFile(scope: !2360, file: !801, discriminator: 1)
!2360 = distinct !DILexicalBlock(scope: !2356, file: !801, line: 1112, column: 9)
!2361 = !DILocation(line: 1112, column: 25, scope: !2359)
!2362 = !DILocation(line: 1112, column: 28, scope: !2359)
!2363 = !DILocation(line: 1112, column: 23, scope: !2359)
!2364 = !DILocation(line: 1112, column: 9, scope: !2359)
!2365 = !DILocalVariable(name: "result", scope: !2366, file: !801, line: 1113, type: !859)
!2366 = distinct !DILexicalBlock(scope: !2360, file: !801, line: 1112, column: 40)
!2367 = !DILocation(line: 1113, column: 24, scope: !2366)
!2368 = !DILocation(line: 1114, column: 20, scope: !2369)
!2369 = distinct !DILexicalBlock(scope: !2366, file: !801, line: 1114, column: 13)
!2370 = !DILocation(line: 1114, column: 18, scope: !2369)
!2371 = !DILocation(line: 1114, column: 25, scope: !2372)
!2372 = !DILexicalBlockFile(scope: !2373, file: !801, discriminator: 1)
!2373 = distinct !DILexicalBlock(scope: !2369, file: !801, line: 1114, column: 13)
!2374 = !DILocation(line: 1114, column: 29, scope: !2372)
!2375 = !DILocation(line: 1114, column: 32, scope: !2372)
!2376 = !DILocation(line: 1114, column: 27, scope: !2372)
!2377 = !DILocation(line: 1114, column: 13, scope: !2372)
!2378 = !DILocation(line: 1115, column: 44, scope: !2379)
!2379 = distinct !DILexicalBlock(scope: !2373, file: !801, line: 1114, column: 45)
!2380 = !DILocation(line: 1115, column: 47, scope: !2379)
!2381 = !DILocation(line: 1115, column: 56, scope: !2379)
!2382 = !DILocation(line: 1115, column: 54, scope: !2379)
!2383 = !DILocation(line: 1115, column: 60, scope: !2379)
!2384 = !DILocation(line: 1115, column: 58, scope: !2379)
!2385 = !DILocation(line: 1115, column: 30, scope: !2379)
!2386 = !DILocation(line: 1115, column: 33, scope: !2379)
!2387 = !DILocation(line: 1115, column: 63, scope: !2379)
!2388 = !DILocation(line: 1115, column: 24, scope: !2379)
!2389 = !DILocation(line: 1115, column: 27, scope: !2379)
!2390 = !DILocation(line: 1116, column: 44, scope: !2379)
!2391 = !DILocation(line: 1116, column: 47, scope: !2379)
!2392 = !DILocation(line: 1116, column: 56, scope: !2379)
!2393 = !DILocation(line: 1116, column: 54, scope: !2379)
!2394 = !DILocation(line: 1116, column: 60, scope: !2379)
!2395 = !DILocation(line: 1116, column: 58, scope: !2379)
!2396 = !DILocation(line: 1116, column: 30, scope: !2379)
!2397 = !DILocation(line: 1116, column: 33, scope: !2379)
!2398 = !DILocation(line: 1116, column: 63, scope: !2379)
!2399 = !DILocation(line: 1116, column: 24, scope: !2379)
!2400 = !DILocation(line: 1116, column: 27, scope: !2379)
!2401 = !DILocation(line: 1117, column: 13, scope: !2379)
!2402 = !DILocation(line: 1114, column: 41, scope: !2403)
!2403 = !DILexicalBlockFile(scope: !2373, file: !801, discriminator: 2)
!2404 = !DILocation(line: 1114, column: 13, scope: !2403)
!2405 = distinct !{!2405, !2406}
!2406 = !DILocation(line: 1114, column: 13, scope: !2366)
!2407 = !DILocation(line: 1118, column: 35, scope: !2366)
!2408 = !DILocation(line: 1118, column: 55, scope: !2366)
!2409 = !DILocation(line: 1118, column: 46, scope: !2366)
!2410 = !DILocation(line: 1118, column: 27, scope: !2366)
!2411 = !DILocation(line: 1118, column: 13, scope: !2366)
!2412 = !DILocation(line: 1118, column: 16, scope: !2366)
!2413 = !DILocation(line: 1118, column: 30, scope: !2366)
!2414 = !DILocation(line: 1118, column: 33, scope: !2366)
!2415 = !DILocation(line: 1119, column: 35, scope: !2366)
!2416 = !DILocation(line: 1119, column: 55, scope: !2366)
!2417 = !DILocation(line: 1119, column: 46, scope: !2366)
!2418 = !DILocation(line: 1119, column: 27, scope: !2366)
!2419 = !DILocation(line: 1119, column: 13, scope: !2366)
!2420 = !DILocation(line: 1119, column: 16, scope: !2366)
!2421 = !DILocation(line: 1119, column: 30, scope: !2366)
!2422 = !DILocation(line: 1119, column: 33, scope: !2366)
!2423 = !DILocation(line: 1120, column: 9, scope: !2366)
!2424 = !DILocation(line: 1112, column: 36, scope: !2425)
!2425 = !DILexicalBlockFile(scope: !2360, file: !801, discriminator: 2)
!2426 = !DILocation(line: 1112, column: 9, scope: !2425)
!2427 = distinct !{!2427, !2428}
!2428 = !DILocation(line: 1112, column: 9, scope: !2350)
!2429 = !DILocation(line: 1121, column: 5, scope: !2350)
!2430 = !DILocation(line: 1123, column: 9, scope: !2431)
!2431 = distinct !DILexicalBlock(scope: !2162, file: !801, line: 1123, column: 9)
!2432 = !DILocation(line: 1123, column: 12, scope: !2431)
!2433 = !DILocation(line: 1123, column: 19, scope: !2431)
!2434 = !DILocation(line: 1123, column: 9, scope: !2162)
!2435 = !DILocation(line: 1124, column: 22, scope: !2431)
!2436 = !DILocation(line: 1124, column: 25, scope: !2431)
!2437 = !DILocation(line: 1124, column: 32, scope: !2431)
!2438 = !DILocation(line: 1124, column: 35, scope: !2431)
!2439 = !DILocation(line: 1124, column: 47, scope: !2431)
!2440 = !DILocation(line: 1124, column: 50, scope: !2431)
!2441 = !DILocation(line: 1124, column: 58, scope: !2431)
!2442 = !DILocation(line: 1124, column: 61, scope: !2431)
!2443 = !DILocation(line: 1124, column: 68, scope: !2431)
!2444 = !DILocation(line: 1124, column: 71, scope: !2431)
!2445 = !DILocation(line: 1124, column: 9, scope: !2431)
!2446 = !DILocation(line: 1126, column: 22, scope: !2431)
!2447 = !DILocation(line: 1126, column: 25, scope: !2431)
!2448 = !DILocation(line: 1126, column: 32, scope: !2431)
!2449 = !DILocation(line: 1126, column: 35, scope: !2431)
!2450 = !DILocation(line: 1126, column: 47, scope: !2431)
!2451 = !DILocation(line: 1126, column: 50, scope: !2431)
!2452 = !DILocation(line: 1126, column: 58, scope: !2431)
!2453 = !DILocation(line: 1126, column: 61, scope: !2431)
!2454 = !DILocation(line: 1126, column: 68, scope: !2431)
!2455 = !DILocation(line: 1126, column: 71, scope: !2431)
!2456 = !DILocation(line: 1126, column: 80, scope: !2431)
!2457 = !DILocation(line: 1126, column: 83, scope: !2431)
!2458 = !DILocation(line: 1126, column: 9, scope: !2431)
!2459 = !DILocation(line: 1127, column: 1, scope: !2162)
!2460 = distinct !DISubprogram(name: "calculate_gamma", scope: !801, file: !801, line: 720, type: !2461, isLocal: true, isDefinition: true, scopeLine: 721, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!2461 = !DISubroutineType(types: !2462)
!2462 = !{!798, !798, !798}
!2463 = !DILocalVariable(name: "v", arg: 1, scope: !2460, file: !801, line: 720, type: !798)
!2464 = !DILocation(line: 720, column: 36, scope: !2460)
!2465 = !DILocalVariable(name: "g", arg: 2, scope: !2460, file: !801, line: 720, type: !798)
!2466 = !DILocation(line: 720, column: 45, scope: !2460)
!2467 = !DILocation(line: 722, column: 9, scope: !2468)
!2468 = distinct !DILexicalBlock(scope: !2460, file: !801, line: 722, column: 9)
!2469 = !DILocation(line: 722, column: 11, scope: !2468)
!2470 = !DILocation(line: 722, column: 9, scope: !2460)
!2471 = !DILocation(line: 723, column: 16, scope: !2468)
!2472 = !DILocation(line: 723, column: 9, scope: !2468)
!2473 = !DILocation(line: 724, column: 9, scope: !2474)
!2474 = distinct !DILexicalBlock(scope: !2460, file: !801, line: 724, column: 9)
!2475 = !DILocation(line: 724, column: 11, scope: !2474)
!2476 = !DILocation(line: 724, column: 9, scope: !2460)
!2477 = !DILocation(line: 725, column: 22, scope: !2474)
!2478 = !DILocation(line: 725, column: 16, scope: !2474)
!2479 = !DILocation(line: 725, column: 9, scope: !2474)
!2480 = !DILocation(line: 726, column: 9, scope: !2481)
!2481 = distinct !DILexicalBlock(scope: !2460, file: !801, line: 726, column: 9)
!2482 = !DILocation(line: 726, column: 11, scope: !2481)
!2483 = !DILocation(line: 726, column: 9, scope: !2460)
!2484 = !DILocation(line: 727, column: 22, scope: !2481)
!2485 = !DILocation(line: 727, column: 16, scope: !2481)
!2486 = !DILocation(line: 727, column: 9, scope: !2481)
!2487 = !DILocation(line: 728, column: 9, scope: !2488)
!2488 = distinct !DILexicalBlock(scope: !2460, file: !801, line: 728, column: 9)
!2489 = !DILocation(line: 728, column: 11, scope: !2488)
!2490 = !DILocation(line: 728, column: 9, scope: !2460)
!2491 = !DILocation(line: 729, column: 28, scope: !2488)
!2492 = !DILocation(line: 729, column: 22, scope: !2488)
!2493 = !DILocation(line: 729, column: 16, scope: !2494)
!2494 = !DILexicalBlockFile(scope: !2488, file: !801, discriminator: 1)
!2495 = !DILocation(line: 729, column: 9, scope: !2488)
!2496 = !DILocation(line: 730, column: 22, scope: !2460)
!2497 = !DILocation(line: 730, column: 17, scope: !2460)
!2498 = !DILocation(line: 730, column: 27, scope: !2460)
!2499 = !DILocation(line: 730, column: 25, scope: !2460)
!2500 = !DILocation(line: 730, column: 12, scope: !2501)
!2501 = !DILexicalBlockFile(scope: !2460, file: !801, discriminator: 1)
!2502 = !DILocation(line: 730, column: 5, scope: !2460)
!2503 = !DILocation(line: 731, column: 1, scope: !2460)
!2504 = distinct !DISubprogram(name: "rgb_from_cqt", scope: !801, file: !801, line: 733, type: !2505, isLocal: true, isDefinition: true, scopeLine: 734, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!2505 = !DISubroutineType(types: !2506)
!2506 = !{null, !872, !906, !798, !200, !797}
!2507 = !DILocalVariable(name: "c", arg: 1, scope: !2504, file: !801, line: 733, type: !872)
!2508 = !DILocation(line: 733, column: 38, scope: !2504)
!2509 = !DILocalVariable(name: "v", arg: 2, scope: !2504, file: !801, line: 733, type: !906)
!2510 = !DILocation(line: 733, column: 59, scope: !2504)
!2511 = !DILocalVariable(name: "g", arg: 3, scope: !2504, file: !801, line: 733, type: !798)
!2512 = !DILocation(line: 733, column: 68, scope: !2504)
!2513 = !DILocalVariable(name: "len", arg: 4, scope: !2504, file: !801, line: 733, type: !200)
!2514 = !DILocation(line: 733, column: 75, scope: !2504)
!2515 = !DILocalVariable(name: "cscheme", arg: 5, scope: !2504, file: !801, line: 733, type: !797)
!2516 = !DILocation(line: 733, column: 86, scope: !2504)
!2517 = !DILocalVariable(name: "x", scope: !2504, file: !801, line: 735, type: !200)
!2518 = !DILocation(line: 735, column: 9, scope: !2504)
!2519 = !DILocation(line: 736, column: 12, scope: !2520)
!2520 = distinct !DILexicalBlock(scope: !2504, file: !801, line: 736, column: 5)
!2521 = !DILocation(line: 736, column: 10, scope: !2520)
!2522 = !DILocation(line: 736, column: 17, scope: !2523)
!2523 = !DILexicalBlockFile(scope: !2524, file: !801, discriminator: 1)
!2524 = distinct !DILexicalBlock(scope: !2520, file: !801, line: 736, column: 5)
!2525 = !DILocation(line: 736, column: 21, scope: !2523)
!2526 = !DILocation(line: 736, column: 19, scope: !2523)
!2527 = !DILocation(line: 736, column: 5, scope: !2523)
!2528 = !DILocation(line: 737, column: 58, scope: !2529)
!2529 = distinct !DILexicalBlock(scope: !2524, file: !801, line: 736, column: 31)
!2530 = !DILocation(line: 737, column: 73, scope: !2529)
!2531 = !DILocation(line: 737, column: 71, scope: !2529)
!2532 = !DILocation(line: 737, column: 76, scope: !2529)
!2533 = !DILocation(line: 737, column: 69, scope: !2529)
!2534 = !DILocation(line: 737, column: 81, scope: !2529)
!2535 = !DILocation(line: 737, column: 96, scope: !2529)
!2536 = !DILocation(line: 737, column: 94, scope: !2529)
!2537 = !DILocation(line: 737, column: 99, scope: !2529)
!2538 = !DILocation(line: 737, column: 92, scope: !2529)
!2539 = !DILocation(line: 737, column: 79, scope: !2529)
!2540 = !DILocation(line: 737, column: 55, scope: !2529)
!2541 = !DILocation(line: 737, column: 48, scope: !2529)
!2542 = !DILocation(line: 737, column: 106, scope: !2543)
!2543 = !DILexicalBlockFile(scope: !2529, file: !801, discriminator: 1)
!2544 = !DILocation(line: 737, column: 121, scope: !2543)
!2545 = !DILocation(line: 737, column: 119, scope: !2543)
!2546 = !DILocation(line: 737, column: 124, scope: !2543)
!2547 = !DILocation(line: 737, column: 117, scope: !2543)
!2548 = !DILocation(line: 737, column: 129, scope: !2543)
!2549 = !DILocation(line: 737, column: 144, scope: !2543)
!2550 = !DILocation(line: 737, column: 142, scope: !2543)
!2551 = !DILocation(line: 737, column: 147, scope: !2543)
!2552 = !DILocation(line: 737, column: 140, scope: !2543)
!2553 = !DILocation(line: 737, column: 127, scope: !2543)
!2554 = !DILocation(line: 737, column: 48, scope: !2543)
!2555 = !DILocation(line: 737, column: 48, scope: !2556)
!2556 = !DILexicalBlockFile(scope: !2529, file: !801, discriminator: 2)
!2557 = !DILocation(line: 737, column: 48, scope: !2558)
!2558 = !DILexicalBlockFile(scope: !2529, file: !801, discriminator: 3)
!2559 = !DILocation(line: 737, column: 162, scope: !2558)
!2560 = !DILocation(line: 737, column: 31, scope: !2558)
!2561 = !DILocation(line: 737, column: 29, scope: !2558)
!2562 = !DILocation(line: 737, column: 11, scope: !2558)
!2563 = !DILocation(line: 737, column: 9, scope: !2558)
!2564 = !DILocation(line: 737, column: 14, scope: !2558)
!2565 = !DILocation(line: 737, column: 18, scope: !2558)
!2566 = !DILocation(line: 737, column: 20, scope: !2558)
!2567 = !DILocation(line: 738, column: 58, scope: !2529)
!2568 = !DILocation(line: 738, column: 73, scope: !2529)
!2569 = !DILocation(line: 738, column: 71, scope: !2529)
!2570 = !DILocation(line: 738, column: 76, scope: !2529)
!2571 = !DILocation(line: 738, column: 69, scope: !2529)
!2572 = !DILocation(line: 738, column: 81, scope: !2529)
!2573 = !DILocation(line: 738, column: 96, scope: !2529)
!2574 = !DILocation(line: 738, column: 94, scope: !2529)
!2575 = !DILocation(line: 738, column: 99, scope: !2529)
!2576 = !DILocation(line: 738, column: 92, scope: !2529)
!2577 = !DILocation(line: 738, column: 79, scope: !2529)
!2578 = !DILocation(line: 738, column: 55, scope: !2529)
!2579 = !DILocation(line: 738, column: 48, scope: !2529)
!2580 = !DILocation(line: 738, column: 106, scope: !2543)
!2581 = !DILocation(line: 738, column: 121, scope: !2543)
!2582 = !DILocation(line: 738, column: 119, scope: !2543)
!2583 = !DILocation(line: 738, column: 124, scope: !2543)
!2584 = !DILocation(line: 738, column: 117, scope: !2543)
!2585 = !DILocation(line: 738, column: 129, scope: !2543)
!2586 = !DILocation(line: 738, column: 144, scope: !2543)
!2587 = !DILocation(line: 738, column: 142, scope: !2543)
!2588 = !DILocation(line: 738, column: 147, scope: !2543)
!2589 = !DILocation(line: 738, column: 140, scope: !2543)
!2590 = !DILocation(line: 738, column: 127, scope: !2543)
!2591 = !DILocation(line: 738, column: 48, scope: !2543)
!2592 = !DILocation(line: 738, column: 48, scope: !2556)
!2593 = !DILocation(line: 738, column: 48, scope: !2558)
!2594 = !DILocation(line: 738, column: 162, scope: !2558)
!2595 = !DILocation(line: 738, column: 31, scope: !2558)
!2596 = !DILocation(line: 738, column: 29, scope: !2558)
!2597 = !DILocation(line: 738, column: 11, scope: !2558)
!2598 = !DILocation(line: 738, column: 9, scope: !2558)
!2599 = !DILocation(line: 738, column: 14, scope: !2558)
!2600 = !DILocation(line: 738, column: 18, scope: !2558)
!2601 = !DILocation(line: 738, column: 20, scope: !2558)
!2602 = !DILocation(line: 739, column: 58, scope: !2529)
!2603 = !DILocation(line: 739, column: 73, scope: !2529)
!2604 = !DILocation(line: 739, column: 71, scope: !2529)
!2605 = !DILocation(line: 739, column: 76, scope: !2529)
!2606 = !DILocation(line: 739, column: 69, scope: !2529)
!2607 = !DILocation(line: 739, column: 81, scope: !2529)
!2608 = !DILocation(line: 739, column: 96, scope: !2529)
!2609 = !DILocation(line: 739, column: 94, scope: !2529)
!2610 = !DILocation(line: 739, column: 99, scope: !2529)
!2611 = !DILocation(line: 739, column: 92, scope: !2529)
!2612 = !DILocation(line: 739, column: 79, scope: !2529)
!2613 = !DILocation(line: 739, column: 55, scope: !2529)
!2614 = !DILocation(line: 739, column: 48, scope: !2529)
!2615 = !DILocation(line: 739, column: 106, scope: !2543)
!2616 = !DILocation(line: 739, column: 121, scope: !2543)
!2617 = !DILocation(line: 739, column: 119, scope: !2543)
!2618 = !DILocation(line: 739, column: 124, scope: !2543)
!2619 = !DILocation(line: 739, column: 117, scope: !2543)
!2620 = !DILocation(line: 739, column: 129, scope: !2543)
!2621 = !DILocation(line: 739, column: 144, scope: !2543)
!2622 = !DILocation(line: 739, column: 142, scope: !2543)
!2623 = !DILocation(line: 739, column: 147, scope: !2543)
!2624 = !DILocation(line: 739, column: 140, scope: !2543)
!2625 = !DILocation(line: 739, column: 127, scope: !2543)
!2626 = !DILocation(line: 739, column: 48, scope: !2543)
!2627 = !DILocation(line: 739, column: 48, scope: !2556)
!2628 = !DILocation(line: 739, column: 48, scope: !2558)
!2629 = !DILocation(line: 739, column: 162, scope: !2558)
!2630 = !DILocation(line: 739, column: 31, scope: !2558)
!2631 = !DILocation(line: 739, column: 29, scope: !2558)
!2632 = !DILocation(line: 739, column: 11, scope: !2558)
!2633 = !DILocation(line: 739, column: 9, scope: !2558)
!2634 = !DILocation(line: 739, column: 14, scope: !2558)
!2635 = !DILocation(line: 739, column: 18, scope: !2558)
!2636 = !DILocation(line: 739, column: 20, scope: !2558)
!2637 = !DILocation(line: 740, column: 5, scope: !2529)
!2638 = !DILocation(line: 736, column: 27, scope: !2639)
!2639 = !DILexicalBlockFile(scope: !2524, file: !801, discriminator: 2)
!2640 = !DILocation(line: 736, column: 5, scope: !2639)
!2641 = distinct !{!2641, !2642}
!2642 = !DILocation(line: 736, column: 5, scope: !2504)
!2643 = !DILocation(line: 741, column: 1, scope: !2504)
!2644 = distinct !DISubprogram(name: "yuv_from_cqt", scope: !801, file: !801, line: 743, type: !2645, isLocal: true, isDefinition: true, scopeLine: 744, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!2645 = !DISubroutineType(types: !2646)
!2646 = !{null, !872, !906, !798, !200, !2647, !797}
!2647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2648, size: 64, align: 64)
!2648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !798, size: 96, align: 32, elements: !1312)
!2649 = !DILocalVariable(name: "c", arg: 1, scope: !2644, file: !801, line: 743, type: !872)
!2650 = !DILocation(line: 743, column: 38, scope: !2644)
!2651 = !DILocalVariable(name: "v", arg: 2, scope: !2644, file: !801, line: 743, type: !906)
!2652 = !DILocation(line: 743, column: 59, scope: !2644)
!2653 = !DILocalVariable(name: "gamma", arg: 3, scope: !2644, file: !801, line: 743, type: !798)
!2654 = !DILocation(line: 743, column: 68, scope: !2644)
!2655 = !DILocalVariable(name: "len", arg: 4, scope: !2644, file: !801, line: 743, type: !200)
!2656 = !DILocation(line: 743, column: 79, scope: !2644)
!2657 = !DILocalVariable(name: "cm", arg: 5, scope: !2644, file: !801, line: 743, type: !2647)
!2658 = !DILocation(line: 743, column: 90, scope: !2644)
!2659 = !DILocalVariable(name: "cscheme", arg: 6, scope: !2644, file: !801, line: 743, type: !797)
!2660 = !DILocation(line: 743, column: 106, scope: !2644)
!2661 = !DILocalVariable(name: "x", scope: !2644, file: !801, line: 745, type: !200)
!2662 = !DILocation(line: 745, column: 9, scope: !2644)
!2663 = !DILocation(line: 746, column: 12, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2644, file: !801, line: 746, column: 5)
!2665 = !DILocation(line: 746, column: 10, scope: !2664)
!2666 = !DILocation(line: 746, column: 17, scope: !2667)
!2667 = !DILexicalBlockFile(scope: !2668, file: !801, discriminator: 1)
!2668 = distinct !DILexicalBlock(scope: !2664, file: !801, line: 746, column: 5)
!2669 = !DILocation(line: 746, column: 21, scope: !2667)
!2670 = !DILocation(line: 746, column: 19, scope: !2667)
!2671 = !DILocation(line: 746, column: 5, scope: !2667)
!2672 = !DILocalVariable(name: "r", scope: !2673, file: !801, line: 747, type: !798)
!2673 = distinct !DILexicalBlock(scope: !2668, file: !801, line: 746, column: 31)
!2674 = !DILocation(line: 747, column: 15, scope: !2673)
!2675 = !DILocalVariable(name: "g", scope: !2673, file: !801, line: 747, type: !798)
!2676 = !DILocation(line: 747, column: 18, scope: !2673)
!2677 = !DILocalVariable(name: "b", scope: !2673, file: !801, line: 747, type: !798)
!2678 = !DILocation(line: 747, column: 21, scope: !2673)
!2679 = !DILocation(line: 748, column: 40, scope: !2673)
!2680 = !DILocation(line: 748, column: 55, scope: !2673)
!2681 = !DILocation(line: 748, column: 53, scope: !2673)
!2682 = !DILocation(line: 748, column: 58, scope: !2673)
!2683 = !DILocation(line: 748, column: 51, scope: !2673)
!2684 = !DILocation(line: 748, column: 63, scope: !2673)
!2685 = !DILocation(line: 748, column: 78, scope: !2673)
!2686 = !DILocation(line: 748, column: 76, scope: !2673)
!2687 = !DILocation(line: 748, column: 81, scope: !2673)
!2688 = !DILocation(line: 748, column: 74, scope: !2673)
!2689 = !DILocation(line: 748, column: 61, scope: !2673)
!2690 = !DILocation(line: 748, column: 37, scope: !2673)
!2691 = !DILocation(line: 748, column: 30, scope: !2673)
!2692 = !DILocation(line: 748, column: 88, scope: !2693)
!2693 = !DILexicalBlockFile(scope: !2673, file: !801, discriminator: 1)
!2694 = !DILocation(line: 748, column: 103, scope: !2693)
!2695 = !DILocation(line: 748, column: 101, scope: !2693)
!2696 = !DILocation(line: 748, column: 106, scope: !2693)
!2697 = !DILocation(line: 748, column: 99, scope: !2693)
!2698 = !DILocation(line: 748, column: 111, scope: !2693)
!2699 = !DILocation(line: 748, column: 126, scope: !2693)
!2700 = !DILocation(line: 748, column: 124, scope: !2693)
!2701 = !DILocation(line: 748, column: 129, scope: !2693)
!2702 = !DILocation(line: 748, column: 122, scope: !2693)
!2703 = !DILocation(line: 748, column: 109, scope: !2693)
!2704 = !DILocation(line: 748, column: 30, scope: !2693)
!2705 = !DILocation(line: 748, column: 30, scope: !2706)
!2706 = !DILexicalBlockFile(scope: !2673, file: !801, discriminator: 2)
!2707 = !DILocation(line: 748, column: 30, scope: !2708)
!2708 = !DILexicalBlockFile(scope: !2673, file: !801, discriminator: 3)
!2709 = !DILocation(line: 748, column: 144, scope: !2708)
!2710 = !DILocation(line: 748, column: 13, scope: !2708)
!2711 = !DILocation(line: 748, column: 11, scope: !2708)
!2712 = !DILocation(line: 749, column: 40, scope: !2673)
!2713 = !DILocation(line: 749, column: 55, scope: !2673)
!2714 = !DILocation(line: 749, column: 53, scope: !2673)
!2715 = !DILocation(line: 749, column: 58, scope: !2673)
!2716 = !DILocation(line: 749, column: 51, scope: !2673)
!2717 = !DILocation(line: 749, column: 63, scope: !2673)
!2718 = !DILocation(line: 749, column: 78, scope: !2673)
!2719 = !DILocation(line: 749, column: 76, scope: !2673)
!2720 = !DILocation(line: 749, column: 81, scope: !2673)
!2721 = !DILocation(line: 749, column: 74, scope: !2673)
!2722 = !DILocation(line: 749, column: 61, scope: !2673)
!2723 = !DILocation(line: 749, column: 37, scope: !2673)
!2724 = !DILocation(line: 749, column: 30, scope: !2673)
!2725 = !DILocation(line: 749, column: 88, scope: !2693)
!2726 = !DILocation(line: 749, column: 103, scope: !2693)
!2727 = !DILocation(line: 749, column: 101, scope: !2693)
!2728 = !DILocation(line: 749, column: 106, scope: !2693)
!2729 = !DILocation(line: 749, column: 99, scope: !2693)
!2730 = !DILocation(line: 749, column: 111, scope: !2693)
!2731 = !DILocation(line: 749, column: 126, scope: !2693)
!2732 = !DILocation(line: 749, column: 124, scope: !2693)
!2733 = !DILocation(line: 749, column: 129, scope: !2693)
!2734 = !DILocation(line: 749, column: 122, scope: !2693)
!2735 = !DILocation(line: 749, column: 109, scope: !2693)
!2736 = !DILocation(line: 749, column: 30, scope: !2693)
!2737 = !DILocation(line: 749, column: 30, scope: !2706)
!2738 = !DILocation(line: 749, column: 30, scope: !2708)
!2739 = !DILocation(line: 749, column: 144, scope: !2708)
!2740 = !DILocation(line: 749, column: 13, scope: !2708)
!2741 = !DILocation(line: 749, column: 11, scope: !2708)
!2742 = !DILocation(line: 750, column: 40, scope: !2673)
!2743 = !DILocation(line: 750, column: 55, scope: !2673)
!2744 = !DILocation(line: 750, column: 53, scope: !2673)
!2745 = !DILocation(line: 750, column: 58, scope: !2673)
!2746 = !DILocation(line: 750, column: 51, scope: !2673)
!2747 = !DILocation(line: 750, column: 63, scope: !2673)
!2748 = !DILocation(line: 750, column: 78, scope: !2673)
!2749 = !DILocation(line: 750, column: 76, scope: !2673)
!2750 = !DILocation(line: 750, column: 81, scope: !2673)
!2751 = !DILocation(line: 750, column: 74, scope: !2673)
!2752 = !DILocation(line: 750, column: 61, scope: !2673)
!2753 = !DILocation(line: 750, column: 37, scope: !2673)
!2754 = !DILocation(line: 750, column: 30, scope: !2673)
!2755 = !DILocation(line: 750, column: 88, scope: !2693)
!2756 = !DILocation(line: 750, column: 103, scope: !2693)
!2757 = !DILocation(line: 750, column: 101, scope: !2693)
!2758 = !DILocation(line: 750, column: 106, scope: !2693)
!2759 = !DILocation(line: 750, column: 99, scope: !2693)
!2760 = !DILocation(line: 750, column: 111, scope: !2693)
!2761 = !DILocation(line: 750, column: 126, scope: !2693)
!2762 = !DILocation(line: 750, column: 124, scope: !2693)
!2763 = !DILocation(line: 750, column: 129, scope: !2693)
!2764 = !DILocation(line: 750, column: 122, scope: !2693)
!2765 = !DILocation(line: 750, column: 109, scope: !2693)
!2766 = !DILocation(line: 750, column: 30, scope: !2693)
!2767 = !DILocation(line: 750, column: 30, scope: !2706)
!2768 = !DILocation(line: 750, column: 30, scope: !2708)
!2769 = !DILocation(line: 750, column: 144, scope: !2708)
!2770 = !DILocation(line: 750, column: 13, scope: !2708)
!2771 = !DILocation(line: 750, column: 11, scope: !2708)
!2772 = !DILocation(line: 751, column: 22, scope: !2673)
!2773 = !DILocation(line: 751, column: 33, scope: !2673)
!2774 = !DILocation(line: 751, column: 31, scope: !2673)
!2775 = !DILocation(line: 751, column: 37, scope: !2673)
!2776 = !DILocation(line: 751, column: 48, scope: !2673)
!2777 = !DILocation(line: 751, column: 46, scope: !2673)
!2778 = !DILocation(line: 751, column: 35, scope: !2673)
!2779 = !DILocation(line: 751, column: 52, scope: !2673)
!2780 = !DILocation(line: 751, column: 63, scope: !2673)
!2781 = !DILocation(line: 751, column: 61, scope: !2673)
!2782 = !DILocation(line: 751, column: 50, scope: !2673)
!2783 = !DILocation(line: 751, column: 11, scope: !2673)
!2784 = !DILocation(line: 751, column: 9, scope: !2673)
!2785 = !DILocation(line: 751, column: 14, scope: !2673)
!2786 = !DILocation(line: 751, column: 18, scope: !2673)
!2787 = !DILocation(line: 751, column: 20, scope: !2673)
!2788 = !DILocation(line: 752, column: 22, scope: !2673)
!2789 = !DILocation(line: 752, column: 33, scope: !2673)
!2790 = !DILocation(line: 752, column: 31, scope: !2673)
!2791 = !DILocation(line: 752, column: 37, scope: !2673)
!2792 = !DILocation(line: 752, column: 48, scope: !2673)
!2793 = !DILocation(line: 752, column: 46, scope: !2673)
!2794 = !DILocation(line: 752, column: 35, scope: !2673)
!2795 = !DILocation(line: 752, column: 52, scope: !2673)
!2796 = !DILocation(line: 752, column: 63, scope: !2673)
!2797 = !DILocation(line: 752, column: 61, scope: !2673)
!2798 = !DILocation(line: 752, column: 50, scope: !2673)
!2799 = !DILocation(line: 752, column: 11, scope: !2673)
!2800 = !DILocation(line: 752, column: 9, scope: !2673)
!2801 = !DILocation(line: 752, column: 14, scope: !2673)
!2802 = !DILocation(line: 752, column: 18, scope: !2673)
!2803 = !DILocation(line: 752, column: 20, scope: !2673)
!2804 = !DILocation(line: 753, column: 22, scope: !2673)
!2805 = !DILocation(line: 753, column: 33, scope: !2673)
!2806 = !DILocation(line: 753, column: 31, scope: !2673)
!2807 = !DILocation(line: 753, column: 37, scope: !2673)
!2808 = !DILocation(line: 753, column: 48, scope: !2673)
!2809 = !DILocation(line: 753, column: 46, scope: !2673)
!2810 = !DILocation(line: 753, column: 35, scope: !2673)
!2811 = !DILocation(line: 753, column: 52, scope: !2673)
!2812 = !DILocation(line: 753, column: 63, scope: !2673)
!2813 = !DILocation(line: 753, column: 61, scope: !2673)
!2814 = !DILocation(line: 753, column: 50, scope: !2673)
!2815 = !DILocation(line: 753, column: 11, scope: !2673)
!2816 = !DILocation(line: 753, column: 9, scope: !2673)
!2817 = !DILocation(line: 753, column: 14, scope: !2673)
!2818 = !DILocation(line: 753, column: 18, scope: !2673)
!2819 = !DILocation(line: 753, column: 20, scope: !2673)
!2820 = !DILocation(line: 754, column: 5, scope: !2673)
!2821 = !DILocation(line: 746, column: 27, scope: !2822)
!2822 = !DILexicalBlockFile(scope: !2668, file: !801, discriminator: 2)
!2823 = !DILocation(line: 746, column: 5, scope: !2822)
!2824 = distinct !{!2824, !2825}
!2825 = !DILocation(line: 746, column: 5, scope: !2644)
!2826 = !DILocation(line: 755, column: 1, scope: !2644)
!2827 = distinct !DISubprogram(name: "request_frame", scope: !801, file: !801, line: 1562, type: !399, isLocal: true, isDefinition: true, scopeLine: 1563, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!2828 = !DILocalVariable(name: "outlink", arg: 1, scope: !2827, file: !801, line: 1562, type: !387)
!2829 = !DILocation(line: 1562, column: 40, scope: !2827)
!2830 = !DILocalVariable(name: "inlink", scope: !2827, file: !801, line: 1564, type: !387)
!2831 = !DILocation(line: 1564, column: 19, scope: !2827)
!2832 = !DILocation(line: 1564, column: 28, scope: !2827)
!2833 = !DILocation(line: 1564, column: 37, scope: !2827)
!2834 = !DILocation(line: 1564, column: 42, scope: !2827)
!2835 = !DILocalVariable(name: "ret", scope: !2827, file: !801, line: 1565, type: !200)
!2836 = !DILocation(line: 1565, column: 9, scope: !2827)
!2837 = !DILocation(line: 1567, column: 28, scope: !2827)
!2838 = !DILocation(line: 1567, column: 11, scope: !2827)
!2839 = !DILocation(line: 1567, column: 9, scope: !2827)
!2840 = !DILocation(line: 1568, column: 9, scope: !2841)
!2841 = distinct !DILexicalBlock(scope: !2827, file: !801, line: 1568, column: 9)
!2842 = !DILocation(line: 1568, column: 13, scope: !2841)
!2843 = !DILocation(line: 1568, column: 9, scope: !2827)
!2844 = !DILocation(line: 1569, column: 28, scope: !2841)
!2845 = !DILocation(line: 1569, column: 15, scope: !2841)
!2846 = !DILocation(line: 1569, column: 13, scope: !2841)
!2847 = !DILocation(line: 1569, column: 9, scope: !2841)
!2848 = !DILocation(line: 1570, column: 12, scope: !2827)
!2849 = !DILocation(line: 1570, column: 5, scope: !2827)
!2850 = distinct !DISubprogram(name: "config_output", scope: !801, file: !801, line: 1353, type: !399, isLocal: true, isDefinition: true, scopeLine: 1354, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!2851 = !DILocalVariable(name: "q", arg: 1, scope: !2852, file: !214, line: 159, type: !213)
!2852 = distinct !DISubprogram(name: "av_inv_q", scope: !214, file: !214, line: 159, type: !2853, isLocal: true, isDefinition: true, scopeLine: 160, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!2853 = !DISubroutineType(types: !2854)
!2854 = !{!213, !213}
!2855 = !DILocation(line: 159, column: 77, scope: !2852, inlinedAt: !2856)
!2856 = distinct !DILocation(line: 1367, column: 35, scope: !2850)
!2857 = !DILocalVariable(name: "r", scope: !2852, file: !214, line: 161, type: !213)
!2858 = !DILocation(line: 161, column: 16, scope: !2852, inlinedAt: !2856)
!2859 = !DILocalVariable(name: "outlink", arg: 1, scope: !2850, file: !801, line: 1353, type: !387)
!2860 = !DILocation(line: 1353, column: 40, scope: !2850)
!2861 = !DILocalVariable(name: "ctx", scope: !2850, file: !801, line: 1355, type: !173)
!2862 = !DILocation(line: 1355, column: 22, scope: !2850)
!2863 = !DILocation(line: 1355, column: 28, scope: !2850)
!2864 = !DILocation(line: 1355, column: 37, scope: !2850)
!2865 = !DILocalVariable(name: "inlink", scope: !2850, file: !801, line: 1356, type: !387)
!2866 = !DILocation(line: 1356, column: 19, scope: !2850)
!2867 = !DILocation(line: 1356, column: 28, scope: !2850)
!2868 = !DILocation(line: 1356, column: 33, scope: !2850)
!2869 = !DILocalVariable(name: "s", scope: !2850, file: !801, line: 1357, type: !823)
!2870 = !DILocation(line: 1357, column: 21, scope: !2850)
!2871 = !DILocation(line: 1357, column: 25, scope: !2850)
!2872 = !DILocation(line: 1357, column: 30, scope: !2850)
!2873 = !DILocalVariable(name: "ret", scope: !2850, file: !801, line: 1358, type: !200)
!2874 = !DILocation(line: 1358, column: 9, scope: !2850)
!2875 = !DILocation(line: 1360, column: 19, scope: !2850)
!2876 = !DILocation(line: 1360, column: 5, scope: !2850)
!2877 = !DILocation(line: 1362, column: 18, scope: !2850)
!2878 = !DILocation(line: 1362, column: 21, scope: !2850)
!2879 = !DILocation(line: 1362, column: 5, scope: !2850)
!2880 = !DILocation(line: 1362, column: 14, scope: !2850)
!2881 = !DILocation(line: 1362, column: 16, scope: !2850)
!2882 = !DILocation(line: 1363, column: 18, scope: !2850)
!2883 = !DILocation(line: 1363, column: 21, scope: !2850)
!2884 = !DILocation(line: 1363, column: 5, scope: !2850)
!2885 = !DILocation(line: 1363, column: 14, scope: !2850)
!2886 = !DILocation(line: 1363, column: 16, scope: !2850)
!2887 = !DILocation(line: 1364, column: 17, scope: !2850)
!2888 = !DILocation(line: 1364, column: 26, scope: !2850)
!2889 = !DILocation(line: 1364, column: 5, scope: !2850)
!2890 = !DILocation(line: 1364, column: 8, scope: !2850)
!2891 = !DILocation(line: 1364, column: 15, scope: !2850)
!2892 = !DILocation(line: 1365, column: 5, scope: !2850)
!2893 = !DILocation(line: 1365, column: 14, scope: !2850)
!2894 = !DILocation(line: 1365, column: 36, scope: !2850)
!2895 = !DILocation(line: 1365, column: 36, scope: !2896)
!2896 = !DILexicalBlockFile(scope: !2850, file: !801, discriminator: 1)
!2897 = !DILocation(line: 1366, column: 5, scope: !2850)
!2898 = !DILocation(line: 1366, column: 14, scope: !2850)
!2899 = !DILocation(line: 1366, column: 27, scope: !2850)
!2900 = !DILocation(line: 1366, column: 30, scope: !2850)
!2901 = !DILocation(line: 1367, column: 5, scope: !2850)
!2902 = !DILocation(line: 1367, column: 14, scope: !2850)
!2903 = !DILocation(line: 1367, column: 44, scope: !2850)
!2904 = !DILocation(line: 1367, column: 47, scope: !2850)
!2905 = !DILocation(line: 1367, column: 35, scope: !2850)
!2906 = !DILocation(line: 161, column: 20, scope: !2852, inlinedAt: !2856)
!2907 = !DILocation(line: 161, column: 24, scope: !2852, inlinedAt: !2856)
!2908 = !DILocation(line: 161, column: 31, scope: !2852, inlinedAt: !2856)
!2909 = !DILocation(line: 162, column: 12, scope: !2852, inlinedAt: !2856)
!2910 = !DILocation(line: 162, column: 5, scope: !2852, inlinedAt: !2856)
!2911 = !DILocation(line: 1367, column: 54, scope: !2896)
!2912 = !DILocation(line: 1367, column: 54, scope: !2850)
!2913 = !DILocation(line: 1367, column: 26, scope: !2850)
!2914 = !DILocation(line: 1367, column: 26, scope: !2915)
!2915 = !DILexicalBlockFile(scope: !2850, file: !801, discriminator: 2)
!2916 = !DILocation(line: 1367, column: 26, scope: !2917)
!2917 = !DILexicalBlockFile(scope: !2850, file: !801, discriminator: 3)
!2918 = !DILocation(line: 1368, column: 12, scope: !2850)
!2919 = !DILocation(line: 1369, column: 12, scope: !2850)
!2920 = !DILocation(line: 1369, column: 15, scope: !2850)
!2921 = !DILocation(line: 1369, column: 22, scope: !2850)
!2922 = !DILocation(line: 1369, column: 25, scope: !2850)
!2923 = !DILocation(line: 1369, column: 53, scope: !2850)
!2924 = !DILocation(line: 1369, column: 56, scope: !2850)
!2925 = !DILocation(line: 1369, column: 33, scope: !2850)
!2926 = !DILocation(line: 1369, column: 65, scope: !2850)
!2927 = !DILocation(line: 1369, column: 68, scope: !2850)
!2928 = !DILocation(line: 1369, column: 73, scope: !2850)
!2929 = !DILocation(line: 1369, column: 78, scope: !2850)
!2930 = !DILocation(line: 1369, column: 81, scope: !2850)
!2931 = !DILocation(line: 1369, column: 86, scope: !2850)
!2932 = !DILocation(line: 1370, column: 12, scope: !2850)
!2933 = !DILocation(line: 1370, column: 15, scope: !2850)
!2934 = !DILocation(line: 1370, column: 22, scope: !2850)
!2935 = !DILocation(line: 1370, column: 25, scope: !2850)
!2936 = !DILocation(line: 1370, column: 33, scope: !2850)
!2937 = !DILocation(line: 1370, column: 36, scope: !2850)
!2938 = !DILocation(line: 1368, column: 5, scope: !2850)
!2939 = !DILocation(line: 1372, column: 18, scope: !2850)
!2940 = !DILocation(line: 1372, column: 21, scope: !2850)
!2941 = !DILocation(line: 1372, column: 29, scope: !2850)
!2942 = !DILocation(line: 1372, column: 32, scope: !2850)
!2943 = !DILocation(line: 1372, column: 27, scope: !2850)
!2944 = !DILocation(line: 1372, column: 5, scope: !2850)
!2945 = !DILocation(line: 1372, column: 8, scope: !2850)
!2946 = !DILocation(line: 1372, column: 16, scope: !2850)
!2947 = !DILocation(line: 1373, column: 39, scope: !2948)
!2948 = distinct !DILexicalBlock(scope: !2850, file: !801, line: 1373, column: 9)
!2949 = !DILocation(line: 1373, column: 42, scope: !2948)
!2950 = !DILocation(line: 1373, column: 52, scope: !2948)
!2951 = !DILocation(line: 1373, column: 55, scope: !2948)
!2952 = !DILocation(line: 1373, column: 64, scope: !2948)
!2953 = !DILocation(line: 1373, column: 67, scope: !2948)
!2954 = !DILocation(line: 1373, column: 21, scope: !2948)
!2955 = !DILocation(line: 1373, column: 11, scope: !2948)
!2956 = !DILocation(line: 1373, column: 14, scope: !2948)
!2957 = !DILocation(line: 1373, column: 19, scope: !2948)
!2958 = !DILocation(line: 1373, column: 9, scope: !2850)
!2959 = !DILocation(line: 1374, column: 9, scope: !2948)
!2960 = !DILocation(line: 1376, column: 28, scope: !2961)
!2961 = distinct !DILexicalBlock(scope: !2850, file: !801, line: 1376, column: 9)
!2962 = !DILocation(line: 1376, column: 16, scope: !2961)
!2963 = !DILocation(line: 1376, column: 14, scope: !2961)
!2964 = !DILocation(line: 1376, column: 32, scope: !2961)
!2965 = !DILocation(line: 1376, column: 9, scope: !2850)
!2966 = !DILocation(line: 1377, column: 16, scope: !2961)
!2967 = !DILocation(line: 1377, column: 9, scope: !2961)
!2968 = !DILocation(line: 1379, column: 31, scope: !2850)
!2969 = !DILocation(line: 1379, column: 39, scope: !2850)
!2970 = !DILocation(line: 1379, column: 53, scope: !2850)
!2971 = !DILocation(line: 1379, column: 56, scope: !2850)
!2972 = !DILocation(line: 1379, column: 51, scope: !2850)
!2973 = !DILocation(line: 1379, column: 26, scope: !2850)
!2974 = !DILocation(line: 1379, column: 21, scope: !2975)
!2975 = !DILexicalBlockFile(scope: !2850, file: !801, discriminator: 4)
!2976 = !DILocation(line: 1379, column: 69, scope: !2850)
!2977 = !DILocation(line: 1379, column: 20, scope: !2850)
!2978 = !DILocation(line: 1379, column: 88, scope: !2896)
!2979 = !DILocation(line: 1379, column: 96, scope: !2896)
!2980 = !DILocation(line: 1379, column: 110, scope: !2896)
!2981 = !DILocation(line: 1379, column: 113, scope: !2896)
!2982 = !DILocation(line: 1379, column: 108, scope: !2896)
!2983 = !DILocation(line: 1379, column: 83, scope: !2896)
!2984 = !DILocation(line: 1379, column: 78, scope: !2985)
!2985 = !DILexicalBlockFile(scope: !2896, file: !801, discriminator: 5)
!2986 = !DILocation(line: 1379, column: 20, scope: !2896)
!2987 = !DILocation(line: 1379, column: 20, scope: !2915)
!2988 = !DILocation(line: 1379, column: 20, scope: !2917)
!2989 = !DILocation(line: 1379, column: 19, scope: !2917)
!2990 = !DILocation(line: 1379, column: 5, scope: !2917)
!2991 = !DILocation(line: 1379, column: 8, scope: !2917)
!2992 = !DILocation(line: 1379, column: 17, scope: !2917)
!2993 = !DILocation(line: 1380, column: 23, scope: !2850)
!2994 = !DILocation(line: 1380, column: 26, scope: !2850)
!2995 = !DILocation(line: 1380, column: 20, scope: !2850)
!2996 = !DILocation(line: 1380, column: 5, scope: !2850)
!2997 = !DILocation(line: 1380, column: 8, scope: !2850)
!2998 = !DILocation(line: 1380, column: 16, scope: !2850)
!2999 = !DILocation(line: 1381, column: 12, scope: !2850)
!3000 = !DILocation(line: 1381, column: 54, scope: !2850)
!3001 = !DILocation(line: 1381, column: 57, scope: !2850)
!3002 = !DILocation(line: 1381, column: 66, scope: !2850)
!3003 = !DILocation(line: 1381, column: 69, scope: !2850)
!3004 = !DILocation(line: 1381, column: 5, scope: !2850)
!3005 = !DILocation(line: 1383, column: 30, scope: !2850)
!3006 = !DILocation(line: 1383, column: 33, scope: !2850)
!3007 = !DILocation(line: 1383, column: 18, scope: !2850)
!3008 = !DILocation(line: 1383, column: 5, scope: !2850)
!3009 = !DILocation(line: 1383, column: 8, scope: !2850)
!3010 = !DILocation(line: 1383, column: 16, scope: !2850)
!3011 = !DILocation(line: 1384, column: 29, scope: !2850)
!3012 = !DILocation(line: 1384, column: 32, scope: !2850)
!3013 = !DILocation(line: 1384, column: 19, scope: !2850)
!3014 = !DILocation(line: 1384, column: 5, scope: !2850)
!3015 = !DILocation(line: 1384, column: 8, scope: !2850)
!3016 = !DILocation(line: 1384, column: 17, scope: !2850)
!3017 = !DILocation(line: 1385, column: 31, scope: !2850)
!3018 = !DILocation(line: 1385, column: 34, scope: !2850)
!3019 = !DILocation(line: 1385, column: 42, scope: !2850)
!3020 = !DILocation(line: 1385, column: 21, scope: !2850)
!3021 = !DILocation(line: 1385, column: 5, scope: !2850)
!3022 = !DILocation(line: 1385, column: 8, scope: !2850)
!3023 = !DILocation(line: 1385, column: 19, scope: !2850)
!3024 = !DILocation(line: 1386, column: 37, scope: !2850)
!3025 = !DILocation(line: 1386, column: 40, scope: !2850)
!3026 = !DILocation(line: 1386, column: 21, scope: !2850)
!3027 = !DILocation(line: 1386, column: 5, scope: !2850)
!3028 = !DILocation(line: 1386, column: 8, scope: !2850)
!3029 = !DILocation(line: 1386, column: 19, scope: !2850)
!3030 = !DILocation(line: 1387, column: 10, scope: !3031)
!3031 = distinct !DILexicalBlock(scope: !2850, file: !801, line: 1387, column: 9)
!3032 = !DILocation(line: 1387, column: 13, scope: !3031)
!3033 = !DILocation(line: 1387, column: 21, scope: !3031)
!3034 = !DILocation(line: 1387, column: 25, scope: !3035)
!3035 = !DILexicalBlockFile(scope: !3031, file: !801, discriminator: 1)
!3036 = !DILocation(line: 1387, column: 28, scope: !3035)
!3037 = !DILocation(line: 1387, column: 37, scope: !3035)
!3038 = !DILocation(line: 1387, column: 41, scope: !3039)
!3039 = !DILexicalBlockFile(scope: !3031, file: !801, discriminator: 2)
!3040 = !DILocation(line: 1387, column: 44, scope: !3039)
!3041 = !DILocation(line: 1387, column: 55, scope: !3039)
!3042 = !DILocation(line: 1387, column: 59, scope: !3043)
!3043 = !DILexicalBlockFile(scope: !3031, file: !801, discriminator: 3)
!3044 = !DILocation(line: 1387, column: 62, scope: !3043)
!3045 = !DILocation(line: 1387, column: 9, scope: !3043)
!3046 = !DILocation(line: 1388, column: 9, scope: !3031)
!3047 = !DILocation(line: 1390, column: 29, scope: !2850)
!3048 = !DILocation(line: 1390, column: 32, scope: !2850)
!3049 = !DILocation(line: 1390, column: 40, scope: !2850)
!3050 = !DILocation(line: 1390, column: 5, scope: !2850)
!3051 = !DILocation(line: 1390, column: 8, scope: !2850)
!3052 = !DILocation(line: 1390, column: 27, scope: !2850)
!3053 = !DILocation(line: 1391, column: 9, scope: !3054)
!3054 = distinct !DILexicalBlock(scope: !2850, file: !801, line: 1391, column: 9)
!3055 = !DILocation(line: 1391, column: 12, scope: !3054)
!3056 = !DILocation(line: 1391, column: 19, scope: !3054)
!3057 = !DILocation(line: 1391, column: 9, scope: !2850)
!3058 = !DILocalVariable(name: "k", scope: !3059, file: !801, line: 1392, type: !200)
!3059 = distinct !DILexicalBlock(scope: !3054, file: !801, line: 1391, column: 26)
!3060 = !DILocation(line: 1392, column: 13, scope: !3059)
!3061 = !DILocation(line: 1394, column: 35, scope: !3059)
!3062 = !DILocation(line: 1394, column: 38, scope: !3059)
!3063 = !DILocation(line: 1394, column: 34, scope: !3059)
!3064 = !DILocation(line: 1394, column: 66, scope: !3059)
!3065 = !DILocation(line: 1394, column: 74, scope: !3059)
!3066 = !DILocation(line: 1394, column: 88, scope: !3059)
!3067 = !DILocation(line: 1394, column: 91, scope: !3059)
!3068 = !DILocation(line: 1394, column: 86, scope: !3059)
!3069 = !DILocation(line: 1394, column: 61, scope: !3059)
!3070 = !DILocation(line: 1394, column: 58, scope: !3059)
!3071 = !DILocation(line: 1394, column: 108, scope: !3072)
!3072 = !DILexicalBlockFile(scope: !3059, file: !801, discriminator: 1)
!3073 = !DILocation(line: 1394, column: 116, scope: !3072)
!3074 = !DILocation(line: 1394, column: 130, scope: !3072)
!3075 = !DILocation(line: 1394, column: 133, scope: !3072)
!3076 = !DILocation(line: 1394, column: 128, scope: !3072)
!3077 = !DILocation(line: 1394, column: 103, scope: !3072)
!3078 = !DILocation(line: 1394, column: 34, scope: !3072)
!3079 = !DILocation(line: 1394, column: 145, scope: !3080)
!3080 = !DILexicalBlockFile(scope: !3059, file: !801, discriminator: 2)
!3081 = !DILocation(line: 1394, column: 148, scope: !3080)
!3082 = !DILocation(line: 1394, column: 144, scope: !3080)
!3083 = !DILocation(line: 1394, column: 34, scope: !3080)
!3084 = !DILocation(line: 1394, column: 34, scope: !3085)
!3085 = !DILexicalBlockFile(scope: !3059, file: !801, discriminator: 3)
!3086 = !DILocation(line: 1394, column: 33, scope: !3085)
!3087 = !DILocation(line: 1394, column: 9, scope: !3085)
!3088 = !DILocation(line: 1394, column: 12, scope: !3085)
!3089 = !DILocation(line: 1394, column: 31, scope: !3085)
!3090 = !DILocation(line: 1395, column: 42, scope: !3059)
!3091 = !DILocation(line: 1395, column: 45, scope: !3059)
!3092 = !DILocation(line: 1395, column: 26, scope: !3059)
!3093 = !DILocation(line: 1395, column: 9, scope: !3059)
!3094 = !DILocation(line: 1395, column: 12, scope: !3059)
!3095 = !DILocation(line: 1395, column: 24, scope: !3059)
!3096 = !DILocation(line: 1396, column: 14, scope: !3097)
!3097 = distinct !DILexicalBlock(scope: !3059, file: !801, line: 1396, column: 13)
!3098 = !DILocation(line: 1396, column: 17, scope: !3097)
!3099 = !DILocation(line: 1396, column: 13, scope: !3059)
!3100 = !DILocation(line: 1397, column: 13, scope: !3097)
!3101 = !DILocation(line: 1399, column: 16, scope: !3102)
!3102 = distinct !DILexicalBlock(scope: !3059, file: !801, line: 1399, column: 9)
!3103 = !DILocation(line: 1399, column: 14, scope: !3102)
!3104 = !DILocation(line: 1399, column: 21, scope: !3105)
!3105 = !DILexicalBlockFile(scope: !3106, file: !801, discriminator: 1)
!3106 = distinct !DILexicalBlock(scope: !3102, file: !801, line: 1399, column: 9)
!3107 = !DILocation(line: 1399, column: 25, scope: !3105)
!3108 = !DILocation(line: 1399, column: 28, scope: !3105)
!3109 = !DILocation(line: 1399, column: 23, scope: !3105)
!3110 = !DILocation(line: 1399, column: 9, scope: !3105)
!3111 = !DILocalVariable(name: "y", scope: !3112, file: !801, line: 1400, type: !210)
!3112 = distinct !DILexicalBlock(scope: !3106, file: !801, line: 1399, column: 53)
!3113 = !DILocation(line: 1400, column: 20, scope: !3112)
!3114 = !DILocation(line: 1400, column: 30, scope: !3112)
!3115 = !DILocation(line: 1400, column: 28, scope: !3112)
!3116 = !DILocation(line: 1400, column: 35, scope: !3112)
!3117 = !DILocation(line: 1400, column: 43, scope: !3112)
!3118 = !DILocation(line: 1400, column: 57, scope: !3112)
!3119 = !DILocation(line: 1400, column: 60, scope: !3112)
!3120 = !DILocation(line: 1400, column: 55, scope: !3112)
!3121 = !DILocation(line: 1400, column: 32, scope: !3112)
!3122 = !DILocation(line: 1401, column: 59, scope: !3112)
!3123 = !DILocation(line: 1401, column: 55, scope: !3112)
!3124 = !DILocation(line: 1401, column: 53, scope: !3112)
!3125 = !DILocation(line: 1401, column: 42, scope: !3112)
!3126 = !DILocation(line: 1401, column: 81, scope: !3112)
!3127 = !DILocation(line: 1401, column: 80, scope: !3112)
!3128 = !DILocation(line: 1401, column: 75, scope: !3129)
!3129 = !DILexicalBlockFile(scope: !3112, file: !801, discriminator: 1)
!3130 = !DILocation(line: 1401, column: 73, scope: !3112)
!3131 = !DILocation(line: 1401, column: 62, scope: !3112)
!3132 = !DILocation(line: 1401, column: 103, scope: !3112)
!3133 = !DILocation(line: 1401, column: 102, scope: !3112)
!3134 = !DILocation(line: 1401, column: 97, scope: !3135)
!3135 = !DILexicalBlockFile(scope: !3112, file: !801, discriminator: 2)
!3136 = !DILocation(line: 1401, column: 95, scope: !3112)
!3137 = !DILocation(line: 1401, column: 84, scope: !3112)
!3138 = !DILocation(line: 1401, column: 33, scope: !3112)
!3139 = !DILocation(line: 1401, column: 28, scope: !3112)
!3140 = !DILocation(line: 1401, column: 13, scope: !3112)
!3141 = !DILocation(line: 1401, column: 16, scope: !3112)
!3142 = !DILocation(line: 1401, column: 31, scope: !3112)
!3143 = !DILocation(line: 1402, column: 9, scope: !3112)
!3144 = !DILocation(line: 1399, column: 49, scope: !3145)
!3145 = !DILexicalBlockFile(scope: !3106, file: !801, discriminator: 2)
!3146 = !DILocation(line: 1399, column: 9, scope: !3145)
!3147 = distinct !{!3147, !3148}
!3148 = !DILocation(line: 1399, column: 9, scope: !3059)
!3149 = !DILocation(line: 1403, column: 5, scope: !3059)
!3150 = !DILocation(line: 1405, column: 5, scope: !2850)
!3151 = !DILocation(line: 1405, column: 8, scope: !2850)
!3152 = !DILocation(line: 1405, column: 18, scope: !2850)
!3153 = !DILocation(line: 1406, column: 5, scope: !2850)
!3154 = !DILocation(line: 1406, column: 8, scope: !2850)
!3155 = !DILocation(line: 1406, column: 17, scope: !2850)
!3156 = !DILocation(line: 1407, column: 5, scope: !2850)
!3157 = !DILocation(line: 1407, column: 8, scope: !2850)
!3158 = !DILocation(line: 1407, column: 23, scope: !2850)
!3159 = !DILocation(line: 1408, column: 5, scope: !2850)
!3160 = !DILocation(line: 1408, column: 8, scope: !2850)
!3161 = !DILocation(line: 1408, column: 18, scope: !2850)
!3162 = !DILocation(line: 1409, column: 9, scope: !3163)
!3163 = distinct !DILexicalBlock(scope: !2850, file: !801, line: 1409, column: 9)
!3164 = !DILocation(line: 1409, column: 12, scope: !3163)
!3165 = !DILocation(line: 1409, column: 19, scope: !3163)
!3166 = !DILocation(line: 1409, column: 9, scope: !2850)
!3167 = !DILocation(line: 1410, column: 9, scope: !3168)
!3168 = distinct !DILexicalBlock(scope: !3163, file: !801, line: 1409, column: 40)
!3169 = !DILocation(line: 1410, column: 12, scope: !3168)
!3170 = !DILocation(line: 1410, column: 21, scope: !3168)
!3171 = !DILocation(line: 1411, column: 9, scope: !3168)
!3172 = !DILocation(line: 1411, column: 12, scope: !3168)
!3173 = !DILocation(line: 1411, column: 22, scope: !3168)
!3174 = !DILocation(line: 1412, column: 9, scope: !3168)
!3175 = !DILocation(line: 1412, column: 12, scope: !3168)
!3176 = !DILocation(line: 1412, column: 24, scope: !3168)
!3177 = !DILocation(line: 1413, column: 5, scope: !3168)
!3178 = !DILocation(line: 1414, column: 9, scope: !3179)
!3179 = distinct !DILexicalBlock(scope: !3163, file: !801, line: 1413, column: 12)
!3180 = !DILocation(line: 1414, column: 12, scope: !3179)
!3181 = !DILocation(line: 1414, column: 21, scope: !3179)
!3182 = !DILocation(line: 1415, column: 9, scope: !3179)
!3183 = !DILocation(line: 1415, column: 12, scope: !3179)
!3184 = !DILocation(line: 1415, column: 22, scope: !3179)
!3185 = !DILocation(line: 1416, column: 9, scope: !3179)
!3186 = !DILocation(line: 1416, column: 12, scope: !3179)
!3187 = !DILocation(line: 1416, column: 24, scope: !3179)
!3188 = !DILocation(line: 1420, column: 29, scope: !3189)
!3189 = distinct !DILexicalBlock(scope: !2850, file: !801, line: 1419, column: 9)
!3190 = !DILocation(line: 1420, column: 9, scope: !3189)
!3191 = !DILocation(line: 1422, column: 25, scope: !3192)
!3192 = distinct !DILexicalBlock(scope: !2850, file: !801, line: 1422, column: 9)
!3193 = !DILocation(line: 1422, column: 16, scope: !3192)
!3194 = !DILocation(line: 1422, column: 14, scope: !3192)
!3195 = !DILocation(line: 1422, column: 29, scope: !3192)
!3196 = !DILocation(line: 1422, column: 9, scope: !2850)
!3197 = !DILocation(line: 1423, column: 16, scope: !3192)
!3198 = !DILocation(line: 1423, column: 9, scope: !3192)
!3199 = !DILocation(line: 1425, column: 9, scope: !3200)
!3200 = distinct !DILexicalBlock(scope: !2850, file: !801, line: 1425, column: 9)
!3201 = !DILocation(line: 1425, column: 12, scope: !3200)
!3202 = !DILocation(line: 1425, column: 9, scope: !2850)
!3203 = !DILocation(line: 1426, column: 14, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !3205, file: !801, line: 1426, column: 13)
!3205 = distinct !DILexicalBlock(scope: !3200, file: !801, line: 1425, column: 20)
!3206 = !DILocation(line: 1426, column: 17, scope: !3204)
!3207 = !DILocation(line: 1426, column: 13, scope: !3205)
!3208 = !DILocation(line: 1427, column: 40, scope: !3209)
!3209 = distinct !DILexicalBlock(scope: !3210, file: !801, line: 1427, column: 17)
!3210 = distinct !DILexicalBlock(scope: !3204, file: !801, line: 1426, column: 23)
!3211 = !DILocation(line: 1427, column: 24, scope: !3209)
!3212 = !DILocation(line: 1427, column: 22, scope: !3209)
!3213 = !DILocation(line: 1427, column: 44, scope: !3209)
!3214 = !DILocation(line: 1427, column: 17, scope: !3210)
!3215 = !DILocation(line: 1428, column: 24, scope: !3209)
!3216 = !DILocation(line: 1428, column: 17, scope: !3209)
!3217 = !DILocation(line: 1429, column: 9, scope: !3210)
!3218 = !DILocation(line: 1429, column: 20, scope: !3219)
!3219 = !DILexicalBlockFile(scope: !3220, file: !801, discriminator: 1)
!3220 = distinct !DILexicalBlock(scope: !3204, file: !801, line: 1429, column: 20)
!3221 = !DILocation(line: 1429, column: 23, scope: !3219)
!3222 = !DILocation(line: 1430, column: 37, scope: !3223)
!3223 = distinct !DILexicalBlock(scope: !3224, file: !801, line: 1430, column: 17)
!3224 = distinct !DILexicalBlock(scope: !3220, file: !801, line: 1429, column: 33)
!3225 = !DILocation(line: 1430, column: 17, scope: !3223)
!3226 = !DILocation(line: 1430, column: 40, scope: !3223)
!3227 = !DILocation(line: 1430, column: 17, scope: !3224)
!3228 = !DILocation(line: 1431, column: 24, scope: !3229)
!3229 = distinct !DILexicalBlock(scope: !3223, file: !801, line: 1430, column: 45)
!3230 = !DILocation(line: 1431, column: 17, scope: !3229)
!3231 = !DILocation(line: 1432, column: 41, scope: !3232)
!3232 = distinct !DILexicalBlock(scope: !3229, file: !801, line: 1432, column: 21)
!3233 = !DILocation(line: 1432, column: 21, scope: !3232)
!3234 = !DILocation(line: 1432, column: 44, scope: !3232)
!3235 = !DILocation(line: 1432, column: 21, scope: !3229)
!3236 = !DILocation(line: 1433, column: 28, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3232, file: !801, line: 1432, column: 49)
!3238 = !DILocation(line: 1433, column: 21, scope: !3237)
!3239 = !DILocation(line: 1434, column: 48, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !3237, file: !801, line: 1434, column: 25)
!3241 = !DILocation(line: 1434, column: 32, scope: !3240)
!3242 = !DILocation(line: 1434, column: 30, scope: !3240)
!3243 = !DILocation(line: 1434, column: 52, scope: !3240)
!3244 = !DILocation(line: 1434, column: 25, scope: !3237)
!3245 = !DILocation(line: 1435, column: 32, scope: !3240)
!3246 = !DILocation(line: 1435, column: 25, scope: !3240)
!3247 = !DILocation(line: 1436, column: 17, scope: !3237)
!3248 = !DILocation(line: 1437, column: 13, scope: !3229)
!3249 = !DILocation(line: 1438, column: 9, scope: !3224)
!3250 = !DILocation(line: 1439, column: 37, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3252, file: !801, line: 1439, column: 17)
!3252 = distinct !DILexicalBlock(scope: !3220, file: !801, line: 1438, column: 16)
!3253 = !DILocation(line: 1439, column: 17, scope: !3251)
!3254 = !DILocation(line: 1439, column: 40, scope: !3251)
!3255 = !DILocation(line: 1439, column: 17, scope: !3252)
!3256 = !DILocation(line: 1440, column: 24, scope: !3257)
!3257 = distinct !DILexicalBlock(scope: !3251, file: !801, line: 1439, column: 45)
!3258 = !DILocation(line: 1440, column: 17, scope: !3257)
!3259 = !DILocation(line: 1441, column: 44, scope: !3260)
!3260 = distinct !DILexicalBlock(scope: !3257, file: !801, line: 1441, column: 21)
!3261 = !DILocation(line: 1441, column: 28, scope: !3260)
!3262 = !DILocation(line: 1441, column: 26, scope: !3260)
!3263 = !DILocation(line: 1441, column: 48, scope: !3260)
!3264 = !DILocation(line: 1441, column: 21, scope: !3257)
!3265 = !DILocation(line: 1442, column: 28, scope: !3260)
!3266 = !DILocation(line: 1442, column: 21, scope: !3260)
!3267 = !DILocation(line: 1443, column: 13, scope: !3257)
!3268 = !DILocation(line: 1445, column: 5, scope: !3205)
!3269 = !DILocation(line: 1447, column: 9, scope: !3270)
!3270 = distinct !DILexicalBlock(scope: !2850, file: !801, line: 1447, column: 9)
!3271 = !DILocation(line: 1447, column: 12, scope: !3270)
!3272 = !DILocation(line: 1447, column: 9, scope: !2850)
!3273 = !DILocation(line: 1448, column: 44, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !3270, file: !801, line: 1447, column: 20)
!3275 = !DILocation(line: 1448, column: 53, scope: !3274)
!3276 = !DILocation(line: 1448, column: 60, scope: !3274)
!3277 = !DILocation(line: 1448, column: 43, scope: !3274)
!3278 = !DILocation(line: 1448, column: 43, scope: !3279)
!3279 = !DILexicalBlockFile(scope: !3274, file: !801, discriminator: 1)
!3280 = !DILocation(line: 1449, column: 46, scope: !3274)
!3281 = !DILocation(line: 1449, column: 55, scope: !3274)
!3282 = !DILocation(line: 1448, column: 43, scope: !3283)
!3283 = !DILexicalBlockFile(scope: !3274, file: !801, discriminator: 2)
!3284 = !DILocation(line: 1448, column: 43, scope: !3285)
!3285 = !DILexicalBlockFile(scope: !3274, file: !801, discriminator: 3)
!3286 = !DILocation(line: 1449, column: 63, scope: !3279)
!3287 = !DILocation(line: 1449, column: 66, scope: !3279)
!3288 = !DILocation(line: 1449, column: 73, scope: !3279)
!3289 = !DILocation(line: 1449, column: 76, scope: !3279)
!3290 = !DILocation(line: 1448, column: 25, scope: !3285)
!3291 = !DILocation(line: 1448, column: 9, scope: !3285)
!3292 = !DILocation(line: 1448, column: 12, scope: !3285)
!3293 = !DILocation(line: 1448, column: 23, scope: !3285)
!3294 = !DILocation(line: 1450, column: 14, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3274, file: !801, line: 1450, column: 13)
!3296 = !DILocation(line: 1450, column: 17, scope: !3295)
!3297 = !DILocation(line: 1450, column: 13, scope: !3274)
!3298 = !DILocation(line: 1451, column: 13, scope: !3295)
!3299 = !DILocation(line: 1452, column: 5, scope: !3274)
!3300 = !DILocation(line: 1454, column: 32, scope: !2850)
!3301 = !DILocation(line: 1454, column: 35, scope: !2850)
!3302 = !DILocation(line: 1454, column: 16, scope: !2850)
!3303 = !DILocation(line: 1454, column: 5, scope: !2850)
!3304 = !DILocation(line: 1454, column: 8, scope: !2850)
!3305 = !DILocation(line: 1454, column: 14, scope: !2850)
!3306 = !DILocation(line: 1455, column: 36, scope: !2850)
!3307 = !DILocation(line: 1455, column: 39, scope: !2850)
!3308 = !DILocation(line: 1455, column: 20, scope: !2850)
!3309 = !DILocation(line: 1455, column: 5, scope: !2850)
!3310 = !DILocation(line: 1455, column: 8, scope: !2850)
!3311 = !DILocation(line: 1455, column: 18, scope: !2850)
!3312 = !DILocation(line: 1456, column: 32, scope: !2850)
!3313 = !DILocation(line: 1456, column: 35, scope: !2850)
!3314 = !DILocation(line: 1456, column: 16, scope: !2850)
!3315 = !DILocation(line: 1456, column: 5, scope: !2850)
!3316 = !DILocation(line: 1456, column: 8, scope: !2850)
!3317 = !DILocation(line: 1456, column: 14, scope: !2850)
!3318 = !DILocation(line: 1457, column: 10, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !2850, file: !801, line: 1457, column: 9)
!3320 = !DILocation(line: 1457, column: 13, scope: !3319)
!3321 = !DILocation(line: 1457, column: 19, scope: !3319)
!3322 = !DILocation(line: 1457, column: 23, scope: !3323)
!3323 = !DILexicalBlockFile(scope: !3319, file: !801, discriminator: 1)
!3324 = !DILocation(line: 1457, column: 26, scope: !3323)
!3325 = !DILocation(line: 1457, column: 36, scope: !3323)
!3326 = !DILocation(line: 1457, column: 40, scope: !3327)
!3327 = !DILexicalBlockFile(scope: !3319, file: !801, discriminator: 2)
!3328 = !DILocation(line: 1457, column: 43, scope: !3327)
!3329 = !DILocation(line: 1457, column: 9, scope: !3327)
!3330 = !DILocation(line: 1458, column: 9, scope: !3319)
!3331 = !DILocation(line: 1460, column: 5, scope: !2850)
!3332 = !DILocation(line: 1460, column: 8, scope: !2850)
!3333 = !DILocation(line: 1460, column: 19, scope: !2850)
!3334 = !DILocation(line: 1461, column: 5, scope: !2850)
!3335 = !DILocation(line: 1461, column: 8, scope: !2850)
!3336 = !DILocation(line: 1461, column: 17, scope: !2850)
!3337 = !DILocation(line: 1462, column: 5, scope: !2850)
!3338 = !DILocation(line: 1462, column: 8, scope: !2850)
!3339 = !DILocation(line: 1462, column: 17, scope: !2850)
!3340 = !DILocation(line: 1463, column: 25, scope: !2850)
!3341 = !DILocation(line: 1463, column: 28, scope: !2850)
!3342 = !DILocation(line: 1463, column: 5, scope: !2850)
!3343 = !DILocation(line: 1463, column: 8, scope: !2850)
!3344 = !DILocation(line: 1463, column: 23, scope: !2850)
!3345 = !DILocation(line: 1464, column: 5, scope: !2850)
!3346 = !DILocation(line: 1464, column: 8, scope: !2850)
!3347 = !DILocation(line: 1464, column: 23, scope: !2850)
!3348 = !DILocation(line: 1465, column: 5, scope: !2850)
!3349 = !DILocation(line: 1465, column: 8, scope: !2850)
!3350 = !DILocation(line: 1465, column: 39, scope: !2850)
!3351 = !DILocation(line: 1465, column: 47, scope: !2850)
!3352 = !DILocation(line: 1465, column: 60, scope: !2850)
!3353 = !DILocation(line: 1465, column: 63, scope: !2850)
!3354 = !DILocation(line: 1465, column: 29, scope: !2850)
!3355 = !DILocation(line: 1465, column: 72, scope: !2850)
!3356 = !DILocation(line: 1465, column: 75, scope: !2850)
!3357 = !DILocation(line: 1465, column: 20, scope: !2850)
!3358 = !DILocation(line: 1465, column: 20, scope: !2896)
!3359 = !DILocation(line: 1465, column: 20, scope: !2915)
!3360 = !DILocation(line: 1466, column: 21, scope: !2850)
!3361 = !DILocation(line: 1466, column: 24, scope: !2850)
!3362 = !DILocation(line: 1466, column: 34, scope: !2850)
!3363 = !DILocation(line: 1466, column: 40, scope: !2850)
!3364 = !DILocation(line: 1466, column: 43, scope: !2850)
!3365 = !DILocation(line: 1466, column: 53, scope: !2850)
!3366 = !DILocation(line: 1466, column: 38, scope: !2850)
!3367 = !DILocation(line: 1466, column: 5, scope: !2850)
!3368 = !DILocation(line: 1466, column: 8, scope: !2850)
!3369 = !DILocation(line: 1466, column: 13, scope: !2850)
!3370 = !DILocation(line: 1467, column: 25, scope: !2850)
!3371 = !DILocation(line: 1467, column: 28, scope: !2850)
!3372 = !DILocation(line: 1467, column: 38, scope: !2850)
!3373 = !DILocation(line: 1467, column: 5, scope: !2850)
!3374 = !DILocation(line: 1467, column: 8, scope: !2850)
!3375 = !DILocation(line: 1467, column: 18, scope: !2850)
!3376 = !DILocation(line: 1467, column: 22, scope: !2850)
!3377 = !DILocation(line: 1468, column: 9, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !2850, file: !801, line: 1468, column: 9)
!3379 = !DILocation(line: 1468, column: 12, scope: !3378)
!3380 = !DILocation(line: 1468, column: 22, scope: !3378)
!3381 = !DILocation(line: 1468, column: 9, scope: !2850)
!3382 = !DILocation(line: 1469, column: 16, scope: !3383)
!3383 = distinct !DILexicalBlock(scope: !3378, file: !801, line: 1468, column: 27)
!3384 = !DILocation(line: 1470, column: 16, scope: !3383)
!3385 = !DILocation(line: 1470, column: 24, scope: !3383)
!3386 = !DILocation(line: 1470, column: 37, scope: !3383)
!3387 = !DILocation(line: 1470, column: 40, scope: !3383)
!3388 = !DILocation(line: 1470, column: 46, scope: !3383)
!3389 = !DILocation(line: 1470, column: 49, scope: !3383)
!3390 = !DILocation(line: 1470, column: 59, scope: !3383)
!3391 = !DILocation(line: 1470, column: 64, scope: !3383)
!3392 = !DILocation(line: 1470, column: 67, scope: !3383)
!3393 = !DILocation(line: 1470, column: 77, scope: !3383)
!3394 = !DILocation(line: 1469, column: 9, scope: !3383)
!3395 = !DILocation(line: 1471, column: 16, scope: !3383)
!3396 = !DILocation(line: 1471, column: 9, scope: !3383)
!3397 = !DILocation(line: 1472, column: 5, scope: !3383)
!3398 = !DILocation(line: 1473, column: 16, scope: !3399)
!3399 = distinct !DILexicalBlock(scope: !3378, file: !801, line: 1472, column: 12)
!3400 = !DILocation(line: 1474, column: 16, scope: !3399)
!3401 = !DILocation(line: 1474, column: 24, scope: !3399)
!3402 = !DILocation(line: 1474, column: 37, scope: !3399)
!3403 = !DILocation(line: 1474, column: 40, scope: !3399)
!3404 = !DILocation(line: 1473, column: 9, scope: !3399)
!3405 = !DILocation(line: 1477, column: 5, scope: !2850)
!3406 = !DILocation(line: 1478, column: 1, scope: !2850)
!3407 = distinct !DISubprogram(name: "common_uninit", scope: !801, file: !801, line: 108, type: !2163, isLocal: true, isDefinition: true, scopeLine: 109, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!3408 = !DILocalVariable(name: "s", arg: 1, scope: !3407, file: !801, line: 108, type: !823)
!3409 = !DILocation(line: 108, column: 43, scope: !3407)
!3410 = !DILocalVariable(name: "k", scope: !3407, file: !801, line: 110, type: !200)
!3411 = !DILocation(line: 110, column: 9, scope: !3407)
!3412 = !DILocalVariable(name: "level", scope: !3407, file: !801, line: 111, type: !200)
!3413 = !DILocation(line: 111, column: 9, scope: !3407)
!3414 = !DILocalVariable(name: "plot_time", scope: !3407, file: !801, line: 112, type: !206)
!3415 = !DILocation(line: 112, column: 13, scope: !3407)
!3416 = !DILocation(line: 114, column: 9, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !3407, file: !801, line: 114, column: 9)
!3418 = !DILocation(line: 114, column: 12, scope: !3417)
!3419 = !DILocation(line: 114, column: 9, scope: !3407)
!3420 = !DILocation(line: 115, column: 16, scope: !3417)
!3421 = !DILocation(line: 115, column: 19, scope: !3417)
!3422 = !DILocation(line: 115, column: 24, scope: !3417)
!3423 = !DILocation(line: 115, column: 65, scope: !3417)
!3424 = !DILocation(line: 115, column: 68, scope: !3417)
!3425 = !DILocation(line: 115, column: 77, scope: !3417)
!3426 = !DILocation(line: 115, column: 9, scope: !3417)
!3427 = !DILocation(line: 116, column: 9, scope: !3428)
!3428 = distinct !DILexicalBlock(scope: !3407, file: !801, line: 116, column: 9)
!3429 = !DILocation(line: 116, column: 12, scope: !3428)
!3430 = !DILocation(line: 116, column: 9, scope: !3407)
!3431 = !DILocation(line: 117, column: 16, scope: !3428)
!3432 = !DILocation(line: 117, column: 19, scope: !3428)
!3433 = !DILocation(line: 117, column: 24, scope: !3428)
!3434 = !DILocation(line: 117, column: 65, scope: !3428)
!3435 = !DILocation(line: 117, column: 68, scope: !3428)
!3436 = !DILocation(line: 117, column: 77, scope: !3428)
!3437 = !DILocation(line: 117, column: 9, scope: !3428)
!3438 = !DILocation(line: 118, column: 9, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3407, file: !801, line: 118, column: 9)
!3440 = !DILocation(line: 118, column: 12, scope: !3439)
!3441 = !DILocation(line: 118, column: 9, scope: !3407)
!3442 = !DILocation(line: 119, column: 16, scope: !3439)
!3443 = !DILocation(line: 119, column: 19, scope: !3439)
!3444 = !DILocation(line: 119, column: 24, scope: !3439)
!3445 = !DILocation(line: 119, column: 65, scope: !3439)
!3446 = !DILocation(line: 119, column: 68, scope: !3439)
!3447 = !DILocation(line: 119, column: 85, scope: !3439)
!3448 = !DILocation(line: 119, column: 9, scope: !3439)
!3449 = !DILocation(line: 120, column: 9, scope: !3450)
!3450 = distinct !DILexicalBlock(scope: !3407, file: !801, line: 120, column: 9)
!3451 = !DILocation(line: 120, column: 12, scope: !3450)
!3452 = !DILocation(line: 120, column: 9, scope: !3407)
!3453 = !DILocation(line: 121, column: 16, scope: !3450)
!3454 = !DILocation(line: 121, column: 19, scope: !3450)
!3455 = !DILocation(line: 121, column: 24, scope: !3450)
!3456 = !DILocation(line: 121, column: 65, scope: !3450)
!3457 = !DILocation(line: 121, column: 68, scope: !3450)
!3458 = !DILocation(line: 121, column: 85, scope: !3450)
!3459 = !DILocation(line: 121, column: 9, scope: !3450)
!3460 = !DILocation(line: 122, column: 9, scope: !3461)
!3461 = distinct !DILexicalBlock(scope: !3407, file: !801, line: 122, column: 9)
!3462 = !DILocation(line: 122, column: 12, scope: !3461)
!3463 = !DILocation(line: 122, column: 9, scope: !3407)
!3464 = !DILocation(line: 123, column: 16, scope: !3461)
!3465 = !DILocation(line: 123, column: 19, scope: !3461)
!3466 = !DILocation(line: 123, column: 24, scope: !3461)
!3467 = !DILocation(line: 123, column: 65, scope: !3461)
!3468 = !DILocation(line: 123, column: 68, scope: !3461)
!3469 = !DILocation(line: 123, column: 79, scope: !3461)
!3470 = !DILocation(line: 123, column: 9, scope: !3461)
!3471 = !DILocation(line: 124, column: 9, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !3407, file: !801, line: 124, column: 9)
!3473 = !DILocation(line: 124, column: 12, scope: !3472)
!3474 = !DILocation(line: 124, column: 9, scope: !3407)
!3475 = !DILocation(line: 125, column: 16, scope: !3472)
!3476 = !DILocation(line: 125, column: 19, scope: !3472)
!3477 = !DILocation(line: 125, column: 24, scope: !3472)
!3478 = !DILocation(line: 125, column: 65, scope: !3472)
!3479 = !DILocation(line: 125, column: 68, scope: !3472)
!3480 = !DILocation(line: 125, column: 77, scope: !3472)
!3481 = !DILocation(line: 125, column: 9, scope: !3472)
!3482 = !DILocation(line: 126, column: 9, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3407, file: !801, line: 126, column: 9)
!3484 = !DILocation(line: 126, column: 12, scope: !3483)
!3485 = !DILocation(line: 126, column: 9, scope: !3407)
!3486 = !DILocation(line: 127, column: 16, scope: !3483)
!3487 = !DILocation(line: 127, column: 19, scope: !3483)
!3488 = !DILocation(line: 127, column: 24, scope: !3483)
!3489 = !DILocation(line: 127, column: 65, scope: !3483)
!3490 = !DILocation(line: 127, column: 68, scope: !3483)
!3491 = !DILocation(line: 127, column: 78, scope: !3483)
!3492 = !DILocation(line: 127, column: 9, scope: !3483)
!3493 = !DILocation(line: 128, column: 9, scope: !3494)
!3494 = distinct !DILexicalBlock(scope: !3407, file: !801, line: 128, column: 9)
!3495 = !DILocation(line: 128, column: 12, scope: !3494)
!3496 = !DILocation(line: 128, column: 9, scope: !3407)
!3497 = !DILocation(line: 129, column: 16, scope: !3494)
!3498 = !DILocation(line: 129, column: 19, scope: !3494)
!3499 = !DILocation(line: 129, column: 24, scope: !3494)
!3500 = !DILocation(line: 129, column: 65, scope: !3494)
!3501 = !DILocation(line: 129, column: 68, scope: !3494)
!3502 = !DILocation(line: 129, column: 78, scope: !3494)
!3503 = !DILocation(line: 129, column: 9, scope: !3494)
!3504 = !DILocation(line: 131, column: 17, scope: !3407)
!3505 = !DILocation(line: 131, column: 20, scope: !3407)
!3506 = !DILocation(line: 131, column: 31, scope: !3407)
!3507 = !DILocation(line: 131, column: 34, scope: !3407)
!3508 = !DILocation(line: 131, column: 29, scope: !3407)
!3509 = !DILocation(line: 131, column: 45, scope: !3407)
!3510 = !DILocation(line: 131, column: 48, scope: !3407)
!3511 = !DILocation(line: 131, column: 43, scope: !3407)
!3512 = !DILocation(line: 131, column: 67, scope: !3407)
!3513 = !DILocation(line: 131, column: 70, scope: !3407)
!3514 = !DILocation(line: 131, column: 65, scope: !3407)
!3515 = !DILocation(line: 132, column: 17, scope: !3407)
!3516 = !DILocation(line: 132, column: 20, scope: !3407)
!3517 = !DILocation(line: 132, column: 15, scope: !3407)
!3518 = !DILocation(line: 132, column: 33, scope: !3407)
!3519 = !DILocation(line: 132, column: 36, scope: !3407)
!3520 = !DILocation(line: 132, column: 31, scope: !3407)
!3521 = !DILocation(line: 132, column: 47, scope: !3407)
!3522 = !DILocation(line: 132, column: 50, scope: !3407)
!3523 = !DILocation(line: 132, column: 45, scope: !3407)
!3524 = !DILocation(line: 132, column: 62, scope: !3407)
!3525 = !DILocation(line: 132, column: 65, scope: !3407)
!3526 = !DILocation(line: 132, column: 60, scope: !3407)
!3527 = !DILocation(line: 131, column: 15, scope: !3407)
!3528 = !DILocation(line: 133, column: 9, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3407, file: !801, line: 133, column: 9)
!3530 = !DILocation(line: 133, column: 9, scope: !3407)
!3531 = !DILocation(line: 134, column: 16, scope: !3529)
!3532 = !DILocation(line: 134, column: 19, scope: !3529)
!3533 = !DILocation(line: 134, column: 24, scope: !3529)
!3534 = !DILocation(line: 134, column: 65, scope: !3529)
!3535 = !DILocation(line: 134, column: 75, scope: !3529)
!3536 = !DILocation(line: 134, column: 9, scope: !3529)
!3537 = !DILocation(line: 137, column: 64, scope: !3407)
!3538 = !DILocation(line: 137, column: 67, scope: !3407)
!3539 = !DILocation(line: 137, column: 77, scope: !3407)
!3540 = !DILocation(line: 137, column: 49, scope: !3407)
!3541 = !DILocation(line: 137, column: 52, scope: !3407)
!3542 = !DILocation(line: 137, column: 62, scope: !3407)
!3543 = !DILocation(line: 137, column: 35, scope: !3407)
!3544 = !DILocation(line: 137, column: 38, scope: !3407)
!3545 = !DILocation(line: 137, column: 47, scope: !3407)
!3546 = !DILocation(line: 137, column: 19, scope: !3407)
!3547 = !DILocation(line: 137, column: 22, scope: !3407)
!3548 = !DILocation(line: 137, column: 33, scope: !3407)
!3549 = !DILocation(line: 136, column: 55, scope: !3407)
!3550 = !DILocation(line: 136, column: 58, scope: !3407)
!3551 = !DILocation(line: 137, column: 17, scope: !3407)
!3552 = !DILocation(line: 136, column: 33, scope: !3407)
!3553 = !DILocation(line: 136, column: 36, scope: !3407)
!3554 = !DILocation(line: 136, column: 53, scope: !3407)
!3555 = !DILocation(line: 136, column: 19, scope: !3407)
!3556 = !DILocation(line: 136, column: 22, scope: !3407)
!3557 = !DILocation(line: 136, column: 31, scope: !3407)
!3558 = !DILocation(line: 136, column: 5, scope: !3407)
!3559 = !DILocation(line: 136, column: 8, scope: !3407)
!3560 = !DILocation(line: 136, column: 17, scope: !3407)
!3561 = !DILocation(line: 139, column: 9, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3407, file: !801, line: 139, column: 9)
!3563 = !DILocation(line: 139, column: 12, scope: !3562)
!3564 = !DILocation(line: 139, column: 23, scope: !3562)
!3565 = !DILocation(line: 139, column: 27, scope: !3566)
!3566 = !DILexicalBlockFile(scope: !3562, file: !801, discriminator: 1)
!3567 = !DILocation(line: 139, column: 30, scope: !3566)
!3568 = !DILocation(line: 139, column: 42, scope: !3566)
!3569 = !DILocation(line: 139, column: 9, scope: !3566)
!3570 = !DILocation(line: 140, column: 18, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3562, file: !801, line: 139, column: 50)
!3572 = !DILocation(line: 140, column: 21, scope: !3571)
!3573 = !DILocation(line: 140, column: 33, scope: !3571)
!3574 = !DILocation(line: 140, column: 9, scope: !3571)
!3575 = !DILocation(line: 141, column: 16, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3571, file: !801, line: 141, column: 9)
!3577 = !DILocation(line: 141, column: 14, scope: !3576)
!3578 = !DILocation(line: 141, column: 21, scope: !3579)
!3579 = !DILexicalBlockFile(scope: !3580, file: !801, discriminator: 1)
!3580 = distinct !DILexicalBlock(scope: !3576, file: !801, line: 141, column: 9)
!3581 = !DILocation(line: 141, column: 23, scope: !3579)
!3582 = !DILocation(line: 141, column: 9, scope: !3579)
!3583 = !DILocation(line: 142, column: 33, scope: !3580)
!3584 = !DILocation(line: 142, column: 13, scope: !3580)
!3585 = !DILocation(line: 142, column: 16, scope: !3580)
!3586 = !DILocation(line: 142, column: 28, scope: !3580)
!3587 = !DILocation(line: 142, column: 36, scope: !3580)
!3588 = !DILocation(line: 141, column: 29, scope: !3589)
!3589 = !DILexicalBlockFile(scope: !3580, file: !801, discriminator: 2)
!3590 = !DILocation(line: 141, column: 9, scope: !3589)
!3591 = distinct !{!3591, !3592}
!3592 = !DILocation(line: 141, column: 9, scope: !3571)
!3593 = !DILocation(line: 143, column: 5, scope: !3571)
!3594 = !DILocation(line: 145, column: 20, scope: !3407)
!3595 = !DILocation(line: 145, column: 23, scope: !3407)
!3596 = !DILocation(line: 145, column: 5, scope: !3407)
!3597 = !DILocation(line: 146, column: 20, scope: !3407)
!3598 = !DILocation(line: 146, column: 23, scope: !3407)
!3599 = !DILocation(line: 146, column: 5, scope: !3407)
!3600 = !DILocation(line: 147, column: 16, scope: !3407)
!3601 = !DILocation(line: 147, column: 19, scope: !3407)
!3602 = !DILocation(line: 147, column: 5, scope: !3407)
!3603 = !DILocation(line: 148, column: 5, scope: !3407)
!3604 = !DILocation(line: 148, column: 8, scope: !3407)
!3605 = !DILocation(line: 148, column: 16, scope: !3407)
!3606 = !DILocation(line: 149, column: 9, scope: !3607)
!3607 = distinct !DILexicalBlock(scope: !3407, file: !801, line: 149, column: 9)
!3608 = !DILocation(line: 149, column: 12, scope: !3607)
!3609 = !DILocation(line: 149, column: 9, scope: !3407)
!3610 = !DILocation(line: 150, column: 16, scope: !3611)
!3611 = distinct !DILexicalBlock(scope: !3607, file: !801, line: 150, column: 9)
!3612 = !DILocation(line: 150, column: 14, scope: !3611)
!3613 = !DILocation(line: 150, column: 21, scope: !3614)
!3614 = !DILexicalBlockFile(scope: !3615, file: !801, discriminator: 1)
!3615 = distinct !DILexicalBlock(scope: !3611, file: !801, line: 150, column: 9)
!3616 = !DILocation(line: 150, column: 25, scope: !3614)
!3617 = !DILocation(line: 150, column: 28, scope: !3614)
!3618 = !DILocation(line: 150, column: 23, scope: !3614)
!3619 = !DILocation(line: 150, column: 9, scope: !3614)
!3620 = !DILocation(line: 151, column: 33, scope: !3615)
!3621 = !DILocation(line: 151, column: 23, scope: !3615)
!3622 = !DILocation(line: 151, column: 26, scope: !3615)
!3623 = !DILocation(line: 151, column: 36, scope: !3615)
!3624 = !DILocation(line: 151, column: 22, scope: !3615)
!3625 = !DILocation(line: 151, column: 13, scope: !3615)
!3626 = !DILocation(line: 150, column: 38, scope: !3627)
!3627 = !DILexicalBlockFile(scope: !3615, file: !801, discriminator: 2)
!3628 = !DILocation(line: 150, column: 9, scope: !3627)
!3629 = distinct !{!3629, !3630}
!3630 = !DILocation(line: 150, column: 9, scope: !3607)
!3631 = !DILocation(line: 151, column: 39, scope: !3632)
!3632 = !DILexicalBlockFile(scope: !3611, file: !801, discriminator: 1)
!3633 = !DILocation(line: 152, column: 15, scope: !3407)
!3634 = !DILocation(line: 152, column: 18, scope: !3407)
!3635 = !DILocation(line: 152, column: 14, scope: !3407)
!3636 = !DILocation(line: 152, column: 5, scope: !3407)
!3637 = !DILocation(line: 153, column: 15, scope: !3407)
!3638 = !DILocation(line: 153, column: 18, scope: !3407)
!3639 = !DILocation(line: 153, column: 14, scope: !3407)
!3640 = !DILocation(line: 153, column: 5, scope: !3407)
!3641 = !DILocation(line: 154, column: 15, scope: !3407)
!3642 = !DILocation(line: 154, column: 18, scope: !3407)
!3643 = !DILocation(line: 154, column: 14, scope: !3407)
!3644 = !DILocation(line: 154, column: 5, scope: !3407)
!3645 = !DILocation(line: 155, column: 15, scope: !3407)
!3646 = !DILocation(line: 155, column: 18, scope: !3407)
!3647 = !DILocation(line: 155, column: 14, scope: !3407)
!3648 = !DILocation(line: 155, column: 5, scope: !3407)
!3649 = !DILocation(line: 156, column: 15, scope: !3407)
!3650 = !DILocation(line: 156, column: 18, scope: !3407)
!3651 = !DILocation(line: 156, column: 14, scope: !3407)
!3652 = !DILocation(line: 156, column: 5, scope: !3407)
!3653 = !DILocation(line: 157, column: 15, scope: !3407)
!3654 = !DILocation(line: 157, column: 18, scope: !3407)
!3655 = !DILocation(line: 157, column: 14, scope: !3407)
!3656 = !DILocation(line: 157, column: 5, scope: !3407)
!3657 = !DILocation(line: 158, column: 15, scope: !3407)
!3658 = !DILocation(line: 158, column: 18, scope: !3407)
!3659 = !DILocation(line: 158, column: 14, scope: !3407)
!3660 = !DILocation(line: 158, column: 5, scope: !3407)
!3661 = !DILocation(line: 159, column: 15, scope: !3407)
!3662 = !DILocation(line: 159, column: 18, scope: !3407)
!3663 = !DILocation(line: 159, column: 14, scope: !3407)
!3664 = !DILocation(line: 159, column: 5, scope: !3407)
!3665 = !DILocation(line: 160, column: 15, scope: !3407)
!3666 = !DILocation(line: 160, column: 18, scope: !3407)
!3667 = !DILocation(line: 160, column: 14, scope: !3407)
!3668 = !DILocation(line: 160, column: 5, scope: !3407)
!3669 = !DILocation(line: 161, column: 15, scope: !3407)
!3670 = !DILocation(line: 161, column: 18, scope: !3407)
!3671 = !DILocation(line: 161, column: 14, scope: !3407)
!3672 = !DILocation(line: 161, column: 5, scope: !3407)
!3673 = !DILocation(line: 162, column: 15, scope: !3407)
!3674 = !DILocation(line: 162, column: 18, scope: !3407)
!3675 = !DILocation(line: 162, column: 14, scope: !3407)
!3676 = !DILocation(line: 162, column: 5, scope: !3407)
!3677 = !DILocation(line: 163, column: 1, scope: !3407)
!3678 = distinct !DISubprogram(name: "create_freq_table", scope: !801, file: !801, line: 165, type: !3679, isLocal: true, isDefinition: true, scopeLine: 166, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!3679 = !DISubroutineType(types: !3680)
!3680 = !{!507, !210, !210, !200}
!3681 = !DILocalVariable(name: "base", arg: 1, scope: !3678, file: !801, line: 165, type: !210)
!3682 = !DILocation(line: 165, column: 41, scope: !3678)
!3683 = !DILocalVariable(name: "end", arg: 2, scope: !3678, file: !801, line: 165, type: !210)
!3684 = !DILocation(line: 165, column: 54, scope: !3678)
!3685 = !DILocalVariable(name: "n", arg: 3, scope: !3678, file: !801, line: 165, type: !200)
!3686 = !DILocation(line: 165, column: 63, scope: !3678)
!3687 = !DILocalVariable(name: "log_base", scope: !3678, file: !801, line: 167, type: !210)
!3688 = !DILocation(line: 167, column: 12, scope: !3678)
!3689 = !DILocalVariable(name: "log_end", scope: !3678, file: !801, line: 167, type: !210)
!3690 = !DILocation(line: 167, column: 22, scope: !3678)
!3691 = !DILocalVariable(name: "rcp_n", scope: !3678, file: !801, line: 168, type: !210)
!3692 = !DILocation(line: 168, column: 12, scope: !3678)
!3693 = !DILocation(line: 168, column: 26, scope: !3678)
!3694 = !DILocation(line: 168, column: 24, scope: !3678)
!3695 = !DILocalVariable(name: "freq", scope: !3678, file: !801, line: 169, type: !507)
!3696 = !DILocation(line: 169, column: 13, scope: !3678)
!3697 = !DILocalVariable(name: "x", scope: !3678, file: !801, line: 170, type: !200)
!3698 = !DILocation(line: 170, column: 9, scope: !3678)
!3699 = !DILocation(line: 172, column: 28, scope: !3678)
!3700 = !DILocation(line: 172, column: 12, scope: !3678)
!3701 = !DILocation(line: 172, column: 10, scope: !3678)
!3702 = !DILocation(line: 173, column: 10, scope: !3703)
!3703 = distinct !DILexicalBlock(scope: !3678, file: !801, line: 173, column: 9)
!3704 = !DILocation(line: 173, column: 9, scope: !3678)
!3705 = !DILocation(line: 174, column: 9, scope: !3703)
!3706 = !DILocation(line: 176, column: 20, scope: !3678)
!3707 = !DILocation(line: 176, column: 16, scope: !3678)
!3708 = !DILocation(line: 176, column: 14, scope: !3678)
!3709 = !DILocation(line: 177, column: 19, scope: !3678)
!3710 = !DILocation(line: 177, column: 15, scope: !3678)
!3711 = !DILocation(line: 177, column: 13, scope: !3678)
!3712 = !DILocation(line: 178, column: 12, scope: !3713)
!3713 = distinct !DILexicalBlock(scope: !3678, file: !801, line: 178, column: 5)
!3714 = !DILocation(line: 178, column: 10, scope: !3713)
!3715 = !DILocation(line: 178, column: 17, scope: !3716)
!3716 = !DILexicalBlockFile(scope: !3717, file: !801, discriminator: 1)
!3717 = distinct !DILexicalBlock(scope: !3713, file: !801, line: 178, column: 5)
!3718 = !DILocation(line: 178, column: 21, scope: !3716)
!3719 = !DILocation(line: 178, column: 19, scope: !3716)
!3720 = !DILocation(line: 178, column: 5, scope: !3716)
!3721 = !DILocalVariable(name: "log_freq", scope: !3722, file: !801, line: 179, type: !210)
!3722 = distinct !DILexicalBlock(scope: !3717, file: !801, line: 178, column: 29)
!3723 = !DILocation(line: 179, column: 16, scope: !3722)
!3724 = !DILocation(line: 179, column: 27, scope: !3722)
!3725 = !DILocation(line: 179, column: 39, scope: !3722)
!3726 = !DILocation(line: 179, column: 41, scope: !3722)
!3727 = !DILocation(line: 179, column: 51, scope: !3722)
!3728 = !DILocation(line: 179, column: 61, scope: !3722)
!3729 = !DILocation(line: 179, column: 59, scope: !3722)
!3730 = !DILocation(line: 179, column: 48, scope: !3722)
!3731 = !DILocation(line: 179, column: 73, scope: !3722)
!3732 = !DILocation(line: 179, column: 71, scope: !3722)
!3733 = !DILocation(line: 179, column: 36, scope: !3722)
!3734 = !DILocation(line: 180, column: 23, scope: !3722)
!3735 = !DILocation(line: 180, column: 19, scope: !3722)
!3736 = !DILocation(line: 180, column: 14, scope: !3722)
!3737 = !DILocation(line: 180, column: 9, scope: !3722)
!3738 = !DILocation(line: 180, column: 17, scope: !3722)
!3739 = !DILocation(line: 181, column: 5, scope: !3722)
!3740 = !DILocation(line: 178, column: 25, scope: !3741)
!3741 = !DILexicalBlockFile(scope: !3717, file: !801, discriminator: 2)
!3742 = !DILocation(line: 178, column: 5, scope: !3741)
!3743 = distinct !{!3743, !3744}
!3744 = !DILocation(line: 178, column: 5, scope: !3678)
!3745 = !DILocation(line: 182, column: 12, scope: !3678)
!3746 = !DILocation(line: 182, column: 5, scope: !3678)
!3747 = !DILocation(line: 183, column: 1, scope: !3678)
!3748 = distinct !DISubprogram(name: "init_volume", scope: !801, file: !801, line: 228, type: !3749, isLocal: true, isDefinition: true, scopeLine: 229, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!3749 = !DISubroutineType(types: !3750)
!3750 = !{!200, !823}
!3751 = !DILocalVariable(name: "s", arg: 1, scope: !3748, file: !801, line: 228, type: !823)
!3752 = !DILocation(line: 228, column: 40, scope: !3748)
!3753 = !DILocalVariable(name: "func_names", scope: !3748, file: !801, line: 230, type: !3754)
!3754 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 256, align: 64, elements: !3755)
!3755 = !{!3756}
!3756 = !DISubrange(count: 4)
!3757 = !DILocation(line: 230, column: 17, scope: !3748)
!3758 = !DILocalVariable(name: "sono_names", scope: !3748, file: !801, line: 231, type: !3759)
!3759 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 448, align: 64, elements: !3760)
!3760 = !{!3761}
!3761 = !DISubrange(count: 7)
!3762 = !DILocation(line: 231, column: 17, scope: !3748)
!3763 = !DILocalVariable(name: "bar_names", scope: !3748, file: !801, line: 232, type: !3759)
!3764 = !DILocation(line: 232, column: 17, scope: !3748)
!3765 = !DILocalVariable(name: "funcs", scope: !3748, file: !801, line: 233, type: !3766)
!3766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3767, size: 192, align: 64, elements: !1312)
!3767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3768, size: 64, align: 64)
!3768 = !DISubroutineType(types: !3769)
!3769 = !{!210, !191, !210}
!3770 = !DILocation(line: 233, column: 14, scope: !3748)
!3771 = !DILocalVariable(name: "sono", scope: !3748, file: !801, line: 234, type: !3772)
!3772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3773, size: 64, align: 64)
!3773 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVExpr", file: !3774, line: 31, baseType: !3775)
!3774 = !DIFile(filename: "./libavutil/eval.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!3775 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVExpr", file: !3774, line: 31, flags: DIFlagFwdDecl)
!3776 = !DILocation(line: 234, column: 13, scope: !3748)
!3777 = !DILocalVariable(name: "bar", scope: !3748, file: !801, line: 234, type: !3772)
!3778 = !DILocation(line: 234, column: 26, scope: !3748)
!3779 = !DILocalVariable(name: "x", scope: !3748, file: !801, line: 235, type: !200)
!3780 = !DILocation(line: 235, column: 9, scope: !3748)
!3781 = !DILocalVariable(name: "ret", scope: !3748, file: !801, line: 235, type: !200)
!3782 = !DILocation(line: 235, column: 12, scope: !3748)
!3783 = !DILocation(line: 237, column: 37, scope: !3748)
!3784 = !DILocation(line: 237, column: 40, scope: !3748)
!3785 = !DILocation(line: 237, column: 21, scope: !3748)
!3786 = !DILocation(line: 237, column: 5, scope: !3748)
!3787 = !DILocation(line: 237, column: 8, scope: !3748)
!3788 = !DILocation(line: 237, column: 19, scope: !3748)
!3789 = !DILocation(line: 238, column: 36, scope: !3748)
!3790 = !DILocation(line: 238, column: 39, scope: !3748)
!3791 = !DILocation(line: 238, column: 20, scope: !3748)
!3792 = !DILocation(line: 238, column: 5, scope: !3748)
!3793 = !DILocation(line: 238, column: 8, scope: !3748)
!3794 = !DILocation(line: 238, column: 18, scope: !3748)
!3795 = !DILocation(line: 239, column: 10, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3748, file: !801, line: 239, column: 9)
!3797 = !DILocation(line: 239, column: 13, scope: !3796)
!3798 = !DILocation(line: 239, column: 24, scope: !3796)
!3799 = !DILocation(line: 239, column: 28, scope: !3800)
!3800 = !DILexicalBlockFile(scope: !3796, file: !801, discriminator: 1)
!3801 = !DILocation(line: 239, column: 31, scope: !3800)
!3802 = !DILocation(line: 239, column: 9, scope: !3800)
!3803 = !DILocation(line: 240, column: 9, scope: !3796)
!3804 = !DILocation(line: 242, column: 37, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3748, file: !801, line: 242, column: 9)
!3806 = !DILocation(line: 242, column: 40, scope: !3805)
!3807 = !DILocation(line: 242, column: 48, scope: !3805)
!3808 = !DILocation(line: 242, column: 60, scope: !3805)
!3809 = !DILocation(line: 242, column: 72, scope: !3805)
!3810 = !DILocation(line: 242, column: 93, scope: !3805)
!3811 = !DILocation(line: 242, column: 96, scope: !3805)
!3812 = !DILocation(line: 242, column: 16, scope: !3805)
!3813 = !DILocation(line: 242, column: 14, scope: !3805)
!3814 = !DILocation(line: 242, column: 102, scope: !3805)
!3815 = !DILocation(line: 242, column: 9, scope: !3748)
!3816 = !DILocation(line: 243, column: 9, scope: !3805)
!3817 = !DILocation(line: 245, column: 36, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3748, file: !801, line: 245, column: 9)
!3819 = !DILocation(line: 245, column: 39, scope: !3818)
!3820 = !DILocation(line: 245, column: 46, scope: !3818)
!3821 = !DILocation(line: 245, column: 57, scope: !3818)
!3822 = !DILocation(line: 245, column: 69, scope: !3818)
!3823 = !DILocation(line: 245, column: 90, scope: !3818)
!3824 = !DILocation(line: 245, column: 93, scope: !3818)
!3825 = !DILocation(line: 245, column: 16, scope: !3818)
!3826 = !DILocation(line: 245, column: 14, scope: !3818)
!3827 = !DILocation(line: 245, column: 99, scope: !3818)
!3828 = !DILocation(line: 245, column: 9, scope: !3748)
!3829 = !DILocation(line: 246, column: 9, scope: !3818)
!3830 = !DILocation(line: 248, column: 12, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !3748, file: !801, line: 248, column: 5)
!3832 = !DILocation(line: 248, column: 10, scope: !3831)
!3833 = !DILocation(line: 248, column: 17, scope: !3834)
!3834 = !DILexicalBlockFile(scope: !3835, file: !801, discriminator: 1)
!3835 = distinct !DILexicalBlock(scope: !3831, file: !801, line: 248, column: 5)
!3836 = !DILocation(line: 248, column: 21, scope: !3834)
!3837 = !DILocation(line: 248, column: 24, scope: !3834)
!3838 = !DILocation(line: 248, column: 19, scope: !3834)
!3839 = !DILocation(line: 248, column: 5, scope: !3834)
!3840 = !DILocalVariable(name: "vars", scope: !3841, file: !801, line: 249, type: !3842)
!3841 = distinct !DILexicalBlock(scope: !3835, file: !801, line: 248, column: 38)
!3842 = !DICompositeType(tag: DW_TAG_array_type, baseType: !210, size: 384, align: 64, elements: !900)
!3843 = !DILocation(line: 249, column: 16, scope: !3841)
!3844 = !DILocation(line: 249, column: 25, scope: !3841)
!3845 = !DILocation(line: 249, column: 27, scope: !3841)
!3846 = !DILocation(line: 249, column: 30, scope: !3841)
!3847 = !DILocation(line: 249, column: 41, scope: !3841)
!3848 = !DILocation(line: 249, column: 44, scope: !3841)
!3849 = !DILocation(line: 249, column: 63, scope: !3841)
!3850 = !DILocation(line: 249, column: 55, scope: !3841)
!3851 = !DILocation(line: 249, column: 58, scope: !3841)
!3852 = !DILocation(line: 249, column: 75, scope: !3841)
!3853 = !DILocation(line: 249, column: 67, scope: !3841)
!3854 = !DILocation(line: 249, column: 70, scope: !3841)
!3855 = !DILocation(line: 249, column: 87, scope: !3841)
!3856 = !DILocation(line: 249, column: 79, scope: !3841)
!3857 = !DILocation(line: 249, column: 82, scope: !3841)
!3858 = !DILocalVariable(name: "vol", scope: !3841, file: !801, line: 250, type: !210)
!3859 = !DILocation(line: 250, column: 16, scope: !3841)
!3860 = !DILocation(line: 250, column: 36, scope: !3841)
!3861 = !DILocation(line: 250, column: 39, scope: !3841)
!3862 = !DILocation(line: 250, column: 67, scope: !3841)
!3863 = !DILocation(line: 250, column: 73, scope: !3841)
!3864 = !DILocation(line: 250, column: 54, scope: !3841)
!3865 = !DILocation(line: 250, column: 102, scope: !3841)
!3866 = !DILocation(line: 250, column: 22, scope: !3867)
!3867 = !DILexicalBlockFile(scope: !3841, file: !801, discriminator: 1)
!3868 = !DILocation(line: 251, column: 19, scope: !3841)
!3869 = !DILocation(line: 251, column: 9, scope: !3841)
!3870 = !DILocation(line: 251, column: 17, scope: !3841)
!3871 = !DILocation(line: 252, column: 29, scope: !3841)
!3872 = !DILocation(line: 252, column: 32, scope: !3841)
!3873 = !DILocation(line: 252, column: 59, scope: !3841)
!3874 = !DILocation(line: 252, column: 64, scope: !3841)
!3875 = !DILocation(line: 252, column: 46, scope: !3841)
!3876 = !DILocation(line: 252, column: 93, scope: !3841)
!3877 = !DILocation(line: 252, column: 15, scope: !3867)
!3878 = !DILocation(line: 252, column: 13, scope: !3841)
!3879 = !DILocation(line: 253, column: 27, scope: !3841)
!3880 = !DILocation(line: 253, column: 33, scope: !3841)
!3881 = !DILocation(line: 253, column: 31, scope: !3841)
!3882 = !DILocation(line: 253, column: 22, scope: !3841)
!3883 = !DILocation(line: 253, column: 9, scope: !3841)
!3884 = !DILocation(line: 253, column: 12, scope: !3841)
!3885 = !DILocation(line: 253, column: 25, scope: !3841)
!3886 = !DILocation(line: 254, column: 19, scope: !3841)
!3887 = !DILocation(line: 254, column: 9, scope: !3841)
!3888 = !DILocation(line: 254, column: 17, scope: !3841)
!3889 = !DILocation(line: 255, column: 29, scope: !3841)
!3890 = !DILocation(line: 255, column: 32, scope: !3841)
!3891 = !DILocation(line: 255, column: 60, scope: !3841)
!3892 = !DILocation(line: 255, column: 66, scope: !3841)
!3893 = !DILocation(line: 255, column: 47, scope: !3841)
!3894 = !DILocation(line: 255, column: 95, scope: !3841)
!3895 = !DILocation(line: 255, column: 15, scope: !3867)
!3896 = !DILocation(line: 255, column: 13, scope: !3841)
!3897 = !DILocation(line: 256, column: 28, scope: !3841)
!3898 = !DILocation(line: 256, column: 34, scope: !3841)
!3899 = !DILocation(line: 256, column: 32, scope: !3841)
!3900 = !DILocation(line: 256, column: 23, scope: !3841)
!3901 = !DILocation(line: 256, column: 9, scope: !3841)
!3902 = !DILocation(line: 256, column: 12, scope: !3841)
!3903 = !DILocation(line: 256, column: 26, scope: !3841)
!3904 = !DILocation(line: 257, column: 5, scope: !3841)
!3905 = !DILocation(line: 248, column: 34, scope: !3906)
!3906 = !DILexicalBlockFile(scope: !3835, file: !801, discriminator: 2)
!3907 = !DILocation(line: 248, column: 5, scope: !3906)
!3908 = distinct !{!3908, !3909}
!3909 = !DILocation(line: 248, column: 5, scope: !3748)
!3910 = !DILocation(line: 258, column: 18, scope: !3748)
!3911 = !DILocation(line: 258, column: 5, scope: !3748)
!3912 = !DILocation(line: 259, column: 18, scope: !3748)
!3913 = !DILocation(line: 259, column: 5, scope: !3748)
!3914 = !DILocation(line: 260, column: 5, scope: !3748)
!3915 = !DILocation(line: 263, column: 15, scope: !3748)
!3916 = !DILocation(line: 263, column: 18, scope: !3748)
!3917 = !DILocation(line: 263, column: 14, scope: !3748)
!3918 = !DILocation(line: 263, column: 5, scope: !3748)
!3919 = !DILocation(line: 264, column: 15, scope: !3748)
!3920 = !DILocation(line: 264, column: 18, scope: !3748)
!3921 = !DILocation(line: 264, column: 14, scope: !3748)
!3922 = !DILocation(line: 264, column: 5, scope: !3748)
!3923 = !DILocation(line: 265, column: 18, scope: !3748)
!3924 = !DILocation(line: 265, column: 5, scope: !3748)
!3925 = !DILocation(line: 266, column: 18, scope: !3748)
!3926 = !DILocation(line: 266, column: 5, scope: !3748)
!3927 = !DILocation(line: 267, column: 12, scope: !3748)
!3928 = !DILocation(line: 267, column: 5, scope: !3748)
!3929 = !DILocation(line: 268, column: 1, scope: !3748)
!3930 = distinct !DISubprogram(name: "cqt_calc", scope: !801, file: !801, line: 270, type: !904, isLocal: true, isDefinition: true, scopeLine: 272, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!3931 = !DILocalVariable(name: "dst", arg: 1, scope: !3930, file: !801, line: 270, type: !858)
!3932 = !DILocation(line: 270, column: 34, scope: !3930)
!3933 = !DILocalVariable(name: "src", arg: 2, scope: !3930, file: !801, line: 270, type: !906)
!3934 = !DILocation(line: 270, column: 57, scope: !3930)
!3935 = !DILocalVariable(name: "coeffs", arg: 3, scope: !3930, file: !801, line: 270, type: !908)
!3936 = !DILocation(line: 270, column: 76, scope: !3930)
!3937 = !DILocalVariable(name: "len", arg: 4, scope: !3930, file: !801, line: 271, type: !200)
!3938 = !DILocation(line: 271, column: 26, scope: !3930)
!3939 = !DILocalVariable(name: "fft_len", arg: 5, scope: !3930, file: !801, line: 271, type: !200)
!3940 = !DILocation(line: 271, column: 35, scope: !3930)
!3941 = !DILocalVariable(name: "k", scope: !3930, file: !801, line: 273, type: !200)
!3942 = !DILocation(line: 273, column: 9, scope: !3930)
!3943 = !DILocalVariable(name: "x", scope: !3930, file: !801, line: 273, type: !200)
!3944 = !DILocation(line: 273, column: 12, scope: !3930)
!3945 = !DILocalVariable(name: "i", scope: !3930, file: !801, line: 273, type: !200)
!3946 = !DILocation(line: 273, column: 15, scope: !3930)
!3947 = !DILocalVariable(name: "j", scope: !3930, file: !801, line: 273, type: !200)
!3948 = !DILocation(line: 273, column: 18, scope: !3930)
!3949 = !DILocation(line: 274, column: 12, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3930, file: !801, line: 274, column: 5)
!3951 = !DILocation(line: 274, column: 10, scope: !3950)
!3952 = !DILocation(line: 274, column: 17, scope: !3953)
!3953 = !DILexicalBlockFile(scope: !3954, file: !801, discriminator: 1)
!3954 = distinct !DILexicalBlock(scope: !3950, file: !801, line: 274, column: 5)
!3955 = !DILocation(line: 274, column: 21, scope: !3953)
!3956 = !DILocation(line: 274, column: 19, scope: !3953)
!3957 = !DILocation(line: 274, column: 5, scope: !3953)
!3958 = !DILocalVariable(name: "l", scope: !3959, file: !801, line: 275, type: !859)
!3959 = distinct !DILexicalBlock(scope: !3954, file: !801, line: 274, column: 31)
!3960 = !DILocation(line: 275, column: 20, scope: !3959)
!3961 = !DILocalVariable(name: "r", scope: !3959, file: !801, line: 275, type: !859)
!3962 = !DILocation(line: 275, column: 23, scope: !3959)
!3963 = !DILocalVariable(name: "a", scope: !3959, file: !801, line: 275, type: !859)
!3964 = !DILocation(line: 275, column: 26, scope: !3959)
!3965 = !DILocalVariable(name: "b", scope: !3959, file: !801, line: 275, type: !859)
!3966 = !DILocation(line: 275, column: 37, scope: !3959)
!3967 = !DILocation(line: 275, column: 37, scope: !3968)
!3968 = !DILexicalBlockFile(scope: !3959, file: !801, discriminator: 1)
!3969 = !DILocation(line: 277, column: 16, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3959, file: !801, line: 277, column: 9)
!3971 = !DILocation(line: 277, column: 14, scope: !3970)
!3972 = !DILocation(line: 277, column: 21, scope: !3973)
!3973 = !DILexicalBlockFile(scope: !3974, file: !801, discriminator: 1)
!3974 = distinct !DILexicalBlock(scope: !3970, file: !801, line: 277, column: 9)
!3975 = !DILocation(line: 277, column: 32, scope: !3973)
!3976 = !DILocation(line: 277, column: 25, scope: !3973)
!3977 = !DILocation(line: 277, column: 35, scope: !3973)
!3978 = !DILocation(line: 277, column: 23, scope: !3973)
!3979 = !DILocation(line: 277, column: 9, scope: !3973)
!3980 = !DILocalVariable(name: "u", scope: !3981, file: !801, line: 278, type: !854)
!3981 = distinct !DILexicalBlock(scope: !3974, file: !801, line: 277, column: 45)
!3982 = !DILocation(line: 278, column: 23, scope: !3981)
!3983 = !DILocation(line: 278, column: 41, scope: !3981)
!3984 = !DILocation(line: 278, column: 27, scope: !3981)
!3985 = !DILocation(line: 278, column: 34, scope: !3981)
!3986 = !DILocation(line: 278, column: 37, scope: !3981)
!3987 = !DILocation(line: 279, column: 24, scope: !3981)
!3988 = !DILocation(line: 279, column: 17, scope: !3981)
!3989 = !DILocation(line: 279, column: 27, scope: !3981)
!3990 = !DILocation(line: 279, column: 35, scope: !3981)
!3991 = !DILocation(line: 279, column: 33, scope: !3981)
!3992 = !DILocation(line: 279, column: 15, scope: !3981)
!3993 = !DILocation(line: 280, column: 17, scope: !3981)
!3994 = !DILocation(line: 280, column: 27, scope: !3981)
!3995 = !DILocation(line: 280, column: 25, scope: !3981)
!3996 = !DILocation(line: 280, column: 15, scope: !3981)
!3997 = !DILocation(line: 281, column: 21, scope: !3981)
!3998 = !DILocation(line: 281, column: 29, scope: !3981)
!3999 = !DILocation(line: 281, column: 25, scope: !3981)
!4000 = !DILocation(line: 281, column: 32, scope: !3981)
!4001 = !DILocation(line: 281, column: 23, scope: !3981)
!4002 = !DILocation(line: 281, column: 15, scope: !3981)
!4003 = !DILocation(line: 281, column: 18, scope: !3981)
!4004 = !DILocation(line: 282, column: 21, scope: !3981)
!4005 = !DILocation(line: 282, column: 29, scope: !3981)
!4006 = !DILocation(line: 282, column: 25, scope: !3981)
!4007 = !DILocation(line: 282, column: 32, scope: !3981)
!4008 = !DILocation(line: 282, column: 23, scope: !3981)
!4009 = !DILocation(line: 282, column: 15, scope: !3981)
!4010 = !DILocation(line: 282, column: 18, scope: !3981)
!4011 = !DILocation(line: 283, column: 21, scope: !3981)
!4012 = !DILocation(line: 283, column: 29, scope: !3981)
!4013 = !DILocation(line: 283, column: 25, scope: !3981)
!4014 = !DILocation(line: 283, column: 32, scope: !3981)
!4015 = !DILocation(line: 283, column: 23, scope: !3981)
!4016 = !DILocation(line: 283, column: 15, scope: !3981)
!4017 = !DILocation(line: 283, column: 18, scope: !3981)
!4018 = !DILocation(line: 284, column: 21, scope: !3981)
!4019 = !DILocation(line: 284, column: 29, scope: !3981)
!4020 = !DILocation(line: 284, column: 25, scope: !3981)
!4021 = !DILocation(line: 284, column: 32, scope: !3981)
!4022 = !DILocation(line: 284, column: 23, scope: !3981)
!4023 = !DILocation(line: 284, column: 15, scope: !3981)
!4024 = !DILocation(line: 284, column: 18, scope: !3981)
!4025 = !DILocation(line: 285, column: 9, scope: !3981)
!4026 = !DILocation(line: 277, column: 41, scope: !4027)
!4027 = !DILexicalBlockFile(scope: !3974, file: !801, discriminator: 2)
!4028 = !DILocation(line: 277, column: 9, scope: !4027)
!4029 = distinct !{!4029, !4030}
!4030 = !DILocation(line: 277, column: 9, scope: !3959)
!4031 = !DILocation(line: 288, column: 18, scope: !3959)
!4032 = !DILocation(line: 288, column: 25, scope: !3959)
!4033 = !DILocation(line: 288, column: 21, scope: !3959)
!4034 = !DILocation(line: 288, column: 11, scope: !3959)
!4035 = !DILocation(line: 288, column: 14, scope: !3959)
!4036 = !DILocation(line: 289, column: 18, scope: !3959)
!4037 = !DILocation(line: 289, column: 25, scope: !3959)
!4038 = !DILocation(line: 289, column: 21, scope: !3959)
!4039 = !DILocation(line: 289, column: 11, scope: !3959)
!4040 = !DILocation(line: 289, column: 14, scope: !3959)
!4041 = !DILocation(line: 290, column: 18, scope: !3959)
!4042 = !DILocation(line: 290, column: 25, scope: !3959)
!4043 = !DILocation(line: 290, column: 21, scope: !3959)
!4044 = !DILocation(line: 290, column: 11, scope: !3959)
!4045 = !DILocation(line: 290, column: 14, scope: !3959)
!4046 = !DILocation(line: 291, column: 18, scope: !3959)
!4047 = !DILocation(line: 291, column: 25, scope: !3959)
!4048 = !DILocation(line: 291, column: 21, scope: !3959)
!4049 = !DILocation(line: 291, column: 11, scope: !3959)
!4050 = !DILocation(line: 291, column: 14, scope: !3959)
!4051 = !DILocation(line: 292, column: 23, scope: !3959)
!4052 = !DILocation(line: 292, column: 30, scope: !3959)
!4053 = !DILocation(line: 292, column: 26, scope: !3959)
!4054 = !DILocation(line: 292, column: 37, scope: !3959)
!4055 = !DILocation(line: 292, column: 44, scope: !3959)
!4056 = !DILocation(line: 292, column: 40, scope: !3959)
!4057 = !DILocation(line: 292, column: 33, scope: !3959)
!4058 = !DILocation(line: 292, column: 13, scope: !3959)
!4059 = !DILocation(line: 292, column: 9, scope: !3959)
!4060 = !DILocation(line: 292, column: 16, scope: !3959)
!4061 = !DILocation(line: 292, column: 19, scope: !3959)
!4062 = !DILocation(line: 293, column: 23, scope: !3959)
!4063 = !DILocation(line: 293, column: 30, scope: !3959)
!4064 = !DILocation(line: 293, column: 26, scope: !3959)
!4065 = !DILocation(line: 293, column: 37, scope: !3959)
!4066 = !DILocation(line: 293, column: 44, scope: !3959)
!4067 = !DILocation(line: 293, column: 40, scope: !3959)
!4068 = !DILocation(line: 293, column: 33, scope: !3959)
!4069 = !DILocation(line: 293, column: 13, scope: !3959)
!4070 = !DILocation(line: 293, column: 9, scope: !3959)
!4071 = !DILocation(line: 293, column: 16, scope: !3959)
!4072 = !DILocation(line: 293, column: 19, scope: !3959)
!4073 = !DILocation(line: 294, column: 5, scope: !3959)
!4074 = !DILocation(line: 274, column: 27, scope: !4075)
!4075 = !DILexicalBlockFile(scope: !3954, file: !801, discriminator: 2)
!4076 = !DILocation(line: 274, column: 5, scope: !4075)
!4077 = distinct !{!4077, !4078}
!4078 = !DILocation(line: 274, column: 5, scope: !3930)
!4079 = !DILocation(line: 295, column: 1, scope: !3930)
!4080 = distinct !DISubprogram(name: "draw_sono", scope: !801, file: !801, line: 1028, type: !928, isLocal: true, isDefinition: true, scopeLine: 1029, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!4081 = !DILocalVariable(name: "out", arg: 1, scope: !4080, file: !801, line: 1028, type: !285)
!4082 = !DILocation(line: 1028, column: 32, scope: !4080)
!4083 = !DILocalVariable(name: "sono", arg: 2, scope: !4080, file: !801, line: 1028, type: !285)
!4084 = !DILocation(line: 1028, column: 46, scope: !4080)
!4085 = !DILocalVariable(name: "off", arg: 3, scope: !4080, file: !801, line: 1028, type: !200)
!4086 = !DILocation(line: 1028, column: 56, scope: !4080)
!4087 = !DILocalVariable(name: "idx", arg: 4, scope: !4080, file: !801, line: 1028, type: !200)
!4088 = !DILocation(line: 1028, column: 65, scope: !4080)
!4089 = !DILocalVariable(name: "fmt", scope: !4080, file: !801, line: 1030, type: !200)
!4090 = !DILocation(line: 1030, column: 9, scope: !4080)
!4091 = !DILocation(line: 1030, column: 15, scope: !4080)
!4092 = !DILocation(line: 1030, column: 20, scope: !4080)
!4093 = !DILocalVariable(name: "h", scope: !4080, file: !801, line: 1030, type: !200)
!4094 = !DILocation(line: 1030, column: 28, scope: !4080)
!4095 = !DILocation(line: 1030, column: 32, scope: !4080)
!4096 = !DILocation(line: 1030, column: 38, scope: !4080)
!4097 = !DILocalVariable(name: "nb_planes", scope: !4080, file: !801, line: 1031, type: !200)
!4098 = !DILocation(line: 1031, column: 9, scope: !4080)
!4099 = !DILocation(line: 1031, column: 22, scope: !4080)
!4100 = !DILocation(line: 1031, column: 26, scope: !4080)
!4101 = !DILocation(line: 1031, column: 21, scope: !4080)
!4102 = !DILocalVariable(name: "offh", scope: !4080, file: !801, line: 1032, type: !200)
!4103 = !DILocation(line: 1032, column: 9, scope: !4080)
!4104 = !DILocation(line: 1032, column: 17, scope: !4080)
!4105 = !DILocation(line: 1032, column: 21, scope: !4080)
!4106 = !DILocation(line: 1032, column: 16, scope: !4080)
!4107 = !DILocation(line: 1032, column: 46, scope: !4108)
!4108 = !DILexicalBlockFile(scope: !4080, file: !801, discriminator: 1)
!4109 = !DILocation(line: 1032, column: 50, scope: !4108)
!4110 = !DILocation(line: 1032, column: 16, scope: !4108)
!4111 = !DILocation(line: 1032, column: 56, scope: !4112)
!4112 = !DILexicalBlockFile(scope: !4080, file: !801, discriminator: 2)
!4113 = !DILocation(line: 1032, column: 16, scope: !4112)
!4114 = !DILocation(line: 1032, column: 16, scope: !4115)
!4115 = !DILexicalBlockFile(scope: !4080, file: !801, discriminator: 3)
!4116 = !DILocation(line: 1032, column: 9, scope: !4115)
!4117 = !DILocalVariable(name: "inc", scope: !4080, file: !801, line: 1033, type: !200)
!4118 = !DILocation(line: 1033, column: 9, scope: !4080)
!4119 = !DILocation(line: 1033, column: 16, scope: !4080)
!4120 = !DILocation(line: 1033, column: 20, scope: !4080)
!4121 = !DILocation(line: 1033, column: 15, scope: !4080)
!4122 = !DILocalVariable(name: "ls", scope: !4080, file: !801, line: 1034, type: !200)
!4123 = !DILocation(line: 1034, column: 9, scope: !4080)
!4124 = !DILocalVariable(name: "i", scope: !4080, file: !801, line: 1034, type: !200)
!4125 = !DILocation(line: 1034, column: 13, scope: !4080)
!4126 = !DILocalVariable(name: "y", scope: !4080, file: !801, line: 1034, type: !200)
!4127 = !DILocation(line: 1034, column: 16, scope: !4080)
!4128 = !DILocalVariable(name: "yh", scope: !4080, file: !801, line: 1034, type: !200)
!4129 = !DILocation(line: 1034, column: 19, scope: !4080)
!4130 = !DILocation(line: 1036, column: 12, scope: !4080)
!4131 = !DILocation(line: 1036, column: 17, scope: !4080)
!4132 = !DILocation(line: 1036, column: 33, scope: !4080)
!4133 = !DILocation(line: 1036, column: 39, scope: !4080)
!4134 = !DILocation(line: 1036, column: 30, scope: !4080)
!4135 = !DILocation(line: 1036, column: 11, scope: !4080)
!4136 = !DILocation(line: 1036, column: 55, scope: !4108)
!4137 = !DILocation(line: 1036, column: 61, scope: !4108)
!4138 = !DILocation(line: 1036, column: 11, scope: !4108)
!4139 = !DILocation(line: 1036, column: 77, scope: !4112)
!4140 = !DILocation(line: 1036, column: 82, scope: !4112)
!4141 = !DILocation(line: 1036, column: 11, scope: !4112)
!4142 = !DILocation(line: 1036, column: 11, scope: !4115)
!4143 = !DILocation(line: 1036, column: 8, scope: !4115)
!4144 = !DILocation(line: 1037, column: 12, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4080, file: !801, line: 1037, column: 5)
!4146 = !DILocation(line: 1037, column: 10, scope: !4145)
!4147 = !DILocation(line: 1037, column: 17, scope: !4148)
!4148 = !DILexicalBlockFile(scope: !4149, file: !801, discriminator: 1)
!4149 = distinct !DILexicalBlock(scope: !4145, file: !801, line: 1037, column: 5)
!4150 = !DILocation(line: 1037, column: 21, scope: !4148)
!4151 = !DILocation(line: 1037, column: 19, scope: !4148)
!4152 = !DILocation(line: 1037, column: 5, scope: !4148)
!4153 = !DILocation(line: 1038, column: 16, scope: !4154)
!4154 = distinct !DILexicalBlock(scope: !4149, file: !801, line: 1037, column: 29)
!4155 = !DILocation(line: 1038, column: 21, scope: !4154)
!4156 = !DILocation(line: 1038, column: 32, scope: !4154)
!4157 = !DILocation(line: 1038, column: 38, scope: !4154)
!4158 = !DILocation(line: 1038, column: 36, scope: !4154)
!4159 = !DILocation(line: 1038, column: 43, scope: !4154)
!4160 = !DILocation(line: 1038, column: 48, scope: !4154)
!4161 = !DILocation(line: 1038, column: 41, scope: !4154)
!4162 = !DILocation(line: 1038, column: 29, scope: !4154)
!4163 = !DILocation(line: 1039, column: 16, scope: !4154)
!4164 = !DILocation(line: 1039, column: 22, scope: !4154)
!4165 = !DILocation(line: 1039, column: 33, scope: !4154)
!4166 = !DILocation(line: 1039, column: 39, scope: !4154)
!4167 = !DILocation(line: 1039, column: 37, scope: !4154)
!4168 = !DILocation(line: 1039, column: 44, scope: !4154)
!4169 = !DILocation(line: 1039, column: 42, scope: !4154)
!4170 = !DILocation(line: 1039, column: 48, scope: !4154)
!4171 = !DILocation(line: 1039, column: 54, scope: !4154)
!4172 = !DILocation(line: 1039, column: 46, scope: !4154)
!4173 = !DILocation(line: 1039, column: 30, scope: !4154)
!4174 = !DILocation(line: 1039, column: 67, scope: !4154)
!4175 = !DILocation(line: 1038, column: 9, scope: !4154)
!4176 = !DILocation(line: 1040, column: 5, scope: !4154)
!4177 = !DILocation(line: 1037, column: 25, scope: !4178)
!4178 = !DILexicalBlockFile(scope: !4149, file: !801, discriminator: 2)
!4179 = !DILocation(line: 1037, column: 5, scope: !4178)
!4180 = distinct !{!4180, !4181}
!4181 = !DILocation(line: 1037, column: 5, scope: !4080)
!4182 = !DILocation(line: 1042, column: 12, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4080, file: !801, line: 1042, column: 5)
!4184 = !DILocation(line: 1042, column: 10, scope: !4183)
!4185 = !DILocation(line: 1042, column: 17, scope: !4186)
!4186 = !DILexicalBlockFile(scope: !4187, file: !801, discriminator: 1)
!4187 = distinct !DILexicalBlock(scope: !4183, file: !801, line: 1042, column: 5)
!4188 = !DILocation(line: 1042, column: 21, scope: !4186)
!4189 = !DILocation(line: 1042, column: 19, scope: !4186)
!4190 = !DILocation(line: 1042, column: 5, scope: !4186)
!4191 = !DILocation(line: 1043, column: 30, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4187, file: !801, line: 1042, column: 37)
!4193 = !DILocation(line: 1043, column: 16, scope: !4192)
!4194 = !DILocation(line: 1043, column: 21, scope: !4192)
!4195 = !DILocation(line: 1043, column: 52, scope: !4192)
!4196 = !DILocation(line: 1043, column: 37, scope: !4192)
!4197 = !DILocation(line: 1043, column: 43, scope: !4192)
!4198 = !DILocation(line: 1043, column: 34, scope: !4192)
!4199 = !DILocation(line: 1043, column: 15, scope: !4192)
!4200 = !DILocation(line: 1043, column: 74, scope: !4201)
!4201 = !DILexicalBlockFile(scope: !4192, file: !801, discriminator: 1)
!4202 = !DILocation(line: 1043, column: 59, scope: !4201)
!4203 = !DILocation(line: 1043, column: 65, scope: !4201)
!4204 = !DILocation(line: 1043, column: 15, scope: !4201)
!4205 = !DILocation(line: 1043, column: 95, scope: !4206)
!4206 = !DILexicalBlockFile(scope: !4192, file: !801, discriminator: 2)
!4207 = !DILocation(line: 1043, column: 81, scope: !4206)
!4208 = !DILocation(line: 1043, column: 86, scope: !4206)
!4209 = !DILocation(line: 1043, column: 15, scope: !4206)
!4210 = !DILocation(line: 1043, column: 15, scope: !4211)
!4211 = !DILexicalBlockFile(scope: !4192, file: !801, discriminator: 3)
!4212 = !DILocation(line: 1043, column: 12, scope: !4211)
!4213 = !DILocation(line: 1044, column: 16, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4192, file: !801, line: 1044, column: 9)
!4215 = !DILocation(line: 1044, column: 14, scope: !4214)
!4216 = !DILocation(line: 1044, column: 21, scope: !4217)
!4217 = !DILexicalBlockFile(scope: !4218, file: !801, discriminator: 1)
!4218 = distinct !DILexicalBlock(scope: !4214, file: !801, line: 1044, column: 9)
!4219 = !DILocation(line: 1044, column: 25, scope: !4217)
!4220 = !DILocation(line: 1044, column: 23, scope: !4217)
!4221 = !DILocation(line: 1044, column: 9, scope: !4217)
!4222 = !DILocation(line: 1045, column: 19, scope: !4223)
!4223 = distinct !DILexicalBlock(scope: !4218, file: !801, line: 1044, column: 38)
!4224 = !DILocation(line: 1045, column: 23, scope: !4223)
!4225 = !DILocation(line: 1045, column: 18, scope: !4223)
!4226 = !DILocation(line: 1045, column: 48, scope: !4227)
!4227 = !DILexicalBlockFile(scope: !4223, file: !801, discriminator: 1)
!4228 = !DILocation(line: 1045, column: 50, scope: !4227)
!4229 = !DILocation(line: 1045, column: 18, scope: !4227)
!4230 = !DILocation(line: 1045, column: 56, scope: !4231)
!4231 = !DILexicalBlockFile(scope: !4223, file: !801, discriminator: 2)
!4232 = !DILocation(line: 1045, column: 18, scope: !4231)
!4233 = !DILocation(line: 1045, column: 18, scope: !4234)
!4234 = !DILexicalBlockFile(scope: !4223, file: !801, discriminator: 3)
!4235 = !DILocation(line: 1045, column: 16, scope: !4234)
!4236 = !DILocation(line: 1046, column: 30, scope: !4223)
!4237 = !DILocation(line: 1046, column: 20, scope: !4223)
!4238 = !DILocation(line: 1046, column: 25, scope: !4223)
!4239 = !DILocation(line: 1046, column: 36, scope: !4223)
!4240 = !DILocation(line: 1046, column: 43, scope: !4223)
!4241 = !DILocation(line: 1046, column: 41, scope: !4223)
!4242 = !DILocation(line: 1046, column: 63, scope: !4223)
!4243 = !DILocation(line: 1046, column: 49, scope: !4223)
!4244 = !DILocation(line: 1046, column: 54, scope: !4223)
!4245 = !DILocation(line: 1046, column: 47, scope: !4223)
!4246 = !DILocation(line: 1046, column: 33, scope: !4223)
!4247 = !DILocation(line: 1047, column: 31, scope: !4223)
!4248 = !DILocation(line: 1047, column: 20, scope: !4223)
!4249 = !DILocation(line: 1047, column: 26, scope: !4223)
!4250 = !DILocation(line: 1047, column: 37, scope: !4223)
!4251 = !DILocation(line: 1047, column: 43, scope: !4223)
!4252 = !DILocation(line: 1047, column: 41, scope: !4223)
!4253 = !DILocation(line: 1047, column: 48, scope: !4223)
!4254 = !DILocation(line: 1047, column: 46, scope: !4223)
!4255 = !DILocation(line: 1047, column: 67, scope: !4223)
!4256 = !DILocation(line: 1047, column: 52, scope: !4223)
!4257 = !DILocation(line: 1047, column: 58, scope: !4223)
!4258 = !DILocation(line: 1047, column: 50, scope: !4223)
!4259 = !DILocation(line: 1047, column: 34, scope: !4223)
!4260 = !DILocation(line: 1047, column: 71, scope: !4223)
!4261 = !DILocation(line: 1046, column: 13, scope: !4223)
!4262 = !DILocation(line: 1048, column: 9, scope: !4223)
!4263 = !DILocation(line: 1044, column: 33, scope: !4264)
!4264 = !DILexicalBlockFile(scope: !4218, file: !801, discriminator: 2)
!4265 = !DILocation(line: 1044, column: 30, scope: !4264)
!4266 = !DILocation(line: 1044, column: 9, scope: !4264)
!4267 = distinct !{!4267, !4268}
!4268 = !DILocation(line: 1044, column: 9, scope: !4192)
!4269 = !DILocation(line: 1049, column: 5, scope: !4192)
!4270 = !DILocation(line: 1042, column: 33, scope: !4271)
!4271 = !DILexicalBlockFile(scope: !4187, file: !801, discriminator: 2)
!4272 = !DILocation(line: 1042, column: 5, scope: !4271)
!4273 = distinct !{!4273, !4274}
!4274 = !DILocation(line: 1042, column: 5, scope: !4080)
!4275 = !DILocation(line: 1050, column: 1, scope: !4080)
!4276 = distinct !DISubprogram(name: "draw_bar_rgb", scope: !801, file: !801, line: 757, type: !916, isLocal: true, isDefinition: true, scopeLine: 759, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!4277 = !DILocalVariable(name: "out", arg: 1, scope: !4276, file: !801, line: 757, type: !285)
!4278 = !DILocation(line: 757, column: 35, scope: !4276)
!4279 = !DILocalVariable(name: "h", arg: 2, scope: !4276, file: !801, line: 757, type: !918)
!4280 = !DILocation(line: 757, column: 53, scope: !4276)
!4281 = !DILocalVariable(name: "rcp_h", arg: 3, scope: !4276, file: !801, line: 757, type: !918)
!4282 = !DILocation(line: 757, column: 69, scope: !4276)
!4283 = !DILocalVariable(name: "c", arg: 4, scope: !4276, file: !801, line: 758, type: !920)
!4284 = !DILocation(line: 758, column: 44, scope: !4276)
!4285 = !DILocalVariable(name: "bar_h", arg: 5, scope: !4276, file: !801, line: 758, type: !200)
!4286 = !DILocation(line: 758, column: 51, scope: !4276)
!4287 = !DILocalVariable(name: "bar_t", arg: 6, scope: !4276, file: !801, line: 758, type: !798)
!4288 = !DILocation(line: 758, column: 64, scope: !4276)
!4289 = !DILocalVariable(name: "x", scope: !4276, file: !801, line: 760, type: !200)
!4290 = !DILocation(line: 760, column: 9, scope: !4276)
!4291 = !DILocalVariable(name: "y", scope: !4276, file: !801, line: 760, type: !200)
!4292 = !DILocation(line: 760, column: 12, scope: !4276)
!4293 = !DILocalVariable(name: "w", scope: !4276, file: !801, line: 760, type: !200)
!4294 = !DILocation(line: 760, column: 15, scope: !4276)
!4295 = !DILocation(line: 760, column: 19, scope: !4276)
!4296 = !DILocation(line: 760, column: 24, scope: !4276)
!4297 = !DILocalVariable(name: "mul", scope: !4276, file: !801, line: 761, type: !798)
!4298 = !DILocation(line: 761, column: 11, scope: !4276)
!4299 = !DILocalVariable(name: "ht", scope: !4276, file: !801, line: 761, type: !798)
!4300 = !DILocation(line: 761, column: 16, scope: !4276)
!4301 = !DILocalVariable(name: "rcp_bar_h", scope: !4276, file: !801, line: 761, type: !798)
!4302 = !DILocation(line: 761, column: 20, scope: !4276)
!4303 = !DILocation(line: 761, column: 39, scope: !4276)
!4304 = !DILocation(line: 761, column: 37, scope: !4276)
!4305 = !DILocalVariable(name: "rcp_bar_t", scope: !4276, file: !801, line: 761, type: !798)
!4306 = !DILocation(line: 761, column: 46, scope: !4276)
!4307 = !DILocation(line: 761, column: 65, scope: !4276)
!4308 = !DILocation(line: 761, column: 63, scope: !4276)
!4309 = !DILocalVariable(name: "v", scope: !4276, file: !801, line: 762, type: !291)
!4310 = !DILocation(line: 762, column: 14, scope: !4276)
!4311 = !DILocation(line: 762, column: 18, scope: !4276)
!4312 = !DILocation(line: 762, column: 23, scope: !4276)
!4313 = !DILocalVariable(name: "lp", scope: !4276, file: !801, line: 762, type: !291)
!4314 = !DILocation(line: 762, column: 33, scope: !4276)
!4315 = !DILocalVariable(name: "ls", scope: !4276, file: !801, line: 763, type: !200)
!4316 = !DILocation(line: 763, column: 9, scope: !4276)
!4317 = !DILocation(line: 763, column: 14, scope: !4276)
!4318 = !DILocation(line: 763, column: 19, scope: !4276)
!4319 = !DILocation(line: 765, column: 12, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4276, file: !801, line: 765, column: 5)
!4321 = !DILocation(line: 765, column: 10, scope: !4320)
!4322 = !DILocation(line: 765, column: 17, scope: !4323)
!4323 = !DILexicalBlockFile(scope: !4324, file: !801, discriminator: 1)
!4324 = distinct !DILexicalBlock(scope: !4320, file: !801, line: 765, column: 5)
!4325 = !DILocation(line: 765, column: 21, scope: !4323)
!4326 = !DILocation(line: 765, column: 19, scope: !4323)
!4327 = !DILocation(line: 765, column: 5, scope: !4323)
!4328 = !DILocation(line: 766, column: 15, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !4324, file: !801, line: 765, column: 33)
!4330 = !DILocation(line: 766, column: 23, scope: !4329)
!4331 = !DILocation(line: 766, column: 21, scope: !4329)
!4332 = !DILocation(line: 766, column: 14, scope: !4329)
!4333 = !DILocation(line: 766, column: 28, scope: !4329)
!4334 = !DILocation(line: 766, column: 26, scope: !4329)
!4335 = !DILocation(line: 766, column: 12, scope: !4329)
!4336 = !DILocation(line: 767, column: 14, scope: !4329)
!4337 = !DILocation(line: 767, column: 18, scope: !4329)
!4338 = !DILocation(line: 767, column: 22, scope: !4329)
!4339 = !DILocation(line: 767, column: 20, scope: !4329)
!4340 = !DILocation(line: 767, column: 16, scope: !4329)
!4341 = !DILocation(line: 767, column: 12, scope: !4329)
!4342 = !DILocation(line: 768, column: 16, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4329, file: !801, line: 768, column: 9)
!4344 = !DILocation(line: 768, column: 14, scope: !4343)
!4345 = !DILocation(line: 768, column: 21, scope: !4346)
!4346 = !DILexicalBlockFile(scope: !4347, file: !801, discriminator: 1)
!4347 = distinct !DILexicalBlock(scope: !4343, file: !801, line: 768, column: 9)
!4348 = !DILocation(line: 768, column: 25, scope: !4346)
!4349 = !DILocation(line: 768, column: 23, scope: !4346)
!4350 = !DILocation(line: 768, column: 9, scope: !4346)
!4351 = !DILocation(line: 769, column: 19, scope: !4352)
!4352 = distinct !DILexicalBlock(scope: !4353, file: !801, line: 769, column: 17)
!4353 = distinct !DILexicalBlock(scope: !4347, file: !801, line: 768, column: 33)
!4354 = !DILocation(line: 769, column: 17, scope: !4352)
!4355 = !DILocation(line: 769, column: 25, scope: !4352)
!4356 = !DILocation(line: 769, column: 22, scope: !4352)
!4357 = !DILocation(line: 769, column: 17, scope: !4353)
!4358 = !DILocation(line: 770, column: 20, scope: !4359)
!4359 = distinct !DILexicalBlock(scope: !4352, file: !801, line: 769, column: 29)
!4360 = !DILocation(line: 770, column: 23, scope: !4359)
!4361 = !DILocation(line: 771, column: 20, scope: !4359)
!4362 = !DILocation(line: 771, column: 23, scope: !4359)
!4363 = !DILocation(line: 772, column: 20, scope: !4359)
!4364 = !DILocation(line: 772, column: 23, scope: !4359)
!4365 = !DILocation(line: 773, column: 13, scope: !4359)
!4366 = !DILocation(line: 774, column: 26, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4352, file: !801, line: 773, column: 20)
!4368 = !DILocation(line: 774, column: 24, scope: !4367)
!4369 = !DILocation(line: 774, column: 31, scope: !4367)
!4370 = !DILocation(line: 774, column: 29, scope: !4367)
!4371 = !DILocation(line: 774, column: 43, scope: !4367)
!4372 = !DILocation(line: 774, column: 37, scope: !4367)
!4373 = !DILocation(line: 774, column: 35, scope: !4367)
!4374 = !DILocation(line: 774, column: 21, scope: !4367)
!4375 = !DILocation(line: 775, column: 24, scope: !4367)
!4376 = !DILocation(line: 775, column: 30, scope: !4367)
!4377 = !DILocation(line: 775, column: 28, scope: !4367)
!4378 = !DILocation(line: 775, column: 23, scope: !4367)
!4379 = !DILocation(line: 775, column: 40, scope: !4380)
!4380 = !DILexicalBlockFile(scope: !4367, file: !801, discriminator: 1)
!4381 = !DILocation(line: 775, column: 46, scope: !4380)
!4382 = !DILocation(line: 775, column: 44, scope: !4380)
!4383 = !DILocation(line: 775, column: 23, scope: !4380)
!4384 = !DILocation(line: 775, column: 23, scope: !4385)
!4385 = !DILexicalBlockFile(scope: !4367, file: !801, discriminator: 2)
!4386 = !DILocation(line: 775, column: 23, scope: !4387)
!4387 = !DILexicalBlockFile(scope: !4367, file: !801, discriminator: 3)
!4388 = !DILocation(line: 775, column: 21, scope: !4387)
!4389 = !DILocation(line: 776, column: 32, scope: !4367)
!4390 = !DILocation(line: 776, column: 40, scope: !4367)
!4391 = !DILocation(line: 776, column: 38, scope: !4367)
!4392 = !DILocation(line: 776, column: 43, scope: !4367)
!4393 = !DILocation(line: 776, column: 47, scope: !4367)
!4394 = !DILocation(line: 776, column: 36, scope: !4367)
!4395 = !DILocation(line: 776, column: 25, scope: !4367)
!4396 = !DILocation(line: 776, column: 20, scope: !4367)
!4397 = !DILocation(line: 776, column: 23, scope: !4367)
!4398 = !DILocation(line: 777, column: 32, scope: !4367)
!4399 = !DILocation(line: 777, column: 40, scope: !4367)
!4400 = !DILocation(line: 777, column: 38, scope: !4367)
!4401 = !DILocation(line: 777, column: 43, scope: !4367)
!4402 = !DILocation(line: 777, column: 47, scope: !4367)
!4403 = !DILocation(line: 777, column: 36, scope: !4367)
!4404 = !DILocation(line: 777, column: 25, scope: !4367)
!4405 = !DILocation(line: 777, column: 20, scope: !4367)
!4406 = !DILocation(line: 777, column: 23, scope: !4367)
!4407 = !DILocation(line: 778, column: 32, scope: !4367)
!4408 = !DILocation(line: 778, column: 40, scope: !4367)
!4409 = !DILocation(line: 778, column: 38, scope: !4367)
!4410 = !DILocation(line: 778, column: 43, scope: !4367)
!4411 = !DILocation(line: 778, column: 47, scope: !4367)
!4412 = !DILocation(line: 778, column: 36, scope: !4367)
!4413 = !DILocation(line: 778, column: 25, scope: !4367)
!4414 = !DILocation(line: 778, column: 20, scope: !4367)
!4415 = !DILocation(line: 778, column: 23, scope: !4367)
!4416 = !DILocation(line: 780, column: 9, scope: !4353)
!4417 = !DILocation(line: 768, column: 29, scope: !4418)
!4418 = !DILexicalBlockFile(scope: !4347, file: !801, discriminator: 2)
!4419 = !DILocation(line: 768, column: 9, scope: !4418)
!4420 = distinct !{!4420, !4421}
!4421 = !DILocation(line: 768, column: 9, scope: !4329)
!4422 = !DILocation(line: 781, column: 5, scope: !4329)
!4423 = !DILocation(line: 765, column: 29, scope: !4424)
!4424 = !DILexicalBlockFile(scope: !4324, file: !801, discriminator: 2)
!4425 = !DILocation(line: 765, column: 5, scope: !4424)
!4426 = distinct !{!4426, !4427}
!4427 = !DILocation(line: 765, column: 5, scope: !4276)
!4428 = !DILocation(line: 782, column: 1, scope: !4276)
!4429 = distinct !DISubprogram(name: "draw_axis_rgb", scope: !801, file: !801, line: 861, type: !924, isLocal: true, isDefinition: true, scopeLine: 862, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!4430 = !DILocalVariable(name: "out", arg: 1, scope: !4429, file: !801, line: 861, type: !285)
!4431 = !DILocation(line: 861, column: 36, scope: !4429)
!4432 = !DILocalVariable(name: "axis", arg: 2, scope: !4429, file: !801, line: 861, type: !285)
!4433 = !DILocation(line: 861, column: 50, scope: !4429)
!4434 = !DILocalVariable(name: "c", arg: 3, scope: !4429, file: !801, line: 861, type: !920)
!4435 = !DILocation(line: 861, column: 74, scope: !4429)
!4436 = !DILocalVariable(name: "off", arg: 4, scope: !4429, file: !801, line: 861, type: !200)
!4437 = !DILocation(line: 861, column: 81, scope: !4429)
!4438 = !DILocalVariable(name: "x", scope: !4429, file: !801, line: 863, type: !200)
!4439 = !DILocation(line: 863, column: 9, scope: !4429)
!4440 = !DILocalVariable(name: "y", scope: !4429, file: !801, line: 863, type: !200)
!4441 = !DILocation(line: 863, column: 12, scope: !4429)
!4442 = !DILocalVariable(name: "w", scope: !4429, file: !801, line: 863, type: !200)
!4443 = !DILocation(line: 863, column: 15, scope: !4429)
!4444 = !DILocation(line: 863, column: 19, scope: !4429)
!4445 = !DILocation(line: 863, column: 25, scope: !4429)
!4446 = !DILocalVariable(name: "h", scope: !4429, file: !801, line: 863, type: !200)
!4447 = !DILocation(line: 863, column: 32, scope: !4429)
!4448 = !DILocation(line: 863, column: 36, scope: !4429)
!4449 = !DILocation(line: 863, column: 42, scope: !4429)
!4450 = !DILocalVariable(name: "a", scope: !4429, file: !801, line: 864, type: !798)
!4451 = !DILocation(line: 864, column: 11, scope: !4429)
!4452 = !DILocalVariable(name: "rcp_255", scope: !4429, file: !801, line: 864, type: !798)
!4453 = !DILocation(line: 864, column: 14, scope: !4429)
!4454 = !DILocalVariable(name: "lp", scope: !4429, file: !801, line: 865, type: !291)
!4455 = !DILocation(line: 865, column: 14, scope: !4429)
!4456 = !DILocalVariable(name: "lpa", scope: !4429, file: !801, line: 865, type: !291)
!4457 = !DILocation(line: 865, column: 19, scope: !4429)
!4458 = !DILocation(line: 867, column: 12, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4429, file: !801, line: 867, column: 5)
!4460 = !DILocation(line: 867, column: 10, scope: !4459)
!4461 = !DILocation(line: 867, column: 17, scope: !4462)
!4462 = !DILexicalBlockFile(scope: !4463, file: !801, discriminator: 1)
!4463 = distinct !DILexicalBlock(scope: !4459, file: !801, line: 867, column: 5)
!4464 = !DILocation(line: 867, column: 21, scope: !4462)
!4465 = !DILocation(line: 867, column: 19, scope: !4462)
!4466 = !DILocation(line: 867, column: 5, scope: !4462)
!4467 = !DILocation(line: 868, column: 14, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !4463, file: !801, line: 867, column: 29)
!4469 = !DILocation(line: 868, column: 19, scope: !4468)
!4470 = !DILocation(line: 868, column: 30, scope: !4468)
!4471 = !DILocation(line: 868, column: 36, scope: !4468)
!4472 = !DILocation(line: 868, column: 34, scope: !4468)
!4473 = !DILocation(line: 868, column: 41, scope: !4468)
!4474 = !DILocation(line: 868, column: 46, scope: !4468)
!4475 = !DILocation(line: 868, column: 39, scope: !4468)
!4476 = !DILocation(line: 868, column: 27, scope: !4468)
!4477 = !DILocation(line: 868, column: 12, scope: !4468)
!4478 = !DILocation(line: 869, column: 15, scope: !4468)
!4479 = !DILocation(line: 869, column: 21, scope: !4468)
!4480 = !DILocation(line: 869, column: 31, scope: !4468)
!4481 = !DILocation(line: 869, column: 35, scope: !4468)
!4482 = !DILocation(line: 869, column: 41, scope: !4468)
!4483 = !DILocation(line: 869, column: 33, scope: !4468)
!4484 = !DILocation(line: 869, column: 29, scope: !4468)
!4485 = !DILocation(line: 869, column: 13, scope: !4468)
!4486 = !DILocation(line: 870, column: 16, scope: !4487)
!4487 = distinct !DILexicalBlock(scope: !4468, file: !801, line: 870, column: 9)
!4488 = !DILocation(line: 870, column: 14, scope: !4487)
!4489 = !DILocation(line: 870, column: 21, scope: !4490)
!4490 = !DILexicalBlockFile(scope: !4491, file: !801, discriminator: 1)
!4491 = distinct !DILexicalBlock(scope: !4487, file: !801, line: 870, column: 9)
!4492 = !DILocation(line: 870, column: 25, scope: !4490)
!4493 = !DILocation(line: 870, column: 23, scope: !4490)
!4494 = !DILocation(line: 870, column: 9, scope: !4490)
!4495 = !DILocation(line: 871, column: 18, scope: !4496)
!4496 = distinct !DILexicalBlock(scope: !4497, file: !801, line: 871, column: 17)
!4497 = distinct !DILexicalBlock(scope: !4491, file: !801, line: 870, column: 33)
!4498 = !DILocation(line: 871, column: 17, scope: !4497)
!4499 = !DILocation(line: 872, column: 34, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4496, file: !801, line: 871, column: 26)
!4501 = !DILocation(line: 872, column: 32, scope: !4500)
!4502 = !DILocation(line: 872, column: 37, scope: !4500)
!4503 = !DILocation(line: 872, column: 41, scope: !4500)
!4504 = !DILocation(line: 872, column: 25, scope: !4500)
!4505 = !DILocation(line: 872, column: 20, scope: !4500)
!4506 = !DILocation(line: 872, column: 23, scope: !4500)
!4507 = !DILocation(line: 873, column: 34, scope: !4500)
!4508 = !DILocation(line: 873, column: 32, scope: !4500)
!4509 = !DILocation(line: 873, column: 37, scope: !4500)
!4510 = !DILocation(line: 873, column: 41, scope: !4500)
!4511 = !DILocation(line: 873, column: 25, scope: !4500)
!4512 = !DILocation(line: 873, column: 20, scope: !4500)
!4513 = !DILocation(line: 873, column: 23, scope: !4500)
!4514 = !DILocation(line: 874, column: 34, scope: !4500)
!4515 = !DILocation(line: 874, column: 32, scope: !4500)
!4516 = !DILocation(line: 874, column: 37, scope: !4500)
!4517 = !DILocation(line: 874, column: 41, scope: !4500)
!4518 = !DILocation(line: 874, column: 25, scope: !4500)
!4519 = !DILocation(line: 874, column: 20, scope: !4500)
!4520 = !DILocation(line: 874, column: 23, scope: !4500)
!4521 = !DILocation(line: 875, column: 13, scope: !4500)
!4522 = !DILocation(line: 875, column: 24, scope: !4523)
!4523 = !DILexicalBlockFile(scope: !4524, file: !801, discriminator: 1)
!4524 = distinct !DILexicalBlock(scope: !4496, file: !801, line: 875, column: 24)
!4525 = !DILocation(line: 875, column: 31, scope: !4523)
!4526 = !DILocation(line: 876, column: 25, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4524, file: !801, line: 875, column: 39)
!4528 = !DILocation(line: 876, column: 20, scope: !4527)
!4529 = !DILocation(line: 876, column: 23, scope: !4527)
!4530 = !DILocation(line: 877, column: 25, scope: !4527)
!4531 = !DILocation(line: 877, column: 20, scope: !4527)
!4532 = !DILocation(line: 877, column: 23, scope: !4527)
!4533 = !DILocation(line: 878, column: 25, scope: !4527)
!4534 = !DILocation(line: 878, column: 20, scope: !4527)
!4535 = !DILocation(line: 878, column: 23, scope: !4527)
!4536 = !DILocation(line: 879, column: 13, scope: !4527)
!4537 = !DILocation(line: 880, column: 21, scope: !4538)
!4538 = distinct !DILexicalBlock(scope: !4524, file: !801, line: 879, column: 20)
!4539 = !DILocation(line: 880, column: 31, scope: !4538)
!4540 = !DILocation(line: 880, column: 29, scope: !4538)
!4541 = !DILocation(line: 880, column: 19, scope: !4538)
!4542 = !DILocation(line: 881, column: 32, scope: !4538)
!4543 = !DILocation(line: 881, column: 36, scope: !4538)
!4544 = !DILocation(line: 881, column: 34, scope: !4538)
!4545 = !DILocation(line: 881, column: 53, scope: !4538)
!4546 = !DILocation(line: 881, column: 51, scope: !4538)
!4547 = !DILocation(line: 881, column: 60, scope: !4538)
!4548 = !DILocation(line: 881, column: 58, scope: !4538)
!4549 = !DILocation(line: 881, column: 63, scope: !4538)
!4550 = !DILocation(line: 881, column: 67, scope: !4538)
!4551 = !DILocation(line: 881, column: 56, scope: !4538)
!4552 = !DILocation(line: 881, column: 43, scope: !4538)
!4553 = !DILocation(line: 881, column: 25, scope: !4538)
!4554 = !DILocation(line: 881, column: 20, scope: !4538)
!4555 = !DILocation(line: 881, column: 23, scope: !4538)
!4556 = !DILocation(line: 882, column: 32, scope: !4538)
!4557 = !DILocation(line: 882, column: 36, scope: !4538)
!4558 = !DILocation(line: 882, column: 34, scope: !4538)
!4559 = !DILocation(line: 882, column: 53, scope: !4538)
!4560 = !DILocation(line: 882, column: 51, scope: !4538)
!4561 = !DILocation(line: 882, column: 60, scope: !4538)
!4562 = !DILocation(line: 882, column: 58, scope: !4538)
!4563 = !DILocation(line: 882, column: 63, scope: !4538)
!4564 = !DILocation(line: 882, column: 67, scope: !4538)
!4565 = !DILocation(line: 882, column: 56, scope: !4538)
!4566 = !DILocation(line: 882, column: 43, scope: !4538)
!4567 = !DILocation(line: 882, column: 25, scope: !4538)
!4568 = !DILocation(line: 882, column: 20, scope: !4538)
!4569 = !DILocation(line: 882, column: 23, scope: !4538)
!4570 = !DILocation(line: 883, column: 32, scope: !4538)
!4571 = !DILocation(line: 883, column: 36, scope: !4538)
!4572 = !DILocation(line: 883, column: 34, scope: !4538)
!4573 = !DILocation(line: 883, column: 53, scope: !4538)
!4574 = !DILocation(line: 883, column: 51, scope: !4538)
!4575 = !DILocation(line: 883, column: 60, scope: !4538)
!4576 = !DILocation(line: 883, column: 58, scope: !4538)
!4577 = !DILocation(line: 883, column: 63, scope: !4538)
!4578 = !DILocation(line: 883, column: 67, scope: !4538)
!4579 = !DILocation(line: 883, column: 56, scope: !4538)
!4580 = !DILocation(line: 883, column: 43, scope: !4538)
!4581 = !DILocation(line: 883, column: 25, scope: !4538)
!4582 = !DILocation(line: 883, column: 20, scope: !4538)
!4583 = !DILocation(line: 883, column: 23, scope: !4538)
!4584 = !DILocation(line: 885, column: 17, scope: !4497)
!4585 = !DILocation(line: 886, column: 9, scope: !4497)
!4586 = !DILocation(line: 870, column: 29, scope: !4587)
!4587 = !DILexicalBlockFile(scope: !4491, file: !801, discriminator: 2)
!4588 = !DILocation(line: 870, column: 9, scope: !4587)
!4589 = distinct !{!4589, !4590}
!4590 = !DILocation(line: 870, column: 9, scope: !4468)
!4591 = !DILocation(line: 887, column: 5, scope: !4468)
!4592 = !DILocation(line: 867, column: 25, scope: !4593)
!4593 = !DILexicalBlockFile(scope: !4463, file: !801, discriminator: 2)
!4594 = !DILocation(line: 867, column: 5, scope: !4593)
!4595 = distinct !{!4595, !4596}
!4596 = !DILocation(line: 867, column: 5, scope: !4429)
!4597 = !DILocation(line: 888, column: 1, scope: !4429)
!4598 = distinct !DISubprogram(name: "update_sono_rgb", scope: !801, file: !801, line: 1052, type: !932, isLocal: true, isDefinition: true, scopeLine: 1053, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!4599 = !DILocalVariable(name: "sono", arg: 1, scope: !4598, file: !801, line: 1052, type: !285)
!4600 = !DILocation(line: 1052, column: 38, scope: !4598)
!4601 = !DILocalVariable(name: "c", arg: 2, scope: !4598, file: !801, line: 1052, type: !920)
!4602 = !DILocation(line: 1052, column: 62, scope: !4598)
!4603 = !DILocalVariable(name: "idx", arg: 3, scope: !4598, file: !801, line: 1052, type: !200)
!4604 = !DILocation(line: 1052, column: 69, scope: !4598)
!4605 = !DILocalVariable(name: "x", scope: !4598, file: !801, line: 1054, type: !200)
!4606 = !DILocation(line: 1054, column: 9, scope: !4598)
!4607 = !DILocalVariable(name: "w", scope: !4598, file: !801, line: 1054, type: !200)
!4608 = !DILocation(line: 1054, column: 12, scope: !4598)
!4609 = !DILocation(line: 1054, column: 16, scope: !4598)
!4610 = !DILocation(line: 1054, column: 22, scope: !4598)
!4611 = !DILocalVariable(name: "lp", scope: !4598, file: !801, line: 1055, type: !291)
!4612 = !DILocation(line: 1055, column: 14, scope: !4598)
!4613 = !DILocation(line: 1055, column: 19, scope: !4598)
!4614 = !DILocation(line: 1055, column: 25, scope: !4598)
!4615 = !DILocation(line: 1055, column: 35, scope: !4598)
!4616 = !DILocation(line: 1055, column: 41, scope: !4598)
!4617 = !DILocation(line: 1055, column: 47, scope: !4598)
!4618 = !DILocation(line: 1055, column: 39, scope: !4598)
!4619 = !DILocation(line: 1055, column: 33, scope: !4598)
!4620 = !DILocation(line: 1057, column: 12, scope: !4621)
!4621 = distinct !DILexicalBlock(scope: !4598, file: !801, line: 1057, column: 5)
!4622 = !DILocation(line: 1057, column: 10, scope: !4621)
!4623 = !DILocation(line: 1057, column: 17, scope: !4624)
!4624 = !DILexicalBlockFile(scope: !4625, file: !801, discriminator: 1)
!4625 = distinct !DILexicalBlock(scope: !4621, file: !801, line: 1057, column: 5)
!4626 = !DILocation(line: 1057, column: 21, scope: !4624)
!4627 = !DILocation(line: 1057, column: 19, scope: !4624)
!4628 = !DILocation(line: 1057, column: 5, scope: !4624)
!4629 = !DILocation(line: 1058, column: 26, scope: !4630)
!4630 = distinct !DILexicalBlock(scope: !4625, file: !801, line: 1057, column: 29)
!4631 = !DILocation(line: 1058, column: 24, scope: !4630)
!4632 = !DILocation(line: 1058, column: 29, scope: !4630)
!4633 = !DILocation(line: 1058, column: 33, scope: !4630)
!4634 = !DILocation(line: 1058, column: 17, scope: !4630)
!4635 = !DILocation(line: 1058, column: 12, scope: !4630)
!4636 = !DILocation(line: 1058, column: 15, scope: !4630)
!4637 = !DILocation(line: 1059, column: 26, scope: !4630)
!4638 = !DILocation(line: 1059, column: 24, scope: !4630)
!4639 = !DILocation(line: 1059, column: 29, scope: !4630)
!4640 = !DILocation(line: 1059, column: 33, scope: !4630)
!4641 = !DILocation(line: 1059, column: 17, scope: !4630)
!4642 = !DILocation(line: 1059, column: 12, scope: !4630)
!4643 = !DILocation(line: 1059, column: 15, scope: !4630)
!4644 = !DILocation(line: 1060, column: 26, scope: !4630)
!4645 = !DILocation(line: 1060, column: 24, scope: !4630)
!4646 = !DILocation(line: 1060, column: 29, scope: !4630)
!4647 = !DILocation(line: 1060, column: 33, scope: !4630)
!4648 = !DILocation(line: 1060, column: 17, scope: !4630)
!4649 = !DILocation(line: 1060, column: 12, scope: !4630)
!4650 = !DILocation(line: 1060, column: 15, scope: !4630)
!4651 = !DILocation(line: 1061, column: 5, scope: !4630)
!4652 = !DILocation(line: 1057, column: 25, scope: !4653)
!4653 = !DILexicalBlockFile(scope: !4625, file: !801, discriminator: 2)
!4654 = !DILocation(line: 1057, column: 5, scope: !4653)
!4655 = distinct !{!4655, !4656}
!4656 = !DILocation(line: 1057, column: 5, scope: !4598)
!4657 = !DILocation(line: 1062, column: 1, scope: !4598)
!4658 = distinct !DISubprogram(name: "draw_bar_yuv", scope: !801, file: !801, line: 810, type: !916, isLocal: true, isDefinition: true, scopeLine: 812, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!4659 = !DILocalVariable(name: "out", arg: 1, scope: !4658, file: !801, line: 810, type: !285)
!4660 = !DILocation(line: 810, column: 35, scope: !4658)
!4661 = !DILocalVariable(name: "h", arg: 2, scope: !4658, file: !801, line: 810, type: !918)
!4662 = !DILocation(line: 810, column: 53, scope: !4658)
!4663 = !DILocalVariable(name: "rcp_h", arg: 3, scope: !4658, file: !801, line: 810, type: !918)
!4664 = !DILocation(line: 810, column: 69, scope: !4658)
!4665 = !DILocalVariable(name: "c", arg: 4, scope: !4658, file: !801, line: 811, type: !920)
!4666 = !DILocation(line: 811, column: 44, scope: !4658)
!4667 = !DILocalVariable(name: "bar_h", arg: 5, scope: !4658, file: !801, line: 811, type: !200)
!4668 = !DILocation(line: 811, column: 51, scope: !4658)
!4669 = !DILocalVariable(name: "bar_t", arg: 6, scope: !4658, file: !801, line: 811, type: !798)
!4670 = !DILocation(line: 811, column: 64, scope: !4658)
!4671 = !DILocalVariable(name: "x", scope: !4658, file: !801, line: 813, type: !200)
!4672 = !DILocation(line: 813, column: 9, scope: !4658)
!4673 = !DILocalVariable(name: "y", scope: !4658, file: !801, line: 813, type: !200)
!4674 = !DILocation(line: 813, column: 12, scope: !4658)
!4675 = !DILocalVariable(name: "yh", scope: !4658, file: !801, line: 813, type: !200)
!4676 = !DILocation(line: 813, column: 15, scope: !4658)
!4677 = !DILocalVariable(name: "w", scope: !4658, file: !801, line: 813, type: !200)
!4678 = !DILocation(line: 813, column: 19, scope: !4658)
!4679 = !DILocation(line: 813, column: 23, scope: !4658)
!4680 = !DILocation(line: 813, column: 28, scope: !4658)
!4681 = !DILocalVariable(name: "mul", scope: !4658, file: !801, line: 814, type: !798)
!4682 = !DILocation(line: 814, column: 11, scope: !4658)
!4683 = !DILocalVariable(name: "ht", scope: !4658, file: !801, line: 814, type: !798)
!4684 = !DILocation(line: 814, column: 16, scope: !4658)
!4685 = !DILocalVariable(name: "rcp_bar_h", scope: !4658, file: !801, line: 814, type: !798)
!4686 = !DILocation(line: 814, column: 20, scope: !4658)
!4687 = !DILocation(line: 814, column: 39, scope: !4658)
!4688 = !DILocation(line: 814, column: 37, scope: !4658)
!4689 = !DILocalVariable(name: "rcp_bar_t", scope: !4658, file: !801, line: 814, type: !798)
!4690 = !DILocation(line: 814, column: 46, scope: !4658)
!4691 = !DILocation(line: 814, column: 65, scope: !4658)
!4692 = !DILocation(line: 814, column: 63, scope: !4658)
!4693 = !DILocalVariable(name: "vy", scope: !4658, file: !801, line: 815, type: !291)
!4694 = !DILocation(line: 815, column: 14, scope: !4658)
!4695 = !DILocation(line: 815, column: 19, scope: !4658)
!4696 = !DILocation(line: 815, column: 24, scope: !4658)
!4697 = !DILocalVariable(name: "vu", scope: !4658, file: !801, line: 815, type: !291)
!4698 = !DILocation(line: 815, column: 34, scope: !4658)
!4699 = !DILocation(line: 815, column: 39, scope: !4658)
!4700 = !DILocation(line: 815, column: 44, scope: !4658)
!4701 = !DILocalVariable(name: "vv", scope: !4658, file: !801, line: 815, type: !291)
!4702 = !DILocation(line: 815, column: 54, scope: !4658)
!4703 = !DILocation(line: 815, column: 59, scope: !4658)
!4704 = !DILocation(line: 815, column: 64, scope: !4658)
!4705 = !DILocalVariable(name: "lpy", scope: !4658, file: !801, line: 816, type: !291)
!4706 = !DILocation(line: 816, column: 14, scope: !4658)
!4707 = !DILocalVariable(name: "lpu", scope: !4658, file: !801, line: 816, type: !291)
!4708 = !DILocation(line: 816, column: 20, scope: !4658)
!4709 = !DILocalVariable(name: "lpv", scope: !4658, file: !801, line: 816, type: !291)
!4710 = !DILocation(line: 816, column: 26, scope: !4658)
!4711 = !DILocalVariable(name: "lsy", scope: !4658, file: !801, line: 817, type: !200)
!4712 = !DILocation(line: 817, column: 9, scope: !4658)
!4713 = !DILocation(line: 817, column: 15, scope: !4658)
!4714 = !DILocation(line: 817, column: 20, scope: !4658)
!4715 = !DILocalVariable(name: "lsu", scope: !4658, file: !801, line: 817, type: !200)
!4716 = !DILocation(line: 817, column: 33, scope: !4658)
!4717 = !DILocation(line: 817, column: 39, scope: !4658)
!4718 = !DILocation(line: 817, column: 44, scope: !4658)
!4719 = !DILocalVariable(name: "lsv", scope: !4658, file: !801, line: 817, type: !200)
!4720 = !DILocation(line: 817, column: 57, scope: !4658)
!4721 = !DILocation(line: 817, column: 63, scope: !4658)
!4722 = !DILocation(line: 817, column: 68, scope: !4658)
!4723 = !DILocalVariable(name: "fmt", scope: !4658, file: !801, line: 818, type: !200)
!4724 = !DILocation(line: 818, column: 9, scope: !4658)
!4725 = !DILocation(line: 818, column: 15, scope: !4658)
!4726 = !DILocation(line: 818, column: 20, scope: !4658)
!4727 = !DILocation(line: 820, column: 12, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4658, file: !801, line: 820, column: 5)
!4729 = !DILocation(line: 820, column: 10, scope: !4728)
!4730 = !DILocation(line: 820, column: 17, scope: !4731)
!4731 = !DILexicalBlockFile(scope: !4732, file: !801, discriminator: 1)
!4732 = distinct !DILexicalBlock(scope: !4728, file: !801, line: 820, column: 5)
!4733 = !DILocation(line: 820, column: 21, scope: !4731)
!4734 = !DILocation(line: 820, column: 19, scope: !4731)
!4735 = !DILocation(line: 820, column: 5, scope: !4731)
!4736 = !DILocation(line: 821, column: 15, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4732, file: !801, line: 820, column: 36)
!4738 = !DILocation(line: 821, column: 19, scope: !4737)
!4739 = !DILocation(line: 821, column: 14, scope: !4737)
!4740 = !DILocation(line: 821, column: 44, scope: !4741)
!4741 = !DILexicalBlockFile(scope: !4737, file: !801, discriminator: 1)
!4742 = !DILocation(line: 821, column: 46, scope: !4741)
!4743 = !DILocation(line: 821, column: 14, scope: !4741)
!4744 = !DILocation(line: 821, column: 52, scope: !4745)
!4745 = !DILexicalBlockFile(scope: !4737, file: !801, discriminator: 2)
!4746 = !DILocation(line: 821, column: 14, scope: !4745)
!4747 = !DILocation(line: 821, column: 14, scope: !4748)
!4748 = !DILexicalBlockFile(scope: !4737, file: !801, discriminator: 3)
!4749 = !DILocation(line: 821, column: 12, scope: !4748)
!4750 = !DILocation(line: 822, column: 15, scope: !4737)
!4751 = !DILocation(line: 822, column: 23, scope: !4737)
!4752 = !DILocation(line: 822, column: 21, scope: !4737)
!4753 = !DILocation(line: 822, column: 14, scope: !4737)
!4754 = !DILocation(line: 822, column: 28, scope: !4737)
!4755 = !DILocation(line: 822, column: 26, scope: !4737)
!4756 = !DILocation(line: 822, column: 12, scope: !4737)
!4757 = !DILocation(line: 823, column: 15, scope: !4737)
!4758 = !DILocation(line: 823, column: 20, scope: !4737)
!4759 = !DILocation(line: 823, column: 24, scope: !4737)
!4760 = !DILocation(line: 823, column: 22, scope: !4737)
!4761 = !DILocation(line: 823, column: 18, scope: !4737)
!4762 = !DILocation(line: 823, column: 13, scope: !4737)
!4763 = !DILocation(line: 824, column: 15, scope: !4737)
!4764 = !DILocation(line: 824, column: 20, scope: !4737)
!4765 = !DILocation(line: 824, column: 25, scope: !4737)
!4766 = !DILocation(line: 824, column: 23, scope: !4737)
!4767 = !DILocation(line: 824, column: 18, scope: !4737)
!4768 = !DILocation(line: 824, column: 13, scope: !4737)
!4769 = !DILocation(line: 825, column: 15, scope: !4737)
!4770 = !DILocation(line: 825, column: 20, scope: !4737)
!4771 = !DILocation(line: 825, column: 25, scope: !4737)
!4772 = !DILocation(line: 825, column: 23, scope: !4737)
!4773 = !DILocation(line: 825, column: 18, scope: !4737)
!4774 = !DILocation(line: 825, column: 13, scope: !4737)
!4775 = !DILocation(line: 826, column: 13, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4737, file: !801, line: 826, column: 13)
!4777 = !DILocation(line: 826, column: 17, scope: !4776)
!4778 = !DILocation(line: 826, column: 13, scope: !4737)
!4779 = !DILocation(line: 827, column: 20, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4781, file: !801, line: 827, column: 13)
!4781 = distinct !DILexicalBlock(scope: !4776, file: !801, line: 826, column: 40)
!4782 = !DILocation(line: 827, column: 18, scope: !4780)
!4783 = !DILocation(line: 827, column: 25, scope: !4784)
!4784 = !DILexicalBlockFile(scope: !4785, file: !801, discriminator: 1)
!4785 = distinct !DILexicalBlock(scope: !4780, file: !801, line: 827, column: 13)
!4786 = !DILocation(line: 827, column: 29, scope: !4784)
!4787 = !DILocation(line: 827, column: 27, scope: !4784)
!4788 = !DILocation(line: 827, column: 13, scope: !4784)
!4789 = !DILocation(line: 828, column: 17, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4785, file: !801, line: 827, column: 40)
!4791 = distinct !{!4791, !4789}
!4792 = !DILocation(line: 828, column: 28, scope: !4793)
!4793 = !DILexicalBlockFile(scope: !4794, file: !801, discriminator: 1)
!4794 = distinct !DILexicalBlock(scope: !4795, file: !801, line: 828, column: 26)
!4795 = distinct !DILexicalBlock(scope: !4790, file: !801, line: 828, column: 20)
!4796 = !DILocation(line: 828, column: 26, scope: !4793)
!4797 = !DILocation(line: 828, column: 34, scope: !4793)
!4798 = !DILocation(line: 828, column: 31, scope: !4793)
!4799 = !DILocation(line: 828, column: 44, scope: !4800)
!4800 = !DILexicalBlockFile(scope: !4801, file: !801, discriminator: 2)
!4801 = distinct !DILexicalBlock(scope: !4794, file: !801, line: 828, column: 38)
!4802 = !DILocation(line: 828, column: 47, scope: !4800)
!4803 = !DILocation(line: 828, column: 57, scope: !4800)
!4804 = !DILocation(line: 828, column: 60, scope: !4800)
!4805 = !DILocation(line: 828, column: 71, scope: !4800)
!4806 = !DILocation(line: 828, column: 74, scope: !4800)
!4807 = !DILocation(line: 828, column: 81, scope: !4800)
!4808 = !DILocation(line: 828, column: 99, scope: !4809)
!4809 = !DILexicalBlockFile(scope: !4810, file: !801, discriminator: 3)
!4810 = distinct !DILexicalBlock(scope: !4794, file: !801, line: 828, column: 88)
!4811 = !DILocation(line: 828, column: 97, scope: !4809)
!4812 = !DILocation(line: 828, column: 104, scope: !4809)
!4813 = !DILocation(line: 828, column: 102, scope: !4809)
!4814 = !DILocation(line: 828, column: 116, scope: !4809)
!4815 = !DILocation(line: 828, column: 110, scope: !4809)
!4816 = !DILocation(line: 828, column: 108, scope: !4809)
!4817 = !DILocation(line: 828, column: 94, scope: !4809)
!4818 = !DILocation(line: 828, column: 127, scope: !4809)
!4819 = !DILocation(line: 828, column: 133, scope: !4809)
!4820 = !DILocation(line: 828, column: 131, scope: !4809)
!4821 = !DILocation(line: 828, column: 126, scope: !4809)
!4822 = !DILocation(line: 828, column: 143, scope: !4823)
!4823 = !DILexicalBlockFile(scope: !4810, file: !801, discriminator: 4)
!4824 = !DILocation(line: 828, column: 149, scope: !4823)
!4825 = !DILocation(line: 828, column: 147, scope: !4823)
!4826 = !DILocation(line: 828, column: 126, scope: !4823)
!4827 = !DILocation(line: 828, column: 126, scope: !4828)
!4828 = !DILexicalBlockFile(scope: !4810, file: !801, discriminator: 5)
!4829 = !DILocation(line: 828, column: 126, scope: !4830)
!4830 = !DILexicalBlockFile(scope: !4810, file: !801, discriminator: 6)
!4831 = !DILocation(line: 828, column: 124, scope: !4830)
!4832 = !DILocation(line: 828, column: 184, scope: !4830)
!4833 = !DILocation(line: 828, column: 192, scope: !4830)
!4834 = !DILocation(line: 828, column: 190, scope: !4830)
!4835 = !DILocation(line: 828, column: 195, scope: !4830)
!4836 = !DILocation(line: 828, column: 199, scope: !4830)
!4837 = !DILocation(line: 828, column: 188, scope: !4830)
!4838 = !DILocation(line: 828, column: 201, scope: !4830)
!4839 = !DILocation(line: 828, column: 177, scope: !4830)
!4840 = !DILocation(line: 828, column: 172, scope: !4830)
!4841 = !DILocation(line: 828, column: 175, scope: !4830)
!4842 = !DILocation(line: 828, column: 227, scope: !4830)
!4843 = !DILocation(line: 828, column: 235, scope: !4830)
!4844 = !DILocation(line: 828, column: 233, scope: !4830)
!4845 = !DILocation(line: 828, column: 238, scope: !4830)
!4846 = !DILocation(line: 828, column: 242, scope: !4830)
!4847 = !DILocation(line: 828, column: 231, scope: !4830)
!4848 = !DILocation(line: 828, column: 244, scope: !4830)
!4849 = !DILocation(line: 828, column: 220, scope: !4850)
!4850 = !DILexicalBlockFile(scope: !4830, file: !801, discriminator: 8)
!4851 = !DILocation(line: 828, column: 220, scope: !4830)
!4852 = !DILocation(line: 828, column: 215, scope: !4830)
!4853 = !DILocation(line: 828, column: 218, scope: !4830)
!4854 = !DILocation(line: 828, column: 271, scope: !4830)
!4855 = !DILocation(line: 828, column: 279, scope: !4830)
!4856 = !DILocation(line: 828, column: 277, scope: !4830)
!4857 = !DILocation(line: 828, column: 282, scope: !4830)
!4858 = !DILocation(line: 828, column: 286, scope: !4830)
!4859 = !DILocation(line: 828, column: 275, scope: !4830)
!4860 = !DILocation(line: 828, column: 288, scope: !4830)
!4861 = !DILocation(line: 828, column: 264, scope: !4862)
!4862 = !DILexicalBlockFile(scope: !4830, file: !801, discriminator: 9)
!4863 = !DILocation(line: 828, column: 264, scope: !4830)
!4864 = !DILocation(line: 828, column: 259, scope: !4830)
!4865 = !DILocation(line: 828, column: 262, scope: !4830)
!4866 = !DILocation(line: 828, column: 301, scope: !4867)
!4867 = !DILexicalBlockFile(scope: !4795, file: !801, discriminator: 7)
!4868 = !DILocation(line: 829, column: 17, scope: !4790)
!4869 = distinct !{!4869, !4868}
!4870 = !DILocation(line: 829, column: 28, scope: !4871)
!4871 = !DILexicalBlockFile(scope: !4872, file: !801, discriminator: 1)
!4872 = distinct !DILexicalBlock(scope: !4873, file: !801, line: 829, column: 26)
!4873 = distinct !DILexicalBlock(scope: !4790, file: !801, line: 829, column: 20)
!4874 = !DILocation(line: 829, column: 29, scope: !4871)
!4875 = !DILocation(line: 829, column: 26, scope: !4871)
!4876 = !DILocation(line: 829, column: 36, scope: !4871)
!4877 = !DILocation(line: 829, column: 33, scope: !4871)
!4878 = !DILocation(line: 829, column: 46, scope: !4879)
!4879 = !DILexicalBlockFile(scope: !4880, file: !801, discriminator: 2)
!4880 = distinct !DILexicalBlock(scope: !4872, file: !801, line: 829, column: 40)
!4881 = !DILocation(line: 829, column: 49, scope: !4879)
!4882 = !DILocation(line: 829, column: 59, scope: !4879)
!4883 = !DILocation(line: 829, column: 62, scope: !4879)
!4884 = !DILocation(line: 829, column: 73, scope: !4879)
!4885 = !DILocation(line: 829, column: 76, scope: !4879)
!4886 = !DILocation(line: 829, column: 83, scope: !4879)
!4887 = !DILocation(line: 829, column: 101, scope: !4888)
!4888 = !DILexicalBlockFile(scope: !4889, file: !801, discriminator: 3)
!4889 = distinct !DILexicalBlock(scope: !4872, file: !801, line: 829, column: 90)
!4890 = !DILocation(line: 829, column: 102, scope: !4888)
!4891 = !DILocation(line: 829, column: 99, scope: !4888)
!4892 = !DILocation(line: 829, column: 108, scope: !4888)
!4893 = !DILocation(line: 829, column: 106, scope: !4888)
!4894 = !DILocation(line: 829, column: 120, scope: !4888)
!4895 = !DILocation(line: 829, column: 121, scope: !4888)
!4896 = !DILocation(line: 829, column: 114, scope: !4888)
!4897 = !DILocation(line: 829, column: 112, scope: !4888)
!4898 = !DILocation(line: 829, column: 96, scope: !4888)
!4899 = !DILocation(line: 829, column: 133, scope: !4888)
!4900 = !DILocation(line: 829, column: 139, scope: !4888)
!4901 = !DILocation(line: 829, column: 137, scope: !4888)
!4902 = !DILocation(line: 829, column: 132, scope: !4888)
!4903 = !DILocation(line: 829, column: 149, scope: !4904)
!4904 = !DILexicalBlockFile(scope: !4889, file: !801, discriminator: 4)
!4905 = !DILocation(line: 829, column: 155, scope: !4904)
!4906 = !DILocation(line: 829, column: 153, scope: !4904)
!4907 = !DILocation(line: 829, column: 132, scope: !4904)
!4908 = !DILocation(line: 829, column: 132, scope: !4909)
!4909 = !DILexicalBlockFile(scope: !4889, file: !801, discriminator: 5)
!4910 = !DILocation(line: 829, column: 132, scope: !4911)
!4911 = !DILexicalBlockFile(scope: !4889, file: !801, discriminator: 6)
!4912 = !DILocation(line: 829, column: 130, scope: !4911)
!4913 = !DILocation(line: 829, column: 190, scope: !4911)
!4914 = !DILocation(line: 829, column: 198, scope: !4911)
!4915 = !DILocation(line: 829, column: 199, scope: !4911)
!4916 = !DILocation(line: 829, column: 196, scope: !4911)
!4917 = !DILocation(line: 829, column: 203, scope: !4911)
!4918 = !DILocation(line: 829, column: 207, scope: !4911)
!4919 = !DILocation(line: 829, column: 194, scope: !4911)
!4920 = !DILocation(line: 829, column: 209, scope: !4911)
!4921 = !DILocation(line: 829, column: 183, scope: !4911)
!4922 = !DILocation(line: 829, column: 178, scope: !4911)
!4923 = !DILocation(line: 829, column: 181, scope: !4911)
!4924 = !DILocation(line: 829, column: 235, scope: !4911)
!4925 = !DILocation(line: 829, column: 243, scope: !4911)
!4926 = !DILocation(line: 829, column: 244, scope: !4911)
!4927 = !DILocation(line: 829, column: 241, scope: !4911)
!4928 = !DILocation(line: 829, column: 248, scope: !4911)
!4929 = !DILocation(line: 829, column: 252, scope: !4911)
!4930 = !DILocation(line: 829, column: 239, scope: !4911)
!4931 = !DILocation(line: 829, column: 254, scope: !4911)
!4932 = !DILocation(line: 829, column: 228, scope: !4933)
!4933 = !DILexicalBlockFile(scope: !4911, file: !801, discriminator: 8)
!4934 = !DILocation(line: 829, column: 228, scope: !4911)
!4935 = !DILocation(line: 829, column: 223, scope: !4911)
!4936 = !DILocation(line: 829, column: 226, scope: !4911)
!4937 = !DILocation(line: 829, column: 281, scope: !4911)
!4938 = !DILocation(line: 829, column: 289, scope: !4911)
!4939 = !DILocation(line: 829, column: 290, scope: !4911)
!4940 = !DILocation(line: 829, column: 287, scope: !4911)
!4941 = !DILocation(line: 829, column: 294, scope: !4911)
!4942 = !DILocation(line: 829, column: 298, scope: !4911)
!4943 = !DILocation(line: 829, column: 285, scope: !4911)
!4944 = !DILocation(line: 829, column: 300, scope: !4911)
!4945 = !DILocation(line: 829, column: 274, scope: !4946)
!4946 = !DILexicalBlockFile(scope: !4911, file: !801, discriminator: 9)
!4947 = !DILocation(line: 829, column: 274, scope: !4911)
!4948 = !DILocation(line: 829, column: 269, scope: !4911)
!4949 = !DILocation(line: 829, column: 272, scope: !4911)
!4950 = !DILocation(line: 829, column: 313, scope: !4951)
!4951 = !DILexicalBlockFile(scope: !4873, file: !801, discriminator: 7)
!4952 = !DILocation(line: 830, column: 13, scope: !4790)
!4953 = !DILocation(line: 827, column: 34, scope: !4954)
!4954 = !DILexicalBlockFile(scope: !4785, file: !801, discriminator: 2)
!4955 = !DILocation(line: 827, column: 13, scope: !4954)
!4956 = distinct !{!4956, !4957}
!4957 = !DILocation(line: 827, column: 13, scope: !4781)
!4958 = !DILocation(line: 831, column: 9, scope: !4781)
!4959 = !DILocation(line: 832, column: 20, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !4961, file: !801, line: 832, column: 13)
!4961 = distinct !DILexicalBlock(scope: !4776, file: !801, line: 831, column: 16)
!4962 = !DILocation(line: 832, column: 18, scope: !4960)
!4963 = !DILocation(line: 832, column: 25, scope: !4964)
!4964 = !DILexicalBlockFile(scope: !4965, file: !801, discriminator: 1)
!4965 = distinct !DILexicalBlock(scope: !4960, file: !801, line: 832, column: 13)
!4966 = !DILocation(line: 832, column: 29, scope: !4964)
!4967 = !DILocation(line: 832, column: 27, scope: !4964)
!4968 = !DILocation(line: 832, column: 13, scope: !4964)
!4969 = !DILocation(line: 833, column: 17, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4965, file: !801, line: 832, column: 40)
!4971 = distinct !{!4971, !4969}
!4972 = !DILocation(line: 833, column: 28, scope: !4973)
!4973 = !DILexicalBlockFile(scope: !4974, file: !801, discriminator: 1)
!4974 = distinct !DILexicalBlock(scope: !4975, file: !801, line: 833, column: 26)
!4975 = distinct !DILexicalBlock(scope: !4970, file: !801, line: 833, column: 20)
!4976 = !DILocation(line: 833, column: 26, scope: !4973)
!4977 = !DILocation(line: 833, column: 34, scope: !4973)
!4978 = !DILocation(line: 833, column: 31, scope: !4973)
!4979 = !DILocation(line: 833, column: 44, scope: !4980)
!4980 = !DILexicalBlockFile(scope: !4981, file: !801, discriminator: 2)
!4981 = distinct !DILexicalBlock(scope: !4974, file: !801, line: 833, column: 38)
!4982 = !DILocation(line: 833, column: 47, scope: !4980)
!4983 = !DILocation(line: 833, column: 57, scope: !4980)
!4984 = !DILocation(line: 833, column: 60, scope: !4980)
!4985 = !DILocation(line: 833, column: 71, scope: !4980)
!4986 = !DILocation(line: 833, column: 74, scope: !4980)
!4987 = !DILocation(line: 833, column: 81, scope: !4980)
!4988 = !DILocation(line: 833, column: 99, scope: !4989)
!4989 = !DILexicalBlockFile(scope: !4990, file: !801, discriminator: 3)
!4990 = distinct !DILexicalBlock(scope: !4974, file: !801, line: 833, column: 88)
!4991 = !DILocation(line: 833, column: 97, scope: !4989)
!4992 = !DILocation(line: 833, column: 104, scope: !4989)
!4993 = !DILocation(line: 833, column: 102, scope: !4989)
!4994 = !DILocation(line: 833, column: 116, scope: !4989)
!4995 = !DILocation(line: 833, column: 110, scope: !4989)
!4996 = !DILocation(line: 833, column: 108, scope: !4989)
!4997 = !DILocation(line: 833, column: 94, scope: !4989)
!4998 = !DILocation(line: 833, column: 127, scope: !4989)
!4999 = !DILocation(line: 833, column: 133, scope: !4989)
!5000 = !DILocation(line: 833, column: 131, scope: !4989)
!5001 = !DILocation(line: 833, column: 126, scope: !4989)
!5002 = !DILocation(line: 833, column: 143, scope: !5003)
!5003 = !DILexicalBlockFile(scope: !4990, file: !801, discriminator: 4)
!5004 = !DILocation(line: 833, column: 149, scope: !5003)
!5005 = !DILocation(line: 833, column: 147, scope: !5003)
!5006 = !DILocation(line: 833, column: 126, scope: !5003)
!5007 = !DILocation(line: 833, column: 126, scope: !5008)
!5008 = !DILexicalBlockFile(scope: !4990, file: !801, discriminator: 5)
!5009 = !DILocation(line: 833, column: 126, scope: !5010)
!5010 = !DILexicalBlockFile(scope: !4990, file: !801, discriminator: 6)
!5011 = !DILocation(line: 833, column: 124, scope: !5010)
!5012 = !DILocation(line: 833, column: 184, scope: !5010)
!5013 = !DILocation(line: 833, column: 192, scope: !5010)
!5014 = !DILocation(line: 833, column: 190, scope: !5010)
!5015 = !DILocation(line: 833, column: 195, scope: !5010)
!5016 = !DILocation(line: 833, column: 199, scope: !5010)
!5017 = !DILocation(line: 833, column: 188, scope: !5010)
!5018 = !DILocation(line: 833, column: 201, scope: !5010)
!5019 = !DILocation(line: 833, column: 177, scope: !5010)
!5020 = !DILocation(line: 833, column: 172, scope: !5010)
!5021 = !DILocation(line: 833, column: 175, scope: !5010)
!5022 = !DILocation(line: 833, column: 227, scope: !5010)
!5023 = !DILocation(line: 833, column: 235, scope: !5010)
!5024 = !DILocation(line: 833, column: 233, scope: !5010)
!5025 = !DILocation(line: 833, column: 238, scope: !5010)
!5026 = !DILocation(line: 833, column: 242, scope: !5010)
!5027 = !DILocation(line: 833, column: 231, scope: !5010)
!5028 = !DILocation(line: 833, column: 244, scope: !5010)
!5029 = !DILocation(line: 833, column: 220, scope: !5030)
!5030 = !DILexicalBlockFile(scope: !5010, file: !801, discriminator: 8)
!5031 = !DILocation(line: 833, column: 220, scope: !5010)
!5032 = !DILocation(line: 833, column: 215, scope: !5010)
!5033 = !DILocation(line: 833, column: 218, scope: !5010)
!5034 = !DILocation(line: 833, column: 271, scope: !5010)
!5035 = !DILocation(line: 833, column: 279, scope: !5010)
!5036 = !DILocation(line: 833, column: 277, scope: !5010)
!5037 = !DILocation(line: 833, column: 282, scope: !5010)
!5038 = !DILocation(line: 833, column: 286, scope: !5010)
!5039 = !DILocation(line: 833, column: 275, scope: !5010)
!5040 = !DILocation(line: 833, column: 288, scope: !5010)
!5041 = !DILocation(line: 833, column: 264, scope: !5042)
!5042 = !DILexicalBlockFile(scope: !5010, file: !801, discriminator: 9)
!5043 = !DILocation(line: 833, column: 264, scope: !5010)
!5044 = !DILocation(line: 833, column: 259, scope: !5010)
!5045 = !DILocation(line: 833, column: 262, scope: !5010)
!5046 = !DILocation(line: 833, column: 301, scope: !5047)
!5047 = !DILexicalBlockFile(scope: !4975, file: !801, discriminator: 7)
!5048 = !DILocation(line: 834, column: 17, scope: !4970)
!5049 = distinct !{!5049, !5048}
!5050 = !DILocation(line: 834, column: 28, scope: !5051)
!5051 = !DILexicalBlockFile(scope: !5052, file: !801, discriminator: 1)
!5052 = distinct !DILexicalBlock(scope: !5053, file: !801, line: 834, column: 26)
!5053 = distinct !DILexicalBlock(scope: !4970, file: !801, line: 834, column: 20)
!5054 = !DILocation(line: 834, column: 29, scope: !5051)
!5055 = !DILocation(line: 834, column: 26, scope: !5051)
!5056 = !DILocation(line: 834, column: 36, scope: !5051)
!5057 = !DILocation(line: 834, column: 33, scope: !5051)
!5058 = !DILocation(line: 834, column: 46, scope: !5059)
!5059 = !DILexicalBlockFile(scope: !5060, file: !801, discriminator: 2)
!5060 = distinct !DILexicalBlock(scope: !5052, file: !801, line: 834, column: 40)
!5061 = !DILocation(line: 834, column: 49, scope: !5059)
!5062 = !DILocation(line: 834, column: 55, scope: !5059)
!5063 = !DILocation(line: 834, column: 73, scope: !5064)
!5064 = !DILexicalBlockFile(scope: !5065, file: !801, discriminator: 3)
!5065 = distinct !DILexicalBlock(scope: !5052, file: !801, line: 834, column: 62)
!5066 = !DILocation(line: 834, column: 74, scope: !5064)
!5067 = !DILocation(line: 834, column: 71, scope: !5064)
!5068 = !DILocation(line: 834, column: 80, scope: !5064)
!5069 = !DILocation(line: 834, column: 78, scope: !5064)
!5070 = !DILocation(line: 834, column: 92, scope: !5064)
!5071 = !DILocation(line: 834, column: 93, scope: !5064)
!5072 = !DILocation(line: 834, column: 86, scope: !5064)
!5073 = !DILocation(line: 834, column: 84, scope: !5064)
!5074 = !DILocation(line: 834, column: 68, scope: !5064)
!5075 = !DILocation(line: 834, column: 105, scope: !5064)
!5076 = !DILocation(line: 834, column: 111, scope: !5064)
!5077 = !DILocation(line: 834, column: 109, scope: !5064)
!5078 = !DILocation(line: 834, column: 104, scope: !5064)
!5079 = !DILocation(line: 834, column: 121, scope: !5080)
!5080 = !DILexicalBlockFile(scope: !5065, file: !801, discriminator: 4)
!5081 = !DILocation(line: 834, column: 127, scope: !5080)
!5082 = !DILocation(line: 834, column: 125, scope: !5080)
!5083 = !DILocation(line: 834, column: 104, scope: !5080)
!5084 = !DILocation(line: 834, column: 104, scope: !5085)
!5085 = !DILexicalBlockFile(scope: !5065, file: !801, discriminator: 5)
!5086 = !DILocation(line: 834, column: 104, scope: !5087)
!5087 = !DILexicalBlockFile(scope: !5065, file: !801, discriminator: 6)
!5088 = !DILocation(line: 834, column: 102, scope: !5087)
!5089 = !DILocation(line: 834, column: 162, scope: !5087)
!5090 = !DILocation(line: 834, column: 170, scope: !5087)
!5091 = !DILocation(line: 834, column: 171, scope: !5087)
!5092 = !DILocation(line: 834, column: 168, scope: !5087)
!5093 = !DILocation(line: 834, column: 175, scope: !5087)
!5094 = !DILocation(line: 834, column: 179, scope: !5087)
!5095 = !DILocation(line: 834, column: 166, scope: !5087)
!5096 = !DILocation(line: 834, column: 181, scope: !5087)
!5097 = !DILocation(line: 834, column: 155, scope: !5087)
!5098 = !DILocation(line: 834, column: 150, scope: !5087)
!5099 = !DILocation(line: 834, column: 153, scope: !5087)
!5100 = !DILocation(line: 834, column: 193, scope: !5101)
!5101 = !DILexicalBlockFile(scope: !5053, file: !801, discriminator: 7)
!5102 = !DILocation(line: 835, column: 13, scope: !4970)
!5103 = !DILocation(line: 832, column: 34, scope: !5104)
!5104 = !DILexicalBlockFile(scope: !4965, file: !801, discriminator: 2)
!5105 = !DILocation(line: 832, column: 13, scope: !5104)
!5106 = distinct !{!5106, !5107}
!5107 = !DILocation(line: 832, column: 13, scope: !4961)
!5108 = !DILocation(line: 838, column: 15, scope: !4737)
!5109 = !DILocation(line: 838, column: 24, scope: !4737)
!5110 = !DILocation(line: 838, column: 25, scope: !4737)
!5111 = !DILocation(line: 838, column: 21, scope: !4737)
!5112 = !DILocation(line: 838, column: 14, scope: !4737)
!5113 = !DILocation(line: 838, column: 32, scope: !4737)
!5114 = !DILocation(line: 838, column: 30, scope: !4737)
!5115 = !DILocation(line: 838, column: 12, scope: !4737)
!5116 = !DILocation(line: 839, column: 15, scope: !4737)
!5117 = !DILocation(line: 839, column: 21, scope: !4737)
!5118 = !DILocation(line: 839, column: 22, scope: !4737)
!5119 = !DILocation(line: 839, column: 28, scope: !4737)
!5120 = !DILocation(line: 839, column: 26, scope: !4737)
!5121 = !DILocation(line: 839, column: 18, scope: !4737)
!5122 = !DILocation(line: 839, column: 13, scope: !4737)
!5123 = !DILocation(line: 840, column: 15, scope: !4737)
!5124 = !DILocation(line: 840, column: 21, scope: !4737)
!5125 = !DILocation(line: 840, column: 22, scope: !4737)
!5126 = !DILocation(line: 840, column: 28, scope: !4737)
!5127 = !DILocation(line: 840, column: 26, scope: !4737)
!5128 = !DILocation(line: 840, column: 18, scope: !4737)
!5129 = !DILocation(line: 840, column: 13, scope: !4737)
!5130 = !DILocation(line: 841, column: 15, scope: !4737)
!5131 = !DILocation(line: 841, column: 21, scope: !4737)
!5132 = !DILocation(line: 841, column: 22, scope: !4737)
!5133 = !DILocation(line: 841, column: 28, scope: !4737)
!5134 = !DILocation(line: 841, column: 26, scope: !4737)
!5135 = !DILocation(line: 841, column: 18, scope: !4737)
!5136 = !DILocation(line: 841, column: 13, scope: !4737)
!5137 = !DILocation(line: 842, column: 13, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !4737, file: !801, line: 842, column: 13)
!5139 = !DILocation(line: 842, column: 17, scope: !5138)
!5140 = !DILocation(line: 842, column: 13, scope: !4737)
!5141 = !DILocation(line: 843, column: 20, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5143, file: !801, line: 843, column: 13)
!5143 = distinct !DILexicalBlock(scope: !5138, file: !801, line: 842, column: 40)
!5144 = !DILocation(line: 843, column: 18, scope: !5142)
!5145 = !DILocation(line: 843, column: 25, scope: !5146)
!5146 = !DILexicalBlockFile(scope: !5147, file: !801, discriminator: 1)
!5147 = distinct !DILexicalBlock(scope: !5142, file: !801, line: 843, column: 13)
!5148 = !DILocation(line: 843, column: 29, scope: !5146)
!5149 = !DILocation(line: 843, column: 27, scope: !5146)
!5150 = !DILocation(line: 843, column: 13, scope: !5146)
!5151 = !DILocation(line: 844, column: 17, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !5147, file: !801, line: 843, column: 40)
!5153 = distinct !{!5153, !5151}
!5154 = !DILocation(line: 844, column: 28, scope: !5155)
!5155 = !DILexicalBlockFile(scope: !5156, file: !801, discriminator: 1)
!5156 = distinct !DILexicalBlock(scope: !5157, file: !801, line: 844, column: 26)
!5157 = distinct !DILexicalBlock(scope: !5152, file: !801, line: 844, column: 20)
!5158 = !DILocation(line: 844, column: 26, scope: !5155)
!5159 = !DILocation(line: 844, column: 34, scope: !5155)
!5160 = !DILocation(line: 844, column: 31, scope: !5155)
!5161 = !DILocation(line: 844, column: 44, scope: !5162)
!5162 = !DILexicalBlockFile(scope: !5163, file: !801, discriminator: 2)
!5163 = distinct !DILexicalBlock(scope: !5156, file: !801, line: 844, column: 38)
!5164 = !DILocation(line: 844, column: 47, scope: !5162)
!5165 = !DILocation(line: 844, column: 57, scope: !5162)
!5166 = !DILocation(line: 844, column: 60, scope: !5162)
!5167 = !DILocation(line: 844, column: 71, scope: !5162)
!5168 = !DILocation(line: 844, column: 74, scope: !5162)
!5169 = !DILocation(line: 844, column: 81, scope: !5162)
!5170 = !DILocation(line: 844, column: 99, scope: !5171)
!5171 = !DILexicalBlockFile(scope: !5172, file: !801, discriminator: 3)
!5172 = distinct !DILexicalBlock(scope: !5156, file: !801, line: 844, column: 88)
!5173 = !DILocation(line: 844, column: 97, scope: !5171)
!5174 = !DILocation(line: 844, column: 104, scope: !5171)
!5175 = !DILocation(line: 844, column: 102, scope: !5171)
!5176 = !DILocation(line: 844, column: 116, scope: !5171)
!5177 = !DILocation(line: 844, column: 110, scope: !5171)
!5178 = !DILocation(line: 844, column: 108, scope: !5171)
!5179 = !DILocation(line: 844, column: 94, scope: !5171)
!5180 = !DILocation(line: 844, column: 127, scope: !5171)
!5181 = !DILocation(line: 844, column: 133, scope: !5171)
!5182 = !DILocation(line: 844, column: 131, scope: !5171)
!5183 = !DILocation(line: 844, column: 126, scope: !5171)
!5184 = !DILocation(line: 844, column: 143, scope: !5185)
!5185 = !DILexicalBlockFile(scope: !5172, file: !801, discriminator: 4)
!5186 = !DILocation(line: 844, column: 149, scope: !5185)
!5187 = !DILocation(line: 844, column: 147, scope: !5185)
!5188 = !DILocation(line: 844, column: 126, scope: !5185)
!5189 = !DILocation(line: 844, column: 126, scope: !5190)
!5190 = !DILexicalBlockFile(scope: !5172, file: !801, discriminator: 5)
!5191 = !DILocation(line: 844, column: 126, scope: !5192)
!5192 = !DILexicalBlockFile(scope: !5172, file: !801, discriminator: 6)
!5193 = !DILocation(line: 844, column: 124, scope: !5192)
!5194 = !DILocation(line: 844, column: 184, scope: !5192)
!5195 = !DILocation(line: 844, column: 192, scope: !5192)
!5196 = !DILocation(line: 844, column: 190, scope: !5192)
!5197 = !DILocation(line: 844, column: 195, scope: !5192)
!5198 = !DILocation(line: 844, column: 199, scope: !5192)
!5199 = !DILocation(line: 844, column: 188, scope: !5192)
!5200 = !DILocation(line: 844, column: 201, scope: !5192)
!5201 = !DILocation(line: 844, column: 177, scope: !5192)
!5202 = !DILocation(line: 844, column: 172, scope: !5192)
!5203 = !DILocation(line: 844, column: 175, scope: !5192)
!5204 = !DILocation(line: 844, column: 227, scope: !5192)
!5205 = !DILocation(line: 844, column: 235, scope: !5192)
!5206 = !DILocation(line: 844, column: 233, scope: !5192)
!5207 = !DILocation(line: 844, column: 238, scope: !5192)
!5208 = !DILocation(line: 844, column: 242, scope: !5192)
!5209 = !DILocation(line: 844, column: 231, scope: !5192)
!5210 = !DILocation(line: 844, column: 244, scope: !5192)
!5211 = !DILocation(line: 844, column: 220, scope: !5212)
!5212 = !DILexicalBlockFile(scope: !5192, file: !801, discriminator: 8)
!5213 = !DILocation(line: 844, column: 220, scope: !5192)
!5214 = !DILocation(line: 844, column: 215, scope: !5192)
!5215 = !DILocation(line: 844, column: 218, scope: !5192)
!5216 = !DILocation(line: 844, column: 271, scope: !5192)
!5217 = !DILocation(line: 844, column: 279, scope: !5192)
!5218 = !DILocation(line: 844, column: 277, scope: !5192)
!5219 = !DILocation(line: 844, column: 282, scope: !5192)
!5220 = !DILocation(line: 844, column: 286, scope: !5192)
!5221 = !DILocation(line: 844, column: 275, scope: !5192)
!5222 = !DILocation(line: 844, column: 288, scope: !5192)
!5223 = !DILocation(line: 844, column: 264, scope: !5224)
!5224 = !DILexicalBlockFile(scope: !5192, file: !801, discriminator: 9)
!5225 = !DILocation(line: 844, column: 264, scope: !5192)
!5226 = !DILocation(line: 844, column: 259, scope: !5192)
!5227 = !DILocation(line: 844, column: 262, scope: !5192)
!5228 = !DILocation(line: 844, column: 301, scope: !5229)
!5229 = !DILexicalBlockFile(scope: !5157, file: !801, discriminator: 7)
!5230 = !DILocation(line: 845, column: 17, scope: !5152)
!5231 = distinct !{!5231, !5230}
!5232 = !DILocation(line: 845, column: 28, scope: !5233)
!5233 = !DILexicalBlockFile(scope: !5234, file: !801, discriminator: 1)
!5234 = distinct !DILexicalBlock(scope: !5235, file: !801, line: 845, column: 26)
!5235 = distinct !DILexicalBlock(scope: !5152, file: !801, line: 845, column: 20)
!5236 = !DILocation(line: 845, column: 29, scope: !5233)
!5237 = !DILocation(line: 845, column: 26, scope: !5233)
!5238 = !DILocation(line: 845, column: 36, scope: !5233)
!5239 = !DILocation(line: 845, column: 33, scope: !5233)
!5240 = !DILocation(line: 845, column: 46, scope: !5241)
!5241 = !DILexicalBlockFile(scope: !5242, file: !801, discriminator: 2)
!5242 = distinct !DILexicalBlock(scope: !5234, file: !801, line: 845, column: 40)
!5243 = !DILocation(line: 845, column: 49, scope: !5241)
!5244 = !DILocation(line: 845, column: 59, scope: !5241)
!5245 = !DILocation(line: 845, column: 62, scope: !5241)
!5246 = !DILocation(line: 845, column: 73, scope: !5241)
!5247 = !DILocation(line: 845, column: 76, scope: !5241)
!5248 = !DILocation(line: 845, column: 83, scope: !5241)
!5249 = !DILocation(line: 845, column: 101, scope: !5250)
!5250 = !DILexicalBlockFile(scope: !5251, file: !801, discriminator: 3)
!5251 = distinct !DILexicalBlock(scope: !5234, file: !801, line: 845, column: 90)
!5252 = !DILocation(line: 845, column: 102, scope: !5250)
!5253 = !DILocation(line: 845, column: 99, scope: !5250)
!5254 = !DILocation(line: 845, column: 108, scope: !5250)
!5255 = !DILocation(line: 845, column: 106, scope: !5250)
!5256 = !DILocation(line: 845, column: 120, scope: !5250)
!5257 = !DILocation(line: 845, column: 121, scope: !5250)
!5258 = !DILocation(line: 845, column: 114, scope: !5250)
!5259 = !DILocation(line: 845, column: 112, scope: !5250)
!5260 = !DILocation(line: 845, column: 96, scope: !5250)
!5261 = !DILocation(line: 845, column: 133, scope: !5250)
!5262 = !DILocation(line: 845, column: 139, scope: !5250)
!5263 = !DILocation(line: 845, column: 137, scope: !5250)
!5264 = !DILocation(line: 845, column: 132, scope: !5250)
!5265 = !DILocation(line: 845, column: 149, scope: !5266)
!5266 = !DILexicalBlockFile(scope: !5251, file: !801, discriminator: 4)
!5267 = !DILocation(line: 845, column: 155, scope: !5266)
!5268 = !DILocation(line: 845, column: 153, scope: !5266)
!5269 = !DILocation(line: 845, column: 132, scope: !5266)
!5270 = !DILocation(line: 845, column: 132, scope: !5271)
!5271 = !DILexicalBlockFile(scope: !5251, file: !801, discriminator: 5)
!5272 = !DILocation(line: 845, column: 132, scope: !5273)
!5273 = !DILexicalBlockFile(scope: !5251, file: !801, discriminator: 6)
!5274 = !DILocation(line: 845, column: 130, scope: !5273)
!5275 = !DILocation(line: 845, column: 190, scope: !5273)
!5276 = !DILocation(line: 845, column: 198, scope: !5273)
!5277 = !DILocation(line: 845, column: 199, scope: !5273)
!5278 = !DILocation(line: 845, column: 196, scope: !5273)
!5279 = !DILocation(line: 845, column: 203, scope: !5273)
!5280 = !DILocation(line: 845, column: 207, scope: !5273)
!5281 = !DILocation(line: 845, column: 194, scope: !5273)
!5282 = !DILocation(line: 845, column: 209, scope: !5273)
!5283 = !DILocation(line: 845, column: 183, scope: !5273)
!5284 = !DILocation(line: 845, column: 178, scope: !5273)
!5285 = !DILocation(line: 845, column: 181, scope: !5273)
!5286 = !DILocation(line: 845, column: 235, scope: !5273)
!5287 = !DILocation(line: 845, column: 243, scope: !5273)
!5288 = !DILocation(line: 845, column: 244, scope: !5273)
!5289 = !DILocation(line: 845, column: 241, scope: !5273)
!5290 = !DILocation(line: 845, column: 248, scope: !5273)
!5291 = !DILocation(line: 845, column: 252, scope: !5273)
!5292 = !DILocation(line: 845, column: 239, scope: !5273)
!5293 = !DILocation(line: 845, column: 254, scope: !5273)
!5294 = !DILocation(line: 845, column: 228, scope: !5295)
!5295 = !DILexicalBlockFile(scope: !5273, file: !801, discriminator: 8)
!5296 = !DILocation(line: 845, column: 228, scope: !5273)
!5297 = !DILocation(line: 845, column: 223, scope: !5273)
!5298 = !DILocation(line: 845, column: 226, scope: !5273)
!5299 = !DILocation(line: 845, column: 281, scope: !5273)
!5300 = !DILocation(line: 845, column: 289, scope: !5273)
!5301 = !DILocation(line: 845, column: 290, scope: !5273)
!5302 = !DILocation(line: 845, column: 287, scope: !5273)
!5303 = !DILocation(line: 845, column: 294, scope: !5273)
!5304 = !DILocation(line: 845, column: 298, scope: !5273)
!5305 = !DILocation(line: 845, column: 285, scope: !5273)
!5306 = !DILocation(line: 845, column: 300, scope: !5273)
!5307 = !DILocation(line: 845, column: 274, scope: !5308)
!5308 = !DILexicalBlockFile(scope: !5273, file: !801, discriminator: 9)
!5309 = !DILocation(line: 845, column: 274, scope: !5273)
!5310 = !DILocation(line: 845, column: 269, scope: !5273)
!5311 = !DILocation(line: 845, column: 272, scope: !5273)
!5312 = !DILocation(line: 845, column: 313, scope: !5313)
!5313 = !DILexicalBlockFile(scope: !5235, file: !801, discriminator: 7)
!5314 = !DILocation(line: 846, column: 13, scope: !5152)
!5315 = !DILocation(line: 843, column: 34, scope: !5316)
!5316 = !DILexicalBlockFile(scope: !5147, file: !801, discriminator: 2)
!5317 = !DILocation(line: 843, column: 13, scope: !5316)
!5318 = distinct !{!5318, !5319}
!5319 = !DILocation(line: 843, column: 13, scope: !5143)
!5320 = !DILocation(line: 847, column: 9, scope: !5143)
!5321 = !DILocation(line: 847, column: 20, scope: !5322)
!5322 = !DILexicalBlockFile(scope: !5323, file: !801, discriminator: 1)
!5323 = distinct !DILexicalBlock(scope: !5138, file: !801, line: 847, column: 20)
!5324 = !DILocation(line: 847, column: 24, scope: !5322)
!5325 = !DILocation(line: 848, column: 20, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5327, file: !801, line: 848, column: 13)
!5327 = distinct !DILexicalBlock(scope: !5323, file: !801, line: 847, column: 47)
!5328 = !DILocation(line: 848, column: 18, scope: !5326)
!5329 = !DILocation(line: 848, column: 25, scope: !5330)
!5330 = !DILexicalBlockFile(scope: !5331, file: !801, discriminator: 1)
!5331 = distinct !DILexicalBlock(scope: !5326, file: !801, line: 848, column: 13)
!5332 = !DILocation(line: 848, column: 29, scope: !5330)
!5333 = !DILocation(line: 848, column: 27, scope: !5330)
!5334 = !DILocation(line: 848, column: 13, scope: !5330)
!5335 = !DILocation(line: 849, column: 17, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !5331, file: !801, line: 848, column: 40)
!5337 = distinct !{!5337, !5335}
!5338 = !DILocation(line: 849, column: 28, scope: !5339)
!5339 = !DILexicalBlockFile(scope: !5340, file: !801, discriminator: 1)
!5340 = distinct !DILexicalBlock(scope: !5341, file: !801, line: 849, column: 26)
!5341 = distinct !DILexicalBlock(scope: !5336, file: !801, line: 849, column: 20)
!5342 = !DILocation(line: 849, column: 26, scope: !5339)
!5343 = !DILocation(line: 849, column: 34, scope: !5339)
!5344 = !DILocation(line: 849, column: 31, scope: !5339)
!5345 = !DILocation(line: 849, column: 44, scope: !5346)
!5346 = !DILexicalBlockFile(scope: !5347, file: !801, discriminator: 2)
!5347 = distinct !DILexicalBlock(scope: !5340, file: !801, line: 849, column: 38)
!5348 = !DILocation(line: 849, column: 47, scope: !5346)
!5349 = !DILocation(line: 849, column: 57, scope: !5346)
!5350 = !DILocation(line: 849, column: 60, scope: !5346)
!5351 = !DILocation(line: 849, column: 71, scope: !5346)
!5352 = !DILocation(line: 849, column: 74, scope: !5346)
!5353 = !DILocation(line: 849, column: 81, scope: !5346)
!5354 = !DILocation(line: 849, column: 99, scope: !5355)
!5355 = !DILexicalBlockFile(scope: !5356, file: !801, discriminator: 3)
!5356 = distinct !DILexicalBlock(scope: !5340, file: !801, line: 849, column: 88)
!5357 = !DILocation(line: 849, column: 97, scope: !5355)
!5358 = !DILocation(line: 849, column: 104, scope: !5355)
!5359 = !DILocation(line: 849, column: 102, scope: !5355)
!5360 = !DILocation(line: 849, column: 116, scope: !5355)
!5361 = !DILocation(line: 849, column: 110, scope: !5355)
!5362 = !DILocation(line: 849, column: 108, scope: !5355)
!5363 = !DILocation(line: 849, column: 94, scope: !5355)
!5364 = !DILocation(line: 849, column: 127, scope: !5355)
!5365 = !DILocation(line: 849, column: 133, scope: !5355)
!5366 = !DILocation(line: 849, column: 131, scope: !5355)
!5367 = !DILocation(line: 849, column: 126, scope: !5355)
!5368 = !DILocation(line: 849, column: 143, scope: !5369)
!5369 = !DILexicalBlockFile(scope: !5356, file: !801, discriminator: 4)
!5370 = !DILocation(line: 849, column: 149, scope: !5369)
!5371 = !DILocation(line: 849, column: 147, scope: !5369)
!5372 = !DILocation(line: 849, column: 126, scope: !5369)
!5373 = !DILocation(line: 849, column: 126, scope: !5374)
!5374 = !DILexicalBlockFile(scope: !5356, file: !801, discriminator: 5)
!5375 = !DILocation(line: 849, column: 126, scope: !5376)
!5376 = !DILexicalBlockFile(scope: !5356, file: !801, discriminator: 6)
!5377 = !DILocation(line: 849, column: 124, scope: !5376)
!5378 = !DILocation(line: 849, column: 184, scope: !5376)
!5379 = !DILocation(line: 849, column: 192, scope: !5376)
!5380 = !DILocation(line: 849, column: 190, scope: !5376)
!5381 = !DILocation(line: 849, column: 195, scope: !5376)
!5382 = !DILocation(line: 849, column: 199, scope: !5376)
!5383 = !DILocation(line: 849, column: 188, scope: !5376)
!5384 = !DILocation(line: 849, column: 201, scope: !5376)
!5385 = !DILocation(line: 849, column: 177, scope: !5376)
!5386 = !DILocation(line: 849, column: 172, scope: !5376)
!5387 = !DILocation(line: 849, column: 175, scope: !5376)
!5388 = !DILocation(line: 849, column: 227, scope: !5376)
!5389 = !DILocation(line: 849, column: 235, scope: !5376)
!5390 = !DILocation(line: 849, column: 233, scope: !5376)
!5391 = !DILocation(line: 849, column: 238, scope: !5376)
!5392 = !DILocation(line: 849, column: 242, scope: !5376)
!5393 = !DILocation(line: 849, column: 231, scope: !5376)
!5394 = !DILocation(line: 849, column: 244, scope: !5376)
!5395 = !DILocation(line: 849, column: 220, scope: !5396)
!5396 = !DILexicalBlockFile(scope: !5376, file: !801, discriminator: 8)
!5397 = !DILocation(line: 849, column: 220, scope: !5376)
!5398 = !DILocation(line: 849, column: 215, scope: !5376)
!5399 = !DILocation(line: 849, column: 218, scope: !5376)
!5400 = !DILocation(line: 849, column: 271, scope: !5376)
!5401 = !DILocation(line: 849, column: 279, scope: !5376)
!5402 = !DILocation(line: 849, column: 277, scope: !5376)
!5403 = !DILocation(line: 849, column: 282, scope: !5376)
!5404 = !DILocation(line: 849, column: 286, scope: !5376)
!5405 = !DILocation(line: 849, column: 275, scope: !5376)
!5406 = !DILocation(line: 849, column: 288, scope: !5376)
!5407 = !DILocation(line: 849, column: 264, scope: !5408)
!5408 = !DILexicalBlockFile(scope: !5376, file: !801, discriminator: 9)
!5409 = !DILocation(line: 849, column: 264, scope: !5376)
!5410 = !DILocation(line: 849, column: 259, scope: !5376)
!5411 = !DILocation(line: 849, column: 262, scope: !5376)
!5412 = !DILocation(line: 849, column: 301, scope: !5413)
!5413 = !DILexicalBlockFile(scope: !5341, file: !801, discriminator: 7)
!5414 = !DILocation(line: 850, column: 17, scope: !5336)
!5415 = distinct !{!5415, !5414}
!5416 = !DILocation(line: 850, column: 28, scope: !5417)
!5417 = !DILexicalBlockFile(scope: !5418, file: !801, discriminator: 1)
!5418 = distinct !DILexicalBlock(scope: !5419, file: !801, line: 850, column: 26)
!5419 = distinct !DILexicalBlock(scope: !5336, file: !801, line: 850, column: 20)
!5420 = !DILocation(line: 850, column: 29, scope: !5417)
!5421 = !DILocation(line: 850, column: 26, scope: !5417)
!5422 = !DILocation(line: 850, column: 36, scope: !5417)
!5423 = !DILocation(line: 850, column: 33, scope: !5417)
!5424 = !DILocation(line: 850, column: 46, scope: !5425)
!5425 = !DILexicalBlockFile(scope: !5426, file: !801, discriminator: 2)
!5426 = distinct !DILexicalBlock(scope: !5418, file: !801, line: 850, column: 40)
!5427 = !DILocation(line: 850, column: 49, scope: !5425)
!5428 = !DILocation(line: 850, column: 55, scope: !5425)
!5429 = !DILocation(line: 850, column: 73, scope: !5430)
!5430 = !DILexicalBlockFile(scope: !5431, file: !801, discriminator: 3)
!5431 = distinct !DILexicalBlock(scope: !5418, file: !801, line: 850, column: 62)
!5432 = !DILocation(line: 850, column: 74, scope: !5430)
!5433 = !DILocation(line: 850, column: 71, scope: !5430)
!5434 = !DILocation(line: 850, column: 80, scope: !5430)
!5435 = !DILocation(line: 850, column: 78, scope: !5430)
!5436 = !DILocation(line: 850, column: 92, scope: !5430)
!5437 = !DILocation(line: 850, column: 93, scope: !5430)
!5438 = !DILocation(line: 850, column: 86, scope: !5430)
!5439 = !DILocation(line: 850, column: 84, scope: !5430)
!5440 = !DILocation(line: 850, column: 68, scope: !5430)
!5441 = !DILocation(line: 850, column: 105, scope: !5430)
!5442 = !DILocation(line: 850, column: 111, scope: !5430)
!5443 = !DILocation(line: 850, column: 109, scope: !5430)
!5444 = !DILocation(line: 850, column: 104, scope: !5430)
!5445 = !DILocation(line: 850, column: 121, scope: !5446)
!5446 = !DILexicalBlockFile(scope: !5431, file: !801, discriminator: 4)
!5447 = !DILocation(line: 850, column: 127, scope: !5446)
!5448 = !DILocation(line: 850, column: 125, scope: !5446)
!5449 = !DILocation(line: 850, column: 104, scope: !5446)
!5450 = !DILocation(line: 850, column: 104, scope: !5451)
!5451 = !DILexicalBlockFile(scope: !5431, file: !801, discriminator: 5)
!5452 = !DILocation(line: 850, column: 104, scope: !5453)
!5453 = !DILexicalBlockFile(scope: !5431, file: !801, discriminator: 6)
!5454 = !DILocation(line: 850, column: 102, scope: !5453)
!5455 = !DILocation(line: 850, column: 162, scope: !5453)
!5456 = !DILocation(line: 850, column: 170, scope: !5453)
!5457 = !DILocation(line: 850, column: 171, scope: !5453)
!5458 = !DILocation(line: 850, column: 168, scope: !5453)
!5459 = !DILocation(line: 850, column: 175, scope: !5453)
!5460 = !DILocation(line: 850, column: 179, scope: !5453)
!5461 = !DILocation(line: 850, column: 166, scope: !5453)
!5462 = !DILocation(line: 850, column: 181, scope: !5453)
!5463 = !DILocation(line: 850, column: 155, scope: !5453)
!5464 = !DILocation(line: 850, column: 150, scope: !5453)
!5465 = !DILocation(line: 850, column: 153, scope: !5453)
!5466 = !DILocation(line: 850, column: 193, scope: !5467)
!5467 = !DILexicalBlockFile(scope: !5419, file: !801, discriminator: 7)
!5468 = !DILocation(line: 851, column: 13, scope: !5336)
!5469 = !DILocation(line: 848, column: 34, scope: !5470)
!5470 = !DILexicalBlockFile(scope: !5331, file: !801, discriminator: 2)
!5471 = !DILocation(line: 848, column: 13, scope: !5470)
!5472 = distinct !{!5472, !5473}
!5473 = !DILocation(line: 848, column: 13, scope: !5327)
!5474 = !DILocation(line: 852, column: 9, scope: !5327)
!5475 = !DILocation(line: 853, column: 20, scope: !5476)
!5476 = distinct !DILexicalBlock(scope: !5477, file: !801, line: 853, column: 13)
!5477 = distinct !DILexicalBlock(scope: !5323, file: !801, line: 852, column: 16)
!5478 = !DILocation(line: 853, column: 18, scope: !5476)
!5479 = !DILocation(line: 853, column: 25, scope: !5480)
!5480 = !DILexicalBlockFile(scope: !5481, file: !801, discriminator: 1)
!5481 = distinct !DILexicalBlock(scope: !5476, file: !801, line: 853, column: 13)
!5482 = !DILocation(line: 853, column: 29, scope: !5480)
!5483 = !DILocation(line: 853, column: 27, scope: !5480)
!5484 = !DILocation(line: 853, column: 13, scope: !5480)
!5485 = !DILocation(line: 854, column: 17, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5481, file: !801, line: 853, column: 40)
!5487 = distinct !{!5487, !5485}
!5488 = !DILocation(line: 854, column: 28, scope: !5489)
!5489 = !DILexicalBlockFile(scope: !5490, file: !801, discriminator: 1)
!5490 = distinct !DILexicalBlock(scope: !5491, file: !801, line: 854, column: 26)
!5491 = distinct !DILexicalBlock(scope: !5486, file: !801, line: 854, column: 20)
!5492 = !DILocation(line: 854, column: 26, scope: !5489)
!5493 = !DILocation(line: 854, column: 34, scope: !5489)
!5494 = !DILocation(line: 854, column: 31, scope: !5489)
!5495 = !DILocation(line: 854, column: 44, scope: !5496)
!5496 = !DILexicalBlockFile(scope: !5497, file: !801, discriminator: 2)
!5497 = distinct !DILexicalBlock(scope: !5490, file: !801, line: 854, column: 38)
!5498 = !DILocation(line: 854, column: 47, scope: !5496)
!5499 = !DILocation(line: 854, column: 53, scope: !5496)
!5500 = !DILocation(line: 854, column: 71, scope: !5501)
!5501 = !DILexicalBlockFile(scope: !5502, file: !801, discriminator: 3)
!5502 = distinct !DILexicalBlock(scope: !5490, file: !801, line: 854, column: 60)
!5503 = !DILocation(line: 854, column: 69, scope: !5501)
!5504 = !DILocation(line: 854, column: 76, scope: !5501)
!5505 = !DILocation(line: 854, column: 74, scope: !5501)
!5506 = !DILocation(line: 854, column: 88, scope: !5501)
!5507 = !DILocation(line: 854, column: 82, scope: !5501)
!5508 = !DILocation(line: 854, column: 80, scope: !5501)
!5509 = !DILocation(line: 854, column: 66, scope: !5501)
!5510 = !DILocation(line: 854, column: 99, scope: !5501)
!5511 = !DILocation(line: 854, column: 105, scope: !5501)
!5512 = !DILocation(line: 854, column: 103, scope: !5501)
!5513 = !DILocation(line: 854, column: 98, scope: !5501)
!5514 = !DILocation(line: 854, column: 115, scope: !5515)
!5515 = !DILexicalBlockFile(scope: !5502, file: !801, discriminator: 4)
!5516 = !DILocation(line: 854, column: 121, scope: !5515)
!5517 = !DILocation(line: 854, column: 119, scope: !5515)
!5518 = !DILocation(line: 854, column: 98, scope: !5515)
!5519 = !DILocation(line: 854, column: 98, scope: !5520)
!5520 = !DILexicalBlockFile(scope: !5502, file: !801, discriminator: 5)
!5521 = !DILocation(line: 854, column: 98, scope: !5522)
!5522 = !DILexicalBlockFile(scope: !5502, file: !801, discriminator: 6)
!5523 = !DILocation(line: 854, column: 96, scope: !5522)
!5524 = !DILocation(line: 854, column: 156, scope: !5522)
!5525 = !DILocation(line: 854, column: 164, scope: !5522)
!5526 = !DILocation(line: 854, column: 162, scope: !5522)
!5527 = !DILocation(line: 854, column: 167, scope: !5522)
!5528 = !DILocation(line: 854, column: 171, scope: !5522)
!5529 = !DILocation(line: 854, column: 160, scope: !5522)
!5530 = !DILocation(line: 854, column: 173, scope: !5522)
!5531 = !DILocation(line: 854, column: 149, scope: !5522)
!5532 = !DILocation(line: 854, column: 144, scope: !5522)
!5533 = !DILocation(line: 854, column: 147, scope: !5522)
!5534 = !DILocation(line: 854, column: 185, scope: !5535)
!5535 = !DILexicalBlockFile(scope: !5491, file: !801, discriminator: 7)
!5536 = !DILocation(line: 855, column: 17, scope: !5486)
!5537 = distinct !{!5537, !5536}
!5538 = !DILocation(line: 855, column: 28, scope: !5539)
!5539 = !DILexicalBlockFile(scope: !5540, file: !801, discriminator: 1)
!5540 = distinct !DILexicalBlock(scope: !5541, file: !801, line: 855, column: 26)
!5541 = distinct !DILexicalBlock(scope: !5486, file: !801, line: 855, column: 20)
!5542 = !DILocation(line: 855, column: 29, scope: !5539)
!5543 = !DILocation(line: 855, column: 26, scope: !5539)
!5544 = !DILocation(line: 855, column: 36, scope: !5539)
!5545 = !DILocation(line: 855, column: 33, scope: !5539)
!5546 = !DILocation(line: 855, column: 46, scope: !5547)
!5547 = !DILexicalBlockFile(scope: !5548, file: !801, discriminator: 2)
!5548 = distinct !DILexicalBlock(scope: !5540, file: !801, line: 855, column: 40)
!5549 = !DILocation(line: 855, column: 49, scope: !5547)
!5550 = !DILocation(line: 855, column: 55, scope: !5547)
!5551 = !DILocation(line: 855, column: 73, scope: !5552)
!5552 = !DILexicalBlockFile(scope: !5553, file: !801, discriminator: 3)
!5553 = distinct !DILexicalBlock(scope: !5540, file: !801, line: 855, column: 62)
!5554 = !DILocation(line: 855, column: 74, scope: !5552)
!5555 = !DILocation(line: 855, column: 71, scope: !5552)
!5556 = !DILocation(line: 855, column: 80, scope: !5552)
!5557 = !DILocation(line: 855, column: 78, scope: !5552)
!5558 = !DILocation(line: 855, column: 92, scope: !5552)
!5559 = !DILocation(line: 855, column: 93, scope: !5552)
!5560 = !DILocation(line: 855, column: 86, scope: !5552)
!5561 = !DILocation(line: 855, column: 84, scope: !5552)
!5562 = !DILocation(line: 855, column: 68, scope: !5552)
!5563 = !DILocation(line: 855, column: 105, scope: !5552)
!5564 = !DILocation(line: 855, column: 111, scope: !5552)
!5565 = !DILocation(line: 855, column: 109, scope: !5552)
!5566 = !DILocation(line: 855, column: 104, scope: !5552)
!5567 = !DILocation(line: 855, column: 121, scope: !5568)
!5568 = !DILexicalBlockFile(scope: !5553, file: !801, discriminator: 4)
!5569 = !DILocation(line: 855, column: 127, scope: !5568)
!5570 = !DILocation(line: 855, column: 125, scope: !5568)
!5571 = !DILocation(line: 855, column: 104, scope: !5568)
!5572 = !DILocation(line: 855, column: 104, scope: !5573)
!5573 = !DILexicalBlockFile(scope: !5553, file: !801, discriminator: 5)
!5574 = !DILocation(line: 855, column: 104, scope: !5575)
!5575 = !DILexicalBlockFile(scope: !5553, file: !801, discriminator: 6)
!5576 = !DILocation(line: 855, column: 102, scope: !5575)
!5577 = !DILocation(line: 855, column: 162, scope: !5575)
!5578 = !DILocation(line: 855, column: 170, scope: !5575)
!5579 = !DILocation(line: 855, column: 171, scope: !5575)
!5580 = !DILocation(line: 855, column: 168, scope: !5575)
!5581 = !DILocation(line: 855, column: 175, scope: !5575)
!5582 = !DILocation(line: 855, column: 179, scope: !5575)
!5583 = !DILocation(line: 855, column: 166, scope: !5575)
!5584 = !DILocation(line: 855, column: 181, scope: !5575)
!5585 = !DILocation(line: 855, column: 155, scope: !5575)
!5586 = !DILocation(line: 855, column: 150, scope: !5575)
!5587 = !DILocation(line: 855, column: 153, scope: !5575)
!5588 = !DILocation(line: 855, column: 193, scope: !5589)
!5589 = !DILexicalBlockFile(scope: !5541, file: !801, discriminator: 7)
!5590 = !DILocation(line: 856, column: 13, scope: !5486)
!5591 = !DILocation(line: 853, column: 34, scope: !5592)
!5592 = !DILexicalBlockFile(scope: !5481, file: !801, discriminator: 2)
!5593 = !DILocation(line: 853, column: 13, scope: !5592)
!5594 = distinct !{!5594, !5595}
!5595 = !DILocation(line: 853, column: 13, scope: !5477)
!5596 = !DILocation(line: 858, column: 5, scope: !4737)
!5597 = !DILocation(line: 820, column: 30, scope: !5598)
!5598 = !DILexicalBlockFile(scope: !4732, file: !801, discriminator: 2)
!5599 = !DILocation(line: 820, column: 5, scope: !5598)
!5600 = distinct !{!5600, !5601}
!5601 = !DILocation(line: 820, column: 5, scope: !4658)
!5602 = !DILocation(line: 859, column: 1, scope: !4658)
!5603 = distinct !DISubprogram(name: "draw_axis_yuv", scope: !801, file: !801, line: 963, type: !924, isLocal: true, isDefinition: true, scopeLine: 964, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!5604 = !DILocalVariable(name: "out", arg: 1, scope: !5603, file: !801, line: 963, type: !285)
!5605 = !DILocation(line: 963, column: 36, scope: !5603)
!5606 = !DILocalVariable(name: "axis", arg: 2, scope: !5603, file: !801, line: 963, type: !285)
!5607 = !DILocation(line: 963, column: 50, scope: !5603)
!5608 = !DILocalVariable(name: "c", arg: 3, scope: !5603, file: !801, line: 963, type: !920)
!5609 = !DILocation(line: 963, column: 74, scope: !5603)
!5610 = !DILocalVariable(name: "off", arg: 4, scope: !5603, file: !801, line: 963, type: !200)
!5611 = !DILocation(line: 963, column: 81, scope: !5603)
!5612 = !DILocalVariable(name: "fmt", scope: !5603, file: !801, line: 965, type: !200)
!5613 = !DILocation(line: 965, column: 9, scope: !5603)
!5614 = !DILocation(line: 965, column: 15, scope: !5603)
!5615 = !DILocation(line: 965, column: 20, scope: !5603)
!5616 = !DILocalVariable(name: "x", scope: !5603, file: !801, line: 965, type: !200)
!5617 = !DILocation(line: 965, column: 28, scope: !5603)
!5618 = !DILocalVariable(name: "y", scope: !5603, file: !801, line: 965, type: !200)
!5619 = !DILocation(line: 965, column: 31, scope: !5603)
!5620 = !DILocalVariable(name: "yh", scope: !5603, file: !801, line: 965, type: !200)
!5621 = !DILocation(line: 965, column: 34, scope: !5603)
!5622 = !DILocalVariable(name: "w", scope: !5603, file: !801, line: 965, type: !200)
!5623 = !DILocation(line: 965, column: 38, scope: !5603)
!5624 = !DILocation(line: 965, column: 42, scope: !5603)
!5625 = !DILocation(line: 965, column: 48, scope: !5603)
!5626 = !DILocalVariable(name: "h", scope: !5603, file: !801, line: 965, type: !200)
!5627 = !DILocation(line: 965, column: 55, scope: !5603)
!5628 = !DILocation(line: 965, column: 59, scope: !5603)
!5629 = !DILocation(line: 965, column: 65, scope: !5603)
!5630 = !DILocalVariable(name: "offh", scope: !5603, file: !801, line: 966, type: !200)
!5631 = !DILocation(line: 966, column: 9, scope: !5603)
!5632 = !DILocation(line: 966, column: 17, scope: !5603)
!5633 = !DILocation(line: 966, column: 21, scope: !5603)
!5634 = !DILocation(line: 966, column: 16, scope: !5603)
!5635 = !DILocation(line: 966, column: 46, scope: !5636)
!5636 = !DILexicalBlockFile(scope: !5603, file: !801, discriminator: 1)
!5637 = !DILocation(line: 966, column: 50, scope: !5636)
!5638 = !DILocation(line: 966, column: 16, scope: !5636)
!5639 = !DILocation(line: 966, column: 56, scope: !5640)
!5640 = !DILexicalBlockFile(scope: !5603, file: !801, discriminator: 2)
!5641 = !DILocation(line: 966, column: 16, scope: !5640)
!5642 = !DILocation(line: 966, column: 16, scope: !5643)
!5643 = !DILexicalBlockFile(scope: !5603, file: !801, discriminator: 3)
!5644 = !DILocation(line: 966, column: 9, scope: !5643)
!5645 = !DILocalVariable(name: "vy", scope: !5603, file: !801, line: 967, type: !291)
!5646 = !DILocation(line: 967, column: 14, scope: !5603)
!5647 = !DILocation(line: 967, column: 19, scope: !5603)
!5648 = !DILocation(line: 967, column: 24, scope: !5603)
!5649 = !DILocalVariable(name: "vu", scope: !5603, file: !801, line: 967, type: !291)
!5650 = !DILocation(line: 967, column: 34, scope: !5603)
!5651 = !DILocation(line: 967, column: 39, scope: !5603)
!5652 = !DILocation(line: 967, column: 44, scope: !5603)
!5653 = !DILocalVariable(name: "vv", scope: !5603, file: !801, line: 967, type: !291)
!5654 = !DILocation(line: 967, column: 54, scope: !5603)
!5655 = !DILocation(line: 967, column: 59, scope: !5603)
!5656 = !DILocation(line: 967, column: 64, scope: !5603)
!5657 = !DILocalVariable(name: "vay", scope: !5603, file: !801, line: 968, type: !291)
!5658 = !DILocation(line: 968, column: 14, scope: !5603)
!5659 = !DILocation(line: 968, column: 20, scope: !5603)
!5660 = !DILocation(line: 968, column: 26, scope: !5603)
!5661 = !DILocalVariable(name: "vau", scope: !5603, file: !801, line: 968, type: !291)
!5662 = !DILocation(line: 968, column: 36, scope: !5603)
!5663 = !DILocation(line: 968, column: 42, scope: !5603)
!5664 = !DILocation(line: 968, column: 48, scope: !5603)
!5665 = !DILocalVariable(name: "vav", scope: !5603, file: !801, line: 968, type: !291)
!5666 = !DILocation(line: 968, column: 58, scope: !5603)
!5667 = !DILocation(line: 968, column: 64, scope: !5603)
!5668 = !DILocation(line: 968, column: 70, scope: !5603)
!5669 = !DILocalVariable(name: "vaa", scope: !5603, file: !801, line: 968, type: !291)
!5670 = !DILocation(line: 968, column: 80, scope: !5603)
!5671 = !DILocation(line: 968, column: 86, scope: !5603)
!5672 = !DILocation(line: 968, column: 92, scope: !5603)
!5673 = !DILocalVariable(name: "lsy", scope: !5603, file: !801, line: 969, type: !200)
!5674 = !DILocation(line: 969, column: 9, scope: !5603)
!5675 = !DILocation(line: 969, column: 15, scope: !5603)
!5676 = !DILocation(line: 969, column: 20, scope: !5603)
!5677 = !DILocalVariable(name: "lsu", scope: !5603, file: !801, line: 969, type: !200)
!5678 = !DILocation(line: 969, column: 33, scope: !5603)
!5679 = !DILocation(line: 969, column: 39, scope: !5603)
!5680 = !DILocation(line: 969, column: 44, scope: !5603)
!5681 = !DILocalVariable(name: "lsv", scope: !5603, file: !801, line: 969, type: !200)
!5682 = !DILocation(line: 969, column: 57, scope: !5603)
!5683 = !DILocation(line: 969, column: 63, scope: !5603)
!5684 = !DILocation(line: 969, column: 68, scope: !5603)
!5685 = !DILocalVariable(name: "lsay", scope: !5603, file: !801, line: 970, type: !200)
!5686 = !DILocation(line: 970, column: 9, scope: !5603)
!5687 = !DILocation(line: 970, column: 16, scope: !5603)
!5688 = !DILocation(line: 970, column: 22, scope: !5603)
!5689 = !DILocalVariable(name: "lsau", scope: !5603, file: !801, line: 970, type: !200)
!5690 = !DILocation(line: 970, column: 35, scope: !5603)
!5691 = !DILocation(line: 970, column: 42, scope: !5603)
!5692 = !DILocation(line: 970, column: 48, scope: !5603)
!5693 = !DILocalVariable(name: "lsav", scope: !5603, file: !801, line: 970, type: !200)
!5694 = !DILocation(line: 970, column: 61, scope: !5603)
!5695 = !DILocation(line: 970, column: 68, scope: !5603)
!5696 = !DILocation(line: 970, column: 74, scope: !5603)
!5697 = !DILocalVariable(name: "lsaa", scope: !5603, file: !801, line: 970, type: !200)
!5698 = !DILocation(line: 970, column: 87, scope: !5603)
!5699 = !DILocation(line: 970, column: 94, scope: !5603)
!5700 = !DILocation(line: 970, column: 100, scope: !5603)
!5701 = !DILocalVariable(name: "lpy", scope: !5603, file: !801, line: 971, type: !291)
!5702 = !DILocation(line: 971, column: 14, scope: !5603)
!5703 = !DILocalVariable(name: "lpu", scope: !5603, file: !801, line: 971, type: !291)
!5704 = !DILocation(line: 971, column: 20, scope: !5603)
!5705 = !DILocalVariable(name: "lpv", scope: !5603, file: !801, line: 971, type: !291)
!5706 = !DILocation(line: 971, column: 26, scope: !5603)
!5707 = !DILocalVariable(name: "lpay", scope: !5603, file: !801, line: 971, type: !291)
!5708 = !DILocation(line: 971, column: 32, scope: !5603)
!5709 = !DILocalVariable(name: "lpau", scope: !5603, file: !801, line: 971, type: !291)
!5710 = !DILocation(line: 971, column: 39, scope: !5603)
!5711 = !DILocalVariable(name: "lpav", scope: !5603, file: !801, line: 971, type: !291)
!5712 = !DILocation(line: 971, column: 46, scope: !5603)
!5713 = !DILocalVariable(name: "lpaa", scope: !5603, file: !801, line: 971, type: !291)
!5714 = !DILocation(line: 971, column: 53, scope: !5603)
!5715 = !DILocation(line: 973, column: 12, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5603, file: !801, line: 973, column: 5)
!5717 = !DILocation(line: 973, column: 10, scope: !5716)
!5718 = !DILocation(line: 973, column: 17, scope: !5719)
!5719 = !DILexicalBlockFile(scope: !5720, file: !801, discriminator: 1)
!5720 = distinct !DILexicalBlock(scope: !5716, file: !801, line: 973, column: 5)
!5721 = !DILocation(line: 973, column: 21, scope: !5719)
!5722 = !DILocation(line: 973, column: 19, scope: !5719)
!5723 = !DILocation(line: 973, column: 5, scope: !5719)
!5724 = !DILocation(line: 974, column: 15, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5720, file: !801, line: 973, column: 32)
!5726 = !DILocation(line: 974, column: 19, scope: !5725)
!5727 = !DILocation(line: 974, column: 14, scope: !5725)
!5728 = !DILocation(line: 974, column: 44, scope: !5729)
!5729 = !DILexicalBlockFile(scope: !5725, file: !801, discriminator: 1)
!5730 = !DILocation(line: 974, column: 46, scope: !5729)
!5731 = !DILocation(line: 974, column: 14, scope: !5729)
!5732 = !DILocation(line: 974, column: 52, scope: !5733)
!5733 = !DILexicalBlockFile(scope: !5725, file: !801, discriminator: 2)
!5734 = !DILocation(line: 974, column: 14, scope: !5733)
!5735 = !DILocation(line: 974, column: 14, scope: !5736)
!5736 = !DILexicalBlockFile(scope: !5725, file: !801, discriminator: 3)
!5737 = !DILocation(line: 974, column: 12, scope: !5736)
!5738 = !DILocation(line: 975, column: 15, scope: !5725)
!5739 = !DILocation(line: 975, column: 21, scope: !5725)
!5740 = !DILocation(line: 975, column: 27, scope: !5725)
!5741 = !DILocation(line: 975, column: 25, scope: !5725)
!5742 = !DILocation(line: 975, column: 32, scope: !5725)
!5743 = !DILocation(line: 975, column: 30, scope: !5725)
!5744 = !DILocation(line: 975, column: 18, scope: !5725)
!5745 = !DILocation(line: 975, column: 13, scope: !5725)
!5746 = !DILocation(line: 976, column: 15, scope: !5725)
!5747 = !DILocation(line: 976, column: 21, scope: !5725)
!5748 = !DILocation(line: 976, column: 28, scope: !5725)
!5749 = !DILocation(line: 976, column: 26, scope: !5725)
!5750 = !DILocation(line: 976, column: 34, scope: !5725)
!5751 = !DILocation(line: 976, column: 32, scope: !5725)
!5752 = !DILocation(line: 976, column: 18, scope: !5725)
!5753 = !DILocation(line: 976, column: 13, scope: !5725)
!5754 = !DILocation(line: 977, column: 15, scope: !5725)
!5755 = !DILocation(line: 977, column: 21, scope: !5725)
!5756 = !DILocation(line: 977, column: 28, scope: !5725)
!5757 = !DILocation(line: 977, column: 26, scope: !5725)
!5758 = !DILocation(line: 977, column: 34, scope: !5725)
!5759 = !DILocation(line: 977, column: 32, scope: !5725)
!5760 = !DILocation(line: 977, column: 18, scope: !5725)
!5761 = !DILocation(line: 977, column: 13, scope: !5725)
!5762 = !DILocation(line: 978, column: 16, scope: !5725)
!5763 = !DILocation(line: 978, column: 22, scope: !5725)
!5764 = !DILocation(line: 978, column: 26, scope: !5725)
!5765 = !DILocation(line: 978, column: 24, scope: !5725)
!5766 = !DILocation(line: 978, column: 20, scope: !5725)
!5767 = !DILocation(line: 978, column: 14, scope: !5725)
!5768 = !DILocation(line: 979, column: 16, scope: !5725)
!5769 = !DILocation(line: 979, column: 22, scope: !5725)
!5770 = !DILocation(line: 979, column: 26, scope: !5725)
!5771 = !DILocation(line: 979, column: 24, scope: !5725)
!5772 = !DILocation(line: 979, column: 20, scope: !5725)
!5773 = !DILocation(line: 979, column: 14, scope: !5725)
!5774 = !DILocation(line: 980, column: 16, scope: !5725)
!5775 = !DILocation(line: 980, column: 22, scope: !5725)
!5776 = !DILocation(line: 980, column: 26, scope: !5725)
!5777 = !DILocation(line: 980, column: 24, scope: !5725)
!5778 = !DILocation(line: 980, column: 20, scope: !5725)
!5779 = !DILocation(line: 980, column: 14, scope: !5725)
!5780 = !DILocation(line: 981, column: 16, scope: !5725)
!5781 = !DILocation(line: 981, column: 22, scope: !5725)
!5782 = !DILocation(line: 981, column: 26, scope: !5725)
!5783 = !DILocation(line: 981, column: 24, scope: !5725)
!5784 = !DILocation(line: 981, column: 20, scope: !5725)
!5785 = !DILocation(line: 981, column: 14, scope: !5725)
!5786 = !DILocation(line: 982, column: 13, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !5725, file: !801, line: 982, column: 13)
!5788 = !DILocation(line: 982, column: 17, scope: !5787)
!5789 = !DILocation(line: 982, column: 13, scope: !5725)
!5790 = !DILocation(line: 983, column: 20, scope: !5791)
!5791 = distinct !DILexicalBlock(scope: !5792, file: !801, line: 983, column: 13)
!5792 = distinct !DILexicalBlock(scope: !5787, file: !801, line: 982, column: 40)
!5793 = !DILocation(line: 983, column: 18, scope: !5791)
!5794 = !DILocation(line: 983, column: 25, scope: !5795)
!5795 = !DILexicalBlockFile(scope: !5796, file: !801, discriminator: 1)
!5796 = distinct !DILexicalBlock(scope: !5791, file: !801, line: 983, column: 13)
!5797 = !DILocation(line: 983, column: 29, scope: !5795)
!5798 = !DILocation(line: 983, column: 27, scope: !5795)
!5799 = !DILocation(line: 983, column: 13, scope: !5795)
!5800 = !DILocation(line: 984, column: 17, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5796, file: !801, line: 983, column: 40)
!5802 = distinct !{!5802, !5800}
!5803 = !DILocation(line: 984, column: 28, scope: !5804)
!5804 = !DILexicalBlockFile(scope: !5805, file: !801, discriminator: 1)
!5805 = distinct !DILexicalBlock(scope: !5806, file: !801, line: 984, column: 26)
!5806 = distinct !DILexicalBlock(scope: !5801, file: !801, line: 984, column: 20)
!5807 = !DILocation(line: 984, column: 27, scope: !5804)
!5808 = !DILocation(line: 984, column: 26, scope: !5804)
!5809 = !DILocation(line: 984, column: 52, scope: !5810)
!5810 = !DILexicalBlockFile(scope: !5811, file: !801, discriminator: 2)
!5811 = distinct !DILexicalBlock(scope: !5805, file: !801, line: 984, column: 34)
!5812 = !DILocation(line: 984, column: 50, scope: !5810)
!5813 = !DILocation(line: 984, column: 55, scope: !5810)
!5814 = !DILocation(line: 984, column: 59, scope: !5810)
!5815 = !DILocation(line: 984, column: 61, scope: !5810)
!5816 = !DILocation(line: 984, column: 43, scope: !5810)
!5817 = !DILocation(line: 984, column: 37, scope: !5810)
!5818 = !DILocation(line: 984, column: 41, scope: !5810)
!5819 = !DILocation(line: 984, column: 87, scope: !5810)
!5820 = !DILocation(line: 984, column: 85, scope: !5810)
!5821 = !DILocation(line: 984, column: 90, scope: !5810)
!5822 = !DILocation(line: 984, column: 94, scope: !5810)
!5823 = !DILocation(line: 984, column: 96, scope: !5810)
!5824 = !DILocation(line: 984, column: 78, scope: !5825)
!5825 = !DILexicalBlockFile(scope: !5810, file: !801, discriminator: 7)
!5826 = !DILocation(line: 984, column: 78, scope: !5810)
!5827 = !DILocation(line: 984, column: 72, scope: !5810)
!5828 = !DILocation(line: 984, column: 76, scope: !5810)
!5829 = !DILocation(line: 984, column: 123, scope: !5810)
!5830 = !DILocation(line: 984, column: 121, scope: !5810)
!5831 = !DILocation(line: 984, column: 126, scope: !5810)
!5832 = !DILocation(line: 984, column: 130, scope: !5810)
!5833 = !DILocation(line: 984, column: 132, scope: !5810)
!5834 = !DILocation(line: 984, column: 114, scope: !5835)
!5835 = !DILexicalBlockFile(scope: !5810, file: !801, discriminator: 8)
!5836 = !DILocation(line: 984, column: 114, scope: !5810)
!5837 = !DILocation(line: 984, column: 108, scope: !5810)
!5838 = !DILocation(line: 984, column: 112, scope: !5810)
!5839 = !DILocation(line: 984, column: 143, scope: !5810)
!5840 = !DILocation(line: 984, column: 162, scope: !5841)
!5841 = !DILexicalBlockFile(scope: !5842, file: !801, discriminator: 3)
!5842 = distinct !DILexicalBlock(scope: !5805, file: !801, line: 984, column: 154)
!5843 = !DILocation(line: 984, column: 161, scope: !5841)
!5844 = !DILocation(line: 984, column: 158, scope: !5841)
!5845 = !DILocation(line: 984, column: 154, scope: !5841)
!5846 = !DILocation(line: 984, column: 178, scope: !5847)
!5847 = !DILexicalBlockFile(scope: !5848, file: !801, discriminator: 4)
!5848 = distinct !DILexicalBlock(scope: !5842, file: !801, line: 984, column: 168)
!5849 = !DILocation(line: 984, column: 177, scope: !5847)
!5850 = !DILocation(line: 984, column: 171, scope: !5847)
!5851 = !DILocation(line: 984, column: 175, scope: !5847)
!5852 = !DILocation(line: 984, column: 192, scope: !5847)
!5853 = !DILocation(line: 984, column: 191, scope: !5847)
!5854 = !DILocation(line: 984, column: 185, scope: !5847)
!5855 = !DILocation(line: 984, column: 189, scope: !5847)
!5856 = !DILocation(line: 984, column: 206, scope: !5847)
!5857 = !DILocation(line: 984, column: 205, scope: !5847)
!5858 = !DILocation(line: 984, column: 199, scope: !5847)
!5859 = !DILocation(line: 984, column: 203, scope: !5847)
!5860 = !DILocation(line: 984, column: 212, scope: !5847)
!5861 = !DILocalVariable(name: "a", scope: !5862, file: !801, line: 984, type: !798)
!5862 = distinct !DILexicalBlock(scope: !5842, file: !801, line: 984, column: 219)
!5863 = !DILocation(line: 984, column: 227, scope: !5862)
!5864 = !DILocation(line: 984, column: 249, scope: !5865)
!5865 = !DILexicalBlockFile(scope: !5862, file: !801, discriminator: 5)
!5866 = !DILocation(line: 984, column: 248, scope: !5865)
!5867 = !DILocation(line: 984, column: 247, scope: !5865)
!5868 = !DILocation(line: 984, column: 245, scope: !5865)
!5869 = !DILocation(line: 984, column: 227, scope: !5865)
!5870 = !DILocation(line: 984, column: 270, scope: !5865)
!5871 = !DILocation(line: 984, column: 276, scope: !5865)
!5872 = !DILocation(line: 984, column: 275, scope: !5865)
!5873 = !DILocation(line: 984, column: 274, scope: !5865)
!5874 = !DILocation(line: 984, column: 272, scope: !5865)
!5875 = !DILocation(line: 984, column: 292, scope: !5865)
!5876 = !DILocation(line: 984, column: 290, scope: !5865)
!5877 = !DILocation(line: 984, column: 300, scope: !5865)
!5878 = !DILocation(line: 984, column: 298, scope: !5865)
!5879 = !DILocation(line: 984, column: 303, scope: !5865)
!5880 = !DILocation(line: 984, column: 307, scope: !5865)
!5881 = !DILocation(line: 984, column: 309, scope: !5865)
!5882 = !DILocation(line: 984, column: 295, scope: !5865)
!5883 = !DILocation(line: 984, column: 282, scope: !5865)
!5884 = !DILocation(line: 984, column: 263, scope: !5865)
!5885 = !DILocation(line: 984, column: 257, scope: !5865)
!5886 = !DILocation(line: 984, column: 261, scope: !5865)
!5887 = !DILocation(line: 984, column: 334, scope: !5865)
!5888 = !DILocation(line: 984, column: 340, scope: !5865)
!5889 = !DILocation(line: 984, column: 339, scope: !5865)
!5890 = !DILocation(line: 984, column: 338, scope: !5865)
!5891 = !DILocation(line: 984, column: 336, scope: !5865)
!5892 = !DILocation(line: 984, column: 356, scope: !5865)
!5893 = !DILocation(line: 984, column: 354, scope: !5865)
!5894 = !DILocation(line: 984, column: 364, scope: !5865)
!5895 = !DILocation(line: 984, column: 362, scope: !5865)
!5896 = !DILocation(line: 984, column: 367, scope: !5865)
!5897 = !DILocation(line: 984, column: 371, scope: !5865)
!5898 = !DILocation(line: 984, column: 373, scope: !5865)
!5899 = !DILocation(line: 984, column: 359, scope: !5865)
!5900 = !DILocation(line: 984, column: 346, scope: !5865)
!5901 = !DILocation(line: 984, column: 327, scope: !5902)
!5902 = !DILexicalBlockFile(scope: !5865, file: !801, discriminator: 9)
!5903 = !DILocation(line: 984, column: 327, scope: !5865)
!5904 = !DILocation(line: 984, column: 321, scope: !5865)
!5905 = !DILocation(line: 984, column: 325, scope: !5865)
!5906 = !DILocation(line: 984, column: 399, scope: !5865)
!5907 = !DILocation(line: 984, column: 405, scope: !5865)
!5908 = !DILocation(line: 984, column: 404, scope: !5865)
!5909 = !DILocation(line: 984, column: 403, scope: !5865)
!5910 = !DILocation(line: 984, column: 401, scope: !5865)
!5911 = !DILocation(line: 984, column: 421, scope: !5865)
!5912 = !DILocation(line: 984, column: 419, scope: !5865)
!5913 = !DILocation(line: 984, column: 429, scope: !5865)
!5914 = !DILocation(line: 984, column: 427, scope: !5865)
!5915 = !DILocation(line: 984, column: 432, scope: !5865)
!5916 = !DILocation(line: 984, column: 436, scope: !5865)
!5917 = !DILocation(line: 984, column: 438, scope: !5865)
!5918 = !DILocation(line: 984, column: 424, scope: !5865)
!5919 = !DILocation(line: 984, column: 411, scope: !5865)
!5920 = !DILocation(line: 984, column: 392, scope: !5921)
!5921 = !DILexicalBlockFile(scope: !5865, file: !801, discriminator: 10)
!5922 = !DILocation(line: 984, column: 392, scope: !5865)
!5923 = !DILocation(line: 984, column: 386, scope: !5865)
!5924 = !DILocation(line: 984, column: 390, scope: !5865)
!5925 = !DILocation(line: 984, column: 455, scope: !5926)
!5926 = !DILexicalBlockFile(scope: !5806, file: !801, discriminator: 6)
!5927 = !DILocation(line: 984, column: 462, scope: !5926)
!5928 = !DILocation(line: 984, column: 469, scope: !5926)
!5929 = !DILocation(line: 984, column: 477, scope: !5926)
!5930 = !DILocation(line: 984, column: 485, scope: !5926)
!5931 = !DILocation(line: 984, column: 493, scope: !5926)
!5932 = !DILocation(line: 984, column: 501, scope: !5926)
!5933 = !DILocation(line: 984, column: 505, scope: !5926)
!5934 = !DILocation(line: 985, column: 17, scope: !5801)
!5935 = distinct !{!5935, !5934}
!5936 = !DILocation(line: 985, column: 28, scope: !5937)
!5937 = !DILexicalBlockFile(scope: !5938, file: !801, discriminator: 1)
!5938 = distinct !DILexicalBlock(scope: !5939, file: !801, line: 985, column: 26)
!5939 = distinct !DILexicalBlock(scope: !5801, file: !801, line: 985, column: 20)
!5940 = !DILocation(line: 985, column: 27, scope: !5937)
!5941 = !DILocation(line: 985, column: 26, scope: !5937)
!5942 = !DILocation(line: 985, column: 52, scope: !5943)
!5943 = !DILexicalBlockFile(scope: !5944, file: !801, discriminator: 2)
!5944 = distinct !DILexicalBlock(scope: !5938, file: !801, line: 985, column: 34)
!5945 = !DILocation(line: 985, column: 53, scope: !5943)
!5946 = !DILocation(line: 985, column: 50, scope: !5943)
!5947 = !DILocation(line: 985, column: 57, scope: !5943)
!5948 = !DILocation(line: 985, column: 61, scope: !5943)
!5949 = !DILocation(line: 985, column: 63, scope: !5943)
!5950 = !DILocation(line: 985, column: 43, scope: !5943)
!5951 = !DILocation(line: 985, column: 37, scope: !5943)
!5952 = !DILocation(line: 985, column: 41, scope: !5943)
!5953 = !DILocation(line: 985, column: 89, scope: !5943)
!5954 = !DILocation(line: 985, column: 90, scope: !5943)
!5955 = !DILocation(line: 985, column: 87, scope: !5943)
!5956 = !DILocation(line: 985, column: 94, scope: !5943)
!5957 = !DILocation(line: 985, column: 98, scope: !5943)
!5958 = !DILocation(line: 985, column: 100, scope: !5943)
!5959 = !DILocation(line: 985, column: 80, scope: !5960)
!5960 = !DILexicalBlockFile(scope: !5943, file: !801, discriminator: 7)
!5961 = !DILocation(line: 985, column: 80, scope: !5943)
!5962 = !DILocation(line: 985, column: 74, scope: !5943)
!5963 = !DILocation(line: 985, column: 78, scope: !5943)
!5964 = !DILocation(line: 985, column: 127, scope: !5943)
!5965 = !DILocation(line: 985, column: 128, scope: !5943)
!5966 = !DILocation(line: 985, column: 125, scope: !5943)
!5967 = !DILocation(line: 985, column: 132, scope: !5943)
!5968 = !DILocation(line: 985, column: 136, scope: !5943)
!5969 = !DILocation(line: 985, column: 138, scope: !5943)
!5970 = !DILocation(line: 985, column: 118, scope: !5971)
!5971 = !DILexicalBlockFile(scope: !5943, file: !801, discriminator: 8)
!5972 = !DILocation(line: 985, column: 118, scope: !5943)
!5973 = !DILocation(line: 985, column: 112, scope: !5943)
!5974 = !DILocation(line: 985, column: 116, scope: !5943)
!5975 = !DILocation(line: 985, column: 149, scope: !5943)
!5976 = !DILocation(line: 985, column: 168, scope: !5977)
!5977 = !DILexicalBlockFile(scope: !5978, file: !801, discriminator: 3)
!5978 = distinct !DILexicalBlock(scope: !5938, file: !801, line: 985, column: 160)
!5979 = !DILocation(line: 985, column: 167, scope: !5977)
!5980 = !DILocation(line: 985, column: 164, scope: !5977)
!5981 = !DILocation(line: 985, column: 160, scope: !5977)
!5982 = !DILocation(line: 985, column: 184, scope: !5983)
!5983 = !DILexicalBlockFile(scope: !5984, file: !801, discriminator: 4)
!5984 = distinct !DILexicalBlock(scope: !5978, file: !801, line: 985, column: 174)
!5985 = !DILocation(line: 985, column: 183, scope: !5983)
!5986 = !DILocation(line: 985, column: 177, scope: !5983)
!5987 = !DILocation(line: 985, column: 181, scope: !5983)
!5988 = !DILocation(line: 985, column: 198, scope: !5983)
!5989 = !DILocation(line: 985, column: 197, scope: !5983)
!5990 = !DILocation(line: 985, column: 191, scope: !5983)
!5991 = !DILocation(line: 985, column: 195, scope: !5983)
!5992 = !DILocation(line: 985, column: 212, scope: !5983)
!5993 = !DILocation(line: 985, column: 211, scope: !5983)
!5994 = !DILocation(line: 985, column: 205, scope: !5983)
!5995 = !DILocation(line: 985, column: 209, scope: !5983)
!5996 = !DILocation(line: 985, column: 218, scope: !5983)
!5997 = !DILocalVariable(name: "a", scope: !5998, file: !801, line: 985, type: !798)
!5998 = distinct !DILexicalBlock(scope: !5978, file: !801, line: 985, column: 225)
!5999 = !DILocation(line: 985, column: 233, scope: !5998)
!6000 = !DILocation(line: 985, column: 255, scope: !6001)
!6001 = !DILexicalBlockFile(scope: !5998, file: !801, discriminator: 5)
!6002 = !DILocation(line: 985, column: 254, scope: !6001)
!6003 = !DILocation(line: 985, column: 253, scope: !6001)
!6004 = !DILocation(line: 985, column: 251, scope: !6001)
!6005 = !DILocation(line: 985, column: 233, scope: !6001)
!6006 = !DILocation(line: 985, column: 276, scope: !6001)
!6007 = !DILocation(line: 985, column: 282, scope: !6001)
!6008 = !DILocation(line: 985, column: 281, scope: !6001)
!6009 = !DILocation(line: 985, column: 280, scope: !6001)
!6010 = !DILocation(line: 985, column: 278, scope: !6001)
!6011 = !DILocation(line: 985, column: 298, scope: !6001)
!6012 = !DILocation(line: 985, column: 296, scope: !6001)
!6013 = !DILocation(line: 985, column: 306, scope: !6001)
!6014 = !DILocation(line: 985, column: 307, scope: !6001)
!6015 = !DILocation(line: 985, column: 304, scope: !6001)
!6016 = !DILocation(line: 985, column: 311, scope: !6001)
!6017 = !DILocation(line: 985, column: 315, scope: !6001)
!6018 = !DILocation(line: 985, column: 317, scope: !6001)
!6019 = !DILocation(line: 985, column: 301, scope: !6001)
!6020 = !DILocation(line: 985, column: 288, scope: !6001)
!6021 = !DILocation(line: 985, column: 269, scope: !6001)
!6022 = !DILocation(line: 985, column: 263, scope: !6001)
!6023 = !DILocation(line: 985, column: 267, scope: !6001)
!6024 = !DILocation(line: 985, column: 342, scope: !6001)
!6025 = !DILocation(line: 985, column: 348, scope: !6001)
!6026 = !DILocation(line: 985, column: 347, scope: !6001)
!6027 = !DILocation(line: 985, column: 346, scope: !6001)
!6028 = !DILocation(line: 985, column: 344, scope: !6001)
!6029 = !DILocation(line: 985, column: 364, scope: !6001)
!6030 = !DILocation(line: 985, column: 362, scope: !6001)
!6031 = !DILocation(line: 985, column: 372, scope: !6001)
!6032 = !DILocation(line: 985, column: 373, scope: !6001)
!6033 = !DILocation(line: 985, column: 370, scope: !6001)
!6034 = !DILocation(line: 985, column: 377, scope: !6001)
!6035 = !DILocation(line: 985, column: 381, scope: !6001)
!6036 = !DILocation(line: 985, column: 383, scope: !6001)
!6037 = !DILocation(line: 985, column: 367, scope: !6001)
!6038 = !DILocation(line: 985, column: 354, scope: !6001)
!6039 = !DILocation(line: 985, column: 335, scope: !6040)
!6040 = !DILexicalBlockFile(scope: !6001, file: !801, discriminator: 9)
!6041 = !DILocation(line: 985, column: 335, scope: !6001)
!6042 = !DILocation(line: 985, column: 329, scope: !6001)
!6043 = !DILocation(line: 985, column: 333, scope: !6001)
!6044 = !DILocation(line: 985, column: 409, scope: !6001)
!6045 = !DILocation(line: 985, column: 415, scope: !6001)
!6046 = !DILocation(line: 985, column: 414, scope: !6001)
!6047 = !DILocation(line: 985, column: 413, scope: !6001)
!6048 = !DILocation(line: 985, column: 411, scope: !6001)
!6049 = !DILocation(line: 985, column: 431, scope: !6001)
!6050 = !DILocation(line: 985, column: 429, scope: !6001)
!6051 = !DILocation(line: 985, column: 439, scope: !6001)
!6052 = !DILocation(line: 985, column: 440, scope: !6001)
!6053 = !DILocation(line: 985, column: 437, scope: !6001)
!6054 = !DILocation(line: 985, column: 444, scope: !6001)
!6055 = !DILocation(line: 985, column: 448, scope: !6001)
!6056 = !DILocation(line: 985, column: 450, scope: !6001)
!6057 = !DILocation(line: 985, column: 434, scope: !6001)
!6058 = !DILocation(line: 985, column: 421, scope: !6001)
!6059 = !DILocation(line: 985, column: 402, scope: !6060)
!6060 = !DILexicalBlockFile(scope: !6001, file: !801, discriminator: 10)
!6061 = !DILocation(line: 985, column: 402, scope: !6001)
!6062 = !DILocation(line: 985, column: 396, scope: !6001)
!6063 = !DILocation(line: 985, column: 400, scope: !6001)
!6064 = !DILocation(line: 985, column: 467, scope: !6065)
!6065 = !DILexicalBlockFile(scope: !5939, file: !801, discriminator: 6)
!6066 = !DILocation(line: 985, column: 474, scope: !6065)
!6067 = !DILocation(line: 985, column: 481, scope: !6065)
!6068 = !DILocation(line: 985, column: 489, scope: !6065)
!6069 = !DILocation(line: 985, column: 497, scope: !6065)
!6070 = !DILocation(line: 985, column: 505, scope: !6065)
!6071 = !DILocation(line: 985, column: 513, scope: !6065)
!6072 = !DILocation(line: 985, column: 517, scope: !6065)
!6073 = !DILocation(line: 986, column: 13, scope: !5801)
!6074 = !DILocation(line: 983, column: 34, scope: !6075)
!6075 = !DILexicalBlockFile(scope: !5796, file: !801, discriminator: 2)
!6076 = !DILocation(line: 983, column: 13, scope: !6075)
!6077 = distinct !{!6077, !6078}
!6078 = !DILocation(line: 983, column: 13, scope: !5792)
!6079 = !DILocation(line: 987, column: 9, scope: !5792)
!6080 = !DILocation(line: 987, column: 20, scope: !6081)
!6081 = !DILexicalBlockFile(scope: !6082, file: !801, discriminator: 1)
!6082 = distinct !DILexicalBlock(scope: !5787, file: !801, line: 987, column: 20)
!6083 = !DILocation(line: 987, column: 24, scope: !6081)
!6084 = !DILocation(line: 988, column: 20, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6086, file: !801, line: 988, column: 13)
!6086 = distinct !DILexicalBlock(scope: !6082, file: !801, line: 987, column: 47)
!6087 = !DILocation(line: 988, column: 18, scope: !6085)
!6088 = !DILocation(line: 988, column: 25, scope: !6089)
!6089 = !DILexicalBlockFile(scope: !6090, file: !801, discriminator: 1)
!6090 = distinct !DILexicalBlock(scope: !6085, file: !801, line: 988, column: 13)
!6091 = !DILocation(line: 988, column: 29, scope: !6089)
!6092 = !DILocation(line: 988, column: 27, scope: !6089)
!6093 = !DILocation(line: 988, column: 13, scope: !6089)
!6094 = !DILocation(line: 989, column: 17, scope: !6095)
!6095 = distinct !DILexicalBlock(scope: !6090, file: !801, line: 988, column: 40)
!6096 = distinct !{!6096, !6094}
!6097 = !DILocation(line: 989, column: 28, scope: !6098)
!6098 = !DILexicalBlockFile(scope: !6099, file: !801, discriminator: 1)
!6099 = distinct !DILexicalBlock(scope: !6100, file: !801, line: 989, column: 26)
!6100 = distinct !DILexicalBlock(scope: !6095, file: !801, line: 989, column: 20)
!6101 = !DILocation(line: 989, column: 27, scope: !6098)
!6102 = !DILocation(line: 989, column: 26, scope: !6098)
!6103 = !DILocation(line: 989, column: 52, scope: !6104)
!6104 = !DILexicalBlockFile(scope: !6105, file: !801, discriminator: 2)
!6105 = distinct !DILexicalBlock(scope: !6099, file: !801, line: 989, column: 34)
!6106 = !DILocation(line: 989, column: 50, scope: !6104)
!6107 = !DILocation(line: 989, column: 55, scope: !6104)
!6108 = !DILocation(line: 989, column: 59, scope: !6104)
!6109 = !DILocation(line: 989, column: 61, scope: !6104)
!6110 = !DILocation(line: 989, column: 43, scope: !6104)
!6111 = !DILocation(line: 989, column: 37, scope: !6104)
!6112 = !DILocation(line: 989, column: 41, scope: !6104)
!6113 = !DILocation(line: 989, column: 71, scope: !6104)
!6114 = !DILocation(line: 989, column: 90, scope: !6115)
!6115 = !DILexicalBlockFile(scope: !6116, file: !801, discriminator: 3)
!6116 = distinct !DILexicalBlock(scope: !6099, file: !801, line: 989, column: 82)
!6117 = !DILocation(line: 989, column: 89, scope: !6115)
!6118 = !DILocation(line: 989, column: 86, scope: !6115)
!6119 = !DILocation(line: 989, column: 82, scope: !6115)
!6120 = !DILocation(line: 989, column: 106, scope: !6121)
!6121 = !DILexicalBlockFile(scope: !6122, file: !801, discriminator: 4)
!6122 = distinct !DILexicalBlock(scope: !6116, file: !801, line: 989, column: 96)
!6123 = !DILocation(line: 989, column: 105, scope: !6121)
!6124 = !DILocation(line: 989, column: 99, scope: !6121)
!6125 = !DILocation(line: 989, column: 103, scope: !6121)
!6126 = !DILocation(line: 989, column: 112, scope: !6121)
!6127 = !DILocalVariable(name: "a", scope: !6128, file: !801, line: 989, type: !798)
!6128 = distinct !DILexicalBlock(scope: !6116, file: !801, line: 989, column: 119)
!6129 = !DILocation(line: 989, column: 127, scope: !6128)
!6130 = !DILocation(line: 989, column: 149, scope: !6131)
!6131 = !DILexicalBlockFile(scope: !6128, file: !801, discriminator: 5)
!6132 = !DILocation(line: 989, column: 148, scope: !6131)
!6133 = !DILocation(line: 989, column: 147, scope: !6131)
!6134 = !DILocation(line: 989, column: 145, scope: !6131)
!6135 = !DILocation(line: 989, column: 127, scope: !6131)
!6136 = !DILocation(line: 989, column: 170, scope: !6131)
!6137 = !DILocation(line: 989, column: 176, scope: !6131)
!6138 = !DILocation(line: 989, column: 175, scope: !6131)
!6139 = !DILocation(line: 989, column: 174, scope: !6131)
!6140 = !DILocation(line: 989, column: 172, scope: !6131)
!6141 = !DILocation(line: 989, column: 192, scope: !6131)
!6142 = !DILocation(line: 989, column: 190, scope: !6131)
!6143 = !DILocation(line: 989, column: 200, scope: !6131)
!6144 = !DILocation(line: 989, column: 198, scope: !6131)
!6145 = !DILocation(line: 989, column: 203, scope: !6131)
!6146 = !DILocation(line: 989, column: 207, scope: !6131)
!6147 = !DILocation(line: 989, column: 209, scope: !6131)
!6148 = !DILocation(line: 989, column: 195, scope: !6131)
!6149 = !DILocation(line: 989, column: 182, scope: !6131)
!6150 = !DILocation(line: 989, column: 163, scope: !6131)
!6151 = !DILocation(line: 989, column: 157, scope: !6131)
!6152 = !DILocation(line: 989, column: 161, scope: !6131)
!6153 = !DILocation(line: 989, column: 225, scope: !6154)
!6154 = !DILexicalBlockFile(scope: !6100, file: !801, discriminator: 6)
!6155 = !DILocation(line: 989, column: 233, scope: !6154)
!6156 = !DILocation(line: 989, column: 242, scope: !6154)
!6157 = !DILocation(line: 989, column: 248, scope: !6154)
!6158 = !DILocation(line: 990, column: 17, scope: !6095)
!6159 = distinct !{!6159, !6158}
!6160 = !DILocation(line: 990, column: 27, scope: !6161)
!6161 = !DILexicalBlockFile(scope: !6162, file: !801, discriminator: 1)
!6162 = distinct !DILexicalBlock(scope: !6163, file: !801, line: 990, column: 26)
!6163 = distinct !DILexicalBlock(scope: !6095, file: !801, line: 990, column: 20)
!6164 = !DILocation(line: 990, column: 35, scope: !6161)
!6165 = !DILocation(line: 990, column: 39, scope: !6166)
!6166 = !DILexicalBlockFile(scope: !6162, file: !801, discriminator: 2)
!6167 = !DILocation(line: 990, column: 26, scope: !6166)
!6168 = !DILocation(line: 990, column: 66, scope: !6169)
!6169 = !DILexicalBlockFile(scope: !6170, file: !801, discriminator: 3)
!6170 = distinct !DILexicalBlock(scope: !6162, file: !801, line: 990, column: 48)
!6171 = !DILocation(line: 990, column: 64, scope: !6169)
!6172 = !DILocation(line: 990, column: 69, scope: !6169)
!6173 = !DILocation(line: 990, column: 73, scope: !6169)
!6174 = !DILocation(line: 990, column: 75, scope: !6169)
!6175 = !DILocation(line: 990, column: 57, scope: !6169)
!6176 = !DILocation(line: 990, column: 51, scope: !6169)
!6177 = !DILocation(line: 990, column: 55, scope: !6169)
!6178 = !DILocation(line: 990, column: 102, scope: !6169)
!6179 = !DILocation(line: 990, column: 100, scope: !6169)
!6180 = !DILocation(line: 990, column: 105, scope: !6169)
!6181 = !DILocation(line: 990, column: 109, scope: !6169)
!6182 = !DILocation(line: 990, column: 111, scope: !6169)
!6183 = !DILocation(line: 990, column: 93, scope: !6184)
!6184 = !DILexicalBlockFile(scope: !6169, file: !801, discriminator: 9)
!6185 = !DILocation(line: 990, column: 93, scope: !6169)
!6186 = !DILocation(line: 990, column: 87, scope: !6169)
!6187 = !DILocation(line: 990, column: 91, scope: !6169)
!6188 = !DILocation(line: 990, column: 122, scope: !6169)
!6189 = !DILocation(line: 990, column: 140, scope: !6190)
!6190 = !DILexicalBlockFile(scope: !6191, file: !801, discriminator: 4)
!6191 = distinct !DILexicalBlock(scope: !6162, file: !801, line: 990, column: 133)
!6192 = !DILocation(line: 990, column: 137, scope: !6190)
!6193 = !DILocation(line: 990, column: 148, scope: !6190)
!6194 = !DILocation(line: 990, column: 158, scope: !6195)
!6195 = !DILexicalBlockFile(scope: !6191, file: !801, discriminator: 5)
!6196 = !DILocation(line: 990, column: 155, scope: !6195)
!6197 = !DILocation(line: 990, column: 133, scope: !6195)
!6198 = !DILocation(line: 990, column: 177, scope: !6199)
!6199 = !DILexicalBlockFile(scope: !6200, file: !801, discriminator: 6)
!6200 = distinct !DILexicalBlock(scope: !6191, file: !801, line: 990, column: 167)
!6201 = !DILocation(line: 990, column: 176, scope: !6199)
!6202 = !DILocation(line: 990, column: 170, scope: !6199)
!6203 = !DILocation(line: 990, column: 174, scope: !6199)
!6204 = !DILocation(line: 990, column: 191, scope: !6199)
!6205 = !DILocation(line: 990, column: 190, scope: !6199)
!6206 = !DILocation(line: 990, column: 184, scope: !6199)
!6207 = !DILocation(line: 990, column: 188, scope: !6199)
!6208 = !DILocation(line: 990, column: 197, scope: !6199)
!6209 = !DILocalVariable(name: "a0", scope: !6210, file: !801, line: 990, type: !798)
!6210 = distinct !DILexicalBlock(scope: !6191, file: !801, line: 990, column: 204)
!6211 = !DILocation(line: 990, column: 212, scope: !6210)
!6212 = !DILocation(line: 990, column: 233, scope: !6213)
!6213 = !DILexicalBlockFile(scope: !6210, file: !801, discriminator: 7)
!6214 = !DILocation(line: 990, column: 231, scope: !6213)
!6215 = !DILocation(line: 990, column: 212, scope: !6213)
!6216 = !DILocalVariable(name: "a1", scope: !6210, file: !801, line: 990, type: !798)
!6217 = !DILocation(line: 990, column: 248, scope: !6210)
!6218 = !DILocation(line: 990, column: 269, scope: !6213)
!6219 = !DILocation(line: 990, column: 267, scope: !6213)
!6220 = !DILocation(line: 990, column: 248, scope: !6213)
!6221 = !DILocalVariable(name: "b", scope: !6210, file: !801, line: 990, type: !798)
!6222 = !DILocation(line: 990, column: 284, scope: !6210)
!6223 = !DILocation(line: 990, column: 295, scope: !6213)
!6224 = !DILocation(line: 990, column: 293, scope: !6213)
!6225 = !DILocation(line: 990, column: 300, scope: !6213)
!6226 = !DILocation(line: 990, column: 298, scope: !6213)
!6227 = !DILocation(line: 990, column: 284, scope: !6213)
!6228 = !DILocation(line: 990, column: 318, scope: !6213)
!6229 = !DILocation(line: 990, column: 323, scope: !6213)
!6230 = !DILocation(line: 990, column: 321, scope: !6213)
!6231 = !DILocation(line: 990, column: 333, scope: !6213)
!6232 = !DILocation(line: 990, column: 338, scope: !6213)
!6233 = !DILocation(line: 990, column: 336, scope: !6213)
!6234 = !DILocation(line: 990, column: 331, scope: !6213)
!6235 = !DILocation(line: 990, column: 348, scope: !6213)
!6236 = !DILocation(line: 990, column: 355, scope: !6213)
!6237 = !DILocation(line: 990, column: 353, scope: !6213)
!6238 = !DILocation(line: 990, column: 358, scope: !6213)
!6239 = !DILocation(line: 990, column: 362, scope: !6213)
!6240 = !DILocation(line: 990, column: 364, scope: !6213)
!6241 = !DILocation(line: 990, column: 350, scope: !6213)
!6242 = !DILocation(line: 990, column: 346, scope: !6213)
!6243 = !DILocation(line: 990, column: 311, scope: !6213)
!6244 = !DILocation(line: 990, column: 305, scope: !6213)
!6245 = !DILocation(line: 990, column: 309, scope: !6213)
!6246 = !DILocation(line: 990, column: 390, scope: !6213)
!6247 = !DILocation(line: 990, column: 395, scope: !6213)
!6248 = !DILocation(line: 990, column: 393, scope: !6213)
!6249 = !DILocation(line: 990, column: 405, scope: !6213)
!6250 = !DILocation(line: 990, column: 410, scope: !6213)
!6251 = !DILocation(line: 990, column: 408, scope: !6213)
!6252 = !DILocation(line: 990, column: 403, scope: !6213)
!6253 = !DILocation(line: 990, column: 420, scope: !6213)
!6254 = !DILocation(line: 990, column: 427, scope: !6213)
!6255 = !DILocation(line: 990, column: 425, scope: !6213)
!6256 = !DILocation(line: 990, column: 430, scope: !6213)
!6257 = !DILocation(line: 990, column: 434, scope: !6213)
!6258 = !DILocation(line: 990, column: 436, scope: !6213)
!6259 = !DILocation(line: 990, column: 422, scope: !6213)
!6260 = !DILocation(line: 990, column: 418, scope: !6213)
!6261 = !DILocation(line: 990, column: 383, scope: !6262)
!6262 = !DILexicalBlockFile(scope: !6213, file: !801, discriminator: 10)
!6263 = !DILocation(line: 990, column: 383, scope: !6213)
!6264 = !DILocation(line: 990, column: 377, scope: !6213)
!6265 = !DILocation(line: 990, column: 381, scope: !6213)
!6266 = !DILocation(line: 990, column: 455, scope: !6267)
!6267 = !DILexicalBlockFile(scope: !6163, file: !801, discriminator: 8)
!6268 = !DILocation(line: 990, column: 466, scope: !6267)
!6269 = !DILocation(line: 990, column: 476, scope: !6267)
!6270 = !DILocation(line: 990, column: 483, scope: !6267)
!6271 = !DILocation(line: 990, column: 490, scope: !6267)
!6272 = !DILocation(line: 990, column: 494, scope: !6267)
!6273 = !DILocation(line: 991, column: 17, scope: !6095)
!6274 = distinct !{!6274, !6273}
!6275 = !DILocation(line: 991, column: 28, scope: !6276)
!6276 = !DILexicalBlockFile(scope: !6277, file: !801, discriminator: 1)
!6277 = distinct !DILexicalBlock(scope: !6278, file: !801, line: 991, column: 26)
!6278 = distinct !DILexicalBlock(scope: !6095, file: !801, line: 991, column: 20)
!6279 = !DILocation(line: 991, column: 27, scope: !6276)
!6280 = !DILocation(line: 991, column: 26, scope: !6276)
!6281 = !DILocation(line: 991, column: 52, scope: !6282)
!6282 = !DILexicalBlockFile(scope: !6283, file: !801, discriminator: 2)
!6283 = distinct !DILexicalBlock(scope: !6277, file: !801, line: 991, column: 34)
!6284 = !DILocation(line: 991, column: 53, scope: !6282)
!6285 = !DILocation(line: 991, column: 50, scope: !6282)
!6286 = !DILocation(line: 991, column: 57, scope: !6282)
!6287 = !DILocation(line: 991, column: 61, scope: !6282)
!6288 = !DILocation(line: 991, column: 63, scope: !6282)
!6289 = !DILocation(line: 991, column: 43, scope: !6282)
!6290 = !DILocation(line: 991, column: 37, scope: !6282)
!6291 = !DILocation(line: 991, column: 41, scope: !6282)
!6292 = !DILocation(line: 991, column: 73, scope: !6282)
!6293 = !DILocation(line: 991, column: 92, scope: !6294)
!6294 = !DILexicalBlockFile(scope: !6295, file: !801, discriminator: 3)
!6295 = distinct !DILexicalBlock(scope: !6277, file: !801, line: 991, column: 84)
!6296 = !DILocation(line: 991, column: 91, scope: !6294)
!6297 = !DILocation(line: 991, column: 88, scope: !6294)
!6298 = !DILocation(line: 991, column: 84, scope: !6294)
!6299 = !DILocation(line: 991, column: 108, scope: !6300)
!6300 = !DILexicalBlockFile(scope: !6301, file: !801, discriminator: 4)
!6301 = distinct !DILexicalBlock(scope: !6295, file: !801, line: 991, column: 98)
!6302 = !DILocation(line: 991, column: 107, scope: !6300)
!6303 = !DILocation(line: 991, column: 101, scope: !6300)
!6304 = !DILocation(line: 991, column: 105, scope: !6300)
!6305 = !DILocation(line: 991, column: 114, scope: !6300)
!6306 = !DILocalVariable(name: "a", scope: !6307, file: !801, line: 991, type: !798)
!6307 = distinct !DILexicalBlock(scope: !6295, file: !801, line: 991, column: 121)
!6308 = !DILocation(line: 991, column: 129, scope: !6307)
!6309 = !DILocation(line: 991, column: 151, scope: !6310)
!6310 = !DILexicalBlockFile(scope: !6307, file: !801, discriminator: 5)
!6311 = !DILocation(line: 991, column: 150, scope: !6310)
!6312 = !DILocation(line: 991, column: 149, scope: !6310)
!6313 = !DILocation(line: 991, column: 147, scope: !6310)
!6314 = !DILocation(line: 991, column: 129, scope: !6310)
!6315 = !DILocation(line: 991, column: 172, scope: !6310)
!6316 = !DILocation(line: 991, column: 178, scope: !6310)
!6317 = !DILocation(line: 991, column: 177, scope: !6310)
!6318 = !DILocation(line: 991, column: 176, scope: !6310)
!6319 = !DILocation(line: 991, column: 174, scope: !6310)
!6320 = !DILocation(line: 991, column: 194, scope: !6310)
!6321 = !DILocation(line: 991, column: 192, scope: !6310)
!6322 = !DILocation(line: 991, column: 202, scope: !6310)
!6323 = !DILocation(line: 991, column: 203, scope: !6310)
!6324 = !DILocation(line: 991, column: 200, scope: !6310)
!6325 = !DILocation(line: 991, column: 207, scope: !6310)
!6326 = !DILocation(line: 991, column: 211, scope: !6310)
!6327 = !DILocation(line: 991, column: 213, scope: !6310)
!6328 = !DILocation(line: 991, column: 197, scope: !6310)
!6329 = !DILocation(line: 991, column: 184, scope: !6310)
!6330 = !DILocation(line: 991, column: 165, scope: !6310)
!6331 = !DILocation(line: 991, column: 159, scope: !6310)
!6332 = !DILocation(line: 991, column: 163, scope: !6310)
!6333 = !DILocation(line: 991, column: 229, scope: !6334)
!6334 = !DILexicalBlockFile(scope: !6278, file: !801, discriminator: 6)
!6335 = !DILocation(line: 991, column: 237, scope: !6334)
!6336 = !DILocation(line: 991, column: 246, scope: !6334)
!6337 = !DILocation(line: 991, column: 252, scope: !6334)
!6338 = !DILocation(line: 992, column: 13, scope: !6095)
!6339 = !DILocation(line: 988, column: 34, scope: !6340)
!6340 = !DILexicalBlockFile(scope: !6090, file: !801, discriminator: 2)
!6341 = !DILocation(line: 988, column: 13, scope: !6340)
!6342 = distinct !{!6342, !6343}
!6343 = !DILocation(line: 988, column: 13, scope: !6086)
!6344 = !DILocation(line: 993, column: 9, scope: !6086)
!6345 = !DILocation(line: 994, column: 20, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6347, file: !801, line: 994, column: 13)
!6347 = distinct !DILexicalBlock(scope: !6082, file: !801, line: 993, column: 16)
!6348 = !DILocation(line: 994, column: 18, scope: !6346)
!6349 = !DILocation(line: 994, column: 25, scope: !6350)
!6350 = !DILexicalBlockFile(scope: !6351, file: !801, discriminator: 1)
!6351 = distinct !DILexicalBlock(scope: !6346, file: !801, line: 994, column: 13)
!6352 = !DILocation(line: 994, column: 29, scope: !6350)
!6353 = !DILocation(line: 994, column: 27, scope: !6350)
!6354 = !DILocation(line: 994, column: 13, scope: !6350)
!6355 = !DILocation(line: 995, column: 17, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6351, file: !801, line: 994, column: 40)
!6357 = distinct !{!6357, !6355}
!6358 = !DILocation(line: 995, column: 28, scope: !6359)
!6359 = !DILexicalBlockFile(scope: !6360, file: !801, discriminator: 1)
!6360 = distinct !DILexicalBlock(scope: !6361, file: !801, line: 995, column: 26)
!6361 = distinct !DILexicalBlock(scope: !6356, file: !801, line: 995, column: 20)
!6362 = !DILocation(line: 995, column: 27, scope: !6359)
!6363 = !DILocation(line: 995, column: 26, scope: !6359)
!6364 = !DILocation(line: 995, column: 52, scope: !6365)
!6365 = !DILexicalBlockFile(scope: !6366, file: !801, discriminator: 2)
!6366 = distinct !DILexicalBlock(scope: !6360, file: !801, line: 995, column: 34)
!6367 = !DILocation(line: 995, column: 50, scope: !6365)
!6368 = !DILocation(line: 995, column: 55, scope: !6365)
!6369 = !DILocation(line: 995, column: 59, scope: !6365)
!6370 = !DILocation(line: 995, column: 61, scope: !6365)
!6371 = !DILocation(line: 995, column: 43, scope: !6365)
!6372 = !DILocation(line: 995, column: 37, scope: !6365)
!6373 = !DILocation(line: 995, column: 41, scope: !6365)
!6374 = !DILocation(line: 995, column: 71, scope: !6365)
!6375 = !DILocation(line: 995, column: 90, scope: !6376)
!6376 = !DILexicalBlockFile(scope: !6377, file: !801, discriminator: 3)
!6377 = distinct !DILexicalBlock(scope: !6360, file: !801, line: 995, column: 82)
!6378 = !DILocation(line: 995, column: 89, scope: !6376)
!6379 = !DILocation(line: 995, column: 86, scope: !6376)
!6380 = !DILocation(line: 995, column: 82, scope: !6376)
!6381 = !DILocation(line: 995, column: 106, scope: !6382)
!6382 = !DILexicalBlockFile(scope: !6383, file: !801, discriminator: 4)
!6383 = distinct !DILexicalBlock(scope: !6377, file: !801, line: 995, column: 96)
!6384 = !DILocation(line: 995, column: 105, scope: !6382)
!6385 = !DILocation(line: 995, column: 99, scope: !6382)
!6386 = !DILocation(line: 995, column: 103, scope: !6382)
!6387 = !DILocation(line: 995, column: 112, scope: !6382)
!6388 = !DILocalVariable(name: "a", scope: !6389, file: !801, line: 995, type: !798)
!6389 = distinct !DILexicalBlock(scope: !6377, file: !801, line: 995, column: 119)
!6390 = !DILocation(line: 995, column: 127, scope: !6389)
!6391 = !DILocation(line: 995, column: 149, scope: !6392)
!6392 = !DILexicalBlockFile(scope: !6389, file: !801, discriminator: 5)
!6393 = !DILocation(line: 995, column: 148, scope: !6392)
!6394 = !DILocation(line: 995, column: 147, scope: !6392)
!6395 = !DILocation(line: 995, column: 145, scope: !6392)
!6396 = !DILocation(line: 995, column: 127, scope: !6392)
!6397 = !DILocation(line: 995, column: 170, scope: !6392)
!6398 = !DILocation(line: 995, column: 176, scope: !6392)
!6399 = !DILocation(line: 995, column: 175, scope: !6392)
!6400 = !DILocation(line: 995, column: 174, scope: !6392)
!6401 = !DILocation(line: 995, column: 172, scope: !6392)
!6402 = !DILocation(line: 995, column: 192, scope: !6392)
!6403 = !DILocation(line: 995, column: 190, scope: !6392)
!6404 = !DILocation(line: 995, column: 200, scope: !6392)
!6405 = !DILocation(line: 995, column: 198, scope: !6392)
!6406 = !DILocation(line: 995, column: 203, scope: !6392)
!6407 = !DILocation(line: 995, column: 207, scope: !6392)
!6408 = !DILocation(line: 995, column: 209, scope: !6392)
!6409 = !DILocation(line: 995, column: 195, scope: !6392)
!6410 = !DILocation(line: 995, column: 182, scope: !6392)
!6411 = !DILocation(line: 995, column: 163, scope: !6392)
!6412 = !DILocation(line: 995, column: 157, scope: !6392)
!6413 = !DILocation(line: 995, column: 161, scope: !6392)
!6414 = !DILocation(line: 995, column: 225, scope: !6415)
!6415 = !DILexicalBlockFile(scope: !6361, file: !801, discriminator: 6)
!6416 = !DILocation(line: 995, column: 233, scope: !6415)
!6417 = !DILocation(line: 995, column: 242, scope: !6415)
!6418 = !DILocation(line: 995, column: 248, scope: !6415)
!6419 = !DILocation(line: 996, column: 17, scope: !6356)
!6420 = distinct !{!6420, !6419}
!6421 = !DILocation(line: 996, column: 27, scope: !6422)
!6422 = !DILexicalBlockFile(scope: !6423, file: !801, discriminator: 1)
!6423 = distinct !DILexicalBlock(scope: !6424, file: !801, line: 996, column: 26)
!6424 = distinct !DILexicalBlock(scope: !6356, file: !801, line: 996, column: 20)
!6425 = !DILocation(line: 996, column: 35, scope: !6422)
!6426 = !DILocation(line: 996, column: 39, scope: !6427)
!6427 = !DILexicalBlockFile(scope: !6423, file: !801, discriminator: 2)
!6428 = !DILocation(line: 996, column: 47, scope: !6427)
!6429 = !DILocation(line: 996, column: 56, scope: !6430)
!6430 = !DILexicalBlockFile(scope: !6423, file: !801, discriminator: 3)
!6431 = !DILocation(line: 996, column: 51, scope: !6430)
!6432 = !DILocation(line: 996, column: 62, scope: !6430)
!6433 = !DILocation(line: 996, column: 71, scope: !6434)
!6434 = !DILexicalBlockFile(scope: !6423, file: !801, discriminator: 4)
!6435 = !DILocation(line: 996, column: 75, scope: !6434)
!6436 = !DILocation(line: 996, column: 66, scope: !6434)
!6437 = !DILocation(line: 996, column: 26, scope: !6434)
!6438 = !DILocation(line: 996, column: 98, scope: !6439)
!6439 = !DILexicalBlockFile(scope: !6440, file: !801, discriminator: 5)
!6440 = distinct !DILexicalBlock(scope: !6423, file: !801, line: 996, column: 80)
!6441 = !DILocation(line: 996, column: 96, scope: !6439)
!6442 = !DILocation(line: 996, column: 101, scope: !6439)
!6443 = !DILocation(line: 996, column: 105, scope: !6439)
!6444 = !DILocation(line: 996, column: 107, scope: !6439)
!6445 = !DILocation(line: 996, column: 89, scope: !6439)
!6446 = !DILocation(line: 996, column: 83, scope: !6439)
!6447 = !DILocation(line: 996, column: 87, scope: !6439)
!6448 = !DILocation(line: 996, column: 134, scope: !6439)
!6449 = !DILocation(line: 996, column: 132, scope: !6439)
!6450 = !DILocation(line: 996, column: 137, scope: !6439)
!6451 = !DILocation(line: 996, column: 141, scope: !6439)
!6452 = !DILocation(line: 996, column: 143, scope: !6439)
!6453 = !DILocation(line: 996, column: 125, scope: !6454)
!6454 = !DILexicalBlockFile(scope: !6439, file: !801, discriminator: 13)
!6455 = !DILocation(line: 996, column: 125, scope: !6439)
!6456 = !DILocation(line: 996, column: 119, scope: !6439)
!6457 = !DILocation(line: 996, column: 123, scope: !6439)
!6458 = !DILocation(line: 996, column: 154, scope: !6439)
!6459 = !DILocation(line: 996, column: 172, scope: !6460)
!6460 = !DILexicalBlockFile(scope: !6461, file: !801, discriminator: 6)
!6461 = distinct !DILexicalBlock(scope: !6423, file: !801, line: 996, column: 165)
!6462 = !DILocation(line: 996, column: 169, scope: !6460)
!6463 = !DILocation(line: 996, column: 180, scope: !6460)
!6464 = !DILocation(line: 996, column: 190, scope: !6465)
!6465 = !DILexicalBlockFile(scope: !6461, file: !801, discriminator: 7)
!6466 = !DILocation(line: 996, column: 187, scope: !6465)
!6467 = !DILocation(line: 996, column: 198, scope: !6465)
!6468 = !DILocation(line: 996, column: 213, scope: !6469)
!6469 = !DILexicalBlockFile(scope: !6461, file: !801, discriminator: 8)
!6470 = !DILocation(line: 996, column: 208, scope: !6469)
!6471 = !DILocation(line: 996, column: 205, scope: !6469)
!6472 = !DILocation(line: 996, column: 219, scope: !6469)
!6473 = !DILocation(line: 996, column: 234, scope: !6474)
!6474 = !DILexicalBlockFile(scope: !6461, file: !801, discriminator: 9)
!6475 = !DILocation(line: 996, column: 238, scope: !6474)
!6476 = !DILocation(line: 996, column: 229, scope: !6474)
!6477 = !DILocation(line: 996, column: 226, scope: !6474)
!6478 = !DILocation(line: 996, column: 165, scope: !6474)
!6479 = !DILocation(line: 996, column: 253, scope: !6480)
!6480 = !DILexicalBlockFile(scope: !6481, file: !801, discriminator: 10)
!6481 = distinct !DILexicalBlock(scope: !6461, file: !801, line: 996, column: 243)
!6482 = !DILocation(line: 996, column: 252, scope: !6480)
!6483 = !DILocation(line: 996, column: 246, scope: !6480)
!6484 = !DILocation(line: 996, column: 250, scope: !6480)
!6485 = !DILocation(line: 996, column: 267, scope: !6480)
!6486 = !DILocation(line: 996, column: 266, scope: !6480)
!6487 = !DILocation(line: 996, column: 260, scope: !6480)
!6488 = !DILocation(line: 996, column: 264, scope: !6480)
!6489 = !DILocation(line: 996, column: 273, scope: !6480)
!6490 = !DILocalVariable(name: "a0", scope: !6491, file: !801, line: 996, type: !798)
!6491 = distinct !DILexicalBlock(scope: !6461, file: !801, line: 996, column: 280)
!6492 = !DILocation(line: 996, column: 288, scope: !6491)
!6493 = !DILocation(line: 996, column: 310, scope: !6494)
!6494 = !DILexicalBlockFile(scope: !6491, file: !801, discriminator: 11)
!6495 = !DILocation(line: 996, column: 308, scope: !6494)
!6496 = !DILocation(line: 996, column: 288, scope: !6494)
!6497 = !DILocalVariable(name: "a1", scope: !6491, file: !801, line: 996, type: !798)
!6498 = !DILocation(line: 996, column: 325, scope: !6491)
!6499 = !DILocation(line: 996, column: 347, scope: !6494)
!6500 = !DILocation(line: 996, column: 345, scope: !6494)
!6501 = !DILocation(line: 996, column: 325, scope: !6494)
!6502 = !DILocalVariable(name: "a2", scope: !6491, file: !801, line: 996, type: !798)
!6503 = !DILocation(line: 996, column: 362, scope: !6491)
!6504 = !DILocation(line: 996, column: 389, scope: !6494)
!6505 = !DILocation(line: 996, column: 384, scope: !6494)
!6506 = !DILocation(line: 996, column: 382, scope: !6494)
!6507 = !DILocation(line: 996, column: 362, scope: !6494)
!6508 = !DILocalVariable(name: "a3", scope: !6491, file: !801, line: 996, type: !798)
!6509 = !DILocation(line: 996, column: 402, scope: !6491)
!6510 = !DILocation(line: 996, column: 429, scope: !6494)
!6511 = !DILocation(line: 996, column: 433, scope: !6494)
!6512 = !DILocation(line: 996, column: 424, scope: !6494)
!6513 = !DILocation(line: 996, column: 422, scope: !6494)
!6514 = !DILocation(line: 996, column: 402, scope: !6494)
!6515 = !DILocalVariable(name: "b", scope: !6491, file: !801, line: 996, type: !798)
!6516 = !DILocation(line: 996, column: 444, scope: !6491)
!6517 = !DILocation(line: 996, column: 455, scope: !6494)
!6518 = !DILocation(line: 996, column: 453, scope: !6494)
!6519 = !DILocation(line: 996, column: 460, scope: !6494)
!6520 = !DILocation(line: 996, column: 458, scope: !6494)
!6521 = !DILocation(line: 996, column: 465, scope: !6494)
!6522 = !DILocation(line: 996, column: 463, scope: !6494)
!6523 = !DILocation(line: 996, column: 470, scope: !6494)
!6524 = !DILocation(line: 996, column: 468, scope: !6494)
!6525 = !DILocation(line: 996, column: 444, scope: !6494)
!6526 = !DILocation(line: 996, column: 488, scope: !6494)
!6527 = !DILocation(line: 996, column: 493, scope: !6494)
!6528 = !DILocation(line: 996, column: 491, scope: !6494)
!6529 = !DILocation(line: 996, column: 503, scope: !6494)
!6530 = !DILocation(line: 996, column: 508, scope: !6494)
!6531 = !DILocation(line: 996, column: 506, scope: !6494)
!6532 = !DILocation(line: 996, column: 501, scope: !6494)
!6533 = !DILocation(line: 996, column: 518, scope: !6494)
!6534 = !DILocation(line: 996, column: 528, scope: !6494)
!6535 = !DILocation(line: 996, column: 523, scope: !6494)
!6536 = !DILocation(line: 996, column: 521, scope: !6494)
!6537 = !DILocation(line: 996, column: 516, scope: !6494)
!6538 = !DILocation(line: 996, column: 536, scope: !6494)
!6539 = !DILocation(line: 996, column: 546, scope: !6494)
!6540 = !DILocation(line: 996, column: 550, scope: !6494)
!6541 = !DILocation(line: 996, column: 541, scope: !6494)
!6542 = !DILocation(line: 996, column: 539, scope: !6494)
!6543 = !DILocation(line: 996, column: 534, scope: !6494)
!6544 = !DILocation(line: 996, column: 556, scope: !6494)
!6545 = !DILocation(line: 996, column: 563, scope: !6494)
!6546 = !DILocation(line: 996, column: 561, scope: !6494)
!6547 = !DILocation(line: 996, column: 566, scope: !6494)
!6548 = !DILocation(line: 996, column: 570, scope: !6494)
!6549 = !DILocation(line: 996, column: 572, scope: !6494)
!6550 = !DILocation(line: 996, column: 558, scope: !6494)
!6551 = !DILocation(line: 996, column: 554, scope: !6494)
!6552 = !DILocation(line: 996, column: 481, scope: !6494)
!6553 = !DILocation(line: 996, column: 475, scope: !6494)
!6554 = !DILocation(line: 996, column: 479, scope: !6494)
!6555 = !DILocation(line: 996, column: 598, scope: !6494)
!6556 = !DILocation(line: 996, column: 603, scope: !6494)
!6557 = !DILocation(line: 996, column: 601, scope: !6494)
!6558 = !DILocation(line: 996, column: 613, scope: !6494)
!6559 = !DILocation(line: 996, column: 618, scope: !6494)
!6560 = !DILocation(line: 996, column: 616, scope: !6494)
!6561 = !DILocation(line: 996, column: 611, scope: !6494)
!6562 = !DILocation(line: 996, column: 628, scope: !6494)
!6563 = !DILocation(line: 996, column: 638, scope: !6494)
!6564 = !DILocation(line: 996, column: 633, scope: !6494)
!6565 = !DILocation(line: 996, column: 631, scope: !6494)
!6566 = !DILocation(line: 996, column: 626, scope: !6494)
!6567 = !DILocation(line: 996, column: 646, scope: !6494)
!6568 = !DILocation(line: 996, column: 656, scope: !6494)
!6569 = !DILocation(line: 996, column: 660, scope: !6494)
!6570 = !DILocation(line: 996, column: 651, scope: !6494)
!6571 = !DILocation(line: 996, column: 649, scope: !6494)
!6572 = !DILocation(line: 996, column: 644, scope: !6494)
!6573 = !DILocation(line: 996, column: 666, scope: !6494)
!6574 = !DILocation(line: 996, column: 673, scope: !6494)
!6575 = !DILocation(line: 996, column: 671, scope: !6494)
!6576 = !DILocation(line: 996, column: 676, scope: !6494)
!6577 = !DILocation(line: 996, column: 680, scope: !6494)
!6578 = !DILocation(line: 996, column: 682, scope: !6494)
!6579 = !DILocation(line: 996, column: 668, scope: !6494)
!6580 = !DILocation(line: 996, column: 664, scope: !6494)
!6581 = !DILocation(line: 996, column: 591, scope: !6582)
!6582 = !DILexicalBlockFile(scope: !6494, file: !801, discriminator: 14)
!6583 = !DILocation(line: 996, column: 591, scope: !6494)
!6584 = !DILocation(line: 996, column: 585, scope: !6494)
!6585 = !DILocation(line: 996, column: 589, scope: !6494)
!6586 = !DILocation(line: 996, column: 701, scope: !6587)
!6587 = !DILexicalBlockFile(scope: !6424, file: !801, discriminator: 12)
!6588 = !DILocation(line: 996, column: 712, scope: !6587)
!6589 = !DILocation(line: 996, column: 722, scope: !6587)
!6590 = !DILocation(line: 996, column: 729, scope: !6587)
!6591 = !DILocation(line: 996, column: 736, scope: !6587)
!6592 = !DILocation(line: 996, column: 740, scope: !6587)
!6593 = !DILocation(line: 997, column: 17, scope: !6356)
!6594 = distinct !{!6594, !6593}
!6595 = !DILocation(line: 997, column: 28, scope: !6596)
!6596 = !DILexicalBlockFile(scope: !6597, file: !801, discriminator: 1)
!6597 = distinct !DILexicalBlock(scope: !6598, file: !801, line: 997, column: 26)
!6598 = distinct !DILexicalBlock(scope: !6356, file: !801, line: 997, column: 20)
!6599 = !DILocation(line: 997, column: 27, scope: !6596)
!6600 = !DILocation(line: 997, column: 26, scope: !6596)
!6601 = !DILocation(line: 997, column: 52, scope: !6602)
!6602 = !DILexicalBlockFile(scope: !6603, file: !801, discriminator: 2)
!6603 = distinct !DILexicalBlock(scope: !6597, file: !801, line: 997, column: 34)
!6604 = !DILocation(line: 997, column: 53, scope: !6602)
!6605 = !DILocation(line: 997, column: 50, scope: !6602)
!6606 = !DILocation(line: 997, column: 57, scope: !6602)
!6607 = !DILocation(line: 997, column: 61, scope: !6602)
!6608 = !DILocation(line: 997, column: 63, scope: !6602)
!6609 = !DILocation(line: 997, column: 43, scope: !6602)
!6610 = !DILocation(line: 997, column: 37, scope: !6602)
!6611 = !DILocation(line: 997, column: 41, scope: !6602)
!6612 = !DILocation(line: 997, column: 73, scope: !6602)
!6613 = !DILocation(line: 997, column: 92, scope: !6614)
!6614 = !DILexicalBlockFile(scope: !6615, file: !801, discriminator: 3)
!6615 = distinct !DILexicalBlock(scope: !6597, file: !801, line: 997, column: 84)
!6616 = !DILocation(line: 997, column: 91, scope: !6614)
!6617 = !DILocation(line: 997, column: 88, scope: !6614)
!6618 = !DILocation(line: 997, column: 84, scope: !6614)
!6619 = !DILocation(line: 997, column: 108, scope: !6620)
!6620 = !DILexicalBlockFile(scope: !6621, file: !801, discriminator: 4)
!6621 = distinct !DILexicalBlock(scope: !6615, file: !801, line: 997, column: 98)
!6622 = !DILocation(line: 997, column: 107, scope: !6620)
!6623 = !DILocation(line: 997, column: 101, scope: !6620)
!6624 = !DILocation(line: 997, column: 105, scope: !6620)
!6625 = !DILocation(line: 997, column: 114, scope: !6620)
!6626 = !DILocalVariable(name: "a", scope: !6627, file: !801, line: 997, type: !798)
!6627 = distinct !DILexicalBlock(scope: !6615, file: !801, line: 997, column: 121)
!6628 = !DILocation(line: 997, column: 129, scope: !6627)
!6629 = !DILocation(line: 997, column: 151, scope: !6630)
!6630 = !DILexicalBlockFile(scope: !6627, file: !801, discriminator: 5)
!6631 = !DILocation(line: 997, column: 150, scope: !6630)
!6632 = !DILocation(line: 997, column: 149, scope: !6630)
!6633 = !DILocation(line: 997, column: 147, scope: !6630)
!6634 = !DILocation(line: 997, column: 129, scope: !6630)
!6635 = !DILocation(line: 997, column: 172, scope: !6630)
!6636 = !DILocation(line: 997, column: 178, scope: !6630)
!6637 = !DILocation(line: 997, column: 177, scope: !6630)
!6638 = !DILocation(line: 997, column: 176, scope: !6630)
!6639 = !DILocation(line: 997, column: 174, scope: !6630)
!6640 = !DILocation(line: 997, column: 194, scope: !6630)
!6641 = !DILocation(line: 997, column: 192, scope: !6630)
!6642 = !DILocation(line: 997, column: 202, scope: !6630)
!6643 = !DILocation(line: 997, column: 203, scope: !6630)
!6644 = !DILocation(line: 997, column: 200, scope: !6630)
!6645 = !DILocation(line: 997, column: 207, scope: !6630)
!6646 = !DILocation(line: 997, column: 211, scope: !6630)
!6647 = !DILocation(line: 997, column: 213, scope: !6630)
!6648 = !DILocation(line: 997, column: 197, scope: !6630)
!6649 = !DILocation(line: 997, column: 184, scope: !6630)
!6650 = !DILocation(line: 997, column: 165, scope: !6630)
!6651 = !DILocation(line: 997, column: 159, scope: !6630)
!6652 = !DILocation(line: 997, column: 163, scope: !6630)
!6653 = !DILocation(line: 997, column: 229, scope: !6654)
!6654 = !DILexicalBlockFile(scope: !6598, file: !801, discriminator: 6)
!6655 = !DILocation(line: 997, column: 237, scope: !6654)
!6656 = !DILocation(line: 997, column: 246, scope: !6654)
!6657 = !DILocation(line: 997, column: 252, scope: !6654)
!6658 = !DILocation(line: 998, column: 13, scope: !6356)
!6659 = !DILocation(line: 994, column: 34, scope: !6660)
!6660 = !DILexicalBlockFile(scope: !6351, file: !801, discriminator: 2)
!6661 = !DILocation(line: 994, column: 13, scope: !6660)
!6662 = distinct !{!6662, !6663}
!6663 = !DILocation(line: 994, column: 13, scope: !6347)
!6664 = !DILocation(line: 1001, column: 15, scope: !5725)
!6665 = !DILocation(line: 1001, column: 21, scope: !5725)
!6666 = !DILocation(line: 1001, column: 27, scope: !5725)
!6667 = !DILocation(line: 1001, column: 25, scope: !5725)
!6668 = !DILocation(line: 1001, column: 29, scope: !5725)
!6669 = !DILocation(line: 1001, column: 36, scope: !5725)
!6670 = !DILocation(line: 1001, column: 34, scope: !5725)
!6671 = !DILocation(line: 1001, column: 18, scope: !5725)
!6672 = !DILocation(line: 1001, column: 13, scope: !5725)
!6673 = !DILocation(line: 1002, column: 15, scope: !5725)
!6674 = !DILocation(line: 1002, column: 21, scope: !5725)
!6675 = !DILocation(line: 1002, column: 27, scope: !5725)
!6676 = !DILocation(line: 1002, column: 25, scope: !5725)
!6677 = !DILocation(line: 1002, column: 29, scope: !5725)
!6678 = !DILocation(line: 1002, column: 36, scope: !5725)
!6679 = !DILocation(line: 1002, column: 34, scope: !5725)
!6680 = !DILocation(line: 1002, column: 18, scope: !5725)
!6681 = !DILocation(line: 1002, column: 13, scope: !5725)
!6682 = !DILocation(line: 1003, column: 15, scope: !5725)
!6683 = !DILocation(line: 1003, column: 21, scope: !5725)
!6684 = !DILocation(line: 1003, column: 27, scope: !5725)
!6685 = !DILocation(line: 1003, column: 25, scope: !5725)
!6686 = !DILocation(line: 1003, column: 29, scope: !5725)
!6687 = !DILocation(line: 1003, column: 36, scope: !5725)
!6688 = !DILocation(line: 1003, column: 34, scope: !5725)
!6689 = !DILocation(line: 1003, column: 18, scope: !5725)
!6690 = !DILocation(line: 1003, column: 13, scope: !5725)
!6691 = !DILocation(line: 1004, column: 16, scope: !5725)
!6692 = !DILocation(line: 1004, column: 23, scope: !5725)
!6693 = !DILocation(line: 1004, column: 25, scope: !5725)
!6694 = !DILocation(line: 1004, column: 32, scope: !5725)
!6695 = !DILocation(line: 1004, column: 30, scope: !5725)
!6696 = !DILocation(line: 1004, column: 20, scope: !5725)
!6697 = !DILocation(line: 1004, column: 14, scope: !5725)
!6698 = !DILocation(line: 1005, column: 16, scope: !5725)
!6699 = !DILocation(line: 1005, column: 23, scope: !5725)
!6700 = !DILocation(line: 1005, column: 25, scope: !5725)
!6701 = !DILocation(line: 1005, column: 32, scope: !5725)
!6702 = !DILocation(line: 1005, column: 30, scope: !5725)
!6703 = !DILocation(line: 1005, column: 20, scope: !5725)
!6704 = !DILocation(line: 1005, column: 14, scope: !5725)
!6705 = !DILocation(line: 1006, column: 16, scope: !5725)
!6706 = !DILocation(line: 1006, column: 23, scope: !5725)
!6707 = !DILocation(line: 1006, column: 25, scope: !5725)
!6708 = !DILocation(line: 1006, column: 32, scope: !5725)
!6709 = !DILocation(line: 1006, column: 30, scope: !5725)
!6710 = !DILocation(line: 1006, column: 20, scope: !5725)
!6711 = !DILocation(line: 1006, column: 14, scope: !5725)
!6712 = !DILocation(line: 1007, column: 16, scope: !5725)
!6713 = !DILocation(line: 1007, column: 23, scope: !5725)
!6714 = !DILocation(line: 1007, column: 25, scope: !5725)
!6715 = !DILocation(line: 1007, column: 32, scope: !5725)
!6716 = !DILocation(line: 1007, column: 30, scope: !5725)
!6717 = !DILocation(line: 1007, column: 20, scope: !5725)
!6718 = !DILocation(line: 1007, column: 14, scope: !5725)
!6719 = !DILocation(line: 1008, column: 13, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !5725, file: !801, line: 1008, column: 13)
!6721 = !DILocation(line: 1008, column: 17, scope: !6720)
!6722 = !DILocation(line: 1008, column: 13, scope: !5725)
!6723 = !DILocation(line: 1009, column: 20, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !6725, file: !801, line: 1009, column: 13)
!6725 = distinct !DILexicalBlock(scope: !6720, file: !801, line: 1008, column: 40)
!6726 = !DILocation(line: 1009, column: 18, scope: !6724)
!6727 = !DILocation(line: 1009, column: 25, scope: !6728)
!6728 = !DILexicalBlockFile(scope: !6729, file: !801, discriminator: 1)
!6729 = distinct !DILexicalBlock(scope: !6724, file: !801, line: 1009, column: 13)
!6730 = !DILocation(line: 1009, column: 29, scope: !6728)
!6731 = !DILocation(line: 1009, column: 27, scope: !6728)
!6732 = !DILocation(line: 1009, column: 13, scope: !6728)
!6733 = !DILocation(line: 1010, column: 17, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6729, file: !801, line: 1009, column: 40)
!6735 = distinct !{!6735, !6733}
!6736 = !DILocation(line: 1010, column: 28, scope: !6737)
!6737 = !DILexicalBlockFile(scope: !6738, file: !801, discriminator: 1)
!6738 = distinct !DILexicalBlock(scope: !6739, file: !801, line: 1010, column: 26)
!6739 = distinct !DILexicalBlock(scope: !6734, file: !801, line: 1010, column: 20)
!6740 = !DILocation(line: 1010, column: 27, scope: !6737)
!6741 = !DILocation(line: 1010, column: 26, scope: !6737)
!6742 = !DILocation(line: 1010, column: 52, scope: !6743)
!6743 = !DILexicalBlockFile(scope: !6744, file: !801, discriminator: 2)
!6744 = distinct !DILexicalBlock(scope: !6738, file: !801, line: 1010, column: 34)
!6745 = !DILocation(line: 1010, column: 50, scope: !6743)
!6746 = !DILocation(line: 1010, column: 55, scope: !6743)
!6747 = !DILocation(line: 1010, column: 59, scope: !6743)
!6748 = !DILocation(line: 1010, column: 61, scope: !6743)
!6749 = !DILocation(line: 1010, column: 43, scope: !6743)
!6750 = !DILocation(line: 1010, column: 37, scope: !6743)
!6751 = !DILocation(line: 1010, column: 41, scope: !6743)
!6752 = !DILocation(line: 1010, column: 87, scope: !6743)
!6753 = !DILocation(line: 1010, column: 85, scope: !6743)
!6754 = !DILocation(line: 1010, column: 90, scope: !6743)
!6755 = !DILocation(line: 1010, column: 94, scope: !6743)
!6756 = !DILocation(line: 1010, column: 96, scope: !6743)
!6757 = !DILocation(line: 1010, column: 78, scope: !6758)
!6758 = !DILexicalBlockFile(scope: !6743, file: !801, discriminator: 7)
!6759 = !DILocation(line: 1010, column: 78, scope: !6743)
!6760 = !DILocation(line: 1010, column: 72, scope: !6743)
!6761 = !DILocation(line: 1010, column: 76, scope: !6743)
!6762 = !DILocation(line: 1010, column: 123, scope: !6743)
!6763 = !DILocation(line: 1010, column: 121, scope: !6743)
!6764 = !DILocation(line: 1010, column: 126, scope: !6743)
!6765 = !DILocation(line: 1010, column: 130, scope: !6743)
!6766 = !DILocation(line: 1010, column: 132, scope: !6743)
!6767 = !DILocation(line: 1010, column: 114, scope: !6768)
!6768 = !DILexicalBlockFile(scope: !6743, file: !801, discriminator: 8)
!6769 = !DILocation(line: 1010, column: 114, scope: !6743)
!6770 = !DILocation(line: 1010, column: 108, scope: !6743)
!6771 = !DILocation(line: 1010, column: 112, scope: !6743)
!6772 = !DILocation(line: 1010, column: 143, scope: !6743)
!6773 = !DILocation(line: 1010, column: 162, scope: !6774)
!6774 = !DILexicalBlockFile(scope: !6775, file: !801, discriminator: 3)
!6775 = distinct !DILexicalBlock(scope: !6738, file: !801, line: 1010, column: 154)
!6776 = !DILocation(line: 1010, column: 161, scope: !6774)
!6777 = !DILocation(line: 1010, column: 158, scope: !6774)
!6778 = !DILocation(line: 1010, column: 154, scope: !6774)
!6779 = !DILocation(line: 1010, column: 178, scope: !6780)
!6780 = !DILexicalBlockFile(scope: !6781, file: !801, discriminator: 4)
!6781 = distinct !DILexicalBlock(scope: !6775, file: !801, line: 1010, column: 168)
!6782 = !DILocation(line: 1010, column: 177, scope: !6780)
!6783 = !DILocation(line: 1010, column: 171, scope: !6780)
!6784 = !DILocation(line: 1010, column: 175, scope: !6780)
!6785 = !DILocation(line: 1010, column: 192, scope: !6780)
!6786 = !DILocation(line: 1010, column: 191, scope: !6780)
!6787 = !DILocation(line: 1010, column: 185, scope: !6780)
!6788 = !DILocation(line: 1010, column: 189, scope: !6780)
!6789 = !DILocation(line: 1010, column: 206, scope: !6780)
!6790 = !DILocation(line: 1010, column: 205, scope: !6780)
!6791 = !DILocation(line: 1010, column: 199, scope: !6780)
!6792 = !DILocation(line: 1010, column: 203, scope: !6780)
!6793 = !DILocation(line: 1010, column: 212, scope: !6780)
!6794 = !DILocalVariable(name: "a", scope: !6795, file: !801, line: 1010, type: !798)
!6795 = distinct !DILexicalBlock(scope: !6775, file: !801, line: 1010, column: 219)
!6796 = !DILocation(line: 1010, column: 227, scope: !6795)
!6797 = !DILocation(line: 1010, column: 249, scope: !6798)
!6798 = !DILexicalBlockFile(scope: !6795, file: !801, discriminator: 5)
!6799 = !DILocation(line: 1010, column: 248, scope: !6798)
!6800 = !DILocation(line: 1010, column: 247, scope: !6798)
!6801 = !DILocation(line: 1010, column: 245, scope: !6798)
!6802 = !DILocation(line: 1010, column: 227, scope: !6798)
!6803 = !DILocation(line: 1010, column: 270, scope: !6798)
!6804 = !DILocation(line: 1010, column: 276, scope: !6798)
!6805 = !DILocation(line: 1010, column: 275, scope: !6798)
!6806 = !DILocation(line: 1010, column: 274, scope: !6798)
!6807 = !DILocation(line: 1010, column: 272, scope: !6798)
!6808 = !DILocation(line: 1010, column: 292, scope: !6798)
!6809 = !DILocation(line: 1010, column: 290, scope: !6798)
!6810 = !DILocation(line: 1010, column: 300, scope: !6798)
!6811 = !DILocation(line: 1010, column: 298, scope: !6798)
!6812 = !DILocation(line: 1010, column: 303, scope: !6798)
!6813 = !DILocation(line: 1010, column: 307, scope: !6798)
!6814 = !DILocation(line: 1010, column: 309, scope: !6798)
!6815 = !DILocation(line: 1010, column: 295, scope: !6798)
!6816 = !DILocation(line: 1010, column: 282, scope: !6798)
!6817 = !DILocation(line: 1010, column: 263, scope: !6798)
!6818 = !DILocation(line: 1010, column: 257, scope: !6798)
!6819 = !DILocation(line: 1010, column: 261, scope: !6798)
!6820 = !DILocation(line: 1010, column: 334, scope: !6798)
!6821 = !DILocation(line: 1010, column: 340, scope: !6798)
!6822 = !DILocation(line: 1010, column: 339, scope: !6798)
!6823 = !DILocation(line: 1010, column: 338, scope: !6798)
!6824 = !DILocation(line: 1010, column: 336, scope: !6798)
!6825 = !DILocation(line: 1010, column: 356, scope: !6798)
!6826 = !DILocation(line: 1010, column: 354, scope: !6798)
!6827 = !DILocation(line: 1010, column: 364, scope: !6798)
!6828 = !DILocation(line: 1010, column: 362, scope: !6798)
!6829 = !DILocation(line: 1010, column: 367, scope: !6798)
!6830 = !DILocation(line: 1010, column: 371, scope: !6798)
!6831 = !DILocation(line: 1010, column: 373, scope: !6798)
!6832 = !DILocation(line: 1010, column: 359, scope: !6798)
!6833 = !DILocation(line: 1010, column: 346, scope: !6798)
!6834 = !DILocation(line: 1010, column: 327, scope: !6835)
!6835 = !DILexicalBlockFile(scope: !6798, file: !801, discriminator: 9)
!6836 = !DILocation(line: 1010, column: 327, scope: !6798)
!6837 = !DILocation(line: 1010, column: 321, scope: !6798)
!6838 = !DILocation(line: 1010, column: 325, scope: !6798)
!6839 = !DILocation(line: 1010, column: 399, scope: !6798)
!6840 = !DILocation(line: 1010, column: 405, scope: !6798)
!6841 = !DILocation(line: 1010, column: 404, scope: !6798)
!6842 = !DILocation(line: 1010, column: 403, scope: !6798)
!6843 = !DILocation(line: 1010, column: 401, scope: !6798)
!6844 = !DILocation(line: 1010, column: 421, scope: !6798)
!6845 = !DILocation(line: 1010, column: 419, scope: !6798)
!6846 = !DILocation(line: 1010, column: 429, scope: !6798)
!6847 = !DILocation(line: 1010, column: 427, scope: !6798)
!6848 = !DILocation(line: 1010, column: 432, scope: !6798)
!6849 = !DILocation(line: 1010, column: 436, scope: !6798)
!6850 = !DILocation(line: 1010, column: 438, scope: !6798)
!6851 = !DILocation(line: 1010, column: 424, scope: !6798)
!6852 = !DILocation(line: 1010, column: 411, scope: !6798)
!6853 = !DILocation(line: 1010, column: 392, scope: !6854)
!6854 = !DILexicalBlockFile(scope: !6798, file: !801, discriminator: 10)
!6855 = !DILocation(line: 1010, column: 392, scope: !6798)
!6856 = !DILocation(line: 1010, column: 386, scope: !6798)
!6857 = !DILocation(line: 1010, column: 390, scope: !6798)
!6858 = !DILocation(line: 1010, column: 455, scope: !6859)
!6859 = !DILexicalBlockFile(scope: !6739, file: !801, discriminator: 6)
!6860 = !DILocation(line: 1010, column: 462, scope: !6859)
!6861 = !DILocation(line: 1010, column: 469, scope: !6859)
!6862 = !DILocation(line: 1010, column: 477, scope: !6859)
!6863 = !DILocation(line: 1010, column: 485, scope: !6859)
!6864 = !DILocation(line: 1010, column: 493, scope: !6859)
!6865 = !DILocation(line: 1010, column: 501, scope: !6859)
!6866 = !DILocation(line: 1010, column: 505, scope: !6859)
!6867 = !DILocation(line: 1011, column: 17, scope: !6734)
!6868 = distinct !{!6868, !6867}
!6869 = !DILocation(line: 1011, column: 28, scope: !6870)
!6870 = !DILexicalBlockFile(scope: !6871, file: !801, discriminator: 1)
!6871 = distinct !DILexicalBlock(scope: !6872, file: !801, line: 1011, column: 26)
!6872 = distinct !DILexicalBlock(scope: !6734, file: !801, line: 1011, column: 20)
!6873 = !DILocation(line: 1011, column: 27, scope: !6870)
!6874 = !DILocation(line: 1011, column: 26, scope: !6870)
!6875 = !DILocation(line: 1011, column: 52, scope: !6876)
!6876 = !DILexicalBlockFile(scope: !6877, file: !801, discriminator: 2)
!6877 = distinct !DILexicalBlock(scope: !6871, file: !801, line: 1011, column: 34)
!6878 = !DILocation(line: 1011, column: 53, scope: !6876)
!6879 = !DILocation(line: 1011, column: 50, scope: !6876)
!6880 = !DILocation(line: 1011, column: 57, scope: !6876)
!6881 = !DILocation(line: 1011, column: 61, scope: !6876)
!6882 = !DILocation(line: 1011, column: 63, scope: !6876)
!6883 = !DILocation(line: 1011, column: 43, scope: !6876)
!6884 = !DILocation(line: 1011, column: 37, scope: !6876)
!6885 = !DILocation(line: 1011, column: 41, scope: !6876)
!6886 = !DILocation(line: 1011, column: 89, scope: !6876)
!6887 = !DILocation(line: 1011, column: 90, scope: !6876)
!6888 = !DILocation(line: 1011, column: 87, scope: !6876)
!6889 = !DILocation(line: 1011, column: 94, scope: !6876)
!6890 = !DILocation(line: 1011, column: 98, scope: !6876)
!6891 = !DILocation(line: 1011, column: 100, scope: !6876)
!6892 = !DILocation(line: 1011, column: 80, scope: !6893)
!6893 = !DILexicalBlockFile(scope: !6876, file: !801, discriminator: 7)
!6894 = !DILocation(line: 1011, column: 80, scope: !6876)
!6895 = !DILocation(line: 1011, column: 74, scope: !6876)
!6896 = !DILocation(line: 1011, column: 78, scope: !6876)
!6897 = !DILocation(line: 1011, column: 127, scope: !6876)
!6898 = !DILocation(line: 1011, column: 128, scope: !6876)
!6899 = !DILocation(line: 1011, column: 125, scope: !6876)
!6900 = !DILocation(line: 1011, column: 132, scope: !6876)
!6901 = !DILocation(line: 1011, column: 136, scope: !6876)
!6902 = !DILocation(line: 1011, column: 138, scope: !6876)
!6903 = !DILocation(line: 1011, column: 118, scope: !6904)
!6904 = !DILexicalBlockFile(scope: !6876, file: !801, discriminator: 8)
!6905 = !DILocation(line: 1011, column: 118, scope: !6876)
!6906 = !DILocation(line: 1011, column: 112, scope: !6876)
!6907 = !DILocation(line: 1011, column: 116, scope: !6876)
!6908 = !DILocation(line: 1011, column: 149, scope: !6876)
!6909 = !DILocation(line: 1011, column: 168, scope: !6910)
!6910 = !DILexicalBlockFile(scope: !6911, file: !801, discriminator: 3)
!6911 = distinct !DILexicalBlock(scope: !6871, file: !801, line: 1011, column: 160)
!6912 = !DILocation(line: 1011, column: 167, scope: !6910)
!6913 = !DILocation(line: 1011, column: 164, scope: !6910)
!6914 = !DILocation(line: 1011, column: 160, scope: !6910)
!6915 = !DILocation(line: 1011, column: 184, scope: !6916)
!6916 = !DILexicalBlockFile(scope: !6917, file: !801, discriminator: 4)
!6917 = distinct !DILexicalBlock(scope: !6911, file: !801, line: 1011, column: 174)
!6918 = !DILocation(line: 1011, column: 183, scope: !6916)
!6919 = !DILocation(line: 1011, column: 177, scope: !6916)
!6920 = !DILocation(line: 1011, column: 181, scope: !6916)
!6921 = !DILocation(line: 1011, column: 198, scope: !6916)
!6922 = !DILocation(line: 1011, column: 197, scope: !6916)
!6923 = !DILocation(line: 1011, column: 191, scope: !6916)
!6924 = !DILocation(line: 1011, column: 195, scope: !6916)
!6925 = !DILocation(line: 1011, column: 212, scope: !6916)
!6926 = !DILocation(line: 1011, column: 211, scope: !6916)
!6927 = !DILocation(line: 1011, column: 205, scope: !6916)
!6928 = !DILocation(line: 1011, column: 209, scope: !6916)
!6929 = !DILocation(line: 1011, column: 218, scope: !6916)
!6930 = !DILocalVariable(name: "a", scope: !6931, file: !801, line: 1011, type: !798)
!6931 = distinct !DILexicalBlock(scope: !6911, file: !801, line: 1011, column: 225)
!6932 = !DILocation(line: 1011, column: 233, scope: !6931)
!6933 = !DILocation(line: 1011, column: 255, scope: !6934)
!6934 = !DILexicalBlockFile(scope: !6931, file: !801, discriminator: 5)
!6935 = !DILocation(line: 1011, column: 254, scope: !6934)
!6936 = !DILocation(line: 1011, column: 253, scope: !6934)
!6937 = !DILocation(line: 1011, column: 251, scope: !6934)
!6938 = !DILocation(line: 1011, column: 233, scope: !6934)
!6939 = !DILocation(line: 1011, column: 276, scope: !6934)
!6940 = !DILocation(line: 1011, column: 282, scope: !6934)
!6941 = !DILocation(line: 1011, column: 281, scope: !6934)
!6942 = !DILocation(line: 1011, column: 280, scope: !6934)
!6943 = !DILocation(line: 1011, column: 278, scope: !6934)
!6944 = !DILocation(line: 1011, column: 298, scope: !6934)
!6945 = !DILocation(line: 1011, column: 296, scope: !6934)
!6946 = !DILocation(line: 1011, column: 306, scope: !6934)
!6947 = !DILocation(line: 1011, column: 307, scope: !6934)
!6948 = !DILocation(line: 1011, column: 304, scope: !6934)
!6949 = !DILocation(line: 1011, column: 311, scope: !6934)
!6950 = !DILocation(line: 1011, column: 315, scope: !6934)
!6951 = !DILocation(line: 1011, column: 317, scope: !6934)
!6952 = !DILocation(line: 1011, column: 301, scope: !6934)
!6953 = !DILocation(line: 1011, column: 288, scope: !6934)
!6954 = !DILocation(line: 1011, column: 269, scope: !6934)
!6955 = !DILocation(line: 1011, column: 263, scope: !6934)
!6956 = !DILocation(line: 1011, column: 267, scope: !6934)
!6957 = !DILocation(line: 1011, column: 342, scope: !6934)
!6958 = !DILocation(line: 1011, column: 348, scope: !6934)
!6959 = !DILocation(line: 1011, column: 347, scope: !6934)
!6960 = !DILocation(line: 1011, column: 346, scope: !6934)
!6961 = !DILocation(line: 1011, column: 344, scope: !6934)
!6962 = !DILocation(line: 1011, column: 364, scope: !6934)
!6963 = !DILocation(line: 1011, column: 362, scope: !6934)
!6964 = !DILocation(line: 1011, column: 372, scope: !6934)
!6965 = !DILocation(line: 1011, column: 373, scope: !6934)
!6966 = !DILocation(line: 1011, column: 370, scope: !6934)
!6967 = !DILocation(line: 1011, column: 377, scope: !6934)
!6968 = !DILocation(line: 1011, column: 381, scope: !6934)
!6969 = !DILocation(line: 1011, column: 383, scope: !6934)
!6970 = !DILocation(line: 1011, column: 367, scope: !6934)
!6971 = !DILocation(line: 1011, column: 354, scope: !6934)
!6972 = !DILocation(line: 1011, column: 335, scope: !6973)
!6973 = !DILexicalBlockFile(scope: !6934, file: !801, discriminator: 9)
!6974 = !DILocation(line: 1011, column: 335, scope: !6934)
!6975 = !DILocation(line: 1011, column: 329, scope: !6934)
!6976 = !DILocation(line: 1011, column: 333, scope: !6934)
!6977 = !DILocation(line: 1011, column: 409, scope: !6934)
!6978 = !DILocation(line: 1011, column: 415, scope: !6934)
!6979 = !DILocation(line: 1011, column: 414, scope: !6934)
!6980 = !DILocation(line: 1011, column: 413, scope: !6934)
!6981 = !DILocation(line: 1011, column: 411, scope: !6934)
!6982 = !DILocation(line: 1011, column: 431, scope: !6934)
!6983 = !DILocation(line: 1011, column: 429, scope: !6934)
!6984 = !DILocation(line: 1011, column: 439, scope: !6934)
!6985 = !DILocation(line: 1011, column: 440, scope: !6934)
!6986 = !DILocation(line: 1011, column: 437, scope: !6934)
!6987 = !DILocation(line: 1011, column: 444, scope: !6934)
!6988 = !DILocation(line: 1011, column: 448, scope: !6934)
!6989 = !DILocation(line: 1011, column: 450, scope: !6934)
!6990 = !DILocation(line: 1011, column: 434, scope: !6934)
!6991 = !DILocation(line: 1011, column: 421, scope: !6934)
!6992 = !DILocation(line: 1011, column: 402, scope: !6993)
!6993 = !DILexicalBlockFile(scope: !6934, file: !801, discriminator: 10)
!6994 = !DILocation(line: 1011, column: 402, scope: !6934)
!6995 = !DILocation(line: 1011, column: 396, scope: !6934)
!6996 = !DILocation(line: 1011, column: 400, scope: !6934)
!6997 = !DILocation(line: 1011, column: 467, scope: !6998)
!6998 = !DILexicalBlockFile(scope: !6872, file: !801, discriminator: 6)
!6999 = !DILocation(line: 1011, column: 474, scope: !6998)
!7000 = !DILocation(line: 1011, column: 481, scope: !6998)
!7001 = !DILocation(line: 1011, column: 489, scope: !6998)
!7002 = !DILocation(line: 1011, column: 497, scope: !6998)
!7003 = !DILocation(line: 1011, column: 505, scope: !6998)
!7004 = !DILocation(line: 1011, column: 513, scope: !6998)
!7005 = !DILocation(line: 1011, column: 517, scope: !6998)
!7006 = !DILocation(line: 1012, column: 13, scope: !6734)
!7007 = !DILocation(line: 1009, column: 34, scope: !7008)
!7008 = !DILexicalBlockFile(scope: !6729, file: !801, discriminator: 2)
!7009 = !DILocation(line: 1009, column: 13, scope: !7008)
!7010 = distinct !{!7010, !7011}
!7011 = !DILocation(line: 1009, column: 13, scope: !6725)
!7012 = !DILocation(line: 1013, column: 9, scope: !6725)
!7013 = !DILocation(line: 1013, column: 20, scope: !7014)
!7014 = !DILexicalBlockFile(scope: !7015, file: !801, discriminator: 1)
!7015 = distinct !DILexicalBlock(scope: !6720, file: !801, line: 1013, column: 20)
!7016 = !DILocation(line: 1013, column: 24, scope: !7014)
!7017 = !DILocation(line: 1014, column: 20, scope: !7018)
!7018 = distinct !DILexicalBlock(scope: !7019, file: !801, line: 1014, column: 13)
!7019 = distinct !DILexicalBlock(scope: !7015, file: !801, line: 1013, column: 47)
!7020 = !DILocation(line: 1014, column: 18, scope: !7018)
!7021 = !DILocation(line: 1014, column: 25, scope: !7022)
!7022 = !DILexicalBlockFile(scope: !7023, file: !801, discriminator: 1)
!7023 = distinct !DILexicalBlock(scope: !7018, file: !801, line: 1014, column: 13)
!7024 = !DILocation(line: 1014, column: 29, scope: !7022)
!7025 = !DILocation(line: 1014, column: 27, scope: !7022)
!7026 = !DILocation(line: 1014, column: 13, scope: !7022)
!7027 = !DILocation(line: 1015, column: 17, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !7023, file: !801, line: 1014, column: 40)
!7029 = distinct !{!7029, !7027}
!7030 = !DILocation(line: 1015, column: 28, scope: !7031)
!7031 = !DILexicalBlockFile(scope: !7032, file: !801, discriminator: 1)
!7032 = distinct !DILexicalBlock(scope: !7033, file: !801, line: 1015, column: 26)
!7033 = distinct !DILexicalBlock(scope: !7028, file: !801, line: 1015, column: 20)
!7034 = !DILocation(line: 1015, column: 27, scope: !7031)
!7035 = !DILocation(line: 1015, column: 26, scope: !7031)
!7036 = !DILocation(line: 1015, column: 52, scope: !7037)
!7037 = !DILexicalBlockFile(scope: !7038, file: !801, discriminator: 2)
!7038 = distinct !DILexicalBlock(scope: !7032, file: !801, line: 1015, column: 34)
!7039 = !DILocation(line: 1015, column: 50, scope: !7037)
!7040 = !DILocation(line: 1015, column: 55, scope: !7037)
!7041 = !DILocation(line: 1015, column: 59, scope: !7037)
!7042 = !DILocation(line: 1015, column: 61, scope: !7037)
!7043 = !DILocation(line: 1015, column: 43, scope: !7037)
!7044 = !DILocation(line: 1015, column: 37, scope: !7037)
!7045 = !DILocation(line: 1015, column: 41, scope: !7037)
!7046 = !DILocation(line: 1015, column: 71, scope: !7037)
!7047 = !DILocation(line: 1015, column: 90, scope: !7048)
!7048 = !DILexicalBlockFile(scope: !7049, file: !801, discriminator: 3)
!7049 = distinct !DILexicalBlock(scope: !7032, file: !801, line: 1015, column: 82)
!7050 = !DILocation(line: 1015, column: 89, scope: !7048)
!7051 = !DILocation(line: 1015, column: 86, scope: !7048)
!7052 = !DILocation(line: 1015, column: 82, scope: !7048)
!7053 = !DILocation(line: 1015, column: 106, scope: !7054)
!7054 = !DILexicalBlockFile(scope: !7055, file: !801, discriminator: 4)
!7055 = distinct !DILexicalBlock(scope: !7049, file: !801, line: 1015, column: 96)
!7056 = !DILocation(line: 1015, column: 105, scope: !7054)
!7057 = !DILocation(line: 1015, column: 99, scope: !7054)
!7058 = !DILocation(line: 1015, column: 103, scope: !7054)
!7059 = !DILocation(line: 1015, column: 112, scope: !7054)
!7060 = !DILocalVariable(name: "a", scope: !7061, file: !801, line: 1015, type: !798)
!7061 = distinct !DILexicalBlock(scope: !7049, file: !801, line: 1015, column: 119)
!7062 = !DILocation(line: 1015, column: 127, scope: !7061)
!7063 = !DILocation(line: 1015, column: 149, scope: !7064)
!7064 = !DILexicalBlockFile(scope: !7061, file: !801, discriminator: 5)
!7065 = !DILocation(line: 1015, column: 148, scope: !7064)
!7066 = !DILocation(line: 1015, column: 147, scope: !7064)
!7067 = !DILocation(line: 1015, column: 145, scope: !7064)
!7068 = !DILocation(line: 1015, column: 127, scope: !7064)
!7069 = !DILocation(line: 1015, column: 170, scope: !7064)
!7070 = !DILocation(line: 1015, column: 176, scope: !7064)
!7071 = !DILocation(line: 1015, column: 175, scope: !7064)
!7072 = !DILocation(line: 1015, column: 174, scope: !7064)
!7073 = !DILocation(line: 1015, column: 172, scope: !7064)
!7074 = !DILocation(line: 1015, column: 192, scope: !7064)
!7075 = !DILocation(line: 1015, column: 190, scope: !7064)
!7076 = !DILocation(line: 1015, column: 200, scope: !7064)
!7077 = !DILocation(line: 1015, column: 198, scope: !7064)
!7078 = !DILocation(line: 1015, column: 203, scope: !7064)
!7079 = !DILocation(line: 1015, column: 207, scope: !7064)
!7080 = !DILocation(line: 1015, column: 209, scope: !7064)
!7081 = !DILocation(line: 1015, column: 195, scope: !7064)
!7082 = !DILocation(line: 1015, column: 182, scope: !7064)
!7083 = !DILocation(line: 1015, column: 163, scope: !7064)
!7084 = !DILocation(line: 1015, column: 157, scope: !7064)
!7085 = !DILocation(line: 1015, column: 161, scope: !7064)
!7086 = !DILocation(line: 1015, column: 225, scope: !7087)
!7087 = !DILexicalBlockFile(scope: !7033, file: !801, discriminator: 6)
!7088 = !DILocation(line: 1015, column: 233, scope: !7087)
!7089 = !DILocation(line: 1015, column: 242, scope: !7087)
!7090 = !DILocation(line: 1015, column: 248, scope: !7087)
!7091 = !DILocation(line: 1016, column: 17, scope: !7028)
!7092 = distinct !{!7092, !7091}
!7093 = !DILocation(line: 1016, column: 27, scope: !7094)
!7094 = !DILexicalBlockFile(scope: !7095, file: !801, discriminator: 1)
!7095 = distinct !DILexicalBlock(scope: !7096, file: !801, line: 1016, column: 26)
!7096 = distinct !DILexicalBlock(scope: !7028, file: !801, line: 1016, column: 20)
!7097 = !DILocation(line: 1016, column: 35, scope: !7094)
!7098 = !DILocation(line: 1016, column: 39, scope: !7099)
!7099 = !DILexicalBlockFile(scope: !7095, file: !801, discriminator: 2)
!7100 = !DILocation(line: 1016, column: 26, scope: !7099)
!7101 = !DILocation(line: 1016, column: 66, scope: !7102)
!7102 = !DILexicalBlockFile(scope: !7103, file: !801, discriminator: 3)
!7103 = distinct !DILexicalBlock(scope: !7095, file: !801, line: 1016, column: 48)
!7104 = !DILocation(line: 1016, column: 64, scope: !7102)
!7105 = !DILocation(line: 1016, column: 69, scope: !7102)
!7106 = !DILocation(line: 1016, column: 73, scope: !7102)
!7107 = !DILocation(line: 1016, column: 75, scope: !7102)
!7108 = !DILocation(line: 1016, column: 57, scope: !7102)
!7109 = !DILocation(line: 1016, column: 51, scope: !7102)
!7110 = !DILocation(line: 1016, column: 55, scope: !7102)
!7111 = !DILocation(line: 1016, column: 102, scope: !7102)
!7112 = !DILocation(line: 1016, column: 100, scope: !7102)
!7113 = !DILocation(line: 1016, column: 105, scope: !7102)
!7114 = !DILocation(line: 1016, column: 109, scope: !7102)
!7115 = !DILocation(line: 1016, column: 111, scope: !7102)
!7116 = !DILocation(line: 1016, column: 93, scope: !7117)
!7117 = !DILexicalBlockFile(scope: !7102, file: !801, discriminator: 9)
!7118 = !DILocation(line: 1016, column: 93, scope: !7102)
!7119 = !DILocation(line: 1016, column: 87, scope: !7102)
!7120 = !DILocation(line: 1016, column: 91, scope: !7102)
!7121 = !DILocation(line: 1016, column: 122, scope: !7102)
!7122 = !DILocation(line: 1016, column: 140, scope: !7123)
!7123 = !DILexicalBlockFile(scope: !7124, file: !801, discriminator: 4)
!7124 = distinct !DILexicalBlock(scope: !7095, file: !801, line: 1016, column: 133)
!7125 = !DILocation(line: 1016, column: 137, scope: !7123)
!7126 = !DILocation(line: 1016, column: 148, scope: !7123)
!7127 = !DILocation(line: 1016, column: 158, scope: !7128)
!7128 = !DILexicalBlockFile(scope: !7124, file: !801, discriminator: 5)
!7129 = !DILocation(line: 1016, column: 155, scope: !7128)
!7130 = !DILocation(line: 1016, column: 133, scope: !7128)
!7131 = !DILocation(line: 1016, column: 177, scope: !7132)
!7132 = !DILexicalBlockFile(scope: !7133, file: !801, discriminator: 6)
!7133 = distinct !DILexicalBlock(scope: !7124, file: !801, line: 1016, column: 167)
!7134 = !DILocation(line: 1016, column: 176, scope: !7132)
!7135 = !DILocation(line: 1016, column: 170, scope: !7132)
!7136 = !DILocation(line: 1016, column: 174, scope: !7132)
!7137 = !DILocation(line: 1016, column: 191, scope: !7132)
!7138 = !DILocation(line: 1016, column: 190, scope: !7132)
!7139 = !DILocation(line: 1016, column: 184, scope: !7132)
!7140 = !DILocation(line: 1016, column: 188, scope: !7132)
!7141 = !DILocation(line: 1016, column: 197, scope: !7132)
!7142 = !DILocalVariable(name: "a0", scope: !7143, file: !801, line: 1016, type: !798)
!7143 = distinct !DILexicalBlock(scope: !7124, file: !801, line: 1016, column: 204)
!7144 = !DILocation(line: 1016, column: 212, scope: !7143)
!7145 = !DILocation(line: 1016, column: 233, scope: !7146)
!7146 = !DILexicalBlockFile(scope: !7143, file: !801, discriminator: 7)
!7147 = !DILocation(line: 1016, column: 231, scope: !7146)
!7148 = !DILocation(line: 1016, column: 212, scope: !7146)
!7149 = !DILocalVariable(name: "a1", scope: !7143, file: !801, line: 1016, type: !798)
!7150 = !DILocation(line: 1016, column: 248, scope: !7143)
!7151 = !DILocation(line: 1016, column: 269, scope: !7146)
!7152 = !DILocation(line: 1016, column: 267, scope: !7146)
!7153 = !DILocation(line: 1016, column: 248, scope: !7146)
!7154 = !DILocalVariable(name: "b", scope: !7143, file: !801, line: 1016, type: !798)
!7155 = !DILocation(line: 1016, column: 284, scope: !7143)
!7156 = !DILocation(line: 1016, column: 295, scope: !7146)
!7157 = !DILocation(line: 1016, column: 293, scope: !7146)
!7158 = !DILocation(line: 1016, column: 300, scope: !7146)
!7159 = !DILocation(line: 1016, column: 298, scope: !7146)
!7160 = !DILocation(line: 1016, column: 284, scope: !7146)
!7161 = !DILocation(line: 1016, column: 318, scope: !7146)
!7162 = !DILocation(line: 1016, column: 323, scope: !7146)
!7163 = !DILocation(line: 1016, column: 321, scope: !7146)
!7164 = !DILocation(line: 1016, column: 333, scope: !7146)
!7165 = !DILocation(line: 1016, column: 338, scope: !7146)
!7166 = !DILocation(line: 1016, column: 336, scope: !7146)
!7167 = !DILocation(line: 1016, column: 331, scope: !7146)
!7168 = !DILocation(line: 1016, column: 348, scope: !7146)
!7169 = !DILocation(line: 1016, column: 355, scope: !7146)
!7170 = !DILocation(line: 1016, column: 353, scope: !7146)
!7171 = !DILocation(line: 1016, column: 358, scope: !7146)
!7172 = !DILocation(line: 1016, column: 362, scope: !7146)
!7173 = !DILocation(line: 1016, column: 364, scope: !7146)
!7174 = !DILocation(line: 1016, column: 350, scope: !7146)
!7175 = !DILocation(line: 1016, column: 346, scope: !7146)
!7176 = !DILocation(line: 1016, column: 311, scope: !7146)
!7177 = !DILocation(line: 1016, column: 305, scope: !7146)
!7178 = !DILocation(line: 1016, column: 309, scope: !7146)
!7179 = !DILocation(line: 1016, column: 390, scope: !7146)
!7180 = !DILocation(line: 1016, column: 395, scope: !7146)
!7181 = !DILocation(line: 1016, column: 393, scope: !7146)
!7182 = !DILocation(line: 1016, column: 405, scope: !7146)
!7183 = !DILocation(line: 1016, column: 410, scope: !7146)
!7184 = !DILocation(line: 1016, column: 408, scope: !7146)
!7185 = !DILocation(line: 1016, column: 403, scope: !7146)
!7186 = !DILocation(line: 1016, column: 420, scope: !7146)
!7187 = !DILocation(line: 1016, column: 427, scope: !7146)
!7188 = !DILocation(line: 1016, column: 425, scope: !7146)
!7189 = !DILocation(line: 1016, column: 430, scope: !7146)
!7190 = !DILocation(line: 1016, column: 434, scope: !7146)
!7191 = !DILocation(line: 1016, column: 436, scope: !7146)
!7192 = !DILocation(line: 1016, column: 422, scope: !7146)
!7193 = !DILocation(line: 1016, column: 418, scope: !7146)
!7194 = !DILocation(line: 1016, column: 383, scope: !7195)
!7195 = !DILexicalBlockFile(scope: !7146, file: !801, discriminator: 10)
!7196 = !DILocation(line: 1016, column: 383, scope: !7146)
!7197 = !DILocation(line: 1016, column: 377, scope: !7146)
!7198 = !DILocation(line: 1016, column: 381, scope: !7146)
!7199 = !DILocation(line: 1016, column: 455, scope: !7200)
!7200 = !DILexicalBlockFile(scope: !7096, file: !801, discriminator: 8)
!7201 = !DILocation(line: 1016, column: 466, scope: !7200)
!7202 = !DILocation(line: 1016, column: 476, scope: !7200)
!7203 = !DILocation(line: 1016, column: 483, scope: !7200)
!7204 = !DILocation(line: 1016, column: 490, scope: !7200)
!7205 = !DILocation(line: 1016, column: 494, scope: !7200)
!7206 = !DILocation(line: 1017, column: 17, scope: !7028)
!7207 = distinct !{!7207, !7206}
!7208 = !DILocation(line: 1017, column: 28, scope: !7209)
!7209 = !DILexicalBlockFile(scope: !7210, file: !801, discriminator: 1)
!7210 = distinct !DILexicalBlock(scope: !7211, file: !801, line: 1017, column: 26)
!7211 = distinct !DILexicalBlock(scope: !7028, file: !801, line: 1017, column: 20)
!7212 = !DILocation(line: 1017, column: 27, scope: !7209)
!7213 = !DILocation(line: 1017, column: 26, scope: !7209)
!7214 = !DILocation(line: 1017, column: 52, scope: !7215)
!7215 = !DILexicalBlockFile(scope: !7216, file: !801, discriminator: 2)
!7216 = distinct !DILexicalBlock(scope: !7210, file: !801, line: 1017, column: 34)
!7217 = !DILocation(line: 1017, column: 53, scope: !7215)
!7218 = !DILocation(line: 1017, column: 50, scope: !7215)
!7219 = !DILocation(line: 1017, column: 57, scope: !7215)
!7220 = !DILocation(line: 1017, column: 61, scope: !7215)
!7221 = !DILocation(line: 1017, column: 63, scope: !7215)
!7222 = !DILocation(line: 1017, column: 43, scope: !7215)
!7223 = !DILocation(line: 1017, column: 37, scope: !7215)
!7224 = !DILocation(line: 1017, column: 41, scope: !7215)
!7225 = !DILocation(line: 1017, column: 73, scope: !7215)
!7226 = !DILocation(line: 1017, column: 92, scope: !7227)
!7227 = !DILexicalBlockFile(scope: !7228, file: !801, discriminator: 3)
!7228 = distinct !DILexicalBlock(scope: !7210, file: !801, line: 1017, column: 84)
!7229 = !DILocation(line: 1017, column: 91, scope: !7227)
!7230 = !DILocation(line: 1017, column: 88, scope: !7227)
!7231 = !DILocation(line: 1017, column: 84, scope: !7227)
!7232 = !DILocation(line: 1017, column: 108, scope: !7233)
!7233 = !DILexicalBlockFile(scope: !7234, file: !801, discriminator: 4)
!7234 = distinct !DILexicalBlock(scope: !7228, file: !801, line: 1017, column: 98)
!7235 = !DILocation(line: 1017, column: 107, scope: !7233)
!7236 = !DILocation(line: 1017, column: 101, scope: !7233)
!7237 = !DILocation(line: 1017, column: 105, scope: !7233)
!7238 = !DILocation(line: 1017, column: 114, scope: !7233)
!7239 = !DILocalVariable(name: "a", scope: !7240, file: !801, line: 1017, type: !798)
!7240 = distinct !DILexicalBlock(scope: !7228, file: !801, line: 1017, column: 121)
!7241 = !DILocation(line: 1017, column: 129, scope: !7240)
!7242 = !DILocation(line: 1017, column: 151, scope: !7243)
!7243 = !DILexicalBlockFile(scope: !7240, file: !801, discriminator: 5)
!7244 = !DILocation(line: 1017, column: 150, scope: !7243)
!7245 = !DILocation(line: 1017, column: 149, scope: !7243)
!7246 = !DILocation(line: 1017, column: 147, scope: !7243)
!7247 = !DILocation(line: 1017, column: 129, scope: !7243)
!7248 = !DILocation(line: 1017, column: 172, scope: !7243)
!7249 = !DILocation(line: 1017, column: 178, scope: !7243)
!7250 = !DILocation(line: 1017, column: 177, scope: !7243)
!7251 = !DILocation(line: 1017, column: 176, scope: !7243)
!7252 = !DILocation(line: 1017, column: 174, scope: !7243)
!7253 = !DILocation(line: 1017, column: 194, scope: !7243)
!7254 = !DILocation(line: 1017, column: 192, scope: !7243)
!7255 = !DILocation(line: 1017, column: 202, scope: !7243)
!7256 = !DILocation(line: 1017, column: 203, scope: !7243)
!7257 = !DILocation(line: 1017, column: 200, scope: !7243)
!7258 = !DILocation(line: 1017, column: 207, scope: !7243)
!7259 = !DILocation(line: 1017, column: 211, scope: !7243)
!7260 = !DILocation(line: 1017, column: 213, scope: !7243)
!7261 = !DILocation(line: 1017, column: 197, scope: !7243)
!7262 = !DILocation(line: 1017, column: 184, scope: !7243)
!7263 = !DILocation(line: 1017, column: 165, scope: !7243)
!7264 = !DILocation(line: 1017, column: 159, scope: !7243)
!7265 = !DILocation(line: 1017, column: 163, scope: !7243)
!7266 = !DILocation(line: 1017, column: 229, scope: !7267)
!7267 = !DILexicalBlockFile(scope: !7211, file: !801, discriminator: 6)
!7268 = !DILocation(line: 1017, column: 237, scope: !7267)
!7269 = !DILocation(line: 1017, column: 246, scope: !7267)
!7270 = !DILocation(line: 1017, column: 252, scope: !7267)
!7271 = !DILocation(line: 1018, column: 13, scope: !7028)
!7272 = !DILocation(line: 1014, column: 34, scope: !7273)
!7273 = !DILexicalBlockFile(scope: !7023, file: !801, discriminator: 2)
!7274 = !DILocation(line: 1014, column: 13, scope: !7273)
!7275 = distinct !{!7275, !7276}
!7276 = !DILocation(line: 1014, column: 13, scope: !7019)
!7277 = !DILocation(line: 1019, column: 9, scope: !7019)
!7278 = !DILocation(line: 1020, column: 20, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7280, file: !801, line: 1020, column: 13)
!7280 = distinct !DILexicalBlock(scope: !7015, file: !801, line: 1019, column: 16)
!7281 = !DILocation(line: 1020, column: 18, scope: !7279)
!7282 = !DILocation(line: 1020, column: 25, scope: !7283)
!7283 = !DILexicalBlockFile(scope: !7284, file: !801, discriminator: 1)
!7284 = distinct !DILexicalBlock(scope: !7279, file: !801, line: 1020, column: 13)
!7285 = !DILocation(line: 1020, column: 29, scope: !7283)
!7286 = !DILocation(line: 1020, column: 27, scope: !7283)
!7287 = !DILocation(line: 1020, column: 13, scope: !7283)
!7288 = !DILocation(line: 1021, column: 17, scope: !7289)
!7289 = distinct !DILexicalBlock(scope: !7284, file: !801, line: 1020, column: 40)
!7290 = distinct !{!7290, !7288}
!7291 = !DILocation(line: 1021, column: 28, scope: !7292)
!7292 = !DILexicalBlockFile(scope: !7293, file: !801, discriminator: 1)
!7293 = distinct !DILexicalBlock(scope: !7294, file: !801, line: 1021, column: 26)
!7294 = distinct !DILexicalBlock(scope: !7289, file: !801, line: 1021, column: 20)
!7295 = !DILocation(line: 1021, column: 27, scope: !7292)
!7296 = !DILocation(line: 1021, column: 26, scope: !7292)
!7297 = !DILocation(line: 1021, column: 52, scope: !7298)
!7298 = !DILexicalBlockFile(scope: !7299, file: !801, discriminator: 2)
!7299 = distinct !DILexicalBlock(scope: !7293, file: !801, line: 1021, column: 34)
!7300 = !DILocation(line: 1021, column: 50, scope: !7298)
!7301 = !DILocation(line: 1021, column: 55, scope: !7298)
!7302 = !DILocation(line: 1021, column: 59, scope: !7298)
!7303 = !DILocation(line: 1021, column: 61, scope: !7298)
!7304 = !DILocation(line: 1021, column: 43, scope: !7298)
!7305 = !DILocation(line: 1021, column: 37, scope: !7298)
!7306 = !DILocation(line: 1021, column: 41, scope: !7298)
!7307 = !DILocation(line: 1021, column: 71, scope: !7298)
!7308 = !DILocation(line: 1021, column: 90, scope: !7309)
!7309 = !DILexicalBlockFile(scope: !7310, file: !801, discriminator: 3)
!7310 = distinct !DILexicalBlock(scope: !7293, file: !801, line: 1021, column: 82)
!7311 = !DILocation(line: 1021, column: 89, scope: !7309)
!7312 = !DILocation(line: 1021, column: 86, scope: !7309)
!7313 = !DILocation(line: 1021, column: 82, scope: !7309)
!7314 = !DILocation(line: 1021, column: 106, scope: !7315)
!7315 = !DILexicalBlockFile(scope: !7316, file: !801, discriminator: 4)
!7316 = distinct !DILexicalBlock(scope: !7310, file: !801, line: 1021, column: 96)
!7317 = !DILocation(line: 1021, column: 105, scope: !7315)
!7318 = !DILocation(line: 1021, column: 99, scope: !7315)
!7319 = !DILocation(line: 1021, column: 103, scope: !7315)
!7320 = !DILocation(line: 1021, column: 112, scope: !7315)
!7321 = !DILocalVariable(name: "a", scope: !7322, file: !801, line: 1021, type: !798)
!7322 = distinct !DILexicalBlock(scope: !7310, file: !801, line: 1021, column: 119)
!7323 = !DILocation(line: 1021, column: 127, scope: !7322)
!7324 = !DILocation(line: 1021, column: 149, scope: !7325)
!7325 = !DILexicalBlockFile(scope: !7322, file: !801, discriminator: 5)
!7326 = !DILocation(line: 1021, column: 148, scope: !7325)
!7327 = !DILocation(line: 1021, column: 147, scope: !7325)
!7328 = !DILocation(line: 1021, column: 145, scope: !7325)
!7329 = !DILocation(line: 1021, column: 127, scope: !7325)
!7330 = !DILocation(line: 1021, column: 170, scope: !7325)
!7331 = !DILocation(line: 1021, column: 176, scope: !7325)
!7332 = !DILocation(line: 1021, column: 175, scope: !7325)
!7333 = !DILocation(line: 1021, column: 174, scope: !7325)
!7334 = !DILocation(line: 1021, column: 172, scope: !7325)
!7335 = !DILocation(line: 1021, column: 192, scope: !7325)
!7336 = !DILocation(line: 1021, column: 190, scope: !7325)
!7337 = !DILocation(line: 1021, column: 200, scope: !7325)
!7338 = !DILocation(line: 1021, column: 198, scope: !7325)
!7339 = !DILocation(line: 1021, column: 203, scope: !7325)
!7340 = !DILocation(line: 1021, column: 207, scope: !7325)
!7341 = !DILocation(line: 1021, column: 209, scope: !7325)
!7342 = !DILocation(line: 1021, column: 195, scope: !7325)
!7343 = !DILocation(line: 1021, column: 182, scope: !7325)
!7344 = !DILocation(line: 1021, column: 163, scope: !7325)
!7345 = !DILocation(line: 1021, column: 157, scope: !7325)
!7346 = !DILocation(line: 1021, column: 161, scope: !7325)
!7347 = !DILocation(line: 1021, column: 225, scope: !7348)
!7348 = !DILexicalBlockFile(scope: !7294, file: !801, discriminator: 6)
!7349 = !DILocation(line: 1021, column: 233, scope: !7348)
!7350 = !DILocation(line: 1021, column: 242, scope: !7348)
!7351 = !DILocation(line: 1021, column: 248, scope: !7348)
!7352 = !DILocation(line: 1022, column: 17, scope: !7289)
!7353 = distinct !{!7353, !7352}
!7354 = !DILocation(line: 1022, column: 28, scope: !7355)
!7355 = !DILexicalBlockFile(scope: !7356, file: !801, discriminator: 1)
!7356 = distinct !DILexicalBlock(scope: !7357, file: !801, line: 1022, column: 26)
!7357 = distinct !DILexicalBlock(scope: !7289, file: !801, line: 1022, column: 20)
!7358 = !DILocation(line: 1022, column: 27, scope: !7355)
!7359 = !DILocation(line: 1022, column: 26, scope: !7355)
!7360 = !DILocation(line: 1022, column: 52, scope: !7361)
!7361 = !DILexicalBlockFile(scope: !7362, file: !801, discriminator: 2)
!7362 = distinct !DILexicalBlock(scope: !7356, file: !801, line: 1022, column: 34)
!7363 = !DILocation(line: 1022, column: 53, scope: !7361)
!7364 = !DILocation(line: 1022, column: 50, scope: !7361)
!7365 = !DILocation(line: 1022, column: 57, scope: !7361)
!7366 = !DILocation(line: 1022, column: 61, scope: !7361)
!7367 = !DILocation(line: 1022, column: 63, scope: !7361)
!7368 = !DILocation(line: 1022, column: 43, scope: !7361)
!7369 = !DILocation(line: 1022, column: 37, scope: !7361)
!7370 = !DILocation(line: 1022, column: 41, scope: !7361)
!7371 = !DILocation(line: 1022, column: 73, scope: !7361)
!7372 = !DILocation(line: 1022, column: 92, scope: !7373)
!7373 = !DILexicalBlockFile(scope: !7374, file: !801, discriminator: 3)
!7374 = distinct !DILexicalBlock(scope: !7356, file: !801, line: 1022, column: 84)
!7375 = !DILocation(line: 1022, column: 91, scope: !7373)
!7376 = !DILocation(line: 1022, column: 88, scope: !7373)
!7377 = !DILocation(line: 1022, column: 84, scope: !7373)
!7378 = !DILocation(line: 1022, column: 108, scope: !7379)
!7379 = !DILexicalBlockFile(scope: !7380, file: !801, discriminator: 4)
!7380 = distinct !DILexicalBlock(scope: !7374, file: !801, line: 1022, column: 98)
!7381 = !DILocation(line: 1022, column: 107, scope: !7379)
!7382 = !DILocation(line: 1022, column: 101, scope: !7379)
!7383 = !DILocation(line: 1022, column: 105, scope: !7379)
!7384 = !DILocation(line: 1022, column: 114, scope: !7379)
!7385 = !DILocalVariable(name: "a", scope: !7386, file: !801, line: 1022, type: !798)
!7386 = distinct !DILexicalBlock(scope: !7374, file: !801, line: 1022, column: 121)
!7387 = !DILocation(line: 1022, column: 129, scope: !7386)
!7388 = !DILocation(line: 1022, column: 151, scope: !7389)
!7389 = !DILexicalBlockFile(scope: !7386, file: !801, discriminator: 5)
!7390 = !DILocation(line: 1022, column: 150, scope: !7389)
!7391 = !DILocation(line: 1022, column: 149, scope: !7389)
!7392 = !DILocation(line: 1022, column: 147, scope: !7389)
!7393 = !DILocation(line: 1022, column: 129, scope: !7389)
!7394 = !DILocation(line: 1022, column: 172, scope: !7389)
!7395 = !DILocation(line: 1022, column: 178, scope: !7389)
!7396 = !DILocation(line: 1022, column: 177, scope: !7389)
!7397 = !DILocation(line: 1022, column: 176, scope: !7389)
!7398 = !DILocation(line: 1022, column: 174, scope: !7389)
!7399 = !DILocation(line: 1022, column: 194, scope: !7389)
!7400 = !DILocation(line: 1022, column: 192, scope: !7389)
!7401 = !DILocation(line: 1022, column: 202, scope: !7389)
!7402 = !DILocation(line: 1022, column: 203, scope: !7389)
!7403 = !DILocation(line: 1022, column: 200, scope: !7389)
!7404 = !DILocation(line: 1022, column: 207, scope: !7389)
!7405 = !DILocation(line: 1022, column: 211, scope: !7389)
!7406 = !DILocation(line: 1022, column: 213, scope: !7389)
!7407 = !DILocation(line: 1022, column: 197, scope: !7389)
!7408 = !DILocation(line: 1022, column: 184, scope: !7389)
!7409 = !DILocation(line: 1022, column: 165, scope: !7389)
!7410 = !DILocation(line: 1022, column: 159, scope: !7389)
!7411 = !DILocation(line: 1022, column: 163, scope: !7389)
!7412 = !DILocation(line: 1022, column: 229, scope: !7413)
!7413 = !DILexicalBlockFile(scope: !7357, file: !801, discriminator: 6)
!7414 = !DILocation(line: 1022, column: 237, scope: !7413)
!7415 = !DILocation(line: 1022, column: 246, scope: !7413)
!7416 = !DILocation(line: 1022, column: 252, scope: !7413)
!7417 = !DILocation(line: 1023, column: 13, scope: !7289)
!7418 = !DILocation(line: 1020, column: 34, scope: !7419)
!7419 = !DILexicalBlockFile(scope: !7284, file: !801, discriminator: 2)
!7420 = !DILocation(line: 1020, column: 13, scope: !7419)
!7421 = distinct !{!7421, !7422}
!7422 = !DILocation(line: 1020, column: 13, scope: !7280)
!7423 = !DILocation(line: 1025, column: 5, scope: !5725)
!7424 = !DILocation(line: 973, column: 26, scope: !7425)
!7425 = !DILexicalBlockFile(scope: !5720, file: !801, discriminator: 2)
!7426 = !DILocation(line: 973, column: 5, scope: !7425)
!7427 = distinct !{!7427, !7428}
!7428 = !DILocation(line: 973, column: 5, scope: !5603)
!7429 = !DILocation(line: 1026, column: 1, scope: !5603)
!7430 = distinct !DISubprogram(name: "update_sono_yuv", scope: !801, file: !801, line: 1064, type: !932, isLocal: true, isDefinition: true, scopeLine: 1065, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!7431 = !DILocalVariable(name: "sono", arg: 1, scope: !7430, file: !801, line: 1064, type: !285)
!7432 = !DILocation(line: 1064, column: 38, scope: !7430)
!7433 = !DILocalVariable(name: "c", arg: 2, scope: !7430, file: !801, line: 1064, type: !920)
!7434 = !DILocation(line: 1064, column: 62, scope: !7430)
!7435 = !DILocalVariable(name: "idx", arg: 3, scope: !7430, file: !801, line: 1064, type: !200)
!7436 = !DILocation(line: 1064, column: 69, scope: !7430)
!7437 = !DILocalVariable(name: "x", scope: !7430, file: !801, line: 1066, type: !200)
!7438 = !DILocation(line: 1066, column: 9, scope: !7430)
!7439 = !DILocalVariable(name: "fmt", scope: !7430, file: !801, line: 1066, type: !200)
!7440 = !DILocation(line: 1066, column: 12, scope: !7430)
!7441 = !DILocation(line: 1066, column: 18, scope: !7430)
!7442 = !DILocation(line: 1066, column: 24, scope: !7430)
!7443 = !DILocalVariable(name: "w", scope: !7430, file: !801, line: 1066, type: !200)
!7444 = !DILocation(line: 1066, column: 32, scope: !7430)
!7445 = !DILocation(line: 1066, column: 36, scope: !7430)
!7446 = !DILocation(line: 1066, column: 42, scope: !7430)
!7447 = !DILocalVariable(name: "lpy", scope: !7430, file: !801, line: 1067, type: !291)
!7448 = !DILocation(line: 1067, column: 14, scope: !7430)
!7449 = !DILocation(line: 1067, column: 20, scope: !7430)
!7450 = !DILocation(line: 1067, column: 26, scope: !7430)
!7451 = !DILocation(line: 1067, column: 36, scope: !7430)
!7452 = !DILocation(line: 1067, column: 42, scope: !7430)
!7453 = !DILocation(line: 1067, column: 48, scope: !7430)
!7454 = !DILocation(line: 1067, column: 40, scope: !7430)
!7455 = !DILocation(line: 1067, column: 34, scope: !7430)
!7456 = !DILocalVariable(name: "lpu", scope: !7430, file: !801, line: 1068, type: !291)
!7457 = !DILocation(line: 1068, column: 14, scope: !7430)
!7458 = !DILocation(line: 1068, column: 20, scope: !7430)
!7459 = !DILocation(line: 1068, column: 26, scope: !7430)
!7460 = !DILocation(line: 1068, column: 36, scope: !7430)
!7461 = !DILocation(line: 1068, column: 42, scope: !7430)
!7462 = !DILocation(line: 1068, column: 48, scope: !7430)
!7463 = !DILocation(line: 1068, column: 40, scope: !7430)
!7464 = !DILocation(line: 1068, column: 34, scope: !7430)
!7465 = !DILocalVariable(name: "lpv", scope: !7430, file: !801, line: 1069, type: !291)
!7466 = !DILocation(line: 1069, column: 14, scope: !7430)
!7467 = !DILocation(line: 1069, column: 20, scope: !7430)
!7468 = !DILocation(line: 1069, column: 26, scope: !7430)
!7469 = !DILocation(line: 1069, column: 36, scope: !7430)
!7470 = !DILocation(line: 1069, column: 42, scope: !7430)
!7471 = !DILocation(line: 1069, column: 48, scope: !7430)
!7472 = !DILocation(line: 1069, column: 40, scope: !7430)
!7473 = !DILocation(line: 1069, column: 34, scope: !7430)
!7474 = !DILocation(line: 1071, column: 12, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7430, file: !801, line: 1071, column: 5)
!7476 = !DILocation(line: 1071, column: 10, scope: !7475)
!7477 = !DILocation(line: 1071, column: 17, scope: !7478)
!7478 = !DILexicalBlockFile(scope: !7479, file: !801, discriminator: 1)
!7479 = distinct !DILexicalBlock(scope: !7475, file: !801, line: 1071, column: 5)
!7480 = !DILocation(line: 1071, column: 21, scope: !7478)
!7481 = !DILocation(line: 1071, column: 19, scope: !7478)
!7482 = !DILocation(line: 1071, column: 5, scope: !7478)
!7483 = !DILocation(line: 1072, column: 27, scope: !7484)
!7484 = distinct !DILexicalBlock(scope: !7479, file: !801, line: 1071, column: 32)
!7485 = !DILocation(line: 1072, column: 25, scope: !7484)
!7486 = !DILocation(line: 1072, column: 30, scope: !7484)
!7487 = !DILocation(line: 1072, column: 34, scope: !7484)
!7488 = !DILocation(line: 1072, column: 36, scope: !7484)
!7489 = !DILocation(line: 1072, column: 18, scope: !7484)
!7490 = !DILocation(line: 1072, column: 13, scope: !7484)
!7491 = !DILocation(line: 1072, column: 16, scope: !7484)
!7492 = !DILocation(line: 1073, column: 27, scope: !7484)
!7493 = !DILocation(line: 1073, column: 25, scope: !7484)
!7494 = !DILocation(line: 1073, column: 30, scope: !7484)
!7495 = !DILocation(line: 1073, column: 34, scope: !7484)
!7496 = !DILocation(line: 1073, column: 36, scope: !7484)
!7497 = !DILocation(line: 1073, column: 18, scope: !7484)
!7498 = !DILocation(line: 1073, column: 13, scope: !7484)
!7499 = !DILocation(line: 1073, column: 16, scope: !7484)
!7500 = !DILocation(line: 1074, column: 27, scope: !7484)
!7501 = !DILocation(line: 1074, column: 25, scope: !7484)
!7502 = !DILocation(line: 1074, column: 30, scope: !7484)
!7503 = !DILocation(line: 1074, column: 34, scope: !7484)
!7504 = !DILocation(line: 1074, column: 36, scope: !7484)
!7505 = !DILocation(line: 1074, column: 18, scope: !7484)
!7506 = !DILocation(line: 1074, column: 13, scope: !7484)
!7507 = !DILocation(line: 1074, column: 16, scope: !7484)
!7508 = !DILocation(line: 1075, column: 27, scope: !7484)
!7509 = !DILocation(line: 1075, column: 28, scope: !7484)
!7510 = !DILocation(line: 1075, column: 25, scope: !7484)
!7511 = !DILocation(line: 1075, column: 32, scope: !7484)
!7512 = !DILocation(line: 1075, column: 36, scope: !7484)
!7513 = !DILocation(line: 1075, column: 38, scope: !7484)
!7514 = !DILocation(line: 1075, column: 18, scope: !7484)
!7515 = !DILocation(line: 1075, column: 13, scope: !7484)
!7516 = !DILocation(line: 1075, column: 16, scope: !7484)
!7517 = !DILocation(line: 1076, column: 13, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7484, file: !801, line: 1076, column: 13)
!7519 = !DILocation(line: 1076, column: 17, scope: !7518)
!7520 = !DILocation(line: 1076, column: 13, scope: !7484)
!7521 = !DILocation(line: 1077, column: 31, scope: !7522)
!7522 = distinct !DILexicalBlock(scope: !7518, file: !801, line: 1076, column: 40)
!7523 = !DILocation(line: 1077, column: 32, scope: !7522)
!7524 = !DILocation(line: 1077, column: 29, scope: !7522)
!7525 = !DILocation(line: 1077, column: 36, scope: !7522)
!7526 = !DILocation(line: 1077, column: 40, scope: !7522)
!7527 = !DILocation(line: 1077, column: 42, scope: !7522)
!7528 = !DILocation(line: 1077, column: 22, scope: !7522)
!7529 = !DILocation(line: 1077, column: 17, scope: !7522)
!7530 = !DILocation(line: 1077, column: 20, scope: !7522)
!7531 = !DILocation(line: 1078, column: 31, scope: !7522)
!7532 = !DILocation(line: 1078, column: 32, scope: !7522)
!7533 = !DILocation(line: 1078, column: 29, scope: !7522)
!7534 = !DILocation(line: 1078, column: 36, scope: !7522)
!7535 = !DILocation(line: 1078, column: 40, scope: !7522)
!7536 = !DILocation(line: 1078, column: 42, scope: !7522)
!7537 = !DILocation(line: 1078, column: 22, scope: !7522)
!7538 = !DILocation(line: 1078, column: 17, scope: !7522)
!7539 = !DILocation(line: 1078, column: 20, scope: !7522)
!7540 = !DILocation(line: 1079, column: 9, scope: !7522)
!7541 = !DILocation(line: 1080, column: 5, scope: !7484)
!7542 = !DILocation(line: 1071, column: 26, scope: !7543)
!7543 = !DILexicalBlockFile(scope: !7479, file: !801, discriminator: 2)
!7544 = !DILocation(line: 1071, column: 5, scope: !7543)
!7545 = distinct !{!7545, !7546}
!7546 = !DILocation(line: 1071, column: 5, scope: !7430)
!7547 = !DILocation(line: 1081, column: 1, scope: !7430)
!7548 = distinct !DISubprogram(name: "init_cqt", scope: !801, file: !801, line: 297, type: !3749, isLocal: true, isDefinition: true, scopeLine: 298, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!7549 = !DILocalVariable(name: "s", arg: 1, scope: !7548, file: !801, line: 297, type: !823)
!7550 = !DILocation(line: 297, column: 37, scope: !7548)
!7551 = !DILocalVariable(name: "var_names", scope: !7548, file: !801, line: 299, type: !7552)
!7552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 384, align: 64, elements: !900)
!7553 = !DILocation(line: 299, column: 17, scope: !7548)
!7554 = !DILocalVariable(name: "expr", scope: !7548, file: !801, line: 300, type: !3772)
!7555 = !DILocation(line: 300, column: 13, scope: !7548)
!7556 = !DILocalVariable(name: "rate", scope: !7548, file: !801, line: 301, type: !200)
!7557 = !DILocation(line: 301, column: 9, scope: !7548)
!7558 = !DILocation(line: 301, column: 16, scope: !7548)
!7559 = !DILocation(line: 301, column: 19, scope: !7548)
!7560 = !DILocation(line: 301, column: 24, scope: !7548)
!7561 = !DILocation(line: 301, column: 35, scope: !7548)
!7562 = !DILocalVariable(name: "nb_cqt_coeffs", scope: !7548, file: !801, line: 302, type: !200)
!7563 = !DILocation(line: 302, column: 9, scope: !7548)
!7564 = !DILocalVariable(name: "k", scope: !7548, file: !801, line: 303, type: !200)
!7565 = !DILocation(line: 303, column: 9, scope: !7548)
!7566 = !DILocalVariable(name: "x", scope: !7548, file: !801, line: 303, type: !200)
!7567 = !DILocation(line: 303, column: 12, scope: !7548)
!7568 = !DILocalVariable(name: "ret", scope: !7548, file: !801, line: 303, type: !200)
!7569 = !DILocation(line: 303, column: 15, scope: !7548)
!7570 = !DILocation(line: 305, column: 37, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !7548, file: !801, line: 305, column: 9)
!7572 = !DILocation(line: 305, column: 40, scope: !7571)
!7573 = !DILocation(line: 305, column: 49, scope: !7571)
!7574 = !DILocation(line: 305, column: 86, scope: !7571)
!7575 = !DILocation(line: 305, column: 89, scope: !7571)
!7576 = !DILocation(line: 305, column: 16, scope: !7571)
!7577 = !DILocation(line: 305, column: 14, scope: !7571)
!7578 = !DILocation(line: 305, column: 95, scope: !7571)
!7579 = !DILocation(line: 305, column: 9, scope: !7548)
!7580 = !DILocation(line: 306, column: 9, scope: !7571)
!7581 = !DILocation(line: 308, column: 9, scope: !7548)
!7582 = !DILocation(line: 309, column: 33, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7548, file: !801, line: 309, column: 9)
!7584 = !DILocation(line: 309, column: 36, scope: !7583)
!7585 = !DILocation(line: 309, column: 23, scope: !7583)
!7586 = !DILocation(line: 309, column: 11, scope: !7583)
!7587 = !DILocation(line: 309, column: 14, scope: !7583)
!7588 = !DILocation(line: 309, column: 21, scope: !7583)
!7589 = !DILocation(line: 309, column: 9, scope: !7548)
!7590 = !DILocation(line: 310, column: 9, scope: !7583)
!7591 = !DILocation(line: 312, column: 12, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7548, file: !801, line: 312, column: 5)
!7593 = !DILocation(line: 312, column: 10, scope: !7592)
!7594 = !DILocation(line: 312, column: 17, scope: !7595)
!7595 = !DILexicalBlockFile(scope: !7596, file: !801, discriminator: 1)
!7596 = distinct !DILexicalBlock(scope: !7592, file: !801, line: 312, column: 5)
!7597 = !DILocation(line: 312, column: 21, scope: !7595)
!7598 = !DILocation(line: 312, column: 24, scope: !7595)
!7599 = !DILocation(line: 312, column: 19, scope: !7595)
!7600 = !DILocation(line: 312, column: 5, scope: !7595)
!7601 = !DILocalVariable(name: "vars", scope: !7602, file: !801, line: 313, type: !7603)
!7602 = distinct !DILexicalBlock(scope: !7596, file: !801, line: 312, column: 38)
!7603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !210, size: 320, align: 64, elements: !1307)
!7604 = !DILocation(line: 313, column: 16, scope: !7602)
!7605 = !DILocation(line: 313, column: 25, scope: !7602)
!7606 = !DILocation(line: 313, column: 27, scope: !7602)
!7607 = !DILocation(line: 313, column: 30, scope: !7602)
!7608 = !DILocation(line: 313, column: 41, scope: !7602)
!7609 = !DILocation(line: 313, column: 44, scope: !7602)
!7610 = !DILocation(line: 313, column: 63, scope: !7602)
!7611 = !DILocation(line: 313, column: 55, scope: !7602)
!7612 = !DILocation(line: 313, column: 58, scope: !7602)
!7613 = !DILocation(line: 313, column: 75, scope: !7602)
!7614 = !DILocation(line: 313, column: 67, scope: !7602)
!7615 = !DILocation(line: 313, column: 70, scope: !7602)
!7616 = !DILocation(line: 313, column: 87, scope: !7602)
!7617 = !DILocation(line: 313, column: 79, scope: !7602)
!7618 = !DILocation(line: 313, column: 82, scope: !7602)
!7619 = !DILocalVariable(name: "flen", scope: !7602, file: !801, line: 314, type: !210)
!7620 = !DILocation(line: 314, column: 16, scope: !7602)
!7621 = !DILocalVariable(name: "center", scope: !7602, file: !801, line: 314, type: !210)
!7622 = !DILocation(line: 314, column: 22, scope: !7602)
!7623 = !DILocalVariable(name: "tlength", scope: !7602, file: !801, line: 314, type: !210)
!7624 = !DILocation(line: 314, column: 30, scope: !7602)
!7625 = !DILocalVariable(name: "start", scope: !7602, file: !801, line: 315, type: !200)
!7626 = !DILocation(line: 315, column: 13, scope: !7602)
!7627 = !DILocalVariable(name: "end", scope: !7602, file: !801, line: 315, type: !200)
!7628 = !DILocation(line: 315, column: 20, scope: !7602)
!7629 = !DILocalVariable(name: "m", scope: !7602, file: !801, line: 315, type: !200)
!7630 = !DILocation(line: 315, column: 25, scope: !7602)
!7631 = !DILocation(line: 315, column: 29, scope: !7602)
!7632 = !DILocation(line: 317, column: 21, scope: !7633)
!7633 = distinct !DILexicalBlock(scope: !7602, file: !801, line: 317, column: 13)
!7634 = !DILocation(line: 317, column: 13, scope: !7633)
!7635 = !DILocation(line: 317, column: 16, scope: !7633)
!7636 = !DILocation(line: 317, column: 32, scope: !7633)
!7637 = !DILocation(line: 317, column: 30, scope: !7633)
!7638 = !DILocation(line: 317, column: 24, scope: !7633)
!7639 = !DILocation(line: 317, column: 13, scope: !7602)
!7640 = !DILocation(line: 318, column: 13, scope: !7633)
!7641 = !DILocation(line: 319, column: 33, scope: !7602)
!7642 = !DILocation(line: 319, column: 36, scope: !7602)
!7643 = !DILocation(line: 319, column: 65, scope: !7602)
!7644 = !DILocation(line: 319, column: 71, scope: !7602)
!7645 = !DILocation(line: 319, column: 52, scope: !7602)
!7646 = !DILocation(line: 320, column: 40, scope: !7602)
!7647 = !DILocation(line: 320, column: 43, scope: !7602)
!7648 = !DILocation(line: 320, column: 54, scope: !7602)
!7649 = !DILocation(line: 320, column: 57, scope: !7602)
!7650 = !DILocation(line: 320, column: 68, scope: !7602)
!7651 = !DILocation(line: 319, column: 19, scope: !7652)
!7652 = !DILexicalBlockFile(scope: !7602, file: !801, discriminator: 1)
!7653 = !DILocation(line: 319, column: 17, scope: !7602)
!7654 = !DILocation(line: 322, column: 22, scope: !7602)
!7655 = !DILocation(line: 322, column: 25, scope: !7602)
!7656 = !DILocation(line: 322, column: 20, scope: !7602)
!7657 = !DILocation(line: 322, column: 36, scope: !7602)
!7658 = !DILocation(line: 322, column: 46, scope: !7602)
!7659 = !DILocation(line: 322, column: 44, scope: !7602)
!7660 = !DILocation(line: 322, column: 33, scope: !7602)
!7661 = !DILocation(line: 322, column: 14, scope: !7602)
!7662 = !DILocation(line: 323, column: 26, scope: !7602)
!7663 = !DILocation(line: 323, column: 18, scope: !7602)
!7664 = !DILocation(line: 323, column: 21, scope: !7602)
!7665 = !DILocation(line: 323, column: 31, scope: !7602)
!7666 = !DILocation(line: 323, column: 34, scope: !7602)
!7667 = !DILocation(line: 323, column: 29, scope: !7602)
!7668 = !DILocation(line: 323, column: 44, scope: !7602)
!7669 = !DILocation(line: 323, column: 42, scope: !7602)
!7670 = !DILocation(line: 323, column: 16, scope: !7602)
!7671 = !DILocation(line: 324, column: 30, scope: !7602)
!7672 = !DILocation(line: 324, column: 45, scope: !7602)
!7673 = !DILocation(line: 324, column: 43, scope: !7602)
!7674 = !DILocation(line: 324, column: 37, scope: !7602)
!7675 = !DILocation(line: 324, column: 25, scope: !7602)
!7676 = !DILocation(line: 324, column: 22, scope: !7602)
!7677 = !DILocation(line: 324, column: 18, scope: !7602)
!7678 = !DILocation(line: 324, column: 18, scope: !7652)
!7679 = !DILocation(line: 324, column: 66, scope: !7680)
!7680 = !DILexicalBlockFile(scope: !7602, file: !801, discriminator: 2)
!7681 = !DILocation(line: 324, column: 81, scope: !7680)
!7682 = !DILocation(line: 324, column: 79, scope: !7680)
!7683 = !DILocation(line: 324, column: 73, scope: !7680)
!7684 = !DILocation(line: 324, column: 61, scope: !7680)
!7685 = !DILocation(line: 324, column: 18, scope: !7680)
!7686 = !DILocation(line: 324, column: 18, scope: !7687)
!7687 = !DILexicalBlockFile(scope: !7602, file: !801, discriminator: 3)
!7688 = !DILocation(line: 324, column: 17, scope: !7687)
!7689 = !DILocation(line: 324, column: 15, scope: !7687)
!7690 = !DILocation(line: 325, column: 17, scope: !7602)
!7691 = !DILocation(line: 325, column: 20, scope: !7602)
!7692 = !DILocation(line: 325, column: 16, scope: !7602)
!7693 = !DILocation(line: 325, column: 38, scope: !7602)
!7694 = !DILocation(line: 325, column: 53, scope: !7602)
!7695 = !DILocation(line: 325, column: 51, scope: !7602)
!7696 = !DILocation(line: 325, column: 45, scope: !7602)
!7697 = !DILocation(line: 325, column: 32, scope: !7602)
!7698 = !DILocation(line: 325, column: 29, scope: !7602)
!7699 = !DILocation(line: 325, column: 69, scope: !7652)
!7700 = !DILocation(line: 325, column: 84, scope: !7652)
!7701 = !DILocation(line: 325, column: 82, scope: !7652)
!7702 = !DILocation(line: 325, column: 76, scope: !7652)
!7703 = !DILocation(line: 325, column: 63, scope: !7652)
!7704 = !DILocation(line: 325, column: 16, scope: !7652)
!7705 = !DILocation(line: 325, column: 94, scope: !7680)
!7706 = !DILocation(line: 325, column: 97, scope: !7680)
!7707 = !DILocation(line: 325, column: 93, scope: !7680)
!7708 = !DILocation(line: 325, column: 16, scope: !7680)
!7709 = !DILocation(line: 325, column: 16, scope: !7687)
!7710 = !DILocation(line: 325, column: 15, scope: !7687)
!7711 = !DILocation(line: 325, column: 13, scope: !7687)
!7712 = !DILocation(line: 327, column: 30, scope: !7602)
!7713 = !DILocation(line: 327, column: 40, scope: !7602)
!7714 = !DILocation(line: 327, column: 43, scope: !7602)
!7715 = !DILocation(line: 327, column: 53, scope: !7602)
!7716 = !DILocation(line: 327, column: 38, scope: !7602)
!7717 = !DILocation(line: 327, column: 36, scope: !7602)
!7718 = !DILocation(line: 327, column: 19, scope: !7602)
!7719 = !DILocation(line: 327, column: 9, scope: !7602)
!7720 = !DILocation(line: 327, column: 12, scope: !7602)
!7721 = !DILocation(line: 327, column: 22, scope: !7602)
!7722 = !DILocation(line: 327, column: 28, scope: !7602)
!7723 = !DILocation(line: 328, column: 29, scope: !7602)
!7724 = !DILocation(line: 328, column: 36, scope: !7602)
!7725 = !DILocation(line: 328, column: 39, scope: !7602)
!7726 = !DILocation(line: 328, column: 49, scope: !7602)
!7727 = !DILocation(line: 328, column: 33, scope: !7602)
!7728 = !DILocation(line: 328, column: 55, scope: !7602)
!7729 = !DILocation(line: 328, column: 71, scope: !7602)
!7730 = !DILocation(line: 328, column: 61, scope: !7602)
!7731 = !DILocation(line: 328, column: 64, scope: !7602)
!7732 = !DILocation(line: 328, column: 74, scope: !7602)
!7733 = !DILocation(line: 328, column: 59, scope: !7602)
!7734 = !DILocation(line: 328, column: 19, scope: !7602)
!7735 = !DILocation(line: 328, column: 9, scope: !7602)
!7736 = !DILocation(line: 328, column: 12, scope: !7602)
!7737 = !DILocation(line: 328, column: 22, scope: !7602)
!7738 = !DILocation(line: 328, column: 26, scope: !7602)
!7739 = !DILocation(line: 329, column: 36, scope: !7602)
!7740 = !DILocation(line: 329, column: 26, scope: !7602)
!7741 = !DILocation(line: 329, column: 29, scope: !7602)
!7742 = !DILocation(line: 329, column: 39, scope: !7602)
!7743 = !DILocation(line: 329, column: 23, scope: !7602)
!7744 = !DILocation(line: 330, column: 54, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7602, file: !801, line: 330, column: 13)
!7746 = !DILocation(line: 330, column: 44, scope: !7745)
!7747 = !DILocation(line: 330, column: 47, scope: !7745)
!7748 = !DILocation(line: 330, column: 57, scope: !7745)
!7749 = !DILocation(line: 330, column: 34, scope: !7745)
!7750 = !DILocation(line: 330, column: 25, scope: !7745)
!7751 = !DILocation(line: 330, column: 15, scope: !7745)
!7752 = !DILocation(line: 330, column: 18, scope: !7745)
!7753 = !DILocation(line: 330, column: 28, scope: !7745)
!7754 = !DILocation(line: 330, column: 32, scope: !7745)
!7755 = !DILocation(line: 330, column: 13, scope: !7602)
!7756 = !DILocation(line: 331, column: 13, scope: !7745)
!7757 = !DILocation(line: 333, column: 18, scope: !7758)
!7758 = distinct !DILexicalBlock(scope: !7602, file: !801, line: 333, column: 9)
!7759 = !DILocation(line: 333, column: 16, scope: !7758)
!7760 = !DILocation(line: 333, column: 14, scope: !7758)
!7761 = !DILocation(line: 333, column: 25, scope: !7762)
!7762 = !DILexicalBlockFile(scope: !7763, file: !801, discriminator: 1)
!7763 = distinct !DILexicalBlock(scope: !7758, file: !801, line: 333, column: 9)
!7764 = !DILocation(line: 333, column: 30, scope: !7762)
!7765 = !DILocation(line: 333, column: 27, scope: !7762)
!7766 = !DILocation(line: 333, column: 9, scope: !7762)
!7767 = !DILocalVariable(name: "sign", scope: !7768, file: !801, line: 334, type: !200)
!7768 = distinct !DILexicalBlock(scope: !7763, file: !801, line: 333, column: 40)
!7769 = !DILocation(line: 334, column: 17, scope: !7768)
!7770 = !DILocation(line: 334, column: 25, scope: !7768)
!7771 = !DILocation(line: 334, column: 27, scope: !7768)
!7772 = !DILocation(line: 334, column: 24, scope: !7768)
!7773 = !DILocalVariable(name: "y", scope: !7768, file: !801, line: 335, type: !210)
!7774 = !DILocation(line: 335, column: 20, scope: !7768)
!7775 = !DILocation(line: 335, column: 37, scope: !7768)
!7776 = !DILocation(line: 335, column: 41, scope: !7768)
!7777 = !DILocation(line: 335, column: 39, scope: !7768)
!7778 = !DILocation(line: 335, column: 34, scope: !7768)
!7779 = !DILocation(line: 335, column: 58, scope: !7768)
!7780 = !DILocation(line: 335, column: 56, scope: !7768)
!7781 = !DILocation(line: 335, column: 49, scope: !7768)
!7782 = !DILocalVariable(name: "w", scope: !7768, file: !801, line: 337, type: !210)
!7783 = !DILocation(line: 337, column: 20, scope: !7768)
!7784 = !DILocation(line: 337, column: 50, scope: !7768)
!7785 = !DILocation(line: 337, column: 46, scope: !7768)
!7786 = !DILocation(line: 337, column: 44, scope: !7768)
!7787 = !DILocation(line: 337, column: 33, scope: !7768)
!7788 = !DILocation(line: 337, column: 72, scope: !7768)
!7789 = !DILocation(line: 337, column: 71, scope: !7768)
!7790 = !DILocation(line: 337, column: 66, scope: !7791)
!7791 = !DILexicalBlockFile(scope: !7768, file: !801, discriminator: 1)
!7792 = !DILocation(line: 337, column: 64, scope: !7768)
!7793 = !DILocation(line: 337, column: 53, scope: !7768)
!7794 = !DILocation(line: 337, column: 94, scope: !7768)
!7795 = !DILocation(line: 337, column: 93, scope: !7768)
!7796 = !DILocation(line: 337, column: 88, scope: !7797)
!7797 = !DILexicalBlockFile(scope: !7768, file: !801, discriminator: 2)
!7798 = !DILocation(line: 337, column: 86, scope: !7768)
!7799 = !DILocation(line: 337, column: 75, scope: !7768)
!7800 = !DILocation(line: 338, column: 18, scope: !7768)
!7801 = !DILocation(line: 338, column: 32, scope: !7768)
!7802 = !DILocation(line: 338, column: 35, scope: !7768)
!7803 = !DILocation(line: 338, column: 30, scope: !7768)
!7804 = !DILocation(line: 338, column: 23, scope: !7768)
!7805 = !DILocation(line: 338, column: 15, scope: !7768)
!7806 = !DILocation(line: 339, column: 56, scope: !7768)
!7807 = !DILocation(line: 339, column: 30, scope: !7768)
!7808 = !DILocation(line: 339, column: 44, scope: !7768)
!7809 = !DILocation(line: 339, column: 34, scope: !7768)
!7810 = !DILocation(line: 339, column: 37, scope: !7768)
!7811 = !DILocation(line: 339, column: 47, scope: !7768)
!7812 = !DILocation(line: 339, column: 32, scope: !7768)
!7813 = !DILocation(line: 339, column: 13, scope: !7768)
!7814 = !DILocation(line: 339, column: 23, scope: !7768)
!7815 = !DILocation(line: 339, column: 16, scope: !7768)
!7816 = !DILocation(line: 339, column: 26, scope: !7768)
!7817 = !DILocation(line: 339, column: 54, scope: !7768)
!7818 = !DILocation(line: 340, column: 9, scope: !7768)
!7819 = !DILocation(line: 333, column: 36, scope: !7820)
!7820 = !DILexicalBlockFile(scope: !7763, file: !801, discriminator: 2)
!7821 = !DILocation(line: 333, column: 9, scope: !7820)
!7822 = distinct !{!7822, !7823}
!7823 = !DILocation(line: 333, column: 9, scope: !7602)
!7824 = !DILocation(line: 342, column: 13, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7602, file: !801, line: 342, column: 13)
!7826 = !DILocation(line: 342, column: 16, scope: !7825)
!7827 = !DILocation(line: 342, column: 13, scope: !7602)
!7828 = !DILocation(line: 343, column: 13, scope: !7825)
!7829 = !DILocation(line: 343, column: 16, scope: !7825)
!7830 = !DILocation(line: 343, column: 41, scope: !7825)
!7831 = !DILocation(line: 343, column: 31, scope: !7825)
!7832 = !DILocation(line: 343, column: 34, scope: !7825)
!7833 = !DILocation(line: 343, column: 44, scope: !7825)
!7834 = !DILocation(line: 343, column: 59, scope: !7825)
!7835 = !DILocation(line: 343, column: 49, scope: !7825)
!7836 = !DILocation(line: 343, column: 52, scope: !7825)
!7837 = !DILocation(line: 343, column: 62, scope: !7825)
!7838 = !DILocation(line: 344, column: 5, scope: !7602)
!7839 = !DILocation(line: 312, column: 34, scope: !7840)
!7840 = !DILexicalBlockFile(scope: !7596, file: !801, discriminator: 2)
!7841 = !DILocation(line: 312, column: 5, scope: !7840)
!7842 = distinct !{!7842, !7843}
!7843 = !DILocation(line: 312, column: 5, scope: !7548)
!7844 = !DILocation(line: 346, column: 18, scope: !7548)
!7845 = !DILocation(line: 346, column: 5, scope: !7548)
!7846 = !DILocation(line: 347, column: 12, scope: !7548)
!7847 = !DILocation(line: 347, column: 15, scope: !7548)
!7848 = !DILocation(line: 347, column: 49, scope: !7548)
!7849 = !DILocation(line: 347, column: 5, scope: !7548)
!7850 = !DILocation(line: 348, column: 5, scope: !7548)
!7851 = !DILocation(line: 351, column: 18, scope: !7548)
!7852 = !DILocation(line: 351, column: 5, scope: !7548)
!7853 = !DILocation(line: 352, column: 9, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !7548, file: !801, line: 352, column: 9)
!7855 = !DILocation(line: 352, column: 12, scope: !7854)
!7856 = !DILocation(line: 352, column: 9, scope: !7548)
!7857 = !DILocation(line: 353, column: 16, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7854, file: !801, line: 353, column: 9)
!7859 = !DILocation(line: 353, column: 14, scope: !7858)
!7860 = !DILocation(line: 353, column: 21, scope: !7861)
!7861 = !DILexicalBlockFile(scope: !7862, file: !801, discriminator: 1)
!7862 = distinct !DILexicalBlock(scope: !7858, file: !801, line: 353, column: 9)
!7863 = !DILocation(line: 353, column: 25, scope: !7861)
!7864 = !DILocation(line: 353, column: 28, scope: !7861)
!7865 = !DILocation(line: 353, column: 23, scope: !7861)
!7866 = !DILocation(line: 353, column: 9, scope: !7861)
!7867 = !DILocation(line: 354, column: 33, scope: !7862)
!7868 = !DILocation(line: 354, column: 23, scope: !7862)
!7869 = !DILocation(line: 354, column: 26, scope: !7862)
!7870 = !DILocation(line: 354, column: 36, scope: !7862)
!7871 = !DILocation(line: 354, column: 22, scope: !7862)
!7872 = !DILocation(line: 354, column: 13, scope: !7862)
!7873 = !DILocation(line: 353, column: 38, scope: !7874)
!7874 = !DILexicalBlockFile(scope: !7862, file: !801, discriminator: 2)
!7875 = !DILocation(line: 353, column: 9, scope: !7874)
!7876 = distinct !{!7876, !7877}
!7877 = !DILocation(line: 353, column: 9, scope: !7854)
!7878 = !DILocation(line: 354, column: 39, scope: !7879)
!7879 = !DILexicalBlockFile(scope: !7858, file: !801, discriminator: 1)
!7880 = !DILocation(line: 355, column: 15, scope: !7548)
!7881 = !DILocation(line: 355, column: 18, scope: !7548)
!7882 = !DILocation(line: 355, column: 14, scope: !7548)
!7883 = !DILocation(line: 355, column: 5, scope: !7548)
!7884 = !DILocation(line: 356, column: 12, scope: !7548)
!7885 = !DILocation(line: 356, column: 5, scope: !7548)
!7886 = !DILocation(line: 357, column: 1, scope: !7548)
!7887 = distinct !DISubprogram(name: "init_axis_empty", scope: !801, file: !801, line: 396, type: !3749, isLocal: true, isDefinition: true, scopeLine: 397, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!7888 = !DILocalVariable(name: "s", arg: 1, scope: !7887, file: !801, line: 396, type: !823)
!7889 = !DILocation(line: 396, column: 44, scope: !7887)
!7890 = !DILocation(line: 398, column: 71, scope: !7891)
!7891 = distinct !DILexicalBlock(scope: !7887, file: !801, line: 398, column: 9)
!7892 = !DILocation(line: 398, column: 74, scope: !7891)
!7893 = !DILocation(line: 398, column: 45, scope: !7891)
!7894 = !DILocation(line: 398, column: 83, scope: !7891)
!7895 = !DILocation(line: 398, column: 86, scope: !7891)
!7896 = !DILocation(line: 398, column: 93, scope: !7891)
!7897 = !DILocation(line: 398, column: 96, scope: !7891)
!7898 = !DILocation(line: 398, column: 27, scope: !7899)
!7899 = !DILexicalBlockFile(scope: !7891, file: !801, discriminator: 1)
!7900 = !DILocation(line: 398, column: 11, scope: !7891)
!7901 = !DILocation(line: 398, column: 14, scope: !7891)
!7902 = !DILocation(line: 398, column: 25, scope: !7891)
!7903 = !DILocation(line: 398, column: 9, scope: !7887)
!7904 = !DILocation(line: 399, column: 9, scope: !7891)
!7905 = !DILocation(line: 400, column: 5, scope: !7887)
!7906 = !DILocation(line: 401, column: 1, scope: !7887)
!7907 = distinct !DISubprogram(name: "init_axis_from_file", scope: !801, file: !801, line: 403, type: !3749, isLocal: true, isDefinition: true, scopeLine: 404, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!7908 = !DILocalVariable(name: "s", arg: 1, scope: !7907, file: !801, line: 403, type: !823)
!7909 = !DILocation(line: 403, column: 48, scope: !7907)
!7910 = !DILocalVariable(name: "tmp_data", scope: !7907, file: !801, line: 405, type: !7911)
!7911 = !DICompositeType(tag: DW_TAG_array_type, baseType: !291, size: 256, align: 64, elements: !3755)
!7912 = !DILocation(line: 405, column: 14, scope: !7907)
!7913 = !DILocalVariable(name: "tmp_linesize", scope: !7907, file: !801, line: 406, type: !7914)
!7914 = !DICompositeType(tag: DW_TAG_array_type, baseType: !200, size: 128, align: 32, elements: !3755)
!7915 = !DILocation(line: 406, column: 9, scope: !7907)
!7916 = !DILocalVariable(name: "tmp_format", scope: !7907, file: !801, line: 407, type: !580)
!7917 = !DILocation(line: 407, column: 24, scope: !7907)
!7918 = !DILocalVariable(name: "tmp_w", scope: !7907, file: !801, line: 408, type: !200)
!7919 = !DILocation(line: 408, column: 9, scope: !7907)
!7920 = !DILocalVariable(name: "tmp_h", scope: !7907, file: !801, line: 408, type: !200)
!7921 = !DILocation(line: 408, column: 16, scope: !7907)
!7922 = !DILocalVariable(name: "ret", scope: !7907, file: !801, line: 408, type: !200)
!7923 = !DILocation(line: 408, column: 23, scope: !7907)
!7924 = !DILocation(line: 410, column: 30, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7907, file: !801, line: 410, column: 9)
!7926 = !DILocation(line: 410, column: 40, scope: !7925)
!7927 = !DILocation(line: 411, column: 30, scope: !7925)
!7928 = !DILocation(line: 411, column: 33, scope: !7925)
!7929 = !DILocation(line: 411, column: 43, scope: !7925)
!7930 = !DILocation(line: 411, column: 46, scope: !7925)
!7931 = !DILocation(line: 410, column: 16, scope: !7925)
!7932 = !DILocation(line: 410, column: 14, scope: !7925)
!7933 = !DILocation(line: 411, column: 52, scope: !7925)
!7934 = !DILocation(line: 410, column: 9, scope: !7907)
!7935 = !DILocation(line: 412, column: 9, scope: !7925)
!7936 = !DILocation(line: 414, column: 9, scope: !7907)
!7937 = !DILocation(line: 415, column: 27, scope: !7938)
!7938 = distinct !DILexicalBlock(scope: !7907, file: !801, line: 415, column: 9)
!7939 = !DILocation(line: 415, column: 11, scope: !7938)
!7940 = !DILocation(line: 415, column: 14, scope: !7938)
!7941 = !DILocation(line: 415, column: 25, scope: !7938)
!7942 = !DILocation(line: 415, column: 9, scope: !7907)
!7943 = !DILocation(line: 416, column: 9, scope: !7938)
!7944 = !DILocation(line: 418, column: 31, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7907, file: !801, line: 418, column: 9)
!7946 = !DILocation(line: 418, column: 34, scope: !7945)
!7947 = !DILocation(line: 418, column: 46, scope: !7945)
!7948 = !DILocation(line: 418, column: 52, scope: !7945)
!7949 = !DILocation(line: 418, column: 55, scope: !7945)
!7950 = !DILocation(line: 418, column: 67, scope: !7945)
!7951 = !DILocation(line: 418, column: 77, scope: !7945)
!7952 = !DILocation(line: 418, column: 80, scope: !7945)
!7953 = !DILocation(line: 418, column: 87, scope: !7945)
!7954 = !DILocation(line: 418, column: 90, scope: !7945)
!7955 = !DILocation(line: 419, column: 57, scope: !7945)
!7956 = !DILocation(line: 419, column: 60, scope: !7945)
!7957 = !DILocation(line: 419, column: 31, scope: !7945)
!7958 = !DILocation(line: 419, column: 69, scope: !7945)
!7959 = !DILocation(line: 419, column: 79, scope: !7945)
!7960 = !DILocation(line: 419, column: 93, scope: !7945)
!7961 = !DILocation(line: 419, column: 100, scope: !7945)
!7962 = !DILocation(line: 420, column: 31, scope: !7945)
!7963 = !DILocation(line: 420, column: 43, scope: !7945)
!7964 = !DILocation(line: 420, column: 46, scope: !7945)
!7965 = !DILocation(line: 418, column: 16, scope: !7945)
!7966 = !DILocation(line: 418, column: 14, scope: !7945)
!7967 = !DILocation(line: 420, column: 52, scope: !7945)
!7968 = !DILocation(line: 418, column: 9, scope: !7907)
!7969 = !DILocation(line: 421, column: 9, scope: !7945)
!7970 = !DILocation(line: 423, column: 28, scope: !7907)
!7971 = !DILocation(line: 423, column: 31, scope: !7907)
!7972 = !DILocation(line: 423, column: 5, scope: !7907)
!7973 = !DILocation(line: 423, column: 8, scope: !7907)
!7974 = !DILocation(line: 423, column: 20, scope: !7907)
!7975 = !DILocation(line: 423, column: 26, scope: !7907)
!7976 = !DILocation(line: 424, column: 29, scope: !7907)
!7977 = !DILocation(line: 424, column: 32, scope: !7907)
!7978 = !DILocation(line: 424, column: 5, scope: !7907)
!7979 = !DILocation(line: 424, column: 8, scope: !7907)
!7980 = !DILocation(line: 424, column: 20, scope: !7907)
!7981 = !DILocation(line: 424, column: 27, scope: !7907)
!7982 = !DILocation(line: 425, column: 55, scope: !7907)
!7983 = !DILocation(line: 425, column: 58, scope: !7907)
!7984 = !DILocation(line: 425, column: 29, scope: !7907)
!7985 = !DILocation(line: 425, column: 5, scope: !7907)
!7986 = !DILocation(line: 425, column: 8, scope: !7907)
!7987 = !DILocation(line: 425, column: 20, scope: !7907)
!7988 = !DILocation(line: 425, column: 27, scope: !7907)
!7989 = !DILocation(line: 426, column: 14, scope: !7907)
!7990 = !DILocation(line: 426, column: 5, scope: !7907)
!7991 = !DILocation(line: 427, column: 5, scope: !7907)
!7992 = !DILocation(line: 430, column: 20, scope: !7907)
!7993 = !DILocation(line: 430, column: 23, scope: !7907)
!7994 = !DILocation(line: 430, column: 5, scope: !7907)
!7995 = !DILocation(line: 431, column: 14, scope: !7907)
!7996 = !DILocation(line: 431, column: 5, scope: !7907)
!7997 = !DILocation(line: 432, column: 12, scope: !7907)
!7998 = !DILocation(line: 432, column: 5, scope: !7907)
!7999 = !DILocation(line: 433, column: 1, scope: !7907)
!8000 = distinct !DISubprogram(name: "init_axis_from_font", scope: !801, file: !801, line: 679, type: !3749, isLocal: true, isDefinition: true, scopeLine: 680, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!8001 = !DILocalVariable(name: "s", arg: 1, scope: !8000, file: !801, line: 679, type: !823)
!8002 = !DILocation(line: 679, column: 48, scope: !8000)
!8003 = !DILocalVariable(name: "tmp", scope: !8000, file: !801, line: 681, type: !285)
!8004 = !DILocation(line: 681, column: 14, scope: !8000)
!8005 = !DILocalVariable(name: "ret", scope: !8000, file: !801, line: 682, type: !200)
!8006 = !DILocation(line: 682, column: 9, scope: !8000)
!8007 = !DILocalVariable(name: "width", scope: !8000, file: !801, line: 683, type: !200)
!8008 = !DILocation(line: 683, column: 9, scope: !8000)
!8009 = !DILocalVariable(name: "height", scope: !8000, file: !801, line: 683, type: !200)
!8010 = !DILocation(line: 683, column: 23, scope: !8000)
!8011 = !DILocalVariable(name: "default_font", scope: !8000, file: !801, line: 684, type: !200)
!8012 = !DILocation(line: 684, column: 9, scope: !8000)
!8013 = !DILocation(line: 686, column: 52, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !8000, file: !801, line: 686, column: 9)
!8015 = !DILocation(line: 686, column: 59, scope: !8014)
!8016 = !DILocation(line: 686, column: 17, scope: !8014)
!8017 = !DILocation(line: 686, column: 15, scope: !8014)
!8018 = !DILocation(line: 686, column: 9, scope: !8000)
!8019 = !DILocation(line: 687, column: 9, scope: !8014)
!8020 = !DILocation(line: 689, column: 27, scope: !8021)
!8021 = distinct !DILexicalBlock(scope: !8000, file: !801, line: 689, column: 9)
!8022 = !DILocation(line: 689, column: 11, scope: !8021)
!8023 = !DILocation(line: 689, column: 14, scope: !8021)
!8024 = !DILocation(line: 689, column: 25, scope: !8021)
!8025 = !DILocation(line: 689, column: 9, scope: !8000)
!8026 = !DILocation(line: 690, column: 9, scope: !8021)
!8027 = !DILocation(line: 692, column: 25, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !8000, file: !801, line: 692, column: 9)
!8029 = !DILocation(line: 692, column: 28, scope: !8028)
!8030 = !DILocation(line: 692, column: 33, scope: !8028)
!8031 = !DILocation(line: 692, column: 36, scope: !8028)
!8032 = !DILocation(line: 692, column: 9, scope: !8028)
!8033 = !DILocation(line: 692, column: 46, scope: !8028)
!8034 = !DILocation(line: 692, column: 50, scope: !8028)
!8035 = !DILocation(line: 693, column: 27, scope: !8028)
!8036 = !DILocation(line: 693, column: 30, scope: !8028)
!8037 = !DILocation(line: 693, column: 35, scope: !8028)
!8038 = !DILocation(line: 693, column: 38, scope: !8028)
!8039 = !DILocation(line: 693, column: 9, scope: !8028)
!8040 = !DILocation(line: 693, column: 44, scope: !8028)
!8041 = !DILocation(line: 693, column: 48, scope: !8028)
!8042 = !DILocation(line: 694, column: 23, scope: !8028)
!8043 = !DILocation(line: 694, column: 54, scope: !8028)
!8044 = !DILocation(line: 694, column: 34, scope: !8028)
!8045 = !DILocation(line: 694, column: 32, scope: !8028)
!8046 = !DILocation(line: 694, column: 60, scope: !8028)
!8047 = !DILocation(line: 692, column: 9, scope: !8048)
!8048 = !DILexicalBlockFile(scope: !8000, file: !801, discriminator: 1)
!8049 = !DILocation(line: 695, column: 9, scope: !8028)
!8050 = !DILocation(line: 697, column: 9, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8000, file: !801, line: 697, column: 9)
!8052 = !DILocation(line: 697, column: 9, scope: !8000)
!8053 = !DILocation(line: 698, column: 15, scope: !8051)
!8054 = !DILocation(line: 698, column: 28, scope: !8051)
!8055 = !DILocation(line: 698, column: 9, scope: !8051)
!8056 = !DILocation(line: 700, column: 32, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8000, file: !801, line: 700, column: 9)
!8058 = !DILocation(line: 700, column: 35, scope: !8057)
!8059 = !DILocation(line: 700, column: 40, scope: !8057)
!8060 = !DILocation(line: 700, column: 16, scope: !8057)
!8061 = !DILocation(line: 700, column: 14, scope: !8057)
!8062 = !DILocation(line: 700, column: 55, scope: !8057)
!8063 = !DILocation(line: 700, column: 9, scope: !8000)
!8064 = !DILocation(line: 701, column: 9, scope: !8057)
!8065 = !DILocation(line: 703, column: 31, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !8000, file: !801, line: 703, column: 9)
!8067 = !DILocation(line: 703, column: 34, scope: !8066)
!8068 = !DILocation(line: 703, column: 46, scope: !8066)
!8069 = !DILocation(line: 703, column: 52, scope: !8066)
!8070 = !DILocation(line: 703, column: 55, scope: !8066)
!8071 = !DILocation(line: 703, column: 67, scope: !8066)
!8072 = !DILocation(line: 703, column: 77, scope: !8066)
!8073 = !DILocation(line: 703, column: 80, scope: !8066)
!8074 = !DILocation(line: 703, column: 87, scope: !8066)
!8075 = !DILocation(line: 703, column: 90, scope: !8066)
!8076 = !DILocation(line: 704, column: 57, scope: !8066)
!8077 = !DILocation(line: 704, column: 60, scope: !8066)
!8078 = !DILocation(line: 704, column: 31, scope: !8066)
!8079 = !DILocation(line: 704, column: 69, scope: !8066)
!8080 = !DILocation(line: 704, column: 74, scope: !8066)
!8081 = !DILocation(line: 704, column: 80, scope: !8066)
!8082 = !DILocation(line: 704, column: 85, scope: !8066)
!8083 = !DILocation(line: 705, column: 31, scope: !8066)
!8084 = !DILocation(line: 705, column: 38, scope: !8066)
!8085 = !DILocation(line: 705, column: 63, scope: !8066)
!8086 = !DILocation(line: 705, column: 66, scope: !8066)
!8087 = !DILocation(line: 703, column: 16, scope: !8066)
!8088 = !DILocation(line: 703, column: 14, scope: !8066)
!8089 = !DILocation(line: 705, column: 72, scope: !8066)
!8090 = !DILocation(line: 703, column: 9, scope: !8000)
!8091 = !DILocation(line: 706, column: 9, scope: !8066)
!8092 = !DILocation(line: 708, column: 5, scope: !8000)
!8093 = !DILocation(line: 709, column: 28, scope: !8000)
!8094 = !DILocation(line: 709, column: 31, scope: !8000)
!8095 = !DILocation(line: 709, column: 5, scope: !8000)
!8096 = !DILocation(line: 709, column: 8, scope: !8000)
!8097 = !DILocation(line: 709, column: 20, scope: !8000)
!8098 = !DILocation(line: 709, column: 26, scope: !8000)
!8099 = !DILocation(line: 710, column: 29, scope: !8000)
!8100 = !DILocation(line: 710, column: 32, scope: !8000)
!8101 = !DILocation(line: 710, column: 5, scope: !8000)
!8102 = !DILocation(line: 710, column: 8, scope: !8000)
!8103 = !DILocation(line: 710, column: 20, scope: !8000)
!8104 = !DILocation(line: 710, column: 27, scope: !8000)
!8105 = !DILocation(line: 711, column: 55, scope: !8000)
!8106 = !DILocation(line: 711, column: 58, scope: !8000)
!8107 = !DILocation(line: 711, column: 29, scope: !8000)
!8108 = !DILocation(line: 711, column: 5, scope: !8000)
!8109 = !DILocation(line: 711, column: 8, scope: !8000)
!8110 = !DILocation(line: 711, column: 20, scope: !8000)
!8111 = !DILocation(line: 711, column: 27, scope: !8000)
!8112 = !DILocation(line: 712, column: 5, scope: !8000)
!8113 = !DILocation(line: 715, column: 5, scope: !8000)
!8114 = !DILocation(line: 716, column: 20, scope: !8000)
!8115 = !DILocation(line: 716, column: 23, scope: !8000)
!8116 = !DILocation(line: 716, column: 5, scope: !8000)
!8117 = !DILocation(line: 717, column: 12, scope: !8000)
!8118 = !DILocation(line: 717, column: 5, scope: !8000)
!8119 = !DILocation(line: 718, column: 1, scope: !8000)
!8120 = distinct !DISubprogram(name: "alloc_frame_empty", scope: !801, file: !801, line: 359, type: !8121, isLocal: true, isDefinition: true, scopeLine: 360, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!8121 = !DISubroutineType(types: !8122)
!8122 = !{!285, !580, !200, !200}
!8123 = !DILocalVariable(name: "format", arg: 1, scope: !8120, file: !801, line: 359, type: !580)
!8124 = !DILocation(line: 359, column: 54, scope: !8120)
!8125 = !DILocalVariable(name: "w", arg: 2, scope: !8120, file: !801, line: 359, type: !200)
!8126 = !DILocation(line: 359, column: 66, scope: !8120)
!8127 = !DILocalVariable(name: "h", arg: 3, scope: !8120, file: !801, line: 359, type: !200)
!8128 = !DILocation(line: 359, column: 73, scope: !8120)
!8129 = !DILocalVariable(name: "out", scope: !8120, file: !801, line: 361, type: !285)
!8130 = !DILocation(line: 361, column: 14, scope: !8120)
!8131 = !DILocation(line: 362, column: 11, scope: !8120)
!8132 = !DILocation(line: 362, column: 9, scope: !8120)
!8133 = !DILocation(line: 363, column: 10, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8120, file: !801, line: 363, column: 9)
!8135 = !DILocation(line: 363, column: 9, scope: !8120)
!8136 = !DILocation(line: 364, column: 9, scope: !8134)
!8137 = !DILocation(line: 365, column: 19, scope: !8120)
!8138 = !DILocation(line: 365, column: 5, scope: !8120)
!8139 = !DILocation(line: 365, column: 10, scope: !8120)
!8140 = !DILocation(line: 365, column: 17, scope: !8120)
!8141 = !DILocation(line: 366, column: 18, scope: !8120)
!8142 = !DILocation(line: 366, column: 5, scope: !8120)
!8143 = !DILocation(line: 366, column: 10, scope: !8120)
!8144 = !DILocation(line: 366, column: 16, scope: !8120)
!8145 = !DILocation(line: 367, column: 19, scope: !8120)
!8146 = !DILocation(line: 367, column: 5, scope: !8120)
!8147 = !DILocation(line: 367, column: 10, scope: !8120)
!8148 = !DILocation(line: 367, column: 17, scope: !8120)
!8149 = !DILocation(line: 368, column: 29, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !8120, file: !801, line: 368, column: 9)
!8151 = !DILocation(line: 368, column: 9, scope: !8150)
!8152 = !DILocation(line: 368, column: 38, scope: !8150)
!8153 = !DILocation(line: 368, column: 9, scope: !8120)
!8154 = !DILocation(line: 369, column: 9, scope: !8155)
!8155 = distinct !DILexicalBlock(scope: !8150, file: !801, line: 368, column: 43)
!8156 = !DILocation(line: 370, column: 9, scope: !8155)
!8157 = !DILocation(line: 372, column: 9, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8120, file: !801, line: 372, column: 9)
!8159 = !DILocation(line: 372, column: 16, scope: !8158)
!8160 = !DILocation(line: 372, column: 36, scope: !8158)
!8161 = !DILocation(line: 372, column: 39, scope: !8162)
!8162 = !DILexicalBlockFile(scope: !8158, file: !801, discriminator: 1)
!8163 = !DILocation(line: 372, column: 46, scope: !8162)
!8164 = !DILocation(line: 372, column: 9, scope: !8162)
!8165 = !DILocation(line: 373, column: 16, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8158, file: !801, line: 372, column: 66)
!8167 = !DILocation(line: 373, column: 21, scope: !8166)
!8168 = !DILocation(line: 373, column: 33, scope: !8166)
!8169 = !DILocation(line: 373, column: 38, scope: !8166)
!8170 = !DILocation(line: 373, column: 52, scope: !8166)
!8171 = !DILocation(line: 373, column: 50, scope: !8166)
!8172 = !DILocation(line: 373, column: 9, scope: !8166)
!8173 = !DILocation(line: 374, column: 5, scope: !8166)
!8174 = !DILocalVariable(name: "hh", scope: !8175, file: !801, line: 375, type: !200)
!8175 = distinct !DILexicalBlock(scope: !8158, file: !801, line: 374, column: 12)
!8176 = !DILocation(line: 375, column: 13, scope: !8175)
!8177 = !DILocation(line: 375, column: 19, scope: !8175)
!8178 = !DILocation(line: 375, column: 26, scope: !8175)
!8179 = !DILocation(line: 375, column: 48, scope: !8175)
!8180 = !DILocation(line: 375, column: 51, scope: !8181)
!8181 = !DILexicalBlockFile(scope: !8175, file: !801, discriminator: 1)
!8182 = !DILocation(line: 375, column: 58, scope: !8181)
!8183 = !DILocation(line: 375, column: 18, scope: !8181)
!8184 = !DILocation(line: 375, column: 84, scope: !8185)
!8185 = !DILexicalBlockFile(scope: !8175, file: !801, discriminator: 2)
!8186 = !DILocation(line: 375, column: 86, scope: !8185)
!8187 = !DILocation(line: 375, column: 18, scope: !8185)
!8188 = !DILocation(line: 375, column: 92, scope: !8189)
!8189 = !DILexicalBlockFile(scope: !8175, file: !801, discriminator: 3)
!8190 = !DILocation(line: 375, column: 18, scope: !8189)
!8191 = !DILocation(line: 375, column: 18, scope: !8192)
!8192 = !DILexicalBlockFile(scope: !8175, file: !801, discriminator: 4)
!8193 = !DILocation(line: 375, column: 13, scope: !8192)
!8194 = !DILocation(line: 376, column: 16, scope: !8175)
!8195 = !DILocation(line: 376, column: 21, scope: !8175)
!8196 = !DILocation(line: 376, column: 34, scope: !8175)
!8197 = !DILocation(line: 376, column: 39, scope: !8175)
!8198 = !DILocation(line: 376, column: 53, scope: !8175)
!8199 = !DILocation(line: 376, column: 51, scope: !8175)
!8200 = !DILocation(line: 376, column: 9, scope: !8175)
!8201 = !DILocation(line: 377, column: 16, scope: !8175)
!8202 = !DILocation(line: 377, column: 21, scope: !8175)
!8203 = !DILocation(line: 377, column: 35, scope: !8175)
!8204 = !DILocation(line: 377, column: 40, scope: !8175)
!8205 = !DILocation(line: 377, column: 54, scope: !8175)
!8206 = !DILocation(line: 377, column: 52, scope: !8175)
!8207 = !DILocation(line: 377, column: 9, scope: !8175)
!8208 = !DILocation(line: 378, column: 16, scope: !8175)
!8209 = !DILocation(line: 378, column: 21, scope: !8175)
!8210 = !DILocation(line: 378, column: 35, scope: !8175)
!8211 = !DILocation(line: 378, column: 40, scope: !8175)
!8212 = !DILocation(line: 378, column: 54, scope: !8175)
!8213 = !DILocation(line: 378, column: 52, scope: !8175)
!8214 = !DILocation(line: 378, column: 9, scope: !8175)
!8215 = !DILocation(line: 379, column: 13, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8175, file: !801, line: 379, column: 13)
!8217 = !DILocation(line: 379, column: 18, scope: !8216)
!8218 = !DILocation(line: 379, column: 13, scope: !8175)
!8219 = !DILocation(line: 380, column: 20, scope: !8216)
!8220 = !DILocation(line: 380, column: 25, scope: !8216)
!8221 = !DILocation(line: 380, column: 37, scope: !8216)
!8222 = !DILocation(line: 380, column: 42, scope: !8216)
!8223 = !DILocation(line: 380, column: 56, scope: !8216)
!8224 = !DILocation(line: 380, column: 54, scope: !8216)
!8225 = !DILocation(line: 380, column: 13, scope: !8216)
!8226 = !DILocation(line: 382, column: 12, scope: !8120)
!8227 = !DILocation(line: 382, column: 5, scope: !8120)
!8228 = !DILocation(line: 383, column: 1, scope: !8120)
!8229 = distinct !DISubprogram(name: "a_weighting", scope: !801, file: !801, line: 206, type: !3768, isLocal: true, isDefinition: true, scopeLine: 207, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!8230 = !DILocalVariable(name: "p", arg: 1, scope: !8229, file: !801, line: 206, type: !191)
!8231 = !DILocation(line: 206, column: 33, scope: !8229)
!8232 = !DILocalVariable(name: "f", arg: 2, scope: !8229, file: !801, line: 206, type: !210)
!8233 = !DILocation(line: 206, column: 43, scope: !8229)
!8234 = !DILocalVariable(name: "ret", scope: !8229, file: !801, line: 208, type: !210)
!8235 = !DILocation(line: 208, column: 12, scope: !8229)
!8236 = !DILocation(line: 208, column: 37, scope: !8229)
!8237 = !DILocation(line: 208, column: 39, scope: !8229)
!8238 = !DILocation(line: 208, column: 38, scope: !8229)
!8239 = !DILocation(line: 208, column: 41, scope: !8229)
!8240 = !DILocation(line: 208, column: 40, scope: !8229)
!8241 = !DILocation(line: 208, column: 43, scope: !8229)
!8242 = !DILocation(line: 208, column: 42, scope: !8229)
!8243 = !DILocation(line: 208, column: 34, scope: !8229)
!8244 = !DILocation(line: 209, column: 13, scope: !8229)
!8245 = !DILocation(line: 209, column: 15, scope: !8229)
!8246 = !DILocation(line: 209, column: 14, scope: !8229)
!8247 = !DILocation(line: 209, column: 17, scope: !8229)
!8248 = !DILocation(line: 209, column: 33, scope: !8229)
!8249 = !DILocation(line: 209, column: 35, scope: !8229)
!8250 = !DILocation(line: 209, column: 34, scope: !8229)
!8251 = !DILocation(line: 209, column: 37, scope: !8229)
!8252 = !DILocation(line: 209, column: 30, scope: !8229)
!8253 = !DILocation(line: 210, column: 18, scope: !8229)
!8254 = !DILocation(line: 210, column: 20, scope: !8229)
!8255 = !DILocation(line: 210, column: 19, scope: !8229)
!8256 = !DILocation(line: 210, column: 22, scope: !8229)
!8257 = !DILocation(line: 210, column: 40, scope: !8229)
!8258 = !DILocation(line: 210, column: 42, scope: !8229)
!8259 = !DILocation(line: 210, column: 41, scope: !8229)
!8260 = !DILocation(line: 210, column: 44, scope: !8229)
!8261 = !DILocation(line: 210, column: 37, scope: !8229)
!8262 = !DILocation(line: 210, column: 12, scope: !8229)
!8263 = !DILocation(line: 209, column: 56, scope: !8229)
!8264 = !DILocation(line: 209, column: 9, scope: !8229)
!8265 = !DILocation(line: 211, column: 12, scope: !8229)
!8266 = !DILocation(line: 211, column: 5, scope: !8229)
!8267 = distinct !DISubprogram(name: "b_weighting", scope: !801, file: !801, line: 214, type: !3768, isLocal: true, isDefinition: true, scopeLine: 215, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!8268 = !DILocalVariable(name: "p", arg: 1, scope: !8267, file: !801, line: 214, type: !191)
!8269 = !DILocation(line: 214, column: 33, scope: !8267)
!8270 = !DILocalVariable(name: "f", arg: 2, scope: !8267, file: !801, line: 214, type: !210)
!8271 = !DILocation(line: 214, column: 43, scope: !8267)
!8272 = !DILocalVariable(name: "ret", scope: !8267, file: !801, line: 216, type: !210)
!8273 = !DILocation(line: 216, column: 12, scope: !8267)
!8274 = !DILocation(line: 216, column: 37, scope: !8267)
!8275 = !DILocation(line: 216, column: 39, scope: !8267)
!8276 = !DILocation(line: 216, column: 38, scope: !8267)
!8277 = !DILocation(line: 216, column: 41, scope: !8267)
!8278 = !DILocation(line: 216, column: 40, scope: !8267)
!8279 = !DILocation(line: 216, column: 34, scope: !8267)
!8280 = !DILocation(line: 217, column: 13, scope: !8267)
!8281 = !DILocation(line: 217, column: 15, scope: !8267)
!8282 = !DILocation(line: 217, column: 14, scope: !8267)
!8283 = !DILocation(line: 217, column: 17, scope: !8267)
!8284 = !DILocation(line: 217, column: 33, scope: !8267)
!8285 = !DILocation(line: 217, column: 35, scope: !8267)
!8286 = !DILocation(line: 217, column: 34, scope: !8267)
!8287 = !DILocation(line: 217, column: 37, scope: !8267)
!8288 = !DILocation(line: 217, column: 30, scope: !8267)
!8289 = !DILocation(line: 217, column: 63, scope: !8267)
!8290 = !DILocation(line: 217, column: 65, scope: !8267)
!8291 = !DILocation(line: 217, column: 64, scope: !8267)
!8292 = !DILocation(line: 217, column: 67, scope: !8267)
!8293 = !DILocation(line: 217, column: 58, scope: !8267)
!8294 = !DILocation(line: 217, column: 56, scope: !8267)
!8295 = !DILocation(line: 217, column: 9, scope: !8267)
!8296 = !DILocation(line: 218, column: 12, scope: !8267)
!8297 = !DILocation(line: 218, column: 5, scope: !8267)
!8298 = distinct !DISubprogram(name: "c_weighting", scope: !801, file: !801, line: 221, type: !3768, isLocal: true, isDefinition: true, scopeLine: 222, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!8299 = !DILocalVariable(name: "p", arg: 1, scope: !8298, file: !801, line: 221, type: !191)
!8300 = !DILocation(line: 221, column: 33, scope: !8298)
!8301 = !DILocalVariable(name: "f", arg: 2, scope: !8298, file: !801, line: 221, type: !210)
!8302 = !DILocation(line: 221, column: 43, scope: !8298)
!8303 = !DILocalVariable(name: "ret", scope: !8298, file: !801, line: 223, type: !210)
!8304 = !DILocation(line: 223, column: 12, scope: !8298)
!8305 = !DILocation(line: 223, column: 37, scope: !8298)
!8306 = !DILocation(line: 223, column: 39, scope: !8298)
!8307 = !DILocation(line: 223, column: 38, scope: !8298)
!8308 = !DILocation(line: 223, column: 34, scope: !8298)
!8309 = !DILocation(line: 224, column: 13, scope: !8298)
!8310 = !DILocation(line: 224, column: 15, scope: !8298)
!8311 = !DILocation(line: 224, column: 14, scope: !8298)
!8312 = !DILocation(line: 224, column: 17, scope: !8298)
!8313 = !DILocation(line: 224, column: 33, scope: !8298)
!8314 = !DILocation(line: 224, column: 35, scope: !8298)
!8315 = !DILocation(line: 224, column: 34, scope: !8298)
!8316 = !DILocation(line: 224, column: 37, scope: !8298)
!8317 = !DILocation(line: 224, column: 30, scope: !8298)
!8318 = !DILocation(line: 224, column: 9, scope: !8298)
!8319 = !DILocation(line: 225, column: 12, scope: !8298)
!8320 = !DILocation(line: 225, column: 5, scope: !8298)
!8321 = distinct !DISubprogram(name: "clip_with_log", scope: !801, file: !801, line: 185, type: !8322, isLocal: true, isDefinition: true, scopeLine: 188, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!8322 = !DISubroutineType(types: !8323)
!8323 = !{!210, !191, !184, !210, !210, !210, !210, !200}
!8324 = !DILocalVariable(name: "log_ctx", arg: 1, scope: !8321, file: !801, line: 185, type: !191)
!8325 = !DILocation(line: 185, column: 35, scope: !8321)
!8326 = !DILocalVariable(name: "name", arg: 2, scope: !8321, file: !801, line: 185, type: !184)
!8327 = !DILocation(line: 185, column: 56, scope: !8321)
!8328 = !DILocalVariable(name: "val", arg: 3, scope: !8321, file: !801, line: 186, type: !210)
!8329 = !DILocation(line: 186, column: 36, scope: !8321)
!8330 = !DILocalVariable(name: "min", arg: 4, scope: !8321, file: !801, line: 186, type: !210)
!8331 = !DILocation(line: 186, column: 48, scope: !8321)
!8332 = !DILocalVariable(name: "max", arg: 5, scope: !8321, file: !801, line: 186, type: !210)
!8333 = !DILocation(line: 186, column: 60, scope: !8321)
!8334 = !DILocalVariable(name: "nan_replace", arg: 6, scope: !8321, file: !801, line: 187, type: !210)
!8335 = !DILocation(line: 187, column: 36, scope: !8321)
!8336 = !DILocalVariable(name: "idx", arg: 7, scope: !8321, file: !801, line: 187, type: !200)
!8337 = !DILocation(line: 187, column: 53, scope: !8321)
!8338 = !DILocalVariable(name: "level", scope: !8321, file: !801, line: 189, type: !200)
!8339 = !DILocation(line: 189, column: 9, scope: !8321)
!8340 = !DILocation(line: 190, column: 8, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8321, file: !801, line: 190, column: 8)
!8342 = !DILocation(line: 190, column: 8, scope: !8321)
!8343 = !DILocation(line: 191, column: 16, scope: !8344)
!8344 = distinct !DILexicalBlock(scope: !8341, file: !801, line: 190, column: 20)
!8345 = !DILocation(line: 191, column: 25, scope: !8344)
!8346 = !DILocation(line: 192, column: 16, scope: !8344)
!8347 = !DILocation(line: 192, column: 21, scope: !8344)
!8348 = !DILocation(line: 192, column: 27, scope: !8344)
!8349 = !DILocation(line: 191, column: 9, scope: !8344)
!8350 = !DILocation(line: 193, column: 15, scope: !8344)
!8351 = !DILocation(line: 193, column: 13, scope: !8344)
!8352 = !DILocation(line: 194, column: 5, scope: !8344)
!8353 = !DILocation(line: 194, column: 16, scope: !8354)
!8354 = !DILexicalBlockFile(scope: !8355, file: !801, discriminator: 1)
!8355 = distinct !DILexicalBlock(scope: !8341, file: !801, line: 194, column: 16)
!8356 = !DILocation(line: 194, column: 22, scope: !8354)
!8357 = !DILocation(line: 194, column: 20, scope: !8354)
!8358 = !DILocation(line: 195, column: 16, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8355, file: !801, line: 194, column: 27)
!8360 = !DILocation(line: 195, column: 25, scope: !8359)
!8361 = !DILocation(line: 196, column: 16, scope: !8359)
!8362 = !DILocation(line: 196, column: 21, scope: !8359)
!8363 = !DILocation(line: 196, column: 27, scope: !8359)
!8364 = !DILocation(line: 196, column: 32, scope: !8359)
!8365 = !DILocation(line: 195, column: 9, scope: !8359)
!8366 = !DILocation(line: 197, column: 15, scope: !8359)
!8367 = !DILocation(line: 197, column: 13, scope: !8359)
!8368 = !DILocation(line: 198, column: 5, scope: !8359)
!8369 = !DILocation(line: 198, column: 16, scope: !8370)
!8370 = !DILexicalBlockFile(scope: !8371, file: !801, discriminator: 1)
!8371 = distinct !DILexicalBlock(scope: !8355, file: !801, line: 198, column: 16)
!8372 = !DILocation(line: 198, column: 22, scope: !8370)
!8373 = !DILocation(line: 198, column: 20, scope: !8370)
!8374 = !DILocation(line: 199, column: 16, scope: !8375)
!8375 = distinct !DILexicalBlock(scope: !8371, file: !801, line: 198, column: 27)
!8376 = !DILocation(line: 199, column: 25, scope: !8375)
!8377 = !DILocation(line: 200, column: 16, scope: !8375)
!8378 = !DILocation(line: 200, column: 21, scope: !8375)
!8379 = !DILocation(line: 200, column: 27, scope: !8375)
!8380 = !DILocation(line: 200, column: 32, scope: !8375)
!8381 = !DILocation(line: 199, column: 9, scope: !8375)
!8382 = !DILocation(line: 201, column: 15, scope: !8375)
!8383 = !DILocation(line: 201, column: 13, scope: !8375)
!8384 = !DILocation(line: 202, column: 5, scope: !8375)
!8385 = !DILocation(line: 203, column: 12, scope: !8321)
!8386 = !DILocation(line: 203, column: 5, scope: !8321)
!8387 = distinct !DISubprogram(name: "convert_axis_pixel_format", scope: !801, file: !801, line: 385, type: !8388, isLocal: true, isDefinition: true, scopeLine: 386, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!8388 = !DISubroutineType(types: !8389)
!8389 = !{!580, !580}
!8390 = !DILocalVariable(name: "format", arg: 1, scope: !8387, file: !801, line: 385, type: !580)
!8391 = !DILocation(line: 385, column: 72, scope: !8387)
!8392 = !DILocation(line: 387, column: 13, scope: !8387)
!8393 = !DILocation(line: 387, column: 5, scope: !8387)
!8394 = !DILocation(line: 388, column: 39, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8387, file: !801, line: 387, column: 21)
!8396 = !DILocation(line: 388, column: 58, scope: !8395)
!8397 = !DILocation(line: 391, column: 41, scope: !8395)
!8398 = !DILocation(line: 391, column: 64, scope: !8395)
!8399 = !DILocation(line: 393, column: 12, scope: !8387)
!8400 = !DILocation(line: 393, column: 5, scope: !8387)
!8401 = distinct !DISubprogram(name: "render_freetype", scope: !801, file: !801, line: 505, type: !8402, isLocal: true, isDefinition: true, scopeLine: 506, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!8402 = !DISubroutineType(types: !8403)
!8403 = !{!200, !823, !285, !431}
!8404 = !DILocalVariable(name: "s", arg: 1, scope: !8401, file: !801, line: 505, type: !823)
!8405 = !DILocation(line: 505, column: 44, scope: !8401)
!8406 = !DILocalVariable(name: "tmp", arg: 2, scope: !8401, file: !801, line: 505, type: !285)
!8407 = !DILocation(line: 505, column: 56, scope: !8401)
!8408 = !DILocalVariable(name: "fontfile", arg: 3, scope: !8401, file: !801, line: 505, type: !431)
!8409 = !DILocation(line: 505, column: 67, scope: !8401)
!8410 = !DILocation(line: 583, column: 9, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !8401, file: !801, line: 583, column: 9)
!8412 = !DILocation(line: 583, column: 9, scope: !8401)
!8413 = !DILocation(line: 584, column: 16, scope: !8411)
!8414 = !DILocation(line: 584, column: 19, scope: !8411)
!8415 = !DILocation(line: 584, column: 9, scope: !8411)
!8416 = !DILocation(line: 585, column: 5, scope: !8401)
!8417 = distinct !DISubprogram(name: "render_fontconfig", scope: !801, file: !801, line: 589, type: !8402, isLocal: true, isDefinition: true, scopeLine: 590, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!8418 = !DILocalVariable(name: "s", arg: 1, scope: !8417, file: !801, line: 589, type: !823)
!8419 = !DILocation(line: 589, column: 46, scope: !8417)
!8420 = !DILocalVariable(name: "tmp", arg: 2, scope: !8417, file: !801, line: 589, type: !285)
!8421 = !DILocation(line: 589, column: 58, scope: !8417)
!8422 = !DILocalVariable(name: "font", arg: 3, scope: !8417, file: !801, line: 589, type: !431)
!8423 = !DILocation(line: 589, column: 69, scope: !8417)
!8424 = !DILocation(line: 647, column: 9, scope: !8425)
!8425 = distinct !DILexicalBlock(scope: !8417, file: !801, line: 647, column: 9)
!8426 = !DILocation(line: 647, column: 9, scope: !8417)
!8427 = !DILocation(line: 648, column: 16, scope: !8425)
!8428 = !DILocation(line: 648, column: 19, scope: !8425)
!8429 = !DILocation(line: 648, column: 9, scope: !8425)
!8430 = !DILocation(line: 649, column: 5, scope: !8417)
!8431 = distinct !DISubprogram(name: "render_default_font", scope: !801, file: !801, line: 653, type: !8432, isLocal: true, isDefinition: true, scopeLine: 654, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!8432 = !DISubroutineType(types: !8433)
!8433 = !{!200, !285}
!8434 = !DILocalVariable(name: "tmp", arg: 1, scope: !8431, file: !801, line: 653, type: !285)
!8435 = !DILocation(line: 653, column: 41, scope: !8431)
!8436 = !DILocalVariable(name: "str", scope: !8431, file: !801, line: 655, type: !184)
!8437 = !DILocation(line: 655, column: 17, scope: !8431)
!8438 = !DILocalVariable(name: "x", scope: !8431, file: !801, line: 656, type: !200)
!8439 = !DILocation(line: 656, column: 9, scope: !8431)
!8440 = !DILocalVariable(name: "u", scope: !8431, file: !801, line: 656, type: !200)
!8441 = !DILocation(line: 656, column: 12, scope: !8431)
!8442 = !DILocalVariable(name: "v", scope: !8431, file: !801, line: 656, type: !200)
!8443 = !DILocation(line: 656, column: 15, scope: !8431)
!8444 = !DILocalVariable(name: "mask", scope: !8431, file: !801, line: 656, type: !200)
!8445 = !DILocation(line: 656, column: 18, scope: !8431)
!8446 = !DILocalVariable(name: "data", scope: !8431, file: !801, line: 657, type: !291)
!8447 = !DILocation(line: 657, column: 14, scope: !8431)
!8448 = !DILocation(line: 657, column: 21, scope: !8431)
!8449 = !DILocation(line: 657, column: 26, scope: !8431)
!8450 = !DILocalVariable(name: "linesize", scope: !8431, file: !801, line: 658, type: !200)
!8451 = !DILocation(line: 658, column: 9, scope: !8431)
!8452 = !DILocation(line: 658, column: 20, scope: !8431)
!8453 = !DILocation(line: 658, column: 25, scope: !8431)
!8454 = !DILocalVariable(name: "width", scope: !8431, file: !801, line: 659, type: !200)
!8455 = !DILocation(line: 659, column: 9, scope: !8431)
!8456 = !DILocalVariable(name: "height", scope: !8431, file: !801, line: 659, type: !200)
!8457 = !DILocation(line: 659, column: 25, scope: !8431)
!8458 = !DILocation(line: 661, column: 12, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8431, file: !801, line: 661, column: 5)
!8460 = !DILocation(line: 661, column: 10, scope: !8459)
!8461 = !DILocation(line: 661, column: 17, scope: !8462)
!8462 = !DILexicalBlockFile(scope: !8463, file: !801, discriminator: 1)
!8463 = distinct !DILexicalBlock(scope: !8459, file: !801, line: 661, column: 5)
!8464 = !DILocation(line: 661, column: 21, scope: !8462)
!8465 = !DILocation(line: 661, column: 19, scope: !8462)
!8466 = !DILocation(line: 661, column: 5, scope: !8462)
!8467 = !DILocalVariable(name: "startptr", scope: !8468, file: !801, line: 662, type: !291)
!8468 = distinct !DILexicalBlock(scope: !8463, file: !801, line: 661, column: 43)
!8469 = !DILocation(line: 662, column: 18, scope: !8468)
!8470 = !DILocation(line: 662, column: 29, scope: !8468)
!8471 = !DILocation(line: 662, column: 40, scope: !8468)
!8472 = !DILocation(line: 662, column: 38, scope: !8468)
!8473 = !DILocation(line: 662, column: 34, scope: !8468)
!8474 = !DILocation(line: 663, column: 16, scope: !8475)
!8475 = distinct !DILexicalBlock(scope: !8468, file: !801, line: 663, column: 9)
!8476 = !DILocation(line: 663, column: 14, scope: !8475)
!8477 = !DILocation(line: 663, column: 21, scope: !8478)
!8478 = !DILexicalBlockFile(scope: !8479, file: !801, discriminator: 1)
!8479 = distinct !DILexicalBlock(scope: !8475, file: !801, line: 663, column: 9)
!8480 = !DILocation(line: 663, column: 23, scope: !8478)
!8481 = !DILocation(line: 663, column: 9, scope: !8478)
!8482 = !DILocation(line: 664, column: 20, scope: !8483)
!8483 = distinct !DILexicalBlock(scope: !8484, file: !801, line: 664, column: 13)
!8484 = distinct !DILexicalBlock(scope: !8479, file: !801, line: 663, column: 34)
!8485 = !DILocation(line: 664, column: 18, scope: !8483)
!8486 = !DILocation(line: 664, column: 25, scope: !8487)
!8487 = !DILexicalBlockFile(scope: !8488, file: !801, discriminator: 1)
!8488 = distinct !DILexicalBlock(scope: !8483, file: !801, line: 664, column: 13)
!8489 = !DILocation(line: 664, column: 29, scope: !8487)
!8490 = !DILocation(line: 664, column: 27, scope: !8487)
!8491 = !DILocation(line: 664, column: 13, scope: !8487)
!8492 = !DILocalVariable(name: "p", scope: !8493, file: !801, line: 665, type: !291)
!8493 = distinct !DILexicalBlock(scope: !8488, file: !801, line: 664, column: 42)
!8494 = !DILocation(line: 665, column: 26, scope: !8493)
!8495 = !DILocation(line: 665, column: 30, scope: !8493)
!8496 = !DILocation(line: 665, column: 41, scope: !8493)
!8497 = !DILocation(line: 665, column: 45, scope: !8493)
!8498 = !DILocation(line: 665, column: 43, scope: !8493)
!8499 = !DILocation(line: 665, column: 39, scope: !8493)
!8500 = !DILocation(line: 665, column: 56, scope: !8493)
!8501 = !DILocation(line: 665, column: 62, scope: !8493)
!8502 = !DILocation(line: 665, column: 65, scope: !8493)
!8503 = !DILocation(line: 665, column: 71, scope: !8493)
!8504 = !DILocation(line: 665, column: 69, scope: !8493)
!8505 = !DILocation(line: 665, column: 54, scope: !8493)
!8506 = !DILocation(line: 666, column: 27, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !8493, file: !801, line: 666, column: 17)
!8508 = !DILocation(line: 666, column: 22, scope: !8507)
!8509 = !DILocation(line: 666, column: 35, scope: !8510)
!8510 = !DILexicalBlockFile(scope: !8511, file: !801, discriminator: 1)
!8511 = distinct !DILexicalBlock(scope: !8507, file: !801, line: 666, column: 17)
!8512 = !DILocation(line: 666, column: 17, scope: !8510)
!8513 = !DILocation(line: 667, column: 25, scope: !8514)
!8514 = distinct !DILexicalBlock(scope: !8515, file: !801, line: 667, column: 25)
!8515 = distinct !DILexicalBlock(scope: !8511, file: !801, line: 666, column: 61)
!8516 = !DILocation(line: 667, column: 54, scope: !8514)
!8517 = !DILocation(line: 667, column: 50, scope: !8514)
!8518 = !DILocation(line: 667, column: 57, scope: !8514)
!8519 = !DILocation(line: 667, column: 64, scope: !8514)
!8520 = !DILocation(line: 667, column: 62, scope: !8514)
!8521 = !DILocation(line: 667, column: 32, scope: !8514)
!8522 = !DILocation(line: 667, column: 30, scope: !8514)
!8523 = !DILocation(line: 667, column: 25, scope: !8515)
!8524 = !DILocation(line: 668, column: 25, scope: !8514)
!8525 = !DILocation(line: 668, column: 30, scope: !8514)
!8526 = !DILocation(line: 670, column: 25, scope: !8514)
!8527 = !DILocation(line: 670, column: 30, scope: !8514)
!8528 = !DILocation(line: 671, column: 17, scope: !8515)
!8529 = !DILocation(line: 666, column: 46, scope: !8530)
!8530 = !DILexicalBlockFile(scope: !8511, file: !801, discriminator: 2)
!8531 = !DILocation(line: 666, column: 55, scope: !8530)
!8532 = !DILocation(line: 666, column: 17, scope: !8530)
!8533 = distinct !{!8533, !8534}
!8534 = !DILocation(line: 666, column: 17, scope: !8493)
!8535 = !DILocation(line: 672, column: 13, scope: !8493)
!8536 = !DILocation(line: 664, column: 38, scope: !8537)
!8537 = !DILexicalBlockFile(scope: !8488, file: !801, discriminator: 2)
!8538 = !DILocation(line: 664, column: 13, scope: !8537)
!8539 = distinct !{!8539, !8540}
!8540 = !DILocation(line: 664, column: 13, scope: !8484)
!8541 = !DILocation(line: 673, column: 9, scope: !8484)
!8542 = !DILocation(line: 663, column: 30, scope: !8543)
!8543 = !DILexicalBlockFile(scope: !8479, file: !801, discriminator: 2)
!8544 = !DILocation(line: 663, column: 9, scope: !8543)
!8545 = distinct !{!8545, !8546}
!8546 = !DILocation(line: 663, column: 9, scope: !8468)
!8547 = !DILocation(line: 674, column: 5, scope: !8468)
!8548 = !DILocation(line: 661, column: 33, scope: !8549)
!8549 = !DILexicalBlockFile(scope: !8463, file: !801, discriminator: 2)
!8550 = !DILocation(line: 661, column: 38, scope: !8549)
!8551 = !DILocation(line: 661, column: 30, scope: !8549)
!8552 = !DILocation(line: 661, column: 5, scope: !8549)
!8553 = distinct !{!8553, !8554}
!8554 = !DILocation(line: 661, column: 5, scope: !8431)
!8555 = !DILocation(line: 676, column: 5, scope: !8431)
!8556 = distinct !DISubprogram(name: "init_axis_color", scope: !801, file: !801, line: 458, type: !8557, isLocal: true, isDefinition: true, scopeLine: 459, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!8557 = !DISubroutineType(types: !8558)
!8558 = !{!200, !823, !285, !200}
!8559 = !DILocalVariable(name: "s", arg: 1, scope: !8556, file: !801, line: 458, type: !823)
!8560 = !DILocation(line: 458, column: 44, scope: !8556)
!8561 = !DILocalVariable(name: "tmp", arg: 2, scope: !8556, file: !801, line: 458, type: !285)
!8562 = !DILocation(line: 458, column: 56, scope: !8556)
!8563 = !DILocalVariable(name: "half", arg: 3, scope: !8556, file: !801, line: 458, type: !200)
!8564 = !DILocation(line: 458, column: 65, scope: !8556)
!8565 = !DILocalVariable(name: "var_names", scope: !8556, file: !801, line: 460, type: !7552)
!8566 = !DILocation(line: 460, column: 17, scope: !8556)
!8567 = !DILocalVariable(name: "func_names", scope: !8556, file: !801, line: 461, type: !8568)
!8568 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 320, align: 64, elements: !1307)
!8569 = !DILocation(line: 461, column: 17, scope: !8556)
!8570 = !DILocalVariable(name: "funcs", scope: !8556, file: !801, line: 462, type: !8571)
!8571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3767, size: 256, align: 64, elements: !3755)
!8572 = !DILocation(line: 462, column: 14, scope: !8556)
!8573 = !DILocalVariable(name: "expr", scope: !8556, file: !801, line: 463, type: !3772)
!8574 = !DILocation(line: 463, column: 13, scope: !8556)
!8575 = !DILocalVariable(name: "freq", scope: !8556, file: !801, line: 464, type: !507)
!8576 = !DILocation(line: 464, column: 13, scope: !8556)
!8577 = !DILocalVariable(name: "x", scope: !8556, file: !801, line: 465, type: !200)
!8578 = !DILocation(line: 465, column: 9, scope: !8556)
!8579 = !DILocalVariable(name: "xs", scope: !8556, file: !801, line: 465, type: !200)
!8580 = !DILocation(line: 465, column: 12, scope: !8556)
!8581 = !DILocalVariable(name: "y", scope: !8556, file: !801, line: 465, type: !200)
!8582 = !DILocation(line: 465, column: 16, scope: !8556)
!8583 = !DILocalVariable(name: "ret", scope: !8556, file: !801, line: 465, type: !200)
!8584 = !DILocation(line: 465, column: 19, scope: !8556)
!8585 = !DILocalVariable(name: "width", scope: !8556, file: !801, line: 466, type: !200)
!8586 = !DILocation(line: 466, column: 9, scope: !8556)
!8587 = !DILocation(line: 466, column: 17, scope: !8556)
!8588 = !DILocalVariable(name: "height", scope: !8556, file: !801, line: 466, type: !200)
!8589 = !DILocation(line: 466, column: 39, scope: !8556)
!8590 = !DILocation(line: 466, column: 48, scope: !8556)
!8591 = !DILocalVariable(name: "step", scope: !8556, file: !801, line: 467, type: !200)
!8592 = !DILocation(line: 467, column: 9, scope: !8556)
!8593 = !DILocation(line: 467, column: 16, scope: !8556)
!8594 = !DILocation(line: 469, column: 9, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !8556, file: !801, line: 469, column: 9)
!8596 = !DILocation(line: 469, column: 12, scope: !8595)
!8597 = !DILocation(line: 469, column: 21, scope: !8595)
!8598 = !DILocation(line: 469, column: 54, scope: !8595)
!8599 = !DILocation(line: 469, column: 57, scope: !8600)
!8600 = !DILexicalBlockFile(scope: !8595, file: !801, discriminator: 1)
!8601 = !DILocation(line: 469, column: 60, scope: !8600)
!8602 = !DILocation(line: 469, column: 68, scope: !8600)
!8603 = !DILocation(line: 469, column: 9, scope: !8600)
!8604 = !DILocation(line: 470, column: 16, scope: !8605)
!8605 = distinct !DILexicalBlock(scope: !8595, file: !801, line: 469, column: 102)
!8606 = !DILocation(line: 470, column: 19, scope: !8605)
!8607 = !DILocation(line: 470, column: 9, scope: !8605)
!8608 = !DILocation(line: 472, column: 9, scope: !8605)
!8609 = !DILocation(line: 475, column: 9, scope: !8610)
!8610 = distinct !DILexicalBlock(scope: !8556, file: !801, line: 475, column: 9)
!8611 = !DILocation(line: 475, column: 12, scope: !8610)
!8612 = !DILocation(line: 475, column: 20, scope: !8610)
!8613 = !DILocation(line: 475, column: 9, scope: !8556)
!8614 = !DILocation(line: 476, column: 16, scope: !8610)
!8615 = !DILocation(line: 476, column: 19, scope: !8610)
!8616 = !DILocation(line: 476, column: 14, scope: !8610)
!8617 = !DILocation(line: 476, column: 9, scope: !8610)
!8618 = !DILocation(line: 477, column: 41, scope: !8619)
!8619 = distinct !DILexicalBlock(scope: !8610, file: !801, line: 477, column: 14)
!8620 = !DILocation(line: 477, column: 44, scope: !8619)
!8621 = !DILocation(line: 477, column: 54, scope: !8619)
!8622 = !DILocation(line: 477, column: 57, scope: !8619)
!8623 = !DILocation(line: 477, column: 23, scope: !8619)
!8624 = !DILocation(line: 477, column: 21, scope: !8619)
!8625 = !DILocation(line: 477, column: 14, scope: !8610)
!8626 = !DILocation(line: 478, column: 9, scope: !8619)
!8627 = !DILocation(line: 480, column: 37, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8556, file: !801, line: 480, column: 9)
!8629 = !DILocation(line: 480, column: 40, scope: !8628)
!8630 = !DILocation(line: 480, column: 51, scope: !8628)
!8631 = !DILocation(line: 480, column: 62, scope: !8628)
!8632 = !DILocation(line: 480, column: 74, scope: !8628)
!8633 = !DILocation(line: 480, column: 95, scope: !8628)
!8634 = !DILocation(line: 480, column: 98, scope: !8628)
!8635 = !DILocation(line: 480, column: 16, scope: !8628)
!8636 = !DILocation(line: 480, column: 14, scope: !8628)
!8637 = !DILocation(line: 480, column: 104, scope: !8628)
!8638 = !DILocation(line: 480, column: 9, scope: !8556)
!8639 = !DILocation(line: 481, column: 13, scope: !8640)
!8640 = distinct !DILexicalBlock(scope: !8641, file: !801, line: 481, column: 13)
!8641 = distinct !DILexicalBlock(scope: !8628, file: !801, line: 480, column: 109)
!8642 = !DILocation(line: 481, column: 21, scope: !8640)
!8643 = !DILocation(line: 481, column: 24, scope: !8640)
!8644 = !DILocation(line: 481, column: 18, scope: !8640)
!8645 = !DILocation(line: 481, column: 13, scope: !8641)
!8646 = !DILocation(line: 482, column: 22, scope: !8640)
!8647 = !DILocation(line: 482, column: 13, scope: !8640)
!8648 = !DILocation(line: 483, column: 16, scope: !8641)
!8649 = !DILocation(line: 483, column: 9, scope: !8641)
!8650 = !DILocation(line: 486, column: 12, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !8556, file: !801, line: 486, column: 5)
!8652 = !DILocation(line: 486, column: 20, scope: !8651)
!8653 = !DILocation(line: 486, column: 10, scope: !8651)
!8654 = !DILocation(line: 486, column: 25, scope: !8655)
!8655 = !DILexicalBlockFile(scope: !8656, file: !801, discriminator: 1)
!8656 = distinct !DILexicalBlock(scope: !8651, file: !801, line: 486, column: 5)
!8657 = !DILocation(line: 486, column: 29, scope: !8655)
!8658 = !DILocation(line: 486, column: 27, scope: !8655)
!8659 = !DILocation(line: 486, column: 5, scope: !8655)
!8660 = !DILocalVariable(name: "vars", scope: !8661, file: !801, line: 487, type: !7603)
!8661 = distinct !DILexicalBlock(scope: !8656, file: !801, line: 486, column: 53)
!8662 = !DILocation(line: 487, column: 16, scope: !8661)
!8663 = !DILocation(line: 487, column: 25, scope: !8661)
!8664 = !DILocation(line: 487, column: 27, scope: !8661)
!8665 = !DILocation(line: 487, column: 30, scope: !8661)
!8666 = !DILocation(line: 487, column: 41, scope: !8661)
!8667 = !DILocation(line: 487, column: 44, scope: !8661)
!8668 = !DILocation(line: 487, column: 60, scope: !8661)
!8669 = !DILocation(line: 487, column: 55, scope: !8661)
!8670 = !DILocation(line: 487, column: 70, scope: !8661)
!8671 = !DILocation(line: 487, column: 65, scope: !8661)
!8672 = !DILocation(line: 487, column: 80, scope: !8661)
!8673 = !DILocation(line: 487, column: 75, scope: !8661)
!8674 = !DILocalVariable(name: "color", scope: !8661, file: !801, line: 488, type: !200)
!8675 = !DILocation(line: 488, column: 13, scope: !8661)
!8676 = !DILocation(line: 488, column: 40, scope: !8661)
!8677 = !DILocation(line: 488, column: 46, scope: !8661)
!8678 = !DILocation(line: 488, column: 27, scope: !8661)
!8679 = !DILocation(line: 488, column: 21, scope: !8661)
!8680 = !DILocalVariable(name: "r", scope: !8661, file: !801, line: 489, type: !292)
!8681 = !DILocation(line: 489, column: 17, scope: !8661)
!8682 = !DILocation(line: 489, column: 22, scope: !8661)
!8683 = !DILocation(line: 489, column: 28, scope: !8661)
!8684 = !DILocation(line: 489, column: 35, scope: !8661)
!8685 = !DILocation(line: 489, column: 21, scope: !8661)
!8686 = !DILocalVariable(name: "g", scope: !8661, file: !801, line: 489, type: !292)
!8687 = !DILocation(line: 489, column: 43, scope: !8661)
!8688 = !DILocation(line: 489, column: 48, scope: !8661)
!8689 = !DILocation(line: 489, column: 54, scope: !8661)
!8690 = !DILocation(line: 489, column: 60, scope: !8661)
!8691 = !DILocation(line: 489, column: 47, scope: !8661)
!8692 = !DILocalVariable(name: "b", scope: !8661, file: !801, line: 489, type: !292)
!8693 = !DILocation(line: 489, column: 68, scope: !8661)
!8694 = !DILocation(line: 489, column: 72, scope: !8661)
!8695 = !DILocation(line: 489, column: 78, scope: !8661)
!8696 = !DILocalVariable(name: "data", scope: !8661, file: !801, line: 490, type: !291)
!8697 = !DILocation(line: 490, column: 18, scope: !8661)
!8698 = !DILocation(line: 490, column: 25, scope: !8661)
!8699 = !DILocation(line: 490, column: 30, scope: !8661)
!8700 = !DILocalVariable(name: "linesize", scope: !8661, file: !801, line: 491, type: !200)
!8701 = !DILocation(line: 491, column: 13, scope: !8661)
!8702 = !DILocation(line: 491, column: 24, scope: !8661)
!8703 = !DILocation(line: 491, column: 29, scope: !8661)
!8704 = !DILocation(line: 492, column: 16, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8661, file: !801, line: 492, column: 9)
!8706 = !DILocation(line: 492, column: 14, scope: !8705)
!8707 = !DILocation(line: 492, column: 21, scope: !8708)
!8708 = !DILexicalBlockFile(scope: !8709, file: !801, discriminator: 1)
!8709 = distinct !DILexicalBlock(scope: !8705, file: !801, line: 492, column: 9)
!8710 = !DILocation(line: 492, column: 25, scope: !8708)
!8711 = !DILocation(line: 492, column: 23, scope: !8708)
!8712 = !DILocation(line: 492, column: 9, scope: !8708)
!8713 = !DILocation(line: 493, column: 42, scope: !8714)
!8714 = distinct !DILexicalBlock(scope: !8709, file: !801, line: 492, column: 38)
!8715 = !DILocation(line: 493, column: 18, scope: !8714)
!8716 = !DILocation(line: 493, column: 29, scope: !8714)
!8717 = !DILocation(line: 493, column: 27, scope: !8714)
!8718 = !DILocation(line: 493, column: 37, scope: !8714)
!8719 = !DILocation(line: 493, column: 35, scope: !8714)
!8720 = !DILocation(line: 493, column: 31, scope: !8714)
!8721 = !DILocation(line: 493, column: 13, scope: !8714)
!8722 = !DILocation(line: 493, column: 40, scope: !8714)
!8723 = !DILocation(line: 494, column: 46, scope: !8714)
!8724 = !DILocation(line: 494, column: 18, scope: !8714)
!8725 = !DILocation(line: 494, column: 29, scope: !8714)
!8726 = !DILocation(line: 494, column: 27, scope: !8714)
!8727 = !DILocation(line: 494, column: 37, scope: !8714)
!8728 = !DILocation(line: 494, column: 35, scope: !8714)
!8729 = !DILocation(line: 494, column: 31, scope: !8714)
!8730 = !DILocation(line: 494, column: 39, scope: !8714)
!8731 = !DILocation(line: 494, column: 13, scope: !8714)
!8732 = !DILocation(line: 494, column: 44, scope: !8714)
!8733 = !DILocation(line: 495, column: 46, scope: !8714)
!8734 = !DILocation(line: 495, column: 18, scope: !8714)
!8735 = !DILocation(line: 495, column: 29, scope: !8714)
!8736 = !DILocation(line: 495, column: 27, scope: !8714)
!8737 = !DILocation(line: 495, column: 37, scope: !8714)
!8738 = !DILocation(line: 495, column: 35, scope: !8714)
!8739 = !DILocation(line: 495, column: 31, scope: !8714)
!8740 = !DILocation(line: 495, column: 39, scope: !8714)
!8741 = !DILocation(line: 495, column: 13, scope: !8714)
!8742 = !DILocation(line: 495, column: 44, scope: !8714)
!8743 = !DILocation(line: 496, column: 9, scope: !8714)
!8744 = !DILocation(line: 492, column: 34, scope: !8745)
!8745 = !DILexicalBlockFile(scope: !8709, file: !801, discriminator: 2)
!8746 = !DILocation(line: 492, column: 9, scope: !8745)
!8747 = distinct !{!8747, !8748}
!8748 = !DILocation(line: 492, column: 9, scope: !8661)
!8749 = !DILocation(line: 497, column: 5, scope: !8661)
!8750 = !DILocation(line: 486, column: 37, scope: !8751)
!8751 = !DILexicalBlockFile(scope: !8656, file: !801, discriminator: 2)
!8752 = !DILocation(line: 486, column: 47, scope: !8751)
!8753 = !DILocation(line: 486, column: 44, scope: !8751)
!8754 = !DILocation(line: 486, column: 5, scope: !8751)
!8755 = distinct !{!8755, !8756}
!8756 = !DILocation(line: 486, column: 5, scope: !8556)
!8757 = !DILocation(line: 499, column: 18, scope: !8556)
!8758 = !DILocation(line: 499, column: 5, scope: !8556)
!8759 = !DILocation(line: 500, column: 9, scope: !8760)
!8760 = distinct !DILexicalBlock(scope: !8556, file: !801, line: 500, column: 9)
!8761 = !DILocation(line: 500, column: 17, scope: !8760)
!8762 = !DILocation(line: 500, column: 20, scope: !8760)
!8763 = !DILocation(line: 500, column: 14, scope: !8760)
!8764 = !DILocation(line: 500, column: 9, scope: !8556)
!8765 = !DILocation(line: 501, column: 18, scope: !8760)
!8766 = !DILocation(line: 501, column: 9, scope: !8760)
!8767 = !DILocation(line: 502, column: 5, scope: !8556)
!8768 = !DILocation(line: 503, column: 1, scope: !8556)
!8769 = distinct !DISubprogram(name: "midi", scope: !801, file: !801, line: 435, type: !3768, isLocal: true, isDefinition: true, scopeLine: 436, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!8770 = !DILocalVariable(name: "p", arg: 1, scope: !8769, file: !801, line: 435, type: !191)
!8771 = !DILocation(line: 435, column: 26, scope: !8769)
!8772 = !DILocalVariable(name: "f", arg: 2, scope: !8769, file: !801, line: 435, type: !210)
!8773 = !DILocation(line: 435, column: 36, scope: !8769)
!8774 = !DILocation(line: 437, column: 17, scope: !8769)
!8775 = !DILocation(line: 437, column: 18, scope: !8769)
!8776 = !DILocation(line: 437, column: 12, scope: !8769)
!8777 = !DILocation(line: 437, column: 26, scope: !8769)
!8778 = !DILocation(line: 437, column: 33, scope: !8769)
!8779 = !DILocation(line: 437, column: 5, scope: !8769)
!8780 = distinct !DISubprogram(name: "r_func", scope: !801, file: !801, line: 440, type: !3768, isLocal: true, isDefinition: true, scopeLine: 441, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!8781 = !DILocalVariable(name: "a", arg: 1, scope: !8782, file: !8783, line: 108, type: !210)
!8782 = distinct !DISubprogram(name: "av_clipd_sse2", scope: !8783, file: !8783, line: 108, type: !8784, isLocal: true, isDefinition: true, scopeLine: 109, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!8783 = !DIFile(filename: "./libavutil/x86/intmath.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!8784 = !DISubroutineType(types: !8785)
!8785 = !{!210, !210, !210, !210}
!8786 = !DILocation(line: 108, column: 97, scope: !8782, inlinedAt: !8787)
!8787 = distinct !DILocation(line: 442, column: 9, scope: !8780)
!8788 = !DILocalVariable(name: "amin", arg: 2, scope: !8782, file: !8783, line: 108, type: !210)
!8789 = !DILocation(line: 108, column: 107, scope: !8782, inlinedAt: !8787)
!8790 = !DILocalVariable(name: "amax", arg: 3, scope: !8782, file: !8783, line: 108, type: !210)
!8791 = !DILocation(line: 108, column: 120, scope: !8782, inlinedAt: !8787)
!8792 = !DILocalVariable(name: "p", arg: 1, scope: !8780, file: !801, line: 440, type: !191)
!8793 = !DILocation(line: 440, column: 28, scope: !8780)
!8794 = !DILocalVariable(name: "x", arg: 2, scope: !8780, file: !801, line: 440, type: !210)
!8795 = !DILocation(line: 440, column: 38, scope: !8780)
!8796 = !DILocation(line: 442, column: 23, scope: !8780)
!8797 = !DILocation(line: 442, column: 9, scope: !8780)
!8798 = !DILocation(line: 113, column: 5, scope: !8782, inlinedAt: !8787)
!8799 = !DILocation(line: 115, column: 32, scope: !8782, inlinedAt: !8787)
!8800 = !DILocation(line: 115, column: 44, scope: !8782, inlinedAt: !8787)
!8801 = !{i32 80841, i32 80857, i32 80890}
!8802 = !DILocation(line: 116, column: 12, scope: !8782, inlinedAt: !8787)
!8803 = !DILocation(line: 442, column: 7, scope: !8780)
!8804 = !DILocation(line: 443, column: 18, scope: !8780)
!8805 = !DILocation(line: 443, column: 19, scope: !8780)
!8806 = !DILocation(line: 443, column: 12, scope: !8780)
!8807 = !DILocation(line: 443, column: 27, scope: !8780)
!8808 = !DILocation(line: 443, column: 5, scope: !8780)
!8809 = distinct !DISubprogram(name: "g_func", scope: !801, file: !801, line: 446, type: !3768, isLocal: true, isDefinition: true, scopeLine: 447, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!8810 = !DILocation(line: 108, column: 97, scope: !8782, inlinedAt: !8811)
!8811 = distinct !DILocation(line: 448, column: 9, scope: !8809)
!8812 = !DILocation(line: 108, column: 107, scope: !8782, inlinedAt: !8811)
!8813 = !DILocation(line: 108, column: 120, scope: !8782, inlinedAt: !8811)
!8814 = !DILocalVariable(name: "p", arg: 1, scope: !8809, file: !801, line: 446, type: !191)
!8815 = !DILocation(line: 446, column: 28, scope: !8809)
!8816 = !DILocalVariable(name: "x", arg: 2, scope: !8809, file: !801, line: 446, type: !210)
!8817 = !DILocation(line: 446, column: 38, scope: !8809)
!8818 = !DILocation(line: 448, column: 23, scope: !8809)
!8819 = !DILocation(line: 448, column: 9, scope: !8809)
!8820 = !DILocation(line: 113, column: 5, scope: !8782, inlinedAt: !8811)
!8821 = !DILocation(line: 115, column: 32, scope: !8782, inlinedAt: !8811)
!8822 = !DILocation(line: 115, column: 44, scope: !8782, inlinedAt: !8811)
!8823 = !DILocation(line: 116, column: 12, scope: !8782, inlinedAt: !8811)
!8824 = !DILocation(line: 448, column: 7, scope: !8809)
!8825 = !DILocation(line: 449, column: 18, scope: !8809)
!8826 = !DILocation(line: 449, column: 19, scope: !8809)
!8827 = !DILocation(line: 449, column: 12, scope: !8809)
!8828 = !DILocation(line: 449, column: 27, scope: !8809)
!8829 = !DILocation(line: 449, column: 5, scope: !8809)
!8830 = distinct !DISubprogram(name: "b_func", scope: !801, file: !801, line: 452, type: !3768, isLocal: true, isDefinition: true, scopeLine: 453, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!8831 = !DILocation(line: 108, column: 97, scope: !8782, inlinedAt: !8832)
!8832 = distinct !DILocation(line: 454, column: 9, scope: !8830)
!8833 = !DILocation(line: 108, column: 107, scope: !8782, inlinedAt: !8832)
!8834 = !DILocation(line: 108, column: 120, scope: !8782, inlinedAt: !8832)
!8835 = !DILocalVariable(name: "p", arg: 1, scope: !8830, file: !801, line: 452, type: !191)
!8836 = !DILocation(line: 452, column: 28, scope: !8830)
!8837 = !DILocalVariable(name: "x", arg: 2, scope: !8830, file: !801, line: 452, type: !210)
!8838 = !DILocation(line: 452, column: 38, scope: !8830)
!8839 = !DILocation(line: 454, column: 23, scope: !8830)
!8840 = !DILocation(line: 454, column: 9, scope: !8830)
!8841 = !DILocation(line: 113, column: 5, scope: !8782, inlinedAt: !8832)
!8842 = !DILocation(line: 115, column: 32, scope: !8782, inlinedAt: !8832)
!8843 = !DILocation(line: 115, column: 44, scope: !8782, inlinedAt: !8832)
!8844 = !DILocation(line: 116, column: 12, scope: !8782, inlinedAt: !8832)
!8845 = !DILocation(line: 454, column: 7, scope: !8830)
!8846 = !DILocation(line: 455, column: 18, scope: !8830)
!8847 = !DILocation(line: 455, column: 19, scope: !8830)
!8848 = !DILocation(line: 455, column: 12, scope: !8830)
!8849 = !DILocation(line: 455, column: 5, scope: !8830)
!8850 = distinct !DISubprogram(name: "init_colormatrix", scope: !801, file: !801, line: 1199, type: !2163, isLocal: true, isDefinition: true, scopeLine: 1200, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!8851 = !DILocalVariable(name: "s", arg: 1, scope: !8850, file: !801, line: 1199, type: !823)
!8852 = !DILocation(line: 1199, column: 46, scope: !8850)
!8853 = !DILocalVariable(name: "kr", scope: !8850, file: !801, line: 1201, type: !210)
!8854 = !DILocation(line: 1201, column: 12, scope: !8850)
!8855 = !DILocalVariable(name: "kg", scope: !8850, file: !801, line: 1201, type: !210)
!8856 = !DILocation(line: 1201, column: 16, scope: !8850)
!8857 = !DILocalVariable(name: "kb", scope: !8850, file: !801, line: 1201, type: !210)
!8858 = !DILocation(line: 1201, column: 20, scope: !8850)
!8859 = !DILocation(line: 1204, column: 13, scope: !8850)
!8860 = !DILocation(line: 1204, column: 16, scope: !8850)
!8861 = !DILocation(line: 1204, column: 5, scope: !8850)
!8862 = !DILocation(line: 1206, column: 16, scope: !8863)
!8863 = distinct !DILexicalBlock(scope: !8850, file: !801, line: 1204, column: 21)
!8864 = !DILocation(line: 1206, column: 19, scope: !8863)
!8865 = !DILocation(line: 1206, column: 9, scope: !8863)
!8866 = !DILocation(line: 1207, column: 9, scope: !8863)
!8867 = !DILocation(line: 1207, column: 12, scope: !8863)
!8868 = !DILocation(line: 1207, column: 16, scope: !8863)
!8869 = !DILocation(line: 1211, column: 12, scope: !8863)
!8870 = !DILocation(line: 1211, column: 24, scope: !8863)
!8871 = !DILocation(line: 1211, column: 33, scope: !8863)
!8872 = !DILocation(line: 1213, column: 12, scope: !8863)
!8873 = !DILocation(line: 1213, column: 25, scope: !8863)
!8874 = !DILocation(line: 1213, column: 35, scope: !8863)
!8875 = !DILocation(line: 1215, column: 12, scope: !8863)
!8876 = !DILocation(line: 1215, column: 23, scope: !8863)
!8877 = !DILocation(line: 1215, column: 31, scope: !8863)
!8878 = !DILocation(line: 1217, column: 12, scope: !8863)
!8879 = !DILocation(line: 1217, column: 24, scope: !8863)
!8880 = !DILocation(line: 1217, column: 33, scope: !8863)
!8881 = !DILocation(line: 1219, column: 12, scope: !8863)
!8882 = !DILocation(line: 1219, column: 25, scope: !8863)
!8883 = !DILocation(line: 1219, column: 35, scope: !8863)
!8884 = !DILocation(line: 1222, column: 16, scope: !8850)
!8885 = !DILocation(line: 1222, column: 14, scope: !8850)
!8886 = !DILocation(line: 1222, column: 21, scope: !8850)
!8887 = !DILocation(line: 1222, column: 19, scope: !8850)
!8888 = !DILocation(line: 1222, column: 8, scope: !8850)
!8889 = !DILocation(line: 1223, column: 32, scope: !8850)
!8890 = !DILocation(line: 1223, column: 30, scope: !8850)
!8891 = !DILocation(line: 1223, column: 24, scope: !8850)
!8892 = !DILocation(line: 1223, column: 5, scope: !8850)
!8893 = !DILocation(line: 1223, column: 8, scope: !8850)
!8894 = !DILocation(line: 1223, column: 22, scope: !8850)
!8895 = !DILocation(line: 1224, column: 32, scope: !8850)
!8896 = !DILocation(line: 1224, column: 30, scope: !8850)
!8897 = !DILocation(line: 1224, column: 24, scope: !8850)
!8898 = !DILocation(line: 1224, column: 5, scope: !8850)
!8899 = !DILocation(line: 1224, column: 8, scope: !8850)
!8900 = !DILocation(line: 1224, column: 22, scope: !8850)
!8901 = !DILocation(line: 1225, column: 32, scope: !8850)
!8902 = !DILocation(line: 1225, column: 30, scope: !8850)
!8903 = !DILocation(line: 1225, column: 24, scope: !8850)
!8904 = !DILocation(line: 1225, column: 5, scope: !8850)
!8905 = !DILocation(line: 1225, column: 8, scope: !8850)
!8906 = !DILocation(line: 1225, column: 22, scope: !8850)
!8907 = !DILocation(line: 1226, column: 33, scope: !8850)
!8908 = !DILocation(line: 1226, column: 31, scope: !8850)
!8909 = !DILocation(line: 1226, column: 45, scope: !8850)
!8910 = !DILocation(line: 1226, column: 43, scope: !8850)
!8911 = !DILocation(line: 1226, column: 36, scope: !8850)
!8912 = !DILocation(line: 1226, column: 24, scope: !8850)
!8913 = !DILocation(line: 1226, column: 5, scope: !8850)
!8914 = !DILocation(line: 1226, column: 8, scope: !8850)
!8915 = !DILocation(line: 1226, column: 22, scope: !8850)
!8916 = !DILocation(line: 1227, column: 33, scope: !8850)
!8917 = !DILocation(line: 1227, column: 31, scope: !8850)
!8918 = !DILocation(line: 1227, column: 45, scope: !8850)
!8919 = !DILocation(line: 1227, column: 43, scope: !8850)
!8920 = !DILocation(line: 1227, column: 36, scope: !8850)
!8921 = !DILocation(line: 1227, column: 24, scope: !8850)
!8922 = !DILocation(line: 1227, column: 5, scope: !8850)
!8923 = !DILocation(line: 1227, column: 8, scope: !8850)
!8924 = !DILocation(line: 1227, column: 22, scope: !8850)
!8925 = !DILocation(line: 1228, column: 5, scope: !8850)
!8926 = !DILocation(line: 1228, column: 8, scope: !8850)
!8927 = !DILocation(line: 1228, column: 22, scope: !8850)
!8928 = !DILocation(line: 1229, column: 5, scope: !8850)
!8929 = !DILocation(line: 1229, column: 8, scope: !8850)
!8930 = !DILocation(line: 1229, column: 22, scope: !8850)
!8931 = !DILocation(line: 1230, column: 33, scope: !8850)
!8932 = !DILocation(line: 1230, column: 31, scope: !8850)
!8933 = !DILocation(line: 1230, column: 45, scope: !8850)
!8934 = !DILocation(line: 1230, column: 43, scope: !8850)
!8935 = !DILocation(line: 1230, column: 36, scope: !8850)
!8936 = !DILocation(line: 1230, column: 24, scope: !8850)
!8937 = !DILocation(line: 1230, column: 5, scope: !8850)
!8938 = !DILocation(line: 1230, column: 8, scope: !8850)
!8939 = !DILocation(line: 1230, column: 22, scope: !8850)
!8940 = !DILocation(line: 1231, column: 33, scope: !8850)
!8941 = !DILocation(line: 1231, column: 31, scope: !8850)
!8942 = !DILocation(line: 1231, column: 45, scope: !8850)
!8943 = !DILocation(line: 1231, column: 43, scope: !8850)
!8944 = !DILocation(line: 1231, column: 36, scope: !8850)
!8945 = !DILocation(line: 1231, column: 24, scope: !8850)
!8946 = !DILocation(line: 1231, column: 5, scope: !8850)
!8947 = !DILocation(line: 1231, column: 8, scope: !8850)
!8948 = !DILocation(line: 1231, column: 22, scope: !8850)
!8949 = !DILocation(line: 1232, column: 1, scope: !8850)
!8950 = distinct !DISubprogram(name: "init_cscheme", scope: !801, file: !801, line: 1234, type: !3749, isLocal: true, isDefinition: true, scopeLine: 1235, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !818)
!8951 = !DILocalVariable(name: "s", arg: 1, scope: !8950, file: !801, line: 1234, type: !823)
!8952 = !DILocation(line: 1234, column: 41, scope: !8950)
!8953 = !DILocalVariable(name: "tail", scope: !8950, file: !801, line: 1236, type: !8954)
!8954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, size: 16, align: 8, elements: !804)
!8955 = !DILocation(line: 1236, column: 10, scope: !8950)
!8956 = !DILocalVariable(name: "k", scope: !8950, file: !801, line: 1237, type: !200)
!8957 = !DILocation(line: 1237, column: 9, scope: !8950)
!8958 = !DILocation(line: 1239, column: 16, scope: !8959)
!8959 = distinct !DILexicalBlock(scope: !8950, file: !801, line: 1239, column: 9)
!8960 = !DILocation(line: 1239, column: 19, scope: !8959)
!8961 = !DILocation(line: 1239, column: 65, scope: !8959)
!8962 = !DILocation(line: 1239, column: 68, scope: !8959)
!8963 = !DILocation(line: 1240, column: 10, scope: !8959)
!8964 = !DILocation(line: 1240, column: 13, scope: !8959)
!8965 = !DILocation(line: 1240, column: 28, scope: !8959)
!8966 = !DILocation(line: 1240, column: 31, scope: !8959)
!8967 = !DILocation(line: 1240, column: 46, scope: !8959)
!8968 = !DILocation(line: 1240, column: 49, scope: !8959)
!8969 = !DILocation(line: 1240, column: 64, scope: !8959)
!8970 = !DILocation(line: 1240, column: 67, scope: !8959)
!8971 = !DILocation(line: 1241, column: 10, scope: !8959)
!8972 = !DILocation(line: 1241, column: 13, scope: !8959)
!8973 = !DILocation(line: 1241, column: 27, scope: !8959)
!8974 = !DILocation(line: 1239, column: 9, scope: !8959)
!8975 = !DILocation(line: 1241, column: 33, scope: !8959)
!8976 = !DILocation(line: 1239, column: 9, scope: !8950)
!8977 = !DILocation(line: 1242, column: 9, scope: !8959)
!8978 = !DILocation(line: 1244, column: 12, scope: !8979)
!8979 = distinct !DILexicalBlock(scope: !8950, file: !801, line: 1244, column: 5)
!8980 = !DILocation(line: 1244, column: 10, scope: !8979)
!8981 = !DILocation(line: 1244, column: 17, scope: !8982)
!8982 = !DILexicalBlockFile(scope: !8983, file: !801, discriminator: 1)
!8983 = distinct !DILexicalBlock(scope: !8979, file: !801, line: 1244, column: 5)
!8984 = !DILocation(line: 1244, column: 19, scope: !8982)
!8985 = !DILocation(line: 1244, column: 5, scope: !8982)
!8986 = !DILocation(line: 1245, column: 25, scope: !8987)
!8987 = distinct !DILexicalBlock(scope: !8983, file: !801, line: 1245, column: 12)
!8988 = !DILocation(line: 1245, column: 12, scope: !8987)
!8989 = !DILocation(line: 1245, column: 15, scope: !8987)
!8990 = !DILocation(line: 1245, column: 35, scope: !8987)
!8991 = !DILocation(line: 1245, column: 51, scope: !8992)
!8992 = !DILexicalBlockFile(scope: !8987, file: !801, discriminator: 1)
!8993 = !DILocation(line: 1245, column: 38, scope: !8992)
!8994 = !DILocation(line: 1245, column: 41, scope: !8992)
!8995 = !DILocation(line: 1245, column: 54, scope: !8992)
!8996 = !DILocation(line: 1245, column: 61, scope: !8992)
!8997 = !DILocation(line: 1245, column: 77, scope: !8998)
!8998 = !DILexicalBlockFile(scope: !8987, file: !801, discriminator: 2)
!8999 = !DILocation(line: 1245, column: 64, scope: !8998)
!9000 = !DILocation(line: 1245, column: 67, scope: !8998)
!9001 = !DILocation(line: 1245, column: 80, scope: !8998)
!9002 = !DILocation(line: 1245, column: 12, scope: !8998)
!9003 = !DILocation(line: 1246, column: 13, scope: !8987)
!9004 = !DILocation(line: 1245, column: 82, scope: !9005)
!9005 = !DILexicalBlockFile(scope: !8987, file: !801, discriminator: 3)
!9006 = !DILocation(line: 1244, column: 25, scope: !9007)
!9007 = !DILexicalBlockFile(scope: !8983, file: !801, discriminator: 2)
!9008 = !DILocation(line: 1244, column: 5, scope: !9007)
!9009 = distinct !{!9009, !9010}
!9010 = !DILocation(line: 1244, column: 5, scope: !8950)
!9011 = !DILocation(line: 1248, column: 5, scope: !8950)
!9012 = !DILocation(line: 1251, column: 12, scope: !8950)
!9013 = !DILocation(line: 1251, column: 15, scope: !8950)
!9014 = !DILocation(line: 1251, column: 5, scope: !8950)
!9015 = !DILocation(line: 1252, column: 5, scope: !8950)
!9016 = !DILocation(line: 1253, column: 1, scope: !8950)
