; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--decode.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--decode.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVRational = type { i32, i32 }
%struct.anon = type { i32, i32 }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, {}*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, {}*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, {}*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVCodecHWConfigInternal = type { %struct.AVCodecHWConfig, %struct.AVHWAccel* }
%struct.AVCodecHWConfig = type { i32, i32, i32 }
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, {}*, i32, void (%struct.MpegEncContext*)*, {}*, {}*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%union.unaligned_32 = type { i32 }
%union.unaligned_64 = type { i64 }
%struct.FrameDecodeData = type { i32 (i8*, %struct.AVFrame*)*, i8*, void (i8*)*, i8*, void (i8*)* }
%struct.AVBPrint = type { i8*, i32, i32, i32, [1 x i8], [1000 x i8] }
%struct.AVPixFmtDescriptor = type { i8*, i8, i8, i8, i64, [4 x %struct.AVComponentDescriptor], i8* }
%struct.AVComponentDescriptor = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVHWDeviceContext = type { %struct.AVClass*, %struct.AVHWDeviceInternal*, i32, i8*, void (%struct.AVHWDeviceContext*)*, i8* }
%struct.AVHWDeviceInternal = type opaque
%struct.AVHWFramesContext = type { %struct.AVClass*, %struct.AVHWFramesInternal*, %struct.AVBufferRef*, %struct.AVHWDeviceContext*, i8*, void (%struct.AVHWFramesContext*)*, i8*, %struct.AVBufferPool*, i32, i32, i32, i32, i32 }
%struct.AVHWFramesInternal = type opaque

@.str = private unnamed_addr constant [5 x i8] c"null\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.3 = private unnamed_addr constant [93 x i8] c"A non-existing bitstream filter %s requested by a decoder. This is a bug, please report it.\0A\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.5 = private unnamed_addr constant [100 x i8] c"Invalid options for bitstream filter %s requested by the decoder. This is a bug, please report it.\0A\00", align 1
@.str.6 = private unnamed_addr constant [38 x i8] c"invalid packet: NULL data, size != 0\0A\00", align 1
@.str.7 = private unnamed_addr constant [34 x i8] c"Invalid media type for subtitles\0A\00", align 1
@avcodec_decode_subtitle2.ms = private unnamed_addr constant %struct.AVRational { i32 1, i32 1000 }, align 4
@.str.8 = private unnamed_addr constant [76 x i8] c"Invalid UTF-8 in decoded subtitles text; maybe missing -sub_charenc option\0A\00", align 1
@.str.9 = private unnamed_addr constant [84 x i8] c"A hardware frames or device context is required for hardware accelerated decoding.\0A\00", align 1
@.str.10 = private unnamed_addr constant [60 x i8] c"Device type %s expected for hardware decoding, but got %s.\0A\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"n >= 1\00", align 1
@.str.13 = private unnamed_addr constant [20 x i8] c"libavcodec/decode.c\00", align 1
@.str.14 = private unnamed_addr constant [51 x i8] c"Invalid format returned by get_format() callback.\0A\00", align 1
@.str.15 = private unnamed_addr constant [35 x i8] c"Format %s chosen by get_format().\0A\00", align 1
@.str.16 = private unnamed_addr constant [60 x i8] c"Invalid return from get_format(): %s not in possible list.\0A\00", align 1
@.str.17 = private unnamed_addr constant [88 x i8] c"Invalid setup for format %s: does not match the format of the provided frames context.\0A\00", align 1
@.str.18 = private unnamed_addr constant [86 x i8] c"Invalid setup for format %s: does not match the type of the provided device context.\0A\00", align 1
@.str.19 = private unnamed_addr constant [53 x i8] c"Invalid setup for format %s: missing configuration.\0A\00", align 1
@.str.20 = private unnamed_addr constant [44 x i8] c"Format %s requires hwaccel initialisation.\0A\00", align 1
@.str.21 = private unnamed_addr constant [57 x i8] c"Format %s not usable, retrying get_format() without it.\0A\00", align 1
@ff_decode_frame_props.sd = internal constant [8 x %struct.anon] [%struct.anon { i32 4, i32 5 }, %struct.anon { i32 5, i32 6 }, %struct.anon { i32 21, i32 13 }, %struct.anon { i32 6, i32 2 }, %struct.anon { i32 7, i32 10 }, %struct.anon { i32 20, i32 11 }, %struct.anon { i32 22, i32 14 }, %struct.anon { i32 23, i32 1 }], align 16
@.str.22 = private unnamed_addr constant [29 x i8] c"ignoring invalid SAR: %u/%u\0A\00", align 1
@.str.23 = private unnamed_addr constant [37 x i8] c"Inconsistent channel configuration.\0A\00", align 1
@.str.24 = private unnamed_addr constant [24 x i8] c"Too many channels: %d.\0A\00", align 1
@.str.25 = private unnamed_addr constant [21 x i8] c"get_buffer() failed\0A\00", align 1
@.str.26 = private unnamed_addr constant [23 x i8] c"reget_buffer() failed\0A\00", align 1
@.str.27 = private unnamed_addr constant [47 x i8] c"Error pre-processing a packet before decoding\0A\00", align 1
@.str.28 = private unnamed_addr constant [93 x i8] c"This decoder does not support parameter changes, but PARAM_CHANGE side data was sent to it.\0A\00", align 1
@.str.29 = private unnamed_addr constant [22 x i8] c"Invalid channel count\00", align 1
@.str.30 = private unnamed_addr constant [20 x i8] c"Invalid sample rate\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"PARAM_CHANGE side data too small.\0A\00", align 1
@.str.32 = private unnamed_addr constant [35 x i8] c"Error applying parameter changes.\0A\00", align 1
@.str.33 = private unnamed_addr constant [15 x i8] c"!frame->buf[0]\00", align 1
@.str.34 = private unnamed_addr constant [120 x i8] c"(frame->private_ref && frame->private_ref->size == sizeof(FrameDecodeData)) || !(avctx->codec->capabilities & (1 << 1))\00", align 1
@.str.35 = private unnamed_addr constant [47 x i8] c"skip %d / discard %d samples due to side data\0A\00", align 1
@.str.36 = private unnamed_addr constant [33 x i8] c"skip whole frame, skip left: %d\0A\00", align 1
@.str.37 = private unnamed_addr constant [50 x i8] c"Could not update timestamps for skipped samples.\0A\00", align 1
@.str.38 = private unnamed_addr constant [20 x i8] c"skip %d/%d samples\0A\00", align 1
@.str.39 = private unnamed_addr constant [52 x i8] c"Could not update timestamps for discarded samples.\0A\00", align 1
@.str.40 = private unnamed_addr constant [23 x i8] c"discard %d/%d samples\0A\00", align 1
@.str.41 = private unnamed_addr constant [30 x i8] c"Multiple frames in a packet.\0A\00", align 1
@.str.42 = private unnamed_addr constant [76 x i8] c"Too many errors when draining, this is a bug. Stop draining and force EOF.\0A\00", align 1
@.str.43 = private unnamed_addr constant [14 x i8] c"frame->buf[0]\00", align 1
@.str.44 = private unnamed_addr constant [116 x i8] c"Invalid cropping information set by a decoder: %zu/%zu/%zu/%zu (frame size %dx%d). This is a bug, please report it\0A\00", align 1
@.str.45 = private unnamed_addr constant [34 x i8] c"avci->compat_decode_consumed == 0\00", align 1
@.str.46 = private unnamed_addr constant [33 x i8] c"Got unexpected packet after EOF\0A\00", align 1
@.str.47 = private unnamed_addr constant [51 x i8] c"Got unexpected packet size after a partial decode\0A\00", align 1
@.str.48 = private unnamed_addr constant [167 x i8] c"The deprecated avcodec_decode_* API cannot return all the frames for this decoder. Some frames will be dropped. Update your code to the new decoding API to fix this.\0A\00", align 1
@.str.49 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.50 = private unnamed_addr constant [18 x i8] c"cd != (iconv_t)-1\00", align 1
@.str.51 = private unnamed_addr constant [42 x i8] c"Subtitles packet is too big for recoding\0A\00", align 1
@.str.52 = private unnamed_addr constant [55 x i8] c"Unable to recode subtitle event \22%s\22 from %s to UTF-8\0A\00", align 1
@.str.53 = private unnamed_addr constant [11 x i8] c"Dialogue: \00", align 1
@.str.54 = private unnamed_addr constant [15 x i8] c"Dialogue: %ld,\00", align 1
@.str.55 = private unnamed_addr constant [5 x i8] c"%s\0D\0A\00", align 1
@.str.56 = private unnamed_addr constant [12 x i8] c"9:59:59.99,\00", align 1
@.str.57 = private unnamed_addr constant [19 x i8] c"%d:%02d:%02d.%02d,\00", align 1
@.str.58 = private unnamed_addr constant [35 x i8] c"Ignoring experimental hwaccel: %s\0A\00", align 1
@.str.59 = private unnamed_addr constant [68 x i8] c"Failed setup for format %s: hwaccel initialisation returned error.\0A\00", align 1
@.str.60 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.61 = private unnamed_addr constant [50 x i8] c"pic->data[*]!=NULL in avcodec_default_get_buffer\0A\00", align 1
@.str.62 = private unnamed_addr constant [53 x i8] c"Unable to get pixel format descriptor for format %s\0A\00", align 1
@.str.63 = private unnamed_addr constant [37 x i8] c"default_get_buffer called on pic %p\0A\00", align 1
@.str.64 = private unnamed_addr constant [28 x i8] c"frame->nb_extended_buf == 0\00", align 1
@.str.65 = private unnamed_addr constant [38 x i8] c"default_get_buffer called on frame %p\00", align 1
@.str.66 = private unnamed_addr constant [44 x i8] c"video_get_buffer: image parameters invalid\0A\00", align 1
@.str.67 = private unnamed_addr constant [43 x i8] c"pic->data[*]!=NULL in get_buffer_internal\0A\00", align 1
@.str.68 = private unnamed_addr constant [15 x i8] c"frame->data[i]\00", align 1
@.str.69 = private unnamed_addr constant [69 x i8] c"Buffer returned by get_buffer2() did not zero unused plane pointers\0A\00", align 1
@.str.70 = private unnamed_addr constant [40 x i8] c"avctx->codec_type == AVMEDIA_TYPE_VIDEO\00", align 1
@.str.71 = private unnamed_addr constant [79 x i8] c"Picture changed from size:%dx%d fmt:%s to size:%dx%d fmt:%s in reget buffer()\0A\00", align 1

; Function Attrs: nounwind uwtable
define i32 @ff_decode_bsfs_init(%struct.AVCodecContext* %avctx) #0 !dbg !1803 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %avci = alloca %struct.AVCodecInternal*, align 8
  %s = alloca %struct.DecodeFilterContext*, align 8
  %bsfs_str = alloca i8*, align 8
  %ret = alloca i32, align 4
  %tmp = alloca %struct.AVBSFContext**, align 8
  %filter7 = alloca %struct.AVBitStreamFilter*, align 8
  %bsf = alloca i8*, align 8
  %bsf_options_str = alloca i8*, align 8
  %bsf_name = alloca i8*, align 8
  %.compoundliteral = alloca %struct.AVRational, align 4
  %opt = alloca %struct.AVOption*, align 8
  %shorthand = alloca [2 x i8*], align 16
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !1804, metadata !1805), !dbg !1806
  call void @llvm.dbg.declare(metadata %struct.AVCodecInternal** %avci, metadata !1807, metadata !1805), !dbg !1810
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1811
  %internal = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 7, !dbg !1812
  %1 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal, align 8, !dbg !1812
  store %struct.AVCodecInternal* %1, %struct.AVCodecInternal** %avci, align 8, !dbg !1810
  call void @llvm.dbg.declare(metadata %struct.DecodeFilterContext** %s, metadata !1813, metadata !1805), !dbg !1815
  %2 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !1816
  %filter = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %2, i32 0, i32 7, !dbg !1817
  store %struct.DecodeFilterContext* %filter, %struct.DecodeFilterContext** %s, align 8, !dbg !1815
  call void @llvm.dbg.declare(metadata i8** %bsfs_str, metadata !1818, metadata !1805), !dbg !1819
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1820, metadata !1805), !dbg !1821
  %3 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !1822
  %nb_bsfs = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %3, i32 0, i32 1, !dbg !1824
  %4 = load i32, i32* %nb_bsfs, align 8, !dbg !1824
  %tobool = icmp ne i32 %4, 0, !dbg !1822
  br i1 %tobool, label %if.then, label %if.end, !dbg !1825

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !1826
  br label %return, !dbg !1826

if.end:                                           ; preds = %entry
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1827
  %codec = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %5, i32 0, i32 3, !dbg !1828
  %6 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !1828
  %bsfs = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %6, i32 0, i32 30, !dbg !1829
  %7 = load i8*, i8** %bsfs, align 8, !dbg !1829
  %tobool1 = icmp ne i8* %7, null, !dbg !1827
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !1827

cond.true:                                        ; preds = %if.end
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1830
  %codec2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %8, i32 0, i32 3, !dbg !1832
  %9 = load %struct.AVCodec*, %struct.AVCodec** %codec2, align 8, !dbg !1832
  %bsfs3 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %9, i32 0, i32 30, !dbg !1833
  %10 = load i8*, i8** %bsfs3, align 8, !dbg !1833
  br label %cond.end, !dbg !1834

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !1835

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %10, %cond.true ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), %cond.false ], !dbg !1837
  store i8* %cond, i8** %bsfs_str, align 8, !dbg !1839
  br label %while.cond, !dbg !1840

while.cond:                                       ; preds = %if.end123, %cond.end
  %11 = load i8*, i8** %bsfs_str, align 8, !dbg !1841
  %tobool4 = icmp ne i8* %11, null, !dbg !1841
  br i1 %tobool4, label %land.rhs, label %land.end, !dbg !1842

land.rhs:                                         ; preds = %while.cond
  %12 = load i8*, i8** %bsfs_str, align 8, !dbg !1843
  %13 = load i8, i8* %12, align 1, !dbg !1844
  %conv = sext i8 %13 to i32, !dbg !1844
  %tobool5 = icmp ne i32 %conv, 0, !dbg !1845
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %14 = phi i1 [ false, %while.cond ], [ %tobool5, %land.rhs ]
  br i1 %14, label %while.body, label %while.end, !dbg !1846

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.AVBSFContext*** %tmp, metadata !1847, metadata !1805), !dbg !1849
  call void @llvm.dbg.declare(metadata %struct.AVBitStreamFilter** %filter7, metadata !1850, metadata !1805), !dbg !1854
  call void @llvm.dbg.declare(metadata i8** %bsf, metadata !1855, metadata !1805), !dbg !1856
  call void @llvm.dbg.declare(metadata i8** %bsf_options_str, metadata !1857, metadata !1805), !dbg !1858
  call void @llvm.dbg.declare(metadata i8** %bsf_name, metadata !1859, metadata !1805), !dbg !1860
  %call = call i8* @av_get_token(i8** %bsfs_str, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)), !dbg !1861
  store i8* %call, i8** %bsf, align 8, !dbg !1862
  %15 = load i8*, i8** %bsf, align 8, !dbg !1863
  %tobool11 = icmp ne i8* %15, null, !dbg !1863
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !1865

if.then12:                                        ; preds = %while.body
  store i32 -12, i32* %ret, align 4, !dbg !1866
  br label %fail, !dbg !1868

if.end13:                                         ; preds = %while.body
  %16 = load i8*, i8** %bsf, align 8, !dbg !1869
  %call14 = call i8* @av_strtok(i8* %16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0), i8** %bsf_options_str), !dbg !1870
  store i8* %call14, i8** %bsf_name, align 8, !dbg !1871
  %17 = load i8*, i8** %bsf_name, align 8, !dbg !1872
  %tobool15 = icmp ne i8* %17, null, !dbg !1872
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !1874

if.then16:                                        ; preds = %if.end13
  %18 = bitcast i8** %bsf to i8*, !dbg !1875
  call void @av_freep(i8* %18), !dbg !1877
  store i32 -12, i32* %ret, align 4, !dbg !1878
  br label %fail, !dbg !1879

if.end17:                                         ; preds = %if.end13
  %19 = load i8*, i8** %bsf_name, align 8, !dbg !1880
  %call18 = call %struct.AVBitStreamFilter* @av_bsf_get_by_name(i8* %19), !dbg !1881
  store %struct.AVBitStreamFilter* %call18, %struct.AVBitStreamFilter** %filter7, align 8, !dbg !1882
  %20 = load %struct.AVBitStreamFilter*, %struct.AVBitStreamFilter** %filter7, align 8, !dbg !1883
  %tobool19 = icmp ne %struct.AVBitStreamFilter* %20, null, !dbg !1883
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !1885

if.then20:                                        ; preds = %if.end17
  %21 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1886
  %22 = bitcast %struct.AVCodecContext* %21 to i8*, !dbg !1886
  %23 = load i8*, i8** %bsf_name, align 8, !dbg !1888
  call void (i8*, i32, i8*, ...) @av_log(i8* %22, i32 16, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.3, i32 0, i32 0), i8* %23), !dbg !1889
  %24 = bitcast i8** %bsf to i8*, !dbg !1890
  call void @av_freep(i8* %24), !dbg !1891
  store i32 -558323010, i32* %ret, align 4, !dbg !1892
  br label %fail, !dbg !1893

if.end21:                                         ; preds = %if.end17
  %25 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !1894
  %bsfs22 = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %25, i32 0, i32 0, !dbg !1895
  %26 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %bsfs22, align 8, !dbg !1895
  %27 = bitcast %struct.AVBSFContext** %26 to i8*, !dbg !1894
  %28 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !1896
  %nb_bsfs23 = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %28, i32 0, i32 1, !dbg !1897
  %29 = load i32, i32* %nb_bsfs23, align 8, !dbg !1897
  %add = add nsw i32 %29, 1, !dbg !1898
  %conv24 = sext i32 %add to i64, !dbg !1896
  %call25 = call i8* @av_realloc_array(i8* %27, i64 %conv24, i64 8), !dbg !1899
  %30 = bitcast i8* %call25 to %struct.AVBSFContext**, !dbg !1899
  store %struct.AVBSFContext** %30, %struct.AVBSFContext*** %tmp, align 8, !dbg !1900
  %31 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %tmp, align 8, !dbg !1901
  %tobool26 = icmp ne %struct.AVBSFContext** %31, null, !dbg !1901
  br i1 %tobool26, label %if.end28, label %if.then27, !dbg !1903

if.then27:                                        ; preds = %if.end21
  %32 = bitcast i8** %bsf to i8*, !dbg !1904
  call void @av_freep(i8* %32), !dbg !1906
  store i32 -12, i32* %ret, align 4, !dbg !1907
  br label %fail, !dbg !1908

if.end28:                                         ; preds = %if.end21
  %33 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %tmp, align 8, !dbg !1909
  %34 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !1910
  %bsfs29 = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %34, i32 0, i32 0, !dbg !1911
  store %struct.AVBSFContext** %33, %struct.AVBSFContext*** %bsfs29, align 8, !dbg !1912
  %35 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !1913
  %nb_bsfs30 = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %35, i32 0, i32 1, !dbg !1914
  %36 = load i32, i32* %nb_bsfs30, align 8, !dbg !1915
  %inc = add nsw i32 %36, 1, !dbg !1915
  store i32 %inc, i32* %nb_bsfs30, align 8, !dbg !1915
  %37 = load %struct.AVBitStreamFilter*, %struct.AVBitStreamFilter** %filter7, align 8, !dbg !1916
  %38 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !1917
  %nb_bsfs31 = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %38, i32 0, i32 1, !dbg !1918
  %39 = load i32, i32* %nb_bsfs31, align 8, !dbg !1918
  %sub = sub nsw i32 %39, 1, !dbg !1919
  %idxprom = sext i32 %sub to i64, !dbg !1920
  %40 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !1920
  %bsfs32 = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %40, i32 0, i32 0, !dbg !1921
  %41 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %bsfs32, align 8, !dbg !1921
  %arrayidx = getelementptr inbounds %struct.AVBSFContext*, %struct.AVBSFContext** %41, i64 %idxprom, !dbg !1920
  %call33 = call i32 @av_bsf_alloc(%struct.AVBitStreamFilter* %37, %struct.AVBSFContext** %arrayidx), !dbg !1922
  store i32 %call33, i32* %ret, align 4, !dbg !1923
  %42 = load i32, i32* %ret, align 4, !dbg !1924
  %cmp = icmp slt i32 %42, 0, !dbg !1926
  br i1 %cmp, label %if.then35, label %if.end36, !dbg !1927

if.then35:                                        ; preds = %if.end28
  %43 = bitcast i8** %bsf to i8*, !dbg !1928
  call void @av_freep(i8* %43), !dbg !1930
  br label %fail, !dbg !1931

if.end36:                                         ; preds = %if.end28
  %44 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !1932
  %nb_bsfs37 = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %44, i32 0, i32 1, !dbg !1934
  %45 = load i32, i32* %nb_bsfs37, align 8, !dbg !1934
  %cmp38 = icmp eq i32 %45, 1, !dbg !1935
  br i1 %cmp38, label %if.then40, label %if.else, !dbg !1936

if.then40:                                        ; preds = %if.end36
  %46 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !1937
  %nb_bsfs41 = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %46, i32 0, i32 1, !dbg !1939
  %47 = load i32, i32* %nb_bsfs41, align 8, !dbg !1939
  %sub42 = sub nsw i32 %47, 1, !dbg !1940
  %idxprom43 = sext i32 %sub42 to i64, !dbg !1941
  %48 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !1941
  %bsfs44 = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %48, i32 0, i32 0, !dbg !1942
  %49 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %bsfs44, align 8, !dbg !1942
  %arrayidx45 = getelementptr inbounds %struct.AVBSFContext*, %struct.AVBSFContext** %49, i64 %idxprom43, !dbg !1941
  %50 = load %struct.AVBSFContext*, %struct.AVBSFContext** %arrayidx45, align 8, !dbg !1941
  %time_base_in = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %50, i32 0, i32 6, !dbg !1943
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !1944
  store i32 1, i32* %num, align 4, !dbg !1944
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !1944
  store i32 90000, i32* %den, align 4, !dbg !1944
  %51 = bitcast %struct.AVRational* %time_base_in to i8*, !dbg !1945
  %52 = bitcast %struct.AVRational* %.compoundliteral to i8*, !dbg !1945
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 4, i1 false), !dbg !1945
  %53 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !1946
  %nb_bsfs46 = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %53, i32 0, i32 1, !dbg !1947
  %54 = load i32, i32* %nb_bsfs46, align 8, !dbg !1947
  %sub47 = sub nsw i32 %54, 1, !dbg !1948
  %idxprom48 = sext i32 %sub47 to i64, !dbg !1949
  %55 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !1949
  %bsfs49 = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %55, i32 0, i32 0, !dbg !1950
  %56 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %bsfs49, align 8, !dbg !1950
  %arrayidx50 = getelementptr inbounds %struct.AVBSFContext*, %struct.AVBSFContext** %56, i64 %idxprom48, !dbg !1949
  %57 = load %struct.AVBSFContext*, %struct.AVBSFContext** %arrayidx50, align 8, !dbg !1949
  %par_in = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %57, i32 0, i32 4, !dbg !1951
  %58 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par_in, align 8, !dbg !1951
  %59 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1952
  %call51 = call i32 @avcodec_parameters_from_context(%struct.AVCodecParameters* %58, %struct.AVCodecContext* %59), !dbg !1953
  store i32 %call51, i32* %ret, align 4, !dbg !1954
  br label %if.end75, !dbg !1955

if.else:                                          ; preds = %if.end36
  %60 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !1956
  %nb_bsfs52 = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %60, i32 0, i32 1, !dbg !1958
  %61 = load i32, i32* %nb_bsfs52, align 8, !dbg !1958
  %sub53 = sub nsw i32 %61, 1, !dbg !1959
  %idxprom54 = sext i32 %sub53 to i64, !dbg !1960
  %62 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !1960
  %bsfs55 = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %62, i32 0, i32 0, !dbg !1961
  %63 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %bsfs55, align 8, !dbg !1961
  %arrayidx56 = getelementptr inbounds %struct.AVBSFContext*, %struct.AVBSFContext** %63, i64 %idxprom54, !dbg !1960
  %64 = load %struct.AVBSFContext*, %struct.AVBSFContext** %arrayidx56, align 8, !dbg !1960
  %time_base_in57 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %64, i32 0, i32 6, !dbg !1962
  %65 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !1963
  %nb_bsfs58 = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %65, i32 0, i32 1, !dbg !1964
  %66 = load i32, i32* %nb_bsfs58, align 8, !dbg !1964
  %sub59 = sub nsw i32 %66, 2, !dbg !1965
  %idxprom60 = sext i32 %sub59 to i64, !dbg !1966
  %67 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !1966
  %bsfs61 = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %67, i32 0, i32 0, !dbg !1967
  %68 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %bsfs61, align 8, !dbg !1967
  %arrayidx62 = getelementptr inbounds %struct.AVBSFContext*, %struct.AVBSFContext** %68, i64 %idxprom60, !dbg !1966
  %69 = load %struct.AVBSFContext*, %struct.AVBSFContext** %arrayidx62, align 8, !dbg !1966
  %time_base_out = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %69, i32 0, i32 7, !dbg !1968
  %70 = bitcast %struct.AVRational* %time_base_in57 to i8*, !dbg !1968
  %71 = bitcast %struct.AVRational* %time_base_out to i8*, !dbg !1968
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %70, i8* %71, i64 8, i32 8, i1 false), !dbg !1968
  %72 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !1969
  %nb_bsfs63 = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %72, i32 0, i32 1, !dbg !1970
  %73 = load i32, i32* %nb_bsfs63, align 8, !dbg !1970
  %sub64 = sub nsw i32 %73, 1, !dbg !1971
  %idxprom65 = sext i32 %sub64 to i64, !dbg !1972
  %74 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !1972
  %bsfs66 = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %74, i32 0, i32 0, !dbg !1973
  %75 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %bsfs66, align 8, !dbg !1973
  %arrayidx67 = getelementptr inbounds %struct.AVBSFContext*, %struct.AVBSFContext** %75, i64 %idxprom65, !dbg !1972
  %76 = load %struct.AVBSFContext*, %struct.AVBSFContext** %arrayidx67, align 8, !dbg !1972
  %par_in68 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %76, i32 0, i32 4, !dbg !1974
  %77 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par_in68, align 8, !dbg !1974
  %78 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !1975
  %nb_bsfs69 = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %78, i32 0, i32 1, !dbg !1976
  %79 = load i32, i32* %nb_bsfs69, align 8, !dbg !1976
  %sub70 = sub nsw i32 %79, 2, !dbg !1977
  %idxprom71 = sext i32 %sub70 to i64, !dbg !1978
  %80 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !1978
  %bsfs72 = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %80, i32 0, i32 0, !dbg !1979
  %81 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %bsfs72, align 8, !dbg !1979
  %arrayidx73 = getelementptr inbounds %struct.AVBSFContext*, %struct.AVBSFContext** %81, i64 %idxprom71, !dbg !1978
  %82 = load %struct.AVBSFContext*, %struct.AVBSFContext** %arrayidx73, align 8, !dbg !1978
  %par_out = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %82, i32 0, i32 5, !dbg !1980
  %83 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par_out, align 8, !dbg !1980
  %call74 = call i32 @avcodec_parameters_copy(%struct.AVCodecParameters* %77, %struct.AVCodecParameters* %83), !dbg !1981
  store i32 %call74, i32* %ret, align 4, !dbg !1982
  br label %if.end75

if.end75:                                         ; preds = %if.else, %if.then40
  %84 = load i32, i32* %ret, align 4, !dbg !1983
  %cmp76 = icmp slt i32 %84, 0, !dbg !1985
  br i1 %cmp76, label %if.then78, label %if.end79, !dbg !1986

if.then78:                                        ; preds = %if.end75
  %85 = bitcast i8** %bsf to i8*, !dbg !1987
  call void @av_freep(i8* %85), !dbg !1989
  br label %fail, !dbg !1990

if.end79:                                         ; preds = %if.end75
  %86 = load i8*, i8** %bsf_options_str, align 8, !dbg !1991
  %tobool80 = icmp ne i8* %86, null, !dbg !1991
  br i1 %tobool80, label %land.lhs.true, label %if.end110, !dbg !1993

land.lhs.true:                                    ; preds = %if.end79
  %87 = load %struct.AVBitStreamFilter*, %struct.AVBitStreamFilter** %filter7, align 8, !dbg !1994
  %priv_class = getelementptr inbounds %struct.AVBitStreamFilter, %struct.AVBitStreamFilter* %87, i32 0, i32 2, !dbg !1996
  %88 = load %struct.AVClass*, %struct.AVClass** %priv_class, align 8, !dbg !1996
  %tobool81 = icmp ne %struct.AVClass* %88, null, !dbg !1994
  br i1 %tobool81, label %if.then82, label %if.end110, !dbg !1997

if.then82:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.AVOption** %opt, metadata !1998, metadata !1805), !dbg !2003
  %89 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !2004
  %nb_bsfs84 = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %89, i32 0, i32 1, !dbg !2005
  %90 = load i32, i32* %nb_bsfs84, align 8, !dbg !2005
  %sub85 = sub nsw i32 %90, 1, !dbg !2006
  %idxprom86 = sext i32 %sub85 to i64, !dbg !2007
  %91 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !2007
  %bsfs87 = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %91, i32 0, i32 0, !dbg !2008
  %92 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %bsfs87, align 8, !dbg !2008
  %arrayidx88 = getelementptr inbounds %struct.AVBSFContext*, %struct.AVBSFContext** %92, i64 %idxprom86, !dbg !2007
  %93 = load %struct.AVBSFContext*, %struct.AVBSFContext** %arrayidx88, align 8, !dbg !2007
  %priv_data = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %93, i32 0, i32 3, !dbg !2009
  %94 = load i8*, i8** %priv_data, align 8, !dbg !2009
  %call89 = call %struct.AVOption* @av_opt_next(i8* %94, %struct.AVOption* null), !dbg !2010
  store %struct.AVOption* %call89, %struct.AVOption** %opt, align 8, !dbg !2003
  call void @llvm.dbg.declare(metadata [2 x i8*]* %shorthand, metadata !2011, metadata !1805), !dbg !2015
  %95 = bitcast [2 x i8*]* %shorthand to i8*, !dbg !2015
  call void @llvm.memset.p0i8.i64(i8* %95, i8 0, i64 16, i32 16, i1 false), !dbg !2015
  %96 = load %struct.AVOption*, %struct.AVOption** %opt, align 8, !dbg !2016
  %tobool91 = icmp ne %struct.AVOption* %96, null, !dbg !2016
  br i1 %tobool91, label %if.then92, label %if.end94, !dbg !2018

if.then92:                                        ; preds = %if.then82
  %97 = load %struct.AVOption*, %struct.AVOption** %opt, align 8, !dbg !2019
  %name = getelementptr inbounds %struct.AVOption, %struct.AVOption* %97, i32 0, i32 0, !dbg !2020
  %98 = load i8*, i8** %name, align 8, !dbg !2020
  %arrayidx93 = getelementptr inbounds [2 x i8*], [2 x i8*]* %shorthand, i64 0, i64 0, !dbg !2021
  store i8* %98, i8** %arrayidx93, align 16, !dbg !2022
  br label %if.end94, !dbg !2021

if.end94:                                         ; preds = %if.then92, %if.then82
  %99 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !2023
  %nb_bsfs95 = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %99, i32 0, i32 1, !dbg !2024
  %100 = load i32, i32* %nb_bsfs95, align 8, !dbg !2024
  %sub96 = sub nsw i32 %100, 1, !dbg !2025
  %idxprom97 = sext i32 %sub96 to i64, !dbg !2026
  %101 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !2026
  %bsfs98 = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %101, i32 0, i32 0, !dbg !2027
  %102 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %bsfs98, align 8, !dbg !2027
  %arrayidx99 = getelementptr inbounds %struct.AVBSFContext*, %struct.AVBSFContext** %102, i64 %idxprom97, !dbg !2026
  %103 = load %struct.AVBSFContext*, %struct.AVBSFContext** %arrayidx99, align 8, !dbg !2026
  %priv_data100 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %103, i32 0, i32 3, !dbg !2028
  %104 = load i8*, i8** %priv_data100, align 8, !dbg !2028
  %105 = load i8*, i8** %bsf_options_str, align 8, !dbg !2029
  %arraydecay = getelementptr inbounds [2 x i8*], [2 x i8*]* %shorthand, i32 0, i32 0, !dbg !2030
  %call101 = call i32 @av_opt_set_from_string(i8* %104, i8* %105, i8** %arraydecay, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0)), !dbg !2031
  store i32 %call101, i32* %ret, align 4, !dbg !2032
  %106 = load i32, i32* %ret, align 4, !dbg !2033
  %cmp102 = icmp slt i32 %106, 0, !dbg !2035
  br i1 %cmp102, label %if.then104, label %if.end109, !dbg !2036

if.then104:                                       ; preds = %if.end94
  %107 = load i32, i32* %ret, align 4, !dbg !2037
  %cmp105 = icmp ne i32 %107, -12, !dbg !2040
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !2041

if.then107:                                       ; preds = %if.then104
  %108 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2042
  %109 = bitcast %struct.AVCodecContext* %108 to i8*, !dbg !2042
  %110 = load i8*, i8** %bsf_name, align 8, !dbg !2044
  call void (i8*, i32, i8*, ...) @av_log(i8* %109, i32 16, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @.str.5, i32 0, i32 0), i8* %110), !dbg !2045
  store i32 -558323010, i32* %ret, align 4, !dbg !2046
  br label %if.end108, !dbg !2047

if.end108:                                        ; preds = %if.then107, %if.then104
  %111 = bitcast i8** %bsf to i8*, !dbg !2048
  call void @av_freep(i8* %111), !dbg !2049
  br label %fail, !dbg !2050

if.end109:                                        ; preds = %if.end94
  br label %if.end110, !dbg !2051

if.end110:                                        ; preds = %if.end109, %land.lhs.true, %if.end79
  %112 = bitcast i8** %bsf to i8*, !dbg !2052
  call void @av_freep(i8* %112), !dbg !2053
  %113 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !2054
  %nb_bsfs111 = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %113, i32 0, i32 1, !dbg !2055
  %114 = load i32, i32* %nb_bsfs111, align 8, !dbg !2055
  %sub112 = sub nsw i32 %114, 1, !dbg !2056
  %idxprom113 = sext i32 %sub112 to i64, !dbg !2057
  %115 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !2057
  %bsfs114 = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %115, i32 0, i32 0, !dbg !2058
  %116 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %bsfs114, align 8, !dbg !2058
  %arrayidx115 = getelementptr inbounds %struct.AVBSFContext*, %struct.AVBSFContext** %116, i64 %idxprom113, !dbg !2057
  %117 = load %struct.AVBSFContext*, %struct.AVBSFContext** %arrayidx115, align 8, !dbg !2057
  %call116 = call i32 @av_bsf_init(%struct.AVBSFContext* %117), !dbg !2059
  store i32 %call116, i32* %ret, align 4, !dbg !2060
  %118 = load i32, i32* %ret, align 4, !dbg !2061
  %cmp117 = icmp slt i32 %118, 0, !dbg !2063
  br i1 %cmp117, label %if.then119, label %if.end120, !dbg !2064

if.then119:                                       ; preds = %if.end110
  br label %fail, !dbg !2065

if.end120:                                        ; preds = %if.end110
  %119 = load i8*, i8** %bsfs_str, align 8, !dbg !2066
  %120 = load i8, i8* %119, align 1, !dbg !2068
  %tobool121 = icmp ne i8 %120, 0, !dbg !2068
  br i1 %tobool121, label %if.then122, label %if.end123, !dbg !2069

if.then122:                                       ; preds = %if.end120
  %121 = load i8*, i8** %bsfs_str, align 8, !dbg !2070
  %incdec.ptr = getelementptr inbounds i8, i8* %121, i32 1, !dbg !2070
  store i8* %incdec.ptr, i8** %bsfs_str, align 8, !dbg !2070
  br label %if.end123, !dbg !2071

if.end123:                                        ; preds = %if.then122, %if.end120
  br label %while.cond, !dbg !2072, !llvm.loop !2074

while.end:                                        ; preds = %land.end
  store i32 0, i32* %retval, align 4, !dbg !2075
  br label %return, !dbg !2075

fail:                                             ; preds = %if.then119, %if.end108, %if.then78, %if.then35, %if.then27, %if.then20, %if.then16, %if.then12
  %122 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2076
  call void @ff_decode_bsfs_uninit(%struct.AVCodecContext* %122), !dbg !2077
  %123 = load i32, i32* %ret, align 4, !dbg !2078
  store i32 %123, i32* %retval, align 4, !dbg !2079
  br label %return, !dbg !2079

return:                                           ; preds = %fail, %while.end, %if.then
  %124 = load i32, i32* %retval, align 4, !dbg !2080
  ret i32 %124, !dbg !2080
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare i8* @av_get_token(i8**, i8*) #2

declare i8* @av_strtok(i8*, i8*, i8**) #2

declare void @av_freep(i8*) #2

declare %struct.AVBitStreamFilter* @av_bsf_get_by_name(i8*) #2

declare void @av_log(i8*, i32, i8*, ...) #2

declare i8* @av_realloc_array(i8*, i64, i64) #2

declare i32 @av_bsf_alloc(%struct.AVBitStreamFilter*, %struct.AVBSFContext**) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #3

declare i32 @avcodec_parameters_from_context(%struct.AVCodecParameters*, %struct.AVCodecContext*) #2

declare i32 @avcodec_parameters_copy(%struct.AVCodecParameters*, %struct.AVCodecParameters*) #2

declare %struct.AVOption* @av_opt_next(i8*, %struct.AVOption*) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #3

declare i32 @av_opt_set_from_string(i8*, i8*, i8**, i8*, i8*) #2

declare i32 @av_bsf_init(%struct.AVBSFContext*) #2

; Function Attrs: nounwind uwtable
define void @ff_decode_bsfs_uninit(%struct.AVCodecContext* %avctx) #0 !dbg !2081 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.DecodeFilterContext*, align 8
  %i = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2082, metadata !1805), !dbg !2083
  call void @llvm.dbg.declare(metadata %struct.DecodeFilterContext** %s, metadata !2084, metadata !1805), !dbg !2085
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2086
  %internal = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 7, !dbg !2087
  %1 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal, align 8, !dbg !2087
  %filter = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %1, i32 0, i32 7, !dbg !2088
  store %struct.DecodeFilterContext* %filter, %struct.DecodeFilterContext** %s, align 8, !dbg !2085
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2089, metadata !1805), !dbg !2090
  store i32 0, i32* %i, align 4, !dbg !2091
  br label %for.cond, !dbg !2093

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !2094
  %3 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !2097
  %nb_bsfs = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %3, i32 0, i32 1, !dbg !2098
  %4 = load i32, i32* %nb_bsfs, align 8, !dbg !2098
  %cmp = icmp slt i32 %2, %4, !dbg !2099
  br i1 %cmp, label %for.body, label %for.end, !dbg !2100

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %i, align 4, !dbg !2101
  %idxprom = sext i32 %5 to i64, !dbg !2102
  %6 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !2102
  %bsfs = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %6, i32 0, i32 0, !dbg !2103
  %7 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %bsfs, align 8, !dbg !2103
  %arrayidx = getelementptr inbounds %struct.AVBSFContext*, %struct.AVBSFContext** %7, i64 %idxprom, !dbg !2102
  call void @av_bsf_free(%struct.AVBSFContext** %arrayidx), !dbg !2104
  br label %for.inc, !dbg !2104

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !2105
  %inc = add nsw i32 %8, 1, !dbg !2105
  store i32 %inc, i32* %i, align 4, !dbg !2105
  br label %for.cond, !dbg !2107, !llvm.loop !2108

for.end:                                          ; preds = %for.cond
  %9 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !2110
  %bsfs1 = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %9, i32 0, i32 0, !dbg !2111
  %10 = bitcast %struct.AVBSFContext*** %bsfs1 to i8*, !dbg !2112
  call void @av_freep(i8* %10), !dbg !2113
  %11 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !2114
  %nb_bsfs2 = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %11, i32 0, i32 1, !dbg !2115
  store i32 0, i32* %nb_bsfs2, align 8, !dbg !2116
  ret void, !dbg !2117
}

; Function Attrs: nounwind uwtable
define i32 @ff_decode_get_packet(%struct.AVCodecContext* %avctx, %struct.AVPacket* %pkt) #0 !dbg !2118 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %avci = alloca %struct.AVCodecInternal*, align 8
  %ret = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2119, metadata !1805), !dbg !2120
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !2121, metadata !1805), !dbg !2122
  call void @llvm.dbg.declare(metadata %struct.AVCodecInternal** %avci, metadata !2123, metadata !1805), !dbg !2124
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2125
  %internal = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 7, !dbg !2126
  %1 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal, align 8, !dbg !2126
  store %struct.AVCodecInternal* %1, %struct.AVCodecInternal** %avci, align 8, !dbg !2124
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2127, metadata !1805), !dbg !2128
  %2 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !2129
  %draining = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %2, i32 0, i32 14, !dbg !2131
  %3 = load i32, i32* %draining, align 8, !dbg !2131
  %tobool = icmp ne i32 %3, 0, !dbg !2129
  br i1 %tobool, label %if.then, label %if.end, !dbg !2132

if.then:                                          ; preds = %entry
  store i32 -541478725, i32* %retval, align 4, !dbg !2133
  br label %return, !dbg !2133

if.end:                                           ; preds = %entry
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2134
  %5 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !2135
  %call = call i32 @bsfs_poll(%struct.AVCodecContext* %4, %struct.AVPacket* %5), !dbg !2136
  store i32 %call, i32* %ret, align 4, !dbg !2137
  %6 = load i32, i32* %ret, align 4, !dbg !2138
  %cmp = icmp eq i32 %6, -541478725, !dbg !2140
  br i1 %cmp, label %if.then1, label %if.end3, !dbg !2141

if.then1:                                         ; preds = %if.end
  %7 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !2142
  %draining2 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %7, i32 0, i32 14, !dbg !2143
  store i32 1, i32* %draining2, align 8, !dbg !2144
  br label %if.end3, !dbg !2142

if.end3:                                          ; preds = %if.then1, %if.end
  %8 = load i32, i32* %ret, align 4, !dbg !2145
  %cmp4 = icmp slt i32 %8, 0, !dbg !2147
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !2148

if.then5:                                         ; preds = %if.end3
  %9 = load i32, i32* %ret, align 4, !dbg !2149
  store i32 %9, i32* %retval, align 4, !dbg !2150
  br label %return, !dbg !2150

if.end6:                                          ; preds = %if.end3
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2151
  %internal7 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %10, i32 0, i32 7, !dbg !2152
  %11 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal7, align 8, !dbg !2152
  %12 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !2153
  %call8 = call i32 @extract_packet_props(%struct.AVCodecInternal* %11, %struct.AVPacket* %12), !dbg !2154
  store i32 %call8, i32* %ret, align 4, !dbg !2155
  %13 = load i32, i32* %ret, align 4, !dbg !2156
  %cmp9 = icmp slt i32 %13, 0, !dbg !2158
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !2159

if.then10:                                        ; preds = %if.end6
  br label %finish, !dbg !2160

if.end11:                                         ; preds = %if.end6
  %14 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2161
  %15 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !2162
  %call12 = call i32 @apply_param_change(%struct.AVCodecContext* %14, %struct.AVPacket* %15), !dbg !2163
  store i32 %call12, i32* %ret, align 4, !dbg !2164
  %16 = load i32, i32* %ret, align 4, !dbg !2165
  %cmp13 = icmp slt i32 %16, 0, !dbg !2167
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !2168

if.then14:                                        ; preds = %if.end11
  br label %finish, !dbg !2169

if.end15:                                         ; preds = %if.end11
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2170
  %codec = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %17, i32 0, i32 3, !dbg !2172
  %18 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !2172
  %receive_frame = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %18, i32 0, i32 27, !dbg !2173
  %19 = load i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)** %receive_frame, align 8, !dbg !2173
  %tobool16 = icmp ne i32 (%struct.AVCodecContext*, %struct.AVFrame*)* %19, null, !dbg !2170
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !2174

if.then17:                                        ; preds = %if.end15
  %20 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !2175
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %20, i32 0, i32 4, !dbg !2176
  %21 = load i32, i32* %size, align 8, !dbg !2176
  %conv = sext i32 %21 to i64, !dbg !2175
  %22 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !2177
  %compat_decode_consumed = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %22, i32 0, i32 21, !dbg !2178
  %23 = load i64, i64* %compat_decode_consumed, align 8, !dbg !2179
  %add = add i64 %23, %conv, !dbg !2179
  store i64 %add, i64* %compat_decode_consumed, align 8, !dbg !2179
  br label %if.end18, !dbg !2177

if.end18:                                         ; preds = %if.then17, %if.end15
  store i32 0, i32* %retval, align 4, !dbg !2180
  br label %return, !dbg !2180

finish:                                           ; preds = %if.then14, %if.then10
  %24 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !2181
  call void @av_packet_unref(%struct.AVPacket* %24), !dbg !2182
  %25 = load i32, i32* %ret, align 4, !dbg !2183
  store i32 %25, i32* %retval, align 4, !dbg !2184
  br label %return, !dbg !2184

return:                                           ; preds = %finish, %if.end18, %if.then5, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !2185
  ret i32 %26, !dbg !2185
}

; Function Attrs: nounwind uwtable
define internal i32 @bsfs_poll(%struct.AVCodecContext* %avctx, %struct.AVPacket* %pkt) #0 !dbg !2186 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %s = alloca %struct.DecodeFilterContext*, align 8
  %idx = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2187, metadata !1805), !dbg !2188
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !2189, metadata !1805), !dbg !2190
  call void @llvm.dbg.declare(metadata %struct.DecodeFilterContext** %s, metadata !2191, metadata !1805), !dbg !2192
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2193
  %internal = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 7, !dbg !2194
  %1 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal, align 8, !dbg !2194
  %filter = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %1, i32 0, i32 7, !dbg !2195
  store %struct.DecodeFilterContext* %filter, %struct.DecodeFilterContext** %s, align 8, !dbg !2192
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !2196, metadata !1805), !dbg !2197
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2198, metadata !1805), !dbg !2199
  %2 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !2200
  %nb_bsfs = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %2, i32 0, i32 1, !dbg !2201
  %3 = load i32, i32* %nb_bsfs, align 8, !dbg !2201
  %sub = sub nsw i32 %3, 1, !dbg !2202
  store i32 %sub, i32* %idx, align 4, !dbg !2203
  br label %while.cond, !dbg !2204

while.cond:                                       ; preds = %if.end19, %if.then, %entry
  %4 = load i32, i32* %idx, align 4, !dbg !2205
  %cmp = icmp sge i32 %4, 0, !dbg !2207
  br i1 %cmp, label %while.body, label %while.end, !dbg !2208

while.body:                                       ; preds = %while.cond
  %5 = load i32, i32* %idx, align 4, !dbg !2209
  %idxprom = sext i32 %5 to i64, !dbg !2211
  %6 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !2211
  %bsfs = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %6, i32 0, i32 0, !dbg !2212
  %7 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %bsfs, align 8, !dbg !2212
  %arrayidx = getelementptr inbounds %struct.AVBSFContext*, %struct.AVBSFContext** %7, i64 %idxprom, !dbg !2211
  %8 = load %struct.AVBSFContext*, %struct.AVBSFContext** %arrayidx, align 8, !dbg !2211
  %9 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !2213
  %call = call i32 @av_bsf_receive_packet(%struct.AVBSFContext* %8, %struct.AVPacket* %9), !dbg !2214
  store i32 %call, i32* %ret, align 4, !dbg !2215
  %10 = load i32, i32* %ret, align 4, !dbg !2216
  %cmp1 = icmp eq i32 %10, -11, !dbg !2218
  br i1 %cmp1, label %if.then, label %if.else, !dbg !2219

if.then:                                          ; preds = %while.body
  store i32 0, i32* %ret, align 4, !dbg !2220
  %11 = load i32, i32* %idx, align 4, !dbg !2222
  %dec = add nsw i32 %11, -1, !dbg !2222
  store i32 %dec, i32* %idx, align 4, !dbg !2222
  br label %while.cond, !dbg !2223, !llvm.loop !2224

if.else:                                          ; preds = %while.body
  %12 = load i32, i32* %ret, align 4, !dbg !2225
  %cmp2 = icmp slt i32 %12, 0, !dbg !2227
  br i1 %cmp2, label %land.lhs.true, label %if.end, !dbg !2228

land.lhs.true:                                    ; preds = %if.else
  %13 = load i32, i32* %ret, align 4, !dbg !2229
  %cmp3 = icmp ne i32 %13, -541478725, !dbg !2231
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !2232

if.then4:                                         ; preds = %land.lhs.true
  %14 = load i32, i32* %ret, align 4, !dbg !2233
  store i32 %14, i32* %retval, align 4, !dbg !2235
  br label %return, !dbg !2235

if.end:                                           ; preds = %land.lhs.true, %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end
  %15 = load i32, i32* %idx, align 4, !dbg !2236
  %16 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !2238
  %nb_bsfs6 = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %16, i32 0, i32 1, !dbg !2239
  %17 = load i32, i32* %nb_bsfs6, align 8, !dbg !2239
  %sub7 = sub nsw i32 %17, 1, !dbg !2240
  %cmp8 = icmp eq i32 %15, %sub7, !dbg !2241
  br i1 %cmp8, label %if.then9, label %if.else10, !dbg !2242

if.then9:                                         ; preds = %if.end5
  %18 = load i32, i32* %ret, align 4, !dbg !2243
  store i32 %18, i32* %retval, align 4, !dbg !2245
  br label %return, !dbg !2245

if.else10:                                        ; preds = %if.end5
  %19 = load i32, i32* %idx, align 4, !dbg !2246
  %inc = add nsw i32 %19, 1, !dbg !2246
  store i32 %inc, i32* %idx, align 4, !dbg !2246
  %20 = load i32, i32* %idx, align 4, !dbg !2248
  %idxprom11 = sext i32 %20 to i64, !dbg !2249
  %21 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !2249
  %bsfs12 = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %21, i32 0, i32 0, !dbg !2250
  %22 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %bsfs12, align 8, !dbg !2250
  %arrayidx13 = getelementptr inbounds %struct.AVBSFContext*, %struct.AVBSFContext** %22, i64 %idxprom11, !dbg !2249
  %23 = load %struct.AVBSFContext*, %struct.AVBSFContext** %arrayidx13, align 8, !dbg !2249
  %24 = load i32, i32* %ret, align 4, !dbg !2251
  %cmp14 = icmp slt i32 %24, 0, !dbg !2252
  br i1 %cmp14, label %cond.true, label %cond.false, !dbg !2251

cond.true:                                        ; preds = %if.else10
  br label %cond.end, !dbg !2253

cond.false:                                       ; preds = %if.else10
  %25 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !2255
  br label %cond.end, !dbg !2257

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.AVPacket* [ null, %cond.true ], [ %25, %cond.false ], !dbg !2258
  %call15 = call i32 @av_bsf_send_packet(%struct.AVBSFContext* %23, %struct.AVPacket* %cond), !dbg !2260
  store i32 %call15, i32* %ret, align 4, !dbg !2261
  %26 = load i32, i32* %ret, align 4, !dbg !2262
  %cmp16 = icmp slt i32 %26, 0, !dbg !2264
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !2265

if.then17:                                        ; preds = %cond.end
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2266
  %28 = bitcast %struct.AVCodecContext* %27 to i8*, !dbg !2266
  call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 16, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.27, i32 0, i32 0)), !dbg !2268
  %29 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !2269
  call void @av_packet_unref(%struct.AVPacket* %29), !dbg !2270
  %30 = load i32, i32* %ret, align 4, !dbg !2271
  store i32 %30, i32* %retval, align 4, !dbg !2272
  br label %return, !dbg !2272

if.end18:                                         ; preds = %cond.end
  br label %if.end19

if.end19:                                         ; preds = %if.end18
  br label %while.cond, !dbg !2273, !llvm.loop !2224

while.end:                                        ; preds = %while.cond
  store i32 -11, i32* %retval, align 4, !dbg !2275
  br label %return, !dbg !2275

return:                                           ; preds = %while.end, %if.then17, %if.then9, %if.then4
  %31 = load i32, i32* %retval, align 4, !dbg !2276
  ret i32 %31, !dbg !2276
}

; Function Attrs: nounwind uwtable
define internal i32 @extract_packet_props(%struct.AVCodecInternal* %avci, %struct.AVPacket* %pkt) #0 !dbg !2277 {
entry:
  %avci.addr = alloca %struct.AVCodecInternal*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %ret = alloca i32, align 4
  store %struct.AVCodecInternal* %avci, %struct.AVCodecInternal** %avci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecInternal** %avci.addr, metadata !2282, metadata !1805), !dbg !2283
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !2284, metadata !1805), !dbg !2285
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2286, metadata !1805), !dbg !2287
  store i32 0, i32* %ret, align 4, !dbg !2287
  %0 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci.addr, align 8, !dbg !2288
  %last_pkt_props = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %0, i32 0, i32 8, !dbg !2289
  %1 = load %struct.AVPacket*, %struct.AVPacket** %last_pkt_props, align 8, !dbg !2289
  call void @av_packet_unref(%struct.AVPacket* %1), !dbg !2290
  %2 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !2291
  %tobool = icmp ne %struct.AVPacket* %2, null, !dbg !2291
  br i1 %tobool, label %if.then, label %if.end6, !dbg !2293

if.then:                                          ; preds = %entry
  %3 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci.addr, align 8, !dbg !2294
  %last_pkt_props1 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %3, i32 0, i32 8, !dbg !2296
  %4 = load %struct.AVPacket*, %struct.AVPacket** %last_pkt_props1, align 8, !dbg !2296
  %5 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !2297
  %call = call i32 @av_packet_copy_props(%struct.AVPacket* %4, %struct.AVPacket* %5), !dbg !2298
  store i32 %call, i32* %ret, align 4, !dbg !2299
  %6 = load i32, i32* %ret, align 4, !dbg !2300
  %tobool2 = icmp ne i32 %6, 0, !dbg !2300
  br i1 %tobool2, label %if.end, label %if.then3, !dbg !2302

if.then3:                                         ; preds = %if.then
  %7 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !2303
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %7, i32 0, i32 4, !dbg !2304
  %8 = load i32, i32* %size, align 8, !dbg !2304
  %9 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci.addr, align 8, !dbg !2305
  %last_pkt_props4 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %9, i32 0, i32 8, !dbg !2306
  %10 = load %struct.AVPacket*, %struct.AVPacket** %last_pkt_props4, align 8, !dbg !2306
  %size5 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %10, i32 0, i32 4, !dbg !2307
  store i32 %8, i32* %size5, align 8, !dbg !2308
  br label %if.end, !dbg !2305

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end6, !dbg !2309

if.end6:                                          ; preds = %if.end, %entry
  %11 = load i32, i32* %ret, align 4, !dbg !2310
  ret i32 %11, !dbg !2311
}

; Function Attrs: nounwind uwtable
define internal i32 @apply_param_change(%struct.AVCodecContext* %avctx, %struct.AVPacket* %avpkt) #0 !dbg !2312 {
entry:
  %b.addr.i94 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i94, metadata !2315, metadata !1805), !dbg !2321
  %b.addr.i90 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i90, metadata !2325, metadata !1805), !dbg !2329
  %b.addr.i86 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i86, metadata !2315, metadata !1805), !dbg !2333
  %b.addr.i82 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i82, metadata !2315, metadata !1805), !dbg !2337
  %b.addr.i78 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i78, metadata !2315, metadata !1805), !dbg !2341
  %b.addr.i = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i, metadata !2315, metadata !1805), !dbg !2343
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %size = alloca i32, align 4
  %ret = alloca i32, align 4
  %data = alloca i8*, align 8
  %flags = alloca i32, align 4
  %val = alloca i64, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2345, metadata !1805), !dbg !2346
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !2347, metadata !1805), !dbg !2348
  call void @llvm.dbg.declare(metadata i32* %size, metadata !2349, metadata !1805), !dbg !2350
  store i32 0, i32* %size, align 4, !dbg !2350
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2351, metadata !1805), !dbg !2352
  call void @llvm.dbg.declare(metadata i8** %data, metadata !2353, metadata !1805), !dbg !2354
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !2355, metadata !1805), !dbg !2356
  call void @llvm.dbg.declare(metadata i64* %val, metadata !2357, metadata !1805), !dbg !2358
  %0 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2359
  %call = call i8* @av_packet_get_side_data(%struct.AVPacket* %0, i32 2, i32* %size), !dbg !2360
  store i8* %call, i8** %data, align 8, !dbg !2361
  %1 = load i8*, i8** %data, align 8, !dbg !2362
  %tobool = icmp ne i8* %1, null, !dbg !2362
  br i1 %tobool, label %if.end, label %if.then, !dbg !2364

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !2365
  br label %return, !dbg !2365

if.end:                                           ; preds = %entry
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2366
  %codec = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i32 0, i32 3, !dbg !2368
  %3 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !2368
  %capabilities = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %3, i32 0, i32 4, !dbg !2369
  %4 = load i32, i32* %capabilities, align 8, !dbg !2369
  %and = and i32 %4, 16384, !dbg !2370
  %tobool1 = icmp ne i32 %and, 0, !dbg !2370
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !2371

if.then2:                                         ; preds = %if.end
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2372
  %6 = bitcast %struct.AVCodecContext* %5 to i8*, !dbg !2372
  call void (i8*, i32, i8*, ...) @av_log(i8* %6, i32 16, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.28, i32 0, i32 0)), !dbg !2374
  store i32 -22, i32* %ret, align 4, !dbg !2375
  br label %fail2, !dbg !2376

if.end3:                                          ; preds = %if.end
  %7 = load i32, i32* %size, align 4, !dbg !2377
  %cmp = icmp slt i32 %7, 4, !dbg !2379
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !2380

if.then4:                                         ; preds = %if.end3
  br label %fail, !dbg !2381

if.end5:                                          ; preds = %if.end3
  store i8** %data, i8*** %b.addr.i, align 8, !dbg !2382
  %8 = load i8**, i8*** %b.addr.i, align 8, !dbg !2383
  %9 = load i8*, i8** %8, align 8, !dbg !2384
  %add.ptr.i = getelementptr inbounds i8, i8* %9, i64 4, !dbg !2384
  store i8* %add.ptr.i, i8** %8, align 8, !dbg !2384
  %10 = load i8**, i8*** %b.addr.i, align 8, !dbg !2385
  %11 = load i8*, i8** %10, align 8, !dbg !2386
  %add.ptr1.i = getelementptr inbounds i8, i8* %11, i64 -4, !dbg !2387
  %12 = bitcast i8* %add.ptr1.i to %union.unaligned_32*, !dbg !2388
  %l.i = bitcast %union.unaligned_32* %12 to i32*, !dbg !2388
  %13 = load i32, i32* %l.i, align 1, !dbg !2388
  store i32 %13, i32* %flags, align 4, !dbg !2389
  %14 = load i32, i32* %size, align 4, !dbg !2390
  %sub = sub nsw i32 %14, 4, !dbg !2390
  store i32 %sub, i32* %size, align 4, !dbg !2390
  %15 = load i32, i32* %flags, align 4, !dbg !2391
  %and7 = and i32 %15, 1, !dbg !2392
  %tobool8 = icmp ne i32 %and7, 0, !dbg !2392
  br i1 %tobool8, label %if.then9, label %if.end22, !dbg !2393

if.then9:                                         ; preds = %if.end5
  %16 = load i32, i32* %size, align 4, !dbg !2394
  %cmp10 = icmp slt i32 %16, 4, !dbg !2396
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !2397

if.then11:                                        ; preds = %if.then9
  br label %fail, !dbg !2398

if.end12:                                         ; preds = %if.then9
  store i8** %data, i8*** %b.addr.i94, align 8, !dbg !2399
  %17 = load i8**, i8*** %b.addr.i94, align 8, !dbg !2400
  %18 = load i8*, i8** %17, align 8, !dbg !2401
  %add.ptr.i95 = getelementptr inbounds i8, i8* %18, i64 4, !dbg !2401
  store i8* %add.ptr.i95, i8** %17, align 8, !dbg !2401
  %19 = load i8**, i8*** %b.addr.i94, align 8, !dbg !2402
  %20 = load i8*, i8** %19, align 8, !dbg !2403
  %add.ptr1.i96 = getelementptr inbounds i8, i8* %20, i64 -4, !dbg !2404
  %21 = bitcast i8* %add.ptr1.i96 to %union.unaligned_32*, !dbg !2405
  %l.i97 = bitcast %union.unaligned_32* %21 to i32*, !dbg !2405
  %22 = load i32, i32* %l.i97, align 1, !dbg !2405
  %conv = zext i32 %22 to i64, !dbg !2399
  store i64 %conv, i64* %val, align 8, !dbg !2406
  %23 = load i64, i64* %val, align 8, !dbg !2407
  %cmp14 = icmp sle i64 %23, 0, !dbg !2409
  br i1 %cmp14, label %if.then18, label %lor.lhs.false, !dbg !2410

lor.lhs.false:                                    ; preds = %if.end12
  %24 = load i64, i64* %val, align 8, !dbg !2411
  %cmp16 = icmp sgt i64 %24, 2147483647, !dbg !2413
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !2414

if.then18:                                        ; preds = %lor.lhs.false, %if.end12
  %25 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2415
  %26 = bitcast %struct.AVCodecContext* %25 to i8*, !dbg !2415
  call void (i8*, i32, i8*, ...) @av_log(i8* %26, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.29, i32 0, i32 0)), !dbg !2417
  store i32 -1094995529, i32* %ret, align 4, !dbg !2418
  br label %fail2, !dbg !2419

if.end19:                                         ; preds = %lor.lhs.false
  %27 = load i64, i64* %val, align 8, !dbg !2420
  %conv20 = trunc i64 %27 to i32, !dbg !2420
  %28 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2421
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %28, i32 0, i32 83, !dbg !2422
  store i32 %conv20, i32* %channels, align 4, !dbg !2423
  %29 = load i32, i32* %size, align 4, !dbg !2424
  %sub21 = sub nsw i32 %29, 4, !dbg !2424
  store i32 %sub21, i32* %size, align 4, !dbg !2424
  br label %if.end22, !dbg !2425

if.end22:                                         ; preds = %if.end19, %if.end5
  %30 = load i32, i32* %flags, align 4, !dbg !2426
  %and23 = and i32 %30, 2, !dbg !2427
  %tobool24 = icmp ne i32 %and23, 0, !dbg !2427
  br i1 %tobool24, label %if.then25, label %if.end32, !dbg !2428

if.then25:                                        ; preds = %if.end22
  %31 = load i32, i32* %size, align 4, !dbg !2429
  %cmp26 = icmp slt i32 %31, 8, !dbg !2431
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !2432

if.then28:                                        ; preds = %if.then25
  br label %fail, !dbg !2433

if.end29:                                         ; preds = %if.then25
  store i8** %data, i8*** %b.addr.i90, align 8, !dbg !2434
  %32 = load i8**, i8*** %b.addr.i90, align 8, !dbg !2435
  %33 = load i8*, i8** %32, align 8, !dbg !2436
  %add.ptr.i91 = getelementptr inbounds i8, i8* %33, i64 8, !dbg !2436
  store i8* %add.ptr.i91, i8** %32, align 8, !dbg !2436
  %34 = load i8**, i8*** %b.addr.i90, align 8, !dbg !2437
  %35 = load i8*, i8** %34, align 8, !dbg !2438
  %add.ptr1.i92 = getelementptr inbounds i8, i8* %35, i64 -8, !dbg !2439
  %36 = bitcast i8* %add.ptr1.i92 to %union.unaligned_64*, !dbg !2440
  %l.i93 = bitcast %union.unaligned_64* %36 to i64*, !dbg !2440
  %37 = load i64, i64* %l.i93, align 1, !dbg !2440
  %38 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2441
  %channel_layout = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %38, i32 0, i32 89, !dbg !2442
  store i64 %37, i64* %channel_layout, align 8, !dbg !2443
  %39 = load i32, i32* %size, align 4, !dbg !2444
  %sub31 = sub nsw i32 %39, 8, !dbg !2444
  store i32 %sub31, i32* %size, align 4, !dbg !2444
  br label %if.end32, !dbg !2445

if.end32:                                         ; preds = %if.end29, %if.end22
  %40 = load i32, i32* %flags, align 4, !dbg !2446
  %and33 = and i32 %40, 4, !dbg !2447
  %tobool34 = icmp ne i32 %and33, 0, !dbg !2447
  br i1 %tobool34, label %if.then35, label %if.end51, !dbg !2448

if.then35:                                        ; preds = %if.end32
  %41 = load i32, i32* %size, align 4, !dbg !2449
  %cmp36 = icmp slt i32 %41, 4, !dbg !2451
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !2452

if.then38:                                        ; preds = %if.then35
  br label %fail, !dbg !2453

if.end39:                                         ; preds = %if.then35
  store i8** %data, i8*** %b.addr.i86, align 8, !dbg !2454
  %42 = load i8**, i8*** %b.addr.i86, align 8, !dbg !2455
  %43 = load i8*, i8** %42, align 8, !dbg !2456
  %add.ptr.i87 = getelementptr inbounds i8, i8* %43, i64 4, !dbg !2456
  store i8* %add.ptr.i87, i8** %42, align 8, !dbg !2456
  %44 = load i8**, i8*** %b.addr.i86, align 8, !dbg !2457
  %45 = load i8*, i8** %44, align 8, !dbg !2458
  %add.ptr1.i88 = getelementptr inbounds i8, i8* %45, i64 -4, !dbg !2459
  %46 = bitcast i8* %add.ptr1.i88 to %union.unaligned_32*, !dbg !2460
  %l.i89 = bitcast %union.unaligned_32* %46 to i32*, !dbg !2460
  %47 = load i32, i32* %l.i89, align 1, !dbg !2460
  %conv41 = zext i32 %47 to i64, !dbg !2454
  store i64 %conv41, i64* %val, align 8, !dbg !2461
  %48 = load i64, i64* %val, align 8, !dbg !2462
  %cmp42 = icmp sle i64 %48, 0, !dbg !2464
  br i1 %cmp42, label %if.then47, label %lor.lhs.false44, !dbg !2465

lor.lhs.false44:                                  ; preds = %if.end39
  %49 = load i64, i64* %val, align 8, !dbg !2466
  %cmp45 = icmp sgt i64 %49, 2147483647, !dbg !2468
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !2469

if.then47:                                        ; preds = %lor.lhs.false44, %if.end39
  %50 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2470
  %51 = bitcast %struct.AVCodecContext* %50 to i8*, !dbg !2470
  call void (i8*, i32, i8*, ...) @av_log(i8* %51, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.30, i32 0, i32 0)), !dbg !2472
  store i32 -1094995529, i32* %ret, align 4, !dbg !2473
  br label %fail2, !dbg !2474

if.end48:                                         ; preds = %lor.lhs.false44
  %52 = load i64, i64* %val, align 8, !dbg !2475
  %conv49 = trunc i64 %52 to i32, !dbg !2475
  %53 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2476
  %sample_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %53, i32 0, i32 82, !dbg !2477
  store i32 %conv49, i32* %sample_rate, align 8, !dbg !2478
  %54 = load i32, i32* %size, align 4, !dbg !2479
  %sub50 = sub nsw i32 %54, 4, !dbg !2479
  store i32 %sub50, i32* %size, align 4, !dbg !2479
  br label %if.end51, !dbg !2480

if.end51:                                         ; preds = %if.end48, %if.end32
  %55 = load i32, i32* %flags, align 4, !dbg !2481
  %and52 = and i32 %55, 8, !dbg !2482
  %tobool53 = icmp ne i32 %and52, 0, !dbg !2482
  br i1 %tobool53, label %if.then54, label %if.end69, !dbg !2483

if.then54:                                        ; preds = %if.end51
  %56 = load i32, i32* %size, align 4, !dbg !2484
  %cmp55 = icmp slt i32 %56, 8, !dbg !2486
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !2487

if.then57:                                        ; preds = %if.then54
  br label %fail, !dbg !2488

if.end58:                                         ; preds = %if.then54
  store i8** %data, i8*** %b.addr.i82, align 8, !dbg !2489
  %57 = load i8**, i8*** %b.addr.i82, align 8, !dbg !2490
  %58 = load i8*, i8** %57, align 8, !dbg !2491
  %add.ptr.i83 = getelementptr inbounds i8, i8* %58, i64 4, !dbg !2491
  store i8* %add.ptr.i83, i8** %57, align 8, !dbg !2491
  %59 = load i8**, i8*** %b.addr.i82, align 8, !dbg !2492
  %60 = load i8*, i8** %59, align 8, !dbg !2493
  %add.ptr1.i84 = getelementptr inbounds i8, i8* %60, i64 -4, !dbg !2494
  %61 = bitcast i8* %add.ptr1.i84 to %union.unaligned_32*, !dbg !2495
  %l.i85 = bitcast %union.unaligned_32* %61 to i32*, !dbg !2495
  %62 = load i32, i32* %l.i85, align 1, !dbg !2495
  %63 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2496
  %width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %63, i32 0, i32 20, !dbg !2497
  store i32 %62, i32* %width, align 4, !dbg !2498
  store i8** %data, i8*** %b.addr.i78, align 8, !dbg !2499
  %64 = load i8**, i8*** %b.addr.i78, align 8, !dbg !2500
  %65 = load i8*, i8** %64, align 8, !dbg !2501
  %add.ptr.i79 = getelementptr inbounds i8, i8* %65, i64 4, !dbg !2501
  store i8* %add.ptr.i79, i8** %64, align 8, !dbg !2501
  %66 = load i8**, i8*** %b.addr.i78, align 8, !dbg !2502
  %67 = load i8*, i8** %66, align 8, !dbg !2503
  %add.ptr1.i80 = getelementptr inbounds i8, i8* %67, i64 -4, !dbg !2504
  %68 = bitcast i8* %add.ptr1.i80 to %union.unaligned_32*, !dbg !2505
  %l.i81 = bitcast %union.unaligned_32* %68 to i32*, !dbg !2505
  %69 = load i32, i32* %l.i81, align 1, !dbg !2505
  %70 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2506
  %height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %70, i32 0, i32 21, !dbg !2507
  store i32 %69, i32* %height, align 8, !dbg !2508
  %71 = load i32, i32* %size, align 4, !dbg !2509
  %sub61 = sub nsw i32 %71, 8, !dbg !2509
  store i32 %sub61, i32* %size, align 4, !dbg !2509
  %72 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2510
  %73 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2511
  %width62 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %73, i32 0, i32 20, !dbg !2512
  %74 = load i32, i32* %width62, align 4, !dbg !2512
  %75 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2513
  %height63 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %75, i32 0, i32 21, !dbg !2514
  %76 = load i32, i32* %height63, align 8, !dbg !2514
  %call64 = call i32 @ff_set_dimensions(%struct.AVCodecContext* %72, i32 %74, i32 %76), !dbg !2515
  store i32 %call64, i32* %ret, align 4, !dbg !2516
  %77 = load i32, i32* %ret, align 4, !dbg !2517
  %cmp65 = icmp slt i32 %77, 0, !dbg !2519
  br i1 %cmp65, label %if.then67, label %if.end68, !dbg !2520

if.then67:                                        ; preds = %if.end58
  br label %fail2, !dbg !2521

if.end68:                                         ; preds = %if.end58
  br label %if.end69, !dbg !2522

if.end69:                                         ; preds = %if.end68, %if.end51
  store i32 0, i32* %retval, align 4, !dbg !2523
  br label %return, !dbg !2523

fail:                                             ; preds = %if.then57, %if.then38, %if.then28, %if.then11, %if.then4
  %78 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2524
  %79 = bitcast %struct.AVCodecContext* %78 to i8*, !dbg !2524
  call void (i8*, i32, i8*, ...) @av_log(i8* %79, i32 16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0)), !dbg !2525
  store i32 -1094995529, i32* %ret, align 4, !dbg !2526
  br label %fail2, !dbg !2527

fail2:                                            ; preds = %fail, %if.then67, %if.then47, %if.then18, %if.then2
  %80 = load i32, i32* %ret, align 4, !dbg !2528
  %cmp70 = icmp slt i32 %80, 0, !dbg !2530
  br i1 %cmp70, label %if.then72, label %if.end77, !dbg !2531

if.then72:                                        ; preds = %fail2
  %81 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2532
  %82 = bitcast %struct.AVCodecContext* %81 to i8*, !dbg !2532
  call void (i8*, i32, i8*, ...) @av_log(i8* %82, i32 16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.32, i32 0, i32 0)), !dbg !2534
  %83 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2535
  %err_recognition = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %83, i32 0, i32 135, !dbg !2537
  %84 = load i32, i32* %err_recognition, align 8, !dbg !2537
  %and73 = and i32 %84, 8, !dbg !2538
  %tobool74 = icmp ne i32 %and73, 0, !dbg !2538
  br i1 %tobool74, label %if.then75, label %if.end76, !dbg !2539

if.then75:                                        ; preds = %if.then72
  %85 = load i32, i32* %ret, align 4, !dbg !2540
  store i32 %85, i32* %retval, align 4, !dbg !2541
  br label %return, !dbg !2541

if.end76:                                         ; preds = %if.then72
  br label %if.end77, !dbg !2542

if.end77:                                         ; preds = %if.end76, %fail2
  store i32 0, i32* %retval, align 4, !dbg !2543
  br label %return, !dbg !2543

return:                                           ; preds = %if.end77, %if.then75, %if.end69, %if.then
  %86 = load i32, i32* %retval, align 4, !dbg !2544
  ret i32 %86, !dbg !2544
}

declare void @av_packet_unref(%struct.AVPacket*) #2

; Function Attrs: nounwind uwtable
define i32 @avcodec_send_packet(%struct.AVCodecContext* %avctx, %struct.AVPacket* %avpkt) #0 !dbg !2545 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %avci = alloca %struct.AVCodecInternal*, align 8
  %ret = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2546, metadata !1805), !dbg !2547
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !2548, metadata !1805), !dbg !2549
  call void @llvm.dbg.declare(metadata %struct.AVCodecInternal** %avci, metadata !2550, metadata !1805), !dbg !2551
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2552
  %internal = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 7, !dbg !2553
  %1 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal, align 8, !dbg !2553
  store %struct.AVCodecInternal* %1, %struct.AVCodecInternal** %avci, align 8, !dbg !2551
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2554, metadata !1805), !dbg !2555
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2556
  %call = call i32 @avcodec_is_open(%struct.AVCodecContext* %2), !dbg !2558
  %tobool = icmp ne i32 %call, 0, !dbg !2558
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !2559

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2560
  %codec = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %3, i32 0, i32 3, !dbg !2562
  %4 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !2562
  %call1 = call i32 @av_codec_is_decoder(%struct.AVCodec* %4), !dbg !2563
  %tobool2 = icmp ne i32 %call1, 0, !dbg !2563
  br i1 %tobool2, label %if.end, label %if.then, !dbg !2564

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !2565
  br label %return, !dbg !2565

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2566
  %internal3 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %5, i32 0, i32 7, !dbg !2568
  %6 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal3, align 8, !dbg !2568
  %draining = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %6, i32 0, i32 14, !dbg !2569
  %7 = load i32, i32* %draining, align 8, !dbg !2569
  %tobool4 = icmp ne i32 %7, 0, !dbg !2566
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !2570

if.then5:                                         ; preds = %if.end
  store i32 -541478725, i32* %retval, align 4, !dbg !2571
  br label %return, !dbg !2571

if.end6:                                          ; preds = %if.end
  %8 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2572
  %tobool7 = icmp ne %struct.AVPacket* %8, null, !dbg !2572
  br i1 %tobool7, label %land.lhs.true, label %if.end12, !dbg !2574

land.lhs.true:                                    ; preds = %if.end6
  %9 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2575
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %9, i32 0, i32 4, !dbg !2577
  %10 = load i32, i32* %size, align 8, !dbg !2577
  %tobool8 = icmp ne i32 %10, 0, !dbg !2575
  br i1 %tobool8, label %if.end12, label %land.lhs.true9, !dbg !2578

land.lhs.true9:                                   ; preds = %land.lhs.true
  %11 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2579
  %data = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %11, i32 0, i32 3, !dbg !2581
  %12 = load i8*, i8** %data, align 8, !dbg !2581
  %tobool10 = icmp ne i8* %12, null, !dbg !2579
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !2582

if.then11:                                        ; preds = %land.lhs.true9
  store i32 -22, i32* %retval, align 4, !dbg !2583
  br label %return, !dbg !2583

if.end12:                                         ; preds = %land.lhs.true9, %land.lhs.true, %if.end6
  %13 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !2584
  %buffer_pkt = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %13, i32 0, i32 15, !dbg !2585
  %14 = load %struct.AVPacket*, %struct.AVPacket** %buffer_pkt, align 8, !dbg !2585
  call void @av_packet_unref(%struct.AVPacket* %14), !dbg !2586
  %15 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2587
  %tobool13 = icmp ne %struct.AVPacket* %15, null, !dbg !2587
  br i1 %tobool13, label %land.lhs.true14, label %if.end24, !dbg !2589

land.lhs.true14:                                  ; preds = %if.end12
  %16 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2590
  %data15 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %16, i32 0, i32 3, !dbg !2592
  %17 = load i8*, i8** %data15, align 8, !dbg !2592
  %tobool16 = icmp ne i8* %17, null, !dbg !2590
  br i1 %tobool16, label %if.then19, label %lor.lhs.false17, !dbg !2593

lor.lhs.false17:                                  ; preds = %land.lhs.true14
  %18 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2594
  %side_data_elems = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %18, i32 0, i32 8, !dbg !2596
  %19 = load i32, i32* %side_data_elems, align 8, !dbg !2596
  %tobool18 = icmp ne i32 %19, 0, !dbg !2594
  br i1 %tobool18, label %if.then19, label %if.end24, !dbg !2597

if.then19:                                        ; preds = %lor.lhs.false17, %land.lhs.true14
  %20 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !2598
  %buffer_pkt20 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %20, i32 0, i32 15, !dbg !2600
  %21 = load %struct.AVPacket*, %struct.AVPacket** %buffer_pkt20, align 8, !dbg !2600
  %22 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2601
  %call21 = call i32 @av_packet_ref(%struct.AVPacket* %21, %struct.AVPacket* %22), !dbg !2602
  store i32 %call21, i32* %ret, align 4, !dbg !2603
  %23 = load i32, i32* %ret, align 4, !dbg !2604
  %cmp = icmp slt i32 %23, 0, !dbg !2606
  br i1 %cmp, label %if.then22, label %if.end23, !dbg !2607

if.then22:                                        ; preds = %if.then19
  %24 = load i32, i32* %ret, align 4, !dbg !2608
  store i32 %24, i32* %retval, align 4, !dbg !2609
  br label %return, !dbg !2609

if.end23:                                         ; preds = %if.then19
  br label %if.end24, !dbg !2610

if.end24:                                         ; preds = %if.end23, %lor.lhs.false17, %if.end12
  %25 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !2611
  %filter = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %25, i32 0, i32 7, !dbg !2612
  %bsfs = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %filter, i32 0, i32 0, !dbg !2613
  %26 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %bsfs, align 8, !dbg !2613
  %arrayidx = getelementptr inbounds %struct.AVBSFContext*, %struct.AVBSFContext** %26, i64 0, !dbg !2611
  %27 = load %struct.AVBSFContext*, %struct.AVBSFContext** %arrayidx, align 8, !dbg !2611
  %28 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !2614
  %buffer_pkt25 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %28, i32 0, i32 15, !dbg !2615
  %29 = load %struct.AVPacket*, %struct.AVPacket** %buffer_pkt25, align 8, !dbg !2615
  %call26 = call i32 @av_bsf_send_packet(%struct.AVBSFContext* %27, %struct.AVPacket* %29), !dbg !2616
  store i32 %call26, i32* %ret, align 4, !dbg !2617
  %30 = load i32, i32* %ret, align 4, !dbg !2618
  %cmp27 = icmp slt i32 %30, 0, !dbg !2620
  br i1 %cmp27, label %if.then28, label %if.end30, !dbg !2621

if.then28:                                        ; preds = %if.end24
  %31 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !2622
  %buffer_pkt29 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %31, i32 0, i32 15, !dbg !2624
  %32 = load %struct.AVPacket*, %struct.AVPacket** %buffer_pkt29, align 8, !dbg !2624
  call void @av_packet_unref(%struct.AVPacket* %32), !dbg !2625
  %33 = load i32, i32* %ret, align 4, !dbg !2626
  store i32 %33, i32* %retval, align 4, !dbg !2627
  br label %return, !dbg !2627

if.end30:                                         ; preds = %if.end24
  %34 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !2628
  %buffer_frame = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %34, i32 0, i32 17, !dbg !2630
  %35 = load %struct.AVFrame*, %struct.AVFrame** %buffer_frame, align 8, !dbg !2630
  %buf = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %35, i32 0, i32 25, !dbg !2631
  %arrayidx31 = getelementptr inbounds [8 x %struct.AVBufferRef*], [8 x %struct.AVBufferRef*]* %buf, i64 0, i64 0, !dbg !2628
  %36 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx31, align 8, !dbg !2628
  %tobool32 = icmp ne %struct.AVBufferRef* %36, null, !dbg !2628
  br i1 %tobool32, label %if.end43, label %if.then33, !dbg !2632

if.then33:                                        ; preds = %if.end30
  %37 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2633
  %38 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !2635
  %buffer_frame34 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %38, i32 0, i32 17, !dbg !2636
  %39 = load %struct.AVFrame*, %struct.AVFrame** %buffer_frame34, align 8, !dbg !2636
  %call35 = call i32 @decode_receive_frame_internal(%struct.AVCodecContext* %37, %struct.AVFrame* %39), !dbg !2637
  store i32 %call35, i32* %ret, align 4, !dbg !2638
  %40 = load i32, i32* %ret, align 4, !dbg !2639
  %cmp36 = icmp slt i32 %40, 0, !dbg !2641
  br i1 %cmp36, label %land.lhs.true37, label %if.end42, !dbg !2642

land.lhs.true37:                                  ; preds = %if.then33
  %41 = load i32, i32* %ret, align 4, !dbg !2643
  %cmp38 = icmp ne i32 %41, -11, !dbg !2645
  br i1 %cmp38, label %land.lhs.true39, label %if.end42, !dbg !2646

land.lhs.true39:                                  ; preds = %land.lhs.true37
  %42 = load i32, i32* %ret, align 4, !dbg !2647
  %cmp40 = icmp ne i32 %42, -541478725, !dbg !2649
  br i1 %cmp40, label %if.then41, label %if.end42, !dbg !2650

if.then41:                                        ; preds = %land.lhs.true39
  %43 = load i32, i32* %ret, align 4, !dbg !2651
  store i32 %43, i32* %retval, align 4, !dbg !2652
  br label %return, !dbg !2652

if.end42:                                         ; preds = %land.lhs.true39, %land.lhs.true37, %if.then33
  br label %if.end43, !dbg !2653

if.end43:                                         ; preds = %if.end42, %if.end30
  store i32 0, i32* %retval, align 4, !dbg !2654
  br label %return, !dbg !2654

return:                                           ; preds = %if.end43, %if.then41, %if.then28, %if.then22, %if.then11, %if.then5, %if.then
  %44 = load i32, i32* %retval, align 4, !dbg !2655
  ret i32 %44, !dbg !2655
}

declare i32 @avcodec_is_open(%struct.AVCodecContext*) #2

declare i32 @av_codec_is_decoder(%struct.AVCodec*) #2

declare i32 @av_packet_ref(%struct.AVPacket*, %struct.AVPacket*) #2

declare i32 @av_bsf_send_packet(%struct.AVBSFContext*, %struct.AVPacket*) #2

; Function Attrs: nounwind uwtable
define internal i32 @decode_receive_frame_internal(%struct.AVCodecContext* %avctx, %struct.AVFrame* %frame) #0 !dbg !2656 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %avci = alloca %struct.AVCodecInternal*, align 8
  %ret = alloca i32, align 4
  %fdd = alloca %struct.FrameDecodeData*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2657, metadata !1805), !dbg !2658
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !2659, metadata !1805), !dbg !2660
  call void @llvm.dbg.declare(metadata %struct.AVCodecInternal** %avci, metadata !2661, metadata !1805), !dbg !2662
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2663
  %internal = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 7, !dbg !2664
  %1 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal, align 8, !dbg !2664
  store %struct.AVCodecInternal* %1, %struct.AVCodecInternal** %avci, align 8, !dbg !2662
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2665, metadata !1805), !dbg !2666
  br label %do.body, !dbg !2667, !llvm.loop !2668

do.body:                                          ; preds = %entry
  %2 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2669
  %buf = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %2, i32 0, i32 25, !dbg !2673
  %arrayidx = getelementptr inbounds [8 x %struct.AVBufferRef*], [8 x %struct.AVBufferRef*]* %buf, i64 0, i64 0, !dbg !2669
  %3 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx, align 8, !dbg !2669
  %tobool = icmp ne %struct.AVBufferRef* %3, null, !dbg !2669
  br i1 %tobool, label %if.then, label %if.end, !dbg !2674

if.then:                                          ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i32 0, i32 0), i32 642), !dbg !2675
  call void @abort() #9, !dbg !2678
  unreachable, !dbg !2680

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !2681

do.end:                                           ; preds = %if.end
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2683
  %codec = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 3, !dbg !2685
  %5 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !2685
  %receive_frame = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %5, i32 0, i32 27, !dbg !2686
  %6 = load i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)** %receive_frame, align 8, !dbg !2686
  %tobool1 = icmp ne i32 (%struct.AVCodecContext*, %struct.AVFrame*)* %6, null, !dbg !2683
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !2687

if.then2:                                         ; preds = %do.end
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2688
  %codec3 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %7, i32 0, i32 3, !dbg !2689
  %8 = load %struct.AVCodec*, %struct.AVCodec** %codec3, align 8, !dbg !2689
  %receive_frame4 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %8, i32 0, i32 27, !dbg !2690
  %9 = load i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)** %receive_frame4, align 8, !dbg !2690
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2691
  %11 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2692
  %call = call i32 %9(%struct.AVCodecContext* %10, %struct.AVFrame* %11), !dbg !2688
  store i32 %call, i32* %ret, align 4, !dbg !2693
  br label %if.end6, !dbg !2694

if.else:                                          ; preds = %do.end
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2695
  %13 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2696
  %call5 = call i32 @decode_simple_receive_frame(%struct.AVCodecContext* %12, %struct.AVFrame* %13), !dbg !2697
  store i32 %call5, i32* %ret, align 4, !dbg !2698
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then2
  %14 = load i32, i32* %ret, align 4, !dbg !2699
  %cmp = icmp eq i32 %14, -541478725, !dbg !2701
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !2702

if.then7:                                         ; preds = %if.end6
  %15 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !2703
  %draining_done = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %15, i32 0, i32 18, !dbg !2704
  store i32 1, i32* %draining_done, align 8, !dbg !2705
  br label %if.end8, !dbg !2703

if.end8:                                          ; preds = %if.then7, %if.end6
  %16 = load i32, i32* %ret, align 4, !dbg !2706
  %tobool9 = icmp ne i32 %16, 0, !dbg !2706
  br i1 %tobool9, label %if.end35, label %if.then10, !dbg !2708

if.then10:                                        ; preds = %if.end8
  br label %do.body11, !dbg !2709, !llvm.loop !2711

do.body11:                                        ; preds = %if.then10
  %17 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2712
  %private_ref = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %17, i32 0, i32 53, !dbg !2716
  %18 = load %struct.AVBufferRef*, %struct.AVBufferRef** %private_ref, align 8, !dbg !2716
  %tobool12 = icmp ne %struct.AVBufferRef* %18, null, !dbg !2712
  br i1 %tobool12, label %land.lhs.true, label %lor.lhs.false, !dbg !2717

land.lhs.true:                                    ; preds = %do.body11
  %19 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2718
  %private_ref13 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %19, i32 0, i32 53, !dbg !2720
  %20 = load %struct.AVBufferRef*, %struct.AVBufferRef** %private_ref13, align 8, !dbg !2720
  %size = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %20, i32 0, i32 2, !dbg !2721
  %21 = load i32, i32* %size, align 8, !dbg !2721
  %conv = sext i32 %21 to i64, !dbg !2718
  %cmp14 = icmp eq i64 %conv, 40, !dbg !2722
  br i1 %cmp14, label %if.end19, label %lor.lhs.false, !dbg !2723

lor.lhs.false:                                    ; preds = %land.lhs.true, %do.body11
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2724
  %codec16 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %22, i32 0, i32 3, !dbg !2726
  %23 = load %struct.AVCodec*, %struct.AVCodec** %codec16, align 8, !dbg !2726
  %capabilities = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %23, i32 0, i32 4, !dbg !2727
  %24 = load i32, i32* %capabilities, align 8, !dbg !2727
  %and = and i32 %24, 2, !dbg !2728
  %tobool17 = icmp ne i32 %and, 0, !dbg !2728
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !2729

if.then18:                                        ; preds = %lor.lhs.false
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i32 0, i32 0), i32 656), !dbg !2730
  call void @abort() #9, !dbg !2733
  unreachable, !dbg !2735

if.end19:                                         ; preds = %lor.lhs.false, %land.lhs.true
  br label %do.end20, !dbg !2736

do.end20:                                         ; preds = %if.end19
  %25 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2738
  %private_ref21 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %25, i32 0, i32 53, !dbg !2740
  %26 = load %struct.AVBufferRef*, %struct.AVBufferRef** %private_ref21, align 8, !dbg !2740
  %tobool22 = icmp ne %struct.AVBufferRef* %26, null, !dbg !2738
  br i1 %tobool22, label %if.then23, label %if.end34, !dbg !2741

if.then23:                                        ; preds = %do.end20
  call void @llvm.dbg.declare(metadata %struct.FrameDecodeData** %fdd, metadata !2742, metadata !1805), !dbg !2744
  %27 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2745
  %private_ref24 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %27, i32 0, i32 53, !dbg !2746
  %28 = load %struct.AVBufferRef*, %struct.AVBufferRef** %private_ref24, align 8, !dbg !2746
  %data = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %28, i32 0, i32 1, !dbg !2747
  %29 = load i8*, i8** %data, align 8, !dbg !2747
  %30 = bitcast i8* %29 to %struct.FrameDecodeData*, !dbg !2748
  store %struct.FrameDecodeData* %30, %struct.FrameDecodeData** %fdd, align 8, !dbg !2744
  %31 = load %struct.FrameDecodeData*, %struct.FrameDecodeData** %fdd, align 8, !dbg !2749
  %post_process = getelementptr inbounds %struct.FrameDecodeData, %struct.FrameDecodeData* %31, i32 0, i32 0, !dbg !2751
  %32 = load i32 (i8*, %struct.AVFrame*)*, i32 (i8*, %struct.AVFrame*)** %post_process, align 8, !dbg !2751
  %tobool25 = icmp ne i32 (i8*, %struct.AVFrame*)* %32, null, !dbg !2749
  br i1 %tobool25, label %if.then26, label %if.end33, !dbg !2752

if.then26:                                        ; preds = %if.then23
  %33 = load %struct.FrameDecodeData*, %struct.FrameDecodeData** %fdd, align 8, !dbg !2753
  %post_process27 = getelementptr inbounds %struct.FrameDecodeData, %struct.FrameDecodeData* %33, i32 0, i32 0, !dbg !2755
  %34 = load i32 (i8*, %struct.AVFrame*)*, i32 (i8*, %struct.AVFrame*)** %post_process27, align 8, !dbg !2755
  %35 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2756
  %36 = bitcast %struct.AVCodecContext* %35 to i8*, !dbg !2756
  %37 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2757
  %call28 = call i32 %34(i8* %36, %struct.AVFrame* %37), !dbg !2753
  store i32 %call28, i32* %ret, align 4, !dbg !2758
  %38 = load i32, i32* %ret, align 4, !dbg !2759
  %cmp29 = icmp slt i32 %38, 0, !dbg !2761
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !2762

if.then31:                                        ; preds = %if.then26
  %39 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2763
  call void @av_frame_unref(%struct.AVFrame* %39), !dbg !2765
  %40 = load i32, i32* %ret, align 4, !dbg !2766
  store i32 %40, i32* %retval, align 4, !dbg !2767
  br label %return, !dbg !2767

if.end32:                                         ; preds = %if.then26
  br label %if.end33, !dbg !2768

if.end33:                                         ; preds = %if.end32, %if.then23
  br label %if.end34, !dbg !2769

if.end34:                                         ; preds = %if.end33, %do.end20
  br label %if.end35, !dbg !2770

if.end35:                                         ; preds = %if.end34, %if.end8
  %41 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2771
  %private_ref36 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %41, i32 0, i32 53, !dbg !2772
  call void @av_buffer_unref(%struct.AVBufferRef** %private_ref36), !dbg !2773
  %42 = load i32, i32* %ret, align 4, !dbg !2774
  store i32 %42, i32* %retval, align 4, !dbg !2775
  br label %return, !dbg !2775

return:                                           ; preds = %if.end35, %if.then31
  %43 = load i32, i32* %retval, align 4, !dbg !2776
  ret i32 %43, !dbg !2776
}

; Function Attrs: nounwind uwtable
define i32 @avcodec_receive_frame(%struct.AVCodecContext* %avctx, %struct.AVFrame* %frame) #0 !dbg !2777 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %avci = alloca %struct.AVCodecInternal*, align 8
  %ret = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2778, metadata !1805), !dbg !2779
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !2780, metadata !1805), !dbg !2781
  call void @llvm.dbg.declare(metadata %struct.AVCodecInternal** %avci, metadata !2782, metadata !1805), !dbg !2783
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2784
  %internal = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 7, !dbg !2785
  %1 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal, align 8, !dbg !2785
  store %struct.AVCodecInternal* %1, %struct.AVCodecInternal** %avci, align 8, !dbg !2783
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2786, metadata !1805), !dbg !2787
  %2 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2788
  call void @av_frame_unref(%struct.AVFrame* %2), !dbg !2789
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2790
  %call = call i32 @avcodec_is_open(%struct.AVCodecContext* %3), !dbg !2792
  %tobool = icmp ne i32 %call, 0, !dbg !2792
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !2793

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2794
  %codec = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 3, !dbg !2796
  %5 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !2796
  %call1 = call i32 @av_codec_is_decoder(%struct.AVCodec* %5), !dbg !2797
  %tobool2 = icmp ne i32 %call1, 0, !dbg !2797
  br i1 %tobool2, label %if.end, label %if.then, !dbg !2798

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !2799
  br label %return, !dbg !2799

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !2800
  %buffer_frame = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %6, i32 0, i32 17, !dbg !2802
  %7 = load %struct.AVFrame*, %struct.AVFrame** %buffer_frame, align 8, !dbg !2802
  %buf = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %7, i32 0, i32 25, !dbg !2803
  %arrayidx = getelementptr inbounds [8 x %struct.AVBufferRef*], [8 x %struct.AVBufferRef*]* %buf, i64 0, i64 0, !dbg !2800
  %8 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx, align 8, !dbg !2800
  %tobool3 = icmp ne %struct.AVBufferRef* %8, null, !dbg !2800
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !2804

if.then4:                                         ; preds = %if.end
  %9 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2805
  %10 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !2807
  %buffer_frame5 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %10, i32 0, i32 17, !dbg !2808
  %11 = load %struct.AVFrame*, %struct.AVFrame** %buffer_frame5, align 8, !dbg !2808
  call void @av_frame_move_ref(%struct.AVFrame* %9, %struct.AVFrame* %11), !dbg !2809
  br label %if.end9, !dbg !2810

if.else:                                          ; preds = %if.end
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2811
  %13 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2813
  %call6 = call i32 @decode_receive_frame_internal(%struct.AVCodecContext* %12, %struct.AVFrame* %13), !dbg !2814
  store i32 %call6, i32* %ret, align 4, !dbg !2815
  %14 = load i32, i32* %ret, align 4, !dbg !2816
  %cmp = icmp slt i32 %14, 0, !dbg !2818
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !2819

if.then7:                                         ; preds = %if.else
  %15 = load i32, i32* %ret, align 4, !dbg !2820
  store i32 %15, i32* %retval, align 4, !dbg !2821
  br label %return, !dbg !2821

if.end8:                                          ; preds = %if.else
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %if.then4
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2822
  %codec_type = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %16, i32 0, i32 2, !dbg !2824
  %17 = load i32, i32* %codec_type, align 4, !dbg !2824
  %cmp10 = icmp eq i32 %17, 0, !dbg !2825
  br i1 %cmp10, label %if.then11, label %if.end16, !dbg !2826

if.then11:                                        ; preds = %if.end9
  %18 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2827
  %19 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2829
  %call12 = call i32 @apply_cropping(%struct.AVCodecContext* %18, %struct.AVFrame* %19), !dbg !2830
  store i32 %call12, i32* %ret, align 4, !dbg !2831
  %20 = load i32, i32* %ret, align 4, !dbg !2832
  %cmp13 = icmp slt i32 %20, 0, !dbg !2834
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !2835

if.then14:                                        ; preds = %if.then11
  %21 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2836
  call void @av_frame_unref(%struct.AVFrame* %21), !dbg !2838
  %22 = load i32, i32* %ret, align 4, !dbg !2839
  store i32 %22, i32* %retval, align 4, !dbg !2840
  br label %return, !dbg !2840

if.end15:                                         ; preds = %if.then11
  br label %if.end16, !dbg !2841

if.end16:                                         ; preds = %if.end15, %if.end9
  %23 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2842
  %frame_number = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %23, i32 0, i32 86, !dbg !2843
  %24 = load i32, i32* %frame_number, align 8, !dbg !2844
  %inc = add nsw i32 %24, 1, !dbg !2844
  store i32 %inc, i32* %frame_number, align 8, !dbg !2844
  store i32 0, i32* %retval, align 4, !dbg !2845
  br label %return, !dbg !2845

return:                                           ; preds = %if.end16, %if.then14, %if.then7, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !2846
  ret i32 %25, !dbg !2846
}

declare void @av_frame_unref(%struct.AVFrame*) #2

declare void @av_frame_move_ref(%struct.AVFrame*, %struct.AVFrame*) #2

; Function Attrs: nounwind uwtable
define internal i32 @apply_cropping(%struct.AVCodecContext* %avctx, %struct.AVFrame* %frame) #0 !dbg !2847 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2848, metadata !1805), !dbg !2849
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !2850, metadata !1805), !dbg !2851
  %0 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2852
  %crop_left = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i32 0, i32 51, !dbg !2854
  %1 = load i64, i64* %crop_left, align 8, !dbg !2854
  %2 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2855
  %crop_right = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %2, i32 0, i32 52, !dbg !2856
  %3 = load i64, i64* %crop_right, align 8, !dbg !2856
  %sub = sub i64 2147483647, %3, !dbg !2857
  %cmp = icmp uge i64 %1, %sub, !dbg !2858
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2859

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2860
  %crop_top = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %4, i32 0, i32 49, !dbg !2861
  %5 = load i64, i64* %crop_top, align 8, !dbg !2861
  %6 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2862
  %crop_bottom = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %6, i32 0, i32 50, !dbg !2863
  %7 = load i64, i64* %crop_bottom, align 8, !dbg !2863
  %sub1 = sub i64 2147483647, %7, !dbg !2864
  %cmp2 = icmp uge i64 %5, %sub1, !dbg !2865
  br i1 %cmp2, label %if.then, label %lor.lhs.false3, !dbg !2866

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %8 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2867
  %crop_left4 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %8, i32 0, i32 51, !dbg !2868
  %9 = load i64, i64* %crop_left4, align 8, !dbg !2868
  %10 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2869
  %crop_right5 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %10, i32 0, i32 52, !dbg !2870
  %11 = load i64, i64* %crop_right5, align 8, !dbg !2870
  %add = add i64 %9, %11, !dbg !2871
  %12 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2872
  %width = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %12, i32 0, i32 3, !dbg !2873
  %13 = load i32, i32* %width, align 8, !dbg !2873
  %conv = sext i32 %13 to i64, !dbg !2872
  %cmp6 = icmp uge i64 %add, %conv, !dbg !2874
  br i1 %cmp6, label %if.then, label %lor.lhs.false8, !dbg !2875

lor.lhs.false8:                                   ; preds = %lor.lhs.false3
  %14 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2876
  %crop_top9 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %14, i32 0, i32 49, !dbg !2877
  %15 = load i64, i64* %crop_top9, align 8, !dbg !2877
  %16 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2878
  %crop_bottom10 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %16, i32 0, i32 50, !dbg !2879
  %17 = load i64, i64* %crop_bottom10, align 8, !dbg !2879
  %add11 = add i64 %15, %17, !dbg !2880
  %18 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2881
  %height = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %18, i32 0, i32 4, !dbg !2882
  %19 = load i32, i32* %height, align 4, !dbg !2882
  %conv12 = sext i32 %19 to i64, !dbg !2881
  %cmp13 = icmp uge i64 %add11, %conv12, !dbg !2883
  br i1 %cmp13, label %if.then, label %if.end, !dbg !2884

if.then:                                          ; preds = %lor.lhs.false8, %lor.lhs.false3, %lor.lhs.false, %entry
  %20 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2886
  %21 = bitcast %struct.AVCodecContext* %20 to i8*, !dbg !2886
  %22 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2888
  %crop_left15 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %22, i32 0, i32 51, !dbg !2889
  %23 = load i64, i64* %crop_left15, align 8, !dbg !2889
  %24 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2890
  %crop_right16 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %24, i32 0, i32 52, !dbg !2891
  %25 = load i64, i64* %crop_right16, align 8, !dbg !2891
  %26 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2892
  %crop_top17 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %26, i32 0, i32 49, !dbg !2893
  %27 = load i64, i64* %crop_top17, align 8, !dbg !2893
  %28 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2894
  %crop_bottom18 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %28, i32 0, i32 50, !dbg !2895
  %29 = load i64, i64* %crop_bottom18, align 8, !dbg !2895
  %30 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2896
  %width19 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %30, i32 0, i32 3, !dbg !2897
  %31 = load i32, i32* %width19, align 8, !dbg !2897
  %32 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2898
  %height20 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %32, i32 0, i32 4, !dbg !2899
  %33 = load i32, i32* %height20, align 4, !dbg !2899
  call void (i8*, i32, i8*, ...) @av_log(i8* %21, i32 24, i8* getelementptr inbounds ([116 x i8], [116 x i8]* @.str.44, i32 0, i32 0), i64 %23, i64 %25, i64 %27, i64 %29, i32 %31, i32 %33), !dbg !2900
  %34 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2901
  %crop_left21 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %34, i32 0, i32 51, !dbg !2902
  store i64 0, i64* %crop_left21, align 8, !dbg !2903
  %35 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2904
  %crop_right22 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %35, i32 0, i32 52, !dbg !2905
  store i64 0, i64* %crop_right22, align 8, !dbg !2906
  %36 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2907
  %crop_top23 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %36, i32 0, i32 49, !dbg !2908
  store i64 0, i64* %crop_top23, align 8, !dbg !2909
  %37 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2910
  %crop_bottom24 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %37, i32 0, i32 50, !dbg !2911
  store i64 0, i64* %crop_bottom24, align 8, !dbg !2912
  store i32 0, i32* %retval, align 4, !dbg !2913
  br label %return, !dbg !2913

if.end:                                           ; preds = %lor.lhs.false8
  %38 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2914
  %apply_cropping = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %38, i32 0, i32 188, !dbg !2916
  %39 = load i32, i32* %apply_cropping, align 4, !dbg !2916
  %tobool = icmp ne i32 %39, 0, !dbg !2914
  br i1 %tobool, label %if.end26, label %if.then25, !dbg !2917

if.then25:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !2918
  br label %return, !dbg !2918

if.end26:                                         ; preds = %if.end
  %40 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2919
  %41 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2920
  %flags = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %41, i32 0, i32 13, !dbg !2921
  %42 = load i32, i32* %flags, align 4, !dbg !2921
  %and = and i32 %42, 1, !dbg !2922
  %tobool27 = icmp ne i32 %and, 0, !dbg !2920
  %cond = select i1 %tobool27, i32 1, i32 0, !dbg !2920
  %call = call i32 @av_frame_apply_cropping(%struct.AVFrame* %40, i32 %cond), !dbg !2923
  store i32 %call, i32* %retval, align 4, !dbg !2924
  br label %return, !dbg !2924

return:                                           ; preds = %if.end26, %if.then25, %if.then
  %43 = load i32, i32* %retval, align 4, !dbg !2925
  ret i32 %43, !dbg !2925
}

; Function Attrs: nounwind uwtable
define i32 @avcodec_decode_video2(%struct.AVCodecContext* %avctx, %struct.AVFrame* %picture, i32* %got_picture_ptr, %struct.AVPacket* %avpkt) #0 !dbg !2926 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %picture.addr = alloca %struct.AVFrame*, align 8
  %got_picture_ptr.addr = alloca i32*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2929, metadata !1805), !dbg !2930
  store %struct.AVFrame* %picture, %struct.AVFrame** %picture.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %picture.addr, metadata !2931, metadata !1805), !dbg !2932
  store i32* %got_picture_ptr, i32** %got_picture_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_picture_ptr.addr, metadata !2933, metadata !1805), !dbg !2934
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !2935, metadata !1805), !dbg !2936
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2937
  %1 = load %struct.AVFrame*, %struct.AVFrame** %picture.addr, align 8, !dbg !2938
  %2 = load i32*, i32** %got_picture_ptr.addr, align 8, !dbg !2939
  %3 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2940
  %call = call i32 @compat_decode(%struct.AVCodecContext* %0, %struct.AVFrame* %1, i32* %2, %struct.AVPacket* %3), !dbg !2941
  ret i32 %call, !dbg !2942
}

; Function Attrs: nounwind uwtable
define internal i32 @compat_decode(%struct.AVCodecContext* %avctx, %struct.AVFrame* %frame, i32* %got_frame, %struct.AVPacket* %pkt) #0 !dbg !2943 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %got_frame.addr = alloca i32*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %avci = alloca %struct.AVCodecInternal*, align 8
  %ret = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2944, metadata !1805), !dbg !2945
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !2946, metadata !1805), !dbg !2947
  store i32* %got_frame, i32** %got_frame.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame.addr, metadata !2948, metadata !1805), !dbg !2949
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !2950, metadata !1805), !dbg !2951
  call void @llvm.dbg.declare(metadata %struct.AVCodecInternal** %avci, metadata !2952, metadata !1805), !dbg !2953
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2954
  %internal = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 7, !dbg !2955
  %1 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal, align 8, !dbg !2955
  store %struct.AVCodecInternal* %1, %struct.AVCodecInternal** %avci, align 8, !dbg !2953
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2956, metadata !1805), !dbg !2957
  store i32 0, i32* %ret, align 4, !dbg !2957
  br label %do.body, !dbg !2958, !llvm.loop !2959

do.body:                                          ; preds = %entry
  %2 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !2960
  %compat_decode_consumed = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %2, i32 0, i32 21, !dbg !2964
  %3 = load i64, i64* %compat_decode_consumed, align 8, !dbg !2964
  %cmp = icmp eq i64 %3, 0, !dbg !2965
  br i1 %cmp, label %if.end, label %if.then, !dbg !2966

if.then:                                          ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i32 0, i32 0), i32 777), !dbg !2967
  call void @abort() #9, !dbg !2970
  unreachable, !dbg !2972

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !2973

do.end:                                           ; preds = %if.end
  %4 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !2975
  %draining_done = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %4, i32 0, i32 18, !dbg !2977
  %5 = load i32, i32* %draining_done, align 8, !dbg !2977
  %tobool = icmp ne i32 %5, 0, !dbg !2975
  br i1 %tobool, label %land.lhs.true, label %if.end5, !dbg !2978

land.lhs.true:                                    ; preds = %do.end
  %6 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !2979
  %tobool1 = icmp ne %struct.AVPacket* %6, null, !dbg !2979
  br i1 %tobool1, label %land.lhs.true2, label %if.end5, !dbg !2981

land.lhs.true2:                                   ; preds = %land.lhs.true
  %7 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !2982
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %7, i32 0, i32 4, !dbg !2984
  %8 = load i32, i32* %size, align 8, !dbg !2984
  %cmp3 = icmp ne i32 %8, 0, !dbg !2985
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !2986

if.then4:                                         ; preds = %land.lhs.true2
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2987
  %10 = bitcast %struct.AVCodecContext* %9 to i8*, !dbg !2987
  call void (i8*, i32, i8*, ...) @av_log(i8* %10, i32 24, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.46, i32 0, i32 0)), !dbg !2989
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2990
  call void @avcodec_flush_buffers(%struct.AVCodecContext* %11), !dbg !2991
  br label %if.end5, !dbg !2992

if.end5:                                          ; preds = %if.then4, %land.lhs.true2, %land.lhs.true, %do.end
  %12 = load i32*, i32** %got_frame.addr, align 8, !dbg !2993
  store i32 0, i32* %12, align 4, !dbg !2994
  %13 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !2995
  %compat_decode = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %13, i32 0, i32 19, !dbg !2996
  store i32 1, i32* %compat_decode, align 4, !dbg !2997
  %14 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !2998
  %compat_decode_partial_size = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %14, i32 0, i32 22, !dbg !3000
  %15 = load i64, i64* %compat_decode_partial_size, align 8, !dbg !3000
  %cmp6 = icmp ugt i64 %15, 0, !dbg !3001
  br i1 %cmp6, label %land.lhs.true7, label %if.end13, !dbg !3002

land.lhs.true7:                                   ; preds = %if.end5
  %16 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !3003
  %compat_decode_partial_size8 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %16, i32 0, i32 22, !dbg !3004
  %17 = load i64, i64* %compat_decode_partial_size8, align 8, !dbg !3004
  %18 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3005
  %size9 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %18, i32 0, i32 4, !dbg !3006
  %19 = load i32, i32* %size9, align 8, !dbg !3006
  %conv = sext i32 %19 to i64, !dbg !3005
  %cmp10 = icmp ne i64 %17, %conv, !dbg !3007
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !3008

if.then12:                                        ; preds = %land.lhs.true7
  %20 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3010
  %21 = bitcast %struct.AVCodecContext* %20 to i8*, !dbg !3010
  call void (i8*, i32, i8*, ...) @av_log(i8* %21, i32 16, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.47, i32 0, i32 0)), !dbg !3012
  store i32 -22, i32* %ret, align 4, !dbg !3013
  br label %finish, !dbg !3014

if.end13:                                         ; preds = %land.lhs.true7, %if.end5
  %22 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !3015
  %compat_decode_partial_size14 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %22, i32 0, i32 22, !dbg !3017
  %23 = load i64, i64* %compat_decode_partial_size14, align 8, !dbg !3017
  %tobool15 = icmp ne i64 %23, 0, !dbg !3015
  br i1 %tobool15, label %if.end30, label %if.then16, !dbg !3018

if.then16:                                        ; preds = %if.end13
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3019
  %25 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3021
  %call = call i32 @avcodec_send_packet(%struct.AVCodecContext* %24, %struct.AVPacket* %25), !dbg !3022
  store i32 %call, i32* %ret, align 4, !dbg !3023
  %26 = load i32, i32* %ret, align 4, !dbg !3024
  %cmp17 = icmp eq i32 %26, -541478725, !dbg !3026
  br i1 %cmp17, label %if.then19, label %if.else, !dbg !3027

if.then19:                                        ; preds = %if.then16
  store i32 0, i32* %ret, align 4, !dbg !3028
  br label %if.end29, !dbg !3029

if.else:                                          ; preds = %if.then16
  %27 = load i32, i32* %ret, align 4, !dbg !3030
  %cmp20 = icmp eq i32 %27, -11, !dbg !3032
  br i1 %cmp20, label %if.then22, label %if.else23, !dbg !3033

if.then22:                                        ; preds = %if.else
  store i32 -558323010, i32* %ret, align 4, !dbg !3034
  br label %finish, !dbg !3036

if.else23:                                        ; preds = %if.else
  %28 = load i32, i32* %ret, align 4, !dbg !3037
  %cmp24 = icmp slt i32 %28, 0, !dbg !3039
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !3040

if.then26:                                        ; preds = %if.else23
  br label %finish, !dbg !3041

if.end27:                                         ; preds = %if.else23
  br label %if.end28

if.end28:                                         ; preds = %if.end27
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then19
  br label %if.end30, !dbg !3042

if.end30:                                         ; preds = %if.end29, %if.end13
  br label %while.cond, !dbg !3043

while.cond:                                       ; preds = %if.end72, %if.end30
  %29 = load i32, i32* %ret, align 4, !dbg !3044
  %cmp31 = icmp sge i32 %29, 0, !dbg !3045
  br i1 %cmp31, label %while.body, label %while.end, !dbg !3046

while.body:                                       ; preds = %while.cond
  %30 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3047
  %31 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3049
  %call33 = call i32 @avcodec_receive_frame(%struct.AVCodecContext* %30, %struct.AVFrame* %31), !dbg !3050
  store i32 %call33, i32* %ret, align 4, !dbg !3051
  %32 = load i32, i32* %ret, align 4, !dbg !3052
  %cmp34 = icmp slt i32 %32, 0, !dbg !3054
  br i1 %cmp34, label %if.then36, label %if.end43, !dbg !3055

if.then36:                                        ; preds = %while.body
  %33 = load i32, i32* %ret, align 4, !dbg !3056
  %cmp37 = icmp eq i32 %33, -11, !dbg !3059
  br i1 %cmp37, label %if.then41, label %lor.lhs.false, !dbg !3060

lor.lhs.false:                                    ; preds = %if.then36
  %34 = load i32, i32* %ret, align 4, !dbg !3061
  %cmp39 = icmp eq i32 %34, -541478725, !dbg !3063
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !3064

if.then41:                                        ; preds = %lor.lhs.false, %if.then36
  store i32 0, i32* %ret, align 4, !dbg !3065
  br label %if.end42, !dbg !3066

if.end42:                                         ; preds = %if.then41, %lor.lhs.false
  br label %finish, !dbg !3067

if.end43:                                         ; preds = %while.body
  %35 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3068
  %36 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !3070
  %compat_decode_frame = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %36, i32 0, i32 23, !dbg !3071
  %37 = load %struct.AVFrame*, %struct.AVFrame** %compat_decode_frame, align 8, !dbg !3071
  %cmp44 = icmp ne %struct.AVFrame* %35, %37, !dbg !3072
  br i1 %cmp44, label %if.then46, label %if.else56, !dbg !3073

if.then46:                                        ; preds = %if.end43
  %38 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3074
  %refcounted_frames = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %38, i32 0, i32 94, !dbg !3077
  %39 = load i32, i32* %refcounted_frames, align 8, !dbg !3077
  %tobool47 = icmp ne i32 %39, 0, !dbg !3074
  br i1 %tobool47, label %if.end54, label %if.then48, !dbg !3078

if.then48:                                        ; preds = %if.then46
  %40 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !3079
  %41 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3081
  %call49 = call i32 @unrefcount_frame(%struct.AVCodecInternal* %40, %struct.AVFrame* %41), !dbg !3082
  store i32 %call49, i32* %ret, align 4, !dbg !3083
  %42 = load i32, i32* %ret, align 4, !dbg !3084
  %cmp50 = icmp slt i32 %42, 0, !dbg !3086
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !3087

if.then52:                                        ; preds = %if.then48
  br label %finish, !dbg !3088

if.end53:                                         ; preds = %if.then48
  br label %if.end54, !dbg !3089

if.end54:                                         ; preds = %if.end53, %if.then46
  %43 = load i32*, i32** %got_frame.addr, align 8, !dbg !3090
  store i32 1, i32* %43, align 4, !dbg !3091
  %44 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !3092
  %compat_decode_frame55 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %44, i32 0, i32 23, !dbg !3093
  %45 = load %struct.AVFrame*, %struct.AVFrame** %compat_decode_frame55, align 8, !dbg !3093
  store %struct.AVFrame* %45, %struct.AVFrame** %frame.addr, align 8, !dbg !3094
  br label %if.end61, !dbg !3095

if.else56:                                        ; preds = %if.end43
  %46 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !3096
  %compat_decode_warned = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %46, i32 0, i32 20, !dbg !3099
  %47 = load i32, i32* %compat_decode_warned, align 8, !dbg !3099
  %tobool57 = icmp ne i32 %47, 0, !dbg !3096
  br i1 %tobool57, label %if.end60, label %if.then58, !dbg !3100

if.then58:                                        ; preds = %if.else56
  %48 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3101
  %49 = bitcast %struct.AVCodecContext* %48 to i8*, !dbg !3101
  call void (i8*, i32, i8*, ...) @av_log(i8* %49, i32 24, i8* getelementptr inbounds ([167 x i8], [167 x i8]* @.str.48, i32 0, i32 0)), !dbg !3103
  %50 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !3104
  %compat_decode_warned59 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %50, i32 0, i32 20, !dbg !3105
  store i32 1, i32* %compat_decode_warned59, align 8, !dbg !3106
  br label %if.end60, !dbg !3107

if.end60:                                         ; preds = %if.then58, %if.else56
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.end54
  %51 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !3108
  %draining = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %51, i32 0, i32 14, !dbg !3110
  %52 = load i32, i32* %draining, align 8, !dbg !3110
  %tobool62 = icmp ne i32 %52, 0, !dbg !3108
  br i1 %tobool62, label %if.then71, label %lor.lhs.false63, !dbg !3111

lor.lhs.false63:                                  ; preds = %if.end61
  %53 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3112
  %codec = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %53, i32 0, i32 3, !dbg !3114
  %54 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !3114
  %bsfs = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %54, i32 0, i32 30, !dbg !3115
  %55 = load i8*, i8** %bsfs, align 8, !dbg !3115
  %tobool64 = icmp ne i8* %55, null, !dbg !3112
  br i1 %tobool64, label %if.end72, label %land.lhs.true65, !dbg !3116

land.lhs.true65:                                  ; preds = %lor.lhs.false63
  %56 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !3117
  %compat_decode_consumed66 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %56, i32 0, i32 21, !dbg !3119
  %57 = load i64, i64* %compat_decode_consumed66, align 8, !dbg !3119
  %58 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3120
  %size67 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %58, i32 0, i32 4, !dbg !3121
  %59 = load i32, i32* %size67, align 8, !dbg !3121
  %conv68 = sext i32 %59 to i64, !dbg !3120
  %cmp69 = icmp ult i64 %57, %conv68, !dbg !3122
  br i1 %cmp69, label %if.then71, label %if.end72, !dbg !3123

if.then71:                                        ; preds = %land.lhs.true65, %if.end61
  br label %while.end, !dbg !3124

if.end72:                                         ; preds = %land.lhs.true65, %lor.lhs.false63
  br label %while.cond, !dbg !3125, !llvm.loop !3127

while.end:                                        ; preds = %if.then71, %while.cond
  br label %finish, !dbg !3128

finish:                                           ; preds = %while.end, %if.then52, %if.end42, %if.then26, %if.then22, %if.then12
  %60 = load i32, i32* %ret, align 4, !dbg !3130
  %cmp73 = icmp eq i32 %60, 0, !dbg !3132
  br i1 %cmp73, label %if.then75, label %if.end92, !dbg !3133

if.then75:                                        ; preds = %finish
  %61 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3134
  %codec76 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %61, i32 0, i32 3, !dbg !3137
  %62 = load %struct.AVCodec*, %struct.AVCodec** %codec76, align 8, !dbg !3137
  %bsfs77 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %62, i32 0, i32 30, !dbg !3138
  %63 = load i8*, i8** %bsfs77, align 8, !dbg !3138
  %tobool78 = icmp ne i8* %63, null, !dbg !3134
  br i1 %tobool78, label %if.then79, label %if.else81, !dbg !3139

if.then79:                                        ; preds = %if.then75
  %64 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3140
  %size80 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %64, i32 0, i32 4, !dbg !3141
  %65 = load i32, i32* %size80, align 8, !dbg !3141
  store i32 %65, i32* %ret, align 4, !dbg !3142
  br label %if.end91, !dbg !3143

if.else81:                                        ; preds = %if.then75
  %66 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !3144
  %compat_decode_consumed82 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %66, i32 0, i32 21, !dbg !3145
  %67 = load i64, i64* %compat_decode_consumed82, align 8, !dbg !3145
  %68 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3146
  %size83 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %68, i32 0, i32 4, !dbg !3147
  %69 = load i32, i32* %size83, align 8, !dbg !3147
  %conv84 = sext i32 %69 to i64, !dbg !3148
  %cmp85 = icmp ugt i64 %67, %conv84, !dbg !3149
  br i1 %cmp85, label %cond.true, label %cond.false, !dbg !3150

cond.true:                                        ; preds = %if.else81
  %70 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3151
  %size87 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %70, i32 0, i32 4, !dbg !3153
  %71 = load i32, i32* %size87, align 8, !dbg !3153
  %conv88 = sext i32 %71 to i64, !dbg !3154
  br label %cond.end, !dbg !3155

cond.false:                                       ; preds = %if.else81
  %72 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !3156
  %compat_decode_consumed89 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %72, i32 0, i32 21, !dbg !3158
  %73 = load i64, i64* %compat_decode_consumed89, align 8, !dbg !3158
  br label %cond.end, !dbg !3159

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv88, %cond.true ], [ %73, %cond.false ], !dbg !3160
  %conv90 = trunc i64 %cond to i32, !dbg !3162
  store i32 %conv90, i32* %ret, align 4, !dbg !3163
  br label %if.end91

if.end91:                                         ; preds = %cond.end, %if.then79
  br label %if.end92, !dbg !3164

if.end92:                                         ; preds = %if.end91, %finish
  %74 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !3165
  %compat_decode_consumed93 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %74, i32 0, i32 21, !dbg !3166
  store i64 0, i64* %compat_decode_consumed93, align 8, !dbg !3167
  %75 = load i32, i32* %ret, align 4, !dbg !3168
  %cmp94 = icmp sge i32 %75, 0, !dbg !3169
  br i1 %cmp94, label %cond.true96, label %cond.false98, !dbg !3170

cond.true96:                                      ; preds = %if.end92
  %76 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3171
  %size97 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %76, i32 0, i32 4, !dbg !3172
  %77 = load i32, i32* %size97, align 8, !dbg !3172
  %78 = load i32, i32* %ret, align 4, !dbg !3173
  %sub = sub nsw i32 %77, %78, !dbg !3174
  br label %cond.end99, !dbg !3175

cond.false98:                                     ; preds = %if.end92
  br label %cond.end99, !dbg !3176

cond.end99:                                       ; preds = %cond.false98, %cond.true96
  %cond100 = phi i32 [ %sub, %cond.true96 ], [ 0, %cond.false98 ], !dbg !3177
  %conv101 = sext i32 %cond100 to i64, !dbg !3177
  %79 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !3178
  %compat_decode_partial_size102 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %79, i32 0, i32 22, !dbg !3179
  store i64 %conv101, i64* %compat_decode_partial_size102, align 8, !dbg !3180
  %80 = load i32, i32* %ret, align 4, !dbg !3181
  ret i32 %80, !dbg !3182
}

; Function Attrs: nounwind uwtable
define i32 @avcodec_decode_audio4(%struct.AVCodecContext* %avctx, %struct.AVFrame* %frame, i32* %got_frame_ptr, %struct.AVPacket* %avpkt) #0 !dbg !3183 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %got_frame_ptr.addr = alloca i32*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3184, metadata !1805), !dbg !3185
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !3186, metadata !1805), !dbg !3187
  store i32* %got_frame_ptr, i32** %got_frame_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame_ptr.addr, metadata !3188, metadata !1805), !dbg !3189
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !3190, metadata !1805), !dbg !3191
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3192
  %1 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3193
  %2 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !3194
  %3 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !3195
  %call = call i32 @compat_decode(%struct.AVCodecContext* %0, %struct.AVFrame* %1, i32* %2, %struct.AVPacket* %3), !dbg !3196
  ret i32 %call, !dbg !3197
}

; Function Attrs: nounwind uwtable
define i32 @avcodec_decode_subtitle2(%struct.AVCodecContext* %avctx, %struct.AVSubtitle* %sub, i32* %got_sub_ptr, %struct.AVPacket* %avpkt) #0 !dbg !3198 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %sub.addr = alloca %struct.AVSubtitle*, align 8
  %got_sub_ptr.addr = alloca i32*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %pkt_recoded = alloca %struct.AVPacket, align 8
  %.compoundliteral = alloca %struct.AVRational, align 4
  %tb = alloca %struct.AVRational, align 4
  %err = alloca i32, align 4
  %ms = alloca %struct.AVRational, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3203, metadata !1805), !dbg !3204
  store %struct.AVSubtitle* %sub, %struct.AVSubtitle** %sub.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVSubtitle** %sub.addr, metadata !3205, metadata !1805), !dbg !3206
  store i32* %got_sub_ptr, i32** %got_sub_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_sub_ptr.addr, metadata !3207, metadata !1805), !dbg !3208
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !3209, metadata !1805), !dbg !3210
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3211, metadata !1805), !dbg !3212
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3213, metadata !1805), !dbg !3214
  store i32 0, i32* %ret, align 4, !dbg !3214
  %0 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !3215
  %data = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i32 0, i32 3, !dbg !3217
  %1 = load i8*, i8** %data, align 8, !dbg !3217
  %tobool = icmp ne i8* %1, null, !dbg !3215
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !3218

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !3219
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i32 0, i32 4, !dbg !3221
  %3 = load i32, i32* %size, align 8, !dbg !3221
  %tobool1 = icmp ne i32 %3, 0, !dbg !3219
  br i1 %tobool1, label %if.then, label %if.end, !dbg !3222

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3223
  %5 = bitcast %struct.AVCodecContext* %4 to i8*, !dbg !3223
  call void (i8*, i32, i8*, ...) @av_log(i8* %5, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i32 0, i32 0)), !dbg !3225
  store i32 -22, i32* %retval, align 4, !dbg !3226
  br label %return, !dbg !3226

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3227
  %codec = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %6, i32 0, i32 3, !dbg !3229
  %7 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !3229
  %tobool2 = icmp ne %struct.AVCodec* %7, null, !dbg !3227
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !3230

if.then3:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !3231
  br label %return, !dbg !3231

if.end4:                                          ; preds = %if.end
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3232
  %codec5 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %8, i32 0, i32 3, !dbg !3234
  %9 = load %struct.AVCodec*, %struct.AVCodec** %codec5, align 8, !dbg !3234
  %type = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %9, i32 0, i32 2, !dbg !3235
  %10 = load i32, i32* %type, align 8, !dbg !3235
  %cmp = icmp ne i32 %10, 3, !dbg !3236
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !3237

if.then6:                                         ; preds = %if.end4
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3238
  %12 = bitcast %struct.AVCodecContext* %11 to i8*, !dbg !3238
  call void (i8*, i32, i8*, ...) @av_log(i8* %12, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i32 0, i32 0)), !dbg !3240
  store i32 -22, i32* %retval, align 4, !dbg !3241
  br label %return, !dbg !3241

if.end7:                                          ; preds = %if.end4
  %13 = load i32*, i32** %got_sub_ptr.addr, align 8, !dbg !3242
  store i32 0, i32* %13, align 4, !dbg !3243
  %14 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !3244
  call void @get_subtitle_defaults(%struct.AVSubtitle* %14), !dbg !3245
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3246
  %codec8 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %15, i32 0, i32 3, !dbg !3248
  %16 = load %struct.AVCodec*, %struct.AVCodec** %codec8, align 8, !dbg !3248
  %capabilities = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %16, i32 0, i32 4, !dbg !3249
  %17 = load i32, i32* %capabilities, align 8, !dbg !3249
  %and = and i32 %17, 32, !dbg !3250
  %tobool9 = icmp ne i32 %and, 0, !dbg !3250
  br i1 %tobool9, label %if.then12, label %lor.lhs.false, !dbg !3251

lor.lhs.false:                                    ; preds = %if.end7
  %18 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !3252
  %size10 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %18, i32 0, i32 4, !dbg !3254
  %19 = load i32, i32* %size10, align 8, !dbg !3254
  %tobool11 = icmp ne i32 %19, 0, !dbg !3252
  br i1 %tobool11, label %if.then12, label %if.end101, !dbg !3255

if.then12:                                        ; preds = %lor.lhs.false, %if.end7
  call void @llvm.dbg.declare(metadata %struct.AVPacket* %pkt_recoded, metadata !3256, metadata !1805), !dbg !3258
  %20 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !3259
  %21 = bitcast %struct.AVPacket* %pkt_recoded to i8*, !dbg !3260
  %22 = bitcast %struct.AVPacket* %20 to i8*, !dbg !3260
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 88, i32 8, i1 false), !dbg !3260
  %23 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3261
  %24 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !3262
  %call = call i32 @recode_subtitle(%struct.AVCodecContext* %23, %struct.AVPacket* %pkt_recoded, %struct.AVPacket* %24), !dbg !3263
  store i32 %call, i32* %ret, align 4, !dbg !3264
  %25 = load i32, i32* %ret, align 4, !dbg !3265
  %cmp13 = icmp slt i32 %25, 0, !dbg !3267
  br i1 %cmp13, label %if.then14, label %if.else, !dbg !3268

if.then14:                                        ; preds = %if.then12
  %26 = load i32*, i32** %got_sub_ptr.addr, align 8, !dbg !3269
  store i32 0, i32* %26, align 4, !dbg !3271
  br label %if.end96, !dbg !3272

if.else:                                          ; preds = %if.then12
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3273
  %internal = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %27, i32 0, i32 7, !dbg !3275
  %28 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal, align 8, !dbg !3275
  %call15 = call i32 @extract_packet_props(%struct.AVCodecInternal* %28, %struct.AVPacket* %pkt_recoded), !dbg !3276
  store i32 %call15, i32* %ret, align 4, !dbg !3277
  %29 = load i32, i32* %ret, align 4, !dbg !3278
  %cmp16 = icmp slt i32 %29, 0, !dbg !3280
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !3281

if.then17:                                        ; preds = %if.else
  %30 = load i32, i32* %ret, align 4, !dbg !3282
  store i32 %30, i32* %retval, align 4, !dbg !3283
  br label %return, !dbg !3283

if.end18:                                         ; preds = %if.else
  %31 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3284
  %pkt_timebase = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %31, i32 0, i32 165, !dbg !3286
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %pkt_timebase, i32 0, i32 0, !dbg !3287
  %32 = load i32, i32* %num, align 4, !dbg !3287
  %tobool19 = icmp ne i32 %32, 0, !dbg !3284
  br i1 %tobool19, label %land.lhs.true20, label %if.end28, !dbg !3288

land.lhs.true20:                                  ; preds = %if.end18
  %33 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !3289
  %pts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %33, i32 0, i32 1, !dbg !3291
  %34 = load i64, i64* %pts, align 8, !dbg !3291
  %cmp21 = icmp ne i64 %34, -9223372036854775808, !dbg !3292
  br i1 %cmp21, label %if.then22, label %if.end28, !dbg !3293

if.then22:                                        ; preds = %land.lhs.true20
  %35 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !3294
  %pts23 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %35, i32 0, i32 1, !dbg !3295
  %36 = load i64, i64* %pts23, align 8, !dbg !3295
  %37 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3296
  %pkt_timebase24 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %37, i32 0, i32 165, !dbg !3297
  %num25 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !3298
  store i32 1, i32* %num25, align 4, !dbg !3298
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !3298
  store i32 1000000, i32* %den, align 4, !dbg !3298
  %38 = bitcast %struct.AVRational* %pkt_timebase24 to i64*, !dbg !3299
  %39 = load i64, i64* %38, align 4, !dbg !3299
  %40 = bitcast %struct.AVRational* %.compoundliteral to i64*, !dbg !3299
  %41 = load i64, i64* %40, align 4, !dbg !3299
  %call26 = call i64 @av_rescale_q(i64 %36, i64 %39, i64 %41) #1, !dbg !3299
  %42 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !3300
  %pts27 = getelementptr inbounds %struct.AVSubtitle, %struct.AVSubtitle* %42, i32 0, i32 5, !dbg !3301
  store i64 %call26, i64* %pts27, align 8, !dbg !3302
  br label %if.end28, !dbg !3300

if.end28:                                         ; preds = %if.then22, %land.lhs.true20, %if.end18
  %43 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3303
  %codec29 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %43, i32 0, i32 3, !dbg !3304
  %44 = load %struct.AVCodec*, %struct.AVCodec** %codec29, align 8, !dbg !3304
  %decode = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %44, i32 0, i32 23, !dbg !3305
  %45 = load i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)** %decode, align 8, !dbg !3305
  %46 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3306
  %47 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !3307
  %48 = bitcast %struct.AVSubtitle* %47 to i8*, !dbg !3307
  %49 = load i32*, i32** %got_sub_ptr.addr, align 8, !dbg !3308
  %call30 = call i32 %45(%struct.AVCodecContext* %46, i8* %48, i32* %49, %struct.AVPacket* %pkt_recoded), !dbg !3303
  store i32 %call30, i32* %ret, align 4, !dbg !3309
  %50 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3310
  %sub_text_format = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %50, i32 0, i32 183, !dbg !3312
  %51 = load i32, i32* %sub_text_format, align 8, !dbg !3312
  %cmp31 = icmp eq i32 %51, 1, !dbg !3313
  br i1 %cmp31, label %land.lhs.true32, label %if.end45, !dbg !3314

land.lhs.true32:                                  ; preds = %if.end28
  %52 = load i32*, i32** %got_sub_ptr.addr, align 8, !dbg !3315
  %53 = load i32, i32* %52, align 4, !dbg !3317
  %tobool33 = icmp ne i32 %53, 0, !dbg !3317
  br i1 %tobool33, label %land.lhs.true34, label %if.end45, !dbg !3318

land.lhs.true34:                                  ; preds = %land.lhs.true32
  %54 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !3319
  %num_rects = getelementptr inbounds %struct.AVSubtitle, %struct.AVSubtitle* %54, i32 0, i32 3, !dbg !3321
  %55 = load i32, i32* %num_rects, align 4, !dbg !3321
  %tobool35 = icmp ne i32 %55, 0, !dbg !3319
  br i1 %tobool35, label %if.then36, label %if.end45, !dbg !3322

if.then36:                                        ; preds = %land.lhs.true34
  call void @llvm.dbg.declare(metadata %struct.AVRational* %tb, metadata !3324, metadata !1805), !dbg !3326
  %56 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3327
  %pkt_timebase37 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %56, i32 0, i32 165, !dbg !3328
  %num38 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %pkt_timebase37, i32 0, i32 0, !dbg !3329
  %57 = load i32, i32* %num38, align 4, !dbg !3329
  %tobool39 = icmp ne i32 %57, 0, !dbg !3327
  br i1 %tobool39, label %cond.true, label %cond.false, !dbg !3327

cond.true:                                        ; preds = %if.then36
  %58 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3330
  %pkt_timebase40 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %58, i32 0, i32 165, !dbg !3332
  %59 = bitcast %struct.AVRational* %tb to i8*, !dbg !3332
  %60 = bitcast %struct.AVRational* %pkt_timebase40 to i8*, !dbg !3332
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %59, i8* %60, i64 8, i32 4, i1 false), !dbg !3332
  br label %cond.end, !dbg !3333

cond.false:                                       ; preds = %if.then36
  %61 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3334
  %time_base = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %61, i32 0, i32 17, !dbg !3335
  %62 = bitcast %struct.AVRational* %tb to i8*, !dbg !3335
  %63 = bitcast %struct.AVRational* %time_base to i8*, !dbg !3335
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %62, i8* %63, i64 8, i32 4, i1 false), !dbg !3335
  br label %cond.end, !dbg !3336

cond.end:                                         ; preds = %cond.false, %cond.true
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3338, metadata !1805), !dbg !3339
  %64 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !3340
  %65 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !3341
  %66 = bitcast %struct.AVRational* %tb to i64*, !dbg !3342
  %67 = load i64, i64* %66, align 4, !dbg !3342
  %call41 = call i32 @convert_sub_to_old_ass_form(%struct.AVSubtitle* %64, %struct.AVPacket* %65, i64 %67), !dbg !3342
  store i32 %call41, i32* %err, align 4, !dbg !3339
  %68 = load i32, i32* %err, align 4, !dbg !3343
  %cmp42 = icmp slt i32 %68, 0, !dbg !3345
  br i1 %cmp42, label %if.then43, label %if.end44, !dbg !3346

if.then43:                                        ; preds = %cond.end
  %69 = load i32, i32* %err, align 4, !dbg !3347
  store i32 %69, i32* %ret, align 4, !dbg !3348
  br label %if.end44, !dbg !3349

if.end44:                                         ; preds = %if.then43, %cond.end
  br label %if.end45, !dbg !3350

if.end45:                                         ; preds = %if.end44, %land.lhs.true34, %land.lhs.true32, %if.end28
  %70 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !3351
  %num_rects46 = getelementptr inbounds %struct.AVSubtitle, %struct.AVSubtitle* %70, i32 0, i32 3, !dbg !3353
  %71 = load i32, i32* %num_rects46, align 4, !dbg !3353
  %tobool47 = icmp ne i32 %71, 0, !dbg !3351
  br i1 %tobool47, label %land.lhs.true48, label %if.end61, !dbg !3354

land.lhs.true48:                                  ; preds = %if.end45
  %72 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !3355
  %end_display_time = getelementptr inbounds %struct.AVSubtitle, %struct.AVSubtitle* %72, i32 0, i32 2, !dbg !3357
  %73 = load i32, i32* %end_display_time, align 8, !dbg !3357
  %tobool49 = icmp ne i32 %73, 0, !dbg !3355
  br i1 %tobool49, label %if.end61, label %land.lhs.true50, !dbg !3358

land.lhs.true50:                                  ; preds = %land.lhs.true48
  %74 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !3359
  %duration = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %74, i32 0, i32 9, !dbg !3361
  %75 = load i64, i64* %duration, align 8, !dbg !3361
  %tobool51 = icmp ne i64 %75, 0, !dbg !3359
  br i1 %tobool51, label %land.lhs.true52, label %if.end61, !dbg !3362

land.lhs.true52:                                  ; preds = %land.lhs.true50
  %76 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3363
  %pkt_timebase53 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %76, i32 0, i32 165, !dbg !3364
  %num54 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %pkt_timebase53, i32 0, i32 0, !dbg !3365
  %77 = load i32, i32* %num54, align 4, !dbg !3365
  %tobool55 = icmp ne i32 %77, 0, !dbg !3363
  br i1 %tobool55, label %if.then56, label %if.end61, !dbg !3366

if.then56:                                        ; preds = %land.lhs.true52
  call void @llvm.dbg.declare(metadata %struct.AVRational* %ms, metadata !3368, metadata !1805), !dbg !3370
  %78 = bitcast %struct.AVRational* %ms to i8*, !dbg !3370
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %78, i8* bitcast (%struct.AVRational* @avcodec_decode_subtitle2.ms to i8*), i64 8, i32 4, i1 false), !dbg !3370
  %79 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !3371
  %duration57 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %79, i32 0, i32 9, !dbg !3372
  %80 = load i64, i64* %duration57, align 8, !dbg !3372
  %81 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3373
  %pkt_timebase58 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %81, i32 0, i32 165, !dbg !3374
  %82 = bitcast %struct.AVRational* %pkt_timebase58 to i64*, !dbg !3375
  %83 = load i64, i64* %82, align 4, !dbg !3375
  %84 = bitcast %struct.AVRational* %ms to i64*, !dbg !3375
  %85 = load i64, i64* %84, align 4, !dbg !3375
  %call59 = call i64 @av_rescale_q(i64 %80, i64 %83, i64 %85) #1, !dbg !3375
  %conv = trunc i64 %call59 to i32, !dbg !3375
  %86 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !3376
  %end_display_time60 = getelementptr inbounds %struct.AVSubtitle, %struct.AVSubtitle* %86, i32 0, i32 2, !dbg !3377
  store i32 %conv, i32* %end_display_time60, align 8, !dbg !3378
  br label %if.end61, !dbg !3379

if.end61:                                         ; preds = %if.then56, %land.lhs.true52, %land.lhs.true50, %land.lhs.true48, %if.end45
  %87 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3380
  %codec_descriptor = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %87, i32 0, i32 166, !dbg !3382
  %88 = load %struct.AVCodecDescriptor*, %struct.AVCodecDescriptor** %codec_descriptor, align 8, !dbg !3382
  %props = getelementptr inbounds %struct.AVCodecDescriptor, %struct.AVCodecDescriptor* %88, i32 0, i32 4, !dbg !3383
  %89 = load i32, i32* %props, align 8, !dbg !3383
  %and62 = and i32 %89, 65536, !dbg !3384
  %tobool63 = icmp ne i32 %and62, 0, !dbg !3384
  br i1 %tobool63, label %if.then64, label %if.else65, !dbg !3385

if.then64:                                        ; preds = %if.end61
  %90 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !3386
  %format = getelementptr inbounds %struct.AVSubtitle, %struct.AVSubtitle* %90, i32 0, i32 0, !dbg !3387
  store i16 0, i16* %format, align 8, !dbg !3388
  br label %if.end73, !dbg !3386

if.else65:                                        ; preds = %if.end61
  %91 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3389
  %codec_descriptor66 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %91, i32 0, i32 166, !dbg !3391
  %92 = load %struct.AVCodecDescriptor*, %struct.AVCodecDescriptor** %codec_descriptor66, align 8, !dbg !3391
  %props67 = getelementptr inbounds %struct.AVCodecDescriptor, %struct.AVCodecDescriptor* %92, i32 0, i32 4, !dbg !3392
  %93 = load i32, i32* %props67, align 8, !dbg !3392
  %and68 = and i32 %93, 131072, !dbg !3393
  %tobool69 = icmp ne i32 %and68, 0, !dbg !3393
  br i1 %tobool69, label %if.then70, label %if.end72, !dbg !3394

if.then70:                                        ; preds = %if.else65
  %94 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !3395
  %format71 = getelementptr inbounds %struct.AVSubtitle, %struct.AVSubtitle* %94, i32 0, i32 0, !dbg !3396
  store i16 1, i16* %format71, align 8, !dbg !3397
  br label %if.end72, !dbg !3395

if.end72:                                         ; preds = %if.then70, %if.else65
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %if.then64
  store i32 0, i32* %i, align 4, !dbg !3398
  br label %for.cond, !dbg !3400

for.cond:                                         ; preds = %for.inc, %if.end73
  %95 = load i32, i32* %i, align 4, !dbg !3401
  %96 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !3404
  %num_rects74 = getelementptr inbounds %struct.AVSubtitle, %struct.AVSubtitle* %96, i32 0, i32 3, !dbg !3405
  %97 = load i32, i32* %num_rects74, align 4, !dbg !3405
  %cmp75 = icmp ult i32 %95, %97, !dbg !3406
  br i1 %cmp75, label %for.body, label %for.end, !dbg !3407

for.body:                                         ; preds = %for.cond
  %98 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3408
  %sub_charenc_mode = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %98, i32 0, i32 172, !dbg !3411
  %99 = load i32, i32* %sub_charenc_mode, align 8, !dbg !3411
  %cmp77 = icmp ne i32 %99, 2, !dbg !3412
  br i1 %cmp77, label %land.lhs.true79, label %if.end89, !dbg !3413

land.lhs.true79:                                  ; preds = %for.body
  %100 = load i32, i32* %i, align 4, !dbg !3414
  %idxprom = sext i32 %100 to i64, !dbg !3415
  %101 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !3415
  %rects = getelementptr inbounds %struct.AVSubtitle, %struct.AVSubtitle* %101, i32 0, i32 4, !dbg !3416
  %102 = load %struct.AVSubtitleRect**, %struct.AVSubtitleRect*** %rects, align 8, !dbg !3416
  %arrayidx = getelementptr inbounds %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %102, i64 %idxprom, !dbg !3415
  %103 = load %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %arrayidx, align 8, !dbg !3415
  %ass = getelementptr inbounds %struct.AVSubtitleRect, %struct.AVSubtitleRect* %103, i32 0, i32 10, !dbg !3417
  %104 = load i8*, i8** %ass, align 8, !dbg !3417
  %tobool80 = icmp ne i8* %104, null, !dbg !3415
  br i1 %tobool80, label %land.lhs.true81, label %if.end89, !dbg !3418

land.lhs.true81:                                  ; preds = %land.lhs.true79
  %105 = load i32, i32* %i, align 4, !dbg !3419
  %idxprom82 = sext i32 %105 to i64, !dbg !3421
  %106 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !3421
  %rects83 = getelementptr inbounds %struct.AVSubtitle, %struct.AVSubtitle* %106, i32 0, i32 4, !dbg !3422
  %107 = load %struct.AVSubtitleRect**, %struct.AVSubtitleRect*** %rects83, align 8, !dbg !3422
  %arrayidx84 = getelementptr inbounds %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %107, i64 %idxprom82, !dbg !3421
  %108 = load %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %arrayidx84, align 8, !dbg !3421
  %ass85 = getelementptr inbounds %struct.AVSubtitleRect, %struct.AVSubtitleRect* %108, i32 0, i32 10, !dbg !3423
  %109 = load i8*, i8** %ass85, align 8, !dbg !3423
  %call86 = call i32 @utf8_check(i8* %109), !dbg !3424
  %tobool87 = icmp ne i32 %call86, 0, !dbg !3424
  br i1 %tobool87, label %if.end89, label %if.then88, !dbg !3425

if.then88:                                        ; preds = %land.lhs.true81
  %110 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3427
  %111 = bitcast %struct.AVCodecContext* %110 to i8*, !dbg !3427
  call void (i8*, i32, i8*, ...) @av_log(i8* %111, i32 16, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.8, i32 0, i32 0)), !dbg !3429
  %112 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !3430
  call void @avsubtitle_free(%struct.AVSubtitle* %112), !dbg !3431
  store i32 -1094995529, i32* %ret, align 4, !dbg !3432
  br label %for.end, !dbg !3433

if.end89:                                         ; preds = %land.lhs.true81, %land.lhs.true79, %for.body
  br label %for.inc, !dbg !3434

for.inc:                                          ; preds = %if.end89
  %113 = load i32, i32* %i, align 4, !dbg !3435
  %inc = add nsw i32 %113, 1, !dbg !3435
  store i32 %inc, i32* %i, align 4, !dbg !3435
  br label %for.cond, !dbg !3437, !llvm.loop !3438

for.end:                                          ; preds = %if.then88, %for.cond
  %114 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !3440
  %data90 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %114, i32 0, i32 3, !dbg !3442
  %115 = load i8*, i8** %data90, align 8, !dbg !3442
  %data91 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt_recoded, i32 0, i32 3, !dbg !3443
  %116 = load i8*, i8** %data91, align 8, !dbg !3443
  %cmp92 = icmp ne i8* %115, %116, !dbg !3444
  br i1 %cmp92, label %if.then94, label %if.end95, !dbg !3445

if.then94:                                        ; preds = %for.end
  %side_data = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt_recoded, i32 0, i32 7, !dbg !3446
  store %struct.AVPacketSideData* null, %struct.AVPacketSideData** %side_data, align 8, !dbg !3448
  %side_data_elems = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt_recoded, i32 0, i32 8, !dbg !3449
  store i32 0, i32* %side_data_elems, align 8, !dbg !3450
  call void @av_packet_unref(%struct.AVPacket* %pkt_recoded), !dbg !3451
  br label %if.end95, !dbg !3452

if.end95:                                         ; preds = %if.then94, %for.end
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then14
  %117 = load i32*, i32** %got_sub_ptr.addr, align 8, !dbg !3453
  %118 = load i32, i32* %117, align 4, !dbg !3455
  %tobool97 = icmp ne i32 %118, 0, !dbg !3455
  br i1 %tobool97, label %if.then98, label %if.end100, !dbg !3456

if.then98:                                        ; preds = %if.end96
  %119 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3457
  %frame_number = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %119, i32 0, i32 86, !dbg !3458
  %120 = load i32, i32* %frame_number, align 8, !dbg !3459
  %inc99 = add nsw i32 %120, 1, !dbg !3459
  store i32 %inc99, i32* %frame_number, align 8, !dbg !3459
  br label %if.end100, !dbg !3457

if.end100:                                        ; preds = %if.then98, %if.end96
  br label %if.end101, !dbg !3460

if.end101:                                        ; preds = %if.end100, %lor.lhs.false
  %121 = load i32, i32* %ret, align 4, !dbg !3461
  store i32 %121, i32* %retval, align 4, !dbg !3462
  br label %return, !dbg !3462

return:                                           ; preds = %if.end101, %if.then17, %if.then6, %if.then3, %if.then
  %122 = load i32, i32* %retval, align 4, !dbg !3463
  ret i32 %122, !dbg !3463
}

; Function Attrs: nounwind uwtable
define internal void @get_subtitle_defaults(%struct.AVSubtitle* %sub) #0 !dbg !3464 {
entry:
  %sub.addr = alloca %struct.AVSubtitle*, align 8
  store %struct.AVSubtitle* %sub, %struct.AVSubtitle** %sub.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVSubtitle** %sub.addr, metadata !3467, metadata !1805), !dbg !3468
  %0 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !3469
  %1 = bitcast %struct.AVSubtitle* %0 to i8*, !dbg !3470
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 32, i32 8, i1 false), !dbg !3470
  %2 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !3471
  %pts = getelementptr inbounds %struct.AVSubtitle, %struct.AVSubtitle* %2, i32 0, i32 5, !dbg !3472
  store i64 -9223372036854775808, i64* %pts, align 8, !dbg !3473
  ret void, !dbg !3474
}

; Function Attrs: nounwind uwtable
define internal i32 @recode_subtitle(%struct.AVCodecContext* %avctx, %struct.AVPacket* %outpkt, %struct.AVPacket* %inpkt) #0 !dbg !3475 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %outpkt.addr = alloca %struct.AVPacket*, align 8
  %inpkt.addr = alloca %struct.AVPacket*, align 8
  %cd = alloca i8*, align 8
  %ret = alloca i32, align 4
  %inb = alloca i8*, align 8
  %outb = alloca i8*, align 8
  %inl = alloca i64, align 8
  %outl = alloca i64, align 8
  %tmp = alloca %struct.AVPacket, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3478, metadata !1805), !dbg !3479
  store %struct.AVPacket* %outpkt, %struct.AVPacket** %outpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %outpkt.addr, metadata !3480, metadata !1805), !dbg !3481
  store %struct.AVPacket* %inpkt, %struct.AVPacket** %inpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %inpkt.addr, metadata !3482, metadata !1805), !dbg !3483
  call void @llvm.dbg.declare(metadata i8** %cd, metadata !3484, metadata !1805), !dbg !3485
  store i8* inttoptr (i64 -1 to i8*), i8** %cd, align 8, !dbg !3485
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3486, metadata !1805), !dbg !3487
  store i32 0, i32* %ret, align 4, !dbg !3487
  call void @llvm.dbg.declare(metadata i8** %inb, metadata !3488, metadata !1805), !dbg !3489
  call void @llvm.dbg.declare(metadata i8** %outb, metadata !3490, metadata !1805), !dbg !3491
  call void @llvm.dbg.declare(metadata i64* %inl, metadata !3492, metadata !1805), !dbg !3493
  call void @llvm.dbg.declare(metadata i64* %outl, metadata !3494, metadata !1805), !dbg !3495
  call void @llvm.dbg.declare(metadata %struct.AVPacket* %tmp, metadata !3496, metadata !1805), !dbg !3497
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3498
  %sub_charenc_mode = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 172, !dbg !3500
  %1 = load i32, i32* %sub_charenc_mode, align 8, !dbg !3500
  %cmp = icmp ne i32 %1, 1, !dbg !3501
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3502

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.AVPacket*, %struct.AVPacket** %inpkt.addr, align 8, !dbg !3503
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i32 0, i32 4, !dbg !3505
  %3 = load i32, i32* %size, align 8, !dbg !3505
  %cmp1 = icmp eq i32 %3, 0, !dbg !3506
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3507

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !3508
  br label %return, !dbg !3508

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3509
  %sub_charenc = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 171, !dbg !3510
  %5 = load i8*, i8** %sub_charenc, align 8, !dbg !3510
  %call = call i8* @iconv_open(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i32 0, i32 0), i8* %5), !dbg !3511
  store i8* %call, i8** %cd, align 8, !dbg !3512
  br label %do.body, !dbg !3513, !llvm.loop !3514

do.body:                                          ; preds = %if.end
  %6 = load i8*, i8** %cd, align 8, !dbg !3515
  %cmp2 = icmp ne i8* %6, inttoptr (i64 -1 to i8*), !dbg !3519
  br i1 %cmp2, label %if.end4, label %if.then3, !dbg !3520

if.then3:                                         ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i32 0, i32 0), i32 891), !dbg !3521
  call void @abort() #9, !dbg !3524
  unreachable, !dbg !3526

if.end4:                                          ; preds = %do.body
  br label %do.end, !dbg !3527

do.end:                                           ; preds = %if.end4
  %7 = load %struct.AVPacket*, %struct.AVPacket** %inpkt.addr, align 8, !dbg !3529
  %data = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %7, i32 0, i32 3, !dbg !3530
  %8 = load i8*, i8** %data, align 8, !dbg !3530
  store i8* %8, i8** %inb, align 8, !dbg !3531
  %9 = load %struct.AVPacket*, %struct.AVPacket** %inpkt.addr, align 8, !dbg !3532
  %size5 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %9, i32 0, i32 4, !dbg !3533
  %10 = load i32, i32* %size5, align 8, !dbg !3533
  %conv = sext i32 %10 to i64, !dbg !3532
  store i64 %conv, i64* %inl, align 8, !dbg !3534
  %11 = load i64, i64* %inl, align 8, !dbg !3535
  %cmp6 = icmp uge i64 %11, 536870847, !dbg !3537
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !3538

if.then8:                                         ; preds = %do.end
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3539
  %13 = bitcast %struct.AVCodecContext* %12 to i8*, !dbg !3539
  call void (i8*, i32, i8*, ...) @av_log(i8* %13, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.51, i32 0, i32 0)), !dbg !3541
  store i32 -12, i32* %ret, align 4, !dbg !3542
  br label %end, !dbg !3543

if.end9:                                          ; preds = %do.end
  %14 = load i64, i64* %inl, align 8, !dbg !3544
  %mul = mul i64 %14, 4, !dbg !3545
  %conv10 = trunc i64 %mul to i32, !dbg !3544
  %call11 = call i32 @av_new_packet(%struct.AVPacket* %tmp, i32 %conv10), !dbg !3546
  store i32 %call11, i32* %ret, align 4, !dbg !3547
  %15 = load i32, i32* %ret, align 4, !dbg !3548
  %cmp12 = icmp slt i32 %15, 0, !dbg !3550
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !3551

if.then14:                                        ; preds = %if.end9
  br label %end, !dbg !3552

if.end15:                                         ; preds = %if.end9
  %buf = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %tmp, i32 0, i32 0, !dbg !3553
  %16 = load %struct.AVBufferRef*, %struct.AVBufferRef** %buf, align 8, !dbg !3553
  %17 = load %struct.AVPacket*, %struct.AVPacket** %outpkt.addr, align 8, !dbg !3554
  %buf16 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %17, i32 0, i32 0, !dbg !3555
  store %struct.AVBufferRef* %16, %struct.AVBufferRef** %buf16, align 8, !dbg !3556
  %data17 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %tmp, i32 0, i32 3, !dbg !3557
  %18 = load i8*, i8** %data17, align 8, !dbg !3557
  %19 = load %struct.AVPacket*, %struct.AVPacket** %outpkt.addr, align 8, !dbg !3558
  %data18 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %19, i32 0, i32 3, !dbg !3559
  store i8* %18, i8** %data18, align 8, !dbg !3560
  %size19 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %tmp, i32 0, i32 4, !dbg !3561
  %20 = load i32, i32* %size19, align 8, !dbg !3561
  %21 = load %struct.AVPacket*, %struct.AVPacket** %outpkt.addr, align 8, !dbg !3562
  %size20 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %21, i32 0, i32 4, !dbg !3563
  store i32 %20, i32* %size20, align 8, !dbg !3564
  %22 = load %struct.AVPacket*, %struct.AVPacket** %outpkt.addr, align 8, !dbg !3565
  %data21 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %22, i32 0, i32 3, !dbg !3566
  %23 = load i8*, i8** %data21, align 8, !dbg !3566
  store i8* %23, i8** %outb, align 8, !dbg !3567
  %24 = load %struct.AVPacket*, %struct.AVPacket** %outpkt.addr, align 8, !dbg !3568
  %size22 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %24, i32 0, i32 4, !dbg !3569
  %25 = load i32, i32* %size22, align 8, !dbg !3569
  %conv23 = sext i32 %25 to i64, !dbg !3568
  store i64 %conv23, i64* %outl, align 8, !dbg !3570
  %26 = load i8*, i8** %cd, align 8, !dbg !3571
  %call24 = call i64 @iconv(i8* %26, i8** %inb, i64* %inl, i8** %outb, i64* %outl), !dbg !3573
  %cmp25 = icmp eq i64 %call24, -1, !dbg !3574
  br i1 %cmp25, label %if.then39, label %lor.lhs.false27, !dbg !3575

lor.lhs.false27:                                  ; preds = %if.end15
  %27 = load i8*, i8** %cd, align 8, !dbg !3576
  %call28 = call i64 @iconv(i8* %27, i8** null, i64* null, i8** %outb, i64* %outl), !dbg !3577
  %cmp29 = icmp eq i64 %call28, -1, !dbg !3578
  br i1 %cmp29, label %if.then39, label %lor.lhs.false31, !dbg !3579

lor.lhs.false31:                                  ; preds = %lor.lhs.false27
  %28 = load i64, i64* %outl, align 8, !dbg !3580
  %29 = load %struct.AVPacket*, %struct.AVPacket** %outpkt.addr, align 8, !dbg !3581
  %size32 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %29, i32 0, i32 4, !dbg !3582
  %30 = load i32, i32* %size32, align 8, !dbg !3582
  %conv33 = sext i32 %30 to i64, !dbg !3581
  %cmp34 = icmp uge i64 %28, %conv33, !dbg !3583
  br i1 %cmp34, label %if.then39, label %lor.lhs.false36, !dbg !3584

lor.lhs.false36:                                  ; preds = %lor.lhs.false31
  %31 = load i64, i64* %inl, align 8, !dbg !3585
  %cmp37 = icmp ne i64 %31, 0, !dbg !3587
  br i1 %cmp37, label %if.then39, label %if.end47, !dbg !3588

if.then39:                                        ; preds = %lor.lhs.false36, %lor.lhs.false31, %lor.lhs.false27, %if.end15
  %call40 = call i32* @__errno_location() #1, !dbg !3590
  %32 = load i32, i32* %call40, align 4, !dbg !3592
  %sub = sub nsw i32 0, %32, !dbg !3593
  %cmp41 = icmp sgt i32 %sub, -1, !dbg !3593
  br i1 %cmp41, label %cond.true, label %cond.false, !dbg !3590

cond.true:                                        ; preds = %if.then39
  br label %cond.end, !dbg !3594

cond.false:                                       ; preds = %if.then39
  %call43 = call i32* @__errno_location() #1, !dbg !3596
  %33 = load i32, i32* %call43, align 4, !dbg !3598
  %sub44 = sub nsw i32 0, %33, !dbg !3599
  br label %cond.end, !dbg !3596

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ -1, %cond.true ], [ %sub44, %cond.false ], !dbg !3600
  store i32 %cond, i32* %ret, align 4, !dbg !3602
  %34 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3603
  %35 = bitcast %struct.AVCodecContext* %34 to i8*, !dbg !3603
  %36 = load %struct.AVPacket*, %struct.AVPacket** %inpkt.addr, align 8, !dbg !3604
  %data45 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %36, i32 0, i32 3, !dbg !3605
  %37 = load i8*, i8** %data45, align 8, !dbg !3605
  %38 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3606
  %sub_charenc46 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %38, i32 0, i32 171, !dbg !3607
  %39 = load i8*, i8** %sub_charenc46, align 8, !dbg !3607
  call void (i8*, i32, i8*, ...) @av_log(i8* %35, i32 16, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.52, i32 0, i32 0), i8* %37, i8* %39), !dbg !3608
  call void @av_packet_unref(%struct.AVPacket* %tmp), !dbg !3609
  br label %end, !dbg !3610

if.end47:                                         ; preds = %lor.lhs.false36
  %40 = load i64, i64* %outl, align 8, !dbg !3611
  %41 = load %struct.AVPacket*, %struct.AVPacket** %outpkt.addr, align 8, !dbg !3612
  %size48 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %41, i32 0, i32 4, !dbg !3613
  %42 = load i32, i32* %size48, align 8, !dbg !3614
  %conv49 = sext i32 %42 to i64, !dbg !3614
  %sub50 = sub i64 %conv49, %40, !dbg !3614
  %conv51 = trunc i64 %sub50 to i32, !dbg !3614
  store i32 %conv51, i32* %size48, align 8, !dbg !3614
  %43 = load %struct.AVPacket*, %struct.AVPacket** %outpkt.addr, align 8, !dbg !3615
  %data52 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %43, i32 0, i32 3, !dbg !3616
  %44 = load i8*, i8** %data52, align 8, !dbg !3616
  %45 = load %struct.AVPacket*, %struct.AVPacket** %outpkt.addr, align 8, !dbg !3617
  %size53 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %45, i32 0, i32 4, !dbg !3618
  %46 = load i32, i32* %size53, align 8, !dbg !3618
  %idx.ext = sext i32 %46 to i64, !dbg !3619
  %add.ptr = getelementptr inbounds i8, i8* %44, i64 %idx.ext, !dbg !3619
  %47 = load i64, i64* %outl, align 8, !dbg !3620
  call void @llvm.memset.p0i8.i64(i8* %add.ptr, i8 0, i64 %47, i32 1, i1 false), !dbg !3621
  br label %end, !dbg !3621

end:                                              ; preds = %if.end47, %cond.end, %if.then14, %if.then8
  %48 = load i8*, i8** %cd, align 8, !dbg !3622
  %cmp54 = icmp ne i8* %48, inttoptr (i64 -1 to i8*), !dbg !3624
  br i1 %cmp54, label %if.then56, label %if.end58, !dbg !3625

if.then56:                                        ; preds = %end
  %49 = load i8*, i8** %cd, align 8, !dbg !3626
  %call57 = call i32 @iconv_close(i8* %49), !dbg !3627
  br label %if.end58, !dbg !3627

if.end58:                                         ; preds = %if.then56, %end
  %50 = load i32, i32* %ret, align 4, !dbg !3628
  store i32 %50, i32* %retval, align 4, !dbg !3629
  br label %return, !dbg !3629

return:                                           ; preds = %if.end58, %if.then
  %51 = load i32, i32* %retval, align 4, !dbg !3630
  ret i32 %51, !dbg !3630
}

; Function Attrs: nounwind readnone
declare i64 @av_rescale_q(i64, i64, i64) #4

; Function Attrs: nounwind uwtable
define internal i32 @convert_sub_to_old_ass_form(%struct.AVSubtitle* %sub, %struct.AVPacket* %pkt, i64 %tb.coerce) #0 !dbg !3631 {
entry:
  %retval = alloca i32, align 4
  %tb = alloca %struct.AVRational, align 4
  %sub.addr = alloca %struct.AVSubtitle*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %i = alloca i32, align 4
  %buf = alloca %struct.AVBPrint, align 8
  %final_dialog = alloca i8*, align 8
  %dialog = alloca i8*, align 8
  %rect = alloca %struct.AVSubtitleRect*, align 8
  %ts_start = alloca i32, align 4
  %ts_duration = alloca i32, align 4
  %layer = alloca i64, align 8
  %agg.tmp = alloca %struct.AVRational, align 4
  %agg.tmp20 = alloca %struct.AVRational, align 4
  %0 = bitcast %struct.AVRational* %tb to i64*
  store i64 %tb.coerce, i64* %0, align 4
  store %struct.AVSubtitle* %sub, %struct.AVSubtitle** %sub.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVSubtitle** %sub.addr, metadata !3634, metadata !1805), !dbg !3635
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !3636, metadata !1805), !dbg !3637
  call void @llvm.dbg.declare(metadata %struct.AVRational* %tb, metadata !3638, metadata !1805), !dbg !3639
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3640, metadata !1805), !dbg !3641
  call void @llvm.dbg.declare(metadata %struct.AVBPrint* %buf, metadata !3642, metadata !1805), !dbg !3659
  call void @av_bprint_init(%struct.AVBPrint* %buf, i32 0, i32 -1), !dbg !3660
  store i32 0, i32* %i, align 4, !dbg !3661
  br label %for.cond, !dbg !3663

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !3664
  %2 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !3667
  %num_rects = getelementptr inbounds %struct.AVSubtitle, %struct.AVSubtitle* %2, i32 0, i32 3, !dbg !3668
  %3 = load i32, i32* %num_rects, align 4, !dbg !3668
  %cmp = icmp ult i32 %1, %3, !dbg !3669
  br i1 %cmp, label %for.body, label %for.end, !dbg !3670

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %final_dialog, metadata !3671, metadata !1805), !dbg !3673
  call void @llvm.dbg.declare(metadata i8** %dialog, metadata !3674, metadata !1805), !dbg !3675
  call void @llvm.dbg.declare(metadata %struct.AVSubtitleRect** %rect, metadata !3676, metadata !1805), !dbg !3677
  %4 = load i32, i32* %i, align 4, !dbg !3678
  %idxprom = sext i32 %4 to i64, !dbg !3679
  %5 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !3679
  %rects = getelementptr inbounds %struct.AVSubtitle, %struct.AVSubtitle* %5, i32 0, i32 4, !dbg !3680
  %6 = load %struct.AVSubtitleRect**, %struct.AVSubtitleRect*** %rects, align 8, !dbg !3680
  %arrayidx = getelementptr inbounds %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %6, i64 %idxprom, !dbg !3679
  %7 = load %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %arrayidx, align 8, !dbg !3679
  store %struct.AVSubtitleRect* %7, %struct.AVSubtitleRect** %rect, align 8, !dbg !3677
  call void @llvm.dbg.declare(metadata i32* %ts_start, metadata !3681, metadata !1805), !dbg !3682
  call void @llvm.dbg.declare(metadata i32* %ts_duration, metadata !3683, metadata !1805), !dbg !3684
  store i32 -1, i32* %ts_duration, align 4, !dbg !3684
  call void @llvm.dbg.declare(metadata i64* %layer, metadata !3685, metadata !1805), !dbg !3686
  %8 = load %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %rect, align 8, !dbg !3687
  %type = getelementptr inbounds %struct.AVSubtitleRect, %struct.AVSubtitleRect* %8, i32 0, i32 8, !dbg !3689
  %9 = load i32, i32* %type, align 8, !dbg !3689
  %cmp1 = icmp ne i32 %9, 3, !dbg !3690
  br i1 %cmp1, label %if.then, label %lor.lhs.false, !dbg !3691

lor.lhs.false:                                    ; preds = %for.body
  %10 = load %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %rect, align 8, !dbg !3692
  %ass = getelementptr inbounds %struct.AVSubtitleRect, %struct.AVSubtitleRect* %10, i32 0, i32 10, !dbg !3694
  %11 = load i8*, i8** %ass, align 8, !dbg !3694
  %call = call i32 @strncmp(i8* %11, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.53, i32 0, i32 0), i64 10) #10, !dbg !3695
  %tobool = icmp ne i32 %call, 0, !dbg !3695
  br i1 %tobool, label %if.end, label %if.then, !dbg !3696

if.then:                                          ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !3697

if.end:                                           ; preds = %lor.lhs.false
  call void @av_bprint_clear(%struct.AVBPrint* %buf), !dbg !3698
  %12 = load %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %rect, align 8, !dbg !3699
  %ass2 = getelementptr inbounds %struct.AVSubtitleRect, %struct.AVSubtitleRect* %12, i32 0, i32 10, !dbg !3700
  %13 = load i8*, i8** %ass2, align 8, !dbg !3700
  %call3 = call i8* @strchr(i8* %13, i32 44) #10, !dbg !3701
  store i8* %call3, i8** %dialog, align 8, !dbg !3702
  %14 = load i8*, i8** %dialog, align 8, !dbg !3703
  %tobool4 = icmp ne i8* %14, null, !dbg !3703
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !3705

if.then5:                                         ; preds = %if.end
  br label %for.inc, !dbg !3706

if.end6:                                          ; preds = %if.end
  %15 = load i8*, i8** %dialog, align 8, !dbg !3707
  %incdec.ptr = getelementptr inbounds i8, i8* %15, i32 1, !dbg !3707
  store i8* %incdec.ptr, i8** %dialog, align 8, !dbg !3707
  %16 = load i8*, i8** %dialog, align 8, !dbg !3708
  %call7 = call i64 @strtol(i8* %16, i8** %dialog, i32 10) #11, !dbg !3709
  store i64 %call7, i64* %layer, align 8, !dbg !3710
  %17 = load i8*, i8** %dialog, align 8, !dbg !3711
  %18 = load i8, i8* %17, align 1, !dbg !3713
  %conv = sext i8 %18 to i32, !dbg !3713
  %cmp8 = icmp ne i32 %conv, 44, !dbg !3714
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !3715

if.then10:                                        ; preds = %if.end6
  br label %for.inc, !dbg !3716

if.end11:                                         ; preds = %if.end6
  %19 = load i8*, i8** %dialog, align 8, !dbg !3717
  %incdec.ptr12 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !3717
  store i8* %incdec.ptr12, i8** %dialog, align 8, !dbg !3717
  %20 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3718
  %pts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %20, i32 0, i32 1, !dbg !3719
  %21 = load i64, i64* %pts, align 8, !dbg !3719
  %call13 = call i64 @av_make_q(i32 1, i32 100), !dbg !3720
  %22 = bitcast %struct.AVRational* %agg.tmp to i64*, !dbg !3720
  store i64 %call13, i64* %22, align 4, !dbg !3720
  %23 = bitcast %struct.AVRational* %tb to i64*, !dbg !3721
  %24 = load i64, i64* %23, align 4, !dbg !3721
  %25 = bitcast %struct.AVRational* %agg.tmp to i64*, !dbg !3721
  %26 = load i64, i64* %25, align 4, !dbg !3721
  %call14 = call i64 @av_rescale_q(i64 %21, i64 %24, i64 %26) #1, !dbg !3722
  %conv15 = trunc i64 %call14 to i32, !dbg !3721
  store i32 %conv15, i32* %ts_start, align 4, !dbg !3724
  %27 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3725
  %duration = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %27, i32 0, i32 9, !dbg !3727
  %28 = load i64, i64* %duration, align 8, !dbg !3727
  %cmp16 = icmp ne i64 %28, -1, !dbg !3728
  br i1 %cmp16, label %if.then18, label %if.end24, !dbg !3729

if.then18:                                        ; preds = %if.end11
  %29 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3730
  %duration19 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %29, i32 0, i32 9, !dbg !3731
  %30 = load i64, i64* %duration19, align 8, !dbg !3731
  %call21 = call i64 @av_make_q(i32 1, i32 100), !dbg !3732
  %31 = bitcast %struct.AVRational* %agg.tmp20 to i64*, !dbg !3732
  store i64 %call21, i64* %31, align 4, !dbg !3732
  %32 = bitcast %struct.AVRational* %tb to i64*, !dbg !3733
  %33 = load i64, i64* %32, align 4, !dbg !3733
  %34 = bitcast %struct.AVRational* %agg.tmp20 to i64*, !dbg !3733
  %35 = load i64, i64* %34, align 4, !dbg !3733
  %call22 = call i64 @av_rescale_q(i64 %30, i64 %33, i64 %35) #1, !dbg !3734
  %conv23 = trunc i64 %call22 to i32, !dbg !3733
  store i32 %conv23, i32* %ts_duration, align 4, !dbg !3736
  br label %if.end24, !dbg !3737

if.end24:                                         ; preds = %if.then18, %if.end11
  %36 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !3738
  %end_display_time = getelementptr inbounds %struct.AVSubtitle, %struct.AVSubtitle* %36, i32 0, i32 2, !dbg !3739
  %37 = load i32, i32* %end_display_time, align 8, !dbg !3739
  %38 = load i32, i32* %ts_duration, align 4, !dbg !3740
  %mul = mul nsw i32 10, %38, !dbg !3741
  %cmp25 = icmp ugt i32 %37, %mul, !dbg !3742
  br i1 %cmp25, label %cond.true, label %cond.false, !dbg !3743

cond.true:                                        ; preds = %if.end24
  %39 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !3744
  %end_display_time27 = getelementptr inbounds %struct.AVSubtitle, %struct.AVSubtitle* %39, i32 0, i32 2, !dbg !3745
  %40 = load i32, i32* %end_display_time27, align 8, !dbg !3745
  br label %cond.end, !dbg !3746

cond.false:                                       ; preds = %if.end24
  %41 = load i32, i32* %ts_duration, align 4, !dbg !3747
  %mul28 = mul nsw i32 10, %41, !dbg !3749
  br label %cond.end, !dbg !3750

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %40, %cond.true ], [ %mul28, %cond.false ], !dbg !3751
  %42 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !3753
  %end_display_time29 = getelementptr inbounds %struct.AVSubtitle, %struct.AVSubtitle* %42, i32 0, i32 2, !dbg !3754
  store i32 %cond, i32* %end_display_time29, align 8, !dbg !3755
  %43 = load i64, i64* %layer, align 8, !dbg !3756
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %buf, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.54, i32 0, i32 0), i64 %43), !dbg !3757
  %44 = load i32, i32* %ts_start, align 4, !dbg !3758
  call void @insert_ts(%struct.AVBPrint* %buf, i32 %44), !dbg !3759
  %45 = load i32, i32* %ts_duration, align 4, !dbg !3760
  %cmp30 = icmp eq i32 %45, -1, !dbg !3761
  br i1 %cmp30, label %cond.true32, label %cond.false33, !dbg !3760

cond.true32:                                      ; preds = %cond.end
  br label %cond.end34, !dbg !3762

cond.false33:                                     ; preds = %cond.end
  %46 = load i32, i32* %ts_start, align 4, !dbg !3763
  %47 = load i32, i32* %ts_duration, align 4, !dbg !3764
  %add = add nsw i32 %46, %47, !dbg !3765
  br label %cond.end34, !dbg !3766

cond.end34:                                       ; preds = %cond.false33, %cond.true32
  %cond35 = phi i32 [ -1, %cond.true32 ], [ %add, %cond.false33 ], !dbg !3767
  call void @insert_ts(%struct.AVBPrint* %buf, i32 %cond35), !dbg !3768
  %48 = load i8*, i8** %dialog, align 8, !dbg !3769
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %buf, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i32 0, i32 0), i8* %48), !dbg !3770
  %str = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %buf, i32 0, i32 0, !dbg !3771
  %49 = load i8*, i8** %str, align 8, !dbg !3771
  %call36 = call noalias i8* @av_strdup(i8* %49), !dbg !3772
  store i8* %call36, i8** %final_dialog, align 8, !dbg !3773
  %call37 = call i32 @av_bprint_is_complete(%struct.AVBPrint* %buf), !dbg !3774
  %tobool38 = icmp ne i32 %call37, 0, !dbg !3774
  br i1 %tobool38, label %lor.lhs.false39, label %if.then41, !dbg !3776

lor.lhs.false39:                                  ; preds = %cond.end34
  %50 = load i8*, i8** %final_dialog, align 8, !dbg !3777
  %tobool40 = icmp ne i8* %50, null, !dbg !3777
  br i1 %tobool40, label %if.end43, label %if.then41, !dbg !3779

if.then41:                                        ; preds = %lor.lhs.false39, %cond.end34
  %51 = bitcast i8** %final_dialog to i8*, !dbg !3780
  call void @av_freep(i8* %51), !dbg !3782
  %call42 = call i32 @av_bprint_finalize(%struct.AVBPrint* %buf, i8** null), !dbg !3783
  store i32 -12, i32* %retval, align 4, !dbg !3784
  br label %return, !dbg !3784

if.end43:                                         ; preds = %lor.lhs.false39
  %52 = load %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %rect, align 8, !dbg !3785
  %ass44 = getelementptr inbounds %struct.AVSubtitleRect, %struct.AVSubtitleRect* %52, i32 0, i32 10, !dbg !3786
  %53 = bitcast i8** %ass44 to i8*, !dbg !3787
  call void @av_freep(i8* %53), !dbg !3788
  %54 = load i8*, i8** %final_dialog, align 8, !dbg !3789
  %55 = load %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %rect, align 8, !dbg !3790
  %ass45 = getelementptr inbounds %struct.AVSubtitleRect, %struct.AVSubtitleRect* %55, i32 0, i32 10, !dbg !3791
  store i8* %54, i8** %ass45, align 8, !dbg !3792
  br label %for.inc, !dbg !3793

for.inc:                                          ; preds = %if.end43, %if.then10, %if.then5, %if.then
  %56 = load i32, i32* %i, align 4, !dbg !3794
  %inc = add nsw i32 %56, 1, !dbg !3794
  store i32 %inc, i32* %i, align 4, !dbg !3794
  br label %for.cond, !dbg !3796, !llvm.loop !3797

for.end:                                          ; preds = %for.cond
  %call46 = call i32 @av_bprint_finalize(%struct.AVBPrint* %buf, i8** null), !dbg !3799
  store i32 0, i32* %retval, align 4, !dbg !3800
  br label %return, !dbg !3800

return:                                           ; preds = %for.end, %if.then41
  %57 = load i32, i32* %retval, align 4, !dbg !3801
  ret i32 %57, !dbg !3801
}

; Function Attrs: nounwind uwtable
define internal i32 @utf8_check(i8* %str) #0 !dbg !3802 {
entry:
  %retval = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %byte = alloca i8*, align 8
  %codepoint = alloca i32, align 4
  %min = alloca i32, align 4
  %top = alloca i32, align 4
  %tmp = alloca i32, align 4
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !3805, metadata !1805), !dbg !3806
  call void @llvm.dbg.declare(metadata i8** %byte, metadata !3807, metadata !1805), !dbg !3808
  call void @llvm.dbg.declare(metadata i32* %codepoint, metadata !3809, metadata !1805), !dbg !3810
  call void @llvm.dbg.declare(metadata i32* %min, metadata !3811, metadata !1805), !dbg !3812
  br label %while.cond, !dbg !3813

while.cond:                                       ; preds = %if.end49, %entry
  %0 = load i8*, i8** %str.addr, align 8, !dbg !3814
  %1 = load i8, i8* %0, align 1, !dbg !3816
  %tobool = icmp ne i8 %1, 0, !dbg !3817
  br i1 %tobool, label %while.body, label %while.end50, !dbg !3817

while.body:                                       ; preds = %while.cond
  %2 = load i8*, i8** %str.addr, align 8, !dbg !3818
  store i8* %2, i8** %byte, align 8, !dbg !3820
  %3 = load i8*, i8** %byte, align 8, !dbg !3821
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3821
  store i8* %incdec.ptr, i8** %byte, align 8, !dbg !3821
  %4 = load i8, i8* %3, align 1, !dbg !3822
  %conv = zext i8 %4 to i32, !dbg !3823
  store i32 %conv, i32* %codepoint, align 4, !dbg !3824
  call void @llvm.dbg.declare(metadata i32* %top, metadata !3825, metadata !1805), !dbg !3827
  %5 = load i32, i32* %codepoint, align 4, !dbg !3828
  %and = and i32 %5, 128, !dbg !3829
  %shr = lshr i32 %and, 1, !dbg !3830
  store i32 %shr, i32* %top, align 4, !dbg !3827
  %6 = load i32, i32* %codepoint, align 4, !dbg !3831
  %and1 = and i32 %6, 192, !dbg !3833
  %cmp = icmp eq i32 %and1, 128, !dbg !3834
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3835

lor.lhs.false:                                    ; preds = %while.body
  %7 = load i32, i32* %codepoint, align 4, !dbg !3836
  %cmp3 = icmp uge i32 %7, 254, !dbg !3838
  br i1 %cmp3, label %if.then, label %if.end, !dbg !3839

if.then:                                          ; preds = %lor.lhs.false, %while.body
  store i32 0, i32* %retval, align 4, !dbg !3840
  br label %return, !dbg !3840

if.end:                                           ; preds = %lor.lhs.false
  br label %while.cond5, !dbg !3842

while.cond5:                                      ; preds = %if.end14, %if.end
  %8 = load i32, i32* %codepoint, align 4, !dbg !3844
  %9 = load i32, i32* %top, align 4, !dbg !3846
  %and6 = and i32 %8, %9, !dbg !3847
  %tobool7 = icmp ne i32 %and6, 0, !dbg !3848
  br i1 %tobool7, label %while.body8, label %while.end, !dbg !3848

while.body8:                                      ; preds = %while.cond5
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !3849, metadata !1805), !dbg !3851
  %10 = load i8*, i8** %byte, align 8, !dbg !3852
  %incdec.ptr9 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !3852
  store i8* %incdec.ptr9, i8** %byte, align 8, !dbg !3852
  %11 = load i8, i8* %10, align 1, !dbg !3854
  %conv10 = zext i8 %11 to i32, !dbg !3855
  %sub = sub nsw i32 %conv10, 128, !dbg !3856
  store i32 %sub, i32* %tmp, align 4, !dbg !3857
  %12 = load i32, i32* %tmp, align 4, !dbg !3858
  %shr11 = ashr i32 %12, 6, !dbg !3859
  %tobool12 = icmp ne i32 %shr11, 0, !dbg !3859
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !3858

if.then13:                                        ; preds = %while.body8
  store i32 0, i32* %retval, align 4, !dbg !3860
  br label %return, !dbg !3860

if.end14:                                         ; preds = %while.body8
  %13 = load i32, i32* %codepoint, align 4, !dbg !3863
  %shl = shl i32 %13, 6, !dbg !3865
  %14 = load i32, i32* %tmp, align 4, !dbg !3866
  %add = add i32 %shl, %14, !dbg !3867
  store i32 %add, i32* %codepoint, align 4, !dbg !3868
  %15 = load i32, i32* %top, align 4, !dbg !3869
  %shl15 = shl i32 %15, 5, !dbg !3869
  store i32 %shl15, i32* %top, align 4, !dbg !3869
  br label %while.cond5, !dbg !3870, !llvm.loop !3871

while.end:                                        ; preds = %while.cond5
  %16 = load i32, i32* %top, align 4, !dbg !3873
  %shl16 = shl i32 %16, 1, !dbg !3875
  %sub17 = sub i32 %shl16, 1, !dbg !3876
  %17 = load i32, i32* %codepoint, align 4, !dbg !3877
  %and18 = and i32 %17, %sub17, !dbg !3877
  store i32 %and18, i32* %codepoint, align 4, !dbg !3877
  %18 = load i8*, i8** %byte, align 8, !dbg !3878
  %19 = load i8*, i8** %str.addr, align 8, !dbg !3879
  %sub.ptr.lhs.cast = ptrtoint i8* %18 to i64, !dbg !3880
  %sub.ptr.rhs.cast = ptrtoint i8* %19 to i64, !dbg !3880
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3880
  %cmp19 = icmp eq i64 %sub.ptr.sub, 1, !dbg !3881
  br i1 %cmp19, label %cond.true, label %cond.false, !dbg !3878

cond.true:                                        ; preds = %while.end
  br label %cond.end33, !dbg !3882

cond.false:                                       ; preds = %while.end
  %20 = load i8*, i8** %byte, align 8, !dbg !3884
  %21 = load i8*, i8** %str.addr, align 8, !dbg !3886
  %sub.ptr.lhs.cast21 = ptrtoint i8* %20 to i64, !dbg !3887
  %sub.ptr.rhs.cast22 = ptrtoint i8* %21 to i64, !dbg !3887
  %sub.ptr.sub23 = sub i64 %sub.ptr.lhs.cast21, %sub.ptr.rhs.cast22, !dbg !3887
  %cmp24 = icmp eq i64 %sub.ptr.sub23, 2, !dbg !3888
  br i1 %cmp24, label %cond.true26, label %cond.false27, !dbg !3884

cond.true26:                                      ; preds = %cond.false
  br label %cond.end, !dbg !3889

cond.false27:                                     ; preds = %cond.false
  %22 = load i8*, i8** %byte, align 8, !dbg !3891
  %23 = load i8*, i8** %str.addr, align 8, !dbg !3892
  %sub.ptr.lhs.cast28 = ptrtoint i8* %22 to i64, !dbg !3893
  %sub.ptr.rhs.cast29 = ptrtoint i8* %23 to i64, !dbg !3893
  %sub.ptr.sub30 = sub i64 %sub.ptr.lhs.cast28, %sub.ptr.rhs.cast29, !dbg !3893
  %mul = mul nsw i64 5, %sub.ptr.sub30, !dbg !3894
  %sub31 = sub nsw i64 %mul, 4, !dbg !3895
  %sh_prom = trunc i64 %sub31 to i32, !dbg !3896
  %shl32 = shl i32 1, %sh_prom, !dbg !3896
  br label %cond.end, !dbg !3897

cond.end:                                         ; preds = %cond.false27, %cond.true26
  %cond = phi i32 [ 128, %cond.true26 ], [ %shl32, %cond.false27 ], !dbg !3899
  br label %cond.end33, !dbg !3901

cond.end33:                                       ; preds = %cond.end, %cond.true
  %cond34 = phi i32 [ 0, %cond.true ], [ %cond, %cond.end ], !dbg !3902
  store i32 %cond34, i32* %min, align 4, !dbg !3904
  %24 = load i32, i32* %codepoint, align 4, !dbg !3905
  %25 = load i32, i32* %min, align 4, !dbg !3907
  %cmp35 = icmp ult i32 %24, %25, !dbg !3908
  br i1 %cmp35, label %if.then48, label %lor.lhs.false37, !dbg !3909

lor.lhs.false37:                                  ; preds = %cond.end33
  %26 = load i32, i32* %codepoint, align 4, !dbg !3910
  %cmp38 = icmp uge i32 %26, 1114112, !dbg !3912
  br i1 %cmp38, label %if.then48, label %lor.lhs.false40, !dbg !3913

lor.lhs.false40:                                  ; preds = %lor.lhs.false37
  %27 = load i32, i32* %codepoint, align 4, !dbg !3914
  %cmp41 = icmp eq i32 %27, 65534, !dbg !3915
  br i1 %cmp41, label %if.then48, label %lor.lhs.false43, !dbg !3916

lor.lhs.false43:                                  ; preds = %lor.lhs.false40
  %28 = load i32, i32* %codepoint, align 4, !dbg !3917
  %cmp44 = icmp uge i32 %28, 55296, !dbg !3918
  br i1 %cmp44, label %land.lhs.true, label %if.end49, !dbg !3919

land.lhs.true:                                    ; preds = %lor.lhs.false43
  %29 = load i32, i32* %codepoint, align 4, !dbg !3920
  %cmp46 = icmp ule i32 %29, 57343, !dbg !3921
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !3922

if.then48:                                        ; preds = %land.lhs.true, %lor.lhs.false40, %lor.lhs.false37, %cond.end33
  store i32 0, i32* %retval, align 4, !dbg !3923
  br label %return, !dbg !3923

if.end49:                                         ; preds = %land.lhs.true, %lor.lhs.false43
  %30 = load i8*, i8** %byte, align 8, !dbg !3924
  store i8* %30, i8** %str.addr, align 8, !dbg !3925
  br label %while.cond, !dbg !3926, !llvm.loop !3928

while.end50:                                      ; preds = %while.cond
  store i32 1, i32* %retval, align 4, !dbg !3929
  br label %return, !dbg !3929

return:                                           ; preds = %while.end50, %if.then48, %if.then13, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !3930
  ret i32 %31, !dbg !3930
}

declare void @avsubtitle_free(%struct.AVSubtitle*) #2

; Function Attrs: nounwind uwtable
define i32 @avcodec_default_get_format(%struct.AVCodecContext* %avctx, i32* %fmt) #0 !dbg !3931 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %fmt.addr = alloca i32*, align 8
  %desc = alloca %struct.AVPixFmtDescriptor*, align 8
  %config = alloca %struct.AVCodecHWConfig*, align 8
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %device_ctx = alloca %struct.AVHWDeviceContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3932, metadata !1805), !dbg !3933
  store i32* %fmt, i32** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %fmt.addr, metadata !3934, metadata !1805), !dbg !3935
  call void @llvm.dbg.declare(metadata %struct.AVPixFmtDescriptor** %desc, metadata !3936, metadata !1805), !dbg !3962
  call void @llvm.dbg.declare(metadata %struct.AVCodecHWConfig** %config, metadata !3963, metadata !1805), !dbg !3966
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3967, metadata !1805), !dbg !3968
  call void @llvm.dbg.declare(metadata i32* %n, metadata !3969, metadata !1805), !dbg !3970
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3971
  %hw_device_ctx = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 186, !dbg !3973
  %1 = load %struct.AVBufferRef*, %struct.AVBufferRef** %hw_device_ctx, align 8, !dbg !3973
  %tobool = icmp ne %struct.AVBufferRef* %1, null, !dbg !3971
  br i1 %tobool, label %land.lhs.true, label %if.end26, !dbg !3974

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3975
  %codec = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i32 0, i32 3, !dbg !3977
  %3 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !3977
  %hw_configs = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %3, i32 0, i32 31, !dbg !3978
  %4 = load %struct.AVCodecHWConfigInternal**, %struct.AVCodecHWConfigInternal*** %hw_configs, align 8, !dbg !3978
  %tobool1 = icmp ne %struct.AVCodecHWConfigInternal** %4, null, !dbg !3975
  br i1 %tobool1, label %if.then, label %if.end26, !dbg !3979

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.AVHWDeviceContext** %device_ctx, metadata !3980, metadata !1805), !dbg !3982
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3983
  %hw_device_ctx2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %5, i32 0, i32 186, !dbg !3984
  %6 = load %struct.AVBufferRef*, %struct.AVBufferRef** %hw_device_ctx2, align 8, !dbg !3984
  %data = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %6, i32 0, i32 1, !dbg !3985
  %7 = load i8*, i8** %data, align 8, !dbg !3985
  %8 = bitcast i8* %7 to %struct.AVHWDeviceContext*, !dbg !3986
  store %struct.AVHWDeviceContext* %8, %struct.AVHWDeviceContext** %device_ctx, align 8, !dbg !3982
  store i32 0, i32* %i, align 4, !dbg !3987
  br label %for.cond, !dbg !3989

for.cond:                                         ; preds = %for.inc23, %if.then
  %9 = load i32, i32* %i, align 4, !dbg !3990
  %idxprom = sext i32 %9 to i64, !dbg !3993
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3993
  %codec3 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %10, i32 0, i32 3, !dbg !3994
  %11 = load %struct.AVCodec*, %struct.AVCodec** %codec3, align 8, !dbg !3994
  %hw_configs4 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %11, i32 0, i32 31, !dbg !3995
  %12 = load %struct.AVCodecHWConfigInternal**, %struct.AVCodecHWConfigInternal*** %hw_configs4, align 8, !dbg !3995
  %arrayidx = getelementptr inbounds %struct.AVCodecHWConfigInternal*, %struct.AVCodecHWConfigInternal** %12, i64 %idxprom, !dbg !3993
  %13 = load %struct.AVCodecHWConfigInternal*, %struct.AVCodecHWConfigInternal** %arrayidx, align 8, !dbg !3993
  %public = getelementptr inbounds %struct.AVCodecHWConfigInternal, %struct.AVCodecHWConfigInternal* %13, i32 0, i32 0, !dbg !3996
  store %struct.AVCodecHWConfig* %public, %struct.AVCodecHWConfig** %config, align 8, !dbg !3997
  %14 = load %struct.AVCodecHWConfig*, %struct.AVCodecHWConfig** %config, align 8, !dbg !3998
  %tobool5 = icmp ne %struct.AVCodecHWConfig* %14, null, !dbg !3998
  br i1 %tobool5, label %if.end, label %if.then6, !dbg !4000

if.then6:                                         ; preds = %for.cond
  br label %for.end25, !dbg !4001

if.end:                                           ; preds = %for.cond
  %15 = load %struct.AVCodecHWConfig*, %struct.AVCodecHWConfig** %config, align 8, !dbg !4002
  %methods = getelementptr inbounds %struct.AVCodecHWConfig, %struct.AVCodecHWConfig* %15, i32 0, i32 1, !dbg !4004
  %16 = load i32, i32* %methods, align 4, !dbg !4004
  %and = and i32 %16, 1, !dbg !4005
  %tobool7 = icmp ne i32 %and, 0, !dbg !4005
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !4006

if.then8:                                         ; preds = %if.end
  br label %for.inc23, !dbg !4007

if.end9:                                          ; preds = %if.end
  %17 = load %struct.AVHWDeviceContext*, %struct.AVHWDeviceContext** %device_ctx, align 8, !dbg !4008
  %type = getelementptr inbounds %struct.AVHWDeviceContext, %struct.AVHWDeviceContext* %17, i32 0, i32 2, !dbg !4010
  %18 = load i32, i32* %type, align 8, !dbg !4010
  %19 = load %struct.AVCodecHWConfig*, %struct.AVCodecHWConfig** %config, align 8, !dbg !4011
  %device_type = getelementptr inbounds %struct.AVCodecHWConfig, %struct.AVCodecHWConfig* %19, i32 0, i32 2, !dbg !4012
  %20 = load i32, i32* %device_type, align 4, !dbg !4012
  %cmp = icmp ne i32 %18, %20, !dbg !4013
  br i1 %cmp, label %if.then10, label %if.end11, !dbg !4014

if.then10:                                        ; preds = %if.end9
  br label %for.inc23, !dbg !4015

if.end11:                                         ; preds = %if.end9
  store i32 0, i32* %n, align 4, !dbg !4016
  br label %for.cond12, !dbg !4018

for.cond12:                                       ; preds = %for.inc, %if.end11
  %21 = load i32, i32* %n, align 4, !dbg !4019
  %idxprom13 = sext i32 %21 to i64, !dbg !4022
  %22 = load i32*, i32** %fmt.addr, align 8, !dbg !4022
  %arrayidx14 = getelementptr inbounds i32, i32* %22, i64 %idxprom13, !dbg !4022
  %23 = load i32, i32* %arrayidx14, align 4, !dbg !4022
  %cmp15 = icmp ne i32 %23, -1, !dbg !4023
  br i1 %cmp15, label %for.body, label %for.end, !dbg !4024

for.body:                                         ; preds = %for.cond12
  %24 = load %struct.AVCodecHWConfig*, %struct.AVCodecHWConfig** %config, align 8, !dbg !4025
  %pix_fmt = getelementptr inbounds %struct.AVCodecHWConfig, %struct.AVCodecHWConfig* %24, i32 0, i32 0, !dbg !4028
  %25 = load i32, i32* %pix_fmt, align 4, !dbg !4028
  %26 = load i32, i32* %n, align 4, !dbg !4029
  %idxprom16 = sext i32 %26 to i64, !dbg !4030
  %27 = load i32*, i32** %fmt.addr, align 8, !dbg !4030
  %arrayidx17 = getelementptr inbounds i32, i32* %27, i64 %idxprom16, !dbg !4030
  %28 = load i32, i32* %arrayidx17, align 4, !dbg !4030
  %cmp18 = icmp eq i32 %25, %28, !dbg !4031
  br i1 %cmp18, label %if.then19, label %if.end22, !dbg !4032

if.then19:                                        ; preds = %for.body
  %29 = load i32, i32* %n, align 4, !dbg !4033
  %idxprom20 = sext i32 %29 to i64, !dbg !4034
  %30 = load i32*, i32** %fmt.addr, align 8, !dbg !4034
  %arrayidx21 = getelementptr inbounds i32, i32* %30, i64 %idxprom20, !dbg !4034
  %31 = load i32, i32* %arrayidx21, align 4, !dbg !4034
  store i32 %31, i32* %retval, align 4, !dbg !4035
  br label %return, !dbg !4035

if.end22:                                         ; preds = %for.body
  br label %for.inc, !dbg !4036

for.inc:                                          ; preds = %if.end22
  %32 = load i32, i32* %n, align 4, !dbg !4037
  %inc = add nsw i32 %32, 1, !dbg !4037
  store i32 %inc, i32* %n, align 4, !dbg !4037
  br label %for.cond12, !dbg !4039, !llvm.loop !4040

for.end:                                          ; preds = %for.cond12
  br label %for.inc23, !dbg !4042

for.inc23:                                        ; preds = %for.end, %if.then10, %if.then8
  %33 = load i32, i32* %i, align 4, !dbg !4043
  %inc24 = add nsw i32 %33, 1, !dbg !4043
  store i32 %inc24, i32* %i, align 4, !dbg !4043
  br label %for.cond, !dbg !4045, !llvm.loop !4046

for.end25:                                        ; preds = %if.then6
  br label %if.end26, !dbg !4048

if.end26:                                         ; preds = %for.end25, %land.lhs.true, %entry
  store i32 0, i32* %n, align 4, !dbg !4049
  br label %for.cond27, !dbg !4051

for.cond27:                                       ; preds = %for.inc32, %if.end26
  %34 = load i32, i32* %n, align 4, !dbg !4052
  %idxprom28 = sext i32 %34 to i64, !dbg !4055
  %35 = load i32*, i32** %fmt.addr, align 8, !dbg !4055
  %arrayidx29 = getelementptr inbounds i32, i32* %35, i64 %idxprom28, !dbg !4055
  %36 = load i32, i32* %arrayidx29, align 4, !dbg !4055
  %cmp30 = icmp ne i32 %36, -1, !dbg !4056
  br i1 %cmp30, label %for.body31, label %for.end34, !dbg !4057

for.body31:                                       ; preds = %for.cond27
  br label %for.inc32, !dbg !4058

for.inc32:                                        ; preds = %for.body31
  %37 = load i32, i32* %n, align 4, !dbg !4060
  %inc33 = add nsw i32 %37, 1, !dbg !4060
  store i32 %inc33, i32* %n, align 4, !dbg !4060
  br label %for.cond27, !dbg !4062, !llvm.loop !4063

for.end34:                                        ; preds = %for.cond27
  %38 = load i32, i32* %n, align 4, !dbg !4065
  %sub = sub nsw i32 %38, 1, !dbg !4066
  %idxprom35 = sext i32 %sub to i64, !dbg !4067
  %39 = load i32*, i32** %fmt.addr, align 8, !dbg !4067
  %arrayidx36 = getelementptr inbounds i32, i32* %39, i64 %idxprom35, !dbg !4067
  %40 = load i32, i32* %arrayidx36, align 4, !dbg !4067
  %call = call %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32 %40), !dbg !4068
  store %struct.AVPixFmtDescriptor* %call, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !4069
  %41 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !4070
  %flags = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %41, i32 0, i32 4, !dbg !4072
  %42 = load i64, i64* %flags, align 8, !dbg !4072
  %and37 = and i64 %42, 8, !dbg !4073
  %tobool38 = icmp ne i64 %and37, 0, !dbg !4073
  br i1 %tobool38, label %if.end43, label %if.then39, !dbg !4074

if.then39:                                        ; preds = %for.end34
  %43 = load i32, i32* %n, align 4, !dbg !4075
  %sub40 = sub nsw i32 %43, 1, !dbg !4076
  %idxprom41 = sext i32 %sub40 to i64, !dbg !4077
  %44 = load i32*, i32** %fmt.addr, align 8, !dbg !4077
  %arrayidx42 = getelementptr inbounds i32, i32* %44, i64 %idxprom41, !dbg !4077
  %45 = load i32, i32* %arrayidx42, align 4, !dbg !4077
  store i32 %45, i32* %retval, align 4, !dbg !4078
  br label %return, !dbg !4078

if.end43:                                         ; preds = %for.end34
  store i32 0, i32* %n, align 4, !dbg !4079
  br label %for.cond44, !dbg !4081

for.cond44:                                       ; preds = %for.inc76, %if.end43
  %46 = load i32, i32* %n, align 4, !dbg !4082
  %idxprom45 = sext i32 %46 to i64, !dbg !4085
  %47 = load i32*, i32** %fmt.addr, align 8, !dbg !4085
  %arrayidx46 = getelementptr inbounds i32, i32* %47, i64 %idxprom45, !dbg !4085
  %48 = load i32, i32* %arrayidx46, align 4, !dbg !4085
  %cmp47 = icmp ne i32 %48, -1, !dbg !4086
  br i1 %cmp47, label %for.body48, label %for.end78, !dbg !4087

for.body48:                                       ; preds = %for.cond44
  store i32 0, i32* %i, align 4, !dbg !4088
  br label %for.cond49, !dbg !4091

for.cond49:                                       ; preds = %for.inc61, %for.body48
  %49 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4092
  %codec50 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %49, i32 0, i32 3, !dbg !4095
  %50 = load %struct.AVCodec*, %struct.AVCodec** %codec50, align 8, !dbg !4095
  %51 = load i32, i32* %i, align 4, !dbg !4096
  %call51 = call %struct.AVCodecHWConfig* @avcodec_get_hw_config(%struct.AVCodec* %50, i32 %51), !dbg !4097
  store %struct.AVCodecHWConfig* %call51, %struct.AVCodecHWConfig** %config, align 8, !dbg !4098
  %52 = load %struct.AVCodecHWConfig*, %struct.AVCodecHWConfig** %config, align 8, !dbg !4099
  %tobool52 = icmp ne %struct.AVCodecHWConfig* %52, null, !dbg !4099
  br i1 %tobool52, label %if.end54, label %if.then53, !dbg !4101

if.then53:                                        ; preds = %for.cond49
  br label %for.end63, !dbg !4102

if.end54:                                         ; preds = %for.cond49
  %53 = load %struct.AVCodecHWConfig*, %struct.AVCodecHWConfig** %config, align 8, !dbg !4103
  %pix_fmt55 = getelementptr inbounds %struct.AVCodecHWConfig, %struct.AVCodecHWConfig* %53, i32 0, i32 0, !dbg !4105
  %54 = load i32, i32* %pix_fmt55, align 4, !dbg !4105
  %55 = load i32, i32* %n, align 4, !dbg !4106
  %idxprom56 = sext i32 %55 to i64, !dbg !4107
  %56 = load i32*, i32** %fmt.addr, align 8, !dbg !4107
  %arrayidx57 = getelementptr inbounds i32, i32* %56, i64 %idxprom56, !dbg !4107
  %57 = load i32, i32* %arrayidx57, align 4, !dbg !4107
  %cmp58 = icmp eq i32 %54, %57, !dbg !4108
  br i1 %cmp58, label %if.then59, label %if.end60, !dbg !4109

if.then59:                                        ; preds = %if.end54
  br label %for.end63, !dbg !4110

if.end60:                                         ; preds = %if.end54
  br label %for.inc61, !dbg !4111

for.inc61:                                        ; preds = %if.end60
  %58 = load i32, i32* %i, align 4, !dbg !4112
  %inc62 = add nsw i32 %58, 1, !dbg !4112
  store i32 %inc62, i32* %i, align 4, !dbg !4112
  br label %for.cond49, !dbg !4114, !llvm.loop !4115

for.end63:                                        ; preds = %if.then59, %if.then53
  %59 = load %struct.AVCodecHWConfig*, %struct.AVCodecHWConfig** %config, align 8, !dbg !4117
  %tobool64 = icmp ne %struct.AVCodecHWConfig* %59, null, !dbg !4117
  br i1 %tobool64, label %if.end68, label %if.then65, !dbg !4119

if.then65:                                        ; preds = %for.end63
  %60 = load i32, i32* %n, align 4, !dbg !4120
  %idxprom66 = sext i32 %60 to i64, !dbg !4122
  %61 = load i32*, i32** %fmt.addr, align 8, !dbg !4122
  %arrayidx67 = getelementptr inbounds i32, i32* %61, i64 %idxprom66, !dbg !4122
  %62 = load i32, i32* %arrayidx67, align 4, !dbg !4122
  store i32 %62, i32* %retval, align 4, !dbg !4123
  br label %return, !dbg !4123

if.end68:                                         ; preds = %for.end63
  %63 = load %struct.AVCodecHWConfig*, %struct.AVCodecHWConfig** %config, align 8, !dbg !4124
  %methods69 = getelementptr inbounds %struct.AVCodecHWConfig, %struct.AVCodecHWConfig* %63, i32 0, i32 1, !dbg !4126
  %64 = load i32, i32* %methods69, align 4, !dbg !4126
  %and70 = and i32 %64, 4, !dbg !4127
  %tobool71 = icmp ne i32 %and70, 0, !dbg !4127
  br i1 %tobool71, label %if.then72, label %if.end75, !dbg !4128

if.then72:                                        ; preds = %if.end68
  %65 = load i32, i32* %n, align 4, !dbg !4129
  %idxprom73 = sext i32 %65 to i64, !dbg !4131
  %66 = load i32*, i32** %fmt.addr, align 8, !dbg !4131
  %arrayidx74 = getelementptr inbounds i32, i32* %66, i64 %idxprom73, !dbg !4131
  %67 = load i32, i32* %arrayidx74, align 4, !dbg !4131
  store i32 %67, i32* %retval, align 4, !dbg !4132
  br label %return, !dbg !4132

if.end75:                                         ; preds = %if.end68
  br label %for.inc76, !dbg !4133

for.inc76:                                        ; preds = %if.end75
  %68 = load i32, i32* %n, align 4, !dbg !4134
  %inc77 = add nsw i32 %68, 1, !dbg !4134
  store i32 %inc77, i32* %n, align 4, !dbg !4134
  br label %for.cond44, !dbg !4136, !llvm.loop !4137

for.end78:                                        ; preds = %for.cond44
  store i32 -1, i32* %retval, align 4, !dbg !4139
  br label %return, !dbg !4139

return:                                           ; preds = %for.end78, %if.then72, %if.then65, %if.then39, %if.then19
  %69 = load i32, i32* %retval, align 4, !dbg !4140
  ret i32 %69, !dbg !4140
}

declare %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32) #2

declare %struct.AVCodecHWConfig* @avcodec_get_hw_config(%struct.AVCodec*, i32) #2

; Function Attrs: nounwind uwtable
define i32 @ff_decode_get_hw_frames_ctx(%struct.AVCodecContext* %avctx, i32 %dev_type) #0 !dbg !4141 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %dev_type.addr = alloca i32, align 4
  %device_ctx = alloca %struct.AVHWDeviceContext*, align 8
  %frames_ctx = alloca %struct.AVHWFramesContext*, align 8
  %ret = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !4144, metadata !1805), !dbg !4145
  store i32 %dev_type, i32* %dev_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dev_type.addr, metadata !4146, metadata !1805), !dbg !4147
  call void @llvm.dbg.declare(metadata %struct.AVHWDeviceContext** %device_ctx, metadata !4148, metadata !1805), !dbg !4149
  call void @llvm.dbg.declare(metadata %struct.AVHWFramesContext** %frames_ctx, metadata !4150, metadata !1805), !dbg !4151
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4152, metadata !1805), !dbg !4153
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4154
  %hwaccel = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 137, !dbg !4156
  %1 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel, align 8, !dbg !4156
  %tobool = icmp ne %struct.AVHWAccel* %1, null, !dbg !4154
  br i1 %tobool, label %if.end, label %if.then, !dbg !4157

if.then:                                          ; preds = %entry
  store i32 -38, i32* %retval, align 4, !dbg !4158
  br label %return, !dbg !4158

if.end:                                           ; preds = %entry
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4159
  %hw_frames_ctx = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i32 0, i32 182, !dbg !4161
  %3 = load %struct.AVBufferRef*, %struct.AVBufferRef** %hw_frames_ctx, align 8, !dbg !4161
  %tobool1 = icmp ne %struct.AVBufferRef* %3, null, !dbg !4159
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !4162

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !4163
  br label %return, !dbg !4163

if.end3:                                          ; preds = %if.end
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4164
  %hw_device_ctx = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 186, !dbg !4166
  %5 = load %struct.AVBufferRef*, %struct.AVBufferRef** %hw_device_ctx, align 8, !dbg !4166
  %tobool4 = icmp ne %struct.AVBufferRef* %5, null, !dbg !4164
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !4167

if.then5:                                         ; preds = %if.end3
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4168
  %7 = bitcast %struct.AVCodecContext* %6 to i8*, !dbg !4168
  call void (i8*, i32, i8*, ...) @av_log(i8* %7, i32 16, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.9, i32 0, i32 0)), !dbg !4170
  store i32 -22, i32* %retval, align 4, !dbg !4171
  br label %return, !dbg !4171

if.end6:                                          ; preds = %if.end3
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4172
  %hw_device_ctx7 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %8, i32 0, i32 186, !dbg !4173
  %9 = load %struct.AVBufferRef*, %struct.AVBufferRef** %hw_device_ctx7, align 8, !dbg !4173
  %data = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %9, i32 0, i32 1, !dbg !4174
  %10 = load i8*, i8** %data, align 8, !dbg !4174
  %11 = bitcast i8* %10 to %struct.AVHWDeviceContext*, !dbg !4175
  store %struct.AVHWDeviceContext* %11, %struct.AVHWDeviceContext** %device_ctx, align 8, !dbg !4176
  %12 = load %struct.AVHWDeviceContext*, %struct.AVHWDeviceContext** %device_ctx, align 8, !dbg !4177
  %type = getelementptr inbounds %struct.AVHWDeviceContext, %struct.AVHWDeviceContext* %12, i32 0, i32 2, !dbg !4179
  %13 = load i32, i32* %type, align 8, !dbg !4179
  %14 = load i32, i32* %dev_type.addr, align 4, !dbg !4180
  %cmp = icmp ne i32 %13, %14, !dbg !4181
  br i1 %cmp, label %if.then8, label %if.end11, !dbg !4182

if.then8:                                         ; preds = %if.end6
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4183
  %16 = bitcast %struct.AVCodecContext* %15 to i8*, !dbg !4183
  %17 = load i32, i32* %dev_type.addr, align 4, !dbg !4185
  %call = call i8* @av_hwdevice_get_type_name(i32 %17), !dbg !4186
  %18 = load %struct.AVHWDeviceContext*, %struct.AVHWDeviceContext** %device_ctx, align 8, !dbg !4187
  %type9 = getelementptr inbounds %struct.AVHWDeviceContext, %struct.AVHWDeviceContext* %18, i32 0, i32 2, !dbg !4188
  %19 = load i32, i32* %type9, align 8, !dbg !4188
  %call10 = call i8* @av_hwdevice_get_type_name(i32 %19), !dbg !4189
  call void (i8*, i32, i8*, ...) @av_log(i8* %16, i32 16, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.10, i32 0, i32 0), i8* %call, i8* %call10), !dbg !4190
  store i32 -22, i32* %retval, align 4, !dbg !4191
  br label %return, !dbg !4191

if.end11:                                         ; preds = %if.end6
  %20 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4192
  %21 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4193
  %hw_device_ctx12 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %21, i32 0, i32 186, !dbg !4194
  %22 = load %struct.AVBufferRef*, %struct.AVBufferRef** %hw_device_ctx12, align 8, !dbg !4194
  %23 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4195
  %hwaccel13 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %23, i32 0, i32 137, !dbg !4196
  %24 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel13, align 8, !dbg !4196
  %pix_fmt = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %24, i32 0, i32 3, !dbg !4197
  %25 = load i32, i32* %pix_fmt, align 8, !dbg !4197
  %26 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4198
  %hw_frames_ctx14 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %26, i32 0, i32 182, !dbg !4199
  %call15 = call i32 @avcodec_get_hw_frames_parameters(%struct.AVCodecContext* %20, %struct.AVBufferRef* %22, i32 %25, %struct.AVBufferRef** %hw_frames_ctx14), !dbg !4200
  store i32 %call15, i32* %ret, align 4, !dbg !4201
  %27 = load i32, i32* %ret, align 4, !dbg !4202
  %cmp16 = icmp slt i32 %27, 0, !dbg !4204
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !4205

if.then17:                                        ; preds = %if.end11
  %28 = load i32, i32* %ret, align 4, !dbg !4206
  store i32 %28, i32* %retval, align 4, !dbg !4207
  br label %return, !dbg !4207

if.end18:                                         ; preds = %if.end11
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4208
  %hw_frames_ctx19 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %29, i32 0, i32 182, !dbg !4209
  %30 = load %struct.AVBufferRef*, %struct.AVBufferRef** %hw_frames_ctx19, align 8, !dbg !4209
  %data20 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %30, i32 0, i32 1, !dbg !4210
  %31 = load i8*, i8** %data20, align 8, !dbg !4210
  %32 = bitcast i8* %31 to %struct.AVHWFramesContext*, !dbg !4211
  store %struct.AVHWFramesContext* %32, %struct.AVHWFramesContext** %frames_ctx, align 8, !dbg !4212
  %33 = load %struct.AVHWFramesContext*, %struct.AVHWFramesContext** %frames_ctx, align 8, !dbg !4213
  %initial_pool_size = getelementptr inbounds %struct.AVHWFramesContext, %struct.AVHWFramesContext* %33, i32 0, i32 8, !dbg !4215
  %34 = load i32, i32* %initial_pool_size, align 8, !dbg !4215
  %tobool21 = icmp ne i32 %34, 0, !dbg !4213
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !4216

if.then22:                                        ; preds = %if.end18
  %35 = load %struct.AVHWFramesContext*, %struct.AVHWFramesContext** %frames_ctx, align 8, !dbg !4217
  %initial_pool_size23 = getelementptr inbounds %struct.AVHWFramesContext, %struct.AVHWFramesContext* %35, i32 0, i32 8, !dbg !4219
  %36 = load i32, i32* %initial_pool_size23, align 8, !dbg !4220
  %add = add nsw i32 %36, 3, !dbg !4220
  store i32 %add, i32* %initial_pool_size23, align 8, !dbg !4220
  br label %if.end24, !dbg !4221

if.end24:                                         ; preds = %if.then22, %if.end18
  %37 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4222
  %hw_frames_ctx25 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %37, i32 0, i32 182, !dbg !4223
  %38 = load %struct.AVBufferRef*, %struct.AVBufferRef** %hw_frames_ctx25, align 8, !dbg !4223
  %call26 = call i32 @av_hwframe_ctx_init(%struct.AVBufferRef* %38), !dbg !4224
  store i32 %call26, i32* %ret, align 4, !dbg !4225
  %39 = load i32, i32* %ret, align 4, !dbg !4226
  %cmp27 = icmp slt i32 %39, 0, !dbg !4228
  br i1 %cmp27, label %if.then28, label %if.end30, !dbg !4229

if.then28:                                        ; preds = %if.end24
  %40 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4230
  %hw_frames_ctx29 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %40, i32 0, i32 182, !dbg !4232
  call void @av_buffer_unref(%struct.AVBufferRef** %hw_frames_ctx29), !dbg !4233
  %41 = load i32, i32* %ret, align 4, !dbg !4234
  store i32 %41, i32* %retval, align 4, !dbg !4235
  br label %return, !dbg !4235

if.end30:                                         ; preds = %if.end24
  store i32 0, i32* %retval, align 4, !dbg !4236
  br label %return, !dbg !4236

return:                                           ; preds = %if.end30, %if.then28, %if.then17, %if.then8, %if.then5, %if.then2, %if.then
  %42 = load i32, i32* %retval, align 4, !dbg !4237
  ret i32 %42, !dbg !4237
}

declare i8* @av_hwdevice_get_type_name(i32) #2

; Function Attrs: nounwind uwtable
define i32 @avcodec_get_hw_frames_parameters(%struct.AVCodecContext* %avctx, %struct.AVBufferRef* %device_ref, i32 %hw_pix_fmt, %struct.AVBufferRef** %out_frames_ref) #0 !dbg !4238 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %device_ref.addr = alloca %struct.AVBufferRef*, align 8
  %hw_pix_fmt.addr = alloca i32, align 4
  %out_frames_ref.addr = alloca %struct.AVBufferRef**, align 8
  %frames_ref = alloca %struct.AVBufferRef*, align 8
  %hw_config = alloca %struct.AVCodecHWConfigInternal*, align 8
  %hwa = alloca %struct.AVHWAccel*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %frames_ctx = alloca %struct.AVHWFramesContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !4241, metadata !1805), !dbg !4242
  store %struct.AVBufferRef* %device_ref, %struct.AVBufferRef** %device_ref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVBufferRef** %device_ref.addr, metadata !4243, metadata !1805), !dbg !4244
  store i32 %hw_pix_fmt, i32* %hw_pix_fmt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hw_pix_fmt.addr, metadata !4245, metadata !1805), !dbg !4246
  store %struct.AVBufferRef** %out_frames_ref, %struct.AVBufferRef*** %out_frames_ref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVBufferRef*** %out_frames_ref.addr, metadata !4247, metadata !1805), !dbg !4248
  call void @llvm.dbg.declare(metadata %struct.AVBufferRef** %frames_ref, metadata !4249, metadata !1805), !dbg !4250
  store %struct.AVBufferRef* null, %struct.AVBufferRef** %frames_ref, align 8, !dbg !4250
  call void @llvm.dbg.declare(metadata %struct.AVCodecHWConfigInternal** %hw_config, metadata !4251, metadata !1805), !dbg !4255
  call void @llvm.dbg.declare(metadata %struct.AVHWAccel** %hwa, metadata !4256, metadata !1805), !dbg !4257
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4258, metadata !1805), !dbg !4259
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4260, metadata !1805), !dbg !4261
  store i32 0, i32* %i, align 4, !dbg !4262
  br label %for.cond, !dbg !4264

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !4265
  %idxprom = sext i32 %0 to i64, !dbg !4268
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4268
  %codec = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i32 0, i32 3, !dbg !4269
  %2 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !4269
  %hw_configs = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %2, i32 0, i32 31, !dbg !4270
  %3 = load %struct.AVCodecHWConfigInternal**, %struct.AVCodecHWConfigInternal*** %hw_configs, align 8, !dbg !4270
  %arrayidx = getelementptr inbounds %struct.AVCodecHWConfigInternal*, %struct.AVCodecHWConfigInternal** %3, i64 %idxprom, !dbg !4268
  %4 = load %struct.AVCodecHWConfigInternal*, %struct.AVCodecHWConfigInternal** %arrayidx, align 8, !dbg !4268
  store %struct.AVCodecHWConfigInternal* %4, %struct.AVCodecHWConfigInternal** %hw_config, align 8, !dbg !4271
  %5 = load %struct.AVCodecHWConfigInternal*, %struct.AVCodecHWConfigInternal** %hw_config, align 8, !dbg !4272
  %tobool = icmp ne %struct.AVCodecHWConfigInternal* %5, null, !dbg !4272
  br i1 %tobool, label %if.end, label %if.then, !dbg !4274

if.then:                                          ; preds = %for.cond
  store i32 -2, i32* %retval, align 4, !dbg !4275
  br label %return, !dbg !4275

if.end:                                           ; preds = %for.cond
  %6 = load %struct.AVCodecHWConfigInternal*, %struct.AVCodecHWConfigInternal** %hw_config, align 8, !dbg !4276
  %public = getelementptr inbounds %struct.AVCodecHWConfigInternal, %struct.AVCodecHWConfigInternal* %6, i32 0, i32 0, !dbg !4278
  %pix_fmt = getelementptr inbounds %struct.AVCodecHWConfig, %struct.AVCodecHWConfig* %public, i32 0, i32 0, !dbg !4279
  %7 = load i32, i32* %pix_fmt, align 8, !dbg !4279
  %8 = load i32, i32* %hw_pix_fmt.addr, align 4, !dbg !4280
  %cmp = icmp eq i32 %7, %8, !dbg !4281
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !4282

if.then1:                                         ; preds = %if.end
  br label %for.end, !dbg !4283

if.end2:                                          ; preds = %if.end
  br label %for.inc, !dbg !4284

for.inc:                                          ; preds = %if.end2
  %9 = load i32, i32* %i, align 4, !dbg !4285
  %inc = add nsw i32 %9, 1, !dbg !4285
  store i32 %inc, i32* %i, align 4, !dbg !4285
  br label %for.cond, !dbg !4287, !llvm.loop !4288

for.end:                                          ; preds = %if.then1
  %10 = load %struct.AVCodecHWConfigInternal*, %struct.AVCodecHWConfigInternal** %hw_config, align 8, !dbg !4290
  %hwaccel = getelementptr inbounds %struct.AVCodecHWConfigInternal, %struct.AVCodecHWConfigInternal* %10, i32 0, i32 1, !dbg !4291
  %11 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel, align 8, !dbg !4291
  store %struct.AVHWAccel* %11, %struct.AVHWAccel** %hwa, align 8, !dbg !4292
  %12 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwa, align 8, !dbg !4293
  %tobool3 = icmp ne %struct.AVHWAccel* %12, null, !dbg !4293
  br i1 %tobool3, label %lor.lhs.false, label %if.then5, !dbg !4295

lor.lhs.false:                                    ; preds = %for.end
  %13 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwa, align 8, !dbg !4296
  %frame_params = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %13, i32 0, i32 16, !dbg !4298
  %14 = load i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)*, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)** %frame_params, align 8, !dbg !4298
  %tobool4 = icmp ne i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* %14, null, !dbg !4296
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !4299

if.then5:                                         ; preds = %lor.lhs.false, %for.end
  store i32 -2, i32* %retval, align 4, !dbg !4300
  br label %return, !dbg !4300

if.end6:                                          ; preds = %lor.lhs.false
  %15 = load %struct.AVBufferRef*, %struct.AVBufferRef** %device_ref.addr, align 8, !dbg !4301
  %call = call %struct.AVBufferRef* @av_hwframe_ctx_alloc(%struct.AVBufferRef* %15), !dbg !4302
  store %struct.AVBufferRef* %call, %struct.AVBufferRef** %frames_ref, align 8, !dbg !4303
  %16 = load %struct.AVBufferRef*, %struct.AVBufferRef** %frames_ref, align 8, !dbg !4304
  %tobool7 = icmp ne %struct.AVBufferRef* %16, null, !dbg !4304
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !4306

if.then8:                                         ; preds = %if.end6
  store i32 -12, i32* %retval, align 4, !dbg !4307
  br label %return, !dbg !4307

if.end9:                                          ; preds = %if.end6
  %17 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwa, align 8, !dbg !4308
  %frame_params10 = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %17, i32 0, i32 16, !dbg !4309
  %18 = load i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)*, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)** %frame_params10, align 8, !dbg !4309
  %19 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4310
  %20 = load %struct.AVBufferRef*, %struct.AVBufferRef** %frames_ref, align 8, !dbg !4311
  %call11 = call i32 %18(%struct.AVCodecContext* %19, %struct.AVBufferRef* %20), !dbg !4308
  store i32 %call11, i32* %ret, align 4, !dbg !4312
  %21 = load i32, i32* %ret, align 4, !dbg !4313
  %cmp12 = icmp sge i32 %21, 0, !dbg !4315
  br i1 %cmp12, label %if.then13, label %if.else, !dbg !4316

if.then13:                                        ; preds = %if.end9
  call void @llvm.dbg.declare(metadata %struct.AVHWFramesContext** %frames_ctx, metadata !4317, metadata !1805), !dbg !4319
  %22 = load %struct.AVBufferRef*, %struct.AVBufferRef** %frames_ref, align 8, !dbg !4320
  %data = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %22, i32 0, i32 1, !dbg !4321
  %23 = load i8*, i8** %data, align 8, !dbg !4321
  %24 = bitcast i8* %23 to %struct.AVHWFramesContext*, !dbg !4322
  store %struct.AVHWFramesContext* %24, %struct.AVHWFramesContext** %frames_ctx, align 8, !dbg !4319
  %25 = load %struct.AVHWFramesContext*, %struct.AVHWFramesContext** %frames_ctx, align 8, !dbg !4323
  %initial_pool_size = getelementptr inbounds %struct.AVHWFramesContext, %struct.AVHWFramesContext* %25, i32 0, i32 8, !dbg !4325
  %26 = load i32, i32* %initial_pool_size, align 8, !dbg !4325
  %tobool14 = icmp ne i32 %26, 0, !dbg !4323
  br i1 %tobool14, label %if.then15, label %if.end26, !dbg !4326

if.then15:                                        ; preds = %if.then13
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4327
  %extra_hw_frames = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %27, i32 0, i32 189, !dbg !4330
  %28 = load i32, i32* %extra_hw_frames, align 8, !dbg !4330
  %cmp16 = icmp sgt i32 %28, 0, !dbg !4331
  br i1 %cmp16, label %if.then17, label %if.end20, !dbg !4332

if.then17:                                        ; preds = %if.then15
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4333
  %extra_hw_frames18 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %29, i32 0, i32 189, !dbg !4334
  %30 = load i32, i32* %extra_hw_frames18, align 8, !dbg !4334
  %31 = load %struct.AVHWFramesContext*, %struct.AVHWFramesContext** %frames_ctx, align 8, !dbg !4335
  %initial_pool_size19 = getelementptr inbounds %struct.AVHWFramesContext, %struct.AVHWFramesContext* %31, i32 0, i32 8, !dbg !4336
  %32 = load i32, i32* %initial_pool_size19, align 8, !dbg !4337
  %add = add nsw i32 %32, %30, !dbg !4337
  store i32 %add, i32* %initial_pool_size19, align 8, !dbg !4337
  br label %if.end20, !dbg !4335

if.end20:                                         ; preds = %if.then17, %if.then15
  %33 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4338
  %active_thread_type = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %33, i32 0, i32 148, !dbg !4340
  %34 = load i32, i32* %active_thread_type, align 8, !dbg !4340
  %and = and i32 %34, 1, !dbg !4341
  %tobool21 = icmp ne i32 %and, 0, !dbg !4341
  br i1 %tobool21, label %if.then22, label %if.end25, !dbg !4342

if.then22:                                        ; preds = %if.end20
  %35 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4343
  %thread_count = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %35, i32 0, i32 146, !dbg !4344
  %36 = load i32, i32* %thread_count, align 8, !dbg !4344
  %37 = load %struct.AVHWFramesContext*, %struct.AVHWFramesContext** %frames_ctx, align 8, !dbg !4345
  %initial_pool_size23 = getelementptr inbounds %struct.AVHWFramesContext, %struct.AVHWFramesContext* %37, i32 0, i32 8, !dbg !4346
  %38 = load i32, i32* %initial_pool_size23, align 8, !dbg !4347
  %add24 = add nsw i32 %38, %36, !dbg !4347
  store i32 %add24, i32* %initial_pool_size23, align 8, !dbg !4347
  br label %if.end25, !dbg !4345

if.end25:                                         ; preds = %if.then22, %if.end20
  br label %if.end26, !dbg !4348

if.end26:                                         ; preds = %if.end25, %if.then13
  %39 = load %struct.AVBufferRef*, %struct.AVBufferRef** %frames_ref, align 8, !dbg !4349
  %40 = load %struct.AVBufferRef**, %struct.AVBufferRef*** %out_frames_ref.addr, align 8, !dbg !4350
  store %struct.AVBufferRef* %39, %struct.AVBufferRef** %40, align 8, !dbg !4351
  br label %if.end27, !dbg !4352

if.else:                                          ; preds = %if.end9
  call void @av_buffer_unref(%struct.AVBufferRef** %frames_ref), !dbg !4353
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.end26
  %41 = load i32, i32* %ret, align 4, !dbg !4355
  store i32 %41, i32* %retval, align 4, !dbg !4356
  br label %return, !dbg !4356

return:                                           ; preds = %if.end27, %if.then8, %if.then5, %if.then
  %42 = load i32, i32* %retval, align 4, !dbg !4357
  ret i32 %42, !dbg !4357
}

declare i32 @av_hwframe_ctx_init(%struct.AVBufferRef*) #2

declare void @av_buffer_unref(%struct.AVBufferRef**) #2

declare %struct.AVBufferRef* @av_hwframe_ctx_alloc(%struct.AVBufferRef*) #2

; Function Attrs: nounwind uwtable
define i32 @ff_get_format(%struct.AVCodecContext* %avctx, i32* %fmt) #0 !dbg !4358 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %fmt.addr = alloca i32*, align 8
  %desc = alloca %struct.AVPixFmtDescriptor*, align 8
  %choices = alloca i32*, align 8
  %ret = alloca i32, align 4
  %user_choice = alloca i32, align 4
  %hw_config = alloca %struct.AVCodecHWConfigInternal*, align 8
  %config = alloca %struct.AVCodecHWConfig*, align 8
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %err = alloca i32, align 4
  %frames_ctx = alloca %struct.AVHWFramesContext*, align 8
  %device_ctx = alloca %struct.AVHWDeviceContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !4361, metadata !1805), !dbg !4362
  store i32* %fmt, i32** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %fmt.addr, metadata !4363, metadata !1805), !dbg !4364
  call void @llvm.dbg.declare(metadata %struct.AVPixFmtDescriptor** %desc, metadata !4365, metadata !1805), !dbg !4366
  call void @llvm.dbg.declare(metadata i32** %choices, metadata !4367, metadata !1805), !dbg !4369
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4370, metadata !1805), !dbg !4371
  call void @llvm.dbg.declare(metadata i32* %user_choice, metadata !4372, metadata !1805), !dbg !4373
  call void @llvm.dbg.declare(metadata %struct.AVCodecHWConfigInternal** %hw_config, metadata !4374, metadata !1805), !dbg !4375
  call void @llvm.dbg.declare(metadata %struct.AVCodecHWConfig** %config, metadata !4376, metadata !1805), !dbg !4377
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4378, metadata !1805), !dbg !4379
  call void @llvm.dbg.declare(metadata i32* %n, metadata !4380, metadata !1805), !dbg !4381
  call void @llvm.dbg.declare(metadata i32* %err, metadata !4382, metadata !1805), !dbg !4383
  store i32 0, i32* %n, align 4, !dbg !4384
  br label %for.cond, !dbg !4386

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %n, align 4, !dbg !4387
  %idxprom = sext i32 %0 to i64, !dbg !4390
  %1 = load i32*, i32** %fmt.addr, align 8, !dbg !4390
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !4390
  %2 = load i32, i32* %arrayidx, align 4, !dbg !4390
  %cmp = icmp ne i32 %2, -1, !dbg !4391
  br i1 %cmp, label %for.body, label %for.end, !dbg !4392

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !4393

for.inc:                                          ; preds = %for.body
  %3 = load i32, i32* %n, align 4, !dbg !4395
  %inc = add nsw i32 %3, 1, !dbg !4395
  store i32 %inc, i32* %n, align 4, !dbg !4395
  br label %for.cond, !dbg !4397, !llvm.loop !4398

for.end:                                          ; preds = %for.cond
  br label %do.body, !dbg !4400, !llvm.loop !4401

do.body:                                          ; preds = %for.end
  %4 = load i32, i32* %n, align 4, !dbg !4402
  %cmp1 = icmp sge i32 %4, 1, !dbg !4406
  br i1 %cmp1, label %if.end, label %if.then, !dbg !4407

if.then:                                          ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i32 0, i32 0), i32 1338), !dbg !4408
  call void @abort() #9, !dbg !4411
  unreachable, !dbg !4413

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !4414

do.end:                                           ; preds = %if.end
  %5 = load i32, i32* %n, align 4, !dbg !4416
  %sub = sub nsw i32 %5, 1, !dbg !4417
  %idxprom2 = sext i32 %sub to i64, !dbg !4418
  %6 = load i32*, i32** %fmt.addr, align 8, !dbg !4418
  %arrayidx3 = getelementptr inbounds i32, i32* %6, i64 %idxprom2, !dbg !4418
  %7 = load i32, i32* %arrayidx3, align 4, !dbg !4418
  %call = call %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32 %7), !dbg !4419
  store %struct.AVPixFmtDescriptor* %call, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !4420
  %8 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !4421
  %flags = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %8, i32 0, i32 4, !dbg !4423
  %9 = load i64, i64* %flags, align 8, !dbg !4423
  %and = and i64 %9, 8, !dbg !4424
  %tobool = icmp ne i64 %and, 0, !dbg !4424
  br i1 %tobool, label %if.then4, label %if.else, !dbg !4425

if.then4:                                         ; preds = %do.end
  br label %if.end8, !dbg !4426

if.else:                                          ; preds = %do.end
  %10 = load i32, i32* %n, align 4, !dbg !4428
  %sub5 = sub nsw i32 %10, 1, !dbg !4430
  %idxprom6 = sext i32 %sub5 to i64, !dbg !4431
  %11 = load i32*, i32** %fmt.addr, align 8, !dbg !4431
  %arrayidx7 = getelementptr inbounds i32, i32* %11, i64 %idxprom6, !dbg !4431
  %12 = load i32, i32* %arrayidx7, align 4, !dbg !4431
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4432
  %sw_pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %13, i32 0, i32 164, !dbg !4433
  store i32 %12, i32* %sw_pix_fmt, align 8, !dbg !4434
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then4
  %14 = load i32, i32* %n, align 4, !dbg !4435
  %add = add nsw i32 %14, 1, !dbg !4436
  %conv = sext i32 %add to i64, !dbg !4435
  %call9 = call i8* @av_malloc_array(i64 %conv, i64 4), !dbg !4437
  %15 = bitcast i8* %call9 to i32*, !dbg !4437
  store i32* %15, i32** %choices, align 8, !dbg !4438
  %16 = load i32*, i32** %choices, align 8, !dbg !4439
  %tobool10 = icmp ne i32* %16, null, !dbg !4439
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !4441

if.then11:                                        ; preds = %if.end8
  store i32 -1, i32* %retval, align 4, !dbg !4442
  br label %return, !dbg !4442

if.end12:                                         ; preds = %if.end8
  %17 = load i32*, i32** %choices, align 8, !dbg !4443
  %18 = bitcast i32* %17 to i8*, !dbg !4444
  %19 = load i32*, i32** %fmt.addr, align 8, !dbg !4445
  %20 = bitcast i32* %19 to i8*, !dbg !4444
  %21 = load i32, i32* %n, align 4, !dbg !4446
  %add13 = add nsw i32 %21, 1, !dbg !4447
  %conv14 = sext i32 %add13 to i64, !dbg !4448
  %mul = mul i64 %conv14, 4, !dbg !4449
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %20, i64 %mul, i32 4, i1 false), !dbg !4444
  br label %for.cond15, !dbg !4450

for.cond15:                                       ; preds = %for.end141, %if.end12
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4451
  call void @hwaccel_uninit(%struct.AVCodecContext* %22), !dbg !4455
  %23 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4456
  %get_format = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %23, i32 0, i32 27, !dbg !4457
  %24 = load i32 (%struct.AVCodecContext*, i32*)*, i32 (%struct.AVCodecContext*, i32*)** %get_format, align 8, !dbg !4457
  %25 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4458
  %26 = load i32*, i32** %choices, align 8, !dbg !4459
  %call16 = call i32 %24(%struct.AVCodecContext* %25, i32* %26), !dbg !4456
  store i32 %call16, i32* %user_choice, align 4, !dbg !4460
  %27 = load i32, i32* %user_choice, align 4, !dbg !4461
  %cmp17 = icmp eq i32 %27, -1, !dbg !4463
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !4464

if.then19:                                        ; preds = %for.cond15
  store i32 -1, i32* %ret, align 4, !dbg !4465
  br label %for.end142, !dbg !4467

if.end20:                                         ; preds = %for.cond15
  %28 = load i32, i32* %user_choice, align 4, !dbg !4468
  %call21 = call %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32 %28), !dbg !4469
  store %struct.AVPixFmtDescriptor* %call21, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !4470
  %29 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !4471
  %tobool22 = icmp ne %struct.AVPixFmtDescriptor* %29, null, !dbg !4471
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !4473

if.then23:                                        ; preds = %if.end20
  %30 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4474
  %31 = bitcast %struct.AVCodecContext* %30 to i8*, !dbg !4474
  call void (i8*, i32, i8*, ...) @av_log(i8* %31, i32 16, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.14, i32 0, i32 0)), !dbg !4476
  store i32 -1, i32* %ret, align 4, !dbg !4477
  br label %for.end142, !dbg !4478

if.end24:                                         ; preds = %if.end20
  %32 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4479
  %33 = bitcast %struct.AVCodecContext* %32 to i8*, !dbg !4479
  %34 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !4480
  %name = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %34, i32 0, i32 0, !dbg !4481
  %35 = load i8*, i8** %name, align 8, !dbg !4481
  call void (i8*, i32, i8*, ...) @av_log(i8* %33, i32 48, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.15, i32 0, i32 0), i8* %35), !dbg !4482
  store i32 0, i32* %i, align 4, !dbg !4483
  br label %for.cond25, !dbg !4485

for.cond25:                                       ; preds = %for.inc35, %if.end24
  %36 = load i32, i32* %i, align 4, !dbg !4486
  %37 = load i32, i32* %n, align 4, !dbg !4489
  %cmp26 = icmp slt i32 %36, %37, !dbg !4490
  br i1 %cmp26, label %for.body28, label %for.end37, !dbg !4491

for.body28:                                       ; preds = %for.cond25
  %38 = load i32, i32* %i, align 4, !dbg !4492
  %idxprom29 = sext i32 %38 to i64, !dbg !4495
  %39 = load i32*, i32** %choices, align 8, !dbg !4495
  %arrayidx30 = getelementptr inbounds i32, i32* %39, i64 %idxprom29, !dbg !4495
  %40 = load i32, i32* %arrayidx30, align 4, !dbg !4495
  %41 = load i32, i32* %user_choice, align 4, !dbg !4496
  %cmp31 = icmp eq i32 %40, %41, !dbg !4497
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !4498

if.then33:                                        ; preds = %for.body28
  br label %for.end37, !dbg !4499

if.end34:                                         ; preds = %for.body28
  br label %for.inc35, !dbg !4500

for.inc35:                                        ; preds = %if.end34
  %42 = load i32, i32* %i, align 4, !dbg !4501
  %inc36 = add nsw i32 %42, 1, !dbg !4501
  store i32 %inc36, i32* %i, align 4, !dbg !4501
  br label %for.cond25, !dbg !4503, !llvm.loop !4504

for.end37:                                        ; preds = %if.then33, %for.cond25
  %43 = load i32, i32* %i, align 4, !dbg !4506
  %44 = load i32, i32* %n, align 4, !dbg !4508
  %cmp38 = icmp eq i32 %43, %44, !dbg !4509
  br i1 %cmp38, label %if.then40, label %if.end42, !dbg !4510

if.then40:                                        ; preds = %for.end37
  %45 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4511
  %46 = bitcast %struct.AVCodecContext* %45 to i8*, !dbg !4511
  %47 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !4513
  %name41 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %47, i32 0, i32 0, !dbg !4514
  %48 = load i8*, i8** %name41, align 8, !dbg !4514
  call void (i8*, i32, i8*, ...) @av_log(i8* %46, i32 16, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.16, i32 0, i32 0), i8* %48), !dbg !4515
  store i32 -1, i32* %ret, align 4, !dbg !4516
  br label %for.end142, !dbg !4517

if.end42:                                         ; preds = %for.end37
  %49 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4518
  %codec = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %49, i32 0, i32 3, !dbg !4520
  %50 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !4520
  %hw_configs = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %50, i32 0, i32 31, !dbg !4521
  %51 = load %struct.AVCodecHWConfigInternal**, %struct.AVCodecHWConfigInternal*** %hw_configs, align 8, !dbg !4521
  %tobool43 = icmp ne %struct.AVCodecHWConfigInternal** %51, null, !dbg !4518
  br i1 %tobool43, label %if.then44, label %if.else60, !dbg !4522

if.then44:                                        ; preds = %if.end42
  store i32 0, i32* %i, align 4, !dbg !4523
  br label %for.cond45, !dbg !4526

for.cond45:                                       ; preds = %for.inc57, %if.then44
  %52 = load i32, i32* %i, align 4, !dbg !4527
  %idxprom46 = sext i32 %52 to i64, !dbg !4530
  %53 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4530
  %codec47 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %53, i32 0, i32 3, !dbg !4531
  %54 = load %struct.AVCodec*, %struct.AVCodec** %codec47, align 8, !dbg !4531
  %hw_configs48 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %54, i32 0, i32 31, !dbg !4532
  %55 = load %struct.AVCodecHWConfigInternal**, %struct.AVCodecHWConfigInternal*** %hw_configs48, align 8, !dbg !4532
  %arrayidx49 = getelementptr inbounds %struct.AVCodecHWConfigInternal*, %struct.AVCodecHWConfigInternal** %55, i64 %idxprom46, !dbg !4530
  %56 = load %struct.AVCodecHWConfigInternal*, %struct.AVCodecHWConfigInternal** %arrayidx49, align 8, !dbg !4530
  store %struct.AVCodecHWConfigInternal* %56, %struct.AVCodecHWConfigInternal** %hw_config, align 8, !dbg !4533
  %57 = load %struct.AVCodecHWConfigInternal*, %struct.AVCodecHWConfigInternal** %hw_config, align 8, !dbg !4534
  %tobool50 = icmp ne %struct.AVCodecHWConfigInternal* %57, null, !dbg !4534
  br i1 %tobool50, label %if.end52, label %if.then51, !dbg !4536

if.then51:                                        ; preds = %for.cond45
  br label %for.end59, !dbg !4537

if.end52:                                         ; preds = %for.cond45
  %58 = load %struct.AVCodecHWConfigInternal*, %struct.AVCodecHWConfigInternal** %hw_config, align 8, !dbg !4538
  %public = getelementptr inbounds %struct.AVCodecHWConfigInternal, %struct.AVCodecHWConfigInternal* %58, i32 0, i32 0, !dbg !4540
  %pix_fmt = getelementptr inbounds %struct.AVCodecHWConfig, %struct.AVCodecHWConfig* %public, i32 0, i32 0, !dbg !4541
  %59 = load i32, i32* %pix_fmt, align 8, !dbg !4541
  %60 = load i32, i32* %user_choice, align 4, !dbg !4542
  %cmp53 = icmp eq i32 %59, %60, !dbg !4543
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !4544

if.then55:                                        ; preds = %if.end52
  br label %for.end59, !dbg !4545

if.end56:                                         ; preds = %if.end52
  br label %for.inc57, !dbg !4546

for.inc57:                                        ; preds = %if.end56
  %61 = load i32, i32* %i, align 4, !dbg !4547
  %inc58 = add nsw i32 %61, 1, !dbg !4547
  store i32 %inc58, i32* %i, align 4, !dbg !4547
  br label %for.cond45, !dbg !4549, !llvm.loop !4550

for.end59:                                        ; preds = %if.then55, %if.then51
  br label %if.end61, !dbg !4552

if.else60:                                        ; preds = %if.end42
  store %struct.AVCodecHWConfigInternal* null, %struct.AVCodecHWConfigInternal** %hw_config, align 8, !dbg !4553
  br label %if.end61

if.end61:                                         ; preds = %if.else60, %for.end59
  %62 = load %struct.AVCodecHWConfigInternal*, %struct.AVCodecHWConfigInternal** %hw_config, align 8, !dbg !4555
  %tobool62 = icmp ne %struct.AVCodecHWConfigInternal* %62, null, !dbg !4555
  br i1 %tobool62, label %if.end64, label %if.then63, !dbg !4557

if.then63:                                        ; preds = %if.end61
  %63 = load i32, i32* %user_choice, align 4, !dbg !4558
  store i32 %63, i32* %ret, align 4, !dbg !4560
  br label %for.end142, !dbg !4561

if.end64:                                         ; preds = %if.end61
  %64 = load %struct.AVCodecHWConfigInternal*, %struct.AVCodecHWConfigInternal** %hw_config, align 8, !dbg !4562
  %public65 = getelementptr inbounds %struct.AVCodecHWConfigInternal, %struct.AVCodecHWConfigInternal* %64, i32 0, i32 0, !dbg !4563
  store %struct.AVCodecHWConfig* %public65, %struct.AVCodecHWConfig** %config, align 8, !dbg !4564
  %65 = load %struct.AVCodecHWConfig*, %struct.AVCodecHWConfig** %config, align 8, !dbg !4565
  %methods = getelementptr inbounds %struct.AVCodecHWConfig, %struct.AVCodecHWConfig* %65, i32 0, i32 1, !dbg !4567
  %66 = load i32, i32* %methods, align 4, !dbg !4567
  %and66 = and i32 %66, 2, !dbg !4568
  %tobool67 = icmp ne i32 %and66, 0, !dbg !4568
  br i1 %tobool67, label %land.lhs.true, label %if.else76, !dbg !4569

land.lhs.true:                                    ; preds = %if.end64
  %67 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4570
  %hw_frames_ctx = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %67, i32 0, i32 182, !dbg !4571
  %68 = load %struct.AVBufferRef*, %struct.AVBufferRef** %hw_frames_ctx, align 8, !dbg !4571
  %tobool68 = icmp ne %struct.AVBufferRef* %68, null, !dbg !4570
  br i1 %tobool68, label %if.then69, label %if.else76, !dbg !4572

if.then69:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.AVHWFramesContext** %frames_ctx, metadata !4574, metadata !1805), !dbg !4578
  %69 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4579
  %hw_frames_ctx70 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %69, i32 0, i32 182, !dbg !4580
  %70 = load %struct.AVBufferRef*, %struct.AVBufferRef** %hw_frames_ctx70, align 8, !dbg !4580
  %data = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %70, i32 0, i32 1, !dbg !4581
  %71 = load i8*, i8** %data, align 8, !dbg !4581
  %72 = bitcast i8* %71 to %struct.AVHWFramesContext*, !dbg !4582
  store %struct.AVHWFramesContext* %72, %struct.AVHWFramesContext** %frames_ctx, align 8, !dbg !4578
  %73 = load %struct.AVHWFramesContext*, %struct.AVHWFramesContext** %frames_ctx, align 8, !dbg !4583
  %format = getelementptr inbounds %struct.AVHWFramesContext, %struct.AVHWFramesContext* %73, i32 0, i32 9, !dbg !4585
  %74 = load i32, i32* %format, align 4, !dbg !4585
  %75 = load i32, i32* %user_choice, align 4, !dbg !4586
  %cmp71 = icmp ne i32 %74, %75, !dbg !4587
  br i1 %cmp71, label %if.then73, label %if.end75, !dbg !4588

if.then73:                                        ; preds = %if.then69
  %76 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4589
  %77 = bitcast %struct.AVCodecContext* %76 to i8*, !dbg !4589
  %78 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !4591
  %name74 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %78, i32 0, i32 0, !dbg !4592
  %79 = load i8*, i8** %name74, align 8, !dbg !4592
  call void (i8*, i32, i8*, ...) @av_log(i8* %77, i32 16, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.17, i32 0, i32 0), i8* %79), !dbg !4593
  br label %try_again, !dbg !4594

if.end75:                                         ; preds = %if.then69
  br label %if.end105, !dbg !4595

if.else76:                                        ; preds = %land.lhs.true, %if.end64
  %80 = load %struct.AVCodecHWConfig*, %struct.AVCodecHWConfig** %config, align 8, !dbg !4596
  %methods77 = getelementptr inbounds %struct.AVCodecHWConfig, %struct.AVCodecHWConfig* %80, i32 0, i32 1, !dbg !4599
  %81 = load i32, i32* %methods77, align 4, !dbg !4599
  %and78 = and i32 %81, 1, !dbg !4600
  %tobool79 = icmp ne i32 %and78, 0, !dbg !4600
  br i1 %tobool79, label %land.lhs.true80, label %if.else90, !dbg !4601

land.lhs.true80:                                  ; preds = %if.else76
  %82 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4602
  %hw_device_ctx = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %82, i32 0, i32 186, !dbg !4603
  %83 = load %struct.AVBufferRef*, %struct.AVBufferRef** %hw_device_ctx, align 8, !dbg !4603
  %tobool81 = icmp ne %struct.AVBufferRef* %83, null, !dbg !4602
  br i1 %tobool81, label %if.then82, label %if.else90, !dbg !4604

if.then82:                                        ; preds = %land.lhs.true80
  call void @llvm.dbg.declare(metadata %struct.AVHWDeviceContext** %device_ctx, metadata !4606, metadata !1805), !dbg !4610
  %84 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4611
  %hw_device_ctx83 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %84, i32 0, i32 186, !dbg !4612
  %85 = load %struct.AVBufferRef*, %struct.AVBufferRef** %hw_device_ctx83, align 8, !dbg !4612
  %data84 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %85, i32 0, i32 1, !dbg !4613
  %86 = load i8*, i8** %data84, align 8, !dbg !4613
  %87 = bitcast i8* %86 to %struct.AVHWDeviceContext*, !dbg !4614
  store %struct.AVHWDeviceContext* %87, %struct.AVHWDeviceContext** %device_ctx, align 8, !dbg !4610
  %88 = load %struct.AVHWDeviceContext*, %struct.AVHWDeviceContext** %device_ctx, align 8, !dbg !4615
  %type = getelementptr inbounds %struct.AVHWDeviceContext, %struct.AVHWDeviceContext* %88, i32 0, i32 2, !dbg !4617
  %89 = load i32, i32* %type, align 8, !dbg !4617
  %90 = load %struct.AVCodecHWConfig*, %struct.AVCodecHWConfig** %config, align 8, !dbg !4618
  %device_type = getelementptr inbounds %struct.AVCodecHWConfig, %struct.AVCodecHWConfig* %90, i32 0, i32 2, !dbg !4619
  %91 = load i32, i32* %device_type, align 4, !dbg !4619
  %cmp85 = icmp ne i32 %89, %91, !dbg !4620
  br i1 %cmp85, label %if.then87, label %if.end89, !dbg !4621

if.then87:                                        ; preds = %if.then82
  %92 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4622
  %93 = bitcast %struct.AVCodecContext* %92 to i8*, !dbg !4622
  %94 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !4624
  %name88 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %94, i32 0, i32 0, !dbg !4625
  %95 = load i8*, i8** %name88, align 8, !dbg !4625
  call void (i8*, i32, i8*, ...) @av_log(i8* %93, i32 16, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.18, i32 0, i32 0), i8* %95), !dbg !4626
  br label %try_again, !dbg !4627

if.end89:                                         ; preds = %if.then82
  br label %if.end104, !dbg !4628

if.else90:                                        ; preds = %land.lhs.true80, %if.else76
  %96 = load %struct.AVCodecHWConfig*, %struct.AVCodecHWConfig** %config, align 8, !dbg !4629
  %methods91 = getelementptr inbounds %struct.AVCodecHWConfig, %struct.AVCodecHWConfig* %96, i32 0, i32 1, !dbg !4632
  %97 = load i32, i32* %methods91, align 4, !dbg !4632
  %and92 = and i32 %97, 4, !dbg !4633
  %tobool93 = icmp ne i32 %and92, 0, !dbg !4633
  br i1 %tobool93, label %if.then94, label %if.else95, !dbg !4629

if.then94:                                        ; preds = %if.else90
  br label %if.end103, !dbg !4634

if.else95:                                        ; preds = %if.else90
  %98 = load %struct.AVCodecHWConfig*, %struct.AVCodecHWConfig** %config, align 8, !dbg !4636
  %methods96 = getelementptr inbounds %struct.AVCodecHWConfig, %struct.AVCodecHWConfig* %98, i32 0, i32 1, !dbg !4639
  %99 = load i32, i32* %methods96, align 4, !dbg !4639
  %and97 = and i32 %99, 8, !dbg !4640
  %tobool98 = icmp ne i32 %and97, 0, !dbg !4640
  br i1 %tobool98, label %if.then99, label %if.else100, !dbg !4636

if.then99:                                        ; preds = %if.else95
  br label %if.end102, !dbg !4641

if.else100:                                       ; preds = %if.else95
  %100 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4643
  %101 = bitcast %struct.AVCodecContext* %100 to i8*, !dbg !4643
  %102 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !4645
  %name101 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %102, i32 0, i32 0, !dbg !4646
  %103 = load i8*, i8** %name101, align 8, !dbg !4646
  call void (i8*, i32, i8*, ...) @av_log(i8* %101, i32 16, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.19, i32 0, i32 0), i8* %103), !dbg !4647
  br label %try_again, !dbg !4648

if.end102:                                        ; preds = %if.then99
  br label %if.end103

if.end103:                                        ; preds = %if.end102, %if.then94
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.end89
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.end75
  %104 = load %struct.AVCodecHWConfigInternal*, %struct.AVCodecHWConfigInternal** %hw_config, align 8, !dbg !4649
  %hwaccel = getelementptr inbounds %struct.AVCodecHWConfigInternal, %struct.AVCodecHWConfigInternal* %104, i32 0, i32 1, !dbg !4651
  %105 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel, align 8, !dbg !4651
  %tobool106 = icmp ne %struct.AVHWAccel* %105, null, !dbg !4649
  br i1 %tobool106, label %if.then107, label %if.end114, !dbg !4652

if.then107:                                       ; preds = %if.end105
  %106 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4653
  %107 = bitcast %struct.AVCodecContext* %106 to i8*, !dbg !4653
  %108 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !4655
  %name108 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %108, i32 0, i32 0, !dbg !4656
  %109 = load i8*, i8** %name108, align 8, !dbg !4656
  call void (i8*, i32, i8*, ...) @av_log(i8* %107, i32 48, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.20, i32 0, i32 0), i8* %109), !dbg !4657
  %110 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4658
  %111 = load %struct.AVCodecHWConfigInternal*, %struct.AVCodecHWConfigInternal** %hw_config, align 8, !dbg !4659
  %call109 = call i32 @hwaccel_init(%struct.AVCodecContext* %110, %struct.AVCodecHWConfigInternal* %111), !dbg !4660
  store i32 %call109, i32* %err, align 4, !dbg !4661
  %112 = load i32, i32* %err, align 4, !dbg !4662
  %cmp110 = icmp slt i32 %112, 0, !dbg !4664
  br i1 %cmp110, label %if.then112, label %if.end113, !dbg !4665

if.then112:                                       ; preds = %if.then107
  br label %try_again, !dbg !4666

if.end113:                                        ; preds = %if.then107
  br label %if.end114, !dbg !4667

if.end114:                                        ; preds = %if.end113, %if.end105
  %113 = load i32, i32* %user_choice, align 4, !dbg !4668
  store i32 %113, i32* %ret, align 4, !dbg !4669
  br label %for.end142, !dbg !4670

try_again:                                        ; preds = %if.then112, %if.else100, %if.then87, %if.then73
  %114 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4671
  %115 = bitcast %struct.AVCodecContext* %114 to i8*, !dbg !4671
  %116 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !4672
  %name115 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %116, i32 0, i32 0, !dbg !4673
  %117 = load i8*, i8** %name115, align 8, !dbg !4673
  call void (i8*, i32, i8*, ...) @av_log(i8* %115, i32 48, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.21, i32 0, i32 0), i8* %117), !dbg !4674
  store i32 0, i32* %i, align 4, !dbg !4675
  br label %for.cond116, !dbg !4677

for.cond116:                                      ; preds = %for.inc126, %try_again
  %118 = load i32, i32* %i, align 4, !dbg !4678
  %119 = load i32, i32* %n, align 4, !dbg !4681
  %cmp117 = icmp slt i32 %118, %119, !dbg !4682
  br i1 %cmp117, label %for.body119, label %for.end128, !dbg !4683

for.body119:                                      ; preds = %for.cond116
  %120 = load i32, i32* %i, align 4, !dbg !4684
  %idxprom120 = sext i32 %120 to i64, !dbg !4687
  %121 = load i32*, i32** %choices, align 8, !dbg !4687
  %arrayidx121 = getelementptr inbounds i32, i32* %121, i64 %idxprom120, !dbg !4687
  %122 = load i32, i32* %arrayidx121, align 4, !dbg !4687
  %123 = load i32, i32* %user_choice, align 4, !dbg !4688
  %cmp122 = icmp eq i32 %122, %123, !dbg !4689
  br i1 %cmp122, label %if.then124, label %if.end125, !dbg !4690

if.then124:                                       ; preds = %for.body119
  br label %for.end128, !dbg !4691

if.end125:                                        ; preds = %for.body119
  br label %for.inc126, !dbg !4692

for.inc126:                                       ; preds = %if.end125
  %124 = load i32, i32* %i, align 4, !dbg !4693
  %inc127 = add nsw i32 %124, 1, !dbg !4693
  store i32 %inc127, i32* %i, align 4, !dbg !4693
  br label %for.cond116, !dbg !4695, !llvm.loop !4696

for.end128:                                       ; preds = %if.then124, %for.cond116
  br label %for.cond129, !dbg !4698

for.cond129:                                      ; preds = %for.inc139, %for.end128
  %125 = load i32, i32* %i, align 4, !dbg !4699
  %add130 = add nsw i32 %125, 1, !dbg !4703
  %126 = load i32, i32* %n, align 4, !dbg !4704
  %cmp131 = icmp slt i32 %add130, %126, !dbg !4705
  br i1 %cmp131, label %for.body133, label %for.end141, !dbg !4706

for.body133:                                      ; preds = %for.cond129
  %127 = load i32, i32* %i, align 4, !dbg !4707
  %add134 = add nsw i32 %127, 1, !dbg !4708
  %idxprom135 = sext i32 %add134 to i64, !dbg !4709
  %128 = load i32*, i32** %choices, align 8, !dbg !4709
  %arrayidx136 = getelementptr inbounds i32, i32* %128, i64 %idxprom135, !dbg !4709
  %129 = load i32, i32* %arrayidx136, align 4, !dbg !4709
  %130 = load i32, i32* %i, align 4, !dbg !4710
  %idxprom137 = sext i32 %130 to i64, !dbg !4711
  %131 = load i32*, i32** %choices, align 8, !dbg !4711
  %arrayidx138 = getelementptr inbounds i32, i32* %131, i64 %idxprom137, !dbg !4711
  store i32 %129, i32* %arrayidx138, align 4, !dbg !4712
  br label %for.inc139, !dbg !4711

for.inc139:                                       ; preds = %for.body133
  %132 = load i32, i32* %i, align 4, !dbg !4713
  %inc140 = add nsw i32 %132, 1, !dbg !4713
  store i32 %inc140, i32* %i, align 4, !dbg !4713
  br label %for.cond129, !dbg !4715, !llvm.loop !4716

for.end141:                                       ; preds = %for.cond129
  %133 = load i32, i32* %n, align 4, !dbg !4717
  %dec = add nsw i32 %133, -1, !dbg !4717
  store i32 %dec, i32* %n, align 4, !dbg !4717
  br label %for.cond15, !dbg !4718, !llvm.loop !4720

for.end142:                                       ; preds = %if.end114, %if.then63, %if.then40, %if.then23, %if.then19
  %134 = bitcast i32** %choices to i8*, !dbg !4721
  call void @av_freep(i8* %134), !dbg !4722
  %135 = load i32, i32* %ret, align 4, !dbg !4723
  store i32 %135, i32* %retval, align 4, !dbg !4724
  br label %return, !dbg !4724

return:                                           ; preds = %for.end142, %if.then11
  %136 = load i32, i32* %retval, align 4, !dbg !4725
  ret i32 %136, !dbg !4725
}

; Function Attrs: noreturn nounwind
declare void @abort() #5

declare i8* @av_malloc_array(i64, i64) #2

; Function Attrs: nounwind uwtable
define internal void @hwaccel_uninit(%struct.AVCodecContext* %avctx) #0 !dbg !4726 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !4727, metadata !1805), !dbg !4728
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4729
  %hwaccel = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 137, !dbg !4731
  %1 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel, align 8, !dbg !4731
  %tobool = icmp ne %struct.AVHWAccel* %1, null, !dbg !4729
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4732

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4733
  %hwaccel1 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i32 0, i32 137, !dbg !4735
  %3 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel1, align 8, !dbg !4735
  %uninit = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %3, i32 0, i32 13, !dbg !4736
  %uninit2 = bitcast {}** %uninit to i32 (%struct.AVCodecContext*)**, !dbg !4736
  %4 = load i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)** %uninit2, align 8, !dbg !4736
  %tobool3 = icmp ne i32 (%struct.AVCodecContext*)* %4, null, !dbg !4733
  br i1 %tobool3, label %if.then, label %if.end, !dbg !4737

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4738
  %hwaccel4 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %5, i32 0, i32 137, !dbg !4739
  %6 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel4, align 8, !dbg !4739
  %uninit5 = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %6, i32 0, i32 13, !dbg !4740
  %uninit6 = bitcast {}** %uninit5 to i32 (%struct.AVCodecContext*)**, !dbg !4740
  %7 = load i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)** %uninit6, align 8, !dbg !4740
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4741
  %call = call i32 %7(%struct.AVCodecContext* %8), !dbg !4738
  br label %if.end, !dbg !4738

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4742
  %internal = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %9, i32 0, i32 7, !dbg !4743
  %10 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal, align 8, !dbg !4743
  %hwaccel_priv_data = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %10, i32 0, i32 13, !dbg !4744
  %11 = bitcast i8** %hwaccel_priv_data to i8*, !dbg !4745
  call void @av_freep(i8* %11), !dbg !4746
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4747
  %hwaccel7 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %12, i32 0, i32 137, !dbg !4748
  store %struct.AVHWAccel* null, %struct.AVHWAccel** %hwaccel7, align 8, !dbg !4749
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4750
  %hw_frames_ctx = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %13, i32 0, i32 182, !dbg !4751
  call void @av_buffer_unref(%struct.AVBufferRef** %hw_frames_ctx), !dbg !4752
  ret void, !dbg !4753
}

; Function Attrs: nounwind uwtable
define internal i32 @hwaccel_init(%struct.AVCodecContext* %avctx, %struct.AVCodecHWConfigInternal* %hw_config) #0 !dbg !4754 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %hw_config.addr = alloca %struct.AVCodecHWConfigInternal*, align 8
  %hwaccel = alloca %struct.AVHWAccel*, align 8
  %err = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !4757, metadata !1805), !dbg !4758
  store %struct.AVCodecHWConfigInternal* %hw_config, %struct.AVCodecHWConfigInternal** %hw_config.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecHWConfigInternal** %hw_config.addr, metadata !4759, metadata !1805), !dbg !4760
  call void @llvm.dbg.declare(metadata %struct.AVHWAccel** %hwaccel, metadata !4761, metadata !1805), !dbg !4762
  call void @llvm.dbg.declare(metadata i32* %err, metadata !4763, metadata !1805), !dbg !4764
  %0 = load %struct.AVCodecHWConfigInternal*, %struct.AVCodecHWConfigInternal** %hw_config.addr, align 8, !dbg !4765
  %hwaccel1 = getelementptr inbounds %struct.AVCodecHWConfigInternal, %struct.AVCodecHWConfigInternal* %0, i32 0, i32 1, !dbg !4766
  %1 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel1, align 8, !dbg !4766
  store %struct.AVHWAccel* %1, %struct.AVHWAccel** %hwaccel, align 8, !dbg !4767
  %2 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel, align 8, !dbg !4768
  %capabilities = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %2, i32 0, i32 4, !dbg !4770
  %3 = load i32, i32* %capabilities, align 4, !dbg !4770
  %and = and i32 %3, 512, !dbg !4771
  %tobool = icmp ne i32 %and, 0, !dbg !4771
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4772

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4773
  %strict_std_compliance = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 132, !dbg !4774
  %5 = load i32, i32* %strict_std_compliance, align 4, !dbg !4774
  %cmp = icmp sgt i32 %5, -2, !dbg !4775
  br i1 %cmp, label %if.then, label %if.end, !dbg !4776

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4778
  %7 = bitcast %struct.AVCodecContext* %6 to i8*, !dbg !4778
  %8 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel, align 8, !dbg !4780
  %name = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %8, i32 0, i32 0, !dbg !4781
  %9 = load i8*, i8** %name, align 8, !dbg !4781
  call void (i8*, i32, i8*, ...) @av_log(i8* %7, i32 24, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.58, i32 0, i32 0), i8* %9), !dbg !4782
  store i32 -1163346256, i32* %retval, align 4, !dbg !4783
  br label %return, !dbg !4783

if.end:                                           ; preds = %land.lhs.true, %entry
  %10 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel, align 8, !dbg !4784
  %priv_data_size = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %10, i32 0, i32 14, !dbg !4786
  %11 = load i32, i32* %priv_data_size, align 8, !dbg !4786
  %tobool2 = icmp ne i32 %11, 0, !dbg !4784
  br i1 %tobool2, label %if.then3, label %if.end10, !dbg !4787

if.then3:                                         ; preds = %if.end
  %12 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel, align 8, !dbg !4788
  %priv_data_size4 = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %12, i32 0, i32 14, !dbg !4790
  %13 = load i32, i32* %priv_data_size4, align 8, !dbg !4790
  %conv = sext i32 %13 to i64, !dbg !4788
  %call = call noalias i8* @av_mallocz(i64 %conv), !dbg !4791
  %14 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4792
  %internal = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %14, i32 0, i32 7, !dbg !4793
  %15 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal, align 8, !dbg !4793
  %hwaccel_priv_data = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %15, i32 0, i32 13, !dbg !4794
  store i8* %call, i8** %hwaccel_priv_data, align 8, !dbg !4795
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4796
  %internal5 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %16, i32 0, i32 7, !dbg !4798
  %17 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal5, align 8, !dbg !4798
  %hwaccel_priv_data6 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %17, i32 0, i32 13, !dbg !4799
  %18 = load i8*, i8** %hwaccel_priv_data6, align 8, !dbg !4799
  %tobool7 = icmp ne i8* %18, null, !dbg !4796
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !4800

if.then8:                                         ; preds = %if.then3
  store i32 -12, i32* %retval, align 4, !dbg !4801
  br label %return, !dbg !4801

if.end9:                                          ; preds = %if.then3
  br label %if.end10, !dbg !4802

if.end10:                                         ; preds = %if.end9, %if.end
  %19 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel, align 8, !dbg !4803
  %20 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4804
  %hwaccel11 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %20, i32 0, i32 137, !dbg !4805
  store %struct.AVHWAccel* %19, %struct.AVHWAccel** %hwaccel11, align 8, !dbg !4806
  %21 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel, align 8, !dbg !4807
  %init = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %21, i32 0, i32 12, !dbg !4809
  %init12 = bitcast {}** %init to i32 (%struct.AVCodecContext*)**, !dbg !4809
  %22 = load i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)** %init12, align 8, !dbg !4809
  %tobool13 = icmp ne i32 (%struct.AVCodecContext*)* %22, null, !dbg !4807
  br i1 %tobool13, label %if.then14, label %if.end26, !dbg !4810

if.then14:                                        ; preds = %if.end10
  %23 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel, align 8, !dbg !4811
  %init15 = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %23, i32 0, i32 12, !dbg !4813
  %init16 = bitcast {}** %init15 to i32 (%struct.AVCodecContext*)**, !dbg !4813
  %24 = load i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)** %init16, align 8, !dbg !4813
  %25 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4814
  %call17 = call i32 %24(%struct.AVCodecContext* %25), !dbg !4811
  store i32 %call17, i32* %err, align 4, !dbg !4815
  %26 = load i32, i32* %err, align 4, !dbg !4816
  %cmp18 = icmp slt i32 %26, 0, !dbg !4818
  br i1 %cmp18, label %if.then20, label %if.end25, !dbg !4819

if.then20:                                        ; preds = %if.then14
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4820
  %28 = bitcast %struct.AVCodecContext* %27 to i8*, !dbg !4820
  %29 = load %struct.AVCodecHWConfigInternal*, %struct.AVCodecHWConfigInternal** %hw_config.addr, align 8, !dbg !4822
  %public = getelementptr inbounds %struct.AVCodecHWConfigInternal, %struct.AVCodecHWConfigInternal* %29, i32 0, i32 0, !dbg !4823
  %pix_fmt = getelementptr inbounds %struct.AVCodecHWConfig, %struct.AVCodecHWConfig* %public, i32 0, i32 0, !dbg !4824
  %30 = load i32, i32* %pix_fmt, align 8, !dbg !4824
  %call21 = call i8* @av_get_pix_fmt_name(i32 %30), !dbg !4825
  call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 16, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.59, i32 0, i32 0), i8* %call21), !dbg !4826
  %31 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4827
  %internal22 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %31, i32 0, i32 7, !dbg !4828
  %32 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal22, align 8, !dbg !4828
  %hwaccel_priv_data23 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %32, i32 0, i32 13, !dbg !4829
  %33 = bitcast i8** %hwaccel_priv_data23 to i8*, !dbg !4830
  call void @av_freep(i8* %33), !dbg !4831
  %34 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4832
  %hwaccel24 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %34, i32 0, i32 137, !dbg !4833
  store %struct.AVHWAccel* null, %struct.AVHWAccel** %hwaccel24, align 8, !dbg !4834
  %35 = load i32, i32* %err, align 4, !dbg !4835
  store i32 %35, i32* %retval, align 4, !dbg !4836
  br label %return, !dbg !4836

if.end25:                                         ; preds = %if.then14
  br label %if.end26, !dbg !4837

if.end26:                                         ; preds = %if.end25, %if.end10
  store i32 0, i32* %retval, align 4, !dbg !4838
  br label %return, !dbg !4838

return:                                           ; preds = %if.end26, %if.then20, %if.then8, %if.then
  %36 = load i32, i32* %retval, align 4, !dbg !4839
  ret i32 %36, !dbg !4839
}

; Function Attrs: nounwind uwtable
define i32 @avcodec_default_get_buffer2(%struct.AVCodecContext* %avctx, %struct.AVFrame* %frame, i32 %flags) #0 !dbg !4840 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %flags.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !4843, metadata !1805), !dbg !4844
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !4845, metadata !1805), !dbg !4846
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !4847, metadata !1805), !dbg !4848
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4849, metadata !1805), !dbg !4850
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4851
  %hw_frames_ctx = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 182, !dbg !4853
  %1 = load %struct.AVBufferRef*, %struct.AVBufferRef** %hw_frames_ctx, align 8, !dbg !4853
  %tobool = icmp ne %struct.AVBufferRef* %1, null, !dbg !4851
  br i1 %tobool, label %if.then, label %if.end, !dbg !4854

if.then:                                          ; preds = %entry
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4855
  %hw_frames_ctx1 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i32 0, i32 182, !dbg !4857
  %3 = load %struct.AVBufferRef*, %struct.AVBufferRef** %hw_frames_ctx1, align 8, !dbg !4857
  %4 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !4858
  %call = call i32 @av_hwframe_get_buffer(%struct.AVBufferRef* %3, %struct.AVFrame* %4, i32 0), !dbg !4859
  store i32 %call, i32* %ret, align 4, !dbg !4860
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4861
  %coded_width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %5, i32 0, i32 22, !dbg !4862
  %6 = load i32, i32* %coded_width, align 4, !dbg !4862
  %7 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !4863
  %width = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %7, i32 0, i32 3, !dbg !4864
  store i32 %6, i32* %width, align 8, !dbg !4865
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4866
  %coded_height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %8, i32 0, i32 23, !dbg !4867
  %9 = load i32, i32* %coded_height, align 8, !dbg !4867
  %10 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !4868
  %height = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %10, i32 0, i32 4, !dbg !4869
  store i32 %9, i32* %height, align 4, !dbg !4870
  %11 = load i32, i32* %ret, align 4, !dbg !4871
  store i32 %11, i32* %retval, align 4, !dbg !4872
  br label %return, !dbg !4872

if.end:                                           ; preds = %entry
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4873
  %13 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !4875
  %call2 = call i32 @update_frame_pool(%struct.AVCodecContext* %12, %struct.AVFrame* %13), !dbg !4876
  store i32 %call2, i32* %ret, align 4, !dbg !4877
  %cmp = icmp slt i32 %call2, 0, !dbg !4878
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !4879

if.then3:                                         ; preds = %if.end
  %14 = load i32, i32* %ret, align 4, !dbg !4880
  store i32 %14, i32* %retval, align 4, !dbg !4881
  br label %return, !dbg !4881

if.end4:                                          ; preds = %if.end
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4882
  %codec_type = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %15, i32 0, i32 2, !dbg !4883
  %16 = load i32, i32* %codec_type, align 4, !dbg !4883
  switch i32 %16, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
  ], !dbg !4884

sw.bb:                                            ; preds = %if.end4
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4885
  %18 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !4887
  %call5 = call i32 @video_get_buffer(%struct.AVCodecContext* %17, %struct.AVFrame* %18), !dbg !4888
  store i32 %call5, i32* %retval, align 4, !dbg !4889
  br label %return, !dbg !4889

sw.bb6:                                           ; preds = %if.end4
  %19 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4890
  %20 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !4891
  %call7 = call i32 @audio_get_buffer(%struct.AVCodecContext* %19, %struct.AVFrame* %20), !dbg !4892
  store i32 %call7, i32* %retval, align 4, !dbg !4893
  br label %return, !dbg !4893

sw.default:                                       ; preds = %if.end4
  store i32 -1, i32* %retval, align 4, !dbg !4894
  br label %return, !dbg !4894

return:                                           ; preds = %sw.default, %sw.bb6, %sw.bb, %if.then3, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !4895
  ret i32 %21, !dbg !4895
}

declare i32 @av_hwframe_get_buffer(%struct.AVBufferRef*, %struct.AVFrame*, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @update_frame_pool(%struct.AVCodecContext* %avctx, %struct.AVFrame* %frame) #0 !dbg !4896 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %pool = alloca %struct.FramePool*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %data = alloca [4 x i8*], align 16
  %linesize = alloca [4 x i32], align 16
  %size = alloca [4 x i32], align 16
  %w = alloca i32, align 4
  %h = alloca i32, align 4
  %tmpsize = alloca i32, align 4
  %unaligned = alloca i32, align 4
  %ch = alloca i32, align 4
  %planar = alloca i32, align 4
  %planes = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !4897, metadata !1805), !dbg !4898
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !4899, metadata !1805), !dbg !4900
  call void @llvm.dbg.declare(metadata %struct.FramePool** %pool, metadata !4901, metadata !1805), !dbg !4902
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4903
  %internal = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 7, !dbg !4904
  %1 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal, align 8, !dbg !4904
  %pool1 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %1, i32 0, i32 4, !dbg !4905
  %2 = load %struct.FramePool*, %struct.FramePool** %pool1, align 8, !dbg !4905
  store %struct.FramePool* %2, %struct.FramePool** %pool, align 8, !dbg !4902
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4906, metadata !1805), !dbg !4907
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4908, metadata !1805), !dbg !4909
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4910
  %codec_type = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %3, i32 0, i32 2, !dbg !4911
  %4 = load i32, i32* %codec_type, align 4, !dbg !4911
  switch i32 %4, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb93
  ], !dbg !4912

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata [4 x i8*]* %data, metadata !4913, metadata !1805), !dbg !4916
  call void @llvm.dbg.declare(metadata [4 x i32]* %linesize, metadata !4917, metadata !1805), !dbg !4918
  call void @llvm.dbg.declare(metadata [4 x i32]* %size, metadata !4919, metadata !1805), !dbg !4920
  %5 = bitcast [4 x i32]* %size to i8*, !dbg !4920
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 16, i32 16, i1 false), !dbg !4920
  call void @llvm.dbg.declare(metadata i32* %w, metadata !4921, metadata !1805), !dbg !4922
  %6 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !4923
  %width = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %6, i32 0, i32 3, !dbg !4924
  %7 = load i32, i32* %width, align 8, !dbg !4924
  store i32 %7, i32* %w, align 4, !dbg !4922
  call void @llvm.dbg.declare(metadata i32* %h, metadata !4925, metadata !1805), !dbg !4926
  %8 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !4927
  %height = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %8, i32 0, i32 4, !dbg !4928
  %9 = load i32, i32* %height, align 4, !dbg !4928
  store i32 %9, i32* %h, align 4, !dbg !4926
  call void @llvm.dbg.declare(metadata i32* %tmpsize, metadata !4929, metadata !1805), !dbg !4930
  call void @llvm.dbg.declare(metadata i32* %unaligned, metadata !4931, metadata !1805), !dbg !4932
  %10 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !4933
  %format = getelementptr inbounds %struct.FramePool, %struct.FramePool* %10, i32 0, i32 1, !dbg !4935
  %11 = load i32, i32* %format, align 8, !dbg !4935
  %12 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !4936
  %format2 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %12, i32 0, i32 6, !dbg !4937
  %13 = load i32, i32* %format2, align 4, !dbg !4937
  %cmp = icmp eq i32 %11, %13, !dbg !4938
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4939

land.lhs.true:                                    ; preds = %sw.bb
  %14 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !4940
  %width3 = getelementptr inbounds %struct.FramePool, %struct.FramePool* %14, i32 0, i32 2, !dbg !4941
  %15 = load i32, i32* %width3, align 4, !dbg !4941
  %16 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !4942
  %width4 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %16, i32 0, i32 3, !dbg !4943
  %17 = load i32, i32* %width4, align 8, !dbg !4943
  %cmp5 = icmp eq i32 %15, %17, !dbg !4944
  br i1 %cmp5, label %land.lhs.true6, label %if.end, !dbg !4945

land.lhs.true6:                                   ; preds = %land.lhs.true
  %18 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !4946
  %height7 = getelementptr inbounds %struct.FramePool, %struct.FramePool* %18, i32 0, i32 3, !dbg !4948
  %19 = load i32, i32* %height7, align 8, !dbg !4948
  %20 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !4949
  %height8 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %20, i32 0, i32 4, !dbg !4950
  %21 = load i32, i32* %height8, align 4, !dbg !4950
  %cmp9 = icmp eq i32 %19, %21, !dbg !4951
  br i1 %cmp9, label %if.then, label %if.end, !dbg !4952

if.then:                                          ; preds = %land.lhs.true6
  store i32 0, i32* %retval, align 4, !dbg !4954
  br label %return, !dbg !4954

if.end:                                           ; preds = %land.lhs.true6, %land.lhs.true, %sw.bb
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4955
  %23 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !4956
  %stride_align = getelementptr inbounds %struct.FramePool, %struct.FramePool* %23, i32 0, i32 4, !dbg !4957
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %stride_align, i32 0, i32 0, !dbg !4956
  call void @avcodec_align_dimensions2(%struct.AVCodecContext* %22, i32* %w, i32* %h, i32* %arraydecay), !dbg !4958
  br label %do.body, !dbg !4959, !llvm.loop !4960

do.body:                                          ; preds = %do.cond, %if.end
  %arraydecay10 = getelementptr inbounds [4 x i32], [4 x i32]* %linesize, i32 0, i32 0, !dbg !4961
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4963
  %pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %24, i32 0, i32 25, !dbg !4964
  %25 = load i32, i32* %pix_fmt, align 8, !dbg !4964
  %26 = load i32, i32* %w, align 4, !dbg !4965
  %call = call i32 @av_image_fill_linesizes(i32* %arraydecay10, i32 %25, i32 %26), !dbg !4966
  store i32 %call, i32* %ret, align 4, !dbg !4967
  %27 = load i32, i32* %ret, align 4, !dbg !4968
  %cmp11 = icmp slt i32 %27, 0, !dbg !4970
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !4971

if.then12:                                        ; preds = %do.body
  %28 = load i32, i32* %ret, align 4, !dbg !4972
  store i32 %28, i32* %retval, align 4, !dbg !4973
  br label %return, !dbg !4973

if.end13:                                         ; preds = %do.body
  %29 = load i32, i32* %w, align 4, !dbg !4974
  %30 = load i32, i32* %w, align 4, !dbg !4975
  %sub = sub nsw i32 %30, 1, !dbg !4976
  %neg = xor i32 %sub, -1, !dbg !4977
  %and = and i32 %29, %neg, !dbg !4978
  %31 = load i32, i32* %w, align 4, !dbg !4979
  %add = add nsw i32 %31, %and, !dbg !4979
  store i32 %add, i32* %w, align 4, !dbg !4979
  store i32 0, i32* %unaligned, align 4, !dbg !4980
  store i32 0, i32* %i, align 4, !dbg !4981
  br label %for.cond, !dbg !4983

for.cond:                                         ; preds = %for.inc, %if.end13
  %32 = load i32, i32* %i, align 4, !dbg !4984
  %cmp14 = icmp slt i32 %32, 4, !dbg !4987
  br i1 %cmp14, label %for.body, label %for.end, !dbg !4988

for.body:                                         ; preds = %for.cond
  %33 = load i32, i32* %i, align 4, !dbg !4989
  %idxprom = sext i32 %33 to i64, !dbg !4990
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %linesize, i64 0, i64 %idxprom, !dbg !4990
  %34 = load i32, i32* %arrayidx, align 4, !dbg !4990
  %35 = load i32, i32* %i, align 4, !dbg !4991
  %idxprom15 = sext i32 %35 to i64, !dbg !4992
  %36 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !4992
  %stride_align16 = getelementptr inbounds %struct.FramePool, %struct.FramePool* %36, i32 0, i32 4, !dbg !4993
  %arrayidx17 = getelementptr inbounds [8 x i32], [8 x i32]* %stride_align16, i64 0, i64 %idxprom15, !dbg !4992
  %37 = load i32, i32* %arrayidx17, align 4, !dbg !4992
  %rem = srem i32 %34, %37, !dbg !4994
  %38 = load i32, i32* %unaligned, align 4, !dbg !4995
  %or = or i32 %38, %rem, !dbg !4995
  store i32 %or, i32* %unaligned, align 4, !dbg !4995
  br label %for.inc, !dbg !4996

for.inc:                                          ; preds = %for.body
  %39 = load i32, i32* %i, align 4, !dbg !4997
  %inc = add nsw i32 %39, 1, !dbg !4997
  store i32 %inc, i32* %i, align 4, !dbg !4997
  br label %for.cond, !dbg !4999, !llvm.loop !5000

for.end:                                          ; preds = %for.cond
  br label %do.cond, !dbg !5002

do.cond:                                          ; preds = %for.end
  %40 = load i32, i32* %unaligned, align 4, !dbg !5003
  %tobool = icmp ne i32 %40, 0, !dbg !5004
  br i1 %tobool, label %do.body, label %do.end, !dbg !5004, !llvm.loop !4960

do.end:                                           ; preds = %do.cond
  %arraydecay18 = getelementptr inbounds [4 x i8*], [4 x i8*]* %data, i32 0, i32 0, !dbg !5005
  %41 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5006
  %pix_fmt19 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %41, i32 0, i32 25, !dbg !5007
  %42 = load i32, i32* %pix_fmt19, align 8, !dbg !5007
  %43 = load i32, i32* %h, align 4, !dbg !5008
  %arraydecay20 = getelementptr inbounds [4 x i32], [4 x i32]* %linesize, i32 0, i32 0, !dbg !5009
  %call21 = call i32 @av_image_fill_pointers(i8** %arraydecay18, i32 %42, i32 %43, i8* null, i32* %arraydecay20), !dbg !5010
  store i32 %call21, i32* %tmpsize, align 4, !dbg !5011
  %44 = load i32, i32* %tmpsize, align 4, !dbg !5012
  %cmp22 = icmp slt i32 %44, 0, !dbg !5014
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !5015

if.then23:                                        ; preds = %do.end
  %45 = load i32, i32* %tmpsize, align 4, !dbg !5016
  store i32 %45, i32* %retval, align 4, !dbg !5017
  br label %return, !dbg !5017

if.end24:                                         ; preds = %do.end
  store i32 0, i32* %i, align 4, !dbg !5018
  br label %for.cond25, !dbg !5020

for.cond25:                                       ; preds = %for.inc39, %if.end24
  %46 = load i32, i32* %i, align 4, !dbg !5021
  %cmp26 = icmp slt i32 %46, 3, !dbg !5024
  br i1 %cmp26, label %land.rhs, label %land.end, !dbg !5025

land.rhs:                                         ; preds = %for.cond25
  %47 = load i32, i32* %i, align 4, !dbg !5026
  %add27 = add nsw i32 %47, 1, !dbg !5028
  %idxprom28 = sext i32 %add27 to i64, !dbg !5029
  %arrayidx29 = getelementptr inbounds [4 x i8*], [4 x i8*]* %data, i64 0, i64 %idxprom28, !dbg !5029
  %48 = load i8*, i8** %arrayidx29, align 8, !dbg !5029
  %tobool30 = icmp ne i8* %48, null, !dbg !5030
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond25
  %49 = phi i1 [ false, %for.cond25 ], [ %tobool30, %land.rhs ]
  br i1 %49, label %for.body31, label %for.end41, !dbg !5031

for.body31:                                       ; preds = %land.end
  %50 = load i32, i32* %i, align 4, !dbg !5033
  %add32 = add nsw i32 %50, 1, !dbg !5034
  %idxprom33 = sext i32 %add32 to i64, !dbg !5035
  %arrayidx34 = getelementptr inbounds [4 x i8*], [4 x i8*]* %data, i64 0, i64 %idxprom33, !dbg !5035
  %51 = load i8*, i8** %arrayidx34, align 8, !dbg !5035
  %52 = load i32, i32* %i, align 4, !dbg !5036
  %idxprom35 = sext i32 %52 to i64, !dbg !5037
  %arrayidx36 = getelementptr inbounds [4 x i8*], [4 x i8*]* %data, i64 0, i64 %idxprom35, !dbg !5037
  %53 = load i8*, i8** %arrayidx36, align 8, !dbg !5037
  %sub.ptr.lhs.cast = ptrtoint i8* %51 to i64, !dbg !5038
  %sub.ptr.rhs.cast = ptrtoint i8* %53 to i64, !dbg !5038
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5038
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !5035
  %54 = load i32, i32* %i, align 4, !dbg !5039
  %idxprom37 = sext i32 %54 to i64, !dbg !5040
  %arrayidx38 = getelementptr inbounds [4 x i32], [4 x i32]* %size, i64 0, i64 %idxprom37, !dbg !5040
  store i32 %conv, i32* %arrayidx38, align 4, !dbg !5041
  br label %for.inc39, !dbg !5040

for.inc39:                                        ; preds = %for.body31
  %55 = load i32, i32* %i, align 4, !dbg !5042
  %inc40 = add nsw i32 %55, 1, !dbg !5042
  store i32 %inc40, i32* %i, align 4, !dbg !5042
  br label %for.cond25, !dbg !5044, !llvm.loop !5045

for.end41:                                        ; preds = %land.end
  %56 = load i32, i32* %tmpsize, align 4, !dbg !5047
  %conv42 = sext i32 %56 to i64, !dbg !5047
  %57 = load i32, i32* %i, align 4, !dbg !5048
  %idxprom43 = sext i32 %57 to i64, !dbg !5049
  %arrayidx44 = getelementptr inbounds [4 x i8*], [4 x i8*]* %data, i64 0, i64 %idxprom43, !dbg !5049
  %58 = load i8*, i8** %arrayidx44, align 8, !dbg !5049
  %arrayidx45 = getelementptr inbounds [4 x i8*], [4 x i8*]* %data, i64 0, i64 0, !dbg !5050
  %59 = load i8*, i8** %arrayidx45, align 16, !dbg !5050
  %sub.ptr.lhs.cast46 = ptrtoint i8* %58 to i64, !dbg !5051
  %sub.ptr.rhs.cast47 = ptrtoint i8* %59 to i64, !dbg !5051
  %sub.ptr.sub48 = sub i64 %sub.ptr.lhs.cast46, %sub.ptr.rhs.cast47, !dbg !5051
  %sub49 = sub nsw i64 %conv42, %sub.ptr.sub48, !dbg !5052
  %conv50 = trunc i64 %sub49 to i32, !dbg !5047
  %60 = load i32, i32* %i, align 4, !dbg !5053
  %idxprom51 = sext i32 %60 to i64, !dbg !5054
  %arrayidx52 = getelementptr inbounds [4 x i32], [4 x i32]* %size, i64 0, i64 %idxprom51, !dbg !5054
  store i32 %conv50, i32* %arrayidx52, align 4, !dbg !5055
  store i32 0, i32* %i, align 4, !dbg !5056
  br label %for.cond53, !dbg !5058

for.cond53:                                       ; preds = %for.inc84, %for.end41
  %61 = load i32, i32* %i, align 4, !dbg !5059
  %cmp54 = icmp slt i32 %61, 4, !dbg !5062
  br i1 %cmp54, label %for.body56, label %for.end86, !dbg !5063

for.body56:                                       ; preds = %for.cond53
  %62 = load i32, i32* %i, align 4, !dbg !5064
  %idxprom57 = sext i32 %62 to i64, !dbg !5066
  %63 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5066
  %pools = getelementptr inbounds %struct.FramePool, %struct.FramePool* %63, i32 0, i32 0, !dbg !5067
  %arrayidx58 = getelementptr inbounds [4 x %struct.AVBufferPool*], [4 x %struct.AVBufferPool*]* %pools, i64 0, i64 %idxprom57, !dbg !5066
  call void @av_buffer_pool_uninit(%struct.AVBufferPool** %arrayidx58), !dbg !5068
  %64 = load i32, i32* %i, align 4, !dbg !5069
  %idxprom59 = sext i32 %64 to i64, !dbg !5070
  %arrayidx60 = getelementptr inbounds [4 x i32], [4 x i32]* %linesize, i64 0, i64 %idxprom59, !dbg !5070
  %65 = load i32, i32* %arrayidx60, align 4, !dbg !5070
  %66 = load i32, i32* %i, align 4, !dbg !5071
  %idxprom61 = sext i32 %66 to i64, !dbg !5072
  %67 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5072
  %linesize62 = getelementptr inbounds %struct.FramePool, %struct.FramePool* %67, i32 0, i32 5, !dbg !5073
  %arrayidx63 = getelementptr inbounds [4 x i32], [4 x i32]* %linesize62, i64 0, i64 %idxprom61, !dbg !5072
  store i32 %65, i32* %arrayidx63, align 4, !dbg !5074
  %68 = load i32, i32* %i, align 4, !dbg !5075
  %idxprom64 = sext i32 %68 to i64, !dbg !5077
  %arrayidx65 = getelementptr inbounds [4 x i32], [4 x i32]* %size, i64 0, i64 %idxprom64, !dbg !5077
  %69 = load i32, i32* %arrayidx65, align 4, !dbg !5077
  %tobool66 = icmp ne i32 %69, 0, !dbg !5077
  br i1 %tobool66, label %if.then67, label %if.end83, !dbg !5078

if.then67:                                        ; preds = %for.body56
  %70 = load i32, i32* %i, align 4, !dbg !5079
  %idxprom68 = sext i32 %70 to i64, !dbg !5081
  %arrayidx69 = getelementptr inbounds [4 x i32], [4 x i32]* %size, i64 0, i64 %idxprom68, !dbg !5081
  %71 = load i32, i32* %arrayidx69, align 4, !dbg !5081
  %add70 = add nsw i32 %71, 16, !dbg !5082
  %add71 = add nsw i32 %add70, 64, !dbg !5083
  %sub72 = sub nsw i32 %add71, 1, !dbg !5084
  %call73 = call %struct.AVBufferPool* @av_buffer_pool_init(i32 %sub72, %struct.AVBufferRef* (i32)* @av_buffer_allocz), !dbg !5085
  %72 = load i32, i32* %i, align 4, !dbg !5086
  %idxprom74 = sext i32 %72 to i64, !dbg !5087
  %73 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5087
  %pools75 = getelementptr inbounds %struct.FramePool, %struct.FramePool* %73, i32 0, i32 0, !dbg !5088
  %arrayidx76 = getelementptr inbounds [4 x %struct.AVBufferPool*], [4 x %struct.AVBufferPool*]* %pools75, i64 0, i64 %idxprom74, !dbg !5087
  store %struct.AVBufferPool* %call73, %struct.AVBufferPool** %arrayidx76, align 8, !dbg !5089
  %74 = load i32, i32* %i, align 4, !dbg !5090
  %idxprom77 = sext i32 %74 to i64, !dbg !5092
  %75 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5092
  %pools78 = getelementptr inbounds %struct.FramePool, %struct.FramePool* %75, i32 0, i32 0, !dbg !5093
  %arrayidx79 = getelementptr inbounds [4 x %struct.AVBufferPool*], [4 x %struct.AVBufferPool*]* %pools78, i64 0, i64 %idxprom77, !dbg !5092
  %76 = load %struct.AVBufferPool*, %struct.AVBufferPool** %arrayidx79, align 8, !dbg !5092
  %tobool80 = icmp ne %struct.AVBufferPool* %76, null, !dbg !5092
  br i1 %tobool80, label %if.end82, label %if.then81, !dbg !5094

if.then81:                                        ; preds = %if.then67
  store i32 -12, i32* %ret, align 4, !dbg !5095
  br label %fail, !dbg !5097

if.end82:                                         ; preds = %if.then67
  br label %if.end83, !dbg !5098

if.end83:                                         ; preds = %if.end82, %for.body56
  br label %for.inc84, !dbg !5099

for.inc84:                                        ; preds = %if.end83
  %77 = load i32, i32* %i, align 4, !dbg !5100
  %inc85 = add nsw i32 %77, 1, !dbg !5100
  store i32 %inc85, i32* %i, align 4, !dbg !5100
  br label %for.cond53, !dbg !5102, !llvm.loop !5103

for.end86:                                        ; preds = %for.cond53
  %78 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5105
  %format87 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %78, i32 0, i32 6, !dbg !5106
  %79 = load i32, i32* %format87, align 4, !dbg !5106
  %80 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5107
  %format88 = getelementptr inbounds %struct.FramePool, %struct.FramePool* %80, i32 0, i32 1, !dbg !5108
  store i32 %79, i32* %format88, align 8, !dbg !5109
  %81 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5110
  %width89 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %81, i32 0, i32 3, !dbg !5111
  %82 = load i32, i32* %width89, align 8, !dbg !5111
  %83 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5112
  %width90 = getelementptr inbounds %struct.FramePool, %struct.FramePool* %83, i32 0, i32 2, !dbg !5113
  store i32 %82, i32* %width90, align 4, !dbg !5114
  %84 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5115
  %height91 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %84, i32 0, i32 4, !dbg !5116
  %85 = load i32, i32* %height91, align 4, !dbg !5116
  %86 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5117
  %height92 = getelementptr inbounds %struct.FramePool, %struct.FramePool* %86, i32 0, i32 3, !dbg !5118
  store i32 %85, i32* %height92, align 8, !dbg !5119
  br label %sw.epilog, !dbg !5120

sw.bb93:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !5121, metadata !1805), !dbg !5123
  %87 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5124
  %channels = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %87, i32 0, i32 41, !dbg !5125
  %88 = load i32, i32* %channels, align 4, !dbg !5125
  store i32 %88, i32* %ch, align 4, !dbg !5123
  call void @llvm.dbg.declare(metadata i32* %planar, metadata !5126, metadata !1805), !dbg !5127
  %89 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5128
  %format94 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %89, i32 0, i32 6, !dbg !5129
  %90 = load i32, i32* %format94, align 4, !dbg !5129
  %call95 = call i32 @av_sample_fmt_is_planar(i32 %90), !dbg !5130
  store i32 %call95, i32* %planar, align 4, !dbg !5127
  call void @llvm.dbg.declare(metadata i32* %planes, metadata !5131, metadata !1805), !dbg !5132
  %91 = load i32, i32* %planar, align 4, !dbg !5133
  %tobool96 = icmp ne i32 %91, 0, !dbg !5133
  br i1 %tobool96, label %cond.true, label %cond.false, !dbg !5133

cond.true:                                        ; preds = %sw.bb93
  %92 = load i32, i32* %ch, align 4, !dbg !5134
  br label %cond.end, !dbg !5136

cond.false:                                       ; preds = %sw.bb93
  br label %cond.end, !dbg !5137

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %92, %cond.true ], [ 1, %cond.false ], !dbg !5139
  store i32 %cond, i32* %planes, align 4, !dbg !5141
  %93 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5142
  %format97 = getelementptr inbounds %struct.FramePool, %struct.FramePool* %93, i32 0, i32 1, !dbg !5144
  %94 = load i32, i32* %format97, align 8, !dbg !5144
  %95 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5145
  %format98 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %95, i32 0, i32 6, !dbg !5146
  %96 = load i32, i32* %format98, align 4, !dbg !5146
  %cmp99 = icmp eq i32 %94, %96, !dbg !5147
  br i1 %cmp99, label %land.lhs.true101, label %if.end113, !dbg !5148

land.lhs.true101:                                 ; preds = %cond.end
  %97 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5149
  %planes102 = getelementptr inbounds %struct.FramePool, %struct.FramePool* %97, i32 0, i32 6, !dbg !5151
  %98 = load i32, i32* %planes102, align 4, !dbg !5151
  %99 = load i32, i32* %planes, align 4, !dbg !5152
  %cmp103 = icmp eq i32 %98, %99, !dbg !5153
  br i1 %cmp103, label %land.lhs.true105, label %if.end113, !dbg !5154

land.lhs.true105:                                 ; preds = %land.lhs.true101
  %100 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5155
  %channels106 = getelementptr inbounds %struct.FramePool, %struct.FramePool* %100, i32 0, i32 7, !dbg !5156
  %101 = load i32, i32* %channels106, align 8, !dbg !5156
  %102 = load i32, i32* %ch, align 4, !dbg !5157
  %cmp107 = icmp eq i32 %101, %102, !dbg !5158
  br i1 %cmp107, label %land.lhs.true109, label %if.end113, !dbg !5159

land.lhs.true109:                                 ; preds = %land.lhs.true105
  %103 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5160
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %103, i32 0, i32 5, !dbg !5161
  %104 = load i32, i32* %nb_samples, align 8, !dbg !5161
  %105 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5162
  %samples = getelementptr inbounds %struct.FramePool, %struct.FramePool* %105, i32 0, i32 8, !dbg !5163
  %106 = load i32, i32* %samples, align 4, !dbg !5163
  %cmp110 = icmp eq i32 %104, %106, !dbg !5164
  br i1 %cmp110, label %if.then112, label %if.end113, !dbg !5165

if.then112:                                       ; preds = %land.lhs.true109
  store i32 0, i32* %retval, align 4, !dbg !5166
  br label %return, !dbg !5166

if.end113:                                        ; preds = %land.lhs.true109, %land.lhs.true105, %land.lhs.true101, %cond.end
  %107 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5167
  %pools114 = getelementptr inbounds %struct.FramePool, %struct.FramePool* %107, i32 0, i32 0, !dbg !5168
  %arrayidx115 = getelementptr inbounds [4 x %struct.AVBufferPool*], [4 x %struct.AVBufferPool*]* %pools114, i64 0, i64 0, !dbg !5167
  call void @av_buffer_pool_uninit(%struct.AVBufferPool** %arrayidx115), !dbg !5169
  %108 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5170
  %linesize116 = getelementptr inbounds %struct.FramePool, %struct.FramePool* %108, i32 0, i32 5, !dbg !5171
  %arrayidx117 = getelementptr inbounds [4 x i32], [4 x i32]* %linesize116, i64 0, i64 0, !dbg !5170
  %109 = load i32, i32* %ch, align 4, !dbg !5172
  %110 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5173
  %nb_samples118 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %110, i32 0, i32 5, !dbg !5174
  %111 = load i32, i32* %nb_samples118, align 8, !dbg !5174
  %112 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5175
  %format119 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %112, i32 0, i32 6, !dbg !5176
  %113 = load i32, i32* %format119, align 4, !dbg !5176
  %call120 = call i32 @av_samples_get_buffer_size(i32* %arrayidx117, i32 %109, i32 %111, i32 %113, i32 0), !dbg !5177
  store i32 %call120, i32* %ret, align 4, !dbg !5178
  %114 = load i32, i32* %ret, align 4, !dbg !5179
  %cmp121 = icmp slt i32 %114, 0, !dbg !5181
  br i1 %cmp121, label %if.then123, label %if.end124, !dbg !5182

if.then123:                                       ; preds = %if.end113
  br label %fail, !dbg !5183

if.end124:                                        ; preds = %if.end113
  %115 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5184
  %linesize125 = getelementptr inbounds %struct.FramePool, %struct.FramePool* %115, i32 0, i32 5, !dbg !5185
  %arrayidx126 = getelementptr inbounds [4 x i32], [4 x i32]* %linesize125, i64 0, i64 0, !dbg !5184
  %116 = load i32, i32* %arrayidx126, align 4, !dbg !5184
  %call127 = call %struct.AVBufferPool* @av_buffer_pool_init(i32 %116, %struct.AVBufferRef* (i32)* null), !dbg !5186
  %117 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5187
  %pools128 = getelementptr inbounds %struct.FramePool, %struct.FramePool* %117, i32 0, i32 0, !dbg !5188
  %arrayidx129 = getelementptr inbounds [4 x %struct.AVBufferPool*], [4 x %struct.AVBufferPool*]* %pools128, i64 0, i64 0, !dbg !5187
  store %struct.AVBufferPool* %call127, %struct.AVBufferPool** %arrayidx129, align 8, !dbg !5189
  %118 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5190
  %pools130 = getelementptr inbounds %struct.FramePool, %struct.FramePool* %118, i32 0, i32 0, !dbg !5192
  %arrayidx131 = getelementptr inbounds [4 x %struct.AVBufferPool*], [4 x %struct.AVBufferPool*]* %pools130, i64 0, i64 0, !dbg !5190
  %119 = load %struct.AVBufferPool*, %struct.AVBufferPool** %arrayidx131, align 8, !dbg !5190
  %tobool132 = icmp ne %struct.AVBufferPool* %119, null, !dbg !5190
  br i1 %tobool132, label %if.end134, label %if.then133, !dbg !5193

if.then133:                                       ; preds = %if.end124
  store i32 -12, i32* %ret, align 4, !dbg !5194
  br label %fail, !dbg !5196

if.end134:                                        ; preds = %if.end124
  %120 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5197
  %format135 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %120, i32 0, i32 6, !dbg !5198
  %121 = load i32, i32* %format135, align 4, !dbg !5198
  %122 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5199
  %format136 = getelementptr inbounds %struct.FramePool, %struct.FramePool* %122, i32 0, i32 1, !dbg !5200
  store i32 %121, i32* %format136, align 8, !dbg !5201
  %123 = load i32, i32* %planes, align 4, !dbg !5202
  %124 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5203
  %planes137 = getelementptr inbounds %struct.FramePool, %struct.FramePool* %124, i32 0, i32 6, !dbg !5204
  store i32 %123, i32* %planes137, align 4, !dbg !5205
  %125 = load i32, i32* %ch, align 4, !dbg !5206
  %126 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5207
  %channels138 = getelementptr inbounds %struct.FramePool, %struct.FramePool* %126, i32 0, i32 7, !dbg !5208
  store i32 %125, i32* %channels138, align 8, !dbg !5209
  %127 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5210
  %nb_samples139 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %127, i32 0, i32 5, !dbg !5211
  %128 = load i32, i32* %nb_samples139, align 8, !dbg !5211
  %129 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5212
  %samples140 = getelementptr inbounds %struct.FramePool, %struct.FramePool* %129, i32 0, i32 8, !dbg !5213
  store i32 %128, i32* %samples140, align 4, !dbg !5214
  br label %sw.epilog, !dbg !5215

sw.default:                                       ; preds = %entry
  br label %do.body141, !dbg !5216, !llvm.loop !5217

do.body141:                                       ; preds = %sw.default
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i32 0, i32 0), i32 1553), !dbg !5218
  call void @abort() #9, !dbg !5223
  unreachable, !dbg !5225

do.end143:                                        ; No predecessors!
  br label %sw.epilog, !dbg !5226

sw.epilog:                                        ; preds = %do.end143, %if.end134, %for.end86
  store i32 0, i32* %retval, align 4, !dbg !5227
  br label %return, !dbg !5227

fail:                                             ; preds = %if.then133, %if.then123, %if.then81
  store i32 0, i32* %i, align 4, !dbg !5228
  br label %for.cond144, !dbg !5230

for.cond144:                                      ; preds = %for.inc151, %fail
  %130 = load i32, i32* %i, align 4, !dbg !5231
  %cmp145 = icmp slt i32 %130, 4, !dbg !5234
  br i1 %cmp145, label %for.body147, label %for.end153, !dbg !5235

for.body147:                                      ; preds = %for.cond144
  %131 = load i32, i32* %i, align 4, !dbg !5236
  %idxprom148 = sext i32 %131 to i64, !dbg !5237
  %132 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5237
  %pools149 = getelementptr inbounds %struct.FramePool, %struct.FramePool* %132, i32 0, i32 0, !dbg !5238
  %arrayidx150 = getelementptr inbounds [4 x %struct.AVBufferPool*], [4 x %struct.AVBufferPool*]* %pools149, i64 0, i64 %idxprom148, !dbg !5237
  call void @av_buffer_pool_uninit(%struct.AVBufferPool** %arrayidx150), !dbg !5239
  br label %for.inc151, !dbg !5239

for.inc151:                                       ; preds = %for.body147
  %133 = load i32, i32* %i, align 4, !dbg !5240
  %inc152 = add nsw i32 %133, 1, !dbg !5240
  store i32 %inc152, i32* %i, align 4, !dbg !5240
  br label %for.cond144, !dbg !5242, !llvm.loop !5243

for.end153:                                       ; preds = %for.cond144
  %134 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5245
  %format154 = getelementptr inbounds %struct.FramePool, %struct.FramePool* %134, i32 0, i32 1, !dbg !5246
  store i32 -1, i32* %format154, align 8, !dbg !5247
  %135 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5248
  %samples155 = getelementptr inbounds %struct.FramePool, %struct.FramePool* %135, i32 0, i32 8, !dbg !5249
  store i32 0, i32* %samples155, align 4, !dbg !5250
  %136 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5251
  %channels156 = getelementptr inbounds %struct.FramePool, %struct.FramePool* %136, i32 0, i32 7, !dbg !5252
  store i32 0, i32* %channels156, align 8, !dbg !5253
  %137 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5254
  %planes157 = getelementptr inbounds %struct.FramePool, %struct.FramePool* %137, i32 0, i32 6, !dbg !5255
  store i32 0, i32* %planes157, align 4, !dbg !5256
  %138 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5257
  %height158 = getelementptr inbounds %struct.FramePool, %struct.FramePool* %138, i32 0, i32 3, !dbg !5258
  store i32 0, i32* %height158, align 8, !dbg !5259
  %139 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5260
  %width159 = getelementptr inbounds %struct.FramePool, %struct.FramePool* %139, i32 0, i32 2, !dbg !5261
  store i32 0, i32* %width159, align 4, !dbg !5262
  %140 = load i32, i32* %ret, align 4, !dbg !5263
  store i32 %140, i32* %retval, align 4, !dbg !5264
  br label %return, !dbg !5264

return:                                           ; preds = %for.end153, %sw.epilog, %if.then112, %if.then23, %if.then12, %if.then
  %141 = load i32, i32* %retval, align 4, !dbg !5265
  ret i32 %141, !dbg !5265
}

; Function Attrs: nounwind uwtable
define internal i32 @video_get_buffer(%struct.AVCodecContext* %s, %struct.AVFrame* %pic) #0 !dbg !5266 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVCodecContext*, align 8
  %pic.addr = alloca %struct.AVFrame*, align 8
  %pool = alloca %struct.FramePool*, align 8
  %desc = alloca %struct.AVPixFmtDescriptor*, align 8
  %i = alloca i32, align 4
  store %struct.AVCodecContext* %s, %struct.AVCodecContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %s.addr, metadata !5267, metadata !1805), !dbg !5268
  store %struct.AVFrame* %pic, %struct.AVFrame** %pic.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %pic.addr, metadata !5269, metadata !1805), !dbg !5270
  call void @llvm.dbg.declare(metadata %struct.FramePool** %pool, metadata !5271, metadata !1805), !dbg !5272
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !5273
  %internal = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 7, !dbg !5274
  %1 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal, align 8, !dbg !5274
  %pool1 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %1, i32 0, i32 4, !dbg !5275
  %2 = load %struct.FramePool*, %struct.FramePool** %pool1, align 8, !dbg !5275
  store %struct.FramePool* %2, %struct.FramePool** %pool, align 8, !dbg !5272
  call void @llvm.dbg.declare(metadata %struct.AVPixFmtDescriptor** %desc, metadata !5276, metadata !1805), !dbg !5277
  %3 = load %struct.AVFrame*, %struct.AVFrame** %pic.addr, align 8, !dbg !5278
  %format = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %3, i32 0, i32 6, !dbg !5279
  %4 = load i32, i32* %format, align 4, !dbg !5279
  %call = call %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32 %4), !dbg !5280
  store %struct.AVPixFmtDescriptor* %call, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !5277
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5281, metadata !1805), !dbg !5282
  %5 = load %struct.AVFrame*, %struct.AVFrame** %pic.addr, align 8, !dbg !5283
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %5, i32 0, i32 0, !dbg !5285
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 0, !dbg !5283
  %6 = load i8*, i8** %arrayidx, align 8, !dbg !5283
  %tobool = icmp ne i8* %6, null, !dbg !5283
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !5286

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.AVFrame*, %struct.AVFrame** %pic.addr, align 8, !dbg !5287
  %data2 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %7, i32 0, i32 0, !dbg !5289
  %arrayidx3 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data2, i64 0, i64 1, !dbg !5287
  %8 = load i8*, i8** %arrayidx3, align 8, !dbg !5287
  %tobool4 = icmp ne i8* %8, null, !dbg !5287
  br i1 %tobool4, label %if.then, label %lor.lhs.false5, !dbg !5290

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %9 = load %struct.AVFrame*, %struct.AVFrame** %pic.addr, align 8, !dbg !5291
  %data6 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %9, i32 0, i32 0, !dbg !5293
  %arrayidx7 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data6, i64 0, i64 2, !dbg !5291
  %10 = load i8*, i8** %arrayidx7, align 8, !dbg !5291
  %tobool8 = icmp ne i8* %10, null, !dbg !5291
  br i1 %tobool8, label %if.then, label %lor.lhs.false9, !dbg !5294

lor.lhs.false9:                                   ; preds = %lor.lhs.false5
  %11 = load %struct.AVFrame*, %struct.AVFrame** %pic.addr, align 8, !dbg !5295
  %data10 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %11, i32 0, i32 0, !dbg !5297
  %arrayidx11 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data10, i64 0, i64 3, !dbg !5295
  %12 = load i8*, i8** %arrayidx11, align 8, !dbg !5295
  %tobool12 = icmp ne i8* %12, null, !dbg !5295
  br i1 %tobool12, label %if.then, label %if.end, !dbg !5298

if.then:                                          ; preds = %lor.lhs.false9, %lor.lhs.false5, %lor.lhs.false, %entry
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !5299
  %14 = bitcast %struct.AVCodecContext* %13 to i8*, !dbg !5299
  call void (i8*, i32, i8*, ...) @av_log(i8* %14, i32 16, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.61, i32 0, i32 0)), !dbg !5301
  store i32 -1, i32* %retval, align 4, !dbg !5302
  br label %return, !dbg !5302

if.end:                                           ; preds = %lor.lhs.false9
  %15 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !5303
  %tobool13 = icmp ne %struct.AVPixFmtDescriptor* %15, null, !dbg !5303
  br i1 %tobool13, label %if.end17, label %if.then14, !dbg !5305

if.then14:                                        ; preds = %if.end
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !5306
  %17 = bitcast %struct.AVCodecContext* %16 to i8*, !dbg !5306
  %18 = load %struct.AVFrame*, %struct.AVFrame** %pic.addr, align 8, !dbg !5308
  %format15 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %18, i32 0, i32 6, !dbg !5309
  %19 = load i32, i32* %format15, align 4, !dbg !5309
  %call16 = call i8* @av_get_pix_fmt_name(i32 %19), !dbg !5310
  call void (i8*, i32, i8*, ...) @av_log(i8* %17, i32 16, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.62, i32 0, i32 0), i8* %call16), !dbg !5311
  store i32 -22, i32* %retval, align 4, !dbg !5312
  br label %return, !dbg !5312

if.end17:                                         ; preds = %if.end
  %20 = load %struct.AVFrame*, %struct.AVFrame** %pic.addr, align 8, !dbg !5313
  %data18 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %20, i32 0, i32 0, !dbg !5314
  %arraydecay = getelementptr inbounds [8 x i8*], [8 x i8*]* %data18, i32 0, i32 0, !dbg !5315
  %21 = bitcast i8** %arraydecay to i8*, !dbg !5315
  call void @llvm.memset.p0i8.i64(i8* %21, i8 0, i64 64, i32 8, i1 false), !dbg !5315
  %22 = load %struct.AVFrame*, %struct.AVFrame** %pic.addr, align 8, !dbg !5316
  %data19 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %22, i32 0, i32 0, !dbg !5317
  %arraydecay20 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data19, i32 0, i32 0, !dbg !5316
  %23 = load %struct.AVFrame*, %struct.AVFrame** %pic.addr, align 8, !dbg !5318
  %extended_data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %23, i32 0, i32 2, !dbg !5319
  store i8** %arraydecay20, i8*** %extended_data, align 8, !dbg !5320
  store i32 0, i32* %i, align 4, !dbg !5321
  br label %for.cond, !dbg !5323

for.cond:                                         ; preds = %for.inc, %if.end17
  %24 = load i32, i32* %i, align 4, !dbg !5324
  %cmp = icmp slt i32 %24, 4, !dbg !5327
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5328

land.rhs:                                         ; preds = %for.cond
  %25 = load i32, i32* %i, align 4, !dbg !5329
  %idxprom = sext i32 %25 to i64, !dbg !5331
  %26 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5331
  %pools = getelementptr inbounds %struct.FramePool, %struct.FramePool* %26, i32 0, i32 0, !dbg !5332
  %arrayidx21 = getelementptr inbounds [4 x %struct.AVBufferPool*], [4 x %struct.AVBufferPool*]* %pools, i64 0, i64 %idxprom, !dbg !5331
  %27 = load %struct.AVBufferPool*, %struct.AVBufferPool** %arrayidx21, align 8, !dbg !5331
  %tobool22 = icmp ne %struct.AVBufferPool* %27, null, !dbg !5333
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %28 = phi i1 [ false, %for.cond ], [ %tobool22, %land.rhs ]
  br i1 %28, label %for.body, label %for.end, !dbg !5334

for.body:                                         ; preds = %land.end
  %29 = load i32, i32* %i, align 4, !dbg !5336
  %idxprom23 = sext i32 %29 to i64, !dbg !5338
  %30 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5338
  %linesize = getelementptr inbounds %struct.FramePool, %struct.FramePool* %30, i32 0, i32 5, !dbg !5339
  %arrayidx24 = getelementptr inbounds [4 x i32], [4 x i32]* %linesize, i64 0, i64 %idxprom23, !dbg !5338
  %31 = load i32, i32* %arrayidx24, align 4, !dbg !5338
  %32 = load i32, i32* %i, align 4, !dbg !5340
  %idxprom25 = sext i32 %32 to i64, !dbg !5341
  %33 = load %struct.AVFrame*, %struct.AVFrame** %pic.addr, align 8, !dbg !5341
  %linesize26 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %33, i32 0, i32 1, !dbg !5342
  %arrayidx27 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize26, i64 0, i64 %idxprom25, !dbg !5341
  store i32 %31, i32* %arrayidx27, align 4, !dbg !5343
  %34 = load i32, i32* %i, align 4, !dbg !5344
  %idxprom28 = sext i32 %34 to i64, !dbg !5345
  %35 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5345
  %pools29 = getelementptr inbounds %struct.FramePool, %struct.FramePool* %35, i32 0, i32 0, !dbg !5346
  %arrayidx30 = getelementptr inbounds [4 x %struct.AVBufferPool*], [4 x %struct.AVBufferPool*]* %pools29, i64 0, i64 %idxprom28, !dbg !5345
  %36 = load %struct.AVBufferPool*, %struct.AVBufferPool** %arrayidx30, align 8, !dbg !5345
  %call31 = call %struct.AVBufferRef* @av_buffer_pool_get(%struct.AVBufferPool* %36), !dbg !5347
  %37 = load i32, i32* %i, align 4, !dbg !5348
  %idxprom32 = sext i32 %37 to i64, !dbg !5349
  %38 = load %struct.AVFrame*, %struct.AVFrame** %pic.addr, align 8, !dbg !5349
  %buf = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %38, i32 0, i32 25, !dbg !5350
  %arrayidx33 = getelementptr inbounds [8 x %struct.AVBufferRef*], [8 x %struct.AVBufferRef*]* %buf, i64 0, i64 %idxprom32, !dbg !5349
  store %struct.AVBufferRef* %call31, %struct.AVBufferRef** %arrayidx33, align 8, !dbg !5351
  %39 = load i32, i32* %i, align 4, !dbg !5352
  %idxprom34 = sext i32 %39 to i64, !dbg !5354
  %40 = load %struct.AVFrame*, %struct.AVFrame** %pic.addr, align 8, !dbg !5354
  %buf35 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %40, i32 0, i32 25, !dbg !5355
  %arrayidx36 = getelementptr inbounds [8 x %struct.AVBufferRef*], [8 x %struct.AVBufferRef*]* %buf35, i64 0, i64 %idxprom34, !dbg !5354
  %41 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx36, align 8, !dbg !5354
  %tobool37 = icmp ne %struct.AVBufferRef* %41, null, !dbg !5354
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !5356

if.then38:                                        ; preds = %for.body
  br label %fail, !dbg !5357

if.end39:                                         ; preds = %for.body
  %42 = load i32, i32* %i, align 4, !dbg !5358
  %idxprom40 = sext i32 %42 to i64, !dbg !5359
  %43 = load %struct.AVFrame*, %struct.AVFrame** %pic.addr, align 8, !dbg !5359
  %buf41 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %43, i32 0, i32 25, !dbg !5360
  %arrayidx42 = getelementptr inbounds [8 x %struct.AVBufferRef*], [8 x %struct.AVBufferRef*]* %buf41, i64 0, i64 %idxprom40, !dbg !5359
  %44 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx42, align 8, !dbg !5359
  %data43 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %44, i32 0, i32 1, !dbg !5361
  %45 = load i8*, i8** %data43, align 8, !dbg !5361
  %46 = load i32, i32* %i, align 4, !dbg !5362
  %idxprom44 = sext i32 %46 to i64, !dbg !5363
  %47 = load %struct.AVFrame*, %struct.AVFrame** %pic.addr, align 8, !dbg !5363
  %data45 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %47, i32 0, i32 0, !dbg !5364
  %arrayidx46 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data45, i64 0, i64 %idxprom44, !dbg !5363
  store i8* %45, i8** %arrayidx46, align 8, !dbg !5365
  br label %for.inc, !dbg !5366

for.inc:                                          ; preds = %if.end39
  %48 = load i32, i32* %i, align 4, !dbg !5367
  %inc = add nsw i32 %48, 1, !dbg !5367
  store i32 %inc, i32* %i, align 4, !dbg !5367
  br label %for.cond, !dbg !5369, !llvm.loop !5370

for.end:                                          ; preds = %land.end
  br label %for.cond47, !dbg !5372

for.cond47:                                       ; preds = %for.inc56, %for.end
  %49 = load i32, i32* %i, align 4, !dbg !5373
  %cmp48 = icmp slt i32 %49, 8, !dbg !5377
  br i1 %cmp48, label %for.body49, label %for.end58, !dbg !5378

for.body49:                                       ; preds = %for.cond47
  %50 = load i32, i32* %i, align 4, !dbg !5379
  %idxprom50 = sext i32 %50 to i64, !dbg !5381
  %51 = load %struct.AVFrame*, %struct.AVFrame** %pic.addr, align 8, !dbg !5381
  %data51 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %51, i32 0, i32 0, !dbg !5382
  %arrayidx52 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data51, i64 0, i64 %idxprom50, !dbg !5381
  store i8* null, i8** %arrayidx52, align 8, !dbg !5383
  %52 = load i32, i32* %i, align 4, !dbg !5384
  %idxprom53 = sext i32 %52 to i64, !dbg !5385
  %53 = load %struct.AVFrame*, %struct.AVFrame** %pic.addr, align 8, !dbg !5385
  %linesize54 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %53, i32 0, i32 1, !dbg !5386
  %arrayidx55 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize54, i64 0, i64 %idxprom53, !dbg !5385
  store i32 0, i32* %arrayidx55, align 4, !dbg !5387
  br label %for.inc56, !dbg !5388

for.inc56:                                        ; preds = %for.body49
  %54 = load i32, i32* %i, align 4, !dbg !5389
  %inc57 = add nsw i32 %54, 1, !dbg !5389
  store i32 %inc57, i32* %i, align 4, !dbg !5389
  br label %for.cond47, !dbg !5391, !llvm.loop !5392

for.end58:                                        ; preds = %for.cond47
  %55 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !5393
  %flags = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %55, i32 0, i32 4, !dbg !5395
  %56 = load i64, i64* %flags, align 8, !dbg !5395
  %and = and i64 %56, 2, !dbg !5396
  %tobool59 = icmp ne i64 %and, 0, !dbg !5396
  br i1 %tobool59, label %if.then67, label %lor.lhs.false60, !dbg !5397

lor.lhs.false60:                                  ; preds = %for.end58
  %57 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !5398
  %flags61 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %57, i32 0, i32 4, !dbg !5399
  %58 = load i64, i64* %flags61, align 8, !dbg !5399
  %and62 = and i64 %58, 64, !dbg !5400
  %tobool63 = icmp ne i64 %and62, 0, !dbg !5400
  br i1 %tobool63, label %land.lhs.true, label %if.end72, !dbg !5401

land.lhs.true:                                    ; preds = %lor.lhs.false60
  %59 = load %struct.AVFrame*, %struct.AVFrame** %pic.addr, align 8, !dbg !5402
  %data64 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %59, i32 0, i32 0, !dbg !5404
  %arrayidx65 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data64, i64 0, i64 1, !dbg !5402
  %60 = load i8*, i8** %arrayidx65, align 8, !dbg !5402
  %tobool66 = icmp ne i8* %60, null, !dbg !5402
  br i1 %tobool66, label %if.then67, label %if.end72, !dbg !5405

if.then67:                                        ; preds = %land.lhs.true, %for.end58
  %61 = load %struct.AVFrame*, %struct.AVFrame** %pic.addr, align 8, !dbg !5407
  %data68 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %61, i32 0, i32 0, !dbg !5408
  %arrayidx69 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data68, i64 0, i64 1, !dbg !5407
  %62 = load i8*, i8** %arrayidx69, align 8, !dbg !5407
  %63 = bitcast i8* %62 to i32*, !dbg !5409
  %64 = load %struct.AVFrame*, %struct.AVFrame** %pic.addr, align 8, !dbg !5410
  %format70 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %64, i32 0, i32 6, !dbg !5411
  %65 = load i32, i32* %format70, align 4, !dbg !5411
  %call71 = call i32 @avpriv_set_systematic_pal2(i32* %63, i32 %65), !dbg !5412
  br label %if.end72, !dbg !5412

if.end72:                                         ; preds = %if.then67, %land.lhs.true, %lor.lhs.false60
  %66 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !5413
  %debug = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %66, i32 0, i32 134, !dbg !5415
  %67 = load i32, i32* %debug, align 4, !dbg !5415
  %and73 = and i32 %67, 32768, !dbg !5416
  %tobool74 = icmp ne i32 %and73, 0, !dbg !5416
  br i1 %tobool74, label %if.then75, label %if.end76, !dbg !5417

if.then75:                                        ; preds = %if.end72
  %68 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !5418
  %69 = bitcast %struct.AVCodecContext* %68 to i8*, !dbg !5418
  %70 = load %struct.AVFrame*, %struct.AVFrame** %pic.addr, align 8, !dbg !5419
  call void (i8*, i32, i8*, ...) @av_log(i8* %69, i32 48, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.63, i32 0, i32 0), %struct.AVFrame* %70), !dbg !5420
  br label %if.end76, !dbg !5420

if.end76:                                         ; preds = %if.then75, %if.end72
  store i32 0, i32* %retval, align 4, !dbg !5421
  br label %return, !dbg !5421

fail:                                             ; preds = %if.then38
  %71 = load %struct.AVFrame*, %struct.AVFrame** %pic.addr, align 8, !dbg !5422
  call void @av_frame_unref(%struct.AVFrame* %71), !dbg !5423
  store i32 -12, i32* %retval, align 4, !dbg !5424
  br label %return, !dbg !5424

return:                                           ; preds = %fail, %if.end76, %if.then14, %if.then
  %72 = load i32, i32* %retval, align 4, !dbg !5425
  ret i32 %72, !dbg !5425
}

; Function Attrs: nounwind uwtable
define internal i32 @audio_get_buffer(%struct.AVCodecContext* %avctx, %struct.AVFrame* %frame) #0 !dbg !5426 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %pool = alloca %struct.FramePool*, align 8
  %planes = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !5427, metadata !1805), !dbg !5428
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !5429, metadata !1805), !dbg !5430
  call void @llvm.dbg.declare(metadata %struct.FramePool** %pool, metadata !5431, metadata !1805), !dbg !5432
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5433
  %internal = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 7, !dbg !5434
  %1 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal, align 8, !dbg !5434
  %pool1 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %1, i32 0, i32 4, !dbg !5435
  %2 = load %struct.FramePool*, %struct.FramePool** %pool1, align 8, !dbg !5435
  store %struct.FramePool* %2, %struct.FramePool** %pool, align 8, !dbg !5432
  call void @llvm.dbg.declare(metadata i32* %planes, metadata !5436, metadata !1805), !dbg !5437
  %3 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5438
  %planes2 = getelementptr inbounds %struct.FramePool, %struct.FramePool* %3, i32 0, i32 6, !dbg !5439
  %4 = load i32, i32* %planes2, align 4, !dbg !5439
  store i32 %4, i32* %planes, align 4, !dbg !5437
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5440, metadata !1805), !dbg !5441
  %5 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5442
  %linesize = getelementptr inbounds %struct.FramePool, %struct.FramePool* %5, i32 0, i32 5, !dbg !5443
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %linesize, i64 0, i64 0, !dbg !5442
  %6 = load i32, i32* %arrayidx, align 4, !dbg !5442
  %7 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5444
  %linesize3 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %7, i32 0, i32 1, !dbg !5445
  %arrayidx4 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize3, i64 0, i64 0, !dbg !5444
  store i32 %6, i32* %arrayidx4, align 8, !dbg !5446
  %8 = load i32, i32* %planes, align 4, !dbg !5447
  %cmp = icmp sgt i32 %8, 8, !dbg !5449
  br i1 %cmp, label %if.then, label %if.else, !dbg !5450

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %planes, align 4, !dbg !5451
  %conv = sext i32 %9 to i64, !dbg !5451
  %call = call i8* @av_mallocz_array(i64 %conv, i64 8), !dbg !5453
  %10 = bitcast i8* %call to i8**, !dbg !5453
  %11 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5454
  %extended_data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %11, i32 0, i32 2, !dbg !5455
  store i8** %10, i8*** %extended_data, align 8, !dbg !5456
  %12 = load i32, i32* %planes, align 4, !dbg !5457
  %sub = sub nsw i32 %12, 8, !dbg !5458
  %13 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5459
  %nb_extended_buf = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %13, i32 0, i32 27, !dbg !5460
  store i32 %sub, i32* %nb_extended_buf, align 8, !dbg !5461
  %14 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5462
  %nb_extended_buf5 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %14, i32 0, i32 27, !dbg !5463
  %15 = load i32, i32* %nb_extended_buf5, align 8, !dbg !5463
  %conv6 = sext i32 %15 to i64, !dbg !5462
  %call7 = call i8* @av_mallocz_array(i64 %conv6, i64 8), !dbg !5464
  %16 = bitcast i8* %call7 to %struct.AVBufferRef**, !dbg !5464
  %17 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5465
  %extended_buf = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %17, i32 0, i32 26, !dbg !5466
  store %struct.AVBufferRef** %16, %struct.AVBufferRef*** %extended_buf, align 8, !dbg !5467
  %18 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5468
  %extended_data8 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %18, i32 0, i32 2, !dbg !5470
  %19 = load i8**, i8*** %extended_data8, align 8, !dbg !5470
  %tobool = icmp ne i8** %19, null, !dbg !5468
  br i1 %tobool, label %lor.lhs.false, label %if.then11, !dbg !5471

lor.lhs.false:                                    ; preds = %if.then
  %20 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5472
  %extended_buf9 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %20, i32 0, i32 26, !dbg !5474
  %21 = load %struct.AVBufferRef**, %struct.AVBufferRef*** %extended_buf9, align 8, !dbg !5474
  %tobool10 = icmp ne %struct.AVBufferRef** %21, null, !dbg !5472
  br i1 %tobool10, label %if.end, label %if.then11, !dbg !5475

if.then11:                                        ; preds = %lor.lhs.false, %if.then
  %22 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5476
  %extended_data12 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %22, i32 0, i32 2, !dbg !5478
  %23 = bitcast i8*** %extended_data12 to i8*, !dbg !5479
  call void @av_freep(i8* %23), !dbg !5480
  %24 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5481
  %extended_buf13 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %24, i32 0, i32 26, !dbg !5482
  %25 = bitcast %struct.AVBufferRef*** %extended_buf13 to i8*, !dbg !5483
  call void @av_freep(i8* %25), !dbg !5484
  store i32 -12, i32* %retval, align 4, !dbg !5485
  br label %return, !dbg !5485

if.end:                                           ; preds = %lor.lhs.false
  br label %if.end20, !dbg !5486

if.else:                                          ; preds = %entry
  %26 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5487
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %26, i32 0, i32 0, !dbg !5489
  %arraydecay = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i32 0, i32 0, !dbg !5487
  %27 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5490
  %extended_data14 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %27, i32 0, i32 2, !dbg !5491
  store i8** %arraydecay, i8*** %extended_data14, align 8, !dbg !5492
  br label %do.body, !dbg !5493, !llvm.loop !5494

do.body:                                          ; preds = %if.else
  %28 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5495
  %nb_extended_buf15 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %28, i32 0, i32 27, !dbg !5499
  %29 = load i32, i32* %nb_extended_buf15, align 8, !dbg !5499
  %cmp16 = icmp eq i32 %29, 0, !dbg !5500
  br i1 %cmp16, label %if.end19, label %if.then18, !dbg !5501

if.then18:                                        ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i32 0, i32 0), i32 1585), !dbg !5502
  call void @abort() #9, !dbg !5505
  unreachable, !dbg !5507

if.end19:                                         ; preds = %do.body
  br label %do.end, !dbg !5508

do.end:                                           ; preds = %if.end19
  br label %if.end20

if.end20:                                         ; preds = %do.end, %if.end
  store i32 0, i32* %i, align 4, !dbg !5510
  br label %for.cond, !dbg !5512

for.cond:                                         ; preds = %for.inc, %if.end20
  %30 = load i32, i32* %i, align 4, !dbg !5513
  %31 = load i32, i32* %planes, align 4, !dbg !5516
  %cmp21 = icmp sgt i32 %31, 8, !dbg !5517
  br i1 %cmp21, label %cond.true, label %cond.false, !dbg !5518

cond.true:                                        ; preds = %for.cond
  br label %cond.end, !dbg !5519

cond.false:                                       ; preds = %for.cond
  %32 = load i32, i32* %planes, align 4, !dbg !5521
  br label %cond.end, !dbg !5523

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 8, %cond.true ], [ %32, %cond.false ], !dbg !5524
  %cmp23 = icmp slt i32 %30, %cond, !dbg !5526
  br i1 %cmp23, label %for.body, label %for.end, !dbg !5527

for.body:                                         ; preds = %cond.end
  %33 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5528
  %pools = getelementptr inbounds %struct.FramePool, %struct.FramePool* %33, i32 0, i32 0, !dbg !5530
  %arrayidx25 = getelementptr inbounds [4 x %struct.AVBufferPool*], [4 x %struct.AVBufferPool*]* %pools, i64 0, i64 0, !dbg !5528
  %34 = load %struct.AVBufferPool*, %struct.AVBufferPool** %arrayidx25, align 8, !dbg !5528
  %call26 = call %struct.AVBufferRef* @av_buffer_pool_get(%struct.AVBufferPool* %34), !dbg !5531
  %35 = load i32, i32* %i, align 4, !dbg !5532
  %idxprom = sext i32 %35 to i64, !dbg !5533
  %36 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5533
  %buf = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %36, i32 0, i32 25, !dbg !5534
  %arrayidx27 = getelementptr inbounds [8 x %struct.AVBufferRef*], [8 x %struct.AVBufferRef*]* %buf, i64 0, i64 %idxprom, !dbg !5533
  store %struct.AVBufferRef* %call26, %struct.AVBufferRef** %arrayidx27, align 8, !dbg !5535
  %37 = load i32, i32* %i, align 4, !dbg !5536
  %idxprom28 = sext i32 %37 to i64, !dbg !5538
  %38 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5538
  %buf29 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %38, i32 0, i32 25, !dbg !5539
  %arrayidx30 = getelementptr inbounds [8 x %struct.AVBufferRef*], [8 x %struct.AVBufferRef*]* %buf29, i64 0, i64 %idxprom28, !dbg !5538
  %39 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx30, align 8, !dbg !5538
  %tobool31 = icmp ne %struct.AVBufferRef* %39, null, !dbg !5538
  br i1 %tobool31, label %if.end33, label %if.then32, !dbg !5540

if.then32:                                        ; preds = %for.body
  br label %fail, !dbg !5541

if.end33:                                         ; preds = %for.body
  %40 = load i32, i32* %i, align 4, !dbg !5542
  %idxprom34 = sext i32 %40 to i64, !dbg !5543
  %41 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5543
  %buf35 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %41, i32 0, i32 25, !dbg !5544
  %arrayidx36 = getelementptr inbounds [8 x %struct.AVBufferRef*], [8 x %struct.AVBufferRef*]* %buf35, i64 0, i64 %idxprom34, !dbg !5543
  %42 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx36, align 8, !dbg !5543
  %data37 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %42, i32 0, i32 1, !dbg !5545
  %43 = load i8*, i8** %data37, align 8, !dbg !5545
  %44 = load i32, i32* %i, align 4, !dbg !5546
  %idxprom38 = sext i32 %44 to i64, !dbg !5547
  %45 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5547
  %data39 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %45, i32 0, i32 0, !dbg !5548
  %arrayidx40 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data39, i64 0, i64 %idxprom38, !dbg !5547
  store i8* %43, i8** %arrayidx40, align 8, !dbg !5549
  %46 = load i32, i32* %i, align 4, !dbg !5550
  %idxprom41 = sext i32 %46 to i64, !dbg !5551
  %47 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5551
  %extended_data42 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %47, i32 0, i32 2, !dbg !5552
  %48 = load i8**, i8*** %extended_data42, align 8, !dbg !5552
  %arrayidx43 = getelementptr inbounds i8*, i8** %48, i64 %idxprom41, !dbg !5551
  store i8* %43, i8** %arrayidx43, align 8, !dbg !5553
  br label %for.inc, !dbg !5554

for.inc:                                          ; preds = %if.end33
  %49 = load i32, i32* %i, align 4, !dbg !5555
  %inc = add nsw i32 %49, 1, !dbg !5555
  store i32 %inc, i32* %i, align 4, !dbg !5555
  br label %for.cond, !dbg !5557, !llvm.loop !5558

for.end:                                          ; preds = %cond.end
  store i32 0, i32* %i, align 4, !dbg !5560
  br label %for.cond44, !dbg !5562

for.cond44:                                       ; preds = %for.inc68, %for.end
  %50 = load i32, i32* %i, align 4, !dbg !5563
  %51 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5566
  %nb_extended_buf45 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %51, i32 0, i32 27, !dbg !5567
  %52 = load i32, i32* %nb_extended_buf45, align 8, !dbg !5567
  %cmp46 = icmp slt i32 %50, %52, !dbg !5568
  br i1 %cmp46, label %for.body48, label %for.end70, !dbg !5569

for.body48:                                       ; preds = %for.cond44
  %53 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5570
  %pools49 = getelementptr inbounds %struct.FramePool, %struct.FramePool* %53, i32 0, i32 0, !dbg !5572
  %arrayidx50 = getelementptr inbounds [4 x %struct.AVBufferPool*], [4 x %struct.AVBufferPool*]* %pools49, i64 0, i64 0, !dbg !5570
  %54 = load %struct.AVBufferPool*, %struct.AVBufferPool** %arrayidx50, align 8, !dbg !5570
  %call51 = call %struct.AVBufferRef* @av_buffer_pool_get(%struct.AVBufferPool* %54), !dbg !5573
  %55 = load i32, i32* %i, align 4, !dbg !5574
  %idxprom52 = sext i32 %55 to i64, !dbg !5575
  %56 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5575
  %extended_buf53 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %56, i32 0, i32 26, !dbg !5576
  %57 = load %struct.AVBufferRef**, %struct.AVBufferRef*** %extended_buf53, align 8, !dbg !5576
  %arrayidx54 = getelementptr inbounds %struct.AVBufferRef*, %struct.AVBufferRef** %57, i64 %idxprom52, !dbg !5575
  store %struct.AVBufferRef* %call51, %struct.AVBufferRef** %arrayidx54, align 8, !dbg !5577
  %58 = load i32, i32* %i, align 4, !dbg !5578
  %idxprom55 = sext i32 %58 to i64, !dbg !5580
  %59 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5580
  %extended_buf56 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %59, i32 0, i32 26, !dbg !5581
  %60 = load %struct.AVBufferRef**, %struct.AVBufferRef*** %extended_buf56, align 8, !dbg !5581
  %arrayidx57 = getelementptr inbounds %struct.AVBufferRef*, %struct.AVBufferRef** %60, i64 %idxprom55, !dbg !5580
  %61 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx57, align 8, !dbg !5580
  %tobool58 = icmp ne %struct.AVBufferRef* %61, null, !dbg !5580
  br i1 %tobool58, label %if.end60, label %if.then59, !dbg !5582

if.then59:                                        ; preds = %for.body48
  br label %fail, !dbg !5583

if.end60:                                         ; preds = %for.body48
  %62 = load i32, i32* %i, align 4, !dbg !5584
  %idxprom61 = sext i32 %62 to i64, !dbg !5585
  %63 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5585
  %extended_buf62 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %63, i32 0, i32 26, !dbg !5586
  %64 = load %struct.AVBufferRef**, %struct.AVBufferRef*** %extended_buf62, align 8, !dbg !5586
  %arrayidx63 = getelementptr inbounds %struct.AVBufferRef*, %struct.AVBufferRef** %64, i64 %idxprom61, !dbg !5585
  %65 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx63, align 8, !dbg !5585
  %data64 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %65, i32 0, i32 1, !dbg !5587
  %66 = load i8*, i8** %data64, align 8, !dbg !5587
  %67 = load i32, i32* %i, align 4, !dbg !5588
  %add = add nsw i32 %67, 8, !dbg !5589
  %idxprom65 = sext i32 %add to i64, !dbg !5590
  %68 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5590
  %extended_data66 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %68, i32 0, i32 2, !dbg !5591
  %69 = load i8**, i8*** %extended_data66, align 8, !dbg !5591
  %arrayidx67 = getelementptr inbounds i8*, i8** %69, i64 %idxprom65, !dbg !5590
  store i8* %66, i8** %arrayidx67, align 8, !dbg !5592
  br label %for.inc68, !dbg !5593

for.inc68:                                        ; preds = %if.end60
  %70 = load i32, i32* %i, align 4, !dbg !5594
  %inc69 = add nsw i32 %70, 1, !dbg !5594
  store i32 %inc69, i32* %i, align 4, !dbg !5594
  br label %for.cond44, !dbg !5596, !llvm.loop !5597

for.end70:                                        ; preds = %for.cond44
  %71 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5599
  %debug = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %71, i32 0, i32 134, !dbg !5601
  %72 = load i32, i32* %debug, align 4, !dbg !5601
  %and = and i32 %72, 32768, !dbg !5602
  %tobool71 = icmp ne i32 %and, 0, !dbg !5602
  br i1 %tobool71, label %if.then72, label %if.end73, !dbg !5603

if.then72:                                        ; preds = %for.end70
  %73 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5604
  %74 = bitcast %struct.AVCodecContext* %73 to i8*, !dbg !5604
  %75 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5605
  call void (i8*, i32, i8*, ...) @av_log(i8* %74, i32 48, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.65, i32 0, i32 0), %struct.AVFrame* %75), !dbg !5606
  br label %if.end73, !dbg !5606

if.end73:                                         ; preds = %if.then72, %for.end70
  store i32 0, i32* %retval, align 4, !dbg !5607
  br label %return, !dbg !5607

fail:                                             ; preds = %if.then59, %if.then32
  %76 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5608
  call void @av_frame_unref(%struct.AVFrame* %76), !dbg !5609
  store i32 -12, i32* %retval, align 4, !dbg !5610
  br label %return, !dbg !5610

return:                                           ; preds = %fail, %if.end73, %if.then11
  %77 = load i32, i32* %retval, align 4, !dbg !5611
  ret i32 %77, !dbg !5611
}

; Function Attrs: nounwind uwtable
define i32 @ff_decode_frame_props(%struct.AVCodecContext* %avctx, %struct.AVFrame* %frame) #0 !dbg !1209 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %pkt = alloca %struct.AVPacket*, align 8
  %i = alloca i32, align 4
  %size4 = alloca i32, align 4
  %packet_sd = alloca i8*, align 8
  %frame_sd = alloca %struct.AVFrameSideData*, align 8
  %.compoundliteral = alloca %struct.AVRational, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !5612, metadata !1805), !dbg !5613
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !5614, metadata !1805), !dbg !5615
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt, metadata !5616, metadata !1805), !dbg !5617
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5618
  %internal = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 7, !dbg !5619
  %1 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal, align 8, !dbg !5619
  %last_pkt_props = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %1, i32 0, i32 8, !dbg !5620
  %2 = load %struct.AVPacket*, %struct.AVPacket** %last_pkt_props, align 8, !dbg !5620
  store %struct.AVPacket* %2, %struct.AVPacket** %pkt, align 8, !dbg !5617
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5621, metadata !1805), !dbg !5622
  %3 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !5623
  %tobool = icmp ne %struct.AVPacket* %3, null, !dbg !5623
  br i1 %tobool, label %if.then, label %if.end23, !dbg !5625

if.then:                                          ; preds = %entry
  %4 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !5626
  %pts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %4, i32 0, i32 1, !dbg !5628
  %5 = load i64, i64* %pts, align 8, !dbg !5628
  %6 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5629
  %pts1 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %6, i32 0, i32 10, !dbg !5630
  store i64 %5, i64* %pts1, align 8, !dbg !5631
  %7 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !5632
  %pts2 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %7, i32 0, i32 1, !dbg !5633
  %8 = load i64, i64* %pts2, align 8, !dbg !5633
  %9 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5634
  %pkt_pts = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %9, i32 0, i32 11, !dbg !5635
  store i64 %8, i64* %pkt_pts, align 8, !dbg !5636
  %10 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !5637
  %pos = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %10, i32 0, i32 10, !dbg !5638
  %11 = load i64, i64* %pos, align 8, !dbg !5638
  %12 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5639
  %pkt_pos = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %12, i32 0, i32 37, !dbg !5640
  store i64 %11, i64* %pkt_pos, align 8, !dbg !5641
  %13 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !5642
  %duration = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %13, i32 0, i32 9, !dbg !5643
  %14 = load i64, i64* %duration, align 8, !dbg !5643
  %15 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5644
  %pkt_duration = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %15, i32 0, i32 38, !dbg !5645
  store i64 %14, i64* %pkt_duration, align 8, !dbg !5646
  %16 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !5647
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %16, i32 0, i32 4, !dbg !5648
  %17 = load i32, i32* %size, align 8, !dbg !5648
  %18 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5649
  %pkt_size = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %18, i32 0, i32 42, !dbg !5650
  store i32 %17, i32* %pkt_size, align 8, !dbg !5651
  store i32 0, i32* %i, align 4, !dbg !5652
  br label %for.cond, !dbg !5654

for.cond:                                         ; preds = %for.inc, %if.then
  %19 = load i32, i32* %i, align 4, !dbg !5655
  %conv = sext i32 %19 to i64, !dbg !5655
  %cmp = icmp ult i64 %conv, 8, !dbg !5658
  br i1 %cmp, label %for.body, label %for.end, !dbg !5659

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %size4, metadata !5660, metadata !1805), !dbg !5662
  call void @llvm.dbg.declare(metadata i8** %packet_sd, metadata !5663, metadata !1805), !dbg !5664
  %20 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !5665
  %21 = load i32, i32* %i, align 4, !dbg !5666
  %idxprom = sext i32 %21 to i64, !dbg !5667
  %arrayidx = getelementptr inbounds [8 x %struct.anon], [8 x %struct.anon]* @ff_decode_frame_props.sd, i64 0, i64 %idxprom, !dbg !5667
  %packet = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx, i32 0, i32 0, !dbg !5668
  %22 = load i32, i32* %packet, align 8, !dbg !5668
  %call = call i8* @av_packet_get_side_data(%struct.AVPacket* %20, i32 %22, i32* %size4), !dbg !5669
  store i8* %call, i8** %packet_sd, align 8, !dbg !5664
  %23 = load i8*, i8** %packet_sd, align 8, !dbg !5670
  %tobool5 = icmp ne i8* %23, null, !dbg !5670
  br i1 %tobool5, label %if.then6, label %if.end14, !dbg !5672

if.then6:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.AVFrameSideData** %frame_sd, metadata !5673, metadata !1805), !dbg !5675
  %24 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5676
  %25 = load i32, i32* %i, align 4, !dbg !5677
  %idxprom7 = sext i32 %25 to i64, !dbg !5678
  %arrayidx8 = getelementptr inbounds [8 x %struct.anon], [8 x %struct.anon]* @ff_decode_frame_props.sd, i64 0, i64 %idxprom7, !dbg !5678
  %frame9 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx8, i32 0, i32 1, !dbg !5679
  %26 = load i32, i32* %frame9, align 4, !dbg !5679
  %27 = load i32, i32* %size4, align 4, !dbg !5680
  %call10 = call %struct.AVFrameSideData* @av_frame_new_side_data(%struct.AVFrame* %24, i32 %26, i32 %27), !dbg !5681
  store %struct.AVFrameSideData* %call10, %struct.AVFrameSideData** %frame_sd, align 8, !dbg !5675
  %28 = load %struct.AVFrameSideData*, %struct.AVFrameSideData** %frame_sd, align 8, !dbg !5682
  %tobool11 = icmp ne %struct.AVFrameSideData* %28, null, !dbg !5682
  br i1 %tobool11, label %if.end, label %if.then12, !dbg !5684

if.then12:                                        ; preds = %if.then6
  store i32 -12, i32* %retval, align 4, !dbg !5685
  br label %return, !dbg !5685

if.end:                                           ; preds = %if.then6
  %29 = load %struct.AVFrameSideData*, %struct.AVFrameSideData** %frame_sd, align 8, !dbg !5686
  %data = getelementptr inbounds %struct.AVFrameSideData, %struct.AVFrameSideData* %29, i32 0, i32 1, !dbg !5687
  %30 = load i8*, i8** %data, align 8, !dbg !5687
  %31 = load i8*, i8** %packet_sd, align 8, !dbg !5688
  %32 = load i32, i32* %size4, align 4, !dbg !5689
  %conv13 = sext i32 %32 to i64, !dbg !5689
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 %conv13, i32 1, i1 false), !dbg !5690
  br label %if.end14, !dbg !5691

if.end14:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !5692

for.inc:                                          ; preds = %if.end14
  %33 = load i32, i32* %i, align 4, !dbg !5693
  %inc = add nsw i32 %33, 1, !dbg !5693
  store i32 %inc, i32* %i, align 4, !dbg !5693
  br label %for.cond, !dbg !5695, !llvm.loop !5696

for.end:                                          ; preds = %for.cond
  %34 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !5698
  %35 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5699
  %call15 = call i32 @add_metadata_from_side_data(%struct.AVPacket* %34, %struct.AVFrame* %35), !dbg !5700
  %36 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !5701
  %flags = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %36, i32 0, i32 6, !dbg !5703
  %37 = load i32, i32* %flags, align 8, !dbg !5703
  %and = and i32 %37, 4, !dbg !5704
  %tobool16 = icmp ne i32 %and, 0, !dbg !5704
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !5705

if.then17:                                        ; preds = %for.end
  %38 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5706
  %flags18 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %38, i32 0, i32 30, !dbg !5708
  %39 = load i32, i32* %flags18, align 4, !dbg !5709
  %or = or i32 %39, 4, !dbg !5709
  store i32 %or, i32* %flags18, align 4, !dbg !5709
  br label %if.end22, !dbg !5710

if.else:                                          ; preds = %for.end
  %40 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5711
  %flags19 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %40, i32 0, i32 30, !dbg !5713
  %41 = load i32, i32* %flags19, align 4, !dbg !5713
  %and20 = and i32 %41, -5, !dbg !5714
  %42 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5715
  %flags21 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %42, i32 0, i32 30, !dbg !5716
  store i32 %and20, i32* %flags21, align 4, !dbg !5717
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.then17
  br label %if.end23, !dbg !5718

if.end23:                                         ; preds = %if.end22, %entry
  %43 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5719
  %reordered_opaque = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %43, i32 0, i32 136, !dbg !5720
  %44 = load i64, i64* %reordered_opaque, align 8, !dbg !5720
  %45 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5721
  %reordered_opaque24 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %45, i32 0, i32 22, !dbg !5722
  store i64 %44, i64* %reordered_opaque24, align 8, !dbg !5723
  %46 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5724
  %color_primaries = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %46, i32 0, i32 32, !dbg !5726
  %47 = load i32, i32* %color_primaries, align 4, !dbg !5726
  %cmp25 = icmp eq i32 %47, 2, !dbg !5727
  br i1 %cmp25, label %if.then27, label %if.end30, !dbg !5728

if.then27:                                        ; preds = %if.end23
  %48 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5729
  %color_primaries28 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %48, i32 0, i32 75, !dbg !5730
  %49 = load i32, i32* %color_primaries28, align 4, !dbg !5730
  %50 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5731
  %color_primaries29 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %50, i32 0, i32 32, !dbg !5732
  store i32 %49, i32* %color_primaries29, align 4, !dbg !5733
  br label %if.end30, !dbg !5731

if.end30:                                         ; preds = %if.then27, %if.end23
  %51 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5734
  %color_trc = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %51, i32 0, i32 33, !dbg !5736
  %52 = load i32, i32* %color_trc, align 8, !dbg !5736
  %cmp31 = icmp eq i32 %52, 2, !dbg !5737
  br i1 %cmp31, label %if.then33, label %if.end36, !dbg !5738

if.then33:                                        ; preds = %if.end30
  %53 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5739
  %color_trc34 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %53, i32 0, i32 76, !dbg !5740
  %54 = load i32, i32* %color_trc34, align 8, !dbg !5740
  %55 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5741
  %color_trc35 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %55, i32 0, i32 33, !dbg !5742
  store i32 %54, i32* %color_trc35, align 8, !dbg !5743
  br label %if.end36, !dbg !5741

if.end36:                                         ; preds = %if.then33, %if.end30
  %56 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5744
  %colorspace = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %56, i32 0, i32 34, !dbg !5746
  %57 = load i32, i32* %colorspace, align 4, !dbg !5746
  %cmp37 = icmp eq i32 %57, 2, !dbg !5747
  br i1 %cmp37, label %if.then39, label %if.end42, !dbg !5748

if.then39:                                        ; preds = %if.end36
  %58 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5749
  %colorspace40 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %58, i32 0, i32 77, !dbg !5750
  %59 = load i32, i32* %colorspace40, align 4, !dbg !5750
  %60 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5751
  %colorspace41 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %60, i32 0, i32 34, !dbg !5752
  store i32 %59, i32* %colorspace41, align 4, !dbg !5753
  br label %if.end42, !dbg !5751

if.end42:                                         ; preds = %if.then39, %if.end36
  %61 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5754
  %color_range = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %61, i32 0, i32 31, !dbg !5756
  %62 = load i32, i32* %color_range, align 8, !dbg !5756
  %cmp43 = icmp eq i32 %62, 0, !dbg !5757
  br i1 %cmp43, label %if.then45, label %if.end48, !dbg !5758

if.then45:                                        ; preds = %if.end42
  %63 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5759
  %color_range46 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %63, i32 0, i32 78, !dbg !5760
  %64 = load i32, i32* %color_range46, align 8, !dbg !5760
  %65 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5761
  %color_range47 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %65, i32 0, i32 31, !dbg !5762
  store i32 %64, i32* %color_range47, align 8, !dbg !5763
  br label %if.end48, !dbg !5761

if.end48:                                         ; preds = %if.then45, %if.end42
  %66 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5764
  %chroma_location = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %66, i32 0, i32 35, !dbg !5766
  %67 = load i32, i32* %chroma_location, align 8, !dbg !5766
  %cmp49 = icmp eq i32 %67, 0, !dbg !5767
  br i1 %cmp49, label %if.then51, label %if.end53, !dbg !5768

if.then51:                                        ; preds = %if.end48
  %68 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5769
  %chroma_sample_location = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %68, i32 0, i32 79, !dbg !5770
  %69 = load i32, i32* %chroma_sample_location, align 4, !dbg !5770
  %70 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5771
  %chroma_location52 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %70, i32 0, i32 35, !dbg !5772
  store i32 %69, i32* %chroma_location52, align 8, !dbg !5773
  br label %if.end53, !dbg !5771

if.end53:                                         ; preds = %if.then51, %if.end48
  %71 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5774
  %codec = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %71, i32 0, i32 3, !dbg !5775
  %72 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !5775
  %type = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %72, i32 0, i32 2, !dbg !5776
  %73 = load i32, i32* %type, align 8, !dbg !5776
  switch i32 %73, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb76
  ], !dbg !5777

sw.bb:                                            ; preds = %if.end53
  %74 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5778
  %pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %74, i32 0, i32 25, !dbg !5780
  %75 = load i32, i32* %pix_fmt, align 8, !dbg !5780
  %76 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5781
  %format = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %76, i32 0, i32 6, !dbg !5782
  store i32 %75, i32* %format, align 4, !dbg !5783
  %77 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5784
  %sample_aspect_ratio = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %77, i32 0, i32 9, !dbg !5786
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio, i32 0, i32 0, !dbg !5787
  %78 = load i32, i32* %num, align 8, !dbg !5787
  %tobool54 = icmp ne i32 %78, 0, !dbg !5784
  br i1 %tobool54, label %if.end58, label %if.then55, !dbg !5788

if.then55:                                        ; preds = %sw.bb
  %79 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5789
  %sample_aspect_ratio56 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %79, i32 0, i32 9, !dbg !5790
  %80 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5791
  %sample_aspect_ratio57 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %80, i32 0, i32 44, !dbg !5792
  %81 = bitcast %struct.AVRational* %sample_aspect_ratio56 to i8*, !dbg !5792
  %82 = bitcast %struct.AVRational* %sample_aspect_ratio57 to i8*, !dbg !5792
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %81, i8* %82, i64 8, i32 8, i1 false), !dbg !5792
  br label %if.end58, !dbg !5789

if.end58:                                         ; preds = %if.then55, %sw.bb
  %83 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5793
  %width = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %83, i32 0, i32 3, !dbg !5795
  %84 = load i32, i32* %width, align 8, !dbg !5795
  %tobool59 = icmp ne i32 %84, 0, !dbg !5793
  br i1 %tobool59, label %land.lhs.true, label %if.end75, !dbg !5796

land.lhs.true:                                    ; preds = %if.end58
  %85 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5797
  %height = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %85, i32 0, i32 4, !dbg !5799
  %86 = load i32, i32* %height, align 4, !dbg !5799
  %tobool60 = icmp ne i32 %86, 0, !dbg !5797
  br i1 %tobool60, label %land.lhs.true61, label %if.end75, !dbg !5800

land.lhs.true61:                                  ; preds = %land.lhs.true
  %87 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5801
  %width62 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %87, i32 0, i32 3, !dbg !5802
  %88 = load i32, i32* %width62, align 8, !dbg !5802
  %89 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5803
  %height63 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %89, i32 0, i32 4, !dbg !5804
  %90 = load i32, i32* %height63, align 4, !dbg !5804
  %91 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5805
  %sample_aspect_ratio64 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %91, i32 0, i32 9, !dbg !5806
  %92 = bitcast %struct.AVRational* %sample_aspect_ratio64 to i64*, !dbg !5807
  %93 = load i64, i64* %92, align 8, !dbg !5807
  %call65 = call i32 @av_image_check_sar(i32 %88, i32 %90, i64 %93), !dbg !5807
  %cmp66 = icmp slt i32 %call65, 0, !dbg !5808
  br i1 %cmp66, label %if.then68, label %if.end75, !dbg !5809

if.then68:                                        ; preds = %land.lhs.true61
  %94 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5811
  %95 = bitcast %struct.AVCodecContext* %94 to i8*, !dbg !5811
  %96 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5813
  %sample_aspect_ratio69 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %96, i32 0, i32 9, !dbg !5814
  %num70 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio69, i32 0, i32 0, !dbg !5815
  %97 = load i32, i32* %num70, align 8, !dbg !5815
  %98 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5816
  %sample_aspect_ratio71 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %98, i32 0, i32 9, !dbg !5817
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio71, i32 0, i32 1, !dbg !5818
  %99 = load i32, i32* %den, align 4, !dbg !5818
  call void (i8*, i32, i8*, ...) @av_log(i8* %95, i32 24, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22, i32 0, i32 0), i32 %97, i32 %99), !dbg !5819
  %100 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5820
  %sample_aspect_ratio72 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %100, i32 0, i32 9, !dbg !5821
  %num73 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !5822
  store i32 0, i32* %num73, align 4, !dbg !5822
  %den74 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !5822
  store i32 1, i32* %den74, align 4, !dbg !5822
  %101 = bitcast %struct.AVRational* %sample_aspect_ratio72 to i8*, !dbg !5823
  %102 = bitcast %struct.AVRational* %.compoundliteral to i8*, !dbg !5823
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %101, i8* %102, i64 8, i32 4, i1 false), !dbg !5823
  br label %if.end75, !dbg !5824

if.end75:                                         ; preds = %if.then68, %land.lhs.true61, %land.lhs.true, %if.end58
  br label %sw.epilog, !dbg !5825

sw.bb76:                                          ; preds = %if.end53
  %103 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5826
  %sample_rate = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %103, i32 0, i32 23, !dbg !5828
  %104 = load i32, i32* %sample_rate, align 8, !dbg !5828
  %tobool77 = icmp ne i32 %104, 0, !dbg !5826
  br i1 %tobool77, label %if.end81, label %if.then78, !dbg !5829

if.then78:                                        ; preds = %sw.bb76
  %105 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5830
  %sample_rate79 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %105, i32 0, i32 82, !dbg !5831
  %106 = load i32, i32* %sample_rate79, align 8, !dbg !5831
  %107 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5832
  %sample_rate80 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %107, i32 0, i32 23, !dbg !5833
  store i32 %106, i32* %sample_rate80, align 8, !dbg !5834
  br label %if.end81, !dbg !5832

if.end81:                                         ; preds = %if.then78, %sw.bb76
  %108 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5835
  %format82 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %108, i32 0, i32 6, !dbg !5837
  %109 = load i32, i32* %format82, align 4, !dbg !5837
  %cmp83 = icmp slt i32 %109, 0, !dbg !5838
  br i1 %cmp83, label %if.then85, label %if.end87, !dbg !5839

if.then85:                                        ; preds = %if.end81
  %110 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5840
  %sample_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %110, i32 0, i32 84, !dbg !5841
  %111 = load i32, i32* %sample_fmt, align 8, !dbg !5841
  %112 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5842
  %format86 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %112, i32 0, i32 6, !dbg !5843
  store i32 %111, i32* %format86, align 4, !dbg !5844
  br label %if.end87, !dbg !5842

if.end87:                                         ; preds = %if.then85, %if.end81
  %113 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5845
  %channel_layout = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %113, i32 0, i32 24, !dbg !5847
  %114 = load i64, i64* %channel_layout, align 8, !dbg !5847
  %tobool88 = icmp ne i64 %114, 0, !dbg !5845
  br i1 %tobool88, label %if.end109, label %if.then89, !dbg !5848

if.then89:                                        ; preds = %if.end87
  %115 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5849
  %channel_layout90 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %115, i32 0, i32 89, !dbg !5852
  %116 = load i64, i64* %channel_layout90, align 8, !dbg !5852
  %tobool91 = icmp ne i64 %116, 0, !dbg !5849
  br i1 %tobool91, label %if.then92, label %if.else101, !dbg !5853

if.then92:                                        ; preds = %if.then89
  %117 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5854
  %channel_layout93 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %117, i32 0, i32 89, !dbg !5857
  %118 = load i64, i64* %channel_layout93, align 8, !dbg !5857
  %call94 = call i32 @av_get_channel_layout_nb_channels(i64 %118), !dbg !5858
  %119 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5859
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %119, i32 0, i32 83, !dbg !5860
  %120 = load i32, i32* %channels, align 4, !dbg !5860
  %cmp95 = icmp ne i32 %call94, %120, !dbg !5861
  br i1 %cmp95, label %if.then97, label %if.end98, !dbg !5862

if.then97:                                        ; preds = %if.then92
  %121 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5863
  %122 = bitcast %struct.AVCodecContext* %121 to i8*, !dbg !5863
  call void (i8*, i32, i8*, ...) @av_log(i8* %122, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.23, i32 0, i32 0)), !dbg !5865
  store i32 -22, i32* %retval, align 4, !dbg !5866
  br label %return, !dbg !5866

if.end98:                                         ; preds = %if.then92
  %123 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5867
  %channel_layout99 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %123, i32 0, i32 89, !dbg !5868
  %124 = load i64, i64* %channel_layout99, align 8, !dbg !5868
  %125 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5869
  %channel_layout100 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %125, i32 0, i32 24, !dbg !5870
  store i64 %124, i64* %channel_layout100, align 8, !dbg !5871
  br label %if.end108, !dbg !5872

if.else101:                                       ; preds = %if.then89
  %126 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5873
  %channels102 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %126, i32 0, i32 83, !dbg !5876
  %127 = load i32, i32* %channels102, align 4, !dbg !5876
  %cmp103 = icmp ugt i32 %127, 256, !dbg !5877
  br i1 %cmp103, label %if.then105, label %if.end107, !dbg !5878

if.then105:                                       ; preds = %if.else101
  %128 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5879
  %129 = bitcast %struct.AVCodecContext* %128 to i8*, !dbg !5879
  %130 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5881
  %channels106 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %130, i32 0, i32 83, !dbg !5882
  %131 = load i32, i32* %channels106, align 4, !dbg !5882
  call void (i8*, i32, i8*, ...) @av_log(i8* %129, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.24, i32 0, i32 0), i32 %131), !dbg !5883
  store i32 -38, i32* %retval, align 4, !dbg !5884
  br label %return, !dbg !5884

if.end107:                                        ; preds = %if.else101
  br label %if.end108

if.end108:                                        ; preds = %if.end107, %if.end98
  br label %if.end109, !dbg !5885

if.end109:                                        ; preds = %if.end108, %if.end87
  %132 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5886
  %channels110 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %132, i32 0, i32 83, !dbg !5887
  %133 = load i32, i32* %channels110, align 4, !dbg !5887
  %134 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5888
  %channels111 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %134, i32 0, i32 41, !dbg !5889
  store i32 %133, i32* %channels111, align 4, !dbg !5890
  br label %sw.epilog, !dbg !5891

sw.epilog:                                        ; preds = %if.end53, %if.end109, %if.end75
  store i32 0, i32* %retval, align 4, !dbg !5892
  br label %return, !dbg !5892

return:                                           ; preds = %sw.epilog, %if.then105, %if.then97, %if.then12
  %135 = load i32, i32* %retval, align 4, !dbg !5893
  ret i32 %135, !dbg !5893
}

declare i8* @av_packet_get_side_data(%struct.AVPacket*, i32, i32*) #2

declare %struct.AVFrameSideData* @av_frame_new_side_data(%struct.AVFrame*, i32, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @add_metadata_from_side_data(%struct.AVPacket* %avpkt, %struct.AVFrame* %frame) #0 !dbg !5894 {
entry:
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %size = alloca i32, align 4
  %side_metadata = alloca i8*, align 8
  %frame_md = alloca %struct.AVDictionary**, align 8
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !5897, metadata !1805), !dbg !5898
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !5899, metadata !1805), !dbg !5900
  call void @llvm.dbg.declare(metadata i32* %size, metadata !5901, metadata !1805), !dbg !5902
  call void @llvm.dbg.declare(metadata i8** %side_metadata, metadata !5903, metadata !1805), !dbg !5904
  call void @llvm.dbg.declare(metadata %struct.AVDictionary*** %frame_md, metadata !5905, metadata !1805), !dbg !5907
  %0 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5908
  %metadata = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i32 0, i32 39, !dbg !5909
  store %struct.AVDictionary** %metadata, %struct.AVDictionary*** %frame_md, align 8, !dbg !5907
  %1 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !5910
  %call = call i8* @av_packet_get_side_data(%struct.AVPacket* %1, i32 13, i32* %size), !dbg !5911
  store i8* %call, i8** %side_metadata, align 8, !dbg !5912
  %2 = load i8*, i8** %side_metadata, align 8, !dbg !5913
  %3 = load i32, i32* %size, align 4, !dbg !5914
  %4 = load %struct.AVDictionary**, %struct.AVDictionary*** %frame_md, align 8, !dbg !5915
  %call1 = call i32 @av_packet_unpack_dictionary(i8* %2, i32 %3, %struct.AVDictionary** %4), !dbg !5916
  ret i32 %call1, !dbg !5917
}

declare i32 @av_image_check_sar(i32, i32, i64) #2

declare i32 @av_get_channel_layout_nb_channels(i64) #2

; Function Attrs: nounwind uwtable
define i32 @ff_attach_decode_data(%struct.AVFrame* %frame) #0 !dbg !5918 {
entry:
  %retval = alloca i32, align 4
  %frame.addr = alloca %struct.AVFrame*, align 8
  %fdd_buf = alloca %struct.AVBufferRef*, align 8
  %fdd = alloca %struct.FrameDecodeData*, align 8
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !5921, metadata !1805), !dbg !5922
  call void @llvm.dbg.declare(metadata %struct.AVBufferRef** %fdd_buf, metadata !5923, metadata !1805), !dbg !5924
  call void @llvm.dbg.declare(metadata %struct.FrameDecodeData** %fdd, metadata !5925, metadata !1805), !dbg !5926
  %0 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5927
  %private_ref = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i32 0, i32 53, !dbg !5928
  call void @av_buffer_unref(%struct.AVBufferRef** %private_ref), !dbg !5929
  %call = call noalias i8* @av_mallocz(i64 40), !dbg !5930
  %1 = bitcast i8* %call to %struct.FrameDecodeData*, !dbg !5930
  store %struct.FrameDecodeData* %1, %struct.FrameDecodeData** %fdd, align 8, !dbg !5931
  %2 = load %struct.FrameDecodeData*, %struct.FrameDecodeData** %fdd, align 8, !dbg !5932
  %tobool = icmp ne %struct.FrameDecodeData* %2, null, !dbg !5932
  br i1 %tobool, label %if.end, label %if.then, !dbg !5934

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !5935
  br label %return, !dbg !5935

if.end:                                           ; preds = %entry
  %3 = load %struct.FrameDecodeData*, %struct.FrameDecodeData** %fdd, align 8, !dbg !5936
  %4 = bitcast %struct.FrameDecodeData* %3 to i8*, !dbg !5937
  %call1 = call %struct.AVBufferRef* @av_buffer_create(i8* %4, i32 40, void (i8*, i8*)* @decode_data_free, i8* null, i32 1), !dbg !5938
  store %struct.AVBufferRef* %call1, %struct.AVBufferRef** %fdd_buf, align 8, !dbg !5939
  %5 = load %struct.AVBufferRef*, %struct.AVBufferRef** %fdd_buf, align 8, !dbg !5940
  %tobool2 = icmp ne %struct.AVBufferRef* %5, null, !dbg !5940
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !5942

if.then3:                                         ; preds = %if.end
  %6 = bitcast %struct.FrameDecodeData** %fdd to i8*, !dbg !5943
  call void @av_freep(i8* %6), !dbg !5945
  store i32 -12, i32* %retval, align 4, !dbg !5946
  br label %return, !dbg !5946

if.end4:                                          ; preds = %if.end
  %7 = load %struct.AVBufferRef*, %struct.AVBufferRef** %fdd_buf, align 8, !dbg !5947
  %8 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5948
  %private_ref5 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %8, i32 0, i32 53, !dbg !5949
  store %struct.AVBufferRef* %7, %struct.AVBufferRef** %private_ref5, align 8, !dbg !5950
  store i32 0, i32* %retval, align 4, !dbg !5951
  br label %return, !dbg !5951

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !5952
  ret i32 %9, !dbg !5952
}

declare noalias i8* @av_mallocz(i64) #2

declare %struct.AVBufferRef* @av_buffer_create(i8*, i32, void (i8*, i8*)*, i8*, i32) #2

; Function Attrs: nounwind uwtable
define internal void @decode_data_free(i8* %opaque, i8* %data) #0 !dbg !5953 {
entry:
  %opaque.addr = alloca i8*, align 8
  %data.addr = alloca i8*, align 8
  %fdd = alloca %struct.FrameDecodeData*, align 8
  store i8* %opaque, i8** %opaque.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opaque.addr, metadata !5956, metadata !1805), !dbg !5957
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !5958, metadata !1805), !dbg !5959
  call void @llvm.dbg.declare(metadata %struct.FrameDecodeData** %fdd, metadata !5960, metadata !1805), !dbg !5961
  %0 = load i8*, i8** %data.addr, align 8, !dbg !5962
  %1 = bitcast i8* %0 to %struct.FrameDecodeData*, !dbg !5963
  store %struct.FrameDecodeData* %1, %struct.FrameDecodeData** %fdd, align 8, !dbg !5961
  %2 = load %struct.FrameDecodeData*, %struct.FrameDecodeData** %fdd, align 8, !dbg !5964
  %post_process_opaque_free = getelementptr inbounds %struct.FrameDecodeData, %struct.FrameDecodeData* %2, i32 0, i32 2, !dbg !5966
  %3 = load void (i8*)*, void (i8*)** %post_process_opaque_free, align 8, !dbg !5966
  %tobool = icmp ne void (i8*)* %3, null, !dbg !5964
  br i1 %tobool, label %if.then, label %if.end, !dbg !5967

if.then:                                          ; preds = %entry
  %4 = load %struct.FrameDecodeData*, %struct.FrameDecodeData** %fdd, align 8, !dbg !5968
  %post_process_opaque_free1 = getelementptr inbounds %struct.FrameDecodeData, %struct.FrameDecodeData* %4, i32 0, i32 2, !dbg !5969
  %5 = load void (i8*)*, void (i8*)** %post_process_opaque_free1, align 8, !dbg !5969
  %6 = load %struct.FrameDecodeData*, %struct.FrameDecodeData** %fdd, align 8, !dbg !5970
  %post_process_opaque = getelementptr inbounds %struct.FrameDecodeData, %struct.FrameDecodeData* %6, i32 0, i32 1, !dbg !5971
  %7 = load i8*, i8** %post_process_opaque, align 8, !dbg !5971
  call void %5(i8* %7), !dbg !5968
  br label %if.end, !dbg !5968

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.FrameDecodeData*, %struct.FrameDecodeData** %fdd, align 8, !dbg !5972
  %hwaccel_priv_free = getelementptr inbounds %struct.FrameDecodeData, %struct.FrameDecodeData* %8, i32 0, i32 4, !dbg !5974
  %9 = load void (i8*)*, void (i8*)** %hwaccel_priv_free, align 8, !dbg !5974
  %tobool2 = icmp ne void (i8*)* %9, null, !dbg !5972
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !5975

if.then3:                                         ; preds = %if.end
  %10 = load %struct.FrameDecodeData*, %struct.FrameDecodeData** %fdd, align 8, !dbg !5976
  %hwaccel_priv_free4 = getelementptr inbounds %struct.FrameDecodeData, %struct.FrameDecodeData* %10, i32 0, i32 4, !dbg !5977
  %11 = load void (i8*)*, void (i8*)** %hwaccel_priv_free4, align 8, !dbg !5977
  %12 = load %struct.FrameDecodeData*, %struct.FrameDecodeData** %fdd, align 8, !dbg !5978
  %hwaccel_priv = getelementptr inbounds %struct.FrameDecodeData, %struct.FrameDecodeData* %12, i32 0, i32 3, !dbg !5979
  %13 = load i8*, i8** %hwaccel_priv, align 8, !dbg !5979
  call void %11(i8* %13), !dbg !5976
  br label %if.end5, !dbg !5976

if.end5:                                          ; preds = %if.then3, %if.end
  %14 = bitcast %struct.FrameDecodeData** %fdd to i8*, !dbg !5980
  call void @av_freep(i8* %14), !dbg !5981
  ret void, !dbg !5982
}

; Function Attrs: nounwind uwtable
define i32 @ff_get_buffer(%struct.AVCodecContext* %avctx, %struct.AVFrame* %frame, i32 %flags) #0 !dbg !5983 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %flags.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !5984, metadata !1805), !dbg !5985
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !5986, metadata !1805), !dbg !5987
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5988, metadata !1805), !dbg !5989
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5990, metadata !1805), !dbg !5991
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5992
  %1 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5993
  %2 = load i32, i32* %flags.addr, align 4, !dbg !5994
  %call = call i32 @get_buffer_internal(%struct.AVCodecContext* %0, %struct.AVFrame* %1, i32 %2), !dbg !5995
  store i32 %call, i32* %ret, align 4, !dbg !5991
  %3 = load i32, i32* %ret, align 4, !dbg !5996
  %cmp = icmp slt i32 %3, 0, !dbg !5998
  br i1 %cmp, label %if.then, label %if.end, !dbg !5999

if.then:                                          ; preds = %entry
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6000
  %5 = bitcast %struct.AVCodecContext* %4 to i8*, !dbg !6000
  call void (i8*, i32, i8*, ...) @av_log(i8* %5, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.25, i32 0, i32 0)), !dbg !6002
  %6 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6003
  %height = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %6, i32 0, i32 4, !dbg !6004
  store i32 0, i32* %height, align 4, !dbg !6005
  %7 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6006
  %width = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %7, i32 0, i32 3, !dbg !6007
  store i32 0, i32* %width, align 8, !dbg !6008
  br label %if.end, !dbg !6009

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32, i32* %ret, align 4, !dbg !6010
  ret i32 %8, !dbg !6011
}

; Function Attrs: nounwind uwtable
define internal i32 @get_buffer_internal(%struct.AVCodecContext* %avctx, %struct.AVFrame* %frame, i32 %flags) #0 !dbg !6012 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %flags.addr = alloca i32, align 4
  %hwaccel = alloca %struct.AVHWAccel*, align 8
  %override_dimensions = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !6013, metadata !1805), !dbg !6014
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !6015, metadata !1805), !dbg !6016
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6017, metadata !1805), !dbg !6018
  call void @llvm.dbg.declare(metadata %struct.AVHWAccel** %hwaccel, metadata !6019, metadata !1805), !dbg !6020
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6021
  %hwaccel1 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 137, !dbg !6022
  %1 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel1, align 8, !dbg !6022
  store %struct.AVHWAccel* %1, %struct.AVHWAccel** %hwaccel, align 8, !dbg !6020
  call void @llvm.dbg.declare(metadata i32* %override_dimensions, metadata !6023, metadata !1805), !dbg !6024
  store i32 1, i32* %override_dimensions, align 4, !dbg !6024
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6025, metadata !1805), !dbg !6026
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6027
  %codec_type = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i32 0, i32 2, !dbg !6029
  %3 = load i32, i32* %codec_type, align 4, !dbg !6029
  %cmp = icmp eq i32 %3, 0, !dbg !6030
  br i1 %cmp, label %if.then, label %if.end54, !dbg !6031

if.then:                                          ; preds = %entry
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6032
  %width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 20, !dbg !6035
  %5 = load i32, i32* %width, align 4, !dbg !6035
  %add = add nsw i32 %5, 64, !dbg !6036
  %sub = sub nsw i32 %add, 1, !dbg !6037
  %and = and i32 %sub, -64, !dbg !6038
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6039
  %height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %6, i32 0, i32 21, !dbg !6040
  %7 = load i32, i32* %height, align 8, !dbg !6040
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6041
  %max_pixels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %8, i32 0, i32 185, !dbg !6042
  %9 = load i64, i64* %max_pixels, align 8, !dbg !6042
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6043
  %11 = bitcast %struct.AVCodecContext* %10 to i8*, !dbg !6043
  %call = call i32 @av_image_check_size2(i32 %and, i32 %7, i64 %9, i32 -1, i32 0, i8* %11), !dbg !6044
  store i32 %call, i32* %ret, align 4, !dbg !6045
  %cmp2 = icmp slt i32 %call, 0, !dbg !6046
  br i1 %cmp2, label %if.then4, label %lor.lhs.false, !dbg !6047

lor.lhs.false:                                    ; preds = %if.then
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6048
  %pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %12, i32 0, i32 25, !dbg !6050
  %13 = load i32, i32* %pix_fmt, align 8, !dbg !6050
  %cmp3 = icmp slt i32 %13, 0, !dbg !6051
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !6052

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  %14 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6053
  %15 = bitcast %struct.AVCodecContext* %14 to i8*, !dbg !6053
  call void (i8*, i32, i8*, ...) @av_log(i8* %15, i32 16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.66, i32 0, i32 0)), !dbg !6055
  store i32 -22, i32* %retval, align 4, !dbg !6056
  br label %return, !dbg !6056

if.end:                                           ; preds = %lor.lhs.false
  %16 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6057
  %width5 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %16, i32 0, i32 3, !dbg !6059
  %17 = load i32, i32* %width5, align 8, !dbg !6059
  %cmp6 = icmp sle i32 %17, 0, !dbg !6060
  br i1 %cmp6, label %if.then10, label %lor.lhs.false7, !dbg !6061

lor.lhs.false7:                                   ; preds = %if.end
  %18 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6062
  %height8 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %18, i32 0, i32 4, !dbg !6064
  %19 = load i32, i32* %height8, align 4, !dbg !6064
  %cmp9 = icmp sle i32 %19, 0, !dbg !6065
  br i1 %cmp9, label %if.then10, label %if.end39, !dbg !6066

if.then10:                                        ; preds = %lor.lhs.false7, %if.end
  %20 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6067
  %width11 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %20, i32 0, i32 20, !dbg !6069
  %21 = load i32, i32* %width11, align 4, !dbg !6069
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6070
  %coded_width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %22, i32 0, i32 22, !dbg !6071
  %23 = load i32, i32* %coded_width, align 4, !dbg !6071
  %sub12 = sub nsw i32 0, %23, !dbg !6072
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6073
  %lowres = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %24, i32 0, i32 144, !dbg !6074
  %25 = load i32, i32* %lowres, align 8, !dbg !6074
  %shr = ashr i32 %sub12, %25, !dbg !6075
  %sub13 = sub nsw i32 0, %shr, !dbg !6076
  %cmp14 = icmp sgt i32 %21, %sub13, !dbg !6077
  br i1 %cmp14, label %cond.true, label %cond.false, !dbg !6078

cond.true:                                        ; preds = %if.then10
  %26 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6079
  %width15 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %26, i32 0, i32 20, !dbg !6081
  %27 = load i32, i32* %width15, align 4, !dbg !6081
  br label %cond.end, !dbg !6082

cond.false:                                       ; preds = %if.then10
  %28 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6083
  %coded_width16 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %28, i32 0, i32 22, !dbg !6085
  %29 = load i32, i32* %coded_width16, align 4, !dbg !6085
  %sub17 = sub nsw i32 0, %29, !dbg !6086
  %30 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6087
  %lowres18 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %30, i32 0, i32 144, !dbg !6088
  %31 = load i32, i32* %lowres18, align 8, !dbg !6088
  %shr19 = ashr i32 %sub17, %31, !dbg !6089
  %sub20 = sub nsw i32 0, %shr19, !dbg !6090
  br label %cond.end, !dbg !6091

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %27, %cond.true ], [ %sub20, %cond.false ], !dbg !6092
  %32 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6094
  %width21 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %32, i32 0, i32 3, !dbg !6095
  store i32 %cond, i32* %width21, align 8, !dbg !6096
  %33 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6097
  %height22 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %33, i32 0, i32 21, !dbg !6098
  %34 = load i32, i32* %height22, align 8, !dbg !6098
  %35 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6099
  %coded_height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %35, i32 0, i32 23, !dbg !6100
  %36 = load i32, i32* %coded_height, align 8, !dbg !6100
  %sub23 = sub nsw i32 0, %36, !dbg !6101
  %37 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6102
  %lowres24 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %37, i32 0, i32 144, !dbg !6103
  %38 = load i32, i32* %lowres24, align 8, !dbg !6103
  %shr25 = ashr i32 %sub23, %38, !dbg !6104
  %sub26 = sub nsw i32 0, %shr25, !dbg !6105
  %cmp27 = icmp sgt i32 %34, %sub26, !dbg !6106
  br i1 %cmp27, label %cond.true28, label %cond.false30, !dbg !6107

cond.true28:                                      ; preds = %cond.end
  %39 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6108
  %height29 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %39, i32 0, i32 21, !dbg !6109
  %40 = load i32, i32* %height29, align 8, !dbg !6109
  br label %cond.end36, !dbg !6110

cond.false30:                                     ; preds = %cond.end
  %41 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6111
  %coded_height31 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %41, i32 0, i32 23, !dbg !6112
  %42 = load i32, i32* %coded_height31, align 8, !dbg !6112
  %sub32 = sub nsw i32 0, %42, !dbg !6113
  %43 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6114
  %lowres33 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %43, i32 0, i32 144, !dbg !6115
  %44 = load i32, i32* %lowres33, align 8, !dbg !6115
  %shr34 = ashr i32 %sub32, %44, !dbg !6116
  %sub35 = sub nsw i32 0, %shr34, !dbg !6117
  br label %cond.end36, !dbg !6118

cond.end36:                                       ; preds = %cond.false30, %cond.true28
  %cond37 = phi i32 [ %40, %cond.true28 ], [ %sub35, %cond.false30 ], !dbg !6119
  %45 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6120
  %height38 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %45, i32 0, i32 4, !dbg !6121
  store i32 %cond37, i32* %height38, align 4, !dbg !6122
  store i32 0, i32* %override_dimensions, align 4, !dbg !6123
  br label %if.end39, !dbg !6124

if.end39:                                         ; preds = %cond.end36, %lor.lhs.false7
  %46 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6125
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %46, i32 0, i32 0, !dbg !6127
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 0, !dbg !6125
  %47 = load i8*, i8** %arrayidx, align 8, !dbg !6125
  %tobool = icmp ne i8* %47, null, !dbg !6125
  br i1 %tobool, label %if.then52, label %lor.lhs.false40, !dbg !6128

lor.lhs.false40:                                  ; preds = %if.end39
  %48 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6129
  %data41 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %48, i32 0, i32 0, !dbg !6131
  %arrayidx42 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data41, i64 0, i64 1, !dbg !6129
  %49 = load i8*, i8** %arrayidx42, align 8, !dbg !6129
  %tobool43 = icmp ne i8* %49, null, !dbg !6129
  br i1 %tobool43, label %if.then52, label %lor.lhs.false44, !dbg !6132

lor.lhs.false44:                                  ; preds = %lor.lhs.false40
  %50 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6133
  %data45 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %50, i32 0, i32 0, !dbg !6135
  %arrayidx46 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data45, i64 0, i64 2, !dbg !6133
  %51 = load i8*, i8** %arrayidx46, align 8, !dbg !6133
  %tobool47 = icmp ne i8* %51, null, !dbg !6133
  br i1 %tobool47, label %if.then52, label %lor.lhs.false48, !dbg !6136

lor.lhs.false48:                                  ; preds = %lor.lhs.false44
  %52 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6137
  %data49 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %52, i32 0, i32 0, !dbg !6139
  %arrayidx50 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data49, i64 0, i64 3, !dbg !6137
  %53 = load i8*, i8** %arrayidx50, align 8, !dbg !6137
  %tobool51 = icmp ne i8* %53, null, !dbg !6137
  br i1 %tobool51, label %if.then52, label %if.end53, !dbg !6140

if.then52:                                        ; preds = %lor.lhs.false48, %lor.lhs.false44, %lor.lhs.false40, %if.end39
  %54 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6141
  %55 = bitcast %struct.AVCodecContext* %54 to i8*, !dbg !6141
  call void (i8*, i32, i8*, ...) @av_log(i8* %55, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.67, i32 0, i32 0)), !dbg !6143
  store i32 -22, i32* %retval, align 4, !dbg !6144
  br label %return, !dbg !6144

if.end53:                                         ; preds = %lor.lhs.false48
  br label %if.end54, !dbg !6145

if.end54:                                         ; preds = %if.end53, %entry
  %56 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6146
  %57 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6147
  %call55 = call i32 @ff_decode_frame_props(%struct.AVCodecContext* %56, %struct.AVFrame* %57), !dbg !6148
  store i32 %call55, i32* %ret, align 4, !dbg !6149
  %58 = load i32, i32* %ret, align 4, !dbg !6150
  %cmp56 = icmp slt i32 %58, 0, !dbg !6152
  br i1 %cmp56, label %if.then57, label %if.end58, !dbg !6153

if.then57:                                        ; preds = %if.end54
  %59 = load i32, i32* %ret, align 4, !dbg !6154
  store i32 %59, i32* %retval, align 4, !dbg !6155
  br label %return, !dbg !6155

if.end58:                                         ; preds = %if.end54
  %60 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel, align 8, !dbg !6156
  %tobool59 = icmp ne %struct.AVHWAccel* %60, null, !dbg !6156
  br i1 %tobool59, label %if.then60, label %if.else, !dbg !6158

if.then60:                                        ; preds = %if.end58
  %61 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel, align 8, !dbg !6159
  %alloc_frame = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %61, i32 0, i32 5, !dbg !6162
  %62 = load i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)** %alloc_frame, align 8, !dbg !6162
  %tobool61 = icmp ne i32 (%struct.AVCodecContext*, %struct.AVFrame*)* %62, null, !dbg !6159
  br i1 %tobool61, label %if.then62, label %if.end65, !dbg !6163

if.then62:                                        ; preds = %if.then60
  %63 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel, align 8, !dbg !6164
  %alloc_frame63 = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %63, i32 0, i32 5, !dbg !6166
  %64 = load i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)** %alloc_frame63, align 8, !dbg !6166
  %65 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6167
  %66 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6168
  %call64 = call i32 %64(%struct.AVCodecContext* %65, %struct.AVFrame* %66), !dbg !6164
  store i32 %call64, i32* %ret, align 4, !dbg !6169
  br label %end, !dbg !6170

if.end65:                                         ; preds = %if.then60
  br label %if.end67, !dbg !6171

if.else:                                          ; preds = %if.end58
  %67 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6172
  %pix_fmt66 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %67, i32 0, i32 25, !dbg !6173
  %68 = load i32, i32* %pix_fmt66, align 8, !dbg !6173
  %69 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6174
  %sw_pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %69, i32 0, i32 164, !dbg !6175
  store i32 %68, i32* %sw_pix_fmt, align 8, !dbg !6176
  br label %if.end67

if.end67:                                         ; preds = %if.else, %if.end65
  %70 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6177
  %get_buffer2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %70, i32 0, i32 93, !dbg !6178
  %71 = load i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)** %get_buffer2, align 8, !dbg !6178
  %72 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6179
  %73 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6180
  %74 = load i32, i32* %flags.addr, align 4, !dbg !6181
  %call68 = call i32 %71(%struct.AVCodecContext* %72, %struct.AVFrame* %73, i32 %74), !dbg !6177
  store i32 %call68, i32* %ret, align 4, !dbg !6182
  %75 = load i32, i32* %ret, align 4, !dbg !6183
  %cmp69 = icmp slt i32 %75, 0, !dbg !6185
  br i1 %cmp69, label %if.then70, label %if.end71, !dbg !6186

if.then70:                                        ; preds = %if.end67
  br label %end, !dbg !6187

if.end71:                                         ; preds = %if.end67
  %76 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6188
  %77 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6189
  call void @validate_avframe_allocation(%struct.AVCodecContext* %76, %struct.AVFrame* %77), !dbg !6190
  %78 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6191
  %call72 = call i32 @ff_attach_decode_data(%struct.AVFrame* %78), !dbg !6192
  store i32 %call72, i32* %ret, align 4, !dbg !6193
  %79 = load i32, i32* %ret, align 4, !dbg !6194
  %cmp73 = icmp slt i32 %79, 0, !dbg !6196
  br i1 %cmp73, label %if.then74, label %if.end75, !dbg !6197

if.then74:                                        ; preds = %if.end71
  br label %end, !dbg !6198

if.end75:                                         ; preds = %if.end71
  br label %end, !dbg !6199

end:                                              ; preds = %if.end75, %if.then74, %if.then70, %if.then62
  %80 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6201
  %codec_type76 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %80, i32 0, i32 2, !dbg !6203
  %81 = load i32, i32* %codec_type76, align 4, !dbg !6203
  %cmp77 = icmp eq i32 %81, 0, !dbg !6204
  br i1 %cmp77, label %land.lhs.true, label %if.end87, !dbg !6205

land.lhs.true:                                    ; preds = %end
  %82 = load i32, i32* %override_dimensions, align 4, !dbg !6206
  %tobool78 = icmp ne i32 %82, 0, !dbg !6206
  br i1 %tobool78, label %if.end87, label %land.lhs.true79, !dbg !6208

land.lhs.true79:                                  ; preds = %land.lhs.true
  %83 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6209
  %codec = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %83, i32 0, i32 3, !dbg !6210
  %84 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !6210
  %caps_internal = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %84, i32 0, i32 29, !dbg !6211
  %85 = load i32, i32* %caps_internal, align 8, !dbg !6211
  %and80 = and i32 %85, 16, !dbg !6212
  %tobool81 = icmp ne i32 %and80, 0, !dbg !6212
  br i1 %tobool81, label %if.end87, label %if.then82, !dbg !6213

if.then82:                                        ; preds = %land.lhs.true79
  %86 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6215
  %width83 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %86, i32 0, i32 20, !dbg !6217
  %87 = load i32, i32* %width83, align 4, !dbg !6217
  %88 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6218
  %width84 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %88, i32 0, i32 3, !dbg !6219
  store i32 %87, i32* %width84, align 8, !dbg !6220
  %89 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6221
  %height85 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %89, i32 0, i32 21, !dbg !6222
  %90 = load i32, i32* %height85, align 8, !dbg !6222
  %91 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6223
  %height86 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %91, i32 0, i32 4, !dbg !6224
  store i32 %90, i32* %height86, align 4, !dbg !6225
  br label %if.end87, !dbg !6226

if.end87:                                         ; preds = %if.then82, %land.lhs.true79, %land.lhs.true, %end
  %92 = load i32, i32* %ret, align 4, !dbg !6227
  %cmp88 = icmp slt i32 %92, 0, !dbg !6229
  br i1 %cmp88, label %if.then89, label %if.end90, !dbg !6230

if.then89:                                        ; preds = %if.end87
  %93 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6231
  call void @av_frame_unref(%struct.AVFrame* %93), !dbg !6232
  br label %if.end90, !dbg !6232

if.end90:                                         ; preds = %if.then89, %if.end87
  %94 = load i32, i32* %ret, align 4, !dbg !6233
  store i32 %94, i32* %retval, align 4, !dbg !6234
  br label %return, !dbg !6234

return:                                           ; preds = %if.end90, %if.then57, %if.then52, %if.then4
  %95 = load i32, i32* %retval, align 4, !dbg !6235
  ret i32 %95, !dbg !6235
}

; Function Attrs: nounwind uwtable
define i32 @ff_reget_buffer(%struct.AVCodecContext* %avctx, %struct.AVFrame* %frame) #0 !dbg !6236 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %ret = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !6237, metadata !1805), !dbg !6238
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !6239, metadata !1805), !dbg !6240
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6241, metadata !1805), !dbg !6242
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6243
  %1 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6244
  %call = call i32 @reget_buffer_internal(%struct.AVCodecContext* %0, %struct.AVFrame* %1), !dbg !6245
  store i32 %call, i32* %ret, align 4, !dbg !6242
  %2 = load i32, i32* %ret, align 4, !dbg !6246
  %cmp = icmp slt i32 %2, 0, !dbg !6248
  br i1 %cmp, label %if.then, label %if.end, !dbg !6249

if.then:                                          ; preds = %entry
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6250
  %4 = bitcast %struct.AVCodecContext* %3 to i8*, !dbg !6250
  call void (i8*, i32, i8*, ...) @av_log(i8* %4, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.26, i32 0, i32 0)), !dbg !6251
  br label %if.end, !dbg !6251

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %ret, align 4, !dbg !6252
  ret i32 %5, !dbg !6253
}

; Function Attrs: nounwind uwtable
define internal i32 @reget_buffer_internal(%struct.AVCodecContext* %avctx, %struct.AVFrame* %frame) #0 !dbg !6254 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %tmp = alloca %struct.AVFrame*, align 8
  %ret = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !6255, metadata !1805), !dbg !6256
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !6257, metadata !1805), !dbg !6258
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %tmp, metadata !6259, metadata !1805), !dbg !6260
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6261, metadata !1805), !dbg !6262
  br label %do.body, !dbg !6263, !llvm.loop !6264

do.body:                                          ; preds = %entry
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6265
  %codec_type = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 2, !dbg !6269
  %1 = load i32, i32* %codec_type, align 4, !dbg !6269
  %cmp = icmp eq i32 %1, 0, !dbg !6270
  br i1 %cmp, label %if.end, label %if.then, !dbg !6271

if.then:                                          ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i32 0, i32 0), i32 1934), !dbg !6272
  call void @abort() #9, !dbg !6275
  unreachable, !dbg !6277

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !6278

do.end:                                           ; preds = %if.end
  %2 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6280
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %2, i32 0, i32 0, !dbg !6282
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 0, !dbg !6280
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !6280
  %tobool = icmp ne i8* %3, null, !dbg !6280
  br i1 %tobool, label %land.lhs.true, label %if.end16, !dbg !6283

land.lhs.true:                                    ; preds = %do.end
  %4 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6284
  %width = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %4, i32 0, i32 3, !dbg !6286
  %5 = load i32, i32* %width, align 8, !dbg !6286
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6287
  %width2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %6, i32 0, i32 20, !dbg !6288
  %7 = load i32, i32* %width2, align 4, !dbg !6288
  %cmp3 = icmp ne i32 %5, %7, !dbg !6289
  br i1 %cmp3, label %if.then8, label %lor.lhs.false, !dbg !6290

lor.lhs.false:                                    ; preds = %land.lhs.true
  %8 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6291
  %height = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %8, i32 0, i32 4, !dbg !6293
  %9 = load i32, i32* %height, align 4, !dbg !6293
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6294
  %height4 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %10, i32 0, i32 21, !dbg !6295
  %11 = load i32, i32* %height4, align 8, !dbg !6295
  %cmp5 = icmp ne i32 %9, %11, !dbg !6296
  br i1 %cmp5, label %if.then8, label %lor.lhs.false6, !dbg !6297

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %12 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6298
  %format = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %12, i32 0, i32 6, !dbg !6300
  %13 = load i32, i32* %format, align 4, !dbg !6300
  %14 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6301
  %pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %14, i32 0, i32 25, !dbg !6302
  %15 = load i32, i32* %pix_fmt, align 8, !dbg !6302
  %cmp7 = icmp ne i32 %13, %15, !dbg !6303
  br i1 %cmp7, label %if.then8, label %if.end16, !dbg !6304

if.then8:                                         ; preds = %lor.lhs.false6, %lor.lhs.false, %land.lhs.true
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6305
  %17 = bitcast %struct.AVCodecContext* %16 to i8*, !dbg !6305
  %18 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6307
  %width9 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %18, i32 0, i32 3, !dbg !6308
  %19 = load i32, i32* %width9, align 8, !dbg !6308
  %20 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6309
  %height10 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %20, i32 0, i32 4, !dbg !6310
  %21 = load i32, i32* %height10, align 4, !dbg !6310
  %22 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6311
  %format11 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %22, i32 0, i32 6, !dbg !6312
  %23 = load i32, i32* %format11, align 4, !dbg !6312
  %call = call i8* @av_get_pix_fmt_name(i32 %23), !dbg !6313
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6314
  %width12 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %24, i32 0, i32 20, !dbg !6315
  %25 = load i32, i32* %width12, align 4, !dbg !6315
  %26 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6316
  %height13 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %26, i32 0, i32 21, !dbg !6317
  %27 = load i32, i32* %height13, align 8, !dbg !6317
  %28 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6318
  %pix_fmt14 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %28, i32 0, i32 25, !dbg !6319
  %29 = load i32, i32* %pix_fmt14, align 8, !dbg !6319
  %call15 = call i8* @av_get_pix_fmt_name(i32 %29), !dbg !6320
  call void (i8*, i32, i8*, ...) @av_log(i8* %17, i32 24, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.71, i32 0, i32 0), i32 %19, i32 %21, i8* %call, i32 %25, i32 %27, i8* %call15), !dbg !6322
  %30 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6323
  call void @av_frame_unref(%struct.AVFrame* %30), !dbg !6324
  br label %if.end16, !dbg !6325

if.end16:                                         ; preds = %if.then8, %lor.lhs.false6, %do.end
  %31 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6326
  %data17 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %31, i32 0, i32 0, !dbg !6328
  %arrayidx18 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data17, i64 0, i64 0, !dbg !6326
  %32 = load i8*, i8** %arrayidx18, align 8, !dbg !6326
  %tobool19 = icmp ne i8* %32, null, !dbg !6326
  br i1 %tobool19, label %if.end22, label %if.then20, !dbg !6329

if.then20:                                        ; preds = %if.end16
  %33 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6330
  %34 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6331
  %call21 = call i32 @ff_get_buffer(%struct.AVCodecContext* %33, %struct.AVFrame* %34, i32 1), !dbg !6332
  store i32 %call21, i32* %retval, align 4, !dbg !6333
  br label %return, !dbg !6333

if.end22:                                         ; preds = %if.end16
  %35 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6334
  %call23 = call i32 @av_frame_is_writable(%struct.AVFrame* %35), !dbg !6336
  %tobool24 = icmp ne i32 %call23, 0, !dbg !6336
  br i1 %tobool24, label %if.then25, label %if.end27, !dbg !6337

if.then25:                                        ; preds = %if.end22
  %36 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6338
  %37 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6339
  %call26 = call i32 @ff_decode_frame_props(%struct.AVCodecContext* %36, %struct.AVFrame* %37), !dbg !6340
  store i32 %call26, i32* %retval, align 4, !dbg !6341
  br label %return, !dbg !6341

if.end27:                                         ; preds = %if.end22
  %call28 = call %struct.AVFrame* @av_frame_alloc(), !dbg !6342
  store %struct.AVFrame* %call28, %struct.AVFrame** %tmp, align 8, !dbg !6343
  %38 = load %struct.AVFrame*, %struct.AVFrame** %tmp, align 8, !dbg !6344
  %tobool29 = icmp ne %struct.AVFrame* %38, null, !dbg !6344
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !6346

if.then30:                                        ; preds = %if.end27
  store i32 -12, i32* %retval, align 4, !dbg !6347
  br label %return, !dbg !6347

if.end31:                                         ; preds = %if.end27
  %39 = load %struct.AVFrame*, %struct.AVFrame** %tmp, align 8, !dbg !6348
  %40 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6349
  call void @av_frame_move_ref(%struct.AVFrame* %39, %struct.AVFrame* %40), !dbg !6350
  %41 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6351
  %42 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6352
  %call32 = call i32 @ff_get_buffer(%struct.AVCodecContext* %41, %struct.AVFrame* %42, i32 1), !dbg !6353
  store i32 %call32, i32* %ret, align 4, !dbg !6354
  %43 = load i32, i32* %ret, align 4, !dbg !6355
  %cmp33 = icmp slt i32 %43, 0, !dbg !6357
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !6358

if.then34:                                        ; preds = %if.end31
  call void @av_frame_free(%struct.AVFrame** %tmp), !dbg !6359
  %44 = load i32, i32* %ret, align 4, !dbg !6361
  store i32 %44, i32* %retval, align 4, !dbg !6362
  br label %return, !dbg !6362

if.end35:                                         ; preds = %if.end31
  %45 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6363
  %46 = load %struct.AVFrame*, %struct.AVFrame** %tmp, align 8, !dbg !6364
  %call36 = call i32 @av_frame_copy(%struct.AVFrame* %45, %struct.AVFrame* %46), !dbg !6365
  call void @av_frame_free(%struct.AVFrame** %tmp), !dbg !6366
  store i32 0, i32* %retval, align 4, !dbg !6367
  br label %return, !dbg !6367

return:                                           ; preds = %if.end35, %if.then34, %if.then30, %if.then25, %if.then20
  %47 = load i32, i32* %retval, align 4, !dbg !6368
  ret i32 %47, !dbg !6368
}

; Function Attrs: nounwind uwtable
define void @avcodec_flush_buffers(%struct.AVCodecContext* %avctx) #0 !dbg !6369 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !6370, metadata !1805), !dbg !6371
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6372
  %internal = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 7, !dbg !6373
  %1 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal, align 8, !dbg !6373
  %draining = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %1, i32 0, i32 14, !dbg !6374
  store i32 0, i32* %draining, align 8, !dbg !6375
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6376
  %internal1 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i32 0, i32 7, !dbg !6377
  %3 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal1, align 8, !dbg !6377
  %draining_done = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %3, i32 0, i32 18, !dbg !6378
  store i32 0, i32* %draining_done, align 8, !dbg !6379
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6380
  %internal2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 7, !dbg !6381
  %5 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal2, align 8, !dbg !6381
  %nb_draining_errors = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %5, i32 0, i32 26, !dbg !6382
  store i32 0, i32* %nb_draining_errors, align 8, !dbg !6383
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6384
  %internal3 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %6, i32 0, i32 7, !dbg !6385
  %7 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal3, align 8, !dbg !6385
  %buffer_frame = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %7, i32 0, i32 17, !dbg !6386
  %8 = load %struct.AVFrame*, %struct.AVFrame** %buffer_frame, align 8, !dbg !6386
  call void @av_frame_unref(%struct.AVFrame* %8), !dbg !6387
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6388
  %internal4 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %9, i32 0, i32 7, !dbg !6389
  %10 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal4, align 8, !dbg !6389
  %compat_decode_frame = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %10, i32 0, i32 23, !dbg !6390
  %11 = load %struct.AVFrame*, %struct.AVFrame** %compat_decode_frame, align 8, !dbg !6390
  call void @av_frame_unref(%struct.AVFrame* %11), !dbg !6391
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6392
  %internal5 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %12, i32 0, i32 7, !dbg !6393
  %13 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal5, align 8, !dbg !6393
  %buffer_pkt = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %13, i32 0, i32 15, !dbg !6394
  %14 = load %struct.AVPacket*, %struct.AVPacket** %buffer_pkt, align 8, !dbg !6394
  call void @av_packet_unref(%struct.AVPacket* %14), !dbg !6395
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6396
  %internal6 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %15, i32 0, i32 7, !dbg !6397
  %16 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal6, align 8, !dbg !6397
  %buffer_pkt_valid = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %16, i32 0, i32 16, !dbg !6398
  store i32 0, i32* %buffer_pkt_valid, align 8, !dbg !6399
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6400
  %internal7 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %17, i32 0, i32 7, !dbg !6401
  %18 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal7, align 8, !dbg !6401
  %ds = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %18, i32 0, i32 6, !dbg !6402
  %in_pkt = getelementptr inbounds %struct.DecodeSimpleContext, %struct.DecodeSimpleContext* %ds, i32 0, i32 0, !dbg !6403
  %19 = load %struct.AVPacket*, %struct.AVPacket** %in_pkt, align 8, !dbg !6403
  call void @av_packet_unref(%struct.AVPacket* %19), !dbg !6404
  %20 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6405
  %active_thread_type = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %20, i32 0, i32 148, !dbg !6407
  %21 = load i32, i32* %active_thread_type, align 8, !dbg !6407
  %and = and i32 %21, 1, !dbg !6408
  %tobool = icmp ne i32 %and, 0, !dbg !6408
  br i1 %tobool, label %if.then, label %if.else, !dbg !6409

if.then:                                          ; preds = %entry
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6410
  call void @ff_thread_flush(%struct.AVCodecContext* %22), !dbg !6411
  br label %if.end12, !dbg !6411

if.else:                                          ; preds = %entry
  %23 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6412
  %codec = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %23, i32 0, i32 3, !dbg !6414
  %24 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !6414
  %flush = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %24, i32 0, i32 28, !dbg !6415
  %25 = load void (%struct.AVCodecContext*)*, void (%struct.AVCodecContext*)** %flush, align 8, !dbg !6415
  %tobool8 = icmp ne void (%struct.AVCodecContext*)* %25, null, !dbg !6412
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !6416

if.then9:                                         ; preds = %if.else
  %26 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6417
  %codec10 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %26, i32 0, i32 3, !dbg !6418
  %27 = load %struct.AVCodec*, %struct.AVCodec** %codec10, align 8, !dbg !6418
  %flush11 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %27, i32 0, i32 28, !dbg !6419
  %28 = load void (%struct.AVCodecContext*)*, void (%struct.AVCodecContext*)** %flush11, align 8, !dbg !6419
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6420
  call void %28(%struct.AVCodecContext* %29), !dbg !6417
  br label %if.end, !dbg !6417

if.end:                                           ; preds = %if.then9, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then
  %30 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6421
  %pts_correction_last_dts = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %30, i32 0, i32 170, !dbg !6422
  store i64 -9223372036854775808, i64* %pts_correction_last_dts, align 8, !dbg !6423
  %31 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6424
  %pts_correction_last_pts = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %31, i32 0, i32 169, !dbg !6425
  store i64 -9223372036854775808, i64* %pts_correction_last_pts, align 8, !dbg !6426
  %32 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6427
  call void @bsfs_flush(%struct.AVCodecContext* %32), !dbg !6428
  %33 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6429
  %refcounted_frames = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %33, i32 0, i32 94, !dbg !6431
  %34 = load i32, i32* %refcounted_frames, align 8, !dbg !6431
  %tobool13 = icmp ne i32 %34, 0, !dbg !6429
  br i1 %tobool13, label %if.end16, label %if.then14, !dbg !6432

if.then14:                                        ; preds = %if.end12
  %35 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6433
  %internal15 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %35, i32 0, i32 7, !dbg !6434
  %36 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal15, align 8, !dbg !6434
  %to_free = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %36, i32 0, i32 3, !dbg !6435
  %37 = load %struct.AVFrame*, %struct.AVFrame** %to_free, align 8, !dbg !6435
  call void @av_frame_unref(%struct.AVFrame* %37), !dbg !6436
  br label %if.end16, !dbg !6436

if.end16:                                         ; preds = %if.then14, %if.end12
  ret void, !dbg !6437
}

declare void @ff_thread_flush(%struct.AVCodecContext*) #2

; Function Attrs: nounwind uwtable
define internal void @bsfs_flush(%struct.AVCodecContext* %avctx) #0 !dbg !6438 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.DecodeFilterContext*, align 8
  %i = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !6439, metadata !1805), !dbg !6440
  call void @llvm.dbg.declare(metadata %struct.DecodeFilterContext** %s, metadata !6441, metadata !1805), !dbg !6442
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6443
  %internal = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 7, !dbg !6444
  %1 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal, align 8, !dbg !6444
  %filter = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %1, i32 0, i32 7, !dbg !6445
  store %struct.DecodeFilterContext* %filter, %struct.DecodeFilterContext** %s, align 8, !dbg !6442
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6446, metadata !1805), !dbg !6448
  store i32 0, i32* %i, align 4, !dbg !6448
  br label %for.cond, !dbg !6449

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !6450
  %3 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !6453
  %nb_bsfs = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %3, i32 0, i32 1, !dbg !6454
  %4 = load i32, i32* %nb_bsfs, align 8, !dbg !6454
  %cmp = icmp slt i32 %2, %4, !dbg !6455
  br i1 %cmp, label %for.body, label %for.end, !dbg !6456

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %i, align 4, !dbg !6457
  %idxprom = sext i32 %5 to i64, !dbg !6458
  %6 = load %struct.DecodeFilterContext*, %struct.DecodeFilterContext** %s, align 8, !dbg !6458
  %bsfs = getelementptr inbounds %struct.DecodeFilterContext, %struct.DecodeFilterContext* %6, i32 0, i32 0, !dbg !6459
  %7 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %bsfs, align 8, !dbg !6459
  %arrayidx = getelementptr inbounds %struct.AVBSFContext*, %struct.AVBSFContext** %7, i64 %idxprom, !dbg !6458
  %8 = load %struct.AVBSFContext*, %struct.AVBSFContext** %arrayidx, align 8, !dbg !6458
  call void @av_bsf_flush(%struct.AVBSFContext* %8), !dbg !6460
  br label %for.inc, !dbg !6460

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !6461
  %inc = add nsw i32 %9, 1, !dbg !6461
  store i32 %inc, i32* %i, align 4, !dbg !6461
  br label %for.cond, !dbg !6463, !llvm.loop !6464

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6466
}

declare void @av_bsf_free(%struct.AVBSFContext**) #2

declare i32 @av_bsf_receive_packet(%struct.AVBSFContext*, %struct.AVPacket*) #2

declare i32 @av_packet_copy_props(%struct.AVPacket*, %struct.AVPacket*) #2

declare i32 @ff_set_dimensions(%struct.AVCodecContext*, i32, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @decode_simple_receive_frame(%struct.AVCodecContext* %avctx, %struct.AVFrame* %frame) #0 !dbg !6467 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %ret = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !6468, metadata !1805), !dbg !6469
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !6470, metadata !1805), !dbg !6471
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6472, metadata !1805), !dbg !6473
  br label %while.cond, !dbg !6474

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6475
  %buf = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i32 0, i32 25, !dbg !6477
  %arrayidx = getelementptr inbounds [8 x %struct.AVBufferRef*], [8 x %struct.AVBufferRef*]* %buf, i64 0, i64 0, !dbg !6475
  %1 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx, align 8, !dbg !6475
  %tobool = icmp ne %struct.AVBufferRef* %1, null, !dbg !6478
  %lnot = xor i1 %tobool, true, !dbg !6478
  br i1 %lnot, label %while.body, label %while.end, !dbg !6479

while.body:                                       ; preds = %while.cond
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6480
  %3 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6482
  %call = call i32 @decode_simple_internal(%struct.AVCodecContext* %2, %struct.AVFrame* %3), !dbg !6483
  store i32 %call, i32* %ret, align 4, !dbg !6484
  %4 = load i32, i32* %ret, align 4, !dbg !6485
  %cmp = icmp slt i32 %4, 0, !dbg !6487
  br i1 %cmp, label %if.then, label %if.end, !dbg !6488

if.then:                                          ; preds = %while.body
  %5 = load i32, i32* %ret, align 4, !dbg !6489
  store i32 %5, i32* %retval, align 4, !dbg !6490
  br label %return, !dbg !6490

if.end:                                           ; preds = %while.body
  br label %while.cond, !dbg !6491, !llvm.loop !6493

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !6494
  br label %return, !dbg !6494

return:                                           ; preds = %while.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !6495
  ret i32 %6, !dbg !6495
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_simple_internal(%struct.AVCodecContext* %avctx, %struct.AVFrame* %frame) #0 !dbg !6496 {
entry:
  %retval.i = alloca %struct.AVRational, align 4
  %q.i = alloca %struct.AVRational, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %q.i, metadata !6497, metadata !1805), !dbg !6501
  %r.i = alloca %struct.AVRational, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %r.i, metadata !6505, metadata !1805), !dbg !6506
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %avci = alloca %struct.AVCodecInternal*, align 8
  %ds = alloca %struct.DecodeSimpleContext*, align 8
  %pkt = alloca %struct.AVPacket*, align 8
  %got_frame = alloca i32, align 4
  %actual_got_frame = alloca i32, align 4
  %ret = alloca i32, align 4
  %side = alloca i8*, align 8
  %side_size = alloca i32, align 4
  %discard_padding = alloca i32, align 4
  %skip_reason = alloca i8, align 1
  %discard_reason = alloca i8, align 1
  %diff_ts = alloca i64, align 8
  %.compoundliteral = alloca %struct.AVRational, align 4
  %diff_ts250 = alloca i64, align 8
  %.compoundliteral254 = alloca %struct.AVRational, align 4
  %fside = alloca %struct.AVFrameSideData*, align 8
  %agg.tmp = alloca %struct.AVRational, align 4
  %.compoundliteral345 = alloca %struct.AVRational, align 4
  %coerce = alloca %struct.AVRational, align 4
  %nb_errors_max = alloca i32, align 4
  %consumed = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !6507, metadata !1805), !dbg !6508
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !6509, metadata !1805), !dbg !6510
  call void @llvm.dbg.declare(metadata %struct.AVCodecInternal** %avci, metadata !6511, metadata !1805), !dbg !6512
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6513
  %internal = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 7, !dbg !6514
  %1 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal, align 8, !dbg !6514
  store %struct.AVCodecInternal* %1, %struct.AVCodecInternal** %avci, align 8, !dbg !6512
  call void @llvm.dbg.declare(metadata %struct.DecodeSimpleContext** %ds, metadata !6515, metadata !1805), !dbg !6517
  %2 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !6518
  %ds1 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %2, i32 0, i32 6, !dbg !6519
  store %struct.DecodeSimpleContext* %ds1, %struct.DecodeSimpleContext** %ds, align 8, !dbg !6517
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt, metadata !6520, metadata !1805), !dbg !6521
  %3 = load %struct.DecodeSimpleContext*, %struct.DecodeSimpleContext** %ds, align 8, !dbg !6522
  %in_pkt = getelementptr inbounds %struct.DecodeSimpleContext, %struct.DecodeSimpleContext* %3, i32 0, i32 0, !dbg !6523
  %4 = load %struct.AVPacket*, %struct.AVPacket** %in_pkt, align 8, !dbg !6523
  store %struct.AVPacket* %4, %struct.AVPacket** %pkt, align 8, !dbg !6521
  call void @llvm.dbg.declare(metadata i32* %got_frame, metadata !6524, metadata !1805), !dbg !6525
  call void @llvm.dbg.declare(metadata i32* %actual_got_frame, metadata !6526, metadata !1805), !dbg !6527
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6528, metadata !1805), !dbg !6529
  %5 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !6530
  %data = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %5, i32 0, i32 3, !dbg !6532
  %6 = load i8*, i8** %data, align 8, !dbg !6532
  %tobool = icmp ne i8* %6, null, !dbg !6530
  br i1 %tobool, label %if.end6, label %land.lhs.true, !dbg !6533

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !6534
  %draining = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %7, i32 0, i32 14, !dbg !6536
  %8 = load i32, i32* %draining, align 8, !dbg !6536
  %tobool2 = icmp ne i32 %8, 0, !dbg !6534
  br i1 %tobool2, label %if.end6, label %if.then, !dbg !6537

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !6538
  call void @av_packet_unref(%struct.AVPacket* %9), !dbg !6540
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6541
  %11 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !6542
  %call = call i32 @ff_decode_get_packet(%struct.AVCodecContext* %10, %struct.AVPacket* %11), !dbg !6543
  store i32 %call, i32* %ret, align 4, !dbg !6544
  %12 = load i32, i32* %ret, align 4, !dbg !6545
  %cmp = icmp slt i32 %12, 0, !dbg !6547
  br i1 %cmp, label %land.lhs.true3, label %if.end, !dbg !6548

land.lhs.true3:                                   ; preds = %if.then
  %13 = load i32, i32* %ret, align 4, !dbg !6549
  %cmp4 = icmp ne i32 %13, -541478725, !dbg !6551
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !6552

if.then5:                                         ; preds = %land.lhs.true3
  %14 = load i32, i32* %ret, align 4, !dbg !6553
  store i32 %14, i32* %retval, align 4, !dbg !6554
  br label %return, !dbg !6554

if.end:                                           ; preds = %land.lhs.true3, %if.then
  br label %if.end6, !dbg !6555

if.end6:                                          ; preds = %if.end, %land.lhs.true, %entry
  %15 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !6556
  %draining_done = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %15, i32 0, i32 18, !dbg !6558
  %16 = load i32, i32* %draining_done, align 8, !dbg !6558
  %tobool7 = icmp ne i32 %16, 0, !dbg !6556
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !6559

if.then8:                                         ; preds = %if.end6
  store i32 -541478725, i32* %retval, align 4, !dbg !6560
  br label %return, !dbg !6560

if.end9:                                          ; preds = %if.end6
  %17 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !6561
  %data10 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %17, i32 0, i32 3, !dbg !6563
  %18 = load i8*, i8** %data10, align 8, !dbg !6563
  %tobool11 = icmp ne i8* %18, null, !dbg !6561
  br i1 %tobool11, label %if.end17, label %land.lhs.true12, !dbg !6564

land.lhs.true12:                                  ; preds = %if.end9
  %19 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6565
  %codec = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %19, i32 0, i32 3, !dbg !6566
  %20 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !6566
  %capabilities = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %20, i32 0, i32 4, !dbg !6567
  %21 = load i32, i32* %capabilities, align 8, !dbg !6567
  %and = and i32 %21, 32, !dbg !6568
  %tobool13 = icmp ne i32 %and, 0, !dbg !6568
  br i1 %tobool13, label %if.end17, label %lor.lhs.false, !dbg !6569

lor.lhs.false:                                    ; preds = %land.lhs.true12
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6570
  %active_thread_type = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %22, i32 0, i32 148, !dbg !6571
  %23 = load i32, i32* %active_thread_type, align 8, !dbg !6571
  %and14 = and i32 %23, 1, !dbg !6572
  %tobool15 = icmp ne i32 %and14, 0, !dbg !6572
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !6573

if.then16:                                        ; preds = %lor.lhs.false
  store i32 -541478725, i32* %retval, align 4, !dbg !6575
  br label %return, !dbg !6575

if.end17:                                         ; preds = %lor.lhs.false, %land.lhs.true12, %if.end9
  store i32 0, i32* %got_frame, align 4, !dbg !6576
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6577
  %active_thread_type18 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %24, i32 0, i32 148, !dbg !6579
  %25 = load i32, i32* %active_thread_type18, align 8, !dbg !6579
  %and19 = and i32 %25, 1, !dbg !6580
  %tobool20 = icmp ne i32 %and19, 0, !dbg !6580
  br i1 %tobool20, label %if.then21, label %if.else, !dbg !6581

if.then21:                                        ; preds = %if.end17
  %26 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6582
  %27 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6584
  %28 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !6585
  %call22 = call i32 @ff_thread_decode_frame(%struct.AVCodecContext* %26, %struct.AVFrame* %27, i32* %got_frame, %struct.AVPacket* %28), !dbg !6586
  store i32 %call22, i32* %ret, align 4, !dbg !6587
  br label %if.end62, !dbg !6588

if.else:                                          ; preds = %if.end17
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6589
  %codec23 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %29, i32 0, i32 3, !dbg !6591
  %30 = load %struct.AVCodec*, %struct.AVCodec** %codec23, align 8, !dbg !6591
  %decode = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %30, i32 0, i32 23, !dbg !6592
  %31 = load i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)** %decode, align 8, !dbg !6592
  %32 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6593
  %33 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6594
  %34 = bitcast %struct.AVFrame* %33 to i8*, !dbg !6594
  %35 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !6595
  %call24 = call i32 %31(%struct.AVCodecContext* %32, i8* %34, i32* %got_frame, %struct.AVPacket* %35), !dbg !6589
  store i32 %call24, i32* %ret, align 4, !dbg !6596
  %36 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6597
  %codec25 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %36, i32 0, i32 3, !dbg !6599
  %37 = load %struct.AVCodec*, %struct.AVCodec** %codec25, align 8, !dbg !6599
  %caps_internal = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %37, i32 0, i32 29, !dbg !6600
  %38 = load i32, i32* %caps_internal, align 8, !dbg !6600
  %and26 = and i32 %38, 4, !dbg !6601
  %tobool27 = icmp ne i32 %and26, 0, !dbg !6601
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !6602

if.then28:                                        ; preds = %if.else
  %39 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !6603
  %dts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %39, i32 0, i32 2, !dbg !6604
  %40 = load i64, i64* %dts, align 8, !dbg !6604
  %41 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6605
  %pkt_dts = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %41, i32 0, i32 12, !dbg !6606
  store i64 %40, i64* %pkt_dts, align 8, !dbg !6607
  br label %if.end29, !dbg !6605

if.end29:                                         ; preds = %if.then28, %if.else
  %42 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6608
  %codec30 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %42, i32 0, i32 3, !dbg !6610
  %43 = load %struct.AVCodec*, %struct.AVCodec** %codec30, align 8, !dbg !6610
  %type = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %43, i32 0, i32 2, !dbg !6611
  %44 = load i32, i32* %type, align 8, !dbg !6611
  %cmp31 = icmp eq i32 %44, 0, !dbg !6612
  br i1 %cmp31, label %if.then32, label %if.end61, !dbg !6613

if.then32:                                        ; preds = %if.end29
  %45 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6614
  %has_b_frames = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %45, i32 0, i32 32, !dbg !6617
  %46 = load i32, i32* %has_b_frames, align 8, !dbg !6617
  %tobool33 = icmp ne i32 %46, 0, !dbg !6614
  br i1 %tobool33, label %if.end35, label %if.then34, !dbg !6618

if.then34:                                        ; preds = %if.then32
  %47 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !6619
  %pos = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %47, i32 0, i32 10, !dbg !6620
  %48 = load i64, i64* %pos, align 8, !dbg !6620
  %49 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6621
  %pkt_pos = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %49, i32 0, i32 37, !dbg !6622
  store i64 %48, i64* %pkt_pos, align 8, !dbg !6623
  br label %if.end35, !dbg !6621

if.end35:                                         ; preds = %if.then34, %if.then32
  %50 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6624
  %codec36 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %50, i32 0, i32 3, !dbg !6626
  %51 = load %struct.AVCodec*, %struct.AVCodec** %codec36, align 8, !dbg !6626
  %capabilities37 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %51, i32 0, i32 4, !dbg !6627
  %52 = load i32, i32* %capabilities37, align 8, !dbg !6627
  %and38 = and i32 %52, 2, !dbg !6628
  %tobool39 = icmp ne i32 %and38, 0, !dbg !6628
  br i1 %tobool39, label %if.end60, label %if.then40, !dbg !6629

if.then40:                                        ; preds = %if.end35
  %53 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6630
  %sample_aspect_ratio = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %53, i32 0, i32 9, !dbg !6633
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio, i32 0, i32 0, !dbg !6634
  %54 = load i32, i32* %num, align 8, !dbg !6634
  %tobool41 = icmp ne i32 %54, 0, !dbg !6630
  br i1 %tobool41, label %if.end45, label %if.then42, !dbg !6635

if.then42:                                        ; preds = %if.then40
  %55 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6636
  %sample_aspect_ratio43 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %55, i32 0, i32 9, !dbg !6638
  %56 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6639
  %sample_aspect_ratio44 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %56, i32 0, i32 44, !dbg !6640
  %57 = bitcast %struct.AVRational* %sample_aspect_ratio43 to i8*, !dbg !6640
  %58 = bitcast %struct.AVRational* %sample_aspect_ratio44 to i8*, !dbg !6640
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %57, i8* %58, i64 8, i32 8, i1 false), !dbg !6640
  br label %if.end45, !dbg !6636

if.end45:                                         ; preds = %if.then42, %if.then40
  %59 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6641
  %width = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %59, i32 0, i32 3, !dbg !6643
  %60 = load i32, i32* %width, align 8, !dbg !6643
  %tobool46 = icmp ne i32 %60, 0, !dbg !6641
  br i1 %tobool46, label %if.end50, label %if.then47, !dbg !6644

if.then47:                                        ; preds = %if.end45
  %61 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6645
  %width48 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %61, i32 0, i32 20, !dbg !6647
  %62 = load i32, i32* %width48, align 4, !dbg !6647
  %63 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6648
  %width49 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %63, i32 0, i32 3, !dbg !6649
  store i32 %62, i32* %width49, align 8, !dbg !6650
  br label %if.end50, !dbg !6648

if.end50:                                         ; preds = %if.then47, %if.end45
  %64 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6651
  %height = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %64, i32 0, i32 4, !dbg !6653
  %65 = load i32, i32* %height, align 4, !dbg !6653
  %tobool51 = icmp ne i32 %65, 0, !dbg !6651
  br i1 %tobool51, label %if.end55, label %if.then52, !dbg !6654

if.then52:                                        ; preds = %if.end50
  %66 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6655
  %height53 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %66, i32 0, i32 21, !dbg !6657
  %67 = load i32, i32* %height53, align 8, !dbg !6657
  %68 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6658
  %height54 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %68, i32 0, i32 4, !dbg !6659
  store i32 %67, i32* %height54, align 4, !dbg !6660
  br label %if.end55, !dbg !6658

if.end55:                                         ; preds = %if.then52, %if.end50
  %69 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6661
  %format = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %69, i32 0, i32 6, !dbg !6663
  %70 = load i32, i32* %format, align 4, !dbg !6663
  %cmp56 = icmp eq i32 %70, -1, !dbg !6664
  br i1 %cmp56, label %if.then57, label %if.end59, !dbg !6665

if.then57:                                        ; preds = %if.end55
  %71 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6666
  %pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %71, i32 0, i32 25, !dbg !6668
  %72 = load i32, i32* %pix_fmt, align 8, !dbg !6668
  %73 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6669
  %format58 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %73, i32 0, i32 6, !dbg !6670
  store i32 %72, i32* %format58, align 4, !dbg !6671
  br label %if.end59, !dbg !6669

if.end59:                                         ; preds = %if.then57, %if.end55
  br label %if.end60, !dbg !6672

if.end60:                                         ; preds = %if.end59, %if.end35
  br label %if.end61, !dbg !6673

if.end61:                                         ; preds = %if.end60, %if.end29
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.then21
  call void asm sideeffect "emms", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !6674, !srcloc !6680
  %74 = load i32, i32* %got_frame, align 4, !dbg !6681
  store i32 %74, i32* %actual_got_frame, align 4, !dbg !6682
  %75 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6683
  %codec63 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %75, i32 0, i32 3, !dbg !6685
  %76 = load %struct.AVCodec*, %struct.AVCodec** %codec63, align 8, !dbg !6685
  %type64 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %76, i32 0, i32 2, !dbg !6686
  %77 = load i32, i32* %type64, align 8, !dbg !6686
  %cmp65 = icmp eq i32 %77, 0, !dbg !6687
  br i1 %cmp65, label %if.then66, label %if.else76, !dbg !6688

if.then66:                                        ; preds = %if.end62
  %78 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6689
  %flags = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %78, i32 0, i32 30, !dbg !6692
  %79 = load i32, i32* %flags, align 4, !dbg !6692
  %and67 = and i32 %79, 4, !dbg !6693
  %tobool68 = icmp ne i32 %and67, 0, !dbg !6693
  br i1 %tobool68, label %if.then69, label %if.end70, !dbg !6694

if.then69:                                        ; preds = %if.then66
  store i32 0, i32* %got_frame, align 4, !dbg !6695
  br label %if.end70, !dbg !6696

if.end70:                                         ; preds = %if.then69, %if.then66
  %80 = load i32, i32* %got_frame, align 4, !dbg !6697
  %tobool71 = icmp ne i32 %80, 0, !dbg !6697
  br i1 %tobool71, label %if.then72, label %if.end75, !dbg !6699

if.then72:                                        ; preds = %if.end70
  %81 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6700
  %82 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6701
  %pts = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %82, i32 0, i32 10, !dbg !6702
  %83 = load i64, i64* %pts, align 8, !dbg !6702
  %84 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6703
  %pkt_dts73 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %84, i32 0, i32 12, !dbg !6704
  %85 = load i64, i64* %pkt_dts73, align 8, !dbg !6704
  %call74 = call i64 @guess_correct_pts(%struct.AVCodecContext* %81, i64 %83, i64 %85), !dbg !6705
  %86 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6706
  %best_effort_timestamp = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %86, i32 0, i32 36, !dbg !6707
  store i64 %call74, i64* %best_effort_timestamp, align 8, !dbg !6708
  br label %if.end75, !dbg !6706

if.end75:                                         ; preds = %if.then72, %if.end70
  br label %if.end297, !dbg !6709

if.else76:                                        ; preds = %if.end62
  %87 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6710
  %codec77 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %87, i32 0, i32 3, !dbg !6713
  %88 = load %struct.AVCodec*, %struct.AVCodec** %codec77, align 8, !dbg !6713
  %type78 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %88, i32 0, i32 2, !dbg !6714
  %89 = load i32, i32* %type78, align 8, !dbg !6714
  %cmp79 = icmp eq i32 %89, 1, !dbg !6715
  br i1 %cmp79, label %if.then80, label %if.end296, !dbg !6710

if.then80:                                        ; preds = %if.else76
  call void @llvm.dbg.declare(metadata i8** %side, metadata !6716, metadata !1805), !dbg !6718
  call void @llvm.dbg.declare(metadata i32* %side_size, metadata !6719, metadata !1805), !dbg !6720
  call void @llvm.dbg.declare(metadata i32* %discard_padding, metadata !6721, metadata !1805), !dbg !6722
  store i32 0, i32* %discard_padding, align 4, !dbg !6722
  call void @llvm.dbg.declare(metadata i8* %skip_reason, metadata !6723, metadata !1805), !dbg !6724
  store i8 0, i8* %skip_reason, align 1, !dbg !6724
  call void @llvm.dbg.declare(metadata i8* %discard_reason, metadata !6725, metadata !1805), !dbg !6726
  store i8 0, i8* %discard_reason, align 1, !dbg !6726
  %90 = load i32, i32* %ret, align 4, !dbg !6727
  %cmp81 = icmp sge i32 %90, 0, !dbg !6729
  br i1 %cmp81, label %land.lhs.true82, label %if.end109, !dbg !6730

land.lhs.true82:                                  ; preds = %if.then80
  %91 = load i32, i32* %got_frame, align 4, !dbg !6731
  %tobool83 = icmp ne i32 %91, 0, !dbg !6731
  br i1 %tobool83, label %if.then84, label %if.end109, !dbg !6733

if.then84:                                        ; preds = %land.lhs.true82
  %92 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6734
  %93 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6736
  %pts85 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %93, i32 0, i32 10, !dbg !6737
  %94 = load i64, i64* %pts85, align 8, !dbg !6737
  %95 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6738
  %pkt_dts86 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %95, i32 0, i32 12, !dbg !6739
  %96 = load i64, i64* %pkt_dts86, align 8, !dbg !6739
  %call87 = call i64 @guess_correct_pts(%struct.AVCodecContext* %92, i64 %94, i64 %96), !dbg !6740
  %97 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6741
  %best_effort_timestamp88 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %97, i32 0, i32 36, !dbg !6742
  store i64 %call87, i64* %best_effort_timestamp88, align 8, !dbg !6743
  %98 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6744
  %format89 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %98, i32 0, i32 6, !dbg !6746
  %99 = load i32, i32* %format89, align 4, !dbg !6746
  %cmp90 = icmp eq i32 %99, -1, !dbg !6747
  br i1 %cmp90, label %if.then91, label %if.end93, !dbg !6748

if.then91:                                        ; preds = %if.then84
  %100 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6749
  %sample_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %100, i32 0, i32 84, !dbg !6750
  %101 = load i32, i32* %sample_fmt, align 8, !dbg !6750
  %102 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6751
  %format92 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %102, i32 0, i32 6, !dbg !6752
  store i32 %101, i32* %format92, align 4, !dbg !6753
  br label %if.end93, !dbg !6751

if.end93:                                         ; preds = %if.then91, %if.then84
  %103 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6754
  %channel_layout = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %103, i32 0, i32 24, !dbg !6756
  %104 = load i64, i64* %channel_layout, align 8, !dbg !6756
  %tobool94 = icmp ne i64 %104, 0, !dbg !6754
  br i1 %tobool94, label %if.end98, label %if.then95, !dbg !6757

if.then95:                                        ; preds = %if.end93
  %105 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6758
  %channel_layout96 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %105, i32 0, i32 89, !dbg !6759
  %106 = load i64, i64* %channel_layout96, align 8, !dbg !6759
  %107 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6760
  %channel_layout97 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %107, i32 0, i32 24, !dbg !6761
  store i64 %106, i64* %channel_layout97, align 8, !dbg !6762
  br label %if.end98, !dbg !6760

if.end98:                                         ; preds = %if.then95, %if.end93
  %108 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6763
  %channels = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %108, i32 0, i32 41, !dbg !6765
  %109 = load i32, i32* %channels, align 4, !dbg !6765
  %tobool99 = icmp ne i32 %109, 0, !dbg !6763
  br i1 %tobool99, label %if.end103, label %if.then100, !dbg !6766

if.then100:                                       ; preds = %if.end98
  %110 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6767
  %channels101 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %110, i32 0, i32 83, !dbg !6768
  %111 = load i32, i32* %channels101, align 4, !dbg !6768
  %112 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6769
  %channels102 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %112, i32 0, i32 41, !dbg !6770
  store i32 %111, i32* %channels102, align 4, !dbg !6771
  br label %if.end103, !dbg !6769

if.end103:                                        ; preds = %if.then100, %if.end98
  %113 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6772
  %sample_rate = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %113, i32 0, i32 23, !dbg !6774
  %114 = load i32, i32* %sample_rate, align 8, !dbg !6774
  %tobool104 = icmp ne i32 %114, 0, !dbg !6772
  br i1 %tobool104, label %if.end108, label %if.then105, !dbg !6775

if.then105:                                       ; preds = %if.end103
  %115 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6776
  %sample_rate106 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %115, i32 0, i32 82, !dbg !6777
  %116 = load i32, i32* %sample_rate106, align 8, !dbg !6777
  %117 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6778
  %sample_rate107 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %117, i32 0, i32 23, !dbg !6779
  store i32 %116, i32* %sample_rate107, align 8, !dbg !6780
  br label %if.end108, !dbg !6778

if.end108:                                        ; preds = %if.then105, %if.end103
  br label %if.end109, !dbg !6781

if.end109:                                        ; preds = %if.end108, %land.lhs.true82, %if.then80
  %118 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !6782
  %last_pkt_props = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %118, i32 0, i32 8, !dbg !6783
  %119 = load %struct.AVPacket*, %struct.AVPacket** %last_pkt_props, align 8, !dbg !6783
  %call110 = call i8* @av_packet_get_side_data(%struct.AVPacket* %119, i32 11, i32* %side_size), !dbg !6784
  store i8* %call110, i8** %side, align 8, !dbg !6785
  %120 = load i8*, i8** %side, align 8, !dbg !6786
  %tobool111 = icmp ne i8* %120, null, !dbg !6786
  br i1 %tobool111, label %land.lhs.true112, label %if.end123, !dbg !6788

land.lhs.true112:                                 ; preds = %if.end109
  %121 = load i32, i32* %side_size, align 4, !dbg !6789
  %cmp113 = icmp sge i32 %121, 10, !dbg !6791
  br i1 %cmp113, label %if.then114, label %if.end123, !dbg !6792

if.then114:                                       ; preds = %land.lhs.true112
  %122 = load i8*, i8** %side, align 8, !dbg !6793
  %123 = bitcast i8* %122 to %union.unaligned_32*, !dbg !6795
  %l = bitcast %union.unaligned_32* %123 to i32*, !dbg !6795
  %124 = load i32, i32* %l, align 1, !dbg !6795
  %125 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6796
  %internal115 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %125, i32 0, i32 7, !dbg !6797
  %126 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal115, align 8, !dbg !6797
  %skip_samples_multiplier = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %126, i32 0, i32 25, !dbg !6798
  %127 = load i32, i32* %skip_samples_multiplier, align 4, !dbg !6798
  %mul = mul i32 %124, %127, !dbg !6799
  %128 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6800
  %internal116 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %128, i32 0, i32 7, !dbg !6801
  %129 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal116, align 8, !dbg !6801
  %skip_samples = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %129, i32 0, i32 12, !dbg !6802
  store i32 %mul, i32* %skip_samples, align 8, !dbg !6803
  %130 = load i8*, i8** %side, align 8, !dbg !6804
  %add.ptr = getelementptr inbounds i8, i8* %130, i64 4, !dbg !6805
  %131 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !6806
  %l117 = bitcast %union.unaligned_32* %131 to i32*, !dbg !6806
  %132 = load i32, i32* %l117, align 1, !dbg !6806
  store i32 %132, i32* %discard_padding, align 4, !dbg !6807
  %133 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6808
  %134 = bitcast %struct.AVCodecContext* %133 to i8*, !dbg !6808
  %135 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6809
  %internal118 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %135, i32 0, i32 7, !dbg !6810
  %136 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal118, align 8, !dbg !6810
  %skip_samples119 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %136, i32 0, i32 12, !dbg !6811
  %137 = load i32, i32* %skip_samples119, align 8, !dbg !6811
  %138 = load i32, i32* %discard_padding, align 4, !dbg !6812
  call void (i8*, i32, i8*, ...) @av_log(i8* %134, i32 48, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.35, i32 0, i32 0), i32 %137, i32 %138), !dbg !6813
  %139 = load i8*, i8** %side, align 8, !dbg !6814
  %add.ptr120 = getelementptr inbounds i8, i8* %139, i64 8, !dbg !6815
  %arrayidx = getelementptr inbounds i8, i8* %add.ptr120, i64 0, !dbg !6816
  %140 = load i8, i8* %arrayidx, align 1, !dbg !6816
  store i8 %140, i8* %skip_reason, align 1, !dbg !6817
  %141 = load i8*, i8** %side, align 8, !dbg !6818
  %add.ptr121 = getelementptr inbounds i8, i8* %141, i64 9, !dbg !6819
  %arrayidx122 = getelementptr inbounds i8, i8* %add.ptr121, i64 0, !dbg !6820
  %142 = load i8, i8* %arrayidx122, align 1, !dbg !6820
  store i8 %142, i8* %discard_reason, align 1, !dbg !6821
  br label %if.end123, !dbg !6822

if.end123:                                        ; preds = %if.then114, %land.lhs.true112, %if.end109
  %143 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6823
  %flags124 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %143, i32 0, i32 30, !dbg !6825
  %144 = load i32, i32* %flags124, align 4, !dbg !6825
  %and125 = and i32 %144, 4, !dbg !6826
  %tobool126 = icmp ne i32 %and125, 0, !dbg !6826
  br i1 %tobool126, label %land.lhs.true127, label %if.end142, !dbg !6827

land.lhs.true127:                                 ; preds = %if.end123
  %145 = load i32, i32* %got_frame, align 4, !dbg !6828
  %tobool128 = icmp ne i32 %145, 0, !dbg !6828
  br i1 %tobool128, label %land.lhs.true129, label %if.end142, !dbg !6830

land.lhs.true129:                                 ; preds = %land.lhs.true127
  %146 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6831
  %flags2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %146, i32 0, i32 14, !dbg !6832
  %147 = load i32, i32* %flags2, align 8, !dbg !6832
  %and130 = and i32 %147, 536870912, !dbg !6833
  %tobool131 = icmp ne i32 %and130, 0, !dbg !6833
  br i1 %tobool131, label %if.end142, label %if.then132, !dbg !6834

if.then132:                                       ; preds = %land.lhs.true129
  %148 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6836
  %internal133 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %148, i32 0, i32 7, !dbg !6838
  %149 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal133, align 8, !dbg !6838
  %skip_samples134 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %149, i32 0, i32 12, !dbg !6839
  %150 = load i32, i32* %skip_samples134, align 8, !dbg !6839
  %151 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6840
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %151, i32 0, i32 5, !dbg !6841
  %152 = load i32, i32* %nb_samples, align 8, !dbg !6841
  %sub = sub nsw i32 %150, %152, !dbg !6842
  %cmp135 = icmp sgt i32 0, %sub, !dbg !6843
  br i1 %cmp135, label %cond.true, label %cond.false, !dbg !6844

cond.true:                                        ; preds = %if.then132
  br label %cond.end, !dbg !6845

cond.false:                                       ; preds = %if.then132
  %153 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6847
  %internal136 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %153, i32 0, i32 7, !dbg !6849
  %154 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal136, align 8, !dbg !6849
  %skip_samples137 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %154, i32 0, i32 12, !dbg !6850
  %155 = load i32, i32* %skip_samples137, align 8, !dbg !6850
  %156 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6851
  %nb_samples138 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %156, i32 0, i32 5, !dbg !6852
  %157 = load i32, i32* %nb_samples138, align 8, !dbg !6852
  %sub139 = sub nsw i32 %155, %157, !dbg !6853
  br label %cond.end, !dbg !6854

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %sub139, %cond.false ], !dbg !6855
  %158 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6857
  %internal140 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %158, i32 0, i32 7, !dbg !6858
  %159 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal140, align 8, !dbg !6858
  %skip_samples141 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %159, i32 0, i32 12, !dbg !6859
  store i32 %cond, i32* %skip_samples141, align 8, !dbg !6860
  store i32 0, i32* %got_frame, align 4, !dbg !6861
  br label %if.end142, !dbg !6862

if.end142:                                        ; preds = %cond.end, %land.lhs.true129, %land.lhs.true127, %if.end123
  %160 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6863
  %internal143 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %160, i32 0, i32 7, !dbg !6865
  %161 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal143, align 8, !dbg !6865
  %skip_samples144 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %161, i32 0, i32 12, !dbg !6866
  %162 = load i32, i32* %skip_samples144, align 8, !dbg !6866
  %cmp145 = icmp sgt i32 %162, 0, !dbg !6867
  br i1 %cmp145, label %land.lhs.true146, label %if.end224, !dbg !6868

land.lhs.true146:                                 ; preds = %if.end142
  %163 = load i32, i32* %got_frame, align 4, !dbg !6869
  %tobool147 = icmp ne i32 %163, 0, !dbg !6869
  br i1 %tobool147, label %land.lhs.true148, label %if.end224, !dbg !6871

land.lhs.true148:                                 ; preds = %land.lhs.true146
  %164 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6872
  %flags2149 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %164, i32 0, i32 14, !dbg !6873
  %165 = load i32, i32* %flags2149, align 8, !dbg !6873
  %and150 = and i32 %165, 536870912, !dbg !6874
  %tobool151 = icmp ne i32 %and150, 0, !dbg !6874
  br i1 %tobool151, label %if.end224, label %if.then152, !dbg !6875

if.then152:                                       ; preds = %land.lhs.true148
  %166 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6876
  %nb_samples153 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %166, i32 0, i32 5, !dbg !6879
  %167 = load i32, i32* %nb_samples153, align 8, !dbg !6879
  %168 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6880
  %internal154 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %168, i32 0, i32 7, !dbg !6881
  %169 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal154, align 8, !dbg !6881
  %skip_samples155 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %169, i32 0, i32 12, !dbg !6882
  %170 = load i32, i32* %skip_samples155, align 8, !dbg !6882
  %cmp156 = icmp sle i32 %167, %170, !dbg !6883
  br i1 %cmp156, label %if.then157, label %if.else164, !dbg !6884

if.then157:                                       ; preds = %if.then152
  store i32 0, i32* %got_frame, align 4, !dbg !6885
  %171 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6887
  %nb_samples158 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %171, i32 0, i32 5, !dbg !6888
  %172 = load i32, i32* %nb_samples158, align 8, !dbg !6888
  %173 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6889
  %internal159 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %173, i32 0, i32 7, !dbg !6890
  %174 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal159, align 8, !dbg !6890
  %skip_samples160 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %174, i32 0, i32 12, !dbg !6891
  %175 = load i32, i32* %skip_samples160, align 8, !dbg !6892
  %sub161 = sub nsw i32 %175, %172, !dbg !6892
  store i32 %sub161, i32* %skip_samples160, align 8, !dbg !6892
  %176 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6893
  %177 = bitcast %struct.AVCodecContext* %176 to i8*, !dbg !6893
  %178 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6894
  %internal162 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %178, i32 0, i32 7, !dbg !6895
  %179 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal162, align 8, !dbg !6895
  %skip_samples163 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %179, i32 0, i32 12, !dbg !6896
  %180 = load i32, i32* %skip_samples163, align 8, !dbg !6896
  call void (i8*, i32, i8*, ...) @av_log(i8* %177, i32 48, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.36, i32 0, i32 0), i32 %180), !dbg !6897
  br label %if.end223, !dbg !6898

if.else164:                                       ; preds = %if.then152
  %181 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6899
  %extended_data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %181, i32 0, i32 2, !dbg !6901
  %182 = load i8**, i8*** %extended_data, align 8, !dbg !6901
  %183 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6902
  %extended_data165 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %183, i32 0, i32 2, !dbg !6903
  %184 = load i8**, i8*** %extended_data165, align 8, !dbg !6903
  %185 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6904
  %internal166 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %185, i32 0, i32 7, !dbg !6905
  %186 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal166, align 8, !dbg !6905
  %skip_samples167 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %186, i32 0, i32 12, !dbg !6906
  %187 = load i32, i32* %skip_samples167, align 8, !dbg !6906
  %188 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6907
  %nb_samples168 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %188, i32 0, i32 5, !dbg !6908
  %189 = load i32, i32* %nb_samples168, align 8, !dbg !6908
  %190 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6909
  %internal169 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %190, i32 0, i32 7, !dbg !6910
  %191 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal169, align 8, !dbg !6910
  %skip_samples170 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %191, i32 0, i32 12, !dbg !6911
  %192 = load i32, i32* %skip_samples170, align 8, !dbg !6911
  %sub171 = sub nsw i32 %189, %192, !dbg !6912
  %193 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6913
  %channels172 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %193, i32 0, i32 83, !dbg !6914
  %194 = load i32, i32* %channels172, align 4, !dbg !6914
  %195 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6915
  %format173 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %195, i32 0, i32 6, !dbg !6916
  %196 = load i32, i32* %format173, align 4, !dbg !6916
  %call174 = call i32 @av_samples_copy(i8** %182, i8** %184, i32 0, i32 %187, i32 %sub171, i32 %194, i32 %196), !dbg !6917
  %197 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6918
  %pkt_timebase = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %197, i32 0, i32 165, !dbg !6920
  %num175 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %pkt_timebase, i32 0, i32 0, !dbg !6921
  %198 = load i32, i32* %num175, align 4, !dbg !6921
  %tobool176 = icmp ne i32 %198, 0, !dbg !6918
  br i1 %tobool176, label %land.lhs.true177, label %if.else212, !dbg !6922

land.lhs.true177:                                 ; preds = %if.else164
  %199 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6923
  %sample_rate178 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %199, i32 0, i32 82, !dbg !6925
  %200 = load i32, i32* %sample_rate178, align 8, !dbg !6925
  %tobool179 = icmp ne i32 %200, 0, !dbg !6923
  br i1 %tobool179, label %if.then180, label %if.else212, !dbg !6926

if.then180:                                       ; preds = %land.lhs.true177
  call void @llvm.dbg.declare(metadata i64* %diff_ts, metadata !6927, metadata !1805), !dbg !6929
  %201 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6930
  %internal181 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %201, i32 0, i32 7, !dbg !6931
  %202 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal181, align 8, !dbg !6931
  %skip_samples182 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %202, i32 0, i32 12, !dbg !6932
  %203 = load i32, i32* %skip_samples182, align 8, !dbg !6932
  %conv = sext i32 %203 to i64, !dbg !6930
  %num183 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !6933
  store i32 1, i32* %num183, align 4, !dbg !6933
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !6933
  %204 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6934
  %sample_rate184 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %204, i32 0, i32 82, !dbg !6935
  %205 = load i32, i32* %sample_rate184, align 8, !dbg !6935
  store i32 %205, i32* %den, align 4, !dbg !6933
  %206 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6936
  %pkt_timebase185 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %206, i32 0, i32 165, !dbg !6937
  %207 = bitcast %struct.AVRational* %.compoundliteral to i64*, !dbg !6938
  %208 = load i64, i64* %207, align 4, !dbg !6938
  %209 = bitcast %struct.AVRational* %pkt_timebase185 to i64*, !dbg !6938
  %210 = load i64, i64* %209, align 4, !dbg !6938
  %call186 = call i64 @av_rescale_q(i64 %conv, i64 %208, i64 %210) #1, !dbg !6938
  store i64 %call186, i64* %diff_ts, align 8, !dbg !6929
  %211 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6939
  %pts187 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %211, i32 0, i32 10, !dbg !6941
  %212 = load i64, i64* %pts187, align 8, !dbg !6941
  %cmp188 = icmp ne i64 %212, -9223372036854775808, !dbg !6942
  br i1 %cmp188, label %if.then190, label %if.end192, !dbg !6943

if.then190:                                       ; preds = %if.then180
  %213 = load i64, i64* %diff_ts, align 8, !dbg !6944
  %214 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6945
  %pts191 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %214, i32 0, i32 10, !dbg !6946
  %215 = load i64, i64* %pts191, align 8, !dbg !6947
  %add = add nsw i64 %215, %213, !dbg !6947
  store i64 %add, i64* %pts191, align 8, !dbg !6947
  br label %if.end192, !dbg !6945

if.end192:                                        ; preds = %if.then190, %if.then180
  %216 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6948
  %pkt_pts = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %216, i32 0, i32 11, !dbg !6950
  %217 = load i64, i64* %pkt_pts, align 8, !dbg !6950
  %cmp193 = icmp ne i64 %217, -9223372036854775808, !dbg !6951
  br i1 %cmp193, label %if.then195, label %if.end198, !dbg !6952

if.then195:                                       ; preds = %if.end192
  %218 = load i64, i64* %diff_ts, align 8, !dbg !6953
  %219 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6954
  %pkt_pts196 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %219, i32 0, i32 11, !dbg !6955
  %220 = load i64, i64* %pkt_pts196, align 8, !dbg !6956
  %add197 = add nsw i64 %220, %218, !dbg !6956
  store i64 %add197, i64* %pkt_pts196, align 8, !dbg !6956
  br label %if.end198, !dbg !6954

if.end198:                                        ; preds = %if.then195, %if.end192
  %221 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6957
  %pkt_dts199 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %221, i32 0, i32 12, !dbg !6959
  %222 = load i64, i64* %pkt_dts199, align 8, !dbg !6959
  %cmp200 = icmp ne i64 %222, -9223372036854775808, !dbg !6960
  br i1 %cmp200, label %if.then202, label %if.end205, !dbg !6961

if.then202:                                       ; preds = %if.end198
  %223 = load i64, i64* %diff_ts, align 8, !dbg !6962
  %224 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6963
  %pkt_dts203 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %224, i32 0, i32 12, !dbg !6964
  %225 = load i64, i64* %pkt_dts203, align 8, !dbg !6965
  %add204 = add nsw i64 %225, %223, !dbg !6965
  store i64 %add204, i64* %pkt_dts203, align 8, !dbg !6965
  br label %if.end205, !dbg !6963

if.end205:                                        ; preds = %if.then202, %if.end198
  %226 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6966
  %pkt_duration = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %226, i32 0, i32 38, !dbg !6968
  %227 = load i64, i64* %pkt_duration, align 8, !dbg !6968
  %228 = load i64, i64* %diff_ts, align 8, !dbg !6969
  %cmp206 = icmp sge i64 %227, %228, !dbg !6970
  br i1 %cmp206, label %if.then208, label %if.end211, !dbg !6971

if.then208:                                       ; preds = %if.end205
  %229 = load i64, i64* %diff_ts, align 8, !dbg !6972
  %230 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6973
  %pkt_duration209 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %230, i32 0, i32 38, !dbg !6974
  %231 = load i64, i64* %pkt_duration209, align 8, !dbg !6975
  %sub210 = sub nsw i64 %231, %229, !dbg !6975
  store i64 %sub210, i64* %pkt_duration209, align 8, !dbg !6975
  br label %if.end211, !dbg !6973

if.end211:                                        ; preds = %if.then208, %if.end205
  br label %if.end213, !dbg !6976

if.else212:                                       ; preds = %land.lhs.true177, %if.else164
  %232 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6977
  %233 = bitcast %struct.AVCodecContext* %232 to i8*, !dbg !6977
  call void (i8*, i32, i8*, ...) @av_log(i8* %233, i32 24, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.37, i32 0, i32 0)), !dbg !6979
  br label %if.end213

if.end213:                                        ; preds = %if.else212, %if.end211
  %234 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6980
  %235 = bitcast %struct.AVCodecContext* %234 to i8*, !dbg !6980
  %236 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6981
  %internal214 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %236, i32 0, i32 7, !dbg !6982
  %237 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal214, align 8, !dbg !6982
  %skip_samples215 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %237, i32 0, i32 12, !dbg !6983
  %238 = load i32, i32* %skip_samples215, align 8, !dbg !6983
  %239 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6984
  %nb_samples216 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %239, i32 0, i32 5, !dbg !6985
  %240 = load i32, i32* %nb_samples216, align 8, !dbg !6985
  call void (i8*, i32, i8*, ...) @av_log(i8* %235, i32 48, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.38, i32 0, i32 0), i32 %238, i32 %240), !dbg !6986
  %241 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6987
  %internal217 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %241, i32 0, i32 7, !dbg !6988
  %242 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal217, align 8, !dbg !6988
  %skip_samples218 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %242, i32 0, i32 12, !dbg !6989
  %243 = load i32, i32* %skip_samples218, align 8, !dbg !6989
  %244 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6990
  %nb_samples219 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %244, i32 0, i32 5, !dbg !6991
  %245 = load i32, i32* %nb_samples219, align 8, !dbg !6992
  %sub220 = sub nsw i32 %245, %243, !dbg !6992
  store i32 %sub220, i32* %nb_samples219, align 8, !dbg !6992
  %246 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6993
  %internal221 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %246, i32 0, i32 7, !dbg !6994
  %247 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal221, align 8, !dbg !6994
  %skip_samples222 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %247, i32 0, i32 12, !dbg !6995
  store i32 0, i32* %skip_samples222, align 8, !dbg !6996
  br label %if.end223

if.end223:                                        ; preds = %if.end213, %if.then157
  br label %if.end224, !dbg !6997

if.end224:                                        ; preds = %if.end223, %land.lhs.true148, %land.lhs.true146, %if.end142
  %248 = load i32, i32* %discard_padding, align 4, !dbg !6998
  %cmp225 = icmp ugt i32 %248, 0, !dbg !7000
  br i1 %cmp225, label %land.lhs.true227, label %if.end267, !dbg !7001

land.lhs.true227:                                 ; preds = %if.end224
  %249 = load i32, i32* %discard_padding, align 4, !dbg !7002
  %250 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !7004
  %nb_samples228 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %250, i32 0, i32 5, !dbg !7005
  %251 = load i32, i32* %nb_samples228, align 8, !dbg !7005
  %cmp229 = icmp ule i32 %249, %251, !dbg !7006
  br i1 %cmp229, label %land.lhs.true231, label %if.end267, !dbg !7007

land.lhs.true231:                                 ; preds = %land.lhs.true227
  %252 = load i32, i32* %got_frame, align 4, !dbg !7008
  %tobool232 = icmp ne i32 %252, 0, !dbg !7008
  br i1 %tobool232, label %land.lhs.true233, label %if.end267, !dbg !7010

land.lhs.true233:                                 ; preds = %land.lhs.true231
  %253 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7011
  %flags2234 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %253, i32 0, i32 14, !dbg !7012
  %254 = load i32, i32* %flags2234, align 8, !dbg !7012
  %and235 = and i32 %254, 536870912, !dbg !7013
  %tobool236 = icmp ne i32 %and235, 0, !dbg !7013
  br i1 %tobool236, label %if.end267, label %if.then237, !dbg !7014

if.then237:                                       ; preds = %land.lhs.true233
  %255 = load i32, i32* %discard_padding, align 4, !dbg !7016
  %256 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !7019
  %nb_samples238 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %256, i32 0, i32 5, !dbg !7020
  %257 = load i32, i32* %nb_samples238, align 8, !dbg !7020
  %cmp239 = icmp eq i32 %255, %257, !dbg !7021
  br i1 %cmp239, label %if.then241, label %if.else242, !dbg !7022

if.then241:                                       ; preds = %if.then237
  store i32 0, i32* %got_frame, align 4, !dbg !7023
  br label %if.end266, !dbg !7025

if.else242:                                       ; preds = %if.then237
  %258 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7026
  %pkt_timebase243 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %258, i32 0, i32 165, !dbg !7029
  %num244 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %pkt_timebase243, i32 0, i32 0, !dbg !7030
  %259 = load i32, i32* %num244, align 4, !dbg !7030
  %tobool245 = icmp ne i32 %259, 0, !dbg !7026
  br i1 %tobool245, label %land.lhs.true246, label %if.else261, !dbg !7031

land.lhs.true246:                                 ; preds = %if.else242
  %260 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7032
  %sample_rate247 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %260, i32 0, i32 82, !dbg !7034
  %261 = load i32, i32* %sample_rate247, align 8, !dbg !7034
  %tobool248 = icmp ne i32 %261, 0, !dbg !7032
  br i1 %tobool248, label %if.then249, label %if.else261, !dbg !7035

if.then249:                                       ; preds = %land.lhs.true246
  call void @llvm.dbg.declare(metadata i64* %diff_ts250, metadata !7036, metadata !1805), !dbg !7038
  %262 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !7039
  %nb_samples251 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %262, i32 0, i32 5, !dbg !7040
  %263 = load i32, i32* %nb_samples251, align 8, !dbg !7040
  %264 = load i32, i32* %discard_padding, align 4, !dbg !7041
  %sub252 = sub i32 %263, %264, !dbg !7042
  %conv253 = zext i32 %sub252 to i64, !dbg !7039
  %num255 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral254, i32 0, i32 0, !dbg !7043
  store i32 1, i32* %num255, align 4, !dbg !7043
  %den256 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral254, i32 0, i32 1, !dbg !7043
  %265 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7044
  %sample_rate257 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %265, i32 0, i32 82, !dbg !7045
  %266 = load i32, i32* %sample_rate257, align 8, !dbg !7045
  store i32 %266, i32* %den256, align 4, !dbg !7043
  %267 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7046
  %pkt_timebase258 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %267, i32 0, i32 165, !dbg !7047
  %268 = bitcast %struct.AVRational* %.compoundliteral254 to i64*, !dbg !7048
  %269 = load i64, i64* %268, align 4, !dbg !7048
  %270 = bitcast %struct.AVRational* %pkt_timebase258 to i64*, !dbg !7048
  %271 = load i64, i64* %270, align 4, !dbg !7048
  %call259 = call i64 @av_rescale_q(i64 %conv253, i64 %269, i64 %271) #1, !dbg !7048
  store i64 %call259, i64* %diff_ts250, align 8, !dbg !7038
  %272 = load i64, i64* %diff_ts250, align 8, !dbg !7049
  %273 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !7050
  %pkt_duration260 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %273, i32 0, i32 38, !dbg !7051
  store i64 %272, i64* %pkt_duration260, align 8, !dbg !7052
  br label %if.end262, !dbg !7053

if.else261:                                       ; preds = %land.lhs.true246, %if.else242
  %274 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7054
  %275 = bitcast %struct.AVCodecContext* %274 to i8*, !dbg !7054
  call void (i8*, i32, i8*, ...) @av_log(i8* %275, i32 24, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.39, i32 0, i32 0)), !dbg !7056
  br label %if.end262

if.end262:                                        ; preds = %if.else261, %if.then249
  %276 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7057
  %277 = bitcast %struct.AVCodecContext* %276 to i8*, !dbg !7057
  %278 = load i32, i32* %discard_padding, align 4, !dbg !7058
  %279 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !7059
  %nb_samples263 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %279, i32 0, i32 5, !dbg !7060
  %280 = load i32, i32* %nb_samples263, align 8, !dbg !7060
  call void (i8*, i32, i8*, ...) @av_log(i8* %277, i32 48, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i32 0, i32 0), i32 %278, i32 %280), !dbg !7061
  %281 = load i32, i32* %discard_padding, align 4, !dbg !7062
  %282 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !7063
  %nb_samples264 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %282, i32 0, i32 5, !dbg !7064
  %283 = load i32, i32* %nb_samples264, align 8, !dbg !7065
  %sub265 = sub i32 %283, %281, !dbg !7065
  store i32 %sub265, i32* %nb_samples264, align 8, !dbg !7065
  br label %if.end266

if.end266:                                        ; preds = %if.end262, %if.then241
  br label %if.end267, !dbg !7066

if.end267:                                        ; preds = %if.end266, %land.lhs.true233, %land.lhs.true231, %land.lhs.true227, %if.end224
  %284 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7067
  %flags2268 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %284, i32 0, i32 14, !dbg !7069
  %285 = load i32, i32* %flags2268, align 8, !dbg !7069
  %and269 = and i32 %285, 536870912, !dbg !7070
  %tobool270 = icmp ne i32 %and269, 0, !dbg !7070
  br i1 %tobool270, label %land.lhs.true271, label %if.end295, !dbg !7071

land.lhs.true271:                                 ; preds = %if.end267
  %286 = load i32, i32* %got_frame, align 4, !dbg !7072
  %tobool272 = icmp ne i32 %286, 0, !dbg !7072
  br i1 %tobool272, label %if.then273, label %if.end295, !dbg !7074

if.then273:                                       ; preds = %land.lhs.true271
  call void @llvm.dbg.declare(metadata %struct.AVFrameSideData** %fside, metadata !7075, metadata !1805), !dbg !7077
  %287 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !7078
  %call274 = call %struct.AVFrameSideData* @av_frame_new_side_data(%struct.AVFrame* %287, i32 9, i32 10), !dbg !7079
  store %struct.AVFrameSideData* %call274, %struct.AVFrameSideData** %fside, align 8, !dbg !7077
  %288 = load %struct.AVFrameSideData*, %struct.AVFrameSideData** %fside, align 8, !dbg !7080
  %tobool275 = icmp ne %struct.AVFrameSideData* %288, null, !dbg !7080
  br i1 %tobool275, label %if.then276, label %if.end294, !dbg !7082

if.then276:                                       ; preds = %if.then273
  %289 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7083
  %internal277 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %289, i32 0, i32 7, !dbg !7085
  %290 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal277, align 8, !dbg !7085
  %skip_samples278 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %290, i32 0, i32 12, !dbg !7086
  %291 = load i32, i32* %skip_samples278, align 8, !dbg !7086
  %292 = load %struct.AVFrameSideData*, %struct.AVFrameSideData** %fside, align 8, !dbg !7087
  %data279 = getelementptr inbounds %struct.AVFrameSideData, %struct.AVFrameSideData* %292, i32 0, i32 1, !dbg !7088
  %293 = load i8*, i8** %data279, align 8, !dbg !7088
  %294 = bitcast i8* %293 to %union.unaligned_32*, !dbg !7089
  %l280 = bitcast %union.unaligned_32* %294 to i32*, !dbg !7089
  store i32 %291, i32* %l280, align 1, !dbg !7090
  %295 = load i32, i32* %discard_padding, align 4, !dbg !7091
  %296 = load %struct.AVFrameSideData*, %struct.AVFrameSideData** %fside, align 8, !dbg !7092
  %data281 = getelementptr inbounds %struct.AVFrameSideData, %struct.AVFrameSideData* %296, i32 0, i32 1, !dbg !7093
  %297 = load i8*, i8** %data281, align 8, !dbg !7093
  %add.ptr282 = getelementptr inbounds i8, i8* %297, i64 4, !dbg !7094
  %298 = bitcast i8* %add.ptr282 to %union.unaligned_32*, !dbg !7095
  %l283 = bitcast %union.unaligned_32* %298 to i32*, !dbg !7095
  store i32 %295, i32* %l283, align 1, !dbg !7096
  br label %do.body, !dbg !7097, !llvm.loop !7098

do.body:                                          ; preds = %if.then276
  %299 = load i8, i8* %skip_reason, align 1, !dbg !7099
  %300 = load %struct.AVFrameSideData*, %struct.AVFrameSideData** %fside, align 8, !dbg !7102
  %data284 = getelementptr inbounds %struct.AVFrameSideData, %struct.AVFrameSideData* %300, i32 0, i32 1, !dbg !7103
  %301 = load i8*, i8** %data284, align 8, !dbg !7103
  %add.ptr285 = getelementptr inbounds i8, i8* %301, i64 8, !dbg !7104
  %arrayidx286 = getelementptr inbounds i8, i8* %add.ptr285, i64 0, !dbg !7105
  store i8 %299, i8* %arrayidx286, align 1, !dbg !7106
  br label %do.end, !dbg !7107

do.end:                                           ; preds = %do.body
  br label %do.body287, !dbg !7108, !llvm.loop !7109

do.body287:                                       ; preds = %do.end
  %302 = load i8, i8* %discard_reason, align 1, !dbg !7110
  %303 = load %struct.AVFrameSideData*, %struct.AVFrameSideData** %fside, align 8, !dbg !7113
  %data288 = getelementptr inbounds %struct.AVFrameSideData, %struct.AVFrameSideData* %303, i32 0, i32 1, !dbg !7114
  %304 = load i8*, i8** %data288, align 8, !dbg !7114
  %add.ptr289 = getelementptr inbounds i8, i8* %304, i64 9, !dbg !7115
  %arrayidx290 = getelementptr inbounds i8, i8* %add.ptr289, i64 0, !dbg !7116
  store i8 %302, i8* %arrayidx290, align 1, !dbg !7117
  br label %do.end291, !dbg !7118

do.end291:                                        ; preds = %do.body287
  %305 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7119
  %internal292 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %305, i32 0, i32 7, !dbg !7120
  %306 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal292, align 8, !dbg !7120
  %skip_samples293 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %306, i32 0, i32 12, !dbg !7121
  store i32 0, i32* %skip_samples293, align 8, !dbg !7122
  br label %if.end294, !dbg !7123

if.end294:                                        ; preds = %do.end291, %if.then273
  br label %if.end295, !dbg !7124

if.end295:                                        ; preds = %if.end294, %land.lhs.true271, %if.end267
  br label %if.end296, !dbg !7125

if.end296:                                        ; preds = %if.end295, %if.else76
  br label %if.end297

if.end297:                                        ; preds = %if.end296, %if.end75
  %307 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7126
  %codec298 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %307, i32 0, i32 3, !dbg !7128
  %308 = load %struct.AVCodec*, %struct.AVCodec** %codec298, align 8, !dbg !7128
  %type299 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %308, i32 0, i32 2, !dbg !7129
  %309 = load i32, i32* %type299, align 8, !dbg !7129
  %cmp300 = icmp eq i32 %309, 1, !dbg !7130
  br i1 %cmp300, label %land.lhs.true302, label %if.end317, !dbg !7131

land.lhs.true302:                                 ; preds = %if.end297
  %310 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !7132
  %showed_multi_packet_warning = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %310, i32 0, i32 24, !dbg !7133
  %311 = load i32, i32* %showed_multi_packet_warning, align 8, !dbg !7133
  %tobool303 = icmp ne i32 %311, 0, !dbg !7132
  br i1 %tobool303, label %if.end317, label %land.lhs.true304, !dbg !7134

land.lhs.true304:                                 ; preds = %land.lhs.true302
  %312 = load i32, i32* %ret, align 4, !dbg !7135
  %cmp305 = icmp sge i32 %312, 0, !dbg !7136
  br i1 %cmp305, label %land.lhs.true307, label %if.end317, !dbg !7137

land.lhs.true307:                                 ; preds = %land.lhs.true304
  %313 = load i32, i32* %ret, align 4, !dbg !7138
  %314 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !7140
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %314, i32 0, i32 4, !dbg !7141
  %315 = load i32, i32* %size, align 8, !dbg !7141
  %cmp308 = icmp ne i32 %313, %315, !dbg !7142
  br i1 %cmp308, label %land.lhs.true310, label %if.end317, !dbg !7143

land.lhs.true310:                                 ; preds = %land.lhs.true307
  %316 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7144
  %codec311 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %316, i32 0, i32 3, !dbg !7146
  %317 = load %struct.AVCodec*, %struct.AVCodec** %codec311, align 8, !dbg !7146
  %capabilities312 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %317, i32 0, i32 4, !dbg !7147
  %318 = load i32, i32* %capabilities312, align 8, !dbg !7147
  %and313 = and i32 %318, 256, !dbg !7148
  %tobool314 = icmp ne i32 %and313, 0, !dbg !7148
  br i1 %tobool314, label %if.end317, label %if.then315, !dbg !7149

if.then315:                                       ; preds = %land.lhs.true310
  %319 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7150
  %320 = bitcast %struct.AVCodecContext* %319 to i8*, !dbg !7150
  call void (i8*, i32, i8*, ...) @av_log(i8* %320, i32 24, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.41, i32 0, i32 0)), !dbg !7152
  %321 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !7153
  %showed_multi_packet_warning316 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %321, i32 0, i32 24, !dbg !7154
  store i32 1, i32* %showed_multi_packet_warning316, align 8, !dbg !7155
  br label %if.end317, !dbg !7156

if.end317:                                        ; preds = %if.then315, %land.lhs.true310, %land.lhs.true307, %land.lhs.true304, %land.lhs.true302, %if.end297
  %322 = load i32, i32* %got_frame, align 4, !dbg !7157
  %tobool318 = icmp ne i32 %322, 0, !dbg !7157
  br i1 %tobool318, label %if.end320, label %if.then319, !dbg !7159

if.then319:                                       ; preds = %if.end317
  %323 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !7160
  call void @av_frame_unref(%struct.AVFrame* %323), !dbg !7161
  br label %if.end320, !dbg !7161

if.end320:                                        ; preds = %if.then319, %if.end317
  %324 = load i32, i32* %ret, align 4, !dbg !7162
  %cmp321 = icmp sge i32 %324, 0, !dbg !7164
  br i1 %cmp321, label %land.lhs.true323, label %if.end334, !dbg !7165

land.lhs.true323:                                 ; preds = %if.end320
  %325 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7166
  %codec324 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %325, i32 0, i32 3, !dbg !7168
  %326 = load %struct.AVCodec*, %struct.AVCodec** %codec324, align 8, !dbg !7168
  %type325 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %326, i32 0, i32 2, !dbg !7169
  %327 = load i32, i32* %type325, align 8, !dbg !7169
  %cmp326 = icmp eq i32 %327, 0, !dbg !7170
  br i1 %cmp326, label %land.lhs.true328, label %if.end334, !dbg !7171

land.lhs.true328:                                 ; preds = %land.lhs.true323
  %328 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7172
  %flags329 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %328, i32 0, i32 13, !dbg !7174
  %329 = load i32, i32* %flags329, align 4, !dbg !7174
  %and330 = and i32 %329, 65536, !dbg !7175
  %tobool331 = icmp ne i32 %and330, 0, !dbg !7175
  br i1 %tobool331, label %if.end334, label %if.then332, !dbg !7176

if.then332:                                       ; preds = %land.lhs.true328
  %330 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !7177
  %size333 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %330, i32 0, i32 4, !dbg !7178
  %331 = load i32, i32* %size333, align 8, !dbg !7178
  store i32 %331, i32* %ret, align 4, !dbg !7179
  br label %if.end334, !dbg !7180

if.end334:                                        ; preds = %if.then332, %land.lhs.true328, %land.lhs.true323, %if.end320
  %332 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7181
  %framerate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %332, i32 0, i32 163, !dbg !7182
  %num335 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %framerate, i32 0, i32 0, !dbg !7183
  %333 = load i32, i32* %num335, align 8, !dbg !7183
  %cmp336 = icmp sgt i32 %333, 0, !dbg !7184
  br i1 %cmp336, label %land.lhs.true338, label %if.end350, !dbg !7185

land.lhs.true338:                                 ; preds = %if.end334
  %334 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7186
  %framerate339 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %334, i32 0, i32 163, !dbg !7187
  %den340 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %framerate339, i32 0, i32 1, !dbg !7188
  %335 = load i32, i32* %den340, align 4, !dbg !7188
  %cmp341 = icmp sgt i32 %335, 0, !dbg !7189
  br i1 %cmp341, label %if.then343, label %if.end350, !dbg !7190

if.then343:                                       ; preds = %land.lhs.true338
  %336 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7191
  %time_base = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %336, i32 0, i32 17, !dbg !7192
  %337 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7193
  %framerate344 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %337, i32 0, i32 163, !dbg !7194
  %num346 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral345, i32 0, i32 0, !dbg !7195
  %338 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7196
  %ticks_per_frame = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %338, i32 0, i32 18, !dbg !7197
  %339 = load i32, i32* %ticks_per_frame, align 4, !dbg !7197
  store i32 %339, i32* %num346, align 4, !dbg !7195
  %den347 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral345, i32 0, i32 1, !dbg !7195
  store i32 1, i32* %den347, align 4, !dbg !7195
  %340 = bitcast %struct.AVRational* %framerate344 to i64*, !dbg !7198
  %341 = load i64, i64* %340, align 8, !dbg !7198
  %342 = bitcast %struct.AVRational* %.compoundliteral345 to i64*, !dbg !7198
  %343 = load i64, i64* %342, align 4, !dbg !7198
  %call348 = call i64 @av_mul_q(i64 %341, i64 %343) #1, !dbg !7198
  %344 = bitcast %struct.AVRational* %agg.tmp to i64*, !dbg !7198
  store i64 %call348, i64* %344, align 4, !dbg !7198
  %345 = bitcast %struct.AVRational* %agg.tmp to i64*, !dbg !7199
  %346 = load i64, i64* %345, align 4, !dbg !7199
  %347 = bitcast %struct.AVRational* %q.i to i64*, !dbg !7200
  store i64 %346, i64* %347, align 4, !dbg !7200
  %num.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r.i, i32 0, i32 0, !dbg !7201
  %den.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q.i, i32 0, i32 1, !dbg !7202
  %348 = load i32, i32* %den.i, align 4, !dbg !7202
  store i32 %348, i32* %num.i, align 4, !dbg !7201
  %den1.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r.i, i32 0, i32 1, !dbg !7201
  %num2.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q.i, i32 0, i32 0, !dbg !7203
  %349 = load i32, i32* %num2.i, align 4, !dbg !7203
  store i32 %349, i32* %den1.i, align 4, !dbg !7201
  %350 = bitcast %struct.AVRational* %retval.i to i8*, !dbg !7204
  %351 = bitcast %struct.AVRational* %r.i to i8*, !dbg !7204
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %350, i8* %351, i64 8, i32 4, i1 false) #11, !dbg !7204
  %352 = bitcast %struct.AVRational* %retval.i to i64*, !dbg !7205
  %353 = load i64, i64* %352, align 4, !dbg !7205
  %354 = bitcast %struct.AVRational* %coerce to i64*, !dbg !7199
  store i64 %353, i64* %354, align 4, !dbg !7199
  %355 = bitcast %struct.AVRational* %time_base to i8*, !dbg !7199
  %356 = bitcast %struct.AVRational* %coerce to i8*, !dbg !7199
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %355, i8* %356, i64 8, i32 4, i1 false), !dbg !7206
  br label %if.end350, !dbg !7191

if.end350:                                        ; preds = %if.then343, %land.lhs.true338, %if.end334
  %357 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7208
  %internal351 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %357, i32 0, i32 7, !dbg !7210
  %358 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal351, align 8, !dbg !7210
  %draining352 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %358, i32 0, i32 14, !dbg !7211
  %359 = load i32, i32* %draining352, align 8, !dbg !7211
  %tobool353 = icmp ne i32 %359, 0, !dbg !7208
  br i1 %tobool353, label %land.lhs.true354, label %if.end376, !dbg !7212

land.lhs.true354:                                 ; preds = %if.end350
  %360 = load i32, i32* %actual_got_frame, align 4, !dbg !7213
  %tobool355 = icmp ne i32 %360, 0, !dbg !7213
  br i1 %tobool355, label %if.end376, label %if.then356, !dbg !7215

if.then356:                                       ; preds = %land.lhs.true354
  %361 = load i32, i32* %ret, align 4, !dbg !7216
  %cmp357 = icmp slt i32 %361, 0, !dbg !7219
  br i1 %cmp357, label %if.then359, label %if.else373, !dbg !7220

if.then359:                                       ; preds = %if.then356
  call void @llvm.dbg.declare(metadata i32* %nb_errors_max, metadata !7221, metadata !1805), !dbg !7223
  %362 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7224
  %active_thread_type360 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %362, i32 0, i32 148, !dbg !7225
  %363 = load i32, i32* %active_thread_type360, align 8, !dbg !7225
  %and361 = and i32 %363, 1, !dbg !7226
  %tobool362 = icmp ne i32 %and361, 0, !dbg !7226
  br i1 %tobool362, label %cond.true363, label %cond.false364, !dbg !7227

cond.true363:                                     ; preds = %if.then359
  %364 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7228
  %thread_count = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %364, i32 0, i32 146, !dbg !7229
  %365 = load i32, i32* %thread_count, align 8, !dbg !7229
  br label %cond.end365, !dbg !7230

cond.false364:                                    ; preds = %if.then359
  br label %cond.end365, !dbg !7232

cond.end365:                                      ; preds = %cond.false364, %cond.true363
  %cond366 = phi i32 [ %365, %cond.true363 ], [ 1, %cond.false364 ], !dbg !7234
  %add367 = add nsw i32 20, %cond366, !dbg !7236
  store i32 %add367, i32* %nb_errors_max, align 4, !dbg !7237
  %366 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !7238
  %nb_draining_errors = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %366, i32 0, i32 26, !dbg !7240
  %367 = load i32, i32* %nb_draining_errors, align 8, !dbg !7241
  %inc = add nsw i32 %367, 1, !dbg !7241
  store i32 %inc, i32* %nb_draining_errors, align 8, !dbg !7241
  %368 = load i32, i32* %nb_errors_max, align 4, !dbg !7242
  %cmp368 = icmp sge i32 %367, %368, !dbg !7243
  br i1 %cmp368, label %if.then370, label %if.end372, !dbg !7244

if.then370:                                       ; preds = %cond.end365
  %369 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7245
  %370 = bitcast %struct.AVCodecContext* %369 to i8*, !dbg !7245
  call void (i8*, i32, i8*, ...) @av_log(i8* %370, i32 16, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.42, i32 0, i32 0)), !dbg !7247
  %371 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !7248
  %draining_done371 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %371, i32 0, i32 18, !dbg !7249
  store i32 1, i32* %draining_done371, align 8, !dbg !7250
  store i32 -558323010, i32* %ret, align 4, !dbg !7251
  br label %if.end372, !dbg !7252

if.end372:                                        ; preds = %if.then370, %cond.end365
  br label %if.end375, !dbg !7253

if.else373:                                       ; preds = %if.then356
  %372 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !7254
  %draining_done374 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %372, i32 0, i32 18, !dbg !7256
  store i32 1, i32* %draining_done374, align 8, !dbg !7257
  br label %if.end375

if.end375:                                        ; preds = %if.else373, %if.end372
  br label %if.end376, !dbg !7258

if.end376:                                        ; preds = %if.end375, %land.lhs.true354, %if.end350
  %373 = load i32, i32* %ret, align 4, !dbg !7259
  %conv377 = sext i32 %373 to i64, !dbg !7259
  %374 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !7260
  %compat_decode_consumed = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %374, i32 0, i32 21, !dbg !7261
  %375 = load i64, i64* %compat_decode_consumed, align 8, !dbg !7262
  %add378 = add i64 %375, %conv377, !dbg !7262
  store i64 %add378, i64* %compat_decode_consumed, align 8, !dbg !7262
  %376 = load i32, i32* %ret, align 4, !dbg !7263
  %377 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !7265
  %size379 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %377, i32 0, i32 4, !dbg !7266
  %378 = load i32, i32* %size379, align 8, !dbg !7266
  %cmp380 = icmp sge i32 %376, %378, !dbg !7267
  br i1 %cmp380, label %if.then385, label %lor.lhs.false382, !dbg !7268

lor.lhs.false382:                                 ; preds = %if.end376
  %379 = load i32, i32* %ret, align 4, !dbg !7269
  %cmp383 = icmp slt i32 %379, 0, !dbg !7271
  br i1 %cmp383, label %if.then385, label %if.else386, !dbg !7272

if.then385:                                       ; preds = %lor.lhs.false382, %if.end376
  %380 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !7273
  call void @av_packet_unref(%struct.AVPacket* %380), !dbg !7275
  br label %if.end400, !dbg !7276

if.else386:                                       ; preds = %lor.lhs.false382
  call void @llvm.dbg.declare(metadata i32* %consumed, metadata !7277, metadata !1805), !dbg !7279
  %381 = load i32, i32* %ret, align 4, !dbg !7280
  store i32 %381, i32* %consumed, align 4, !dbg !7279
  %382 = load i32, i32* %consumed, align 4, !dbg !7281
  %383 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !7282
  %data387 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %383, i32 0, i32 3, !dbg !7283
  %384 = load i8*, i8** %data387, align 8, !dbg !7284
  %idx.ext = sext i32 %382 to i64, !dbg !7284
  %add.ptr388 = getelementptr inbounds i8, i8* %384, i64 %idx.ext, !dbg !7284
  store i8* %add.ptr388, i8** %data387, align 8, !dbg !7284
  %385 = load i32, i32* %consumed, align 4, !dbg !7285
  %386 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !7286
  %size389 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %386, i32 0, i32 4, !dbg !7287
  %387 = load i32, i32* %size389, align 8, !dbg !7288
  %sub390 = sub nsw i32 %387, %385, !dbg !7288
  store i32 %sub390, i32* %size389, align 8, !dbg !7288
  %388 = load i32, i32* %consumed, align 4, !dbg !7289
  %389 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !7290
  %last_pkt_props391 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %389, i32 0, i32 8, !dbg !7291
  %390 = load %struct.AVPacket*, %struct.AVPacket** %last_pkt_props391, align 8, !dbg !7291
  %size392 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %390, i32 0, i32 4, !dbg !7292
  %391 = load i32, i32* %size392, align 8, !dbg !7293
  %sub393 = sub nsw i32 %391, %388, !dbg !7293
  store i32 %sub393, i32* %size392, align 8, !dbg !7293
  %392 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !7294
  %pts394 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %392, i32 0, i32 1, !dbg !7295
  store i64 -9223372036854775808, i64* %pts394, align 8, !dbg !7296
  %393 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !7297
  %dts395 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %393, i32 0, i32 2, !dbg !7298
  store i64 -9223372036854775808, i64* %dts395, align 8, !dbg !7299
  %394 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !7300
  %last_pkt_props396 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %394, i32 0, i32 8, !dbg !7301
  %395 = load %struct.AVPacket*, %struct.AVPacket** %last_pkt_props396, align 8, !dbg !7301
  %pts397 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %395, i32 0, i32 1, !dbg !7302
  store i64 -9223372036854775808, i64* %pts397, align 8, !dbg !7303
  %396 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci, align 8, !dbg !7304
  %last_pkt_props398 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %396, i32 0, i32 8, !dbg !7305
  %397 = load %struct.AVPacket*, %struct.AVPacket** %last_pkt_props398, align 8, !dbg !7305
  %dts399 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %397, i32 0, i32 2, !dbg !7306
  store i64 -9223372036854775808, i64* %dts399, align 8, !dbg !7307
  br label %if.end400

if.end400:                                        ; preds = %if.else386, %if.then385
  %398 = load i32, i32* %got_frame, align 4, !dbg !7308
  %tobool401 = icmp ne i32 %398, 0, !dbg !7308
  br i1 %tobool401, label %if.then402, label %if.end409, !dbg !7310

if.then402:                                       ; preds = %if.end400
  br label %do.body403, !dbg !7311, !llvm.loop !7312

do.body403:                                       ; preds = %if.then402
  %399 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !7313
  %buf = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %399, i32 0, i32 25, !dbg !7317
  %arrayidx404 = getelementptr inbounds [8 x %struct.AVBufferRef*], [8 x %struct.AVBufferRef*]* %buf, i64 0, i64 0, !dbg !7313
  %400 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx404, align 8, !dbg !7313
  %tobool405 = icmp ne %struct.AVBufferRef* %400, null, !dbg !7318
  br i1 %tobool405, label %if.end407, label %if.then406, !dbg !7319

if.then406:                                       ; preds = %do.body403
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i32 0, i32 0), i32 619), !dbg !7320
  call void @abort() #9, !dbg !7323
  unreachable, !dbg !7325

if.end407:                                        ; preds = %do.body403
  br label %do.end408, !dbg !7326

do.end408:                                        ; preds = %if.end407
  br label %if.end409, !dbg !7328

if.end409:                                        ; preds = %do.end408, %if.end400
  %401 = load i32, i32* %ret, align 4, !dbg !7330
  %cmp410 = icmp slt i32 %401, 0, !dbg !7331
  br i1 %cmp410, label %cond.true412, label %cond.false413, !dbg !7330

cond.true412:                                     ; preds = %if.end409
  %402 = load i32, i32* %ret, align 4, !dbg !7332
  br label %cond.end414, !dbg !7333

cond.false413:                                    ; preds = %if.end409
  br label %cond.end414, !dbg !7334

cond.end414:                                      ; preds = %cond.false413, %cond.true412
  %cond415 = phi i32 [ %402, %cond.true412 ], [ 0, %cond.false413 ], !dbg !7336
  store i32 %cond415, i32* %retval, align 4, !dbg !7338
  br label %return, !dbg !7338

return:                                           ; preds = %cond.end414, %if.then16, %if.then8, %if.then5
  %403 = load i32, i32* %retval, align 4, !dbg !7339
  ret i32 %403, !dbg !7339
}

declare i32 @ff_thread_decode_frame(%struct.AVCodecContext*, %struct.AVFrame*, i32*, %struct.AVPacket*) #2

; Function Attrs: nounwind uwtable
define internal i64 @guess_correct_pts(%struct.AVCodecContext* %ctx, i64 %reordered_pts, i64 %dts) #0 !dbg !7340 {
entry:
  %ctx.addr = alloca %struct.AVCodecContext*, align 8
  %reordered_pts.addr = alloca i64, align 8
  %dts.addr = alloca i64, align 8
  %pts = alloca i64, align 8
  store %struct.AVCodecContext* %ctx, %struct.AVCodecContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %ctx.addr, metadata !7343, metadata !1805), !dbg !7344
  store i64 %reordered_pts, i64* %reordered_pts.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %reordered_pts.addr, metadata !7345, metadata !1805), !dbg !7346
  store i64 %dts, i64* %dts.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dts.addr, metadata !7347, metadata !1805), !dbg !7348
  call void @llvm.dbg.declare(metadata i64* %pts, metadata !7349, metadata !1805), !dbg !7350
  store i64 -9223372036854775808, i64* %pts, align 8, !dbg !7350
  %0 = load i64, i64* %dts.addr, align 8, !dbg !7351
  %cmp = icmp ne i64 %0, -9223372036854775808, !dbg !7353
  br i1 %cmp, label %if.then, label %if.else, !dbg !7354

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %dts.addr, align 8, !dbg !7355
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %ctx.addr, align 8, !dbg !7357
  %pts_correction_last_dts = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i32 0, i32 170, !dbg !7358
  %3 = load i64, i64* %pts_correction_last_dts, align 8, !dbg !7358
  %cmp1 = icmp sle i64 %1, %3, !dbg !7359
  %conv = zext i1 %cmp1 to i32, !dbg !7359
  %conv2 = sext i32 %conv to i64, !dbg !7355
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %ctx.addr, align 8, !dbg !7360
  %pts_correction_num_faulty_dts = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 168, !dbg !7361
  %5 = load i64, i64* %pts_correction_num_faulty_dts, align 8, !dbg !7362
  %add = add nsw i64 %5, %conv2, !dbg !7362
  store i64 %add, i64* %pts_correction_num_faulty_dts, align 8, !dbg !7362
  %6 = load i64, i64* %dts.addr, align 8, !dbg !7363
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %ctx.addr, align 8, !dbg !7364
  %pts_correction_last_dts3 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %7, i32 0, i32 170, !dbg !7365
  store i64 %6, i64* %pts_correction_last_dts3, align 8, !dbg !7366
  br label %if.end8, !dbg !7367

if.else:                                          ; preds = %entry
  %8 = load i64, i64* %reordered_pts.addr, align 8, !dbg !7368
  %cmp4 = icmp ne i64 %8, -9223372036854775808, !dbg !7371
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !7368

if.then6:                                         ; preds = %if.else
  %9 = load i64, i64* %reordered_pts.addr, align 8, !dbg !7372
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %ctx.addr, align 8, !dbg !7373
  %pts_correction_last_dts7 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %10, i32 0, i32 170, !dbg !7374
  store i64 %9, i64* %pts_correction_last_dts7, align 8, !dbg !7375
  br label %if.end, !dbg !7373

if.end:                                           ; preds = %if.then6, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then
  %11 = load i64, i64* %reordered_pts.addr, align 8, !dbg !7376
  %cmp9 = icmp ne i64 %11, -9223372036854775808, !dbg !7378
  br i1 %cmp9, label %if.then11, label %if.else17, !dbg !7379

if.then11:                                        ; preds = %if.end8
  %12 = load i64, i64* %reordered_pts.addr, align 8, !dbg !7380
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %ctx.addr, align 8, !dbg !7382
  %pts_correction_last_pts = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %13, i32 0, i32 169, !dbg !7383
  %14 = load i64, i64* %pts_correction_last_pts, align 8, !dbg !7383
  %cmp12 = icmp sle i64 %12, %14, !dbg !7384
  %conv13 = zext i1 %cmp12 to i32, !dbg !7384
  %conv14 = sext i32 %conv13 to i64, !dbg !7380
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %ctx.addr, align 8, !dbg !7385
  %pts_correction_num_faulty_pts = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %15, i32 0, i32 167, !dbg !7386
  %16 = load i64, i64* %pts_correction_num_faulty_pts, align 8, !dbg !7387
  %add15 = add nsw i64 %16, %conv14, !dbg !7387
  store i64 %add15, i64* %pts_correction_num_faulty_pts, align 8, !dbg !7387
  %17 = load i64, i64* %reordered_pts.addr, align 8, !dbg !7388
  %18 = load %struct.AVCodecContext*, %struct.AVCodecContext** %ctx.addr, align 8, !dbg !7389
  %pts_correction_last_pts16 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %18, i32 0, i32 169, !dbg !7390
  store i64 %17, i64* %pts_correction_last_pts16, align 8, !dbg !7391
  br label %if.end23, !dbg !7392

if.else17:                                        ; preds = %if.end8
  %19 = load i64, i64* %dts.addr, align 8, !dbg !7393
  %cmp18 = icmp ne i64 %19, -9223372036854775808, !dbg !7396
  br i1 %cmp18, label %if.then20, label %if.end22, !dbg !7393

if.then20:                                        ; preds = %if.else17
  %20 = load i64, i64* %dts.addr, align 8, !dbg !7397
  %21 = load %struct.AVCodecContext*, %struct.AVCodecContext** %ctx.addr, align 8, !dbg !7398
  %pts_correction_last_pts21 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %21, i32 0, i32 169, !dbg !7399
  store i64 %20, i64* %pts_correction_last_pts21, align 8, !dbg !7400
  br label %if.end22, !dbg !7398

if.end22:                                         ; preds = %if.then20, %if.else17
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.then11
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %ctx.addr, align 8, !dbg !7401
  %pts_correction_num_faulty_pts24 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %22, i32 0, i32 167, !dbg !7403
  %23 = load i64, i64* %pts_correction_num_faulty_pts24, align 8, !dbg !7403
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %ctx.addr, align 8, !dbg !7404
  %pts_correction_num_faulty_dts25 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %24, i32 0, i32 168, !dbg !7405
  %25 = load i64, i64* %pts_correction_num_faulty_dts25, align 8, !dbg !7405
  %cmp26 = icmp sle i64 %23, %25, !dbg !7406
  br i1 %cmp26, label %land.lhs.true, label %lor.lhs.false, !dbg !7407

lor.lhs.false:                                    ; preds = %if.end23
  %26 = load i64, i64* %dts.addr, align 8, !dbg !7408
  %cmp28 = icmp eq i64 %26, -9223372036854775808, !dbg !7410
  br i1 %cmp28, label %land.lhs.true, label %if.else33, !dbg !7411

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end23
  %27 = load i64, i64* %reordered_pts.addr, align 8, !dbg !7412
  %cmp30 = icmp ne i64 %27, -9223372036854775808, !dbg !7413
  br i1 %cmp30, label %if.then32, label %if.else33, !dbg !7414

if.then32:                                        ; preds = %land.lhs.true
  %28 = load i64, i64* %reordered_pts.addr, align 8, !dbg !7416
  store i64 %28, i64* %pts, align 8, !dbg !7417
  br label %if.end34, !dbg !7418

if.else33:                                        ; preds = %land.lhs.true, %lor.lhs.false
  %29 = load i64, i64* %dts.addr, align 8, !dbg !7419
  store i64 %29, i64* %pts, align 8, !dbg !7420
  br label %if.end34

if.end34:                                         ; preds = %if.else33, %if.then32
  %30 = load i64, i64* %pts, align 8, !dbg !7421
  ret i64 %30, !dbg !7422
}

declare i32 @av_samples_copy(i8**, i8**, i32, i32, i32, i32, i32) #2

; Function Attrs: nounwind readnone
declare i64 @av_mul_q(i64, i64) #4

declare i32 @av_frame_apply_cropping(%struct.AVFrame*, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @unrefcount_frame(%struct.AVCodecInternal* %avci, %struct.AVFrame* %frame) #0 !dbg !7423 {
entry:
  %retval = alloca i32, align 4
  %avci.addr = alloca %struct.AVCodecInternal*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %ret = alloca i32, align 4
  %planes = alloca i32, align 4
  %size = alloca i32, align 4
  store %struct.AVCodecInternal* %avci, %struct.AVCodecInternal** %avci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecInternal** %avci.addr, metadata !7426, metadata !1805), !dbg !7427
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !7428, metadata !1805), !dbg !7429
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7430, metadata !1805), !dbg !7431
  %0 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci.addr, align 8, !dbg !7432
  %to_free = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %0, i32 0, i32 3, !dbg !7433
  %1 = load %struct.AVFrame*, %struct.AVFrame** %to_free, align 8, !dbg !7433
  call void @av_frame_unref(%struct.AVFrame* %1), !dbg !7434
  %2 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci.addr, align 8, !dbg !7435
  %to_free1 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %2, i32 0, i32 3, !dbg !7436
  %3 = load %struct.AVFrame*, %struct.AVFrame** %to_free1, align 8, !dbg !7436
  %4 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !7437
  call void @av_frame_move_ref(%struct.AVFrame* %3, %struct.AVFrame* %4), !dbg !7438
  %5 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !7439
  %6 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci.addr, align 8, !dbg !7440
  %to_free2 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %6, i32 0, i32 3, !dbg !7441
  %7 = load %struct.AVFrame*, %struct.AVFrame** %to_free2, align 8, !dbg !7441
  %call = call i32 @av_frame_copy_props(%struct.AVFrame* %5, %struct.AVFrame* %7), !dbg !7442
  store i32 %call, i32* %ret, align 4, !dbg !7443
  %8 = load i32, i32* %ret, align 4, !dbg !7444
  %cmp = icmp slt i32 %8, 0, !dbg !7446
  br i1 %cmp, label %if.then, label %if.end, !dbg !7447

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %ret, align 4, !dbg !7448
  store i32 %9, i32* %retval, align 4, !dbg !7449
  br label %return, !dbg !7449

if.end:                                           ; preds = %entry
  %10 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !7450
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %10, i32 0, i32 0, !dbg !7451
  %arraydecay = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i32 0, i32 0, !dbg !7452
  %11 = bitcast i8** %arraydecay to i8*, !dbg !7452
  %12 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci.addr, align 8, !dbg !7453
  %to_free3 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %12, i32 0, i32 3, !dbg !7454
  %13 = load %struct.AVFrame*, %struct.AVFrame** %to_free3, align 8, !dbg !7454
  %data4 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %13, i32 0, i32 0, !dbg !7455
  %arraydecay5 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data4, i32 0, i32 0, !dbg !7452
  %14 = bitcast i8** %arraydecay5 to i8*, !dbg !7452
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %14, i64 64, i32 8, i1 false), !dbg !7452
  %15 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !7456
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %15, i32 0, i32 1, !dbg !7457
  %arraydecay6 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i32 0, i32 0, !dbg !7458
  %16 = bitcast i32* %arraydecay6 to i8*, !dbg !7458
  %17 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci.addr, align 8, !dbg !7459
  %to_free7 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %17, i32 0, i32 3, !dbg !7460
  %18 = load %struct.AVFrame*, %struct.AVFrame** %to_free7, align 8, !dbg !7460
  %linesize8 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %18, i32 0, i32 1, !dbg !7461
  %arraydecay9 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize8, i32 0, i32 0, !dbg !7458
  %19 = bitcast i32* %arraydecay9 to i8*, !dbg !7458
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %19, i64 32, i32 8, i1 false), !dbg !7458
  %20 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci.addr, align 8, !dbg !7462
  %to_free10 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %20, i32 0, i32 3, !dbg !7464
  %21 = load %struct.AVFrame*, %struct.AVFrame** %to_free10, align 8, !dbg !7464
  %extended_data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %21, i32 0, i32 2, !dbg !7465
  %22 = load i8**, i8*** %extended_data, align 8, !dbg !7465
  %23 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci.addr, align 8, !dbg !7466
  %to_free11 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %23, i32 0, i32 3, !dbg !7467
  %24 = load %struct.AVFrame*, %struct.AVFrame** %to_free11, align 8, !dbg !7467
  %data12 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %24, i32 0, i32 0, !dbg !7468
  %arraydecay13 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data12, i32 0, i32 0, !dbg !7466
  %cmp14 = icmp ne i8** %22, %arraydecay13, !dbg !7469
  br i1 %cmp14, label %if.then15, label %if.else, !dbg !7470

if.then15:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %planes, metadata !7471, metadata !1805), !dbg !7473
  %25 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci.addr, align 8, !dbg !7474
  %to_free16 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %25, i32 0, i32 3, !dbg !7475
  %26 = load %struct.AVFrame*, %struct.AVFrame** %to_free16, align 8, !dbg !7475
  %channels = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %26, i32 0, i32 41, !dbg !7476
  %27 = load i32, i32* %channels, align 4, !dbg !7476
  store i32 %27, i32* %planes, align 4, !dbg !7473
  call void @llvm.dbg.declare(metadata i32* %size, metadata !7477, metadata !1805), !dbg !7478
  %28 = load i32, i32* %planes, align 4, !dbg !7479
  %conv = sext i32 %28 to i64, !dbg !7479
  %mul = mul i64 %conv, 8, !dbg !7480
  %conv17 = trunc i64 %mul to i32, !dbg !7479
  store i32 %conv17, i32* %size, align 4, !dbg !7478
  %29 = load i32, i32* %size, align 4, !dbg !7481
  %tobool = icmp ne i32 %29, 0, !dbg !7481
  br i1 %tobool, label %if.end19, label %if.then18, !dbg !7483

if.then18:                                        ; preds = %if.then15
  %30 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !7484
  call void @av_frame_unref(%struct.AVFrame* %30), !dbg !7486
  store i32 -558323010, i32* %retval, align 4, !dbg !7487
  br label %return, !dbg !7487

if.end19:                                         ; preds = %if.then15
  %31 = load i32, i32* %size, align 4, !dbg !7488
  %conv20 = sext i32 %31 to i64, !dbg !7488
  %call21 = call noalias i8* @av_malloc(i64 %conv20), !dbg !7489
  %32 = bitcast i8* %call21 to i8**, !dbg !7489
  %33 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !7490
  %extended_data22 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %33, i32 0, i32 2, !dbg !7491
  store i8** %32, i8*** %extended_data22, align 8, !dbg !7492
  %34 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !7493
  %extended_data23 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %34, i32 0, i32 2, !dbg !7495
  %35 = load i8**, i8*** %extended_data23, align 8, !dbg !7495
  %tobool24 = icmp ne i8** %35, null, !dbg !7493
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !7496

if.then25:                                        ; preds = %if.end19
  %36 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !7497
  call void @av_frame_unref(%struct.AVFrame* %36), !dbg !7499
  store i32 -12, i32* %retval, align 4, !dbg !7500
  br label %return, !dbg !7500

if.end26:                                         ; preds = %if.end19
  %37 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !7501
  %extended_data27 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %37, i32 0, i32 2, !dbg !7502
  %38 = load i8**, i8*** %extended_data27, align 8, !dbg !7502
  %39 = bitcast i8** %38 to i8*, !dbg !7503
  %40 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci.addr, align 8, !dbg !7504
  %to_free28 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %40, i32 0, i32 3, !dbg !7505
  %41 = load %struct.AVFrame*, %struct.AVFrame** %to_free28, align 8, !dbg !7505
  %extended_data29 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %41, i32 0, i32 2, !dbg !7506
  %42 = load i8**, i8*** %extended_data29, align 8, !dbg !7506
  %43 = bitcast i8** %42 to i8*, !dbg !7503
  %44 = load i32, i32* %size, align 4, !dbg !7507
  %conv30 = sext i32 %44 to i64, !dbg !7507
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %43, i64 %conv30, i32 8, i1 false), !dbg !7503
  br label %if.end34, !dbg !7508

if.else:                                          ; preds = %if.end
  %45 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !7509
  %data31 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %45, i32 0, i32 0, !dbg !7510
  %arraydecay32 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data31, i32 0, i32 0, !dbg !7509
  %46 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !7511
  %extended_data33 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %46, i32 0, i32 2, !dbg !7512
  store i8** %arraydecay32, i8*** %extended_data33, align 8, !dbg !7513
  br label %if.end34

if.end34:                                         ; preds = %if.else, %if.end26
  %47 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci.addr, align 8, !dbg !7514
  %to_free35 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %47, i32 0, i32 3, !dbg !7515
  %48 = load %struct.AVFrame*, %struct.AVFrame** %to_free35, align 8, !dbg !7515
  %format = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %48, i32 0, i32 6, !dbg !7516
  %49 = load i32, i32* %format, align 4, !dbg !7516
  %50 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !7517
  %format36 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %50, i32 0, i32 6, !dbg !7518
  store i32 %49, i32* %format36, align 4, !dbg !7519
  %51 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci.addr, align 8, !dbg !7520
  %to_free37 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %51, i32 0, i32 3, !dbg !7521
  %52 = load %struct.AVFrame*, %struct.AVFrame** %to_free37, align 8, !dbg !7521
  %width = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %52, i32 0, i32 3, !dbg !7522
  %53 = load i32, i32* %width, align 8, !dbg !7522
  %54 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !7523
  %width38 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %54, i32 0, i32 3, !dbg !7524
  store i32 %53, i32* %width38, align 8, !dbg !7525
  %55 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci.addr, align 8, !dbg !7526
  %to_free39 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %55, i32 0, i32 3, !dbg !7527
  %56 = load %struct.AVFrame*, %struct.AVFrame** %to_free39, align 8, !dbg !7527
  %height = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %56, i32 0, i32 4, !dbg !7528
  %57 = load i32, i32* %height, align 4, !dbg !7528
  %58 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !7529
  %height40 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %58, i32 0, i32 4, !dbg !7530
  store i32 %57, i32* %height40, align 4, !dbg !7531
  %59 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci.addr, align 8, !dbg !7532
  %to_free41 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %59, i32 0, i32 3, !dbg !7533
  %60 = load %struct.AVFrame*, %struct.AVFrame** %to_free41, align 8, !dbg !7533
  %channel_layout = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %60, i32 0, i32 24, !dbg !7534
  %61 = load i64, i64* %channel_layout, align 8, !dbg !7534
  %62 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !7535
  %channel_layout42 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %62, i32 0, i32 24, !dbg !7536
  store i64 %61, i64* %channel_layout42, align 8, !dbg !7537
  %63 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci.addr, align 8, !dbg !7538
  %to_free43 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %63, i32 0, i32 3, !dbg !7539
  %64 = load %struct.AVFrame*, %struct.AVFrame** %to_free43, align 8, !dbg !7539
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %64, i32 0, i32 5, !dbg !7540
  %65 = load i32, i32* %nb_samples, align 8, !dbg !7540
  %66 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !7541
  %nb_samples44 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %66, i32 0, i32 5, !dbg !7542
  store i32 %65, i32* %nb_samples44, align 8, !dbg !7543
  %67 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %avci.addr, align 8, !dbg !7544
  %to_free45 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %67, i32 0, i32 3, !dbg !7545
  %68 = load %struct.AVFrame*, %struct.AVFrame** %to_free45, align 8, !dbg !7545
  %channels46 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %68, i32 0, i32 41, !dbg !7546
  %69 = load i32, i32* %channels46, align 4, !dbg !7546
  %70 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !7547
  %channels47 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %70, i32 0, i32 41, !dbg !7548
  store i32 %69, i32* %channels47, align 4, !dbg !7549
  store i32 0, i32* %retval, align 4, !dbg !7550
  br label %return, !dbg !7550

return:                                           ; preds = %if.end34, %if.then25, %if.then18, %if.then
  %71 = load i32, i32* %retval, align 4, !dbg !7551
  ret i32 %71, !dbg !7551
}

declare i32 @av_frame_copy_props(%struct.AVFrame*, %struct.AVFrame*) #2

declare noalias i8* @av_malloc(i64) #2

declare i8* @iconv_open(i8*, i8*) #2

declare i32 @av_new_packet(%struct.AVPacket*, i32) #2

declare i64 @iconv(i8*, i8**, i64*, i8**, i64*) #2

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #4

declare i32 @iconv_close(i8*) #2

declare void @av_bprint_init(%struct.AVBPrint*, i32, i32) #2

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #6

declare void @av_bprint_clear(%struct.AVBPrint*) #2

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #6

; Function Attrs: nounwind
declare i64 @strtol(i8*, i8**, i32) #7

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @av_make_q(i32 %num, i32 %den) #8 !dbg !7552 {
entry:
  %retval = alloca %struct.AVRational, align 4
  %num.addr = alloca i32, align 4
  %den.addr = alloca i32, align 4
  %r = alloca %struct.AVRational, align 4
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !7555, metadata !1805), !dbg !7556
  store i32 %den, i32* %den.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %den.addr, metadata !7557, metadata !1805), !dbg !7558
  call void @llvm.dbg.declare(metadata %struct.AVRational* %r, metadata !7559, metadata !1805), !dbg !7560
  %num1 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r, i32 0, i32 0, !dbg !7561
  %0 = load i32, i32* %num.addr, align 4, !dbg !7562
  store i32 %0, i32* %num1, align 4, !dbg !7561
  %den2 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r, i32 0, i32 1, !dbg !7561
  %1 = load i32, i32* %den.addr, align 4, !dbg !7563
  store i32 %1, i32* %den2, align 4, !dbg !7561
  %2 = bitcast %struct.AVRational* %retval to i8*, !dbg !7564
  %3 = bitcast %struct.AVRational* %r to i8*, !dbg !7564
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %3, i64 8, i32 4, i1 false), !dbg !7564
  %4 = bitcast %struct.AVRational* %retval to i64*, !dbg !7565
  %5 = load i64, i64* %4, align 4, !dbg !7565
  ret i64 %5, !dbg !7565
}

declare void @av_bprintf(%struct.AVBPrint*, i8*, ...) #2

; Function Attrs: nounwind uwtable
define internal void @insert_ts(%struct.AVBPrint* %buf, i32 %ts) #0 !dbg !7566 {
entry:
  %buf.addr = alloca %struct.AVBPrint*, align 8
  %ts.addr = alloca i32, align 4
  %h = alloca i32, align 4
  %m = alloca i32, align 4
  %s = alloca i32, align 4
  store %struct.AVBPrint* %buf, %struct.AVBPrint** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVBPrint** %buf.addr, metadata !7570, metadata !1805), !dbg !7571
  store i32 %ts, i32* %ts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ts.addr, metadata !7572, metadata !1805), !dbg !7573
  %0 = load i32, i32* %ts.addr, align 4, !dbg !7574
  %cmp = icmp eq i32 %0, -1, !dbg !7576
  br i1 %cmp, label %if.then, label %if.else, !dbg !7577

if.then:                                          ; preds = %entry
  %1 = load %struct.AVBPrint*, %struct.AVBPrint** %buf.addr, align 8, !dbg !7578
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.56, i32 0, i32 0)), !dbg !7580
  br label %if.end, !dbg !7581

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %h, metadata !7582, metadata !1805), !dbg !7584
  call void @llvm.dbg.declare(metadata i32* %m, metadata !7585, metadata !1805), !dbg !7586
  call void @llvm.dbg.declare(metadata i32* %s, metadata !7587, metadata !1805), !dbg !7588
  %2 = load i32, i32* %ts.addr, align 4, !dbg !7589
  %div = sdiv i32 %2, 360000, !dbg !7590
  store i32 %div, i32* %h, align 4, !dbg !7591
  %3 = load i32, i32* %h, align 4, !dbg !7592
  %mul = mul nsw i32 360000, %3, !dbg !7593
  %4 = load i32, i32* %ts.addr, align 4, !dbg !7594
  %sub = sub nsw i32 %4, %mul, !dbg !7594
  store i32 %sub, i32* %ts.addr, align 4, !dbg !7594
  %5 = load i32, i32* %ts.addr, align 4, !dbg !7595
  %div1 = sdiv i32 %5, 6000, !dbg !7596
  store i32 %div1, i32* %m, align 4, !dbg !7597
  %6 = load i32, i32* %m, align 4, !dbg !7598
  %mul2 = mul nsw i32 6000, %6, !dbg !7599
  %7 = load i32, i32* %ts.addr, align 4, !dbg !7600
  %sub3 = sub nsw i32 %7, %mul2, !dbg !7600
  store i32 %sub3, i32* %ts.addr, align 4, !dbg !7600
  %8 = load i32, i32* %ts.addr, align 4, !dbg !7601
  %div4 = sdiv i32 %8, 100, !dbg !7602
  store i32 %div4, i32* %s, align 4, !dbg !7603
  %9 = load i32, i32* %s, align 4, !dbg !7604
  %mul5 = mul nsw i32 100, %9, !dbg !7605
  %10 = load i32, i32* %ts.addr, align 4, !dbg !7606
  %sub6 = sub nsw i32 %10, %mul5, !dbg !7606
  store i32 %sub6, i32* %ts.addr, align 4, !dbg !7606
  %11 = load %struct.AVBPrint*, %struct.AVBPrint** %buf.addr, align 8, !dbg !7607
  %12 = load i32, i32* %h, align 4, !dbg !7608
  %13 = load i32, i32* %m, align 4, !dbg !7609
  %14 = load i32, i32* %s, align 4, !dbg !7610
  %15 = load i32, i32* %ts.addr, align 4, !dbg !7611
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %11, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.57, i32 0, i32 0), i32 %12, i32 %13, i32 %14, i32 %15), !dbg !7612
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !7613
}

declare noalias i8* @av_strdup(i8*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @av_bprint_is_complete(%struct.AVBPrint* %buf) #8 !dbg !7614 {
entry:
  %buf.addr = alloca %struct.AVBPrint*, align 8
  store %struct.AVBPrint* %buf, %struct.AVBPrint** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVBPrint** %buf.addr, metadata !7619, metadata !1805), !dbg !7620
  %0 = load %struct.AVBPrint*, %struct.AVBPrint** %buf.addr, align 8, !dbg !7621
  %len = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i32 0, i32 1, !dbg !7622
  %1 = load i32, i32* %len, align 8, !dbg !7622
  %2 = load %struct.AVBPrint*, %struct.AVBPrint** %buf.addr, align 8, !dbg !7623
  %size = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %2, i32 0, i32 2, !dbg !7624
  %3 = load i32, i32* %size, align 4, !dbg !7624
  %cmp = icmp ult i32 %1, %3, !dbg !7625
  %conv = zext i1 %cmp to i32, !dbg !7625
  ret i32 %conv, !dbg !7626
}

declare i32 @av_bprint_finalize(%struct.AVBPrint*, i8**) #2

declare i8* @av_get_pix_fmt_name(i32) #2

declare void @avcodec_align_dimensions2(%struct.AVCodecContext*, i32*, i32*, i32*) #2

declare i32 @av_image_fill_linesizes(i32*, i32, i32) #2

declare i32 @av_image_fill_pointers(i8**, i32, i32, i8*, i32*) #2

declare void @av_buffer_pool_uninit(%struct.AVBufferPool**) #2

declare %struct.AVBufferPool* @av_buffer_pool_init(i32, %struct.AVBufferRef* (i32)*) #2

declare %struct.AVBufferRef* @av_buffer_allocz(i32) #2

declare i32 @av_sample_fmt_is_planar(i32) #2

declare i32 @av_samples_get_buffer_size(i32*, i32, i32, i32, i32) #2

declare %struct.AVBufferRef* @av_buffer_pool_get(%struct.AVBufferPool*) #2

declare i32 @avpriv_set_systematic_pal2(i32*, i32) #2

declare i8* @av_mallocz_array(i64, i64) #2

declare i32 @av_packet_unpack_dictionary(i8*, i32, %struct.AVDictionary**) #2

declare i32 @av_image_check_size2(i32, i32, i64, i32, i32, i8*) #2

; Function Attrs: nounwind uwtable
define internal void @validate_avframe_allocation(%struct.AVCodecContext* %avctx, %struct.AVFrame* %frame) #0 !dbg !7627 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %i = alloca i32, align 4
  %num_planes = alloca i32, align 4
  %desc = alloca %struct.AVPixFmtDescriptor*, align 8
  %flags = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !7630, metadata !1805), !dbg !7631
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !7632, metadata !1805), !dbg !7633
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7634
  %codec_type = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 2, !dbg !7636
  %1 = load i32, i32* %codec_type, align 4, !dbg !7636
  %cmp = icmp eq i32 %1, 0, !dbg !7637
  br i1 %cmp, label %if.then, label %if.end40, !dbg !7638

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7639, metadata !1805), !dbg !7641
  call void @llvm.dbg.declare(metadata i32* %num_planes, metadata !7642, metadata !1805), !dbg !7643
  %2 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !7644
  %format = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %2, i32 0, i32 6, !dbg !7645
  %3 = load i32, i32* %format, align 4, !dbg !7645
  %call = call i32 @av_pix_fmt_count_planes(i32 %3), !dbg !7646
  store i32 %call, i32* %num_planes, align 4, !dbg !7643
  call void @llvm.dbg.declare(metadata %struct.AVPixFmtDescriptor** %desc, metadata !7647, metadata !1805), !dbg !7648
  %4 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !7649
  %format1 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %4, i32 0, i32 6, !dbg !7650
  %5 = load i32, i32* %format1, align 4, !dbg !7650
  %call2 = call %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32 %5), !dbg !7651
  store %struct.AVPixFmtDescriptor* %call2, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !7648
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !7652, metadata !1805), !dbg !7653
  %6 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !7654
  %tobool = icmp ne %struct.AVPixFmtDescriptor* %6, null, !dbg !7654
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7654

cond.true:                                        ; preds = %if.then
  %7 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !7655
  %flags3 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %7, i32 0, i32 4, !dbg !7657
  %8 = load i64, i64* %flags3, align 8, !dbg !7657
  br label %cond.end, !dbg !7658

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !7659

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %8, %cond.true ], [ 0, %cond.false ], !dbg !7661
  %conv = trunc i64 %cond to i32, !dbg !7661
  store i32 %conv, i32* %flags, align 4, !dbg !7663
  %9 = load i32, i32* %num_planes, align 4, !dbg !7664
  %cmp4 = icmp eq i32 %9, 1, !dbg !7666
  br i1 %cmp4, label %land.lhs.true, label %if.end, !dbg !7667

land.lhs.true:                                    ; preds = %cond.end
  %10 = load i32, i32* %flags, align 4, !dbg !7668
  %and = and i32 %10, 2, !dbg !7670
  %tobool6 = icmp ne i32 %and, 0, !dbg !7670
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !7671

if.then7:                                         ; preds = %land.lhs.true
  store i32 2, i32* %num_planes, align 4, !dbg !7672
  br label %if.end, !dbg !7673

if.end:                                           ; preds = %if.then7, %land.lhs.true, %cond.end
  %11 = load i32, i32* %flags, align 4, !dbg !7674
  %and8 = and i32 %11, 64, !dbg !7676
  %tobool9 = icmp ne i32 %and8, 0, !dbg !7676
  br i1 %tobool9, label %land.lhs.true10, label %if.end13, !dbg !7677

land.lhs.true10:                                  ; preds = %if.end
  %12 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !7678
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %12, i32 0, i32 0, !dbg !7680
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 1, !dbg !7678
  %13 = load i8*, i8** %arrayidx, align 8, !dbg !7678
  %tobool11 = icmp ne i8* %13, null, !dbg !7678
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !7681

if.then12:                                        ; preds = %land.lhs.true10
  store i32 2, i32* %num_planes, align 4, !dbg !7682
  br label %if.end13, !dbg !7683

if.end13:                                         ; preds = %if.then12, %land.lhs.true10, %if.end
  store i32 0, i32* %i, align 4, !dbg !7684
  br label %for.cond, !dbg !7686

for.cond:                                         ; preds = %for.inc, %if.end13
  %14 = load i32, i32* %i, align 4, !dbg !7687
  %15 = load i32, i32* %num_planes, align 4, !dbg !7690
  %cmp14 = icmp slt i32 %14, %15, !dbg !7691
  br i1 %cmp14, label %for.body, label %for.end, !dbg !7692

for.body:                                         ; preds = %for.cond
  br label %do.body, !dbg !7693, !llvm.loop !7695

do.body:                                          ; preds = %for.body
  %16 = load i32, i32* %i, align 4, !dbg !7696
  %idxprom = sext i32 %16 to i64, !dbg !7700
  %17 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !7700
  %data16 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %17, i32 0, i32 0, !dbg !7701
  %arrayidx17 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data16, i64 0, i64 %idxprom, !dbg !7700
  %18 = load i8*, i8** %arrayidx17, align 8, !dbg !7700
  %tobool18 = icmp ne i8* %18, null, !dbg !7702
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !7703

if.then19:                                        ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i32 0, i32 0), i32 1813), !dbg !7704
  call void @abort() #9, !dbg !7707
  unreachable, !dbg !7709

if.end20:                                         ; preds = %do.body
  br label %do.end, !dbg !7710

do.end:                                           ; preds = %if.end20
  br label %for.inc, !dbg !7712

for.inc:                                          ; preds = %do.end
  %19 = load i32, i32* %i, align 4, !dbg !7713
  %inc = add nsw i32 %19, 1, !dbg !7713
  store i32 %inc, i32* %i, align 4, !dbg !7713
  br label %for.cond, !dbg !7715, !llvm.loop !7716

for.end:                                          ; preds = %for.cond
  %20 = load i32, i32* %num_planes, align 4, !dbg !7718
  store i32 %20, i32* %i, align 4, !dbg !7720
  br label %for.cond21, !dbg !7721

for.cond21:                                       ; preds = %for.inc37, %for.end
  %21 = load i32, i32* %num_planes, align 4, !dbg !7722
  %cmp22 = icmp sgt i32 %21, 0, !dbg !7725
  br i1 %cmp22, label %land.rhs, label %land.end, !dbg !7726

land.rhs:                                         ; preds = %for.cond21
  %22 = load i32, i32* %i, align 4, !dbg !7727
  %conv24 = sext i32 %22 to i64, !dbg !7727
  %cmp25 = icmp ult i64 %conv24, 8, !dbg !7729
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond21
  %23 = phi i1 [ false, %for.cond21 ], [ %cmp25, %land.rhs ]
  br i1 %23, label %for.body27, label %for.end39, !dbg !7730

for.body27:                                       ; preds = %land.end
  %24 = load i32, i32* %i, align 4, !dbg !7732
  %idxprom28 = sext i32 %24 to i64, !dbg !7735
  %25 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !7735
  %data29 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %25, i32 0, i32 0, !dbg !7736
  %arrayidx30 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data29, i64 0, i64 %idxprom28, !dbg !7735
  %26 = load i8*, i8** %arrayidx30, align 8, !dbg !7735
  %tobool31 = icmp ne i8* %26, null, !dbg !7735
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !7737

if.then32:                                        ; preds = %for.body27
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7738
  %28 = bitcast %struct.AVCodecContext* %27 to i8*, !dbg !7738
  call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 16, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.69, i32 0, i32 0)), !dbg !7739
  br label %if.end33, !dbg !7739

if.end33:                                         ; preds = %if.then32, %for.body27
  %29 = load i32, i32* %i, align 4, !dbg !7740
  %idxprom34 = sext i32 %29 to i64, !dbg !7741
  %30 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !7741
  %data35 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %30, i32 0, i32 0, !dbg !7742
  %arrayidx36 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data35, i64 0, i64 %idxprom34, !dbg !7741
  store i8* null, i8** %arrayidx36, align 8, !dbg !7743
  br label %for.inc37, !dbg !7744

for.inc37:                                        ; preds = %if.end33
  %31 = load i32, i32* %i, align 4, !dbg !7745
  %inc38 = add nsw i32 %31, 1, !dbg !7745
  store i32 %inc38, i32* %i, align 4, !dbg !7745
  br label %for.cond21, !dbg !7747, !llvm.loop !7748

for.end39:                                        ; preds = %land.end
  br label %if.end40, !dbg !7750

if.end40:                                         ; preds = %for.end39, %entry
  ret void, !dbg !7751
}

declare i32 @av_pix_fmt_count_planes(i32) #2

declare i32 @av_frame_is_writable(%struct.AVFrame*) #2

declare %struct.AVFrame* @av_frame_alloc() #2

declare void @av_frame_free(%struct.AVFrame**) #2

declare i32 @av_frame_copy(%struct.AVFrame*, %struct.AVFrame*) #2

declare void @av_bsf_flush(%struct.AVBSFContext*) #2

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind }
attributes #10 = { nounwind readonly }
attributes #11 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1800, !1801}
!llvm.ident = !{!1802}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !938, globals: !1207)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--decode.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2 = !{!3, !25, !46, !56, !516, !716, !733, !739, !769, !779, !803, !809, !827, !851, !870, !880, !894, !902, !914, !923, !929, !935}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !4, line: 221, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24}
!6 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!7 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!8 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!9 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!10 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!11 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!12 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!13 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!14 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!15 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!16 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!17 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!18 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!19 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!20 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!21 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!22 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!23 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!24 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!25 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !26, line: 29, size: 32, align: 32, elements: !27)
!26 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!27 = !{!28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45}
!28 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!29 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!30 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!31 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!32 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!33 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!34 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!35 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!36 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!37 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!38 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!39 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!40 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!41 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!42 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!43 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!44 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!45 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!46 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !47, line: 199, size: 32, align: 32, elements: !48)
!47 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!48 = !{!49, !50, !51, !52, !53, !54, !55}
!49 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!50 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!51 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!52 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!53 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!54 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!55 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!56 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !57, line: 215, size: 32, align: 32, elements: !58)
!57 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!58 = !{!59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515}
!59 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!60 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!61 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!62 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!63 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!64 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!65 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!66 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!67 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!68 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!69 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!70 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!71 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!72 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!73 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!74 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!75 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!76 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!77 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!78 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!79 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!80 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!81 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!82 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!83 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!84 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!85 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!86 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!87 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!88 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!89 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!90 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!91 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!93 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!94 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!95 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!96 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!97 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!98 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!99 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!100 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!101 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!102 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!103 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!104 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!105 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!106 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!107 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!108 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!109 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!110 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!111 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!112 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!113 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!114 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!115 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!116 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!117 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!118 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!119 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!120 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!121 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!122 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!123 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!124 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!125 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!126 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!127 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!128 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!129 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!130 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!131 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!132 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!133 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!134 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!135 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!136 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!137 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!138 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!139 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!140 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!141 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!142 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!143 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!144 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!145 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!146 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!147 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!148 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!149 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!150 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!151 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!152 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!153 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!154 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!155 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!156 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!157 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!158 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!159 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!160 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!161 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!162 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!163 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!164 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!165 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!166 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!167 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!168 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!169 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!170 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!171 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!172 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!173 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!174 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!175 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!176 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!177 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!178 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!179 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!180 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!181 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!182 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!183 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!184 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!185 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!186 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!187 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!188 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!189 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!190 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!191 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!192 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!193 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!194 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!195 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!196 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!197 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!198 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!199 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!200 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!201 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!202 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!203 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!204 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!205 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!206 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!207 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!208 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!209 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!210 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!211 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!212 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!213 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!214 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!215 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!216 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!217 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!218 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!219 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!220 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!221 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!222 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!223 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!224 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!225 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!226 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!227 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!228 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!229 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!230 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!231 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!232 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!233 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!234 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!235 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!236 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!237 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!238 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!239 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!240 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!241 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!242 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!243 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!244 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!245 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!246 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!247 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!248 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!249 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!250 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!251 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!252 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!253 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!254 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!255 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!256 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!257 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!258 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!259 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!260 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!261 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!262 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!263 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!264 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!265 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!266 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!267 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!268 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!269 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!270 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!271 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!272 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!273 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!276 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!277 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!278 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!279 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!280 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!281 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!282 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!283 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!284 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!285 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!286 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!287 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!288 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!289 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!290 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!291 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!292 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!293 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!295 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!296 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!297 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!298 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!299 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!300 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!301 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!302 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!303 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!304 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!305 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!306 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!307 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!308 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!309 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!310 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!311 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!312 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!313 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!314 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!315 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!316 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!317 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!318 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!319 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!320 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!321 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!322 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!323 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!324 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!325 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!326 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!327 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!328 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!329 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!330 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!331 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!332 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!333 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!335 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!336 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!337 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!338 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!339 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!340 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!341 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!342 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!343 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!344 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!345 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!346 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!347 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!348 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!349 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!350 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!351 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!352 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!353 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!354 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!355 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!356 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!357 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!358 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!359 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!360 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!361 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!362 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!363 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!364 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!365 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!366 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!367 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!368 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!369 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!370 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!372 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!373 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!374 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!375 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!376 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!377 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!378 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!379 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!380 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!381 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!382 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!383 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!384 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!385 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!386 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!387 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!388 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!389 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!390 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!391 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!392 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!393 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!394 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!395 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!396 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!397 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!398 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!400 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!401 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!402 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!403 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!404 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!405 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!406 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!407 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!408 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!409 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!410 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!411 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!412 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!413 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!414 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!415 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!416 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!417 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!418 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!419 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!420 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!421 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!422 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!423 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!424 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!425 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!426 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!427 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!428 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!429 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!430 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!431 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!432 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!433 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!434 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!435 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!436 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!437 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!438 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!439 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!440 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!441 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!442 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!443 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!444 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!445 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!446 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!447 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!448 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!449 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!450 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!451 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!452 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!453 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!454 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!455 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!456 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!457 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!458 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!459 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!460 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!461 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!462 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!463 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!464 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!465 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!466 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!467 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!468 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!469 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!470 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!471 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!472 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!473 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!474 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!475 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!476 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!477 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!478 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!479 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!480 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!481 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!482 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!483 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!484 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!485 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!486 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!487 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!488 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!489 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!490 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!491 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!492 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!493 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!494 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!495 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!496 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!497 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!498 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!499 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!500 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!501 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!502 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!503 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!504 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!505 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!506 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!507 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!508 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!509 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!510 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!511 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!512 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!513 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!514 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!515 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!516 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !517, line: 64, size: 32, align: 32, elements: !518)
!517 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!518 = !{!519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715}
!519 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!520 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!521 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!522 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!523 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!524 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!525 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!526 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!527 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!528 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!529 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!530 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!531 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!532 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!533 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!534 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!535 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!536 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!537 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!538 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!540 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!541 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!542 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!543 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!544 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!545 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!546 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!547 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!548 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!549 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!550 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!552 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!553 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!554 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!555 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!556 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!557 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!558 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!559 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!560 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!561 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!562 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!563 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!564 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!565 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!566 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!567 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!574 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!575 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!576 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!577 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!578 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!579 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!580 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!581 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!582 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!583 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!584 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!585 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!586 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!587 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!588 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!589 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!590 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!594 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!595 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!596 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!597 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!598 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!599 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!600 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!601 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!602 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!603 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!604 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!605 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!606 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!617 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!618 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!619 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!620 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!622 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!623 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!624 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!625 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!626 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!627 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!628 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!629 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!630 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!631 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!634 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!637 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!638 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!639 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!640 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!641 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!642 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!643 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!644 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!645 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!646 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!647 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!648 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!649 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!650 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!651 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!652 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!653 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!654 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!655 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!656 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!657 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!658 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!659 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!662 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!663 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!664 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!665 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!666 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!667 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!668 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!669 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!670 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!671 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!672 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!673 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!674 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!675 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!676 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!677 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!678 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!679 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!680 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!681 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!682 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!683 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!684 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!685 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!686 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!687 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!688 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!689 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!690 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!691 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!692 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!693 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!694 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!695 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!696 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!697 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!698 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!699 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!700 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!701 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!702 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!703 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!704 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!705 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!706 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!707 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!708 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!709 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!710 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!711 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!712 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!713 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!714 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!715 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!716 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !717, line: 58, size: 32, align: 32, elements: !718)
!717 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!718 = !{!719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732}
!719 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!720 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!721 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!722 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!723 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!724 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!725 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!726 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!727 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!728 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!729 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!730 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!731 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!732 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!733 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !57, line: 3865, size: 32, align: 32, elements: !734)
!734 = !{!735, !736, !737, !738}
!735 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!736 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!737 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!738 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!739 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !57, line: 1175, size: 32, align: 32, elements: !740)
!740 = !{!741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768}
!741 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!742 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!743 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!744 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!745 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!746 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!747 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!748 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!749 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!750 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!751 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!752 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!753 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!754 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!755 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!756 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!757 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!758 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!759 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!760 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!761 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!762 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!763 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!764 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!765 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!766 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!767 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!768 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!769 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !47, line: 272, size: 32, align: 32, elements: !770)
!770 = !{!771, !772, !773, !774, !775, !776, !777, !778}
!771 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!772 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!773 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!774 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!775 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!776 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!777 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!778 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!779 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !780, line: 48, size: 32, align: 32, elements: !781)
!780 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!781 = !{!782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802}
!782 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!783 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!784 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!785 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!786 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!787 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!788 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!789 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!790 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!791 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!792 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!793 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!794 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!795 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!796 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!797 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!798 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!799 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!800 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!801 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!802 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!803 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !517, line: 516, size: 32, align: 32, elements: !804)
!804 = !{!805, !806, !807, !808}
!805 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!806 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!807 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!808 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!809 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !517, line: 440, size: 32, align: 32, elements: !810)
!810 = !{!811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826}
!811 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!812 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!813 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!814 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!815 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!816 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!817 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!818 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!819 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!820 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!821 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!822 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!823 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!824 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!825 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!826 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!827 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !517, line: 464, size: 32, align: 32, elements: !828)
!828 = !{!829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850}
!829 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!830 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!831 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!832 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!833 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!834 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!835 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!836 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!837 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!838 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!839 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!840 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!841 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!842 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!843 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!844 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!845 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!846 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!847 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!848 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!849 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!850 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!851 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !517, line: 493, size: 32, align: 32, elements: !852)
!852 = !{!853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869}
!853 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!854 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!855 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!856 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!857 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!858 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!859 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!860 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!861 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!862 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!863 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!864 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!865 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!866 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!867 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!868 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!869 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!870 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !517, line: 538, size: 32, align: 32, elements: !871)
!871 = !{!872, !873, !874, !875, !876, !877, !878, !879}
!872 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!873 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!874 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!875 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!876 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!877 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!878 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!879 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!880 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVHWDeviceType", file: !881, line: 27, size: 32, align: 32, elements: !882)
!881 = !DIFile(filename: "./libavutil/hwcontext.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!882 = !{!883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893}
!883 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_NONE", value: 0)
!884 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_VDPAU", value: 1)
!885 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_CUDA", value: 2)
!886 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_VAAPI", value: 3)
!887 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_DXVA2", value: 4)
!888 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_QSV", value: 5)
!889 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_VIDEOTOOLBOX", value: 6)
!890 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_D3D11VA", value: 7)
!891 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_DRM", value: 8)
!892 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_OPENCL", value: 9)
!893 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_MEDIACODEC", value: 10)
!894 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !57, line: 1534, size: 32, align: 32, elements: !895)
!895 = !{!896, !897, !898, !899, !900, !901}
!896 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!897 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!898 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!899 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!900 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!901 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!902 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !57, line: 810, size: 32, align: 32, elements: !903)
!903 = !{!904, !905, !906, !907, !908, !909, !910, !911, !912, !913}
!904 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!905 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!906 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!907 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!908 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!909 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!910 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!911 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!912 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!913 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!914 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !57, line: 798, size: 32, align: 32, elements: !915)
!915 = !{!916, !917, !918, !919, !920, !921, !922}
!916 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!917 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!918 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!919 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!920 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!921 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!922 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!923 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !57, line: 3406, size: 32, align: 32, elements: !924)
!924 = !{!925, !926, !927, !928}
!925 = !DIEnumerator(name: "AV_CODEC_HW_CONFIG_METHOD_HW_DEVICE_CTX", value: 1)
!926 = !DIEnumerator(name: "AV_CODEC_HW_CONFIG_METHOD_HW_FRAMES_CTX", value: 2)
!927 = !DIEnumerator(name: "AV_CODEC_HW_CONFIG_METHOD_INTERNAL", value: 4)
!928 = !DIEnumerator(name: "AV_CODEC_HW_CONFIG_METHOD_AD_HOC", value: 8)
!929 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSideDataParamChangeFlags", file: !57, line: 1522, size: 32, align: 32, elements: !930)
!930 = !{!931, !932, !933, !934}
!931 = !DIEnumerator(name: "AV_SIDE_DATA_PARAM_CHANGE_CHANNEL_COUNT", value: 1)
!932 = !DIEnumerator(name: "AV_SIDE_DATA_PARAM_CHANGE_CHANNEL_LAYOUT", value: 2)
!933 = !DIEnumerator(name: "AV_SIDE_DATA_PARAM_CHANGE_SAMPLE_RATE", value: 4)
!934 = !DIEnumerator(name: "AV_SIDE_DATA_PARAM_CHANGE_DIMENSIONS", value: 8)
!935 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !780, line: 903, size: 32, align: 32, elements: !936)
!936 = !{!937}
!937 = !DIEnumerator(name: "AV_FRAME_CROP_UNALIGNED", value: 1)
!938 = !{!939, !940, !941, !944, !1043, !962, !1063, !1084, !1091, !1098, !1199, !1201, !1202, !1186, !1204, !1206}
!939 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!940 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!941 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !942, line: 40, baseType: !943)
!942 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!943 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 64, align: 64)
!945 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVHWDeviceContext", file: !881, line: 109, baseType: !946)
!946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWDeviceContext", file: !881, line: 60, size: 384, align: 64, elements: !947)
!947 = !{!948, !1031, !1035, !1036, !1037, !1042}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !946, file: !881, line: 64, baseType: !949, size: 64, align: 64)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64, align: 64)
!950 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !951)
!951 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !26, line: 143, baseType: !952)
!952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !26, line: 67, size: 640, align: 64, elements: !953)
!953 = !{!954, !958, !963, !990, !991, !992, !993, !997, !1003, !1005, !1009}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !952, file: !26, line: 72, baseType: !955, size: 64, align: 64)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64, align: 64)
!956 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !957)
!957 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !952, file: !26, line: 78, baseType: !959, size: 64, align: 64, offset: 64)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 64, align: 64)
!960 = !DISubroutineType(types: !961)
!961 = !{!955, !962}
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !952, file: !26, line: 85, baseType: !964, size: 64, align: 64, offset: 128)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64, align: 64)
!965 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !966)
!966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !4, line: 246, size: 512, align: 64, elements: !967)
!967 = !{!968, !969, !970, !971, !972, !986, !987, !988, !989}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !966, file: !4, line: 247, baseType: !955, size: 64, align: 64)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !966, file: !4, line: 253, baseType: !955, size: 64, align: 64, offset: 64)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !966, file: !4, line: 259, baseType: !939, size: 32, align: 32, offset: 128)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !966, file: !4, line: 260, baseType: !3, size: 32, align: 32, offset: 160)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !966, file: !4, line: 271, baseType: !973, size: 64, align: 64, offset: 192)
!973 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !966, file: !4, line: 265, size: 64, align: 64, elements: !974)
!974 = !{!975, !976, !978, !979}
!975 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !973, file: !4, line: 266, baseType: !941, size: 64, align: 64)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !973, file: !4, line: 267, baseType: !977, size: 64, align: 64)
!977 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !973, file: !4, line: 268, baseType: !955, size: 64, align: 64)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !973, file: !4, line: 270, baseType: !980, size: 64, align: 32)
!980 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !981, line: 61, baseType: !982)
!981 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !981, line: 58, size: 64, align: 32, elements: !983)
!983 = !{!984, !985}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !982, file: !981, line: 59, baseType: !939, size: 32, align: 32)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !982, file: !981, line: 60, baseType: !939, size: 32, align: 32, offset: 32)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !966, file: !4, line: 272, baseType: !977, size: 64, align: 64, offset: 256)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !966, file: !4, line: 273, baseType: !977, size: 64, align: 64, offset: 320)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !966, file: !4, line: 275, baseType: !939, size: 32, align: 32, offset: 384)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !966, file: !4, line: 300, baseType: !955, size: 64, align: 64, offset: 448)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !952, file: !26, line: 93, baseType: !939, size: 32, align: 32, offset: 192)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !952, file: !26, line: 99, baseType: !939, size: 32, align: 32, offset: 224)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !952, file: !26, line: 108, baseType: !939, size: 32, align: 32, offset: 256)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !952, file: !26, line: 113, baseType: !994, size: 64, align: 64, offset: 320)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 64, align: 64)
!995 = !DISubroutineType(types: !996)
!996 = !{!962, !962, !962}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !952, file: !26, line: 123, baseType: !998, size: 64, align: 64, offset: 384)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64, align: 64)
!999 = !DISubroutineType(types: !1000)
!1000 = !{!1001, !1001}
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64, align: 64)
!1002 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !952)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !952, file: !26, line: 130, baseType: !1004, size: 32, align: 32, offset: 448)
!1004 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !26, line: 48, baseType: !25)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !952, file: !26, line: 136, baseType: !1006, size: 64, align: 64, offset: 512)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64, align: 64)
!1007 = !DISubroutineType(types: !1008)
!1008 = !{!1004, !962}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !952, file: !26, line: 142, baseType: !1010, size: 64, align: 64, offset: 576)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64, align: 64)
!1011 = !DISubroutineType(types: !1012)
!1012 = !{!939, !1013, !962, !955, !939}
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64, align: 64)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64, align: 64)
!1015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !4, line: 329, size: 128, align: 64, elements: !1016)
!1016 = !{!1017, !1029, !1030}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1015, file: !4, line: 360, baseType: !1018, size: 64, align: 64)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 64, align: 64)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 64, align: 64)
!1020 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !4, line: 324, baseType: !1021)
!1021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !4, line: 306, size: 384, align: 64, elements: !1022)
!1022 = !{!1023, !1024, !1025, !1026, !1027, !1028}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1021, file: !4, line: 307, baseType: !955, size: 64, align: 64)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !1021, file: !4, line: 313, baseType: !977, size: 64, align: 64, offset: 64)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !1021, file: !4, line: 313, baseType: !977, size: 64, align: 64, offset: 128)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !1021, file: !4, line: 318, baseType: !977, size: 64, align: 64, offset: 192)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !1021, file: !4, line: 318, baseType: !977, size: 64, align: 64, offset: 256)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !1021, file: !4, line: 323, baseType: !939, size: 32, align: 32, offset: 320)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !1015, file: !4, line: 364, baseType: !939, size: 32, align: 32, offset: 64)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !1015, file: !4, line: 368, baseType: !939, size: 32, align: 32, offset: 96)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !946, file: !881, line: 70, baseType: !1032, size: 64, align: 64, offset: 64)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64, align: 64)
!1033 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVHWDeviceInternal", file: !881, line: 41, baseType: !1034)
!1034 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWDeviceInternal", file: !881, line: 41, flags: DIFlagFwdDecl)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !946, file: !881, line: 78, baseType: !880, size: 32, align: 32, offset: 128)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "hwctx", scope: !946, file: !881, line: 91, baseType: !962, size: 64, align: 64, offset: 192)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !946, file: !881, line: 103, baseType: !1038, size: 64, align: 64, offset: 256)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64, align: 64)
!1039 = !DISubroutineType(types: !1040)
!1040 = !{null, !1041}
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64, align: 64)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "user_opaque", scope: !946, file: !881, line: 108, baseType: !962, size: 64, align: 64, offset: 320)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64, align: 64)
!1044 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVHWFramesContext", file: !881, line: 229, baseType: !1045)
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWFramesContext", file: !881, line: 123, size: 704, align: 64, elements: !1046)
!1046 = !{!1047, !1048, !1052, !1067, !1068, !1069, !1074, !1075, !1079, !1080, !1081, !1082, !1083}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1045, file: !881, line: 127, baseType: !949, size: 64, align: 64)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1045, file: !881, line: 133, baseType: !1049, size: 64, align: 64, offset: 64)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64, align: 64)
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVHWFramesInternal", file: !881, line: 111, baseType: !1051)
!1051 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWFramesInternal", file: !881, line: 111, flags: DIFlagFwdDecl)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "device_ref", scope: !1045, file: !881, line: 140, baseType: !1053, size: 64, align: 64, offset: 128)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 64, align: 64)
!1054 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1055, line: 94, baseType: !1056)
!1055 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1055, line: 81, size: 192, align: 64, elements: !1057)
!1057 = !{!1058, !1062, !1066}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1056, file: !1055, line: 82, baseType: !1059, size: 64, align: 64)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64, align: 64)
!1060 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1055, line: 73, baseType: !1061)
!1061 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1055, line: 73, flags: DIFlagFwdDecl)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1056, file: !1055, line: 89, baseType: !1063, size: 64, align: 64, offset: 64)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64, align: 64)
!1064 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !942, line: 48, baseType: !1065)
!1065 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1056, file: !1055, line: 93, baseType: !939, size: 32, align: 32, offset: 128)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "device_ctx", scope: !1045, file: !881, line: 148, baseType: !944, size: 64, align: 64, offset: 192)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "hwctx", scope: !1045, file: !881, line: 161, baseType: !962, size: 64, align: 64, offset: 256)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !1045, file: !881, line: 169, baseType: !1070, size: 64, align: 64, offset: 320)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 64, align: 64)
!1071 = !DISubroutineType(types: !1072)
!1072 = !{null, !1073}
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64, align: 64)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "user_opaque", scope: !1045, file: !881, line: 174, baseType: !962, size: 64, align: 64, offset: 384)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1045, file: !881, line: 189, baseType: !1076, size: 64, align: 64, offset: 448)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 64, align: 64)
!1077 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1055, line: 238, baseType: !1078)
!1078 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1055, line: 238, flags: DIFlagFwdDecl)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "initial_pool_size", scope: !1045, file: !881, line: 198, baseType: !939, size: 32, align: 32, offset: 512)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1045, file: !881, line: 208, baseType: !516, size: 32, align: 32, offset: 544)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "sw_format", scope: !1045, file: !881, line: 221, baseType: !516, size: 32, align: 32, offset: 576)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1045, file: !881, line: 228, baseType: !939, size: 32, align: 32, offset: 608)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1045, file: !881, line: 228, baseType: !939, size: 32, align: 32, offset: 640)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 64, align: 64)
!1085 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1086)
!1086 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !1087, line: 221, size: 32, align: 8, elements: !1088)
!1087 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1088 = !{!1089}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1086, file: !1087, line: 221, baseType: !1090, size: 32, align: 32)
!1090 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !942, line: 51, baseType: !940)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 64, align: 64)
!1092 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1093)
!1093 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_64", file: !1087, line: 220, size: 64, align: 8, elements: !1094)
!1094 = !{!1095}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1093, file: !1087, line: 220, baseType: !1096, size: 64, align: 64)
!1096 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !942, line: 55, baseType: !1097)
!1097 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 64, align: 64)
!1099 = !DIDerivedType(tag: DW_TAG_typedef, name: "FrameDecodeData", file: !1100, line: 54, baseType: !1101)
!1100 = !DIFile(filename: "libavcodec/decode.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FrameDecodeData", file: !1100, line: 34, size: 320, align: 64, elements: !1102)
!1102 = !{!1103, !1192, !1193, !1197, !1198}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "post_process", scope: !1101, file: !1100, line: 45, baseType: !1104, size: 64, align: 64)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 64, align: 64)
!1105 = !DISubroutineType(types: !1106)
!1106 = !{!939, !962, !1107}
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64, align: 64)
!1108 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !780, line: 646, baseType: !1109)
!1109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !780, line: 268, size: 4288, align: 64, elements: !1110)
!1110 = !{!1111, !1115, !1117, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1144, !1146, !1147, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1180, !1181, !1182, !1183, !1184, !1185, !1188, !1189, !1190, !1191}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1109, file: !780, line: 282, baseType: !1112, size: 512, align: 64)
!1112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1063, size: 512, align: 64, elements: !1113)
!1113 = !{!1114}
!1114 = !DISubrange(count: 8)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1109, file: !780, line: 299, baseType: !1116, size: 256, align: 32, offset: 512)
!1116 = !DICompositeType(tag: DW_TAG_array_type, baseType: !939, size: 256, align: 32, elements: !1113)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1109, file: !780, line: 315, baseType: !1118, size: 64, align: 64, offset: 768)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 64, align: 64)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1109, file: !780, line: 326, baseType: !939, size: 32, align: 32, offset: 832)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1109, file: !780, line: 326, baseType: !939, size: 32, align: 32, offset: 864)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1109, file: !780, line: 334, baseType: !939, size: 32, align: 32, offset: 896)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1109, file: !780, line: 341, baseType: !939, size: 32, align: 32, offset: 928)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1109, file: !780, line: 346, baseType: !939, size: 32, align: 32, offset: 960)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1109, file: !780, line: 351, baseType: !769, size: 32, align: 32, offset: 992)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1109, file: !780, line: 356, baseType: !980, size: 64, align: 32, offset: 1024)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1109, file: !780, line: 361, baseType: !941, size: 64, align: 64, offset: 1088)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1109, file: !780, line: 369, baseType: !941, size: 64, align: 64, offset: 1152)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1109, file: !780, line: 377, baseType: !941, size: 64, align: 64, offset: 1216)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1109, file: !780, line: 382, baseType: !939, size: 32, align: 32, offset: 1280)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1109, file: !780, line: 386, baseType: !939, size: 32, align: 32, offset: 1312)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1109, file: !780, line: 391, baseType: !939, size: 32, align: 32, offset: 1344)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1109, file: !780, line: 396, baseType: !962, size: 64, align: 64, offset: 1408)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1109, file: !780, line: 403, baseType: !1134, size: 512, align: 64, offset: 1472)
!1134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1096, size: 512, align: 64, elements: !1113)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1109, file: !780, line: 410, baseType: !939, size: 32, align: 32, offset: 1984)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1109, file: !780, line: 415, baseType: !939, size: 32, align: 32, offset: 2016)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1109, file: !780, line: 420, baseType: !939, size: 32, align: 32, offset: 2048)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1109, file: !780, line: 425, baseType: !939, size: 32, align: 32, offset: 2080)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1109, file: !780, line: 435, baseType: !941, size: 64, align: 64, offset: 2112)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1109, file: !780, line: 440, baseType: !939, size: 32, align: 32, offset: 2176)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1109, file: !780, line: 445, baseType: !1096, size: 64, align: 64, offset: 2240)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1109, file: !780, line: 459, baseType: !1143, size: 512, align: 64, offset: 2304)
!1143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1053, size: 512, align: 64, elements: !1113)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1109, file: !780, line: 473, baseType: !1145, size: 64, align: 64, offset: 2816)
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64, align: 64)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1109, file: !780, line: 477, baseType: !939, size: 32, align: 32, offset: 2880)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1109, file: !780, line: 479, baseType: !1148, size: 64, align: 64, offset: 2944)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 64, align: 64)
!1149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1150, size: 64, align: 64)
!1150 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !780, line: 207, baseType: !1151)
!1151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !780, line: 201, size: 320, align: 64, elements: !1152)
!1152 = !{!1153, !1154, !1155, !1156, !1161}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1151, file: !780, line: 202, baseType: !779, size: 32, align: 32)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1151, file: !780, line: 203, baseType: !1063, size: 64, align: 64, offset: 64)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1151, file: !780, line: 204, baseType: !939, size: 32, align: 32, offset: 128)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1151, file: !780, line: 205, baseType: !1157, size: 64, align: 64, offset: 192)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 64, align: 64)
!1158 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1159, line: 86, baseType: !1160)
!1159 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1160 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1159, line: 86, flags: DIFlagFwdDecl)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1151, file: !780, line: 206, baseType: !1053, size: 64, align: 64, offset: 256)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1109, file: !780, line: 480, baseType: !939, size: 32, align: 32, offset: 3008)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1109, file: !780, line: 505, baseType: !939, size: 32, align: 32, offset: 3040)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1109, file: !780, line: 512, baseType: !803, size: 32, align: 32, offset: 3072)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1109, file: !780, line: 514, baseType: !809, size: 32, align: 32, offset: 3104)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1109, file: !780, line: 516, baseType: !827, size: 32, align: 32, offset: 3136)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1109, file: !780, line: 523, baseType: !851, size: 32, align: 32, offset: 3168)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1109, file: !780, line: 525, baseType: !870, size: 32, align: 32, offset: 3200)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1109, file: !780, line: 532, baseType: !941, size: 64, align: 64, offset: 3264)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1109, file: !780, line: 539, baseType: !941, size: 64, align: 64, offset: 3328)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1109, file: !780, line: 547, baseType: !941, size: 64, align: 64, offset: 3392)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1109, file: !780, line: 554, baseType: !1157, size: 64, align: 64, offset: 3456)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1109, file: !780, line: 563, baseType: !939, size: 32, align: 32, offset: 3520)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1109, file: !780, line: 572, baseType: !939, size: 32, align: 32, offset: 3552)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1109, file: !780, line: 581, baseType: !939, size: 32, align: 32, offset: 3584)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1109, file: !780, line: 588, baseType: !1177, size: 64, align: 64, offset: 3648)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 64, align: 64)
!1178 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !942, line: 36, baseType: !1179)
!1179 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1109, file: !780, line: 593, baseType: !939, size: 32, align: 32, offset: 3712)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1109, file: !780, line: 596, baseType: !939, size: 32, align: 32, offset: 3744)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1109, file: !780, line: 599, baseType: !1053, size: 64, align: 64, offset: 3776)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1109, file: !780, line: 605, baseType: !1053, size: 64, align: 64, offset: 3840)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1109, file: !780, line: 616, baseType: !1053, size: 64, align: 64, offset: 3904)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1109, file: !780, line: 626, baseType: !1186, size: 64, align: 64, offset: 3968)
!1186 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1187, line: 216, baseType: !1097)
!1187 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1109, file: !780, line: 627, baseType: !1186, size: 64, align: 64, offset: 4032)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1109, file: !780, line: 628, baseType: !1186, size: 64, align: 64, offset: 4096)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1109, file: !780, line: 629, baseType: !1186, size: 64, align: 64, offset: 4160)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1109, file: !780, line: 645, baseType: !1053, size: 64, align: 64, offset: 4224)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "post_process_opaque", scope: !1101, file: !1100, line: 46, baseType: !962, size: 64, align: 64, offset: 64)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "post_process_opaque_free", scope: !1101, file: !1100, line: 47, baseType: !1194, size: 64, align: 64, offset: 128)
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 64, align: 64)
!1195 = !DISubroutineType(types: !1196)
!1196 = !{null, !962}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv", scope: !1101, file: !1100, line: 52, baseType: !962, size: 64, align: 64, offset: 192)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_free", scope: !1101, file: !1100, line: 53, baseType: !1194, size: 64, align: 64, offset: 256)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 64, align: 64)
!1200 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1064)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64, align: 64)
!1202 = !DIDerivedType(tag: DW_TAG_typedef, name: "iconv_t", file: !1203, line: 29, baseType: !962)
!1203 = !DIFile(filename: "/usr/include/iconv.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 64, align: 64)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64, align: 64)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 64, align: 64)
!1207 = !{!1208}
!1208 = distinct !DIGlobalVariable(name: "sd", scope: !1209, file: !1210, line: 1700, type: !1794, isLocal: true, isDefinition: true, variable: [8 x %struct.anon]* @ff_decode_frame_props.sd)
!1209 = distinct !DISubprogram(name: "ff_decode_frame_props", scope: !1210, file: !1210, line: 1693, type: !1211, isLocal: false, isDefinition: true, scopeLine: 1694, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!1210 = !DIFile(filename: "libavcodec/decode.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1211 = !DISubroutineType(types: !1212)
!1212 = !{!939, !1213, !1107}
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 64, align: 64)
!1214 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !57, line: 3360, baseType: !1215)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !57, line: 1556, size: 8448, align: 64, elements: !1216)
!1216 = !{!1217, !1218, !1219, !1220, !1427, !1428, !1429, !1430, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1580, !1584, !1585, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1731, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1215, file: !57, line: 1561, baseType: !949, size: 64, align: 64)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1215, file: !57, line: 1562, baseType: !939, size: 32, align: 32, offset: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1215, file: !57, line: 1564, baseType: !46, size: 32, align: 32, offset: 96)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1215, file: !57, line: 1565, baseType: !1221, size: 64, align: 64, offset: 128)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 64, align: 64)
!1222 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1223)
!1223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !57, line: 3468, size: 1984, align: 64, elements: !1224)
!1224 = !{!1225, !1226, !1227, !1228, !1229, !1230, !1233, !1236, !1239, !1242, !1245, !1246, !1247, !1255, !1256, !1257, !1259, !1263, !1269, !1278, !1282, !1283, !1325, !1355, !1359, !1360, !1364, !1368, !1370, !1374, !1375, !1376}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1223, file: !57, line: 3475, baseType: !955, size: 64, align: 64)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1223, file: !57, line: 3480, baseType: !955, size: 64, align: 64, offset: 64)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1223, file: !57, line: 3481, baseType: !46, size: 32, align: 32, offset: 128)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1223, file: !57, line: 3482, baseType: !56, size: 32, align: 32, offset: 160)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1223, file: !57, line: 3487, baseType: !939, size: 32, align: 32, offset: 192)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1223, file: !57, line: 3488, baseType: !1231, size: 64, align: 64, offset: 256)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64, align: 64)
!1232 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !980)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1223, file: !57, line: 3489, baseType: !1234, size: 64, align: 64, offset: 320)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 64, align: 64)
!1235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !516)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1223, file: !57, line: 3490, baseType: !1237, size: 64, align: 64, offset: 384)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 64, align: 64)
!1238 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !939)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1223, file: !57, line: 3491, baseType: !1240, size: 64, align: 64, offset: 448)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 64, align: 64)
!1241 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !716)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1223, file: !57, line: 3492, baseType: !1243, size: 64, align: 64, offset: 512)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 64, align: 64)
!1244 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1096)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1223, file: !57, line: 3493, baseType: !1064, size: 8, align: 8, offset: 576)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1223, file: !57, line: 3494, baseType: !949, size: 64, align: 64, offset: 640)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1223, file: !57, line: 3495, baseType: !1248, size: 64, align: 64, offset: 704)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 64, align: 64)
!1249 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1250)
!1250 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !57, line: 3404, baseType: !1251)
!1251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !57, line: 3401, size: 128, align: 64, elements: !1252)
!1252 = !{!1253, !1254}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1251, file: !57, line: 3402, baseType: !939, size: 32, align: 32)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1251, file: !57, line: 3403, baseType: !955, size: 64, align: 64, offset: 64)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1223, file: !57, line: 3507, baseType: !955, size: 64, align: 64, offset: 768)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1223, file: !57, line: 3516, baseType: !939, size: 32, align: 32, offset: 832)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1223, file: !57, line: 3517, baseType: !1258, size: 64, align: 64, offset: 896)
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64, align: 64)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1223, file: !57, line: 3527, baseType: !1260, size: 64, align: 64, offset: 960)
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 64, align: 64)
!1261 = !DISubroutineType(types: !1262)
!1262 = !{!939, !1213}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1223, file: !57, line: 3535, baseType: !1264, size: 64, align: 64, offset: 1024)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64, align: 64)
!1265 = !DISubroutineType(types: !1266)
!1266 = !{!939, !1213, !1267}
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64, align: 64)
!1268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1214)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1223, file: !57, line: 3541, baseType: !1270, size: 64, align: 64, offset: 1088)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64, align: 64)
!1271 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1272)
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !57, line: 3461, baseType: !1273)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1274, line: 223, size: 128, align: 64, elements: !1275)
!1274 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1275 = !{!1276, !1277}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1273, file: !1274, line: 224, baseType: !1199, size: 64, align: 64)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1273, file: !1274, line: 225, baseType: !1199, size: 64, align: 64, offset: 64)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1223, file: !57, line: 3549, baseType: !1279, size: 64, align: 64, offset: 1152)
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 64, align: 64)
!1280 = !DISubroutineType(types: !1281)
!1281 = !{null, !1258}
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1223, file: !57, line: 3551, baseType: !1260, size: 64, align: 64, offset: 1216)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1223, file: !57, line: 3552, baseType: !1284, size: 64, align: 64, offset: 1280)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 64, align: 64)
!1285 = !DISubroutineType(types: !1286)
!1286 = !{!939, !1213, !1063, !939, !1287}
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 64, align: 64)
!1288 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1289)
!1289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !57, line: 3920, size: 256, align: 64, elements: !1290)
!1290 = !{!1291, !1294, !1295, !1296, !1297, !1324}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1289, file: !57, line: 3921, baseType: !1292, size: 16, align: 16)
!1292 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !942, line: 49, baseType: !1293)
!1293 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1289, file: !57, line: 3922, baseType: !1090, size: 32, align: 32, offset: 32)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1289, file: !57, line: 3923, baseType: !1090, size: 32, align: 32, offset: 64)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1289, file: !57, line: 3924, baseType: !940, size: 32, align: 32, offset: 96)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1289, file: !57, line: 3925, baseType: !1298, size: 64, align: 64, offset: 128)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64, align: 64)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 64, align: 64)
!1300 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !57, line: 3918, baseType: !1301)
!1301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !57, line: 3885, size: 1600, align: 64, elements: !1302)
!1302 = !{!1303, !1304, !1305, !1306, !1307, !1308, !1314, !1318, !1320, !1321, !1322, !1323}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1301, file: !57, line: 3886, baseType: !939, size: 32, align: 32)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1301, file: !57, line: 3887, baseType: !939, size: 32, align: 32, offset: 32)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1301, file: !57, line: 3888, baseType: !939, size: 32, align: 32, offset: 64)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1301, file: !57, line: 3889, baseType: !939, size: 32, align: 32, offset: 96)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1301, file: !57, line: 3890, baseType: !939, size: 32, align: 32, offset: 128)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1301, file: !57, line: 3897, baseType: !1309, size: 768, align: 64, offset: 192)
!1309 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !57, line: 3858, baseType: !1310)
!1310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !57, line: 3853, size: 768, align: 64, elements: !1311)
!1311 = !{!1312, !1313}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1310, file: !57, line: 3855, baseType: !1112, size: 512, align: 64)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1310, file: !57, line: 3857, baseType: !1116, size: 256, align: 32, offset: 512)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1301, file: !57, line: 3903, baseType: !1315, size: 256, align: 64, offset: 960)
!1315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1063, size: 256, align: 64, elements: !1316)
!1316 = !{!1317}
!1317 = !DISubrange(count: 4)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1301, file: !57, line: 3904, baseType: !1319, size: 128, align: 32, offset: 1216)
!1319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !939, size: 128, align: 32, elements: !1316)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1301, file: !57, line: 3906, baseType: !733, size: 32, align: 32, offset: 1344)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1301, file: !57, line: 3908, baseType: !1205, size: 64, align: 64, offset: 1408)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1301, file: !57, line: 3915, baseType: !1205, size: 64, align: 64, offset: 1472)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1301, file: !57, line: 3917, baseType: !939, size: 32, align: 32, offset: 1536)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1289, file: !57, line: 3926, baseType: !941, size: 64, align: 64, offset: 192)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1223, file: !57, line: 3564, baseType: !1326, size: 64, align: 64, offset: 1344)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 64, align: 64)
!1327 = !DISubroutineType(types: !1328)
!1328 = !{!939, !1213, !1329, !1352, !1354}
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64, align: 64)
!1330 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !57, line: 1499, baseType: !1331)
!1331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !57, line: 1445, size: 704, align: 64, elements: !1332)
!1332 = !{!1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1348, !1349, !1350, !1351}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1331, file: !57, line: 1451, baseType: !1053, size: 64, align: 64)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1331, file: !57, line: 1461, baseType: !941, size: 64, align: 64, offset: 64)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1331, file: !57, line: 1467, baseType: !941, size: 64, align: 64, offset: 128)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1331, file: !57, line: 1468, baseType: !1063, size: 64, align: 64, offset: 192)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1331, file: !57, line: 1469, baseType: !939, size: 32, align: 32, offset: 256)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1331, file: !57, line: 1470, baseType: !939, size: 32, align: 32, offset: 288)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1331, file: !57, line: 1474, baseType: !939, size: 32, align: 32, offset: 320)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1331, file: !57, line: 1479, baseType: !1341, size: 64, align: 64, offset: 384)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 64, align: 64)
!1342 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !57, line: 1415, baseType: !1343)
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !57, line: 1411, size: 128, align: 64, elements: !1344)
!1344 = !{!1345, !1346, !1347}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1343, file: !57, line: 1412, baseType: !1063, size: 64, align: 64)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1343, file: !57, line: 1413, baseType: !939, size: 32, align: 32, offset: 64)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1343, file: !57, line: 1414, baseType: !739, size: 32, align: 32, offset: 96)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1331, file: !57, line: 1480, baseType: !939, size: 32, align: 32, offset: 448)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1331, file: !57, line: 1486, baseType: !941, size: 64, align: 64, offset: 512)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1331, file: !57, line: 1488, baseType: !941, size: 64, align: 64, offset: 576)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1331, file: !57, line: 1497, baseType: !941, size: 64, align: 64, offset: 640)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64, align: 64)
!1353 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1108)
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64, align: 64)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1223, file: !57, line: 3566, baseType: !1356, size: 64, align: 64, offset: 1408)
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64, align: 64)
!1357 = !DISubroutineType(types: !1358)
!1358 = !{!939, !1213, !962, !1354, !1329}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1223, file: !57, line: 3567, baseType: !1260, size: 64, align: 64, offset: 1472)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1223, file: !57, line: 3576, baseType: !1361, size: 64, align: 64, offset: 1536)
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64, align: 64)
!1362 = !DISubroutineType(types: !1363)
!1363 = !{!939, !1213, !1352}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1223, file: !57, line: 3577, baseType: !1365, size: 64, align: 64, offset: 1600)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 64, align: 64)
!1366 = !DISubroutineType(types: !1367)
!1367 = !{!939, !1213, !1329}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1223, file: !57, line: 3584, baseType: !1369, size: 64, align: 64, offset: 1664)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 64, align: 64)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1223, file: !57, line: 3589, baseType: !1371, size: 64, align: 64, offset: 1728)
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 64, align: 64)
!1372 = !DISubroutineType(types: !1373)
!1373 = !{null, !1213}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1223, file: !57, line: 3594, baseType: !939, size: 32, align: 32, offset: 1792)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1223, file: !57, line: 3600, baseType: !955, size: 64, align: 64, offset: 1856)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1223, file: !57, line: 3609, baseType: !1377, size: 64, align: 64, offset: 1920)
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 64, align: 64)
!1378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 64, align: 64)
!1379 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1380)
!1380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !1381, line: 29, size: 192, align: 64, elements: !1382)
!1381 = !DIFile(filename: "libavcodec/hwaccel.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1382 = !{!1383, !1390}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "public", scope: !1380, file: !1381, line: 34, baseType: !1384, size: 96, align: 32)
!1384 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecHWConfig", file: !57, line: 3459, baseType: !1385)
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfig", file: !57, line: 3442, size: 96, align: 32, elements: !1386)
!1386 = !{!1387, !1388, !1389}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1385, file: !57, line: 3446, baseType: !516, size: 32, align: 32)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "methods", scope: !1385, file: !57, line: 3451, baseType: !939, size: 32, align: 32, offset: 32)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "device_type", scope: !1385, file: !57, line: 3458, baseType: !880, size: 32, align: 32, offset: 64)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1380, file: !1381, line: 39, baseType: !1391, size: 64, align: 64, offset: 128)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 64, align: 64)
!1392 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1393)
!1393 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVHWAccel", file: !57, line: 3796, baseType: !1394)
!1394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !57, line: 3636, size: 896, align: 64, elements: !1395)
!1395 = !{!1396, !1397, !1398, !1399, !1400, !1401, !1402, !1406, !1410, !1411, !1412, !1413, !1419, !1420, !1421, !1422, !1423}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1394, file: !57, line: 3642, baseType: !955, size: 64, align: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1394, file: !57, line: 3649, baseType: !46, size: 32, align: 32, offset: 64)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1394, file: !57, line: 3656, baseType: !56, size: 32, align: 32, offset: 96)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1394, file: !57, line: 3663, baseType: !516, size: 32, align: 32, offset: 128)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1394, file: !57, line: 3669, baseType: !939, size: 32, align: 32, offset: 160)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1394, file: !57, line: 3682, baseType: !1369, size: 64, align: 64, offset: 192)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1394, file: !57, line: 3698, baseType: !1403, size: 64, align: 64, offset: 256)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64, align: 64)
!1404 = !DISubroutineType(types: !1405)
!1405 = !{!939, !1213, !1199, !1090}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1394, file: !57, line: 3712, baseType: !1407, size: 64, align: 64, offset: 320)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 64, align: 64)
!1408 = !DISubroutineType(types: !1409)
!1409 = !{!939, !1213, !939, !1199, !1090}
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1394, file: !57, line: 3726, baseType: !1403, size: 64, align: 64, offset: 384)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1394, file: !57, line: 3737, baseType: !1260, size: 64, align: 64, offset: 448)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1394, file: !57, line: 3746, baseType: !939, size: 32, align: 32, offset: 512)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1394, file: !57, line: 3757, baseType: !1414, size: 64, align: 64, offset: 576)
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 64, align: 64)
!1415 = !DISubroutineType(types: !1416)
!1416 = !{null, !1417}
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 64, align: 64)
!1418 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !57, line: 3617, flags: DIFlagFwdDecl)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1394, file: !57, line: 3766, baseType: !1260, size: 64, align: 64, offset: 640)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1394, file: !57, line: 3774, baseType: !1260, size: 64, align: 64, offset: 704)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1394, file: !57, line: 3780, baseType: !939, size: 32, align: 32, offset: 768)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1394, file: !57, line: 3785, baseType: !939, size: 32, align: 32, offset: 800)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1394, file: !57, line: 3795, baseType: !1424, size: 64, align: 64, offset: 832)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64, align: 64)
!1425 = !DISubroutineType(types: !1426)
!1426 = !{!939, !1213, !1053}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1215, file: !57, line: 1566, baseType: !56, size: 32, align: 32, offset: 192)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1215, file: !57, line: 1581, baseType: !940, size: 32, align: 32, offset: 224)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1215, file: !57, line: 1583, baseType: !962, size: 64, align: 64, offset: 256)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1215, file: !57, line: 1591, baseType: !1431, size: 64, align: 64, offset: 320)
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1432, size: 64, align: 64)
!1432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1274, line: 129, size: 1664, align: 64, elements: !1433)
!1433 = !{!1434, !1435, !1436, !1437, !1438, !1453, !1454, !1460, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1432, file: !1274, line: 136, baseType: !939, size: 32, align: 32)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1432, file: !1274, line: 151, baseType: !939, size: 32, align: 32, offset: 32)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1432, file: !1274, line: 157, baseType: !939, size: 32, align: 32, offset: 64)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1432, file: !1274, line: 159, baseType: !1107, size: 64, align: 64, offset: 128)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1432, file: !1274, line: 161, baseType: !1439, size: 64, align: 64, offset: 192)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 64, align: 64)
!1440 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1274, line: 117, baseType: !1441)
!1441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1274, line: 100, size: 832, align: 64, elements: !1442)
!1442 = !{!1443, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1441, file: !1274, line: 105, baseType: !1444, size: 256, align: 64)
!1444 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1076, size: 256, align: 64, elements: !1316)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1441, file: !1274, line: 110, baseType: !939, size: 32, align: 32, offset: 256)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1441, file: !1274, line: 111, baseType: !939, size: 32, align: 32, offset: 288)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1441, file: !1274, line: 111, baseType: !939, size: 32, align: 32, offset: 320)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1441, file: !1274, line: 112, baseType: !1116, size: 256, align: 32, offset: 352)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1441, file: !1274, line: 113, baseType: !1319, size: 128, align: 32, offset: 608)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1441, file: !1274, line: 114, baseType: !939, size: 32, align: 32, offset: 736)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1441, file: !1274, line: 115, baseType: !939, size: 32, align: 32, offset: 768)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1441, file: !1274, line: 116, baseType: !939, size: 32, align: 32, offset: 800)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1432, file: !1274, line: 163, baseType: !962, size: 64, align: 64, offset: 256)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1432, file: !1274, line: 165, baseType: !1455, size: 128, align: 64, offset: 320)
!1455 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1274, line: 122, baseType: !1456)
!1456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1274, line: 119, size: 128, align: 64, elements: !1457)
!1457 = !{!1458, !1459}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1456, file: !1274, line: 120, baseType: !1329, size: 64, align: 64)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1456, file: !1274, line: 121, baseType: !1107, size: 64, align: 64, offset: 64)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1432, file: !1274, line: 166, baseType: !1461, size: 128, align: 64, offset: 448)
!1461 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1274, line: 127, baseType: !1462)
!1462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1274, line: 124, size: 128, align: 64, elements: !1463)
!1463 = !{!1464, !1537}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1462, file: !1274, line: 125, baseType: !1465, size: 64, align: 64)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64, align: 64)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 64, align: 64)
!1467 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !57, line: 5794, baseType: !1468)
!1468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !57, line: 5747, size: 512, align: 64, elements: !1469)
!1469 = !{!1470, !1471, !1495, !1499, !1500, !1534, !1535, !1536}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1468, file: !57, line: 5751, baseType: !949, size: 64, align: 64)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1468, file: !57, line: 5756, baseType: !1472, size: 64, align: 64, offset: 64)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 64, align: 64)
!1473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1474)
!1474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !57, line: 5796, size: 512, align: 64, elements: !1475)
!1475 = !{!1476, !1477, !1480, !1481, !1482, !1486, !1490, !1494}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1474, file: !57, line: 5797, baseType: !955, size: 64, align: 64)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1474, file: !57, line: 5804, baseType: !1478, size: 64, align: 64, offset: 64)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64, align: 64)
!1479 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !56)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1474, file: !57, line: 5815, baseType: !949, size: 64, align: 64, offset: 128)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1474, file: !57, line: 5825, baseType: !939, size: 32, align: 32, offset: 192)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1474, file: !57, line: 5826, baseType: !1483, size: 64, align: 64, offset: 256)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 64, align: 64)
!1484 = !DISubroutineType(types: !1485)
!1485 = !{!939, !1466}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1474, file: !57, line: 5827, baseType: !1487, size: 64, align: 64, offset: 320)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 64, align: 64)
!1488 = !DISubroutineType(types: !1489)
!1489 = !{!939, !1466, !1329}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1474, file: !57, line: 5828, baseType: !1491, size: 64, align: 64, offset: 384)
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 64, align: 64)
!1492 = !DISubroutineType(types: !1493)
!1493 = !{null, !1466}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1474, file: !57, line: 5829, baseType: !1491, size: 64, align: 64, offset: 448)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1468, file: !57, line: 5762, baseType: !1496, size: 64, align: 64, offset: 128)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 64, align: 64)
!1497 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !57, line: 5735, baseType: !1498)
!1498 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !57, line: 5735, flags: DIFlagFwdDecl)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1468, file: !57, line: 5768, baseType: !962, size: 64, align: 64, offset: 192)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1468, file: !57, line: 5775, baseType: !1501, size: 64, align: 64, offset: 256)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 64, align: 64)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !57, line: 4085, baseType: !1503)
!1503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !57, line: 3936, size: 1152, align: 64, elements: !1504)
!1504 = !{!1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1503, file: !57, line: 3940, baseType: !46, size: 32, align: 32)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1503, file: !57, line: 3944, baseType: !56, size: 32, align: 32, offset: 32)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1503, file: !57, line: 3948, baseType: !1090, size: 32, align: 32, offset: 64)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1503, file: !57, line: 3958, baseType: !1063, size: 64, align: 64, offset: 128)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1503, file: !57, line: 3962, baseType: !939, size: 32, align: 32, offset: 192)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1503, file: !57, line: 3968, baseType: !939, size: 32, align: 32, offset: 224)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1503, file: !57, line: 3973, baseType: !941, size: 64, align: 64, offset: 256)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1503, file: !57, line: 3986, baseType: !939, size: 32, align: 32, offset: 320)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1503, file: !57, line: 3999, baseType: !939, size: 32, align: 32, offset: 352)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1503, file: !57, line: 4004, baseType: !939, size: 32, align: 32, offset: 384)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1503, file: !57, line: 4005, baseType: !939, size: 32, align: 32, offset: 416)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1503, file: !57, line: 4010, baseType: !939, size: 32, align: 32, offset: 448)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1503, file: !57, line: 4011, baseType: !939, size: 32, align: 32, offset: 480)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1503, file: !57, line: 4020, baseType: !980, size: 64, align: 32, offset: 512)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1503, file: !57, line: 4025, baseType: !894, size: 32, align: 32, offset: 576)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1503, file: !57, line: 4030, baseType: !803, size: 32, align: 32, offset: 608)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1503, file: !57, line: 4031, baseType: !809, size: 32, align: 32, offset: 640)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1503, file: !57, line: 4032, baseType: !827, size: 32, align: 32, offset: 672)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1503, file: !57, line: 4033, baseType: !851, size: 32, align: 32, offset: 704)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1503, file: !57, line: 4034, baseType: !870, size: 32, align: 32, offset: 736)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1503, file: !57, line: 4039, baseType: !939, size: 32, align: 32, offset: 768)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1503, file: !57, line: 4046, baseType: !1096, size: 64, align: 64, offset: 832)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1503, file: !57, line: 4050, baseType: !939, size: 32, align: 32, offset: 896)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1503, file: !57, line: 4054, baseType: !939, size: 32, align: 32, offset: 928)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1503, file: !57, line: 4061, baseType: !939, size: 32, align: 32, offset: 960)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1503, file: !57, line: 4065, baseType: !939, size: 32, align: 32, offset: 992)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1503, file: !57, line: 4073, baseType: !939, size: 32, align: 32, offset: 1024)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1503, file: !57, line: 4080, baseType: !939, size: 32, align: 32, offset: 1056)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1503, file: !57, line: 4084, baseType: !939, size: 32, align: 32, offset: 1088)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1468, file: !57, line: 5781, baseType: !1501, size: 64, align: 64, offset: 320)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1468, file: !57, line: 5787, baseType: !980, size: 64, align: 32, offset: 384)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1468, file: !57, line: 5793, baseType: !980, size: 64, align: 32, offset: 448)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1462, file: !1274, line: 126, baseType: !939, size: 32, align: 32, offset: 64)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1432, file: !1274, line: 172, baseType: !1329, size: 64, align: 64, offset: 576)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1432, file: !1274, line: 177, baseType: !1063, size: 64, align: 64, offset: 640)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1432, file: !1274, line: 178, baseType: !940, size: 32, align: 32, offset: 704)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1432, file: !1274, line: 180, baseType: !962, size: 64, align: 64, offset: 768)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1432, file: !1274, line: 185, baseType: !939, size: 32, align: 32, offset: 832)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1432, file: !1274, line: 190, baseType: !962, size: 64, align: 64, offset: 896)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1432, file: !1274, line: 195, baseType: !939, size: 32, align: 32, offset: 960)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1432, file: !1274, line: 200, baseType: !1329, size: 64, align: 64, offset: 1024)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1432, file: !1274, line: 201, baseType: !939, size: 32, align: 32, offset: 1088)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1432, file: !1274, line: 202, baseType: !1107, size: 64, align: 64, offset: 1152)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1432, file: !1274, line: 203, baseType: !939, size: 32, align: 32, offset: 1216)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1432, file: !1274, line: 205, baseType: !939, size: 32, align: 32, offset: 1248)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1432, file: !1274, line: 206, baseType: !939, size: 32, align: 32, offset: 1280)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1432, file: !1274, line: 209, baseType: !1186, size: 64, align: 64, offset: 1344)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1432, file: !1274, line: 212, baseType: !1186, size: 64, align: 64, offset: 1408)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1432, file: !1274, line: 213, baseType: !1107, size: 64, align: 64, offset: 1472)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1432, file: !1274, line: 215, baseType: !939, size: 32, align: 32, offset: 1536)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1432, file: !1274, line: 217, baseType: !939, size: 32, align: 32, offset: 1568)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1432, file: !1274, line: 220, baseType: !939, size: 32, align: 32, offset: 1600)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1215, file: !57, line: 1598, baseType: !962, size: 64, align: 64, offset: 384)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1215, file: !57, line: 1606, baseType: !941, size: 64, align: 64, offset: 448)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1215, file: !57, line: 1614, baseType: !939, size: 32, align: 32, offset: 512)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1215, file: !57, line: 1622, baseType: !939, size: 32, align: 32, offset: 544)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1215, file: !57, line: 1628, baseType: !939, size: 32, align: 32, offset: 576)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1215, file: !57, line: 1636, baseType: !939, size: 32, align: 32, offset: 608)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1215, file: !57, line: 1643, baseType: !939, size: 32, align: 32, offset: 640)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1215, file: !57, line: 1657, baseType: !1063, size: 64, align: 64, offset: 704)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1215, file: !57, line: 1658, baseType: !939, size: 32, align: 32, offset: 768)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1215, file: !57, line: 1679, baseType: !980, size: 64, align: 32, offset: 800)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1215, file: !57, line: 1688, baseType: !939, size: 32, align: 32, offset: 864)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1215, file: !57, line: 1712, baseType: !939, size: 32, align: 32, offset: 896)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1215, file: !57, line: 1729, baseType: !939, size: 32, align: 32, offset: 928)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1215, file: !57, line: 1729, baseType: !939, size: 32, align: 32, offset: 960)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1215, file: !57, line: 1744, baseType: !939, size: 32, align: 32, offset: 992)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1215, file: !57, line: 1744, baseType: !939, size: 32, align: 32, offset: 1024)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1215, file: !57, line: 1751, baseType: !939, size: 32, align: 32, offset: 1056)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1215, file: !57, line: 1766, baseType: !516, size: 32, align: 32, offset: 1088)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1215, file: !57, line: 1791, baseType: !1576, size: 64, align: 64, offset: 1152)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 64, align: 64)
!1577 = !DISubroutineType(types: !1578)
!1578 = !{null, !1579, !1352, !1354, !939, !939, !939}
!1579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 64, align: 64)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1215, file: !57, line: 1808, baseType: !1581, size: 64, align: 64, offset: 1216)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 64, align: 64)
!1582 = !DISubroutineType(types: !1583)
!1583 = !{!516, !1579, !1234}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1215, file: !57, line: 1816, baseType: !939, size: 32, align: 32, offset: 1280)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1215, file: !57, line: 1825, baseType: !1586, size: 32, align: 32, offset: 1312)
!1586 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1215, file: !57, line: 1830, baseType: !939, size: 32, align: 32, offset: 1344)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1215, file: !57, line: 1838, baseType: !1586, size: 32, align: 32, offset: 1376)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1215, file: !57, line: 1846, baseType: !939, size: 32, align: 32, offset: 1408)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1215, file: !57, line: 1851, baseType: !939, size: 32, align: 32, offset: 1440)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1215, file: !57, line: 1861, baseType: !1586, size: 32, align: 32, offset: 1472)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1215, file: !57, line: 1868, baseType: !1586, size: 32, align: 32, offset: 1504)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1215, file: !57, line: 1875, baseType: !1586, size: 32, align: 32, offset: 1536)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1215, file: !57, line: 1882, baseType: !1586, size: 32, align: 32, offset: 1568)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1215, file: !57, line: 1889, baseType: !1586, size: 32, align: 32, offset: 1600)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1215, file: !57, line: 1896, baseType: !1586, size: 32, align: 32, offset: 1632)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1215, file: !57, line: 1903, baseType: !1586, size: 32, align: 32, offset: 1664)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1215, file: !57, line: 1910, baseType: !939, size: 32, align: 32, offset: 1696)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1215, file: !57, line: 1915, baseType: !939, size: 32, align: 32, offset: 1728)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1215, file: !57, line: 1926, baseType: !1354, size: 64, align: 64, offset: 1792)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1215, file: !57, line: 1935, baseType: !980, size: 64, align: 32, offset: 1856)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1215, file: !57, line: 1942, baseType: !939, size: 32, align: 32, offset: 1920)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1215, file: !57, line: 1948, baseType: !939, size: 32, align: 32, offset: 1952)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1215, file: !57, line: 1954, baseType: !939, size: 32, align: 32, offset: 1984)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1215, file: !57, line: 1960, baseType: !939, size: 32, align: 32, offset: 2016)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1215, file: !57, line: 1984, baseType: !939, size: 32, align: 32, offset: 2048)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1215, file: !57, line: 1991, baseType: !939, size: 32, align: 32, offset: 2080)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1215, file: !57, line: 1996, baseType: !939, size: 32, align: 32, offset: 2112)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1215, file: !57, line: 2004, baseType: !939, size: 32, align: 32, offset: 2144)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1215, file: !57, line: 2011, baseType: !939, size: 32, align: 32, offset: 2176)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1215, file: !57, line: 2018, baseType: !939, size: 32, align: 32, offset: 2208)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1215, file: !57, line: 2027, baseType: !939, size: 32, align: 32, offset: 2240)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1215, file: !57, line: 2034, baseType: !939, size: 32, align: 32, offset: 2272)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1215, file: !57, line: 2044, baseType: !939, size: 32, align: 32, offset: 2304)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1215, file: !57, line: 2054, baseType: !1616, size: 64, align: 64, offset: 2368)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 64, align: 64)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1215, file: !57, line: 2061, baseType: !1616, size: 64, align: 64, offset: 2432)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1215, file: !57, line: 2066, baseType: !939, size: 32, align: 32, offset: 2496)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1215, file: !57, line: 2070, baseType: !939, size: 32, align: 32, offset: 2528)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1215, file: !57, line: 2078, baseType: !939, size: 32, align: 32, offset: 2560)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1215, file: !57, line: 2085, baseType: !939, size: 32, align: 32, offset: 2592)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1215, file: !57, line: 2092, baseType: !939, size: 32, align: 32, offset: 2624)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1215, file: !57, line: 2099, baseType: !939, size: 32, align: 32, offset: 2656)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1215, file: !57, line: 2106, baseType: !939, size: 32, align: 32, offset: 2688)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1215, file: !57, line: 2113, baseType: !939, size: 32, align: 32, offset: 2720)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1215, file: !57, line: 2120, baseType: !939, size: 32, align: 32, offset: 2752)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1215, file: !57, line: 2125, baseType: !939, size: 32, align: 32, offset: 2784)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1215, file: !57, line: 2133, baseType: !939, size: 32, align: 32, offset: 2816)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1215, file: !57, line: 2140, baseType: !939, size: 32, align: 32, offset: 2848)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1215, file: !57, line: 2145, baseType: !939, size: 32, align: 32, offset: 2880)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1215, file: !57, line: 2153, baseType: !939, size: 32, align: 32, offset: 2912)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1215, file: !57, line: 2158, baseType: !939, size: 32, align: 32, offset: 2944)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1215, file: !57, line: 2166, baseType: !809, size: 32, align: 32, offset: 2976)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1215, file: !57, line: 2173, baseType: !827, size: 32, align: 32, offset: 3008)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1215, file: !57, line: 2180, baseType: !851, size: 32, align: 32, offset: 3040)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1215, file: !57, line: 2187, baseType: !803, size: 32, align: 32, offset: 3072)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1215, file: !57, line: 2194, baseType: !870, size: 32, align: 32, offset: 3104)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1215, file: !57, line: 2203, baseType: !939, size: 32, align: 32, offset: 3136)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1215, file: !57, line: 2209, baseType: !894, size: 32, align: 32, offset: 3168)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1215, file: !57, line: 2212, baseType: !939, size: 32, align: 32, offset: 3200)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1215, file: !57, line: 2213, baseType: !939, size: 32, align: 32, offset: 3232)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1215, file: !57, line: 2220, baseType: !716, size: 32, align: 32, offset: 3264)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1215, file: !57, line: 2232, baseType: !939, size: 32, align: 32, offset: 3296)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1215, file: !57, line: 2243, baseType: !939, size: 32, align: 32, offset: 3328)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1215, file: !57, line: 2249, baseType: !939, size: 32, align: 32, offset: 3360)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1215, file: !57, line: 2256, baseType: !939, size: 32, align: 32, offset: 3392)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1215, file: !57, line: 2263, baseType: !1096, size: 64, align: 64, offset: 3456)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1215, file: !57, line: 2270, baseType: !1096, size: 64, align: 64, offset: 3520)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1215, file: !57, line: 2277, baseType: !902, size: 32, align: 32, offset: 3584)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1215, file: !57, line: 2285, baseType: !716, size: 32, align: 32, offset: 3616)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1215, file: !57, line: 2367, baseType: !1652, size: 64, align: 64, offset: 3648)
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 64, align: 64)
!1653 = !DISubroutineType(types: !1654)
!1654 = !{!939, !1579, !1107, !939}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1215, file: !57, line: 2383, baseType: !939, size: 32, align: 32, offset: 3712)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1215, file: !57, line: 2386, baseType: !1586, size: 32, align: 32, offset: 3744)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1215, file: !57, line: 2387, baseType: !1586, size: 32, align: 32, offset: 3776)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1215, file: !57, line: 2394, baseType: !939, size: 32, align: 32, offset: 3808)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1215, file: !57, line: 2401, baseType: !939, size: 32, align: 32, offset: 3840)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1215, file: !57, line: 2408, baseType: !939, size: 32, align: 32, offset: 3872)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1215, file: !57, line: 2415, baseType: !939, size: 32, align: 32, offset: 3904)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1215, file: !57, line: 2422, baseType: !939, size: 32, align: 32, offset: 3936)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1215, file: !57, line: 2423, baseType: !1664, size: 64, align: 64, offset: 3968)
!1664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1665, size: 64, align: 64)
!1665 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !57, line: 831, baseType: !1666)
!1666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !57, line: 826, size: 128, align: 32, elements: !1667)
!1667 = !{!1668, !1669, !1670, !1671}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1666, file: !57, line: 827, baseType: !939, size: 32, align: 32)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1666, file: !57, line: 828, baseType: !939, size: 32, align: 32, offset: 32)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1666, file: !57, line: 829, baseType: !939, size: 32, align: 32, offset: 64)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1666, file: !57, line: 830, baseType: !1586, size: 32, align: 32, offset: 96)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1215, file: !57, line: 2430, baseType: !941, size: 64, align: 64, offset: 4032)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1215, file: !57, line: 2437, baseType: !941, size: 64, align: 64, offset: 4096)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1215, file: !57, line: 2444, baseType: !1586, size: 32, align: 32, offset: 4160)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1215, file: !57, line: 2451, baseType: !1586, size: 32, align: 32, offset: 4192)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1215, file: !57, line: 2458, baseType: !939, size: 32, align: 32, offset: 4224)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1215, file: !57, line: 2469, baseType: !939, size: 32, align: 32, offset: 4256)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1215, file: !57, line: 2475, baseType: !939, size: 32, align: 32, offset: 4288)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1215, file: !57, line: 2481, baseType: !939, size: 32, align: 32, offset: 4320)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1215, file: !57, line: 2485, baseType: !939, size: 32, align: 32, offset: 4352)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1215, file: !57, line: 2489, baseType: !939, size: 32, align: 32, offset: 4384)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1215, file: !57, line: 2493, baseType: !939, size: 32, align: 32, offset: 4416)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1215, file: !57, line: 2501, baseType: !939, size: 32, align: 32, offset: 4448)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1215, file: !57, line: 2506, baseType: !939, size: 32, align: 32, offset: 4480)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1215, file: !57, line: 2510, baseType: !939, size: 32, align: 32, offset: 4512)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1215, file: !57, line: 2514, baseType: !941, size: 64, align: 64, offset: 4544)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1215, file: !57, line: 2528, baseType: !1688, size: 64, align: 64, offset: 4608)
!1688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 64, align: 64)
!1689 = !DISubroutineType(types: !1690)
!1690 = !{null, !1579, !962, !939, !939}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1215, file: !57, line: 2534, baseType: !939, size: 32, align: 32, offset: 4672)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1215, file: !57, line: 2545, baseType: !939, size: 32, align: 32, offset: 4704)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1215, file: !57, line: 2547, baseType: !939, size: 32, align: 32, offset: 4736)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1215, file: !57, line: 2549, baseType: !939, size: 32, align: 32, offset: 4768)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1215, file: !57, line: 2551, baseType: !939, size: 32, align: 32, offset: 4800)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1215, file: !57, line: 2553, baseType: !939, size: 32, align: 32, offset: 4832)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1215, file: !57, line: 2555, baseType: !939, size: 32, align: 32, offset: 4864)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1215, file: !57, line: 2557, baseType: !939, size: 32, align: 32, offset: 4896)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1215, file: !57, line: 2559, baseType: !939, size: 32, align: 32, offset: 4928)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1215, file: !57, line: 2563, baseType: !939, size: 32, align: 32, offset: 4960)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1215, file: !57, line: 2571, baseType: !1205, size: 64, align: 64, offset: 4992)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1215, file: !57, line: 2579, baseType: !1205, size: 64, align: 64, offset: 5056)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1215, file: !57, line: 2586, baseType: !939, size: 32, align: 32, offset: 5120)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1215, file: !57, line: 2615, baseType: !939, size: 32, align: 32, offset: 5152)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1215, file: !57, line: 2627, baseType: !939, size: 32, align: 32, offset: 5184)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1215, file: !57, line: 2637, baseType: !939, size: 32, align: 32, offset: 5216)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1215, file: !57, line: 2681, baseType: !939, size: 32, align: 32, offset: 5248)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1215, file: !57, line: 2709, baseType: !941, size: 64, align: 64, offset: 5312)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1215, file: !57, line: 2716, baseType: !1710, size: 64, align: 64, offset: 5376)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 64, align: 64)
!1711 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1394)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1215, file: !57, line: 2728, baseType: !962, size: 64, align: 64, offset: 5440)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1215, file: !57, line: 2735, baseType: !1134, size: 512, align: 64, offset: 5504)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1215, file: !57, line: 2742, baseType: !939, size: 32, align: 32, offset: 6016)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1215, file: !57, line: 2755, baseType: !939, size: 32, align: 32, offset: 6048)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1215, file: !57, line: 2776, baseType: !939, size: 32, align: 32, offset: 6080)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1215, file: !57, line: 2783, baseType: !939, size: 32, align: 32, offset: 6112)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1215, file: !57, line: 2791, baseType: !939, size: 32, align: 32, offset: 6144)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1215, file: !57, line: 2802, baseType: !1107, size: 64, align: 64, offset: 6208)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1215, file: !57, line: 2811, baseType: !939, size: 32, align: 32, offset: 6272)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1215, file: !57, line: 2821, baseType: !939, size: 32, align: 32, offset: 6304)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1215, file: !57, line: 2830, baseType: !939, size: 32, align: 32, offset: 6336)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1215, file: !57, line: 2840, baseType: !939, size: 32, align: 32, offset: 6368)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1215, file: !57, line: 2851, baseType: !1725, size: 64, align: 64, offset: 6400)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 64, align: 64)
!1726 = !DISubroutineType(types: !1727)
!1727 = !{!939, !1579, !1728, !962, !1354, !939, !939}
!1728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1729, size: 64, align: 64)
!1729 = !DISubroutineType(types: !1730)
!1730 = !{!939, !1579, !962}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1215, file: !57, line: 2871, baseType: !1732, size: 64, align: 64, offset: 6464)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 64, align: 64)
!1733 = !DISubroutineType(types: !1734)
!1734 = !{!939, !1579, !1735, !962, !1354, !939}
!1735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 64, align: 64)
!1736 = !DISubroutineType(types: !1737)
!1737 = !{!939, !1579, !962, !939, !939}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1215, file: !57, line: 2878, baseType: !939, size: 32, align: 32, offset: 6528)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1215, file: !57, line: 2885, baseType: !939, size: 32, align: 32, offset: 6560)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1215, file: !57, line: 3005, baseType: !939, size: 32, align: 32, offset: 6592)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1215, file: !57, line: 3013, baseType: !914, size: 32, align: 32, offset: 6624)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1215, file: !57, line: 3020, baseType: !914, size: 32, align: 32, offset: 6656)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1215, file: !57, line: 3027, baseType: !914, size: 32, align: 32, offset: 6688)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1215, file: !57, line: 3037, baseType: !1063, size: 64, align: 64, offset: 6720)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1215, file: !57, line: 3038, baseType: !939, size: 32, align: 32, offset: 6784)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1215, file: !57, line: 3050, baseType: !1096, size: 64, align: 64, offset: 6848)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1215, file: !57, line: 3065, baseType: !939, size: 32, align: 32, offset: 6912)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1215, file: !57, line: 3083, baseType: !939, size: 32, align: 32, offset: 6944)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1215, file: !57, line: 3092, baseType: !980, size: 64, align: 32, offset: 6976)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1215, file: !57, line: 3099, baseType: !516, size: 32, align: 32, offset: 7040)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1215, file: !57, line: 3106, baseType: !980, size: 64, align: 32, offset: 7072)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1215, file: !57, line: 3113, baseType: !1753, size: 64, align: 64, offset: 7168)
!1753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1754, size: 64, align: 64)
!1754 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1755)
!1755 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !57, line: 740, baseType: !1756)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !57, line: 712, size: 384, align: 64, elements: !1757)
!1757 = !{!1758, !1759, !1760, !1761, !1762, !1763, !1766}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1756, file: !57, line: 713, baseType: !56, size: 32, align: 32)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1756, file: !57, line: 714, baseType: !46, size: 32, align: 32, offset: 32)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1756, file: !57, line: 720, baseType: !955, size: 64, align: 64, offset: 64)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1756, file: !57, line: 724, baseType: !955, size: 64, align: 64, offset: 128)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1756, file: !57, line: 728, baseType: !939, size: 32, align: 32, offset: 192)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1756, file: !57, line: 734, baseType: !1764, size: 64, align: 64, offset: 256)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 64, align: 64)
!1765 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !955)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1756, file: !57, line: 739, baseType: !1767, size: 64, align: 64, offset: 320)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 64, align: 64)
!1768 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1251)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1215, file: !57, line: 3129, baseType: !941, size: 64, align: 64, offset: 7232)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1215, file: !57, line: 3130, baseType: !941, size: 64, align: 64, offset: 7296)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1215, file: !57, line: 3131, baseType: !941, size: 64, align: 64, offset: 7360)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1215, file: !57, line: 3132, baseType: !941, size: 64, align: 64, offset: 7424)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1215, file: !57, line: 3139, baseType: !1205, size: 64, align: 64, offset: 7488)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1215, file: !57, line: 3147, baseType: !939, size: 32, align: 32, offset: 7552)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1215, file: !57, line: 3165, baseType: !939, size: 32, align: 32, offset: 7584)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1215, file: !57, line: 3172, baseType: !939, size: 32, align: 32, offset: 7616)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1215, file: !57, line: 3180, baseType: !939, size: 32, align: 32, offset: 7648)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1215, file: !57, line: 3191, baseType: !1616, size: 64, align: 64, offset: 7680)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1215, file: !57, line: 3199, baseType: !1063, size: 64, align: 64, offset: 7744)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1215, file: !57, line: 3207, baseType: !1205, size: 64, align: 64, offset: 7808)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1215, file: !57, line: 3214, baseType: !940, size: 32, align: 32, offset: 7872)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1215, file: !57, line: 3224, baseType: !1341, size: 64, align: 64, offset: 7936)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1215, file: !57, line: 3225, baseType: !939, size: 32, align: 32, offset: 8000)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1215, file: !57, line: 3249, baseType: !1053, size: 64, align: 64, offset: 8064)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1215, file: !57, line: 3256, baseType: !939, size: 32, align: 32, offset: 8128)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1215, file: !57, line: 3271, baseType: !939, size: 32, align: 32, offset: 8160)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1215, file: !57, line: 3279, baseType: !941, size: 64, align: 64, offset: 8192)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1215, file: !57, line: 3301, baseType: !1053, size: 64, align: 64, offset: 8256)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1215, file: !57, line: 3310, baseType: !939, size: 32, align: 32, offset: 8320)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1215, file: !57, line: 3337, baseType: !939, size: 32, align: 32, offset: 8352)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1215, file: !57, line: 3351, baseType: !939, size: 32, align: 32, offset: 8384)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1215, file: !57, line: 3359, baseType: !939, size: 32, align: 32, offset: 8416)
!1793 = !{}
!1794 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1795, size: 512, align: 32, elements: !1113)
!1795 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1796)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1209, file: !1210, line: 1697, size: 64, align: 32, elements: !1797)
!1797 = !{!1798, !1799}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !1796, file: !1210, line: 1698, baseType: !739, size: 32, align: 32)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !1796, file: !1210, line: 1699, baseType: !779, size: 32, align: 32, offset: 32)
!1800 = !{i32 2, !"Dwarf Version", i32 4}
!1801 = !{i32 2, !"Debug Info Version", i32 3}
!1802 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!1803 = distinct !DISubprogram(name: "ff_decode_bsfs_init", scope: !1210, file: !1210, line: 185, type: !1261, isLocal: false, isDefinition: true, scopeLine: 186, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!1804 = !DILocalVariable(name: "avctx", arg: 1, scope: !1803, file: !1210, line: 185, type: !1213)
!1805 = !DIExpression()
!1806 = !DILocation(line: 185, column: 41, scope: !1803)
!1807 = !DILocalVariable(name: "avci", scope: !1803, file: !1210, line: 187, type: !1808)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 64, align: 64)
!1809 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecInternal", file: !1274, line: 221, baseType: !1432)
!1810 = !DILocation(line: 187, column: 22, scope: !1803)
!1811 = !DILocation(line: 187, column: 29, scope: !1803)
!1812 = !DILocation(line: 187, column: 36, scope: !1803)
!1813 = !DILocalVariable(name: "s", scope: !1803, file: !1210, line: 188, type: !1814)
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 64, align: 64)
!1815 = !DILocation(line: 188, column: 26, scope: !1803)
!1816 = !DILocation(line: 188, column: 31, scope: !1803)
!1817 = !DILocation(line: 188, column: 37, scope: !1803)
!1818 = !DILocalVariable(name: "bsfs_str", scope: !1803, file: !1210, line: 189, type: !955)
!1819 = !DILocation(line: 189, column: 17, scope: !1803)
!1820 = !DILocalVariable(name: "ret", scope: !1803, file: !1210, line: 190, type: !939)
!1821 = !DILocation(line: 190, column: 9, scope: !1803)
!1822 = !DILocation(line: 192, column: 9, scope: !1823)
!1823 = distinct !DILexicalBlock(scope: !1803, file: !1210, line: 192, column: 9)
!1824 = !DILocation(line: 192, column: 12, scope: !1823)
!1825 = !DILocation(line: 192, column: 9, scope: !1803)
!1826 = !DILocation(line: 193, column: 9, scope: !1823)
!1827 = !DILocation(line: 195, column: 16, scope: !1803)
!1828 = !DILocation(line: 195, column: 23, scope: !1803)
!1829 = !DILocation(line: 195, column: 30, scope: !1803)
!1830 = !DILocation(line: 195, column: 37, scope: !1831)
!1831 = !DILexicalBlockFile(scope: !1803, file: !1210, discriminator: 1)
!1832 = !DILocation(line: 195, column: 44, scope: !1831)
!1833 = !DILocation(line: 195, column: 51, scope: !1831)
!1834 = !DILocation(line: 195, column: 16, scope: !1831)
!1835 = !DILocation(line: 195, column: 16, scope: !1836)
!1836 = !DILexicalBlockFile(scope: !1803, file: !1210, discriminator: 2)
!1837 = !DILocation(line: 195, column: 16, scope: !1838)
!1838 = !DILexicalBlockFile(scope: !1803, file: !1210, discriminator: 3)
!1839 = !DILocation(line: 195, column: 14, scope: !1838)
!1840 = !DILocation(line: 196, column: 5, scope: !1803)
!1841 = !DILocation(line: 196, column: 12, scope: !1831)
!1842 = !DILocation(line: 196, column: 21, scope: !1831)
!1843 = !DILocation(line: 196, column: 25, scope: !1836)
!1844 = !DILocation(line: 196, column: 24, scope: !1836)
!1845 = !DILocation(line: 196, column: 21, scope: !1836)
!1846 = !DILocation(line: 196, column: 5, scope: !1838)
!1847 = !DILocalVariable(name: "tmp", scope: !1848, file: !1210, line: 197, type: !1465)
!1848 = distinct !DILexicalBlock(scope: !1803, file: !1210, line: 196, column: 35)
!1849 = !DILocation(line: 197, column: 24, scope: !1848)
!1850 = !DILocalVariable(name: "filter", scope: !1848, file: !1210, line: 198, type: !1851)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64, align: 64)
!1852 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1853)
!1853 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBitStreamFilter", file: !57, line: 5830, baseType: !1474)
!1854 = !DILocation(line: 198, column: 34, scope: !1848)
!1855 = !DILocalVariable(name: "bsf", scope: !1848, file: !1210, line: 199, type: !1205)
!1856 = !DILocation(line: 199, column: 15, scope: !1848)
!1857 = !DILocalVariable(name: "bsf_options_str", scope: !1848, file: !1210, line: 199, type: !1205)
!1858 = !DILocation(line: 199, column: 21, scope: !1848)
!1859 = !DILocalVariable(name: "bsf_name", scope: !1848, file: !1210, line: 199, type: !1205)
!1860 = !DILocation(line: 199, column: 39, scope: !1848)
!1861 = !DILocation(line: 201, column: 15, scope: !1848)
!1862 = !DILocation(line: 201, column: 13, scope: !1848)
!1863 = !DILocation(line: 202, column: 14, scope: !1864)
!1864 = distinct !DILexicalBlock(scope: !1848, file: !1210, line: 202, column: 13)
!1865 = !DILocation(line: 202, column: 13, scope: !1848)
!1866 = !DILocation(line: 203, column: 17, scope: !1867)
!1867 = distinct !DILexicalBlock(scope: !1864, file: !1210, line: 202, column: 19)
!1868 = !DILocation(line: 204, column: 13, scope: !1867)
!1869 = !DILocation(line: 206, column: 30, scope: !1848)
!1870 = !DILocation(line: 206, column: 20, scope: !1848)
!1871 = !DILocation(line: 206, column: 18, scope: !1848)
!1872 = !DILocation(line: 207, column: 14, scope: !1873)
!1873 = distinct !DILexicalBlock(scope: !1848, file: !1210, line: 207, column: 13)
!1874 = !DILocation(line: 207, column: 13, scope: !1848)
!1875 = !DILocation(line: 208, column: 22, scope: !1876)
!1876 = distinct !DILexicalBlock(scope: !1873, file: !1210, line: 207, column: 24)
!1877 = !DILocation(line: 208, column: 13, scope: !1876)
!1878 = !DILocation(line: 209, column: 17, scope: !1876)
!1879 = !DILocation(line: 210, column: 13, scope: !1876)
!1880 = !DILocation(line: 213, column: 37, scope: !1848)
!1881 = !DILocation(line: 213, column: 18, scope: !1848)
!1882 = !DILocation(line: 213, column: 16, scope: !1848)
!1883 = !DILocation(line: 214, column: 14, scope: !1884)
!1884 = distinct !DILexicalBlock(scope: !1848, file: !1210, line: 214, column: 13)
!1885 = !DILocation(line: 214, column: 13, scope: !1848)
!1886 = !DILocation(line: 215, column: 20, scope: !1887)
!1887 = distinct !DILexicalBlock(scope: !1884, file: !1210, line: 214, column: 22)
!1888 = !DILocation(line: 217, column: 20, scope: !1887)
!1889 = !DILocation(line: 215, column: 13, scope: !1887)
!1890 = !DILocation(line: 218, column: 22, scope: !1887)
!1891 = !DILocation(line: 218, column: 13, scope: !1887)
!1892 = !DILocation(line: 219, column: 17, scope: !1887)
!1893 = !DILocation(line: 220, column: 13, scope: !1887)
!1894 = !DILocation(line: 223, column: 32, scope: !1848)
!1895 = !DILocation(line: 223, column: 35, scope: !1848)
!1896 = !DILocation(line: 223, column: 41, scope: !1848)
!1897 = !DILocation(line: 223, column: 44, scope: !1848)
!1898 = !DILocation(line: 223, column: 52, scope: !1848)
!1899 = !DILocation(line: 223, column: 15, scope: !1848)
!1900 = !DILocation(line: 223, column: 13, scope: !1848)
!1901 = !DILocation(line: 224, column: 14, scope: !1902)
!1902 = distinct !DILexicalBlock(scope: !1848, file: !1210, line: 224, column: 13)
!1903 = !DILocation(line: 224, column: 13, scope: !1848)
!1904 = !DILocation(line: 225, column: 22, scope: !1905)
!1905 = distinct !DILexicalBlock(scope: !1902, file: !1210, line: 224, column: 19)
!1906 = !DILocation(line: 225, column: 13, scope: !1905)
!1907 = !DILocation(line: 226, column: 17, scope: !1905)
!1908 = !DILocation(line: 227, column: 13, scope: !1905)
!1909 = !DILocation(line: 229, column: 19, scope: !1848)
!1910 = !DILocation(line: 229, column: 9, scope: !1848)
!1911 = !DILocation(line: 229, column: 12, scope: !1848)
!1912 = !DILocation(line: 229, column: 17, scope: !1848)
!1913 = !DILocation(line: 230, column: 9, scope: !1848)
!1914 = !DILocation(line: 230, column: 12, scope: !1848)
!1915 = !DILocation(line: 230, column: 19, scope: !1848)
!1916 = !DILocation(line: 232, column: 28, scope: !1848)
!1917 = !DILocation(line: 232, column: 45, scope: !1848)
!1918 = !DILocation(line: 232, column: 48, scope: !1848)
!1919 = !DILocation(line: 232, column: 56, scope: !1848)
!1920 = !DILocation(line: 232, column: 37, scope: !1848)
!1921 = !DILocation(line: 232, column: 40, scope: !1848)
!1922 = !DILocation(line: 232, column: 15, scope: !1848)
!1923 = !DILocation(line: 232, column: 13, scope: !1848)
!1924 = !DILocation(line: 233, column: 13, scope: !1925)
!1925 = distinct !DILexicalBlock(scope: !1848, file: !1210, line: 233, column: 13)
!1926 = !DILocation(line: 233, column: 17, scope: !1925)
!1927 = !DILocation(line: 233, column: 13, scope: !1848)
!1928 = !DILocation(line: 234, column: 22, scope: !1929)
!1929 = distinct !DILexicalBlock(scope: !1925, file: !1210, line: 233, column: 22)
!1930 = !DILocation(line: 234, column: 13, scope: !1929)
!1931 = !DILocation(line: 235, column: 13, scope: !1929)
!1932 = !DILocation(line: 238, column: 13, scope: !1933)
!1933 = distinct !DILexicalBlock(scope: !1848, file: !1210, line: 238, column: 13)
!1934 = !DILocation(line: 238, column: 16, scope: !1933)
!1935 = !DILocation(line: 238, column: 24, scope: !1933)
!1936 = !DILocation(line: 238, column: 13, scope: !1848)
!1937 = !DILocation(line: 242, column: 21, scope: !1938)
!1938 = distinct !DILexicalBlock(scope: !1933, file: !1210, line: 238, column: 30)
!1939 = !DILocation(line: 242, column: 24, scope: !1938)
!1940 = !DILocation(line: 242, column: 32, scope: !1938)
!1941 = !DILocation(line: 242, column: 13, scope: !1938)
!1942 = !DILocation(line: 242, column: 16, scope: !1938)
!1943 = !DILocation(line: 242, column: 38, scope: !1938)
!1944 = !DILocation(line: 242, column: 65, scope: !1938)
!1945 = !DILocation(line: 242, column: 53, scope: !1938)
!1946 = !DILocation(line: 243, column: 59, scope: !1938)
!1947 = !DILocation(line: 243, column: 62, scope: !1938)
!1948 = !DILocation(line: 243, column: 70, scope: !1938)
!1949 = !DILocation(line: 243, column: 51, scope: !1938)
!1950 = !DILocation(line: 243, column: 54, scope: !1938)
!1951 = !DILocation(line: 243, column: 76, scope: !1938)
!1952 = !DILocation(line: 244, column: 51, scope: !1938)
!1953 = !DILocation(line: 243, column: 19, scope: !1938)
!1954 = !DILocation(line: 243, column: 17, scope: !1938)
!1955 = !DILocation(line: 245, column: 9, scope: !1938)
!1956 = !DILocation(line: 246, column: 21, scope: !1957)
!1957 = distinct !DILexicalBlock(scope: !1933, file: !1210, line: 245, column: 16)
!1958 = !DILocation(line: 246, column: 24, scope: !1957)
!1959 = !DILocation(line: 246, column: 32, scope: !1957)
!1960 = !DILocation(line: 246, column: 13, scope: !1957)
!1961 = !DILocation(line: 246, column: 16, scope: !1957)
!1962 = !DILocation(line: 246, column: 38, scope: !1957)
!1963 = !DILocation(line: 246, column: 61, scope: !1957)
!1964 = !DILocation(line: 246, column: 64, scope: !1957)
!1965 = !DILocation(line: 246, column: 72, scope: !1957)
!1966 = !DILocation(line: 246, column: 53, scope: !1957)
!1967 = !DILocation(line: 246, column: 56, scope: !1957)
!1968 = !DILocation(line: 246, column: 78, scope: !1957)
!1969 = !DILocation(line: 247, column: 51, scope: !1957)
!1970 = !DILocation(line: 247, column: 54, scope: !1957)
!1971 = !DILocation(line: 247, column: 62, scope: !1957)
!1972 = !DILocation(line: 247, column: 43, scope: !1957)
!1973 = !DILocation(line: 247, column: 46, scope: !1957)
!1974 = !DILocation(line: 247, column: 68, scope: !1957)
!1975 = !DILocation(line: 248, column: 51, scope: !1957)
!1976 = !DILocation(line: 248, column: 54, scope: !1957)
!1977 = !DILocation(line: 248, column: 62, scope: !1957)
!1978 = !DILocation(line: 248, column: 43, scope: !1957)
!1979 = !DILocation(line: 248, column: 46, scope: !1957)
!1980 = !DILocation(line: 248, column: 68, scope: !1957)
!1981 = !DILocation(line: 247, column: 19, scope: !1957)
!1982 = !DILocation(line: 247, column: 17, scope: !1957)
!1983 = !DILocation(line: 250, column: 13, scope: !1984)
!1984 = distinct !DILexicalBlock(scope: !1848, file: !1210, line: 250, column: 13)
!1985 = !DILocation(line: 250, column: 17, scope: !1984)
!1986 = !DILocation(line: 250, column: 13, scope: !1848)
!1987 = !DILocation(line: 251, column: 22, scope: !1988)
!1988 = distinct !DILexicalBlock(scope: !1984, file: !1210, line: 250, column: 22)
!1989 = !DILocation(line: 251, column: 13, scope: !1988)
!1990 = !DILocation(line: 252, column: 13, scope: !1988)
!1991 = !DILocation(line: 255, column: 13, scope: !1992)
!1992 = distinct !DILexicalBlock(scope: !1848, file: !1210, line: 255, column: 13)
!1993 = !DILocation(line: 255, column: 29, scope: !1992)
!1994 = !DILocation(line: 255, column: 32, scope: !1995)
!1995 = !DILexicalBlockFile(scope: !1992, file: !1210, discriminator: 1)
!1996 = !DILocation(line: 255, column: 40, scope: !1995)
!1997 = !DILocation(line: 255, column: 13, scope: !1995)
!1998 = !DILocalVariable(name: "opt", scope: !1999, file: !1210, line: 256, type: !2000)
!1999 = distinct !DILexicalBlock(scope: !1992, file: !1210, line: 255, column: 52)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 64, align: 64)
!2001 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2002)
!2002 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOption", file: !4, line: 301, baseType: !966)
!2003 = !DILocation(line: 256, column: 29, scope: !1999)
!2004 = !DILocation(line: 256, column: 55, scope: !1999)
!2005 = !DILocation(line: 256, column: 58, scope: !1999)
!2006 = !DILocation(line: 256, column: 66, scope: !1999)
!2007 = !DILocation(line: 256, column: 47, scope: !1999)
!2008 = !DILocation(line: 256, column: 50, scope: !1999)
!2009 = !DILocation(line: 256, column: 72, scope: !1999)
!2010 = !DILocation(line: 256, column: 35, scope: !1999)
!2011 = !DILocalVariable(name: "shorthand", scope: !1999, file: !1210, line: 257, type: !2012)
!2012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !955, size: 128, align: 64, elements: !2013)
!2013 = !{!2014}
!2014 = !DISubrange(count: 2)
!2015 = !DILocation(line: 257, column: 26, scope: !1999)
!2016 = !DILocation(line: 259, column: 17, scope: !2017)
!2017 = distinct !DILexicalBlock(scope: !1999, file: !1210, line: 259, column: 17)
!2018 = !DILocation(line: 259, column: 17, scope: !1999)
!2019 = !DILocation(line: 260, column: 32, scope: !2017)
!2020 = !DILocation(line: 260, column: 37, scope: !2017)
!2021 = !DILocation(line: 260, column: 17, scope: !2017)
!2022 = !DILocation(line: 260, column: 30, scope: !2017)
!2023 = !DILocation(line: 262, column: 50, scope: !1999)
!2024 = !DILocation(line: 262, column: 53, scope: !1999)
!2025 = !DILocation(line: 262, column: 61, scope: !1999)
!2026 = !DILocation(line: 262, column: 42, scope: !1999)
!2027 = !DILocation(line: 262, column: 45, scope: !1999)
!2028 = !DILocation(line: 262, column: 67, scope: !1999)
!2029 = !DILocation(line: 262, column: 78, scope: !1999)
!2030 = !DILocation(line: 262, column: 95, scope: !1999)
!2031 = !DILocation(line: 262, column: 19, scope: !1999)
!2032 = !DILocation(line: 262, column: 17, scope: !1999)
!2033 = !DILocation(line: 263, column: 17, scope: !2034)
!2034 = distinct !DILexicalBlock(scope: !1999, file: !1210, line: 263, column: 17)
!2035 = !DILocation(line: 263, column: 21, scope: !2034)
!2036 = !DILocation(line: 263, column: 17, scope: !1999)
!2037 = !DILocation(line: 264, column: 21, scope: !2038)
!2038 = distinct !DILexicalBlock(scope: !2039, file: !1210, line: 264, column: 21)
!2039 = distinct !DILexicalBlock(scope: !2034, file: !1210, line: 263, column: 26)
!2040 = !DILocation(line: 264, column: 25, scope: !2038)
!2041 = !DILocation(line: 264, column: 21, scope: !2039)
!2042 = !DILocation(line: 265, column: 28, scope: !2043)
!2043 = distinct !DILexicalBlock(scope: !2038, file: !1210, line: 264, column: 31)
!2044 = !DILocation(line: 267, column: 28, scope: !2043)
!2045 = !DILocation(line: 265, column: 21, scope: !2043)
!2046 = !DILocation(line: 268, column: 25, scope: !2043)
!2047 = !DILocation(line: 269, column: 17, scope: !2043)
!2048 = !DILocation(line: 270, column: 26, scope: !2039)
!2049 = !DILocation(line: 270, column: 17, scope: !2039)
!2050 = !DILocation(line: 271, column: 17, scope: !2039)
!2051 = !DILocation(line: 273, column: 9, scope: !1999)
!2052 = !DILocation(line: 274, column: 18, scope: !1848)
!2053 = !DILocation(line: 274, column: 9, scope: !1848)
!2054 = !DILocation(line: 276, column: 35, scope: !1848)
!2055 = !DILocation(line: 276, column: 38, scope: !1848)
!2056 = !DILocation(line: 276, column: 46, scope: !1848)
!2057 = !DILocation(line: 276, column: 27, scope: !1848)
!2058 = !DILocation(line: 276, column: 30, scope: !1848)
!2059 = !DILocation(line: 276, column: 15, scope: !1848)
!2060 = !DILocation(line: 276, column: 13, scope: !1848)
!2061 = !DILocation(line: 277, column: 13, scope: !2062)
!2062 = distinct !DILexicalBlock(scope: !1848, file: !1210, line: 277, column: 13)
!2063 = !DILocation(line: 277, column: 17, scope: !2062)
!2064 = !DILocation(line: 277, column: 13, scope: !1848)
!2065 = !DILocation(line: 278, column: 13, scope: !2062)
!2066 = !DILocation(line: 280, column: 14, scope: !2067)
!2067 = distinct !DILexicalBlock(scope: !1848, file: !1210, line: 280, column: 13)
!2068 = !DILocation(line: 280, column: 13, scope: !2067)
!2069 = !DILocation(line: 280, column: 13, scope: !1848)
!2070 = !DILocation(line: 281, column: 21, scope: !2067)
!2071 = !DILocation(line: 281, column: 13, scope: !2067)
!2072 = !DILocation(line: 196, column: 5, scope: !2073)
!2073 = !DILexicalBlockFile(scope: !1803, file: !1210, discriminator: 4)
!2074 = distinct !{!2074, !1840}
!2075 = !DILocation(line: 284, column: 5, scope: !1803)
!2076 = !DILocation(line: 286, column: 27, scope: !1803)
!2077 = !DILocation(line: 286, column: 5, scope: !1803)
!2078 = !DILocation(line: 287, column: 12, scope: !1803)
!2079 = !DILocation(line: 287, column: 5, scope: !1803)
!2080 = !DILocation(line: 288, column: 1, scope: !1803)
!2081 = distinct !DISubprogram(name: "ff_decode_bsfs_uninit", scope: !1210, file: !1210, line: 2008, type: !1372, isLocal: false, isDefinition: true, scopeLine: 2009, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!2082 = !DILocalVariable(name: "avctx", arg: 1, scope: !2081, file: !1210, line: 2008, type: !1213)
!2083 = !DILocation(line: 2008, column: 44, scope: !2081)
!2084 = !DILocalVariable(name: "s", scope: !2081, file: !1210, line: 2010, type: !1814)
!2085 = !DILocation(line: 2010, column: 26, scope: !2081)
!2086 = !DILocation(line: 2010, column: 31, scope: !2081)
!2087 = !DILocation(line: 2010, column: 38, scope: !2081)
!2088 = !DILocation(line: 2010, column: 48, scope: !2081)
!2089 = !DILocalVariable(name: "i", scope: !2081, file: !1210, line: 2011, type: !939)
!2090 = !DILocation(line: 2011, column: 9, scope: !2081)
!2091 = !DILocation(line: 2013, column: 12, scope: !2092)
!2092 = distinct !DILexicalBlock(scope: !2081, file: !1210, line: 2013, column: 5)
!2093 = !DILocation(line: 2013, column: 10, scope: !2092)
!2094 = !DILocation(line: 2013, column: 17, scope: !2095)
!2095 = !DILexicalBlockFile(scope: !2096, file: !1210, discriminator: 1)
!2096 = distinct !DILexicalBlock(scope: !2092, file: !1210, line: 2013, column: 5)
!2097 = !DILocation(line: 2013, column: 21, scope: !2095)
!2098 = !DILocation(line: 2013, column: 24, scope: !2095)
!2099 = !DILocation(line: 2013, column: 19, scope: !2095)
!2100 = !DILocation(line: 2013, column: 5, scope: !2095)
!2101 = !DILocation(line: 2014, column: 30, scope: !2096)
!2102 = !DILocation(line: 2014, column: 22, scope: !2096)
!2103 = !DILocation(line: 2014, column: 25, scope: !2096)
!2104 = !DILocation(line: 2014, column: 9, scope: !2096)
!2105 = !DILocation(line: 2013, column: 34, scope: !2106)
!2106 = !DILexicalBlockFile(scope: !2096, file: !1210, discriminator: 2)
!2107 = !DILocation(line: 2013, column: 5, scope: !2106)
!2108 = distinct !{!2108, !2109}
!2109 = !DILocation(line: 2013, column: 5, scope: !2081)
!2110 = !DILocation(line: 2015, column: 15, scope: !2081)
!2111 = !DILocation(line: 2015, column: 18, scope: !2081)
!2112 = !DILocation(line: 2015, column: 14, scope: !2081)
!2113 = !DILocation(line: 2015, column: 5, scope: !2081)
!2114 = !DILocation(line: 2016, column: 5, scope: !2081)
!2115 = !DILocation(line: 2016, column: 8, scope: !2081)
!2116 = !DILocation(line: 2016, column: 16, scope: !2081)
!2117 = !DILocation(line: 2017, column: 1, scope: !2081)
!2118 = distinct !DISubprogram(name: "ff_decode_get_packet", scope: !1210, file: !1210, line: 329, type: !1366, isLocal: false, isDefinition: true, scopeLine: 330, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!2119 = !DILocalVariable(name: "avctx", arg: 1, scope: !2118, file: !1210, line: 329, type: !1213)
!2120 = !DILocation(line: 329, column: 42, scope: !2118)
!2121 = !DILocalVariable(name: "pkt", arg: 2, scope: !2118, file: !1210, line: 329, type: !1329)
!2122 = !DILocation(line: 329, column: 59, scope: !2118)
!2123 = !DILocalVariable(name: "avci", scope: !2118, file: !1210, line: 331, type: !1808)
!2124 = !DILocation(line: 331, column: 22, scope: !2118)
!2125 = !DILocation(line: 331, column: 29, scope: !2118)
!2126 = !DILocation(line: 331, column: 36, scope: !2118)
!2127 = !DILocalVariable(name: "ret", scope: !2118, file: !1210, line: 332, type: !939)
!2128 = !DILocation(line: 332, column: 9, scope: !2118)
!2129 = !DILocation(line: 334, column: 9, scope: !2130)
!2130 = distinct !DILexicalBlock(scope: !2118, file: !1210, line: 334, column: 9)
!2131 = !DILocation(line: 334, column: 15, scope: !2130)
!2132 = !DILocation(line: 334, column: 9, scope: !2118)
!2133 = !DILocation(line: 335, column: 9, scope: !2130)
!2134 = !DILocation(line: 337, column: 21, scope: !2118)
!2135 = !DILocation(line: 337, column: 28, scope: !2118)
!2136 = !DILocation(line: 337, column: 11, scope: !2118)
!2137 = !DILocation(line: 337, column: 9, scope: !2118)
!2138 = !DILocation(line: 338, column: 9, scope: !2139)
!2139 = distinct !DILexicalBlock(scope: !2118, file: !1210, line: 338, column: 9)
!2140 = !DILocation(line: 338, column: 13, scope: !2139)
!2141 = !DILocation(line: 338, column: 9, scope: !2118)
!2142 = !DILocation(line: 339, column: 9, scope: !2139)
!2143 = !DILocation(line: 339, column: 15, scope: !2139)
!2144 = !DILocation(line: 339, column: 24, scope: !2139)
!2145 = !DILocation(line: 340, column: 9, scope: !2146)
!2146 = distinct !DILexicalBlock(scope: !2118, file: !1210, line: 340, column: 9)
!2147 = !DILocation(line: 340, column: 13, scope: !2146)
!2148 = !DILocation(line: 340, column: 9, scope: !2118)
!2149 = !DILocation(line: 341, column: 16, scope: !2146)
!2150 = !DILocation(line: 341, column: 9, scope: !2146)
!2151 = !DILocation(line: 343, column: 32, scope: !2118)
!2152 = !DILocation(line: 343, column: 39, scope: !2118)
!2153 = !DILocation(line: 343, column: 49, scope: !2118)
!2154 = !DILocation(line: 343, column: 11, scope: !2118)
!2155 = !DILocation(line: 343, column: 9, scope: !2118)
!2156 = !DILocation(line: 344, column: 9, scope: !2157)
!2157 = distinct !DILexicalBlock(scope: !2118, file: !1210, line: 344, column: 9)
!2158 = !DILocation(line: 344, column: 13, scope: !2157)
!2159 = !DILocation(line: 344, column: 9, scope: !2118)
!2160 = !DILocation(line: 345, column: 9, scope: !2157)
!2161 = !DILocation(line: 347, column: 30, scope: !2118)
!2162 = !DILocation(line: 347, column: 37, scope: !2118)
!2163 = !DILocation(line: 347, column: 11, scope: !2118)
!2164 = !DILocation(line: 347, column: 9, scope: !2118)
!2165 = !DILocation(line: 348, column: 9, scope: !2166)
!2166 = distinct !DILexicalBlock(scope: !2118, file: !1210, line: 348, column: 9)
!2167 = !DILocation(line: 348, column: 13, scope: !2166)
!2168 = !DILocation(line: 348, column: 9, scope: !2118)
!2169 = !DILocation(line: 349, column: 9, scope: !2166)
!2170 = !DILocation(line: 351, column: 9, scope: !2171)
!2171 = distinct !DILexicalBlock(scope: !2118, file: !1210, line: 351, column: 9)
!2172 = !DILocation(line: 351, column: 16, scope: !2171)
!2173 = !DILocation(line: 351, column: 23, scope: !2171)
!2174 = !DILocation(line: 351, column: 9, scope: !2118)
!2175 = !DILocation(line: 352, column: 41, scope: !2171)
!2176 = !DILocation(line: 352, column: 46, scope: !2171)
!2177 = !DILocation(line: 352, column: 9, scope: !2171)
!2178 = !DILocation(line: 352, column: 15, scope: !2171)
!2179 = !DILocation(line: 352, column: 38, scope: !2171)
!2180 = !DILocation(line: 354, column: 5, scope: !2118)
!2181 = !DILocation(line: 356, column: 21, scope: !2118)
!2182 = !DILocation(line: 356, column: 5, scope: !2118)
!2183 = !DILocation(line: 357, column: 12, scope: !2118)
!2184 = !DILocation(line: 357, column: 5, scope: !2118)
!2185 = !DILocation(line: 358, column: 1, scope: !2118)
!2186 = distinct !DISubprogram(name: "bsfs_poll", scope: !1210, file: !1210, line: 291, type: !1366, isLocal: true, isDefinition: true, scopeLine: 292, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!2187 = !DILocalVariable(name: "avctx", arg: 1, scope: !2186, file: !1210, line: 291, type: !1213)
!2188 = !DILocation(line: 291, column: 38, scope: !2186)
!2189 = !DILocalVariable(name: "pkt", arg: 2, scope: !2186, file: !1210, line: 291, type: !1329)
!2190 = !DILocation(line: 291, column: 55, scope: !2186)
!2191 = !DILocalVariable(name: "s", scope: !2186, file: !1210, line: 293, type: !1814)
!2192 = !DILocation(line: 293, column: 26, scope: !2186)
!2193 = !DILocation(line: 293, column: 31, scope: !2186)
!2194 = !DILocation(line: 293, column: 38, scope: !2186)
!2195 = !DILocation(line: 293, column: 48, scope: !2186)
!2196 = !DILocalVariable(name: "idx", scope: !2186, file: !1210, line: 294, type: !939)
!2197 = !DILocation(line: 294, column: 9, scope: !2186)
!2198 = !DILocalVariable(name: "ret", scope: !2186, file: !1210, line: 294, type: !939)
!2199 = !DILocation(line: 294, column: 14, scope: !2186)
!2200 = !DILocation(line: 297, column: 11, scope: !2186)
!2201 = !DILocation(line: 297, column: 14, scope: !2186)
!2202 = !DILocation(line: 297, column: 22, scope: !2186)
!2203 = !DILocation(line: 297, column: 9, scope: !2186)
!2204 = !DILocation(line: 298, column: 5, scope: !2186)
!2205 = !DILocation(line: 298, column: 12, scope: !2206)
!2206 = !DILexicalBlockFile(scope: !2186, file: !1210, discriminator: 1)
!2207 = !DILocation(line: 298, column: 16, scope: !2206)
!2208 = !DILocation(line: 298, column: 5, scope: !2206)
!2209 = !DILocation(line: 300, column: 45, scope: !2210)
!2210 = distinct !DILexicalBlock(scope: !2186, file: !1210, line: 298, column: 22)
!2211 = !DILocation(line: 300, column: 37, scope: !2210)
!2212 = !DILocation(line: 300, column: 40, scope: !2210)
!2213 = !DILocation(line: 300, column: 51, scope: !2210)
!2214 = !DILocation(line: 300, column: 15, scope: !2210)
!2215 = !DILocation(line: 300, column: 13, scope: !2210)
!2216 = !DILocation(line: 301, column: 13, scope: !2217)
!2217 = distinct !DILexicalBlock(scope: !2210, file: !1210, line: 301, column: 13)
!2218 = !DILocation(line: 301, column: 17, scope: !2217)
!2219 = !DILocation(line: 301, column: 13, scope: !2210)
!2220 = !DILocation(line: 303, column: 17, scope: !2221)
!2221 = distinct !DILexicalBlock(scope: !2217, file: !1210, line: 301, column: 23)
!2222 = !DILocation(line: 304, column: 16, scope: !2221)
!2223 = !DILocation(line: 305, column: 13, scope: !2221)
!2224 = distinct !{!2224, !2204}
!2225 = !DILocation(line: 306, column: 20, scope: !2226)
!2226 = distinct !DILexicalBlock(scope: !2217, file: !1210, line: 306, column: 20)
!2227 = !DILocation(line: 306, column: 24, scope: !2226)
!2228 = !DILocation(line: 306, column: 28, scope: !2226)
!2229 = !DILocation(line: 306, column: 31, scope: !2230)
!2230 = !DILexicalBlockFile(scope: !2226, file: !1210, discriminator: 1)
!2231 = !DILocation(line: 306, column: 35, scope: !2230)
!2232 = !DILocation(line: 306, column: 20, scope: !2230)
!2233 = !DILocation(line: 307, column: 20, scope: !2234)
!2234 = distinct !DILexicalBlock(scope: !2226, file: !1210, line: 306, column: 112)
!2235 = !DILocation(line: 307, column: 13, scope: !2234)
!2236 = !DILocation(line: 312, column: 13, scope: !2237)
!2237 = distinct !DILexicalBlock(scope: !2210, file: !1210, line: 312, column: 13)
!2238 = !DILocation(line: 312, column: 20, scope: !2237)
!2239 = !DILocation(line: 312, column: 23, scope: !2237)
!2240 = !DILocation(line: 312, column: 31, scope: !2237)
!2241 = !DILocation(line: 312, column: 17, scope: !2237)
!2242 = !DILocation(line: 312, column: 13, scope: !2210)
!2243 = !DILocation(line: 313, column: 20, scope: !2244)
!2244 = distinct !DILexicalBlock(scope: !2237, file: !1210, line: 312, column: 36)
!2245 = !DILocation(line: 313, column: 13, scope: !2244)
!2246 = !DILocation(line: 315, column: 16, scope: !2247)
!2247 = distinct !DILexicalBlock(scope: !2237, file: !1210, line: 314, column: 16)
!2248 = !DILocation(line: 316, column: 46, scope: !2247)
!2249 = !DILocation(line: 316, column: 38, scope: !2247)
!2250 = !DILocation(line: 316, column: 41, scope: !2247)
!2251 = !DILocation(line: 316, column: 52, scope: !2247)
!2252 = !DILocation(line: 316, column: 56, scope: !2247)
!2253 = !DILocation(line: 316, column: 52, scope: !2254)
!2254 = !DILexicalBlockFile(scope: !2247, file: !1210, discriminator: 1)
!2255 = !DILocation(line: 316, column: 68, scope: !2256)
!2256 = !DILexicalBlockFile(scope: !2247, file: !1210, discriminator: 2)
!2257 = !DILocation(line: 316, column: 52, scope: !2256)
!2258 = !DILocation(line: 316, column: 52, scope: !2259)
!2259 = !DILexicalBlockFile(scope: !2247, file: !1210, discriminator: 3)
!2260 = !DILocation(line: 316, column: 19, scope: !2259)
!2261 = !DILocation(line: 316, column: 17, scope: !2259)
!2262 = !DILocation(line: 317, column: 17, scope: !2263)
!2263 = distinct !DILexicalBlock(scope: !2247, file: !1210, line: 317, column: 17)
!2264 = !DILocation(line: 317, column: 21, scope: !2263)
!2265 = !DILocation(line: 317, column: 17, scope: !2247)
!2266 = !DILocation(line: 318, column: 24, scope: !2267)
!2267 = distinct !DILexicalBlock(scope: !2263, file: !1210, line: 317, column: 26)
!2268 = !DILocation(line: 318, column: 17, scope: !2267)
!2269 = !DILocation(line: 320, column: 33, scope: !2267)
!2270 = !DILocation(line: 320, column: 17, scope: !2267)
!2271 = !DILocation(line: 321, column: 24, scope: !2267)
!2272 = !DILocation(line: 321, column: 17, scope: !2267)
!2273 = !DILocation(line: 298, column: 5, scope: !2274)
!2274 = !DILexicalBlockFile(scope: !2186, file: !1210, discriminator: 2)
!2275 = !DILocation(line: 326, column: 5, scope: !2186)
!2276 = !DILocation(line: 327, column: 1, scope: !2186)
!2277 = distinct !DISubprogram(name: "extract_packet_props", scope: !1210, file: !1210, line: 126, type: !2278, isLocal: true, isDefinition: true, scopeLine: 127, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!2278 = !DISubroutineType(types: !2279)
!2279 = !{!939, !1808, !2280}
!2280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2281, size: 64, align: 64)
!2281 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1330)
!2282 = !DILocalVariable(name: "avci", arg: 1, scope: !2277, file: !1210, line: 126, type: !1808)
!2283 = !DILocation(line: 126, column: 50, scope: !2277)
!2284 = !DILocalVariable(name: "pkt", arg: 2, scope: !2277, file: !1210, line: 126, type: !2280)
!2285 = !DILocation(line: 126, column: 72, scope: !2277)
!2286 = !DILocalVariable(name: "ret", scope: !2277, file: !1210, line: 128, type: !939)
!2287 = !DILocation(line: 128, column: 9, scope: !2277)
!2288 = !DILocation(line: 130, column: 21, scope: !2277)
!2289 = !DILocation(line: 130, column: 27, scope: !2277)
!2290 = !DILocation(line: 130, column: 5, scope: !2277)
!2291 = !DILocation(line: 131, column: 9, scope: !2292)
!2292 = distinct !DILexicalBlock(scope: !2277, file: !1210, line: 131, column: 9)
!2293 = !DILocation(line: 131, column: 9, scope: !2277)
!2294 = !DILocation(line: 132, column: 36, scope: !2295)
!2295 = distinct !DILexicalBlock(scope: !2292, file: !1210, line: 131, column: 14)
!2296 = !DILocation(line: 132, column: 42, scope: !2295)
!2297 = !DILocation(line: 132, column: 58, scope: !2295)
!2298 = !DILocation(line: 132, column: 15, scope: !2295)
!2299 = !DILocation(line: 132, column: 13, scope: !2295)
!2300 = !DILocation(line: 133, column: 14, scope: !2301)
!2301 = distinct !DILexicalBlock(scope: !2295, file: !1210, line: 133, column: 13)
!2302 = !DILocation(line: 133, column: 13, scope: !2295)
!2303 = !DILocation(line: 134, column: 42, scope: !2301)
!2304 = !DILocation(line: 134, column: 47, scope: !2301)
!2305 = !DILocation(line: 134, column: 13, scope: !2301)
!2306 = !DILocation(line: 134, column: 19, scope: !2301)
!2307 = !DILocation(line: 134, column: 35, scope: !2301)
!2308 = !DILocation(line: 134, column: 40, scope: !2301)
!2309 = !DILocation(line: 135, column: 5, scope: !2295)
!2310 = !DILocation(line: 136, column: 12, scope: !2277)
!2311 = !DILocation(line: 136, column: 5, scope: !2277)
!2312 = distinct !DISubprogram(name: "apply_param_change", scope: !1210, file: !1210, line: 48, type: !2313, isLocal: true, isDefinition: true, scopeLine: 49, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!2313 = !DISubroutineType(types: !2314)
!2314 = !{!939, !1213, !2280}
!2315 = !DILocalVariable(name: "b", arg: 1, scope: !2316, file: !2317, line: 88, type: !2320)
!2316 = distinct !DISubprogram(name: "bytestream_get_le32", scope: !2317, file: !2317, line: 88, type: !2318, isLocal: true, isDefinition: true, scopeLine: 88, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!2317 = !DIFile(filename: "libavcodec/bytestream.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2318 = !DISubroutineType(types: !2319)
!2319 = !{!940, !2320}
!2320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 64, align: 64)
!2321 = !DILocation(line: 88, column: 95, scope: !2316, inlinedAt: !2322)
!2322 = distinct !DILocation(line: 75, column: 15, scope: !2323)
!2323 = distinct !DILexicalBlock(scope: !2324, file: !1210, line: 72, column: 58)
!2324 = distinct !DILexicalBlock(scope: !2312, file: !1210, line: 72, column: 9)
!2325 = !DILocalVariable(name: "b", arg: 1, scope: !2326, file: !2317, line: 87, type: !2320)
!2326 = distinct !DISubprogram(name: "bytestream_get_le64", scope: !2317, file: !2317, line: 87, type: !2327, isLocal: true, isDefinition: true, scopeLine: 87, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!2327 = !DISubroutineType(types: !2328)
!2328 = !{!1096, !2320}
!2329 = !DILocation(line: 87, column: 91, scope: !2326, inlinedAt: !2330)
!2330 = distinct !DILocation(line: 87, column: 33, scope: !2331)
!2331 = distinct !DILexicalBlock(scope: !2332, file: !1210, line: 84, column: 59)
!2332 = distinct !DILexicalBlock(scope: !2312, file: !1210, line: 84, column: 9)
!2333 = !DILocation(line: 88, column: 95, scope: !2316, inlinedAt: !2334)
!2334 = distinct !DILocation(line: 93, column: 15, scope: !2335)
!2335 = distinct !DILexicalBlock(scope: !2336, file: !1210, line: 90, column: 56)
!2336 = distinct !DILexicalBlock(scope: !2312, file: !1210, line: 90, column: 9)
!2337 = !DILocation(line: 88, column: 95, scope: !2316, inlinedAt: !2338)
!2338 = distinct !DILocation(line: 105, column: 24, scope: !2339)
!2339 = distinct !DILexicalBlock(scope: !2340, file: !1210, line: 102, column: 55)
!2340 = distinct !DILexicalBlock(scope: !2312, file: !1210, line: 102, column: 9)
!2341 = !DILocation(line: 88, column: 95, scope: !2316, inlinedAt: !2342)
!2342 = distinct !DILocation(line: 106, column: 25, scope: !2339)
!2343 = !DILocation(line: 88, column: 95, scope: !2316, inlinedAt: !2344)
!2344 = distinct !DILocation(line: 69, column: 13, scope: !2312)
!2345 = !DILocalVariable(name: "avctx", arg: 1, scope: !2312, file: !1210, line: 48, type: !1213)
!2346 = !DILocation(line: 48, column: 47, scope: !2312)
!2347 = !DILocalVariable(name: "avpkt", arg: 2, scope: !2312, file: !1210, line: 48, type: !2280)
!2348 = !DILocation(line: 48, column: 70, scope: !2312)
!2349 = !DILocalVariable(name: "size", scope: !2312, file: !1210, line: 50, type: !939)
!2350 = !DILocation(line: 50, column: 9, scope: !2312)
!2351 = !DILocalVariable(name: "ret", scope: !2312, file: !1210, line: 50, type: !939)
!2352 = !DILocation(line: 50, column: 19, scope: !2312)
!2353 = !DILocalVariable(name: "data", scope: !2312, file: !1210, line: 51, type: !1199)
!2354 = !DILocation(line: 51, column: 20, scope: !2312)
!2355 = !DILocalVariable(name: "flags", scope: !2312, file: !1210, line: 52, type: !1090)
!2356 = !DILocation(line: 52, column: 14, scope: !2312)
!2357 = !DILocalVariable(name: "val", scope: !2312, file: !1210, line: 53, type: !941)
!2358 = !DILocation(line: 53, column: 13, scope: !2312)
!2359 = !DILocation(line: 55, column: 36, scope: !2312)
!2360 = !DILocation(line: 55, column: 12, scope: !2312)
!2361 = !DILocation(line: 55, column: 10, scope: !2312)
!2362 = !DILocation(line: 56, column: 10, scope: !2363)
!2363 = distinct !DILexicalBlock(scope: !2312, file: !1210, line: 56, column: 9)
!2364 = !DILocation(line: 56, column: 9, scope: !2312)
!2365 = !DILocation(line: 57, column: 9, scope: !2363)
!2366 = !DILocation(line: 59, column: 11, scope: !2367)
!2367 = distinct !DILexicalBlock(scope: !2312, file: !1210, line: 59, column: 9)
!2368 = !DILocation(line: 59, column: 18, scope: !2367)
!2369 = !DILocation(line: 59, column: 25, scope: !2367)
!2370 = !DILocation(line: 59, column: 38, scope: !2367)
!2371 = !DILocation(line: 59, column: 9, scope: !2312)
!2372 = !DILocation(line: 60, column: 16, scope: !2373)
!2373 = distinct !DILexicalBlock(scope: !2367, file: !1210, line: 59, column: 52)
!2374 = !DILocation(line: 60, column: 9, scope: !2373)
!2375 = !DILocation(line: 62, column: 13, scope: !2373)
!2376 = !DILocation(line: 63, column: 9, scope: !2373)
!2377 = !DILocation(line: 66, column: 9, scope: !2378)
!2378 = distinct !DILexicalBlock(scope: !2312, file: !1210, line: 66, column: 9)
!2379 = !DILocation(line: 66, column: 14, scope: !2378)
!2380 = !DILocation(line: 66, column: 9, scope: !2312)
!2381 = !DILocation(line: 67, column: 9, scope: !2378)
!2382 = !DILocation(line: 69, column: 13, scope: !2312)
!2383 = !DILocation(line: 88, column: 102, scope: !2316, inlinedAt: !2344)
!2384 = !DILocation(line: 88, column: 105, scope: !2316, inlinedAt: !2344)
!2385 = !DILocation(line: 88, column: 151, scope: !2316, inlinedAt: !2344)
!2386 = !DILocation(line: 88, column: 150, scope: !2316, inlinedAt: !2344)
!2387 = !DILocation(line: 88, column: 153, scope: !2316, inlinedAt: !2344)
!2388 = !DILocation(line: 88, column: 160, scope: !2316, inlinedAt: !2344)
!2389 = !DILocation(line: 69, column: 11, scope: !2312)
!2390 = !DILocation(line: 70, column: 10, scope: !2312)
!2391 = !DILocation(line: 72, column: 9, scope: !2324)
!2392 = !DILocation(line: 72, column: 15, scope: !2324)
!2393 = !DILocation(line: 72, column: 9, scope: !2312)
!2394 = !DILocation(line: 73, column: 13, scope: !2395)
!2395 = distinct !DILexicalBlock(scope: !2323, file: !1210, line: 73, column: 13)
!2396 = !DILocation(line: 73, column: 18, scope: !2395)
!2397 = !DILocation(line: 73, column: 13, scope: !2323)
!2398 = !DILocation(line: 74, column: 13, scope: !2395)
!2399 = !DILocation(line: 75, column: 15, scope: !2323)
!2400 = !DILocation(line: 88, column: 102, scope: !2316, inlinedAt: !2322)
!2401 = !DILocation(line: 88, column: 105, scope: !2316, inlinedAt: !2322)
!2402 = !DILocation(line: 88, column: 151, scope: !2316, inlinedAt: !2322)
!2403 = !DILocation(line: 88, column: 150, scope: !2316, inlinedAt: !2322)
!2404 = !DILocation(line: 88, column: 153, scope: !2316, inlinedAt: !2322)
!2405 = !DILocation(line: 88, column: 160, scope: !2316, inlinedAt: !2322)
!2406 = !DILocation(line: 75, column: 13, scope: !2323)
!2407 = !DILocation(line: 76, column: 13, scope: !2408)
!2408 = distinct !DILexicalBlock(scope: !2323, file: !1210, line: 76, column: 13)
!2409 = !DILocation(line: 76, column: 17, scope: !2408)
!2410 = !DILocation(line: 76, column: 22, scope: !2408)
!2411 = !DILocation(line: 76, column: 25, scope: !2412)
!2412 = !DILexicalBlockFile(scope: !2408, file: !1210, discriminator: 1)
!2413 = !DILocation(line: 76, column: 29, scope: !2412)
!2414 = !DILocation(line: 76, column: 13, scope: !2412)
!2415 = !DILocation(line: 77, column: 20, scope: !2416)
!2416 = distinct !DILexicalBlock(scope: !2408, file: !1210, line: 76, column: 43)
!2417 = !DILocation(line: 77, column: 13, scope: !2416)
!2418 = !DILocation(line: 78, column: 17, scope: !2416)
!2419 = !DILocation(line: 79, column: 13, scope: !2416)
!2420 = !DILocation(line: 81, column: 27, scope: !2323)
!2421 = !DILocation(line: 81, column: 9, scope: !2323)
!2422 = !DILocation(line: 81, column: 16, scope: !2323)
!2423 = !DILocation(line: 81, column: 25, scope: !2323)
!2424 = !DILocation(line: 82, column: 14, scope: !2323)
!2425 = !DILocation(line: 83, column: 5, scope: !2323)
!2426 = !DILocation(line: 84, column: 9, scope: !2332)
!2427 = !DILocation(line: 84, column: 15, scope: !2332)
!2428 = !DILocation(line: 84, column: 9, scope: !2312)
!2429 = !DILocation(line: 85, column: 13, scope: !2430)
!2430 = distinct !DILexicalBlock(scope: !2331, file: !1210, line: 85, column: 13)
!2431 = !DILocation(line: 85, column: 18, scope: !2430)
!2432 = !DILocation(line: 85, column: 13, scope: !2331)
!2433 = !DILocation(line: 86, column: 13, scope: !2430)
!2434 = !DILocation(line: 87, column: 33, scope: !2331)
!2435 = !DILocation(line: 87, column: 98, scope: !2326, inlinedAt: !2330)
!2436 = !DILocation(line: 87, column: 101, scope: !2326, inlinedAt: !2330)
!2437 = !DILocation(line: 87, column: 147, scope: !2326, inlinedAt: !2330)
!2438 = !DILocation(line: 87, column: 146, scope: !2326, inlinedAt: !2330)
!2439 = !DILocation(line: 87, column: 149, scope: !2326, inlinedAt: !2330)
!2440 = !DILocation(line: 87, column: 156, scope: !2326, inlinedAt: !2330)
!2441 = !DILocation(line: 87, column: 9, scope: !2331)
!2442 = !DILocation(line: 87, column: 16, scope: !2331)
!2443 = !DILocation(line: 87, column: 31, scope: !2331)
!2444 = !DILocation(line: 88, column: 14, scope: !2331)
!2445 = !DILocation(line: 89, column: 5, scope: !2331)
!2446 = !DILocation(line: 90, column: 9, scope: !2336)
!2447 = !DILocation(line: 90, column: 15, scope: !2336)
!2448 = !DILocation(line: 90, column: 9, scope: !2312)
!2449 = !DILocation(line: 91, column: 13, scope: !2450)
!2450 = distinct !DILexicalBlock(scope: !2335, file: !1210, line: 91, column: 13)
!2451 = !DILocation(line: 91, column: 18, scope: !2450)
!2452 = !DILocation(line: 91, column: 13, scope: !2335)
!2453 = !DILocation(line: 92, column: 13, scope: !2450)
!2454 = !DILocation(line: 93, column: 15, scope: !2335)
!2455 = !DILocation(line: 88, column: 102, scope: !2316, inlinedAt: !2334)
!2456 = !DILocation(line: 88, column: 105, scope: !2316, inlinedAt: !2334)
!2457 = !DILocation(line: 88, column: 151, scope: !2316, inlinedAt: !2334)
!2458 = !DILocation(line: 88, column: 150, scope: !2316, inlinedAt: !2334)
!2459 = !DILocation(line: 88, column: 153, scope: !2316, inlinedAt: !2334)
!2460 = !DILocation(line: 88, column: 160, scope: !2316, inlinedAt: !2334)
!2461 = !DILocation(line: 93, column: 13, scope: !2335)
!2462 = !DILocation(line: 94, column: 13, scope: !2463)
!2463 = distinct !DILexicalBlock(scope: !2335, file: !1210, line: 94, column: 13)
!2464 = !DILocation(line: 94, column: 17, scope: !2463)
!2465 = !DILocation(line: 94, column: 22, scope: !2463)
!2466 = !DILocation(line: 94, column: 25, scope: !2467)
!2467 = !DILexicalBlockFile(scope: !2463, file: !1210, discriminator: 1)
!2468 = !DILocation(line: 94, column: 29, scope: !2467)
!2469 = !DILocation(line: 94, column: 13, scope: !2467)
!2470 = !DILocation(line: 95, column: 20, scope: !2471)
!2471 = distinct !DILexicalBlock(scope: !2463, file: !1210, line: 94, column: 43)
!2472 = !DILocation(line: 95, column: 13, scope: !2471)
!2473 = !DILocation(line: 96, column: 17, scope: !2471)
!2474 = !DILocation(line: 97, column: 13, scope: !2471)
!2475 = !DILocation(line: 99, column: 30, scope: !2335)
!2476 = !DILocation(line: 99, column: 9, scope: !2335)
!2477 = !DILocation(line: 99, column: 16, scope: !2335)
!2478 = !DILocation(line: 99, column: 28, scope: !2335)
!2479 = !DILocation(line: 100, column: 14, scope: !2335)
!2480 = !DILocation(line: 101, column: 5, scope: !2335)
!2481 = !DILocation(line: 102, column: 9, scope: !2340)
!2482 = !DILocation(line: 102, column: 15, scope: !2340)
!2483 = !DILocation(line: 102, column: 9, scope: !2312)
!2484 = !DILocation(line: 103, column: 13, scope: !2485)
!2485 = distinct !DILexicalBlock(scope: !2339, file: !1210, line: 103, column: 13)
!2486 = !DILocation(line: 103, column: 18, scope: !2485)
!2487 = !DILocation(line: 103, column: 13, scope: !2339)
!2488 = !DILocation(line: 104, column: 13, scope: !2485)
!2489 = !DILocation(line: 105, column: 24, scope: !2339)
!2490 = !DILocation(line: 88, column: 102, scope: !2316, inlinedAt: !2338)
!2491 = !DILocation(line: 88, column: 105, scope: !2316, inlinedAt: !2338)
!2492 = !DILocation(line: 88, column: 151, scope: !2316, inlinedAt: !2338)
!2493 = !DILocation(line: 88, column: 150, scope: !2316, inlinedAt: !2338)
!2494 = !DILocation(line: 88, column: 153, scope: !2316, inlinedAt: !2338)
!2495 = !DILocation(line: 88, column: 160, scope: !2316, inlinedAt: !2338)
!2496 = !DILocation(line: 105, column: 9, scope: !2339)
!2497 = !DILocation(line: 105, column: 16, scope: !2339)
!2498 = !DILocation(line: 105, column: 22, scope: !2339)
!2499 = !DILocation(line: 106, column: 25, scope: !2339)
!2500 = !DILocation(line: 88, column: 102, scope: !2316, inlinedAt: !2342)
!2501 = !DILocation(line: 88, column: 105, scope: !2316, inlinedAt: !2342)
!2502 = !DILocation(line: 88, column: 151, scope: !2316, inlinedAt: !2342)
!2503 = !DILocation(line: 88, column: 150, scope: !2316, inlinedAt: !2342)
!2504 = !DILocation(line: 88, column: 153, scope: !2316, inlinedAt: !2342)
!2505 = !DILocation(line: 88, column: 160, scope: !2316, inlinedAt: !2342)
!2506 = !DILocation(line: 106, column: 9, scope: !2339)
!2507 = !DILocation(line: 106, column: 16, scope: !2339)
!2508 = !DILocation(line: 106, column: 23, scope: !2339)
!2509 = !DILocation(line: 107, column: 14, scope: !2339)
!2510 = !DILocation(line: 108, column: 33, scope: !2339)
!2511 = !DILocation(line: 108, column: 40, scope: !2339)
!2512 = !DILocation(line: 108, column: 47, scope: !2339)
!2513 = !DILocation(line: 108, column: 54, scope: !2339)
!2514 = !DILocation(line: 108, column: 61, scope: !2339)
!2515 = !DILocation(line: 108, column: 15, scope: !2339)
!2516 = !DILocation(line: 108, column: 13, scope: !2339)
!2517 = !DILocation(line: 109, column: 13, scope: !2518)
!2518 = distinct !DILexicalBlock(scope: !2339, file: !1210, line: 109, column: 13)
!2519 = !DILocation(line: 109, column: 17, scope: !2518)
!2520 = !DILocation(line: 109, column: 13, scope: !2339)
!2521 = !DILocation(line: 110, column: 13, scope: !2518)
!2522 = !DILocation(line: 111, column: 5, scope: !2339)
!2523 = !DILocation(line: 113, column: 5, scope: !2312)
!2524 = !DILocation(line: 115, column: 12, scope: !2312)
!2525 = !DILocation(line: 115, column: 5, scope: !2312)
!2526 = !DILocation(line: 116, column: 9, scope: !2312)
!2527 = !DILocation(line: 116, column: 5, scope: !2312)
!2528 = !DILocation(line: 118, column: 9, scope: !2529)
!2529 = distinct !DILexicalBlock(scope: !2312, file: !1210, line: 118, column: 9)
!2530 = !DILocation(line: 118, column: 13, scope: !2529)
!2531 = !DILocation(line: 118, column: 9, scope: !2312)
!2532 = !DILocation(line: 119, column: 16, scope: !2533)
!2533 = distinct !DILexicalBlock(scope: !2529, file: !1210, line: 118, column: 18)
!2534 = !DILocation(line: 119, column: 9, scope: !2533)
!2535 = !DILocation(line: 120, column: 13, scope: !2536)
!2536 = distinct !DILexicalBlock(scope: !2533, file: !1210, line: 120, column: 13)
!2537 = !DILocation(line: 120, column: 20, scope: !2536)
!2538 = !DILocation(line: 120, column: 36, scope: !2536)
!2539 = !DILocation(line: 120, column: 13, scope: !2533)
!2540 = !DILocation(line: 121, column: 20, scope: !2536)
!2541 = !DILocation(line: 121, column: 13, scope: !2536)
!2542 = !DILocation(line: 122, column: 5, scope: !2533)
!2543 = !DILocation(line: 123, column: 5, scope: !2312)
!2544 = !DILocation(line: 124, column: 1, scope: !2312)
!2545 = distinct !DISubprogram(name: "avcodec_send_packet", scope: !1210, file: !1210, line: 677, type: !2313, isLocal: false, isDefinition: true, scopeLine: 678, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!2546 = !DILocalVariable(name: "avctx", arg: 1, scope: !2545, file: !1210, line: 677, type: !1213)
!2547 = !DILocation(line: 677, column: 41, scope: !2545)
!2548 = !DILocalVariable(name: "avpkt", arg: 2, scope: !2545, file: !1210, line: 677, type: !2280)
!2549 = !DILocation(line: 677, column: 64, scope: !2545)
!2550 = !DILocalVariable(name: "avci", scope: !2545, file: !1210, line: 679, type: !1808)
!2551 = !DILocation(line: 679, column: 22, scope: !2545)
!2552 = !DILocation(line: 679, column: 29, scope: !2545)
!2553 = !DILocation(line: 679, column: 36, scope: !2545)
!2554 = !DILocalVariable(name: "ret", scope: !2545, file: !1210, line: 680, type: !939)
!2555 = !DILocation(line: 680, column: 9, scope: !2545)
!2556 = !DILocation(line: 682, column: 26, scope: !2557)
!2557 = distinct !DILexicalBlock(scope: !2545, file: !1210, line: 682, column: 9)
!2558 = !DILocation(line: 682, column: 10, scope: !2557)
!2559 = !DILocation(line: 682, column: 33, scope: !2557)
!2560 = !DILocation(line: 682, column: 57, scope: !2561)
!2561 = !DILexicalBlockFile(scope: !2557, file: !1210, discriminator: 1)
!2562 = !DILocation(line: 682, column: 64, scope: !2561)
!2563 = !DILocation(line: 682, column: 37, scope: !2561)
!2564 = !DILocation(line: 682, column: 9, scope: !2561)
!2565 = !DILocation(line: 683, column: 9, scope: !2557)
!2566 = !DILocation(line: 685, column: 9, scope: !2567)
!2567 = distinct !DILexicalBlock(scope: !2545, file: !1210, line: 685, column: 9)
!2568 = !DILocation(line: 685, column: 16, scope: !2567)
!2569 = !DILocation(line: 685, column: 26, scope: !2567)
!2570 = !DILocation(line: 685, column: 9, scope: !2545)
!2571 = !DILocation(line: 686, column: 9, scope: !2567)
!2572 = !DILocation(line: 688, column: 9, scope: !2573)
!2573 = distinct !DILexicalBlock(scope: !2545, file: !1210, line: 688, column: 9)
!2574 = !DILocation(line: 688, column: 15, scope: !2573)
!2575 = !DILocation(line: 688, column: 19, scope: !2576)
!2576 = !DILexicalBlockFile(scope: !2573, file: !1210, discriminator: 1)
!2577 = !DILocation(line: 688, column: 26, scope: !2576)
!2578 = !DILocation(line: 688, column: 31, scope: !2576)
!2579 = !DILocation(line: 688, column: 34, scope: !2580)
!2580 = !DILexicalBlockFile(scope: !2573, file: !1210, discriminator: 2)
!2581 = !DILocation(line: 688, column: 41, scope: !2580)
!2582 = !DILocation(line: 688, column: 9, scope: !2580)
!2583 = !DILocation(line: 689, column: 9, scope: !2573)
!2584 = !DILocation(line: 691, column: 21, scope: !2545)
!2585 = !DILocation(line: 691, column: 27, scope: !2545)
!2586 = !DILocation(line: 691, column: 5, scope: !2545)
!2587 = !DILocation(line: 692, column: 9, scope: !2588)
!2588 = distinct !DILexicalBlock(scope: !2545, file: !1210, line: 692, column: 9)
!2589 = !DILocation(line: 692, column: 15, scope: !2588)
!2590 = !DILocation(line: 692, column: 19, scope: !2591)
!2591 = !DILexicalBlockFile(scope: !2588, file: !1210, discriminator: 1)
!2592 = !DILocation(line: 692, column: 26, scope: !2591)
!2593 = !DILocation(line: 692, column: 31, scope: !2591)
!2594 = !DILocation(line: 692, column: 34, scope: !2595)
!2595 = !DILexicalBlockFile(scope: !2588, file: !1210, discriminator: 2)
!2596 = !DILocation(line: 692, column: 41, scope: !2595)
!2597 = !DILocation(line: 692, column: 9, scope: !2595)
!2598 = !DILocation(line: 693, column: 29, scope: !2599)
!2599 = distinct !DILexicalBlock(scope: !2588, file: !1210, line: 692, column: 59)
!2600 = !DILocation(line: 693, column: 35, scope: !2599)
!2601 = !DILocation(line: 693, column: 47, scope: !2599)
!2602 = !DILocation(line: 693, column: 15, scope: !2599)
!2603 = !DILocation(line: 693, column: 13, scope: !2599)
!2604 = !DILocation(line: 694, column: 13, scope: !2605)
!2605 = distinct !DILexicalBlock(scope: !2599, file: !1210, line: 694, column: 13)
!2606 = !DILocation(line: 694, column: 17, scope: !2605)
!2607 = !DILocation(line: 694, column: 13, scope: !2599)
!2608 = !DILocation(line: 695, column: 20, scope: !2605)
!2609 = !DILocation(line: 695, column: 13, scope: !2605)
!2610 = !DILocation(line: 696, column: 5, scope: !2599)
!2611 = !DILocation(line: 698, column: 30, scope: !2545)
!2612 = !DILocation(line: 698, column: 36, scope: !2545)
!2613 = !DILocation(line: 698, column: 43, scope: !2545)
!2614 = !DILocation(line: 698, column: 52, scope: !2545)
!2615 = !DILocation(line: 698, column: 58, scope: !2545)
!2616 = !DILocation(line: 698, column: 11, scope: !2545)
!2617 = !DILocation(line: 698, column: 9, scope: !2545)
!2618 = !DILocation(line: 699, column: 9, scope: !2619)
!2619 = distinct !DILexicalBlock(scope: !2545, file: !1210, line: 699, column: 9)
!2620 = !DILocation(line: 699, column: 13, scope: !2619)
!2621 = !DILocation(line: 699, column: 9, scope: !2545)
!2622 = !DILocation(line: 700, column: 25, scope: !2623)
!2623 = distinct !DILexicalBlock(scope: !2619, file: !1210, line: 699, column: 18)
!2624 = !DILocation(line: 700, column: 31, scope: !2623)
!2625 = !DILocation(line: 700, column: 9, scope: !2623)
!2626 = !DILocation(line: 701, column: 16, scope: !2623)
!2627 = !DILocation(line: 701, column: 9, scope: !2623)
!2628 = !DILocation(line: 704, column: 10, scope: !2629)
!2629 = distinct !DILexicalBlock(scope: !2545, file: !1210, line: 704, column: 9)
!2630 = !DILocation(line: 704, column: 16, scope: !2629)
!2631 = !DILocation(line: 704, column: 30, scope: !2629)
!2632 = !DILocation(line: 704, column: 9, scope: !2545)
!2633 = !DILocation(line: 705, column: 45, scope: !2634)
!2634 = distinct !DILexicalBlock(scope: !2629, file: !1210, line: 704, column: 38)
!2635 = !DILocation(line: 705, column: 52, scope: !2634)
!2636 = !DILocation(line: 705, column: 58, scope: !2634)
!2637 = !DILocation(line: 705, column: 15, scope: !2634)
!2638 = !DILocation(line: 705, column: 13, scope: !2634)
!2639 = !DILocation(line: 706, column: 13, scope: !2640)
!2640 = distinct !DILexicalBlock(scope: !2634, file: !1210, line: 706, column: 13)
!2641 = !DILocation(line: 706, column: 17, scope: !2640)
!2642 = !DILocation(line: 706, column: 21, scope: !2640)
!2643 = !DILocation(line: 706, column: 24, scope: !2644)
!2644 = !DILexicalBlockFile(scope: !2640, file: !1210, discriminator: 1)
!2645 = !DILocation(line: 706, column: 28, scope: !2644)
!2646 = !DILocation(line: 706, column: 33, scope: !2644)
!2647 = !DILocation(line: 706, column: 36, scope: !2648)
!2648 = !DILexicalBlockFile(scope: !2640, file: !1210, discriminator: 2)
!2649 = !DILocation(line: 706, column: 40, scope: !2648)
!2650 = !DILocation(line: 706, column: 13, scope: !2648)
!2651 = !DILocation(line: 707, column: 20, scope: !2640)
!2652 = !DILocation(line: 707, column: 13, scope: !2640)
!2653 = !DILocation(line: 708, column: 5, scope: !2634)
!2654 = !DILocation(line: 710, column: 5, scope: !2545)
!2655 = !DILocation(line: 711, column: 1, scope: !2545)
!2656 = distinct !DISubprogram(name: "decode_receive_frame_internal", scope: !1210, file: !1210, line: 637, type: !1211, isLocal: true, isDefinition: true, scopeLine: 638, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!2657 = !DILocalVariable(name: "avctx", arg: 1, scope: !2656, file: !1210, line: 637, type: !1213)
!2658 = !DILocation(line: 637, column: 58, scope: !2656)
!2659 = !DILocalVariable(name: "frame", arg: 2, scope: !2656, file: !1210, line: 637, type: !1107)
!2660 = !DILocation(line: 637, column: 74, scope: !2656)
!2661 = !DILocalVariable(name: "avci", scope: !2656, file: !1210, line: 639, type: !1808)
!2662 = !DILocation(line: 639, column: 22, scope: !2656)
!2663 = !DILocation(line: 639, column: 29, scope: !2656)
!2664 = !DILocation(line: 639, column: 36, scope: !2656)
!2665 = !DILocalVariable(name: "ret", scope: !2656, file: !1210, line: 640, type: !939)
!2666 = !DILocation(line: 640, column: 9, scope: !2656)
!2667 = !DILocation(line: 642, column: 5, scope: !2656)
!2668 = distinct !{!2668, !2667}
!2669 = !DILocation(line: 642, column: 17, scope: !2670)
!2670 = !DILexicalBlockFile(scope: !2671, file: !1210, discriminator: 1)
!2671 = distinct !DILexicalBlock(scope: !2672, file: !1210, line: 642, column: 14)
!2672 = distinct !DILexicalBlock(scope: !2656, file: !1210, line: 642, column: 8)
!2673 = !DILocation(line: 642, column: 24, scope: !2670)
!2674 = !DILocation(line: 642, column: 14, scope: !2670)
!2675 = !DILocation(line: 642, column: 35, scope: !2676)
!2676 = !DILexicalBlockFile(scope: !2677, file: !1210, discriminator: 2)
!2677 = distinct !DILexicalBlock(scope: !2671, file: !1210, line: 642, column: 33)
!2678 = !DILocation(line: 642, column: 90, scope: !2679)
!2679 = !DILexicalBlockFile(scope: !2676, file: !1210, discriminator: 4)
!2680 = !DILocation(line: 642, column: 90, scope: !2676)
!2681 = !DILocation(line: 642, column: 101, scope: !2682)
!2682 = !DILexicalBlockFile(scope: !2672, file: !1210, discriminator: 3)
!2683 = !DILocation(line: 644, column: 9, scope: !2684)
!2684 = distinct !DILexicalBlock(scope: !2656, file: !1210, line: 644, column: 9)
!2685 = !DILocation(line: 644, column: 16, scope: !2684)
!2686 = !DILocation(line: 644, column: 23, scope: !2684)
!2687 = !DILocation(line: 644, column: 9, scope: !2656)
!2688 = !DILocation(line: 645, column: 15, scope: !2684)
!2689 = !DILocation(line: 645, column: 22, scope: !2684)
!2690 = !DILocation(line: 645, column: 29, scope: !2684)
!2691 = !DILocation(line: 645, column: 43, scope: !2684)
!2692 = !DILocation(line: 645, column: 50, scope: !2684)
!2693 = !DILocation(line: 645, column: 13, scope: !2684)
!2694 = !DILocation(line: 645, column: 9, scope: !2684)
!2695 = !DILocation(line: 647, column: 43, scope: !2684)
!2696 = !DILocation(line: 647, column: 50, scope: !2684)
!2697 = !DILocation(line: 647, column: 15, scope: !2684)
!2698 = !DILocation(line: 647, column: 13, scope: !2684)
!2699 = !DILocation(line: 649, column: 9, scope: !2700)
!2700 = distinct !DILexicalBlock(scope: !2656, file: !1210, line: 649, column: 9)
!2701 = !DILocation(line: 649, column: 13, scope: !2700)
!2702 = !DILocation(line: 649, column: 9, scope: !2656)
!2703 = !DILocation(line: 650, column: 9, scope: !2700)
!2704 = !DILocation(line: 650, column: 15, scope: !2700)
!2705 = !DILocation(line: 650, column: 29, scope: !2700)
!2706 = !DILocation(line: 652, column: 10, scope: !2707)
!2707 = distinct !DILexicalBlock(scope: !2656, file: !1210, line: 652, column: 9)
!2708 = !DILocation(line: 652, column: 9, scope: !2656)
!2709 = !DILocation(line: 655, column: 9, scope: !2710)
!2710 = distinct !DILexicalBlock(scope: !2707, file: !1210, line: 652, column: 15)
!2711 = distinct !{!2711, !2709}
!2712 = !DILocation(line: 655, column: 21, scope: !2713)
!2713 = !DILexicalBlockFile(scope: !2714, file: !1210, discriminator: 1)
!2714 = distinct !DILexicalBlock(scope: !2715, file: !1210, line: 655, column: 18)
!2715 = distinct !DILexicalBlock(scope: !2710, file: !1210, line: 655, column: 12)
!2716 = !DILocation(line: 655, column: 28, scope: !2713)
!2717 = !DILocation(line: 655, column: 40, scope: !2713)
!2718 = !DILocation(line: 655, column: 43, scope: !2719)
!2719 = !DILexicalBlockFile(scope: !2714, file: !1210, discriminator: 2)
!2720 = !DILocation(line: 655, column: 50, scope: !2719)
!2721 = !DILocation(line: 655, column: 63, scope: !2719)
!2722 = !DILocation(line: 655, column: 68, scope: !2719)
!2723 = !DILocation(line: 655, column: 96, scope: !2719)
!2724 = !DILocation(line: 655, column: 101, scope: !2725)
!2725 = !DILexicalBlockFile(scope: !2714, file: !1210, discriminator: 3)
!2726 = !DILocation(line: 655, column: 108, scope: !2725)
!2727 = !DILocation(line: 655, column: 115, scope: !2725)
!2728 = !DILocation(line: 655, column: 128, scope: !2725)
!2729 = !DILocation(line: 655, column: 18, scope: !2725)
!2730 = !DILocation(line: 655, column: 144, scope: !2731)
!2731 = !DILexicalBlockFile(scope: !2732, file: !1210, discriminator: 4)
!2732 = distinct !DILexicalBlock(scope: !2714, file: !1210, line: 655, column: 142)
!2733 = !DILocation(line: 655, column: 12, scope: !2734)
!2734 = !DILexicalBlockFile(scope: !2731, file: !1210, discriminator: 6)
!2735 = !DILocation(line: 655, column: 12, scope: !2731)
!2736 = !DILocation(line: 655, column: 23, scope: !2737)
!2737 = !DILexicalBlockFile(scope: !2715, file: !1210, discriminator: 5)
!2738 = !DILocation(line: 658, column: 13, scope: !2739)
!2739 = distinct !DILexicalBlock(scope: !2710, file: !1210, line: 658, column: 13)
!2740 = !DILocation(line: 658, column: 20, scope: !2739)
!2741 = !DILocation(line: 658, column: 13, scope: !2710)
!2742 = !DILocalVariable(name: "fdd", scope: !2743, file: !1210, line: 659, type: !1098)
!2743 = distinct !DILexicalBlock(scope: !2739, file: !1210, line: 658, column: 33)
!2744 = !DILocation(line: 659, column: 30, scope: !2743)
!2745 = !DILocation(line: 659, column: 54, scope: !2743)
!2746 = !DILocation(line: 659, column: 61, scope: !2743)
!2747 = !DILocation(line: 659, column: 74, scope: !2743)
!2748 = !DILocation(line: 659, column: 36, scope: !2743)
!2749 = !DILocation(line: 661, column: 17, scope: !2750)
!2750 = distinct !DILexicalBlock(scope: !2743, file: !1210, line: 661, column: 17)
!2751 = !DILocation(line: 661, column: 22, scope: !2750)
!2752 = !DILocation(line: 661, column: 17, scope: !2743)
!2753 = !DILocation(line: 662, column: 23, scope: !2754)
!2754 = distinct !DILexicalBlock(scope: !2750, file: !1210, line: 661, column: 36)
!2755 = !DILocation(line: 662, column: 28, scope: !2754)
!2756 = !DILocation(line: 662, column: 41, scope: !2754)
!2757 = !DILocation(line: 662, column: 48, scope: !2754)
!2758 = !DILocation(line: 662, column: 21, scope: !2754)
!2759 = !DILocation(line: 663, column: 21, scope: !2760)
!2760 = distinct !DILexicalBlock(scope: !2754, file: !1210, line: 663, column: 21)
!2761 = !DILocation(line: 663, column: 25, scope: !2760)
!2762 = !DILocation(line: 663, column: 21, scope: !2754)
!2763 = !DILocation(line: 664, column: 36, scope: !2764)
!2764 = distinct !DILexicalBlock(scope: !2760, file: !1210, line: 663, column: 30)
!2765 = !DILocation(line: 664, column: 21, scope: !2764)
!2766 = !DILocation(line: 665, column: 28, scope: !2764)
!2767 = !DILocation(line: 665, column: 21, scope: !2764)
!2768 = !DILocation(line: 667, column: 13, scope: !2754)
!2769 = !DILocation(line: 668, column: 9, scope: !2743)
!2770 = !DILocation(line: 669, column: 5, scope: !2710)
!2771 = !DILocation(line: 672, column: 22, scope: !2656)
!2772 = !DILocation(line: 672, column: 29, scope: !2656)
!2773 = !DILocation(line: 672, column: 5, scope: !2656)
!2774 = !DILocation(line: 674, column: 12, scope: !2656)
!2775 = !DILocation(line: 674, column: 5, scope: !2656)
!2776 = !DILocation(line: 675, column: 1, scope: !2656)
!2777 = distinct !DISubprogram(name: "avcodec_receive_frame", scope: !1210, file: !1210, line: 740, type: !1211, isLocal: false, isDefinition: true, scopeLine: 741, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!2778 = !DILocalVariable(name: "avctx", arg: 1, scope: !2777, file: !1210, line: 740, type: !1213)
!2779 = !DILocation(line: 740, column: 43, scope: !2777)
!2780 = !DILocalVariable(name: "frame", arg: 2, scope: !2777, file: !1210, line: 740, type: !1107)
!2781 = !DILocation(line: 740, column: 59, scope: !2777)
!2782 = !DILocalVariable(name: "avci", scope: !2777, file: !1210, line: 742, type: !1808)
!2783 = !DILocation(line: 742, column: 22, scope: !2777)
!2784 = !DILocation(line: 742, column: 29, scope: !2777)
!2785 = !DILocation(line: 742, column: 36, scope: !2777)
!2786 = !DILocalVariable(name: "ret", scope: !2777, file: !1210, line: 743, type: !939)
!2787 = !DILocation(line: 743, column: 9, scope: !2777)
!2788 = !DILocation(line: 745, column: 20, scope: !2777)
!2789 = !DILocation(line: 745, column: 5, scope: !2777)
!2790 = !DILocation(line: 747, column: 26, scope: !2791)
!2791 = distinct !DILexicalBlock(scope: !2777, file: !1210, line: 747, column: 9)
!2792 = !DILocation(line: 747, column: 10, scope: !2791)
!2793 = !DILocation(line: 747, column: 33, scope: !2791)
!2794 = !DILocation(line: 747, column: 57, scope: !2795)
!2795 = !DILexicalBlockFile(scope: !2791, file: !1210, discriminator: 1)
!2796 = !DILocation(line: 747, column: 64, scope: !2795)
!2797 = !DILocation(line: 747, column: 37, scope: !2795)
!2798 = !DILocation(line: 747, column: 9, scope: !2795)
!2799 = !DILocation(line: 748, column: 9, scope: !2791)
!2800 = !DILocation(line: 750, column: 9, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !2777, file: !1210, line: 750, column: 9)
!2802 = !DILocation(line: 750, column: 15, scope: !2801)
!2803 = !DILocation(line: 750, column: 29, scope: !2801)
!2804 = !DILocation(line: 750, column: 9, scope: !2777)
!2805 = !DILocation(line: 751, column: 27, scope: !2806)
!2806 = distinct !DILexicalBlock(scope: !2801, file: !1210, line: 750, column: 37)
!2807 = !DILocation(line: 751, column: 34, scope: !2806)
!2808 = !DILocation(line: 751, column: 40, scope: !2806)
!2809 = !DILocation(line: 751, column: 9, scope: !2806)
!2810 = !DILocation(line: 752, column: 5, scope: !2806)
!2811 = !DILocation(line: 753, column: 45, scope: !2812)
!2812 = distinct !DILexicalBlock(scope: !2801, file: !1210, line: 752, column: 12)
!2813 = !DILocation(line: 753, column: 52, scope: !2812)
!2814 = !DILocation(line: 753, column: 15, scope: !2812)
!2815 = !DILocation(line: 753, column: 13, scope: !2812)
!2816 = !DILocation(line: 754, column: 13, scope: !2817)
!2817 = distinct !DILexicalBlock(scope: !2812, file: !1210, line: 754, column: 13)
!2818 = !DILocation(line: 754, column: 17, scope: !2817)
!2819 = !DILocation(line: 754, column: 13, scope: !2812)
!2820 = !DILocation(line: 755, column: 20, scope: !2817)
!2821 = !DILocation(line: 755, column: 13, scope: !2817)
!2822 = !DILocation(line: 758, column: 9, scope: !2823)
!2823 = distinct !DILexicalBlock(scope: !2777, file: !1210, line: 758, column: 9)
!2824 = !DILocation(line: 758, column: 16, scope: !2823)
!2825 = !DILocation(line: 758, column: 27, scope: !2823)
!2826 = !DILocation(line: 758, column: 9, scope: !2777)
!2827 = !DILocation(line: 759, column: 30, scope: !2828)
!2828 = distinct !DILexicalBlock(scope: !2823, file: !1210, line: 758, column: 50)
!2829 = !DILocation(line: 759, column: 37, scope: !2828)
!2830 = !DILocation(line: 759, column: 15, scope: !2828)
!2831 = !DILocation(line: 759, column: 13, scope: !2828)
!2832 = !DILocation(line: 760, column: 13, scope: !2833)
!2833 = distinct !DILexicalBlock(scope: !2828, file: !1210, line: 760, column: 13)
!2834 = !DILocation(line: 760, column: 17, scope: !2833)
!2835 = !DILocation(line: 760, column: 13, scope: !2828)
!2836 = !DILocation(line: 761, column: 28, scope: !2837)
!2837 = distinct !DILexicalBlock(scope: !2833, file: !1210, line: 760, column: 22)
!2838 = !DILocation(line: 761, column: 13, scope: !2837)
!2839 = !DILocation(line: 762, column: 20, scope: !2837)
!2840 = !DILocation(line: 762, column: 13, scope: !2837)
!2841 = !DILocation(line: 764, column: 5, scope: !2828)
!2842 = !DILocation(line: 766, column: 5, scope: !2777)
!2843 = !DILocation(line: 766, column: 12, scope: !2777)
!2844 = !DILocation(line: 766, column: 24, scope: !2777)
!2845 = !DILocation(line: 768, column: 5, scope: !2777)
!2846 = !DILocation(line: 769, column: 1, scope: !2777)
!2847 = distinct !DISubprogram(name: "apply_cropping", scope: !1210, file: !1210, line: 713, type: !1211, isLocal: true, isDefinition: true, scopeLine: 714, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!2848 = !DILocalVariable(name: "avctx", arg: 1, scope: !2847, file: !1210, line: 713, type: !1213)
!2849 = !DILocation(line: 713, column: 43, scope: !2847)
!2850 = !DILocalVariable(name: "frame", arg: 2, scope: !2847, file: !1210, line: 713, type: !1107)
!2851 = !DILocation(line: 713, column: 59, scope: !2847)
!2852 = !DILocation(line: 716, column: 9, scope: !2853)
!2853 = distinct !DILexicalBlock(scope: !2847, file: !1210, line: 716, column: 9)
!2854 = !DILocation(line: 716, column: 16, scope: !2853)
!2855 = !DILocation(line: 716, column: 42, scope: !2853)
!2856 = !DILocation(line: 716, column: 49, scope: !2853)
!2857 = !DILocation(line: 716, column: 40, scope: !2853)
!2858 = !DILocation(line: 716, column: 26, scope: !2853)
!2859 = !DILocation(line: 716, column: 60, scope: !2853)
!2860 = !DILocation(line: 717, column: 9, scope: !2853)
!2861 = !DILocation(line: 717, column: 16, scope: !2853)
!2862 = !DILocation(line: 717, column: 41, scope: !2853)
!2863 = !DILocation(line: 717, column: 48, scope: !2853)
!2864 = !DILocation(line: 717, column: 39, scope: !2853)
!2865 = !DILocation(line: 717, column: 25, scope: !2853)
!2866 = !DILocation(line: 717, column: 60, scope: !2853)
!2867 = !DILocation(line: 718, column: 10, scope: !2853)
!2868 = !DILocation(line: 718, column: 17, scope: !2853)
!2869 = !DILocation(line: 718, column: 29, scope: !2853)
!2870 = !DILocation(line: 718, column: 36, scope: !2853)
!2871 = !DILocation(line: 718, column: 27, scope: !2853)
!2872 = !DILocation(line: 718, column: 51, scope: !2853)
!2873 = !DILocation(line: 718, column: 58, scope: !2853)
!2874 = !DILocation(line: 718, column: 48, scope: !2853)
!2875 = !DILocation(line: 718, column: 64, scope: !2853)
!2876 = !DILocation(line: 719, column: 10, scope: !2853)
!2877 = !DILocation(line: 719, column: 17, scope: !2853)
!2878 = !DILocation(line: 719, column: 28, scope: !2853)
!2879 = !DILocation(line: 719, column: 35, scope: !2853)
!2880 = !DILocation(line: 719, column: 26, scope: !2853)
!2881 = !DILocation(line: 719, column: 51, scope: !2853)
!2882 = !DILocation(line: 719, column: 58, scope: !2853)
!2883 = !DILocation(line: 719, column: 48, scope: !2853)
!2884 = !DILocation(line: 716, column: 9, scope: !2885)
!2885 = !DILexicalBlockFile(scope: !2847, file: !1210, discriminator: 1)
!2886 = !DILocation(line: 720, column: 16, scope: !2887)
!2887 = distinct !DILexicalBlock(scope: !2853, file: !1210, line: 719, column: 66)
!2888 = !DILocation(line: 724, column: 16, scope: !2887)
!2889 = !DILocation(line: 724, column: 23, scope: !2887)
!2890 = !DILocation(line: 724, column: 34, scope: !2887)
!2891 = !DILocation(line: 724, column: 41, scope: !2887)
!2892 = !DILocation(line: 724, column: 53, scope: !2887)
!2893 = !DILocation(line: 724, column: 60, scope: !2887)
!2894 = !DILocation(line: 724, column: 70, scope: !2887)
!2895 = !DILocation(line: 724, column: 77, scope: !2887)
!2896 = !DILocation(line: 725, column: 16, scope: !2887)
!2897 = !DILocation(line: 725, column: 23, scope: !2887)
!2898 = !DILocation(line: 725, column: 30, scope: !2887)
!2899 = !DILocation(line: 725, column: 37, scope: !2887)
!2900 = !DILocation(line: 720, column: 9, scope: !2887)
!2901 = !DILocation(line: 726, column: 9, scope: !2887)
!2902 = !DILocation(line: 726, column: 16, scope: !2887)
!2903 = !DILocation(line: 726, column: 26, scope: !2887)
!2904 = !DILocation(line: 727, column: 9, scope: !2887)
!2905 = !DILocation(line: 727, column: 16, scope: !2887)
!2906 = !DILocation(line: 727, column: 27, scope: !2887)
!2907 = !DILocation(line: 728, column: 9, scope: !2887)
!2908 = !DILocation(line: 728, column: 16, scope: !2887)
!2909 = !DILocation(line: 728, column: 25, scope: !2887)
!2910 = !DILocation(line: 729, column: 9, scope: !2887)
!2911 = !DILocation(line: 729, column: 16, scope: !2887)
!2912 = !DILocation(line: 729, column: 28, scope: !2887)
!2913 = !DILocation(line: 730, column: 9, scope: !2887)
!2914 = !DILocation(line: 733, column: 10, scope: !2915)
!2915 = distinct !DILexicalBlock(scope: !2847, file: !1210, line: 733, column: 9)
!2916 = !DILocation(line: 733, column: 17, scope: !2915)
!2917 = !DILocation(line: 733, column: 9, scope: !2847)
!2918 = !DILocation(line: 734, column: 9, scope: !2915)
!2919 = !DILocation(line: 736, column: 36, scope: !2847)
!2920 = !DILocation(line: 736, column: 43, scope: !2847)
!2921 = !DILocation(line: 736, column: 50, scope: !2847)
!2922 = !DILocation(line: 736, column: 56, scope: !2847)
!2923 = !DILocation(line: 736, column: 12, scope: !2847)
!2924 = !DILocation(line: 736, column: 5, scope: !2847)
!2925 = !DILocation(line: 738, column: 1, scope: !2847)
!2926 = distinct !DISubprogram(name: "avcodec_decode_video2", scope: !1210, file: !1210, line: 853, type: !2927, isLocal: false, isDefinition: true, scopeLine: 856, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!2927 = !DISubroutineType(types: !2928)
!2928 = !{!939, !1213, !1107, !1354, !2280}
!2929 = !DILocalVariable(name: "avctx", arg: 1, scope: !2926, file: !1210, line: 853, type: !1213)
!2930 = !DILocation(line: 853, column: 43, scope: !2926)
!2931 = !DILocalVariable(name: "picture", arg: 2, scope: !2926, file: !1210, line: 853, type: !1107)
!2932 = !DILocation(line: 853, column: 59, scope: !2926)
!2933 = !DILocalVariable(name: "got_picture_ptr", arg: 3, scope: !2926, file: !1210, line: 854, type: !1354)
!2934 = !DILocation(line: 854, column: 52, scope: !2926)
!2935 = !DILocalVariable(name: "avpkt", arg: 4, scope: !2926, file: !1210, line: 855, type: !2280)
!2936 = !DILocation(line: 855, column: 63, scope: !2926)
!2937 = !DILocation(line: 857, column: 26, scope: !2926)
!2938 = !DILocation(line: 857, column: 33, scope: !2926)
!2939 = !DILocation(line: 857, column: 42, scope: !2926)
!2940 = !DILocation(line: 857, column: 59, scope: !2926)
!2941 = !DILocation(line: 857, column: 12, scope: !2926)
!2942 = !DILocation(line: 857, column: 5, scope: !2926)
!2943 = distinct !DISubprogram(name: "compat_decode", scope: !1210, file: !1210, line: 771, type: !2927, isLocal: true, isDefinition: true, scopeLine: 773, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!2944 = !DILocalVariable(name: "avctx", arg: 1, scope: !2943, file: !1210, line: 771, type: !1213)
!2945 = !DILocation(line: 771, column: 42, scope: !2943)
!2946 = !DILocalVariable(name: "frame", arg: 2, scope: !2943, file: !1210, line: 771, type: !1107)
!2947 = !DILocation(line: 771, column: 58, scope: !2943)
!2948 = !DILocalVariable(name: "got_frame", arg: 3, scope: !2943, file: !1210, line: 772, type: !1354)
!2949 = !DILocation(line: 772, column: 31, scope: !2943)
!2950 = !DILocalVariable(name: "pkt", arg: 4, scope: !2943, file: !1210, line: 772, type: !2280)
!2951 = !DILocation(line: 772, column: 58, scope: !2943)
!2952 = !DILocalVariable(name: "avci", scope: !2943, file: !1210, line: 774, type: !1808)
!2953 = !DILocation(line: 774, column: 22, scope: !2943)
!2954 = !DILocation(line: 774, column: 29, scope: !2943)
!2955 = !DILocation(line: 774, column: 36, scope: !2943)
!2956 = !DILocalVariable(name: "ret", scope: !2943, file: !1210, line: 775, type: !939)
!2957 = !DILocation(line: 775, column: 9, scope: !2943)
!2958 = !DILocation(line: 777, column: 5, scope: !2943)
!2959 = distinct !{!2959, !2958}
!2960 = !DILocation(line: 777, column: 16, scope: !2961)
!2961 = !DILexicalBlockFile(scope: !2962, file: !1210, discriminator: 1)
!2962 = distinct !DILexicalBlock(scope: !2963, file: !1210, line: 777, column: 14)
!2963 = distinct !DILexicalBlock(scope: !2943, file: !1210, line: 777, column: 8)
!2964 = !DILocation(line: 777, column: 22, scope: !2961)
!2965 = !DILocation(line: 777, column: 45, scope: !2961)
!2966 = !DILocation(line: 777, column: 14, scope: !2961)
!2967 = !DILocation(line: 777, column: 54, scope: !2968)
!2968 = !DILexicalBlockFile(scope: !2969, file: !1210, discriminator: 2)
!2969 = distinct !DILexicalBlock(scope: !2962, file: !1210, line: 777, column: 52)
!2970 = !DILocation(line: 777, column: 109, scope: !2971)
!2971 = !DILexicalBlockFile(scope: !2968, file: !1210, discriminator: 4)
!2972 = !DILocation(line: 777, column: 109, scope: !2968)
!2973 = !DILocation(line: 777, column: 120, scope: !2974)
!2974 = !DILexicalBlockFile(scope: !2963, file: !1210, discriminator: 3)
!2975 = !DILocation(line: 779, column: 9, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !2943, file: !1210, line: 779, column: 9)
!2977 = !DILocation(line: 779, column: 15, scope: !2976)
!2978 = !DILocation(line: 779, column: 29, scope: !2976)
!2979 = !DILocation(line: 779, column: 32, scope: !2980)
!2980 = !DILexicalBlockFile(scope: !2976, file: !1210, discriminator: 1)
!2981 = !DILocation(line: 779, column: 36, scope: !2980)
!2982 = !DILocation(line: 779, column: 39, scope: !2983)
!2983 = !DILexicalBlockFile(scope: !2976, file: !1210, discriminator: 2)
!2984 = !DILocation(line: 779, column: 44, scope: !2983)
!2985 = !DILocation(line: 779, column: 49, scope: !2983)
!2986 = !DILocation(line: 779, column: 9, scope: !2983)
!2987 = !DILocation(line: 780, column: 16, scope: !2988)
!2988 = distinct !DILexicalBlock(scope: !2976, file: !1210, line: 779, column: 55)
!2989 = !DILocation(line: 780, column: 9, scope: !2988)
!2990 = !DILocation(line: 781, column: 31, scope: !2988)
!2991 = !DILocation(line: 781, column: 9, scope: !2988)
!2992 = !DILocation(line: 782, column: 5, scope: !2988)
!2993 = !DILocation(line: 784, column: 6, scope: !2943)
!2994 = !DILocation(line: 784, column: 16, scope: !2943)
!2995 = !DILocation(line: 785, column: 5, scope: !2943)
!2996 = !DILocation(line: 785, column: 11, scope: !2943)
!2997 = !DILocation(line: 785, column: 25, scope: !2943)
!2998 = !DILocation(line: 787, column: 9, scope: !2999)
!2999 = distinct !DILexicalBlock(scope: !2943, file: !1210, line: 787, column: 9)
!3000 = !DILocation(line: 787, column: 15, scope: !2999)
!3001 = !DILocation(line: 787, column: 42, scope: !2999)
!3002 = !DILocation(line: 787, column: 46, scope: !2999)
!3003 = !DILocation(line: 788, column: 9, scope: !2999)
!3004 = !DILocation(line: 788, column: 15, scope: !2999)
!3005 = !DILocation(line: 788, column: 45, scope: !2999)
!3006 = !DILocation(line: 788, column: 50, scope: !2999)
!3007 = !DILocation(line: 788, column: 42, scope: !2999)
!3008 = !DILocation(line: 787, column: 9, scope: !3009)
!3009 = !DILexicalBlockFile(scope: !2943, file: !1210, discriminator: 1)
!3010 = !DILocation(line: 789, column: 16, scope: !3011)
!3011 = distinct !DILexicalBlock(scope: !2999, file: !1210, line: 788, column: 56)
!3012 = !DILocation(line: 789, column: 9, scope: !3011)
!3013 = !DILocation(line: 791, column: 13, scope: !3011)
!3014 = !DILocation(line: 792, column: 9, scope: !3011)
!3015 = !DILocation(line: 795, column: 10, scope: !3016)
!3016 = distinct !DILexicalBlock(scope: !2943, file: !1210, line: 795, column: 9)
!3017 = !DILocation(line: 795, column: 16, scope: !3016)
!3018 = !DILocation(line: 795, column: 9, scope: !2943)
!3019 = !DILocation(line: 796, column: 35, scope: !3020)
!3020 = distinct !DILexicalBlock(scope: !3016, file: !1210, line: 795, column: 44)
!3021 = !DILocation(line: 796, column: 42, scope: !3020)
!3022 = !DILocation(line: 796, column: 15, scope: !3020)
!3023 = !DILocation(line: 796, column: 13, scope: !3020)
!3024 = !DILocation(line: 797, column: 13, scope: !3025)
!3025 = distinct !DILexicalBlock(scope: !3020, file: !1210, line: 797, column: 13)
!3026 = !DILocation(line: 797, column: 17, scope: !3025)
!3027 = !DILocation(line: 797, column: 13, scope: !3020)
!3028 = !DILocation(line: 798, column: 17, scope: !3025)
!3029 = !DILocation(line: 798, column: 13, scope: !3025)
!3030 = !DILocation(line: 799, column: 18, scope: !3031)
!3031 = distinct !DILexicalBlock(scope: !3025, file: !1210, line: 799, column: 18)
!3032 = !DILocation(line: 799, column: 22, scope: !3031)
!3033 = !DILocation(line: 799, column: 18, scope: !3025)
!3034 = !DILocation(line: 802, column: 17, scope: !3035)
!3035 = distinct !DILexicalBlock(scope: !3031, file: !1210, line: 799, column: 28)
!3036 = !DILocation(line: 803, column: 13, scope: !3035)
!3037 = !DILocation(line: 804, column: 20, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !3031, file: !1210, line: 804, column: 20)
!3039 = !DILocation(line: 804, column: 24, scope: !3038)
!3040 = !DILocation(line: 804, column: 20, scope: !3031)
!3041 = !DILocation(line: 805, column: 13, scope: !3038)
!3042 = !DILocation(line: 806, column: 5, scope: !3020)
!3043 = !DILocation(line: 808, column: 5, scope: !2943)
!3044 = !DILocation(line: 808, column: 12, scope: !3009)
!3045 = !DILocation(line: 808, column: 16, scope: !3009)
!3046 = !DILocation(line: 808, column: 5, scope: !3009)
!3047 = !DILocation(line: 809, column: 37, scope: !3048)
!3048 = distinct !DILexicalBlock(scope: !2943, file: !1210, line: 808, column: 22)
!3049 = !DILocation(line: 809, column: 44, scope: !3048)
!3050 = !DILocation(line: 809, column: 15, scope: !3048)
!3051 = !DILocation(line: 809, column: 13, scope: !3048)
!3052 = !DILocation(line: 810, column: 13, scope: !3053)
!3053 = distinct !DILexicalBlock(scope: !3048, file: !1210, line: 810, column: 13)
!3054 = !DILocation(line: 810, column: 17, scope: !3053)
!3055 = !DILocation(line: 810, column: 13, scope: !3048)
!3056 = !DILocation(line: 811, column: 17, scope: !3057)
!3057 = distinct !DILexicalBlock(scope: !3058, file: !1210, line: 811, column: 17)
!3058 = distinct !DILexicalBlock(scope: !3053, file: !1210, line: 810, column: 22)
!3059 = !DILocation(line: 811, column: 21, scope: !3057)
!3060 = !DILocation(line: 811, column: 26, scope: !3057)
!3061 = !DILocation(line: 811, column: 29, scope: !3062)
!3062 = !DILexicalBlockFile(scope: !3057, file: !1210, discriminator: 1)
!3063 = !DILocation(line: 811, column: 33, scope: !3062)
!3064 = !DILocation(line: 811, column: 17, scope: !3062)
!3065 = !DILocation(line: 812, column: 21, scope: !3057)
!3066 = !DILocation(line: 812, column: 17, scope: !3057)
!3067 = !DILocation(line: 813, column: 13, scope: !3058)
!3068 = !DILocation(line: 816, column: 13, scope: !3069)
!3069 = distinct !DILexicalBlock(scope: !3048, file: !1210, line: 816, column: 13)
!3070 = !DILocation(line: 816, column: 22, scope: !3069)
!3071 = !DILocation(line: 816, column: 28, scope: !3069)
!3072 = !DILocation(line: 816, column: 19, scope: !3069)
!3073 = !DILocation(line: 816, column: 13, scope: !3048)
!3074 = !DILocation(line: 817, column: 18, scope: !3075)
!3075 = distinct !DILexicalBlock(scope: !3076, file: !1210, line: 817, column: 17)
!3076 = distinct !DILexicalBlock(scope: !3069, file: !1210, line: 816, column: 49)
!3077 = !DILocation(line: 817, column: 25, scope: !3075)
!3078 = !DILocation(line: 817, column: 17, scope: !3076)
!3079 = !DILocation(line: 818, column: 40, scope: !3080)
!3080 = distinct !DILexicalBlock(scope: !3075, file: !1210, line: 817, column: 44)
!3081 = !DILocation(line: 818, column: 46, scope: !3080)
!3082 = !DILocation(line: 818, column: 23, scope: !3080)
!3083 = !DILocation(line: 818, column: 21, scope: !3080)
!3084 = !DILocation(line: 819, column: 21, scope: !3085)
!3085 = distinct !DILexicalBlock(scope: !3080, file: !1210, line: 819, column: 21)
!3086 = !DILocation(line: 819, column: 25, scope: !3085)
!3087 = !DILocation(line: 819, column: 21, scope: !3080)
!3088 = !DILocation(line: 820, column: 21, scope: !3085)
!3089 = !DILocation(line: 821, column: 13, scope: !3080)
!3090 = !DILocation(line: 823, column: 14, scope: !3076)
!3091 = !DILocation(line: 823, column: 24, scope: !3076)
!3092 = !DILocation(line: 824, column: 21, scope: !3076)
!3093 = !DILocation(line: 824, column: 27, scope: !3076)
!3094 = !DILocation(line: 824, column: 19, scope: !3076)
!3095 = !DILocation(line: 825, column: 9, scope: !3076)
!3096 = !DILocation(line: 826, column: 18, scope: !3097)
!3097 = distinct !DILexicalBlock(scope: !3098, file: !1210, line: 826, column: 17)
!3098 = distinct !DILexicalBlock(scope: !3069, file: !1210, line: 825, column: 16)
!3099 = !DILocation(line: 826, column: 24, scope: !3097)
!3100 = !DILocation(line: 826, column: 17, scope: !3098)
!3101 = !DILocation(line: 827, column: 24, scope: !3102)
!3102 = distinct !DILexicalBlock(scope: !3097, file: !1210, line: 826, column: 46)
!3103 = !DILocation(line: 827, column: 17, scope: !3102)
!3104 = !DILocation(line: 831, column: 17, scope: !3102)
!3105 = !DILocation(line: 831, column: 23, scope: !3102)
!3106 = !DILocation(line: 831, column: 44, scope: !3102)
!3107 = !DILocation(line: 832, column: 13, scope: !3102)
!3108 = !DILocation(line: 835, column: 13, scope: !3109)
!3109 = distinct !DILexicalBlock(scope: !3048, file: !1210, line: 835, column: 13)
!3110 = !DILocation(line: 835, column: 19, scope: !3109)
!3111 = !DILocation(line: 835, column: 28, scope: !3109)
!3112 = !DILocation(line: 835, column: 33, scope: !3113)
!3113 = !DILexicalBlockFile(scope: !3109, file: !1210, discriminator: 1)
!3114 = !DILocation(line: 835, column: 40, scope: !3113)
!3115 = !DILocation(line: 835, column: 47, scope: !3113)
!3116 = !DILocation(line: 835, column: 52, scope: !3113)
!3117 = !DILocation(line: 835, column: 55, scope: !3118)
!3118 = !DILexicalBlockFile(scope: !3109, file: !1210, discriminator: 2)
!3119 = !DILocation(line: 835, column: 61, scope: !3118)
!3120 = !DILocation(line: 835, column: 86, scope: !3118)
!3121 = !DILocation(line: 835, column: 91, scope: !3118)
!3122 = !DILocation(line: 835, column: 84, scope: !3118)
!3123 = !DILocation(line: 835, column: 13, scope: !3118)
!3124 = !DILocation(line: 836, column: 13, scope: !3109)
!3125 = !DILocation(line: 808, column: 5, scope: !3126)
!3126 = !DILexicalBlockFile(scope: !2943, file: !1210, discriminator: 2)
!3127 = distinct !{!3127, !3043}
!3128 = !DILocation(line: 808, column: 5, scope: !3129)
!3129 = !DILexicalBlockFile(scope: !2943, file: !1210, discriminator: 3)
!3130 = !DILocation(line: 840, column: 9, scope: !3131)
!3131 = distinct !DILexicalBlock(scope: !2943, file: !1210, line: 840, column: 9)
!3132 = !DILocation(line: 840, column: 13, scope: !3131)
!3133 = !DILocation(line: 840, column: 9, scope: !2943)
!3134 = !DILocation(line: 842, column: 13, scope: !3135)
!3135 = distinct !DILexicalBlock(scope: !3136, file: !1210, line: 842, column: 13)
!3136 = distinct !DILexicalBlock(scope: !3131, file: !1210, line: 840, column: 19)
!3137 = !DILocation(line: 842, column: 20, scope: !3135)
!3138 = !DILocation(line: 842, column: 27, scope: !3135)
!3139 = !DILocation(line: 842, column: 13, scope: !3136)
!3140 = !DILocation(line: 843, column: 19, scope: !3135)
!3141 = !DILocation(line: 843, column: 24, scope: !3135)
!3142 = !DILocation(line: 843, column: 17, scope: !3135)
!3143 = !DILocation(line: 843, column: 13, scope: !3135)
!3144 = !DILocation(line: 845, column: 21, scope: !3135)
!3145 = !DILocation(line: 845, column: 27, scope: !3135)
!3146 = !DILocation(line: 845, column: 54, scope: !3135)
!3147 = !DILocation(line: 845, column: 59, scope: !3135)
!3148 = !DILocation(line: 845, column: 53, scope: !3135)
!3149 = !DILocation(line: 845, column: 51, scope: !3135)
!3150 = !DILocation(line: 845, column: 20, scope: !3135)
!3151 = !DILocation(line: 845, column: 68, scope: !3152)
!3152 = !DILexicalBlockFile(scope: !3135, file: !1210, discriminator: 1)
!3153 = !DILocation(line: 845, column: 73, scope: !3152)
!3154 = !DILocation(line: 845, column: 67, scope: !3152)
!3155 = !DILocation(line: 845, column: 20, scope: !3152)
!3156 = !DILocation(line: 845, column: 82, scope: !3157)
!3157 = !DILexicalBlockFile(scope: !3135, file: !1210, discriminator: 2)
!3158 = !DILocation(line: 845, column: 88, scope: !3157)
!3159 = !DILocation(line: 845, column: 20, scope: !3157)
!3160 = !DILocation(line: 845, column: 20, scope: !3161)
!3161 = !DILexicalBlockFile(scope: !3135, file: !1210, discriminator: 3)
!3162 = !DILocation(line: 845, column: 19, scope: !3161)
!3163 = !DILocation(line: 845, column: 17, scope: !3161)
!3164 = !DILocation(line: 846, column: 5, scope: !3136)
!3165 = !DILocation(line: 847, column: 5, scope: !2943)
!3166 = !DILocation(line: 847, column: 11, scope: !2943)
!3167 = !DILocation(line: 847, column: 34, scope: !2943)
!3168 = !DILocation(line: 848, column: 41, scope: !2943)
!3169 = !DILocation(line: 848, column: 45, scope: !2943)
!3170 = !DILocation(line: 848, column: 40, scope: !2943)
!3171 = !DILocation(line: 848, column: 53, scope: !3009)
!3172 = !DILocation(line: 848, column: 58, scope: !3009)
!3173 = !DILocation(line: 848, column: 65, scope: !3009)
!3174 = !DILocation(line: 848, column: 63, scope: !3009)
!3175 = !DILocation(line: 848, column: 40, scope: !3009)
!3176 = !DILocation(line: 848, column: 40, scope: !3126)
!3177 = !DILocation(line: 848, column: 40, scope: !3129)
!3178 = !DILocation(line: 848, column: 5, scope: !3129)
!3179 = !DILocation(line: 848, column: 11, scope: !3129)
!3180 = !DILocation(line: 848, column: 38, scope: !3129)
!3181 = !DILocation(line: 850, column: 12, scope: !2943)
!3182 = !DILocation(line: 850, column: 5, scope: !2943)
!3183 = distinct !DISubprogram(name: "avcodec_decode_audio4", scope: !1210, file: !1210, line: 860, type: !2927, isLocal: false, isDefinition: true, scopeLine: 864, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!3184 = !DILocalVariable(name: "avctx", arg: 1, scope: !3183, file: !1210, line: 860, type: !1213)
!3185 = !DILocation(line: 860, column: 43, scope: !3183)
!3186 = !DILocalVariable(name: "frame", arg: 2, scope: !3183, file: !1210, line: 861, type: !1107)
!3187 = !DILocation(line: 861, column: 56, scope: !3183)
!3188 = !DILocalVariable(name: "got_frame_ptr", arg: 3, scope: !3183, file: !1210, line: 862, type: !1354)
!3189 = !DILocation(line: 862, column: 52, scope: !3183)
!3190 = !DILocalVariable(name: "avpkt", arg: 4, scope: !3183, file: !1210, line: 863, type: !2280)
!3191 = !DILocation(line: 863, column: 63, scope: !3183)
!3192 = !DILocation(line: 865, column: 26, scope: !3183)
!3193 = !DILocation(line: 865, column: 33, scope: !3183)
!3194 = !DILocation(line: 865, column: 40, scope: !3183)
!3195 = !DILocation(line: 865, column: 55, scope: !3183)
!3196 = !DILocation(line: 865, column: 12, scope: !3183)
!3197 = !DILocation(line: 865, column: 5, scope: !3183)
!3198 = distinct !DISubprogram(name: "avcodec_decode_subtitle2", scope: !1210, file: !1210, line: 1025, type: !3199, isLocal: false, isDefinition: true, scopeLine: 1028, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!3199 = !DISubroutineType(types: !3200)
!3200 = !{!939, !1213, !3201, !1354, !1329}
!3201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3202, size: 64, align: 64)
!3202 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitle", file: !57, line: 3927, baseType: !1289)
!3203 = !DILocalVariable(name: "avctx", arg: 1, scope: !3198, file: !1210, line: 1025, type: !1213)
!3204 = !DILocation(line: 1025, column: 46, scope: !3198)
!3205 = !DILocalVariable(name: "sub", arg: 2, scope: !3198, file: !1210, line: 1025, type: !3201)
!3206 = !DILocation(line: 1025, column: 65, scope: !3198)
!3207 = !DILocalVariable(name: "got_sub_ptr", arg: 3, scope: !3198, file: !1210, line: 1026, type: !1354)
!3208 = !DILocation(line: 1026, column: 35, scope: !3198)
!3209 = !DILocalVariable(name: "avpkt", arg: 4, scope: !3198, file: !1210, line: 1027, type: !1329)
!3210 = !DILocation(line: 1027, column: 40, scope: !3198)
!3211 = !DILocalVariable(name: "i", scope: !3198, file: !1210, line: 1029, type: !939)
!3212 = !DILocation(line: 1029, column: 9, scope: !3198)
!3213 = !DILocalVariable(name: "ret", scope: !3198, file: !1210, line: 1029, type: !939)
!3214 = !DILocation(line: 1029, column: 12, scope: !3198)
!3215 = !DILocation(line: 1031, column: 10, scope: !3216)
!3216 = distinct !DILexicalBlock(scope: !3198, file: !1210, line: 1031, column: 9)
!3217 = !DILocation(line: 1031, column: 17, scope: !3216)
!3218 = !DILocation(line: 1031, column: 22, scope: !3216)
!3219 = !DILocation(line: 1031, column: 25, scope: !3220)
!3220 = !DILexicalBlockFile(scope: !3216, file: !1210, discriminator: 1)
!3221 = !DILocation(line: 1031, column: 32, scope: !3220)
!3222 = !DILocation(line: 1031, column: 9, scope: !3220)
!3223 = !DILocation(line: 1032, column: 16, scope: !3224)
!3224 = distinct !DILexicalBlock(scope: !3216, file: !1210, line: 1031, column: 38)
!3225 = !DILocation(line: 1032, column: 9, scope: !3224)
!3226 = !DILocation(line: 1033, column: 9, scope: !3224)
!3227 = !DILocation(line: 1035, column: 10, scope: !3228)
!3228 = distinct !DILexicalBlock(scope: !3198, file: !1210, line: 1035, column: 9)
!3229 = !DILocation(line: 1035, column: 17, scope: !3228)
!3230 = !DILocation(line: 1035, column: 9, scope: !3198)
!3231 = !DILocation(line: 1036, column: 9, scope: !3228)
!3232 = !DILocation(line: 1037, column: 9, scope: !3233)
!3233 = distinct !DILexicalBlock(scope: !3198, file: !1210, line: 1037, column: 9)
!3234 = !DILocation(line: 1037, column: 16, scope: !3233)
!3235 = !DILocation(line: 1037, column: 23, scope: !3233)
!3236 = !DILocation(line: 1037, column: 28, scope: !3233)
!3237 = !DILocation(line: 1037, column: 9, scope: !3198)
!3238 = !DILocation(line: 1038, column: 16, scope: !3239)
!3239 = distinct !DILexicalBlock(scope: !3233, file: !1210, line: 1037, column: 54)
!3240 = !DILocation(line: 1038, column: 9, scope: !3239)
!3241 = !DILocation(line: 1039, column: 9, scope: !3239)
!3242 = !DILocation(line: 1042, column: 6, scope: !3198)
!3243 = !DILocation(line: 1042, column: 18, scope: !3198)
!3244 = !DILocation(line: 1043, column: 27, scope: !3198)
!3245 = !DILocation(line: 1043, column: 5, scope: !3198)
!3246 = !DILocation(line: 1045, column: 10, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !3198, file: !1210, line: 1045, column: 9)
!3248 = !DILocation(line: 1045, column: 17, scope: !3247)
!3249 = !DILocation(line: 1045, column: 24, scope: !3247)
!3250 = !DILocation(line: 1045, column: 37, scope: !3247)
!3251 = !DILocation(line: 1045, column: 49, scope: !3247)
!3252 = !DILocation(line: 1045, column: 52, scope: !3253)
!3253 = !DILexicalBlockFile(scope: !3247, file: !1210, discriminator: 1)
!3254 = !DILocation(line: 1045, column: 59, scope: !3253)
!3255 = !DILocation(line: 1045, column: 9, scope: !3253)
!3256 = !DILocalVariable(name: "pkt_recoded", scope: !3257, file: !1210, line: 1046, type: !1330)
!3257 = distinct !DILexicalBlock(scope: !3247, file: !1210, line: 1045, column: 65)
!3258 = !DILocation(line: 1046, column: 18, scope: !3257)
!3259 = !DILocation(line: 1046, column: 33, scope: !3257)
!3260 = !DILocation(line: 1046, column: 32, scope: !3257)
!3261 = !DILocation(line: 1048, column: 31, scope: !3257)
!3262 = !DILocation(line: 1048, column: 52, scope: !3257)
!3263 = !DILocation(line: 1048, column: 15, scope: !3257)
!3264 = !DILocation(line: 1048, column: 13, scope: !3257)
!3265 = !DILocation(line: 1049, column: 13, scope: !3266)
!3266 = distinct !DILexicalBlock(scope: !3257, file: !1210, line: 1049, column: 13)
!3267 = !DILocation(line: 1049, column: 17, scope: !3266)
!3268 = !DILocation(line: 1049, column: 13, scope: !3257)
!3269 = !DILocation(line: 1050, column: 14, scope: !3270)
!3270 = distinct !DILexicalBlock(scope: !3266, file: !1210, line: 1049, column: 22)
!3271 = !DILocation(line: 1050, column: 26, scope: !3270)
!3272 = !DILocation(line: 1051, column: 9, scope: !3270)
!3273 = !DILocation(line: 1052, column: 41, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !3266, file: !1210, line: 1051, column: 16)
!3275 = !DILocation(line: 1052, column: 48, scope: !3274)
!3276 = !DILocation(line: 1052, column: 20, scope: !3274)
!3277 = !DILocation(line: 1052, column: 18, scope: !3274)
!3278 = !DILocation(line: 1053, column: 18, scope: !3279)
!3279 = distinct !DILexicalBlock(scope: !3274, file: !1210, line: 1053, column: 18)
!3280 = !DILocation(line: 1053, column: 22, scope: !3279)
!3281 = !DILocation(line: 1053, column: 18, scope: !3274)
!3282 = !DILocation(line: 1054, column: 24, scope: !3279)
!3283 = !DILocation(line: 1054, column: 17, scope: !3279)
!3284 = !DILocation(line: 1056, column: 17, scope: !3285)
!3285 = distinct !DILexicalBlock(scope: !3274, file: !1210, line: 1056, column: 17)
!3286 = !DILocation(line: 1056, column: 24, scope: !3285)
!3287 = !DILocation(line: 1056, column: 37, scope: !3285)
!3288 = !DILocation(line: 1056, column: 41, scope: !3285)
!3289 = !DILocation(line: 1056, column: 44, scope: !3290)
!3290 = !DILexicalBlockFile(scope: !3285, file: !1210, discriminator: 1)
!3291 = !DILocation(line: 1056, column: 51, scope: !3290)
!3292 = !DILocation(line: 1056, column: 55, scope: !3290)
!3293 = !DILocation(line: 1056, column: 17, scope: !3290)
!3294 = !DILocation(line: 1057, column: 41, scope: !3285)
!3295 = !DILocation(line: 1057, column: 48, scope: !3285)
!3296 = !DILocation(line: 1058, column: 41, scope: !3285)
!3297 = !DILocation(line: 1058, column: 48, scope: !3285)
!3298 = !DILocation(line: 1058, column: 74, scope: !3285)
!3299 = !DILocation(line: 1057, column: 28, scope: !3285)
!3300 = !DILocation(line: 1057, column: 17, scope: !3285)
!3301 = !DILocation(line: 1057, column: 22, scope: !3285)
!3302 = !DILocation(line: 1057, column: 26, scope: !3285)
!3303 = !DILocation(line: 1059, column: 19, scope: !3274)
!3304 = !DILocation(line: 1059, column: 26, scope: !3274)
!3305 = !DILocation(line: 1059, column: 33, scope: !3274)
!3306 = !DILocation(line: 1059, column: 40, scope: !3274)
!3307 = !DILocation(line: 1059, column: 47, scope: !3274)
!3308 = !DILocation(line: 1059, column: 52, scope: !3274)
!3309 = !DILocation(line: 1059, column: 17, scope: !3274)
!3310 = !DILocation(line: 1064, column: 17, scope: !3311)
!3311 = distinct !DILexicalBlock(scope: !3274, file: !1210, line: 1064, column: 17)
!3312 = !DILocation(line: 1064, column: 24, scope: !3311)
!3313 = !DILocation(line: 1064, column: 40, scope: !3311)
!3314 = !DILocation(line: 1065, column: 17, scope: !3311)
!3315 = !DILocation(line: 1065, column: 21, scope: !3316)
!3316 = !DILexicalBlockFile(scope: !3311, file: !1210, discriminator: 1)
!3317 = !DILocation(line: 1065, column: 20, scope: !3316)
!3318 = !DILocation(line: 1065, column: 33, scope: !3316)
!3319 = !DILocation(line: 1065, column: 36, scope: !3320)
!3320 = !DILexicalBlockFile(scope: !3311, file: !1210, discriminator: 2)
!3321 = !DILocation(line: 1065, column: 41, scope: !3320)
!3322 = !DILocation(line: 1064, column: 17, scope: !3323)
!3323 = !DILexicalBlockFile(scope: !3274, file: !1210, discriminator: 1)
!3324 = !DILocalVariable(name: "tb", scope: !3325, file: !1210, line: 1066, type: !1232)
!3325 = distinct !DILexicalBlock(scope: !3311, file: !1210, line: 1065, column: 52)
!3326 = !DILocation(line: 1066, column: 34, scope: !3325)
!3327 = !DILocation(line: 1066, column: 39, scope: !3325)
!3328 = !DILocation(line: 1066, column: 46, scope: !3325)
!3329 = !DILocation(line: 1066, column: 59, scope: !3325)
!3330 = !DILocation(line: 1066, column: 65, scope: !3331)
!3331 = !DILexicalBlockFile(scope: !3325, file: !1210, discriminator: 1)
!3332 = !DILocation(line: 1066, column: 72, scope: !3331)
!3333 = !DILocation(line: 1066, column: 39, scope: !3331)
!3334 = !DILocation(line: 1067, column: 65, scope: !3325)
!3335 = !DILocation(line: 1067, column: 72, scope: !3325)
!3336 = !DILocation(line: 1066, column: 39, scope: !3337)
!3337 = !DILexicalBlockFile(scope: !3325, file: !1210, discriminator: 2)
!3338 = !DILocalVariable(name: "err", scope: !3325, file: !1210, line: 1068, type: !939)
!3339 = !DILocation(line: 1068, column: 21, scope: !3325)
!3340 = !DILocation(line: 1068, column: 55, scope: !3325)
!3341 = !DILocation(line: 1068, column: 60, scope: !3325)
!3342 = !DILocation(line: 1068, column: 27, scope: !3325)
!3343 = !DILocation(line: 1069, column: 21, scope: !3344)
!3344 = distinct !DILexicalBlock(scope: !3325, file: !1210, line: 1069, column: 21)
!3345 = !DILocation(line: 1069, column: 25, scope: !3344)
!3346 = !DILocation(line: 1069, column: 21, scope: !3325)
!3347 = !DILocation(line: 1070, column: 27, scope: !3344)
!3348 = !DILocation(line: 1070, column: 25, scope: !3344)
!3349 = !DILocation(line: 1070, column: 21, scope: !3344)
!3350 = !DILocation(line: 1071, column: 13, scope: !3325)
!3351 = !DILocation(line: 1074, column: 17, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !3274, file: !1210, line: 1074, column: 17)
!3353 = !DILocation(line: 1074, column: 22, scope: !3352)
!3354 = !DILocation(line: 1074, column: 32, scope: !3352)
!3355 = !DILocation(line: 1074, column: 36, scope: !3356)
!3356 = !DILexicalBlockFile(scope: !3352, file: !1210, discriminator: 1)
!3357 = !DILocation(line: 1074, column: 41, scope: !3356)
!3358 = !DILocation(line: 1074, column: 58, scope: !3356)
!3359 = !DILocation(line: 1074, column: 61, scope: !3360)
!3360 = !DILexicalBlockFile(scope: !3352, file: !1210, discriminator: 2)
!3361 = !DILocation(line: 1074, column: 68, scope: !3360)
!3362 = !DILocation(line: 1074, column: 77, scope: !3360)
!3363 = !DILocation(line: 1075, column: 17, scope: !3352)
!3364 = !DILocation(line: 1075, column: 24, scope: !3352)
!3365 = !DILocation(line: 1075, column: 37, scope: !3352)
!3366 = !DILocation(line: 1074, column: 17, scope: !3367)
!3367 = !DILexicalBlockFile(scope: !3274, file: !1210, discriminator: 3)
!3368 = !DILocalVariable(name: "ms", scope: !3369, file: !1210, line: 1076, type: !980)
!3369 = distinct !DILexicalBlock(scope: !3352, file: !1210, line: 1075, column: 42)
!3370 = !DILocation(line: 1076, column: 28, scope: !3369)
!3371 = !DILocation(line: 1077, column: 54, scope: !3369)
!3372 = !DILocation(line: 1077, column: 61, scope: !3369)
!3373 = !DILocation(line: 1078, column: 54, scope: !3369)
!3374 = !DILocation(line: 1078, column: 61, scope: !3369)
!3375 = !DILocation(line: 1077, column: 41, scope: !3369)
!3376 = !DILocation(line: 1077, column: 17, scope: !3369)
!3377 = !DILocation(line: 1077, column: 22, scope: !3369)
!3378 = !DILocation(line: 1077, column: 39, scope: !3369)
!3379 = !DILocation(line: 1079, column: 13, scope: !3369)
!3380 = !DILocation(line: 1081, column: 17, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3274, file: !1210, line: 1081, column: 17)
!3382 = !DILocation(line: 1081, column: 24, scope: !3381)
!3383 = !DILocation(line: 1081, column: 42, scope: !3381)
!3384 = !DILocation(line: 1081, column: 48, scope: !3381)
!3385 = !DILocation(line: 1081, column: 17, scope: !3274)
!3386 = !DILocation(line: 1082, column: 17, scope: !3381)
!3387 = !DILocation(line: 1082, column: 22, scope: !3381)
!3388 = !DILocation(line: 1082, column: 29, scope: !3381)
!3389 = !DILocation(line: 1083, column: 22, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3381, file: !1210, line: 1083, column: 22)
!3391 = !DILocation(line: 1083, column: 29, scope: !3390)
!3392 = !DILocation(line: 1083, column: 47, scope: !3390)
!3393 = !DILocation(line: 1083, column: 53, scope: !3390)
!3394 = !DILocation(line: 1083, column: 22, scope: !3381)
!3395 = !DILocation(line: 1084, column: 17, scope: !3390)
!3396 = !DILocation(line: 1084, column: 22, scope: !3390)
!3397 = !DILocation(line: 1084, column: 29, scope: !3390)
!3398 = !DILocation(line: 1086, column: 20, scope: !3399)
!3399 = distinct !DILexicalBlock(scope: !3274, file: !1210, line: 1086, column: 13)
!3400 = !DILocation(line: 1086, column: 18, scope: !3399)
!3401 = !DILocation(line: 1086, column: 25, scope: !3402)
!3402 = !DILexicalBlockFile(scope: !3403, file: !1210, discriminator: 1)
!3403 = distinct !DILexicalBlock(scope: !3399, file: !1210, line: 1086, column: 13)
!3404 = !DILocation(line: 1086, column: 29, scope: !3402)
!3405 = !DILocation(line: 1086, column: 34, scope: !3402)
!3406 = !DILocation(line: 1086, column: 27, scope: !3402)
!3407 = !DILocation(line: 1086, column: 13, scope: !3402)
!3408 = !DILocation(line: 1087, column: 21, scope: !3409)
!3409 = distinct !DILexicalBlock(scope: !3410, file: !1210, line: 1087, column: 21)
!3410 = distinct !DILexicalBlock(scope: !3403, file: !1210, line: 1086, column: 50)
!3411 = !DILocation(line: 1087, column: 28, scope: !3409)
!3412 = !DILocation(line: 1087, column: 45, scope: !3409)
!3413 = !DILocation(line: 1087, column: 50, scope: !3409)
!3414 = !DILocation(line: 1088, column: 32, scope: !3409)
!3415 = !DILocation(line: 1088, column: 21, scope: !3409)
!3416 = !DILocation(line: 1088, column: 26, scope: !3409)
!3417 = !DILocation(line: 1088, column: 36, scope: !3409)
!3418 = !DILocation(line: 1088, column: 40, scope: !3409)
!3419 = !DILocation(line: 1088, column: 66, scope: !3420)
!3420 = !DILexicalBlockFile(scope: !3409, file: !1210, discriminator: 1)
!3421 = !DILocation(line: 1088, column: 55, scope: !3420)
!3422 = !DILocation(line: 1088, column: 60, scope: !3420)
!3423 = !DILocation(line: 1088, column: 70, scope: !3420)
!3424 = !DILocation(line: 1088, column: 44, scope: !3420)
!3425 = !DILocation(line: 1087, column: 21, scope: !3426)
!3426 = !DILexicalBlockFile(scope: !3410, file: !1210, discriminator: 1)
!3427 = !DILocation(line: 1089, column: 28, scope: !3428)
!3428 = distinct !DILexicalBlock(scope: !3409, file: !1210, line: 1088, column: 76)
!3429 = !DILocation(line: 1089, column: 21, scope: !3428)
!3430 = !DILocation(line: 1092, column: 37, scope: !3428)
!3431 = !DILocation(line: 1092, column: 21, scope: !3428)
!3432 = !DILocation(line: 1093, column: 25, scope: !3428)
!3433 = !DILocation(line: 1094, column: 21, scope: !3428)
!3434 = !DILocation(line: 1096, column: 13, scope: !3410)
!3435 = !DILocation(line: 1086, column: 46, scope: !3436)
!3436 = !DILexicalBlockFile(scope: !3403, file: !1210, discriminator: 2)
!3437 = !DILocation(line: 1086, column: 13, scope: !3436)
!3438 = distinct !{!3438, !3439}
!3439 = !DILocation(line: 1086, column: 13, scope: !3274)
!3440 = !DILocation(line: 1098, column: 17, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3274, file: !1210, line: 1098, column: 17)
!3442 = !DILocation(line: 1098, column: 24, scope: !3441)
!3443 = !DILocation(line: 1098, column: 44, scope: !3441)
!3444 = !DILocation(line: 1098, column: 29, scope: !3441)
!3445 = !DILocation(line: 1098, column: 17, scope: !3274)
!3446 = !DILocation(line: 1100, column: 29, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3441, file: !1210, line: 1098, column: 50)
!3448 = !DILocation(line: 1100, column: 39, scope: !3447)
!3449 = !DILocation(line: 1101, column: 29, scope: !3447)
!3450 = !DILocation(line: 1101, column: 45, scope: !3447)
!3451 = !DILocation(line: 1103, column: 17, scope: !3447)
!3452 = !DILocation(line: 1104, column: 13, scope: !3447)
!3453 = !DILocation(line: 1107, column: 14, scope: !3454)
!3454 = distinct !DILexicalBlock(scope: !3257, file: !1210, line: 1107, column: 13)
!3455 = !DILocation(line: 1107, column: 13, scope: !3454)
!3456 = !DILocation(line: 1107, column: 13, scope: !3257)
!3457 = !DILocation(line: 1108, column: 13, scope: !3454)
!3458 = !DILocation(line: 1108, column: 20, scope: !3454)
!3459 = !DILocation(line: 1108, column: 32, scope: !3454)
!3460 = !DILocation(line: 1109, column: 5, scope: !3257)
!3461 = !DILocation(line: 1111, column: 12, scope: !3198)
!3462 = !DILocation(line: 1111, column: 5, scope: !3198)
!3463 = !DILocation(line: 1112, column: 1, scope: !3198)
!3464 = distinct !DISubprogram(name: "get_subtitle_defaults", scope: !1210, file: !1210, line: 868, type: !3465, isLocal: true, isDefinition: true, scopeLine: 869, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!3465 = !DISubroutineType(types: !3466)
!3466 = !{null, !3201}
!3467 = !DILocalVariable(name: "sub", arg: 1, scope: !3464, file: !1210, line: 868, type: !3201)
!3468 = !DILocation(line: 868, column: 47, scope: !3464)
!3469 = !DILocation(line: 870, column: 12, scope: !3464)
!3470 = !DILocation(line: 870, column: 5, scope: !3464)
!3471 = !DILocation(line: 871, column: 5, scope: !3464)
!3472 = !DILocation(line: 871, column: 10, scope: !3464)
!3473 = !DILocation(line: 871, column: 14, scope: !3464)
!3474 = !DILocation(line: 872, column: 1, scope: !3464)
!3475 = distinct !DISubprogram(name: "recode_subtitle", scope: !1210, file: !1210, line: 875, type: !3476, isLocal: true, isDefinition: true, scopeLine: 877, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!3476 = !DISubroutineType(types: !3477)
!3477 = !{!939, !1213, !1329, !2280}
!3478 = !DILocalVariable(name: "avctx", arg: 1, scope: !3475, file: !1210, line: 875, type: !1213)
!3479 = !DILocation(line: 875, column: 44, scope: !3475)
!3480 = !DILocalVariable(name: "outpkt", arg: 2, scope: !3475, file: !1210, line: 876, type: !1329)
!3481 = !DILocation(line: 876, column: 38, scope: !3475)
!3482 = !DILocalVariable(name: "inpkt", arg: 3, scope: !3475, file: !1210, line: 876, type: !2280)
!3483 = !DILocation(line: 876, column: 62, scope: !3475)
!3484 = !DILocalVariable(name: "cd", scope: !3475, file: !1210, line: 879, type: !1202)
!3485 = !DILocation(line: 879, column: 13, scope: !3475)
!3486 = !DILocalVariable(name: "ret", scope: !3475, file: !1210, line: 880, type: !939)
!3487 = !DILocation(line: 880, column: 9, scope: !3475)
!3488 = !DILocalVariable(name: "inb", scope: !3475, file: !1210, line: 881, type: !1205)
!3489 = !DILocation(line: 881, column: 11, scope: !3475)
!3490 = !DILocalVariable(name: "outb", scope: !3475, file: !1210, line: 881, type: !1205)
!3491 = !DILocation(line: 881, column: 17, scope: !3475)
!3492 = !DILocalVariable(name: "inl", scope: !3475, file: !1210, line: 882, type: !1186)
!3493 = !DILocation(line: 882, column: 12, scope: !3475)
!3494 = !DILocalVariable(name: "outl", scope: !3475, file: !1210, line: 882, type: !1186)
!3495 = !DILocation(line: 882, column: 17, scope: !3475)
!3496 = !DILocalVariable(name: "tmp", scope: !3475, file: !1210, line: 883, type: !1330)
!3497 = !DILocation(line: 883, column: 14, scope: !3475)
!3498 = !DILocation(line: 886, column: 9, scope: !3499)
!3499 = distinct !DILexicalBlock(scope: !3475, file: !1210, line: 886, column: 9)
!3500 = !DILocation(line: 886, column: 16, scope: !3499)
!3501 = !DILocation(line: 886, column: 33, scope: !3499)
!3502 = !DILocation(line: 886, column: 38, scope: !3499)
!3503 = !DILocation(line: 886, column: 41, scope: !3504)
!3504 = !DILexicalBlockFile(scope: !3499, file: !1210, discriminator: 1)
!3505 = !DILocation(line: 886, column: 48, scope: !3504)
!3506 = !DILocation(line: 886, column: 53, scope: !3504)
!3507 = !DILocation(line: 886, column: 9, scope: !3504)
!3508 = !DILocation(line: 887, column: 9, scope: !3499)
!3509 = !DILocation(line: 890, column: 30, scope: !3475)
!3510 = !DILocation(line: 890, column: 37, scope: !3475)
!3511 = !DILocation(line: 890, column: 10, scope: !3475)
!3512 = !DILocation(line: 890, column: 8, scope: !3475)
!3513 = !DILocation(line: 891, column: 5, scope: !3475)
!3514 = distinct !{!3514, !3513}
!3515 = !DILocation(line: 891, column: 16, scope: !3516)
!3516 = !DILexicalBlockFile(scope: !3517, file: !1210, discriminator: 1)
!3517 = distinct !DILexicalBlock(scope: !3518, file: !1210, line: 891, column: 14)
!3518 = distinct !DILexicalBlock(scope: !3475, file: !1210, line: 891, column: 8)
!3519 = !DILocation(line: 891, column: 19, scope: !3516)
!3520 = !DILocation(line: 891, column: 14, scope: !3516)
!3521 = !DILocation(line: 891, column: 38, scope: !3522)
!3522 = !DILexicalBlockFile(scope: !3523, file: !1210, discriminator: 2)
!3523 = distinct !DILexicalBlock(scope: !3517, file: !1210, line: 891, column: 36)
!3524 = !DILocation(line: 891, column: 93, scope: !3525)
!3525 = !DILexicalBlockFile(scope: !3522, file: !1210, discriminator: 4)
!3526 = !DILocation(line: 891, column: 93, scope: !3522)
!3527 = !DILocation(line: 891, column: 104, scope: !3528)
!3528 = !DILexicalBlockFile(scope: !3518, file: !1210, discriminator: 3)
!3529 = !DILocation(line: 893, column: 11, scope: !3475)
!3530 = !DILocation(line: 893, column: 18, scope: !3475)
!3531 = !DILocation(line: 893, column: 9, scope: !3475)
!3532 = !DILocation(line: 894, column: 11, scope: !3475)
!3533 = !DILocation(line: 894, column: 18, scope: !3475)
!3534 = !DILocation(line: 894, column: 9, scope: !3475)
!3535 = !DILocation(line: 896, column: 9, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3475, file: !1210, line: 896, column: 9)
!3537 = !DILocation(line: 896, column: 13, scope: !3536)
!3538 = !DILocation(line: 896, column: 9, scope: !3475)
!3539 = !DILocation(line: 897, column: 16, scope: !3540)
!3540 = distinct !DILexicalBlock(scope: !3536, file: !1210, line: 896, column: 37)
!3541 = !DILocation(line: 897, column: 9, scope: !3540)
!3542 = !DILocation(line: 898, column: 13, scope: !3540)
!3543 = !DILocation(line: 899, column: 9, scope: !3540)
!3544 = !DILocation(line: 902, column: 31, scope: !3475)
!3545 = !DILocation(line: 902, column: 35, scope: !3475)
!3546 = !DILocation(line: 902, column: 11, scope: !3475)
!3547 = !DILocation(line: 902, column: 9, scope: !3475)
!3548 = !DILocation(line: 903, column: 9, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !3475, file: !1210, line: 903, column: 9)
!3550 = !DILocation(line: 903, column: 13, scope: !3549)
!3551 = !DILocation(line: 903, column: 9, scope: !3475)
!3552 = !DILocation(line: 904, column: 9, scope: !3549)
!3553 = !DILocation(line: 905, column: 23, scope: !3475)
!3554 = !DILocation(line: 905, column: 5, scope: !3475)
!3555 = !DILocation(line: 905, column: 13, scope: !3475)
!3556 = !DILocation(line: 905, column: 17, scope: !3475)
!3557 = !DILocation(line: 906, column: 24, scope: !3475)
!3558 = !DILocation(line: 906, column: 5, scope: !3475)
!3559 = !DILocation(line: 906, column: 13, scope: !3475)
!3560 = !DILocation(line: 906, column: 18, scope: !3475)
!3561 = !DILocation(line: 907, column: 24, scope: !3475)
!3562 = !DILocation(line: 907, column: 5, scope: !3475)
!3563 = !DILocation(line: 907, column: 13, scope: !3475)
!3564 = !DILocation(line: 907, column: 18, scope: !3475)
!3565 = !DILocation(line: 908, column: 12, scope: !3475)
!3566 = !DILocation(line: 908, column: 20, scope: !3475)
!3567 = !DILocation(line: 908, column: 10, scope: !3475)
!3568 = !DILocation(line: 909, column: 12, scope: !3475)
!3569 = !DILocation(line: 909, column: 20, scope: !3475)
!3570 = !DILocation(line: 909, column: 10, scope: !3475)
!3571 = !DILocation(line: 911, column: 15, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !3475, file: !1210, line: 911, column: 9)
!3573 = !DILocation(line: 911, column: 9, scope: !3572)
!3574 = !DILocation(line: 911, column: 45, scope: !3572)
!3575 = !DILocation(line: 911, column: 59, scope: !3572)
!3576 = !DILocation(line: 912, column: 15, scope: !3572)
!3577 = !DILocation(line: 912, column: 9, scope: !3572)
!3578 = !DILocation(line: 912, column: 44, scope: !3572)
!3579 = !DILocation(line: 912, column: 58, scope: !3572)
!3580 = !DILocation(line: 913, column: 9, scope: !3572)
!3581 = !DILocation(line: 913, column: 17, scope: !3572)
!3582 = !DILocation(line: 913, column: 25, scope: !3572)
!3583 = !DILocation(line: 913, column: 14, scope: !3572)
!3584 = !DILocation(line: 913, column: 30, scope: !3572)
!3585 = !DILocation(line: 913, column: 33, scope: !3586)
!3586 = !DILexicalBlockFile(scope: !3572, file: !1210, discriminator: 1)
!3587 = !DILocation(line: 913, column: 37, scope: !3586)
!3588 = !DILocation(line: 911, column: 9, scope: !3589)
!3589 = !DILexicalBlockFile(scope: !3475, file: !1210, discriminator: 1)
!3590 = !DILocation(line: 914, column: 16, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3572, file: !1210, line: 913, column: 43)
!3592 = !DILocation(line: 914, column: 15, scope: !3591)
!3593 = !DILocation(line: 914, column: 18, scope: !3591)
!3594 = !DILocation(line: 914, column: 16, scope: !3595)
!3595 = !DILexicalBlockFile(scope: !3591, file: !1210, discriminator: 1)
!3596 = !DILocation(line: 914, column: 16, scope: !3597)
!3597 = !DILexicalBlockFile(scope: !3591, file: !1210, discriminator: 2)
!3598 = !DILocation(line: 914, column: 15, scope: !3597)
!3599 = !DILocation(line: 914, column: 36, scope: !3597)
!3600 = !DILocation(line: 914, column: 16, scope: !3601)
!3601 = !DILexicalBlockFile(scope: !3591, file: !1210, discriminator: 3)
!3602 = !DILocation(line: 914, column: 13, scope: !3601)
!3603 = !DILocation(line: 915, column: 16, scope: !3591)
!3604 = !DILocation(line: 916, column: 38, scope: !3591)
!3605 = !DILocation(line: 916, column: 45, scope: !3591)
!3606 = !DILocation(line: 916, column: 51, scope: !3591)
!3607 = !DILocation(line: 916, column: 58, scope: !3591)
!3608 = !DILocation(line: 915, column: 9, scope: !3591)
!3609 = !DILocation(line: 917, column: 9, scope: !3591)
!3610 = !DILocation(line: 918, column: 9, scope: !3591)
!3611 = !DILocation(line: 920, column: 21, scope: !3475)
!3612 = !DILocation(line: 920, column: 5, scope: !3475)
!3613 = !DILocation(line: 920, column: 13, scope: !3475)
!3614 = !DILocation(line: 920, column: 18, scope: !3475)
!3615 = !DILocation(line: 921, column: 12, scope: !3475)
!3616 = !DILocation(line: 921, column: 20, scope: !3475)
!3617 = !DILocation(line: 921, column: 27, scope: !3475)
!3618 = !DILocation(line: 921, column: 35, scope: !3475)
!3619 = !DILocation(line: 921, column: 25, scope: !3475)
!3620 = !DILocation(line: 921, column: 44, scope: !3475)
!3621 = !DILocation(line: 921, column: 5, scope: !3475)
!3622 = !DILocation(line: 924, column: 9, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3475, file: !1210, line: 924, column: 9)
!3624 = !DILocation(line: 924, column: 12, scope: !3623)
!3625 = !DILocation(line: 924, column: 9, scope: !3475)
!3626 = !DILocation(line: 925, column: 21, scope: !3623)
!3627 = !DILocation(line: 925, column: 9, scope: !3623)
!3628 = !DILocation(line: 926, column: 12, scope: !3475)
!3629 = !DILocation(line: 926, column: 5, scope: !3475)
!3630 = !DILocation(line: 931, column: 1, scope: !3475)
!3631 = distinct !DISubprogram(name: "convert_sub_to_old_ass_form", scope: !1210, file: !1210, line: 967, type: !3632, isLocal: true, isDefinition: true, scopeLine: 968, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!3632 = !DISubroutineType(types: !3633)
!3633 = !{!939, !3201, !2280, !980}
!3634 = !DILocalVariable(name: "sub", arg: 1, scope: !3631, file: !1210, line: 967, type: !3201)
!3635 = !DILocation(line: 967, column: 52, scope: !3631)
!3636 = !DILocalVariable(name: "pkt", arg: 2, scope: !3631, file: !1210, line: 967, type: !2280)
!3637 = !DILocation(line: 967, column: 73, scope: !3631)
!3638 = !DILocalVariable(name: "tb", arg: 3, scope: !3631, file: !1210, line: 967, type: !980)
!3639 = !DILocation(line: 967, column: 89, scope: !3631)
!3640 = !DILocalVariable(name: "i", scope: !3631, file: !1210, line: 969, type: !939)
!3641 = !DILocation(line: 969, column: 9, scope: !3631)
!3642 = !DILocalVariable(name: "buf", scope: !3631, file: !1210, line: 970, type: !3643)
!3643 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBPrint", file: !3644, line: 82, baseType: !3645)
!3644 = !DIFile(filename: "./libavutil/bprint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!3645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBPrint", file: !3644, line: 82, size: 8192, align: 64, elements: !3646)
!3646 = !{!3647, !3648, !3649, !3650, !3651, !3655}
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3645, file: !3644, line: 82, baseType: !1205, size: 64, align: 64)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3645, file: !3644, line: 82, baseType: !940, size: 32, align: 32, offset: 64)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3645, file: !3644, line: 82, baseType: !940, size: 32, align: 32, offset: 96)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "size_max", scope: !3645, file: !3644, line: 82, baseType: !940, size: 32, align: 32, offset: 128)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_internal_buffer", scope: !3645, file: !3644, line: 82, baseType: !3652, size: 8, align: 8, offset: 160)
!3652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !957, size: 8, align: 8, elements: !3653)
!3653 = !{!3654}
!3654 = !DISubrange(count: 1)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_padding", scope: !3645, file: !3644, line: 82, baseType: !3656, size: 8000, align: 8, offset: 168)
!3656 = !DICompositeType(tag: DW_TAG_array_type, baseType: !957, size: 8000, align: 8, elements: !3657)
!3657 = !{!3658}
!3658 = !DISubrange(count: 1000)
!3659 = !DILocation(line: 970, column: 14, scope: !3631)
!3660 = !DILocation(line: 972, column: 5, scope: !3631)
!3661 = !DILocation(line: 974, column: 12, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3631, file: !1210, line: 974, column: 5)
!3663 = !DILocation(line: 974, column: 10, scope: !3662)
!3664 = !DILocation(line: 974, column: 17, scope: !3665)
!3665 = !DILexicalBlockFile(scope: !3666, file: !1210, discriminator: 1)
!3666 = distinct !DILexicalBlock(scope: !3662, file: !1210, line: 974, column: 5)
!3667 = !DILocation(line: 974, column: 21, scope: !3665)
!3668 = !DILocation(line: 974, column: 26, scope: !3665)
!3669 = !DILocation(line: 974, column: 19, scope: !3665)
!3670 = !DILocation(line: 974, column: 5, scope: !3665)
!3671 = !DILocalVariable(name: "final_dialog", scope: !3672, file: !1210, line: 975, type: !1205)
!3672 = distinct !DILexicalBlock(scope: !3666, file: !1210, line: 974, column: 42)
!3673 = !DILocation(line: 975, column: 15, scope: !3672)
!3674 = !DILocalVariable(name: "dialog", scope: !3672, file: !1210, line: 976, type: !955)
!3675 = !DILocation(line: 976, column: 21, scope: !3672)
!3676 = !DILocalVariable(name: "rect", scope: !3672, file: !1210, line: 977, type: !1299)
!3677 = !DILocation(line: 977, column: 25, scope: !3672)
!3678 = !DILocation(line: 977, column: 43, scope: !3672)
!3679 = !DILocation(line: 977, column: 32, scope: !3672)
!3680 = !DILocation(line: 977, column: 37, scope: !3672)
!3681 = !DILocalVariable(name: "ts_start", scope: !3672, file: !1210, line: 978, type: !939)
!3682 = !DILocation(line: 978, column: 13, scope: !3672)
!3683 = !DILocalVariable(name: "ts_duration", scope: !3672, file: !1210, line: 978, type: !939)
!3684 = !DILocation(line: 978, column: 23, scope: !3672)
!3685 = !DILocalVariable(name: "layer", scope: !3672, file: !1210, line: 979, type: !943)
!3686 = !DILocation(line: 979, column: 18, scope: !3672)
!3687 = !DILocation(line: 981, column: 13, scope: !3688)
!3688 = distinct !DILexicalBlock(scope: !3672, file: !1210, line: 981, column: 13)
!3689 = !DILocation(line: 981, column: 19, scope: !3688)
!3690 = !DILocation(line: 981, column: 24, scope: !3688)
!3691 = !DILocation(line: 981, column: 40, scope: !3688)
!3692 = !DILocation(line: 981, column: 52, scope: !3693)
!3693 = !DILexicalBlockFile(scope: !3688, file: !1210, discriminator: 1)
!3694 = !DILocation(line: 981, column: 58, scope: !3693)
!3695 = !DILocation(line: 981, column: 44, scope: !3693)
!3696 = !DILocation(line: 981, column: 13, scope: !3693)
!3697 = !DILocation(line: 982, column: 13, scope: !3688)
!3698 = !DILocation(line: 984, column: 9, scope: !3672)
!3699 = !DILocation(line: 987, column: 25, scope: !3672)
!3700 = !DILocation(line: 987, column: 31, scope: !3672)
!3701 = !DILocation(line: 987, column: 18, scope: !3672)
!3702 = !DILocation(line: 987, column: 16, scope: !3672)
!3703 = !DILocation(line: 988, column: 14, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3672, file: !1210, line: 988, column: 13)
!3705 = !DILocation(line: 988, column: 13, scope: !3672)
!3706 = !DILocation(line: 989, column: 13, scope: !3704)
!3707 = !DILocation(line: 990, column: 15, scope: !3672)
!3708 = !DILocation(line: 993, column: 24, scope: !3672)
!3709 = !DILocation(line: 993, column: 17, scope: !3672)
!3710 = !DILocation(line: 993, column: 15, scope: !3672)
!3711 = !DILocation(line: 994, column: 14, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !3672, file: !1210, line: 994, column: 13)
!3713 = !DILocation(line: 994, column: 13, scope: !3712)
!3714 = !DILocation(line: 994, column: 21, scope: !3712)
!3715 = !DILocation(line: 994, column: 13, scope: !3672)
!3716 = !DILocation(line: 995, column: 13, scope: !3712)
!3717 = !DILocation(line: 996, column: 15, scope: !3672)
!3718 = !DILocation(line: 999, column: 33, scope: !3672)
!3719 = !DILocation(line: 999, column: 38, scope: !3672)
!3720 = !DILocation(line: 999, column: 47, scope: !3672)
!3721 = !DILocation(line: 999, column: 20, scope: !3672)
!3722 = !DILocation(line: 999, column: 20, scope: !3723)
!3723 = !DILexicalBlockFile(scope: !3672, file: !1210, discriminator: 1)
!3724 = !DILocation(line: 999, column: 18, scope: !3672)
!3725 = !DILocation(line: 1000, column: 13, scope: !3726)
!3726 = distinct !DILexicalBlock(scope: !3672, file: !1210, line: 1000, column: 13)
!3727 = !DILocation(line: 1000, column: 18, scope: !3726)
!3728 = !DILocation(line: 1000, column: 27, scope: !3726)
!3729 = !DILocation(line: 1000, column: 13, scope: !3672)
!3730 = !DILocation(line: 1001, column: 40, scope: !3726)
!3731 = !DILocation(line: 1001, column: 45, scope: !3726)
!3732 = !DILocation(line: 1001, column: 59, scope: !3726)
!3733 = !DILocation(line: 1001, column: 27, scope: !3726)
!3734 = !DILocation(line: 1001, column: 27, scope: !3735)
!3735 = !DILexicalBlockFile(scope: !3726, file: !1210, discriminator: 1)
!3736 = !DILocation(line: 1001, column: 25, scope: !3726)
!3737 = !DILocation(line: 1001, column: 13, scope: !3726)
!3738 = !DILocation(line: 1002, column: 35, scope: !3672)
!3739 = !DILocation(line: 1002, column: 40, scope: !3672)
!3740 = !DILocation(line: 1002, column: 66, scope: !3672)
!3741 = !DILocation(line: 1002, column: 64, scope: !3672)
!3742 = !DILocation(line: 1002, column: 58, scope: !3672)
!3743 = !DILocation(line: 1002, column: 34, scope: !3672)
!3744 = !DILocation(line: 1002, column: 82, scope: !3723)
!3745 = !DILocation(line: 1002, column: 87, scope: !3723)
!3746 = !DILocation(line: 1002, column: 34, scope: !3723)
!3747 = !DILocation(line: 1002, column: 113, scope: !3748)
!3748 = !DILexicalBlockFile(scope: !3672, file: !1210, discriminator: 2)
!3749 = !DILocation(line: 1002, column: 111, scope: !3748)
!3750 = !DILocation(line: 1002, column: 34, scope: !3748)
!3751 = !DILocation(line: 1002, column: 34, scope: !3752)
!3752 = !DILexicalBlockFile(scope: !3672, file: !1210, discriminator: 3)
!3753 = !DILocation(line: 1002, column: 9, scope: !3752)
!3754 = !DILocation(line: 1002, column: 14, scope: !3752)
!3755 = !DILocation(line: 1002, column: 31, scope: !3752)
!3756 = !DILocation(line: 1005, column: 44, scope: !3672)
!3757 = !DILocation(line: 1005, column: 9, scope: !3672)
!3758 = !DILocation(line: 1006, column: 25, scope: !3672)
!3759 = !DILocation(line: 1006, column: 9, scope: !3672)
!3760 = !DILocation(line: 1007, column: 25, scope: !3672)
!3761 = !DILocation(line: 1007, column: 37, scope: !3672)
!3762 = !DILocation(line: 1007, column: 25, scope: !3723)
!3763 = !DILocation(line: 1007, column: 50, scope: !3748)
!3764 = !DILocation(line: 1007, column: 61, scope: !3748)
!3765 = !DILocation(line: 1007, column: 59, scope: !3748)
!3766 = !DILocation(line: 1007, column: 25, scope: !3748)
!3767 = !DILocation(line: 1007, column: 25, scope: !3752)
!3768 = !DILocation(line: 1007, column: 9, scope: !3752)
!3769 = !DILocation(line: 1008, column: 36, scope: !3672)
!3770 = !DILocation(line: 1008, column: 9, scope: !3672)
!3771 = !DILocation(line: 1010, column: 38, scope: !3672)
!3772 = !DILocation(line: 1010, column: 24, scope: !3672)
!3773 = !DILocation(line: 1010, column: 22, scope: !3672)
!3774 = !DILocation(line: 1011, column: 14, scope: !3775)
!3775 = distinct !DILexicalBlock(scope: !3672, file: !1210, line: 1011, column: 13)
!3776 = !DILocation(line: 1011, column: 42, scope: !3775)
!3777 = !DILocation(line: 1011, column: 46, scope: !3778)
!3778 = !DILexicalBlockFile(scope: !3775, file: !1210, discriminator: 1)
!3779 = !DILocation(line: 1011, column: 13, scope: !3778)
!3780 = !DILocation(line: 1012, column: 22, scope: !3781)
!3781 = distinct !DILexicalBlock(scope: !3775, file: !1210, line: 1011, column: 60)
!3782 = !DILocation(line: 1012, column: 13, scope: !3781)
!3783 = !DILocation(line: 1013, column: 13, scope: !3781)
!3784 = !DILocation(line: 1014, column: 13, scope: !3781)
!3785 = !DILocation(line: 1016, column: 19, scope: !3672)
!3786 = !DILocation(line: 1016, column: 25, scope: !3672)
!3787 = !DILocation(line: 1016, column: 18, scope: !3672)
!3788 = !DILocation(line: 1016, column: 9, scope: !3672)
!3789 = !DILocation(line: 1017, column: 21, scope: !3672)
!3790 = !DILocation(line: 1017, column: 9, scope: !3672)
!3791 = !DILocation(line: 1017, column: 15, scope: !3672)
!3792 = !DILocation(line: 1017, column: 19, scope: !3672)
!3793 = !DILocation(line: 1018, column: 5, scope: !3672)
!3794 = !DILocation(line: 974, column: 38, scope: !3795)
!3795 = !DILexicalBlockFile(scope: !3666, file: !1210, discriminator: 2)
!3796 = !DILocation(line: 974, column: 5, scope: !3795)
!3797 = distinct !{!3797, !3798}
!3798 = !DILocation(line: 974, column: 5, scope: !3631)
!3799 = !DILocation(line: 1020, column: 5, scope: !3631)
!3800 = !DILocation(line: 1021, column: 5, scope: !3631)
!3801 = !DILocation(line: 1022, column: 1, scope: !3631)
!3802 = distinct !DISubprogram(name: "utf8_check", scope: !1210, file: !1210, line: 933, type: !3803, isLocal: true, isDefinition: true, scopeLine: 934, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!3803 = !DISubroutineType(types: !3804)
!3804 = !{!939, !1199}
!3805 = !DILocalVariable(name: "str", arg: 1, scope: !3802, file: !1210, line: 933, type: !1199)
!3806 = !DILocation(line: 933, column: 38, scope: !3802)
!3807 = !DILocalVariable(name: "byte", scope: !3802, file: !1210, line: 935, type: !1199)
!3808 = !DILocation(line: 935, column: 20, scope: !3802)
!3809 = !DILocalVariable(name: "codepoint", scope: !3802, file: !1210, line: 936, type: !1090)
!3810 = !DILocation(line: 936, column: 14, scope: !3802)
!3811 = !DILocalVariable(name: "min", scope: !3802, file: !1210, line: 936, type: !1090)
!3812 = !DILocation(line: 936, column: 25, scope: !3802)
!3813 = !DILocation(line: 938, column: 5, scope: !3802)
!3814 = !DILocation(line: 938, column: 13, scope: !3815)
!3815 = !DILexicalBlockFile(scope: !3802, file: !1210, discriminator: 1)
!3816 = !DILocation(line: 938, column: 12, scope: !3815)
!3817 = !DILocation(line: 938, column: 5, scope: !3815)
!3818 = !DILocation(line: 939, column: 16, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !3802, file: !1210, line: 938, column: 18)
!3820 = !DILocation(line: 939, column: 14, scope: !3819)
!3821 = !DILocation(line: 940, column: 27, scope: !3819)
!3822 = !DILocation(line: 940, column: 21, scope: !3819)
!3823 = !DILocation(line: 940, column: 20, scope: !3819)
!3824 = !DILocation(line: 940, column: 18, scope: !3819)
!3825 = !DILocalVariable(name: "top", scope: !3826, file: !1210, line: 940, type: !1090)
!3826 = distinct !DILexicalBlock(scope: !3819, file: !1210, line: 940, column: 33)
!3827 = !DILocation(line: 940, column: 44, scope: !3826)
!3828 = !DILocation(line: 940, column: 51, scope: !3826)
!3829 = !DILocation(line: 940, column: 61, scope: !3826)
!3830 = !DILocation(line: 940, column: 68, scope: !3826)
!3831 = !DILocation(line: 940, column: 79, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3826, file: !1210, line: 940, column: 78)
!3833 = !DILocation(line: 940, column: 89, scope: !3832)
!3834 = !DILocation(line: 940, column: 97, scope: !3832)
!3835 = !DILocation(line: 940, column: 105, scope: !3832)
!3836 = !DILocation(line: 940, column: 108, scope: !3837)
!3837 = !DILexicalBlockFile(scope: !3832, file: !1210, discriminator: 1)
!3838 = !DILocation(line: 940, column: 118, scope: !3837)
!3839 = !DILocation(line: 940, column: 78, scope: !3837)
!3840 = !DILocation(line: 940, column: 127, scope: !3841)
!3841 = !DILexicalBlockFile(scope: !3832, file: !1210, discriminator: 2)
!3842 = !DILocation(line: 940, column: 137, scope: !3843)
!3843 = !DILexicalBlockFile(scope: !3826, file: !1210, discriminator: 3)
!3844 = !DILocation(line: 940, column: 144, scope: !3845)
!3845 = !DILexicalBlockFile(scope: !3826, file: !1210, discriminator: 4)
!3846 = !DILocation(line: 940, column: 156, scope: !3845)
!3847 = !DILocation(line: 940, column: 154, scope: !3845)
!3848 = !DILocation(line: 940, column: 137, scope: !3845)
!3849 = !DILocalVariable(name: "tmp", scope: !3850, file: !1210, line: 940, type: !939)
!3850 = distinct !DILexicalBlock(scope: !3826, file: !1210, line: 940, column: 161)
!3851 = !DILocation(line: 940, column: 167, scope: !3850)
!3852 = !DILocation(line: 940, column: 179, scope: !3853)
!3853 = !DILexicalBlockFile(scope: !3850, file: !1210, discriminator: 5)
!3854 = !DILocation(line: 940, column: 173, scope: !3853)
!3855 = !DILocation(line: 940, column: 172, scope: !3853)
!3856 = !DILocation(line: 940, column: 184, scope: !3853)
!3857 = !DILocation(line: 940, column: 167, scope: !3853)
!3858 = !DILocation(line: 940, column: 194, scope: !3853)
!3859 = !DILocation(line: 940, column: 197, scope: !3853)
!3860 = !DILocation(line: 940, column: 202, scope: !3861)
!3861 = !DILexicalBlockFile(scope: !3862, file: !1210, discriminator: 6)
!3862 = distinct !DILexicalBlock(scope: !3850, file: !1210, line: 940, column: 194)
!3863 = !DILocation(line: 940, column: 224, scope: !3864)
!3864 = !DILexicalBlockFile(scope: !3850, file: !1210, discriminator: 7)
!3865 = !DILocation(line: 940, column: 233, scope: !3864)
!3866 = !DILocation(line: 940, column: 240, scope: !3864)
!3867 = !DILocation(line: 940, column: 238, scope: !3864)
!3868 = !DILocation(line: 940, column: 221, scope: !3864)
!3869 = !DILocation(line: 940, column: 249, scope: !3864)
!3870 = !DILocation(line: 940, column: 137, scope: !3864)
!3871 = distinct !{!3871, !3872}
!3872 = !DILocation(line: 940, column: 137, scope: !3826)
!3873 = !DILocation(line: 940, column: 272, scope: !3874)
!3874 = !DILexicalBlockFile(scope: !3826, file: !1210, discriminator: 8)
!3875 = !DILocation(line: 940, column: 276, scope: !3874)
!3876 = !DILocation(line: 940, column: 282, scope: !3874)
!3877 = !DILocation(line: 940, column: 268, scope: !3874)
!3878 = !DILocation(line: 941, column: 15, scope: !3819)
!3879 = !DILocation(line: 941, column: 22, scope: !3819)
!3880 = !DILocation(line: 941, column: 20, scope: !3819)
!3881 = !DILocation(line: 941, column: 26, scope: !3819)
!3882 = !DILocation(line: 941, column: 15, scope: !3883)
!3883 = !DILexicalBlockFile(scope: !3819, file: !1210, discriminator: 1)
!3884 = !DILocation(line: 941, column: 37, scope: !3885)
!3885 = !DILexicalBlockFile(scope: !3819, file: !1210, discriminator: 2)
!3886 = !DILocation(line: 941, column: 44, scope: !3885)
!3887 = !DILocation(line: 941, column: 42, scope: !3885)
!3888 = !DILocation(line: 941, column: 48, scope: !3885)
!3889 = !DILocation(line: 941, column: 37, scope: !3890)
!3890 = !DILexicalBlockFile(scope: !3819, file: !1210, discriminator: 3)
!3891 = !DILocation(line: 942, column: 26, scope: !3819)
!3892 = !DILocation(line: 942, column: 33, scope: !3819)
!3893 = !DILocation(line: 942, column: 31, scope: !3819)
!3894 = !DILocation(line: 942, column: 23, scope: !3819)
!3895 = !DILocation(line: 942, column: 38, scope: !3819)
!3896 = !DILocation(line: 942, column: 17, scope: !3819)
!3897 = !DILocation(line: 941, column: 37, scope: !3898)
!3898 = !DILexicalBlockFile(scope: !3819, file: !1210, discriminator: 4)
!3899 = !DILocation(line: 941, column: 37, scope: !3900)
!3900 = !DILexicalBlockFile(scope: !3819, file: !1210, discriminator: 5)
!3901 = !DILocation(line: 941, column: 15, scope: !3900)
!3902 = !DILocation(line: 941, column: 15, scope: !3903)
!3903 = !DILexicalBlockFile(scope: !3819, file: !1210, discriminator: 6)
!3904 = !DILocation(line: 941, column: 13, scope: !3903)
!3905 = !DILocation(line: 943, column: 13, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3819, file: !1210, line: 943, column: 13)
!3907 = !DILocation(line: 943, column: 25, scope: !3906)
!3908 = !DILocation(line: 943, column: 23, scope: !3906)
!3909 = !DILocation(line: 943, column: 29, scope: !3906)
!3910 = !DILocation(line: 943, column: 32, scope: !3911)
!3911 = !DILexicalBlockFile(scope: !3906, file: !1210, discriminator: 1)
!3912 = !DILocation(line: 943, column: 42, scope: !3911)
!3913 = !DILocation(line: 943, column: 54, scope: !3911)
!3914 = !DILocation(line: 944, column: 13, scope: !3906)
!3915 = !DILocation(line: 944, column: 23, scope: !3906)
!3916 = !DILocation(line: 944, column: 33, scope: !3906)
!3917 = !DILocation(line: 945, column: 13, scope: !3906)
!3918 = !DILocation(line: 945, column: 23, scope: !3906)
!3919 = !DILocation(line: 945, column: 33, scope: !3906)
!3920 = !DILocation(line: 945, column: 36, scope: !3911)
!3921 = !DILocation(line: 945, column: 46, scope: !3911)
!3922 = !DILocation(line: 943, column: 13, scope: !3885)
!3923 = !DILocation(line: 946, column: 13, scope: !3906)
!3924 = !DILocation(line: 947, column: 15, scope: !3819)
!3925 = !DILocation(line: 947, column: 13, scope: !3819)
!3926 = !DILocation(line: 938, column: 5, scope: !3927)
!3927 = !DILexicalBlockFile(scope: !3802, file: !1210, discriminator: 2)
!3928 = distinct !{!3928, !3813}
!3929 = !DILocation(line: 949, column: 5, scope: !3802)
!3930 = !DILocation(line: 950, column: 1, scope: !3802)
!3931 = distinct !DISubprogram(name: "avcodec_default_get_format", scope: !1210, file: !1210, line: 1114, type: !1582, isLocal: false, isDefinition: true, scopeLine: 1116, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!3932 = !DILocalVariable(name: "avctx", arg: 1, scope: !3931, file: !1210, line: 1114, type: !1579)
!3933 = !DILocation(line: 1114, column: 70, scope: !3931)
!3934 = !DILocalVariable(name: "fmt", arg: 2, scope: !3931, file: !1210, line: 1115, type: !1234)
!3935 = !DILocation(line: 1115, column: 73, scope: !3931)
!3936 = !DILocalVariable(name: "desc", scope: !3931, file: !1210, line: 1117, type: !3937)
!3937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3938, size: 64, align: 64)
!3938 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3939)
!3939 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPixFmtDescriptor", file: !3940, line: 123, baseType: !3941)
!3940 = !DIFile(filename: "./libavutil/pixdesc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!3941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPixFmtDescriptor", file: !3940, line: 81, size: 1280, align: 64, elements: !3942)
!3942 = !{!3943, !3944, !3945, !3946, !3947, !3948, !3961}
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3941, file: !3940, line: 82, baseType: !955, size: 64, align: 64)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !3941, file: !3940, line: 83, baseType: !1064, size: 8, align: 8, offset: 64)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "log2_chroma_w", scope: !3941, file: !3940, line: 92, baseType: !1064, size: 8, align: 8, offset: 72)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "log2_chroma_h", scope: !3941, file: !3940, line: 101, baseType: !1064, size: 8, align: 8, offset: 80)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3941, file: !3940, line: 106, baseType: !1096, size: 64, align: 64, offset: 128)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "comp", scope: !3941, file: !3940, line: 117, baseType: !3949, size: 1024, align: 32, offset: 192)
!3949 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3950, size: 1024, align: 32, elements: !1316)
!3950 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVComponentDescriptor", file: !3940, line: 70, baseType: !3951)
!3951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVComponentDescriptor", file: !3940, line: 31, size: 256, align: 32, elements: !3952)
!3952 = !{!3953, !3954, !3955, !3956, !3957, !3958, !3959, !3960}
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "plane", scope: !3951, file: !3940, line: 35, baseType: !939, size: 32, align: 32)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !3951, file: !3940, line: 41, baseType: !939, size: 32, align: 32, offset: 32)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3951, file: !3940, line: 47, baseType: !939, size: 32, align: 32, offset: 64)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !3951, file: !3940, line: 53, baseType: !939, size: 32, align: 32, offset: 96)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !3951, file: !3940, line: 58, baseType: !939, size: 32, align: 32, offset: 128)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "step_minus1", scope: !3951, file: !3940, line: 62, baseType: !939, size: 32, align: 32, offset: 160)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "depth_minus1", scope: !3951, file: !3940, line: 65, baseType: !939, size: 32, align: 32, offset: 192)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "offset_plus1", scope: !3951, file: !3940, line: 68, baseType: !939, size: 32, align: 32, offset: 224)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !3941, file: !3940, line: 122, baseType: !955, size: 64, align: 64, offset: 1216)
!3962 = !DILocation(line: 1117, column: 31, scope: !3931)
!3963 = !DILocalVariable(name: "config", scope: !3931, file: !1210, line: 1118, type: !3964)
!3964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3965, size: 64, align: 64)
!3965 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1384)
!3966 = !DILocation(line: 1118, column: 28, scope: !3931)
!3967 = !DILocalVariable(name: "i", scope: !3931, file: !1210, line: 1119, type: !939)
!3968 = !DILocation(line: 1119, column: 9, scope: !3931)
!3969 = !DILocalVariable(name: "n", scope: !3931, file: !1210, line: 1119, type: !939)
!3970 = !DILocation(line: 1119, column: 12, scope: !3931)
!3971 = !DILocation(line: 1123, column: 9, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3931, file: !1210, line: 1123, column: 9)
!3973 = !DILocation(line: 1123, column: 16, scope: !3972)
!3974 = !DILocation(line: 1123, column: 30, scope: !3972)
!3975 = !DILocation(line: 1123, column: 33, scope: !3976)
!3976 = !DILexicalBlockFile(scope: !3972, file: !1210, discriminator: 1)
!3977 = !DILocation(line: 1123, column: 40, scope: !3976)
!3978 = !DILocation(line: 1123, column: 47, scope: !3976)
!3979 = !DILocation(line: 1123, column: 9, scope: !3976)
!3980 = !DILocalVariable(name: "device_ctx", scope: !3981, file: !1210, line: 1124, type: !944)
!3981 = distinct !DILexicalBlock(scope: !3972, file: !1210, line: 1123, column: 59)
!3982 = !DILocation(line: 1124, column: 28, scope: !3981)
!3983 = !DILocation(line: 1125, column: 33, scope: !3981)
!3984 = !DILocation(line: 1125, column: 40, scope: !3981)
!3985 = !DILocation(line: 1125, column: 55, scope: !3981)
!3986 = !DILocation(line: 1125, column: 13, scope: !3981)
!3987 = !DILocation(line: 1126, column: 16, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3981, file: !1210, line: 1126, column: 9)
!3989 = !DILocation(line: 1126, column: 14, scope: !3988)
!3990 = !DILocation(line: 1127, column: 48, scope: !3991)
!3991 = distinct !DILexicalBlock(scope: !3992, file: !1210, line: 1126, column: 27)
!3992 = distinct !DILexicalBlock(scope: !3988, file: !1210, line: 1126, column: 9)
!3993 = !DILocation(line: 1127, column: 23, scope: !3991)
!3994 = !DILocation(line: 1127, column: 30, scope: !3991)
!3995 = !DILocation(line: 1127, column: 37, scope: !3991)
!3996 = !DILocation(line: 1127, column: 52, scope: !3991)
!3997 = !DILocation(line: 1127, column: 20, scope: !3991)
!3998 = !DILocation(line: 1128, column: 18, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !3991, file: !1210, line: 1128, column: 17)
!4000 = !DILocation(line: 1128, column: 17, scope: !3991)
!4001 = !DILocation(line: 1129, column: 17, scope: !3999)
!4002 = !DILocation(line: 1130, column: 19, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !3991, file: !1210, line: 1130, column: 17)
!4004 = !DILocation(line: 1130, column: 27, scope: !4003)
!4005 = !DILocation(line: 1130, column: 35, scope: !4003)
!4006 = !DILocation(line: 1130, column: 17, scope: !3991)
!4007 = !DILocation(line: 1132, column: 17, scope: !4003)
!4008 = !DILocation(line: 1133, column: 17, scope: !4009)
!4009 = distinct !DILexicalBlock(scope: !3991, file: !1210, line: 1133, column: 17)
!4010 = !DILocation(line: 1133, column: 29, scope: !4009)
!4011 = !DILocation(line: 1133, column: 37, scope: !4009)
!4012 = !DILocation(line: 1133, column: 45, scope: !4009)
!4013 = !DILocation(line: 1133, column: 34, scope: !4009)
!4014 = !DILocation(line: 1133, column: 17, scope: !3991)
!4015 = !DILocation(line: 1134, column: 17, scope: !4009)
!4016 = !DILocation(line: 1135, column: 20, scope: !4017)
!4017 = distinct !DILexicalBlock(scope: !3991, file: !1210, line: 1135, column: 13)
!4018 = !DILocation(line: 1135, column: 18, scope: !4017)
!4019 = !DILocation(line: 1135, column: 29, scope: !4020)
!4020 = !DILexicalBlockFile(scope: !4021, file: !1210, discriminator: 1)
!4021 = distinct !DILexicalBlock(scope: !4017, file: !1210, line: 1135, column: 13)
!4022 = !DILocation(line: 1135, column: 25, scope: !4020)
!4023 = !DILocation(line: 1135, column: 32, scope: !4020)
!4024 = !DILocation(line: 1135, column: 13, scope: !4020)
!4025 = !DILocation(line: 1136, column: 21, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !4027, file: !1210, line: 1136, column: 21)
!4027 = distinct !DILexicalBlock(scope: !4021, file: !1210, line: 1135, column: 57)
!4028 = !DILocation(line: 1136, column: 29, scope: !4026)
!4029 = !DILocation(line: 1136, column: 44, scope: !4026)
!4030 = !DILocation(line: 1136, column: 40, scope: !4026)
!4031 = !DILocation(line: 1136, column: 37, scope: !4026)
!4032 = !DILocation(line: 1136, column: 21, scope: !4027)
!4033 = !DILocation(line: 1137, column: 32, scope: !4026)
!4034 = !DILocation(line: 1137, column: 28, scope: !4026)
!4035 = !DILocation(line: 1137, column: 21, scope: !4026)
!4036 = !DILocation(line: 1138, column: 13, scope: !4027)
!4037 = !DILocation(line: 1135, column: 53, scope: !4038)
!4038 = !DILexicalBlockFile(scope: !4021, file: !1210, discriminator: 2)
!4039 = !DILocation(line: 1135, column: 13, scope: !4038)
!4040 = distinct !{!4040, !4041}
!4041 = !DILocation(line: 1135, column: 13, scope: !3991)
!4042 = !DILocation(line: 1139, column: 9, scope: !3991)
!4043 = !DILocation(line: 1126, column: 23, scope: !4044)
!4044 = !DILexicalBlockFile(scope: !3992, file: !1210, discriminator: 1)
!4045 = !DILocation(line: 1126, column: 9, scope: !4044)
!4046 = distinct !{!4046, !4047}
!4047 = !DILocation(line: 1126, column: 9, scope: !3981)
!4048 = !DILocation(line: 1140, column: 5, scope: !3981)
!4049 = !DILocation(line: 1146, column: 12, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !3931, file: !1210, line: 1146, column: 5)
!4051 = !DILocation(line: 1146, column: 10, scope: !4050)
!4052 = !DILocation(line: 1146, column: 21, scope: !4053)
!4053 = !DILexicalBlockFile(scope: !4054, file: !1210, discriminator: 1)
!4054 = distinct !DILexicalBlock(scope: !4050, file: !1210, line: 1146, column: 5)
!4055 = !DILocation(line: 1146, column: 17, scope: !4053)
!4056 = !DILocation(line: 1146, column: 24, scope: !4053)
!4057 = !DILocation(line: 1146, column: 5, scope: !4053)
!4058 = !DILocation(line: 1146, column: 5, scope: !4059)
!4059 = !DILexicalBlockFile(scope: !4050, file: !1210, discriminator: 2)
!4060 = !DILocation(line: 1146, column: 45, scope: !4061)
!4061 = !DILexicalBlockFile(scope: !4054, file: !1210, discriminator: 3)
!4062 = !DILocation(line: 1146, column: 5, scope: !4061)
!4063 = distinct !{!4063, !4064}
!4064 = !DILocation(line: 1146, column: 5, scope: !3931)
!4065 = !DILocation(line: 1147, column: 36, scope: !3931)
!4066 = !DILocation(line: 1147, column: 38, scope: !3931)
!4067 = !DILocation(line: 1147, column: 32, scope: !3931)
!4068 = !DILocation(line: 1147, column: 12, scope: !3931)
!4069 = !DILocation(line: 1147, column: 10, scope: !3931)
!4070 = !DILocation(line: 1148, column: 11, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !3931, file: !1210, line: 1148, column: 9)
!4072 = !DILocation(line: 1148, column: 17, scope: !4071)
!4073 = !DILocation(line: 1148, column: 23, scope: !4071)
!4074 = !DILocation(line: 1148, column: 9, scope: !3931)
!4075 = !DILocation(line: 1149, column: 20, scope: !4071)
!4076 = !DILocation(line: 1149, column: 22, scope: !4071)
!4077 = !DILocation(line: 1149, column: 16, scope: !4071)
!4078 = !DILocation(line: 1149, column: 9, scope: !4071)
!4079 = !DILocation(line: 1154, column: 12, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !3931, file: !1210, line: 1154, column: 5)
!4081 = !DILocation(line: 1154, column: 10, scope: !4080)
!4082 = !DILocation(line: 1154, column: 21, scope: !4083)
!4083 = !DILexicalBlockFile(scope: !4084, file: !1210, discriminator: 1)
!4084 = distinct !DILexicalBlock(scope: !4080, file: !1210, line: 1154, column: 5)
!4085 = !DILocation(line: 1154, column: 17, scope: !4083)
!4086 = !DILocation(line: 1154, column: 24, scope: !4083)
!4087 = !DILocation(line: 1154, column: 5, scope: !4083)
!4088 = !DILocation(line: 1155, column: 16, scope: !4089)
!4089 = distinct !DILexicalBlock(scope: !4090, file: !1210, line: 1155, column: 9)
!4090 = distinct !DILexicalBlock(scope: !4084, file: !1210, line: 1154, column: 49)
!4091 = !DILocation(line: 1155, column: 14, scope: !4089)
!4092 = !DILocation(line: 1156, column: 44, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4094, file: !1210, line: 1155, column: 27)
!4094 = distinct !DILexicalBlock(scope: !4089, file: !1210, line: 1155, column: 9)
!4095 = !DILocation(line: 1156, column: 51, scope: !4093)
!4096 = !DILocation(line: 1156, column: 58, scope: !4093)
!4097 = !DILocation(line: 1156, column: 22, scope: !4093)
!4098 = !DILocation(line: 1156, column: 20, scope: !4093)
!4099 = !DILocation(line: 1157, column: 18, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4093, file: !1210, line: 1157, column: 17)
!4101 = !DILocation(line: 1157, column: 17, scope: !4093)
!4102 = !DILocation(line: 1158, column: 17, scope: !4100)
!4103 = !DILocation(line: 1159, column: 17, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4093, file: !1210, line: 1159, column: 17)
!4105 = !DILocation(line: 1159, column: 25, scope: !4104)
!4106 = !DILocation(line: 1159, column: 40, scope: !4104)
!4107 = !DILocation(line: 1159, column: 36, scope: !4104)
!4108 = !DILocation(line: 1159, column: 33, scope: !4104)
!4109 = !DILocation(line: 1159, column: 17, scope: !4093)
!4110 = !DILocation(line: 1160, column: 17, scope: !4104)
!4111 = !DILocation(line: 1161, column: 9, scope: !4093)
!4112 = !DILocation(line: 1155, column: 23, scope: !4113)
!4113 = !DILexicalBlockFile(scope: !4094, file: !1210, discriminator: 1)
!4114 = !DILocation(line: 1155, column: 9, scope: !4113)
!4115 = distinct !{!4115, !4116}
!4116 = !DILocation(line: 1155, column: 9, scope: !4090)
!4117 = !DILocation(line: 1162, column: 14, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4090, file: !1210, line: 1162, column: 13)
!4119 = !DILocation(line: 1162, column: 13, scope: !4090)
!4120 = !DILocation(line: 1165, column: 24, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !4118, file: !1210, line: 1162, column: 22)
!4122 = !DILocation(line: 1165, column: 20, scope: !4121)
!4123 = !DILocation(line: 1165, column: 13, scope: !4121)
!4124 = !DILocation(line: 1167, column: 13, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !4090, file: !1210, line: 1167, column: 13)
!4126 = !DILocation(line: 1167, column: 21, scope: !4125)
!4127 = !DILocation(line: 1167, column: 29, scope: !4125)
!4128 = !DILocation(line: 1167, column: 13, scope: !4090)
!4129 = !DILocation(line: 1169, column: 24, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4125, file: !1210, line: 1167, column: 67)
!4131 = !DILocation(line: 1169, column: 20, scope: !4130)
!4132 = !DILocation(line: 1169, column: 13, scope: !4130)
!4133 = !DILocation(line: 1171, column: 5, scope: !4090)
!4134 = !DILocation(line: 1154, column: 45, scope: !4135)
!4135 = !DILexicalBlockFile(scope: !4084, file: !1210, discriminator: 2)
!4136 = !DILocation(line: 1154, column: 5, scope: !4135)
!4137 = distinct !{!4137, !4138}
!4138 = !DILocation(line: 1154, column: 5, scope: !3931)
!4139 = !DILocation(line: 1174, column: 5, scope: !3931)
!4140 = !DILocation(line: 1175, column: 1, scope: !3931)
!4141 = distinct !DISubprogram(name: "ff_decode_get_hw_frames_ctx", scope: !1210, file: !1210, line: 1177, type: !4142, isLocal: false, isDefinition: true, scopeLine: 1179, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!4142 = !DISubroutineType(types: !4143)
!4143 = !{!939, !1213, !880}
!4144 = !DILocalVariable(name: "avctx", arg: 1, scope: !4141, file: !1210, line: 1177, type: !1213)
!4145 = !DILocation(line: 1177, column: 49, scope: !4141)
!4146 = !DILocalVariable(name: "dev_type", arg: 2, scope: !4141, file: !1210, line: 1178, type: !880)
!4147 = !DILocation(line: 1178, column: 53, scope: !4141)
!4148 = !DILocalVariable(name: "device_ctx", scope: !4141, file: !1210, line: 1180, type: !944)
!4149 = !DILocation(line: 1180, column: 24, scope: !4141)
!4150 = !DILocalVariable(name: "frames_ctx", scope: !4141, file: !1210, line: 1181, type: !1043)
!4151 = !DILocation(line: 1181, column: 24, scope: !4141)
!4152 = !DILocalVariable(name: "ret", scope: !4141, file: !1210, line: 1182, type: !939)
!4153 = !DILocation(line: 1182, column: 9, scope: !4141)
!4154 = !DILocation(line: 1184, column: 10, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4141, file: !1210, line: 1184, column: 9)
!4156 = !DILocation(line: 1184, column: 17, scope: !4155)
!4157 = !DILocation(line: 1184, column: 9, scope: !4141)
!4158 = !DILocation(line: 1185, column: 9, scope: !4155)
!4159 = !DILocation(line: 1187, column: 9, scope: !4160)
!4160 = distinct !DILexicalBlock(scope: !4141, file: !1210, line: 1187, column: 9)
!4161 = !DILocation(line: 1187, column: 16, scope: !4160)
!4162 = !DILocation(line: 1187, column: 9, scope: !4141)
!4163 = !DILocation(line: 1188, column: 9, scope: !4160)
!4164 = !DILocation(line: 1189, column: 10, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4141, file: !1210, line: 1189, column: 9)
!4166 = !DILocation(line: 1189, column: 17, scope: !4165)
!4167 = !DILocation(line: 1189, column: 9, scope: !4141)
!4168 = !DILocation(line: 1190, column: 16, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4165, file: !1210, line: 1189, column: 32)
!4170 = !DILocation(line: 1190, column: 9, scope: !4169)
!4171 = !DILocation(line: 1192, column: 9, scope: !4169)
!4172 = !DILocation(line: 1195, column: 39, scope: !4141)
!4173 = !DILocation(line: 1195, column: 46, scope: !4141)
!4174 = !DILocation(line: 1195, column: 61, scope: !4141)
!4175 = !DILocation(line: 1195, column: 18, scope: !4141)
!4176 = !DILocation(line: 1195, column: 16, scope: !4141)
!4177 = !DILocation(line: 1196, column: 9, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !4141, file: !1210, line: 1196, column: 9)
!4179 = !DILocation(line: 1196, column: 21, scope: !4178)
!4180 = !DILocation(line: 1196, column: 29, scope: !4178)
!4181 = !DILocation(line: 1196, column: 26, scope: !4178)
!4182 = !DILocation(line: 1196, column: 9, scope: !4141)
!4183 = !DILocation(line: 1197, column: 16, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4178, file: !1210, line: 1196, column: 39)
!4185 = !DILocation(line: 1198, column: 69, scope: !4184)
!4186 = !DILocation(line: 1198, column: 43, scope: !4184)
!4187 = !DILocation(line: 1199, column: 42, scope: !4184)
!4188 = !DILocation(line: 1199, column: 54, scope: !4184)
!4189 = !DILocation(line: 1199, column: 16, scope: !4184)
!4190 = !DILocation(line: 1197, column: 9, scope: !4184)
!4191 = !DILocation(line: 1200, column: 9, scope: !4184)
!4192 = !DILocation(line: 1203, column: 44, scope: !4141)
!4193 = !DILocation(line: 1204, column: 44, scope: !4141)
!4194 = !DILocation(line: 1204, column: 51, scope: !4141)
!4195 = !DILocation(line: 1205, column: 44, scope: !4141)
!4196 = !DILocation(line: 1205, column: 51, scope: !4141)
!4197 = !DILocation(line: 1205, column: 60, scope: !4141)
!4198 = !DILocation(line: 1206, column: 45, scope: !4141)
!4199 = !DILocation(line: 1206, column: 52, scope: !4141)
!4200 = !DILocation(line: 1203, column: 11, scope: !4141)
!4201 = !DILocation(line: 1203, column: 9, scope: !4141)
!4202 = !DILocation(line: 1207, column: 9, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !4141, file: !1210, line: 1207, column: 9)
!4204 = !DILocation(line: 1207, column: 13, scope: !4203)
!4205 = !DILocation(line: 1207, column: 9, scope: !4141)
!4206 = !DILocation(line: 1208, column: 16, scope: !4203)
!4207 = !DILocation(line: 1208, column: 9, scope: !4203)
!4208 = !DILocation(line: 1210, column: 38, scope: !4141)
!4209 = !DILocation(line: 1210, column: 45, scope: !4141)
!4210 = !DILocation(line: 1210, column: 60, scope: !4141)
!4211 = !DILocation(line: 1210, column: 18, scope: !4141)
!4212 = !DILocation(line: 1210, column: 16, scope: !4141)
!4213 = !DILocation(line: 1213, column: 9, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4141, file: !1210, line: 1213, column: 9)
!4215 = !DILocation(line: 1213, column: 21, scope: !4214)
!4216 = !DILocation(line: 1213, column: 9, scope: !4141)
!4217 = !DILocation(line: 1216, column: 9, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4214, file: !1210, line: 1213, column: 40)
!4219 = !DILocation(line: 1216, column: 21, scope: !4218)
!4220 = !DILocation(line: 1216, column: 39, scope: !4218)
!4221 = !DILocation(line: 1217, column: 5, scope: !4218)
!4222 = !DILocation(line: 1219, column: 31, scope: !4141)
!4223 = !DILocation(line: 1219, column: 38, scope: !4141)
!4224 = !DILocation(line: 1219, column: 11, scope: !4141)
!4225 = !DILocation(line: 1219, column: 9, scope: !4141)
!4226 = !DILocation(line: 1220, column: 9, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4141, file: !1210, line: 1220, column: 9)
!4228 = !DILocation(line: 1220, column: 13, scope: !4227)
!4229 = !DILocation(line: 1220, column: 9, scope: !4141)
!4230 = !DILocation(line: 1221, column: 26, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4227, file: !1210, line: 1220, column: 18)
!4232 = !DILocation(line: 1221, column: 33, scope: !4231)
!4233 = !DILocation(line: 1221, column: 9, scope: !4231)
!4234 = !DILocation(line: 1222, column: 16, scope: !4231)
!4235 = !DILocation(line: 1222, column: 9, scope: !4231)
!4236 = !DILocation(line: 1225, column: 5, scope: !4141)
!4237 = !DILocation(line: 1226, column: 1, scope: !4141)
!4238 = distinct !DISubprogram(name: "avcodec_get_hw_frames_parameters", scope: !1210, file: !1210, line: 1228, type: !4239, isLocal: false, isDefinition: true, scopeLine: 1232, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!4239 = !DISubroutineType(types: !4240)
!4240 = !{!939, !1213, !1053, !516, !1145}
!4241 = !DILocalVariable(name: "avctx", arg: 1, scope: !4238, file: !1210, line: 1228, type: !1213)
!4242 = !DILocation(line: 1228, column: 54, scope: !4238)
!4243 = !DILocalVariable(name: "device_ref", arg: 2, scope: !4238, file: !1210, line: 1229, type: !1053)
!4244 = !DILocation(line: 1229, column: 51, scope: !4238)
!4245 = !DILocalVariable(name: "hw_pix_fmt", arg: 3, scope: !4238, file: !1210, line: 1230, type: !516)
!4246 = !DILocation(line: 1230, column: 57, scope: !4238)
!4247 = !DILocalVariable(name: "out_frames_ref", arg: 4, scope: !4238, file: !1210, line: 1231, type: !1145)
!4248 = !DILocation(line: 1231, column: 52, scope: !4238)
!4249 = !DILocalVariable(name: "frames_ref", scope: !4238, file: !1210, line: 1233, type: !1053)
!4250 = !DILocation(line: 1233, column: 18, scope: !4238)
!4251 = !DILocalVariable(name: "hw_config", scope: !4238, file: !1210, line: 1234, type: !4252)
!4252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4253, size: 64, align: 64)
!4253 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4254)
!4254 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecHWConfigInternal", file: !1381, line: 40, baseType: !1380)
!4255 = !DILocation(line: 1234, column: 36, scope: !4238)
!4256 = !DILocalVariable(name: "hwa", scope: !4238, file: !1210, line: 1235, type: !1391)
!4257 = !DILocation(line: 1235, column: 22, scope: !4238)
!4258 = !DILocalVariable(name: "i", scope: !4238, file: !1210, line: 1236, type: !939)
!4259 = !DILocation(line: 1236, column: 9, scope: !4238)
!4260 = !DILocalVariable(name: "ret", scope: !4238, file: !1210, line: 1236, type: !939)
!4261 = !DILocation(line: 1236, column: 12, scope: !4238)
!4262 = !DILocation(line: 1238, column: 12, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !4238, file: !1210, line: 1238, column: 5)
!4264 = !DILocation(line: 1238, column: 10, scope: !4263)
!4265 = !DILocation(line: 1239, column: 46, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4267, file: !1210, line: 1238, column: 23)
!4267 = distinct !DILexicalBlock(scope: !4263, file: !1210, line: 1238, column: 5)
!4268 = !DILocation(line: 1239, column: 21, scope: !4266)
!4269 = !DILocation(line: 1239, column: 28, scope: !4266)
!4270 = !DILocation(line: 1239, column: 35, scope: !4266)
!4271 = !DILocation(line: 1239, column: 19, scope: !4266)
!4272 = !DILocation(line: 1240, column: 14, scope: !4273)
!4273 = distinct !DILexicalBlock(scope: !4266, file: !1210, line: 1240, column: 13)
!4274 = !DILocation(line: 1240, column: 13, scope: !4266)
!4275 = !DILocation(line: 1241, column: 13, scope: !4273)
!4276 = !DILocation(line: 1242, column: 13, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4266, file: !1210, line: 1242, column: 13)
!4278 = !DILocation(line: 1242, column: 24, scope: !4277)
!4279 = !DILocation(line: 1242, column: 31, scope: !4277)
!4280 = !DILocation(line: 1242, column: 42, scope: !4277)
!4281 = !DILocation(line: 1242, column: 39, scope: !4277)
!4282 = !DILocation(line: 1242, column: 13, scope: !4266)
!4283 = !DILocation(line: 1243, column: 13, scope: !4277)
!4284 = !DILocation(line: 1244, column: 5, scope: !4266)
!4285 = !DILocation(line: 1238, column: 19, scope: !4286)
!4286 = !DILexicalBlockFile(scope: !4267, file: !1210, discriminator: 1)
!4287 = !DILocation(line: 1238, column: 5, scope: !4286)
!4288 = distinct !{!4288, !4289}
!4289 = !DILocation(line: 1238, column: 5, scope: !4238)
!4290 = !DILocation(line: 1246, column: 11, scope: !4238)
!4291 = !DILocation(line: 1246, column: 22, scope: !4238)
!4292 = !DILocation(line: 1246, column: 9, scope: !4238)
!4293 = !DILocation(line: 1247, column: 10, scope: !4294)
!4294 = distinct !DILexicalBlock(scope: !4238, file: !1210, line: 1247, column: 9)
!4295 = !DILocation(line: 1247, column: 14, scope: !4294)
!4296 = !DILocation(line: 1247, column: 18, scope: !4297)
!4297 = !DILexicalBlockFile(scope: !4294, file: !1210, discriminator: 1)
!4298 = !DILocation(line: 1247, column: 23, scope: !4297)
!4299 = !DILocation(line: 1247, column: 9, scope: !4297)
!4300 = !DILocation(line: 1248, column: 9, scope: !4294)
!4301 = !DILocation(line: 1250, column: 39, scope: !4238)
!4302 = !DILocation(line: 1250, column: 18, scope: !4238)
!4303 = !DILocation(line: 1250, column: 16, scope: !4238)
!4304 = !DILocation(line: 1251, column: 10, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4238, file: !1210, line: 1251, column: 9)
!4306 = !DILocation(line: 1251, column: 9, scope: !4238)
!4307 = !DILocation(line: 1252, column: 9, scope: !4305)
!4308 = !DILocation(line: 1254, column: 11, scope: !4238)
!4309 = !DILocation(line: 1254, column: 16, scope: !4238)
!4310 = !DILocation(line: 1254, column: 29, scope: !4238)
!4311 = !DILocation(line: 1254, column: 36, scope: !4238)
!4312 = !DILocation(line: 1254, column: 9, scope: !4238)
!4313 = !DILocation(line: 1255, column: 9, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4238, file: !1210, line: 1255, column: 9)
!4315 = !DILocation(line: 1255, column: 13, scope: !4314)
!4316 = !DILocation(line: 1255, column: 9, scope: !4238)
!4317 = !DILocalVariable(name: "frames_ctx", scope: !4318, file: !1210, line: 1256, type: !1043)
!4318 = distinct !DILexicalBlock(scope: !4314, file: !1210, line: 1255, column: 19)
!4319 = !DILocation(line: 1256, column: 28, scope: !4318)
!4320 = !DILocation(line: 1256, column: 61, scope: !4318)
!4321 = !DILocation(line: 1256, column: 73, scope: !4318)
!4322 = !DILocation(line: 1256, column: 41, scope: !4318)
!4323 = !DILocation(line: 1258, column: 13, scope: !4324)
!4324 = distinct !DILexicalBlock(scope: !4318, file: !1210, line: 1258, column: 13)
!4325 = !DILocation(line: 1258, column: 25, scope: !4324)
!4326 = !DILocation(line: 1258, column: 13, scope: !4318)
!4327 = !DILocation(line: 1261, column: 17, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4329, file: !1210, line: 1261, column: 17)
!4329 = distinct !DILexicalBlock(scope: !4324, file: !1210, line: 1258, column: 44)
!4330 = !DILocation(line: 1261, column: 24, scope: !4328)
!4331 = !DILocation(line: 1261, column: 40, scope: !4328)
!4332 = !DILocation(line: 1261, column: 17, scope: !4329)
!4333 = !DILocation(line: 1262, column: 50, scope: !4328)
!4334 = !DILocation(line: 1262, column: 57, scope: !4328)
!4335 = !DILocation(line: 1262, column: 17, scope: !4328)
!4336 = !DILocation(line: 1262, column: 29, scope: !4328)
!4337 = !DILocation(line: 1262, column: 47, scope: !4328)
!4338 = !DILocation(line: 1266, column: 17, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4329, file: !1210, line: 1266, column: 17)
!4340 = !DILocation(line: 1266, column: 24, scope: !4339)
!4341 = !DILocation(line: 1266, column: 43, scope: !4339)
!4342 = !DILocation(line: 1266, column: 17, scope: !4329)
!4343 = !DILocation(line: 1267, column: 50, scope: !4339)
!4344 = !DILocation(line: 1267, column: 57, scope: !4339)
!4345 = !DILocation(line: 1267, column: 17, scope: !4339)
!4346 = !DILocation(line: 1267, column: 29, scope: !4339)
!4347 = !DILocation(line: 1267, column: 47, scope: !4339)
!4348 = !DILocation(line: 1268, column: 9, scope: !4329)
!4349 = !DILocation(line: 1270, column: 27, scope: !4318)
!4350 = !DILocation(line: 1270, column: 10, scope: !4318)
!4351 = !DILocation(line: 1270, column: 25, scope: !4318)
!4352 = !DILocation(line: 1271, column: 5, scope: !4318)
!4353 = !DILocation(line: 1272, column: 9, scope: !4354)
!4354 = distinct !DILexicalBlock(scope: !4314, file: !1210, line: 1271, column: 12)
!4355 = !DILocation(line: 1274, column: 12, scope: !4238)
!4356 = !DILocation(line: 1274, column: 5, scope: !4238)
!4357 = !DILocation(line: 1275, column: 1, scope: !4238)
!4358 = distinct !DISubprogram(name: "ff_get_format", scope: !1210, file: !1210, line: 1326, type: !4359, isLocal: false, isDefinition: true, scopeLine: 1327, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!4359 = !DISubroutineType(types: !4360)
!4360 = !{!939, !1213, !1234}
!4361 = !DILocalVariable(name: "avctx", arg: 1, scope: !4358, file: !1210, line: 1326, type: !1213)
!4362 = !DILocation(line: 1326, column: 35, scope: !4358)
!4363 = !DILocalVariable(name: "fmt", arg: 2, scope: !4358, file: !1210, line: 1326, type: !1234)
!4364 = !DILocation(line: 1326, column: 68, scope: !4358)
!4365 = !DILocalVariable(name: "desc", scope: !4358, file: !1210, line: 1328, type: !3937)
!4366 = !DILocation(line: 1328, column: 31, scope: !4358)
!4367 = !DILocalVariable(name: "choices", scope: !4358, file: !1210, line: 1329, type: !4368)
!4368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64, align: 64)
!4369 = !DILocation(line: 1329, column: 25, scope: !4358)
!4370 = !DILocalVariable(name: "ret", scope: !4358, file: !1210, line: 1330, type: !516)
!4371 = !DILocation(line: 1330, column: 24, scope: !4358)
!4372 = !DILocalVariable(name: "user_choice", scope: !4358, file: !1210, line: 1330, type: !516)
!4373 = !DILocation(line: 1330, column: 29, scope: !4358)
!4374 = !DILocalVariable(name: "hw_config", scope: !4358, file: !1210, line: 1331, type: !4252)
!4375 = !DILocation(line: 1331, column: 36, scope: !4358)
!4376 = !DILocalVariable(name: "config", scope: !4358, file: !1210, line: 1332, type: !3964)
!4377 = !DILocation(line: 1332, column: 28, scope: !4358)
!4378 = !DILocalVariable(name: "i", scope: !4358, file: !1210, line: 1333, type: !939)
!4379 = !DILocation(line: 1333, column: 9, scope: !4358)
!4380 = !DILocalVariable(name: "n", scope: !4358, file: !1210, line: 1333, type: !939)
!4381 = !DILocation(line: 1333, column: 12, scope: !4358)
!4382 = !DILocalVariable(name: "err", scope: !4358, file: !1210, line: 1333, type: !939)
!4383 = !DILocation(line: 1333, column: 15, scope: !4358)
!4384 = !DILocation(line: 1336, column: 12, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4358, file: !1210, line: 1336, column: 5)
!4386 = !DILocation(line: 1336, column: 10, scope: !4385)
!4387 = !DILocation(line: 1336, column: 21, scope: !4388)
!4388 = !DILexicalBlockFile(scope: !4389, file: !1210, discriminator: 1)
!4389 = distinct !DILexicalBlock(scope: !4385, file: !1210, line: 1336, column: 5)
!4390 = !DILocation(line: 1336, column: 17, scope: !4388)
!4391 = !DILocation(line: 1336, column: 24, scope: !4388)
!4392 = !DILocation(line: 1336, column: 5, scope: !4388)
!4393 = !DILocation(line: 1336, column: 5, scope: !4394)
!4394 = !DILexicalBlockFile(scope: !4385, file: !1210, discriminator: 2)
!4395 = !DILocation(line: 1336, column: 45, scope: !4396)
!4396 = !DILexicalBlockFile(scope: !4389, file: !1210, discriminator: 3)
!4397 = !DILocation(line: 1336, column: 5, scope: !4396)
!4398 = distinct !{!4398, !4399}
!4399 = !DILocation(line: 1336, column: 5, scope: !4358)
!4400 = !DILocation(line: 1338, column: 5, scope: !4358)
!4401 = distinct !{!4401, !4400}
!4402 = !DILocation(line: 1338, column: 16, scope: !4403)
!4403 = !DILexicalBlockFile(scope: !4404, file: !1210, discriminator: 1)
!4404 = distinct !DILexicalBlock(scope: !4405, file: !1210, line: 1338, column: 14)
!4405 = distinct !DILexicalBlock(scope: !4358, file: !1210, line: 1338, column: 8)
!4406 = !DILocation(line: 1338, column: 18, scope: !4403)
!4407 = !DILocation(line: 1338, column: 14, scope: !4403)
!4408 = !DILocation(line: 1338, column: 27, scope: !4409)
!4409 = !DILexicalBlockFile(scope: !4410, file: !1210, discriminator: 2)
!4410 = distinct !DILexicalBlock(scope: !4404, file: !1210, line: 1338, column: 25)
!4411 = !DILocation(line: 1338, column: 83, scope: !4412)
!4412 = !DILexicalBlockFile(scope: !4409, file: !1210, discriminator: 4)
!4413 = !DILocation(line: 1338, column: 83, scope: !4409)
!4414 = !DILocation(line: 1338, column: 94, scope: !4415)
!4415 = !DILexicalBlockFile(scope: !4405, file: !1210, discriminator: 3)
!4416 = !DILocation(line: 1340, column: 36, scope: !4358)
!4417 = !DILocation(line: 1340, column: 38, scope: !4358)
!4418 = !DILocation(line: 1340, column: 32, scope: !4358)
!4419 = !DILocation(line: 1340, column: 12, scope: !4358)
!4420 = !DILocation(line: 1340, column: 10, scope: !4358)
!4421 = !DILocation(line: 1341, column: 9, scope: !4422)
!4422 = distinct !DILexicalBlock(scope: !4358, file: !1210, line: 1341, column: 9)
!4423 = !DILocation(line: 1341, column: 15, scope: !4422)
!4424 = !DILocation(line: 1341, column: 21, scope: !4422)
!4425 = !DILocation(line: 1341, column: 9, scope: !4358)
!4426 = !DILocation(line: 1343, column: 5, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4422, file: !1210, line: 1341, column: 33)
!4428 = !DILocation(line: 1344, column: 33, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4422, file: !1210, line: 1343, column: 12)
!4430 = !DILocation(line: 1344, column: 35, scope: !4429)
!4431 = !DILocation(line: 1344, column: 29, scope: !4429)
!4432 = !DILocation(line: 1344, column: 9, scope: !4429)
!4433 = !DILocation(line: 1344, column: 16, scope: !4429)
!4434 = !DILocation(line: 1344, column: 27, scope: !4429)
!4435 = !DILocation(line: 1347, column: 31, scope: !4358)
!4436 = !DILocation(line: 1347, column: 33, scope: !4358)
!4437 = !DILocation(line: 1347, column: 15, scope: !4358)
!4438 = !DILocation(line: 1347, column: 13, scope: !4358)
!4439 = !DILocation(line: 1348, column: 10, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !4358, file: !1210, line: 1348, column: 9)
!4441 = !DILocation(line: 1348, column: 9, scope: !4358)
!4442 = !DILocation(line: 1349, column: 9, scope: !4440)
!4443 = !DILocation(line: 1351, column: 12, scope: !4358)
!4444 = !DILocation(line: 1351, column: 5, scope: !4358)
!4445 = !DILocation(line: 1351, column: 21, scope: !4358)
!4446 = !DILocation(line: 1351, column: 27, scope: !4358)
!4447 = !DILocation(line: 1351, column: 29, scope: !4358)
!4448 = !DILocation(line: 1351, column: 26, scope: !4358)
!4449 = !DILocation(line: 1351, column: 34, scope: !4358)
!4450 = !DILocation(line: 1353, column: 5, scope: !4358)
!4451 = !DILocation(line: 1355, column: 24, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4453, file: !1210, line: 1353, column: 14)
!4453 = distinct !DILexicalBlock(scope: !4454, file: !1210, line: 1353, column: 5)
!4454 = distinct !DILexicalBlock(scope: !4358, file: !1210, line: 1353, column: 5)
!4455 = !DILocation(line: 1355, column: 9, scope: !4452)
!4456 = !DILocation(line: 1357, column: 23, scope: !4452)
!4457 = !DILocation(line: 1357, column: 30, scope: !4452)
!4458 = !DILocation(line: 1357, column: 41, scope: !4452)
!4459 = !DILocation(line: 1357, column: 48, scope: !4452)
!4460 = !DILocation(line: 1357, column: 21, scope: !4452)
!4461 = !DILocation(line: 1358, column: 13, scope: !4462)
!4462 = distinct !DILexicalBlock(scope: !4452, file: !1210, line: 1358, column: 13)
!4463 = !DILocation(line: 1358, column: 25, scope: !4462)
!4464 = !DILocation(line: 1358, column: 13, scope: !4452)
!4465 = !DILocation(line: 1360, column: 17, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4462, file: !1210, line: 1358, column: 45)
!4467 = !DILocation(line: 1361, column: 13, scope: !4466)
!4468 = !DILocation(line: 1364, column: 36, scope: !4452)
!4469 = !DILocation(line: 1364, column: 16, scope: !4452)
!4470 = !DILocation(line: 1364, column: 14, scope: !4452)
!4471 = !DILocation(line: 1365, column: 14, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4452, file: !1210, line: 1365, column: 13)
!4473 = !DILocation(line: 1365, column: 13, scope: !4452)
!4474 = !DILocation(line: 1366, column: 20, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !4472, file: !1210, line: 1365, column: 20)
!4476 = !DILocation(line: 1366, column: 13, scope: !4475)
!4477 = !DILocation(line: 1368, column: 17, scope: !4475)
!4478 = !DILocation(line: 1369, column: 13, scope: !4475)
!4479 = !DILocation(line: 1371, column: 16, scope: !4452)
!4480 = !DILocation(line: 1372, column: 16, scope: !4452)
!4481 = !DILocation(line: 1372, column: 22, scope: !4452)
!4482 = !DILocation(line: 1371, column: 9, scope: !4452)
!4483 = !DILocation(line: 1374, column: 16, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !4452, file: !1210, line: 1374, column: 9)
!4485 = !DILocation(line: 1374, column: 14, scope: !4484)
!4486 = !DILocation(line: 1374, column: 21, scope: !4487)
!4487 = !DILexicalBlockFile(scope: !4488, file: !1210, discriminator: 1)
!4488 = distinct !DILexicalBlock(scope: !4484, file: !1210, line: 1374, column: 9)
!4489 = !DILocation(line: 1374, column: 25, scope: !4487)
!4490 = !DILocation(line: 1374, column: 23, scope: !4487)
!4491 = !DILocation(line: 1374, column: 9, scope: !4487)
!4492 = !DILocation(line: 1375, column: 25, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4494, file: !1210, line: 1375, column: 17)
!4494 = distinct !DILexicalBlock(scope: !4488, file: !1210, line: 1374, column: 33)
!4495 = !DILocation(line: 1375, column: 17, scope: !4493)
!4496 = !DILocation(line: 1375, column: 31, scope: !4493)
!4497 = !DILocation(line: 1375, column: 28, scope: !4493)
!4498 = !DILocation(line: 1375, column: 17, scope: !4494)
!4499 = !DILocation(line: 1376, column: 17, scope: !4493)
!4500 = !DILocation(line: 1377, column: 9, scope: !4494)
!4501 = !DILocation(line: 1374, column: 29, scope: !4502)
!4502 = !DILexicalBlockFile(scope: !4488, file: !1210, discriminator: 2)
!4503 = !DILocation(line: 1374, column: 9, scope: !4502)
!4504 = distinct !{!4504, !4505}
!4505 = !DILocation(line: 1374, column: 9, scope: !4452)
!4506 = !DILocation(line: 1378, column: 13, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !4452, file: !1210, line: 1378, column: 13)
!4508 = !DILocation(line: 1378, column: 18, scope: !4507)
!4509 = !DILocation(line: 1378, column: 15, scope: !4507)
!4510 = !DILocation(line: 1378, column: 13, scope: !4452)
!4511 = !DILocation(line: 1379, column: 20, scope: !4512)
!4512 = distinct !DILexicalBlock(scope: !4507, file: !1210, line: 1378, column: 21)
!4513 = !DILocation(line: 1380, column: 50, scope: !4512)
!4514 = !DILocation(line: 1380, column: 56, scope: !4512)
!4515 = !DILocation(line: 1379, column: 13, scope: !4512)
!4516 = !DILocation(line: 1381, column: 17, scope: !4512)
!4517 = !DILocation(line: 1382, column: 13, scope: !4512)
!4518 = !DILocation(line: 1385, column: 13, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4452, file: !1210, line: 1385, column: 13)
!4520 = !DILocation(line: 1385, column: 20, scope: !4519)
!4521 = !DILocation(line: 1385, column: 27, scope: !4519)
!4522 = !DILocation(line: 1385, column: 13, scope: !4452)
!4523 = !DILocation(line: 1386, column: 20, scope: !4524)
!4524 = distinct !DILexicalBlock(scope: !4525, file: !1210, line: 1386, column: 13)
!4525 = distinct !DILexicalBlock(scope: !4519, file: !1210, line: 1385, column: 39)
!4526 = !DILocation(line: 1386, column: 18, scope: !4524)
!4527 = !DILocation(line: 1387, column: 54, scope: !4528)
!4528 = distinct !DILexicalBlock(scope: !4529, file: !1210, line: 1386, column: 31)
!4529 = distinct !DILexicalBlock(scope: !4524, file: !1210, line: 1386, column: 13)
!4530 = !DILocation(line: 1387, column: 29, scope: !4528)
!4531 = !DILocation(line: 1387, column: 36, scope: !4528)
!4532 = !DILocation(line: 1387, column: 43, scope: !4528)
!4533 = !DILocation(line: 1387, column: 27, scope: !4528)
!4534 = !DILocation(line: 1388, column: 22, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4528, file: !1210, line: 1388, column: 21)
!4536 = !DILocation(line: 1388, column: 21, scope: !4528)
!4537 = !DILocation(line: 1389, column: 21, scope: !4535)
!4538 = !DILocation(line: 1390, column: 21, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4528, file: !1210, line: 1390, column: 21)
!4540 = !DILocation(line: 1390, column: 32, scope: !4539)
!4541 = !DILocation(line: 1390, column: 39, scope: !4539)
!4542 = !DILocation(line: 1390, column: 50, scope: !4539)
!4543 = !DILocation(line: 1390, column: 47, scope: !4539)
!4544 = !DILocation(line: 1390, column: 21, scope: !4528)
!4545 = !DILocation(line: 1391, column: 21, scope: !4539)
!4546 = !DILocation(line: 1392, column: 13, scope: !4528)
!4547 = !DILocation(line: 1386, column: 27, scope: !4548)
!4548 = !DILexicalBlockFile(scope: !4529, file: !1210, discriminator: 1)
!4549 = !DILocation(line: 1386, column: 13, scope: !4548)
!4550 = distinct !{!4550, !4551}
!4551 = !DILocation(line: 1386, column: 13, scope: !4525)
!4552 = !DILocation(line: 1393, column: 9, scope: !4525)
!4553 = !DILocation(line: 1394, column: 23, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4519, file: !1210, line: 1393, column: 16)
!4555 = !DILocation(line: 1397, column: 14, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4452, file: !1210, line: 1397, column: 13)
!4557 = !DILocation(line: 1397, column: 13, scope: !4452)
!4558 = !DILocation(line: 1399, column: 19, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4556, file: !1210, line: 1397, column: 25)
!4560 = !DILocation(line: 1399, column: 17, scope: !4559)
!4561 = !DILocation(line: 1400, column: 13, scope: !4559)
!4562 = !DILocation(line: 1402, column: 19, scope: !4452)
!4563 = !DILocation(line: 1402, column: 30, scope: !4452)
!4564 = !DILocation(line: 1402, column: 16, scope: !4452)
!4565 = !DILocation(line: 1404, column: 13, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4452, file: !1210, line: 1404, column: 13)
!4567 = !DILocation(line: 1404, column: 21, scope: !4566)
!4568 = !DILocation(line: 1404, column: 29, scope: !4566)
!4569 = !DILocation(line: 1405, column: 53, scope: !4566)
!4570 = !DILocation(line: 1406, column: 13, scope: !4566)
!4571 = !DILocation(line: 1406, column: 20, scope: !4566)
!4572 = !DILocation(line: 1404, column: 13, scope: !4573)
!4573 = !DILexicalBlockFile(scope: !4452, file: !1210, discriminator: 1)
!4574 = !DILocalVariable(name: "frames_ctx", scope: !4575, file: !1210, line: 1407, type: !4576)
!4575 = distinct !DILexicalBlock(scope: !4566, file: !1210, line: 1406, column: 35)
!4576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4577, size: 64, align: 64)
!4577 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1044)
!4578 = !DILocation(line: 1407, column: 38, scope: !4575)
!4579 = !DILocation(line: 1408, column: 37, scope: !4575)
!4580 = !DILocation(line: 1408, column: 44, scope: !4575)
!4581 = !DILocation(line: 1408, column: 59, scope: !4575)
!4582 = !DILocation(line: 1408, column: 17, scope: !4575)
!4583 = !DILocation(line: 1409, column: 17, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4575, file: !1210, line: 1409, column: 17)
!4585 = !DILocation(line: 1409, column: 29, scope: !4584)
!4586 = !DILocation(line: 1409, column: 39, scope: !4584)
!4587 = !DILocation(line: 1409, column: 36, scope: !4584)
!4588 = !DILocation(line: 1409, column: 17, scope: !4575)
!4589 = !DILocation(line: 1410, column: 24, scope: !4590)
!4590 = distinct !DILexicalBlock(scope: !4584, file: !1210, line: 1409, column: 52)
!4591 = !DILocation(line: 1412, column: 38, scope: !4590)
!4592 = !DILocation(line: 1412, column: 44, scope: !4590)
!4593 = !DILocation(line: 1410, column: 17, scope: !4590)
!4594 = !DILocation(line: 1413, column: 17, scope: !4590)
!4595 = !DILocation(line: 1415, column: 9, scope: !4575)
!4596 = !DILocation(line: 1415, column: 20, scope: !4597)
!4597 = !DILexicalBlockFile(scope: !4598, file: !1210, discriminator: 1)
!4598 = distinct !DILexicalBlock(scope: !4566, file: !1210, line: 1415, column: 20)
!4599 = !DILocation(line: 1415, column: 28, scope: !4597)
!4600 = !DILocation(line: 1415, column: 36, scope: !4597)
!4601 = !DILocation(line: 1416, column: 60, scope: !4598)
!4602 = !DILocation(line: 1417, column: 20, scope: !4598)
!4603 = !DILocation(line: 1417, column: 27, scope: !4598)
!4604 = !DILocation(line: 1415, column: 20, scope: !4605)
!4605 = !DILexicalBlockFile(scope: !4566, file: !1210, discriminator: 2)
!4606 = !DILocalVariable(name: "device_ctx", scope: !4607, file: !1210, line: 1418, type: !4608)
!4607 = distinct !DILexicalBlock(scope: !4598, file: !1210, line: 1417, column: 42)
!4608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4609, size: 64, align: 64)
!4609 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !945)
!4610 = !DILocation(line: 1418, column: 38, scope: !4607)
!4611 = !DILocation(line: 1419, column: 37, scope: !4607)
!4612 = !DILocation(line: 1419, column: 44, scope: !4607)
!4613 = !DILocation(line: 1419, column: 59, scope: !4607)
!4614 = !DILocation(line: 1419, column: 17, scope: !4607)
!4615 = !DILocation(line: 1420, column: 17, scope: !4616)
!4616 = distinct !DILexicalBlock(scope: !4607, file: !1210, line: 1420, column: 17)
!4617 = !DILocation(line: 1420, column: 29, scope: !4616)
!4618 = !DILocation(line: 1420, column: 37, scope: !4616)
!4619 = !DILocation(line: 1420, column: 45, scope: !4616)
!4620 = !DILocation(line: 1420, column: 34, scope: !4616)
!4621 = !DILocation(line: 1420, column: 17, scope: !4607)
!4622 = !DILocation(line: 1421, column: 24, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4616, file: !1210, line: 1420, column: 58)
!4624 = !DILocation(line: 1423, column: 38, scope: !4623)
!4625 = !DILocation(line: 1423, column: 44, scope: !4623)
!4626 = !DILocation(line: 1421, column: 17, scope: !4623)
!4627 = !DILocation(line: 1424, column: 17, scope: !4623)
!4628 = !DILocation(line: 1426, column: 9, scope: !4607)
!4629 = !DILocation(line: 1426, column: 20, scope: !4630)
!4630 = !DILexicalBlockFile(scope: !4631, file: !1210, discriminator: 1)
!4631 = distinct !DILexicalBlock(scope: !4598, file: !1210, line: 1426, column: 20)
!4632 = !DILocation(line: 1426, column: 28, scope: !4630)
!4633 = !DILocation(line: 1426, column: 36, scope: !4630)
!4634 = !DILocation(line: 1429, column: 9, scope: !4635)
!4635 = distinct !DILexicalBlock(scope: !4631, file: !1210, line: 1427, column: 56)
!4636 = !DILocation(line: 1429, column: 20, scope: !4637)
!4637 = !DILexicalBlockFile(scope: !4638, file: !1210, discriminator: 1)
!4638 = distinct !DILexicalBlock(scope: !4631, file: !1210, line: 1429, column: 20)
!4639 = !DILocation(line: 1429, column: 28, scope: !4637)
!4640 = !DILocation(line: 1429, column: 36, scope: !4637)
!4641 = !DILocation(line: 1432, column: 9, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !4638, file: !1210, line: 1430, column: 54)
!4643 = !DILocation(line: 1433, column: 20, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4638, file: !1210, line: 1432, column: 16)
!4645 = !DILocation(line: 1434, column: 48, scope: !4644)
!4646 = !DILocation(line: 1434, column: 54, scope: !4644)
!4647 = !DILocation(line: 1433, column: 13, scope: !4644)
!4648 = !DILocation(line: 1435, column: 13, scope: !4644)
!4649 = !DILocation(line: 1437, column: 13, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4452, file: !1210, line: 1437, column: 13)
!4651 = !DILocation(line: 1437, column: 24, scope: !4650)
!4652 = !DILocation(line: 1437, column: 13, scope: !4452)
!4653 = !DILocation(line: 1438, column: 20, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4650, file: !1210, line: 1437, column: 33)
!4655 = !DILocation(line: 1439, column: 41, scope: !4654)
!4656 = !DILocation(line: 1439, column: 47, scope: !4654)
!4657 = !DILocation(line: 1438, column: 13, scope: !4654)
!4658 = !DILocation(line: 1440, column: 32, scope: !4654)
!4659 = !DILocation(line: 1440, column: 39, scope: !4654)
!4660 = !DILocation(line: 1440, column: 19, scope: !4654)
!4661 = !DILocation(line: 1440, column: 17, scope: !4654)
!4662 = !DILocation(line: 1441, column: 17, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4654, file: !1210, line: 1441, column: 17)
!4664 = !DILocation(line: 1441, column: 21, scope: !4663)
!4665 = !DILocation(line: 1441, column: 17, scope: !4654)
!4666 = !DILocation(line: 1442, column: 17, scope: !4663)
!4667 = !DILocation(line: 1443, column: 9, scope: !4654)
!4668 = !DILocation(line: 1444, column: 15, scope: !4452)
!4669 = !DILocation(line: 1444, column: 13, scope: !4452)
!4670 = !DILocation(line: 1445, column: 9, scope: !4452)
!4671 = !DILocation(line: 1448, column: 16, scope: !4452)
!4672 = !DILocation(line: 1449, column: 46, scope: !4452)
!4673 = !DILocation(line: 1449, column: 52, scope: !4452)
!4674 = !DILocation(line: 1448, column: 9, scope: !4452)
!4675 = !DILocation(line: 1450, column: 16, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4452, file: !1210, line: 1450, column: 9)
!4677 = !DILocation(line: 1450, column: 14, scope: !4676)
!4678 = !DILocation(line: 1450, column: 21, scope: !4679)
!4679 = !DILexicalBlockFile(scope: !4680, file: !1210, discriminator: 1)
!4680 = distinct !DILexicalBlock(scope: !4676, file: !1210, line: 1450, column: 9)
!4681 = !DILocation(line: 1450, column: 25, scope: !4679)
!4682 = !DILocation(line: 1450, column: 23, scope: !4679)
!4683 = !DILocation(line: 1450, column: 9, scope: !4679)
!4684 = !DILocation(line: 1451, column: 25, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4686, file: !1210, line: 1451, column: 17)
!4686 = distinct !DILexicalBlock(scope: !4680, file: !1210, line: 1450, column: 33)
!4687 = !DILocation(line: 1451, column: 17, scope: !4685)
!4688 = !DILocation(line: 1451, column: 31, scope: !4685)
!4689 = !DILocation(line: 1451, column: 28, scope: !4685)
!4690 = !DILocation(line: 1451, column: 17, scope: !4686)
!4691 = !DILocation(line: 1452, column: 17, scope: !4685)
!4692 = !DILocation(line: 1453, column: 9, scope: !4686)
!4693 = !DILocation(line: 1450, column: 29, scope: !4694)
!4694 = !DILexicalBlockFile(scope: !4680, file: !1210, discriminator: 2)
!4695 = !DILocation(line: 1450, column: 9, scope: !4694)
!4696 = distinct !{!4696, !4697}
!4697 = !DILocation(line: 1450, column: 9, scope: !4452)
!4698 = !DILocation(line: 1454, column: 9, scope: !4452)
!4699 = !DILocation(line: 1454, column: 16, scope: !4700)
!4700 = !DILexicalBlockFile(scope: !4701, file: !1210, discriminator: 1)
!4701 = distinct !DILexicalBlock(scope: !4702, file: !1210, line: 1454, column: 9)
!4702 = distinct !DILexicalBlock(scope: !4452, file: !1210, line: 1454, column: 9)
!4703 = !DILocation(line: 1454, column: 18, scope: !4700)
!4704 = !DILocation(line: 1454, column: 24, scope: !4700)
!4705 = !DILocation(line: 1454, column: 22, scope: !4700)
!4706 = !DILocation(line: 1454, column: 9, scope: !4700)
!4707 = !DILocation(line: 1455, column: 34, scope: !4701)
!4708 = !DILocation(line: 1455, column: 36, scope: !4701)
!4709 = !DILocation(line: 1455, column: 26, scope: !4701)
!4710 = !DILocation(line: 1455, column: 21, scope: !4701)
!4711 = !DILocation(line: 1455, column: 13, scope: !4701)
!4712 = !DILocation(line: 1455, column: 24, scope: !4701)
!4713 = !DILocation(line: 1454, column: 28, scope: !4714)
!4714 = !DILexicalBlockFile(scope: !4701, file: !1210, discriminator: 2)
!4715 = !DILocation(line: 1454, column: 9, scope: !4714)
!4716 = distinct !{!4716, !4698}
!4717 = !DILocation(line: 1456, column: 9, scope: !4452)
!4718 = !DILocation(line: 1353, column: 5, scope: !4719)
!4719 = !DILexicalBlockFile(scope: !4453, file: !1210, discriminator: 1)
!4720 = distinct !{!4720, !4450}
!4721 = !DILocation(line: 1459, column: 14, scope: !4358)
!4722 = !DILocation(line: 1459, column: 5, scope: !4358)
!4723 = !DILocation(line: 1460, column: 12, scope: !4358)
!4724 = !DILocation(line: 1460, column: 5, scope: !4358)
!4725 = !DILocation(line: 1461, column: 1, scope: !4358)
!4726 = distinct !DISubprogram(name: "hwaccel_uninit", scope: !1210, file: !1210, line: 1314, type: !1372, isLocal: true, isDefinition: true, scopeLine: 1315, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!4727 = !DILocalVariable(name: "avctx", arg: 1, scope: !4726, file: !1210, line: 1314, type: !1213)
!4728 = !DILocation(line: 1314, column: 44, scope: !4726)
!4729 = !DILocation(line: 1316, column: 9, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4726, file: !1210, line: 1316, column: 9)
!4731 = !DILocation(line: 1316, column: 16, scope: !4730)
!4732 = !DILocation(line: 1316, column: 24, scope: !4730)
!4733 = !DILocation(line: 1316, column: 27, scope: !4734)
!4734 = !DILexicalBlockFile(scope: !4730, file: !1210, discriminator: 1)
!4735 = !DILocation(line: 1316, column: 34, scope: !4734)
!4736 = !DILocation(line: 1316, column: 43, scope: !4734)
!4737 = !DILocation(line: 1316, column: 9, scope: !4734)
!4738 = !DILocation(line: 1317, column: 9, scope: !4730)
!4739 = !DILocation(line: 1317, column: 16, scope: !4730)
!4740 = !DILocation(line: 1317, column: 25, scope: !4730)
!4741 = !DILocation(line: 1317, column: 32, scope: !4730)
!4742 = !DILocation(line: 1319, column: 15, scope: !4726)
!4743 = !DILocation(line: 1319, column: 22, scope: !4726)
!4744 = !DILocation(line: 1319, column: 32, scope: !4726)
!4745 = !DILocation(line: 1319, column: 14, scope: !4726)
!4746 = !DILocation(line: 1319, column: 5, scope: !4726)
!4747 = !DILocation(line: 1321, column: 5, scope: !4726)
!4748 = !DILocation(line: 1321, column: 12, scope: !4726)
!4749 = !DILocation(line: 1321, column: 20, scope: !4726)
!4750 = !DILocation(line: 1323, column: 22, scope: !4726)
!4751 = !DILocation(line: 1323, column: 29, scope: !4726)
!4752 = !DILocation(line: 1323, column: 5, scope: !4726)
!4753 = !DILocation(line: 1324, column: 1, scope: !4726)
!4754 = distinct !DISubprogram(name: "hwaccel_init", scope: !1210, file: !1210, line: 1277, type: !4755, isLocal: true, isDefinition: true, scopeLine: 1279, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!4755 = !DISubroutineType(types: !4756)
!4756 = !{!939, !1213, !4252}
!4757 = !DILocalVariable(name: "avctx", arg: 1, scope: !4754, file: !1210, line: 1277, type: !1213)
!4758 = !DILocation(line: 1277, column: 41, scope: !4754)
!4759 = !DILocalVariable(name: "hw_config", arg: 2, scope: !4754, file: !1210, line: 1278, type: !4252)
!4760 = !DILocation(line: 1278, column: 56, scope: !4754)
!4761 = !DILocalVariable(name: "hwaccel", scope: !4754, file: !1210, line: 1280, type: !1391)
!4762 = !DILocation(line: 1280, column: 22, scope: !4754)
!4763 = !DILocalVariable(name: "err", scope: !4754, file: !1210, line: 1281, type: !939)
!4764 = !DILocation(line: 1281, column: 9, scope: !4754)
!4765 = !DILocation(line: 1283, column: 15, scope: !4754)
!4766 = !DILocation(line: 1283, column: 26, scope: !4754)
!4767 = !DILocation(line: 1283, column: 13, scope: !4754)
!4768 = !DILocation(line: 1284, column: 9, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4754, file: !1210, line: 1284, column: 9)
!4770 = !DILocation(line: 1284, column: 18, scope: !4769)
!4771 = !DILocation(line: 1284, column: 31, scope: !4769)
!4772 = !DILocation(line: 1284, column: 40, scope: !4769)
!4773 = !DILocation(line: 1285, column: 9, scope: !4769)
!4774 = !DILocation(line: 1285, column: 16, scope: !4769)
!4775 = !DILocation(line: 1285, column: 38, scope: !4769)
!4776 = !DILocation(line: 1284, column: 9, scope: !4777)
!4777 = !DILexicalBlockFile(scope: !4754, file: !1210, discriminator: 1)
!4778 = !DILocation(line: 1286, column: 16, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4769, file: !1210, line: 1285, column: 44)
!4780 = !DILocation(line: 1287, column: 16, scope: !4779)
!4781 = !DILocation(line: 1287, column: 25, scope: !4779)
!4782 = !DILocation(line: 1286, column: 9, scope: !4779)
!4783 = !DILocation(line: 1288, column: 9, scope: !4779)
!4784 = !DILocation(line: 1291, column: 9, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4754, file: !1210, line: 1291, column: 9)
!4786 = !DILocation(line: 1291, column: 18, scope: !4785)
!4787 = !DILocation(line: 1291, column: 9, scope: !4754)
!4788 = !DILocation(line: 1293, column: 24, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4785, file: !1210, line: 1291, column: 34)
!4790 = !DILocation(line: 1293, column: 33, scope: !4789)
!4791 = !DILocation(line: 1293, column: 13, scope: !4789)
!4792 = !DILocation(line: 1292, column: 9, scope: !4789)
!4793 = !DILocation(line: 1292, column: 16, scope: !4789)
!4794 = !DILocation(line: 1292, column: 26, scope: !4789)
!4795 = !DILocation(line: 1292, column: 44, scope: !4789)
!4796 = !DILocation(line: 1294, column: 14, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4789, file: !1210, line: 1294, column: 13)
!4798 = !DILocation(line: 1294, column: 21, scope: !4797)
!4799 = !DILocation(line: 1294, column: 31, scope: !4797)
!4800 = !DILocation(line: 1294, column: 13, scope: !4789)
!4801 = !DILocation(line: 1295, column: 13, scope: !4797)
!4802 = !DILocation(line: 1296, column: 5, scope: !4789)
!4803 = !DILocation(line: 1298, column: 22, scope: !4754)
!4804 = !DILocation(line: 1298, column: 5, scope: !4754)
!4805 = !DILocation(line: 1298, column: 12, scope: !4754)
!4806 = !DILocation(line: 1298, column: 20, scope: !4754)
!4807 = !DILocation(line: 1299, column: 9, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4754, file: !1210, line: 1299, column: 9)
!4809 = !DILocation(line: 1299, column: 18, scope: !4808)
!4810 = !DILocation(line: 1299, column: 9, scope: !4754)
!4811 = !DILocation(line: 1300, column: 15, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4808, file: !1210, line: 1299, column: 24)
!4813 = !DILocation(line: 1300, column: 24, scope: !4812)
!4814 = !DILocation(line: 1300, column: 29, scope: !4812)
!4815 = !DILocation(line: 1300, column: 13, scope: !4812)
!4816 = !DILocation(line: 1301, column: 13, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4812, file: !1210, line: 1301, column: 13)
!4818 = !DILocation(line: 1301, column: 17, scope: !4817)
!4819 = !DILocation(line: 1301, column: 13, scope: !4812)
!4820 = !DILocation(line: 1302, column: 20, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4817, file: !1210, line: 1301, column: 22)
!4822 = !DILocation(line: 1304, column: 40, scope: !4821)
!4823 = !DILocation(line: 1304, column: 51, scope: !4821)
!4824 = !DILocation(line: 1304, column: 58, scope: !4821)
!4825 = !DILocation(line: 1304, column: 20, scope: !4821)
!4826 = !DILocation(line: 1302, column: 13, scope: !4821)
!4827 = !DILocation(line: 1305, column: 23, scope: !4821)
!4828 = !DILocation(line: 1305, column: 30, scope: !4821)
!4829 = !DILocation(line: 1305, column: 40, scope: !4821)
!4830 = !DILocation(line: 1305, column: 22, scope: !4821)
!4831 = !DILocation(line: 1305, column: 13, scope: !4821)
!4832 = !DILocation(line: 1306, column: 13, scope: !4821)
!4833 = !DILocation(line: 1306, column: 20, scope: !4821)
!4834 = !DILocation(line: 1306, column: 28, scope: !4821)
!4835 = !DILocation(line: 1307, column: 20, scope: !4821)
!4836 = !DILocation(line: 1307, column: 13, scope: !4821)
!4837 = !DILocation(line: 1309, column: 5, scope: !4812)
!4838 = !DILocation(line: 1311, column: 5, scope: !4754)
!4839 = !DILocation(line: 1312, column: 1, scope: !4754)
!4840 = distinct !DISubprogram(name: "avcodec_default_get_buffer2", scope: !1210, file: !1210, line: 1657, type: !4841, isLocal: false, isDefinition: true, scopeLine: 1658, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!4841 = !DISubroutineType(types: !4842)
!4842 = !{!939, !1213, !1107, !939}
!4843 = !DILocalVariable(name: "avctx", arg: 1, scope: !4840, file: !1210, line: 1657, type: !1213)
!4844 = !DILocation(line: 1657, column: 49, scope: !4840)
!4845 = !DILocalVariable(name: "frame", arg: 2, scope: !4840, file: !1210, line: 1657, type: !1107)
!4846 = !DILocation(line: 1657, column: 65, scope: !4840)
!4847 = !DILocalVariable(name: "flags", arg: 3, scope: !4840, file: !1210, line: 1657, type: !939)
!4848 = !DILocation(line: 1657, column: 76, scope: !4840)
!4849 = !DILocalVariable(name: "ret", scope: !4840, file: !1210, line: 1659, type: !939)
!4850 = !DILocation(line: 1659, column: 9, scope: !4840)
!4851 = !DILocation(line: 1661, column: 9, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4840, file: !1210, line: 1661, column: 9)
!4853 = !DILocation(line: 1661, column: 16, scope: !4852)
!4854 = !DILocation(line: 1661, column: 9, scope: !4840)
!4855 = !DILocation(line: 1662, column: 37, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4852, file: !1210, line: 1661, column: 31)
!4857 = !DILocation(line: 1662, column: 44, scope: !4856)
!4858 = !DILocation(line: 1662, column: 59, scope: !4856)
!4859 = !DILocation(line: 1662, column: 15, scope: !4856)
!4860 = !DILocation(line: 1662, column: 13, scope: !4856)
!4861 = !DILocation(line: 1663, column: 24, scope: !4856)
!4862 = !DILocation(line: 1663, column: 31, scope: !4856)
!4863 = !DILocation(line: 1663, column: 9, scope: !4856)
!4864 = !DILocation(line: 1663, column: 16, scope: !4856)
!4865 = !DILocation(line: 1663, column: 22, scope: !4856)
!4866 = !DILocation(line: 1664, column: 25, scope: !4856)
!4867 = !DILocation(line: 1664, column: 32, scope: !4856)
!4868 = !DILocation(line: 1664, column: 9, scope: !4856)
!4869 = !DILocation(line: 1664, column: 16, scope: !4856)
!4870 = !DILocation(line: 1664, column: 23, scope: !4856)
!4871 = !DILocation(line: 1665, column: 16, scope: !4856)
!4872 = !DILocation(line: 1665, column: 9, scope: !4856)
!4873 = !DILocation(line: 1668, column: 34, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4840, file: !1210, line: 1668, column: 9)
!4875 = !DILocation(line: 1668, column: 41, scope: !4874)
!4876 = !DILocation(line: 1668, column: 16, scope: !4874)
!4877 = !DILocation(line: 1668, column: 14, scope: !4874)
!4878 = !DILocation(line: 1668, column: 49, scope: !4874)
!4879 = !DILocation(line: 1668, column: 9, scope: !4840)
!4880 = !DILocation(line: 1669, column: 16, scope: !4874)
!4881 = !DILocation(line: 1669, column: 9, scope: !4874)
!4882 = !DILocation(line: 1671, column: 13, scope: !4840)
!4883 = !DILocation(line: 1671, column: 20, scope: !4840)
!4884 = !DILocation(line: 1671, column: 5, scope: !4840)
!4885 = !DILocation(line: 1673, column: 33, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4840, file: !1210, line: 1671, column: 32)
!4887 = !DILocation(line: 1673, column: 40, scope: !4886)
!4888 = !DILocation(line: 1673, column: 16, scope: !4886)
!4889 = !DILocation(line: 1673, column: 9, scope: !4886)
!4890 = !DILocation(line: 1675, column: 33, scope: !4886)
!4891 = !DILocation(line: 1675, column: 40, scope: !4886)
!4892 = !DILocation(line: 1675, column: 16, scope: !4886)
!4893 = !DILocation(line: 1675, column: 9, scope: !4886)
!4894 = !DILocation(line: 1677, column: 9, scope: !4886)
!4895 = !DILocation(line: 1679, column: 1, scope: !4840)
!4896 = distinct !DISubprogram(name: "update_frame_pool", scope: !1210, file: !1210, line: 1463, type: !1211, isLocal: true, isDefinition: true, scopeLine: 1464, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!4897 = !DILocalVariable(name: "avctx", arg: 1, scope: !4896, file: !1210, line: 1463, type: !1213)
!4898 = !DILocation(line: 1463, column: 46, scope: !4896)
!4899 = !DILocalVariable(name: "frame", arg: 2, scope: !4896, file: !1210, line: 1463, type: !1107)
!4900 = !DILocation(line: 1463, column: 62, scope: !4896)
!4901 = !DILocalVariable(name: "pool", scope: !4896, file: !1210, line: 1465, type: !1439)
!4902 = !DILocation(line: 1465, column: 16, scope: !4896)
!4903 = !DILocation(line: 1465, column: 23, scope: !4896)
!4904 = !DILocation(line: 1465, column: 30, scope: !4896)
!4905 = !DILocation(line: 1465, column: 40, scope: !4896)
!4906 = !DILocalVariable(name: "i", scope: !4896, file: !1210, line: 1466, type: !939)
!4907 = !DILocation(line: 1466, column: 9, scope: !4896)
!4908 = !DILocalVariable(name: "ret", scope: !4896, file: !1210, line: 1466, type: !939)
!4909 = !DILocation(line: 1466, column: 12, scope: !4896)
!4910 = !DILocation(line: 1468, column: 13, scope: !4896)
!4911 = !DILocation(line: 1468, column: 20, scope: !4896)
!4912 = !DILocation(line: 1468, column: 5, scope: !4896)
!4913 = !DILocalVariable(name: "data", scope: !4914, file: !1210, line: 1470, type: !1315)
!4914 = distinct !DILexicalBlock(scope: !4915, file: !1210, line: 1469, column: 30)
!4915 = distinct !DILexicalBlock(scope: !4896, file: !1210, line: 1468, column: 32)
!4916 = !DILocation(line: 1470, column: 18, scope: !4914)
!4917 = !DILocalVariable(name: "linesize", scope: !4914, file: !1210, line: 1471, type: !1319)
!4918 = !DILocation(line: 1471, column: 13, scope: !4914)
!4919 = !DILocalVariable(name: "size", scope: !4914, file: !1210, line: 1472, type: !1319)
!4920 = !DILocation(line: 1472, column: 13, scope: !4914)
!4921 = !DILocalVariable(name: "w", scope: !4914, file: !1210, line: 1473, type: !939)
!4922 = !DILocation(line: 1473, column: 13, scope: !4914)
!4923 = !DILocation(line: 1473, column: 17, scope: !4914)
!4924 = !DILocation(line: 1473, column: 24, scope: !4914)
!4925 = !DILocalVariable(name: "h", scope: !4914, file: !1210, line: 1474, type: !939)
!4926 = !DILocation(line: 1474, column: 13, scope: !4914)
!4927 = !DILocation(line: 1474, column: 17, scope: !4914)
!4928 = !DILocation(line: 1474, column: 24, scope: !4914)
!4929 = !DILocalVariable(name: "tmpsize", scope: !4914, file: !1210, line: 1475, type: !939)
!4930 = !DILocation(line: 1475, column: 13, scope: !4914)
!4931 = !DILocalVariable(name: "unaligned", scope: !4914, file: !1210, line: 1475, type: !939)
!4932 = !DILocation(line: 1475, column: 22, scope: !4914)
!4933 = !DILocation(line: 1477, column: 13, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4914, file: !1210, line: 1477, column: 13)
!4935 = !DILocation(line: 1477, column: 19, scope: !4934)
!4936 = !DILocation(line: 1477, column: 29, scope: !4934)
!4937 = !DILocation(line: 1477, column: 36, scope: !4934)
!4938 = !DILocation(line: 1477, column: 26, scope: !4934)
!4939 = !DILocation(line: 1477, column: 43, scope: !4934)
!4940 = !DILocation(line: 1478, column: 13, scope: !4934)
!4941 = !DILocation(line: 1478, column: 19, scope: !4934)
!4942 = !DILocation(line: 1478, column: 28, scope: !4934)
!4943 = !DILocation(line: 1478, column: 35, scope: !4934)
!4944 = !DILocation(line: 1478, column: 25, scope: !4934)
!4945 = !DILocation(line: 1478, column: 41, scope: !4934)
!4946 = !DILocation(line: 1478, column: 44, scope: !4947)
!4947 = !DILexicalBlockFile(scope: !4934, file: !1210, discriminator: 1)
!4948 = !DILocation(line: 1478, column: 50, scope: !4947)
!4949 = !DILocation(line: 1478, column: 60, scope: !4947)
!4950 = !DILocation(line: 1478, column: 67, scope: !4947)
!4951 = !DILocation(line: 1478, column: 57, scope: !4947)
!4952 = !DILocation(line: 1477, column: 13, scope: !4953)
!4953 = !DILexicalBlockFile(scope: !4914, file: !1210, discriminator: 1)
!4954 = !DILocation(line: 1479, column: 13, scope: !4934)
!4955 = !DILocation(line: 1481, column: 35, scope: !4914)
!4956 = !DILocation(line: 1481, column: 50, scope: !4914)
!4957 = !DILocation(line: 1481, column: 56, scope: !4914)
!4958 = !DILocation(line: 1481, column: 9, scope: !4914)
!4959 = !DILocation(line: 1483, column: 9, scope: !4914)
!4960 = distinct !{!4960, !4959}
!4961 = !DILocation(line: 1486, column: 43, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4914, file: !1210, line: 1483, column: 12)
!4963 = !DILocation(line: 1486, column: 53, scope: !4962)
!4964 = !DILocation(line: 1486, column: 60, scope: !4962)
!4965 = !DILocation(line: 1486, column: 69, scope: !4962)
!4966 = !DILocation(line: 1486, column: 19, scope: !4962)
!4967 = !DILocation(line: 1486, column: 17, scope: !4962)
!4968 = !DILocation(line: 1487, column: 17, scope: !4969)
!4969 = distinct !DILexicalBlock(scope: !4962, file: !1210, line: 1487, column: 17)
!4970 = !DILocation(line: 1487, column: 21, scope: !4969)
!4971 = !DILocation(line: 1487, column: 17, scope: !4962)
!4972 = !DILocation(line: 1488, column: 24, scope: !4969)
!4973 = !DILocation(line: 1488, column: 17, scope: !4969)
!4974 = !DILocation(line: 1490, column: 18, scope: !4962)
!4975 = !DILocation(line: 1490, column: 24, scope: !4962)
!4976 = !DILocation(line: 1490, column: 26, scope: !4962)
!4977 = !DILocation(line: 1490, column: 22, scope: !4962)
!4978 = !DILocation(line: 1490, column: 20, scope: !4962)
!4979 = !DILocation(line: 1490, column: 15, scope: !4962)
!4980 = !DILocation(line: 1492, column: 23, scope: !4962)
!4981 = !DILocation(line: 1493, column: 20, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4962, file: !1210, line: 1493, column: 13)
!4983 = !DILocation(line: 1493, column: 18, scope: !4982)
!4984 = !DILocation(line: 1493, column: 25, scope: !4985)
!4985 = !DILexicalBlockFile(scope: !4986, file: !1210, discriminator: 1)
!4986 = distinct !DILexicalBlock(scope: !4982, file: !1210, line: 1493, column: 13)
!4987 = !DILocation(line: 1493, column: 27, scope: !4985)
!4988 = !DILocation(line: 1493, column: 13, scope: !4985)
!4989 = !DILocation(line: 1494, column: 39, scope: !4986)
!4990 = !DILocation(line: 1494, column: 30, scope: !4986)
!4991 = !DILocation(line: 1494, column: 63, scope: !4986)
!4992 = !DILocation(line: 1494, column: 44, scope: !4986)
!4993 = !DILocation(line: 1494, column: 50, scope: !4986)
!4994 = !DILocation(line: 1494, column: 42, scope: !4986)
!4995 = !DILocation(line: 1494, column: 27, scope: !4986)
!4996 = !DILocation(line: 1494, column: 17, scope: !4986)
!4997 = !DILocation(line: 1493, column: 33, scope: !4998)
!4998 = !DILexicalBlockFile(scope: !4986, file: !1210, discriminator: 2)
!4999 = !DILocation(line: 1493, column: 13, scope: !4998)
!5000 = distinct !{!5000, !5001}
!5001 = !DILocation(line: 1493, column: 13, scope: !4962)
!5002 = !DILocation(line: 1495, column: 9, scope: !4962)
!5003 = !DILocation(line: 1495, column: 18, scope: !4953)
!5004 = !DILocation(line: 1495, column: 9, scope: !4953)
!5005 = !DILocation(line: 1497, column: 42, scope: !4914)
!5006 = !DILocation(line: 1497, column: 48, scope: !4914)
!5007 = !DILocation(line: 1497, column: 55, scope: !4914)
!5008 = !DILocation(line: 1497, column: 64, scope: !4914)
!5009 = !DILocation(line: 1498, column: 47, scope: !4914)
!5010 = !DILocation(line: 1497, column: 19, scope: !4914)
!5011 = !DILocation(line: 1497, column: 17, scope: !4914)
!5012 = !DILocation(line: 1499, column: 13, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !4914, file: !1210, line: 1499, column: 13)
!5014 = !DILocation(line: 1499, column: 21, scope: !5013)
!5015 = !DILocation(line: 1499, column: 13, scope: !4914)
!5016 = !DILocation(line: 1500, column: 20, scope: !5013)
!5017 = !DILocation(line: 1500, column: 13, scope: !5013)
!5018 = !DILocation(line: 1502, column: 16, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !4914, file: !1210, line: 1502, column: 9)
!5020 = !DILocation(line: 1502, column: 14, scope: !5019)
!5021 = !DILocation(line: 1502, column: 21, scope: !5022)
!5022 = !DILexicalBlockFile(scope: !5023, file: !1210, discriminator: 1)
!5023 = distinct !DILexicalBlock(scope: !5019, file: !1210, line: 1502, column: 9)
!5024 = !DILocation(line: 1502, column: 23, scope: !5022)
!5025 = !DILocation(line: 1502, column: 27, scope: !5022)
!5026 = !DILocation(line: 1502, column: 35, scope: !5027)
!5027 = !DILexicalBlockFile(scope: !5023, file: !1210, discriminator: 2)
!5028 = !DILocation(line: 1502, column: 37, scope: !5027)
!5029 = !DILocation(line: 1502, column: 30, scope: !5027)
!5030 = !DILocation(line: 1502, column: 27, scope: !5027)
!5031 = !DILocation(line: 1502, column: 9, scope: !5032)
!5032 = !DILexicalBlockFile(scope: !5019, file: !1210, discriminator: 3)
!5033 = !DILocation(line: 1503, column: 28, scope: !5023)
!5034 = !DILocation(line: 1503, column: 30, scope: !5023)
!5035 = !DILocation(line: 1503, column: 23, scope: !5023)
!5036 = !DILocation(line: 1503, column: 42, scope: !5023)
!5037 = !DILocation(line: 1503, column: 37, scope: !5023)
!5038 = !DILocation(line: 1503, column: 35, scope: !5023)
!5039 = !DILocation(line: 1503, column: 18, scope: !5023)
!5040 = !DILocation(line: 1503, column: 13, scope: !5023)
!5041 = !DILocation(line: 1503, column: 21, scope: !5023)
!5042 = !DILocation(line: 1502, column: 44, scope: !5043)
!5043 = !DILexicalBlockFile(scope: !5023, file: !1210, discriminator: 4)
!5044 = !DILocation(line: 1502, column: 9, scope: !5043)
!5045 = distinct !{!5045, !5046}
!5046 = !DILocation(line: 1502, column: 9, scope: !4914)
!5047 = !DILocation(line: 1504, column: 19, scope: !4914)
!5048 = !DILocation(line: 1504, column: 35, scope: !4914)
!5049 = !DILocation(line: 1504, column: 30, scope: !4914)
!5050 = !DILocation(line: 1504, column: 40, scope: !4914)
!5051 = !DILocation(line: 1504, column: 38, scope: !4914)
!5052 = !DILocation(line: 1504, column: 27, scope: !4914)
!5053 = !DILocation(line: 1504, column: 14, scope: !4914)
!5054 = !DILocation(line: 1504, column: 9, scope: !4914)
!5055 = !DILocation(line: 1504, column: 17, scope: !4914)
!5056 = !DILocation(line: 1506, column: 16, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !4914, file: !1210, line: 1506, column: 9)
!5058 = !DILocation(line: 1506, column: 14, scope: !5057)
!5059 = !DILocation(line: 1506, column: 21, scope: !5060)
!5060 = !DILexicalBlockFile(scope: !5061, file: !1210, discriminator: 1)
!5061 = distinct !DILexicalBlock(scope: !5057, file: !1210, line: 1506, column: 9)
!5062 = !DILocation(line: 1506, column: 23, scope: !5060)
!5063 = !DILocation(line: 1506, column: 9, scope: !5060)
!5064 = !DILocation(line: 1507, column: 48, scope: !5065)
!5065 = distinct !DILexicalBlock(scope: !5061, file: !1210, line: 1506, column: 33)
!5066 = !DILocation(line: 1507, column: 36, scope: !5065)
!5067 = !DILocation(line: 1507, column: 42, scope: !5065)
!5068 = !DILocation(line: 1507, column: 13, scope: !5065)
!5069 = !DILocation(line: 1508, column: 42, scope: !5065)
!5070 = !DILocation(line: 1508, column: 33, scope: !5065)
!5071 = !DILocation(line: 1508, column: 28, scope: !5065)
!5072 = !DILocation(line: 1508, column: 13, scope: !5065)
!5073 = !DILocation(line: 1508, column: 19, scope: !5065)
!5074 = !DILocation(line: 1508, column: 31, scope: !5065)
!5075 = !DILocation(line: 1509, column: 22, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5065, file: !1210, line: 1509, column: 17)
!5077 = !DILocation(line: 1509, column: 17, scope: !5076)
!5078 = !DILocation(line: 1509, column: 17, scope: !5065)
!5079 = !DILocation(line: 1510, column: 59, scope: !5080)
!5080 = distinct !DILexicalBlock(scope: !5076, file: !1210, line: 1509, column: 26)
!5081 = !DILocation(line: 1510, column: 54, scope: !5080)
!5082 = !DILocation(line: 1510, column: 62, scope: !5080)
!5083 = !DILocation(line: 1510, column: 67, scope: !5080)
!5084 = !DILocation(line: 1510, column: 72, scope: !5080)
!5085 = !DILocation(line: 1510, column: 34, scope: !5080)
!5086 = !DILocation(line: 1510, column: 29, scope: !5080)
!5087 = !DILocation(line: 1510, column: 17, scope: !5080)
!5088 = !DILocation(line: 1510, column: 23, scope: !5080)
!5089 = !DILocation(line: 1510, column: 32, scope: !5080)
!5090 = !DILocation(line: 1514, column: 34, scope: !5091)
!5091 = distinct !DILexicalBlock(scope: !5080, file: !1210, line: 1514, column: 21)
!5092 = !DILocation(line: 1514, column: 22, scope: !5091)
!5093 = !DILocation(line: 1514, column: 28, scope: !5091)
!5094 = !DILocation(line: 1514, column: 21, scope: !5080)
!5095 = !DILocation(line: 1515, column: 25, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5091, file: !1210, line: 1514, column: 38)
!5097 = !DILocation(line: 1516, column: 21, scope: !5096)
!5098 = !DILocation(line: 1518, column: 13, scope: !5080)
!5099 = !DILocation(line: 1519, column: 9, scope: !5065)
!5100 = !DILocation(line: 1506, column: 29, scope: !5101)
!5101 = !DILexicalBlockFile(scope: !5061, file: !1210, discriminator: 2)
!5102 = !DILocation(line: 1506, column: 9, scope: !5101)
!5103 = distinct !{!5103, !5104}
!5104 = !DILocation(line: 1506, column: 9, scope: !4914)
!5105 = !DILocation(line: 1520, column: 24, scope: !4914)
!5106 = !DILocation(line: 1520, column: 31, scope: !4914)
!5107 = !DILocation(line: 1520, column: 9, scope: !4914)
!5108 = !DILocation(line: 1520, column: 15, scope: !4914)
!5109 = !DILocation(line: 1520, column: 22, scope: !4914)
!5110 = !DILocation(line: 1521, column: 23, scope: !4914)
!5111 = !DILocation(line: 1521, column: 30, scope: !4914)
!5112 = !DILocation(line: 1521, column: 9, scope: !4914)
!5113 = !DILocation(line: 1521, column: 15, scope: !4914)
!5114 = !DILocation(line: 1521, column: 21, scope: !4914)
!5115 = !DILocation(line: 1522, column: 24, scope: !4914)
!5116 = !DILocation(line: 1522, column: 31, scope: !4914)
!5117 = !DILocation(line: 1522, column: 9, scope: !4914)
!5118 = !DILocation(line: 1522, column: 15, scope: !4914)
!5119 = !DILocation(line: 1522, column: 22, scope: !4914)
!5120 = !DILocation(line: 1524, column: 9, scope: !4914)
!5121 = !DILocalVariable(name: "ch", scope: !5122, file: !1210, line: 1527, type: !939)
!5122 = distinct !DILexicalBlock(scope: !4915, file: !1210, line: 1526, column: 30)
!5123 = !DILocation(line: 1527, column: 13, scope: !5122)
!5124 = !DILocation(line: 1527, column: 18, scope: !5122)
!5125 = !DILocation(line: 1527, column: 25, scope: !5122)
!5126 = !DILocalVariable(name: "planar", scope: !5122, file: !1210, line: 1528, type: !939)
!5127 = !DILocation(line: 1528, column: 13, scope: !5122)
!5128 = !DILocation(line: 1528, column: 46, scope: !5122)
!5129 = !DILocation(line: 1528, column: 53, scope: !5122)
!5130 = !DILocation(line: 1528, column: 22, scope: !5122)
!5131 = !DILocalVariable(name: "planes", scope: !5122, file: !1210, line: 1529, type: !939)
!5132 = !DILocation(line: 1529, column: 13, scope: !5122)
!5133 = !DILocation(line: 1529, column: 22, scope: !5122)
!5134 = !DILocation(line: 1529, column: 31, scope: !5135)
!5135 = !DILexicalBlockFile(scope: !5122, file: !1210, discriminator: 1)
!5136 = !DILocation(line: 1529, column: 22, scope: !5135)
!5137 = !DILocation(line: 1529, column: 22, scope: !5138)
!5138 = !DILexicalBlockFile(scope: !5122, file: !1210, discriminator: 2)
!5139 = !DILocation(line: 1529, column: 22, scope: !5140)
!5140 = !DILexicalBlockFile(scope: !5122, file: !1210, discriminator: 3)
!5141 = !DILocation(line: 1529, column: 13, scope: !5140)
!5142 = !DILocation(line: 1531, column: 13, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !5122, file: !1210, line: 1531, column: 13)
!5144 = !DILocation(line: 1531, column: 19, scope: !5143)
!5145 = !DILocation(line: 1531, column: 29, scope: !5143)
!5146 = !DILocation(line: 1531, column: 36, scope: !5143)
!5147 = !DILocation(line: 1531, column: 26, scope: !5143)
!5148 = !DILocation(line: 1531, column: 43, scope: !5143)
!5149 = !DILocation(line: 1531, column: 46, scope: !5150)
!5150 = !DILexicalBlockFile(scope: !5143, file: !1210, discriminator: 1)
!5151 = !DILocation(line: 1531, column: 52, scope: !5150)
!5152 = !DILocation(line: 1531, column: 62, scope: !5150)
!5153 = !DILocation(line: 1531, column: 59, scope: !5150)
!5154 = !DILocation(line: 1531, column: 69, scope: !5150)
!5155 = !DILocation(line: 1532, column: 13, scope: !5143)
!5156 = !DILocation(line: 1532, column: 19, scope: !5143)
!5157 = !DILocation(line: 1532, column: 31, scope: !5143)
!5158 = !DILocation(line: 1532, column: 28, scope: !5143)
!5159 = !DILocation(line: 1532, column: 34, scope: !5143)
!5160 = !DILocation(line: 1532, column: 37, scope: !5150)
!5161 = !DILocation(line: 1532, column: 44, scope: !5150)
!5162 = !DILocation(line: 1532, column: 58, scope: !5150)
!5163 = !DILocation(line: 1532, column: 64, scope: !5150)
!5164 = !DILocation(line: 1532, column: 55, scope: !5150)
!5165 = !DILocation(line: 1531, column: 13, scope: !5138)
!5166 = !DILocation(line: 1533, column: 13, scope: !5143)
!5167 = !DILocation(line: 1535, column: 32, scope: !5122)
!5168 = !DILocation(line: 1535, column: 38, scope: !5122)
!5169 = !DILocation(line: 1535, column: 9, scope: !5122)
!5170 = !DILocation(line: 1536, column: 43, scope: !5122)
!5171 = !DILocation(line: 1536, column: 49, scope: !5122)
!5172 = !DILocation(line: 1536, column: 62, scope: !5122)
!5173 = !DILocation(line: 1537, column: 42, scope: !5122)
!5174 = !DILocation(line: 1537, column: 49, scope: !5122)
!5175 = !DILocation(line: 1537, column: 61, scope: !5122)
!5176 = !DILocation(line: 1537, column: 68, scope: !5122)
!5177 = !DILocation(line: 1536, column: 15, scope: !5122)
!5178 = !DILocation(line: 1536, column: 13, scope: !5122)
!5179 = !DILocation(line: 1538, column: 13, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5122, file: !1210, line: 1538, column: 13)
!5181 = !DILocation(line: 1538, column: 17, scope: !5180)
!5182 = !DILocation(line: 1538, column: 13, scope: !5122)
!5183 = !DILocation(line: 1539, column: 13, scope: !5180)
!5184 = !DILocation(line: 1541, column: 46, scope: !5122)
!5185 = !DILocation(line: 1541, column: 52, scope: !5122)
!5186 = !DILocation(line: 1541, column: 26, scope: !5122)
!5187 = !DILocation(line: 1541, column: 9, scope: !5122)
!5188 = !DILocation(line: 1541, column: 15, scope: !5122)
!5189 = !DILocation(line: 1541, column: 24, scope: !5122)
!5190 = !DILocation(line: 1542, column: 14, scope: !5191)
!5191 = distinct !DILexicalBlock(scope: !5122, file: !1210, line: 1542, column: 13)
!5192 = !DILocation(line: 1542, column: 20, scope: !5191)
!5193 = !DILocation(line: 1542, column: 13, scope: !5122)
!5194 = !DILocation(line: 1543, column: 17, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !5191, file: !1210, line: 1542, column: 30)
!5196 = !DILocation(line: 1544, column: 13, scope: !5195)
!5197 = !DILocation(line: 1547, column: 24, scope: !5122)
!5198 = !DILocation(line: 1547, column: 31, scope: !5122)
!5199 = !DILocation(line: 1547, column: 9, scope: !5122)
!5200 = !DILocation(line: 1547, column: 15, scope: !5122)
!5201 = !DILocation(line: 1547, column: 22, scope: !5122)
!5202 = !DILocation(line: 1548, column: 24, scope: !5122)
!5203 = !DILocation(line: 1548, column: 9, scope: !5122)
!5204 = !DILocation(line: 1548, column: 15, scope: !5122)
!5205 = !DILocation(line: 1548, column: 22, scope: !5122)
!5206 = !DILocation(line: 1549, column: 26, scope: !5122)
!5207 = !DILocation(line: 1549, column: 9, scope: !5122)
!5208 = !DILocation(line: 1549, column: 15, scope: !5122)
!5209 = !DILocation(line: 1549, column: 24, scope: !5122)
!5210 = !DILocation(line: 1550, column: 25, scope: !5122)
!5211 = !DILocation(line: 1550, column: 32, scope: !5122)
!5212 = !DILocation(line: 1550, column: 9, scope: !5122)
!5213 = !DILocation(line: 1550, column: 15, scope: !5122)
!5214 = !DILocation(line: 1550, column: 23, scope: !5122)
!5215 = !DILocation(line: 1551, column: 9, scope: !5122)
!5216 = !DILocation(line: 1553, column: 14, scope: !4915)
!5217 = distinct !{!5217, !5216}
!5218 = !DILocation(line: 1553, column: 31, scope: !5219)
!5219 = !DILexicalBlockFile(scope: !5220, file: !1210, discriminator: 1)
!5220 = distinct !DILexicalBlock(scope: !5221, file: !1210, line: 1553, column: 29)
!5221 = distinct !DILexicalBlock(scope: !5222, file: !1210, line: 1553, column: 23)
!5222 = distinct !DILexicalBlock(scope: !4915, file: !1210, line: 1553, column: 17)
!5223 = !DILocation(line: 1553, column: 87, scope: !5224)
!5224 = !DILexicalBlockFile(scope: !5219, file: !1210, discriminator: 2)
!5225 = !DILocation(line: 1553, column: 87, scope: !5219)
!5226 = !DILocation(line: 1554, column: 5, scope: !4915)
!5227 = !DILocation(line: 1555, column: 5, scope: !4896)
!5228 = !DILocation(line: 1557, column: 12, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !4896, file: !1210, line: 1557, column: 5)
!5230 = !DILocation(line: 1557, column: 10, scope: !5229)
!5231 = !DILocation(line: 1557, column: 17, scope: !5232)
!5232 = !DILexicalBlockFile(scope: !5233, file: !1210, discriminator: 1)
!5233 = distinct !DILexicalBlock(scope: !5229, file: !1210, line: 1557, column: 5)
!5234 = !DILocation(line: 1557, column: 19, scope: !5232)
!5235 = !DILocation(line: 1557, column: 5, scope: !5232)
!5236 = !DILocation(line: 1558, column: 44, scope: !5233)
!5237 = !DILocation(line: 1558, column: 32, scope: !5233)
!5238 = !DILocation(line: 1558, column: 38, scope: !5233)
!5239 = !DILocation(line: 1558, column: 9, scope: !5233)
!5240 = !DILocation(line: 1557, column: 25, scope: !5241)
!5241 = !DILexicalBlockFile(scope: !5233, file: !1210, discriminator: 2)
!5242 = !DILocation(line: 1557, column: 5, scope: !5241)
!5243 = distinct !{!5243, !5244}
!5244 = !DILocation(line: 1557, column: 5, scope: !4896)
!5245 = !DILocation(line: 1559, column: 5, scope: !4896)
!5246 = !DILocation(line: 1559, column: 11, scope: !4896)
!5247 = !DILocation(line: 1559, column: 18, scope: !4896)
!5248 = !DILocation(line: 1560, column: 37, scope: !4896)
!5249 = !DILocation(line: 1560, column: 43, scope: !4896)
!5250 = !DILocation(line: 1560, column: 51, scope: !4896)
!5251 = !DILocation(line: 1560, column: 20, scope: !4896)
!5252 = !DILocation(line: 1560, column: 26, scope: !4896)
!5253 = !DILocation(line: 1560, column: 35, scope: !4896)
!5254 = !DILocation(line: 1560, column: 5, scope: !4896)
!5255 = !DILocation(line: 1560, column: 11, scope: !4896)
!5256 = !DILocation(line: 1560, column: 18, scope: !4896)
!5257 = !DILocation(line: 1561, column: 19, scope: !4896)
!5258 = !DILocation(line: 1561, column: 25, scope: !4896)
!5259 = !DILocation(line: 1561, column: 32, scope: !4896)
!5260 = !DILocation(line: 1561, column: 5, scope: !4896)
!5261 = !DILocation(line: 1561, column: 11, scope: !4896)
!5262 = !DILocation(line: 1561, column: 17, scope: !4896)
!5263 = !DILocation(line: 1562, column: 12, scope: !4896)
!5264 = !DILocation(line: 1562, column: 5, scope: !4896)
!5265 = !DILocation(line: 1563, column: 1, scope: !4896)
!5266 = distinct !DISubprogram(name: "video_get_buffer", scope: !1210, file: !1210, line: 1610, type: !1211, isLocal: true, isDefinition: true, scopeLine: 1611, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!5267 = !DILocalVariable(name: "s", arg: 1, scope: !5266, file: !1210, line: 1610, type: !1213)
!5268 = !DILocation(line: 1610, column: 45, scope: !5266)
!5269 = !DILocalVariable(name: "pic", arg: 2, scope: !5266, file: !1210, line: 1610, type: !1107)
!5270 = !DILocation(line: 1610, column: 57, scope: !5266)
!5271 = !DILocalVariable(name: "pool", scope: !5266, file: !1210, line: 1612, type: !1439)
!5272 = !DILocation(line: 1612, column: 16, scope: !5266)
!5273 = !DILocation(line: 1612, column: 23, scope: !5266)
!5274 = !DILocation(line: 1612, column: 26, scope: !5266)
!5275 = !DILocation(line: 1612, column: 36, scope: !5266)
!5276 = !DILocalVariable(name: "desc", scope: !5266, file: !1210, line: 1613, type: !3937)
!5277 = !DILocation(line: 1613, column: 31, scope: !5266)
!5278 = !DILocation(line: 1613, column: 58, scope: !5266)
!5279 = !DILocation(line: 1613, column: 63, scope: !5266)
!5280 = !DILocation(line: 1613, column: 38, scope: !5266)
!5281 = !DILocalVariable(name: "i", scope: !5266, file: !1210, line: 1614, type: !939)
!5282 = !DILocation(line: 1614, column: 9, scope: !5266)
!5283 = !DILocation(line: 1616, column: 9, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !5266, file: !1210, line: 1616, column: 9)
!5285 = !DILocation(line: 1616, column: 14, scope: !5284)
!5286 = !DILocation(line: 1616, column: 22, scope: !5284)
!5287 = !DILocation(line: 1616, column: 25, scope: !5288)
!5288 = !DILexicalBlockFile(scope: !5284, file: !1210, discriminator: 1)
!5289 = !DILocation(line: 1616, column: 30, scope: !5288)
!5290 = !DILocation(line: 1616, column: 38, scope: !5288)
!5291 = !DILocation(line: 1616, column: 41, scope: !5292)
!5292 = !DILexicalBlockFile(scope: !5284, file: !1210, discriminator: 2)
!5293 = !DILocation(line: 1616, column: 46, scope: !5292)
!5294 = !DILocation(line: 1616, column: 54, scope: !5292)
!5295 = !DILocation(line: 1616, column: 57, scope: !5296)
!5296 = !DILexicalBlockFile(scope: !5284, file: !1210, discriminator: 3)
!5297 = !DILocation(line: 1616, column: 62, scope: !5296)
!5298 = !DILocation(line: 1616, column: 9, scope: !5296)
!5299 = !DILocation(line: 1617, column: 16, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5284, file: !1210, line: 1616, column: 71)
!5301 = !DILocation(line: 1617, column: 9, scope: !5300)
!5302 = !DILocation(line: 1618, column: 9, scope: !5300)
!5303 = !DILocation(line: 1621, column: 10, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5266, file: !1210, line: 1621, column: 9)
!5305 = !DILocation(line: 1621, column: 9, scope: !5266)
!5306 = !DILocation(line: 1622, column: 16, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5304, file: !1210, line: 1621, column: 16)
!5308 = !DILocation(line: 1624, column: 33, scope: !5307)
!5309 = !DILocation(line: 1624, column: 38, scope: !5307)
!5310 = !DILocation(line: 1624, column: 13, scope: !5307)
!5311 = !DILocation(line: 1622, column: 9, scope: !5307)
!5312 = !DILocation(line: 1625, column: 9, scope: !5307)
!5313 = !DILocation(line: 1628, column: 12, scope: !5266)
!5314 = !DILocation(line: 1628, column: 17, scope: !5266)
!5315 = !DILocation(line: 1628, column: 5, scope: !5266)
!5316 = !DILocation(line: 1629, column: 26, scope: !5266)
!5317 = !DILocation(line: 1629, column: 31, scope: !5266)
!5318 = !DILocation(line: 1629, column: 5, scope: !5266)
!5319 = !DILocation(line: 1629, column: 10, scope: !5266)
!5320 = !DILocation(line: 1629, column: 24, scope: !5266)
!5321 = !DILocation(line: 1631, column: 12, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5266, file: !1210, line: 1631, column: 5)
!5323 = !DILocation(line: 1631, column: 10, scope: !5322)
!5324 = !DILocation(line: 1631, column: 17, scope: !5325)
!5325 = !DILexicalBlockFile(scope: !5326, file: !1210, discriminator: 1)
!5326 = distinct !DILexicalBlock(scope: !5322, file: !1210, line: 1631, column: 5)
!5327 = !DILocation(line: 1631, column: 19, scope: !5325)
!5328 = !DILocation(line: 1631, column: 23, scope: !5325)
!5329 = !DILocation(line: 1631, column: 38, scope: !5330)
!5330 = !DILexicalBlockFile(scope: !5326, file: !1210, discriminator: 2)
!5331 = !DILocation(line: 1631, column: 26, scope: !5330)
!5332 = !DILocation(line: 1631, column: 32, scope: !5330)
!5333 = !DILocation(line: 1631, column: 23, scope: !5330)
!5334 = !DILocation(line: 1631, column: 5, scope: !5335)
!5335 = !DILexicalBlockFile(scope: !5322, file: !1210, discriminator: 3)
!5336 = !DILocation(line: 1632, column: 43, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !5326, file: !1210, line: 1631, column: 47)
!5338 = !DILocation(line: 1632, column: 28, scope: !5337)
!5339 = !DILocation(line: 1632, column: 34, scope: !5337)
!5340 = !DILocation(line: 1632, column: 23, scope: !5337)
!5341 = !DILocation(line: 1632, column: 9, scope: !5337)
!5342 = !DILocation(line: 1632, column: 14, scope: !5337)
!5343 = !DILocation(line: 1632, column: 26, scope: !5337)
!5344 = !DILocation(line: 1634, column: 54, scope: !5337)
!5345 = !DILocation(line: 1634, column: 42, scope: !5337)
!5346 = !DILocation(line: 1634, column: 48, scope: !5337)
!5347 = !DILocation(line: 1634, column: 23, scope: !5337)
!5348 = !DILocation(line: 1634, column: 18, scope: !5337)
!5349 = !DILocation(line: 1634, column: 9, scope: !5337)
!5350 = !DILocation(line: 1634, column: 14, scope: !5337)
!5351 = !DILocation(line: 1634, column: 21, scope: !5337)
!5352 = !DILocation(line: 1635, column: 23, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5337, file: !1210, line: 1635, column: 13)
!5354 = !DILocation(line: 1635, column: 14, scope: !5353)
!5355 = !DILocation(line: 1635, column: 19, scope: !5353)
!5356 = !DILocation(line: 1635, column: 13, scope: !5337)
!5357 = !DILocation(line: 1636, column: 13, scope: !5353)
!5358 = !DILocation(line: 1638, column: 33, scope: !5337)
!5359 = !DILocation(line: 1638, column: 24, scope: !5337)
!5360 = !DILocation(line: 1638, column: 29, scope: !5337)
!5361 = !DILocation(line: 1638, column: 37, scope: !5337)
!5362 = !DILocation(line: 1638, column: 19, scope: !5337)
!5363 = !DILocation(line: 1638, column: 9, scope: !5337)
!5364 = !DILocation(line: 1638, column: 14, scope: !5337)
!5365 = !DILocation(line: 1638, column: 22, scope: !5337)
!5366 = !DILocation(line: 1639, column: 5, scope: !5337)
!5367 = !DILocation(line: 1631, column: 43, scope: !5368)
!5368 = !DILexicalBlockFile(scope: !5326, file: !1210, discriminator: 4)
!5369 = !DILocation(line: 1631, column: 5, scope: !5368)
!5370 = distinct !{!5370, !5371}
!5371 = !DILocation(line: 1631, column: 5, scope: !5266)
!5372 = !DILocation(line: 1640, column: 5, scope: !5266)
!5373 = !DILocation(line: 1640, column: 12, scope: !5374)
!5374 = !DILexicalBlockFile(scope: !5375, file: !1210, discriminator: 1)
!5375 = distinct !DILexicalBlock(scope: !5376, file: !1210, line: 1640, column: 5)
!5376 = distinct !DILexicalBlock(scope: !5266, file: !1210, line: 1640, column: 5)
!5377 = !DILocation(line: 1640, column: 14, scope: !5374)
!5378 = !DILocation(line: 1640, column: 5, scope: !5374)
!5379 = !DILocation(line: 1641, column: 19, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5375, file: !1210, line: 1640, column: 24)
!5381 = !DILocation(line: 1641, column: 9, scope: !5380)
!5382 = !DILocation(line: 1641, column: 14, scope: !5380)
!5383 = !DILocation(line: 1641, column: 22, scope: !5380)
!5384 = !DILocation(line: 1642, column: 23, scope: !5380)
!5385 = !DILocation(line: 1642, column: 9, scope: !5380)
!5386 = !DILocation(line: 1642, column: 14, scope: !5380)
!5387 = !DILocation(line: 1642, column: 26, scope: !5380)
!5388 = !DILocation(line: 1643, column: 5, scope: !5380)
!5389 = !DILocation(line: 1640, column: 20, scope: !5390)
!5390 = !DILexicalBlockFile(scope: !5375, file: !1210, discriminator: 2)
!5391 = !DILocation(line: 1640, column: 5, scope: !5390)
!5392 = distinct !{!5392, !5372}
!5393 = !DILocation(line: 1644, column: 9, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5266, file: !1210, line: 1644, column: 9)
!5395 = !DILocation(line: 1644, column: 15, scope: !5394)
!5396 = !DILocation(line: 1644, column: 21, scope: !5394)
!5397 = !DILocation(line: 1644, column: 32, scope: !5394)
!5398 = !DILocation(line: 1645, column: 11, scope: !5394)
!5399 = !DILocation(line: 1645, column: 17, scope: !5394)
!5400 = !DILocation(line: 1645, column: 23, scope: !5394)
!5401 = !DILocation(line: 1645, column: 35, scope: !5394)
!5402 = !DILocation(line: 1645, column: 38, scope: !5403)
!5403 = !DILexicalBlockFile(scope: !5394, file: !1210, discriminator: 1)
!5404 = !DILocation(line: 1645, column: 43, scope: !5403)
!5405 = !DILocation(line: 1644, column: 9, scope: !5406)
!5406 = !DILexicalBlockFile(scope: !5266, file: !1210, discriminator: 1)
!5407 = !DILocation(line: 1646, column: 48, scope: !5394)
!5408 = !DILocation(line: 1646, column: 53, scope: !5394)
!5409 = !DILocation(line: 1646, column: 36, scope: !5394)
!5410 = !DILocation(line: 1646, column: 62, scope: !5394)
!5411 = !DILocation(line: 1646, column: 67, scope: !5394)
!5412 = !DILocation(line: 1646, column: 9, scope: !5394)
!5413 = !DILocation(line: 1648, column: 9, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !5266, file: !1210, line: 1648, column: 9)
!5415 = !DILocation(line: 1648, column: 12, scope: !5414)
!5416 = !DILocation(line: 1648, column: 18, scope: !5414)
!5417 = !DILocation(line: 1648, column: 9, scope: !5266)
!5418 = !DILocation(line: 1649, column: 16, scope: !5414)
!5419 = !DILocation(line: 1649, column: 64, scope: !5414)
!5420 = !DILocation(line: 1649, column: 9, scope: !5414)
!5421 = !DILocation(line: 1651, column: 5, scope: !5266)
!5422 = !DILocation(line: 1653, column: 20, scope: !5266)
!5423 = !DILocation(line: 1653, column: 5, scope: !5266)
!5424 = !DILocation(line: 1654, column: 5, scope: !5266)
!5425 = !DILocation(line: 1655, column: 1, scope: !5266)
!5426 = distinct !DISubprogram(name: "audio_get_buffer", scope: !1210, file: !1210, line: 1565, type: !1211, isLocal: true, isDefinition: true, scopeLine: 1566, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!5427 = !DILocalVariable(name: "avctx", arg: 1, scope: !5426, file: !1210, line: 1565, type: !1213)
!5428 = !DILocation(line: 1565, column: 45, scope: !5426)
!5429 = !DILocalVariable(name: "frame", arg: 2, scope: !5426, file: !1210, line: 1565, type: !1107)
!5430 = !DILocation(line: 1565, column: 61, scope: !5426)
!5431 = !DILocalVariable(name: "pool", scope: !5426, file: !1210, line: 1567, type: !1439)
!5432 = !DILocation(line: 1567, column: 16, scope: !5426)
!5433 = !DILocation(line: 1567, column: 23, scope: !5426)
!5434 = !DILocation(line: 1567, column: 30, scope: !5426)
!5435 = !DILocation(line: 1567, column: 40, scope: !5426)
!5436 = !DILocalVariable(name: "planes", scope: !5426, file: !1210, line: 1568, type: !939)
!5437 = !DILocation(line: 1568, column: 9, scope: !5426)
!5438 = !DILocation(line: 1568, column: 18, scope: !5426)
!5439 = !DILocation(line: 1568, column: 24, scope: !5426)
!5440 = !DILocalVariable(name: "i", scope: !5426, file: !1210, line: 1569, type: !939)
!5441 = !DILocation(line: 1569, column: 9, scope: !5426)
!5442 = !DILocation(line: 1571, column: 26, scope: !5426)
!5443 = !DILocation(line: 1571, column: 32, scope: !5426)
!5444 = !DILocation(line: 1571, column: 5, scope: !5426)
!5445 = !DILocation(line: 1571, column: 12, scope: !5426)
!5446 = !DILocation(line: 1571, column: 24, scope: !5426)
!5447 = !DILocation(line: 1573, column: 9, scope: !5448)
!5448 = distinct !DILexicalBlock(scope: !5426, file: !1210, line: 1573, column: 9)
!5449 = !DILocation(line: 1573, column: 16, scope: !5448)
!5450 = !DILocation(line: 1573, column: 9, scope: !5426)
!5451 = !DILocation(line: 1574, column: 49, scope: !5452)
!5452 = distinct !DILexicalBlock(scope: !5448, file: !1210, line: 1573, column: 21)
!5453 = !DILocation(line: 1574, column: 32, scope: !5452)
!5454 = !DILocation(line: 1574, column: 9, scope: !5452)
!5455 = !DILocation(line: 1574, column: 16, scope: !5452)
!5456 = !DILocation(line: 1574, column: 30, scope: !5452)
!5457 = !DILocation(line: 1575, column: 34, scope: !5452)
!5458 = !DILocation(line: 1575, column: 41, scope: !5452)
!5459 = !DILocation(line: 1575, column: 9, scope: !5452)
!5460 = !DILocation(line: 1575, column: 16, scope: !5452)
!5461 = !DILocation(line: 1575, column: 32, scope: !5452)
!5462 = !DILocation(line: 1576, column: 48, scope: !5452)
!5463 = !DILocation(line: 1576, column: 55, scope: !5452)
!5464 = !DILocation(line: 1576, column: 31, scope: !5452)
!5465 = !DILocation(line: 1576, column: 9, scope: !5452)
!5466 = !DILocation(line: 1576, column: 16, scope: !5452)
!5467 = !DILocation(line: 1576, column: 29, scope: !5452)
!5468 = !DILocation(line: 1578, column: 14, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !5452, file: !1210, line: 1578, column: 13)
!5470 = !DILocation(line: 1578, column: 21, scope: !5469)
!5471 = !DILocation(line: 1578, column: 35, scope: !5469)
!5472 = !DILocation(line: 1578, column: 39, scope: !5473)
!5473 = !DILexicalBlockFile(scope: !5469, file: !1210, discriminator: 1)
!5474 = !DILocation(line: 1578, column: 46, scope: !5473)
!5475 = !DILocation(line: 1578, column: 13, scope: !5473)
!5476 = !DILocation(line: 1579, column: 23, scope: !5477)
!5477 = distinct !DILexicalBlock(scope: !5469, file: !1210, line: 1578, column: 60)
!5478 = !DILocation(line: 1579, column: 30, scope: !5477)
!5479 = !DILocation(line: 1579, column: 22, scope: !5477)
!5480 = !DILocation(line: 1579, column: 13, scope: !5477)
!5481 = !DILocation(line: 1580, column: 23, scope: !5477)
!5482 = !DILocation(line: 1580, column: 30, scope: !5477)
!5483 = !DILocation(line: 1580, column: 22, scope: !5477)
!5484 = !DILocation(line: 1580, column: 13, scope: !5477)
!5485 = !DILocation(line: 1581, column: 13, scope: !5477)
!5486 = !DILocation(line: 1583, column: 5, scope: !5452)
!5487 = !DILocation(line: 1584, column: 32, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5448, file: !1210, line: 1583, column: 12)
!5489 = !DILocation(line: 1584, column: 39, scope: !5488)
!5490 = !DILocation(line: 1584, column: 9, scope: !5488)
!5491 = !DILocation(line: 1584, column: 16, scope: !5488)
!5492 = !DILocation(line: 1584, column: 30, scope: !5488)
!5493 = !DILocation(line: 1585, column: 9, scope: !5488)
!5494 = distinct !{!5494, !5493}
!5495 = !DILocation(line: 1585, column: 20, scope: !5496)
!5496 = !DILexicalBlockFile(scope: !5497, file: !1210, discriminator: 1)
!5497 = distinct !DILexicalBlock(scope: !5498, file: !1210, line: 1585, column: 18)
!5498 = distinct !DILexicalBlock(scope: !5488, file: !1210, line: 1585, column: 12)
!5499 = !DILocation(line: 1585, column: 27, scope: !5496)
!5500 = !DILocation(line: 1585, column: 43, scope: !5496)
!5501 = !DILocation(line: 1585, column: 18, scope: !5496)
!5502 = !DILocation(line: 1585, column: 52, scope: !5503)
!5503 = !DILexicalBlockFile(scope: !5504, file: !1210, discriminator: 2)
!5504 = distinct !DILexicalBlock(scope: !5497, file: !1210, line: 1585, column: 50)
!5505 = !DILocation(line: 1585, column: 108, scope: !5506)
!5506 = !DILexicalBlockFile(scope: !5503, file: !1210, discriminator: 4)
!5507 = !DILocation(line: 1585, column: 108, scope: !5503)
!5508 = !DILocation(line: 1585, column: 119, scope: !5509)
!5509 = !DILexicalBlockFile(scope: !5498, file: !1210, discriminator: 3)
!5510 = !DILocation(line: 1588, column: 12, scope: !5511)
!5511 = distinct !DILexicalBlock(scope: !5426, file: !1210, line: 1588, column: 5)
!5512 = !DILocation(line: 1588, column: 10, scope: !5511)
!5513 = !DILocation(line: 1588, column: 17, scope: !5514)
!5514 = !DILexicalBlockFile(scope: !5515, file: !1210, discriminator: 1)
!5515 = distinct !DILexicalBlock(scope: !5511, file: !1210, line: 1588, column: 5)
!5516 = !DILocation(line: 1588, column: 23, scope: !5514)
!5517 = !DILocation(line: 1588, column: 31, scope: !5514)
!5518 = !DILocation(line: 1588, column: 22, scope: !5514)
!5519 = !DILocation(line: 1588, column: 22, scope: !5520)
!5520 = !DILexicalBlockFile(scope: !5515, file: !1210, discriminator: 2)
!5521 = !DILocation(line: 1588, column: 46, scope: !5522)
!5522 = !DILexicalBlockFile(scope: !5515, file: !1210, discriminator: 3)
!5523 = !DILocation(line: 1588, column: 22, scope: !5522)
!5524 = !DILocation(line: 1588, column: 22, scope: !5525)
!5525 = !DILexicalBlockFile(scope: !5515, file: !1210, discriminator: 4)
!5526 = !DILocation(line: 1588, column: 19, scope: !5525)
!5527 = !DILocation(line: 1588, column: 5, scope: !5525)
!5528 = !DILocation(line: 1589, column: 44, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5515, file: !1210, line: 1588, column: 61)
!5530 = !DILocation(line: 1589, column: 50, scope: !5529)
!5531 = !DILocation(line: 1589, column: 25, scope: !5529)
!5532 = !DILocation(line: 1589, column: 20, scope: !5529)
!5533 = !DILocation(line: 1589, column: 9, scope: !5529)
!5534 = !DILocation(line: 1589, column: 16, scope: !5529)
!5535 = !DILocation(line: 1589, column: 23, scope: !5529)
!5536 = !DILocation(line: 1590, column: 25, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !5529, file: !1210, line: 1590, column: 13)
!5538 = !DILocation(line: 1590, column: 14, scope: !5537)
!5539 = !DILocation(line: 1590, column: 21, scope: !5537)
!5540 = !DILocation(line: 1590, column: 13, scope: !5529)
!5541 = !DILocation(line: 1591, column: 13, scope: !5537)
!5542 = !DILocation(line: 1592, column: 63, scope: !5529)
!5543 = !DILocation(line: 1592, column: 52, scope: !5529)
!5544 = !DILocation(line: 1592, column: 59, scope: !5529)
!5545 = !DILocation(line: 1592, column: 67, scope: !5529)
!5546 = !DILocation(line: 1592, column: 47, scope: !5529)
!5547 = !DILocation(line: 1592, column: 35, scope: !5529)
!5548 = !DILocation(line: 1592, column: 42, scope: !5529)
!5549 = !DILocation(line: 1592, column: 50, scope: !5529)
!5550 = !DILocation(line: 1592, column: 30, scope: !5529)
!5551 = !DILocation(line: 1592, column: 9, scope: !5529)
!5552 = !DILocation(line: 1592, column: 16, scope: !5529)
!5553 = !DILocation(line: 1592, column: 33, scope: !5529)
!5554 = !DILocation(line: 1593, column: 5, scope: !5529)
!5555 = !DILocation(line: 1588, column: 57, scope: !5556)
!5556 = !DILexicalBlockFile(scope: !5515, file: !1210, discriminator: 5)
!5557 = !DILocation(line: 1588, column: 5, scope: !5556)
!5558 = distinct !{!5558, !5559}
!5559 = !DILocation(line: 1588, column: 5, scope: !5426)
!5560 = !DILocation(line: 1594, column: 12, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5426, file: !1210, line: 1594, column: 5)
!5562 = !DILocation(line: 1594, column: 10, scope: !5561)
!5563 = !DILocation(line: 1594, column: 17, scope: !5564)
!5564 = !DILexicalBlockFile(scope: !5565, file: !1210, discriminator: 1)
!5565 = distinct !DILexicalBlock(scope: !5561, file: !1210, line: 1594, column: 5)
!5566 = !DILocation(line: 1594, column: 21, scope: !5564)
!5567 = !DILocation(line: 1594, column: 28, scope: !5564)
!5568 = !DILocation(line: 1594, column: 19, scope: !5564)
!5569 = !DILocation(line: 1594, column: 5, scope: !5564)
!5570 = !DILocation(line: 1595, column: 53, scope: !5571)
!5571 = distinct !DILexicalBlock(scope: !5565, file: !1210, line: 1594, column: 50)
!5572 = !DILocation(line: 1595, column: 59, scope: !5571)
!5573 = !DILocation(line: 1595, column: 34, scope: !5571)
!5574 = !DILocation(line: 1595, column: 29, scope: !5571)
!5575 = !DILocation(line: 1595, column: 9, scope: !5571)
!5576 = !DILocation(line: 1595, column: 16, scope: !5571)
!5577 = !DILocation(line: 1595, column: 32, scope: !5571)
!5578 = !DILocation(line: 1596, column: 34, scope: !5579)
!5579 = distinct !DILexicalBlock(scope: !5571, file: !1210, line: 1596, column: 13)
!5580 = !DILocation(line: 1596, column: 14, scope: !5579)
!5581 = !DILocation(line: 1596, column: 21, scope: !5579)
!5582 = !DILocation(line: 1596, column: 13, scope: !5571)
!5583 = !DILocation(line: 1597, column: 13, scope: !5579)
!5584 = !DILocation(line: 1598, column: 59, scope: !5571)
!5585 = !DILocation(line: 1598, column: 39, scope: !5571)
!5586 = !DILocation(line: 1598, column: 46, scope: !5571)
!5587 = !DILocation(line: 1598, column: 63, scope: !5571)
!5588 = !DILocation(line: 1598, column: 30, scope: !5571)
!5589 = !DILocation(line: 1598, column: 32, scope: !5571)
!5590 = !DILocation(line: 1598, column: 9, scope: !5571)
!5591 = !DILocation(line: 1598, column: 16, scope: !5571)
!5592 = !DILocation(line: 1598, column: 37, scope: !5571)
!5593 = !DILocation(line: 1599, column: 5, scope: !5571)
!5594 = !DILocation(line: 1594, column: 46, scope: !5595)
!5595 = !DILexicalBlockFile(scope: !5565, file: !1210, discriminator: 2)
!5596 = !DILocation(line: 1594, column: 5, scope: !5595)
!5597 = distinct !{!5597, !5598}
!5598 = !DILocation(line: 1594, column: 5, scope: !5426)
!5599 = !DILocation(line: 1601, column: 9, scope: !5600)
!5600 = distinct !DILexicalBlock(scope: !5426, file: !1210, line: 1601, column: 9)
!5601 = !DILocation(line: 1601, column: 16, scope: !5600)
!5602 = !DILocation(line: 1601, column: 22, scope: !5600)
!5603 = !DILocation(line: 1601, column: 9, scope: !5426)
!5604 = !DILocation(line: 1602, column: 16, scope: !5600)
!5605 = !DILocation(line: 1602, column: 68, scope: !5600)
!5606 = !DILocation(line: 1602, column: 9, scope: !5600)
!5607 = !DILocation(line: 1604, column: 5, scope: !5426)
!5608 = !DILocation(line: 1606, column: 20, scope: !5426)
!5609 = !DILocation(line: 1606, column: 5, scope: !5426)
!5610 = !DILocation(line: 1607, column: 5, scope: !5426)
!5611 = !DILocation(line: 1608, column: 1, scope: !5426)
!5612 = !DILocalVariable(name: "avctx", arg: 1, scope: !1209, file: !1210, line: 1693, type: !1213)
!5613 = !DILocation(line: 1693, column: 43, scope: !1209)
!5614 = !DILocalVariable(name: "frame", arg: 2, scope: !1209, file: !1210, line: 1693, type: !1107)
!5615 = !DILocation(line: 1693, column: 59, scope: !1209)
!5616 = !DILocalVariable(name: "pkt", scope: !1209, file: !1210, line: 1695, type: !2280)
!5617 = !DILocation(line: 1695, column: 21, scope: !1209)
!5618 = !DILocation(line: 1695, column: 27, scope: !1209)
!5619 = !DILocation(line: 1695, column: 34, scope: !1209)
!5620 = !DILocation(line: 1695, column: 44, scope: !1209)
!5621 = !DILocalVariable(name: "i", scope: !1209, file: !1210, line: 1696, type: !939)
!5622 = !DILocation(line: 1696, column: 9, scope: !1209)
!5623 = !DILocation(line: 1711, column: 9, scope: !5624)
!5624 = distinct !DILexicalBlock(scope: !1209, file: !1210, line: 1711, column: 9)
!5625 = !DILocation(line: 1711, column: 9, scope: !1209)
!5626 = !DILocation(line: 1712, column: 22, scope: !5627)
!5627 = distinct !DILexicalBlock(scope: !5624, file: !1210, line: 1711, column: 14)
!5628 = !DILocation(line: 1712, column: 27, scope: !5627)
!5629 = !DILocation(line: 1712, column: 9, scope: !5627)
!5630 = !DILocation(line: 1712, column: 16, scope: !5627)
!5631 = !DILocation(line: 1712, column: 20, scope: !5627)
!5632 = !DILocation(line: 1715, column: 26, scope: !5627)
!5633 = !DILocation(line: 1715, column: 31, scope: !5627)
!5634 = !DILocation(line: 1715, column: 9, scope: !5627)
!5635 = !DILocation(line: 1715, column: 16, scope: !5627)
!5636 = !DILocation(line: 1715, column: 24, scope: !5627)
!5637 = !DILocation(line: 1718, column: 26, scope: !5627)
!5638 = !DILocation(line: 1718, column: 31, scope: !5627)
!5639 = !DILocation(line: 1718, column: 9, scope: !5627)
!5640 = !DILocation(line: 1718, column: 16, scope: !5627)
!5641 = !DILocation(line: 1718, column: 24, scope: !5627)
!5642 = !DILocation(line: 1719, column: 31, scope: !5627)
!5643 = !DILocation(line: 1719, column: 36, scope: !5627)
!5644 = !DILocation(line: 1719, column: 9, scope: !5627)
!5645 = !DILocation(line: 1719, column: 16, scope: !5627)
!5646 = !DILocation(line: 1719, column: 29, scope: !5627)
!5647 = !DILocation(line: 1720, column: 27, scope: !5627)
!5648 = !DILocation(line: 1720, column: 32, scope: !5627)
!5649 = !DILocation(line: 1720, column: 9, scope: !5627)
!5650 = !DILocation(line: 1720, column: 16, scope: !5627)
!5651 = !DILocation(line: 1720, column: 25, scope: !5627)
!5652 = !DILocation(line: 1722, column: 16, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !5627, file: !1210, line: 1722, column: 9)
!5654 = !DILocation(line: 1722, column: 14, scope: !5653)
!5655 = !DILocation(line: 1722, column: 21, scope: !5656)
!5656 = !DILexicalBlockFile(scope: !5657, file: !1210, discriminator: 1)
!5657 = distinct !DILexicalBlock(scope: !5653, file: !1210, line: 1722, column: 9)
!5658 = !DILocation(line: 1722, column: 23, scope: !5656)
!5659 = !DILocation(line: 1722, column: 9, scope: !5656)
!5660 = !DILocalVariable(name: "size", scope: !5661, file: !1210, line: 1723, type: !939)
!5661 = distinct !DILexicalBlock(scope: !5657, file: !1210, line: 1722, column: 62)
!5662 = !DILocation(line: 1723, column: 17, scope: !5661)
!5663 = !DILocalVariable(name: "packet_sd", scope: !5661, file: !1210, line: 1724, type: !1063)
!5664 = !DILocation(line: 1724, column: 22, scope: !5661)
!5665 = !DILocation(line: 1724, column: 58, scope: !5661)
!5666 = !DILocation(line: 1724, column: 66, scope: !5661)
!5667 = !DILocation(line: 1724, column: 63, scope: !5661)
!5668 = !DILocation(line: 1724, column: 69, scope: !5661)
!5669 = !DILocation(line: 1724, column: 34, scope: !5661)
!5670 = !DILocation(line: 1725, column: 17, scope: !5671)
!5671 = distinct !DILexicalBlock(scope: !5661, file: !1210, line: 1725, column: 17)
!5672 = !DILocation(line: 1725, column: 17, scope: !5661)
!5673 = !DILocalVariable(name: "frame_sd", scope: !5674, file: !1210, line: 1726, type: !1149)
!5674 = distinct !DILexicalBlock(scope: !5671, file: !1210, line: 1725, column: 28)
!5675 = !DILocation(line: 1726, column: 34, scope: !5674)
!5676 = !DILocation(line: 1726, column: 68, scope: !5674)
!5677 = !DILocation(line: 1727, column: 71, scope: !5674)
!5678 = !DILocation(line: 1727, column: 68, scope: !5674)
!5679 = !DILocation(line: 1727, column: 74, scope: !5674)
!5680 = !DILocation(line: 1728, column: 68, scope: !5674)
!5681 = !DILocation(line: 1726, column: 45, scope: !5674)
!5682 = !DILocation(line: 1729, column: 22, scope: !5683)
!5683 = distinct !DILexicalBlock(scope: !5674, file: !1210, line: 1729, column: 21)
!5684 = !DILocation(line: 1729, column: 21, scope: !5674)
!5685 = !DILocation(line: 1730, column: 21, scope: !5683)
!5686 = !DILocation(line: 1732, column: 24, scope: !5674)
!5687 = !DILocation(line: 1732, column: 34, scope: !5674)
!5688 = !DILocation(line: 1732, column: 40, scope: !5674)
!5689 = !DILocation(line: 1732, column: 51, scope: !5674)
!5690 = !DILocation(line: 1732, column: 17, scope: !5674)
!5691 = !DILocation(line: 1733, column: 13, scope: !5674)
!5692 = !DILocation(line: 1734, column: 9, scope: !5661)
!5693 = !DILocation(line: 1722, column: 58, scope: !5694)
!5694 = !DILexicalBlockFile(scope: !5657, file: !1210, discriminator: 2)
!5695 = !DILocation(line: 1722, column: 9, scope: !5694)
!5696 = distinct !{!5696, !5697}
!5697 = !DILocation(line: 1722, column: 9, scope: !5627)
!5698 = !DILocation(line: 1735, column: 37, scope: !5627)
!5699 = !DILocation(line: 1735, column: 42, scope: !5627)
!5700 = !DILocation(line: 1735, column: 9, scope: !5627)
!5701 = !DILocation(line: 1737, column: 13, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5627, file: !1210, line: 1737, column: 13)
!5703 = !DILocation(line: 1737, column: 18, scope: !5702)
!5704 = !DILocation(line: 1737, column: 24, scope: !5702)
!5705 = !DILocation(line: 1737, column: 13, scope: !5627)
!5706 = !DILocation(line: 1738, column: 13, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5702, file: !1210, line: 1737, column: 34)
!5708 = !DILocation(line: 1738, column: 20, scope: !5707)
!5709 = !DILocation(line: 1738, column: 26, scope: !5707)
!5710 = !DILocation(line: 1739, column: 9, scope: !5707)
!5711 = !DILocation(line: 1740, column: 29, scope: !5712)
!5712 = distinct !DILexicalBlock(scope: !5702, file: !1210, line: 1739, column: 16)
!5713 = !DILocation(line: 1740, column: 36, scope: !5712)
!5714 = !DILocation(line: 1740, column: 42, scope: !5712)
!5715 = !DILocation(line: 1740, column: 13, scope: !5712)
!5716 = !DILocation(line: 1740, column: 20, scope: !5712)
!5717 = !DILocation(line: 1740, column: 26, scope: !5712)
!5718 = !DILocation(line: 1742, column: 5, scope: !5627)
!5719 = !DILocation(line: 1743, column: 31, scope: !1209)
!5720 = !DILocation(line: 1743, column: 38, scope: !1209)
!5721 = !DILocation(line: 1743, column: 5, scope: !1209)
!5722 = !DILocation(line: 1743, column: 12, scope: !1209)
!5723 = !DILocation(line: 1743, column: 29, scope: !1209)
!5724 = !DILocation(line: 1745, column: 9, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !1209, file: !1210, line: 1745, column: 9)
!5726 = !DILocation(line: 1745, column: 16, scope: !5725)
!5727 = !DILocation(line: 1745, column: 32, scope: !5725)
!5728 = !DILocation(line: 1745, column: 9, scope: !1209)
!5729 = !DILocation(line: 1746, column: 34, scope: !5725)
!5730 = !DILocation(line: 1746, column: 41, scope: !5725)
!5731 = !DILocation(line: 1746, column: 9, scope: !5725)
!5732 = !DILocation(line: 1746, column: 16, scope: !5725)
!5733 = !DILocation(line: 1746, column: 32, scope: !5725)
!5734 = !DILocation(line: 1747, column: 9, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !1209, file: !1210, line: 1747, column: 9)
!5736 = !DILocation(line: 1747, column: 16, scope: !5735)
!5737 = !DILocation(line: 1747, column: 26, scope: !5735)
!5738 = !DILocation(line: 1747, column: 9, scope: !1209)
!5739 = !DILocation(line: 1748, column: 28, scope: !5735)
!5740 = !DILocation(line: 1748, column: 35, scope: !5735)
!5741 = !DILocation(line: 1748, column: 9, scope: !5735)
!5742 = !DILocation(line: 1748, column: 16, scope: !5735)
!5743 = !DILocation(line: 1748, column: 26, scope: !5735)
!5744 = !DILocation(line: 1749, column: 9, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !1209, file: !1210, line: 1749, column: 9)
!5746 = !DILocation(line: 1749, column: 16, scope: !5745)
!5747 = !DILocation(line: 1749, column: 27, scope: !5745)
!5748 = !DILocation(line: 1749, column: 9, scope: !1209)
!5749 = !DILocation(line: 1750, column: 29, scope: !5745)
!5750 = !DILocation(line: 1750, column: 36, scope: !5745)
!5751 = !DILocation(line: 1750, column: 9, scope: !5745)
!5752 = !DILocation(line: 1750, column: 16, scope: !5745)
!5753 = !DILocation(line: 1750, column: 27, scope: !5745)
!5754 = !DILocation(line: 1751, column: 9, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !1209, file: !1210, line: 1751, column: 9)
!5756 = !DILocation(line: 1751, column: 16, scope: !5755)
!5757 = !DILocation(line: 1751, column: 28, scope: !5755)
!5758 = !DILocation(line: 1751, column: 9, scope: !1209)
!5759 = !DILocation(line: 1752, column: 30, scope: !5755)
!5760 = !DILocation(line: 1752, column: 37, scope: !5755)
!5761 = !DILocation(line: 1752, column: 9, scope: !5755)
!5762 = !DILocation(line: 1752, column: 16, scope: !5755)
!5763 = !DILocation(line: 1752, column: 28, scope: !5755)
!5764 = !DILocation(line: 1753, column: 9, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !1209, file: !1210, line: 1753, column: 9)
!5766 = !DILocation(line: 1753, column: 16, scope: !5765)
!5767 = !DILocation(line: 1753, column: 32, scope: !5765)
!5768 = !DILocation(line: 1753, column: 9, scope: !1209)
!5769 = !DILocation(line: 1754, column: 34, scope: !5765)
!5770 = !DILocation(line: 1754, column: 41, scope: !5765)
!5771 = !DILocation(line: 1754, column: 9, scope: !5765)
!5772 = !DILocation(line: 1754, column: 16, scope: !5765)
!5773 = !DILocation(line: 1754, column: 32, scope: !5765)
!5774 = !DILocation(line: 1756, column: 13, scope: !1209)
!5775 = !DILocation(line: 1756, column: 20, scope: !1209)
!5776 = !DILocation(line: 1756, column: 27, scope: !1209)
!5777 = !DILocation(line: 1756, column: 5, scope: !1209)
!5778 = !DILocation(line: 1758, column: 25, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !1209, file: !1210, line: 1756, column: 33)
!5780 = !DILocation(line: 1758, column: 32, scope: !5779)
!5781 = !DILocation(line: 1758, column: 9, scope: !5779)
!5782 = !DILocation(line: 1758, column: 16, scope: !5779)
!5783 = !DILocation(line: 1758, column: 23, scope: !5779)
!5784 = !DILocation(line: 1759, column: 14, scope: !5785)
!5785 = distinct !DILexicalBlock(scope: !5779, file: !1210, line: 1759, column: 13)
!5786 = !DILocation(line: 1759, column: 21, scope: !5785)
!5787 = !DILocation(line: 1759, column: 41, scope: !5785)
!5788 = !DILocation(line: 1759, column: 13, scope: !5779)
!5789 = !DILocation(line: 1760, column: 13, scope: !5785)
!5790 = !DILocation(line: 1760, column: 20, scope: !5785)
!5791 = !DILocation(line: 1760, column: 42, scope: !5785)
!5792 = !DILocation(line: 1760, column: 49, scope: !5785)
!5793 = !DILocation(line: 1762, column: 13, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5779, file: !1210, line: 1762, column: 13)
!5795 = !DILocation(line: 1762, column: 20, scope: !5794)
!5796 = !DILocation(line: 1762, column: 26, scope: !5794)
!5797 = !DILocation(line: 1762, column: 29, scope: !5798)
!5798 = !DILexicalBlockFile(scope: !5794, file: !1210, discriminator: 1)
!5799 = !DILocation(line: 1762, column: 36, scope: !5798)
!5800 = !DILocation(line: 1762, column: 43, scope: !5798)
!5801 = !DILocation(line: 1763, column: 32, scope: !5794)
!5802 = !DILocation(line: 1763, column: 39, scope: !5794)
!5803 = !DILocation(line: 1763, column: 46, scope: !5794)
!5804 = !DILocation(line: 1763, column: 53, scope: !5794)
!5805 = !DILocation(line: 1764, column: 32, scope: !5794)
!5806 = !DILocation(line: 1764, column: 39, scope: !5794)
!5807 = !DILocation(line: 1763, column: 13, scope: !5794)
!5808 = !DILocation(line: 1764, column: 60, scope: !5794)
!5809 = !DILocation(line: 1762, column: 13, scope: !5810)
!5810 = !DILexicalBlockFile(scope: !5779, file: !1210, discriminator: 2)
!5811 = !DILocation(line: 1765, column: 20, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5794, file: !1210, line: 1764, column: 65)
!5813 = !DILocation(line: 1766, column: 20, scope: !5812)
!5814 = !DILocation(line: 1766, column: 27, scope: !5812)
!5815 = !DILocation(line: 1766, column: 47, scope: !5812)
!5816 = !DILocation(line: 1767, column: 20, scope: !5812)
!5817 = !DILocation(line: 1767, column: 27, scope: !5812)
!5818 = !DILocation(line: 1767, column: 47, scope: !5812)
!5819 = !DILocation(line: 1765, column: 13, scope: !5812)
!5820 = !DILocation(line: 1768, column: 13, scope: !5812)
!5821 = !DILocation(line: 1768, column: 20, scope: !5812)
!5822 = !DILocation(line: 1768, column: 54, scope: !5812)
!5823 = !DILocation(line: 1768, column: 42, scope: !5812)
!5824 = !DILocation(line: 1769, column: 9, scope: !5812)
!5825 = !DILocation(line: 1771, column: 9, scope: !5779)
!5826 = !DILocation(line: 1773, column: 14, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5779, file: !1210, line: 1773, column: 13)
!5828 = !DILocation(line: 1773, column: 21, scope: !5827)
!5829 = !DILocation(line: 1773, column: 13, scope: !5779)
!5830 = !DILocation(line: 1774, column: 34, scope: !5827)
!5831 = !DILocation(line: 1774, column: 41, scope: !5827)
!5832 = !DILocation(line: 1774, column: 13, scope: !5827)
!5833 = !DILocation(line: 1774, column: 20, scope: !5827)
!5834 = !DILocation(line: 1774, column: 32, scope: !5827)
!5835 = !DILocation(line: 1775, column: 13, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5779, file: !1210, line: 1775, column: 13)
!5837 = !DILocation(line: 1775, column: 20, scope: !5836)
!5838 = !DILocation(line: 1775, column: 27, scope: !5836)
!5839 = !DILocation(line: 1775, column: 13, scope: !5779)
!5840 = !DILocation(line: 1776, column: 29, scope: !5836)
!5841 = !DILocation(line: 1776, column: 36, scope: !5836)
!5842 = !DILocation(line: 1776, column: 13, scope: !5836)
!5843 = !DILocation(line: 1776, column: 20, scope: !5836)
!5844 = !DILocation(line: 1776, column: 27, scope: !5836)
!5845 = !DILocation(line: 1777, column: 14, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5779, file: !1210, line: 1777, column: 13)
!5847 = !DILocation(line: 1777, column: 21, scope: !5846)
!5848 = !DILocation(line: 1777, column: 13, scope: !5779)
!5849 = !DILocation(line: 1778, column: 17, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !5851, file: !1210, line: 1778, column: 17)
!5851 = distinct !DILexicalBlock(scope: !5846, file: !1210, line: 1777, column: 37)
!5852 = !DILocation(line: 1778, column: 24, scope: !5850)
!5853 = !DILocation(line: 1778, column: 17, scope: !5851)
!5854 = !DILocation(line: 1779, column: 56, scope: !5855)
!5855 = distinct !DILexicalBlock(scope: !5856, file: !1210, line: 1779, column: 22)
!5856 = distinct !DILexicalBlock(scope: !5850, file: !1210, line: 1778, column: 40)
!5857 = !DILocation(line: 1779, column: 63, scope: !5855)
!5858 = !DILocation(line: 1779, column: 22, scope: !5855)
!5859 = !DILocation(line: 1780, column: 22, scope: !5855)
!5860 = !DILocation(line: 1780, column: 29, scope: !5855)
!5861 = !DILocation(line: 1779, column: 79, scope: !5855)
!5862 = !DILocation(line: 1779, column: 22, scope: !5856)
!5863 = !DILocation(line: 1781, column: 29, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !5855, file: !1210, line: 1780, column: 39)
!5865 = !DILocation(line: 1781, column: 22, scope: !5864)
!5866 = !DILocation(line: 1783, column: 22, scope: !5864)
!5867 = !DILocation(line: 1786, column: 41, scope: !5856)
!5868 = !DILocation(line: 1786, column: 48, scope: !5856)
!5869 = !DILocation(line: 1786, column: 17, scope: !5856)
!5870 = !DILocation(line: 1786, column: 24, scope: !5856)
!5871 = !DILocation(line: 1786, column: 39, scope: !5856)
!5872 = !DILocation(line: 1787, column: 13, scope: !5856)
!5873 = !DILocation(line: 1788, column: 21, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5875, file: !1210, line: 1788, column: 21)
!5875 = distinct !DILexicalBlock(scope: !5850, file: !1210, line: 1787, column: 20)
!5876 = !DILocation(line: 1788, column: 28, scope: !5874)
!5877 = !DILocation(line: 1788, column: 37, scope: !5874)
!5878 = !DILocation(line: 1788, column: 21, scope: !5875)
!5879 = !DILocation(line: 1789, column: 28, scope: !5880)
!5880 = distinct !DILexicalBlock(scope: !5874, file: !1210, line: 1788, column: 45)
!5881 = !DILocation(line: 1790, column: 28, scope: !5880)
!5882 = !DILocation(line: 1790, column: 35, scope: !5880)
!5883 = !DILocation(line: 1789, column: 21, scope: !5880)
!5884 = !DILocation(line: 1791, column: 21, scope: !5880)
!5885 = !DILocation(line: 1794, column: 9, scope: !5851)
!5886 = !DILocation(line: 1795, column: 27, scope: !5779)
!5887 = !DILocation(line: 1795, column: 34, scope: !5779)
!5888 = !DILocation(line: 1795, column: 9, scope: !5779)
!5889 = !DILocation(line: 1795, column: 16, scope: !5779)
!5890 = !DILocation(line: 1795, column: 25, scope: !5779)
!5891 = !DILocation(line: 1796, column: 9, scope: !5779)
!5892 = !DILocation(line: 1798, column: 5, scope: !1209)
!5893 = !DILocation(line: 1799, column: 1, scope: !1209)
!5894 = distinct !DISubprogram(name: "add_metadata_from_side_data", scope: !1210, file: !1210, line: 1681, type: !5895, isLocal: true, isDefinition: true, scopeLine: 1682, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!5895 = !DISubroutineType(types: !5896)
!5896 = !{!939, !2280, !1107}
!5897 = !DILocalVariable(name: "avpkt", arg: 1, scope: !5894, file: !1210, line: 1681, type: !2280)
!5898 = !DILocation(line: 1681, column: 56, scope: !5894)
!5899 = !DILocalVariable(name: "frame", arg: 2, scope: !5894, file: !1210, line: 1681, type: !1107)
!5900 = !DILocation(line: 1681, column: 72, scope: !5894)
!5901 = !DILocalVariable(name: "size", scope: !5894, file: !1210, line: 1683, type: !939)
!5902 = !DILocation(line: 1683, column: 9, scope: !5894)
!5903 = !DILocalVariable(name: "side_metadata", scope: !5894, file: !1210, line: 1684, type: !1199)
!5904 = !DILocation(line: 1684, column: 20, scope: !5894)
!5905 = !DILocalVariable(name: "frame_md", scope: !5894, file: !1210, line: 1686, type: !5906)
!5906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64, align: 64)
!5907 = !DILocation(line: 1686, column: 20, scope: !5894)
!5908 = !DILocation(line: 1686, column: 32, scope: !5894)
!5909 = !DILocation(line: 1686, column: 39, scope: !5894)
!5910 = !DILocation(line: 1688, column: 45, scope: !5894)
!5911 = !DILocation(line: 1688, column: 21, scope: !5894)
!5912 = !DILocation(line: 1688, column: 19, scope: !5894)
!5913 = !DILocation(line: 1690, column: 40, scope: !5894)
!5914 = !DILocation(line: 1690, column: 55, scope: !5894)
!5915 = !DILocation(line: 1690, column: 61, scope: !5894)
!5916 = !DILocation(line: 1690, column: 12, scope: !5894)
!5917 = !DILocation(line: 1690, column: 5, scope: !5894)
!5918 = distinct !DISubprogram(name: "ff_attach_decode_data", scope: !1210, file: !1210, line: 1837, type: !5919, isLocal: false, isDefinition: true, scopeLine: 1838, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!5919 = !DISubroutineType(types: !5920)
!5920 = !{!939, !1107}
!5921 = !DILocalVariable(name: "frame", arg: 1, scope: !5918, file: !1210, line: 1837, type: !1107)
!5922 = !DILocation(line: 1837, column: 36, scope: !5918)
!5923 = !DILocalVariable(name: "fdd_buf", scope: !5918, file: !1210, line: 1839, type: !1053)
!5924 = !DILocation(line: 1839, column: 18, scope: !5918)
!5925 = !DILocalVariable(name: "fdd", scope: !5918, file: !1210, line: 1840, type: !1098)
!5926 = !DILocation(line: 1840, column: 22, scope: !5918)
!5927 = !DILocation(line: 1843, column: 22, scope: !5918)
!5928 = !DILocation(line: 1843, column: 29, scope: !5918)
!5929 = !DILocation(line: 1843, column: 5, scope: !5918)
!5930 = !DILocation(line: 1845, column: 11, scope: !5918)
!5931 = !DILocation(line: 1845, column: 9, scope: !5918)
!5932 = !DILocation(line: 1846, column: 10, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5918, file: !1210, line: 1846, column: 9)
!5934 = !DILocation(line: 1846, column: 9, scope: !5918)
!5935 = !DILocation(line: 1847, column: 9, scope: !5933)
!5936 = !DILocation(line: 1849, column: 42, scope: !5918)
!5937 = !DILocation(line: 1849, column: 32, scope: !5918)
!5938 = !DILocation(line: 1849, column: 15, scope: !5918)
!5939 = !DILocation(line: 1849, column: 13, scope: !5918)
!5940 = !DILocation(line: 1851, column: 10, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5918, file: !1210, line: 1851, column: 9)
!5942 = !DILocation(line: 1851, column: 9, scope: !5918)
!5943 = !DILocation(line: 1852, column: 18, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5941, file: !1210, line: 1851, column: 19)
!5945 = !DILocation(line: 1852, column: 9, scope: !5944)
!5946 = !DILocation(line: 1853, column: 9, scope: !5944)
!5947 = !DILocation(line: 1856, column: 26, scope: !5918)
!5948 = !DILocation(line: 1856, column: 5, scope: !5918)
!5949 = !DILocation(line: 1856, column: 12, scope: !5918)
!5950 = !DILocation(line: 1856, column: 24, scope: !5918)
!5951 = !DILocation(line: 1858, column: 5, scope: !5918)
!5952 = !DILocation(line: 1859, column: 1, scope: !5918)
!5953 = distinct !DISubprogram(name: "decode_data_free", scope: !1210, file: !1210, line: 1824, type: !5954, isLocal: true, isDefinition: true, scopeLine: 1825, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!5954 = !DISubroutineType(types: !5955)
!5955 = !{null, !962, !1063}
!5956 = !DILocalVariable(name: "opaque", arg: 1, scope: !5953, file: !1210, line: 1824, type: !962)
!5957 = !DILocation(line: 1824, column: 36, scope: !5953)
!5958 = !DILocalVariable(name: "data", arg: 2, scope: !5953, file: !1210, line: 1824, type: !1063)
!5959 = !DILocation(line: 1824, column: 53, scope: !5953)
!5960 = !DILocalVariable(name: "fdd", scope: !5953, file: !1210, line: 1826, type: !1098)
!5961 = !DILocation(line: 1826, column: 22, scope: !5953)
!5962 = !DILocation(line: 1826, column: 46, scope: !5953)
!5963 = !DILocation(line: 1826, column: 28, scope: !5953)
!5964 = !DILocation(line: 1828, column: 9, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5953, file: !1210, line: 1828, column: 9)
!5966 = !DILocation(line: 1828, column: 14, scope: !5965)
!5967 = !DILocation(line: 1828, column: 9, scope: !5953)
!5968 = !DILocation(line: 1829, column: 9, scope: !5965)
!5969 = !DILocation(line: 1829, column: 14, scope: !5965)
!5970 = !DILocation(line: 1829, column: 39, scope: !5965)
!5971 = !DILocation(line: 1829, column: 44, scope: !5965)
!5972 = !DILocation(line: 1831, column: 9, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5953, file: !1210, line: 1831, column: 9)
!5974 = !DILocation(line: 1831, column: 14, scope: !5973)
!5975 = !DILocation(line: 1831, column: 9, scope: !5953)
!5976 = !DILocation(line: 1832, column: 9, scope: !5973)
!5977 = !DILocation(line: 1832, column: 14, scope: !5973)
!5978 = !DILocation(line: 1832, column: 32, scope: !5973)
!5979 = !DILocation(line: 1832, column: 37, scope: !5973)
!5980 = !DILocation(line: 1834, column: 14, scope: !5953)
!5981 = !DILocation(line: 1834, column: 5, scope: !5953)
!5982 = !DILocation(line: 1835, column: 1, scope: !5953)
!5983 = distinct !DISubprogram(name: "ff_get_buffer", scope: !1210, file: !1210, line: 1919, type: !4841, isLocal: false, isDefinition: true, scopeLine: 1920, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!5984 = !DILocalVariable(name: "avctx", arg: 1, scope: !5983, file: !1210, line: 1919, type: !1213)
!5985 = !DILocation(line: 1919, column: 35, scope: !5983)
!5986 = !DILocalVariable(name: "frame", arg: 2, scope: !5983, file: !1210, line: 1919, type: !1107)
!5987 = !DILocation(line: 1919, column: 51, scope: !5983)
!5988 = !DILocalVariable(name: "flags", arg: 3, scope: !5983, file: !1210, line: 1919, type: !939)
!5989 = !DILocation(line: 1919, column: 62, scope: !5983)
!5990 = !DILocalVariable(name: "ret", scope: !5983, file: !1210, line: 1921, type: !939)
!5991 = !DILocation(line: 1921, column: 9, scope: !5983)
!5992 = !DILocation(line: 1921, column: 35, scope: !5983)
!5993 = !DILocation(line: 1921, column: 42, scope: !5983)
!5994 = !DILocation(line: 1921, column: 49, scope: !5983)
!5995 = !DILocation(line: 1921, column: 15, scope: !5983)
!5996 = !DILocation(line: 1922, column: 9, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5983, file: !1210, line: 1922, column: 9)
!5998 = !DILocation(line: 1922, column: 13, scope: !5997)
!5999 = !DILocation(line: 1922, column: 9, scope: !5983)
!6000 = !DILocation(line: 1923, column: 16, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5997, file: !1210, line: 1922, column: 18)
!6002 = !DILocation(line: 1923, column: 9, scope: !6001)
!6003 = !DILocation(line: 1924, column: 24, scope: !6001)
!6004 = !DILocation(line: 1924, column: 31, scope: !6001)
!6005 = !DILocation(line: 1924, column: 38, scope: !6001)
!6006 = !DILocation(line: 1924, column: 9, scope: !6001)
!6007 = !DILocation(line: 1924, column: 16, scope: !6001)
!6008 = !DILocation(line: 1924, column: 22, scope: !6001)
!6009 = !DILocation(line: 1925, column: 5, scope: !6001)
!6010 = !DILocation(line: 1926, column: 12, scope: !5983)
!6011 = !DILocation(line: 1926, column: 5, scope: !5983)
!6012 = distinct !DISubprogram(name: "get_buffer_internal", scope: !1210, file: !1210, line: 1861, type: !4841, isLocal: true, isDefinition: true, scopeLine: 1862, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!6013 = !DILocalVariable(name: "avctx", arg: 1, scope: !6012, file: !1210, line: 1861, type: !1213)
!6014 = !DILocation(line: 1861, column: 48, scope: !6012)
!6015 = !DILocalVariable(name: "frame", arg: 2, scope: !6012, file: !1210, line: 1861, type: !1107)
!6016 = !DILocation(line: 1861, column: 64, scope: !6012)
!6017 = !DILocalVariable(name: "flags", arg: 3, scope: !6012, file: !1210, line: 1861, type: !939)
!6018 = !DILocation(line: 1861, column: 75, scope: !6012)
!6019 = !DILocalVariable(name: "hwaccel", scope: !6012, file: !1210, line: 1863, type: !1391)
!6020 = !DILocation(line: 1863, column: 22, scope: !6012)
!6021 = !DILocation(line: 1863, column: 32, scope: !6012)
!6022 = !DILocation(line: 1863, column: 39, scope: !6012)
!6023 = !DILocalVariable(name: "override_dimensions", scope: !6012, file: !1210, line: 1864, type: !939)
!6024 = !DILocation(line: 1864, column: 9, scope: !6012)
!6025 = !DILocalVariable(name: "ret", scope: !6012, file: !1210, line: 1865, type: !939)
!6026 = !DILocation(line: 1865, column: 9, scope: !6012)
!6027 = !DILocation(line: 1867, column: 9, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !6012, file: !1210, line: 1867, column: 9)
!6029 = !DILocation(line: 1867, column: 16, scope: !6028)
!6030 = !DILocation(line: 1867, column: 27, scope: !6028)
!6031 = !DILocation(line: 1867, column: 9, scope: !6012)
!6032 = !DILocation(line: 1868, column: 44, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !6034, file: !1210, line: 1868, column: 13)
!6034 = distinct !DILexicalBlock(scope: !6028, file: !1210, line: 1867, column: 50)
!6035 = !DILocation(line: 1868, column: 51, scope: !6033)
!6036 = !DILocation(line: 1868, column: 57, scope: !6033)
!6037 = !DILocation(line: 1868, column: 62, scope: !6033)
!6038 = !DILocation(line: 1868, column: 65, scope: !6033)
!6039 = !DILocation(line: 1868, column: 78, scope: !6033)
!6040 = !DILocation(line: 1868, column: 85, scope: !6033)
!6041 = !DILocation(line: 1868, column: 93, scope: !6033)
!6042 = !DILocation(line: 1868, column: 100, scope: !6033)
!6043 = !DILocation(line: 1868, column: 132, scope: !6033)
!6044 = !DILocation(line: 1868, column: 20, scope: !6033)
!6045 = !DILocation(line: 1868, column: 18, scope: !6033)
!6046 = !DILocation(line: 1868, column: 140, scope: !6033)
!6047 = !DILocation(line: 1868, column: 144, scope: !6033)
!6048 = !DILocation(line: 1868, column: 147, scope: !6049)
!6049 = !DILexicalBlockFile(scope: !6033, file: !1210, discriminator: 1)
!6050 = !DILocation(line: 1868, column: 154, scope: !6049)
!6051 = !DILocation(line: 1868, column: 161, scope: !6049)
!6052 = !DILocation(line: 1868, column: 13, scope: !6049)
!6053 = !DILocation(line: 1869, column: 20, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6033, file: !1210, line: 1868, column: 165)
!6055 = !DILocation(line: 1869, column: 13, scope: !6054)
!6056 = !DILocation(line: 1870, column: 13, scope: !6054)
!6057 = !DILocation(line: 1873, column: 13, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6034, file: !1210, line: 1873, column: 13)
!6059 = !DILocation(line: 1873, column: 20, scope: !6058)
!6060 = !DILocation(line: 1873, column: 26, scope: !6058)
!6061 = !DILocation(line: 1873, column: 31, scope: !6058)
!6062 = !DILocation(line: 1873, column: 34, scope: !6063)
!6063 = !DILexicalBlockFile(scope: !6058, file: !1210, discriminator: 1)
!6064 = !DILocation(line: 1873, column: 41, scope: !6063)
!6065 = !DILocation(line: 1873, column: 48, scope: !6063)
!6066 = !DILocation(line: 1873, column: 13, scope: !6063)
!6067 = !DILocation(line: 1874, column: 30, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6058, file: !1210, line: 1873, column: 54)
!6069 = !DILocation(line: 1874, column: 37, scope: !6068)
!6070 = !DILocation(line: 1874, column: 92, scope: !6068)
!6071 = !DILocation(line: 1874, column: 99, scope: !6068)
!6072 = !DILocation(line: 1874, column: 90, scope: !6068)
!6073 = !DILocation(line: 1874, column: 117, scope: !6068)
!6074 = !DILocation(line: 1874, column: 124, scope: !6068)
!6075 = !DILocation(line: 1874, column: 113, scope: !6068)
!6076 = !DILocation(line: 1874, column: 87, scope: !6068)
!6077 = !DILocation(line: 1874, column: 44, scope: !6068)
!6078 = !DILocation(line: 1874, column: 29, scope: !6068)
!6079 = !DILocation(line: 1874, column: 209, scope: !6080)
!6080 = !DILexicalBlockFile(scope: !6068, file: !1210, discriminator: 1)
!6081 = !DILocation(line: 1874, column: 216, scope: !6080)
!6082 = !DILocation(line: 1874, column: 29, scope: !6080)
!6083 = !DILocation(line: 1874, column: 271, scope: !6084)
!6084 = !DILexicalBlockFile(scope: !6068, file: !1210, discriminator: 2)
!6085 = !DILocation(line: 1874, column: 278, scope: !6084)
!6086 = !DILocation(line: 1874, column: 269, scope: !6084)
!6087 = !DILocation(line: 1874, column: 296, scope: !6084)
!6088 = !DILocation(line: 1874, column: 303, scope: !6084)
!6089 = !DILocation(line: 1874, column: 292, scope: !6084)
!6090 = !DILocation(line: 1874, column: 266, scope: !6084)
!6091 = !DILocation(line: 1874, column: 29, scope: !6084)
!6092 = !DILocation(line: 1874, column: 29, scope: !6093)
!6093 = !DILexicalBlockFile(scope: !6068, file: !1210, discriminator: 3)
!6094 = !DILocation(line: 1874, column: 13, scope: !6093)
!6095 = !DILocation(line: 1874, column: 20, scope: !6093)
!6096 = !DILocation(line: 1874, column: 26, scope: !6093)
!6097 = !DILocation(line: 1875, column: 31, scope: !6068)
!6098 = !DILocation(line: 1875, column: 38, scope: !6068)
!6099 = !DILocation(line: 1875, column: 94, scope: !6068)
!6100 = !DILocation(line: 1875, column: 101, scope: !6068)
!6101 = !DILocation(line: 1875, column: 92, scope: !6068)
!6102 = !DILocation(line: 1875, column: 120, scope: !6068)
!6103 = !DILocation(line: 1875, column: 127, scope: !6068)
!6104 = !DILocation(line: 1875, column: 116, scope: !6068)
!6105 = !DILocation(line: 1875, column: 89, scope: !6068)
!6106 = !DILocation(line: 1875, column: 46, scope: !6068)
!6107 = !DILocation(line: 1875, column: 30, scope: !6068)
!6108 = !DILocation(line: 1875, column: 213, scope: !6080)
!6109 = !DILocation(line: 1875, column: 220, scope: !6080)
!6110 = !DILocation(line: 1875, column: 30, scope: !6080)
!6111 = !DILocation(line: 1875, column: 276, scope: !6084)
!6112 = !DILocation(line: 1875, column: 283, scope: !6084)
!6113 = !DILocation(line: 1875, column: 274, scope: !6084)
!6114 = !DILocation(line: 1875, column: 302, scope: !6084)
!6115 = !DILocation(line: 1875, column: 309, scope: !6084)
!6116 = !DILocation(line: 1875, column: 298, scope: !6084)
!6117 = !DILocation(line: 1875, column: 271, scope: !6084)
!6118 = !DILocation(line: 1875, column: 30, scope: !6084)
!6119 = !DILocation(line: 1875, column: 30, scope: !6093)
!6120 = !DILocation(line: 1875, column: 13, scope: !6093)
!6121 = !DILocation(line: 1875, column: 20, scope: !6093)
!6122 = !DILocation(line: 1875, column: 27, scope: !6093)
!6123 = !DILocation(line: 1876, column: 33, scope: !6068)
!6124 = !DILocation(line: 1877, column: 9, scope: !6068)
!6125 = !DILocation(line: 1879, column: 13, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !6034, file: !1210, line: 1879, column: 13)
!6127 = !DILocation(line: 1879, column: 20, scope: !6126)
!6128 = !DILocation(line: 1879, column: 28, scope: !6126)
!6129 = !DILocation(line: 1879, column: 31, scope: !6130)
!6130 = !DILexicalBlockFile(scope: !6126, file: !1210, discriminator: 1)
!6131 = !DILocation(line: 1879, column: 38, scope: !6130)
!6132 = !DILocation(line: 1879, column: 46, scope: !6130)
!6133 = !DILocation(line: 1879, column: 49, scope: !6134)
!6134 = !DILexicalBlockFile(scope: !6126, file: !1210, discriminator: 2)
!6135 = !DILocation(line: 1879, column: 56, scope: !6134)
!6136 = !DILocation(line: 1879, column: 64, scope: !6134)
!6137 = !DILocation(line: 1879, column: 67, scope: !6138)
!6138 = !DILexicalBlockFile(scope: !6126, file: !1210, discriminator: 3)
!6139 = !DILocation(line: 1879, column: 74, scope: !6138)
!6140 = !DILocation(line: 1879, column: 13, scope: !6138)
!6141 = !DILocation(line: 1880, column: 20, scope: !6142)
!6142 = distinct !DILexicalBlock(scope: !6126, file: !1210, line: 1879, column: 83)
!6143 = !DILocation(line: 1880, column: 13, scope: !6142)
!6144 = !DILocation(line: 1881, column: 13, scope: !6142)
!6145 = !DILocation(line: 1883, column: 5, scope: !6034)
!6146 = !DILocation(line: 1884, column: 33, scope: !6012)
!6147 = !DILocation(line: 1884, column: 40, scope: !6012)
!6148 = !DILocation(line: 1884, column: 11, scope: !6012)
!6149 = !DILocation(line: 1884, column: 9, scope: !6012)
!6150 = !DILocation(line: 1885, column: 9, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !6012, file: !1210, line: 1885, column: 9)
!6152 = !DILocation(line: 1885, column: 13, scope: !6151)
!6153 = !DILocation(line: 1885, column: 9, scope: !6012)
!6154 = !DILocation(line: 1886, column: 16, scope: !6151)
!6155 = !DILocation(line: 1886, column: 9, scope: !6151)
!6156 = !DILocation(line: 1888, column: 9, scope: !6157)
!6157 = distinct !DILexicalBlock(scope: !6012, file: !1210, line: 1888, column: 9)
!6158 = !DILocation(line: 1888, column: 9, scope: !6012)
!6159 = !DILocation(line: 1889, column: 13, scope: !6160)
!6160 = distinct !DILexicalBlock(scope: !6161, file: !1210, line: 1889, column: 13)
!6161 = distinct !DILexicalBlock(scope: !6157, file: !1210, line: 1888, column: 18)
!6162 = !DILocation(line: 1889, column: 22, scope: !6160)
!6163 = !DILocation(line: 1889, column: 13, scope: !6161)
!6164 = !DILocation(line: 1890, column: 19, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6160, file: !1210, line: 1889, column: 35)
!6166 = !DILocation(line: 1890, column: 28, scope: !6165)
!6167 = !DILocation(line: 1890, column: 40, scope: !6165)
!6168 = !DILocation(line: 1890, column: 47, scope: !6165)
!6169 = !DILocation(line: 1890, column: 17, scope: !6165)
!6170 = !DILocation(line: 1891, column: 13, scope: !6165)
!6171 = !DILocation(line: 1893, column: 5, scope: !6161)
!6172 = !DILocation(line: 1894, column: 29, scope: !6157)
!6173 = !DILocation(line: 1894, column: 36, scope: !6157)
!6174 = !DILocation(line: 1894, column: 9, scope: !6157)
!6175 = !DILocation(line: 1894, column: 16, scope: !6157)
!6176 = !DILocation(line: 1894, column: 27, scope: !6157)
!6177 = !DILocation(line: 1896, column: 11, scope: !6012)
!6178 = !DILocation(line: 1896, column: 18, scope: !6012)
!6179 = !DILocation(line: 1896, column: 30, scope: !6012)
!6180 = !DILocation(line: 1896, column: 37, scope: !6012)
!6181 = !DILocation(line: 1896, column: 44, scope: !6012)
!6182 = !DILocation(line: 1896, column: 9, scope: !6012)
!6183 = !DILocation(line: 1897, column: 9, scope: !6184)
!6184 = distinct !DILexicalBlock(scope: !6012, file: !1210, line: 1897, column: 9)
!6185 = !DILocation(line: 1897, column: 13, scope: !6184)
!6186 = !DILocation(line: 1897, column: 9, scope: !6012)
!6187 = !DILocation(line: 1898, column: 9, scope: !6184)
!6188 = !DILocation(line: 1900, column: 33, scope: !6012)
!6189 = !DILocation(line: 1900, column: 40, scope: !6012)
!6190 = !DILocation(line: 1900, column: 5, scope: !6012)
!6191 = !DILocation(line: 1902, column: 33, scope: !6012)
!6192 = !DILocation(line: 1902, column: 11, scope: !6012)
!6193 = !DILocation(line: 1902, column: 9, scope: !6012)
!6194 = !DILocation(line: 1903, column: 9, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !6012, file: !1210, line: 1903, column: 9)
!6196 = !DILocation(line: 1903, column: 13, scope: !6195)
!6197 = !DILocation(line: 1903, column: 9, scope: !6012)
!6198 = !DILocation(line: 1904, column: 9, scope: !6195)
!6199 = !DILocation(line: 1903, column: 15, scope: !6200)
!6200 = !DILexicalBlockFile(scope: !6195, file: !1210, discriminator: 1)
!6201 = !DILocation(line: 1907, column: 9, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6012, file: !1210, line: 1907, column: 9)
!6203 = !DILocation(line: 1907, column: 16, scope: !6202)
!6204 = !DILocation(line: 1907, column: 27, scope: !6202)
!6205 = !DILocation(line: 1907, column: 49, scope: !6202)
!6206 = !DILocation(line: 1907, column: 53, scope: !6207)
!6207 = !DILexicalBlockFile(scope: !6202, file: !1210, discriminator: 1)
!6208 = !DILocation(line: 1907, column: 73, scope: !6207)
!6209 = !DILocation(line: 1908, column: 11, scope: !6202)
!6210 = !DILocation(line: 1908, column: 18, scope: !6202)
!6211 = !DILocation(line: 1908, column: 25, scope: !6202)
!6212 = !DILocation(line: 1908, column: 39, scope: !6202)
!6213 = !DILocation(line: 1907, column: 9, scope: !6214)
!6214 = !DILexicalBlockFile(scope: !6012, file: !1210, discriminator: 2)
!6215 = !DILocation(line: 1909, column: 24, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6202, file: !1210, line: 1908, column: 52)
!6217 = !DILocation(line: 1909, column: 31, scope: !6216)
!6218 = !DILocation(line: 1909, column: 9, scope: !6216)
!6219 = !DILocation(line: 1909, column: 16, scope: !6216)
!6220 = !DILocation(line: 1909, column: 22, scope: !6216)
!6221 = !DILocation(line: 1910, column: 25, scope: !6216)
!6222 = !DILocation(line: 1910, column: 32, scope: !6216)
!6223 = !DILocation(line: 1910, column: 9, scope: !6216)
!6224 = !DILocation(line: 1910, column: 16, scope: !6216)
!6225 = !DILocation(line: 1910, column: 23, scope: !6216)
!6226 = !DILocation(line: 1911, column: 5, scope: !6216)
!6227 = !DILocation(line: 1913, column: 9, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6012, file: !1210, line: 1913, column: 9)
!6229 = !DILocation(line: 1913, column: 13, scope: !6228)
!6230 = !DILocation(line: 1913, column: 9, scope: !6012)
!6231 = !DILocation(line: 1914, column: 24, scope: !6228)
!6232 = !DILocation(line: 1914, column: 9, scope: !6228)
!6233 = !DILocation(line: 1916, column: 12, scope: !6012)
!6234 = !DILocation(line: 1916, column: 5, scope: !6012)
!6235 = !DILocation(line: 1917, column: 1, scope: !6012)
!6236 = distinct !DISubprogram(name: "ff_reget_buffer", scope: !1210, file: !1210, line: 1966, type: !1211, isLocal: false, isDefinition: true, scopeLine: 1967, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!6237 = !DILocalVariable(name: "avctx", arg: 1, scope: !6236, file: !1210, line: 1966, type: !1213)
!6238 = !DILocation(line: 1966, column: 37, scope: !6236)
!6239 = !DILocalVariable(name: "frame", arg: 2, scope: !6236, file: !1210, line: 1966, type: !1107)
!6240 = !DILocation(line: 1966, column: 53, scope: !6236)
!6241 = !DILocalVariable(name: "ret", scope: !6236, file: !1210, line: 1968, type: !939)
!6242 = !DILocation(line: 1968, column: 9, scope: !6236)
!6243 = !DILocation(line: 1968, column: 37, scope: !6236)
!6244 = !DILocation(line: 1968, column: 44, scope: !6236)
!6245 = !DILocation(line: 1968, column: 15, scope: !6236)
!6246 = !DILocation(line: 1969, column: 9, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6236, file: !1210, line: 1969, column: 9)
!6248 = !DILocation(line: 1969, column: 13, scope: !6247)
!6249 = !DILocation(line: 1969, column: 9, scope: !6236)
!6250 = !DILocation(line: 1970, column: 16, scope: !6247)
!6251 = !DILocation(line: 1970, column: 9, scope: !6247)
!6252 = !DILocation(line: 1971, column: 12, scope: !6236)
!6253 = !DILocation(line: 1971, column: 5, scope: !6236)
!6254 = distinct !DISubprogram(name: "reget_buffer_internal", scope: !1210, file: !1210, line: 1929, type: !1211, isLocal: true, isDefinition: true, scopeLine: 1930, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!6255 = !DILocalVariable(name: "avctx", arg: 1, scope: !6254, file: !1210, line: 1929, type: !1213)
!6256 = !DILocation(line: 1929, column: 50, scope: !6254)
!6257 = !DILocalVariable(name: "frame", arg: 2, scope: !6254, file: !1210, line: 1929, type: !1107)
!6258 = !DILocation(line: 1929, column: 66, scope: !6254)
!6259 = !DILocalVariable(name: "tmp", scope: !6254, file: !1210, line: 1931, type: !1107)
!6260 = !DILocation(line: 1931, column: 14, scope: !6254)
!6261 = !DILocalVariable(name: "ret", scope: !6254, file: !1210, line: 1932, type: !939)
!6262 = !DILocation(line: 1932, column: 9, scope: !6254)
!6263 = !DILocation(line: 1934, column: 5, scope: !6254)
!6264 = distinct !{!6264, !6263}
!6265 = !DILocation(line: 1934, column: 16, scope: !6266)
!6266 = !DILexicalBlockFile(scope: !6267, file: !1210, discriminator: 1)
!6267 = distinct !DILexicalBlock(scope: !6268, file: !1210, line: 1934, column: 14)
!6268 = distinct !DILexicalBlock(scope: !6254, file: !1210, line: 1934, column: 8)
!6269 = !DILocation(line: 1934, column: 23, scope: !6266)
!6270 = !DILocation(line: 1934, column: 34, scope: !6266)
!6271 = !DILocation(line: 1934, column: 14, scope: !6266)
!6272 = !DILocation(line: 1934, column: 60, scope: !6273)
!6273 = !DILexicalBlockFile(scope: !6274, file: !1210, discriminator: 2)
!6274 = distinct !DILexicalBlock(scope: !6267, file: !1210, line: 1934, column: 58)
!6275 = !DILocation(line: 1934, column: 116, scope: !6276)
!6276 = !DILexicalBlockFile(scope: !6273, file: !1210, discriminator: 4)
!6277 = !DILocation(line: 1934, column: 116, scope: !6273)
!6278 = !DILocation(line: 1934, column: 127, scope: !6279)
!6279 = !DILexicalBlockFile(scope: !6268, file: !1210, discriminator: 3)
!6280 = !DILocation(line: 1936, column: 9, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6254, file: !1210, line: 1936, column: 9)
!6282 = !DILocation(line: 1936, column: 16, scope: !6281)
!6283 = !DILocation(line: 1936, column: 24, scope: !6281)
!6284 = !DILocation(line: 1936, column: 28, scope: !6285)
!6285 = !DILexicalBlockFile(scope: !6281, file: !1210, discriminator: 1)
!6286 = !DILocation(line: 1936, column: 35, scope: !6285)
!6287 = !DILocation(line: 1936, column: 44, scope: !6285)
!6288 = !DILocation(line: 1936, column: 51, scope: !6285)
!6289 = !DILocation(line: 1936, column: 41, scope: !6285)
!6290 = !DILocation(line: 1936, column: 57, scope: !6285)
!6291 = !DILocation(line: 1936, column: 60, scope: !6292)
!6292 = !DILexicalBlockFile(scope: !6281, file: !1210, discriminator: 2)
!6293 = !DILocation(line: 1936, column: 67, scope: !6292)
!6294 = !DILocation(line: 1936, column: 77, scope: !6292)
!6295 = !DILocation(line: 1936, column: 84, scope: !6292)
!6296 = !DILocation(line: 1936, column: 74, scope: !6292)
!6297 = !DILocation(line: 1936, column: 91, scope: !6292)
!6298 = !DILocation(line: 1936, column: 94, scope: !6299)
!6299 = !DILexicalBlockFile(scope: !6281, file: !1210, discriminator: 3)
!6300 = !DILocation(line: 1936, column: 101, scope: !6299)
!6301 = !DILocation(line: 1936, column: 111, scope: !6299)
!6302 = !DILocation(line: 1936, column: 118, scope: !6299)
!6303 = !DILocation(line: 1936, column: 108, scope: !6299)
!6304 = !DILocation(line: 1936, column: 9, scope: !6299)
!6305 = !DILocation(line: 1937, column: 16, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6281, file: !1210, line: 1936, column: 128)
!6307 = !DILocation(line: 1938, column: 16, scope: !6306)
!6308 = !DILocation(line: 1938, column: 23, scope: !6306)
!6309 = !DILocation(line: 1938, column: 30, scope: !6306)
!6310 = !DILocation(line: 1938, column: 37, scope: !6306)
!6311 = !DILocation(line: 1938, column: 65, scope: !6306)
!6312 = !DILocation(line: 1938, column: 72, scope: !6306)
!6313 = !DILocation(line: 1938, column: 45, scope: !6306)
!6314 = !DILocation(line: 1938, column: 81, scope: !6306)
!6315 = !DILocation(line: 1938, column: 88, scope: !6306)
!6316 = !DILocation(line: 1938, column: 95, scope: !6306)
!6317 = !DILocation(line: 1938, column: 102, scope: !6306)
!6318 = !DILocation(line: 1938, column: 130, scope: !6306)
!6319 = !DILocation(line: 1938, column: 137, scope: !6306)
!6320 = !DILocation(line: 1938, column: 110, scope: !6321)
!6321 = !DILexicalBlockFile(scope: !6306, file: !1210, discriminator: 1)
!6322 = !DILocation(line: 1937, column: 9, scope: !6306)
!6323 = !DILocation(line: 1939, column: 24, scope: !6306)
!6324 = !DILocation(line: 1939, column: 9, scope: !6306)
!6325 = !DILocation(line: 1940, column: 5, scope: !6306)
!6326 = !DILocation(line: 1942, column: 10, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6254, file: !1210, line: 1942, column: 9)
!6328 = !DILocation(line: 1942, column: 17, scope: !6327)
!6329 = !DILocation(line: 1942, column: 9, scope: !6254)
!6330 = !DILocation(line: 1943, column: 30, scope: !6327)
!6331 = !DILocation(line: 1943, column: 37, scope: !6327)
!6332 = !DILocation(line: 1943, column: 16, scope: !6327)
!6333 = !DILocation(line: 1943, column: 9, scope: !6327)
!6334 = !DILocation(line: 1945, column: 30, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6254, file: !1210, line: 1945, column: 9)
!6336 = !DILocation(line: 1945, column: 9, scope: !6335)
!6337 = !DILocation(line: 1945, column: 9, scope: !6254)
!6338 = !DILocation(line: 1946, column: 38, scope: !6335)
!6339 = !DILocation(line: 1946, column: 45, scope: !6335)
!6340 = !DILocation(line: 1946, column: 16, scope: !6335)
!6341 = !DILocation(line: 1946, column: 9, scope: !6335)
!6342 = !DILocation(line: 1948, column: 11, scope: !6254)
!6343 = !DILocation(line: 1948, column: 9, scope: !6254)
!6344 = !DILocation(line: 1949, column: 10, scope: !6345)
!6345 = distinct !DILexicalBlock(scope: !6254, file: !1210, line: 1949, column: 9)
!6346 = !DILocation(line: 1949, column: 9, scope: !6254)
!6347 = !DILocation(line: 1950, column: 9, scope: !6345)
!6348 = !DILocation(line: 1952, column: 23, scope: !6254)
!6349 = !DILocation(line: 1952, column: 28, scope: !6254)
!6350 = !DILocation(line: 1952, column: 5, scope: !6254)
!6351 = !DILocation(line: 1954, column: 25, scope: !6254)
!6352 = !DILocation(line: 1954, column: 32, scope: !6254)
!6353 = !DILocation(line: 1954, column: 11, scope: !6254)
!6354 = !DILocation(line: 1954, column: 9, scope: !6254)
!6355 = !DILocation(line: 1955, column: 9, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6254, file: !1210, line: 1955, column: 9)
!6357 = !DILocation(line: 1955, column: 13, scope: !6356)
!6358 = !DILocation(line: 1955, column: 9, scope: !6254)
!6359 = !DILocation(line: 1956, column: 9, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6356, file: !1210, line: 1955, column: 18)
!6361 = !DILocation(line: 1957, column: 16, scope: !6360)
!6362 = !DILocation(line: 1957, column: 9, scope: !6360)
!6363 = !DILocation(line: 1960, column: 19, scope: !6254)
!6364 = !DILocation(line: 1960, column: 26, scope: !6254)
!6365 = !DILocation(line: 1960, column: 5, scope: !6254)
!6366 = !DILocation(line: 1961, column: 5, scope: !6254)
!6367 = !DILocation(line: 1963, column: 5, scope: !6254)
!6368 = !DILocation(line: 1964, column: 1, scope: !6254)
!6369 = distinct !DISubprogram(name: "avcodec_flush_buffers", scope: !1210, file: !1210, line: 1982, type: !1372, isLocal: false, isDefinition: true, scopeLine: 1983, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!6370 = !DILocalVariable(name: "avctx", arg: 1, scope: !6369, file: !1210, line: 1982, type: !1213)
!6371 = !DILocation(line: 1982, column: 44, scope: !6369)
!6372 = !DILocation(line: 1984, column: 5, scope: !6369)
!6373 = !DILocation(line: 1984, column: 12, scope: !6369)
!6374 = !DILocation(line: 1984, column: 22, scope: !6369)
!6375 = !DILocation(line: 1984, column: 31, scope: !6369)
!6376 = !DILocation(line: 1985, column: 5, scope: !6369)
!6377 = !DILocation(line: 1985, column: 12, scope: !6369)
!6378 = !DILocation(line: 1985, column: 22, scope: !6369)
!6379 = !DILocation(line: 1985, column: 36, scope: !6369)
!6380 = !DILocation(line: 1986, column: 5, scope: !6369)
!6381 = !DILocation(line: 1986, column: 12, scope: !6369)
!6382 = !DILocation(line: 1986, column: 22, scope: !6369)
!6383 = !DILocation(line: 1986, column: 41, scope: !6369)
!6384 = !DILocation(line: 1987, column: 20, scope: !6369)
!6385 = !DILocation(line: 1987, column: 27, scope: !6369)
!6386 = !DILocation(line: 1987, column: 37, scope: !6369)
!6387 = !DILocation(line: 1987, column: 5, scope: !6369)
!6388 = !DILocation(line: 1988, column: 20, scope: !6369)
!6389 = !DILocation(line: 1988, column: 27, scope: !6369)
!6390 = !DILocation(line: 1988, column: 37, scope: !6369)
!6391 = !DILocation(line: 1988, column: 5, scope: !6369)
!6392 = !DILocation(line: 1989, column: 21, scope: !6369)
!6393 = !DILocation(line: 1989, column: 28, scope: !6369)
!6394 = !DILocation(line: 1989, column: 38, scope: !6369)
!6395 = !DILocation(line: 1989, column: 5, scope: !6369)
!6396 = !DILocation(line: 1990, column: 5, scope: !6369)
!6397 = !DILocation(line: 1990, column: 12, scope: !6369)
!6398 = !DILocation(line: 1990, column: 22, scope: !6369)
!6399 = !DILocation(line: 1990, column: 39, scope: !6369)
!6400 = !DILocation(line: 1992, column: 21, scope: !6369)
!6401 = !DILocation(line: 1992, column: 28, scope: !6369)
!6402 = !DILocation(line: 1992, column: 38, scope: !6369)
!6403 = !DILocation(line: 1992, column: 41, scope: !6369)
!6404 = !DILocation(line: 1992, column: 5, scope: !6369)
!6405 = !DILocation(line: 1994, column: 14, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6369, file: !1210, line: 1994, column: 9)
!6407 = !DILocation(line: 1994, column: 21, scope: !6406)
!6408 = !DILocation(line: 1994, column: 40, scope: !6406)
!6409 = !DILocation(line: 1994, column: 9, scope: !6369)
!6410 = !DILocation(line: 1995, column: 25, scope: !6406)
!6411 = !DILocation(line: 1995, column: 9, scope: !6406)
!6412 = !DILocation(line: 1996, column: 14, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6406, file: !1210, line: 1996, column: 14)
!6414 = !DILocation(line: 1996, column: 21, scope: !6413)
!6415 = !DILocation(line: 1996, column: 28, scope: !6413)
!6416 = !DILocation(line: 1996, column: 14, scope: !6406)
!6417 = !DILocation(line: 1997, column: 9, scope: !6413)
!6418 = !DILocation(line: 1997, column: 16, scope: !6413)
!6419 = !DILocation(line: 1997, column: 23, scope: !6413)
!6420 = !DILocation(line: 1997, column: 29, scope: !6413)
!6421 = !DILocation(line: 2000, column: 5, scope: !6369)
!6422 = !DILocation(line: 2000, column: 12, scope: !6369)
!6423 = !DILocation(line: 2000, column: 36, scope: !6369)
!6424 = !DILocation(line: 1999, column: 5, scope: !6369)
!6425 = !DILocation(line: 1999, column: 12, scope: !6369)
!6426 = !DILocation(line: 1999, column: 36, scope: !6369)
!6427 = !DILocation(line: 2002, column: 16, scope: !6369)
!6428 = !DILocation(line: 2002, column: 5, scope: !6369)
!6429 = !DILocation(line: 2004, column: 10, scope: !6430)
!6430 = distinct !DILexicalBlock(scope: !6369, file: !1210, line: 2004, column: 9)
!6431 = !DILocation(line: 2004, column: 17, scope: !6430)
!6432 = !DILocation(line: 2004, column: 9, scope: !6369)
!6433 = !DILocation(line: 2005, column: 24, scope: !6430)
!6434 = !DILocation(line: 2005, column: 31, scope: !6430)
!6435 = !DILocation(line: 2005, column: 41, scope: !6430)
!6436 = !DILocation(line: 2005, column: 9, scope: !6430)
!6437 = !DILocation(line: 2006, column: 1, scope: !6369)
!6438 = distinct !DISubprogram(name: "bsfs_flush", scope: !1210, file: !1210, line: 1974, type: !1372, isLocal: true, isDefinition: true, scopeLine: 1975, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!6439 = !DILocalVariable(name: "avctx", arg: 1, scope: !6438, file: !1210, line: 1974, type: !1213)
!6440 = !DILocation(line: 1974, column: 40, scope: !6438)
!6441 = !DILocalVariable(name: "s", scope: !6438, file: !1210, line: 1976, type: !1814)
!6442 = !DILocation(line: 1976, column: 26, scope: !6438)
!6443 = !DILocation(line: 1976, column: 31, scope: !6438)
!6444 = !DILocation(line: 1976, column: 38, scope: !6438)
!6445 = !DILocation(line: 1976, column: 48, scope: !6438)
!6446 = !DILocalVariable(name: "i", scope: !6447, file: !1210, line: 1978, type: !939)
!6447 = distinct !DILexicalBlock(scope: !6438, file: !1210, line: 1978, column: 5)
!6448 = !DILocation(line: 1978, column: 14, scope: !6447)
!6449 = !DILocation(line: 1978, column: 10, scope: !6447)
!6450 = !DILocation(line: 1978, column: 21, scope: !6451)
!6451 = !DILexicalBlockFile(scope: !6452, file: !1210, discriminator: 1)
!6452 = distinct !DILexicalBlock(scope: !6447, file: !1210, line: 1978, column: 5)
!6453 = !DILocation(line: 1978, column: 25, scope: !6451)
!6454 = !DILocation(line: 1978, column: 28, scope: !6451)
!6455 = !DILocation(line: 1978, column: 23, scope: !6451)
!6456 = !DILocation(line: 1978, column: 5, scope: !6451)
!6457 = !DILocation(line: 1979, column: 30, scope: !6452)
!6458 = !DILocation(line: 1979, column: 22, scope: !6452)
!6459 = !DILocation(line: 1979, column: 25, scope: !6452)
!6460 = !DILocation(line: 1979, column: 9, scope: !6452)
!6461 = !DILocation(line: 1978, column: 38, scope: !6462)
!6462 = !DILexicalBlockFile(scope: !6452, file: !1210, discriminator: 2)
!6463 = !DILocation(line: 1978, column: 5, scope: !6462)
!6464 = distinct !{!6464, !6465}
!6465 = !DILocation(line: 1978, column: 5, scope: !6438)
!6466 = !DILocation(line: 1980, column: 1, scope: !6438)
!6467 = distinct !DISubprogram(name: "decode_simple_receive_frame", scope: !1210, file: !1210, line: 624, type: !1211, isLocal: true, isDefinition: true, scopeLine: 625, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!6468 = !DILocalVariable(name: "avctx", arg: 1, scope: !6467, file: !1210, line: 624, type: !1213)
!6469 = !DILocation(line: 624, column: 56, scope: !6467)
!6470 = !DILocalVariable(name: "frame", arg: 2, scope: !6467, file: !1210, line: 624, type: !1107)
!6471 = !DILocation(line: 624, column: 72, scope: !6467)
!6472 = !DILocalVariable(name: "ret", scope: !6467, file: !1210, line: 626, type: !939)
!6473 = !DILocation(line: 626, column: 9, scope: !6467)
!6474 = !DILocation(line: 628, column: 5, scope: !6467)
!6475 = !DILocation(line: 628, column: 13, scope: !6476)
!6476 = !DILexicalBlockFile(scope: !6467, file: !1210, discriminator: 1)
!6477 = !DILocation(line: 628, column: 20, scope: !6476)
!6478 = !DILocation(line: 628, column: 12, scope: !6476)
!6479 = !DILocation(line: 628, column: 5, scope: !6476)
!6480 = !DILocation(line: 629, column: 38, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6467, file: !1210, line: 628, column: 28)
!6482 = !DILocation(line: 629, column: 45, scope: !6481)
!6483 = !DILocation(line: 629, column: 15, scope: !6481)
!6484 = !DILocation(line: 629, column: 13, scope: !6481)
!6485 = !DILocation(line: 630, column: 13, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6481, file: !1210, line: 630, column: 13)
!6487 = !DILocation(line: 630, column: 17, scope: !6486)
!6488 = !DILocation(line: 630, column: 13, scope: !6481)
!6489 = !DILocation(line: 631, column: 20, scope: !6486)
!6490 = !DILocation(line: 631, column: 13, scope: !6486)
!6491 = !DILocation(line: 628, column: 5, scope: !6492)
!6492 = !DILexicalBlockFile(scope: !6467, file: !1210, discriminator: 2)
!6493 = distinct !{!6493, !6474}
!6494 = !DILocation(line: 634, column: 5, scope: !6467)
!6495 = !DILocation(line: 635, column: 1, scope: !6467)
!6496 = distinct !DISubprogram(name: "decode_simple_internal", scope: !1210, file: !1210, line: 402, type: !1211, isLocal: true, isDefinition: true, scopeLine: 403, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!6497 = !DILocalVariable(name: "q", arg: 1, scope: !6498, file: !981, line: 159, type: !980)
!6498 = distinct !DISubprogram(name: "av_inv_q", scope: !981, file: !981, line: 159, type: !6499, isLocal: true, isDefinition: true, scopeLine: 160, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!6499 = !DISubroutineType(types: !6500)
!6500 = !{!980, !980}
!6501 = !DILocation(line: 159, column: 77, scope: !6498, inlinedAt: !6502)
!6502 = distinct !DILocation(line: 579, column: 28, scope: !6503)
!6503 = !DILexicalBlockFile(scope: !6504, file: !1210, discriminator: 1)
!6504 = distinct !DILexicalBlock(scope: !6496, file: !1210, line: 578, column: 9)
!6505 = !DILocalVariable(name: "r", scope: !6498, file: !981, line: 161, type: !980)
!6506 = !DILocation(line: 161, column: 16, scope: !6498, inlinedAt: !6502)
!6507 = !DILocalVariable(name: "avctx", arg: 1, scope: !6496, file: !1210, line: 402, type: !1213)
!6508 = !DILocation(line: 402, column: 51, scope: !6496)
!6509 = !DILocalVariable(name: "frame", arg: 2, scope: !6496, file: !1210, line: 402, type: !1107)
!6510 = !DILocation(line: 402, column: 67, scope: !6496)
!6511 = !DILocalVariable(name: "avci", scope: !6496, file: !1210, line: 404, type: !1808)
!6512 = !DILocation(line: 404, column: 22, scope: !6496)
!6513 = !DILocation(line: 404, column: 29, scope: !6496)
!6514 = !DILocation(line: 404, column: 36, scope: !6496)
!6515 = !DILocalVariable(name: "ds", scope: !6496, file: !1210, line: 405, type: !6516)
!6516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 64, align: 64)
!6517 = !DILocation(line: 405, column: 26, scope: !6496)
!6518 = !DILocation(line: 405, column: 32, scope: !6496)
!6519 = !DILocation(line: 405, column: 38, scope: !6496)
!6520 = !DILocalVariable(name: "pkt", scope: !6496, file: !1210, line: 406, type: !1329)
!6521 = !DILocation(line: 406, column: 15, scope: !6496)
!6522 = !DILocation(line: 406, column: 21, scope: !6496)
!6523 = !DILocation(line: 406, column: 25, scope: !6496)
!6524 = !DILocalVariable(name: "got_frame", scope: !6496, file: !1210, line: 408, type: !939)
!6525 = !DILocation(line: 408, column: 9, scope: !6496)
!6526 = !DILocalVariable(name: "actual_got_frame", scope: !6496, file: !1210, line: 408, type: !939)
!6527 = !DILocation(line: 408, column: 20, scope: !6496)
!6528 = !DILocalVariable(name: "ret", scope: !6496, file: !1210, line: 409, type: !939)
!6529 = !DILocation(line: 409, column: 9, scope: !6496)
!6530 = !DILocation(line: 411, column: 10, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !6496, file: !1210, line: 411, column: 9)
!6532 = !DILocation(line: 411, column: 15, scope: !6531)
!6533 = !DILocation(line: 411, column: 20, scope: !6531)
!6534 = !DILocation(line: 411, column: 24, scope: !6535)
!6535 = !DILexicalBlockFile(scope: !6531, file: !1210, discriminator: 1)
!6536 = !DILocation(line: 411, column: 30, scope: !6535)
!6537 = !DILocation(line: 411, column: 9, scope: !6535)
!6538 = !DILocation(line: 412, column: 25, scope: !6539)
!6539 = distinct !DILexicalBlock(scope: !6531, file: !1210, line: 411, column: 40)
!6540 = !DILocation(line: 412, column: 9, scope: !6539)
!6541 = !DILocation(line: 413, column: 36, scope: !6539)
!6542 = !DILocation(line: 413, column: 43, scope: !6539)
!6543 = !DILocation(line: 413, column: 15, scope: !6539)
!6544 = !DILocation(line: 413, column: 13, scope: !6539)
!6545 = !DILocation(line: 414, column: 13, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6539, file: !1210, line: 414, column: 13)
!6547 = !DILocation(line: 414, column: 17, scope: !6546)
!6548 = !DILocation(line: 414, column: 21, scope: !6546)
!6549 = !DILocation(line: 414, column: 24, scope: !6550)
!6550 = !DILexicalBlockFile(scope: !6546, file: !1210, discriminator: 1)
!6551 = !DILocation(line: 414, column: 28, scope: !6550)
!6552 = !DILocation(line: 414, column: 13, scope: !6550)
!6553 = !DILocation(line: 415, column: 20, scope: !6546)
!6554 = !DILocation(line: 415, column: 13, scope: !6546)
!6555 = !DILocation(line: 416, column: 5, scope: !6539)
!6556 = !DILocation(line: 420, column: 9, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !6496, file: !1210, line: 420, column: 9)
!6558 = !DILocation(line: 420, column: 15, scope: !6557)
!6559 = !DILocation(line: 420, column: 9, scope: !6496)
!6560 = !DILocation(line: 421, column: 9, scope: !6557)
!6561 = !DILocation(line: 423, column: 10, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6496, file: !1210, line: 423, column: 9)
!6563 = !DILocation(line: 423, column: 15, scope: !6562)
!6564 = !DILocation(line: 423, column: 20, scope: !6562)
!6565 = !DILocation(line: 424, column: 11, scope: !6562)
!6566 = !DILocation(line: 424, column: 18, scope: !6562)
!6567 = !DILocation(line: 424, column: 25, scope: !6562)
!6568 = !DILocation(line: 424, column: 38, scope: !6562)
!6569 = !DILocation(line: 424, column: 49, scope: !6562)
!6570 = !DILocation(line: 425, column: 11, scope: !6562)
!6571 = !DILocation(line: 425, column: 18, scope: !6562)
!6572 = !DILocation(line: 425, column: 37, scope: !6562)
!6573 = !DILocation(line: 423, column: 9, scope: !6574)
!6574 = !DILexicalBlockFile(scope: !6496, file: !1210, discriminator: 1)
!6575 = !DILocation(line: 426, column: 9, scope: !6562)
!6576 = !DILocation(line: 428, column: 15, scope: !6496)
!6577 = !DILocation(line: 430, column: 14, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6496, file: !1210, line: 430, column: 9)
!6579 = !DILocation(line: 430, column: 21, scope: !6578)
!6580 = !DILocation(line: 430, column: 40, scope: !6578)
!6581 = !DILocation(line: 430, column: 9, scope: !6496)
!6582 = !DILocation(line: 431, column: 38, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6578, file: !1210, line: 430, column: 45)
!6584 = !DILocation(line: 431, column: 45, scope: !6583)
!6585 = !DILocation(line: 431, column: 64, scope: !6583)
!6586 = !DILocation(line: 431, column: 15, scope: !6583)
!6587 = !DILocation(line: 431, column: 13, scope: !6583)
!6588 = !DILocation(line: 432, column: 5, scope: !6583)
!6589 = !DILocation(line: 433, column: 15, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6578, file: !1210, line: 432, column: 12)
!6591 = !DILocation(line: 433, column: 22, scope: !6590)
!6592 = !DILocation(line: 433, column: 29, scope: !6590)
!6593 = !DILocation(line: 433, column: 36, scope: !6590)
!6594 = !DILocation(line: 433, column: 43, scope: !6590)
!6595 = !DILocation(line: 433, column: 62, scope: !6590)
!6596 = !DILocation(line: 433, column: 13, scope: !6590)
!6597 = !DILocation(line: 435, column: 15, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6590, file: !1210, line: 435, column: 13)
!6599 = !DILocation(line: 435, column: 22, scope: !6598)
!6600 = !DILocation(line: 435, column: 29, scope: !6598)
!6601 = !DILocation(line: 435, column: 43, scope: !6598)
!6602 = !DILocation(line: 435, column: 13, scope: !6590)
!6603 = !DILocation(line: 436, column: 30, scope: !6598)
!6604 = !DILocation(line: 436, column: 35, scope: !6598)
!6605 = !DILocation(line: 436, column: 13, scope: !6598)
!6606 = !DILocation(line: 436, column: 20, scope: !6598)
!6607 = !DILocation(line: 436, column: 28, scope: !6598)
!6608 = !DILocation(line: 437, column: 13, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6590, file: !1210, line: 437, column: 13)
!6610 = !DILocation(line: 437, column: 20, scope: !6609)
!6611 = !DILocation(line: 437, column: 27, scope: !6609)
!6612 = !DILocation(line: 437, column: 32, scope: !6609)
!6613 = !DILocation(line: 437, column: 13, scope: !6590)
!6614 = !DILocation(line: 438, column: 17, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6616, file: !1210, line: 438, column: 16)
!6616 = distinct !DILexicalBlock(scope: !6609, file: !1210, line: 437, column: 55)
!6617 = !DILocation(line: 438, column: 24, scope: !6615)
!6618 = !DILocation(line: 438, column: 16, scope: !6616)
!6619 = !DILocation(line: 439, column: 34, scope: !6615)
!6620 = !DILocation(line: 439, column: 39, scope: !6615)
!6621 = !DILocation(line: 439, column: 17, scope: !6615)
!6622 = !DILocation(line: 439, column: 24, scope: !6615)
!6623 = !DILocation(line: 439, column: 32, scope: !6615)
!6624 = !DILocation(line: 442, column: 19, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !6616, file: !1210, line: 442, column: 17)
!6626 = !DILocation(line: 442, column: 26, scope: !6625)
!6627 = !DILocation(line: 442, column: 33, scope: !6625)
!6628 = !DILocation(line: 442, column: 46, scope: !6625)
!6629 = !DILocation(line: 442, column: 17, scope: !6616)
!6630 = !DILocation(line: 443, column: 22, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6632, file: !1210, line: 443, column: 21)
!6632 = distinct !DILexicalBlock(scope: !6625, file: !1210, line: 442, column: 59)
!6633 = !DILocation(line: 443, column: 29, scope: !6631)
!6634 = !DILocation(line: 443, column: 49, scope: !6631)
!6635 = !DILocation(line: 443, column: 21, scope: !6632)
!6636 = !DILocation(line: 443, column: 54, scope: !6637)
!6637 = !DILexicalBlockFile(scope: !6631, file: !1210, discriminator: 1)
!6638 = !DILocation(line: 443, column: 61, scope: !6637)
!6639 = !DILocation(line: 443, column: 83, scope: !6637)
!6640 = !DILocation(line: 443, column: 90, scope: !6637)
!6641 = !DILocation(line: 444, column: 22, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6632, file: !1210, line: 444, column: 21)
!6643 = !DILocation(line: 444, column: 29, scope: !6642)
!6644 = !DILocation(line: 444, column: 21, scope: !6632)
!6645 = !DILocation(line: 444, column: 51, scope: !6646)
!6646 = !DILexicalBlockFile(scope: !6642, file: !1210, discriminator: 1)
!6647 = !DILocation(line: 444, column: 58, scope: !6646)
!6648 = !DILocation(line: 444, column: 36, scope: !6646)
!6649 = !DILocation(line: 444, column: 43, scope: !6646)
!6650 = !DILocation(line: 444, column: 49, scope: !6646)
!6651 = !DILocation(line: 445, column: 22, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6632, file: !1210, line: 445, column: 21)
!6653 = !DILocation(line: 445, column: 29, scope: !6652)
!6654 = !DILocation(line: 445, column: 21, scope: !6632)
!6655 = !DILocation(line: 445, column: 53, scope: !6656)
!6656 = !DILexicalBlockFile(scope: !6652, file: !1210, discriminator: 1)
!6657 = !DILocation(line: 445, column: 60, scope: !6656)
!6658 = !DILocation(line: 445, column: 37, scope: !6656)
!6659 = !DILocation(line: 445, column: 44, scope: !6656)
!6660 = !DILocation(line: 445, column: 51, scope: !6656)
!6661 = !DILocation(line: 446, column: 21, scope: !6662)
!6662 = distinct !DILexicalBlock(scope: !6632, file: !1210, line: 446, column: 21)
!6663 = !DILocation(line: 446, column: 28, scope: !6662)
!6664 = !DILocation(line: 446, column: 35, scope: !6662)
!6665 = !DILocation(line: 446, column: 21, scope: !6632)
!6666 = !DILocation(line: 446, column: 71, scope: !6667)
!6667 = !DILexicalBlockFile(scope: !6662, file: !1210, discriminator: 1)
!6668 = !DILocation(line: 446, column: 78, scope: !6667)
!6669 = !DILocation(line: 446, column: 55, scope: !6667)
!6670 = !DILocation(line: 446, column: 62, scope: !6667)
!6671 = !DILocation(line: 446, column: 69, scope: !6667)
!6672 = !DILocation(line: 447, column: 13, scope: !6632)
!6673 = !DILocation(line: 448, column: 9, scope: !6616)
!6674 = !DILocation(line: 46, column: 9, scope: !6675, inlinedAt: !6679)
!6675 = distinct !DISubprogram(name: "emms_c", scope: !6676, file: !6676, line: 37, type: !6677, isLocal: true, isDefinition: true, scopeLine: 38, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!6676 = !DIFile(filename: "./libavutil/x86/emms.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!6677 = !DISubroutineType(types: !6678)
!6678 = !{null}
!6679 = distinct !DILocation(line: 450, column: 5, scope: !6496)
!6680 = !{i32 100971}
!6681 = !DILocation(line: 451, column: 24, scope: !6496)
!6682 = !DILocation(line: 451, column: 22, scope: !6496)
!6683 = !DILocation(line: 453, column: 9, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6496, file: !1210, line: 453, column: 9)
!6685 = !DILocation(line: 453, column: 16, scope: !6684)
!6686 = !DILocation(line: 453, column: 23, scope: !6684)
!6687 = !DILocation(line: 453, column: 28, scope: !6684)
!6688 = !DILocation(line: 453, column: 9, scope: !6496)
!6689 = !DILocation(line: 454, column: 13, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !6691, file: !1210, line: 454, column: 13)
!6691 = distinct !DILexicalBlock(scope: !6684, file: !1210, line: 453, column: 51)
!6692 = !DILocation(line: 454, column: 20, scope: !6690)
!6693 = !DILocation(line: 454, column: 26, scope: !6690)
!6694 = !DILocation(line: 454, column: 13, scope: !6691)
!6695 = !DILocation(line: 455, column: 23, scope: !6690)
!6696 = !DILocation(line: 455, column: 13, scope: !6690)
!6697 = !DILocation(line: 456, column: 13, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6691, file: !1210, line: 456, column: 13)
!6699 = !DILocation(line: 456, column: 13, scope: !6691)
!6700 = !DILocation(line: 457, column: 62, scope: !6698)
!6701 = !DILocation(line: 458, column: 62, scope: !6698)
!6702 = !DILocation(line: 458, column: 69, scope: !6698)
!6703 = !DILocation(line: 459, column: 62, scope: !6698)
!6704 = !DILocation(line: 459, column: 69, scope: !6698)
!6705 = !DILocation(line: 457, column: 44, scope: !6698)
!6706 = !DILocation(line: 457, column: 13, scope: !6698)
!6707 = !DILocation(line: 457, column: 20, scope: !6698)
!6708 = !DILocation(line: 457, column: 42, scope: !6698)
!6709 = !DILocation(line: 460, column: 5, scope: !6691)
!6710 = !DILocation(line: 460, column: 16, scope: !6711)
!6711 = !DILexicalBlockFile(scope: !6712, file: !1210, discriminator: 1)
!6712 = distinct !DILexicalBlock(scope: !6684, file: !1210, line: 460, column: 16)
!6713 = !DILocation(line: 460, column: 23, scope: !6711)
!6714 = !DILocation(line: 460, column: 30, scope: !6711)
!6715 = !DILocation(line: 460, column: 35, scope: !6711)
!6716 = !DILocalVariable(name: "side", scope: !6717, file: !1210, line: 461, type: !1063)
!6717 = distinct !DILexicalBlock(scope: !6712, file: !1210, line: 460, column: 58)
!6718 = !DILocation(line: 461, column: 18, scope: !6717)
!6719 = !DILocalVariable(name: "side_size", scope: !6717, file: !1210, line: 462, type: !939)
!6720 = !DILocation(line: 462, column: 13, scope: !6717)
!6721 = !DILocalVariable(name: "discard_padding", scope: !6717, file: !1210, line: 463, type: !1090)
!6722 = !DILocation(line: 463, column: 18, scope: !6717)
!6723 = !DILocalVariable(name: "skip_reason", scope: !6717, file: !1210, line: 464, type: !1064)
!6724 = !DILocation(line: 464, column: 17, scope: !6717)
!6725 = !DILocalVariable(name: "discard_reason", scope: !6717, file: !1210, line: 465, type: !1064)
!6726 = !DILocation(line: 465, column: 17, scope: !6717)
!6727 = !DILocation(line: 467, column: 13, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6717, file: !1210, line: 467, column: 13)
!6729 = !DILocation(line: 467, column: 17, scope: !6728)
!6730 = !DILocation(line: 467, column: 22, scope: !6728)
!6731 = !DILocation(line: 467, column: 25, scope: !6732)
!6732 = !DILexicalBlockFile(scope: !6728, file: !1210, discriminator: 1)
!6733 = !DILocation(line: 467, column: 13, scope: !6732)
!6734 = !DILocation(line: 468, column: 62, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6728, file: !1210, line: 467, column: 36)
!6736 = !DILocation(line: 469, column: 62, scope: !6735)
!6737 = !DILocation(line: 469, column: 69, scope: !6735)
!6738 = !DILocation(line: 470, column: 62, scope: !6735)
!6739 = !DILocation(line: 470, column: 69, scope: !6735)
!6740 = !DILocation(line: 468, column: 44, scope: !6735)
!6741 = !DILocation(line: 468, column: 13, scope: !6735)
!6742 = !DILocation(line: 468, column: 20, scope: !6735)
!6743 = !DILocation(line: 468, column: 42, scope: !6735)
!6744 = !DILocation(line: 471, column: 17, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6735, file: !1210, line: 471, column: 17)
!6746 = !DILocation(line: 471, column: 24, scope: !6745)
!6747 = !DILocation(line: 471, column: 31, scope: !6745)
!6748 = !DILocation(line: 471, column: 17, scope: !6735)
!6749 = !DILocation(line: 472, column: 33, scope: !6745)
!6750 = !DILocation(line: 472, column: 40, scope: !6745)
!6751 = !DILocation(line: 472, column: 17, scope: !6745)
!6752 = !DILocation(line: 472, column: 24, scope: !6745)
!6753 = !DILocation(line: 472, column: 31, scope: !6745)
!6754 = !DILocation(line: 473, column: 18, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6735, file: !1210, line: 473, column: 17)
!6756 = !DILocation(line: 473, column: 25, scope: !6755)
!6757 = !DILocation(line: 473, column: 17, scope: !6735)
!6758 = !DILocation(line: 474, column: 41, scope: !6755)
!6759 = !DILocation(line: 474, column: 48, scope: !6755)
!6760 = !DILocation(line: 474, column: 17, scope: !6755)
!6761 = !DILocation(line: 474, column: 24, scope: !6755)
!6762 = !DILocation(line: 474, column: 39, scope: !6755)
!6763 = !DILocation(line: 475, column: 18, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6735, file: !1210, line: 475, column: 17)
!6765 = !DILocation(line: 475, column: 25, scope: !6764)
!6766 = !DILocation(line: 475, column: 17, scope: !6735)
!6767 = !DILocation(line: 476, column: 35, scope: !6764)
!6768 = !DILocation(line: 476, column: 42, scope: !6764)
!6769 = !DILocation(line: 476, column: 17, scope: !6764)
!6770 = !DILocation(line: 476, column: 24, scope: !6764)
!6771 = !DILocation(line: 476, column: 33, scope: !6764)
!6772 = !DILocation(line: 477, column: 18, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6735, file: !1210, line: 477, column: 17)
!6774 = !DILocation(line: 477, column: 25, scope: !6773)
!6775 = !DILocation(line: 477, column: 17, scope: !6735)
!6776 = !DILocation(line: 478, column: 38, scope: !6773)
!6777 = !DILocation(line: 478, column: 45, scope: !6773)
!6778 = !DILocation(line: 478, column: 17, scope: !6773)
!6779 = !DILocation(line: 478, column: 24, scope: !6773)
!6780 = !DILocation(line: 478, column: 36, scope: !6773)
!6781 = !DILocation(line: 479, column: 9, scope: !6735)
!6782 = !DILocation(line: 481, column: 39, scope: !6717)
!6783 = !DILocation(line: 481, column: 45, scope: !6717)
!6784 = !DILocation(line: 481, column: 15, scope: !6717)
!6785 = !DILocation(line: 481, column: 13, scope: !6717)
!6786 = !DILocation(line: 482, column: 12, scope: !6787)
!6787 = distinct !DILexicalBlock(scope: !6717, file: !1210, line: 482, column: 12)
!6788 = !DILocation(line: 482, column: 17, scope: !6787)
!6789 = !DILocation(line: 482, column: 20, scope: !6790)
!6790 = !DILexicalBlockFile(scope: !6787, file: !1210, discriminator: 1)
!6791 = !DILocation(line: 482, column: 29, scope: !6790)
!6792 = !DILocation(line: 482, column: 12, scope: !6790)
!6793 = !DILocation(line: 483, column: 77, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6787, file: !1210, line: 482, column: 35)
!6795 = !DILocation(line: 483, column: 85, scope: !6794)
!6796 = !DILocation(line: 483, column: 90, scope: !6794)
!6797 = !DILocation(line: 483, column: 97, scope: !6794)
!6798 = !DILocation(line: 483, column: 107, scope: !6794)
!6799 = !DILocation(line: 483, column: 88, scope: !6794)
!6800 = !DILocation(line: 483, column: 13, scope: !6794)
!6801 = !DILocation(line: 483, column: 20, scope: !6794)
!6802 = !DILocation(line: 483, column: 30, scope: !6794)
!6803 = !DILocation(line: 483, column: 43, scope: !6794)
!6804 = !DILocation(line: 484, column: 63, scope: !6794)
!6805 = !DILocation(line: 484, column: 68, scope: !6794)
!6806 = !DILocation(line: 484, column: 75, scope: !6794)
!6807 = !DILocation(line: 484, column: 29, scope: !6794)
!6808 = !DILocation(line: 485, column: 20, scope: !6794)
!6809 = !DILocation(line: 486, column: 20, scope: !6794)
!6810 = !DILocation(line: 486, column: 27, scope: !6794)
!6811 = !DILocation(line: 486, column: 37, scope: !6794)
!6812 = !DILocation(line: 486, column: 56, scope: !6794)
!6813 = !DILocation(line: 485, column: 13, scope: !6794)
!6814 = !DILocation(line: 487, column: 46, scope: !6794)
!6815 = !DILocation(line: 487, column: 51, scope: !6794)
!6816 = !DILocation(line: 487, column: 28, scope: !6794)
!6817 = !DILocation(line: 487, column: 25, scope: !6794)
!6818 = !DILocation(line: 488, column: 49, scope: !6794)
!6819 = !DILocation(line: 488, column: 54, scope: !6794)
!6820 = !DILocation(line: 488, column: 31, scope: !6794)
!6821 = !DILocation(line: 488, column: 28, scope: !6794)
!6822 = !DILocation(line: 489, column: 9, scope: !6794)
!6823 = !DILocation(line: 491, column: 14, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6717, file: !1210, line: 491, column: 13)
!6825 = !DILocation(line: 491, column: 21, scope: !6824)
!6826 = !DILocation(line: 491, column: 27, scope: !6824)
!6827 = !DILocation(line: 491, column: 39, scope: !6824)
!6828 = !DILocation(line: 491, column: 42, scope: !6829)
!6829 = !DILexicalBlockFile(scope: !6824, file: !1210, discriminator: 1)
!6830 = !DILocation(line: 491, column: 52, scope: !6829)
!6831 = !DILocation(line: 492, column: 15, scope: !6824)
!6832 = !DILocation(line: 492, column: 22, scope: !6824)
!6833 = !DILocation(line: 492, column: 29, scope: !6824)
!6834 = !DILocation(line: 491, column: 13, scope: !6835)
!6835 = !DILexicalBlockFile(scope: !6717, file: !1210, discriminator: 2)
!6836 = !DILocation(line: 493, column: 53, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6824, file: !1210, line: 492, column: 43)
!6838 = !DILocation(line: 493, column: 60, scope: !6837)
!6839 = !DILocation(line: 493, column: 70, scope: !6837)
!6840 = !DILocation(line: 493, column: 85, scope: !6837)
!6841 = !DILocation(line: 493, column: 92, scope: !6837)
!6842 = !DILocation(line: 493, column: 83, scope: !6837)
!6843 = !DILocation(line: 493, column: 50, scope: !6837)
!6844 = !DILocation(line: 493, column: 46, scope: !6837)
!6845 = !DILocation(line: 493, column: 46, scope: !6846)
!6846 = !DILexicalBlockFile(scope: !6837, file: !1210, discriminator: 1)
!6847 = !DILocation(line: 493, column: 113, scope: !6848)
!6848 = !DILexicalBlockFile(scope: !6837, file: !1210, discriminator: 2)
!6849 = !DILocation(line: 493, column: 120, scope: !6848)
!6850 = !DILocation(line: 493, column: 130, scope: !6848)
!6851 = !DILocation(line: 493, column: 145, scope: !6848)
!6852 = !DILocation(line: 493, column: 152, scope: !6848)
!6853 = !DILocation(line: 493, column: 143, scope: !6848)
!6854 = !DILocation(line: 493, column: 46, scope: !6848)
!6855 = !DILocation(line: 493, column: 46, scope: !6856)
!6856 = !DILexicalBlockFile(scope: !6837, file: !1210, discriminator: 3)
!6857 = !DILocation(line: 493, column: 13, scope: !6856)
!6858 = !DILocation(line: 493, column: 20, scope: !6856)
!6859 = !DILocation(line: 493, column: 30, scope: !6856)
!6860 = !DILocation(line: 493, column: 43, scope: !6856)
!6861 = !DILocation(line: 494, column: 23, scope: !6837)
!6862 = !DILocation(line: 495, column: 9, scope: !6837)
!6863 = !DILocation(line: 497, column: 13, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6717, file: !1210, line: 497, column: 13)
!6865 = !DILocation(line: 497, column: 20, scope: !6864)
!6866 = !DILocation(line: 497, column: 30, scope: !6864)
!6867 = !DILocation(line: 497, column: 43, scope: !6864)
!6868 = !DILocation(line: 497, column: 47, scope: !6864)
!6869 = !DILocation(line: 497, column: 50, scope: !6870)
!6870 = !DILexicalBlockFile(scope: !6864, file: !1210, discriminator: 1)
!6871 = !DILocation(line: 497, column: 60, scope: !6870)
!6872 = !DILocation(line: 498, column: 15, scope: !6864)
!6873 = !DILocation(line: 498, column: 22, scope: !6864)
!6874 = !DILocation(line: 498, column: 29, scope: !6864)
!6875 = !DILocation(line: 497, column: 13, scope: !6835)
!6876 = !DILocation(line: 499, column: 16, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6878, file: !1210, line: 499, column: 16)
!6878 = distinct !DILexicalBlock(scope: !6864, file: !1210, line: 498, column: 43)
!6879 = !DILocation(line: 499, column: 23, scope: !6877)
!6880 = !DILocation(line: 499, column: 37, scope: !6877)
!6881 = !DILocation(line: 499, column: 44, scope: !6877)
!6882 = !DILocation(line: 499, column: 54, scope: !6877)
!6883 = !DILocation(line: 499, column: 34, scope: !6877)
!6884 = !DILocation(line: 499, column: 16, scope: !6878)
!6885 = !DILocation(line: 500, column: 27, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6877, file: !1210, line: 499, column: 67)
!6887 = !DILocation(line: 501, column: 50, scope: !6886)
!6888 = !DILocation(line: 501, column: 57, scope: !6886)
!6889 = !DILocation(line: 501, column: 17, scope: !6886)
!6890 = !DILocation(line: 501, column: 24, scope: !6886)
!6891 = !DILocation(line: 501, column: 34, scope: !6886)
!6892 = !DILocation(line: 501, column: 47, scope: !6886)
!6893 = !DILocation(line: 502, column: 24, scope: !6886)
!6894 = !DILocation(line: 503, column: 24, scope: !6886)
!6895 = !DILocation(line: 503, column: 31, scope: !6886)
!6896 = !DILocation(line: 503, column: 41, scope: !6886)
!6897 = !DILocation(line: 502, column: 17, scope: !6886)
!6898 = !DILocation(line: 504, column: 13, scope: !6886)
!6899 = !DILocation(line: 505, column: 33, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6877, file: !1210, line: 504, column: 20)
!6901 = !DILocation(line: 505, column: 40, scope: !6900)
!6902 = !DILocation(line: 505, column: 55, scope: !6900)
!6903 = !DILocation(line: 505, column: 62, scope: !6900)
!6904 = !DILocation(line: 505, column: 80, scope: !6900)
!6905 = !DILocation(line: 505, column: 87, scope: !6900)
!6906 = !DILocation(line: 505, column: 97, scope: !6900)
!6907 = !DILocation(line: 506, column: 33, scope: !6900)
!6908 = !DILocation(line: 506, column: 40, scope: !6900)
!6909 = !DILocation(line: 506, column: 53, scope: !6900)
!6910 = !DILocation(line: 506, column: 60, scope: !6900)
!6911 = !DILocation(line: 506, column: 70, scope: !6900)
!6912 = !DILocation(line: 506, column: 51, scope: !6900)
!6913 = !DILocation(line: 506, column: 84, scope: !6900)
!6914 = !DILocation(line: 506, column: 91, scope: !6900)
!6915 = !DILocation(line: 506, column: 101, scope: !6900)
!6916 = !DILocation(line: 506, column: 108, scope: !6900)
!6917 = !DILocation(line: 505, column: 17, scope: !6900)
!6918 = !DILocation(line: 507, column: 20, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6900, file: !1210, line: 507, column: 20)
!6920 = !DILocation(line: 507, column: 27, scope: !6919)
!6921 = !DILocation(line: 507, column: 40, scope: !6919)
!6922 = !DILocation(line: 507, column: 44, scope: !6919)
!6923 = !DILocation(line: 507, column: 47, scope: !6924)
!6924 = !DILexicalBlockFile(scope: !6919, file: !1210, discriminator: 1)
!6925 = !DILocation(line: 507, column: 54, scope: !6924)
!6926 = !DILocation(line: 507, column: 20, scope: !6924)
!6927 = !DILocalVariable(name: "diff_ts", scope: !6928, file: !1210, line: 508, type: !941)
!6928 = distinct !DILexicalBlock(scope: !6919, file: !1210, line: 507, column: 67)
!6929 = !DILocation(line: 508, column: 29, scope: !6928)
!6930 = !DILocation(line: 508, column: 52, scope: !6928)
!6931 = !DILocation(line: 508, column: 59, scope: !6928)
!6932 = !DILocation(line: 508, column: 69, scope: !6928)
!6933 = !DILocation(line: 509, column: 64, scope: !6928)
!6934 = !DILocation(line: 509, column: 68, scope: !6928)
!6935 = !DILocation(line: 509, column: 75, scope: !6928)
!6936 = !DILocation(line: 510, column: 52, scope: !6928)
!6937 = !DILocation(line: 510, column: 59, scope: !6928)
!6938 = !DILocation(line: 508, column: 39, scope: !6928)
!6939 = !DILocation(line: 511, column: 24, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6928, file: !1210, line: 511, column: 24)
!6941 = !DILocation(line: 511, column: 31, scope: !6940)
!6942 = !DILocation(line: 511, column: 34, scope: !6940)
!6943 = !DILocation(line: 511, column: 24, scope: !6928)
!6944 = !DILocation(line: 512, column: 39, scope: !6940)
!6945 = !DILocation(line: 512, column: 25, scope: !6940)
!6946 = !DILocation(line: 512, column: 32, scope: !6940)
!6947 = !DILocation(line: 512, column: 36, scope: !6940)
!6948 = !DILocation(line: 515, column: 24, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6928, file: !1210, line: 515, column: 24)
!6950 = !DILocation(line: 515, column: 31, scope: !6949)
!6951 = !DILocation(line: 515, column: 38, scope: !6949)
!6952 = !DILocation(line: 515, column: 24, scope: !6928)
!6953 = !DILocation(line: 516, column: 43, scope: !6949)
!6954 = !DILocation(line: 516, column: 25, scope: !6949)
!6955 = !DILocation(line: 516, column: 32, scope: !6949)
!6956 = !DILocation(line: 516, column: 40, scope: !6949)
!6957 = !DILocation(line: 519, column: 24, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !6928, file: !1210, line: 519, column: 24)
!6959 = !DILocation(line: 519, column: 31, scope: !6958)
!6960 = !DILocation(line: 519, column: 38, scope: !6958)
!6961 = !DILocation(line: 519, column: 24, scope: !6928)
!6962 = !DILocation(line: 520, column: 43, scope: !6958)
!6963 = !DILocation(line: 520, column: 25, scope: !6958)
!6964 = !DILocation(line: 520, column: 32, scope: !6958)
!6965 = !DILocation(line: 520, column: 40, scope: !6958)
!6966 = !DILocation(line: 521, column: 25, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6928, file: !1210, line: 521, column: 25)
!6968 = !DILocation(line: 521, column: 32, scope: !6967)
!6969 = !DILocation(line: 521, column: 48, scope: !6967)
!6970 = !DILocation(line: 521, column: 45, scope: !6967)
!6971 = !DILocation(line: 521, column: 25, scope: !6928)
!6972 = !DILocation(line: 522, column: 48, scope: !6967)
!6973 = !DILocation(line: 522, column: 25, scope: !6967)
!6974 = !DILocation(line: 522, column: 32, scope: !6967)
!6975 = !DILocation(line: 522, column: 45, scope: !6967)
!6976 = !DILocation(line: 523, column: 17, scope: !6928)
!6977 = !DILocation(line: 524, column: 28, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6919, file: !1210, line: 523, column: 24)
!6979 = !DILocation(line: 524, column: 21, scope: !6978)
!6980 = !DILocation(line: 526, column: 24, scope: !6900)
!6981 = !DILocation(line: 527, column: 24, scope: !6900)
!6982 = !DILocation(line: 527, column: 31, scope: !6900)
!6983 = !DILocation(line: 527, column: 41, scope: !6900)
!6984 = !DILocation(line: 527, column: 55, scope: !6900)
!6985 = !DILocation(line: 527, column: 62, scope: !6900)
!6986 = !DILocation(line: 526, column: 17, scope: !6900)
!6987 = !DILocation(line: 528, column: 38, scope: !6900)
!6988 = !DILocation(line: 528, column: 45, scope: !6900)
!6989 = !DILocation(line: 528, column: 55, scope: !6900)
!6990 = !DILocation(line: 528, column: 17, scope: !6900)
!6991 = !DILocation(line: 528, column: 24, scope: !6900)
!6992 = !DILocation(line: 528, column: 35, scope: !6900)
!6993 = !DILocation(line: 529, column: 17, scope: !6900)
!6994 = !DILocation(line: 529, column: 24, scope: !6900)
!6995 = !DILocation(line: 529, column: 34, scope: !6900)
!6996 = !DILocation(line: 529, column: 47, scope: !6900)
!6997 = !DILocation(line: 531, column: 9, scope: !6878)
!6998 = !DILocation(line: 533, column: 13, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !6717, file: !1210, line: 533, column: 13)
!7000 = !DILocation(line: 533, column: 29, scope: !6999)
!7001 = !DILocation(line: 533, column: 33, scope: !6999)
!7002 = !DILocation(line: 533, column: 36, scope: !7003)
!7003 = !DILexicalBlockFile(scope: !6999, file: !1210, discriminator: 1)
!7004 = !DILocation(line: 533, column: 55, scope: !7003)
!7005 = !DILocation(line: 533, column: 62, scope: !7003)
!7006 = !DILocation(line: 533, column: 52, scope: !7003)
!7007 = !DILocation(line: 533, column: 73, scope: !7003)
!7008 = !DILocation(line: 533, column: 76, scope: !7009)
!7009 = !DILexicalBlockFile(scope: !6999, file: !1210, discriminator: 2)
!7010 = !DILocation(line: 533, column: 86, scope: !7009)
!7011 = !DILocation(line: 534, column: 15, scope: !6999)
!7012 = !DILocation(line: 534, column: 22, scope: !6999)
!7013 = !DILocation(line: 534, column: 29, scope: !6999)
!7014 = !DILocation(line: 533, column: 13, scope: !7015)
!7015 = !DILexicalBlockFile(scope: !6717, file: !1210, discriminator: 3)
!7016 = !DILocation(line: 535, column: 17, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !7018, file: !1210, line: 535, column: 17)
!7018 = distinct !DILexicalBlock(scope: !6999, file: !1210, line: 534, column: 43)
!7019 = !DILocation(line: 535, column: 36, scope: !7017)
!7020 = !DILocation(line: 535, column: 43, scope: !7017)
!7021 = !DILocation(line: 535, column: 33, scope: !7017)
!7022 = !DILocation(line: 535, column: 17, scope: !7018)
!7023 = !DILocation(line: 536, column: 27, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !7017, file: !1210, line: 535, column: 55)
!7025 = !DILocation(line: 537, column: 13, scope: !7024)
!7026 = !DILocation(line: 538, column: 20, scope: !7027)
!7027 = distinct !DILexicalBlock(scope: !7028, file: !1210, line: 538, column: 20)
!7028 = distinct !DILexicalBlock(scope: !7017, file: !1210, line: 537, column: 20)
!7029 = !DILocation(line: 538, column: 27, scope: !7027)
!7030 = !DILocation(line: 538, column: 40, scope: !7027)
!7031 = !DILocation(line: 538, column: 44, scope: !7027)
!7032 = !DILocation(line: 538, column: 47, scope: !7033)
!7033 = !DILexicalBlockFile(scope: !7027, file: !1210, discriminator: 1)
!7034 = !DILocation(line: 538, column: 54, scope: !7033)
!7035 = !DILocation(line: 538, column: 20, scope: !7033)
!7036 = !DILocalVariable(name: "diff_ts", scope: !7037, file: !1210, line: 539, type: !941)
!7037 = distinct !DILexicalBlock(scope: !7027, file: !1210, line: 538, column: 67)
!7038 = !DILocation(line: 539, column: 29, scope: !7037)
!7039 = !DILocation(line: 539, column: 52, scope: !7037)
!7040 = !DILocation(line: 539, column: 59, scope: !7037)
!7041 = !DILocation(line: 539, column: 72, scope: !7037)
!7042 = !DILocation(line: 539, column: 70, scope: !7037)
!7043 = !DILocation(line: 540, column: 64, scope: !7037)
!7044 = !DILocation(line: 540, column: 68, scope: !7037)
!7045 = !DILocation(line: 540, column: 75, scope: !7037)
!7046 = !DILocation(line: 541, column: 52, scope: !7037)
!7047 = !DILocation(line: 541, column: 59, scope: !7037)
!7048 = !DILocation(line: 539, column: 39, scope: !7037)
!7049 = !DILocation(line: 542, column: 43, scope: !7037)
!7050 = !DILocation(line: 542, column: 21, scope: !7037)
!7051 = !DILocation(line: 542, column: 28, scope: !7037)
!7052 = !DILocation(line: 542, column: 41, scope: !7037)
!7053 = !DILocation(line: 543, column: 17, scope: !7037)
!7054 = !DILocation(line: 544, column: 28, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7027, file: !1210, line: 543, column: 24)
!7056 = !DILocation(line: 544, column: 21, scope: !7055)
!7057 = !DILocation(line: 546, column: 24, scope: !7028)
!7058 = !DILocation(line: 547, column: 29, scope: !7028)
!7059 = !DILocation(line: 547, column: 46, scope: !7028)
!7060 = !DILocation(line: 547, column: 53, scope: !7028)
!7061 = !DILocation(line: 546, column: 17, scope: !7028)
!7062 = !DILocation(line: 548, column: 38, scope: !7028)
!7063 = !DILocation(line: 548, column: 17, scope: !7028)
!7064 = !DILocation(line: 548, column: 24, scope: !7028)
!7065 = !DILocation(line: 548, column: 35, scope: !7028)
!7066 = !DILocation(line: 550, column: 9, scope: !7018)
!7067 = !DILocation(line: 552, column: 14, scope: !7068)
!7068 = distinct !DILexicalBlock(scope: !6717, file: !1210, line: 552, column: 13)
!7069 = !DILocation(line: 552, column: 21, scope: !7068)
!7070 = !DILocation(line: 552, column: 28, scope: !7068)
!7071 = !DILocation(line: 552, column: 41, scope: !7068)
!7072 = !DILocation(line: 552, column: 44, scope: !7073)
!7073 = !DILexicalBlockFile(scope: !7068, file: !1210, discriminator: 1)
!7074 = !DILocation(line: 552, column: 13, scope: !7073)
!7075 = !DILocalVariable(name: "fside", scope: !7076, file: !1210, line: 553, type: !1149)
!7076 = distinct !DILexicalBlock(scope: !7068, file: !1210, line: 552, column: 55)
!7077 = !DILocation(line: 553, column: 30, scope: !7076)
!7078 = !DILocation(line: 553, column: 61, scope: !7076)
!7079 = !DILocation(line: 553, column: 38, scope: !7076)
!7080 = !DILocation(line: 554, column: 17, scope: !7081)
!7081 = distinct !DILexicalBlock(scope: !7076, file: !1210, line: 554, column: 17)
!7082 = !DILocation(line: 554, column: 17, scope: !7076)
!7083 = !DILocation(line: 555, column: 65, scope: !7084)
!7084 = distinct !DILexicalBlock(scope: !7081, file: !1210, line: 554, column: 24)
!7085 = !DILocation(line: 555, column: 72, scope: !7084)
!7086 = !DILocation(line: 555, column: 82, scope: !7084)
!7087 = !DILocation(line: 555, column: 44, scope: !7084)
!7088 = !DILocation(line: 555, column: 51, scope: !7084)
!7089 = !DILocation(line: 555, column: 59, scope: !7084)
!7090 = !DILocation(line: 555, column: 62, scope: !7084)
!7091 = !DILocation(line: 556, column: 69, scope: !7084)
!7092 = !DILocation(line: 556, column: 44, scope: !7084)
!7093 = !DILocation(line: 556, column: 51, scope: !7084)
!7094 = !DILocation(line: 556, column: 56, scope: !7084)
!7095 = !DILocation(line: 556, column: 63, scope: !7084)
!7096 = !DILocation(line: 556, column: 66, scope: !7084)
!7097 = !DILocation(line: 557, column: 17, scope: !7084)
!7098 = distinct !{!7098, !7097}
!7099 = !DILocation(line: 557, column: 58, scope: !7100)
!7100 = !DILexicalBlockFile(scope: !7101, file: !1210, discriminator: 1)
!7101 = distinct !DILexicalBlock(scope: !7084, file: !1210, line: 557, column: 20)
!7102 = !DILocation(line: 557, column: 34, scope: !7100)
!7103 = !DILocation(line: 557, column: 41, scope: !7100)
!7104 = !DILocation(line: 557, column: 46, scope: !7100)
!7105 = !DILocation(line: 557, column: 22, scope: !7100)
!7106 = !DILocation(line: 557, column: 55, scope: !7100)
!7107 = !DILocation(line: 557, column: 72, scope: !7100)
!7108 = !DILocation(line: 558, column: 17, scope: !7084)
!7109 = distinct !{!7109, !7108}
!7110 = !DILocation(line: 558, column: 58, scope: !7111)
!7111 = !DILexicalBlockFile(scope: !7112, file: !1210, discriminator: 1)
!7112 = distinct !DILexicalBlock(scope: !7084, file: !1210, line: 558, column: 20)
!7113 = !DILocation(line: 558, column: 34, scope: !7111)
!7114 = !DILocation(line: 558, column: 41, scope: !7111)
!7115 = !DILocation(line: 558, column: 46, scope: !7111)
!7116 = !DILocation(line: 558, column: 22, scope: !7111)
!7117 = !DILocation(line: 558, column: 55, scope: !7111)
!7118 = !DILocation(line: 558, column: 75, scope: !7111)
!7119 = !DILocation(line: 559, column: 17, scope: !7084)
!7120 = !DILocation(line: 559, column: 24, scope: !7084)
!7121 = !DILocation(line: 559, column: 34, scope: !7084)
!7122 = !DILocation(line: 559, column: 47, scope: !7084)
!7123 = !DILocation(line: 560, column: 13, scope: !7084)
!7124 = !DILocation(line: 561, column: 9, scope: !7076)
!7125 = !DILocation(line: 562, column: 5, scope: !6717)
!7126 = !DILocation(line: 564, column: 9, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !6496, file: !1210, line: 564, column: 9)
!7128 = !DILocation(line: 564, column: 16, scope: !7127)
!7129 = !DILocation(line: 564, column: 23, scope: !7127)
!7130 = !DILocation(line: 564, column: 28, scope: !7127)
!7131 = !DILocation(line: 564, column: 50, scope: !7127)
!7132 = !DILocation(line: 565, column: 10, scope: !7127)
!7133 = !DILocation(line: 565, column: 16, scope: !7127)
!7134 = !DILocation(line: 565, column: 44, scope: !7127)
!7135 = !DILocation(line: 566, column: 9, scope: !7127)
!7136 = !DILocation(line: 566, column: 13, scope: !7127)
!7137 = !DILocation(line: 566, column: 18, scope: !7127)
!7138 = !DILocation(line: 566, column: 21, scope: !7139)
!7139 = !DILexicalBlockFile(scope: !7127, file: !1210, discriminator: 1)
!7140 = !DILocation(line: 566, column: 28, scope: !7139)
!7141 = !DILocation(line: 566, column: 33, scope: !7139)
!7142 = !DILocation(line: 566, column: 25, scope: !7139)
!7143 = !DILocation(line: 566, column: 38, scope: !7139)
!7144 = !DILocation(line: 566, column: 43, scope: !7145)
!7145 = !DILexicalBlockFile(scope: !7127, file: !1210, discriminator: 2)
!7146 = !DILocation(line: 566, column: 50, scope: !7145)
!7147 = !DILocation(line: 566, column: 57, scope: !7145)
!7148 = !DILocation(line: 566, column: 70, scope: !7145)
!7149 = !DILocation(line: 564, column: 9, scope: !6574)
!7150 = !DILocation(line: 567, column: 16, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7127, file: !1210, line: 566, column: 83)
!7152 = !DILocation(line: 567, column: 9, scope: !7151)
!7153 = !DILocation(line: 568, column: 9, scope: !7151)
!7154 = !DILocation(line: 568, column: 15, scope: !7151)
!7155 = !DILocation(line: 568, column: 43, scope: !7151)
!7156 = !DILocation(line: 569, column: 5, scope: !7151)
!7157 = !DILocation(line: 571, column: 10, scope: !7158)
!7158 = distinct !DILexicalBlock(scope: !6496, file: !1210, line: 571, column: 9)
!7159 = !DILocation(line: 571, column: 9, scope: !6496)
!7160 = !DILocation(line: 572, column: 24, scope: !7158)
!7161 = !DILocation(line: 572, column: 9, scope: !7158)
!7162 = !DILocation(line: 574, column: 9, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !6496, file: !1210, line: 574, column: 9)
!7164 = !DILocation(line: 574, column: 13, scope: !7163)
!7165 = !DILocation(line: 574, column: 18, scope: !7163)
!7166 = !DILocation(line: 574, column: 21, scope: !7167)
!7167 = !DILexicalBlockFile(scope: !7163, file: !1210, discriminator: 1)
!7168 = !DILocation(line: 574, column: 28, scope: !7167)
!7169 = !DILocation(line: 574, column: 35, scope: !7167)
!7170 = !DILocation(line: 574, column: 40, scope: !7167)
!7171 = !DILocation(line: 574, column: 62, scope: !7167)
!7172 = !DILocation(line: 574, column: 67, scope: !7173)
!7173 = !DILexicalBlockFile(scope: !7163, file: !1210, discriminator: 2)
!7174 = !DILocation(line: 574, column: 74, scope: !7173)
!7175 = !DILocation(line: 574, column: 80, scope: !7173)
!7176 = !DILocation(line: 574, column: 9, scope: !7173)
!7177 = !DILocation(line: 575, column: 15, scope: !7163)
!7178 = !DILocation(line: 575, column: 20, scope: !7163)
!7179 = !DILocation(line: 575, column: 13, scope: !7163)
!7180 = !DILocation(line: 575, column: 9, scope: !7163)
!7181 = !DILocation(line: 578, column: 9, scope: !6504)
!7182 = !DILocation(line: 578, column: 16, scope: !6504)
!7183 = !DILocation(line: 578, column: 26, scope: !6504)
!7184 = !DILocation(line: 578, column: 30, scope: !6504)
!7185 = !DILocation(line: 578, column: 34, scope: !6504)
!7186 = !DILocation(line: 578, column: 37, scope: !6503)
!7187 = !DILocation(line: 578, column: 44, scope: !6503)
!7188 = !DILocation(line: 578, column: 54, scope: !6503)
!7189 = !DILocation(line: 578, column: 58, scope: !6503)
!7190 = !DILocation(line: 578, column: 9, scope: !6503)
!7191 = !DILocation(line: 579, column: 9, scope: !6504)
!7192 = !DILocation(line: 579, column: 16, scope: !6504)
!7193 = !DILocation(line: 579, column: 46, scope: !6504)
!7194 = !DILocation(line: 579, column: 53, scope: !6504)
!7195 = !DILocation(line: 579, column: 76, scope: !6504)
!7196 = !DILocation(line: 579, column: 77, scope: !6504)
!7197 = !DILocation(line: 579, column: 84, scope: !6504)
!7198 = !DILocation(line: 579, column: 37, scope: !6504)
!7199 = !DILocation(line: 579, column: 28, scope: !6504)
!7200 = !DILocation(line: 579, column: 28, scope: !6503)
!7201 = !DILocation(line: 161, column: 20, scope: !6498, inlinedAt: !6502)
!7202 = !DILocation(line: 161, column: 24, scope: !6498, inlinedAt: !6502)
!7203 = !DILocation(line: 161, column: 31, scope: !6498, inlinedAt: !6502)
!7204 = !DILocation(line: 162, column: 12, scope: !6498, inlinedAt: !6502)
!7205 = !DILocation(line: 162, column: 5, scope: !6498, inlinedAt: !6502)
!7206 = !DILocation(line: 579, column: 28, scope: !7207)
!7207 = !DILexicalBlockFile(scope: !6504, file: !1210, discriminator: 2)
!7208 = !DILocation(line: 584, column: 9, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !6496, file: !1210, line: 584, column: 9)
!7210 = !DILocation(line: 584, column: 16, scope: !7209)
!7211 = !DILocation(line: 584, column: 26, scope: !7209)
!7212 = !DILocation(line: 584, column: 35, scope: !7209)
!7213 = !DILocation(line: 584, column: 39, scope: !7214)
!7214 = !DILexicalBlockFile(scope: !7209, file: !1210, discriminator: 1)
!7215 = !DILocation(line: 584, column: 9, scope: !7214)
!7216 = !DILocation(line: 585, column: 13, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7218, file: !1210, line: 585, column: 13)
!7218 = distinct !DILexicalBlock(scope: !7209, file: !1210, line: 584, column: 57)
!7219 = !DILocation(line: 585, column: 17, scope: !7217)
!7220 = !DILocation(line: 585, column: 13, scope: !7218)
!7221 = !DILocalVariable(name: "nb_errors_max", scope: !7222, file: !1210, line: 588, type: !939)
!7222 = distinct !DILexicalBlock(scope: !7217, file: !1210, line: 585, column: 22)
!7223 = !DILocation(line: 588, column: 17, scope: !7222)
!7224 = !DILocation(line: 588, column: 44, scope: !7222)
!7225 = !DILocation(line: 588, column: 51, scope: !7222)
!7226 = !DILocation(line: 588, column: 70, scope: !7222)
!7227 = !DILocation(line: 588, column: 39, scope: !7222)
!7228 = !DILocation(line: 589, column: 33, scope: !7222)
!7229 = !DILocation(line: 589, column: 40, scope: !7222)
!7230 = !DILocation(line: 588, column: 39, scope: !7231)
!7231 = !DILexicalBlockFile(scope: !7222, file: !1210, discriminator: 1)
!7232 = !DILocation(line: 588, column: 39, scope: !7233)
!7233 = !DILexicalBlockFile(scope: !7222, file: !1210, discriminator: 2)
!7234 = !DILocation(line: 588, column: 39, scope: !7235)
!7235 = !DILexicalBlockFile(scope: !7222, file: !1210, discriminator: 3)
!7236 = !DILocation(line: 588, column: 36, scope: !7235)
!7237 = !DILocation(line: 588, column: 17, scope: !7235)
!7238 = !DILocation(line: 591, column: 17, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7222, file: !1210, line: 591, column: 17)
!7240 = !DILocation(line: 591, column: 23, scope: !7239)
!7241 = !DILocation(line: 591, column: 41, scope: !7239)
!7242 = !DILocation(line: 591, column: 47, scope: !7239)
!7243 = !DILocation(line: 591, column: 44, scope: !7239)
!7244 = !DILocation(line: 591, column: 17, scope: !7222)
!7245 = !DILocation(line: 592, column: 24, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7239, file: !1210, line: 591, column: 62)
!7247 = !DILocation(line: 592, column: 17, scope: !7246)
!7248 = !DILocation(line: 594, column: 17, scope: !7246)
!7249 = !DILocation(line: 594, column: 23, scope: !7246)
!7250 = !DILocation(line: 594, column: 37, scope: !7246)
!7251 = !DILocation(line: 595, column: 21, scope: !7246)
!7252 = !DILocation(line: 596, column: 13, scope: !7246)
!7253 = !DILocation(line: 597, column: 9, scope: !7222)
!7254 = !DILocation(line: 598, column: 13, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7217, file: !1210, line: 597, column: 16)
!7256 = !DILocation(line: 598, column: 19, scope: !7255)
!7257 = !DILocation(line: 598, column: 33, scope: !7255)
!7258 = !DILocation(line: 600, column: 5, scope: !7218)
!7259 = !DILocation(line: 602, column: 37, scope: !6496)
!7260 = !DILocation(line: 602, column: 5, scope: !6496)
!7261 = !DILocation(line: 602, column: 11, scope: !6496)
!7262 = !DILocation(line: 602, column: 34, scope: !6496)
!7263 = !DILocation(line: 604, column: 9, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !6496, file: !1210, line: 604, column: 9)
!7265 = !DILocation(line: 604, column: 16, scope: !7264)
!7266 = !DILocation(line: 604, column: 21, scope: !7264)
!7267 = !DILocation(line: 604, column: 13, scope: !7264)
!7268 = !DILocation(line: 604, column: 26, scope: !7264)
!7269 = !DILocation(line: 604, column: 29, scope: !7270)
!7270 = !DILexicalBlockFile(scope: !7264, file: !1210, discriminator: 1)
!7271 = !DILocation(line: 604, column: 33, scope: !7270)
!7272 = !DILocation(line: 604, column: 9, scope: !7270)
!7273 = !DILocation(line: 605, column: 25, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7264, file: !1210, line: 604, column: 38)
!7275 = !DILocation(line: 605, column: 9, scope: !7274)
!7276 = !DILocation(line: 606, column: 5, scope: !7274)
!7277 = !DILocalVariable(name: "consumed", scope: !7278, file: !1210, line: 607, type: !939)
!7278 = distinct !DILexicalBlock(scope: !7264, file: !1210, line: 606, column: 12)
!7279 = !DILocation(line: 607, column: 13, scope: !7278)
!7280 = !DILocation(line: 607, column: 24, scope: !7278)
!7281 = !DILocation(line: 609, column: 22, scope: !7278)
!7282 = !DILocation(line: 609, column: 9, scope: !7278)
!7283 = !DILocation(line: 609, column: 14, scope: !7278)
!7284 = !DILocation(line: 609, column: 19, scope: !7278)
!7285 = !DILocation(line: 610, column: 22, scope: !7278)
!7286 = !DILocation(line: 610, column: 9, scope: !7278)
!7287 = !DILocation(line: 610, column: 14, scope: !7278)
!7288 = !DILocation(line: 610, column: 19, scope: !7278)
!7289 = !DILocation(line: 611, column: 39, scope: !7278)
!7290 = !DILocation(line: 611, column: 9, scope: !7278)
!7291 = !DILocation(line: 611, column: 15, scope: !7278)
!7292 = !DILocation(line: 611, column: 31, scope: !7278)
!7293 = !DILocation(line: 611, column: 36, scope: !7278)
!7294 = !DILocation(line: 612, column: 9, scope: !7278)
!7295 = !DILocation(line: 612, column: 14, scope: !7278)
!7296 = !DILocation(line: 612, column: 18, scope: !7278)
!7297 = !DILocation(line: 613, column: 9, scope: !7278)
!7298 = !DILocation(line: 613, column: 14, scope: !7278)
!7299 = !DILocation(line: 613, column: 18, scope: !7278)
!7300 = !DILocation(line: 614, column: 9, scope: !7278)
!7301 = !DILocation(line: 614, column: 15, scope: !7278)
!7302 = !DILocation(line: 614, column: 31, scope: !7278)
!7303 = !DILocation(line: 614, column: 35, scope: !7278)
!7304 = !DILocation(line: 615, column: 9, scope: !7278)
!7305 = !DILocation(line: 615, column: 15, scope: !7278)
!7306 = !DILocation(line: 615, column: 31, scope: !7278)
!7307 = !DILocation(line: 615, column: 35, scope: !7278)
!7308 = !DILocation(line: 618, column: 9, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !6496, file: !1210, line: 618, column: 9)
!7310 = !DILocation(line: 618, column: 9, scope: !6496)
!7311 = !DILocation(line: 619, column: 9, scope: !7309)
!7312 = distinct !{!7312, !7311}
!7313 = !DILocation(line: 619, column: 20, scope: !7314)
!7314 = !DILexicalBlockFile(scope: !7315, file: !1210, discriminator: 1)
!7315 = distinct !DILexicalBlock(scope: !7316, file: !1210, line: 619, column: 18)
!7316 = distinct !DILexicalBlock(scope: !7309, file: !1210, line: 619, column: 12)
!7317 = !DILocation(line: 619, column: 27, scope: !7314)
!7318 = !DILocation(line: 619, column: 19, scope: !7314)
!7319 = !DILocation(line: 619, column: 18, scope: !7314)
!7320 = !DILocation(line: 619, column: 38, scope: !7321)
!7321 = !DILexicalBlockFile(scope: !7322, file: !1210, discriminator: 2)
!7322 = distinct !DILexicalBlock(scope: !7315, file: !1210, line: 619, column: 36)
!7323 = !DILocation(line: 619, column: 93, scope: !7324)
!7324 = !DILexicalBlockFile(scope: !7321, file: !1210, discriminator: 5)
!7325 = !DILocation(line: 619, column: 93, scope: !7321)
!7326 = !DILocation(line: 619, column: 104, scope: !7327)
!7327 = !DILexicalBlockFile(scope: !7316, file: !1210, discriminator: 3)
!7328 = !DILocation(line: 619, column: 104, scope: !7329)
!7329 = !DILexicalBlockFile(scope: !7316, file: !1210, discriminator: 4)
!7330 = !DILocation(line: 621, column: 12, scope: !6496)
!7331 = !DILocation(line: 621, column: 16, scope: !6496)
!7332 = !DILocation(line: 621, column: 22, scope: !6574)
!7333 = !DILocation(line: 621, column: 12, scope: !6574)
!7334 = !DILocation(line: 621, column: 12, scope: !7335)
!7335 = !DILexicalBlockFile(scope: !6496, file: !1210, discriminator: 2)
!7336 = !DILocation(line: 621, column: 12, scope: !7337)
!7337 = !DILexicalBlockFile(scope: !6496, file: !1210, discriminator: 3)
!7338 = !DILocation(line: 621, column: 5, scope: !7337)
!7339 = !DILocation(line: 622, column: 1, scope: !6496)
!7340 = distinct !DISubprogram(name: "guess_correct_pts", scope: !1210, file: !1210, line: 370, type: !7341, isLocal: true, isDefinition: true, scopeLine: 372, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!7341 = !DISubroutineType(types: !7342)
!7342 = !{!941, !1213, !941, !941}
!7343 = !DILocalVariable(name: "ctx", arg: 1, scope: !7340, file: !1210, line: 370, type: !1213)
!7344 = !DILocation(line: 370, column: 50, scope: !7340)
!7345 = !DILocalVariable(name: "reordered_pts", arg: 2, scope: !7340, file: !1210, line: 371, type: !941)
!7346 = !DILocation(line: 371, column: 42, scope: !7340)
!7347 = !DILocalVariable(name: "dts", arg: 3, scope: !7340, file: !1210, line: 371, type: !941)
!7348 = !DILocation(line: 371, column: 65, scope: !7340)
!7349 = !DILocalVariable(name: "pts", scope: !7340, file: !1210, line: 373, type: !941)
!7350 = !DILocation(line: 373, column: 13, scope: !7340)
!7351 = !DILocation(line: 375, column: 9, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7340, file: !1210, line: 375, column: 9)
!7353 = !DILocation(line: 375, column: 13, scope: !7352)
!7354 = !DILocation(line: 375, column: 9, scope: !7340)
!7355 = !DILocation(line: 376, column: 47, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7352, file: !1210, line: 375, column: 49)
!7357 = !DILocation(line: 376, column: 54, scope: !7356)
!7358 = !DILocation(line: 376, column: 59, scope: !7356)
!7359 = !DILocation(line: 376, column: 51, scope: !7356)
!7360 = !DILocation(line: 376, column: 9, scope: !7356)
!7361 = !DILocation(line: 376, column: 14, scope: !7356)
!7362 = !DILocation(line: 376, column: 44, scope: !7356)
!7363 = !DILocation(line: 377, column: 40, scope: !7356)
!7364 = !DILocation(line: 377, column: 9, scope: !7356)
!7365 = !DILocation(line: 377, column: 14, scope: !7356)
!7366 = !DILocation(line: 377, column: 38, scope: !7356)
!7367 = !DILocation(line: 378, column: 5, scope: !7356)
!7368 = !DILocation(line: 378, column: 16, scope: !7369)
!7369 = !DILexicalBlockFile(scope: !7370, file: !1210, discriminator: 1)
!7370 = distinct !DILexicalBlock(scope: !7352, file: !1210, line: 378, column: 16)
!7371 = !DILocation(line: 378, column: 30, scope: !7369)
!7372 = !DILocation(line: 379, column: 40, scope: !7370)
!7373 = !DILocation(line: 379, column: 9, scope: !7370)
!7374 = !DILocation(line: 379, column: 14, scope: !7370)
!7375 = !DILocation(line: 379, column: 38, scope: !7370)
!7376 = !DILocation(line: 381, column: 9, scope: !7377)
!7377 = distinct !DILexicalBlock(scope: !7340, file: !1210, line: 381, column: 9)
!7378 = !DILocation(line: 381, column: 23, scope: !7377)
!7379 = !DILocation(line: 381, column: 9, scope: !7340)
!7380 = !DILocation(line: 382, column: 47, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7377, file: !1210, line: 381, column: 59)
!7382 = !DILocation(line: 382, column: 64, scope: !7381)
!7383 = !DILocation(line: 382, column: 69, scope: !7381)
!7384 = !DILocation(line: 382, column: 61, scope: !7381)
!7385 = !DILocation(line: 382, column: 9, scope: !7381)
!7386 = !DILocation(line: 382, column: 14, scope: !7381)
!7387 = !DILocation(line: 382, column: 44, scope: !7381)
!7388 = !DILocation(line: 383, column: 40, scope: !7381)
!7389 = !DILocation(line: 383, column: 9, scope: !7381)
!7390 = !DILocation(line: 383, column: 14, scope: !7381)
!7391 = !DILocation(line: 383, column: 38, scope: !7381)
!7392 = !DILocation(line: 384, column: 5, scope: !7381)
!7393 = !DILocation(line: 384, column: 15, scope: !7394)
!7394 = !DILexicalBlockFile(scope: !7395, file: !1210, discriminator: 1)
!7395 = distinct !DILexicalBlock(scope: !7377, file: !1210, line: 384, column: 15)
!7396 = !DILocation(line: 384, column: 19, scope: !7394)
!7397 = !DILocation(line: 385, column: 40, scope: !7395)
!7398 = !DILocation(line: 385, column: 9, scope: !7395)
!7399 = !DILocation(line: 385, column: 14, scope: !7395)
!7400 = !DILocation(line: 385, column: 38, scope: !7395)
!7401 = !DILocation(line: 387, column: 10, scope: !7402)
!7402 = distinct !DILexicalBlock(scope: !7340, file: !1210, line: 387, column: 9)
!7403 = !DILocation(line: 387, column: 15, scope: !7402)
!7404 = !DILocation(line: 387, column: 46, scope: !7402)
!7405 = !DILocation(line: 387, column: 51, scope: !7402)
!7406 = !DILocation(line: 387, column: 44, scope: !7402)
!7407 = !DILocation(line: 387, column: 81, scope: !7402)
!7408 = !DILocation(line: 387, column: 84, scope: !7409)
!7409 = !DILexicalBlockFile(scope: !7402, file: !1210, discriminator: 1)
!7410 = !DILocation(line: 387, column: 88, scope: !7409)
!7411 = !DILocation(line: 388, column: 8, scope: !7402)
!7412 = !DILocation(line: 388, column: 11, scope: !7409)
!7413 = !DILocation(line: 388, column: 25, scope: !7409)
!7414 = !DILocation(line: 387, column: 9, scope: !7415)
!7415 = !DILexicalBlockFile(scope: !7340, file: !1210, discriminator: 2)
!7416 = !DILocation(line: 389, column: 15, scope: !7402)
!7417 = !DILocation(line: 389, column: 13, scope: !7402)
!7418 = !DILocation(line: 389, column: 9, scope: !7402)
!7419 = !DILocation(line: 391, column: 15, scope: !7402)
!7420 = !DILocation(line: 391, column: 13, scope: !7402)
!7421 = !DILocation(line: 393, column: 12, scope: !7340)
!7422 = !DILocation(line: 393, column: 5, scope: !7340)
!7423 = distinct !DISubprogram(name: "unrefcount_frame", scope: !1210, file: !1210, line: 139, type: !7424, isLocal: true, isDefinition: true, scopeLine: 140, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!7424 = !DISubroutineType(types: !7425)
!7425 = !{!939, !1808, !1107}
!7426 = !DILocalVariable(name: "avci", arg: 1, scope: !7423, file: !1210, line: 139, type: !1808)
!7427 = !DILocation(line: 139, column: 46, scope: !7423)
!7428 = !DILocalVariable(name: "frame", arg: 2, scope: !7423, file: !1210, line: 139, type: !1107)
!7429 = !DILocation(line: 139, column: 61, scope: !7423)
!7430 = !DILocalVariable(name: "ret", scope: !7423, file: !1210, line: 141, type: !939)
!7431 = !DILocation(line: 141, column: 9, scope: !7423)
!7432 = !DILocation(line: 144, column: 20, scope: !7423)
!7433 = !DILocation(line: 144, column: 26, scope: !7423)
!7434 = !DILocation(line: 144, column: 5, scope: !7423)
!7435 = !DILocation(line: 145, column: 23, scope: !7423)
!7436 = !DILocation(line: 145, column: 29, scope: !7423)
!7437 = !DILocation(line: 145, column: 38, scope: !7423)
!7438 = !DILocation(line: 145, column: 5, scope: !7423)
!7439 = !DILocation(line: 150, column: 31, scope: !7423)
!7440 = !DILocation(line: 150, column: 38, scope: !7423)
!7441 = !DILocation(line: 150, column: 44, scope: !7423)
!7442 = !DILocation(line: 150, column: 11, scope: !7423)
!7443 = !DILocation(line: 150, column: 9, scope: !7423)
!7444 = !DILocation(line: 151, column: 9, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !7423, file: !1210, line: 151, column: 9)
!7446 = !DILocation(line: 151, column: 13, scope: !7445)
!7447 = !DILocation(line: 151, column: 9, scope: !7423)
!7448 = !DILocation(line: 152, column: 16, scope: !7445)
!7449 = !DILocation(line: 152, column: 9, scope: !7445)
!7450 = !DILocation(line: 154, column: 12, scope: !7423)
!7451 = !DILocation(line: 154, column: 19, scope: !7423)
!7452 = !DILocation(line: 154, column: 5, scope: !7423)
!7453 = !DILocation(line: 154, column: 25, scope: !7423)
!7454 = !DILocation(line: 154, column: 31, scope: !7423)
!7455 = !DILocation(line: 154, column: 40, scope: !7423)
!7456 = !DILocation(line: 155, column: 12, scope: !7423)
!7457 = !DILocation(line: 155, column: 19, scope: !7423)
!7458 = !DILocation(line: 155, column: 5, scope: !7423)
!7459 = !DILocation(line: 155, column: 29, scope: !7423)
!7460 = !DILocation(line: 155, column: 35, scope: !7423)
!7461 = !DILocation(line: 155, column: 44, scope: !7423)
!7462 = !DILocation(line: 156, column: 9, scope: !7463)
!7463 = distinct !DILexicalBlock(scope: !7423, file: !1210, line: 156, column: 9)
!7464 = !DILocation(line: 156, column: 15, scope: !7463)
!7465 = !DILocation(line: 156, column: 24, scope: !7463)
!7466 = !DILocation(line: 156, column: 41, scope: !7463)
!7467 = !DILocation(line: 156, column: 47, scope: !7463)
!7468 = !DILocation(line: 156, column: 56, scope: !7463)
!7469 = !DILocation(line: 156, column: 38, scope: !7463)
!7470 = !DILocation(line: 156, column: 9, scope: !7423)
!7471 = !DILocalVariable(name: "planes", scope: !7472, file: !1210, line: 157, type: !939)
!7472 = distinct !DILexicalBlock(scope: !7463, file: !1210, line: 156, column: 62)
!7473 = !DILocation(line: 157, column: 13, scope: !7472)
!7474 = !DILocation(line: 157, column: 22, scope: !7472)
!7475 = !DILocation(line: 157, column: 28, scope: !7472)
!7476 = !DILocation(line: 157, column: 37, scope: !7472)
!7477 = !DILocalVariable(name: "size", scope: !7472, file: !1210, line: 158, type: !939)
!7478 = !DILocation(line: 158, column: 13, scope: !7472)
!7479 = !DILocation(line: 158, column: 20, scope: !7472)
!7480 = !DILocation(line: 158, column: 27, scope: !7472)
!7481 = !DILocation(line: 160, column: 14, scope: !7482)
!7482 = distinct !DILexicalBlock(scope: !7472, file: !1210, line: 160, column: 13)
!7483 = !DILocation(line: 160, column: 13, scope: !7472)
!7484 = !DILocation(line: 161, column: 28, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7482, file: !1210, line: 160, column: 20)
!7486 = !DILocation(line: 161, column: 13, scope: !7485)
!7487 = !DILocation(line: 162, column: 13, scope: !7485)
!7488 = !DILocation(line: 165, column: 42, scope: !7472)
!7489 = !DILocation(line: 165, column: 32, scope: !7472)
!7490 = !DILocation(line: 165, column: 9, scope: !7472)
!7491 = !DILocation(line: 165, column: 16, scope: !7472)
!7492 = !DILocation(line: 165, column: 30, scope: !7472)
!7493 = !DILocation(line: 166, column: 14, scope: !7494)
!7494 = distinct !DILexicalBlock(scope: !7472, file: !1210, line: 166, column: 13)
!7495 = !DILocation(line: 166, column: 21, scope: !7494)
!7496 = !DILocation(line: 166, column: 13, scope: !7472)
!7497 = !DILocation(line: 167, column: 28, scope: !7498)
!7498 = distinct !DILexicalBlock(scope: !7494, file: !1210, line: 166, column: 36)
!7499 = !DILocation(line: 167, column: 13, scope: !7498)
!7500 = !DILocation(line: 168, column: 13, scope: !7498)
!7501 = !DILocation(line: 170, column: 16, scope: !7472)
!7502 = !DILocation(line: 170, column: 23, scope: !7472)
!7503 = !DILocation(line: 170, column: 9, scope: !7472)
!7504 = !DILocation(line: 170, column: 38, scope: !7472)
!7505 = !DILocation(line: 170, column: 44, scope: !7472)
!7506 = !DILocation(line: 170, column: 53, scope: !7472)
!7507 = !DILocation(line: 171, column: 16, scope: !7472)
!7508 = !DILocation(line: 172, column: 5, scope: !7472)
!7509 = !DILocation(line: 173, column: 32, scope: !7463)
!7510 = !DILocation(line: 173, column: 39, scope: !7463)
!7511 = !DILocation(line: 173, column: 9, scope: !7463)
!7512 = !DILocation(line: 173, column: 16, scope: !7463)
!7513 = !DILocation(line: 173, column: 30, scope: !7463)
!7514 = !DILocation(line: 175, column: 21, scope: !7423)
!7515 = !DILocation(line: 175, column: 27, scope: !7423)
!7516 = !DILocation(line: 175, column: 36, scope: !7423)
!7517 = !DILocation(line: 175, column: 5, scope: !7423)
!7518 = !DILocation(line: 175, column: 12, scope: !7423)
!7519 = !DILocation(line: 175, column: 19, scope: !7423)
!7520 = !DILocation(line: 176, column: 20, scope: !7423)
!7521 = !DILocation(line: 176, column: 26, scope: !7423)
!7522 = !DILocation(line: 176, column: 35, scope: !7423)
!7523 = !DILocation(line: 176, column: 5, scope: !7423)
!7524 = !DILocation(line: 176, column: 12, scope: !7423)
!7525 = !DILocation(line: 176, column: 18, scope: !7423)
!7526 = !DILocation(line: 177, column: 21, scope: !7423)
!7527 = !DILocation(line: 177, column: 27, scope: !7423)
!7528 = !DILocation(line: 177, column: 36, scope: !7423)
!7529 = !DILocation(line: 177, column: 5, scope: !7423)
!7530 = !DILocation(line: 177, column: 12, scope: !7423)
!7531 = !DILocation(line: 177, column: 19, scope: !7423)
!7532 = !DILocation(line: 178, column: 29, scope: !7423)
!7533 = !DILocation(line: 178, column: 35, scope: !7423)
!7534 = !DILocation(line: 178, column: 44, scope: !7423)
!7535 = !DILocation(line: 178, column: 5, scope: !7423)
!7536 = !DILocation(line: 178, column: 12, scope: !7423)
!7537 = !DILocation(line: 178, column: 27, scope: !7423)
!7538 = !DILocation(line: 179, column: 25, scope: !7423)
!7539 = !DILocation(line: 179, column: 31, scope: !7423)
!7540 = !DILocation(line: 179, column: 40, scope: !7423)
!7541 = !DILocation(line: 179, column: 5, scope: !7423)
!7542 = !DILocation(line: 179, column: 12, scope: !7423)
!7543 = !DILocation(line: 179, column: 23, scope: !7423)
!7544 = !DILocation(line: 180, column: 23, scope: !7423)
!7545 = !DILocation(line: 180, column: 29, scope: !7423)
!7546 = !DILocation(line: 180, column: 38, scope: !7423)
!7547 = !DILocation(line: 180, column: 5, scope: !7423)
!7548 = !DILocation(line: 180, column: 12, scope: !7423)
!7549 = !DILocation(line: 180, column: 21, scope: !7423)
!7550 = !DILocation(line: 182, column: 5, scope: !7423)
!7551 = !DILocation(line: 183, column: 1, scope: !7423)
!7552 = distinct !DISubprogram(name: "av_make_q", scope: !981, file: !981, line: 71, type: !7553, isLocal: true, isDefinition: true, scopeLine: 72, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!7553 = !DISubroutineType(types: !7554)
!7554 = !{!980, !939, !939}
!7555 = !DILocalVariable(name: "num", arg: 1, scope: !7552, file: !981, line: 71, type: !939)
!7556 = !DILocation(line: 71, column: 40, scope: !7552)
!7557 = !DILocalVariable(name: "den", arg: 2, scope: !7552, file: !981, line: 71, type: !939)
!7558 = !DILocation(line: 71, column: 49, scope: !7552)
!7559 = !DILocalVariable(name: "r", scope: !7552, file: !981, line: 73, type: !980)
!7560 = !DILocation(line: 73, column: 16, scope: !7552)
!7561 = !DILocation(line: 73, column: 20, scope: !7552)
!7562 = !DILocation(line: 73, column: 22, scope: !7552)
!7563 = !DILocation(line: 73, column: 27, scope: !7552)
!7564 = !DILocation(line: 74, column: 12, scope: !7552)
!7565 = !DILocation(line: 74, column: 5, scope: !7552)
!7566 = distinct !DISubprogram(name: "insert_ts", scope: !1210, file: !1210, line: 953, type: !7567, isLocal: true, isDefinition: true, scopeLine: 954, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!7567 = !DISubroutineType(types: !7568)
!7568 = !{null, !7569, !939}
!7569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3643, size: 64, align: 64)
!7570 = !DILocalVariable(name: "buf", arg: 1, scope: !7566, file: !1210, line: 953, type: !7569)
!7571 = !DILocation(line: 953, column: 33, scope: !7566)
!7572 = !DILocalVariable(name: "ts", arg: 2, scope: !7566, file: !1210, line: 953, type: !939)
!7573 = !DILocation(line: 953, column: 42, scope: !7566)
!7574 = !DILocation(line: 955, column: 9, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !7566, file: !1210, line: 955, column: 9)
!7576 = !DILocation(line: 955, column: 12, scope: !7575)
!7577 = !DILocation(line: 955, column: 9, scope: !7566)
!7578 = !DILocation(line: 956, column: 20, scope: !7579)
!7579 = distinct !DILexicalBlock(scope: !7575, file: !1210, line: 955, column: 19)
!7580 = !DILocation(line: 956, column: 9, scope: !7579)
!7581 = !DILocation(line: 957, column: 5, scope: !7579)
!7582 = !DILocalVariable(name: "h", scope: !7583, file: !1210, line: 958, type: !939)
!7583 = distinct !DILexicalBlock(scope: !7575, file: !1210, line: 957, column: 12)
!7584 = !DILocation(line: 958, column: 13, scope: !7583)
!7585 = !DILocalVariable(name: "m", scope: !7583, file: !1210, line: 958, type: !939)
!7586 = !DILocation(line: 958, column: 16, scope: !7583)
!7587 = !DILocalVariable(name: "s", scope: !7583, file: !1210, line: 958, type: !939)
!7588 = !DILocation(line: 958, column: 19, scope: !7583)
!7589 = !DILocation(line: 960, column: 13, scope: !7583)
!7590 = !DILocation(line: 960, column: 15, scope: !7583)
!7591 = !DILocation(line: 960, column: 11, scope: !7583)
!7592 = !DILocation(line: 960, column: 37, scope: !7583)
!7593 = !DILocation(line: 960, column: 36, scope: !7583)
!7594 = !DILocation(line: 960, column: 27, scope: !7583)
!7595 = !DILocation(line: 961, column: 13, scope: !7583)
!7596 = !DILocation(line: 961, column: 15, scope: !7583)
!7597 = !DILocation(line: 961, column: 11, scope: !7583)
!7598 = !DILocation(line: 961, column: 34, scope: !7583)
!7599 = !DILocation(line: 961, column: 33, scope: !7583)
!7600 = !DILocation(line: 961, column: 26, scope: !7583)
!7601 = !DILocation(line: 962, column: 13, scope: !7583)
!7602 = !DILocation(line: 962, column: 15, scope: !7583)
!7603 = !DILocation(line: 962, column: 11, scope: !7583)
!7604 = !DILocation(line: 962, column: 32, scope: !7583)
!7605 = !DILocation(line: 962, column: 31, scope: !7583)
!7606 = !DILocation(line: 962, column: 25, scope: !7583)
!7607 = !DILocation(line: 963, column: 20, scope: !7583)
!7608 = !DILocation(line: 963, column: 47, scope: !7583)
!7609 = !DILocation(line: 963, column: 50, scope: !7583)
!7610 = !DILocation(line: 963, column: 53, scope: !7583)
!7611 = !DILocation(line: 963, column: 56, scope: !7583)
!7612 = !DILocation(line: 963, column: 9, scope: !7583)
!7613 = !DILocation(line: 965, column: 1, scope: !7566)
!7614 = distinct !DISubprogram(name: "av_bprint_is_complete", scope: !3644, file: !3644, line: 185, type: !7615, isLocal: true, isDefinition: true, scopeLine: 186, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!7615 = !DISubroutineType(types: !7616)
!7616 = !{!939, !7617}
!7617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7618, size: 64, align: 64)
!7618 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3643)
!7619 = !DILocalVariable(name: "buf", arg: 1, scope: !7614, file: !3644, line: 185, type: !7617)
!7620 = !DILocation(line: 185, column: 57, scope: !7614)
!7621 = !DILocation(line: 187, column: 12, scope: !7614)
!7622 = !DILocation(line: 187, column: 17, scope: !7614)
!7623 = !DILocation(line: 187, column: 23, scope: !7614)
!7624 = !DILocation(line: 187, column: 28, scope: !7614)
!7625 = !DILocation(line: 187, column: 21, scope: !7614)
!7626 = !DILocation(line: 187, column: 5, scope: !7614)
!7627 = distinct !DISubprogram(name: "validate_avframe_allocation", scope: !1210, file: !1210, line: 1801, type: !7628, isLocal: true, isDefinition: true, scopeLine: 1802, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1793)
!7628 = !DISubroutineType(types: !7629)
!7629 = !{null, !1213, !1107}
!7630 = !DILocalVariable(name: "avctx", arg: 1, scope: !7627, file: !1210, line: 1801, type: !1213)
!7631 = !DILocation(line: 1801, column: 57, scope: !7627)
!7632 = !DILocalVariable(name: "frame", arg: 2, scope: !7627, file: !1210, line: 1801, type: !1107)
!7633 = !DILocation(line: 1801, column: 73, scope: !7627)
!7634 = !DILocation(line: 1803, column: 9, scope: !7635)
!7635 = distinct !DILexicalBlock(scope: !7627, file: !1210, line: 1803, column: 9)
!7636 = !DILocation(line: 1803, column: 16, scope: !7635)
!7637 = !DILocation(line: 1803, column: 27, scope: !7635)
!7638 = !DILocation(line: 1803, column: 9, scope: !7627)
!7639 = !DILocalVariable(name: "i", scope: !7640, file: !1210, line: 1804, type: !939)
!7640 = distinct !DILexicalBlock(scope: !7635, file: !1210, line: 1803, column: 50)
!7641 = !DILocation(line: 1804, column: 13, scope: !7640)
!7642 = !DILocalVariable(name: "num_planes", scope: !7640, file: !1210, line: 1805, type: !939)
!7643 = !DILocation(line: 1805, column: 13, scope: !7640)
!7644 = !DILocation(line: 1805, column: 50, scope: !7640)
!7645 = !DILocation(line: 1805, column: 57, scope: !7640)
!7646 = !DILocation(line: 1805, column: 26, scope: !7640)
!7647 = !DILocalVariable(name: "desc", scope: !7640, file: !1210, line: 1806, type: !3937)
!7648 = !DILocation(line: 1806, column: 35, scope: !7640)
!7649 = !DILocation(line: 1806, column: 62, scope: !7640)
!7650 = !DILocation(line: 1806, column: 69, scope: !7640)
!7651 = !DILocation(line: 1806, column: 42, scope: !7640)
!7652 = !DILocalVariable(name: "flags", scope: !7640, file: !1210, line: 1807, type: !939)
!7653 = !DILocation(line: 1807, column: 13, scope: !7640)
!7654 = !DILocation(line: 1807, column: 21, scope: !7640)
!7655 = !DILocation(line: 1807, column: 28, scope: !7656)
!7656 = !DILexicalBlockFile(scope: !7640, file: !1210, discriminator: 1)
!7657 = !DILocation(line: 1807, column: 34, scope: !7656)
!7658 = !DILocation(line: 1807, column: 21, scope: !7656)
!7659 = !DILocation(line: 1807, column: 21, scope: !7660)
!7660 = !DILexicalBlockFile(scope: !7640, file: !1210, discriminator: 2)
!7661 = !DILocation(line: 1807, column: 21, scope: !7662)
!7662 = !DILexicalBlockFile(scope: !7640, file: !1210, discriminator: 3)
!7663 = !DILocation(line: 1807, column: 13, scope: !7662)
!7664 = !DILocation(line: 1808, column: 13, scope: !7665)
!7665 = distinct !DILexicalBlock(scope: !7640, file: !1210, line: 1808, column: 13)
!7666 = !DILocation(line: 1808, column: 24, scope: !7665)
!7667 = !DILocation(line: 1808, column: 29, scope: !7665)
!7668 = !DILocation(line: 1808, column: 33, scope: !7669)
!7669 = !DILexicalBlockFile(scope: !7665, file: !1210, discriminator: 1)
!7670 = !DILocation(line: 1808, column: 39, scope: !7669)
!7671 = !DILocation(line: 1808, column: 13, scope: !7669)
!7672 = !DILocation(line: 1809, column: 24, scope: !7665)
!7673 = !DILocation(line: 1809, column: 13, scope: !7665)
!7674 = !DILocation(line: 1810, column: 14, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7640, file: !1210, line: 1810, column: 13)
!7676 = !DILocation(line: 1810, column: 20, scope: !7675)
!7677 = !DILocation(line: 1810, column: 32, scope: !7675)
!7678 = !DILocation(line: 1810, column: 35, scope: !7679)
!7679 = !DILexicalBlockFile(scope: !7675, file: !1210, discriminator: 1)
!7680 = !DILocation(line: 1810, column: 42, scope: !7679)
!7681 = !DILocation(line: 1810, column: 13, scope: !7679)
!7682 = !DILocation(line: 1811, column: 24, scope: !7675)
!7683 = !DILocation(line: 1811, column: 13, scope: !7675)
!7684 = !DILocation(line: 1812, column: 16, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7640, file: !1210, line: 1812, column: 9)
!7686 = !DILocation(line: 1812, column: 14, scope: !7685)
!7687 = !DILocation(line: 1812, column: 21, scope: !7688)
!7688 = !DILexicalBlockFile(scope: !7689, file: !1210, discriminator: 1)
!7689 = distinct !DILexicalBlock(scope: !7685, file: !1210, line: 1812, column: 9)
!7690 = !DILocation(line: 1812, column: 25, scope: !7688)
!7691 = !DILocation(line: 1812, column: 23, scope: !7688)
!7692 = !DILocation(line: 1812, column: 9, scope: !7688)
!7693 = !DILocation(line: 1813, column: 13, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7689, file: !1210, line: 1812, column: 42)
!7695 = distinct !{!7695, !7693}
!7696 = !DILocation(line: 1813, column: 36, scope: !7697)
!7697 = !DILexicalBlockFile(scope: !7698, file: !1210, discriminator: 1)
!7698 = distinct !DILexicalBlock(scope: !7699, file: !1210, line: 1813, column: 22)
!7699 = distinct !DILexicalBlock(scope: !7694, file: !1210, line: 1813, column: 16)
!7700 = !DILocation(line: 1813, column: 24, scope: !7697)
!7701 = !DILocation(line: 1813, column: 31, scope: !7697)
!7702 = !DILocation(line: 1813, column: 23, scope: !7697)
!7703 = !DILocation(line: 1813, column: 22, scope: !7697)
!7704 = !DILocation(line: 1813, column: 43, scope: !7705)
!7705 = !DILexicalBlockFile(scope: !7706, file: !1210, discriminator: 2)
!7706 = distinct !DILexicalBlock(scope: !7698, file: !1210, line: 1813, column: 41)
!7707 = !DILocation(line: 1813, column: 99, scope: !7708)
!7708 = !DILexicalBlockFile(scope: !7705, file: !1210, discriminator: 4)
!7709 = !DILocation(line: 1813, column: 99, scope: !7705)
!7710 = !DILocation(line: 1813, column: 110, scope: !7711)
!7711 = !DILexicalBlockFile(scope: !7699, file: !1210, discriminator: 3)
!7712 = !DILocation(line: 1814, column: 9, scope: !7694)
!7713 = !DILocation(line: 1812, column: 38, scope: !7714)
!7714 = !DILexicalBlockFile(scope: !7689, file: !1210, discriminator: 2)
!7715 = !DILocation(line: 1812, column: 9, scope: !7714)
!7716 = distinct !{!7716, !7717}
!7717 = !DILocation(line: 1812, column: 9, scope: !7640)
!7718 = !DILocation(line: 1816, column: 18, scope: !7719)
!7719 = distinct !DILexicalBlock(scope: !7640, file: !1210, line: 1816, column: 9)
!7720 = !DILocation(line: 1816, column: 16, scope: !7719)
!7721 = !DILocation(line: 1816, column: 14, scope: !7719)
!7722 = !DILocation(line: 1816, column: 30, scope: !7723)
!7723 = !DILexicalBlockFile(scope: !7724, file: !1210, discriminator: 1)
!7724 = distinct !DILexicalBlock(scope: !7719, file: !1210, line: 1816, column: 9)
!7725 = !DILocation(line: 1816, column: 41, scope: !7723)
!7726 = !DILocation(line: 1816, column: 45, scope: !7723)
!7727 = !DILocation(line: 1816, column: 48, scope: !7728)
!7728 = !DILexicalBlockFile(scope: !7724, file: !1210, discriminator: 2)
!7729 = !DILocation(line: 1816, column: 50, scope: !7728)
!7730 = !DILocation(line: 1816, column: 9, scope: !7731)
!7731 = !DILexicalBlockFile(scope: !7719, file: !1210, discriminator: 3)
!7732 = !DILocation(line: 1817, column: 29, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7734, file: !1210, line: 1817, column: 17)
!7734 = distinct !DILexicalBlock(scope: !7724, file: !1210, line: 1816, column: 107)
!7735 = !DILocation(line: 1817, column: 17, scope: !7733)
!7736 = !DILocation(line: 1817, column: 24, scope: !7733)
!7737 = !DILocation(line: 1817, column: 17, scope: !7734)
!7738 = !DILocation(line: 1818, column: 24, scope: !7733)
!7739 = !DILocation(line: 1818, column: 17, scope: !7733)
!7740 = !DILocation(line: 1819, column: 25, scope: !7734)
!7741 = !DILocation(line: 1819, column: 13, scope: !7734)
!7742 = !DILocation(line: 1819, column: 20, scope: !7734)
!7743 = !DILocation(line: 1819, column: 28, scope: !7734)
!7744 = !DILocation(line: 1820, column: 9, scope: !7734)
!7745 = !DILocation(line: 1816, column: 103, scope: !7746)
!7746 = !DILexicalBlockFile(scope: !7724, file: !1210, discriminator: 4)
!7747 = !DILocation(line: 1816, column: 9, scope: !7746)
!7748 = distinct !{!7748, !7749}
!7749 = !DILocation(line: 1816, column: 9, scope: !7640)
!7750 = !DILocation(line: 1821, column: 5, scope: !7640)
!7751 = !DILocation(line: 1822, column: 1, scope: !7627)
