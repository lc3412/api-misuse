; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--mjpegdec.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--mjpegdec.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecHWConfigInternal = type { %struct.AVCodecHWConfig, %struct.AVHWAccel* }
%struct.AVCodecHWConfig = type { i32, i32, i32 }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, {}*, i32, void (%struct.MpegEncContext*)*, {}*, {}*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, {}*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, {}*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, {}*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVRational = type { i32, i32 }
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.MpegEncContext = type opaque
%struct.anon = type { i32, i32, i8*, i8*, i32, i32 }
%struct.MJpegDecodeContext = type { %struct.AVClass*, %struct.AVCodecContext*, %struct.GetBitContext, i32, i32, i32, i8*, [4 x [64 x i16]], [3 x [4 x %struct.VLC]], [4 x i32], i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], [4 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i32], [4 x i32], [4 x i32], [4 x i32], [4 x i32], [4 x i32], [4 x i32], [4 x i32], [4 x i32], [4 x i32], [4 x i32], i32, i32, [4 x i32], [4 x i32], %struct.AVFrame*, %struct.AVFrame*, i32, [4 x i32], i8*, [16 x i8], [64 x i16], [4 x [64 x i16]*], [4 x i8*], [4 x i64], i32, %struct.ScanTable, %struct.BlockDSPContext, %struct.HpelDSPContext, %struct.IDCTDSPContext, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i16]*, i32, i32, %struct.AVDictionary*, %struct.AVStereo3D*, %struct.AVPixFmtDescriptor*, i8**, i32*, i32, i32, i8*, i64, i8*, i64, [2 x [4 x [16 x i8]]], [2 x [4 x [256 x i8]]], i32, i32, i8* }
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%struct.VLC = type { i32, [2 x i16]*, i32, i32 }
%struct.ScanTable = type { i8*, [64 x i8], [64 x i8] }
%struct.BlockDSPContext = type { void (i16*)*, void (i16*)*, [2 x void (i8*, i8, i64, i32)*] }
%struct.HpelDSPContext = type { [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x void (i8*, i8*, i64, i32)*] }
%struct.IDCTDSPContext = type { void (i16*, i8*, i64)*, void (i16*, i8*, i64)*, void (i16*, i8*, i64)*, void (i16*)*, void (i8*, i64, i16*)*, void (i8*, i64, i16*)*, [64 x i8], i32, i32 }
%struct.AVStereo3D = type { i32, i32, i32 }
%struct.AVPixFmtDescriptor = type { i8*, i8, i8, i8, i64, [4 x %struct.AVComponentDescriptor], i8* }
%struct.AVComponentDescriptor = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%union.unaligned_32 = type { i32 }
%struct.PutBitContext = type { i32, i32, i8*, i8*, i8*, i32 }
%struct.GetByteContext = type { i8*, i8*, i8* }
%union.unaligned_16 = type { i16 }

@.str = private unnamed_addr constant [30 x i8] c"using external huffman table\0A\00", align 1
@.str.1 = private unnamed_addr constant [64 x i8] c"error using external huffman table, switching back to internal\0A\00", align 1
@.str.2 = private unnamed_addr constant [20 x i8] c"bottom field first\0A\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"MJPG\00", align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"dqt: len %d is too large\0A\00", align 1
@.str.5 = private unnamed_addr constant [24 x i8] c"dqt: invalid precision\0A\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"index=%d\0A\00", align 1
@.str.7 = private unnamed_addr constant [20 x i8] c"dqt: 0 quant value\0A\00", align 1
@.str.8 = private unnamed_addr constant [16 x i8] c"qscale[%d]: %d\0A\00", align 1
@.str.9 = private unnamed_addr constant [26 x i8] c"dht: len %d is too large\0A\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"class=%d index=%d nb_codes=%d\0A\00", align 1
@.str.11 = private unnamed_addr constant [20 x i8] c"bits %d is invalid\0A\00", align 1
@.str.12 = private unnamed_addr constant [28 x i8] c"Changing bps from %d to %d\0A\00", align 1
@.str.13 = private unnamed_addr constant [43 x i8] c"lowres is not possible with lossless jpeg\0A\00", align 1
@.str.14 = private unnamed_addr constant [22 x i8] c"sof0: picture: %dx%d\0A\00", align 1
@.str.15 = private unnamed_addr constant [46 x i8] c"nb_components changing in interlaced picture\0A\00", align 1
@.str.16 = private unnamed_addr constant [55 x i8] c"JPEG-LS that is not <= 8 bits/component or 16-bit gray\00", align 1
@.str.17 = private unnamed_addr constant [52 x i8] c"decode_sof0: error, len(%d) mismatch %d components\0A\00", align 1
@.str.18 = private unnamed_addr constant [24 x i8] c"quant_index is invalid\0A\00", align 1
@.str.19 = private unnamed_addr constant [47 x i8] c"Invalid sampling factor in component %d %d:%d\0A\00", align 1
@.str.20 = private unnamed_addr constant [36 x i8] c"component %d %d:%d id: %d quant:%d\0A\00", align 1
@.str.21 = private unnamed_addr constant [23 x i8] c"Subsampling in JPEG-LS\00", align 1
@.str.22 = private unnamed_addr constant [39 x i8] c"progressively coded interlaced picture\00", align 1
@.str.23 = private unnamed_addr constant [15 x i8] c"pix fmt id %x\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.25 = private unnamed_addr constant [22 x i8] c"s->nb_components == 3\00", align 1
@.str.26 = private unnamed_addr constant [22 x i8] c"libavcodec/mjpegdec.c\00", align 1
@.str.27 = private unnamed_addr constant [22 x i8] c"s->nb_components == 4\00", align 1
@.str.28 = private unnamed_addr constant [26 x i8] c"Pixel format 0x%x bits:%d\00", align 1
@.str.29 = private unnamed_addr constant [29 x i8] c"Lowres for weird subsampling\00", align 1
@.str.30 = private unnamed_addr constant [34 x i8] c"progressive for weird subsampling\00", align 1
@.str.31 = private unnamed_addr constant [37 x i8] c"Unsupported number of components %d\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"Could not get a pixel format descriptor.\0A\00", align 1
@.str.33 = private unnamed_addr constant [49 x i8] c"Unsupported coding and pixel format combination\0A\00", align 1
@.str.34 = private unnamed_addr constant [42 x i8] c"Can not process SOS before SOF, skipping\0A\00", align 1
@.str.35 = private unnamed_addr constant [23 x i8] c"Reference mismatching\0A\00", align 1
@.str.36 = private unnamed_addr constant [31 x i8] c"decode_sos: nb_components (%d)\00", align 1
@.str.37 = private unnamed_addr constant [30 x i8] c"decode_sos: invalid len (%d)\0A\00", align 1
@.str.38 = private unnamed_addr constant [15 x i8] c"component: %d\0A\00", align 1
@.str.39 = private unnamed_addr constant [41 x i8] c"decode_sos: index(%d) out of components\0A\00", align 1
@.str.40 = private unnamed_addr constant [5 x i8] c"CJPG\00", align 1
@.str.41 = private unnamed_addr constant [52 x i8] c"%s %s p:%d >>:%d ilv:%d bits:%d skip:%d %s comp:%d\0A\00", align 1
@.str.42 = private unnamed_addr constant [9 x i8] c"lossless\00", align 1
@.str.43 = private unnamed_addr constant [15 x i8] c"sequential DCT\00", align 1
@.str.44 = private unnamed_addr constant [4 x i8] c"RGB\00", align 1
@.str.45 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.46 = private unnamed_addr constant [5 x i8] c"PRCT\00", align 1
@.str.47 = private unnamed_addr constant [4 x i8] c"RCT\00", align 1
@.str.48 = private unnamed_addr constant [65 x i8] c"bytes_to_start >= 0 && s->raw_scan_buffer_size >= bytes_to_start\00", align 1
@.str.49 = private unnamed_addr constant [29 x i8] c"s->picture_ptr == s->picture\00", align 1
@.str.50 = private unnamed_addr constant [38 x i8] c"AVRn interlaced picture marker found\0A\00", align 1
@.str.51 = private unnamed_addr constant [38 x i8] c"decode_sos: ac/dc index out of range\0A\00", align 1
@.str.52 = private unnamed_addr constant [28 x i8] c"escaping removed %td bytes\0A\00", align 1
@.str.53 = private unnamed_addr constant [25 x i8] c"Invalid escape sequence\0A\00", align 1
@.str.54 = private unnamed_addr constant [50 x i8] c"MJPEG packet 0x%x too big (%d/%d), corrupt data?\0A\00", align 1
@.str.55 = private unnamed_addr constant [33 x i8] c"marker=%x avail_size_in_buf=%td\0A\00", align 1
@.str.56 = private unnamed_addr constant [16 x i8] c"invalid buffer\0A\00", align 1
@.str.57 = private unnamed_addr constant [15 x i8] c"startcode: %X\0A\00", align 1
@.str.58 = private unnamed_addr constant [20 x i8] c"restart marker: %d\0A\00", align 1
@.str.59 = private unnamed_addr constant [33 x i8] c"unable to decode APP fields: %s\0A\00", align 1
@.str.60 = private unnamed_addr constant [28 x i8] c"huffman table decode error\0A\00", align 1
@.str.61 = private unnamed_addr constant [36 x i8] c"Found EOI before any SOF, ignoring\0A\00", align 1
@.str.62 = private unnamed_addr constant [8 x i8] c"QP: %d\0A\00", align 1
@.str.63 = private unnamed_addr constant [37 x i8] c"mjpeg: unsupported coding type (%x)\0A\00", align 1
@.str.64 = private unnamed_addr constant [39 x i8] c"marker parser used %d bytes (%d bits)\0A\00", align 1
@.str.65 = private unnamed_addr constant [24 x i8] c"EOI missing, emulating\0A\00", align 1
@.str.66 = private unnamed_addr constant [29 x i8] c"No JPEG data found in image\0A\00", align 1
@.str.67 = private unnamed_addr constant [484 x i8] c"avctx->pix_fmt == AV_PIX_FMT_YUVJ444P || avctx->pix_fmt == AV_PIX_FMT_YUV444P || avctx->pix_fmt == AV_PIX_FMT_YUVJ440P || avctx->pix_fmt == AV_PIX_FMT_YUV440P || avctx->pix_fmt == AV_PIX_FMT_YUVA444P || avctx->pix_fmt == AV_PIX_FMT_YUVJ420P || avctx->pix_fmt == AV_PIX_FMT_YUV420P || avctx->pix_fmt == AV_PIX_FMT_YUV420P16LE|| avctx->pix_fmt == AV_PIX_FMT_YUVA420P || avctx->pix_fmt == AV_PIX_FMT_YUVA420P16LE|| avctx->pix_fmt == AV_PIX_FMT_GBRP || avctx->pix_fmt == AV_PIX_FMT_GBRAP\00", align 1
@.str.68 = private unnamed_addr constant [68 x i8] c"s->nb_components == av_pix_fmt_count_planes(s->picture_ptr->format)\00", align 1
@.str.69 = private unnamed_addr constant [6 x i8] c"w > 0\00", align 1
@.str.70 = private unnamed_addr constant [522 x i8] c"avctx->pix_fmt == AV_PIX_FMT_YUVJ444P || avctx->pix_fmt == AV_PIX_FMT_YUV444P || avctx->pix_fmt == AV_PIX_FMT_YUVJ422P || avctx->pix_fmt == AV_PIX_FMT_YUV422P || avctx->pix_fmt == AV_PIX_FMT_YUVJ420P || avctx->pix_fmt == AV_PIX_FMT_YUV420P || avctx->pix_fmt == AV_PIX_FMT_YUV440P || avctx->pix_fmt == AV_PIX_FMT_YUVJ440P || avctx->pix_fmt == AV_PIX_FMT_YUVA444P || avctx->pix_fmt == AV_PIX_FMT_YUVA420P || avctx->pix_fmt == AV_PIX_FMT_YUVA420P16LE|| avctx->pix_fmt == AV_PIX_FMT_GBRP || avctx->pix_fmt == AV_PIX_FMT_GBRAP\00", align 1
@.str.71 = private unnamed_addr constant [36 x i8] c"Could not allocate frame side data\0A\00", align 1
@.str.72 = private unnamed_addr constant [31 x i8] c"decode frame unused %td bytes\0A\00", align 1
@.str.73 = private unnamed_addr constant [14 x i8] c"Single field\0A\00", align 1
@.str.74 = private unnamed_addr constant [6 x i8] c"mjpeg\00", align 1
@.str.75 = private unnamed_addr constant [20 x i8] c"MJPEG (Motion JPEG)\00", align 1
@mjpegdec_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.142, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* getelementptr inbounds ([2 x %struct.AVOption], [2 x %struct.AVOption]* @options, i32 0, i32 0), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@ff_mjpeg_profiles = external constant [0 x %struct.AVProfile], align 8
@.compoundliteral = internal global [1 x %struct.AVCodecHWConfigInternal*] zeroinitializer, align 8
@ff_mjpeg_decoder = global { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i32 0, i32 0), i32 0, i32 7, i32 2, %struct.AVRational* null, i32* null, i32* null, i32* null, i64* null, i8 3, %struct.AVClass* @mjpegdec_class, %struct.AVProfile* getelementptr inbounds ([0 x %struct.AVProfile], [0 x %struct.AVProfile]* @ff_mjpeg_profiles, i32 0, i32 0), i8* null, i32 4544, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @ff_mjpeg_decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @ff_mjpeg_decode_frame, i32 (%struct.AVCodecContext*)* @ff_mjpeg_decode_end, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* @decode_flush, i32 9, i8* null, %struct.AVCodecHWConfigInternal** getelementptr inbounds ([1 x %struct.AVCodecHWConfigInternal*], [1 x %struct.AVCodecHWConfigInternal*]* @.compoundliteral, i32 0, i32 0) }, align 8
@.str.76 = private unnamed_addr constant [4 x i8] c"thp\00", align 1
@.str.77 = private unnamed_addr constant [28 x i8] c"Nintendo Gamecube THP video\00", align 1
@ff_thp_decoder = global { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.77, i32 0, i32 0), i32 0, i32 100, i32 2, %struct.AVRational* null, i32* null, i32* null, i32* null, i64* null, i8 3, %struct.AVClass* null, %struct.AVProfile* null, i8* null, i32 4544, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @ff_mjpeg_decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @ff_mjpeg_decode_frame, i32 (%struct.AVCodecContext*)* @ff_mjpeg_decode_end, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* @decode_flush, i32 1, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@ff_zigzag_direct = external constant [64 x i8], align 16
@init_default_huffman_tables.ht = internal constant [6 x %struct.anon] [%struct.anon { i32 0, i32 0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @avpriv_mjpeg_bits_dc_luminance, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @avpriv_mjpeg_val_dc, i32 0, i32 0), i32 12, i32 12 }, %struct.anon { i32 0, i32 1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @avpriv_mjpeg_bits_dc_chrominance, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @avpriv_mjpeg_val_dc, i32 0, i32 0), i32 12, i32 12 }, %struct.anon { i32 1, i32 0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @avpriv_mjpeg_bits_ac_luminance, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @avpriv_mjpeg_val_ac_luminance, i32 0, i32 0), i32 251, i32 162 }, %struct.anon { i32 1, i32 1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @avpriv_mjpeg_bits_ac_chrominance, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @avpriv_mjpeg_val_ac_chrominance, i32 0, i32 0), i32 251, i32 162 }, %struct.anon { i32 2, i32 0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @avpriv_mjpeg_bits_ac_luminance, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @avpriv_mjpeg_val_ac_luminance, i32 0, i32 0), i32 251, i32 162 }, %struct.anon { i32 2, i32 1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @avpriv_mjpeg_bits_ac_chrominance, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @avpriv_mjpeg_val_ac_chrominance, i32 0, i32 0), i32 251, i32 162 }], align 16
@avpriv_mjpeg_bits_dc_luminance = external constant [0 x i8], align 1
@avpriv_mjpeg_val_dc = external constant [0 x i8], align 1
@avpriv_mjpeg_bits_dc_chrominance = external constant [0 x i8], align 1
@avpriv_mjpeg_bits_ac_luminance = external constant [0 x i8], align 1
@avpriv_mjpeg_val_ac_luminance = external constant [0 x i8], align 1
@avpriv_mjpeg_bits_ac_chrominance = external constant [0 x i8], align 1
@avpriv_mjpeg_val_ac_chrominance = external constant [0 x i8], align 1
@.str.78 = private unnamed_addr constant [17 x i8] c"AVID: len:%d %d\0A\00", align 1
@.str.79 = private unnamed_addr constant [16 x i8] c"nb_codes <= 256\00", align 1
@.str.80 = private unnamed_addr constant [27 x i8] c"bitstream end in rgb_scan\0A\00", align 1
@.str.81 = private unnamed_addr constant [38 x i8] c"mjpeg_decode_dc: bad vlc: %d:%d (%p)\0A\00", align 1
@.str.82 = private unnamed_addr constant [37 x i8] c"nb_components>=1 && nb_components<=4\00", align 1
@.str.83 = private unnamed_addr constant [27 x i8] c"bitstream end in yuv_scan\0A\00", align 1
@.str.84 = private unnamed_addr constant [24 x i8] c"ss>=0 && Ah>=0 && Al>=0\00", align 1
@.str.85 = private unnamed_addr constant [24 x i8] c"SS/SE %d/%d is invalid\0A\00", align 1
@.str.86 = private unnamed_addr constant [57 x i8] c"bitstream truncated in mjpeg_decode_scan_progressive_ac\0A\00", align 1
@.str.87 = private unnamed_addr constant [17 x i8] c"error y=%d x=%d\0A\00", align 1
@.str.88 = private unnamed_addr constant [17 x i8] c"error count: %d\0A\00", align 1
@.str.89 = private unnamed_addr constant [18 x i8] c"ZRL overflow: %d\0A\00", align 1
@.str.90 = private unnamed_addr constant [28 x i8] c"mb_bitmask_size mismatches\0A\00", align 1
@.str.91 = private unnamed_addr constant [13 x i8] c"overread %d\0A\00", align 1
@.str.92 = private unnamed_addr constant [10 x i8] c"error dc\0A\00", align 1
@.str.93 = private unnamed_addr constant [43 x i8] c"Internal error, put_bits buffer too small\0A\00", align 1
@.str.94 = private unnamed_addr constant [24 x i8] c"s->buf_ptr < s->buf_end\00", align 1
@.str.95 = private unnamed_addr constant [22 x i8] c"libavcodec/put_bits.h\00", align 1
@.str.96 = private unnamed_addr constant [24 x i8] c"APPx (%s / %8X) len=%d\0A\00", align 1
@.str.97 = private unnamed_addr constant [5 x i8] c"AVI1\00", align 1
@.str.98 = private unnamed_addr constant [13 x i8] c"polarity %d\0A\00", align 1
@.str.99 = private unnamed_addr constant [5 x i8] c"JFIF\00", align 1
@.str.100 = private unnamed_addr constant [53 x i8] c"mjpeg: JFIF header found (version: %x.%x) SAR=%d/%d\0A\00", align 1
@.str.101 = private unnamed_addr constant [5 x i8] c"Adob\00", align 1
@.str.102 = private unnamed_addr constant [5 x i8] c"e_CM\00", align 1
@.str.103 = private unnamed_addr constant [41 x i8] c"mjpeg: Adobe header found, transform=%d\0A\00", align 1
@.str.104 = private unnamed_addr constant [5 x i8] c"LJIF\00", align 1
@.str.105 = private unnamed_addr constant [36 x i8] c"Pegasus lossless jpeg header found\0A\00", align 1
@.str.106 = private unnamed_addr constant [23 x i8] c"unknown colorspace %d\0A\00", align 1
@.str.107 = private unnamed_addr constant [22 x i8] c"Mismatching LJIF tag\0A\00", align 1
@.str.108 = private unnamed_addr constant [5 x i8] c"colr\00", align 1
@.str.109 = private unnamed_addr constant [9 x i8] c"COLR %d\0A\00", align 1
@.str.110 = private unnamed_addr constant [5 x i8] c"xfrm\00", align 1
@.str.111 = private unnamed_addr constant [9 x i8] c"XFRM %d\0A\00", align 1
@.str.112 = private unnamed_addr constant [5 x i8] c"_JPS\00", align 1
@.str.113 = private unnamed_addr constant [10 x i8] c"_JPSJPS_\0A\00", align 1
@.str.114 = private unnamed_addr constant [5 x i8] c"Exif\00", align 1
@.str.115 = private unnamed_addr constant [41 x i8] c"mjpeg: invalid TIFF header in EXIF data\0A\00", align 1
@.str.116 = private unnamed_addr constant [33 x i8] c"mjpeg: error decoding EXIF data\0A\00", align 1
@.str.117 = private unnamed_addr constant [5 x i8] c"mjpg\00", align 1
@.str.118 = private unnamed_addr constant [35 x i8] c"mjpeg: Apple MJPEG-A header found\0A\00", align 1
@.str.119 = private unnamed_addr constant [5 x i8] c"ICC_\00", align 1
@.str.120 = private unnamed_addr constant [5 x i8] c"PROF\00", align 1
@.str.121 = private unnamed_addr constant [4 x i8] c"ILE\00", align 1
@.str.122 = private unnamed_addr constant [36 x i8] c"Invalid ICC_PROFILE header in APP2\0A\00", align 1
@.str.123 = private unnamed_addr constant [33 x i8] c"Invalid sequence number in APP2\0A\00", align 1
@.str.124 = private unnamed_addr constant [41 x i8] c"Invalid number of markers coded in APP2\0A\00", align 1
@.str.125 = private unnamed_addr constant [58 x i8] c"Mistmatch in coded number of ICC markers between markers\0A\00", align 1
@.str.126 = private unnamed_addr constant [61 x i8] c"Mismatching sequence number and coded number of ICC markers\0A\00", align 1
@.str.127 = private unnamed_addr constant [36 x i8] c"Could not allocate ICC data arrays\0A\00", align 1
@.str.128 = private unnamed_addr constant [31 x i8] c"Duplicate ICC sequence number\0A\00", align 1
@.str.129 = private unnamed_addr constant [36 x i8] c"Could not allocate ICC data buffer\0A\00", align 1
@.str.130 = private unnamed_addr constant [53 x i8] c"Read more ICC markers than are supposed to be coded\0A\00", align 1
@.str.131 = private unnamed_addr constant [51 x i8] c"mjpeg: error, decode_app parser read over the end\0A\00", align 1
@.str.132 = private unnamed_addr constant [14 x i8] c"buf_size >= 0\00", align 1
@.str.133 = private unnamed_addr constant [24 x i8] c"libavcodec/bytestream.h\00", align 1
@.str.134 = private unnamed_addr constant [15 x i8] c"comment: '%s'\0A\00", align 1
@.str.135 = private unnamed_addr constant [5 x i8] c"AVID\00", align 1
@.str.136 = private unnamed_addr constant [10 x i8] c"CS=ITU601\00", align 1
@.str.137 = private unnamed_addr constant [33 x i8] c"Intel(R) JPEG Library, version 1\00", align 1
@.str.138 = private unnamed_addr constant [21 x i8] c"Metasoft MJPEG Codec\00", align 1
@.str.139 = private unnamed_addr constant [14 x i8] c"MULTISCOPE II\00", align 1
@.str.140 = private unnamed_addr constant [28 x i8] c"component %d is incomplete\0A\00", align 1
@.str.141 = private unnamed_addr constant [22 x i8] c"restart interval: %d\0A\00", align 1
@.str.142 = private unnamed_addr constant [14 x i8] c"MJPEG decoder\00", align 1
@options = internal constant [2 x %struct.AVOption] [%struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.144, i32 0, i32 0), i32 2268, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 18, i8* null }, %struct.AVOption zeroinitializer], align 16
@.str.143 = private unnamed_addr constant [12 x i8] c"extern_huff\00", align 1
@.str.144 = private unnamed_addr constant [28 x i8] c"Use external huffman table.\00", align 1

; Function Attrs: cold nounwind optsize uwtable
define i32 @ff_mjpeg_decode_init(%struct.AVCodecContext* %avctx) #0 !dbg !2071 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.MJpegDecodeContext*, align 8
  %ret = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2072, metadata !2073), !dbg !2074
  call void @llvm.dbg.declare(metadata %struct.MJpegDecodeContext** %s, metadata !2075, metadata !2073), !dbg !2076
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2077
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2078
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2078
  %2 = bitcast i8* %1 to %struct.MJpegDecodeContext*, !dbg !2077
  store %struct.MJpegDecodeContext* %2, %struct.MJpegDecodeContext** %s, align 8, !dbg !2076
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2079, metadata !2073), !dbg !2080
  %3 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !2081
  %picture_ptr = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %3, i32 0, i32 53, !dbg !2083
  %4 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr, align 8, !dbg !2083
  %tobool = icmp ne %struct.AVFrame* %4, null, !dbg !2081
  br i1 %tobool, label %if.end6, label %if.then, !dbg !2084

if.then:                                          ; preds = %entry
  %call = call %struct.AVFrame* @av_frame_alloc(), !dbg !2085
  %5 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !2087
  %picture = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %5, i32 0, i32 52, !dbg !2088
  store %struct.AVFrame* %call, %struct.AVFrame** %picture, align 32, !dbg !2089
  %6 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !2090
  %picture1 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %6, i32 0, i32 52, !dbg !2092
  %7 = load %struct.AVFrame*, %struct.AVFrame** %picture1, align 32, !dbg !2092
  %tobool2 = icmp ne %struct.AVFrame* %7, null, !dbg !2090
  br i1 %tobool2, label %if.end, label %if.then3, !dbg !2093

if.then3:                                         ; preds = %if.then
  store i32 -12, i32* %retval, align 4, !dbg !2094
  br label %return, !dbg !2094

if.end:                                           ; preds = %if.then
  %8 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !2095
  %picture4 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %8, i32 0, i32 52, !dbg !2096
  %9 = load %struct.AVFrame*, %struct.AVFrame** %picture4, align 32, !dbg !2096
  %10 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !2097
  %picture_ptr5 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %10, i32 0, i32 53, !dbg !2098
  store %struct.AVFrame* %9, %struct.AVFrame** %picture_ptr5, align 8, !dbg !2099
  br label %if.end6, !dbg !2100

if.end6:                                          ; preds = %if.end, %entry
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2101
  %12 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !2102
  %avctx7 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %12, i32 0, i32 1, !dbg !2103
  store %struct.AVCodecContext* %11, %struct.AVCodecContext** %avctx7, align 8, !dbg !2104
  %13 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !2105
  %bdsp = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %13, i32 0, i32 64, !dbg !2106
  %14 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2107
  call void @ff_blockdsp_init(%struct.BlockDSPContext* %bdsp, %struct.AVCodecContext* %14), !dbg !2108
  %15 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !2109
  %hdsp = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %15, i32 0, i32 65, !dbg !2110
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2111
  %flags = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %16, i32 0, i32 13, !dbg !2112
  %17 = load i32, i32* %flags, align 4, !dbg !2112
  call void @ff_hpeldsp_init(%struct.HpelDSPContext* %hdsp, i32 %17), !dbg !2113
  %18 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2114
  call void @init_idct(%struct.AVCodecContext* %18), !dbg !2115
  %19 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !2116
  %buffer_size = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %19, i32 0, i32 5, !dbg !2117
  store i32 0, i32* %buffer_size, align 8, !dbg !2118
  %20 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !2119
  %buffer = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %20, i32 0, i32 6, !dbg !2120
  store i8* null, i8** %buffer, align 32, !dbg !2121
  %21 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !2122
  %start_code = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %21, i32 0, i32 4, !dbg !2123
  store i32 -1, i32* %start_code, align 4, !dbg !2124
  %22 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !2125
  %first_picture = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %22, i32 0, i32 11, !dbg !2126
  store i32 1, i32* %first_picture, align 4, !dbg !2127
  %23 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !2128
  %got_picture = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %23, i32 0, i32 54, !dbg !2129
  store i32 0, i32* %got_picture, align 16, !dbg !2130
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2131
  %coded_height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %24, i32 0, i32 23, !dbg !2132
  %25 = load i32, i32* %coded_height, align 8, !dbg !2132
  %26 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !2133
  %org_height = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %26, i32 0, i32 10, !dbg !2134
  store i32 %25, i32* %org_height, align 8, !dbg !2135
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2136
  %chroma_sample_location = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %27, i32 0, i32 79, !dbg !2137
  store i32 2, i32* %chroma_sample_location, align 4, !dbg !2138
  %28 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2139
  %colorspace = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %28, i32 0, i32 77, !dbg !2140
  store i32 5, i32* %colorspace, align 4, !dbg !2141
  %29 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !2142
  %hwaccel_sw_pix_fmt = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %29, i32 0, i32 92, !dbg !2143
  store i32 -1, i32* %hwaccel_sw_pix_fmt, align 16, !dbg !2144
  %30 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !2145
  %hwaccel_pix_fmt = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %30, i32 0, i32 93, !dbg !2146
  store i32 -1, i32* %hwaccel_pix_fmt, align 4, !dbg !2147
  %31 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !2148
  %call8 = call i32 @init_default_huffman_tables(%struct.MJpegDecodeContext* %31), !dbg !2150
  store i32 %call8, i32* %ret, align 4, !dbg !2151
  %cmp = icmp slt i32 %call8, 0, !dbg !2152
  br i1 %cmp, label %if.then9, label %if.end10, !dbg !2153

if.then9:                                         ; preds = %if.end6
  %32 = load i32, i32* %ret, align 4, !dbg !2154
  store i32 %32, i32* %retval, align 4, !dbg !2155
  br label %return, !dbg !2155

if.end10:                                         ; preds = %if.end6
  %33 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !2156
  %extern_huff = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %33, i32 0, i32 78, !dbg !2158
  %34 = load i32, i32* %extern_huff, align 4, !dbg !2158
  %tobool11 = icmp ne i32 %34, 0, !dbg !2156
  br i1 %tobool11, label %if.then12, label %if.end22, !dbg !2159

if.then12:                                        ; preds = %if.end10
  %35 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2160
  %36 = bitcast %struct.AVCodecContext* %35 to i8*, !dbg !2160
  call void (i8*, i32, i8*, ...) @av_log(i8* %36, i32 32, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i32 0, i32 0)), !dbg !2162
  %37 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !2163
  %gb = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %37, i32 0, i32 2, !dbg !2165
  %38 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2166
  %extradata = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %38, i32 0, i32 15, !dbg !2167
  %39 = load i8*, i8** %extradata, align 8, !dbg !2167
  %40 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2168
  %extradata_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %40, i32 0, i32 16, !dbg !2169
  %41 = load i32, i32* %extradata_size, align 8, !dbg !2169
  %mul = mul nsw i32 %41, 8, !dbg !2170
  %call13 = call i32 @init_get_bits(%struct.GetBitContext* %gb, i8* %39, i32 %mul), !dbg !2171
  store i32 %call13, i32* %ret, align 4, !dbg !2172
  %cmp14 = icmp slt i32 %call13, 0, !dbg !2173
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !2174

if.then15:                                        ; preds = %if.then12
  %42 = load i32, i32* %ret, align 4, !dbg !2175
  store i32 %42, i32* %retval, align 4, !dbg !2176
  br label %return, !dbg !2176

if.end16:                                         ; preds = %if.then12
  %43 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !2177
  %call17 = call i32 @ff_mjpeg_decode_dht(%struct.MJpegDecodeContext* %43), !dbg !2179
  %tobool18 = icmp ne i32 %call17, 0, !dbg !2179
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !2180

if.then19:                                        ; preds = %if.end16
  %44 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2181
  %45 = bitcast %struct.AVCodecContext* %44 to i8*, !dbg !2181
  call void (i8*, i32, i8*, ...) @av_log(i8* %45, i32 16, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i32 0, i32 0)), !dbg !2183
  %46 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !2184
  %call20 = call i32 @init_default_huffman_tables(%struct.MJpegDecodeContext* %46), !dbg !2185
  br label %if.end21, !dbg !2186

if.end21:                                         ; preds = %if.then19, %if.end16
  br label %if.end22, !dbg !2187

if.end22:                                         ; preds = %if.end21, %if.end10
  %47 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2188
  %field_order = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %47, i32 0, i32 81, !dbg !2190
  %48 = load i32, i32* %field_order, align 4, !dbg !2190
  %cmp23 = icmp eq i32 %48, 3, !dbg !2191
  br i1 %cmp23, label %if.then24, label %if.else, !dbg !2192

if.then24:                                        ; preds = %if.end22
  %49 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !2193
  %interlace_polarity = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %49, i32 0, i32 71, !dbg !2195
  store i32 1, i32* %interlace_polarity, align 8, !dbg !2196
  %50 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2197
  %51 = bitcast %struct.AVCodecContext* %50 to i8*, !dbg !2197
  call void (i8*, i32, i8*, ...) @av_log(i8* %51, i32 48, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i32 0, i32 0)), !dbg !2198
  br label %if.end33, !dbg !2199

if.else:                                          ; preds = %if.end22
  %52 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2200
  %field_order25 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %52, i32 0, i32 81, !dbg !2203
  %53 = load i32, i32* %field_order25, align 4, !dbg !2203
  %cmp26 = icmp eq i32 %53, 0, !dbg !2204
  br i1 %cmp26, label %if.then27, label %if.end32, !dbg !2200

if.then27:                                        ; preds = %if.else
  %54 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2205
  %codec_tag = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %54, i32 0, i32 5, !dbg !2208
  %55 = load i32, i32* %codec_tag, align 4, !dbg !2208
  %56 = load i32, i32* bitcast ([5 x i8]* @.str.3 to i32*), align 1, !dbg !2209
  %cmp28 = icmp eq i32 %55, %56, !dbg !2210
  br i1 %cmp28, label %if.then29, label %if.end31, !dbg !2211

if.then29:                                        ; preds = %if.then27
  %57 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !2212
  %interlace_polarity30 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %57, i32 0, i32 71, !dbg !2213
  store i32 1, i32* %interlace_polarity30, align 8, !dbg !2214
  br label %if.end31, !dbg !2212

if.end31:                                         ; preds = %if.then29, %if.then27
  br label %if.end32, !dbg !2215

if.end32:                                         ; preds = %if.end31, %if.else
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then24
  %58 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2216
  %extradata_size34 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %58, i32 0, i32 16, !dbg !2218
  %59 = load i32, i32* %extradata_size34, align 8, !dbg !2218
  %cmp35 = icmp sgt i32 %59, 8, !dbg !2219
  br i1 %cmp35, label %land.lhs.true, label %if.end45, !dbg !2220

land.lhs.true:                                    ; preds = %if.end33
  %60 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2221
  %extradata36 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %60, i32 0, i32 15, !dbg !2223
  %61 = load i8*, i8** %extradata36, align 8, !dbg !2223
  %62 = bitcast i8* %61 to %union.unaligned_32*, !dbg !2224
  %l = bitcast %union.unaligned_32* %62 to i32*, !dbg !2224
  %63 = load i32, i32* %l, align 1, !dbg !2224
  %cmp37 = icmp eq i32 %63, 44, !dbg !2225
  br i1 %cmp37, label %land.lhs.true38, label %if.end45, !dbg !2226

land.lhs.true38:                                  ; preds = %land.lhs.true
  %64 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2227
  %extradata39 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %64, i32 0, i32 15, !dbg !2228
  %65 = load i8*, i8** %extradata39, align 8, !dbg !2228
  %add.ptr = getelementptr inbounds i8, i8* %65, i64 4, !dbg !2229
  %66 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !2230
  %l40 = bitcast %union.unaligned_32* %66 to i32*, !dbg !2230
  %67 = load i32, i32* %l40, align 1, !dbg !2230
  %cmp41 = icmp eq i32 %67, 24, !dbg !2231
  br i1 %cmp41, label %if.then42, label %if.end45, !dbg !2232

if.then42:                                        ; preds = %land.lhs.true38
  %68 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !2234
  %69 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2236
  %extradata43 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %69, i32 0, i32 15, !dbg !2237
  %70 = load i8*, i8** %extradata43, align 8, !dbg !2237
  %71 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2238
  %extradata_size44 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %71, i32 0, i32 16, !dbg !2239
  %72 = load i32, i32* %extradata_size44, align 8, !dbg !2239
  call void @parse_avid(%struct.MJpegDecodeContext* %68, i8* %70, i32 %72), !dbg !2240
  br label %if.end45, !dbg !2241

if.end45:                                         ; preds = %if.then42, %land.lhs.true38, %land.lhs.true, %if.end33
  %73 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2242
  %codec = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %73, i32 0, i32 3, !dbg !2244
  %74 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !2244
  %id = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %74, i32 0, i32 3, !dbg !2245
  %75 = load i32, i32* %id, align 4, !dbg !2245
  %cmp46 = icmp eq i32 %75, 107, !dbg !2246
  br i1 %cmp46, label %if.then47, label %if.end48, !dbg !2247

if.then47:                                        ; preds = %if.end45
  %76 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !2248
  %flipped = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %76, i32 0, i32 75, !dbg !2249
  store i32 1, i32* %flipped, align 8, !dbg !2250
  br label %if.end48, !dbg !2248

if.end48:                                         ; preds = %if.then47, %if.end45
  store i32 0, i32* %retval, align 4, !dbg !2251
  br label %return, !dbg !2251

return:                                           ; preds = %if.end48, %if.then15, %if.then9, %if.then3
  %77 = load i32, i32* %retval, align 4, !dbg !2252
  ret i32 %77, !dbg !2252
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare %struct.AVFrame* @av_frame_alloc() #2

declare void @ff_blockdsp_init(%struct.BlockDSPContext*, %struct.AVCodecContext*) #2

declare void @ff_hpeldsp_init(%struct.HpelDSPContext*, i32) #2

; Function Attrs: nounwind uwtable
define internal void @init_idct(%struct.AVCodecContext* %avctx) #3 !dbg !2253 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.MJpegDecodeContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2254, metadata !2073), !dbg !2255
  call void @llvm.dbg.declare(metadata %struct.MJpegDecodeContext** %s, metadata !2256, metadata !2073), !dbg !2257
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2258
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2259
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2259
  %2 = bitcast i8* %1 to %struct.MJpegDecodeContext*, !dbg !2258
  store %struct.MJpegDecodeContext* %2, %struct.MJpegDecodeContext** %s, align 8, !dbg !2257
  %3 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !2260
  %idsp = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %3, i32 0, i32 66, !dbg !2261
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2262
  call void @ff_idctdsp_init(%struct.IDCTDSPContext* %idsp, %struct.AVCodecContext* %4), !dbg !2263
  %5 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !2264
  %idsp1 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %5, i32 0, i32 66, !dbg !2265
  %idct_permutation = getelementptr inbounds %struct.IDCTDSPContext, %struct.IDCTDSPContext* %idsp1, i32 0, i32 6, !dbg !2266
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation, i32 0, i32 0, !dbg !2264
  %6 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !2267
  %scantable = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %6, i32 0, i32 63, !dbg !2268
  call void @ff_init_scantable(i8* %arraydecay, %struct.ScanTable* %scantable, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @ff_zigzag_direct, i32 0, i32 0)), !dbg !2269
  ret void, !dbg !2270
}

; Function Attrs: nounwind uwtable
define internal i32 @init_default_huffman_tables(%struct.MJpegDecodeContext* %s) #3 !dbg !1812 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.MJpegDecodeContext*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.MJpegDecodeContext* %s, %struct.MJpegDecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MJpegDecodeContext** %s.addr, metadata !2271, metadata !2073), !dbg !2272
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2273, metadata !2073), !dbg !2274
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2275, metadata !2073), !dbg !2276
  store i32 0, i32* %i, align 4, !dbg !2277
  br label %for.cond, !dbg !2279

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !2280
  %conv = sext i32 %0 to i64, !dbg !2280
  %cmp = icmp ult i64 %conv, 6, !dbg !2283
  br i1 %cmp, label %for.body, label %for.end, !dbg !2284

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !2285
  %idxprom = sext i32 %1 to i64, !dbg !2287
  %arrayidx = getelementptr inbounds [6 x %struct.anon], [6 x %struct.anon]* @init_default_huffman_tables.ht, i64 0, i64 %idxprom, !dbg !2287
  %index = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx, i32 0, i32 1, !dbg !2288
  %2 = load i32, i32* %index, align 4, !dbg !2288
  %idxprom2 = sext i32 %2 to i64, !dbg !2289
  %3 = load i32, i32* %i, align 4, !dbg !2290
  %idxprom3 = sext i32 %3 to i64, !dbg !2291
  %arrayidx4 = getelementptr inbounds [6 x %struct.anon], [6 x %struct.anon]* @init_default_huffman_tables.ht, i64 0, i64 %idxprom3, !dbg !2291
  %class = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx4, i32 0, i32 0, !dbg !2292
  %4 = load i32, i32* %class, align 16, !dbg !2292
  %idxprom5 = sext i32 %4 to i64, !dbg !2289
  %5 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2289
  %vlcs = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %5, i32 0, i32 8, !dbg !2293
  %arrayidx6 = getelementptr inbounds [3 x [4 x %struct.VLC]], [3 x [4 x %struct.VLC]]* %vlcs, i64 0, i64 %idxprom5, !dbg !2289
  %arrayidx7 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* %arrayidx6, i64 0, i64 %idxprom2, !dbg !2289
  %6 = load i32, i32* %i, align 4, !dbg !2294
  %idxprom8 = sext i32 %6 to i64, !dbg !2295
  %arrayidx9 = getelementptr inbounds [6 x %struct.anon], [6 x %struct.anon]* @init_default_huffman_tables.ht, i64 0, i64 %idxprom8, !dbg !2295
  %bits = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx9, i32 0, i32 2, !dbg !2296
  %7 = load i8*, i8** %bits, align 8, !dbg !2296
  %8 = load i32, i32* %i, align 4, !dbg !2297
  %idxprom10 = sext i32 %8 to i64, !dbg !2298
  %arrayidx11 = getelementptr inbounds [6 x %struct.anon], [6 x %struct.anon]* @init_default_huffman_tables.ht, i64 0, i64 %idxprom10, !dbg !2298
  %values = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx11, i32 0, i32 3, !dbg !2299
  %9 = load i8*, i8** %values, align 16, !dbg !2299
  %10 = load i32, i32* %i, align 4, !dbg !2300
  %idxprom12 = sext i32 %10 to i64, !dbg !2301
  %arrayidx13 = getelementptr inbounds [6 x %struct.anon], [6 x %struct.anon]* @init_default_huffman_tables.ht, i64 0, i64 %idxprom12, !dbg !2301
  %codes = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx13, i32 0, i32 4, !dbg !2302
  %11 = load i32, i32* %codes, align 8, !dbg !2302
  %12 = load i32, i32* %i, align 4, !dbg !2303
  %idxprom14 = sext i32 %12 to i64, !dbg !2304
  %arrayidx15 = getelementptr inbounds [6 x %struct.anon], [6 x %struct.anon]* @init_default_huffman_tables.ht, i64 0, i64 %idxprom14, !dbg !2304
  %class16 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx15, i32 0, i32 0, !dbg !2305
  %13 = load i32, i32* %class16, align 16, !dbg !2305
  %cmp17 = icmp eq i32 %13, 1, !dbg !2306
  %conv18 = zext i1 %cmp17 to i32, !dbg !2306
  %call = call i32 @build_vlc(%struct.VLC* %arrayidx7, i8* %7, i8* %9, i32 %11, i32 0, i32 %conv18), !dbg !2307
  store i32 %call, i32* %ret, align 4, !dbg !2308
  %14 = load i32, i32* %ret, align 4, !dbg !2309
  %cmp19 = icmp slt i32 %14, 0, !dbg !2311
  br i1 %cmp19, label %if.then, label %if.end, !dbg !2312

if.then:                                          ; preds = %for.body
  %15 = load i32, i32* %ret, align 4, !dbg !2313
  store i32 %15, i32* %retval, align 4, !dbg !2314
  br label %return, !dbg !2314

if.end:                                           ; preds = %for.body
  %16 = load i32, i32* %i, align 4, !dbg !2315
  %idxprom21 = sext i32 %16 to i64, !dbg !2317
  %arrayidx22 = getelementptr inbounds [6 x %struct.anon], [6 x %struct.anon]* @init_default_huffman_tables.ht, i64 0, i64 %idxprom21, !dbg !2317
  %class23 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx22, i32 0, i32 0, !dbg !2318
  %17 = load i32, i32* %class23, align 16, !dbg !2318
  %cmp24 = icmp slt i32 %17, 2, !dbg !2319
  br i1 %cmp24, label %if.then26, label %if.end57, !dbg !2320

if.then26:                                        ; preds = %if.end
  %18 = load i32, i32* %i, align 4, !dbg !2321
  %idxprom27 = sext i32 %18 to i64, !dbg !2323
  %arrayidx28 = getelementptr inbounds [6 x %struct.anon], [6 x %struct.anon]* @init_default_huffman_tables.ht, i64 0, i64 %idxprom27, !dbg !2323
  %index29 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx28, i32 0, i32 1, !dbg !2324
  %19 = load i32, i32* %index29, align 4, !dbg !2324
  %idxprom30 = sext i32 %19 to i64, !dbg !2325
  %20 = load i32, i32* %i, align 4, !dbg !2326
  %idxprom31 = sext i32 %20 to i64, !dbg !2327
  %arrayidx32 = getelementptr inbounds [6 x %struct.anon], [6 x %struct.anon]* @init_default_huffman_tables.ht, i64 0, i64 %idxprom31, !dbg !2327
  %class33 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx32, i32 0, i32 0, !dbg !2328
  %21 = load i32, i32* %class33, align 16, !dbg !2328
  %idxprom34 = sext i32 %21 to i64, !dbg !2325
  %22 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2325
  %raw_huffman_lengths = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %22, i32 0, i32 90, !dbg !2329
  %arrayidx35 = getelementptr inbounds [2 x [4 x [16 x i8]]], [2 x [4 x [16 x i8]]]* %raw_huffman_lengths, i64 0, i64 %idxprom34, !dbg !2325
  %arrayidx36 = getelementptr inbounds [4 x [16 x i8]], [4 x [16 x i8]]* %arrayidx35, i64 0, i64 %idxprom30, !dbg !2325
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %arrayidx36, i32 0, i32 0, !dbg !2330
  %23 = load i32, i32* %i, align 4, !dbg !2331
  %idxprom37 = sext i32 %23 to i64, !dbg !2332
  %arrayidx38 = getelementptr inbounds [6 x %struct.anon], [6 x %struct.anon]* @init_default_huffman_tables.ht, i64 0, i64 %idxprom37, !dbg !2332
  %bits39 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx38, i32 0, i32 2, !dbg !2333
  %24 = load i8*, i8** %bits39, align 8, !dbg !2333
  %add.ptr = getelementptr inbounds i8, i8* %24, i64 1, !dbg !2334
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %add.ptr, i64 16, i32 1, i1 false), !dbg !2330
  %25 = load i32, i32* %i, align 4, !dbg !2335
  %idxprom40 = sext i32 %25 to i64, !dbg !2336
  %arrayidx41 = getelementptr inbounds [6 x %struct.anon], [6 x %struct.anon]* @init_default_huffman_tables.ht, i64 0, i64 %idxprom40, !dbg !2336
  %index42 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx41, i32 0, i32 1, !dbg !2337
  %26 = load i32, i32* %index42, align 4, !dbg !2337
  %idxprom43 = sext i32 %26 to i64, !dbg !2338
  %27 = load i32, i32* %i, align 4, !dbg !2339
  %idxprom44 = sext i32 %27 to i64, !dbg !2340
  %arrayidx45 = getelementptr inbounds [6 x %struct.anon], [6 x %struct.anon]* @init_default_huffman_tables.ht, i64 0, i64 %idxprom44, !dbg !2340
  %class46 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx45, i32 0, i32 0, !dbg !2341
  %28 = load i32, i32* %class46, align 16, !dbg !2341
  %idxprom47 = sext i32 %28 to i64, !dbg !2338
  %29 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2338
  %raw_huffman_values = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %29, i32 0, i32 91, !dbg !2342
  %arrayidx48 = getelementptr inbounds [2 x [4 x [256 x i8]]], [2 x [4 x [256 x i8]]]* %raw_huffman_values, i64 0, i64 %idxprom47, !dbg !2338
  %arrayidx49 = getelementptr inbounds [4 x [256 x i8]], [4 x [256 x i8]]* %arrayidx48, i64 0, i64 %idxprom43, !dbg !2338
  %arraydecay50 = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx49, i32 0, i32 0, !dbg !2343
  %30 = load i32, i32* %i, align 4, !dbg !2344
  %idxprom51 = sext i32 %30 to i64, !dbg !2345
  %arrayidx52 = getelementptr inbounds [6 x %struct.anon], [6 x %struct.anon]* @init_default_huffman_tables.ht, i64 0, i64 %idxprom51, !dbg !2345
  %values53 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx52, i32 0, i32 3, !dbg !2346
  %31 = load i8*, i8** %values53, align 16, !dbg !2346
  %32 = load i32, i32* %i, align 4, !dbg !2347
  %idxprom54 = sext i32 %32 to i64, !dbg !2348
  %arrayidx55 = getelementptr inbounds [6 x %struct.anon], [6 x %struct.anon]* @init_default_huffman_tables.ht, i64 0, i64 %idxprom54, !dbg !2348
  %length = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx55, i32 0, i32 5, !dbg !2349
  %33 = load i32, i32* %length, align 4, !dbg !2349
  %conv56 = sext i32 %33 to i64, !dbg !2348
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay50, i8* %31, i64 %conv56, i32 1, i1 false), !dbg !2343
  br label %if.end57, !dbg !2350

if.end57:                                         ; preds = %if.then26, %if.end
  br label %for.inc, !dbg !2351

for.inc:                                          ; preds = %if.end57
  %34 = load i32, i32* %i, align 4, !dbg !2352
  %inc = add nsw i32 %34, 1, !dbg !2352
  store i32 %inc, i32* %i, align 4, !dbg !2352
  br label %for.cond, !dbg !2354, !llvm.loop !2355

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !2357
  br label %return, !dbg !2357

return:                                           ; preds = %for.end, %if.then
  %35 = load i32, i32* %retval, align 4, !dbg !2358
  ret i32 %35, !dbg !2358
}

declare void @av_log(i8*, i32, i8*, ...) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits(%struct.GetBitContext* %s, i8* %buffer, i32 %bit_size) #4 !dbg !2359 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %bit_size.addr = alloca i32, align 4
  %buffer_size = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !2363, metadata !2073), !dbg !2364
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !2365, metadata !2073), !dbg !2366
  store i32 %bit_size, i32* %bit_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit_size.addr, metadata !2367, metadata !2073), !dbg !2368
  call void @llvm.dbg.declare(metadata i32* %buffer_size, metadata !2369, metadata !2073), !dbg !2370
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2371, metadata !2073), !dbg !2372
  store i32 0, i32* %ret, align 4, !dbg !2372
  %0 = load i32, i32* %bit_size.addr, align 4, !dbg !2373
  %cmp = icmp sge i32 %0, 2147483135, !dbg !2375
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2376

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %bit_size.addr, align 4, !dbg !2377
  %cmp1 = icmp slt i32 %1, 0, !dbg !2379
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !2380

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !2381
  %tobool = icmp ne i8* %2, null, !dbg !2381
  br i1 %tobool, label %if.end, label %if.then, !dbg !2383

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %bit_size.addr, align 4, !dbg !2384
  store i8* null, i8** %buffer.addr, align 8, !dbg !2386
  store i32 -1094995529, i32* %ret, align 4, !dbg !2387
  br label %if.end, !dbg !2388

if.end:                                           ; preds = %if.then, %lor.lhs.false2
  %3 = load i32, i32* %bit_size.addr, align 4, !dbg !2389
  %add = add nsw i32 %3, 7, !dbg !2390
  %shr = ashr i32 %add, 3, !dbg !2391
  store i32 %shr, i32* %buffer_size, align 4, !dbg !2392
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !2393
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2394
  %buffer3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 0, !dbg !2395
  store i8* %4, i8** %buffer3, align 8, !dbg !2396
  %6 = load i32, i32* %bit_size.addr, align 4, !dbg !2397
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2398
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %7, i32 0, i32 3, !dbg !2399
  store i32 %6, i32* %size_in_bits, align 4, !dbg !2400
  %8 = load i32, i32* %bit_size.addr, align 4, !dbg !2401
  %add4 = add nsw i32 %8, 8, !dbg !2402
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2403
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 4, !dbg !2404
  store i32 %add4, i32* %size_in_bits_plus8, align 8, !dbg !2405
  %10 = load i8*, i8** %buffer.addr, align 8, !dbg !2406
  %11 = load i32, i32* %buffer_size, align 4, !dbg !2407
  %idx.ext = sext i32 %11 to i64, !dbg !2408
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !2408
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2409
  %buffer_end = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %12, i32 0, i32 1, !dbg !2410
  store i8* %add.ptr, i8** %buffer_end, align 8, !dbg !2411
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2412
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %13, i32 0, i32 2, !dbg !2413
  store i32 0, i32* %index, align 8, !dbg !2414
  %14 = load i32, i32* %ret, align 4, !dbg !2415
  ret i32 %14, !dbg !2416
}

; Function Attrs: nounwind uwtable
define i32 @ff_mjpeg_decode_dht(%struct.MJpegDecodeContext* %s) #3 !dbg !2417 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.MJpegDecodeContext*, align 8
  %len = alloca i32, align 4
  %index = alloca i32, align 4
  %i = alloca i32, align 4
  %class = alloca i32, align 4
  %n = alloca i32, align 4
  %v = alloca i32, align 4
  %code_max = alloca i32, align 4
  %bits_table = alloca [17 x i8], align 16
  %val_table = alloca [256 x i8], align 16
  %ret = alloca i32, align 4
  store %struct.MJpegDecodeContext* %s, %struct.MJpegDecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MJpegDecodeContext** %s.addr, metadata !2418, metadata !2073), !dbg !2419
  call void @llvm.dbg.declare(metadata i32* %len, metadata !2420, metadata !2073), !dbg !2421
  call void @llvm.dbg.declare(metadata i32* %index, metadata !2422, metadata !2073), !dbg !2423
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2424, metadata !2073), !dbg !2425
  call void @llvm.dbg.declare(metadata i32* %class, metadata !2426, metadata !2073), !dbg !2427
  call void @llvm.dbg.declare(metadata i32* %n, metadata !2428, metadata !2073), !dbg !2429
  call void @llvm.dbg.declare(metadata i32* %v, metadata !2430, metadata !2073), !dbg !2431
  call void @llvm.dbg.declare(metadata i32* %code_max, metadata !2432, metadata !2073), !dbg !2433
  call void @llvm.dbg.declare(metadata [17 x i8]* %bits_table, metadata !2434, metadata !2073), !dbg !2438
  call void @llvm.dbg.declare(metadata [256 x i8]* %val_table, metadata !2439, metadata !2073), !dbg !2442
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2443, metadata !2073), !dbg !2444
  store i32 0, i32* %ret, align 4, !dbg !2444
  %0 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2445
  %gb = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %0, i32 0, i32 2, !dbg !2446
  %call = call i32 @get_bits(%struct.GetBitContext* %gb, i32 16), !dbg !2447
  %sub = sub i32 %call, 2, !dbg !2448
  store i32 %sub, i32* %len, align 4, !dbg !2449
  %1 = load i32, i32* %len, align 4, !dbg !2450
  %mul = mul nsw i32 8, %1, !dbg !2452
  %2 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2453
  %gb1 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %2, i32 0, i32 2, !dbg !2454
  %call2 = call i32 @get_bits_left(%struct.GetBitContext* %gb1), !dbg !2455
  %cmp = icmp sgt i32 %mul, %call2, !dbg !2456
  br i1 %cmp, label %if.then, label %if.end, !dbg !2457

if.then:                                          ; preds = %entry
  %3 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2458
  %avctx = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %3, i32 0, i32 1, !dbg !2460
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !2460
  %5 = bitcast %struct.AVCodecContext* %4 to i8*, !dbg !2458
  %6 = load i32, i32* %len, align 4, !dbg !2461
  call void (i8*, i32, i8*, ...) @av_log(i8* %5, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i32 0, i32 0), i32 %6), !dbg !2462
  store i32 -1094995529, i32* %retval, align 4, !dbg !2463
  br label %return, !dbg !2463

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !2464

while.cond:                                       ; preds = %for.end117, %if.end
  %7 = load i32, i32* %len, align 4, !dbg !2465
  %cmp3 = icmp sgt i32 %7, 0, !dbg !2467
  br i1 %cmp3, label %while.body, label %while.end, !dbg !2468

while.body:                                       ; preds = %while.cond
  %8 = load i32, i32* %len, align 4, !dbg !2469
  %cmp4 = icmp slt i32 %8, 17, !dbg !2472
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !2473

if.then5:                                         ; preds = %while.body
  store i32 -1094995529, i32* %retval, align 4, !dbg !2474
  br label %return, !dbg !2474

if.end6:                                          ; preds = %while.body
  %9 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2475
  %gb7 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %9, i32 0, i32 2, !dbg !2476
  %call8 = call i32 @get_bits(%struct.GetBitContext* %gb7, i32 4), !dbg !2477
  store i32 %call8, i32* %class, align 4, !dbg !2478
  %10 = load i32, i32* %class, align 4, !dbg !2479
  %cmp9 = icmp sge i32 %10, 2, !dbg !2481
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !2482

if.then10:                                        ; preds = %if.end6
  store i32 -1094995529, i32* %retval, align 4, !dbg !2483
  br label %return, !dbg !2483

if.end11:                                         ; preds = %if.end6
  %11 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2484
  %gb12 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %11, i32 0, i32 2, !dbg !2485
  %call13 = call i32 @get_bits(%struct.GetBitContext* %gb12, i32 4), !dbg !2486
  store i32 %call13, i32* %index, align 4, !dbg !2487
  %12 = load i32, i32* %index, align 4, !dbg !2488
  %cmp14 = icmp sge i32 %12, 4, !dbg !2490
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !2491

if.then15:                                        ; preds = %if.end11
  store i32 -1094995529, i32* %retval, align 4, !dbg !2492
  br label %return, !dbg !2492

if.end16:                                         ; preds = %if.end11
  store i32 0, i32* %n, align 4, !dbg !2493
  store i32 1, i32* %i, align 4, !dbg !2494
  br label %for.cond, !dbg !2496

for.cond:                                         ; preds = %for.inc, %if.end16
  %13 = load i32, i32* %i, align 4, !dbg !2497
  %cmp17 = icmp sle i32 %13, 16, !dbg !2500
  br i1 %cmp17, label %for.body, label %for.end, !dbg !2501

for.body:                                         ; preds = %for.cond
  %14 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2502
  %gb18 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %14, i32 0, i32 2, !dbg !2504
  %call19 = call i32 @get_bits(%struct.GetBitContext* %gb18, i32 8), !dbg !2505
  %conv = trunc i32 %call19 to i8, !dbg !2505
  %15 = load i32, i32* %i, align 4, !dbg !2506
  %idxprom = sext i32 %15 to i64, !dbg !2507
  %arrayidx = getelementptr inbounds [17 x i8], [17 x i8]* %bits_table, i64 0, i64 %idxprom, !dbg !2507
  store i8 %conv, i8* %arrayidx, align 1, !dbg !2508
  %16 = load i32, i32* %i, align 4, !dbg !2509
  %idxprom20 = sext i32 %16 to i64, !dbg !2510
  %arrayidx21 = getelementptr inbounds [17 x i8], [17 x i8]* %bits_table, i64 0, i64 %idxprom20, !dbg !2510
  %17 = load i8, i8* %arrayidx21, align 1, !dbg !2510
  %conv22 = zext i8 %17 to i32, !dbg !2510
  %18 = load i32, i32* %n, align 4, !dbg !2511
  %add = add nsw i32 %18, %conv22, !dbg !2511
  store i32 %add, i32* %n, align 4, !dbg !2511
  br label %for.inc, !dbg !2512

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !2513
  %inc = add nsw i32 %19, 1, !dbg !2513
  store i32 %inc, i32* %i, align 4, !dbg !2513
  br label %for.cond, !dbg !2515, !llvm.loop !2516

for.end:                                          ; preds = %for.cond
  %20 = load i32, i32* %len, align 4, !dbg !2518
  %sub23 = sub nsw i32 %20, 17, !dbg !2518
  store i32 %sub23, i32* %len, align 4, !dbg !2518
  %21 = load i32, i32* %len, align 4, !dbg !2519
  %22 = load i32, i32* %n, align 4, !dbg !2521
  %cmp24 = icmp slt i32 %21, %22, !dbg !2522
  br i1 %cmp24, label %if.then28, label %lor.lhs.false, !dbg !2523

lor.lhs.false:                                    ; preds = %for.end
  %23 = load i32, i32* %n, align 4, !dbg !2524
  %cmp26 = icmp sgt i32 %23, 256, !dbg !2526
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !2527

if.then28:                                        ; preds = %lor.lhs.false, %for.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !2528
  br label %return, !dbg !2528

if.end29:                                         ; preds = %lor.lhs.false
  store i32 0, i32* %code_max, align 4, !dbg !2529
  store i32 0, i32* %i, align 4, !dbg !2530
  br label %for.cond30, !dbg !2532

for.cond30:                                       ; preds = %for.inc43, %if.end29
  %24 = load i32, i32* %i, align 4, !dbg !2533
  %25 = load i32, i32* %n, align 4, !dbg !2536
  %cmp31 = icmp slt i32 %24, %25, !dbg !2537
  br i1 %cmp31, label %for.body33, label %for.end45, !dbg !2538

for.body33:                                       ; preds = %for.cond30
  %26 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2539
  %gb34 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %26, i32 0, i32 2, !dbg !2541
  %call35 = call i32 @get_bits(%struct.GetBitContext* %gb34, i32 8), !dbg !2542
  store i32 %call35, i32* %v, align 4, !dbg !2543
  %27 = load i32, i32* %v, align 4, !dbg !2544
  %28 = load i32, i32* %code_max, align 4, !dbg !2546
  %cmp36 = icmp sgt i32 %27, %28, !dbg !2547
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !2548

if.then38:                                        ; preds = %for.body33
  %29 = load i32, i32* %v, align 4, !dbg !2549
  store i32 %29, i32* %code_max, align 4, !dbg !2550
  br label %if.end39, !dbg !2551

if.end39:                                         ; preds = %if.then38, %for.body33
  %30 = load i32, i32* %v, align 4, !dbg !2552
  %conv40 = trunc i32 %30 to i8, !dbg !2552
  %31 = load i32, i32* %i, align 4, !dbg !2553
  %idxprom41 = sext i32 %31 to i64, !dbg !2554
  %arrayidx42 = getelementptr inbounds [256 x i8], [256 x i8]* %val_table, i64 0, i64 %idxprom41, !dbg !2554
  store i8 %conv40, i8* %arrayidx42, align 1, !dbg !2555
  br label %for.inc43, !dbg !2556

for.inc43:                                        ; preds = %if.end39
  %32 = load i32, i32* %i, align 4, !dbg !2557
  %inc44 = add nsw i32 %32, 1, !dbg !2557
  store i32 %inc44, i32* %i, align 4, !dbg !2557
  br label %for.cond30, !dbg !2559, !llvm.loop !2560

for.end45:                                        ; preds = %for.cond30
  %33 = load i32, i32* %n, align 4, !dbg !2562
  %34 = load i32, i32* %len, align 4, !dbg !2563
  %sub46 = sub nsw i32 %34, %33, !dbg !2563
  store i32 %sub46, i32* %len, align 4, !dbg !2563
  %35 = load i32, i32* %index, align 4, !dbg !2564
  %idxprom47 = sext i32 %35 to i64, !dbg !2565
  %36 = load i32, i32* %class, align 4, !dbg !2566
  %idxprom48 = sext i32 %36 to i64, !dbg !2565
  %37 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2565
  %vlcs = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %37, i32 0, i32 8, !dbg !2567
  %arrayidx49 = getelementptr inbounds [3 x [4 x %struct.VLC]], [3 x [4 x %struct.VLC]]* %vlcs, i64 0, i64 %idxprom48, !dbg !2565
  %arrayidx50 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* %arrayidx49, i64 0, i64 %idxprom47, !dbg !2565
  call void @ff_free_vlc(%struct.VLC* %arrayidx50), !dbg !2568
  %38 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2569
  %avctx51 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %38, i32 0, i32 1, !dbg !2570
  %39 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx51, align 8, !dbg !2570
  %40 = bitcast %struct.AVCodecContext* %39 to i8*, !dbg !2569
  %41 = load i32, i32* %class, align 4, !dbg !2571
  %42 = load i32, i32* %index, align 4, !dbg !2572
  %43 = load i32, i32* %code_max, align 4, !dbg !2573
  %add52 = add nsw i32 %43, 1, !dbg !2574
  call void (i8*, i32, i8*, ...) @av_log(i8* %40, i32 48, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i32 %41, i32 %42, i32 %add52), !dbg !2575
  %44 = load i32, i32* %index, align 4, !dbg !2576
  %idxprom53 = sext i32 %44 to i64, !dbg !2578
  %45 = load i32, i32* %class, align 4, !dbg !2579
  %idxprom54 = sext i32 %45 to i64, !dbg !2578
  %46 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2578
  %vlcs55 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %46, i32 0, i32 8, !dbg !2580
  %arrayidx56 = getelementptr inbounds [3 x [4 x %struct.VLC]], [3 x [4 x %struct.VLC]]* %vlcs55, i64 0, i64 %idxprom54, !dbg !2578
  %arrayidx57 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* %arrayidx56, i64 0, i64 %idxprom53, !dbg !2578
  %arraydecay = getelementptr inbounds [17 x i8], [17 x i8]* %bits_table, i32 0, i32 0, !dbg !2581
  %arraydecay58 = getelementptr inbounds [256 x i8], [256 x i8]* %val_table, i32 0, i32 0, !dbg !2582
  %47 = load i32, i32* %code_max, align 4, !dbg !2583
  %add59 = add nsw i32 %47, 1, !dbg !2584
  %48 = load i32, i32* %class, align 4, !dbg !2585
  %cmp60 = icmp sgt i32 %48, 0, !dbg !2586
  %conv61 = zext i1 %cmp60 to i32, !dbg !2586
  %call62 = call i32 @build_vlc(%struct.VLC* %arrayidx57, i8* %arraydecay, i8* %arraydecay58, i32 %add59, i32 0, i32 %conv61), !dbg !2587
  store i32 %call62, i32* %ret, align 4, !dbg !2588
  %cmp63 = icmp slt i32 %call62, 0, !dbg !2589
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !2590

if.then65:                                        ; preds = %for.end45
  %49 = load i32, i32* %ret, align 4, !dbg !2591
  store i32 %49, i32* %retval, align 4, !dbg !2592
  br label %return, !dbg !2592

if.end66:                                         ; preds = %for.end45
  %50 = load i32, i32* %class, align 4, !dbg !2593
  %cmp67 = icmp sgt i32 %50, 0, !dbg !2595
  br i1 %cmp67, label %if.then69, label %if.end86, !dbg !2596

if.then69:                                        ; preds = %if.end66
  %51 = load i32, i32* %index, align 4, !dbg !2597
  %idxprom70 = sext i32 %51 to i64, !dbg !2599
  %52 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2599
  %vlcs71 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %52, i32 0, i32 8, !dbg !2600
  %arrayidx72 = getelementptr inbounds [3 x [4 x %struct.VLC]], [3 x [4 x %struct.VLC]]* %vlcs71, i64 0, i64 2, !dbg !2599
  %arrayidx73 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* %arrayidx72, i64 0, i64 %idxprom70, !dbg !2599
  call void @ff_free_vlc(%struct.VLC* %arrayidx73), !dbg !2601
  %53 = load i32, i32* %index, align 4, !dbg !2602
  %idxprom74 = sext i32 %53 to i64, !dbg !2604
  %54 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2604
  %vlcs75 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %54, i32 0, i32 8, !dbg !2605
  %arrayidx76 = getelementptr inbounds [3 x [4 x %struct.VLC]], [3 x [4 x %struct.VLC]]* %vlcs75, i64 0, i64 2, !dbg !2604
  %arrayidx77 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* %arrayidx76, i64 0, i64 %idxprom74, !dbg !2604
  %arraydecay78 = getelementptr inbounds [17 x i8], [17 x i8]* %bits_table, i32 0, i32 0, !dbg !2606
  %arraydecay79 = getelementptr inbounds [256 x i8], [256 x i8]* %val_table, i32 0, i32 0, !dbg !2607
  %55 = load i32, i32* %code_max, align 4, !dbg !2608
  %add80 = add nsw i32 %55, 1, !dbg !2609
  %call81 = call i32 @build_vlc(%struct.VLC* %arrayidx77, i8* %arraydecay78, i8* %arraydecay79, i32 %add80, i32 0, i32 0), !dbg !2610
  store i32 %call81, i32* %ret, align 4, !dbg !2611
  %cmp82 = icmp slt i32 %call81, 0, !dbg !2612
  br i1 %cmp82, label %if.then84, label %if.end85, !dbg !2613

if.then84:                                        ; preds = %if.then69
  %56 = load i32, i32* %ret, align 4, !dbg !2614
  store i32 %56, i32* %retval, align 4, !dbg !2615
  br label %return, !dbg !2615

if.end85:                                         ; preds = %if.then69
  br label %if.end86, !dbg !2616

if.end86:                                         ; preds = %if.end85, %if.end66
  store i32 0, i32* %i, align 4, !dbg !2617
  br label %for.cond87, !dbg !2619

for.cond87:                                       ; preds = %for.inc100, %if.end86
  %57 = load i32, i32* %i, align 4, !dbg !2620
  %cmp88 = icmp slt i32 %57, 16, !dbg !2623
  br i1 %cmp88, label %for.body90, label %for.end102, !dbg !2624

for.body90:                                       ; preds = %for.cond87
  %58 = load i32, i32* %i, align 4, !dbg !2625
  %add91 = add nsw i32 %58, 1, !dbg !2626
  %idxprom92 = sext i32 %add91 to i64, !dbg !2627
  %arrayidx93 = getelementptr inbounds [17 x i8], [17 x i8]* %bits_table, i64 0, i64 %idxprom92, !dbg !2627
  %59 = load i8, i8* %arrayidx93, align 1, !dbg !2627
  %60 = load i32, i32* %i, align 4, !dbg !2628
  %idxprom94 = sext i32 %60 to i64, !dbg !2629
  %61 = load i32, i32* %index, align 4, !dbg !2630
  %idxprom95 = sext i32 %61 to i64, !dbg !2629
  %62 = load i32, i32* %class, align 4, !dbg !2631
  %idxprom96 = sext i32 %62 to i64, !dbg !2629
  %63 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2629
  %raw_huffman_lengths = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %63, i32 0, i32 90, !dbg !2632
  %arrayidx97 = getelementptr inbounds [2 x [4 x [16 x i8]]], [2 x [4 x [16 x i8]]]* %raw_huffman_lengths, i64 0, i64 %idxprom96, !dbg !2629
  %arrayidx98 = getelementptr inbounds [4 x [16 x i8]], [4 x [16 x i8]]* %arrayidx97, i64 0, i64 %idxprom95, !dbg !2629
  %arrayidx99 = getelementptr inbounds [16 x i8], [16 x i8]* %arrayidx98, i64 0, i64 %idxprom94, !dbg !2629
  store i8 %59, i8* %arrayidx99, align 1, !dbg !2633
  br label %for.inc100, !dbg !2629

for.inc100:                                       ; preds = %for.body90
  %64 = load i32, i32* %i, align 4, !dbg !2634
  %inc101 = add nsw i32 %64, 1, !dbg !2634
  store i32 %inc101, i32* %i, align 4, !dbg !2634
  br label %for.cond87, !dbg !2636, !llvm.loop !2637

for.end102:                                       ; preds = %for.cond87
  store i32 0, i32* %i, align 4, !dbg !2639
  br label %for.cond103, !dbg !2641

for.cond103:                                      ; preds = %for.inc115, %for.end102
  %65 = load i32, i32* %i, align 4, !dbg !2642
  %cmp104 = icmp slt i32 %65, 256, !dbg !2645
  br i1 %cmp104, label %for.body106, label %for.end117, !dbg !2646

for.body106:                                      ; preds = %for.cond103
  %66 = load i32, i32* %i, align 4, !dbg !2647
  %idxprom107 = sext i32 %66 to i64, !dbg !2648
  %arrayidx108 = getelementptr inbounds [256 x i8], [256 x i8]* %val_table, i64 0, i64 %idxprom107, !dbg !2648
  %67 = load i8, i8* %arrayidx108, align 1, !dbg !2648
  %68 = load i32, i32* %i, align 4, !dbg !2649
  %idxprom109 = sext i32 %68 to i64, !dbg !2650
  %69 = load i32, i32* %index, align 4, !dbg !2651
  %idxprom110 = sext i32 %69 to i64, !dbg !2650
  %70 = load i32, i32* %class, align 4, !dbg !2652
  %idxprom111 = sext i32 %70 to i64, !dbg !2650
  %71 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2650
  %raw_huffman_values = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %71, i32 0, i32 91, !dbg !2653
  %arrayidx112 = getelementptr inbounds [2 x [4 x [256 x i8]]], [2 x [4 x [256 x i8]]]* %raw_huffman_values, i64 0, i64 %idxprom111, !dbg !2650
  %arrayidx113 = getelementptr inbounds [4 x [256 x i8]], [4 x [256 x i8]]* %arrayidx112, i64 0, i64 %idxprom110, !dbg !2650
  %arrayidx114 = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx113, i64 0, i64 %idxprom109, !dbg !2650
  store i8 %67, i8* %arrayidx114, align 1, !dbg !2654
  br label %for.inc115, !dbg !2650

for.inc115:                                       ; preds = %for.body106
  %72 = load i32, i32* %i, align 4, !dbg !2655
  %inc116 = add nsw i32 %72, 1, !dbg !2655
  store i32 %inc116, i32* %i, align 4, !dbg !2655
  br label %for.cond103, !dbg !2657, !llvm.loop !2658

for.end117:                                       ; preds = %for.cond103
  br label %while.cond, !dbg !2660, !llvm.loop !2662

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !2663
  br label %return, !dbg !2663

return:                                           ; preds = %while.end, %if.then84, %if.then65, %if.then28, %if.then15, %if.then10, %if.then5, %if.then
  %73 = load i32, i32* %retval, align 4, !dbg !2664
  ret i32 %73, !dbg !2664
}

; Function Attrs: nounwind uwtable
define internal void @parse_avid(%struct.MJpegDecodeContext* %s, i8* %buf, i32 %len) #3 !dbg !2665 {
entry:
  %s.addr = alloca %struct.MJpegDecodeContext*, align 8
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  store %struct.MJpegDecodeContext* %s, %struct.MJpegDecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MJpegDecodeContext** %s.addr, metadata !2668, metadata !2073), !dbg !2669
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !2670, metadata !2073), !dbg !2671
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !2672, metadata !2073), !dbg !2673
  %0 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2674
  %buggy_avid = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %0, i32 0, i32 69, !dbg !2675
  store i32 1, i32* %buggy_avid, align 16, !dbg !2676
  %1 = load i32, i32* %len.addr, align 4, !dbg !2677
  %cmp = icmp sgt i32 %1, 14, !dbg !2679
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !2680

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !2681
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 12, !dbg !2681
  %3 = load i8, i8* %arrayidx, align 1, !dbg !2681
  %conv = zext i8 %3 to i32, !dbg !2681
  %cmp1 = icmp eq i32 %conv, 1, !dbg !2683
  br i1 %cmp1, label %if.then, label %if.end, !dbg !2684

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2685
  %interlace_polarity = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %4, i32 0, i32 71, !dbg !2686
  store i32 1, i32* %interlace_polarity, align 8, !dbg !2687
  br label %if.end, !dbg !2685

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %5 = load i32, i32* %len.addr, align 4, !dbg !2688
  %cmp3 = icmp sgt i32 %5, 14, !dbg !2690
  br i1 %cmp3, label %land.lhs.true5, label %if.end12, !dbg !2691

land.lhs.true5:                                   ; preds = %if.end
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !2692
  %arrayidx6 = getelementptr inbounds i8, i8* %6, i64 12, !dbg !2692
  %7 = load i8, i8* %arrayidx6, align 1, !dbg !2692
  %conv7 = zext i8 %7 to i32, !dbg !2692
  %cmp8 = icmp eq i32 %conv7, 2, !dbg !2694
  br i1 %cmp8, label %if.then10, label %if.end12, !dbg !2695

if.then10:                                        ; preds = %land.lhs.true5
  %8 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2696
  %interlace_polarity11 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %8, i32 0, i32 71, !dbg !2697
  store i32 0, i32* %interlace_polarity11, align 8, !dbg !2698
  br label %if.end12, !dbg !2696

if.end12:                                         ; preds = %if.then10, %land.lhs.true5, %if.end
  %9 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2699
  %avctx = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %9, i32 0, i32 1, !dbg !2701
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !2701
  %debug = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %10, i32 0, i32 134, !dbg !2702
  %11 = load i32, i32* %debug, align 4, !dbg !2702
  %and = and i32 %11, 1, !dbg !2703
  %tobool = icmp ne i32 %and, 0, !dbg !2703
  br i1 %tobool, label %if.then13, label %if.end19, !dbg !2704

if.then13:                                        ; preds = %if.end12
  %12 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2705
  %avctx14 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %12, i32 0, i32 1, !dbg !2706
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx14, align 8, !dbg !2706
  %14 = bitcast %struct.AVCodecContext* %13 to i8*, !dbg !2705
  %15 = load i32, i32* %len.addr, align 4, !dbg !2707
  %16 = load i32, i32* %len.addr, align 4, !dbg !2708
  %cmp15 = icmp sgt i32 %16, 14, !dbg !2709
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !2708

cond.true:                                        ; preds = %if.then13
  %17 = load i8*, i8** %buf.addr, align 8, !dbg !2710
  %arrayidx17 = getelementptr inbounds i8, i8* %17, i64 12, !dbg !2710
  %18 = load i8, i8* %arrayidx17, align 1, !dbg !2710
  %conv18 = zext i8 %18 to i32, !dbg !2710
  br label %cond.end, !dbg !2712

cond.false:                                       ; preds = %if.then13
  br label %cond.end, !dbg !2713

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv18, %cond.true ], [ -1, %cond.false ], !dbg !2715
  call void (i8*, i32, i8*, ...) @av_log(i8* %14, i32 32, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.78, i32 0, i32 0), i32 %15, i32 %cond), !dbg !2717
  br label %if.end19, !dbg !2717

if.end19:                                         ; preds = %cond.end, %if.end12
  ret void, !dbg !2718
}

; Function Attrs: nounwind uwtable
define i32 @ff_mjpeg_decode_dqt(%struct.MJpegDecodeContext* %s) #3 !dbg !2719 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.MJpegDecodeContext*, align 8
  %len = alloca i32, align 4
  %index = alloca i32, align 4
  %i = alloca i32, align 4
  %pr = alloca i32, align 4
  store %struct.MJpegDecodeContext* %s, %struct.MJpegDecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MJpegDecodeContext** %s.addr, metadata !2720, metadata !2073), !dbg !2721
  call void @llvm.dbg.declare(metadata i32* %len, metadata !2722, metadata !2073), !dbg !2723
  call void @llvm.dbg.declare(metadata i32* %index, metadata !2724, metadata !2073), !dbg !2725
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2726, metadata !2073), !dbg !2727
  %0 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2728
  %gb = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %0, i32 0, i32 2, !dbg !2729
  %call = call i32 @get_bits(%struct.GetBitContext* %gb, i32 16), !dbg !2730
  %sub = sub i32 %call, 2, !dbg !2731
  store i32 %sub, i32* %len, align 4, !dbg !2732
  %1 = load i32, i32* %len, align 4, !dbg !2733
  %mul = mul nsw i32 8, %1, !dbg !2735
  %2 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2736
  %gb1 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %2, i32 0, i32 2, !dbg !2737
  %call2 = call i32 @get_bits_left(%struct.GetBitContext* %gb1), !dbg !2738
  %cmp = icmp sgt i32 %mul, %call2, !dbg !2739
  br i1 %cmp, label %if.then, label %if.end, !dbg !2740

if.then:                                          ; preds = %entry
  %3 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2741
  %avctx = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %3, i32 0, i32 1, !dbg !2743
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !2743
  %5 = bitcast %struct.AVCodecContext* %4 to i8*, !dbg !2741
  %6 = load i32, i32* %len, align 4, !dbg !2744
  call void (i8*, i32, i8*, ...) @av_log(i8* %5, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i32 0, i32 0), i32 %6), !dbg !2745
  store i32 -1094995529, i32* %retval, align 4, !dbg !2746
  br label %return, !dbg !2746

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !2747

while.cond:                                       ; preds = %cond.end, %if.end
  %7 = load i32, i32* %len, align 4, !dbg !2748
  %cmp3 = icmp sge i32 %7, 65, !dbg !2750
  br i1 %cmp3, label %while.body, label %while.end, !dbg !2751

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %pr, metadata !2752, metadata !2073), !dbg !2754
  %8 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2755
  %gb4 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %8, i32 0, i32 2, !dbg !2756
  %call5 = call i32 @get_bits(%struct.GetBitContext* %gb4, i32 4), !dbg !2757
  store i32 %call5, i32* %pr, align 4, !dbg !2754
  %9 = load i32, i32* %pr, align 4, !dbg !2758
  %cmp6 = icmp sgt i32 %9, 1, !dbg !2760
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !2761

if.then7:                                         ; preds = %while.body
  %10 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2762
  %avctx8 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %10, i32 0, i32 1, !dbg !2764
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx8, align 8, !dbg !2764
  %12 = bitcast %struct.AVCodecContext* %11 to i8*, !dbg !2762
  call void (i8*, i32, i8*, ...) @av_log(i8* %12, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i32 0, i32 0)), !dbg !2765
  store i32 -1094995529, i32* %retval, align 4, !dbg !2766
  br label %return, !dbg !2766

if.end9:                                          ; preds = %while.body
  %13 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2767
  %gb10 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %13, i32 0, i32 2, !dbg !2768
  %call11 = call i32 @get_bits(%struct.GetBitContext* %gb10, i32 4), !dbg !2769
  store i32 %call11, i32* %index, align 4, !dbg !2770
  %14 = load i32, i32* %index, align 4, !dbg !2771
  %cmp12 = icmp sge i32 %14, 4, !dbg !2773
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !2774

if.then13:                                        ; preds = %if.end9
  store i32 -1, i32* %retval, align 4, !dbg !2775
  br label %return, !dbg !2775

if.end14:                                         ; preds = %if.end9
  %15 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2776
  %avctx15 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %15, i32 0, i32 1, !dbg !2777
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx15, align 8, !dbg !2777
  %17 = bitcast %struct.AVCodecContext* %16 to i8*, !dbg !2776
  %18 = load i32, i32* %index, align 4, !dbg !2778
  call void (i8*, i32, i8*, ...) @av_log(i8* %17, i32 48, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i32 0, i32 0), i32 %18), !dbg !2779
  store i32 0, i32* %i, align 4, !dbg !2780
  br label %for.cond, !dbg !2782

for.cond:                                         ; preds = %for.inc, %if.end14
  %19 = load i32, i32* %i, align 4, !dbg !2783
  %cmp16 = icmp slt i32 %19, 64, !dbg !2786
  br i1 %cmp16, label %for.body, label %for.end, !dbg !2787

for.body:                                         ; preds = %for.cond
  %20 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2788
  %gb17 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %20, i32 0, i32 2, !dbg !2790
  %21 = load i32, i32* %pr, align 4, !dbg !2791
  %tobool = icmp ne i32 %21, 0, !dbg !2791
  %cond = select i1 %tobool, i32 16, i32 8, !dbg !2791
  %call18 = call i32 @get_bits(%struct.GetBitContext* %gb17, i32 %cond), !dbg !2792
  %conv = trunc i32 %call18 to i16, !dbg !2792
  %22 = load i32, i32* %i, align 4, !dbg !2793
  %idxprom = sext i32 %22 to i64, !dbg !2794
  %23 = load i32, i32* %index, align 4, !dbg !2795
  %idxprom19 = sext i32 %23 to i64, !dbg !2794
  %24 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2794
  %quant_matrixes = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %24, i32 0, i32 7, !dbg !2796
  %arrayidx = getelementptr inbounds [4 x [64 x i16]], [4 x [64 x i16]]* %quant_matrixes, i64 0, i64 %idxprom19, !dbg !2794
  %arrayidx20 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx, i64 0, i64 %idxprom, !dbg !2794
  store i16 %conv, i16* %arrayidx20, align 2, !dbg !2797
  %25 = load i32, i32* %i, align 4, !dbg !2798
  %idxprom21 = sext i32 %25 to i64, !dbg !2800
  %26 = load i32, i32* %index, align 4, !dbg !2801
  %idxprom22 = sext i32 %26 to i64, !dbg !2800
  %27 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2800
  %quant_matrixes23 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %27, i32 0, i32 7, !dbg !2802
  %arrayidx24 = getelementptr inbounds [4 x [64 x i16]], [4 x [64 x i16]]* %quant_matrixes23, i64 0, i64 %idxprom22, !dbg !2800
  %arrayidx25 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx24, i64 0, i64 %idxprom21, !dbg !2800
  %28 = load i16, i16* %arrayidx25, align 2, !dbg !2800
  %conv26 = zext i16 %28 to i32, !dbg !2800
  %cmp27 = icmp eq i32 %conv26, 0, !dbg !2803
  br i1 %cmp27, label %if.then29, label %if.end31, !dbg !2804

if.then29:                                        ; preds = %for.body
  %29 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2805
  %avctx30 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %29, i32 0, i32 1, !dbg !2807
  %30 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx30, align 8, !dbg !2807
  %31 = bitcast %struct.AVCodecContext* %30 to i8*, !dbg !2805
  call void (i8*, i32, i8*, ...) @av_log(i8* %31, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i32 0, i32 0)), !dbg !2808
  store i32 -1094995529, i32* %retval, align 4, !dbg !2809
  br label %return, !dbg !2809

if.end31:                                         ; preds = %for.body
  br label %for.inc, !dbg !2810

for.inc:                                          ; preds = %if.end31
  %32 = load i32, i32* %i, align 4, !dbg !2811
  %inc = add nsw i32 %32, 1, !dbg !2811
  store i32 %inc, i32* %i, align 4, !dbg !2811
  br label %for.cond, !dbg !2813, !llvm.loop !2814

for.end:                                          ; preds = %for.cond
  %33 = load i32, i32* %index, align 4, !dbg !2816
  %idxprom32 = sext i32 %33 to i64, !dbg !2817
  %34 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2817
  %quant_matrixes33 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %34, i32 0, i32 7, !dbg !2818
  %arrayidx34 = getelementptr inbounds [4 x [64 x i16]], [4 x [64 x i16]]* %quant_matrixes33, i64 0, i64 %idxprom32, !dbg !2817
  %arrayidx35 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx34, i64 0, i64 1, !dbg !2817
  %35 = load i16, i16* %arrayidx35, align 2, !dbg !2817
  %conv36 = zext i16 %35 to i32, !dbg !2819
  %36 = load i32, i32* %index, align 4, !dbg !2820
  %idxprom37 = sext i32 %36 to i64, !dbg !2821
  %37 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2821
  %quant_matrixes38 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %37, i32 0, i32 7, !dbg !2822
  %arrayidx39 = getelementptr inbounds [4 x [64 x i16]], [4 x [64 x i16]]* %quant_matrixes38, i64 0, i64 %idxprom37, !dbg !2821
  %arrayidx40 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx39, i64 0, i64 8, !dbg !2821
  %38 = load i16, i16* %arrayidx40, align 8, !dbg !2821
  %conv41 = zext i16 %38 to i32, !dbg !2823
  %cmp42 = icmp sgt i32 %conv36, %conv41, !dbg !2824
  br i1 %cmp42, label %cond.true, label %cond.false, !dbg !2819

cond.true:                                        ; preds = %for.end
  %39 = load i32, i32* %index, align 4, !dbg !2825
  %idxprom44 = sext i32 %39 to i64, !dbg !2827
  %40 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2827
  %quant_matrixes45 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %40, i32 0, i32 7, !dbg !2828
  %arrayidx46 = getelementptr inbounds [4 x [64 x i16]], [4 x [64 x i16]]* %quant_matrixes45, i64 0, i64 %idxprom44, !dbg !2827
  %arrayidx47 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx46, i64 0, i64 1, !dbg !2827
  %41 = load i16, i16* %arrayidx47, align 2, !dbg !2827
  %conv48 = zext i16 %41 to i32, !dbg !2829
  br label %cond.end, !dbg !2830

cond.false:                                       ; preds = %for.end
  %42 = load i32, i32* %index, align 4, !dbg !2831
  %idxprom49 = sext i32 %42 to i64, !dbg !2833
  %43 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2833
  %quant_matrixes50 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %43, i32 0, i32 7, !dbg !2834
  %arrayidx51 = getelementptr inbounds [4 x [64 x i16]], [4 x [64 x i16]]* %quant_matrixes50, i64 0, i64 %idxprom49, !dbg !2833
  %arrayidx52 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx51, i64 0, i64 8, !dbg !2833
  %44 = load i16, i16* %arrayidx52, align 8, !dbg !2833
  %conv53 = zext i16 %44 to i32, !dbg !2835
  br label %cond.end, !dbg !2836

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond54 = phi i32 [ %conv48, %cond.true ], [ %conv53, %cond.false ], !dbg !2837
  %shr = ashr i32 %cond54, 1, !dbg !2839
  %45 = load i32, i32* %index, align 4, !dbg !2840
  %idxprom55 = sext i32 %45 to i64, !dbg !2841
  %46 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2841
  %qscale = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %46, i32 0, i32 9, !dbg !2842
  %arrayidx56 = getelementptr inbounds [4 x i32], [4 x i32]* %qscale, i64 0, i64 %idxprom55, !dbg !2841
  store i32 %shr, i32* %arrayidx56, align 4, !dbg !2843
  %47 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2844
  %avctx57 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %47, i32 0, i32 1, !dbg !2845
  %48 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx57, align 8, !dbg !2845
  %49 = bitcast %struct.AVCodecContext* %48 to i8*, !dbg !2844
  %50 = load i32, i32* %index, align 4, !dbg !2846
  %51 = load i32, i32* %index, align 4, !dbg !2847
  %idxprom58 = sext i32 %51 to i64, !dbg !2848
  %52 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !2848
  %qscale59 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %52, i32 0, i32 9, !dbg !2849
  %arrayidx60 = getelementptr inbounds [4 x i32], [4 x i32]* %qscale59, i64 0, i64 %idxprom58, !dbg !2848
  %53 = load i32, i32* %arrayidx60, align 4, !dbg !2848
  call void (i8*, i32, i8*, ...) @av_log(i8* %49, i32 48, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i32 0, i32 0), i32 %50, i32 %53), !dbg !2850
  %54 = load i32, i32* %pr, align 4, !dbg !2851
  %add = add nsw i32 1, %54, !dbg !2852
  %mul61 = mul nsw i32 64, %add, !dbg !2853
  %add62 = add nsw i32 1, %mul61, !dbg !2854
  %55 = load i32, i32* %len, align 4, !dbg !2855
  %sub63 = sub nsw i32 %55, %add62, !dbg !2855
  store i32 %sub63, i32* %len, align 4, !dbg !2855
  br label %while.cond, !dbg !2856, !llvm.loop !2858

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !2859
  br label %return, !dbg !2859

return:                                           ; preds = %while.end, %if.then29, %if.then13, %if.then7, %if.then
  %56 = load i32, i32* %retval, align 4, !dbg !2860
  ret i32 %56, !dbg !2860
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits(%struct.GetBitContext* %s, i32 %n) #4 !dbg !2861 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2864, metadata !2073), !dbg !2869
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !2871, metadata !2073), !dbg !2872
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !2873, metadata !2073), !dbg !2874
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !2875, metadata !2073), !dbg !2876
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !2877, metadata !2073), !dbg !2878
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2879
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !2880
  %1 = load i32, i32* %index, align 8, !dbg !2880
  store i32 %1, i32* %re_index, align 4, !dbg !2878
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !2881, metadata !2073), !dbg !2882
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !2883, metadata !2073), !dbg !2884
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2885
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !2886
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !2886
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !2884
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2887
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !2888
  %5 = load i8*, i8** %buffer, align 8, !dbg !2888
  %6 = load i32, i32* %re_index, align 4, !dbg !2889
  %shr = lshr i32 %6, 3, !dbg !2890
  %idx.ext = zext i32 %shr to i64, !dbg !2891
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !2891
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !2892
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !2892
  %8 = load i32, i32* %l, align 1, !dbg !2892
  store i32 %8, i32* %x.addr.i, align 4, !dbg !2893
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !2894
  %shl.i = shl i32 %9, 8, !dbg !2895
  %and.i = and i32 %shl.i, 65280, !dbg !2896
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !2897
  %shr.i = lshr i32 %10, 8, !dbg !2898
  %and1.i = and i32 %shr.i, 255, !dbg !2899
  %or.i = or i32 %and.i, %and1.i, !dbg !2900
  %shl2.i = shl i32 %or.i, 16, !dbg !2901
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !2902
  %shr3.i = lshr i32 %11, 16, !dbg !2903
  %shl4.i = shl i32 %shr3.i, 8, !dbg !2904
  %and5.i = and i32 %shl4.i, 65280, !dbg !2905
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !2906
  %shr6.i = lshr i32 %12, 16, !dbg !2907
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !2908
  %and8.i = and i32 %shr7.i, 255, !dbg !2909
  %or9.i = or i32 %and5.i, %and8.i, !dbg !2910
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !2911
  %13 = load i32, i32* %re_index, align 4, !dbg !2912
  %and = and i32 %13, 7, !dbg !2913
  %shl = shl i32 %or10.i, %and, !dbg !2914
  store i32 %shl, i32* %re_cache, align 4, !dbg !2915
  %14 = load i32, i32* %re_cache, align 4, !dbg !2916
  %15 = load i32, i32* %n.addr, align 4, !dbg !2917
  %conv = trunc i32 %15 to i8, !dbg !2917
  %call4 = call i32 @NEG_USR32(i32 %14, i8 signext %conv), !dbg !2918
  store i32 %call4, i32* %tmp, align 4, !dbg !2919
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !2920
  %17 = load i32, i32* %re_index, align 4, !dbg !2921
  %18 = load i32, i32* %n.addr, align 4, !dbg !2922
  %add = add i32 %17, %18, !dbg !2923
  %cmp = icmp ugt i32 %16, %add, !dbg !2924
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !2925

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !2926
  %20 = load i32, i32* %n.addr, align 4, !dbg !2928
  %add6 = add i32 %19, %20, !dbg !2929
  br label %cond.end, !dbg !2930

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !2931
  br label %cond.end, !dbg !2933

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ %21, %cond.false ], !dbg !2934
  store i32 %cond, i32* %re_index, align 4, !dbg !2936
  %22 = load i32, i32* %re_index, align 4, !dbg !2937
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2938
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !2939
  store i32 %22, i32* %index7, align 8, !dbg !2940
  %24 = load i32, i32* %tmp, align 4, !dbg !2941
  ret i32 %24, !dbg !2942
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_left(%struct.GetBitContext* %gb) #4 !dbg !2943 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !2946, metadata !2073), !dbg !2947
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2948
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 3, !dbg !2949
  %1 = load i32, i32* %size_in_bits, align 4, !dbg !2949
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2950
  %call = call i32 @get_bits_count(%struct.GetBitContext* %2), !dbg !2951
  %sub = sub nsw i32 %1, %call, !dbg !2952
  ret i32 %sub, !dbg !2953
}

declare void @ff_free_vlc(%struct.VLC*) #2

; Function Attrs: nounwind uwtable
define internal i32 @build_vlc(%struct.VLC* %vlc, i8* %bits_table, i8* %val_table, i32 %nb_codes, i32 %use_static, i32 %is_ac) #3 !dbg !2954 {
entry:
  %vlc.addr = alloca %struct.VLC*, align 8
  %bits_table.addr = alloca i8*, align 8
  %val_table.addr = alloca i8*, align 8
  %nb_codes.addr = alloca i32, align 4
  %use_static.addr = alloca i32, align 4
  %is_ac.addr = alloca i32, align 4
  %huff_size = alloca [256 x i8], align 16
  %huff_code = alloca [256 x i16], align 16
  %huff_sym = alloca [256 x i16], align 16
  %i = alloca i32, align 4
  store %struct.VLC* %vlc, %struct.VLC** %vlc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VLC** %vlc.addr, metadata !2958, metadata !2073), !dbg !2959
  store i8* %bits_table, i8** %bits_table.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bits_table.addr, metadata !2960, metadata !2073), !dbg !2961
  store i8* %val_table, i8** %val_table.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %val_table.addr, metadata !2962, metadata !2073), !dbg !2963
  store i32 %nb_codes, i32* %nb_codes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_codes.addr, metadata !2964, metadata !2073), !dbg !2965
  store i32 %use_static, i32* %use_static.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %use_static.addr, metadata !2966, metadata !2073), !dbg !2967
  store i32 %is_ac, i32* %is_ac.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is_ac.addr, metadata !2968, metadata !2073), !dbg !2969
  call void @llvm.dbg.declare(metadata [256 x i8]* %huff_size, metadata !2970, metadata !2073), !dbg !2971
  %0 = bitcast [256 x i8]* %huff_size to i8*, !dbg !2971
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 256, i32 16, i1 false), !dbg !2971
  call void @llvm.dbg.declare(metadata [256 x i16]* %huff_code, metadata !2972, metadata !2073), !dbg !2974
  call void @llvm.dbg.declare(metadata [256 x i16]* %huff_sym, metadata !2975, metadata !2073), !dbg !2976
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2977, metadata !2073), !dbg !2978
  br label %do.body, !dbg !2979, !llvm.loop !2980

do.body:                                          ; preds = %entry
  %1 = load i32, i32* %nb_codes.addr, align 4, !dbg !2981
  %cmp = icmp sle i32 %1, 256, !dbg !2985
  br i1 %cmp, label %if.end, label %if.then, !dbg !2986

if.then:                                          ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.26, i32 0, i32 0), i32 62), !dbg !2987
  call void @abort() #8, !dbg !2990
  unreachable, !dbg !2992

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !2993

do.end:                                           ; preds = %if.end
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %huff_size, i32 0, i32 0, !dbg !2995
  %arraydecay1 = getelementptr inbounds [256 x i16], [256 x i16]* %huff_code, i32 0, i32 0, !dbg !2996
  %2 = load i8*, i8** %bits_table.addr, align 8, !dbg !2997
  %3 = load i8*, i8** %val_table.addr, align 8, !dbg !2998
  call void @ff_mjpeg_build_huffman_codes(i8* %arraydecay, i16* %arraydecay1, i8* %2, i8* %3), !dbg !2999
  store i32 0, i32* %i, align 4, !dbg !3000
  br label %for.cond, !dbg !3002

for.cond:                                         ; preds = %for.inc, %do.end
  %4 = load i32, i32* %i, align 4, !dbg !3003
  %cmp2 = icmp slt i32 %4, 256, !dbg !3006
  br i1 %cmp2, label %for.body, label %for.end, !dbg !3007

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %i, align 4, !dbg !3008
  %6 = load i32, i32* %is_ac.addr, align 4, !dbg !3009
  %mul = mul nsw i32 16, %6, !dbg !3010
  %add = add nsw i32 %5, %mul, !dbg !3011
  %conv = trunc i32 %add to i16, !dbg !3008
  %7 = load i32, i32* %i, align 4, !dbg !3012
  %idxprom = sext i32 %7 to i64, !dbg !3013
  %arrayidx = getelementptr inbounds [256 x i16], [256 x i16]* %huff_sym, i64 0, i64 %idxprom, !dbg !3013
  store i16 %conv, i16* %arrayidx, align 2, !dbg !3014
  br label %for.inc, !dbg !3013

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !3015
  %inc = add nsw i32 %8, 1, !dbg !3015
  store i32 %inc, i32* %i, align 4, !dbg !3015
  br label %for.cond, !dbg !3017, !llvm.loop !3018

for.end:                                          ; preds = %for.cond
  %9 = load i32, i32* %is_ac.addr, align 4, !dbg !3020
  %tobool = icmp ne i32 %9, 0, !dbg !3020
  br i1 %tobool, label %if.then3, label %if.end5, !dbg !3022

if.then3:                                         ; preds = %for.end
  %arrayidx4 = getelementptr inbounds [256 x i16], [256 x i16]* %huff_sym, i64 0, i64 0, !dbg !3023
  store i16 4096, i16* %arrayidx4, align 16, !dbg !3024
  br label %if.end5, !dbg !3023

if.end5:                                          ; preds = %if.then3, %for.end
  %10 = load %struct.VLC*, %struct.VLC** %vlc.addr, align 8, !dbg !3025
  %11 = load i32, i32* %nb_codes.addr, align 4, !dbg !3026
  %arraydecay6 = getelementptr inbounds [256 x i8], [256 x i8]* %huff_size, i32 0, i32 0, !dbg !3027
  %arraydecay7 = getelementptr inbounds [256 x i16], [256 x i16]* %huff_code, i32 0, i32 0, !dbg !3028
  %12 = bitcast i16* %arraydecay7 to i8*, !dbg !3028
  %arraydecay8 = getelementptr inbounds [256 x i16], [256 x i16]* %huff_sym, i32 0, i32 0, !dbg !3029
  %13 = bitcast i16* %arraydecay8 to i8*, !dbg !3029
  %14 = load i32, i32* %use_static.addr, align 4, !dbg !3030
  %call = call i32 @ff_init_vlc_sparse(%struct.VLC* %10, i32 9, i32 %11, i8* %arraydecay6, i32 1, i32 1, i8* %12, i32 2, i32 2, i8* %13, i32 2, i32 2, i32 %14), !dbg !3031
  ret i32 %call, !dbg !3032
}

; Function Attrs: nounwind uwtable
define i32 @ff_mjpeg_decode_sof(%struct.MJpegDecodeContext* %s) #3 !dbg !3033 {
entry:
  %x.addr.i1175 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i1175, metadata !2864, metadata !2073), !dbg !3034
  %x.addr.i1160 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i1160, metadata !2864, metadata !2073), !dbg !3039
  %x.addr.i1145 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i1145, metadata !2864, metadata !2073), !dbg !3042
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2864, metadata !2073), !dbg !3046
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.MJpegDecodeContext*, align 8
  %len = alloca i32, align 4
  %nb_components = alloca i32, align 4
  %i = alloca i32, align 4
  %width = alloca i32, align 4
  %height = alloca i32, align 4
  %bits = alloca i32, align 4
  %ret = alloca i32, align 4
  %size_change = alloca i32, align 4
  %pix_fmt_id = alloca i32, align 4
  %h_count = alloca [4 x i32], align 16
  %v_count = alloca [4 x i32], align 16
  %j = alloca i32, align 4
  %is = alloca i32, align 4
  %js = alloca i32, align 4
  %pix_fmts = alloca [2 x i32], align 4
  %bw = alloca i32, align 4
  %bh = alloca i32, align 4
  %size = alloca i32, align 4
  store %struct.MJpegDecodeContext* %s, %struct.MJpegDecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MJpegDecodeContext** %s.addr, metadata !3048, metadata !2073), !dbg !3049
  call void @llvm.dbg.declare(metadata i32* %len, metadata !3050, metadata !2073), !dbg !3051
  call void @llvm.dbg.declare(metadata i32* %nb_components, metadata !3052, metadata !2073), !dbg !3053
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3054, metadata !2073), !dbg !3055
  call void @llvm.dbg.declare(metadata i32* %width, metadata !3056, metadata !2073), !dbg !3057
  call void @llvm.dbg.declare(metadata i32* %height, metadata !3058, metadata !2073), !dbg !3059
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !3060, metadata !2073), !dbg !3061
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3062, metadata !2073), !dbg !3063
  call void @llvm.dbg.declare(metadata i32* %size_change, metadata !3064, metadata !2073), !dbg !3065
  call void @llvm.dbg.declare(metadata i32* %pix_fmt_id, metadata !3066, metadata !2073), !dbg !3067
  call void @llvm.dbg.declare(metadata [4 x i32]* %h_count, metadata !3068, metadata !2073), !dbg !3069
  %0 = bitcast [4 x i32]* %h_count to i8*, !dbg !3069
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 16, i32 16, i1 false), !dbg !3069
  call void @llvm.dbg.declare(metadata [4 x i32]* %v_count, metadata !3070, metadata !2073), !dbg !3071
  %1 = bitcast [4 x i32]* %v_count to i8*, !dbg !3071
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 16, i32 16, i1 false), !dbg !3071
  %2 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3072
  %cur_scan = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %2, i32 0, i32 74, !dbg !3073
  store i32 0, i32* %cur_scan, align 4, !dbg !3074
  %3 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3075
  %upscale_h = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %3, i32 0, i32 18, !dbg !3076
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_h, i32 0, i32 0, !dbg !3077
  call void @llvm.memset.p0i8.i64(i8* %arraydecay, i8 0, i64 4, i32 8, i1 false), !dbg !3077
  %4 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3078
  %upscale_v = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %4, i32 0, i32 19, !dbg !3079
  %arraydecay1 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_v, i32 0, i32 0, !dbg !3080
  call void @llvm.memset.p0i8.i64(i8* %arraydecay1, i8 0, i64 4, i32 4, i1 false), !dbg !3080
  %5 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3081
  %gb = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %5, i32 0, i32 2, !dbg !3082
  %call = call i32 @get_bits(%struct.GetBitContext* %gb, i32 16), !dbg !3083
  store i32 %call, i32* %len, align 4, !dbg !3084
  %6 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3085
  %gb2 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %6, i32 0, i32 2, !dbg !3086
  %call3 = call i32 @get_bits(%struct.GetBitContext* %gb2, i32 8), !dbg !3087
  store i32 %call3, i32* %bits, align 4, !dbg !3088
  %7 = load i32, i32* %bits, align 4, !dbg !3089
  %cmp = icmp sgt i32 %7, 16, !dbg !3091
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3092

lor.lhs.false:                                    ; preds = %entry
  %8 = load i32, i32* %bits, align 4, !dbg !3093
  %cmp4 = icmp slt i32 %8, 1, !dbg !3095
  br i1 %cmp4, label %if.then, label %if.end, !dbg !3096

if.then:                                          ; preds = %lor.lhs.false, %entry
  %9 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3097
  %avctx = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %9, i32 0, i32 1, !dbg !3099
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3099
  %11 = bitcast %struct.AVCodecContext* %10 to i8*, !dbg !3097
  %12 = load i32, i32* %bits, align 4, !dbg !3100
  call void (i8*, i32, i8*, ...) @av_log(i8* %11, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.11, i32 0, i32 0), i32 %12), !dbg !3101
  store i32 -1094995529, i32* %retval, align 4, !dbg !3102
  br label %return, !dbg !3102

if.end:                                           ; preds = %lor.lhs.false
  %13 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3103
  %avctx5 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %13, i32 0, i32 1, !dbg !3105
  %14 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx5, align 8, !dbg !3105
  %bits_per_raw_sample = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %14, i32 0, i32 143, !dbg !3106
  %15 = load i32, i32* %bits_per_raw_sample, align 4, !dbg !3106
  %16 = load i32, i32* %bits, align 4, !dbg !3107
  %cmp6 = icmp ne i32 %15, %16, !dbg !3108
  br i1 %cmp6, label %if.then7, label %if.end17, !dbg !3109

if.then7:                                         ; preds = %if.end
  %17 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3110
  %avctx8 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %17, i32 0, i32 1, !dbg !3112
  %18 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx8, align 8, !dbg !3112
  %19 = bitcast %struct.AVCodecContext* %18 to i8*, !dbg !3110
  %20 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3113
  %avctx9 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %20, i32 0, i32 1, !dbg !3114
  %21 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx9, align 8, !dbg !3114
  %bits_per_raw_sample10 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %21, i32 0, i32 143, !dbg !3115
  %22 = load i32, i32* %bits_per_raw_sample10, align 4, !dbg !3115
  %cmp11 = icmp sgt i32 %22, 0, !dbg !3116
  %cond = select i1 %cmp11, i32 32, i32 48, !dbg !3113
  %23 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3117
  %avctx12 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %23, i32 0, i32 1, !dbg !3118
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx12, align 8, !dbg !3118
  %bits_per_raw_sample13 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %24, i32 0, i32 143, !dbg !3119
  %25 = load i32, i32* %bits_per_raw_sample13, align 4, !dbg !3119
  %26 = load i32, i32* %bits, align 4, !dbg !3120
  call void (i8*, i32, i8*, ...) @av_log(i8* %19, i32 %cond, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i32 0, i32 0), i32 %25, i32 %26), !dbg !3121
  %27 = load i32, i32* %bits, align 4, !dbg !3122
  %28 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3123
  %avctx14 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %28, i32 0, i32 1, !dbg !3124
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx14, align 8, !dbg !3124
  %bits_per_raw_sample15 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %29, i32 0, i32 143, !dbg !3125
  store i32 %27, i32* %bits_per_raw_sample15, align 4, !dbg !3126
  %30 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3127
  %avctx16 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %30, i32 0, i32 1, !dbg !3128
  %31 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx16, align 8, !dbg !3128
  call void @init_idct(%struct.AVCodecContext* %31), !dbg !3129
  br label %if.end17, !dbg !3130

if.end17:                                         ; preds = %if.then7, %if.end
  %32 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3131
  %pegasus_rct = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %32, i32 0, i32 21, !dbg !3133
  %33 = load i32, i32* %pegasus_rct, align 4, !dbg !3133
  %tobool = icmp ne i32 %33, 0, !dbg !3131
  br i1 %tobool, label %if.then18, label %if.end19, !dbg !3134

if.then18:                                        ; preds = %if.end17
  store i32 9, i32* %bits, align 4, !dbg !3135
  br label %if.end19, !dbg !3136

if.end19:                                         ; preds = %if.then18, %if.end17
  %34 = load i32, i32* %bits, align 4, !dbg !3137
  %cmp20 = icmp eq i32 %34, 9, !dbg !3139
  br i1 %cmp20, label %land.lhs.true, label %if.end24, !dbg !3140

land.lhs.true:                                    ; preds = %if.end19
  %35 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3141
  %pegasus_rct21 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %35, i32 0, i32 21, !dbg !3143
  %36 = load i32, i32* %pegasus_rct21, align 4, !dbg !3143
  %tobool22 = icmp ne i32 %36, 0, !dbg !3141
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !3144

if.then23:                                        ; preds = %land.lhs.true
  %37 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3145
  %rct = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %37, i32 0, i32 20, !dbg !3146
  store i32 1, i32* %rct, align 32, !dbg !3147
  br label %if.end24, !dbg !3145

if.end24:                                         ; preds = %if.then23, %land.lhs.true, %if.end19
  %38 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3148
  %lossless = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %38, i32 0, i32 14, !dbg !3150
  %39 = load i32, i32* %lossless, align 8, !dbg !3150
  %tobool25 = icmp ne i32 %39, 0, !dbg !3148
  br i1 %tobool25, label %land.lhs.true26, label %if.end31, !dbg !3151

land.lhs.true26:                                  ; preds = %if.end24
  %40 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3152
  %avctx27 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %40, i32 0, i32 1, !dbg !3154
  %41 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx27, align 8, !dbg !3154
  %lowres = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %41, i32 0, i32 144, !dbg !3155
  %42 = load i32, i32* %lowres, align 8, !dbg !3155
  %tobool28 = icmp ne i32 %42, 0, !dbg !3152
  br i1 %tobool28, label %if.then29, label %if.end31, !dbg !3156

if.then29:                                        ; preds = %land.lhs.true26
  %43 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3157
  %avctx30 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %43, i32 0, i32 1, !dbg !3159
  %44 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx30, align 8, !dbg !3159
  %45 = bitcast %struct.AVCodecContext* %44 to i8*, !dbg !3157
  call void (i8*, i32, i8*, ...) @av_log(i8* %45, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13, i32 0, i32 0)), !dbg !3160
  store i32 -1, i32* %retval, align 4, !dbg !3161
  br label %return, !dbg !3161

if.end31:                                         ; preds = %land.lhs.true26, %if.end24
  %46 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3162
  %gb32 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %46, i32 0, i32 2, !dbg !3163
  %call33 = call i32 @get_bits(%struct.GetBitContext* %gb32, i32 16), !dbg !3164
  store i32 %call33, i32* %height, align 4, !dbg !3165
  %47 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3166
  %gb34 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %47, i32 0, i32 2, !dbg !3167
  %call35 = call i32 @get_bits(%struct.GetBitContext* %gb34, i32 16), !dbg !3168
  store i32 %call35, i32* %width, align 4, !dbg !3169
  %48 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3170
  %interlaced = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %48, i32 0, i32 12, !dbg !3172
  %49 = load i32, i32* %interlaced, align 32, !dbg !3172
  %tobool36 = icmp ne i32 %49, 0, !dbg !3170
  br i1 %tobool36, label %land.lhs.true37, label %if.end45, !dbg !3173

land.lhs.true37:                                  ; preds = %if.end31
  %50 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3174
  %width38 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %50, i32 0, i32 32, !dbg !3176
  %51 = load i32, i32* %width38, align 16, !dbg !3176
  %52 = load i32, i32* %width, align 4, !dbg !3177
  %cmp39 = icmp eq i32 %51, %52, !dbg !3178
  br i1 %cmp39, label %land.lhs.true40, label %if.end45, !dbg !3179

land.lhs.true40:                                  ; preds = %land.lhs.true37
  %53 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3180
  %height41 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %53, i32 0, i32 33, !dbg !3182
  %54 = load i32, i32* %height41, align 4, !dbg !3182
  %55 = load i32, i32* %height, align 4, !dbg !3183
  %add = add nsw i32 %55, 1, !dbg !3184
  %cmp42 = icmp eq i32 %54, %add, !dbg !3185
  br i1 %cmp42, label %if.then43, label %if.end45, !dbg !3186

if.then43:                                        ; preds = %land.lhs.true40
  %56 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3187
  %height44 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %56, i32 0, i32 33, !dbg !3188
  %57 = load i32, i32* %height44, align 4, !dbg !3188
  store i32 %57, i32* %height, align 4, !dbg !3189
  br label %if.end45, !dbg !3190

if.end45:                                         ; preds = %if.then43, %land.lhs.true40, %land.lhs.true37, %if.end31
  %58 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3191
  %avctx46 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %58, i32 0, i32 1, !dbg !3192
  %59 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx46, align 8, !dbg !3192
  %60 = bitcast %struct.AVCodecContext* %59 to i8*, !dbg !3191
  %61 = load i32, i32* %width, align 4, !dbg !3193
  %62 = load i32, i32* %height, align 4, !dbg !3194
  call void (i8*, i32, i8*, ...) @av_log(i8* %60, i32 48, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i32 0, i32 0), i32 %61, i32 %62), !dbg !3195
  %63 = load i32, i32* %width, align 4, !dbg !3196
  %64 = load i32, i32* %height, align 4, !dbg !3198
  %65 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3199
  %avctx47 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %65, i32 0, i32 1, !dbg !3200
  %66 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx47, align 8, !dbg !3200
  %67 = bitcast %struct.AVCodecContext* %66 to i8*, !dbg !3199
  %call48 = call i32 @av_image_check_size(i32 %63, i32 %64, i32 0, i8* %67), !dbg !3201
  %cmp49 = icmp slt i32 %call48, 0, !dbg !3202
  br i1 %cmp49, label %if.then50, label %if.end51, !dbg !3203

if.then50:                                        ; preds = %if.end45
  store i32 -1094995529, i32* %retval, align 4, !dbg !3204
  br label %return, !dbg !3204

if.end51:                                         ; preds = %if.end45
  %68 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3205
  %buf_size = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %68, i32 0, i32 3, !dbg !3207
  %69 = load i32, i32* %buf_size, align 16, !dbg !3207
  %tobool52 = icmp ne i32 %69, 0, !dbg !3205
  br i1 %tobool52, label %land.lhs.true53, label %if.end63, !dbg !3208

land.lhs.true53:                                  ; preds = %if.end51
  %70 = load i32, i32* %width, align 4, !dbg !3209
  %add54 = add nsw i32 %70, 7, !dbg !3211
  %div = sdiv i32 %add54, 8, !dbg !3212
  %71 = load i32, i32* %height, align 4, !dbg !3213
  %add55 = add nsw i32 %71, 7, !dbg !3214
  %div56 = sdiv i32 %add55, 8, !dbg !3215
  %mul = mul nsw i32 %div, %div56, !dbg !3216
  %conv = sext i32 %mul to i64, !dbg !3217
  %72 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3218
  %buf_size57 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %72, i32 0, i32 3, !dbg !3219
  %73 = load i32, i32* %buf_size57, align 16, !dbg !3219
  %conv58 = sext i32 %73 to i64, !dbg !3218
  %mul59 = mul nsw i64 %conv58, 4, !dbg !3220
  %cmp60 = icmp sgt i64 %conv, %mul59, !dbg !3221
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !3222

if.then62:                                        ; preds = %land.lhs.true53
  store i32 -1094995529, i32* %retval, align 4, !dbg !3223
  br label %return, !dbg !3223

if.end63:                                         ; preds = %land.lhs.true53, %if.end51
  %74 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3224
  %gb64 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %74, i32 0, i32 2, !dbg !3225
  %call65 = call i32 @get_bits(%struct.GetBitContext* %gb64, i32 8), !dbg !3226
  store i32 %call65, i32* %nb_components, align 4, !dbg !3227
  %75 = load i32, i32* %nb_components, align 4, !dbg !3228
  %cmp66 = icmp sle i32 %75, 0, !dbg !3230
  br i1 %cmp66, label %if.then71, label %lor.lhs.false68, !dbg !3231

lor.lhs.false68:                                  ; preds = %if.end63
  %76 = load i32, i32* %nb_components, align 4, !dbg !3232
  %cmp69 = icmp sgt i32 %76, 4, !dbg !3233
  br i1 %cmp69, label %if.then71, label %if.end72, !dbg !3234

if.then71:                                        ; preds = %lor.lhs.false68, %if.end63
  store i32 -1, i32* %retval, align 4, !dbg !3236
  br label %return, !dbg !3236

if.end72:                                         ; preds = %lor.lhs.false68
  %77 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3237
  %interlaced73 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %77, i32 0, i32 12, !dbg !3239
  %78 = load i32, i32* %interlaced73, align 32, !dbg !3239
  %tobool74 = icmp ne i32 %78, 0, !dbg !3237
  br i1 %tobool74, label %land.lhs.true75, label %if.end86, !dbg !3240

land.lhs.true75:                                  ; preds = %if.end72
  %79 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3241
  %bottom_field = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %79, i32 0, i32 13, !dbg !3243
  %80 = load i32, i32* %bottom_field, align 4, !dbg !3243
  %81 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3244
  %interlace_polarity = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %81, i32 0, i32 71, !dbg !3245
  %82 = load i32, i32* %interlace_polarity, align 8, !dbg !3245
  %tobool76 = icmp ne i32 %82, 0, !dbg !3246
  %lnot = xor i1 %tobool76, true, !dbg !3246
  %lnot.ext = zext i1 %lnot to i32, !dbg !3246
  %cmp77 = icmp eq i32 %80, %lnot.ext, !dbg !3247
  br i1 %cmp77, label %if.then79, label %if.end86, !dbg !3248

if.then79:                                        ; preds = %land.lhs.true75
  %83 = load i32, i32* %nb_components, align 4, !dbg !3249
  %84 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3252
  %nb_components80 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %84, i32 0, i32 36, !dbg !3253
  %85 = load i32, i32* %nb_components80, align 32, !dbg !3253
  %cmp81 = icmp ne i32 %83, %85, !dbg !3254
  br i1 %cmp81, label %if.then83, label %if.end85, !dbg !3255

if.then83:                                        ; preds = %if.then79
  %86 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3256
  %avctx84 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %86, i32 0, i32 1, !dbg !3258
  %87 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx84, align 8, !dbg !3258
  %88 = bitcast %struct.AVCodecContext* %87 to i8*, !dbg !3256
  call void (i8*, i32, i8*, ...) @av_log(i8* %88, i32 16, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.15, i32 0, i32 0)), !dbg !3259
  store i32 -1094995529, i32* %retval, align 4, !dbg !3260
  br label %return, !dbg !3260

if.end85:                                         ; preds = %if.then79
  br label %if.end86, !dbg !3261

if.end86:                                         ; preds = %if.end85, %land.lhs.true75, %if.end72
  %89 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3262
  %ls = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %89, i32 0, i32 15, !dbg !3264
  %90 = load i32, i32* %ls, align 4, !dbg !3264
  %tobool87 = icmp ne i32 %90, 0, !dbg !3262
  br i1 %tobool87, label %land.lhs.true88, label %if.end96, !dbg !3265

land.lhs.true88:                                  ; preds = %if.end86
  %91 = load i32, i32* %bits, align 4, !dbg !3266
  %cmp89 = icmp sle i32 %91, 8, !dbg !3268
  br i1 %cmp89, label %if.end96, label %lor.lhs.false91, !dbg !3269

lor.lhs.false91:                                  ; preds = %land.lhs.true88
  %92 = load i32, i32* %nb_components, align 4, !dbg !3270
  %cmp92 = icmp eq i32 %92, 1, !dbg !3272
  br i1 %cmp92, label %if.end96, label %if.then94, !dbg !3273

if.then94:                                        ; preds = %lor.lhs.false91
  %93 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3274
  %avctx95 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %93, i32 0, i32 1, !dbg !3276
  %94 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx95, align 8, !dbg !3276
  %95 = bitcast %struct.AVCodecContext* %94 to i8*, !dbg !3274
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %95, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.16, i32 0, i32 0)), !dbg !3277
  store i32 -1163346256, i32* %retval, align 4, !dbg !3278
  br label %return, !dbg !3278

if.end96:                                         ; preds = %lor.lhs.false91, %land.lhs.true88, %if.end86
  %96 = load i32, i32* %len, align 4, !dbg !3279
  %97 = load i32, i32* %nb_components, align 4, !dbg !3281
  %mul97 = mul nsw i32 3, %97, !dbg !3282
  %add98 = add nsw i32 8, %mul97, !dbg !3283
  %cmp99 = icmp ne i32 %96, %add98, !dbg !3284
  br i1 %cmp99, label %if.then101, label %if.end103, !dbg !3285

if.then101:                                       ; preds = %if.end96
  %98 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3286
  %avctx102 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %98, i32 0, i32 1, !dbg !3288
  %99 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx102, align 8, !dbg !3288
  %100 = bitcast %struct.AVCodecContext* %99 to i8*, !dbg !3286
  %101 = load i32, i32* %len, align 4, !dbg !3289
  %102 = load i32, i32* %nb_components, align 4, !dbg !3290
  call void (i8*, i32, i8*, ...) @av_log(i8* %100, i32 16, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.17, i32 0, i32 0), i32 %101, i32 %102), !dbg !3291
  store i32 -1094995529, i32* %retval, align 4, !dbg !3292
  br label %return, !dbg !3292

if.end103:                                        ; preds = %if.end96
  %103 = load i32, i32* %nb_components, align 4, !dbg !3293
  %104 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3294
  %nb_components104 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %104, i32 0, i32 36, !dbg !3295
  store i32 %103, i32* %nb_components104, align 32, !dbg !3296
  %105 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3297
  %h_max = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %105, i32 0, i32 48, !dbg !3298
  store i32 1, i32* %h_max, align 4, !dbg !3299
  %106 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3300
  %v_max = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %106, i32 0, i32 49, !dbg !3301
  store i32 1, i32* %v_max, align 8, !dbg !3302
  store i32 0, i32* %i, align 4, !dbg !3303
  br label %for.cond, !dbg !3305

for.cond:                                         ; preds = %for.inc, %if.end103
  %107 = load i32, i32* %i, align 4, !dbg !3306
  %108 = load i32, i32* %nb_components, align 4, !dbg !3309
  %cmp105 = icmp slt i32 %107, %108, !dbg !3310
  br i1 %cmp105, label %for.body, label %for.end, !dbg !3311

for.body:                                         ; preds = %for.cond
  %109 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3312
  %gb107 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %109, i32 0, i32 2, !dbg !3314
  %call108 = call i32 @get_bits(%struct.GetBitContext* %gb107, i32 8), !dbg !3315
  %sub = sub i32 %call108, 1, !dbg !3316
  %110 = load i32, i32* %i, align 4, !dbg !3317
  %idxprom = sext i32 %110 to i64, !dbg !3318
  %111 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3318
  %component_id = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %111, i32 0, i32 38, !dbg !3319
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %component_id, i64 0, i64 %idxprom, !dbg !3318
  store i32 %sub, i32* %arrayidx, align 4, !dbg !3320
  %112 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3321
  %gb109 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %112, i32 0, i32 2, !dbg !3322
  %call110 = call i32 @get_bits(%struct.GetBitContext* %gb109, i32 4), !dbg !3323
  %113 = load i32, i32* %i, align 4, !dbg !3324
  %idxprom111 = sext i32 %113 to i64, !dbg !3325
  %arrayidx112 = getelementptr inbounds [4 x i32], [4 x i32]* %h_count, i64 0, i64 %idxprom111, !dbg !3325
  store i32 %call110, i32* %arrayidx112, align 4, !dbg !3326
  %114 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3327
  %gb113 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %114, i32 0, i32 2, !dbg !3328
  %call114 = call i32 @get_bits(%struct.GetBitContext* %gb113, i32 4), !dbg !3329
  %115 = load i32, i32* %i, align 4, !dbg !3330
  %idxprom115 = sext i32 %115 to i64, !dbg !3331
  %arrayidx116 = getelementptr inbounds [4 x i32], [4 x i32]* %v_count, i64 0, i64 %idxprom115, !dbg !3331
  store i32 %call114, i32* %arrayidx116, align 4, !dbg !3332
  %116 = load i32, i32* %i, align 4, !dbg !3333
  %idxprom117 = sext i32 %116 to i64, !dbg !3335
  %arrayidx118 = getelementptr inbounds [4 x i32], [4 x i32]* %h_count, i64 0, i64 %idxprom117, !dbg !3335
  %117 = load i32, i32* %arrayidx118, align 4, !dbg !3335
  %118 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3336
  %h_max119 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %118, i32 0, i32 48, !dbg !3337
  %119 = load i32, i32* %h_max119, align 4, !dbg !3337
  %cmp120 = icmp sgt i32 %117, %119, !dbg !3338
  br i1 %cmp120, label %if.then122, label %if.end126, !dbg !3339

if.then122:                                       ; preds = %for.body
  %120 = load i32, i32* %i, align 4, !dbg !3340
  %idxprom123 = sext i32 %120 to i64, !dbg !3341
  %arrayidx124 = getelementptr inbounds [4 x i32], [4 x i32]* %h_count, i64 0, i64 %idxprom123, !dbg !3341
  %121 = load i32, i32* %arrayidx124, align 4, !dbg !3341
  %122 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3342
  %h_max125 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %122, i32 0, i32 48, !dbg !3343
  store i32 %121, i32* %h_max125, align 4, !dbg !3344
  br label %if.end126, !dbg !3342

if.end126:                                        ; preds = %if.then122, %for.body
  %123 = load i32, i32* %i, align 4, !dbg !3345
  %idxprom127 = sext i32 %123 to i64, !dbg !3347
  %arrayidx128 = getelementptr inbounds [4 x i32], [4 x i32]* %v_count, i64 0, i64 %idxprom127, !dbg !3347
  %124 = load i32, i32* %arrayidx128, align 4, !dbg !3347
  %125 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3348
  %v_max129 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %125, i32 0, i32 49, !dbg !3349
  %126 = load i32, i32* %v_max129, align 8, !dbg !3349
  %cmp130 = icmp sgt i32 %124, %126, !dbg !3350
  br i1 %cmp130, label %if.then132, label %if.end136, !dbg !3351

if.then132:                                       ; preds = %if.end126
  %127 = load i32, i32* %i, align 4, !dbg !3352
  %idxprom133 = sext i32 %127 to i64, !dbg !3353
  %arrayidx134 = getelementptr inbounds [4 x i32], [4 x i32]* %v_count, i64 0, i64 %idxprom133, !dbg !3353
  %128 = load i32, i32* %arrayidx134, align 4, !dbg !3353
  %129 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3354
  %v_max135 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %129, i32 0, i32 49, !dbg !3355
  store i32 %128, i32* %v_max135, align 8, !dbg !3356
  br label %if.end136, !dbg !3354

if.end136:                                        ; preds = %if.then132, %if.end126
  %130 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3357
  %gb137 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %130, i32 0, i32 2, !dbg !3358
  %call138 = call i32 @get_bits(%struct.GetBitContext* %gb137, i32 8), !dbg !3359
  %131 = load i32, i32* %i, align 4, !dbg !3360
  %idxprom139 = sext i32 %131 to i64, !dbg !3361
  %132 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3361
  %quant_index = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %132, i32 0, i32 50, !dbg !3362
  %arrayidx140 = getelementptr inbounds [4 x i32], [4 x i32]* %quant_index, i64 0, i64 %idxprom139, !dbg !3361
  store i32 %call138, i32* %arrayidx140, align 4, !dbg !3363
  %133 = load i32, i32* %i, align 4, !dbg !3364
  %idxprom141 = sext i32 %133 to i64, !dbg !3366
  %134 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3366
  %quant_index142 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %134, i32 0, i32 50, !dbg !3367
  %arrayidx143 = getelementptr inbounds [4 x i32], [4 x i32]* %quant_index142, i64 0, i64 %idxprom141, !dbg !3366
  %135 = load i32, i32* %arrayidx143, align 4, !dbg !3366
  %cmp144 = icmp sge i32 %135, 4, !dbg !3368
  br i1 %cmp144, label %if.then146, label %if.end148, !dbg !3369

if.then146:                                       ; preds = %if.end136
  %136 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3370
  %avctx147 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %136, i32 0, i32 1, !dbg !3372
  %137 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx147, align 8, !dbg !3372
  %138 = bitcast %struct.AVCodecContext* %137 to i8*, !dbg !3370
  call void (i8*, i32, i8*, ...) @av_log(i8* %138, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18, i32 0, i32 0)), !dbg !3373
  store i32 -1094995529, i32* %retval, align 4, !dbg !3374
  br label %return, !dbg !3374

if.end148:                                        ; preds = %if.end136
  %139 = load i32, i32* %i, align 4, !dbg !3375
  %idxprom149 = sext i32 %139 to i64, !dbg !3377
  %arrayidx150 = getelementptr inbounds [4 x i32], [4 x i32]* %h_count, i64 0, i64 %idxprom149, !dbg !3377
  %140 = load i32, i32* %arrayidx150, align 4, !dbg !3377
  %tobool151 = icmp ne i32 %140, 0, !dbg !3377
  br i1 %tobool151, label %lor.lhs.false152, label %if.then156, !dbg !3378

lor.lhs.false152:                                 ; preds = %if.end148
  %141 = load i32, i32* %i, align 4, !dbg !3379
  %idxprom153 = sext i32 %141 to i64, !dbg !3381
  %arrayidx154 = getelementptr inbounds [4 x i32], [4 x i32]* %v_count, i64 0, i64 %idxprom153, !dbg !3381
  %142 = load i32, i32* %arrayidx154, align 4, !dbg !3381
  %tobool155 = icmp ne i32 %142, 0, !dbg !3381
  br i1 %tobool155, label %if.end162, label %if.then156, !dbg !3382

if.then156:                                       ; preds = %lor.lhs.false152, %if.end148
  %143 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3383
  %avctx157 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %143, i32 0, i32 1, !dbg !3385
  %144 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx157, align 8, !dbg !3385
  %145 = bitcast %struct.AVCodecContext* %144 to i8*, !dbg !3383
  %146 = load i32, i32* %i, align 4, !dbg !3386
  %147 = load i32, i32* %i, align 4, !dbg !3387
  %idxprom158 = sext i32 %147 to i64, !dbg !3388
  %arrayidx159 = getelementptr inbounds [4 x i32], [4 x i32]* %h_count, i64 0, i64 %idxprom158, !dbg !3388
  %148 = load i32, i32* %arrayidx159, align 4, !dbg !3388
  %149 = load i32, i32* %i, align 4, !dbg !3389
  %idxprom160 = sext i32 %149 to i64, !dbg !3390
  %arrayidx161 = getelementptr inbounds [4 x i32], [4 x i32]* %v_count, i64 0, i64 %idxprom160, !dbg !3390
  %150 = load i32, i32* %arrayidx161, align 4, !dbg !3390
  call void (i8*, i32, i8*, ...) @av_log(i8* %145, i32 16, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.19, i32 0, i32 0), i32 %146, i32 %148, i32 %150), !dbg !3391
  store i32 -1094995529, i32* %retval, align 4, !dbg !3392
  br label %return, !dbg !3392

if.end162:                                        ; preds = %lor.lhs.false152
  %151 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3393
  %avctx163 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %151, i32 0, i32 1, !dbg !3394
  %152 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx163, align 8, !dbg !3394
  %153 = bitcast %struct.AVCodecContext* %152 to i8*, !dbg !3393
  %154 = load i32, i32* %i, align 4, !dbg !3395
  %155 = load i32, i32* %i, align 4, !dbg !3396
  %idxprom164 = sext i32 %155 to i64, !dbg !3397
  %arrayidx165 = getelementptr inbounds [4 x i32], [4 x i32]* %h_count, i64 0, i64 %idxprom164, !dbg !3397
  %156 = load i32, i32* %arrayidx165, align 4, !dbg !3397
  %157 = load i32, i32* %i, align 4, !dbg !3398
  %idxprom166 = sext i32 %157 to i64, !dbg !3399
  %arrayidx167 = getelementptr inbounds [4 x i32], [4 x i32]* %v_count, i64 0, i64 %idxprom166, !dbg !3399
  %158 = load i32, i32* %arrayidx167, align 4, !dbg !3399
  %159 = load i32, i32* %i, align 4, !dbg !3400
  %idxprom168 = sext i32 %159 to i64, !dbg !3401
  %160 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3401
  %component_id169 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %160, i32 0, i32 38, !dbg !3402
  %arrayidx170 = getelementptr inbounds [4 x i32], [4 x i32]* %component_id169, i64 0, i64 %idxprom168, !dbg !3401
  %161 = load i32, i32* %arrayidx170, align 4, !dbg !3401
  %162 = load i32, i32* %i, align 4, !dbg !3403
  %idxprom171 = sext i32 %162 to i64, !dbg !3404
  %163 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3404
  %quant_index172 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %163, i32 0, i32 50, !dbg !3405
  %arrayidx173 = getelementptr inbounds [4 x i32], [4 x i32]* %quant_index172, i64 0, i64 %idxprom171, !dbg !3404
  %164 = load i32, i32* %arrayidx173, align 4, !dbg !3404
  call void (i8*, i32, i8*, ...) @av_log(i8* %153, i32 48, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.20, i32 0, i32 0), i32 %154, i32 %156, i32 %158, i32 %161, i32 %164), !dbg !3406
  br label %for.inc, !dbg !3407

for.inc:                                          ; preds = %if.end162
  %165 = load i32, i32* %i, align 4, !dbg !3408
  %inc = add nsw i32 %165, 1, !dbg !3408
  store i32 %inc, i32* %i, align 4, !dbg !3408
  br label %for.cond, !dbg !3410, !llvm.loop !3411

for.end:                                          ; preds = %for.cond
  %166 = load i32, i32* %nb_components, align 4, !dbg !3413
  %cmp174 = icmp eq i32 %166, 4, !dbg !3415
  br i1 %cmp174, label %land.lhs.true176, label %if.end197, !dbg !3416

land.lhs.true176:                                 ; preds = %for.end
  %167 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3417
  %component_id177 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %167, i32 0, i32 38, !dbg !3419
  %arrayidx178 = getelementptr inbounds [4 x i32], [4 x i32]* %component_id177, i64 0, i64 0, !dbg !3417
  %168 = load i32, i32* %arrayidx178, align 4, !dbg !3417
  %cmp179 = icmp eq i32 %168, 66, !dbg !3420
  br i1 %cmp179, label %land.lhs.true181, label %if.end197, !dbg !3421

land.lhs.true181:                                 ; preds = %land.lhs.true176
  %169 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3422
  %component_id182 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %169, i32 0, i32 38, !dbg !3423
  %arrayidx183 = getelementptr inbounds [4 x i32], [4 x i32]* %component_id182, i64 0, i64 1, !dbg !3422
  %170 = load i32, i32* %arrayidx183, align 4, !dbg !3422
  %cmp184 = icmp eq i32 %170, 76, !dbg !3424
  br i1 %cmp184, label %land.lhs.true186, label %if.end197, !dbg !3425

land.lhs.true186:                                 ; preds = %land.lhs.true181
  %171 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3426
  %component_id187 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %171, i32 0, i32 38, !dbg !3427
  %arrayidx188 = getelementptr inbounds [4 x i32], [4 x i32]* %component_id187, i64 0, i64 2, !dbg !3426
  %172 = load i32, i32* %arrayidx188, align 4, !dbg !3426
  %cmp189 = icmp eq i32 %172, 88, !dbg !3428
  br i1 %cmp189, label %land.lhs.true191, label %if.end197, !dbg !3429

land.lhs.true191:                                 ; preds = %land.lhs.true186
  %173 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3430
  %component_id192 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %173, i32 0, i32 38, !dbg !3431
  %arrayidx193 = getelementptr inbounds [4 x i32], [4 x i32]* %component_id192, i64 0, i64 3, !dbg !3430
  %174 = load i32, i32* %arrayidx193, align 4, !dbg !3430
  %cmp194 = icmp eq i32 %174, 74, !dbg !3432
  br i1 %cmp194, label %if.then196, label %if.end197, !dbg !3433

if.then196:                                       ; preds = %land.lhs.true191
  %175 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3434
  %adobe_transform = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %175, i32 0, i32 25, !dbg !3435
  store i32 0, i32* %adobe_transform, align 4, !dbg !3436
  br label %if.end197, !dbg !3434

if.end197:                                        ; preds = %if.then196, %land.lhs.true191, %land.lhs.true186, %land.lhs.true181, %land.lhs.true176, %for.end
  %176 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3437
  %ls198 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %176, i32 0, i32 15, !dbg !3439
  %177 = load i32, i32* %ls198, align 4, !dbg !3439
  %tobool199 = icmp ne i32 %177, 0, !dbg !3437
  br i1 %tobool199, label %land.lhs.true200, label %if.end210, !dbg !3440

land.lhs.true200:                                 ; preds = %if.end197
  %178 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3441
  %h_max201 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %178, i32 0, i32 48, !dbg !3443
  %179 = load i32, i32* %h_max201, align 4, !dbg !3443
  %cmp202 = icmp sgt i32 %179, 1, !dbg !3444
  br i1 %cmp202, label %if.then208, label %lor.lhs.false204, !dbg !3445

lor.lhs.false204:                                 ; preds = %land.lhs.true200
  %180 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3446
  %v_max205 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %180, i32 0, i32 49, !dbg !3448
  %181 = load i32, i32* %v_max205, align 8, !dbg !3448
  %cmp206 = icmp sgt i32 %181, 1, !dbg !3449
  br i1 %cmp206, label %if.then208, label %if.end210, !dbg !3450

if.then208:                                       ; preds = %lor.lhs.false204, %land.lhs.true200
  %182 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3451
  %avctx209 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %182, i32 0, i32 1, !dbg !3453
  %183 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx209, align 8, !dbg !3453
  %184 = bitcast %struct.AVCodecContext* %183 to i8*, !dbg !3451
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %184, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i32 0, i32 0)), !dbg !3454
  store i32 -1163346256, i32* %retval, align 4, !dbg !3455
  br label %return, !dbg !3455

if.end210:                                        ; preds = %lor.lhs.false204, %if.end197
  %185 = load i32, i32* %width, align 4, !dbg !3456
  %186 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3458
  %width211 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %186, i32 0, i32 32, !dbg !3459
  %187 = load i32, i32* %width211, align 16, !dbg !3459
  %cmp212 = icmp ne i32 %185, %187, !dbg !3460
  br i1 %cmp212, label %if.then234, label %lor.lhs.false214, !dbg !3461

lor.lhs.false214:                                 ; preds = %if.end210
  %188 = load i32, i32* %height, align 4, !dbg !3462
  %189 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3464
  %height215 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %189, i32 0, i32 33, !dbg !3465
  %190 = load i32, i32* %height215, align 4, !dbg !3465
  %cmp216 = icmp ne i32 %188, %190, !dbg !3466
  br i1 %cmp216, label %if.then234, label %lor.lhs.false218, !dbg !3467

lor.lhs.false218:                                 ; preds = %lor.lhs.false214
  %191 = load i32, i32* %bits, align 4, !dbg !3468
  %192 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3470
  %bits219 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %192, i32 0, i32 22, !dbg !3471
  %193 = load i32, i32* %bits219, align 8, !dbg !3471
  %cmp220 = icmp ne i32 %191, %193, !dbg !3472
  br i1 %cmp220, label %if.then234, label %lor.lhs.false222, !dbg !3473

lor.lhs.false222:                                 ; preds = %lor.lhs.false218
  %194 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3474
  %h_count223 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %194, i32 0, i32 39, !dbg !3475
  %arraydecay224 = getelementptr inbounds [4 x i32], [4 x i32]* %h_count223, i32 0, i32 0, !dbg !3474
  %195 = bitcast i32* %arraydecay224 to i8*, !dbg !3474
  %arraydecay225 = getelementptr inbounds [4 x i32], [4 x i32]* %h_count, i32 0, i32 0, !dbg !3476
  %196 = bitcast i32* %arraydecay225 to i8*, !dbg !3476
  %call226 = call i32 @memcmp(i8* %195, i8* %196, i64 16) #9, !dbg !3477
  %tobool227 = icmp ne i32 %call226, 0, !dbg !3477
  br i1 %tobool227, label %if.then234, label %lor.lhs.false228, !dbg !3478

lor.lhs.false228:                                 ; preds = %lor.lhs.false222
  %197 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3479
  %v_count229 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %197, i32 0, i32 40, !dbg !3480
  %arraydecay230 = getelementptr inbounds [4 x i32], [4 x i32]* %v_count229, i32 0, i32 0, !dbg !3479
  %198 = bitcast i32* %arraydecay230 to i8*, !dbg !3479
  %arraydecay231 = getelementptr inbounds [4 x i32], [4 x i32]* %v_count, i32 0, i32 0, !dbg !3481
  %199 = bitcast i32* %arraydecay231 to i8*, !dbg !3481
  %call232 = call i32 @memcmp(i8* %198, i8* %199, i64 16) #9, !dbg !3482
  %tobool233 = icmp ne i32 %call232, 0, !dbg !3482
  br i1 %tobool233, label %if.then234, label %if.else, !dbg !3483

if.then234:                                       ; preds = %lor.lhs.false228, %lor.lhs.false222, %lor.lhs.false218, %lor.lhs.false214, %if.end210
  store i32 1, i32* %size_change, align 4, !dbg !3485
  %200 = load i32, i32* %width, align 4, !dbg !3487
  %201 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3488
  %width235 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %201, i32 0, i32 32, !dbg !3489
  store i32 %200, i32* %width235, align 16, !dbg !3490
  %202 = load i32, i32* %height, align 4, !dbg !3491
  %203 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3492
  %height236 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %203, i32 0, i32 33, !dbg !3493
  store i32 %202, i32* %height236, align 4, !dbg !3494
  %204 = load i32, i32* %bits, align 4, !dbg !3495
  %205 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3496
  %bits237 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %205, i32 0, i32 22, !dbg !3497
  store i32 %204, i32* %bits237, align 8, !dbg !3498
  %206 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3499
  %h_count238 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %206, i32 0, i32 39, !dbg !3500
  %arraydecay239 = getelementptr inbounds [4 x i32], [4 x i32]* %h_count238, i32 0, i32 0, !dbg !3501
  %207 = bitcast i32* %arraydecay239 to i8*, !dbg !3501
  %arraydecay240 = getelementptr inbounds [4 x i32], [4 x i32]* %h_count, i32 0, i32 0, !dbg !3501
  %208 = bitcast i32* %arraydecay240 to i8*, !dbg !3501
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %207, i8* %208, i64 16, i32 4, i1 false), !dbg !3501
  %209 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3502
  %v_count241 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %209, i32 0, i32 40, !dbg !3503
  %arraydecay242 = getelementptr inbounds [4 x i32], [4 x i32]* %v_count241, i32 0, i32 0, !dbg !3504
  %210 = bitcast i32* %arraydecay242 to i8*, !dbg !3504
  %arraydecay243 = getelementptr inbounds [4 x i32], [4 x i32]* %v_count, i32 0, i32 0, !dbg !3504
  %211 = bitcast i32* %arraydecay243 to i8*, !dbg !3504
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %210, i8* %211, i64 16, i32 4, i1 false), !dbg !3504
  %212 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3505
  %interlaced244 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %212, i32 0, i32 12, !dbg !3506
  store i32 0, i32* %interlaced244, align 32, !dbg !3507
  %213 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3508
  %got_picture = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %213, i32 0, i32 54, !dbg !3509
  store i32 0, i32* %got_picture, align 16, !dbg !3510
  %214 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3511
  %first_picture = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %214, i32 0, i32 11, !dbg !3513
  %215 = load i32, i32* %first_picture, align 4, !dbg !3513
  %tobool245 = icmp ne i32 %215, 0, !dbg !3511
  br i1 %tobool245, label %land.lhs.true246, label %if.end276, !dbg !3514

land.lhs.true246:                                 ; preds = %if.then234
  %216 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3515
  %multiscope = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %216, i32 0, i32 72, !dbg !3516
  %217 = load i32, i32* %multiscope, align 4, !dbg !3516
  %cmp247 = icmp ne i32 %217, 2, !dbg !3517
  br i1 %cmp247, label %land.lhs.true256, label %lor.lhs.false249, !dbg !3518

lor.lhs.false249:                                 ; preds = %land.lhs.true246
  %218 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3519
  %avctx250 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %218, i32 0, i32 1, !dbg !3521
  %219 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx250, align 8, !dbg !3521
  %time_base = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %219, i32 0, i32 17, !dbg !3522
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base, i32 0, i32 1, !dbg !3523
  %220 = load i32, i32* %den, align 4, !dbg !3523
  %221 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3524
  %avctx251 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %221, i32 0, i32 1, !dbg !3525
  %222 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx251, align 8, !dbg !3525
  %time_base252 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %222, i32 0, i32 17, !dbg !3526
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base252, i32 0, i32 0, !dbg !3527
  %223 = load i32, i32* %num, align 4, !dbg !3527
  %mul253 = mul nsw i32 25, %223, !dbg !3528
  %cmp254 = icmp sge i32 %220, %mul253, !dbg !3529
  br i1 %cmp254, label %land.lhs.true256, label %if.end276, !dbg !3530

land.lhs.true256:                                 ; preds = %lor.lhs.false249, %land.lhs.true246
  %224 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3531
  %org_height = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %224, i32 0, i32 10, !dbg !3532
  %225 = load i32, i32* %org_height, align 8, !dbg !3532
  %cmp257 = icmp ne i32 %225, 0, !dbg !3533
  br i1 %cmp257, label %land.lhs.true259, label %if.end276, !dbg !3534

land.lhs.true259:                                 ; preds = %land.lhs.true256
  %226 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3535
  %height260 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %226, i32 0, i32 33, !dbg !3536
  %227 = load i32, i32* %height260, align 4, !dbg !3536
  %228 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3537
  %org_height261 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %228, i32 0, i32 10, !dbg !3538
  %229 = load i32, i32* %org_height261, align 8, !dbg !3538
  %mul262 = mul nsw i32 %229, 3, !dbg !3539
  %div263 = sdiv i32 %mul262, 4, !dbg !3540
  %cmp264 = icmp slt i32 %227, %div263, !dbg !3541
  br i1 %cmp264, label %if.then266, label %if.end276, !dbg !3542

if.then266:                                       ; preds = %land.lhs.true259
  %230 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3544
  %interlaced267 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %230, i32 0, i32 12, !dbg !3546
  store i32 1, i32* %interlaced267, align 32, !dbg !3547
  %231 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3548
  %interlace_polarity268 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %231, i32 0, i32 71, !dbg !3549
  %232 = load i32, i32* %interlace_polarity268, align 8, !dbg !3549
  %233 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3550
  %bottom_field269 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %233, i32 0, i32 13, !dbg !3551
  store i32 %232, i32* %bottom_field269, align 4, !dbg !3552
  %234 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3553
  %picture_ptr = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %234, i32 0, i32 53, !dbg !3554
  %235 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr, align 8, !dbg !3554
  %interlaced_frame = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %235, i32 0, i32 19, !dbg !3555
  store i32 1, i32* %interlaced_frame, align 4, !dbg !3556
  %236 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3557
  %interlace_polarity270 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %236, i32 0, i32 71, !dbg !3558
  %237 = load i32, i32* %interlace_polarity270, align 8, !dbg !3558
  %tobool271 = icmp ne i32 %237, 0, !dbg !3559
  %lnot272 = xor i1 %tobool271, true, !dbg !3559
  %lnot.ext273 = zext i1 %lnot272 to i32, !dbg !3559
  %238 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3560
  %picture_ptr274 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %238, i32 0, i32 53, !dbg !3561
  %239 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr274, align 8, !dbg !3561
  %top_field_first = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %239, i32 0, i32 20, !dbg !3562
  store i32 %lnot.ext273, i32* %top_field_first, align 8, !dbg !3563
  %240 = load i32, i32* %height, align 4, !dbg !3564
  %mul275 = mul nsw i32 %240, 2, !dbg !3564
  store i32 %mul275, i32* %height, align 4, !dbg !3564
  br label %if.end276, !dbg !3565

if.end276:                                        ; preds = %if.then266, %land.lhs.true259, %land.lhs.true256, %lor.lhs.false249, %if.then234
  %241 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3566
  %avctx277 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %241, i32 0, i32 1, !dbg !3567
  %242 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx277, align 8, !dbg !3567
  %243 = load i32, i32* %width, align 4, !dbg !3568
  %244 = load i32, i32* %height, align 4, !dbg !3569
  %call278 = call i32 @ff_set_dimensions(%struct.AVCodecContext* %242, i32 %243, i32 %244), !dbg !3570
  store i32 %call278, i32* %ret, align 4, !dbg !3571
  %245 = load i32, i32* %ret, align 4, !dbg !3572
  %cmp279 = icmp slt i32 %245, 0, !dbg !3574
  br i1 %cmp279, label %if.then281, label %if.end282, !dbg !3575

if.then281:                                       ; preds = %if.end276
  %246 = load i32, i32* %ret, align 4, !dbg !3576
  store i32 %246, i32* %retval, align 4, !dbg !3577
  br label %return, !dbg !3577

if.end282:                                        ; preds = %if.end276
  %247 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3578
  %first_picture283 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %247, i32 0, i32 11, !dbg !3579
  store i32 0, i32* %first_picture283, align 4, !dbg !3580
  br label %if.end284, !dbg !3581

if.else:                                          ; preds = %lor.lhs.false228
  store i32 0, i32* %size_change, align 4, !dbg !3582
  br label %if.end284

if.end284:                                        ; preds = %if.else, %if.end282
  %248 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3584
  %got_picture285 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %248, i32 0, i32 54, !dbg !3585
  %249 = load i32, i32* %got_picture285, align 16, !dbg !3585
  %tobool286 = icmp ne i32 %249, 0, !dbg !3584
  br i1 %tobool286, label %land.lhs.true287, label %if.else303, !dbg !3586

land.lhs.true287:                                 ; preds = %if.end284
  %250 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3587
  %interlaced288 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %250, i32 0, i32 12, !dbg !3589
  %251 = load i32, i32* %interlaced288, align 32, !dbg !3589
  %tobool289 = icmp ne i32 %251, 0, !dbg !3587
  br i1 %tobool289, label %land.lhs.true290, label %if.else303, !dbg !3590

land.lhs.true290:                                 ; preds = %land.lhs.true287
  %252 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3591
  %bottom_field291 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %252, i32 0, i32 13, !dbg !3593
  %253 = load i32, i32* %bottom_field291, align 4, !dbg !3593
  %254 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3594
  %interlace_polarity292 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %254, i32 0, i32 71, !dbg !3595
  %255 = load i32, i32* %interlace_polarity292, align 8, !dbg !3595
  %tobool293 = icmp ne i32 %255, 0, !dbg !3596
  %lnot294 = xor i1 %tobool293, true, !dbg !3596
  %lnot.ext295 = zext i1 %lnot294 to i32, !dbg !3596
  %cmp296 = icmp eq i32 %253, %lnot.ext295, !dbg !3597
  br i1 %cmp296, label %if.then298, label %if.else303, !dbg !3598

if.then298:                                       ; preds = %land.lhs.true290
  %256 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3599
  %progressive = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %256, i32 0, i32 16, !dbg !3602
  %257 = load i32, i32* %progressive, align 16, !dbg !3602
  %tobool299 = icmp ne i32 %257, 0, !dbg !3599
  br i1 %tobool299, label %if.then300, label %if.end302, !dbg !3603

if.then300:                                       ; preds = %if.then298
  %258 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3604
  %avctx301 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %258, i32 0, i32 1, !dbg !3606
  %259 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx301, align 8, !dbg !3606
  %260 = bitcast %struct.AVCodecContext* %259 to i8*, !dbg !3604
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %260, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.22, i32 0, i32 0)), !dbg !3607
  store i32 -1094995529, i32* %retval, align 4, !dbg !3608
  br label %return, !dbg !3608

if.end302:                                        ; preds = %if.then298
  br label %if.end1035, !dbg !3609

if.else303:                                       ; preds = %land.lhs.true290, %land.lhs.true287, %if.end284
  %261 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3610
  %v_max304 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %261, i32 0, i32 49, !dbg !3612
  %262 = load i32, i32* %v_max304, align 8, !dbg !3612
  %cmp305 = icmp eq i32 %262, 1, !dbg !3613
  br i1 %cmp305, label %land.lhs.true307, label %if.else322, !dbg !3614

land.lhs.true307:                                 ; preds = %if.else303
  %263 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3615
  %h_max308 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %263, i32 0, i32 48, !dbg !3617
  %264 = load i32, i32* %h_max308, align 4, !dbg !3617
  %cmp309 = icmp eq i32 %264, 1, !dbg !3618
  br i1 %cmp309, label %land.lhs.true311, label %if.else322, !dbg !3619

land.lhs.true311:                                 ; preds = %land.lhs.true307
  %265 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3620
  %lossless312 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %265, i32 0, i32 14, !dbg !3622
  %266 = load i32, i32* %lossless312, align 8, !dbg !3622
  %cmp313 = icmp eq i32 %266, 1, !dbg !3623
  br i1 %cmp313, label %land.lhs.true315, label %if.else322, !dbg !3624

land.lhs.true315:                                 ; preds = %land.lhs.true311
  %267 = load i32, i32* %nb_components, align 4, !dbg !3625
  %cmp316 = icmp eq i32 %267, 3, !dbg !3627
  br i1 %cmp316, label %if.then321, label %lor.lhs.false318, !dbg !3628

lor.lhs.false318:                                 ; preds = %land.lhs.true315
  %268 = load i32, i32* %nb_components, align 4, !dbg !3629
  %cmp319 = icmp eq i32 %268, 4, !dbg !3631
  br i1 %cmp319, label %if.then321, label %if.else322, !dbg !3632

if.then321:                                       ; preds = %lor.lhs.false318, %land.lhs.true315
  %269 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3633
  %rgb = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %269, i32 0, i32 17, !dbg !3634
  store i32 1, i32* %rgb, align 4, !dbg !3635
  br label %if.end328, !dbg !3633

if.else322:                                       ; preds = %lor.lhs.false318, %land.lhs.true311, %land.lhs.true307, %if.else303
  %270 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3636
  %lossless323 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %270, i32 0, i32 14, !dbg !3638
  %271 = load i32, i32* %lossless323, align 8, !dbg !3638
  %tobool324 = icmp ne i32 %271, 0, !dbg !3636
  br i1 %tobool324, label %if.end327, label %if.then325, !dbg !3639

if.then325:                                       ; preds = %if.else322
  %272 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3640
  %rgb326 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %272, i32 0, i32 17, !dbg !3641
  store i32 0, i32* %rgb326, align 4, !dbg !3642
  br label %if.end327, !dbg !3640

if.end327:                                        ; preds = %if.then325, %if.else322
  br label %if.end328

if.end328:                                        ; preds = %if.end327, %if.then321
  %273 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3643
  %h_count329 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %273, i32 0, i32 39, !dbg !3644
  %arrayidx330 = getelementptr inbounds [4 x i32], [4 x i32]* %h_count329, i64 0, i64 0, !dbg !3643
  %274 = load i32, i32* %arrayidx330, align 4, !dbg !3643
  %shl = shl i32 %274, 28, !dbg !3645
  %275 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3646
  %v_count331 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %275, i32 0, i32 40, !dbg !3647
  %arrayidx332 = getelementptr inbounds [4 x i32], [4 x i32]* %v_count331, i64 0, i64 0, !dbg !3646
  %276 = load i32, i32* %arrayidx332, align 4, !dbg !3646
  %shl333 = shl i32 %276, 24, !dbg !3648
  %or = or i32 %shl, %shl333, !dbg !3649
  %277 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3650
  %h_count334 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %277, i32 0, i32 39, !dbg !3651
  %arrayidx335 = getelementptr inbounds [4 x i32], [4 x i32]* %h_count334, i64 0, i64 1, !dbg !3650
  %278 = load i32, i32* %arrayidx335, align 4, !dbg !3650
  %shl336 = shl i32 %278, 20, !dbg !3652
  %or337 = or i32 %or, %shl336, !dbg !3653
  %279 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3654
  %v_count338 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %279, i32 0, i32 40, !dbg !3655
  %arrayidx339 = getelementptr inbounds [4 x i32], [4 x i32]* %v_count338, i64 0, i64 1, !dbg !3654
  %280 = load i32, i32* %arrayidx339, align 4, !dbg !3654
  %shl340 = shl i32 %280, 16, !dbg !3656
  %or341 = or i32 %or337, %shl340, !dbg !3657
  %281 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3658
  %h_count342 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %281, i32 0, i32 39, !dbg !3659
  %arrayidx343 = getelementptr inbounds [4 x i32], [4 x i32]* %h_count342, i64 0, i64 2, !dbg !3658
  %282 = load i32, i32* %arrayidx343, align 4, !dbg !3658
  %shl344 = shl i32 %282, 12, !dbg !3660
  %or345 = or i32 %or341, %shl344, !dbg !3661
  %283 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3662
  %v_count346 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %283, i32 0, i32 40, !dbg !3663
  %arrayidx347 = getelementptr inbounds [4 x i32], [4 x i32]* %v_count346, i64 0, i64 2, !dbg !3662
  %284 = load i32, i32* %arrayidx347, align 4, !dbg !3662
  %shl348 = shl i32 %284, 8, !dbg !3664
  %or349 = or i32 %or345, %shl348, !dbg !3665
  %285 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3666
  %h_count350 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %285, i32 0, i32 39, !dbg !3667
  %arrayidx351 = getelementptr inbounds [4 x i32], [4 x i32]* %h_count350, i64 0, i64 3, !dbg !3666
  %286 = load i32, i32* %arrayidx351, align 4, !dbg !3666
  %shl352 = shl i32 %286, 4, !dbg !3668
  %or353 = or i32 %or349, %shl352, !dbg !3669
  %287 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3670
  %v_count354 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %287, i32 0, i32 40, !dbg !3671
  %arrayidx355 = getelementptr inbounds [4 x i32], [4 x i32]* %v_count354, i64 0, i64 3, !dbg !3670
  %288 = load i32, i32* %arrayidx355, align 4, !dbg !3670
  %or356 = or i32 %or353, %288, !dbg !3672
  store i32 %or356, i32* %pix_fmt_id, align 4, !dbg !3673
  %289 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3674
  %avctx357 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %289, i32 0, i32 1, !dbg !3675
  %290 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx357, align 8, !dbg !3675
  %291 = bitcast %struct.AVCodecContext* %290 to i8*, !dbg !3674
  %292 = load i32, i32* %pix_fmt_id, align 4, !dbg !3676
  call void (i8*, i32, i8*, ...) @av_log(i8* %291, i32 48, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.23, i32 0, i32 0), i32 %292), !dbg !3677
  %293 = load i32, i32* %pix_fmt_id, align 4, !dbg !3678
  %and = and i32 %293, -791621424, !dbg !3680
  %tobool358 = icmp ne i32 %and, 0, !dbg !3680
  br i1 %tobool358, label %if.end362, label %if.then359, !dbg !3681

if.then359:                                       ; preds = %if.end328
  %294 = load i32, i32* %pix_fmt_id, align 4, !dbg !3682
  %and360 = and i32 %294, -252645136, !dbg !3683
  %shr = lshr i32 %and360, 1, !dbg !3684
  %295 = load i32, i32* %pix_fmt_id, align 4, !dbg !3685
  %sub361 = sub i32 %295, %shr, !dbg !3685
  store i32 %sub361, i32* %pix_fmt_id, align 4, !dbg !3685
  br label %if.end362, !dbg !3686

if.end362:                                        ; preds = %if.then359, %if.end328
  %296 = load i32, i32* %pix_fmt_id, align 4, !dbg !3687
  %and363 = and i32 %296, 218959117, !dbg !3689
  %tobool364 = icmp ne i32 %and363, 0, !dbg !3689
  br i1 %tobool364, label %if.end369, label %if.then365, !dbg !3690

if.then365:                                       ; preds = %if.end362
  %297 = load i32, i32* %pix_fmt_id, align 4, !dbg !3691
  %and366 = and i32 %297, 252645135, !dbg !3692
  %shr367 = lshr i32 %and366, 1, !dbg !3693
  %298 = load i32, i32* %pix_fmt_id, align 4, !dbg !3694
  %sub368 = sub i32 %298, %shr367, !dbg !3694
  store i32 %sub368, i32* %pix_fmt_id, align 4, !dbg !3694
  br label %if.end369, !dbg !3695

if.end369:                                        ; preds = %if.then365, %if.end362
  store i32 0, i32* %i, align 4, !dbg !3696
  br label %for.cond370, !dbg !3698

for.cond370:                                      ; preds = %for.inc440, %if.end369
  %299 = load i32, i32* %i, align 4, !dbg !3699
  %cmp371 = icmp slt i32 %299, 8, !dbg !3702
  br i1 %cmp371, label %for.body373, label %for.end442, !dbg !3703

for.body373:                                      ; preds = %for.cond370
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3704, metadata !2073), !dbg !3706
  %300 = load i32, i32* %i, align 4, !dbg !3707
  %and374 = and i32 %300, 1, !dbg !3708
  %add375 = add nsw i32 6, %and374, !dbg !3709
  %301 = load i32, i32* %i, align 4, !dbg !3710
  %and376 = and i32 %301, 6, !dbg !3711
  %sub377 = sub nsw i32 %add375, %and376, !dbg !3712
  store i32 %sub377, i32* %j, align 4, !dbg !3706
  call void @llvm.dbg.declare(metadata i32* %is, metadata !3713, metadata !2073), !dbg !3714
  %302 = load i32, i32* %pix_fmt_id, align 4, !dbg !3715
  %303 = load i32, i32* %i, align 4, !dbg !3716
  %mul378 = mul nsw i32 4, %303, !dbg !3717
  %shr379 = lshr i32 %302, %mul378, !dbg !3718
  %and380 = and i32 %shr379, 15, !dbg !3719
  store i32 %and380, i32* %is, align 4, !dbg !3714
  call void @llvm.dbg.declare(metadata i32* %js, metadata !3720, metadata !2073), !dbg !3721
  %304 = load i32, i32* %pix_fmt_id, align 4, !dbg !3722
  %305 = load i32, i32* %j, align 4, !dbg !3723
  %mul381 = mul nsw i32 4, %305, !dbg !3724
  %shr382 = lshr i32 %304, %mul381, !dbg !3725
  %and383 = and i32 %shr382, 15, !dbg !3726
  store i32 %and383, i32* %js, align 4, !dbg !3721
  %306 = load i32, i32* %is, align 4, !dbg !3727
  %cmp384 = icmp eq i32 %306, 1, !dbg !3729
  br i1 %cmp384, label %land.lhs.true386, label %if.end401, !dbg !3730

land.lhs.true386:                                 ; preds = %for.body373
  %307 = load i32, i32* %js, align 4, !dbg !3731
  %cmp387 = icmp ne i32 %307, 2, !dbg !3733
  br i1 %cmp387, label %land.lhs.true389, label %if.end401, !dbg !3734

land.lhs.true389:                                 ; preds = %land.lhs.true386
  %308 = load i32, i32* %i, align 4, !dbg !3735
  %cmp390 = icmp slt i32 %308, 2, !dbg !3737
  br i1 %cmp390, label %if.then395, label %lor.lhs.false392, !dbg !3738

lor.lhs.false392:                                 ; preds = %land.lhs.true389
  %309 = load i32, i32* %i, align 4, !dbg !3739
  %cmp393 = icmp sgt i32 %309, 5, !dbg !3741
  br i1 %cmp393, label %if.then395, label %if.end401, !dbg !3742

if.then395:                                       ; preds = %lor.lhs.false392, %land.lhs.true389
  %310 = load i32, i32* %pix_fmt_id, align 4, !dbg !3743
  %311 = load i32, i32* %i, align 4, !dbg !3744
  %and396 = and i32 %311, 1, !dbg !3745
  %mul397 = mul nsw i32 4, %and396, !dbg !3746
  %add398 = add nsw i32 8, %mul397, !dbg !3747
  %shr399 = lshr i32 %310, %add398, !dbg !3748
  %and400 = and i32 %shr399, 15, !dbg !3749
  store i32 %and400, i32* %js, align 4, !dbg !3750
  br label %if.end401, !dbg !3751

if.end401:                                        ; preds = %if.then395, %lor.lhs.false392, %land.lhs.true386, %for.body373
  %312 = load i32, i32* %is, align 4, !dbg !3752
  %cmp402 = icmp eq i32 %312, 1, !dbg !3754
  br i1 %cmp402, label %land.lhs.true404, label %if.end419, !dbg !3755

land.lhs.true404:                                 ; preds = %if.end401
  %313 = load i32, i32* %js, align 4, !dbg !3756
  %cmp405 = icmp ne i32 %313, 2, !dbg !3758
  br i1 %cmp405, label %land.lhs.true407, label %if.end419, !dbg !3759

land.lhs.true407:                                 ; preds = %land.lhs.true404
  %314 = load i32, i32* %i, align 4, !dbg !3760
  %cmp408 = icmp slt i32 %314, 2, !dbg !3762
  br i1 %cmp408, label %if.then413, label %lor.lhs.false410, !dbg !3763

lor.lhs.false410:                                 ; preds = %land.lhs.true407
  %315 = load i32, i32* %i, align 4, !dbg !3764
  %cmp411 = icmp sgt i32 %315, 5, !dbg !3766
  br i1 %cmp411, label %if.then413, label %if.end419, !dbg !3767

if.then413:                                       ; preds = %lor.lhs.false410, %land.lhs.true407
  %316 = load i32, i32* %pix_fmt_id, align 4, !dbg !3768
  %317 = load i32, i32* %i, align 4, !dbg !3769
  %and414 = and i32 %317, 1, !dbg !3770
  %mul415 = mul nsw i32 4, %and414, !dbg !3771
  %add416 = add nsw i32 16, %mul415, !dbg !3772
  %shr417 = lshr i32 %316, %add416, !dbg !3773
  %and418 = and i32 %shr417, 15, !dbg !3774
  store i32 %and418, i32* %js, align 4, !dbg !3775
  br label %if.end419, !dbg !3776

if.end419:                                        ; preds = %if.then413, %lor.lhs.false410, %land.lhs.true404, %if.end401
  %318 = load i32, i32* %is, align 4, !dbg !3777
  %cmp420 = icmp eq i32 %318, 1, !dbg !3779
  br i1 %cmp420, label %land.lhs.true422, label %if.end439, !dbg !3780

land.lhs.true422:                                 ; preds = %if.end419
  %319 = load i32, i32* %js, align 4, !dbg !3781
  %cmp423 = icmp eq i32 %319, 2, !dbg !3783
  br i1 %cmp423, label %if.then425, label %if.end439, !dbg !3784

if.then425:                                       ; preds = %land.lhs.true422
  %320 = load i32, i32* %i, align 4, !dbg !3785
  %and426 = and i32 %320, 1, !dbg !3788
  %tobool427 = icmp ne i32 %and426, 0, !dbg !3788
  br i1 %tobool427, label %if.then428, label %if.else433, !dbg !3789

if.then428:                                       ; preds = %if.then425
  %321 = load i32, i32* %j, align 4, !dbg !3790
  %div429 = sdiv i32 %321, 2, !dbg !3792
  %idxprom430 = sext i32 %div429 to i64, !dbg !3793
  %322 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3793
  %upscale_h431 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %322, i32 0, i32 18, !dbg !3794
  %arrayidx432 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_h431, i64 0, i64 %idxprom430, !dbg !3793
  store i8 1, i8* %arrayidx432, align 1, !dbg !3795
  br label %if.end438, !dbg !3793

if.else433:                                       ; preds = %if.then425
  %323 = load i32, i32* %j, align 4, !dbg !3796
  %div434 = sdiv i32 %323, 2, !dbg !3797
  %idxprom435 = sext i32 %div434 to i64, !dbg !3798
  %324 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3798
  %upscale_v436 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %324, i32 0, i32 19, !dbg !3799
  %arrayidx437 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_v436, i64 0, i64 %idxprom435, !dbg !3798
  store i8 1, i8* %arrayidx437, align 1, !dbg !3800
  br label %if.end438

if.end438:                                        ; preds = %if.else433, %if.then428
  br label %if.end439, !dbg !3801

if.end439:                                        ; preds = %if.end438, %land.lhs.true422, %if.end419
  br label %for.inc440, !dbg !3802

for.inc440:                                       ; preds = %if.end439
  %325 = load i32, i32* %i, align 4, !dbg !3803
  %inc441 = add nsw i32 %325, 1, !dbg !3803
  store i32 %inc441, i32* %i, align 4, !dbg !3803
  br label %for.cond370, !dbg !3805, !llvm.loop !3806

for.end442:                                       ; preds = %for.cond370
  %326 = load i32, i32* %pix_fmt_id, align 4, !dbg !3808
  switch i32 %326, label %sw.default [
    i32 286331136, label %sw.bb
    i32 286331153, label %sw.bb501
    i32 571543842, label %sw.bb543
    i32 571543825, label %sw.bb543
    i32 303173888, label %sw.bb611
    i32 571613440, label %sw.bb611
    i32 555815168, label %sw.bb611
    i32 572592640, label %sw.bb611
    i32 572657920, label %sw.bb628
    i32 571548160, label %sw.bb628
    i32 287449600, label %sw.bb628
    i32 285212672, label %sw.bb645
    i32 318767104, label %sw.bb645
    i32 335544320, label %sw.bb645
    i32 822083584, label %sw.bb645
    i32 855638016, label %sw.bb645
    i32 872415232, label %sw.bb645
    i32 1090519040, label %sw.bb645
    i32 1124073472, label %sw.bb645
    i32 1140850688, label %sw.bb645
    i32 303108352, label %sw.bb656
    i32 336728576, label %sw.bb656
    i32 336662784, label %sw.bb656
    i32 572592384, label %sw.bb656
    i32 571547904, label %sw.bb656
    i32 554766592, label %sw.bb710
    i32 823202048, label %sw.bb758
    i32 571609344, label %sw.bb778
    i32 571544064, label %sw.bb778
    i32 571543808, label %sw.bb795
    i32 588321024, label %sw.bb795
    i32 1108414720, label %sw.bb795
    i32 605098240, label %sw.bb795
    i32 1091637504, label %sw.bb855
  ], !dbg !3809

sw.bb:                                            ; preds = %for.end442
  %327 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3810
  %rgb443 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %327, i32 0, i32 17, !dbg !3813
  %328 = load i32, i32* %rgb443, align 4, !dbg !3813
  %tobool444 = icmp ne i32 %328, 0, !dbg !3810
  br i1 %tobool444, label %if.then445, label %if.else451, !dbg !3814

if.then445:                                       ; preds = %sw.bb
  %329 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3815
  %bits446 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %329, i32 0, i32 22, !dbg !3816
  %330 = load i32, i32* %bits446, align 8, !dbg !3816
  %cmp447 = icmp sle i32 %330, 9, !dbg !3817
  %cond449 = select i1 %cmp447, i32 3, i32 60, !dbg !3815
  %331 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3818
  %avctx450 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %331, i32 0, i32 1, !dbg !3819
  %332 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx450, align 8, !dbg !3819
  %pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %332, i32 0, i32 25, !dbg !3820
  store i32 %cond449, i32* %pix_fmt, align 8, !dbg !3821
  br label %if.end495, !dbg !3818

if.else451:                                       ; preds = %sw.bb
  %333 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3822
  %adobe_transform452 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %333, i32 0, i32 25, !dbg !3825
  %334 = load i32, i32* %adobe_transform452, align 4, !dbg !3825
  %cmp453 = icmp eq i32 %334, 0, !dbg !3826
  br i1 %cmp453, label %if.then470, label %lor.lhs.false455, !dbg !3827

lor.lhs.false455:                                 ; preds = %if.else451
  %335 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3828
  %component_id456 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %335, i32 0, i32 38, !dbg !3830
  %arrayidx457 = getelementptr inbounds [4 x i32], [4 x i32]* %component_id456, i64 0, i64 0, !dbg !3828
  %336 = load i32, i32* %arrayidx457, align 4, !dbg !3828
  %cmp458 = icmp eq i32 %336, 81, !dbg !3831
  br i1 %cmp458, label %land.lhs.true460, label %if.else477, !dbg !3832

land.lhs.true460:                                 ; preds = %lor.lhs.false455
  %337 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3833
  %component_id461 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %337, i32 0, i32 38, !dbg !3835
  %arrayidx462 = getelementptr inbounds [4 x i32], [4 x i32]* %component_id461, i64 0, i64 1, !dbg !3833
  %338 = load i32, i32* %arrayidx462, align 4, !dbg !3833
  %cmp463 = icmp eq i32 %338, 70, !dbg !3836
  br i1 %cmp463, label %land.lhs.true465, label %if.else477, !dbg !3837

land.lhs.true465:                                 ; preds = %land.lhs.true460
  %339 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3838
  %component_id466 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %339, i32 0, i32 38, !dbg !3840
  %arrayidx467 = getelementptr inbounds [4 x i32], [4 x i32]* %component_id466, i64 0, i64 2, !dbg !3838
  %340 = load i32, i32* %arrayidx467, align 4, !dbg !3838
  %cmp468 = icmp eq i32 %340, 65, !dbg !3841
  br i1 %cmp468, label %if.then470, label %if.else477, !dbg !3842

if.then470:                                       ; preds = %land.lhs.true465, %if.else451
  %341 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3844
  %bits471 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %341, i32 0, i32 22, !dbg !3846
  %342 = load i32, i32* %bits471, align 8, !dbg !3846
  %cmp472 = icmp sle i32 %342, 8, !dbg !3847
  %cond474 = select i1 %cmp472, i32 73, i32 79, !dbg !3844
  %343 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3848
  %avctx475 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %343, i32 0, i32 1, !dbg !3849
  %344 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx475, align 8, !dbg !3849
  %pix_fmt476 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %344, i32 0, i32 25, !dbg !3850
  store i32 %cond474, i32* %pix_fmt476, align 8, !dbg !3851
  br label %if.end494, !dbg !3852

if.else477:                                       ; preds = %land.lhs.true465, %land.lhs.true460, %lor.lhs.false455
  %345 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3853
  %bits478 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %345, i32 0, i32 22, !dbg !3856
  %346 = load i32, i32* %bits478, align 8, !dbg !3856
  %cmp479 = icmp sle i32 %346, 8, !dbg !3857
  br i1 %cmp479, label %if.then481, label %if.else486, !dbg !3858

if.then481:                                       ; preds = %if.else477
  %347 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3859
  %cs_itu601 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %347, i32 0, i32 70, !dbg !3861
  %348 = load i32, i32* %cs_itu601, align 4, !dbg !3861
  %tobool482 = icmp ne i32 %348, 0, !dbg !3859
  %cond483 = select i1 %tobool482, i32 5, i32 14, !dbg !3859
  %349 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3862
  %avctx484 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %349, i32 0, i32 1, !dbg !3863
  %350 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx484, align 8, !dbg !3863
  %pix_fmt485 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %350, i32 0, i32 25, !dbg !3864
  store i32 %cond483, i32* %pix_fmt485, align 8, !dbg !3865
  br label %if.end489, !dbg !3862

if.else486:                                       ; preds = %if.else477
  %351 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3866
  %avctx487 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %351, i32 0, i32 1, !dbg !3867
  %352 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx487, align 8, !dbg !3867
  %pix_fmt488 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %352, i32 0, i32 25, !dbg !3868
  store i32 51, i32* %pix_fmt488, align 8, !dbg !3869
  br label %if.end489

if.end489:                                        ; preds = %if.else486, %if.then481
  %353 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3870
  %cs_itu601490 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %353, i32 0, i32 70, !dbg !3871
  %354 = load i32, i32* %cs_itu601490, align 4, !dbg !3871
  %tobool491 = icmp ne i32 %354, 0, !dbg !3870
  %cond492 = select i1 %tobool491, i32 1, i32 2, !dbg !3870
  %355 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3872
  %avctx493 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %355, i32 0, i32 1, !dbg !3873
  %356 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx493, align 8, !dbg !3873
  %color_range = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %356, i32 0, i32 78, !dbg !3874
  store i32 %cond492, i32* %color_range, align 8, !dbg !3875
  br label %if.end494

if.end494:                                        ; preds = %if.end489, %if.then470
  br label %if.end495

if.end495:                                        ; preds = %if.end494, %if.then445
  br label %do.body, !dbg !3876, !llvm.loop !3877

do.body:                                          ; preds = %if.end495
  %357 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3878
  %nb_components496 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %357, i32 0, i32 36, !dbg !3882
  %358 = load i32, i32* %nb_components496, align 32, !dbg !3882
  %cmp497 = icmp eq i32 %358, 3, !dbg !3883
  br i1 %cmp497, label %if.end500, label %if.then499, !dbg !3884

if.then499:                                       ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.26, i32 0, i32 0), i32 504), !dbg !3885
  call void @abort() #8, !dbg !3888
  unreachable, !dbg !3890

if.end500:                                        ; preds = %do.body
  br label %do.end, !dbg !3891

do.end:                                           ; preds = %if.end500
  br label %sw.epilog, !dbg !3893

sw.bb501:                                         ; preds = %for.end442
  %359 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3894
  %rgb502 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %359, i32 0, i32 17, !dbg !3896
  %360 = load i32, i32* %rgb502, align 4, !dbg !3896
  %tobool503 = icmp ne i32 %360, 0, !dbg !3894
  br i1 %tobool503, label %if.then504, label %if.else511, !dbg !3897

if.then504:                                       ; preds = %sw.bb501
  %361 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3898
  %bits505 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %361, i32 0, i32 22, !dbg !3899
  %362 = load i32, i32* %bits505, align 8, !dbg !3899
  %cmp506 = icmp sle i32 %362, 9, !dbg !3900
  %cond508 = select i1 %cmp506, i32 27, i32 107, !dbg !3898
  %363 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3901
  %avctx509 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %363, i32 0, i32 1, !dbg !3902
  %364 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx509, align 8, !dbg !3902
  %pix_fmt510 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %364, i32 0, i32 25, !dbg !3903
  store i32 %cond508, i32* %pix_fmt510, align 8, !dbg !3904
  br label %if.end535, !dbg !3901

if.else511:                                       ; preds = %sw.bb501
  %365 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3905
  %adobe_transform512 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %365, i32 0, i32 25, !dbg !3908
  %366 = load i32, i32* %adobe_transform512, align 4, !dbg !3908
  %cmp513 = icmp eq i32 %366, 0, !dbg !3909
  br i1 %cmp513, label %land.lhs.true515, label %if.else522, !dbg !3910

land.lhs.true515:                                 ; preds = %if.else511
  %367 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3911
  %bits516 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %367, i32 0, i32 22, !dbg !3913
  %368 = load i32, i32* %bits516, align 8, !dbg !3913
  %cmp517 = icmp sle i32 %368, 8, !dbg !3914
  br i1 %cmp517, label %if.then519, label %if.else522, !dbg !3915

if.then519:                                       ; preds = %land.lhs.true515
  %369 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3916
  %avctx520 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %369, i32 0, i32 1, !dbg !3918
  %370 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx520, align 8, !dbg !3918
  %pix_fmt521 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %370, i32 0, i32 25, !dbg !3919
  store i32 113, i32* %pix_fmt521, align 8, !dbg !3920
  br label %if.end534, !dbg !3921

if.else522:                                       ; preds = %land.lhs.true515, %if.else511
  %371 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3922
  %bits523 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %371, i32 0, i32 22, !dbg !3924
  %372 = load i32, i32* %bits523, align 8, !dbg !3924
  %cmp524 = icmp sle i32 %372, 8, !dbg !3925
  %cond526 = select i1 %cmp524, i32 81, i32 99, !dbg !3922
  %373 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3926
  %avctx527 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %373, i32 0, i32 1, !dbg !3927
  %374 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx527, align 8, !dbg !3927
  %pix_fmt528 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %374, i32 0, i32 25, !dbg !3928
  store i32 %cond526, i32* %pix_fmt528, align 8, !dbg !3929
  %375 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3930
  %cs_itu601529 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %375, i32 0, i32 70, !dbg !3931
  %376 = load i32, i32* %cs_itu601529, align 4, !dbg !3931
  %tobool530 = icmp ne i32 %376, 0, !dbg !3930
  %cond531 = select i1 %tobool530, i32 1, i32 2, !dbg !3930
  %377 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3932
  %avctx532 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %377, i32 0, i32 1, !dbg !3933
  %378 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx532, align 8, !dbg !3933
  %color_range533 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %378, i32 0, i32 78, !dbg !3934
  store i32 %cond531, i32* %color_range533, align 8, !dbg !3935
  br label %if.end534

if.end534:                                        ; preds = %if.else522, %if.then519
  br label %if.end535

if.end535:                                        ; preds = %if.end534, %if.then504
  br label %do.body536, !dbg !3936, !llvm.loop !3937

do.body536:                                       ; preds = %if.end535
  %379 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3938
  %nb_components537 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %379, i32 0, i32 36, !dbg !3942
  %380 = load i32, i32* %nb_components537, align 32, !dbg !3942
  %cmp538 = icmp eq i32 %380, 4, !dbg !3943
  br i1 %cmp538, label %if.end541, label %if.then540, !dbg !3944

if.then540:                                       ; preds = %do.body536
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.26, i32 0, i32 0), i32 517), !dbg !3945
  call void @abort() #8, !dbg !3948
  unreachable, !dbg !3950

if.end541:                                        ; preds = %do.body536
  br label %do.end542, !dbg !3951

do.end542:                                        ; preds = %if.end541
  br label %sw.epilog, !dbg !3953

sw.bb543:                                         ; preds = %for.end442, %for.end442
  %381 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3954
  %adobe_transform544 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %381, i32 0, i32 25, !dbg !3956
  %382 = load i32, i32* %adobe_transform544, align 4, !dbg !3956
  %cmp545 = icmp eq i32 %382, 0, !dbg !3957
  br i1 %cmp545, label %land.lhs.true547, label %if.else562, !dbg !3958

land.lhs.true547:                                 ; preds = %sw.bb543
  %383 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3959
  %bits548 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %383, i32 0, i32 22, !dbg !3961
  %384 = load i32, i32* %bits548, align 8, !dbg !3961
  %cmp549 = icmp sle i32 %384, 8, !dbg !3962
  br i1 %cmp549, label %if.then551, label %if.else562, !dbg !3963

if.then551:                                       ; preds = %land.lhs.true547
  %385 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3964
  %avctx552 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %385, i32 0, i32 1, !dbg !3966
  %386 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx552, align 8, !dbg !3966
  %pix_fmt553 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %386, i32 0, i32 25, !dbg !3967
  store i32 113, i32* %pix_fmt553, align 8, !dbg !3968
  %387 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3969
  %upscale_v554 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %387, i32 0, i32 19, !dbg !3970
  %arrayidx555 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_v554, i64 0, i64 2, !dbg !3969
  store i8 1, i8* %arrayidx555, align 2, !dbg !3971
  %388 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3972
  %upscale_v556 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %388, i32 0, i32 19, !dbg !3973
  %arrayidx557 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_v556, i64 0, i64 1, !dbg !3972
  store i8 1, i8* %arrayidx557, align 1, !dbg !3974
  %389 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3975
  %upscale_h558 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %389, i32 0, i32 18, !dbg !3976
  %arrayidx559 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_h558, i64 0, i64 2, !dbg !3975
  store i8 1, i8* %arrayidx559, align 2, !dbg !3977
  %390 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3978
  %upscale_h560 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %390, i32 0, i32 18, !dbg !3979
  %arrayidx561 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_h560, i64 0, i64 1, !dbg !3978
  store i8 1, i8* %arrayidx561, align 1, !dbg !3980
  br label %if.end603, !dbg !3981

if.else562:                                       ; preds = %land.lhs.true547, %sw.bb543
  %391 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3982
  %adobe_transform563 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %391, i32 0, i32 25, !dbg !3985
  %392 = load i32, i32* %adobe_transform563, align 4, !dbg !3985
  %cmp564 = icmp eq i32 %392, 2, !dbg !3986
  br i1 %cmp564, label %land.lhs.true566, label %if.else586, !dbg !3987

land.lhs.true566:                                 ; preds = %if.else562
  %393 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3988
  %bits567 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %393, i32 0, i32 22, !dbg !3990
  %394 = load i32, i32* %bits567, align 8, !dbg !3990
  %cmp568 = icmp sle i32 %394, 8, !dbg !3991
  br i1 %cmp568, label %if.then570, label %if.else586, !dbg !3992

if.then570:                                       ; preds = %land.lhs.true566
  %395 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3993
  %avctx571 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %395, i32 0, i32 1, !dbg !3995
  %396 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx571, align 8, !dbg !3995
  %pix_fmt572 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %396, i32 0, i32 25, !dbg !3996
  store i32 81, i32* %pix_fmt572, align 8, !dbg !3997
  %397 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !3998
  %upscale_v573 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %397, i32 0, i32 19, !dbg !3999
  %arrayidx574 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_v573, i64 0, i64 2, !dbg !3998
  store i8 1, i8* %arrayidx574, align 2, !dbg !4000
  %398 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4001
  %upscale_v575 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %398, i32 0, i32 19, !dbg !4002
  %arrayidx576 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_v575, i64 0, i64 1, !dbg !4001
  store i8 1, i8* %arrayidx576, align 1, !dbg !4003
  %399 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4004
  %upscale_h577 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %399, i32 0, i32 18, !dbg !4005
  %arrayidx578 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_h577, i64 0, i64 2, !dbg !4004
  store i8 1, i8* %arrayidx578, align 2, !dbg !4006
  %400 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4007
  %upscale_h579 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %400, i32 0, i32 18, !dbg !4008
  %arrayidx580 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_h579, i64 0, i64 1, !dbg !4007
  store i8 1, i8* %arrayidx580, align 1, !dbg !4009
  %401 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4010
  %cs_itu601581 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %401, i32 0, i32 70, !dbg !4011
  %402 = load i32, i32* %cs_itu601581, align 4, !dbg !4011
  %tobool582 = icmp ne i32 %402, 0, !dbg !4010
  %cond583 = select i1 %tobool582, i32 1, i32 2, !dbg !4010
  %403 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4012
  %avctx584 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %403, i32 0, i32 1, !dbg !4013
  %404 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx584, align 8, !dbg !4013
  %color_range585 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %404, i32 0, i32 78, !dbg !4014
  store i32 %cond583, i32* %color_range585, align 8, !dbg !4015
  br label %if.end602, !dbg !4016

if.else586:                                       ; preds = %land.lhs.true566, %if.else562
  %405 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4017
  %bits587 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %405, i32 0, i32 22, !dbg !4020
  %406 = load i32, i32* %bits587, align 8, !dbg !4020
  %cmp588 = icmp sle i32 %406, 8, !dbg !4021
  br i1 %cmp588, label %if.then590, label %if.else593, !dbg !4022

if.then590:                                       ; preds = %if.else586
  %407 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4023
  %avctx591 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %407, i32 0, i32 1, !dbg !4025
  %408 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx591, align 8, !dbg !4025
  %pix_fmt592 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %408, i32 0, i32 25, !dbg !4026
  store i32 33, i32* %pix_fmt592, align 8, !dbg !4027
  br label %if.end596, !dbg !4023

if.else593:                                       ; preds = %if.else586
  %409 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4028
  %avctx594 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %409, i32 0, i32 1, !dbg !4029
  %410 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx594, align 8, !dbg !4029
  %pix_fmt595 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %410, i32 0, i32 25, !dbg !4030
  store i32 95, i32* %pix_fmt595, align 8, !dbg !4031
  br label %if.end596

if.end596:                                        ; preds = %if.else593, %if.then590
  %411 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4032
  %cs_itu601597 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %411, i32 0, i32 70, !dbg !4033
  %412 = load i32, i32* %cs_itu601597, align 4, !dbg !4033
  %tobool598 = icmp ne i32 %412, 0, !dbg !4032
  %cond599 = select i1 %tobool598, i32 1, i32 2, !dbg !4032
  %413 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4034
  %avctx600 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %413, i32 0, i32 1, !dbg !4035
  %414 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx600, align 8, !dbg !4035
  %color_range601 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %414, i32 0, i32 78, !dbg !4036
  store i32 %cond599, i32* %color_range601, align 8, !dbg !4037
  br label %if.end602

if.end602:                                        ; preds = %if.end596, %if.then570
  br label %if.end603

if.end603:                                        ; preds = %if.end602, %if.then551
  br label %do.body604, !dbg !4038, !llvm.loop !4039

do.body604:                                       ; preds = %if.end603
  %415 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4040
  %nb_components605 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %415, i32 0, i32 36, !dbg !4044
  %416 = load i32, i32* %nb_components605, align 32, !dbg !4044
  %cmp606 = icmp eq i32 %416, 4, !dbg !4045
  br i1 %cmp606, label %if.end609, label %if.then608, !dbg !4046

if.then608:                                       ; preds = %do.body604
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.26, i32 0, i32 0), i32 535), !dbg !4047
  call void @abort() #8, !dbg !4050
  unreachable, !dbg !4052

if.end609:                                        ; preds = %do.body604
  br label %do.end610, !dbg !4053

do.end610:                                        ; preds = %if.end609
  br label %sw.epilog, !dbg !4055

sw.bb611:                                         ; preds = %for.end442, %for.end442, %for.end442, %for.end442
  %417 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4056
  %bits612 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %417, i32 0, i32 22, !dbg !4058
  %418 = load i32, i32* %bits612, align 8, !dbg !4058
  %cmp613 = icmp sle i32 %418, 8, !dbg !4059
  br i1 %cmp613, label %if.then615, label %if.else621, !dbg !4060

if.then615:                                       ; preds = %sw.bb611
  %419 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4061
  %cs_itu601616 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %419, i32 0, i32 70, !dbg !4063
  %420 = load i32, i32* %cs_itu601616, align 4, !dbg !4063
  %tobool617 = icmp ne i32 %420, 0, !dbg !4061
  %cond618 = select i1 %tobool617, i32 5, i32 14, !dbg !4061
  %421 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4064
  %avctx619 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %421, i32 0, i32 1, !dbg !4065
  %422 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx619, align 8, !dbg !4065
  %pix_fmt620 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %422, i32 0, i32 25, !dbg !4066
  store i32 %cond618, i32* %pix_fmt620, align 8, !dbg !4067
  br label %if.end622, !dbg !4064

if.else621:                                       ; preds = %sw.bb611
  br label %unk_pixfmt, !dbg !4068

if.end622:                                        ; preds = %if.then615
  %423 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4069
  %cs_itu601623 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %423, i32 0, i32 70, !dbg !4070
  %424 = load i32, i32* %cs_itu601623, align 4, !dbg !4070
  %tobool624 = icmp ne i32 %424, 0, !dbg !4069
  %cond625 = select i1 %tobool624, i32 1, i32 2, !dbg !4069
  %425 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4071
  %avctx626 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %425, i32 0, i32 1, !dbg !4072
  %426 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx626, align 8, !dbg !4072
  %color_range627 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %426, i32 0, i32 78, !dbg !4073
  store i32 %cond625, i32* %color_range627, align 8, !dbg !4074
  br label %sw.epilog, !dbg !4075

sw.bb628:                                         ; preds = %for.end442, %for.end442, %for.end442
  %427 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4076
  %bits629 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %427, i32 0, i32 22, !dbg !4078
  %428 = load i32, i32* %bits629, align 8, !dbg !4078
  %cmp630 = icmp sle i32 %428, 8, !dbg !4079
  br i1 %cmp630, label %if.then632, label %if.else638, !dbg !4080

if.then632:                                       ; preds = %sw.bb628
  %429 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4081
  %cs_itu601633 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %429, i32 0, i32 70, !dbg !4083
  %430 = load i32, i32* %cs_itu601633, align 4, !dbg !4083
  %tobool634 = icmp ne i32 %430, 0, !dbg !4081
  %cond635 = select i1 %tobool634, i32 5, i32 14, !dbg !4081
  %431 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4084
  %avctx636 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %431, i32 0, i32 1, !dbg !4085
  %432 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx636, align 8, !dbg !4085
  %pix_fmt637 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %432, i32 0, i32 25, !dbg !4086
  store i32 %cond635, i32* %pix_fmt637, align 8, !dbg !4087
  br label %if.end639, !dbg !4084

if.else638:                                       ; preds = %sw.bb628
  br label %unk_pixfmt, !dbg !4088

if.end639:                                        ; preds = %if.then632
  %433 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4089
  %cs_itu601640 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %433, i32 0, i32 70, !dbg !4090
  %434 = load i32, i32* %cs_itu601640, align 4, !dbg !4090
  %tobool641 = icmp ne i32 %434, 0, !dbg !4089
  %cond642 = select i1 %tobool641, i32 1, i32 2, !dbg !4089
  %435 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4091
  %avctx643 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %435, i32 0, i32 1, !dbg !4092
  %436 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx643, align 8, !dbg !4092
  %color_range644 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %436, i32 0, i32 78, !dbg !4093
  store i32 %cond642, i32* %color_range644, align 8, !dbg !4094
  br label %sw.epilog, !dbg !4095

sw.bb645:                                         ; preds = %for.end442, %for.end442, %for.end442, %for.end442, %for.end442, %for.end442, %for.end442, %for.end442, %for.end442
  %437 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4096
  %bits646 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %437, i32 0, i32 22, !dbg !4098
  %438 = load i32, i32* %bits646, align 8, !dbg !4098
  %cmp647 = icmp sle i32 %438, 8, !dbg !4099
  br i1 %cmp647, label %if.then649, label %if.else652, !dbg !4100

if.then649:                                       ; preds = %sw.bb645
  %439 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4101
  %avctx650 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %439, i32 0, i32 1, !dbg !4102
  %440 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx650, align 8, !dbg !4102
  %pix_fmt651 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %440, i32 0, i32 25, !dbg !4103
  store i32 8, i32* %pix_fmt651, align 8, !dbg !4104
  br label %if.end655, !dbg !4101

if.else652:                                       ; preds = %sw.bb645
  %441 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4105
  %avctx653 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %441, i32 0, i32 1, !dbg !4106
  %442 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx653, align 8, !dbg !4106
  %pix_fmt654 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %442, i32 0, i32 25, !dbg !4107
  store i32 30, i32* %pix_fmt654, align 8, !dbg !4108
  br label %if.end655

if.end655:                                        ; preds = %if.else652, %if.then649
  br label %sw.epilog, !dbg !4109

sw.bb656:                                         ; preds = %for.end442, %for.end442, %for.end442, %for.end442, %for.end442
  %443 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4110
  %component_id657 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %443, i32 0, i32 38, !dbg !4112
  %arrayidx658 = getelementptr inbounds [4 x i32], [4 x i32]* %component_id657, i64 0, i64 0, !dbg !4110
  %444 = load i32, i32* %arrayidx658, align 4, !dbg !4110
  %cmp659 = icmp eq i32 %444, 81, !dbg !4113
  br i1 %cmp659, label %land.lhs.true661, label %if.else684, !dbg !4114

land.lhs.true661:                                 ; preds = %sw.bb656
  %445 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4115
  %component_id662 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %445, i32 0, i32 38, !dbg !4117
  %arrayidx663 = getelementptr inbounds [4 x i32], [4 x i32]* %component_id662, i64 0, i64 1, !dbg !4115
  %446 = load i32, i32* %arrayidx663, align 4, !dbg !4115
  %cmp664 = icmp eq i32 %446, 70, !dbg !4118
  br i1 %cmp664, label %land.lhs.true666, label %if.else684, !dbg !4119

land.lhs.true666:                                 ; preds = %land.lhs.true661
  %447 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4120
  %component_id667 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %447, i32 0, i32 38, !dbg !4122
  %arrayidx668 = getelementptr inbounds [4 x i32], [4 x i32]* %component_id667, i64 0, i64 2, !dbg !4120
  %448 = load i32, i32* %arrayidx668, align 4, !dbg !4120
  %cmp669 = icmp eq i32 %448, 65, !dbg !4123
  br i1 %cmp669, label %if.then671, label %if.else684, !dbg !4124

if.then671:                                       ; preds = %land.lhs.true666
  %449 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4125
  %bits672 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %449, i32 0, i32 22, !dbg !4128
  %450 = load i32, i32* %bits672, align 8, !dbg !4128
  %cmp673 = icmp sle i32 %450, 8, !dbg !4129
  br i1 %cmp673, label %if.then675, label %if.else678, !dbg !4130

if.then675:                                       ; preds = %if.then671
  %451 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4131
  %avctx676 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %451, i32 0, i32 1, !dbg !4133
  %452 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx676, align 8, !dbg !4133
  %pix_fmt677 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %452, i32 0, i32 25, !dbg !4134
  store i32 73, i32* %pix_fmt677, align 8, !dbg !4135
  br label %if.end679, !dbg !4131

if.else678:                                       ; preds = %if.then671
  br label %unk_pixfmt, !dbg !4136

if.end679:                                        ; preds = %if.then675
  %453 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4137
  %upscale_v680 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %453, i32 0, i32 19, !dbg !4138
  %arrayidx681 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_v680, i64 0, i64 1, !dbg !4137
  store i8 1, i8* %arrayidx681, align 1, !dbg !4139
  %454 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4140
  %upscale_v682 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %454, i32 0, i32 19, !dbg !4141
  %arrayidx683 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_v682, i64 0, i64 0, !dbg !4140
  store i8 1, i8* %arrayidx683, align 4, !dbg !4142
  br label %if.end709, !dbg !4143

if.else684:                                       ; preds = %land.lhs.true666, %land.lhs.true661, %sw.bb656
  %455 = load i32, i32* %pix_fmt_id, align 4, !dbg !4144
  %cmp685 = icmp eq i32 %455, 336662784, !dbg !4147
  br i1 %cmp685, label %if.then687, label %if.end692, !dbg !4148

if.then687:                                       ; preds = %if.else684
  %456 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4149
  %upscale_v688 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %456, i32 0, i32 19, !dbg !4150
  %arrayidx689 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_v688, i64 0, i64 2, !dbg !4149
  store i8 1, i8* %arrayidx689, align 2, !dbg !4151
  %457 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4152
  %upscale_v690 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %457, i32 0, i32 19, !dbg !4153
  %arrayidx691 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_v690, i64 0, i64 1, !dbg !4152
  store i8 1, i8* %arrayidx691, align 1, !dbg !4154
  br label %if.end692, !dbg !4152

if.end692:                                        ; preds = %if.then687, %if.else684
  %458 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4155
  %bits693 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %458, i32 0, i32 22, !dbg !4157
  %459 = load i32, i32* %bits693, align 8, !dbg !4157
  %cmp694 = icmp sle i32 %459, 8, !dbg !4158
  br i1 %cmp694, label %if.then696, label %if.else702, !dbg !4159

if.then696:                                       ; preds = %if.end692
  %460 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4160
  %cs_itu601697 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %460, i32 0, i32 70, !dbg !4162
  %461 = load i32, i32* %cs_itu601697, align 4, !dbg !4162
  %tobool698 = icmp ne i32 %461, 0, !dbg !4160
  %cond699 = select i1 %tobool698, i32 31, i32 32, !dbg !4160
  %462 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4163
  %avctx700 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %462, i32 0, i32 1, !dbg !4164
  %463 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx700, align 8, !dbg !4164
  %pix_fmt701 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %463, i32 0, i32 25, !dbg !4165
  store i32 %cond699, i32* %pix_fmt701, align 8, !dbg !4166
  br label %if.end703, !dbg !4163

if.else702:                                       ; preds = %if.end692
  br label %unk_pixfmt, !dbg !4167

if.end703:                                        ; preds = %if.then696
  %464 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4168
  %cs_itu601704 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %464, i32 0, i32 70, !dbg !4169
  %465 = load i32, i32* %cs_itu601704, align 4, !dbg !4169
  %tobool705 = icmp ne i32 %465, 0, !dbg !4168
  %cond706 = select i1 %tobool705, i32 1, i32 2, !dbg !4168
  %466 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4170
  %avctx707 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %466, i32 0, i32 1, !dbg !4171
  %467 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx707, align 8, !dbg !4171
  %color_range708 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %467, i32 0, i32 78, !dbg !4172
  store i32 %cond706, i32* %color_range708, align 8, !dbg !4173
  br label %if.end709

if.end709:                                        ; preds = %if.end703, %if.end679
  br label %sw.epilog, !dbg !4174

sw.bb710:                                         ; preds = %for.end442
  %468 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4175
  %component_id711 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %468, i32 0, i32 38, !dbg !4177
  %arrayidx712 = getelementptr inbounds [4 x i32], [4 x i32]* %component_id711, i64 0, i64 0, !dbg !4175
  %469 = load i32, i32* %arrayidx712, align 4, !dbg !4175
  %cmp713 = icmp eq i32 %469, 81, !dbg !4178
  br i1 %cmp713, label %land.lhs.true715, label %if.else738, !dbg !4179

land.lhs.true715:                                 ; preds = %sw.bb710
  %470 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4180
  %component_id716 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %470, i32 0, i32 38, !dbg !4182
  %arrayidx717 = getelementptr inbounds [4 x i32], [4 x i32]* %component_id716, i64 0, i64 1, !dbg !4180
  %471 = load i32, i32* %arrayidx717, align 4, !dbg !4180
  %cmp718 = icmp eq i32 %471, 70, !dbg !4183
  br i1 %cmp718, label %land.lhs.true720, label %if.else738, !dbg !4184

land.lhs.true720:                                 ; preds = %land.lhs.true715
  %472 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4185
  %component_id721 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %472, i32 0, i32 38, !dbg !4187
  %arrayidx722 = getelementptr inbounds [4 x i32], [4 x i32]* %component_id721, i64 0, i64 2, !dbg !4185
  %473 = load i32, i32* %arrayidx722, align 4, !dbg !4185
  %cmp723 = icmp eq i32 %473, 65, !dbg !4188
  br i1 %cmp723, label %if.then725, label %if.else738, !dbg !4189

if.then725:                                       ; preds = %land.lhs.true720
  %474 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4190
  %bits726 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %474, i32 0, i32 22, !dbg !4193
  %475 = load i32, i32* %bits726, align 8, !dbg !4193
  %cmp727 = icmp sle i32 %475, 8, !dbg !4194
  br i1 %cmp727, label %if.then729, label %if.else732, !dbg !4195

if.then729:                                       ; preds = %if.then725
  %476 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4196
  %avctx730 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %476, i32 0, i32 1, !dbg !4198
  %477 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx730, align 8, !dbg !4198
  %pix_fmt731 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %477, i32 0, i32 25, !dbg !4199
  store i32 73, i32* %pix_fmt731, align 8, !dbg !4200
  br label %if.end733, !dbg !4196

if.else732:                                       ; preds = %if.then725
  br label %unk_pixfmt, !dbg !4201

if.end733:                                        ; preds = %if.then729
  %478 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4202
  %upscale_h734 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %478, i32 0, i32 18, !dbg !4203
  %arrayidx735 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_h734, i64 0, i64 1, !dbg !4202
  store i8 1, i8* %arrayidx735, align 1, !dbg !4204
  %479 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4205
  %upscale_h736 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %479, i32 0, i32 18, !dbg !4206
  %arrayidx737 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_h736, i64 0, i64 0, !dbg !4205
  store i8 1, i8* %arrayidx737, align 8, !dbg !4207
  br label %if.end757, !dbg !4208

if.else738:                                       ; preds = %land.lhs.true720, %land.lhs.true715, %sw.bb710
  %480 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4209
  %bits739 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %480, i32 0, i32 22, !dbg !4212
  %481 = load i32, i32* %bits739, align 8, !dbg !4212
  %cmp740 = icmp sle i32 %481, 8, !dbg !4213
  br i1 %cmp740, label %if.then742, label %if.else748, !dbg !4214

if.then742:                                       ; preds = %if.else738
  %482 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4215
  %cs_itu601743 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %482, i32 0, i32 70, !dbg !4217
  %483 = load i32, i32* %cs_itu601743, align 4, !dbg !4217
  %tobool744 = icmp ne i32 %483, 0, !dbg !4215
  %cond745 = select i1 %tobool744, i32 4, i32 13, !dbg !4215
  %484 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4218
  %avctx746 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %484, i32 0, i32 1, !dbg !4219
  %485 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx746, align 8, !dbg !4219
  %pix_fmt747 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %485, i32 0, i32 25, !dbg !4220
  store i32 %cond745, i32* %pix_fmt747, align 8, !dbg !4221
  br label %if.end751, !dbg !4218

if.else748:                                       ; preds = %if.else738
  %486 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4222
  %avctx749 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %486, i32 0, i32 1, !dbg !4223
  %487 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx749, align 8, !dbg !4223
  %pix_fmt750 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %487, i32 0, i32 25, !dbg !4224
  store i32 49, i32* %pix_fmt750, align 8, !dbg !4225
  br label %if.end751

if.end751:                                        ; preds = %if.else748, %if.then742
  %488 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4226
  %cs_itu601752 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %488, i32 0, i32 70, !dbg !4227
  %489 = load i32, i32* %cs_itu601752, align 4, !dbg !4227
  %tobool753 = icmp ne i32 %489, 0, !dbg !4226
  %cond754 = select i1 %tobool753, i32 1, i32 2, !dbg !4226
  %490 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4228
  %avctx755 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %490, i32 0, i32 1, !dbg !4229
  %491 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx755, align 8, !dbg !4229
  %color_range756 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %491, i32 0, i32 78, !dbg !4230
  store i32 %cond754, i32* %color_range756, align 8, !dbg !4231
  br label %if.end757

if.end757:                                        ; preds = %if.end751, %if.end733
  br label %sw.epilog, !dbg !4232

sw.bb758:                                         ; preds = %for.end442
  %492 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4233
  %bits759 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %492, i32 0, i32 22, !dbg !4235
  %493 = load i32, i32* %bits759, align 8, !dbg !4235
  %cmp760 = icmp sgt i32 %493, 8, !dbg !4236
  br i1 %cmp760, label %if.then762, label %if.end763, !dbg !4237

if.then762:                                       ; preds = %sw.bb758
  br label %unk_pixfmt, !dbg !4238

if.end763:                                        ; preds = %sw.bb758
  %494 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4239
  %cs_itu601764 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %494, i32 0, i32 70, !dbg !4240
  %495 = load i32, i32* %cs_itu601764, align 4, !dbg !4240
  %tobool765 = icmp ne i32 %495, 0, !dbg !4239
  %cond766 = select i1 %tobool765, i32 5, i32 14, !dbg !4239
  %496 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4241
  %avctx767 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %496, i32 0, i32 1, !dbg !4242
  %497 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx767, align 8, !dbg !4242
  %pix_fmt768 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %497, i32 0, i32 25, !dbg !4243
  store i32 %cond766, i32* %pix_fmt768, align 8, !dbg !4244
  %498 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4245
  %cs_itu601769 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %498, i32 0, i32 70, !dbg !4246
  %499 = load i32, i32* %cs_itu601769, align 4, !dbg !4246
  %tobool770 = icmp ne i32 %499, 0, !dbg !4245
  %cond771 = select i1 %tobool770, i32 1, i32 2, !dbg !4245
  %500 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4247
  %avctx772 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %500, i32 0, i32 1, !dbg !4248
  %501 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx772, align 8, !dbg !4248
  %color_range773 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %501, i32 0, i32 78, !dbg !4249
  store i32 %cond771, i32* %color_range773, align 8, !dbg !4250
  %502 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4251
  %upscale_h774 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %502, i32 0, i32 18, !dbg !4252
  %arrayidx775 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_h774, i64 0, i64 2, !dbg !4251
  store i8 2, i8* %arrayidx775, align 2, !dbg !4253
  %503 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4254
  %upscale_h776 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %503, i32 0, i32 18, !dbg !4255
  %arrayidx777 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_h776, i64 0, i64 1, !dbg !4254
  store i8 2, i8* %arrayidx777, align 1, !dbg !4256
  br label %sw.epilog, !dbg !4257

sw.bb778:                                         ; preds = %for.end442, %for.end442
  %504 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4258
  %bits779 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %504, i32 0, i32 22, !dbg !4260
  %505 = load i32, i32* %bits779, align 8, !dbg !4260
  %cmp780 = icmp sle i32 %505, 8, !dbg !4261
  br i1 %cmp780, label %if.then782, label %if.else788, !dbg !4262

if.then782:                                       ; preds = %sw.bb778
  %506 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4263
  %cs_itu601783 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %506, i32 0, i32 70, !dbg !4265
  %507 = load i32, i32* %cs_itu601783, align 4, !dbg !4265
  %tobool784 = icmp ne i32 %507, 0, !dbg !4263
  %cond785 = select i1 %tobool784, i32 4, i32 13, !dbg !4263
  %508 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4266
  %avctx786 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %508, i32 0, i32 1, !dbg !4267
  %509 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx786, align 8, !dbg !4267
  %pix_fmt787 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %509, i32 0, i32 25, !dbg !4268
  store i32 %cond785, i32* %pix_fmt787, align 8, !dbg !4269
  br label %if.end789, !dbg !4266

if.else788:                                       ; preds = %sw.bb778
  br label %unk_pixfmt, !dbg !4270

if.end789:                                        ; preds = %if.then782
  %510 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4271
  %cs_itu601790 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %510, i32 0, i32 70, !dbg !4272
  %511 = load i32, i32* %cs_itu601790, align 4, !dbg !4272
  %tobool791 = icmp ne i32 %511, 0, !dbg !4271
  %cond792 = select i1 %tobool791, i32 1, i32 2, !dbg !4271
  %512 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4273
  %avctx793 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %512, i32 0, i32 1, !dbg !4274
  %513 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx793, align 8, !dbg !4274
  %color_range794 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %513, i32 0, i32 78, !dbg !4275
  store i32 %cond792, i32* %color_range794, align 8, !dbg !4276
  br label %sw.epilog, !dbg !4277

sw.bb795:                                         ; preds = %for.end442, %for.end442, %for.end442, %for.end442
  %514 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4278
  %bits796 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %514, i32 0, i32 22, !dbg !4280
  %515 = load i32, i32* %bits796, align 8, !dbg !4280
  %cmp797 = icmp sle i32 %515, 8, !dbg !4281
  br i1 %cmp797, label %if.then799, label %if.else805, !dbg !4282

if.then799:                                       ; preds = %sw.bb795
  %516 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4283
  %cs_itu601800 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %516, i32 0, i32 70, !dbg !4285
  %517 = load i32, i32* %cs_itu601800, align 4, !dbg !4285
  %tobool801 = icmp ne i32 %517, 0, !dbg !4283
  %cond802 = select i1 %tobool801, i32 0, i32 12, !dbg !4283
  %518 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4286
  %avctx803 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %518, i32 0, i32 1, !dbg !4287
  %519 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx803, align 8, !dbg !4287
  %pix_fmt804 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %519, i32 0, i32 25, !dbg !4288
  store i32 %cond802, i32* %pix_fmt804, align 8, !dbg !4289
  br label %if.end808, !dbg !4286

if.else805:                                       ; preds = %sw.bb795
  %520 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4290
  %avctx806 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %520, i32 0, i32 1, !dbg !4291
  %521 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx806, align 8, !dbg !4291
  %pix_fmt807 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %521, i32 0, i32 25, !dbg !4292
  store i32 47, i32* %pix_fmt807, align 8, !dbg !4293
  br label %if.end808

if.end808:                                        ; preds = %if.else805, %if.then799
  %522 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4294
  %cs_itu601809 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %522, i32 0, i32 70, !dbg !4295
  %523 = load i32, i32* %cs_itu601809, align 4, !dbg !4295
  %tobool810 = icmp ne i32 %523, 0, !dbg !4294
  %cond811 = select i1 %tobool810, i32 1, i32 2, !dbg !4294
  %524 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4296
  %avctx812 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %524, i32 0, i32 1, !dbg !4297
  %525 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx812, align 8, !dbg !4297
  %color_range813 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %525, i32 0, i32 78, !dbg !4298
  store i32 %cond811, i32* %color_range813, align 8, !dbg !4299
  %526 = load i32, i32* %pix_fmt_id, align 4, !dbg !4300
  %cmp814 = icmp eq i32 %526, 1108414720, !dbg !4302
  br i1 %cmp814, label %if.then816, label %if.else826, !dbg !4303

if.then816:                                       ; preds = %if.end808
  %527 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4304
  %bits817 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %527, i32 0, i32 22, !dbg !4307
  %528 = load i32, i32* %bits817, align 8, !dbg !4307
  %cmp818 = icmp sgt i32 %528, 8, !dbg !4308
  br i1 %cmp818, label %if.then820, label %if.end821, !dbg !4309

if.then820:                                       ; preds = %if.then816
  br label %unk_pixfmt, !dbg !4310

if.end821:                                        ; preds = %if.then816
  %529 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4311
  %upscale_h822 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %529, i32 0, i32 18, !dbg !4312
  %arrayidx823 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_h822, i64 0, i64 2, !dbg !4311
  store i8 1, i8* %arrayidx823, align 2, !dbg !4313
  %530 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4314
  %upscale_h824 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %530, i32 0, i32 18, !dbg !4315
  %arrayidx825 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_h824, i64 0, i64 1, !dbg !4314
  store i8 1, i8* %arrayidx825, align 1, !dbg !4316
  br label %if.end854, !dbg !4317

if.else826:                                       ; preds = %if.end808
  %531 = load i32, i32* %pix_fmt_id, align 4, !dbg !4318
  %cmp827 = icmp eq i32 %531, 605098240, !dbg !4321
  br i1 %cmp827, label %if.then829, label %if.else839, !dbg !4318

if.then829:                                       ; preds = %if.else826
  %532 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4322
  %bits830 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %532, i32 0, i32 22, !dbg !4325
  %533 = load i32, i32* %bits830, align 8, !dbg !4325
  %cmp831 = icmp sgt i32 %533, 8, !dbg !4326
  br i1 %cmp831, label %if.then833, label %if.end834, !dbg !4327

if.then833:                                       ; preds = %if.then829
  br label %unk_pixfmt, !dbg !4328

if.end834:                                        ; preds = %if.then829
  %534 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4329
  %upscale_v835 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %534, i32 0, i32 19, !dbg !4330
  %arrayidx836 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_v835, i64 0, i64 2, !dbg !4329
  store i8 1, i8* %arrayidx836, align 2, !dbg !4331
  %535 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4332
  %upscale_v837 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %535, i32 0, i32 19, !dbg !4333
  %arrayidx838 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_v837, i64 0, i64 1, !dbg !4332
  store i8 1, i8* %arrayidx838, align 1, !dbg !4334
  br label %if.end853, !dbg !4335

if.else839:                                       ; preds = %if.else826
  %536 = load i32, i32* %pix_fmt_id, align 4, !dbg !4336
  %cmp840 = icmp eq i32 %536, 588321024, !dbg !4339
  br i1 %cmp840, label %if.then842, label %if.end852, !dbg !4336

if.then842:                                       ; preds = %if.else839
  %537 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4340
  %bits843 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %537, i32 0, i32 22, !dbg !4343
  %538 = load i32, i32* %bits843, align 8, !dbg !4343
  %cmp844 = icmp sgt i32 %538, 8, !dbg !4344
  br i1 %cmp844, label %if.then846, label %if.end847, !dbg !4345

if.then846:                                       ; preds = %if.then842
  br label %unk_pixfmt, !dbg !4346

if.end847:                                        ; preds = %if.then842
  %539 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4347
  %upscale_v848 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %539, i32 0, i32 19, !dbg !4348
  %arrayidx849 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_v848, i64 0, i64 2, !dbg !4347
  store i8 2, i8* %arrayidx849, align 2, !dbg !4349
  %540 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4350
  %upscale_v850 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %540, i32 0, i32 19, !dbg !4351
  %arrayidx851 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_v850, i64 0, i64 1, !dbg !4350
  store i8 2, i8* %arrayidx851, align 1, !dbg !4352
  br label %if.end852, !dbg !4353

if.end852:                                        ; preds = %if.end847, %if.else839
  br label %if.end853

if.end853:                                        ; preds = %if.end852, %if.end834
  br label %if.end854

if.end854:                                        ; preds = %if.end853, %if.end821
  br label %sw.epilog, !dbg !4354

sw.bb855:                                         ; preds = %for.end442
  %541 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4355
  %bits856 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %541, i32 0, i32 22, !dbg !4357
  %542 = load i32, i32* %bits856, align 8, !dbg !4357
  %cmp857 = icmp sle i32 %542, 8, !dbg !4358
  br i1 %cmp857, label %if.then859, label %if.else865, !dbg !4359

if.then859:                                       ; preds = %sw.bb855
  %543 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4360
  %cs_itu601860 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %543, i32 0, i32 70, !dbg !4362
  %544 = load i32, i32* %cs_itu601860, align 4, !dbg !4362
  %tobool861 = icmp ne i32 %544, 0, !dbg !4360
  %cond862 = select i1 %tobool861, i32 7, i32 140, !dbg !4360
  %545 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4363
  %avctx863 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %545, i32 0, i32 1, !dbg !4364
  %546 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx863, align 8, !dbg !4364
  %pix_fmt864 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %546, i32 0, i32 25, !dbg !4365
  store i32 %cond862, i32* %pix_fmt864, align 8, !dbg !4366
  br label %if.end866, !dbg !4363

if.else865:                                       ; preds = %sw.bb855
  br label %unk_pixfmt, !dbg !4367

if.end866:                                        ; preds = %if.then859
  %547 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4368
  %cs_itu601867 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %547, i32 0, i32 70, !dbg !4369
  %548 = load i32, i32* %cs_itu601867, align 4, !dbg !4369
  %tobool868 = icmp ne i32 %548, 0, !dbg !4368
  %cond869 = select i1 %tobool868, i32 1, i32 2, !dbg !4368
  %549 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4370
  %avctx870 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %549, i32 0, i32 1, !dbg !4371
  %550 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx870, align 8, !dbg !4371
  %color_range871 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %550, i32 0, i32 78, !dbg !4372
  store i32 %cond869, i32* %color_range871, align 8, !dbg !4373
  br label %sw.epilog, !dbg !4374

sw.default:                                       ; preds = %for.end442
  br label %unk_pixfmt, !dbg !4375

unk_pixfmt:                                       ; preds = %sw.default, %if.else865, %if.then846, %if.then833, %if.then820, %if.else788, %if.then762, %if.else732, %if.else702, %if.else678, %if.else638, %if.else621
  %551 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4377
  %avctx872 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %551, i32 0, i32 1, !dbg !4378
  %552 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx872, align 8, !dbg !4378
  %553 = bitcast %struct.AVCodecContext* %552 to i8*, !dbg !4377
  %554 = load i32, i32* %pix_fmt_id, align 4, !dbg !4379
  %555 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4380
  %bits873 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %555, i32 0, i32 22, !dbg !4381
  %556 = load i32, i32* %bits873, align 8, !dbg !4381
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %553, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.28, i32 0, i32 0), i32 %554, i32 %556), !dbg !4382
  %557 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4383
  %upscale_h874 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %557, i32 0, i32 18, !dbg !4384
  %arraydecay875 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_h874, i32 0, i32 0, !dbg !4385
  call void @llvm.memset.p0i8.i64(i8* %arraydecay875, i8 0, i64 4, i32 8, i1 false), !dbg !4385
  %558 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4386
  %upscale_v876 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %558, i32 0, i32 19, !dbg !4387
  %arraydecay877 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_v876, i32 0, i32 0, !dbg !4388
  call void @llvm.memset.p0i8.i64(i8* %arraydecay877, i8 0, i64 4, i32 4, i1 false), !dbg !4388
  store i32 -1163346256, i32* %retval, align 4, !dbg !4389
  br label %return, !dbg !4389

sw.epilog:                                        ; preds = %if.end866, %if.end854, %if.end789, %if.end763, %if.end757, %if.end709, %if.end655, %if.end639, %if.end622, %do.end610, %do.end542, %do.end
  %559 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4390
  %upscale_h878 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %559, i32 0, i32 18, !dbg !4391
  %arraydecay879 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_h878, i32 0, i32 0, !dbg !4392
  %560 = bitcast i8* %arraydecay879 to %union.unaligned_32*, !dbg !4392
  %l = bitcast %union.unaligned_32* %560 to i32*, !dbg !4392
  %561 = load i32, i32* %l, align 8, !dbg !4392
  store i32 %561, i32* %x.addr.i, align 4, !dbg !4393
  %562 = load i32, i32* %x.addr.i, align 4, !dbg !4394
  %shl.i = shl i32 %562, 8, !dbg !4395
  %and.i = and i32 %shl.i, 65280, !dbg !4396
  %563 = load i32, i32* %x.addr.i, align 4, !dbg !4397
  %shr.i = lshr i32 %563, 8, !dbg !4398
  %and1.i = and i32 %shr.i, 255, !dbg !4399
  %or.i = or i32 %and.i, %and1.i, !dbg !4400
  %shl2.i = shl i32 %or.i, 16, !dbg !4401
  %564 = load i32, i32* %x.addr.i, align 4, !dbg !4402
  %shr3.i = lshr i32 %564, 16, !dbg !4403
  %shl4.i = shl i32 %shr3.i, 8, !dbg !4404
  %and5.i = and i32 %shl4.i, 65280, !dbg !4405
  %565 = load i32, i32* %x.addr.i, align 4, !dbg !4406
  %shr6.i = lshr i32 %565, 16, !dbg !4407
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !4408
  %and8.i = and i32 %shr7.i, 255, !dbg !4409
  %or9.i = or i32 %and5.i, %and8.i, !dbg !4410
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !4411
  %tobool881 = icmp ne i32 %or10.i, 0, !dbg !4393
  br i1 %tobool881, label %land.lhs.true888, label %lor.lhs.false882, !dbg !4412

lor.lhs.false882:                                 ; preds = %sw.epilog
  %566 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4413
  %upscale_v883 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %566, i32 0, i32 19, !dbg !4414
  %arraydecay884 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_v883, i32 0, i32 0, !dbg !4415
  %567 = bitcast i8* %arraydecay884 to %union.unaligned_32*, !dbg !4415
  %l885 = bitcast %union.unaligned_32* %567 to i32*, !dbg !4415
  %568 = load i32, i32* %l885, align 4, !dbg !4415
  store i32 %568, i32* %x.addr.i1145, align 4, !dbg !4416
  %569 = load i32, i32* %x.addr.i1145, align 4, !dbg !4417
  %shl.i1146 = shl i32 %569, 8, !dbg !4418
  %and.i1147 = and i32 %shl.i1146, 65280, !dbg !4419
  %570 = load i32, i32* %x.addr.i1145, align 4, !dbg !4420
  %shr.i1148 = lshr i32 %570, 8, !dbg !4421
  %and1.i1149 = and i32 %shr.i1148, 255, !dbg !4422
  %or.i1150 = or i32 %and.i1147, %and1.i1149, !dbg !4423
  %shl2.i1151 = shl i32 %or.i1150, 16, !dbg !4424
  %571 = load i32, i32* %x.addr.i1145, align 4, !dbg !4425
  %shr3.i1152 = lshr i32 %571, 16, !dbg !4426
  %shl4.i1153 = shl i32 %shr3.i1152, 8, !dbg !4427
  %and5.i1154 = and i32 %shl4.i1153, 65280, !dbg !4428
  %572 = load i32, i32* %x.addr.i1145, align 4, !dbg !4429
  %shr6.i1155 = lshr i32 %572, 16, !dbg !4430
  %shr7.i1156 = lshr i32 %shr6.i1155, 8, !dbg !4431
  %and8.i1157 = and i32 %shr7.i1156, 255, !dbg !4432
  %or9.i1158 = or i32 %and5.i1154, %and8.i1157, !dbg !4433
  %or10.i1159 = or i32 %shl2.i1151, %or9.i1158, !dbg !4434
  %tobool887 = icmp ne i32 %or10.i1159, 0, !dbg !4416
  br i1 %tobool887, label %land.lhs.true888, label %if.end894, !dbg !4435

land.lhs.true888:                                 ; preds = %lor.lhs.false882, %sw.epilog
  %573 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4436
  %avctx889 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %573, i32 0, i32 1, !dbg !4438
  %574 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx889, align 8, !dbg !4438
  %lowres890 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %574, i32 0, i32 144, !dbg !4439
  %575 = load i32, i32* %lowres890, align 8, !dbg !4439
  %tobool891 = icmp ne i32 %575, 0, !dbg !4436
  br i1 %tobool891, label %if.then892, label %if.end894, !dbg !4440

if.then892:                                       ; preds = %land.lhs.true888
  %576 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4441
  %avctx893 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %576, i32 0, i32 1, !dbg !4443
  %577 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx893, align 8, !dbg !4443
  %578 = bitcast %struct.AVCodecContext* %577 to i8*, !dbg !4441
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %578, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.29, i32 0, i32 0)), !dbg !4444
  store i32 -1163346256, i32* %retval, align 4, !dbg !4445
  br label %return, !dbg !4445

if.end894:                                        ; preds = %land.lhs.true888, %lor.lhs.false882
  %579 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4446
  %upscale_h895 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %579, i32 0, i32 18, !dbg !4447
  %arraydecay896 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_h895, i32 0, i32 0, !dbg !4448
  %580 = bitcast i8* %arraydecay896 to %union.unaligned_32*, !dbg !4448
  %l897 = bitcast %union.unaligned_32* %580 to i32*, !dbg !4448
  %581 = load i32, i32* %l897, align 8, !dbg !4448
  store i32 %581, i32* %x.addr.i1175, align 4, !dbg !4449
  %582 = load i32, i32* %x.addr.i1175, align 4, !dbg !4450
  %shl.i1176 = shl i32 %582, 8, !dbg !4451
  %and.i1177 = and i32 %shl.i1176, 65280, !dbg !4452
  %583 = load i32, i32* %x.addr.i1175, align 4, !dbg !4453
  %shr.i1178 = lshr i32 %583, 8, !dbg !4454
  %and1.i1179 = and i32 %shr.i1178, 255, !dbg !4455
  %or.i1180 = or i32 %and.i1177, %and1.i1179, !dbg !4456
  %shl2.i1181 = shl i32 %or.i1180, 16, !dbg !4457
  %584 = load i32, i32* %x.addr.i1175, align 4, !dbg !4458
  %shr3.i1182 = lshr i32 %584, 16, !dbg !4459
  %shl4.i1183 = shl i32 %shr3.i1182, 8, !dbg !4460
  %and5.i1184 = and i32 %shl4.i1183, 65280, !dbg !4461
  %585 = load i32, i32* %x.addr.i1175, align 4, !dbg !4462
  %shr6.i1185 = lshr i32 %585, 16, !dbg !4463
  %shr7.i1186 = lshr i32 %shr6.i1185, 8, !dbg !4464
  %and8.i1187 = and i32 %shr7.i1186, 255, !dbg !4465
  %or9.i1188 = or i32 %and5.i1184, %and8.i1187, !dbg !4466
  %or10.i1189 = or i32 %shl2.i1181, %or9.i1188, !dbg !4467
  %tobool899 = icmp ne i32 %or10.i1189, 0, !dbg !4449
  br i1 %tobool899, label %land.lhs.true906, label %lor.lhs.false900, !dbg !4468

lor.lhs.false900:                                 ; preds = %if.end894
  %586 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4469
  %upscale_v901 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %586, i32 0, i32 19, !dbg !4470
  %arraydecay902 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_v901, i32 0, i32 0, !dbg !4471
  %587 = bitcast i8* %arraydecay902 to %union.unaligned_32*, !dbg !4471
  %l903 = bitcast %union.unaligned_32* %587 to i32*, !dbg !4471
  %588 = load i32, i32* %l903, align 4, !dbg !4471
  store i32 %588, i32* %x.addr.i1160, align 4, !dbg !4472
  %589 = load i32, i32* %x.addr.i1160, align 4, !dbg !4473
  %shl.i1161 = shl i32 %589, 8, !dbg !4474
  %and.i1162 = and i32 %shl.i1161, 65280, !dbg !4475
  %590 = load i32, i32* %x.addr.i1160, align 4, !dbg !4476
  %shr.i1163 = lshr i32 %590, 8, !dbg !4477
  %and1.i1164 = and i32 %shr.i1163, 255, !dbg !4478
  %or.i1165 = or i32 %and.i1162, %and1.i1164, !dbg !4479
  %shl2.i1166 = shl i32 %or.i1165, 16, !dbg !4480
  %591 = load i32, i32* %x.addr.i1160, align 4, !dbg !4481
  %shr3.i1167 = lshr i32 %591, 16, !dbg !4482
  %shl4.i1168 = shl i32 %shr3.i1167, 8, !dbg !4483
  %and5.i1169 = and i32 %shl4.i1168, 65280, !dbg !4484
  %592 = load i32, i32* %x.addr.i1160, align 4, !dbg !4485
  %shr6.i1170 = lshr i32 %592, 16, !dbg !4486
  %shr7.i1171 = lshr i32 %shr6.i1170, 8, !dbg !4487
  %and8.i1172 = and i32 %shr7.i1171, 255, !dbg !4488
  %or9.i1173 = or i32 %and5.i1169, %and8.i1172, !dbg !4489
  %or10.i1174 = or i32 %shl2.i1166, %or9.i1173, !dbg !4490
  %tobool905 = icmp ne i32 %or10.i1174, 0, !dbg !4472
  br i1 %tobool905, label %land.lhs.true906, label %if.end916, !dbg !4491

land.lhs.true906:                                 ; preds = %lor.lhs.false900, %if.end894
  %593 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4492
  %progressive907 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %593, i32 0, i32 16, !dbg !4494
  %594 = load i32, i32* %progressive907, align 16, !dbg !4494
  %tobool908 = icmp ne i32 %594, 0, !dbg !4492
  br i1 %tobool908, label %land.lhs.true909, label %if.end916, !dbg !4495

land.lhs.true909:                                 ; preds = %land.lhs.true906
  %595 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4496
  %avctx910 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %595, i32 0, i32 1, !dbg !4498
  %596 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx910, align 8, !dbg !4498
  %pix_fmt911 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %596, i32 0, i32 25, !dbg !4499
  %597 = load i32, i32* %pix_fmt911, align 8, !dbg !4499
  %cmp912 = icmp eq i32 %597, 73, !dbg !4500
  br i1 %cmp912, label %if.then914, label %if.end916, !dbg !4501

if.then914:                                       ; preds = %land.lhs.true909
  %598 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4502
  %avctx915 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %598, i32 0, i32 1, !dbg !4504
  %599 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx915, align 8, !dbg !4504
  %600 = bitcast %struct.AVCodecContext* %599 to i8*, !dbg !4502
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %600, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.30, i32 0, i32 0)), !dbg !4505
  store i32 -1163346256, i32* %retval, align 4, !dbg !4506
  br label %return, !dbg !4506

if.end916:                                        ; preds = %land.lhs.true909, %land.lhs.true906, %lor.lhs.false900
  %601 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4507
  %ls917 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %601, i32 0, i32 15, !dbg !4509
  %602 = load i32, i32* %ls917, align 4, !dbg !4509
  %tobool918 = icmp ne i32 %602, 0, !dbg !4507
  br i1 %tobool918, label %if.then919, label %if.end960, !dbg !4510

if.then919:                                       ; preds = %if.end916
  %603 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4511
  %upscale_h920 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %603, i32 0, i32 18, !dbg !4513
  %arraydecay921 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_h920, i32 0, i32 0, !dbg !4514
  call void @llvm.memset.p0i8.i64(i8* %arraydecay921, i8 0, i64 4, i32 8, i1 false), !dbg !4514
  %604 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4515
  %upscale_v922 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %604, i32 0, i32 19, !dbg !4516
  %arraydecay923 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_v922, i32 0, i32 0, !dbg !4517
  call void @llvm.memset.p0i8.i64(i8* %arraydecay923, i8 0, i64 4, i32 4, i1 false), !dbg !4517
  %605 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4518
  %nb_components924 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %605, i32 0, i32 36, !dbg !4520
  %606 = load i32, i32* %nb_components924, align 32, !dbg !4520
  %cmp925 = icmp eq i32 %606, 3, !dbg !4521
  br i1 %cmp925, label %if.then927, label %if.else930, !dbg !4522

if.then927:                                       ; preds = %if.then919
  %607 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4523
  %avctx928 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %607, i32 0, i32 1, !dbg !4525
  %608 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx928, align 8, !dbg !4525
  %pix_fmt929 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %608, i32 0, i32 25, !dbg !4526
  store i32 2, i32* %pix_fmt929, align 8, !dbg !4527
  br label %if.end959, !dbg !4528

if.else930:                                       ; preds = %if.then919
  %609 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4529
  %nb_components931 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %609, i32 0, i32 36, !dbg !4532
  %610 = load i32, i32* %nb_components931, align 32, !dbg !4532
  %cmp932 = icmp ne i32 %610, 1, !dbg !4533
  br i1 %cmp932, label %if.then934, label %if.else937, !dbg !4529

if.then934:                                       ; preds = %if.else930
  %611 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4534
  %avctx935 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %611, i32 0, i32 1, !dbg !4536
  %612 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx935, align 8, !dbg !4536
  %613 = bitcast %struct.AVCodecContext* %612 to i8*, !dbg !4534
  %614 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4537
  %nb_components936 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %614, i32 0, i32 36, !dbg !4538
  %615 = load i32, i32* %nb_components936, align 32, !dbg !4538
  call void (i8*, i32, i8*, ...) @av_log(i8* %613, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.31, i32 0, i32 0), i32 %615), !dbg !4539
  store i32 -1163346256, i32* %retval, align 4, !dbg !4540
  br label %return, !dbg !4540

if.else937:                                       ; preds = %if.else930
  %616 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4541
  %palette_index = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %616, i32 0, i32 62, !dbg !4543
  %617 = load i32, i32* %palette_index, align 32, !dbg !4543
  %tobool938 = icmp ne i32 %617, 0, !dbg !4541
  br i1 %tobool938, label %land.lhs.true939, label %if.else946, !dbg !4544

land.lhs.true939:                                 ; preds = %if.else937
  %618 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4545
  %bits940 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %618, i32 0, i32 22, !dbg !4547
  %619 = load i32, i32* %bits940, align 8, !dbg !4547
  %cmp941 = icmp sle i32 %619, 8, !dbg !4548
  br i1 %cmp941, label %if.then943, label %if.else946, !dbg !4549

if.then943:                                       ; preds = %land.lhs.true939
  %620 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4550
  %avctx944 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %620, i32 0, i32 1, !dbg !4551
  %621 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx944, align 8, !dbg !4551
  %pix_fmt945 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %621, i32 0, i32 25, !dbg !4552
  store i32 11, i32* %pix_fmt945, align 8, !dbg !4553
  br label %if.end957, !dbg !4550

if.else946:                                       ; preds = %land.lhs.true939, %if.else937
  %622 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4554
  %bits947 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %622, i32 0, i32 22, !dbg !4556
  %623 = load i32, i32* %bits947, align 8, !dbg !4556
  %cmp948 = icmp sle i32 %623, 8, !dbg !4557
  br i1 %cmp948, label %if.then950, label %if.else953, !dbg !4558

if.then950:                                       ; preds = %if.else946
  %624 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4559
  %avctx951 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %624, i32 0, i32 1, !dbg !4560
  %625 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx951, align 8, !dbg !4560
  %pix_fmt952 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %625, i32 0, i32 25, !dbg !4561
  store i32 8, i32* %pix_fmt952, align 8, !dbg !4562
  br label %if.end956, !dbg !4559

if.else953:                                       ; preds = %if.else946
  %626 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4563
  %avctx954 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %626, i32 0, i32 1, !dbg !4564
  %627 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx954, align 8, !dbg !4564
  %pix_fmt955 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %627, i32 0, i32 25, !dbg !4565
  store i32 30, i32* %pix_fmt955, align 8, !dbg !4566
  br label %if.end956

if.end956:                                        ; preds = %if.else953, %if.then950
  br label %if.end957

if.end957:                                        ; preds = %if.end956, %if.then943
  br label %if.end958

if.end958:                                        ; preds = %if.end957
  br label %if.end959

if.end959:                                        ; preds = %if.end958, %if.then927
  br label %if.end960, !dbg !4567

if.end960:                                        ; preds = %if.end959, %if.end916
  %628 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4568
  %avctx961 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %628, i32 0, i32 1, !dbg !4569
  %629 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx961, align 8, !dbg !4569
  %pix_fmt962 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %629, i32 0, i32 25, !dbg !4570
  %630 = load i32, i32* %pix_fmt962, align 8, !dbg !4570
  %call963 = call %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32 %630), !dbg !4571
  %631 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4572
  %pix_desc = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %631, i32 0, i32 81, !dbg !4573
  store %struct.AVPixFmtDescriptor* %call963, %struct.AVPixFmtDescriptor** %pix_desc, align 16, !dbg !4574
  %632 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4575
  %pix_desc964 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %632, i32 0, i32 81, !dbg !4577
  %633 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %pix_desc964, align 16, !dbg !4577
  %tobool965 = icmp ne %struct.AVPixFmtDescriptor* %633, null, !dbg !4575
  br i1 %tobool965, label %if.end968, label %if.then966, !dbg !4578

if.then966:                                       ; preds = %if.end960
  %634 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4579
  %avctx967 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %634, i32 0, i32 1, !dbg !4581
  %635 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx967, align 8, !dbg !4581
  %636 = bitcast %struct.AVCodecContext* %635 to i8*, !dbg !4579
  call void (i8*, i32, i8*, ...) @av_log(i8* %636, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0)), !dbg !4582
  store i32 -558323010, i32* %retval, align 4, !dbg !4583
  br label %return, !dbg !4583

if.end968:                                        ; preds = %if.end960
  %637 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4584
  %avctx969 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %637, i32 0, i32 1, !dbg !4586
  %638 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx969, align 8, !dbg !4586
  %pix_fmt970 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %638, i32 0, i32 25, !dbg !4587
  %639 = load i32, i32* %pix_fmt970, align 8, !dbg !4587
  %640 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4588
  %hwaccel_sw_pix_fmt = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %640, i32 0, i32 92, !dbg !4589
  %641 = load i32, i32* %hwaccel_sw_pix_fmt, align 16, !dbg !4589
  %cmp971 = icmp eq i32 %639, %641, !dbg !4590
  br i1 %cmp971, label %land.lhs.true973, label %if.else978, !dbg !4591

land.lhs.true973:                                 ; preds = %if.end968
  %642 = load i32, i32* %size_change, align 4, !dbg !4592
  %tobool974 = icmp ne i32 %642, 0, !dbg !4592
  br i1 %tobool974, label %if.else978, label %if.then975, !dbg !4594

if.then975:                                       ; preds = %land.lhs.true973
  %643 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4595
  %hwaccel_pix_fmt = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %643, i32 0, i32 93, !dbg !4597
  %644 = load i32, i32* %hwaccel_pix_fmt, align 4, !dbg !4597
  %645 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4598
  %avctx976 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %645, i32 0, i32 1, !dbg !4599
  %646 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx976, align 8, !dbg !4599
  %pix_fmt977 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %646, i32 0, i32 25, !dbg !4600
  store i32 %644, i32* %pix_fmt977, align 8, !dbg !4601
  br label %if.end996, !dbg !4602

if.else978:                                       ; preds = %land.lhs.true973, %if.end968
  call void @llvm.dbg.declare(metadata [2 x i32]* %pix_fmts, metadata !4603, metadata !2073), !dbg !4606
  %arrayinit.begin = getelementptr inbounds [2 x i32], [2 x i32]* %pix_fmts, i64 0, i64 0, !dbg !4607
  %647 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4608
  %avctx979 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %647, i32 0, i32 1, !dbg !4609
  %648 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx979, align 8, !dbg !4609
  %pix_fmt980 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %648, i32 0, i32 25, !dbg !4610
  %649 = load i32, i32* %pix_fmt980, align 8, !dbg !4610
  store i32 %649, i32* %arrayinit.begin, align 4, !dbg !4607
  %arrayinit.element = getelementptr inbounds i32, i32* %arrayinit.begin, i64 1, !dbg !4607
  store i32 -1, i32* %arrayinit.element, align 4, !dbg !4607
  %650 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4611
  %avctx981 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %650, i32 0, i32 1, !dbg !4612
  %651 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx981, align 8, !dbg !4612
  %arraydecay982 = getelementptr inbounds [2 x i32], [2 x i32]* %pix_fmts, i32 0, i32 0, !dbg !4613
  %call983 = call i32 @ff_get_format(%struct.AVCodecContext* %651, i32* %arraydecay982), !dbg !4614
  %652 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4615
  %hwaccel_pix_fmt984 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %652, i32 0, i32 93, !dbg !4616
  store i32 %call983, i32* %hwaccel_pix_fmt984, align 4, !dbg !4617
  %653 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4618
  %hwaccel_pix_fmt985 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %653, i32 0, i32 93, !dbg !4620
  %654 = load i32, i32* %hwaccel_pix_fmt985, align 4, !dbg !4620
  %cmp986 = icmp slt i32 %654, 0, !dbg !4621
  br i1 %cmp986, label %if.then988, label %if.end989, !dbg !4622

if.then988:                                       ; preds = %if.else978
  store i32 -22, i32* %retval, align 4, !dbg !4623
  br label %return, !dbg !4623

if.end989:                                        ; preds = %if.else978
  %655 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4624
  %avctx990 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %655, i32 0, i32 1, !dbg !4625
  %656 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx990, align 8, !dbg !4625
  %pix_fmt991 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %656, i32 0, i32 25, !dbg !4626
  %657 = load i32, i32* %pix_fmt991, align 8, !dbg !4626
  %658 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4627
  %hwaccel_sw_pix_fmt992 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %658, i32 0, i32 92, !dbg !4628
  store i32 %657, i32* %hwaccel_sw_pix_fmt992, align 16, !dbg !4629
  %659 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4630
  %hwaccel_pix_fmt993 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %659, i32 0, i32 93, !dbg !4631
  %660 = load i32, i32* %hwaccel_pix_fmt993, align 4, !dbg !4631
  %661 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4632
  %avctx994 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %661, i32 0, i32 1, !dbg !4633
  %662 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx994, align 8, !dbg !4633
  %pix_fmt995 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %662, i32 0, i32 25, !dbg !4634
  store i32 %660, i32* %pix_fmt995, align 8, !dbg !4635
  br label %if.end996

if.end996:                                        ; preds = %if.end989, %if.then975
  %663 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4636
  %avctx997 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %663, i32 0, i32 1, !dbg !4638
  %664 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx997, align 8, !dbg !4638
  %skip_frame = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %664, i32 0, i32 157, !dbg !4639
  %665 = load i32, i32* %skip_frame, align 4, !dbg !4639
  %cmp998 = icmp eq i32 %665, 48, !dbg !4640
  br i1 %cmp998, label %if.then1000, label %if.end1004, !dbg !4641

if.then1000:                                      ; preds = %if.end996
  %666 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4642
  %picture_ptr1001 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %666, i32 0, i32 53, !dbg !4644
  %667 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr1001, align 8, !dbg !4644
  %pict_type = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %667, i32 0, i32 8, !dbg !4645
  store i32 1, i32* %pict_type, align 4, !dbg !4646
  %668 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4647
  %picture_ptr1002 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %668, i32 0, i32 53, !dbg !4648
  %669 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr1002, align 8, !dbg !4648
  %key_frame = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %669, i32 0, i32 7, !dbg !4649
  store i32 1, i32* %key_frame, align 8, !dbg !4650
  %670 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4651
  %got_picture1003 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %670, i32 0, i32 54, !dbg !4652
  store i32 1, i32* %got_picture1003, align 16, !dbg !4653
  store i32 0, i32* %retval, align 4, !dbg !4654
  br label %return, !dbg !4654

if.end1004:                                       ; preds = %if.end996
  %671 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4655
  %picture_ptr1005 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %671, i32 0, i32 53, !dbg !4656
  %672 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr1005, align 8, !dbg !4656
  call void @av_frame_unref(%struct.AVFrame* %672), !dbg !4657
  %673 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4658
  %avctx1006 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %673, i32 0, i32 1, !dbg !4660
  %674 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1006, align 8, !dbg !4660
  %675 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4661
  %picture_ptr1007 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %675, i32 0, i32 53, !dbg !4662
  %676 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr1007, align 8, !dbg !4662
  %call1008 = call i32 @ff_get_buffer(%struct.AVCodecContext* %674, %struct.AVFrame* %676, i32 1), !dbg !4663
  %cmp1009 = icmp slt i32 %call1008, 0, !dbg !4664
  br i1 %cmp1009, label %if.then1011, label %if.end1012, !dbg !4665

if.then1011:                                      ; preds = %if.end1004
  store i32 -1, i32* %retval, align 4, !dbg !4666
  br label %return, !dbg !4666

if.end1012:                                       ; preds = %if.end1004
  %677 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4667
  %picture_ptr1013 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %677, i32 0, i32 53, !dbg !4668
  %678 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr1013, align 8, !dbg !4668
  %pict_type1014 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %678, i32 0, i32 8, !dbg !4669
  store i32 1, i32* %pict_type1014, align 4, !dbg !4670
  %679 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4671
  %picture_ptr1015 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %679, i32 0, i32 53, !dbg !4672
  %680 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr1015, align 8, !dbg !4672
  %key_frame1016 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %680, i32 0, i32 7, !dbg !4673
  store i32 1, i32* %key_frame1016, align 8, !dbg !4674
  %681 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4675
  %got_picture1017 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %681, i32 0, i32 54, !dbg !4676
  store i32 1, i32* %got_picture1017, align 16, !dbg !4677
  store i32 0, i32* %i, align 4, !dbg !4678
  br label %for.cond1018, !dbg !4680

for.cond1018:                                     ; preds = %for.inc1030, %if.end1012
  %682 = load i32, i32* %i, align 4, !dbg !4681
  %cmp1019 = icmp slt i32 %682, 4, !dbg !4684
  br i1 %cmp1019, label %for.body1021, label %for.end1032, !dbg !4685

for.body1021:                                     ; preds = %for.cond1018
  %683 = load i32, i32* %i, align 4, !dbg !4686
  %idxprom1022 = sext i32 %683 to i64, !dbg !4687
  %684 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4687
  %picture_ptr1023 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %684, i32 0, i32 53, !dbg !4688
  %685 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr1023, align 8, !dbg !4688
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %685, i32 0, i32 1, !dbg !4689
  %arrayidx1024 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 %idxprom1022, !dbg !4687
  %686 = load i32, i32* %arrayidx1024, align 4, !dbg !4687
  %687 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4690
  %interlaced1025 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %687, i32 0, i32 12, !dbg !4691
  %688 = load i32, i32* %interlaced1025, align 32, !dbg !4691
  %shl1026 = shl i32 %686, %688, !dbg !4692
  %689 = load i32, i32* %i, align 4, !dbg !4693
  %idxprom1027 = sext i32 %689 to i64, !dbg !4694
  %690 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4694
  %linesize1028 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %690, i32 0, i32 55, !dbg !4695
  %arrayidx1029 = getelementptr inbounds [4 x i32], [4 x i32]* %linesize1028, i64 0, i64 %idxprom1027, !dbg !4694
  store i32 %shl1026, i32* %arrayidx1029, align 4, !dbg !4696
  br label %for.inc1030, !dbg !4694

for.inc1030:                                      ; preds = %for.body1021
  %691 = load i32, i32* %i, align 4, !dbg !4697
  %inc1031 = add nsw i32 %691, 1, !dbg !4697
  store i32 %inc1031, i32* %i, align 4, !dbg !4697
  br label %for.cond1018, !dbg !4699, !llvm.loop !4700

for.end1032:                                      ; preds = %for.cond1018
  br label %do.body1033, !dbg !4702, !llvm.loop !4703

do.body1033:                                      ; preds = %for.end1032
  br label %do.end1034, !dbg !4704

do.end1034:                                       ; preds = %do.body1033
  br label %if.end1035

if.end1035:                                       ; preds = %do.end1034, %if.end302
  %692 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4707
  %rgb1036 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %692, i32 0, i32 17, !dbg !4709
  %693 = load i32, i32* %rgb1036, align 4, !dbg !4709
  %tobool1037 = icmp ne i32 %693, 0, !dbg !4707
  br i1 %tobool1037, label %land.lhs.true1038, label %lor.lhs.false1044, !dbg !4710

land.lhs.true1038:                                ; preds = %if.end1035
  %694 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4711
  %lossless1039 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %694, i32 0, i32 14, !dbg !4713
  %695 = load i32, i32* %lossless1039, align 8, !dbg !4713
  %tobool1040 = icmp ne i32 %695, 0, !dbg !4711
  br i1 %tobool1040, label %lor.lhs.false1044, label %land.lhs.true1041, !dbg !4714

land.lhs.true1041:                                ; preds = %land.lhs.true1038
  %696 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4715
  %ls1042 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %696, i32 0, i32 15, !dbg !4717
  %697 = load i32, i32* %ls1042, align 4, !dbg !4717
  %tobool1043 = icmp ne i32 %697, 0, !dbg !4715
  br i1 %tobool1043, label %lor.lhs.false1044, label %if.then1054, !dbg !4718

lor.lhs.false1044:                                ; preds = %land.lhs.true1041, %land.lhs.true1038, %if.end1035
  %698 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4719
  %rgb1045 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %698, i32 0, i32 17, !dbg !4720
  %699 = load i32, i32* %rgb1045, align 4, !dbg !4720
  %tobool1046 = icmp ne i32 %699, 0, !dbg !4719
  br i1 %tobool1046, label %if.end1056, label %land.lhs.true1047, !dbg !4721

land.lhs.true1047:                                ; preds = %lor.lhs.false1044
  %700 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4722
  %ls1048 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %700, i32 0, i32 15, !dbg !4723
  %701 = load i32, i32* %ls1048, align 4, !dbg !4723
  %tobool1049 = icmp ne i32 %701, 0, !dbg !4722
  br i1 %tobool1049, label %land.lhs.true1050, label %if.end1056, !dbg !4724

land.lhs.true1050:                                ; preds = %land.lhs.true1047
  %702 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4725
  %nb_components1051 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %702, i32 0, i32 36, !dbg !4726
  %703 = load i32, i32* %nb_components1051, align 32, !dbg !4726
  %cmp1052 = icmp sgt i32 %703, 1, !dbg !4727
  br i1 %cmp1052, label %if.then1054, label %if.end1056, !dbg !4728

if.then1054:                                      ; preds = %land.lhs.true1050, %land.lhs.true1041
  %704 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4729
  %avctx1055 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %704, i32 0, i32 1, !dbg !4731
  %705 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1055, align 8, !dbg !4731
  %706 = bitcast %struct.AVCodecContext* %705 to i8*, !dbg !4729
  call void (i8*, i32, i8*, ...) @av_log(i8* %706, i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.33, i32 0, i32 0)), !dbg !4732
  store i32 -1163346256, i32* %retval, align 4, !dbg !4733
  br label %return, !dbg !4733

if.end1056:                                       ; preds = %land.lhs.true1050, %land.lhs.true1047, %lor.lhs.false1044
  %707 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4734
  %progressive1057 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %707, i32 0, i32 16, !dbg !4736
  %708 = load i32, i32* %progressive1057, align 16, !dbg !4736
  %tobool1058 = icmp ne i32 %708, 0, !dbg !4734
  br i1 %tobool1058, label %if.then1059, label %if.end1123, !dbg !4737

if.then1059:                                      ; preds = %if.end1056
  call void @llvm.dbg.declare(metadata i32* %bw, metadata !4738, metadata !2073), !dbg !4740
  %709 = load i32, i32* %width, align 4, !dbg !4741
  %710 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4742
  %h_max1060 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %710, i32 0, i32 48, !dbg !4743
  %711 = load i32, i32* %h_max1060, align 4, !dbg !4743
  %mul1061 = mul nsw i32 %711, 8, !dbg !4744
  %add1062 = add nsw i32 %709, %mul1061, !dbg !4745
  %sub1063 = sub nsw i32 %add1062, 1, !dbg !4746
  %712 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4747
  %h_max1064 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %712, i32 0, i32 48, !dbg !4748
  %713 = load i32, i32* %h_max1064, align 4, !dbg !4748
  %mul1065 = mul nsw i32 %713, 8, !dbg !4749
  %div1066 = sdiv i32 %sub1063, %mul1065, !dbg !4750
  store i32 %div1066, i32* %bw, align 4, !dbg !4740
  call void @llvm.dbg.declare(metadata i32* %bh, metadata !4751, metadata !2073), !dbg !4752
  %714 = load i32, i32* %height, align 4, !dbg !4753
  %715 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4754
  %v_max1067 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %715, i32 0, i32 49, !dbg !4755
  %716 = load i32, i32* %v_max1067, align 8, !dbg !4755
  %mul1068 = mul nsw i32 %716, 8, !dbg !4756
  %add1069 = add nsw i32 %714, %mul1068, !dbg !4757
  %sub1070 = sub nsw i32 %add1069, 1, !dbg !4758
  %717 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4759
  %v_max1071 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %717, i32 0, i32 49, !dbg !4760
  %718 = load i32, i32* %v_max1071, align 8, !dbg !4760
  %mul1072 = mul nsw i32 %718, 8, !dbg !4761
  %div1073 = sdiv i32 %sub1070, %mul1072, !dbg !4762
  store i32 %div1073, i32* %bh, align 4, !dbg !4752
  store i32 0, i32* %i, align 4, !dbg !4763
  br label %for.cond1074, !dbg !4765

for.cond1074:                                     ; preds = %for.inc1119, %if.then1059
  %719 = load i32, i32* %i, align 4, !dbg !4766
  %720 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4769
  %nb_components1075 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %720, i32 0, i32 36, !dbg !4770
  %721 = load i32, i32* %nb_components1075, align 32, !dbg !4770
  %cmp1076 = icmp slt i32 %719, %721, !dbg !4771
  br i1 %cmp1076, label %for.body1078, label %for.end1121, !dbg !4772

for.body1078:                                     ; preds = %for.cond1074
  call void @llvm.dbg.declare(metadata i32* %size, metadata !4773, metadata !2073), !dbg !4775
  %722 = load i32, i32* %bw, align 4, !dbg !4776
  %723 = load i32, i32* %bh, align 4, !dbg !4777
  %mul1079 = mul nsw i32 %722, %723, !dbg !4778
  %724 = load i32, i32* %i, align 4, !dbg !4779
  %idxprom1080 = sext i32 %724 to i64, !dbg !4780
  %725 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4780
  %h_count1081 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %725, i32 0, i32 39, !dbg !4781
  %arrayidx1082 = getelementptr inbounds [4 x i32], [4 x i32]* %h_count1081, i64 0, i64 %idxprom1080, !dbg !4780
  %726 = load i32, i32* %arrayidx1082, align 4, !dbg !4780
  %mul1083 = mul nsw i32 %mul1079, %726, !dbg !4782
  %727 = load i32, i32* %i, align 4, !dbg !4783
  %idxprom1084 = sext i32 %727 to i64, !dbg !4784
  %728 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4784
  %v_count1085 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %728, i32 0, i32 40, !dbg !4785
  %arrayidx1086 = getelementptr inbounds [4 x i32], [4 x i32]* %v_count1085, i64 0, i64 %idxprom1084, !dbg !4784
  %729 = load i32, i32* %arrayidx1086, align 4, !dbg !4784
  %mul1087 = mul nsw i32 %mul1083, %729, !dbg !4786
  store i32 %mul1087, i32* %size, align 4, !dbg !4775
  %730 = load i32, i32* %i, align 4, !dbg !4787
  %idxprom1088 = sext i32 %730 to i64, !dbg !4788
  %731 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4788
  %blocks = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %731, i32 0, i32 59, !dbg !4789
  %arrayidx1089 = getelementptr inbounds [4 x [64 x i16]*], [4 x [64 x i16]*]* %blocks, i64 0, i64 %idxprom1088, !dbg !4788
  %732 = bitcast [64 x i16]** %arrayidx1089 to i8*, !dbg !4790
  call void @av_freep(i8* %732), !dbg !4791
  %733 = load i32, i32* %i, align 4, !dbg !4792
  %idxprom1090 = sext i32 %733 to i64, !dbg !4793
  %734 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4793
  %last_nnz = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %734, i32 0, i32 60, !dbg !4794
  %arrayidx1091 = getelementptr inbounds [4 x i8*], [4 x i8*]* %last_nnz, i64 0, i64 %idxprom1090, !dbg !4793
  %735 = bitcast i8** %arrayidx1091 to i8*, !dbg !4795
  call void @av_freep(i8* %735), !dbg !4796
  %736 = load i32, i32* %size, align 4, !dbg !4797
  %conv1092 = sext i32 %736 to i64, !dbg !4797
  %call1093 = call i8* @av_mallocz_array(i64 %conv1092, i64 128), !dbg !4798
  %737 = bitcast i8* %call1093 to [64 x i16]*, !dbg !4798
  %738 = load i32, i32* %i, align 4, !dbg !4799
  %idxprom1094 = sext i32 %738 to i64, !dbg !4800
  %739 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4800
  %blocks1095 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %739, i32 0, i32 59, !dbg !4801
  %arrayidx1096 = getelementptr inbounds [4 x [64 x i16]*], [4 x [64 x i16]*]* %blocks1095, i64 0, i64 %idxprom1094, !dbg !4800
  store [64 x i16]* %737, [64 x i16]** %arrayidx1096, align 8, !dbg !4802
  %740 = load i32, i32* %size, align 4, !dbg !4803
  %conv1097 = sext i32 %740 to i64, !dbg !4803
  %call1098 = call i8* @av_mallocz_array(i64 %conv1097, i64 1), !dbg !4804
  %741 = load i32, i32* %i, align 4, !dbg !4805
  %idxprom1099 = sext i32 %741 to i64, !dbg !4806
  %742 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4806
  %last_nnz1100 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %742, i32 0, i32 60, !dbg !4807
  %arrayidx1101 = getelementptr inbounds [4 x i8*], [4 x i8*]* %last_nnz1100, i64 0, i64 %idxprom1099, !dbg !4806
  store i8* %call1098, i8** %arrayidx1101, align 8, !dbg !4808
  %743 = load i32, i32* %i, align 4, !dbg !4809
  %idxprom1102 = sext i32 %743 to i64, !dbg !4811
  %744 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4811
  %blocks1103 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %744, i32 0, i32 59, !dbg !4812
  %arrayidx1104 = getelementptr inbounds [4 x [64 x i16]*], [4 x [64 x i16]*]* %blocks1103, i64 0, i64 %idxprom1102, !dbg !4811
  %745 = load [64 x i16]*, [64 x i16]** %arrayidx1104, align 8, !dbg !4811
  %tobool1105 = icmp ne [64 x i16]* %745, null, !dbg !4811
  br i1 %tobool1105, label %lor.lhs.false1106, label %if.then1111, !dbg !4813

lor.lhs.false1106:                                ; preds = %for.body1078
  %746 = load i32, i32* %i, align 4, !dbg !4814
  %idxprom1107 = sext i32 %746 to i64, !dbg !4816
  %747 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4816
  %last_nnz1108 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %747, i32 0, i32 60, !dbg !4817
  %arrayidx1109 = getelementptr inbounds [4 x i8*], [4 x i8*]* %last_nnz1108, i64 0, i64 %idxprom1107, !dbg !4816
  %748 = load i8*, i8** %arrayidx1109, align 8, !dbg !4816
  %tobool1110 = icmp ne i8* %748, null, !dbg !4816
  br i1 %tobool1110, label %if.end1112, label %if.then1111, !dbg !4818

if.then1111:                                      ; preds = %lor.lhs.false1106, %for.body1078
  store i32 -12, i32* %retval, align 4, !dbg !4819
  br label %return, !dbg !4819

if.end1112:                                       ; preds = %lor.lhs.false1106
  %749 = load i32, i32* %bw, align 4, !dbg !4820
  %750 = load i32, i32* %i, align 4, !dbg !4821
  %idxprom1113 = sext i32 %750 to i64, !dbg !4822
  %751 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4822
  %h_count1114 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %751, i32 0, i32 39, !dbg !4823
  %arrayidx1115 = getelementptr inbounds [4 x i32], [4 x i32]* %h_count1114, i64 0, i64 %idxprom1113, !dbg !4822
  %752 = load i32, i32* %arrayidx1115, align 4, !dbg !4822
  %mul1116 = mul nsw i32 %749, %752, !dbg !4824
  %753 = load i32, i32* %i, align 4, !dbg !4825
  %idxprom1117 = sext i32 %753 to i64, !dbg !4826
  %754 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4826
  %block_stride = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %754, i32 0, i32 37, !dbg !4827
  %arrayidx1118 = getelementptr inbounds [4 x i32], [4 x i32]* %block_stride, i64 0, i64 %idxprom1117, !dbg !4826
  store i32 %mul1116, i32* %arrayidx1118, align 4, !dbg !4828
  br label %for.inc1119, !dbg !4829

for.inc1119:                                      ; preds = %if.end1112
  %755 = load i32, i32* %i, align 4, !dbg !4830
  %inc1120 = add nsw i32 %755, 1, !dbg !4830
  store i32 %inc1120, i32* %i, align 4, !dbg !4830
  br label %for.cond1074, !dbg !4832, !llvm.loop !4833

for.end1121:                                      ; preds = %for.cond1074
  %756 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4835
  %coefs_finished = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %756, i32 0, i32 61, !dbg !4836
  %arraydecay1122 = getelementptr inbounds [4 x i64], [4 x i64]* %coefs_finished, i32 0, i32 0, !dbg !4837
  %757 = bitcast i64* %arraydecay1122 to i8*, !dbg !4837
  call void @llvm.memset.p0i8.i64(i8* %757, i8 0, i64 32, i32 32, i1 false), !dbg !4837
  br label %if.end1123, !dbg !4838

if.end1123:                                       ; preds = %for.end1121, %if.end1056
  %758 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4839
  %avctx1124 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %758, i32 0, i32 1, !dbg !4841
  %759 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1124, align 8, !dbg !4841
  %hwaccel = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %759, i32 0, i32 137, !dbg !4842
  %760 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel, align 8, !dbg !4842
  %tobool1125 = icmp ne %struct.AVHWAccel* %760, null, !dbg !4839
  br i1 %tobool1125, label %if.then1126, label %if.end1144, !dbg !4843

if.then1126:                                      ; preds = %if.end1123
  %761 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4844
  %avctx1127 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %761, i32 0, i32 1, !dbg !4846
  %762 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1127, align 8, !dbg !4846
  %hwaccel1128 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %762, i32 0, i32 137, !dbg !4847
  %763 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel1128, align 8, !dbg !4847
  %frame_priv_data_size = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %763, i32 0, i32 10, !dbg !4848
  %764 = load i32, i32* %frame_priv_data_size, align 8, !dbg !4848
  %conv1129 = sext i32 %764 to i64, !dbg !4844
  %call1130 = call noalias i8* @av_mallocz(i64 %conv1129), !dbg !4849
  %765 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4850
  %hwaccel_picture_private = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %765, i32 0, i32 94, !dbg !4851
  store i8* %call1130, i8** %hwaccel_picture_private, align 8, !dbg !4852
  %766 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4853
  %hwaccel_picture_private1131 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %766, i32 0, i32 94, !dbg !4855
  %767 = load i8*, i8** %hwaccel_picture_private1131, align 8, !dbg !4855
  %tobool1132 = icmp ne i8* %767, null, !dbg !4853
  br i1 %tobool1132, label %if.end1134, label %if.then1133, !dbg !4856

if.then1133:                                      ; preds = %if.then1126
  store i32 -12, i32* %retval, align 4, !dbg !4857
  br label %return, !dbg !4857

if.end1134:                                       ; preds = %if.then1126
  %768 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4858
  %avctx1135 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %768, i32 0, i32 1, !dbg !4859
  %769 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1135, align 8, !dbg !4859
  %hwaccel1136 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %769, i32 0, i32 137, !dbg !4860
  %770 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel1136, align 8, !dbg !4860
  %start_frame = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %770, i32 0, i32 6, !dbg !4861
  %771 = load i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)** %start_frame, align 8, !dbg !4861
  %772 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4862
  %avctx1137 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %772, i32 0, i32 1, !dbg !4863
  %773 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1137, align 8, !dbg !4863
  %774 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4864
  %raw_image_buffer = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %774, i32 0, i32 86, !dbg !4865
  %775 = load i8*, i8** %raw_image_buffer, align 16, !dbg !4865
  %776 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4866
  %raw_image_buffer_size = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %776, i32 0, i32 87, !dbg !4867
  %777 = load i64, i64* %raw_image_buffer_size, align 8, !dbg !4867
  %conv1138 = trunc i64 %777 to i32, !dbg !4866
  %call1139 = call i32 %771(%struct.AVCodecContext* %773, i8* %775, i32 %conv1138), !dbg !4858
  store i32 %call1139, i32* %ret, align 4, !dbg !4868
  %778 = load i32, i32* %ret, align 4, !dbg !4869
  %cmp1140 = icmp slt i32 %778, 0, !dbg !4871
  br i1 %cmp1140, label %if.then1142, label %if.end1143, !dbg !4872

if.then1142:                                      ; preds = %if.end1134
  %779 = load i32, i32* %ret, align 4, !dbg !4873
  store i32 %779, i32* %retval, align 4, !dbg !4874
  br label %return, !dbg !4874

if.end1143:                                       ; preds = %if.end1134
  br label %if.end1144, !dbg !4875

if.end1144:                                       ; preds = %if.end1143, %if.end1123
  store i32 0, i32* %retval, align 4, !dbg !4876
  br label %return, !dbg !4876

return:                                           ; preds = %if.end1144, %if.then1142, %if.then1133, %if.then1111, %if.then1054, %if.then1011, %if.then1000, %if.then988, %if.then966, %if.then934, %if.then914, %if.then892, %unk_pixfmt, %if.then300, %if.then281, %if.then208, %if.then156, %if.then146, %if.then101, %if.then94, %if.then83, %if.then71, %if.then62, %if.then50, %if.then29, %if.then
  %780 = load i32, i32* %retval, align 4, !dbg !4877
  ret i32 %780, !dbg !4877
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #5

declare i32 @av_image_check_size(i32, i32, i32, i8*) #2

declare void @avpriv_report_missing_feature(i8*, i8*, ...) #2

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #5

declare i32 @ff_set_dimensions(%struct.AVCodecContext*, i32, i32) #2

declare void @avpriv_request_sample(i8*, i8*, ...) #2

; Function Attrs: noreturn nounwind
declare void @abort() #7

declare %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32) #2

declare i32 @ff_get_format(%struct.AVCodecContext*, i32*) #2

declare void @av_frame_unref(%struct.AVFrame*) #2

declare i32 @ff_get_buffer(%struct.AVCodecContext*, %struct.AVFrame*, i32) #2

declare void @av_freep(i8*) #2

declare i8* @av_mallocz_array(i64, i64) #2

declare noalias i8* @av_mallocz(i64) #2

; Function Attrs: nounwind uwtable
define i32 @ff_mjpeg_decode_sos(%struct.MJpegDecodeContext* %s, i8* %mb_bitmask, i32 %mb_bitmask_size, %struct.AVFrame* %reference) #3 !dbg !4878 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.MJpegDecodeContext*, align 8
  %mb_bitmask.addr = alloca i8*, align 8
  %mb_bitmask_size.addr = alloca i32, align 4
  %reference.addr = alloca %struct.AVFrame*, align 8
  %len = alloca i32, align 4
  %nb_components = alloca i32, align 4
  %i = alloca i32, align 4
  %h = alloca i32, align 4
  %v = alloca i32, align 4
  %predictor = alloca i32, align 4
  %point_transform = alloca i32, align 4
  %index = alloca i32, align 4
  %id = alloca i32, align 4
  %ret = alloca i32, align 4
  %block_size = alloca i32, align 4
  %ilv = alloca i32, align 4
  %prev_shift = alloca i32, align 4
  %bytes_to_start = alloca i32, align 4
  %bak = alloca %struct.GetBitContext, align 8
  store %struct.MJpegDecodeContext* %s, %struct.MJpegDecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MJpegDecodeContext** %s.addr, metadata !4881, metadata !2073), !dbg !4882
  store i8* %mb_bitmask, i8** %mb_bitmask.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mb_bitmask.addr, metadata !4883, metadata !2073), !dbg !4884
  store i32 %mb_bitmask_size, i32* %mb_bitmask_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mb_bitmask_size.addr, metadata !4885, metadata !2073), !dbg !4886
  store %struct.AVFrame* %reference, %struct.AVFrame** %reference.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %reference.addr, metadata !4887, metadata !2073), !dbg !4888
  call void @llvm.dbg.declare(metadata i32* %len, metadata !4889, metadata !2073), !dbg !4890
  call void @llvm.dbg.declare(metadata i32* %nb_components, metadata !4891, metadata !2073), !dbg !4892
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4893, metadata !2073), !dbg !4894
  call void @llvm.dbg.declare(metadata i32* %h, metadata !4895, metadata !2073), !dbg !4896
  call void @llvm.dbg.declare(metadata i32* %v, metadata !4897, metadata !2073), !dbg !4898
  call void @llvm.dbg.declare(metadata i32* %predictor, metadata !4899, metadata !2073), !dbg !4900
  call void @llvm.dbg.declare(metadata i32* %point_transform, metadata !4901, metadata !2073), !dbg !4902
  call void @llvm.dbg.declare(metadata i32* %index, metadata !4903, metadata !2073), !dbg !4904
  call void @llvm.dbg.declare(metadata i32* %id, metadata !4905, metadata !2073), !dbg !4906
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4907, metadata !2073), !dbg !4908
  call void @llvm.dbg.declare(metadata i32* %block_size, metadata !4909, metadata !2073), !dbg !4910
  %0 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4911
  %lossless = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %0, i32 0, i32 14, !dbg !4912
  %1 = load i32, i32* %lossless, align 8, !dbg !4912
  %tobool = icmp ne i32 %1, 0, !dbg !4911
  %cond = select i1 %tobool, i32 1, i32 8, !dbg !4911
  store i32 %cond, i32* %block_size, align 4, !dbg !4910
  call void @llvm.dbg.declare(metadata i32* %ilv, metadata !4913, metadata !2073), !dbg !4914
  call void @llvm.dbg.declare(metadata i32* %prev_shift, metadata !4915, metadata !2073), !dbg !4916
  %2 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4917
  %got_picture = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %2, i32 0, i32 54, !dbg !4919
  %3 = load i32, i32* %got_picture, align 16, !dbg !4919
  %tobool1 = icmp ne i32 %3, 0, !dbg !4917
  br i1 %tobool1, label %if.end, label %if.then, !dbg !4920

if.then:                                          ; preds = %entry
  %4 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4921
  %avctx = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %4, i32 0, i32 1, !dbg !4923
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !4923
  %6 = bitcast %struct.AVCodecContext* %5 to i8*, !dbg !4921
  call void (i8*, i32, i8*, ...) @av_log(i8* %6, i32 24, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.34, i32 0, i32 0)), !dbg !4924
  store i32 -1, i32* %retval, align 4, !dbg !4925
  br label %return, !dbg !4925

if.end:                                           ; preds = %entry
  %7 = load %struct.AVFrame*, %struct.AVFrame** %reference.addr, align 8, !dbg !4926
  %tobool2 = icmp ne %struct.AVFrame* %7, null, !dbg !4926
  br i1 %tobool2, label %if.then3, label %if.end15, !dbg !4928

if.then3:                                         ; preds = %if.end
  %8 = load %struct.AVFrame*, %struct.AVFrame** %reference.addr, align 8, !dbg !4929
  %width = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %8, i32 0, i32 3, !dbg !4932
  %9 = load i32, i32* %width, align 8, !dbg !4932
  %10 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4933
  %picture_ptr = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %10, i32 0, i32 53, !dbg !4934
  %11 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr, align 8, !dbg !4934
  %width4 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %11, i32 0, i32 3, !dbg !4935
  %12 = load i32, i32* %width4, align 8, !dbg !4935
  %cmp = icmp ne i32 %9, %12, !dbg !4936
  br i1 %cmp, label %if.then12, label %lor.lhs.false, !dbg !4937

lor.lhs.false:                                    ; preds = %if.then3
  %13 = load %struct.AVFrame*, %struct.AVFrame** %reference.addr, align 8, !dbg !4938
  %height = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %13, i32 0, i32 4, !dbg !4939
  %14 = load i32, i32* %height, align 4, !dbg !4939
  %15 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4940
  %picture_ptr5 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %15, i32 0, i32 53, !dbg !4941
  %16 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr5, align 8, !dbg !4941
  %height6 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %16, i32 0, i32 4, !dbg !4942
  %17 = load i32, i32* %height6, align 4, !dbg !4942
  %cmp7 = icmp ne i32 %14, %17, !dbg !4943
  br i1 %cmp7, label %if.then12, label %lor.lhs.false8, !dbg !4944

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %18 = load %struct.AVFrame*, %struct.AVFrame** %reference.addr, align 8, !dbg !4945
  %format = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %18, i32 0, i32 6, !dbg !4946
  %19 = load i32, i32* %format, align 4, !dbg !4946
  %20 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4947
  %picture_ptr9 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %20, i32 0, i32 53, !dbg !4948
  %21 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr9, align 8, !dbg !4948
  %format10 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %21, i32 0, i32 6, !dbg !4949
  %22 = load i32, i32* %format10, align 4, !dbg !4949
  %cmp11 = icmp ne i32 %19, %22, !dbg !4950
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !4951

if.then12:                                        ; preds = %lor.lhs.false8, %lor.lhs.false, %if.then3
  %23 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4953
  %avctx13 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %23, i32 0, i32 1, !dbg !4955
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx13, align 8, !dbg !4955
  %25 = bitcast %struct.AVCodecContext* %24 to i8*, !dbg !4953
  call void (i8*, i32, i8*, ...) @av_log(i8* %25, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35, i32 0, i32 0)), !dbg !4956
  store i32 -1094995529, i32* %retval, align 4, !dbg !4957
  br label %return, !dbg !4957

if.end14:                                         ; preds = %lor.lhs.false8
  br label %if.end15, !dbg !4958

if.end15:                                         ; preds = %if.end14, %if.end
  %26 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4959
  %gb = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %26, i32 0, i32 2, !dbg !4960
  %call = call i32 @get_bits(%struct.GetBitContext* %gb, i32 16), !dbg !4961
  store i32 %call, i32* %len, align 4, !dbg !4962
  %27 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4963
  %gb16 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %27, i32 0, i32 2, !dbg !4964
  %call17 = call i32 @get_bits(%struct.GetBitContext* %gb16, i32 8), !dbg !4965
  store i32 %call17, i32* %nb_components, align 4, !dbg !4966
  %28 = load i32, i32* %nb_components, align 4, !dbg !4967
  %cmp18 = icmp eq i32 %28, 0, !dbg !4969
  br i1 %cmp18, label %if.then21, label %lor.lhs.false19, !dbg !4970

lor.lhs.false19:                                  ; preds = %if.end15
  %29 = load i32, i32* %nb_components, align 4, !dbg !4971
  %cmp20 = icmp sgt i32 %29, 4, !dbg !4973
  br i1 %cmp20, label %if.then21, label %if.end23, !dbg !4974

if.then21:                                        ; preds = %lor.lhs.false19, %if.end15
  %30 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4975
  %avctx22 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %30, i32 0, i32 1, !dbg !4977
  %31 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx22, align 8, !dbg !4977
  %32 = bitcast %struct.AVCodecContext* %31 to i8*, !dbg !4975
  %33 = load i32, i32* %nb_components, align 4, !dbg !4978
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %32, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.36, i32 0, i32 0), i32 %33), !dbg !4979
  store i32 -1163346256, i32* %retval, align 4, !dbg !4980
  br label %return, !dbg !4980

if.end23:                                         ; preds = %lor.lhs.false19
  %34 = load i32, i32* %len, align 4, !dbg !4981
  %35 = load i32, i32* %nb_components, align 4, !dbg !4983
  %mul = mul nsw i32 2, %35, !dbg !4984
  %add = add nsw i32 6, %mul, !dbg !4985
  %cmp24 = icmp ne i32 %34, %add, !dbg !4986
  br i1 %cmp24, label %if.then25, label %if.end27, !dbg !4987

if.then25:                                        ; preds = %if.end23
  %36 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !4988
  %avctx26 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %36, i32 0, i32 1, !dbg !4990
  %37 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx26, align 8, !dbg !4990
  %38 = bitcast %struct.AVCodecContext* %37 to i8*, !dbg !4988
  %39 = load i32, i32* %len, align 4, !dbg !4991
  call void (i8*, i32, i8*, ...) @av_log(i8* %38, i32 16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.37, i32 0, i32 0), i32 %39), !dbg !4992
  store i32 -1094995529, i32* %retval, align 4, !dbg !4993
  br label %return, !dbg !4993

if.end27:                                         ; preds = %if.end23
  store i32 0, i32* %i, align 4, !dbg !4994
  br label %for.cond, !dbg !4996

for.cond:                                         ; preds = %for.inc147, %if.end27
  %40 = load i32, i32* %i, align 4, !dbg !4997
  %41 = load i32, i32* %nb_components, align 4, !dbg !5000
  %cmp28 = icmp slt i32 %40, %41, !dbg !5001
  br i1 %cmp28, label %for.body, label %for.end149, !dbg !5002

for.body:                                         ; preds = %for.cond
  %42 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5003
  %gb29 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %42, i32 0, i32 2, !dbg !5005
  %call30 = call i32 @get_bits(%struct.GetBitContext* %gb29, i32 8), !dbg !5006
  %sub = sub i32 %call30, 1, !dbg !5007
  store i32 %sub, i32* %id, align 4, !dbg !5008
  %43 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5009
  %avctx31 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %43, i32 0, i32 1, !dbg !5010
  %44 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx31, align 8, !dbg !5010
  %45 = bitcast %struct.AVCodecContext* %44 to i8*, !dbg !5009
  %46 = load i32, i32* %id, align 4, !dbg !5011
  call void (i8*, i32, i8*, ...) @av_log(i8* %45, i32 48, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.38, i32 0, i32 0), i32 %46), !dbg !5012
  store i32 0, i32* %index, align 4, !dbg !5013
  br label %for.cond32, !dbg !5015

for.cond32:                                       ; preds = %for.inc, %for.body
  %47 = load i32, i32* %index, align 4, !dbg !5016
  %48 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5019
  %nb_components33 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %48, i32 0, i32 36, !dbg !5020
  %49 = load i32, i32* %nb_components33, align 32, !dbg !5020
  %cmp34 = icmp slt i32 %47, %49, !dbg !5021
  br i1 %cmp34, label %for.body35, label %for.end, !dbg !5022

for.body35:                                       ; preds = %for.cond32
  %50 = load i32, i32* %id, align 4, !dbg !5023
  %51 = load i32, i32* %index, align 4, !dbg !5025
  %idxprom = sext i32 %51 to i64, !dbg !5026
  %52 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5026
  %component_id = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %52, i32 0, i32 38, !dbg !5027
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %component_id, i64 0, i64 %idxprom, !dbg !5026
  %53 = load i32, i32* %arrayidx, align 4, !dbg !5026
  %cmp36 = icmp eq i32 %50, %53, !dbg !5028
  br i1 %cmp36, label %if.then37, label %if.end38, !dbg !5029

if.then37:                                        ; preds = %for.body35
  br label %for.end, !dbg !5030

if.end38:                                         ; preds = %for.body35
  br label %for.inc, !dbg !5031

for.inc:                                          ; preds = %if.end38
  %54 = load i32, i32* %index, align 4, !dbg !5033
  %inc = add nsw i32 %54, 1, !dbg !5033
  store i32 %inc, i32* %index, align 4, !dbg !5033
  br label %for.cond32, !dbg !5035, !llvm.loop !5036

for.end:                                          ; preds = %if.then37, %for.cond32
  %55 = load i32, i32* %index, align 4, !dbg !5038
  %56 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5040
  %nb_components39 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %56, i32 0, i32 36, !dbg !5041
  %57 = load i32, i32* %nb_components39, align 32, !dbg !5041
  %cmp40 = icmp eq i32 %55, %57, !dbg !5042
  br i1 %cmp40, label %if.then41, label %if.end43, !dbg !5043

if.then41:                                        ; preds = %for.end
  %58 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5044
  %avctx42 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %58, i32 0, i32 1, !dbg !5046
  %59 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx42, align 8, !dbg !5046
  %60 = bitcast %struct.AVCodecContext* %59 to i8*, !dbg !5044
  %61 = load i32, i32* %index, align 4, !dbg !5047
  call void (i8*, i32, i8*, ...) @av_log(i8* %60, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.39, i32 0, i32 0), i32 %61), !dbg !5048
  store i32 -1094995529, i32* %retval, align 4, !dbg !5049
  br label %return, !dbg !5049

if.end43:                                         ; preds = %for.end
  %62 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5050
  %avctx44 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %62, i32 0, i32 1, !dbg !5052
  %63 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx44, align 8, !dbg !5052
  %codec_tag = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %63, i32 0, i32 5, !dbg !5053
  %64 = load i32, i32* %codec_tag, align 4, !dbg !5053
  %cmp45 = icmp eq i32 %64, 1246975053, !dbg !5054
  br i1 %cmp45, label %land.lhs.true, label %if.end54, !dbg !5055

land.lhs.true:                                    ; preds = %if.end43
  %65 = load i32, i32* %nb_components, align 4, !dbg !5056
  %cmp46 = icmp eq i32 %65, 3, !dbg !5058
  br i1 %cmp46, label %land.lhs.true47, label %if.end54, !dbg !5059

land.lhs.true47:                                  ; preds = %land.lhs.true
  %66 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5060
  %nb_components48 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %66, i32 0, i32 36, !dbg !5062
  %67 = load i32, i32* %nb_components48, align 32, !dbg !5062
  %cmp49 = icmp eq i32 %67, 3, !dbg !5063
  br i1 %cmp49, label %land.lhs.true50, label %if.end54, !dbg !5064

land.lhs.true50:                                  ; preds = %land.lhs.true47
  %68 = load i32, i32* %i, align 4, !dbg !5065
  %tobool51 = icmp ne i32 %68, 0, !dbg !5065
  br i1 %tobool51, label %if.then52, label %if.end54, !dbg !5067

if.then52:                                        ; preds = %land.lhs.true50
  %69 = load i32, i32* %i, align 4, !dbg !5069
  %sub53 = sub nsw i32 3, %69, !dbg !5070
  store i32 %sub53, i32* %index, align 4, !dbg !5071
  br label %if.end54, !dbg !5072

if.end54:                                         ; preds = %if.then52, %land.lhs.true50, %land.lhs.true47, %land.lhs.true, %if.end43
  %70 = load i32, i32* %index, align 4, !dbg !5073
  %idxprom55 = sext i32 %70 to i64, !dbg !5074
  %71 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5074
  %quant_index = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %71, i32 0, i32 50, !dbg !5075
  %arrayidx56 = getelementptr inbounds [4 x i32], [4 x i32]* %quant_index, i64 0, i64 %idxprom55, !dbg !5074
  %72 = load i32, i32* %arrayidx56, align 4, !dbg !5074
  %73 = load i32, i32* %i, align 4, !dbg !5076
  %idxprom57 = sext i32 %73 to i64, !dbg !5077
  %74 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5077
  %quant_sindex = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %74, i32 0, i32 47, !dbg !5078
  %arrayidx58 = getelementptr inbounds [4 x i32], [4 x i32]* %quant_sindex, i64 0, i64 %idxprom57, !dbg !5077
  store i32 %72, i32* %arrayidx58, align 4, !dbg !5079
  %75 = load i32, i32* %index, align 4, !dbg !5080
  %idxprom59 = sext i32 %75 to i64, !dbg !5081
  %76 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5081
  %h_count = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %76, i32 0, i32 39, !dbg !5082
  %arrayidx60 = getelementptr inbounds [4 x i32], [4 x i32]* %h_count, i64 0, i64 %idxprom59, !dbg !5081
  %77 = load i32, i32* %arrayidx60, align 4, !dbg !5081
  %78 = load i32, i32* %index, align 4, !dbg !5083
  %idxprom61 = sext i32 %78 to i64, !dbg !5084
  %79 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5084
  %v_count = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %79, i32 0, i32 40, !dbg !5085
  %arrayidx62 = getelementptr inbounds [4 x i32], [4 x i32]* %v_count, i64 0, i64 %idxprom61, !dbg !5084
  %80 = load i32, i32* %arrayidx62, align 4, !dbg !5084
  %mul63 = mul nsw i32 %77, %80, !dbg !5086
  %81 = load i32, i32* %i, align 4, !dbg !5087
  %idxprom64 = sext i32 %81 to i64, !dbg !5088
  %82 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5088
  %nb_blocks = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %82, i32 0, i32 44, !dbg !5089
  %arrayidx65 = getelementptr inbounds [4 x i32], [4 x i32]* %nb_blocks, i64 0, i64 %idxprom64, !dbg !5088
  store i32 %mul63, i32* %arrayidx65, align 4, !dbg !5090
  %83 = load i32, i32* %index, align 4, !dbg !5091
  %idxprom66 = sext i32 %83 to i64, !dbg !5092
  %84 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5092
  %h_count67 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %84, i32 0, i32 39, !dbg !5093
  %arrayidx68 = getelementptr inbounds [4 x i32], [4 x i32]* %h_count67, i64 0, i64 %idxprom66, !dbg !5092
  %85 = load i32, i32* %arrayidx68, align 4, !dbg !5092
  %86 = load i32, i32* %i, align 4, !dbg !5094
  %idxprom69 = sext i32 %86 to i64, !dbg !5095
  %87 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5095
  %h_scount = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %87, i32 0, i32 45, !dbg !5096
  %arrayidx70 = getelementptr inbounds [4 x i32], [4 x i32]* %h_scount, i64 0, i64 %idxprom69, !dbg !5095
  store i32 %85, i32* %arrayidx70, align 4, !dbg !5097
  %88 = load i32, i32* %index, align 4, !dbg !5098
  %idxprom71 = sext i32 %88 to i64, !dbg !5099
  %89 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5099
  %v_count72 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %89, i32 0, i32 40, !dbg !5100
  %arrayidx73 = getelementptr inbounds [4 x i32], [4 x i32]* %v_count72, i64 0, i64 %idxprom71, !dbg !5099
  %90 = load i32, i32* %arrayidx73, align 4, !dbg !5099
  %91 = load i32, i32* %i, align 4, !dbg !5101
  %idxprom74 = sext i32 %91 to i64, !dbg !5102
  %92 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5102
  %v_scount = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %92, i32 0, i32 46, !dbg !5103
  %arrayidx75 = getelementptr inbounds [4 x i32], [4 x i32]* %v_scount, i64 0, i64 %idxprom74, !dbg !5102
  store i32 %90, i32* %arrayidx75, align 4, !dbg !5104
  %93 = load i32, i32* %nb_components, align 4, !dbg !5105
  %cmp76 = icmp eq i32 %93, 1, !dbg !5107
  br i1 %cmp76, label %land.lhs.true79, label %lor.lhs.false77, !dbg !5108

lor.lhs.false77:                                  ; preds = %if.end54
  %94 = load i32, i32* %nb_components, align 4, !dbg !5109
  %cmp78 = icmp eq i32 %94, 3, !dbg !5111
  br i1 %cmp78, label %land.lhs.true79, label %if.end87, !dbg !5112

land.lhs.true79:                                  ; preds = %lor.lhs.false77, %if.end54
  %95 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5113
  %nb_components80 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %95, i32 0, i32 36, !dbg !5115
  %96 = load i32, i32* %nb_components80, align 32, !dbg !5115
  %cmp81 = icmp eq i32 %96, 3, !dbg !5116
  br i1 %cmp81, label %land.lhs.true82, label %if.end87, !dbg !5117

land.lhs.true82:                                  ; preds = %land.lhs.true79
  %97 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5118
  %avctx83 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %97, i32 0, i32 1, !dbg !5120
  %98 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx83, align 8, !dbg !5120
  %pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %98, i32 0, i32 25, !dbg !5121
  %99 = load i32, i32* %pix_fmt, align 8, !dbg !5121
  %cmp84 = icmp eq i32 %99, 73, !dbg !5122
  br i1 %cmp84, label %if.then85, label %if.end87, !dbg !5123

if.then85:                                        ; preds = %land.lhs.true82
  %100 = load i32, i32* %index, align 4, !dbg !5124
  %add86 = add nsw i32 %100, 2, !dbg !5125
  %rem = srem i32 %add86, 3, !dbg !5126
  store i32 %rem, i32* %index, align 4, !dbg !5127
  br label %if.end87, !dbg !5128

if.end87:                                         ; preds = %if.then85, %land.lhs.true82, %land.lhs.true79, %lor.lhs.false77
  %101 = load i32, i32* %index, align 4, !dbg !5129
  %102 = load i32, i32* %i, align 4, !dbg !5130
  %idxprom88 = sext i32 %102 to i64, !dbg !5131
  %103 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5131
  %comp_index = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %103, i32 0, i32 41, !dbg !5132
  %arrayidx89 = getelementptr inbounds [4 x i32], [4 x i32]* %comp_index, i64 0, i64 %idxprom88, !dbg !5131
  store i32 %101, i32* %arrayidx89, align 4, !dbg !5133
  %104 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5134
  %gb90 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %104, i32 0, i32 2, !dbg !5135
  %call91 = call i32 @get_bits(%struct.GetBitContext* %gb90, i32 4), !dbg !5136
  %105 = load i32, i32* %i, align 4, !dbg !5137
  %idxprom92 = sext i32 %105 to i64, !dbg !5138
  %106 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5138
  %dc_index = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %106, i32 0, i32 42, !dbg !5139
  %arrayidx93 = getelementptr inbounds [4 x i32], [4 x i32]* %dc_index, i64 0, i64 %idxprom92, !dbg !5138
  store i32 %call91, i32* %arrayidx93, align 4, !dbg !5140
  %107 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5141
  %gb94 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %107, i32 0, i32 2, !dbg !5142
  %call95 = call i32 @get_bits(%struct.GetBitContext* %gb94, i32 4), !dbg !5143
  %108 = load i32, i32* %i, align 4, !dbg !5144
  %idxprom96 = sext i32 %108 to i64, !dbg !5145
  %109 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5145
  %ac_index = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %109, i32 0, i32 43, !dbg !5146
  %arrayidx97 = getelementptr inbounds [4 x i32], [4 x i32]* %ac_index, i64 0, i64 %idxprom96, !dbg !5145
  store i32 %call95, i32* %arrayidx97, align 4, !dbg !5147
  %110 = load i32, i32* %i, align 4, !dbg !5148
  %idxprom98 = sext i32 %110 to i64, !dbg !5150
  %111 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5150
  %dc_index99 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %111, i32 0, i32 42, !dbg !5151
  %arrayidx100 = getelementptr inbounds [4 x i32], [4 x i32]* %dc_index99, i64 0, i64 %idxprom98, !dbg !5150
  %112 = load i32, i32* %arrayidx100, align 4, !dbg !5150
  %cmp101 = icmp slt i32 %112, 0, !dbg !5152
  br i1 %cmp101, label %if.then117, label %lor.lhs.false102, !dbg !5153

lor.lhs.false102:                                 ; preds = %if.end87
  %113 = load i32, i32* %i, align 4, !dbg !5154
  %idxprom103 = sext i32 %113 to i64, !dbg !5156
  %114 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5156
  %ac_index104 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %114, i32 0, i32 43, !dbg !5157
  %arrayidx105 = getelementptr inbounds [4 x i32], [4 x i32]* %ac_index104, i64 0, i64 %idxprom103, !dbg !5156
  %115 = load i32, i32* %arrayidx105, align 4, !dbg !5156
  %cmp106 = icmp slt i32 %115, 0, !dbg !5158
  br i1 %cmp106, label %if.then117, label %lor.lhs.false107, !dbg !5159

lor.lhs.false107:                                 ; preds = %lor.lhs.false102
  %116 = load i32, i32* %i, align 4, !dbg !5160
  %idxprom108 = sext i32 %116 to i64, !dbg !5161
  %117 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5161
  %dc_index109 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %117, i32 0, i32 42, !dbg !5162
  %arrayidx110 = getelementptr inbounds [4 x i32], [4 x i32]* %dc_index109, i64 0, i64 %idxprom108, !dbg !5161
  %118 = load i32, i32* %arrayidx110, align 4, !dbg !5161
  %cmp111 = icmp sge i32 %118, 4, !dbg !5163
  br i1 %cmp111, label %if.then117, label %lor.lhs.false112, !dbg !5164

lor.lhs.false112:                                 ; preds = %lor.lhs.false107
  %119 = load i32, i32* %i, align 4, !dbg !5165
  %idxprom113 = sext i32 %119 to i64, !dbg !5166
  %120 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5166
  %ac_index114 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %120, i32 0, i32 43, !dbg !5167
  %arrayidx115 = getelementptr inbounds [4 x i32], [4 x i32]* %ac_index114, i64 0, i64 %idxprom113, !dbg !5166
  %121 = load i32, i32* %arrayidx115, align 4, !dbg !5166
  %cmp116 = icmp sge i32 %121, 4, !dbg !5168
  br i1 %cmp116, label %if.then117, label %if.end118, !dbg !5169

if.then117:                                       ; preds = %lor.lhs.false112, %lor.lhs.false107, %lor.lhs.false102, %if.end87
  br label %out_of_range, !dbg !5171

if.end118:                                        ; preds = %lor.lhs.false112
  %122 = load i32, i32* %i, align 4, !dbg !5172
  %idxprom119 = sext i32 %122 to i64, !dbg !5174
  %123 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5174
  %dc_index120 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %123, i32 0, i32 42, !dbg !5175
  %arrayidx121 = getelementptr inbounds [4 x i32], [4 x i32]* %dc_index120, i64 0, i64 %idxprom119, !dbg !5174
  %124 = load i32, i32* %arrayidx121, align 4, !dbg !5174
  %idxprom122 = sext i32 %124 to i64, !dbg !5176
  %125 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5176
  %vlcs = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %125, i32 0, i32 8, !dbg !5177
  %arrayidx123 = getelementptr inbounds [3 x [4 x %struct.VLC]], [3 x [4 x %struct.VLC]]* %vlcs, i64 0, i64 0, !dbg !5176
  %arrayidx124 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* %arrayidx123, i64 0, i64 %idxprom122, !dbg !5176
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx124, i32 0, i32 1, !dbg !5178
  %126 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !5178
  %tobool125 = icmp ne [2 x i16]* %126, null, !dbg !5176
  br i1 %tobool125, label %lor.lhs.false126, label %if.then145, !dbg !5179

lor.lhs.false126:                                 ; preds = %if.end118
  %127 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5180
  %progressive = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %127, i32 0, i32 16, !dbg !5182
  %128 = load i32, i32* %progressive, align 16, !dbg !5182
  %tobool127 = icmp ne i32 %128, 0, !dbg !5180
  br i1 %tobool127, label %cond.true, label %cond.false, !dbg !5183

cond.true:                                        ; preds = %lor.lhs.false126
  %129 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5184
  %ac_index128 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %129, i32 0, i32 43, !dbg !5186
  %arrayidx129 = getelementptr inbounds [4 x i32], [4 x i32]* %ac_index128, i64 0, i64 0, !dbg !5184
  %130 = load i32, i32* %arrayidx129, align 4, !dbg !5184
  %idxprom130 = sext i32 %130 to i64, !dbg !5187
  %131 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5187
  %vlcs131 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %131, i32 0, i32 8, !dbg !5188
  %arrayidx132 = getelementptr inbounds [3 x [4 x %struct.VLC]], [3 x [4 x %struct.VLC]]* %vlcs131, i64 0, i64 2, !dbg !5187
  %arrayidx133 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* %arrayidx132, i64 0, i64 %idxprom130, !dbg !5187
  %table134 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx133, i32 0, i32 1, !dbg !5189
  %132 = load [2 x i16]*, [2 x i16]** %table134, align 8, !dbg !5189
  %tobool135 = icmp ne [2 x i16]* %132, null, !dbg !5187
  br i1 %tobool135, label %if.end146, label %if.then145, !dbg !5190

cond.false:                                       ; preds = %lor.lhs.false126
  %133 = load i32, i32* %i, align 4, !dbg !5191
  %idxprom136 = sext i32 %133 to i64, !dbg !5193
  %134 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5193
  %ac_index137 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %134, i32 0, i32 43, !dbg !5194
  %arrayidx138 = getelementptr inbounds [4 x i32], [4 x i32]* %ac_index137, i64 0, i64 %idxprom136, !dbg !5193
  %135 = load i32, i32* %arrayidx138, align 4, !dbg !5193
  %idxprom139 = sext i32 %135 to i64, !dbg !5195
  %136 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5195
  %vlcs140 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %136, i32 0, i32 8, !dbg !5196
  %arrayidx141 = getelementptr inbounds [3 x [4 x %struct.VLC]], [3 x [4 x %struct.VLC]]* %vlcs140, i64 0, i64 1, !dbg !5195
  %arrayidx142 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* %arrayidx141, i64 0, i64 %idxprom139, !dbg !5195
  %table143 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx142, i32 0, i32 1, !dbg !5197
  %137 = load [2 x i16]*, [2 x i16]** %table143, align 8, !dbg !5197
  %tobool144 = icmp ne [2 x i16]* %137, null, !dbg !5195
  br i1 %tobool144, label %if.end146, label %if.then145, !dbg !5198

if.then145:                                       ; preds = %cond.false, %cond.true, %if.end118
  br label %out_of_range, !dbg !5199

if.end146:                                        ; preds = %cond.false, %cond.true
  br label %for.inc147, !dbg !5200

for.inc147:                                       ; preds = %if.end146
  %138 = load i32, i32* %i, align 4, !dbg !5201
  %inc148 = add nsw i32 %138, 1, !dbg !5201
  store i32 %inc148, i32* %i, align 4, !dbg !5201
  br label %for.cond, !dbg !5203, !llvm.loop !5204

for.end149:                                       ; preds = %for.cond
  %139 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5206
  %gb150 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %139, i32 0, i32 2, !dbg !5207
  %call151 = call i32 @get_bits(%struct.GetBitContext* %gb150, i32 8), !dbg !5208
  store i32 %call151, i32* %predictor, align 4, !dbg !5209
  %140 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5210
  %gb152 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %140, i32 0, i32 2, !dbg !5211
  %call153 = call i32 @get_bits(%struct.GetBitContext* %gb152, i32 8), !dbg !5212
  store i32 %call153, i32* %ilv, align 4, !dbg !5213
  %141 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5214
  %avctx154 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %141, i32 0, i32 1, !dbg !5216
  %142 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx154, align 8, !dbg !5216
  %codec_tag155 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %142, i32 0, i32 5, !dbg !5217
  %143 = load i32, i32* %codec_tag155, align 4, !dbg !5217
  %144 = load i32, i32* bitcast ([5 x i8]* @.str.40 to i32*), align 1, !dbg !5218
  %cmp156 = icmp ne i32 %143, %144, !dbg !5219
  br i1 %cmp156, label %if.then157, label %if.else, !dbg !5220

if.then157:                                       ; preds = %for.end149
  %145 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5221
  %gb158 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %145, i32 0, i32 2, !dbg !5223
  %call159 = call i32 @get_bits(%struct.GetBitContext* %gb158, i32 4), !dbg !5224
  store i32 %call159, i32* %prev_shift, align 4, !dbg !5225
  %146 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5226
  %gb160 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %146, i32 0, i32 2, !dbg !5227
  %call161 = call i32 @get_bits(%struct.GetBitContext* %gb160, i32 4), !dbg !5228
  store i32 %call161, i32* %point_transform, align 4, !dbg !5229
  br label %if.end162, !dbg !5230

if.else:                                          ; preds = %for.end149
  store i32 0, i32* %point_transform, align 4, !dbg !5231
  store i32 0, i32* %prev_shift, align 4, !dbg !5232
  br label %if.end162

if.end162:                                        ; preds = %if.else, %if.then157
  %147 = load i32, i32* %nb_components, align 4, !dbg !5233
  %cmp163 = icmp sgt i32 %147, 1, !dbg !5235
  br i1 %cmp163, label %if.then164, label %if.else178, !dbg !5236

if.then164:                                       ; preds = %if.end162
  %148 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5237
  %width165 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %148, i32 0, i32 32, !dbg !5239
  %149 = load i32, i32* %width165, align 16, !dbg !5239
  %150 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5240
  %h_max = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %150, i32 0, i32 48, !dbg !5241
  %151 = load i32, i32* %h_max, align 4, !dbg !5241
  %152 = load i32, i32* %block_size, align 4, !dbg !5242
  %mul166 = mul nsw i32 %151, %152, !dbg !5243
  %add167 = add nsw i32 %149, %mul166, !dbg !5244
  %sub168 = sub nsw i32 %add167, 1, !dbg !5245
  %153 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5246
  %h_max169 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %153, i32 0, i32 48, !dbg !5247
  %154 = load i32, i32* %h_max169, align 4, !dbg !5247
  %155 = load i32, i32* %block_size, align 4, !dbg !5248
  %mul170 = mul nsw i32 %154, %155, !dbg !5249
  %div = sdiv i32 %sub168, %mul170, !dbg !5250
  %156 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5251
  %mb_width = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %156, i32 0, i32 34, !dbg !5252
  store i32 %div, i32* %mb_width, align 8, !dbg !5253
  %157 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5254
  %height171 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %157, i32 0, i32 33, !dbg !5255
  %158 = load i32, i32* %height171, align 4, !dbg !5255
  %159 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5256
  %v_max = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %159, i32 0, i32 49, !dbg !5257
  %160 = load i32, i32* %v_max, align 8, !dbg !5257
  %161 = load i32, i32* %block_size, align 4, !dbg !5258
  %mul172 = mul nsw i32 %160, %161, !dbg !5259
  %add173 = add nsw i32 %158, %mul172, !dbg !5260
  %sub174 = sub nsw i32 %add173, 1, !dbg !5261
  %162 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5262
  %v_max175 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %162, i32 0, i32 49, !dbg !5263
  %163 = load i32, i32* %v_max175, align 8, !dbg !5263
  %164 = load i32, i32* %block_size, align 4, !dbg !5264
  %mul176 = mul nsw i32 %163, %164, !dbg !5265
  %div177 = sdiv i32 %sub174, %mul176, !dbg !5266
  %165 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5267
  %mb_height = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %165, i32 0, i32 35, !dbg !5268
  store i32 %div177, i32* %mb_height, align 4, !dbg !5269
  br label %if.end210, !dbg !5270

if.else178:                                       ; preds = %if.end162
  %166 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5271
  %ls = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %166, i32 0, i32 15, !dbg !5274
  %167 = load i32, i32* %ls, align 4, !dbg !5274
  %tobool179 = icmp ne i32 %167, 0, !dbg !5271
  br i1 %tobool179, label %if.end209, label %if.then180, !dbg !5275

if.then180:                                       ; preds = %if.else178
  %168 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5276
  %h_max181 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %168, i32 0, i32 48, !dbg !5278
  %169 = load i32, i32* %h_max181, align 4, !dbg !5278
  %170 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5279
  %h_scount182 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %170, i32 0, i32 45, !dbg !5280
  %arrayidx183 = getelementptr inbounds [4 x i32], [4 x i32]* %h_scount182, i64 0, i64 0, !dbg !5279
  %171 = load i32, i32* %arrayidx183, align 4, !dbg !5279
  %div184 = sdiv i32 %169, %171, !dbg !5281
  store i32 %div184, i32* %h, align 4, !dbg !5282
  %172 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5283
  %v_max185 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %172, i32 0, i32 49, !dbg !5284
  %173 = load i32, i32* %v_max185, align 8, !dbg !5284
  %174 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5285
  %v_scount186 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %174, i32 0, i32 46, !dbg !5286
  %arrayidx187 = getelementptr inbounds [4 x i32], [4 x i32]* %v_scount186, i64 0, i64 0, !dbg !5285
  %175 = load i32, i32* %arrayidx187, align 4, !dbg !5285
  %div188 = sdiv i32 %173, %175, !dbg !5287
  store i32 %div188, i32* %v, align 4, !dbg !5288
  %176 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5289
  %width189 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %176, i32 0, i32 32, !dbg !5290
  %177 = load i32, i32* %width189, align 16, !dbg !5290
  %178 = load i32, i32* %h, align 4, !dbg !5291
  %179 = load i32, i32* %block_size, align 4, !dbg !5292
  %mul190 = mul nsw i32 %178, %179, !dbg !5293
  %add191 = add nsw i32 %177, %mul190, !dbg !5294
  %sub192 = sub nsw i32 %add191, 1, !dbg !5295
  %180 = load i32, i32* %h, align 4, !dbg !5296
  %181 = load i32, i32* %block_size, align 4, !dbg !5297
  %mul193 = mul nsw i32 %180, %181, !dbg !5298
  %div194 = sdiv i32 %sub192, %mul193, !dbg !5299
  %182 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5300
  %mb_width195 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %182, i32 0, i32 34, !dbg !5301
  store i32 %div194, i32* %mb_width195, align 8, !dbg !5302
  %183 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5303
  %height196 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %183, i32 0, i32 33, !dbg !5304
  %184 = load i32, i32* %height196, align 4, !dbg !5304
  %185 = load i32, i32* %v, align 4, !dbg !5305
  %186 = load i32, i32* %block_size, align 4, !dbg !5306
  %mul197 = mul nsw i32 %185, %186, !dbg !5307
  %add198 = add nsw i32 %184, %mul197, !dbg !5308
  %sub199 = sub nsw i32 %add198, 1, !dbg !5309
  %187 = load i32, i32* %v, align 4, !dbg !5310
  %188 = load i32, i32* %block_size, align 4, !dbg !5311
  %mul200 = mul nsw i32 %187, %188, !dbg !5312
  %div201 = sdiv i32 %sub199, %mul200, !dbg !5313
  %189 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5314
  %mb_height202 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %189, i32 0, i32 35, !dbg !5315
  store i32 %div201, i32* %mb_height202, align 4, !dbg !5316
  %190 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5317
  %nb_blocks203 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %190, i32 0, i32 44, !dbg !5318
  %arrayidx204 = getelementptr inbounds [4 x i32], [4 x i32]* %nb_blocks203, i64 0, i64 0, !dbg !5317
  store i32 1, i32* %arrayidx204, align 4, !dbg !5319
  %191 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5320
  %h_scount205 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %191, i32 0, i32 45, !dbg !5321
  %arrayidx206 = getelementptr inbounds [4 x i32], [4 x i32]* %h_scount205, i64 0, i64 0, !dbg !5320
  store i32 1, i32* %arrayidx206, align 4, !dbg !5322
  %192 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5323
  %v_scount207 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %192, i32 0, i32 46, !dbg !5324
  %arrayidx208 = getelementptr inbounds [4 x i32], [4 x i32]* %v_scount207, i64 0, i64 0, !dbg !5323
  store i32 1, i32* %arrayidx208, align 4, !dbg !5325
  br label %if.end209, !dbg !5326

if.end209:                                        ; preds = %if.then180, %if.else178
  br label %if.end210

if.end210:                                        ; preds = %if.end209, %if.then164
  %193 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5327
  %avctx211 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %193, i32 0, i32 1, !dbg !5329
  %194 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx211, align 8, !dbg !5329
  %debug = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %194, i32 0, i32 134, !dbg !5330
  %195 = load i32, i32* %debug, align 4, !dbg !5330
  %and = and i32 %195, 1, !dbg !5331
  %tobool212 = icmp ne i32 %and, 0, !dbg !5331
  br i1 %tobool212, label %if.then213, label %if.end226, !dbg !5332

if.then213:                                       ; preds = %if.end210
  %196 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5333
  %avctx214 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %196, i32 0, i32 1, !dbg !5334
  %197 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx214, align 8, !dbg !5334
  %198 = bitcast %struct.AVCodecContext* %197 to i8*, !dbg !5333
  %199 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5335
  %lossless215 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %199, i32 0, i32 14, !dbg !5336
  %200 = load i32, i32* %lossless215, align 8, !dbg !5336
  %tobool216 = icmp ne i32 %200, 0, !dbg !5335
  %cond217 = select i1 %tobool216, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.43, i32 0, i32 0), !dbg !5335
  %201 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5337
  %rgb = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %201, i32 0, i32 17, !dbg !5338
  %202 = load i32, i32* %rgb, align 4, !dbg !5338
  %tobool218 = icmp ne i32 %202, 0, !dbg !5337
  %cond219 = select i1 %tobool218, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.45, i32 0, i32 0), !dbg !5337
  %203 = load i32, i32* %predictor, align 4, !dbg !5339
  %204 = load i32, i32* %point_transform, align 4, !dbg !5340
  %205 = load i32, i32* %ilv, align 4, !dbg !5341
  %206 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5342
  %bits = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %206, i32 0, i32 22, !dbg !5343
  %207 = load i32, i32* %bits, align 8, !dbg !5343
  %208 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5344
  %mjpb_skiptosod = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %208, i32 0, i32 73, !dbg !5345
  %209 = load i32, i32* %mjpb_skiptosod, align 32, !dbg !5345
  %210 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5346
  %pegasus_rct = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %210, i32 0, i32 21, !dbg !5347
  %211 = load i32, i32* %pegasus_rct, align 4, !dbg !5347
  %tobool220 = icmp ne i32 %211, 0, !dbg !5346
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !5346

cond.true221:                                     ; preds = %if.then213
  br label %cond.end, !dbg !5348

cond.false222:                                    ; preds = %if.then213
  %212 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5350
  %rct = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %212, i32 0, i32 20, !dbg !5352
  %213 = load i32, i32* %rct, align 32, !dbg !5352
  %tobool223 = icmp ne i32 %213, 0, !dbg !5350
  %cond224 = select i1 %tobool223, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.45, i32 0, i32 0), !dbg !5350
  br label %cond.end, !dbg !5353

cond.end:                                         ; preds = %cond.false222, %cond.true221
  %cond225 = phi i8* [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i32 0, i32 0), %cond.true221 ], [ %cond224, %cond.false222 ], !dbg !5354
  %214 = load i32, i32* %nb_components, align 4, !dbg !5356
  call void (i8*, i32, i8*, ...) @av_log(i8* %198, i32 48, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.41, i32 0, i32 0), i8* %cond217, i8* %cond219, i32 %203, i32 %204, i32 %205, i32 %207, i32 %209, i8* %cond225, i32 %214), !dbg !5357
  br label %if.end226, !dbg !5357

if.end226:                                        ; preds = %cond.end, %if.end210
  %215 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5358
  %mjpb_skiptosod227 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %215, i32 0, i32 73, !dbg !5360
  %216 = load i32, i32* %mjpb_skiptosod227, align 32, !dbg !5360
  store i32 %216, i32* %i, align 4, !dbg !5361
  br label %for.cond228, !dbg !5362

for.cond228:                                      ; preds = %for.inc232, %if.end226
  %217 = load i32, i32* %i, align 4, !dbg !5363
  %cmp229 = icmp sgt i32 %217, 0, !dbg !5366
  br i1 %cmp229, label %for.body230, label %for.end233, !dbg !5367

for.body230:                                      ; preds = %for.cond228
  %218 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5368
  %gb231 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %218, i32 0, i32 2, !dbg !5369
  call void @skip_bits(%struct.GetBitContext* %gb231, i32 8), !dbg !5370
  br label %for.inc232, !dbg !5370

for.inc232:                                       ; preds = %for.body230
  %219 = load i32, i32* %i, align 4, !dbg !5371
  %dec = add nsw i32 %219, -1, !dbg !5371
  store i32 %dec, i32* %i, align 4, !dbg !5371
  br label %for.cond228, !dbg !5373, !llvm.loop !5374

for.end233:                                       ; preds = %for.cond228
  br label %next_field, !dbg !5376

next_field:                                       ; preds = %if.then348, %for.end233
  store i32 0, i32* %i, align 4, !dbg !5378
  br label %for.cond234, !dbg !5380

for.cond234:                                      ; preds = %for.inc240, %next_field
  %220 = load i32, i32* %i, align 4, !dbg !5381
  %221 = load i32, i32* %nb_components, align 4, !dbg !5384
  %cmp235 = icmp slt i32 %220, %221, !dbg !5385
  br i1 %cmp235, label %for.body236, label %for.end242, !dbg !5386

for.body236:                                      ; preds = %for.cond234
  %222 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5387
  %bits237 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %222, i32 0, i32 22, !dbg !5388
  %223 = load i32, i32* %bits237, align 8, !dbg !5388
  %shl = shl i32 4, %223, !dbg !5389
  %224 = load i32, i32* %i, align 4, !dbg !5390
  %idxprom238 = sext i32 %224 to i64, !dbg !5391
  %225 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5391
  %last_dc = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %225, i32 0, i32 51, !dbg !5392
  %arrayidx239 = getelementptr inbounds [4 x i32], [4 x i32]* %last_dc, i64 0, i64 %idxprom238, !dbg !5391
  store i32 %shl, i32* %arrayidx239, align 4, !dbg !5393
  br label %for.inc240, !dbg !5391

for.inc240:                                       ; preds = %for.body236
  %226 = load i32, i32* %i, align 4, !dbg !5394
  %inc241 = add nsw i32 %226, 1, !dbg !5394
  store i32 %inc241, i32* %i, align 4, !dbg !5394
  br label %for.cond234, !dbg !5396, !llvm.loop !5397

for.end242:                                       ; preds = %for.cond234
  %227 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5399
  %avctx243 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %227, i32 0, i32 1, !dbg !5401
  %228 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx243, align 8, !dbg !5401
  %hwaccel = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %228, i32 0, i32 137, !dbg !5402
  %229 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel, align 8, !dbg !5402
  %tobool244 = icmp ne %struct.AVHWAccel* %229, null, !dbg !5399
  br i1 %tobool244, label %if.then245, label %if.else267, !dbg !5403

if.then245:                                       ; preds = %for.end242
  call void @llvm.dbg.declare(metadata i32* %bytes_to_start, metadata !5404, metadata !2073), !dbg !5406
  %230 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5407
  %gb246 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %230, i32 0, i32 2, !dbg !5408
  %call247 = call i32 @get_bits_count(%struct.GetBitContext* %gb246), !dbg !5409
  %div248 = sdiv i32 %call247, 8, !dbg !5410
  store i32 %div248, i32* %bytes_to_start, align 4, !dbg !5406
  br label %do.body, !dbg !5411, !llvm.loop !5412

do.body:                                          ; preds = %if.then245
  %231 = load i32, i32* %bytes_to_start, align 4, !dbg !5413
  %cmp249 = icmp sge i32 %231, 0, !dbg !5417
  br i1 %cmp249, label %land.lhs.true250, label %if.then253, !dbg !5418

land.lhs.true250:                                 ; preds = %do.body
  %232 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5419
  %raw_scan_buffer_size = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %232, i32 0, i32 89, !dbg !5421
  %233 = load i64, i64* %raw_scan_buffer_size, align 8, !dbg !5421
  %234 = load i32, i32* %bytes_to_start, align 4, !dbg !5422
  %conv = sext i32 %234 to i64, !dbg !5422
  %cmp251 = icmp uge i64 %233, %conv, !dbg !5423
  br i1 %cmp251, label %if.end254, label %if.then253, !dbg !5424

if.then253:                                       ; preds = %land.lhs.true250, %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.26, i32 0, i32 0), i32 1678), !dbg !5425
  call void @abort() #8, !dbg !5428
  unreachable, !dbg !5430

if.end254:                                        ; preds = %land.lhs.true250
  br label %do.end, !dbg !5431

do.end:                                           ; preds = %if.end254
  %235 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5433
  %avctx255 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %235, i32 0, i32 1, !dbg !5434
  %236 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx255, align 8, !dbg !5434
  %hwaccel256 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %236, i32 0, i32 137, !dbg !5435
  %237 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel256, align 8, !dbg !5435
  %decode_slice = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %237, i32 0, i32 8, !dbg !5436
  %238 = load i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)** %decode_slice, align 8, !dbg !5436
  %239 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5437
  %avctx257 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %239, i32 0, i32 1, !dbg !5438
  %240 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx257, align 8, !dbg !5438
  %241 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5439
  %raw_scan_buffer = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %241, i32 0, i32 88, !dbg !5440
  %242 = load i8*, i8** %raw_scan_buffer, align 32, !dbg !5440
  %243 = load i32, i32* %bytes_to_start, align 4, !dbg !5441
  %idx.ext = sext i32 %243 to i64, !dbg !5442
  %add.ptr = getelementptr inbounds i8, i8* %242, i64 %idx.ext, !dbg !5442
  %244 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5443
  %raw_scan_buffer_size258 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %244, i32 0, i32 89, !dbg !5444
  %245 = load i64, i64* %raw_scan_buffer_size258, align 8, !dbg !5444
  %246 = load i32, i32* %bytes_to_start, align 4, !dbg !5445
  %conv259 = sext i32 %246 to i64, !dbg !5445
  %sub260 = sub i64 %245, %conv259, !dbg !5446
  %conv261 = trunc i64 %sub260 to i32, !dbg !5443
  %call262 = call i32 %238(%struct.AVCodecContext* %240, i8* %add.ptr, i32 %conv261), !dbg !5433
  store i32 %call262, i32* %ret, align 4, !dbg !5447
  %247 = load i32, i32* %ret, align 4, !dbg !5448
  %cmp263 = icmp slt i32 %247, 0, !dbg !5450
  br i1 %cmp263, label %if.then265, label %if.end266, !dbg !5451

if.then265:                                       ; preds = %do.end
  %248 = load i32, i32* %ret, align 4, !dbg !5452
  store i32 %248, i32* %retval, align 4, !dbg !5453
  br label %return, !dbg !5453

if.end266:                                        ; preds = %do.end
  br label %if.end330, !dbg !5454

if.else267:                                       ; preds = %for.end242
  %249 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5455
  %lossless268 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %249, i32 0, i32 14, !dbg !5458
  %250 = load i32, i32* %lossless268, align 8, !dbg !5458
  %tobool269 = icmp ne i32 %250, 0, !dbg !5455
  br i1 %tobool269, label %if.then270, label %if.else303, !dbg !5455

if.then270:                                       ; preds = %if.else267
  br label %do.body271, !dbg !5459, !llvm.loop !5461

do.body271:                                       ; preds = %if.then270
  %251 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5462
  %picture_ptr272 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %251, i32 0, i32 53, !dbg !5466
  %252 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr272, align 8, !dbg !5466
  %253 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5467
  %picture = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %253, i32 0, i32 52, !dbg !5468
  %254 = load %struct.AVFrame*, %struct.AVFrame** %picture, align 32, !dbg !5468
  %cmp273 = icmp eq %struct.AVFrame* %252, %254, !dbg !5469
  br i1 %cmp273, label %if.end276, label %if.then275, !dbg !5470

if.then275:                                       ; preds = %do.body271
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.26, i32 0, i32 0), i32 1687), !dbg !5471
  call void @abort() #8, !dbg !5474
  unreachable, !dbg !5476

if.end276:                                        ; preds = %do.body271
  br label %do.end277, !dbg !5477

do.end277:                                        ; preds = %if.end276
  %255 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5479
  %ls278 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %255, i32 0, i32 15, !dbg !5481
  %256 = load i32, i32* %ls278, align 4, !dbg !5481
  %tobool279 = icmp ne i32 %256, 0, !dbg !5479
  br i1 %tobool279, label %if.then280, label %if.else286, !dbg !5482

if.then280:                                       ; preds = %do.end277
  %257 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5483
  %258 = load i32, i32* %predictor, align 4, !dbg !5486
  %259 = load i32, i32* %point_transform, align 4, !dbg !5487
  %260 = load i32, i32* %ilv, align 4, !dbg !5488
  %call281 = call i32 @ff_jpegls_decode_picture(%struct.MJpegDecodeContext* %257, i32 %258, i32 %259, i32 %260), !dbg !5489
  store i32 %call281, i32* %ret, align 4, !dbg !5490
  %cmp282 = icmp slt i32 %call281, 0, !dbg !5491
  br i1 %cmp282, label %if.then284, label %if.end285, !dbg !5492

if.then284:                                       ; preds = %if.then280
  %261 = load i32, i32* %ret, align 4, !dbg !5493
  store i32 %261, i32* %retval, align 4, !dbg !5494
  br label %return, !dbg !5494

if.end285:                                        ; preds = %if.then280
  br label %if.end302, !dbg !5495

if.else286:                                       ; preds = %do.end277
  %262 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5496
  %rgb287 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %262, i32 0, i32 17, !dbg !5499
  %263 = load i32, i32* %rgb287, align 4, !dbg !5499
  %tobool288 = icmp ne i32 %263, 0, !dbg !5496
  br i1 %tobool288, label %if.then289, label %if.else295, !dbg !5500

if.then289:                                       ; preds = %if.else286
  %264 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5501
  %265 = load i32, i32* %nb_components, align 4, !dbg !5504
  %266 = load i32, i32* %predictor, align 4, !dbg !5505
  %267 = load i32, i32* %point_transform, align 4, !dbg !5506
  %call290 = call i32 @ljpeg_decode_rgb_scan(%struct.MJpegDecodeContext* %264, i32 %265, i32 %266, i32 %267), !dbg !5507
  store i32 %call290, i32* %ret, align 4, !dbg !5508
  %cmp291 = icmp slt i32 %call290, 0, !dbg !5509
  br i1 %cmp291, label %if.then293, label %if.end294, !dbg !5510

if.then293:                                       ; preds = %if.then289
  %268 = load i32, i32* %ret, align 4, !dbg !5511
  store i32 %268, i32* %retval, align 4, !dbg !5512
  br label %return, !dbg !5512

if.end294:                                        ; preds = %if.then289
  br label %if.end301, !dbg !5513

if.else295:                                       ; preds = %if.else286
  %269 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5514
  %270 = load i32, i32* %predictor, align 4, !dbg !5517
  %271 = load i32, i32* %point_transform, align 4, !dbg !5518
  %272 = load i32, i32* %nb_components, align 4, !dbg !5519
  %call296 = call i32 @ljpeg_decode_yuv_scan(%struct.MJpegDecodeContext* %269, i32 %270, i32 %271, i32 %272), !dbg !5520
  store i32 %call296, i32* %ret, align 4, !dbg !5521
  %cmp297 = icmp slt i32 %call296, 0, !dbg !5522
  br i1 %cmp297, label %if.then299, label %if.end300, !dbg !5523

if.then299:                                       ; preds = %if.else295
  %273 = load i32, i32* %ret, align 4, !dbg !5524
  store i32 %273, i32* %retval, align 4, !dbg !5525
  br label %return, !dbg !5525

if.end300:                                        ; preds = %if.else295
  br label %if.end301

if.end301:                                        ; preds = %if.end300, %if.end294
  br label %if.end302

if.end302:                                        ; preds = %if.end301, %if.end285
  br label %if.end329, !dbg !5526

if.else303:                                       ; preds = %if.else267
  %274 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5527
  %progressive304 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %274, i32 0, i32 16, !dbg !5530
  %275 = load i32, i32* %progressive304, align 16, !dbg !5530
  %tobool305 = icmp ne i32 %275, 0, !dbg !5527
  br i1 %tobool305, label %land.lhs.true306, label %if.else322, !dbg !5531

land.lhs.true306:                                 ; preds = %if.else303
  %276 = load i32, i32* %predictor, align 4, !dbg !5532
  %tobool307 = icmp ne i32 %276, 0, !dbg !5532
  br i1 %tobool307, label %if.then308, label %if.else322, !dbg !5534

if.then308:                                       ; preds = %land.lhs.true306
  br label %do.body309, !dbg !5535, !llvm.loop !5537

do.body309:                                       ; preds = %if.then308
  %277 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5538
  %picture_ptr310 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %277, i32 0, i32 53, !dbg !5542
  %278 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr310, align 8, !dbg !5542
  %279 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5543
  %picture311 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %279, i32 0, i32 52, !dbg !5544
  %280 = load %struct.AVFrame*, %struct.AVFrame** %picture311, align 32, !dbg !5544
  %cmp312 = icmp eq %struct.AVFrame* %278, %280, !dbg !5545
  br i1 %cmp312, label %if.end315, label %if.then314, !dbg !5546

if.then314:                                       ; preds = %do.body309
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.26, i32 0, i32 0), i32 1708), !dbg !5547
  call void @abort() #8, !dbg !5550
  unreachable, !dbg !5552

if.end315:                                        ; preds = %do.body309
  br label %do.end316, !dbg !5553

do.end316:                                        ; preds = %if.end315
  %281 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5555
  %282 = load i32, i32* %predictor, align 4, !dbg !5557
  %283 = load i32, i32* %ilv, align 4, !dbg !5558
  %284 = load i32, i32* %prev_shift, align 4, !dbg !5559
  %285 = load i32, i32* %point_transform, align 4, !dbg !5560
  %call317 = call i32 @mjpeg_decode_scan_progressive_ac(%struct.MJpegDecodeContext* %281, i32 %282, i32 %283, i32 %284, i32 %285), !dbg !5561
  store i32 %call317, i32* %ret, align 4, !dbg !5562
  %cmp318 = icmp slt i32 %call317, 0, !dbg !5563
  br i1 %cmp318, label %if.then320, label %if.end321, !dbg !5564

if.then320:                                       ; preds = %do.end316
  %286 = load i32, i32* %ret, align 4, !dbg !5565
  store i32 %286, i32* %retval, align 4, !dbg !5566
  br label %return, !dbg !5566

if.end321:                                        ; preds = %do.end316
  br label %if.end328, !dbg !5567

if.else322:                                       ; preds = %land.lhs.true306, %if.else303
  %287 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5568
  %288 = load i32, i32* %nb_components, align 4, !dbg !5571
  %289 = load i32, i32* %prev_shift, align 4, !dbg !5572
  %290 = load i32, i32* %point_transform, align 4, !dbg !5573
  %291 = load i8*, i8** %mb_bitmask.addr, align 8, !dbg !5574
  %292 = load i32, i32* %mb_bitmask_size.addr, align 4, !dbg !5575
  %293 = load %struct.AVFrame*, %struct.AVFrame** %reference.addr, align 8, !dbg !5576
  %call323 = call i32 @mjpeg_decode_scan(%struct.MJpegDecodeContext* %287, i32 %288, i32 %289, i32 %290, i8* %291, i32 %292, %struct.AVFrame* %293), !dbg !5577
  store i32 %call323, i32* %ret, align 4, !dbg !5578
  %cmp324 = icmp slt i32 %call323, 0, !dbg !5579
  br i1 %cmp324, label %if.then326, label %if.end327, !dbg !5580

if.then326:                                       ; preds = %if.else322
  %294 = load i32, i32* %ret, align 4, !dbg !5581
  store i32 %294, i32* %retval, align 4, !dbg !5582
  br label %return, !dbg !5582

if.end327:                                        ; preds = %if.else322
  br label %if.end328

if.end328:                                        ; preds = %if.end327, %if.end321
  br label %if.end329

if.end329:                                        ; preds = %if.end328, %if.end302
  br label %if.end330

if.end330:                                        ; preds = %if.end329, %if.end266
  %295 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5583
  %interlaced = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %295, i32 0, i32 12, !dbg !5585
  %296 = load i32, i32* %interlaced, align 32, !dbg !5585
  %tobool331 = icmp ne i32 %296, 0, !dbg !5583
  br i1 %tobool331, label %land.lhs.true332, label %if.end353, !dbg !5586

land.lhs.true332:                                 ; preds = %if.end330
  %297 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5587
  %gb333 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %297, i32 0, i32 2, !dbg !5588
  %call334 = call i32 @get_bits_left(%struct.GetBitContext* %gb333), !dbg !5589
  %cmp335 = icmp sgt i32 %call334, 32, !dbg !5590
  br i1 %cmp335, label %land.lhs.true337, label %if.end353, !dbg !5591

land.lhs.true337:                                 ; preds = %land.lhs.true332
  %298 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5592
  %gb338 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %298, i32 0, i32 2, !dbg !5593
  %call339 = call i32 @show_bits(%struct.GetBitContext* %gb338, i32 8), !dbg !5594
  %cmp340 = icmp eq i32 %call339, 255, !dbg !5595
  br i1 %cmp340, label %if.then342, label %if.end353, !dbg !5596

if.then342:                                       ; preds = %land.lhs.true337
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %bak, metadata !5598, metadata !2073), !dbg !5600
  %299 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5601
  %gb343 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %299, i32 0, i32 2, !dbg !5602
  %300 = bitcast %struct.GetBitContext* %bak to i8*, !dbg !5602
  %301 = bitcast %struct.GetBitContext* %gb343 to i8*, !dbg !5602
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %300, i8* %301, i64 32, i32 8, i1 false), !dbg !5602
  %call344 = call i8* @align_get_bits(%struct.GetBitContext* %bak), !dbg !5603
  %call345 = call i32 @show_bits(%struct.GetBitContext* %bak, i32 16), !dbg !5604
  %cmp346 = icmp eq i32 %call345, 65489, !dbg !5606
  br i1 %cmp346, label %if.then348, label %if.end352, !dbg !5607

if.then348:                                       ; preds = %if.then342
  %302 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5608
  %avctx349 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %302, i32 0, i32 1, !dbg !5610
  %303 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx349, align 8, !dbg !5610
  %304 = bitcast %struct.AVCodecContext* %303 to i8*, !dbg !5608
  call void (i8*, i32, i8*, ...) @av_log(i8* %304, i32 48, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.50, i32 0, i32 0)), !dbg !5611
  %305 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5612
  %gb350 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %305, i32 0, i32 2, !dbg !5613
  %306 = bitcast %struct.GetBitContext* %gb350 to i8*, !dbg !5614
  %307 = bitcast %struct.GetBitContext* %bak to i8*, !dbg !5614
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %306, i8* %307, i64 32, i32 8, i1 false), !dbg !5614
  %308 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5615
  %gb351 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %308, i32 0, i32 2, !dbg !5616
  call void @skip_bits(%struct.GetBitContext* %gb351, i32 16), !dbg !5617
  %309 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5618
  %bottom_field = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %309, i32 0, i32 13, !dbg !5619
  %310 = load i32, i32* %bottom_field, align 4, !dbg !5620
  %xor = xor i32 %310, 1, !dbg !5620
  store i32 %xor, i32* %bottom_field, align 4, !dbg !5620
  br label %next_field, !dbg !5621

if.end352:                                        ; preds = %if.then342
  br label %if.end353, !dbg !5622

if.end353:                                        ; preds = %if.end352, %land.lhs.true337, %land.lhs.true332, %if.end330
  call void asm sideeffect "emms", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !5623, !srcloc !5629
  store i32 0, i32* %retval, align 4, !dbg !5630
  br label %return, !dbg !5630

out_of_range:                                     ; preds = %if.then145, %if.then117
  %311 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5631
  %avctx354 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %311, i32 0, i32 1, !dbg !5632
  %312 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx354, align 8, !dbg !5632
  %313 = bitcast %struct.AVCodecContext* %312 to i8*, !dbg !5631
  call void (i8*, i32, i8*, ...) @av_log(i8* %313, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.51, i32 0, i32 0)), !dbg !5633
  store i32 -1094995529, i32* %retval, align 4, !dbg !5634
  br label %return, !dbg !5634

return:                                           ; preds = %out_of_range, %if.end353, %if.then326, %if.then320, %if.then299, %if.then293, %if.then284, %if.then265, %if.then41, %if.then25, %if.then21, %if.then12, %if.then
  %314 = load i32, i32* %retval, align 4, !dbg !5635
  ret i32 %314, !dbg !5635
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits(%struct.GetBitContext* %s, i32 %n) #4 !dbg !5636 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !5639, metadata !2073), !dbg !5640
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !5641, metadata !2073), !dbg !5642
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !5643, metadata !2073), !dbg !5644
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5645
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !5646
  %1 = load i32, i32* %index, align 8, !dbg !5646
  store i32 %1, i32* %re_index, align 4, !dbg !5644
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !5647, metadata !2073), !dbg !5648
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !5649, metadata !2073), !dbg !5650
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5651
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !5652
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !5652
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !5650
  %4 = load i32, i32* %re_size_plus8, align 4, !dbg !5653
  %5 = load i32, i32* %re_index, align 4, !dbg !5654
  %6 = load i32, i32* %n.addr, align 4, !dbg !5655
  %add = add i32 %5, %6, !dbg !5656
  %cmp = icmp ugt i32 %4, %add, !dbg !5657
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5658

cond.true:                                        ; preds = %entry
  %7 = load i32, i32* %re_index, align 4, !dbg !5659
  %8 = load i32, i32* %n.addr, align 4, !dbg !5661
  %add1 = add i32 %7, %8, !dbg !5662
  br label %cond.end, !dbg !5663

cond.false:                                       ; preds = %entry
  %9 = load i32, i32* %re_size_plus8, align 4, !dbg !5664
  br label %cond.end, !dbg !5666

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add1, %cond.true ], [ %9, %cond.false ], !dbg !5667
  store i32 %cond, i32* %re_index, align 4, !dbg !5669
  %10 = load i32, i32* %re_index, align 4, !dbg !5670
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5671
  %index2 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 2, !dbg !5672
  store i32 %10, i32* %index2, align 8, !dbg !5673
  ret void, !dbg !5674
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_count(%struct.GetBitContext* %s) #4 !dbg !5675 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !5680, metadata !2073), !dbg !5681
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5682
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !5683
  %1 = load i32, i32* %index, align 8, !dbg !5683
  ret i32 %1, !dbg !5684
}

declare i32 @ff_jpegls_decode_picture(%struct.MJpegDecodeContext*, i32, i32, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @ljpeg_decode_rgb_scan(%struct.MJpegDecodeContext* %s, i32 %nb_components, i32 %predictor, i32 %point_transform) #3 !dbg !5685 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.MJpegDecodeContext*, align 8
  %nb_components.addr = alloca i32, align 4
  %predictor.addr = alloca i32, align 4
  %point_transform.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %mb_x = alloca i32, align 4
  %mb_y = alloca i32, align 4
  %buffer = alloca [4 x i16]*, align 8
  %left = alloca [4 x i32], align 16
  %top = alloca [4 x i32], align 16
  %topleft = alloca [4 x i32], align 16
  %linesize = alloca i32, align 4
  %mask = alloca i32, align 4
  %resync_mb_y = alloca i32, align 4
  %resync_mb_x = alloca i32, align 4
  %ptr = alloca i8*, align 8
  %modified_predictor = alloca i32, align 4
  %pred = alloca i32, align 4
  %dc = alloca i32, align 4
  %c = alloca i32, align 4
  %c456 = alloca i32, align 4
  store %struct.MJpegDecodeContext* %s, %struct.MJpegDecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MJpegDecodeContext** %s.addr, metadata !5688, metadata !2073), !dbg !5689
  store i32 %nb_components, i32* %nb_components.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_components.addr, metadata !5690, metadata !2073), !dbg !5691
  store i32 %predictor, i32* %predictor.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %predictor.addr, metadata !5692, metadata !2073), !dbg !5693
  store i32 %point_transform, i32* %point_transform.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %point_transform.addr, metadata !5694, metadata !2073), !dbg !5695
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5696, metadata !2073), !dbg !5697
  call void @llvm.dbg.declare(metadata i32* %mb_x, metadata !5698, metadata !2073), !dbg !5699
  call void @llvm.dbg.declare(metadata i32* %mb_y, metadata !5700, metadata !2073), !dbg !5701
  call void @llvm.dbg.declare(metadata [4 x i16]** %buffer, metadata !5702, metadata !2073), !dbg !5703
  call void @llvm.dbg.declare(metadata [4 x i32]* %left, metadata !5704, metadata !2073), !dbg !5705
  call void @llvm.dbg.declare(metadata [4 x i32]* %top, metadata !5706, metadata !2073), !dbg !5707
  call void @llvm.dbg.declare(metadata [4 x i32]* %topleft, metadata !5708, metadata !2073), !dbg !5709
  call void @llvm.dbg.declare(metadata i32* %linesize, metadata !5710, metadata !2073), !dbg !5711
  %0 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5712
  %linesize1 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %0, i32 0, i32 55, !dbg !5713
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %linesize1, i64 0, i64 0, !dbg !5712
  %1 = load i32, i32* %arrayidx, align 4, !dbg !5712
  store i32 %1, i32* %linesize, align 4, !dbg !5711
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !5714, metadata !2073), !dbg !5715
  %2 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5716
  %bits = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %2, i32 0, i32 22, !dbg !5717
  %3 = load i32, i32* %bits, align 8, !dbg !5717
  %shl = shl i32 1, %3, !dbg !5718
  %sub = sub nsw i32 %shl, 1, !dbg !5719
  %4 = load i32, i32* %point_transform.addr, align 4, !dbg !5720
  %shl2 = shl i32 %sub, %4, !dbg !5721
  store i32 %shl2, i32* %mask, align 4, !dbg !5715
  call void @llvm.dbg.declare(metadata i32* %resync_mb_y, metadata !5722, metadata !2073), !dbg !5723
  store i32 0, i32* %resync_mb_y, align 4, !dbg !5723
  call void @llvm.dbg.declare(metadata i32* %resync_mb_x, metadata !5724, metadata !2073), !dbg !5725
  store i32 0, i32* %resync_mb_x, align 4, !dbg !5725
  %5 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5726
  %nb_components3 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %5, i32 0, i32 36, !dbg !5728
  %6 = load i32, i32* %nb_components3, align 32, !dbg !5728
  %cmp = icmp ne i32 %6, 3, !dbg !5729
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5730

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5731
  %nb_components4 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %7, i32 0, i32 36, !dbg !5733
  %8 = load i32, i32* %nb_components4, align 32, !dbg !5733
  %cmp5 = icmp ne i32 %8, 4, !dbg !5734
  br i1 %cmp5, label %if.then, label %if.end, !dbg !5735

if.then:                                          ; preds = %land.lhs.true
  store i32 -1094995529, i32* %retval, align 4, !dbg !5736
  br label %return, !dbg !5736

if.end:                                           ; preds = %land.lhs.true, %entry
  %9 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5737
  %v_max = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %9, i32 0, i32 49, !dbg !5739
  %10 = load i32, i32* %v_max, align 8, !dbg !5739
  %cmp6 = icmp ne i32 %10, 1, !dbg !5740
  br i1 %cmp6, label %if.then9, label %lor.lhs.false, !dbg !5741

lor.lhs.false:                                    ; preds = %if.end
  %11 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5742
  %h_max = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %11, i32 0, i32 48, !dbg !5744
  %12 = load i32, i32* %h_max, align 4, !dbg !5744
  %cmp7 = icmp ne i32 %12, 1, !dbg !5745
  br i1 %cmp7, label %if.then9, label %lor.lhs.false8, !dbg !5746

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %13 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5747
  %lossless = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %13, i32 0, i32 14, !dbg !5749
  %14 = load i32, i32* %lossless, align 8, !dbg !5749
  %tobool = icmp ne i32 %14, 0, !dbg !5747
  br i1 %tobool, label %if.end10, label %if.then9, !dbg !5750

if.then9:                                         ; preds = %lor.lhs.false8, %lor.lhs.false, %if.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !5751
  br label %return, !dbg !5751

if.end10:                                         ; preds = %lor.lhs.false8
  %15 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5752
  %restart_interval = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %15, i32 0, i32 67, !dbg !5753
  %16 = load i32, i32* %restart_interval, align 8, !dbg !5753
  %17 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5754
  %restart_count = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %17, i32 0, i32 68, !dbg !5755
  store i32 %16, i32* %restart_count, align 4, !dbg !5756
  %18 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5757
  %ljpeg_buffer = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %18, i32 0, i32 76, !dbg !5758
  %19 = bitcast [4 x i16]** %ljpeg_buffer to i8*, !dbg !5759
  %20 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5760
  %ljpeg_buffer_size = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %20, i32 0, i32 77, !dbg !5761
  %21 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5762
  %mb_width = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %21, i32 0, i32 34, !dbg !5763
  %22 = load i32, i32* %mb_width, align 8, !dbg !5763
  %mul = mul i32 %22, 4, !dbg !5764
  %conv = zext i32 %mul to i64, !dbg !5765
  %mul11 = mul i64 %conv, 2, !dbg !5766
  call void @av_fast_malloc(i8* %19, i32* %ljpeg_buffer_size, i64 %mul11), !dbg !5767
  %23 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5768
  %ljpeg_buffer12 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %23, i32 0, i32 76, !dbg !5770
  %24 = load [4 x i16]*, [4 x i16]** %ljpeg_buffer12, align 16, !dbg !5770
  %tobool13 = icmp ne [4 x i16]* %24, null, !dbg !5768
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !5771

if.then14:                                        ; preds = %if.end10
  store i32 -12, i32* %retval, align 4, !dbg !5772
  br label %return, !dbg !5772

if.end15:                                         ; preds = %if.end10
  %25 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5773
  %ljpeg_buffer16 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %25, i32 0, i32 76, !dbg !5774
  %26 = load [4 x i16]*, [4 x i16]** %ljpeg_buffer16, align 16, !dbg !5774
  store [4 x i16]* %26, [4 x i16]** %buffer, align 8, !dbg !5775
  store i32 0, i32* %i, align 4, !dbg !5776
  br label %for.cond, !dbg !5778

for.cond:                                         ; preds = %for.inc, %if.end15
  %27 = load i32, i32* %i, align 4, !dbg !5779
  %cmp17 = icmp slt i32 %27, 4, !dbg !5782
  br i1 %cmp17, label %for.body, label %for.end, !dbg !5783

for.body:                                         ; preds = %for.cond
  %28 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5784
  %bits19 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %28, i32 0, i32 22, !dbg !5785
  %29 = load i32, i32* %bits19, align 8, !dbg !5785
  %sub20 = sub nsw i32 %29, 1, !dbg !5786
  %shl21 = shl i32 1, %sub20, !dbg !5787
  %conv22 = trunc i32 %shl21 to i16, !dbg !5788
  %30 = load i32, i32* %i, align 4, !dbg !5789
  %idxprom = sext i32 %30 to i64, !dbg !5790
  %31 = load [4 x i16]*, [4 x i16]** %buffer, align 8, !dbg !5790
  %arrayidx23 = getelementptr inbounds [4 x i16], [4 x i16]* %31, i64 0, !dbg !5790
  %arrayidx24 = getelementptr inbounds [4 x i16], [4 x i16]* %arrayidx23, i64 0, i64 %idxprom, !dbg !5790
  store i16 %conv22, i16* %arrayidx24, align 2, !dbg !5791
  br label %for.inc, !dbg !5790

for.inc:                                          ; preds = %for.body
  %32 = load i32, i32* %i, align 4, !dbg !5792
  %inc = add nsw i32 %32, 1, !dbg !5792
  store i32 %inc, i32* %i, align 4, !dbg !5792
  br label %for.cond, !dbg !5794, !llvm.loop !5795

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %mb_y, align 4, !dbg !5797
  br label %for.cond25, !dbg !5799

for.cond25:                                       ; preds = %for.inc514, %for.end
  %33 = load i32, i32* %mb_y, align 4, !dbg !5800
  %34 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5803
  %mb_height = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %34, i32 0, i32 35, !dbg !5804
  %35 = load i32, i32* %mb_height, align 4, !dbg !5804
  %cmp26 = icmp slt i32 %33, %35, !dbg !5805
  br i1 %cmp26, label %for.body28, label %for.end516, !dbg !5806

for.body28:                                       ; preds = %for.cond25
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !5807, metadata !2073), !dbg !5809
  %36 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5810
  %picture_ptr = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %36, i32 0, i32 53, !dbg !5811
  %37 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr, align 8, !dbg !5811
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %37, i32 0, i32 0, !dbg !5812
  %arrayidx29 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 0, !dbg !5810
  %38 = load i8*, i8** %arrayidx29, align 8, !dbg !5810
  %39 = load i32, i32* %linesize, align 4, !dbg !5813
  %40 = load i32, i32* %mb_y, align 4, !dbg !5814
  %mul30 = mul nsw i32 %39, %40, !dbg !5815
  %idx.ext = sext i32 %mul30 to i64, !dbg !5816
  %add.ptr = getelementptr inbounds i8, i8* %38, i64 %idx.ext, !dbg !5816
  store i8* %add.ptr, i8** %ptr, align 8, !dbg !5809
  %41 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5817
  %interlaced = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %41, i32 0, i32 12, !dbg !5819
  %42 = load i32, i32* %interlaced, align 32, !dbg !5819
  %tobool31 = icmp ne i32 %42, 0, !dbg !5817
  br i1 %tobool31, label %land.lhs.true32, label %if.end37, !dbg !5820

land.lhs.true32:                                  ; preds = %for.body28
  %43 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5821
  %bottom_field = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %43, i32 0, i32 13, !dbg !5823
  %44 = load i32, i32* %bottom_field, align 4, !dbg !5823
  %tobool33 = icmp ne i32 %44, 0, !dbg !5821
  br i1 %tobool33, label %if.then34, label %if.end37, !dbg !5824

if.then34:                                        ; preds = %land.lhs.true32
  %45 = load i32, i32* %linesize, align 4, !dbg !5825
  %shr = ashr i32 %45, 1, !dbg !5826
  %46 = load i8*, i8** %ptr, align 8, !dbg !5827
  %idx.ext35 = sext i32 %shr to i64, !dbg !5827
  %add.ptr36 = getelementptr inbounds i8, i8* %46, i64 %idx.ext35, !dbg !5827
  store i8* %add.ptr36, i8** %ptr, align 8, !dbg !5827
  br label %if.end37, !dbg !5828

if.end37:                                         ; preds = %if.then34, %land.lhs.true32, %for.body28
  store i32 0, i32* %i, align 4, !dbg !5829
  br label %for.cond38, !dbg !5831

for.cond38:                                       ; preds = %for.inc52, %if.end37
  %47 = load i32, i32* %i, align 4, !dbg !5832
  %cmp39 = icmp slt i32 %47, 4, !dbg !5835
  br i1 %cmp39, label %for.body41, label %for.end54, !dbg !5836

for.body41:                                       ; preds = %for.cond38
  %48 = load i32, i32* %i, align 4, !dbg !5837
  %idxprom42 = sext i32 %48 to i64, !dbg !5838
  %49 = load [4 x i16]*, [4 x i16]** %buffer, align 8, !dbg !5838
  %arrayidx43 = getelementptr inbounds [4 x i16], [4 x i16]* %49, i64 0, !dbg !5838
  %arrayidx44 = getelementptr inbounds [4 x i16], [4 x i16]* %arrayidx43, i64 0, i64 %idxprom42, !dbg !5838
  %50 = load i16, i16* %arrayidx44, align 2, !dbg !5838
  %conv45 = zext i16 %50 to i32, !dbg !5838
  %51 = load i32, i32* %i, align 4, !dbg !5839
  %idxprom46 = sext i32 %51 to i64, !dbg !5840
  %arrayidx47 = getelementptr inbounds [4 x i32], [4 x i32]* %topleft, i64 0, i64 %idxprom46, !dbg !5840
  store i32 %conv45, i32* %arrayidx47, align 4, !dbg !5841
  %52 = load i32, i32* %i, align 4, !dbg !5842
  %idxprom48 = sext i32 %52 to i64, !dbg !5843
  %arrayidx49 = getelementptr inbounds [4 x i32], [4 x i32]* %left, i64 0, i64 %idxprom48, !dbg !5843
  store i32 %conv45, i32* %arrayidx49, align 4, !dbg !5844
  %53 = load i32, i32* %i, align 4, !dbg !5845
  %idxprom50 = sext i32 %53 to i64, !dbg !5846
  %arrayidx51 = getelementptr inbounds [4 x i32], [4 x i32]* %top, i64 0, i64 %idxprom50, !dbg !5846
  store i32 %conv45, i32* %arrayidx51, align 4, !dbg !5847
  br label %for.inc52, !dbg !5846

for.inc52:                                        ; preds = %for.body41
  %54 = load i32, i32* %i, align 4, !dbg !5848
  %inc53 = add nsw i32 %54, 1, !dbg !5848
  store i32 %inc53, i32* %i, align 4, !dbg !5848
  br label %for.cond38, !dbg !5850, !llvm.loop !5851

for.end54:                                        ; preds = %for.cond38
  store i32 0, i32* %mb_x, align 4, !dbg !5853
  br label %for.cond55, !dbg !5855

for.cond55:                                       ; preds = %for.inc192, %for.end54
  %55 = load i32, i32* %mb_x, align 4, !dbg !5856
  %56 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5859
  %mb_width56 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %56, i32 0, i32 34, !dbg !5860
  %57 = load i32, i32* %mb_width56, align 8, !dbg !5860
  %cmp57 = icmp slt i32 %55, %57, !dbg !5861
  br i1 %cmp57, label %for.body59, label %for.end194, !dbg !5862

for.body59:                                       ; preds = %for.cond55
  call void @llvm.dbg.declare(metadata i32* %modified_predictor, metadata !5863, metadata !2073), !dbg !5865
  %58 = load i32, i32* %predictor.addr, align 4, !dbg !5866
  store i32 %58, i32* %modified_predictor, align 4, !dbg !5865
  %59 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5867
  %gb = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %59, i32 0, i32 2, !dbg !5869
  %call = call i32 @get_bits_left(%struct.GetBitContext* %gb), !dbg !5870
  %cmp60 = icmp slt i32 %call, 1, !dbg !5871
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !5872

if.then62:                                        ; preds = %for.body59
  %60 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5873
  %avctx = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %60, i32 0, i32 1, !dbg !5875
  %61 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5875
  %62 = bitcast %struct.AVCodecContext* %61 to i8*, !dbg !5873
  call void (i8*, i32, i8*, ...) @av_log(i8* %62, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.80, i32 0, i32 0)), !dbg !5876
  store i32 -1094995529, i32* %retval, align 4, !dbg !5877
  br label %return, !dbg !5877

if.end63:                                         ; preds = %for.body59
  %63 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5878
  %restart_interval64 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %63, i32 0, i32 67, !dbg !5880
  %64 = load i32, i32* %restart_interval64, align 8, !dbg !5880
  %tobool65 = icmp ne i32 %64, 0, !dbg !5878
  br i1 %tobool65, label %land.lhs.true66, label %if.end88, !dbg !5881

land.lhs.true66:                                  ; preds = %if.end63
  %65 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5882
  %restart_count67 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %65, i32 0, i32 68, !dbg !5884
  %66 = load i32, i32* %restart_count67, align 4, !dbg !5884
  %tobool68 = icmp ne i32 %66, 0, !dbg !5882
  br i1 %tobool68, label %if.end88, label %if.then69, !dbg !5885

if.then69:                                        ; preds = %land.lhs.true66
  %67 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5886
  %restart_interval70 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %67, i32 0, i32 67, !dbg !5888
  %68 = load i32, i32* %restart_interval70, align 8, !dbg !5888
  %69 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5889
  %restart_count71 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %69, i32 0, i32 68, !dbg !5890
  store i32 %68, i32* %restart_count71, align 4, !dbg !5891
  %70 = load i32, i32* %mb_x, align 4, !dbg !5892
  store i32 %70, i32* %resync_mb_x, align 4, !dbg !5893
  %71 = load i32, i32* %mb_y, align 4, !dbg !5894
  store i32 %71, i32* %resync_mb_y, align 4, !dbg !5895
  store i32 0, i32* %i, align 4, !dbg !5896
  br label %for.cond72, !dbg !5898

for.cond72:                                       ; preds = %for.inc85, %if.then69
  %72 = load i32, i32* %i, align 4, !dbg !5899
  %cmp73 = icmp slt i32 %72, 4, !dbg !5902
  br i1 %cmp73, label %for.body75, label %for.end87, !dbg !5903

for.body75:                                       ; preds = %for.cond72
  %73 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !5904
  %bits76 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %73, i32 0, i32 22, !dbg !5905
  %74 = load i32, i32* %bits76, align 8, !dbg !5905
  %sub77 = sub nsw i32 %74, 1, !dbg !5906
  %shl78 = shl i32 1, %sub77, !dbg !5907
  %75 = load i32, i32* %i, align 4, !dbg !5908
  %idxprom79 = sext i32 %75 to i64, !dbg !5909
  %arrayidx80 = getelementptr inbounds [4 x i32], [4 x i32]* %topleft, i64 0, i64 %idxprom79, !dbg !5909
  store i32 %shl78, i32* %arrayidx80, align 4, !dbg !5910
  %76 = load i32, i32* %i, align 4, !dbg !5911
  %idxprom81 = sext i32 %76 to i64, !dbg !5912
  %arrayidx82 = getelementptr inbounds [4 x i32], [4 x i32]* %left, i64 0, i64 %idxprom81, !dbg !5912
  store i32 %shl78, i32* %arrayidx82, align 4, !dbg !5913
  %77 = load i32, i32* %i, align 4, !dbg !5914
  %idxprom83 = sext i32 %77 to i64, !dbg !5915
  %arrayidx84 = getelementptr inbounds [4 x i32], [4 x i32]* %top, i64 0, i64 %idxprom83, !dbg !5915
  store i32 %shl78, i32* %arrayidx84, align 4, !dbg !5916
  br label %for.inc85, !dbg !5915

for.inc85:                                        ; preds = %for.body75
  %78 = load i32, i32* %i, align 4, !dbg !5917
  %inc86 = add nsw i32 %78, 1, !dbg !5917
  store i32 %inc86, i32* %i, align 4, !dbg !5917
  br label %for.cond72, !dbg !5919, !llvm.loop !5920

for.end87:                                        ; preds = %for.cond72
  br label %if.end88, !dbg !5922

if.end88:                                         ; preds = %for.end87, %land.lhs.true66, %if.end63
  %79 = load i32, i32* %mb_y, align 4, !dbg !5923
  %80 = load i32, i32* %resync_mb_y, align 4, !dbg !5925
  %cmp89 = icmp eq i32 %79, %80, !dbg !5926
  br i1 %cmp89, label %if.then99, label %lor.lhs.false91, !dbg !5927

lor.lhs.false91:                                  ; preds = %if.end88
  %81 = load i32, i32* %mb_y, align 4, !dbg !5928
  %82 = load i32, i32* %resync_mb_y, align 4, !dbg !5930
  %add = add nsw i32 %82, 1, !dbg !5931
  %cmp92 = icmp eq i32 %81, %add, !dbg !5932
  br i1 %cmp92, label %land.lhs.true94, label %lor.lhs.false97, !dbg !5933

land.lhs.true94:                                  ; preds = %lor.lhs.false91
  %83 = load i32, i32* %mb_x, align 4, !dbg !5934
  %84 = load i32, i32* %resync_mb_x, align 4, !dbg !5936
  %cmp95 = icmp slt i32 %83, %84, !dbg !5937
  br i1 %cmp95, label %if.then99, label %lor.lhs.false97, !dbg !5938

lor.lhs.false97:                                  ; preds = %land.lhs.true94, %lor.lhs.false91
  %85 = load i32, i32* %mb_x, align 4, !dbg !5939
  %tobool98 = icmp ne i32 %85, 0, !dbg !5939
  br i1 %tobool98, label %if.end100, label %if.then99, !dbg !5941

if.then99:                                        ; preds = %lor.lhs.false97, %land.lhs.true94, %if.end88
  store i32 1, i32* %modified_predictor, align 4, !dbg !5942
  br label %if.end100, !dbg !5943

if.end100:                                        ; preds = %if.then99, %lor.lhs.false97
  store i32 0, i32* %i, align 4, !dbg !5944
  br label %for.cond101, !dbg !5946

for.cond101:                                      ; preds = %for.inc179, %if.end100
  %86 = load i32, i32* %i, align 4, !dbg !5947
  %87 = load i32, i32* %nb_components.addr, align 4, !dbg !5950
  %cmp102 = icmp slt i32 %86, %87, !dbg !5951
  br i1 %cmp102, label %for.body104, label %for.end181, !dbg !5952

for.body104:                                      ; preds = %for.cond101
  call void @llvm.dbg.declare(metadata i32* %pred, metadata !5953, metadata !2073), !dbg !5955
  call void @llvm.dbg.declare(metadata i32* %dc, metadata !5956, metadata !2073), !dbg !5957
  %88 = load i32, i32* %i, align 4, !dbg !5958
  %idxprom105 = sext i32 %88 to i64, !dbg !5959
  %arrayidx106 = getelementptr inbounds [4 x i32], [4 x i32]* %top, i64 0, i64 %idxprom105, !dbg !5959
  %89 = load i32, i32* %arrayidx106, align 4, !dbg !5959
  %90 = load i32, i32* %i, align 4, !dbg !5960
  %idxprom107 = sext i32 %90 to i64, !dbg !5961
  %arrayidx108 = getelementptr inbounds [4 x i32], [4 x i32]* %topleft, i64 0, i64 %idxprom107, !dbg !5961
  store i32 %89, i32* %arrayidx108, align 4, !dbg !5962
  %91 = load i32, i32* %i, align 4, !dbg !5963
  %idxprom109 = sext i32 %91 to i64, !dbg !5964
  %92 = load i32, i32* %mb_x, align 4, !dbg !5965
  %idxprom110 = sext i32 %92 to i64, !dbg !5964
  %93 = load [4 x i16]*, [4 x i16]** %buffer, align 8, !dbg !5964
  %arrayidx111 = getelementptr inbounds [4 x i16], [4 x i16]* %93, i64 %idxprom110, !dbg !5964
  %arrayidx112 = getelementptr inbounds [4 x i16], [4 x i16]* %arrayidx111, i64 0, i64 %idxprom109, !dbg !5964
  %94 = load i16, i16* %arrayidx112, align 2, !dbg !5964
  %conv113 = zext i16 %94 to i32, !dbg !5964
  %95 = load i32, i32* %i, align 4, !dbg !5966
  %idxprom114 = sext i32 %95 to i64, !dbg !5967
  %arrayidx115 = getelementptr inbounds [4 x i32], [4 x i32]* %top, i64 0, i64 %idxprom114, !dbg !5967
  store i32 %conv113, i32* %arrayidx115, align 4, !dbg !5968
  %96 = load i32, i32* %modified_predictor, align 4, !dbg !5969
  switch i32 %96, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb116
    i32 2, label %sw.bb119
    i32 3, label %sw.bb122
    i32 4, label %sw.bb125
    i32 5, label %sw.bb134
    i32 6, label %sw.bb144
    i32 7, label %sw.bb154
  ], !dbg !5970

sw.bb:                                            ; preds = %for.body104
  store i32 0, i32* %pred, align 4, !dbg !5971
  br label %sw.epilog, !dbg !5974

sw.bb116:                                         ; preds = %for.body104
  %97 = load i32, i32* %i, align 4, !dbg !5975
  %idxprom117 = sext i32 %97 to i64, !dbg !5977
  %arrayidx118 = getelementptr inbounds [4 x i32], [4 x i32]* %left, i64 0, i64 %idxprom117, !dbg !5977
  %98 = load i32, i32* %arrayidx118, align 4, !dbg !5977
  store i32 %98, i32* %pred, align 4, !dbg !5978
  br label %sw.epilog, !dbg !5979

sw.bb119:                                         ; preds = %for.body104
  %99 = load i32, i32* %i, align 4, !dbg !5980
  %idxprom120 = sext i32 %99 to i64, !dbg !5982
  %arrayidx121 = getelementptr inbounds [4 x i32], [4 x i32]* %top, i64 0, i64 %idxprom120, !dbg !5982
  %100 = load i32, i32* %arrayidx121, align 4, !dbg !5982
  store i32 %100, i32* %pred, align 4, !dbg !5983
  br label %sw.epilog, !dbg !5984

sw.bb122:                                         ; preds = %for.body104
  %101 = load i32, i32* %i, align 4, !dbg !5985
  %idxprom123 = sext i32 %101 to i64, !dbg !5987
  %arrayidx124 = getelementptr inbounds [4 x i32], [4 x i32]* %topleft, i64 0, i64 %idxprom123, !dbg !5987
  %102 = load i32, i32* %arrayidx124, align 4, !dbg !5987
  store i32 %102, i32* %pred, align 4, !dbg !5988
  br label %sw.epilog, !dbg !5989

sw.bb125:                                         ; preds = %for.body104
  %103 = load i32, i32* %i, align 4, !dbg !5990
  %idxprom126 = sext i32 %103 to i64, !dbg !5992
  %arrayidx127 = getelementptr inbounds [4 x i32], [4 x i32]* %left, i64 0, i64 %idxprom126, !dbg !5992
  %104 = load i32, i32* %arrayidx127, align 4, !dbg !5992
  %105 = load i32, i32* %i, align 4, !dbg !5993
  %idxprom128 = sext i32 %105 to i64, !dbg !5994
  %arrayidx129 = getelementptr inbounds [4 x i32], [4 x i32]* %top, i64 0, i64 %idxprom128, !dbg !5994
  %106 = load i32, i32* %arrayidx129, align 4, !dbg !5994
  %add130 = add nsw i32 %104, %106, !dbg !5995
  %107 = load i32, i32* %i, align 4, !dbg !5996
  %idxprom131 = sext i32 %107 to i64, !dbg !5997
  %arrayidx132 = getelementptr inbounds [4 x i32], [4 x i32]* %topleft, i64 0, i64 %idxprom131, !dbg !5997
  %108 = load i32, i32* %arrayidx132, align 4, !dbg !5997
  %sub133 = sub nsw i32 %add130, %108, !dbg !5998
  store i32 %sub133, i32* %pred, align 4, !dbg !5999
  br label %sw.epilog, !dbg !6000

sw.bb134:                                         ; preds = %for.body104
  %109 = load i32, i32* %i, align 4, !dbg !6001
  %idxprom135 = sext i32 %109 to i64, !dbg !6003
  %arrayidx136 = getelementptr inbounds [4 x i32], [4 x i32]* %left, i64 0, i64 %idxprom135, !dbg !6003
  %110 = load i32, i32* %arrayidx136, align 4, !dbg !6003
  %111 = load i32, i32* %i, align 4, !dbg !6004
  %idxprom137 = sext i32 %111 to i64, !dbg !6005
  %arrayidx138 = getelementptr inbounds [4 x i32], [4 x i32]* %top, i64 0, i64 %idxprom137, !dbg !6005
  %112 = load i32, i32* %arrayidx138, align 4, !dbg !6005
  %113 = load i32, i32* %i, align 4, !dbg !6006
  %idxprom139 = sext i32 %113 to i64, !dbg !6007
  %arrayidx140 = getelementptr inbounds [4 x i32], [4 x i32]* %topleft, i64 0, i64 %idxprom139, !dbg !6007
  %114 = load i32, i32* %arrayidx140, align 4, !dbg !6007
  %sub141 = sub nsw i32 %112, %114, !dbg !6008
  %shr142 = ashr i32 %sub141, 1, !dbg !6009
  %add143 = add nsw i32 %110, %shr142, !dbg !6010
  store i32 %add143, i32* %pred, align 4, !dbg !6011
  br label %sw.epilog, !dbg !6012

sw.bb144:                                         ; preds = %for.body104
  %115 = load i32, i32* %i, align 4, !dbg !6013
  %idxprom145 = sext i32 %115 to i64, !dbg !6015
  %arrayidx146 = getelementptr inbounds [4 x i32], [4 x i32]* %top, i64 0, i64 %idxprom145, !dbg !6015
  %116 = load i32, i32* %arrayidx146, align 4, !dbg !6015
  %117 = load i32, i32* %i, align 4, !dbg !6016
  %idxprom147 = sext i32 %117 to i64, !dbg !6017
  %arrayidx148 = getelementptr inbounds [4 x i32], [4 x i32]* %left, i64 0, i64 %idxprom147, !dbg !6017
  %118 = load i32, i32* %arrayidx148, align 4, !dbg !6017
  %119 = load i32, i32* %i, align 4, !dbg !6018
  %idxprom149 = sext i32 %119 to i64, !dbg !6019
  %arrayidx150 = getelementptr inbounds [4 x i32], [4 x i32]* %topleft, i64 0, i64 %idxprom149, !dbg !6019
  %120 = load i32, i32* %arrayidx150, align 4, !dbg !6019
  %sub151 = sub nsw i32 %118, %120, !dbg !6020
  %shr152 = ashr i32 %sub151, 1, !dbg !6021
  %add153 = add nsw i32 %116, %shr152, !dbg !6022
  store i32 %add153, i32* %pred, align 4, !dbg !6023
  br label %sw.epilog, !dbg !6024

sw.default:                                       ; preds = %for.body104
  br label %sw.bb154, !dbg !6025

sw.bb154:                                         ; preds = %for.body104, %sw.default
  %121 = load i32, i32* %i, align 4, !dbg !6027
  %idxprom155 = sext i32 %121 to i64, !dbg !6029
  %arrayidx156 = getelementptr inbounds [4 x i32], [4 x i32]* %left, i64 0, i64 %idxprom155, !dbg !6029
  %122 = load i32, i32* %arrayidx156, align 4, !dbg !6029
  %123 = load i32, i32* %i, align 4, !dbg !6030
  %idxprom157 = sext i32 %123 to i64, !dbg !6031
  %arrayidx158 = getelementptr inbounds [4 x i32], [4 x i32]* %top, i64 0, i64 %idxprom157, !dbg !6031
  %124 = load i32, i32* %arrayidx158, align 4, !dbg !6031
  %add159 = add nsw i32 %122, %124, !dbg !6032
  %shr160 = ashr i32 %add159, 1, !dbg !6033
  store i32 %shr160, i32* %pred, align 4, !dbg !6034
  br label %sw.epilog, !dbg !6035

sw.epilog:                                        ; preds = %sw.bb154, %sw.bb144, %sw.bb134, %sw.bb125, %sw.bb122, %sw.bb119, %sw.bb116, %sw.bb
  %125 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6036
  %126 = load i32, i32* %i, align 4, !dbg !6037
  %idxprom161 = sext i32 %126 to i64, !dbg !6038
  %127 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6038
  %dc_index = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %127, i32 0, i32 42, !dbg !6039
  %arrayidx162 = getelementptr inbounds [4 x i32], [4 x i32]* %dc_index, i64 0, i64 %idxprom161, !dbg !6038
  %128 = load i32, i32* %arrayidx162, align 4, !dbg !6038
  %call163 = call i32 @mjpeg_decode_dc(%struct.MJpegDecodeContext* %125, i32 %128), !dbg !6040
  store i32 %call163, i32* %dc, align 4, !dbg !6041
  %129 = load i32, i32* %dc, align 4, !dbg !6042
  %cmp164 = icmp eq i32 %129, 1048575, !dbg !6044
  br i1 %cmp164, label %if.then166, label %if.end167, !dbg !6045

if.then166:                                       ; preds = %sw.epilog
  store i32 -1, i32* %retval, align 4, !dbg !6046
  br label %return, !dbg !6046

if.end167:                                        ; preds = %sw.epilog
  %130 = load i32, i32* %mask, align 4, !dbg !6047
  %131 = load i32, i32* %pred, align 4, !dbg !6048
  %132 = load i32, i32* %dc, align 4, !dbg !6049
  %133 = load i32, i32* %point_transform.addr, align 4, !dbg !6050
  %shl168 = shl i32 1, %133, !dbg !6051
  %mul169 = mul nsw i32 %132, %shl168, !dbg !6052
  %add170 = add i32 %131, %mul169, !dbg !6053
  %and = and i32 %130, %add170, !dbg !6054
  %conv171 = trunc i32 %and to i16, !dbg !6047
  %134 = load i32, i32* %i, align 4, !dbg !6055
  %idxprom172 = sext i32 %134 to i64, !dbg !6056
  %135 = load i32, i32* %mb_x, align 4, !dbg !6057
  %idxprom173 = sext i32 %135 to i64, !dbg !6056
  %136 = load [4 x i16]*, [4 x i16]** %buffer, align 8, !dbg !6056
  %arrayidx174 = getelementptr inbounds [4 x i16], [4 x i16]* %136, i64 %idxprom173, !dbg !6056
  %arrayidx175 = getelementptr inbounds [4 x i16], [4 x i16]* %arrayidx174, i64 0, i64 %idxprom172, !dbg !6056
  store i16 %conv171, i16* %arrayidx175, align 2, !dbg !6058
  %conv176 = zext i16 %conv171 to i32, !dbg !6056
  %137 = load i32, i32* %i, align 4, !dbg !6059
  %idxprom177 = sext i32 %137 to i64, !dbg !6060
  %arrayidx178 = getelementptr inbounds [4 x i32], [4 x i32]* %left, i64 0, i64 %idxprom177, !dbg !6060
  store i32 %conv176, i32* %arrayidx178, align 4, !dbg !6061
  br label %for.inc179, !dbg !6062

for.inc179:                                       ; preds = %if.end167
  %138 = load i32, i32* %i, align 4, !dbg !6063
  %inc180 = add nsw i32 %138, 1, !dbg !6063
  store i32 %inc180, i32* %i, align 4, !dbg !6063
  br label %for.cond101, !dbg !6065, !llvm.loop !6066

for.end181:                                       ; preds = %for.cond101
  %139 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6068
  %restart_interval182 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %139, i32 0, i32 67, !dbg !6070
  %140 = load i32, i32* %restart_interval182, align 8, !dbg !6070
  %tobool183 = icmp ne i32 %140, 0, !dbg !6068
  br i1 %tobool183, label %land.lhs.true184, label %if.end191, !dbg !6071

land.lhs.true184:                                 ; preds = %for.end181
  %141 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6072
  %restart_count185 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %141, i32 0, i32 68, !dbg !6074
  %142 = load i32, i32* %restart_count185, align 4, !dbg !6075
  %dec = add nsw i32 %142, -1, !dbg !6075
  store i32 %dec, i32* %restart_count185, align 4, !dbg !6075
  %tobool186 = icmp ne i32 %dec, 0, !dbg !6075
  br i1 %tobool186, label %if.end191, label %if.then187, !dbg !6076

if.then187:                                       ; preds = %land.lhs.true184
  %143 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6077
  %gb188 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %143, i32 0, i32 2, !dbg !6079
  %call189 = call i8* @align_get_bits(%struct.GetBitContext* %gb188), !dbg !6080
  %144 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6081
  %gb190 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %144, i32 0, i32 2, !dbg !6082
  call void @skip_bits(%struct.GetBitContext* %gb190, i32 16), !dbg !6083
  br label %if.end191, !dbg !6084

if.end191:                                        ; preds = %if.then187, %land.lhs.true184, %for.end181
  br label %for.inc192, !dbg !6085

for.inc192:                                       ; preds = %if.end191
  %145 = load i32, i32* %mb_x, align 4, !dbg !6086
  %inc193 = add nsw i32 %145, 1, !dbg !6086
  store i32 %inc193, i32* %mb_x, align 4, !dbg !6086
  br label %for.cond55, !dbg !6088, !llvm.loop !6089

for.end194:                                       ; preds = %for.cond55
  %146 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6091
  %rct = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %146, i32 0, i32 20, !dbg !6093
  %147 = load i32, i32* %rct, align 32, !dbg !6093
  %tobool195 = icmp ne i32 %147, 0, !dbg !6091
  br i1 %tobool195, label %land.lhs.true196, label %if.else, !dbg !6094

land.lhs.true196:                                 ; preds = %for.end194
  %148 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6095
  %nb_components197 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %148, i32 0, i32 36, !dbg !6097
  %149 = load i32, i32* %nb_components197, align 32, !dbg !6097
  %cmp198 = icmp eq i32 %149, 4, !dbg !6098
  br i1 %cmp198, label %if.then200, label %if.else, !dbg !6099

if.then200:                                       ; preds = %land.lhs.true196
  store i32 0, i32* %mb_x, align 4, !dbg !6100
  br label %for.cond201, !dbg !6103

for.cond201:                                      ; preds = %for.inc265, %if.then200
  %150 = load i32, i32* %mb_x, align 4, !dbg !6104
  %151 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6107
  %mb_width202 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %151, i32 0, i32 34, !dbg !6108
  %152 = load i32, i32* %mb_width202, align 8, !dbg !6108
  %cmp203 = icmp slt i32 %150, %152, !dbg !6109
  br i1 %cmp203, label %for.body205, label %for.end267, !dbg !6110

for.body205:                                      ; preds = %for.cond201
  %153 = load i32, i32* %mb_x, align 4, !dbg !6111
  %idxprom206 = sext i32 %153 to i64, !dbg !6113
  %154 = load [4 x i16]*, [4 x i16]** %buffer, align 8, !dbg !6113
  %arrayidx207 = getelementptr inbounds [4 x i16], [4 x i16]* %154, i64 %idxprom206, !dbg !6113
  %arrayidx208 = getelementptr inbounds [4 x i16], [4 x i16]* %arrayidx207, i64 0, i64 0, !dbg !6113
  %155 = load i16, i16* %arrayidx208, align 2, !dbg !6113
  %conv209 = zext i16 %155 to i32, !dbg !6113
  %156 = load i32, i32* %mb_x, align 4, !dbg !6114
  %idxprom210 = sext i32 %156 to i64, !dbg !6115
  %157 = load [4 x i16]*, [4 x i16]** %buffer, align 8, !dbg !6115
  %arrayidx211 = getelementptr inbounds [4 x i16], [4 x i16]* %157, i64 %idxprom210, !dbg !6115
  %arrayidx212 = getelementptr inbounds [4 x i16], [4 x i16]* %arrayidx211, i64 0, i64 1, !dbg !6115
  %158 = load i16, i16* %arrayidx212, align 2, !dbg !6115
  %conv213 = zext i16 %158 to i32, !dbg !6115
  %159 = load i32, i32* %mb_x, align 4, !dbg !6116
  %idxprom214 = sext i32 %159 to i64, !dbg !6117
  %160 = load [4 x i16]*, [4 x i16]** %buffer, align 8, !dbg !6117
  %arrayidx215 = getelementptr inbounds [4 x i16], [4 x i16]* %160, i64 %idxprom214, !dbg !6117
  %arrayidx216 = getelementptr inbounds [4 x i16], [4 x i16]* %arrayidx215, i64 0, i64 2, !dbg !6117
  %161 = load i16, i16* %arrayidx216, align 2, !dbg !6117
  %conv217 = zext i16 %161 to i32, !dbg !6117
  %add218 = add nsw i32 %conv213, %conv217, !dbg !6118
  %sub219 = sub nsw i32 %add218, 512, !dbg !6119
  %shr220 = ashr i32 %sub219, 2, !dbg !6120
  %sub221 = sub nsw i32 %conv209, %shr220, !dbg !6121
  %conv222 = trunc i32 %sub221 to i8, !dbg !6113
  %162 = load i32, i32* %mb_x, align 4, !dbg !6122
  %mul223 = mul nsw i32 4, %162, !dbg !6123
  %add224 = add nsw i32 %mul223, 2, !dbg !6124
  %idxprom225 = sext i32 %add224 to i64, !dbg !6125
  %163 = load i8*, i8** %ptr, align 8, !dbg !6125
  %arrayidx226 = getelementptr inbounds i8, i8* %163, i64 %idxprom225, !dbg !6125
  store i8 %conv222, i8* %arrayidx226, align 1, !dbg !6126
  %164 = load i32, i32* %mb_x, align 4, !dbg !6127
  %idxprom227 = sext i32 %164 to i64, !dbg !6128
  %165 = load [4 x i16]*, [4 x i16]** %buffer, align 8, !dbg !6128
  %arrayidx228 = getelementptr inbounds [4 x i16], [4 x i16]* %165, i64 %idxprom227, !dbg !6128
  %arrayidx229 = getelementptr inbounds [4 x i16], [4 x i16]* %arrayidx228, i64 0, i64 1, !dbg !6128
  %166 = load i16, i16* %arrayidx229, align 2, !dbg !6128
  %conv230 = zext i16 %166 to i32, !dbg !6128
  %167 = load i32, i32* %mb_x, align 4, !dbg !6129
  %mul231 = mul nsw i32 4, %167, !dbg !6130
  %add232 = add nsw i32 %mul231, 2, !dbg !6131
  %idxprom233 = sext i32 %add232 to i64, !dbg !6132
  %168 = load i8*, i8** %ptr, align 8, !dbg !6132
  %arrayidx234 = getelementptr inbounds i8, i8* %168, i64 %idxprom233, !dbg !6132
  %169 = load i8, i8* %arrayidx234, align 1, !dbg !6132
  %conv235 = zext i8 %169 to i32, !dbg !6132
  %add236 = add nsw i32 %conv230, %conv235, !dbg !6133
  %conv237 = trunc i32 %add236 to i8, !dbg !6128
  %170 = load i32, i32* %mb_x, align 4, !dbg !6134
  %mul238 = mul nsw i32 4, %170, !dbg !6135
  %add239 = add nsw i32 %mul238, 1, !dbg !6136
  %idxprom240 = sext i32 %add239 to i64, !dbg !6137
  %171 = load i8*, i8** %ptr, align 8, !dbg !6137
  %arrayidx241 = getelementptr inbounds i8, i8* %171, i64 %idxprom240, !dbg !6137
  store i8 %conv237, i8* %arrayidx241, align 1, !dbg !6138
  %172 = load i32, i32* %mb_x, align 4, !dbg !6139
  %idxprom242 = sext i32 %172 to i64, !dbg !6140
  %173 = load [4 x i16]*, [4 x i16]** %buffer, align 8, !dbg !6140
  %arrayidx243 = getelementptr inbounds [4 x i16], [4 x i16]* %173, i64 %idxprom242, !dbg !6140
  %arrayidx244 = getelementptr inbounds [4 x i16], [4 x i16]* %arrayidx243, i64 0, i64 2, !dbg !6140
  %174 = load i16, i16* %arrayidx244, align 2, !dbg !6140
  %conv245 = zext i16 %174 to i32, !dbg !6140
  %175 = load i32, i32* %mb_x, align 4, !dbg !6141
  %mul246 = mul nsw i32 4, %175, !dbg !6142
  %add247 = add nsw i32 %mul246, 2, !dbg !6143
  %idxprom248 = sext i32 %add247 to i64, !dbg !6144
  %176 = load i8*, i8** %ptr, align 8, !dbg !6144
  %arrayidx249 = getelementptr inbounds i8, i8* %176, i64 %idxprom248, !dbg !6144
  %177 = load i8, i8* %arrayidx249, align 1, !dbg !6144
  %conv250 = zext i8 %177 to i32, !dbg !6144
  %add251 = add nsw i32 %conv245, %conv250, !dbg !6145
  %conv252 = trunc i32 %add251 to i8, !dbg !6140
  %178 = load i32, i32* %mb_x, align 4, !dbg !6146
  %mul253 = mul nsw i32 4, %178, !dbg !6147
  %add254 = add nsw i32 %mul253, 3, !dbg !6148
  %idxprom255 = sext i32 %add254 to i64, !dbg !6149
  %179 = load i8*, i8** %ptr, align 8, !dbg !6149
  %arrayidx256 = getelementptr inbounds i8, i8* %179, i64 %idxprom255, !dbg !6149
  store i8 %conv252, i8* %arrayidx256, align 1, !dbg !6150
  %180 = load i32, i32* %mb_x, align 4, !dbg !6151
  %idxprom257 = sext i32 %180 to i64, !dbg !6152
  %181 = load [4 x i16]*, [4 x i16]** %buffer, align 8, !dbg !6152
  %arrayidx258 = getelementptr inbounds [4 x i16], [4 x i16]* %181, i64 %idxprom257, !dbg !6152
  %arrayidx259 = getelementptr inbounds [4 x i16], [4 x i16]* %arrayidx258, i64 0, i64 3, !dbg !6152
  %182 = load i16, i16* %arrayidx259, align 2, !dbg !6152
  %conv260 = trunc i16 %182 to i8, !dbg !6152
  %183 = load i32, i32* %mb_x, align 4, !dbg !6153
  %mul261 = mul nsw i32 4, %183, !dbg !6154
  %add262 = add nsw i32 %mul261, 0, !dbg !6155
  %idxprom263 = sext i32 %add262 to i64, !dbg !6156
  %184 = load i8*, i8** %ptr, align 8, !dbg !6156
  %arrayidx264 = getelementptr inbounds i8, i8* %184, i64 %idxprom263, !dbg !6156
  store i8 %conv260, i8* %arrayidx264, align 1, !dbg !6157
  br label %for.inc265, !dbg !6158

for.inc265:                                       ; preds = %for.body205
  %185 = load i32, i32* %mb_x, align 4, !dbg !6159
  %inc266 = add nsw i32 %185, 1, !dbg !6159
  store i32 %inc266, i32* %mb_x, align 4, !dbg !6159
  br label %for.cond201, !dbg !6161, !llvm.loop !6162

for.end267:                                       ; preds = %for.cond201
  br label %if.end513, !dbg !6164

if.else:                                          ; preds = %land.lhs.true196, %for.end194
  %186 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6165
  %nb_components268 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %186, i32 0, i32 36, !dbg !6168
  %187 = load i32, i32* %nb_components268, align 32, !dbg !6168
  %cmp269 = icmp eq i32 %187, 4, !dbg !6169
  br i1 %cmp269, label %if.then271, label %if.else327, !dbg !6165

if.then271:                                       ; preds = %if.else
  store i32 0, i32* %i, align 4, !dbg !6170
  br label %for.cond272, !dbg !6173

for.cond272:                                      ; preds = %for.inc324, %if.then271
  %188 = load i32, i32* %i, align 4, !dbg !6174
  %189 = load i32, i32* %nb_components.addr, align 4, !dbg !6177
  %cmp273 = icmp slt i32 %188, %189, !dbg !6178
  br i1 %cmp273, label %for.body275, label %for.end326, !dbg !6179

for.body275:                                      ; preds = %for.cond272
  call void @llvm.dbg.declare(metadata i32* %c, metadata !6180, metadata !2073), !dbg !6182
  %190 = load i32, i32* %i, align 4, !dbg !6183
  %idxprom276 = sext i32 %190 to i64, !dbg !6184
  %191 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6184
  %comp_index = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %191, i32 0, i32 41, !dbg !6185
  %arrayidx277 = getelementptr inbounds [4 x i32], [4 x i32]* %comp_index, i64 0, i64 %idxprom276, !dbg !6184
  %192 = load i32, i32* %arrayidx277, align 4, !dbg !6184
  store i32 %192, i32* %c, align 4, !dbg !6182
  %193 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6186
  %bits278 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %193, i32 0, i32 22, !dbg !6188
  %194 = load i32, i32* %bits278, align 8, !dbg !6188
  %cmp279 = icmp sle i32 %194, 8, !dbg !6189
  br i1 %cmp279, label %if.then281, label %if.else300, !dbg !6190

if.then281:                                       ; preds = %for.body275
  store i32 0, i32* %mb_x, align 4, !dbg !6191
  br label %for.cond282, !dbg !6194

for.cond282:                                      ; preds = %for.inc297, %if.then281
  %195 = load i32, i32* %mb_x, align 4, !dbg !6195
  %196 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6198
  %mb_width283 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %196, i32 0, i32 34, !dbg !6199
  %197 = load i32, i32* %mb_width283, align 8, !dbg !6199
  %cmp284 = icmp slt i32 %195, %197, !dbg !6200
  br i1 %cmp284, label %for.body286, label %for.end299, !dbg !6201

for.body286:                                      ; preds = %for.cond282
  %198 = load i32, i32* %i, align 4, !dbg !6202
  %idxprom287 = sext i32 %198 to i64, !dbg !6204
  %199 = load i32, i32* %mb_x, align 4, !dbg !6205
  %idxprom288 = sext i32 %199 to i64, !dbg !6204
  %200 = load [4 x i16]*, [4 x i16]** %buffer, align 8, !dbg !6204
  %arrayidx289 = getelementptr inbounds [4 x i16], [4 x i16]* %200, i64 %idxprom288, !dbg !6204
  %arrayidx290 = getelementptr inbounds [4 x i16], [4 x i16]* %arrayidx289, i64 0, i64 %idxprom287, !dbg !6204
  %201 = load i16, i16* %arrayidx290, align 2, !dbg !6204
  %conv291 = trunc i16 %201 to i8, !dbg !6204
  %202 = load i32, i32* %mb_x, align 4, !dbg !6206
  %mul292 = mul nsw i32 4, %202, !dbg !6207
  %add293 = add nsw i32 %mul292, 3, !dbg !6208
  %203 = load i32, i32* %c, align 4, !dbg !6209
  %sub294 = sub nsw i32 %add293, %203, !dbg !6210
  %idxprom295 = sext i32 %sub294 to i64, !dbg !6211
  %204 = load i8*, i8** %ptr, align 8, !dbg !6211
  %arrayidx296 = getelementptr inbounds i8, i8* %204, i64 %idxprom295, !dbg !6211
  store i8 %conv291, i8* %arrayidx296, align 1, !dbg !6212
  br label %for.inc297, !dbg !6213

for.inc297:                                       ; preds = %for.body286
  %205 = load i32, i32* %mb_x, align 4, !dbg !6214
  %inc298 = add nsw i32 %205, 1, !dbg !6214
  store i32 %inc298, i32* %mb_x, align 4, !dbg !6214
  br label %for.cond282, !dbg !6216, !llvm.loop !6217

for.end299:                                       ; preds = %for.cond282
  br label %if.end323, !dbg !6219

if.else300:                                       ; preds = %for.body275
  %206 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6220
  %bits301 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %206, i32 0, i32 22, !dbg !6223
  %207 = load i32, i32* %bits301, align 8, !dbg !6223
  %cmp302 = icmp eq i32 %207, 9, !dbg !6224
  br i1 %cmp302, label %if.then304, label %if.else305, !dbg !6220

if.then304:                                       ; preds = %if.else300
  store i32 -1163346256, i32* %retval, align 4, !dbg !6225
  br label %return, !dbg !6225

if.else305:                                       ; preds = %if.else300
  store i32 0, i32* %mb_x, align 4, !dbg !6227
  br label %for.cond306, !dbg !6230

for.cond306:                                      ; preds = %for.inc319, %if.else305
  %208 = load i32, i32* %mb_x, align 4, !dbg !6231
  %209 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6234
  %mb_width307 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %209, i32 0, i32 34, !dbg !6235
  %210 = load i32, i32* %mb_width307, align 8, !dbg !6235
  %cmp308 = icmp slt i32 %208, %210, !dbg !6236
  br i1 %cmp308, label %for.body310, label %for.end321, !dbg !6237

for.body310:                                      ; preds = %for.cond306
  %211 = load i32, i32* %i, align 4, !dbg !6238
  %idxprom311 = sext i32 %211 to i64, !dbg !6240
  %212 = load i32, i32* %mb_x, align 4, !dbg !6241
  %idxprom312 = sext i32 %212 to i64, !dbg !6240
  %213 = load [4 x i16]*, [4 x i16]** %buffer, align 8, !dbg !6240
  %arrayidx313 = getelementptr inbounds [4 x i16], [4 x i16]* %213, i64 %idxprom312, !dbg !6240
  %arrayidx314 = getelementptr inbounds [4 x i16], [4 x i16]* %arrayidx313, i64 0, i64 %idxprom311, !dbg !6240
  %214 = load i16, i16* %arrayidx314, align 2, !dbg !6240
  %215 = load i32, i32* %mb_x, align 4, !dbg !6242
  %mul315 = mul nsw i32 4, %215, !dbg !6243
  %216 = load i32, i32* %c, align 4, !dbg !6244
  %add316 = add nsw i32 %mul315, %216, !dbg !6245
  %idxprom317 = sext i32 %add316 to i64, !dbg !6246
  %217 = load i8*, i8** %ptr, align 8, !dbg !6247
  %218 = bitcast i8* %217 to i16*, !dbg !6246
  %arrayidx318 = getelementptr inbounds i16, i16* %218, i64 %idxprom317, !dbg !6246
  store i16 %214, i16* %arrayidx318, align 2, !dbg !6248
  br label %for.inc319, !dbg !6249

for.inc319:                                       ; preds = %for.body310
  %219 = load i32, i32* %mb_x, align 4, !dbg !6250
  %inc320 = add nsw i32 %219, 1, !dbg !6250
  store i32 %inc320, i32* %mb_x, align 4, !dbg !6250
  br label %for.cond306, !dbg !6252, !llvm.loop !6253

for.end321:                                       ; preds = %for.cond306
  br label %if.end322

if.end322:                                        ; preds = %for.end321
  br label %if.end323

if.end323:                                        ; preds = %if.end322, %for.end299
  br label %for.inc324, !dbg !6255

for.inc324:                                       ; preds = %if.end323
  %220 = load i32, i32* %i, align 4, !dbg !6256
  %inc325 = add nsw i32 %220, 1, !dbg !6256
  store i32 %inc325, i32* %i, align 4, !dbg !6256
  br label %for.cond272, !dbg !6258, !llvm.loop !6259

for.end326:                                       ; preds = %for.cond272
  br label %if.end512, !dbg !6261

if.else327:                                       ; preds = %if.else
  %221 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6262
  %rct328 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %221, i32 0, i32 20, !dbg !6265
  %222 = load i32, i32* %rct328, align 32, !dbg !6265
  %tobool329 = icmp ne i32 %222, 0, !dbg !6262
  br i1 %tobool329, label %if.then330, label %if.else390, !dbg !6262

if.then330:                                       ; preds = %if.else327
  store i32 0, i32* %mb_x, align 4, !dbg !6266
  br label %for.cond331, !dbg !6269

for.cond331:                                      ; preds = %for.inc387, %if.then330
  %223 = load i32, i32* %mb_x, align 4, !dbg !6270
  %224 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6273
  %mb_width332 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %224, i32 0, i32 34, !dbg !6274
  %225 = load i32, i32* %mb_width332, align 8, !dbg !6274
  %cmp333 = icmp slt i32 %223, %225, !dbg !6275
  br i1 %cmp333, label %for.body335, label %for.end389, !dbg !6276

for.body335:                                      ; preds = %for.cond331
  %226 = load i32, i32* %mb_x, align 4, !dbg !6277
  %idxprom336 = sext i32 %226 to i64, !dbg !6279
  %227 = load [4 x i16]*, [4 x i16]** %buffer, align 8, !dbg !6279
  %arrayidx337 = getelementptr inbounds [4 x i16], [4 x i16]* %227, i64 %idxprom336, !dbg !6279
  %arrayidx338 = getelementptr inbounds [4 x i16], [4 x i16]* %arrayidx337, i64 0, i64 0, !dbg !6279
  %228 = load i16, i16* %arrayidx338, align 2, !dbg !6279
  %conv339 = zext i16 %228 to i32, !dbg !6279
  %229 = load i32, i32* %mb_x, align 4, !dbg !6280
  %idxprom340 = sext i32 %229 to i64, !dbg !6281
  %230 = load [4 x i16]*, [4 x i16]** %buffer, align 8, !dbg !6281
  %arrayidx341 = getelementptr inbounds [4 x i16], [4 x i16]* %230, i64 %idxprom340, !dbg !6281
  %arrayidx342 = getelementptr inbounds [4 x i16], [4 x i16]* %arrayidx341, i64 0, i64 1, !dbg !6281
  %231 = load i16, i16* %arrayidx342, align 2, !dbg !6281
  %conv343 = zext i16 %231 to i32, !dbg !6281
  %232 = load i32, i32* %mb_x, align 4, !dbg !6282
  %idxprom344 = sext i32 %232 to i64, !dbg !6283
  %233 = load [4 x i16]*, [4 x i16]** %buffer, align 8, !dbg !6283
  %arrayidx345 = getelementptr inbounds [4 x i16], [4 x i16]* %233, i64 %idxprom344, !dbg !6283
  %arrayidx346 = getelementptr inbounds [4 x i16], [4 x i16]* %arrayidx345, i64 0, i64 2, !dbg !6283
  %234 = load i16, i16* %arrayidx346, align 2, !dbg !6283
  %conv347 = zext i16 %234 to i32, !dbg !6283
  %add348 = add nsw i32 %conv343, %conv347, !dbg !6284
  %sub349 = sub nsw i32 %add348, 512, !dbg !6285
  %shr350 = ashr i32 %sub349, 2, !dbg !6286
  %sub351 = sub nsw i32 %conv339, %shr350, !dbg !6287
  %conv352 = trunc i32 %sub351 to i8, !dbg !6279
  %235 = load i32, i32* %mb_x, align 4, !dbg !6288
  %mul353 = mul nsw i32 3, %235, !dbg !6289
  %add354 = add nsw i32 %mul353, 1, !dbg !6290
  %idxprom355 = sext i32 %add354 to i64, !dbg !6291
  %236 = load i8*, i8** %ptr, align 8, !dbg !6291
  %arrayidx356 = getelementptr inbounds i8, i8* %236, i64 %idxprom355, !dbg !6291
  store i8 %conv352, i8* %arrayidx356, align 1, !dbg !6292
  %237 = load i32, i32* %mb_x, align 4, !dbg !6293
  %idxprom357 = sext i32 %237 to i64, !dbg !6294
  %238 = load [4 x i16]*, [4 x i16]** %buffer, align 8, !dbg !6294
  %arrayidx358 = getelementptr inbounds [4 x i16], [4 x i16]* %238, i64 %idxprom357, !dbg !6294
  %arrayidx359 = getelementptr inbounds [4 x i16], [4 x i16]* %arrayidx358, i64 0, i64 1, !dbg !6294
  %239 = load i16, i16* %arrayidx359, align 2, !dbg !6294
  %conv360 = zext i16 %239 to i32, !dbg !6294
  %240 = load i32, i32* %mb_x, align 4, !dbg !6295
  %mul361 = mul nsw i32 3, %240, !dbg !6296
  %add362 = add nsw i32 %mul361, 1, !dbg !6297
  %idxprom363 = sext i32 %add362 to i64, !dbg !6298
  %241 = load i8*, i8** %ptr, align 8, !dbg !6298
  %arrayidx364 = getelementptr inbounds i8, i8* %241, i64 %idxprom363, !dbg !6298
  %242 = load i8, i8* %arrayidx364, align 1, !dbg !6298
  %conv365 = zext i8 %242 to i32, !dbg !6298
  %add366 = add nsw i32 %conv360, %conv365, !dbg !6299
  %conv367 = trunc i32 %add366 to i8, !dbg !6294
  %243 = load i32, i32* %mb_x, align 4, !dbg !6300
  %mul368 = mul nsw i32 3, %243, !dbg !6301
  %add369 = add nsw i32 %mul368, 0, !dbg !6302
  %idxprom370 = sext i32 %add369 to i64, !dbg !6303
  %244 = load i8*, i8** %ptr, align 8, !dbg !6303
  %arrayidx371 = getelementptr inbounds i8, i8* %244, i64 %idxprom370, !dbg !6303
  store i8 %conv367, i8* %arrayidx371, align 1, !dbg !6304
  %245 = load i32, i32* %mb_x, align 4, !dbg !6305
  %idxprom372 = sext i32 %245 to i64, !dbg !6306
  %246 = load [4 x i16]*, [4 x i16]** %buffer, align 8, !dbg !6306
  %arrayidx373 = getelementptr inbounds [4 x i16], [4 x i16]* %246, i64 %idxprom372, !dbg !6306
  %arrayidx374 = getelementptr inbounds [4 x i16], [4 x i16]* %arrayidx373, i64 0, i64 2, !dbg !6306
  %247 = load i16, i16* %arrayidx374, align 2, !dbg !6306
  %conv375 = zext i16 %247 to i32, !dbg !6306
  %248 = load i32, i32* %mb_x, align 4, !dbg !6307
  %mul376 = mul nsw i32 3, %248, !dbg !6308
  %add377 = add nsw i32 %mul376, 1, !dbg !6309
  %idxprom378 = sext i32 %add377 to i64, !dbg !6310
  %249 = load i8*, i8** %ptr, align 8, !dbg !6310
  %arrayidx379 = getelementptr inbounds i8, i8* %249, i64 %idxprom378, !dbg !6310
  %250 = load i8, i8* %arrayidx379, align 1, !dbg !6310
  %conv380 = zext i8 %250 to i32, !dbg !6310
  %add381 = add nsw i32 %conv375, %conv380, !dbg !6311
  %conv382 = trunc i32 %add381 to i8, !dbg !6306
  %251 = load i32, i32* %mb_x, align 4, !dbg !6312
  %mul383 = mul nsw i32 3, %251, !dbg !6313
  %add384 = add nsw i32 %mul383, 2, !dbg !6314
  %idxprom385 = sext i32 %add384 to i64, !dbg !6315
  %252 = load i8*, i8** %ptr, align 8, !dbg !6315
  %arrayidx386 = getelementptr inbounds i8, i8* %252, i64 %idxprom385, !dbg !6315
  store i8 %conv382, i8* %arrayidx386, align 1, !dbg !6316
  br label %for.inc387, !dbg !6317

for.inc387:                                       ; preds = %for.body335
  %253 = load i32, i32* %mb_x, align 4, !dbg !6318
  %inc388 = add nsw i32 %253, 1, !dbg !6318
  store i32 %inc388, i32* %mb_x, align 4, !dbg !6318
  br label %for.cond331, !dbg !6320, !llvm.loop !6321

for.end389:                                       ; preds = %for.cond331
  br label %if.end511, !dbg !6323

if.else390:                                       ; preds = %if.else327
  %254 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6324
  %pegasus_rct = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %254, i32 0, i32 21, !dbg !6327
  %255 = load i32, i32* %pegasus_rct, align 4, !dbg !6327
  %tobool391 = icmp ne i32 %255, 0, !dbg !6324
  br i1 %tobool391, label %if.then392, label %if.else451, !dbg !6324

if.then392:                                       ; preds = %if.else390
  store i32 0, i32* %mb_x, align 4, !dbg !6328
  br label %for.cond393, !dbg !6331

for.cond393:                                      ; preds = %for.inc448, %if.then392
  %256 = load i32, i32* %mb_x, align 4, !dbg !6332
  %257 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6335
  %mb_width394 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %257, i32 0, i32 34, !dbg !6336
  %258 = load i32, i32* %mb_width394, align 8, !dbg !6336
  %cmp395 = icmp slt i32 %256, %258, !dbg !6337
  br i1 %cmp395, label %for.body397, label %for.end450, !dbg !6338

for.body397:                                      ; preds = %for.cond393
  %259 = load i32, i32* %mb_x, align 4, !dbg !6339
  %idxprom398 = sext i32 %259 to i64, !dbg !6341
  %260 = load [4 x i16]*, [4 x i16]** %buffer, align 8, !dbg !6341
  %arrayidx399 = getelementptr inbounds [4 x i16], [4 x i16]* %260, i64 %idxprom398, !dbg !6341
  %arrayidx400 = getelementptr inbounds [4 x i16], [4 x i16]* %arrayidx399, i64 0, i64 0, !dbg !6341
  %261 = load i16, i16* %arrayidx400, align 2, !dbg !6341
  %conv401 = zext i16 %261 to i32, !dbg !6341
  %262 = load i32, i32* %mb_x, align 4, !dbg !6342
  %idxprom402 = sext i32 %262 to i64, !dbg !6343
  %263 = load [4 x i16]*, [4 x i16]** %buffer, align 8, !dbg !6343
  %arrayidx403 = getelementptr inbounds [4 x i16], [4 x i16]* %263, i64 %idxprom402, !dbg !6343
  %arrayidx404 = getelementptr inbounds [4 x i16], [4 x i16]* %arrayidx403, i64 0, i64 1, !dbg !6343
  %264 = load i16, i16* %arrayidx404, align 2, !dbg !6343
  %conv405 = zext i16 %264 to i32, !dbg !6343
  %265 = load i32, i32* %mb_x, align 4, !dbg !6344
  %idxprom406 = sext i32 %265 to i64, !dbg !6345
  %266 = load [4 x i16]*, [4 x i16]** %buffer, align 8, !dbg !6345
  %arrayidx407 = getelementptr inbounds [4 x i16], [4 x i16]* %266, i64 %idxprom406, !dbg !6345
  %arrayidx408 = getelementptr inbounds [4 x i16], [4 x i16]* %arrayidx407, i64 0, i64 2, !dbg !6345
  %267 = load i16, i16* %arrayidx408, align 2, !dbg !6345
  %conv409 = zext i16 %267 to i32, !dbg !6345
  %add410 = add nsw i32 %conv405, %conv409, !dbg !6346
  %shr411 = ashr i32 %add410, 2, !dbg !6347
  %sub412 = sub nsw i32 %conv401, %shr411, !dbg !6348
  %conv413 = trunc i32 %sub412 to i8, !dbg !6341
  %268 = load i32, i32* %mb_x, align 4, !dbg !6349
  %mul414 = mul nsw i32 3, %268, !dbg !6350
  %add415 = add nsw i32 %mul414, 1, !dbg !6351
  %idxprom416 = sext i32 %add415 to i64, !dbg !6352
  %269 = load i8*, i8** %ptr, align 8, !dbg !6352
  %arrayidx417 = getelementptr inbounds i8, i8* %269, i64 %idxprom416, !dbg !6352
  store i8 %conv413, i8* %arrayidx417, align 1, !dbg !6353
  %270 = load i32, i32* %mb_x, align 4, !dbg !6354
  %idxprom418 = sext i32 %270 to i64, !dbg !6355
  %271 = load [4 x i16]*, [4 x i16]** %buffer, align 8, !dbg !6355
  %arrayidx419 = getelementptr inbounds [4 x i16], [4 x i16]* %271, i64 %idxprom418, !dbg !6355
  %arrayidx420 = getelementptr inbounds [4 x i16], [4 x i16]* %arrayidx419, i64 0, i64 1, !dbg !6355
  %272 = load i16, i16* %arrayidx420, align 2, !dbg !6355
  %conv421 = zext i16 %272 to i32, !dbg !6355
  %273 = load i32, i32* %mb_x, align 4, !dbg !6356
  %mul422 = mul nsw i32 3, %273, !dbg !6357
  %add423 = add nsw i32 %mul422, 1, !dbg !6358
  %idxprom424 = sext i32 %add423 to i64, !dbg !6359
  %274 = load i8*, i8** %ptr, align 8, !dbg !6359
  %arrayidx425 = getelementptr inbounds i8, i8* %274, i64 %idxprom424, !dbg !6359
  %275 = load i8, i8* %arrayidx425, align 1, !dbg !6359
  %conv426 = zext i8 %275 to i32, !dbg !6359
  %add427 = add nsw i32 %conv421, %conv426, !dbg !6360
  %conv428 = trunc i32 %add427 to i8, !dbg !6355
  %276 = load i32, i32* %mb_x, align 4, !dbg !6361
  %mul429 = mul nsw i32 3, %276, !dbg !6362
  %add430 = add nsw i32 %mul429, 0, !dbg !6363
  %idxprom431 = sext i32 %add430 to i64, !dbg !6364
  %277 = load i8*, i8** %ptr, align 8, !dbg !6364
  %arrayidx432 = getelementptr inbounds i8, i8* %277, i64 %idxprom431, !dbg !6364
  store i8 %conv428, i8* %arrayidx432, align 1, !dbg !6365
  %278 = load i32, i32* %mb_x, align 4, !dbg !6366
  %idxprom433 = sext i32 %278 to i64, !dbg !6367
  %279 = load [4 x i16]*, [4 x i16]** %buffer, align 8, !dbg !6367
  %arrayidx434 = getelementptr inbounds [4 x i16], [4 x i16]* %279, i64 %idxprom433, !dbg !6367
  %arrayidx435 = getelementptr inbounds [4 x i16], [4 x i16]* %arrayidx434, i64 0, i64 2, !dbg !6367
  %280 = load i16, i16* %arrayidx435, align 2, !dbg !6367
  %conv436 = zext i16 %280 to i32, !dbg !6367
  %281 = load i32, i32* %mb_x, align 4, !dbg !6368
  %mul437 = mul nsw i32 3, %281, !dbg !6369
  %add438 = add nsw i32 %mul437, 1, !dbg !6370
  %idxprom439 = sext i32 %add438 to i64, !dbg !6371
  %282 = load i8*, i8** %ptr, align 8, !dbg !6371
  %arrayidx440 = getelementptr inbounds i8, i8* %282, i64 %idxprom439, !dbg !6371
  %283 = load i8, i8* %arrayidx440, align 1, !dbg !6371
  %conv441 = zext i8 %283 to i32, !dbg !6371
  %add442 = add nsw i32 %conv436, %conv441, !dbg !6372
  %conv443 = trunc i32 %add442 to i8, !dbg !6367
  %284 = load i32, i32* %mb_x, align 4, !dbg !6373
  %mul444 = mul nsw i32 3, %284, !dbg !6374
  %add445 = add nsw i32 %mul444, 2, !dbg !6375
  %idxprom446 = sext i32 %add445 to i64, !dbg !6376
  %285 = load i8*, i8** %ptr, align 8, !dbg !6376
  %arrayidx447 = getelementptr inbounds i8, i8* %285, i64 %idxprom446, !dbg !6376
  store i8 %conv443, i8* %arrayidx447, align 1, !dbg !6377
  br label %for.inc448, !dbg !6378

for.inc448:                                       ; preds = %for.body397
  %286 = load i32, i32* %mb_x, align 4, !dbg !6379
  %inc449 = add nsw i32 %286, 1, !dbg !6379
  store i32 %inc449, i32* %mb_x, align 4, !dbg !6379
  br label %for.cond393, !dbg !6381, !llvm.loop !6382

for.end450:                                       ; preds = %for.cond393
  br label %if.end510, !dbg !6384

if.else451:                                       ; preds = %if.else390
  store i32 0, i32* %i, align 4, !dbg !6385
  br label %for.cond452, !dbg !6388

for.cond452:                                      ; preds = %for.inc507, %if.else451
  %287 = load i32, i32* %i, align 4, !dbg !6389
  %288 = load i32, i32* %nb_components.addr, align 4, !dbg !6392
  %cmp453 = icmp slt i32 %287, %288, !dbg !6393
  br i1 %cmp453, label %for.body455, label %for.end509, !dbg !6394

for.body455:                                      ; preds = %for.cond452
  call void @llvm.dbg.declare(metadata i32* %c456, metadata !6395, metadata !2073), !dbg !6397
  %289 = load i32, i32* %i, align 4, !dbg !6398
  %idxprom457 = sext i32 %289 to i64, !dbg !6399
  %290 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6399
  %comp_index458 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %290, i32 0, i32 41, !dbg !6400
  %arrayidx459 = getelementptr inbounds [4 x i32], [4 x i32]* %comp_index458, i64 0, i64 %idxprom457, !dbg !6399
  %291 = load i32, i32* %arrayidx459, align 4, !dbg !6399
  store i32 %291, i32* %c456, align 4, !dbg !6397
  %292 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6401
  %bits460 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %292, i32 0, i32 22, !dbg !6403
  %293 = load i32, i32* %bits460, align 8, !dbg !6403
  %cmp461 = icmp sle i32 %293, 8, !dbg !6404
  br i1 %cmp461, label %if.then463, label %if.else482, !dbg !6405

if.then463:                                       ; preds = %for.body455
  store i32 0, i32* %mb_x, align 4, !dbg !6406
  br label %for.cond464, !dbg !6409

for.cond464:                                      ; preds = %for.inc479, %if.then463
  %294 = load i32, i32* %mb_x, align 4, !dbg !6410
  %295 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6413
  %mb_width465 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %295, i32 0, i32 34, !dbg !6414
  %296 = load i32, i32* %mb_width465, align 8, !dbg !6414
  %cmp466 = icmp slt i32 %294, %296, !dbg !6415
  br i1 %cmp466, label %for.body468, label %for.end481, !dbg !6416

for.body468:                                      ; preds = %for.cond464
  %297 = load i32, i32* %i, align 4, !dbg !6417
  %idxprom469 = sext i32 %297 to i64, !dbg !6419
  %298 = load i32, i32* %mb_x, align 4, !dbg !6420
  %idxprom470 = sext i32 %298 to i64, !dbg !6419
  %299 = load [4 x i16]*, [4 x i16]** %buffer, align 8, !dbg !6419
  %arrayidx471 = getelementptr inbounds [4 x i16], [4 x i16]* %299, i64 %idxprom470, !dbg !6419
  %arrayidx472 = getelementptr inbounds [4 x i16], [4 x i16]* %arrayidx471, i64 0, i64 %idxprom469, !dbg !6419
  %300 = load i16, i16* %arrayidx472, align 2, !dbg !6419
  %conv473 = trunc i16 %300 to i8, !dbg !6419
  %301 = load i32, i32* %mb_x, align 4, !dbg !6421
  %mul474 = mul nsw i32 3, %301, !dbg !6422
  %add475 = add nsw i32 %mul474, 2, !dbg !6423
  %302 = load i32, i32* %c456, align 4, !dbg !6424
  %sub476 = sub nsw i32 %add475, %302, !dbg !6425
  %idxprom477 = sext i32 %sub476 to i64, !dbg !6426
  %303 = load i8*, i8** %ptr, align 8, !dbg !6426
  %arrayidx478 = getelementptr inbounds i8, i8* %303, i64 %idxprom477, !dbg !6426
  store i8 %conv473, i8* %arrayidx478, align 1, !dbg !6427
  br label %for.inc479, !dbg !6428

for.inc479:                                       ; preds = %for.body468
  %304 = load i32, i32* %mb_x, align 4, !dbg !6429
  %inc480 = add nsw i32 %304, 1, !dbg !6429
  store i32 %inc480, i32* %mb_x, align 4, !dbg !6429
  br label %for.cond464, !dbg !6431, !llvm.loop !6432

for.end481:                                       ; preds = %for.cond464
  br label %if.end506, !dbg !6434

if.else482:                                       ; preds = %for.body455
  %305 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6435
  %bits483 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %305, i32 0, i32 22, !dbg !6438
  %306 = load i32, i32* %bits483, align 8, !dbg !6438
  %cmp484 = icmp eq i32 %306, 9, !dbg !6439
  br i1 %cmp484, label %if.then486, label %if.else487, !dbg !6435

if.then486:                                       ; preds = %if.else482
  store i32 -1163346256, i32* %retval, align 4, !dbg !6440
  br label %return, !dbg !6440

if.else487:                                       ; preds = %if.else482
  store i32 0, i32* %mb_x, align 4, !dbg !6442
  br label %for.cond488, !dbg !6445

for.cond488:                                      ; preds = %for.inc502, %if.else487
  %307 = load i32, i32* %mb_x, align 4, !dbg !6446
  %308 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6449
  %mb_width489 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %308, i32 0, i32 34, !dbg !6450
  %309 = load i32, i32* %mb_width489, align 8, !dbg !6450
  %cmp490 = icmp slt i32 %307, %309, !dbg !6451
  br i1 %cmp490, label %for.body492, label %for.end504, !dbg !6452

for.body492:                                      ; preds = %for.cond488
  %310 = load i32, i32* %i, align 4, !dbg !6453
  %idxprom493 = sext i32 %310 to i64, !dbg !6455
  %311 = load i32, i32* %mb_x, align 4, !dbg !6456
  %idxprom494 = sext i32 %311 to i64, !dbg !6455
  %312 = load [4 x i16]*, [4 x i16]** %buffer, align 8, !dbg !6455
  %arrayidx495 = getelementptr inbounds [4 x i16], [4 x i16]* %312, i64 %idxprom494, !dbg !6455
  %arrayidx496 = getelementptr inbounds [4 x i16], [4 x i16]* %arrayidx495, i64 0, i64 %idxprom493, !dbg !6455
  %313 = load i16, i16* %arrayidx496, align 2, !dbg !6455
  %314 = load i32, i32* %mb_x, align 4, !dbg !6457
  %mul497 = mul nsw i32 3, %314, !dbg !6458
  %add498 = add nsw i32 %mul497, 2, !dbg !6459
  %315 = load i32, i32* %c456, align 4, !dbg !6460
  %sub499 = sub nsw i32 %add498, %315, !dbg !6461
  %idxprom500 = sext i32 %sub499 to i64, !dbg !6462
  %316 = load i8*, i8** %ptr, align 8, !dbg !6463
  %317 = bitcast i8* %316 to i16*, !dbg !6462
  %arrayidx501 = getelementptr inbounds i16, i16* %317, i64 %idxprom500, !dbg !6462
  store i16 %313, i16* %arrayidx501, align 2, !dbg !6464
  br label %for.inc502, !dbg !6465

for.inc502:                                       ; preds = %for.body492
  %318 = load i32, i32* %mb_x, align 4, !dbg !6466
  %inc503 = add nsw i32 %318, 1, !dbg !6466
  store i32 %inc503, i32* %mb_x, align 4, !dbg !6466
  br label %for.cond488, !dbg !6468, !llvm.loop !6469

for.end504:                                       ; preds = %for.cond488
  br label %if.end505

if.end505:                                        ; preds = %for.end504
  br label %if.end506

if.end506:                                        ; preds = %if.end505, %for.end481
  br label %for.inc507, !dbg !6471

for.inc507:                                       ; preds = %if.end506
  %319 = load i32, i32* %i, align 4, !dbg !6472
  %inc508 = add nsw i32 %319, 1, !dbg !6472
  store i32 %inc508, i32* %i, align 4, !dbg !6472
  br label %for.cond452, !dbg !6474, !llvm.loop !6475

for.end509:                                       ; preds = %for.cond452
  br label %if.end510

if.end510:                                        ; preds = %for.end509, %for.end450
  br label %if.end511

if.end511:                                        ; preds = %if.end510, %for.end389
  br label %if.end512

if.end512:                                        ; preds = %if.end511, %for.end326
  br label %if.end513

if.end513:                                        ; preds = %if.end512, %for.end267
  br label %for.inc514, !dbg !6477

for.inc514:                                       ; preds = %if.end513
  %320 = load i32, i32* %mb_y, align 4, !dbg !6478
  %inc515 = add nsw i32 %320, 1, !dbg !6478
  store i32 %inc515, i32* %mb_y, align 4, !dbg !6478
  br label %for.cond25, !dbg !6480, !llvm.loop !6481

for.end516:                                       ; preds = %for.cond25
  store i32 0, i32* %retval, align 4, !dbg !6483
  br label %return, !dbg !6483

return:                                           ; preds = %for.end516, %if.then486, %if.then304, %if.then166, %if.then62, %if.then14, %if.then9, %if.then
  %321 = load i32, i32* %retval, align 4, !dbg !6484
  ret i32 %321, !dbg !6484
}

; Function Attrs: nounwind uwtable
define internal i32 @ljpeg_decode_yuv_scan(%struct.MJpegDecodeContext* %s, i32 %predictor, i32 %point_transform, i32 %nb_components) #3 !dbg !6485 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.MJpegDecodeContext*, align 8
  %predictor.addr = alloca i32, align 4
  %point_transform.addr = alloca i32, align 4
  %nb_components.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %mb_x = alloca i32, align 4
  %mb_y = alloca i32, align 4
  %mask = alloca i32, align 4
  %bits = alloca i32, align 4
  %resync_mb_y = alloca i32, align 4
  %resync_mb_x = alloca i32, align 4
  %toprow = alloca i32, align 4
  %leftcol = alloca i32, align 4
  %ptr = alloca i8*, align 8
  %ptr16 = alloca i16*, align 8
  %n = alloca i32, align 4
  %h = alloca i32, align 4
  %v = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %c = alloca i32, align 4
  %j = alloca i32, align 4
  %linesize = alloca i32, align 4
  %pred = alloca i32, align 4
  %dc = alloca i32, align 4
  %ptr335 = alloca i8*, align 8
  %ptr16336 = alloca i16*, align 8
  %n337 = alloca i32, align 4
  %h338 = alloca i32, align 4
  %v339 = alloca i32, align 4
  %x340 = alloca i32, align 4
  %y341 = alloca i32, align 4
  %c342 = alloca i32, align 4
  %j343 = alloca i32, align 4
  %linesize344 = alloca i32, align 4
  %dc345 = alloca i32, align 4
  %pred370 = alloca i32, align 4
  store %struct.MJpegDecodeContext* %s, %struct.MJpegDecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MJpegDecodeContext** %s.addr, metadata !6486, metadata !2073), !dbg !6487
  store i32 %predictor, i32* %predictor.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %predictor.addr, metadata !6488, metadata !2073), !dbg !6489
  store i32 %point_transform, i32* %point_transform.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %point_transform.addr, metadata !6490, metadata !2073), !dbg !6491
  store i32 %nb_components, i32* %nb_components.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_components.addr, metadata !6492, metadata !2073), !dbg !6493
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6494, metadata !2073), !dbg !6495
  call void @llvm.dbg.declare(metadata i32* %mb_x, metadata !6496, metadata !2073), !dbg !6497
  call void @llvm.dbg.declare(metadata i32* %mb_y, metadata !6498, metadata !2073), !dbg !6499
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !6500, metadata !2073), !dbg !6501
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !6502, metadata !2073), !dbg !6503
  %0 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6504
  %bits1 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %0, i32 0, i32 22, !dbg !6505
  %1 = load i32, i32* %bits1, align 8, !dbg !6505
  %add = add nsw i32 %1, 7, !dbg !6506
  %and = and i32 %add, -8, !dbg !6507
  store i32 %and, i32* %bits, align 4, !dbg !6503
  call void @llvm.dbg.declare(metadata i32* %resync_mb_y, metadata !6508, metadata !2073), !dbg !6509
  store i32 0, i32* %resync_mb_y, align 4, !dbg !6509
  call void @llvm.dbg.declare(metadata i32* %resync_mb_x, metadata !6510, metadata !2073), !dbg !6511
  store i32 0, i32* %resync_mb_x, align 4, !dbg !6511
  %2 = load i32, i32* %bits, align 4, !dbg !6512
  %3 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6513
  %bits2 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %3, i32 0, i32 22, !dbg !6514
  %4 = load i32, i32* %bits2, align 8, !dbg !6514
  %sub = sub nsw i32 %2, %4, !dbg !6515
  %5 = load i32, i32* %point_transform.addr, align 4, !dbg !6516
  %add3 = add nsw i32 %5, %sub, !dbg !6516
  store i32 %add3, i32* %point_transform.addr, align 4, !dbg !6516
  %6 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6517
  %bits4 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %6, i32 0, i32 22, !dbg !6518
  %7 = load i32, i32* %bits4, align 8, !dbg !6518
  %shl = shl i32 1, %7, !dbg !6519
  %sub5 = sub nsw i32 %shl, 1, !dbg !6520
  %8 = load i32, i32* %point_transform.addr, align 4, !dbg !6521
  %shl6 = shl i32 %sub5, %8, !dbg !6522
  store i32 %shl6, i32* %mask, align 4, !dbg !6523
  br label %do.body, !dbg !6524, !llvm.loop !6525

do.body:                                          ; preds = %entry
  %9 = load i32, i32* %nb_components.addr, align 4, !dbg !6526
  %cmp = icmp sge i32 %9, 1, !dbg !6530
  br i1 %cmp, label %land.lhs.true, label %if.then, !dbg !6531

land.lhs.true:                                    ; preds = %do.body
  %10 = load i32, i32* %nb_components.addr, align 4, !dbg !6532
  %cmp7 = icmp sle i32 %10, 4, !dbg !6534
  br i1 %cmp7, label %if.end, label %if.then, !dbg !6535

if.then:                                          ; preds = %land.lhs.true, %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.26, i32 0, i32 0), i32 1183), !dbg !6536
  call void @abort() #8, !dbg !6539
  unreachable, !dbg !6541

if.end:                                           ; preds = %land.lhs.true
  br label %do.end, !dbg !6542

do.end:                                           ; preds = %if.end
  store i32 0, i32* %mb_y, align 4, !dbg !6544
  br label %for.cond, !dbg !6546

for.cond:                                         ; preds = %for.inc600, %do.end
  %11 = load i32, i32* %mb_y, align 4, !dbg !6547
  %12 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6550
  %mb_height = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %12, i32 0, i32 35, !dbg !6551
  %13 = load i32, i32* %mb_height, align 4, !dbg !6551
  %cmp8 = icmp slt i32 %11, %13, !dbg !6552
  br i1 %cmp8, label %for.body, label %for.end602, !dbg !6553

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %mb_x, align 4, !dbg !6554
  br label %for.cond9, !dbg !6557

for.cond9:                                        ; preds = %for.inc597, %for.body
  %14 = load i32, i32* %mb_x, align 4, !dbg !6558
  %15 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6561
  %mb_width = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %15, i32 0, i32 34, !dbg !6562
  %16 = load i32, i32* %mb_width, align 8, !dbg !6562
  %cmp10 = icmp slt i32 %14, %16, !dbg !6563
  br i1 %cmp10, label %for.body11, label %for.end599, !dbg !6564

for.body11:                                       ; preds = %for.cond9
  %17 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6565
  %gb = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %17, i32 0, i32 2, !dbg !6568
  %call = call i32 @get_bits_left(%struct.GetBitContext* %gb), !dbg !6569
  %cmp12 = icmp slt i32 %call, 1, !dbg !6570
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !6571

if.then13:                                        ; preds = %for.body11
  %18 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6572
  %avctx = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %18, i32 0, i32 1, !dbg !6574
  %19 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6574
  %20 = bitcast %struct.AVCodecContext* %19 to i8*, !dbg !6572
  call void (i8*, i32, i8*, ...) @av_log(i8* %20, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.83, i32 0, i32 0)), !dbg !6575
  store i32 -1094995529, i32* %retval, align 4, !dbg !6576
  br label %return, !dbg !6576

if.end14:                                         ; preds = %for.body11
  %21 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6577
  %restart_interval = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %21, i32 0, i32 67, !dbg !6579
  %22 = load i32, i32* %restart_interval, align 8, !dbg !6579
  %tobool = icmp ne i32 %22, 0, !dbg !6577
  br i1 %tobool, label %land.lhs.true15, label %if.end20, !dbg !6580

land.lhs.true15:                                  ; preds = %if.end14
  %23 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6581
  %restart_count = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %23, i32 0, i32 68, !dbg !6583
  %24 = load i32, i32* %restart_count, align 4, !dbg !6583
  %tobool16 = icmp ne i32 %24, 0, !dbg !6581
  br i1 %tobool16, label %if.end20, label %if.then17, !dbg !6584

if.then17:                                        ; preds = %land.lhs.true15
  %25 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6585
  %restart_interval18 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %25, i32 0, i32 67, !dbg !6587
  %26 = load i32, i32* %restart_interval18, align 8, !dbg !6587
  %27 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6588
  %restart_count19 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %27, i32 0, i32 68, !dbg !6589
  store i32 %26, i32* %restart_count19, align 4, !dbg !6590
  %28 = load i32, i32* %mb_x, align 4, !dbg !6591
  store i32 %28, i32* %resync_mb_x, align 4, !dbg !6592
  %29 = load i32, i32* %mb_y, align 4, !dbg !6593
  store i32 %29, i32* %resync_mb_y, align 4, !dbg !6594
  br label %if.end20, !dbg !6595

if.end20:                                         ; preds = %if.then17, %land.lhs.true15, %if.end14
  %30 = load i32, i32* %mb_x, align 4, !dbg !6596
  %tobool21 = icmp ne i32 %30, 0, !dbg !6596
  br i1 %tobool21, label %lor.lhs.false, label %if.then30, !dbg !6598

lor.lhs.false:                                    ; preds = %if.end20
  %31 = load i32, i32* %mb_y, align 4, !dbg !6599
  %32 = load i32, i32* %resync_mb_y, align 4, !dbg !6601
  %cmp22 = icmp eq i32 %31, %32, !dbg !6602
  br i1 %cmp22, label %if.then30, label %lor.lhs.false23, !dbg !6603

lor.lhs.false23:                                  ; preds = %lor.lhs.false
  %33 = load i32, i32* %mb_y, align 4, !dbg !6604
  %34 = load i32, i32* %resync_mb_y, align 4, !dbg !6606
  %add24 = add nsw i32 %34, 1, !dbg !6607
  %cmp25 = icmp eq i32 %33, %add24, !dbg !6608
  br i1 %cmp25, label %land.lhs.true26, label %lor.lhs.false28, !dbg !6609

land.lhs.true26:                                  ; preds = %lor.lhs.false23
  %35 = load i32, i32* %mb_x, align 4, !dbg !6610
  %36 = load i32, i32* %resync_mb_x, align 4, !dbg !6612
  %cmp27 = icmp slt i32 %35, %36, !dbg !6613
  br i1 %cmp27, label %if.then30, label %lor.lhs.false28, !dbg !6614

lor.lhs.false28:                                  ; preds = %land.lhs.true26, %lor.lhs.false23
  %37 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6615
  %interlaced = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %37, i32 0, i32 12, !dbg !6617
  %38 = load i32, i32* %interlaced, align 32, !dbg !6617
  %tobool29 = icmp ne i32 %38, 0, !dbg !6615
  br i1 %tobool29, label %if.then30, label %if.else330, !dbg !6618

if.then30:                                        ; preds = %lor.lhs.false28, %land.lhs.true26, %lor.lhs.false, %if.end20
  call void @llvm.dbg.declare(metadata i32* %toprow, metadata !6619, metadata !2073), !dbg !6621
  %39 = load i32, i32* %mb_y, align 4, !dbg !6622
  %40 = load i32, i32* %resync_mb_y, align 4, !dbg !6623
  %cmp31 = icmp eq i32 %39, %40, !dbg !6624
  br i1 %cmp31, label %lor.end, label %lor.rhs, !dbg !6625

lor.rhs:                                          ; preds = %if.then30
  %41 = load i32, i32* %mb_y, align 4, !dbg !6626
  %42 = load i32, i32* %resync_mb_y, align 4, !dbg !6628
  %add32 = add nsw i32 %42, 1, !dbg !6629
  %cmp33 = icmp eq i32 %41, %add32, !dbg !6630
  br i1 %cmp33, label %land.rhs, label %land.end, !dbg !6631

land.rhs:                                         ; preds = %lor.rhs
  %43 = load i32, i32* %mb_x, align 4, !dbg !6632
  %44 = load i32, i32* %resync_mb_x, align 4, !dbg !6634
  %cmp34 = icmp slt i32 %43, %44, !dbg !6635
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %45 = phi i1 [ false, %lor.rhs ], [ %cmp34, %land.rhs ]
  br label %lor.end, !dbg !6636

lor.end:                                          ; preds = %land.end, %if.then30
  %46 = phi i1 [ true, %if.then30 ], [ %45, %land.end ]
  %lor.ext = zext i1 %46 to i32, !dbg !6638
  store i32 %lor.ext, i32* %toprow, align 4, !dbg !6640
  call void @llvm.dbg.declare(metadata i32* %leftcol, metadata !6641, metadata !2073), !dbg !6642
  %47 = load i32, i32* %mb_x, align 4, !dbg !6643
  %tobool35 = icmp ne i32 %47, 0, !dbg !6643
  br i1 %tobool35, label %lor.rhs36, label %lor.end41, !dbg !6644

lor.rhs36:                                        ; preds = %lor.end
  %48 = load i32, i32* %mb_y, align 4, !dbg !6645
  %49 = load i32, i32* %resync_mb_y, align 4, !dbg !6646
  %cmp37 = icmp eq i32 %48, %49, !dbg !6647
  br i1 %cmp37, label %land.rhs38, label %land.end40, !dbg !6648

land.rhs38:                                       ; preds = %lor.rhs36
  %50 = load i32, i32* %mb_x, align 4, !dbg !6649
  %51 = load i32, i32* %resync_mb_x, align 4, !dbg !6650
  %cmp39 = icmp eq i32 %50, %51, !dbg !6651
  br label %land.end40

land.end40:                                       ; preds = %land.rhs38, %lor.rhs36
  %52 = phi i1 [ false, %lor.rhs36 ], [ %cmp39, %land.rhs38 ]
  br label %lor.end41, !dbg !6652

lor.end41:                                        ; preds = %land.end40, %lor.end
  %53 = phi i1 [ true, %lor.end ], [ %52, %land.end40 ]
  %lor.ext42 = zext i1 %53 to i32, !dbg !6653
  store i32 %lor.ext42, i32* %leftcol, align 4, !dbg !6654
  store i32 0, i32* %i, align 4, !dbg !6655
  br label %for.cond43, !dbg !6657

for.cond43:                                       ; preds = %for.inc327, %lor.end41
  %54 = load i32, i32* %i, align 4, !dbg !6658
  %55 = load i32, i32* %nb_components.addr, align 4, !dbg !6661
  %cmp44 = icmp slt i32 %54, %55, !dbg !6662
  br i1 %cmp44, label %for.body45, label %for.end329, !dbg !6663

for.body45:                                       ; preds = %for.cond43
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !6664, metadata !2073), !dbg !6666
  call void @llvm.dbg.declare(metadata i16** %ptr16, metadata !6667, metadata !2073), !dbg !6668
  call void @llvm.dbg.declare(metadata i32* %n, metadata !6669, metadata !2073), !dbg !6670
  call void @llvm.dbg.declare(metadata i32* %h, metadata !6671, metadata !2073), !dbg !6672
  call void @llvm.dbg.declare(metadata i32* %v, metadata !6673, metadata !2073), !dbg !6674
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6675, metadata !2073), !dbg !6676
  call void @llvm.dbg.declare(metadata i32* %y, metadata !6677, metadata !2073), !dbg !6678
  call void @llvm.dbg.declare(metadata i32* %c, metadata !6679, metadata !2073), !dbg !6680
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6681, metadata !2073), !dbg !6682
  call void @llvm.dbg.declare(metadata i32* %linesize, metadata !6683, metadata !2073), !dbg !6684
  %56 = load i32, i32* %i, align 4, !dbg !6685
  %idxprom = sext i32 %56 to i64, !dbg !6686
  %57 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6686
  %nb_blocks = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %57, i32 0, i32 44, !dbg !6687
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %nb_blocks, i64 0, i64 %idxprom, !dbg !6686
  %58 = load i32, i32* %arrayidx, align 4, !dbg !6686
  store i32 %58, i32* %n, align 4, !dbg !6688
  %59 = load i32, i32* %i, align 4, !dbg !6689
  %idxprom46 = sext i32 %59 to i64, !dbg !6690
  %60 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6690
  %comp_index = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %60, i32 0, i32 41, !dbg !6691
  %arrayidx47 = getelementptr inbounds [4 x i32], [4 x i32]* %comp_index, i64 0, i64 %idxprom46, !dbg !6690
  %61 = load i32, i32* %arrayidx47, align 4, !dbg !6690
  store i32 %61, i32* %c, align 4, !dbg !6692
  %62 = load i32, i32* %i, align 4, !dbg !6693
  %idxprom48 = sext i32 %62 to i64, !dbg !6694
  %63 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6694
  %h_scount = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %63, i32 0, i32 45, !dbg !6695
  %arrayidx49 = getelementptr inbounds [4 x i32], [4 x i32]* %h_scount, i64 0, i64 %idxprom48, !dbg !6694
  %64 = load i32, i32* %arrayidx49, align 4, !dbg !6694
  store i32 %64, i32* %h, align 4, !dbg !6696
  %65 = load i32, i32* %i, align 4, !dbg !6697
  %idxprom50 = sext i32 %65 to i64, !dbg !6698
  %66 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6698
  %v_scount = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %66, i32 0, i32 46, !dbg !6699
  %arrayidx51 = getelementptr inbounds [4 x i32], [4 x i32]* %v_scount, i64 0, i64 %idxprom50, !dbg !6698
  %67 = load i32, i32* %arrayidx51, align 4, !dbg !6698
  store i32 %67, i32* %v, align 4, !dbg !6700
  store i32 0, i32* %x, align 4, !dbg !6701
  store i32 0, i32* %y, align 4, !dbg !6702
  %68 = load i32, i32* %c, align 4, !dbg !6703
  %idxprom52 = sext i32 %68 to i64, !dbg !6704
  %69 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6704
  %linesize53 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %69, i32 0, i32 55, !dbg !6705
  %arrayidx54 = getelementptr inbounds [4 x i32], [4 x i32]* %linesize53, i64 0, i64 %idxprom52, !dbg !6704
  %70 = load i32, i32* %arrayidx54, align 4, !dbg !6704
  store i32 %70, i32* %linesize, align 4, !dbg !6706
  %71 = load i32, i32* %bits, align 4, !dbg !6707
  %cmp55 = icmp sgt i32 %71, 8, !dbg !6709
  br i1 %cmp55, label %if.then56, label %if.end57, !dbg !6710

if.then56:                                        ; preds = %for.body45
  %72 = load i32, i32* %linesize, align 4, !dbg !6711
  %div = sdiv i32 %72, 2, !dbg !6711
  store i32 %div, i32* %linesize, align 4, !dbg !6711
  br label %if.end57, !dbg !6713

if.end57:                                         ; preds = %if.then56, %for.body45
  store i32 0, i32* %j, align 4, !dbg !6714
  br label %for.cond58, !dbg !6716

for.cond58:                                       ; preds = %for.inc, %if.end57
  %73 = load i32, i32* %j, align 4, !dbg !6717
  %74 = load i32, i32* %n, align 4, !dbg !6720
  %cmp59 = icmp slt i32 %73, %74, !dbg !6721
  br i1 %cmp59, label %for.body60, label %for.end, !dbg !6722

for.body60:                                       ; preds = %for.cond58
  call void @llvm.dbg.declare(metadata i32* %pred, metadata !6723, metadata !2073), !dbg !6725
  call void @llvm.dbg.declare(metadata i32* %dc, metadata !6726, metadata !2073), !dbg !6727
  %75 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6728
  %76 = load i32, i32* %i, align 4, !dbg !6729
  %idxprom61 = sext i32 %76 to i64, !dbg !6730
  %77 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6730
  %dc_index = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %77, i32 0, i32 42, !dbg !6731
  %arrayidx62 = getelementptr inbounds [4 x i32], [4 x i32]* %dc_index, i64 0, i64 %idxprom61, !dbg !6730
  %78 = load i32, i32* %arrayidx62, align 4, !dbg !6730
  %call63 = call i32 @mjpeg_decode_dc(%struct.MJpegDecodeContext* %75, i32 %78), !dbg !6732
  store i32 %call63, i32* %dc, align 4, !dbg !6733
  %79 = load i32, i32* %dc, align 4, !dbg !6734
  %cmp64 = icmp eq i32 %79, 1048575, !dbg !6736
  br i1 %cmp64, label %if.then65, label %if.end66, !dbg !6737

if.then65:                                        ; preds = %for.body60
  store i32 -1, i32* %retval, align 4, !dbg !6738
  br label %return, !dbg !6738

if.end66:                                         ; preds = %for.body60
  %80 = load i32, i32* %h, align 4, !dbg !6739
  %81 = load i32, i32* %mb_x, align 4, !dbg !6741
  %mul = mul nsw i32 %80, %81, !dbg !6742
  %82 = load i32, i32* %x, align 4, !dbg !6743
  %add67 = add nsw i32 %mul, %82, !dbg !6744
  %83 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6745
  %width = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %83, i32 0, i32 32, !dbg !6746
  %84 = load i32, i32* %width, align 16, !dbg !6746
  %cmp68 = icmp sge i32 %add67, %84, !dbg !6747
  br i1 %cmp68, label %if.then73, label %lor.lhs.false69, !dbg !6748

lor.lhs.false69:                                  ; preds = %if.end66
  %85 = load i32, i32* %v, align 4, !dbg !6749
  %86 = load i32, i32* %mb_y, align 4, !dbg !6751
  %mul70 = mul nsw i32 %85, %86, !dbg !6752
  %87 = load i32, i32* %y, align 4, !dbg !6753
  %add71 = add nsw i32 %mul70, %87, !dbg !6754
  %88 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6755
  %height = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %88, i32 0, i32 33, !dbg !6756
  %89 = load i32, i32* %height, align 4, !dbg !6756
  %cmp72 = icmp sge i32 %add71, %89, !dbg !6757
  br i1 %cmp72, label %if.then73, label %if.else, !dbg !6758

if.then73:                                        ; preds = %lor.lhs.false69, %if.end66
  br label %if.end320, !dbg !6760

if.else:                                          ; preds = %lor.lhs.false69
  %90 = load i32, i32* %bits, align 4, !dbg !6762
  %cmp74 = icmp sle i32 %90, 8, !dbg !6765
  br i1 %cmp74, label %if.then75, label %if.else190, !dbg !6762

if.then75:                                        ; preds = %if.else
  %91 = load i32, i32* %c, align 4, !dbg !6766
  %idxprom76 = sext i32 %91 to i64, !dbg !6768
  %92 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6768
  %picture_ptr = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %92, i32 0, i32 53, !dbg !6769
  %93 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr, align 8, !dbg !6769
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %93, i32 0, i32 0, !dbg !6770
  %arrayidx77 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 %idxprom76, !dbg !6768
  %94 = load i8*, i8** %arrayidx77, align 8, !dbg !6768
  %95 = load i32, i32* %linesize, align 4, !dbg !6771
  %96 = load i32, i32* %v, align 4, !dbg !6772
  %97 = load i32, i32* %mb_y, align 4, !dbg !6773
  %mul78 = mul nsw i32 %96, %97, !dbg !6774
  %98 = load i32, i32* %y, align 4, !dbg !6775
  %add79 = add nsw i32 %mul78, %98, !dbg !6776
  %mul80 = mul nsw i32 %95, %add79, !dbg !6777
  %idx.ext = sext i32 %mul80 to i64, !dbg !6778
  %add.ptr = getelementptr inbounds i8, i8* %94, i64 %idx.ext, !dbg !6778
  %99 = load i32, i32* %h, align 4, !dbg !6779
  %100 = load i32, i32* %mb_x, align 4, !dbg !6780
  %mul81 = mul nsw i32 %99, %100, !dbg !6781
  %101 = load i32, i32* %x, align 4, !dbg !6782
  %add82 = add nsw i32 %mul81, %101, !dbg !6783
  %idx.ext83 = sext i32 %add82 to i64, !dbg !6784
  %add.ptr84 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.ext83, !dbg !6784
  store i8* %add.ptr84, i8** %ptr, align 8, !dbg !6785
  %102 = load i32, i32* %y, align 4, !dbg !6786
  %cmp85 = icmp eq i32 %102, 0, !dbg !6788
  br i1 %cmp85, label %land.lhs.true86, label %if.else98, !dbg !6789

land.lhs.true86:                                  ; preds = %if.then75
  %103 = load i32, i32* %toprow, align 4, !dbg !6790
  %tobool87 = icmp ne i32 %103, 0, !dbg !6790
  br i1 %tobool87, label %if.then88, label %if.else98, !dbg !6792

if.then88:                                        ; preds = %land.lhs.true86
  %104 = load i32, i32* %x, align 4, !dbg !6793
  %cmp89 = icmp eq i32 %104, 0, !dbg !6796
  br i1 %cmp89, label %land.lhs.true90, label %if.else95, !dbg !6797

land.lhs.true90:                                  ; preds = %if.then88
  %105 = load i32, i32* %leftcol, align 4, !dbg !6798
  %tobool91 = icmp ne i32 %105, 0, !dbg !6798
  br i1 %tobool91, label %if.then92, label %if.else95, !dbg !6800

if.then92:                                        ; preds = %land.lhs.true90
  %106 = load i32, i32* %bits, align 4, !dbg !6801
  %sub93 = sub nsw i32 %106, 1, !dbg !6803
  %shl94 = shl i32 1, %sub93, !dbg !6804
  store i32 %shl94, i32* %pred, align 4, !dbg !6805
  br label %if.end97, !dbg !6806

if.else95:                                        ; preds = %land.lhs.true90, %if.then88
  %107 = load i8*, i8** %ptr, align 8, !dbg !6807
  %arrayidx96 = getelementptr inbounds i8, i8* %107, i64 -1, !dbg !6807
  %108 = load i8, i8* %arrayidx96, align 1, !dbg !6807
  %conv = zext i8 %108 to i32, !dbg !6807
  store i32 %conv, i32* %pred, align 4, !dbg !6809
  br label %if.end97

if.end97:                                         ; preds = %if.else95, %if.then92
  br label %if.end176, !dbg !6810

if.else98:                                        ; preds = %land.lhs.true86, %if.then75
  %109 = load i32, i32* %x, align 4, !dbg !6811
  %cmp99 = icmp eq i32 %109, 0, !dbg !6814
  br i1 %cmp99, label %land.lhs.true101, label %if.else108, !dbg !6815

land.lhs.true101:                                 ; preds = %if.else98
  %110 = load i32, i32* %leftcol, align 4, !dbg !6816
  %tobool102 = icmp ne i32 %110, 0, !dbg !6816
  br i1 %tobool102, label %if.then103, label %if.else108, !dbg !6818

if.then103:                                       ; preds = %land.lhs.true101
  %111 = load i32, i32* %linesize, align 4, !dbg !6819
  %sub104 = sub nsw i32 0, %111, !dbg !6821
  %idxprom105 = sext i32 %sub104 to i64, !dbg !6822
  %112 = load i8*, i8** %ptr, align 8, !dbg !6822
  %arrayidx106 = getelementptr inbounds i8, i8* %112, i64 %idxprom105, !dbg !6822
  %113 = load i8, i8* %arrayidx106, align 1, !dbg !6822
  %conv107 = zext i8 %113 to i32, !dbg !6822
  store i32 %conv107, i32* %pred, align 4, !dbg !6823
  br label %if.end175, !dbg !6824

if.else108:                                       ; preds = %land.lhs.true101, %if.else98
  %114 = load i32, i32* %predictor.addr, align 4, !dbg !6825
  switch i32 %114, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb109
    i32 2, label %sw.bb112
    i32 3, label %sw.bb117
    i32 4, label %sw.bb123
    i32 5, label %sw.bb137
    i32 6, label %sw.bb151
    i32 7, label %sw.bb166
  ], !dbg !6827

sw.bb:                                            ; preds = %if.else108
  store i32 0, i32* %pred, align 4, !dbg !6828
  br label %sw.epilog, !dbg !6831

sw.bb109:                                         ; preds = %if.else108
  %115 = load i8*, i8** %ptr, align 8, !dbg !6832
  %arrayidx110 = getelementptr inbounds i8, i8* %115, i64 -1, !dbg !6832
  %116 = load i8, i8* %arrayidx110, align 1, !dbg !6832
  %conv111 = zext i8 %116 to i32, !dbg !6832
  store i32 %conv111, i32* %pred, align 4, !dbg !6834
  br label %sw.epilog, !dbg !6835

sw.bb112:                                         ; preds = %if.else108
  %117 = load i32, i32* %linesize, align 4, !dbg !6836
  %sub113 = sub nsw i32 0, %117, !dbg !6838
  %idxprom114 = sext i32 %sub113 to i64, !dbg !6839
  %118 = load i8*, i8** %ptr, align 8, !dbg !6839
  %arrayidx115 = getelementptr inbounds i8, i8* %118, i64 %idxprom114, !dbg !6839
  %119 = load i8, i8* %arrayidx115, align 1, !dbg !6839
  %conv116 = zext i8 %119 to i32, !dbg !6839
  store i32 %conv116, i32* %pred, align 4, !dbg !6840
  br label %sw.epilog, !dbg !6841

sw.bb117:                                         ; preds = %if.else108
  %120 = load i32, i32* %linesize, align 4, !dbg !6842
  %sub118 = sub nsw i32 0, %120, !dbg !6844
  %sub119 = sub nsw i32 %sub118, 1, !dbg !6845
  %idxprom120 = sext i32 %sub119 to i64, !dbg !6846
  %121 = load i8*, i8** %ptr, align 8, !dbg !6846
  %arrayidx121 = getelementptr inbounds i8, i8* %121, i64 %idxprom120, !dbg !6846
  %122 = load i8, i8* %arrayidx121, align 1, !dbg !6846
  %conv122 = zext i8 %122 to i32, !dbg !6846
  store i32 %conv122, i32* %pred, align 4, !dbg !6847
  br label %sw.epilog, !dbg !6848

sw.bb123:                                         ; preds = %if.else108
  %123 = load i8*, i8** %ptr, align 8, !dbg !6849
  %arrayidx124 = getelementptr inbounds i8, i8* %123, i64 -1, !dbg !6849
  %124 = load i8, i8* %arrayidx124, align 1, !dbg !6849
  %conv125 = zext i8 %124 to i32, !dbg !6849
  %125 = load i32, i32* %linesize, align 4, !dbg !6851
  %sub126 = sub nsw i32 0, %125, !dbg !6852
  %idxprom127 = sext i32 %sub126 to i64, !dbg !6853
  %126 = load i8*, i8** %ptr, align 8, !dbg !6853
  %arrayidx128 = getelementptr inbounds i8, i8* %126, i64 %idxprom127, !dbg !6853
  %127 = load i8, i8* %arrayidx128, align 1, !dbg !6853
  %conv129 = zext i8 %127 to i32, !dbg !6853
  %add130 = add nsw i32 %conv125, %conv129, !dbg !6854
  %128 = load i32, i32* %linesize, align 4, !dbg !6855
  %sub131 = sub nsw i32 0, %128, !dbg !6856
  %sub132 = sub nsw i32 %sub131, 1, !dbg !6857
  %idxprom133 = sext i32 %sub132 to i64, !dbg !6858
  %129 = load i8*, i8** %ptr, align 8, !dbg !6858
  %arrayidx134 = getelementptr inbounds i8, i8* %129, i64 %idxprom133, !dbg !6858
  %130 = load i8, i8* %arrayidx134, align 1, !dbg !6858
  %conv135 = zext i8 %130 to i32, !dbg !6858
  %sub136 = sub nsw i32 %add130, %conv135, !dbg !6859
  store i32 %sub136, i32* %pred, align 4, !dbg !6860
  br label %sw.epilog, !dbg !6861

sw.bb137:                                         ; preds = %if.else108
  %131 = load i8*, i8** %ptr, align 8, !dbg !6862
  %arrayidx138 = getelementptr inbounds i8, i8* %131, i64 -1, !dbg !6862
  %132 = load i8, i8* %arrayidx138, align 1, !dbg !6862
  %conv139 = zext i8 %132 to i32, !dbg !6862
  %133 = load i32, i32* %linesize, align 4, !dbg !6864
  %sub140 = sub nsw i32 0, %133, !dbg !6865
  %idxprom141 = sext i32 %sub140 to i64, !dbg !6866
  %134 = load i8*, i8** %ptr, align 8, !dbg !6866
  %arrayidx142 = getelementptr inbounds i8, i8* %134, i64 %idxprom141, !dbg !6866
  %135 = load i8, i8* %arrayidx142, align 1, !dbg !6866
  %conv143 = zext i8 %135 to i32, !dbg !6866
  %136 = load i32, i32* %linesize, align 4, !dbg !6867
  %sub144 = sub nsw i32 0, %136, !dbg !6868
  %sub145 = sub nsw i32 %sub144, 1, !dbg !6869
  %idxprom146 = sext i32 %sub145 to i64, !dbg !6870
  %137 = load i8*, i8** %ptr, align 8, !dbg !6870
  %arrayidx147 = getelementptr inbounds i8, i8* %137, i64 %idxprom146, !dbg !6870
  %138 = load i8, i8* %arrayidx147, align 1, !dbg !6870
  %conv148 = zext i8 %138 to i32, !dbg !6870
  %sub149 = sub nsw i32 %conv143, %conv148, !dbg !6871
  %shr = ashr i32 %sub149, 1, !dbg !6872
  %add150 = add nsw i32 %conv139, %shr, !dbg !6873
  store i32 %add150, i32* %pred, align 4, !dbg !6874
  br label %sw.epilog, !dbg !6875

sw.bb151:                                         ; preds = %if.else108
  %139 = load i32, i32* %linesize, align 4, !dbg !6876
  %sub152 = sub nsw i32 0, %139, !dbg !6878
  %idxprom153 = sext i32 %sub152 to i64, !dbg !6879
  %140 = load i8*, i8** %ptr, align 8, !dbg !6879
  %arrayidx154 = getelementptr inbounds i8, i8* %140, i64 %idxprom153, !dbg !6879
  %141 = load i8, i8* %arrayidx154, align 1, !dbg !6879
  %conv155 = zext i8 %141 to i32, !dbg !6879
  %142 = load i8*, i8** %ptr, align 8, !dbg !6880
  %arrayidx156 = getelementptr inbounds i8, i8* %142, i64 -1, !dbg !6880
  %143 = load i8, i8* %arrayidx156, align 1, !dbg !6880
  %conv157 = zext i8 %143 to i32, !dbg !6880
  %144 = load i32, i32* %linesize, align 4, !dbg !6881
  %sub158 = sub nsw i32 0, %144, !dbg !6882
  %sub159 = sub nsw i32 %sub158, 1, !dbg !6883
  %idxprom160 = sext i32 %sub159 to i64, !dbg !6884
  %145 = load i8*, i8** %ptr, align 8, !dbg !6884
  %arrayidx161 = getelementptr inbounds i8, i8* %145, i64 %idxprom160, !dbg !6884
  %146 = load i8, i8* %arrayidx161, align 1, !dbg !6884
  %conv162 = zext i8 %146 to i32, !dbg !6884
  %sub163 = sub nsw i32 %conv157, %conv162, !dbg !6885
  %shr164 = ashr i32 %sub163, 1, !dbg !6886
  %add165 = add nsw i32 %conv155, %shr164, !dbg !6887
  store i32 %add165, i32* %pred, align 4, !dbg !6888
  br label %sw.epilog, !dbg !6889

sw.default:                                       ; preds = %if.else108
  br label %sw.bb166, !dbg !6890

sw.bb166:                                         ; preds = %if.else108, %sw.default
  %147 = load i8*, i8** %ptr, align 8, !dbg !6892
  %arrayidx167 = getelementptr inbounds i8, i8* %147, i64 -1, !dbg !6892
  %148 = load i8, i8* %arrayidx167, align 1, !dbg !6892
  %conv168 = zext i8 %148 to i32, !dbg !6892
  %149 = load i32, i32* %linesize, align 4, !dbg !6894
  %sub169 = sub nsw i32 0, %149, !dbg !6895
  %idxprom170 = sext i32 %sub169 to i64, !dbg !6896
  %150 = load i8*, i8** %ptr, align 8, !dbg !6896
  %arrayidx171 = getelementptr inbounds i8, i8* %150, i64 %idxprom170, !dbg !6896
  %151 = load i8, i8* %arrayidx171, align 1, !dbg !6896
  %conv172 = zext i8 %151 to i32, !dbg !6896
  %add173 = add nsw i32 %conv168, %conv172, !dbg !6897
  %shr174 = ashr i32 %add173, 1, !dbg !6898
  store i32 %shr174, i32* %pred, align 4, !dbg !6899
  br label %sw.epilog, !dbg !6900

sw.epilog:                                        ; preds = %sw.bb166, %sw.bb151, %sw.bb137, %sw.bb123, %sw.bb117, %sw.bb112, %sw.bb109, %sw.bb
  br label %if.end175

if.end175:                                        ; preds = %sw.epilog, %if.then103
  br label %if.end176

if.end176:                                        ; preds = %if.end175, %if.end97
  %152 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6901
  %interlaced177 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %152, i32 0, i32 12, !dbg !6903
  %153 = load i32, i32* %interlaced177, align 32, !dbg !6903
  %tobool178 = icmp ne i32 %153, 0, !dbg !6901
  br i1 %tobool178, label %land.lhs.true179, label %if.end185, !dbg !6904

land.lhs.true179:                                 ; preds = %if.end176
  %154 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6905
  %bottom_field = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %154, i32 0, i32 13, !dbg !6907
  %155 = load i32, i32* %bottom_field, align 4, !dbg !6907
  %tobool180 = icmp ne i32 %155, 0, !dbg !6905
  br i1 %tobool180, label %if.then181, label %if.end185, !dbg !6908

if.then181:                                       ; preds = %land.lhs.true179
  %156 = load i32, i32* %linesize, align 4, !dbg !6909
  %shr182 = ashr i32 %156, 1, !dbg !6910
  %157 = load i8*, i8** %ptr, align 8, !dbg !6911
  %idx.ext183 = sext i32 %shr182 to i64, !dbg !6911
  %add.ptr184 = getelementptr inbounds i8, i8* %157, i64 %idx.ext183, !dbg !6911
  store i8* %add.ptr184, i8** %ptr, align 8, !dbg !6911
  br label %if.end185, !dbg !6912

if.end185:                                        ; preds = %if.then181, %land.lhs.true179, %if.end176
  %158 = load i32, i32* %mask, align 4, !dbg !6913
  %159 = load i32, i32* %pred, align 4, !dbg !6914
  %and186 = and i32 %159, %158, !dbg !6914
  store i32 %and186, i32* %pred, align 4, !dbg !6914
  %160 = load i32, i32* %pred, align 4, !dbg !6915
  %161 = load i32, i32* %dc, align 4, !dbg !6916
  %162 = load i32, i32* %point_transform.addr, align 4, !dbg !6917
  %shl187 = shl i32 %161, %162, !dbg !6918
  %add188 = add i32 %160, %shl187, !dbg !6919
  %conv189 = trunc i32 %add188 to i8, !dbg !6915
  %163 = load i8*, i8** %ptr, align 8, !dbg !6920
  store i8 %conv189, i8* %163, align 1, !dbg !6921
  br label %if.end319, !dbg !6922

if.else190:                                       ; preds = %if.else
  %164 = load i32, i32* %c, align 4, !dbg !6923
  %idxprom191 = sext i32 %164 to i64, !dbg !6925
  %165 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !6925
  %picture_ptr192 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %165, i32 0, i32 53, !dbg !6926
  %166 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr192, align 8, !dbg !6926
  %data193 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %166, i32 0, i32 0, !dbg !6927
  %arrayidx194 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data193, i64 0, i64 %idxprom191, !dbg !6925
  %167 = load i8*, i8** %arrayidx194, align 8, !dbg !6925
  %168 = load i32, i32* %linesize, align 4, !dbg !6928
  %169 = load i32, i32* %v, align 4, !dbg !6929
  %170 = load i32, i32* %mb_y, align 4, !dbg !6930
  %mul195 = mul nsw i32 %169, %170, !dbg !6931
  %171 = load i32, i32* %y, align 4, !dbg !6932
  %add196 = add nsw i32 %mul195, %171, !dbg !6933
  %mul197 = mul nsw i32 %168, %add196, !dbg !6934
  %mul198 = mul nsw i32 2, %mul197, !dbg !6935
  %idx.ext199 = sext i32 %mul198 to i64, !dbg !6936
  %add.ptr200 = getelementptr inbounds i8, i8* %167, i64 %idx.ext199, !dbg !6936
  %172 = load i32, i32* %h, align 4, !dbg !6937
  %173 = load i32, i32* %mb_x, align 4, !dbg !6938
  %mul201 = mul nsw i32 %172, %173, !dbg !6939
  %174 = load i32, i32* %x, align 4, !dbg !6940
  %add202 = add nsw i32 %mul201, %174, !dbg !6941
  %mul203 = mul nsw i32 2, %add202, !dbg !6942
  %idx.ext204 = sext i32 %mul203 to i64, !dbg !6943
  %add.ptr205 = getelementptr inbounds i8, i8* %add.ptr200, i64 %idx.ext204, !dbg !6943
  %175 = bitcast i8* %add.ptr205 to i16*, !dbg !6944
  store i16* %175, i16** %ptr16, align 8, !dbg !6945
  %176 = load i32, i32* %y, align 4, !dbg !6946
  %cmp206 = icmp eq i32 %176, 0, !dbg !6948
  br i1 %cmp206, label %land.lhs.true208, label %if.else222, !dbg !6949

land.lhs.true208:                                 ; preds = %if.else190
  %177 = load i32, i32* %toprow, align 4, !dbg !6950
  %tobool209 = icmp ne i32 %177, 0, !dbg !6950
  br i1 %tobool209, label %if.then210, label %if.else222, !dbg !6952

if.then210:                                       ; preds = %land.lhs.true208
  %178 = load i32, i32* %x, align 4, !dbg !6953
  %cmp211 = icmp eq i32 %178, 0, !dbg !6956
  br i1 %cmp211, label %land.lhs.true213, label %if.else218, !dbg !6957

land.lhs.true213:                                 ; preds = %if.then210
  %179 = load i32, i32* %leftcol, align 4, !dbg !6958
  %tobool214 = icmp ne i32 %179, 0, !dbg !6958
  br i1 %tobool214, label %if.then215, label %if.else218, !dbg !6960

if.then215:                                       ; preds = %land.lhs.true213
  %180 = load i32, i32* %bits, align 4, !dbg !6961
  %sub216 = sub nsw i32 %180, 1, !dbg !6963
  %shl217 = shl i32 1, %sub216, !dbg !6964
  store i32 %shl217, i32* %pred, align 4, !dbg !6965
  br label %if.end221, !dbg !6966

if.else218:                                       ; preds = %land.lhs.true213, %if.then210
  %181 = load i16*, i16** %ptr16, align 8, !dbg !6967
  %arrayidx219 = getelementptr inbounds i16, i16* %181, i64 -1, !dbg !6967
  %182 = load i16, i16* %arrayidx219, align 2, !dbg !6967
  %conv220 = zext i16 %182 to i32, !dbg !6967
  store i32 %conv220, i32* %pred, align 4, !dbg !6969
  br label %if.end221

if.end221:                                        ; preds = %if.else218, %if.then215
  br label %if.end304, !dbg !6970

if.else222:                                       ; preds = %land.lhs.true208, %if.else190
  %183 = load i32, i32* %x, align 4, !dbg !6971
  %cmp223 = icmp eq i32 %183, 0, !dbg !6974
  br i1 %cmp223, label %land.lhs.true225, label %if.else232, !dbg !6975

land.lhs.true225:                                 ; preds = %if.else222
  %184 = load i32, i32* %leftcol, align 4, !dbg !6976
  %tobool226 = icmp ne i32 %184, 0, !dbg !6976
  br i1 %tobool226, label %if.then227, label %if.else232, !dbg !6978

if.then227:                                       ; preds = %land.lhs.true225
  %185 = load i32, i32* %linesize, align 4, !dbg !6979
  %sub228 = sub nsw i32 0, %185, !dbg !6981
  %idxprom229 = sext i32 %sub228 to i64, !dbg !6982
  %186 = load i16*, i16** %ptr16, align 8, !dbg !6982
  %arrayidx230 = getelementptr inbounds i16, i16* %186, i64 %idxprom229, !dbg !6982
  %187 = load i16, i16* %arrayidx230, align 2, !dbg !6982
  %conv231 = zext i16 %187 to i32, !dbg !6982
  store i32 %conv231, i32* %pred, align 4, !dbg !6983
  br label %if.end303, !dbg !6984

if.else232:                                       ; preds = %land.lhs.true225, %if.else222
  %188 = load i32, i32* %predictor.addr, align 4, !dbg !6985
  switch i32 %188, label %sw.default292 [
    i32 0, label %sw.bb233
    i32 1, label %sw.bb234
    i32 2, label %sw.bb237
    i32 3, label %sw.bb242
    i32 4, label %sw.bb248
    i32 5, label %sw.bb262
    i32 6, label %sw.bb277
    i32 7, label %sw.bb293
  ], !dbg !6987

sw.bb233:                                         ; preds = %if.else232
  store i32 0, i32* %pred, align 4, !dbg !6988
  br label %sw.epilog302, !dbg !6991

sw.bb234:                                         ; preds = %if.else232
  %189 = load i16*, i16** %ptr16, align 8, !dbg !6992
  %arrayidx235 = getelementptr inbounds i16, i16* %189, i64 -1, !dbg !6992
  %190 = load i16, i16* %arrayidx235, align 2, !dbg !6992
  %conv236 = zext i16 %190 to i32, !dbg !6992
  store i32 %conv236, i32* %pred, align 4, !dbg !6994
  br label %sw.epilog302, !dbg !6995

sw.bb237:                                         ; preds = %if.else232
  %191 = load i32, i32* %linesize, align 4, !dbg !6996
  %sub238 = sub nsw i32 0, %191, !dbg !6998
  %idxprom239 = sext i32 %sub238 to i64, !dbg !6999
  %192 = load i16*, i16** %ptr16, align 8, !dbg !6999
  %arrayidx240 = getelementptr inbounds i16, i16* %192, i64 %idxprom239, !dbg !6999
  %193 = load i16, i16* %arrayidx240, align 2, !dbg !6999
  %conv241 = zext i16 %193 to i32, !dbg !6999
  store i32 %conv241, i32* %pred, align 4, !dbg !7000
  br label %sw.epilog302, !dbg !7001

sw.bb242:                                         ; preds = %if.else232
  %194 = load i32, i32* %linesize, align 4, !dbg !7002
  %sub243 = sub nsw i32 0, %194, !dbg !7004
  %sub244 = sub nsw i32 %sub243, 1, !dbg !7005
  %idxprom245 = sext i32 %sub244 to i64, !dbg !7006
  %195 = load i16*, i16** %ptr16, align 8, !dbg !7006
  %arrayidx246 = getelementptr inbounds i16, i16* %195, i64 %idxprom245, !dbg !7006
  %196 = load i16, i16* %arrayidx246, align 2, !dbg !7006
  %conv247 = zext i16 %196 to i32, !dbg !7006
  store i32 %conv247, i32* %pred, align 4, !dbg !7007
  br label %sw.epilog302, !dbg !7008

sw.bb248:                                         ; preds = %if.else232
  %197 = load i16*, i16** %ptr16, align 8, !dbg !7009
  %arrayidx249 = getelementptr inbounds i16, i16* %197, i64 -1, !dbg !7009
  %198 = load i16, i16* %arrayidx249, align 2, !dbg !7009
  %conv250 = zext i16 %198 to i32, !dbg !7009
  %199 = load i32, i32* %linesize, align 4, !dbg !7011
  %sub251 = sub nsw i32 0, %199, !dbg !7012
  %idxprom252 = sext i32 %sub251 to i64, !dbg !7013
  %200 = load i16*, i16** %ptr16, align 8, !dbg !7013
  %arrayidx253 = getelementptr inbounds i16, i16* %200, i64 %idxprom252, !dbg !7013
  %201 = load i16, i16* %arrayidx253, align 2, !dbg !7013
  %conv254 = zext i16 %201 to i32, !dbg !7013
  %add255 = add nsw i32 %conv250, %conv254, !dbg !7014
  %202 = load i32, i32* %linesize, align 4, !dbg !7015
  %sub256 = sub nsw i32 0, %202, !dbg !7016
  %sub257 = sub nsw i32 %sub256, 1, !dbg !7017
  %idxprom258 = sext i32 %sub257 to i64, !dbg !7018
  %203 = load i16*, i16** %ptr16, align 8, !dbg !7018
  %arrayidx259 = getelementptr inbounds i16, i16* %203, i64 %idxprom258, !dbg !7018
  %204 = load i16, i16* %arrayidx259, align 2, !dbg !7018
  %conv260 = zext i16 %204 to i32, !dbg !7018
  %sub261 = sub nsw i32 %add255, %conv260, !dbg !7019
  store i32 %sub261, i32* %pred, align 4, !dbg !7020
  br label %sw.epilog302, !dbg !7021

sw.bb262:                                         ; preds = %if.else232
  %205 = load i16*, i16** %ptr16, align 8, !dbg !7022
  %arrayidx263 = getelementptr inbounds i16, i16* %205, i64 -1, !dbg !7022
  %206 = load i16, i16* %arrayidx263, align 2, !dbg !7022
  %conv264 = zext i16 %206 to i32, !dbg !7022
  %207 = load i32, i32* %linesize, align 4, !dbg !7024
  %sub265 = sub nsw i32 0, %207, !dbg !7025
  %idxprom266 = sext i32 %sub265 to i64, !dbg !7026
  %208 = load i16*, i16** %ptr16, align 8, !dbg !7026
  %arrayidx267 = getelementptr inbounds i16, i16* %208, i64 %idxprom266, !dbg !7026
  %209 = load i16, i16* %arrayidx267, align 2, !dbg !7026
  %conv268 = zext i16 %209 to i32, !dbg !7026
  %210 = load i32, i32* %linesize, align 4, !dbg !7027
  %sub269 = sub nsw i32 0, %210, !dbg !7028
  %sub270 = sub nsw i32 %sub269, 1, !dbg !7029
  %idxprom271 = sext i32 %sub270 to i64, !dbg !7030
  %211 = load i16*, i16** %ptr16, align 8, !dbg !7030
  %arrayidx272 = getelementptr inbounds i16, i16* %211, i64 %idxprom271, !dbg !7030
  %212 = load i16, i16* %arrayidx272, align 2, !dbg !7030
  %conv273 = zext i16 %212 to i32, !dbg !7030
  %sub274 = sub nsw i32 %conv268, %conv273, !dbg !7031
  %shr275 = ashr i32 %sub274, 1, !dbg !7032
  %add276 = add nsw i32 %conv264, %shr275, !dbg !7033
  store i32 %add276, i32* %pred, align 4, !dbg !7034
  br label %sw.epilog302, !dbg !7035

sw.bb277:                                         ; preds = %if.else232
  %213 = load i32, i32* %linesize, align 4, !dbg !7036
  %sub278 = sub nsw i32 0, %213, !dbg !7038
  %idxprom279 = sext i32 %sub278 to i64, !dbg !7039
  %214 = load i16*, i16** %ptr16, align 8, !dbg !7039
  %arrayidx280 = getelementptr inbounds i16, i16* %214, i64 %idxprom279, !dbg !7039
  %215 = load i16, i16* %arrayidx280, align 2, !dbg !7039
  %conv281 = zext i16 %215 to i32, !dbg !7039
  %216 = load i16*, i16** %ptr16, align 8, !dbg !7040
  %arrayidx282 = getelementptr inbounds i16, i16* %216, i64 -1, !dbg !7040
  %217 = load i16, i16* %arrayidx282, align 2, !dbg !7040
  %conv283 = zext i16 %217 to i32, !dbg !7040
  %218 = load i32, i32* %linesize, align 4, !dbg !7041
  %sub284 = sub nsw i32 0, %218, !dbg !7042
  %sub285 = sub nsw i32 %sub284, 1, !dbg !7043
  %idxprom286 = sext i32 %sub285 to i64, !dbg !7044
  %219 = load i16*, i16** %ptr16, align 8, !dbg !7044
  %arrayidx287 = getelementptr inbounds i16, i16* %219, i64 %idxprom286, !dbg !7044
  %220 = load i16, i16* %arrayidx287, align 2, !dbg !7044
  %conv288 = zext i16 %220 to i32, !dbg !7044
  %sub289 = sub nsw i32 %conv283, %conv288, !dbg !7045
  %shr290 = ashr i32 %sub289, 1, !dbg !7046
  %add291 = add nsw i32 %conv281, %shr290, !dbg !7047
  store i32 %add291, i32* %pred, align 4, !dbg !7048
  br label %sw.epilog302, !dbg !7049

sw.default292:                                    ; preds = %if.else232
  br label %sw.bb293, !dbg !7050

sw.bb293:                                         ; preds = %if.else232, %sw.default292
  %221 = load i16*, i16** %ptr16, align 8, !dbg !7052
  %arrayidx294 = getelementptr inbounds i16, i16* %221, i64 -1, !dbg !7052
  %222 = load i16, i16* %arrayidx294, align 2, !dbg !7052
  %conv295 = zext i16 %222 to i32, !dbg !7052
  %223 = load i32, i32* %linesize, align 4, !dbg !7054
  %sub296 = sub nsw i32 0, %223, !dbg !7055
  %idxprom297 = sext i32 %sub296 to i64, !dbg !7056
  %224 = load i16*, i16** %ptr16, align 8, !dbg !7056
  %arrayidx298 = getelementptr inbounds i16, i16* %224, i64 %idxprom297, !dbg !7056
  %225 = load i16, i16* %arrayidx298, align 2, !dbg !7056
  %conv299 = zext i16 %225 to i32, !dbg !7056
  %add300 = add nsw i32 %conv295, %conv299, !dbg !7057
  %shr301 = ashr i32 %add300, 1, !dbg !7058
  store i32 %shr301, i32* %pred, align 4, !dbg !7059
  br label %sw.epilog302, !dbg !7060

sw.epilog302:                                     ; preds = %sw.bb293, %sw.bb277, %sw.bb262, %sw.bb248, %sw.bb242, %sw.bb237, %sw.bb234, %sw.bb233
  br label %if.end303

if.end303:                                        ; preds = %sw.epilog302, %if.then227
  br label %if.end304

if.end304:                                        ; preds = %if.end303, %if.end221
  %226 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7061
  %interlaced305 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %226, i32 0, i32 12, !dbg !7063
  %227 = load i32, i32* %interlaced305, align 32, !dbg !7063
  %tobool306 = icmp ne i32 %227, 0, !dbg !7061
  br i1 %tobool306, label %land.lhs.true307, label %if.end314, !dbg !7064

land.lhs.true307:                                 ; preds = %if.end304
  %228 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7065
  %bottom_field308 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %228, i32 0, i32 13, !dbg !7067
  %229 = load i32, i32* %bottom_field308, align 4, !dbg !7067
  %tobool309 = icmp ne i32 %229, 0, !dbg !7065
  br i1 %tobool309, label %if.then310, label %if.end314, !dbg !7068

if.then310:                                       ; preds = %land.lhs.true307
  %230 = load i32, i32* %linesize, align 4, !dbg !7069
  %shr311 = ashr i32 %230, 1, !dbg !7070
  %231 = load i16*, i16** %ptr16, align 8, !dbg !7071
  %idx.ext312 = sext i32 %shr311 to i64, !dbg !7071
  %add.ptr313 = getelementptr inbounds i16, i16* %231, i64 %idx.ext312, !dbg !7071
  store i16* %add.ptr313, i16** %ptr16, align 8, !dbg !7071
  br label %if.end314, !dbg !7072

if.end314:                                        ; preds = %if.then310, %land.lhs.true307, %if.end304
  %232 = load i32, i32* %mask, align 4, !dbg !7073
  %233 = load i32, i32* %pred, align 4, !dbg !7074
  %and315 = and i32 %233, %232, !dbg !7074
  store i32 %and315, i32* %pred, align 4, !dbg !7074
  %234 = load i32, i32* %pred, align 4, !dbg !7075
  %235 = load i32, i32* %dc, align 4, !dbg !7076
  %236 = load i32, i32* %point_transform.addr, align 4, !dbg !7077
  %shl316 = shl i32 %235, %236, !dbg !7078
  %add317 = add i32 %234, %shl316, !dbg !7079
  %conv318 = trunc i32 %add317 to i16, !dbg !7075
  %237 = load i16*, i16** %ptr16, align 8, !dbg !7080
  store i16 %conv318, i16* %237, align 2, !dbg !7081
  br label %if.end319

if.end319:                                        ; preds = %if.end314, %if.end185
  br label %if.end320

if.end320:                                        ; preds = %if.end319, %if.then73
  %238 = load i32, i32* %x, align 4, !dbg !7082
  %inc = add nsw i32 %238, 1, !dbg !7082
  store i32 %inc, i32* %x, align 4, !dbg !7082
  %239 = load i32, i32* %h, align 4, !dbg !7084
  %cmp321 = icmp eq i32 %inc, %239, !dbg !7085
  br i1 %cmp321, label %if.then323, label %if.end325, !dbg !7086

if.then323:                                       ; preds = %if.end320
  store i32 0, i32* %x, align 4, !dbg !7087
  %240 = load i32, i32* %y, align 4, !dbg !7089
  %inc324 = add nsw i32 %240, 1, !dbg !7089
  store i32 %inc324, i32* %y, align 4, !dbg !7089
  br label %if.end325, !dbg !7090

if.end325:                                        ; preds = %if.then323, %if.end320
  br label %for.inc, !dbg !7091

for.inc:                                          ; preds = %if.end325
  %241 = load i32, i32* %j, align 4, !dbg !7092
  %inc326 = add nsw i32 %241, 1, !dbg !7092
  store i32 %inc326, i32* %j, align 4, !dbg !7092
  br label %for.cond58, !dbg !7094, !llvm.loop !7095

for.end:                                          ; preds = %for.cond58
  br label %for.inc327, !dbg !7097

for.inc327:                                       ; preds = %for.end
  %242 = load i32, i32* %i, align 4, !dbg !7098
  %inc328 = add nsw i32 %242, 1, !dbg !7098
  store i32 %inc328, i32* %i, align 4, !dbg !7098
  br label %for.cond43, !dbg !7100, !llvm.loop !7101

for.end329:                                       ; preds = %for.cond43
  br label %if.end586, !dbg !7103

if.else330:                                       ; preds = %lor.lhs.false28
  store i32 0, i32* %i, align 4, !dbg !7104
  br label %for.cond331, !dbg !7107

for.cond331:                                      ; preds = %for.inc583, %if.else330
  %243 = load i32, i32* %i, align 4, !dbg !7108
  %244 = load i32, i32* %nb_components.addr, align 4, !dbg !7111
  %cmp332 = icmp slt i32 %243, %244, !dbg !7112
  br i1 %cmp332, label %for.body334, label %for.end585, !dbg !7113

for.body334:                                      ; preds = %for.cond331
  call void @llvm.dbg.declare(metadata i8** %ptr335, metadata !7114, metadata !2073), !dbg !7116
  call void @llvm.dbg.declare(metadata i16** %ptr16336, metadata !7117, metadata !2073), !dbg !7118
  call void @llvm.dbg.declare(metadata i32* %n337, metadata !7119, metadata !2073), !dbg !7120
  call void @llvm.dbg.declare(metadata i32* %h338, metadata !7121, metadata !2073), !dbg !7122
  call void @llvm.dbg.declare(metadata i32* %v339, metadata !7123, metadata !2073), !dbg !7124
  call void @llvm.dbg.declare(metadata i32* %x340, metadata !7125, metadata !2073), !dbg !7126
  call void @llvm.dbg.declare(metadata i32* %y341, metadata !7127, metadata !2073), !dbg !7128
  call void @llvm.dbg.declare(metadata i32* %c342, metadata !7129, metadata !2073), !dbg !7130
  call void @llvm.dbg.declare(metadata i32* %j343, metadata !7131, metadata !2073), !dbg !7132
  call void @llvm.dbg.declare(metadata i32* %linesize344, metadata !7133, metadata !2073), !dbg !7134
  call void @llvm.dbg.declare(metadata i32* %dc345, metadata !7135, metadata !2073), !dbg !7136
  %245 = load i32, i32* %i, align 4, !dbg !7137
  %idxprom346 = sext i32 %245 to i64, !dbg !7138
  %246 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7138
  %nb_blocks347 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %246, i32 0, i32 44, !dbg !7139
  %arrayidx348 = getelementptr inbounds [4 x i32], [4 x i32]* %nb_blocks347, i64 0, i64 %idxprom346, !dbg !7138
  %247 = load i32, i32* %arrayidx348, align 4, !dbg !7138
  store i32 %247, i32* %n337, align 4, !dbg !7140
  %248 = load i32, i32* %i, align 4, !dbg !7141
  %idxprom349 = sext i32 %248 to i64, !dbg !7142
  %249 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7142
  %comp_index350 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %249, i32 0, i32 41, !dbg !7143
  %arrayidx351 = getelementptr inbounds [4 x i32], [4 x i32]* %comp_index350, i64 0, i64 %idxprom349, !dbg !7142
  %250 = load i32, i32* %arrayidx351, align 4, !dbg !7142
  store i32 %250, i32* %c342, align 4, !dbg !7144
  %251 = load i32, i32* %i, align 4, !dbg !7145
  %idxprom352 = sext i32 %251 to i64, !dbg !7146
  %252 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7146
  %h_scount353 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %252, i32 0, i32 45, !dbg !7147
  %arrayidx354 = getelementptr inbounds [4 x i32], [4 x i32]* %h_scount353, i64 0, i64 %idxprom352, !dbg !7146
  %253 = load i32, i32* %arrayidx354, align 4, !dbg !7146
  store i32 %253, i32* %h338, align 4, !dbg !7148
  %254 = load i32, i32* %i, align 4, !dbg !7149
  %idxprom355 = sext i32 %254 to i64, !dbg !7150
  %255 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7150
  %v_scount356 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %255, i32 0, i32 46, !dbg !7151
  %arrayidx357 = getelementptr inbounds [4 x i32], [4 x i32]* %v_scount356, i64 0, i64 %idxprom355, !dbg !7150
  %256 = load i32, i32* %arrayidx357, align 4, !dbg !7150
  store i32 %256, i32* %v339, align 4, !dbg !7152
  store i32 0, i32* %x340, align 4, !dbg !7153
  store i32 0, i32* %y341, align 4, !dbg !7154
  %257 = load i32, i32* %c342, align 4, !dbg !7155
  %idxprom358 = sext i32 %257 to i64, !dbg !7156
  %258 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7156
  %linesize359 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %258, i32 0, i32 55, !dbg !7157
  %arrayidx360 = getelementptr inbounds [4 x i32], [4 x i32]* %linesize359, i64 0, i64 %idxprom358, !dbg !7156
  %259 = load i32, i32* %arrayidx360, align 4, !dbg !7156
  store i32 %259, i32* %linesize344, align 4, !dbg !7158
  %260 = load i32, i32* %bits, align 4, !dbg !7159
  %cmp361 = icmp sgt i32 %260, 8, !dbg !7161
  br i1 %cmp361, label %if.then363, label %if.end365, !dbg !7162

if.then363:                                       ; preds = %for.body334
  %261 = load i32, i32* %linesize344, align 4, !dbg !7163
  %div364 = sdiv i32 %261, 2, !dbg !7163
  store i32 %div364, i32* %linesize344, align 4, !dbg !7163
  br label %if.end365, !dbg !7165

if.end365:                                        ; preds = %if.then363, %for.body334
  store i32 0, i32* %j343, align 4, !dbg !7166
  br label %for.cond366, !dbg !7168

for.cond366:                                      ; preds = %for.inc580, %if.end365
  %262 = load i32, i32* %j343, align 4, !dbg !7169
  %263 = load i32, i32* %n337, align 4, !dbg !7172
  %cmp367 = icmp slt i32 %262, %263, !dbg !7173
  br i1 %cmp367, label %for.body369, label %for.end582, !dbg !7174

for.body369:                                      ; preds = %for.cond366
  call void @llvm.dbg.declare(metadata i32* %pred370, metadata !7175, metadata !2073), !dbg !7177
  %264 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7178
  %265 = load i32, i32* %i, align 4, !dbg !7179
  %idxprom371 = sext i32 %265 to i64, !dbg !7180
  %266 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7180
  %dc_index372 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %266, i32 0, i32 42, !dbg !7181
  %arrayidx373 = getelementptr inbounds [4 x i32], [4 x i32]* %dc_index372, i64 0, i64 %idxprom371, !dbg !7180
  %267 = load i32, i32* %arrayidx373, align 4, !dbg !7180
  %call374 = call i32 @mjpeg_decode_dc(%struct.MJpegDecodeContext* %264, i32 %267), !dbg !7182
  store i32 %call374, i32* %dc345, align 4, !dbg !7183
  %268 = load i32, i32* %dc345, align 4, !dbg !7184
  %cmp375 = icmp eq i32 %268, 1048575, !dbg !7186
  br i1 %cmp375, label %if.then377, label %if.end378, !dbg !7187

if.then377:                                       ; preds = %for.body369
  store i32 -1, i32* %retval, align 4, !dbg !7188
  br label %return, !dbg !7188

if.end378:                                        ; preds = %for.body369
  %269 = load i32, i32* %h338, align 4, !dbg !7189
  %270 = load i32, i32* %mb_x, align 4, !dbg !7191
  %mul379 = mul nsw i32 %269, %270, !dbg !7192
  %271 = load i32, i32* %x340, align 4, !dbg !7193
  %add380 = add nsw i32 %mul379, %271, !dbg !7194
  %272 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7195
  %width381 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %272, i32 0, i32 32, !dbg !7196
  %273 = load i32, i32* %width381, align 16, !dbg !7196
  %cmp382 = icmp sge i32 %add380, %273, !dbg !7197
  br i1 %cmp382, label %if.then390, label %lor.lhs.false384, !dbg !7198

lor.lhs.false384:                                 ; preds = %if.end378
  %274 = load i32, i32* %v339, align 4, !dbg !7199
  %275 = load i32, i32* %mb_y, align 4, !dbg !7201
  %mul385 = mul nsw i32 %274, %275, !dbg !7202
  %276 = load i32, i32* %y341, align 4, !dbg !7203
  %add386 = add nsw i32 %mul385, %276, !dbg !7204
  %277 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7205
  %height387 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %277, i32 0, i32 33, !dbg !7206
  %278 = load i32, i32* %height387, align 4, !dbg !7206
  %cmp388 = icmp sge i32 %add386, %278, !dbg !7207
  br i1 %cmp388, label %if.then390, label %if.else391, !dbg !7208

if.then390:                                       ; preds = %lor.lhs.false384, %if.end378
  br label %if.end573, !dbg !7210

if.else391:                                       ; preds = %lor.lhs.false384
  %279 = load i32, i32* %bits, align 4, !dbg !7212
  %cmp392 = icmp sle i32 %279, 8, !dbg !7215
  br i1 %cmp392, label %if.then394, label %if.else482, !dbg !7212

if.then394:                                       ; preds = %if.else391
  %280 = load i32, i32* %c342, align 4, !dbg !7216
  %idxprom395 = sext i32 %280 to i64, !dbg !7218
  %281 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7218
  %picture_ptr396 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %281, i32 0, i32 53, !dbg !7219
  %282 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr396, align 8, !dbg !7219
  %data397 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %282, i32 0, i32 0, !dbg !7220
  %arrayidx398 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data397, i64 0, i64 %idxprom395, !dbg !7218
  %283 = load i8*, i8** %arrayidx398, align 8, !dbg !7218
  %284 = load i32, i32* %linesize344, align 4, !dbg !7221
  %285 = load i32, i32* %v339, align 4, !dbg !7222
  %286 = load i32, i32* %mb_y, align 4, !dbg !7223
  %mul399 = mul nsw i32 %285, %286, !dbg !7224
  %287 = load i32, i32* %y341, align 4, !dbg !7225
  %add400 = add nsw i32 %mul399, %287, !dbg !7226
  %mul401 = mul nsw i32 %284, %add400, !dbg !7227
  %idx.ext402 = sext i32 %mul401 to i64, !dbg !7228
  %add.ptr403 = getelementptr inbounds i8, i8* %283, i64 %idx.ext402, !dbg !7228
  %288 = load i32, i32* %h338, align 4, !dbg !7229
  %289 = load i32, i32* %mb_x, align 4, !dbg !7230
  %mul404 = mul nsw i32 %288, %289, !dbg !7231
  %290 = load i32, i32* %x340, align 4, !dbg !7232
  %add405 = add nsw i32 %mul404, %290, !dbg !7233
  %idx.ext406 = sext i32 %add405 to i64, !dbg !7234
  %add.ptr407 = getelementptr inbounds i8, i8* %add.ptr403, i64 %idx.ext406, !dbg !7234
  store i8* %add.ptr407, i8** %ptr335, align 8, !dbg !7235
  %291 = load i32, i32* %predictor.addr, align 4, !dbg !7236
  switch i32 %291, label %sw.default467 [
    i32 0, label %sw.bb408
    i32 1, label %sw.bb409
    i32 2, label %sw.bb412
    i32 3, label %sw.bb417
    i32 4, label %sw.bb423
    i32 5, label %sw.bb437
    i32 6, label %sw.bb452
    i32 7, label %sw.bb468
  ], !dbg !7237

sw.bb408:                                         ; preds = %if.then394
  store i32 0, i32* %pred370, align 4, !dbg !7238
  br label %sw.epilog477, !dbg !7241

sw.bb409:                                         ; preds = %if.then394
  %292 = load i8*, i8** %ptr335, align 8, !dbg !7242
  %arrayidx410 = getelementptr inbounds i8, i8* %292, i64 -1, !dbg !7242
  %293 = load i8, i8* %arrayidx410, align 1, !dbg !7242
  %conv411 = zext i8 %293 to i32, !dbg !7242
  store i32 %conv411, i32* %pred370, align 4, !dbg !7244
  br label %sw.epilog477, !dbg !7245

sw.bb412:                                         ; preds = %if.then394
  %294 = load i32, i32* %linesize344, align 4, !dbg !7246
  %sub413 = sub nsw i32 0, %294, !dbg !7248
  %idxprom414 = sext i32 %sub413 to i64, !dbg !7249
  %295 = load i8*, i8** %ptr335, align 8, !dbg !7249
  %arrayidx415 = getelementptr inbounds i8, i8* %295, i64 %idxprom414, !dbg !7249
  %296 = load i8, i8* %arrayidx415, align 1, !dbg !7249
  %conv416 = zext i8 %296 to i32, !dbg !7249
  store i32 %conv416, i32* %pred370, align 4, !dbg !7250
  br label %sw.epilog477, !dbg !7251

sw.bb417:                                         ; preds = %if.then394
  %297 = load i32, i32* %linesize344, align 4, !dbg !7252
  %sub418 = sub nsw i32 0, %297, !dbg !7254
  %sub419 = sub nsw i32 %sub418, 1, !dbg !7255
  %idxprom420 = sext i32 %sub419 to i64, !dbg !7256
  %298 = load i8*, i8** %ptr335, align 8, !dbg !7256
  %arrayidx421 = getelementptr inbounds i8, i8* %298, i64 %idxprom420, !dbg !7256
  %299 = load i8, i8* %arrayidx421, align 1, !dbg !7256
  %conv422 = zext i8 %299 to i32, !dbg !7256
  store i32 %conv422, i32* %pred370, align 4, !dbg !7257
  br label %sw.epilog477, !dbg !7258

sw.bb423:                                         ; preds = %if.then394
  %300 = load i8*, i8** %ptr335, align 8, !dbg !7259
  %arrayidx424 = getelementptr inbounds i8, i8* %300, i64 -1, !dbg !7259
  %301 = load i8, i8* %arrayidx424, align 1, !dbg !7259
  %conv425 = zext i8 %301 to i32, !dbg !7259
  %302 = load i32, i32* %linesize344, align 4, !dbg !7261
  %sub426 = sub nsw i32 0, %302, !dbg !7262
  %idxprom427 = sext i32 %sub426 to i64, !dbg !7263
  %303 = load i8*, i8** %ptr335, align 8, !dbg !7263
  %arrayidx428 = getelementptr inbounds i8, i8* %303, i64 %idxprom427, !dbg !7263
  %304 = load i8, i8* %arrayidx428, align 1, !dbg !7263
  %conv429 = zext i8 %304 to i32, !dbg !7263
  %add430 = add nsw i32 %conv425, %conv429, !dbg !7264
  %305 = load i32, i32* %linesize344, align 4, !dbg !7265
  %sub431 = sub nsw i32 0, %305, !dbg !7266
  %sub432 = sub nsw i32 %sub431, 1, !dbg !7267
  %idxprom433 = sext i32 %sub432 to i64, !dbg !7268
  %306 = load i8*, i8** %ptr335, align 8, !dbg !7268
  %arrayidx434 = getelementptr inbounds i8, i8* %306, i64 %idxprom433, !dbg !7268
  %307 = load i8, i8* %arrayidx434, align 1, !dbg !7268
  %conv435 = zext i8 %307 to i32, !dbg !7268
  %sub436 = sub nsw i32 %add430, %conv435, !dbg !7269
  store i32 %sub436, i32* %pred370, align 4, !dbg !7270
  br label %sw.epilog477, !dbg !7271

sw.bb437:                                         ; preds = %if.then394
  %308 = load i8*, i8** %ptr335, align 8, !dbg !7272
  %arrayidx438 = getelementptr inbounds i8, i8* %308, i64 -1, !dbg !7272
  %309 = load i8, i8* %arrayidx438, align 1, !dbg !7272
  %conv439 = zext i8 %309 to i32, !dbg !7272
  %310 = load i32, i32* %linesize344, align 4, !dbg !7274
  %sub440 = sub nsw i32 0, %310, !dbg !7275
  %idxprom441 = sext i32 %sub440 to i64, !dbg !7276
  %311 = load i8*, i8** %ptr335, align 8, !dbg !7276
  %arrayidx442 = getelementptr inbounds i8, i8* %311, i64 %idxprom441, !dbg !7276
  %312 = load i8, i8* %arrayidx442, align 1, !dbg !7276
  %conv443 = zext i8 %312 to i32, !dbg !7276
  %313 = load i32, i32* %linesize344, align 4, !dbg !7277
  %sub444 = sub nsw i32 0, %313, !dbg !7278
  %sub445 = sub nsw i32 %sub444, 1, !dbg !7279
  %idxprom446 = sext i32 %sub445 to i64, !dbg !7280
  %314 = load i8*, i8** %ptr335, align 8, !dbg !7280
  %arrayidx447 = getelementptr inbounds i8, i8* %314, i64 %idxprom446, !dbg !7280
  %315 = load i8, i8* %arrayidx447, align 1, !dbg !7280
  %conv448 = zext i8 %315 to i32, !dbg !7280
  %sub449 = sub nsw i32 %conv443, %conv448, !dbg !7281
  %shr450 = ashr i32 %sub449, 1, !dbg !7282
  %add451 = add nsw i32 %conv439, %shr450, !dbg !7283
  store i32 %add451, i32* %pred370, align 4, !dbg !7284
  br label %sw.epilog477, !dbg !7285

sw.bb452:                                         ; preds = %if.then394
  %316 = load i32, i32* %linesize344, align 4, !dbg !7286
  %sub453 = sub nsw i32 0, %316, !dbg !7288
  %idxprom454 = sext i32 %sub453 to i64, !dbg !7289
  %317 = load i8*, i8** %ptr335, align 8, !dbg !7289
  %arrayidx455 = getelementptr inbounds i8, i8* %317, i64 %idxprom454, !dbg !7289
  %318 = load i8, i8* %arrayidx455, align 1, !dbg !7289
  %conv456 = zext i8 %318 to i32, !dbg !7289
  %319 = load i8*, i8** %ptr335, align 8, !dbg !7290
  %arrayidx457 = getelementptr inbounds i8, i8* %319, i64 -1, !dbg !7290
  %320 = load i8, i8* %arrayidx457, align 1, !dbg !7290
  %conv458 = zext i8 %320 to i32, !dbg !7290
  %321 = load i32, i32* %linesize344, align 4, !dbg !7291
  %sub459 = sub nsw i32 0, %321, !dbg !7292
  %sub460 = sub nsw i32 %sub459, 1, !dbg !7293
  %idxprom461 = sext i32 %sub460 to i64, !dbg !7294
  %322 = load i8*, i8** %ptr335, align 8, !dbg !7294
  %arrayidx462 = getelementptr inbounds i8, i8* %322, i64 %idxprom461, !dbg !7294
  %323 = load i8, i8* %arrayidx462, align 1, !dbg !7294
  %conv463 = zext i8 %323 to i32, !dbg !7294
  %sub464 = sub nsw i32 %conv458, %conv463, !dbg !7295
  %shr465 = ashr i32 %sub464, 1, !dbg !7296
  %add466 = add nsw i32 %conv456, %shr465, !dbg !7297
  store i32 %add466, i32* %pred370, align 4, !dbg !7298
  br label %sw.epilog477, !dbg !7299

sw.default467:                                    ; preds = %if.then394
  br label %sw.bb468, !dbg !7300

sw.bb468:                                         ; preds = %if.then394, %sw.default467
  %324 = load i8*, i8** %ptr335, align 8, !dbg !7302
  %arrayidx469 = getelementptr inbounds i8, i8* %324, i64 -1, !dbg !7302
  %325 = load i8, i8* %arrayidx469, align 1, !dbg !7302
  %conv470 = zext i8 %325 to i32, !dbg !7302
  %326 = load i32, i32* %linesize344, align 4, !dbg !7304
  %sub471 = sub nsw i32 0, %326, !dbg !7305
  %idxprom472 = sext i32 %sub471 to i64, !dbg !7306
  %327 = load i8*, i8** %ptr335, align 8, !dbg !7306
  %arrayidx473 = getelementptr inbounds i8, i8* %327, i64 %idxprom472, !dbg !7306
  %328 = load i8, i8* %arrayidx473, align 1, !dbg !7306
  %conv474 = zext i8 %328 to i32, !dbg !7306
  %add475 = add nsw i32 %conv470, %conv474, !dbg !7307
  %shr476 = ashr i32 %add475, 1, !dbg !7308
  store i32 %shr476, i32* %pred370, align 4, !dbg !7309
  br label %sw.epilog477, !dbg !7310

sw.epilog477:                                     ; preds = %sw.bb468, %sw.bb452, %sw.bb437, %sw.bb423, %sw.bb417, %sw.bb412, %sw.bb409, %sw.bb408
  %329 = load i32, i32* %mask, align 4, !dbg !7311
  %330 = load i32, i32* %pred370, align 4, !dbg !7312
  %and478 = and i32 %330, %329, !dbg !7312
  store i32 %and478, i32* %pred370, align 4, !dbg !7312
  %331 = load i32, i32* %pred370, align 4, !dbg !7313
  %332 = load i32, i32* %dc345, align 4, !dbg !7314
  %333 = load i32, i32* %point_transform.addr, align 4, !dbg !7315
  %shl479 = shl i32 %332, %333, !dbg !7316
  %add480 = add i32 %331, %shl479, !dbg !7317
  %conv481 = trunc i32 %add480 to i8, !dbg !7313
  %334 = load i8*, i8** %ptr335, align 8, !dbg !7318
  store i8 %conv481, i8* %334, align 1, !dbg !7319
  br label %if.end572, !dbg !7320

if.else482:                                       ; preds = %if.else391
  %335 = load i32, i32* %c342, align 4, !dbg !7321
  %idxprom483 = sext i32 %335 to i64, !dbg !7323
  %336 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7323
  %picture_ptr484 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %336, i32 0, i32 53, !dbg !7324
  %337 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr484, align 8, !dbg !7324
  %data485 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %337, i32 0, i32 0, !dbg !7325
  %arrayidx486 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data485, i64 0, i64 %idxprom483, !dbg !7323
  %338 = load i8*, i8** %arrayidx486, align 8, !dbg !7323
  %339 = load i32, i32* %linesize344, align 4, !dbg !7326
  %340 = load i32, i32* %v339, align 4, !dbg !7327
  %341 = load i32, i32* %mb_y, align 4, !dbg !7328
  %mul487 = mul nsw i32 %340, %341, !dbg !7329
  %342 = load i32, i32* %y341, align 4, !dbg !7330
  %add488 = add nsw i32 %mul487, %342, !dbg !7331
  %mul489 = mul nsw i32 %339, %add488, !dbg !7332
  %mul490 = mul nsw i32 2, %mul489, !dbg !7333
  %idx.ext491 = sext i32 %mul490 to i64, !dbg !7334
  %add.ptr492 = getelementptr inbounds i8, i8* %338, i64 %idx.ext491, !dbg !7334
  %343 = load i32, i32* %h338, align 4, !dbg !7335
  %344 = load i32, i32* %mb_x, align 4, !dbg !7336
  %mul493 = mul nsw i32 %343, %344, !dbg !7337
  %345 = load i32, i32* %x340, align 4, !dbg !7338
  %add494 = add nsw i32 %mul493, %345, !dbg !7339
  %mul495 = mul nsw i32 2, %add494, !dbg !7340
  %idx.ext496 = sext i32 %mul495 to i64, !dbg !7341
  %add.ptr497 = getelementptr inbounds i8, i8* %add.ptr492, i64 %idx.ext496, !dbg !7341
  %346 = bitcast i8* %add.ptr497 to i16*, !dbg !7342
  store i16* %346, i16** %ptr16336, align 8, !dbg !7343
  %347 = load i32, i32* %predictor.addr, align 4, !dbg !7344
  switch i32 %347, label %sw.default557 [
    i32 0, label %sw.bb498
    i32 1, label %sw.bb499
    i32 2, label %sw.bb502
    i32 3, label %sw.bb507
    i32 4, label %sw.bb513
    i32 5, label %sw.bb527
    i32 6, label %sw.bb542
    i32 7, label %sw.bb558
  ], !dbg !7345

sw.bb498:                                         ; preds = %if.else482
  store i32 0, i32* %pred370, align 4, !dbg !7346
  br label %sw.epilog567, !dbg !7349

sw.bb499:                                         ; preds = %if.else482
  %348 = load i16*, i16** %ptr16336, align 8, !dbg !7350
  %arrayidx500 = getelementptr inbounds i16, i16* %348, i64 -1, !dbg !7350
  %349 = load i16, i16* %arrayidx500, align 2, !dbg !7350
  %conv501 = zext i16 %349 to i32, !dbg !7350
  store i32 %conv501, i32* %pred370, align 4, !dbg !7352
  br label %sw.epilog567, !dbg !7353

sw.bb502:                                         ; preds = %if.else482
  %350 = load i32, i32* %linesize344, align 4, !dbg !7354
  %sub503 = sub nsw i32 0, %350, !dbg !7356
  %idxprom504 = sext i32 %sub503 to i64, !dbg !7357
  %351 = load i16*, i16** %ptr16336, align 8, !dbg !7357
  %arrayidx505 = getelementptr inbounds i16, i16* %351, i64 %idxprom504, !dbg !7357
  %352 = load i16, i16* %arrayidx505, align 2, !dbg !7357
  %conv506 = zext i16 %352 to i32, !dbg !7357
  store i32 %conv506, i32* %pred370, align 4, !dbg !7358
  br label %sw.epilog567, !dbg !7359

sw.bb507:                                         ; preds = %if.else482
  %353 = load i32, i32* %linesize344, align 4, !dbg !7360
  %sub508 = sub nsw i32 0, %353, !dbg !7362
  %sub509 = sub nsw i32 %sub508, 1, !dbg !7363
  %idxprom510 = sext i32 %sub509 to i64, !dbg !7364
  %354 = load i16*, i16** %ptr16336, align 8, !dbg !7364
  %arrayidx511 = getelementptr inbounds i16, i16* %354, i64 %idxprom510, !dbg !7364
  %355 = load i16, i16* %arrayidx511, align 2, !dbg !7364
  %conv512 = zext i16 %355 to i32, !dbg !7364
  store i32 %conv512, i32* %pred370, align 4, !dbg !7365
  br label %sw.epilog567, !dbg !7366

sw.bb513:                                         ; preds = %if.else482
  %356 = load i16*, i16** %ptr16336, align 8, !dbg !7367
  %arrayidx514 = getelementptr inbounds i16, i16* %356, i64 -1, !dbg !7367
  %357 = load i16, i16* %arrayidx514, align 2, !dbg !7367
  %conv515 = zext i16 %357 to i32, !dbg !7367
  %358 = load i32, i32* %linesize344, align 4, !dbg !7369
  %sub516 = sub nsw i32 0, %358, !dbg !7370
  %idxprom517 = sext i32 %sub516 to i64, !dbg !7371
  %359 = load i16*, i16** %ptr16336, align 8, !dbg !7371
  %arrayidx518 = getelementptr inbounds i16, i16* %359, i64 %idxprom517, !dbg !7371
  %360 = load i16, i16* %arrayidx518, align 2, !dbg !7371
  %conv519 = zext i16 %360 to i32, !dbg !7371
  %add520 = add nsw i32 %conv515, %conv519, !dbg !7372
  %361 = load i32, i32* %linesize344, align 4, !dbg !7373
  %sub521 = sub nsw i32 0, %361, !dbg !7374
  %sub522 = sub nsw i32 %sub521, 1, !dbg !7375
  %idxprom523 = sext i32 %sub522 to i64, !dbg !7376
  %362 = load i16*, i16** %ptr16336, align 8, !dbg !7376
  %arrayidx524 = getelementptr inbounds i16, i16* %362, i64 %idxprom523, !dbg !7376
  %363 = load i16, i16* %arrayidx524, align 2, !dbg !7376
  %conv525 = zext i16 %363 to i32, !dbg !7376
  %sub526 = sub nsw i32 %add520, %conv525, !dbg !7377
  store i32 %sub526, i32* %pred370, align 4, !dbg !7378
  br label %sw.epilog567, !dbg !7379

sw.bb527:                                         ; preds = %if.else482
  %364 = load i16*, i16** %ptr16336, align 8, !dbg !7380
  %arrayidx528 = getelementptr inbounds i16, i16* %364, i64 -1, !dbg !7380
  %365 = load i16, i16* %arrayidx528, align 2, !dbg !7380
  %conv529 = zext i16 %365 to i32, !dbg !7380
  %366 = load i32, i32* %linesize344, align 4, !dbg !7382
  %sub530 = sub nsw i32 0, %366, !dbg !7383
  %idxprom531 = sext i32 %sub530 to i64, !dbg !7384
  %367 = load i16*, i16** %ptr16336, align 8, !dbg !7384
  %arrayidx532 = getelementptr inbounds i16, i16* %367, i64 %idxprom531, !dbg !7384
  %368 = load i16, i16* %arrayidx532, align 2, !dbg !7384
  %conv533 = zext i16 %368 to i32, !dbg !7384
  %369 = load i32, i32* %linesize344, align 4, !dbg !7385
  %sub534 = sub nsw i32 0, %369, !dbg !7386
  %sub535 = sub nsw i32 %sub534, 1, !dbg !7387
  %idxprom536 = sext i32 %sub535 to i64, !dbg !7388
  %370 = load i16*, i16** %ptr16336, align 8, !dbg !7388
  %arrayidx537 = getelementptr inbounds i16, i16* %370, i64 %idxprom536, !dbg !7388
  %371 = load i16, i16* %arrayidx537, align 2, !dbg !7388
  %conv538 = zext i16 %371 to i32, !dbg !7388
  %sub539 = sub nsw i32 %conv533, %conv538, !dbg !7389
  %shr540 = ashr i32 %sub539, 1, !dbg !7390
  %add541 = add nsw i32 %conv529, %shr540, !dbg !7391
  store i32 %add541, i32* %pred370, align 4, !dbg !7392
  br label %sw.epilog567, !dbg !7393

sw.bb542:                                         ; preds = %if.else482
  %372 = load i32, i32* %linesize344, align 4, !dbg !7394
  %sub543 = sub nsw i32 0, %372, !dbg !7396
  %idxprom544 = sext i32 %sub543 to i64, !dbg !7397
  %373 = load i16*, i16** %ptr16336, align 8, !dbg !7397
  %arrayidx545 = getelementptr inbounds i16, i16* %373, i64 %idxprom544, !dbg !7397
  %374 = load i16, i16* %arrayidx545, align 2, !dbg !7397
  %conv546 = zext i16 %374 to i32, !dbg !7397
  %375 = load i16*, i16** %ptr16336, align 8, !dbg !7398
  %arrayidx547 = getelementptr inbounds i16, i16* %375, i64 -1, !dbg !7398
  %376 = load i16, i16* %arrayidx547, align 2, !dbg !7398
  %conv548 = zext i16 %376 to i32, !dbg !7398
  %377 = load i32, i32* %linesize344, align 4, !dbg !7399
  %sub549 = sub nsw i32 0, %377, !dbg !7400
  %sub550 = sub nsw i32 %sub549, 1, !dbg !7401
  %idxprom551 = sext i32 %sub550 to i64, !dbg !7402
  %378 = load i16*, i16** %ptr16336, align 8, !dbg !7402
  %arrayidx552 = getelementptr inbounds i16, i16* %378, i64 %idxprom551, !dbg !7402
  %379 = load i16, i16* %arrayidx552, align 2, !dbg !7402
  %conv553 = zext i16 %379 to i32, !dbg !7402
  %sub554 = sub nsw i32 %conv548, %conv553, !dbg !7403
  %shr555 = ashr i32 %sub554, 1, !dbg !7404
  %add556 = add nsw i32 %conv546, %shr555, !dbg !7405
  store i32 %add556, i32* %pred370, align 4, !dbg !7406
  br label %sw.epilog567, !dbg !7407

sw.default557:                                    ; preds = %if.else482
  br label %sw.bb558, !dbg !7408

sw.bb558:                                         ; preds = %if.else482, %sw.default557
  %380 = load i16*, i16** %ptr16336, align 8, !dbg !7410
  %arrayidx559 = getelementptr inbounds i16, i16* %380, i64 -1, !dbg !7410
  %381 = load i16, i16* %arrayidx559, align 2, !dbg !7410
  %conv560 = zext i16 %381 to i32, !dbg !7410
  %382 = load i32, i32* %linesize344, align 4, !dbg !7412
  %sub561 = sub nsw i32 0, %382, !dbg !7413
  %idxprom562 = sext i32 %sub561 to i64, !dbg !7414
  %383 = load i16*, i16** %ptr16336, align 8, !dbg !7414
  %arrayidx563 = getelementptr inbounds i16, i16* %383, i64 %idxprom562, !dbg !7414
  %384 = load i16, i16* %arrayidx563, align 2, !dbg !7414
  %conv564 = zext i16 %384 to i32, !dbg !7414
  %add565 = add nsw i32 %conv560, %conv564, !dbg !7415
  %shr566 = ashr i32 %add565, 1, !dbg !7416
  store i32 %shr566, i32* %pred370, align 4, !dbg !7417
  br label %sw.epilog567, !dbg !7418

sw.epilog567:                                     ; preds = %sw.bb558, %sw.bb542, %sw.bb527, %sw.bb513, %sw.bb507, %sw.bb502, %sw.bb499, %sw.bb498
  %385 = load i32, i32* %mask, align 4, !dbg !7419
  %386 = load i32, i32* %pred370, align 4, !dbg !7420
  %and568 = and i32 %386, %385, !dbg !7420
  store i32 %and568, i32* %pred370, align 4, !dbg !7420
  %387 = load i32, i32* %pred370, align 4, !dbg !7421
  %388 = load i32, i32* %dc345, align 4, !dbg !7422
  %389 = load i32, i32* %point_transform.addr, align 4, !dbg !7423
  %shl569 = shl i32 %388, %389, !dbg !7424
  %add570 = add i32 %387, %shl569, !dbg !7425
  %conv571 = trunc i32 %add570 to i16, !dbg !7421
  %390 = load i16*, i16** %ptr16336, align 8, !dbg !7426
  store i16 %conv571, i16* %390, align 2, !dbg !7427
  br label %if.end572

if.end572:                                        ; preds = %sw.epilog567, %sw.epilog477
  br label %if.end573

if.end573:                                        ; preds = %if.end572, %if.then390
  %391 = load i32, i32* %x340, align 4, !dbg !7428
  %inc574 = add nsw i32 %391, 1, !dbg !7428
  store i32 %inc574, i32* %x340, align 4, !dbg !7428
  %392 = load i32, i32* %h338, align 4, !dbg !7430
  %cmp575 = icmp eq i32 %inc574, %392, !dbg !7431
  br i1 %cmp575, label %if.then577, label %if.end579, !dbg !7432

if.then577:                                       ; preds = %if.end573
  store i32 0, i32* %x340, align 4, !dbg !7433
  %393 = load i32, i32* %y341, align 4, !dbg !7435
  %inc578 = add nsw i32 %393, 1, !dbg !7435
  store i32 %inc578, i32* %y341, align 4, !dbg !7435
  br label %if.end579, !dbg !7436

if.end579:                                        ; preds = %if.then577, %if.end573
  br label %for.inc580, !dbg !7437

for.inc580:                                       ; preds = %if.end579
  %394 = load i32, i32* %j343, align 4, !dbg !7438
  %inc581 = add nsw i32 %394, 1, !dbg !7438
  store i32 %inc581, i32* %j343, align 4, !dbg !7438
  br label %for.cond366, !dbg !7440, !llvm.loop !7441

for.end582:                                       ; preds = %for.cond366
  br label %for.inc583, !dbg !7443

for.inc583:                                       ; preds = %for.end582
  %395 = load i32, i32* %i, align 4, !dbg !7444
  %inc584 = add nsw i32 %395, 1, !dbg !7444
  store i32 %inc584, i32* %i, align 4, !dbg !7444
  br label %for.cond331, !dbg !7446, !llvm.loop !7447

for.end585:                                       ; preds = %for.cond331
  br label %if.end586

if.end586:                                        ; preds = %for.end585, %for.end329
  %396 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7449
  %restart_interval587 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %396, i32 0, i32 67, !dbg !7451
  %397 = load i32, i32* %restart_interval587, align 8, !dbg !7451
  %tobool588 = icmp ne i32 %397, 0, !dbg !7449
  br i1 %tobool588, label %land.lhs.true589, label %if.end596, !dbg !7452

land.lhs.true589:                                 ; preds = %if.end586
  %398 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7453
  %restart_count590 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %398, i32 0, i32 68, !dbg !7455
  %399 = load i32, i32* %restart_count590, align 4, !dbg !7456
  %dec = add nsw i32 %399, -1, !dbg !7456
  store i32 %dec, i32* %restart_count590, align 4, !dbg !7456
  %tobool591 = icmp ne i32 %dec, 0, !dbg !7456
  br i1 %tobool591, label %if.end596, label %if.then592, !dbg !7457

if.then592:                                       ; preds = %land.lhs.true589
  %400 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7458
  %gb593 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %400, i32 0, i32 2, !dbg !7460
  %call594 = call i8* @align_get_bits(%struct.GetBitContext* %gb593), !dbg !7461
  %401 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7462
  %gb595 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %401, i32 0, i32 2, !dbg !7463
  call void @skip_bits(%struct.GetBitContext* %gb595, i32 16), !dbg !7464
  br label %if.end596, !dbg !7465

if.end596:                                        ; preds = %if.then592, %land.lhs.true589, %if.end586
  br label %for.inc597, !dbg !7466

for.inc597:                                       ; preds = %if.end596
  %402 = load i32, i32* %mb_x, align 4, !dbg !7467
  %inc598 = add nsw i32 %402, 1, !dbg !7467
  store i32 %inc598, i32* %mb_x, align 4, !dbg !7467
  br label %for.cond9, !dbg !7469, !llvm.loop !7470

for.end599:                                       ; preds = %for.cond9
  br label %for.inc600, !dbg !7472

for.inc600:                                       ; preds = %for.end599
  %403 = load i32, i32* %mb_y, align 4, !dbg !7473
  %inc601 = add nsw i32 %403, 1, !dbg !7473
  store i32 %inc601, i32* %mb_y, align 4, !dbg !7473
  br label %for.cond, !dbg !7475, !llvm.loop !7476

for.end602:                                       ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !7478
  br label %return, !dbg !7478

return:                                           ; preds = %for.end602, %if.then377, %if.then65, %if.then13
  %404 = load i32, i32* %retval, align 4, !dbg !7479
  ret i32 %404, !dbg !7479
}

; Function Attrs: nounwind uwtable
define internal i32 @mjpeg_decode_scan_progressive_ac(%struct.MJpegDecodeContext* %s, i32 %ss, i32 %se, i32 %Ah, i32 %Al) #3 !dbg !7480 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.MJpegDecodeContext*, align 8
  %ss.addr = alloca i32, align 4
  %se.addr = alloca i32, align 4
  %Ah.addr = alloca i32, align 4
  %Al.addr = alloca i32, align 4
  %mb_x = alloca i32, align 4
  %mb_y = alloca i32, align 4
  %EOBRUN = alloca i32, align 4
  %c = alloca i32, align 4
  %quant_matrix = alloca i16*, align 8
  %block_idx = alloca i32, align 4
  %block = alloca [64 x i16]*, align 8
  %last_nnz = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.MJpegDecodeContext* %s, %struct.MJpegDecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MJpegDecodeContext** %s.addr, metadata !7483, metadata !2073), !dbg !7484
  store i32 %ss, i32* %ss.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ss.addr, metadata !7485, metadata !2073), !dbg !7486
  store i32 %se, i32* %se.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %se.addr, metadata !7487, metadata !2073), !dbg !7488
  store i32 %Ah, i32* %Ah.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %Ah.addr, metadata !7489, metadata !2073), !dbg !7490
  store i32 %Al, i32* %Al.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %Al.addr, metadata !7491, metadata !2073), !dbg !7492
  call void @llvm.dbg.declare(metadata i32* %mb_x, metadata !7493, metadata !2073), !dbg !7494
  call void @llvm.dbg.declare(metadata i32* %mb_y, metadata !7495, metadata !2073), !dbg !7496
  call void @llvm.dbg.declare(metadata i32* %EOBRUN, metadata !7497, metadata !2073), !dbg !7498
  store i32 0, i32* %EOBRUN, align 4, !dbg !7498
  call void @llvm.dbg.declare(metadata i32* %c, metadata !7499, metadata !2073), !dbg !7500
  %0 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7501
  %comp_index = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %0, i32 0, i32 41, !dbg !7502
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %comp_index, i64 0, i64 0, !dbg !7501
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7501
  store i32 %1, i32* %c, align 4, !dbg !7500
  call void @llvm.dbg.declare(metadata i16** %quant_matrix, metadata !7503, metadata !2073), !dbg !7504
  %2 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7505
  %quant_sindex = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %2, i32 0, i32 47, !dbg !7506
  %arrayidx1 = getelementptr inbounds [4 x i32], [4 x i32]* %quant_sindex, i64 0, i64 0, !dbg !7505
  %3 = load i32, i32* %arrayidx1, align 4, !dbg !7505
  %idxprom = sext i32 %3 to i64, !dbg !7507
  %4 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7507
  %quant_matrixes = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %4, i32 0, i32 7, !dbg !7508
  %arrayidx2 = getelementptr inbounds [4 x [64 x i16]], [4 x [64 x i16]]* %quant_matrixes, i64 0, i64 %idxprom, !dbg !7507
  %arraydecay = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx2, i32 0, i32 0, !dbg !7507
  store i16* %arraydecay, i16** %quant_matrix, align 8, !dbg !7504
  br label %do.body, !dbg !7509, !llvm.loop !7510

do.body:                                          ; preds = %entry
  %5 = load i32, i32* %ss.addr, align 4, !dbg !7511
  %cmp = icmp sge i32 %5, 0, !dbg !7515
  br i1 %cmp, label %land.lhs.true, label %if.then, !dbg !7516

land.lhs.true:                                    ; preds = %do.body
  %6 = load i32, i32* %Ah.addr, align 4, !dbg !7517
  %cmp3 = icmp sge i32 %6, 0, !dbg !7519
  br i1 %cmp3, label %land.lhs.true4, label %if.then, !dbg !7520

land.lhs.true4:                                   ; preds = %land.lhs.true
  %7 = load i32, i32* %Al.addr, align 4, !dbg !7521
  %cmp5 = icmp sge i32 %7, 0, !dbg !7523
  br i1 %cmp5, label %if.end, label %if.then, !dbg !7524

if.then:                                          ; preds = %land.lhs.true4, %land.lhs.true, %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.26, i32 0, i32 0), i32 1486), !dbg !7525
  call void @abort() #8, !dbg !7528
  unreachable, !dbg !7530

if.end:                                           ; preds = %land.lhs.true4
  br label %do.end, !dbg !7531

do.end:                                           ; preds = %if.end
  %8 = load i32, i32* %se.addr, align 4, !dbg !7533
  %9 = load i32, i32* %ss.addr, align 4, !dbg !7535
  %cmp6 = icmp slt i32 %8, %9, !dbg !7536
  br i1 %cmp6, label %if.then8, label %lor.lhs.false, !dbg !7537

lor.lhs.false:                                    ; preds = %do.end
  %10 = load i32, i32* %se.addr, align 4, !dbg !7538
  %cmp7 = icmp sgt i32 %10, 63, !dbg !7540
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !7541

if.then8:                                         ; preds = %lor.lhs.false, %do.end
  %11 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7542
  %avctx = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %11, i32 0, i32 1, !dbg !7544
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7544
  %13 = bitcast %struct.AVCodecContext* %12 to i8*, !dbg !7542
  %14 = load i32, i32* %ss.addr, align 4, !dbg !7545
  %15 = load i32, i32* %se.addr, align 4, !dbg !7546
  call void (i8*, i32, i8*, ...) @av_log(i8* %13, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.85, i32 0, i32 0), i32 %14, i32 %15), !dbg !7547
  store i32 -1094995529, i32* %retval, align 4, !dbg !7548
  br label %return, !dbg !7548

if.end9:                                          ; preds = %lor.lhs.false
  %16 = load i32, i32* %se.addr, align 4, !dbg !7549
  %sh_prom = zext i32 %16 to i64, !dbg !7550
  %shl = shl i64 2, %sh_prom, !dbg !7550
  %17 = load i32, i32* %ss.addr, align 4, !dbg !7551
  %sh_prom10 = zext i32 %17 to i64, !dbg !7552
  %shl11 = shl i64 1, %sh_prom10, !dbg !7552
  %sub = sub i64 %shl, %shl11, !dbg !7553
  %18 = load i32, i32* %c, align 4, !dbg !7554
  %idxprom12 = sext i32 %18 to i64, !dbg !7555
  %19 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7555
  %coefs_finished = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %19, i32 0, i32 61, !dbg !7556
  %arrayidx13 = getelementptr inbounds [4 x i64], [4 x i64]* %coefs_finished, i64 0, i64 %idxprom12, !dbg !7555
  %20 = load i64, i64* %arrayidx13, align 8, !dbg !7557
  %or = or i64 %20, %sub, !dbg !7557
  store i64 %or, i64* %arrayidx13, align 8, !dbg !7557
  %21 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7558
  %restart_count = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %21, i32 0, i32 68, !dbg !7559
  store i32 0, i32* %restart_count, align 4, !dbg !7560
  store i32 0, i32* %mb_y, align 4, !dbg !7561
  br label %for.cond, !dbg !7563

for.cond:                                         ; preds = %for.inc59, %if.end9
  %22 = load i32, i32* %mb_y, align 4, !dbg !7564
  %23 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7567
  %mb_height = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %23, i32 0, i32 35, !dbg !7568
  %24 = load i32, i32* %mb_height, align 4, !dbg !7568
  %cmp14 = icmp slt i32 %22, %24, !dbg !7569
  br i1 %cmp14, label %for.body, label %for.end61, !dbg !7570

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %block_idx, metadata !7571, metadata !2073), !dbg !7573
  %25 = load i32, i32* %mb_y, align 4, !dbg !7574
  %26 = load i32, i32* %c, align 4, !dbg !7575
  %idxprom15 = sext i32 %26 to i64, !dbg !7576
  %27 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7576
  %block_stride = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %27, i32 0, i32 37, !dbg !7577
  %arrayidx16 = getelementptr inbounds [4 x i32], [4 x i32]* %block_stride, i64 0, i64 %idxprom15, !dbg !7576
  %28 = load i32, i32* %arrayidx16, align 4, !dbg !7576
  %mul = mul nsw i32 %25, %28, !dbg !7578
  store i32 %mul, i32* %block_idx, align 4, !dbg !7573
  call void @llvm.dbg.declare(metadata [64 x i16]** %block, metadata !7579, metadata !2073), !dbg !7580
  %29 = load i32, i32* %block_idx, align 4, !dbg !7581
  %idxprom17 = sext i32 %29 to i64, !dbg !7582
  %30 = load i32, i32* %c, align 4, !dbg !7583
  %idxprom18 = sext i32 %30 to i64, !dbg !7582
  %31 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7582
  %blocks = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %31, i32 0, i32 59, !dbg !7584
  %arrayidx19 = getelementptr inbounds [4 x [64 x i16]*], [4 x [64 x i16]*]* %blocks, i64 0, i64 %idxprom18, !dbg !7582
  %32 = load [64 x i16]*, [64 x i16]** %arrayidx19, align 8, !dbg !7582
  %arrayidx20 = getelementptr inbounds [64 x i16], [64 x i16]* %32, i64 %idxprom17, !dbg !7582
  store [64 x i16]* %arrayidx20, [64 x i16]** %block, align 8, !dbg !7580
  call void @llvm.dbg.declare(metadata i8** %last_nnz, metadata !7585, metadata !2073), !dbg !7586
  %33 = load i32, i32* %block_idx, align 4, !dbg !7587
  %idxprom21 = sext i32 %33 to i64, !dbg !7588
  %34 = load i32, i32* %c, align 4, !dbg !7589
  %idxprom22 = sext i32 %34 to i64, !dbg !7588
  %35 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7588
  %last_nnz23 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %35, i32 0, i32 60, !dbg !7590
  %arrayidx24 = getelementptr inbounds [4 x i8*], [4 x i8*]* %last_nnz23, i64 0, i64 %idxprom22, !dbg !7588
  %36 = load i8*, i8** %arrayidx24, align 8, !dbg !7588
  %arrayidx25 = getelementptr inbounds i8, i8* %36, i64 %idxprom21, !dbg !7588
  store i8* %arrayidx25, i8** %last_nnz, align 8, !dbg !7586
  %37 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7591
  %gb = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %37, i32 0, i32 2, !dbg !7593
  %call = call i32 @get_bits_left(%struct.GetBitContext* %gb), !dbg !7594
  %cmp26 = icmp sle i32 %call, 0, !dbg !7595
  br i1 %cmp26, label %if.then27, label %if.end29, !dbg !7596

if.then27:                                        ; preds = %for.body
  %38 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7597
  %avctx28 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %38, i32 0, i32 1, !dbg !7599
  %39 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx28, align 8, !dbg !7599
  %40 = bitcast %struct.AVCodecContext* %39 to i8*, !dbg !7597
  call void (i8*, i32, i8*, ...) @av_log(i8* %40, i32 16, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.86, i32 0, i32 0)), !dbg !7600
  store i32 -1094995529, i32* %retval, align 4, !dbg !7601
  br label %return, !dbg !7601

if.end29:                                         ; preds = %for.body
  store i32 0, i32* %mb_x, align 4, !dbg !7602
  br label %for.cond30, !dbg !7604

for.cond30:                                       ; preds = %for.inc, %if.end29
  %41 = load i32, i32* %mb_x, align 4, !dbg !7605
  %42 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7608
  %mb_width = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %42, i32 0, i32 34, !dbg !7609
  %43 = load i32, i32* %mb_width, align 8, !dbg !7609
  %cmp31 = icmp slt i32 %41, %43, !dbg !7610
  br i1 %cmp31, label %for.body32, label %for.end, !dbg !7611

for.body32:                                       ; preds = %for.cond30
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7612, metadata !2073), !dbg !7614
  %44 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7615
  %restart_interval = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %44, i32 0, i32 67, !dbg !7617
  %45 = load i32, i32* %restart_interval, align 8, !dbg !7617
  %tobool = icmp ne i32 %45, 0, !dbg !7615
  br i1 %tobool, label %land.lhs.true33, label %if.end39, !dbg !7618

land.lhs.true33:                                  ; preds = %for.body32
  %46 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7619
  %restart_count34 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %46, i32 0, i32 68, !dbg !7621
  %47 = load i32, i32* %restart_count34, align 4, !dbg !7621
  %tobool35 = icmp ne i32 %47, 0, !dbg !7619
  br i1 %tobool35, label %if.end39, label %if.then36, !dbg !7622

if.then36:                                        ; preds = %land.lhs.true33
  %48 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7623
  %restart_interval37 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %48, i32 0, i32 67, !dbg !7624
  %49 = load i32, i32* %restart_interval37, align 8, !dbg !7624
  %50 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7625
  %restart_count38 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %50, i32 0, i32 68, !dbg !7626
  store i32 %49, i32* %restart_count38, align 4, !dbg !7627
  br label %if.end39, !dbg !7625

if.end39:                                         ; preds = %if.then36, %land.lhs.true33, %for.body32
  %51 = load i32, i32* %Ah.addr, align 4, !dbg !7628
  %tobool40 = icmp ne i32 %51, 0, !dbg !7628
  br i1 %tobool40, label %if.then41, label %if.else, !dbg !7630

if.then41:                                        ; preds = %if.end39
  %52 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7631
  %53 = load [64 x i16]*, [64 x i16]** %block, align 8, !dbg !7632
  %arraydecay42 = getelementptr inbounds [64 x i16], [64 x i16]* %53, i32 0, i32 0, !dbg !7633
  %54 = load i8*, i8** %last_nnz, align 8, !dbg !7634
  %55 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7635
  %ac_index = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %55, i32 0, i32 43, !dbg !7636
  %arrayidx43 = getelementptr inbounds [4 x i32], [4 x i32]* %ac_index, i64 0, i64 0, !dbg !7635
  %56 = load i32, i32* %arrayidx43, align 4, !dbg !7635
  %57 = load i16*, i16** %quant_matrix, align 8, !dbg !7637
  %58 = load i32, i32* %ss.addr, align 4, !dbg !7638
  %59 = load i32, i32* %se.addr, align 4, !dbg !7639
  %60 = load i32, i32* %Al.addr, align 4, !dbg !7640
  %call44 = call i32 @decode_block_refinement(%struct.MJpegDecodeContext* %52, i16* %arraydecay42, i8* %54, i32 %56, i16* %57, i32 %58, i32 %59, i32 %60, i32* %EOBRUN), !dbg !7641
  store i32 %call44, i32* %ret, align 4, !dbg !7642
  br label %if.end49, !dbg !7643

if.else:                                          ; preds = %if.end39
  %61 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7644
  %62 = load [64 x i16]*, [64 x i16]** %block, align 8, !dbg !7645
  %arraydecay45 = getelementptr inbounds [64 x i16], [64 x i16]* %62, i32 0, i32 0, !dbg !7646
  %63 = load i8*, i8** %last_nnz, align 8, !dbg !7647
  %64 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7648
  %ac_index46 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %64, i32 0, i32 43, !dbg !7649
  %arrayidx47 = getelementptr inbounds [4 x i32], [4 x i32]* %ac_index46, i64 0, i64 0, !dbg !7648
  %65 = load i32, i32* %arrayidx47, align 4, !dbg !7648
  %66 = load i16*, i16** %quant_matrix, align 8, !dbg !7650
  %67 = load i32, i32* %ss.addr, align 4, !dbg !7651
  %68 = load i32, i32* %se.addr, align 4, !dbg !7652
  %69 = load i32, i32* %Al.addr, align 4, !dbg !7653
  %call48 = call i32 @decode_block_progressive(%struct.MJpegDecodeContext* %61, i16* %arraydecay45, i8* %63, i32 %65, i16* %66, i32 %67, i32 %68, i32 %69, i32* %EOBRUN), !dbg !7654
  store i32 %call48, i32* %ret, align 4, !dbg !7655
  br label %if.end49

if.end49:                                         ; preds = %if.else, %if.then41
  %70 = load i32, i32* %ret, align 4, !dbg !7656
  %cmp50 = icmp slt i32 %70, 0, !dbg !7658
  br i1 %cmp50, label %if.then51, label %if.end53, !dbg !7659

if.then51:                                        ; preds = %if.end49
  %71 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7660
  %avctx52 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %71, i32 0, i32 1, !dbg !7662
  %72 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx52, align 8, !dbg !7662
  %73 = bitcast %struct.AVCodecContext* %72 to i8*, !dbg !7660
  %74 = load i32, i32* %mb_y, align 4, !dbg !7663
  %75 = load i32, i32* %mb_x, align 4, !dbg !7664
  call void (i8*, i32, i8*, ...) @av_log(i8* %73, i32 16, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.87, i32 0, i32 0), i32 %74, i32 %75), !dbg !7665
  store i32 -1094995529, i32* %retval, align 4, !dbg !7666
  br label %return, !dbg !7666

if.end53:                                         ; preds = %if.end49
  %76 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7667
  %call54 = call i32 @handle_rstn(%struct.MJpegDecodeContext* %76, i32 0), !dbg !7669
  %tobool55 = icmp ne i32 %call54, 0, !dbg !7669
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !7670

if.then56:                                        ; preds = %if.end53
  store i32 0, i32* %EOBRUN, align 4, !dbg !7671
  br label %if.end57, !dbg !7672

if.end57:                                         ; preds = %if.then56, %if.end53
  br label %for.inc, !dbg !7673

for.inc:                                          ; preds = %if.end57
  %77 = load i32, i32* %mb_x, align 4, !dbg !7674
  %inc = add nsw i32 %77, 1, !dbg !7674
  store i32 %inc, i32* %mb_x, align 4, !dbg !7674
  %78 = load [64 x i16]*, [64 x i16]** %block, align 8, !dbg !7676
  %incdec.ptr = getelementptr inbounds [64 x i16], [64 x i16]* %78, i32 1, !dbg !7676
  store [64 x i16]* %incdec.ptr, [64 x i16]** %block, align 8, !dbg !7676
  %79 = load i8*, i8** %last_nnz, align 8, !dbg !7677
  %incdec.ptr58 = getelementptr inbounds i8, i8* %79, i32 1, !dbg !7677
  store i8* %incdec.ptr58, i8** %last_nnz, align 8, !dbg !7677
  br label %for.cond30, !dbg !7678, !llvm.loop !7679

for.end:                                          ; preds = %for.cond30
  br label %for.inc59, !dbg !7681

for.inc59:                                        ; preds = %for.end
  %80 = load i32, i32* %mb_y, align 4, !dbg !7682
  %inc60 = add nsw i32 %80, 1, !dbg !7682
  store i32 %inc60, i32* %mb_y, align 4, !dbg !7682
  br label %for.cond, !dbg !7684, !llvm.loop !7685

for.end61:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !7687
  br label %return, !dbg !7687

return:                                           ; preds = %for.end61, %if.then51, %if.then27, %if.then8
  %81 = load i32, i32* %retval, align 4, !dbg !7688
  ret i32 %81, !dbg !7688
}

; Function Attrs: nounwind uwtable
define internal i32 @mjpeg_decode_scan(%struct.MJpegDecodeContext* %s, i32 %nb_components, i32 %Ah, i32 %Al, i8* %mb_bitmask, i32 %mb_bitmask_size, %struct.AVFrame* %reference) #3 !dbg !7689 {
entry:
  %s.addr.i = alloca %struct.MJpegDecodeContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.MJpegDecodeContext** %s.addr.i, metadata !7692, metadata !2073), !dbg !7696
  %dst.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr.i, metadata !7715, metadata !2073), !dbg !7716
  %src.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr.i, metadata !7717, metadata !2073), !dbg !7718
  %linesize.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %linesize.addr.i, metadata !7719, metadata !2073), !dbg !7720
  %lowres.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %lowres.addr.i, metadata !7721, metadata !2073), !dbg !7722
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.MJpegDecodeContext*, align 8
  %nb_components.addr = alloca i32, align 4
  %Ah.addr = alloca i32, align 4
  %Al.addr = alloca i32, align 4
  %mb_bitmask.addr = alloca i8*, align 8
  %mb_bitmask_size.addr = alloca i32, align 4
  %reference.addr = alloca %struct.AVFrame*, align 8
  %i = alloca i32, align 4
  %mb_x = alloca i32, align 4
  %mb_y = alloca i32, align 4
  %chroma_h_shift = alloca i32, align 4
  %chroma_v_shift = alloca i32, align 4
  %chroma_width = alloca i32, align 4
  %chroma_height = alloca i32, align 4
  %data = alloca [4 x i8*], align 16
  %reference_data = alloca [4 x i8*], align 16
  %linesize = alloca [4 x i32], align 16
  %mb_bitmask_gb = alloca %struct.GetBitContext, align 8
  %bytes_per_pixel = alloca i32, align 4
  %c = alloca i32, align 4
  %copy_mb = alloca i32, align 4
  %ptr = alloca i8*, align 8
  %n = alloca i32, align 4
  %h = alloca i32, align 4
  %v = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %c69 = alloca i32, align 4
  %j = alloca i32, align 4
  %block_offset = alloca i32, align 4
  %block_idx = alloca i32, align 4
  %block196 = alloca i16*, align 8
  store %struct.MJpegDecodeContext* %s, %struct.MJpegDecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MJpegDecodeContext** %s.addr, metadata !7723, metadata !2073), !dbg !7724
  store i32 %nb_components, i32* %nb_components.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_components.addr, metadata !7725, metadata !2073), !dbg !7726
  store i32 %Ah, i32* %Ah.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %Ah.addr, metadata !7727, metadata !2073), !dbg !7728
  store i32 %Al, i32* %Al.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %Al.addr, metadata !7729, metadata !2073), !dbg !7730
  store i8* %mb_bitmask, i8** %mb_bitmask.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mb_bitmask.addr, metadata !7731, metadata !2073), !dbg !7732
  store i32 %mb_bitmask_size, i32* %mb_bitmask_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mb_bitmask_size.addr, metadata !7733, metadata !2073), !dbg !7734
  store %struct.AVFrame* %reference, %struct.AVFrame** %reference.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %reference.addr, metadata !7735, metadata !2073), !dbg !7736
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7737, metadata !2073), !dbg !7738
  call void @llvm.dbg.declare(metadata i32* %mb_x, metadata !7739, metadata !2073), !dbg !7740
  call void @llvm.dbg.declare(metadata i32* %mb_y, metadata !7741, metadata !2073), !dbg !7742
  call void @llvm.dbg.declare(metadata i32* %chroma_h_shift, metadata !7743, metadata !2073), !dbg !7744
  call void @llvm.dbg.declare(metadata i32* %chroma_v_shift, metadata !7745, metadata !2073), !dbg !7746
  call void @llvm.dbg.declare(metadata i32* %chroma_width, metadata !7747, metadata !2073), !dbg !7748
  call void @llvm.dbg.declare(metadata i32* %chroma_height, metadata !7749, metadata !2073), !dbg !7750
  call void @llvm.dbg.declare(metadata [4 x i8*]* %data, metadata !7751, metadata !2073), !dbg !7752
  call void @llvm.dbg.declare(metadata [4 x i8*]* %reference_data, metadata !7753, metadata !2073), !dbg !7755
  call void @llvm.dbg.declare(metadata [4 x i32]* %linesize, metadata !7756, metadata !2073), !dbg !7757
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %mb_bitmask_gb, metadata !7758, metadata !2073), !dbg !7759
  %0 = bitcast %struct.GetBitContext* %mb_bitmask_gb to i8*, !dbg !7759
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 32, i32 8, i1 false), !dbg !7759
  call void @llvm.dbg.declare(metadata i32* %bytes_per_pixel, metadata !7760, metadata !2073), !dbg !7761
  %1 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7762
  %bits = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %1, i32 0, i32 22, !dbg !7763
  %2 = load i32, i32* %bits, align 8, !dbg !7763
  %cmp = icmp sgt i32 %2, 8, !dbg !7764
  %conv = zext i1 %cmp to i32, !dbg !7764
  %add = add nsw i32 1, %conv, !dbg !7765
  store i32 %add, i32* %bytes_per_pixel, align 4, !dbg !7761
  %3 = load i8*, i8** %mb_bitmask.addr, align 8, !dbg !7766
  %tobool = icmp ne i8* %3, null, !dbg !7766
  br i1 %tobool, label %if.then, label %if.end8, !dbg !7768

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %mb_bitmask_size.addr, align 4, !dbg !7769
  %5 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7772
  %mb_width = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %5, i32 0, i32 34, !dbg !7773
  %6 = load i32, i32* %mb_width, align 8, !dbg !7773
  %7 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7774
  %mb_height = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %7, i32 0, i32 35, !dbg !7775
  %8 = load i32, i32* %mb_height, align 4, !dbg !7775
  %mul = mul nsw i32 %6, %8, !dbg !7776
  %add1 = add nsw i32 %mul, 7, !dbg !7777
  %shr = ashr i32 %add1, 3, !dbg !7778
  %cmp2 = icmp ne i32 %4, %shr, !dbg !7779
  br i1 %cmp2, label %if.then4, label %if.end, !dbg !7780

if.then4:                                         ; preds = %if.then
  %9 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7781
  %avctx = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %9, i32 0, i32 1, !dbg !7783
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7783
  %11 = bitcast %struct.AVCodecContext* %10 to i8*, !dbg !7781
  call void (i8*, i32, i8*, ...) @av_log(i8* %11, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.90, i32 0, i32 0)), !dbg !7784
  store i32 -1094995529, i32* %retval, align 4, !dbg !7785
  br label %return, !dbg !7785

if.end:                                           ; preds = %if.then
  %12 = load i8*, i8** %mb_bitmask.addr, align 8, !dbg !7786
  %13 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7787
  %mb_width5 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %13, i32 0, i32 34, !dbg !7788
  %14 = load i32, i32* %mb_width5, align 8, !dbg !7788
  %15 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7789
  %mb_height6 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %15, i32 0, i32 35, !dbg !7790
  %16 = load i32, i32* %mb_height6, align 4, !dbg !7790
  %mul7 = mul nsw i32 %14, %16, !dbg !7791
  %call = call i32 @init_get_bits(%struct.GetBitContext* %mb_bitmask_gb, i8* %12, i32 %mul7), !dbg !7792
  br label %if.end8, !dbg !7793

if.end8:                                          ; preds = %if.end, %entry
  %17 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7794
  %restart_count = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %17, i32 0, i32 68, !dbg !7795
  store i32 0, i32* %restart_count, align 4, !dbg !7796
  %18 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7797
  %avctx9 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %18, i32 0, i32 1, !dbg !7798
  %19 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx9, align 8, !dbg !7798
  %pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %19, i32 0, i32 25, !dbg !7799
  %20 = load i32, i32* %pix_fmt, align 8, !dbg !7799
  %call10 = call i32 @av_pix_fmt_get_chroma_sub_sample(i32 %20, i32* %chroma_h_shift, i32* %chroma_v_shift), !dbg !7800
  %21 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7801
  %width = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %21, i32 0, i32 32, !dbg !7802
  %22 = load i32, i32* %width, align 16, !dbg !7802
  %sub = sub nsw i32 0, %22, !dbg !7803
  %23 = load i32, i32* %chroma_h_shift, align 4, !dbg !7804
  %shr11 = ashr i32 %sub, %23, !dbg !7805
  %sub12 = sub nsw i32 0, %shr11, !dbg !7806
  store i32 %sub12, i32* %chroma_width, align 4, !dbg !7807
  %24 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7808
  %height = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %24, i32 0, i32 33, !dbg !7809
  %25 = load i32, i32* %height, align 4, !dbg !7809
  %sub13 = sub nsw i32 0, %25, !dbg !7810
  %26 = load i32, i32* %chroma_v_shift, align 4, !dbg !7811
  %shr14 = ashr i32 %sub13, %26, !dbg !7812
  %sub15 = sub nsw i32 0, %shr14, !dbg !7813
  store i32 %sub15, i32* %chroma_height, align 4, !dbg !7814
  store i32 0, i32* %i, align 4, !dbg !7815
  br label %for.cond, !dbg !7817

for.cond:                                         ; preds = %for.inc, %if.end8
  %27 = load i32, i32* %i, align 4, !dbg !7818
  %28 = load i32, i32* %nb_components.addr, align 4, !dbg !7821
  %cmp16 = icmp slt i32 %27, %28, !dbg !7822
  br i1 %cmp16, label %for.body, label %for.end, !dbg !7823

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %c, metadata !7824, metadata !2073), !dbg !7826
  %29 = load i32, i32* %i, align 4, !dbg !7827
  %idxprom = sext i32 %29 to i64, !dbg !7828
  %30 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7828
  %comp_index = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %30, i32 0, i32 41, !dbg !7829
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %comp_index, i64 0, i64 %idxprom, !dbg !7828
  %31 = load i32, i32* %arrayidx, align 4, !dbg !7828
  store i32 %31, i32* %c, align 4, !dbg !7826
  %32 = load i32, i32* %c, align 4, !dbg !7830
  %idxprom18 = sext i32 %32 to i64, !dbg !7831
  %33 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7831
  %picture_ptr = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %33, i32 0, i32 53, !dbg !7832
  %34 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr, align 8, !dbg !7832
  %data19 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %34, i32 0, i32 0, !dbg !7833
  %arrayidx20 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data19, i64 0, i64 %idxprom18, !dbg !7831
  %35 = load i8*, i8** %arrayidx20, align 8, !dbg !7831
  %36 = load i32, i32* %c, align 4, !dbg !7834
  %idxprom21 = sext i32 %36 to i64, !dbg !7835
  %arrayidx22 = getelementptr inbounds [4 x i8*], [4 x i8*]* %data, i64 0, i64 %idxprom21, !dbg !7835
  store i8* %35, i8** %arrayidx22, align 8, !dbg !7836
  %37 = load %struct.AVFrame*, %struct.AVFrame** %reference.addr, align 8, !dbg !7837
  %tobool23 = icmp ne %struct.AVFrame* %37, null, !dbg !7837
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !7837

cond.true:                                        ; preds = %for.body
  %38 = load i32, i32* %c, align 4, !dbg !7838
  %idxprom24 = sext i32 %38 to i64, !dbg !7840
  %39 = load %struct.AVFrame*, %struct.AVFrame** %reference.addr, align 8, !dbg !7840
  %data25 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %39, i32 0, i32 0, !dbg !7841
  %arrayidx26 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data25, i64 0, i64 %idxprom24, !dbg !7840
  %40 = load i8*, i8** %arrayidx26, align 8, !dbg !7840
  br label %cond.end, !dbg !7842

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !7843

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %40, %cond.true ], [ null, %cond.false ], !dbg !7845
  %41 = load i32, i32* %c, align 4, !dbg !7847
  %idxprom27 = sext i32 %41 to i64, !dbg !7848
  %arrayidx28 = getelementptr inbounds [4 x i8*], [4 x i8*]* %reference_data, i64 0, i64 %idxprom27, !dbg !7848
  store i8* %cond, i8** %arrayidx28, align 8, !dbg !7849
  %42 = load i32, i32* %c, align 4, !dbg !7850
  %idxprom29 = sext i32 %42 to i64, !dbg !7851
  %43 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7851
  %linesize30 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %43, i32 0, i32 55, !dbg !7852
  %arrayidx31 = getelementptr inbounds [4 x i32], [4 x i32]* %linesize30, i64 0, i64 %idxprom29, !dbg !7851
  %44 = load i32, i32* %arrayidx31, align 4, !dbg !7851
  %45 = load i32, i32* %c, align 4, !dbg !7853
  %idxprom32 = sext i32 %45 to i64, !dbg !7854
  %arrayidx33 = getelementptr inbounds [4 x i32], [4 x i32]* %linesize, i64 0, i64 %idxprom32, !dbg !7854
  store i32 %44, i32* %arrayidx33, align 4, !dbg !7855
  %46 = load i32, i32* %c, align 4, !dbg !7856
  %idxprom34 = sext i32 %46 to i64, !dbg !7857
  %47 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7857
  %coefs_finished = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %47, i32 0, i32 61, !dbg !7858
  %arrayidx35 = getelementptr inbounds [4 x i64], [4 x i64]* %coefs_finished, i64 0, i64 %idxprom34, !dbg !7857
  %48 = load i64, i64* %arrayidx35, align 8, !dbg !7859
  %or = or i64 %48, 1, !dbg !7859
  store i64 %or, i64* %arrayidx35, align 8, !dbg !7859
  br label %for.inc, !dbg !7860

for.inc:                                          ; preds = %cond.end
  %49 = load i32, i32* %i, align 4, !dbg !7861
  %inc = add nsw i32 %49, 1, !dbg !7861
  store i32 %inc, i32* %i, align 4, !dbg !7861
  br label %for.cond, !dbg !7863, !llvm.loop !7864

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %mb_y, align 4, !dbg !7866
  br label %for.cond36, !dbg !7867

for.cond36:                                       ; preds = %for.inc256, %for.end
  %50 = load i32, i32* %mb_y, align 4, !dbg !7868
  %51 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7870
  %mb_height37 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %51, i32 0, i32 35, !dbg !7871
  %52 = load i32, i32* %mb_height37, align 4, !dbg !7871
  %cmp38 = icmp slt i32 %50, %52, !dbg !7872
  br i1 %cmp38, label %for.body40, label %for.end258, !dbg !7873

for.body40:                                       ; preds = %for.cond36
  store i32 0, i32* %mb_x, align 4, !dbg !7874
  br label %for.cond41, !dbg !7875

for.cond41:                                       ; preds = %for.inc253, %for.body40
  %53 = load i32, i32* %mb_x, align 4, !dbg !7876
  %54 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7878
  %mb_width42 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %54, i32 0, i32 34, !dbg !7879
  %55 = load i32, i32* %mb_width42, align 8, !dbg !7879
  %cmp43 = icmp slt i32 %53, %55, !dbg !7880
  br i1 %cmp43, label %for.body45, label %for.end255, !dbg !7881

for.body45:                                       ; preds = %for.cond41
  call void @llvm.dbg.declare(metadata i32* %copy_mb, metadata !7882, metadata !2073), !dbg !7883
  %56 = load i8*, i8** %mb_bitmask.addr, align 8, !dbg !7884
  %tobool46 = icmp ne i8* %56, null, !dbg !7884
  br i1 %tobool46, label %land.rhs, label %land.end, !dbg !7885

land.rhs:                                         ; preds = %for.body45
  %call47 = call i32 @get_bits1(%struct.GetBitContext* %mb_bitmask_gb), !dbg !7886
  %tobool48 = icmp ne i32 %call47, 0, !dbg !7888
  %lnot = xor i1 %tobool48, true, !dbg !7888
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body45
  %57 = phi i1 [ false, %for.body45 ], [ %lnot, %land.rhs ]
  %land.ext = zext i1 %57 to i32, !dbg !7889
  store i32 %land.ext, i32* %copy_mb, align 4, !dbg !7891
  %58 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7892
  %restart_interval = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %58, i32 0, i32 67, !dbg !7894
  %59 = load i32, i32* %restart_interval, align 8, !dbg !7894
  %tobool49 = icmp ne i32 %59, 0, !dbg !7892
  br i1 %tobool49, label %land.lhs.true, label %if.end55, !dbg !7895

land.lhs.true:                                    ; preds = %land.end
  %60 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7896
  %restart_count50 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %60, i32 0, i32 68, !dbg !7898
  %61 = load i32, i32* %restart_count50, align 4, !dbg !7898
  %tobool51 = icmp ne i32 %61, 0, !dbg !7896
  br i1 %tobool51, label %if.end55, label %if.then52, !dbg !7899

if.then52:                                        ; preds = %land.lhs.true
  %62 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7900
  %restart_interval53 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %62, i32 0, i32 67, !dbg !7901
  %63 = load i32, i32* %restart_interval53, align 8, !dbg !7901
  %64 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7902
  %restart_count54 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %64, i32 0, i32 68, !dbg !7903
  store i32 %63, i32* %restart_count54, align 4, !dbg !7904
  br label %if.end55, !dbg !7902

if.end55:                                         ; preds = %if.then52, %land.lhs.true, %land.end
  %65 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7905
  %gb = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %65, i32 0, i32 2, !dbg !7907
  %call56 = call i32 @get_bits_left(%struct.GetBitContext* %gb), !dbg !7908
  %cmp57 = icmp slt i32 %call56, 0, !dbg !7909
  br i1 %cmp57, label %if.then59, label %if.end64, !dbg !7910

if.then59:                                        ; preds = %if.end55
  %66 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7911
  %avctx60 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %66, i32 0, i32 1, !dbg !7913
  %67 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx60, align 8, !dbg !7913
  %68 = bitcast %struct.AVCodecContext* %67 to i8*, !dbg !7911
  %69 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7914
  %gb61 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %69, i32 0, i32 2, !dbg !7915
  %call62 = call i32 @get_bits_left(%struct.GetBitContext* %gb61), !dbg !7916
  %sub63 = sub nsw i32 0, %call62, !dbg !7917
  call void (i8*, i32, i8*, ...) @av_log(i8* %68, i32 16, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.91, i32 0, i32 0), i32 %sub63), !dbg !7918
  store i32 -1094995529, i32* %retval, align 4, !dbg !7919
  br label %return, !dbg !7919

if.end64:                                         ; preds = %if.end55
  store i32 0, i32* %i, align 4, !dbg !7920
  br label %for.cond65, !dbg !7921

for.cond65:                                       ; preds = %for.inc249, %if.end64
  %70 = load i32, i32* %i, align 4, !dbg !7922
  %71 = load i32, i32* %nb_components.addr, align 4, !dbg !7924
  %cmp66 = icmp slt i32 %70, %71, !dbg !7925
  br i1 %cmp66, label %for.body68, label %for.end251, !dbg !7926

for.body68:                                       ; preds = %for.cond65
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !7927, metadata !2073), !dbg !7928
  call void @llvm.dbg.declare(metadata i32* %n, metadata !7929, metadata !2073), !dbg !7930
  call void @llvm.dbg.declare(metadata i32* %h, metadata !7931, metadata !2073), !dbg !7932
  call void @llvm.dbg.declare(metadata i32* %v, metadata !7933, metadata !2073), !dbg !7934
  call void @llvm.dbg.declare(metadata i32* %x, metadata !7935, metadata !2073), !dbg !7936
  call void @llvm.dbg.declare(metadata i32* %y, metadata !7937, metadata !2073), !dbg !7938
  call void @llvm.dbg.declare(metadata i32* %c69, metadata !7939, metadata !2073), !dbg !7940
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7941, metadata !2073), !dbg !7942
  call void @llvm.dbg.declare(metadata i32* %block_offset, metadata !7943, metadata !2073), !dbg !7944
  %72 = load i32, i32* %i, align 4, !dbg !7945
  %idxprom70 = sext i32 %72 to i64, !dbg !7946
  %73 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7946
  %nb_blocks = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %73, i32 0, i32 44, !dbg !7947
  %arrayidx71 = getelementptr inbounds [4 x i32], [4 x i32]* %nb_blocks, i64 0, i64 %idxprom70, !dbg !7946
  %74 = load i32, i32* %arrayidx71, align 4, !dbg !7946
  store i32 %74, i32* %n, align 4, !dbg !7948
  %75 = load i32, i32* %i, align 4, !dbg !7949
  %idxprom72 = sext i32 %75 to i64, !dbg !7950
  %76 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7950
  %comp_index73 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %76, i32 0, i32 41, !dbg !7951
  %arrayidx74 = getelementptr inbounds [4 x i32], [4 x i32]* %comp_index73, i64 0, i64 %idxprom72, !dbg !7950
  %77 = load i32, i32* %arrayidx74, align 4, !dbg !7950
  store i32 %77, i32* %c69, align 4, !dbg !7952
  %78 = load i32, i32* %i, align 4, !dbg !7953
  %idxprom75 = sext i32 %78 to i64, !dbg !7954
  %79 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7954
  %h_scount = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %79, i32 0, i32 45, !dbg !7955
  %arrayidx76 = getelementptr inbounds [4 x i32], [4 x i32]* %h_scount, i64 0, i64 %idxprom75, !dbg !7954
  %80 = load i32, i32* %arrayidx76, align 4, !dbg !7954
  store i32 %80, i32* %h, align 4, !dbg !7956
  %81 = load i32, i32* %i, align 4, !dbg !7957
  %idxprom77 = sext i32 %81 to i64, !dbg !7958
  %82 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7958
  %v_scount = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %82, i32 0, i32 46, !dbg !7959
  %arrayidx78 = getelementptr inbounds [4 x i32], [4 x i32]* %v_scount, i64 0, i64 %idxprom77, !dbg !7958
  %83 = load i32, i32* %arrayidx78, align 4, !dbg !7958
  store i32 %83, i32* %v, align 4, !dbg !7960
  store i32 0, i32* %x, align 4, !dbg !7961
  store i32 0, i32* %y, align 4, !dbg !7962
  store i32 0, i32* %j, align 4, !dbg !7963
  br label %for.cond79, !dbg !7964

for.cond79:                                       ; preds = %for.inc246, %for.body68
  %84 = load i32, i32* %j, align 4, !dbg !7965
  %85 = load i32, i32* %n, align 4, !dbg !7967
  %cmp80 = icmp slt i32 %84, %85, !dbg !7968
  br i1 %cmp80, label %for.body82, label %for.end248, !dbg !7969

for.body82:                                       ; preds = %for.cond79
  %86 = load i32, i32* %c69, align 4, !dbg !7970
  %idxprom83 = sext i32 %86 to i64, !dbg !7971
  %arrayidx84 = getelementptr inbounds [4 x i32], [4 x i32]* %linesize, i64 0, i64 %idxprom83, !dbg !7971
  %87 = load i32, i32* %arrayidx84, align 4, !dbg !7971
  %88 = load i32, i32* %v, align 4, !dbg !7972
  %89 = load i32, i32* %mb_y, align 4, !dbg !7973
  %mul85 = mul nsw i32 %88, %89, !dbg !7974
  %90 = load i32, i32* %y, align 4, !dbg !7975
  %add86 = add nsw i32 %mul85, %90, !dbg !7976
  %mul87 = mul nsw i32 %87, %add86, !dbg !7977
  %mul88 = mul nsw i32 %mul87, 8, !dbg !7978
  %91 = load i32, i32* %h, align 4, !dbg !7979
  %92 = load i32, i32* %mb_x, align 4, !dbg !7980
  %mul89 = mul nsw i32 %91, %92, !dbg !7981
  %93 = load i32, i32* %x, align 4, !dbg !7982
  %add90 = add nsw i32 %mul89, %93, !dbg !7983
  %mul91 = mul nsw i32 %add90, 8, !dbg !7984
  %94 = load i32, i32* %bytes_per_pixel, align 4, !dbg !7985
  %mul92 = mul nsw i32 %mul91, %94, !dbg !7986
  %add93 = add nsw i32 %mul88, %mul92, !dbg !7987
  %95 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7988
  %avctx94 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %95, i32 0, i32 1, !dbg !7989
  %96 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx94, align 8, !dbg !7989
  %lowres = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %96, i32 0, i32 144, !dbg !7990
  %97 = load i32, i32* %lowres, align 8, !dbg !7990
  %shr95 = ashr i32 %add93, %97, !dbg !7991
  store i32 %shr95, i32* %block_offset, align 4, !dbg !7992
  %98 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7993
  %interlaced = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %98, i32 0, i32 12, !dbg !7995
  %99 = load i32, i32* %interlaced, align 32, !dbg !7995
  %tobool96 = icmp ne i32 %99, 0, !dbg !7993
  br i1 %tobool96, label %land.lhs.true97, label %if.end104, !dbg !7996

land.lhs.true97:                                  ; preds = %for.body82
  %100 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !7997
  %bottom_field = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %100, i32 0, i32 13, !dbg !7999
  %101 = load i32, i32* %bottom_field, align 4, !dbg !7999
  %tobool98 = icmp ne i32 %101, 0, !dbg !7997
  br i1 %tobool98, label %if.then99, label %if.end104, !dbg !8000

if.then99:                                        ; preds = %land.lhs.true97
  %102 = load i32, i32* %c69, align 4, !dbg !8001
  %idxprom100 = sext i32 %102 to i64, !dbg !8002
  %arrayidx101 = getelementptr inbounds [4 x i32], [4 x i32]* %linesize, i64 0, i64 %idxprom100, !dbg !8002
  %103 = load i32, i32* %arrayidx101, align 4, !dbg !8002
  %shr102 = ashr i32 %103, 1, !dbg !8003
  %104 = load i32, i32* %block_offset, align 4, !dbg !8004
  %add103 = add nsw i32 %104, %shr102, !dbg !8004
  store i32 %add103, i32* %block_offset, align 4, !dbg !8004
  br label %if.end104, !dbg !8005

if.end104:                                        ; preds = %if.then99, %land.lhs.true97, %for.body82
  %105 = load i32, i32* %h, align 4, !dbg !8006
  %106 = load i32, i32* %mb_x, align 4, !dbg !8008
  %mul105 = mul nsw i32 %105, %106, !dbg !8009
  %107 = load i32, i32* %x, align 4, !dbg !8010
  %add106 = add nsw i32 %mul105, %107, !dbg !8011
  %mul107 = mul nsw i32 8, %add106, !dbg !8012
  %108 = load i32, i32* %c69, align 4, !dbg !8013
  %cmp108 = icmp eq i32 %108, 1, !dbg !8014
  br i1 %cmp108, label %cond.true112, label %lor.lhs.false, !dbg !8015

lor.lhs.false:                                    ; preds = %if.end104
  %109 = load i32, i32* %c69, align 4, !dbg !8016
  %cmp110 = icmp eq i32 %109, 2, !dbg !8018
  br i1 %cmp110, label %cond.true112, label %cond.false113, !dbg !8019

cond.true112:                                     ; preds = %lor.lhs.false, %if.end104
  %110 = load i32, i32* %chroma_width, align 4, !dbg !8020
  br label %cond.end115, !dbg !8022

cond.false113:                                    ; preds = %lor.lhs.false
  %111 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8023
  %width114 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %111, i32 0, i32 32, !dbg !8025
  %112 = load i32, i32* %width114, align 16, !dbg !8025
  br label %cond.end115, !dbg !8026

cond.end115:                                      ; preds = %cond.false113, %cond.true112
  %cond116 = phi i32 [ %110, %cond.true112 ], [ %112, %cond.false113 ], !dbg !8027
  %cmp117 = icmp slt i32 %mul107, %cond116, !dbg !8029
  br i1 %cmp117, label %land.lhs.true119, label %if.else, !dbg !8030

land.lhs.true119:                                 ; preds = %cond.end115
  %113 = load i32, i32* %v, align 4, !dbg !8031
  %114 = load i32, i32* %mb_y, align 4, !dbg !8032
  %mul120 = mul nsw i32 %113, %114, !dbg !8033
  %115 = load i32, i32* %y, align 4, !dbg !8034
  %add121 = add nsw i32 %mul120, %115, !dbg !8035
  %mul122 = mul nsw i32 8, %add121, !dbg !8036
  %116 = load i32, i32* %c69, align 4, !dbg !8037
  %cmp123 = icmp eq i32 %116, 1, !dbg !8038
  br i1 %cmp123, label %cond.true128, label %lor.lhs.false125, !dbg !8039

lor.lhs.false125:                                 ; preds = %land.lhs.true119
  %117 = load i32, i32* %c69, align 4, !dbg !8040
  %cmp126 = icmp eq i32 %117, 2, !dbg !8041
  br i1 %cmp126, label %cond.true128, label %cond.false129, !dbg !8042

cond.true128:                                     ; preds = %lor.lhs.false125, %land.lhs.true119
  %118 = load i32, i32* %chroma_height, align 4, !dbg !8043
  br label %cond.end131, !dbg !8044

cond.false129:                                    ; preds = %lor.lhs.false125
  %119 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8045
  %height130 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %119, i32 0, i32 33, !dbg !8046
  %120 = load i32, i32* %height130, align 4, !dbg !8046
  br label %cond.end131, !dbg !8047

cond.end131:                                      ; preds = %cond.false129, %cond.true128
  %cond132 = phi i32 [ %118, %cond.true128 ], [ %120, %cond.false129 ], !dbg !8048
  %cmp133 = icmp slt i32 %mul122, %cond132, !dbg !8050
  br i1 %cmp133, label %if.then135, label %if.else, !dbg !8051

if.then135:                                       ; preds = %cond.end131
  %121 = load i32, i32* %c69, align 4, !dbg !8053
  %idxprom136 = sext i32 %121 to i64, !dbg !8055
  %arrayidx137 = getelementptr inbounds [4 x i8*], [4 x i8*]* %data, i64 0, i64 %idxprom136, !dbg !8055
  %122 = load i8*, i8** %arrayidx137, align 8, !dbg !8055
  %123 = load i32, i32* %block_offset, align 4, !dbg !8056
  %idx.ext = sext i32 %123 to i64, !dbg !8057
  %add.ptr = getelementptr inbounds i8, i8* %122, i64 %idx.ext, !dbg !8057
  store i8* %add.ptr, i8** %ptr, align 8, !dbg !8058
  br label %if.end138, !dbg !8059

if.else:                                          ; preds = %cond.end131, %cond.end115
  store i8* null, i8** %ptr, align 8, !dbg !8060
  br label %if.end138

if.end138:                                        ; preds = %if.else, %if.then135
  %124 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8061
  %progressive = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %124, i32 0, i32 16, !dbg !8062
  %125 = load i32, i32* %progressive, align 16, !dbg !8062
  %tobool139 = icmp ne i32 %125, 0, !dbg !8061
  br i1 %tobool139, label %if.else187, label %if.then140, !dbg !8063

if.then140:                                       ; preds = %if.end138
  %126 = load i32, i32* %copy_mb, align 4, !dbg !8064
  %tobool141 = icmp ne i32 %126, 0, !dbg !8064
  br i1 %tobool141, label %if.then142, label %if.else154, !dbg !8065

if.then142:                                       ; preds = %if.then140
  %127 = load i8*, i8** %ptr, align 8, !dbg !8066
  %tobool143 = icmp ne i8* %127, null, !dbg !8066
  br i1 %tobool143, label %if.then144, label %if.end153, !dbg !8067

if.then144:                                       ; preds = %if.then142
  %128 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8068
  %129 = load i8*, i8** %ptr, align 8, !dbg !8069
  %130 = load i32, i32* %c69, align 4, !dbg !8070
  %idxprom145 = sext i32 %130 to i64, !dbg !8071
  %arrayidx146 = getelementptr inbounds [4 x i8*], [4 x i8*]* %reference_data, i64 0, i64 %idxprom145, !dbg !8071
  %131 = load i8*, i8** %arrayidx146, align 8, !dbg !8071
  %132 = load i32, i32* %block_offset, align 4, !dbg !8072
  %idx.ext147 = sext i32 %132 to i64, !dbg !8073
  %add.ptr148 = getelementptr inbounds i8, i8* %131, i64 %idx.ext147, !dbg !8073
  %133 = load i32, i32* %c69, align 4, !dbg !8074
  %idxprom149 = sext i32 %133 to i64, !dbg !8075
  %arrayidx150 = getelementptr inbounds [4 x i32], [4 x i32]* %linesize, i64 0, i64 %idxprom149, !dbg !8075
  %134 = load i32, i32* %arrayidx150, align 4, !dbg !8075
  %135 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8076
  %avctx151 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %135, i32 0, i32 1, !dbg !8077
  %136 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx151, align 8, !dbg !8077
  %lowres152 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %136, i32 0, i32 144, !dbg !8078
  %137 = load i32, i32* %lowres152, align 8, !dbg !8078
  store %struct.MJpegDecodeContext* %128, %struct.MJpegDecodeContext** %s.addr.i, align 8, !dbg !8079
  store i8* %129, i8** %dst.addr.i, align 8, !dbg !8079
  store i8* %add.ptr148, i8** %src.addr.i, align 8, !dbg !8079
  store i32 %134, i32* %linesize.addr.i, align 4, !dbg !8079
  store i32 %137, i32* %lowres.addr.i, align 4, !dbg !8079
  %138 = load i32, i32* %lowres.addr.i, align 4, !dbg !8080
  switch i32 %138, label %mjpeg_copy_block.exit [
    i32 0, label %sw.bb.i
    i32 1, label %sw.bb2.i
    i32 2, label %sw.bb5.i
    i32 3, label %sw.bb8.i
  ], !dbg !8081

sw.bb.i:                                          ; preds = %if.then144
  %139 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr.i, align 8, !dbg !8082
  %hdsp.i = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %139, i32 0, i32 65, !dbg !8084
  %put_pixels_tab.i = getelementptr inbounds %struct.HpelDSPContext, %struct.HpelDSPContext* %hdsp.i, i32 0, i32 0, !dbg !8085
  %arrayidx.i = getelementptr inbounds [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x [4 x void (i8*, i8*, i64, i32)*]]* %put_pixels_tab.i, i64 0, i64 1, !dbg !8082
  %arrayidx1.i = getelementptr inbounds [4 x void (i8*, i8*, i64, i32)*], [4 x void (i8*, i8*, i64, i32)*]* %arrayidx.i, i64 0, i64 0, !dbg !8082
  %140 = load void (i8*, i8*, i64, i32)*, void (i8*, i8*, i64, i32)** %arrayidx1.i, align 16, !dbg !8082
  %141 = load i8*, i8** %dst.addr.i, align 8, !dbg !8086
  %142 = load i8*, i8** %src.addr.i, align 8, !dbg !8087
  %143 = load i32, i32* %linesize.addr.i, align 4, !dbg !8088
  %conv.i = sext i32 %143 to i64, !dbg !8088
  call void %140(i8* %141, i8* %142, i64 %conv.i, i32 8) #10, !dbg !8082
  br label %mjpeg_copy_block.exit, !dbg !8089

sw.bb2.i:                                         ; preds = %if.then144
  %144 = load i8*, i8** %dst.addr.i, align 8, !dbg !8090
  %145 = load i8*, i8** %src.addr.i, align 8, !dbg !8091
  %146 = load i32, i32* %linesize.addr.i, align 4, !dbg !8092
  %conv3.i = sext i32 %146 to i64, !dbg !8092
  %147 = load i32, i32* %linesize.addr.i, align 4, !dbg !8093
  %conv4.i = sext i32 %147 to i64, !dbg !8093
  call void @copy_block4(i8* %144, i8* %145, i64 %conv3.i, i64 %conv4.i, i32 4) #10, !dbg !8094
  br label %mjpeg_copy_block.exit, !dbg !8095

sw.bb5.i:                                         ; preds = %if.then144
  %148 = load i8*, i8** %dst.addr.i, align 8, !dbg !8096
  %149 = load i8*, i8** %src.addr.i, align 8, !dbg !8097
  %150 = load i32, i32* %linesize.addr.i, align 4, !dbg !8098
  %conv6.i = sext i32 %150 to i64, !dbg !8098
  %151 = load i32, i32* %linesize.addr.i, align 4, !dbg !8099
  %conv7.i = sext i32 %151 to i64, !dbg !8099
  call void @copy_block2(i8* %148, i8* %149, i64 %conv6.i, i64 %conv7.i, i32 2) #10, !dbg !8100
  br label %mjpeg_copy_block.exit, !dbg !8101

sw.bb8.i:                                         ; preds = %if.then144
  %152 = load i8*, i8** %src.addr.i, align 8, !dbg !8102
  %153 = load i8, i8* %152, align 1, !dbg !8103
  %154 = load i8*, i8** %dst.addr.i, align 8, !dbg !8104
  store i8 %153, i8* %154, align 1, !dbg !8105
  br label %mjpeg_copy_block.exit, !dbg !8106

mjpeg_copy_block.exit:                            ; preds = %if.then144, %sw.bb.i, %sw.bb2.i, %sw.bb5.i, %sw.bb8.i
  br label %if.end153, !dbg !8079

if.end153:                                        ; preds = %mjpeg_copy_block.exit, %if.then142
  br label %if.end186, !dbg !8107

if.else154:                                       ; preds = %if.then140
  %155 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8108
  %bdsp = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %155, i32 0, i32 64, !dbg !8110
  %clear_block = getelementptr inbounds %struct.BlockDSPContext, %struct.BlockDSPContext* %bdsp, i32 0, i32 0, !dbg !8111
  %156 = load void (i16*)*, void (i16*)** %clear_block, align 16, !dbg !8111
  %157 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8112
  %block = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %157, i32 0, i32 58, !dbg !8113
  %arraydecay = getelementptr inbounds [64 x i16], [64 x i16]* %block, i32 0, i32 0, !dbg !8112
  call void %156(i16* %arraydecay), !dbg !8108
  %158 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8114
  %159 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8116
  %block155 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %159, i32 0, i32 58, !dbg !8117
  %arraydecay156 = getelementptr inbounds [64 x i16], [64 x i16]* %block155, i32 0, i32 0, !dbg !8116
  %160 = load i32, i32* %i, align 4, !dbg !8118
  %161 = load i32, i32* %i, align 4, !dbg !8119
  %idxprom157 = sext i32 %161 to i64, !dbg !8120
  %162 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8120
  %dc_index = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %162, i32 0, i32 42, !dbg !8121
  %arrayidx158 = getelementptr inbounds [4 x i32], [4 x i32]* %dc_index, i64 0, i64 %idxprom157, !dbg !8120
  %163 = load i32, i32* %arrayidx158, align 4, !dbg !8120
  %164 = load i32, i32* %i, align 4, !dbg !8122
  %idxprom159 = sext i32 %164 to i64, !dbg !8123
  %165 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8123
  %ac_index = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %165, i32 0, i32 43, !dbg !8124
  %arrayidx160 = getelementptr inbounds [4 x i32], [4 x i32]* %ac_index, i64 0, i64 %idxprom159, !dbg !8123
  %166 = load i32, i32* %arrayidx160, align 4, !dbg !8123
  %167 = load i32, i32* %i, align 4, !dbg !8125
  %idxprom161 = sext i32 %167 to i64, !dbg !8126
  %168 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8126
  %quant_sindex = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %168, i32 0, i32 47, !dbg !8127
  %arrayidx162 = getelementptr inbounds [4 x i32], [4 x i32]* %quant_sindex, i64 0, i64 %idxprom161, !dbg !8126
  %169 = load i32, i32* %arrayidx162, align 4, !dbg !8126
  %idxprom163 = sext i32 %169 to i64, !dbg !8128
  %170 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8128
  %quant_matrixes = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %170, i32 0, i32 7, !dbg !8129
  %arrayidx164 = getelementptr inbounds [4 x [64 x i16]], [4 x [64 x i16]]* %quant_matrixes, i64 0, i64 %idxprom163, !dbg !8128
  %arraydecay165 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx164, i32 0, i32 0, !dbg !8128
  %call166 = call i32 @decode_block(%struct.MJpegDecodeContext* %158, i16* %arraydecay156, i32 %160, i32 %163, i32 %166, i16* %arraydecay165), !dbg !8130
  %cmp167 = icmp slt i32 %call166, 0, !dbg !8131
  br i1 %cmp167, label %if.then169, label %if.end171, !dbg !8132

if.then169:                                       ; preds = %if.else154
  %171 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8133
  %avctx170 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %171, i32 0, i32 1, !dbg !8135
  %172 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx170, align 8, !dbg !8135
  %173 = bitcast %struct.AVCodecContext* %172 to i8*, !dbg !8133
  %174 = load i32, i32* %mb_y, align 4, !dbg !8136
  %175 = load i32, i32* %mb_x, align 4, !dbg !8137
  call void (i8*, i32, i8*, ...) @av_log(i8* %173, i32 16, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.87, i32 0, i32 0), i32 %174, i32 %175), !dbg !8138
  store i32 -1094995529, i32* %retval, align 4, !dbg !8139
  br label %return, !dbg !8139

if.end171:                                        ; preds = %if.else154
  %176 = load i8*, i8** %ptr, align 8, !dbg !8140
  %tobool172 = icmp ne i8* %176, null, !dbg !8140
  br i1 %tobool172, label %if.then173, label %if.end185, !dbg !8142

if.then173:                                       ; preds = %if.end171
  %177 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8143
  %idsp = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %177, i32 0, i32 66, !dbg !8145
  %idct_put = getelementptr inbounds %struct.IDCTDSPContext, %struct.IDCTDSPContext* %idsp, i32 0, i32 4, !dbg !8146
  %178 = load void (i8*, i64, i16*)*, void (i8*, i64, i16*)** %idct_put, align 16, !dbg !8146
  %179 = load i8*, i8** %ptr, align 8, !dbg !8147
  %180 = load i32, i32* %c69, align 4, !dbg !8148
  %idxprom174 = sext i32 %180 to i64, !dbg !8149
  %arrayidx175 = getelementptr inbounds [4 x i32], [4 x i32]* %linesize, i64 0, i64 %idxprom174, !dbg !8149
  %181 = load i32, i32* %arrayidx175, align 4, !dbg !8149
  %conv176 = sext i32 %181 to i64, !dbg !8149
  %182 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8150
  %block177 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %182, i32 0, i32 58, !dbg !8151
  %arraydecay178 = getelementptr inbounds [64 x i16], [64 x i16]* %block177, i32 0, i32 0, !dbg !8150
  call void %178(i8* %179, i64 %conv176, i16* %arraydecay178), !dbg !8143
  %183 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8152
  %bits179 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %183, i32 0, i32 22, !dbg !8154
  %184 = load i32, i32* %bits179, align 8, !dbg !8154
  %and = and i32 %184, 7, !dbg !8155
  %tobool180 = icmp ne i32 %and, 0, !dbg !8155
  br i1 %tobool180, label %if.then181, label %if.end184, !dbg !8156

if.then181:                                       ; preds = %if.then173
  %185 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8157
  %186 = load i8*, i8** %ptr, align 8, !dbg !8158
  %187 = load i32, i32* %c69, align 4, !dbg !8159
  %idxprom182 = sext i32 %187 to i64, !dbg !8160
  %arrayidx183 = getelementptr inbounds [4 x i32], [4 x i32]* %linesize, i64 0, i64 %idxprom182, !dbg !8160
  %188 = load i32, i32* %arrayidx183, align 4, !dbg !8160
  call void @shift_output(%struct.MJpegDecodeContext* %185, i8* %186, i32 %188), !dbg !8161
  br label %if.end184, !dbg !8161

if.end184:                                        ; preds = %if.then181, %if.then173
  br label %if.end185, !dbg !8162

if.end185:                                        ; preds = %if.end184, %if.end171
  br label %if.end186

if.end186:                                        ; preds = %if.end185, %if.end153
  br label %if.end237, !dbg !8163

if.else187:                                       ; preds = %if.end138
  call void @llvm.dbg.declare(metadata i32* %block_idx, metadata !8164, metadata !2073), !dbg !8166
  %189 = load i32, i32* %c69, align 4, !dbg !8167
  %idxprom188 = sext i32 %189 to i64, !dbg !8168
  %190 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8168
  %block_stride = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %190, i32 0, i32 37, !dbg !8169
  %arrayidx189 = getelementptr inbounds [4 x i32], [4 x i32]* %block_stride, i64 0, i64 %idxprom188, !dbg !8168
  %191 = load i32, i32* %arrayidx189, align 4, !dbg !8168
  %192 = load i32, i32* %v, align 4, !dbg !8170
  %193 = load i32, i32* %mb_y, align 4, !dbg !8171
  %mul190 = mul nsw i32 %192, %193, !dbg !8172
  %194 = load i32, i32* %y, align 4, !dbg !8173
  %add191 = add nsw i32 %mul190, %194, !dbg !8174
  %mul192 = mul nsw i32 %191, %add191, !dbg !8175
  %195 = load i32, i32* %h, align 4, !dbg !8176
  %196 = load i32, i32* %mb_x, align 4, !dbg !8177
  %mul193 = mul nsw i32 %195, %196, !dbg !8178
  %197 = load i32, i32* %x, align 4, !dbg !8179
  %add194 = add nsw i32 %mul193, %197, !dbg !8180
  %add195 = add nsw i32 %mul192, %add194, !dbg !8181
  store i32 %add195, i32* %block_idx, align 4, !dbg !8166
  call void @llvm.dbg.declare(metadata i16** %block196, metadata !8182, metadata !2073), !dbg !8183
  %198 = load i32, i32* %block_idx, align 4, !dbg !8184
  %idxprom197 = sext i32 %198 to i64, !dbg !8185
  %199 = load i32, i32* %c69, align 4, !dbg !8186
  %idxprom198 = sext i32 %199 to i64, !dbg !8185
  %200 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8185
  %blocks = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %200, i32 0, i32 59, !dbg !8187
  %arrayidx199 = getelementptr inbounds [4 x [64 x i16]*], [4 x [64 x i16]*]* %blocks, i64 0, i64 %idxprom198, !dbg !8185
  %201 = load [64 x i16]*, [64 x i16]** %arrayidx199, align 8, !dbg !8185
  %arrayidx200 = getelementptr inbounds [64 x i16], [64 x i16]* %201, i64 %idxprom197, !dbg !8185
  %arraydecay201 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx200, i32 0, i32 0, !dbg !8185
  store i16* %arraydecay201, i16** %block196, align 8, !dbg !8183
  %202 = load i32, i32* %Ah.addr, align 4, !dbg !8188
  %tobool202 = icmp ne i32 %202, 0, !dbg !8188
  br i1 %tobool202, label %if.then203, label %if.else219, !dbg !8190

if.then203:                                       ; preds = %if.else187
  %203 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8191
  %gb204 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %203, i32 0, i32 2, !dbg !8192
  %call205 = call i32 @get_bits1(%struct.GetBitContext* %gb204), !dbg !8193
  %204 = load i32, i32* %i, align 4, !dbg !8194
  %idxprom206 = sext i32 %204 to i64, !dbg !8195
  %205 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8195
  %quant_sindex207 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %205, i32 0, i32 47, !dbg !8196
  %arrayidx208 = getelementptr inbounds [4 x i32], [4 x i32]* %quant_sindex207, i64 0, i64 %idxprom206, !dbg !8195
  %206 = load i32, i32* %arrayidx208, align 4, !dbg !8195
  %idxprom209 = sext i32 %206 to i64, !dbg !8197
  %207 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8197
  %quant_matrixes210 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %207, i32 0, i32 7, !dbg !8198
  %arrayidx211 = getelementptr inbounds [4 x [64 x i16]], [4 x [64 x i16]]* %quant_matrixes210, i64 0, i64 %idxprom209, !dbg !8197
  %arrayidx212 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx211, i64 0, i64 0, !dbg !8197
  %208 = load i16, i16* %arrayidx212, align 8, !dbg !8197
  %conv213 = zext i16 %208 to i32, !dbg !8197
  %mul214 = mul i32 %call205, %conv213, !dbg !8199
  %209 = load i32, i32* %Al.addr, align 4, !dbg !8200
  %shl = shl i32 %mul214, %209, !dbg !8201
  %210 = load i16*, i16** %block196, align 8, !dbg !8202
  %arrayidx215 = getelementptr inbounds i16, i16* %210, i64 0, !dbg !8202
  %211 = load i16, i16* %arrayidx215, align 2, !dbg !8203
  %conv216 = sext i16 %211 to i32, !dbg !8203
  %add217 = add i32 %conv216, %shl, !dbg !8203
  %conv218 = trunc i32 %add217 to i16, !dbg !8203
  store i16 %conv218, i16* %arrayidx215, align 2, !dbg !8203
  br label %if.end236, !dbg !8202

if.else219:                                       ; preds = %if.else187
  %212 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8204
  %213 = load i16*, i16** %block196, align 8, !dbg !8206
  %214 = load i32, i32* %i, align 4, !dbg !8207
  %215 = load i32, i32* %i, align 4, !dbg !8208
  %idxprom220 = sext i32 %215 to i64, !dbg !8209
  %216 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8209
  %dc_index221 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %216, i32 0, i32 42, !dbg !8210
  %arrayidx222 = getelementptr inbounds [4 x i32], [4 x i32]* %dc_index221, i64 0, i64 %idxprom220, !dbg !8209
  %217 = load i32, i32* %arrayidx222, align 4, !dbg !8209
  %218 = load i32, i32* %i, align 4, !dbg !8211
  %idxprom223 = sext i32 %218 to i64, !dbg !8212
  %219 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8212
  %quant_sindex224 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %219, i32 0, i32 47, !dbg !8213
  %arrayidx225 = getelementptr inbounds [4 x i32], [4 x i32]* %quant_sindex224, i64 0, i64 %idxprom223, !dbg !8212
  %220 = load i32, i32* %arrayidx225, align 4, !dbg !8212
  %idxprom226 = sext i32 %220 to i64, !dbg !8214
  %221 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8214
  %quant_matrixes227 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %221, i32 0, i32 7, !dbg !8215
  %arrayidx228 = getelementptr inbounds [4 x [64 x i16]], [4 x [64 x i16]]* %quant_matrixes227, i64 0, i64 %idxprom226, !dbg !8214
  %arraydecay229 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx228, i32 0, i32 0, !dbg !8214
  %222 = load i32, i32* %Al.addr, align 4, !dbg !8216
  %call230 = call i32 @decode_dc_progressive(%struct.MJpegDecodeContext* %212, i16* %213, i32 %214, i32 %217, i16* %arraydecay229, i32 %222), !dbg !8217
  %cmp231 = icmp slt i32 %call230, 0, !dbg !8218
  br i1 %cmp231, label %if.then233, label %if.end235, !dbg !8219

if.then233:                                       ; preds = %if.else219
  %223 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8220
  %avctx234 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %223, i32 0, i32 1, !dbg !8222
  %224 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx234, align 8, !dbg !8222
  %225 = bitcast %struct.AVCodecContext* %224 to i8*, !dbg !8220
  %226 = load i32, i32* %mb_y, align 4, !dbg !8223
  %227 = load i32, i32* %mb_x, align 4, !dbg !8224
  call void (i8*, i32, i8*, ...) @av_log(i8* %225, i32 16, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.87, i32 0, i32 0), i32 %226, i32 %227), !dbg !8225
  store i32 -1094995529, i32* %retval, align 4, !dbg !8226
  br label %return, !dbg !8226

if.end235:                                        ; preds = %if.else219
  br label %if.end236

if.end236:                                        ; preds = %if.end235, %if.then203
  br label %if.end237

if.end237:                                        ; preds = %if.end236, %if.end186
  br label %do.body, !dbg !8227, !llvm.loop !8228

do.body:                                          ; preds = %if.end237
  br label %do.end, !dbg !8229

do.end:                                           ; preds = %do.body
  br label %do.body238, !dbg !8232, !llvm.loop !8233

do.body238:                                       ; preds = %do.end
  br label %do.end239, !dbg !8234

do.end239:                                        ; preds = %do.body238
  %228 = load i32, i32* %x, align 4, !dbg !8237
  %inc240 = add nsw i32 %228, 1, !dbg !8237
  store i32 %inc240, i32* %x, align 4, !dbg !8237
  %229 = load i32, i32* %h, align 4, !dbg !8239
  %cmp241 = icmp eq i32 %inc240, %229, !dbg !8240
  br i1 %cmp241, label %if.then243, label %if.end245, !dbg !8241

if.then243:                                       ; preds = %do.end239
  store i32 0, i32* %x, align 4, !dbg !8242
  %230 = load i32, i32* %y, align 4, !dbg !8244
  %inc244 = add nsw i32 %230, 1, !dbg !8244
  store i32 %inc244, i32* %y, align 4, !dbg !8244
  br label %if.end245, !dbg !8245

if.end245:                                        ; preds = %if.then243, %do.end239
  br label %for.inc246, !dbg !8246

for.inc246:                                       ; preds = %if.end245
  %231 = load i32, i32* %j, align 4, !dbg !8247
  %inc247 = add nsw i32 %231, 1, !dbg !8247
  store i32 %inc247, i32* %j, align 4, !dbg !8247
  br label %for.cond79, !dbg !8249, !llvm.loop !8250

for.end248:                                       ; preds = %for.cond79
  br label %for.inc249, !dbg !8252

for.inc249:                                       ; preds = %for.end248
  %232 = load i32, i32* %i, align 4, !dbg !8253
  %inc250 = add nsw i32 %232, 1, !dbg !8253
  store i32 %inc250, i32* %i, align 4, !dbg !8253
  br label %for.cond65, !dbg !8255, !llvm.loop !8256

for.end251:                                       ; preds = %for.cond65
  %233 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8258
  %234 = load i32, i32* %nb_components.addr, align 4, !dbg !8259
  %call252 = call i32 @handle_rstn(%struct.MJpegDecodeContext* %233, i32 %234), !dbg !8260
  br label %for.inc253, !dbg !8261

for.inc253:                                       ; preds = %for.end251
  %235 = load i32, i32* %mb_x, align 4, !dbg !8262
  %inc254 = add nsw i32 %235, 1, !dbg !8262
  store i32 %inc254, i32* %mb_x, align 4, !dbg !8262
  br label %for.cond41, !dbg !8264, !llvm.loop !8265

for.end255:                                       ; preds = %for.cond41
  br label %for.inc256, !dbg !8267

for.inc256:                                       ; preds = %for.end255
  %236 = load i32, i32* %mb_y, align 4, !dbg !8268
  %inc257 = add nsw i32 %236, 1, !dbg !8268
  store i32 %inc257, i32* %mb_y, align 4, !dbg !8268
  br label %for.cond36, !dbg !8270, !llvm.loop !8271

for.end258:                                       ; preds = %for.cond36
  store i32 0, i32* %retval, align 4, !dbg !8273
  br label %return, !dbg !8273

return:                                           ; preds = %for.end258, %if.then233, %if.then169, %if.then59, %if.then4
  %237 = load i32, i32* %retval, align 4, !dbg !8274
  ret i32 %237, !dbg !8274
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @show_bits(%struct.GetBitContext* %s, i32 %n) #4 !dbg !8275 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2864, metadata !2073), !dbg !8276
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !8278, metadata !2073), !dbg !8279
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !8280, metadata !2073), !dbg !8281
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !8282, metadata !2073), !dbg !8283
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !8284, metadata !2073), !dbg !8285
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8286
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !8287
  %1 = load i32, i32* %index, align 8, !dbg !8287
  store i32 %1, i32* %re_index, align 4, !dbg !8285
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !8288, metadata !2073), !dbg !8289
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8290
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 0, !dbg !8291
  %3 = load i8*, i8** %buffer, align 8, !dbg !8291
  %4 = load i32, i32* %re_index, align 4, !dbg !8292
  %shr = lshr i32 %4, 3, !dbg !8293
  %idx.ext = zext i32 %shr to i64, !dbg !8294
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %idx.ext, !dbg !8294
  %5 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !8295
  %l = bitcast %union.unaligned_32* %5 to i32*, !dbg !8295
  %6 = load i32, i32* %l, align 1, !dbg !8295
  store i32 %6, i32* %x.addr.i, align 4, !dbg !8296
  %7 = load i32, i32* %x.addr.i, align 4, !dbg !8297
  %shl.i = shl i32 %7, 8, !dbg !8298
  %and.i = and i32 %shl.i, 65280, !dbg !8299
  %8 = load i32, i32* %x.addr.i, align 4, !dbg !8300
  %shr.i = lshr i32 %8, 8, !dbg !8301
  %and1.i = and i32 %shr.i, 255, !dbg !8302
  %or.i = or i32 %and.i, %and1.i, !dbg !8303
  %shl2.i = shl i32 %or.i, 16, !dbg !8304
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !8305
  %shr3.i = lshr i32 %9, 16, !dbg !8306
  %shl4.i = shl i32 %shr3.i, 8, !dbg !8307
  %and5.i = and i32 %shl4.i, 65280, !dbg !8308
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !8309
  %shr6.i = lshr i32 %10, 16, !dbg !8310
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !8311
  %and8.i = and i32 %shr7.i, 255, !dbg !8312
  %or9.i = or i32 %and5.i, %and8.i, !dbg !8313
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !8314
  %11 = load i32, i32* %re_index, align 4, !dbg !8315
  %and = and i32 %11, 7, !dbg !8316
  %shl = shl i32 %or10.i, %and, !dbg !8317
  store i32 %shl, i32* %re_cache, align 4, !dbg !8318
  %12 = load i32, i32* %re_cache, align 4, !dbg !8319
  %13 = load i32, i32* %n.addr, align 4, !dbg !8320
  %conv = trunc i32 %13 to i8, !dbg !8320
  %call3 = call i32 @NEG_USR32(i32 %12, i8 signext %conv), !dbg !8321
  store i32 %call3, i32* %tmp, align 4, !dbg !8322
  %14 = load i32, i32* %tmp, align 4, !dbg !8323
  ret i32 %14, !dbg !8324
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @align_get_bits(%struct.GetBitContext* %s) #4 !dbg !8325 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !8328, metadata !2073), !dbg !8329
  call void @llvm.dbg.declare(metadata i32* %n, metadata !8330, metadata !2073), !dbg !8331
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8332
  %call = call i32 @get_bits_count(%struct.GetBitContext* %0), !dbg !8333
  %sub = sub nsw i32 0, %call, !dbg !8334
  %and = and i32 %sub, 7, !dbg !8335
  store i32 %and, i32* %n, align 4, !dbg !8331
  %1 = load i32, i32* %n, align 4, !dbg !8336
  %tobool = icmp ne i32 %1, 0, !dbg !8336
  br i1 %tobool, label %if.then, label %if.end, !dbg !8338

if.then:                                          ; preds = %entry
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8339
  %3 = load i32, i32* %n, align 4, !dbg !8340
  call void @skip_bits(%struct.GetBitContext* %2, i32 %3), !dbg !8341
  br label %if.end, !dbg !8341

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8342
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !8343
  %5 = load i8*, i8** %buffer, align 8, !dbg !8343
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8344
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %6, i32 0, i32 2, !dbg !8345
  %7 = load i32, i32* %index, align 8, !dbg !8345
  %shr = ashr i32 %7, 3, !dbg !8346
  %idx.ext = sext i32 %shr to i64, !dbg !8347
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !8347
  ret i8* %add.ptr, !dbg !8348
}

; Function Attrs: nounwind uwtable
define i32 @ff_mjpeg_find_marker(%struct.MJpegDecodeContext* %s, i8** %buf_ptr, i8* %buf_end, i8** %unescaped_buf_ptr, i32* %unescaped_buf_size) #3 !dbg !8349 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.MJpegDecodeContext*, align 8
  %buf_ptr.addr = alloca i8**, align 8
  %buf_end.addr = alloca i8*, align 8
  %unescaped_buf_ptr.addr = alloca i8**, align 8
  %unescaped_buf_size.addr = alloca i32*, align 8
  %start_code = alloca i32, align 4
  %src = alloca i8*, align 8
  %ptr = alloca i8*, align 8
  %dst = alloca i8*, align 8
  %length = alloca i64, align 8
  %x = alloca i8, align 1
  %skip = alloca i64, align 8
  %length29 = alloca i64, align 8
  %length50 = alloca i64, align 8
  %length71 = alloca i64, align 8
  %src108 = alloca i8*, align 8
  %dst109 = alloca i8*, align 8
  %bit_count = alloca i32, align 4
  %t = alloca i32, align 4
  %b = alloca i32, align 4
  %pb = alloca %struct.PutBitContext, align 8
  %x117 = alloca i8, align 1
  %x151 = alloca i8, align 1
  store %struct.MJpegDecodeContext* %s, %struct.MJpegDecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MJpegDecodeContext** %s.addr, metadata !8353, metadata !2073), !dbg !8354
  store i8** %buf_ptr, i8*** %buf_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %buf_ptr.addr, metadata !8355, metadata !2073), !dbg !8356
  store i8* %buf_end, i8** %buf_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf_end.addr, metadata !8357, metadata !2073), !dbg !8358
  store i8** %unescaped_buf_ptr, i8*** %unescaped_buf_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %unescaped_buf_ptr.addr, metadata !8359, metadata !2073), !dbg !8360
  store i32* %unescaped_buf_size, i32** %unescaped_buf_size.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %unescaped_buf_size.addr, metadata !8361, metadata !2073), !dbg !8362
  call void @llvm.dbg.declare(metadata i32* %start_code, metadata !8363, metadata !2073), !dbg !8364
  %0 = load i8**, i8*** %buf_ptr.addr, align 8, !dbg !8365
  %1 = load i8*, i8** %buf_end.addr, align 8, !dbg !8366
  %call = call i32 @find_marker(i8** %0, i8* %1), !dbg !8367
  store i32 %call, i32* %start_code, align 4, !dbg !8368
  %2 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8369
  %buffer = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %2, i32 0, i32 6, !dbg !8370
  %3 = bitcast i8** %buffer to i8*, !dbg !8371
  %4 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8372
  %buffer_size = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %4, i32 0, i32 5, !dbg !8373
  %5 = load i8*, i8** %buf_end.addr, align 8, !dbg !8374
  %6 = load i8**, i8*** %buf_ptr.addr, align 8, !dbg !8375
  %7 = load i8*, i8** %6, align 8, !dbg !8376
  %sub.ptr.lhs.cast = ptrtoint i8* %5 to i64, !dbg !8377
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !8377
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8377
  call void @av_fast_padded_malloc(i8* %3, i32* %buffer_size, i64 %sub.ptr.sub), !dbg !8378
  %8 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8379
  %buffer1 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %8, i32 0, i32 6, !dbg !8381
  %9 = load i8*, i8** %buffer1, align 32, !dbg !8381
  %tobool = icmp ne i8* %9, null, !dbg !8379
  br i1 %tobool, label %if.end, label %if.then, !dbg !8382

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !8383
  br label %return, !dbg !8383

if.end:                                           ; preds = %entry
  %10 = load i32, i32* %start_code, align 4, !dbg !8384
  %cmp = icmp eq i32 %10, 218, !dbg !8386
  br i1 %cmp, label %land.lhs.true, label %if.else101, !dbg !8387

land.lhs.true:                                    ; preds = %if.end
  %11 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8388
  %ls = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %11, i32 0, i32 15, !dbg !8390
  %12 = load i32, i32* %ls, align 4, !dbg !8390
  %tobool2 = icmp ne i32 %12, 0, !dbg !8388
  br i1 %tobool2, label %if.else101, label %if.then3, !dbg !8391

if.then3:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %src, metadata !8392, metadata !2073), !dbg !8394
  %13 = load i8**, i8*** %buf_ptr.addr, align 8, !dbg !8395
  %14 = load i8*, i8** %13, align 8, !dbg !8396
  store i8* %14, i8** %src, align 8, !dbg !8394
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !8397, metadata !2073), !dbg !8398
  %15 = load i8*, i8** %src, align 8, !dbg !8399
  store i8* %15, i8** %ptr, align 8, !dbg !8398
  call void @llvm.dbg.declare(metadata i8** %dst, metadata !8400, metadata !2073), !dbg !8401
  %16 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8402
  %buffer4 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %16, i32 0, i32 6, !dbg !8403
  %17 = load i8*, i8** %buffer4, align 32, !dbg !8403
  store i8* %17, i8** %dst, align 8, !dbg !8401
  %18 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8404
  %avctx = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %18, i32 0, i32 1, !dbg !8406
  %19 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !8406
  %codec_id = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %19, i32 0, i32 4, !dbg !8407
  %20 = load i32, i32* %codec_id, align 8, !dbg !8407
  %cmp5 = icmp eq i32 %20, 100, !dbg !8408
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !8409

if.then6:                                         ; preds = %if.then3
  %21 = load i8*, i8** %buf_end.addr, align 8, !dbg !8410
  store i8* %21, i8** %ptr, align 8, !dbg !8412
  br label %do.body, !dbg !8413, !llvm.loop !8414

do.body:                                          ; preds = %if.then6
  call void @llvm.dbg.declare(metadata i64* %length, metadata !8415, metadata !2073), !dbg !8417
  %22 = load i8*, i8** %ptr, align 8, !dbg !8418
  %23 = load i8*, i8** %src, align 8, !dbg !8420
  %sub.ptr.lhs.cast7 = ptrtoint i8* %22 to i64, !dbg !8421
  %sub.ptr.rhs.cast8 = ptrtoint i8* %23 to i64, !dbg !8421
  %sub.ptr.sub9 = sub i64 %sub.ptr.lhs.cast7, %sub.ptr.rhs.cast8, !dbg !8421
  %sub = sub nsw i64 %sub.ptr.sub9, 0, !dbg !8422
  store i64 %sub, i64* %length, align 8, !dbg !8423
  %24 = load i64, i64* %length, align 8, !dbg !8424
  %cmp10 = icmp sgt i64 %24, 0, !dbg !8425
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !8424

if.then11:                                        ; preds = %do.body
  %25 = load i8*, i8** %dst, align 8, !dbg !8426
  %26 = load i8*, i8** %src, align 8, !dbg !8430
  %27 = load i64, i64* %length, align 8, !dbg !8431
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 %27, i32 1, i1 false), !dbg !8432
  %28 = load i64, i64* %length, align 8, !dbg !8433
  %29 = load i8*, i8** %dst, align 8, !dbg !8434
  %add.ptr = getelementptr inbounds i8, i8* %29, i64 %28, !dbg !8434
  store i8* %add.ptr, i8** %dst, align 8, !dbg !8434
  %30 = load i8*, i8** %ptr, align 8, !dbg !8435
  store i8* %30, i8** %src, align 8, !dbg !8436
  br label %if.end12, !dbg !8437

if.end12:                                         ; preds = %if.then11, %do.body
  br label %do.end, !dbg !8438

do.end:                                           ; preds = %if.end12
  br label %if.end83, !dbg !8440

if.else:                                          ; preds = %if.then3
  br label %while.cond, !dbg !8441

while.cond:                                       ; preds = %if.end65, %if.else
  %31 = load i8*, i8** %ptr, align 8, !dbg !8443
  %32 = load i8*, i8** %buf_end.addr, align 8, !dbg !8445
  %cmp13 = icmp ult i8* %31, %32, !dbg !8446
  br i1 %cmp13, label %while.body, label %while.end66, !dbg !8447

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8* %x, metadata !8448, metadata !2073), !dbg !8450
  %33 = load i8*, i8** %ptr, align 8, !dbg !8451
  %incdec.ptr = getelementptr inbounds i8, i8* %33, i32 1, !dbg !8451
  store i8* %incdec.ptr, i8** %ptr, align 8, !dbg !8451
  %34 = load i8, i8* %33, align 1, !dbg !8452
  store i8 %34, i8* %x, align 1, !dbg !8450
  %35 = load i8, i8* %x, align 1, !dbg !8453
  %conv = zext i8 %35 to i32, !dbg !8453
  %cmp14 = icmp eq i32 %conv, 255, !dbg !8455
  br i1 %cmp14, label %if.then16, label %if.end65, !dbg !8456

if.then16:                                        ; preds = %while.body
  call void @llvm.dbg.declare(metadata i64* %skip, metadata !8457, metadata !2073), !dbg !8459
  store i64 0, i64* %skip, align 8, !dbg !8459
  br label %while.cond17, !dbg !8460

while.cond17:                                     ; preds = %while.body23, %if.then16
  %36 = load i8*, i8** %ptr, align 8, !dbg !8461
  %37 = load i8*, i8** %buf_end.addr, align 8, !dbg !8463
  %cmp18 = icmp ult i8* %36, %37, !dbg !8464
  br i1 %cmp18, label %land.rhs, label %land.end, !dbg !8465

land.rhs:                                         ; preds = %while.cond17
  %38 = load i8, i8* %x, align 1, !dbg !8466
  %conv20 = zext i8 %38 to i32, !dbg !8466
  %cmp21 = icmp eq i32 %conv20, 255, !dbg !8468
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond17
  %39 = phi i1 [ false, %while.cond17 ], [ %cmp21, %land.rhs ]
  br i1 %39, label %while.body23, label %while.end, !dbg !8469

while.body23:                                     ; preds = %land.end
  %40 = load i8*, i8** %ptr, align 8, !dbg !8471
  %incdec.ptr24 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !8471
  store i8* %incdec.ptr24, i8** %ptr, align 8, !dbg !8471
  %41 = load i8, i8* %40, align 1, !dbg !8473
  store i8 %41, i8* %x, align 1, !dbg !8474
  %42 = load i64, i64* %skip, align 8, !dbg !8475
  %inc = add nsw i64 %42, 1, !dbg !8475
  store i64 %inc, i64* %skip, align 8, !dbg !8475
  br label %while.cond17, !dbg !8476, !llvm.loop !8478

while.end:                                        ; preds = %land.end
  %43 = load i64, i64* %skip, align 8, !dbg !8479
  %cmp25 = icmp sgt i64 %43, 1, !dbg !8481
  br i1 %cmp25, label %if.then27, label %if.end41, !dbg !8482

if.then27:                                        ; preds = %while.end
  br label %do.body28, !dbg !8483, !llvm.loop !8485

do.body28:                                        ; preds = %if.then27
  call void @llvm.dbg.declare(metadata i64* %length29, metadata !8486, metadata !2073), !dbg !8488
  %44 = load i8*, i8** %ptr, align 8, !dbg !8489
  %45 = load i8*, i8** %src, align 8, !dbg !8491
  %sub.ptr.lhs.cast30 = ptrtoint i8* %44 to i64, !dbg !8492
  %sub.ptr.rhs.cast31 = ptrtoint i8* %45 to i64, !dbg !8492
  %sub.ptr.sub32 = sub i64 %sub.ptr.lhs.cast30, %sub.ptr.rhs.cast31, !dbg !8492
  %46 = load i64, i64* %skip, align 8, !dbg !8493
  %sub33 = sub nsw i64 %sub.ptr.sub32, %46, !dbg !8494
  store i64 %sub33, i64* %length29, align 8, !dbg !8495
  %47 = load i64, i64* %length29, align 8, !dbg !8496
  %cmp34 = icmp sgt i64 %47, 0, !dbg !8497
  br i1 %cmp34, label %if.then36, label %if.end38, !dbg !8496

if.then36:                                        ; preds = %do.body28
  %48 = load i8*, i8** %dst, align 8, !dbg !8498
  %49 = load i8*, i8** %src, align 8, !dbg !8502
  %50 = load i64, i64* %length29, align 8, !dbg !8503
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 %50, i32 1, i1 false), !dbg !8504
  %51 = load i64, i64* %length29, align 8, !dbg !8505
  %52 = load i8*, i8** %dst, align 8, !dbg !8506
  %add.ptr37 = getelementptr inbounds i8, i8* %52, i64 %51, !dbg !8506
  store i8* %add.ptr37, i8** %dst, align 8, !dbg !8506
  %53 = load i8*, i8** %ptr, align 8, !dbg !8507
  store i8* %53, i8** %src, align 8, !dbg !8508
  br label %if.end38, !dbg !8509

if.end38:                                         ; preds = %if.then36, %do.body28
  br label %do.end39, !dbg !8510

do.end39:                                         ; preds = %if.end38
  %54 = load i8*, i8** %src, align 8, !dbg !8512
  %incdec.ptr40 = getelementptr inbounds i8, i8* %54, i32 -1, !dbg !8512
  store i8* %incdec.ptr40, i8** %src, align 8, !dbg !8512
  br label %if.end41, !dbg !8513

if.end41:                                         ; preds = %do.end39, %while.end
  %55 = load i8, i8* %x, align 1, !dbg !8514
  %conv42 = zext i8 %55 to i32, !dbg !8514
  %cmp43 = icmp slt i32 %conv42, 208, !dbg !8516
  br i1 %cmp43, label %if.then48, label %lor.lhs.false, !dbg !8517

lor.lhs.false:                                    ; preds = %if.end41
  %56 = load i8, i8* %x, align 1, !dbg !8518
  %conv45 = zext i8 %56 to i32, !dbg !8518
  %cmp46 = icmp sgt i32 %conv45, 215, !dbg !8520
  br i1 %cmp46, label %if.then48, label %if.end64, !dbg !8521

if.then48:                                        ; preds = %lor.lhs.false, %if.end41
  br label %do.body49, !dbg !8522, !llvm.loop !8524

do.body49:                                        ; preds = %if.then48
  call void @llvm.dbg.declare(metadata i64* %length50, metadata !8525, metadata !2073), !dbg !8527
  %57 = load i8*, i8** %ptr, align 8, !dbg !8528
  %58 = load i8*, i8** %src, align 8, !dbg !8530
  %sub.ptr.lhs.cast51 = ptrtoint i8* %57 to i64, !dbg !8531
  %sub.ptr.rhs.cast52 = ptrtoint i8* %58 to i64, !dbg !8531
  %sub.ptr.sub53 = sub i64 %sub.ptr.lhs.cast51, %sub.ptr.rhs.cast52, !dbg !8531
  %sub54 = sub nsw i64 %sub.ptr.sub53, 1, !dbg !8532
  store i64 %sub54, i64* %length50, align 8, !dbg !8533
  %59 = load i64, i64* %length50, align 8, !dbg !8534
  %cmp55 = icmp sgt i64 %59, 0, !dbg !8535
  br i1 %cmp55, label %if.then57, label %if.end59, !dbg !8534

if.then57:                                        ; preds = %do.body49
  %60 = load i8*, i8** %dst, align 8, !dbg !8536
  %61 = load i8*, i8** %src, align 8, !dbg !8540
  %62 = load i64, i64* %length50, align 8, !dbg !8541
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %60, i8* %61, i64 %62, i32 1, i1 false), !dbg !8542
  %63 = load i64, i64* %length50, align 8, !dbg !8543
  %64 = load i8*, i8** %dst, align 8, !dbg !8544
  %add.ptr58 = getelementptr inbounds i8, i8* %64, i64 %63, !dbg !8544
  store i8* %add.ptr58, i8** %dst, align 8, !dbg !8544
  %65 = load i8*, i8** %ptr, align 8, !dbg !8545
  store i8* %65, i8** %src, align 8, !dbg !8546
  br label %if.end59, !dbg !8547

if.end59:                                         ; preds = %if.then57, %do.body49
  br label %do.end60, !dbg !8548

do.end60:                                         ; preds = %if.end59
  %66 = load i8, i8* %x, align 1, !dbg !8550
  %tobool61 = icmp ne i8 %66, 0, !dbg !8550
  br i1 %tobool61, label %if.then62, label %if.end63, !dbg !8552

if.then62:                                        ; preds = %do.end60
  br label %while.end66, !dbg !8553

if.end63:                                         ; preds = %do.end60
  br label %if.end64, !dbg !8554

if.end64:                                         ; preds = %if.end63, %lor.lhs.false
  br label %if.end65, !dbg !8555

if.end65:                                         ; preds = %if.end64, %while.body
  br label %while.cond, !dbg !8556, !llvm.loop !8558

while.end66:                                      ; preds = %if.then62, %while.cond
  %67 = load i8*, i8** %src, align 8, !dbg !8559
  %68 = load i8*, i8** %ptr, align 8, !dbg !8561
  %cmp67 = icmp ult i8* %67, %68, !dbg !8562
  br i1 %cmp67, label %if.then69, label %if.end82, !dbg !8563

if.then69:                                        ; preds = %while.end66
  br label %do.body70, !dbg !8564, !llvm.loop !8565

do.body70:                                        ; preds = %if.then69
  call void @llvm.dbg.declare(metadata i64* %length71, metadata !8566, metadata !2073), !dbg !8568
  %69 = load i8*, i8** %ptr, align 8, !dbg !8569
  %70 = load i8*, i8** %src, align 8, !dbg !8571
  %sub.ptr.lhs.cast72 = ptrtoint i8* %69 to i64, !dbg !8572
  %sub.ptr.rhs.cast73 = ptrtoint i8* %70 to i64, !dbg !8572
  %sub.ptr.sub74 = sub i64 %sub.ptr.lhs.cast72, %sub.ptr.rhs.cast73, !dbg !8572
  %sub75 = sub nsw i64 %sub.ptr.sub74, 0, !dbg !8573
  store i64 %sub75, i64* %length71, align 8, !dbg !8574
  %71 = load i64, i64* %length71, align 8, !dbg !8575
  %cmp76 = icmp sgt i64 %71, 0, !dbg !8576
  br i1 %cmp76, label %if.then78, label %if.end80, !dbg !8575

if.then78:                                        ; preds = %do.body70
  %72 = load i8*, i8** %dst, align 8, !dbg !8577
  %73 = load i8*, i8** %src, align 8, !dbg !8581
  %74 = load i64, i64* %length71, align 8, !dbg !8582
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %72, i8* %73, i64 %74, i32 1, i1 false), !dbg !8583
  %75 = load i64, i64* %length71, align 8, !dbg !8584
  %76 = load i8*, i8** %dst, align 8, !dbg !8585
  %add.ptr79 = getelementptr inbounds i8, i8* %76, i64 %75, !dbg !8585
  store i8* %add.ptr79, i8** %dst, align 8, !dbg !8585
  %77 = load i8*, i8** %ptr, align 8, !dbg !8586
  store i8* %77, i8** %src, align 8, !dbg !8587
  br label %if.end80, !dbg !8588

if.end80:                                         ; preds = %if.then78, %do.body70
  br label %do.end81, !dbg !8589

do.end81:                                         ; preds = %if.end80
  br label %if.end82, !dbg !8591

if.end82:                                         ; preds = %do.end81, %while.end66
  br label %if.end83

if.end83:                                         ; preds = %if.end82, %do.end
  %78 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8593
  %buffer84 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %78, i32 0, i32 6, !dbg !8594
  %79 = load i8*, i8** %buffer84, align 32, !dbg !8594
  %80 = load i8**, i8*** %unescaped_buf_ptr.addr, align 8, !dbg !8595
  store i8* %79, i8** %80, align 8, !dbg !8596
  %81 = load i8*, i8** %dst, align 8, !dbg !8597
  %82 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8598
  %buffer85 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %82, i32 0, i32 6, !dbg !8599
  %83 = load i8*, i8** %buffer85, align 32, !dbg !8599
  %sub.ptr.lhs.cast86 = ptrtoint i8* %81 to i64, !dbg !8600
  %sub.ptr.rhs.cast87 = ptrtoint i8* %83 to i64, !dbg !8600
  %sub.ptr.sub88 = sub i64 %sub.ptr.lhs.cast86, %sub.ptr.rhs.cast87, !dbg !8600
  %conv89 = trunc i64 %sub.ptr.sub88 to i32, !dbg !8597
  %84 = load i32*, i32** %unescaped_buf_size.addr, align 8, !dbg !8601
  store i32 %conv89, i32* %84, align 4, !dbg !8602
  %85 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8603
  %buffer90 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %85, i32 0, i32 6, !dbg !8604
  %86 = load i8*, i8** %buffer90, align 32, !dbg !8604
  %87 = load i32*, i32** %unescaped_buf_size.addr, align 8, !dbg !8605
  %88 = load i32, i32* %87, align 4, !dbg !8606
  %idx.ext = sext i32 %88 to i64, !dbg !8607
  %add.ptr91 = getelementptr inbounds i8, i8* %86, i64 %idx.ext, !dbg !8607
  call void @llvm.memset.p0i8.i64(i8* %add.ptr91, i8 0, i64 64, i32 1, i1 false), !dbg !8608
  %89 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8609
  %avctx92 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %89, i32 0, i32 1, !dbg !8610
  %90 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx92, align 8, !dbg !8610
  %91 = bitcast %struct.AVCodecContext* %90 to i8*, !dbg !8609
  %92 = load i8*, i8** %buf_end.addr, align 8, !dbg !8611
  %93 = load i8**, i8*** %buf_ptr.addr, align 8, !dbg !8612
  %94 = load i8*, i8** %93, align 8, !dbg !8613
  %sub.ptr.lhs.cast93 = ptrtoint i8* %92 to i64, !dbg !8614
  %sub.ptr.rhs.cast94 = ptrtoint i8* %94 to i64, !dbg !8614
  %sub.ptr.sub95 = sub i64 %sub.ptr.lhs.cast93, %sub.ptr.rhs.cast94, !dbg !8614
  %95 = load i8*, i8** %dst, align 8, !dbg !8615
  %96 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8616
  %buffer96 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %96, i32 0, i32 6, !dbg !8617
  %97 = load i8*, i8** %buffer96, align 32, !dbg !8617
  %sub.ptr.lhs.cast97 = ptrtoint i8* %95 to i64, !dbg !8618
  %sub.ptr.rhs.cast98 = ptrtoint i8* %97 to i64, !dbg !8618
  %sub.ptr.sub99 = sub i64 %sub.ptr.lhs.cast97, %sub.ptr.rhs.cast98, !dbg !8618
  %sub100 = sub nsw i64 %sub.ptr.sub95, %sub.ptr.sub99, !dbg !8619
  call void (i8*, i32, i8*, ...) @av_log(i8* %91, i32 48, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.52, i32 0, i32 0), i64 %sub100), !dbg !8620
  br label %if.end187, !dbg !8621

if.else101:                                       ; preds = %land.lhs.true, %if.end
  %98 = load i32, i32* %start_code, align 4, !dbg !8622
  %cmp102 = icmp eq i32 %98, 218, !dbg !8625
  br i1 %cmp102, label %land.lhs.true104, label %if.else181, !dbg !8626

land.lhs.true104:                                 ; preds = %if.else101
  %99 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8627
  %ls105 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %99, i32 0, i32 15, !dbg !8629
  %100 = load i32, i32* %ls105, align 4, !dbg !8629
  %tobool106 = icmp ne i32 %100, 0, !dbg !8627
  br i1 %tobool106, label %if.then107, label %if.else181, !dbg !8630

if.then107:                                       ; preds = %land.lhs.true104
  call void @llvm.dbg.declare(metadata i8** %src108, metadata !8631, metadata !2073), !dbg !8633
  %101 = load i8**, i8*** %buf_ptr.addr, align 8, !dbg !8634
  %102 = load i8*, i8** %101, align 8, !dbg !8635
  store i8* %102, i8** %src108, align 8, !dbg !8633
  call void @llvm.dbg.declare(metadata i8** %dst109, metadata !8636, metadata !2073), !dbg !8637
  %103 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8638
  %buffer110 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %103, i32 0, i32 6, !dbg !8639
  %104 = load i8*, i8** %buffer110, align 32, !dbg !8639
  store i8* %104, i8** %dst109, align 8, !dbg !8637
  call void @llvm.dbg.declare(metadata i32* %bit_count, metadata !8640, metadata !2073), !dbg !8641
  store i32 0, i32* %bit_count, align 4, !dbg !8641
  call void @llvm.dbg.declare(metadata i32* %t, metadata !8642, metadata !2073), !dbg !8643
  store i32 0, i32* %t, align 4, !dbg !8643
  call void @llvm.dbg.declare(metadata i32* %b, metadata !8644, metadata !2073), !dbg !8645
  store i32 0, i32* %b, align 4, !dbg !8645
  call void @llvm.dbg.declare(metadata %struct.PutBitContext* %pb, metadata !8646, metadata !2073), !dbg !8657
  br label %while.cond111, !dbg !8658

while.cond111:                                    ; preds = %if.end145, %if.then107
  %105 = load i8*, i8** %src108, align 8, !dbg !8659
  %106 = load i32, i32* %t, align 4, !dbg !8661
  %idx.ext112 = sext i32 %106 to i64, !dbg !8662
  %add.ptr113 = getelementptr inbounds i8, i8* %105, i64 %idx.ext112, !dbg !8662
  %107 = load i8*, i8** %buf_end.addr, align 8, !dbg !8663
  %cmp114 = icmp ult i8* %add.ptr113, %107, !dbg !8664
  br i1 %cmp114, label %while.body116, label %while.end146, !dbg !8665

while.body116:                                    ; preds = %while.cond111
  call void @llvm.dbg.declare(metadata i8* %x117, metadata !8666, metadata !2073), !dbg !8668
  %108 = load i32, i32* %t, align 4, !dbg !8669
  %inc118 = add nsw i32 %108, 1, !dbg !8669
  store i32 %inc118, i32* %t, align 4, !dbg !8669
  %idxprom = sext i32 %108 to i64, !dbg !8670
  %109 = load i8*, i8** %src108, align 8, !dbg !8670
  %arrayidx = getelementptr inbounds i8, i8* %109, i64 %idxprom, !dbg !8670
  %110 = load i8, i8* %arrayidx, align 1, !dbg !8670
  store i8 %110, i8* %x117, align 1, !dbg !8668
  %111 = load i8, i8* %x117, align 1, !dbg !8671
  %conv119 = zext i8 %111 to i32, !dbg !8671
  %cmp120 = icmp eq i32 %conv119, 255, !dbg !8673
  br i1 %cmp120, label %if.then122, label %if.end145, !dbg !8674

if.then122:                                       ; preds = %while.body116
  br label %while.cond123, !dbg !8675

while.cond123:                                    ; preds = %while.body133, %if.then122
  %112 = load i8*, i8** %src108, align 8, !dbg !8677
  %113 = load i32, i32* %t, align 4, !dbg !8679
  %idx.ext124 = sext i32 %113 to i64, !dbg !8680
  %add.ptr125 = getelementptr inbounds i8, i8* %112, i64 %idx.ext124, !dbg !8680
  %114 = load i8*, i8** %buf_end.addr, align 8, !dbg !8681
  %cmp126 = icmp ult i8* %add.ptr125, %114, !dbg !8682
  br i1 %cmp126, label %land.rhs128, label %land.end132, !dbg !8683

land.rhs128:                                      ; preds = %while.cond123
  %115 = load i8, i8* %x117, align 1, !dbg !8684
  %conv129 = zext i8 %115 to i32, !dbg !8684
  %cmp130 = icmp eq i32 %conv129, 255, !dbg !8686
  br label %land.end132

land.end132:                                      ; preds = %land.rhs128, %while.cond123
  %116 = phi i1 [ false, %while.cond123 ], [ %cmp130, %land.rhs128 ]
  br i1 %116, label %while.body133, label %while.end137, !dbg !8687

while.body133:                                    ; preds = %land.end132
  %117 = load i32, i32* %t, align 4, !dbg !8689
  %inc134 = add nsw i32 %117, 1, !dbg !8689
  store i32 %inc134, i32* %t, align 4, !dbg !8689
  %idxprom135 = sext i32 %117 to i64, !dbg !8690
  %118 = load i8*, i8** %src108, align 8, !dbg !8690
  %arrayidx136 = getelementptr inbounds i8, i8* %118, i64 %idxprom135, !dbg !8690
  %119 = load i8, i8* %arrayidx136, align 1, !dbg !8690
  store i8 %119, i8* %x117, align 1, !dbg !8691
  br label %while.cond123, !dbg !8692, !llvm.loop !8694

while.end137:                                     ; preds = %land.end132
  %120 = load i8, i8* %x117, align 1, !dbg !8695
  %conv138 = zext i8 %120 to i32, !dbg !8695
  %and = and i32 %conv138, 128, !dbg !8697
  %tobool139 = icmp ne i32 %and, 0, !dbg !8697
  br i1 %tobool139, label %if.then140, label %if.end144, !dbg !8698

if.then140:                                       ; preds = %while.end137
  %121 = load i32, i32* %t, align 4, !dbg !8699
  %cmp141 = icmp sgt i32 2, %121, !dbg !8701
  br i1 %cmp141, label %cond.true, label %cond.false, !dbg !8702

cond.true:                                        ; preds = %if.then140
  %122 = load i32, i32* %t, align 4, !dbg !8703
  br label %cond.end, !dbg !8705

cond.false:                                       ; preds = %if.then140
  br label %cond.end, !dbg !8706

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %122, %cond.true ], [ 2, %cond.false ], !dbg !8708
  %123 = load i32, i32* %t, align 4, !dbg !8710
  %sub143 = sub nsw i32 %123, %cond, !dbg !8710
  store i32 %sub143, i32* %t, align 4, !dbg !8710
  br label %while.end146, !dbg !8711

if.end144:                                        ; preds = %while.end137
  br label %if.end145, !dbg !8712

if.end145:                                        ; preds = %if.end144, %while.body116
  br label %while.cond111, !dbg !8713, !llvm.loop !8715

while.end146:                                     ; preds = %cond.end, %while.cond111
  %124 = load i32, i32* %t, align 4, !dbg !8716
  %mul = mul nsw i32 %124, 8, !dbg !8717
  store i32 %mul, i32* %bit_count, align 4, !dbg !8718
  %125 = load i8*, i8** %dst109, align 8, !dbg !8719
  %126 = load i32, i32* %t, align 4, !dbg !8720
  call void @init_put_bits(%struct.PutBitContext* %pb, i8* %125, i32 %126), !dbg !8721
  br label %while.cond147, !dbg !8722

while.cond147:                                    ; preds = %if.end176, %while.end146
  %127 = load i32, i32* %b, align 4, !dbg !8723
  %128 = load i32, i32* %t, align 4, !dbg !8724
  %cmp148 = icmp slt i32 %127, %128, !dbg !8725
  br i1 %cmp148, label %while.body150, label %while.end177, !dbg !8726

while.body150:                                    ; preds = %while.cond147
  call void @llvm.dbg.declare(metadata i8* %x151, metadata !8727, metadata !2073), !dbg !8729
  %129 = load i32, i32* %b, align 4, !dbg !8730
  %inc152 = add nsw i32 %129, 1, !dbg !8730
  store i32 %inc152, i32* %b, align 4, !dbg !8730
  %idxprom153 = sext i32 %129 to i64, !dbg !8731
  %130 = load i8*, i8** %src108, align 8, !dbg !8731
  %arrayidx154 = getelementptr inbounds i8, i8* %130, i64 %idxprom153, !dbg !8731
  %131 = load i8, i8* %arrayidx154, align 1, !dbg !8731
  store i8 %131, i8* %x151, align 1, !dbg !8729
  %132 = load i8, i8* %x151, align 1, !dbg !8732
  %conv155 = zext i8 %132 to i32, !dbg !8732
  call void @put_bits(%struct.PutBitContext* %pb, i32 8, i32 %conv155), !dbg !8733
  %133 = load i8, i8* %x151, align 1, !dbg !8734
  %conv156 = zext i8 %133 to i32, !dbg !8734
  %cmp157 = icmp eq i32 %conv156, 255, !dbg !8736
  br i1 %cmp157, label %land.lhs.true159, label %if.end176, !dbg !8737

land.lhs.true159:                                 ; preds = %while.body150
  %134 = load i32, i32* %b, align 4, !dbg !8738
  %135 = load i32, i32* %t, align 4, !dbg !8740
  %cmp160 = icmp slt i32 %134, %135, !dbg !8741
  br i1 %cmp160, label %if.then162, label %if.end176, !dbg !8742

if.then162:                                       ; preds = %land.lhs.true159
  %136 = load i32, i32* %b, align 4, !dbg !8743
  %inc163 = add nsw i32 %136, 1, !dbg !8743
  store i32 %inc163, i32* %b, align 4, !dbg !8743
  %idxprom164 = sext i32 %136 to i64, !dbg !8745
  %137 = load i8*, i8** %src108, align 8, !dbg !8745
  %arrayidx165 = getelementptr inbounds i8, i8* %137, i64 %idxprom164, !dbg !8745
  %138 = load i8, i8* %arrayidx165, align 1, !dbg !8745
  store i8 %138, i8* %x151, align 1, !dbg !8746
  %139 = load i8, i8* %x151, align 1, !dbg !8747
  %conv166 = zext i8 %139 to i32, !dbg !8747
  %and167 = and i32 %conv166, 128, !dbg !8749
  %tobool168 = icmp ne i32 %and167, 0, !dbg !8749
  br i1 %tobool168, label %if.then169, label %if.end174, !dbg !8750

if.then169:                                       ; preds = %if.then162
  %140 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8751
  %avctx170 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %140, i32 0, i32 1, !dbg !8753
  %141 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx170, align 8, !dbg !8753
  %142 = bitcast %struct.AVCodecContext* %141 to i8*, !dbg !8751
  call void (i8*, i32, i8*, ...) @av_log(i8* %142, i32 24, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.53, i32 0, i32 0)), !dbg !8754
  %143 = load i8, i8* %x151, align 1, !dbg !8755
  %conv171 = zext i8 %143 to i32, !dbg !8755
  %and172 = and i32 %conv171, 127, !dbg !8755
  %conv173 = trunc i32 %and172 to i8, !dbg !8755
  store i8 %conv173, i8* %x151, align 1, !dbg !8755
  br label %if.end174, !dbg !8756

if.end174:                                        ; preds = %if.then169, %if.then162
  %144 = load i8, i8* %x151, align 1, !dbg !8757
  %conv175 = zext i8 %144 to i32, !dbg !8757
  call void @put_bits(%struct.PutBitContext* %pb, i32 7, i32 %conv175), !dbg !8758
  %145 = load i32, i32* %bit_count, align 4, !dbg !8759
  %dec = add nsw i32 %145, -1, !dbg !8759
  store i32 %dec, i32* %bit_count, align 4, !dbg !8759
  br label %if.end176, !dbg !8760

if.end176:                                        ; preds = %if.end174, %land.lhs.true159, %while.body150
  br label %while.cond147, !dbg !8761, !llvm.loop !8762

while.end177:                                     ; preds = %while.cond147
  call void @flush_put_bits(%struct.PutBitContext* %pb), !dbg !8763
  %146 = load i8*, i8** %dst109, align 8, !dbg !8764
  %147 = load i8**, i8*** %unescaped_buf_ptr.addr, align 8, !dbg !8765
  store i8* %146, i8** %147, align 8, !dbg !8766
  %148 = load i32, i32* %bit_count, align 4, !dbg !8767
  %add = add nsw i32 %148, 7, !dbg !8768
  %shr = ashr i32 %add, 3, !dbg !8769
  %149 = load i32*, i32** %unescaped_buf_size.addr, align 8, !dbg !8770
  store i32 %shr, i32* %149, align 4, !dbg !8771
  %150 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !8772
  %buffer178 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %150, i32 0, i32 6, !dbg !8773
  %151 = load i8*, i8** %buffer178, align 32, !dbg !8773
  %152 = load i32*, i32** %unescaped_buf_size.addr, align 8, !dbg !8774
  %153 = load i32, i32* %152, align 4, !dbg !8775
  %idx.ext179 = sext i32 %153 to i64, !dbg !8776
  %add.ptr180 = getelementptr inbounds i8, i8* %151, i64 %idx.ext179, !dbg !8776
  call void @llvm.memset.p0i8.i64(i8* %add.ptr180, i8 0, i64 64, i32 1, i1 false), !dbg !8777
  br label %if.end186, !dbg !8778

if.else181:                                       ; preds = %land.lhs.true104, %if.else101
  %154 = load i8**, i8*** %buf_ptr.addr, align 8, !dbg !8779
  %155 = load i8*, i8** %154, align 8, !dbg !8781
  %156 = load i8**, i8*** %unescaped_buf_ptr.addr, align 8, !dbg !8782
  store i8* %155, i8** %156, align 8, !dbg !8783
  %157 = load i8*, i8** %buf_end.addr, align 8, !dbg !8784
  %158 = load i8**, i8*** %buf_ptr.addr, align 8, !dbg !8785
  %159 = load i8*, i8** %158, align 8, !dbg !8786
  %sub.ptr.lhs.cast182 = ptrtoint i8* %157 to i64, !dbg !8787
  %sub.ptr.rhs.cast183 = ptrtoint i8* %159 to i64, !dbg !8787
  %sub.ptr.sub184 = sub i64 %sub.ptr.lhs.cast182, %sub.ptr.rhs.cast183, !dbg !8787
  %conv185 = trunc i64 %sub.ptr.sub184 to i32, !dbg !8784
  %160 = load i32*, i32** %unescaped_buf_size.addr, align 8, !dbg !8788
  store i32 %conv185, i32* %160, align 4, !dbg !8789
  br label %if.end186

if.end186:                                        ; preds = %if.else181, %while.end177
  br label %if.end187

if.end187:                                        ; preds = %if.end186, %if.end83
  %161 = load i32, i32* %start_code, align 4, !dbg !8790
  store i32 %161, i32* %retval, align 4, !dbg !8791
  br label %return, !dbg !8791

return:                                           ; preds = %if.end187, %if.then
  %162 = load i32, i32* %retval, align 4, !dbg !8792
  ret i32 %162, !dbg !8792
}

; Function Attrs: nounwind uwtable
define internal i32 @find_marker(i8** %pbuf_ptr, i8* %buf_end) #3 !dbg !8793 {
entry:
  %pbuf_ptr.addr = alloca i8**, align 8
  %buf_end.addr = alloca i8*, align 8
  %buf_ptr = alloca i8*, align 8
  %v = alloca i32, align 4
  %v2 = alloca i32, align 4
  %val = alloca i32, align 4
  %skipped = alloca i32, align 4
  store i8** %pbuf_ptr, i8*** %pbuf_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %pbuf_ptr.addr, metadata !8796, metadata !2073), !dbg !8797
  store i8* %buf_end, i8** %buf_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf_end.addr, metadata !8798, metadata !2073), !dbg !8799
  call void @llvm.dbg.declare(metadata i8** %buf_ptr, metadata !8800, metadata !2073), !dbg !8801
  call void @llvm.dbg.declare(metadata i32* %v, metadata !8802, metadata !2073), !dbg !8803
  call void @llvm.dbg.declare(metadata i32* %v2, metadata !8804, metadata !2073), !dbg !8805
  call void @llvm.dbg.declare(metadata i32* %val, metadata !8806, metadata !2073), !dbg !8807
  call void @llvm.dbg.declare(metadata i32* %skipped, metadata !8808, metadata !2073), !dbg !8809
  store i32 0, i32* %skipped, align 4, !dbg !8809
  %0 = load i8**, i8*** %pbuf_ptr.addr, align 8, !dbg !8810
  %1 = load i8*, i8** %0, align 8, !dbg !8811
  store i8* %1, i8** %buf_ptr, align 8, !dbg !8812
  br label %while.cond, !dbg !8813

while.cond:                                       ; preds = %if.end, %entry
  %2 = load i8*, i8** %buf_end.addr, align 8, !dbg !8814
  %3 = load i8*, i8** %buf_ptr, align 8, !dbg !8816
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !8817
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !8817
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8817
  %cmp = icmp sgt i64 %sub.ptr.sub, 1, !dbg !8818
  br i1 %cmp, label %while.body, label %while.end, !dbg !8819

while.body:                                       ; preds = %while.cond
  %4 = load i8*, i8** %buf_ptr, align 8, !dbg !8820
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 1, !dbg !8820
  store i8* %incdec.ptr, i8** %buf_ptr, align 8, !dbg !8820
  %5 = load i8, i8* %4, align 1, !dbg !8822
  %conv = zext i8 %5 to i32, !dbg !8822
  store i32 %conv, i32* %v, align 4, !dbg !8823
  %6 = load i8*, i8** %buf_ptr, align 8, !dbg !8824
  %7 = load i8, i8* %6, align 1, !dbg !8825
  %conv1 = zext i8 %7 to i32, !dbg !8825
  store i32 %conv1, i32* %v2, align 4, !dbg !8826
  %8 = load i32, i32* %v, align 4, !dbg !8827
  %cmp2 = icmp eq i32 %8, 255, !dbg !8829
  br i1 %cmp2, label %land.lhs.true, label %if.end, !dbg !8830

land.lhs.true:                                    ; preds = %while.body
  %9 = load i32, i32* %v2, align 4, !dbg !8831
  %cmp4 = icmp uge i32 %9, 192, !dbg !8833
  br i1 %cmp4, label %land.lhs.true6, label %if.end, !dbg !8834

land.lhs.true6:                                   ; preds = %land.lhs.true
  %10 = load i32, i32* %v2, align 4, !dbg !8835
  %cmp7 = icmp ule i32 %10, 254, !dbg !8837
  br i1 %cmp7, label %land.lhs.true9, label %if.end, !dbg !8838

land.lhs.true9:                                   ; preds = %land.lhs.true6
  %11 = load i8*, i8** %buf_ptr, align 8, !dbg !8839
  %12 = load i8*, i8** %buf_end.addr, align 8, !dbg !8841
  %cmp10 = icmp ult i8* %11, %12, !dbg !8842
  br i1 %cmp10, label %if.then, label %if.end, !dbg !8843

if.then:                                          ; preds = %land.lhs.true9
  %13 = load i8*, i8** %buf_ptr, align 8, !dbg !8844
  %incdec.ptr12 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8844
  store i8* %incdec.ptr12, i8** %buf_ptr, align 8, !dbg !8844
  %14 = load i8, i8* %13, align 1, !dbg !8846
  %conv13 = zext i8 %14 to i32, !dbg !8846
  store i32 %conv13, i32* %val, align 4, !dbg !8847
  br label %found, !dbg !8848

if.end:                                           ; preds = %land.lhs.true9, %land.lhs.true6, %land.lhs.true, %while.body
  %15 = load i32, i32* %skipped, align 4, !dbg !8849
  %inc = add nsw i32 %15, 1, !dbg !8849
  store i32 %inc, i32* %skipped, align 4, !dbg !8849
  br label %while.cond, !dbg !8850, !llvm.loop !8852

while.end:                                        ; preds = %while.cond
  %16 = load i8*, i8** %buf_end.addr, align 8, !dbg !8853
  store i8* %16, i8** %buf_ptr, align 8, !dbg !8854
  store i32 -1, i32* %val, align 4, !dbg !8855
  br label %found, !dbg !8856

found:                                            ; preds = %while.end, %if.then
  br label %do.body, !dbg !8857, !llvm.loop !8858

do.body:                                          ; preds = %found
  br label %do.end, !dbg !8859

do.end:                                           ; preds = %do.body
  %17 = load i8*, i8** %buf_ptr, align 8, !dbg !8862
  %18 = load i8**, i8*** %pbuf_ptr.addr, align 8, !dbg !8863
  store i8* %17, i8** %18, align 8, !dbg !8864
  %19 = load i32, i32* %val, align 4, !dbg !8865
  ret i32 %19, !dbg !8866
}

declare void @av_fast_padded_malloc(i8*, i32*, i64) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @init_put_bits(%struct.PutBitContext* %s, i8* %buffer, i32 %buffer_size) #4 !dbg !8867 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %buffer_size.addr = alloca i32, align 4
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !8871, metadata !2073), !dbg !8872
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !8873, metadata !2073), !dbg !8874
  store i32 %buffer_size, i32* %buffer_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buffer_size.addr, metadata !8875, metadata !2073), !dbg !8876
  %0 = load i32, i32* %buffer_size.addr, align 4, !dbg !8877
  %cmp = icmp slt i32 %0, 0, !dbg !8879
  br i1 %cmp, label %if.then, label %if.end, !dbg !8880

if.then:                                          ; preds = %entry
  store i32 0, i32* %buffer_size.addr, align 4, !dbg !8881
  store i8* null, i8** %buffer.addr, align 8, !dbg !8883
  br label %if.end, !dbg !8884

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* %buffer_size.addr, align 4, !dbg !8885
  %mul = mul nsw i32 8, %1, !dbg !8886
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !8887
  %size_in_bits = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 5, !dbg !8888
  store i32 %mul, i32* %size_in_bits, align 8, !dbg !8889
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !8890
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !8891
  %buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %4, i32 0, i32 2, !dbg !8892
  store i8* %3, i8** %buf, align 8, !dbg !8893
  %5 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !8894
  %buf1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %5, i32 0, i32 2, !dbg !8895
  %6 = load i8*, i8** %buf1, align 8, !dbg !8895
  %7 = load i32, i32* %buffer_size.addr, align 4, !dbg !8896
  %idx.ext = sext i32 %7 to i64, !dbg !8897
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %idx.ext, !dbg !8897
  %8 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !8898
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %8, i32 0, i32 4, !dbg !8899
  store i8* %add.ptr, i8** %buf_end, align 8, !dbg !8900
  %9 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !8901
  %buf2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %9, i32 0, i32 2, !dbg !8902
  %10 = load i8*, i8** %buf2, align 8, !dbg !8902
  %11 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !8903
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %11, i32 0, i32 3, !dbg !8904
  store i8* %10, i8** %buf_ptr, align 8, !dbg !8905
  %12 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !8906
  %bit_left = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %12, i32 0, i32 1, !dbg !8907
  store i32 32, i32* %bit_left, align 4, !dbg !8908
  %13 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !8909
  %bit_buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %13, i32 0, i32 0, !dbg !8910
  store i32 0, i32* %bit_buf, align 8, !dbg !8911
  ret void, !dbg !8912
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @put_bits(%struct.PutBitContext* %s, i32 %n, i32 %value) #4 !dbg !8913 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2864, metadata !2073), !dbg !8916
  %s.addr = alloca %struct.PutBitContext*, align 8
  %n.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %bit_buf = alloca i32, align 4
  %bit_left = alloca i32, align 4
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !8922, metadata !2073), !dbg !8923
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !8924, metadata !2073), !dbg !8925
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !8926, metadata !2073), !dbg !8927
  call void @llvm.dbg.declare(metadata i32* %bit_buf, metadata !8928, metadata !2073), !dbg !8929
  call void @llvm.dbg.declare(metadata i32* %bit_left, metadata !8930, metadata !2073), !dbg !8931
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !8932
  %bit_buf1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 0, !dbg !8933
  %1 = load i32, i32* %bit_buf1, align 8, !dbg !8933
  store i32 %1, i32* %bit_buf, align 4, !dbg !8934
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !8935
  %bit_left2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 1, !dbg !8936
  %3 = load i32, i32* %bit_left2, align 4, !dbg !8936
  store i32 %3, i32* %bit_left, align 4, !dbg !8937
  %4 = load i32, i32* %n.addr, align 4, !dbg !8938
  %5 = load i32, i32* %bit_left, align 4, !dbg !8939
  %cmp = icmp slt i32 %4, %5, !dbg !8940
  br i1 %cmp, label %if.then, label %if.else, !dbg !8941

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %bit_buf, align 4, !dbg !8942
  %7 = load i32, i32* %n.addr, align 4, !dbg !8944
  %shl = shl i32 %6, %7, !dbg !8945
  %8 = load i32, i32* %value.addr, align 4, !dbg !8946
  %or = or i32 %shl, %8, !dbg !8947
  store i32 %or, i32* %bit_buf, align 4, !dbg !8948
  %9 = load i32, i32* %n.addr, align 4, !dbg !8949
  %10 = load i32, i32* %bit_left, align 4, !dbg !8950
  %sub = sub nsw i32 %10, %9, !dbg !8950
  store i32 %sub, i32* %bit_left, align 4, !dbg !8950
  br label %if.end12, !dbg !8951

if.else:                                          ; preds = %entry
  %11 = load i32, i32* %bit_left, align 4, !dbg !8952
  %12 = load i32, i32* %bit_buf, align 4, !dbg !8953
  %shl3 = shl i32 %12, %11, !dbg !8953
  store i32 %shl3, i32* %bit_buf, align 4, !dbg !8953
  %13 = load i32, i32* %value.addr, align 4, !dbg !8954
  %14 = load i32, i32* %n.addr, align 4, !dbg !8955
  %15 = load i32, i32* %bit_left, align 4, !dbg !8956
  %sub4 = sub nsw i32 %14, %15, !dbg !8957
  %shr = lshr i32 %13, %sub4, !dbg !8958
  %16 = load i32, i32* %bit_buf, align 4, !dbg !8959
  %or5 = or i32 %16, %shr, !dbg !8959
  store i32 %or5, i32* %bit_buf, align 4, !dbg !8959
  %17 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !8960
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %17, i32 0, i32 4, !dbg !8961
  %18 = load i8*, i8** %buf_end, align 8, !dbg !8961
  %19 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !8962
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %19, i32 0, i32 3, !dbg !8963
  %20 = load i8*, i8** %buf_ptr, align 8, !dbg !8963
  %sub.ptr.lhs.cast = ptrtoint i8* %18 to i64, !dbg !8964
  %sub.ptr.rhs.cast = ptrtoint i8* %20 to i64, !dbg !8964
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8964
  %cmp6 = icmp slt i64 3, %sub.ptr.sub, !dbg !8965
  br i1 %cmp6, label %if.then7, label %if.else10, !dbg !8966

if.then7:                                         ; preds = %if.else
  %21 = load i32, i32* %bit_buf, align 4, !dbg !8967
  store i32 %21, i32* %x.addr.i, align 4, !dbg !8968
  %22 = load i32, i32* %x.addr.i, align 4, !dbg !8969
  %shl.i = shl i32 %22, 8, !dbg !8970
  %and.i = and i32 %shl.i, 65280, !dbg !8971
  %23 = load i32, i32* %x.addr.i, align 4, !dbg !8972
  %shr.i = lshr i32 %23, 8, !dbg !8973
  %and1.i = and i32 %shr.i, 255, !dbg !8974
  %or.i = or i32 %and.i, %and1.i, !dbg !8975
  %shl2.i = shl i32 %or.i, 16, !dbg !8976
  %24 = load i32, i32* %x.addr.i, align 4, !dbg !8977
  %shr3.i = lshr i32 %24, 16, !dbg !8978
  %shl4.i = shl i32 %shr3.i, 8, !dbg !8979
  %and5.i = and i32 %shl4.i, 65280, !dbg !8980
  %25 = load i32, i32* %x.addr.i, align 4, !dbg !8981
  %shr6.i = lshr i32 %25, 16, !dbg !8982
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !8983
  %and8.i = and i32 %shr7.i, 255, !dbg !8984
  %or9.i = or i32 %and5.i, %and8.i, !dbg !8985
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !8986
  %26 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !8987
  %buf_ptr8 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %26, i32 0, i32 3, !dbg !8988
  %27 = load i8*, i8** %buf_ptr8, align 8, !dbg !8988
  %28 = bitcast i8* %27 to %union.unaligned_32*, !dbg !8989
  %l = bitcast %union.unaligned_32* %28 to i32*, !dbg !8989
  store i32 %or10.i, i32* %l, align 1, !dbg !8990
  %29 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !8991
  %buf_ptr9 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %29, i32 0, i32 3, !dbg !8992
  %30 = load i8*, i8** %buf_ptr9, align 8, !dbg !8993
  %add.ptr = getelementptr inbounds i8, i8* %30, i64 4, !dbg !8993
  store i8* %add.ptr, i8** %buf_ptr9, align 8, !dbg !8993
  br label %if.end, !dbg !8994

if.else10:                                        ; preds = %if.else
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.93, i32 0, i32 0)), !dbg !8995
  br label %if.end

if.end:                                           ; preds = %if.else10, %if.then7
  %31 = load i32, i32* %n.addr, align 4, !dbg !8997
  %sub11 = sub nsw i32 32, %31, !dbg !8998
  %32 = load i32, i32* %bit_left, align 4, !dbg !8999
  %add = add nsw i32 %32, %sub11, !dbg !8999
  store i32 %add, i32* %bit_left, align 4, !dbg !8999
  %33 = load i32, i32* %value.addr, align 4, !dbg !9000
  store i32 %33, i32* %bit_buf, align 4, !dbg !9001
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then
  %34 = load i32, i32* %bit_buf, align 4, !dbg !9002
  %35 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9003
  %bit_buf13 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %35, i32 0, i32 0, !dbg !9004
  store i32 %34, i32* %bit_buf13, align 8, !dbg !9005
  %36 = load i32, i32* %bit_left, align 4, !dbg !9006
  %37 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9007
  %bit_left14 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %37, i32 0, i32 1, !dbg !9008
  store i32 %36, i32* %bit_left14, align 4, !dbg !9009
  ret void, !dbg !9010
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @flush_put_bits(%struct.PutBitContext* %s) #4 !dbg !9011 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !9014, metadata !2073), !dbg !9015
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9016
  %bit_left = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 1, !dbg !9018
  %1 = load i32, i32* %bit_left, align 4, !dbg !9018
  %cmp = icmp slt i32 %1, 32, !dbg !9019
  br i1 %cmp, label %if.then, label %if.end, !dbg !9020

if.then:                                          ; preds = %entry
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9021
  %bit_left1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 1, !dbg !9022
  %3 = load i32, i32* %bit_left1, align 4, !dbg !9022
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9023
  %bit_buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %4, i32 0, i32 0, !dbg !9024
  %5 = load i32, i32* %bit_buf, align 8, !dbg !9025
  %shl = shl i32 %5, %3, !dbg !9025
  store i32 %shl, i32* %bit_buf, align 8, !dbg !9025
  br label %if.end, !dbg !9023

if.end:                                           ; preds = %if.then, %entry
  br label %while.cond, !dbg !9026

while.cond:                                       ; preds = %do.end, %if.end
  %6 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9027
  %bit_left2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %6, i32 0, i32 1, !dbg !9029
  %7 = load i32, i32* %bit_left2, align 4, !dbg !9029
  %cmp3 = icmp slt i32 %7, 32, !dbg !9030
  br i1 %cmp3, label %while.body, label %while.end, !dbg !9031

while.body:                                       ; preds = %while.cond
  br label %do.body, !dbg !9032, !llvm.loop !9034

do.body:                                          ; preds = %while.body
  %8 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9035
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %8, i32 0, i32 3, !dbg !9039
  %9 = load i8*, i8** %buf_ptr, align 8, !dbg !9039
  %10 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9040
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %10, i32 0, i32 4, !dbg !9041
  %11 = load i8*, i8** %buf_end, align 8, !dbg !9041
  %cmp4 = icmp ult i8* %9, %11, !dbg !9042
  br i1 %cmp4, label %if.end6, label %if.then5, !dbg !9043

if.then5:                                         ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.95, i32 0, i32 0), i32 108), !dbg !9044
  call void @abort() #8, !dbg !9047
  unreachable, !dbg !9049

if.end6:                                          ; preds = %do.body
  br label %do.end, !dbg !9050

do.end:                                           ; preds = %if.end6
  %12 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9052
  %bit_buf7 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %12, i32 0, i32 0, !dbg !9053
  %13 = load i32, i32* %bit_buf7, align 8, !dbg !9053
  %shr = lshr i32 %13, 24, !dbg !9054
  %conv = trunc i32 %shr to i8, !dbg !9052
  %14 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9055
  %buf_ptr8 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %14, i32 0, i32 3, !dbg !9056
  %15 = load i8*, i8** %buf_ptr8, align 8, !dbg !9057
  %incdec.ptr = getelementptr inbounds i8, i8* %15, i32 1, !dbg !9057
  store i8* %incdec.ptr, i8** %buf_ptr8, align 8, !dbg !9057
  store i8 %conv, i8* %15, align 1, !dbg !9058
  %16 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9059
  %bit_buf9 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %16, i32 0, i32 0, !dbg !9060
  %17 = load i32, i32* %bit_buf9, align 8, !dbg !9061
  %shl10 = shl i32 %17, 8, !dbg !9061
  store i32 %shl10, i32* %bit_buf9, align 8, !dbg !9061
  %18 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9062
  %bit_left11 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %18, i32 0, i32 1, !dbg !9063
  %19 = load i32, i32* %bit_left11, align 4, !dbg !9064
  %add = add nsw i32 %19, 8, !dbg !9064
  store i32 %add, i32* %bit_left11, align 4, !dbg !9064
  br label %while.cond, !dbg !9065, !llvm.loop !9067

while.end:                                        ; preds = %while.cond
  %20 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9068
  %bit_left12 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %20, i32 0, i32 1, !dbg !9069
  store i32 32, i32* %bit_left12, align 4, !dbg !9070
  %21 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9071
  %bit_buf13 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %21, i32 0, i32 0, !dbg !9072
  store i32 0, i32* %bit_buf13, align 8, !dbg !9073
  ret void, !dbg !9074
}

; Function Attrs: nounwind uwtable
define i32 @ff_mjpeg_decode_frame(%struct.AVCodecContext* %avctx, i8* %data, i32* %got_frame, %struct.AVPacket* %avpkt) #3 !dbg !9075 {
entry:
  %x.addr.i1110 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i1110, metadata !2864, metadata !2073), !dbg !9076
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2864, metadata !2073), !dbg !9079
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %data.addr = alloca i8*, align 8
  %got_frame.addr = alloca i32*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %frame = alloca %struct.AVFrame*, align 8
  %buf = alloca i8*, align 8
  %buf_size = alloca i32, align 4
  %s = alloca %struct.MJpegDecodeContext*, align 8
  %buf_end = alloca i8*, align 8
  %buf_ptr = alloca i8*, align 8
  %unescaped_buf_ptr = alloca i8*, align 8
  %hshift = alloca i32, align 4
  %vshift = alloca i32, align 4
  %unescaped_buf_size = alloca i32, align 4
  %start_code = alloca i32, align 4
  %i = alloca i32, align 4
  %index = alloca i32, align 4
  %ret = alloca i32, align 4
  %is16bit = alloca i32, align 4
  %.compoundliteral = alloca [64 x i8], align 1
  %qp = alloca i32, align 4
  %qpw = alloca i32, align 4
  %qp_table_buf = alloca %struct.AVBufferRef*, align 8
  %p = alloca i32, align 4
  %line = alloca i8*, align 8
  %w = alloca i32, align 4
  %h = alloca i32, align 4
  %p526 = alloca i32, align 4
  %dst = alloca i8*, align 8
  %w603 = alloca i32, align 4
  %h605 = alloca i32, align 4
  %src1 = alloca i8*, align 8
  %src2 = alloca i8*, align 8
  %j = alloca i32, align 4
  %dst755 = alloca i8*, align 8
  %w760 = alloca i32, align 4
  %h763 = alloca i32, align 4
  %dst2 = alloca i8*, align 8
  %SWAP_tmp = alloca i32, align 4
  %w842 = alloca i32, align 4
  %h845 = alloca i32, align 4
  %j859 = alloca i32, align 4
  %dst860 = alloca [4 x i8*], align 16
  %k = alloca i32, align 4
  %r = alloca i32, align 4
  %g = alloca i32, align 4
  %b = alloca i32, align 4
  %w941 = alloca i32, align 4
  %h944 = alloca i32, align 4
  %j958 = alloca i32, align 4
  %dst959 = alloca [4 x i8*], align 16
  %k984 = alloca i32, align 4
  %r989 = alloca i32, align 4
  %g996 = alloca i32, align 4
  %b1003 = alloca i32, align 4
  %stereo = alloca %struct.AVStereo3D*, align 8
  %sd = alloca %struct.AVFrameSideData*, align 8
  %offset = alloca i64, align 8
  %total_size = alloca i32, align 4
  %i1061 = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !9082, metadata !2073), !dbg !9083
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !9084, metadata !2073), !dbg !9085
  store i32* %got_frame, i32** %got_frame.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame.addr, metadata !9086, metadata !2073), !dbg !9087
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !9088, metadata !2073), !dbg !9089
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame, metadata !9090, metadata !2073), !dbg !9091
  %0 = load i8*, i8** %data.addr, align 8, !dbg !9092
  %1 = bitcast i8* %0 to %struct.AVFrame*, !dbg !9092
  store %struct.AVFrame* %1, %struct.AVFrame** %frame, align 8, !dbg !9091
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !9093, metadata !2073), !dbg !9094
  %2 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !9095
  %data1 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i32 0, i32 3, !dbg !9096
  %3 = load i8*, i8** %data1, align 8, !dbg !9096
  store i8* %3, i8** %buf, align 8, !dbg !9094
  call void @llvm.dbg.declare(metadata i32* %buf_size, metadata !9097, metadata !2073), !dbg !9098
  %4 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !9099
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %4, i32 0, i32 4, !dbg !9100
  %5 = load i32, i32* %size, align 8, !dbg !9100
  store i32 %5, i32* %buf_size, align 4, !dbg !9098
  call void @llvm.dbg.declare(metadata %struct.MJpegDecodeContext** %s, metadata !9101, metadata !2073), !dbg !9102
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9103
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %6, i32 0, i32 6, !dbg !9104
  %7 = load i8*, i8** %priv_data, align 8, !dbg !9104
  %8 = bitcast i8* %7 to %struct.MJpegDecodeContext*, !dbg !9103
  store %struct.MJpegDecodeContext* %8, %struct.MJpegDecodeContext** %s, align 8, !dbg !9102
  call void @llvm.dbg.declare(metadata i8** %buf_end, metadata !9105, metadata !2073), !dbg !9106
  call void @llvm.dbg.declare(metadata i8** %buf_ptr, metadata !9107, metadata !2073), !dbg !9108
  call void @llvm.dbg.declare(metadata i8** %unescaped_buf_ptr, metadata !9109, metadata !2073), !dbg !9110
  call void @llvm.dbg.declare(metadata i32* %hshift, metadata !9111, metadata !2073), !dbg !9112
  call void @llvm.dbg.declare(metadata i32* %vshift, metadata !9113, metadata !2073), !dbg !9114
  call void @llvm.dbg.declare(metadata i32* %unescaped_buf_size, metadata !9115, metadata !2073), !dbg !9116
  call void @llvm.dbg.declare(metadata i32* %start_code, metadata !9117, metadata !2073), !dbg !9118
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9119, metadata !2073), !dbg !9120
  call void @llvm.dbg.declare(metadata i32* %index, metadata !9121, metadata !2073), !dbg !9122
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9123, metadata !2073), !dbg !9124
  store i32 0, i32* %ret, align 4, !dbg !9124
  call void @llvm.dbg.declare(metadata i32* %is16bit, metadata !9125, metadata !2073), !dbg !9126
  %9 = load i32, i32* %buf_size, align 4, !dbg !9127
  %10 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9128
  %buf_size2 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %10, i32 0, i32 3, !dbg !9129
  store i32 %9, i32* %buf_size2, align 16, !dbg !9130
  %11 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9131
  %exif_metadata = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %11, i32 0, i32 79, !dbg !9132
  call void @av_dict_free(%struct.AVDictionary** %exif_metadata), !dbg !9133
  %12 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9134
  %stereo3d = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %12, i32 0, i32 80, !dbg !9135
  %13 = bitcast %struct.AVStereo3D** %stereo3d to i8*, !dbg !9136
  call void @av_freep(i8* %13), !dbg !9137
  %14 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9138
  %adobe_transform = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %14, i32 0, i32 25, !dbg !9139
  store i32 -1, i32* %adobe_transform, align 4, !dbg !9140
  %15 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9141
  %iccnum = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %15, i32 0, i32 84, !dbg !9143
  %16 = load i32, i32* %iccnum, align 8, !dbg !9143
  %cmp = icmp ne i32 %16, 0, !dbg !9144
  br i1 %cmp, label %if.then, label %if.end, !dbg !9145

if.then:                                          ; preds = %entry
  %17 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9146
  call void @reset_icc_profile(%struct.MJpegDecodeContext* %17), !dbg !9147
  br label %if.end, !dbg !9147

if.end:                                           ; preds = %if.then, %entry
  %18 = load i8*, i8** %buf, align 8, !dbg !9148
  store i8* %18, i8** %buf_ptr, align 8, !dbg !9149
  %19 = load i8*, i8** %buf, align 8, !dbg !9150
  %20 = load i32, i32* %buf_size, align 4, !dbg !9151
  %idx.ext = sext i32 %20 to i64, !dbg !9152
  %add.ptr = getelementptr inbounds i8, i8* %19, i64 %idx.ext, !dbg !9152
  store i8* %add.ptr, i8** %buf_end, align 8, !dbg !9153
  br label %while.cond, !dbg !9154

while.cond:                                       ; preds = %skip, %if.end
  %21 = load i8*, i8** %buf_ptr, align 8, !dbg !9155
  %22 = load i8*, i8** %buf_end, align 8, !dbg !9157
  %cmp3 = icmp ult i8* %21, %22, !dbg !9158
  br i1 %cmp3, label %while.body, label %while.end, !dbg !9159

while.body:                                       ; preds = %while.cond
  %23 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9160
  %24 = load i8*, i8** %buf_end, align 8, !dbg !9162
  %call = call i32 @ff_mjpeg_find_marker(%struct.MJpegDecodeContext* %23, i8** %buf_ptr, i8* %24, i8** %unescaped_buf_ptr, i32* %unescaped_buf_size), !dbg !9163
  store i32 %call, i32* %start_code, align 4, !dbg !9164
  %25 = load i32, i32* %start_code, align 4, !dbg !9165
  %cmp4 = icmp slt i32 %25, 0, !dbg !9167
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !9168

if.then5:                                         ; preds = %while.body
  br label %while.end, !dbg !9169

if.else:                                          ; preds = %while.body
  %26 = load i32, i32* %unescaped_buf_size, align 4, !dbg !9171
  %cmp6 = icmp sgt i32 %26, 268435455, !dbg !9173
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !9174

if.then7:                                         ; preds = %if.else
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9175
  %28 = bitcast %struct.AVCodecContext* %27 to i8*, !dbg !9175
  %29 = load i32, i32* %start_code, align 4, !dbg !9177
  %30 = load i32, i32* %unescaped_buf_size, align 4, !dbg !9178
  %31 = load i32, i32* %buf_size, align 4, !dbg !9179
  call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 16, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.54, i32 0, i32 0), i32 %29, i32 %30, i32 %31), !dbg !9180
  store i32 -1094995529, i32* %retval, align 4, !dbg !9181
  br label %return, !dbg !9181

if.end8:                                          ; preds = %if.else
  br label %if.end9

if.end9:                                          ; preds = %if.end8
  %32 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9182
  %33 = bitcast %struct.AVCodecContext* %32 to i8*, !dbg !9182
  %34 = load i32, i32* %start_code, align 4, !dbg !9183
  %35 = load i8*, i8** %buf_end, align 8, !dbg !9184
  %36 = load i8*, i8** %buf_ptr, align 8, !dbg !9185
  %sub.ptr.lhs.cast = ptrtoint i8* %35 to i64, !dbg !9186
  %sub.ptr.rhs.cast = ptrtoint i8* %36 to i64, !dbg !9186
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9186
  call void (i8*, i32, i8*, ...) @av_log(i8* %33, i32 48, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.55, i32 0, i32 0), i32 %34, i64 %sub.ptr.sub), !dbg !9187
  %37 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9188
  %gb = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %37, i32 0, i32 2, !dbg !9189
  %38 = load i8*, i8** %unescaped_buf_ptr, align 8, !dbg !9190
  %39 = load i32, i32* %unescaped_buf_size, align 4, !dbg !9191
  %call10 = call i32 @init_get_bits8(%struct.GetBitContext* %gb, i8* %38, i32 %39), !dbg !9192
  store i32 %call10, i32* %ret, align 4, !dbg !9193
  %40 = load i32, i32* %ret, align 4, !dbg !9194
  %cmp11 = icmp slt i32 %40, 0, !dbg !9196
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !9197

if.then12:                                        ; preds = %if.end9
  %41 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9198
  %42 = bitcast %struct.AVCodecContext* %41 to i8*, !dbg !9198
  call void (i8*, i32, i8*, ...) @av_log(i8* %42, i32 16, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.56, i32 0, i32 0)), !dbg !9200
  br label %fail, !dbg !9201

if.end13:                                         ; preds = %if.end9
  %43 = load i32, i32* %start_code, align 4, !dbg !9202
  %44 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9203
  %start_code14 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %44, i32 0, i32 4, !dbg !9204
  store i32 %43, i32* %start_code14, align 4, !dbg !9205
  %45 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9206
  %avctx15 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %45, i32 0, i32 1, !dbg !9208
  %46 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx15, align 8, !dbg !9208
  %debug = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %46, i32 0, i32 134, !dbg !9209
  %47 = load i32, i32* %debug, align 4, !dbg !9209
  %and = and i32 %47, 256, !dbg !9210
  %tobool = icmp ne i32 %and, 0, !dbg !9210
  br i1 %tobool, label %if.then16, label %if.end17, !dbg !9211

if.then16:                                        ; preds = %if.end13
  %48 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9212
  %49 = bitcast %struct.AVCodecContext* %48 to i8*, !dbg !9212
  %50 = load i32, i32* %start_code, align 4, !dbg !9213
  call void (i8*, i32, i8*, ...) @av_log(i8* %49, i32 48, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.57, i32 0, i32 0), i32 %50), !dbg !9214
  br label %if.end17, !dbg !9214

if.end17:                                         ; preds = %if.then16, %if.end13
  %51 = load i32, i32* %start_code, align 4, !dbg !9215
  %cmp18 = icmp sge i32 %51, 208, !dbg !9217
  br i1 %cmp18, label %land.lhs.true, label %if.else22, !dbg !9218

land.lhs.true:                                    ; preds = %if.end17
  %52 = load i32, i32* %start_code, align 4, !dbg !9219
  %cmp19 = icmp sle i32 %52, 215, !dbg !9221
  br i1 %cmp19, label %if.then20, label %if.else22, !dbg !9222

if.then20:                                        ; preds = %land.lhs.true
  %53 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9223
  %54 = bitcast %struct.AVCodecContext* %53 to i8*, !dbg !9223
  %55 = load i32, i32* %start_code, align 4, !dbg !9225
  %and21 = and i32 %55, 15, !dbg !9226
  call void (i8*, i32, i8*, ...) @av_log(i8* %54, i32 48, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.58, i32 0, i32 0), i32 %and21), !dbg !9227
  br label %if.end49, !dbg !9228

if.else22:                                        ; preds = %land.lhs.true, %if.end17
  %56 = load i32, i32* %start_code, align 4, !dbg !9229
  %cmp23 = icmp sge i32 %56, 224, !dbg !9232
  br i1 %cmp23, label %land.lhs.true24, label %if.else32, !dbg !9233

land.lhs.true24:                                  ; preds = %if.else22
  %57 = load i32, i32* %start_code, align 4, !dbg !9234
  %cmp25 = icmp sle i32 %57, 239, !dbg !9236
  br i1 %cmp25, label %if.then26, label %if.else32, !dbg !9237

if.then26:                                        ; preds = %land.lhs.true24
  %58 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9238
  %call27 = call i32 @mjpeg_decode_app(%struct.MJpegDecodeContext* %58), !dbg !9241
  store i32 %call27, i32* %ret, align 4, !dbg !9242
  %cmp28 = icmp slt i32 %call27, 0, !dbg !9243
  br i1 %cmp28, label %if.then29, label %if.end31, !dbg !9244

if.then29:                                        ; preds = %if.then26
  %59 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9245
  %60 = bitcast %struct.AVCodecContext* %59 to i8*, !dbg !9245
  %61 = bitcast [64 x i8]* %.compoundliteral to i8*, !dbg !9246
  call void @llvm.memset.p0i8.i64(i8* %61, i8 0, i64 64, i32 1, i1 false), !dbg !9246
  %arrayinit.begin = getelementptr inbounds [64 x i8], [64 x i8]* %.compoundliteral, i64 0, i64 0, !dbg !9247
  store i8 0, i8* %arrayinit.begin, align 1, !dbg !9247
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %.compoundliteral, i32 0, i32 0, !dbg !9246
  %62 = load i32, i32* %ret, align 4, !dbg !9248
  %call30 = call i8* @av_make_error_string(i8* %arraydecay, i64 64, i32 %62), !dbg !9249
  call void (i8*, i32, i8*, ...) @av_log(i8* %60, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.59, i32 0, i32 0), i8* %call30), !dbg !9251
  br label %if.end31, !dbg !9251

if.end31:                                         ; preds = %if.then29, %if.then26
  br label %if.end48, !dbg !9252

if.else32:                                        ; preds = %land.lhs.true24, %if.else22
  %63 = load i32, i32* %start_code, align 4, !dbg !9253
  %cmp33 = icmp eq i32 %63, 254, !dbg !9256
  br i1 %cmp33, label %if.then34, label %if.else39, !dbg !9253

if.then34:                                        ; preds = %if.else32
  %64 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9257
  %call35 = call i32 @mjpeg_decode_com(%struct.MJpegDecodeContext* %64), !dbg !9259
  store i32 %call35, i32* %ret, align 4, !dbg !9260
  %65 = load i32, i32* %ret, align 4, !dbg !9261
  %cmp36 = icmp slt i32 %65, 0, !dbg !9263
  br i1 %cmp36, label %if.then37, label %if.end38, !dbg !9264

if.then37:                                        ; preds = %if.then34
  %66 = load i32, i32* %ret, align 4, !dbg !9265
  store i32 %66, i32* %retval, align 4, !dbg !9266
  br label %return, !dbg !9266

if.end38:                                         ; preds = %if.then34
  br label %if.end47, !dbg !9267

if.else39:                                        ; preds = %if.else32
  %67 = load i32, i32* %start_code, align 4, !dbg !9268
  %cmp40 = icmp eq i32 %67, 219, !dbg !9271
  br i1 %cmp40, label %if.then41, label %if.end46, !dbg !9268

if.then41:                                        ; preds = %if.else39
  %68 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9272
  %call42 = call i32 @ff_mjpeg_decode_dqt(%struct.MJpegDecodeContext* %68), !dbg !9274
  store i32 %call42, i32* %ret, align 4, !dbg !9275
  %69 = load i32, i32* %ret, align 4, !dbg !9276
  %cmp43 = icmp slt i32 %69, 0, !dbg !9278
  br i1 %cmp43, label %if.then44, label %if.end45, !dbg !9279

if.then44:                                        ; preds = %if.then41
  %70 = load i32, i32* %ret, align 4, !dbg !9280
  store i32 %70, i32* %retval, align 4, !dbg !9281
  br label %return, !dbg !9281

if.end45:                                         ; preds = %if.then41
  br label %if.end46, !dbg !9282

if.end46:                                         ; preds = %if.end45, %if.else39
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.end38
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.end31
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.then20
  store i32 -1, i32* %ret, align 4, !dbg !9283
  %71 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9284
  %skip_frame = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %71, i32 0, i32 157, !dbg !9286
  %72 = load i32, i32* %skip_frame, align 4, !dbg !9286
  %cmp50 = icmp eq i32 %72, 48, !dbg !9287
  br i1 %cmp50, label %if.then51, label %if.end52, !dbg !9288

if.then51:                                        ; preds = %if.end49
  %73 = load i32, i32* %start_code, align 4, !dbg !9289
  switch i32 %73, label %sw.default [
    i32 192, label %sw.bb
    i32 193, label %sw.bb
    i32 194, label %sw.bb
    i32 195, label %sw.bb
    i32 247, label %sw.bb
    i32 216, label %sw.bb
    i32 218, label %sw.bb
    i32 217, label %sw.bb
  ], !dbg !9291

sw.bb:                                            ; preds = %if.then51, %if.then51, %if.then51, %if.then51, %if.then51, %if.then51, %if.then51, %if.then51
  br label %sw.epilog, !dbg !9292

sw.default:                                       ; preds = %if.then51
  br label %skip, !dbg !9294

sw.epilog:                                        ; preds = %sw.bb
  br label %if.end52, !dbg !9295

if.end52:                                         ; preds = %sw.epilog, %if.end49
  %74 = load i32, i32* %start_code, align 4, !dbg !9296
  switch i32 %74, label %sw.epilog235 [
    i32 216, label %sw.bb53
    i32 196, label %sw.bb57
    i32 192, label %sw.bb62
    i32 193, label %sw.bb62
    i32 194, label %sw.bb74
    i32 195, label %sw.bb84
    i32 247, label %sw.bb95
    i32 248, label %sw.bb108
    i32 217, label %sw.bb113
    i32 218, label %sw.bb207
    i32 221, label %sw.bb228
    i32 197, label %sw.bb234
    i32 198, label %sw.bb234
    i32 199, label %sw.bb234
    i32 201, label %sw.bb234
    i32 202, label %sw.bb234
    i32 203, label %sw.bb234
    i32 205, label %sw.bb234
    i32 206, label %sw.bb234
    i32 207, label %sw.bb234
    i32 200, label %sw.bb234
  ], !dbg !9297

sw.bb53:                                          ; preds = %if.end52
  %75 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9298
  %restart_interval = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %75, i32 0, i32 67, !dbg !9300
  store i32 0, i32* %restart_interval, align 8, !dbg !9301
  %76 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9302
  %restart_count = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %76, i32 0, i32 68, !dbg !9303
  store i32 0, i32* %restart_count, align 4, !dbg !9304
  %77 = load i8*, i8** %buf_ptr, align 8, !dbg !9305
  %78 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9306
  %raw_image_buffer = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %78, i32 0, i32 86, !dbg !9307
  store i8* %77, i8** %raw_image_buffer, align 16, !dbg !9308
  %79 = load i8*, i8** %buf_end, align 8, !dbg !9309
  %80 = load i8*, i8** %buf_ptr, align 8, !dbg !9310
  %sub.ptr.lhs.cast54 = ptrtoint i8* %79 to i64, !dbg !9311
  %sub.ptr.rhs.cast55 = ptrtoint i8* %80 to i64, !dbg !9311
  %sub.ptr.sub56 = sub i64 %sub.ptr.lhs.cast54, %sub.ptr.rhs.cast55, !dbg !9311
  %81 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9312
  %raw_image_buffer_size = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %81, i32 0, i32 87, !dbg !9313
  store i64 %sub.ptr.sub56, i64* %raw_image_buffer_size, align 8, !dbg !9314
  br label %sw.epilog235, !dbg !9315

sw.bb57:                                          ; preds = %if.end52
  %82 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9316
  %call58 = call i32 @ff_mjpeg_decode_dht(%struct.MJpegDecodeContext* %82), !dbg !9318
  store i32 %call58, i32* %ret, align 4, !dbg !9319
  %cmp59 = icmp slt i32 %call58, 0, !dbg !9320
  br i1 %cmp59, label %if.then60, label %if.end61, !dbg !9321

if.then60:                                        ; preds = %sw.bb57
  %83 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9322
  %84 = bitcast %struct.AVCodecContext* %83 to i8*, !dbg !9322
  call void (i8*, i32, i8*, ...) @av_log(i8* %84, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.60, i32 0, i32 0)), !dbg !9324
  br label %fail, !dbg !9325

if.end61:                                         ; preds = %sw.bb57
  br label %sw.epilog235, !dbg !9326

sw.bb62:                                          ; preds = %if.end52, %if.end52
  %85 = load i32, i32* %start_code, align 4, !dbg !9327
  %cmp63 = icmp eq i32 %85, 192, !dbg !9329
  br i1 %cmp63, label %if.then64, label %if.else66, !dbg !9330

if.then64:                                        ; preds = %sw.bb62
  %86 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9331
  %avctx65 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %86, i32 0, i32 1, !dbg !9332
  %87 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx65, align 8, !dbg !9332
  %profile = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %87, i32 0, i32 153, !dbg !9333
  store i32 192, i32* %profile, align 4, !dbg !9334
  br label %if.end69, !dbg !9331

if.else66:                                        ; preds = %sw.bb62
  %88 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9335
  %avctx67 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %88, i32 0, i32 1, !dbg !9336
  %89 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx67, align 8, !dbg !9336
  %profile68 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %89, i32 0, i32 153, !dbg !9337
  store i32 193, i32* %profile68, align 4, !dbg !9338
  br label %if.end69

if.end69:                                         ; preds = %if.else66, %if.then64
  %90 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9339
  %lossless = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %90, i32 0, i32 14, !dbg !9340
  store i32 0, i32* %lossless, align 8, !dbg !9341
  %91 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9342
  %ls = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %91, i32 0, i32 15, !dbg !9343
  store i32 0, i32* %ls, align 4, !dbg !9344
  %92 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9345
  %progressive = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %92, i32 0, i32 16, !dbg !9346
  store i32 0, i32* %progressive, align 16, !dbg !9347
  %93 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9348
  %call70 = call i32 @ff_mjpeg_decode_sof(%struct.MJpegDecodeContext* %93), !dbg !9350
  store i32 %call70, i32* %ret, align 4, !dbg !9351
  %cmp71 = icmp slt i32 %call70, 0, !dbg !9352
  br i1 %cmp71, label %if.then72, label %if.end73, !dbg !9353

if.then72:                                        ; preds = %if.end69
  br label %fail, !dbg !9354

if.end73:                                         ; preds = %if.end69
  br label %sw.epilog235, !dbg !9355

sw.bb74:                                          ; preds = %if.end52
  %94 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9356
  %avctx75 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %94, i32 0, i32 1, !dbg !9357
  %95 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx75, align 8, !dbg !9357
  %profile76 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %95, i32 0, i32 153, !dbg !9358
  store i32 194, i32* %profile76, align 4, !dbg !9359
  %96 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9360
  %lossless77 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %96, i32 0, i32 14, !dbg !9361
  store i32 0, i32* %lossless77, align 8, !dbg !9362
  %97 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9363
  %ls78 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %97, i32 0, i32 15, !dbg !9364
  store i32 0, i32* %ls78, align 4, !dbg !9365
  %98 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9366
  %progressive79 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %98, i32 0, i32 16, !dbg !9367
  store i32 1, i32* %progressive79, align 16, !dbg !9368
  %99 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9369
  %call80 = call i32 @ff_mjpeg_decode_sof(%struct.MJpegDecodeContext* %99), !dbg !9371
  store i32 %call80, i32* %ret, align 4, !dbg !9372
  %cmp81 = icmp slt i32 %call80, 0, !dbg !9373
  br i1 %cmp81, label %if.then82, label %if.end83, !dbg !9374

if.then82:                                        ; preds = %sw.bb74
  br label %fail, !dbg !9375

if.end83:                                         ; preds = %sw.bb74
  br label %sw.epilog235, !dbg !9376

sw.bb84:                                          ; preds = %if.end52
  %100 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9377
  %avctx85 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %100, i32 0, i32 1, !dbg !9378
  %101 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx85, align 8, !dbg !9378
  %profile86 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %101, i32 0, i32 153, !dbg !9379
  store i32 195, i32* %profile86, align 4, !dbg !9380
  %102 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9381
  %avctx87 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %102, i32 0, i32 1, !dbg !9382
  %103 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx87, align 8, !dbg !9382
  %properties = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %103, i32 0, i32 179, !dbg !9383
  %104 = load i32, i32* %properties, align 8, !dbg !9384
  %or = or i32 %104, 1, !dbg !9384
  store i32 %or, i32* %properties, align 8, !dbg !9384
  %105 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9385
  %lossless88 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %105, i32 0, i32 14, !dbg !9386
  store i32 1, i32* %lossless88, align 8, !dbg !9387
  %106 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9388
  %ls89 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %106, i32 0, i32 15, !dbg !9389
  store i32 0, i32* %ls89, align 4, !dbg !9390
  %107 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9391
  %progressive90 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %107, i32 0, i32 16, !dbg !9392
  store i32 0, i32* %progressive90, align 16, !dbg !9393
  %108 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9394
  %call91 = call i32 @ff_mjpeg_decode_sof(%struct.MJpegDecodeContext* %108), !dbg !9396
  store i32 %call91, i32* %ret, align 4, !dbg !9397
  %cmp92 = icmp slt i32 %call91, 0, !dbg !9398
  br i1 %cmp92, label %if.then93, label %if.end94, !dbg !9399

if.then93:                                        ; preds = %sw.bb84
  br label %fail, !dbg !9400

if.end94:                                         ; preds = %sw.bb84
  br label %sw.epilog235, !dbg !9401

sw.bb95:                                          ; preds = %if.end52
  %109 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9402
  %avctx96 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %109, i32 0, i32 1, !dbg !9403
  %110 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx96, align 8, !dbg !9403
  %profile97 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %110, i32 0, i32 153, !dbg !9404
  store i32 247, i32* %profile97, align 4, !dbg !9405
  %111 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9406
  %avctx98 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %111, i32 0, i32 1, !dbg !9407
  %112 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx98, align 8, !dbg !9407
  %properties99 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %112, i32 0, i32 179, !dbg !9408
  %113 = load i32, i32* %properties99, align 8, !dbg !9409
  %or100 = or i32 %113, 1, !dbg !9409
  store i32 %or100, i32* %properties99, align 8, !dbg !9409
  %114 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9410
  %lossless101 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %114, i32 0, i32 14, !dbg !9411
  store i32 1, i32* %lossless101, align 8, !dbg !9412
  %115 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9413
  %ls102 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %115, i32 0, i32 15, !dbg !9414
  store i32 1, i32* %ls102, align 4, !dbg !9415
  %116 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9416
  %progressive103 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %116, i32 0, i32 16, !dbg !9417
  store i32 0, i32* %progressive103, align 16, !dbg !9418
  %117 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9419
  %call104 = call i32 @ff_mjpeg_decode_sof(%struct.MJpegDecodeContext* %117), !dbg !9421
  store i32 %call104, i32* %ret, align 4, !dbg !9422
  %cmp105 = icmp slt i32 %call104, 0, !dbg !9423
  br i1 %cmp105, label %if.then106, label %if.end107, !dbg !9424

if.then106:                                       ; preds = %sw.bb95
  br label %fail, !dbg !9425

if.end107:                                        ; preds = %sw.bb95
  br label %sw.epilog235, !dbg !9426

sw.bb108:                                         ; preds = %if.end52
  %118 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9427
  %call109 = call i32 @ff_jpegls_decode_lse(%struct.MJpegDecodeContext* %118), !dbg !9429
  store i32 %call109, i32* %ret, align 4, !dbg !9430
  %cmp110 = icmp slt i32 %call109, 0, !dbg !9431
  br i1 %cmp110, label %if.then111, label %if.end112, !dbg !9432

if.then111:                                       ; preds = %sw.bb108
  br label %fail, !dbg !9433

if.end112:                                        ; preds = %sw.bb108
  br label %sw.epilog235, !dbg !9434

sw.bb113:                                         ; preds = %if.end52
  br label %eoi_parser, !dbg !9435

eoi_parser:                                       ; preds = %if.then253, %sw.bb113
  %119 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9437
  %hwaccel = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %119, i32 0, i32 137, !dbg !9439
  %120 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel, align 8, !dbg !9439
  %tobool114 = icmp ne %struct.AVHWAccel* %120, null, !dbg !9437
  br i1 %tobool114, label %if.end126, label %land.lhs.true115, !dbg !9440

land.lhs.true115:                                 ; preds = %eoi_parser
  %121 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9441
  %skip_frame116 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %121, i32 0, i32 157, !dbg !9443
  %122 = load i32, i32* %skip_frame116, align 4, !dbg !9443
  %cmp117 = icmp ne i32 %122, 48, !dbg !9444
  br i1 %cmp117, label %land.lhs.true118, label %if.end126, !dbg !9445

land.lhs.true118:                                 ; preds = %land.lhs.true115
  %123 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9446
  %progressive119 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %123, i32 0, i32 16, !dbg !9447
  %124 = load i32, i32* %progressive119, align 16, !dbg !9447
  %tobool120 = icmp ne i32 %124, 0, !dbg !9446
  br i1 %tobool120, label %land.lhs.true121, label %if.end126, !dbg !9448

land.lhs.true121:                                 ; preds = %land.lhs.true118
  %125 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9449
  %cur_scan = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %125, i32 0, i32 74, !dbg !9450
  %126 = load i32, i32* %cur_scan, align 4, !dbg !9450
  %tobool122 = icmp ne i32 %126, 0, !dbg !9449
  br i1 %tobool122, label %land.lhs.true123, label %if.end126, !dbg !9451

land.lhs.true123:                                 ; preds = %land.lhs.true121
  %127 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9452
  %got_picture = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %127, i32 0, i32 54, !dbg !9454
  %128 = load i32, i32* %got_picture, align 16, !dbg !9454
  %tobool124 = icmp ne i32 %128, 0, !dbg !9452
  br i1 %tobool124, label %if.then125, label %if.end126, !dbg !9455

if.then125:                                       ; preds = %land.lhs.true123
  %129 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9457
  call void @mjpeg_idct_scan_progressive_ac(%struct.MJpegDecodeContext* %129), !dbg !9458
  br label %if.end126, !dbg !9458

if.end126:                                        ; preds = %if.then125, %land.lhs.true123, %land.lhs.true121, %land.lhs.true118, %land.lhs.true115, %eoi_parser
  %130 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9459
  %cur_scan127 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %130, i32 0, i32 74, !dbg !9460
  store i32 0, i32* %cur_scan127, align 4, !dbg !9461
  %131 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9462
  %got_picture128 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %131, i32 0, i32 54, !dbg !9464
  %132 = load i32, i32* %got_picture128, align 16, !dbg !9464
  %tobool129 = icmp ne i32 %132, 0, !dbg !9462
  br i1 %tobool129, label %if.end131, label %if.then130, !dbg !9465

if.then130:                                       ; preds = %if.end126
  %133 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9466
  %134 = bitcast %struct.AVCodecContext* %133 to i8*, !dbg !9466
  call void (i8*, i32, i8*, ...) @av_log(i8* %134, i32 24, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.61, i32 0, i32 0)), !dbg !9468
  br label %sw.epilog235, !dbg !9469

if.end131:                                        ; preds = %if.end126
  %135 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9470
  %interlaced = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %135, i32 0, i32 12, !dbg !9472
  %136 = load i32, i32* %interlaced, align 32, !dbg !9472
  %tobool132 = icmp ne i32 %136, 0, !dbg !9470
  br i1 %tobool132, label %if.then133, label %if.end139, !dbg !9473

if.then133:                                       ; preds = %if.end131
  %137 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9474
  %bottom_field = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %137, i32 0, i32 13, !dbg !9476
  %138 = load i32, i32* %bottom_field, align 4, !dbg !9477
  %xor = xor i32 %138, 1, !dbg !9477
  store i32 %xor, i32* %bottom_field, align 4, !dbg !9477
  %139 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9478
  %bottom_field134 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %139, i32 0, i32 13, !dbg !9480
  %140 = load i32, i32* %bottom_field134, align 4, !dbg !9480
  %141 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9481
  %interlace_polarity = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %141, i32 0, i32 71, !dbg !9482
  %142 = load i32, i32* %interlace_polarity, align 8, !dbg !9482
  %tobool135 = icmp ne i32 %142, 0, !dbg !9483
  %lnot = xor i1 %tobool135, true, !dbg !9483
  %lnot.ext = zext i1 %lnot to i32, !dbg !9483
  %cmp136 = icmp eq i32 %140, %lnot.ext, !dbg !9484
  br i1 %cmp136, label %if.then137, label %if.end138, !dbg !9485

if.then137:                                       ; preds = %if.then133
  br label %sw.epilog235, !dbg !9486

if.end138:                                        ; preds = %if.then133
  br label %if.end139, !dbg !9487

if.end139:                                        ; preds = %if.end138, %if.end131
  %143 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9488
  %skip_frame140 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %143, i32 0, i32 157, !dbg !9490
  %144 = load i32, i32* %skip_frame140, align 4, !dbg !9490
  %cmp141 = icmp eq i32 %144, 48, !dbg !9491
  br i1 %cmp141, label %if.then142, label %if.end144, !dbg !9492

if.then142:                                       ; preds = %if.end139
  %145 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9493
  %got_picture143 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %145, i32 0, i32 54, !dbg !9495
  store i32 0, i32* %got_picture143, align 16, !dbg !9496
  br label %the_end_no_picture, !dbg !9497

if.end144:                                        ; preds = %if.end139
  %146 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9498
  %avctx145 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %146, i32 0, i32 1, !dbg !9500
  %147 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx145, align 8, !dbg !9500
  %hwaccel146 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %147, i32 0, i32 137, !dbg !9501
  %148 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel146, align 8, !dbg !9501
  %tobool147 = icmp ne %struct.AVHWAccel* %148, null, !dbg !9498
  br i1 %tobool147, label %if.then148, label %if.end157, !dbg !9502

if.then148:                                       ; preds = %if.end144
  %149 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9503
  %avctx149 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %149, i32 0, i32 1, !dbg !9505
  %150 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx149, align 8, !dbg !9505
  %hwaccel150 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %150, i32 0, i32 137, !dbg !9506
  %151 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel150, align 8, !dbg !9506
  %end_frame = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %151, i32 0, i32 9, !dbg !9507
  %end_frame151 = bitcast {}** %end_frame to i32 (%struct.AVCodecContext*)**, !dbg !9507
  %152 = load i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)** %end_frame151, align 8, !dbg !9507
  %153 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9508
  %avctx152 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %153, i32 0, i32 1, !dbg !9509
  %154 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx152, align 8, !dbg !9509
  %call153 = call i32 %152(%struct.AVCodecContext* %154), !dbg !9503
  store i32 %call153, i32* %ret, align 4, !dbg !9510
  %155 = load i32, i32* %ret, align 4, !dbg !9511
  %cmp154 = icmp slt i32 %155, 0, !dbg !9513
  br i1 %cmp154, label %if.then155, label %if.end156, !dbg !9514

if.then155:                                       ; preds = %if.then148
  %156 = load i32, i32* %ret, align 4, !dbg !9515
  store i32 %156, i32* %retval, align 4, !dbg !9516
  br label %return, !dbg !9516

if.end156:                                        ; preds = %if.then148
  %157 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9517
  %hwaccel_picture_private = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %157, i32 0, i32 94, !dbg !9518
  %158 = bitcast i8** %hwaccel_picture_private to i8*, !dbg !9519
  call void @av_freep(i8* %158), !dbg !9520
  br label %if.end157, !dbg !9521

if.end157:                                        ; preds = %if.end156, %if.end144
  %159 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !9522
  %160 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9524
  %picture_ptr = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %160, i32 0, i32 53, !dbg !9525
  %161 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr, align 8, !dbg !9525
  %call158 = call i32 @av_frame_ref(%struct.AVFrame* %159, %struct.AVFrame* %161), !dbg !9526
  store i32 %call158, i32* %ret, align 4, !dbg !9527
  %cmp159 = icmp slt i32 %call158, 0, !dbg !9528
  br i1 %cmp159, label %if.then160, label %if.end161, !dbg !9529

if.then160:                                       ; preds = %if.end157
  %162 = load i32, i32* %ret, align 4, !dbg !9530
  store i32 %162, i32* %retval, align 4, !dbg !9531
  br label %return, !dbg !9531

if.end161:                                        ; preds = %if.end157
  %163 = load i32*, i32** %got_frame.addr, align 8, !dbg !9532
  store i32 1, i32* %163, align 4, !dbg !9533
  %164 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9534
  %got_picture162 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %164, i32 0, i32 54, !dbg !9535
  store i32 0, i32* %got_picture162, align 16, !dbg !9536
  %165 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9537
  %lossless163 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %165, i32 0, i32 14, !dbg !9539
  %166 = load i32, i32* %lossless163, align 8, !dbg !9539
  %tobool164 = icmp ne i32 %166, 0, !dbg !9537
  br i1 %tobool164, label %if.end206, label %if.then165, !dbg !9540

if.then165:                                       ; preds = %if.end161
  call void @llvm.dbg.declare(metadata i32* %qp, metadata !9541, metadata !2073), !dbg !9543
  %167 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9544
  %qscale = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %167, i32 0, i32 9, !dbg !9545
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %qscale, i64 0, i64 0, !dbg !9544
  %168 = load i32, i32* %arrayidx, align 8, !dbg !9544
  %169 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9546
  %qscale166 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %169, i32 0, i32 9, !dbg !9547
  %arrayidx167 = getelementptr inbounds [4 x i32], [4 x i32]* %qscale166, i64 0, i64 1, !dbg !9546
  %170 = load i32, i32* %arrayidx167, align 4, !dbg !9546
  %cmp168 = icmp sgt i32 %168, %170, !dbg !9548
  br i1 %cmp168, label %cond.true, label %cond.false, !dbg !9549

cond.true:                                        ; preds = %if.then165
  %171 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9550
  %qscale169 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %171, i32 0, i32 9, !dbg !9552
  %arrayidx170 = getelementptr inbounds [4 x i32], [4 x i32]* %qscale169, i64 0, i64 0, !dbg !9550
  %172 = load i32, i32* %arrayidx170, align 8, !dbg !9550
  br label %cond.end, !dbg !9553

cond.false:                                       ; preds = %if.then165
  %173 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9554
  %qscale171 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %173, i32 0, i32 9, !dbg !9556
  %arrayidx172 = getelementptr inbounds [4 x i32], [4 x i32]* %qscale171, i64 0, i64 1, !dbg !9554
  %174 = load i32, i32* %arrayidx172, align 4, !dbg !9554
  br label %cond.end, !dbg !9557

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %172, %cond.true ], [ %174, %cond.false ], !dbg !9558
  %175 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9560
  %qscale173 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %175, i32 0, i32 9, !dbg !9561
  %arrayidx174 = getelementptr inbounds [4 x i32], [4 x i32]* %qscale173, i64 0, i64 2, !dbg !9560
  %176 = load i32, i32* %arrayidx174, align 8, !dbg !9560
  %cmp175 = icmp sgt i32 %cond, %176, !dbg !9562
  br i1 %cmp175, label %cond.true176, label %cond.false190, !dbg !9563

cond.true176:                                     ; preds = %cond.end
  %177 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9564
  %qscale177 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %177, i32 0, i32 9, !dbg !9566
  %arrayidx178 = getelementptr inbounds [4 x i32], [4 x i32]* %qscale177, i64 0, i64 0, !dbg !9564
  %178 = load i32, i32* %arrayidx178, align 8, !dbg !9564
  %179 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9567
  %qscale179 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %179, i32 0, i32 9, !dbg !9568
  %arrayidx180 = getelementptr inbounds [4 x i32], [4 x i32]* %qscale179, i64 0, i64 1, !dbg !9567
  %180 = load i32, i32* %arrayidx180, align 4, !dbg !9567
  %cmp181 = icmp sgt i32 %178, %180, !dbg !9569
  br i1 %cmp181, label %cond.true182, label %cond.false185, !dbg !9570

cond.true182:                                     ; preds = %cond.true176
  %181 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9571
  %qscale183 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %181, i32 0, i32 9, !dbg !9573
  %arrayidx184 = getelementptr inbounds [4 x i32], [4 x i32]* %qscale183, i64 0, i64 0, !dbg !9571
  %182 = load i32, i32* %arrayidx184, align 8, !dbg !9571
  br label %cond.end188, !dbg !9574

cond.false185:                                    ; preds = %cond.true176
  %183 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9575
  %qscale186 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %183, i32 0, i32 9, !dbg !9577
  %arrayidx187 = getelementptr inbounds [4 x i32], [4 x i32]* %qscale186, i64 0, i64 1, !dbg !9575
  %184 = load i32, i32* %arrayidx187, align 4, !dbg !9575
  br label %cond.end188, !dbg !9578

cond.end188:                                      ; preds = %cond.false185, %cond.true182
  %cond189 = phi i32 [ %182, %cond.true182 ], [ %184, %cond.false185 ], !dbg !9579
  br label %cond.end193, !dbg !9581

cond.false190:                                    ; preds = %cond.end
  %185 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9582
  %qscale191 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %185, i32 0, i32 9, !dbg !9584
  %arrayidx192 = getelementptr inbounds [4 x i32], [4 x i32]* %qscale191, i64 0, i64 2, !dbg !9582
  %186 = load i32, i32* %arrayidx192, align 8, !dbg !9582
  br label %cond.end193, !dbg !9585

cond.end193:                                      ; preds = %cond.false190, %cond.end188
  %cond194 = phi i32 [ %cond189, %cond.end188 ], [ %186, %cond.false190 ], !dbg !9586
  store i32 %cond194, i32* %qp, align 4, !dbg !9588
  call void @llvm.dbg.declare(metadata i32* %qpw, metadata !9589, metadata !2073), !dbg !9590
  %187 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9591
  %width = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %187, i32 0, i32 32, !dbg !9592
  %188 = load i32, i32* %width, align 16, !dbg !9592
  %add = add nsw i32 %188, 15, !dbg !9593
  %div = sdiv i32 %add, 16, !dbg !9594
  store i32 %div, i32* %qpw, align 4, !dbg !9590
  call void @llvm.dbg.declare(metadata %struct.AVBufferRef** %qp_table_buf, metadata !9595, metadata !2073), !dbg !9596
  %189 = load i32, i32* %qpw, align 4, !dbg !9597
  %call195 = call %struct.AVBufferRef* @av_buffer_alloc(i32 %189), !dbg !9598
  store %struct.AVBufferRef* %call195, %struct.AVBufferRef** %qp_table_buf, align 8, !dbg !9596
  %190 = load %struct.AVBufferRef*, %struct.AVBufferRef** %qp_table_buf, align 8, !dbg !9599
  %tobool196 = icmp ne %struct.AVBufferRef* %190, null, !dbg !9599
  br i1 %tobool196, label %if.then197, label %if.end200, !dbg !9601

if.then197:                                       ; preds = %cond.end193
  %191 = load %struct.AVBufferRef*, %struct.AVBufferRef** %qp_table_buf, align 8, !dbg !9602
  %data198 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %191, i32 0, i32 1, !dbg !9604
  %192 = load i8*, i8** %data198, align 8, !dbg !9604
  %193 = load i32, i32* %qp, align 4, !dbg !9605
  %194 = trunc i32 %193 to i8, !dbg !9606
  %195 = load i32, i32* %qpw, align 4, !dbg !9607
  %conv = sext i32 %195 to i64, !dbg !9607
  call void @llvm.memset.p0i8.i64(i8* %192, i8 %194, i64 %conv, i32 1, i1 false), !dbg !9606
  %196 = load i8*, i8** %data.addr, align 8, !dbg !9608
  %197 = bitcast i8* %196 to %struct.AVFrame*, !dbg !9608
  %198 = load %struct.AVBufferRef*, %struct.AVBufferRef** %qp_table_buf, align 8, !dbg !9609
  %call199 = call i32 @av_frame_set_qp_table(%struct.AVFrame* %197, %struct.AVBufferRef* %198, i32 0, i32 0), !dbg !9610
  br label %if.end200, !dbg !9611

if.end200:                                        ; preds = %if.then197, %cond.end193
  %199 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9612
  %debug201 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %199, i32 0, i32 134, !dbg !9614
  %200 = load i32, i32* %debug201, align 4, !dbg !9614
  %and202 = and i32 %200, 16, !dbg !9615
  %tobool203 = icmp ne i32 %and202, 0, !dbg !9615
  br i1 %tobool203, label %if.then204, label %if.end205, !dbg !9616

if.then204:                                       ; preds = %if.end200
  %201 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9617
  %202 = bitcast %struct.AVCodecContext* %201 to i8*, !dbg !9617
  %203 = load i32, i32* %qp, align 4, !dbg !9618
  call void (i8*, i32, i8*, ...) @av_log(i8* %202, i32 48, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.62, i32 0, i32 0), i32 %203), !dbg !9619
  br label %if.end205, !dbg !9619

if.end205:                                        ; preds = %if.then204, %if.end200
  br label %if.end206, !dbg !9620

if.end206:                                        ; preds = %if.end205, %if.end161
  br label %the_end, !dbg !9621

sw.bb207:                                         ; preds = %if.end52
  %204 = load i8*, i8** %buf_ptr, align 8, !dbg !9622
  %205 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9623
  %raw_scan_buffer = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %205, i32 0, i32 88, !dbg !9624
  store i8* %204, i8** %raw_scan_buffer, align 32, !dbg !9625
  %206 = load i8*, i8** %buf_end, align 8, !dbg !9626
  %207 = load i8*, i8** %buf_ptr, align 8, !dbg !9627
  %sub.ptr.lhs.cast208 = ptrtoint i8* %206 to i64, !dbg !9628
  %sub.ptr.rhs.cast209 = ptrtoint i8* %207 to i64, !dbg !9628
  %sub.ptr.sub210 = sub i64 %sub.ptr.lhs.cast208, %sub.ptr.rhs.cast209, !dbg !9628
  %208 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9629
  %raw_scan_buffer_size = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %208, i32 0, i32 89, !dbg !9630
  store i64 %sub.ptr.sub210, i64* %raw_scan_buffer_size, align 8, !dbg !9631
  %209 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9632
  %cur_scan211 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %209, i32 0, i32 74, !dbg !9633
  %210 = load i32, i32* %cur_scan211, align 4, !dbg !9634
  %inc = add nsw i32 %210, 1, !dbg !9634
  store i32 %inc, i32* %cur_scan211, align 4, !dbg !9634
  %211 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9635
  %skip_frame212 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %211, i32 0, i32 157, !dbg !9637
  %212 = load i32, i32* %skip_frame212, align 4, !dbg !9637
  %cmp213 = icmp eq i32 %212, 48, !dbg !9638
  br i1 %cmp213, label %if.then215, label %if.end219, !dbg !9639

if.then215:                                       ; preds = %sw.bb207
  %213 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9640
  %gb216 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %213, i32 0, i32 2, !dbg !9642
  %214 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9643
  %gb217 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %214, i32 0, i32 2, !dbg !9644
  %call218 = call i32 @get_bits_left(%struct.GetBitContext* %gb217), !dbg !9645
  call void @skip_bits(%struct.GetBitContext* %gb216, i32 %call218), !dbg !9646
  br label %sw.epilog235, !dbg !9648

if.end219:                                        ; preds = %sw.bb207
  %215 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9649
  %call220 = call i32 @ff_mjpeg_decode_sos(%struct.MJpegDecodeContext* %215, i8* null, i32 0, %struct.AVFrame* null), !dbg !9651
  store i32 %call220, i32* %ret, align 4, !dbg !9652
  %cmp221 = icmp slt i32 %call220, 0, !dbg !9653
  br i1 %cmp221, label %land.lhs.true223, label %if.end227, !dbg !9654

land.lhs.true223:                                 ; preds = %if.end219
  %216 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9655
  %err_recognition = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %216, i32 0, i32 135, !dbg !9656
  %217 = load i32, i32* %err_recognition, align 8, !dbg !9656
  %and224 = and i32 %217, 8, !dbg !9657
  %tobool225 = icmp ne i32 %and224, 0, !dbg !9657
  br i1 %tobool225, label %if.then226, label %if.end227, !dbg !9658

if.then226:                                       ; preds = %land.lhs.true223
  br label %fail, !dbg !9659

if.end227:                                        ; preds = %land.lhs.true223, %if.end219
  br label %sw.epilog235, !dbg !9660

sw.bb228:                                         ; preds = %if.end52
  %218 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9661
  %call229 = call i32 @mjpeg_decode_dri(%struct.MJpegDecodeContext* %218), !dbg !9663
  store i32 %call229, i32* %ret, align 4, !dbg !9664
  %cmp230 = icmp slt i32 %call229, 0, !dbg !9665
  br i1 %cmp230, label %if.then232, label %if.end233, !dbg !9666

if.then232:                                       ; preds = %sw.bb228
  %219 = load i32, i32* %ret, align 4, !dbg !9667
  store i32 %219, i32* %retval, align 4, !dbg !9668
  br label %return, !dbg !9668

if.end233:                                        ; preds = %sw.bb228
  br label %sw.epilog235, !dbg !9669

sw.bb234:                                         ; preds = %if.end52, %if.end52, %if.end52, %if.end52, %if.end52, %if.end52, %if.end52, %if.end52, %if.end52, %if.end52
  %220 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9670
  %221 = bitcast %struct.AVCodecContext* %220 to i8*, !dbg !9670
  %222 = load i32, i32* %start_code, align 4, !dbg !9671
  call void (i8*, i32, i8*, ...) @av_log(i8* %221, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.63, i32 0, i32 0), i32 %222), !dbg !9672
  br label %sw.epilog235, !dbg !9673

sw.epilog235:                                     ; preds = %if.end52, %sw.bb234, %if.end233, %if.end227, %if.then215, %if.then137, %if.then130, %if.end112, %if.end107, %if.end94, %if.end83, %if.end73, %if.end61, %sw.bb53
  br label %skip, !dbg !9674

skip:                                             ; preds = %sw.epilog235, %sw.default
  %223 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9675
  %gb236 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %223, i32 0, i32 2, !dbg !9676
  %call237 = call i32 @get_bits_count(%struct.GetBitContext* %gb236), !dbg !9677
  %add238 = add nsw i32 %call237, 7, !dbg !9678
  %div239 = sdiv i32 %add238, 8, !dbg !9679
  %224 = load i8*, i8** %buf_ptr, align 8, !dbg !9680
  %idx.ext240 = sext i32 %div239 to i64, !dbg !9680
  %add.ptr241 = getelementptr inbounds i8, i8* %224, i64 %idx.ext240, !dbg !9680
  store i8* %add.ptr241, i8** %buf_ptr, align 8, !dbg !9680
  %225 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9681
  %226 = bitcast %struct.AVCodecContext* %225 to i8*, !dbg !9681
  %227 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9682
  %gb242 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %227, i32 0, i32 2, !dbg !9683
  %call243 = call i32 @get_bits_count(%struct.GetBitContext* %gb242), !dbg !9684
  %add244 = add nsw i32 %call243, 7, !dbg !9685
  %div245 = sdiv i32 %add244, 8, !dbg !9686
  %228 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9687
  %gb246 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %228, i32 0, i32 2, !dbg !9688
  %call247 = call i32 @get_bits_count(%struct.GetBitContext* %gb246), !dbg !9689
  call void (i8*, i32, i8*, ...) @av_log(i8* %226, i32 48, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.64, i32 0, i32 0), i32 %div245, i32 %call247), !dbg !9691
  br label %while.cond, !dbg !9692, !llvm.loop !9694

while.end:                                        ; preds = %if.then5, %while.cond
  %229 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9695
  %got_picture248 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %229, i32 0, i32 54, !dbg !9697
  %230 = load i32, i32* %got_picture248, align 16, !dbg !9697
  %tobool249 = icmp ne i32 %230, 0, !dbg !9695
  br i1 %tobool249, label %land.lhs.true250, label %if.end254, !dbg !9698

land.lhs.true250:                                 ; preds = %while.end
  %231 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9699
  %cur_scan251 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %231, i32 0, i32 74, !dbg !9701
  %232 = load i32, i32* %cur_scan251, align 4, !dbg !9701
  %tobool252 = icmp ne i32 %232, 0, !dbg !9699
  br i1 %tobool252, label %if.then253, label %if.end254, !dbg !9702

if.then253:                                       ; preds = %land.lhs.true250
  %233 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9703
  %234 = bitcast %struct.AVCodecContext* %233 to i8*, !dbg !9703
  call void (i8*, i32, i8*, ...) @av_log(i8* %234, i32 24, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.65, i32 0, i32 0)), !dbg !9705
  br label %eoi_parser, !dbg !9706

if.end254:                                        ; preds = %land.lhs.true250, %while.end
  %235 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9707
  %236 = bitcast %struct.AVCodecContext* %235 to i8*, !dbg !9707
  call void (i8*, i32, i8*, ...) @av_log(i8* %236, i32 8, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.66, i32 0, i32 0)), !dbg !9708
  store i32 -1094995529, i32* %retval, align 4, !dbg !9709
  br label %return, !dbg !9709

fail:                                             ; preds = %if.then226, %if.then111, %if.then106, %if.then93, %if.then82, %if.then72, %if.then60, %if.then12
  %237 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9710
  %got_picture255 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %237, i32 0, i32 54, !dbg !9711
  store i32 0, i32* %got_picture255, align 16, !dbg !9712
  %238 = load i32, i32* %ret, align 4, !dbg !9713
  store i32 %238, i32* %retval, align 4, !dbg !9714
  br label %return, !dbg !9714

the_end:                                          ; preds = %if.end206
  %239 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9715
  %avctx256 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %239, i32 0, i32 1, !dbg !9716
  %240 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx256, align 8, !dbg !9716
  %pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %240, i32 0, i32 25, !dbg !9717
  %241 = load i32, i32* %pix_fmt, align 8, !dbg !9717
  %call257 = call %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32 %241), !dbg !9718
  %comp = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %call257, i32 0, i32 5, !dbg !9719
  %arrayidx258 = getelementptr inbounds [4 x %struct.AVComponentDescriptor], [4 x %struct.AVComponentDescriptor]* %comp, i64 0, i64 0, !dbg !9718
  %step = getelementptr inbounds %struct.AVComponentDescriptor, %struct.AVComponentDescriptor* %arrayidx258, i32 0, i32 1, !dbg !9720
  %242 = load i32, i32* %step, align 4, !dbg !9720
  %cmp259 = icmp sgt i32 %242, 1, !dbg !9721
  %conv260 = zext i1 %cmp259 to i32, !dbg !9721
  store i32 %conv260, i32* %is16bit, align 4, !dbg !9722
  %243 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9723
  %upscale_h = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %243, i32 0, i32 18, !dbg !9724
  %arraydecay261 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_h, i32 0, i32 0, !dbg !9725
  %244 = bitcast i8* %arraydecay261 to %union.unaligned_32*, !dbg !9725
  %l = bitcast %union.unaligned_32* %244 to i32*, !dbg !9725
  %245 = load i32, i32* %l, align 8, !dbg !9725
  store i32 %245, i32* %x.addr.i, align 4, !dbg !9726
  %246 = load i32, i32* %x.addr.i, align 4, !dbg !9727
  %shl.i = shl i32 %246, 8, !dbg !9728
  %and.i = and i32 %shl.i, 65280, !dbg !9729
  %247 = load i32, i32* %x.addr.i, align 4, !dbg !9730
  %shr.i = lshr i32 %247, 8, !dbg !9731
  %and1.i = and i32 %shr.i, 255, !dbg !9732
  %or.i = or i32 %and.i, %and1.i, !dbg !9733
  %shl2.i = shl i32 %or.i, 16, !dbg !9734
  %248 = load i32, i32* %x.addr.i, align 4, !dbg !9735
  %shr3.i = lshr i32 %248, 16, !dbg !9736
  %shl4.i = shl i32 %shr3.i, 8, !dbg !9737
  %and5.i = and i32 %shl4.i, 65280, !dbg !9738
  %249 = load i32, i32* %x.addr.i, align 4, !dbg !9739
  %shr6.i = lshr i32 %249, 16, !dbg !9740
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !9741
  %and8.i = and i32 %shr7.i, 255, !dbg !9742
  %or9.i = or i32 %and5.i, %and8.i, !dbg !9743
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !9744
  %tobool263 = icmp ne i32 %or10.i, 0, !dbg !9726
  br i1 %tobool263, label %if.then264, label %if.end519, !dbg !9745

if.then264:                                       ; preds = %the_end
  call void @llvm.dbg.declare(metadata i32* %p, metadata !9746, metadata !2073), !dbg !9748
  br label %do.body, !dbg !9749, !llvm.loop !9750

do.body:                                          ; preds = %if.then264
  %250 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9751
  %pix_fmt265 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %250, i32 0, i32 25, !dbg !9755
  %251 = load i32, i32* %pix_fmt265, align 8, !dbg !9755
  %cmp266 = icmp eq i32 %251, 14, !dbg !9756
  br i1 %cmp266, label %if.end312, label %lor.lhs.false, !dbg !9757

lor.lhs.false:                                    ; preds = %do.body
  %252 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9758
  %pix_fmt268 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %252, i32 0, i32 25, !dbg !9760
  %253 = load i32, i32* %pix_fmt268, align 8, !dbg !9760
  %cmp269 = icmp eq i32 %253, 5, !dbg !9761
  br i1 %cmp269, label %if.end312, label %lor.lhs.false271, !dbg !9762

lor.lhs.false271:                                 ; preds = %lor.lhs.false
  %254 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9763
  %pix_fmt272 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %254, i32 0, i32 25, !dbg !9765
  %255 = load i32, i32* %pix_fmt272, align 8, !dbg !9765
  %cmp273 = icmp eq i32 %255, 32, !dbg !9766
  br i1 %cmp273, label %if.end312, label %lor.lhs.false275, !dbg !9767

lor.lhs.false275:                                 ; preds = %lor.lhs.false271
  %256 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9768
  %pix_fmt276 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %256, i32 0, i32 25, !dbg !9770
  %257 = load i32, i32* %pix_fmt276, align 8, !dbg !9770
  %cmp277 = icmp eq i32 %257, 31, !dbg !9771
  br i1 %cmp277, label %if.end312, label %lor.lhs.false279, !dbg !9772

lor.lhs.false279:                                 ; preds = %lor.lhs.false275
  %258 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9773
  %pix_fmt280 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %258, i32 0, i32 25, !dbg !9775
  %259 = load i32, i32* %pix_fmt280, align 8, !dbg !9775
  %cmp281 = icmp eq i32 %259, 81, !dbg !9776
  br i1 %cmp281, label %if.end312, label %lor.lhs.false283, !dbg !9777

lor.lhs.false283:                                 ; preds = %lor.lhs.false279
  %260 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9778
  %pix_fmt284 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %260, i32 0, i32 25, !dbg !9780
  %261 = load i32, i32* %pix_fmt284, align 8, !dbg !9780
  %cmp285 = icmp eq i32 %261, 12, !dbg !9781
  br i1 %cmp285, label %if.end312, label %lor.lhs.false287, !dbg !9782

lor.lhs.false287:                                 ; preds = %lor.lhs.false283
  %262 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9783
  %pix_fmt288 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %262, i32 0, i32 25, !dbg !9785
  %263 = load i32, i32* %pix_fmt288, align 8, !dbg !9785
  %cmp289 = icmp eq i32 %263, 0, !dbg !9786
  br i1 %cmp289, label %if.end312, label %lor.lhs.false291, !dbg !9787

lor.lhs.false291:                                 ; preds = %lor.lhs.false287
  %264 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9788
  %pix_fmt292 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %264, i32 0, i32 25, !dbg !9790
  %265 = load i32, i32* %pix_fmt292, align 8, !dbg !9790
  %cmp293 = icmp eq i32 %265, 47, !dbg !9791
  br i1 %cmp293, label %if.end312, label %lor.lhs.false295, !dbg !9792

lor.lhs.false295:                                 ; preds = %lor.lhs.false291
  %266 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9793
  %pix_fmt296 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %266, i32 0, i32 25, !dbg !9795
  %267 = load i32, i32* %pix_fmt296, align 8, !dbg !9795
  %cmp297 = icmp eq i32 %267, 33, !dbg !9796
  br i1 %cmp297, label %if.end312, label %lor.lhs.false299, !dbg !9797

lor.lhs.false299:                                 ; preds = %lor.lhs.false295
  %268 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9798
  %pix_fmt300 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %268, i32 0, i32 25, !dbg !9800
  %269 = load i32, i32* %pix_fmt300, align 8, !dbg !9800
  %cmp301 = icmp eq i32 %269, 95, !dbg !9801
  br i1 %cmp301, label %if.end312, label %lor.lhs.false303, !dbg !9802

lor.lhs.false303:                                 ; preds = %lor.lhs.false299
  %270 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9803
  %pix_fmt304 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %270, i32 0, i32 25, !dbg !9805
  %271 = load i32, i32* %pix_fmt304, align 8, !dbg !9805
  %cmp305 = icmp eq i32 %271, 73, !dbg !9806
  br i1 %cmp305, label %if.end312, label %lor.lhs.false307, !dbg !9807

lor.lhs.false307:                                 ; preds = %lor.lhs.false303
  %272 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9808
  %pix_fmt308 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %272, i32 0, i32 25, !dbg !9810
  %273 = load i32, i32* %pix_fmt308, align 8, !dbg !9810
  %cmp309 = icmp eq i32 %273, 113, !dbg !9811
  br i1 %cmp309, label %if.end312, label %if.then311, !dbg !9812

if.then311:                                       ; preds = %lor.lhs.false307
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([484 x i8], [484 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.26, i32 0, i32 0), i32 2535), !dbg !9813
  call void @abort() #8, !dbg !9816
  unreachable, !dbg !9818

if.end312:                                        ; preds = %lor.lhs.false307, %lor.lhs.false303, %lor.lhs.false299, %lor.lhs.false295, %lor.lhs.false291, %lor.lhs.false287, %lor.lhs.false283, %lor.lhs.false279, %lor.lhs.false275, %lor.lhs.false271, %lor.lhs.false, %do.body
  br label %do.end, !dbg !9819

do.end:                                           ; preds = %if.end312
  %274 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9821
  %avctx313 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %274, i32 0, i32 1, !dbg !9822
  %275 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx313, align 8, !dbg !9822
  %pix_fmt314 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %275, i32 0, i32 25, !dbg !9823
  %276 = load i32, i32* %pix_fmt314, align 8, !dbg !9823
  %call315 = call i32 @av_pix_fmt_get_chroma_sub_sample(i32 %276, i32* %hshift, i32* %vshift), !dbg !9824
  store i32 %call315, i32* %ret, align 4, !dbg !9825
  %277 = load i32, i32* %ret, align 4, !dbg !9826
  %tobool316 = icmp ne i32 %277, 0, !dbg !9826
  br i1 %tobool316, label %if.then317, label %if.end318, !dbg !9828

if.then317:                                       ; preds = %do.end
  %278 = load i32, i32* %ret, align 4, !dbg !9829
  store i32 %278, i32* %retval, align 4, !dbg !9830
  br label %return, !dbg !9830

if.end318:                                        ; preds = %do.end
  br label %do.body319, !dbg !9831, !llvm.loop !9832

do.body319:                                       ; preds = %if.end318
  %279 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9833
  %nb_components = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %279, i32 0, i32 36, !dbg !9837
  %280 = load i32, i32* %nb_components, align 32, !dbg !9837
  %281 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9838
  %picture_ptr320 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %281, i32 0, i32 53, !dbg !9839
  %282 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr320, align 8, !dbg !9839
  %format = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %282, i32 0, i32 6, !dbg !9840
  %283 = load i32, i32* %format, align 4, !dbg !9840
  %call321 = call i32 @av_pix_fmt_count_planes(i32 %283), !dbg !9841
  %cmp322 = icmp eq i32 %280, %call321, !dbg !9842
  br i1 %cmp322, label %if.end325, label %if.then324, !dbg !9843

if.then324:                                       ; preds = %do.body319
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.26, i32 0, i32 0), i32 2540), !dbg !9844
  call void @abort() #8, !dbg !9847
  unreachable, !dbg !9849

if.end325:                                        ; preds = %do.body319
  br label %do.end326, !dbg !9850

do.end326:                                        ; preds = %if.end325
  store i32 0, i32* %p, align 4, !dbg !9852
  br label %for.cond, !dbg !9854

for.cond:                                         ; preds = %for.inc516, %do.end326
  %284 = load i32, i32* %p, align 4, !dbg !9855
  %285 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9858
  %nb_components327 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %285, i32 0, i32 36, !dbg !9859
  %286 = load i32, i32* %nb_components327, align 32, !dbg !9859
  %cmp328 = icmp slt i32 %284, %286, !dbg !9860
  br i1 %cmp328, label %for.body, label %for.end518, !dbg !9861

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %line, metadata !9862, metadata !2073), !dbg !9864
  %287 = load i32, i32* %p, align 4, !dbg !9865
  %idxprom = sext i32 %287 to i64, !dbg !9866
  %288 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9866
  %picture_ptr330 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %288, i32 0, i32 53, !dbg !9867
  %289 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr330, align 8, !dbg !9867
  %data331 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %289, i32 0, i32 0, !dbg !9868
  %arrayidx332 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data331, i64 0, i64 %idxprom, !dbg !9866
  %290 = load i8*, i8** %arrayidx332, align 8, !dbg !9866
  store i8* %290, i8** %line, align 8, !dbg !9864
  call void @llvm.dbg.declare(metadata i32* %w, metadata !9869, metadata !2073), !dbg !9870
  %291 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9871
  %width333 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %291, i32 0, i32 32, !dbg !9872
  %292 = load i32, i32* %width333, align 16, !dbg !9872
  store i32 %292, i32* %w, align 4, !dbg !9870
  call void @llvm.dbg.declare(metadata i32* %h, metadata !9873, metadata !2073), !dbg !9874
  %293 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9875
  %height = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %293, i32 0, i32 33, !dbg !9876
  %294 = load i32, i32* %height, align 4, !dbg !9876
  store i32 %294, i32* %h, align 4, !dbg !9874
  %295 = load i32, i32* %p, align 4, !dbg !9877
  %idxprom334 = sext i32 %295 to i64, !dbg !9879
  %296 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9879
  %upscale_h335 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %296, i32 0, i32 18, !dbg !9880
  %arrayidx336 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_h335, i64 0, i64 %idxprom334, !dbg !9879
  %297 = load i8, i8* %arrayidx336, align 1, !dbg !9879
  %tobool337 = icmp ne i8 %297, 0, !dbg !9879
  br i1 %tobool337, label %if.end339, label %if.then338, !dbg !9881

if.then338:                                       ; preds = %for.body
  br label %for.inc516, !dbg !9882

if.end339:                                        ; preds = %for.body
  %298 = load i32, i32* %p, align 4, !dbg !9883
  %cmp340 = icmp eq i32 %298, 1, !dbg !9885
  br i1 %cmp340, label %if.then345, label %lor.lhs.false342, !dbg !9886

lor.lhs.false342:                                 ; preds = %if.end339
  %299 = load i32, i32* %p, align 4, !dbg !9887
  %cmp343 = icmp eq i32 %299, 2, !dbg !9889
  br i1 %cmp343, label %if.then345, label %if.end350, !dbg !9890

if.then345:                                       ; preds = %lor.lhs.false342, %if.end339
  %300 = load i32, i32* %w, align 4, !dbg !9891
  %sub = sub nsw i32 0, %300, !dbg !9893
  %301 = load i32, i32* %hshift, align 4, !dbg !9894
  %shr = ashr i32 %sub, %301, !dbg !9895
  %sub346 = sub nsw i32 0, %shr, !dbg !9896
  store i32 %sub346, i32* %w, align 4, !dbg !9897
  %302 = load i32, i32* %h, align 4, !dbg !9898
  %sub347 = sub nsw i32 0, %302, !dbg !9899
  %303 = load i32, i32* %vshift, align 4, !dbg !9900
  %shr348 = ashr i32 %sub347, %303, !dbg !9901
  %sub349 = sub nsw i32 0, %shr348, !dbg !9902
  store i32 %sub349, i32* %h, align 4, !dbg !9903
  br label %if.end350, !dbg !9904

if.end350:                                        ; preds = %if.then345, %lor.lhs.false342
  %304 = load i32, i32* %p, align 4, !dbg !9905
  %idxprom351 = sext i32 %304 to i64, !dbg !9907
  %305 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9907
  %upscale_v = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %305, i32 0, i32 19, !dbg !9908
  %arrayidx352 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_v, i64 0, i64 %idxprom351, !dbg !9907
  %306 = load i8, i8* %arrayidx352, align 1, !dbg !9907
  %conv353 = zext i8 %306 to i32, !dbg !9907
  %cmp354 = icmp eq i32 %conv353, 1, !dbg !9909
  br i1 %cmp354, label %if.then356, label %if.end359, !dbg !9910

if.then356:                                       ; preds = %if.end350
  %307 = load i32, i32* %h, align 4, !dbg !9911
  %add357 = add nsw i32 %307, 1, !dbg !9912
  %shr358 = ashr i32 %add357, 1, !dbg !9913
  store i32 %shr358, i32* %h, align 4, !dbg !9914
  br label %if.end359, !dbg !9915

if.end359:                                        ; preds = %if.then356, %if.end350
  br label %do.body360, !dbg !9916, !llvm.loop !9917

do.body360:                                       ; preds = %if.end359
  %308 = load i32, i32* %w, align 4, !dbg !9918
  %cmp361 = icmp sgt i32 %308, 0, !dbg !9922
  br i1 %cmp361, label %if.end364, label %if.then363, !dbg !9923

if.then363:                                       ; preds = %do.body360
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.26, i32 0, i32 0), i32 2553), !dbg !9924
  call void @abort() #8, !dbg !9927
  unreachable, !dbg !9929

if.end364:                                        ; preds = %do.body360
  br label %do.end365, !dbg !9930

do.end365:                                        ; preds = %if.end364
  store i32 0, i32* %i, align 4, !dbg !9932
  br label %for.cond366, !dbg !9934

for.cond366:                                      ; preds = %for.inc513, %do.end365
  %309 = load i32, i32* %i, align 4, !dbg !9935
  %310 = load i32, i32* %h, align 4, !dbg !9938
  %cmp367 = icmp slt i32 %309, %310, !dbg !9939
  br i1 %cmp367, label %for.body369, label %for.end515, !dbg !9940

for.body369:                                      ; preds = %for.cond366
  %311 = load i32, i32* %p, align 4, !dbg !9941
  %idxprom370 = sext i32 %311 to i64, !dbg !9944
  %312 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !9944
  %upscale_h371 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %312, i32 0, i32 18, !dbg !9945
  %arrayidx372 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_h371, i64 0, i64 %idxprom370, !dbg !9944
  %313 = load i8, i8* %arrayidx372, align 1, !dbg !9944
  %conv373 = zext i8 %313 to i32, !dbg !9944
  %cmp374 = icmp eq i32 %conv373, 1, !dbg !9946
  br i1 %cmp374, label %if.then376, label %if.else432, !dbg !9947

if.then376:                                       ; preds = %for.body369
  %314 = load i32, i32* %is16bit, align 4, !dbg !9948
  %tobool377 = icmp ne i32 %314, 0, !dbg !9948
  br i1 %tobool377, label %if.then378, label %if.else386, !dbg !9951

if.then378:                                       ; preds = %if.then376
  %315 = load i32, i32* %w, align 4, !dbg !9952
  %sub379 = sub nsw i32 %315, 1, !dbg !9954
  %div380 = sdiv i32 %sub379, 2, !dbg !9955
  %idxprom381 = sext i32 %div380 to i64, !dbg !9956
  %316 = load i8*, i8** %line, align 8, !dbg !9957
  %317 = bitcast i8* %316 to i16*, !dbg !9956
  %arrayidx382 = getelementptr inbounds i16, i16* %317, i64 %idxprom381, !dbg !9956
  %318 = load i16, i16* %arrayidx382, align 2, !dbg !9956
  %319 = load i32, i32* %w, align 4, !dbg !9958
  %sub383 = sub nsw i32 %319, 1, !dbg !9959
  %idxprom384 = sext i32 %sub383 to i64, !dbg !9960
  %320 = load i8*, i8** %line, align 8, !dbg !9961
  %321 = bitcast i8* %320 to i16*, !dbg !9960
  %arrayidx385 = getelementptr inbounds i16, i16* %321, i64 %idxprom384, !dbg !9960
  store i16 %318, i16* %arrayidx385, align 2, !dbg !9962
  br label %if.end394, !dbg !9960

if.else386:                                       ; preds = %if.then376
  %322 = load i32, i32* %w, align 4, !dbg !9963
  %sub387 = sub nsw i32 %322, 1, !dbg !9964
  %div388 = sdiv i32 %sub387, 2, !dbg !9965
  %idxprom389 = sext i32 %div388 to i64, !dbg !9966
  %323 = load i8*, i8** %line, align 8, !dbg !9966
  %arrayidx390 = getelementptr inbounds i8, i8* %323, i64 %idxprom389, !dbg !9966
  %324 = load i8, i8* %arrayidx390, align 1, !dbg !9966
  %325 = load i32, i32* %w, align 4, !dbg !9967
  %sub391 = sub nsw i32 %325, 1, !dbg !9968
  %idxprom392 = sext i32 %sub391 to i64, !dbg !9969
  %326 = load i8*, i8** %line, align 8, !dbg !9969
  %arrayidx393 = getelementptr inbounds i8, i8* %326, i64 %idxprom392, !dbg !9969
  store i8 %324, i8* %arrayidx393, align 1, !dbg !9970
  br label %if.end394

if.end394:                                        ; preds = %if.else386, %if.then378
  %327 = load i32, i32* %w, align 4, !dbg !9971
  %sub395 = sub nsw i32 %327, 2, !dbg !9973
  store i32 %sub395, i32* %index, align 4, !dbg !9974
  br label %for.cond396, !dbg !9975

for.cond396:                                      ; preds = %for.inc, %if.end394
  %328 = load i32, i32* %index, align 4, !dbg !9976
  %cmp397 = icmp sgt i32 %328, 0, !dbg !9979
  br i1 %cmp397, label %for.body399, label %for.end, !dbg !9980

for.body399:                                      ; preds = %for.cond396
  %329 = load i32, i32* %is16bit, align 4, !dbg !9981
  %tobool400 = icmp ne i32 %329, 0, !dbg !9981
  br i1 %tobool400, label %if.then401, label %if.else416, !dbg !9984

if.then401:                                       ; preds = %for.body399
  %330 = load i32, i32* %index, align 4, !dbg !9985
  %div402 = sdiv i32 %330, 2, !dbg !9986
  %idxprom403 = sext i32 %div402 to i64, !dbg !9987
  %331 = load i8*, i8** %line, align 8, !dbg !9988
  %332 = bitcast i8* %331 to i16*, !dbg !9987
  %arrayidx404 = getelementptr inbounds i16, i16* %332, i64 %idxprom403, !dbg !9987
  %333 = load i16, i16* %arrayidx404, align 2, !dbg !9987
  %conv405 = zext i16 %333 to i32, !dbg !9987
  %334 = load i32, i32* %index, align 4, !dbg !9989
  %add406 = add nsw i32 %334, 1, !dbg !9990
  %div407 = sdiv i32 %add406, 2, !dbg !9991
  %idxprom408 = sext i32 %div407 to i64, !dbg !9992
  %335 = load i8*, i8** %line, align 8, !dbg !9993
  %336 = bitcast i8* %335 to i16*, !dbg !9992
  %arrayidx409 = getelementptr inbounds i16, i16* %336, i64 %idxprom408, !dbg !9992
  %337 = load i16, i16* %arrayidx409, align 2, !dbg !9992
  %conv410 = zext i16 %337 to i32, !dbg !9992
  %add411 = add nsw i32 %conv405, %conv410, !dbg !9994
  %shr412 = ashr i32 %add411, 1, !dbg !9995
  %conv413 = trunc i32 %shr412 to i16, !dbg !9996
  %338 = load i32, i32* %index, align 4, !dbg !9997
  %idxprom414 = sext i32 %338 to i64, !dbg !9998
  %339 = load i8*, i8** %line, align 8, !dbg !9999
  %340 = bitcast i8* %339 to i16*, !dbg !9998
  %arrayidx415 = getelementptr inbounds i16, i16* %340, i64 %idxprom414, !dbg !9998
  store i16 %conv413, i16* %arrayidx415, align 2, !dbg !10000
  br label %if.end431, !dbg !9998

if.else416:                                       ; preds = %for.body399
  %341 = load i32, i32* %index, align 4, !dbg !10001
  %div417 = sdiv i32 %341, 2, !dbg !10002
  %idxprom418 = sext i32 %div417 to i64, !dbg !10003
  %342 = load i8*, i8** %line, align 8, !dbg !10003
  %arrayidx419 = getelementptr inbounds i8, i8* %342, i64 %idxprom418, !dbg !10003
  %343 = load i8, i8* %arrayidx419, align 1, !dbg !10003
  %conv420 = zext i8 %343 to i32, !dbg !10003
  %344 = load i32, i32* %index, align 4, !dbg !10004
  %add421 = add nsw i32 %344, 1, !dbg !10005
  %div422 = sdiv i32 %add421, 2, !dbg !10006
  %idxprom423 = sext i32 %div422 to i64, !dbg !10007
  %345 = load i8*, i8** %line, align 8, !dbg !10007
  %arrayidx424 = getelementptr inbounds i8, i8* %345, i64 %idxprom423, !dbg !10007
  %346 = load i8, i8* %arrayidx424, align 1, !dbg !10007
  %conv425 = zext i8 %346 to i32, !dbg !10007
  %add426 = add nsw i32 %conv420, %conv425, !dbg !10008
  %shr427 = ashr i32 %add426, 1, !dbg !10009
  %conv428 = trunc i32 %shr427 to i8, !dbg !10010
  %347 = load i32, i32* %index, align 4, !dbg !10011
  %idxprom429 = sext i32 %347 to i64, !dbg !10012
  %348 = load i8*, i8** %line, align 8, !dbg !10012
  %arrayidx430 = getelementptr inbounds i8, i8* %348, i64 %idxprom429, !dbg !10012
  store i8 %conv428, i8* %arrayidx430, align 1, !dbg !10013
  br label %if.end431

if.end431:                                        ; preds = %if.else416, %if.then401
  br label %for.inc, !dbg !10014

for.inc:                                          ; preds = %if.end431
  %349 = load i32, i32* %index, align 4, !dbg !10015
  %dec = add nsw i32 %349, -1, !dbg !10015
  store i32 %dec, i32* %index, align 4, !dbg !10015
  br label %for.cond396, !dbg !10017, !llvm.loop !10018

for.end:                                          ; preds = %for.cond396
  br label %if.end508, !dbg !10020

if.else432:                                       ; preds = %for.body369
  %350 = load i32, i32* %p, align 4, !dbg !10021
  %idxprom433 = sext i32 %350 to i64, !dbg !10024
  %351 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10024
  %upscale_h434 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %351, i32 0, i32 18, !dbg !10025
  %arrayidx435 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_h434, i64 0, i64 %idxprom433, !dbg !10024
  %352 = load i8, i8* %arrayidx435, align 1, !dbg !10024
  %conv436 = zext i8 %352 to i32, !dbg !10024
  %cmp437 = icmp eq i32 %conv436, 2, !dbg !10026
  br i1 %cmp437, label %if.then439, label %if.end507, !dbg !10024

if.then439:                                       ; preds = %if.else432
  %353 = load i32, i32* %is16bit, align 4, !dbg !10027
  %tobool440 = icmp ne i32 %353, 0, !dbg !10027
  br i1 %tobool440, label %if.then441, label %if.else459, !dbg !10030

if.then441:                                       ; preds = %if.then439
  %354 = load i32, i32* %w, align 4, !dbg !10031
  %sub442 = sub nsw i32 %354, 1, !dbg !10033
  %div443 = sdiv i32 %sub442, 3, !dbg !10034
  %idxprom444 = sext i32 %div443 to i64, !dbg !10035
  %355 = load i8*, i8** %line, align 8, !dbg !10036
  %356 = bitcast i8* %355 to i16*, !dbg !10035
  %arrayidx445 = getelementptr inbounds i16, i16* %356, i64 %idxprom444, !dbg !10035
  %357 = load i16, i16* %arrayidx445, align 2, !dbg !10035
  %358 = load i32, i32* %w, align 4, !dbg !10037
  %sub446 = sub nsw i32 %358, 1, !dbg !10038
  %idxprom447 = sext i32 %sub446 to i64, !dbg !10039
  %359 = load i8*, i8** %line, align 8, !dbg !10040
  %360 = bitcast i8* %359 to i16*, !dbg !10039
  %arrayidx448 = getelementptr inbounds i16, i16* %360, i64 %idxprom447, !dbg !10039
  store i16 %357, i16* %arrayidx448, align 2, !dbg !10041
  %361 = load i32, i32* %w, align 4, !dbg !10042
  %cmp449 = icmp sgt i32 %361, 1, !dbg !10044
  br i1 %cmp449, label %if.then451, label %if.end458, !dbg !10045

if.then451:                                       ; preds = %if.then441
  %362 = load i32, i32* %w, align 4, !dbg !10046
  %sub452 = sub nsw i32 %362, 1, !dbg !10047
  %idxprom453 = sext i32 %sub452 to i64, !dbg !10048
  %363 = load i8*, i8** %line, align 8, !dbg !10049
  %364 = bitcast i8* %363 to i16*, !dbg !10048
  %arrayidx454 = getelementptr inbounds i16, i16* %364, i64 %idxprom453, !dbg !10048
  %365 = load i16, i16* %arrayidx454, align 2, !dbg !10048
  %366 = load i32, i32* %w, align 4, !dbg !10050
  %sub455 = sub nsw i32 %366, 2, !dbg !10051
  %idxprom456 = sext i32 %sub455 to i64, !dbg !10052
  %367 = load i8*, i8** %line, align 8, !dbg !10053
  %368 = bitcast i8* %367 to i16*, !dbg !10052
  %arrayidx457 = getelementptr inbounds i16, i16* %368, i64 %idxprom456, !dbg !10052
  store i16 %365, i16* %arrayidx457, align 2, !dbg !10054
  br label %if.end458, !dbg !10052

if.end458:                                        ; preds = %if.then451, %if.then441
  br label %if.end477, !dbg !10055

if.else459:                                       ; preds = %if.then439
  %369 = load i32, i32* %w, align 4, !dbg !10056
  %sub460 = sub nsw i32 %369, 1, !dbg !10058
  %div461 = sdiv i32 %sub460, 3, !dbg !10059
  %idxprom462 = sext i32 %div461 to i64, !dbg !10060
  %370 = load i8*, i8** %line, align 8, !dbg !10060
  %arrayidx463 = getelementptr inbounds i8, i8* %370, i64 %idxprom462, !dbg !10060
  %371 = load i8, i8* %arrayidx463, align 1, !dbg !10060
  %372 = load i32, i32* %w, align 4, !dbg !10061
  %sub464 = sub nsw i32 %372, 1, !dbg !10062
  %idxprom465 = sext i32 %sub464 to i64, !dbg !10063
  %373 = load i8*, i8** %line, align 8, !dbg !10063
  %arrayidx466 = getelementptr inbounds i8, i8* %373, i64 %idxprom465, !dbg !10063
  store i8 %371, i8* %arrayidx466, align 1, !dbg !10064
  %374 = load i32, i32* %w, align 4, !dbg !10065
  %cmp467 = icmp sgt i32 %374, 1, !dbg !10067
  br i1 %cmp467, label %if.then469, label %if.end476, !dbg !10068

if.then469:                                       ; preds = %if.else459
  %375 = load i32, i32* %w, align 4, !dbg !10069
  %sub470 = sub nsw i32 %375, 1, !dbg !10070
  %idxprom471 = sext i32 %sub470 to i64, !dbg !10071
  %376 = load i8*, i8** %line, align 8, !dbg !10071
  %arrayidx472 = getelementptr inbounds i8, i8* %376, i64 %idxprom471, !dbg !10071
  %377 = load i8, i8* %arrayidx472, align 1, !dbg !10071
  %378 = load i32, i32* %w, align 4, !dbg !10072
  %sub473 = sub nsw i32 %378, 2, !dbg !10073
  %idxprom474 = sext i32 %sub473 to i64, !dbg !10074
  %379 = load i8*, i8** %line, align 8, !dbg !10074
  %arrayidx475 = getelementptr inbounds i8, i8* %379, i64 %idxprom474, !dbg !10074
  store i8 %377, i8* %arrayidx475, align 1, !dbg !10075
  br label %if.end476, !dbg !10074

if.end476:                                        ; preds = %if.then469, %if.else459
  br label %if.end477

if.end477:                                        ; preds = %if.end476, %if.end458
  %380 = load i32, i32* %w, align 4, !dbg !10076
  %sub478 = sub nsw i32 %380, 3, !dbg !10078
  store i32 %sub478, i32* %index, align 4, !dbg !10079
  br label %for.cond479, !dbg !10080

for.cond479:                                      ; preds = %for.inc504, %if.end477
  %381 = load i32, i32* %index, align 4, !dbg !10081
  %cmp480 = icmp sgt i32 %381, 0, !dbg !10084
  br i1 %cmp480, label %for.body482, label %for.end506, !dbg !10085

for.body482:                                      ; preds = %for.cond479
  %382 = load i32, i32* %index, align 4, !dbg !10086
  %div483 = sdiv i32 %382, 3, !dbg !10088
  %idxprom484 = sext i32 %div483 to i64, !dbg !10089
  %383 = load i8*, i8** %line, align 8, !dbg !10089
  %arrayidx485 = getelementptr inbounds i8, i8* %383, i64 %idxprom484, !dbg !10089
  %384 = load i8, i8* %arrayidx485, align 1, !dbg !10089
  %conv486 = zext i8 %384 to i32, !dbg !10089
  %385 = load i32, i32* %index, align 4, !dbg !10090
  %add487 = add nsw i32 %385, 1, !dbg !10091
  %div488 = sdiv i32 %add487, 3, !dbg !10092
  %idxprom489 = sext i32 %div488 to i64, !dbg !10093
  %386 = load i8*, i8** %line, align 8, !dbg !10093
  %arrayidx490 = getelementptr inbounds i8, i8* %386, i64 %idxprom489, !dbg !10093
  %387 = load i8, i8* %arrayidx490, align 1, !dbg !10093
  %conv491 = zext i8 %387 to i32, !dbg !10093
  %add492 = add nsw i32 %conv486, %conv491, !dbg !10094
  %388 = load i32, i32* %index, align 4, !dbg !10095
  %add493 = add nsw i32 %388, 2, !dbg !10096
  %div494 = sdiv i32 %add493, 3, !dbg !10097
  %idxprom495 = sext i32 %div494 to i64, !dbg !10098
  %389 = load i8*, i8** %line, align 8, !dbg !10098
  %arrayidx496 = getelementptr inbounds i8, i8* %389, i64 %idxprom495, !dbg !10098
  %390 = load i8, i8* %arrayidx496, align 1, !dbg !10098
  %conv497 = zext i8 %390 to i32, !dbg !10098
  %add498 = add nsw i32 %add492, %conv497, !dbg !10099
  %add499 = add nsw i32 %add498, 1, !dbg !10100
  %div500 = sdiv i32 %add499, 3, !dbg !10101
  %conv501 = trunc i32 %div500 to i8, !dbg !10102
  %391 = load i32, i32* %index, align 4, !dbg !10103
  %idxprom502 = sext i32 %391 to i64, !dbg !10104
  %392 = load i8*, i8** %line, align 8, !dbg !10104
  %arrayidx503 = getelementptr inbounds i8, i8* %392, i64 %idxprom502, !dbg !10104
  store i8 %conv501, i8* %arrayidx503, align 1, !dbg !10105
  br label %for.inc504, !dbg !10106

for.inc504:                                       ; preds = %for.body482
  %393 = load i32, i32* %index, align 4, !dbg !10107
  %dec505 = add nsw i32 %393, -1, !dbg !10107
  store i32 %dec505, i32* %index, align 4, !dbg !10107
  br label %for.cond479, !dbg !10109, !llvm.loop !10110

for.end506:                                       ; preds = %for.cond479
  br label %if.end507, !dbg !10112

if.end507:                                        ; preds = %for.end506, %if.else432
  br label %if.end508

if.end508:                                        ; preds = %if.end507, %for.end
  %394 = load i32, i32* %p, align 4, !dbg !10113
  %idxprom509 = sext i32 %394 to i64, !dbg !10114
  %395 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10114
  %linesize = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %395, i32 0, i32 55, !dbg !10115
  %arrayidx510 = getelementptr inbounds [4 x i32], [4 x i32]* %linesize, i64 0, i64 %idxprom509, !dbg !10114
  %396 = load i32, i32* %arrayidx510, align 4, !dbg !10114
  %397 = load i8*, i8** %line, align 8, !dbg !10116
  %idx.ext511 = sext i32 %396 to i64, !dbg !10116
  %add.ptr512 = getelementptr inbounds i8, i8* %397, i64 %idx.ext511, !dbg !10116
  store i8* %add.ptr512, i8** %line, align 8, !dbg !10116
  br label %for.inc513, !dbg !10117

for.inc513:                                       ; preds = %if.end508
  %398 = load i32, i32* %i, align 4, !dbg !10118
  %inc514 = add nsw i32 %398, 1, !dbg !10118
  store i32 %inc514, i32* %i, align 4, !dbg !10118
  br label %for.cond366, !dbg !10120, !llvm.loop !10121

for.end515:                                       ; preds = %for.cond366
  br label %for.inc516, !dbg !10123

for.inc516:                                       ; preds = %for.end515, %if.then338
  %399 = load i32, i32* %p, align 4, !dbg !10124
  %inc517 = add nsw i32 %399, 1, !dbg !10124
  store i32 %inc517, i32* %p, align 4, !dbg !10124
  br label %for.cond, !dbg !10126, !llvm.loop !10127

for.end518:                                       ; preds = %for.cond
  br label %if.end519, !dbg !10129

if.end519:                                        ; preds = %for.end518, %the_end
  %400 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10130
  %upscale_v520 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %400, i32 0, i32 19, !dbg !10131
  %arraydecay521 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_v520, i32 0, i32 0, !dbg !10132
  %401 = bitcast i8* %arraydecay521 to %union.unaligned_32*, !dbg !10132
  %l522 = bitcast %union.unaligned_32* %401 to i32*, !dbg !10132
  %402 = load i32, i32* %l522, align 4, !dbg !10132
  store i32 %402, i32* %x.addr.i1110, align 4, !dbg !10133
  %403 = load i32, i32* %x.addr.i1110, align 4, !dbg !10134
  %shl.i1111 = shl i32 %403, 8, !dbg !10135
  %and.i1112 = and i32 %shl.i1111, 65280, !dbg !10136
  %404 = load i32, i32* %x.addr.i1110, align 4, !dbg !10137
  %shr.i1113 = lshr i32 %404, 8, !dbg !10138
  %and1.i1114 = and i32 %shr.i1113, 255, !dbg !10139
  %or.i1115 = or i32 %and.i1112, %and1.i1114, !dbg !10140
  %shl2.i1116 = shl i32 %or.i1115, 16, !dbg !10141
  %405 = load i32, i32* %x.addr.i1110, align 4, !dbg !10142
  %shr3.i1117 = lshr i32 %405, 16, !dbg !10143
  %shl4.i1118 = shl i32 %shr3.i1117, 8, !dbg !10144
  %and5.i1119 = and i32 %shl4.i1118, 65280, !dbg !10145
  %406 = load i32, i32* %x.addr.i1110, align 4, !dbg !10146
  %shr6.i1120 = lshr i32 %406, 16, !dbg !10147
  %shr7.i1121 = lshr i32 %shr6.i1120, 8, !dbg !10148
  %and8.i1122 = and i32 %shr7.i1121, 255, !dbg !10149
  %or9.i1123 = or i32 %and5.i1119, %and8.i1122, !dbg !10150
  %or10.i1124 = or i32 %shl2.i1116, %or9.i1123, !dbg !10151
  %tobool524 = icmp ne i32 %or10.i1124, 0, !dbg !10133
  br i1 %tobool524, label %if.then525, label %if.end729, !dbg !10152

if.then525:                                       ; preds = %if.end519
  call void @llvm.dbg.declare(metadata i32* %p526, metadata !10153, metadata !2073), !dbg !10155
  br label %do.body527, !dbg !10156, !llvm.loop !10157

do.body527:                                       ; preds = %if.then525
  %407 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !10158
  %pix_fmt528 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %407, i32 0, i32 25, !dbg !10162
  %408 = load i32, i32* %pix_fmt528, align 8, !dbg !10162
  %cmp529 = icmp eq i32 %408, 14, !dbg !10163
  br i1 %cmp529, label %if.end580, label %lor.lhs.false531, !dbg !10164

lor.lhs.false531:                                 ; preds = %do.body527
  %409 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !10165
  %pix_fmt532 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %409, i32 0, i32 25, !dbg !10167
  %410 = load i32, i32* %pix_fmt532, align 8, !dbg !10167
  %cmp533 = icmp eq i32 %410, 5, !dbg !10168
  br i1 %cmp533, label %if.end580, label %lor.lhs.false535, !dbg !10169

lor.lhs.false535:                                 ; preds = %lor.lhs.false531
  %411 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !10170
  %pix_fmt536 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %411, i32 0, i32 25, !dbg !10172
  %412 = load i32, i32* %pix_fmt536, align 8, !dbg !10172
  %cmp537 = icmp eq i32 %412, 13, !dbg !10173
  br i1 %cmp537, label %if.end580, label %lor.lhs.false539, !dbg !10174

lor.lhs.false539:                                 ; preds = %lor.lhs.false535
  %413 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !10175
  %pix_fmt540 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %413, i32 0, i32 25, !dbg !10177
  %414 = load i32, i32* %pix_fmt540, align 8, !dbg !10177
  %cmp541 = icmp eq i32 %414, 4, !dbg !10178
  br i1 %cmp541, label %if.end580, label %lor.lhs.false543, !dbg !10179

lor.lhs.false543:                                 ; preds = %lor.lhs.false539
  %415 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !10180
  %pix_fmt544 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %415, i32 0, i32 25, !dbg !10182
  %416 = load i32, i32* %pix_fmt544, align 8, !dbg !10182
  %cmp545 = icmp eq i32 %416, 12, !dbg !10183
  br i1 %cmp545, label %if.end580, label %lor.lhs.false547, !dbg !10184

lor.lhs.false547:                                 ; preds = %lor.lhs.false543
  %417 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !10185
  %pix_fmt548 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %417, i32 0, i32 25, !dbg !10187
  %418 = load i32, i32* %pix_fmt548, align 8, !dbg !10187
  %cmp549 = icmp eq i32 %418, 0, !dbg !10188
  br i1 %cmp549, label %if.end580, label %lor.lhs.false551, !dbg !10189

lor.lhs.false551:                                 ; preds = %lor.lhs.false547
  %419 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !10190
  %pix_fmt552 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %419, i32 0, i32 25, !dbg !10192
  %420 = load i32, i32* %pix_fmt552, align 8, !dbg !10192
  %cmp553 = icmp eq i32 %420, 31, !dbg !10193
  br i1 %cmp553, label %if.end580, label %lor.lhs.false555, !dbg !10194

lor.lhs.false555:                                 ; preds = %lor.lhs.false551
  %421 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !10195
  %pix_fmt556 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %421, i32 0, i32 25, !dbg !10197
  %422 = load i32, i32* %pix_fmt556, align 8, !dbg !10197
  %cmp557 = icmp eq i32 %422, 32, !dbg !10198
  br i1 %cmp557, label %if.end580, label %lor.lhs.false559, !dbg !10199

lor.lhs.false559:                                 ; preds = %lor.lhs.false555
  %423 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !10200
  %pix_fmt560 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %423, i32 0, i32 25, !dbg !10202
  %424 = load i32, i32* %pix_fmt560, align 8, !dbg !10202
  %cmp561 = icmp eq i32 %424, 81, !dbg !10203
  br i1 %cmp561, label %if.end580, label %lor.lhs.false563, !dbg !10204

lor.lhs.false563:                                 ; preds = %lor.lhs.false559
  %425 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !10205
  %pix_fmt564 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %425, i32 0, i32 25, !dbg !10207
  %426 = load i32, i32* %pix_fmt564, align 8, !dbg !10207
  %cmp565 = icmp eq i32 %426, 33, !dbg !10208
  br i1 %cmp565, label %if.end580, label %lor.lhs.false567, !dbg !10209

lor.lhs.false567:                                 ; preds = %lor.lhs.false563
  %427 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !10210
  %pix_fmt568 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %427, i32 0, i32 25, !dbg !10212
  %428 = load i32, i32* %pix_fmt568, align 8, !dbg !10212
  %cmp569 = icmp eq i32 %428, 95, !dbg !10213
  br i1 %cmp569, label %if.end580, label %lor.lhs.false571, !dbg !10214

lor.lhs.false571:                                 ; preds = %lor.lhs.false567
  %429 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !10215
  %pix_fmt572 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %429, i32 0, i32 25, !dbg !10217
  %430 = load i32, i32* %pix_fmt572, align 8, !dbg !10217
  %cmp573 = icmp eq i32 %430, 73, !dbg !10218
  br i1 %cmp573, label %if.end580, label %lor.lhs.false575, !dbg !10219

lor.lhs.false575:                                 ; preds = %lor.lhs.false571
  %431 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !10220
  %pix_fmt576 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %431, i32 0, i32 25, !dbg !10222
  %432 = load i32, i32* %pix_fmt576, align 8, !dbg !10222
  %cmp577 = icmp eq i32 %432, 113, !dbg !10223
  br i1 %cmp577, label %if.end580, label %if.then579, !dbg !10224

if.then579:                                       ; preds = %lor.lhs.false575
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([522 x i8], [522 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.26, i32 0, i32 0), i32 2597), !dbg !10225
  call void @abort() #8, !dbg !10228
  unreachable, !dbg !10230

if.end580:                                        ; preds = %lor.lhs.false575, %lor.lhs.false571, %lor.lhs.false567, %lor.lhs.false563, %lor.lhs.false559, %lor.lhs.false555, %lor.lhs.false551, %lor.lhs.false547, %lor.lhs.false543, %lor.lhs.false539, %lor.lhs.false535, %lor.lhs.false531, %do.body527
  br label %do.end581, !dbg !10231

do.end581:                                        ; preds = %if.end580
  %433 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10233
  %avctx582 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %433, i32 0, i32 1, !dbg !10234
  %434 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx582, align 8, !dbg !10234
  %pix_fmt583 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %434, i32 0, i32 25, !dbg !10235
  %435 = load i32, i32* %pix_fmt583, align 8, !dbg !10235
  %call584 = call i32 @av_pix_fmt_get_chroma_sub_sample(i32 %435, i32* %hshift, i32* %vshift), !dbg !10236
  store i32 %call584, i32* %ret, align 4, !dbg !10237
  %436 = load i32, i32* %ret, align 4, !dbg !10238
  %tobool585 = icmp ne i32 %436, 0, !dbg !10238
  br i1 %tobool585, label %if.then586, label %if.end587, !dbg !10240

if.then586:                                       ; preds = %do.end581
  %437 = load i32, i32* %ret, align 4, !dbg !10241
  store i32 %437, i32* %retval, align 4, !dbg !10242
  br label %return, !dbg !10242

if.end587:                                        ; preds = %do.end581
  br label %do.body588, !dbg !10243, !llvm.loop !10244

do.body588:                                       ; preds = %if.end587
  %438 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10245
  %nb_components589 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %438, i32 0, i32 36, !dbg !10249
  %439 = load i32, i32* %nb_components589, align 32, !dbg !10249
  %440 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10250
  %picture_ptr590 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %440, i32 0, i32 53, !dbg !10251
  %441 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr590, align 8, !dbg !10251
  %format591 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %441, i32 0, i32 6, !dbg !10252
  %442 = load i32, i32* %format591, align 4, !dbg !10252
  %call592 = call i32 @av_pix_fmt_count_planes(i32 %442), !dbg !10253
  %cmp593 = icmp eq i32 %439, %call592, !dbg !10254
  br i1 %cmp593, label %if.end596, label %if.then595, !dbg !10255

if.then595:                                       ; preds = %do.body588
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.26, i32 0, i32 0), i32 2602), !dbg !10256
  call void @abort() #8, !dbg !10259
  unreachable, !dbg !10261

if.end596:                                        ; preds = %do.body588
  br label %do.end597, !dbg !10262

do.end597:                                        ; preds = %if.end596
  store i32 0, i32* %p526, align 4, !dbg !10264
  br label %for.cond598, !dbg !10266

for.cond598:                                      ; preds = %for.inc726, %do.end597
  %443 = load i32, i32* %p526, align 4, !dbg !10267
  %444 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10270
  %nb_components599 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %444, i32 0, i32 36, !dbg !10271
  %445 = load i32, i32* %nb_components599, align 32, !dbg !10271
  %cmp600 = icmp slt i32 %443, %445, !dbg !10272
  br i1 %cmp600, label %for.body602, label %for.end728, !dbg !10273

for.body602:                                      ; preds = %for.cond598
  call void @llvm.dbg.declare(metadata i8** %dst, metadata !10274, metadata !2073), !dbg !10276
  call void @llvm.dbg.declare(metadata i32* %w603, metadata !10277, metadata !2073), !dbg !10278
  %446 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10279
  %width604 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %446, i32 0, i32 32, !dbg !10280
  %447 = load i32, i32* %width604, align 16, !dbg !10280
  store i32 %447, i32* %w603, align 4, !dbg !10278
  call void @llvm.dbg.declare(metadata i32* %h605, metadata !10281, metadata !2073), !dbg !10282
  %448 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10283
  %height606 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %448, i32 0, i32 33, !dbg !10284
  %449 = load i32, i32* %height606, align 4, !dbg !10284
  store i32 %449, i32* %h605, align 4, !dbg !10282
  %450 = load i32, i32* %p526, align 4, !dbg !10285
  %idxprom607 = sext i32 %450 to i64, !dbg !10287
  %451 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10287
  %upscale_v608 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %451, i32 0, i32 19, !dbg !10288
  %arrayidx609 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_v608, i64 0, i64 %idxprom607, !dbg !10287
  %452 = load i8, i8* %arrayidx609, align 1, !dbg !10287
  %tobool610 = icmp ne i8 %452, 0, !dbg !10287
  br i1 %tobool610, label %if.end612, label %if.then611, !dbg !10289

if.then611:                                       ; preds = %for.body602
  br label %for.inc726, !dbg !10290

if.end612:                                        ; preds = %for.body602
  %453 = load i32, i32* %p526, align 4, !dbg !10291
  %cmp613 = icmp eq i32 %453, 1, !dbg !10293
  br i1 %cmp613, label %if.then618, label %lor.lhs.false615, !dbg !10294

lor.lhs.false615:                                 ; preds = %if.end612
  %454 = load i32, i32* %p526, align 4, !dbg !10295
  %cmp616 = icmp eq i32 %454, 2, !dbg !10297
  br i1 %cmp616, label %if.then618, label %if.end625, !dbg !10298

if.then618:                                       ; preds = %lor.lhs.false615, %if.end612
  %455 = load i32, i32* %w603, align 4, !dbg !10299
  %sub619 = sub nsw i32 0, %455, !dbg !10301
  %456 = load i32, i32* %hshift, align 4, !dbg !10302
  %shr620 = ashr i32 %sub619, %456, !dbg !10303
  %sub621 = sub nsw i32 0, %shr620, !dbg !10304
  store i32 %sub621, i32* %w603, align 4, !dbg !10305
  %457 = load i32, i32* %h605, align 4, !dbg !10306
  %sub622 = sub nsw i32 0, %457, !dbg !10307
  %458 = load i32, i32* %vshift, align 4, !dbg !10308
  %shr623 = ashr i32 %sub622, %458, !dbg !10309
  %sub624 = sub nsw i32 0, %shr623, !dbg !10310
  store i32 %sub624, i32* %h605, align 4, !dbg !10311
  br label %if.end625, !dbg !10312

if.end625:                                        ; preds = %if.then618, %lor.lhs.false615
  %459 = load i32, i32* %h605, align 4, !dbg !10313
  %sub626 = sub nsw i32 %459, 1, !dbg !10314
  %460 = load i32, i32* %p526, align 4, !dbg !10315
  %idxprom627 = sext i32 %460 to i64, !dbg !10316
  %461 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10316
  %linesize628 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %461, i32 0, i32 55, !dbg !10317
  %arrayidx629 = getelementptr inbounds [4 x i32], [4 x i32]* %linesize628, i64 0, i64 %idxprom627, !dbg !10316
  %462 = load i32, i32* %arrayidx629, align 4, !dbg !10316
  %mul = mul nsw i32 %sub626, %462, !dbg !10318
  %idxprom630 = sext i32 %mul to i64, !dbg !10319
  %463 = load i32, i32* %p526, align 4, !dbg !10320
  %idxprom631 = sext i32 %463 to i64, !dbg !10321
  %464 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10321
  %picture_ptr632 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %464, i32 0, i32 53, !dbg !10322
  %465 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr632, align 8, !dbg !10322
  %data633 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %465, i32 0, i32 0, !dbg !10323
  %arrayidx634 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data633, i64 0, i64 %idxprom631, !dbg !10321
  %466 = load i8*, i8** %arrayidx634, align 8, !dbg !10321
  %arrayidx635 = getelementptr inbounds i8, i8* %466, i64 %idxprom630, !dbg !10319
  store i8* %arrayidx635, i8** %dst, align 8, !dbg !10324
  %467 = load i32, i32* %h605, align 4, !dbg !10325
  %sub636 = sub nsw i32 %467, 1, !dbg !10327
  store i32 %sub636, i32* %i, align 4, !dbg !10328
  br label %for.cond637, !dbg !10329

for.cond637:                                      ; preds = %for.inc723, %if.end625
  %468 = load i32, i32* %i, align 4, !dbg !10330
  %tobool638 = icmp ne i32 %468, 0, !dbg !10333
  br i1 %tobool638, label %for.body639, label %for.end725, !dbg !10333

for.body639:                                      ; preds = %for.cond637
  call void @llvm.dbg.declare(metadata i8** %src1, metadata !10334, metadata !2073), !dbg !10336
  %469 = load i32, i32* %i, align 4, !dbg !10337
  %470 = load i32, i32* %p526, align 4, !dbg !10338
  %idxprom640 = sext i32 %470 to i64, !dbg !10339
  %471 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10339
  %upscale_v641 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %471, i32 0, i32 19, !dbg !10340
  %arrayidx642 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_v641, i64 0, i64 %idxprom640, !dbg !10339
  %472 = load i8, i8* %arrayidx642, align 1, !dbg !10339
  %conv643 = zext i8 %472 to i32, !dbg !10339
  %mul644 = mul nsw i32 %469, %conv643, !dbg !10341
  %473 = load i32, i32* %p526, align 4, !dbg !10342
  %idxprom645 = sext i32 %473 to i64, !dbg !10343
  %474 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10343
  %upscale_v646 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %474, i32 0, i32 19, !dbg !10344
  %arrayidx647 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_v646, i64 0, i64 %idxprom645, !dbg !10343
  %475 = load i8, i8* %arrayidx647, align 1, !dbg !10343
  %conv648 = zext i8 %475 to i32, !dbg !10343
  %add649 = add nsw i32 %conv648, 1, !dbg !10345
  %div650 = sdiv i32 %mul644, %add649, !dbg !10346
  %476 = load i32, i32* %p526, align 4, !dbg !10347
  %idxprom651 = sext i32 %476 to i64, !dbg !10348
  %477 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10348
  %linesize652 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %477, i32 0, i32 55, !dbg !10349
  %arrayidx653 = getelementptr inbounds [4 x i32], [4 x i32]* %linesize652, i64 0, i64 %idxprom651, !dbg !10348
  %478 = load i32, i32* %arrayidx653, align 4, !dbg !10348
  %mul654 = mul nsw i32 %div650, %478, !dbg !10350
  %idxprom655 = sext i32 %mul654 to i64, !dbg !10351
  %479 = load i32, i32* %p526, align 4, !dbg !10352
  %idxprom656 = sext i32 %479 to i64, !dbg !10353
  %480 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10353
  %picture_ptr657 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %480, i32 0, i32 53, !dbg !10354
  %481 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr657, align 8, !dbg !10354
  %data658 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %481, i32 0, i32 0, !dbg !10355
  %arrayidx659 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data658, i64 0, i64 %idxprom656, !dbg !10353
  %482 = load i8*, i8** %arrayidx659, align 8, !dbg !10353
  %arrayidx660 = getelementptr inbounds i8, i8* %482, i64 %idxprom655, !dbg !10351
  store i8* %arrayidx660, i8** %src1, align 8, !dbg !10336
  call void @llvm.dbg.declare(metadata i8** %src2, metadata !10356, metadata !2073), !dbg !10357
  %483 = load i32, i32* %i, align 4, !dbg !10358
  %add661 = add nsw i32 %483, 1, !dbg !10359
  %484 = load i32, i32* %p526, align 4, !dbg !10360
  %idxprom662 = sext i32 %484 to i64, !dbg !10361
  %485 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10361
  %upscale_v663 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %485, i32 0, i32 19, !dbg !10362
  %arrayidx664 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_v663, i64 0, i64 %idxprom662, !dbg !10361
  %486 = load i8, i8* %arrayidx664, align 1, !dbg !10361
  %conv665 = zext i8 %486 to i32, !dbg !10361
  %mul666 = mul nsw i32 %add661, %conv665, !dbg !10363
  %487 = load i32, i32* %p526, align 4, !dbg !10364
  %idxprom667 = sext i32 %487 to i64, !dbg !10365
  %488 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10365
  %upscale_v668 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %488, i32 0, i32 19, !dbg !10366
  %arrayidx669 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_v668, i64 0, i64 %idxprom667, !dbg !10365
  %489 = load i8, i8* %arrayidx669, align 1, !dbg !10365
  %conv670 = zext i8 %489 to i32, !dbg !10365
  %add671 = add nsw i32 %conv670, 1, !dbg !10367
  %div672 = sdiv i32 %mul666, %add671, !dbg !10368
  %490 = load i32, i32* %p526, align 4, !dbg !10369
  %idxprom673 = sext i32 %490 to i64, !dbg !10370
  %491 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10370
  %linesize674 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %491, i32 0, i32 55, !dbg !10371
  %arrayidx675 = getelementptr inbounds [4 x i32], [4 x i32]* %linesize674, i64 0, i64 %idxprom673, !dbg !10370
  %492 = load i32, i32* %arrayidx675, align 4, !dbg !10370
  %mul676 = mul nsw i32 %div672, %492, !dbg !10372
  %idxprom677 = sext i32 %mul676 to i64, !dbg !10373
  %493 = load i32, i32* %p526, align 4, !dbg !10374
  %idxprom678 = sext i32 %493 to i64, !dbg !10375
  %494 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10375
  %picture_ptr679 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %494, i32 0, i32 53, !dbg !10376
  %495 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr679, align 8, !dbg !10376
  %data680 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %495, i32 0, i32 0, !dbg !10377
  %arrayidx681 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data680, i64 0, i64 %idxprom678, !dbg !10375
  %496 = load i8*, i8** %arrayidx681, align 8, !dbg !10375
  %arrayidx682 = getelementptr inbounds i8, i8* %496, i64 %idxprom677, !dbg !10373
  store i8* %arrayidx682, i8** %src2, align 8, !dbg !10357
  %497 = load i32, i32* %p526, align 4, !dbg !10378
  %idxprom683 = sext i32 %497 to i64, !dbg !10380
  %498 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10380
  %upscale_v684 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %498, i32 0, i32 19, !dbg !10381
  %arrayidx685 = getelementptr inbounds [4 x i8], [4 x i8]* %upscale_v684, i64 0, i64 %idxprom683, !dbg !10380
  %499 = load i8, i8* %arrayidx685, align 1, !dbg !10380
  %conv686 = zext i8 %499 to i32, !dbg !10380
  %cmp687 = icmp ne i32 %conv686, 2, !dbg !10382
  br i1 %cmp687, label %land.lhs.true689, label %if.else698, !dbg !10383

land.lhs.true689:                                 ; preds = %for.body639
  %500 = load i8*, i8** %src1, align 8, !dbg !10384
  %501 = load i8*, i8** %src2, align 8, !dbg !10386
  %cmp690 = icmp eq i8* %500, %501, !dbg !10387
  br i1 %cmp690, label %if.then696, label %lor.lhs.false692, !dbg !10388

lor.lhs.false692:                                 ; preds = %land.lhs.true689
  %502 = load i32, i32* %i, align 4, !dbg !10389
  %503 = load i32, i32* %h605, align 4, !dbg !10391
  %sub693 = sub nsw i32 %503, 1, !dbg !10392
  %cmp694 = icmp eq i32 %502, %sub693, !dbg !10393
  br i1 %cmp694, label %if.then696, label %if.else698, !dbg !10394

if.then696:                                       ; preds = %lor.lhs.false692, %land.lhs.true689
  %504 = load i8*, i8** %dst, align 8, !dbg !10395
  %505 = load i8*, i8** %src1, align 8, !dbg !10397
  %506 = load i32, i32* %w603, align 4, !dbg !10398
  %conv697 = sext i32 %506 to i64, !dbg !10398
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %504, i8* %505, i64 %conv697, i32 1, i1 false), !dbg !10399
  br label %if.end717, !dbg !10400

if.else698:                                       ; preds = %lor.lhs.false692, %for.body639
  store i32 0, i32* %index, align 4, !dbg !10401
  br label %for.cond699, !dbg !10404

for.cond699:                                      ; preds = %for.inc714, %if.else698
  %507 = load i32, i32* %index, align 4, !dbg !10405
  %508 = load i32, i32* %w603, align 4, !dbg !10408
  %cmp700 = icmp slt i32 %507, %508, !dbg !10409
  br i1 %cmp700, label %for.body702, label %for.end716, !dbg !10410

for.body702:                                      ; preds = %for.cond699
  %509 = load i32, i32* %index, align 4, !dbg !10411
  %idxprom703 = sext i32 %509 to i64, !dbg !10412
  %510 = load i8*, i8** %src1, align 8, !dbg !10412
  %arrayidx704 = getelementptr inbounds i8, i8* %510, i64 %idxprom703, !dbg !10412
  %511 = load i8, i8* %arrayidx704, align 1, !dbg !10412
  %conv705 = zext i8 %511 to i32, !dbg !10412
  %512 = load i32, i32* %index, align 4, !dbg !10413
  %idxprom706 = sext i32 %512 to i64, !dbg !10414
  %513 = load i8*, i8** %src2, align 8, !dbg !10414
  %arrayidx707 = getelementptr inbounds i8, i8* %513, i64 %idxprom706, !dbg !10414
  %514 = load i8, i8* %arrayidx707, align 1, !dbg !10414
  %conv708 = zext i8 %514 to i32, !dbg !10414
  %add709 = add nsw i32 %conv705, %conv708, !dbg !10415
  %shr710 = ashr i32 %add709, 1, !dbg !10416
  %conv711 = trunc i32 %shr710 to i8, !dbg !10417
  %515 = load i32, i32* %index, align 4, !dbg !10418
  %idxprom712 = sext i32 %515 to i64, !dbg !10419
  %516 = load i8*, i8** %dst, align 8, !dbg !10419
  %arrayidx713 = getelementptr inbounds i8, i8* %516, i64 %idxprom712, !dbg !10419
  store i8 %conv711, i8* %arrayidx713, align 1, !dbg !10420
  br label %for.inc714, !dbg !10419

for.inc714:                                       ; preds = %for.body702
  %517 = load i32, i32* %index, align 4, !dbg !10421
  %inc715 = add nsw i32 %517, 1, !dbg !10421
  store i32 %inc715, i32* %index, align 4, !dbg !10421
  br label %for.cond699, !dbg !10423, !llvm.loop !10424

for.end716:                                       ; preds = %for.cond699
  br label %if.end717

if.end717:                                        ; preds = %for.end716, %if.then696
  %518 = load i32, i32* %p526, align 4, !dbg !10426
  %idxprom718 = sext i32 %518 to i64, !dbg !10427
  %519 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10427
  %linesize719 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %519, i32 0, i32 55, !dbg !10428
  %arrayidx720 = getelementptr inbounds [4 x i32], [4 x i32]* %linesize719, i64 0, i64 %idxprom718, !dbg !10427
  %520 = load i32, i32* %arrayidx720, align 4, !dbg !10427
  %521 = load i8*, i8** %dst, align 8, !dbg !10429
  %idx.ext721 = sext i32 %520 to i64, !dbg !10429
  %idx.neg = sub i64 0, %idx.ext721, !dbg !10429
  %add.ptr722 = getelementptr inbounds i8, i8* %521, i64 %idx.neg, !dbg !10429
  store i8* %add.ptr722, i8** %dst, align 8, !dbg !10429
  br label %for.inc723, !dbg !10430

for.inc723:                                       ; preds = %if.end717
  %522 = load i32, i32* %i, align 4, !dbg !10431
  %dec724 = add nsw i32 %522, -1, !dbg !10431
  store i32 %dec724, i32* %i, align 4, !dbg !10431
  br label %for.cond637, !dbg !10433, !llvm.loop !10434

for.end725:                                       ; preds = %for.cond637
  br label %for.inc726, !dbg !10436

for.inc726:                                       ; preds = %for.end725, %if.then611
  %523 = load i32, i32* %p526, align 4, !dbg !10437
  %inc727 = add nsw i32 %523, 1, !dbg !10437
  store i32 %inc727, i32* %p526, align 4, !dbg !10437
  br label %for.cond598, !dbg !10439, !llvm.loop !10440

for.end728:                                       ; preds = %for.cond598
  br label %if.end729, !dbg !10442

if.end729:                                        ; preds = %for.end728, %if.end519
  %524 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10443
  %flipped = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %524, i32 0, i32 75, !dbg !10445
  %525 = load i32, i32* %flipped, align 8, !dbg !10445
  %tobool730 = icmp ne i32 %525, 0, !dbg !10443
  br i1 %tobool730, label %land.lhs.true731, label %if.end832, !dbg !10446

land.lhs.true731:                                 ; preds = %if.end729
  %526 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10447
  %rgb = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %526, i32 0, i32 17, !dbg !10449
  %527 = load i32, i32* %rgb, align 4, !dbg !10449
  %tobool732 = icmp ne i32 %527, 0, !dbg !10447
  br i1 %tobool732, label %if.end832, label %if.then733, !dbg !10450

if.then733:                                       ; preds = %land.lhs.true731
  call void @llvm.dbg.declare(metadata i32* %j, metadata !10451, metadata !2073), !dbg !10453
  %528 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10454
  %avctx734 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %528, i32 0, i32 1, !dbg !10455
  %529 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx734, align 8, !dbg !10455
  %pix_fmt735 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %529, i32 0, i32 25, !dbg !10456
  %530 = load i32, i32* %pix_fmt735, align 8, !dbg !10456
  %call736 = call i32 @av_pix_fmt_get_chroma_sub_sample(i32 %530, i32* %hshift, i32* %vshift), !dbg !10457
  store i32 %call736, i32* %ret, align 4, !dbg !10458
  %531 = load i32, i32* %ret, align 4, !dbg !10459
  %tobool737 = icmp ne i32 %531, 0, !dbg !10459
  br i1 %tobool737, label %if.then738, label %if.end739, !dbg !10461

if.then738:                                       ; preds = %if.then733
  %532 = load i32, i32* %ret, align 4, !dbg !10462
  store i32 %532, i32* %retval, align 4, !dbg !10463
  br label %return, !dbg !10463

if.end739:                                        ; preds = %if.then733
  br label %do.body740, !dbg !10464, !llvm.loop !10465

do.body740:                                       ; preds = %if.end739
  %533 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10466
  %nb_components741 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %533, i32 0, i32 36, !dbg !10470
  %534 = load i32, i32* %nb_components741, align 32, !dbg !10470
  %535 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10471
  %picture_ptr742 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %535, i32 0, i32 53, !dbg !10472
  %536 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr742, align 8, !dbg !10472
  %format743 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %536, i32 0, i32 6, !dbg !10473
  %537 = load i32, i32* %format743, align 4, !dbg !10473
  %call744 = call i32 @av_pix_fmt_count_planes(i32 %537), !dbg !10474
  %cmp745 = icmp eq i32 %534, %call744, !dbg !10475
  br i1 %cmp745, label %if.end748, label %if.then747, !dbg !10476

if.then747:                                       ; preds = %do.body740
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.26, i32 0, i32 0), i32 2633), !dbg !10477
  call void @abort() #8, !dbg !10480
  unreachable, !dbg !10482

if.end748:                                        ; preds = %do.body740
  br label %do.end749, !dbg !10483

do.end749:                                        ; preds = %if.end748
  store i32 0, i32* %index, align 4, !dbg !10485
  br label %for.cond750, !dbg !10487

for.cond750:                                      ; preds = %for.inc829, %do.end749
  %538 = load i32, i32* %index, align 4, !dbg !10488
  %539 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10491
  %nb_components751 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %539, i32 0, i32 36, !dbg !10492
  %540 = load i32, i32* %nb_components751, align 32, !dbg !10492
  %cmp752 = icmp slt i32 %538, %540, !dbg !10493
  br i1 %cmp752, label %for.body754, label %for.end831, !dbg !10494

for.body754:                                      ; preds = %for.cond750
  call void @llvm.dbg.declare(metadata i8** %dst755, metadata !10495, metadata !2073), !dbg !10497
  %541 = load i32, i32* %index, align 4, !dbg !10498
  %idxprom756 = sext i32 %541 to i64, !dbg !10499
  %542 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10499
  %picture_ptr757 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %542, i32 0, i32 53, !dbg !10500
  %543 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr757, align 8, !dbg !10500
  %data758 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %543, i32 0, i32 0, !dbg !10501
  %arrayidx759 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data758, i64 0, i64 %idxprom756, !dbg !10499
  %544 = load i8*, i8** %arrayidx759, align 8, !dbg !10499
  store i8* %544, i8** %dst755, align 8, !dbg !10497
  call void @llvm.dbg.declare(metadata i32* %w760, metadata !10502, metadata !2073), !dbg !10503
  %545 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10504
  %picture_ptr761 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %545, i32 0, i32 53, !dbg !10505
  %546 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr761, align 8, !dbg !10505
  %width762 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %546, i32 0, i32 3, !dbg !10506
  %547 = load i32, i32* %width762, align 8, !dbg !10506
  store i32 %547, i32* %w760, align 4, !dbg !10503
  call void @llvm.dbg.declare(metadata i32* %h763, metadata !10507, metadata !2073), !dbg !10508
  %548 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10509
  %picture_ptr764 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %548, i32 0, i32 53, !dbg !10510
  %549 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr764, align 8, !dbg !10510
  %height765 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %549, i32 0, i32 4, !dbg !10511
  %550 = load i32, i32* %height765, align 4, !dbg !10511
  store i32 %550, i32* %h763, align 4, !dbg !10508
  %551 = load i32, i32* %index, align 4, !dbg !10512
  %tobool766 = icmp ne i32 %551, 0, !dbg !10512
  br i1 %tobool766, label %land.lhs.true767, label %if.end777, !dbg !10514

land.lhs.true767:                                 ; preds = %for.body754
  %552 = load i32, i32* %index, align 4, !dbg !10515
  %cmp768 = icmp slt i32 %552, 3, !dbg !10517
  br i1 %cmp768, label %if.then770, label %if.end777, !dbg !10518

if.then770:                                       ; preds = %land.lhs.true767
  %553 = load i32, i32* %w760, align 4, !dbg !10519
  %sub771 = sub nsw i32 0, %553, !dbg !10521
  %554 = load i32, i32* %hshift, align 4, !dbg !10522
  %shr772 = ashr i32 %sub771, %554, !dbg !10523
  %sub773 = sub nsw i32 0, %shr772, !dbg !10524
  store i32 %sub773, i32* %w760, align 4, !dbg !10525
  %555 = load i32, i32* %h763, align 4, !dbg !10526
  %sub774 = sub nsw i32 0, %555, !dbg !10527
  %556 = load i32, i32* %vshift, align 4, !dbg !10528
  %shr775 = ashr i32 %sub774, %556, !dbg !10529
  %sub776 = sub nsw i32 0, %shr775, !dbg !10530
  store i32 %sub776, i32* %h763, align 4, !dbg !10531
  br label %if.end777, !dbg !10532

if.end777:                                        ; preds = %if.then770, %land.lhs.true767, %for.body754
  %557 = load i8*, i8** %dst755, align 8, !dbg !10533
  %tobool778 = icmp ne i8* %557, null, !dbg !10533
  br i1 %tobool778, label %if.then779, label %if.end828, !dbg !10535

if.then779:                                       ; preds = %if.end777
  call void @llvm.dbg.declare(metadata i8** %dst2, metadata !10536, metadata !2073), !dbg !10538
  %558 = load i8*, i8** %dst755, align 8, !dbg !10539
  %559 = load i32, i32* %index, align 4, !dbg !10540
  %idxprom780 = sext i32 %559 to i64, !dbg !10541
  %560 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10541
  %picture_ptr781 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %560, i32 0, i32 53, !dbg !10542
  %561 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr781, align 8, !dbg !10542
  %linesize782 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %561, i32 0, i32 1, !dbg !10543
  %arrayidx783 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize782, i64 0, i64 %idxprom780, !dbg !10541
  %562 = load i32, i32* %arrayidx783, align 4, !dbg !10541
  %563 = load i32, i32* %h763, align 4, !dbg !10544
  %sub784 = sub nsw i32 %563, 1, !dbg !10545
  %mul785 = mul nsw i32 %562, %sub784, !dbg !10546
  %idx.ext786 = sext i32 %mul785 to i64, !dbg !10547
  %add.ptr787 = getelementptr inbounds i8, i8* %558, i64 %idx.ext786, !dbg !10547
  store i8* %add.ptr787, i8** %dst2, align 8, !dbg !10538
  store i32 0, i32* %i, align 4, !dbg !10548
  br label %for.cond788, !dbg !10550

for.cond788:                                      ; preds = %for.inc825, %if.then779
  %564 = load i32, i32* %i, align 4, !dbg !10551
  %565 = load i32, i32* %h763, align 4, !dbg !10554
  %div789 = sdiv i32 %565, 2, !dbg !10555
  %cmp790 = icmp slt i32 %564, %div789, !dbg !10556
  br i1 %cmp790, label %for.body792, label %for.end827, !dbg !10557

for.body792:                                      ; preds = %for.cond788
  store i32 0, i32* %j, align 4, !dbg !10558
  br label %for.cond793, !dbg !10561

for.cond793:                                      ; preds = %for.inc809, %for.body792
  %566 = load i32, i32* %j, align 4, !dbg !10562
  %567 = load i32, i32* %w760, align 4, !dbg !10565
  %cmp794 = icmp slt i32 %566, %567, !dbg !10566
  br i1 %cmp794, label %for.body796, label %for.end811, !dbg !10567

for.body796:                                      ; preds = %for.cond793
  br label %do.body797, !dbg !10568, !llvm.loop !10569

do.body797:                                       ; preds = %for.body796
  call void @llvm.dbg.declare(metadata i32* %SWAP_tmp, metadata !10570, metadata !2073), !dbg !10572
  %568 = load i32, i32* %j, align 4, !dbg !10573
  %idxprom798 = sext i32 %568 to i64, !dbg !10575
  %569 = load i8*, i8** %dst2, align 8, !dbg !10575
  %arrayidx799 = getelementptr inbounds i8, i8* %569, i64 %idxprom798, !dbg !10575
  %570 = load i8, i8* %arrayidx799, align 1, !dbg !10575
  %conv800 = zext i8 %570 to i32, !dbg !10575
  store i32 %conv800, i32* %SWAP_tmp, align 4, !dbg !10576
  %571 = load i32, i32* %j, align 4, !dbg !10577
  %idxprom801 = sext i32 %571 to i64, !dbg !10578
  %572 = load i8*, i8** %dst755, align 8, !dbg !10578
  %arrayidx802 = getelementptr inbounds i8, i8* %572, i64 %idxprom801, !dbg !10578
  %573 = load i8, i8* %arrayidx802, align 1, !dbg !10578
  %574 = load i32, i32* %j, align 4, !dbg !10579
  %idxprom803 = sext i32 %574 to i64, !dbg !10580
  %575 = load i8*, i8** %dst2, align 8, !dbg !10580
  %arrayidx804 = getelementptr inbounds i8, i8* %575, i64 %idxprom803, !dbg !10580
  store i8 %573, i8* %arrayidx804, align 1, !dbg !10581
  %576 = load i32, i32* %SWAP_tmp, align 4, !dbg !10582
  %conv805 = trunc i32 %576 to i8, !dbg !10582
  %577 = load i32, i32* %j, align 4, !dbg !10583
  %idxprom806 = sext i32 %577 to i64, !dbg !10584
  %578 = load i8*, i8** %dst755, align 8, !dbg !10584
  %arrayidx807 = getelementptr inbounds i8, i8* %578, i64 %idxprom806, !dbg !10584
  store i8 %conv805, i8* %arrayidx807, align 1, !dbg !10585
  br label %do.end808, !dbg !10586

do.end808:                                        ; preds = %do.body797
  br label %for.inc809, !dbg !10587

for.inc809:                                       ; preds = %do.end808
  %579 = load i32, i32* %j, align 4, !dbg !10589
  %inc810 = add nsw i32 %579, 1, !dbg !10589
  store i32 %inc810, i32* %j, align 4, !dbg !10589
  br label %for.cond793, !dbg !10591, !llvm.loop !10592

for.end811:                                       ; preds = %for.cond793
  %580 = load i32, i32* %index, align 4, !dbg !10594
  %idxprom812 = sext i32 %580 to i64, !dbg !10595
  %581 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10595
  %picture_ptr813 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %581, i32 0, i32 53, !dbg !10596
  %582 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr813, align 8, !dbg !10596
  %linesize814 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %582, i32 0, i32 1, !dbg !10597
  %arrayidx815 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize814, i64 0, i64 %idxprom812, !dbg !10595
  %583 = load i32, i32* %arrayidx815, align 4, !dbg !10595
  %584 = load i8*, i8** %dst755, align 8, !dbg !10598
  %idx.ext816 = sext i32 %583 to i64, !dbg !10598
  %add.ptr817 = getelementptr inbounds i8, i8* %584, i64 %idx.ext816, !dbg !10598
  store i8* %add.ptr817, i8** %dst755, align 8, !dbg !10598
  %585 = load i32, i32* %index, align 4, !dbg !10599
  %idxprom818 = sext i32 %585 to i64, !dbg !10600
  %586 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10600
  %picture_ptr819 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %586, i32 0, i32 53, !dbg !10601
  %587 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr819, align 8, !dbg !10601
  %linesize820 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %587, i32 0, i32 1, !dbg !10602
  %arrayidx821 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize820, i64 0, i64 %idxprom818, !dbg !10600
  %588 = load i32, i32* %arrayidx821, align 4, !dbg !10600
  %589 = load i8*, i8** %dst2, align 8, !dbg !10603
  %idx.ext822 = sext i32 %588 to i64, !dbg !10603
  %idx.neg823 = sub i64 0, %idx.ext822, !dbg !10603
  %add.ptr824 = getelementptr inbounds i8, i8* %589, i64 %idx.neg823, !dbg !10603
  store i8* %add.ptr824, i8** %dst2, align 8, !dbg !10603
  br label %for.inc825, !dbg !10604

for.inc825:                                       ; preds = %for.end811
  %590 = load i32, i32* %i, align 4, !dbg !10605
  %inc826 = add nsw i32 %590, 1, !dbg !10605
  store i32 %inc826, i32* %i, align 4, !dbg !10605
  br label %for.cond788, !dbg !10607, !llvm.loop !10608

for.end827:                                       ; preds = %for.cond788
  br label %if.end828, !dbg !10610

if.end828:                                        ; preds = %for.end827, %if.end777
  br label %for.inc829, !dbg !10611

for.inc829:                                       ; preds = %if.end828
  %591 = load i32, i32* %index, align 4, !dbg !10612
  %inc830 = add nsw i32 %591, 1, !dbg !10612
  store i32 %inc830, i32* %index, align 4, !dbg !10612
  br label %for.cond750, !dbg !10614, !llvm.loop !10615

for.end831:                                       ; preds = %for.cond750
  br label %if.end832, !dbg !10617

if.end832:                                        ; preds = %for.end831, %land.lhs.true731, %if.end729
  %592 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10618
  %adobe_transform833 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %592, i32 0, i32 25, !dbg !10620
  %593 = load i32, i32* %adobe_transform833, align 4, !dbg !10620
  %cmp834 = icmp eq i32 %593, 0, !dbg !10621
  br i1 %cmp834, label %land.lhs.true836, label %if.end931, !dbg !10622

land.lhs.true836:                                 ; preds = %if.end832
  %594 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10623
  %avctx837 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %594, i32 0, i32 1, !dbg !10625
  %595 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx837, align 8, !dbg !10625
  %pix_fmt838 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %595, i32 0, i32 25, !dbg !10626
  %596 = load i32, i32* %pix_fmt838, align 8, !dbg !10626
  %cmp839 = icmp eq i32 %596, 113, !dbg !10627
  br i1 %cmp839, label %if.then841, label %if.end931, !dbg !10628

if.then841:                                       ; preds = %land.lhs.true836
  call void @llvm.dbg.declare(metadata i32* %w842, metadata !10629, metadata !2073), !dbg !10631
  %597 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10632
  %picture_ptr843 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %597, i32 0, i32 53, !dbg !10633
  %598 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr843, align 8, !dbg !10633
  %width844 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %598, i32 0, i32 3, !dbg !10634
  %599 = load i32, i32* %width844, align 8, !dbg !10634
  store i32 %599, i32* %w842, align 4, !dbg !10631
  call void @llvm.dbg.declare(metadata i32* %h845, metadata !10635, metadata !2073), !dbg !10636
  %600 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10637
  %picture_ptr846 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %600, i32 0, i32 53, !dbg !10638
  %601 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr846, align 8, !dbg !10638
  %height847 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %601, i32 0, i32 4, !dbg !10639
  %602 = load i32, i32* %height847, align 4, !dbg !10639
  store i32 %602, i32* %h845, align 4, !dbg !10636
  br label %do.body848, !dbg !10640, !llvm.loop !10641

do.body848:                                       ; preds = %if.then841
  %603 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10642
  %nb_components849 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %603, i32 0, i32 36, !dbg !10646
  %604 = load i32, i32* %nb_components849, align 32, !dbg !10646
  %cmp850 = icmp eq i32 %604, 4, !dbg !10647
  br i1 %cmp850, label %if.end853, label %if.then852, !dbg !10648

if.then852:                                       ; preds = %do.body848
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.26, i32 0, i32 0), i32 2656), !dbg !10649
  call void @abort() #8, !dbg !10652
  unreachable, !dbg !10654

if.end853:                                        ; preds = %do.body848
  br label %do.end854, !dbg !10655

do.end854:                                        ; preds = %if.end853
  store i32 0, i32* %i, align 4, !dbg !10657
  br label %for.cond855, !dbg !10659

for.cond855:                                      ; preds = %for.inc928, %do.end854
  %605 = load i32, i32* %i, align 4, !dbg !10660
  %606 = load i32, i32* %h845, align 4, !dbg !10663
  %cmp856 = icmp slt i32 %605, %606, !dbg !10664
  br i1 %cmp856, label %for.body858, label %for.end930, !dbg !10665

for.body858:                                      ; preds = %for.cond855
  call void @llvm.dbg.declare(metadata i32* %j859, metadata !10666, metadata !2073), !dbg !10668
  call void @llvm.dbg.declare(metadata [4 x i8*]* %dst860, metadata !10669, metadata !2073), !dbg !10670
  store i32 0, i32* %index, align 4, !dbg !10671
  br label %for.cond861, !dbg !10673

for.cond861:                                      ; preds = %for.inc878, %for.body858
  %607 = load i32, i32* %index, align 4, !dbg !10674
  %cmp862 = icmp slt i32 %607, 4, !dbg !10677
  br i1 %cmp862, label %for.body864, label %for.end880, !dbg !10678

for.body864:                                      ; preds = %for.cond861
  %608 = load i32, i32* %index, align 4, !dbg !10679
  %idxprom865 = sext i32 %608 to i64, !dbg !10681
  %609 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10681
  %picture_ptr866 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %609, i32 0, i32 53, !dbg !10682
  %610 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr866, align 8, !dbg !10682
  %data867 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %610, i32 0, i32 0, !dbg !10683
  %arrayidx868 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data867, i64 0, i64 %idxprom865, !dbg !10681
  %611 = load i8*, i8** %arrayidx868, align 8, !dbg !10681
  %612 = load i32, i32* %index, align 4, !dbg !10684
  %idxprom869 = sext i32 %612 to i64, !dbg !10685
  %613 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10685
  %picture_ptr870 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %613, i32 0, i32 53, !dbg !10686
  %614 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr870, align 8, !dbg !10686
  %linesize871 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %614, i32 0, i32 1, !dbg !10687
  %arrayidx872 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize871, i64 0, i64 %idxprom869, !dbg !10685
  %615 = load i32, i32* %arrayidx872, align 4, !dbg !10685
  %616 = load i32, i32* %i, align 4, !dbg !10688
  %mul873 = mul nsw i32 %615, %616, !dbg !10689
  %idx.ext874 = sext i32 %mul873 to i64, !dbg !10690
  %add.ptr875 = getelementptr inbounds i8, i8* %611, i64 %idx.ext874, !dbg !10690
  %617 = load i32, i32* %index, align 4, !dbg !10691
  %idxprom876 = sext i32 %617 to i64, !dbg !10692
  %arrayidx877 = getelementptr inbounds [4 x i8*], [4 x i8*]* %dst860, i64 0, i64 %idxprom876, !dbg !10692
  store i8* %add.ptr875, i8** %arrayidx877, align 8, !dbg !10693
  br label %for.inc878, !dbg !10694

for.inc878:                                       ; preds = %for.body864
  %618 = load i32, i32* %index, align 4, !dbg !10695
  %inc879 = add nsw i32 %618, 1, !dbg !10695
  store i32 %inc879, i32* %index, align 4, !dbg !10695
  br label %for.cond861, !dbg !10697, !llvm.loop !10698

for.end880:                                       ; preds = %for.cond861
  store i32 0, i32* %j859, align 4, !dbg !10700
  br label %for.cond881, !dbg !10702

for.cond881:                                      ; preds = %for.inc925, %for.end880
  %619 = load i32, i32* %j859, align 4, !dbg !10703
  %620 = load i32, i32* %w842, align 4, !dbg !10706
  %cmp882 = icmp slt i32 %619, %620, !dbg !10707
  br i1 %cmp882, label %for.body884, label %for.end927, !dbg !10708

for.body884:                                      ; preds = %for.cond881
  call void @llvm.dbg.declare(metadata i32* %k, metadata !10709, metadata !2073), !dbg !10711
  %621 = load i32, i32* %j859, align 4, !dbg !10712
  %idxprom885 = sext i32 %621 to i64, !dbg !10713
  %arrayidx886 = getelementptr inbounds [4 x i8*], [4 x i8*]* %dst860, i64 0, i64 3, !dbg !10713
  %622 = load i8*, i8** %arrayidx886, align 8, !dbg !10713
  %arrayidx887 = getelementptr inbounds i8, i8* %622, i64 %idxprom885, !dbg !10713
  %623 = load i8, i8* %arrayidx887, align 1, !dbg !10713
  %conv888 = zext i8 %623 to i32, !dbg !10713
  store i32 %conv888, i32* %k, align 4, !dbg !10711
  call void @llvm.dbg.declare(metadata i32* %r, metadata !10714, metadata !2073), !dbg !10715
  %624 = load i32, i32* %j859, align 4, !dbg !10716
  %idxprom889 = sext i32 %624 to i64, !dbg !10717
  %arrayidx890 = getelementptr inbounds [4 x i8*], [4 x i8*]* %dst860, i64 0, i64 0, !dbg !10717
  %625 = load i8*, i8** %arrayidx890, align 16, !dbg !10717
  %arrayidx891 = getelementptr inbounds i8, i8* %625, i64 %idxprom889, !dbg !10717
  %626 = load i8, i8* %arrayidx891, align 1, !dbg !10717
  %conv892 = zext i8 %626 to i32, !dbg !10717
  %627 = load i32, i32* %k, align 4, !dbg !10718
  %mul893 = mul nsw i32 %conv892, %627, !dbg !10719
  store i32 %mul893, i32* %r, align 4, !dbg !10715
  call void @llvm.dbg.declare(metadata i32* %g, metadata !10720, metadata !2073), !dbg !10721
  %628 = load i32, i32* %j859, align 4, !dbg !10722
  %idxprom894 = sext i32 %628 to i64, !dbg !10723
  %arrayidx895 = getelementptr inbounds [4 x i8*], [4 x i8*]* %dst860, i64 0, i64 1, !dbg !10723
  %629 = load i8*, i8** %arrayidx895, align 8, !dbg !10723
  %arrayidx896 = getelementptr inbounds i8, i8* %629, i64 %idxprom894, !dbg !10723
  %630 = load i8, i8* %arrayidx896, align 1, !dbg !10723
  %conv897 = zext i8 %630 to i32, !dbg !10723
  %631 = load i32, i32* %k, align 4, !dbg !10724
  %mul898 = mul nsw i32 %conv897, %631, !dbg !10725
  store i32 %mul898, i32* %g, align 4, !dbg !10721
  call void @llvm.dbg.declare(metadata i32* %b, metadata !10726, metadata !2073), !dbg !10727
  %632 = load i32, i32* %j859, align 4, !dbg !10728
  %idxprom899 = sext i32 %632 to i64, !dbg !10729
  %arrayidx900 = getelementptr inbounds [4 x i8*], [4 x i8*]* %dst860, i64 0, i64 2, !dbg !10729
  %633 = load i8*, i8** %arrayidx900, align 16, !dbg !10729
  %arrayidx901 = getelementptr inbounds i8, i8* %633, i64 %idxprom899, !dbg !10729
  %634 = load i8, i8* %arrayidx901, align 1, !dbg !10729
  %conv902 = zext i8 %634 to i32, !dbg !10729
  %635 = load i32, i32* %k, align 4, !dbg !10730
  %mul903 = mul nsw i32 %conv902, %635, !dbg !10731
  store i32 %mul903, i32* %b, align 4, !dbg !10727
  %636 = load i32, i32* %g, align 4, !dbg !10732
  %mul904 = mul nsw i32 %636, 257, !dbg !10733
  %shr905 = ashr i32 %mul904, 16, !dbg !10734
  %conv906 = trunc i32 %shr905 to i8, !dbg !10732
  %637 = load i32, i32* %j859, align 4, !dbg !10735
  %idxprom907 = sext i32 %637 to i64, !dbg !10736
  %arrayidx908 = getelementptr inbounds [4 x i8*], [4 x i8*]* %dst860, i64 0, i64 0, !dbg !10736
  %638 = load i8*, i8** %arrayidx908, align 16, !dbg !10736
  %arrayidx909 = getelementptr inbounds i8, i8* %638, i64 %idxprom907, !dbg !10736
  store i8 %conv906, i8* %arrayidx909, align 1, !dbg !10737
  %639 = load i32, i32* %b, align 4, !dbg !10738
  %mul910 = mul nsw i32 %639, 257, !dbg !10739
  %shr911 = ashr i32 %mul910, 16, !dbg !10740
  %conv912 = trunc i32 %shr911 to i8, !dbg !10738
  %640 = load i32, i32* %j859, align 4, !dbg !10741
  %idxprom913 = sext i32 %640 to i64, !dbg !10742
  %arrayidx914 = getelementptr inbounds [4 x i8*], [4 x i8*]* %dst860, i64 0, i64 1, !dbg !10742
  %641 = load i8*, i8** %arrayidx914, align 8, !dbg !10742
  %arrayidx915 = getelementptr inbounds i8, i8* %641, i64 %idxprom913, !dbg !10742
  store i8 %conv912, i8* %arrayidx915, align 1, !dbg !10743
  %642 = load i32, i32* %r, align 4, !dbg !10744
  %mul916 = mul nsw i32 %642, 257, !dbg !10745
  %shr917 = ashr i32 %mul916, 16, !dbg !10746
  %conv918 = trunc i32 %shr917 to i8, !dbg !10744
  %643 = load i32, i32* %j859, align 4, !dbg !10747
  %idxprom919 = sext i32 %643 to i64, !dbg !10748
  %arrayidx920 = getelementptr inbounds [4 x i8*], [4 x i8*]* %dst860, i64 0, i64 2, !dbg !10748
  %644 = load i8*, i8** %arrayidx920, align 16, !dbg !10748
  %arrayidx921 = getelementptr inbounds i8, i8* %644, i64 %idxprom919, !dbg !10748
  store i8 %conv918, i8* %arrayidx921, align 1, !dbg !10749
  %645 = load i32, i32* %j859, align 4, !dbg !10750
  %idxprom922 = sext i32 %645 to i64, !dbg !10751
  %arrayidx923 = getelementptr inbounds [4 x i8*], [4 x i8*]* %dst860, i64 0, i64 3, !dbg !10751
  %646 = load i8*, i8** %arrayidx923, align 8, !dbg !10751
  %arrayidx924 = getelementptr inbounds i8, i8* %646, i64 %idxprom922, !dbg !10751
  store i8 -1, i8* %arrayidx924, align 1, !dbg !10752
  br label %for.inc925, !dbg !10753

for.inc925:                                       ; preds = %for.body884
  %647 = load i32, i32* %j859, align 4, !dbg !10754
  %inc926 = add nsw i32 %647, 1, !dbg !10754
  store i32 %inc926, i32* %j859, align 4, !dbg !10754
  br label %for.cond881, !dbg !10756, !llvm.loop !10757

for.end927:                                       ; preds = %for.cond881
  br label %for.inc928, !dbg !10759

for.inc928:                                       ; preds = %for.end927
  %648 = load i32, i32* %i, align 4, !dbg !10760
  %inc929 = add nsw i32 %648, 1, !dbg !10760
  store i32 %inc929, i32* %i, align 4, !dbg !10760
  br label %for.cond855, !dbg !10762, !llvm.loop !10763

for.end930:                                       ; preds = %for.cond855
  br label %if.end931, !dbg !10765

if.end931:                                        ; preds = %for.end930, %land.lhs.true836, %if.end832
  %649 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10766
  %adobe_transform932 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %649, i32 0, i32 25, !dbg !10768
  %650 = load i32, i32* %adobe_transform932, align 4, !dbg !10768
  %cmp933 = icmp eq i32 %650, 2, !dbg !10769
  br i1 %cmp933, label %land.lhs.true935, label %if.end1039, !dbg !10770

land.lhs.true935:                                 ; preds = %if.end931
  %651 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10771
  %avctx936 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %651, i32 0, i32 1, !dbg !10773
  %652 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx936, align 8, !dbg !10773
  %pix_fmt937 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %652, i32 0, i32 25, !dbg !10774
  %653 = load i32, i32* %pix_fmt937, align 8, !dbg !10774
  %cmp938 = icmp eq i32 %653, 81, !dbg !10775
  br i1 %cmp938, label %if.then940, label %if.end1039, !dbg !10776

if.then940:                                       ; preds = %land.lhs.true935
  call void @llvm.dbg.declare(metadata i32* %w941, metadata !10777, metadata !2073), !dbg !10779
  %654 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10780
  %picture_ptr942 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %654, i32 0, i32 53, !dbg !10781
  %655 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr942, align 8, !dbg !10781
  %width943 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %655, i32 0, i32 3, !dbg !10782
  %656 = load i32, i32* %width943, align 8, !dbg !10782
  store i32 %656, i32* %w941, align 4, !dbg !10779
  call void @llvm.dbg.declare(metadata i32* %h944, metadata !10783, metadata !2073), !dbg !10784
  %657 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10785
  %picture_ptr945 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %657, i32 0, i32 53, !dbg !10786
  %658 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr945, align 8, !dbg !10786
  %height946 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %658, i32 0, i32 4, !dbg !10787
  %659 = load i32, i32* %height946, align 4, !dbg !10787
  store i32 %659, i32* %h944, align 4, !dbg !10784
  br label %do.body947, !dbg !10788, !llvm.loop !10789

do.body947:                                       ; preds = %if.then940
  %660 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10790
  %nb_components948 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %660, i32 0, i32 36, !dbg !10794
  %661 = load i32, i32* %nb_components948, align 32, !dbg !10794
  %cmp949 = icmp eq i32 %661, 4, !dbg !10795
  br i1 %cmp949, label %if.end952, label %if.then951, !dbg !10796

if.then951:                                       ; preds = %do.body947
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.26, i32 0, i32 0), i32 2679), !dbg !10797
  call void @abort() #8, !dbg !10800
  unreachable, !dbg !10802

if.end952:                                        ; preds = %do.body947
  br label %do.end953, !dbg !10803

do.end953:                                        ; preds = %if.end952
  store i32 0, i32* %i, align 4, !dbg !10805
  br label %for.cond954, !dbg !10807

for.cond954:                                      ; preds = %for.inc1036, %do.end953
  %662 = load i32, i32* %i, align 4, !dbg !10808
  %663 = load i32, i32* %h944, align 4, !dbg !10811
  %cmp955 = icmp slt i32 %662, %663, !dbg !10812
  br i1 %cmp955, label %for.body957, label %for.end1038, !dbg !10813

for.body957:                                      ; preds = %for.cond954
  call void @llvm.dbg.declare(metadata i32* %j958, metadata !10814, metadata !2073), !dbg !10816
  call void @llvm.dbg.declare(metadata [4 x i8*]* %dst959, metadata !10817, metadata !2073), !dbg !10818
  store i32 0, i32* %index, align 4, !dbg !10819
  br label %for.cond960, !dbg !10821

for.cond960:                                      ; preds = %for.inc977, %for.body957
  %664 = load i32, i32* %index, align 4, !dbg !10822
  %cmp961 = icmp slt i32 %664, 4, !dbg !10825
  br i1 %cmp961, label %for.body963, label %for.end979, !dbg !10826

for.body963:                                      ; preds = %for.cond960
  %665 = load i32, i32* %index, align 4, !dbg !10827
  %idxprom964 = sext i32 %665 to i64, !dbg !10829
  %666 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10829
  %picture_ptr965 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %666, i32 0, i32 53, !dbg !10830
  %667 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr965, align 8, !dbg !10830
  %data966 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %667, i32 0, i32 0, !dbg !10831
  %arrayidx967 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data966, i64 0, i64 %idxprom964, !dbg !10829
  %668 = load i8*, i8** %arrayidx967, align 8, !dbg !10829
  %669 = load i32, i32* %index, align 4, !dbg !10832
  %idxprom968 = sext i32 %669 to i64, !dbg !10833
  %670 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10833
  %picture_ptr969 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %670, i32 0, i32 53, !dbg !10834
  %671 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr969, align 8, !dbg !10834
  %linesize970 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %671, i32 0, i32 1, !dbg !10835
  %arrayidx971 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize970, i64 0, i64 %idxprom968, !dbg !10833
  %672 = load i32, i32* %arrayidx971, align 4, !dbg !10833
  %673 = load i32, i32* %i, align 4, !dbg !10836
  %mul972 = mul nsw i32 %672, %673, !dbg !10837
  %idx.ext973 = sext i32 %mul972 to i64, !dbg !10838
  %add.ptr974 = getelementptr inbounds i8, i8* %668, i64 %idx.ext973, !dbg !10838
  %674 = load i32, i32* %index, align 4, !dbg !10839
  %idxprom975 = sext i32 %674 to i64, !dbg !10840
  %arrayidx976 = getelementptr inbounds [4 x i8*], [4 x i8*]* %dst959, i64 0, i64 %idxprom975, !dbg !10840
  store i8* %add.ptr974, i8** %arrayidx976, align 8, !dbg !10841
  br label %for.inc977, !dbg !10842

for.inc977:                                       ; preds = %for.body963
  %675 = load i32, i32* %index, align 4, !dbg !10843
  %inc978 = add nsw i32 %675, 1, !dbg !10843
  store i32 %inc978, i32* %index, align 4, !dbg !10843
  br label %for.cond960, !dbg !10845, !llvm.loop !10846

for.end979:                                       ; preds = %for.cond960
  store i32 0, i32* %j958, align 4, !dbg !10848
  br label %for.cond980, !dbg !10850

for.cond980:                                      ; preds = %for.inc1033, %for.end979
  %676 = load i32, i32* %j958, align 4, !dbg !10851
  %677 = load i32, i32* %w941, align 4, !dbg !10854
  %cmp981 = icmp slt i32 %676, %677, !dbg !10855
  br i1 %cmp981, label %for.body983, label %for.end1035, !dbg !10856

for.body983:                                      ; preds = %for.cond980
  call void @llvm.dbg.declare(metadata i32* %k984, metadata !10857, metadata !2073), !dbg !10859
  %678 = load i32, i32* %j958, align 4, !dbg !10860
  %idxprom985 = sext i32 %678 to i64, !dbg !10861
  %arrayidx986 = getelementptr inbounds [4 x i8*], [4 x i8*]* %dst959, i64 0, i64 3, !dbg !10861
  %679 = load i8*, i8** %arrayidx986, align 8, !dbg !10861
  %arrayidx987 = getelementptr inbounds i8, i8* %679, i64 %idxprom985, !dbg !10861
  %680 = load i8, i8* %arrayidx987, align 1, !dbg !10861
  %conv988 = zext i8 %680 to i32, !dbg !10861
  store i32 %conv988, i32* %k984, align 4, !dbg !10859
  call void @llvm.dbg.declare(metadata i32* %r989, metadata !10862, metadata !2073), !dbg !10863
  %681 = load i32, i32* %j958, align 4, !dbg !10864
  %idxprom990 = sext i32 %681 to i64, !dbg !10865
  %arrayidx991 = getelementptr inbounds [4 x i8*], [4 x i8*]* %dst959, i64 0, i64 0, !dbg !10865
  %682 = load i8*, i8** %arrayidx991, align 16, !dbg !10865
  %arrayidx992 = getelementptr inbounds i8, i8* %682, i64 %idxprom990, !dbg !10865
  %683 = load i8, i8* %arrayidx992, align 1, !dbg !10865
  %conv993 = zext i8 %683 to i32, !dbg !10865
  %sub994 = sub nsw i32 255, %conv993, !dbg !10866
  %684 = load i32, i32* %k984, align 4, !dbg !10867
  %mul995 = mul nsw i32 %sub994, %684, !dbg !10868
  store i32 %mul995, i32* %r989, align 4, !dbg !10863
  call void @llvm.dbg.declare(metadata i32* %g996, metadata !10869, metadata !2073), !dbg !10870
  %685 = load i32, i32* %j958, align 4, !dbg !10871
  %idxprom997 = sext i32 %685 to i64, !dbg !10872
  %arrayidx998 = getelementptr inbounds [4 x i8*], [4 x i8*]* %dst959, i64 0, i64 1, !dbg !10872
  %686 = load i8*, i8** %arrayidx998, align 8, !dbg !10872
  %arrayidx999 = getelementptr inbounds i8, i8* %686, i64 %idxprom997, !dbg !10872
  %687 = load i8, i8* %arrayidx999, align 1, !dbg !10872
  %conv1000 = zext i8 %687 to i32, !dbg !10872
  %sub1001 = sub nsw i32 128, %conv1000, !dbg !10873
  %688 = load i32, i32* %k984, align 4, !dbg !10874
  %mul1002 = mul nsw i32 %sub1001, %688, !dbg !10875
  store i32 %mul1002, i32* %g996, align 4, !dbg !10870
  call void @llvm.dbg.declare(metadata i32* %b1003, metadata !10876, metadata !2073), !dbg !10877
  %689 = load i32, i32* %j958, align 4, !dbg !10878
  %idxprom1004 = sext i32 %689 to i64, !dbg !10879
  %arrayidx1005 = getelementptr inbounds [4 x i8*], [4 x i8*]* %dst959, i64 0, i64 2, !dbg !10879
  %690 = load i8*, i8** %arrayidx1005, align 16, !dbg !10879
  %arrayidx1006 = getelementptr inbounds i8, i8* %690, i64 %idxprom1004, !dbg !10879
  %691 = load i8, i8* %arrayidx1006, align 1, !dbg !10879
  %conv1007 = zext i8 %691 to i32, !dbg !10879
  %sub1008 = sub nsw i32 128, %conv1007, !dbg !10880
  %692 = load i32, i32* %k984, align 4, !dbg !10881
  %mul1009 = mul nsw i32 %sub1008, %692, !dbg !10882
  store i32 %mul1009, i32* %b1003, align 4, !dbg !10877
  %693 = load i32, i32* %r989, align 4, !dbg !10883
  %mul1010 = mul nsw i32 %693, 257, !dbg !10884
  %shr1011 = ashr i32 %mul1010, 16, !dbg !10885
  %conv1012 = trunc i32 %shr1011 to i8, !dbg !10883
  %694 = load i32, i32* %j958, align 4, !dbg !10886
  %idxprom1013 = sext i32 %694 to i64, !dbg !10887
  %arrayidx1014 = getelementptr inbounds [4 x i8*], [4 x i8*]* %dst959, i64 0, i64 0, !dbg !10887
  %695 = load i8*, i8** %arrayidx1014, align 16, !dbg !10887
  %arrayidx1015 = getelementptr inbounds i8, i8* %695, i64 %idxprom1013, !dbg !10887
  store i8 %conv1012, i8* %arrayidx1015, align 1, !dbg !10888
  %696 = load i32, i32* %g996, align 4, !dbg !10889
  %mul1016 = mul nsw i32 %696, 257, !dbg !10890
  %shr1017 = ashr i32 %mul1016, 16, !dbg !10891
  %add1018 = add nsw i32 %shr1017, 128, !dbg !10892
  %conv1019 = trunc i32 %add1018 to i8, !dbg !10893
  %697 = load i32, i32* %j958, align 4, !dbg !10894
  %idxprom1020 = sext i32 %697 to i64, !dbg !10895
  %arrayidx1021 = getelementptr inbounds [4 x i8*], [4 x i8*]* %dst959, i64 0, i64 1, !dbg !10895
  %698 = load i8*, i8** %arrayidx1021, align 8, !dbg !10895
  %arrayidx1022 = getelementptr inbounds i8, i8* %698, i64 %idxprom1020, !dbg !10895
  store i8 %conv1019, i8* %arrayidx1022, align 1, !dbg !10896
  %699 = load i32, i32* %b1003, align 4, !dbg !10897
  %mul1023 = mul nsw i32 %699, 257, !dbg !10898
  %shr1024 = ashr i32 %mul1023, 16, !dbg !10899
  %add1025 = add nsw i32 %shr1024, 128, !dbg !10900
  %conv1026 = trunc i32 %add1025 to i8, !dbg !10901
  %700 = load i32, i32* %j958, align 4, !dbg !10902
  %idxprom1027 = sext i32 %700 to i64, !dbg !10903
  %arrayidx1028 = getelementptr inbounds [4 x i8*], [4 x i8*]* %dst959, i64 0, i64 2, !dbg !10903
  %701 = load i8*, i8** %arrayidx1028, align 16, !dbg !10903
  %arrayidx1029 = getelementptr inbounds i8, i8* %701, i64 %idxprom1027, !dbg !10903
  store i8 %conv1026, i8* %arrayidx1029, align 1, !dbg !10904
  %702 = load i32, i32* %j958, align 4, !dbg !10905
  %idxprom1030 = sext i32 %702 to i64, !dbg !10906
  %arrayidx1031 = getelementptr inbounds [4 x i8*], [4 x i8*]* %dst959, i64 0, i64 3, !dbg !10906
  %703 = load i8*, i8** %arrayidx1031, align 8, !dbg !10906
  %arrayidx1032 = getelementptr inbounds i8, i8* %703, i64 %idxprom1030, !dbg !10906
  store i8 -1, i8* %arrayidx1032, align 1, !dbg !10907
  br label %for.inc1033, !dbg !10908

for.inc1033:                                      ; preds = %for.body983
  %704 = load i32, i32* %j958, align 4, !dbg !10909
  %inc1034 = add nsw i32 %704, 1, !dbg !10909
  store i32 %inc1034, i32* %j958, align 4, !dbg !10909
  br label %for.cond980, !dbg !10911, !llvm.loop !10912

for.end1035:                                      ; preds = %for.cond980
  br label %for.inc1036, !dbg !10914

for.inc1036:                                      ; preds = %for.end1035
  %705 = load i32, i32* %i, align 4, !dbg !10915
  %inc1037 = add nsw i32 %705, 1, !dbg !10915
  store i32 %inc1037, i32* %i, align 4, !dbg !10915
  br label %for.cond954, !dbg !10917, !llvm.loop !10918

for.end1038:                                      ; preds = %for.cond954
  br label %if.end1039, !dbg !10920

if.end1039:                                       ; preds = %for.end1038, %land.lhs.true935, %if.end931
  %706 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10921
  %stereo3d1040 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %706, i32 0, i32 80, !dbg !10923
  %707 = load %struct.AVStereo3D*, %struct.AVStereo3D** %stereo3d1040, align 8, !dbg !10923
  %tobool1041 = icmp ne %struct.AVStereo3D* %707, null, !dbg !10921
  br i1 %tobool1041, label %if.then1042, label %if.end1052, !dbg !10924

if.then1042:                                      ; preds = %if.end1039
  call void @llvm.dbg.declare(metadata %struct.AVStereo3D** %stereo, metadata !10925, metadata !2073), !dbg !10927
  %708 = load i8*, i8** %data.addr, align 8, !dbg !10928
  %709 = bitcast i8* %708 to %struct.AVFrame*, !dbg !10928
  %call1043 = call %struct.AVStereo3D* @av_stereo3d_create_side_data(%struct.AVFrame* %709), !dbg !10929
  store %struct.AVStereo3D* %call1043, %struct.AVStereo3D** %stereo, align 8, !dbg !10927
  %710 = load %struct.AVStereo3D*, %struct.AVStereo3D** %stereo, align 8, !dbg !10930
  %tobool1044 = icmp ne %struct.AVStereo3D* %710, null, !dbg !10930
  br i1 %tobool1044, label %if.then1045, label %if.end1050, !dbg !10932

if.then1045:                                      ; preds = %if.then1042
  %711 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10933
  %stereo3d1046 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %711, i32 0, i32 80, !dbg !10935
  %712 = load %struct.AVStereo3D*, %struct.AVStereo3D** %stereo3d1046, align 8, !dbg !10935
  %type = getelementptr inbounds %struct.AVStereo3D, %struct.AVStereo3D* %712, i32 0, i32 0, !dbg !10936
  %713 = load i32, i32* %type, align 4, !dbg !10936
  %714 = load %struct.AVStereo3D*, %struct.AVStereo3D** %stereo, align 8, !dbg !10937
  %type1047 = getelementptr inbounds %struct.AVStereo3D, %struct.AVStereo3D* %714, i32 0, i32 0, !dbg !10938
  store i32 %713, i32* %type1047, align 4, !dbg !10939
  %715 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10940
  %stereo3d1048 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %715, i32 0, i32 80, !dbg !10941
  %716 = load %struct.AVStereo3D*, %struct.AVStereo3D** %stereo3d1048, align 8, !dbg !10941
  %flags = getelementptr inbounds %struct.AVStereo3D, %struct.AVStereo3D* %716, i32 0, i32 1, !dbg !10942
  %717 = load i32, i32* %flags, align 4, !dbg !10942
  %718 = load %struct.AVStereo3D*, %struct.AVStereo3D** %stereo, align 8, !dbg !10943
  %flags1049 = getelementptr inbounds %struct.AVStereo3D, %struct.AVStereo3D* %718, i32 0, i32 1, !dbg !10944
  store i32 %717, i32* %flags1049, align 4, !dbg !10945
  br label %if.end1050, !dbg !10946

if.end1050:                                       ; preds = %if.then1045, %if.then1042
  %719 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10947
  %stereo3d1051 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %719, i32 0, i32 80, !dbg !10948
  %720 = bitcast %struct.AVStereo3D** %stereo3d1051 to i8*, !dbg !10949
  call void @av_freep(i8* %720), !dbg !10950
  br label %if.end1052, !dbg !10951

if.end1052:                                       ; preds = %if.end1050, %if.end1039
  %721 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10952
  %iccnum1053 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %721, i32 0, i32 84, !dbg !10954
  %722 = load i32, i32* %iccnum1053, align 8, !dbg !10954
  %cmp1054 = icmp ne i32 %722, 0, !dbg !10955
  br i1 %cmp1054, label %land.lhs.true1056, label %if.end1099, !dbg !10956

land.lhs.true1056:                                ; preds = %if.end1052
  %723 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10957
  %iccnum1057 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %723, i32 0, i32 84, !dbg !10959
  %724 = load i32, i32* %iccnum1057, align 8, !dbg !10959
  %725 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10960
  %iccread = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %725, i32 0, i32 85, !dbg !10961
  %726 = load i32, i32* %iccread, align 4, !dbg !10961
  %cmp1058 = icmp eq i32 %724, %726, !dbg !10962
  br i1 %cmp1058, label %if.then1060, label %if.end1099, !dbg !10963

if.then1060:                                      ; preds = %land.lhs.true1056
  call void @llvm.dbg.declare(metadata %struct.AVFrameSideData** %sd, metadata !10964, metadata !2073), !dbg !10966
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !10967, metadata !2073), !dbg !10968
  store i64 0, i64* %offset, align 8, !dbg !10968
  call void @llvm.dbg.declare(metadata i32* %total_size, metadata !10969, metadata !2073), !dbg !10970
  store i32 0, i32* %total_size, align 4, !dbg !10970
  call void @llvm.dbg.declare(metadata i32* %i1061, metadata !10971, metadata !2073), !dbg !10972
  store i32 0, i32* %i1061, align 4, !dbg !10973
  br label %for.cond1062, !dbg !10975

for.cond1062:                                     ; preds = %for.inc1070, %if.then1060
  %727 = load i32, i32* %i1061, align 4, !dbg !10976
  %728 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10979
  %iccnum1063 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %728, i32 0, i32 84, !dbg !10980
  %729 = load i32, i32* %iccnum1063, align 8, !dbg !10980
  %cmp1064 = icmp slt i32 %727, %729, !dbg !10981
  br i1 %cmp1064, label %for.body1066, label %for.end1072, !dbg !10982

for.body1066:                                     ; preds = %for.cond1062
  %730 = load i32, i32* %i1061, align 4, !dbg !10983
  %idxprom1067 = sext i32 %730 to i64, !dbg !10984
  %731 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !10984
  %iccdatalens = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %731, i32 0, i32 83, !dbg !10985
  %732 = load i32*, i32** %iccdatalens, align 32, !dbg !10985
  %arrayidx1068 = getelementptr inbounds i32, i32* %732, i64 %idxprom1067, !dbg !10984
  %733 = load i32, i32* %arrayidx1068, align 4, !dbg !10984
  %734 = load i32, i32* %total_size, align 4, !dbg !10986
  %add1069 = add nsw i32 %734, %733, !dbg !10986
  store i32 %add1069, i32* %total_size, align 4, !dbg !10986
  br label %for.inc1070, !dbg !10987

for.inc1070:                                      ; preds = %for.body1066
  %735 = load i32, i32* %i1061, align 4, !dbg !10988
  %inc1071 = add nsw i32 %735, 1, !dbg !10988
  store i32 %inc1071, i32* %i1061, align 4, !dbg !10988
  br label %for.cond1062, !dbg !10990, !llvm.loop !10991

for.end1072:                                      ; preds = %for.cond1062
  %736 = load i8*, i8** %data.addr, align 8, !dbg !10993
  %737 = bitcast i8* %736 to %struct.AVFrame*, !dbg !10993
  %738 = load i32, i32* %total_size, align 4, !dbg !10994
  %call1073 = call %struct.AVFrameSideData* @av_frame_new_side_data(%struct.AVFrame* %737, i32 15, i32 %738), !dbg !10995
  store %struct.AVFrameSideData* %call1073, %struct.AVFrameSideData** %sd, align 8, !dbg !10996
  %739 = load %struct.AVFrameSideData*, %struct.AVFrameSideData** %sd, align 8, !dbg !10997
  %tobool1074 = icmp ne %struct.AVFrameSideData* %739, null, !dbg !10997
  br i1 %tobool1074, label %if.end1077, label %if.then1075, !dbg !10999

if.then1075:                                      ; preds = %for.end1072
  %740 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !11000
  %avctx1076 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %740, i32 0, i32 1, !dbg !11002
  %741 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1076, align 8, !dbg !11002
  %742 = bitcast %struct.AVCodecContext* %741 to i8*, !dbg !11000
  call void (i8*, i32, i8*, ...) @av_log(i8* %742, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.71, i32 0, i32 0)), !dbg !11003
  store i32 -12, i32* %retval, align 4, !dbg !11004
  br label %return, !dbg !11004

if.end1077:                                       ; preds = %for.end1072
  store i32 0, i32* %i1061, align 4, !dbg !11005
  br label %for.cond1078, !dbg !11007

for.cond1078:                                     ; preds = %for.inc1096, %if.end1077
  %743 = load i32, i32* %i1061, align 4, !dbg !11008
  %744 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !11011
  %iccnum1079 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %744, i32 0, i32 84, !dbg !11012
  %745 = load i32, i32* %iccnum1079, align 8, !dbg !11012
  %cmp1080 = icmp slt i32 %743, %745, !dbg !11013
  br i1 %cmp1080, label %for.body1082, label %for.end1098, !dbg !11014

for.body1082:                                     ; preds = %for.cond1078
  %746 = load %struct.AVFrameSideData*, %struct.AVFrameSideData** %sd, align 8, !dbg !11015
  %data1083 = getelementptr inbounds %struct.AVFrameSideData, %struct.AVFrameSideData* %746, i32 0, i32 1, !dbg !11017
  %747 = load i8*, i8** %data1083, align 8, !dbg !11017
  %748 = load i64, i64* %offset, align 8, !dbg !11018
  %add.ptr1084 = getelementptr inbounds i8, i8* %747, i64 %748, !dbg !11019
  %749 = load i32, i32* %i1061, align 4, !dbg !11020
  %idxprom1085 = sext i32 %749 to i64, !dbg !11021
  %750 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !11021
  %iccdata = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %750, i32 0, i32 82, !dbg !11022
  %751 = load i8**, i8*** %iccdata, align 8, !dbg !11022
  %arrayidx1086 = getelementptr inbounds i8*, i8** %751, i64 %idxprom1085, !dbg !11021
  %752 = load i8*, i8** %arrayidx1086, align 8, !dbg !11021
  %753 = load i32, i32* %i1061, align 4, !dbg !11023
  %idxprom1087 = sext i32 %753 to i64, !dbg !11024
  %754 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !11024
  %iccdatalens1088 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %754, i32 0, i32 83, !dbg !11025
  %755 = load i32*, i32** %iccdatalens1088, align 32, !dbg !11025
  %arrayidx1089 = getelementptr inbounds i32, i32* %755, i64 %idxprom1087, !dbg !11024
  %756 = load i32, i32* %arrayidx1089, align 4, !dbg !11024
  %conv1090 = sext i32 %756 to i64, !dbg !11024
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr1084, i8* %752, i64 %conv1090, i32 1, i1 false), !dbg !11026
  %757 = load i32, i32* %i1061, align 4, !dbg !11027
  %idxprom1091 = sext i32 %757 to i64, !dbg !11028
  %758 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !11028
  %iccdatalens1092 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %758, i32 0, i32 83, !dbg !11029
  %759 = load i32*, i32** %iccdatalens1092, align 32, !dbg !11029
  %arrayidx1093 = getelementptr inbounds i32, i32* %759, i64 %idxprom1091, !dbg !11028
  %760 = load i32, i32* %arrayidx1093, align 4, !dbg !11028
  %conv1094 = sext i32 %760 to i64, !dbg !11028
  %761 = load i64, i64* %offset, align 8, !dbg !11030
  %add1095 = add i64 %761, %conv1094, !dbg !11030
  store i64 %add1095, i64* %offset, align 8, !dbg !11030
  br label %for.inc1096, !dbg !11031

for.inc1096:                                      ; preds = %for.body1082
  %762 = load i32, i32* %i1061, align 4, !dbg !11032
  %inc1097 = add nsw i32 %762, 1, !dbg !11032
  store i32 %inc1097, i32* %i1061, align 4, !dbg !11032
  br label %for.cond1078, !dbg !11034, !llvm.loop !11035

for.end1098:                                      ; preds = %for.cond1078
  br label %if.end1099, !dbg !11037

if.end1099:                                       ; preds = %for.end1098, %land.lhs.true1056, %if.end1052
  %763 = load i8*, i8** %data.addr, align 8, !dbg !11038
  %764 = bitcast i8* %763 to %struct.AVFrame*, !dbg !11039
  %metadata = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %764, i32 0, i32 39, !dbg !11040
  %765 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !11041
  %exif_metadata1100 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %765, i32 0, i32 79, !dbg !11042
  %766 = load %struct.AVDictionary*, %struct.AVDictionary** %exif_metadata1100, align 32, !dbg !11042
  %call1101 = call i32 @av_dict_copy(%struct.AVDictionary** %metadata, %struct.AVDictionary* %766, i32 0), !dbg !11043
  %767 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !11044
  %exif_metadata1102 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %767, i32 0, i32 79, !dbg !11045
  call void @av_dict_free(%struct.AVDictionary** %exif_metadata1102), !dbg !11046
  br label %the_end_no_picture, !dbg !11046

the_end_no_picture:                               ; preds = %if.end1099, %if.then142
  %768 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !11047
  %769 = bitcast %struct.AVCodecContext* %768 to i8*, !dbg !11047
  %770 = load i8*, i8** %buf_end, align 8, !dbg !11048
  %771 = load i8*, i8** %buf_ptr, align 8, !dbg !11049
  %sub.ptr.lhs.cast1103 = ptrtoint i8* %770 to i64, !dbg !11050
  %sub.ptr.rhs.cast1104 = ptrtoint i8* %771 to i64, !dbg !11050
  %sub.ptr.sub1105 = sub i64 %sub.ptr.lhs.cast1103, %sub.ptr.rhs.cast1104, !dbg !11050
  call void (i8*, i32, i8*, ...) @av_log(i8* %769, i32 48, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.72, i32 0, i32 0), i64 %sub.ptr.sub1105), !dbg !11051
  %772 = load i8*, i8** %buf_ptr, align 8, !dbg !11052
  %773 = load i8*, i8** %buf, align 8, !dbg !11053
  %sub.ptr.lhs.cast1106 = ptrtoint i8* %772 to i64, !dbg !11054
  %sub.ptr.rhs.cast1107 = ptrtoint i8* %773 to i64, !dbg !11054
  %sub.ptr.sub1108 = sub i64 %sub.ptr.lhs.cast1106, %sub.ptr.rhs.cast1107, !dbg !11054
  %conv1109 = trunc i64 %sub.ptr.sub1108 to i32, !dbg !11052
  store i32 %conv1109, i32* %retval, align 4, !dbg !11055
  br label %return, !dbg !11055

return:                                           ; preds = %the_end_no_picture, %if.then1075, %if.then738, %if.then586, %if.then317, %fail, %if.end254, %if.then232, %if.then160, %if.then155, %if.then44, %if.then37, %if.then7
  %774 = load i32, i32* %retval, align 4, !dbg !11056
  ret i32 %774, !dbg !11056
}

declare void @av_dict_free(%struct.AVDictionary**) #2

; Function Attrs: nounwind uwtable
define internal void @reset_icc_profile(%struct.MJpegDecodeContext* %s) #3 !dbg !11057 {
entry:
  %s.addr = alloca %struct.MJpegDecodeContext*, align 8
  %i = alloca i32, align 4
  store %struct.MJpegDecodeContext* %s, %struct.MJpegDecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MJpegDecodeContext** %s.addr, metadata !11060, metadata !2073), !dbg !11061
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11062, metadata !2073), !dbg !11063
  %0 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11064
  %iccdata = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %0, i32 0, i32 82, !dbg !11066
  %1 = load i8**, i8*** %iccdata, align 8, !dbg !11066
  %tobool = icmp ne i8** %1, null, !dbg !11064
  br i1 %tobool, label %if.then, label %if.end, !dbg !11067

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !11068
  br label %for.cond, !dbg !11070

for.cond:                                         ; preds = %for.inc, %if.then
  %2 = load i32, i32* %i, align 4, !dbg !11071
  %3 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11074
  %iccnum = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %3, i32 0, i32 84, !dbg !11075
  %4 = load i32, i32* %iccnum, align 8, !dbg !11075
  %cmp = icmp slt i32 %2, %4, !dbg !11076
  br i1 %cmp, label %for.body, label %for.end, !dbg !11077

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %i, align 4, !dbg !11078
  %idxprom = sext i32 %5 to i64, !dbg !11079
  %6 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11079
  %iccdata1 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %6, i32 0, i32 82, !dbg !11080
  %7 = load i8**, i8*** %iccdata1, align 8, !dbg !11080
  %arrayidx = getelementptr inbounds i8*, i8** %7, i64 %idxprom, !dbg !11079
  %8 = bitcast i8** %arrayidx to i8*, !dbg !11081
  call void @av_freep(i8* %8), !dbg !11082
  br label %for.inc, !dbg !11082

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !11083
  %inc = add nsw i32 %9, 1, !dbg !11083
  store i32 %inc, i32* %i, align 4, !dbg !11083
  br label %for.cond, !dbg !11085, !llvm.loop !11086

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !11088

if.end:                                           ; preds = %for.end, %entry
  %10 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11090
  %iccdata2 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %10, i32 0, i32 82, !dbg !11091
  %11 = bitcast i8*** %iccdata2 to i8*, !dbg !11092
  call void @av_freep(i8* %11), !dbg !11093
  %12 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11094
  %iccdatalens = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %12, i32 0, i32 83, !dbg !11095
  %13 = bitcast i32** %iccdatalens to i8*, !dbg !11096
  call void @av_freep(i8* %13), !dbg !11097
  %14 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11098
  %iccread = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %14, i32 0, i32 85, !dbg !11099
  store i32 0, i32* %iccread, align 4, !dbg !11100
  %15 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11101
  %iccnum3 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %15, i32 0, i32 84, !dbg !11102
  store i32 0, i32* %iccnum3, align 8, !dbg !11103
  ret void, !dbg !11104
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits8(%struct.GetBitContext* %s, i8* %buffer, i32 %byte_size) #4 !dbg !11105 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %byte_size.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !11106, metadata !2073), !dbg !11107
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !11108, metadata !2073), !dbg !11109
  store i32 %byte_size, i32* %byte_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %byte_size.addr, metadata !11110, metadata !2073), !dbg !11111
  %0 = load i32, i32* %byte_size.addr, align 4, !dbg !11112
  %cmp = icmp sgt i32 %0, 268435455, !dbg !11114
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11115

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %byte_size.addr, align 4, !dbg !11116
  %cmp1 = icmp slt i32 %1, 0, !dbg !11118
  br i1 %cmp1, label %if.then, label %if.end, !dbg !11119

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %byte_size.addr, align 4, !dbg !11120
  br label %if.end, !dbg !11121

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !11122
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !11123
  %4 = load i32, i32* %byte_size.addr, align 4, !dbg !11124
  %mul = mul nsw i32 %4, 8, !dbg !11125
  %call = call i32 @init_get_bits(%struct.GetBitContext* %2, i8* %3, i32 %mul), !dbg !11126
  ret i32 %call, !dbg !11127
}

; Function Attrs: nounwind uwtable
define internal i32 @mjpeg_decode_app(%struct.MJpegDecodeContext* %s) #3 !dbg !11128 {
entry:
  %x.addr.i571 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i571, metadata !2864, metadata !2073), !dbg !11129
  %x.addr.i556 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i556, metadata !2864, metadata !2073), !dbg !11134
  %g.addr.i549 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i549, metadata !11138, metadata !2073), !dbg !11150
  %retval.i44.i = alloca i32, align 4
  %a.addr.i45.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i45.i, metadata !11154, metadata !2073), !dbg !11159
  %amin.addr.i46.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i46.i, metadata !11168, metadata !2073), !dbg !11169
  %amax.addr.i47.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i47.i, metadata !11170, metadata !2073), !dbg !11171
  %retval.i33.i = alloca i32, align 4
  %a.addr.i34.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i34.i, metadata !11154, metadata !2073), !dbg !11172
  %amin.addr.i35.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i35.i, metadata !11168, metadata !2073), !dbg !11174
  %amax.addr.i36.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i36.i, metadata !11170, metadata !2073), !dbg !11175
  %g.addr.i.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i, metadata !11138, metadata !2073), !dbg !11176
  %retval.i.i = alloca i32, align 4
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !11154, metadata !2073), !dbg !11178
  %amin.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i.i, metadata !11168, metadata !2073), !dbg !11180
  %amax.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i.i, metadata !11170, metadata !2073), !dbg !11181
  %retval.i = alloca i32, align 4
  %g.addr.i543 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i543, metadata !11182, metadata !2073), !dbg !11183
  %offset.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr.i, metadata !11184, metadata !2073), !dbg !11185
  %whence.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %whence.addr.i, metadata !11186, metadata !2073), !dbg !11187
  %g.addr.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i, metadata !11188, metadata !2073), !dbg !11192
  %buf.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr.i, metadata !11194, metadata !2073), !dbg !11195
  %buf_size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr.i, metadata !11196, metadata !2073), !dbg !11197
  %x.addr.i528 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i528, metadata !2864, metadata !2073), !dbg !11198
  %x.addr.i513 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i513, metadata !2864, metadata !2073), !dbg !11201
  %x.addr.i498 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i498, metadata !2864, metadata !2073), !dbg !11205
  %x.addr.i483 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i483, metadata !2864, metadata !2073), !dbg !11209
  %x.addr.i468 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i468, metadata !2864, metadata !2073), !dbg !11212
  %x.addr.i453 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i453, metadata !2864, metadata !2073), !dbg !11217
  %x.addr.i438 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i438, metadata !2864, metadata !2073), !dbg !11219
  %x.addr.i423 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i423, metadata !2864, metadata !2073), !dbg !11222
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2864, metadata !2073), !dbg !11225
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.MJpegDecodeContext*, align 8
  %len = alloca i32, align 4
  %id = alloca i32, align 4
  %i = alloca i32, align 4
  %.compoundliteral = alloca [32 x i8], align 1
  %t_w = alloca i32, align 4
  %t_h = alloca i32, align 4
  %v1 = alloca i32, align 4
  %v2 = alloca i32, align 4
  %rgb = alloca i32, align 4
  %pegasus_rct = alloca i32, align 4
  %flags = alloca i32, align 4
  %layout = alloca i32, align 4
  %type = alloca i32, align 4
  %gbytes = alloca %struct.GetByteContext, align 8
  %ret = alloca i32, align 4
  %le = alloca i32, align 4
  %ifd_offset = alloca i32, align 4
  %bytes_read = alloca i32, align 4
  %aligned = alloca i8*, align 8
  %id2 = alloca i32, align 4
  %seqno = alloca i32, align 4
  %nummarkers = alloca i32, align 4
  store %struct.MJpegDecodeContext* %s, %struct.MJpegDecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MJpegDecodeContext** %s.addr, metadata !11229, metadata !2073), !dbg !11230
  call void @llvm.dbg.declare(metadata i32* %len, metadata !11231, metadata !2073), !dbg !11232
  call void @llvm.dbg.declare(metadata i32* %id, metadata !11233, metadata !2073), !dbg !11234
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11235, metadata !2073), !dbg !11236
  %0 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11237
  %gb = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %0, i32 0, i32 2, !dbg !11238
  %call = call i32 @get_bits(%struct.GetBitContext* %gb, i32 16), !dbg !11239
  store i32 %call, i32* %len, align 4, !dbg !11240
  %1 = load i32, i32* %len, align 4, !dbg !11241
  %cmp = icmp slt i32 %1, 6, !dbg !11243
  br i1 %cmp, label %if.then, label %if.end, !dbg !11244

if.then:                                          ; preds = %entry
  store i32 -1094995529, i32* %retval, align 4, !dbg !11245
  br label %return, !dbg !11245

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %len, align 4, !dbg !11246
  %mul = mul nsw i32 8, %2, !dbg !11248
  %3 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11249
  %gb1 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %3, i32 0, i32 2, !dbg !11250
  %call2 = call i32 @get_bits_left(%struct.GetBitContext* %gb1), !dbg !11251
  %cmp3 = icmp sgt i32 %mul, %call2, !dbg !11252
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !11253

if.then4:                                         ; preds = %if.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !11254
  br label %return, !dbg !11254

if.end5:                                          ; preds = %if.end
  %4 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11255
  %gb6 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %4, i32 0, i32 2, !dbg !11256
  %call7 = call i32 @get_bits_long(%struct.GetBitContext* %gb6, i32 32), !dbg !11257
  store i32 %call7, i32* %id, align 4, !dbg !11258
  %5 = load i32, i32* %len, align 4, !dbg !11259
  %sub = sub nsw i32 %5, 6, !dbg !11259
  store i32 %sub, i32* %len, align 4, !dbg !11259
  %6 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11260
  %avctx = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %6, i32 0, i32 1, !dbg !11261
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !11261
  %debug = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %7, i32 0, i32 134, !dbg !11262
  %8 = load i32, i32* %debug, align 4, !dbg !11262
  %and = and i32 %8, 256, !dbg !11263
  %tobool = icmp ne i32 %and, 0, !dbg !11263
  br i1 %tobool, label %if.then8, label %if.end12, !dbg !11264

if.then8:                                         ; preds = %if.end5
  %9 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11265
  %avctx9 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %9, i32 0, i32 1, !dbg !11266
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx9, align 8, !dbg !11266
  %11 = bitcast %struct.AVCodecContext* %10 to i8*, !dbg !11265
  %12 = bitcast [32 x i8]* %.compoundliteral to i8*, !dbg !11267
  call void @llvm.memset.p0i8.i64(i8* %12, i8 0, i64 32, i32 1, i1 false), !dbg !11267
  %arrayinit.begin = getelementptr inbounds [32 x i8], [32 x i8]* %.compoundliteral, i64 0, i64 0, !dbg !11268
  store i8 0, i8* %arrayinit.begin, align 1, !dbg !11268
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %.compoundliteral, i32 0, i32 0, !dbg !11267
  %13 = load i32, i32* %id, align 4, !dbg !11269
  store i32 %13, i32* %x.addr.i, align 4, !dbg !11270
  %14 = load i32, i32* %x.addr.i, align 4, !dbg !11271
  %shl.i = shl i32 %14, 8, !dbg !11272
  %and.i = and i32 %shl.i, 65280, !dbg !11273
  %15 = load i32, i32* %x.addr.i, align 4, !dbg !11274
  %shr.i = lshr i32 %15, 8, !dbg !11275
  %and1.i = and i32 %shr.i, 255, !dbg !11276
  %or.i = or i32 %and.i, %and1.i, !dbg !11277
  %shl2.i = shl i32 %or.i, 16, !dbg !11278
  %16 = load i32, i32* %x.addr.i, align 4, !dbg !11279
  %shr3.i = lshr i32 %16, 16, !dbg !11280
  %shl4.i = shl i32 %shr3.i, 8, !dbg !11281
  %and5.i = and i32 %shl4.i, 65280, !dbg !11282
  %17 = load i32, i32* %x.addr.i, align 4, !dbg !11283
  %shr6.i = lshr i32 %17, 16, !dbg !11284
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !11285
  %and8.i = and i32 %shr7.i, 255, !dbg !11286
  %or9.i = or i32 %and5.i, %and8.i, !dbg !11287
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !11288
  %call11 = call i8* @av_fourcc_make_string(i8* %arraydecay, i32 %or10.i), !dbg !11289
  %18 = load i32, i32* %id, align 4, !dbg !11291
  %19 = load i32, i32* %len, align 4, !dbg !11292
  call void (i8*, i32, i8*, ...) @av_log(i8* %11, i32 48, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.96, i32 0, i32 0), i8* %call11, i32 %18, i32 %19), !dbg !11293
  br label %if.end12, !dbg !11293

if.end12:                                         ; preds = %if.then8, %if.end5
  %20 = load i32, i32* %id, align 4, !dbg !11294
  %21 = load i32, i32* bitcast ([5 x i8]* @.str.97 to i32*), align 1, !dbg !11295
  store i32 %21, i32* %x.addr.i423, align 4, !dbg !11296
  %22 = load i32, i32* %x.addr.i423, align 4, !dbg !11297
  %shl.i424 = shl i32 %22, 8, !dbg !11298
  %and.i425 = and i32 %shl.i424, 65280, !dbg !11299
  %23 = load i32, i32* %x.addr.i423, align 4, !dbg !11300
  %shr.i426 = lshr i32 %23, 8, !dbg !11301
  %and1.i427 = and i32 %shr.i426, 255, !dbg !11302
  %or.i428 = or i32 %and.i425, %and1.i427, !dbg !11303
  %shl2.i429 = shl i32 %or.i428, 16, !dbg !11304
  %24 = load i32, i32* %x.addr.i423, align 4, !dbg !11305
  %shr3.i430 = lshr i32 %24, 16, !dbg !11306
  %shl4.i431 = shl i32 %shr3.i430, 8, !dbg !11307
  %and5.i432 = and i32 %shl4.i431, 65280, !dbg !11308
  %25 = load i32, i32* %x.addr.i423, align 4, !dbg !11309
  %shr6.i433 = lshr i32 %25, 16, !dbg !11310
  %shr7.i434 = lshr i32 %shr6.i433, 8, !dbg !11311
  %and8.i435 = and i32 %shr7.i434, 255, !dbg !11312
  %or9.i436 = or i32 %and5.i432, %and8.i435, !dbg !11313
  %or10.i437 = or i32 %shl2.i429, %or9.i436, !dbg !11314
  %cmp14 = icmp eq i32 %20, %or10.i437, !dbg !11315
  br i1 %cmp14, label %if.then15, label %if.end19, !dbg !11316

if.then15:                                        ; preds = %if.end12
  %26 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11317
  %buggy_avid = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %26, i32 0, i32 69, !dbg !11319
  store i32 1, i32* %buggy_avid, align 16, !dbg !11320
  %27 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11321
  %gb16 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %27, i32 0, i32 2, !dbg !11322
  %call17 = call i32 @get_bits(%struct.GetBitContext* %gb16, i32 8), !dbg !11323
  store i32 %call17, i32* %i, align 4, !dbg !11324
  %28 = load i32, i32* %len, align 4, !dbg !11325
  %dec = add nsw i32 %28, -1, !dbg !11325
  store i32 %dec, i32* %len, align 4, !dbg !11325
  %29 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11326
  %avctx18 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %29, i32 0, i32 1, !dbg !11327
  %30 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx18, align 8, !dbg !11327
  %31 = bitcast %struct.AVCodecContext* %30 to i8*, !dbg !11326
  %32 = load i32, i32* %i, align 4, !dbg !11328
  call void (i8*, i32, i8*, ...) @av_log(i8* %31, i32 48, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.98, i32 0, i32 0), i32 %32), !dbg !11329
  br label %out, !dbg !11330

if.end19:                                         ; preds = %if.end12
  %33 = load i32, i32* %id, align 4, !dbg !11331
  %34 = load i32, i32* bitcast ([5 x i8]* @.str.99 to i32*), align 1, !dbg !11332
  store i32 %34, i32* %x.addr.i438, align 4, !dbg !11333
  %35 = load i32, i32* %x.addr.i438, align 4, !dbg !11334
  %shl.i439 = shl i32 %35, 8, !dbg !11335
  %and.i440 = and i32 %shl.i439, 65280, !dbg !11336
  %36 = load i32, i32* %x.addr.i438, align 4, !dbg !11337
  %shr.i441 = lshr i32 %36, 8, !dbg !11338
  %and1.i442 = and i32 %shr.i441, 255, !dbg !11339
  %or.i443 = or i32 %and.i440, %and1.i442, !dbg !11340
  %shl2.i444 = shl i32 %or.i443, 16, !dbg !11341
  %37 = load i32, i32* %x.addr.i438, align 4, !dbg !11342
  %shr3.i445 = lshr i32 %37, 16, !dbg !11343
  %shl4.i446 = shl i32 %shr3.i445, 8, !dbg !11344
  %and5.i447 = and i32 %shl4.i446, 65280, !dbg !11345
  %38 = load i32, i32* %x.addr.i438, align 4, !dbg !11346
  %shr6.i448 = lshr i32 %38, 16, !dbg !11347
  %shr7.i449 = lshr i32 %shr6.i448, 8, !dbg !11348
  %and8.i450 = and i32 %shr7.i449, 255, !dbg !11349
  %or9.i451 = or i32 %and5.i447, %and8.i450, !dbg !11350
  %or10.i452 = or i32 %shl2.i444, %or9.i451, !dbg !11351
  %cmp21 = icmp eq i32 %33, %or10.i452, !dbg !11352
  br i1 %cmp21, label %if.then22, label %if.end91, !dbg !11353

if.then22:                                        ; preds = %if.end19
  call void @llvm.dbg.declare(metadata i32* %t_w, metadata !11354, metadata !2073), !dbg !11356
  call void @llvm.dbg.declare(metadata i32* %t_h, metadata !11357, metadata !2073), !dbg !11358
  call void @llvm.dbg.declare(metadata i32* %v1, metadata !11359, metadata !2073), !dbg !11360
  call void @llvm.dbg.declare(metadata i32* %v2, metadata !11361, metadata !2073), !dbg !11362
  %39 = load i32, i32* %len, align 4, !dbg !11363
  %cmp23 = icmp slt i32 %39, 8, !dbg !11365
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !11366

if.then24:                                        ; preds = %if.then22
  br label %out, !dbg !11367

if.end25:                                         ; preds = %if.then22
  %40 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11368
  %gb26 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %40, i32 0, i32 2, !dbg !11369
  call void @skip_bits(%struct.GetBitContext* %gb26, i32 8), !dbg !11370
  %41 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11371
  %gb27 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %41, i32 0, i32 2, !dbg !11372
  %call28 = call i32 @get_bits(%struct.GetBitContext* %gb27, i32 8), !dbg !11373
  store i32 %call28, i32* %v1, align 4, !dbg !11374
  %42 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11375
  %gb29 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %42, i32 0, i32 2, !dbg !11376
  %call30 = call i32 @get_bits(%struct.GetBitContext* %gb29, i32 8), !dbg !11377
  store i32 %call30, i32* %v2, align 4, !dbg !11378
  %43 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11379
  %gb31 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %43, i32 0, i32 2, !dbg !11380
  call void @skip_bits(%struct.GetBitContext* %gb31, i32 8), !dbg !11381
  %44 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11382
  %gb32 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %44, i32 0, i32 2, !dbg !11383
  %call33 = call i32 @get_bits(%struct.GetBitContext* %gb32, i32 16), !dbg !11384
  %45 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11385
  %avctx34 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %45, i32 0, i32 1, !dbg !11386
  %46 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx34, align 8, !dbg !11386
  %sample_aspect_ratio = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %46, i32 0, i32 44, !dbg !11387
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio, i32 0, i32 0, !dbg !11388
  store i32 %call33, i32* %num, align 8, !dbg !11389
  %47 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11390
  %gb35 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %47, i32 0, i32 2, !dbg !11391
  %call36 = call i32 @get_bits(%struct.GetBitContext* %gb35, i32 16), !dbg !11392
  %48 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11393
  %avctx37 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %48, i32 0, i32 1, !dbg !11394
  %49 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx37, align 8, !dbg !11394
  %sample_aspect_ratio38 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %49, i32 0, i32 44, !dbg !11395
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio38, i32 0, i32 1, !dbg !11396
  store i32 %call36, i32* %den, align 4, !dbg !11397
  %50 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11398
  %avctx39 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %50, i32 0, i32 1, !dbg !11400
  %51 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx39, align 8, !dbg !11400
  %sample_aspect_ratio40 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %51, i32 0, i32 44, !dbg !11401
  %num41 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio40, i32 0, i32 0, !dbg !11402
  %52 = load i32, i32* %num41, align 8, !dbg !11402
  %cmp42 = icmp sle i32 %52, 0, !dbg !11403
  br i1 %cmp42, label %if.then47, label %lor.lhs.false, !dbg !11404

lor.lhs.false:                                    ; preds = %if.end25
  %53 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11405
  %avctx43 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %53, i32 0, i32 1, !dbg !11407
  %54 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx43, align 8, !dbg !11407
  %sample_aspect_ratio44 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %54, i32 0, i32 44, !dbg !11408
  %den45 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio44, i32 0, i32 1, !dbg !11409
  %55 = load i32, i32* %den45, align 4, !dbg !11409
  %cmp46 = icmp sle i32 %55, 0, !dbg !11410
  br i1 %cmp46, label %if.then47, label %if.end54, !dbg !11411

if.then47:                                        ; preds = %lor.lhs.false, %if.end25
  %56 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11413
  %avctx48 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %56, i32 0, i32 1, !dbg !11415
  %57 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx48, align 8, !dbg !11415
  %sample_aspect_ratio49 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %57, i32 0, i32 44, !dbg !11416
  %num50 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio49, i32 0, i32 0, !dbg !11417
  store i32 0, i32* %num50, align 8, !dbg !11418
  %58 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11419
  %avctx51 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %58, i32 0, i32 1, !dbg !11420
  %59 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx51, align 8, !dbg !11420
  %sample_aspect_ratio52 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %59, i32 0, i32 44, !dbg !11421
  %den53 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio52, i32 0, i32 1, !dbg !11422
  store i32 1, i32* %den53, align 4, !dbg !11423
  br label %if.end54, !dbg !11424

if.end54:                                         ; preds = %if.then47, %lor.lhs.false
  %60 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11425
  %avctx55 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %60, i32 0, i32 1, !dbg !11427
  %61 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx55, align 8, !dbg !11427
  %debug56 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %61, i32 0, i32 134, !dbg !11428
  %62 = load i32, i32* %debug56, align 4, !dbg !11428
  %and57 = and i32 %62, 1, !dbg !11429
  %tobool58 = icmp ne i32 %and57, 0, !dbg !11429
  br i1 %tobool58, label %if.then59, label %if.end67, !dbg !11430

if.then59:                                        ; preds = %if.end54
  %63 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11431
  %avctx60 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %63, i32 0, i32 1, !dbg !11432
  %64 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx60, align 8, !dbg !11432
  %65 = bitcast %struct.AVCodecContext* %64 to i8*, !dbg !11431
  %66 = load i32, i32* %v1, align 4, !dbg !11433
  %67 = load i32, i32* %v2, align 4, !dbg !11434
  %68 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11435
  %avctx61 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %68, i32 0, i32 1, !dbg !11436
  %69 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx61, align 8, !dbg !11436
  %sample_aspect_ratio62 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %69, i32 0, i32 44, !dbg !11437
  %num63 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio62, i32 0, i32 0, !dbg !11438
  %70 = load i32, i32* %num63, align 8, !dbg !11438
  %71 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11439
  %avctx64 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %71, i32 0, i32 1, !dbg !11440
  %72 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx64, align 8, !dbg !11440
  %sample_aspect_ratio65 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %72, i32 0, i32 44, !dbg !11441
  %den66 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio65, i32 0, i32 1, !dbg !11442
  %73 = load i32, i32* %den66, align 4, !dbg !11442
  call void (i8*, i32, i8*, ...) @av_log(i8* %65, i32 32, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.100, i32 0, i32 0), i32 %66, i32 %67, i32 %70, i32 %73), !dbg !11443
  br label %if.end67, !dbg !11443

if.end67:                                         ; preds = %if.then59, %if.end54
  %74 = load i32, i32* %len, align 4, !dbg !11444
  %sub68 = sub nsw i32 %74, 8, !dbg !11444
  store i32 %sub68, i32* %len, align 4, !dbg !11444
  %75 = load i32, i32* %len, align 4, !dbg !11445
  %cmp69 = icmp sge i32 %75, 2, !dbg !11447
  br i1 %cmp69, label %if.then70, label %if.end90, !dbg !11448

if.then70:                                        ; preds = %if.end67
  %76 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11449
  %gb71 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %76, i32 0, i32 2, !dbg !11451
  %call72 = call i32 @get_bits(%struct.GetBitContext* %gb71, i32 8), !dbg !11452
  store i32 %call72, i32* %t_w, align 4, !dbg !11453
  %77 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11454
  %gb73 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %77, i32 0, i32 2, !dbg !11455
  %call74 = call i32 @get_bits(%struct.GetBitContext* %gb73, i32 8), !dbg !11456
  store i32 %call74, i32* %t_h, align 4, !dbg !11457
  %78 = load i32, i32* %t_w, align 4, !dbg !11458
  %tobool75 = icmp ne i32 %78, 0, !dbg !11458
  br i1 %tobool75, label %land.lhs.true, label %if.end88, !dbg !11460

land.lhs.true:                                    ; preds = %if.then70
  %79 = load i32, i32* %t_h, align 4, !dbg !11461
  %tobool76 = icmp ne i32 %79, 0, !dbg !11461
  br i1 %tobool76, label %if.then77, label %if.end88, !dbg !11463

if.then77:                                        ; preds = %land.lhs.true
  %80 = load i32, i32* %len, align 4, !dbg !11464
  %sub78 = sub nsw i32 %80, 10, !dbg !11467
  %81 = load i32, i32* %t_w, align 4, !dbg !11468
  %82 = load i32, i32* %t_h, align 4, !dbg !11469
  %mul79 = mul nsw i32 %81, %82, !dbg !11470
  %mul80 = mul nsw i32 %mul79, 3, !dbg !11471
  %sub81 = sub nsw i32 %sub78, %mul80, !dbg !11472
  %cmp82 = icmp sgt i32 %sub81, 0, !dbg !11473
  br i1 %cmp82, label %if.then83, label %if.end87, !dbg !11474

if.then83:                                        ; preds = %if.then77
  %83 = load i32, i32* %t_w, align 4, !dbg !11475
  %84 = load i32, i32* %t_h, align 4, !dbg !11476
  %mul84 = mul nsw i32 %83, %84, !dbg !11477
  %mul85 = mul nsw i32 %mul84, 3, !dbg !11478
  %85 = load i32, i32* %len, align 4, !dbg !11479
  %sub86 = sub nsw i32 %85, %mul85, !dbg !11479
  store i32 %sub86, i32* %len, align 4, !dbg !11479
  br label %if.end87, !dbg !11480

if.end87:                                         ; preds = %if.then83, %if.then77
  br label %if.end88, !dbg !11481

if.end88:                                         ; preds = %if.end87, %land.lhs.true, %if.then70
  %86 = load i32, i32* %len, align 4, !dbg !11482
  %sub89 = sub nsw i32 %86, 2, !dbg !11482
  store i32 %sub89, i32* %len, align 4, !dbg !11482
  br label %if.end90, !dbg !11483

if.end90:                                         ; preds = %if.end88, %if.end67
  br label %out, !dbg !11484

if.end91:                                         ; preds = %if.end19
  %87 = load i32, i32* %id, align 4, !dbg !11485
  %88 = load i32, i32* bitcast ([5 x i8]* @.str.101 to i32*), align 1, !dbg !11486
  store i32 %88, i32* %x.addr.i453, align 4, !dbg !11487
  %89 = load i32, i32* %x.addr.i453, align 4, !dbg !11488
  %shl.i454 = shl i32 %89, 8, !dbg !11489
  %and.i455 = and i32 %shl.i454, 65280, !dbg !11490
  %90 = load i32, i32* %x.addr.i453, align 4, !dbg !11491
  %shr.i456 = lshr i32 %90, 8, !dbg !11492
  %and1.i457 = and i32 %shr.i456, 255, !dbg !11493
  %or.i458 = or i32 %and.i455, %and1.i457, !dbg !11494
  %shl2.i459 = shl i32 %or.i458, 16, !dbg !11495
  %91 = load i32, i32* %x.addr.i453, align 4, !dbg !11496
  %shr3.i460 = lshr i32 %91, 16, !dbg !11497
  %shl4.i461 = shl i32 %shr3.i460, 8, !dbg !11498
  %and5.i462 = and i32 %shl4.i461, 65280, !dbg !11499
  %92 = load i32, i32* %x.addr.i453, align 4, !dbg !11500
  %shr6.i463 = lshr i32 %92, 16, !dbg !11501
  %shr7.i464 = lshr i32 %shr6.i463, 8, !dbg !11502
  %and8.i465 = and i32 %shr7.i464, 255, !dbg !11503
  %or9.i466 = or i32 %and5.i462, %and8.i465, !dbg !11504
  %or10.i467 = or i32 %shl2.i459, %or9.i466, !dbg !11505
  %cmp93 = icmp eq i32 %87, %or10.i467, !dbg !11506
  br i1 %cmp93, label %land.lhs.true94, label %if.end121, !dbg !11507

land.lhs.true94:                                  ; preds = %if.end91
  %93 = load i32, i32* %len, align 4, !dbg !11508
  %cmp95 = icmp sge i32 %93, 7, !dbg !11509
  br i1 %cmp95, label %land.lhs.true96, label %if.end121, !dbg !11510

land.lhs.true96:                                  ; preds = %land.lhs.true94
  %94 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11511
  %gb97 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %94, i32 0, i32 2, !dbg !11512
  %call98 = call i32 @show_bits(%struct.GetBitContext* %gb97, i32 8), !dbg !11513
  %cmp99 = icmp eq i32 %call98, 101, !dbg !11514
  br i1 %cmp99, label %land.lhs.true100, label %if.end121, !dbg !11515

land.lhs.true100:                                 ; preds = %land.lhs.true96
  %95 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11516
  %gb101 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %95, i32 0, i32 2, !dbg !11517
  %call102 = call i32 @show_bits_long(%struct.GetBitContext* %gb101, i32 32), !dbg !11518
  %96 = load i32, i32* bitcast ([5 x i8]* @.str.102 to i32*), align 1, !dbg !11519
  store i32 %96, i32* %x.addr.i468, align 4, !dbg !11520
  %97 = load i32, i32* %x.addr.i468, align 4, !dbg !11521
  %shl.i469 = shl i32 %97, 8, !dbg !11522
  %and.i470 = and i32 %shl.i469, 65280, !dbg !11523
  %98 = load i32, i32* %x.addr.i468, align 4, !dbg !11524
  %shr.i471 = lshr i32 %98, 8, !dbg !11525
  %and1.i472 = and i32 %shr.i471, 255, !dbg !11526
  %or.i473 = or i32 %and.i470, %and1.i472, !dbg !11527
  %shl2.i474 = shl i32 %or.i473, 16, !dbg !11528
  %99 = load i32, i32* %x.addr.i468, align 4, !dbg !11529
  %shr3.i475 = lshr i32 %99, 16, !dbg !11530
  %shl4.i476 = shl i32 %shr3.i475, 8, !dbg !11531
  %and5.i477 = and i32 %shl4.i476, 65280, !dbg !11532
  %100 = load i32, i32* %x.addr.i468, align 4, !dbg !11533
  %shr6.i478 = lshr i32 %100, 16, !dbg !11534
  %shr7.i479 = lshr i32 %shr6.i478, 8, !dbg !11535
  %and8.i480 = and i32 %shr7.i479, 255, !dbg !11536
  %or9.i481 = or i32 %and5.i477, %and8.i480, !dbg !11537
  %or10.i482 = or i32 %shl2.i474, %or9.i481, !dbg !11538
  %cmp104 = icmp ne i32 %call102, %or10.i482, !dbg !11539
  br i1 %cmp104, label %if.then105, label %if.end121, !dbg !11540

if.then105:                                       ; preds = %land.lhs.true100
  %101 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11542
  %gb106 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %101, i32 0, i32 2, !dbg !11544
  call void @skip_bits(%struct.GetBitContext* %gb106, i32 8), !dbg !11545
  %102 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11546
  %gb107 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %102, i32 0, i32 2, !dbg !11547
  call void @skip_bits(%struct.GetBitContext* %gb107, i32 16), !dbg !11548
  %103 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11549
  %gb108 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %103, i32 0, i32 2, !dbg !11550
  call void @skip_bits(%struct.GetBitContext* %gb108, i32 16), !dbg !11551
  %104 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11552
  %gb109 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %104, i32 0, i32 2, !dbg !11553
  call void @skip_bits(%struct.GetBitContext* %gb109, i32 16), !dbg !11554
  %105 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11555
  %gb110 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %105, i32 0, i32 2, !dbg !11556
  %call111 = call i32 @get_bits(%struct.GetBitContext* %gb110, i32 8), !dbg !11557
  %106 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11558
  %adobe_transform = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %106, i32 0, i32 25, !dbg !11559
  store i32 %call111, i32* %adobe_transform, align 4, !dbg !11560
  %107 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11561
  %avctx112 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %107, i32 0, i32 1, !dbg !11563
  %108 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx112, align 8, !dbg !11563
  %debug113 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %108, i32 0, i32 134, !dbg !11564
  %109 = load i32, i32* %debug113, align 4, !dbg !11564
  %and114 = and i32 %109, 1, !dbg !11565
  %tobool115 = icmp ne i32 %and114, 0, !dbg !11565
  br i1 %tobool115, label %if.then116, label %if.end119, !dbg !11566

if.then116:                                       ; preds = %if.then105
  %110 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11567
  %avctx117 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %110, i32 0, i32 1, !dbg !11568
  %111 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx117, align 8, !dbg !11568
  %112 = bitcast %struct.AVCodecContext* %111 to i8*, !dbg !11567
  %113 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11569
  %adobe_transform118 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %113, i32 0, i32 25, !dbg !11570
  %114 = load i32, i32* %adobe_transform118, align 4, !dbg !11570
  call void (i8*, i32, i8*, ...) @av_log(i8* %112, i32 32, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.103, i32 0, i32 0), i32 %114), !dbg !11571
  br label %if.end119, !dbg !11571

if.end119:                                        ; preds = %if.then116, %if.then105
  %115 = load i32, i32* %len, align 4, !dbg !11572
  %sub120 = sub nsw i32 %115, 7, !dbg !11572
  store i32 %sub120, i32* %len, align 4, !dbg !11572
  br label %out, !dbg !11573

if.end121:                                        ; preds = %land.lhs.true100, %land.lhs.true96, %land.lhs.true94, %if.end91
  %116 = load i32, i32* %id, align 4, !dbg !11574
  %117 = load i32, i32* bitcast ([5 x i8]* @.str.104 to i32*), align 1, !dbg !11575
  store i32 %117, i32* %x.addr.i483, align 4, !dbg !11576
  %118 = load i32, i32* %x.addr.i483, align 4, !dbg !11577
  %shl.i484 = shl i32 %118, 8, !dbg !11578
  %and.i485 = and i32 %shl.i484, 65280, !dbg !11579
  %119 = load i32, i32* %x.addr.i483, align 4, !dbg !11580
  %shr.i486 = lshr i32 %119, 8, !dbg !11581
  %and1.i487 = and i32 %shr.i486, 255, !dbg !11582
  %or.i488 = or i32 %and.i485, %and1.i487, !dbg !11583
  %shl2.i489 = shl i32 %or.i488, 16, !dbg !11584
  %120 = load i32, i32* %x.addr.i483, align 4, !dbg !11585
  %shr3.i490 = lshr i32 %120, 16, !dbg !11586
  %shl4.i491 = shl i32 %shr3.i490, 8, !dbg !11587
  %and5.i492 = and i32 %shl4.i491, 65280, !dbg !11588
  %121 = load i32, i32* %x.addr.i483, align 4, !dbg !11589
  %shr6.i493 = lshr i32 %121, 16, !dbg !11590
  %shr7.i494 = lshr i32 %shr6.i493, 8, !dbg !11591
  %and8.i495 = and i32 %shr7.i494, 255, !dbg !11592
  %or9.i496 = or i32 %and5.i492, %and8.i495, !dbg !11593
  %or10.i497 = or i32 %shl2.i489, %or9.i496, !dbg !11594
  %cmp123 = icmp eq i32 %116, %or10.i497, !dbg !11595
  br i1 %cmp123, label %if.then124, label %if.end156, !dbg !11596

if.then124:                                       ; preds = %if.end121
  call void @llvm.dbg.declare(metadata i32* %rgb, metadata !11597, metadata !2073), !dbg !11599
  %122 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11600
  %rgb125 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %122, i32 0, i32 17, !dbg !11601
  %123 = load i32, i32* %rgb125, align 4, !dbg !11601
  store i32 %123, i32* %rgb, align 4, !dbg !11599
  call void @llvm.dbg.declare(metadata i32* %pegasus_rct, metadata !11602, metadata !2073), !dbg !11603
  %124 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11604
  %pegasus_rct126 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %124, i32 0, i32 21, !dbg !11605
  %125 = load i32, i32* %pegasus_rct126, align 4, !dbg !11605
  store i32 %125, i32* %pegasus_rct, align 4, !dbg !11603
  %126 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11606
  %avctx127 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %126, i32 0, i32 1, !dbg !11608
  %127 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx127, align 8, !dbg !11608
  %debug128 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %127, i32 0, i32 134, !dbg !11609
  %128 = load i32, i32* %debug128, align 4, !dbg !11609
  %and129 = and i32 %128, 1, !dbg !11610
  %tobool130 = icmp ne i32 %and129, 0, !dbg !11610
  br i1 %tobool130, label %if.then131, label %if.end133, !dbg !11611

if.then131:                                       ; preds = %if.then124
  %129 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11612
  %avctx132 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %129, i32 0, i32 1, !dbg !11613
  %130 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx132, align 8, !dbg !11613
  %131 = bitcast %struct.AVCodecContext* %130 to i8*, !dbg !11612
  call void (i8*, i32, i8*, ...) @av_log(i8* %131, i32 32, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.105, i32 0, i32 0)), !dbg !11614
  br label %if.end133, !dbg !11614

if.end133:                                        ; preds = %if.then131, %if.then124
  %132 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11615
  %gb134 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %132, i32 0, i32 2, !dbg !11616
  call void @skip_bits(%struct.GetBitContext* %gb134, i32 16), !dbg !11617
  %133 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11618
  %gb135 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %133, i32 0, i32 2, !dbg !11619
  call void @skip_bits(%struct.GetBitContext* %gb135, i32 16), !dbg !11620
  %134 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11621
  %gb136 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %134, i32 0, i32 2, !dbg !11622
  call void @skip_bits(%struct.GetBitContext* %gb136, i32 16), !dbg !11623
  %135 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11624
  %gb137 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %135, i32 0, i32 2, !dbg !11625
  call void @skip_bits(%struct.GetBitContext* %gb137, i32 16), !dbg !11626
  %136 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11627
  %gb138 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %136, i32 0, i32 2, !dbg !11628
  %call139 = call i32 @get_bits(%struct.GetBitContext* %gb138, i32 8), !dbg !11629
  store i32 %call139, i32* %i, align 4, !dbg !11630
  switch i32 %call139, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb140
  ], !dbg !11631

sw.bb:                                            ; preds = %if.end133
  store i32 1, i32* %rgb, align 4, !dbg !11632
  store i32 0, i32* %pegasus_rct, align 4, !dbg !11634
  br label %sw.epilog, !dbg !11635

sw.bb140:                                         ; preds = %if.end133
  store i32 1, i32* %rgb, align 4, !dbg !11636
  store i32 1, i32* %pegasus_rct, align 4, !dbg !11637
  br label %sw.epilog, !dbg !11638

sw.default:                                       ; preds = %if.end133
  %137 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11639
  %avctx141 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %137, i32 0, i32 1, !dbg !11640
  %138 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx141, align 8, !dbg !11640
  %139 = bitcast %struct.AVCodecContext* %138 to i8*, !dbg !11639
  %140 = load i32, i32* %i, align 4, !dbg !11641
  call void (i8*, i32, i8*, ...) @av_log(i8* %139, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.106, i32 0, i32 0), i32 %140), !dbg !11642
  br label %sw.epilog, !dbg !11643

sw.epilog:                                        ; preds = %sw.default, %sw.bb140, %sw.bb
  %141 = load i32, i32* %len, align 4, !dbg !11644
  %sub142 = sub nsw i32 %141, 9, !dbg !11644
  store i32 %sub142, i32* %len, align 4, !dbg !11644
  %142 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11645
  %got_picture = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %142, i32 0, i32 54, !dbg !11647
  %143 = load i32, i32* %got_picture, align 16, !dbg !11647
  %tobool143 = icmp ne i32 %143, 0, !dbg !11645
  br i1 %tobool143, label %if.then144, label %if.end153, !dbg !11648

if.then144:                                       ; preds = %sw.epilog
  %144 = load i32, i32* %rgb, align 4, !dbg !11649
  %145 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11651
  %rgb145 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %145, i32 0, i32 17, !dbg !11652
  %146 = load i32, i32* %rgb145, align 4, !dbg !11652
  %cmp146 = icmp ne i32 %144, %146, !dbg !11653
  br i1 %cmp146, label %if.then150, label %lor.lhs.false147, !dbg !11654

lor.lhs.false147:                                 ; preds = %if.then144
  %147 = load i32, i32* %pegasus_rct, align 4, !dbg !11655
  %148 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11657
  %pegasus_rct148 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %148, i32 0, i32 21, !dbg !11658
  %149 = load i32, i32* %pegasus_rct148, align 4, !dbg !11658
  %cmp149 = icmp ne i32 %147, %149, !dbg !11659
  br i1 %cmp149, label %if.then150, label %if.end152, !dbg !11660

if.then150:                                       ; preds = %lor.lhs.false147, %if.then144
  %150 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11661
  %avctx151 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %150, i32 0, i32 1, !dbg !11663
  %151 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx151, align 8, !dbg !11663
  %152 = bitcast %struct.AVCodecContext* %151 to i8*, !dbg !11661
  call void (i8*, i32, i8*, ...) @av_log(i8* %152, i32 24, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.107, i32 0, i32 0)), !dbg !11664
  br label %out, !dbg !11665

if.end152:                                        ; preds = %lor.lhs.false147
  br label %if.end153, !dbg !11666

if.end153:                                        ; preds = %if.end152, %sw.epilog
  %153 = load i32, i32* %rgb, align 4, !dbg !11668
  %154 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11669
  %rgb154 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %154, i32 0, i32 17, !dbg !11670
  store i32 %153, i32* %rgb154, align 4, !dbg !11671
  %155 = load i32, i32* %pegasus_rct, align 4, !dbg !11672
  %156 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11673
  %pegasus_rct155 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %156, i32 0, i32 21, !dbg !11674
  store i32 %155, i32* %pegasus_rct155, align 4, !dbg !11675
  br label %out, !dbg !11676

if.end156:                                        ; preds = %if.end121
  %157 = load i32, i32* %id, align 4, !dbg !11677
  %158 = load i32, i32* bitcast ([5 x i8]* @.str.108 to i32*), align 1, !dbg !11679
  %cmp157 = icmp eq i32 %157, %158, !dbg !11680
  br i1 %cmp157, label %land.lhs.true158, label %if.end172, !dbg !11681

land.lhs.true158:                                 ; preds = %if.end156
  %159 = load i32, i32* %len, align 4, !dbg !11682
  %cmp159 = icmp sgt i32 %159, 0, !dbg !11684
  br i1 %cmp159, label %if.then160, label %if.end172, !dbg !11685

if.then160:                                       ; preds = %land.lhs.true158
  %160 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11686
  %gb161 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %160, i32 0, i32 2, !dbg !11688
  %call162 = call i32 @get_bits(%struct.GetBitContext* %gb161, i32 8), !dbg !11689
  %161 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11690
  %colr = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %161, i32 0, i32 23, !dbg !11691
  store i32 %call162, i32* %colr, align 4, !dbg !11692
  %162 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11693
  %avctx163 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %162, i32 0, i32 1, !dbg !11695
  %163 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx163, align 8, !dbg !11695
  %debug164 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %163, i32 0, i32 134, !dbg !11696
  %164 = load i32, i32* %debug164, align 4, !dbg !11696
  %and165 = and i32 %164, 1, !dbg !11697
  %tobool166 = icmp ne i32 %and165, 0, !dbg !11697
  br i1 %tobool166, label %if.then167, label %if.end170, !dbg !11698

if.then167:                                       ; preds = %if.then160
  %165 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11699
  %avctx168 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %165, i32 0, i32 1, !dbg !11700
  %166 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx168, align 8, !dbg !11700
  %167 = bitcast %struct.AVCodecContext* %166 to i8*, !dbg !11699
  %168 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11701
  %colr169 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %168, i32 0, i32 23, !dbg !11702
  %169 = load i32, i32* %colr169, align 4, !dbg !11702
  call void (i8*, i32, i8*, ...) @av_log(i8* %167, i32 32, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.109, i32 0, i32 0), i32 %169), !dbg !11703
  br label %if.end170, !dbg !11703

if.end170:                                        ; preds = %if.then167, %if.then160
  %170 = load i32, i32* %len, align 4, !dbg !11704
  %dec171 = add nsw i32 %170, -1, !dbg !11704
  store i32 %dec171, i32* %len, align 4, !dbg !11704
  br label %out, !dbg !11705

if.end172:                                        ; preds = %land.lhs.true158, %if.end156
  %171 = load i32, i32* %id, align 4, !dbg !11706
  %172 = load i32, i32* bitcast ([5 x i8]* @.str.110 to i32*), align 1, !dbg !11708
  %cmp173 = icmp eq i32 %171, %172, !dbg !11709
  br i1 %cmp173, label %land.lhs.true174, label %if.end188, !dbg !11710

land.lhs.true174:                                 ; preds = %if.end172
  %173 = load i32, i32* %len, align 4, !dbg !11711
  %cmp175 = icmp sgt i32 %173, 0, !dbg !11713
  br i1 %cmp175, label %if.then176, label %if.end188, !dbg !11714

if.then176:                                       ; preds = %land.lhs.true174
  %174 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11715
  %gb177 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %174, i32 0, i32 2, !dbg !11717
  %call178 = call i32 @get_bits(%struct.GetBitContext* %gb177, i32 8), !dbg !11718
  %175 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11719
  %xfrm = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %175, i32 0, i32 24, !dbg !11720
  store i32 %call178, i32* %xfrm, align 16, !dbg !11721
  %176 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11722
  %avctx179 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %176, i32 0, i32 1, !dbg !11724
  %177 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx179, align 8, !dbg !11724
  %debug180 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %177, i32 0, i32 134, !dbg !11725
  %178 = load i32, i32* %debug180, align 4, !dbg !11725
  %and181 = and i32 %178, 1, !dbg !11726
  %tobool182 = icmp ne i32 %and181, 0, !dbg !11726
  br i1 %tobool182, label %if.then183, label %if.end186, !dbg !11727

if.then183:                                       ; preds = %if.then176
  %179 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11728
  %avctx184 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %179, i32 0, i32 1, !dbg !11729
  %180 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx184, align 8, !dbg !11729
  %181 = bitcast %struct.AVCodecContext* %180 to i8*, !dbg !11728
  %182 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11730
  %xfrm185 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %182, i32 0, i32 24, !dbg !11731
  %183 = load i32, i32* %xfrm185, align 16, !dbg !11731
  call void (i8*, i32, i8*, ...) @av_log(i8* %181, i32 32, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.111, i32 0, i32 0), i32 %183), !dbg !11732
  br label %if.end186, !dbg !11732

if.end186:                                        ; preds = %if.then183, %if.then176
  %184 = load i32, i32* %len, align 4, !dbg !11733
  %dec187 = add nsw i32 %184, -1, !dbg !11733
  store i32 %dec187, i32* %len, align 4, !dbg !11733
  br label %out, !dbg !11734

if.end188:                                        ; preds = %land.lhs.true174, %if.end172
  %185 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11735
  %start_code = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %185, i32 0, i32 4, !dbg !11736
  %186 = load i32, i32* %start_code, align 4, !dbg !11736
  %cmp189 = icmp eq i32 %186, 227, !dbg !11737
  br i1 %cmp189, label %land.lhs.true190, label %if.end244, !dbg !11738

land.lhs.true190:                                 ; preds = %if.end188
  %187 = load i32, i32* %id, align 4, !dbg !11739
  %188 = load i32, i32* bitcast ([5 x i8]* @.str.112 to i32*), align 1, !dbg !11740
  store i32 %188, i32* %x.addr.i498, align 4, !dbg !11741
  %189 = load i32, i32* %x.addr.i498, align 4, !dbg !11742
  %shl.i499 = shl i32 %189, 8, !dbg !11743
  %and.i500 = and i32 %shl.i499, 65280, !dbg !11744
  %190 = load i32, i32* %x.addr.i498, align 4, !dbg !11745
  %shr.i501 = lshr i32 %190, 8, !dbg !11746
  %and1.i502 = and i32 %shr.i501, 255, !dbg !11747
  %or.i503 = or i32 %and.i500, %and1.i502, !dbg !11748
  %shl2.i504 = shl i32 %or.i503, 16, !dbg !11749
  %191 = load i32, i32* %x.addr.i498, align 4, !dbg !11750
  %shr3.i505 = lshr i32 %191, 16, !dbg !11751
  %shl4.i506 = shl i32 %shr3.i505, 8, !dbg !11752
  %and5.i507 = and i32 %shl4.i506, 65280, !dbg !11753
  %192 = load i32, i32* %x.addr.i498, align 4, !dbg !11754
  %shr6.i508 = lshr i32 %192, 16, !dbg !11755
  %shr7.i509 = lshr i32 %shr6.i508, 8, !dbg !11756
  %and8.i510 = and i32 %shr7.i509, 255, !dbg !11757
  %or9.i511 = or i32 %and5.i507, %and8.i510, !dbg !11758
  %or10.i512 = or i32 %shl2.i504, %or9.i511, !dbg !11759
  %cmp192 = icmp eq i32 %187, %or10.i512, !dbg !11760
  br i1 %cmp192, label %land.lhs.true193, label %if.end244, !dbg !11761

land.lhs.true193:                                 ; preds = %land.lhs.true190
  %193 = load i32, i32* %len, align 4, !dbg !11762
  %cmp194 = icmp sge i32 %193, 10, !dbg !11764
  br i1 %cmp194, label %if.then195, label %if.end244, !dbg !11765

if.then195:                                       ; preds = %land.lhs.true193
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !11766, metadata !2073), !dbg !11768
  call void @llvm.dbg.declare(metadata i32* %layout, metadata !11769, metadata !2073), !dbg !11770
  call void @llvm.dbg.declare(metadata i32* %type, metadata !11771, metadata !2073), !dbg !11772
  %194 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11773
  %avctx196 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %194, i32 0, i32 1, !dbg !11775
  %195 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx196, align 8, !dbg !11775
  %debug197 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %195, i32 0, i32 134, !dbg !11776
  %196 = load i32, i32* %debug197, align 4, !dbg !11776
  %and198 = and i32 %196, 1, !dbg !11777
  %tobool199 = icmp ne i32 %and198, 0, !dbg !11777
  br i1 %tobool199, label %if.then200, label %if.end202, !dbg !11778

if.then200:                                       ; preds = %if.then195
  %197 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11779
  %avctx201 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %197, i32 0, i32 1, !dbg !11780
  %198 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx201, align 8, !dbg !11780
  %199 = bitcast %struct.AVCodecContext* %198 to i8*, !dbg !11779
  call void (i8*, i32, i8*, ...) @av_log(i8* %199, i32 32, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.113, i32 0, i32 0)), !dbg !11781
  br label %if.end202, !dbg !11781

if.end202:                                        ; preds = %if.then200, %if.then195
  %200 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11782
  %gb203 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %200, i32 0, i32 2, !dbg !11783
  call void @skip_bits(%struct.GetBitContext* %gb203, i32 32), !dbg !11784
  %201 = load i32, i32* %len, align 4, !dbg !11785
  %sub204 = sub nsw i32 %201, 4, !dbg !11785
  store i32 %sub204, i32* %len, align 4, !dbg !11785
  %202 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11786
  %gb205 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %202, i32 0, i32 2, !dbg !11787
  call void @skip_bits(%struct.GetBitContext* %gb205, i32 16), !dbg !11788
  %203 = load i32, i32* %len, align 4, !dbg !11789
  %sub206 = sub nsw i32 %203, 2, !dbg !11789
  store i32 %sub206, i32* %len, align 4, !dbg !11789
  %204 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11790
  %gb207 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %204, i32 0, i32 2, !dbg !11791
  call void @skip_bits(%struct.GetBitContext* %gb207, i32 8), !dbg !11792
  %205 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11793
  %gb208 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %205, i32 0, i32 2, !dbg !11794
  %call209 = call i32 @get_bits(%struct.GetBitContext* %gb208, i32 8), !dbg !11795
  store i32 %call209, i32* %flags, align 4, !dbg !11796
  %206 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11797
  %gb210 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %206, i32 0, i32 2, !dbg !11798
  %call211 = call i32 @get_bits(%struct.GetBitContext* %gb210, i32 8), !dbg !11799
  store i32 %call211, i32* %layout, align 4, !dbg !11800
  %207 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11801
  %gb212 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %207, i32 0, i32 2, !dbg !11802
  %call213 = call i32 @get_bits(%struct.GetBitContext* %gb212, i32 8), !dbg !11803
  store i32 %call213, i32* %type, align 4, !dbg !11804
  %208 = load i32, i32* %len, align 4, !dbg !11805
  %sub214 = sub nsw i32 %208, 4, !dbg !11805
  store i32 %sub214, i32* %len, align 4, !dbg !11805
  %call215 = call %struct.AVStereo3D* @av_stereo3d_alloc(), !dbg !11806
  %209 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11807
  %stereo3d = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %209, i32 0, i32 80, !dbg !11808
  store %struct.AVStereo3D* %call215, %struct.AVStereo3D** %stereo3d, align 8, !dbg !11809
  %210 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11810
  %stereo3d216 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %210, i32 0, i32 80, !dbg !11812
  %211 = load %struct.AVStereo3D*, %struct.AVStereo3D** %stereo3d216, align 8, !dbg !11812
  %tobool217 = icmp ne %struct.AVStereo3D* %211, null, !dbg !11810
  br i1 %tobool217, label %if.end219, label %if.then218, !dbg !11813

if.then218:                                       ; preds = %if.end202
  br label %out, !dbg !11814

if.end219:                                        ; preds = %if.end202
  %212 = load i32, i32* %type, align 4, !dbg !11816
  %cmp220 = icmp eq i32 %212, 0, !dbg !11818
  br i1 %cmp220, label %if.then221, label %if.else, !dbg !11819

if.then221:                                       ; preds = %if.end219
  %213 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11820
  %stereo3d222 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %213, i32 0, i32 80, !dbg !11822
  %214 = load %struct.AVStereo3D*, %struct.AVStereo3D** %stereo3d222, align 8, !dbg !11822
  %type223 = getelementptr inbounds %struct.AVStereo3D, %struct.AVStereo3D* %214, i32 0, i32 0, !dbg !11823
  store i32 0, i32* %type223, align 4, !dbg !11824
  br label %if.end243, !dbg !11825

if.else:                                          ; preds = %if.end219
  %215 = load i32, i32* %type, align 4, !dbg !11826
  %cmp224 = icmp eq i32 %215, 1, !dbg !11829
  br i1 %cmp224, label %if.then225, label %if.end242, !dbg !11826

if.then225:                                       ; preds = %if.else
  %216 = load i32, i32* %layout, align 4, !dbg !11830
  switch i32 %216, label %sw.epilog235 [
    i32 1, label %sw.bb226
    i32 2, label %sw.bb229
    i32 3, label %sw.bb232
  ], !dbg !11832

sw.bb226:                                         ; preds = %if.then225
  %217 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11833
  %stereo3d227 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %217, i32 0, i32 80, !dbg !11835
  %218 = load %struct.AVStereo3D*, %struct.AVStereo3D** %stereo3d227, align 8, !dbg !11835
  %type228 = getelementptr inbounds %struct.AVStereo3D, %struct.AVStereo3D* %218, i32 0, i32 0, !dbg !11836
  store i32 6, i32* %type228, align 4, !dbg !11837
  br label %sw.epilog235, !dbg !11838

sw.bb229:                                         ; preds = %if.then225
  %219 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11839
  %stereo3d230 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %219, i32 0, i32 80, !dbg !11840
  %220 = load %struct.AVStereo3D*, %struct.AVStereo3D** %stereo3d230, align 8, !dbg !11840
  %type231 = getelementptr inbounds %struct.AVStereo3D, %struct.AVStereo3D* %220, i32 0, i32 0, !dbg !11841
  store i32 1, i32* %type231, align 4, !dbg !11842
  br label %sw.epilog235, !dbg !11843

sw.bb232:                                         ; preds = %if.then225
  %221 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11844
  %stereo3d233 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %221, i32 0, i32 80, !dbg !11845
  %222 = load %struct.AVStereo3D*, %struct.AVStereo3D** %stereo3d233, align 8, !dbg !11845
  %type234 = getelementptr inbounds %struct.AVStereo3D, %struct.AVStereo3D* %222, i32 0, i32 0, !dbg !11846
  store i32 2, i32* %type234, align 4, !dbg !11847
  br label %sw.epilog235, !dbg !11848

sw.epilog235:                                     ; preds = %if.then225, %sw.bb232, %sw.bb229, %sw.bb226
  %223 = load i32, i32* %flags, align 4, !dbg !11849
  %and236 = and i32 %223, 4, !dbg !11851
  %tobool237 = icmp ne i32 %and236, 0, !dbg !11851
  br i1 %tobool237, label %if.end241, label %if.then238, !dbg !11852

if.then238:                                       ; preds = %sw.epilog235
  %224 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11853
  %stereo3d239 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %224, i32 0, i32 80, !dbg !11855
  %225 = load %struct.AVStereo3D*, %struct.AVStereo3D** %stereo3d239, align 8, !dbg !11855
  %flags240 = getelementptr inbounds %struct.AVStereo3D, %struct.AVStereo3D* %225, i32 0, i32 1, !dbg !11856
  store i32 1, i32* %flags240, align 4, !dbg !11857
  br label %if.end241, !dbg !11858

if.end241:                                        ; preds = %if.then238, %sw.epilog235
  br label %if.end242, !dbg !11859

if.end242:                                        ; preds = %if.end241, %if.else
  br label %if.end243

if.end243:                                        ; preds = %if.end242, %if.then221
  br label %out, !dbg !11860

if.end244:                                        ; preds = %land.lhs.true193, %land.lhs.true190, %if.end188
  %226 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11861
  %start_code245 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %226, i32 0, i32 4, !dbg !11862
  %227 = load i32, i32* %start_code245, align 4, !dbg !11862
  %cmp246 = icmp eq i32 %227, 225, !dbg !11863
  br i1 %cmp246, label %land.lhs.true247, label %if.end273, !dbg !11864

land.lhs.true247:                                 ; preds = %if.end244
  %228 = load i32, i32* %id, align 4, !dbg !11865
  %229 = load i32, i32* bitcast ([5 x i8]* @.str.114 to i32*), align 1, !dbg !11866
  store i32 %229, i32* %x.addr.i528, align 4, !dbg !11867
  %230 = load i32, i32* %x.addr.i528, align 4, !dbg !11868
  %shl.i529 = shl i32 %230, 8, !dbg !11869
  %and.i530 = and i32 %shl.i529, 65280, !dbg !11870
  %231 = load i32, i32* %x.addr.i528, align 4, !dbg !11871
  %shr.i531 = lshr i32 %231, 8, !dbg !11872
  %and1.i532 = and i32 %shr.i531, 255, !dbg !11873
  %or.i533 = or i32 %and.i530, %and1.i532, !dbg !11874
  %shl2.i534 = shl i32 %or.i533, 16, !dbg !11875
  %232 = load i32, i32* %x.addr.i528, align 4, !dbg !11876
  %shr3.i535 = lshr i32 %232, 16, !dbg !11877
  %shl4.i536 = shl i32 %shr3.i535, 8, !dbg !11878
  %and5.i537 = and i32 %shl4.i536, 65280, !dbg !11879
  %233 = load i32, i32* %x.addr.i528, align 4, !dbg !11880
  %shr6.i538 = lshr i32 %233, 16, !dbg !11881
  %shr7.i539 = lshr i32 %shr6.i538, 8, !dbg !11882
  %and8.i540 = and i32 %shr7.i539, 255, !dbg !11883
  %or9.i541 = or i32 %and5.i537, %and8.i540, !dbg !11884
  %or10.i542 = or i32 %shl2.i534, %or9.i541, !dbg !11885
  %cmp249 = icmp eq i32 %228, %or10.i542, !dbg !11886
  br i1 %cmp249, label %land.lhs.true250, label %if.end273, !dbg !11887

land.lhs.true250:                                 ; preds = %land.lhs.true247
  %234 = load i32, i32* %len, align 4, !dbg !11888
  %cmp251 = icmp sge i32 %234, 2, !dbg !11890
  br i1 %cmp251, label %if.then252, label %if.end273, !dbg !11891

if.then252:                                       ; preds = %land.lhs.true250
  call void @llvm.dbg.declare(metadata %struct.GetByteContext* %gbytes, metadata !11892, metadata !2073), !dbg !11893
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11894, metadata !2073), !dbg !11895
  call void @llvm.dbg.declare(metadata i32* %le, metadata !11896, metadata !2073), !dbg !11897
  call void @llvm.dbg.declare(metadata i32* %ifd_offset, metadata !11898, metadata !2073), !dbg !11899
  call void @llvm.dbg.declare(metadata i32* %bytes_read, metadata !11900, metadata !2073), !dbg !11901
  call void @llvm.dbg.declare(metadata i8** %aligned, metadata !11902, metadata !2073), !dbg !11903
  %235 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11904
  %gb253 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %235, i32 0, i32 2, !dbg !11905
  call void @skip_bits(%struct.GetBitContext* %gb253, i32 16), !dbg !11906
  %236 = load i32, i32* %len, align 4, !dbg !11907
  %sub254 = sub nsw i32 %236, 2, !dbg !11907
  store i32 %sub254, i32* %len, align 4, !dbg !11907
  %237 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11908
  %gb255 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %237, i32 0, i32 2, !dbg !11909
  %call256 = call i8* @align_get_bits(%struct.GetBitContext* %gb255), !dbg !11910
  store i8* %call256, i8** %aligned, align 8, !dbg !11911
  %238 = load i8*, i8** %aligned, align 8, !dbg !11912
  %239 = load i32, i32* %len, align 4, !dbg !11913
  store %struct.GetByteContext* %gbytes, %struct.GetByteContext** %g.addr.i, align 8, !dbg !11914
  store i8* %238, i8** %buf.addr.i, align 8, !dbg !11914
  store i32 %239, i32* %buf_size.addr.i, align 4, !dbg !11914
  %240 = load i32, i32* %buf_size.addr.i, align 4, !dbg !11915
  %cmp.i = icmp sge i32 %240, 0, !dbg !11919
  br i1 %cmp.i, label %bytestream2_init.exit, label %if.then.i, !dbg !11920

if.then.i:                                        ; preds = %if.then252
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.133, i32 0, i32 0), i32 137) #10, !dbg !11921
  call void @abort() #8, !dbg !11924
  unreachable, !dbg !11926

bytestream2_init.exit:                            ; preds = %if.then252
  %241 = load i8*, i8** %buf.addr.i, align 8, !dbg !11927
  %242 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !11928
  %buffer.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %242, i32 0, i32 0, !dbg !11929
  store i8* %241, i8** %buffer.i, align 8, !dbg !11930
  %243 = load i8*, i8** %buf.addr.i, align 8, !dbg !11931
  %244 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !11932
  %buffer_start.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %244, i32 0, i32 2, !dbg !11933
  store i8* %243, i8** %buffer_start.i, align 8, !dbg !11934
  %245 = load i8*, i8** %buf.addr.i, align 8, !dbg !11935
  %246 = load i32, i32* %buf_size.addr.i, align 4, !dbg !11936
  %idx.ext.i = sext i32 %246 to i64, !dbg !11937
  %add.ptr.i = getelementptr inbounds i8, i8* %245, i64 %idx.ext.i, !dbg !11937
  %247 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !11938
  %buffer_end.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %247, i32 0, i32 1, !dbg !11939
  store i8* %add.ptr.i, i8** %buffer_end.i, align 8, !dbg !11940
  %call257 = call i32 @ff_tdecode_header(%struct.GetByteContext* %gbytes, i32* %le, i32* %ifd_offset), !dbg !11941
  store i32 %call257, i32* %ret, align 4, !dbg !11942
  %248 = load i32, i32* %ret, align 4, !dbg !11943
  %tobool258 = icmp ne i32 %248, 0, !dbg !11943
  br i1 %tobool258, label %if.then259, label %if.else261, !dbg !11944

if.then259:                                       ; preds = %bytestream2_init.exit
  %249 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !11945
  %avctx260 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %249, i32 0, i32 1, !dbg !11947
  %250 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx260, align 8, !dbg !11947
  %251 = bitcast %struct.AVCodecContext* %250 to i8*, !dbg !11945
  call void (i8*, i32, i8*, ...) @av_log(i8* %251, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.115, i32 0, i32 0)), !dbg !11948
  br label %if.end269, !dbg !11949

if.else261:                                       ; preds = %bytestream2_init.exit
  %252 = load i32, i32* %ifd_offset, align 4, !dbg !11950
  store %struct.GetByteContext* %gbytes, %struct.GetByteContext** %g.addr.i543, align 8, !dbg !11951
  store i32 %252, i32* %offset.addr.i, align 4, !dbg !11951
  store i32 0, i32* %whence.addr.i, align 4, !dbg !11951
  %253 = load i32, i32* %whence.addr.i, align 4, !dbg !11952
  switch i32 %253, label %sw.default.i [
    i32 1, label %sw.bb.i
    i32 2, label %sw.bb7.i
    i32 0, label %sw.bb20.i
  ], !dbg !11953

sw.bb.i:                                          ; preds = %if.else261
  %254 = load i32, i32* %offset.addr.i, align 4, !dbg !11954
  %255 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i543, align 8, !dbg !11955
  %buffer.i544 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %255, i32 0, i32 0, !dbg !11956
  %256 = load i8*, i8** %buffer.i544, align 8, !dbg !11956
  %257 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i543, align 8, !dbg !11957
  %buffer_start.i545 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %257, i32 0, i32 2, !dbg !11958
  %258 = load i8*, i8** %buffer_start.i545, align 8, !dbg !11958
  %sub.ptr.lhs.cast.i = ptrtoint i8* %256 to i64, !dbg !11959
  %sub.ptr.rhs.cast.i = ptrtoint i8* %258 to i64, !dbg !11959
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i, !dbg !11959
  %sub.i = sub nsw i64 0, %sub.ptr.sub.i, !dbg !11960
  %conv.i = trunc i64 %sub.i to i32, !dbg !11960
  %259 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i543, align 8, !dbg !11961
  %buffer_end.i546 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %259, i32 0, i32 1, !dbg !11962
  %260 = load i8*, i8** %buffer_end.i546, align 8, !dbg !11962
  %261 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i543, align 8, !dbg !11963
  %buffer1.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %261, i32 0, i32 0, !dbg !11964
  %262 = load i8*, i8** %buffer1.i, align 8, !dbg !11964
  %sub.ptr.lhs.cast2.i = ptrtoint i8* %260 to i64, !dbg !11965
  %sub.ptr.rhs.cast3.i = ptrtoint i8* %262 to i64, !dbg !11965
  %sub.ptr.sub4.i = sub i64 %sub.ptr.lhs.cast2.i, %sub.ptr.rhs.cast3.i, !dbg !11965
  %conv5.i = trunc i64 %sub.ptr.sub4.i to i32, !dbg !11961
  store i32 %254, i32* %a.addr.i.i, align 4, !dbg !11966
  store i32 %conv.i, i32* %amin.addr.i.i, align 4, !dbg !11966
  store i32 %conv5.i, i32* %amax.addr.i.i, align 4, !dbg !11966
  %263 = load i32, i32* %a.addr.i.i, align 4, !dbg !11967
  %264 = load i32, i32* %amin.addr.i.i, align 4, !dbg !11969
  %cmp.i.i = icmp slt i32 %263, %264, !dbg !11970
  br i1 %cmp.i.i, label %if.then.i.i, label %if.else.i.i, !dbg !11971

if.then.i.i:                                      ; preds = %sw.bb.i
  %265 = load i32, i32* %amin.addr.i.i, align 4, !dbg !11972
  store i32 %265, i32* %retval.i.i, align 4, !dbg !11974
  br label %av_clip_c.exit.i, !dbg !11974

if.else.i.i:                                      ; preds = %sw.bb.i
  %266 = load i32, i32* %a.addr.i.i, align 4, !dbg !11975
  %267 = load i32, i32* %amax.addr.i.i, align 4, !dbg !11977
  %cmp1.i.i = icmp sgt i32 %266, %267, !dbg !11978
  br i1 %cmp1.i.i, label %if.then2.i.i, label %if.else3.i.i, !dbg !11979

if.then2.i.i:                                     ; preds = %if.else.i.i
  %268 = load i32, i32* %amax.addr.i.i, align 4, !dbg !11980
  store i32 %268, i32* %retval.i.i, align 4, !dbg !11982
  br label %av_clip_c.exit.i, !dbg !11982

if.else3.i.i:                                     ; preds = %if.else.i.i
  %269 = load i32, i32* %a.addr.i.i, align 4, !dbg !11983
  store i32 %269, i32* %retval.i.i, align 4, !dbg !11984
  br label %av_clip_c.exit.i, !dbg !11984

av_clip_c.exit.i:                                 ; preds = %if.else3.i.i, %if.then2.i.i, %if.then.i.i
  %270 = load i32, i32* %retval.i.i, align 4, !dbg !11985
  store i32 %270, i32* %offset.addr.i, align 4, !dbg !11986
  %271 = load i32, i32* %offset.addr.i, align 4, !dbg !11987
  %272 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i543, align 8, !dbg !11988
  %buffer6.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %272, i32 0, i32 0, !dbg !11989
  %273 = load i8*, i8** %buffer6.i, align 8, !dbg !11990
  %idx.ext.i547 = sext i32 %271 to i64, !dbg !11990
  %add.ptr.i548 = getelementptr inbounds i8, i8* %273, i64 %idx.ext.i547, !dbg !11990
  store i8* %add.ptr.i548, i8** %buffer6.i, align 8, !dbg !11990
  br label %sw.epilog.i, !dbg !11991

sw.bb7.i:                                         ; preds = %if.else261
  %274 = load i32, i32* %offset.addr.i, align 4, !dbg !11992
  %275 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i543, align 8, !dbg !11993
  %buffer_end8.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %275, i32 0, i32 1, !dbg !11994
  %276 = load i8*, i8** %buffer_end8.i, align 8, !dbg !11994
  %277 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i543, align 8, !dbg !11995
  %buffer_start9.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %277, i32 0, i32 2, !dbg !11996
  %278 = load i8*, i8** %buffer_start9.i, align 8, !dbg !11996
  %sub.ptr.lhs.cast10.i = ptrtoint i8* %276 to i64, !dbg !11997
  %sub.ptr.rhs.cast11.i = ptrtoint i8* %278 to i64, !dbg !11997
  %sub.ptr.sub12.i = sub i64 %sub.ptr.lhs.cast10.i, %sub.ptr.rhs.cast11.i, !dbg !11997
  %sub13.i = sub nsw i64 0, %sub.ptr.sub12.i, !dbg !11998
  %conv14.i = trunc i64 %sub13.i to i32, !dbg !11998
  store i32 %274, i32* %a.addr.i45.i, align 4, !dbg !11999
  store i32 %conv14.i, i32* %amin.addr.i46.i, align 4, !dbg !11999
  store i32 0, i32* %amax.addr.i47.i, align 4, !dbg !11999
  %279 = load i32, i32* %a.addr.i45.i, align 4, !dbg !12000
  %280 = load i32, i32* %amin.addr.i46.i, align 4, !dbg !12001
  %cmp.i48.i = icmp slt i32 %279, %280, !dbg !12002
  br i1 %cmp.i48.i, label %if.then.i49.i, label %if.else.i51.i, !dbg !12003

if.then.i49.i:                                    ; preds = %sw.bb7.i
  %281 = load i32, i32* %amin.addr.i46.i, align 4, !dbg !12004
  store i32 %281, i32* %retval.i44.i, align 4, !dbg !12005
  br label %av_clip_c.exit54.i, !dbg !12005

if.else.i51.i:                                    ; preds = %sw.bb7.i
  %282 = load i32, i32* %a.addr.i45.i, align 4, !dbg !12006
  %283 = load i32, i32* %amax.addr.i47.i, align 4, !dbg !12007
  %cmp1.i50.i = icmp sgt i32 %282, %283, !dbg !12008
  br i1 %cmp1.i50.i, label %if.then2.i52.i, label %if.else3.i53.i, !dbg !12009

if.then2.i52.i:                                   ; preds = %if.else.i51.i
  %284 = load i32, i32* %amax.addr.i47.i, align 4, !dbg !12010
  store i32 %284, i32* %retval.i44.i, align 4, !dbg !12011
  br label %av_clip_c.exit54.i, !dbg !12011

if.else3.i53.i:                                   ; preds = %if.else.i51.i
  %285 = load i32, i32* %a.addr.i45.i, align 4, !dbg !12012
  store i32 %285, i32* %retval.i44.i, align 4, !dbg !12013
  br label %av_clip_c.exit54.i, !dbg !12013

av_clip_c.exit54.i:                               ; preds = %if.else3.i53.i, %if.then2.i52.i, %if.then.i49.i
  %286 = load i32, i32* %retval.i44.i, align 4, !dbg !12014
  store i32 %286, i32* %offset.addr.i, align 4, !dbg !12015
  %287 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i543, align 8, !dbg !12016
  %buffer_end16.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %287, i32 0, i32 1, !dbg !12017
  %288 = load i8*, i8** %buffer_end16.i, align 8, !dbg !12017
  %289 = load i32, i32* %offset.addr.i, align 4, !dbg !12018
  %idx.ext17.i = sext i32 %289 to i64, !dbg !12019
  %add.ptr18.i = getelementptr inbounds i8, i8* %288, i64 %idx.ext17.i, !dbg !12019
  %290 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i543, align 8, !dbg !12020
  %buffer19.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %290, i32 0, i32 0, !dbg !12021
  store i8* %add.ptr18.i, i8** %buffer19.i, align 8, !dbg !12022
  br label %sw.epilog.i, !dbg !12023

sw.bb20.i:                                        ; preds = %if.else261
  %291 = load i32, i32* %offset.addr.i, align 4, !dbg !12024
  %292 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i543, align 8, !dbg !12025
  %buffer_end21.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %292, i32 0, i32 1, !dbg !12026
  %293 = load i8*, i8** %buffer_end21.i, align 8, !dbg !12026
  %294 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i543, align 8, !dbg !12027
  %buffer_start22.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %294, i32 0, i32 2, !dbg !12028
  %295 = load i8*, i8** %buffer_start22.i, align 8, !dbg !12028
  %sub.ptr.lhs.cast23.i = ptrtoint i8* %293 to i64, !dbg !12029
  %sub.ptr.rhs.cast24.i = ptrtoint i8* %295 to i64, !dbg !12029
  %sub.ptr.sub25.i = sub i64 %sub.ptr.lhs.cast23.i, %sub.ptr.rhs.cast24.i, !dbg !12029
  %conv26.i = trunc i64 %sub.ptr.sub25.i to i32, !dbg !12025
  store i32 %291, i32* %a.addr.i34.i, align 4, !dbg !12030
  store i32 0, i32* %amin.addr.i35.i, align 4, !dbg !12030
  store i32 %conv26.i, i32* %amax.addr.i36.i, align 4, !dbg !12030
  %296 = load i32, i32* %a.addr.i34.i, align 4, !dbg !12031
  %297 = load i32, i32* %amin.addr.i35.i, align 4, !dbg !12032
  %cmp.i37.i = icmp slt i32 %296, %297, !dbg !12033
  br i1 %cmp.i37.i, label %if.then.i38.i, label %if.else.i40.i, !dbg !12034

if.then.i38.i:                                    ; preds = %sw.bb20.i
  %298 = load i32, i32* %amin.addr.i35.i, align 4, !dbg !12035
  store i32 %298, i32* %retval.i33.i, align 4, !dbg !12036
  br label %av_clip_c.exit43.i, !dbg !12036

if.else.i40.i:                                    ; preds = %sw.bb20.i
  %299 = load i32, i32* %a.addr.i34.i, align 4, !dbg !12037
  %300 = load i32, i32* %amax.addr.i36.i, align 4, !dbg !12038
  %cmp1.i39.i = icmp sgt i32 %299, %300, !dbg !12039
  br i1 %cmp1.i39.i, label %if.then2.i41.i, label %if.else3.i42.i, !dbg !12040

if.then2.i41.i:                                   ; preds = %if.else.i40.i
  %301 = load i32, i32* %amax.addr.i36.i, align 4, !dbg !12041
  store i32 %301, i32* %retval.i33.i, align 4, !dbg !12042
  br label %av_clip_c.exit43.i, !dbg !12042

if.else3.i42.i:                                   ; preds = %if.else.i40.i
  %302 = load i32, i32* %a.addr.i34.i, align 4, !dbg !12043
  store i32 %302, i32* %retval.i33.i, align 4, !dbg !12044
  br label %av_clip_c.exit43.i, !dbg !12044

av_clip_c.exit43.i:                               ; preds = %if.else3.i42.i, %if.then2.i41.i, %if.then.i38.i
  %303 = load i32, i32* %retval.i33.i, align 4, !dbg !12045
  store i32 %303, i32* %offset.addr.i, align 4, !dbg !12046
  %304 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i543, align 8, !dbg !12047
  %buffer_start28.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %304, i32 0, i32 2, !dbg !12048
  %305 = load i8*, i8** %buffer_start28.i, align 8, !dbg !12048
  %306 = load i32, i32* %offset.addr.i, align 4, !dbg !12049
  %idx.ext29.i = sext i32 %306 to i64, !dbg !12050
  %add.ptr30.i = getelementptr inbounds i8, i8* %305, i64 %idx.ext29.i, !dbg !12050
  %307 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i543, align 8, !dbg !12051
  %buffer31.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %307, i32 0, i32 0, !dbg !12052
  store i8* %add.ptr30.i, i8** %buffer31.i, align 8, !dbg !12053
  br label %sw.epilog.i, !dbg !12054

sw.default.i:                                     ; preds = %if.else261
  store i32 -22, i32* %retval.i, align 4, !dbg !12055
  br label %bytestream2_seek.exit, !dbg !12055

sw.epilog.i:                                      ; preds = %av_clip_c.exit43.i, %av_clip_c.exit54.i, %av_clip_c.exit.i
  %308 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i543, align 8, !dbg !12056
  store %struct.GetByteContext* %308, %struct.GetByteContext** %g.addr.i.i, align 8, !dbg !12057
  %309 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i, align 8, !dbg !12058
  %buffer.i.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %309, i32 0, i32 0, !dbg !12059
  %310 = load i8*, i8** %buffer.i.i, align 8, !dbg !12059
  %311 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i, align 8, !dbg !12060
  %buffer_start.i.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %311, i32 0, i32 2, !dbg !12061
  %312 = load i8*, i8** %buffer_start.i.i, align 8, !dbg !12061
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %310 to i64, !dbg !12062
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %312 to i64, !dbg !12062
  %sub.ptr.sub.i.i = sub i64 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i, !dbg !12062
  %conv.i.i = trunc i64 %sub.ptr.sub.i.i to i32, !dbg !12063
  store i32 %conv.i.i, i32* %retval.i, align 4, !dbg !12064
  br label %bytestream2_seek.exit, !dbg !12064

bytestream2_seek.exit:                            ; preds = %sw.default.i, %sw.epilog.i
  %313 = load i32, i32* %retval.i, align 4, !dbg !12065
  %314 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12066
  %avctx263 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %314, i32 0, i32 1, !dbg !12067
  %315 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx263, align 8, !dbg !12067
  %316 = bitcast %struct.AVCodecContext* %315 to i8*, !dbg !12066
  %317 = load i32, i32* %le, align 4, !dbg !12068
  %318 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12069
  %exif_metadata = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %318, i32 0, i32 79, !dbg !12070
  %call264 = call i32 @ff_exif_decode_ifd(i8* %316, %struct.GetByteContext* %gbytes, i32 %317, i32 0, %struct.AVDictionary** %exif_metadata), !dbg !12071
  store i32 %call264, i32* %ret, align 4, !dbg !12072
  %319 = load i32, i32* %ret, align 4, !dbg !12073
  %cmp265 = icmp slt i32 %319, 0, !dbg !12075
  br i1 %cmp265, label %if.then266, label %if.end268, !dbg !12076

if.then266:                                       ; preds = %bytestream2_seek.exit
  %320 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12077
  %avctx267 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %320, i32 0, i32 1, !dbg !12079
  %321 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx267, align 8, !dbg !12079
  %322 = bitcast %struct.AVCodecContext* %321 to i8*, !dbg !12077
  call void (i8*, i32, i8*, ...) @av_log(i8* %322, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.116, i32 0, i32 0)), !dbg !12080
  br label %if.end268, !dbg !12081

if.end268:                                        ; preds = %if.then266, %bytestream2_seek.exit
  br label %if.end269

if.end269:                                        ; preds = %if.end268, %if.then259
  store %struct.GetByteContext* %gbytes, %struct.GetByteContext** %g.addr.i549, align 8, !dbg !12082
  %323 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i549, align 8, !dbg !12083
  %buffer.i550 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %323, i32 0, i32 0, !dbg !12084
  %324 = load i8*, i8** %buffer.i550, align 8, !dbg !12084
  %325 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i549, align 8, !dbg !12085
  %buffer_start.i551 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %325, i32 0, i32 2, !dbg !12086
  %326 = load i8*, i8** %buffer_start.i551, align 8, !dbg !12086
  %sub.ptr.lhs.cast.i552 = ptrtoint i8* %324 to i64, !dbg !12087
  %sub.ptr.rhs.cast.i553 = ptrtoint i8* %326 to i64, !dbg !12087
  %sub.ptr.sub.i554 = sub i64 %sub.ptr.lhs.cast.i552, %sub.ptr.rhs.cast.i553, !dbg !12087
  %conv.i555 = trunc i64 %sub.ptr.sub.i554 to i32, !dbg !12088
  store i32 %conv.i555, i32* %bytes_read, align 4, !dbg !12089
  %327 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12090
  %gb271 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %327, i32 0, i32 2, !dbg !12091
  %328 = load i32, i32* %bytes_read, align 4, !dbg !12092
  %shl = shl i32 %328, 3, !dbg !12093
  call void @skip_bits(%struct.GetBitContext* %gb271, i32 %shl), !dbg !12094
  %329 = load i32, i32* %bytes_read, align 4, !dbg !12095
  %330 = load i32, i32* %len, align 4, !dbg !12096
  %sub272 = sub nsw i32 %330, %329, !dbg !12096
  store i32 %sub272, i32* %len, align 4, !dbg !12096
  br label %out, !dbg !12097

if.end273:                                        ; preds = %land.lhs.true250, %land.lhs.true247, %if.end244
  %331 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12098
  %start_code274 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %331, i32 0, i32 4, !dbg !12099
  %332 = load i32, i32* %start_code274, align 4, !dbg !12099
  %cmp275 = icmp eq i32 %332, 225, !dbg !12100
  br i1 %cmp275, label %land.lhs.true276, label %if.end293, !dbg !12101

land.lhs.true276:                                 ; preds = %if.end273
  %333 = load i32, i32* %len, align 4, !dbg !12102
  %cmp277 = icmp sgt i32 %333, 32, !dbg !12104
  br i1 %cmp277, label %if.then278, label %if.end293, !dbg !12105

if.then278:                                       ; preds = %land.lhs.true276
  %334 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12106
  %gb279 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %334, i32 0, i32 2, !dbg !12107
  %call280 = call i32 @get_bits_long(%struct.GetBitContext* %gb279, i32 32), !dbg !12108
  store i32 %call280, i32* %id, align 4, !dbg !12109
  %335 = load i32, i32* %len, align 4, !dbg !12110
  %sub281 = sub nsw i32 %335, 4, !dbg !12110
  store i32 %sub281, i32* %len, align 4, !dbg !12110
  %336 = load i32, i32* %id, align 4, !dbg !12111
  %337 = load i32, i32* bitcast ([5 x i8]* @.str.117 to i32*), align 1, !dbg !12112
  store i32 %337, i32* %x.addr.i571, align 4, !dbg !12113
  %338 = load i32, i32* %x.addr.i571, align 4, !dbg !12114
  %shl.i572 = shl i32 %338, 8, !dbg !12115
  %and.i573 = and i32 %shl.i572, 65280, !dbg !12116
  %339 = load i32, i32* %x.addr.i571, align 4, !dbg !12117
  %shr.i574 = lshr i32 %339, 8, !dbg !12118
  %and1.i575 = and i32 %shr.i574, 255, !dbg !12119
  %or.i576 = or i32 %and.i573, %and1.i575, !dbg !12120
  %shl2.i577 = shl i32 %or.i576, 16, !dbg !12121
  %340 = load i32, i32* %x.addr.i571, align 4, !dbg !12122
  %shr3.i578 = lshr i32 %340, 16, !dbg !12123
  %shl4.i579 = shl i32 %shr3.i578, 8, !dbg !12124
  %and5.i580 = and i32 %shl4.i579, 65280, !dbg !12125
  %341 = load i32, i32* %x.addr.i571, align 4, !dbg !12126
  %shr6.i581 = lshr i32 %341, 16, !dbg !12127
  %shr7.i582 = lshr i32 %shr6.i581, 8, !dbg !12128
  %and8.i583 = and i32 %shr7.i582, 255, !dbg !12129
  %or9.i584 = or i32 %and5.i580, %and8.i583, !dbg !12130
  %or10.i585 = or i32 %shl2.i577, %or9.i584, !dbg !12131
  %cmp283 = icmp eq i32 %336, %or10.i585, !dbg !12132
  br i1 %cmp283, label %if.then284, label %if.end292, !dbg !12133

if.then284:                                       ; preds = %if.then278
  %342 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12134
  %avctx285 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %342, i32 0, i32 1, !dbg !12137
  %343 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx285, align 8, !dbg !12137
  %debug286 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %343, i32 0, i32 134, !dbg !12138
  %344 = load i32, i32* %debug286, align 4, !dbg !12138
  %and287 = and i32 %344, 1, !dbg !12139
  %tobool288 = icmp ne i32 %and287, 0, !dbg !12139
  br i1 %tobool288, label %if.then289, label %if.end291, !dbg !12140

if.then289:                                       ; preds = %if.then284
  %345 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12141
  %avctx290 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %345, i32 0, i32 1, !dbg !12142
  %346 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx290, align 8, !dbg !12142
  %347 = bitcast %struct.AVCodecContext* %346 to i8*, !dbg !12141
  call void (i8*, i32, i8*, ...) @av_log(i8* %347, i32 32, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.118, i32 0, i32 0)), !dbg !12143
  br label %if.end291, !dbg !12143

if.end291:                                        ; preds = %if.then289, %if.then284
  br label %if.end292, !dbg !12144

if.end292:                                        ; preds = %if.end291, %if.then278
  br label %if.end293, !dbg !12145

if.end293:                                        ; preds = %if.end292, %land.lhs.true276, %if.end273
  %348 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12146
  %start_code294 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %348, i32 0, i32 4, !dbg !12147
  %349 = load i32, i32* %start_code294, align 4, !dbg !12147
  %cmp295 = icmp eq i32 %349, 226, !dbg !12148
  br i1 %cmp295, label %land.lhs.true296, label %if.end413, !dbg !12149

land.lhs.true296:                                 ; preds = %if.end293
  %350 = load i32, i32* %id, align 4, !dbg !12150
  %351 = load i32, i32* bitcast ([5 x i8]* @.str.119 to i32*), align 1, !dbg !12151
  store i32 %351, i32* %x.addr.i556, align 4, !dbg !12152
  %352 = load i32, i32* %x.addr.i556, align 4, !dbg !12153
  %shl.i557 = shl i32 %352, 8, !dbg !12154
  %and.i558 = and i32 %shl.i557, 65280, !dbg !12155
  %353 = load i32, i32* %x.addr.i556, align 4, !dbg !12156
  %shr.i559 = lshr i32 %353, 8, !dbg !12157
  %and1.i560 = and i32 %shr.i559, 255, !dbg !12158
  %or.i561 = or i32 %and.i558, %and1.i560, !dbg !12159
  %shl2.i562 = shl i32 %or.i561, 16, !dbg !12160
  %354 = load i32, i32* %x.addr.i556, align 4, !dbg !12161
  %shr3.i563 = lshr i32 %354, 16, !dbg !12162
  %shl4.i564 = shl i32 %shr3.i563, 8, !dbg !12163
  %and5.i565 = and i32 %shl4.i564, 65280, !dbg !12164
  %355 = load i32, i32* %x.addr.i556, align 4, !dbg !12165
  %shr6.i566 = lshr i32 %355, 16, !dbg !12166
  %shr7.i567 = lshr i32 %shr6.i566, 8, !dbg !12167
  %and8.i568 = and i32 %shr7.i567, 255, !dbg !12168
  %or9.i569 = or i32 %and5.i565, %and8.i568, !dbg !12169
  %or10.i570 = or i32 %shl2.i562, %or9.i569, !dbg !12170
  %cmp298 = icmp eq i32 %350, %or10.i570, !dbg !12171
  br i1 %cmp298, label %land.lhs.true299, label %if.end413, !dbg !12172

land.lhs.true299:                                 ; preds = %land.lhs.true296
  %356 = load i32, i32* %len, align 4, !dbg !12173
  %cmp300 = icmp sge i32 %356, 10, !dbg !12175
  br i1 %cmp300, label %if.then301, label %if.end413, !dbg !12176

if.then301:                                       ; preds = %land.lhs.true299
  call void @llvm.dbg.declare(metadata i32* %id2, metadata !12177, metadata !2073), !dbg !12178
  call void @llvm.dbg.declare(metadata i32* %seqno, metadata !12179, metadata !2073), !dbg !12180
  call void @llvm.dbg.declare(metadata i32* %nummarkers, metadata !12181, metadata !2073), !dbg !12182
  %357 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12183
  %gb302 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %357, i32 0, i32 2, !dbg !12184
  %call303 = call i32 @get_bits_long(%struct.GetBitContext* %gb302, i32 32), !dbg !12185
  store i32 %call303, i32* %id, align 4, !dbg !12186
  %358 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12187
  %gb304 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %358, i32 0, i32 2, !dbg !12188
  %call305 = call i32 @get_bits_long(%struct.GetBitContext* %gb304, i32 24), !dbg !12189
  store i32 %call305, i32* %id2, align 4, !dbg !12190
  %359 = load i32, i32* %len, align 4, !dbg !12191
  %sub306 = sub nsw i32 %359, 7, !dbg !12191
  store i32 %sub306, i32* %len, align 4, !dbg !12191
  %360 = load i32, i32* %id, align 4, !dbg !12192
  %361 = load i32, i32* bitcast ([5 x i8]* @.str.120 to i32*), align 1, !dbg !12193
  store i32 %361, i32* %x.addr.i513, align 4, !dbg !12194
  %362 = load i32, i32* %x.addr.i513, align 4, !dbg !12195
  %shl.i514 = shl i32 %362, 8, !dbg !12196
  %and.i515 = and i32 %shl.i514, 65280, !dbg !12197
  %363 = load i32, i32* %x.addr.i513, align 4, !dbg !12198
  %shr.i516 = lshr i32 %363, 8, !dbg !12199
  %and1.i517 = and i32 %shr.i516, 255, !dbg !12200
  %or.i518 = or i32 %and.i515, %and1.i517, !dbg !12201
  %shl2.i519 = shl i32 %or.i518, 16, !dbg !12202
  %364 = load i32, i32* %x.addr.i513, align 4, !dbg !12203
  %shr3.i520 = lshr i32 %364, 16, !dbg !12204
  %shl4.i521 = shl i32 %shr3.i520, 8, !dbg !12205
  %and5.i522 = and i32 %shl4.i521, 65280, !dbg !12206
  %365 = load i32, i32* %x.addr.i513, align 4, !dbg !12207
  %shr6.i523 = lshr i32 %365, 16, !dbg !12208
  %shr7.i524 = lshr i32 %shr6.i523, 8, !dbg !12209
  %and8.i525 = and i32 %shr7.i524, 255, !dbg !12210
  %or9.i526 = or i32 %and5.i522, %and8.i525, !dbg !12211
  %or10.i527 = or i32 %shl2.i519, %or9.i526, !dbg !12212
  %cmp308 = icmp ne i32 %360, %or10.i527, !dbg !12213
  br i1 %cmp308, label %if.then317, label %lor.lhs.false309, !dbg !12214

lor.lhs.false309:                                 ; preds = %if.then301
  %366 = load i32, i32* %id2, align 4, !dbg !12215
  %367 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.121, i32 0, i32 0), align 1, !dbg !12217
  %conv = zext i8 %367 to i32, !dbg !12217
  %shl310 = shl i32 %conv, 16, !dbg !12218
  %368 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.121, i32 0, i64 1), align 1, !dbg !12219
  %conv311 = zext i8 %368 to i32, !dbg !12219
  %shl312 = shl i32 %conv311, 8, !dbg !12220
  %or = or i32 %shl310, %shl312, !dbg !12221
  %369 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.121, i32 0, i64 2), align 1, !dbg !12222
  %conv313 = zext i8 %369 to i32, !dbg !12222
  %or314 = or i32 %or, %conv313, !dbg !12223
  %cmp315 = icmp ne i32 %366, %or314, !dbg !12224
  br i1 %cmp315, label %if.then317, label %if.end319, !dbg !12225

if.then317:                                       ; preds = %lor.lhs.false309, %if.then301
  %370 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12226
  %avctx318 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %370, i32 0, i32 1, !dbg !12228
  %371 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx318, align 8, !dbg !12228
  %372 = bitcast %struct.AVCodecContext* %371 to i8*, !dbg !12226
  call void (i8*, i32, i8*, ...) @av_log(i8* %372, i32 24, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.122, i32 0, i32 0)), !dbg !12229
  br label %out, !dbg !12230

if.end319:                                        ; preds = %lor.lhs.false309
  %373 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12231
  %gb320 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %373, i32 0, i32 2, !dbg !12232
  call void @skip_bits(%struct.GetBitContext* %gb320, i32 8), !dbg !12233
  %374 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12234
  %gb321 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %374, i32 0, i32 2, !dbg !12235
  %call322 = call i32 @get_bits(%struct.GetBitContext* %gb321, i32 8), !dbg !12236
  store i32 %call322, i32* %seqno, align 4, !dbg !12237
  %375 = load i32, i32* %len, align 4, !dbg !12238
  %sub323 = sub nsw i32 %375, 2, !dbg !12238
  store i32 %sub323, i32* %len, align 4, !dbg !12238
  %376 = load i32, i32* %seqno, align 4, !dbg !12239
  %cmp324 = icmp eq i32 %376, 0, !dbg !12241
  br i1 %cmp324, label %if.then326, label %if.end328, !dbg !12242

if.then326:                                       ; preds = %if.end319
  %377 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12243
  %avctx327 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %377, i32 0, i32 1, !dbg !12245
  %378 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx327, align 8, !dbg !12245
  %379 = bitcast %struct.AVCodecContext* %378 to i8*, !dbg !12243
  call void (i8*, i32, i8*, ...) @av_log(i8* %379, i32 24, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.123, i32 0, i32 0)), !dbg !12246
  br label %out, !dbg !12247

if.end328:                                        ; preds = %if.end319
  %380 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12248
  %gb329 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %380, i32 0, i32 2, !dbg !12249
  %call330 = call i32 @get_bits(%struct.GetBitContext* %gb329, i32 8), !dbg !12250
  store i32 %call330, i32* %nummarkers, align 4, !dbg !12251
  %381 = load i32, i32* %len, align 4, !dbg !12252
  %sub331 = sub nsw i32 %381, 1, !dbg !12252
  store i32 %sub331, i32* %len, align 4, !dbg !12252
  %382 = load i32, i32* %nummarkers, align 4, !dbg !12253
  %cmp332 = icmp eq i32 %382, 0, !dbg !12255
  br i1 %cmp332, label %if.then334, label %if.else336, !dbg !12256

if.then334:                                       ; preds = %if.end328
  %383 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12257
  %avctx335 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %383, i32 0, i32 1, !dbg !12259
  %384 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx335, align 8, !dbg !12259
  %385 = bitcast %struct.AVCodecContext* %384 to i8*, !dbg !12257
  call void (i8*, i32, i8*, ...) @av_log(i8* %385, i32 24, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.124, i32 0, i32 0)), !dbg !12260
  br label %out, !dbg !12261

if.else336:                                       ; preds = %if.end328
  %386 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12262
  %iccnum = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %386, i32 0, i32 84, !dbg !12264
  %387 = load i32, i32* %iccnum, align 8, !dbg !12264
  %cmp337 = icmp ne i32 %387, 0, !dbg !12265
  br i1 %cmp337, label %land.lhs.true339, label %if.else345, !dbg !12266

land.lhs.true339:                                 ; preds = %if.else336
  %388 = load i32, i32* %nummarkers, align 4, !dbg !12267
  %389 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12269
  %iccnum340 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %389, i32 0, i32 84, !dbg !12270
  %390 = load i32, i32* %iccnum340, align 8, !dbg !12270
  %cmp341 = icmp ne i32 %388, %390, !dbg !12271
  br i1 %cmp341, label %if.then343, label %if.else345, !dbg !12272

if.then343:                                       ; preds = %land.lhs.true339
  %391 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12273
  %avctx344 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %391, i32 0, i32 1, !dbg !12275
  %392 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx344, align 8, !dbg !12275
  %393 = bitcast %struct.AVCodecContext* %392 to i8*, !dbg !12273
  call void (i8*, i32, i8*, ...) @av_log(i8* %393, i32 24, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.125, i32 0, i32 0)), !dbg !12276
  br label %out, !dbg !12277

if.else345:                                       ; preds = %land.lhs.true339, %if.else336
  %394 = load i32, i32* %seqno, align 4, !dbg !12278
  %395 = load i32, i32* %nummarkers, align 4, !dbg !12280
  %cmp346 = icmp ugt i32 %394, %395, !dbg !12281
  br i1 %cmp346, label %if.then348, label %if.end350, !dbg !12282

if.then348:                                       ; preds = %if.else345
  %396 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12283
  %avctx349 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %396, i32 0, i32 1, !dbg !12285
  %397 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx349, align 8, !dbg !12285
  %398 = bitcast %struct.AVCodecContext* %397 to i8*, !dbg !12283
  call void (i8*, i32, i8*, ...) @av_log(i8* %398, i32 24, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.126, i32 0, i32 0)), !dbg !12286
  br label %out, !dbg !12287

if.end350:                                        ; preds = %if.else345
  br label %if.end351

if.end351:                                        ; preds = %if.end350
  br label %if.end352

if.end352:                                        ; preds = %if.end351
  %399 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12288
  %iccnum353 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %399, i32 0, i32 84, !dbg !12290
  %400 = load i32, i32* %iccnum353, align 8, !dbg !12290
  %cmp354 = icmp eq i32 %400, 0, !dbg !12291
  br i1 %cmp354, label %if.then356, label %if.end372, !dbg !12292

if.then356:                                       ; preds = %if.end352
  %401 = load i32, i32* %nummarkers, align 4, !dbg !12293
  %conv357 = zext i32 %401 to i64, !dbg !12293
  %mul358 = mul i64 %conv357, 8, !dbg !12295
  %call359 = call noalias i8* @av_mallocz(i64 %mul358), !dbg !12296
  %402 = bitcast i8* %call359 to i8**, !dbg !12296
  %403 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12297
  %iccdata = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %403, i32 0, i32 82, !dbg !12298
  store i8** %402, i8*** %iccdata, align 8, !dbg !12299
  %404 = load i32, i32* %nummarkers, align 4, !dbg !12300
  %conv360 = zext i32 %404 to i64, !dbg !12300
  %mul361 = mul i64 %conv360, 4, !dbg !12301
  %call362 = call noalias i8* @av_mallocz(i64 %mul361), !dbg !12302
  %405 = bitcast i8* %call362 to i32*, !dbg !12302
  %406 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12303
  %iccdatalens = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %406, i32 0, i32 83, !dbg !12304
  store i32* %405, i32** %iccdatalens, align 32, !dbg !12305
  %407 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12306
  %iccdata363 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %407, i32 0, i32 82, !dbg !12308
  %408 = load i8**, i8*** %iccdata363, align 8, !dbg !12308
  %tobool364 = icmp ne i8** %408, null, !dbg !12306
  br i1 %tobool364, label %lor.lhs.false365, label %if.then368, !dbg !12309

lor.lhs.false365:                                 ; preds = %if.then356
  %409 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12310
  %iccdatalens366 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %409, i32 0, i32 83, !dbg !12312
  %410 = load i32*, i32** %iccdatalens366, align 32, !dbg !12312
  %tobool367 = icmp ne i32* %410, null, !dbg !12310
  br i1 %tobool367, label %if.end370, label %if.then368, !dbg !12313

if.then368:                                       ; preds = %lor.lhs.false365, %if.then356
  %411 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12314
  %avctx369 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %411, i32 0, i32 1, !dbg !12316
  %412 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx369, align 8, !dbg !12316
  %413 = bitcast %struct.AVCodecContext* %412 to i8*, !dbg !12314
  call void (i8*, i32, i8*, ...) @av_log(i8* %413, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.127, i32 0, i32 0)), !dbg !12317
  store i32 -12, i32* %retval, align 4, !dbg !12318
  br label %return, !dbg !12318

if.end370:                                        ; preds = %lor.lhs.false365
  %414 = load i32, i32* %nummarkers, align 4, !dbg !12319
  %415 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12320
  %iccnum371 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %415, i32 0, i32 84, !dbg !12321
  store i32 %414, i32* %iccnum371, align 8, !dbg !12322
  br label %if.end372, !dbg !12323

if.end372:                                        ; preds = %if.end370, %if.end352
  %416 = load i32, i32* %seqno, align 4, !dbg !12324
  %sub373 = sub i32 %416, 1, !dbg !12326
  %idxprom = zext i32 %sub373 to i64, !dbg !12327
  %417 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12327
  %iccdata374 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %417, i32 0, i32 82, !dbg !12328
  %418 = load i8**, i8*** %iccdata374, align 8, !dbg !12328
  %arrayidx = getelementptr inbounds i8*, i8** %418, i64 %idxprom, !dbg !12327
  %419 = load i8*, i8** %arrayidx, align 8, !dbg !12327
  %tobool375 = icmp ne i8* %419, null, !dbg !12327
  br i1 %tobool375, label %if.then376, label %if.end378, !dbg !12329

if.then376:                                       ; preds = %if.end372
  %420 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12330
  %avctx377 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %420, i32 0, i32 1, !dbg !12332
  %421 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx377, align 8, !dbg !12332
  %422 = bitcast %struct.AVCodecContext* %421 to i8*, !dbg !12330
  call void (i8*, i32, i8*, ...) @av_log(i8* %422, i32 24, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.128, i32 0, i32 0)), !dbg !12333
  br label %out, !dbg !12334

if.end378:                                        ; preds = %if.end372
  %423 = load i32, i32* %len, align 4, !dbg !12335
  %424 = load i32, i32* %seqno, align 4, !dbg !12336
  %sub379 = sub i32 %424, 1, !dbg !12337
  %idxprom380 = zext i32 %sub379 to i64, !dbg !12338
  %425 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12338
  %iccdatalens381 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %425, i32 0, i32 83, !dbg !12339
  %426 = load i32*, i32** %iccdatalens381, align 32, !dbg !12339
  %arrayidx382 = getelementptr inbounds i32, i32* %426, i64 %idxprom380, !dbg !12338
  store i32 %423, i32* %arrayidx382, align 4, !dbg !12340
  %427 = load i32, i32* %len, align 4, !dbg !12341
  %conv383 = sext i32 %427 to i64, !dbg !12341
  %call384 = call noalias i8* @av_malloc(i64 %conv383), !dbg !12342
  %428 = load i32, i32* %seqno, align 4, !dbg !12343
  %sub385 = sub i32 %428, 1, !dbg !12344
  %idxprom386 = zext i32 %sub385 to i64, !dbg !12345
  %429 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12345
  %iccdata387 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %429, i32 0, i32 82, !dbg !12346
  %430 = load i8**, i8*** %iccdata387, align 8, !dbg !12346
  %arrayidx388 = getelementptr inbounds i8*, i8** %430, i64 %idxprom386, !dbg !12345
  store i8* %call384, i8** %arrayidx388, align 8, !dbg !12347
  %431 = load i32, i32* %seqno, align 4, !dbg !12348
  %sub389 = sub i32 %431, 1, !dbg !12350
  %idxprom390 = zext i32 %sub389 to i64, !dbg !12351
  %432 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12351
  %iccdata391 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %432, i32 0, i32 82, !dbg !12352
  %433 = load i8**, i8*** %iccdata391, align 8, !dbg !12352
  %arrayidx392 = getelementptr inbounds i8*, i8** %433, i64 %idxprom390, !dbg !12351
  %434 = load i8*, i8** %arrayidx392, align 8, !dbg !12351
  %tobool393 = icmp ne i8* %434, null, !dbg !12351
  br i1 %tobool393, label %if.end396, label %if.then394, !dbg !12353

if.then394:                                       ; preds = %if.end378
  %435 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12354
  %avctx395 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %435, i32 0, i32 1, !dbg !12356
  %436 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx395, align 8, !dbg !12356
  %437 = bitcast %struct.AVCodecContext* %436 to i8*, !dbg !12354
  call void (i8*, i32, i8*, ...) @av_log(i8* %437, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.129, i32 0, i32 0)), !dbg !12357
  store i32 -12, i32* %retval, align 4, !dbg !12358
  br label %return, !dbg !12358

if.end396:                                        ; preds = %if.end378
  %438 = load i32, i32* %seqno, align 4, !dbg !12359
  %sub397 = sub i32 %438, 1, !dbg !12360
  %idxprom398 = zext i32 %sub397 to i64, !dbg !12361
  %439 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12361
  %iccdata399 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %439, i32 0, i32 82, !dbg !12362
  %440 = load i8**, i8*** %iccdata399, align 8, !dbg !12362
  %arrayidx400 = getelementptr inbounds i8*, i8** %440, i64 %idxprom398, !dbg !12361
  %441 = load i8*, i8** %arrayidx400, align 8, !dbg !12361
  %442 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12363
  %gb401 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %442, i32 0, i32 2, !dbg !12364
  %call402 = call i8* @align_get_bits(%struct.GetBitContext* %gb401), !dbg !12365
  %443 = load i32, i32* %len, align 4, !dbg !12366
  %conv403 = sext i32 %443 to i64, !dbg !12366
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %441, i8* %call402, i64 %conv403, i32 1, i1 false), !dbg !12367
  %444 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12369
  %gb404 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %444, i32 0, i32 2, !dbg !12370
  %445 = load i32, i32* %len, align 4, !dbg !12371
  %shl405 = shl i32 %445, 3, !dbg !12372
  call void @skip_bits(%struct.GetBitContext* %gb404, i32 %shl405), !dbg !12373
  store i32 0, i32* %len, align 4, !dbg !12374
  %446 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12375
  %iccread = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %446, i32 0, i32 85, !dbg !12376
  %447 = load i32, i32* %iccread, align 4, !dbg !12377
  %inc = add nsw i32 %447, 1, !dbg !12377
  store i32 %inc, i32* %iccread, align 4, !dbg !12377
  %448 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12378
  %iccread406 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %448, i32 0, i32 85, !dbg !12380
  %449 = load i32, i32* %iccread406, align 4, !dbg !12380
  %450 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12381
  %iccnum407 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %450, i32 0, i32 84, !dbg !12382
  %451 = load i32, i32* %iccnum407, align 8, !dbg !12382
  %cmp408 = icmp sgt i32 %449, %451, !dbg !12383
  br i1 %cmp408, label %if.then410, label %if.end412, !dbg !12384

if.then410:                                       ; preds = %if.end396
  %452 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12385
  %avctx411 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %452, i32 0, i32 1, !dbg !12386
  %453 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx411, align 8, !dbg !12386
  %454 = bitcast %struct.AVCodecContext* %453 to i8*, !dbg !12385
  call void (i8*, i32, i8*, ...) @av_log(i8* %454, i32 24, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.130, i32 0, i32 0)), !dbg !12387
  br label %if.end412, !dbg !12387

if.end412:                                        ; preds = %if.then410, %if.end396
  br label %if.end413, !dbg !12388

if.end413:                                        ; preds = %if.end412, %land.lhs.true299, %land.lhs.true296, %if.end293
  br label %out, !dbg !12389

out:                                              ; preds = %if.end413, %if.then376, %if.then348, %if.then343, %if.then334, %if.then326, %if.then317, %if.end269, %if.end243, %if.then218, %if.end186, %if.end170, %if.end153, %if.then150, %if.end119, %if.end90, %if.then24, %if.then15
  %455 = load i32, i32* %len, align 4, !dbg !12391
  %cmp414 = icmp slt i32 %455, 0, !dbg !12393
  br i1 %cmp414, label %if.then416, label %if.end418, !dbg !12394

if.then416:                                       ; preds = %out
  %456 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12395
  %avctx417 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %456, i32 0, i32 1, !dbg !12396
  %457 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx417, align 8, !dbg !12396
  %458 = bitcast %struct.AVCodecContext* %457 to i8*, !dbg !12395
  call void (i8*, i32, i8*, ...) @av_log(i8* %458, i32 16, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.131, i32 0, i32 0)), !dbg !12397
  br label %if.end418, !dbg !12397

if.end418:                                        ; preds = %if.then416, %out
  br label %while.cond, !dbg !12398

while.cond:                                       ; preds = %while.body, %if.end418
  %459 = load i32, i32* %len, align 4, !dbg !12399
  %dec419 = add nsw i32 %459, -1, !dbg !12399
  store i32 %dec419, i32* %len, align 4, !dbg !12399
  %cmp420 = icmp sgt i32 %dec419, 0, !dbg !12400
  br i1 %cmp420, label %while.body, label %while.end, !dbg !12401

while.body:                                       ; preds = %while.cond
  %460 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12402
  %gb422 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %460, i32 0, i32 2, !dbg !12403
  call void @skip_bits(%struct.GetBitContext* %gb422, i32 8), !dbg !12404
  br label %while.cond, !dbg !12405, !llvm.loop !12407

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !12408
  br label %return, !dbg !12408

return:                                           ; preds = %while.end, %if.then394, %if.then368, %if.then4, %if.then
  %461 = load i32, i32* %retval, align 4, !dbg !12409
  ret i32 %461, !dbg !12409
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @av_make_error_string(i8* %errbuf, i64 %errbuf_size, i32 %errnum) #4 !dbg !12410 {
entry:
  %errbuf.addr = alloca i8*, align 8
  %errbuf_size.addr = alloca i64, align 8
  %errnum.addr = alloca i32, align 4
  store i8* %errbuf, i8** %errbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %errbuf.addr, metadata !12414, metadata !2073), !dbg !12415
  store i64 %errbuf_size, i64* %errbuf_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %errbuf_size.addr, metadata !12416, metadata !2073), !dbg !12417
  store i32 %errnum, i32* %errnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !12418, metadata !2073), !dbg !12419
  %0 = load i32, i32* %errnum.addr, align 4, !dbg !12420
  %1 = load i8*, i8** %errbuf.addr, align 8, !dbg !12421
  %2 = load i64, i64* %errbuf_size.addr, align 8, !dbg !12422
  %call = call i32 @av_strerror(i32 %0, i8* %1, i64 %2), !dbg !12423
  %3 = load i8*, i8** %errbuf.addr, align 8, !dbg !12424
  ret i8* %3, !dbg !12425
}

; Function Attrs: nounwind uwtable
define internal i32 @mjpeg_decode_com(%struct.MJpegDecodeContext* %s) #3 !dbg !12426 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.MJpegDecodeContext*, align 8
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  %cbuf = alloca i8*, align 8
  %.compoundliteral = alloca %struct.AVRational, align 4
  store %struct.MJpegDecodeContext* %s, %struct.MJpegDecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MJpegDecodeContext** %s.addr, metadata !12427, metadata !2073), !dbg !12428
  call void @llvm.dbg.declare(metadata i32* %len, metadata !12429, metadata !2073), !dbg !12430
  %0 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12431
  %gb = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %0, i32 0, i32 2, !dbg !12432
  %call = call i32 @get_bits(%struct.GetBitContext* %gb, i32 16), !dbg !12433
  store i32 %call, i32* %len, align 4, !dbg !12430
  %1 = load i32, i32* %len, align 4, !dbg !12434
  %cmp = icmp sge i32 %1, 2, !dbg !12436
  br i1 %cmp, label %land.lhs.true, label %if.end58, !dbg !12437

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %len, align 4, !dbg !12438
  %mul = mul nsw i32 8, %2, !dbg !12440
  %sub = sub nsw i32 %mul, 16, !dbg !12441
  %3 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12442
  %gb1 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %3, i32 0, i32 2, !dbg !12443
  %call2 = call i32 @get_bits_left(%struct.GetBitContext* %gb1), !dbg !12444
  %cmp3 = icmp sle i32 %sub, %call2, !dbg !12445
  br i1 %cmp3, label %if.then, label %if.end58, !dbg !12446

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12447, metadata !2073), !dbg !12449
  call void @llvm.dbg.declare(metadata i8** %cbuf, metadata !12450, metadata !2073), !dbg !12451
  %4 = load i32, i32* %len, align 4, !dbg !12452
  %sub4 = sub nsw i32 %4, 1, !dbg !12453
  %conv = sext i32 %sub4 to i64, !dbg !12452
  %call5 = call noalias i8* @av_malloc(i64 %conv), !dbg !12454
  store i8* %call5, i8** %cbuf, align 8, !dbg !12451
  %5 = load i8*, i8** %cbuf, align 8, !dbg !12455
  %tobool = icmp ne i8* %5, null, !dbg !12455
  br i1 %tobool, label %if.end, label %if.then6, !dbg !12457

if.then6:                                         ; preds = %if.then
  store i32 -12, i32* %retval, align 4, !dbg !12458
  br label %return, !dbg !12458

if.end:                                           ; preds = %if.then
  store i32 0, i32* %i, align 4, !dbg !12459
  br label %for.cond, !dbg !12461

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i32, i32* %i, align 4, !dbg !12462
  %7 = load i32, i32* %len, align 4, !dbg !12465
  %sub7 = sub nsw i32 %7, 2, !dbg !12466
  %cmp8 = icmp slt i32 %6, %sub7, !dbg !12467
  br i1 %cmp8, label %for.body, label %for.end, !dbg !12468

for.body:                                         ; preds = %for.cond
  %8 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12469
  %gb10 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %8, i32 0, i32 2, !dbg !12470
  %call11 = call i32 @get_bits(%struct.GetBitContext* %gb10, i32 8), !dbg !12471
  %conv12 = trunc i32 %call11 to i8, !dbg !12471
  %9 = load i32, i32* %i, align 4, !dbg !12472
  %idxprom = sext i32 %9 to i64, !dbg !12473
  %10 = load i8*, i8** %cbuf, align 8, !dbg !12473
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 %idxprom, !dbg !12473
  store i8 %conv12, i8* %arrayidx, align 1, !dbg !12474
  br label %for.inc, !dbg !12473

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !12475
  %inc = add nsw i32 %11, 1, !dbg !12475
  store i32 %inc, i32* %i, align 4, !dbg !12475
  br label %for.cond, !dbg !12477, !llvm.loop !12478

for.end:                                          ; preds = %for.cond
  %12 = load i32, i32* %i, align 4, !dbg !12480
  %cmp13 = icmp sgt i32 %12, 0, !dbg !12482
  br i1 %cmp13, label %land.lhs.true15, label %if.else, !dbg !12483

land.lhs.true15:                                  ; preds = %for.end
  %13 = load i32, i32* %i, align 4, !dbg !12484
  %sub16 = sub nsw i32 %13, 1, !dbg !12486
  %idxprom17 = sext i32 %sub16 to i64, !dbg !12487
  %14 = load i8*, i8** %cbuf, align 8, !dbg !12487
  %arrayidx18 = getelementptr inbounds i8, i8* %14, i64 %idxprom17, !dbg !12487
  %15 = load i8, i8* %arrayidx18, align 1, !dbg !12487
  %conv19 = sext i8 %15 to i32, !dbg !12487
  %cmp20 = icmp eq i32 %conv19, 10, !dbg !12488
  br i1 %cmp20, label %if.then22, label %if.else, !dbg !12489

if.then22:                                        ; preds = %land.lhs.true15
  %16 = load i32, i32* %i, align 4, !dbg !12490
  %sub23 = sub nsw i32 %16, 1, !dbg !12491
  %idxprom24 = sext i32 %sub23 to i64, !dbg !12492
  %17 = load i8*, i8** %cbuf, align 8, !dbg !12492
  %arrayidx25 = getelementptr inbounds i8, i8* %17, i64 %idxprom24, !dbg !12492
  store i8 0, i8* %arrayidx25, align 1, !dbg !12493
  br label %if.end28, !dbg !12492

if.else:                                          ; preds = %land.lhs.true15, %for.end
  %18 = load i32, i32* %i, align 4, !dbg !12494
  %idxprom26 = sext i32 %18 to i64, !dbg !12495
  %19 = load i8*, i8** %cbuf, align 8, !dbg !12495
  %arrayidx27 = getelementptr inbounds i8, i8* %19, i64 %idxprom26, !dbg !12495
  store i8 0, i8* %arrayidx27, align 1, !dbg !12496
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then22
  %20 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12497
  %avctx = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %20, i32 0, i32 1, !dbg !12499
  %21 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !12499
  %debug = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %21, i32 0, i32 134, !dbg !12500
  %22 = load i32, i32* %debug, align 4, !dbg !12500
  %and = and i32 %22, 1, !dbg !12501
  %tobool29 = icmp ne i32 %and, 0, !dbg !12501
  br i1 %tobool29, label %if.then30, label %if.end32, !dbg !12502

if.then30:                                        ; preds = %if.end28
  %23 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12503
  %avctx31 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %23, i32 0, i32 1, !dbg !12504
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx31, align 8, !dbg !12504
  %25 = bitcast %struct.AVCodecContext* %24 to i8*, !dbg !12503
  %26 = load i8*, i8** %cbuf, align 8, !dbg !12505
  call void (i8*, i32, i8*, ...) @av_log(i8* %25, i32 32, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.134, i32 0, i32 0), i8* %26), !dbg !12506
  br label %if.end32, !dbg !12506

if.end32:                                         ; preds = %if.then30, %if.end28
  %27 = load i8*, i8** %cbuf, align 8, !dbg !12507
  %call33 = call i32 @strncmp(i8* %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.135, i32 0, i32 0), i64 4) #9, !dbg !12509
  %tobool34 = icmp ne i32 %call33, 0, !dbg !12509
  br i1 %tobool34, label %if.else36, label %if.then35, !dbg !12510

if.then35:                                        ; preds = %if.end32
  %28 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12511
  %29 = load i8*, i8** %cbuf, align 8, !dbg !12513
  %30 = load i32, i32* %len, align 4, !dbg !12514
  call void @parse_avid(%struct.MJpegDecodeContext* %28, i8* %29, i32 %30), !dbg !12515
  br label %if.end57, !dbg !12516

if.else36:                                        ; preds = %if.end32
  %31 = load i8*, i8** %cbuf, align 8, !dbg !12517
  %call37 = call i32 @strcmp(i8* %31, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.136, i32 0, i32 0)) #9, !dbg !12520
  %tobool38 = icmp ne i32 %call37, 0, !dbg !12520
  br i1 %tobool38, label %if.else40, label %if.then39, !dbg !12521

if.then39:                                        ; preds = %if.else36
  %32 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12522
  %cs_itu601 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %32, i32 0, i32 70, !dbg !12523
  store i32 1, i32* %cs_itu601, align 4, !dbg !12524
  br label %if.end56, !dbg !12522

if.else40:                                        ; preds = %if.else36
  %33 = load i8*, i8** %cbuf, align 8, !dbg !12525
  %call41 = call i32 @strncmp(i8* %33, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.137, i32 0, i32 0), i64 32) #9, !dbg !12527
  %tobool42 = icmp ne i32 %call41, 0, !dbg !12527
  br i1 %tobool42, label %lor.lhs.false, label %land.lhs.true43, !dbg !12528

land.lhs.true43:                                  ; preds = %if.else40
  %34 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12529
  %avctx44 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %34, i32 0, i32 1, !dbg !12531
  %35 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx44, align 8, !dbg !12531
  %codec_tag = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %35, i32 0, i32 5, !dbg !12532
  %36 = load i32, i32* %codec_tag, align 4, !dbg !12532
  %tobool45 = icmp ne i32 %36, 0, !dbg !12529
  br i1 %tobool45, label %if.then48, label %lor.lhs.false, !dbg !12533

lor.lhs.false:                                    ; preds = %land.lhs.true43, %if.else40
  %37 = load i8*, i8** %cbuf, align 8, !dbg !12534
  %call46 = call i32 @strncmp(i8* %37, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.138, i32 0, i32 0), i64 20) #9, !dbg !12535
  %tobool47 = icmp ne i32 %call46, 0, !dbg !12535
  br i1 %tobool47, label %if.else49, label %if.then48, !dbg !12536

if.then48:                                        ; preds = %lor.lhs.false, %land.lhs.true43
  %38 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12538
  %flipped = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %38, i32 0, i32 75, !dbg !12539
  store i32 1, i32* %flipped, align 8, !dbg !12540
  br label %if.end55, !dbg !12538

if.else49:                                        ; preds = %lor.lhs.false
  %39 = load i8*, i8** %cbuf, align 8, !dbg !12541
  %call50 = call i32 @strcmp(i8* %39, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.139, i32 0, i32 0)) #9, !dbg !12543
  %tobool51 = icmp ne i32 %call50, 0, !dbg !12543
  br i1 %tobool51, label %if.end54, label %if.then52, !dbg !12544

if.then52:                                        ; preds = %if.else49
  %40 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12545
  %avctx53 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %40, i32 0, i32 1, !dbg !12547
  %41 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx53, align 8, !dbg !12547
  %sample_aspect_ratio = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %41, i32 0, i32 44, !dbg !12548
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !12549
  store i32 1, i32* %num, align 4, !dbg !12549
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !12549
  store i32 2, i32* %den, align 4, !dbg !12549
  %42 = bitcast %struct.AVRational* %sample_aspect_ratio to i8*, !dbg !12550
  %43 = bitcast %struct.AVRational* %.compoundliteral to i8*, !dbg !12550
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 8, i32 4, i1 false), !dbg !12550
  %44 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12551
  %multiscope = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %44, i32 0, i32 72, !dbg !12552
  store i32 2, i32* %multiscope, align 4, !dbg !12553
  br label %if.end54, !dbg !12554

if.end54:                                         ; preds = %if.then52, %if.else49
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.then48
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.then39
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then35
  %45 = load i8*, i8** %cbuf, align 8, !dbg !12555
  call void @av_free(i8* %45), !dbg !12556
  br label %if.end58, !dbg !12557

if.end58:                                         ; preds = %if.end57, %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !12558
  br label %return, !dbg !12558

return:                                           ; preds = %if.end58, %if.then6
  %46 = load i32, i32* %retval, align 4, !dbg !12559
  ret i32 %46, !dbg !12559
}

declare i32 @ff_jpegls_decode_lse(%struct.MJpegDecodeContext*) #2

; Function Attrs: nounwind uwtable
define internal void @mjpeg_idct_scan_progressive_ac(%struct.MJpegDecodeContext* %s) #3 !dbg !12560 {
entry:
  %s.addr = alloca %struct.MJpegDecodeContext*, align 8
  %mb_x = alloca i32, align 4
  %mb_y = alloca i32, align 4
  %c = alloca i32, align 4
  %bytes_per_pixel = alloca i32, align 4
  %block_size = alloca i32, align 4
  %data = alloca i8*, align 8
  %linesize = alloca i32, align 4
  %h = alloca i32, align 4
  %v = alloca i32, align 4
  %mb_width = alloca i32, align 4
  %mb_height = alloca i32, align 4
  %ptr = alloca i8*, align 8
  %block_idx = alloca i32, align 4
  %block = alloca [64 x i16]*, align 8
  store %struct.MJpegDecodeContext* %s, %struct.MJpegDecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MJpegDecodeContext** %s.addr, metadata !12561, metadata !2073), !dbg !12562
  call void @llvm.dbg.declare(metadata i32* %mb_x, metadata !12563, metadata !2073), !dbg !12564
  call void @llvm.dbg.declare(metadata i32* %mb_y, metadata !12565, metadata !2073), !dbg !12566
  call void @llvm.dbg.declare(metadata i32* %c, metadata !12567, metadata !2073), !dbg !12568
  call void @llvm.dbg.declare(metadata i32* %bytes_per_pixel, metadata !12569, metadata !2073), !dbg !12570
  %0 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12571
  %bits = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %0, i32 0, i32 22, !dbg !12572
  %1 = load i32, i32* %bits, align 8, !dbg !12572
  %cmp = icmp sgt i32 %1, 8, !dbg !12573
  %conv = zext i1 %cmp to i32, !dbg !12573
  %add = add nsw i32 1, %conv, !dbg !12574
  store i32 %add, i32* %bytes_per_pixel, align 4, !dbg !12570
  call void @llvm.dbg.declare(metadata i32* %block_size, metadata !12575, metadata !2073), !dbg !12576
  %2 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12577
  %lossless = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %2, i32 0, i32 14, !dbg !12578
  %3 = load i32, i32* %lossless, align 8, !dbg !12578
  %tobool = icmp ne i32 %3, 0, !dbg !12577
  %cond = select i1 %tobool, i32 1, i32 8, !dbg !12577
  store i32 %cond, i32* %block_size, align 4, !dbg !12576
  store i32 0, i32* %c, align 4, !dbg !12579
  br label %for.cond, !dbg !12581

for.cond:                                         ; preds = %for.inc62, %entry
  %4 = load i32, i32* %c, align 4, !dbg !12582
  %5 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12585
  %nb_components = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %5, i32 0, i32 36, !dbg !12586
  %6 = load i32, i32* %nb_components, align 32, !dbg !12586
  %cmp1 = icmp slt i32 %4, %6, !dbg !12587
  br i1 %cmp1, label %for.body, label %for.end64, !dbg !12588

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %data, metadata !12589, metadata !2073), !dbg !12591
  %7 = load i32, i32* %c, align 4, !dbg !12592
  %idxprom = sext i32 %7 to i64, !dbg !12593
  %8 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12593
  %picture_ptr = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %8, i32 0, i32 53, !dbg !12594
  %9 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr, align 8, !dbg !12594
  %data3 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %9, i32 0, i32 0, !dbg !12595
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data3, i64 0, i64 %idxprom, !dbg !12593
  %10 = load i8*, i8** %arrayidx, align 8, !dbg !12593
  store i8* %10, i8** %data, align 8, !dbg !12591
  call void @llvm.dbg.declare(metadata i32* %linesize, metadata !12596, metadata !2073), !dbg !12597
  %11 = load i32, i32* %c, align 4, !dbg !12598
  %idxprom4 = sext i32 %11 to i64, !dbg !12599
  %12 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12599
  %linesize5 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %12, i32 0, i32 55, !dbg !12600
  %arrayidx6 = getelementptr inbounds [4 x i32], [4 x i32]* %linesize5, i64 0, i64 %idxprom4, !dbg !12599
  %13 = load i32, i32* %arrayidx6, align 4, !dbg !12599
  store i32 %13, i32* %linesize, align 4, !dbg !12597
  call void @llvm.dbg.declare(metadata i32* %h, metadata !12601, metadata !2073), !dbg !12602
  %14 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12603
  %h_max = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %14, i32 0, i32 48, !dbg !12604
  %15 = load i32, i32* %h_max, align 4, !dbg !12604
  %16 = load i32, i32* %c, align 4, !dbg !12605
  %idxprom7 = sext i32 %16 to i64, !dbg !12606
  %17 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12606
  %h_count = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %17, i32 0, i32 39, !dbg !12607
  %arrayidx8 = getelementptr inbounds [4 x i32], [4 x i32]* %h_count, i64 0, i64 %idxprom7, !dbg !12606
  %18 = load i32, i32* %arrayidx8, align 4, !dbg !12606
  %div = sdiv i32 %15, %18, !dbg !12608
  store i32 %div, i32* %h, align 4, !dbg !12602
  call void @llvm.dbg.declare(metadata i32* %v, metadata !12609, metadata !2073), !dbg !12610
  %19 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12611
  %v_max = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %19, i32 0, i32 49, !dbg !12612
  %20 = load i32, i32* %v_max, align 8, !dbg !12612
  %21 = load i32, i32* %c, align 4, !dbg !12613
  %idxprom9 = sext i32 %21 to i64, !dbg !12614
  %22 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12614
  %v_count = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %22, i32 0, i32 40, !dbg !12615
  %arrayidx10 = getelementptr inbounds [4 x i32], [4 x i32]* %v_count, i64 0, i64 %idxprom9, !dbg !12614
  %23 = load i32, i32* %arrayidx10, align 4, !dbg !12614
  %div11 = sdiv i32 %20, %23, !dbg !12616
  store i32 %div11, i32* %v, align 4, !dbg !12610
  call void @llvm.dbg.declare(metadata i32* %mb_width, metadata !12617, metadata !2073), !dbg !12618
  %24 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12619
  %width = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %24, i32 0, i32 32, !dbg !12620
  %25 = load i32, i32* %width, align 16, !dbg !12620
  %26 = load i32, i32* %h, align 4, !dbg !12621
  %27 = load i32, i32* %block_size, align 4, !dbg !12622
  %mul = mul nsw i32 %26, %27, !dbg !12623
  %add12 = add nsw i32 %25, %mul, !dbg !12624
  %sub = sub nsw i32 %add12, 1, !dbg !12625
  %28 = load i32, i32* %h, align 4, !dbg !12626
  %29 = load i32, i32* %block_size, align 4, !dbg !12627
  %mul13 = mul nsw i32 %28, %29, !dbg !12628
  %div14 = sdiv i32 %sub, %mul13, !dbg !12629
  store i32 %div14, i32* %mb_width, align 4, !dbg !12618
  call void @llvm.dbg.declare(metadata i32* %mb_height, metadata !12630, metadata !2073), !dbg !12631
  %30 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12632
  %height = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %30, i32 0, i32 33, !dbg !12633
  %31 = load i32, i32* %height, align 4, !dbg !12633
  %32 = load i32, i32* %v, align 4, !dbg !12634
  %33 = load i32, i32* %block_size, align 4, !dbg !12635
  %mul15 = mul nsw i32 %32, %33, !dbg !12636
  %add16 = add nsw i32 %31, %mul15, !dbg !12637
  %sub17 = sub nsw i32 %add16, 1, !dbg !12638
  %34 = load i32, i32* %v, align 4, !dbg !12639
  %35 = load i32, i32* %block_size, align 4, !dbg !12640
  %mul18 = mul nsw i32 %34, %35, !dbg !12641
  %div19 = sdiv i32 %sub17, %mul18, !dbg !12642
  store i32 %div19, i32* %mb_height, align 4, !dbg !12631
  %36 = load i32, i32* %c, align 4, !dbg !12643
  %idxprom20 = sext i32 %36 to i64, !dbg !12645
  %37 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12645
  %coefs_finished = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %37, i32 0, i32 61, !dbg !12646
  %arrayidx21 = getelementptr inbounds [4 x i64], [4 x i64]* %coefs_finished, i64 0, i64 %idxprom20, !dbg !12645
  %38 = load i64, i64* %arrayidx21, align 8, !dbg !12645
  %neg = xor i64 %38, -1, !dbg !12647
  %tobool22 = icmp ne i64 %neg, 0, !dbg !12647
  br i1 %tobool22, label %if.then, label %if.end, !dbg !12648

if.then:                                          ; preds = %for.body
  %39 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12649
  %avctx = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %39, i32 0, i32 1, !dbg !12650
  %40 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !12650
  %41 = bitcast %struct.AVCodecContext* %40 to i8*, !dbg !12649
  %42 = load i32, i32* %c, align 4, !dbg !12651
  call void (i8*, i32, i8*, ...) @av_log(i8* %41, i32 24, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.140, i32 0, i32 0), i32 %42), !dbg !12652
  br label %if.end, !dbg !12652

if.end:                                           ; preds = %if.then, %for.body
  %43 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12653
  %interlaced = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %43, i32 0, i32 12, !dbg !12655
  %44 = load i32, i32* %interlaced, align 32, !dbg !12655
  %tobool23 = icmp ne i32 %44, 0, !dbg !12653
  br i1 %tobool23, label %land.lhs.true, label %if.end26, !dbg !12656

land.lhs.true:                                    ; preds = %if.end
  %45 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12657
  %bottom_field = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %45, i32 0, i32 13, !dbg !12659
  %46 = load i32, i32* %bottom_field, align 4, !dbg !12659
  %tobool24 = icmp ne i32 %46, 0, !dbg !12657
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !12660

if.then25:                                        ; preds = %land.lhs.true
  %47 = load i32, i32* %linesize, align 4, !dbg !12661
  %shr = ashr i32 %47, 1, !dbg !12662
  %48 = load i8*, i8** %data, align 8, !dbg !12663
  %idx.ext = sext i32 %shr to i64, !dbg !12663
  %add.ptr = getelementptr inbounds i8, i8* %48, i64 %idx.ext, !dbg !12663
  store i8* %add.ptr, i8** %data, align 8, !dbg !12663
  br label %if.end26, !dbg !12664

if.end26:                                         ; preds = %if.then25, %land.lhs.true, %if.end
  store i32 0, i32* %mb_y, align 4, !dbg !12665
  br label %for.cond27, !dbg !12667

for.cond27:                                       ; preds = %for.inc59, %if.end26
  %49 = load i32, i32* %mb_y, align 4, !dbg !12668
  %50 = load i32, i32* %mb_height, align 4, !dbg !12671
  %cmp28 = icmp slt i32 %49, %50, !dbg !12672
  br i1 %cmp28, label %for.body30, label %for.end61, !dbg !12673

for.body30:                                       ; preds = %for.cond27
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !12674, metadata !2073), !dbg !12676
  %51 = load i8*, i8** %data, align 8, !dbg !12677
  %52 = load i32, i32* %mb_y, align 4, !dbg !12678
  %53 = load i32, i32* %linesize, align 4, !dbg !12679
  %mul31 = mul nsw i32 %52, %53, !dbg !12680
  %mul32 = mul nsw i32 %mul31, 8, !dbg !12681
  %54 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12682
  %avctx33 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %54, i32 0, i32 1, !dbg !12683
  %55 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx33, align 8, !dbg !12683
  %lowres = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %55, i32 0, i32 144, !dbg !12684
  %56 = load i32, i32* %lowres, align 8, !dbg !12684
  %shr34 = ashr i32 %mul32, %56, !dbg !12685
  %idx.ext35 = sext i32 %shr34 to i64, !dbg !12686
  %add.ptr36 = getelementptr inbounds i8, i8* %51, i64 %idx.ext35, !dbg !12686
  store i8* %add.ptr36, i8** %ptr, align 8, !dbg !12676
  call void @llvm.dbg.declare(metadata i32* %block_idx, metadata !12687, metadata !2073), !dbg !12688
  %57 = load i32, i32* %mb_y, align 4, !dbg !12689
  %58 = load i32, i32* %c, align 4, !dbg !12690
  %idxprom37 = sext i32 %58 to i64, !dbg !12691
  %59 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12691
  %block_stride = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %59, i32 0, i32 37, !dbg !12692
  %arrayidx38 = getelementptr inbounds [4 x i32], [4 x i32]* %block_stride, i64 0, i64 %idxprom37, !dbg !12691
  %60 = load i32, i32* %arrayidx38, align 4, !dbg !12691
  %mul39 = mul nsw i32 %57, %60, !dbg !12693
  store i32 %mul39, i32* %block_idx, align 4, !dbg !12688
  call void @llvm.dbg.declare(metadata [64 x i16]** %block, metadata !12694, metadata !2073), !dbg !12695
  %61 = load i32, i32* %block_idx, align 4, !dbg !12696
  %idxprom40 = sext i32 %61 to i64, !dbg !12697
  %62 = load i32, i32* %c, align 4, !dbg !12698
  %idxprom41 = sext i32 %62 to i64, !dbg !12697
  %63 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12697
  %blocks = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %63, i32 0, i32 59, !dbg !12699
  %arrayidx42 = getelementptr inbounds [4 x [64 x i16]*], [4 x [64 x i16]*]* %blocks, i64 0, i64 %idxprom41, !dbg !12697
  %64 = load [64 x i16]*, [64 x i16]** %arrayidx42, align 8, !dbg !12697
  %arrayidx43 = getelementptr inbounds [64 x i16], [64 x i16]* %64, i64 %idxprom40, !dbg !12697
  store [64 x i16]* %arrayidx43, [64 x i16]** %block, align 8, !dbg !12695
  store i32 0, i32* %mb_x, align 4, !dbg !12700
  br label %for.cond44, !dbg !12702

for.cond44:                                       ; preds = %for.inc, %for.body30
  %65 = load i32, i32* %mb_x, align 4, !dbg !12703
  %66 = load i32, i32* %mb_width, align 4, !dbg !12706
  %cmp45 = icmp slt i32 %65, %66, !dbg !12707
  br i1 %cmp45, label %for.body47, label %for.end, !dbg !12708

for.body47:                                       ; preds = %for.cond44
  %67 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12709
  %idsp = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %67, i32 0, i32 66, !dbg !12711
  %idct_put = getelementptr inbounds %struct.IDCTDSPContext, %struct.IDCTDSPContext* %idsp, i32 0, i32 4, !dbg !12712
  %68 = load void (i8*, i64, i16*)*, void (i8*, i64, i16*)** %idct_put, align 16, !dbg !12712
  %69 = load i8*, i8** %ptr, align 8, !dbg !12713
  %70 = load i32, i32* %linesize, align 4, !dbg !12714
  %conv48 = sext i32 %70 to i64, !dbg !12714
  %71 = load [64 x i16]*, [64 x i16]** %block, align 8, !dbg !12715
  %arraydecay = getelementptr inbounds [64 x i16], [64 x i16]* %71, i32 0, i32 0, !dbg !12716
  call void %68(i8* %69, i64 %conv48, i16* %arraydecay), !dbg !12709
  %72 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12717
  %bits49 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %72, i32 0, i32 22, !dbg !12719
  %73 = load i32, i32* %bits49, align 8, !dbg !12719
  %and = and i32 %73, 7, !dbg !12720
  %tobool50 = icmp ne i32 %and, 0, !dbg !12720
  br i1 %tobool50, label %if.then51, label %if.end52, !dbg !12721

if.then51:                                        ; preds = %for.body47
  %74 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12722
  %75 = load i8*, i8** %ptr, align 8, !dbg !12723
  %76 = load i32, i32* %linesize, align 4, !dbg !12724
  call void @shift_output(%struct.MJpegDecodeContext* %74, i8* %75, i32 %76), !dbg !12725
  br label %if.end52, !dbg !12725

if.end52:                                         ; preds = %if.then51, %for.body47
  %77 = load i32, i32* %bytes_per_pixel, align 4, !dbg !12726
  %mul53 = mul nsw i32 %77, 8, !dbg !12727
  %78 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12728
  %avctx54 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %78, i32 0, i32 1, !dbg !12729
  %79 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx54, align 8, !dbg !12729
  %lowres55 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %79, i32 0, i32 144, !dbg !12730
  %80 = load i32, i32* %lowres55, align 8, !dbg !12730
  %shr56 = ashr i32 %mul53, %80, !dbg !12731
  %81 = load i8*, i8** %ptr, align 8, !dbg !12732
  %idx.ext57 = sext i32 %shr56 to i64, !dbg !12732
  %add.ptr58 = getelementptr inbounds i8, i8* %81, i64 %idx.ext57, !dbg !12732
  store i8* %add.ptr58, i8** %ptr, align 8, !dbg !12732
  br label %for.inc, !dbg !12733

for.inc:                                          ; preds = %if.end52
  %82 = load i32, i32* %mb_x, align 4, !dbg !12734
  %inc = add nsw i32 %82, 1, !dbg !12734
  store i32 %inc, i32* %mb_x, align 4, !dbg !12734
  %83 = load [64 x i16]*, [64 x i16]** %block, align 8, !dbg !12736
  %incdec.ptr = getelementptr inbounds [64 x i16], [64 x i16]* %83, i32 1, !dbg !12736
  store [64 x i16]* %incdec.ptr, [64 x i16]** %block, align 8, !dbg !12736
  br label %for.cond44, !dbg !12737, !llvm.loop !12738

for.end:                                          ; preds = %for.cond44
  br label %for.inc59, !dbg !12740

for.inc59:                                        ; preds = %for.end
  %84 = load i32, i32* %mb_y, align 4, !dbg !12741
  %inc60 = add nsw i32 %84, 1, !dbg !12741
  store i32 %inc60, i32* %mb_y, align 4, !dbg !12741
  br label %for.cond27, !dbg !12743, !llvm.loop !12744

for.end61:                                        ; preds = %for.cond27
  br label %for.inc62, !dbg !12746

for.inc62:                                        ; preds = %for.end61
  %85 = load i32, i32* %c, align 4, !dbg !12747
  %inc63 = add nsw i32 %85, 1, !dbg !12747
  store i32 %inc63, i32* %c, align 4, !dbg !12747
  br label %for.cond, !dbg !12749, !llvm.loop !12750

for.end64:                                        ; preds = %for.cond
  ret void, !dbg !12752
}

declare i32 @av_frame_ref(%struct.AVFrame*, %struct.AVFrame*) #2

declare %struct.AVBufferRef* @av_buffer_alloc(i32) #2

declare i32 @av_frame_set_qp_table(%struct.AVFrame*, %struct.AVBufferRef*, i32, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @mjpeg_decode_dri(%struct.MJpegDecodeContext* %s) #3 !dbg !12753 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.MJpegDecodeContext*, align 8
  store %struct.MJpegDecodeContext* %s, %struct.MJpegDecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MJpegDecodeContext** %s.addr, metadata !12754, metadata !2073), !dbg !12755
  %0 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12756
  %gb = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %0, i32 0, i32 2, !dbg !12758
  %call = call i32 @get_bits(%struct.GetBitContext* %gb, i32 16), !dbg !12759
  %cmp = icmp ne i32 %call, 4, !dbg !12760
  br i1 %cmp, label %if.then, label %if.end, !dbg !12761

if.then:                                          ; preds = %entry
  store i32 -1094995529, i32* %retval, align 4, !dbg !12762
  br label %return, !dbg !12762

if.end:                                           ; preds = %entry
  %1 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12763
  %gb1 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %1, i32 0, i32 2, !dbg !12764
  %call2 = call i32 @get_bits(%struct.GetBitContext* %gb1, i32 16), !dbg !12765
  %2 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12766
  %restart_interval = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %2, i32 0, i32 67, !dbg !12767
  store i32 %call2, i32* %restart_interval, align 8, !dbg !12768
  %3 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12769
  %restart_count = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %3, i32 0, i32 68, !dbg !12770
  store i32 0, i32* %restart_count, align 4, !dbg !12771
  %4 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12772
  %avctx = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %4, i32 0, i32 1, !dbg !12773
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !12773
  %6 = bitcast %struct.AVCodecContext* %5 to i8*, !dbg !12772
  %7 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12774
  %restart_interval3 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %7, i32 0, i32 67, !dbg !12775
  %8 = load i32, i32* %restart_interval3, align 8, !dbg !12775
  call void (i8*, i32, i8*, ...) @av_log(i8* %6, i32 48, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.141, i32 0, i32 0), i32 %8), !dbg !12776
  store i32 0, i32* %retval, align 4, !dbg !12777
  br label %return, !dbg !12777

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !12778
  ret i32 %9, !dbg !12778
}

declare i32 @av_pix_fmt_get_chroma_sub_sample(i32, i32*, i32*) #2

declare i32 @av_pix_fmt_count_planes(i32) #2

declare %struct.AVStereo3D* @av_stereo3d_create_side_data(%struct.AVFrame*) #2

declare %struct.AVFrameSideData* @av_frame_new_side_data(%struct.AVFrame*, i32, i32) #2

declare i32 @av_dict_copy(%struct.AVDictionary**, %struct.AVDictionary*, i32) #2

; Function Attrs: cold nounwind optsize uwtable
define i32 @ff_mjpeg_decode_end(%struct.AVCodecContext* %avctx) #0 !dbg !12779 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.MJpegDecodeContext*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !12780, metadata !2073), !dbg !12781
  call void @llvm.dbg.declare(metadata %struct.MJpegDecodeContext** %s, metadata !12782, metadata !2073), !dbg !12783
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !12784
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !12785
  %1 = load i8*, i8** %priv_data, align 8, !dbg !12785
  %2 = bitcast i8* %1 to %struct.MJpegDecodeContext*, !dbg !12784
  store %struct.MJpegDecodeContext* %2, %struct.MJpegDecodeContext** %s, align 8, !dbg !12783
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12786, metadata !2073), !dbg !12787
  call void @llvm.dbg.declare(metadata i32* %j, metadata !12788, metadata !2073), !dbg !12789
  %3 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !12790
  %interlaced = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %3, i32 0, i32 12, !dbg !12792
  %4 = load i32, i32* %interlaced, align 32, !dbg !12792
  %tobool = icmp ne i32 %4, 0, !dbg !12790
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !12793

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !12794
  %bottom_field = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %5, i32 0, i32 13, !dbg !12796
  %6 = load i32, i32* %bottom_field, align 4, !dbg !12796
  %7 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !12797
  %interlace_polarity = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %7, i32 0, i32 71, !dbg !12798
  %8 = load i32, i32* %interlace_polarity, align 8, !dbg !12798
  %tobool1 = icmp ne i32 %8, 0, !dbg !12799
  %lnot = xor i1 %tobool1, true, !dbg !12799
  %lnot.ext = zext i1 %lnot to i32, !dbg !12799
  %cmp = icmp eq i32 %6, %lnot.ext, !dbg !12800
  br i1 %cmp, label %land.lhs.true2, label %if.end, !dbg !12801

land.lhs.true2:                                   ; preds = %land.lhs.true
  %9 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !12802
  %got_picture = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %9, i32 0, i32 54, !dbg !12804
  %10 = load i32, i32* %got_picture, align 16, !dbg !12804
  %tobool3 = icmp ne i32 %10, 0, !dbg !12802
  br i1 %tobool3, label %land.lhs.true4, label %if.end, !dbg !12805

land.lhs.true4:                                   ; preds = %land.lhs.true2
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !12806
  %frame_number = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %11, i32 0, i32 86, !dbg !12808
  %12 = load i32, i32* %frame_number, align 8, !dbg !12808
  %tobool5 = icmp ne i32 %12, 0, !dbg !12806
  br i1 %tobool5, label %if.end, label %if.then, !dbg !12809

if.then:                                          ; preds = %land.lhs.true4
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !12810
  %14 = bitcast %struct.AVCodecContext* %13 to i8*, !dbg !12810
  call void (i8*, i32, i8*, ...) @av_log(i8* %14, i32 32, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.73, i32 0, i32 0)), !dbg !12812
  br label %if.end, !dbg !12813

if.end:                                           ; preds = %if.then, %land.lhs.true4, %land.lhs.true2, %land.lhs.true, %entry
  %15 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !12814
  %picture = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %15, i32 0, i32 52, !dbg !12816
  %16 = load %struct.AVFrame*, %struct.AVFrame** %picture, align 32, !dbg !12816
  %tobool6 = icmp ne %struct.AVFrame* %16, null, !dbg !12814
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !12817

if.then7:                                         ; preds = %if.end
  %17 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !12818
  %picture8 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %17, i32 0, i32 52, !dbg !12820
  call void @av_frame_free(%struct.AVFrame** %picture8), !dbg !12821
  %18 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !12822
  %picture_ptr = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %18, i32 0, i32 53, !dbg !12823
  store %struct.AVFrame* null, %struct.AVFrame** %picture_ptr, align 8, !dbg !12824
  br label %if.end14, !dbg !12825

if.else:                                          ; preds = %if.end
  %19 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !12826
  %picture_ptr9 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %19, i32 0, i32 53, !dbg !12829
  %20 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr9, align 8, !dbg !12829
  %tobool10 = icmp ne %struct.AVFrame* %20, null, !dbg !12826
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !12826

if.then11:                                        ; preds = %if.else
  %21 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !12830
  %picture_ptr12 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %21, i32 0, i32 53, !dbg !12831
  %22 = load %struct.AVFrame*, %struct.AVFrame** %picture_ptr12, align 8, !dbg !12831
  call void @av_frame_unref(%struct.AVFrame* %22), !dbg !12832
  br label %if.end13, !dbg !12832

if.end13:                                         ; preds = %if.then11, %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.then7
  %23 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !12833
  %buffer = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %23, i32 0, i32 6, !dbg !12834
  %24 = bitcast i8** %buffer to i8*, !dbg !12835
  call void @av_freep(i8* %24), !dbg !12836
  %25 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !12837
  %stereo3d = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %25, i32 0, i32 80, !dbg !12838
  %26 = bitcast %struct.AVStereo3D** %stereo3d to i8*, !dbg !12839
  call void @av_freep(i8* %26), !dbg !12840
  %27 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !12841
  %ljpeg_buffer = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %27, i32 0, i32 76, !dbg !12842
  %28 = bitcast [4 x i16]** %ljpeg_buffer to i8*, !dbg !12843
  call void @av_freep(i8* %28), !dbg !12844
  %29 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !12845
  %ljpeg_buffer_size = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %29, i32 0, i32 77, !dbg !12846
  store i32 0, i32* %ljpeg_buffer_size, align 8, !dbg !12847
  store i32 0, i32* %i, align 4, !dbg !12848
  br label %for.cond, !dbg !12850

for.cond:                                         ; preds = %for.inc21, %if.end14
  %30 = load i32, i32* %i, align 4, !dbg !12851
  %cmp15 = icmp slt i32 %30, 3, !dbg !12854
  br i1 %cmp15, label %for.body, label %for.end23, !dbg !12855

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !12856
  br label %for.cond16, !dbg !12859

for.cond16:                                       ; preds = %for.inc, %for.body
  %31 = load i32, i32* %j, align 4, !dbg !12860
  %cmp17 = icmp slt i32 %31, 4, !dbg !12863
  br i1 %cmp17, label %for.body18, label %for.end, !dbg !12864

for.body18:                                       ; preds = %for.cond16
  %32 = load i32, i32* %j, align 4, !dbg !12865
  %idxprom = sext i32 %32 to i64, !dbg !12866
  %33 = load i32, i32* %i, align 4, !dbg !12867
  %idxprom19 = sext i32 %33 to i64, !dbg !12866
  %34 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !12866
  %vlcs = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %34, i32 0, i32 8, !dbg !12868
  %arrayidx = getelementptr inbounds [3 x [4 x %struct.VLC]], [3 x [4 x %struct.VLC]]* %vlcs, i64 0, i64 %idxprom19, !dbg !12866
  %arrayidx20 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* %arrayidx, i64 0, i64 %idxprom, !dbg !12866
  call void @ff_free_vlc(%struct.VLC* %arrayidx20), !dbg !12869
  br label %for.inc, !dbg !12869

for.inc:                                          ; preds = %for.body18
  %35 = load i32, i32* %j, align 4, !dbg !12870
  %inc = add nsw i32 %35, 1, !dbg !12870
  store i32 %inc, i32* %j, align 4, !dbg !12870
  br label %for.cond16, !dbg !12872, !llvm.loop !12873

for.end:                                          ; preds = %for.cond16
  br label %for.inc21, !dbg !12875

for.inc21:                                        ; preds = %for.end
  %36 = load i32, i32* %i, align 4, !dbg !12876
  %inc22 = add nsw i32 %36, 1, !dbg !12876
  store i32 %inc22, i32* %i, align 4, !dbg !12876
  br label %for.cond, !dbg !12878, !llvm.loop !12879

for.end23:                                        ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !12881
  br label %for.cond24, !dbg !12883

for.cond24:                                       ; preds = %for.inc31, %for.end23
  %37 = load i32, i32* %i, align 4, !dbg !12884
  %cmp25 = icmp slt i32 %37, 4, !dbg !12887
  br i1 %cmp25, label %for.body26, label %for.end33, !dbg !12888

for.body26:                                       ; preds = %for.cond24
  %38 = load i32, i32* %i, align 4, !dbg !12889
  %idxprom27 = sext i32 %38 to i64, !dbg !12891
  %39 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !12891
  %blocks = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %39, i32 0, i32 59, !dbg !12892
  %arrayidx28 = getelementptr inbounds [4 x [64 x i16]*], [4 x [64 x i16]*]* %blocks, i64 0, i64 %idxprom27, !dbg !12891
  %40 = bitcast [64 x i16]** %arrayidx28 to i8*, !dbg !12893
  call void @av_freep(i8* %40), !dbg !12894
  %41 = load i32, i32* %i, align 4, !dbg !12895
  %idxprom29 = sext i32 %41 to i64, !dbg !12896
  %42 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !12896
  %last_nnz = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %42, i32 0, i32 60, !dbg !12897
  %arrayidx30 = getelementptr inbounds [4 x i8*], [4 x i8*]* %last_nnz, i64 0, i64 %idxprom29, !dbg !12896
  %43 = bitcast i8** %arrayidx30 to i8*, !dbg !12898
  call void @av_freep(i8* %43), !dbg !12899
  br label %for.inc31, !dbg !12900

for.inc31:                                        ; preds = %for.body26
  %44 = load i32, i32* %i, align 4, !dbg !12901
  %inc32 = add nsw i32 %44, 1, !dbg !12901
  store i32 %inc32, i32* %i, align 4, !dbg !12901
  br label %for.cond24, !dbg !12903, !llvm.loop !12904

for.end33:                                        ; preds = %for.cond24
  %45 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !12906
  %exif_metadata = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %45, i32 0, i32 79, !dbg !12907
  call void @av_dict_free(%struct.AVDictionary** %exif_metadata), !dbg !12908
  %46 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !12909
  call void @reset_icc_profile(%struct.MJpegDecodeContext* %46), !dbg !12910
  %47 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !12911
  %hwaccel_picture_private = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %47, i32 0, i32 94, !dbg !12912
  %48 = bitcast i8** %hwaccel_picture_private to i8*, !dbg !12913
  call void @av_freep(i8* %48), !dbg !12914
  ret i32 0, !dbg !12915
}

declare void @av_frame_free(%struct.AVFrame**) #2

; Function Attrs: nounwind uwtable
define internal void @decode_flush(%struct.AVCodecContext* %avctx) #3 !dbg !12916 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.MJpegDecodeContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !12917, metadata !2073), !dbg !12918
  call void @llvm.dbg.declare(metadata %struct.MJpegDecodeContext** %s, metadata !12919, metadata !2073), !dbg !12920
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !12921
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !12922
  %1 = load i8*, i8** %priv_data, align 8, !dbg !12922
  %2 = bitcast i8* %1 to %struct.MJpegDecodeContext*, !dbg !12921
  store %struct.MJpegDecodeContext* %2, %struct.MJpegDecodeContext** %s, align 8, !dbg !12920
  %3 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s, align 8, !dbg !12923
  %got_picture = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %3, i32 0, i32 54, !dbg !12924
  store i32 0, i32* %got_picture, align 16, !dbg !12925
  ret void, !dbg !12926
}

declare void @ff_idctdsp_init(%struct.IDCTDSPContext*, %struct.AVCodecContext*) #2

declare void @ff_init_scantable(i8*, %struct.ScanTable*, i8*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @NEG_USR32(i32 %a, i8 signext %s) #4 !dbg !12927 {
entry:
  %a.addr = alloca i32, align 4
  %s.addr = alloca i8, align 1
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !12931, metadata !2073), !dbg !12932
  store i8 %s, i8* %s.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %s.addr, metadata !12933, metadata !2073), !dbg !12934
  %0 = load i32, i32* %a.addr, align 4, !dbg !12935
  %1 = load i8, i8* %s.addr, align 1, !dbg !12936
  %conv = sext i8 %1 to i32, !dbg !12936
  %sub = sub nsw i32 0, %conv, !dbg !12937
  %conv1 = trunc i32 %sub to i8, !dbg !12938
  %2 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %conv1, i32 %0) #1, !dbg !12935, !srcloc !12939
  store i32 %2, i32* %a.addr, align 4, !dbg !12935
  %3 = load i32, i32* %a.addr, align 4, !dbg !12940
  ret i32 %3, !dbg !12941
}

declare void @ff_mjpeg_build_huffman_codes(i8*, i16*, i8*, i8*) #2

declare i32 @ff_init_vlc_sparse(%struct.VLC*, i32, i32, i8*, i32, i32, i8*, i32, i32, i8*, i32, i32, i32) #2

declare void @av_fast_malloc(i8*, i32*, i64) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @mjpeg_decode_dc(%struct.MJpegDecodeContext* %s, i32 %dc_index) #4 !dbg !12942 {
entry:
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !2864, metadata !2073), !dbg !12945
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !2864, metadata !2073), !dbg !12957
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !2864, metadata !2073), !dbg !12960
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !12962, metadata !2073), !dbg !12963
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !12964, metadata !2073), !dbg !12965
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !12966, metadata !2073), !dbg !12967
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !12968, metadata !2073), !dbg !12969
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !12970, metadata !2073), !dbg !12971
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !12972, metadata !2073), !dbg !12973
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !12974, metadata !2073), !dbg !12975
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !12976, metadata !2073), !dbg !12977
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !12978, metadata !2073), !dbg !12979
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !12980, metadata !2073), !dbg !12981
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !12982, metadata !2073), !dbg !12983
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.MJpegDecodeContext*, align 8
  %dc_index.addr = alloca i32, align 4
  %code = alloca i32, align 4
  store %struct.MJpegDecodeContext* %s, %struct.MJpegDecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MJpegDecodeContext** %s.addr, metadata !12984, metadata !2073), !dbg !12985
  store i32 %dc_index, i32* %dc_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dc_index.addr, metadata !12986, metadata !2073), !dbg !12987
  call void @llvm.dbg.declare(metadata i32* %code, metadata !12988, metadata !2073), !dbg !12989
  %0 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12990
  %gb = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %0, i32 0, i32 2, !dbg !12991
  %1 = load i32, i32* %dc_index.addr, align 4, !dbg !12992
  %idxprom = sext i32 %1 to i64, !dbg !12993
  %2 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !12993
  %vlcs = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %2, i32 0, i32 8, !dbg !12994
  %arrayidx = getelementptr inbounds [3 x [4 x %struct.VLC]], [3 x [4 x %struct.VLC]]* %vlcs, i64 0, i64 0, !dbg !12993
  %arrayidx1 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* %arrayidx, i64 0, i64 %idxprom, !dbg !12993
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx1, i32 0, i32 1, !dbg !12995
  %3 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !12995
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %s.addr.i, align 8, !dbg !12996
  store [2 x i16]* %3, [2 x i16]** %table.addr.i, align 8, !dbg !12996
  store i32 9, i32* %bits.addr.i, align 4, !dbg !12996
  store i32 2, i32* %max_depth.addr.i, align 4, !dbg !12996
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !12997
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 2, !dbg !12998
  %5 = load i32, i32* %index.i, align 8, !dbg !12998
  store i32 %5, i32* %re_index.i, align 4, !dbg !12973
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !12999
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %6, i32 0, i32 4, !dbg !13000
  %7 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !13000
  store i32 %7, i32* %re_size_plus8.i, align 4, !dbg !12977
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !13001
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %8, i32 0, i32 0, !dbg !13002
  %9 = load i8*, i8** %buffer.i, align 8, !dbg !13002
  %10 = load i32, i32* %re_index.i, align 4, !dbg !13003
  %shr.i = lshr i32 %10, 3, !dbg !13004
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !13005
  %add.ptr.i = getelementptr inbounds i8, i8* %9, i64 %idx.ext.i, !dbg !13005
  %11 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !13006
  %l.i = bitcast %union.unaligned_32* %11 to i32*, !dbg !13006
  %12 = load i32, i32* %l.i, align 1, !dbg !13006
  store i32 %12, i32* %x.addr.i.i, align 4, !dbg !13007
  %13 = load i32, i32* %x.addr.i.i, align 4, !dbg !13008
  %shl.i.i = shl i32 %13, 8, !dbg !13009
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !13010
  %14 = load i32, i32* %x.addr.i.i, align 4, !dbg !13011
  %shr.i.i = lshr i32 %14, 8, !dbg !13012
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !13013
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !13014
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !13015
  %15 = load i32, i32* %x.addr.i.i, align 4, !dbg !13016
  %shr3.i.i = lshr i32 %15, 16, !dbg !13017
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !13018
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !13019
  %16 = load i32, i32* %x.addr.i.i, align 4, !dbg !13020
  %shr6.i.i = lshr i32 %16, 16, !dbg !13021
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !13022
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !13023
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !13024
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !13025
  %17 = load i32, i32* %re_index.i, align 4, !dbg !13026
  %and.i = and i32 %17, 7, !dbg !13027
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !13028
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !13029
  %18 = load i32, i32* %re_cache.i, align 4, !dbg !13030
  %19 = load i32, i32* %bits.addr.i, align 4, !dbg !13032
  %conv.i = trunc i32 %19 to i8, !dbg !13032
  %call2.i = call i32 @NEG_USR32(i32 %18, i8 signext %conv.i) #10, !dbg !13033
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !13034
  %20 = load i32, i32* %index1.i, align 4, !dbg !13035
  %idxprom.i = zext i32 %20 to i64, !dbg !13036
  %21 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !13036
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %21, i64 %idxprom.i, !dbg !13036
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !13036
  %22 = load i16, i16* %arrayidx3.i, align 2, !dbg !13036
  %conv4.i = sext i16 %22 to i32, !dbg !13036
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !13037
  %23 = load i32, i32* %index1.i, align 4, !dbg !13038
  %idxprom5.i = zext i32 %23 to i64, !dbg !13039
  %24 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !13039
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %24, i64 %idxprom5.i, !dbg !13039
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !13039
  %25 = load i16, i16* %arrayidx7.i, align 2, !dbg !13039
  %conv8.i = sext i16 %25 to i32, !dbg !13039
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !13040
  %26 = load i32, i32* %max_depth.addr.i, align 4, !dbg !13041
  %cmp.i = icmp sgt i32 %26, 1, !dbg !13042
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !13043

land.lhs.true.i:                                  ; preds = %entry
  %27 = load i32, i32* %n.i, align 4, !dbg !13044
  %cmp10.i = icmp slt i32 %27, 0, !dbg !13046
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !13047

if.then.i:                                        ; preds = %land.lhs.true.i
  %28 = load i32, i32* %re_size_plus8.i, align 4, !dbg !13048
  %29 = load i32, i32* %re_index.i, align 4, !dbg !13050
  %30 = load i32, i32* %bits.addr.i, align 4, !dbg !13051
  %add.i = add i32 %29, %30, !dbg !13052
  %cmp12.i = icmp ugt i32 %28, %add.i, !dbg !13053
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !13054

cond.true.i:                                      ; preds = %if.then.i
  %31 = load i32, i32* %re_index.i, align 4, !dbg !13055
  %32 = load i32, i32* %bits.addr.i, align 4, !dbg !13057
  %add14.i = add i32 %31, %32, !dbg !13058
  br label %cond.end.i, !dbg !13059

cond.false.i:                                     ; preds = %if.then.i
  %33 = load i32, i32* %re_size_plus8.i, align 4, !dbg !13060
  br label %cond.end.i, !dbg !13062

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %33, %cond.false.i ], !dbg !13063
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !13064
  %34 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !13065
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %34, i32 0, i32 0, !dbg !13066
  %35 = load i8*, i8** %buffer15.i, align 8, !dbg !13066
  %36 = load i32, i32* %re_index.i, align 4, !dbg !13067
  %shr16.i = lshr i32 %36, 3, !dbg !13068
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !13069
  %add.ptr18.i = getelementptr inbounds i8, i8* %35, i64 %idx.ext17.i, !dbg !13069
  %37 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !13070
  %l19.i = bitcast %union.unaligned_32* %37 to i32*, !dbg !13070
  %38 = load i32, i32* %l19.i, align 1, !dbg !13070
  store i32 %38, i32* %x.addr.i81.i, align 4, !dbg !13071
  %39 = load i32, i32* %x.addr.i81.i, align 4, !dbg !13072
  %shl.i82.i = shl i32 %39, 8, !dbg !13073
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !13074
  %40 = load i32, i32* %x.addr.i81.i, align 4, !dbg !13075
  %shr.i84.i = lshr i32 %40, 8, !dbg !13076
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !13077
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !13078
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !13079
  %41 = load i32, i32* %x.addr.i81.i, align 4, !dbg !13080
  %shr3.i88.i = lshr i32 %41, 16, !dbg !13081
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !13082
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !13083
  %42 = load i32, i32* %x.addr.i81.i, align 4, !dbg !13084
  %shr6.i91.i = lshr i32 %42, 16, !dbg !13085
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !13086
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !13087
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !13088
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !13089
  %43 = load i32, i32* %re_index.i, align 4, !dbg !13090
  %and21.i = and i32 %43, 7, !dbg !13091
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !13092
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !13093
  %44 = load i32, i32* %n.i, align 4, !dbg !13094
  %sub.i = sub nsw i32 0, %44, !dbg !13095
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !13096
  %45 = load i32, i32* %re_cache.i, align 4, !dbg !13097
  %46 = load i32, i32* %nb_bits.i, align 4, !dbg !13098
  %conv23.i = trunc i32 %46 to i8, !dbg !13098
  %call24.i = call i32 @NEG_USR32(i32 %45, i8 signext %conv23.i) #10, !dbg !13099
  %47 = load i32, i32* %code.i, align 4, !dbg !13101
  %add25.i = add i32 %call24.i, %47, !dbg !13102
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !13103
  %48 = load i32, i32* %index1.i, align 4, !dbg !13104
  %idxprom26.i = zext i32 %48 to i64, !dbg !13105
  %49 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !13105
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %49, i64 %idxprom26.i, !dbg !13105
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !13105
  %50 = load i16, i16* %arrayidx28.i, align 2, !dbg !13105
  %conv29.i = sext i16 %50 to i32, !dbg !13105
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !13106
  %51 = load i32, i32* %index1.i, align 4, !dbg !13107
  %idxprom30.i = zext i32 %51 to i64, !dbg !13108
  %52 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !13108
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %52, i64 %idxprom30.i, !dbg !13108
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !13108
  %53 = load i16, i16* %arrayidx32.i, align 2, !dbg !13108
  %conv33.i = sext i16 %53 to i32, !dbg !13108
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !13109
  %54 = load i32, i32* %max_depth.addr.i, align 4, !dbg !13110
  %cmp34.i = icmp sgt i32 %54, 2, !dbg !13111
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !13112

land.lhs.true36.i:                                ; preds = %cond.end.i
  %55 = load i32, i32* %n.i, align 4, !dbg !13113
  %cmp37.i = icmp slt i32 %55, 0, !dbg !13115
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !13116

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %56 = load i32, i32* %re_size_plus8.i, align 4, !dbg !13117
  %57 = load i32, i32* %re_index.i, align 4, !dbg !13119
  %58 = load i32, i32* %nb_bits.i, align 4, !dbg !13120
  %add40.i = add i32 %57, %58, !dbg !13121
  %cmp41.i = icmp ugt i32 %56, %add40.i, !dbg !13122
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !13123

cond.true43.i:                                    ; preds = %if.then39.i
  %59 = load i32, i32* %re_index.i, align 4, !dbg !13124
  %60 = load i32, i32* %nb_bits.i, align 4, !dbg !13126
  %add44.i = add i32 %59, %60, !dbg !13127
  br label %cond.end46.i, !dbg !13128

cond.false45.i:                                   ; preds = %if.then39.i
  %61 = load i32, i32* %re_size_plus8.i, align 4, !dbg !13129
  br label %cond.end46.i, !dbg !13131

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %61, %cond.false45.i ], !dbg !13132
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !13133
  %62 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !13134
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %62, i32 0, i32 0, !dbg !13135
  %63 = load i8*, i8** %buffer48.i, align 8, !dbg !13135
  %64 = load i32, i32* %re_index.i, align 4, !dbg !13136
  %shr49.i = lshr i32 %64, 3, !dbg !13137
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !13138
  %add.ptr51.i = getelementptr inbounds i8, i8* %63, i64 %idx.ext50.i, !dbg !13138
  %65 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !13139
  %l52.i = bitcast %union.unaligned_32* %65 to i32*, !dbg !13139
  %66 = load i32, i32* %l52.i, align 1, !dbg !13139
  store i32 %66, i32* %x.addr.i96.i, align 4, !dbg !13140
  %67 = load i32, i32* %x.addr.i96.i, align 4, !dbg !13141
  %shl.i97.i = shl i32 %67, 8, !dbg !13142
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !13143
  %68 = load i32, i32* %x.addr.i96.i, align 4, !dbg !13144
  %shr.i99.i = lshr i32 %68, 8, !dbg !13145
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !13146
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !13147
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !13148
  %69 = load i32, i32* %x.addr.i96.i, align 4, !dbg !13149
  %shr3.i103.i = lshr i32 %69, 16, !dbg !13150
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !13151
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !13152
  %70 = load i32, i32* %x.addr.i96.i, align 4, !dbg !13153
  %shr6.i106.i = lshr i32 %70, 16, !dbg !13154
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !13155
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !13156
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !13157
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !13158
  %71 = load i32, i32* %re_index.i, align 4, !dbg !13159
  %and54.i = and i32 %71, 7, !dbg !13160
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !13161
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !13162
  %72 = load i32, i32* %n.i, align 4, !dbg !13163
  %sub56.i = sub nsw i32 0, %72, !dbg !13164
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !13165
  %73 = load i32, i32* %re_cache.i, align 4, !dbg !13166
  %74 = load i32, i32* %nb_bits.i, align 4, !dbg !13167
  %conv57.i = trunc i32 %74 to i8, !dbg !13167
  %call58.i = call i32 @NEG_USR32(i32 %73, i8 signext %conv57.i) #10, !dbg !13168
  %75 = load i32, i32* %code.i, align 4, !dbg !13170
  %add59.i = add i32 %call58.i, %75, !dbg !13171
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !13172
  %76 = load i32, i32* %index1.i, align 4, !dbg !13173
  %idxprom60.i = zext i32 %76 to i64, !dbg !13174
  %77 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !13174
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %77, i64 %idxprom60.i, !dbg !13174
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !13174
  %78 = load i16, i16* %arrayidx62.i, align 2, !dbg !13174
  %conv63.i = sext i16 %78 to i32, !dbg !13174
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !13175
  %79 = load i32, i32* %index1.i, align 4, !dbg !13176
  %idxprom64.i = zext i32 %79 to i64, !dbg !13177
  %80 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !13177
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %80, i64 %idxprom64.i, !dbg !13177
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !13177
  %81 = load i16, i16* %arrayidx66.i, align 2, !dbg !13177
  %conv67.i = sext i16 %81 to i32, !dbg !13177
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !13178
  br label %if.end.i, !dbg !13179

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !13180

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %entry
  %82 = load i32, i32* %n.i, align 4, !dbg !13182
  %83 = load i32, i32* %re_cache.i, align 4, !dbg !13185
  %shl70.i = shl i32 %83, %82, !dbg !13185
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !13185
  %84 = load i32, i32* %re_size_plus8.i, align 4, !dbg !13186
  %85 = load i32, i32* %re_index.i, align 4, !dbg !13187
  %86 = load i32, i32* %n.i, align 4, !dbg !13188
  %add71.i = add i32 %85, %86, !dbg !13189
  %cmp72.i = icmp ugt i32 %84, %add71.i, !dbg !13190
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !13191

cond.true74.i:                                    ; preds = %if.end68.i
  %87 = load i32, i32* %re_index.i, align 4, !dbg !13192
  %88 = load i32, i32* %n.i, align 4, !dbg !13194
  %add75.i = add i32 %87, %88, !dbg !13195
  br label %get_vlc2.exit, !dbg !13196

cond.false76.i:                                   ; preds = %if.end68.i
  %89 = load i32, i32* %re_size_plus8.i, align 4, !dbg !13197
  br label %get_vlc2.exit, !dbg !13199

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %89, %cond.false76.i ], !dbg !13200
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !13202
  %90 = load i32, i32* %re_index.i, align 4, !dbg !13203
  %91 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !13204
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %91, i32 0, i32 2, !dbg !13205
  store i32 %90, i32* %index80.i, align 8, !dbg !13206
  %92 = load i32, i32* %code.i, align 4, !dbg !13207
  store i32 %92, i32* %code, align 4, !dbg !13208
  %93 = load i32, i32* %code, align 4, !dbg !13209
  %cmp = icmp slt i32 %93, 0, !dbg !13211
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !13212

lor.lhs.false:                                    ; preds = %get_vlc2.exit
  %94 = load i32, i32* %code, align 4, !dbg !13213
  %cmp2 = icmp sgt i32 %94, 16, !dbg !13215
  br i1 %cmp2, label %if.then, label %if.end, !dbg !13216

if.then:                                          ; preds = %lor.lhs.false, %get_vlc2.exit
  %95 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !13217
  %avctx = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %95, i32 0, i32 1, !dbg !13219
  %96 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !13219
  %97 = bitcast %struct.AVCodecContext* %96 to i8*, !dbg !13217
  %98 = load i32, i32* %dc_index.addr, align 4, !dbg !13220
  %99 = load i32, i32* %dc_index.addr, align 4, !dbg !13221
  %idxprom3 = sext i32 %99 to i64, !dbg !13222
  %100 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !13222
  %vlcs4 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %100, i32 0, i32 8, !dbg !13223
  %arrayidx5 = getelementptr inbounds [3 x [4 x %struct.VLC]], [3 x [4 x %struct.VLC]]* %vlcs4, i64 0, i64 0, !dbg !13222
  %arrayidx6 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* %arrayidx5, i64 0, i64 %idxprom3, !dbg !13222
  call void (i8*, i32, i8*, ...) @av_log(i8* %97, i32 24, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.81, i32 0, i32 0), i32 0, i32 %98, %struct.VLC* %arrayidx6), !dbg !13224
  store i32 1048575, i32* %retval, align 4, !dbg !13225
  br label %return, !dbg !13225

if.end:                                           ; preds = %lor.lhs.false
  %101 = load i32, i32* %code, align 4, !dbg !13226
  %tobool = icmp ne i32 %101, 0, !dbg !13226
  br i1 %tobool, label %if.then7, label %if.else, !dbg !13228

if.then7:                                         ; preds = %if.end
  %102 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !13229
  %gb8 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %102, i32 0, i32 2, !dbg !13230
  %103 = load i32, i32* %code, align 4, !dbg !13231
  %call9 = call i32 @get_xbits(%struct.GetBitContext* %gb8, i32 %103), !dbg !13232
  store i32 %call9, i32* %retval, align 4, !dbg !13233
  br label %return, !dbg !13233

if.else:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !13234
  br label %return, !dbg !13234

return:                                           ; preds = %if.else, %if.then7, %if.then
  %104 = load i32, i32* %retval, align 4, !dbg !13235
  ret i32 %104, !dbg !13235
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_xbits(%struct.GetBitContext* %s, i32 %n) #4 !dbg !13236 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2864, metadata !2073), !dbg !13239
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %sign = alloca i32, align 4
  %cache = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !13241, metadata !2073), !dbg !13242
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !13243, metadata !2073), !dbg !13244
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !13245, metadata !2073), !dbg !13246
  call void @llvm.dbg.declare(metadata i32* %cache, metadata !13247, metadata !2073), !dbg !13249
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !13250, metadata !2073), !dbg !13251
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !13252
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !13253
  %1 = load i32, i32* %index, align 8, !dbg !13253
  store i32 %1, i32* %re_index, align 4, !dbg !13251
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !13254, metadata !2073), !dbg !13255
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !13256, metadata !2073), !dbg !13257
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !13258
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !13259
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !13259
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !13257
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !13260
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !13261
  %5 = load i8*, i8** %buffer, align 8, !dbg !13261
  %6 = load i32, i32* %re_index, align 4, !dbg !13262
  %shr = lshr i32 %6, 3, !dbg !13263
  %idx.ext = zext i32 %shr to i64, !dbg !13264
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !13264
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !13265
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !13265
  %8 = load i32, i32* %l, align 1, !dbg !13265
  store i32 %8, i32* %x.addr.i, align 4, !dbg !13266
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !13267
  %shl.i = shl i32 %9, 8, !dbg !13268
  %and.i = and i32 %shl.i, 65280, !dbg !13269
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !13270
  %shr.i = lshr i32 %10, 8, !dbg !13271
  %and1.i = and i32 %shr.i, 255, !dbg !13272
  %or.i = or i32 %and.i, %and1.i, !dbg !13273
  %shl2.i = shl i32 %or.i, 16, !dbg !13274
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !13275
  %shr3.i = lshr i32 %11, 16, !dbg !13276
  %shl4.i = shl i32 %shr3.i, 8, !dbg !13277
  %and5.i = and i32 %shl4.i, 65280, !dbg !13278
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !13279
  %shr6.i = lshr i32 %12, 16, !dbg !13280
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !13281
  %and8.i = and i32 %shr7.i, 255, !dbg !13282
  %or9.i = or i32 %and5.i, %and8.i, !dbg !13283
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !13284
  %13 = load i32, i32* %re_index, align 4, !dbg !13285
  %and = and i32 %13, 7, !dbg !13286
  %shl = shl i32 %or10.i, %and, !dbg !13287
  store i32 %shl, i32* %re_cache, align 4, !dbg !13288
  %14 = load i32, i32* %re_cache, align 4, !dbg !13289
  store i32 %14, i32* %cache, align 4, !dbg !13290
  %15 = load i32, i32* %cache, align 4, !dbg !13291
  %neg = xor i32 %15, -1, !dbg !13292
  %shr1 = ashr i32 %neg, 31, !dbg !13293
  store i32 %shr1, i32* %sign, align 4, !dbg !13294
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !13295
  %17 = load i32, i32* %re_index, align 4, !dbg !13296
  %18 = load i32, i32* %n.addr, align 4, !dbg !13297
  %add = add i32 %17, %18, !dbg !13298
  %cmp = icmp ugt i32 %16, %add, !dbg !13299
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13300

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !13301
  %20 = load i32, i32* %n.addr, align 4, !dbg !13303
  %add2 = add i32 %19, %20, !dbg !13304
  br label %cond.end, !dbg !13305

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !13306
  br label %cond.end, !dbg !13308

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add2, %cond.true ], [ %21, %cond.false ], !dbg !13309
  store i32 %cond, i32* %re_index, align 4, !dbg !13311
  %22 = load i32, i32* %re_index, align 4, !dbg !13312
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !13313
  %index3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !13314
  store i32 %22, i32* %index3, align 8, !dbg !13315
  %24 = load i32, i32* %sign, align 4, !dbg !13316
  %25 = load i32, i32* %cache, align 4, !dbg !13317
  %xor = xor i32 %24, %25, !dbg !13318
  %26 = load i32, i32* %n.addr, align 4, !dbg !13319
  %conv = trunc i32 %26 to i8, !dbg !13319
  %call4 = call i32 @NEG_USR32(i32 %xor, i8 signext %conv), !dbg !13320
  %27 = load i32, i32* %sign, align 4, !dbg !13321
  %xor5 = xor i32 %call4, %27, !dbg !13322
  %28 = load i32, i32* %sign, align 4, !dbg !13323
  %sub = sub i32 %xor5, %28, !dbg !13324
  ret i32 %sub, !dbg !13325
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_block_refinement(%struct.MJpegDecodeContext* %s, i16* %block, i8* %last_nnz, i32 %ac_index, i16* %quant_matrix, i32 %ss, i32 %se, i32 %Al, i32* %EOBRUN) #3 !dbg !13326 {
entry:
  %x.addr.i411 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i411, metadata !2864, metadata !2073), !dbg !13329
  %x.addr.i396 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i396, metadata !2864, metadata !2073), !dbg !13346
  %x.addr.i381 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i381, metadata !2864, metadata !2073), !dbg !13355
  %x.addr.i366 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i366, metadata !2864, metadata !2073), !dbg !13360
  %x.addr.i351 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i351, metadata !2864, metadata !2073), !dbg !13362
  %x.addr.i336 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i336, metadata !2864, metadata !2073), !dbg !13369
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2864, metadata !2073), !dbg !13375
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.MJpegDecodeContext*, align 8
  %block.addr = alloca i16*, align 8
  %last_nnz.addr = alloca i8*, align 8
  %ac_index.addr = alloca i32, align 4
  %quant_matrix.addr = alloca i16*, align 8
  %ss.addr = alloca i32, align 4
  %se.addr = alloca i32, align 4
  %Al.addr = alloca i32, align 4
  %EOBRUN.addr = alloca i32*, align 8
  %code = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %sign = alloca i32, align 4
  %val = alloca i32, align 4
  %run = alloca i32, align 4
  %last = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  %n = alloca i32, align 4
  %nb_bits = alloca i32, align 4
  %index5 = alloca i32, align 4
  store %struct.MJpegDecodeContext* %s, %struct.MJpegDecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MJpegDecodeContext** %s.addr, metadata !13377, metadata !2073), !dbg !13378
  store i16* %block, i16** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %block.addr, metadata !13379, metadata !2073), !dbg !13380
  store i8* %last_nnz, i8** %last_nnz.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %last_nnz.addr, metadata !13381, metadata !2073), !dbg !13382
  store i32 %ac_index, i32* %ac_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ac_index.addr, metadata !13383, metadata !2073), !dbg !13384
  store i16* %quant_matrix, i16** %quant_matrix.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %quant_matrix.addr, metadata !13385, metadata !2073), !dbg !13386
  store i32 %ss, i32* %ss.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ss.addr, metadata !13387, metadata !2073), !dbg !13388
  store i32 %se, i32* %se.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %se.addr, metadata !13389, metadata !2073), !dbg !13390
  store i32 %Al, i32* %Al.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %Al.addr, metadata !13391, metadata !2073), !dbg !13392
  store i32* %EOBRUN, i32** %EOBRUN.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %EOBRUN.addr, metadata !13393, metadata !2073), !dbg !13394
  call void @llvm.dbg.declare(metadata i32* %code, metadata !13395, metadata !2073), !dbg !13396
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13397, metadata !2073), !dbg !13398
  %0 = load i32, i32* %ss.addr, align 4, !dbg !13399
  store i32 %0, i32* %i, align 4, !dbg !13398
  call void @llvm.dbg.declare(metadata i32* %j, metadata !13400, metadata !2073), !dbg !13401
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !13402, metadata !2073), !dbg !13403
  call void @llvm.dbg.declare(metadata i32* %val, metadata !13404, metadata !2073), !dbg !13405
  call void @llvm.dbg.declare(metadata i32* %run, metadata !13406, metadata !2073), !dbg !13407
  call void @llvm.dbg.declare(metadata i32* %last, metadata !13408, metadata !2073), !dbg !13409
  %1 = load i32, i32* %se.addr, align 4, !dbg !13410
  %2 = load i8*, i8** %last_nnz.addr, align 8, !dbg !13411
  %3 = load i8, i8* %2, align 1, !dbg !13412
  %conv = zext i8 %3 to i32, !dbg !13413
  %cmp = icmp sgt i32 %1, %conv, !dbg !13414
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13415

cond.true:                                        ; preds = %entry
  %4 = load i8*, i8** %last_nnz.addr, align 8, !dbg !13416
  %5 = load i8, i8* %4, align 1, !dbg !13418
  %conv2 = zext i8 %5 to i32, !dbg !13419
  br label %cond.end, !dbg !13420

cond.false:                                       ; preds = %entry
  %6 = load i32, i32* %se.addr, align 4, !dbg !13421
  br label %cond.end, !dbg !13423

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv2, %cond.true ], [ %6, %cond.false ], !dbg !13424
  store i32 %cond, i32* %last, align 4, !dbg !13426
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !13427, metadata !2073), !dbg !13428
  %7 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !13429
  %gb = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %7, i32 0, i32 2, !dbg !13430
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb, i32 0, i32 2, !dbg !13431
  %8 = load i32, i32* %index, align 16, !dbg !13431
  store i32 %8, i32* %re_index, align 4, !dbg !13428
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !13432, metadata !2073), !dbg !13433
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !13434, metadata !2073), !dbg !13435
  %9 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !13436
  %gb3 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %9, i32 0, i32 2, !dbg !13437
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb3, i32 0, i32 4, !dbg !13438
  %10 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !13438
  store i32 %10, i32* %re_size_plus8, align 4, !dbg !13435
  %11 = load i32*, i32** %EOBRUN.addr, align 8, !dbg !13439
  %12 = load i32, i32* %11, align 4, !dbg !13440
  %tobool = icmp ne i32 %12, 0, !dbg !13440
  br i1 %tobool, label %if.then, label %if.else, !dbg !13441

if.then:                                          ; preds = %cond.end
  %13 = load i32*, i32** %EOBRUN.addr, align 8, !dbg !13442
  %14 = load i32, i32* %13, align 4, !dbg !13444
  %dec = add nsw i32 %14, -1, !dbg !13444
  store i32 %dec, i32* %13, align 4, !dbg !13444
  br label %if.end283, !dbg !13445

if.else:                                          ; preds = %cond.end
  br label %for.cond, !dbg !13446

for.cond:                                         ; preds = %for.inc274, %if.else
  %15 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !13447
  %gb4 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %15, i32 0, i32 2, !dbg !13448
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb4, i32 0, i32 0, !dbg !13449
  %16 = load i8*, i8** %buffer, align 16, !dbg !13449
  %17 = load i32, i32* %re_index, align 4, !dbg !13450
  %shr = lshr i32 %17, 3, !dbg !13451
  %idx.ext = zext i32 %shr to i64, !dbg !13452
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 %idx.ext, !dbg !13452
  %18 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !13453
  %l = bitcast %union.unaligned_32* %18 to i32*, !dbg !13453
  %19 = load i32, i32* %l, align 1, !dbg !13453
  store i32 %19, i32* %x.addr.i, align 4, !dbg !13454
  %20 = load i32, i32* %x.addr.i, align 4, !dbg !13455
  %shl.i = shl i32 %20, 8, !dbg !13456
  %and.i = and i32 %shl.i, 65280, !dbg !13457
  %21 = load i32, i32* %x.addr.i, align 4, !dbg !13458
  %shr.i = lshr i32 %21, 8, !dbg !13459
  %and1.i = and i32 %shr.i, 255, !dbg !13460
  %or.i = or i32 %and.i, %and1.i, !dbg !13461
  %shl2.i = shl i32 %or.i, 16, !dbg !13462
  %22 = load i32, i32* %x.addr.i, align 4, !dbg !13463
  %shr3.i = lshr i32 %22, 16, !dbg !13464
  %shl4.i = shl i32 %shr3.i, 8, !dbg !13465
  %and5.i = and i32 %shl4.i, 65280, !dbg !13466
  %23 = load i32, i32* %x.addr.i, align 4, !dbg !13467
  %shr6.i = lshr i32 %23, 16, !dbg !13468
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !13469
  %and8.i = and i32 %shr7.i, 255, !dbg !13470
  %or9.i = or i32 %and5.i, %and8.i, !dbg !13471
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !13472
  %24 = load i32, i32* %re_index, align 4, !dbg !13473
  %and = and i32 %24, 7, !dbg !13474
  %shl = shl i32 %or10.i, %and, !dbg !13475
  store i32 %shl, i32* %re_cache, align 4, !dbg !13476
  br label %do.body, !dbg !13477, !llvm.loop !13478

do.body:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %n, metadata !13479, metadata !2073), !dbg !13480
  call void @llvm.dbg.declare(metadata i32* %nb_bits, metadata !13481, metadata !2073), !dbg !13482
  call void @llvm.dbg.declare(metadata i32* %index5, metadata !13483, metadata !2073), !dbg !13484
  %25 = load i32, i32* %re_cache, align 4, !dbg !13485
  %call6 = call i32 @NEG_USR32(i32 %25, i8 signext 9), !dbg !13487
  store i32 %call6, i32* %index5, align 4, !dbg !13488
  %26 = load i32, i32* %index5, align 4, !dbg !13489
  %idxprom = zext i32 %26 to i64, !dbg !13490
  %27 = load i32, i32* %ac_index.addr, align 4, !dbg !13491
  %idxprom7 = sext i32 %27 to i64, !dbg !13490
  %28 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !13490
  %vlcs = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %28, i32 0, i32 8, !dbg !13492
  %arrayidx = getelementptr inbounds [3 x [4 x %struct.VLC]], [3 x [4 x %struct.VLC]]* %vlcs, i64 0, i64 2, !dbg !13490
  %arrayidx8 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* %arrayidx, i64 0, i64 %idxprom7, !dbg !13490
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx8, i32 0, i32 1, !dbg !13493
  %29 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !13493
  %arrayidx9 = getelementptr inbounds [2 x i16], [2 x i16]* %29, i64 %idxprom, !dbg !13490
  %arrayidx10 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx9, i64 0, i64 0, !dbg !13490
  %30 = load i16, i16* %arrayidx10, align 2, !dbg !13490
  %conv11 = sext i16 %30 to i32, !dbg !13490
  store i32 %conv11, i32* %code, align 4, !dbg !13494
  %31 = load i32, i32* %index5, align 4, !dbg !13495
  %idxprom12 = zext i32 %31 to i64, !dbg !13496
  %32 = load i32, i32* %ac_index.addr, align 4, !dbg !13497
  %idxprom13 = sext i32 %32 to i64, !dbg !13496
  %33 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !13496
  %vlcs14 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %33, i32 0, i32 8, !dbg !13498
  %arrayidx15 = getelementptr inbounds [3 x [4 x %struct.VLC]], [3 x [4 x %struct.VLC]]* %vlcs14, i64 0, i64 2, !dbg !13496
  %arrayidx16 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* %arrayidx15, i64 0, i64 %idxprom13, !dbg !13496
  %table17 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx16, i32 0, i32 1, !dbg !13499
  %34 = load [2 x i16]*, [2 x i16]** %table17, align 8, !dbg !13499
  %arrayidx18 = getelementptr inbounds [2 x i16], [2 x i16]* %34, i64 %idxprom12, !dbg !13496
  %arrayidx19 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx18, i64 0, i64 1, !dbg !13496
  %35 = load i16, i16* %arrayidx19, align 2, !dbg !13496
  %conv20 = sext i16 %35 to i32, !dbg !13496
  store i32 %conv20, i32* %n, align 4, !dbg !13500
  %36 = load i32, i32* %n, align 4, !dbg !13501
  %cmp21 = icmp slt i32 %36, 0, !dbg !13502
  br i1 %cmp21, label %if.then23, label %if.end, !dbg !13503

if.then23:                                        ; preds = %do.body
  %37 = load i32, i32* %re_size_plus8, align 4, !dbg !13504
  %38 = load i32, i32* %re_index, align 4, !dbg !13506
  %add = add i32 %38, 9, !dbg !13507
  %cmp24 = icmp ugt i32 %37, %add, !dbg !13508
  br i1 %cmp24, label %cond.true26, label %cond.false28, !dbg !13509

cond.true26:                                      ; preds = %if.then23
  %39 = load i32, i32* %re_index, align 4, !dbg !13510
  %add27 = add i32 %39, 9, !dbg !13512
  br label %cond.end29, !dbg !13513

cond.false28:                                     ; preds = %if.then23
  %40 = load i32, i32* %re_size_plus8, align 4, !dbg !13514
  br label %cond.end29, !dbg !13516

cond.end29:                                       ; preds = %cond.false28, %cond.true26
  %cond30 = phi i32 [ %add27, %cond.true26 ], [ %40, %cond.false28 ], !dbg !13517
  store i32 %cond30, i32* %re_index, align 4, !dbg !13518
  %41 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !13519
  %gb31 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %41, i32 0, i32 2, !dbg !13520
  %buffer32 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb31, i32 0, i32 0, !dbg !13521
  %42 = load i8*, i8** %buffer32, align 16, !dbg !13521
  %43 = load i32, i32* %re_index, align 4, !dbg !13522
  %shr33 = lshr i32 %43, 3, !dbg !13523
  %idx.ext34 = zext i32 %shr33 to i64, !dbg !13524
  %add.ptr35 = getelementptr inbounds i8, i8* %42, i64 %idx.ext34, !dbg !13524
  %44 = bitcast i8* %add.ptr35 to %union.unaligned_32*, !dbg !13525
  %l36 = bitcast %union.unaligned_32* %44 to i32*, !dbg !13525
  %45 = load i32, i32* %l36, align 1, !dbg !13525
  store i32 %45, i32* %x.addr.i336, align 4, !dbg !13526
  %46 = load i32, i32* %x.addr.i336, align 4, !dbg !13527
  %shl.i337 = shl i32 %46, 8, !dbg !13528
  %and.i338 = and i32 %shl.i337, 65280, !dbg !13529
  %47 = load i32, i32* %x.addr.i336, align 4, !dbg !13530
  %shr.i339 = lshr i32 %47, 8, !dbg !13531
  %and1.i340 = and i32 %shr.i339, 255, !dbg !13532
  %or.i341 = or i32 %and.i338, %and1.i340, !dbg !13533
  %shl2.i342 = shl i32 %or.i341, 16, !dbg !13534
  %48 = load i32, i32* %x.addr.i336, align 4, !dbg !13535
  %shr3.i343 = lshr i32 %48, 16, !dbg !13536
  %shl4.i344 = shl i32 %shr3.i343, 8, !dbg !13537
  %and5.i345 = and i32 %shl4.i344, 65280, !dbg !13538
  %49 = load i32, i32* %x.addr.i336, align 4, !dbg !13539
  %shr6.i346 = lshr i32 %49, 16, !dbg !13540
  %shr7.i347 = lshr i32 %shr6.i346, 8, !dbg !13541
  %and8.i348 = and i32 %shr7.i347, 255, !dbg !13542
  %or9.i349 = or i32 %and5.i345, %and8.i348, !dbg !13543
  %or10.i350 = or i32 %shl2.i342, %or9.i349, !dbg !13544
  %50 = load i32, i32* %re_index, align 4, !dbg !13545
  %and38 = and i32 %50, 7, !dbg !13546
  %shl39 = shl i32 %or10.i350, %and38, !dbg !13547
  store i32 %shl39, i32* %re_cache, align 4, !dbg !13548
  %51 = load i32, i32* %n, align 4, !dbg !13549
  %sub = sub nsw i32 0, %51, !dbg !13550
  store i32 %sub, i32* %nb_bits, align 4, !dbg !13551
  %52 = load i32, i32* %re_cache, align 4, !dbg !13552
  %53 = load i32, i32* %nb_bits, align 4, !dbg !13553
  %conv40 = trunc i32 %53 to i8, !dbg !13553
  %call41 = call i32 @NEG_USR32(i32 %52, i8 signext %conv40), !dbg !13554
  %54 = load i32, i32* %code, align 4, !dbg !13556
  %add42 = add i32 %call41, %54, !dbg !13557
  store i32 %add42, i32* %index5, align 4, !dbg !13558
  %55 = load i32, i32* %index5, align 4, !dbg !13559
  %idxprom43 = zext i32 %55 to i64, !dbg !13560
  %56 = load i32, i32* %ac_index.addr, align 4, !dbg !13561
  %idxprom44 = sext i32 %56 to i64, !dbg !13560
  %57 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !13560
  %vlcs45 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %57, i32 0, i32 8, !dbg !13562
  %arrayidx46 = getelementptr inbounds [3 x [4 x %struct.VLC]], [3 x [4 x %struct.VLC]]* %vlcs45, i64 0, i64 2, !dbg !13560
  %arrayidx47 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* %arrayidx46, i64 0, i64 %idxprom44, !dbg !13560
  %table48 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx47, i32 0, i32 1, !dbg !13563
  %58 = load [2 x i16]*, [2 x i16]** %table48, align 8, !dbg !13563
  %arrayidx49 = getelementptr inbounds [2 x i16], [2 x i16]* %58, i64 %idxprom43, !dbg !13560
  %arrayidx50 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx49, i64 0, i64 0, !dbg !13560
  %59 = load i16, i16* %arrayidx50, align 2, !dbg !13560
  %conv51 = sext i16 %59 to i32, !dbg !13560
  store i32 %conv51, i32* %code, align 4, !dbg !13564
  %60 = load i32, i32* %index5, align 4, !dbg !13565
  %idxprom52 = zext i32 %60 to i64, !dbg !13566
  %61 = load i32, i32* %ac_index.addr, align 4, !dbg !13567
  %idxprom53 = sext i32 %61 to i64, !dbg !13566
  %62 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !13566
  %vlcs54 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %62, i32 0, i32 8, !dbg !13568
  %arrayidx55 = getelementptr inbounds [3 x [4 x %struct.VLC]], [3 x [4 x %struct.VLC]]* %vlcs54, i64 0, i64 2, !dbg !13566
  %arrayidx56 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* %arrayidx55, i64 0, i64 %idxprom53, !dbg !13566
  %table57 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx56, i32 0, i32 1, !dbg !13569
  %63 = load [2 x i16]*, [2 x i16]** %table57, align 8, !dbg !13569
  %arrayidx58 = getelementptr inbounds [2 x i16], [2 x i16]* %63, i64 %idxprom52, !dbg !13566
  %arrayidx59 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx58, i64 0, i64 1, !dbg !13566
  %64 = load i16, i16* %arrayidx59, align 2, !dbg !13566
  %conv60 = sext i16 %64 to i32, !dbg !13566
  store i32 %conv60, i32* %n, align 4, !dbg !13570
  br label %if.end, !dbg !13571

if.end:                                           ; preds = %cond.end29, %do.body
  br label %do.body61, !dbg !13572, !llvm.loop !13574

do.body61:                                        ; preds = %if.end
  %65 = load i32, i32* %n, align 4, !dbg !13576
  %66 = load i32, i32* %re_cache, align 4, !dbg !13579
  %shl62 = shl i32 %66, %65, !dbg !13579
  store i32 %shl62, i32* %re_cache, align 4, !dbg !13579
  %67 = load i32, i32* %re_size_plus8, align 4, !dbg !13580
  %68 = load i32, i32* %re_index, align 4, !dbg !13581
  %69 = load i32, i32* %n, align 4, !dbg !13582
  %add63 = add i32 %68, %69, !dbg !13583
  %cmp64 = icmp ugt i32 %67, %add63, !dbg !13584
  br i1 %cmp64, label %cond.true66, label %cond.false68, !dbg !13585

cond.true66:                                      ; preds = %do.body61
  %70 = load i32, i32* %re_index, align 4, !dbg !13586
  %71 = load i32, i32* %n, align 4, !dbg !13588
  %add67 = add i32 %70, %71, !dbg !13589
  br label %cond.end69, !dbg !13590

cond.false68:                                     ; preds = %do.body61
  %72 = load i32, i32* %re_size_plus8, align 4, !dbg !13591
  br label %cond.end69, !dbg !13593

cond.end69:                                       ; preds = %cond.false68, %cond.true66
  %cond70 = phi i32 [ %add67, %cond.true66 ], [ %72, %cond.false68 ], !dbg !13594
  store i32 %cond70, i32* %re_index, align 4, !dbg !13596
  br label %do.end, !dbg !13597

do.end:                                           ; preds = %cond.end69
  br label %do.end71, !dbg !13598

do.end71:                                         ; preds = %do.end
  %73 = load i32, i32* %code, align 4, !dbg !13600
  %and72 = and i32 %73, 15, !dbg !13601
  %tobool73 = icmp ne i32 %and72, 0, !dbg !13601
  br i1 %tobool73, label %if.then74, label %if.else177, !dbg !13602

if.then74:                                        ; preds = %do.end71
  %74 = load i32, i32* %code, align 4, !dbg !13603
  %shr75 = lshr i32 %74, 4, !dbg !13604
  store i32 %shr75, i32* %run, align 4, !dbg !13605
  %75 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !13606
  %gb76 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %75, i32 0, i32 2, !dbg !13607
  %buffer77 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb76, i32 0, i32 0, !dbg !13608
  %76 = load i8*, i8** %buffer77, align 16, !dbg !13608
  %77 = load i32, i32* %re_index, align 4, !dbg !13609
  %shr78 = lshr i32 %77, 3, !dbg !13610
  %idx.ext79 = zext i32 %shr78 to i64, !dbg !13611
  %add.ptr80 = getelementptr inbounds i8, i8* %76, i64 %idx.ext79, !dbg !13611
  %78 = bitcast i8* %add.ptr80 to %union.unaligned_32*, !dbg !13612
  %l81 = bitcast %union.unaligned_32* %78 to i32*, !dbg !13612
  %79 = load i32, i32* %l81, align 1, !dbg !13612
  store i32 %79, i32* %x.addr.i366, align 4, !dbg !13613
  %80 = load i32, i32* %x.addr.i366, align 4, !dbg !13614
  %shl.i367 = shl i32 %80, 8, !dbg !13615
  %and.i368 = and i32 %shl.i367, 65280, !dbg !13616
  %81 = load i32, i32* %x.addr.i366, align 4, !dbg !13617
  %shr.i369 = lshr i32 %81, 8, !dbg !13618
  %and1.i370 = and i32 %shr.i369, 255, !dbg !13619
  %or.i371 = or i32 %and.i368, %and1.i370, !dbg !13620
  %shl2.i372 = shl i32 %or.i371, 16, !dbg !13621
  %82 = load i32, i32* %x.addr.i366, align 4, !dbg !13622
  %shr3.i373 = lshr i32 %82, 16, !dbg !13623
  %shl4.i374 = shl i32 %shr3.i373, 8, !dbg !13624
  %and5.i375 = and i32 %shl4.i374, 65280, !dbg !13625
  %83 = load i32, i32* %x.addr.i366, align 4, !dbg !13626
  %shr6.i376 = lshr i32 %83, 16, !dbg !13627
  %shr7.i377 = lshr i32 %shr6.i376, 8, !dbg !13628
  %and8.i378 = and i32 %shr7.i377, 255, !dbg !13629
  %or9.i379 = or i32 %and5.i375, %and8.i378, !dbg !13630
  %or10.i380 = or i32 %shl2.i372, %or9.i379, !dbg !13631
  %84 = load i32, i32* %re_index, align 4, !dbg !13632
  %and83 = and i32 %84, 7, !dbg !13633
  %shl84 = shl i32 %or10.i380, %and83, !dbg !13634
  store i32 %shl84, i32* %re_cache, align 4, !dbg !13635
  %85 = load i32, i32* %re_cache, align 4, !dbg !13636
  %call85 = call i32 @NEG_USR32(i32 %85, i8 signext 1), !dbg !13637
  store i32 %call85, i32* %val, align 4, !dbg !13638
  %86 = load i32, i32* %re_size_plus8, align 4, !dbg !13639
  %87 = load i32, i32* %re_index, align 4, !dbg !13640
  %add86 = add i32 %87, 1, !dbg !13641
  %cmp87 = icmp ugt i32 %86, %add86, !dbg !13642
  br i1 %cmp87, label %cond.true89, label %cond.false91, !dbg !13643

cond.true89:                                      ; preds = %if.then74
  %88 = load i32, i32* %re_index, align 4, !dbg !13644
  %add90 = add i32 %88, 1, !dbg !13646
  br label %cond.end92, !dbg !13647

cond.false91:                                     ; preds = %if.then74
  %89 = load i32, i32* %re_size_plus8, align 4, !dbg !13648
  br label %cond.end92, !dbg !13650

cond.end92:                                       ; preds = %cond.false91, %cond.true89
  %cond93 = phi i32 [ %add90, %cond.true89 ], [ %89, %cond.false91 ], !dbg !13651
  store i32 %cond93, i32* %re_index, align 4, !dbg !13653
  br label %for.cond94, !dbg !13654

for.cond94:                                       ; preds = %for.inc, %cond.end92
  %90 = load i32, i32* %i, align 4, !dbg !13655
  %91 = load i32, i32* %last, align 4, !dbg !13658
  %cmp95 = icmp sgt i32 %90, %91, !dbg !13659
  br i1 %cmp95, label %if.then97, label %if.end103, !dbg !13655

if.then97:                                        ; preds = %for.cond94
  %92 = load i32, i32* %run, align 4, !dbg !13660
  %93 = load i32, i32* %i, align 4, !dbg !13663
  %add98 = add nsw i32 %93, %92, !dbg !13663
  store i32 %add98, i32* %i, align 4, !dbg !13663
  %94 = load i32, i32* %i, align 4, !dbg !13664
  %95 = load i32, i32* %se.addr, align 4, !dbg !13665
  %cmp99 = icmp sgt i32 %94, %95, !dbg !13666
  br i1 %cmp99, label %if.then101, label %if.end102, !dbg !13664

if.then101:                                       ; preds = %if.then97
  %96 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !13667
  %avctx = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %96, i32 0, i32 1, !dbg !13671
  %97 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !13671
  %98 = bitcast %struct.AVCodecContext* %97 to i8*, !dbg !13667
  %99 = load i32, i32* %i, align 4, !dbg !13672
  call void (i8*, i32, i8*, ...) @av_log(i8* %98, i32 16, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.88, i32 0, i32 0), i32 %99), !dbg !13673
  store i32 -1, i32* %retval, align 4, !dbg !13674
  br label %return, !dbg !13674

if.end102:                                        ; preds = %if.then97
  br label %for.end, !dbg !13675

if.end103:                                        ; preds = %for.cond94
  %100 = load i32, i32* %i, align 4, !dbg !13677
  %idxprom104 = sext i32 %100 to i64, !dbg !13679
  %101 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !13679
  %scantable = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %101, i32 0, i32 63, !dbg !13680
  %permutated = getelementptr inbounds %struct.ScanTable, %struct.ScanTable* %scantable, i32 0, i32 1, !dbg !13681
  %arrayidx105 = getelementptr inbounds [64 x i8], [64 x i8]* %permutated, i64 0, i64 %idxprom104, !dbg !13679
  %102 = load i8, i8* %arrayidx105, align 1, !dbg !13679
  %conv106 = zext i8 %102 to i32, !dbg !13679
  store i32 %conv106, i32* %j, align 4, !dbg !13682
  %103 = load i32, i32* %j, align 4, !dbg !13683
  %idxprom107 = sext i32 %103 to i64, !dbg !13684
  %104 = load i16*, i16** %block.addr, align 8, !dbg !13684
  %arrayidx108 = getelementptr inbounds i16, i16* %104, i64 %idxprom107, !dbg !13684
  %105 = load i16, i16* %arrayidx108, align 2, !dbg !13684
  %tobool109 = icmp ne i16 %105, 0, !dbg !13684
  br i1 %tobool109, label %if.then110, label %if.else143, !dbg !13684

if.then110:                                       ; preds = %if.end103
  %106 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !13685
  %gb111 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %106, i32 0, i32 2, !dbg !13686
  %buffer112 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb111, i32 0, i32 0, !dbg !13687
  %107 = load i8*, i8** %buffer112, align 16, !dbg !13687
  %108 = load i32, i32* %re_index, align 4, !dbg !13688
  %shr113 = lshr i32 %108, 3, !dbg !13689
  %idx.ext114 = zext i32 %shr113 to i64, !dbg !13690
  %add.ptr115 = getelementptr inbounds i8, i8* %107, i64 %idx.ext114, !dbg !13690
  %109 = bitcast i8* %add.ptr115 to %union.unaligned_32*, !dbg !13691
  %l116 = bitcast %union.unaligned_32* %109 to i32*, !dbg !13691
  %110 = load i32, i32* %l116, align 1, !dbg !13691
  store i32 %110, i32* %x.addr.i396, align 4, !dbg !13692
  %111 = load i32, i32* %x.addr.i396, align 4, !dbg !13693
  %shl.i397 = shl i32 %111, 8, !dbg !13694
  %and.i398 = and i32 %shl.i397, 65280, !dbg !13695
  %112 = load i32, i32* %x.addr.i396, align 4, !dbg !13696
  %shr.i399 = lshr i32 %112, 8, !dbg !13697
  %and1.i400 = and i32 %shr.i399, 255, !dbg !13698
  %or.i401 = or i32 %and.i398, %and1.i400, !dbg !13699
  %shl2.i402 = shl i32 %or.i401, 16, !dbg !13700
  %113 = load i32, i32* %x.addr.i396, align 4, !dbg !13701
  %shr3.i403 = lshr i32 %113, 16, !dbg !13702
  %shl4.i404 = shl i32 %shr3.i403, 8, !dbg !13703
  %and5.i405 = and i32 %shl4.i404, 65280, !dbg !13704
  %114 = load i32, i32* %x.addr.i396, align 4, !dbg !13705
  %shr6.i406 = lshr i32 %114, 16, !dbg !13706
  %shr7.i407 = lshr i32 %shr6.i406, 8, !dbg !13707
  %and8.i408 = and i32 %shr7.i407, 255, !dbg !13708
  %or9.i409 = or i32 %and5.i405, %and8.i408, !dbg !13709
  %or10.i410 = or i32 %shl2.i402, %or9.i409, !dbg !13710
  %115 = load i32, i32* %re_index, align 4, !dbg !13711
  %and118 = and i32 %115, 7, !dbg !13712
  %shl119 = shl i32 %or10.i410, %and118, !dbg !13713
  store i32 %shl119, i32* %re_cache, align 4, !dbg !13714
  %116 = load i32, i32* %j, align 4, !dbg !13715
  %idxprom120 = sext i32 %116 to i64, !dbg !13716
  %117 = load i16*, i16** %block.addr, align 8, !dbg !13716
  %arrayidx121 = getelementptr inbounds i16, i16* %117, i64 %idxprom120, !dbg !13716
  %118 = load i16, i16* %arrayidx121, align 2, !dbg !13716
  %conv122 = sext i16 %118 to i32, !dbg !13716
  %shr123 = ashr i32 %conv122, 15, !dbg !13717
  store i32 %shr123, i32* %sign, align 4, !dbg !13718
  %119 = load i32, i32* %re_cache, align 4, !dbg !13719
  %call124 = call i32 @NEG_USR32(i32 %119, i8 signext 1), !dbg !13720
  %120 = load i32, i32* %i, align 4, !dbg !13722
  %idxprom125 = sext i32 %120 to i64, !dbg !13723
  %121 = load i16*, i16** %quant_matrix.addr, align 8, !dbg !13723
  %arrayidx126 = getelementptr inbounds i16, i16* %121, i64 %idxprom125, !dbg !13723
  %122 = load i16, i16* %arrayidx126, align 2, !dbg !13723
  %conv127 = zext i16 %122 to i32, !dbg !13723
  %123 = load i32, i32* %sign, align 4, !dbg !13724
  %xor = xor i32 %conv127, %123, !dbg !13725
  %124 = load i32, i32* %sign, align 4, !dbg !13726
  %sub128 = sub nsw i32 %xor, %124, !dbg !13727
  %mul = mul i32 %call124, %sub128, !dbg !13728
  %125 = load i32, i32* %Al.addr, align 4, !dbg !13729
  %shl129 = shl i32 %mul, %125, !dbg !13730
  %126 = load i32, i32* %j, align 4, !dbg !13731
  %idxprom130 = sext i32 %126 to i64, !dbg !13732
  %127 = load i16*, i16** %block.addr, align 8, !dbg !13732
  %arrayidx131 = getelementptr inbounds i16, i16* %127, i64 %idxprom130, !dbg !13732
  %128 = load i16, i16* %arrayidx131, align 2, !dbg !13733
  %conv132 = sext i16 %128 to i32, !dbg !13733
  %add133 = add i32 %conv132, %shl129, !dbg !13733
  %conv134 = trunc i32 %add133 to i16, !dbg !13733
  store i16 %conv134, i16* %arrayidx131, align 2, !dbg !13733
  %129 = load i32, i32* %re_size_plus8, align 4, !dbg !13734
  %130 = load i32, i32* %re_index, align 4, !dbg !13735
  %add135 = add i32 %130, 1, !dbg !13736
  %cmp136 = icmp ugt i32 %129, %add135, !dbg !13737
  br i1 %cmp136, label %cond.true138, label %cond.false140, !dbg !13738

cond.true138:                                     ; preds = %if.then110
  %131 = load i32, i32* %re_index, align 4, !dbg !13739
  %add139 = add i32 %131, 1, !dbg !13741
  br label %cond.end141, !dbg !13742

cond.false140:                                    ; preds = %if.then110
  %132 = load i32, i32* %re_size_plus8, align 4, !dbg !13743
  br label %cond.end141, !dbg !13745

cond.end141:                                      ; preds = %cond.false140, %cond.true138
  %cond142 = phi i32 [ %add139, %cond.true138 ], [ %132, %cond.false140 ], !dbg !13746
  store i32 %cond142, i32* %re_index, align 4, !dbg !13748
  br label %if.end149, !dbg !13749

if.else143:                                       ; preds = %if.end103
  %133 = load i32, i32* %run, align 4, !dbg !13750
  %dec144 = add nsw i32 %133, -1, !dbg !13750
  store i32 %dec144, i32* %run, align 4, !dbg !13750
  %cmp145 = icmp eq i32 %133, 0, !dbg !13753
  br i1 %cmp145, label %if.then147, label %if.end148, !dbg !13754

if.then147:                                       ; preds = %if.else143
  br label %for.end, !dbg !13755

if.end148:                                        ; preds = %if.else143
  br label %if.end149

if.end149:                                        ; preds = %if.end148, %cond.end141
  br label %for.inc, !dbg !13757

for.inc:                                          ; preds = %if.end149
  %134 = load i32, i32* %i, align 4, !dbg !13759
  %inc = add nsw i32 %134, 1, !dbg !13759
  store i32 %inc, i32* %i, align 4, !dbg !13759
  br label %for.cond94, !dbg !13761, !llvm.loop !13762

for.end:                                          ; preds = %if.then147, %if.end102
  %135 = load i32, i32* %i, align 4, !dbg !13763
  %idxprom150 = sext i32 %135 to i64, !dbg !13764
  %136 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !13764
  %scantable151 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %136, i32 0, i32 63, !dbg !13765
  %permutated152 = getelementptr inbounds %struct.ScanTable, %struct.ScanTable* %scantable151, i32 0, i32 1, !dbg !13766
  %arrayidx153 = getelementptr inbounds [64 x i8], [64 x i8]* %permutated152, i64 0, i64 %idxprom150, !dbg !13764
  %137 = load i8, i8* %arrayidx153, align 1, !dbg !13764
  %conv154 = zext i8 %137 to i32, !dbg !13764
  store i32 %conv154, i32* %j, align 4, !dbg !13767
  %138 = load i32, i32* %val, align 4, !dbg !13768
  %dec155 = add nsw i32 %138, -1, !dbg !13768
  store i32 %dec155, i32* %val, align 4, !dbg !13768
  %139 = load i32, i32* %i, align 4, !dbg !13769
  %idxprom156 = sext i32 %139 to i64, !dbg !13770
  %140 = load i16*, i16** %quant_matrix.addr, align 8, !dbg !13770
  %arrayidx157 = getelementptr inbounds i16, i16* %140, i64 %idxprom156, !dbg !13770
  %141 = load i16, i16* %arrayidx157, align 2, !dbg !13770
  %conv158 = zext i16 %141 to i32, !dbg !13770
  %142 = load i32, i32* %Al.addr, align 4, !dbg !13771
  %shl159 = shl i32 %conv158, %142, !dbg !13772
  %143 = load i32, i32* %val, align 4, !dbg !13773
  %xor160 = xor i32 %shl159, %143, !dbg !13774
  %144 = load i32, i32* %val, align 4, !dbg !13775
  %sub161 = sub nsw i32 %xor160, %144, !dbg !13776
  %conv162 = trunc i32 %sub161 to i16, !dbg !13777
  %145 = load i32, i32* %j, align 4, !dbg !13778
  %idxprom163 = sext i32 %145 to i64, !dbg !13779
  %146 = load i16*, i16** %block.addr, align 8, !dbg !13779
  %arrayidx164 = getelementptr inbounds i16, i16* %146, i64 %idxprom163, !dbg !13779
  store i16 %conv162, i16* %arrayidx164, align 2, !dbg !13780
  %147 = load i32, i32* %i, align 4, !dbg !13781
  %148 = load i32, i32* %se.addr, align 4, !dbg !13783
  %cmp165 = icmp eq i32 %147, %148, !dbg !13784
  br i1 %cmp165, label %if.then167, label %if.end176, !dbg !13785

if.then167:                                       ; preds = %for.end
  %149 = load i32, i32* %i, align 4, !dbg !13786
  %150 = load i8*, i8** %last_nnz.addr, align 8, !dbg !13789
  %151 = load i8, i8* %150, align 1, !dbg !13790
  %conv168 = zext i8 %151 to i32, !dbg !13790
  %cmp169 = icmp sgt i32 %149, %conv168, !dbg !13791
  br i1 %cmp169, label %if.then171, label %if.end173, !dbg !13792

if.then171:                                       ; preds = %if.then167
  %152 = load i32, i32* %i, align 4, !dbg !13793
  %conv172 = trunc i32 %152 to i8, !dbg !13793
  %153 = load i8*, i8** %last_nnz.addr, align 8, !dbg !13794
  store i8 %conv172, i8* %153, align 1, !dbg !13795
  br label %if.end173, !dbg !13796

if.end173:                                        ; preds = %if.then171, %if.then167
  %154 = load i32, i32* %re_index, align 4, !dbg !13797
  %155 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !13798
  %gb174 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %155, i32 0, i32 2, !dbg !13799
  %index175 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb174, i32 0, i32 2, !dbg !13800
  store i32 %154, i32* %index175, align 16, !dbg !13801
  store i32 0, i32* %retval, align 4, !dbg !13802
  br label %return, !dbg !13802

if.end176:                                        ; preds = %for.end
  br label %if.end273, !dbg !13803

if.else177:                                       ; preds = %do.end71
  %156 = load i32, i32* %code, align 4, !dbg !13804
  %shr178 = lshr i32 %156, 4, !dbg !13805
  store i32 %shr178, i32* %run, align 4, !dbg !13806
  %157 = load i32, i32* %run, align 4, !dbg !13807
  %cmp179 = icmp eq i32 %157, 15, !dbg !13808
  br i1 %cmp179, label %if.then181, label %if.else246, !dbg !13809

if.then181:                                       ; preds = %if.else177
  br label %for.cond182, !dbg !13810

for.cond182:                                      ; preds = %for.inc243, %if.then181
  %158 = load i32, i32* %i, align 4, !dbg !13811
  %159 = load i32, i32* %last, align 4, !dbg !13814
  %cmp183 = icmp sgt i32 %158, %159, !dbg !13815
  br i1 %cmp183, label %if.then185, label %if.end192, !dbg !13811

if.then185:                                       ; preds = %for.cond182
  %160 = load i32, i32* %run, align 4, !dbg !13816
  %161 = load i32, i32* %i, align 4, !dbg !13819
  %add186 = add nsw i32 %161, %160, !dbg !13819
  store i32 %add186, i32* %i, align 4, !dbg !13819
  %162 = load i32, i32* %i, align 4, !dbg !13820
  %163 = load i32, i32* %se.addr, align 4, !dbg !13821
  %cmp187 = icmp sgt i32 %162, %163, !dbg !13822
  br i1 %cmp187, label %if.then189, label %if.end191, !dbg !13820

if.then189:                                       ; preds = %if.then185
  %164 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !13823
  %avctx190 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %164, i32 0, i32 1, !dbg !13827
  %165 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx190, align 8, !dbg !13827
  %166 = bitcast %struct.AVCodecContext* %165 to i8*, !dbg !13823
  %167 = load i32, i32* %i, align 4, !dbg !13828
  call void (i8*, i32, i8*, ...) @av_log(i8* %166, i32 16, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.88, i32 0, i32 0), i32 %167), !dbg !13829
  store i32 -1, i32* %retval, align 4, !dbg !13830
  br label %return, !dbg !13830

if.end191:                                        ; preds = %if.then185
  br label %for.end245, !dbg !13831

if.end192:                                        ; preds = %for.cond182
  %168 = load i32, i32* %i, align 4, !dbg !13833
  %idxprom193 = sext i32 %168 to i64, !dbg !13835
  %169 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !13835
  %scantable194 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %169, i32 0, i32 63, !dbg !13836
  %permutated195 = getelementptr inbounds %struct.ScanTable, %struct.ScanTable* %scantable194, i32 0, i32 1, !dbg !13837
  %arrayidx196 = getelementptr inbounds [64 x i8], [64 x i8]* %permutated195, i64 0, i64 %idxprom193, !dbg !13835
  %170 = load i8, i8* %arrayidx196, align 1, !dbg !13835
  %conv197 = zext i8 %170 to i32, !dbg !13835
  store i32 %conv197, i32* %j, align 4, !dbg !13838
  %171 = load i32, i32* %j, align 4, !dbg !13839
  %idxprom198 = sext i32 %171 to i64, !dbg !13840
  %172 = load i16*, i16** %block.addr, align 8, !dbg !13840
  %arrayidx199 = getelementptr inbounds i16, i16* %172, i64 %idxprom198, !dbg !13840
  %173 = load i16, i16* %arrayidx199, align 2, !dbg !13840
  %tobool200 = icmp ne i16 %173, 0, !dbg !13840
  br i1 %tobool200, label %if.then201, label %if.else236, !dbg !13840

if.then201:                                       ; preds = %if.end192
  %174 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !13841
  %gb202 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %174, i32 0, i32 2, !dbg !13842
  %buffer203 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb202, i32 0, i32 0, !dbg !13843
  %175 = load i8*, i8** %buffer203, align 16, !dbg !13843
  %176 = load i32, i32* %re_index, align 4, !dbg !13844
  %shr204 = lshr i32 %176, 3, !dbg !13845
  %idx.ext205 = zext i32 %shr204 to i64, !dbg !13846
  %add.ptr206 = getelementptr inbounds i8, i8* %175, i64 %idx.ext205, !dbg !13846
  %177 = bitcast i8* %add.ptr206 to %union.unaligned_32*, !dbg !13847
  %l207 = bitcast %union.unaligned_32* %177 to i32*, !dbg !13847
  %178 = load i32, i32* %l207, align 1, !dbg !13847
  store i32 %178, i32* %x.addr.i411, align 4, !dbg !13848
  %179 = load i32, i32* %x.addr.i411, align 4, !dbg !13849
  %shl.i412 = shl i32 %179, 8, !dbg !13850
  %and.i413 = and i32 %shl.i412, 65280, !dbg !13851
  %180 = load i32, i32* %x.addr.i411, align 4, !dbg !13852
  %shr.i414 = lshr i32 %180, 8, !dbg !13853
  %and1.i415 = and i32 %shr.i414, 255, !dbg !13854
  %or.i416 = or i32 %and.i413, %and1.i415, !dbg !13855
  %shl2.i417 = shl i32 %or.i416, 16, !dbg !13856
  %181 = load i32, i32* %x.addr.i411, align 4, !dbg !13857
  %shr3.i418 = lshr i32 %181, 16, !dbg !13858
  %shl4.i419 = shl i32 %shr3.i418, 8, !dbg !13859
  %and5.i420 = and i32 %shl4.i419, 65280, !dbg !13860
  %182 = load i32, i32* %x.addr.i411, align 4, !dbg !13861
  %shr6.i421 = lshr i32 %182, 16, !dbg !13862
  %shr7.i422 = lshr i32 %shr6.i421, 8, !dbg !13863
  %and8.i423 = and i32 %shr7.i422, 255, !dbg !13864
  %or9.i424 = or i32 %and5.i420, %and8.i423, !dbg !13865
  %or10.i425 = or i32 %shl2.i417, %or9.i424, !dbg !13866
  %183 = load i32, i32* %re_index, align 4, !dbg !13867
  %and209 = and i32 %183, 7, !dbg !13868
  %shl210 = shl i32 %or10.i425, %and209, !dbg !13869
  store i32 %shl210, i32* %re_cache, align 4, !dbg !13870
  %184 = load i32, i32* %j, align 4, !dbg !13871
  %idxprom211 = sext i32 %184 to i64, !dbg !13872
  %185 = load i16*, i16** %block.addr, align 8, !dbg !13872
  %arrayidx212 = getelementptr inbounds i16, i16* %185, i64 %idxprom211, !dbg !13872
  %186 = load i16, i16* %arrayidx212, align 2, !dbg !13872
  %conv213 = sext i16 %186 to i32, !dbg !13872
  %shr214 = ashr i32 %conv213, 15, !dbg !13873
  store i32 %shr214, i32* %sign, align 4, !dbg !13874
  %187 = load i32, i32* %re_cache, align 4, !dbg !13875
  %call215 = call i32 @NEG_USR32(i32 %187, i8 signext 1), !dbg !13876
  %188 = load i32, i32* %i, align 4, !dbg !13878
  %idxprom216 = sext i32 %188 to i64, !dbg !13879
  %189 = load i16*, i16** %quant_matrix.addr, align 8, !dbg !13879
  %arrayidx217 = getelementptr inbounds i16, i16* %189, i64 %idxprom216, !dbg !13879
  %190 = load i16, i16* %arrayidx217, align 2, !dbg !13879
  %conv218 = zext i16 %190 to i32, !dbg !13879
  %191 = load i32, i32* %sign, align 4, !dbg !13880
  %xor219 = xor i32 %conv218, %191, !dbg !13881
  %192 = load i32, i32* %sign, align 4, !dbg !13882
  %sub220 = sub nsw i32 %xor219, %192, !dbg !13883
  %mul221 = mul i32 %call215, %sub220, !dbg !13884
  %193 = load i32, i32* %Al.addr, align 4, !dbg !13885
  %shl222 = shl i32 %mul221, %193, !dbg !13886
  %194 = load i32, i32* %j, align 4, !dbg !13887
  %idxprom223 = sext i32 %194 to i64, !dbg !13888
  %195 = load i16*, i16** %block.addr, align 8, !dbg !13888
  %arrayidx224 = getelementptr inbounds i16, i16* %195, i64 %idxprom223, !dbg !13888
  %196 = load i16, i16* %arrayidx224, align 2, !dbg !13889
  %conv225 = sext i16 %196 to i32, !dbg !13889
  %add226 = add i32 %conv225, %shl222, !dbg !13889
  %conv227 = trunc i32 %add226 to i16, !dbg !13889
  store i16 %conv227, i16* %arrayidx224, align 2, !dbg !13889
  %197 = load i32, i32* %re_size_plus8, align 4, !dbg !13890
  %198 = load i32, i32* %re_index, align 4, !dbg !13891
  %add228 = add i32 %198, 1, !dbg !13892
  %cmp229 = icmp ugt i32 %197, %add228, !dbg !13893
  br i1 %cmp229, label %cond.true231, label %cond.false233, !dbg !13894

cond.true231:                                     ; preds = %if.then201
  %199 = load i32, i32* %re_index, align 4, !dbg !13895
  %add232 = add i32 %199, 1, !dbg !13897
  br label %cond.end234, !dbg !13898

cond.false233:                                    ; preds = %if.then201
  %200 = load i32, i32* %re_size_plus8, align 4, !dbg !13899
  br label %cond.end234, !dbg !13901

cond.end234:                                      ; preds = %cond.false233, %cond.true231
  %cond235 = phi i32 [ %add232, %cond.true231 ], [ %200, %cond.false233 ], !dbg !13902
  store i32 %cond235, i32* %re_index, align 4, !dbg !13904
  br label %if.end242, !dbg !13905

if.else236:                                       ; preds = %if.end192
  %201 = load i32, i32* %run, align 4, !dbg !13906
  %dec237 = add nsw i32 %201, -1, !dbg !13906
  store i32 %dec237, i32* %run, align 4, !dbg !13906
  %cmp238 = icmp eq i32 %201, 0, !dbg !13909
  br i1 %cmp238, label %if.then240, label %if.end241, !dbg !13910

if.then240:                                       ; preds = %if.else236
  br label %for.end245, !dbg !13911

if.end241:                                        ; preds = %if.else236
  br label %if.end242

if.end242:                                        ; preds = %if.end241, %cond.end234
  br label %for.inc243, !dbg !13913

for.inc243:                                       ; preds = %if.end242
  %202 = load i32, i32* %i, align 4, !dbg !13915
  %inc244 = add nsw i32 %202, 1, !dbg !13915
  store i32 %inc244, i32* %i, align 4, !dbg !13915
  br label %for.cond182, !dbg !13917, !llvm.loop !13918

for.end245:                                       ; preds = %if.then240, %if.end191
  br label %if.end272, !dbg !13919

if.else246:                                       ; preds = %if.else177
  %203 = load i32, i32* %run, align 4, !dbg !13920
  store i32 %203, i32* %val, align 4, !dbg !13921
  %204 = load i32, i32* %run, align 4, !dbg !13922
  %shl247 = shl i32 1, %204, !dbg !13923
  store i32 %shl247, i32* %run, align 4, !dbg !13924
  %205 = load i32, i32* %val, align 4, !dbg !13925
  %tobool248 = icmp ne i32 %205, 0, !dbg !13925
  br i1 %tobool248, label %if.then249, label %if.end270, !dbg !13926

if.then249:                                       ; preds = %if.else246
  %206 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !13927
  %gb250 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %206, i32 0, i32 2, !dbg !13928
  %buffer251 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb250, i32 0, i32 0, !dbg !13929
  %207 = load i8*, i8** %buffer251, align 16, !dbg !13929
  %208 = load i32, i32* %re_index, align 4, !dbg !13930
  %shr252 = lshr i32 %208, 3, !dbg !13931
  %idx.ext253 = zext i32 %shr252 to i64, !dbg !13932
  %add.ptr254 = getelementptr inbounds i8, i8* %207, i64 %idx.ext253, !dbg !13932
  %209 = bitcast i8* %add.ptr254 to %union.unaligned_32*, !dbg !13933
  %l255 = bitcast %union.unaligned_32* %209 to i32*, !dbg !13933
  %210 = load i32, i32* %l255, align 1, !dbg !13933
  store i32 %210, i32* %x.addr.i381, align 4, !dbg !13934
  %211 = load i32, i32* %x.addr.i381, align 4, !dbg !13935
  %shl.i382 = shl i32 %211, 8, !dbg !13936
  %and.i383 = and i32 %shl.i382, 65280, !dbg !13937
  %212 = load i32, i32* %x.addr.i381, align 4, !dbg !13938
  %shr.i384 = lshr i32 %212, 8, !dbg !13939
  %and1.i385 = and i32 %shr.i384, 255, !dbg !13940
  %or.i386 = or i32 %and.i383, %and1.i385, !dbg !13941
  %shl2.i387 = shl i32 %or.i386, 16, !dbg !13942
  %213 = load i32, i32* %x.addr.i381, align 4, !dbg !13943
  %shr3.i388 = lshr i32 %213, 16, !dbg !13944
  %shl4.i389 = shl i32 %shr3.i388, 8, !dbg !13945
  %and5.i390 = and i32 %shl4.i389, 65280, !dbg !13946
  %214 = load i32, i32* %x.addr.i381, align 4, !dbg !13947
  %shr6.i391 = lshr i32 %214, 16, !dbg !13948
  %shr7.i392 = lshr i32 %shr6.i391, 8, !dbg !13949
  %and8.i393 = and i32 %shr7.i392, 255, !dbg !13950
  %or9.i394 = or i32 %and5.i390, %and8.i393, !dbg !13951
  %or10.i395 = or i32 %shl2.i387, %or9.i394, !dbg !13952
  %215 = load i32, i32* %re_index, align 4, !dbg !13953
  %and257 = and i32 %215, 7, !dbg !13954
  %shl258 = shl i32 %or10.i395, %and257, !dbg !13955
  store i32 %shl258, i32* %re_cache, align 4, !dbg !13956
  %216 = load i32, i32* %re_cache, align 4, !dbg !13957
  %217 = load i32, i32* %val, align 4, !dbg !13958
  %conv259 = trunc i32 %217 to i8, !dbg !13958
  %call260 = call i32 @NEG_USR32(i32 %216, i8 signext %conv259), !dbg !13959
  %218 = load i32, i32* %run, align 4, !dbg !13960
  %add261 = add i32 %218, %call260, !dbg !13960
  store i32 %add261, i32* %run, align 4, !dbg !13960
  %219 = load i32, i32* %re_size_plus8, align 4, !dbg !13961
  %220 = load i32, i32* %re_index, align 4, !dbg !13962
  %221 = load i32, i32* %val, align 4, !dbg !13963
  %add262 = add i32 %220, %221, !dbg !13964
  %cmp263 = icmp ugt i32 %219, %add262, !dbg !13965
  br i1 %cmp263, label %cond.true265, label %cond.false267, !dbg !13966

cond.true265:                                     ; preds = %if.then249
  %222 = load i32, i32* %re_index, align 4, !dbg !13967
  %223 = load i32, i32* %val, align 4, !dbg !13969
  %add266 = add i32 %222, %223, !dbg !13970
  br label %cond.end268, !dbg !13971

cond.false267:                                    ; preds = %if.then249
  %224 = load i32, i32* %re_size_plus8, align 4, !dbg !13972
  br label %cond.end268, !dbg !13974

cond.end268:                                      ; preds = %cond.false267, %cond.true265
  %cond269 = phi i32 [ %add266, %cond.true265 ], [ %224, %cond.false267 ], !dbg !13975
  store i32 %cond269, i32* %re_index, align 4, !dbg !13977
  br label %if.end270, !dbg !13978

if.end270:                                        ; preds = %cond.end268, %if.else246
  %225 = load i32, i32* %run, align 4, !dbg !13979
  %sub271 = sub nsw i32 %225, 1, !dbg !13980
  %226 = load i32*, i32** %EOBRUN.addr, align 8, !dbg !13981
  store i32 %sub271, i32* %226, align 4, !dbg !13982
  br label %for.end276, !dbg !13983

if.end272:                                        ; preds = %for.end245
  br label %if.end273

if.end273:                                        ; preds = %if.end272, %if.end176
  br label %for.inc274, !dbg !13984

for.inc274:                                       ; preds = %if.end273
  %227 = load i32, i32* %i, align 4, !dbg !13985
  %inc275 = add nsw i32 %227, 1, !dbg !13985
  store i32 %inc275, i32* %i, align 4, !dbg !13985
  br label %for.cond, !dbg !13987, !llvm.loop !13988

for.end276:                                       ; preds = %if.end270
  %228 = load i32, i32* %i, align 4, !dbg !13989
  %229 = load i8*, i8** %last_nnz.addr, align 8, !dbg !13991
  %230 = load i8, i8* %229, align 1, !dbg !13992
  %conv277 = zext i8 %230 to i32, !dbg !13992
  %cmp278 = icmp sgt i32 %228, %conv277, !dbg !13993
  br i1 %cmp278, label %if.then280, label %if.end282, !dbg !13994

if.then280:                                       ; preds = %for.end276
  %231 = load i32, i32* %i, align 4, !dbg !13995
  %conv281 = trunc i32 %231 to i8, !dbg !13995
  %232 = load i8*, i8** %last_nnz.addr, align 8, !dbg !13996
  store i8 %conv281, i8* %232, align 1, !dbg !13997
  br label %if.end282, !dbg !13998

if.end282:                                        ; preds = %if.then280, %for.end276
  br label %if.end283

if.end283:                                        ; preds = %if.end282, %if.then
  br label %for.cond284, !dbg !13999

for.cond284:                                      ; preds = %for.inc331, %if.end283
  %233 = load i32, i32* %i, align 4, !dbg !14000
  %234 = load i32, i32* %last, align 4, !dbg !14002
  %cmp285 = icmp sle i32 %233, %234, !dbg !14003
  br i1 %cmp285, label %for.body, label %for.end333, !dbg !14004

for.body:                                         ; preds = %for.cond284
  %235 = load i32, i32* %i, align 4, !dbg !14005
  %idxprom287 = sext i32 %235 to i64, !dbg !14006
  %236 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14006
  %scantable288 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %236, i32 0, i32 63, !dbg !14007
  %permutated289 = getelementptr inbounds %struct.ScanTable, %struct.ScanTable* %scantable288, i32 0, i32 1, !dbg !14008
  %arrayidx290 = getelementptr inbounds [64 x i8], [64 x i8]* %permutated289, i64 0, i64 %idxprom287, !dbg !14006
  %237 = load i8, i8* %arrayidx290, align 1, !dbg !14006
  %conv291 = zext i8 %237 to i32, !dbg !14006
  store i32 %conv291, i32* %j, align 4, !dbg !14009
  %238 = load i32, i32* %j, align 4, !dbg !14010
  %idxprom292 = sext i32 %238 to i64, !dbg !14011
  %239 = load i16*, i16** %block.addr, align 8, !dbg !14011
  %arrayidx293 = getelementptr inbounds i16, i16* %239, i64 %idxprom292, !dbg !14011
  %240 = load i16, i16* %arrayidx293, align 2, !dbg !14011
  %tobool294 = icmp ne i16 %240, 0, !dbg !14011
  br i1 %tobool294, label %if.then295, label %if.end330, !dbg !14012

if.then295:                                       ; preds = %for.body
  %241 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14013
  %gb296 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %241, i32 0, i32 2, !dbg !14014
  %buffer297 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb296, i32 0, i32 0, !dbg !14015
  %242 = load i8*, i8** %buffer297, align 16, !dbg !14015
  %243 = load i32, i32* %re_index, align 4, !dbg !14016
  %shr298 = lshr i32 %243, 3, !dbg !14017
  %idx.ext299 = zext i32 %shr298 to i64, !dbg !14018
  %add.ptr300 = getelementptr inbounds i8, i8* %242, i64 %idx.ext299, !dbg !14018
  %244 = bitcast i8* %add.ptr300 to %union.unaligned_32*, !dbg !14019
  %l301 = bitcast %union.unaligned_32* %244 to i32*, !dbg !14019
  %245 = load i32, i32* %l301, align 1, !dbg !14019
  store i32 %245, i32* %x.addr.i351, align 4, !dbg !14020
  %246 = load i32, i32* %x.addr.i351, align 4, !dbg !14021
  %shl.i352 = shl i32 %246, 8, !dbg !14022
  %and.i353 = and i32 %shl.i352, 65280, !dbg !14023
  %247 = load i32, i32* %x.addr.i351, align 4, !dbg !14024
  %shr.i354 = lshr i32 %247, 8, !dbg !14025
  %and1.i355 = and i32 %shr.i354, 255, !dbg !14026
  %or.i356 = or i32 %and.i353, %and1.i355, !dbg !14027
  %shl2.i357 = shl i32 %or.i356, 16, !dbg !14028
  %248 = load i32, i32* %x.addr.i351, align 4, !dbg !14029
  %shr3.i358 = lshr i32 %248, 16, !dbg !14030
  %shl4.i359 = shl i32 %shr3.i358, 8, !dbg !14031
  %and5.i360 = and i32 %shl4.i359, 65280, !dbg !14032
  %249 = load i32, i32* %x.addr.i351, align 4, !dbg !14033
  %shr6.i361 = lshr i32 %249, 16, !dbg !14034
  %shr7.i362 = lshr i32 %shr6.i361, 8, !dbg !14035
  %and8.i363 = and i32 %shr7.i362, 255, !dbg !14036
  %or9.i364 = or i32 %and5.i360, %and8.i363, !dbg !14037
  %or10.i365 = or i32 %shl2.i357, %or9.i364, !dbg !14038
  %250 = load i32, i32* %re_index, align 4, !dbg !14039
  %and303 = and i32 %250, 7, !dbg !14040
  %shl304 = shl i32 %or10.i365, %and303, !dbg !14041
  store i32 %shl304, i32* %re_cache, align 4, !dbg !14042
  %251 = load i32, i32* %j, align 4, !dbg !14043
  %idxprom305 = sext i32 %251 to i64, !dbg !14044
  %252 = load i16*, i16** %block.addr, align 8, !dbg !14044
  %arrayidx306 = getelementptr inbounds i16, i16* %252, i64 %idxprom305, !dbg !14044
  %253 = load i16, i16* %arrayidx306, align 2, !dbg !14044
  %conv307 = sext i16 %253 to i32, !dbg !14044
  %shr308 = ashr i32 %conv307, 15, !dbg !14045
  store i32 %shr308, i32* %sign, align 4, !dbg !14046
  %254 = load i32, i32* %re_cache, align 4, !dbg !14047
  %call309 = call i32 @NEG_USR32(i32 %254, i8 signext 1), !dbg !14048
  %255 = load i32, i32* %i, align 4, !dbg !14050
  %idxprom310 = sext i32 %255 to i64, !dbg !14051
  %256 = load i16*, i16** %quant_matrix.addr, align 8, !dbg !14051
  %arrayidx311 = getelementptr inbounds i16, i16* %256, i64 %idxprom310, !dbg !14051
  %257 = load i16, i16* %arrayidx311, align 2, !dbg !14051
  %conv312 = zext i16 %257 to i32, !dbg !14051
  %258 = load i32, i32* %sign, align 4, !dbg !14052
  %xor313 = xor i32 %conv312, %258, !dbg !14053
  %259 = load i32, i32* %sign, align 4, !dbg !14054
  %sub314 = sub nsw i32 %xor313, %259, !dbg !14055
  %mul315 = mul i32 %call309, %sub314, !dbg !14056
  %260 = load i32, i32* %Al.addr, align 4, !dbg !14057
  %shl316 = shl i32 %mul315, %260, !dbg !14058
  %261 = load i32, i32* %j, align 4, !dbg !14059
  %idxprom317 = sext i32 %261 to i64, !dbg !14060
  %262 = load i16*, i16** %block.addr, align 8, !dbg !14060
  %arrayidx318 = getelementptr inbounds i16, i16* %262, i64 %idxprom317, !dbg !14060
  %263 = load i16, i16* %arrayidx318, align 2, !dbg !14061
  %conv319 = sext i16 %263 to i32, !dbg !14061
  %add320 = add i32 %conv319, %shl316, !dbg !14061
  %conv321 = trunc i32 %add320 to i16, !dbg !14061
  store i16 %conv321, i16* %arrayidx318, align 2, !dbg !14061
  %264 = load i32, i32* %re_size_plus8, align 4, !dbg !14062
  %265 = load i32, i32* %re_index, align 4, !dbg !14063
  %add322 = add i32 %265, 1, !dbg !14064
  %cmp323 = icmp ugt i32 %264, %add322, !dbg !14065
  br i1 %cmp323, label %cond.true325, label %cond.false327, !dbg !14066

cond.true325:                                     ; preds = %if.then295
  %266 = load i32, i32* %re_index, align 4, !dbg !14067
  %add326 = add i32 %266, 1, !dbg !14069
  br label %cond.end328, !dbg !14070

cond.false327:                                    ; preds = %if.then295
  %267 = load i32, i32* %re_size_plus8, align 4, !dbg !14071
  br label %cond.end328, !dbg !14073

cond.end328:                                      ; preds = %cond.false327, %cond.true325
  %cond329 = phi i32 [ %add326, %cond.true325 ], [ %267, %cond.false327 ], !dbg !14074
  store i32 %cond329, i32* %re_index, align 4, !dbg !14076
  br label %if.end330, !dbg !14077

if.end330:                                        ; preds = %cond.end328, %for.body
  br label %for.inc331, !dbg !14078

for.inc331:                                       ; preds = %if.end330
  %268 = load i32, i32* %i, align 4, !dbg !14079
  %inc332 = add nsw i32 %268, 1, !dbg !14079
  store i32 %inc332, i32* %i, align 4, !dbg !14079
  br label %for.cond284, !dbg !14081, !llvm.loop !14082

for.end333:                                       ; preds = %for.cond284
  %269 = load i32, i32* %re_index, align 4, !dbg !14083
  %270 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14084
  %gb334 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %270, i32 0, i32 2, !dbg !14085
  %index335 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb334, i32 0, i32 2, !dbg !14086
  store i32 %269, i32* %index335, align 16, !dbg !14087
  store i32 0, i32* %retval, align 4, !dbg !14088
  br label %return, !dbg !14088

return:                                           ; preds = %for.end333, %if.then189, %if.end173, %if.then101
  %271 = load i32, i32* %retval, align 4, !dbg !14089
  ret i32 %271, !dbg !14089
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_block_progressive(%struct.MJpegDecodeContext* %s, i16* %block, i8* %last_nnz, i32 %ac_index, i16* %quant_matrix, i32 %ss, i32 %se, i32 %Al, i32* %EOBRUN) #3 !dbg !14090 {
entry:
  %x.addr.i202 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i202, metadata !2864, metadata !2073), !dbg !14091
  %x.addr.i187 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i187, metadata !2864, metadata !2073), !dbg !14100
  %x.addr.i172 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i172, metadata !2864, metadata !2073), !dbg !14107
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2864, metadata !2073), !dbg !14113
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.MJpegDecodeContext*, align 8
  %block.addr = alloca i16*, align 8
  %last_nnz.addr = alloca i8*, align 8
  %ac_index.addr = alloca i32, align 4
  %quant_matrix.addr = alloca i16*, align 8
  %ss.addr = alloca i32, align 4
  %se.addr = alloca i32, align 4
  %Al.addr = alloca i32, align 4
  %EOBRUN.addr = alloca i32*, align 8
  %code = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %val = alloca i32, align 4
  %run = alloca i32, align 4
  %level = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  %n = alloca i32, align 4
  %nb_bits = alloca i32, align 4
  %index3 = alloca i32, align 4
  %cache = alloca i32, align 4
  %sign = alloca i32, align 4
  store %struct.MJpegDecodeContext* %s, %struct.MJpegDecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MJpegDecodeContext** %s.addr, metadata !14115, metadata !2073), !dbg !14116
  store i16* %block, i16** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %block.addr, metadata !14117, metadata !2073), !dbg !14118
  store i8* %last_nnz, i8** %last_nnz.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %last_nnz.addr, metadata !14119, metadata !2073), !dbg !14120
  store i32 %ac_index, i32* %ac_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ac_index.addr, metadata !14121, metadata !2073), !dbg !14122
  store i16* %quant_matrix, i16** %quant_matrix.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %quant_matrix.addr, metadata !14123, metadata !2073), !dbg !14124
  store i32 %ss, i32* %ss.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ss.addr, metadata !14125, metadata !2073), !dbg !14126
  store i32 %se, i32* %se.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %se.addr, metadata !14127, metadata !2073), !dbg !14128
  store i32 %Al, i32* %Al.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %Al.addr, metadata !14129, metadata !2073), !dbg !14130
  store i32* %EOBRUN, i32** %EOBRUN.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %EOBRUN.addr, metadata !14131, metadata !2073), !dbg !14132
  call void @llvm.dbg.declare(metadata i32* %code, metadata !14133, metadata !2073), !dbg !14134
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14135, metadata !2073), !dbg !14136
  call void @llvm.dbg.declare(metadata i32* %j, metadata !14137, metadata !2073), !dbg !14138
  call void @llvm.dbg.declare(metadata i32* %val, metadata !14139, metadata !2073), !dbg !14140
  call void @llvm.dbg.declare(metadata i32* %run, metadata !14141, metadata !2073), !dbg !14142
  call void @llvm.dbg.declare(metadata i32* %level, metadata !14143, metadata !2073), !dbg !14144
  %0 = load i32*, i32** %EOBRUN.addr, align 8, !dbg !14145
  %1 = load i32, i32* %0, align 4, !dbg !14147
  %tobool = icmp ne i32 %1, 0, !dbg !14147
  br i1 %tobool, label %if.then, label %if.end, !dbg !14148

if.then:                                          ; preds = %entry
  %2 = load i32*, i32** %EOBRUN.addr, align 8, !dbg !14149
  %3 = load i32, i32* %2, align 4, !dbg !14151
  %dec = add nsw i32 %3, -1, !dbg !14151
  store i32 %dec, i32* %2, align 4, !dbg !14151
  store i32 0, i32* %retval, align 4, !dbg !14152
  br label %return, !dbg !14152

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !14153, metadata !2073), !dbg !14154
  %4 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14155
  %gb = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %4, i32 0, i32 2, !dbg !14156
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb, i32 0, i32 2, !dbg !14157
  %5 = load i32, i32* %index, align 16, !dbg !14157
  store i32 %5, i32* %re_index, align 4, !dbg !14154
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !14158, metadata !2073), !dbg !14159
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !14160, metadata !2073), !dbg !14161
  %6 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14162
  %gb1 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %6, i32 0, i32 2, !dbg !14163
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb1, i32 0, i32 4, !dbg !14164
  %7 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !14164
  store i32 %7, i32* %re_size_plus8, align 4, !dbg !14161
  %8 = load i32, i32* %ss.addr, align 4, !dbg !14165
  store i32 %8, i32* %i, align 4, !dbg !14166
  br label %for.cond, !dbg !14167

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14168
  %gb2 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %9, i32 0, i32 2, !dbg !14169
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb2, i32 0, i32 0, !dbg !14170
  %10 = load i8*, i8** %buffer, align 16, !dbg !14170
  %11 = load i32, i32* %re_index, align 4, !dbg !14171
  %shr = lshr i32 %11, 3, !dbg !14172
  %idx.ext = zext i32 %shr to i64, !dbg !14173
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !14173
  %12 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !14174
  %l = bitcast %union.unaligned_32* %12 to i32*, !dbg !14174
  %13 = load i32, i32* %l, align 1, !dbg !14174
  store i32 %13, i32* %x.addr.i, align 4, !dbg !14175
  %14 = load i32, i32* %x.addr.i, align 4, !dbg !14176
  %shl.i = shl i32 %14, 8, !dbg !14177
  %and.i = and i32 %shl.i, 65280, !dbg !14178
  %15 = load i32, i32* %x.addr.i, align 4, !dbg !14179
  %shr.i = lshr i32 %15, 8, !dbg !14180
  %and1.i = and i32 %shr.i, 255, !dbg !14181
  %or.i = or i32 %and.i, %and1.i, !dbg !14182
  %shl2.i = shl i32 %or.i, 16, !dbg !14183
  %16 = load i32, i32* %x.addr.i, align 4, !dbg !14184
  %shr3.i = lshr i32 %16, 16, !dbg !14185
  %shl4.i = shl i32 %shr3.i, 8, !dbg !14186
  %and5.i = and i32 %shl4.i, 65280, !dbg !14187
  %17 = load i32, i32* %x.addr.i, align 4, !dbg !14188
  %shr6.i = lshr i32 %17, 16, !dbg !14189
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !14190
  %and8.i = and i32 %shr7.i, 255, !dbg !14191
  %or9.i = or i32 %and5.i, %and8.i, !dbg !14192
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !14193
  %18 = load i32, i32* %re_index, align 4, !dbg !14194
  %and = and i32 %18, 7, !dbg !14195
  %shl = shl i32 %or10.i, %and, !dbg !14196
  store i32 %shl, i32* %re_cache, align 4, !dbg !14197
  br label %do.body, !dbg !14198, !llvm.loop !14199

do.body:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %n, metadata !14200, metadata !2073), !dbg !14201
  call void @llvm.dbg.declare(metadata i32* %nb_bits, metadata !14202, metadata !2073), !dbg !14203
  call void @llvm.dbg.declare(metadata i32* %index3, metadata !14204, metadata !2073), !dbg !14205
  %19 = load i32, i32* %re_cache, align 4, !dbg !14206
  %call4 = call i32 @NEG_USR32(i32 %19, i8 signext 9), !dbg !14208
  store i32 %call4, i32* %index3, align 4, !dbg !14209
  %20 = load i32, i32* %index3, align 4, !dbg !14210
  %idxprom = zext i32 %20 to i64, !dbg !14211
  %21 = load i32, i32* %ac_index.addr, align 4, !dbg !14212
  %idxprom5 = sext i32 %21 to i64, !dbg !14211
  %22 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14211
  %vlcs = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %22, i32 0, i32 8, !dbg !14213
  %arrayidx = getelementptr inbounds [3 x [4 x %struct.VLC]], [3 x [4 x %struct.VLC]]* %vlcs, i64 0, i64 2, !dbg !14211
  %arrayidx6 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* %arrayidx, i64 0, i64 %idxprom5, !dbg !14211
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx6, i32 0, i32 1, !dbg !14214
  %23 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !14214
  %arrayidx7 = getelementptr inbounds [2 x i16], [2 x i16]* %23, i64 %idxprom, !dbg !14211
  %arrayidx8 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx7, i64 0, i64 0, !dbg !14211
  %24 = load i16, i16* %arrayidx8, align 2, !dbg !14211
  %conv = sext i16 %24 to i32, !dbg !14211
  store i32 %conv, i32* %code, align 4, !dbg !14215
  %25 = load i32, i32* %index3, align 4, !dbg !14216
  %idxprom9 = zext i32 %25 to i64, !dbg !14217
  %26 = load i32, i32* %ac_index.addr, align 4, !dbg !14218
  %idxprom10 = sext i32 %26 to i64, !dbg !14217
  %27 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14217
  %vlcs11 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %27, i32 0, i32 8, !dbg !14219
  %arrayidx12 = getelementptr inbounds [3 x [4 x %struct.VLC]], [3 x [4 x %struct.VLC]]* %vlcs11, i64 0, i64 2, !dbg !14217
  %arrayidx13 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* %arrayidx12, i64 0, i64 %idxprom10, !dbg !14217
  %table14 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx13, i32 0, i32 1, !dbg !14220
  %28 = load [2 x i16]*, [2 x i16]** %table14, align 8, !dbg !14220
  %arrayidx15 = getelementptr inbounds [2 x i16], [2 x i16]* %28, i64 %idxprom9, !dbg !14217
  %arrayidx16 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx15, i64 0, i64 1, !dbg !14217
  %29 = load i16, i16* %arrayidx16, align 2, !dbg !14217
  %conv17 = sext i16 %29 to i32, !dbg !14217
  store i32 %conv17, i32* %n, align 4, !dbg !14221
  %30 = load i32, i32* %n, align 4, !dbg !14222
  %cmp = icmp slt i32 %30, 0, !dbg !14223
  br i1 %cmp, label %if.then19, label %if.end53, !dbg !14224

if.then19:                                        ; preds = %do.body
  %31 = load i32, i32* %re_size_plus8, align 4, !dbg !14225
  %32 = load i32, i32* %re_index, align 4, !dbg !14227
  %add = add i32 %32, 9, !dbg !14228
  %cmp20 = icmp ugt i32 %31, %add, !dbg !14229
  br i1 %cmp20, label %cond.true, label %cond.false, !dbg !14230

cond.true:                                        ; preds = %if.then19
  %33 = load i32, i32* %re_index, align 4, !dbg !14231
  %add22 = add i32 %33, 9, !dbg !14233
  br label %cond.end, !dbg !14234

cond.false:                                       ; preds = %if.then19
  %34 = load i32, i32* %re_size_plus8, align 4, !dbg !14235
  br label %cond.end, !dbg !14237

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add22, %cond.true ], [ %34, %cond.false ], !dbg !14238
  store i32 %cond, i32* %re_index, align 4, !dbg !14239
  %35 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14240
  %gb23 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %35, i32 0, i32 2, !dbg !14241
  %buffer24 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb23, i32 0, i32 0, !dbg !14242
  %36 = load i8*, i8** %buffer24, align 16, !dbg !14242
  %37 = load i32, i32* %re_index, align 4, !dbg !14243
  %shr25 = lshr i32 %37, 3, !dbg !14244
  %idx.ext26 = zext i32 %shr25 to i64, !dbg !14245
  %add.ptr27 = getelementptr inbounds i8, i8* %36, i64 %idx.ext26, !dbg !14245
  %38 = bitcast i8* %add.ptr27 to %union.unaligned_32*, !dbg !14246
  %l28 = bitcast %union.unaligned_32* %38 to i32*, !dbg !14246
  %39 = load i32, i32* %l28, align 1, !dbg !14246
  store i32 %39, i32* %x.addr.i172, align 4, !dbg !14247
  %40 = load i32, i32* %x.addr.i172, align 4, !dbg !14248
  %shl.i173 = shl i32 %40, 8, !dbg !14249
  %and.i174 = and i32 %shl.i173, 65280, !dbg !14250
  %41 = load i32, i32* %x.addr.i172, align 4, !dbg !14251
  %shr.i175 = lshr i32 %41, 8, !dbg !14252
  %and1.i176 = and i32 %shr.i175, 255, !dbg !14253
  %or.i177 = or i32 %and.i174, %and1.i176, !dbg !14254
  %shl2.i178 = shl i32 %or.i177, 16, !dbg !14255
  %42 = load i32, i32* %x.addr.i172, align 4, !dbg !14256
  %shr3.i179 = lshr i32 %42, 16, !dbg !14257
  %shl4.i180 = shl i32 %shr3.i179, 8, !dbg !14258
  %and5.i181 = and i32 %shl4.i180, 65280, !dbg !14259
  %43 = load i32, i32* %x.addr.i172, align 4, !dbg !14260
  %shr6.i182 = lshr i32 %43, 16, !dbg !14261
  %shr7.i183 = lshr i32 %shr6.i182, 8, !dbg !14262
  %and8.i184 = and i32 %shr7.i183, 255, !dbg !14263
  %or9.i185 = or i32 %and5.i181, %and8.i184, !dbg !14264
  %or10.i186 = or i32 %shl2.i178, %or9.i185, !dbg !14265
  %44 = load i32, i32* %re_index, align 4, !dbg !14266
  %and30 = and i32 %44, 7, !dbg !14267
  %shl31 = shl i32 %or10.i186, %and30, !dbg !14268
  store i32 %shl31, i32* %re_cache, align 4, !dbg !14269
  %45 = load i32, i32* %n, align 4, !dbg !14270
  %sub = sub nsw i32 0, %45, !dbg !14271
  store i32 %sub, i32* %nb_bits, align 4, !dbg !14272
  %46 = load i32, i32* %re_cache, align 4, !dbg !14273
  %47 = load i32, i32* %nb_bits, align 4, !dbg !14274
  %conv32 = trunc i32 %47 to i8, !dbg !14274
  %call33 = call i32 @NEG_USR32(i32 %46, i8 signext %conv32), !dbg !14275
  %48 = load i32, i32* %code, align 4, !dbg !14277
  %add34 = add i32 %call33, %48, !dbg !14278
  store i32 %add34, i32* %index3, align 4, !dbg !14279
  %49 = load i32, i32* %index3, align 4, !dbg !14280
  %idxprom35 = zext i32 %49 to i64, !dbg !14281
  %50 = load i32, i32* %ac_index.addr, align 4, !dbg !14282
  %idxprom36 = sext i32 %50 to i64, !dbg !14281
  %51 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14281
  %vlcs37 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %51, i32 0, i32 8, !dbg !14283
  %arrayidx38 = getelementptr inbounds [3 x [4 x %struct.VLC]], [3 x [4 x %struct.VLC]]* %vlcs37, i64 0, i64 2, !dbg !14281
  %arrayidx39 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* %arrayidx38, i64 0, i64 %idxprom36, !dbg !14281
  %table40 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx39, i32 0, i32 1, !dbg !14284
  %52 = load [2 x i16]*, [2 x i16]** %table40, align 8, !dbg !14284
  %arrayidx41 = getelementptr inbounds [2 x i16], [2 x i16]* %52, i64 %idxprom35, !dbg !14281
  %arrayidx42 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx41, i64 0, i64 0, !dbg !14281
  %53 = load i16, i16* %arrayidx42, align 2, !dbg !14281
  %conv43 = sext i16 %53 to i32, !dbg !14281
  store i32 %conv43, i32* %code, align 4, !dbg !14285
  %54 = load i32, i32* %index3, align 4, !dbg !14286
  %idxprom44 = zext i32 %54 to i64, !dbg !14287
  %55 = load i32, i32* %ac_index.addr, align 4, !dbg !14288
  %idxprom45 = sext i32 %55 to i64, !dbg !14287
  %56 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14287
  %vlcs46 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %56, i32 0, i32 8, !dbg !14289
  %arrayidx47 = getelementptr inbounds [3 x [4 x %struct.VLC]], [3 x [4 x %struct.VLC]]* %vlcs46, i64 0, i64 2, !dbg !14287
  %arrayidx48 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* %arrayidx47, i64 0, i64 %idxprom45, !dbg !14287
  %table49 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx48, i32 0, i32 1, !dbg !14290
  %57 = load [2 x i16]*, [2 x i16]** %table49, align 8, !dbg !14290
  %arrayidx50 = getelementptr inbounds [2 x i16], [2 x i16]* %57, i64 %idxprom44, !dbg !14287
  %arrayidx51 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx50, i64 0, i64 1, !dbg !14287
  %58 = load i16, i16* %arrayidx51, align 2, !dbg !14287
  %conv52 = sext i16 %58 to i32, !dbg !14287
  store i32 %conv52, i32* %n, align 4, !dbg !14291
  br label %if.end53, !dbg !14292

if.end53:                                         ; preds = %cond.end, %do.body
  br label %do.body54, !dbg !14293, !llvm.loop !14295

do.body54:                                        ; preds = %if.end53
  %59 = load i32, i32* %n, align 4, !dbg !14297
  %60 = load i32, i32* %re_cache, align 4, !dbg !14300
  %shl55 = shl i32 %60, %59, !dbg !14300
  store i32 %shl55, i32* %re_cache, align 4, !dbg !14300
  %61 = load i32, i32* %re_size_plus8, align 4, !dbg !14301
  %62 = load i32, i32* %re_index, align 4, !dbg !14302
  %63 = load i32, i32* %n, align 4, !dbg !14303
  %add56 = add i32 %62, %63, !dbg !14304
  %cmp57 = icmp ugt i32 %61, %add56, !dbg !14305
  br i1 %cmp57, label %cond.true59, label %cond.false61, !dbg !14306

cond.true59:                                      ; preds = %do.body54
  %64 = load i32, i32* %re_index, align 4, !dbg !14307
  %65 = load i32, i32* %n, align 4, !dbg !14309
  %add60 = add i32 %64, %65, !dbg !14310
  br label %cond.end62, !dbg !14311

cond.false61:                                     ; preds = %do.body54
  %66 = load i32, i32* %re_size_plus8, align 4, !dbg !14312
  br label %cond.end62, !dbg !14314

cond.end62:                                       ; preds = %cond.false61, %cond.true59
  %cond63 = phi i32 [ %add60, %cond.true59 ], [ %66, %cond.false61 ], !dbg !14315
  store i32 %cond63, i32* %re_index, align 4, !dbg !14317
  br label %do.end, !dbg !14318

do.end:                                           ; preds = %cond.end62
  br label %do.end64, !dbg !14319

do.end64:                                         ; preds = %do.end
  %67 = load i32, i32* %code, align 4, !dbg !14321
  %shr65 = lshr i32 %67, 4, !dbg !14322
  store i32 %shr65, i32* %run, align 4, !dbg !14323
  %68 = load i32, i32* %code, align 4, !dbg !14324
  %and66 = and i32 %68, 15, !dbg !14324
  store i32 %and66, i32* %code, align 4, !dbg !14324
  %69 = load i32, i32* %code, align 4, !dbg !14325
  %tobool67 = icmp ne i32 %69, 0, !dbg !14325
  br i1 %tobool67, label %if.then68, label %if.else, !dbg !14326

if.then68:                                        ; preds = %do.end64
  %70 = load i32, i32* %run, align 4, !dbg !14327
  %71 = load i32, i32* %i, align 4, !dbg !14328
  %add69 = add nsw i32 %71, %70, !dbg !14328
  store i32 %add69, i32* %i, align 4, !dbg !14328
  %72 = load i32, i32* %code, align 4, !dbg !14329
  %cmp70 = icmp sgt i32 %72, 9, !dbg !14330
  br i1 %cmp70, label %if.then72, label %if.end82, !dbg !14331

if.then72:                                        ; preds = %if.then68
  %73 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14332
  %gb73 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %73, i32 0, i32 2, !dbg !14333
  %buffer74 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb73, i32 0, i32 0, !dbg !14334
  %74 = load i8*, i8** %buffer74, align 16, !dbg !14334
  %75 = load i32, i32* %re_index, align 4, !dbg !14335
  %shr75 = lshr i32 %75, 3, !dbg !14336
  %idx.ext76 = zext i32 %shr75 to i64, !dbg !14337
  %add.ptr77 = getelementptr inbounds i8, i8* %74, i64 %idx.ext76, !dbg !14337
  %76 = bitcast i8* %add.ptr77 to %union.unaligned_32*, !dbg !14338
  %l78 = bitcast %union.unaligned_32* %76 to i32*, !dbg !14338
  %77 = load i32, i32* %l78, align 1, !dbg !14338
  store i32 %77, i32* %x.addr.i202, align 4, !dbg !14339
  %78 = load i32, i32* %x.addr.i202, align 4, !dbg !14340
  %shl.i203 = shl i32 %78, 8, !dbg !14341
  %and.i204 = and i32 %shl.i203, 65280, !dbg !14342
  %79 = load i32, i32* %x.addr.i202, align 4, !dbg !14343
  %shr.i205 = lshr i32 %79, 8, !dbg !14344
  %and1.i206 = and i32 %shr.i205, 255, !dbg !14345
  %or.i207 = or i32 %and.i204, %and1.i206, !dbg !14346
  %shl2.i208 = shl i32 %or.i207, 16, !dbg !14347
  %80 = load i32, i32* %x.addr.i202, align 4, !dbg !14348
  %shr3.i209 = lshr i32 %80, 16, !dbg !14349
  %shl4.i210 = shl i32 %shr3.i209, 8, !dbg !14350
  %and5.i211 = and i32 %shl4.i210, 65280, !dbg !14351
  %81 = load i32, i32* %x.addr.i202, align 4, !dbg !14352
  %shr6.i212 = lshr i32 %81, 16, !dbg !14353
  %shr7.i213 = lshr i32 %shr6.i212, 8, !dbg !14354
  %and8.i214 = and i32 %shr7.i213, 255, !dbg !14355
  %or9.i215 = or i32 %and5.i211, %and8.i214, !dbg !14356
  %or10.i216 = or i32 %shl2.i208, %or9.i215, !dbg !14357
  %82 = load i32, i32* %re_index, align 4, !dbg !14358
  %and80 = and i32 %82, 7, !dbg !14359
  %shl81 = shl i32 %or10.i216, %and80, !dbg !14360
  store i32 %shl81, i32* %re_cache, align 4, !dbg !14361
  br label %if.end82, !dbg !14362

if.end82:                                         ; preds = %if.then72, %if.then68
  call void @llvm.dbg.declare(metadata i32* %cache, metadata !14363, metadata !2073), !dbg !14365
  %83 = load i32, i32* %re_cache, align 4, !dbg !14366
  store i32 %83, i32* %cache, align 4, !dbg !14365
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !14367, metadata !2073), !dbg !14368
  %84 = load i32, i32* %cache, align 4, !dbg !14369
  %neg = xor i32 %84, -1, !dbg !14370
  %shr83 = ashr i32 %neg, 31, !dbg !14371
  store i32 %shr83, i32* %sign, align 4, !dbg !14368
  %85 = load i32, i32* %sign, align 4, !dbg !14372
  %86 = load i32, i32* %cache, align 4, !dbg !14373
  %xor = xor i32 %85, %86, !dbg !14374
  %87 = load i32, i32* %code, align 4, !dbg !14375
  %conv84 = trunc i32 %87 to i8, !dbg !14375
  %call85 = call i32 @NEG_USR32(i32 %xor, i8 signext %conv84), !dbg !14376
  %88 = load i32, i32* %sign, align 4, !dbg !14377
  %xor86 = xor i32 %call85, %88, !dbg !14378
  %89 = load i32, i32* %sign, align 4, !dbg !14379
  %sub87 = sub i32 %xor86, %89, !dbg !14380
  store i32 %sub87, i32* %level, align 4, !dbg !14381
  %90 = load i32, i32* %re_size_plus8, align 4, !dbg !14382
  %91 = load i32, i32* %re_index, align 4, !dbg !14383
  %92 = load i32, i32* %code, align 4, !dbg !14384
  %add88 = add i32 %91, %92, !dbg !14385
  %cmp89 = icmp ugt i32 %90, %add88, !dbg !14386
  br i1 %cmp89, label %cond.true91, label %cond.false93, !dbg !14387

cond.true91:                                      ; preds = %if.end82
  %93 = load i32, i32* %re_index, align 4, !dbg !14388
  %94 = load i32, i32* %code, align 4, !dbg !14390
  %add92 = add i32 %93, %94, !dbg !14391
  br label %cond.end94, !dbg !14392

cond.false93:                                     ; preds = %if.end82
  %95 = load i32, i32* %re_size_plus8, align 4, !dbg !14393
  br label %cond.end94, !dbg !14395

cond.end94:                                       ; preds = %cond.false93, %cond.true91
  %cond95 = phi i32 [ %add92, %cond.true91 ], [ %95, %cond.false93 ], !dbg !14396
  store i32 %cond95, i32* %re_index, align 4, !dbg !14398
  %96 = load i32, i32* %i, align 4, !dbg !14399
  %97 = load i32, i32* %se.addr, align 4, !dbg !14401
  %cmp96 = icmp sge i32 %96, %97, !dbg !14402
  br i1 %cmp96, label %if.then98, label %if.end113, !dbg !14403

if.then98:                                        ; preds = %cond.end94
  %98 = load i32, i32* %i, align 4, !dbg !14404
  %99 = load i32, i32* %se.addr, align 4, !dbg !14407
  %cmp99 = icmp eq i32 %98, %99, !dbg !14408
  br i1 %cmp99, label %if.then101, label %if.end112, !dbg !14409

if.then101:                                       ; preds = %if.then98
  %100 = load i32, i32* %se.addr, align 4, !dbg !14410
  %idxprom102 = sext i32 %100 to i64, !dbg !14412
  %101 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14412
  %scantable = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %101, i32 0, i32 63, !dbg !14413
  %permutated = getelementptr inbounds %struct.ScanTable, %struct.ScanTable* %scantable, i32 0, i32 1, !dbg !14414
  %arrayidx103 = getelementptr inbounds [64 x i8], [64 x i8]* %permutated, i64 0, i64 %idxprom102, !dbg !14412
  %102 = load i8, i8* %arrayidx103, align 1, !dbg !14412
  %conv104 = zext i8 %102 to i32, !dbg !14412
  store i32 %conv104, i32* %j, align 4, !dbg !14415
  %103 = load i32, i32* %level, align 4, !dbg !14416
  %104 = load i32, i32* %se.addr, align 4, !dbg !14417
  %idxprom105 = sext i32 %104 to i64, !dbg !14418
  %105 = load i16*, i16** %quant_matrix.addr, align 8, !dbg !14418
  %arrayidx106 = getelementptr inbounds i16, i16* %105, i64 %idxprom105, !dbg !14418
  %106 = load i16, i16* %arrayidx106, align 2, !dbg !14418
  %conv107 = zext i16 %106 to i32, !dbg !14418
  %107 = load i32, i32* %Al.addr, align 4, !dbg !14419
  %shl108 = shl i32 %conv107, %107, !dbg !14420
  %mul = mul i32 %103, %shl108, !dbg !14421
  %conv109 = trunc i32 %mul to i16, !dbg !14416
  %108 = load i32, i32* %j, align 4, !dbg !14422
  %idxprom110 = sext i32 %108 to i64, !dbg !14423
  %109 = load i16*, i16** %block.addr, align 8, !dbg !14423
  %arrayidx111 = getelementptr inbounds i16, i16* %109, i64 %idxprom110, !dbg !14423
  store i16 %conv109, i16* %arrayidx111, align 2, !dbg !14424
  br label %for.end, !dbg !14425

if.end112:                                        ; preds = %if.then98
  %110 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14426
  %avctx = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %110, i32 0, i32 1, !dbg !14427
  %111 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !14427
  %112 = bitcast %struct.AVCodecContext* %111 to i8*, !dbg !14426
  %113 = load i32, i32* %i, align 4, !dbg !14428
  call void (i8*, i32, i8*, ...) @av_log(i8* %112, i32 16, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.88, i32 0, i32 0), i32 %113), !dbg !14429
  store i32 -1094995529, i32* %retval, align 4, !dbg !14430
  br label %return, !dbg !14430

if.end113:                                        ; preds = %cond.end94
  %114 = load i32, i32* %i, align 4, !dbg !14431
  %idxprom114 = sext i32 %114 to i64, !dbg !14432
  %115 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14432
  %scantable115 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %115, i32 0, i32 63, !dbg !14433
  %permutated116 = getelementptr inbounds %struct.ScanTable, %struct.ScanTable* %scantable115, i32 0, i32 1, !dbg !14434
  %arrayidx117 = getelementptr inbounds [64 x i8], [64 x i8]* %permutated116, i64 0, i64 %idxprom114, !dbg !14432
  %116 = load i8, i8* %arrayidx117, align 1, !dbg !14432
  %conv118 = zext i8 %116 to i32, !dbg !14432
  store i32 %conv118, i32* %j, align 4, !dbg !14435
  %117 = load i32, i32* %level, align 4, !dbg !14436
  %118 = load i32, i32* %i, align 4, !dbg !14437
  %idxprom119 = sext i32 %118 to i64, !dbg !14438
  %119 = load i16*, i16** %quant_matrix.addr, align 8, !dbg !14438
  %arrayidx120 = getelementptr inbounds i16, i16* %119, i64 %idxprom119, !dbg !14438
  %120 = load i16, i16* %arrayidx120, align 2, !dbg !14438
  %conv121 = zext i16 %120 to i32, !dbg !14438
  %121 = load i32, i32* %Al.addr, align 4, !dbg !14439
  %shl122 = shl i32 %conv121, %121, !dbg !14440
  %mul123 = mul i32 %117, %shl122, !dbg !14441
  %conv124 = trunc i32 %mul123 to i16, !dbg !14436
  %122 = load i32, i32* %j, align 4, !dbg !14442
  %idxprom125 = sext i32 %122 to i64, !dbg !14443
  %123 = load i16*, i16** %block.addr, align 8, !dbg !14443
  %arrayidx126 = getelementptr inbounds i16, i16* %123, i64 %idxprom125, !dbg !14443
  store i16 %conv124, i16* %arrayidx126, align 2, !dbg !14444
  br label %if.end163, !dbg !14445

if.else:                                          ; preds = %do.end64
  %124 = load i32, i32* %run, align 4, !dbg !14446
  %cmp127 = icmp eq i32 %124, 15, !dbg !14447
  br i1 %cmp127, label %if.then129, label %if.else136, !dbg !14448

if.then129:                                       ; preds = %if.else
  %125 = load i32, i32* %i, align 4, !dbg !14449
  %add130 = add nsw i32 %125, 15, !dbg !14449
  store i32 %add130, i32* %i, align 4, !dbg !14449
  %126 = load i32, i32* %i, align 4, !dbg !14451
  %127 = load i32, i32* %se.addr, align 4, !dbg !14453
  %cmp131 = icmp sge i32 %126, %127, !dbg !14454
  br i1 %cmp131, label %if.then133, label %if.end135, !dbg !14455

if.then133:                                       ; preds = %if.then129
  %128 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14456
  %avctx134 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %128, i32 0, i32 1, !dbg !14458
  %129 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx134, align 8, !dbg !14458
  %130 = bitcast %struct.AVCodecContext* %129 to i8*, !dbg !14456
  %131 = load i32, i32* %i, align 4, !dbg !14459
  call void (i8*, i32, i8*, ...) @av_log(i8* %130, i32 16, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.89, i32 0, i32 0), i32 %131), !dbg !14460
  store i32 -1094995529, i32* %retval, align 4, !dbg !14461
  br label %return, !dbg !14461

if.end135:                                        ; preds = %if.then129
  br label %if.end162, !dbg !14462

if.else136:                                       ; preds = %if.else
  %132 = load i32, i32* %run, align 4, !dbg !14463
  %shl137 = shl i32 1, %132, !dbg !14464
  store i32 %shl137, i32* %val, align 4, !dbg !14465
  %133 = load i32, i32* %run, align 4, !dbg !14466
  %tobool138 = icmp ne i32 %133, 0, !dbg !14466
  br i1 %tobool138, label %if.then139, label %if.end160, !dbg !14467

if.then139:                                       ; preds = %if.else136
  %134 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14468
  %gb140 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %134, i32 0, i32 2, !dbg !14469
  %buffer141 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb140, i32 0, i32 0, !dbg !14470
  %135 = load i8*, i8** %buffer141, align 16, !dbg !14470
  %136 = load i32, i32* %re_index, align 4, !dbg !14471
  %shr142 = lshr i32 %136, 3, !dbg !14472
  %idx.ext143 = zext i32 %shr142 to i64, !dbg !14473
  %add.ptr144 = getelementptr inbounds i8, i8* %135, i64 %idx.ext143, !dbg !14473
  %137 = bitcast i8* %add.ptr144 to %union.unaligned_32*, !dbg !14474
  %l145 = bitcast %union.unaligned_32* %137 to i32*, !dbg !14474
  %138 = load i32, i32* %l145, align 1, !dbg !14474
  store i32 %138, i32* %x.addr.i187, align 4, !dbg !14475
  %139 = load i32, i32* %x.addr.i187, align 4, !dbg !14476
  %shl.i188 = shl i32 %139, 8, !dbg !14477
  %and.i189 = and i32 %shl.i188, 65280, !dbg !14478
  %140 = load i32, i32* %x.addr.i187, align 4, !dbg !14479
  %shr.i190 = lshr i32 %140, 8, !dbg !14480
  %and1.i191 = and i32 %shr.i190, 255, !dbg !14481
  %or.i192 = or i32 %and.i189, %and1.i191, !dbg !14482
  %shl2.i193 = shl i32 %or.i192, 16, !dbg !14483
  %141 = load i32, i32* %x.addr.i187, align 4, !dbg !14484
  %shr3.i194 = lshr i32 %141, 16, !dbg !14485
  %shl4.i195 = shl i32 %shr3.i194, 8, !dbg !14486
  %and5.i196 = and i32 %shl4.i195, 65280, !dbg !14487
  %142 = load i32, i32* %x.addr.i187, align 4, !dbg !14488
  %shr6.i197 = lshr i32 %142, 16, !dbg !14489
  %shr7.i198 = lshr i32 %shr6.i197, 8, !dbg !14490
  %and8.i199 = and i32 %shr7.i198, 255, !dbg !14491
  %or9.i200 = or i32 %and5.i196, %and8.i199, !dbg !14492
  %or10.i201 = or i32 %shl2.i193, %or9.i200, !dbg !14493
  %143 = load i32, i32* %re_index, align 4, !dbg !14494
  %and147 = and i32 %143, 7, !dbg !14495
  %shl148 = shl i32 %or10.i201, %and147, !dbg !14496
  store i32 %shl148, i32* %re_cache, align 4, !dbg !14497
  %144 = load i32, i32* %re_cache, align 4, !dbg !14498
  %145 = load i32, i32* %run, align 4, !dbg !14499
  %conv149 = trunc i32 %145 to i8, !dbg !14499
  %call150 = call i32 @NEG_USR32(i32 %144, i8 signext %conv149), !dbg !14500
  %146 = load i32, i32* %val, align 4, !dbg !14501
  %add151 = add i32 %146, %call150, !dbg !14501
  store i32 %add151, i32* %val, align 4, !dbg !14501
  %147 = load i32, i32* %re_size_plus8, align 4, !dbg !14502
  %148 = load i32, i32* %re_index, align 4, !dbg !14503
  %149 = load i32, i32* %run, align 4, !dbg !14504
  %add152 = add i32 %148, %149, !dbg !14505
  %cmp153 = icmp ugt i32 %147, %add152, !dbg !14506
  br i1 %cmp153, label %cond.true155, label %cond.false157, !dbg !14507

cond.true155:                                     ; preds = %if.then139
  %150 = load i32, i32* %re_index, align 4, !dbg !14508
  %151 = load i32, i32* %run, align 4, !dbg !14510
  %add156 = add i32 %150, %151, !dbg !14511
  br label %cond.end158, !dbg !14512

cond.false157:                                    ; preds = %if.then139
  %152 = load i32, i32* %re_size_plus8, align 4, !dbg !14513
  br label %cond.end158, !dbg !14515

cond.end158:                                      ; preds = %cond.false157, %cond.true155
  %cond159 = phi i32 [ %add156, %cond.true155 ], [ %152, %cond.false157 ], !dbg !14516
  store i32 %cond159, i32* %re_index, align 4, !dbg !14518
  br label %if.end160, !dbg !14519

if.end160:                                        ; preds = %cond.end158, %if.else136
  %153 = load i32, i32* %val, align 4, !dbg !14520
  %sub161 = sub nsw i32 %153, 1, !dbg !14521
  %154 = load i32*, i32** %EOBRUN.addr, align 8, !dbg !14522
  store i32 %sub161, i32* %154, align 4, !dbg !14523
  br label %for.end, !dbg !14524

if.end162:                                        ; preds = %if.end135
  br label %if.end163

if.end163:                                        ; preds = %if.end162, %if.end113
  br label %for.inc, !dbg !14525

for.inc:                                          ; preds = %if.end163
  %155 = load i32, i32* %i, align 4, !dbg !14526
  %inc = add nsw i32 %155, 1, !dbg !14526
  store i32 %inc, i32* %i, align 4, !dbg !14526
  br label %for.cond, !dbg !14528, !llvm.loop !14529

for.end:                                          ; preds = %if.end160, %if.then101
  %156 = load i32, i32* %re_index, align 4, !dbg !14531
  %157 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14532
  %gb164 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %157, i32 0, i32 2, !dbg !14533
  %index165 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb164, i32 0, i32 2, !dbg !14534
  store i32 %156, i32* %index165, align 16, !dbg !14535
  %158 = load i32, i32* %i, align 4, !dbg !14536
  %159 = load i8*, i8** %last_nnz.addr, align 8, !dbg !14538
  %160 = load i8, i8* %159, align 1, !dbg !14539
  %conv166 = zext i8 %160 to i32, !dbg !14539
  %cmp167 = icmp sgt i32 %158, %conv166, !dbg !14540
  br i1 %cmp167, label %if.then169, label %if.end171, !dbg !14541

if.then169:                                       ; preds = %for.end
  %161 = load i32, i32* %i, align 4, !dbg !14542
  %conv170 = trunc i32 %161 to i8, !dbg !14542
  %162 = load i8*, i8** %last_nnz.addr, align 8, !dbg !14543
  store i8 %conv170, i8* %162, align 1, !dbg !14544
  br label %if.end171, !dbg !14545

if.end171:                                        ; preds = %if.then169, %for.end
  store i32 0, i32* %retval, align 4, !dbg !14546
  br label %return, !dbg !14546

return:                                           ; preds = %if.end171, %if.then133, %if.end112, %if.then
  %163 = load i32, i32* %retval, align 4, !dbg !14547
  ret i32 %163, !dbg !14547
}

; Function Attrs: nounwind uwtable
define internal i32 @handle_rstn(%struct.MJpegDecodeContext* %s, i32 %nb_components) #3 !dbg !14548 {
entry:
  %s.addr = alloca %struct.MJpegDecodeContext*, align 8
  %nb_components.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %reset = alloca i32, align 4
  %pos = alloca i32, align 4
  store %struct.MJpegDecodeContext* %s, %struct.MJpegDecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MJpegDecodeContext** %s.addr, metadata !14549, metadata !2073), !dbg !14550
  store i32 %nb_components, i32* %nb_components.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_components.addr, metadata !14551, metadata !2073), !dbg !14552
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14553, metadata !2073), !dbg !14554
  call void @llvm.dbg.declare(metadata i32* %reset, metadata !14555, metadata !2073), !dbg !14556
  store i32 0, i32* %reset, align 4, !dbg !14556
  %0 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14557
  %restart_interval = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %0, i32 0, i32 67, !dbg !14559
  %1 = load i32, i32* %restart_interval, align 8, !dbg !14559
  %tobool = icmp ne i32 %1, 0, !dbg !14557
  br i1 %tobool, label %if.then, label %if.end57, !dbg !14560

if.then:                                          ; preds = %entry
  %2 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14561
  %restart_count = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %2, i32 0, i32 68, !dbg !14563
  %3 = load i32, i32* %restart_count, align 4, !dbg !14564
  %dec = add nsw i32 %3, -1, !dbg !14564
  store i32 %dec, i32* %restart_count, align 4, !dbg !14564
  %4 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14565
  %restart_count1 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %4, i32 0, i32 68, !dbg !14567
  %5 = load i32, i32* %restart_count1, align 4, !dbg !14567
  %cmp = icmp eq i32 %5, 0, !dbg !14568
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !14569

land.lhs.true:                                    ; preds = %if.then
  %6 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14570
  %avctx = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %6, i32 0, i32 1, !dbg !14572
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !14572
  %codec_id = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %7, i32 0, i32 4, !dbg !14573
  %8 = load i32, i32* %codec_id, align 8, !dbg !14573
  %cmp2 = icmp eq i32 %8, 100, !dbg !14574
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !14575

if.then3:                                         ; preds = %land.lhs.true
  %9 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14576
  %gb = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %9, i32 0, i32 2, !dbg !14578
  %call = call i8* @align_get_bits(%struct.GetBitContext* %gb), !dbg !14579
  store i32 0, i32* %i, align 4, !dbg !14580
  br label %for.cond, !dbg !14582

for.cond:                                         ; preds = %for.inc, %if.then3
  %10 = load i32, i32* %i, align 4, !dbg !14583
  %11 = load i32, i32* %nb_components.addr, align 4, !dbg !14586
  %cmp4 = icmp slt i32 %10, %11, !dbg !14587
  br i1 %cmp4, label %for.body, label %for.end, !dbg !14588

for.body:                                         ; preds = %for.cond
  %12 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14589
  %bits = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %12, i32 0, i32 22, !dbg !14590
  %13 = load i32, i32* %bits, align 8, !dbg !14590
  %shl = shl i32 4, %13, !dbg !14591
  %14 = load i32, i32* %i, align 4, !dbg !14592
  %idxprom = sext i32 %14 to i64, !dbg !14593
  %15 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14593
  %last_dc = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %15, i32 0, i32 51, !dbg !14594
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %last_dc, i64 0, i64 %idxprom, !dbg !14593
  store i32 %shl, i32* %arrayidx, align 4, !dbg !14595
  br label %for.inc, !dbg !14593

for.inc:                                          ; preds = %for.body
  %16 = load i32, i32* %i, align 4, !dbg !14596
  %inc = add nsw i32 %16, 1, !dbg !14596
  store i32 %inc, i32* %i, align 4, !dbg !14596
  br label %for.cond, !dbg !14598, !llvm.loop !14599

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !14601

if.end:                                           ; preds = %for.end, %land.lhs.true, %if.then
  %17 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14602
  %gb5 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %17, i32 0, i32 2, !dbg !14603
  %call6 = call i32 @get_bits_count(%struct.GetBitContext* %gb5), !dbg !14604
  %sub = sub nsw i32 0, %call6, !dbg !14605
  %and = and i32 %sub, 7, !dbg !14606
  %add = add nsw i32 8, %and, !dbg !14607
  store i32 %add, i32* %i, align 4, !dbg !14608
  %18 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14609
  %restart_count7 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %18, i32 0, i32 68, !dbg !14611
  %19 = load i32, i32* %restart_count7, align 4, !dbg !14611
  %cmp8 = icmp eq i32 %19, 0, !dbg !14612
  br i1 %cmp8, label %if.then9, label %if.end56, !dbg !14613

if.then9:                                         ; preds = %if.end
  %20 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14614
  %gb10 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %20, i32 0, i32 2, !dbg !14617
  %21 = load i32, i32* %i, align 4, !dbg !14618
  %call11 = call i32 @show_bits(%struct.GetBitContext* %gb10, i32 %21), !dbg !14619
  %22 = load i32, i32* %i, align 4, !dbg !14620
  %shl12 = shl i32 1, %22, !dbg !14621
  %sub13 = sub nsw i32 %shl12, 1, !dbg !14622
  %cmp14 = icmp eq i32 %call11, %sub13, !dbg !14623
  br i1 %cmp14, label %if.then18, label %lor.lhs.false, !dbg !14624

lor.lhs.false:                                    ; preds = %if.then9
  %23 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14625
  %gb15 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %23, i32 0, i32 2, !dbg !14627
  %24 = load i32, i32* %i, align 4, !dbg !14628
  %call16 = call i32 @show_bits(%struct.GetBitContext* %gb15, i32 %24), !dbg !14629
  %cmp17 = icmp eq i32 %call16, 255, !dbg !14630
  br i1 %cmp17, label %if.then18, label %if.end55, !dbg !14631

if.then18:                                        ; preds = %lor.lhs.false, %if.then9
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !14633, metadata !2073), !dbg !14635
  %25 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14636
  %gb19 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %25, i32 0, i32 2, !dbg !14637
  %call20 = call i32 @get_bits_count(%struct.GetBitContext* %gb19), !dbg !14638
  store i32 %call20, i32* %pos, align 4, !dbg !14635
  %26 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14639
  %gb21 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %26, i32 0, i32 2, !dbg !14640
  %call22 = call i8* @align_get_bits(%struct.GetBitContext* %gb21), !dbg !14641
  br label %while.cond, !dbg !14642

while.cond:                                       ; preds = %while.body, %if.then18
  %27 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14643
  %gb23 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %27, i32 0, i32 2, !dbg !14645
  %call24 = call i32 @get_bits_left(%struct.GetBitContext* %gb23), !dbg !14646
  %cmp25 = icmp sge i32 %call24, 8, !dbg !14647
  br i1 %cmp25, label %land.rhs, label %land.end, !dbg !14648

land.rhs:                                         ; preds = %while.cond
  %28 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14649
  %gb26 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %28, i32 0, i32 2, !dbg !14651
  %call27 = call i32 @show_bits(%struct.GetBitContext* %gb26, i32 8), !dbg !14652
  %cmp28 = icmp eq i32 %call27, 255, !dbg !14653
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %29 = phi i1 [ false, %while.cond ], [ %cmp28, %land.rhs ]
  br i1 %29, label %while.body, label %while.end, !dbg !14654

while.body:                                       ; preds = %land.end
  %30 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14656
  %gb29 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %30, i32 0, i32 2, !dbg !14657
  call void @skip_bits(%struct.GetBitContext* %gb29, i32 8), !dbg !14658
  br label %while.cond, !dbg !14659, !llvm.loop !14661

while.end:                                        ; preds = %land.end
  %31 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14662
  %gb30 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %31, i32 0, i32 2, !dbg !14664
  %call31 = call i32 @get_bits_left(%struct.GetBitContext* %gb30), !dbg !14665
  %cmp32 = icmp sge i32 %call31, 8, !dbg !14666
  br i1 %cmp32, label %land.lhs.true33, label %if.else, !dbg !14667

land.lhs.true33:                                  ; preds = %while.end
  %32 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14668
  %gb34 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %32, i32 0, i32 2, !dbg !14670
  %call35 = call i32 @get_bits(%struct.GetBitContext* %gb34, i32 8), !dbg !14671
  %and36 = and i32 %call35, 248, !dbg !14672
  %cmp37 = icmp eq i32 %and36, 208, !dbg !14673
  br i1 %cmp37, label %if.then38, label %if.else, !dbg !14674

if.then38:                                        ; preds = %land.lhs.true33
  store i32 0, i32* %i, align 4, !dbg !14675
  br label %for.cond39, !dbg !14678

for.cond39:                                       ; preds = %for.inc47, %if.then38
  %33 = load i32, i32* %i, align 4, !dbg !14679
  %34 = load i32, i32* %nb_components.addr, align 4, !dbg !14682
  %cmp40 = icmp slt i32 %33, %34, !dbg !14683
  br i1 %cmp40, label %for.body41, label %for.end49, !dbg !14684

for.body41:                                       ; preds = %for.cond39
  %35 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14685
  %bits42 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %35, i32 0, i32 22, !dbg !14686
  %36 = load i32, i32* %bits42, align 8, !dbg !14686
  %shl43 = shl i32 4, %36, !dbg !14687
  %37 = load i32, i32* %i, align 4, !dbg !14688
  %idxprom44 = sext i32 %37 to i64, !dbg !14689
  %38 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14689
  %last_dc45 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %38, i32 0, i32 51, !dbg !14690
  %arrayidx46 = getelementptr inbounds [4 x i32], [4 x i32]* %last_dc45, i64 0, i64 %idxprom44, !dbg !14689
  store i32 %shl43, i32* %arrayidx46, align 4, !dbg !14691
  br label %for.inc47, !dbg !14689

for.inc47:                                        ; preds = %for.body41
  %39 = load i32, i32* %i, align 4, !dbg !14692
  %inc48 = add nsw i32 %39, 1, !dbg !14692
  store i32 %inc48, i32* %i, align 4, !dbg !14692
  br label %for.cond39, !dbg !14694, !llvm.loop !14695

for.end49:                                        ; preds = %for.cond39
  store i32 1, i32* %reset, align 4, !dbg !14697
  br label %if.end54, !dbg !14698

if.else:                                          ; preds = %land.lhs.true33, %while.end
  %40 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14699
  %gb50 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %40, i32 0, i32 2, !dbg !14700
  %41 = load i32, i32* %pos, align 4, !dbg !14701
  %42 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14702
  %gb51 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %42, i32 0, i32 2, !dbg !14703
  %call52 = call i32 @get_bits_count(%struct.GetBitContext* %gb51), !dbg !14704
  %sub53 = sub nsw i32 %41, %call52, !dbg !14705
  call void @skip_bits_long(%struct.GetBitContext* %gb50, i32 %sub53), !dbg !14706
  br label %if.end54

if.end54:                                         ; preds = %if.else, %for.end49
  br label %if.end55, !dbg !14707

if.end55:                                         ; preds = %if.end54, %lor.lhs.false
  br label %if.end56, !dbg !14708

if.end56:                                         ; preds = %if.end55, %if.end
  br label %if.end57, !dbg !14709

if.end57:                                         ; preds = %if.end56, %entry
  %43 = load i32, i32* %reset, align 4, !dbg !14710
  ret i32 %43, !dbg !14711
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits_long(%struct.GetBitContext* %s, i32 %n) #4 !dbg !14712 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !11154, metadata !2073), !dbg !14713
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !11168, metadata !2073), !dbg !14715
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !11170, metadata !2073), !dbg !14716
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !14717, metadata !2073), !dbg !14718
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14719, metadata !2073), !dbg !14720
  %0 = load i32, i32* %n.addr, align 4, !dbg !14721
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !14722
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %1, i32 0, i32 2, !dbg !14723
  %2 = load i32, i32* %index, align 8, !dbg !14723
  %sub = sub nsw i32 0, %2, !dbg !14724
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !14725
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 4, !dbg !14726
  %4 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !14726
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !14727
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 2, !dbg !14728
  %6 = load i32, i32* %index1, align 8, !dbg !14728
  %sub2 = sub nsw i32 %4, %6, !dbg !14729
  store i32 %0, i32* %a.addr.i, align 4, !dbg !14730
  store i32 %sub, i32* %amin.addr.i, align 4, !dbg !14730
  store i32 %sub2, i32* %amax.addr.i, align 4, !dbg !14730
  %7 = load i32, i32* %a.addr.i, align 4, !dbg !14731
  %8 = load i32, i32* %amin.addr.i, align 4, !dbg !14732
  %cmp.i = icmp slt i32 %7, %8, !dbg !14733
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !14734

if.then.i:                                        ; preds = %entry
  %9 = load i32, i32* %amin.addr.i, align 4, !dbg !14735
  store i32 %9, i32* %retval.i, align 4, !dbg !14736
  br label %av_clip_c.exit, !dbg !14736

if.else.i:                                        ; preds = %entry
  %10 = load i32, i32* %a.addr.i, align 4, !dbg !14737
  %11 = load i32, i32* %amax.addr.i, align 4, !dbg !14738
  %cmp1.i = icmp sgt i32 %10, %11, !dbg !14739
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !14740

if.then2.i:                                       ; preds = %if.else.i
  %12 = load i32, i32* %amax.addr.i, align 4, !dbg !14741
  store i32 %12, i32* %retval.i, align 4, !dbg !14742
  br label %av_clip_c.exit, !dbg !14742

if.else3.i:                                       ; preds = %if.else.i
  %13 = load i32, i32* %a.addr.i, align 4, !dbg !14743
  store i32 %13, i32* %retval.i, align 4, !dbg !14744
  br label %av_clip_c.exit, !dbg !14744

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %14 = load i32, i32* %retval.i, align 4, !dbg !14745
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !14746
  %index3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !14747
  %16 = load i32, i32* %index3, align 8, !dbg !14748
  %add = add nsw i32 %16, %14, !dbg !14748
  store i32 %add, i32* %index3, align 8, !dbg !14748
  ret void, !dbg !14749
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits1(%struct.GetBitContext* %s) #4 !dbg !14750 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %index = alloca i32, align 4
  %result = alloca i8, align 1
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !14753, metadata !2073), !dbg !14754
  call void @llvm.dbg.declare(metadata i32* %index, metadata !14755, metadata !2073), !dbg !14756
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !14757
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !14758
  %1 = load i32, i32* %index1, align 8, !dbg !14758
  store i32 %1, i32* %index, align 4, !dbg !14756
  call void @llvm.dbg.declare(metadata i8* %result, metadata !14759, metadata !2073), !dbg !14760
  %2 = load i32, i32* %index, align 4, !dbg !14761
  %shr = lshr i32 %2, 3, !dbg !14762
  %idxprom = zext i32 %shr to i64, !dbg !14763
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !14763
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 0, !dbg !14764
  %4 = load i8*, i8** %buffer, align 8, !dbg !14764
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !14763
  %5 = load i8, i8* %arrayidx, align 1, !dbg !14763
  store i8 %5, i8* %result, align 1, !dbg !14760
  %6 = load i32, i32* %index, align 4, !dbg !14765
  %and = and i32 %6, 7, !dbg !14766
  %7 = load i8, i8* %result, align 1, !dbg !14767
  %conv = zext i8 %7 to i32, !dbg !14767
  %shl = shl i32 %conv, %and, !dbg !14767
  %conv2 = trunc i32 %shl to i8, !dbg !14767
  store i8 %conv2, i8* %result, align 1, !dbg !14767
  %8 = load i8, i8* %result, align 1, !dbg !14768
  %conv3 = zext i8 %8 to i32, !dbg !14768
  %shr4 = ashr i32 %conv3, 7, !dbg !14768
  %conv5 = trunc i32 %shr4 to i8, !dbg !14768
  store i8 %conv5, i8* %result, align 1, !dbg !14768
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !14769
  %index6 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 2, !dbg !14771
  %10 = load i32, i32* %index6, align 8, !dbg !14771
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !14772
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 4, !dbg !14773
  %12 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !14773
  %cmp = icmp slt i32 %10, %12, !dbg !14774
  br i1 %cmp, label %if.then, label %if.end, !dbg !14775

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %index, align 4, !dbg !14776
  %inc = add i32 %13, 1, !dbg !14776
  store i32 %inc, i32* %index, align 4, !dbg !14776
  br label %if.end, !dbg !14777

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %index, align 4, !dbg !14778
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !14779
  %index8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !14780
  store i32 %14, i32* %index8, align 8, !dbg !14781
  %16 = load i8, i8* %result, align 1, !dbg !14782
  %conv9 = zext i8 %16 to i32, !dbg !14782
  ret i32 %conv9, !dbg !14783
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_block(%struct.MJpegDecodeContext* %s, i16* %block, i32 %component, i32 %dc_index, i32 %ac_index, i16* %quant_matrix) #3 !dbg !14784 {
entry:
  %x.addr.i148 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i148, metadata !2864, metadata !2073), !dbg !14787
  %x.addr.i133 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i133, metadata !2864, metadata !2073), !dbg !14795
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2864, metadata !2073), !dbg !14800
  %retval.i = alloca i16, align 2
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !14802, metadata !2073), !dbg !14806
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.MJpegDecodeContext*, align 8
  %block.addr = alloca i16*, align 8
  %component.addr = alloca i32, align 4
  %dc_index.addr = alloca i32, align 4
  %ac_index.addr = alloca i32, align 4
  %quant_matrix.addr = alloca i16*, align 8
  %code = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %level = alloca i32, align 4
  %val = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  %n = alloca i32, align 4
  %nb_bits = alloca i32, align 4
  %index13 = alloca i32, align 4
  %cache = alloca i32, align 4
  %sign = alloca i32, align 4
  store %struct.MJpegDecodeContext* %s, %struct.MJpegDecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MJpegDecodeContext** %s.addr, metadata !14808, metadata !2073), !dbg !14809
  store i16* %block, i16** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %block.addr, metadata !14810, metadata !2073), !dbg !14811
  store i32 %component, i32* %component.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %component.addr, metadata !14812, metadata !2073), !dbg !14813
  store i32 %dc_index, i32* %dc_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dc_index.addr, metadata !14814, metadata !2073), !dbg !14815
  store i32 %ac_index, i32* %ac_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ac_index.addr, metadata !14816, metadata !2073), !dbg !14817
  store i16* %quant_matrix, i16** %quant_matrix.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %quant_matrix.addr, metadata !14818, metadata !2073), !dbg !14819
  call void @llvm.dbg.declare(metadata i32* %code, metadata !14820, metadata !2073), !dbg !14821
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14822, metadata !2073), !dbg !14823
  call void @llvm.dbg.declare(metadata i32* %j, metadata !14824, metadata !2073), !dbg !14825
  call void @llvm.dbg.declare(metadata i32* %level, metadata !14826, metadata !2073), !dbg !14827
  call void @llvm.dbg.declare(metadata i32* %val, metadata !14828, metadata !2073), !dbg !14829
  %0 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14830
  %1 = load i32, i32* %dc_index.addr, align 4, !dbg !14831
  %call = call i32 @mjpeg_decode_dc(%struct.MJpegDecodeContext* %0, i32 %1), !dbg !14832
  store i32 %call, i32* %val, align 4, !dbg !14833
  %2 = load i32, i32* %val, align 4, !dbg !14834
  %cmp = icmp eq i32 %2, 1048575, !dbg !14836
  br i1 %cmp, label %if.then, label %if.end, !dbg !14837

if.then:                                          ; preds = %entry
  %3 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14838
  %avctx = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %3, i32 0, i32 1, !dbg !14840
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !14840
  %5 = bitcast %struct.AVCodecContext* %4 to i8*, !dbg !14838
  call void (i8*, i32, i8*, ...) @av_log(i8* %5, i32 16, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.92, i32 0, i32 0)), !dbg !14841
  store i32 -1094995529, i32* %retval, align 4, !dbg !14842
  br label %return, !dbg !14842

if.end:                                           ; preds = %entry
  %6 = load i32, i32* %val, align 4, !dbg !14843
  %7 = load i16*, i16** %quant_matrix.addr, align 8, !dbg !14844
  %arrayidx = getelementptr inbounds i16, i16* %7, i64 0, !dbg !14844
  %8 = load i16, i16* %arrayidx, align 2, !dbg !14844
  %conv = zext i16 %8 to i32, !dbg !14845
  %mul = mul i32 %6, %conv, !dbg !14846
  %9 = load i32, i32* %component.addr, align 4, !dbg !14847
  %idxprom = sext i32 %9 to i64, !dbg !14848
  %10 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14848
  %last_dc = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %10, i32 0, i32 51, !dbg !14849
  %arrayidx1 = getelementptr inbounds [4 x i32], [4 x i32]* %last_dc, i64 0, i64 %idxprom, !dbg !14848
  %11 = load i32, i32* %arrayidx1, align 4, !dbg !14848
  %add = add i32 %mul, %11, !dbg !14850
  store i32 %add, i32* %val, align 4, !dbg !14851
  %12 = load i32, i32* %val, align 4, !dbg !14852
  store i32 %12, i32* %a.addr.i, align 4, !dbg !14853
  %13 = load i32, i32* %a.addr.i, align 4, !dbg !14854
  %add.i = add i32 %13, 32768, !dbg !14856
  %and.i = and i32 %add.i, -65536, !dbg !14857
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !14857
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !14858

if.then.i:                                        ; preds = %if.end
  %14 = load i32, i32* %a.addr.i, align 4, !dbg !14859
  %shr.i = ashr i32 %14, 31, !dbg !14861
  %xor.i = xor i32 %shr.i, 32767, !dbg !14862
  %conv.i = trunc i32 %xor.i to i16, !dbg !14863
  store i16 %conv.i, i16* %retval.i, align 2, !dbg !14864
  br label %av_clip_int16_c.exit, !dbg !14864

if.else.i:                                        ; preds = %if.end
  %15 = load i32, i32* %a.addr.i, align 4, !dbg !14865
  %conv1.i = trunc i32 %15 to i16, !dbg !14865
  store i16 %conv1.i, i16* %retval.i, align 2, !dbg !14866
  br label %av_clip_int16_c.exit, !dbg !14866

av_clip_int16_c.exit:                             ; preds = %if.then.i, %if.else.i
  %16 = load i16, i16* %retval.i, align 2, !dbg !14867
  %conv3 = sext i16 %16 to i32, !dbg !14853
  store i32 %conv3, i32* %val, align 4, !dbg !14868
  %17 = load i32, i32* %val, align 4, !dbg !14869
  %18 = load i32, i32* %component.addr, align 4, !dbg !14870
  %idxprom4 = sext i32 %18 to i64, !dbg !14871
  %19 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14871
  %last_dc5 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %19, i32 0, i32 51, !dbg !14872
  %arrayidx6 = getelementptr inbounds [4 x i32], [4 x i32]* %last_dc5, i64 0, i64 %idxprom4, !dbg !14871
  store i32 %17, i32* %arrayidx6, align 4, !dbg !14873
  %20 = load i32, i32* %val, align 4, !dbg !14874
  %conv7 = trunc i32 %20 to i16, !dbg !14874
  %21 = load i16*, i16** %block.addr, align 8, !dbg !14875
  %arrayidx8 = getelementptr inbounds i16, i16* %21, i64 0, !dbg !14875
  store i16 %conv7, i16* %arrayidx8, align 2, !dbg !14876
  store i32 0, i32* %i, align 4, !dbg !14877
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !14878, metadata !2073), !dbg !14879
  %22 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14880
  %gb = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %22, i32 0, i32 2, !dbg !14881
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb, i32 0, i32 2, !dbg !14882
  %23 = load i32, i32* %index, align 16, !dbg !14882
  store i32 %23, i32* %re_index, align 4, !dbg !14879
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !14883, metadata !2073), !dbg !14884
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !14885, metadata !2073), !dbg !14886
  %24 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14887
  %gb9 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %24, i32 0, i32 2, !dbg !14888
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb9, i32 0, i32 4, !dbg !14889
  %25 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !14889
  store i32 %25, i32* %re_size_plus8, align 4, !dbg !14886
  br label %do.body, !dbg !14890, !llvm.loop !14891

do.body:                                          ; preds = %do.cond, %av_clip_int16_c.exit
  %26 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14892
  %gb10 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %26, i32 0, i32 2, !dbg !14893
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb10, i32 0, i32 0, !dbg !14894
  %27 = load i8*, i8** %buffer, align 16, !dbg !14894
  %28 = load i32, i32* %re_index, align 4, !dbg !14895
  %shr = lshr i32 %28, 3, !dbg !14896
  %idx.ext = zext i32 %shr to i64, !dbg !14897
  %add.ptr = getelementptr inbounds i8, i8* %27, i64 %idx.ext, !dbg !14897
  %29 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !14898
  %l = bitcast %union.unaligned_32* %29 to i32*, !dbg !14898
  %30 = load i32, i32* %l, align 1, !dbg !14898
  store i32 %30, i32* %x.addr.i, align 4, !dbg !14899
  %31 = load i32, i32* %x.addr.i, align 4, !dbg !14900
  %shl.i = shl i32 %31, 8, !dbg !14901
  %and.i131 = and i32 %shl.i, 65280, !dbg !14902
  %32 = load i32, i32* %x.addr.i, align 4, !dbg !14903
  %shr.i132 = lshr i32 %32, 8, !dbg !14904
  %and1.i = and i32 %shr.i132, 255, !dbg !14905
  %or.i = or i32 %and.i131, %and1.i, !dbg !14906
  %shl2.i = shl i32 %or.i, 16, !dbg !14907
  %33 = load i32, i32* %x.addr.i, align 4, !dbg !14908
  %shr3.i = lshr i32 %33, 16, !dbg !14909
  %shl4.i = shl i32 %shr3.i, 8, !dbg !14910
  %and5.i = and i32 %shl4.i, 65280, !dbg !14911
  %34 = load i32, i32* %x.addr.i, align 4, !dbg !14912
  %shr6.i = lshr i32 %34, 16, !dbg !14913
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !14914
  %and8.i = and i32 %shr7.i, 255, !dbg !14915
  %or9.i = or i32 %and5.i, %and8.i, !dbg !14916
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !14917
  %35 = load i32, i32* %re_index, align 4, !dbg !14918
  %and = and i32 %35, 7, !dbg !14919
  %shl = shl i32 %or10.i, %and, !dbg !14920
  store i32 %shl, i32* %re_cache, align 4, !dbg !14921
  br label %do.body12, !dbg !14922, !llvm.loop !14923

do.body12:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i32* %n, metadata !14924, metadata !2073), !dbg !14925
  call void @llvm.dbg.declare(metadata i32* %nb_bits, metadata !14926, metadata !2073), !dbg !14927
  call void @llvm.dbg.declare(metadata i32* %index13, metadata !14928, metadata !2073), !dbg !14929
  %36 = load i32, i32* %re_cache, align 4, !dbg !14930
  %call14 = call i32 @NEG_USR32(i32 %36, i8 signext 9), !dbg !14932
  store i32 %call14, i32* %index13, align 4, !dbg !14933
  %37 = load i32, i32* %index13, align 4, !dbg !14934
  %idxprom15 = zext i32 %37 to i64, !dbg !14935
  %38 = load i32, i32* %ac_index.addr, align 4, !dbg !14936
  %idxprom16 = sext i32 %38 to i64, !dbg !14935
  %39 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14935
  %vlcs = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %39, i32 0, i32 8, !dbg !14937
  %arrayidx17 = getelementptr inbounds [3 x [4 x %struct.VLC]], [3 x [4 x %struct.VLC]]* %vlcs, i64 0, i64 1, !dbg !14935
  %arrayidx18 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* %arrayidx17, i64 0, i64 %idxprom16, !dbg !14935
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx18, i32 0, i32 1, !dbg !14938
  %40 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !14938
  %arrayidx19 = getelementptr inbounds [2 x i16], [2 x i16]* %40, i64 %idxprom15, !dbg !14935
  %arrayidx20 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx19, i64 0, i64 0, !dbg !14935
  %41 = load i16, i16* %arrayidx20, align 2, !dbg !14935
  %conv21 = sext i16 %41 to i32, !dbg !14935
  store i32 %conv21, i32* %code, align 4, !dbg !14939
  %42 = load i32, i32* %index13, align 4, !dbg !14940
  %idxprom22 = zext i32 %42 to i64, !dbg !14941
  %43 = load i32, i32* %ac_index.addr, align 4, !dbg !14942
  %idxprom23 = sext i32 %43 to i64, !dbg !14941
  %44 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14941
  %vlcs24 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %44, i32 0, i32 8, !dbg !14943
  %arrayidx25 = getelementptr inbounds [3 x [4 x %struct.VLC]], [3 x [4 x %struct.VLC]]* %vlcs24, i64 0, i64 1, !dbg !14941
  %arrayidx26 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* %arrayidx25, i64 0, i64 %idxprom23, !dbg !14941
  %table27 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx26, i32 0, i32 1, !dbg !14944
  %45 = load [2 x i16]*, [2 x i16]** %table27, align 8, !dbg !14944
  %arrayidx28 = getelementptr inbounds [2 x i16], [2 x i16]* %45, i64 %idxprom22, !dbg !14941
  %arrayidx29 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx28, i64 0, i64 1, !dbg !14941
  %46 = load i16, i16* %arrayidx29, align 2, !dbg !14941
  %conv30 = sext i16 %46 to i32, !dbg !14941
  store i32 %conv30, i32* %n, align 4, !dbg !14945
  %47 = load i32, i32* %n, align 4, !dbg !14946
  %cmp31 = icmp slt i32 %47, 0, !dbg !14947
  br i1 %cmp31, label %if.then33, label %if.end68, !dbg !14948

if.then33:                                        ; preds = %do.body12
  %48 = load i32, i32* %re_size_plus8, align 4, !dbg !14949
  %49 = load i32, i32* %re_index, align 4, !dbg !14951
  %add34 = add i32 %49, 9, !dbg !14952
  %cmp35 = icmp ugt i32 %48, %add34, !dbg !14953
  br i1 %cmp35, label %cond.true, label %cond.false, !dbg !14954

cond.true:                                        ; preds = %if.then33
  %50 = load i32, i32* %re_index, align 4, !dbg !14955
  %add37 = add i32 %50, 9, !dbg !14957
  br label %cond.end, !dbg !14958

cond.false:                                       ; preds = %if.then33
  %51 = load i32, i32* %re_size_plus8, align 4, !dbg !14959
  br label %cond.end, !dbg !14961

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add37, %cond.true ], [ %51, %cond.false ], !dbg !14962
  store i32 %cond, i32* %re_index, align 4, !dbg !14963
  %52 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !14964
  %gb38 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %52, i32 0, i32 2, !dbg !14965
  %buffer39 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb38, i32 0, i32 0, !dbg !14966
  %53 = load i8*, i8** %buffer39, align 16, !dbg !14966
  %54 = load i32, i32* %re_index, align 4, !dbg !14967
  %shr40 = lshr i32 %54, 3, !dbg !14968
  %idx.ext41 = zext i32 %shr40 to i64, !dbg !14969
  %add.ptr42 = getelementptr inbounds i8, i8* %53, i64 %idx.ext41, !dbg !14969
  %55 = bitcast i8* %add.ptr42 to %union.unaligned_32*, !dbg !14970
  %l43 = bitcast %union.unaligned_32* %55 to i32*, !dbg !14970
  %56 = load i32, i32* %l43, align 1, !dbg !14970
  store i32 %56, i32* %x.addr.i148, align 4, !dbg !14971
  %57 = load i32, i32* %x.addr.i148, align 4, !dbg !14972
  %shl.i149 = shl i32 %57, 8, !dbg !14973
  %and.i150 = and i32 %shl.i149, 65280, !dbg !14974
  %58 = load i32, i32* %x.addr.i148, align 4, !dbg !14975
  %shr.i151 = lshr i32 %58, 8, !dbg !14976
  %and1.i152 = and i32 %shr.i151, 255, !dbg !14977
  %or.i153 = or i32 %and.i150, %and1.i152, !dbg !14978
  %shl2.i154 = shl i32 %or.i153, 16, !dbg !14979
  %59 = load i32, i32* %x.addr.i148, align 4, !dbg !14980
  %shr3.i155 = lshr i32 %59, 16, !dbg !14981
  %shl4.i156 = shl i32 %shr3.i155, 8, !dbg !14982
  %and5.i157 = and i32 %shl4.i156, 65280, !dbg !14983
  %60 = load i32, i32* %x.addr.i148, align 4, !dbg !14984
  %shr6.i158 = lshr i32 %60, 16, !dbg !14985
  %shr7.i159 = lshr i32 %shr6.i158, 8, !dbg !14986
  %and8.i160 = and i32 %shr7.i159, 255, !dbg !14987
  %or9.i161 = or i32 %and5.i157, %and8.i160, !dbg !14988
  %or10.i162 = or i32 %shl2.i154, %or9.i161, !dbg !14989
  %61 = load i32, i32* %re_index, align 4, !dbg !14990
  %and45 = and i32 %61, 7, !dbg !14991
  %shl46 = shl i32 %or10.i162, %and45, !dbg !14992
  store i32 %shl46, i32* %re_cache, align 4, !dbg !14993
  %62 = load i32, i32* %n, align 4, !dbg !14994
  %sub = sub nsw i32 0, %62, !dbg !14995
  store i32 %sub, i32* %nb_bits, align 4, !dbg !14996
  %63 = load i32, i32* %re_cache, align 4, !dbg !14997
  %64 = load i32, i32* %nb_bits, align 4, !dbg !14998
  %conv47 = trunc i32 %64 to i8, !dbg !14998
  %call48 = call i32 @NEG_USR32(i32 %63, i8 signext %conv47), !dbg !14999
  %65 = load i32, i32* %code, align 4, !dbg !15001
  %add49 = add i32 %call48, %65, !dbg !15002
  store i32 %add49, i32* %index13, align 4, !dbg !15003
  %66 = load i32, i32* %index13, align 4, !dbg !15004
  %idxprom50 = zext i32 %66 to i64, !dbg !15005
  %67 = load i32, i32* %ac_index.addr, align 4, !dbg !15006
  %idxprom51 = sext i32 %67 to i64, !dbg !15005
  %68 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !15005
  %vlcs52 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %68, i32 0, i32 8, !dbg !15007
  %arrayidx53 = getelementptr inbounds [3 x [4 x %struct.VLC]], [3 x [4 x %struct.VLC]]* %vlcs52, i64 0, i64 1, !dbg !15005
  %arrayidx54 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* %arrayidx53, i64 0, i64 %idxprom51, !dbg !15005
  %table55 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx54, i32 0, i32 1, !dbg !15008
  %69 = load [2 x i16]*, [2 x i16]** %table55, align 8, !dbg !15008
  %arrayidx56 = getelementptr inbounds [2 x i16], [2 x i16]* %69, i64 %idxprom50, !dbg !15005
  %arrayidx57 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx56, i64 0, i64 0, !dbg !15005
  %70 = load i16, i16* %arrayidx57, align 2, !dbg !15005
  %conv58 = sext i16 %70 to i32, !dbg !15005
  store i32 %conv58, i32* %code, align 4, !dbg !15009
  %71 = load i32, i32* %index13, align 4, !dbg !15010
  %idxprom59 = zext i32 %71 to i64, !dbg !15011
  %72 = load i32, i32* %ac_index.addr, align 4, !dbg !15012
  %idxprom60 = sext i32 %72 to i64, !dbg !15011
  %73 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !15011
  %vlcs61 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %73, i32 0, i32 8, !dbg !15013
  %arrayidx62 = getelementptr inbounds [3 x [4 x %struct.VLC]], [3 x [4 x %struct.VLC]]* %vlcs61, i64 0, i64 1, !dbg !15011
  %arrayidx63 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* %arrayidx62, i64 0, i64 %idxprom60, !dbg !15011
  %table64 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx63, i32 0, i32 1, !dbg !15014
  %74 = load [2 x i16]*, [2 x i16]** %table64, align 8, !dbg !15014
  %arrayidx65 = getelementptr inbounds [2 x i16], [2 x i16]* %74, i64 %idxprom59, !dbg !15011
  %arrayidx66 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65, i64 0, i64 1, !dbg !15011
  %75 = load i16, i16* %arrayidx66, align 2, !dbg !15011
  %conv67 = sext i16 %75 to i32, !dbg !15011
  store i32 %conv67, i32* %n, align 4, !dbg !15015
  br label %if.end68, !dbg !15016

if.end68:                                         ; preds = %cond.end, %do.body12
  br label %do.body69, !dbg !15017, !llvm.loop !15019

do.body69:                                        ; preds = %if.end68
  %76 = load i32, i32* %n, align 4, !dbg !15021
  %77 = load i32, i32* %re_cache, align 4, !dbg !15024
  %shl70 = shl i32 %77, %76, !dbg !15024
  store i32 %shl70, i32* %re_cache, align 4, !dbg !15024
  %78 = load i32, i32* %re_size_plus8, align 4, !dbg !15025
  %79 = load i32, i32* %re_index, align 4, !dbg !15026
  %80 = load i32, i32* %n, align 4, !dbg !15027
  %add71 = add i32 %79, %80, !dbg !15028
  %cmp72 = icmp ugt i32 %78, %add71, !dbg !15029
  br i1 %cmp72, label %cond.true74, label %cond.false76, !dbg !15030

cond.true74:                                      ; preds = %do.body69
  %81 = load i32, i32* %re_index, align 4, !dbg !15031
  %82 = load i32, i32* %n, align 4, !dbg !15033
  %add75 = add i32 %81, %82, !dbg !15034
  br label %cond.end77, !dbg !15035

cond.false76:                                     ; preds = %do.body69
  %83 = load i32, i32* %re_size_plus8, align 4, !dbg !15036
  br label %cond.end77, !dbg !15038

cond.end77:                                       ; preds = %cond.false76, %cond.true74
  %cond78 = phi i32 [ %add75, %cond.true74 ], [ %83, %cond.false76 ], !dbg !15039
  store i32 %cond78, i32* %re_index, align 4, !dbg !15041
  br label %do.end, !dbg !15042

do.end:                                           ; preds = %cond.end77
  br label %do.end79, !dbg !15043

do.end79:                                         ; preds = %do.end
  %84 = load i32, i32* %code, align 4, !dbg !15045
  %shr80 = lshr i32 %84, 4, !dbg !15046
  %85 = load i32, i32* %i, align 4, !dbg !15047
  %add81 = add i32 %85, %shr80, !dbg !15047
  store i32 %add81, i32* %i, align 4, !dbg !15047
  %86 = load i32, i32* %code, align 4, !dbg !15048
  %and82 = and i32 %86, 15, !dbg !15048
  store i32 %and82, i32* %code, align 4, !dbg !15048
  %87 = load i32, i32* %code, align 4, !dbg !15049
  %tobool = icmp ne i32 %87, 0, !dbg !15049
  br i1 %tobool, label %if.then83, label %if.end125, !dbg !15050

if.then83:                                        ; preds = %do.end79
  %88 = load i32, i32* %code, align 4, !dbg !15051
  %cmp84 = icmp sgt i32 %88, 9, !dbg !15052
  br i1 %cmp84, label %if.then86, label %if.end96, !dbg !15053

if.then86:                                        ; preds = %if.then83
  %89 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !15054
  %gb87 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %89, i32 0, i32 2, !dbg !15055
  %buffer88 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb87, i32 0, i32 0, !dbg !15056
  %90 = load i8*, i8** %buffer88, align 16, !dbg !15056
  %91 = load i32, i32* %re_index, align 4, !dbg !15057
  %shr89 = lshr i32 %91, 3, !dbg !15058
  %idx.ext90 = zext i32 %shr89 to i64, !dbg !15059
  %add.ptr91 = getelementptr inbounds i8, i8* %90, i64 %idx.ext90, !dbg !15059
  %92 = bitcast i8* %add.ptr91 to %union.unaligned_32*, !dbg !15060
  %l92 = bitcast %union.unaligned_32* %92 to i32*, !dbg !15060
  %93 = load i32, i32* %l92, align 1, !dbg !15060
  store i32 %93, i32* %x.addr.i133, align 4, !dbg !15061
  %94 = load i32, i32* %x.addr.i133, align 4, !dbg !15062
  %shl.i134 = shl i32 %94, 8, !dbg !15063
  %and.i135 = and i32 %shl.i134, 65280, !dbg !15064
  %95 = load i32, i32* %x.addr.i133, align 4, !dbg !15065
  %shr.i136 = lshr i32 %95, 8, !dbg !15066
  %and1.i137 = and i32 %shr.i136, 255, !dbg !15067
  %or.i138 = or i32 %and.i135, %and1.i137, !dbg !15068
  %shl2.i139 = shl i32 %or.i138, 16, !dbg !15069
  %96 = load i32, i32* %x.addr.i133, align 4, !dbg !15070
  %shr3.i140 = lshr i32 %96, 16, !dbg !15071
  %shl4.i141 = shl i32 %shr3.i140, 8, !dbg !15072
  %and5.i142 = and i32 %shl4.i141, 65280, !dbg !15073
  %97 = load i32, i32* %x.addr.i133, align 4, !dbg !15074
  %shr6.i143 = lshr i32 %97, 16, !dbg !15075
  %shr7.i144 = lshr i32 %shr6.i143, 8, !dbg !15076
  %and8.i145 = and i32 %shr7.i144, 255, !dbg !15077
  %or9.i146 = or i32 %and5.i142, %and8.i145, !dbg !15078
  %or10.i147 = or i32 %shl2.i139, %or9.i146, !dbg !15079
  %98 = load i32, i32* %re_index, align 4, !dbg !15080
  %and94 = and i32 %98, 7, !dbg !15081
  %shl95 = shl i32 %or10.i147, %and94, !dbg !15082
  store i32 %shl95, i32* %re_cache, align 4, !dbg !15083
  br label %if.end96, !dbg !15084

if.end96:                                         ; preds = %if.then86, %if.then83
  call void @llvm.dbg.declare(metadata i32* %cache, metadata !15085, metadata !2073), !dbg !15087
  %99 = load i32, i32* %re_cache, align 4, !dbg !15088
  store i32 %99, i32* %cache, align 4, !dbg !15087
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !15089, metadata !2073), !dbg !15090
  %100 = load i32, i32* %cache, align 4, !dbg !15091
  %neg = xor i32 %100, -1, !dbg !15092
  %shr97 = ashr i32 %neg, 31, !dbg !15093
  store i32 %shr97, i32* %sign, align 4, !dbg !15090
  %101 = load i32, i32* %sign, align 4, !dbg !15094
  %102 = load i32, i32* %cache, align 4, !dbg !15095
  %xor = xor i32 %101, %102, !dbg !15096
  %103 = load i32, i32* %code, align 4, !dbg !15097
  %conv98 = trunc i32 %103 to i8, !dbg !15097
  %call99 = call i32 @NEG_USR32(i32 %xor, i8 signext %conv98), !dbg !15098
  %104 = load i32, i32* %sign, align 4, !dbg !15099
  %xor100 = xor i32 %call99, %104, !dbg !15100
  %105 = load i32, i32* %sign, align 4, !dbg !15101
  %sub101 = sub i32 %xor100, %105, !dbg !15102
  store i32 %sub101, i32* %level, align 4, !dbg !15103
  %106 = load i32, i32* %re_size_plus8, align 4, !dbg !15104
  %107 = load i32, i32* %re_index, align 4, !dbg !15105
  %108 = load i32, i32* %code, align 4, !dbg !15106
  %add102 = add i32 %107, %108, !dbg !15107
  %cmp103 = icmp ugt i32 %106, %add102, !dbg !15108
  br i1 %cmp103, label %cond.true105, label %cond.false107, !dbg !15109

cond.true105:                                     ; preds = %if.end96
  %109 = load i32, i32* %re_index, align 4, !dbg !15110
  %110 = load i32, i32* %code, align 4, !dbg !15112
  %add106 = add i32 %109, %110, !dbg !15113
  br label %cond.end108, !dbg !15114

cond.false107:                                    ; preds = %if.end96
  %111 = load i32, i32* %re_size_plus8, align 4, !dbg !15115
  br label %cond.end108, !dbg !15117

cond.end108:                                      ; preds = %cond.false107, %cond.true105
  %cond109 = phi i32 [ %add106, %cond.true105 ], [ %111, %cond.false107 ], !dbg !15118
  store i32 %cond109, i32* %re_index, align 4, !dbg !15120
  %112 = load i32, i32* %i, align 4, !dbg !15121
  %cmp110 = icmp sgt i32 %112, 63, !dbg !15123
  br i1 %cmp110, label %if.then112, label %if.end114, !dbg !15124

if.then112:                                       ; preds = %cond.end108
  %113 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !15125
  %avctx113 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %113, i32 0, i32 1, !dbg !15127
  %114 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx113, align 8, !dbg !15127
  %115 = bitcast %struct.AVCodecContext* %114 to i8*, !dbg !15125
  %116 = load i32, i32* %i, align 4, !dbg !15128
  call void (i8*, i32, i8*, ...) @av_log(i8* %115, i32 16, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.88, i32 0, i32 0), i32 %116), !dbg !15129
  store i32 -1094995529, i32* %retval, align 4, !dbg !15130
  br label %return, !dbg !15130

if.end114:                                        ; preds = %cond.end108
  %117 = load i32, i32* %i, align 4, !dbg !15131
  %idxprom115 = sext i32 %117 to i64, !dbg !15132
  %118 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !15132
  %scantable = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %118, i32 0, i32 63, !dbg !15133
  %permutated = getelementptr inbounds %struct.ScanTable, %struct.ScanTable* %scantable, i32 0, i32 1, !dbg !15134
  %arrayidx116 = getelementptr inbounds [64 x i8], [64 x i8]* %permutated, i64 0, i64 %idxprom115, !dbg !15132
  %119 = load i8, i8* %arrayidx116, align 1, !dbg !15132
  %conv117 = zext i8 %119 to i32, !dbg !15132
  store i32 %conv117, i32* %j, align 4, !dbg !15135
  %120 = load i32, i32* %level, align 4, !dbg !15136
  %121 = load i32, i32* %i, align 4, !dbg !15137
  %idxprom118 = sext i32 %121 to i64, !dbg !15138
  %122 = load i16*, i16** %quant_matrix.addr, align 8, !dbg !15138
  %arrayidx119 = getelementptr inbounds i16, i16* %122, i64 %idxprom118, !dbg !15138
  %123 = load i16, i16* %arrayidx119, align 2, !dbg !15138
  %conv120 = zext i16 %123 to i32, !dbg !15138
  %mul121 = mul nsw i32 %120, %conv120, !dbg !15139
  %conv122 = trunc i32 %mul121 to i16, !dbg !15136
  %124 = load i32, i32* %j, align 4, !dbg !15140
  %idxprom123 = sext i32 %124 to i64, !dbg !15141
  %125 = load i16*, i16** %block.addr, align 8, !dbg !15141
  %arrayidx124 = getelementptr inbounds i16, i16* %125, i64 %idxprom123, !dbg !15141
  store i16 %conv122, i16* %arrayidx124, align 2, !dbg !15142
  br label %if.end125, !dbg !15143

if.end125:                                        ; preds = %if.end114, %do.end79
  br label %do.cond, !dbg !15144

do.cond:                                          ; preds = %if.end125
  %126 = load i32, i32* %i, align 4, !dbg !15145
  %cmp126 = icmp slt i32 %126, 63, !dbg !15147
  br i1 %cmp126, label %do.body, label %do.end128, !dbg !15148, !llvm.loop !14891

do.end128:                                        ; preds = %do.cond
  %127 = load i32, i32* %re_index, align 4, !dbg !15149
  %128 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !15150
  %gb129 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %128, i32 0, i32 2, !dbg !15151
  %index130 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb129, i32 0, i32 2, !dbg !15152
  store i32 %127, i32* %index130, align 16, !dbg !15153
  store i32 0, i32* %retval, align 4, !dbg !15154
  br label %return, !dbg !15154

return:                                           ; preds = %do.end128, %if.then112, %if.then
  %129 = load i32, i32* %retval, align 4, !dbg !15155
  ret i32 %129, !dbg !15155
}

; Function Attrs: nounwind uwtable
define internal void @shift_output(%struct.MJpegDecodeContext* %s, i8* %ptr, i32 %linesize) #3 !dbg !15156 {
entry:
  %s.addr = alloca %struct.MJpegDecodeContext*, align 8
  %ptr.addr = alloca i8*, align 8
  %linesize.addr = alloca i32, align 4
  %block_x = alloca i32, align 4
  %block_y = alloca i32, align 4
  %size = alloca i32, align 4
  store %struct.MJpegDecodeContext* %s, %struct.MJpegDecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MJpegDecodeContext** %s.addr, metadata !15157, metadata !2073), !dbg !15158
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !15159, metadata !2073), !dbg !15160
  store i32 %linesize, i32* %linesize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %linesize.addr, metadata !15161, metadata !2073), !dbg !15162
  call void @llvm.dbg.declare(metadata i32* %block_x, metadata !15163, metadata !2073), !dbg !15164
  call void @llvm.dbg.declare(metadata i32* %block_y, metadata !15165, metadata !2073), !dbg !15166
  call void @llvm.dbg.declare(metadata i32* %size, metadata !15167, metadata !2073), !dbg !15168
  %0 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !15169
  %avctx = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %0, i32 0, i32 1, !dbg !15170
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !15170
  %lowres = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i32 0, i32 144, !dbg !15171
  %2 = load i32, i32* %lowres, align 8, !dbg !15171
  %shr = ashr i32 8, %2, !dbg !15172
  store i32 %shr, i32* %size, align 4, !dbg !15168
  %3 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !15173
  %bits = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %3, i32 0, i32 22, !dbg !15175
  %4 = load i32, i32* %bits, align 8, !dbg !15175
  %cmp = icmp sgt i32 %4, 8, !dbg !15176
  br i1 %cmp, label %if.then, label %if.else, !dbg !15177

if.then:                                          ; preds = %entry
  store i32 0, i32* %block_y, align 4, !dbg !15178
  br label %for.cond, !dbg !15181

for.cond:                                         ; preds = %for.inc10, %if.then
  %5 = load i32, i32* %block_y, align 4, !dbg !15182
  %6 = load i32, i32* %size, align 4, !dbg !15185
  %cmp1 = icmp slt i32 %5, %6, !dbg !15186
  br i1 %cmp1, label %for.body, label %for.end12, !dbg !15187

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %block_x, align 4, !dbg !15188
  br label %for.cond2, !dbg !15190

for.cond2:                                        ; preds = %for.inc, %for.body
  %7 = load i32, i32* %block_x, align 4, !dbg !15191
  %8 = load i32, i32* %size, align 4, !dbg !15194
  %cmp3 = icmp slt i32 %7, %8, !dbg !15195
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !15196

for.body4:                                        ; preds = %for.cond2
  %9 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !15197
  %bits5 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %9, i32 0, i32 22, !dbg !15198
  %10 = load i32, i32* %bits5, align 8, !dbg !15198
  %sub = sub nsw i32 16, %10, !dbg !15199
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !15200
  %12 = load i32, i32* %block_x, align 4, !dbg !15201
  %mul = mul nsw i32 2, %12, !dbg !15202
  %idx.ext = sext i32 %mul to i64, !dbg !15203
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %idx.ext, !dbg !15203
  %13 = load i32, i32* %block_y, align 4, !dbg !15204
  %14 = load i32, i32* %linesize.addr, align 4, !dbg !15205
  %mul6 = mul nsw i32 %13, %14, !dbg !15206
  %idx.ext7 = sext i32 %mul6 to i64, !dbg !15207
  %add.ptr8 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.ext7, !dbg !15207
  %15 = bitcast i8* %add.ptr8 to i16*, !dbg !15208
  %16 = load i16, i16* %15, align 2, !dbg !15209
  %conv = zext i16 %16 to i32, !dbg !15209
  %shl = shl i32 %conv, %sub, !dbg !15209
  %conv9 = trunc i32 %shl to i16, !dbg !15209
  store i16 %conv9, i16* %15, align 2, !dbg !15209
  br label %for.inc, !dbg !15208

for.inc:                                          ; preds = %for.body4
  %17 = load i32, i32* %block_x, align 4, !dbg !15210
  %inc = add nsw i32 %17, 1, !dbg !15210
  store i32 %inc, i32* %block_x, align 4, !dbg !15210
  br label %for.cond2, !dbg !15212, !llvm.loop !15213

for.end:                                          ; preds = %for.cond2
  br label %for.inc10, !dbg !15215

for.inc10:                                        ; preds = %for.end
  %18 = load i32, i32* %block_y, align 4, !dbg !15217
  %inc11 = add nsw i32 %18, 1, !dbg !15217
  store i32 %inc11, i32* %block_y, align 4, !dbg !15217
  br label %for.cond, !dbg !15219, !llvm.loop !15220

for.end12:                                        ; preds = %for.cond
  br label %if.end, !dbg !15222

if.else:                                          ; preds = %entry
  store i32 0, i32* %block_y, align 4, !dbg !15223
  br label %for.cond13, !dbg !15226

for.cond13:                                       ; preds = %for.inc34, %if.else
  %19 = load i32, i32* %block_y, align 4, !dbg !15227
  %20 = load i32, i32* %size, align 4, !dbg !15230
  %cmp14 = icmp slt i32 %19, %20, !dbg !15231
  br i1 %cmp14, label %for.body16, label %for.end36, !dbg !15232

for.body16:                                       ; preds = %for.cond13
  store i32 0, i32* %block_x, align 4, !dbg !15233
  br label %for.cond17, !dbg !15235

for.cond17:                                       ; preds = %for.inc31, %for.body16
  %21 = load i32, i32* %block_x, align 4, !dbg !15236
  %22 = load i32, i32* %size, align 4, !dbg !15239
  %cmp18 = icmp slt i32 %21, %22, !dbg !15240
  br i1 %cmp18, label %for.body20, label %for.end33, !dbg !15241

for.body20:                                       ; preds = %for.cond17
  %23 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !15242
  %bits21 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %23, i32 0, i32 22, !dbg !15243
  %24 = load i32, i32* %bits21, align 8, !dbg !15243
  %sub22 = sub nsw i32 8, %24, !dbg !15244
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !15245
  %26 = load i32, i32* %block_x, align 4, !dbg !15246
  %idx.ext23 = sext i32 %26 to i64, !dbg !15247
  %add.ptr24 = getelementptr inbounds i8, i8* %25, i64 %idx.ext23, !dbg !15247
  %27 = load i32, i32* %block_y, align 4, !dbg !15248
  %28 = load i32, i32* %linesize.addr, align 4, !dbg !15249
  %mul25 = mul nsw i32 %27, %28, !dbg !15250
  %idx.ext26 = sext i32 %mul25 to i64, !dbg !15251
  %add.ptr27 = getelementptr inbounds i8, i8* %add.ptr24, i64 %idx.ext26, !dbg !15251
  %29 = load i8, i8* %add.ptr27, align 1, !dbg !15252
  %conv28 = zext i8 %29 to i32, !dbg !15252
  %shl29 = shl i32 %conv28, %sub22, !dbg !15252
  %conv30 = trunc i32 %shl29 to i8, !dbg !15252
  store i8 %conv30, i8* %add.ptr27, align 1, !dbg !15252
  br label %for.inc31, !dbg !15253

for.inc31:                                        ; preds = %for.body20
  %30 = load i32, i32* %block_x, align 4, !dbg !15254
  %inc32 = add nsw i32 %30, 1, !dbg !15254
  store i32 %inc32, i32* %block_x, align 4, !dbg !15254
  br label %for.cond17, !dbg !15256, !llvm.loop !15257

for.end33:                                        ; preds = %for.cond17
  br label %for.inc34, !dbg !15259

for.inc34:                                        ; preds = %for.end33
  %31 = load i32, i32* %block_y, align 4, !dbg !15261
  %inc35 = add nsw i32 %31, 1, !dbg !15261
  store i32 %inc35, i32* %block_y, align 4, !dbg !15261
  br label %for.cond13, !dbg !15263, !llvm.loop !15264

for.end36:                                        ; preds = %for.cond13
  br label %if.end

if.end:                                           ; preds = %for.end36, %for.end12
  ret void, !dbg !15266
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_dc_progressive(%struct.MJpegDecodeContext* %s, i16* %block, i32 %component, i32 %dc_index, i16* %quant_matrix, i32 %Al) #3 !dbg !15267 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.MJpegDecodeContext*, align 8
  %block.addr = alloca i16*, align 8
  %component.addr = alloca i32, align 4
  %dc_index.addr = alloca i32, align 4
  %quant_matrix.addr = alloca i16*, align 8
  %Al.addr = alloca i32, align 4
  %val = alloca i32, align 4
  store %struct.MJpegDecodeContext* %s, %struct.MJpegDecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MJpegDecodeContext** %s.addr, metadata !15270, metadata !2073), !dbg !15271
  store i16* %block, i16** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %block.addr, metadata !15272, metadata !2073), !dbg !15273
  store i32 %component, i32* %component.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %component.addr, metadata !15274, metadata !2073), !dbg !15275
  store i32 %dc_index, i32* %dc_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dc_index.addr, metadata !15276, metadata !2073), !dbg !15277
  store i16* %quant_matrix, i16** %quant_matrix.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %quant_matrix.addr, metadata !15278, metadata !2073), !dbg !15279
  store i32 %Al, i32* %Al.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %Al.addr, metadata !15280, metadata !2073), !dbg !15281
  call void @llvm.dbg.declare(metadata i32* %val, metadata !15282, metadata !2073), !dbg !15283
  %0 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !15284
  %bdsp = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %0, i32 0, i32 64, !dbg !15285
  %clear_block = getelementptr inbounds %struct.BlockDSPContext, %struct.BlockDSPContext* %bdsp, i32 0, i32 0, !dbg !15286
  %1 = load void (i16*)*, void (i16*)** %clear_block, align 16, !dbg !15286
  %2 = load i16*, i16** %block.addr, align 8, !dbg !15287
  call void %1(i16* %2), !dbg !15284
  %3 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !15288
  %4 = load i32, i32* %dc_index.addr, align 4, !dbg !15289
  %call = call i32 @mjpeg_decode_dc(%struct.MJpegDecodeContext* %3, i32 %4), !dbg !15290
  store i32 %call, i32* %val, align 4, !dbg !15291
  %5 = load i32, i32* %val, align 4, !dbg !15292
  %cmp = icmp eq i32 %5, 1048575, !dbg !15294
  br i1 %cmp, label %if.then, label %if.end, !dbg !15295

if.then:                                          ; preds = %entry
  %6 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !15296
  %avctx = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %6, i32 0, i32 1, !dbg !15298
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !15298
  %8 = bitcast %struct.AVCodecContext* %7 to i8*, !dbg !15296
  call void (i8*, i32, i8*, ...) @av_log(i8* %8, i32 16, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.92, i32 0, i32 0)), !dbg !15299
  store i32 -1094995529, i32* %retval, align 4, !dbg !15300
  br label %return, !dbg !15300

if.end:                                           ; preds = %entry
  %9 = load i32, i32* %val, align 4, !dbg !15301
  %10 = load i16*, i16** %quant_matrix.addr, align 8, !dbg !15302
  %arrayidx = getelementptr inbounds i16, i16* %10, i64 0, !dbg !15302
  %11 = load i16, i16* %arrayidx, align 2, !dbg !15302
  %conv = zext i16 %11 to i32, !dbg !15302
  %12 = load i32, i32* %Al.addr, align 4, !dbg !15303
  %shl = shl i32 %conv, %12, !dbg !15304
  %mul = mul i32 %9, %shl, !dbg !15305
  %13 = load i32, i32* %component.addr, align 4, !dbg !15306
  %idxprom = sext i32 %13 to i64, !dbg !15307
  %14 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !15307
  %last_dc = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %14, i32 0, i32 51, !dbg !15308
  %arrayidx1 = getelementptr inbounds [4 x i32], [4 x i32]* %last_dc, i64 0, i64 %idxprom, !dbg !15307
  %15 = load i32, i32* %arrayidx1, align 4, !dbg !15307
  %add = add i32 %mul, %15, !dbg !15309
  store i32 %add, i32* %val, align 4, !dbg !15310
  %16 = load i32, i32* %val, align 4, !dbg !15311
  %17 = load i32, i32* %component.addr, align 4, !dbg !15312
  %idxprom2 = sext i32 %17 to i64, !dbg !15313
  %18 = load %struct.MJpegDecodeContext*, %struct.MJpegDecodeContext** %s.addr, align 8, !dbg !15313
  %last_dc3 = getelementptr inbounds %struct.MJpegDecodeContext, %struct.MJpegDecodeContext* %18, i32 0, i32 51, !dbg !15314
  %arrayidx4 = getelementptr inbounds [4 x i32], [4 x i32]* %last_dc3, i64 0, i64 %idxprom2, !dbg !15313
  store i32 %16, i32* %arrayidx4, align 4, !dbg !15315
  %19 = load i32, i32* %val, align 4, !dbg !15316
  %conv5 = trunc i32 %19 to i16, !dbg !15316
  %20 = load i16*, i16** %block.addr, align 8, !dbg !15317
  %arrayidx6 = getelementptr inbounds i16, i16* %20, i64 0, !dbg !15317
  store i16 %conv5, i16* %arrayidx6, align 2, !dbg !15318
  store i32 0, i32* %retval, align 4, !dbg !15319
  br label %return, !dbg !15319

return:                                           ; preds = %if.end, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !15320
  ret i32 %21, !dbg !15320
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @copy_block4(i8* %dst, i8* %src, i64 %dstStride, i64 %srcStride, i32 %h) #4 !dbg !15321 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %dstStride.addr = alloca i64, align 8
  %srcStride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !15325, metadata !2073), !dbg !15326
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !15327, metadata !2073), !dbg !15328
  store i64 %dstStride, i64* %dstStride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dstStride.addr, metadata !15329, metadata !2073), !dbg !15330
  store i64 %srcStride, i64* %srcStride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %srcStride.addr, metadata !15331, metadata !2073), !dbg !15332
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !15333, metadata !2073), !dbg !15334
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15335, metadata !2073), !dbg !15336
  store i32 0, i32* %i, align 4, !dbg !15337
  br label %for.cond, !dbg !15339

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !15340
  %1 = load i32, i32* %h.addr, align 4, !dbg !15343
  %cmp = icmp slt i32 %0, %1, !dbg !15344
  br i1 %cmp, label %for.body, label %for.end, !dbg !15345

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %src.addr, align 8, !dbg !15346
  %3 = bitcast i8* %2 to %union.unaligned_32*, !dbg !15348
  %l = bitcast %union.unaligned_32* %3 to i32*, !dbg !15348
  %4 = load i32, i32* %l, align 1, !dbg !15348
  %5 = load i8*, i8** %dst.addr, align 8, !dbg !15349
  %6 = bitcast i8* %5 to %union.unaligned_32*, !dbg !15350
  %l1 = bitcast %union.unaligned_32* %6 to i32*, !dbg !15350
  store i32 %4, i32* %l1, align 1, !dbg !15351
  %7 = load i64, i64* %dstStride.addr, align 8, !dbg !15352
  %8 = load i8*, i8** %dst.addr, align 8, !dbg !15353
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %7, !dbg !15353
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !15353
  %9 = load i64, i64* %srcStride.addr, align 8, !dbg !15354
  %10 = load i8*, i8** %src.addr, align 8, !dbg !15355
  %add.ptr2 = getelementptr inbounds i8, i8* %10, i64 %9, !dbg !15355
  store i8* %add.ptr2, i8** %src.addr, align 8, !dbg !15355
  br label %for.inc, !dbg !15356

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !15357
  %inc = add nsw i32 %11, 1, !dbg !15357
  store i32 %inc, i32* %i, align 4, !dbg !15357
  br label %for.cond, !dbg !15359, !llvm.loop !15360

for.end:                                          ; preds = %for.cond
  ret void, !dbg !15362
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @copy_block2(i8* %dst, i8* %src, i64 %dstStride, i64 %srcStride, i32 %h) #4 !dbg !15363 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %dstStride.addr = alloca i64, align 8
  %srcStride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !15364, metadata !2073), !dbg !15365
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !15366, metadata !2073), !dbg !15367
  store i64 %dstStride, i64* %dstStride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dstStride.addr, metadata !15368, metadata !2073), !dbg !15369
  store i64 %srcStride, i64* %srcStride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %srcStride.addr, metadata !15370, metadata !2073), !dbg !15371
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !15372, metadata !2073), !dbg !15373
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15374, metadata !2073), !dbg !15375
  store i32 0, i32* %i, align 4, !dbg !15376
  br label %for.cond, !dbg !15378

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !15379
  %1 = load i32, i32* %h.addr, align 4, !dbg !15382
  %cmp = icmp slt i32 %0, %1, !dbg !15383
  br i1 %cmp, label %for.body, label %for.end, !dbg !15384

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %src.addr, align 8, !dbg !15385
  %3 = bitcast i8* %2 to %union.unaligned_16*, !dbg !15387
  %l = bitcast %union.unaligned_16* %3 to i16*, !dbg !15387
  %4 = load i16, i16* %l, align 1, !dbg !15387
  %5 = load i8*, i8** %dst.addr, align 8, !dbg !15388
  %6 = bitcast i8* %5 to %union.unaligned_16*, !dbg !15389
  %l1 = bitcast %union.unaligned_16* %6 to i16*, !dbg !15389
  store i16 %4, i16* %l1, align 1, !dbg !15390
  %7 = load i64, i64* %dstStride.addr, align 8, !dbg !15391
  %8 = load i8*, i8** %dst.addr, align 8, !dbg !15392
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %7, !dbg !15392
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !15392
  %9 = load i64, i64* %srcStride.addr, align 8, !dbg !15393
  %10 = load i8*, i8** %src.addr, align 8, !dbg !15394
  %add.ptr2 = getelementptr inbounds i8, i8* %10, i64 %9, !dbg !15394
  store i8* %add.ptr2, i8** %src.addr, align 8, !dbg !15394
  br label %for.inc, !dbg !15395

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !15396
  %inc = add nsw i32 %11, 1, !dbg !15396
  store i32 %inc, i32* %i, align 4, !dbg !15396
  br label %for.cond, !dbg !15398, !llvm.loop !15399

for.end:                                          ; preds = %for.cond
  ret void, !dbg !15401
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_long(%struct.GetBitContext* %s, i32 %n) #4 !dbg !15402 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !15403, metadata !2073), !dbg !15404
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15405, metadata !2073), !dbg !15406
  %0 = load i32, i32* %n.addr, align 4, !dbg !15407
  %tobool = icmp ne i32 %0, 0, !dbg !15407
  br i1 %tobool, label %if.else, label %if.then, !dbg !15409

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !15410
  br label %return, !dbg !15410

if.else:                                          ; preds = %entry
  %1 = load i32, i32* %n.addr, align 4, !dbg !15412
  %cmp = icmp sle i32 %1, 25, !dbg !15414
  br i1 %cmp, label %if.then1, label %if.else2, !dbg !15415

if.then1:                                         ; preds = %if.else
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !15416
  %3 = load i32, i32* %n.addr, align 4, !dbg !15418
  %call = call i32 @get_bits(%struct.GetBitContext* %2, i32 %3), !dbg !15419
  store i32 %call, i32* %retval, align 4, !dbg !15420
  br label %return, !dbg !15420

if.else2:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !15421, metadata !2073), !dbg !15423
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !15424
  %call3 = call i32 @get_bits(%struct.GetBitContext* %4, i32 16), !dbg !15425
  %5 = load i32, i32* %n.addr, align 4, !dbg !15426
  %sub = sub nsw i32 %5, 16, !dbg !15427
  %shl = shl i32 %call3, %sub, !dbg !15428
  store i32 %shl, i32* %ret, align 4, !dbg !15423
  %6 = load i32, i32* %ret, align 4, !dbg !15429
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !15430
  %8 = load i32, i32* %n.addr, align 4, !dbg !15431
  %sub4 = sub nsw i32 %8, 16, !dbg !15432
  %call5 = call i32 @get_bits(%struct.GetBitContext* %7, i32 %sub4), !dbg !15433
  %or = or i32 %6, %call5, !dbg !15434
  store i32 %or, i32* %retval, align 4, !dbg !15435
  br label %return, !dbg !15435

return:                                           ; preds = %if.else2, %if.then1, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !15436
  ret i32 %9, !dbg !15436
}

declare i8* @av_fourcc_make_string(i8*, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @show_bits_long(%struct.GetBitContext* %s, i32 %n) #4 !dbg !15437 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %gb = alloca %struct.GetBitContext, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !15438, metadata !2073), !dbg !15439
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15440, metadata !2073), !dbg !15441
  %0 = load i32, i32* %n.addr, align 4, !dbg !15442
  %cmp = icmp sle i32 %0, 25, !dbg !15444
  br i1 %cmp, label %if.then, label %if.else, !dbg !15445

if.then:                                          ; preds = %entry
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !15446
  %2 = load i32, i32* %n.addr, align 4, !dbg !15448
  %call = call i32 @show_bits(%struct.GetBitContext* %1, i32 %2), !dbg !15449
  store i32 %call, i32* %retval, align 4, !dbg !15450
  br label %return, !dbg !15450

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gb, metadata !15451, metadata !2073), !dbg !15453
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !15454
  %4 = bitcast %struct.GetBitContext* %gb to i8*, !dbg !15455
  %5 = bitcast %struct.GetBitContext* %3 to i8*, !dbg !15455
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %5, i64 32, i32 8, i1 false), !dbg !15455
  %6 = load i32, i32* %n.addr, align 4, !dbg !15456
  %call1 = call i32 @get_bits_long(%struct.GetBitContext* %gb, i32 %6), !dbg !15457
  store i32 %call1, i32* %retval, align 4, !dbg !15458
  br label %return, !dbg !15458

return:                                           ; preds = %if.else, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !15459
  ret i32 %7, !dbg !15459
}

declare %struct.AVStereo3D* @av_stereo3d_alloc() #2

declare i32 @ff_tdecode_header(%struct.GetByteContext*, i32*, i32*) #2

declare i32 @ff_exif_decode_ifd(i8*, %struct.GetByteContext*, i32, i32, %struct.AVDictionary**) #2

declare noalias i8* @av_malloc(i64) #2

declare i32 @av_strerror(i32, i8*, i64) #2

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #6

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #6

declare void @av_free(i8*) #2

declare i8* @av_default_item_name(i8*) #2

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2068, !2069}
!llvm.ident = !{!2070}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !1015, globals: !1148)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--mjpegdec.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2 = !{!3, !25, !46, !56, !516, !716, !733, !739, !769, !779, !803, !809, !827, !851, !870, !880, !894, !902, !914, !923, !932, !943, !948}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !4, line: 221, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24}
!6 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!7 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!8 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!9 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!10 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!11 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!12 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!13 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!14 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!15 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!16 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!17 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!18 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!19 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!20 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!21 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!22 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!23 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!24 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!25 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !26, line: 29, size: 32, align: 32, elements: !27)
!26 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!27 = !{!28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45}
!28 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!29 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!30 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!31 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!32 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!33 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!34 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!35 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!36 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!37 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!38 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!39 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!40 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!41 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!42 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!43 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!44 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!45 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!46 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !47, line: 199, size: 32, align: 32, elements: !48)
!47 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!48 = !{!49, !50, !51, !52, !53, !54, !55}
!49 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!50 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!51 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!52 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!53 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!54 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!55 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!56 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !57, line: 215, size: 32, align: 32, elements: !58)
!57 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!58 = !{!59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515}
!59 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!60 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!61 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!62 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!63 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!64 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!65 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!66 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!67 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!68 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!69 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!70 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!71 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!72 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!73 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!74 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!75 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!76 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!77 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!78 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!79 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!80 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!81 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!82 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!83 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!84 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!85 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!86 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!87 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!88 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!89 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!90 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!91 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!93 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!94 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!95 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!96 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!97 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!98 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!99 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!100 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!101 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!102 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!103 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!104 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!105 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!106 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!107 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!108 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!109 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!110 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!111 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!112 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!113 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!114 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!115 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!116 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!117 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!118 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!119 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!120 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!121 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!122 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!123 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!124 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!125 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!126 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!127 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!128 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!129 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!130 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!131 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!132 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!133 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!134 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!135 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!136 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!137 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!138 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!139 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!140 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!141 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!142 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!143 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!144 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!145 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!146 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!147 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!148 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!149 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!150 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!151 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!152 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!153 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!154 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!155 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!156 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!157 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!158 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!159 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!160 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!161 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!162 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!163 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!164 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!165 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!166 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!167 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!168 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!169 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!170 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!171 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!172 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!173 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!174 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!175 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!176 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!177 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!178 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!179 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!180 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!181 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!182 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!183 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!184 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!185 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!186 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!187 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!188 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!189 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!190 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!191 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!192 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!193 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!194 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!195 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!196 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!197 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!198 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!199 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!200 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!201 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!202 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!203 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!204 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!205 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!206 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!207 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!208 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!209 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!210 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!211 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!212 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!213 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!214 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!215 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!216 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!217 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!218 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!219 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!220 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!221 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!222 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!223 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!224 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!225 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!226 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!227 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!228 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!229 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!230 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!231 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!232 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!233 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!234 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!235 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!236 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!237 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!238 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!239 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!240 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!241 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!242 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!243 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!244 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!245 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!246 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!247 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!248 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!249 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!250 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!251 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!252 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!253 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!254 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!255 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!256 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!257 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!258 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!259 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!260 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!261 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!262 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!263 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!264 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!265 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!266 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!267 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!268 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!269 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!270 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!271 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!272 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!273 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!276 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!277 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!278 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!279 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!280 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!281 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!282 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!283 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!284 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!285 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!286 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!287 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!288 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!289 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!290 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!291 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!292 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!293 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!295 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!296 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!297 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!298 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!299 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!300 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!301 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!302 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!303 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!304 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!305 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!306 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!307 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!308 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!309 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!310 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!311 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!312 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!313 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!314 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!315 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!316 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!317 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!318 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!319 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!320 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!321 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!322 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!323 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!324 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!325 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!326 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!327 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!328 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!329 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!330 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!331 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!332 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!333 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!335 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!336 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!337 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!338 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!339 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!340 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!341 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!342 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!343 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!344 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!345 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!346 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!347 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!348 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!349 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!350 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!351 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!352 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!353 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!354 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!355 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!356 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!357 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!358 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!359 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!360 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!361 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!362 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!363 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!364 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!365 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!366 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!367 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!368 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!369 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!370 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!372 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!373 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!374 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!375 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!376 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!377 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!378 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!379 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!380 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!381 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!382 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!383 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!384 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!385 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!386 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!387 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!388 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!389 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!390 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!391 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!392 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!393 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!394 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!395 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!396 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!397 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!398 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!400 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!401 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!402 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!403 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!404 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!405 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!406 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!407 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!408 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!409 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!410 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!411 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!412 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!413 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!414 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!415 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!416 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!417 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!418 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!419 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!420 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!421 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!422 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!423 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!424 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!425 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!426 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!427 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!428 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!429 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!430 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!431 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!432 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!433 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!434 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!435 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!436 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!437 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!438 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!439 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!440 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!441 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!442 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!443 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!444 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!445 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!446 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!447 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!448 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!449 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!450 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!451 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!452 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!453 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!454 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!455 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!456 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!457 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!458 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!459 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!460 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!461 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!462 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!463 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!464 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!465 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!466 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!467 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!468 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!469 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!470 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!471 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!472 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!473 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!474 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!475 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!476 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!477 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!478 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!479 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!480 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!481 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!482 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!483 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!484 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!485 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!486 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!487 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!488 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!489 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!490 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!491 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!492 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!493 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!494 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!495 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!496 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!497 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!498 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!499 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!500 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!501 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!502 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!503 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!504 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!505 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!506 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!507 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!508 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!509 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!510 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!511 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!512 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!513 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!514 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!515 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!516 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !517, line: 64, size: 32, align: 32, elements: !518)
!517 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!518 = !{!519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715}
!519 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!520 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!521 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!522 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!523 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!524 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!525 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!526 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!527 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!528 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!529 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!530 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!531 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!532 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!533 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!534 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!535 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!536 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!537 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!538 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!540 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!541 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!542 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!543 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!544 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!545 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!546 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!547 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!548 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!549 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!550 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!552 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!553 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!554 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!555 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!556 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!557 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!558 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!559 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!560 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!561 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!562 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!563 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!564 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!565 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!566 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!567 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!574 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!575 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!576 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!577 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!578 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!579 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!580 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!581 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!582 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!583 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!584 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!585 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!586 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!587 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!588 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!589 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!590 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!594 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!595 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!596 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!597 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!598 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!599 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!600 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!601 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!602 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!603 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!604 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!605 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!606 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!617 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!618 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!619 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!620 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!622 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!623 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!624 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!625 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!626 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!627 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!628 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!629 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!630 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!631 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!634 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!637 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!638 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!639 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!640 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!641 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!642 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!643 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!644 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!645 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!646 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!647 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!648 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!649 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!650 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!651 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!652 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!653 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!654 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!655 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!656 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!657 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!658 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!659 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!662 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!663 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!664 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!665 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!666 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!667 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!668 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!669 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!670 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!671 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!672 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!673 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!674 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!675 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!676 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!677 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!678 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!679 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!680 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!681 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!682 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!683 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!684 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!685 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!686 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!687 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!688 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!689 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!690 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!691 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!692 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!693 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!694 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!695 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!696 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!697 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!698 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!699 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!700 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!701 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!702 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!703 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!704 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!705 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!706 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!707 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!708 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!709 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!710 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!711 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!712 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!713 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!714 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!715 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!716 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !717, line: 58, size: 32, align: 32, elements: !718)
!717 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!718 = !{!719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732}
!719 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!720 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!721 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!722 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!723 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!724 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!725 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!726 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!727 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!728 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!729 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!730 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!731 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!732 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!733 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !57, line: 3865, size: 32, align: 32, elements: !734)
!734 = !{!735, !736, !737, !738}
!735 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!736 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!737 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!738 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!739 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !57, line: 1175, size: 32, align: 32, elements: !740)
!740 = !{!741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768}
!741 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!742 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!743 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!744 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!745 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!746 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!747 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!748 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!749 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!750 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!751 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!752 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!753 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!754 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!755 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!756 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!757 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!758 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!759 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!760 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!761 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!762 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!763 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!764 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!765 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!766 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!767 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!768 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!769 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !47, line: 272, size: 32, align: 32, elements: !770)
!770 = !{!771, !772, !773, !774, !775, !776, !777, !778}
!771 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!772 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!773 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!774 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!775 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!776 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!777 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!778 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!779 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !780, line: 48, size: 32, align: 32, elements: !781)
!780 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!781 = !{!782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802}
!782 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!783 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!784 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!785 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!786 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!787 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!788 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!789 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!790 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!791 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!792 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!793 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!794 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!795 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!796 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!797 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!798 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!799 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!800 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!801 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!802 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!803 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !517, line: 516, size: 32, align: 32, elements: !804)
!804 = !{!805, !806, !807, !808}
!805 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!806 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!807 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!808 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!809 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !517, line: 440, size: 32, align: 32, elements: !810)
!810 = !{!811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826}
!811 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!812 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!813 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!814 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!815 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!816 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!817 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!818 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!819 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!820 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!821 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!822 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!823 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!824 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!825 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!826 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!827 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !517, line: 464, size: 32, align: 32, elements: !828)
!828 = !{!829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850}
!829 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!830 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!831 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!832 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!833 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!834 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!835 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!836 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!837 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!838 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!839 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!840 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!841 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!842 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!843 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!844 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!845 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!846 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!847 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!848 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!849 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!850 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!851 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !517, line: 493, size: 32, align: 32, elements: !852)
!852 = !{!853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869}
!853 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!854 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!855 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!856 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!857 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!858 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!859 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!860 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!861 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!862 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!863 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!864 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!865 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!866 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!867 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!868 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!869 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!870 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !517, line: 538, size: 32, align: 32, elements: !871)
!871 = !{!872, !873, !874, !875, !876, !877, !878, !879}
!872 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!873 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!874 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!875 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!876 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!877 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!878 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!879 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!880 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVHWDeviceType", file: !881, line: 27, size: 32, align: 32, elements: !882)
!881 = !DIFile(filename: "./libavutil/hwcontext.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!882 = !{!883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893}
!883 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_NONE", value: 0)
!884 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_VDPAU", value: 1)
!885 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_CUDA", value: 2)
!886 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_VAAPI", value: 3)
!887 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_DXVA2", value: 4)
!888 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_QSV", value: 5)
!889 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_VIDEOTOOLBOX", value: 6)
!890 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_D3D11VA", value: 7)
!891 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_DRM", value: 8)
!892 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_OPENCL", value: 9)
!893 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_MEDIACODEC", value: 10)
!894 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !57, line: 1534, size: 32, align: 32, elements: !895)
!895 = !{!896, !897, !898, !899, !900, !901}
!896 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!897 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!898 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!899 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!900 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!901 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!902 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !57, line: 810, size: 32, align: 32, elements: !903)
!903 = !{!904, !905, !906, !907, !908, !909, !910, !911, !912, !913}
!904 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!905 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!906 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!907 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!908 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!909 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!910 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!911 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!912 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!913 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!914 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !57, line: 798, size: 32, align: 32, elements: !915)
!915 = !{!916, !917, !918, !919, !920, !921, !922}
!916 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!917 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!918 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!919 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!920 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!921 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!922 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!923 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "idct_permutation_type", file: !924, line: 37, size: 32, align: 32, elements: !925)
!924 = !DIFile(filename: "libavcodec/idctdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!925 = !{!926, !927, !928, !929, !930, !931}
!926 = !DIEnumerator(name: "FF_IDCT_PERM_NONE", value: 0)
!927 = !DIEnumerator(name: "FF_IDCT_PERM_LIBMPEG2", value: 1)
!928 = !DIEnumerator(name: "FF_IDCT_PERM_SIMPLE", value: 2)
!929 = !DIEnumerator(name: "FF_IDCT_PERM_TRANSPOSE", value: 3)
!930 = !DIEnumerator(name: "FF_IDCT_PERM_PARTTRANS", value: 4)
!931 = !DIEnumerator(name: "FF_IDCT_PERM_SSE2", value: 5)
!932 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVStereo3DType", file: !933, line: 51, size: 32, align: 32, elements: !934)
!933 = !DIFile(filename: "./libavutil/stereo3d.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!934 = !{!935, !936, !937, !938, !939, !940, !941, !942}
!935 = !DIEnumerator(name: "AV_STEREO3D_2D", value: 0)
!936 = !DIEnumerator(name: "AV_STEREO3D_SIDEBYSIDE", value: 1)
!937 = !DIEnumerator(name: "AV_STEREO3D_TOPBOTTOM", value: 2)
!938 = !DIEnumerator(name: "AV_STEREO3D_FRAMESEQUENCE", value: 3)
!939 = !DIEnumerator(name: "AV_STEREO3D_CHECKERBOARD", value: 4)
!940 = !DIEnumerator(name: "AV_STEREO3D_SIDEBYSIDE_QUINCUNX", value: 5)
!941 = !DIEnumerator(name: "AV_STEREO3D_LINES", value: 6)
!942 = !DIEnumerator(name: "AV_STEREO3D_COLUMNS", value: 7)
!943 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVStereo3DView", file: !933, line: 147, size: 32, align: 32, elements: !944)
!944 = !{!945, !946, !947}
!945 = !DIEnumerator(name: "AV_STEREO3D_VIEW_PACKED", value: 0)
!946 = !DIEnumerator(name: "AV_STEREO3D_VIEW_LEFT", value: 1)
!947 = !DIEnumerator(name: "AV_STEREO3D_VIEW_RIGHT", value: 2)
!948 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "JpegMarker", file: !949, line: 37, size: 32, align: 32, elements: !950)
!949 = !DIFile(filename: "libavcodec/mjpeg.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!950 = !{!951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014}
!951 = !DIEnumerator(name: "SOF0", value: 192)
!952 = !DIEnumerator(name: "SOF1", value: 193)
!953 = !DIEnumerator(name: "SOF2", value: 194)
!954 = !DIEnumerator(name: "SOF3", value: 195)
!955 = !DIEnumerator(name: "SOF5", value: 197)
!956 = !DIEnumerator(name: "SOF6", value: 198)
!957 = !DIEnumerator(name: "SOF7", value: 199)
!958 = !DIEnumerator(name: "JPG", value: 200)
!959 = !DIEnumerator(name: "SOF9", value: 201)
!960 = !DIEnumerator(name: "SOF10", value: 202)
!961 = !DIEnumerator(name: "SOF11", value: 203)
!962 = !DIEnumerator(name: "SOF13", value: 205)
!963 = !DIEnumerator(name: "SOF14", value: 206)
!964 = !DIEnumerator(name: "SOF15", value: 207)
!965 = !DIEnumerator(name: "DHT", value: 196)
!966 = !DIEnumerator(name: "DAC", value: 204)
!967 = !DIEnumerator(name: "RST0", value: 208)
!968 = !DIEnumerator(name: "RST1", value: 209)
!969 = !DIEnumerator(name: "RST2", value: 210)
!970 = !DIEnumerator(name: "RST3", value: 211)
!971 = !DIEnumerator(name: "RST4", value: 212)
!972 = !DIEnumerator(name: "RST5", value: 213)
!973 = !DIEnumerator(name: "RST6", value: 214)
!974 = !DIEnumerator(name: "RST7", value: 215)
!975 = !DIEnumerator(name: "SOI", value: 216)
!976 = !DIEnumerator(name: "EOI", value: 217)
!977 = !DIEnumerator(name: "SOS", value: 218)
!978 = !DIEnumerator(name: "DQT", value: 219)
!979 = !DIEnumerator(name: "DNL", value: 220)
!980 = !DIEnumerator(name: "DRI", value: 221)
!981 = !DIEnumerator(name: "DHP", value: 222)
!982 = !DIEnumerator(name: "EXP", value: 223)
!983 = !DIEnumerator(name: "APP0", value: 224)
!984 = !DIEnumerator(name: "APP1", value: 225)
!985 = !DIEnumerator(name: "APP2", value: 226)
!986 = !DIEnumerator(name: "APP3", value: 227)
!987 = !DIEnumerator(name: "APP4", value: 228)
!988 = !DIEnumerator(name: "APP5", value: 229)
!989 = !DIEnumerator(name: "APP6", value: 230)
!990 = !DIEnumerator(name: "APP7", value: 231)
!991 = !DIEnumerator(name: "APP8", value: 232)
!992 = !DIEnumerator(name: "APP9", value: 233)
!993 = !DIEnumerator(name: "APP10", value: 234)
!994 = !DIEnumerator(name: "APP11", value: 235)
!995 = !DIEnumerator(name: "APP12", value: 236)
!996 = !DIEnumerator(name: "APP13", value: 237)
!997 = !DIEnumerator(name: "APP14", value: 238)
!998 = !DIEnumerator(name: "APP15", value: 239)
!999 = !DIEnumerator(name: "JPG0", value: 240)
!1000 = !DIEnumerator(name: "JPG1", value: 241)
!1001 = !DIEnumerator(name: "JPG2", value: 242)
!1002 = !DIEnumerator(name: "JPG3", value: 243)
!1003 = !DIEnumerator(name: "JPG4", value: 244)
!1004 = !DIEnumerator(name: "JPG5", value: 245)
!1005 = !DIEnumerator(name: "JPG6", value: 246)
!1006 = !DIEnumerator(name: "SOF48", value: 247)
!1007 = !DIEnumerator(name: "LSE", value: 248)
!1008 = !DIEnumerator(name: "JPG9", value: 249)
!1009 = !DIEnumerator(name: "JPG10", value: 250)
!1010 = !DIEnumerator(name: "JPG11", value: 251)
!1011 = !DIEnumerator(name: "JPG12", value: 252)
!1012 = !DIEnumerator(name: "JPG13", value: 253)
!1013 = !DIEnumerator(name: "COM", value: 254)
!1014 = !DIEnumerator(name: "TEM", value: 1)
!1015 = !{!1016, !1025, !1024, !1026, !1027, !1030, !1033, !1031, !1022, !1139, !1140, !1145, !1146}
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64, align: 64)
!1017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1018)
!1018 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !1019, line: 221, size: 32, align: 8, elements: !1020)
!1019 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1020 = !{!1021}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1018, file: !1019, line: 221, baseType: !1022, size: 32, align: 32)
!1022 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !1023, line: 51, baseType: !1024)
!1023 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1024 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!1025 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64, align: 64)
!1028 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !1023, line: 49, baseType: !1029)
!1029 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64, align: 64)
!1031 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !1023, line: 48, baseType: !1032)
!1032 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 64, align: 64)
!1034 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !780, line: 646, baseType: !1035)
!1035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !780, line: 268, size: 4288, align: 64, elements: !1036)
!1036 = !{!1037, !1041, !1043, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1058, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1091, !1093, !1094, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1127, !1128, !1129, !1130, !1131, !1132, !1135, !1136, !1137, !1138}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1035, file: !780, line: 282, baseType: !1038, size: 512, align: 64)
!1038 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 512, align: 64, elements: !1039)
!1039 = !{!1040}
!1040 = !DISubrange(count: 8)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1035, file: !780, line: 299, baseType: !1042, size: 256, align: 32, offset: 512)
!1042 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1025, size: 256, align: 32, elements: !1039)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1035, file: !780, line: 315, baseType: !1044, size: 64, align: 64, offset: 768)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 64, align: 64)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1035, file: !780, line: 326, baseType: !1025, size: 32, align: 32, offset: 832)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1035, file: !780, line: 326, baseType: !1025, size: 32, align: 32, offset: 864)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1035, file: !780, line: 334, baseType: !1025, size: 32, align: 32, offset: 896)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1035, file: !780, line: 341, baseType: !1025, size: 32, align: 32, offset: 928)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1035, file: !780, line: 346, baseType: !1025, size: 32, align: 32, offset: 960)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1035, file: !780, line: 351, baseType: !769, size: 32, align: 32, offset: 992)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1035, file: !780, line: 356, baseType: !1052, size: 64, align: 32, offset: 1024)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1053, line: 61, baseType: !1054)
!1053 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1053, line: 58, size: 64, align: 32, elements: !1055)
!1055 = !{!1056, !1057}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1054, file: !1053, line: 59, baseType: !1025, size: 32, align: 32)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1054, file: !1053, line: 60, baseType: !1025, size: 32, align: 32, offset: 32)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1035, file: !780, line: 361, baseType: !1059, size: 64, align: 64, offset: 1088)
!1059 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !1023, line: 40, baseType: !1060)
!1060 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1035, file: !780, line: 369, baseType: !1059, size: 64, align: 64, offset: 1152)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1035, file: !780, line: 377, baseType: !1059, size: 64, align: 64, offset: 1216)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1035, file: !780, line: 382, baseType: !1025, size: 32, align: 32, offset: 1280)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1035, file: !780, line: 386, baseType: !1025, size: 32, align: 32, offset: 1312)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1035, file: !780, line: 391, baseType: !1025, size: 32, align: 32, offset: 1344)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1035, file: !780, line: 396, baseType: !1026, size: 64, align: 64, offset: 1408)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1035, file: !780, line: 403, baseType: !1068, size: 512, align: 64, offset: 1472)
!1068 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1069, size: 512, align: 64, elements: !1039)
!1069 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1023, line: 55, baseType: !1070)
!1070 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1035, file: !780, line: 410, baseType: !1025, size: 32, align: 32, offset: 1984)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1035, file: !780, line: 415, baseType: !1025, size: 32, align: 32, offset: 2016)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1035, file: !780, line: 420, baseType: !1025, size: 32, align: 32, offset: 2048)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1035, file: !780, line: 425, baseType: !1025, size: 32, align: 32, offset: 2080)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1035, file: !780, line: 435, baseType: !1059, size: 64, align: 64, offset: 2112)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1035, file: !780, line: 440, baseType: !1025, size: 32, align: 32, offset: 2176)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1035, file: !780, line: 445, baseType: !1069, size: 64, align: 64, offset: 2240)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1035, file: !780, line: 459, baseType: !1079, size: 512, align: 64, offset: 2304)
!1079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1080, size: 512, align: 64, elements: !1039)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64, align: 64)
!1081 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1082, line: 94, baseType: !1083)
!1082 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1082, line: 81, size: 192, align: 64, elements: !1084)
!1084 = !{!1085, !1089, !1090}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1083, file: !1082, line: 82, baseType: !1086, size: 64, align: 64)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64, align: 64)
!1087 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1082, line: 73, baseType: !1088)
!1088 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1082, line: 73, flags: DIFlagFwdDecl)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1083, file: !1082, line: 89, baseType: !1030, size: 64, align: 64, offset: 64)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1083, file: !1082, line: 93, baseType: !1025, size: 32, align: 32, offset: 128)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1035, file: !780, line: 473, baseType: !1092, size: 64, align: 64, offset: 2816)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 64, align: 64)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1035, file: !780, line: 477, baseType: !1025, size: 32, align: 32, offset: 2880)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1035, file: !780, line: 479, baseType: !1095, size: 64, align: 64, offset: 2944)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64, align: 64)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64, align: 64)
!1097 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !780, line: 207, baseType: !1098)
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !780, line: 201, size: 320, align: 64, elements: !1099)
!1099 = !{!1100, !1101, !1102, !1103, !1108}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1098, file: !780, line: 202, baseType: !779, size: 32, align: 32)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1098, file: !780, line: 203, baseType: !1030, size: 64, align: 64, offset: 64)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1098, file: !780, line: 204, baseType: !1025, size: 32, align: 32, offset: 128)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1098, file: !780, line: 205, baseType: !1104, size: 64, align: 64, offset: 192)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 64, align: 64)
!1105 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1106, line: 86, baseType: !1107)
!1106 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1107 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1106, line: 86, flags: DIFlagFwdDecl)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1098, file: !780, line: 206, baseType: !1080, size: 64, align: 64, offset: 256)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1035, file: !780, line: 480, baseType: !1025, size: 32, align: 32, offset: 3008)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1035, file: !780, line: 505, baseType: !1025, size: 32, align: 32, offset: 3040)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1035, file: !780, line: 512, baseType: !803, size: 32, align: 32, offset: 3072)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1035, file: !780, line: 514, baseType: !809, size: 32, align: 32, offset: 3104)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1035, file: !780, line: 516, baseType: !827, size: 32, align: 32, offset: 3136)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1035, file: !780, line: 523, baseType: !851, size: 32, align: 32, offset: 3168)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1035, file: !780, line: 525, baseType: !870, size: 32, align: 32, offset: 3200)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1035, file: !780, line: 532, baseType: !1059, size: 64, align: 64, offset: 3264)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1035, file: !780, line: 539, baseType: !1059, size: 64, align: 64, offset: 3328)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1035, file: !780, line: 547, baseType: !1059, size: 64, align: 64, offset: 3392)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1035, file: !780, line: 554, baseType: !1104, size: 64, align: 64, offset: 3456)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1035, file: !780, line: 563, baseType: !1025, size: 32, align: 32, offset: 3520)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1035, file: !780, line: 572, baseType: !1025, size: 32, align: 32, offset: 3552)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1035, file: !780, line: 581, baseType: !1025, size: 32, align: 32, offset: 3584)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1035, file: !780, line: 588, baseType: !1124, size: 64, align: 64, offset: 3648)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 64, align: 64)
!1125 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !1023, line: 36, baseType: !1126)
!1126 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1035, file: !780, line: 593, baseType: !1025, size: 32, align: 32, offset: 3712)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1035, file: !780, line: 596, baseType: !1025, size: 32, align: 32, offset: 3744)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1035, file: !780, line: 599, baseType: !1080, size: 64, align: 64, offset: 3776)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1035, file: !780, line: 605, baseType: !1080, size: 64, align: 64, offset: 3840)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1035, file: !780, line: 616, baseType: !1080, size: 64, align: 64, offset: 3904)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1035, file: !780, line: 626, baseType: !1133, size: 64, align: 64, offset: 3968)
!1133 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1134, line: 216, baseType: !1070)
!1134 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1035, file: !780, line: 627, baseType: !1133, size: 64, align: 64, offset: 4032)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1035, file: !780, line: 628, baseType: !1133, size: 64, align: 64, offset: 4096)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1035, file: !780, line: 629, baseType: !1133, size: 64, align: 64, offset: 4160)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1035, file: !780, line: 645, baseType: !1080, size: 64, align: 64, offset: 4224)
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64, align: 64)
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 64, align: 64)
!1141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1142)
!1142 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_16", file: !1019, line: 222, size: 16, align: 8, elements: !1143)
!1143 = !{!1144}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1142, file: !1019, line: 222, baseType: !1028, size: 16, align: 16)
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 64, align: 64)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64, align: 64)
!1147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1031)
!1148 = !{!1149, !1810, !1811, !2063, !2064}
!1149 = distinct !DIGlobalVariable(name: "ff_mjpeg_decoder", scope: !0, file: !1150, line: 2801, type: !1151, isLocal: false, isDefinition: true, variable: { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }* @ff_mjpeg_decoder)
!1150 = !DIFile(filename: "libavcodec/mjpegdec.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1151 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !57, line: 3610, baseType: !1152)
!1152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !57, line: 3468, size: 1984, align: 64, elements: !1153)
!1153 = !{!1154, !1158, !1159, !1160, !1161, !1162, !1165, !1168, !1171, !1174, !1177, !1178, !1251, !1259, !1260, !1261, !1263, !1712, !1718, !1726, !1730, !1731, !1768, !1772, !1776, !1777, !1781, !1785, !1786, !1790, !1791, !1792}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1152, file: !57, line: 3475, baseType: !1155, size: 64, align: 64)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 64, align: 64)
!1156 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1157)
!1157 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1152, file: !57, line: 3480, baseType: !1155, size: 64, align: 64, offset: 64)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1152, file: !57, line: 3481, baseType: !46, size: 32, align: 32, offset: 128)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1152, file: !57, line: 3482, baseType: !56, size: 32, align: 32, offset: 160)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1152, file: !57, line: 3487, baseType: !1025, size: 32, align: 32, offset: 192)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1152, file: !57, line: 3488, baseType: !1163, size: 64, align: 64, offset: 256)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 64, align: 64)
!1164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1052)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1152, file: !57, line: 3489, baseType: !1166, size: 64, align: 64, offset: 320)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64, align: 64)
!1167 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !516)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1152, file: !57, line: 3490, baseType: !1169, size: 64, align: 64, offset: 384)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 64, align: 64)
!1170 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1025)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1152, file: !57, line: 3491, baseType: !1172, size: 64, align: 64, offset: 448)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64, align: 64)
!1173 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !716)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1152, file: !57, line: 3492, baseType: !1175, size: 64, align: 64, offset: 512)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64, align: 64)
!1176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1069)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1152, file: !57, line: 3493, baseType: !1031, size: 8, align: 8, offset: 576)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1152, file: !57, line: 3494, baseType: !1179, size: 64, align: 64, offset: 640)
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 64, align: 64)
!1180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1181)
!1181 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !26, line: 143, baseType: !1182)
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !26, line: 67, size: 640, align: 64, elements: !1183)
!1183 = !{!1184, !1185, !1189, !1210, !1211, !1212, !1213, !1217, !1223, !1225, !1229}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !1182, file: !26, line: 72, baseType: !1155, size: 64, align: 64)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !1182, file: !26, line: 78, baseType: !1186, size: 64, align: 64, offset: 64)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 64, align: 64)
!1187 = !DISubroutineType(types: !1188)
!1188 = !{!1155, !1026}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !1182, file: !26, line: 85, baseType: !1190, size: 64, align: 64, offset: 128)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 64, align: 64)
!1191 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1192)
!1192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !4, line: 246, size: 512, align: 64, elements: !1193)
!1193 = !{!1194, !1195, !1196, !1197, !1198, !1206, !1207, !1208, !1209}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1192, file: !4, line: 247, baseType: !1155, size: 64, align: 64)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !1192, file: !4, line: 253, baseType: !1155, size: 64, align: 64, offset: 64)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1192, file: !4, line: 259, baseType: !1025, size: 32, align: 32, offset: 128)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1192, file: !4, line: 260, baseType: !3, size: 32, align: 32, offset: 160)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !1192, file: !4, line: 271, baseType: !1199, size: 64, align: 64, offset: 192)
!1199 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1192, file: !4, line: 265, size: 64, align: 64, elements: !1200)
!1200 = !{!1201, !1202, !1204, !1205}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !1199, file: !4, line: 266, baseType: !1059, size: 64, align: 64)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !1199, file: !4, line: 267, baseType: !1203, size: 64, align: 64)
!1203 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1199, file: !4, line: 268, baseType: !1155, size: 64, align: 64)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1199, file: !4, line: 270, baseType: !1052, size: 64, align: 32)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1192, file: !4, line: 272, baseType: !1203, size: 64, align: 64, offset: 256)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1192, file: !4, line: 273, baseType: !1203, size: 64, align: 64, offset: 320)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1192, file: !4, line: 275, baseType: !1025, size: 32, align: 32, offset: 384)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1192, file: !4, line: 300, baseType: !1155, size: 64, align: 64, offset: 448)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1182, file: !26, line: 93, baseType: !1025, size: 32, align: 32, offset: 192)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !1182, file: !26, line: 99, baseType: !1025, size: 32, align: 32, offset: 224)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !1182, file: !26, line: 108, baseType: !1025, size: 32, align: 32, offset: 256)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !1182, file: !26, line: 113, baseType: !1214, size: 64, align: 64, offset: 320)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 64, align: 64)
!1215 = !DISubroutineType(types: !1216)
!1216 = !{!1026, !1026, !1026}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !1182, file: !26, line: 123, baseType: !1218, size: 64, align: 64, offset: 384)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 64, align: 64)
!1219 = !DISubroutineType(types: !1220)
!1220 = !{!1221, !1221}
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 64, align: 64)
!1222 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1182)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1182, file: !26, line: 130, baseType: !1224, size: 32, align: 32, offset: 448)
!1224 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !26, line: 48, baseType: !25)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !1182, file: !26, line: 136, baseType: !1226, size: 64, align: 64, offset: 512)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64, align: 64)
!1227 = !DISubroutineType(types: !1228)
!1228 = !{!1224, !1026}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !1182, file: !26, line: 142, baseType: !1230, size: 64, align: 64, offset: 576)
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64, align: 64)
!1231 = !DISubroutineType(types: !1232)
!1232 = !{!1025, !1233, !1026, !1155, !1025}
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 64, align: 64)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 64, align: 64)
!1235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !4, line: 329, size: 128, align: 64, elements: !1236)
!1236 = !{!1237, !1249, !1250}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1235, file: !4, line: 360, baseType: !1238, size: 64, align: 64)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 64, align: 64)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 64, align: 64)
!1240 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !4, line: 324, baseType: !1241)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !4, line: 306, size: 384, align: 64, elements: !1242)
!1242 = !{!1243, !1244, !1245, !1246, !1247, !1248}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1241, file: !4, line: 307, baseType: !1155, size: 64, align: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !1241, file: !4, line: 313, baseType: !1203, size: 64, align: 64, offset: 64)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !1241, file: !4, line: 313, baseType: !1203, size: 64, align: 64, offset: 128)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !1241, file: !4, line: 318, baseType: !1203, size: 64, align: 64, offset: 192)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !1241, file: !4, line: 318, baseType: !1203, size: 64, align: 64, offset: 256)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !1241, file: !4, line: 323, baseType: !1025, size: 32, align: 32, offset: 320)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !1235, file: !4, line: 364, baseType: !1025, size: 32, align: 32, offset: 64)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !1235, file: !4, line: 368, baseType: !1025, size: 32, align: 32, offset: 96)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1152, file: !57, line: 3495, baseType: !1252, size: 64, align: 64, offset: 704)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64, align: 64)
!1253 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1254)
!1254 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !57, line: 3404, baseType: !1255)
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !57, line: 3401, size: 128, align: 64, elements: !1256)
!1256 = !{!1257, !1258}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1255, file: !57, line: 3402, baseType: !1025, size: 32, align: 32)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1255, file: !57, line: 3403, baseType: !1155, size: 64, align: 64, offset: 64)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1152, file: !57, line: 3507, baseType: !1155, size: 64, align: 64, offset: 768)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1152, file: !57, line: 3516, baseType: !1025, size: 32, align: 32, offset: 832)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1152, file: !57, line: 3517, baseType: !1262, size: 64, align: 64, offset: 896)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 64, align: 64)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1152, file: !57, line: 3527, baseType: !1264, size: 64, align: 64, offset: 960)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64, align: 64)
!1265 = !DISubroutineType(types: !1266)
!1266 = !{!1025, !1267}
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64, align: 64)
!1268 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !57, line: 3360, baseType: !1269)
!1269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !57, line: 1556, size: 8448, align: 64, elements: !1270)
!1270 = !{!1271, !1272, !1273, !1274, !1277, !1278, !1279, !1280, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1463, !1467, !1468, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1650, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1269, file: !57, line: 1561, baseType: !1179, size: 64, align: 64)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1269, file: !57, line: 1562, baseType: !1025, size: 32, align: 32, offset: 64)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1269, file: !57, line: 1564, baseType: !46, size: 32, align: 32, offset: 96)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1269, file: !57, line: 1565, baseType: !1275, size: 64, align: 64, offset: 128)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 64, align: 64)
!1276 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1152)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1269, file: !57, line: 1566, baseType: !56, size: 32, align: 32, offset: 192)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1269, file: !57, line: 1581, baseType: !1024, size: 32, align: 32, offset: 224)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1269, file: !57, line: 1583, baseType: !1026, size: 64, align: 64, offset: 256)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1269, file: !57, line: 1591, baseType: !1281, size: 64, align: 64, offset: 320)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 64, align: 64)
!1282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1283, line: 129, size: 1664, align: 64, elements: !1284)
!1283 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1284 = !{!1285, !1286, !1287, !1288, !1289, !1310, !1311, !1340, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1282, file: !1283, line: 136, baseType: !1025, size: 32, align: 32)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1282, file: !1283, line: 151, baseType: !1025, size: 32, align: 32, offset: 32)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1282, file: !1283, line: 157, baseType: !1025, size: 32, align: 32, offset: 64)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1282, file: !1283, line: 159, baseType: !1033, size: 64, align: 64, offset: 128)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1282, file: !1283, line: 161, baseType: !1290, size: 64, align: 64, offset: 192)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 64, align: 64)
!1291 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1283, line: 117, baseType: !1292)
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1283, line: 100, size: 832, align: 64, elements: !1293)
!1293 = !{!1294, !1301, !1302, !1303, !1304, !1305, !1307, !1308, !1309}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1292, file: !1283, line: 105, baseType: !1295, size: 256, align: 64)
!1295 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1296, size: 256, align: 64, elements: !1299)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 64, align: 64)
!1297 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1082, line: 238, baseType: !1298)
!1298 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1082, line: 238, flags: DIFlagFwdDecl)
!1299 = !{!1300}
!1300 = !DISubrange(count: 4)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1292, file: !1283, line: 110, baseType: !1025, size: 32, align: 32, offset: 256)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1292, file: !1283, line: 111, baseType: !1025, size: 32, align: 32, offset: 288)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1292, file: !1283, line: 111, baseType: !1025, size: 32, align: 32, offset: 320)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1292, file: !1283, line: 112, baseType: !1042, size: 256, align: 32, offset: 352)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1292, file: !1283, line: 113, baseType: !1306, size: 128, align: 32, offset: 608)
!1306 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1025, size: 128, align: 32, elements: !1299)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1292, file: !1283, line: 114, baseType: !1025, size: 32, align: 32, offset: 736)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1292, file: !1283, line: 115, baseType: !1025, size: 32, align: 32, offset: 768)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1292, file: !1283, line: 116, baseType: !1025, size: 32, align: 32, offset: 800)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1282, file: !1283, line: 163, baseType: !1026, size: 64, align: 64, offset: 256)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1282, file: !1283, line: 165, baseType: !1312, size: 128, align: 64, offset: 320)
!1312 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1283, line: 122, baseType: !1313)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1283, line: 119, size: 128, align: 64, elements: !1314)
!1314 = !{!1315, !1339}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1313, file: !1283, line: 120, baseType: !1316, size: 64, align: 64)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 64, align: 64)
!1317 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !57, line: 1499, baseType: !1318)
!1318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !57, line: 1445, size: 704, align: 64, elements: !1319)
!1319 = !{!1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1335, !1336, !1337, !1338}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1318, file: !57, line: 1451, baseType: !1080, size: 64, align: 64)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1318, file: !57, line: 1461, baseType: !1059, size: 64, align: 64, offset: 64)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1318, file: !57, line: 1467, baseType: !1059, size: 64, align: 64, offset: 128)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1318, file: !57, line: 1468, baseType: !1030, size: 64, align: 64, offset: 192)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1318, file: !57, line: 1469, baseType: !1025, size: 32, align: 32, offset: 256)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1318, file: !57, line: 1470, baseType: !1025, size: 32, align: 32, offset: 288)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1318, file: !57, line: 1474, baseType: !1025, size: 32, align: 32, offset: 320)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1318, file: !57, line: 1479, baseType: !1328, size: 64, align: 64, offset: 384)
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 64, align: 64)
!1329 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !57, line: 1415, baseType: !1330)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !57, line: 1411, size: 128, align: 64, elements: !1331)
!1331 = !{!1332, !1333, !1334}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1330, file: !57, line: 1412, baseType: !1030, size: 64, align: 64)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1330, file: !57, line: 1413, baseType: !1025, size: 32, align: 32, offset: 64)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1330, file: !57, line: 1414, baseType: !739, size: 32, align: 32, offset: 96)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1318, file: !57, line: 1480, baseType: !1025, size: 32, align: 32, offset: 448)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1318, file: !57, line: 1486, baseType: !1059, size: 64, align: 64, offset: 512)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1318, file: !57, line: 1488, baseType: !1059, size: 64, align: 64, offset: 576)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1318, file: !57, line: 1497, baseType: !1059, size: 64, align: 64, offset: 640)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1313, file: !1283, line: 121, baseType: !1033, size: 64, align: 64, offset: 64)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1282, file: !1283, line: 166, baseType: !1341, size: 128, align: 64, offset: 448)
!1341 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1283, line: 127, baseType: !1342)
!1342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1283, line: 124, size: 128, align: 64, elements: !1343)
!1343 = !{!1344, !1417}
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1342, file: !1283, line: 125, baseType: !1345, size: 64, align: 64)
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 64, align: 64)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 64, align: 64)
!1347 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !57, line: 5794, baseType: !1348)
!1348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !57, line: 5747, size: 512, align: 64, elements: !1349)
!1349 = !{!1350, !1351, !1375, !1379, !1380, !1414, !1415, !1416}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1348, file: !57, line: 5751, baseType: !1179, size: 64, align: 64)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1348, file: !57, line: 5756, baseType: !1352, size: 64, align: 64, offset: 64)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64, align: 64)
!1353 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1354)
!1354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !57, line: 5796, size: 512, align: 64, elements: !1355)
!1355 = !{!1356, !1357, !1360, !1361, !1362, !1366, !1370, !1374}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1354, file: !57, line: 5797, baseType: !1155, size: 64, align: 64)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1354, file: !57, line: 5804, baseType: !1358, size: 64, align: 64, offset: 64)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 64, align: 64)
!1359 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !56)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1354, file: !57, line: 5815, baseType: !1179, size: 64, align: 64, offset: 128)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1354, file: !57, line: 5825, baseType: !1025, size: 32, align: 32, offset: 192)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1354, file: !57, line: 5826, baseType: !1363, size: 64, align: 64, offset: 256)
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 64, align: 64)
!1364 = !DISubroutineType(types: !1365)
!1365 = !{!1025, !1346}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1354, file: !57, line: 5827, baseType: !1367, size: 64, align: 64, offset: 320)
!1367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1368, size: 64, align: 64)
!1368 = !DISubroutineType(types: !1369)
!1369 = !{!1025, !1346, !1316}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1354, file: !57, line: 5828, baseType: !1371, size: 64, align: 64, offset: 384)
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 64, align: 64)
!1372 = !DISubroutineType(types: !1373)
!1373 = !{null, !1346}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1354, file: !57, line: 5829, baseType: !1371, size: 64, align: 64, offset: 448)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1348, file: !57, line: 5762, baseType: !1376, size: 64, align: 64, offset: 128)
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1377, size: 64, align: 64)
!1377 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !57, line: 5735, baseType: !1378)
!1378 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !57, line: 5735, flags: DIFlagFwdDecl)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1348, file: !57, line: 5768, baseType: !1026, size: 64, align: 64, offset: 192)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1348, file: !57, line: 5775, baseType: !1381, size: 64, align: 64, offset: 256)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64, align: 64)
!1382 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !57, line: 4085, baseType: !1383)
!1383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !57, line: 3936, size: 1152, align: 64, elements: !1384)
!1384 = !{!1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413}
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1383, file: !57, line: 3940, baseType: !46, size: 32, align: 32)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1383, file: !57, line: 3944, baseType: !56, size: 32, align: 32, offset: 32)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1383, file: !57, line: 3948, baseType: !1022, size: 32, align: 32, offset: 64)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1383, file: !57, line: 3958, baseType: !1030, size: 64, align: 64, offset: 128)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1383, file: !57, line: 3962, baseType: !1025, size: 32, align: 32, offset: 192)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1383, file: !57, line: 3968, baseType: !1025, size: 32, align: 32, offset: 224)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1383, file: !57, line: 3973, baseType: !1059, size: 64, align: 64, offset: 256)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1383, file: !57, line: 3986, baseType: !1025, size: 32, align: 32, offset: 320)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1383, file: !57, line: 3999, baseType: !1025, size: 32, align: 32, offset: 352)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1383, file: !57, line: 4004, baseType: !1025, size: 32, align: 32, offset: 384)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1383, file: !57, line: 4005, baseType: !1025, size: 32, align: 32, offset: 416)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1383, file: !57, line: 4010, baseType: !1025, size: 32, align: 32, offset: 448)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1383, file: !57, line: 4011, baseType: !1025, size: 32, align: 32, offset: 480)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1383, file: !57, line: 4020, baseType: !1052, size: 64, align: 32, offset: 512)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1383, file: !57, line: 4025, baseType: !894, size: 32, align: 32, offset: 576)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1383, file: !57, line: 4030, baseType: !803, size: 32, align: 32, offset: 608)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1383, file: !57, line: 4031, baseType: !809, size: 32, align: 32, offset: 640)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1383, file: !57, line: 4032, baseType: !827, size: 32, align: 32, offset: 672)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1383, file: !57, line: 4033, baseType: !851, size: 32, align: 32, offset: 704)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1383, file: !57, line: 4034, baseType: !870, size: 32, align: 32, offset: 736)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1383, file: !57, line: 4039, baseType: !1025, size: 32, align: 32, offset: 768)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1383, file: !57, line: 4046, baseType: !1069, size: 64, align: 64, offset: 832)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1383, file: !57, line: 4050, baseType: !1025, size: 32, align: 32, offset: 896)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1383, file: !57, line: 4054, baseType: !1025, size: 32, align: 32, offset: 928)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1383, file: !57, line: 4061, baseType: !1025, size: 32, align: 32, offset: 960)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1383, file: !57, line: 4065, baseType: !1025, size: 32, align: 32, offset: 992)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1383, file: !57, line: 4073, baseType: !1025, size: 32, align: 32, offset: 1024)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1383, file: !57, line: 4080, baseType: !1025, size: 32, align: 32, offset: 1056)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1383, file: !57, line: 4084, baseType: !1025, size: 32, align: 32, offset: 1088)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1348, file: !57, line: 5781, baseType: !1381, size: 64, align: 64, offset: 320)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1348, file: !57, line: 5787, baseType: !1052, size: 64, align: 32, offset: 384)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1348, file: !57, line: 5793, baseType: !1052, size: 64, align: 32, offset: 448)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1342, file: !1283, line: 126, baseType: !1025, size: 32, align: 32, offset: 64)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1282, file: !1283, line: 172, baseType: !1316, size: 64, align: 64, offset: 576)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1282, file: !1283, line: 177, baseType: !1030, size: 64, align: 64, offset: 640)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1282, file: !1283, line: 178, baseType: !1024, size: 32, align: 32, offset: 704)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1282, file: !1283, line: 180, baseType: !1026, size: 64, align: 64, offset: 768)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1282, file: !1283, line: 185, baseType: !1025, size: 32, align: 32, offset: 832)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1282, file: !1283, line: 190, baseType: !1026, size: 64, align: 64, offset: 896)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1282, file: !1283, line: 195, baseType: !1025, size: 32, align: 32, offset: 960)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1282, file: !1283, line: 200, baseType: !1316, size: 64, align: 64, offset: 1024)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1282, file: !1283, line: 201, baseType: !1025, size: 32, align: 32, offset: 1088)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1282, file: !1283, line: 202, baseType: !1033, size: 64, align: 64, offset: 1152)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1282, file: !1283, line: 203, baseType: !1025, size: 32, align: 32, offset: 1216)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1282, file: !1283, line: 205, baseType: !1025, size: 32, align: 32, offset: 1248)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1282, file: !1283, line: 206, baseType: !1025, size: 32, align: 32, offset: 1280)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1282, file: !1283, line: 209, baseType: !1133, size: 64, align: 64, offset: 1344)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1282, file: !1283, line: 212, baseType: !1133, size: 64, align: 64, offset: 1408)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1282, file: !1283, line: 213, baseType: !1033, size: 64, align: 64, offset: 1472)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1282, file: !1283, line: 215, baseType: !1025, size: 32, align: 32, offset: 1536)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1282, file: !1283, line: 217, baseType: !1025, size: 32, align: 32, offset: 1568)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1282, file: !1283, line: 220, baseType: !1025, size: 32, align: 32, offset: 1600)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1269, file: !57, line: 1598, baseType: !1026, size: 64, align: 64, offset: 384)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1269, file: !57, line: 1606, baseType: !1059, size: 64, align: 64, offset: 448)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1269, file: !57, line: 1614, baseType: !1025, size: 32, align: 32, offset: 512)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1269, file: !57, line: 1622, baseType: !1025, size: 32, align: 32, offset: 544)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1269, file: !57, line: 1628, baseType: !1025, size: 32, align: 32, offset: 576)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1269, file: !57, line: 1636, baseType: !1025, size: 32, align: 32, offset: 608)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1269, file: !57, line: 1643, baseType: !1025, size: 32, align: 32, offset: 640)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1269, file: !57, line: 1657, baseType: !1030, size: 64, align: 64, offset: 704)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1269, file: !57, line: 1658, baseType: !1025, size: 32, align: 32, offset: 768)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1269, file: !57, line: 1679, baseType: !1052, size: 64, align: 32, offset: 800)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1269, file: !57, line: 1688, baseType: !1025, size: 32, align: 32, offset: 864)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1269, file: !57, line: 1712, baseType: !1025, size: 32, align: 32, offset: 896)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1269, file: !57, line: 1729, baseType: !1025, size: 32, align: 32, offset: 928)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1269, file: !57, line: 1729, baseType: !1025, size: 32, align: 32, offset: 960)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1269, file: !57, line: 1744, baseType: !1025, size: 32, align: 32, offset: 992)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1269, file: !57, line: 1744, baseType: !1025, size: 32, align: 32, offset: 1024)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1269, file: !57, line: 1751, baseType: !1025, size: 32, align: 32, offset: 1056)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1269, file: !57, line: 1766, baseType: !516, size: 32, align: 32, offset: 1088)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1269, file: !57, line: 1791, baseType: !1456, size: 64, align: 64, offset: 1152)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 64, align: 64)
!1457 = !DISubroutineType(types: !1458)
!1458 = !{null, !1459, !1460, !1462, !1025, !1025, !1025}
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 64, align: 64)
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 64, align: 64)
!1461 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1034)
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64, align: 64)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1269, file: !57, line: 1808, baseType: !1464, size: 64, align: 64, offset: 1216)
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 64, align: 64)
!1465 = !DISubroutineType(types: !1466)
!1466 = !{!516, !1459, !1166}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1269, file: !57, line: 1816, baseType: !1025, size: 32, align: 32, offset: 1280)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1269, file: !57, line: 1825, baseType: !1469, size: 32, align: 32, offset: 1312)
!1469 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1269, file: !57, line: 1830, baseType: !1025, size: 32, align: 32, offset: 1344)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1269, file: !57, line: 1838, baseType: !1469, size: 32, align: 32, offset: 1376)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1269, file: !57, line: 1846, baseType: !1025, size: 32, align: 32, offset: 1408)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1269, file: !57, line: 1851, baseType: !1025, size: 32, align: 32, offset: 1440)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1269, file: !57, line: 1861, baseType: !1469, size: 32, align: 32, offset: 1472)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1269, file: !57, line: 1868, baseType: !1469, size: 32, align: 32, offset: 1504)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1269, file: !57, line: 1875, baseType: !1469, size: 32, align: 32, offset: 1536)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1269, file: !57, line: 1882, baseType: !1469, size: 32, align: 32, offset: 1568)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1269, file: !57, line: 1889, baseType: !1469, size: 32, align: 32, offset: 1600)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1269, file: !57, line: 1896, baseType: !1469, size: 32, align: 32, offset: 1632)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1269, file: !57, line: 1903, baseType: !1469, size: 32, align: 32, offset: 1664)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1269, file: !57, line: 1910, baseType: !1025, size: 32, align: 32, offset: 1696)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1269, file: !57, line: 1915, baseType: !1025, size: 32, align: 32, offset: 1728)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1269, file: !57, line: 1926, baseType: !1462, size: 64, align: 64, offset: 1792)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1269, file: !57, line: 1935, baseType: !1052, size: 64, align: 32, offset: 1856)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1269, file: !57, line: 1942, baseType: !1025, size: 32, align: 32, offset: 1920)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1269, file: !57, line: 1948, baseType: !1025, size: 32, align: 32, offset: 1952)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1269, file: !57, line: 1954, baseType: !1025, size: 32, align: 32, offset: 1984)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1269, file: !57, line: 1960, baseType: !1025, size: 32, align: 32, offset: 2016)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1269, file: !57, line: 1984, baseType: !1025, size: 32, align: 32, offset: 2048)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1269, file: !57, line: 1991, baseType: !1025, size: 32, align: 32, offset: 2080)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1269, file: !57, line: 1996, baseType: !1025, size: 32, align: 32, offset: 2112)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1269, file: !57, line: 2004, baseType: !1025, size: 32, align: 32, offset: 2144)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1269, file: !57, line: 2011, baseType: !1025, size: 32, align: 32, offset: 2176)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1269, file: !57, line: 2018, baseType: !1025, size: 32, align: 32, offset: 2208)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1269, file: !57, line: 2027, baseType: !1025, size: 32, align: 32, offset: 2240)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1269, file: !57, line: 2034, baseType: !1025, size: 32, align: 32, offset: 2272)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1269, file: !57, line: 2044, baseType: !1025, size: 32, align: 32, offset: 2304)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1269, file: !57, line: 2054, baseType: !1027, size: 64, align: 64, offset: 2368)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1269, file: !57, line: 2061, baseType: !1027, size: 64, align: 64, offset: 2432)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1269, file: !57, line: 2066, baseType: !1025, size: 32, align: 32, offset: 2496)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1269, file: !57, line: 2070, baseType: !1025, size: 32, align: 32, offset: 2528)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1269, file: !57, line: 2078, baseType: !1025, size: 32, align: 32, offset: 2560)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1269, file: !57, line: 2085, baseType: !1025, size: 32, align: 32, offset: 2592)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1269, file: !57, line: 2092, baseType: !1025, size: 32, align: 32, offset: 2624)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1269, file: !57, line: 2099, baseType: !1025, size: 32, align: 32, offset: 2656)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1269, file: !57, line: 2106, baseType: !1025, size: 32, align: 32, offset: 2688)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1269, file: !57, line: 2113, baseType: !1025, size: 32, align: 32, offset: 2720)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1269, file: !57, line: 2120, baseType: !1025, size: 32, align: 32, offset: 2752)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1269, file: !57, line: 2125, baseType: !1025, size: 32, align: 32, offset: 2784)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1269, file: !57, line: 2133, baseType: !1025, size: 32, align: 32, offset: 2816)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1269, file: !57, line: 2140, baseType: !1025, size: 32, align: 32, offset: 2848)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1269, file: !57, line: 2145, baseType: !1025, size: 32, align: 32, offset: 2880)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1269, file: !57, line: 2153, baseType: !1025, size: 32, align: 32, offset: 2912)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1269, file: !57, line: 2158, baseType: !1025, size: 32, align: 32, offset: 2944)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1269, file: !57, line: 2166, baseType: !809, size: 32, align: 32, offset: 2976)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1269, file: !57, line: 2173, baseType: !827, size: 32, align: 32, offset: 3008)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1269, file: !57, line: 2180, baseType: !851, size: 32, align: 32, offset: 3040)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1269, file: !57, line: 2187, baseType: !803, size: 32, align: 32, offset: 3072)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1269, file: !57, line: 2194, baseType: !870, size: 32, align: 32, offset: 3104)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1269, file: !57, line: 2203, baseType: !1025, size: 32, align: 32, offset: 3136)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1269, file: !57, line: 2209, baseType: !894, size: 32, align: 32, offset: 3168)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1269, file: !57, line: 2212, baseType: !1025, size: 32, align: 32, offset: 3200)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1269, file: !57, line: 2213, baseType: !1025, size: 32, align: 32, offset: 3232)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1269, file: !57, line: 2220, baseType: !716, size: 32, align: 32, offset: 3264)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1269, file: !57, line: 2232, baseType: !1025, size: 32, align: 32, offset: 3296)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1269, file: !57, line: 2243, baseType: !1025, size: 32, align: 32, offset: 3328)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1269, file: !57, line: 2249, baseType: !1025, size: 32, align: 32, offset: 3360)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1269, file: !57, line: 2256, baseType: !1025, size: 32, align: 32, offset: 3392)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1269, file: !57, line: 2263, baseType: !1069, size: 64, align: 64, offset: 3456)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1269, file: !57, line: 2270, baseType: !1069, size: 64, align: 64, offset: 3520)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1269, file: !57, line: 2277, baseType: !902, size: 32, align: 32, offset: 3584)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1269, file: !57, line: 2285, baseType: !716, size: 32, align: 32, offset: 3616)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1269, file: !57, line: 2367, baseType: !1534, size: 64, align: 64, offset: 3648)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 64, align: 64)
!1535 = !DISubroutineType(types: !1536)
!1536 = !{!1025, !1459, !1033, !1025}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1269, file: !57, line: 2383, baseType: !1025, size: 32, align: 32, offset: 3712)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1269, file: !57, line: 2386, baseType: !1469, size: 32, align: 32, offset: 3744)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1269, file: !57, line: 2387, baseType: !1469, size: 32, align: 32, offset: 3776)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1269, file: !57, line: 2394, baseType: !1025, size: 32, align: 32, offset: 3808)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1269, file: !57, line: 2401, baseType: !1025, size: 32, align: 32, offset: 3840)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1269, file: !57, line: 2408, baseType: !1025, size: 32, align: 32, offset: 3872)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1269, file: !57, line: 2415, baseType: !1025, size: 32, align: 32, offset: 3904)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1269, file: !57, line: 2422, baseType: !1025, size: 32, align: 32, offset: 3936)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1269, file: !57, line: 2423, baseType: !1546, size: 64, align: 64, offset: 3968)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 64, align: 64)
!1547 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !57, line: 831, baseType: !1548)
!1548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !57, line: 826, size: 128, align: 32, elements: !1549)
!1549 = !{!1550, !1551, !1552, !1553}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1548, file: !57, line: 827, baseType: !1025, size: 32, align: 32)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1548, file: !57, line: 828, baseType: !1025, size: 32, align: 32, offset: 32)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1548, file: !57, line: 829, baseType: !1025, size: 32, align: 32, offset: 64)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1548, file: !57, line: 830, baseType: !1469, size: 32, align: 32, offset: 96)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1269, file: !57, line: 2430, baseType: !1059, size: 64, align: 64, offset: 4032)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1269, file: !57, line: 2437, baseType: !1059, size: 64, align: 64, offset: 4096)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1269, file: !57, line: 2444, baseType: !1469, size: 32, align: 32, offset: 4160)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1269, file: !57, line: 2451, baseType: !1469, size: 32, align: 32, offset: 4192)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1269, file: !57, line: 2458, baseType: !1025, size: 32, align: 32, offset: 4224)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1269, file: !57, line: 2469, baseType: !1025, size: 32, align: 32, offset: 4256)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1269, file: !57, line: 2475, baseType: !1025, size: 32, align: 32, offset: 4288)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1269, file: !57, line: 2481, baseType: !1025, size: 32, align: 32, offset: 4320)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1269, file: !57, line: 2485, baseType: !1025, size: 32, align: 32, offset: 4352)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1269, file: !57, line: 2489, baseType: !1025, size: 32, align: 32, offset: 4384)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1269, file: !57, line: 2493, baseType: !1025, size: 32, align: 32, offset: 4416)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1269, file: !57, line: 2501, baseType: !1025, size: 32, align: 32, offset: 4448)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1269, file: !57, line: 2506, baseType: !1025, size: 32, align: 32, offset: 4480)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1269, file: !57, line: 2510, baseType: !1025, size: 32, align: 32, offset: 4512)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1269, file: !57, line: 2514, baseType: !1059, size: 64, align: 64, offset: 4544)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1269, file: !57, line: 2528, baseType: !1570, size: 64, align: 64, offset: 4608)
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 64, align: 64)
!1571 = !DISubroutineType(types: !1572)
!1572 = !{null, !1459, !1026, !1025, !1025}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1269, file: !57, line: 2534, baseType: !1025, size: 32, align: 32, offset: 4672)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1269, file: !57, line: 2545, baseType: !1025, size: 32, align: 32, offset: 4704)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1269, file: !57, line: 2547, baseType: !1025, size: 32, align: 32, offset: 4736)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1269, file: !57, line: 2549, baseType: !1025, size: 32, align: 32, offset: 4768)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1269, file: !57, line: 2551, baseType: !1025, size: 32, align: 32, offset: 4800)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1269, file: !57, line: 2553, baseType: !1025, size: 32, align: 32, offset: 4832)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1269, file: !57, line: 2555, baseType: !1025, size: 32, align: 32, offset: 4864)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1269, file: !57, line: 2557, baseType: !1025, size: 32, align: 32, offset: 4896)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1269, file: !57, line: 2559, baseType: !1025, size: 32, align: 32, offset: 4928)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1269, file: !57, line: 2563, baseType: !1025, size: 32, align: 32, offset: 4960)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1269, file: !57, line: 2571, baseType: !1584, size: 64, align: 64, offset: 4992)
!1584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64, align: 64)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1269, file: !57, line: 2579, baseType: !1584, size: 64, align: 64, offset: 5056)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1269, file: !57, line: 2586, baseType: !1025, size: 32, align: 32, offset: 5120)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1269, file: !57, line: 2615, baseType: !1025, size: 32, align: 32, offset: 5152)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1269, file: !57, line: 2627, baseType: !1025, size: 32, align: 32, offset: 5184)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1269, file: !57, line: 2637, baseType: !1025, size: 32, align: 32, offset: 5216)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1269, file: !57, line: 2681, baseType: !1025, size: 32, align: 32, offset: 5248)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1269, file: !57, line: 2709, baseType: !1059, size: 64, align: 64, offset: 5312)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1269, file: !57, line: 2716, baseType: !1593, size: 64, align: 64, offset: 5376)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 64, align: 64)
!1594 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1595)
!1595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !57, line: 3636, size: 896, align: 64, elements: !1596)
!1596 = !{!1597, !1598, !1599, !1600, !1601, !1602, !1606, !1610, !1614, !1615, !1616, !1617, !1623, !1624, !1625, !1626, !1627}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1595, file: !57, line: 3642, baseType: !1155, size: 64, align: 64)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1595, file: !57, line: 3649, baseType: !46, size: 32, align: 32, offset: 64)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1595, file: !57, line: 3656, baseType: !56, size: 32, align: 32, offset: 96)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1595, file: !57, line: 3663, baseType: !516, size: 32, align: 32, offset: 128)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1595, file: !57, line: 3669, baseType: !1025, size: 32, align: 32, offset: 160)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1595, file: !57, line: 3682, baseType: !1603, size: 64, align: 64, offset: 192)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64, align: 64)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!1025, !1267, !1033}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1595, file: !57, line: 3698, baseType: !1607, size: 64, align: 64, offset: 256)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64, align: 64)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{!1025, !1267, !1146, !1022}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1595, file: !57, line: 3712, baseType: !1611, size: 64, align: 64, offset: 320)
!1611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 64, align: 64)
!1612 = !DISubroutineType(types: !1613)
!1613 = !{!1025, !1267, !1025, !1146, !1022}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1595, file: !57, line: 3726, baseType: !1607, size: 64, align: 64, offset: 384)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1595, file: !57, line: 3737, baseType: !1264, size: 64, align: 64, offset: 448)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1595, file: !57, line: 3746, baseType: !1025, size: 32, align: 32, offset: 512)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1595, file: !57, line: 3757, baseType: !1618, size: 64, align: 64, offset: 576)
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 64, align: 64)
!1619 = !DISubroutineType(types: !1620)
!1620 = !{null, !1621}
!1621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1622, size: 64, align: 64)
!1622 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !57, line: 3617, flags: DIFlagFwdDecl)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1595, file: !57, line: 3766, baseType: !1264, size: 64, align: 64, offset: 640)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1595, file: !57, line: 3774, baseType: !1264, size: 64, align: 64, offset: 704)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1595, file: !57, line: 3780, baseType: !1025, size: 32, align: 32, offset: 768)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1595, file: !57, line: 3785, baseType: !1025, size: 32, align: 32, offset: 800)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1595, file: !57, line: 3795, baseType: !1628, size: 64, align: 64, offset: 832)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 64, align: 64)
!1629 = !DISubroutineType(types: !1630)
!1630 = !{!1025, !1267, !1080}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1269, file: !57, line: 2728, baseType: !1026, size: 64, align: 64, offset: 5440)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1269, file: !57, line: 2735, baseType: !1068, size: 512, align: 64, offset: 5504)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1269, file: !57, line: 2742, baseType: !1025, size: 32, align: 32, offset: 6016)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1269, file: !57, line: 2755, baseType: !1025, size: 32, align: 32, offset: 6048)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1269, file: !57, line: 2776, baseType: !1025, size: 32, align: 32, offset: 6080)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1269, file: !57, line: 2783, baseType: !1025, size: 32, align: 32, offset: 6112)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1269, file: !57, line: 2791, baseType: !1025, size: 32, align: 32, offset: 6144)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1269, file: !57, line: 2802, baseType: !1033, size: 64, align: 64, offset: 6208)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1269, file: !57, line: 2811, baseType: !1025, size: 32, align: 32, offset: 6272)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1269, file: !57, line: 2821, baseType: !1025, size: 32, align: 32, offset: 6304)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1269, file: !57, line: 2830, baseType: !1025, size: 32, align: 32, offset: 6336)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1269, file: !57, line: 2840, baseType: !1025, size: 32, align: 32, offset: 6368)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1269, file: !57, line: 2851, baseType: !1644, size: 64, align: 64, offset: 6400)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64, align: 64)
!1645 = !DISubroutineType(types: !1646)
!1646 = !{!1025, !1459, !1647, !1026, !1462, !1025, !1025}
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 64, align: 64)
!1648 = !DISubroutineType(types: !1649)
!1649 = !{!1025, !1459, !1026}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1269, file: !57, line: 2871, baseType: !1651, size: 64, align: 64, offset: 6464)
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 64, align: 64)
!1652 = !DISubroutineType(types: !1653)
!1653 = !{!1025, !1459, !1654, !1026, !1462, !1025}
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 64, align: 64)
!1655 = !DISubroutineType(types: !1656)
!1656 = !{!1025, !1459, !1026, !1025, !1025}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1269, file: !57, line: 2878, baseType: !1025, size: 32, align: 32, offset: 6528)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1269, file: !57, line: 2885, baseType: !1025, size: 32, align: 32, offset: 6560)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1269, file: !57, line: 3005, baseType: !1025, size: 32, align: 32, offset: 6592)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1269, file: !57, line: 3013, baseType: !914, size: 32, align: 32, offset: 6624)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1269, file: !57, line: 3020, baseType: !914, size: 32, align: 32, offset: 6656)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1269, file: !57, line: 3027, baseType: !914, size: 32, align: 32, offset: 6688)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1269, file: !57, line: 3037, baseType: !1030, size: 64, align: 64, offset: 6720)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1269, file: !57, line: 3038, baseType: !1025, size: 32, align: 32, offset: 6784)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1269, file: !57, line: 3050, baseType: !1069, size: 64, align: 64, offset: 6848)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1269, file: !57, line: 3065, baseType: !1025, size: 32, align: 32, offset: 6912)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1269, file: !57, line: 3083, baseType: !1025, size: 32, align: 32, offset: 6944)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1269, file: !57, line: 3092, baseType: !1052, size: 64, align: 32, offset: 6976)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1269, file: !57, line: 3099, baseType: !516, size: 32, align: 32, offset: 7040)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1269, file: !57, line: 3106, baseType: !1052, size: 64, align: 32, offset: 7072)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1269, file: !57, line: 3113, baseType: !1672, size: 64, align: 64, offset: 7168)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 64, align: 64)
!1673 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1674)
!1674 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !57, line: 740, baseType: !1675)
!1675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !57, line: 712, size: 384, align: 64, elements: !1676)
!1676 = !{!1677, !1678, !1679, !1680, !1681, !1682, !1685}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1675, file: !57, line: 713, baseType: !56, size: 32, align: 32)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1675, file: !57, line: 714, baseType: !46, size: 32, align: 32, offset: 32)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1675, file: !57, line: 720, baseType: !1155, size: 64, align: 64, offset: 64)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1675, file: !57, line: 724, baseType: !1155, size: 64, align: 64, offset: 128)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1675, file: !57, line: 728, baseType: !1025, size: 32, align: 32, offset: 192)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1675, file: !57, line: 734, baseType: !1683, size: 64, align: 64, offset: 256)
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 64, align: 64)
!1684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1155)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1675, file: !57, line: 739, baseType: !1686, size: 64, align: 64, offset: 320)
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 64, align: 64)
!1687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1255)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1269, file: !57, line: 3129, baseType: !1059, size: 64, align: 64, offset: 7232)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1269, file: !57, line: 3130, baseType: !1059, size: 64, align: 64, offset: 7296)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1269, file: !57, line: 3131, baseType: !1059, size: 64, align: 64, offset: 7360)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1269, file: !57, line: 3132, baseType: !1059, size: 64, align: 64, offset: 7424)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1269, file: !57, line: 3139, baseType: !1584, size: 64, align: 64, offset: 7488)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1269, file: !57, line: 3147, baseType: !1025, size: 32, align: 32, offset: 7552)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1269, file: !57, line: 3165, baseType: !1025, size: 32, align: 32, offset: 7584)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1269, file: !57, line: 3172, baseType: !1025, size: 32, align: 32, offset: 7616)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1269, file: !57, line: 3180, baseType: !1025, size: 32, align: 32, offset: 7648)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1269, file: !57, line: 3191, baseType: !1027, size: 64, align: 64, offset: 7680)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1269, file: !57, line: 3199, baseType: !1030, size: 64, align: 64, offset: 7744)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1269, file: !57, line: 3207, baseType: !1584, size: 64, align: 64, offset: 7808)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1269, file: !57, line: 3214, baseType: !1024, size: 32, align: 32, offset: 7872)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1269, file: !57, line: 3224, baseType: !1328, size: 64, align: 64, offset: 7936)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1269, file: !57, line: 3225, baseType: !1025, size: 32, align: 32, offset: 8000)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1269, file: !57, line: 3249, baseType: !1080, size: 64, align: 64, offset: 8064)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1269, file: !57, line: 3256, baseType: !1025, size: 32, align: 32, offset: 8128)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1269, file: !57, line: 3271, baseType: !1025, size: 32, align: 32, offset: 8160)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1269, file: !57, line: 3279, baseType: !1059, size: 64, align: 64, offset: 8192)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1269, file: !57, line: 3301, baseType: !1080, size: 64, align: 64, offset: 8256)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1269, file: !57, line: 3310, baseType: !1025, size: 32, align: 32, offset: 8320)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1269, file: !57, line: 3337, baseType: !1025, size: 32, align: 32, offset: 8352)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1269, file: !57, line: 3351, baseType: !1025, size: 32, align: 32, offset: 8384)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1269, file: !57, line: 3359, baseType: !1025, size: 32, align: 32, offset: 8416)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1152, file: !57, line: 3535, baseType: !1713, size: 64, align: 64, offset: 1024)
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1714, size: 64, align: 64)
!1714 = !DISubroutineType(types: !1715)
!1715 = !{!1025, !1267, !1716}
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 64, align: 64)
!1717 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1268)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1152, file: !57, line: 3541, baseType: !1719, size: 64, align: 64, offset: 1088)
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 64, align: 64)
!1720 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1721)
!1721 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !57, line: 3461, baseType: !1722)
!1722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1283, line: 223, size: 128, align: 64, elements: !1723)
!1723 = !{!1724, !1725}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1722, file: !1283, line: 224, baseType: !1146, size: 64, align: 64)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1722, file: !1283, line: 225, baseType: !1146, size: 64, align: 64, offset: 64)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1152, file: !57, line: 3549, baseType: !1727, size: 64, align: 64, offset: 1152)
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1728, size: 64, align: 64)
!1728 = !DISubroutineType(types: !1729)
!1729 = !{null, !1262}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1152, file: !57, line: 3551, baseType: !1264, size: 64, align: 64, offset: 1216)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1152, file: !57, line: 3552, baseType: !1732, size: 64, align: 64, offset: 1280)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 64, align: 64)
!1733 = !DISubroutineType(types: !1734)
!1734 = !{!1025, !1267, !1030, !1025, !1735}
!1735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 64, align: 64)
!1736 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1737)
!1737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !57, line: 3920, size: 256, align: 64, elements: !1738)
!1738 = !{!1739, !1740, !1741, !1742, !1743, !1767}
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1737, file: !57, line: 3921, baseType: !1028, size: 16, align: 16)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1737, file: !57, line: 3922, baseType: !1022, size: 32, align: 32, offset: 32)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1737, file: !57, line: 3923, baseType: !1022, size: 32, align: 32, offset: 64)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1737, file: !57, line: 3924, baseType: !1024, size: 32, align: 32, offset: 96)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1737, file: !57, line: 3925, baseType: !1744, size: 64, align: 64, offset: 128)
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 64, align: 64)
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 64, align: 64)
!1746 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !57, line: 3918, baseType: !1747)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !57, line: 3885, size: 1600, align: 64, elements: !1748)
!1748 = !{!1749, !1750, !1751, !1752, !1753, !1754, !1760, !1762, !1763, !1764, !1765, !1766}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1747, file: !57, line: 3886, baseType: !1025, size: 32, align: 32)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1747, file: !57, line: 3887, baseType: !1025, size: 32, align: 32, offset: 32)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1747, file: !57, line: 3888, baseType: !1025, size: 32, align: 32, offset: 64)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1747, file: !57, line: 3889, baseType: !1025, size: 32, align: 32, offset: 96)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1747, file: !57, line: 3890, baseType: !1025, size: 32, align: 32, offset: 128)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1747, file: !57, line: 3897, baseType: !1755, size: 768, align: 64, offset: 192)
!1755 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !57, line: 3858, baseType: !1756)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !57, line: 3853, size: 768, align: 64, elements: !1757)
!1757 = !{!1758, !1759}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1756, file: !57, line: 3855, baseType: !1038, size: 512, align: 64)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1756, file: !57, line: 3857, baseType: !1042, size: 256, align: 32, offset: 512)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1747, file: !57, line: 3903, baseType: !1761, size: 256, align: 64, offset: 960)
!1761 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 256, align: 64, elements: !1299)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1747, file: !57, line: 3904, baseType: !1306, size: 128, align: 32, offset: 1216)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1747, file: !57, line: 3906, baseType: !733, size: 32, align: 32, offset: 1344)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1747, file: !57, line: 3908, baseType: !1584, size: 64, align: 64, offset: 1408)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1747, file: !57, line: 3915, baseType: !1584, size: 64, align: 64, offset: 1472)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1747, file: !57, line: 3917, baseType: !1025, size: 32, align: 32, offset: 1536)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1737, file: !57, line: 3926, baseType: !1059, size: 64, align: 64, offset: 192)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1152, file: !57, line: 3564, baseType: !1769, size: 64, align: 64, offset: 1344)
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 64, align: 64)
!1770 = !DISubroutineType(types: !1771)
!1771 = !{!1025, !1267, !1316, !1460, !1462}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1152, file: !57, line: 3566, baseType: !1773, size: 64, align: 64, offset: 1408)
!1773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1774, size: 64, align: 64)
!1774 = !DISubroutineType(types: !1775)
!1775 = !{!1025, !1267, !1026, !1462, !1316}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1152, file: !57, line: 3567, baseType: !1264, size: 64, align: 64, offset: 1472)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1152, file: !57, line: 3576, baseType: !1778, size: 64, align: 64, offset: 1536)
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 64, align: 64)
!1779 = !DISubroutineType(types: !1780)
!1780 = !{!1025, !1267, !1460}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1152, file: !57, line: 3577, baseType: !1782, size: 64, align: 64, offset: 1600)
!1782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1783, size: 64, align: 64)
!1783 = !DISubroutineType(types: !1784)
!1784 = !{!1025, !1267, !1316}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1152, file: !57, line: 3584, baseType: !1603, size: 64, align: 64, offset: 1664)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1152, file: !57, line: 3589, baseType: !1787, size: 64, align: 64, offset: 1728)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64, align: 64)
!1788 = !DISubroutineType(types: !1789)
!1789 = !{null, !1267}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1152, file: !57, line: 3594, baseType: !1025, size: 32, align: 32, offset: 1792)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1152, file: !57, line: 3600, baseType: !1155, size: 64, align: 64, offset: 1856)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1152, file: !57, line: 3609, baseType: !1793, size: 64, align: 64, offset: 1920)
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 64, align: 64)
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 64, align: 64)
!1795 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1796)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !1797, line: 29, size: 192, align: 64, elements: !1798)
!1797 = !DIFile(filename: "libavcodec/hwaccel.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1798 = !{!1799, !1806}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "public", scope: !1796, file: !1797, line: 34, baseType: !1800, size: 96, align: 32)
!1800 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecHWConfig", file: !57, line: 3459, baseType: !1801)
!1801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfig", file: !57, line: 3442, size: 96, align: 32, elements: !1802)
!1802 = !{!1803, !1804, !1805}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1801, file: !57, line: 3446, baseType: !516, size: 32, align: 32)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "methods", scope: !1801, file: !57, line: 3451, baseType: !1025, size: 32, align: 32, offset: 32)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "device_type", scope: !1801, file: !57, line: 3458, baseType: !880, size: 32, align: 32, offset: 64)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1796, file: !1797, line: 39, baseType: !1807, size: 64, align: 64, offset: 128)
!1807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 64, align: 64)
!1808 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1809)
!1809 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVHWAccel", file: !57, line: 3796, baseType: !1595)
!1810 = distinct !DIGlobalVariable(name: "ff_thp_decoder", scope: !0, file: !1150, line: 2829, type: !1151, isLocal: false, isDefinition: true, variable: { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }* @ff_thp_decoder)
!1811 = distinct !DIGlobalVariable(name: "ht", scope: !1812, file: !1150, line: 85, type: !2051, isLocal: true, isDefinition: true, variable: [6 x %struct.anon]* @init_default_huffman_tables.ht)
!1812 = distinct !DISubprogram(name: "init_default_huffman_tables", scope: !1150, file: !1150, line: 76, type: !1813, isLocal: true, isDefinition: true, scopeLine: 77, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!1813 = !DISubroutineType(types: !1814)
!1814 = !{!1025, !1815}
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 64, align: 64)
!1816 = !DIDerivedType(tag: DW_TAG_typedef, name: "MJpegDecodeContext", file: !1817, line: 154, baseType: !1818)
!1817 = !DIFile(filename: "libavcodec/mjpegdec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MJpegDecodeContext", file: !1817, line: 46, size: 36352, align: 256, elements: !1819)
!1819 = !{!1820, !1822, !1823, !1833, !1834, !1835, !1836, !1837, !1841, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1911, !1914, !1915, !1917, !1918, !1926, !1944, !1960, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1994, !1995, !1996, !1997, !2005, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2043, !2047, !2048, !2049}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !1818, file: !1817, line: 47, baseType: !1821, size: 64, align: 64)
!1821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64, align: 64)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !1818, file: !1817, line: 48, baseType: !1267, size: 64, align: 64, offset: 64)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "gb", scope: !1818, file: !1817, line: 49, baseType: !1824, size: 256, align: 64, offset: 128)
!1824 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !1825, line: 70, baseType: !1826)
!1825 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !1825, line: 61, size: 256, align: 64, elements: !1827)
!1827 = !{!1828, !1829, !1830, !1831, !1832}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1826, file: !1825, line: 62, baseType: !1146, size: 64, align: 64)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1826, file: !1825, line: 62, baseType: !1146, size: 64, align: 64, offset: 64)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1826, file: !1825, line: 67, baseType: !1025, size: 32, align: 32, offset: 128)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1826, file: !1825, line: 68, baseType: !1025, size: 32, align: 32, offset: 160)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !1826, file: !1825, line: 69, baseType: !1025, size: 32, align: 32, offset: 192)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "buf_size", scope: !1818, file: !1817, line: 50, baseType: !1025, size: 32, align: 32, offset: 384)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1818, file: !1817, line: 52, baseType: !1025, size: 32, align: 32, offset: 416)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_size", scope: !1818, file: !1817, line: 53, baseType: !1025, size: 32, align: 32, offset: 448)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1818, file: !1817, line: 54, baseType: !1030, size: 64, align: 64, offset: 512)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "quant_matrixes", scope: !1818, file: !1817, line: 56, baseType: !1838, size: 4096, align: 16, offset: 576)
!1838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1028, size: 4096, align: 16, elements: !1839)
!1839 = !{!1300, !1840}
!1840 = !DISubrange(count: 64)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "vlcs", scope: !1818, file: !1817, line: 57, baseType: !1842, size: 2304, align: 64, offset: 4672)
!1842 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1843, size: 2304, align: 64, elements: !1857)
!1843 = !DIDerivedType(tag: DW_TAG_typedef, name: "VLC", file: !1844, line: 30, baseType: !1845)
!1844 = !DIFile(filename: "libavcodec/vlc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VLC", file: !1844, line: 26, size: 192, align: 64, elements: !1846)
!1846 = !{!1847, !1848, !1855, !1856}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1845, file: !1844, line: 27, baseType: !1025, size: 32, align: 32)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1845, file: !1844, line: 28, baseType: !1849, size: 64, align: 64, offset: 64)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 64, align: 64)
!1850 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1851, size: 32, align: 16, elements: !1853)
!1851 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !1023, line: 37, baseType: !1852)
!1852 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!1853 = !{!1854}
!1854 = !DISubrange(count: 2)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "table_size", scope: !1845, file: !1844, line: 29, baseType: !1025, size: 32, align: 32, offset: 128)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "table_allocated", scope: !1845, file: !1844, line: 29, baseType: !1025, size: 32, align: 32, offset: 160)
!1857 = !{!1858, !1300}
!1858 = !DISubrange(count: 3)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1818, file: !1817, line: 58, baseType: !1306, size: 128, align: 32, offset: 6976)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "org_height", scope: !1818, file: !1817, line: 60, baseType: !1025, size: 32, align: 32, offset: 7104)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "first_picture", scope: !1818, file: !1817, line: 61, baseType: !1025, size: 32, align: 32, offset: 7136)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced", scope: !1818, file: !1817, line: 62, baseType: !1025, size: 32, align: 32, offset: 7168)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "bottom_field", scope: !1818, file: !1817, line: 63, baseType: !1025, size: 32, align: 32, offset: 7200)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "lossless", scope: !1818, file: !1817, line: 64, baseType: !1025, size: 32, align: 32, offset: 7232)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "ls", scope: !1818, file: !1817, line: 65, baseType: !1025, size: 32, align: 32, offset: 7264)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "progressive", scope: !1818, file: !1817, line: 66, baseType: !1025, size: 32, align: 32, offset: 7296)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1818, file: !1817, line: 67, baseType: !1025, size: 32, align: 32, offset: 7328)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "upscale_h", scope: !1818, file: !1817, line: 68, baseType: !1869, size: 32, align: 8, offset: 7360)
!1869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1031, size: 32, align: 8, elements: !1299)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "upscale_v", scope: !1818, file: !1817, line: 69, baseType: !1869, size: 32, align: 8, offset: 7392)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "rct", scope: !1818, file: !1817, line: 70, baseType: !1025, size: 32, align: 32, offset: 7424)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "pegasus_rct", scope: !1818, file: !1817, line: 71, baseType: !1025, size: 32, align: 32, offset: 7456)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1818, file: !1817, line: 72, baseType: !1025, size: 32, align: 32, offset: 7488)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "colr", scope: !1818, file: !1817, line: 73, baseType: !1025, size: 32, align: 32, offset: 7520)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm", scope: !1818, file: !1817, line: 74, baseType: !1025, size: 32, align: 32, offset: 7552)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "adobe_transform", scope: !1818, file: !1817, line: 75, baseType: !1025, size: 32, align: 32, offset: 7584)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1818, file: !1817, line: 77, baseType: !1025, size: 32, align: 32, offset: 7616)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "near", scope: !1818, file: !1817, line: 78, baseType: !1025, size: 32, align: 32, offset: 7648)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "t1", scope: !1818, file: !1817, line: 79, baseType: !1025, size: 32, align: 32, offset: 7680)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "t2", scope: !1818, file: !1817, line: 79, baseType: !1025, size: 32, align: 32, offset: 7712)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "t3", scope: !1818, file: !1817, line: 79, baseType: !1025, size: 32, align: 32, offset: 7744)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !1818, file: !1817, line: 80, baseType: !1025, size: 32, align: 32, offset: 7776)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1818, file: !1817, line: 82, baseType: !1025, size: 32, align: 32, offset: 7808)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1818, file: !1817, line: 82, baseType: !1025, size: 32, align: 32, offset: 7840)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "mb_width", scope: !1818, file: !1817, line: 83, baseType: !1025, size: 32, align: 32, offset: 7872)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "mb_height", scope: !1818, file: !1817, line: 83, baseType: !1025, size: 32, align: 32, offset: 7904)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !1818, file: !1817, line: 84, baseType: !1025, size: 32, align: 32, offset: 7936)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "block_stride", scope: !1818, file: !1817, line: 85, baseType: !1306, size: 128, align: 32, offset: 7968)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "component_id", scope: !1818, file: !1817, line: 86, baseType: !1306, size: 128, align: 32, offset: 8096)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "h_count", scope: !1818, file: !1817, line: 87, baseType: !1306, size: 128, align: 32, offset: 8224)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "v_count", scope: !1818, file: !1817, line: 88, baseType: !1306, size: 128, align: 32, offset: 8352)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "comp_index", scope: !1818, file: !1817, line: 89, baseType: !1306, size: 128, align: 32, offset: 8480)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "dc_index", scope: !1818, file: !1817, line: 90, baseType: !1306, size: 128, align: 32, offset: 8608)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "ac_index", scope: !1818, file: !1817, line: 91, baseType: !1306, size: 128, align: 32, offset: 8736)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "nb_blocks", scope: !1818, file: !1817, line: 92, baseType: !1306, size: 128, align: 32, offset: 8864)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "h_scount", scope: !1818, file: !1817, line: 93, baseType: !1306, size: 128, align: 32, offset: 8992)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "v_scount", scope: !1818, file: !1817, line: 94, baseType: !1306, size: 128, align: 32, offset: 9120)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "quant_sindex", scope: !1818, file: !1817, line: 95, baseType: !1306, size: 128, align: 32, offset: 9248)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "h_max", scope: !1818, file: !1817, line: 96, baseType: !1025, size: 32, align: 32, offset: 9376)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "v_max", scope: !1818, file: !1817, line: 96, baseType: !1025, size: 32, align: 32, offset: 9408)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "quant_index", scope: !1818, file: !1817, line: 97, baseType: !1306, size: 128, align: 32, offset: 9440)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "last_dc", scope: !1818, file: !1817, line: 98, baseType: !1306, size: 128, align: 32, offset: 9568)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "picture", scope: !1818, file: !1817, line: 99, baseType: !1033, size: 64, align: 64, offset: 9728)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "picture_ptr", scope: !1818, file: !1817, line: 100, baseType: !1033, size: 64, align: 64, offset: 9792)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "got_picture", scope: !1818, file: !1817, line: 101, baseType: !1025, size: 32, align: 32, offset: 9856)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1818, file: !1817, line: 102, baseType: !1306, size: 128, align: 32, offset: 9888)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1818, file: !1817, line: 103, baseType: !1124, size: 64, align: 64, offset: 10048)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1818, file: !1817, line: 104, baseType: !1909, size: 1024, align: 16, offset: 10240)
!1909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1851, size: 1024, align: 16, elements: !1910)
!1910 = !{!1840}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1818, file: !1817, line: 105, baseType: !1912, size: 256, align: 64, offset: 11264)
!1912 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1913, size: 256, align: 64, elements: !1299)
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 64, align: 64)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "last_nnz", scope: !1818, file: !1817, line: 106, baseType: !1761, size: 256, align: 64, offset: 11520)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "coefs_finished", scope: !1818, file: !1817, line: 107, baseType: !1916, size: 256, align: 64, offset: 11776)
!1916 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1069, size: 256, align: 64, elements: !1299)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "palette_index", scope: !1818, file: !1817, line: 108, baseType: !1025, size: 32, align: 32, offset: 12032)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "scantable", scope: !1818, file: !1817, line: 109, baseType: !1919, size: 1088, align: 64, offset: 12096)
!1919 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScanTable", file: !924, line: 35, baseType: !1920)
!1920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScanTable", file: !924, line: 31, size: 1088, align: 64, elements: !1921)
!1921 = !{!1922, !1923, !1925}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "scantable", scope: !1920, file: !924, line: 32, baseType: !1146, size: 64, align: 64)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "permutated", scope: !1920, file: !924, line: 33, baseType: !1924, size: 512, align: 8, offset: 64)
!1924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1031, size: 512, align: 8, elements: !1910)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "raster_end", scope: !1920, file: !924, line: 34, baseType: !1924, size: 512, align: 8, offset: 576)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "bdsp", scope: !1818, file: !1817, line: 110, baseType: !1927, size: 256, align: 64, offset: 13184)
!1927 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlockDSPContext", file: !1928, line: 40, baseType: !1929)
!1928 = !DIFile(filename: "libavcodec/blockdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BlockDSPContext", file: !1928, line: 35, size: 256, align: 64, elements: !1930)
!1930 = !{!1931, !1936, !1937}
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "clear_block", scope: !1929, file: !1928, line: 36, baseType: !1932, size: 64, align: 64)
!1932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1933, size: 64, align: 64)
!1933 = !DISubroutineType(types: !1934)
!1934 = !{null, !1935}
!1935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 64, align: 64)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "clear_blocks", scope: !1929, file: !1928, line: 37, baseType: !1932, size: 64, align: 64, offset: 64)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "fill_block_tab", scope: !1929, file: !1928, line: 39, baseType: !1938, size: 128, align: 64, offset: 128)
!1938 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1939, size: 128, align: 64, elements: !1853)
!1939 = !DIDerivedType(tag: DW_TAG_typedef, name: "op_fill_func", file: !1928, line: 32, baseType: !1940)
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 64, align: 64)
!1941 = !DISubroutineType(types: !1942)
!1942 = !{null, !1030, !1031, !1943, !1025}
!1943 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1134, line: 149, baseType: !1060)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "hdsp", scope: !1818, file: !1817, line: 111, baseType: !1945, size: 3328, align: 64, offset: 13440)
!1945 = !DIDerivedType(tag: DW_TAG_typedef, name: "HpelDSPContext", file: !1946, line: 95, baseType: !1947)
!1946 = !DIFile(filename: "libavcodec/hpeldsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HpelDSPContext", file: !1946, line: 45, size: 3328, align: 64, elements: !1948)
!1948 = !{!1949, !1956, !1957, !1958}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "put_pixels_tab", scope: !1947, file: !1946, line: 56, baseType: !1950, size: 1024, align: 64)
!1950 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1951, size: 1024, align: 64, elements: !1955)
!1951 = !DIDerivedType(tag: DW_TAG_typedef, name: "op_pixels_func", file: !1946, line: 38, baseType: !1952)
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 64, align: 64)
!1953 = !DISubroutineType(types: !1954)
!1954 = !{null, !1030, !1146, !1943, !1025}
!1955 = !{!1300, !1300}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "avg_pixels_tab", scope: !1947, file: !1946, line: 68, baseType: !1950, size: 1024, align: 64, offset: 1024)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "put_no_rnd_pixels_tab", scope: !1947, file: !1946, line: 82, baseType: !1950, size: 1024, align: 64, offset: 2048)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "avg_no_rnd_pixels_tab", scope: !1947, file: !1946, line: 94, baseType: !1959, size: 256, align: 64, offset: 3072)
!1959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1951, size: 256, align: 64, elements: !1299)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "idsp", scope: !1818, file: !1817, line: 112, baseType: !1961, size: 960, align: 64, offset: 16768)
!1961 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDCTDSPContext", file: !924, line: 100, baseType: !1962)
!1962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDCTDSPContext", file: !924, line: 53, size: 960, align: 64, elements: !1963)
!1963 = !{!1964, !1971, !1972, !1973, !1974, !1978, !1979, !1980, !1981}
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "put_pixels_clamped", scope: !1962, file: !924, line: 55, baseType: !1965, size: 64, align: 64)
!1965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1966, size: 64, align: 64)
!1966 = !DISubroutineType(types: !1967)
!1967 = !{null, !1968, !1970, !1943}
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 64, align: 64)
!1969 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1851)
!1970 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1030)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "put_signed_pixels_clamped", scope: !1962, file: !924, line: 58, baseType: !1965, size: 64, align: 64, offset: 64)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "add_pixels_clamped", scope: !1962, file: !924, line: 61, baseType: !1965, size: 64, align: 64, offset: 128)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "idct", scope: !1962, file: !924, line: 65, baseType: !1932, size: 64, align: 64, offset: 192)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "idct_put", scope: !1962, file: !924, line: 72, baseType: !1975, size: 64, align: 64, offset: 256)
!1975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1976, size: 64, align: 64)
!1976 = !DISubroutineType(types: !1977)
!1977 = !{null, !1030, !1943, !1935}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "idct_add", scope: !1962, file: !924, line: 79, baseType: !1975, size: 64, align: 64, offset: 320)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "idct_permutation", scope: !1962, file: !924, line: 96, baseType: !1924, size: 512, align: 8, offset: 384)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "perm_type", scope: !1962, file: !924, line: 97, baseType: !923, size: 32, align: 32, offset: 896)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg4_studio_profile", scope: !1962, file: !924, line: 99, baseType: !1025, size: 32, align: 32, offset: 928)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "restart_interval", scope: !1818, file: !1817, line: 114, baseType: !1025, size: 32, align: 32, offset: 17728)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "restart_count", scope: !1818, file: !1817, line: 115, baseType: !1025, size: 32, align: 32, offset: 17760)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "buggy_avid", scope: !1818, file: !1817, line: 117, baseType: !1025, size: 32, align: 32, offset: 17792)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "cs_itu601", scope: !1818, file: !1817, line: 118, baseType: !1025, size: 32, align: 32, offset: 17824)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "interlace_polarity", scope: !1818, file: !1817, line: 119, baseType: !1025, size: 32, align: 32, offset: 17856)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "multiscope", scope: !1818, file: !1817, line: 120, baseType: !1025, size: 32, align: 32, offset: 17888)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "mjpb_skiptosod", scope: !1818, file: !1817, line: 122, baseType: !1025, size: 32, align: 32, offset: 17920)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "cur_scan", scope: !1818, file: !1817, line: 124, baseType: !1025, size: 32, align: 32, offset: 17952)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "flipped", scope: !1818, file: !1817, line: 125, baseType: !1025, size: 32, align: 32, offset: 17984)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "ljpeg_buffer", scope: !1818, file: !1817, line: 127, baseType: !1992, size: 64, align: 64, offset: 18048)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64, align: 64)
!1993 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1028, size: 64, align: 16, elements: !1299)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "ljpeg_buffer_size", scope: !1818, file: !1817, line: 128, baseType: !1024, size: 32, align: 32, offset: 18112)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "extern_huff", scope: !1818, file: !1817, line: 130, baseType: !1025, size: 32, align: 32, offset: 18144)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "exif_metadata", scope: !1818, file: !1817, line: 131, baseType: !1104, size: 64, align: 64, offset: 18176)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "stereo3d", scope: !1818, file: !1817, line: 133, baseType: !1998, size: 64, align: 64, offset: 18240)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64, align: 64)
!1999 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVStereo3D", file: !933, line: 191, baseType: !2000)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVStereo3D", file: !933, line: 176, size: 96, align: 32, elements: !2001)
!2001 = !{!2002, !2003, !2004}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2000, file: !933, line: 180, baseType: !932, size: 32, align: 32)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2000, file: !933, line: 185, baseType: !1025, size: 32, align: 32, offset: 32)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !2000, file: !933, line: 190, baseType: !943, size: 32, align: 32, offset: 64)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "pix_desc", scope: !1818, file: !1817, line: 135, baseType: !2006, size: 64, align: 64, offset: 18304)
!2006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2007, size: 64, align: 64)
!2007 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2008)
!2008 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPixFmtDescriptor", file: !2009, line: 123, baseType: !2010)
!2009 = !DIFile(filename: "./libavutil/pixdesc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPixFmtDescriptor", file: !2009, line: 81, size: 1280, align: 64, elements: !2011)
!2011 = !{!2012, !2013, !2014, !2015, !2016, !2017, !2030}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2010, file: !2009, line: 82, baseType: !1155, size: 64, align: 64)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !2010, file: !2009, line: 83, baseType: !1031, size: 8, align: 8, offset: 64)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "log2_chroma_w", scope: !2010, file: !2009, line: 92, baseType: !1031, size: 8, align: 8, offset: 72)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "log2_chroma_h", scope: !2010, file: !2009, line: 101, baseType: !1031, size: 8, align: 8, offset: 80)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2010, file: !2009, line: 106, baseType: !1069, size: 64, align: 64, offset: 128)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "comp", scope: !2010, file: !2009, line: 117, baseType: !2018, size: 1024, align: 32, offset: 192)
!2018 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2019, size: 1024, align: 32, elements: !1299)
!2019 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVComponentDescriptor", file: !2009, line: 70, baseType: !2020)
!2020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVComponentDescriptor", file: !2009, line: 31, size: 256, align: 32, elements: !2021)
!2021 = !{!2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "plane", scope: !2020, file: !2009, line: 35, baseType: !1025, size: 32, align: 32)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2020, file: !2009, line: 41, baseType: !1025, size: 32, align: 32, offset: 32)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2020, file: !2009, line: 47, baseType: !1025, size: 32, align: 32, offset: 64)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !2020, file: !2009, line: 53, baseType: !1025, size: 32, align: 32, offset: 96)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2020, file: !2009, line: 58, baseType: !1025, size: 32, align: 32, offset: 128)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "step_minus1", scope: !2020, file: !2009, line: 62, baseType: !1025, size: 32, align: 32, offset: 160)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "depth_minus1", scope: !2020, file: !2009, line: 65, baseType: !1025, size: 32, align: 32, offset: 192)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "offset_plus1", scope: !2020, file: !2009, line: 68, baseType: !1025, size: 32, align: 32, offset: 224)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !2010, file: !2009, line: 122, baseType: !1155, size: 64, align: 64, offset: 1216)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "iccdata", scope: !1818, file: !1817, line: 137, baseType: !1044, size: 64, align: 64, offset: 18368)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "iccdatalens", scope: !1818, file: !1817, line: 138, baseType: !1462, size: 64, align: 64, offset: 18432)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "iccnum", scope: !1818, file: !1817, line: 139, baseType: !1025, size: 32, align: 32, offset: 18496)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "iccread", scope: !1818, file: !1817, line: 140, baseType: !1025, size: 32, align: 32, offset: 18528)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "raw_image_buffer", scope: !1818, file: !1817, line: 143, baseType: !1146, size: 64, align: 64, offset: 18560)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "raw_image_buffer_size", scope: !1818, file: !1817, line: 144, baseType: !1133, size: 64, align: 64, offset: 18624)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "raw_scan_buffer", scope: !1818, file: !1817, line: 145, baseType: !1146, size: 64, align: 64, offset: 18688)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "raw_scan_buffer_size", scope: !1818, file: !1817, line: 146, baseType: !1133, size: 64, align: 64, offset: 18752)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "raw_huffman_lengths", scope: !1818, file: !1817, line: 148, baseType: !2040, size: 1024, align: 8, offset: 18816)
!2040 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1031, size: 1024, align: 8, elements: !2041)
!2041 = !{!1854, !1300, !2042}
!2042 = !DISubrange(count: 16)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "raw_huffman_values", scope: !1818, file: !1817, line: 149, baseType: !2044, size: 16384, align: 8, offset: 19840)
!2044 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1031, size: 16384, align: 8, elements: !2045)
!2045 = !{!1854, !1300, !2046}
!2046 = !DISubrange(count: 256)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_sw_pix_fmt", scope: !1818, file: !1817, line: 151, baseType: !516, size: 32, align: 32, offset: 36224)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_pix_fmt", scope: !1818, file: !1817, line: 152, baseType: !516, size: 32, align: 32, offset: 36256)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_picture_private", scope: !1818, file: !1817, line: 153, baseType: !1026, size: 64, align: 64, offset: 36288)
!2050 = !{}
!2051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2052, size: 1536, align: 64, elements: !2061)
!2052 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2053)
!2053 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1812, file: !1150, line: 78, size: 256, align: 64, elements: !2054)
!2054 = !{!2055, !2056, !2057, !2058, !2059, !2060}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !2053, file: !1150, line: 79, baseType: !1025, size: 32, align: 32)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2053, file: !1150, line: 80, baseType: !1025, size: 32, align: 32, offset: 32)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2053, file: !1150, line: 81, baseType: !1146, size: 64, align: 64, offset: 64)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !2053, file: !1150, line: 82, baseType: !1146, size: 64, align: 64, offset: 128)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "codes", scope: !2053, file: !1150, line: 83, baseType: !1025, size: 32, align: 32, offset: 192)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2053, file: !1150, line: 84, baseType: !1025, size: 32, align: 32, offset: 224)
!2061 = !{!2062}
!2062 = !DISubrange(count: 6)
!2063 = distinct !DIGlobalVariable(name: "mjpegdec_class", scope: !0, file: !1150, line: 2794, type: !1180, isLocal: true, isDefinition: true, variable: %struct.AVClass* @mjpegdec_class)
!2064 = distinct !DIGlobalVariable(name: "options", scope: !0, file: !1150, line: 2788, type: !2065, isLocal: true, isDefinition: true, variable: [2 x %struct.AVOption]* @options)
!2065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2066, size: 1024, align: 64, elements: !1853)
!2066 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2067)
!2067 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOption", file: !4, line: 301, baseType: !1192)
!2068 = !{i32 2, !"Dwarf Version", i32 4}
!2069 = !{i32 2, !"Debug Info Version", i32 3}
!2070 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!2071 = distinct !DISubprogram(name: "ff_mjpeg_decode_init", scope: !1150, file: !1150, line: 139, type: !1265, isLocal: false, isDefinition: true, scopeLine: 140, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!2072 = !DILocalVariable(name: "avctx", arg: 1, scope: !2071, file: !1150, line: 139, type: !1267)
!2073 = !DIExpression()
!2074 = !DILocation(line: 139, column: 64, scope: !2071)
!2075 = !DILocalVariable(name: "s", scope: !2071, file: !1150, line: 141, type: !1815)
!2076 = !DILocation(line: 141, column: 25, scope: !2071)
!2077 = !DILocation(line: 141, column: 29, scope: !2071)
!2078 = !DILocation(line: 141, column: 36, scope: !2071)
!2079 = !DILocalVariable(name: "ret", scope: !2071, file: !1150, line: 142, type: !1025)
!2080 = !DILocation(line: 142, column: 9, scope: !2071)
!2081 = !DILocation(line: 144, column: 10, scope: !2082)
!2082 = distinct !DILexicalBlock(scope: !2071, file: !1150, line: 144, column: 9)
!2083 = !DILocation(line: 144, column: 13, scope: !2082)
!2084 = !DILocation(line: 144, column: 9, scope: !2071)
!2085 = !DILocation(line: 145, column: 22, scope: !2086)
!2086 = distinct !DILexicalBlock(scope: !2082, file: !1150, line: 144, column: 26)
!2087 = !DILocation(line: 145, column: 9, scope: !2086)
!2088 = !DILocation(line: 145, column: 12, scope: !2086)
!2089 = !DILocation(line: 145, column: 20, scope: !2086)
!2090 = !DILocation(line: 146, column: 14, scope: !2091)
!2091 = distinct !DILexicalBlock(scope: !2086, file: !1150, line: 146, column: 13)
!2092 = !DILocation(line: 146, column: 17, scope: !2091)
!2093 = !DILocation(line: 146, column: 13, scope: !2086)
!2094 = !DILocation(line: 147, column: 13, scope: !2091)
!2095 = !DILocation(line: 148, column: 26, scope: !2086)
!2096 = !DILocation(line: 148, column: 29, scope: !2086)
!2097 = !DILocation(line: 148, column: 9, scope: !2086)
!2098 = !DILocation(line: 148, column: 12, scope: !2086)
!2099 = !DILocation(line: 148, column: 24, scope: !2086)
!2100 = !DILocation(line: 149, column: 5, scope: !2086)
!2101 = !DILocation(line: 151, column: 16, scope: !2071)
!2102 = !DILocation(line: 151, column: 5, scope: !2071)
!2103 = !DILocation(line: 151, column: 8, scope: !2071)
!2104 = !DILocation(line: 151, column: 14, scope: !2071)
!2105 = !DILocation(line: 152, column: 23, scope: !2071)
!2106 = !DILocation(line: 152, column: 26, scope: !2071)
!2107 = !DILocation(line: 152, column: 32, scope: !2071)
!2108 = !DILocation(line: 152, column: 5, scope: !2071)
!2109 = !DILocation(line: 153, column: 22, scope: !2071)
!2110 = !DILocation(line: 153, column: 25, scope: !2071)
!2111 = !DILocation(line: 153, column: 31, scope: !2071)
!2112 = !DILocation(line: 153, column: 38, scope: !2071)
!2113 = !DILocation(line: 153, column: 5, scope: !2071)
!2114 = !DILocation(line: 154, column: 15, scope: !2071)
!2115 = !DILocation(line: 154, column: 5, scope: !2071)
!2116 = !DILocation(line: 155, column: 5, scope: !2071)
!2117 = !DILocation(line: 155, column: 8, scope: !2071)
!2118 = !DILocation(line: 155, column: 20, scope: !2071)
!2119 = !DILocation(line: 156, column: 5, scope: !2071)
!2120 = !DILocation(line: 156, column: 8, scope: !2071)
!2121 = !DILocation(line: 156, column: 15, scope: !2071)
!2122 = !DILocation(line: 157, column: 5, scope: !2071)
!2123 = !DILocation(line: 157, column: 8, scope: !2071)
!2124 = !DILocation(line: 157, column: 19, scope: !2071)
!2125 = !DILocation(line: 158, column: 5, scope: !2071)
!2126 = !DILocation(line: 158, column: 8, scope: !2071)
!2127 = !DILocation(line: 158, column: 22, scope: !2071)
!2128 = !DILocation(line: 159, column: 5, scope: !2071)
!2129 = !DILocation(line: 159, column: 8, scope: !2071)
!2130 = !DILocation(line: 159, column: 20, scope: !2071)
!2131 = !DILocation(line: 160, column: 21, scope: !2071)
!2132 = !DILocation(line: 160, column: 28, scope: !2071)
!2133 = !DILocation(line: 160, column: 5, scope: !2071)
!2134 = !DILocation(line: 160, column: 8, scope: !2071)
!2135 = !DILocation(line: 160, column: 19, scope: !2071)
!2136 = !DILocation(line: 161, column: 5, scope: !2071)
!2137 = !DILocation(line: 161, column: 12, scope: !2071)
!2138 = !DILocation(line: 161, column: 35, scope: !2071)
!2139 = !DILocation(line: 162, column: 5, scope: !2071)
!2140 = !DILocation(line: 162, column: 12, scope: !2071)
!2141 = !DILocation(line: 162, column: 23, scope: !2071)
!2142 = !DILocation(line: 163, column: 26, scope: !2071)
!2143 = !DILocation(line: 163, column: 29, scope: !2071)
!2144 = !DILocation(line: 163, column: 48, scope: !2071)
!2145 = !DILocation(line: 163, column: 5, scope: !2071)
!2146 = !DILocation(line: 163, column: 8, scope: !2071)
!2147 = !DILocation(line: 163, column: 24, scope: !2071)
!2148 = !DILocation(line: 165, column: 44, scope: !2149)
!2149 = distinct !DILexicalBlock(scope: !2071, file: !1150, line: 165, column: 9)
!2150 = !DILocation(line: 165, column: 16, scope: !2149)
!2151 = !DILocation(line: 165, column: 14, scope: !2149)
!2152 = !DILocation(line: 165, column: 48, scope: !2149)
!2153 = !DILocation(line: 165, column: 9, scope: !2071)
!2154 = !DILocation(line: 166, column: 16, scope: !2149)
!2155 = !DILocation(line: 166, column: 9, scope: !2149)
!2156 = !DILocation(line: 168, column: 9, scope: !2157)
!2157 = distinct !DILexicalBlock(scope: !2071, file: !1150, line: 168, column: 9)
!2158 = !DILocation(line: 168, column: 12, scope: !2157)
!2159 = !DILocation(line: 168, column: 9, scope: !2071)
!2160 = !DILocation(line: 169, column: 16, scope: !2161)
!2161 = distinct !DILexicalBlock(scope: !2157, file: !1150, line: 168, column: 25)
!2162 = !DILocation(line: 169, column: 9, scope: !2161)
!2163 = !DILocation(line: 170, column: 35, scope: !2164)
!2164 = distinct !DILexicalBlock(scope: !2161, file: !1150, line: 170, column: 13)
!2165 = !DILocation(line: 170, column: 38, scope: !2164)
!2166 = !DILocation(line: 170, column: 42, scope: !2164)
!2167 = !DILocation(line: 170, column: 49, scope: !2164)
!2168 = !DILocation(line: 170, column: 60, scope: !2164)
!2169 = !DILocation(line: 170, column: 67, scope: !2164)
!2170 = !DILocation(line: 170, column: 82, scope: !2164)
!2171 = !DILocation(line: 170, column: 20, scope: !2164)
!2172 = !DILocation(line: 170, column: 18, scope: !2164)
!2173 = !DILocation(line: 170, column: 88, scope: !2164)
!2174 = !DILocation(line: 170, column: 13, scope: !2161)
!2175 = !DILocation(line: 171, column: 20, scope: !2164)
!2176 = !DILocation(line: 171, column: 13, scope: !2164)
!2177 = !DILocation(line: 172, column: 33, scope: !2178)
!2178 = distinct !DILexicalBlock(scope: !2161, file: !1150, line: 172, column: 13)
!2179 = !DILocation(line: 172, column: 13, scope: !2178)
!2180 = !DILocation(line: 172, column: 13, scope: !2161)
!2181 = !DILocation(line: 173, column: 20, scope: !2182)
!2182 = distinct !DILexicalBlock(scope: !2178, file: !1150, line: 172, column: 37)
!2183 = !DILocation(line: 173, column: 13, scope: !2182)
!2184 = !DILocation(line: 175, column: 41, scope: !2182)
!2185 = !DILocation(line: 175, column: 13, scope: !2182)
!2186 = !DILocation(line: 176, column: 9, scope: !2182)
!2187 = !DILocation(line: 177, column: 5, scope: !2161)
!2188 = !DILocation(line: 178, column: 9, scope: !2189)
!2189 = distinct !DILexicalBlock(scope: !2071, file: !1150, line: 178, column: 9)
!2190 = !DILocation(line: 178, column: 16, scope: !2189)
!2191 = !DILocation(line: 178, column: 28, scope: !2189)
!2192 = !DILocation(line: 178, column: 9, scope: !2071)
!2193 = !DILocation(line: 179, column: 9, scope: !2194)
!2194 = distinct !DILexicalBlock(scope: !2189, file: !1150, line: 178, column: 44)
!2195 = !DILocation(line: 179, column: 12, scope: !2194)
!2196 = !DILocation(line: 179, column: 31, scope: !2194)
!2197 = !DILocation(line: 180, column: 16, scope: !2194)
!2198 = !DILocation(line: 180, column: 9, scope: !2194)
!2199 = !DILocation(line: 181, column: 5, scope: !2194)
!2200 = !DILocation(line: 181, column: 16, scope: !2201)
!2201 = !DILexicalBlockFile(scope: !2202, file: !1150, discriminator: 1)
!2202 = distinct !DILexicalBlock(scope: !2189, file: !1150, line: 181, column: 16)
!2203 = !DILocation(line: 181, column: 23, scope: !2201)
!2204 = !DILocation(line: 181, column: 35, scope: !2201)
!2205 = !DILocation(line: 182, column: 13, scope: !2206)
!2206 = distinct !DILexicalBlock(scope: !2207, file: !1150, line: 182, column: 13)
!2207 = distinct !DILexicalBlock(scope: !2202, file: !1150, line: 181, column: 56)
!2208 = !DILocation(line: 182, column: 20, scope: !2206)
!2209 = !DILocation(line: 182, column: 75, scope: !2206)
!2210 = !DILocation(line: 182, column: 30, scope: !2206)
!2211 = !DILocation(line: 182, column: 13, scope: !2207)
!2212 = !DILocation(line: 183, column: 13, scope: !2206)
!2213 = !DILocation(line: 183, column: 16, scope: !2206)
!2214 = !DILocation(line: 183, column: 35, scope: !2206)
!2215 = !DILocation(line: 184, column: 5, scope: !2207)
!2216 = !DILocation(line: 186, column: 10, scope: !2217)
!2217 = distinct !DILexicalBlock(scope: !2071, file: !1150, line: 186, column: 10)
!2218 = !DILocation(line: 186, column: 17, scope: !2217)
!2219 = !DILocation(line: 186, column: 32, scope: !2217)
!2220 = !DILocation(line: 187, column: 9, scope: !2217)
!2221 = !DILocation(line: 187, column: 44, scope: !2222)
!2222 = !DILexicalBlockFile(scope: !2217, file: !1150, discriminator: 1)
!2223 = !DILocation(line: 187, column: 51, scope: !2222)
!2224 = !DILocation(line: 187, column: 64, scope: !2222)
!2225 = !DILocation(line: 187, column: 67, scope: !2222)
!2226 = !DILocation(line: 188, column: 9, scope: !2217)
!2227 = !DILocation(line: 188, column: 44, scope: !2222)
!2228 = !DILocation(line: 188, column: 51, scope: !2222)
!2229 = !DILocation(line: 188, column: 60, scope: !2222)
!2230 = !DILocation(line: 188, column: 66, scope: !2222)
!2231 = !DILocation(line: 188, column: 69, scope: !2222)
!2232 = !DILocation(line: 186, column: 10, scope: !2233)
!2233 = !DILexicalBlockFile(scope: !2071, file: !1150, discriminator: 1)
!2234 = !DILocation(line: 189, column: 20, scope: !2235)
!2235 = distinct !DILexicalBlock(scope: !2217, file: !1150, line: 188, column: 78)
!2236 = !DILocation(line: 189, column: 23, scope: !2235)
!2237 = !DILocation(line: 189, column: 30, scope: !2235)
!2238 = !DILocation(line: 189, column: 41, scope: !2235)
!2239 = !DILocation(line: 189, column: 48, scope: !2235)
!2240 = !DILocation(line: 189, column: 9, scope: !2235)
!2241 = !DILocation(line: 190, column: 5, scope: !2235)
!2242 = !DILocation(line: 192, column: 9, scope: !2243)
!2243 = distinct !DILexicalBlock(scope: !2071, file: !1150, line: 192, column: 9)
!2244 = !DILocation(line: 192, column: 16, scope: !2243)
!2245 = !DILocation(line: 192, column: 23, scope: !2243)
!2246 = !DILocation(line: 192, column: 26, scope: !2243)
!2247 = !DILocation(line: 192, column: 9, scope: !2071)
!2248 = !DILocation(line: 193, column: 9, scope: !2243)
!2249 = !DILocation(line: 193, column: 12, scope: !2243)
!2250 = !DILocation(line: 193, column: 20, scope: !2243)
!2251 = !DILocation(line: 195, column: 5, scope: !2071)
!2252 = !DILocation(line: 196, column: 1, scope: !2071)
!2253 = distinct !DISubprogram(name: "init_idct", scope: !1150, file: !1150, line: 130, type: !1788, isLocal: true, isDefinition: true, scopeLine: 131, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!2254 = !DILocalVariable(name: "avctx", arg: 1, scope: !2253, file: !1150, line: 130, type: !1267)
!2255 = !DILocation(line: 130, column: 39, scope: !2253)
!2256 = !DILocalVariable(name: "s", scope: !2253, file: !1150, line: 132, type: !1815)
!2257 = !DILocation(line: 132, column: 25, scope: !2253)
!2258 = !DILocation(line: 132, column: 29, scope: !2253)
!2259 = !DILocation(line: 132, column: 36, scope: !2253)
!2260 = !DILocation(line: 134, column: 22, scope: !2253)
!2261 = !DILocation(line: 134, column: 25, scope: !2253)
!2262 = !DILocation(line: 134, column: 31, scope: !2253)
!2263 = !DILocation(line: 134, column: 5, scope: !2253)
!2264 = !DILocation(line: 135, column: 23, scope: !2253)
!2265 = !DILocation(line: 135, column: 26, scope: !2253)
!2266 = !DILocation(line: 135, column: 31, scope: !2253)
!2267 = !DILocation(line: 135, column: 50, scope: !2253)
!2268 = !DILocation(line: 135, column: 53, scope: !2253)
!2269 = !DILocation(line: 135, column: 5, scope: !2253)
!2270 = !DILocation(line: 137, column: 1, scope: !2253)
!2271 = !DILocalVariable(name: "s", arg: 1, scope: !1812, file: !1150, line: 76, type: !1815)
!2272 = !DILocation(line: 76, column: 60, scope: !1812)
!2273 = !DILocalVariable(name: "i", scope: !1812, file: !1150, line: 99, type: !1025)
!2274 = !DILocation(line: 99, column: 9, scope: !1812)
!2275 = !DILocalVariable(name: "ret", scope: !1812, file: !1150, line: 99, type: !1025)
!2276 = !DILocation(line: 99, column: 12, scope: !1812)
!2277 = !DILocation(line: 101, column: 12, scope: !2278)
!2278 = distinct !DILexicalBlock(scope: !1812, file: !1150, line: 101, column: 5)
!2279 = !DILocation(line: 101, column: 10, scope: !2278)
!2280 = !DILocation(line: 101, column: 17, scope: !2281)
!2281 = !DILexicalBlockFile(scope: !2282, file: !1150, discriminator: 1)
!2282 = distinct !DILexicalBlock(scope: !2278, file: !1150, line: 101, column: 5)
!2283 = !DILocation(line: 101, column: 19, scope: !2281)
!2284 = !DILocation(line: 101, column: 5, scope: !2281)
!2285 = !DILocation(line: 102, column: 50, scope: !2286)
!2286 = distinct !DILexicalBlock(scope: !2282, file: !1150, line: 101, column: 58)
!2287 = !DILocation(line: 102, column: 47, scope: !2286)
!2288 = !DILocation(line: 102, column: 53, scope: !2286)
!2289 = !DILocation(line: 102, column: 26, scope: !2286)
!2290 = !DILocation(line: 102, column: 37, scope: !2286)
!2291 = !DILocation(line: 102, column: 34, scope: !2286)
!2292 = !DILocation(line: 102, column: 40, scope: !2286)
!2293 = !DILocation(line: 102, column: 29, scope: !2286)
!2294 = !DILocation(line: 103, column: 28, scope: !2286)
!2295 = !DILocation(line: 103, column: 25, scope: !2286)
!2296 = !DILocation(line: 103, column: 31, scope: !2286)
!2297 = !DILocation(line: 103, column: 40, scope: !2286)
!2298 = !DILocation(line: 103, column: 37, scope: !2286)
!2299 = !DILocation(line: 103, column: 43, scope: !2286)
!2300 = !DILocation(line: 103, column: 54, scope: !2286)
!2301 = !DILocation(line: 103, column: 51, scope: !2286)
!2302 = !DILocation(line: 103, column: 57, scope: !2286)
!2303 = !DILocation(line: 104, column: 31, scope: !2286)
!2304 = !DILocation(line: 104, column: 28, scope: !2286)
!2305 = !DILocation(line: 104, column: 34, scope: !2286)
!2306 = !DILocation(line: 104, column: 40, scope: !2286)
!2307 = !DILocation(line: 102, column: 15, scope: !2286)
!2308 = !DILocation(line: 102, column: 13, scope: !2286)
!2309 = !DILocation(line: 105, column: 13, scope: !2310)
!2310 = distinct !DILexicalBlock(scope: !2286, file: !1150, line: 105, column: 13)
!2311 = !DILocation(line: 105, column: 17, scope: !2310)
!2312 = !DILocation(line: 105, column: 13, scope: !2286)
!2313 = !DILocation(line: 106, column: 20, scope: !2310)
!2314 = !DILocation(line: 106, column: 13, scope: !2310)
!2315 = !DILocation(line: 108, column: 16, scope: !2316)
!2316 = distinct !DILexicalBlock(scope: !2286, file: !1150, line: 108, column: 13)
!2317 = !DILocation(line: 108, column: 13, scope: !2316)
!2318 = !DILocation(line: 108, column: 19, scope: !2316)
!2319 = !DILocation(line: 108, column: 25, scope: !2316)
!2320 = !DILocation(line: 108, column: 13, scope: !2286)
!2321 = !DILocation(line: 109, column: 59, scope: !2322)
!2322 = distinct !DILexicalBlock(scope: !2316, file: !1150, line: 108, column: 30)
!2323 = !DILocation(line: 109, column: 56, scope: !2322)
!2324 = !DILocation(line: 109, column: 62, scope: !2322)
!2325 = !DILocation(line: 109, column: 20, scope: !2322)
!2326 = !DILocation(line: 109, column: 46, scope: !2322)
!2327 = !DILocation(line: 109, column: 43, scope: !2322)
!2328 = !DILocation(line: 109, column: 49, scope: !2322)
!2329 = !DILocation(line: 109, column: 23, scope: !2322)
!2330 = !DILocation(line: 109, column: 13, scope: !2322)
!2331 = !DILocation(line: 110, column: 23, scope: !2322)
!2332 = !DILocation(line: 110, column: 20, scope: !2322)
!2333 = !DILocation(line: 110, column: 26, scope: !2322)
!2334 = !DILocation(line: 110, column: 31, scope: !2322)
!2335 = !DILocation(line: 111, column: 58, scope: !2322)
!2336 = !DILocation(line: 111, column: 55, scope: !2322)
!2337 = !DILocation(line: 111, column: 61, scope: !2322)
!2338 = !DILocation(line: 111, column: 20, scope: !2322)
!2339 = !DILocation(line: 111, column: 45, scope: !2322)
!2340 = !DILocation(line: 111, column: 42, scope: !2322)
!2341 = !DILocation(line: 111, column: 48, scope: !2322)
!2342 = !DILocation(line: 111, column: 23, scope: !2322)
!2343 = !DILocation(line: 111, column: 13, scope: !2322)
!2344 = !DILocation(line: 112, column: 23, scope: !2322)
!2345 = !DILocation(line: 112, column: 20, scope: !2322)
!2346 = !DILocation(line: 112, column: 26, scope: !2322)
!2347 = !DILocation(line: 112, column: 37, scope: !2322)
!2348 = !DILocation(line: 112, column: 34, scope: !2322)
!2349 = !DILocation(line: 112, column: 40, scope: !2322)
!2350 = !DILocation(line: 113, column: 9, scope: !2322)
!2351 = !DILocation(line: 114, column: 5, scope: !2286)
!2352 = !DILocation(line: 101, column: 54, scope: !2353)
!2353 = !DILexicalBlockFile(scope: !2282, file: !1150, discriminator: 2)
!2354 = !DILocation(line: 101, column: 5, scope: !2353)
!2355 = distinct !{!2355, !2356}
!2356 = !DILocation(line: 101, column: 5, scope: !1812)
!2357 = !DILocation(line: 116, column: 5, scope: !1812)
!2358 = !DILocation(line: 117, column: 1, scope: !1812)
!2359 = distinct !DISubprogram(name: "init_get_bits", scope: !1825, file: !1825, line: 615, type: !2360, isLocal: true, isDefinition: true, scopeLine: 617, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!2360 = !DISubroutineType(types: !2361)
!2361 = !{!1025, !2362, !1146, !1025}
!2362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 64, align: 64)
!2363 = !DILocalVariable(name: "s", arg: 1, scope: !2359, file: !1825, line: 615, type: !2362)
!2364 = !DILocation(line: 615, column: 48, scope: !2359)
!2365 = !DILocalVariable(name: "buffer", arg: 2, scope: !2359, file: !1825, line: 615, type: !1146)
!2366 = !DILocation(line: 615, column: 66, scope: !2359)
!2367 = !DILocalVariable(name: "bit_size", arg: 3, scope: !2359, file: !1825, line: 616, type: !1025)
!2368 = !DILocation(line: 616, column: 37, scope: !2359)
!2369 = !DILocalVariable(name: "buffer_size", scope: !2359, file: !1825, line: 618, type: !1025)
!2370 = !DILocation(line: 618, column: 9, scope: !2359)
!2371 = !DILocalVariable(name: "ret", scope: !2359, file: !1825, line: 619, type: !1025)
!2372 = !DILocation(line: 619, column: 9, scope: !2359)
!2373 = !DILocation(line: 621, column: 9, scope: !2374)
!2374 = distinct !DILexicalBlock(scope: !2359, file: !1825, line: 621, column: 9)
!2375 = !DILocation(line: 621, column: 18, scope: !2374)
!2376 = !DILocation(line: 621, column: 64, scope: !2374)
!2377 = !DILocation(line: 621, column: 67, scope: !2378)
!2378 = !DILexicalBlockFile(scope: !2374, file: !1825, discriminator: 1)
!2379 = !DILocation(line: 621, column: 76, scope: !2378)
!2380 = !DILocation(line: 621, column: 80, scope: !2378)
!2381 = !DILocation(line: 621, column: 84, scope: !2382)
!2382 = !DILexicalBlockFile(scope: !2374, file: !1825, discriminator: 2)
!2383 = !DILocation(line: 621, column: 9, scope: !2382)
!2384 = !DILocation(line: 622, column: 18, scope: !2385)
!2385 = distinct !DILexicalBlock(scope: !2374, file: !1825, line: 621, column: 92)
!2386 = !DILocation(line: 623, column: 16, scope: !2385)
!2387 = !DILocation(line: 624, column: 13, scope: !2385)
!2388 = !DILocation(line: 625, column: 5, scope: !2385)
!2389 = !DILocation(line: 627, column: 20, scope: !2359)
!2390 = !DILocation(line: 627, column: 29, scope: !2359)
!2391 = !DILocation(line: 627, column: 34, scope: !2359)
!2392 = !DILocation(line: 627, column: 17, scope: !2359)
!2393 = !DILocation(line: 629, column: 17, scope: !2359)
!2394 = !DILocation(line: 629, column: 5, scope: !2359)
!2395 = !DILocation(line: 629, column: 8, scope: !2359)
!2396 = !DILocation(line: 629, column: 15, scope: !2359)
!2397 = !DILocation(line: 630, column: 23, scope: !2359)
!2398 = !DILocation(line: 630, column: 5, scope: !2359)
!2399 = !DILocation(line: 630, column: 8, scope: !2359)
!2400 = !DILocation(line: 630, column: 21, scope: !2359)
!2401 = !DILocation(line: 631, column: 29, scope: !2359)
!2402 = !DILocation(line: 631, column: 38, scope: !2359)
!2403 = !DILocation(line: 631, column: 5, scope: !2359)
!2404 = !DILocation(line: 631, column: 8, scope: !2359)
!2405 = !DILocation(line: 631, column: 27, scope: !2359)
!2406 = !DILocation(line: 632, column: 21, scope: !2359)
!2407 = !DILocation(line: 632, column: 30, scope: !2359)
!2408 = !DILocation(line: 632, column: 28, scope: !2359)
!2409 = !DILocation(line: 632, column: 5, scope: !2359)
!2410 = !DILocation(line: 632, column: 8, scope: !2359)
!2411 = !DILocation(line: 632, column: 19, scope: !2359)
!2412 = !DILocation(line: 633, column: 5, scope: !2359)
!2413 = !DILocation(line: 633, column: 8, scope: !2359)
!2414 = !DILocation(line: 633, column: 14, scope: !2359)
!2415 = !DILocation(line: 639, column: 12, scope: !2359)
!2416 = !DILocation(line: 639, column: 5, scope: !2359)
!2417 = distinct !DISubprogram(name: "ff_mjpeg_decode_dht", scope: !1150, file: !1150, line: 241, type: !1813, isLocal: false, isDefinition: true, scopeLine: 242, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!2418 = !DILocalVariable(name: "s", arg: 1, scope: !2417, file: !1150, line: 241, type: !1815)
!2419 = !DILocation(line: 241, column: 45, scope: !2417)
!2420 = !DILocalVariable(name: "len", scope: !2417, file: !1150, line: 243, type: !1025)
!2421 = !DILocation(line: 243, column: 9, scope: !2417)
!2422 = !DILocalVariable(name: "index", scope: !2417, file: !1150, line: 243, type: !1025)
!2423 = !DILocation(line: 243, column: 14, scope: !2417)
!2424 = !DILocalVariable(name: "i", scope: !2417, file: !1150, line: 243, type: !1025)
!2425 = !DILocation(line: 243, column: 21, scope: !2417)
!2426 = !DILocalVariable(name: "class", scope: !2417, file: !1150, line: 243, type: !1025)
!2427 = !DILocation(line: 243, column: 24, scope: !2417)
!2428 = !DILocalVariable(name: "n", scope: !2417, file: !1150, line: 243, type: !1025)
!2429 = !DILocation(line: 243, column: 31, scope: !2417)
!2430 = !DILocalVariable(name: "v", scope: !2417, file: !1150, line: 243, type: !1025)
!2431 = !DILocation(line: 243, column: 34, scope: !2417)
!2432 = !DILocalVariable(name: "code_max", scope: !2417, file: !1150, line: 243, type: !1025)
!2433 = !DILocation(line: 243, column: 37, scope: !2417)
!2434 = !DILocalVariable(name: "bits_table", scope: !2417, file: !1150, line: 244, type: !2435)
!2435 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1031, size: 136, align: 8, elements: !2436)
!2436 = !{!2437}
!2437 = !DISubrange(count: 17)
!2438 = !DILocation(line: 244, column: 13, scope: !2417)
!2439 = !DILocalVariable(name: "val_table", scope: !2417, file: !1150, line: 245, type: !2440)
!2440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1031, size: 2048, align: 8, elements: !2441)
!2441 = !{!2046}
!2442 = !DILocation(line: 245, column: 13, scope: !2417)
!2443 = !DILocalVariable(name: "ret", scope: !2417, file: !1150, line: 246, type: !1025)
!2444 = !DILocation(line: 246, column: 9, scope: !2417)
!2445 = !DILocation(line: 248, column: 21, scope: !2417)
!2446 = !DILocation(line: 248, column: 24, scope: !2417)
!2447 = !DILocation(line: 248, column: 11, scope: !2417)
!2448 = !DILocation(line: 248, column: 32, scope: !2417)
!2449 = !DILocation(line: 248, column: 9, scope: !2417)
!2450 = !DILocation(line: 250, column: 11, scope: !2451)
!2451 = distinct !DILexicalBlock(scope: !2417, file: !1150, line: 250, column: 9)
!2452 = !DILocation(line: 250, column: 10, scope: !2451)
!2453 = !DILocation(line: 250, column: 32, scope: !2451)
!2454 = !DILocation(line: 250, column: 35, scope: !2451)
!2455 = !DILocation(line: 250, column: 17, scope: !2451)
!2456 = !DILocation(line: 250, column: 15, scope: !2451)
!2457 = !DILocation(line: 250, column: 9, scope: !2417)
!2458 = !DILocation(line: 251, column: 16, scope: !2459)
!2459 = distinct !DILexicalBlock(scope: !2451, file: !1150, line: 250, column: 40)
!2460 = !DILocation(line: 251, column: 19, scope: !2459)
!2461 = !DILocation(line: 251, column: 60, scope: !2459)
!2462 = !DILocation(line: 251, column: 9, scope: !2459)
!2463 = !DILocation(line: 252, column: 9, scope: !2459)
!2464 = !DILocation(line: 255, column: 5, scope: !2417)
!2465 = !DILocation(line: 255, column: 12, scope: !2466)
!2466 = !DILexicalBlockFile(scope: !2417, file: !1150, discriminator: 1)
!2467 = !DILocation(line: 255, column: 16, scope: !2466)
!2468 = !DILocation(line: 255, column: 5, scope: !2466)
!2469 = !DILocation(line: 256, column: 13, scope: !2470)
!2470 = distinct !DILexicalBlock(scope: !2471, file: !1150, line: 256, column: 13)
!2471 = distinct !DILexicalBlock(scope: !2417, file: !1150, line: 255, column: 21)
!2472 = !DILocation(line: 256, column: 17, scope: !2470)
!2473 = !DILocation(line: 256, column: 13, scope: !2471)
!2474 = !DILocation(line: 257, column: 13, scope: !2470)
!2475 = !DILocation(line: 258, column: 27, scope: !2471)
!2476 = !DILocation(line: 258, column: 30, scope: !2471)
!2477 = !DILocation(line: 258, column: 17, scope: !2471)
!2478 = !DILocation(line: 258, column: 15, scope: !2471)
!2479 = !DILocation(line: 259, column: 13, scope: !2480)
!2480 = distinct !DILexicalBlock(scope: !2471, file: !1150, line: 259, column: 13)
!2481 = !DILocation(line: 259, column: 19, scope: !2480)
!2482 = !DILocation(line: 259, column: 13, scope: !2471)
!2483 = !DILocation(line: 260, column: 13, scope: !2480)
!2484 = !DILocation(line: 261, column: 27, scope: !2471)
!2485 = !DILocation(line: 261, column: 30, scope: !2471)
!2486 = !DILocation(line: 261, column: 17, scope: !2471)
!2487 = !DILocation(line: 261, column: 15, scope: !2471)
!2488 = !DILocation(line: 262, column: 13, scope: !2489)
!2489 = distinct !DILexicalBlock(scope: !2471, file: !1150, line: 262, column: 13)
!2490 = !DILocation(line: 262, column: 19, scope: !2489)
!2491 = !DILocation(line: 262, column: 13, scope: !2471)
!2492 = !DILocation(line: 263, column: 13, scope: !2489)
!2493 = !DILocation(line: 264, column: 11, scope: !2471)
!2494 = !DILocation(line: 265, column: 16, scope: !2495)
!2495 = distinct !DILexicalBlock(scope: !2471, file: !1150, line: 265, column: 9)
!2496 = !DILocation(line: 265, column: 14, scope: !2495)
!2497 = !DILocation(line: 265, column: 21, scope: !2498)
!2498 = !DILexicalBlockFile(scope: !2499, file: !1150, discriminator: 1)
!2499 = distinct !DILexicalBlock(scope: !2495, file: !1150, line: 265, column: 9)
!2500 = !DILocation(line: 265, column: 23, scope: !2498)
!2501 = !DILocation(line: 265, column: 9, scope: !2498)
!2502 = !DILocation(line: 266, column: 39, scope: !2503)
!2503 = distinct !DILexicalBlock(scope: !2499, file: !1150, line: 265, column: 35)
!2504 = !DILocation(line: 266, column: 42, scope: !2503)
!2505 = !DILocation(line: 266, column: 29, scope: !2503)
!2506 = !DILocation(line: 266, column: 24, scope: !2503)
!2507 = !DILocation(line: 266, column: 13, scope: !2503)
!2508 = !DILocation(line: 266, column: 27, scope: !2503)
!2509 = !DILocation(line: 267, column: 29, scope: !2503)
!2510 = !DILocation(line: 267, column: 18, scope: !2503)
!2511 = !DILocation(line: 267, column: 15, scope: !2503)
!2512 = !DILocation(line: 268, column: 9, scope: !2503)
!2513 = !DILocation(line: 265, column: 31, scope: !2514)
!2514 = !DILexicalBlockFile(scope: !2499, file: !1150, discriminator: 2)
!2515 = !DILocation(line: 265, column: 9, scope: !2514)
!2516 = distinct !{!2516, !2517}
!2517 = !DILocation(line: 265, column: 9, scope: !2471)
!2518 = !DILocation(line: 269, column: 13, scope: !2471)
!2519 = !DILocation(line: 270, column: 13, scope: !2520)
!2520 = distinct !DILexicalBlock(scope: !2471, file: !1150, line: 270, column: 13)
!2521 = !DILocation(line: 270, column: 19, scope: !2520)
!2522 = !DILocation(line: 270, column: 17, scope: !2520)
!2523 = !DILocation(line: 270, column: 21, scope: !2520)
!2524 = !DILocation(line: 270, column: 24, scope: !2525)
!2525 = !DILexicalBlockFile(scope: !2520, file: !1150, discriminator: 1)
!2526 = !DILocation(line: 270, column: 26, scope: !2525)
!2527 = !DILocation(line: 270, column: 13, scope: !2525)
!2528 = !DILocation(line: 271, column: 13, scope: !2520)
!2529 = !DILocation(line: 273, column: 18, scope: !2471)
!2530 = !DILocation(line: 274, column: 16, scope: !2531)
!2531 = distinct !DILexicalBlock(scope: !2471, file: !1150, line: 274, column: 9)
!2532 = !DILocation(line: 274, column: 14, scope: !2531)
!2533 = !DILocation(line: 274, column: 21, scope: !2534)
!2534 = !DILexicalBlockFile(scope: !2535, file: !1150, discriminator: 1)
!2535 = distinct !DILexicalBlock(scope: !2531, file: !1150, line: 274, column: 9)
!2536 = !DILocation(line: 274, column: 25, scope: !2534)
!2537 = !DILocation(line: 274, column: 23, scope: !2534)
!2538 = !DILocation(line: 274, column: 9, scope: !2534)
!2539 = !DILocation(line: 275, column: 27, scope: !2540)
!2540 = distinct !DILexicalBlock(scope: !2535, file: !1150, line: 274, column: 33)
!2541 = !DILocation(line: 275, column: 30, scope: !2540)
!2542 = !DILocation(line: 275, column: 17, scope: !2540)
!2543 = !DILocation(line: 275, column: 15, scope: !2540)
!2544 = !DILocation(line: 276, column: 17, scope: !2545)
!2545 = distinct !DILexicalBlock(scope: !2540, file: !1150, line: 276, column: 17)
!2546 = !DILocation(line: 276, column: 21, scope: !2545)
!2547 = !DILocation(line: 276, column: 19, scope: !2545)
!2548 = !DILocation(line: 276, column: 17, scope: !2540)
!2549 = !DILocation(line: 277, column: 28, scope: !2545)
!2550 = !DILocation(line: 277, column: 26, scope: !2545)
!2551 = !DILocation(line: 277, column: 17, scope: !2545)
!2552 = !DILocation(line: 278, column: 28, scope: !2540)
!2553 = !DILocation(line: 278, column: 23, scope: !2540)
!2554 = !DILocation(line: 278, column: 13, scope: !2540)
!2555 = !DILocation(line: 278, column: 26, scope: !2540)
!2556 = !DILocation(line: 279, column: 9, scope: !2540)
!2557 = !DILocation(line: 274, column: 29, scope: !2558)
!2558 = !DILexicalBlockFile(scope: !2535, file: !1150, discriminator: 2)
!2559 = !DILocation(line: 274, column: 9, scope: !2558)
!2560 = distinct !{!2560, !2561}
!2561 = !DILocation(line: 274, column: 9, scope: !2471)
!2562 = !DILocation(line: 280, column: 16, scope: !2471)
!2563 = !DILocation(line: 280, column: 13, scope: !2471)
!2564 = !DILocation(line: 283, column: 37, scope: !2471)
!2565 = !DILocation(line: 283, column: 22, scope: !2471)
!2566 = !DILocation(line: 283, column: 30, scope: !2471)
!2567 = !DILocation(line: 283, column: 25, scope: !2471)
!2568 = !DILocation(line: 283, column: 9, scope: !2471)
!2569 = !DILocation(line: 284, column: 16, scope: !2471)
!2570 = !DILocation(line: 284, column: 19, scope: !2471)
!2571 = !DILocation(line: 285, column: 16, scope: !2471)
!2572 = !DILocation(line: 285, column: 23, scope: !2471)
!2573 = !DILocation(line: 285, column: 30, scope: !2471)
!2574 = !DILocation(line: 285, column: 39, scope: !2471)
!2575 = !DILocation(line: 284, column: 9, scope: !2471)
!2576 = !DILocation(line: 286, column: 46, scope: !2577)
!2577 = distinct !DILexicalBlock(scope: !2471, file: !1150, line: 286, column: 13)
!2578 = !DILocation(line: 286, column: 31, scope: !2577)
!2579 = !DILocation(line: 286, column: 39, scope: !2577)
!2580 = !DILocation(line: 286, column: 34, scope: !2577)
!2581 = !DILocation(line: 286, column: 54, scope: !2577)
!2582 = !DILocation(line: 286, column: 66, scope: !2577)
!2583 = !DILocation(line: 287, column: 30, scope: !2577)
!2584 = !DILocation(line: 287, column: 39, scope: !2577)
!2585 = !DILocation(line: 287, column: 47, scope: !2577)
!2586 = !DILocation(line: 287, column: 53, scope: !2577)
!2587 = !DILocation(line: 286, column: 20, scope: !2577)
!2588 = !DILocation(line: 286, column: 18, scope: !2577)
!2589 = !DILocation(line: 287, column: 59, scope: !2577)
!2590 = !DILocation(line: 286, column: 13, scope: !2471)
!2591 = !DILocation(line: 288, column: 20, scope: !2577)
!2592 = !DILocation(line: 288, column: 13, scope: !2577)
!2593 = !DILocation(line: 290, column: 13, scope: !2594)
!2594 = distinct !DILexicalBlock(scope: !2471, file: !1150, line: 290, column: 13)
!2595 = !DILocation(line: 290, column: 19, scope: !2594)
!2596 = !DILocation(line: 290, column: 13, scope: !2471)
!2597 = !DILocation(line: 291, column: 37, scope: !2598)
!2598 = distinct !DILexicalBlock(scope: !2594, file: !1150, line: 290, column: 24)
!2599 = !DILocation(line: 291, column: 26, scope: !2598)
!2600 = !DILocation(line: 291, column: 29, scope: !2598)
!2601 = !DILocation(line: 291, column: 13, scope: !2598)
!2602 = !DILocation(line: 292, column: 46, scope: !2603)
!2603 = distinct !DILexicalBlock(scope: !2598, file: !1150, line: 292, column: 17)
!2604 = !DILocation(line: 292, column: 35, scope: !2603)
!2605 = !DILocation(line: 292, column: 38, scope: !2603)
!2606 = !DILocation(line: 292, column: 54, scope: !2603)
!2607 = !DILocation(line: 292, column: 66, scope: !2603)
!2608 = !DILocation(line: 293, column: 34, scope: !2603)
!2609 = !DILocation(line: 293, column: 43, scope: !2603)
!2610 = !DILocation(line: 292, column: 24, scope: !2603)
!2611 = !DILocation(line: 292, column: 22, scope: !2603)
!2612 = !DILocation(line: 293, column: 55, scope: !2603)
!2613 = !DILocation(line: 292, column: 17, scope: !2598)
!2614 = !DILocation(line: 294, column: 24, scope: !2603)
!2615 = !DILocation(line: 294, column: 17, scope: !2603)
!2616 = !DILocation(line: 295, column: 9, scope: !2598)
!2617 = !DILocation(line: 297, column: 16, scope: !2618)
!2618 = distinct !DILexicalBlock(scope: !2471, file: !1150, line: 297, column: 9)
!2619 = !DILocation(line: 297, column: 14, scope: !2618)
!2620 = !DILocation(line: 297, column: 21, scope: !2621)
!2621 = !DILexicalBlockFile(scope: !2622, file: !1150, discriminator: 1)
!2622 = distinct !DILexicalBlock(scope: !2618, file: !1150, line: 297, column: 9)
!2623 = !DILocation(line: 297, column: 23, scope: !2621)
!2624 = !DILocation(line: 297, column: 9, scope: !2621)
!2625 = !DILocation(line: 298, column: 66, scope: !2622)
!2626 = !DILocation(line: 298, column: 68, scope: !2622)
!2627 = !DILocation(line: 298, column: 55, scope: !2622)
!2628 = !DILocation(line: 298, column: 50, scope: !2622)
!2629 = !DILocation(line: 298, column: 13, scope: !2622)
!2630 = !DILocation(line: 298, column: 43, scope: !2622)
!2631 = !DILocation(line: 298, column: 36, scope: !2622)
!2632 = !DILocation(line: 298, column: 16, scope: !2622)
!2633 = !DILocation(line: 298, column: 53, scope: !2622)
!2634 = !DILocation(line: 297, column: 30, scope: !2635)
!2635 = !DILexicalBlockFile(scope: !2622, file: !1150, discriminator: 2)
!2636 = !DILocation(line: 297, column: 9, scope: !2635)
!2637 = distinct !{!2637, !2638}
!2638 = !DILocation(line: 297, column: 9, scope: !2471)
!2639 = !DILocation(line: 299, column: 16, scope: !2640)
!2640 = distinct !DILexicalBlock(scope: !2471, file: !1150, line: 299, column: 9)
!2641 = !DILocation(line: 299, column: 14, scope: !2640)
!2642 = !DILocation(line: 299, column: 21, scope: !2643)
!2643 = !DILexicalBlockFile(scope: !2644, file: !1150, discriminator: 1)
!2644 = distinct !DILexicalBlock(scope: !2640, file: !1150, line: 299, column: 9)
!2645 = !DILocation(line: 299, column: 23, scope: !2643)
!2646 = !DILocation(line: 299, column: 9, scope: !2643)
!2647 = !DILocation(line: 300, column: 64, scope: !2644)
!2648 = !DILocation(line: 300, column: 54, scope: !2644)
!2649 = !DILocation(line: 300, column: 49, scope: !2644)
!2650 = !DILocation(line: 300, column: 13, scope: !2644)
!2651 = !DILocation(line: 300, column: 42, scope: !2644)
!2652 = !DILocation(line: 300, column: 35, scope: !2644)
!2653 = !DILocation(line: 300, column: 16, scope: !2644)
!2654 = !DILocation(line: 300, column: 52, scope: !2644)
!2655 = !DILocation(line: 299, column: 31, scope: !2656)
!2656 = !DILexicalBlockFile(scope: !2644, file: !1150, discriminator: 2)
!2657 = !DILocation(line: 299, column: 9, scope: !2656)
!2658 = distinct !{!2658, !2659}
!2659 = !DILocation(line: 299, column: 9, scope: !2471)
!2660 = !DILocation(line: 255, column: 5, scope: !2661)
!2661 = !DILexicalBlockFile(scope: !2417, file: !1150, discriminator: 2)
!2662 = distinct !{!2662, !2464}
!2663 = !DILocation(line: 302, column: 5, scope: !2417)
!2664 = !DILocation(line: 303, column: 1, scope: !2417)
!2665 = distinct !DISubprogram(name: "parse_avid", scope: !1150, file: !1150, line: 119, type: !2666, isLocal: true, isDefinition: true, scopeLine: 120, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!2666 = !DISubroutineType(types: !2667)
!2667 = !{null, !1815, !1030, !1025}
!2668 = !DILocalVariable(name: "s", arg: 1, scope: !2665, file: !1150, line: 119, type: !1815)
!2669 = !DILocation(line: 119, column: 44, scope: !2665)
!2670 = !DILocalVariable(name: "buf", arg: 2, scope: !2665, file: !1150, line: 119, type: !1030)
!2671 = !DILocation(line: 119, column: 56, scope: !2665)
!2672 = !DILocalVariable(name: "len", arg: 3, scope: !2665, file: !1150, line: 119, type: !1025)
!2673 = !DILocation(line: 119, column: 65, scope: !2665)
!2674 = !DILocation(line: 121, column: 5, scope: !2665)
!2675 = !DILocation(line: 121, column: 8, scope: !2665)
!2676 = !DILocation(line: 121, column: 19, scope: !2665)
!2677 = !DILocation(line: 122, column: 9, scope: !2678)
!2678 = distinct !DILexicalBlock(scope: !2665, file: !1150, line: 122, column: 9)
!2679 = !DILocation(line: 122, column: 13, scope: !2678)
!2680 = !DILocation(line: 122, column: 18, scope: !2678)
!2681 = !DILocation(line: 122, column: 21, scope: !2682)
!2682 = !DILexicalBlockFile(scope: !2678, file: !1150, discriminator: 1)
!2683 = !DILocation(line: 122, column: 29, scope: !2682)
!2684 = !DILocation(line: 122, column: 9, scope: !2682)
!2685 = !DILocation(line: 123, column: 9, scope: !2678)
!2686 = !DILocation(line: 123, column: 12, scope: !2678)
!2687 = !DILocation(line: 123, column: 31, scope: !2678)
!2688 = !DILocation(line: 124, column: 9, scope: !2689)
!2689 = distinct !DILexicalBlock(scope: !2665, file: !1150, line: 124, column: 9)
!2690 = !DILocation(line: 124, column: 13, scope: !2689)
!2691 = !DILocation(line: 124, column: 18, scope: !2689)
!2692 = !DILocation(line: 124, column: 21, scope: !2693)
!2693 = !DILexicalBlockFile(scope: !2689, file: !1150, discriminator: 1)
!2694 = !DILocation(line: 124, column: 29, scope: !2693)
!2695 = !DILocation(line: 124, column: 9, scope: !2693)
!2696 = !DILocation(line: 125, column: 9, scope: !2689)
!2697 = !DILocation(line: 125, column: 12, scope: !2689)
!2698 = !DILocation(line: 125, column: 31, scope: !2689)
!2699 = !DILocation(line: 126, column: 9, scope: !2700)
!2700 = distinct !DILexicalBlock(scope: !2665, file: !1150, line: 126, column: 9)
!2701 = !DILocation(line: 126, column: 12, scope: !2700)
!2702 = !DILocation(line: 126, column: 19, scope: !2700)
!2703 = !DILocation(line: 126, column: 25, scope: !2700)
!2704 = !DILocation(line: 126, column: 9, scope: !2665)
!2705 = !DILocation(line: 127, column: 16, scope: !2700)
!2706 = !DILocation(line: 127, column: 19, scope: !2700)
!2707 = !DILocation(line: 127, column: 51, scope: !2700)
!2708 = !DILocation(line: 127, column: 56, scope: !2700)
!2709 = !DILocation(line: 127, column: 60, scope: !2700)
!2710 = !DILocation(line: 127, column: 67, scope: !2711)
!2711 = !DILexicalBlockFile(scope: !2700, file: !1150, discriminator: 1)
!2712 = !DILocation(line: 127, column: 56, scope: !2711)
!2713 = !DILocation(line: 127, column: 56, scope: !2714)
!2714 = !DILexicalBlockFile(scope: !2700, file: !1150, discriminator: 2)
!2715 = !DILocation(line: 127, column: 56, scope: !2716)
!2716 = !DILexicalBlockFile(scope: !2700, file: !1150, discriminator: 3)
!2717 = !DILocation(line: 127, column: 9, scope: !2716)
!2718 = !DILocation(line: 128, column: 1, scope: !2665)
!2719 = distinct !DISubprogram(name: "ff_mjpeg_decode_dqt", scope: !1150, file: !1150, line: 200, type: !1813, isLocal: false, isDefinition: true, scopeLine: 201, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!2720 = !DILocalVariable(name: "s", arg: 1, scope: !2719, file: !1150, line: 200, type: !1815)
!2721 = !DILocation(line: 200, column: 45, scope: !2719)
!2722 = !DILocalVariable(name: "len", scope: !2719, file: !1150, line: 202, type: !1025)
!2723 = !DILocation(line: 202, column: 9, scope: !2719)
!2724 = !DILocalVariable(name: "index", scope: !2719, file: !1150, line: 202, type: !1025)
!2725 = !DILocation(line: 202, column: 14, scope: !2719)
!2726 = !DILocalVariable(name: "i", scope: !2719, file: !1150, line: 202, type: !1025)
!2727 = !DILocation(line: 202, column: 21, scope: !2719)
!2728 = !DILocation(line: 204, column: 21, scope: !2719)
!2729 = !DILocation(line: 204, column: 24, scope: !2719)
!2730 = !DILocation(line: 204, column: 11, scope: !2719)
!2731 = !DILocation(line: 204, column: 32, scope: !2719)
!2732 = !DILocation(line: 204, column: 9, scope: !2719)
!2733 = !DILocation(line: 206, column: 11, scope: !2734)
!2734 = distinct !DILexicalBlock(scope: !2719, file: !1150, line: 206, column: 9)
!2735 = !DILocation(line: 206, column: 10, scope: !2734)
!2736 = !DILocation(line: 206, column: 32, scope: !2734)
!2737 = !DILocation(line: 206, column: 35, scope: !2734)
!2738 = !DILocation(line: 206, column: 17, scope: !2734)
!2739 = !DILocation(line: 206, column: 15, scope: !2734)
!2740 = !DILocation(line: 206, column: 9, scope: !2719)
!2741 = !DILocation(line: 207, column: 16, scope: !2742)
!2742 = distinct !DILexicalBlock(scope: !2734, file: !1150, line: 206, column: 40)
!2743 = !DILocation(line: 207, column: 19, scope: !2742)
!2744 = !DILocation(line: 207, column: 60, scope: !2742)
!2745 = !DILocation(line: 207, column: 9, scope: !2742)
!2746 = !DILocation(line: 208, column: 9, scope: !2742)
!2747 = !DILocation(line: 211, column: 5, scope: !2719)
!2748 = !DILocation(line: 211, column: 12, scope: !2749)
!2749 = !DILexicalBlockFile(scope: !2719, file: !1150, discriminator: 1)
!2750 = !DILocation(line: 211, column: 16, scope: !2749)
!2751 = !DILocation(line: 211, column: 5, scope: !2749)
!2752 = !DILocalVariable(name: "pr", scope: !2753, file: !1150, line: 212, type: !1025)
!2753 = distinct !DILexicalBlock(scope: !2719, file: !1150, line: 211, column: 23)
!2754 = !DILocation(line: 212, column: 13, scope: !2753)
!2755 = !DILocation(line: 212, column: 28, scope: !2753)
!2756 = !DILocation(line: 212, column: 31, scope: !2753)
!2757 = !DILocation(line: 212, column: 18, scope: !2753)
!2758 = !DILocation(line: 213, column: 13, scope: !2759)
!2759 = distinct !DILexicalBlock(scope: !2753, file: !1150, line: 213, column: 13)
!2760 = !DILocation(line: 213, column: 16, scope: !2759)
!2761 = !DILocation(line: 213, column: 13, scope: !2753)
!2762 = !DILocation(line: 214, column: 20, scope: !2763)
!2763 = distinct !DILexicalBlock(scope: !2759, file: !1150, line: 213, column: 21)
!2764 = !DILocation(line: 214, column: 23, scope: !2763)
!2765 = !DILocation(line: 214, column: 13, scope: !2763)
!2766 = !DILocation(line: 215, column: 13, scope: !2763)
!2767 = !DILocation(line: 217, column: 27, scope: !2753)
!2768 = !DILocation(line: 217, column: 30, scope: !2753)
!2769 = !DILocation(line: 217, column: 17, scope: !2753)
!2770 = !DILocation(line: 217, column: 15, scope: !2753)
!2771 = !DILocation(line: 218, column: 13, scope: !2772)
!2772 = distinct !DILexicalBlock(scope: !2753, file: !1150, line: 218, column: 13)
!2773 = !DILocation(line: 218, column: 19, scope: !2772)
!2774 = !DILocation(line: 218, column: 13, scope: !2753)
!2775 = !DILocation(line: 219, column: 13, scope: !2772)
!2776 = !DILocation(line: 220, column: 16, scope: !2753)
!2777 = !DILocation(line: 220, column: 19, scope: !2753)
!2778 = !DILocation(line: 220, column: 44, scope: !2753)
!2779 = !DILocation(line: 220, column: 9, scope: !2753)
!2780 = !DILocation(line: 222, column: 16, scope: !2781)
!2781 = distinct !DILexicalBlock(scope: !2753, file: !1150, line: 222, column: 9)
!2782 = !DILocation(line: 222, column: 14, scope: !2781)
!2783 = !DILocation(line: 222, column: 21, scope: !2784)
!2784 = !DILexicalBlockFile(scope: !2785, file: !1150, discriminator: 1)
!2785 = distinct !DILexicalBlock(scope: !2781, file: !1150, line: 222, column: 9)
!2786 = !DILocation(line: 222, column: 23, scope: !2784)
!2787 = !DILocation(line: 222, column: 9, scope: !2784)
!2788 = !DILocation(line: 223, column: 53, scope: !2789)
!2789 = distinct !DILexicalBlock(scope: !2785, file: !1150, line: 222, column: 34)
!2790 = !DILocation(line: 223, column: 56, scope: !2789)
!2791 = !DILocation(line: 223, column: 60, scope: !2789)
!2792 = !DILocation(line: 223, column: 43, scope: !2789)
!2793 = !DILocation(line: 223, column: 38, scope: !2789)
!2794 = !DILocation(line: 223, column: 13, scope: !2789)
!2795 = !DILocation(line: 223, column: 31, scope: !2789)
!2796 = !DILocation(line: 223, column: 16, scope: !2789)
!2797 = !DILocation(line: 223, column: 41, scope: !2789)
!2798 = !DILocation(line: 224, column: 42, scope: !2799)
!2799 = distinct !DILexicalBlock(scope: !2789, file: !1150, line: 224, column: 17)
!2800 = !DILocation(line: 224, column: 17, scope: !2799)
!2801 = !DILocation(line: 224, column: 35, scope: !2799)
!2802 = !DILocation(line: 224, column: 20, scope: !2799)
!2803 = !DILocation(line: 224, column: 45, scope: !2799)
!2804 = !DILocation(line: 224, column: 17, scope: !2789)
!2805 = !DILocation(line: 225, column: 24, scope: !2806)
!2806 = distinct !DILexicalBlock(scope: !2799, file: !1150, line: 224, column: 51)
!2807 = !DILocation(line: 225, column: 27, scope: !2806)
!2808 = !DILocation(line: 225, column: 17, scope: !2806)
!2809 = !DILocation(line: 226, column: 17, scope: !2806)
!2810 = !DILocation(line: 228, column: 9, scope: !2789)
!2811 = !DILocation(line: 222, column: 30, scope: !2812)
!2812 = !DILexicalBlockFile(scope: !2785, file: !1150, discriminator: 2)
!2813 = !DILocation(line: 222, column: 9, scope: !2812)
!2814 = distinct !{!2814, !2815}
!2815 = !DILocation(line: 222, column: 9, scope: !2753)
!2816 = !DILocation(line: 231, column: 48, scope: !2753)
!2817 = !DILocation(line: 231, column: 30, scope: !2753)
!2818 = !DILocation(line: 231, column: 33, scope: !2753)
!2819 = !DILocation(line: 231, column: 29, scope: !2753)
!2820 = !DILocation(line: 231, column: 80, scope: !2753)
!2821 = !DILocation(line: 231, column: 62, scope: !2753)
!2822 = !DILocation(line: 231, column: 65, scope: !2753)
!2823 = !DILocation(line: 231, column: 61, scope: !2753)
!2824 = !DILocation(line: 231, column: 59, scope: !2753)
!2825 = !DILocation(line: 231, column: 112, scope: !2826)
!2826 = !DILexicalBlockFile(scope: !2753, file: !1150, discriminator: 1)
!2827 = !DILocation(line: 231, column: 94, scope: !2826)
!2828 = !DILocation(line: 231, column: 97, scope: !2826)
!2829 = !DILocation(line: 231, column: 93, scope: !2826)
!2830 = !DILocation(line: 231, column: 29, scope: !2826)
!2831 = !DILocation(line: 231, column: 144, scope: !2832)
!2832 = !DILexicalBlockFile(scope: !2753, file: !1150, discriminator: 2)
!2833 = !DILocation(line: 231, column: 126, scope: !2832)
!2834 = !DILocation(line: 231, column: 129, scope: !2832)
!2835 = !DILocation(line: 231, column: 125, scope: !2832)
!2836 = !DILocation(line: 231, column: 29, scope: !2832)
!2837 = !DILocation(line: 231, column: 29, scope: !2838)
!2838 = !DILexicalBlockFile(scope: !2753, file: !1150, discriminator: 3)
!2839 = !DILocation(line: 232, column: 63, scope: !2753)
!2840 = !DILocation(line: 231, column: 19, scope: !2838)
!2841 = !DILocation(line: 231, column: 9, scope: !2838)
!2842 = !DILocation(line: 231, column: 12, scope: !2838)
!2843 = !DILocation(line: 231, column: 26, scope: !2838)
!2844 = !DILocation(line: 233, column: 16, scope: !2753)
!2845 = !DILocation(line: 233, column: 19, scope: !2753)
!2846 = !DILocation(line: 234, column: 16, scope: !2753)
!2847 = !DILocation(line: 234, column: 33, scope: !2753)
!2848 = !DILocation(line: 234, column: 23, scope: !2753)
!2849 = !DILocation(line: 234, column: 26, scope: !2753)
!2850 = !DILocation(line: 233, column: 9, scope: !2753)
!2851 = !DILocation(line: 235, column: 28, scope: !2753)
!2852 = !DILocation(line: 235, column: 27, scope: !2753)
!2853 = !DILocation(line: 235, column: 23, scope: !2753)
!2854 = !DILocation(line: 235, column: 18, scope: !2753)
!2855 = !DILocation(line: 235, column: 13, scope: !2753)
!2856 = !DILocation(line: 211, column: 5, scope: !2857)
!2857 = !DILexicalBlockFile(scope: !2719, file: !1150, discriminator: 2)
!2858 = distinct !{!2858, !2747}
!2859 = !DILocation(line: 237, column: 5, scope: !2719)
!2860 = !DILocation(line: 238, column: 1, scope: !2719)
!2861 = distinct !DISubprogram(name: "get_bits", scope: !1825, file: !1825, line: 381, type: !2862, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!2862 = !DISubroutineType(types: !2863)
!2863 = !{!1024, !2362, !1025}
!2864 = !DILocalVariable(name: "x", arg: 1, scope: !2865, file: !2866, line: 66, type: !1022)
!2865 = distinct !DISubprogram(name: "av_bswap32", scope: !2866, file: !2866, line: 66, type: !2867, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!2866 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2867 = !DISubroutineType(types: !2868)
!2868 = !{!1022, !1022}
!2869 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !2870)
!2870 = distinct !DILocation(line: 401, column: 16, scope: !2861)
!2871 = !DILocalVariable(name: "s", arg: 1, scope: !2861, file: !1825, line: 381, type: !2362)
!2872 = !DILocation(line: 381, column: 52, scope: !2861)
!2873 = !DILocalVariable(name: "n", arg: 2, scope: !2861, file: !1825, line: 381, type: !1025)
!2874 = !DILocation(line: 381, column: 59, scope: !2861)
!2875 = !DILocalVariable(name: "tmp", scope: !2861, file: !1825, line: 383, type: !1025)
!2876 = !DILocation(line: 383, column: 18, scope: !2861)
!2877 = !DILocalVariable(name: "re_index", scope: !2861, file: !1825, line: 399, type: !1024)
!2878 = !DILocation(line: 399, column: 18, scope: !2861)
!2879 = !DILocation(line: 399, column: 30, scope: !2861)
!2880 = !DILocation(line: 399, column: 34, scope: !2861)
!2881 = !DILocalVariable(name: "re_cache", scope: !2861, file: !1825, line: 399, type: !1024)
!2882 = !DILocation(line: 399, column: 78, scope: !2861)
!2883 = !DILocalVariable(name: "re_size_plus8", scope: !2861, file: !1825, line: 399, type: !1024)
!2884 = !DILocation(line: 399, column: 101, scope: !2861)
!2885 = !DILocation(line: 399, column: 118, scope: !2861)
!2886 = !DILocation(line: 399, column: 122, scope: !2861)
!2887 = !DILocation(line: 401, column: 60, scope: !2861)
!2888 = !DILocation(line: 401, column: 64, scope: !2861)
!2889 = !DILocation(line: 401, column: 74, scope: !2861)
!2890 = !DILocation(line: 401, column: 83, scope: !2861)
!2891 = !DILocation(line: 401, column: 71, scope: !2861)
!2892 = !DILocation(line: 401, column: 92, scope: !2861)
!2893 = !DILocation(line: 401, column: 16, scope: !2861)
!2894 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !2870)
!2895 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !2870)
!2896 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !2870)
!2897 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !2870)
!2898 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !2870)
!2899 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !2870)
!2900 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !2870)
!2901 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !2870)
!2902 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !2870)
!2903 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !2870)
!2904 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !2870)
!2905 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !2870)
!2906 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !2870)
!2907 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !2870)
!2908 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !2870)
!2909 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !2870)
!2910 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !2870)
!2911 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !2870)
!2912 = !DILocation(line: 401, column: 100, scope: !2861)
!2913 = !DILocation(line: 401, column: 109, scope: !2861)
!2914 = !DILocation(line: 401, column: 96, scope: !2861)
!2915 = !DILocation(line: 401, column: 14, scope: !2861)
!2916 = !DILocation(line: 402, column: 21, scope: !2861)
!2917 = !DILocation(line: 402, column: 31, scope: !2861)
!2918 = !DILocation(line: 402, column: 11, scope: !2861)
!2919 = !DILocation(line: 402, column: 9, scope: !2861)
!2920 = !DILocation(line: 403, column: 18, scope: !2861)
!2921 = !DILocation(line: 403, column: 36, scope: !2861)
!2922 = !DILocation(line: 403, column: 48, scope: !2861)
!2923 = !DILocation(line: 403, column: 45, scope: !2861)
!2924 = !DILocation(line: 403, column: 33, scope: !2861)
!2925 = !DILocation(line: 403, column: 17, scope: !2861)
!2926 = !DILocation(line: 403, column: 55, scope: !2927)
!2927 = !DILexicalBlockFile(scope: !2861, file: !1825, discriminator: 1)
!2928 = !DILocation(line: 403, column: 67, scope: !2927)
!2929 = !DILocation(line: 403, column: 64, scope: !2927)
!2930 = !DILocation(line: 403, column: 17, scope: !2927)
!2931 = !DILocation(line: 403, column: 74, scope: !2932)
!2932 = !DILexicalBlockFile(scope: !2861, file: !1825, discriminator: 2)
!2933 = !DILocation(line: 403, column: 17, scope: !2932)
!2934 = !DILocation(line: 403, column: 17, scope: !2935)
!2935 = !DILexicalBlockFile(scope: !2861, file: !1825, discriminator: 3)
!2936 = !DILocation(line: 403, column: 14, scope: !2935)
!2937 = !DILocation(line: 404, column: 18, scope: !2861)
!2938 = !DILocation(line: 404, column: 6, scope: !2861)
!2939 = !DILocation(line: 404, column: 10, scope: !2861)
!2940 = !DILocation(line: 404, column: 16, scope: !2861)
!2941 = !DILocation(line: 406, column: 12, scope: !2861)
!2942 = !DILocation(line: 406, column: 5, scope: !2861)
!2943 = distinct !DISubprogram(name: "get_bits_left", scope: !1825, file: !1825, line: 814, type: !2944, isLocal: true, isDefinition: true, scopeLine: 815, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!2944 = !DISubroutineType(types: !2945)
!2945 = !{!1025, !2362}
!2946 = !DILocalVariable(name: "gb", arg: 1, scope: !2943, file: !1825, line: 814, type: !2362)
!2947 = !DILocation(line: 814, column: 48, scope: !2943)
!2948 = !DILocation(line: 816, column: 12, scope: !2943)
!2949 = !DILocation(line: 816, column: 16, scope: !2943)
!2950 = !DILocation(line: 816, column: 46, scope: !2943)
!2951 = !DILocation(line: 816, column: 31, scope: !2943)
!2952 = !DILocation(line: 816, column: 29, scope: !2943)
!2953 = !DILocation(line: 816, column: 5, scope: !2943)
!2954 = distinct !DISubprogram(name: "build_vlc", scope: !1150, file: !1150, line: 53, type: !2955, isLocal: true, isDefinition: true, scopeLine: 56, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!2955 = !DISubroutineType(types: !2956)
!2956 = !{!1025, !2957, !1146, !1146, !1025, !1025, !1025}
!2957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 64, align: 64)
!2958 = !DILocalVariable(name: "vlc", arg: 1, scope: !2954, file: !1150, line: 53, type: !2957)
!2959 = !DILocation(line: 53, column: 27, scope: !2954)
!2960 = !DILocalVariable(name: "bits_table", arg: 2, scope: !2954, file: !1150, line: 53, type: !1146)
!2961 = !DILocation(line: 53, column: 47, scope: !2954)
!2962 = !DILocalVariable(name: "val_table", arg: 3, scope: !2954, file: !1150, line: 54, type: !1146)
!2963 = !DILocation(line: 54, column: 37, scope: !2954)
!2964 = !DILocalVariable(name: "nb_codes", arg: 4, scope: !2954, file: !1150, line: 54, type: !1025)
!2965 = !DILocation(line: 54, column: 52, scope: !2954)
!2966 = !DILocalVariable(name: "use_static", arg: 5, scope: !2954, file: !1150, line: 55, type: !1025)
!2967 = !DILocation(line: 55, column: 26, scope: !2954)
!2968 = !DILocalVariable(name: "is_ac", arg: 6, scope: !2954, file: !1150, line: 55, type: !1025)
!2969 = !DILocation(line: 55, column: 42, scope: !2954)
!2970 = !DILocalVariable(name: "huff_size", scope: !2954, file: !1150, line: 57, type: !2440)
!2971 = !DILocation(line: 57, column: 13, scope: !2954)
!2972 = !DILocalVariable(name: "huff_code", scope: !2954, file: !1150, line: 58, type: !2973)
!2973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1028, size: 4096, align: 16, elements: !2441)
!2974 = !DILocation(line: 58, column: 14, scope: !2954)
!2975 = !DILocalVariable(name: "huff_sym", scope: !2954, file: !1150, line: 59, type: !2973)
!2976 = !DILocation(line: 59, column: 14, scope: !2954)
!2977 = !DILocalVariable(name: "i", scope: !2954, file: !1150, line: 60, type: !1025)
!2978 = !DILocation(line: 60, column: 9, scope: !2954)
!2979 = !DILocation(line: 62, column: 5, scope: !2954)
!2980 = distinct !{!2980, !2979}
!2981 = !DILocation(line: 62, column: 16, scope: !2982)
!2982 = !DILexicalBlockFile(scope: !2983, file: !1150, discriminator: 1)
!2983 = distinct !DILexicalBlock(scope: !2984, file: !1150, line: 62, column: 14)
!2984 = distinct !DILexicalBlock(scope: !2954, file: !1150, line: 62, column: 8)
!2985 = !DILocation(line: 62, column: 25, scope: !2982)
!2986 = !DILocation(line: 62, column: 14, scope: !2982)
!2987 = !DILocation(line: 62, column: 36, scope: !2988)
!2988 = !DILexicalBlockFile(scope: !2989, file: !1150, discriminator: 2)
!2989 = distinct !DILexicalBlock(scope: !2983, file: !1150, line: 62, column: 34)
!2990 = !DILocation(line: 62, column: 92, scope: !2991)
!2991 = !DILexicalBlockFile(scope: !2988, file: !1150, discriminator: 4)
!2992 = !DILocation(line: 62, column: 92, scope: !2988)
!2993 = !DILocation(line: 62, column: 103, scope: !2994)
!2994 = !DILexicalBlockFile(scope: !2984, file: !1150, discriminator: 3)
!2995 = !DILocation(line: 64, column: 34, scope: !2954)
!2996 = !DILocation(line: 64, column: 45, scope: !2954)
!2997 = !DILocation(line: 64, column: 56, scope: !2954)
!2998 = !DILocation(line: 64, column: 68, scope: !2954)
!2999 = !DILocation(line: 64, column: 5, scope: !2954)
!3000 = !DILocation(line: 66, column: 12, scope: !3001)
!3001 = distinct !DILexicalBlock(scope: !2954, file: !1150, line: 66, column: 5)
!3002 = !DILocation(line: 66, column: 10, scope: !3001)
!3003 = !DILocation(line: 66, column: 17, scope: !3004)
!3004 = !DILexicalBlockFile(scope: !3005, file: !1150, discriminator: 1)
!3005 = distinct !DILexicalBlock(scope: !3001, file: !1150, line: 66, column: 5)
!3006 = !DILocation(line: 66, column: 19, scope: !3004)
!3007 = !DILocation(line: 66, column: 5, scope: !3004)
!3008 = !DILocation(line: 67, column: 23, scope: !3005)
!3009 = !DILocation(line: 67, column: 32, scope: !3005)
!3010 = !DILocation(line: 67, column: 30, scope: !3005)
!3011 = !DILocation(line: 67, column: 25, scope: !3005)
!3012 = !DILocation(line: 67, column: 18, scope: !3005)
!3013 = !DILocation(line: 67, column: 9, scope: !3005)
!3014 = !DILocation(line: 67, column: 21, scope: !3005)
!3015 = !DILocation(line: 66, column: 27, scope: !3016)
!3016 = !DILexicalBlockFile(scope: !3005, file: !1150, discriminator: 2)
!3017 = !DILocation(line: 66, column: 5, scope: !3016)
!3018 = distinct !{!3018, !3019}
!3019 = !DILocation(line: 66, column: 5, scope: !2954)
!3020 = !DILocation(line: 69, column: 9, scope: !3021)
!3021 = distinct !DILexicalBlock(scope: !2954, file: !1150, line: 69, column: 9)
!3022 = !DILocation(line: 69, column: 9, scope: !2954)
!3023 = !DILocation(line: 70, column: 9, scope: !3021)
!3024 = !DILocation(line: 70, column: 21, scope: !3021)
!3025 = !DILocation(line: 72, column: 31, scope: !2954)
!3026 = !DILocation(line: 72, column: 39, scope: !2954)
!3027 = !DILocation(line: 72, column: 49, scope: !2954)
!3028 = !DILocation(line: 73, column: 31, scope: !2954)
!3029 = !DILocation(line: 73, column: 48, scope: !2954)
!3030 = !DILocation(line: 73, column: 64, scope: !2954)
!3031 = !DILocation(line: 72, column: 12, scope: !2954)
!3032 = !DILocation(line: 72, column: 5, scope: !2954)
!3033 = distinct !DISubprogram(name: "ff_mjpeg_decode_sof", scope: !1150, file: !1150, line: 305, type: !1813, isLocal: false, isDefinition: true, scopeLine: 306, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!3034 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !3035)
!3035 = distinct !DILocation(line: 651, column: 10, scope: !3036)
!3036 = distinct !DILexicalBlock(scope: !3037, file: !1150, line: 651, column: 9)
!3037 = distinct !DILexicalBlock(scope: !3038, file: !1150, line: 456, column: 11)
!3038 = distinct !DILexicalBlock(scope: !3033, file: !1150, line: 451, column: 9)
!3039 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !3040)
!3040 = distinct !DILocation(line: 651, column: 76, scope: !3041)
!3041 = !DILexicalBlockFile(scope: !3036, file: !1150, discriminator: 1)
!3042 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !3043)
!3043 = distinct !DILocation(line: 647, column: 76, scope: !3044)
!3044 = !DILexicalBlockFile(scope: !3045, file: !1150, discriminator: 1)
!3045 = distinct !DILexicalBlock(scope: !3037, file: !1150, line: 647, column: 9)
!3046 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !3047)
!3047 = distinct !DILocation(line: 647, column: 10, scope: !3045)
!3048 = !DILocalVariable(name: "s", arg: 1, scope: !3033, file: !1150, line: 305, type: !1815)
!3049 = !DILocation(line: 305, column: 45, scope: !3033)
!3050 = !DILocalVariable(name: "len", scope: !3033, file: !1150, line: 307, type: !1025)
!3051 = !DILocation(line: 307, column: 9, scope: !3033)
!3052 = !DILocalVariable(name: "nb_components", scope: !3033, file: !1150, line: 307, type: !1025)
!3053 = !DILocation(line: 307, column: 14, scope: !3033)
!3054 = !DILocalVariable(name: "i", scope: !3033, file: !1150, line: 307, type: !1025)
!3055 = !DILocation(line: 307, column: 29, scope: !3033)
!3056 = !DILocalVariable(name: "width", scope: !3033, file: !1150, line: 307, type: !1025)
!3057 = !DILocation(line: 307, column: 32, scope: !3033)
!3058 = !DILocalVariable(name: "height", scope: !3033, file: !1150, line: 307, type: !1025)
!3059 = !DILocation(line: 307, column: 39, scope: !3033)
!3060 = !DILocalVariable(name: "bits", scope: !3033, file: !1150, line: 307, type: !1025)
!3061 = !DILocation(line: 307, column: 47, scope: !3033)
!3062 = !DILocalVariable(name: "ret", scope: !3033, file: !1150, line: 307, type: !1025)
!3063 = !DILocation(line: 307, column: 53, scope: !3033)
!3064 = !DILocalVariable(name: "size_change", scope: !3033, file: !1150, line: 307, type: !1025)
!3065 = !DILocation(line: 307, column: 58, scope: !3033)
!3066 = !DILocalVariable(name: "pix_fmt_id", scope: !3033, file: !1150, line: 308, type: !1024)
!3067 = !DILocation(line: 308, column: 14, scope: !3033)
!3068 = !DILocalVariable(name: "h_count", scope: !3033, file: !1150, line: 309, type: !1306)
!3069 = !DILocation(line: 309, column: 9, scope: !3033)
!3070 = !DILocalVariable(name: "v_count", scope: !3033, file: !1150, line: 310, type: !1306)
!3071 = !DILocation(line: 310, column: 9, scope: !3033)
!3072 = !DILocation(line: 312, column: 5, scope: !3033)
!3073 = !DILocation(line: 312, column: 8, scope: !3033)
!3074 = !DILocation(line: 312, column: 17, scope: !3033)
!3075 = !DILocation(line: 313, column: 12, scope: !3033)
!3076 = !DILocation(line: 313, column: 15, scope: !3033)
!3077 = !DILocation(line: 313, column: 5, scope: !3033)
!3078 = !DILocation(line: 314, column: 12, scope: !3033)
!3079 = !DILocation(line: 314, column: 15, scope: !3033)
!3080 = !DILocation(line: 314, column: 5, scope: !3033)
!3081 = !DILocation(line: 316, column: 21, scope: !3033)
!3082 = !DILocation(line: 316, column: 24, scope: !3033)
!3083 = !DILocation(line: 316, column: 11, scope: !3033)
!3084 = !DILocation(line: 316, column: 9, scope: !3033)
!3085 = !DILocation(line: 317, column: 22, scope: !3033)
!3086 = !DILocation(line: 317, column: 25, scope: !3033)
!3087 = !DILocation(line: 317, column: 12, scope: !3033)
!3088 = !DILocation(line: 317, column: 10, scope: !3033)
!3089 = !DILocation(line: 319, column: 9, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !3033, file: !1150, line: 319, column: 9)
!3091 = !DILocation(line: 319, column: 14, scope: !3090)
!3092 = !DILocation(line: 319, column: 19, scope: !3090)
!3093 = !DILocation(line: 319, column: 22, scope: !3094)
!3094 = !DILexicalBlockFile(scope: !3090, file: !1150, discriminator: 1)
!3095 = !DILocation(line: 319, column: 27, scope: !3094)
!3096 = !DILocation(line: 319, column: 9, scope: !3094)
!3097 = !DILocation(line: 320, column: 16, scope: !3098)
!3098 = distinct !DILexicalBlock(scope: !3090, file: !1150, line: 319, column: 32)
!3099 = !DILocation(line: 320, column: 19, scope: !3098)
!3100 = !DILocation(line: 320, column: 54, scope: !3098)
!3101 = !DILocation(line: 320, column: 9, scope: !3098)
!3102 = !DILocation(line: 321, column: 9, scope: !3098)
!3103 = !DILocation(line: 324, column: 9, scope: !3104)
!3104 = distinct !DILexicalBlock(scope: !3033, file: !1150, line: 324, column: 9)
!3105 = !DILocation(line: 324, column: 12, scope: !3104)
!3106 = !DILocation(line: 324, column: 19, scope: !3104)
!3107 = !DILocation(line: 324, column: 42, scope: !3104)
!3108 = !DILocation(line: 324, column: 39, scope: !3104)
!3109 = !DILocation(line: 324, column: 9, scope: !3033)
!3110 = !DILocation(line: 325, column: 16, scope: !3111)
!3111 = distinct !DILexicalBlock(scope: !3104, file: !1150, line: 324, column: 48)
!3112 = !DILocation(line: 325, column: 19, scope: !3111)
!3113 = !DILocation(line: 325, column: 26, scope: !3111)
!3114 = !DILocation(line: 325, column: 29, scope: !3111)
!3115 = !DILocation(line: 325, column: 36, scope: !3111)
!3116 = !DILocation(line: 325, column: 56, scope: !3111)
!3117 = !DILocation(line: 325, column: 103, scope: !3111)
!3118 = !DILocation(line: 325, column: 106, scope: !3111)
!3119 = !DILocation(line: 325, column: 113, scope: !3111)
!3120 = !DILocation(line: 325, column: 134, scope: !3111)
!3121 = !DILocation(line: 325, column: 9, scope: !3111)
!3122 = !DILocation(line: 326, column: 41, scope: !3111)
!3123 = !DILocation(line: 326, column: 9, scope: !3111)
!3124 = !DILocation(line: 326, column: 12, scope: !3111)
!3125 = !DILocation(line: 326, column: 19, scope: !3111)
!3126 = !DILocation(line: 326, column: 39, scope: !3111)
!3127 = !DILocation(line: 327, column: 19, scope: !3111)
!3128 = !DILocation(line: 327, column: 22, scope: !3111)
!3129 = !DILocation(line: 327, column: 9, scope: !3111)
!3130 = !DILocation(line: 328, column: 5, scope: !3111)
!3131 = !DILocation(line: 329, column: 9, scope: !3132)
!3132 = distinct !DILexicalBlock(scope: !3033, file: !1150, line: 329, column: 9)
!3133 = !DILocation(line: 329, column: 12, scope: !3132)
!3134 = !DILocation(line: 329, column: 9, scope: !3033)
!3135 = !DILocation(line: 330, column: 14, scope: !3132)
!3136 = !DILocation(line: 330, column: 9, scope: !3132)
!3137 = !DILocation(line: 331, column: 9, scope: !3138)
!3138 = distinct !DILexicalBlock(scope: !3033, file: !1150, line: 331, column: 9)
!3139 = !DILocation(line: 331, column: 14, scope: !3138)
!3140 = !DILocation(line: 331, column: 19, scope: !3138)
!3141 = !DILocation(line: 331, column: 23, scope: !3142)
!3142 = !DILexicalBlockFile(scope: !3138, file: !1150, discriminator: 1)
!3143 = !DILocation(line: 331, column: 26, scope: !3142)
!3144 = !DILocation(line: 331, column: 9, scope: !3142)
!3145 = !DILocation(line: 332, column: 9, scope: !3138)
!3146 = !DILocation(line: 332, column: 12, scope: !3138)
!3147 = !DILocation(line: 332, column: 16, scope: !3138)
!3148 = !DILocation(line: 334, column: 8, scope: !3149)
!3149 = distinct !DILexicalBlock(scope: !3033, file: !1150, line: 334, column: 8)
!3150 = !DILocation(line: 334, column: 11, scope: !3149)
!3151 = !DILocation(line: 334, column: 20, scope: !3149)
!3152 = !DILocation(line: 334, column: 23, scope: !3153)
!3153 = !DILexicalBlockFile(scope: !3149, file: !1150, discriminator: 1)
!3154 = !DILocation(line: 334, column: 26, scope: !3153)
!3155 = !DILocation(line: 334, column: 33, scope: !3153)
!3156 = !DILocation(line: 334, column: 8, scope: !3153)
!3157 = !DILocation(line: 335, column: 16, scope: !3158)
!3158 = distinct !DILexicalBlock(scope: !3149, file: !1150, line: 334, column: 40)
!3159 = !DILocation(line: 335, column: 19, scope: !3158)
!3160 = !DILocation(line: 335, column: 9, scope: !3158)
!3161 = !DILocation(line: 336, column: 9, scope: !3158)
!3162 = !DILocation(line: 339, column: 24, scope: !3033)
!3163 = !DILocation(line: 339, column: 27, scope: !3033)
!3164 = !DILocation(line: 339, column: 14, scope: !3033)
!3165 = !DILocation(line: 339, column: 12, scope: !3033)
!3166 = !DILocation(line: 340, column: 23, scope: !3033)
!3167 = !DILocation(line: 340, column: 26, scope: !3033)
!3168 = !DILocation(line: 340, column: 13, scope: !3033)
!3169 = !DILocation(line: 340, column: 11, scope: !3033)
!3170 = !DILocation(line: 343, column: 9, scope: !3171)
!3171 = distinct !DILexicalBlock(scope: !3033, file: !1150, line: 343, column: 9)
!3172 = !DILocation(line: 343, column: 12, scope: !3171)
!3173 = !DILocation(line: 343, column: 23, scope: !3171)
!3174 = !DILocation(line: 343, column: 26, scope: !3175)
!3175 = !DILexicalBlockFile(scope: !3171, file: !1150, discriminator: 1)
!3176 = !DILocation(line: 343, column: 29, scope: !3175)
!3177 = !DILocation(line: 343, column: 38, scope: !3175)
!3178 = !DILocation(line: 343, column: 35, scope: !3175)
!3179 = !DILocation(line: 343, column: 44, scope: !3175)
!3180 = !DILocation(line: 343, column: 47, scope: !3181)
!3181 = !DILexicalBlockFile(scope: !3171, file: !1150, discriminator: 2)
!3182 = !DILocation(line: 343, column: 50, scope: !3181)
!3183 = !DILocation(line: 343, column: 60, scope: !3181)
!3184 = !DILocation(line: 343, column: 67, scope: !3181)
!3185 = !DILocation(line: 343, column: 57, scope: !3181)
!3186 = !DILocation(line: 343, column: 9, scope: !3181)
!3187 = !DILocation(line: 344, column: 17, scope: !3171)
!3188 = !DILocation(line: 344, column: 20, scope: !3171)
!3189 = !DILocation(line: 344, column: 15, scope: !3171)
!3190 = !DILocation(line: 344, column: 9, scope: !3171)
!3191 = !DILocation(line: 346, column: 12, scope: !3033)
!3192 = !DILocation(line: 346, column: 15, scope: !3033)
!3193 = !DILocation(line: 346, column: 52, scope: !3033)
!3194 = !DILocation(line: 346, column: 59, scope: !3033)
!3195 = !DILocation(line: 346, column: 5, scope: !3033)
!3196 = !DILocation(line: 347, column: 29, scope: !3197)
!3197 = distinct !DILexicalBlock(scope: !3033, file: !1150, line: 347, column: 9)
!3198 = !DILocation(line: 347, column: 36, scope: !3197)
!3199 = !DILocation(line: 347, column: 47, scope: !3197)
!3200 = !DILocation(line: 347, column: 50, scope: !3197)
!3201 = !DILocation(line: 347, column: 9, scope: !3197)
!3202 = !DILocation(line: 347, column: 57, scope: !3197)
!3203 = !DILocation(line: 347, column: 9, scope: !3033)
!3204 = !DILocation(line: 348, column: 9, scope: !3197)
!3205 = !DILocation(line: 349, column: 9, scope: !3206)
!3206 = distinct !DILexicalBlock(scope: !3033, file: !1150, line: 349, column: 9)
!3207 = !DILocation(line: 349, column: 12, scope: !3206)
!3208 = !DILocation(line: 349, column: 21, scope: !3206)
!3209 = !DILocation(line: 349, column: 25, scope: !3210)
!3210 = !DILexicalBlockFile(scope: !3206, file: !1150, discriminator: 1)
!3211 = !DILocation(line: 349, column: 31, scope: !3210)
!3212 = !DILocation(line: 349, column: 36, scope: !3210)
!3213 = !DILocation(line: 349, column: 44, scope: !3210)
!3214 = !DILocation(line: 349, column: 51, scope: !3210)
!3215 = !DILocation(line: 349, column: 56, scope: !3210)
!3216 = !DILocation(line: 349, column: 40, scope: !3210)
!3217 = !DILocation(line: 349, column: 24, scope: !3210)
!3218 = !DILocation(line: 349, column: 63, scope: !3210)
!3219 = !DILocation(line: 349, column: 66, scope: !3210)
!3220 = !DILocation(line: 349, column: 75, scope: !3210)
!3221 = !DILocation(line: 349, column: 61, scope: !3210)
!3222 = !DILocation(line: 349, column: 9, scope: !3210)
!3223 = !DILocation(line: 350, column: 9, scope: !3206)
!3224 = !DILocation(line: 352, column: 31, scope: !3033)
!3225 = !DILocation(line: 352, column: 34, scope: !3033)
!3226 = !DILocation(line: 352, column: 21, scope: !3033)
!3227 = !DILocation(line: 352, column: 19, scope: !3033)
!3228 = !DILocation(line: 353, column: 9, scope: !3229)
!3229 = distinct !DILexicalBlock(scope: !3033, file: !1150, line: 353, column: 9)
!3230 = !DILocation(line: 353, column: 23, scope: !3229)
!3231 = !DILocation(line: 353, column: 28, scope: !3229)
!3232 = !DILocation(line: 354, column: 9, scope: !3229)
!3233 = !DILocation(line: 354, column: 23, scope: !3229)
!3234 = !DILocation(line: 353, column: 9, scope: !3235)
!3235 = !DILexicalBlockFile(scope: !3033, file: !1150, discriminator: 1)
!3236 = !DILocation(line: 355, column: 9, scope: !3229)
!3237 = !DILocation(line: 356, column: 9, scope: !3238)
!3238 = distinct !DILexicalBlock(scope: !3033, file: !1150, line: 356, column: 9)
!3239 = !DILocation(line: 356, column: 12, scope: !3238)
!3240 = !DILocation(line: 356, column: 23, scope: !3238)
!3241 = !DILocation(line: 356, column: 27, scope: !3242)
!3242 = !DILexicalBlockFile(scope: !3238, file: !1150, discriminator: 1)
!3243 = !DILocation(line: 356, column: 30, scope: !3242)
!3244 = !DILocation(line: 356, column: 47, scope: !3242)
!3245 = !DILocation(line: 356, column: 50, scope: !3242)
!3246 = !DILocation(line: 356, column: 46, scope: !3242)
!3247 = !DILocation(line: 356, column: 43, scope: !3242)
!3248 = !DILocation(line: 356, column: 9, scope: !3242)
!3249 = !DILocation(line: 357, column: 13, scope: !3250)
!3250 = distinct !DILexicalBlock(scope: !3251, file: !1150, line: 357, column: 13)
!3251 = distinct !DILexicalBlock(scope: !3238, file: !1150, line: 356, column: 71)
!3252 = !DILocation(line: 357, column: 30, scope: !3250)
!3253 = !DILocation(line: 357, column: 33, scope: !3250)
!3254 = !DILocation(line: 357, column: 27, scope: !3250)
!3255 = !DILocation(line: 357, column: 13, scope: !3251)
!3256 = !DILocation(line: 358, column: 20, scope: !3257)
!3257 = distinct !DILexicalBlock(scope: !3250, file: !1150, line: 357, column: 48)
!3258 = !DILocation(line: 358, column: 23, scope: !3257)
!3259 = !DILocation(line: 358, column: 13, scope: !3257)
!3260 = !DILocation(line: 360, column: 13, scope: !3257)
!3261 = !DILocation(line: 362, column: 5, scope: !3251)
!3262 = !DILocation(line: 363, column: 9, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3033, file: !1150, line: 363, column: 9)
!3264 = !DILocation(line: 363, column: 12, scope: !3263)
!3265 = !DILocation(line: 363, column: 15, scope: !3263)
!3266 = !DILocation(line: 363, column: 20, scope: !3267)
!3267 = !DILexicalBlockFile(scope: !3263, file: !1150, discriminator: 1)
!3268 = !DILocation(line: 363, column: 25, scope: !3267)
!3269 = !DILocation(line: 363, column: 30, scope: !3267)
!3270 = !DILocation(line: 363, column: 33, scope: !3271)
!3271 = !DILexicalBlockFile(scope: !3263, file: !1150, discriminator: 2)
!3272 = !DILocation(line: 363, column: 47, scope: !3271)
!3273 = !DILocation(line: 363, column: 9, scope: !3271)
!3274 = !DILocation(line: 364, column: 39, scope: !3275)
!3275 = distinct !DILexicalBlock(scope: !3263, file: !1150, line: 363, column: 54)
!3276 = !DILocation(line: 364, column: 42, scope: !3275)
!3277 = !DILocation(line: 364, column: 9, scope: !3275)
!3278 = !DILocation(line: 367, column: 9, scope: !3275)
!3279 = !DILocation(line: 369, column: 9, scope: !3280)
!3280 = distinct !DILexicalBlock(scope: !3033, file: !1150, line: 369, column: 9)
!3281 = !DILocation(line: 369, column: 24, scope: !3280)
!3282 = !DILocation(line: 369, column: 22, scope: !3280)
!3283 = !DILocation(line: 369, column: 18, scope: !3280)
!3284 = !DILocation(line: 369, column: 13, scope: !3280)
!3285 = !DILocation(line: 369, column: 9, scope: !3033)
!3286 = !DILocation(line: 370, column: 16, scope: !3287)
!3287 = distinct !DILexicalBlock(scope: !3280, file: !1150, line: 369, column: 39)
!3288 = !DILocation(line: 370, column: 19, scope: !3287)
!3289 = !DILocation(line: 370, column: 86, scope: !3287)
!3290 = !DILocation(line: 370, column: 91, scope: !3287)
!3291 = !DILocation(line: 370, column: 9, scope: !3287)
!3292 = !DILocation(line: 371, column: 9, scope: !3287)
!3293 = !DILocation(line: 374, column: 24, scope: !3033)
!3294 = !DILocation(line: 374, column: 5, scope: !3033)
!3295 = !DILocation(line: 374, column: 8, scope: !3033)
!3296 = !DILocation(line: 374, column: 22, scope: !3033)
!3297 = !DILocation(line: 375, column: 5, scope: !3033)
!3298 = !DILocation(line: 375, column: 8, scope: !3033)
!3299 = !DILocation(line: 375, column: 14, scope: !3033)
!3300 = !DILocation(line: 376, column: 5, scope: !3033)
!3301 = !DILocation(line: 376, column: 8, scope: !3033)
!3302 = !DILocation(line: 376, column: 14, scope: !3033)
!3303 = !DILocation(line: 377, column: 12, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !3033, file: !1150, line: 377, column: 5)
!3305 = !DILocation(line: 377, column: 10, scope: !3304)
!3306 = !DILocation(line: 377, column: 17, scope: !3307)
!3307 = !DILexicalBlockFile(scope: !3308, file: !1150, discriminator: 1)
!3308 = distinct !DILexicalBlock(scope: !3304, file: !1150, line: 377, column: 5)
!3309 = !DILocation(line: 377, column: 21, scope: !3307)
!3310 = !DILocation(line: 377, column: 19, scope: !3307)
!3311 = !DILocation(line: 377, column: 5, scope: !3307)
!3312 = !DILocation(line: 379, column: 40, scope: !3313)
!3313 = distinct !DILexicalBlock(scope: !3308, file: !1150, line: 377, column: 41)
!3314 = !DILocation(line: 379, column: 43, scope: !3313)
!3315 = !DILocation(line: 379, column: 30, scope: !3313)
!3316 = !DILocation(line: 379, column: 50, scope: !3313)
!3317 = !DILocation(line: 379, column: 25, scope: !3313)
!3318 = !DILocation(line: 379, column: 9, scope: !3313)
!3319 = !DILocation(line: 379, column: 12, scope: !3313)
!3320 = !DILocation(line: 379, column: 28, scope: !3313)
!3321 = !DILocation(line: 380, column: 32, scope: !3313)
!3322 = !DILocation(line: 380, column: 35, scope: !3313)
!3323 = !DILocation(line: 380, column: 22, scope: !3313)
!3324 = !DILocation(line: 380, column: 17, scope: !3313)
!3325 = !DILocation(line: 380, column: 9, scope: !3313)
!3326 = !DILocation(line: 380, column: 20, scope: !3313)
!3327 = !DILocation(line: 381, column: 32, scope: !3313)
!3328 = !DILocation(line: 381, column: 35, scope: !3313)
!3329 = !DILocation(line: 381, column: 22, scope: !3313)
!3330 = !DILocation(line: 381, column: 17, scope: !3313)
!3331 = !DILocation(line: 381, column: 9, scope: !3313)
!3332 = !DILocation(line: 381, column: 20, scope: !3313)
!3333 = !DILocation(line: 383, column: 21, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !3313, file: !1150, line: 383, column: 13)
!3335 = !DILocation(line: 383, column: 13, scope: !3334)
!3336 = !DILocation(line: 383, column: 26, scope: !3334)
!3337 = !DILocation(line: 383, column: 29, scope: !3334)
!3338 = !DILocation(line: 383, column: 24, scope: !3334)
!3339 = !DILocation(line: 383, column: 13, scope: !3313)
!3340 = !DILocation(line: 384, column: 32, scope: !3334)
!3341 = !DILocation(line: 384, column: 24, scope: !3334)
!3342 = !DILocation(line: 384, column: 13, scope: !3334)
!3343 = !DILocation(line: 384, column: 16, scope: !3334)
!3344 = !DILocation(line: 384, column: 22, scope: !3334)
!3345 = !DILocation(line: 385, column: 21, scope: !3346)
!3346 = distinct !DILexicalBlock(scope: !3313, file: !1150, line: 385, column: 13)
!3347 = !DILocation(line: 385, column: 13, scope: !3346)
!3348 = !DILocation(line: 385, column: 26, scope: !3346)
!3349 = !DILocation(line: 385, column: 29, scope: !3346)
!3350 = !DILocation(line: 385, column: 24, scope: !3346)
!3351 = !DILocation(line: 385, column: 13, scope: !3313)
!3352 = !DILocation(line: 386, column: 32, scope: !3346)
!3353 = !DILocation(line: 386, column: 24, scope: !3346)
!3354 = !DILocation(line: 386, column: 13, scope: !3346)
!3355 = !DILocation(line: 386, column: 16, scope: !3346)
!3356 = !DILocation(line: 386, column: 22, scope: !3346)
!3357 = !DILocation(line: 387, column: 39, scope: !3313)
!3358 = !DILocation(line: 387, column: 42, scope: !3313)
!3359 = !DILocation(line: 387, column: 29, scope: !3313)
!3360 = !DILocation(line: 387, column: 24, scope: !3313)
!3361 = !DILocation(line: 387, column: 9, scope: !3313)
!3362 = !DILocation(line: 387, column: 12, scope: !3313)
!3363 = !DILocation(line: 387, column: 27, scope: !3313)
!3364 = !DILocation(line: 388, column: 28, scope: !3365)
!3365 = distinct !DILexicalBlock(scope: !3313, file: !1150, line: 388, column: 13)
!3366 = !DILocation(line: 388, column: 13, scope: !3365)
!3367 = !DILocation(line: 388, column: 16, scope: !3365)
!3368 = !DILocation(line: 388, column: 31, scope: !3365)
!3369 = !DILocation(line: 388, column: 13, scope: !3313)
!3370 = !DILocation(line: 389, column: 20, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3365, file: !1150, line: 388, column: 37)
!3372 = !DILocation(line: 389, column: 23, scope: !3371)
!3373 = !DILocation(line: 389, column: 13, scope: !3371)
!3374 = !DILocation(line: 390, column: 13, scope: !3371)
!3375 = !DILocation(line: 392, column: 22, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !3313, file: !1150, line: 392, column: 13)
!3377 = !DILocation(line: 392, column: 14, scope: !3376)
!3378 = !DILocation(line: 392, column: 25, scope: !3376)
!3379 = !DILocation(line: 392, column: 37, scope: !3380)
!3380 = !DILexicalBlockFile(scope: !3376, file: !1150, discriminator: 1)
!3381 = !DILocation(line: 392, column: 29, scope: !3380)
!3382 = !DILocation(line: 392, column: 13, scope: !3380)
!3383 = !DILocation(line: 393, column: 20, scope: !3384)
!3384 = distinct !DILexicalBlock(scope: !3376, file: !1150, line: 392, column: 41)
!3385 = !DILocation(line: 393, column: 23, scope: !3384)
!3386 = !DILocation(line: 395, column: 20, scope: !3384)
!3387 = !DILocation(line: 395, column: 31, scope: !3384)
!3388 = !DILocation(line: 395, column: 23, scope: !3384)
!3389 = !DILocation(line: 395, column: 43, scope: !3384)
!3390 = !DILocation(line: 395, column: 35, scope: !3384)
!3391 = !DILocation(line: 393, column: 13, scope: !3384)
!3392 = !DILocation(line: 396, column: 13, scope: !3384)
!3393 = !DILocation(line: 399, column: 16, scope: !3313)
!3394 = !DILocation(line: 399, column: 19, scope: !3313)
!3395 = !DILocation(line: 400, column: 16, scope: !3313)
!3396 = !DILocation(line: 400, column: 27, scope: !3313)
!3397 = !DILocation(line: 400, column: 19, scope: !3313)
!3398 = !DILocation(line: 400, column: 39, scope: !3313)
!3399 = !DILocation(line: 400, column: 31, scope: !3313)
!3400 = !DILocation(line: 401, column: 32, scope: !3313)
!3401 = !DILocation(line: 401, column: 16, scope: !3313)
!3402 = !DILocation(line: 401, column: 19, scope: !3313)
!3403 = !DILocation(line: 401, column: 51, scope: !3313)
!3404 = !DILocation(line: 401, column: 36, scope: !3313)
!3405 = !DILocation(line: 401, column: 39, scope: !3313)
!3406 = !DILocation(line: 399, column: 9, scope: !3313)
!3407 = !DILocation(line: 402, column: 5, scope: !3313)
!3408 = !DILocation(line: 377, column: 37, scope: !3409)
!3409 = !DILexicalBlockFile(scope: !3308, file: !1150, discriminator: 2)
!3410 = !DILocation(line: 377, column: 5, scope: !3409)
!3411 = distinct !{!3411, !3412}
!3412 = !DILocation(line: 377, column: 5, scope: !3033)
!3413 = !DILocation(line: 403, column: 10, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3033, file: !1150, line: 403, column: 10)
!3415 = !DILocation(line: 403, column: 24, scope: !3414)
!3416 = !DILocation(line: 404, column: 9, scope: !3414)
!3417 = !DILocation(line: 404, column: 12, scope: !3418)
!3418 = !DILexicalBlockFile(scope: !3414, file: !1150, discriminator: 1)
!3419 = !DILocation(line: 404, column: 15, scope: !3418)
!3420 = !DILocation(line: 404, column: 31, scope: !3418)
!3421 = !DILocation(line: 405, column: 9, scope: !3414)
!3422 = !DILocation(line: 405, column: 12, scope: !3418)
!3423 = !DILocation(line: 405, column: 15, scope: !3418)
!3424 = !DILocation(line: 405, column: 31, scope: !3418)
!3425 = !DILocation(line: 406, column: 9, scope: !3414)
!3426 = !DILocation(line: 406, column: 12, scope: !3418)
!3427 = !DILocation(line: 406, column: 15, scope: !3418)
!3428 = !DILocation(line: 406, column: 31, scope: !3418)
!3429 = !DILocation(line: 407, column: 9, scope: !3414)
!3430 = !DILocation(line: 407, column: 12, scope: !3418)
!3431 = !DILocation(line: 407, column: 15, scope: !3418)
!3432 = !DILocation(line: 407, column: 31, scope: !3418)
!3433 = !DILocation(line: 403, column: 10, scope: !3235)
!3434 = !DILocation(line: 408, column: 9, scope: !3414)
!3435 = !DILocation(line: 408, column: 12, scope: !3414)
!3436 = !DILocation(line: 408, column: 28, scope: !3414)
!3437 = !DILocation(line: 410, column: 9, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3033, file: !1150, line: 410, column: 9)
!3439 = !DILocation(line: 410, column: 12, scope: !3438)
!3440 = !DILocation(line: 410, column: 15, scope: !3438)
!3441 = !DILocation(line: 410, column: 19, scope: !3442)
!3442 = !DILexicalBlockFile(scope: !3438, file: !1150, discriminator: 1)
!3443 = !DILocation(line: 410, column: 22, scope: !3442)
!3444 = !DILocation(line: 410, column: 28, scope: !3442)
!3445 = !DILocation(line: 410, column: 32, scope: !3442)
!3446 = !DILocation(line: 410, column: 35, scope: !3447)
!3447 = !DILexicalBlockFile(scope: !3438, file: !1150, discriminator: 2)
!3448 = !DILocation(line: 410, column: 38, scope: !3447)
!3449 = !DILocation(line: 410, column: 44, scope: !3447)
!3450 = !DILocation(line: 410, column: 9, scope: !3447)
!3451 = !DILocation(line: 411, column: 39, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3438, file: !1150, line: 410, column: 50)
!3453 = !DILocation(line: 411, column: 42, scope: !3452)
!3454 = !DILocation(line: 411, column: 9, scope: !3452)
!3455 = !DILocation(line: 412, column: 9, scope: !3452)
!3456 = !DILocation(line: 417, column: 9, scope: !3457)
!3457 = distinct !DILexicalBlock(scope: !3033, file: !1150, line: 417, column: 9)
!3458 = !DILocation(line: 417, column: 18, scope: !3457)
!3459 = !DILocation(line: 417, column: 21, scope: !3457)
!3460 = !DILocation(line: 417, column: 15, scope: !3457)
!3461 = !DILocation(line: 417, column: 27, scope: !3457)
!3462 = !DILocation(line: 417, column: 30, scope: !3463)
!3463 = !DILexicalBlockFile(scope: !3457, file: !1150, discriminator: 1)
!3464 = !DILocation(line: 417, column: 40, scope: !3463)
!3465 = !DILocation(line: 417, column: 43, scope: !3463)
!3466 = !DILocation(line: 417, column: 37, scope: !3463)
!3467 = !DILocation(line: 417, column: 50, scope: !3463)
!3468 = !DILocation(line: 417, column: 53, scope: !3469)
!3469 = !DILexicalBlockFile(scope: !3457, file: !1150, discriminator: 2)
!3470 = !DILocation(line: 417, column: 61, scope: !3469)
!3471 = !DILocation(line: 417, column: 64, scope: !3469)
!3472 = !DILocation(line: 417, column: 58, scope: !3469)
!3473 = !DILocation(line: 417, column: 69, scope: !3469)
!3474 = !DILocation(line: 418, column: 16, scope: !3457)
!3475 = !DILocation(line: 418, column: 19, scope: !3457)
!3476 = !DILocation(line: 418, column: 28, scope: !3457)
!3477 = !DILocation(line: 418, column: 9, scope: !3457)
!3478 = !DILocation(line: 418, column: 54, scope: !3457)
!3479 = !DILocation(line: 419, column: 16, scope: !3457)
!3480 = !DILocation(line: 419, column: 19, scope: !3457)
!3481 = !DILocation(line: 419, column: 28, scope: !3457)
!3482 = !DILocation(line: 419, column: 9, scope: !3457)
!3483 = !DILocation(line: 417, column: 9, scope: !3484)
!3484 = !DILexicalBlockFile(scope: !3033, file: !1150, discriminator: 3)
!3485 = !DILocation(line: 420, column: 21, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3457, file: !1150, line: 419, column: 55)
!3487 = !DILocation(line: 422, column: 20, scope: !3486)
!3488 = !DILocation(line: 422, column: 9, scope: !3486)
!3489 = !DILocation(line: 422, column: 12, scope: !3486)
!3490 = !DILocation(line: 422, column: 18, scope: !3486)
!3491 = !DILocation(line: 423, column: 21, scope: !3486)
!3492 = !DILocation(line: 423, column: 9, scope: !3486)
!3493 = !DILocation(line: 423, column: 12, scope: !3486)
!3494 = !DILocation(line: 423, column: 19, scope: !3486)
!3495 = !DILocation(line: 424, column: 19, scope: !3486)
!3496 = !DILocation(line: 424, column: 9, scope: !3486)
!3497 = !DILocation(line: 424, column: 12, scope: !3486)
!3498 = !DILocation(line: 424, column: 17, scope: !3486)
!3499 = !DILocation(line: 425, column: 16, scope: !3486)
!3500 = !DILocation(line: 425, column: 19, scope: !3486)
!3501 = !DILocation(line: 425, column: 9, scope: !3486)
!3502 = !DILocation(line: 426, column: 16, scope: !3486)
!3503 = !DILocation(line: 426, column: 19, scope: !3486)
!3504 = !DILocation(line: 426, column: 9, scope: !3486)
!3505 = !DILocation(line: 427, column: 9, scope: !3486)
!3506 = !DILocation(line: 427, column: 12, scope: !3486)
!3507 = !DILocation(line: 427, column: 23, scope: !3486)
!3508 = !DILocation(line: 428, column: 9, scope: !3486)
!3509 = !DILocation(line: 428, column: 12, scope: !3486)
!3510 = !DILocation(line: 428, column: 24, scope: !3486)
!3511 = !DILocation(line: 431, column: 13, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3486, file: !1150, line: 431, column: 13)
!3513 = !DILocation(line: 431, column: 16, scope: !3512)
!3514 = !DILocation(line: 431, column: 30, scope: !3512)
!3515 = !DILocation(line: 432, column: 14, scope: !3512)
!3516 = !DILocation(line: 432, column: 17, scope: !3512)
!3517 = !DILocation(line: 432, column: 28, scope: !3512)
!3518 = !DILocation(line: 432, column: 33, scope: !3512)
!3519 = !DILocation(line: 432, column: 36, scope: !3520)
!3520 = !DILexicalBlockFile(scope: !3512, file: !1150, discriminator: 1)
!3521 = !DILocation(line: 432, column: 39, scope: !3520)
!3522 = !DILocation(line: 432, column: 46, scope: !3520)
!3523 = !DILocation(line: 432, column: 56, scope: !3520)
!3524 = !DILocation(line: 432, column: 68, scope: !3520)
!3525 = !DILocation(line: 432, column: 71, scope: !3520)
!3526 = !DILocation(line: 432, column: 78, scope: !3520)
!3527 = !DILocation(line: 432, column: 88, scope: !3520)
!3528 = !DILocation(line: 432, column: 66, scope: !3520)
!3529 = !DILocation(line: 432, column: 60, scope: !3520)
!3530 = !DILocation(line: 432, column: 93, scope: !3520)
!3531 = !DILocation(line: 433, column: 13, scope: !3512)
!3532 = !DILocation(line: 433, column: 16, scope: !3512)
!3533 = !DILocation(line: 433, column: 27, scope: !3512)
!3534 = !DILocation(line: 433, column: 32, scope: !3512)
!3535 = !DILocation(line: 434, column: 13, scope: !3512)
!3536 = !DILocation(line: 434, column: 16, scope: !3512)
!3537 = !DILocation(line: 434, column: 27, scope: !3512)
!3538 = !DILocation(line: 434, column: 30, scope: !3512)
!3539 = !DILocation(line: 434, column: 41, scope: !3512)
!3540 = !DILocation(line: 434, column: 46, scope: !3512)
!3541 = !DILocation(line: 434, column: 23, scope: !3512)
!3542 = !DILocation(line: 431, column: 13, scope: !3543)
!3543 = !DILexicalBlockFile(scope: !3486, file: !1150, discriminator: 1)
!3544 = !DILocation(line: 435, column: 13, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3512, file: !1150, line: 434, column: 52)
!3546 = !DILocation(line: 435, column: 16, scope: !3545)
!3547 = !DILocation(line: 435, column: 27, scope: !3545)
!3548 = !DILocation(line: 436, column: 31, scope: !3545)
!3549 = !DILocation(line: 436, column: 34, scope: !3545)
!3550 = !DILocation(line: 436, column: 13, scope: !3545)
!3551 = !DILocation(line: 436, column: 16, scope: !3545)
!3552 = !DILocation(line: 436, column: 29, scope: !3545)
!3553 = !DILocation(line: 437, column: 13, scope: !3545)
!3554 = !DILocation(line: 437, column: 16, scope: !3545)
!3555 = !DILocation(line: 437, column: 29, scope: !3545)
!3556 = !DILocation(line: 437, column: 46, scope: !3545)
!3557 = !DILocation(line: 438, column: 48, scope: !3545)
!3558 = !DILocation(line: 438, column: 51, scope: !3545)
!3559 = !DILocation(line: 438, column: 47, scope: !3545)
!3560 = !DILocation(line: 438, column: 13, scope: !3545)
!3561 = !DILocation(line: 438, column: 16, scope: !3545)
!3562 = !DILocation(line: 438, column: 29, scope: !3545)
!3563 = !DILocation(line: 438, column: 45, scope: !3545)
!3564 = !DILocation(line: 439, column: 20, scope: !3545)
!3565 = !DILocation(line: 440, column: 9, scope: !3545)
!3566 = !DILocation(line: 442, column: 33, scope: !3486)
!3567 = !DILocation(line: 442, column: 36, scope: !3486)
!3568 = !DILocation(line: 442, column: 43, scope: !3486)
!3569 = !DILocation(line: 442, column: 50, scope: !3486)
!3570 = !DILocation(line: 442, column: 15, scope: !3486)
!3571 = !DILocation(line: 442, column: 13, scope: !3486)
!3572 = !DILocation(line: 443, column: 13, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3486, file: !1150, line: 443, column: 13)
!3574 = !DILocation(line: 443, column: 17, scope: !3573)
!3575 = !DILocation(line: 443, column: 13, scope: !3486)
!3576 = !DILocation(line: 444, column: 20, scope: !3573)
!3577 = !DILocation(line: 444, column: 13, scope: !3573)
!3578 = !DILocation(line: 446, column: 9, scope: !3486)
!3579 = !DILocation(line: 446, column: 12, scope: !3486)
!3580 = !DILocation(line: 446, column: 26, scope: !3486)
!3581 = !DILocation(line: 447, column: 5, scope: !3486)
!3582 = !DILocation(line: 448, column: 21, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !3457, file: !1150, line: 447, column: 12)
!3584 = !DILocation(line: 451, column: 9, scope: !3038)
!3585 = !DILocation(line: 451, column: 12, scope: !3038)
!3586 = !DILocation(line: 451, column: 24, scope: !3038)
!3587 = !DILocation(line: 451, column: 27, scope: !3588)
!3588 = !DILexicalBlockFile(scope: !3038, file: !1150, discriminator: 1)
!3589 = !DILocation(line: 451, column: 30, scope: !3588)
!3590 = !DILocation(line: 451, column: 41, scope: !3588)
!3591 = !DILocation(line: 451, column: 45, scope: !3592)
!3592 = !DILexicalBlockFile(scope: !3038, file: !1150, discriminator: 2)
!3593 = !DILocation(line: 451, column: 48, scope: !3592)
!3594 = !DILocation(line: 451, column: 65, scope: !3592)
!3595 = !DILocation(line: 451, column: 68, scope: !3592)
!3596 = !DILocation(line: 451, column: 64, scope: !3592)
!3597 = !DILocation(line: 451, column: 61, scope: !3592)
!3598 = !DILocation(line: 451, column: 9, scope: !3592)
!3599 = !DILocation(line: 452, column: 13, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3601, file: !1150, line: 452, column: 13)
!3601 = distinct !DILexicalBlock(scope: !3038, file: !1150, line: 451, column: 89)
!3602 = !DILocation(line: 452, column: 16, scope: !3600)
!3603 = !DILocation(line: 452, column: 13, scope: !3601)
!3604 = !DILocation(line: 453, column: 35, scope: !3605)
!3605 = distinct !DILexicalBlock(scope: !3600, file: !1150, line: 452, column: 29)
!3606 = !DILocation(line: 453, column: 38, scope: !3605)
!3607 = !DILocation(line: 453, column: 13, scope: !3605)
!3608 = !DILocation(line: 454, column: 13, scope: !3605)
!3609 = !DILocation(line: 456, column: 5, scope: !3601)
!3610 = !DILocation(line: 457, column: 13, scope: !3611)
!3611 = distinct !DILexicalBlock(scope: !3037, file: !1150, line: 457, column: 13)
!3612 = !DILocation(line: 457, column: 16, scope: !3611)
!3613 = !DILocation(line: 457, column: 22, scope: !3611)
!3614 = !DILocation(line: 457, column: 27, scope: !3611)
!3615 = !DILocation(line: 457, column: 30, scope: !3616)
!3616 = !DILexicalBlockFile(scope: !3611, file: !1150, discriminator: 1)
!3617 = !DILocation(line: 457, column: 33, scope: !3616)
!3618 = !DILocation(line: 457, column: 39, scope: !3616)
!3619 = !DILocation(line: 457, column: 44, scope: !3616)
!3620 = !DILocation(line: 457, column: 47, scope: !3621)
!3621 = !DILexicalBlockFile(scope: !3611, file: !1150, discriminator: 2)
!3622 = !DILocation(line: 457, column: 50, scope: !3621)
!3623 = !DILocation(line: 457, column: 58, scope: !3621)
!3624 = !DILocation(line: 457, column: 62, scope: !3621)
!3625 = !DILocation(line: 457, column: 66, scope: !3626)
!3626 = !DILexicalBlockFile(scope: !3611, file: !1150, discriminator: 3)
!3627 = !DILocation(line: 457, column: 79, scope: !3626)
!3628 = !DILocation(line: 457, column: 83, scope: !3626)
!3629 = !DILocation(line: 457, column: 86, scope: !3630)
!3630 = !DILexicalBlockFile(scope: !3611, file: !1150, discriminator: 4)
!3631 = !DILocation(line: 457, column: 99, scope: !3630)
!3632 = !DILocation(line: 457, column: 13, scope: !3630)
!3633 = !DILocation(line: 458, column: 13, scope: !3611)
!3634 = !DILocation(line: 458, column: 16, scope: !3611)
!3635 = !DILocation(line: 458, column: 20, scope: !3611)
!3636 = !DILocation(line: 459, column: 19, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3611, file: !1150, line: 459, column: 18)
!3638 = !DILocation(line: 459, column: 22, scope: !3637)
!3639 = !DILocation(line: 459, column: 18, scope: !3611)
!3640 = !DILocation(line: 460, column: 13, scope: !3637)
!3641 = !DILocation(line: 460, column: 16, scope: !3637)
!3642 = !DILocation(line: 460, column: 20, scope: !3637)
!3643 = !DILocation(line: 462, column: 29, scope: !3037)
!3644 = !DILocation(line: 462, column: 32, scope: !3037)
!3645 = !DILocation(line: 462, column: 43, scope: !3037)
!3646 = !DILocation(line: 462, column: 53, scope: !3037)
!3647 = !DILocation(line: 462, column: 56, scope: !3037)
!3648 = !DILocation(line: 462, column: 67, scope: !3037)
!3649 = !DILocation(line: 462, column: 50, scope: !3037)
!3650 = !DILocation(line: 463, column: 19, scope: !3037)
!3651 = !DILocation(line: 463, column: 22, scope: !3037)
!3652 = !DILocation(line: 463, column: 33, scope: !3037)
!3653 = !DILocation(line: 462, column: 74, scope: !3037)
!3654 = !DILocation(line: 463, column: 43, scope: !3037)
!3655 = !DILocation(line: 463, column: 46, scope: !3037)
!3656 = !DILocation(line: 463, column: 57, scope: !3037)
!3657 = !DILocation(line: 463, column: 40, scope: !3037)
!3658 = !DILocation(line: 464, column: 19, scope: !3037)
!3659 = !DILocation(line: 464, column: 22, scope: !3037)
!3660 = !DILocation(line: 464, column: 33, scope: !3037)
!3661 = !DILocation(line: 463, column: 64, scope: !3037)
!3662 = !DILocation(line: 464, column: 43, scope: !3037)
!3663 = !DILocation(line: 464, column: 46, scope: !3037)
!3664 = !DILocation(line: 464, column: 57, scope: !3037)
!3665 = !DILocation(line: 464, column: 40, scope: !3037)
!3666 = !DILocation(line: 465, column: 19, scope: !3037)
!3667 = !DILocation(line: 465, column: 22, scope: !3037)
!3668 = !DILocation(line: 465, column: 33, scope: !3037)
!3669 = !DILocation(line: 464, column: 63, scope: !3037)
!3670 = !DILocation(line: 465, column: 41, scope: !3037)
!3671 = !DILocation(line: 465, column: 44, scope: !3037)
!3672 = !DILocation(line: 465, column: 39, scope: !3037)
!3673 = !DILocation(line: 462, column: 16, scope: !3037)
!3674 = !DILocation(line: 466, column: 12, scope: !3037)
!3675 = !DILocation(line: 466, column: 15, scope: !3037)
!3676 = !DILocation(line: 466, column: 45, scope: !3037)
!3677 = !DILocation(line: 466, column: 5, scope: !3037)
!3678 = !DILocation(line: 469, column: 11, scope: !3679)
!3679 = distinct !DILexicalBlock(scope: !3037, file: !1150, line: 469, column: 9)
!3680 = !DILocation(line: 469, column: 22, scope: !3679)
!3681 = !DILocation(line: 469, column: 9, scope: !3037)
!3682 = !DILocation(line: 470, column: 24, scope: !3679)
!3683 = !DILocation(line: 470, column: 35, scope: !3679)
!3684 = !DILocation(line: 470, column: 49, scope: !3679)
!3685 = !DILocation(line: 470, column: 20, scope: !3679)
!3686 = !DILocation(line: 470, column: 9, scope: !3679)
!3687 = !DILocation(line: 471, column: 11, scope: !3688)
!3688 = distinct !DILexicalBlock(scope: !3037, file: !1150, line: 471, column: 9)
!3689 = !DILocation(line: 471, column: 22, scope: !3688)
!3690 = !DILocation(line: 471, column: 9, scope: !3037)
!3691 = !DILocation(line: 472, column: 24, scope: !3688)
!3692 = !DILocation(line: 472, column: 35, scope: !3688)
!3693 = !DILocation(line: 472, column: 49, scope: !3688)
!3694 = !DILocation(line: 472, column: 20, scope: !3688)
!3695 = !DILocation(line: 472, column: 9, scope: !3688)
!3696 = !DILocation(line: 474, column: 12, scope: !3697)
!3697 = distinct !DILexicalBlock(scope: !3037, file: !1150, line: 474, column: 5)
!3698 = !DILocation(line: 474, column: 10, scope: !3697)
!3699 = !DILocation(line: 474, column: 17, scope: !3700)
!3700 = !DILexicalBlockFile(scope: !3701, file: !1150, discriminator: 1)
!3701 = distinct !DILexicalBlock(scope: !3697, file: !1150, line: 474, column: 5)
!3702 = !DILocation(line: 474, column: 19, scope: !3700)
!3703 = !DILocation(line: 474, column: 5, scope: !3700)
!3704 = !DILocalVariable(name: "j", scope: !3705, file: !1150, line: 475, type: !1025)
!3705 = distinct !DILexicalBlock(scope: !3701, file: !1150, line: 474, column: 29)
!3706 = !DILocation(line: 475, column: 13, scope: !3705)
!3707 = !DILocation(line: 475, column: 22, scope: !3705)
!3708 = !DILocation(line: 475, column: 23, scope: !3705)
!3709 = !DILocation(line: 475, column: 19, scope: !3705)
!3710 = !DILocation(line: 475, column: 30, scope: !3705)
!3711 = !DILocation(line: 475, column: 31, scope: !3705)
!3712 = !DILocation(line: 475, column: 27, scope: !3705)
!3713 = !DILocalVariable(name: "is", scope: !3705, file: !1150, line: 476, type: !1025)
!3714 = !DILocation(line: 476, column: 13, scope: !3705)
!3715 = !DILocation(line: 476, column: 19, scope: !3705)
!3716 = !DILocation(line: 476, column: 36, scope: !3705)
!3717 = !DILocation(line: 476, column: 35, scope: !3705)
!3718 = !DILocation(line: 476, column: 30, scope: !3705)
!3719 = !DILocation(line: 476, column: 40, scope: !3705)
!3720 = !DILocalVariable(name: "js", scope: !3705, file: !1150, line: 477, type: !1025)
!3721 = !DILocation(line: 477, column: 13, scope: !3705)
!3722 = !DILocation(line: 477, column: 19, scope: !3705)
!3723 = !DILocation(line: 477, column: 36, scope: !3705)
!3724 = !DILocation(line: 477, column: 35, scope: !3705)
!3725 = !DILocation(line: 477, column: 30, scope: !3705)
!3726 = !DILocation(line: 477, column: 40, scope: !3705)
!3727 = !DILocation(line: 479, column: 13, scope: !3728)
!3728 = distinct !DILexicalBlock(scope: !3705, file: !1150, line: 479, column: 13)
!3729 = !DILocation(line: 479, column: 16, scope: !3728)
!3730 = !DILocation(line: 479, column: 21, scope: !3728)
!3731 = !DILocation(line: 479, column: 24, scope: !3732)
!3732 = !DILexicalBlockFile(scope: !3728, file: !1150, discriminator: 1)
!3733 = !DILocation(line: 479, column: 27, scope: !3732)
!3734 = !DILocation(line: 479, column: 32, scope: !3732)
!3735 = !DILocation(line: 479, column: 36, scope: !3736)
!3736 = !DILexicalBlockFile(scope: !3728, file: !1150, discriminator: 2)
!3737 = !DILocation(line: 479, column: 38, scope: !3736)
!3738 = !DILocation(line: 479, column: 42, scope: !3736)
!3739 = !DILocation(line: 479, column: 45, scope: !3740)
!3740 = !DILexicalBlockFile(scope: !3728, file: !1150, discriminator: 3)
!3741 = !DILocation(line: 479, column: 47, scope: !3740)
!3742 = !DILocation(line: 479, column: 13, scope: !3740)
!3743 = !DILocation(line: 480, column: 19, scope: !3728)
!3744 = !DILocation(line: 480, column: 42, scope: !3728)
!3745 = !DILocation(line: 480, column: 43, scope: !3728)
!3746 = !DILocation(line: 480, column: 40, scope: !3728)
!3747 = !DILocation(line: 480, column: 37, scope: !3728)
!3748 = !DILocation(line: 480, column: 30, scope: !3728)
!3749 = !DILocation(line: 480, column: 49, scope: !3728)
!3750 = !DILocation(line: 480, column: 16, scope: !3728)
!3751 = !DILocation(line: 480, column: 13, scope: !3728)
!3752 = !DILocation(line: 481, column: 13, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3705, file: !1150, line: 481, column: 13)
!3754 = !DILocation(line: 481, column: 16, scope: !3753)
!3755 = !DILocation(line: 481, column: 21, scope: !3753)
!3756 = !DILocation(line: 481, column: 24, scope: !3757)
!3757 = !DILexicalBlockFile(scope: !3753, file: !1150, discriminator: 1)
!3758 = !DILocation(line: 481, column: 27, scope: !3757)
!3759 = !DILocation(line: 481, column: 32, scope: !3757)
!3760 = !DILocation(line: 481, column: 36, scope: !3761)
!3761 = !DILexicalBlockFile(scope: !3753, file: !1150, discriminator: 2)
!3762 = !DILocation(line: 481, column: 38, scope: !3761)
!3763 = !DILocation(line: 481, column: 42, scope: !3761)
!3764 = !DILocation(line: 481, column: 45, scope: !3765)
!3765 = !DILexicalBlockFile(scope: !3753, file: !1150, discriminator: 3)
!3766 = !DILocation(line: 481, column: 47, scope: !3765)
!3767 = !DILocation(line: 481, column: 13, scope: !3765)
!3768 = !DILocation(line: 482, column: 19, scope: !3753)
!3769 = !DILocation(line: 482, column: 42, scope: !3753)
!3770 = !DILocation(line: 482, column: 43, scope: !3753)
!3771 = !DILocation(line: 482, column: 40, scope: !3753)
!3772 = !DILocation(line: 482, column: 37, scope: !3753)
!3773 = !DILocation(line: 482, column: 30, scope: !3753)
!3774 = !DILocation(line: 482, column: 49, scope: !3753)
!3775 = !DILocation(line: 482, column: 16, scope: !3753)
!3776 = !DILocation(line: 482, column: 13, scope: !3753)
!3777 = !DILocation(line: 484, column: 13, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3705, file: !1150, line: 484, column: 13)
!3779 = !DILocation(line: 484, column: 16, scope: !3778)
!3780 = !DILocation(line: 484, column: 21, scope: !3778)
!3781 = !DILocation(line: 484, column: 24, scope: !3782)
!3782 = !DILexicalBlockFile(scope: !3778, file: !1150, discriminator: 1)
!3783 = !DILocation(line: 484, column: 27, scope: !3782)
!3784 = !DILocation(line: 484, column: 13, scope: !3782)
!3785 = !DILocation(line: 485, column: 17, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3787, file: !1150, line: 485, column: 17)
!3787 = distinct !DILexicalBlock(scope: !3778, file: !1150, line: 484, column: 33)
!3788 = !DILocation(line: 485, column: 19, scope: !3786)
!3789 = !DILocation(line: 485, column: 17, scope: !3787)
!3790 = !DILocation(line: 485, column: 37, scope: !3791)
!3791 = !DILexicalBlockFile(scope: !3786, file: !1150, discriminator: 1)
!3792 = !DILocation(line: 485, column: 38, scope: !3791)
!3793 = !DILocation(line: 485, column: 24, scope: !3791)
!3794 = !DILocation(line: 485, column: 27, scope: !3791)
!3795 = !DILocation(line: 485, column: 42, scope: !3791)
!3796 = !DILocation(line: 486, column: 31, scope: !3786)
!3797 = !DILocation(line: 486, column: 32, scope: !3786)
!3798 = !DILocation(line: 486, column: 18, scope: !3786)
!3799 = !DILocation(line: 486, column: 21, scope: !3786)
!3800 = !DILocation(line: 486, column: 36, scope: !3786)
!3801 = !DILocation(line: 487, column: 9, scope: !3787)
!3802 = !DILocation(line: 488, column: 5, scope: !3705)
!3803 = !DILocation(line: 474, column: 25, scope: !3804)
!3804 = !DILexicalBlockFile(scope: !3701, file: !1150, discriminator: 2)
!3805 = !DILocation(line: 474, column: 5, scope: !3804)
!3806 = distinct !{!3806, !3807}
!3807 = !DILocation(line: 474, column: 5, scope: !3037)
!3808 = !DILocation(line: 490, column: 13, scope: !3037)
!3809 = !DILocation(line: 490, column: 5, scope: !3037)
!3810 = !DILocation(line: 492, column: 13, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !3812, file: !1150, line: 492, column: 13)
!3812 = distinct !DILexicalBlock(scope: !3037, file: !1150, line: 490, column: 25)
!3813 = !DILocation(line: 492, column: 16, scope: !3811)
!3814 = !DILocation(line: 492, column: 13, scope: !3812)
!3815 = !DILocation(line: 493, column: 33, scope: !3811)
!3816 = !DILocation(line: 493, column: 36, scope: !3811)
!3817 = !DILocation(line: 493, column: 41, scope: !3811)
!3818 = !DILocation(line: 493, column: 13, scope: !3811)
!3819 = !DILocation(line: 493, column: 16, scope: !3811)
!3820 = !DILocation(line: 493, column: 23, scope: !3811)
!3821 = !DILocation(line: 493, column: 31, scope: !3811)
!3822 = !DILocation(line: 495, column: 18, scope: !3823)
!3823 = distinct !DILexicalBlock(scope: !3824, file: !1150, line: 495, column: 18)
!3824 = distinct !DILexicalBlock(scope: !3811, file: !1150, line: 494, column: 14)
!3825 = !DILocation(line: 495, column: 21, scope: !3823)
!3826 = !DILocation(line: 495, column: 37, scope: !3823)
!3827 = !DILocation(line: 496, column: 17, scope: !3823)
!3828 = !DILocation(line: 496, column: 20, scope: !3829)
!3829 = !DILexicalBlockFile(scope: !3823, file: !1150, discriminator: 1)
!3830 = !DILocation(line: 496, column: 23, scope: !3829)
!3831 = !DILocation(line: 496, column: 39, scope: !3829)
!3832 = !DILocation(line: 496, column: 50, scope: !3829)
!3833 = !DILocation(line: 496, column: 53, scope: !3834)
!3834 = !DILexicalBlockFile(scope: !3823, file: !1150, discriminator: 2)
!3835 = !DILocation(line: 496, column: 56, scope: !3834)
!3836 = !DILocation(line: 496, column: 72, scope: !3834)
!3837 = !DILocation(line: 496, column: 83, scope: !3834)
!3838 = !DILocation(line: 496, column: 86, scope: !3839)
!3839 = !DILexicalBlockFile(scope: !3823, file: !1150, discriminator: 3)
!3840 = !DILocation(line: 496, column: 89, scope: !3839)
!3841 = !DILocation(line: 496, column: 105, scope: !3839)
!3842 = !DILocation(line: 495, column: 18, scope: !3843)
!3843 = !DILexicalBlockFile(scope: !3824, file: !1150, discriminator: 1)
!3844 = !DILocation(line: 497, column: 37, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3823, file: !1150, line: 496, column: 117)
!3846 = !DILocation(line: 497, column: 40, scope: !3845)
!3847 = !DILocation(line: 497, column: 45, scope: !3845)
!3848 = !DILocation(line: 497, column: 17, scope: !3845)
!3849 = !DILocation(line: 497, column: 20, scope: !3845)
!3850 = !DILocation(line: 497, column: 27, scope: !3845)
!3851 = !DILocation(line: 497, column: 35, scope: !3845)
!3852 = !DILocation(line: 498, column: 13, scope: !3845)
!3853 = !DILocation(line: 499, column: 21, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3855, file: !1150, line: 499, column: 21)
!3855 = distinct !DILexicalBlock(scope: !3823, file: !1150, line: 498, column: 20)
!3856 = !DILocation(line: 499, column: 24, scope: !3854)
!3857 = !DILocation(line: 499, column: 29, scope: !3854)
!3858 = !DILocation(line: 499, column: 21, scope: !3855)
!3859 = !DILocation(line: 499, column: 55, scope: !3860)
!3860 = !DILexicalBlockFile(scope: !3854, file: !1150, discriminator: 1)
!3861 = !DILocation(line: 499, column: 58, scope: !3860)
!3862 = !DILocation(line: 499, column: 35, scope: !3860)
!3863 = !DILocation(line: 499, column: 38, scope: !3860)
!3864 = !DILocation(line: 499, column: 45, scope: !3860)
!3865 = !DILocation(line: 499, column: 53, scope: !3860)
!3866 = !DILocation(line: 500, column: 22, scope: !3854)
!3867 = !DILocation(line: 500, column: 25, scope: !3854)
!3868 = !DILocation(line: 500, column: 32, scope: !3854)
!3869 = !DILocation(line: 500, column: 40, scope: !3854)
!3870 = !DILocation(line: 501, column: 37, scope: !3855)
!3871 = !DILocation(line: 501, column: 40, scope: !3855)
!3872 = !DILocation(line: 501, column: 13, scope: !3855)
!3873 = !DILocation(line: 501, column: 16, scope: !3855)
!3874 = !DILocation(line: 501, column: 23, scope: !3855)
!3875 = !DILocation(line: 501, column: 35, scope: !3855)
!3876 = !DILocation(line: 504, column: 9, scope: !3812)
!3877 = distinct !{!3877, !3876}
!3878 = !DILocation(line: 504, column: 20, scope: !3879)
!3879 = !DILexicalBlockFile(scope: !3880, file: !1150, discriminator: 1)
!3880 = distinct !DILexicalBlock(scope: !3881, file: !1150, line: 504, column: 18)
!3881 = distinct !DILexicalBlock(scope: !3812, file: !1150, line: 504, column: 12)
!3882 = !DILocation(line: 504, column: 23, scope: !3879)
!3883 = !DILocation(line: 504, column: 37, scope: !3879)
!3884 = !DILocation(line: 504, column: 18, scope: !3879)
!3885 = !DILocation(line: 504, column: 46, scope: !3886)
!3886 = !DILexicalBlockFile(scope: !3887, file: !1150, discriminator: 2)
!3887 = distinct !DILexicalBlock(scope: !3880, file: !1150, line: 504, column: 44)
!3888 = !DILocation(line: 504, column: 103, scope: !3889)
!3889 = !DILexicalBlockFile(scope: !3886, file: !1150, discriminator: 4)
!3890 = !DILocation(line: 504, column: 103, scope: !3886)
!3891 = !DILocation(line: 504, column: 114, scope: !3892)
!3892 = !DILexicalBlockFile(scope: !3881, file: !1150, discriminator: 3)
!3893 = !DILocation(line: 505, column: 9, scope: !3812)
!3894 = !DILocation(line: 507, column: 13, scope: !3895)
!3895 = distinct !DILexicalBlock(scope: !3812, file: !1150, line: 507, column: 13)
!3896 = !DILocation(line: 507, column: 16, scope: !3895)
!3897 = !DILocation(line: 507, column: 13, scope: !3812)
!3898 = !DILocation(line: 508, column: 33, scope: !3895)
!3899 = !DILocation(line: 508, column: 36, scope: !3895)
!3900 = !DILocation(line: 508, column: 41, scope: !3895)
!3901 = !DILocation(line: 508, column: 13, scope: !3895)
!3902 = !DILocation(line: 508, column: 16, scope: !3895)
!3903 = !DILocation(line: 508, column: 23, scope: !3895)
!3904 = !DILocation(line: 508, column: 31, scope: !3895)
!3905 = !DILocation(line: 510, column: 17, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3907, file: !1150, line: 510, column: 17)
!3907 = distinct !DILexicalBlock(scope: !3895, file: !1150, line: 509, column: 14)
!3908 = !DILocation(line: 510, column: 20, scope: !3906)
!3909 = !DILocation(line: 510, column: 36, scope: !3906)
!3910 = !DILocation(line: 510, column: 41, scope: !3906)
!3911 = !DILocation(line: 510, column: 44, scope: !3912)
!3912 = !DILexicalBlockFile(scope: !3906, file: !1150, discriminator: 1)
!3913 = !DILocation(line: 510, column: 47, scope: !3912)
!3914 = !DILocation(line: 510, column: 52, scope: !3912)
!3915 = !DILocation(line: 510, column: 17, scope: !3912)
!3916 = !DILocation(line: 511, column: 17, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3906, file: !1150, line: 510, column: 58)
!3918 = !DILocation(line: 511, column: 20, scope: !3917)
!3919 = !DILocation(line: 511, column: 27, scope: !3917)
!3920 = !DILocation(line: 511, column: 35, scope: !3917)
!3921 = !DILocation(line: 512, column: 13, scope: !3917)
!3922 = !DILocation(line: 513, column: 37, scope: !3923)
!3923 = distinct !DILexicalBlock(scope: !3906, file: !1150, line: 512, column: 20)
!3924 = !DILocation(line: 513, column: 40, scope: !3923)
!3925 = !DILocation(line: 513, column: 45, scope: !3923)
!3926 = !DILocation(line: 513, column: 17, scope: !3923)
!3927 = !DILocation(line: 513, column: 20, scope: !3923)
!3928 = !DILocation(line: 513, column: 27, scope: !3923)
!3929 = !DILocation(line: 513, column: 35, scope: !3923)
!3930 = !DILocation(line: 514, column: 41, scope: !3923)
!3931 = !DILocation(line: 514, column: 44, scope: !3923)
!3932 = !DILocation(line: 514, column: 17, scope: !3923)
!3933 = !DILocation(line: 514, column: 20, scope: !3923)
!3934 = !DILocation(line: 514, column: 27, scope: !3923)
!3935 = !DILocation(line: 514, column: 39, scope: !3923)
!3936 = !DILocation(line: 517, column: 9, scope: !3812)
!3937 = distinct !{!3937, !3936}
!3938 = !DILocation(line: 517, column: 20, scope: !3939)
!3939 = !DILexicalBlockFile(scope: !3940, file: !1150, discriminator: 1)
!3940 = distinct !DILexicalBlock(scope: !3941, file: !1150, line: 517, column: 18)
!3941 = distinct !DILexicalBlock(scope: !3812, file: !1150, line: 517, column: 12)
!3942 = !DILocation(line: 517, column: 23, scope: !3939)
!3943 = !DILocation(line: 517, column: 37, scope: !3939)
!3944 = !DILocation(line: 517, column: 18, scope: !3939)
!3945 = !DILocation(line: 517, column: 46, scope: !3946)
!3946 = !DILexicalBlockFile(scope: !3947, file: !1150, discriminator: 2)
!3947 = distinct !DILexicalBlock(scope: !3940, file: !1150, line: 517, column: 44)
!3948 = !DILocation(line: 517, column: 103, scope: !3949)
!3949 = !DILexicalBlockFile(scope: !3946, file: !1150, discriminator: 4)
!3950 = !DILocation(line: 517, column: 103, scope: !3946)
!3951 = !DILocation(line: 517, column: 114, scope: !3952)
!3952 = !DILexicalBlockFile(scope: !3941, file: !1150, discriminator: 3)
!3953 = !DILocation(line: 518, column: 9, scope: !3812)
!3954 = !DILocation(line: 521, column: 13, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !3812, file: !1150, line: 521, column: 13)
!3956 = !DILocation(line: 521, column: 16, scope: !3955)
!3957 = !DILocation(line: 521, column: 32, scope: !3955)
!3958 = !DILocation(line: 521, column: 37, scope: !3955)
!3959 = !DILocation(line: 521, column: 40, scope: !3960)
!3960 = !DILexicalBlockFile(scope: !3955, file: !1150, discriminator: 1)
!3961 = !DILocation(line: 521, column: 43, scope: !3960)
!3962 = !DILocation(line: 521, column: 48, scope: !3960)
!3963 = !DILocation(line: 521, column: 13, scope: !3960)
!3964 = !DILocation(line: 522, column: 13, scope: !3965)
!3965 = distinct !DILexicalBlock(scope: !3955, file: !1150, line: 521, column: 54)
!3966 = !DILocation(line: 522, column: 16, scope: !3965)
!3967 = !DILocation(line: 522, column: 23, scope: !3965)
!3968 = !DILocation(line: 522, column: 31, scope: !3965)
!3969 = !DILocation(line: 523, column: 31, scope: !3965)
!3970 = !DILocation(line: 523, column: 34, scope: !3965)
!3971 = !DILocation(line: 523, column: 47, scope: !3965)
!3972 = !DILocation(line: 523, column: 13, scope: !3965)
!3973 = !DILocation(line: 523, column: 16, scope: !3965)
!3974 = !DILocation(line: 523, column: 29, scope: !3965)
!3975 = !DILocation(line: 524, column: 31, scope: !3965)
!3976 = !DILocation(line: 524, column: 34, scope: !3965)
!3977 = !DILocation(line: 524, column: 47, scope: !3965)
!3978 = !DILocation(line: 524, column: 13, scope: !3965)
!3979 = !DILocation(line: 524, column: 16, scope: !3965)
!3980 = !DILocation(line: 524, column: 29, scope: !3965)
!3981 = !DILocation(line: 525, column: 9, scope: !3965)
!3982 = !DILocation(line: 525, column: 20, scope: !3983)
!3983 = !DILexicalBlockFile(scope: !3984, file: !1150, discriminator: 1)
!3984 = distinct !DILexicalBlock(scope: !3955, file: !1150, line: 525, column: 20)
!3985 = !DILocation(line: 525, column: 23, scope: !3983)
!3986 = !DILocation(line: 525, column: 39, scope: !3983)
!3987 = !DILocation(line: 525, column: 44, scope: !3983)
!3988 = !DILocation(line: 525, column: 47, scope: !3989)
!3989 = !DILexicalBlockFile(scope: !3984, file: !1150, discriminator: 2)
!3990 = !DILocation(line: 525, column: 50, scope: !3989)
!3991 = !DILocation(line: 525, column: 55, scope: !3989)
!3992 = !DILocation(line: 525, column: 20, scope: !3989)
!3993 = !DILocation(line: 526, column: 13, scope: !3994)
!3994 = distinct !DILexicalBlock(scope: !3984, file: !1150, line: 525, column: 61)
!3995 = !DILocation(line: 526, column: 16, scope: !3994)
!3996 = !DILocation(line: 526, column: 23, scope: !3994)
!3997 = !DILocation(line: 526, column: 31, scope: !3994)
!3998 = !DILocation(line: 527, column: 31, scope: !3994)
!3999 = !DILocation(line: 527, column: 34, scope: !3994)
!4000 = !DILocation(line: 527, column: 47, scope: !3994)
!4001 = !DILocation(line: 527, column: 13, scope: !3994)
!4002 = !DILocation(line: 527, column: 16, scope: !3994)
!4003 = !DILocation(line: 527, column: 29, scope: !3994)
!4004 = !DILocation(line: 528, column: 31, scope: !3994)
!4005 = !DILocation(line: 528, column: 34, scope: !3994)
!4006 = !DILocation(line: 528, column: 47, scope: !3994)
!4007 = !DILocation(line: 528, column: 13, scope: !3994)
!4008 = !DILocation(line: 528, column: 16, scope: !3994)
!4009 = !DILocation(line: 528, column: 29, scope: !3994)
!4010 = !DILocation(line: 529, column: 37, scope: !3994)
!4011 = !DILocation(line: 529, column: 40, scope: !3994)
!4012 = !DILocation(line: 529, column: 13, scope: !3994)
!4013 = !DILocation(line: 529, column: 16, scope: !3994)
!4014 = !DILocation(line: 529, column: 23, scope: !3994)
!4015 = !DILocation(line: 529, column: 35, scope: !3994)
!4016 = !DILocation(line: 530, column: 9, scope: !3994)
!4017 = !DILocation(line: 531, column: 17, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !4019, file: !1150, line: 531, column: 17)
!4019 = distinct !DILexicalBlock(scope: !3984, file: !1150, line: 530, column: 16)
!4020 = !DILocation(line: 531, column: 20, scope: !4018)
!4021 = !DILocation(line: 531, column: 25, scope: !4018)
!4022 = !DILocation(line: 531, column: 17, scope: !4019)
!4023 = !DILocation(line: 531, column: 31, scope: !4024)
!4024 = !DILexicalBlockFile(scope: !4018, file: !1150, discriminator: 1)
!4025 = !DILocation(line: 531, column: 34, scope: !4024)
!4026 = !DILocation(line: 531, column: 41, scope: !4024)
!4027 = !DILocation(line: 531, column: 49, scope: !4024)
!4028 = !DILocation(line: 532, column: 18, scope: !4018)
!4029 = !DILocation(line: 532, column: 21, scope: !4018)
!4030 = !DILocation(line: 532, column: 28, scope: !4018)
!4031 = !DILocation(line: 532, column: 36, scope: !4018)
!4032 = !DILocation(line: 533, column: 37, scope: !4019)
!4033 = !DILocation(line: 533, column: 40, scope: !4019)
!4034 = !DILocation(line: 533, column: 13, scope: !4019)
!4035 = !DILocation(line: 533, column: 16, scope: !4019)
!4036 = !DILocation(line: 533, column: 23, scope: !4019)
!4037 = !DILocation(line: 533, column: 35, scope: !4019)
!4038 = !DILocation(line: 535, column: 9, scope: !3812)
!4039 = distinct !{!4039, !4038}
!4040 = !DILocation(line: 535, column: 20, scope: !4041)
!4041 = !DILexicalBlockFile(scope: !4042, file: !1150, discriminator: 1)
!4042 = distinct !DILexicalBlock(scope: !4043, file: !1150, line: 535, column: 18)
!4043 = distinct !DILexicalBlock(scope: !3812, file: !1150, line: 535, column: 12)
!4044 = !DILocation(line: 535, column: 23, scope: !4041)
!4045 = !DILocation(line: 535, column: 37, scope: !4041)
!4046 = !DILocation(line: 535, column: 18, scope: !4041)
!4047 = !DILocation(line: 535, column: 46, scope: !4048)
!4048 = !DILexicalBlockFile(scope: !4049, file: !1150, discriminator: 2)
!4049 = distinct !DILexicalBlock(scope: !4042, file: !1150, line: 535, column: 44)
!4050 = !DILocation(line: 535, column: 103, scope: !4051)
!4051 = !DILexicalBlockFile(scope: !4048, file: !1150, discriminator: 4)
!4052 = !DILocation(line: 535, column: 103, scope: !4048)
!4053 = !DILocation(line: 535, column: 114, scope: !4054)
!4054 = !DILexicalBlockFile(scope: !4043, file: !1150, discriminator: 3)
!4055 = !DILocation(line: 536, column: 9, scope: !3812)
!4056 = !DILocation(line: 541, column: 13, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !3812, file: !1150, line: 541, column: 13)
!4058 = !DILocation(line: 541, column: 16, scope: !4057)
!4059 = !DILocation(line: 541, column: 21, scope: !4057)
!4060 = !DILocation(line: 541, column: 13, scope: !3812)
!4061 = !DILocation(line: 541, column: 47, scope: !4062)
!4062 = !DILexicalBlockFile(scope: !4057, file: !1150, discriminator: 1)
!4063 = !DILocation(line: 541, column: 50, scope: !4062)
!4064 = !DILocation(line: 541, column: 27, scope: !4062)
!4065 = !DILocation(line: 541, column: 30, scope: !4062)
!4066 = !DILocation(line: 541, column: 37, scope: !4062)
!4067 = !DILocation(line: 541, column: 45, scope: !4062)
!4068 = !DILocation(line: 543, column: 13, scope: !4057)
!4069 = !DILocation(line: 544, column: 33, scope: !3812)
!4070 = !DILocation(line: 544, column: 36, scope: !3812)
!4071 = !DILocation(line: 544, column: 9, scope: !3812)
!4072 = !DILocation(line: 544, column: 12, scope: !3812)
!4073 = !DILocation(line: 544, column: 19, scope: !3812)
!4074 = !DILocation(line: 544, column: 31, scope: !3812)
!4075 = !DILocation(line: 545, column: 9, scope: !3812)
!4076 = !DILocation(line: 549, column: 13, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !3812, file: !1150, line: 549, column: 13)
!4078 = !DILocation(line: 549, column: 16, scope: !4077)
!4079 = !DILocation(line: 549, column: 21, scope: !4077)
!4080 = !DILocation(line: 549, column: 13, scope: !3812)
!4081 = !DILocation(line: 549, column: 47, scope: !4082)
!4082 = !DILexicalBlockFile(scope: !4077, file: !1150, discriminator: 1)
!4083 = !DILocation(line: 549, column: 50, scope: !4082)
!4084 = !DILocation(line: 549, column: 27, scope: !4082)
!4085 = !DILocation(line: 549, column: 30, scope: !4082)
!4086 = !DILocation(line: 549, column: 37, scope: !4082)
!4087 = !DILocation(line: 549, column: 45, scope: !4082)
!4088 = !DILocation(line: 551, column: 13, scope: !4077)
!4089 = !DILocation(line: 552, column: 33, scope: !3812)
!4090 = !DILocation(line: 552, column: 36, scope: !3812)
!4091 = !DILocation(line: 552, column: 9, scope: !3812)
!4092 = !DILocation(line: 552, column: 12, scope: !3812)
!4093 = !DILocation(line: 552, column: 19, scope: !3812)
!4094 = !DILocation(line: 552, column: 31, scope: !3812)
!4095 = !DILocation(line: 553, column: 9, scope: !3812)
!4096 = !DILocation(line: 563, column: 12, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !3812, file: !1150, line: 563, column: 12)
!4098 = !DILocation(line: 563, column: 15, scope: !4097)
!4099 = !DILocation(line: 563, column: 20, scope: !4097)
!4100 = !DILocation(line: 563, column: 12, scope: !3812)
!4101 = !DILocation(line: 564, column: 13, scope: !4097)
!4102 = !DILocation(line: 564, column: 16, scope: !4097)
!4103 = !DILocation(line: 564, column: 23, scope: !4097)
!4104 = !DILocation(line: 564, column: 31, scope: !4097)
!4105 = !DILocation(line: 566, column: 13, scope: !4097)
!4106 = !DILocation(line: 566, column: 16, scope: !4097)
!4107 = !DILocation(line: 566, column: 23, scope: !4097)
!4108 = !DILocation(line: 566, column: 31, scope: !4097)
!4109 = !DILocation(line: 567, column: 9, scope: !3812)
!4110 = !DILocation(line: 573, column: 13, scope: !4111)
!4111 = distinct !DILexicalBlock(scope: !3812, file: !1150, line: 573, column: 13)
!4112 = !DILocation(line: 573, column: 16, scope: !4111)
!4113 = !DILocation(line: 573, column: 32, scope: !4111)
!4114 = !DILocation(line: 573, column: 39, scope: !4111)
!4115 = !DILocation(line: 573, column: 42, scope: !4116)
!4116 = !DILexicalBlockFile(scope: !4111, file: !1150, discriminator: 1)
!4117 = !DILocation(line: 573, column: 45, scope: !4116)
!4118 = !DILocation(line: 573, column: 61, scope: !4116)
!4119 = !DILocation(line: 573, column: 68, scope: !4116)
!4120 = !DILocation(line: 573, column: 71, scope: !4121)
!4121 = !DILexicalBlockFile(scope: !4111, file: !1150, discriminator: 2)
!4122 = !DILocation(line: 573, column: 74, scope: !4121)
!4123 = !DILocation(line: 573, column: 90, scope: !4121)
!4124 = !DILocation(line: 573, column: 13, scope: !4121)
!4125 = !DILocation(line: 574, column: 17, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4127, file: !1150, line: 574, column: 17)
!4127 = distinct !DILexicalBlock(scope: !4111, file: !1150, line: 573, column: 98)
!4128 = !DILocation(line: 574, column: 20, scope: !4126)
!4129 = !DILocation(line: 574, column: 25, scope: !4126)
!4130 = !DILocation(line: 574, column: 17, scope: !4127)
!4131 = !DILocation(line: 574, column: 31, scope: !4132)
!4132 = !DILexicalBlockFile(scope: !4126, file: !1150, discriminator: 1)
!4133 = !DILocation(line: 574, column: 34, scope: !4132)
!4134 = !DILocation(line: 574, column: 41, scope: !4132)
!4135 = !DILocation(line: 574, column: 49, scope: !4132)
!4136 = !DILocation(line: 576, column: 17, scope: !4126)
!4137 = !DILocation(line: 577, column: 31, scope: !4127)
!4138 = !DILocation(line: 577, column: 34, scope: !4127)
!4139 = !DILocation(line: 577, column: 47, scope: !4127)
!4140 = !DILocation(line: 577, column: 13, scope: !4127)
!4141 = !DILocation(line: 577, column: 16, scope: !4127)
!4142 = !DILocation(line: 577, column: 29, scope: !4127)
!4143 = !DILocation(line: 578, column: 9, scope: !4127)
!4144 = !DILocation(line: 579, column: 17, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4146, file: !1150, line: 579, column: 17)
!4146 = distinct !DILexicalBlock(scope: !4111, file: !1150, line: 578, column: 16)
!4147 = !DILocation(line: 579, column: 28, scope: !4145)
!4148 = !DILocation(line: 579, column: 17, scope: !4146)
!4149 = !DILocation(line: 580, column: 35, scope: !4145)
!4150 = !DILocation(line: 580, column: 38, scope: !4145)
!4151 = !DILocation(line: 580, column: 51, scope: !4145)
!4152 = !DILocation(line: 580, column: 17, scope: !4145)
!4153 = !DILocation(line: 580, column: 20, scope: !4145)
!4154 = !DILocation(line: 580, column: 33, scope: !4145)
!4155 = !DILocation(line: 581, column: 17, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !4146, file: !1150, line: 581, column: 17)
!4157 = !DILocation(line: 581, column: 20, scope: !4156)
!4158 = !DILocation(line: 581, column: 25, scope: !4156)
!4159 = !DILocation(line: 581, column: 17, scope: !4146)
!4160 = !DILocation(line: 581, column: 51, scope: !4161)
!4161 = !DILexicalBlockFile(scope: !4156, file: !1150, discriminator: 1)
!4162 = !DILocation(line: 581, column: 54, scope: !4161)
!4163 = !DILocation(line: 581, column: 31, scope: !4161)
!4164 = !DILocation(line: 581, column: 34, scope: !4161)
!4165 = !DILocation(line: 581, column: 41, scope: !4161)
!4166 = !DILocation(line: 581, column: 49, scope: !4161)
!4167 = !DILocation(line: 583, column: 17, scope: !4156)
!4168 = !DILocation(line: 584, column: 37, scope: !4146)
!4169 = !DILocation(line: 584, column: 40, scope: !4146)
!4170 = !DILocation(line: 584, column: 13, scope: !4146)
!4171 = !DILocation(line: 584, column: 16, scope: !4146)
!4172 = !DILocation(line: 584, column: 23, scope: !4146)
!4173 = !DILocation(line: 584, column: 35, scope: !4146)
!4174 = !DILocation(line: 586, column: 9, scope: !3812)
!4175 = !DILocation(line: 588, column: 13, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !3812, file: !1150, line: 588, column: 13)
!4177 = !DILocation(line: 588, column: 16, scope: !4176)
!4178 = !DILocation(line: 588, column: 32, scope: !4176)
!4179 = !DILocation(line: 588, column: 39, scope: !4176)
!4180 = !DILocation(line: 588, column: 42, scope: !4181)
!4181 = !DILexicalBlockFile(scope: !4176, file: !1150, discriminator: 1)
!4182 = !DILocation(line: 588, column: 45, scope: !4181)
!4183 = !DILocation(line: 588, column: 61, scope: !4181)
!4184 = !DILocation(line: 588, column: 68, scope: !4181)
!4185 = !DILocation(line: 588, column: 71, scope: !4186)
!4186 = !DILexicalBlockFile(scope: !4176, file: !1150, discriminator: 2)
!4187 = !DILocation(line: 588, column: 74, scope: !4186)
!4188 = !DILocation(line: 588, column: 90, scope: !4186)
!4189 = !DILocation(line: 588, column: 13, scope: !4186)
!4190 = !DILocation(line: 589, column: 17, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4192, file: !1150, line: 589, column: 17)
!4192 = distinct !DILexicalBlock(scope: !4176, file: !1150, line: 588, column: 98)
!4193 = !DILocation(line: 589, column: 20, scope: !4191)
!4194 = !DILocation(line: 589, column: 25, scope: !4191)
!4195 = !DILocation(line: 589, column: 17, scope: !4192)
!4196 = !DILocation(line: 589, column: 31, scope: !4197)
!4197 = !DILexicalBlockFile(scope: !4191, file: !1150, discriminator: 1)
!4198 = !DILocation(line: 589, column: 34, scope: !4197)
!4199 = !DILocation(line: 589, column: 41, scope: !4197)
!4200 = !DILocation(line: 589, column: 49, scope: !4197)
!4201 = !DILocation(line: 591, column: 17, scope: !4191)
!4202 = !DILocation(line: 592, column: 31, scope: !4192)
!4203 = !DILocation(line: 592, column: 34, scope: !4192)
!4204 = !DILocation(line: 592, column: 47, scope: !4192)
!4205 = !DILocation(line: 592, column: 13, scope: !4192)
!4206 = !DILocation(line: 592, column: 16, scope: !4192)
!4207 = !DILocation(line: 592, column: 29, scope: !4192)
!4208 = !DILocation(line: 593, column: 9, scope: !4192)
!4209 = !DILocation(line: 594, column: 17, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !4211, file: !1150, line: 594, column: 17)
!4211 = distinct !DILexicalBlock(scope: !4176, file: !1150, line: 593, column: 16)
!4212 = !DILocation(line: 594, column: 20, scope: !4210)
!4213 = !DILocation(line: 594, column: 25, scope: !4210)
!4214 = !DILocation(line: 594, column: 17, scope: !4211)
!4215 = !DILocation(line: 594, column: 51, scope: !4216)
!4216 = !DILexicalBlockFile(scope: !4210, file: !1150, discriminator: 1)
!4217 = !DILocation(line: 594, column: 54, scope: !4216)
!4218 = !DILocation(line: 594, column: 31, scope: !4216)
!4219 = !DILocation(line: 594, column: 34, scope: !4216)
!4220 = !DILocation(line: 594, column: 41, scope: !4216)
!4221 = !DILocation(line: 594, column: 49, scope: !4216)
!4222 = !DILocation(line: 595, column: 18, scope: !4210)
!4223 = !DILocation(line: 595, column: 21, scope: !4210)
!4224 = !DILocation(line: 595, column: 28, scope: !4210)
!4225 = !DILocation(line: 595, column: 36, scope: !4210)
!4226 = !DILocation(line: 596, column: 37, scope: !4211)
!4227 = !DILocation(line: 596, column: 40, scope: !4211)
!4228 = !DILocation(line: 596, column: 13, scope: !4211)
!4229 = !DILocation(line: 596, column: 16, scope: !4211)
!4230 = !DILocation(line: 596, column: 23, scope: !4211)
!4231 = !DILocation(line: 596, column: 35, scope: !4211)
!4232 = !DILocation(line: 598, column: 9, scope: !3812)
!4233 = !DILocation(line: 600, column: 13, scope: !4234)
!4234 = distinct !DILexicalBlock(scope: !3812, file: !1150, line: 600, column: 13)
!4235 = !DILocation(line: 600, column: 16, scope: !4234)
!4236 = !DILocation(line: 600, column: 21, scope: !4234)
!4237 = !DILocation(line: 600, column: 13, scope: !3812)
!4238 = !DILocation(line: 601, column: 13, scope: !4234)
!4239 = !DILocation(line: 602, column: 29, scope: !3812)
!4240 = !DILocation(line: 602, column: 32, scope: !3812)
!4241 = !DILocation(line: 602, column: 9, scope: !3812)
!4242 = !DILocation(line: 602, column: 12, scope: !3812)
!4243 = !DILocation(line: 602, column: 19, scope: !3812)
!4244 = !DILocation(line: 602, column: 27, scope: !3812)
!4245 = !DILocation(line: 603, column: 33, scope: !3812)
!4246 = !DILocation(line: 603, column: 36, scope: !3812)
!4247 = !DILocation(line: 603, column: 9, scope: !3812)
!4248 = !DILocation(line: 603, column: 12, scope: !3812)
!4249 = !DILocation(line: 603, column: 19, scope: !3812)
!4250 = !DILocation(line: 603, column: 31, scope: !3812)
!4251 = !DILocation(line: 604, column: 27, scope: !3812)
!4252 = !DILocation(line: 604, column: 30, scope: !3812)
!4253 = !DILocation(line: 604, column: 43, scope: !3812)
!4254 = !DILocation(line: 604, column: 9, scope: !3812)
!4255 = !DILocation(line: 604, column: 12, scope: !3812)
!4256 = !DILocation(line: 604, column: 25, scope: !3812)
!4257 = !DILocation(line: 605, column: 9, scope: !3812)
!4258 = !DILocation(line: 608, column: 13, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !3812, file: !1150, line: 608, column: 13)
!4260 = !DILocation(line: 608, column: 16, scope: !4259)
!4261 = !DILocation(line: 608, column: 21, scope: !4259)
!4262 = !DILocation(line: 608, column: 13, scope: !3812)
!4263 = !DILocation(line: 608, column: 47, scope: !4264)
!4264 = !DILexicalBlockFile(scope: !4259, file: !1150, discriminator: 1)
!4265 = !DILocation(line: 608, column: 50, scope: !4264)
!4266 = !DILocation(line: 608, column: 27, scope: !4264)
!4267 = !DILocation(line: 608, column: 30, scope: !4264)
!4268 = !DILocation(line: 608, column: 37, scope: !4264)
!4269 = !DILocation(line: 608, column: 45, scope: !4264)
!4270 = !DILocation(line: 610, column: 13, scope: !4259)
!4271 = !DILocation(line: 611, column: 33, scope: !3812)
!4272 = !DILocation(line: 611, column: 36, scope: !3812)
!4273 = !DILocation(line: 611, column: 9, scope: !3812)
!4274 = !DILocation(line: 611, column: 12, scope: !3812)
!4275 = !DILocation(line: 611, column: 19, scope: !3812)
!4276 = !DILocation(line: 611, column: 31, scope: !3812)
!4277 = !DILocation(line: 612, column: 9, scope: !3812)
!4278 = !DILocation(line: 617, column: 13, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !3812, file: !1150, line: 617, column: 13)
!4280 = !DILocation(line: 617, column: 16, scope: !4279)
!4281 = !DILocation(line: 617, column: 21, scope: !4279)
!4282 = !DILocation(line: 617, column: 13, scope: !3812)
!4283 = !DILocation(line: 617, column: 47, scope: !4284)
!4284 = !DILexicalBlockFile(scope: !4279, file: !1150, discriminator: 1)
!4285 = !DILocation(line: 617, column: 50, scope: !4284)
!4286 = !DILocation(line: 617, column: 27, scope: !4284)
!4287 = !DILocation(line: 617, column: 30, scope: !4284)
!4288 = !DILocation(line: 617, column: 37, scope: !4284)
!4289 = !DILocation(line: 617, column: 45, scope: !4284)
!4290 = !DILocation(line: 618, column: 14, scope: !4279)
!4291 = !DILocation(line: 618, column: 17, scope: !4279)
!4292 = !DILocation(line: 618, column: 24, scope: !4279)
!4293 = !DILocation(line: 618, column: 32, scope: !4279)
!4294 = !DILocation(line: 619, column: 33, scope: !3812)
!4295 = !DILocation(line: 619, column: 36, scope: !3812)
!4296 = !DILocation(line: 619, column: 9, scope: !3812)
!4297 = !DILocation(line: 619, column: 12, scope: !3812)
!4298 = !DILocation(line: 619, column: 19, scope: !3812)
!4299 = !DILocation(line: 619, column: 31, scope: !3812)
!4300 = !DILocation(line: 620, column: 13, scope: !4301)
!4301 = distinct !DILexicalBlock(scope: !3812, file: !1150, line: 620, column: 13)
!4302 = !DILocation(line: 620, column: 24, scope: !4301)
!4303 = !DILocation(line: 620, column: 13, scope: !3812)
!4304 = !DILocation(line: 621, column: 17, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4306, file: !1150, line: 621, column: 17)
!4306 = distinct !DILexicalBlock(scope: !4301, file: !1150, line: 620, column: 39)
!4307 = !DILocation(line: 621, column: 20, scope: !4305)
!4308 = !DILocation(line: 621, column: 25, scope: !4305)
!4309 = !DILocation(line: 621, column: 17, scope: !4306)
!4310 = !DILocation(line: 622, column: 17, scope: !4305)
!4311 = !DILocation(line: 623, column: 31, scope: !4306)
!4312 = !DILocation(line: 623, column: 34, scope: !4306)
!4313 = !DILocation(line: 623, column: 47, scope: !4306)
!4314 = !DILocation(line: 623, column: 13, scope: !4306)
!4315 = !DILocation(line: 623, column: 16, scope: !4306)
!4316 = !DILocation(line: 623, column: 29, scope: !4306)
!4317 = !DILocation(line: 624, column: 9, scope: !4306)
!4318 = !DILocation(line: 624, column: 20, scope: !4319)
!4319 = !DILexicalBlockFile(scope: !4320, file: !1150, discriminator: 1)
!4320 = distinct !DILexicalBlock(scope: !4301, file: !1150, line: 624, column: 20)
!4321 = !DILocation(line: 624, column: 31, scope: !4319)
!4322 = !DILocation(line: 625, column: 17, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4324, file: !1150, line: 625, column: 17)
!4324 = distinct !DILexicalBlock(scope: !4320, file: !1150, line: 624, column: 46)
!4325 = !DILocation(line: 625, column: 20, scope: !4323)
!4326 = !DILocation(line: 625, column: 25, scope: !4323)
!4327 = !DILocation(line: 625, column: 17, scope: !4324)
!4328 = !DILocation(line: 626, column: 17, scope: !4323)
!4329 = !DILocation(line: 627, column: 31, scope: !4324)
!4330 = !DILocation(line: 627, column: 34, scope: !4324)
!4331 = !DILocation(line: 627, column: 47, scope: !4324)
!4332 = !DILocation(line: 627, column: 13, scope: !4324)
!4333 = !DILocation(line: 627, column: 16, scope: !4324)
!4334 = !DILocation(line: 627, column: 29, scope: !4324)
!4335 = !DILocation(line: 628, column: 9, scope: !4324)
!4336 = !DILocation(line: 628, column: 20, scope: !4337)
!4337 = !DILexicalBlockFile(scope: !4338, file: !1150, discriminator: 1)
!4338 = distinct !DILexicalBlock(scope: !4320, file: !1150, line: 628, column: 20)
!4339 = !DILocation(line: 628, column: 31, scope: !4337)
!4340 = !DILocation(line: 629, column: 17, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !4342, file: !1150, line: 629, column: 17)
!4342 = distinct !DILexicalBlock(scope: !4338, file: !1150, line: 628, column: 46)
!4343 = !DILocation(line: 629, column: 20, scope: !4341)
!4344 = !DILocation(line: 629, column: 25, scope: !4341)
!4345 = !DILocation(line: 629, column: 17, scope: !4342)
!4346 = !DILocation(line: 630, column: 17, scope: !4341)
!4347 = !DILocation(line: 631, column: 31, scope: !4342)
!4348 = !DILocation(line: 631, column: 34, scope: !4342)
!4349 = !DILocation(line: 631, column: 47, scope: !4342)
!4350 = !DILocation(line: 631, column: 13, scope: !4342)
!4351 = !DILocation(line: 631, column: 16, scope: !4342)
!4352 = !DILocation(line: 631, column: 29, scope: !4342)
!4353 = !DILocation(line: 632, column: 9, scope: !4342)
!4354 = !DILocation(line: 633, column: 9, scope: !3812)
!4355 = !DILocation(line: 635, column: 13, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !3812, file: !1150, line: 635, column: 13)
!4357 = !DILocation(line: 635, column: 16, scope: !4356)
!4358 = !DILocation(line: 635, column: 21, scope: !4356)
!4359 = !DILocation(line: 635, column: 13, scope: !3812)
!4360 = !DILocation(line: 635, column: 47, scope: !4361)
!4361 = !DILexicalBlockFile(scope: !4356, file: !1150, discriminator: 1)
!4362 = !DILocation(line: 635, column: 50, scope: !4361)
!4363 = !DILocation(line: 635, column: 27, scope: !4361)
!4364 = !DILocation(line: 635, column: 30, scope: !4361)
!4365 = !DILocation(line: 635, column: 37, scope: !4361)
!4366 = !DILocation(line: 635, column: 45, scope: !4361)
!4367 = !DILocation(line: 637, column: 13, scope: !4356)
!4368 = !DILocation(line: 638, column: 33, scope: !3812)
!4369 = !DILocation(line: 638, column: 36, scope: !3812)
!4370 = !DILocation(line: 638, column: 9, scope: !3812)
!4371 = !DILocation(line: 638, column: 12, scope: !3812)
!4372 = !DILocation(line: 638, column: 19, scope: !3812)
!4373 = !DILocation(line: 638, column: 31, scope: !3812)
!4374 = !DILocation(line: 639, column: 9, scope: !3812)
!4375 = !DILocation(line: 639, column: 9, scope: !4376)
!4376 = !DILexicalBlockFile(scope: !3812, file: !1150, discriminator: 1)
!4377 = !DILocation(line: 642, column: 39, scope: !3812)
!4378 = !DILocation(line: 642, column: 42, scope: !3812)
!4379 = !DILocation(line: 642, column: 78, scope: !3812)
!4380 = !DILocation(line: 642, column: 90, scope: !3812)
!4381 = !DILocation(line: 642, column: 93, scope: !3812)
!4382 = !DILocation(line: 642, column: 9, scope: !3812)
!4383 = !DILocation(line: 643, column: 16, scope: !3812)
!4384 = !DILocation(line: 643, column: 19, scope: !3812)
!4385 = !DILocation(line: 643, column: 9, scope: !3812)
!4386 = !DILocation(line: 644, column: 16, scope: !3812)
!4387 = !DILocation(line: 644, column: 19, scope: !3812)
!4388 = !DILocation(line: 644, column: 9, scope: !3812)
!4389 = !DILocation(line: 645, column: 9, scope: !3812)
!4390 = !DILocation(line: 647, column: 53, scope: !3045)
!4391 = !DILocation(line: 647, column: 56, scope: !3045)
!4392 = !DILocation(line: 647, column: 69, scope: !3045)
!4393 = !DILocation(line: 647, column: 10, scope: !3045)
!4394 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !3047)
!4395 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !3047)
!4396 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !3047)
!4397 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !3047)
!4398 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !3047)
!4399 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !3047)
!4400 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !3047)
!4401 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !3047)
!4402 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !3047)
!4403 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !3047)
!4404 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !3047)
!4405 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !3047)
!4406 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !3047)
!4407 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !3047)
!4408 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !3047)
!4409 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !3047)
!4410 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !3047)
!4411 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !3047)
!4412 = !DILocation(line: 647, column: 73, scope: !3045)
!4413 = !DILocation(line: 647, column: 119, scope: !3044)
!4414 = !DILocation(line: 647, column: 122, scope: !3044)
!4415 = !DILocation(line: 647, column: 135, scope: !3044)
!4416 = !DILocation(line: 647, column: 76, scope: !3044)
!4417 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !3043)
!4418 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !3043)
!4419 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !3043)
!4420 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !3043)
!4421 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !3043)
!4422 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !3043)
!4423 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !3043)
!4424 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !3043)
!4425 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !3043)
!4426 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !3043)
!4427 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !3043)
!4428 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !3043)
!4429 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !3043)
!4430 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !3043)
!4431 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !3043)
!4432 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !3043)
!4433 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !3043)
!4434 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !3043)
!4435 = !DILocation(line: 647, column: 140, scope: !3044)
!4436 = !DILocation(line: 647, column: 143, scope: !4437)
!4437 = !DILexicalBlockFile(scope: !3045, file: !1150, discriminator: 2)
!4438 = !DILocation(line: 647, column: 146, scope: !4437)
!4439 = !DILocation(line: 647, column: 153, scope: !4437)
!4440 = !DILocation(line: 647, column: 9, scope: !4437)
!4441 = !DILocation(line: 648, column: 39, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !3045, file: !1150, line: 647, column: 161)
!4443 = !DILocation(line: 648, column: 42, scope: !4442)
!4444 = !DILocation(line: 648, column: 9, scope: !4442)
!4445 = !DILocation(line: 649, column: 9, scope: !4442)
!4446 = !DILocation(line: 651, column: 53, scope: !3036)
!4447 = !DILocation(line: 651, column: 56, scope: !3036)
!4448 = !DILocation(line: 651, column: 69, scope: !3036)
!4449 = !DILocation(line: 651, column: 10, scope: !3036)
!4450 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !3035)
!4451 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !3035)
!4452 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !3035)
!4453 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !3035)
!4454 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !3035)
!4455 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !3035)
!4456 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !3035)
!4457 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !3035)
!4458 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !3035)
!4459 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !3035)
!4460 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !3035)
!4461 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !3035)
!4462 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !3035)
!4463 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !3035)
!4464 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !3035)
!4465 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !3035)
!4466 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !3035)
!4467 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !3035)
!4468 = !DILocation(line: 651, column: 73, scope: !3036)
!4469 = !DILocation(line: 651, column: 119, scope: !3041)
!4470 = !DILocation(line: 651, column: 122, scope: !3041)
!4471 = !DILocation(line: 651, column: 135, scope: !3041)
!4472 = !DILocation(line: 651, column: 76, scope: !3041)
!4473 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !3040)
!4474 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !3040)
!4475 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !3040)
!4476 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !3040)
!4477 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !3040)
!4478 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !3040)
!4479 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !3040)
!4480 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !3040)
!4481 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !3040)
!4482 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !3040)
!4483 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !3040)
!4484 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !3040)
!4485 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !3040)
!4486 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !3040)
!4487 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !3040)
!4488 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !3040)
!4489 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !3040)
!4490 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !3040)
!4491 = !DILocation(line: 651, column: 140, scope: !3041)
!4492 = !DILocation(line: 651, column: 143, scope: !4493)
!4493 = !DILexicalBlockFile(scope: !3036, file: !1150, discriminator: 2)
!4494 = !DILocation(line: 651, column: 146, scope: !4493)
!4495 = !DILocation(line: 651, column: 158, scope: !4493)
!4496 = !DILocation(line: 651, column: 161, scope: !4497)
!4497 = !DILexicalBlockFile(scope: !3036, file: !1150, discriminator: 3)
!4498 = !DILocation(line: 651, column: 164, scope: !4497)
!4499 = !DILocation(line: 651, column: 171, scope: !4497)
!4500 = !DILocation(line: 651, column: 179, scope: !4497)
!4501 = !DILocation(line: 651, column: 9, scope: !4497)
!4502 = !DILocation(line: 652, column: 39, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !3036, file: !1150, line: 651, column: 199)
!4504 = !DILocation(line: 652, column: 42, scope: !4503)
!4505 = !DILocation(line: 652, column: 9, scope: !4503)
!4506 = !DILocation(line: 653, column: 9, scope: !4503)
!4507 = !DILocation(line: 655, column: 9, scope: !4508)
!4508 = distinct !DILexicalBlock(scope: !3037, file: !1150, line: 655, column: 9)
!4509 = !DILocation(line: 655, column: 12, scope: !4508)
!4510 = !DILocation(line: 655, column: 9, scope: !3037)
!4511 = !DILocation(line: 656, column: 16, scope: !4512)
!4512 = distinct !DILexicalBlock(scope: !4508, file: !1150, line: 655, column: 16)
!4513 = !DILocation(line: 656, column: 19, scope: !4512)
!4514 = !DILocation(line: 656, column: 9, scope: !4512)
!4515 = !DILocation(line: 657, column: 16, scope: !4512)
!4516 = !DILocation(line: 657, column: 19, scope: !4512)
!4517 = !DILocation(line: 657, column: 9, scope: !4512)
!4518 = !DILocation(line: 658, column: 13, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4512, file: !1150, line: 658, column: 13)
!4520 = !DILocation(line: 658, column: 16, scope: !4519)
!4521 = !DILocation(line: 658, column: 30, scope: !4519)
!4522 = !DILocation(line: 658, column: 13, scope: !4512)
!4523 = !DILocation(line: 659, column: 13, scope: !4524)
!4524 = distinct !DILexicalBlock(scope: !4519, file: !1150, line: 658, column: 36)
!4525 = !DILocation(line: 659, column: 16, scope: !4524)
!4526 = !DILocation(line: 659, column: 23, scope: !4524)
!4527 = !DILocation(line: 659, column: 31, scope: !4524)
!4528 = !DILocation(line: 660, column: 9, scope: !4524)
!4529 = !DILocation(line: 660, column: 20, scope: !4530)
!4530 = !DILexicalBlockFile(scope: !4531, file: !1150, discriminator: 1)
!4531 = distinct !DILexicalBlock(scope: !4519, file: !1150, line: 660, column: 20)
!4532 = !DILocation(line: 660, column: 23, scope: !4530)
!4533 = !DILocation(line: 660, column: 37, scope: !4530)
!4534 = !DILocation(line: 661, column: 20, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4531, file: !1150, line: 660, column: 43)
!4536 = !DILocation(line: 661, column: 23, scope: !4535)
!4537 = !DILocation(line: 661, column: 75, scope: !4535)
!4538 = !DILocation(line: 661, column: 78, scope: !4535)
!4539 = !DILocation(line: 661, column: 13, scope: !4535)
!4540 = !DILocation(line: 662, column: 13, scope: !4535)
!4541 = !DILocation(line: 663, column: 20, scope: !4542)
!4542 = distinct !DILexicalBlock(scope: !4531, file: !1150, line: 663, column: 20)
!4543 = !DILocation(line: 663, column: 23, scope: !4542)
!4544 = !DILocation(line: 663, column: 37, scope: !4542)
!4545 = !DILocation(line: 663, column: 40, scope: !4546)
!4546 = !DILexicalBlockFile(scope: !4542, file: !1150, discriminator: 1)
!4547 = !DILocation(line: 663, column: 43, scope: !4546)
!4548 = !DILocation(line: 663, column: 48, scope: !4546)
!4549 = !DILocation(line: 663, column: 20, scope: !4546)
!4550 = !DILocation(line: 664, column: 13, scope: !4542)
!4551 = !DILocation(line: 664, column: 16, scope: !4542)
!4552 = !DILocation(line: 664, column: 23, scope: !4542)
!4553 = !DILocation(line: 664, column: 31, scope: !4542)
!4554 = !DILocation(line: 665, column: 18, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4542, file: !1150, line: 665, column: 18)
!4556 = !DILocation(line: 665, column: 21, scope: !4555)
!4557 = !DILocation(line: 665, column: 26, scope: !4555)
!4558 = !DILocation(line: 665, column: 18, scope: !4542)
!4559 = !DILocation(line: 666, column: 13, scope: !4555)
!4560 = !DILocation(line: 666, column: 16, scope: !4555)
!4561 = !DILocation(line: 666, column: 23, scope: !4555)
!4562 = !DILocation(line: 666, column: 31, scope: !4555)
!4563 = !DILocation(line: 668, column: 13, scope: !4555)
!4564 = !DILocation(line: 668, column: 16, scope: !4555)
!4565 = !DILocation(line: 668, column: 23, scope: !4555)
!4566 = !DILocation(line: 668, column: 31, scope: !4555)
!4567 = !DILocation(line: 669, column: 5, scope: !4512)
!4568 = !DILocation(line: 671, column: 39, scope: !3037)
!4569 = !DILocation(line: 671, column: 42, scope: !3037)
!4570 = !DILocation(line: 671, column: 49, scope: !3037)
!4571 = !DILocation(line: 671, column: 19, scope: !3037)
!4572 = !DILocation(line: 671, column: 5, scope: !3037)
!4573 = !DILocation(line: 671, column: 8, scope: !3037)
!4574 = !DILocation(line: 671, column: 17, scope: !3037)
!4575 = !DILocation(line: 672, column: 10, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !3037, file: !1150, line: 672, column: 9)
!4577 = !DILocation(line: 672, column: 13, scope: !4576)
!4578 = !DILocation(line: 672, column: 9, scope: !3037)
!4579 = !DILocation(line: 673, column: 16, scope: !4580)
!4580 = distinct !DILexicalBlock(scope: !4576, file: !1150, line: 672, column: 23)
!4581 = !DILocation(line: 673, column: 19, scope: !4580)
!4582 = !DILocation(line: 673, column: 9, scope: !4580)
!4583 = !DILocation(line: 674, column: 9, scope: !4580)
!4584 = !DILocation(line: 677, column: 9, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !3037, file: !1150, line: 677, column: 9)
!4586 = !DILocation(line: 677, column: 12, scope: !4585)
!4587 = !DILocation(line: 677, column: 19, scope: !4585)
!4588 = !DILocation(line: 677, column: 30, scope: !4585)
!4589 = !DILocation(line: 677, column: 33, scope: !4585)
!4590 = !DILocation(line: 677, column: 27, scope: !4585)
!4591 = !DILocation(line: 677, column: 52, scope: !4585)
!4592 = !DILocation(line: 677, column: 56, scope: !4593)
!4593 = !DILexicalBlockFile(scope: !4585, file: !1150, discriminator: 1)
!4594 = !DILocation(line: 677, column: 9, scope: !4593)
!4595 = !DILocation(line: 678, column: 29, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4585, file: !1150, line: 677, column: 69)
!4597 = !DILocation(line: 678, column: 32, scope: !4596)
!4598 = !DILocation(line: 678, column: 9, scope: !4596)
!4599 = !DILocation(line: 678, column: 12, scope: !4596)
!4600 = !DILocation(line: 678, column: 19, scope: !4596)
!4601 = !DILocation(line: 678, column: 27, scope: !4596)
!4602 = !DILocation(line: 679, column: 5, scope: !4596)
!4603 = !DILocalVariable(name: "pix_fmts", scope: !4604, file: !1150, line: 680, type: !4605)
!4604 = distinct !DILexicalBlock(scope: !4585, file: !1150, line: 679, column: 12)
!4605 = !DICompositeType(tag: DW_TAG_array_type, baseType: !516, size: 64, align: 32, elements: !1853)
!4606 = !DILocation(line: 680, column: 28, scope: !4604)
!4607 = !DILocation(line: 680, column: 41, scope: !4604)
!4608 = !DILocation(line: 687, column: 13, scope: !4604)
!4609 = !DILocation(line: 687, column: 16, scope: !4604)
!4610 = !DILocation(line: 687, column: 23, scope: !4604)
!4611 = !DILocation(line: 690, column: 44, scope: !4604)
!4612 = !DILocation(line: 690, column: 47, scope: !4604)
!4613 = !DILocation(line: 690, column: 54, scope: !4604)
!4614 = !DILocation(line: 690, column: 30, scope: !4604)
!4615 = !DILocation(line: 690, column: 9, scope: !4604)
!4616 = !DILocation(line: 690, column: 12, scope: !4604)
!4617 = !DILocation(line: 690, column: 28, scope: !4604)
!4618 = !DILocation(line: 691, column: 13, scope: !4619)
!4619 = distinct !DILexicalBlock(scope: !4604, file: !1150, line: 691, column: 13)
!4620 = !DILocation(line: 691, column: 16, scope: !4619)
!4621 = !DILocation(line: 691, column: 32, scope: !4619)
!4622 = !DILocation(line: 691, column: 13, scope: !4604)
!4623 = !DILocation(line: 692, column: 13, scope: !4619)
!4624 = !DILocation(line: 694, column: 33, scope: !4604)
!4625 = !DILocation(line: 694, column: 36, scope: !4604)
!4626 = !DILocation(line: 694, column: 43, scope: !4604)
!4627 = !DILocation(line: 694, column: 9, scope: !4604)
!4628 = !DILocation(line: 694, column: 12, scope: !4604)
!4629 = !DILocation(line: 694, column: 31, scope: !4604)
!4630 = !DILocation(line: 695, column: 29, scope: !4604)
!4631 = !DILocation(line: 695, column: 32, scope: !4604)
!4632 = !DILocation(line: 695, column: 9, scope: !4604)
!4633 = !DILocation(line: 695, column: 12, scope: !4604)
!4634 = !DILocation(line: 695, column: 19, scope: !4604)
!4635 = !DILocation(line: 695, column: 27, scope: !4604)
!4636 = !DILocation(line: 698, column: 9, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !3037, file: !1150, line: 698, column: 9)
!4638 = !DILocation(line: 698, column: 12, scope: !4637)
!4639 = !DILocation(line: 698, column: 19, scope: !4637)
!4640 = !DILocation(line: 698, column: 30, scope: !4637)
!4641 = !DILocation(line: 698, column: 9, scope: !3037)
!4642 = !DILocation(line: 699, column: 9, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4637, file: !1150, line: 698, column: 48)
!4644 = !DILocation(line: 699, column: 12, scope: !4643)
!4645 = !DILocation(line: 699, column: 25, scope: !4643)
!4646 = !DILocation(line: 699, column: 35, scope: !4643)
!4647 = !DILocation(line: 700, column: 9, scope: !4643)
!4648 = !DILocation(line: 700, column: 12, scope: !4643)
!4649 = !DILocation(line: 700, column: 25, scope: !4643)
!4650 = !DILocation(line: 700, column: 35, scope: !4643)
!4651 = !DILocation(line: 701, column: 9, scope: !4643)
!4652 = !DILocation(line: 701, column: 12, scope: !4643)
!4653 = !DILocation(line: 701, column: 24, scope: !4643)
!4654 = !DILocation(line: 702, column: 9, scope: !4643)
!4655 = !DILocation(line: 705, column: 20, scope: !3037)
!4656 = !DILocation(line: 705, column: 23, scope: !3037)
!4657 = !DILocation(line: 705, column: 5, scope: !3037)
!4658 = !DILocation(line: 706, column: 23, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !3037, file: !1150, line: 706, column: 9)
!4660 = !DILocation(line: 706, column: 26, scope: !4659)
!4661 = !DILocation(line: 706, column: 33, scope: !4659)
!4662 = !DILocation(line: 706, column: 36, scope: !4659)
!4663 = !DILocation(line: 706, column: 9, scope: !4659)
!4664 = !DILocation(line: 706, column: 59, scope: !4659)
!4665 = !DILocation(line: 706, column: 9, scope: !3037)
!4666 = !DILocation(line: 707, column: 9, scope: !4659)
!4667 = !DILocation(line: 708, column: 5, scope: !3037)
!4668 = !DILocation(line: 708, column: 8, scope: !3037)
!4669 = !DILocation(line: 708, column: 21, scope: !3037)
!4670 = !DILocation(line: 708, column: 31, scope: !3037)
!4671 = !DILocation(line: 709, column: 5, scope: !3037)
!4672 = !DILocation(line: 709, column: 8, scope: !3037)
!4673 = !DILocation(line: 709, column: 21, scope: !3037)
!4674 = !DILocation(line: 709, column: 31, scope: !3037)
!4675 = !DILocation(line: 710, column: 5, scope: !3037)
!4676 = !DILocation(line: 710, column: 8, scope: !3037)
!4677 = !DILocation(line: 710, column: 20, scope: !3037)
!4678 = !DILocation(line: 712, column: 12, scope: !4679)
!4679 = distinct !DILexicalBlock(scope: !3037, file: !1150, line: 712, column: 5)
!4680 = !DILocation(line: 712, column: 10, scope: !4679)
!4681 = !DILocation(line: 712, column: 17, scope: !4682)
!4682 = !DILexicalBlockFile(scope: !4683, file: !1150, discriminator: 1)
!4683 = distinct !DILexicalBlock(scope: !4679, file: !1150, line: 712, column: 5)
!4684 = !DILocation(line: 712, column: 19, scope: !4682)
!4685 = !DILocation(line: 712, column: 5, scope: !4682)
!4686 = !DILocation(line: 713, column: 51, scope: !4683)
!4687 = !DILocation(line: 713, column: 26, scope: !4683)
!4688 = !DILocation(line: 713, column: 29, scope: !4683)
!4689 = !DILocation(line: 713, column: 42, scope: !4683)
!4690 = !DILocation(line: 713, column: 57, scope: !4683)
!4691 = !DILocation(line: 713, column: 60, scope: !4683)
!4692 = !DILocation(line: 713, column: 54, scope: !4683)
!4693 = !DILocation(line: 713, column: 21, scope: !4683)
!4694 = !DILocation(line: 713, column: 9, scope: !4683)
!4695 = !DILocation(line: 713, column: 12, scope: !4683)
!4696 = !DILocation(line: 713, column: 24, scope: !4683)
!4697 = !DILocation(line: 712, column: 25, scope: !4698)
!4698 = !DILexicalBlockFile(scope: !4683, file: !1150, discriminator: 2)
!4699 = !DILocation(line: 712, column: 5, scope: !4698)
!4700 = distinct !{!4700, !4701}
!4701 = !DILocation(line: 712, column: 5, scope: !3037)
!4702 = !DILocation(line: 715, column: 5, scope: !3037)
!4703 = distinct !{!4703, !4702}
!4704 = !DILocation(line: 715, column: 148, scope: !4705)
!4705 = !DILexicalBlockFile(scope: !4706, file: !1150, discriminator: 1)
!4706 = distinct !DILexicalBlock(scope: !3037, file: !1150, line: 715, column: 8)
!4707 = !DILocation(line: 721, column: 10, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !3033, file: !1150, line: 721, column: 9)
!4709 = !DILocation(line: 721, column: 13, scope: !4708)
!4710 = !DILocation(line: 721, column: 17, scope: !4708)
!4711 = !DILocation(line: 721, column: 21, scope: !4712)
!4712 = !DILexicalBlockFile(scope: !4708, file: !1150, discriminator: 1)
!4713 = !DILocation(line: 721, column: 24, scope: !4712)
!4714 = !DILocation(line: 721, column: 33, scope: !4712)
!4715 = !DILocation(line: 721, column: 37, scope: !4716)
!4716 = !DILexicalBlockFile(scope: !4708, file: !1150, discriminator: 2)
!4717 = !DILocation(line: 721, column: 40, scope: !4716)
!4718 = !DILocation(line: 721, column: 44, scope: !4716)
!4719 = !DILocation(line: 722, column: 11, scope: !4708)
!4720 = !DILocation(line: 722, column: 14, scope: !4708)
!4721 = !DILocation(line: 722, column: 18, scope: !4708)
!4722 = !DILocation(line: 722, column: 21, scope: !4712)
!4723 = !DILocation(line: 722, column: 24, scope: !4712)
!4724 = !DILocation(line: 722, column: 27, scope: !4712)
!4725 = !DILocation(line: 722, column: 30, scope: !4716)
!4726 = !DILocation(line: 722, column: 33, scope: !4716)
!4727 = !DILocation(line: 722, column: 47, scope: !4716)
!4728 = !DILocation(line: 721, column: 9, scope: !3484)
!4729 = !DILocation(line: 723, column: 16, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4708, file: !1150, line: 722, column: 53)
!4731 = !DILocation(line: 723, column: 19, scope: !4730)
!4732 = !DILocation(line: 723, column: 9, scope: !4730)
!4733 = !DILocation(line: 724, column: 9, scope: !4730)
!4734 = !DILocation(line: 728, column: 9, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !3033, file: !1150, line: 728, column: 9)
!4736 = !DILocation(line: 728, column: 12, scope: !4735)
!4737 = !DILocation(line: 728, column: 9, scope: !3033)
!4738 = !DILocalVariable(name: "bw", scope: !4739, file: !1150, line: 729, type: !1025)
!4739 = distinct !DILexicalBlock(scope: !4735, file: !1150, line: 728, column: 25)
!4740 = !DILocation(line: 729, column: 13, scope: !4739)
!4741 = !DILocation(line: 729, column: 19, scope: !4739)
!4742 = !DILocation(line: 729, column: 27, scope: !4739)
!4743 = !DILocation(line: 729, column: 30, scope: !4739)
!4744 = !DILocation(line: 729, column: 36, scope: !4739)
!4745 = !DILocation(line: 729, column: 25, scope: !4739)
!4746 = !DILocation(line: 729, column: 40, scope: !4739)
!4747 = !DILocation(line: 729, column: 48, scope: !4739)
!4748 = !DILocation(line: 729, column: 51, scope: !4739)
!4749 = !DILocation(line: 729, column: 57, scope: !4739)
!4750 = !DILocation(line: 729, column: 45, scope: !4739)
!4751 = !DILocalVariable(name: "bh", scope: !4739, file: !1150, line: 730, type: !1025)
!4752 = !DILocation(line: 730, column: 13, scope: !4739)
!4753 = !DILocation(line: 730, column: 19, scope: !4739)
!4754 = !DILocation(line: 730, column: 28, scope: !4739)
!4755 = !DILocation(line: 730, column: 31, scope: !4739)
!4756 = !DILocation(line: 730, column: 37, scope: !4739)
!4757 = !DILocation(line: 730, column: 26, scope: !4739)
!4758 = !DILocation(line: 730, column: 41, scope: !4739)
!4759 = !DILocation(line: 730, column: 49, scope: !4739)
!4760 = !DILocation(line: 730, column: 52, scope: !4739)
!4761 = !DILocation(line: 730, column: 58, scope: !4739)
!4762 = !DILocation(line: 730, column: 46, scope: !4739)
!4763 = !DILocation(line: 731, column: 16, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4739, file: !1150, line: 731, column: 9)
!4765 = !DILocation(line: 731, column: 14, scope: !4764)
!4766 = !DILocation(line: 731, column: 21, scope: !4767)
!4767 = !DILexicalBlockFile(scope: !4768, file: !1150, discriminator: 1)
!4768 = distinct !DILexicalBlock(scope: !4764, file: !1150, line: 731, column: 9)
!4769 = !DILocation(line: 731, column: 25, scope: !4767)
!4770 = !DILocation(line: 731, column: 28, scope: !4767)
!4771 = !DILocation(line: 731, column: 23, scope: !4767)
!4772 = !DILocation(line: 731, column: 9, scope: !4767)
!4773 = !DILocalVariable(name: "size", scope: !4774, file: !1150, line: 732, type: !1025)
!4774 = distinct !DILexicalBlock(scope: !4768, file: !1150, line: 731, column: 48)
!4775 = !DILocation(line: 732, column: 17, scope: !4774)
!4776 = !DILocation(line: 732, column: 24, scope: !4774)
!4777 = !DILocation(line: 732, column: 29, scope: !4774)
!4778 = !DILocation(line: 732, column: 27, scope: !4774)
!4779 = !DILocation(line: 732, column: 45, scope: !4774)
!4780 = !DILocation(line: 732, column: 34, scope: !4774)
!4781 = !DILocation(line: 732, column: 37, scope: !4774)
!4782 = !DILocation(line: 732, column: 32, scope: !4774)
!4783 = !DILocation(line: 732, column: 61, scope: !4774)
!4784 = !DILocation(line: 732, column: 50, scope: !4774)
!4785 = !DILocation(line: 732, column: 53, scope: !4774)
!4786 = !DILocation(line: 732, column: 48, scope: !4774)
!4787 = !DILocation(line: 733, column: 33, scope: !4774)
!4788 = !DILocation(line: 733, column: 23, scope: !4774)
!4789 = !DILocation(line: 733, column: 26, scope: !4774)
!4790 = !DILocation(line: 733, column: 22, scope: !4774)
!4791 = !DILocation(line: 733, column: 13, scope: !4774)
!4792 = !DILocation(line: 734, column: 35, scope: !4774)
!4793 = !DILocation(line: 734, column: 23, scope: !4774)
!4794 = !DILocation(line: 734, column: 26, scope: !4774)
!4795 = !DILocation(line: 734, column: 22, scope: !4774)
!4796 = !DILocation(line: 734, column: 13, scope: !4774)
!4797 = !DILocation(line: 735, column: 45, scope: !4774)
!4798 = !DILocation(line: 735, column: 28, scope: !4774)
!4799 = !DILocation(line: 735, column: 23, scope: !4774)
!4800 = !DILocation(line: 735, column: 13, scope: !4774)
!4801 = !DILocation(line: 735, column: 16, scope: !4774)
!4802 = !DILocation(line: 735, column: 26, scope: !4774)
!4803 = !DILocation(line: 736, column: 47, scope: !4774)
!4804 = !DILocation(line: 736, column: 30, scope: !4774)
!4805 = !DILocation(line: 736, column: 25, scope: !4774)
!4806 = !DILocation(line: 736, column: 13, scope: !4774)
!4807 = !DILocation(line: 736, column: 16, scope: !4774)
!4808 = !DILocation(line: 736, column: 28, scope: !4774)
!4809 = !DILocation(line: 737, column: 28, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4774, file: !1150, line: 737, column: 17)
!4811 = !DILocation(line: 737, column: 18, scope: !4810)
!4812 = !DILocation(line: 737, column: 21, scope: !4810)
!4813 = !DILocation(line: 737, column: 31, scope: !4810)
!4814 = !DILocation(line: 737, column: 47, scope: !4815)
!4815 = !DILexicalBlockFile(scope: !4810, file: !1150, discriminator: 1)
!4816 = !DILocation(line: 737, column: 35, scope: !4815)
!4817 = !DILocation(line: 737, column: 38, scope: !4815)
!4818 = !DILocation(line: 737, column: 17, scope: !4815)
!4819 = !DILocation(line: 738, column: 17, scope: !4810)
!4820 = !DILocation(line: 739, column: 34, scope: !4774)
!4821 = !DILocation(line: 739, column: 50, scope: !4774)
!4822 = !DILocation(line: 739, column: 39, scope: !4774)
!4823 = !DILocation(line: 739, column: 42, scope: !4774)
!4824 = !DILocation(line: 739, column: 37, scope: !4774)
!4825 = !DILocation(line: 739, column: 29, scope: !4774)
!4826 = !DILocation(line: 739, column: 13, scope: !4774)
!4827 = !DILocation(line: 739, column: 16, scope: !4774)
!4828 = !DILocation(line: 739, column: 32, scope: !4774)
!4829 = !DILocation(line: 740, column: 9, scope: !4774)
!4830 = !DILocation(line: 731, column: 44, scope: !4831)
!4831 = !DILexicalBlockFile(scope: !4768, file: !1150, discriminator: 2)
!4832 = !DILocation(line: 731, column: 9, scope: !4831)
!4833 = distinct !{!4833, !4834}
!4834 = !DILocation(line: 731, column: 9, scope: !4739)
!4835 = !DILocation(line: 741, column: 16, scope: !4739)
!4836 = !DILocation(line: 741, column: 19, scope: !4739)
!4837 = !DILocation(line: 741, column: 9, scope: !4739)
!4838 = !DILocation(line: 742, column: 5, scope: !4739)
!4839 = !DILocation(line: 744, column: 9, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !3033, file: !1150, line: 744, column: 9)
!4841 = !DILocation(line: 744, column: 12, scope: !4840)
!4842 = !DILocation(line: 744, column: 19, scope: !4840)
!4843 = !DILocation(line: 744, column: 9, scope: !3033)
!4844 = !DILocation(line: 746, column: 24, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4840, file: !1150, line: 744, column: 28)
!4846 = !DILocation(line: 746, column: 27, scope: !4845)
!4847 = !DILocation(line: 746, column: 34, scope: !4845)
!4848 = !DILocation(line: 746, column: 43, scope: !4845)
!4849 = !DILocation(line: 746, column: 13, scope: !4845)
!4850 = !DILocation(line: 745, column: 9, scope: !4845)
!4851 = !DILocation(line: 745, column: 12, scope: !4845)
!4852 = !DILocation(line: 745, column: 36, scope: !4845)
!4853 = !DILocation(line: 747, column: 14, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4845, file: !1150, line: 747, column: 13)
!4855 = !DILocation(line: 747, column: 17, scope: !4854)
!4856 = !DILocation(line: 747, column: 13, scope: !4845)
!4857 = !DILocation(line: 748, column: 13, scope: !4854)
!4858 = !DILocation(line: 750, column: 15, scope: !4845)
!4859 = !DILocation(line: 750, column: 18, scope: !4845)
!4860 = !DILocation(line: 750, column: 25, scope: !4845)
!4861 = !DILocation(line: 750, column: 34, scope: !4845)
!4862 = !DILocation(line: 750, column: 46, scope: !4845)
!4863 = !DILocation(line: 750, column: 49, scope: !4845)
!4864 = !DILocation(line: 750, column: 56, scope: !4845)
!4865 = !DILocation(line: 750, column: 59, scope: !4845)
!4866 = !DILocation(line: 751, column: 46, scope: !4845)
!4867 = !DILocation(line: 751, column: 49, scope: !4845)
!4868 = !DILocation(line: 750, column: 13, scope: !4845)
!4869 = !DILocation(line: 752, column: 13, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4845, file: !1150, line: 752, column: 13)
!4871 = !DILocation(line: 752, column: 17, scope: !4870)
!4872 = !DILocation(line: 752, column: 13, scope: !4845)
!4873 = !DILocation(line: 753, column: 20, scope: !4870)
!4874 = !DILocation(line: 753, column: 13, scope: !4870)
!4875 = !DILocation(line: 754, column: 5, scope: !4845)
!4876 = !DILocation(line: 756, column: 5, scope: !3033)
!4877 = !DILocation(line: 757, column: 1, scope: !3033)
!4878 = distinct !DISubprogram(name: "ff_mjpeg_decode_sos", scope: !1150, file: !1150, line: 1565, type: !4879, isLocal: false, isDefinition: true, scopeLine: 1567, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!4879 = !DISubroutineType(types: !4880)
!4880 = !{!1025, !1815, !1146, !1025, !1460}
!4881 = !DILocalVariable(name: "s", arg: 1, scope: !4878, file: !1150, line: 1565, type: !1815)
!4882 = !DILocation(line: 1565, column: 45, scope: !4878)
!4883 = !DILocalVariable(name: "mb_bitmask", arg: 2, scope: !4878, file: !1150, line: 1565, type: !1146)
!4884 = !DILocation(line: 1565, column: 63, scope: !4878)
!4885 = !DILocalVariable(name: "mb_bitmask_size", arg: 3, scope: !4878, file: !1150, line: 1566, type: !1025)
!4886 = !DILocation(line: 1566, column: 29, scope: !4878)
!4887 = !DILocalVariable(name: "reference", arg: 4, scope: !4878, file: !1150, line: 1566, type: !1460)
!4888 = !DILocation(line: 1566, column: 61, scope: !4878)
!4889 = !DILocalVariable(name: "len", scope: !4878, file: !1150, line: 1568, type: !1025)
!4890 = !DILocation(line: 1568, column: 9, scope: !4878)
!4891 = !DILocalVariable(name: "nb_components", scope: !4878, file: !1150, line: 1568, type: !1025)
!4892 = !DILocation(line: 1568, column: 14, scope: !4878)
!4893 = !DILocalVariable(name: "i", scope: !4878, file: !1150, line: 1568, type: !1025)
!4894 = !DILocation(line: 1568, column: 29, scope: !4878)
!4895 = !DILocalVariable(name: "h", scope: !4878, file: !1150, line: 1568, type: !1025)
!4896 = !DILocation(line: 1568, column: 32, scope: !4878)
!4897 = !DILocalVariable(name: "v", scope: !4878, file: !1150, line: 1568, type: !1025)
!4898 = !DILocation(line: 1568, column: 35, scope: !4878)
!4899 = !DILocalVariable(name: "predictor", scope: !4878, file: !1150, line: 1568, type: !1025)
!4900 = !DILocation(line: 1568, column: 38, scope: !4878)
!4901 = !DILocalVariable(name: "point_transform", scope: !4878, file: !1150, line: 1568, type: !1025)
!4902 = !DILocation(line: 1568, column: 49, scope: !4878)
!4903 = !DILocalVariable(name: "index", scope: !4878, file: !1150, line: 1569, type: !1025)
!4904 = !DILocation(line: 1569, column: 9, scope: !4878)
!4905 = !DILocalVariable(name: "id", scope: !4878, file: !1150, line: 1569, type: !1025)
!4906 = !DILocation(line: 1569, column: 16, scope: !4878)
!4907 = !DILocalVariable(name: "ret", scope: !4878, file: !1150, line: 1569, type: !1025)
!4908 = !DILocation(line: 1569, column: 20, scope: !4878)
!4909 = !DILocalVariable(name: "block_size", scope: !4878, file: !1150, line: 1570, type: !1170)
!4910 = !DILocation(line: 1570, column: 15, scope: !4878)
!4911 = !DILocation(line: 1570, column: 28, scope: !4878)
!4912 = !DILocation(line: 1570, column: 31, scope: !4878)
!4913 = !DILocalVariable(name: "ilv", scope: !4878, file: !1150, line: 1571, type: !1025)
!4914 = !DILocation(line: 1571, column: 9, scope: !4878)
!4915 = !DILocalVariable(name: "prev_shift", scope: !4878, file: !1150, line: 1571, type: !1025)
!4916 = !DILocation(line: 1571, column: 14, scope: !4878)
!4917 = !DILocation(line: 1573, column: 10, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4878, file: !1150, line: 1573, column: 9)
!4919 = !DILocation(line: 1573, column: 13, scope: !4918)
!4920 = !DILocation(line: 1573, column: 9, scope: !4878)
!4921 = !DILocation(line: 1574, column: 16, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4918, file: !1150, line: 1573, column: 26)
!4923 = !DILocation(line: 1574, column: 19, scope: !4922)
!4924 = !DILocation(line: 1574, column: 9, scope: !4922)
!4925 = !DILocation(line: 1576, column: 9, scope: !4922)
!4926 = !DILocation(line: 1579, column: 9, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4878, file: !1150, line: 1579, column: 9)
!4928 = !DILocation(line: 1579, column: 9, scope: !4878)
!4929 = !DILocation(line: 1580, column: 13, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4931, file: !1150, line: 1580, column: 13)
!4931 = distinct !DILexicalBlock(scope: !4927, file: !1150, line: 1579, column: 20)
!4932 = !DILocation(line: 1580, column: 24, scope: !4930)
!4933 = !DILocation(line: 1580, column: 33, scope: !4930)
!4934 = !DILocation(line: 1580, column: 36, scope: !4930)
!4935 = !DILocation(line: 1580, column: 49, scope: !4930)
!4936 = !DILocation(line: 1580, column: 30, scope: !4930)
!4937 = !DILocation(line: 1580, column: 55, scope: !4930)
!4938 = !DILocation(line: 1581, column: 13, scope: !4930)
!4939 = !DILocation(line: 1581, column: 24, scope: !4930)
!4940 = !DILocation(line: 1581, column: 34, scope: !4930)
!4941 = !DILocation(line: 1581, column: 37, scope: !4930)
!4942 = !DILocation(line: 1581, column: 50, scope: !4930)
!4943 = !DILocation(line: 1581, column: 31, scope: !4930)
!4944 = !DILocation(line: 1581, column: 57, scope: !4930)
!4945 = !DILocation(line: 1582, column: 13, scope: !4930)
!4946 = !DILocation(line: 1582, column: 24, scope: !4930)
!4947 = !DILocation(line: 1582, column: 34, scope: !4930)
!4948 = !DILocation(line: 1582, column: 37, scope: !4930)
!4949 = !DILocation(line: 1582, column: 50, scope: !4930)
!4950 = !DILocation(line: 1582, column: 31, scope: !4930)
!4951 = !DILocation(line: 1580, column: 13, scope: !4952)
!4952 = !DILexicalBlockFile(scope: !4931, file: !1150, discriminator: 1)
!4953 = !DILocation(line: 1583, column: 20, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4930, file: !1150, line: 1582, column: 58)
!4955 = !DILocation(line: 1583, column: 23, scope: !4954)
!4956 = !DILocation(line: 1583, column: 13, scope: !4954)
!4957 = !DILocation(line: 1584, column: 13, scope: !4954)
!4958 = !DILocation(line: 1586, column: 5, scope: !4931)
!4959 = !DILocation(line: 1589, column: 21, scope: !4878)
!4960 = !DILocation(line: 1589, column: 24, scope: !4878)
!4961 = !DILocation(line: 1589, column: 11, scope: !4878)
!4962 = !DILocation(line: 1589, column: 9, scope: !4878)
!4963 = !DILocation(line: 1590, column: 31, scope: !4878)
!4964 = !DILocation(line: 1590, column: 34, scope: !4878)
!4965 = !DILocation(line: 1590, column: 21, scope: !4878)
!4966 = !DILocation(line: 1590, column: 19, scope: !4878)
!4967 = !DILocation(line: 1591, column: 9, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4878, file: !1150, line: 1591, column: 9)
!4969 = !DILocation(line: 1591, column: 23, scope: !4968)
!4970 = !DILocation(line: 1591, column: 28, scope: !4968)
!4971 = !DILocation(line: 1591, column: 31, scope: !4972)
!4972 = !DILexicalBlockFile(scope: !4968, file: !1150, discriminator: 1)
!4973 = !DILocation(line: 1591, column: 45, scope: !4972)
!4974 = !DILocation(line: 1591, column: 9, scope: !4972)
!4975 = !DILocation(line: 1592, column: 39, scope: !4976)
!4976 = distinct !DILexicalBlock(scope: !4968, file: !1150, line: 1591, column: 50)
!4977 = !DILocation(line: 1592, column: 42, scope: !4976)
!4978 = !DILocation(line: 1594, column: 39, scope: !4976)
!4979 = !DILocation(line: 1592, column: 9, scope: !4976)
!4980 = !DILocation(line: 1595, column: 9, scope: !4976)
!4981 = !DILocation(line: 1597, column: 9, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4878, file: !1150, line: 1597, column: 9)
!4983 = !DILocation(line: 1597, column: 24, scope: !4982)
!4984 = !DILocation(line: 1597, column: 22, scope: !4982)
!4985 = !DILocation(line: 1597, column: 18, scope: !4982)
!4986 = !DILocation(line: 1597, column: 13, scope: !4982)
!4987 = !DILocation(line: 1597, column: 9, scope: !4878)
!4988 = !DILocation(line: 1598, column: 16, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4982, file: !1150, line: 1597, column: 39)
!4990 = !DILocation(line: 1598, column: 19, scope: !4989)
!4991 = !DILocation(line: 1598, column: 64, scope: !4989)
!4992 = !DILocation(line: 1598, column: 9, scope: !4989)
!4993 = !DILocation(line: 1599, column: 9, scope: !4989)
!4994 = !DILocation(line: 1601, column: 12, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4878, file: !1150, line: 1601, column: 5)
!4996 = !DILocation(line: 1601, column: 10, scope: !4995)
!4997 = !DILocation(line: 1601, column: 17, scope: !4998)
!4998 = !DILexicalBlockFile(scope: !4999, file: !1150, discriminator: 1)
!4999 = distinct !DILexicalBlock(scope: !4995, file: !1150, line: 1601, column: 5)
!5000 = !DILocation(line: 1601, column: 21, scope: !4998)
!5001 = !DILocation(line: 1601, column: 19, scope: !4998)
!5002 = !DILocation(line: 1601, column: 5, scope: !4998)
!5003 = !DILocation(line: 1602, column: 24, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !4999, file: !1150, line: 1601, column: 41)
!5005 = !DILocation(line: 1602, column: 27, scope: !5004)
!5006 = !DILocation(line: 1602, column: 14, scope: !5004)
!5007 = !DILocation(line: 1602, column: 34, scope: !5004)
!5008 = !DILocation(line: 1602, column: 12, scope: !5004)
!5009 = !DILocation(line: 1603, column: 16, scope: !5004)
!5010 = !DILocation(line: 1603, column: 19, scope: !5004)
!5011 = !DILocation(line: 1603, column: 49, scope: !5004)
!5012 = !DILocation(line: 1603, column: 9, scope: !5004)
!5013 = !DILocation(line: 1605, column: 20, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !5004, file: !1150, line: 1605, column: 9)
!5015 = !DILocation(line: 1605, column: 14, scope: !5014)
!5016 = !DILocation(line: 1605, column: 25, scope: !5017)
!5017 = !DILexicalBlockFile(scope: !5018, file: !1150, discriminator: 1)
!5018 = distinct !DILexicalBlock(scope: !5014, file: !1150, line: 1605, column: 9)
!5019 = !DILocation(line: 1605, column: 33, scope: !5017)
!5020 = !DILocation(line: 1605, column: 36, scope: !5017)
!5021 = !DILocation(line: 1605, column: 31, scope: !5017)
!5022 = !DILocation(line: 1605, column: 9, scope: !5017)
!5023 = !DILocation(line: 1606, column: 17, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5018, file: !1150, line: 1606, column: 17)
!5025 = !DILocation(line: 1606, column: 39, scope: !5024)
!5026 = !DILocation(line: 1606, column: 23, scope: !5024)
!5027 = !DILocation(line: 1606, column: 26, scope: !5024)
!5028 = !DILocation(line: 1606, column: 20, scope: !5024)
!5029 = !DILocation(line: 1606, column: 17, scope: !5018)
!5030 = !DILocation(line: 1607, column: 17, scope: !5024)
!5031 = !DILocation(line: 1606, column: 44, scope: !5032)
!5032 = !DILexicalBlockFile(scope: !5024, file: !1150, discriminator: 1)
!5033 = !DILocation(line: 1605, column: 56, scope: !5034)
!5034 = !DILexicalBlockFile(scope: !5018, file: !1150, discriminator: 2)
!5035 = !DILocation(line: 1605, column: 9, scope: !5034)
!5036 = distinct !{!5036, !5037}
!5037 = !DILocation(line: 1605, column: 9, scope: !5004)
!5038 = !DILocation(line: 1608, column: 13, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5004, file: !1150, line: 1608, column: 13)
!5040 = !DILocation(line: 1608, column: 22, scope: !5039)
!5041 = !DILocation(line: 1608, column: 25, scope: !5039)
!5042 = !DILocation(line: 1608, column: 19, scope: !5039)
!5043 = !DILocation(line: 1608, column: 13, scope: !5004)
!5044 = !DILocation(line: 1609, column: 20, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5039, file: !1150, line: 1608, column: 40)
!5046 = !DILocation(line: 1609, column: 23, scope: !5045)
!5047 = !DILocation(line: 1610, column: 65, scope: !5045)
!5048 = !DILocation(line: 1609, column: 13, scope: !5045)
!5049 = !DILocation(line: 1611, column: 13, scope: !5045)
!5050 = !DILocation(line: 1614, column: 13, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5004, file: !1150, line: 1614, column: 13)
!5052 = !DILocation(line: 1614, column: 16, scope: !5051)
!5053 = !DILocation(line: 1614, column: 23, scope: !5051)
!5054 = !DILocation(line: 1614, column: 33, scope: !5051)
!5055 = !DILocation(line: 1615, column: 13, scope: !5051)
!5056 = !DILocation(line: 1615, column: 16, scope: !5057)
!5057 = !DILexicalBlockFile(scope: !5051, file: !1150, discriminator: 1)
!5058 = !DILocation(line: 1615, column: 30, scope: !5057)
!5059 = !DILocation(line: 1615, column: 35, scope: !5057)
!5060 = !DILocation(line: 1615, column: 38, scope: !5061)
!5061 = !DILexicalBlockFile(scope: !5051, file: !1150, discriminator: 2)
!5062 = !DILocation(line: 1615, column: 41, scope: !5061)
!5063 = !DILocation(line: 1615, column: 55, scope: !5061)
!5064 = !DILocation(line: 1615, column: 60, scope: !5061)
!5065 = !DILocation(line: 1615, column: 63, scope: !5066)
!5066 = !DILexicalBlockFile(scope: !5051, file: !1150, discriminator: 3)
!5067 = !DILocation(line: 1614, column: 13, scope: !5068)
!5068 = !DILexicalBlockFile(scope: !5004, file: !1150, discriminator: 1)
!5069 = !DILocation(line: 1616, column: 25, scope: !5051)
!5070 = !DILocation(line: 1616, column: 23, scope: !5051)
!5071 = !DILocation(line: 1616, column: 19, scope: !5051)
!5072 = !DILocation(line: 1616, column: 13, scope: !5051)
!5073 = !DILocation(line: 1618, column: 45, scope: !5004)
!5074 = !DILocation(line: 1618, column: 30, scope: !5004)
!5075 = !DILocation(line: 1618, column: 33, scope: !5004)
!5076 = !DILocation(line: 1618, column: 25, scope: !5004)
!5077 = !DILocation(line: 1618, column: 9, scope: !5004)
!5078 = !DILocation(line: 1618, column: 12, scope: !5004)
!5079 = !DILocation(line: 1618, column: 28, scope: !5004)
!5080 = !DILocation(line: 1619, column: 38, scope: !5004)
!5081 = !DILocation(line: 1619, column: 27, scope: !5004)
!5082 = !DILocation(line: 1619, column: 30, scope: !5004)
!5083 = !DILocation(line: 1619, column: 58, scope: !5004)
!5084 = !DILocation(line: 1619, column: 47, scope: !5004)
!5085 = !DILocation(line: 1619, column: 50, scope: !5004)
!5086 = !DILocation(line: 1619, column: 45, scope: !5004)
!5087 = !DILocation(line: 1619, column: 22, scope: !5004)
!5088 = !DILocation(line: 1619, column: 9, scope: !5004)
!5089 = !DILocation(line: 1619, column: 12, scope: !5004)
!5090 = !DILocation(line: 1619, column: 25, scope: !5004)
!5091 = !DILocation(line: 1620, column: 37, scope: !5004)
!5092 = !DILocation(line: 1620, column: 26, scope: !5004)
!5093 = !DILocation(line: 1620, column: 29, scope: !5004)
!5094 = !DILocation(line: 1620, column: 21, scope: !5004)
!5095 = !DILocation(line: 1620, column: 9, scope: !5004)
!5096 = !DILocation(line: 1620, column: 12, scope: !5004)
!5097 = !DILocation(line: 1620, column: 24, scope: !5004)
!5098 = !DILocation(line: 1621, column: 37, scope: !5004)
!5099 = !DILocation(line: 1621, column: 26, scope: !5004)
!5100 = !DILocation(line: 1621, column: 29, scope: !5004)
!5101 = !DILocation(line: 1621, column: 21, scope: !5004)
!5102 = !DILocation(line: 1621, column: 9, scope: !5004)
!5103 = !DILocation(line: 1621, column: 12, scope: !5004)
!5104 = !DILocation(line: 1621, column: 24, scope: !5004)
!5105 = !DILocation(line: 1623, column: 13, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !5004, file: !1150, line: 1623, column: 12)
!5107 = !DILocation(line: 1623, column: 27, scope: !5106)
!5108 = !DILocation(line: 1623, column: 32, scope: !5106)
!5109 = !DILocation(line: 1623, column: 35, scope: !5110)
!5110 = !DILexicalBlockFile(scope: !5106, file: !1150, discriminator: 1)
!5111 = !DILocation(line: 1623, column: 49, scope: !5110)
!5112 = !DILocation(line: 1623, column: 55, scope: !5110)
!5113 = !DILocation(line: 1623, column: 58, scope: !5114)
!5114 = !DILexicalBlockFile(scope: !5106, file: !1150, discriminator: 2)
!5115 = !DILocation(line: 1623, column: 61, scope: !5114)
!5116 = !DILocation(line: 1623, column: 75, scope: !5114)
!5117 = !DILocation(line: 1623, column: 80, scope: !5114)
!5118 = !DILocation(line: 1623, column: 83, scope: !5119)
!5119 = !DILexicalBlockFile(scope: !5106, file: !1150, discriminator: 3)
!5120 = !DILocation(line: 1623, column: 86, scope: !5119)
!5121 = !DILocation(line: 1623, column: 93, scope: !5119)
!5122 = !DILocation(line: 1623, column: 101, scope: !5119)
!5123 = !DILocation(line: 1623, column: 12, scope: !5119)
!5124 = !DILocation(line: 1624, column: 22, scope: !5106)
!5125 = !DILocation(line: 1624, column: 27, scope: !5106)
!5126 = !DILocation(line: 1624, column: 30, scope: !5106)
!5127 = !DILocation(line: 1624, column: 19, scope: !5106)
!5128 = !DILocation(line: 1624, column: 13, scope: !5106)
!5129 = !DILocation(line: 1626, column: 28, scope: !5004)
!5130 = !DILocation(line: 1626, column: 23, scope: !5004)
!5131 = !DILocation(line: 1626, column: 9, scope: !5004)
!5132 = !DILocation(line: 1626, column: 12, scope: !5004)
!5133 = !DILocation(line: 1626, column: 26, scope: !5004)
!5134 = !DILocation(line: 1628, column: 36, scope: !5004)
!5135 = !DILocation(line: 1628, column: 39, scope: !5004)
!5136 = !DILocation(line: 1628, column: 26, scope: !5004)
!5137 = !DILocation(line: 1628, column: 21, scope: !5004)
!5138 = !DILocation(line: 1628, column: 9, scope: !5004)
!5139 = !DILocation(line: 1628, column: 12, scope: !5004)
!5140 = !DILocation(line: 1628, column: 24, scope: !5004)
!5141 = !DILocation(line: 1629, column: 36, scope: !5004)
!5142 = !DILocation(line: 1629, column: 39, scope: !5004)
!5143 = !DILocation(line: 1629, column: 26, scope: !5004)
!5144 = !DILocation(line: 1629, column: 21, scope: !5004)
!5145 = !DILocation(line: 1629, column: 9, scope: !5004)
!5146 = !DILocation(line: 1629, column: 12, scope: !5004)
!5147 = !DILocation(line: 1629, column: 24, scope: !5004)
!5148 = !DILocation(line: 1631, column: 25, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !5004, file: !1150, line: 1631, column: 13)
!5150 = !DILocation(line: 1631, column: 13, scope: !5149)
!5151 = !DILocation(line: 1631, column: 16, scope: !5149)
!5152 = !DILocation(line: 1631, column: 28, scope: !5149)
!5153 = !DILocation(line: 1631, column: 32, scope: !5149)
!5154 = !DILocation(line: 1631, column: 47, scope: !5155)
!5155 = !DILexicalBlockFile(scope: !5149, file: !1150, discriminator: 1)
!5156 = !DILocation(line: 1631, column: 35, scope: !5155)
!5157 = !DILocation(line: 1631, column: 38, scope: !5155)
!5158 = !DILocation(line: 1631, column: 50, scope: !5155)
!5159 = !DILocation(line: 1631, column: 54, scope: !5155)
!5160 = !DILocation(line: 1632, column: 25, scope: !5149)
!5161 = !DILocation(line: 1632, column: 13, scope: !5149)
!5162 = !DILocation(line: 1632, column: 16, scope: !5149)
!5163 = !DILocation(line: 1632, column: 28, scope: !5149)
!5164 = !DILocation(line: 1632, column: 33, scope: !5149)
!5165 = !DILocation(line: 1632, column: 48, scope: !5155)
!5166 = !DILocation(line: 1632, column: 36, scope: !5155)
!5167 = !DILocation(line: 1632, column: 39, scope: !5155)
!5168 = !DILocation(line: 1632, column: 51, scope: !5155)
!5169 = !DILocation(line: 1631, column: 13, scope: !5170)
!5170 = !DILexicalBlockFile(scope: !5004, file: !1150, discriminator: 2)
!5171 = !DILocation(line: 1633, column: 13, scope: !5149)
!5172 = !DILocation(line: 1634, column: 37, scope: !5173)
!5173 = distinct !DILexicalBlock(scope: !5004, file: !1150, line: 1634, column: 13)
!5174 = !DILocation(line: 1634, column: 25, scope: !5173)
!5175 = !DILocation(line: 1634, column: 28, scope: !5173)
!5176 = !DILocation(line: 1634, column: 14, scope: !5173)
!5177 = !DILocation(line: 1634, column: 17, scope: !5173)
!5178 = !DILocation(line: 1634, column: 41, scope: !5173)
!5179 = !DILocation(line: 1634, column: 47, scope: !5173)
!5180 = !DILocation(line: 1634, column: 52, scope: !5181)
!5181 = !DILexicalBlockFile(scope: !5173, file: !1150, discriminator: 1)
!5182 = !DILocation(line: 1634, column: 55, scope: !5181)
!5183 = !DILocation(line: 1634, column: 13, scope: !5181)
!5184 = !DILocation(line: 1634, column: 80, scope: !5185)
!5185 = !DILexicalBlockFile(scope: !5173, file: !1150, discriminator: 2)
!5186 = !DILocation(line: 1634, column: 83, scope: !5185)
!5187 = !DILocation(line: 1634, column: 69, scope: !5185)
!5188 = !DILocation(line: 1634, column: 72, scope: !5185)
!5189 = !DILocation(line: 1634, column: 96, scope: !5185)
!5190 = !DILocation(line: 1634, column: 52, scope: !5185)
!5191 = !DILocation(line: 1634, column: 127, scope: !5192)
!5192 = !DILexicalBlockFile(scope: !5173, file: !1150, discriminator: 3)
!5193 = !DILocation(line: 1634, column: 115, scope: !5192)
!5194 = !DILocation(line: 1634, column: 118, scope: !5192)
!5195 = !DILocation(line: 1634, column: 104, scope: !5192)
!5196 = !DILocation(line: 1634, column: 107, scope: !5192)
!5197 = !DILocation(line: 1634, column: 131, scope: !5192)
!5198 = !DILocation(line: 1634, column: 13, scope: !5192)
!5199 = !DILocation(line: 1635, column: 13, scope: !5173)
!5200 = !DILocation(line: 1636, column: 5, scope: !5004)
!5201 = !DILocation(line: 1601, column: 37, scope: !5202)
!5202 = !DILexicalBlockFile(scope: !4999, file: !1150, discriminator: 2)
!5203 = !DILocation(line: 1601, column: 5, scope: !5202)
!5204 = distinct !{!5204, !5205}
!5205 = !DILocation(line: 1601, column: 5, scope: !4878)
!5206 = !DILocation(line: 1638, column: 27, scope: !4878)
!5207 = !DILocation(line: 1638, column: 30, scope: !4878)
!5208 = !DILocation(line: 1638, column: 17, scope: !4878)
!5209 = !DILocation(line: 1638, column: 15, scope: !4878)
!5210 = !DILocation(line: 1639, column: 21, scope: !4878)
!5211 = !DILocation(line: 1639, column: 24, scope: !4878)
!5212 = !DILocation(line: 1639, column: 11, scope: !4878)
!5213 = !DILocation(line: 1639, column: 9, scope: !4878)
!5214 = !DILocation(line: 1640, column: 8, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !4878, file: !1150, line: 1640, column: 8)
!5216 = !DILocation(line: 1640, column: 11, scope: !5215)
!5217 = !DILocation(line: 1640, column: 18, scope: !5215)
!5218 = !DILocation(line: 1640, column: 73, scope: !5215)
!5219 = !DILocation(line: 1640, column: 28, scope: !5215)
!5220 = !DILocation(line: 1640, column: 8, scope: !4878)
!5221 = !DILocation(line: 1641, column: 32, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5215, file: !1150, line: 1640, column: 76)
!5223 = !DILocation(line: 1641, column: 35, scope: !5222)
!5224 = !DILocation(line: 1641, column: 22, scope: !5222)
!5225 = !DILocation(line: 1641, column: 20, scope: !5222)
!5226 = !DILocation(line: 1642, column: 37, scope: !5222)
!5227 = !DILocation(line: 1642, column: 40, scope: !5222)
!5228 = !DILocation(line: 1642, column: 27, scope: !5222)
!5229 = !DILocation(line: 1642, column: 25, scope: !5222)
!5230 = !DILocation(line: 1643, column: 5, scope: !5222)
!5231 = !DILocation(line: 1644, column: 38, scope: !5215)
!5232 = !DILocation(line: 1644, column: 20, scope: !5215)
!5233 = !DILocation(line: 1646, column: 9, scope: !5234)
!5234 = distinct !DILexicalBlock(scope: !4878, file: !1150, line: 1646, column: 9)
!5235 = !DILocation(line: 1646, column: 23, scope: !5234)
!5236 = !DILocation(line: 1646, column: 9, scope: !4878)
!5237 = !DILocation(line: 1648, column: 24, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5234, file: !1150, line: 1646, column: 28)
!5239 = !DILocation(line: 1648, column: 27, scope: !5238)
!5240 = !DILocation(line: 1648, column: 35, scope: !5238)
!5241 = !DILocation(line: 1648, column: 38, scope: !5238)
!5242 = !DILocation(line: 1648, column: 46, scope: !5238)
!5243 = !DILocation(line: 1648, column: 44, scope: !5238)
!5244 = !DILocation(line: 1648, column: 33, scope: !5238)
!5245 = !DILocation(line: 1648, column: 57, scope: !5238)
!5246 = !DILocation(line: 1648, column: 65, scope: !5238)
!5247 = !DILocation(line: 1648, column: 68, scope: !5238)
!5248 = !DILocation(line: 1648, column: 76, scope: !5238)
!5249 = !DILocation(line: 1648, column: 74, scope: !5238)
!5250 = !DILocation(line: 1648, column: 62, scope: !5238)
!5251 = !DILocation(line: 1648, column: 9, scope: !5238)
!5252 = !DILocation(line: 1648, column: 12, scope: !5238)
!5253 = !DILocation(line: 1648, column: 21, scope: !5238)
!5254 = !DILocation(line: 1649, column: 25, scope: !5238)
!5255 = !DILocation(line: 1649, column: 28, scope: !5238)
!5256 = !DILocation(line: 1649, column: 37, scope: !5238)
!5257 = !DILocation(line: 1649, column: 40, scope: !5238)
!5258 = !DILocation(line: 1649, column: 48, scope: !5238)
!5259 = !DILocation(line: 1649, column: 46, scope: !5238)
!5260 = !DILocation(line: 1649, column: 35, scope: !5238)
!5261 = !DILocation(line: 1649, column: 59, scope: !5238)
!5262 = !DILocation(line: 1649, column: 67, scope: !5238)
!5263 = !DILocation(line: 1649, column: 70, scope: !5238)
!5264 = !DILocation(line: 1649, column: 78, scope: !5238)
!5265 = !DILocation(line: 1649, column: 76, scope: !5238)
!5266 = !DILocation(line: 1649, column: 64, scope: !5238)
!5267 = !DILocation(line: 1649, column: 9, scope: !5238)
!5268 = !DILocation(line: 1649, column: 12, scope: !5238)
!5269 = !DILocation(line: 1649, column: 22, scope: !5238)
!5270 = !DILocation(line: 1650, column: 5, scope: !5238)
!5271 = !DILocation(line: 1650, column: 17, scope: !5272)
!5272 = !DILexicalBlockFile(scope: !5273, file: !1150, discriminator: 1)
!5273 = distinct !DILexicalBlock(scope: !5234, file: !1150, line: 1650, column: 16)
!5274 = !DILocation(line: 1650, column: 20, scope: !5272)
!5275 = !DILocation(line: 1650, column: 16, scope: !5272)
!5276 = !DILocation(line: 1651, column: 13, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5273, file: !1150, line: 1650, column: 24)
!5278 = !DILocation(line: 1651, column: 16, scope: !5277)
!5279 = !DILocation(line: 1651, column: 24, scope: !5277)
!5280 = !DILocation(line: 1651, column: 27, scope: !5277)
!5281 = !DILocation(line: 1651, column: 22, scope: !5277)
!5282 = !DILocation(line: 1651, column: 11, scope: !5277)
!5283 = !DILocation(line: 1652, column: 13, scope: !5277)
!5284 = !DILocation(line: 1652, column: 16, scope: !5277)
!5285 = !DILocation(line: 1652, column: 24, scope: !5277)
!5286 = !DILocation(line: 1652, column: 27, scope: !5277)
!5287 = !DILocation(line: 1652, column: 22, scope: !5277)
!5288 = !DILocation(line: 1652, column: 11, scope: !5277)
!5289 = !DILocation(line: 1653, column: 24, scope: !5277)
!5290 = !DILocation(line: 1653, column: 27, scope: !5277)
!5291 = !DILocation(line: 1653, column: 35, scope: !5277)
!5292 = !DILocation(line: 1653, column: 39, scope: !5277)
!5293 = !DILocation(line: 1653, column: 37, scope: !5277)
!5294 = !DILocation(line: 1653, column: 33, scope: !5277)
!5295 = !DILocation(line: 1653, column: 50, scope: !5277)
!5296 = !DILocation(line: 1653, column: 58, scope: !5277)
!5297 = !DILocation(line: 1653, column: 62, scope: !5277)
!5298 = !DILocation(line: 1653, column: 60, scope: !5277)
!5299 = !DILocation(line: 1653, column: 55, scope: !5277)
!5300 = !DILocation(line: 1653, column: 9, scope: !5277)
!5301 = !DILocation(line: 1653, column: 12, scope: !5277)
!5302 = !DILocation(line: 1653, column: 21, scope: !5277)
!5303 = !DILocation(line: 1654, column: 25, scope: !5277)
!5304 = !DILocation(line: 1654, column: 28, scope: !5277)
!5305 = !DILocation(line: 1654, column: 37, scope: !5277)
!5306 = !DILocation(line: 1654, column: 41, scope: !5277)
!5307 = !DILocation(line: 1654, column: 39, scope: !5277)
!5308 = !DILocation(line: 1654, column: 35, scope: !5277)
!5309 = !DILocation(line: 1654, column: 52, scope: !5277)
!5310 = !DILocation(line: 1654, column: 60, scope: !5277)
!5311 = !DILocation(line: 1654, column: 64, scope: !5277)
!5312 = !DILocation(line: 1654, column: 62, scope: !5277)
!5313 = !DILocation(line: 1654, column: 57, scope: !5277)
!5314 = !DILocation(line: 1654, column: 9, scope: !5277)
!5315 = !DILocation(line: 1654, column: 12, scope: !5277)
!5316 = !DILocation(line: 1654, column: 22, scope: !5277)
!5317 = !DILocation(line: 1655, column: 9, scope: !5277)
!5318 = !DILocation(line: 1655, column: 12, scope: !5277)
!5319 = !DILocation(line: 1655, column: 25, scope: !5277)
!5320 = !DILocation(line: 1656, column: 9, scope: !5277)
!5321 = !DILocation(line: 1656, column: 12, scope: !5277)
!5322 = !DILocation(line: 1656, column: 24, scope: !5277)
!5323 = !DILocation(line: 1657, column: 9, scope: !5277)
!5324 = !DILocation(line: 1657, column: 12, scope: !5277)
!5325 = !DILocation(line: 1657, column: 24, scope: !5277)
!5326 = !DILocation(line: 1658, column: 5, scope: !5277)
!5327 = !DILocation(line: 1660, column: 9, scope: !5328)
!5328 = distinct !DILexicalBlock(scope: !4878, file: !1150, line: 1660, column: 9)
!5329 = !DILocation(line: 1660, column: 12, scope: !5328)
!5330 = !DILocation(line: 1660, column: 19, scope: !5328)
!5331 = !DILocation(line: 1660, column: 25, scope: !5328)
!5332 = !DILocation(line: 1660, column: 9, scope: !4878)
!5333 = !DILocation(line: 1661, column: 16, scope: !5328)
!5334 = !DILocation(line: 1661, column: 19, scope: !5328)
!5335 = !DILocation(line: 1662, column: 16, scope: !5328)
!5336 = !DILocation(line: 1662, column: 19, scope: !5328)
!5337 = !DILocation(line: 1662, column: 61, scope: !5328)
!5338 = !DILocation(line: 1662, column: 64, scope: !5328)
!5339 = !DILocation(line: 1663, column: 16, scope: !5328)
!5340 = !DILocation(line: 1663, column: 27, scope: !5328)
!5341 = !DILocation(line: 1663, column: 44, scope: !5328)
!5342 = !DILocation(line: 1663, column: 49, scope: !5328)
!5343 = !DILocation(line: 1663, column: 52, scope: !5328)
!5344 = !DILocation(line: 1663, column: 58, scope: !5328)
!5345 = !DILocation(line: 1663, column: 61, scope: !5328)
!5346 = !DILocation(line: 1664, column: 16, scope: !5328)
!5347 = !DILocation(line: 1664, column: 19, scope: !5328)
!5348 = !DILocation(line: 1664, column: 16, scope: !5349)
!5349 = !DILexicalBlockFile(scope: !5328, file: !1150, discriminator: 1)
!5350 = !DILocation(line: 1664, column: 43, scope: !5351)
!5351 = !DILexicalBlockFile(scope: !5328, file: !1150, discriminator: 2)
!5352 = !DILocation(line: 1664, column: 46, scope: !5351)
!5353 = !DILocation(line: 1664, column: 16, scope: !5351)
!5354 = !DILocation(line: 1664, column: 16, scope: !5355)
!5355 = !DILexicalBlockFile(scope: !5328, file: !1150, discriminator: 3)
!5356 = !DILocation(line: 1664, column: 65, scope: !5355)
!5357 = !DILocation(line: 1661, column: 9, scope: !5349)
!5358 = !DILocation(line: 1668, column: 14, scope: !5359)
!5359 = distinct !DILexicalBlock(scope: !4878, file: !1150, line: 1668, column: 5)
!5360 = !DILocation(line: 1668, column: 17, scope: !5359)
!5361 = !DILocation(line: 1668, column: 12, scope: !5359)
!5362 = !DILocation(line: 1668, column: 10, scope: !5359)
!5363 = !DILocation(line: 1668, column: 33, scope: !5364)
!5364 = !DILexicalBlockFile(scope: !5365, file: !1150, discriminator: 1)
!5365 = distinct !DILexicalBlock(scope: !5359, file: !1150, line: 1668, column: 5)
!5366 = !DILocation(line: 1668, column: 35, scope: !5364)
!5367 = !DILocation(line: 1668, column: 5, scope: !5364)
!5368 = !DILocation(line: 1669, column: 20, scope: !5365)
!5369 = !DILocation(line: 1669, column: 23, scope: !5365)
!5370 = !DILocation(line: 1669, column: 9, scope: !5365)
!5371 = !DILocation(line: 1668, column: 41, scope: !5372)
!5372 = !DILexicalBlockFile(scope: !5365, file: !1150, discriminator: 2)
!5373 = !DILocation(line: 1668, column: 5, scope: !5372)
!5374 = distinct !{!5374, !5375}
!5375 = !DILocation(line: 1668, column: 5, scope: !4878)
!5376 = !DILocation(line: 1669, column: 28, scope: !5377)
!5377 = !DILexicalBlockFile(scope: !5359, file: !1150, discriminator: 1)
!5378 = !DILocation(line: 1672, column: 12, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !4878, file: !1150, line: 1672, column: 5)
!5380 = !DILocation(line: 1672, column: 10, scope: !5379)
!5381 = !DILocation(line: 1672, column: 17, scope: !5382)
!5382 = !DILexicalBlockFile(scope: !5383, file: !1150, discriminator: 1)
!5383 = distinct !DILexicalBlock(scope: !5379, file: !1150, line: 1672, column: 5)
!5384 = !DILocation(line: 1672, column: 21, scope: !5382)
!5385 = !DILocation(line: 1672, column: 19, scope: !5382)
!5386 = !DILocation(line: 1672, column: 5, scope: !5382)
!5387 = !DILocation(line: 1673, column: 31, scope: !5383)
!5388 = !DILocation(line: 1673, column: 34, scope: !5383)
!5389 = !DILocation(line: 1673, column: 28, scope: !5383)
!5390 = !DILocation(line: 1673, column: 20, scope: !5383)
!5391 = !DILocation(line: 1673, column: 9, scope: !5383)
!5392 = !DILocation(line: 1673, column: 12, scope: !5383)
!5393 = !DILocation(line: 1673, column: 23, scope: !5383)
!5394 = !DILocation(line: 1672, column: 37, scope: !5395)
!5395 = !DILexicalBlockFile(scope: !5383, file: !1150, discriminator: 2)
!5396 = !DILocation(line: 1672, column: 5, scope: !5395)
!5397 = distinct !{!5397, !5398}
!5398 = !DILocation(line: 1672, column: 5, scope: !4878)
!5399 = !DILocation(line: 1675, column: 9, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !4878, file: !1150, line: 1675, column: 9)
!5401 = !DILocation(line: 1675, column: 12, scope: !5400)
!5402 = !DILocation(line: 1675, column: 19, scope: !5400)
!5403 = !DILocation(line: 1675, column: 9, scope: !4878)
!5404 = !DILocalVariable(name: "bytes_to_start", scope: !5405, file: !1150, line: 1676, type: !1025)
!5405 = distinct !DILexicalBlock(scope: !5400, file: !1150, line: 1675, column: 28)
!5406 = !DILocation(line: 1676, column: 13, scope: !5405)
!5407 = !DILocation(line: 1676, column: 46, scope: !5405)
!5408 = !DILocation(line: 1676, column: 49, scope: !5405)
!5409 = !DILocation(line: 1676, column: 30, scope: !5405)
!5410 = !DILocation(line: 1676, column: 53, scope: !5405)
!5411 = !DILocation(line: 1677, column: 9, scope: !5405)
!5412 = distinct !{!5412, !5411}
!5413 = !DILocation(line: 1677, column: 20, scope: !5414)
!5414 = !DILexicalBlockFile(scope: !5415, file: !1150, discriminator: 1)
!5415 = distinct !DILexicalBlock(scope: !5416, file: !1150, line: 1677, column: 18)
!5416 = distinct !DILexicalBlock(scope: !5405, file: !1150, line: 1677, column: 12)
!5417 = !DILocation(line: 1677, column: 35, scope: !5414)
!5418 = !DILocation(line: 1677, column: 40, scope: !5414)
!5419 = !DILocation(line: 1677, column: 43, scope: !5420)
!5420 = !DILexicalBlockFile(scope: !5415, file: !1150, discriminator: 2)
!5421 = !DILocation(line: 1677, column: 46, scope: !5420)
!5422 = !DILocation(line: 1677, column: 70, scope: !5420)
!5423 = !DILocation(line: 1677, column: 67, scope: !5420)
!5424 = !DILocation(line: 1677, column: 18, scope: !5420)
!5425 = !DILocation(line: 1677, column: 89, scope: !5426)
!5426 = !DILexicalBlockFile(scope: !5427, file: !1150, discriminator: 3)
!5427 = distinct !DILexicalBlock(scope: !5415, file: !1150, line: 1677, column: 87)
!5428 = !DILocation(line: 1677, column: 12, scope: !5429)
!5429 = !DILexicalBlockFile(scope: !5426, file: !1150, discriminator: 5)
!5430 = !DILocation(line: 1677, column: 12, scope: !5426)
!5431 = !DILocation(line: 1677, column: 23, scope: !5432)
!5432 = !DILexicalBlockFile(scope: !5416, file: !1150, discriminator: 4)
!5433 = !DILocation(line: 1680, column: 15, scope: !5405)
!5434 = !DILocation(line: 1680, column: 18, scope: !5405)
!5435 = !DILocation(line: 1680, column: 25, scope: !5405)
!5436 = !DILocation(line: 1680, column: 34, scope: !5405)
!5437 = !DILocation(line: 1680, column: 47, scope: !5405)
!5438 = !DILocation(line: 1680, column: 50, scope: !5405)
!5439 = !DILocation(line: 1681, column: 47, scope: !5405)
!5440 = !DILocation(line: 1681, column: 50, scope: !5405)
!5441 = !DILocation(line: 1681, column: 68, scope: !5405)
!5442 = !DILocation(line: 1681, column: 66, scope: !5405)
!5443 = !DILocation(line: 1682, column: 47, scope: !5405)
!5444 = !DILocation(line: 1682, column: 50, scope: !5405)
!5445 = !DILocation(line: 1682, column: 73, scope: !5405)
!5446 = !DILocation(line: 1682, column: 71, scope: !5405)
!5447 = !DILocation(line: 1680, column: 13, scope: !5405)
!5448 = !DILocation(line: 1683, column: 13, scope: !5449)
!5449 = distinct !DILexicalBlock(scope: !5405, file: !1150, line: 1683, column: 13)
!5450 = !DILocation(line: 1683, column: 17, scope: !5449)
!5451 = !DILocation(line: 1683, column: 13, scope: !5405)
!5452 = !DILocation(line: 1684, column: 20, scope: !5449)
!5453 = !DILocation(line: 1684, column: 13, scope: !5449)
!5454 = !DILocation(line: 1686, column: 5, scope: !5405)
!5455 = !DILocation(line: 1686, column: 16, scope: !5456)
!5456 = !DILexicalBlockFile(scope: !5457, file: !1150, discriminator: 1)
!5457 = distinct !DILexicalBlock(scope: !5400, file: !1150, line: 1686, column: 16)
!5458 = !DILocation(line: 1686, column: 19, scope: !5456)
!5459 = !DILocation(line: 1687, column: 9, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5457, file: !1150, line: 1686, column: 29)
!5461 = distinct !{!5461, !5459}
!5462 = !DILocation(line: 1687, column: 20, scope: !5463)
!5463 = !DILexicalBlockFile(scope: !5464, file: !1150, discriminator: 1)
!5464 = distinct !DILexicalBlock(scope: !5465, file: !1150, line: 1687, column: 18)
!5465 = distinct !DILexicalBlock(scope: !5460, file: !1150, line: 1687, column: 12)
!5466 = !DILocation(line: 1687, column: 23, scope: !5463)
!5467 = !DILocation(line: 1687, column: 38, scope: !5463)
!5468 = !DILocation(line: 1687, column: 41, scope: !5463)
!5469 = !DILocation(line: 1687, column: 35, scope: !5463)
!5470 = !DILocation(line: 1687, column: 18, scope: !5463)
!5471 = !DILocation(line: 1687, column: 53, scope: !5472)
!5472 = !DILexicalBlockFile(scope: !5473, file: !1150, discriminator: 2)
!5473 = distinct !DILexicalBlock(scope: !5464, file: !1150, line: 1687, column: 51)
!5474 = !DILocation(line: 1687, column: 111, scope: !5475)
!5475 = !DILexicalBlockFile(scope: !5472, file: !1150, discriminator: 4)
!5476 = !DILocation(line: 1687, column: 111, scope: !5472)
!5477 = !DILocation(line: 1687, column: 122, scope: !5478)
!5478 = !DILexicalBlockFile(scope: !5465, file: !1150, discriminator: 3)
!5479 = !DILocation(line: 1688, column: 18, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !5460, file: !1150, line: 1688, column: 13)
!5481 = !DILocation(line: 1688, column: 21, scope: !5480)
!5482 = !DILocation(line: 1688, column: 13, scope: !5460)
!5483 = !DILocation(line: 1692, column: 49, scope: !5484)
!5484 = distinct !DILexicalBlock(scope: !5485, file: !1150, line: 1692, column: 17)
!5485 = distinct !DILexicalBlock(scope: !5480, file: !1150, line: 1688, column: 25)
!5486 = !DILocation(line: 1692, column: 52, scope: !5484)
!5487 = !DILocation(line: 1693, column: 49, scope: !5484)
!5488 = !DILocation(line: 1693, column: 66, scope: !5484)
!5489 = !DILocation(line: 1692, column: 24, scope: !5484)
!5490 = !DILocation(line: 1692, column: 22, scope: !5484)
!5491 = !DILocation(line: 1693, column: 72, scope: !5484)
!5492 = !DILocation(line: 1692, column: 17, scope: !5485)
!5493 = !DILocation(line: 1694, column: 24, scope: !5484)
!5494 = !DILocation(line: 1694, column: 17, scope: !5484)
!5495 = !DILocation(line: 1695, column: 9, scope: !5485)
!5496 = !DILocation(line: 1696, column: 17, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5498, file: !1150, line: 1696, column: 17)
!5498 = distinct !DILexicalBlock(scope: !5480, file: !1150, line: 1695, column: 16)
!5499 = !DILocation(line: 1696, column: 20, scope: !5497)
!5500 = !DILocation(line: 1696, column: 17, scope: !5498)
!5501 = !DILocation(line: 1697, column: 50, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !5503, file: !1150, line: 1697, column: 21)
!5503 = distinct !DILexicalBlock(scope: !5497, file: !1150, line: 1696, column: 25)
!5504 = !DILocation(line: 1697, column: 53, scope: !5502)
!5505 = !DILocation(line: 1697, column: 68, scope: !5502)
!5506 = !DILocation(line: 1697, column: 79, scope: !5502)
!5507 = !DILocation(line: 1697, column: 28, scope: !5502)
!5508 = !DILocation(line: 1697, column: 26, scope: !5502)
!5509 = !DILocation(line: 1697, column: 97, scope: !5502)
!5510 = !DILocation(line: 1697, column: 21, scope: !5503)
!5511 = !DILocation(line: 1698, column: 28, scope: !5502)
!5512 = !DILocation(line: 1698, column: 21, scope: !5502)
!5513 = !DILocation(line: 1699, column: 13, scope: !5503)
!5514 = !DILocation(line: 1700, column: 50, scope: !5515)
!5515 = distinct !DILexicalBlock(scope: !5516, file: !1150, line: 1700, column: 21)
!5516 = distinct !DILexicalBlock(scope: !5497, file: !1150, line: 1699, column: 20)
!5517 = !DILocation(line: 1700, column: 53, scope: !5515)
!5518 = !DILocation(line: 1701, column: 50, scope: !5515)
!5519 = !DILocation(line: 1702, column: 50, scope: !5515)
!5520 = !DILocation(line: 1700, column: 28, scope: !5515)
!5521 = !DILocation(line: 1700, column: 26, scope: !5515)
!5522 = !DILocation(line: 1702, column: 66, scope: !5515)
!5523 = !DILocation(line: 1700, column: 21, scope: !5516)
!5524 = !DILocation(line: 1703, column: 28, scope: !5515)
!5525 = !DILocation(line: 1703, column: 21, scope: !5515)
!5526 = !DILocation(line: 1706, column: 5, scope: !5460)
!5527 = !DILocation(line: 1707, column: 13, scope: !5528)
!5528 = distinct !DILexicalBlock(scope: !5529, file: !1150, line: 1707, column: 13)
!5529 = distinct !DILexicalBlock(scope: !5457, file: !1150, line: 1706, column: 12)
!5530 = !DILocation(line: 1707, column: 16, scope: !5528)
!5531 = !DILocation(line: 1707, column: 28, scope: !5528)
!5532 = !DILocation(line: 1707, column: 31, scope: !5533)
!5533 = !DILexicalBlockFile(scope: !5528, file: !1150, discriminator: 1)
!5534 = !DILocation(line: 1707, column: 13, scope: !5533)
!5535 = !DILocation(line: 1708, column: 13, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !5528, file: !1150, line: 1707, column: 42)
!5537 = distinct !{!5537, !5535}
!5538 = !DILocation(line: 1708, column: 24, scope: !5539)
!5539 = !DILexicalBlockFile(scope: !5540, file: !1150, discriminator: 1)
!5540 = distinct !DILexicalBlock(scope: !5541, file: !1150, line: 1708, column: 22)
!5541 = distinct !DILexicalBlock(scope: !5536, file: !1150, line: 1708, column: 16)
!5542 = !DILocation(line: 1708, column: 27, scope: !5539)
!5543 = !DILocation(line: 1708, column: 42, scope: !5539)
!5544 = !DILocation(line: 1708, column: 45, scope: !5539)
!5545 = !DILocation(line: 1708, column: 39, scope: !5539)
!5546 = !DILocation(line: 1708, column: 22, scope: !5539)
!5547 = !DILocation(line: 1708, column: 57, scope: !5548)
!5548 = !DILexicalBlockFile(scope: !5549, file: !1150, discriminator: 2)
!5549 = distinct !DILexicalBlock(scope: !5540, file: !1150, line: 1708, column: 55)
!5550 = !DILocation(line: 1708, column: 115, scope: !5551)
!5551 = !DILexicalBlockFile(scope: !5548, file: !1150, discriminator: 4)
!5552 = !DILocation(line: 1708, column: 115, scope: !5548)
!5553 = !DILocation(line: 1708, column: 126, scope: !5554)
!5554 = !DILexicalBlockFile(scope: !5541, file: !1150, discriminator: 3)
!5555 = !DILocation(line: 1709, column: 57, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !5536, file: !1150, line: 1709, column: 17)
!5557 = !DILocation(line: 1709, column: 60, scope: !5556)
!5558 = !DILocation(line: 1710, column: 57, scope: !5556)
!5559 = !DILocation(line: 1710, column: 62, scope: !5556)
!5560 = !DILocation(line: 1711, column: 57, scope: !5556)
!5561 = !DILocation(line: 1709, column: 24, scope: !5556)
!5562 = !DILocation(line: 1709, column: 22, scope: !5556)
!5563 = !DILocation(line: 1711, column: 75, scope: !5556)
!5564 = !DILocation(line: 1709, column: 17, scope: !5536)
!5565 = !DILocation(line: 1712, column: 24, scope: !5556)
!5566 = !DILocation(line: 1712, column: 17, scope: !5556)
!5567 = !DILocation(line: 1713, column: 9, scope: !5536)
!5568 = !DILocation(line: 1714, column: 42, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5570, file: !1150, line: 1714, column: 17)
!5570 = distinct !DILexicalBlock(scope: !5528, file: !1150, line: 1713, column: 16)
!5571 = !DILocation(line: 1714, column: 45, scope: !5569)
!5572 = !DILocation(line: 1715, column: 42, scope: !5569)
!5573 = !DILocation(line: 1715, column: 54, scope: !5569)
!5574 = !DILocation(line: 1716, column: 42, scope: !5569)
!5575 = !DILocation(line: 1716, column: 54, scope: !5569)
!5576 = !DILocation(line: 1716, column: 71, scope: !5569)
!5577 = !DILocation(line: 1714, column: 24, scope: !5569)
!5578 = !DILocation(line: 1714, column: 22, scope: !5569)
!5579 = !DILocation(line: 1716, column: 83, scope: !5569)
!5580 = !DILocation(line: 1714, column: 17, scope: !5570)
!5581 = !DILocation(line: 1717, column: 24, scope: !5569)
!5582 = !DILocation(line: 1717, column: 17, scope: !5569)
!5583 = !DILocation(line: 1721, column: 9, scope: !5584)
!5584 = distinct !DILexicalBlock(scope: !4878, file: !1150, line: 1721, column: 9)
!5585 = !DILocation(line: 1721, column: 12, scope: !5584)
!5586 = !DILocation(line: 1721, column: 23, scope: !5584)
!5587 = !DILocation(line: 1722, column: 24, scope: !5584)
!5588 = !DILocation(line: 1722, column: 27, scope: !5584)
!5589 = !DILocation(line: 1722, column: 9, scope: !5584)
!5590 = !DILocation(line: 1722, column: 31, scope: !5584)
!5591 = !DILocation(line: 1722, column: 36, scope: !5584)
!5592 = !DILocation(line: 1723, column: 20, scope: !5584)
!5593 = !DILocation(line: 1723, column: 23, scope: !5584)
!5594 = !DILocation(line: 1723, column: 9, scope: !5584)
!5595 = !DILocation(line: 1723, column: 30, scope: !5584)
!5596 = !DILocation(line: 1721, column: 9, scope: !5597)
!5597 = !DILexicalBlockFile(scope: !4878, file: !1150, discriminator: 1)
!5598 = !DILocalVariable(name: "bak", scope: !5599, file: !1150, line: 1724, type: !1824)
!5599 = distinct !DILexicalBlock(scope: !5584, file: !1150, line: 1723, column: 39)
!5600 = !DILocation(line: 1724, column: 23, scope: !5599)
!5601 = !DILocation(line: 1724, column: 29, scope: !5599)
!5602 = !DILocation(line: 1724, column: 32, scope: !5599)
!5603 = !DILocation(line: 1725, column: 9, scope: !5599)
!5604 = !DILocation(line: 1726, column: 13, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5599, file: !1150, line: 1726, column: 13)
!5606 = !DILocation(line: 1726, column: 33, scope: !5605)
!5607 = !DILocation(line: 1726, column: 13, scope: !5599)
!5608 = !DILocation(line: 1727, column: 20, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5605, file: !1150, line: 1726, column: 44)
!5610 = !DILocation(line: 1727, column: 23, scope: !5609)
!5611 = !DILocation(line: 1727, column: 13, scope: !5609)
!5612 = !DILocation(line: 1728, column: 13, scope: !5609)
!5613 = !DILocation(line: 1728, column: 16, scope: !5609)
!5614 = !DILocation(line: 1728, column: 21, scope: !5609)
!5615 = !DILocation(line: 1729, column: 24, scope: !5609)
!5616 = !DILocation(line: 1729, column: 27, scope: !5609)
!5617 = !DILocation(line: 1729, column: 13, scope: !5609)
!5618 = !DILocation(line: 1730, column: 13, scope: !5609)
!5619 = !DILocation(line: 1730, column: 16, scope: !5609)
!5620 = !DILocation(line: 1730, column: 29, scope: !5609)
!5621 = !DILocation(line: 1732, column: 13, scope: !5609)
!5622 = !DILocation(line: 1734, column: 5, scope: !5599)
!5623 = !DILocation(line: 46, column: 9, scope: !5624, inlinedAt: !5628)
!5624 = distinct !DISubprogram(name: "emms_c", scope: !5625, file: !5625, line: 37, type: !5626, isLocal: true, isDefinition: true, scopeLine: 38, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!5625 = !DIFile(filename: "./libavutil/x86/emms.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5626 = !DISubroutineType(types: !5627)
!5627 = !{null}
!5628 = distinct !DILocation(line: 1736, column: 5, scope: !4878)
!5629 = !{i32 100372}
!5630 = !DILocation(line: 1737, column: 5, scope: !4878)
!5631 = !DILocation(line: 1739, column: 12, scope: !4878)
!5632 = !DILocation(line: 1739, column: 15, scope: !4878)
!5633 = !DILocation(line: 1739, column: 5, scope: !4878)
!5634 = !DILocation(line: 1740, column: 5, scope: !4878)
!5635 = !DILocation(line: 1741, column: 1, scope: !4878)
!5636 = distinct !DISubprogram(name: "skip_bits", scope: !1825, file: !1825, line: 460, type: !5637, isLocal: true, isDefinition: true, scopeLine: 461, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!5637 = !DISubroutineType(types: !5638)
!5638 = !{null, !2362, !1025}
!5639 = !DILocalVariable(name: "s", arg: 1, scope: !5636, file: !1825, line: 460, type: !2362)
!5640 = !DILocation(line: 460, column: 45, scope: !5636)
!5641 = !DILocalVariable(name: "n", arg: 2, scope: !5636, file: !1825, line: 460, type: !1025)
!5642 = !DILocation(line: 460, column: 52, scope: !5636)
!5643 = !DILocalVariable(name: "re_index", scope: !5636, file: !1825, line: 481, type: !1024)
!5644 = !DILocation(line: 481, column: 18, scope: !5636)
!5645 = !DILocation(line: 481, column: 30, scope: !5636)
!5646 = !DILocation(line: 481, column: 34, scope: !5636)
!5647 = !DILocalVariable(name: "re_cache", scope: !5636, file: !1825, line: 481, type: !1024)
!5648 = !DILocation(line: 481, column: 78, scope: !5636)
!5649 = !DILocalVariable(name: "re_size_plus8", scope: !5636, file: !1825, line: 481, type: !1024)
!5650 = !DILocation(line: 481, column: 101, scope: !5636)
!5651 = !DILocation(line: 481, column: 118, scope: !5636)
!5652 = !DILocation(line: 481, column: 122, scope: !5636)
!5653 = !DILocation(line: 482, column: 18, scope: !5636)
!5654 = !DILocation(line: 482, column: 36, scope: !5636)
!5655 = !DILocation(line: 482, column: 48, scope: !5636)
!5656 = !DILocation(line: 482, column: 45, scope: !5636)
!5657 = !DILocation(line: 482, column: 33, scope: !5636)
!5658 = !DILocation(line: 482, column: 17, scope: !5636)
!5659 = !DILocation(line: 482, column: 55, scope: !5660)
!5660 = !DILexicalBlockFile(scope: !5636, file: !1825, discriminator: 1)
!5661 = !DILocation(line: 482, column: 67, scope: !5660)
!5662 = !DILocation(line: 482, column: 64, scope: !5660)
!5663 = !DILocation(line: 482, column: 17, scope: !5660)
!5664 = !DILocation(line: 482, column: 74, scope: !5665)
!5665 = !DILexicalBlockFile(scope: !5636, file: !1825, discriminator: 2)
!5666 = !DILocation(line: 482, column: 17, scope: !5665)
!5667 = !DILocation(line: 482, column: 17, scope: !5668)
!5668 = !DILexicalBlockFile(scope: !5636, file: !1825, discriminator: 3)
!5669 = !DILocation(line: 482, column: 14, scope: !5668)
!5670 = !DILocation(line: 483, column: 18, scope: !5636)
!5671 = !DILocation(line: 483, column: 6, scope: !5636)
!5672 = !DILocation(line: 483, column: 10, scope: !5636)
!5673 = !DILocation(line: 483, column: 16, scope: !5636)
!5674 = !DILocation(line: 485, column: 1, scope: !5636)
!5675 = distinct !DISubprogram(name: "get_bits_count", scope: !1825, file: !1825, line: 219, type: !5676, isLocal: true, isDefinition: true, scopeLine: 220, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!5676 = !DISubroutineType(types: !5677)
!5677 = !{!1025, !5678}
!5678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5679, size: 64, align: 64)
!5679 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1824)
!5680 = !DILocalVariable(name: "s", arg: 1, scope: !5675, file: !1825, line: 219, type: !5678)
!5681 = !DILocation(line: 219, column: 55, scope: !5675)
!5682 = !DILocation(line: 224, column: 12, scope: !5675)
!5683 = !DILocation(line: 224, column: 15, scope: !5675)
!5684 = !DILocation(line: 224, column: 5, scope: !5675)
!5685 = distinct !DISubprogram(name: "ljpeg_decode_rgb_scan", scope: !1150, file: !1150, line: 1042, type: !5686, isLocal: true, isDefinition: true, scopeLine: 1043, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!5686 = !DISubroutineType(types: !5687)
!5687 = !{!1025, !1815, !1025, !1025, !1025}
!5688 = !DILocalVariable(name: "s", arg: 1, scope: !5685, file: !1150, line: 1042, type: !1815)
!5689 = !DILocation(line: 1042, column: 54, scope: !5685)
!5690 = !DILocalVariable(name: "nb_components", arg: 2, scope: !5685, file: !1150, line: 1042, type: !1025)
!5691 = !DILocation(line: 1042, column: 61, scope: !5685)
!5692 = !DILocalVariable(name: "predictor", arg: 3, scope: !5685, file: !1150, line: 1042, type: !1025)
!5693 = !DILocation(line: 1042, column: 80, scope: !5685)
!5694 = !DILocalVariable(name: "point_transform", arg: 4, scope: !5685, file: !1150, line: 1042, type: !1025)
!5695 = !DILocation(line: 1042, column: 95, scope: !5685)
!5696 = !DILocalVariable(name: "i", scope: !5685, file: !1150, line: 1044, type: !1025)
!5697 = !DILocation(line: 1044, column: 9, scope: !5685)
!5698 = !DILocalVariable(name: "mb_x", scope: !5685, file: !1150, line: 1044, type: !1025)
!5699 = !DILocation(line: 1044, column: 12, scope: !5685)
!5700 = !DILocalVariable(name: "mb_y", scope: !5685, file: !1150, line: 1044, type: !1025)
!5701 = !DILocation(line: 1044, column: 18, scope: !5685)
!5702 = !DILocalVariable(name: "buffer", scope: !5685, file: !1150, line: 1045, type: !1992)
!5703 = !DILocation(line: 1045, column: 16, scope: !5685)
!5704 = !DILocalVariable(name: "left", scope: !5685, file: !1150, line: 1046, type: !1306)
!5705 = !DILocation(line: 1046, column: 9, scope: !5685)
!5706 = !DILocalVariable(name: "top", scope: !5685, file: !1150, line: 1046, type: !1306)
!5707 = !DILocation(line: 1046, column: 18, scope: !5685)
!5708 = !DILocalVariable(name: "topleft", scope: !5685, file: !1150, line: 1046, type: !1306)
!5709 = !DILocation(line: 1046, column: 26, scope: !5685)
!5710 = !DILocalVariable(name: "linesize", scope: !5685, file: !1150, line: 1047, type: !1170)
!5711 = !DILocation(line: 1047, column: 15, scope: !5685)
!5712 = !DILocation(line: 1047, column: 26, scope: !5685)
!5713 = !DILocation(line: 1047, column: 29, scope: !5685)
!5714 = !DILocalVariable(name: "mask", scope: !5685, file: !1150, line: 1048, type: !1170)
!5715 = !DILocation(line: 1048, column: 15, scope: !5685)
!5716 = !DILocation(line: 1048, column: 29, scope: !5685)
!5717 = !DILocation(line: 1048, column: 32, scope: !5685)
!5718 = !DILocation(line: 1048, column: 26, scope: !5685)
!5719 = !DILocation(line: 1048, column: 38, scope: !5685)
!5720 = !DILocation(line: 1048, column: 46, scope: !5685)
!5721 = !DILocation(line: 1048, column: 43, scope: !5685)
!5722 = !DILocalVariable(name: "resync_mb_y", scope: !5685, file: !1150, line: 1049, type: !1025)
!5723 = !DILocation(line: 1049, column: 9, scope: !5685)
!5724 = !DILocalVariable(name: "resync_mb_x", scope: !5685, file: !1150, line: 1050, type: !1025)
!5725 = !DILocation(line: 1050, column: 9, scope: !5685)
!5726 = !DILocation(line: 1052, column: 9, scope: !5727)
!5727 = distinct !DILexicalBlock(scope: !5685, file: !1150, line: 1052, column: 9)
!5728 = !DILocation(line: 1052, column: 12, scope: !5727)
!5729 = !DILocation(line: 1052, column: 26, scope: !5727)
!5730 = !DILocation(line: 1052, column: 31, scope: !5727)
!5731 = !DILocation(line: 1052, column: 34, scope: !5732)
!5732 = !DILexicalBlockFile(scope: !5727, file: !1150, discriminator: 1)
!5733 = !DILocation(line: 1052, column: 37, scope: !5732)
!5734 = !DILocation(line: 1052, column: 51, scope: !5732)
!5735 = !DILocation(line: 1052, column: 9, scope: !5732)
!5736 = !DILocation(line: 1053, column: 9, scope: !5727)
!5737 = !DILocation(line: 1054, column: 9, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !5685, file: !1150, line: 1054, column: 9)
!5739 = !DILocation(line: 1054, column: 12, scope: !5738)
!5740 = !DILocation(line: 1054, column: 18, scope: !5738)
!5741 = !DILocation(line: 1054, column: 23, scope: !5738)
!5742 = !DILocation(line: 1054, column: 26, scope: !5743)
!5743 = !DILexicalBlockFile(scope: !5738, file: !1150, discriminator: 1)
!5744 = !DILocation(line: 1054, column: 29, scope: !5743)
!5745 = !DILocation(line: 1054, column: 35, scope: !5743)
!5746 = !DILocation(line: 1054, column: 40, scope: !5743)
!5747 = !DILocation(line: 1054, column: 44, scope: !5748)
!5748 = !DILexicalBlockFile(scope: !5738, file: !1150, discriminator: 2)
!5749 = !DILocation(line: 1054, column: 47, scope: !5748)
!5750 = !DILocation(line: 1054, column: 9, scope: !5748)
!5751 = !DILocation(line: 1055, column: 9, scope: !5738)
!5752 = !DILocation(line: 1058, column: 24, scope: !5685)
!5753 = !DILocation(line: 1058, column: 27, scope: !5685)
!5754 = !DILocation(line: 1058, column: 5, scope: !5685)
!5755 = !DILocation(line: 1058, column: 8, scope: !5685)
!5756 = !DILocation(line: 1058, column: 22, scope: !5685)
!5757 = !DILocation(line: 1060, column: 21, scope: !5685)
!5758 = !DILocation(line: 1060, column: 24, scope: !5685)
!5759 = !DILocation(line: 1060, column: 20, scope: !5685)
!5760 = !DILocation(line: 1060, column: 39, scope: !5685)
!5761 = !DILocation(line: 1060, column: 42, scope: !5685)
!5762 = !DILocation(line: 1061, column: 30, scope: !5685)
!5763 = !DILocation(line: 1061, column: 33, scope: !5685)
!5764 = !DILocation(line: 1061, column: 42, scope: !5685)
!5765 = !DILocation(line: 1061, column: 20, scope: !5685)
!5766 = !DILocation(line: 1061, column: 46, scope: !5685)
!5767 = !DILocation(line: 1060, column: 5, scope: !5685)
!5768 = !DILocation(line: 1062, column: 10, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5685, file: !1150, line: 1062, column: 9)
!5770 = !DILocation(line: 1062, column: 13, scope: !5769)
!5771 = !DILocation(line: 1062, column: 9, scope: !5685)
!5772 = !DILocation(line: 1063, column: 9, scope: !5769)
!5773 = !DILocation(line: 1065, column: 14, scope: !5685)
!5774 = !DILocation(line: 1065, column: 17, scope: !5685)
!5775 = !DILocation(line: 1065, column: 12, scope: !5685)
!5776 = !DILocation(line: 1067, column: 12, scope: !5777)
!5777 = distinct !DILexicalBlock(scope: !5685, file: !1150, line: 1067, column: 5)
!5778 = !DILocation(line: 1067, column: 10, scope: !5777)
!5779 = !DILocation(line: 1067, column: 17, scope: !5780)
!5780 = !DILexicalBlockFile(scope: !5781, file: !1150, discriminator: 1)
!5781 = distinct !DILexicalBlock(scope: !5777, file: !1150, line: 1067, column: 5)
!5782 = !DILocation(line: 1067, column: 19, scope: !5780)
!5783 = !DILocation(line: 1067, column: 5, scope: !5780)
!5784 = !DILocation(line: 1068, column: 30, scope: !5781)
!5785 = !DILocation(line: 1068, column: 33, scope: !5781)
!5786 = !DILocation(line: 1068, column: 38, scope: !5781)
!5787 = !DILocation(line: 1068, column: 26, scope: !5781)
!5788 = !DILocation(line: 1068, column: 24, scope: !5781)
!5789 = !DILocation(line: 1068, column: 19, scope: !5781)
!5790 = !DILocation(line: 1068, column: 9, scope: !5781)
!5791 = !DILocation(line: 1068, column: 22, scope: !5781)
!5792 = !DILocation(line: 1067, column: 25, scope: !5793)
!5793 = !DILexicalBlockFile(scope: !5781, file: !1150, discriminator: 2)
!5794 = !DILocation(line: 1067, column: 5, scope: !5793)
!5795 = distinct !{!5795, !5796}
!5796 = !DILocation(line: 1067, column: 5, scope: !5685)
!5797 = !DILocation(line: 1070, column: 15, scope: !5798)
!5798 = distinct !DILexicalBlock(scope: !5685, file: !1150, line: 1070, column: 5)
!5799 = !DILocation(line: 1070, column: 10, scope: !5798)
!5800 = !DILocation(line: 1070, column: 20, scope: !5801)
!5801 = !DILexicalBlockFile(scope: !5802, file: !1150, discriminator: 1)
!5802 = distinct !DILexicalBlock(scope: !5798, file: !1150, line: 1070, column: 5)
!5803 = !DILocation(line: 1070, column: 27, scope: !5801)
!5804 = !DILocation(line: 1070, column: 30, scope: !5801)
!5805 = !DILocation(line: 1070, column: 25, scope: !5801)
!5806 = !DILocation(line: 1070, column: 5, scope: !5801)
!5807 = !DILocalVariable(name: "ptr", scope: !5808, file: !1150, line: 1071, type: !1030)
!5808 = distinct !DILexicalBlock(scope: !5802, file: !1150, line: 1070, column: 49)
!5809 = !DILocation(line: 1071, column: 18, scope: !5808)
!5810 = !DILocation(line: 1071, column: 24, scope: !5808)
!5811 = !DILocation(line: 1071, column: 27, scope: !5808)
!5812 = !DILocation(line: 1071, column: 40, scope: !5808)
!5813 = !DILocation(line: 1071, column: 51, scope: !5808)
!5814 = !DILocation(line: 1071, column: 62, scope: !5808)
!5815 = !DILocation(line: 1071, column: 60, scope: !5808)
!5816 = !DILocation(line: 1071, column: 48, scope: !5808)
!5817 = !DILocation(line: 1073, column: 13, scope: !5818)
!5818 = distinct !DILexicalBlock(scope: !5808, file: !1150, line: 1073, column: 13)
!5819 = !DILocation(line: 1073, column: 16, scope: !5818)
!5820 = !DILocation(line: 1073, column: 27, scope: !5818)
!5821 = !DILocation(line: 1073, column: 30, scope: !5822)
!5822 = !DILexicalBlockFile(scope: !5818, file: !1150, discriminator: 1)
!5823 = !DILocation(line: 1073, column: 33, scope: !5822)
!5824 = !DILocation(line: 1073, column: 13, scope: !5822)
!5825 = !DILocation(line: 1074, column: 20, scope: !5818)
!5826 = !DILocation(line: 1074, column: 29, scope: !5818)
!5827 = !DILocation(line: 1074, column: 17, scope: !5818)
!5828 = !DILocation(line: 1074, column: 13, scope: !5818)
!5829 = !DILocation(line: 1076, column: 16, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5808, file: !1150, line: 1076, column: 9)
!5831 = !DILocation(line: 1076, column: 14, scope: !5830)
!5832 = !DILocation(line: 1076, column: 21, scope: !5833)
!5833 = !DILexicalBlockFile(scope: !5834, file: !1150, discriminator: 1)
!5834 = distinct !DILexicalBlock(scope: !5830, file: !1150, line: 1076, column: 9)
!5835 = !DILocation(line: 1076, column: 23, scope: !5833)
!5836 = !DILocation(line: 1076, column: 9, scope: !5833)
!5837 = !DILocation(line: 1077, column: 55, scope: !5834)
!5838 = !DILocation(line: 1077, column: 45, scope: !5834)
!5839 = !DILocation(line: 1077, column: 40, scope: !5834)
!5840 = !DILocation(line: 1077, column: 32, scope: !5834)
!5841 = !DILocation(line: 1077, column: 43, scope: !5834)
!5842 = !DILocation(line: 1077, column: 27, scope: !5834)
!5843 = !DILocation(line: 1077, column: 22, scope: !5834)
!5844 = !DILocation(line: 1077, column: 30, scope: !5834)
!5845 = !DILocation(line: 1077, column: 17, scope: !5834)
!5846 = !DILocation(line: 1077, column: 13, scope: !5834)
!5847 = !DILocation(line: 1077, column: 20, scope: !5834)
!5848 = !DILocation(line: 1076, column: 29, scope: !5849)
!5849 = !DILexicalBlockFile(scope: !5834, file: !1150, discriminator: 2)
!5850 = !DILocation(line: 1076, column: 9, scope: !5849)
!5851 = distinct !{!5851, !5852}
!5852 = !DILocation(line: 1076, column: 9, scope: !5808)
!5853 = !DILocation(line: 1079, column: 19, scope: !5854)
!5854 = distinct !DILexicalBlock(scope: !5808, file: !1150, line: 1079, column: 9)
!5855 = !DILocation(line: 1079, column: 14, scope: !5854)
!5856 = !DILocation(line: 1079, column: 24, scope: !5857)
!5857 = !DILexicalBlockFile(scope: !5858, file: !1150, discriminator: 1)
!5858 = distinct !DILexicalBlock(scope: !5854, file: !1150, line: 1079, column: 9)
!5859 = !DILocation(line: 1079, column: 31, scope: !5857)
!5860 = !DILocation(line: 1079, column: 34, scope: !5857)
!5861 = !DILocation(line: 1079, column: 29, scope: !5857)
!5862 = !DILocation(line: 1079, column: 9, scope: !5857)
!5863 = !DILocalVariable(name: "modified_predictor", scope: !5864, file: !1150, line: 1080, type: !1025)
!5864 = distinct !DILexicalBlock(scope: !5858, file: !1150, line: 1079, column: 52)
!5865 = !DILocation(line: 1080, column: 17, scope: !5864)
!5866 = !DILocation(line: 1080, column: 38, scope: !5864)
!5867 = !DILocation(line: 1082, column: 32, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5864, file: !1150, line: 1082, column: 17)
!5869 = !DILocation(line: 1082, column: 35, scope: !5868)
!5870 = !DILocation(line: 1082, column: 17, scope: !5868)
!5871 = !DILocation(line: 1082, column: 39, scope: !5868)
!5872 = !DILocation(line: 1082, column: 17, scope: !5864)
!5873 = !DILocation(line: 1083, column: 24, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5868, file: !1150, line: 1082, column: 44)
!5875 = !DILocation(line: 1083, column: 27, scope: !5874)
!5876 = !DILocation(line: 1083, column: 17, scope: !5874)
!5877 = !DILocation(line: 1084, column: 17, scope: !5874)
!5878 = !DILocation(line: 1087, column: 17, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5864, file: !1150, line: 1087, column: 17)
!5880 = !DILocation(line: 1087, column: 20, scope: !5879)
!5881 = !DILocation(line: 1087, column: 37, scope: !5879)
!5882 = !DILocation(line: 1087, column: 41, scope: !5883)
!5883 = !DILexicalBlockFile(scope: !5879, file: !1150, discriminator: 1)
!5884 = !DILocation(line: 1087, column: 44, scope: !5883)
!5885 = !DILocation(line: 1087, column: 17, scope: !5883)
!5886 = !DILocation(line: 1088, column: 36, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5879, file: !1150, line: 1087, column: 58)
!5888 = !DILocation(line: 1088, column: 39, scope: !5887)
!5889 = !DILocation(line: 1088, column: 17, scope: !5887)
!5890 = !DILocation(line: 1088, column: 20, scope: !5887)
!5891 = !DILocation(line: 1088, column: 34, scope: !5887)
!5892 = !DILocation(line: 1089, column: 31, scope: !5887)
!5893 = !DILocation(line: 1089, column: 29, scope: !5887)
!5894 = !DILocation(line: 1090, column: 31, scope: !5887)
!5895 = !DILocation(line: 1090, column: 29, scope: !5887)
!5896 = !DILocation(line: 1091, column: 22, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5887, file: !1150, line: 1091, column: 17)
!5898 = !DILocation(line: 1091, column: 21, scope: !5897)
!5899 = !DILocation(line: 1091, column: 26, scope: !5900)
!5900 = !DILexicalBlockFile(scope: !5901, file: !1150, discriminator: 1)
!5901 = distinct !DILexicalBlock(scope: !5897, file: !1150, line: 1091, column: 17)
!5902 = !DILocation(line: 1091, column: 27, scope: !5900)
!5903 = !DILocation(line: 1091, column: 17, scope: !5900)
!5904 = !DILocation(line: 1092, column: 57, scope: !5901)
!5905 = !DILocation(line: 1092, column: 60, scope: !5901)
!5906 = !DILocation(line: 1092, column: 65, scope: !5901)
!5907 = !DILocation(line: 1092, column: 53, scope: !5901)
!5908 = !DILocation(line: 1092, column: 47, scope: !5901)
!5909 = !DILocation(line: 1092, column: 39, scope: !5901)
!5910 = !DILocation(line: 1092, column: 49, scope: !5901)
!5911 = !DILocation(line: 1092, column: 35, scope: !5901)
!5912 = !DILocation(line: 1092, column: 30, scope: !5901)
!5913 = !DILocation(line: 1092, column: 37, scope: !5901)
!5914 = !DILocation(line: 1092, column: 25, scope: !5901)
!5915 = !DILocation(line: 1092, column: 21, scope: !5901)
!5916 = !DILocation(line: 1092, column: 28, scope: !5901)
!5917 = !DILocation(line: 1091, column: 32, scope: !5918)
!5918 = !DILexicalBlockFile(scope: !5901, file: !1150, discriminator: 2)
!5919 = !DILocation(line: 1091, column: 17, scope: !5918)
!5920 = distinct !{!5920, !5921}
!5921 = !DILocation(line: 1091, column: 17, scope: !5887)
!5922 = !DILocation(line: 1093, column: 13, scope: !5887)
!5923 = !DILocation(line: 1094, column: 17, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5864, file: !1150, line: 1094, column: 17)
!5925 = !DILocation(line: 1094, column: 25, scope: !5924)
!5926 = !DILocation(line: 1094, column: 22, scope: !5924)
!5927 = !DILocation(line: 1094, column: 37, scope: !5924)
!5928 = !DILocation(line: 1094, column: 40, scope: !5929)
!5929 = !DILexicalBlockFile(scope: !5924, file: !1150, discriminator: 1)
!5930 = !DILocation(line: 1094, column: 48, scope: !5929)
!5931 = !DILocation(line: 1094, column: 59, scope: !5929)
!5932 = !DILocation(line: 1094, column: 45, scope: !5929)
!5933 = !DILocation(line: 1094, column: 62, scope: !5929)
!5934 = !DILocation(line: 1094, column: 65, scope: !5935)
!5935 = !DILexicalBlockFile(scope: !5924, file: !1150, discriminator: 2)
!5936 = !DILocation(line: 1094, column: 72, scope: !5935)
!5937 = !DILocation(line: 1094, column: 70, scope: !5935)
!5938 = !DILocation(line: 1094, column: 84, scope: !5935)
!5939 = !DILocation(line: 1094, column: 88, scope: !5940)
!5940 = !DILexicalBlockFile(scope: !5924, file: !1150, discriminator: 3)
!5941 = !DILocation(line: 1094, column: 17, scope: !5940)
!5942 = !DILocation(line: 1095, column: 36, scope: !5924)
!5943 = !DILocation(line: 1095, column: 17, scope: !5924)
!5944 = !DILocation(line: 1097, column: 19, scope: !5945)
!5945 = distinct !DILexicalBlock(scope: !5864, file: !1150, line: 1097, column: 13)
!5946 = !DILocation(line: 1097, column: 18, scope: !5945)
!5947 = !DILocation(line: 1097, column: 22, scope: !5948)
!5948 = !DILexicalBlockFile(scope: !5949, file: !1150, discriminator: 1)
!5949 = distinct !DILexicalBlock(scope: !5945, file: !1150, line: 1097, column: 13)
!5950 = !DILocation(line: 1097, column: 24, scope: !5948)
!5951 = !DILocation(line: 1097, column: 23, scope: !5948)
!5952 = !DILocation(line: 1097, column: 13, scope: !5948)
!5953 = !DILocalVariable(name: "pred", scope: !5954, file: !1150, line: 1098, type: !1025)
!5954 = distinct !DILexicalBlock(scope: !5949, file: !1150, line: 1097, column: 43)
!5955 = !DILocation(line: 1098, column: 21, scope: !5954)
!5956 = !DILocalVariable(name: "dc", scope: !5954, file: !1150, line: 1098, type: !1025)
!5957 = !DILocation(line: 1098, column: 27, scope: !5954)
!5958 = !DILocation(line: 1100, column: 34, scope: !5954)
!5959 = !DILocation(line: 1100, column: 30, scope: !5954)
!5960 = !DILocation(line: 1100, column: 25, scope: !5954)
!5961 = !DILocation(line: 1100, column: 17, scope: !5954)
!5962 = !DILocation(line: 1100, column: 28, scope: !5954)
!5963 = !DILocation(line: 1101, column: 39, scope: !5954)
!5964 = !DILocation(line: 1101, column: 26, scope: !5954)
!5965 = !DILocation(line: 1101, column: 33, scope: !5954)
!5966 = !DILocation(line: 1101, column: 21, scope: !5954)
!5967 = !DILocation(line: 1101, column: 17, scope: !5954)
!5968 = !DILocation(line: 1101, column: 24, scope: !5954)
!5969 = !DILocation(line: 1103, column: 24, scope: !5954)
!5970 = !DILocation(line: 1103, column: 17, scope: !5954)
!5971 = !DILocation(line: 1103, column: 57, scope: !5972)
!5972 = !DILexicalBlockFile(scope: !5973, file: !1150, discriminator: 1)
!5973 = distinct !DILexicalBlock(scope: !5954, file: !1150, line: 1103, column: 43)
!5974 = !DILocation(line: 1103, column: 62, scope: !5972)
!5975 = !DILocation(line: 1103, column: 88, scope: !5976)
!5976 = !DILexicalBlockFile(scope: !5973, file: !1150, discriminator: 2)
!5977 = !DILocation(line: 1103, column: 83, scope: !5976)
!5978 = !DILocation(line: 1103, column: 81, scope: !5976)
!5979 = !DILocation(line: 1103, column: 92, scope: !5976)
!5980 = !DILocation(line: 1103, column: 117, scope: !5981)
!5981 = !DILexicalBlockFile(scope: !5973, file: !1150, discriminator: 3)
!5982 = !DILocation(line: 1103, column: 113, scope: !5981)
!5983 = !DILocation(line: 1103, column: 111, scope: !5981)
!5984 = !DILocation(line: 1103, column: 121, scope: !5981)
!5985 = !DILocation(line: 1103, column: 150, scope: !5986)
!5986 = !DILexicalBlockFile(scope: !5973, file: !1150, discriminator: 4)
!5987 = !DILocation(line: 1103, column: 142, scope: !5986)
!5988 = !DILocation(line: 1103, column: 140, scope: !5986)
!5989 = !DILocation(line: 1103, column: 154, scope: !5986)
!5990 = !DILocation(line: 1103, column: 180, scope: !5991)
!5991 = !DILexicalBlockFile(scope: !5973, file: !1150, discriminator: 5)
!5992 = !DILocation(line: 1103, column: 175, scope: !5991)
!5993 = !DILocation(line: 1103, column: 189, scope: !5991)
!5994 = !DILocation(line: 1103, column: 185, scope: !5991)
!5995 = !DILocation(line: 1103, column: 183, scope: !5991)
!5996 = !DILocation(line: 1103, column: 202, scope: !5991)
!5997 = !DILocation(line: 1103, column: 194, scope: !5991)
!5998 = !DILocation(line: 1103, column: 192, scope: !5991)
!5999 = !DILocation(line: 1103, column: 173, scope: !5991)
!6000 = !DILocation(line: 1103, column: 206, scope: !5991)
!6001 = !DILocation(line: 1103, column: 232, scope: !6002)
!6002 = !DILexicalBlockFile(scope: !5973, file: !1150, discriminator: 6)
!6003 = !DILocation(line: 1103, column: 227, scope: !6002)
!6004 = !DILocation(line: 1103, column: 243, scope: !6002)
!6005 = !DILocation(line: 1103, column: 239, scope: !6002)
!6006 = !DILocation(line: 1103, column: 256, scope: !6002)
!6007 = !DILocation(line: 1103, column: 248, scope: !6002)
!6008 = !DILocation(line: 1103, column: 246, scope: !6002)
!6009 = !DILocation(line: 1103, column: 259, scope: !6002)
!6010 = !DILocation(line: 1103, column: 235, scope: !6002)
!6011 = !DILocation(line: 1103, column: 225, scope: !6002)
!6012 = !DILocation(line: 1103, column: 265, scope: !6002)
!6013 = !DILocation(line: 1103, column: 290, scope: !6014)
!6014 = !DILexicalBlockFile(scope: !5973, file: !1150, discriminator: 7)
!6015 = !DILocation(line: 1103, column: 286, scope: !6014)
!6016 = !DILocation(line: 1103, column: 302, scope: !6014)
!6017 = !DILocation(line: 1103, column: 297, scope: !6014)
!6018 = !DILocation(line: 1103, column: 315, scope: !6014)
!6019 = !DILocation(line: 1103, column: 307, scope: !6014)
!6020 = !DILocation(line: 1103, column: 305, scope: !6014)
!6021 = !DILocation(line: 1103, column: 318, scope: !6014)
!6022 = !DILocation(line: 1103, column: 293, scope: !6014)
!6023 = !DILocation(line: 1103, column: 284, scope: !6014)
!6024 = !DILocation(line: 1103, column: 324, scope: !6014)
!6025 = !DILocation(line: 1103, column: 324, scope: !6026)
!6026 = !DILexicalBlockFile(scope: !5973, file: !1150, discriminator: 8)
!6027 = !DILocation(line: 1103, column: 360, scope: !6028)
!6028 = !DILexicalBlockFile(scope: !5973, file: !1150, discriminator: 9)
!6029 = !DILocation(line: 1103, column: 355, scope: !6028)
!6030 = !DILocation(line: 1103, column: 369, scope: !6028)
!6031 = !DILocation(line: 1103, column: 365, scope: !6028)
!6032 = !DILocation(line: 1103, column: 363, scope: !6028)
!6033 = !DILocation(line: 1103, column: 372, scope: !6028)
!6034 = !DILocation(line: 1103, column: 352, scope: !6028)
!6035 = !DILocation(line: 1103, column: 377, scope: !6028)
!6036 = !DILocation(line: 1105, column: 38, scope: !5954)
!6037 = !DILocation(line: 1105, column: 53, scope: !5954)
!6038 = !DILocation(line: 1105, column: 41, scope: !5954)
!6039 = !DILocation(line: 1105, column: 44, scope: !5954)
!6040 = !DILocation(line: 1105, column: 22, scope: !5954)
!6041 = !DILocation(line: 1105, column: 20, scope: !5954)
!6042 = !DILocation(line: 1106, column: 20, scope: !6043)
!6043 = distinct !DILexicalBlock(scope: !5954, file: !1150, line: 1106, column: 20)
!6044 = !DILocation(line: 1106, column: 23, scope: !6043)
!6045 = !DILocation(line: 1106, column: 20, scope: !5954)
!6046 = !DILocation(line: 1107, column: 21, scope: !6043)
!6047 = !DILocation(line: 1110, column: 21, scope: !5954)
!6048 = !DILocation(line: 1110, column: 29, scope: !5954)
!6049 = !DILocation(line: 1110, column: 47, scope: !5954)
!6050 = !DILocation(line: 1110, column: 58, scope: !5954)
!6051 = !DILocation(line: 1110, column: 55, scope: !5954)
!6052 = !DILocation(line: 1110, column: 50, scope: !5954)
!6053 = !DILocation(line: 1110, column: 34, scope: !5954)
!6054 = !DILocation(line: 1110, column: 26, scope: !5954)
!6055 = !DILocation(line: 1109, column: 40, scope: !5954)
!6056 = !DILocation(line: 1109, column: 27, scope: !5954)
!6057 = !DILocation(line: 1109, column: 34, scope: !5954)
!6058 = !DILocation(line: 1109, column: 43, scope: !5954)
!6059 = !DILocation(line: 1109, column: 22, scope: !5954)
!6060 = !DILocation(line: 1109, column: 17, scope: !5954)
!6061 = !DILocation(line: 1109, column: 25, scope: !5954)
!6062 = !DILocation(line: 1111, column: 13, scope: !5954)
!6063 = !DILocation(line: 1097, column: 39, scope: !6064)
!6064 = !DILexicalBlockFile(scope: !5949, file: !1150, discriminator: 2)
!6065 = !DILocation(line: 1097, column: 13, scope: !6064)
!6066 = distinct !{!6066, !6067}
!6067 = !DILocation(line: 1097, column: 13, scope: !5864)
!6068 = !DILocation(line: 1113, column: 17, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !5864, file: !1150, line: 1113, column: 17)
!6070 = !DILocation(line: 1113, column: 20, scope: !6069)
!6071 = !DILocation(line: 1113, column: 37, scope: !6069)
!6072 = !DILocation(line: 1113, column: 43, scope: !6073)
!6073 = !DILexicalBlockFile(scope: !6069, file: !1150, discriminator: 1)
!6074 = !DILocation(line: 1113, column: 46, scope: !6073)
!6075 = !DILocation(line: 1113, column: 41, scope: !6073)
!6076 = !DILocation(line: 1113, column: 17, scope: !6073)
!6077 = !DILocation(line: 1114, column: 33, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6069, file: !1150, line: 1113, column: 61)
!6079 = !DILocation(line: 1114, column: 36, scope: !6078)
!6080 = !DILocation(line: 1114, column: 17, scope: !6078)
!6081 = !DILocation(line: 1115, column: 28, scope: !6078)
!6082 = !DILocation(line: 1115, column: 31, scope: !6078)
!6083 = !DILocation(line: 1115, column: 17, scope: !6078)
!6084 = !DILocation(line: 1116, column: 13, scope: !6078)
!6085 = !DILocation(line: 1117, column: 9, scope: !5864)
!6086 = !DILocation(line: 1079, column: 48, scope: !6087)
!6087 = !DILexicalBlockFile(scope: !5858, file: !1150, discriminator: 2)
!6088 = !DILocation(line: 1079, column: 9, scope: !6087)
!6089 = distinct !{!6089, !6090}
!6090 = !DILocation(line: 1079, column: 9, scope: !5808)
!6091 = !DILocation(line: 1118, column: 13, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !5808, file: !1150, line: 1118, column: 13)
!6093 = !DILocation(line: 1118, column: 16, scope: !6092)
!6094 = !DILocation(line: 1118, column: 20, scope: !6092)
!6095 = !DILocation(line: 1118, column: 23, scope: !6096)
!6096 = !DILexicalBlockFile(scope: !6092, file: !1150, discriminator: 1)
!6097 = !DILocation(line: 1118, column: 26, scope: !6096)
!6098 = !DILocation(line: 1118, column: 40, scope: !6096)
!6099 = !DILocation(line: 1118, column: 13, scope: !6096)
!6100 = !DILocation(line: 1119, column: 23, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6102, file: !1150, line: 1119, column: 13)
!6102 = distinct !DILexicalBlock(scope: !6092, file: !1150, line: 1118, column: 46)
!6103 = !DILocation(line: 1119, column: 18, scope: !6101)
!6104 = !DILocation(line: 1119, column: 28, scope: !6105)
!6105 = !DILexicalBlockFile(scope: !6106, file: !1150, discriminator: 1)
!6106 = distinct !DILexicalBlock(scope: !6101, file: !1150, line: 1119, column: 13)
!6107 = !DILocation(line: 1119, column: 35, scope: !6105)
!6108 = !DILocation(line: 1119, column: 38, scope: !6105)
!6109 = !DILocation(line: 1119, column: 33, scope: !6105)
!6110 = !DILocation(line: 1119, column: 13, scope: !6105)
!6111 = !DILocation(line: 1120, column: 42, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6106, file: !1150, line: 1119, column: 56)
!6113 = !DILocation(line: 1120, column: 35, scope: !6112)
!6114 = !DILocation(line: 1120, column: 62, scope: !6112)
!6115 = !DILocation(line: 1120, column: 55, scope: !6112)
!6116 = !DILocation(line: 1120, column: 80, scope: !6112)
!6117 = !DILocation(line: 1120, column: 73, scope: !6112)
!6118 = !DILocation(line: 1120, column: 71, scope: !6112)
!6119 = !DILocation(line: 1120, column: 89, scope: !6112)
!6120 = !DILocation(line: 1120, column: 98, scope: !6112)
!6121 = !DILocation(line: 1120, column: 51, scope: !6112)
!6122 = !DILocation(line: 1120, column: 23, scope: !6112)
!6123 = !DILocation(line: 1120, column: 22, scope: !6112)
!6124 = !DILocation(line: 1120, column: 28, scope: !6112)
!6125 = !DILocation(line: 1120, column: 17, scope: !6112)
!6126 = !DILocation(line: 1120, column: 33, scope: !6112)
!6127 = !DILocation(line: 1121, column: 42, scope: !6112)
!6128 = !DILocation(line: 1121, column: 35, scope: !6112)
!6129 = !DILocation(line: 1121, column: 59, scope: !6112)
!6130 = !DILocation(line: 1121, column: 58, scope: !6112)
!6131 = !DILocation(line: 1121, column: 64, scope: !6112)
!6132 = !DILocation(line: 1121, column: 53, scope: !6112)
!6133 = !DILocation(line: 1121, column: 51, scope: !6112)
!6134 = !DILocation(line: 1121, column: 23, scope: !6112)
!6135 = !DILocation(line: 1121, column: 22, scope: !6112)
!6136 = !DILocation(line: 1121, column: 28, scope: !6112)
!6137 = !DILocation(line: 1121, column: 17, scope: !6112)
!6138 = !DILocation(line: 1121, column: 33, scope: !6112)
!6139 = !DILocation(line: 1122, column: 42, scope: !6112)
!6140 = !DILocation(line: 1122, column: 35, scope: !6112)
!6141 = !DILocation(line: 1122, column: 59, scope: !6112)
!6142 = !DILocation(line: 1122, column: 58, scope: !6112)
!6143 = !DILocation(line: 1122, column: 64, scope: !6112)
!6144 = !DILocation(line: 1122, column: 53, scope: !6112)
!6145 = !DILocation(line: 1122, column: 51, scope: !6112)
!6146 = !DILocation(line: 1122, column: 23, scope: !6112)
!6147 = !DILocation(line: 1122, column: 22, scope: !6112)
!6148 = !DILocation(line: 1122, column: 28, scope: !6112)
!6149 = !DILocation(line: 1122, column: 17, scope: !6112)
!6150 = !DILocation(line: 1122, column: 33, scope: !6112)
!6151 = !DILocation(line: 1123, column: 42, scope: !6112)
!6152 = !DILocation(line: 1123, column: 35, scope: !6112)
!6153 = !DILocation(line: 1123, column: 23, scope: !6112)
!6154 = !DILocation(line: 1123, column: 22, scope: !6112)
!6155 = !DILocation(line: 1123, column: 28, scope: !6112)
!6156 = !DILocation(line: 1123, column: 17, scope: !6112)
!6157 = !DILocation(line: 1123, column: 33, scope: !6112)
!6158 = !DILocation(line: 1124, column: 13, scope: !6112)
!6159 = !DILocation(line: 1119, column: 52, scope: !6160)
!6160 = !DILexicalBlockFile(scope: !6106, file: !1150, discriminator: 2)
!6161 = !DILocation(line: 1119, column: 13, scope: !6160)
!6162 = distinct !{!6162, !6163}
!6163 = !DILocation(line: 1119, column: 13, scope: !6102)
!6164 = !DILocation(line: 1125, column: 9, scope: !6102)
!6165 = !DILocation(line: 1125, column: 20, scope: !6166)
!6166 = !DILexicalBlockFile(scope: !6167, file: !1150, discriminator: 1)
!6167 = distinct !DILexicalBlock(scope: !6092, file: !1150, line: 1125, column: 20)
!6168 = !DILocation(line: 1125, column: 23, scope: !6166)
!6169 = !DILocation(line: 1125, column: 37, scope: !6166)
!6170 = !DILocation(line: 1126, column: 18, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6172, file: !1150, line: 1126, column: 13)
!6172 = distinct !DILexicalBlock(scope: !6167, file: !1150, line: 1125, column: 43)
!6173 = !DILocation(line: 1126, column: 17, scope: !6171)
!6174 = !DILocation(line: 1126, column: 22, scope: !6175)
!6175 = !DILexicalBlockFile(scope: !6176, file: !1150, discriminator: 1)
!6176 = distinct !DILexicalBlock(scope: !6171, file: !1150, line: 1126, column: 13)
!6177 = !DILocation(line: 1126, column: 24, scope: !6175)
!6178 = !DILocation(line: 1126, column: 23, scope: !6175)
!6179 = !DILocation(line: 1126, column: 13, scope: !6175)
!6180 = !DILocalVariable(name: "c", scope: !6181, file: !1150, line: 1127, type: !1025)
!6181 = distinct !DILexicalBlock(scope: !6176, file: !1150, line: 1126, column: 44)
!6182 = !DILocation(line: 1127, column: 21, scope: !6181)
!6183 = !DILocation(line: 1127, column: 38, scope: !6181)
!6184 = !DILocation(line: 1127, column: 24, scope: !6181)
!6185 = !DILocation(line: 1127, column: 27, scope: !6181)
!6186 = !DILocation(line: 1128, column: 21, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !6181, file: !1150, line: 1128, column: 21)
!6188 = !DILocation(line: 1128, column: 24, scope: !6187)
!6189 = !DILocation(line: 1128, column: 29, scope: !6187)
!6190 = !DILocation(line: 1128, column: 21, scope: !6181)
!6191 = !DILocation(line: 1129, column: 30, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6193, file: !1150, line: 1129, column: 21)
!6193 = distinct !DILexicalBlock(scope: !6187, file: !1150, line: 1128, column: 35)
!6194 = !DILocation(line: 1129, column: 25, scope: !6192)
!6195 = !DILocation(line: 1129, column: 35, scope: !6196)
!6196 = !DILexicalBlockFile(scope: !6197, file: !1150, discriminator: 1)
!6197 = distinct !DILexicalBlock(scope: !6192, file: !1150, line: 1129, column: 21)
!6198 = !DILocation(line: 1129, column: 42, scope: !6196)
!6199 = !DILocation(line: 1129, column: 45, scope: !6196)
!6200 = !DILocation(line: 1129, column: 40, scope: !6196)
!6201 = !DILocation(line: 1129, column: 21, scope: !6196)
!6202 = !DILocation(line: 1130, column: 56, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !6197, file: !1150, line: 1129, column: 63)
!6204 = !DILocation(line: 1130, column: 43, scope: !6203)
!6205 = !DILocation(line: 1130, column: 50, scope: !6203)
!6206 = !DILocation(line: 1130, column: 31, scope: !6203)
!6207 = !DILocation(line: 1130, column: 30, scope: !6203)
!6208 = !DILocation(line: 1130, column: 35, scope: !6203)
!6209 = !DILocation(line: 1130, column: 38, scope: !6203)
!6210 = !DILocation(line: 1130, column: 37, scope: !6203)
!6211 = !DILocation(line: 1130, column: 25, scope: !6203)
!6212 = !DILocation(line: 1130, column: 41, scope: !6203)
!6213 = !DILocation(line: 1131, column: 21, scope: !6203)
!6214 = !DILocation(line: 1129, column: 59, scope: !6215)
!6215 = !DILexicalBlockFile(scope: !6197, file: !1150, discriminator: 2)
!6216 = !DILocation(line: 1129, column: 21, scope: !6215)
!6217 = distinct !{!6217, !6218}
!6218 = !DILocation(line: 1129, column: 21, scope: !6193)
!6219 = !DILocation(line: 1132, column: 17, scope: !6193)
!6220 = !DILocation(line: 1132, column: 27, scope: !6221)
!6221 = !DILexicalBlockFile(scope: !6222, file: !1150, discriminator: 1)
!6222 = distinct !DILexicalBlock(scope: !6187, file: !1150, line: 1132, column: 27)
!6223 = !DILocation(line: 1132, column: 30, scope: !6221)
!6224 = !DILocation(line: 1132, column: 35, scope: !6221)
!6225 = !DILocation(line: 1133, column: 21, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6222, file: !1150, line: 1132, column: 41)
!6227 = !DILocation(line: 1135, column: 30, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6229, file: !1150, line: 1135, column: 21)
!6229 = distinct !DILexicalBlock(scope: !6222, file: !1150, line: 1134, column: 24)
!6230 = !DILocation(line: 1135, column: 25, scope: !6228)
!6231 = !DILocation(line: 1135, column: 35, scope: !6232)
!6232 = !DILexicalBlockFile(scope: !6233, file: !1150, discriminator: 1)
!6233 = distinct !DILexicalBlock(scope: !6228, file: !1150, line: 1135, column: 21)
!6234 = !DILocation(line: 1135, column: 42, scope: !6232)
!6235 = !DILocation(line: 1135, column: 45, scope: !6232)
!6236 = !DILocation(line: 1135, column: 40, scope: !6232)
!6237 = !DILocation(line: 1135, column: 21, scope: !6232)
!6238 = !DILocation(line: 1136, column: 67, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6233, file: !1150, line: 1135, column: 63)
!6240 = !DILocation(line: 1136, column: 54, scope: !6239)
!6241 = !DILocation(line: 1136, column: 61, scope: !6239)
!6242 = !DILocation(line: 1136, column: 44, scope: !6239)
!6243 = !DILocation(line: 1136, column: 43, scope: !6239)
!6244 = !DILocation(line: 1136, column: 49, scope: !6239)
!6245 = !DILocation(line: 1136, column: 48, scope: !6239)
!6246 = !DILocation(line: 1136, column: 25, scope: !6239)
!6247 = !DILocation(line: 1136, column: 37, scope: !6239)
!6248 = !DILocation(line: 1136, column: 52, scope: !6239)
!6249 = !DILocation(line: 1137, column: 21, scope: !6239)
!6250 = !DILocation(line: 1135, column: 59, scope: !6251)
!6251 = !DILexicalBlockFile(scope: !6233, file: !1150, discriminator: 2)
!6252 = !DILocation(line: 1135, column: 21, scope: !6251)
!6253 = distinct !{!6253, !6254}
!6254 = !DILocation(line: 1135, column: 21, scope: !6229)
!6255 = !DILocation(line: 1139, column: 13, scope: !6181)
!6256 = !DILocation(line: 1126, column: 40, scope: !6257)
!6257 = !DILexicalBlockFile(scope: !6176, file: !1150, discriminator: 2)
!6258 = !DILocation(line: 1126, column: 13, scope: !6257)
!6259 = distinct !{!6259, !6260}
!6260 = !DILocation(line: 1126, column: 13, scope: !6172)
!6261 = !DILocation(line: 1140, column: 9, scope: !6172)
!6262 = !DILocation(line: 1140, column: 20, scope: !6263)
!6263 = !DILexicalBlockFile(scope: !6264, file: !1150, discriminator: 1)
!6264 = distinct !DILexicalBlock(scope: !6167, file: !1150, line: 1140, column: 20)
!6265 = !DILocation(line: 1140, column: 23, scope: !6263)
!6266 = !DILocation(line: 1141, column: 23, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6268, file: !1150, line: 1141, column: 13)
!6268 = distinct !DILexicalBlock(scope: !6264, file: !1150, line: 1140, column: 28)
!6269 = !DILocation(line: 1141, column: 18, scope: !6267)
!6270 = !DILocation(line: 1141, column: 28, scope: !6271)
!6271 = !DILexicalBlockFile(scope: !6272, file: !1150, discriminator: 1)
!6272 = distinct !DILexicalBlock(scope: !6267, file: !1150, line: 1141, column: 13)
!6273 = !DILocation(line: 1141, column: 35, scope: !6271)
!6274 = !DILocation(line: 1141, column: 38, scope: !6271)
!6275 = !DILocation(line: 1141, column: 33, scope: !6271)
!6276 = !DILocation(line: 1141, column: 13, scope: !6271)
!6277 = !DILocation(line: 1142, column: 42, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6272, file: !1150, line: 1141, column: 56)
!6279 = !DILocation(line: 1142, column: 35, scope: !6278)
!6280 = !DILocation(line: 1142, column: 62, scope: !6278)
!6281 = !DILocation(line: 1142, column: 55, scope: !6278)
!6282 = !DILocation(line: 1142, column: 80, scope: !6278)
!6283 = !DILocation(line: 1142, column: 73, scope: !6278)
!6284 = !DILocation(line: 1142, column: 71, scope: !6278)
!6285 = !DILocation(line: 1142, column: 89, scope: !6278)
!6286 = !DILocation(line: 1142, column: 98, scope: !6278)
!6287 = !DILocation(line: 1142, column: 51, scope: !6278)
!6288 = !DILocation(line: 1142, column: 23, scope: !6278)
!6289 = !DILocation(line: 1142, column: 22, scope: !6278)
!6290 = !DILocation(line: 1142, column: 28, scope: !6278)
!6291 = !DILocation(line: 1142, column: 17, scope: !6278)
!6292 = !DILocation(line: 1142, column: 33, scope: !6278)
!6293 = !DILocation(line: 1143, column: 42, scope: !6278)
!6294 = !DILocation(line: 1143, column: 35, scope: !6278)
!6295 = !DILocation(line: 1143, column: 59, scope: !6278)
!6296 = !DILocation(line: 1143, column: 58, scope: !6278)
!6297 = !DILocation(line: 1143, column: 64, scope: !6278)
!6298 = !DILocation(line: 1143, column: 53, scope: !6278)
!6299 = !DILocation(line: 1143, column: 51, scope: !6278)
!6300 = !DILocation(line: 1143, column: 23, scope: !6278)
!6301 = !DILocation(line: 1143, column: 22, scope: !6278)
!6302 = !DILocation(line: 1143, column: 28, scope: !6278)
!6303 = !DILocation(line: 1143, column: 17, scope: !6278)
!6304 = !DILocation(line: 1143, column: 33, scope: !6278)
!6305 = !DILocation(line: 1144, column: 42, scope: !6278)
!6306 = !DILocation(line: 1144, column: 35, scope: !6278)
!6307 = !DILocation(line: 1144, column: 59, scope: !6278)
!6308 = !DILocation(line: 1144, column: 58, scope: !6278)
!6309 = !DILocation(line: 1144, column: 64, scope: !6278)
!6310 = !DILocation(line: 1144, column: 53, scope: !6278)
!6311 = !DILocation(line: 1144, column: 51, scope: !6278)
!6312 = !DILocation(line: 1144, column: 23, scope: !6278)
!6313 = !DILocation(line: 1144, column: 22, scope: !6278)
!6314 = !DILocation(line: 1144, column: 28, scope: !6278)
!6315 = !DILocation(line: 1144, column: 17, scope: !6278)
!6316 = !DILocation(line: 1144, column: 33, scope: !6278)
!6317 = !DILocation(line: 1145, column: 13, scope: !6278)
!6318 = !DILocation(line: 1141, column: 52, scope: !6319)
!6319 = !DILexicalBlockFile(scope: !6272, file: !1150, discriminator: 2)
!6320 = !DILocation(line: 1141, column: 13, scope: !6319)
!6321 = distinct !{!6321, !6322}
!6322 = !DILocation(line: 1141, column: 13, scope: !6268)
!6323 = !DILocation(line: 1146, column: 9, scope: !6268)
!6324 = !DILocation(line: 1146, column: 20, scope: !6325)
!6325 = !DILexicalBlockFile(scope: !6326, file: !1150, discriminator: 1)
!6326 = distinct !DILexicalBlock(scope: !6264, file: !1150, line: 1146, column: 20)
!6327 = !DILocation(line: 1146, column: 23, scope: !6325)
!6328 = !DILocation(line: 1147, column: 23, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6330, file: !1150, line: 1147, column: 13)
!6330 = distinct !DILexicalBlock(scope: !6326, file: !1150, line: 1146, column: 36)
!6331 = !DILocation(line: 1147, column: 18, scope: !6329)
!6332 = !DILocation(line: 1147, column: 28, scope: !6333)
!6333 = !DILexicalBlockFile(scope: !6334, file: !1150, discriminator: 1)
!6334 = distinct !DILexicalBlock(scope: !6329, file: !1150, line: 1147, column: 13)
!6335 = !DILocation(line: 1147, column: 35, scope: !6333)
!6336 = !DILocation(line: 1147, column: 38, scope: !6333)
!6337 = !DILocation(line: 1147, column: 33, scope: !6333)
!6338 = !DILocation(line: 1147, column: 13, scope: !6333)
!6339 = !DILocation(line: 1148, column: 42, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6334, file: !1150, line: 1147, column: 56)
!6341 = !DILocation(line: 1148, column: 35, scope: !6340)
!6342 = !DILocation(line: 1148, column: 62, scope: !6340)
!6343 = !DILocation(line: 1148, column: 55, scope: !6340)
!6344 = !DILocation(line: 1148, column: 80, scope: !6340)
!6345 = !DILocation(line: 1148, column: 73, scope: !6340)
!6346 = !DILocation(line: 1148, column: 71, scope: !6340)
!6347 = !DILocation(line: 1148, column: 90, scope: !6340)
!6348 = !DILocation(line: 1148, column: 51, scope: !6340)
!6349 = !DILocation(line: 1148, column: 23, scope: !6340)
!6350 = !DILocation(line: 1148, column: 22, scope: !6340)
!6351 = !DILocation(line: 1148, column: 28, scope: !6340)
!6352 = !DILocation(line: 1148, column: 17, scope: !6340)
!6353 = !DILocation(line: 1148, column: 33, scope: !6340)
!6354 = !DILocation(line: 1149, column: 42, scope: !6340)
!6355 = !DILocation(line: 1149, column: 35, scope: !6340)
!6356 = !DILocation(line: 1149, column: 59, scope: !6340)
!6357 = !DILocation(line: 1149, column: 58, scope: !6340)
!6358 = !DILocation(line: 1149, column: 64, scope: !6340)
!6359 = !DILocation(line: 1149, column: 53, scope: !6340)
!6360 = !DILocation(line: 1149, column: 51, scope: !6340)
!6361 = !DILocation(line: 1149, column: 23, scope: !6340)
!6362 = !DILocation(line: 1149, column: 22, scope: !6340)
!6363 = !DILocation(line: 1149, column: 28, scope: !6340)
!6364 = !DILocation(line: 1149, column: 17, scope: !6340)
!6365 = !DILocation(line: 1149, column: 33, scope: !6340)
!6366 = !DILocation(line: 1150, column: 42, scope: !6340)
!6367 = !DILocation(line: 1150, column: 35, scope: !6340)
!6368 = !DILocation(line: 1150, column: 59, scope: !6340)
!6369 = !DILocation(line: 1150, column: 58, scope: !6340)
!6370 = !DILocation(line: 1150, column: 64, scope: !6340)
!6371 = !DILocation(line: 1150, column: 53, scope: !6340)
!6372 = !DILocation(line: 1150, column: 51, scope: !6340)
!6373 = !DILocation(line: 1150, column: 23, scope: !6340)
!6374 = !DILocation(line: 1150, column: 22, scope: !6340)
!6375 = !DILocation(line: 1150, column: 28, scope: !6340)
!6376 = !DILocation(line: 1150, column: 17, scope: !6340)
!6377 = !DILocation(line: 1150, column: 33, scope: !6340)
!6378 = !DILocation(line: 1151, column: 13, scope: !6340)
!6379 = !DILocation(line: 1147, column: 52, scope: !6380)
!6380 = !DILexicalBlockFile(scope: !6334, file: !1150, discriminator: 2)
!6381 = !DILocation(line: 1147, column: 13, scope: !6380)
!6382 = distinct !{!6382, !6383}
!6383 = !DILocation(line: 1147, column: 13, scope: !6330)
!6384 = !DILocation(line: 1152, column: 9, scope: !6330)
!6385 = !DILocation(line: 1153, column: 18, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6387, file: !1150, line: 1153, column: 13)
!6387 = distinct !DILexicalBlock(scope: !6326, file: !1150, line: 1152, column: 16)
!6388 = !DILocation(line: 1153, column: 17, scope: !6386)
!6389 = !DILocation(line: 1153, column: 22, scope: !6390)
!6390 = !DILexicalBlockFile(scope: !6391, file: !1150, discriminator: 1)
!6391 = distinct !DILexicalBlock(scope: !6386, file: !1150, line: 1153, column: 13)
!6392 = !DILocation(line: 1153, column: 24, scope: !6390)
!6393 = !DILocation(line: 1153, column: 23, scope: !6390)
!6394 = !DILocation(line: 1153, column: 13, scope: !6390)
!6395 = !DILocalVariable(name: "c", scope: !6396, file: !1150, line: 1154, type: !1025)
!6396 = distinct !DILexicalBlock(scope: !6391, file: !1150, line: 1153, column: 44)
!6397 = !DILocation(line: 1154, column: 21, scope: !6396)
!6398 = !DILocation(line: 1154, column: 38, scope: !6396)
!6399 = !DILocation(line: 1154, column: 24, scope: !6396)
!6400 = !DILocation(line: 1154, column: 27, scope: !6396)
!6401 = !DILocation(line: 1155, column: 21, scope: !6402)
!6402 = distinct !DILexicalBlock(scope: !6396, file: !1150, line: 1155, column: 21)
!6403 = !DILocation(line: 1155, column: 24, scope: !6402)
!6404 = !DILocation(line: 1155, column: 29, scope: !6402)
!6405 = !DILocation(line: 1155, column: 21, scope: !6396)
!6406 = !DILocation(line: 1156, column: 30, scope: !6407)
!6407 = distinct !DILexicalBlock(scope: !6408, file: !1150, line: 1156, column: 21)
!6408 = distinct !DILexicalBlock(scope: !6402, file: !1150, line: 1155, column: 35)
!6409 = !DILocation(line: 1156, column: 25, scope: !6407)
!6410 = !DILocation(line: 1156, column: 35, scope: !6411)
!6411 = !DILexicalBlockFile(scope: !6412, file: !1150, discriminator: 1)
!6412 = distinct !DILexicalBlock(scope: !6407, file: !1150, line: 1156, column: 21)
!6413 = !DILocation(line: 1156, column: 42, scope: !6411)
!6414 = !DILocation(line: 1156, column: 45, scope: !6411)
!6415 = !DILocation(line: 1156, column: 40, scope: !6411)
!6416 = !DILocation(line: 1156, column: 21, scope: !6411)
!6417 = !DILocation(line: 1157, column: 56, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6412, file: !1150, line: 1156, column: 63)
!6419 = !DILocation(line: 1157, column: 43, scope: !6418)
!6420 = !DILocation(line: 1157, column: 50, scope: !6418)
!6421 = !DILocation(line: 1157, column: 31, scope: !6418)
!6422 = !DILocation(line: 1157, column: 30, scope: !6418)
!6423 = !DILocation(line: 1157, column: 35, scope: !6418)
!6424 = !DILocation(line: 1157, column: 38, scope: !6418)
!6425 = !DILocation(line: 1157, column: 37, scope: !6418)
!6426 = !DILocation(line: 1157, column: 25, scope: !6418)
!6427 = !DILocation(line: 1157, column: 41, scope: !6418)
!6428 = !DILocation(line: 1158, column: 21, scope: !6418)
!6429 = !DILocation(line: 1156, column: 59, scope: !6430)
!6430 = !DILexicalBlockFile(scope: !6412, file: !1150, discriminator: 2)
!6431 = !DILocation(line: 1156, column: 21, scope: !6430)
!6432 = distinct !{!6432, !6433}
!6433 = !DILocation(line: 1156, column: 21, scope: !6408)
!6434 = !DILocation(line: 1159, column: 17, scope: !6408)
!6435 = !DILocation(line: 1159, column: 27, scope: !6436)
!6436 = !DILexicalBlockFile(scope: !6437, file: !1150, discriminator: 1)
!6437 = distinct !DILexicalBlock(scope: !6402, file: !1150, line: 1159, column: 27)
!6438 = !DILocation(line: 1159, column: 30, scope: !6436)
!6439 = !DILocation(line: 1159, column: 35, scope: !6436)
!6440 = !DILocation(line: 1160, column: 21, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6437, file: !1150, line: 1159, column: 41)
!6442 = !DILocation(line: 1162, column: 30, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6444, file: !1150, line: 1162, column: 21)
!6444 = distinct !DILexicalBlock(scope: !6437, file: !1150, line: 1161, column: 24)
!6445 = !DILocation(line: 1162, column: 25, scope: !6443)
!6446 = !DILocation(line: 1162, column: 35, scope: !6447)
!6447 = !DILexicalBlockFile(scope: !6448, file: !1150, discriminator: 1)
!6448 = distinct !DILexicalBlock(scope: !6443, file: !1150, line: 1162, column: 21)
!6449 = !DILocation(line: 1162, column: 42, scope: !6447)
!6450 = !DILocation(line: 1162, column: 45, scope: !6447)
!6451 = !DILocation(line: 1162, column: 40, scope: !6447)
!6452 = !DILocation(line: 1162, column: 21, scope: !6447)
!6453 = !DILocation(line: 1163, column: 69, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6448, file: !1150, line: 1162, column: 63)
!6455 = !DILocation(line: 1163, column: 56, scope: !6454)
!6456 = !DILocation(line: 1163, column: 63, scope: !6454)
!6457 = !DILocation(line: 1163, column: 44, scope: !6454)
!6458 = !DILocation(line: 1163, column: 43, scope: !6454)
!6459 = !DILocation(line: 1163, column: 48, scope: !6454)
!6460 = !DILocation(line: 1163, column: 51, scope: !6454)
!6461 = !DILocation(line: 1163, column: 50, scope: !6454)
!6462 = !DILocation(line: 1163, column: 25, scope: !6454)
!6463 = !DILocation(line: 1163, column: 37, scope: !6454)
!6464 = !DILocation(line: 1163, column: 54, scope: !6454)
!6465 = !DILocation(line: 1164, column: 21, scope: !6454)
!6466 = !DILocation(line: 1162, column: 59, scope: !6467)
!6467 = !DILexicalBlockFile(scope: !6448, file: !1150, discriminator: 2)
!6468 = !DILocation(line: 1162, column: 21, scope: !6467)
!6469 = distinct !{!6469, !6470}
!6470 = !DILocation(line: 1162, column: 21, scope: !6444)
!6471 = !DILocation(line: 1166, column: 13, scope: !6396)
!6472 = !DILocation(line: 1153, column: 40, scope: !6473)
!6473 = !DILexicalBlockFile(scope: !6391, file: !1150, discriminator: 2)
!6474 = !DILocation(line: 1153, column: 13, scope: !6473)
!6475 = distinct !{!6475, !6476}
!6476 = !DILocation(line: 1153, column: 13, scope: !6387)
!6477 = !DILocation(line: 1168, column: 5, scope: !5808)
!6478 = !DILocation(line: 1070, column: 45, scope: !6479)
!6479 = !DILexicalBlockFile(scope: !5802, file: !1150, discriminator: 2)
!6480 = !DILocation(line: 1070, column: 5, scope: !6479)
!6481 = distinct !{!6481, !6482}
!6482 = !DILocation(line: 1070, column: 5, scope: !5685)
!6483 = !DILocation(line: 1169, column: 5, scope: !5685)
!6484 = !DILocation(line: 1170, column: 1, scope: !5685)
!6485 = distinct !DISubprogram(name: "ljpeg_decode_yuv_scan", scope: !1150, file: !1150, line: 1172, type: !5686, isLocal: true, isDefinition: true, scopeLine: 1174, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!6486 = !DILocalVariable(name: "s", arg: 1, scope: !6485, file: !1150, line: 1172, type: !1815)
!6487 = !DILocation(line: 1172, column: 54, scope: !6485)
!6488 = !DILocalVariable(name: "predictor", arg: 2, scope: !6485, file: !1150, line: 1172, type: !1025)
!6489 = !DILocation(line: 1172, column: 61, scope: !6485)
!6490 = !DILocalVariable(name: "point_transform", arg: 3, scope: !6485, file: !1150, line: 1173, type: !1025)
!6491 = !DILocation(line: 1173, column: 38, scope: !6485)
!6492 = !DILocalVariable(name: "nb_components", arg: 4, scope: !6485, file: !1150, line: 1173, type: !1025)
!6493 = !DILocation(line: 1173, column: 59, scope: !6485)
!6494 = !DILocalVariable(name: "i", scope: !6485, file: !1150, line: 1175, type: !1025)
!6495 = !DILocation(line: 1175, column: 9, scope: !6485)
!6496 = !DILocalVariable(name: "mb_x", scope: !6485, file: !1150, line: 1175, type: !1025)
!6497 = !DILocation(line: 1175, column: 12, scope: !6485)
!6498 = !DILocalVariable(name: "mb_y", scope: !6485, file: !1150, line: 1175, type: !1025)
!6499 = !DILocation(line: 1175, column: 18, scope: !6485)
!6500 = !DILocalVariable(name: "mask", scope: !6485, file: !1150, line: 1175, type: !1025)
!6501 = !DILocation(line: 1175, column: 24, scope: !6485)
!6502 = !DILocalVariable(name: "bits", scope: !6485, file: !1150, line: 1176, type: !1025)
!6503 = !DILocation(line: 1176, column: 9, scope: !6485)
!6504 = !DILocation(line: 1176, column: 16, scope: !6485)
!6505 = !DILocation(line: 1176, column: 19, scope: !6485)
!6506 = !DILocation(line: 1176, column: 23, scope: !6485)
!6507 = !DILocation(line: 1176, column: 26, scope: !6485)
!6508 = !DILocalVariable(name: "resync_mb_y", scope: !6485, file: !1150, line: 1177, type: !1025)
!6509 = !DILocation(line: 1177, column: 9, scope: !6485)
!6510 = !DILocalVariable(name: "resync_mb_x", scope: !6485, file: !1150, line: 1178, type: !1025)
!6511 = !DILocation(line: 1178, column: 9, scope: !6485)
!6512 = !DILocation(line: 1180, column: 24, scope: !6485)
!6513 = !DILocation(line: 1180, column: 31, scope: !6485)
!6514 = !DILocation(line: 1180, column: 34, scope: !6485)
!6515 = !DILocation(line: 1180, column: 29, scope: !6485)
!6516 = !DILocation(line: 1180, column: 21, scope: !6485)
!6517 = !DILocation(line: 1181, column: 19, scope: !6485)
!6518 = !DILocation(line: 1181, column: 22, scope: !6485)
!6519 = !DILocation(line: 1181, column: 16, scope: !6485)
!6520 = !DILocation(line: 1181, column: 28, scope: !6485)
!6521 = !DILocation(line: 1181, column: 36, scope: !6485)
!6522 = !DILocation(line: 1181, column: 33, scope: !6485)
!6523 = !DILocation(line: 1181, column: 10, scope: !6485)
!6524 = !DILocation(line: 1183, column: 5, scope: !6485)
!6525 = distinct !{!6525, !6524}
!6526 = !DILocation(line: 1183, column: 16, scope: !6527)
!6527 = !DILexicalBlockFile(scope: !6528, file: !1150, discriminator: 1)
!6528 = distinct !DILexicalBlock(scope: !6529, file: !1150, line: 1183, column: 14)
!6529 = distinct !DILexicalBlock(scope: !6485, file: !1150, line: 1183, column: 8)
!6530 = !DILocation(line: 1183, column: 29, scope: !6527)
!6531 = !DILocation(line: 1183, column: 33, scope: !6527)
!6532 = !DILocation(line: 1183, column: 36, scope: !6533)
!6533 = !DILexicalBlockFile(scope: !6528, file: !1150, discriminator: 2)
!6534 = !DILocation(line: 1183, column: 49, scope: !6533)
!6535 = !DILocation(line: 1183, column: 14, scope: !6533)
!6536 = !DILocation(line: 1183, column: 57, scope: !6537)
!6537 = !DILexicalBlockFile(scope: !6538, file: !1150, discriminator: 3)
!6538 = distinct !DILexicalBlock(scope: !6528, file: !1150, line: 1183, column: 55)
!6539 = !DILocation(line: 1183, column: 115, scope: !6540)
!6540 = !DILexicalBlockFile(scope: !6537, file: !1150, discriminator: 5)
!6541 = !DILocation(line: 1183, column: 115, scope: !6537)
!6542 = !DILocation(line: 1183, column: 126, scope: !6543)
!6543 = !DILexicalBlockFile(scope: !6529, file: !1150, discriminator: 4)
!6544 = !DILocation(line: 1185, column: 15, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6485, file: !1150, line: 1185, column: 5)
!6546 = !DILocation(line: 1185, column: 10, scope: !6545)
!6547 = !DILocation(line: 1185, column: 20, scope: !6548)
!6548 = !DILexicalBlockFile(scope: !6549, file: !1150, discriminator: 1)
!6549 = distinct !DILexicalBlock(scope: !6545, file: !1150, line: 1185, column: 5)
!6550 = !DILocation(line: 1185, column: 27, scope: !6548)
!6551 = !DILocation(line: 1185, column: 30, scope: !6548)
!6552 = !DILocation(line: 1185, column: 25, scope: !6548)
!6553 = !DILocation(line: 1185, column: 5, scope: !6548)
!6554 = !DILocation(line: 1186, column: 19, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !6556, file: !1150, line: 1186, column: 9)
!6556 = distinct !DILexicalBlock(scope: !6549, file: !1150, line: 1185, column: 49)
!6557 = !DILocation(line: 1186, column: 14, scope: !6555)
!6558 = !DILocation(line: 1186, column: 24, scope: !6559)
!6559 = !DILexicalBlockFile(scope: !6560, file: !1150, discriminator: 1)
!6560 = distinct !DILexicalBlock(scope: !6555, file: !1150, line: 1186, column: 9)
!6561 = !DILocation(line: 1186, column: 31, scope: !6559)
!6562 = !DILocation(line: 1186, column: 34, scope: !6559)
!6563 = !DILocation(line: 1186, column: 29, scope: !6559)
!6564 = !DILocation(line: 1186, column: 9, scope: !6559)
!6565 = !DILocation(line: 1187, column: 32, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !6567, file: !1150, line: 1187, column: 17)
!6567 = distinct !DILexicalBlock(scope: !6560, file: !1150, line: 1186, column: 52)
!6568 = !DILocation(line: 1187, column: 35, scope: !6566)
!6569 = !DILocation(line: 1187, column: 17, scope: !6566)
!6570 = !DILocation(line: 1187, column: 39, scope: !6566)
!6571 = !DILocation(line: 1187, column: 17, scope: !6567)
!6572 = !DILocation(line: 1188, column: 24, scope: !6573)
!6573 = distinct !DILexicalBlock(scope: !6566, file: !1150, line: 1187, column: 44)
!6574 = !DILocation(line: 1188, column: 27, scope: !6573)
!6575 = !DILocation(line: 1188, column: 17, scope: !6573)
!6576 = !DILocation(line: 1189, column: 17, scope: !6573)
!6577 = !DILocation(line: 1191, column: 17, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6567, file: !1150, line: 1191, column: 17)
!6579 = !DILocation(line: 1191, column: 20, scope: !6578)
!6580 = !DILocation(line: 1191, column: 37, scope: !6578)
!6581 = !DILocation(line: 1191, column: 41, scope: !6582)
!6582 = !DILexicalBlockFile(scope: !6578, file: !1150, discriminator: 1)
!6583 = !DILocation(line: 1191, column: 44, scope: !6582)
!6584 = !DILocation(line: 1191, column: 17, scope: !6582)
!6585 = !DILocation(line: 1192, column: 36, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6578, file: !1150, line: 1191, column: 58)
!6587 = !DILocation(line: 1192, column: 39, scope: !6586)
!6588 = !DILocation(line: 1192, column: 17, scope: !6586)
!6589 = !DILocation(line: 1192, column: 20, scope: !6586)
!6590 = !DILocation(line: 1192, column: 34, scope: !6586)
!6591 = !DILocation(line: 1193, column: 31, scope: !6586)
!6592 = !DILocation(line: 1193, column: 29, scope: !6586)
!6593 = !DILocation(line: 1194, column: 31, scope: !6586)
!6594 = !DILocation(line: 1194, column: 29, scope: !6586)
!6595 = !DILocation(line: 1195, column: 13, scope: !6586)
!6596 = !DILocation(line: 1197, column: 17, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6567, file: !1150, line: 1197, column: 16)
!6598 = !DILocation(line: 1197, column: 22, scope: !6597)
!6599 = !DILocation(line: 1197, column: 25, scope: !6600)
!6600 = !DILexicalBlockFile(scope: !6597, file: !1150, discriminator: 1)
!6601 = !DILocation(line: 1197, column: 33, scope: !6600)
!6602 = !DILocation(line: 1197, column: 30, scope: !6600)
!6603 = !DILocation(line: 1197, column: 45, scope: !6600)
!6604 = !DILocation(line: 1197, column: 48, scope: !6605)
!6605 = !DILexicalBlockFile(scope: !6597, file: !1150, discriminator: 2)
!6606 = !DILocation(line: 1197, column: 56, scope: !6605)
!6607 = !DILocation(line: 1197, column: 67, scope: !6605)
!6608 = !DILocation(line: 1197, column: 53, scope: !6605)
!6609 = !DILocation(line: 1197, column: 70, scope: !6605)
!6610 = !DILocation(line: 1197, column: 73, scope: !6611)
!6611 = !DILexicalBlockFile(scope: !6597, file: !1150, discriminator: 3)
!6612 = !DILocation(line: 1197, column: 80, scope: !6611)
!6613 = !DILocation(line: 1197, column: 78, scope: !6611)
!6614 = !DILocation(line: 1197, column: 92, scope: !6611)
!6615 = !DILocation(line: 1197, column: 95, scope: !6616)
!6616 = !DILexicalBlockFile(scope: !6597, file: !1150, discriminator: 4)
!6617 = !DILocation(line: 1197, column: 98, scope: !6616)
!6618 = !DILocation(line: 1197, column: 16, scope: !6616)
!6619 = !DILocalVariable(name: "toprow", scope: !6620, file: !1150, line: 1198, type: !1025)
!6620 = distinct !DILexicalBlock(scope: !6597, file: !1150, line: 1197, column: 109)
!6621 = !DILocation(line: 1198, column: 21, scope: !6620)
!6622 = !DILocation(line: 1198, column: 30, scope: !6620)
!6623 = !DILocation(line: 1198, column: 38, scope: !6620)
!6624 = !DILocation(line: 1198, column: 35, scope: !6620)
!6625 = !DILocation(line: 1198, column: 50, scope: !6620)
!6626 = !DILocation(line: 1198, column: 53, scope: !6627)
!6627 = !DILexicalBlockFile(scope: !6620, file: !1150, discriminator: 1)
!6628 = !DILocation(line: 1198, column: 61, scope: !6627)
!6629 = !DILocation(line: 1198, column: 72, scope: !6627)
!6630 = !DILocation(line: 1198, column: 58, scope: !6627)
!6631 = !DILocation(line: 1198, column: 75, scope: !6627)
!6632 = !DILocation(line: 1198, column: 78, scope: !6633)
!6633 = !DILexicalBlockFile(scope: !6620, file: !1150, discriminator: 2)
!6634 = !DILocation(line: 1198, column: 85, scope: !6633)
!6635 = !DILocation(line: 1198, column: 83, scope: !6633)
!6636 = !DILocation(line: 1198, column: 50, scope: !6637)
!6637 = !DILexicalBlockFile(scope: !6620, file: !1150, discriminator: 3)
!6638 = !DILocation(line: 1198, column: 50, scope: !6639)
!6639 = !DILexicalBlockFile(scope: !6620, file: !1150, discriminator: 4)
!6640 = !DILocation(line: 1198, column: 21, scope: !6639)
!6641 = !DILocalVariable(name: "leftcol", scope: !6620, file: !1150, line: 1199, type: !1025)
!6642 = !DILocation(line: 1199, column: 21, scope: !6620)
!6643 = !DILocation(line: 1199, column: 32, scope: !6620)
!6644 = !DILocation(line: 1199, column: 37, scope: !6620)
!6645 = !DILocation(line: 1199, column: 40, scope: !6627)
!6646 = !DILocation(line: 1199, column: 48, scope: !6627)
!6647 = !DILocation(line: 1199, column: 45, scope: !6627)
!6648 = !DILocation(line: 1199, column: 60, scope: !6627)
!6649 = !DILocation(line: 1199, column: 63, scope: !6633)
!6650 = !DILocation(line: 1199, column: 71, scope: !6633)
!6651 = !DILocation(line: 1199, column: 68, scope: !6633)
!6652 = !DILocation(line: 1199, column: 37, scope: !6637)
!6653 = !DILocation(line: 1199, column: 37, scope: !6639)
!6654 = !DILocation(line: 1199, column: 21, scope: !6639)
!6655 = !DILocation(line: 1200, column: 24, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6620, file: !1150, line: 1200, column: 17)
!6657 = !DILocation(line: 1200, column: 22, scope: !6656)
!6658 = !DILocation(line: 1200, column: 29, scope: !6659)
!6659 = !DILexicalBlockFile(scope: !6660, file: !1150, discriminator: 1)
!6660 = distinct !DILexicalBlock(scope: !6656, file: !1150, line: 1200, column: 17)
!6661 = !DILocation(line: 1200, column: 33, scope: !6659)
!6662 = !DILocation(line: 1200, column: 31, scope: !6659)
!6663 = !DILocation(line: 1200, column: 17, scope: !6659)
!6664 = !DILocalVariable(name: "ptr", scope: !6665, file: !1150, line: 1201, type: !1030)
!6665 = distinct !DILexicalBlock(scope: !6660, file: !1150, line: 1200, column: 53)
!6666 = !DILocation(line: 1201, column: 30, scope: !6665)
!6667 = !DILocalVariable(name: "ptr16", scope: !6665, file: !1150, line: 1202, type: !1027)
!6668 = !DILocation(line: 1202, column: 31, scope: !6665)
!6669 = !DILocalVariable(name: "n", scope: !6665, file: !1150, line: 1203, type: !1025)
!6670 = !DILocation(line: 1203, column: 25, scope: !6665)
!6671 = !DILocalVariable(name: "h", scope: !6665, file: !1150, line: 1203, type: !1025)
!6672 = !DILocation(line: 1203, column: 28, scope: !6665)
!6673 = !DILocalVariable(name: "v", scope: !6665, file: !1150, line: 1203, type: !1025)
!6674 = !DILocation(line: 1203, column: 31, scope: !6665)
!6675 = !DILocalVariable(name: "x", scope: !6665, file: !1150, line: 1203, type: !1025)
!6676 = !DILocation(line: 1203, column: 34, scope: !6665)
!6677 = !DILocalVariable(name: "y", scope: !6665, file: !1150, line: 1203, type: !1025)
!6678 = !DILocation(line: 1203, column: 37, scope: !6665)
!6679 = !DILocalVariable(name: "c", scope: !6665, file: !1150, line: 1203, type: !1025)
!6680 = !DILocation(line: 1203, column: 40, scope: !6665)
!6681 = !DILocalVariable(name: "j", scope: !6665, file: !1150, line: 1203, type: !1025)
!6682 = !DILocation(line: 1203, column: 43, scope: !6665)
!6683 = !DILocalVariable(name: "linesize", scope: !6665, file: !1150, line: 1203, type: !1025)
!6684 = !DILocation(line: 1203, column: 46, scope: !6665)
!6685 = !DILocation(line: 1204, column: 38, scope: !6665)
!6686 = !DILocation(line: 1204, column: 25, scope: !6665)
!6687 = !DILocation(line: 1204, column: 28, scope: !6665)
!6688 = !DILocation(line: 1204, column: 23, scope: !6665)
!6689 = !DILocation(line: 1205, column: 39, scope: !6665)
!6690 = !DILocation(line: 1205, column: 25, scope: !6665)
!6691 = !DILocation(line: 1205, column: 28, scope: !6665)
!6692 = !DILocation(line: 1205, column: 23, scope: !6665)
!6693 = !DILocation(line: 1206, column: 37, scope: !6665)
!6694 = !DILocation(line: 1206, column: 25, scope: !6665)
!6695 = !DILocation(line: 1206, column: 28, scope: !6665)
!6696 = !DILocation(line: 1206, column: 23, scope: !6665)
!6697 = !DILocation(line: 1207, column: 37, scope: !6665)
!6698 = !DILocation(line: 1207, column: 25, scope: !6665)
!6699 = !DILocation(line: 1207, column: 28, scope: !6665)
!6700 = !DILocation(line: 1207, column: 23, scope: !6665)
!6701 = !DILocation(line: 1208, column: 23, scope: !6665)
!6702 = !DILocation(line: 1209, column: 23, scope: !6665)
!6703 = !DILocation(line: 1210, column: 43, scope: !6665)
!6704 = !DILocation(line: 1210, column: 31, scope: !6665)
!6705 = !DILocation(line: 1210, column: 34, scope: !6665)
!6706 = !DILocation(line: 1210, column: 29, scope: !6665)
!6707 = !DILocation(line: 1212, column: 24, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6665, file: !1150, line: 1212, column: 24)
!6709 = !DILocation(line: 1212, column: 28, scope: !6708)
!6710 = !DILocation(line: 1212, column: 24, scope: !6665)
!6711 = !DILocation(line: 1212, column: 41, scope: !6712)
!6712 = !DILexicalBlockFile(scope: !6708, file: !1150, discriminator: 1)
!6713 = !DILocation(line: 1212, column: 32, scope: !6712)
!6714 = !DILocation(line: 1214, column: 26, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6665, file: !1150, line: 1214, column: 21)
!6716 = !DILocation(line: 1214, column: 25, scope: !6715)
!6717 = !DILocation(line: 1214, column: 30, scope: !6718)
!6718 = !DILexicalBlockFile(scope: !6719, file: !1150, discriminator: 1)
!6719 = distinct !DILexicalBlock(scope: !6715, file: !1150, line: 1214, column: 21)
!6720 = !DILocation(line: 1214, column: 32, scope: !6718)
!6721 = !DILocation(line: 1214, column: 31, scope: !6718)
!6722 = !DILocation(line: 1214, column: 21, scope: !6718)
!6723 = !DILocalVariable(name: "pred", scope: !6724, file: !1150, line: 1215, type: !1025)
!6724 = distinct !DILexicalBlock(scope: !6719, file: !1150, line: 1214, column: 40)
!6725 = !DILocation(line: 1215, column: 29, scope: !6724)
!6726 = !DILocalVariable(name: "dc", scope: !6724, file: !1150, line: 1215, type: !1025)
!6727 = !DILocation(line: 1215, column: 35, scope: !6724)
!6728 = !DILocation(line: 1217, column: 46, scope: !6724)
!6729 = !DILocation(line: 1217, column: 61, scope: !6724)
!6730 = !DILocation(line: 1217, column: 49, scope: !6724)
!6731 = !DILocation(line: 1217, column: 52, scope: !6724)
!6732 = !DILocation(line: 1217, column: 30, scope: !6724)
!6733 = !DILocation(line: 1217, column: 28, scope: !6724)
!6734 = !DILocation(line: 1218, column: 28, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6724, file: !1150, line: 1218, column: 28)
!6736 = !DILocation(line: 1218, column: 31, scope: !6735)
!6737 = !DILocation(line: 1218, column: 28, scope: !6724)
!6738 = !DILocation(line: 1219, column: 29, scope: !6735)
!6739 = !DILocation(line: 1220, column: 30, scope: !6740)
!6740 = distinct !DILexicalBlock(scope: !6724, file: !1150, line: 1220, column: 30)
!6741 = !DILocation(line: 1220, column: 34, scope: !6740)
!6742 = !DILocation(line: 1220, column: 32, scope: !6740)
!6743 = !DILocation(line: 1220, column: 41, scope: !6740)
!6744 = !DILocation(line: 1220, column: 39, scope: !6740)
!6745 = !DILocation(line: 1220, column: 46, scope: !6740)
!6746 = !DILocation(line: 1220, column: 49, scope: !6740)
!6747 = !DILocation(line: 1220, column: 43, scope: !6740)
!6748 = !DILocation(line: 1221, column: 29, scope: !6740)
!6749 = !DILocation(line: 1221, column: 32, scope: !6750)
!6750 = !DILexicalBlockFile(scope: !6740, file: !1150, discriminator: 1)
!6751 = !DILocation(line: 1221, column: 36, scope: !6750)
!6752 = !DILocation(line: 1221, column: 34, scope: !6750)
!6753 = !DILocation(line: 1221, column: 43, scope: !6750)
!6754 = !DILocation(line: 1221, column: 41, scope: !6750)
!6755 = !DILocation(line: 1221, column: 48, scope: !6750)
!6756 = !DILocation(line: 1221, column: 51, scope: !6750)
!6757 = !DILocation(line: 1221, column: 45, scope: !6750)
!6758 = !DILocation(line: 1220, column: 30, scope: !6759)
!6759 = !DILexicalBlockFile(scope: !6724, file: !1150, discriminator: 1)
!6760 = !DILocation(line: 1223, column: 25, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6740, file: !1150, line: 1221, column: 59)
!6762 = !DILocation(line: 1223, column: 36, scope: !6763)
!6763 = !DILexicalBlockFile(scope: !6764, file: !1150, discriminator: 1)
!6764 = distinct !DILexicalBlock(scope: !6740, file: !1150, line: 1223, column: 36)
!6765 = !DILocation(line: 1223, column: 40, scope: !6763)
!6766 = !DILocation(line: 1224, column: 56, scope: !6767)
!6767 = distinct !DILexicalBlock(scope: !6764, file: !1150, line: 1223, column: 45)
!6768 = !DILocation(line: 1224, column: 35, scope: !6767)
!6769 = !DILocation(line: 1224, column: 38, scope: !6767)
!6770 = !DILocation(line: 1224, column: 51, scope: !6767)
!6771 = !DILocation(line: 1224, column: 62, scope: !6767)
!6772 = !DILocation(line: 1224, column: 74, scope: !6767)
!6773 = !DILocation(line: 1224, column: 78, scope: !6767)
!6774 = !DILocation(line: 1224, column: 76, scope: !6767)
!6775 = !DILocation(line: 1224, column: 85, scope: !6767)
!6776 = !DILocation(line: 1224, column: 83, scope: !6767)
!6777 = !DILocation(line: 1224, column: 71, scope: !6767)
!6778 = !DILocation(line: 1224, column: 59, scope: !6767)
!6779 = !DILocation(line: 1224, column: 92, scope: !6767)
!6780 = !DILocation(line: 1224, column: 96, scope: !6767)
!6781 = !DILocation(line: 1224, column: 94, scope: !6767)
!6782 = !DILocation(line: 1224, column: 103, scope: !6767)
!6783 = !DILocation(line: 1224, column: 101, scope: !6767)
!6784 = !DILocation(line: 1224, column: 89, scope: !6767)
!6785 = !DILocation(line: 1224, column: 33, scope: !6767)
!6786 = !DILocation(line: 1225, column: 32, scope: !6787)
!6787 = distinct !DILexicalBlock(scope: !6767, file: !1150, line: 1225, column: 32)
!6788 = !DILocation(line: 1225, column: 33, scope: !6787)
!6789 = !DILocation(line: 1225, column: 37, scope: !6787)
!6790 = !DILocation(line: 1225, column: 40, scope: !6791)
!6791 = !DILexicalBlockFile(scope: !6787, file: !1150, discriminator: 1)
!6792 = !DILocation(line: 1225, column: 32, scope: !6791)
!6793 = !DILocation(line: 1226, column: 36, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6795, file: !1150, line: 1226, column: 36)
!6795 = distinct !DILexicalBlock(scope: !6787, file: !1150, line: 1225, column: 47)
!6796 = !DILocation(line: 1226, column: 37, scope: !6794)
!6797 = !DILocation(line: 1226, column: 41, scope: !6794)
!6798 = !DILocation(line: 1226, column: 44, scope: !6799)
!6799 = !DILexicalBlockFile(scope: !6794, file: !1150, discriminator: 1)
!6800 = !DILocation(line: 1226, column: 36, scope: !6799)
!6801 = !DILocation(line: 1227, column: 49, scope: !6802)
!6802 = distinct !DILexicalBlock(scope: !6794, file: !1150, line: 1226, column: 52)
!6803 = !DILocation(line: 1227, column: 54, scope: !6802)
!6804 = !DILocation(line: 1227, column: 45, scope: !6802)
!6805 = !DILocation(line: 1227, column: 41, scope: !6802)
!6806 = !DILocation(line: 1228, column: 33, scope: !6802)
!6807 = !DILocation(line: 1229, column: 43, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6794, file: !1150, line: 1228, column: 38)
!6809 = !DILocation(line: 1229, column: 41, scope: !6808)
!6810 = !DILocation(line: 1231, column: 29, scope: !6795)
!6811 = !DILocation(line: 1232, column: 36, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6813, file: !1150, line: 1232, column: 36)
!6813 = distinct !DILexicalBlock(scope: !6787, file: !1150, line: 1231, column: 34)
!6814 = !DILocation(line: 1232, column: 37, scope: !6812)
!6815 = !DILocation(line: 1232, column: 41, scope: !6812)
!6816 = !DILocation(line: 1232, column: 44, scope: !6817)
!6817 = !DILexicalBlockFile(scope: !6812, file: !1150, discriminator: 1)
!6818 = !DILocation(line: 1232, column: 36, scope: !6817)
!6819 = !DILocation(line: 1233, column: 48, scope: !6820)
!6820 = distinct !DILexicalBlock(scope: !6812, file: !1150, line: 1232, column: 52)
!6821 = !DILocation(line: 1233, column: 47, scope: !6820)
!6822 = !DILocation(line: 1233, column: 43, scope: !6820)
!6823 = !DILocation(line: 1233, column: 41, scope: !6820)
!6824 = !DILocation(line: 1234, column: 33, scope: !6820)
!6825 = !DILocation(line: 1235, column: 44, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6812, file: !1150, line: 1234, column: 38)
!6827 = !DILocation(line: 1235, column: 37, scope: !6826)
!6828 = !DILocation(line: 1235, column: 68, scope: !6829)
!6829 = !DILexicalBlockFile(scope: !6830, file: !1150, discriminator: 1)
!6830 = distinct !DILexicalBlock(scope: !6826, file: !1150, line: 1235, column: 54)
!6831 = !DILocation(line: 1235, column: 73, scope: !6829)
!6832 = !DILocation(line: 1235, column: 94, scope: !6833)
!6833 = !DILexicalBlockFile(scope: !6830, file: !1150, discriminator: 2)
!6834 = !DILocation(line: 1235, column: 92, scope: !6833)
!6835 = !DILocation(line: 1235, column: 103, scope: !6833)
!6836 = !DILocation(line: 1235, column: 129, scope: !6837)
!6837 = !DILexicalBlockFile(scope: !6830, file: !1150, discriminator: 3)
!6838 = !DILocation(line: 1235, column: 128, scope: !6837)
!6839 = !DILocation(line: 1235, column: 124, scope: !6837)
!6840 = !DILocation(line: 1235, column: 122, scope: !6837)
!6841 = !DILocation(line: 1235, column: 140, scope: !6837)
!6842 = !DILocation(line: 1235, column: 166, scope: !6843)
!6843 = !DILexicalBlockFile(scope: !6830, file: !1150, discriminator: 4)
!6844 = !DILocation(line: 1235, column: 165, scope: !6843)
!6845 = !DILocation(line: 1235, column: 174, scope: !6843)
!6846 = !DILocation(line: 1235, column: 161, scope: !6843)
!6847 = !DILocation(line: 1235, column: 159, scope: !6843)
!6848 = !DILocation(line: 1235, column: 179, scope: !6843)
!6849 = !DILocation(line: 1235, column: 200, scope: !6850)
!6850 = !DILexicalBlockFile(scope: !6830, file: !1150, discriminator: 5)
!6851 = !DILocation(line: 1235, column: 215, scope: !6850)
!6852 = !DILocation(line: 1235, column: 214, scope: !6850)
!6853 = !DILocation(line: 1235, column: 210, scope: !6850)
!6854 = !DILocation(line: 1235, column: 208, scope: !6850)
!6855 = !DILocation(line: 1235, column: 232, scope: !6850)
!6856 = !DILocation(line: 1235, column: 231, scope: !6850)
!6857 = !DILocation(line: 1235, column: 240, scope: !6850)
!6858 = !DILocation(line: 1235, column: 227, scope: !6850)
!6859 = !DILocation(line: 1235, column: 225, scope: !6850)
!6860 = !DILocation(line: 1235, column: 198, scope: !6850)
!6861 = !DILocation(line: 1235, column: 245, scope: !6850)
!6862 = !DILocation(line: 1235, column: 266, scope: !6863)
!6863 = !DILexicalBlockFile(scope: !6830, file: !1150, discriminator: 6)
!6864 = !DILocation(line: 1235, column: 283, scope: !6863)
!6865 = !DILocation(line: 1235, column: 282, scope: !6863)
!6866 = !DILocation(line: 1235, column: 278, scope: !6863)
!6867 = !DILocation(line: 1235, column: 300, scope: !6863)
!6868 = !DILocation(line: 1235, column: 299, scope: !6863)
!6869 = !DILocation(line: 1235, column: 308, scope: !6863)
!6870 = !DILocation(line: 1235, column: 295, scope: !6863)
!6871 = !DILocation(line: 1235, column: 293, scope: !6863)
!6872 = !DILocation(line: 1235, column: 312, scope: !6863)
!6873 = !DILocation(line: 1235, column: 274, scope: !6863)
!6874 = !DILocation(line: 1235, column: 264, scope: !6863)
!6875 = !DILocation(line: 1235, column: 318, scope: !6863)
!6876 = !DILocation(line: 1235, column: 344, scope: !6877)
!6877 = !DILexicalBlockFile(scope: !6830, file: !1150, discriminator: 7)
!6878 = !DILocation(line: 1235, column: 343, scope: !6877)
!6879 = !DILocation(line: 1235, column: 339, scope: !6877)
!6880 = !DILocation(line: 1235, column: 358, scope: !6877)
!6881 = !DILocation(line: 1235, column: 373, scope: !6877)
!6882 = !DILocation(line: 1235, column: 372, scope: !6877)
!6883 = !DILocation(line: 1235, column: 381, scope: !6877)
!6884 = !DILocation(line: 1235, column: 368, scope: !6877)
!6885 = !DILocation(line: 1235, column: 366, scope: !6877)
!6886 = !DILocation(line: 1235, column: 385, scope: !6877)
!6887 = !DILocation(line: 1235, column: 354, scope: !6877)
!6888 = !DILocation(line: 1235, column: 337, scope: !6877)
!6889 = !DILocation(line: 1235, column: 391, scope: !6877)
!6890 = !DILocation(line: 1235, column: 391, scope: !6891)
!6891 = !DILexicalBlockFile(scope: !6830, file: !1150, discriminator: 8)
!6892 = !DILocation(line: 1235, column: 422, scope: !6893)
!6893 = !DILexicalBlockFile(scope: !6830, file: !1150, discriminator: 9)
!6894 = !DILocation(line: 1235, column: 437, scope: !6893)
!6895 = !DILocation(line: 1235, column: 436, scope: !6893)
!6896 = !DILocation(line: 1235, column: 432, scope: !6893)
!6897 = !DILocation(line: 1235, column: 430, scope: !6893)
!6898 = !DILocation(line: 1235, column: 447, scope: !6893)
!6899 = !DILocation(line: 1235, column: 419, scope: !6893)
!6900 = !DILocation(line: 1235, column: 452, scope: !6893)
!6901 = !DILocation(line: 1239, column: 33, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6767, file: !1150, line: 1239, column: 33)
!6903 = !DILocation(line: 1239, column: 36, scope: !6902)
!6904 = !DILocation(line: 1239, column: 47, scope: !6902)
!6905 = !DILocation(line: 1239, column: 50, scope: !6906)
!6906 = !DILexicalBlockFile(scope: !6902, file: !1150, discriminator: 1)
!6907 = !DILocation(line: 1239, column: 53, scope: !6906)
!6908 = !DILocation(line: 1239, column: 33, scope: !6906)
!6909 = !DILocation(line: 1240, column: 40, scope: !6902)
!6910 = !DILocation(line: 1240, column: 49, scope: !6902)
!6911 = !DILocation(line: 1240, column: 37, scope: !6902)
!6912 = !DILocation(line: 1240, column: 33, scope: !6902)
!6913 = !DILocation(line: 1241, column: 37, scope: !6767)
!6914 = !DILocation(line: 1241, column: 34, scope: !6767)
!6915 = !DILocation(line: 1242, column: 35, scope: !6767)
!6916 = !DILocation(line: 1242, column: 53, scope: !6767)
!6917 = !DILocation(line: 1242, column: 59, scope: !6767)
!6918 = !DILocation(line: 1242, column: 56, scope: !6767)
!6919 = !DILocation(line: 1242, column: 40, scope: !6767)
!6920 = !DILocation(line: 1242, column: 30, scope: !6767)
!6921 = !DILocation(line: 1242, column: 33, scope: !6767)
!6922 = !DILocation(line: 1243, column: 25, scope: !6767)
!6923 = !DILocation(line: 1244, column: 70, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6764, file: !1150, line: 1243, column: 30)
!6925 = !DILocation(line: 1244, column: 49, scope: !6924)
!6926 = !DILocation(line: 1244, column: 52, scope: !6924)
!6927 = !DILocation(line: 1244, column: 65, scope: !6924)
!6928 = !DILocation(line: 1244, column: 78, scope: !6924)
!6929 = !DILocation(line: 1244, column: 90, scope: !6924)
!6930 = !DILocation(line: 1244, column: 94, scope: !6924)
!6931 = !DILocation(line: 1244, column: 92, scope: !6924)
!6932 = !DILocation(line: 1244, column: 101, scope: !6924)
!6933 = !DILocation(line: 1244, column: 99, scope: !6924)
!6934 = !DILocation(line: 1244, column: 87, scope: !6924)
!6935 = !DILocation(line: 1244, column: 76, scope: !6924)
!6936 = !DILocation(line: 1244, column: 73, scope: !6924)
!6937 = !DILocation(line: 1244, column: 110, scope: !6924)
!6938 = !DILocation(line: 1244, column: 114, scope: !6924)
!6939 = !DILocation(line: 1244, column: 112, scope: !6924)
!6940 = !DILocation(line: 1244, column: 121, scope: !6924)
!6941 = !DILocation(line: 1244, column: 119, scope: !6924)
!6942 = !DILocation(line: 1244, column: 108, scope: !6924)
!6943 = !DILocation(line: 1244, column: 105, scope: !6924)
!6944 = !DILocation(line: 1244, column: 37, scope: !6924)
!6945 = !DILocation(line: 1244, column: 35, scope: !6924)
!6946 = !DILocation(line: 1245, column: 32, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6924, file: !1150, line: 1245, column: 32)
!6948 = !DILocation(line: 1245, column: 33, scope: !6947)
!6949 = !DILocation(line: 1245, column: 37, scope: !6947)
!6950 = !DILocation(line: 1245, column: 40, scope: !6951)
!6951 = !DILexicalBlockFile(scope: !6947, file: !1150, discriminator: 1)
!6952 = !DILocation(line: 1245, column: 32, scope: !6951)
!6953 = !DILocation(line: 1246, column: 36, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6955, file: !1150, line: 1246, column: 36)
!6955 = distinct !DILexicalBlock(scope: !6947, file: !1150, line: 1245, column: 47)
!6956 = !DILocation(line: 1246, column: 37, scope: !6954)
!6957 = !DILocation(line: 1246, column: 41, scope: !6954)
!6958 = !DILocation(line: 1246, column: 44, scope: !6959)
!6959 = !DILexicalBlockFile(scope: !6954, file: !1150, discriminator: 1)
!6960 = !DILocation(line: 1246, column: 36, scope: !6959)
!6961 = !DILocation(line: 1247, column: 49, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6954, file: !1150, line: 1246, column: 52)
!6963 = !DILocation(line: 1247, column: 54, scope: !6962)
!6964 = !DILocation(line: 1247, column: 45, scope: !6962)
!6965 = !DILocation(line: 1247, column: 41, scope: !6962)
!6966 = !DILocation(line: 1248, column: 33, scope: !6962)
!6967 = !DILocation(line: 1249, column: 43, scope: !6968)
!6968 = distinct !DILexicalBlock(scope: !6954, file: !1150, line: 1248, column: 38)
!6969 = !DILocation(line: 1249, column: 41, scope: !6968)
!6970 = !DILocation(line: 1251, column: 29, scope: !6955)
!6971 = !DILocation(line: 1252, column: 36, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6973, file: !1150, line: 1252, column: 36)
!6973 = distinct !DILexicalBlock(scope: !6947, file: !1150, line: 1251, column: 34)
!6974 = !DILocation(line: 1252, column: 37, scope: !6972)
!6975 = !DILocation(line: 1252, column: 41, scope: !6972)
!6976 = !DILocation(line: 1252, column: 44, scope: !6977)
!6977 = !DILexicalBlockFile(scope: !6972, file: !1150, discriminator: 1)
!6978 = !DILocation(line: 1252, column: 36, scope: !6977)
!6979 = !DILocation(line: 1253, column: 50, scope: !6980)
!6980 = distinct !DILexicalBlock(scope: !6972, file: !1150, line: 1252, column: 52)
!6981 = !DILocation(line: 1253, column: 49, scope: !6980)
!6982 = !DILocation(line: 1253, column: 43, scope: !6980)
!6983 = !DILocation(line: 1253, column: 41, scope: !6980)
!6984 = !DILocation(line: 1254, column: 33, scope: !6980)
!6985 = !DILocation(line: 1255, column: 44, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6972, file: !1150, line: 1254, column: 38)
!6987 = !DILocation(line: 1255, column: 37, scope: !6986)
!6988 = !DILocation(line: 1255, column: 68, scope: !6989)
!6989 = !DILexicalBlockFile(scope: !6990, file: !1150, discriminator: 1)
!6990 = distinct !DILexicalBlock(scope: !6986, file: !1150, line: 1255, column: 54)
!6991 = !DILocation(line: 1255, column: 73, scope: !6989)
!6992 = !DILocation(line: 1255, column: 94, scope: !6993)
!6993 = !DILexicalBlockFile(scope: !6990, file: !1150, discriminator: 2)
!6994 = !DILocation(line: 1255, column: 92, scope: !6993)
!6995 = !DILocation(line: 1255, column: 105, scope: !6993)
!6996 = !DILocation(line: 1255, column: 133, scope: !6997)
!6997 = !DILexicalBlockFile(scope: !6990, file: !1150, discriminator: 3)
!6998 = !DILocation(line: 1255, column: 132, scope: !6997)
!6999 = !DILocation(line: 1255, column: 126, scope: !6997)
!7000 = !DILocation(line: 1255, column: 124, scope: !6997)
!7001 = !DILocation(line: 1255, column: 144, scope: !6997)
!7002 = !DILocation(line: 1255, column: 172, scope: !7003)
!7003 = !DILexicalBlockFile(scope: !6990, file: !1150, discriminator: 4)
!7004 = !DILocation(line: 1255, column: 171, scope: !7003)
!7005 = !DILocation(line: 1255, column: 180, scope: !7003)
!7006 = !DILocation(line: 1255, column: 165, scope: !7003)
!7007 = !DILocation(line: 1255, column: 163, scope: !7003)
!7008 = !DILocation(line: 1255, column: 185, scope: !7003)
!7009 = !DILocation(line: 1255, column: 206, scope: !7010)
!7010 = !DILexicalBlockFile(scope: !6990, file: !1150, discriminator: 5)
!7011 = !DILocation(line: 1255, column: 225, scope: !7010)
!7012 = !DILocation(line: 1255, column: 224, scope: !7010)
!7013 = !DILocation(line: 1255, column: 218, scope: !7010)
!7014 = !DILocation(line: 1255, column: 216, scope: !7010)
!7015 = !DILocation(line: 1255, column: 244, scope: !7010)
!7016 = !DILocation(line: 1255, column: 243, scope: !7010)
!7017 = !DILocation(line: 1255, column: 252, scope: !7010)
!7018 = !DILocation(line: 1255, column: 237, scope: !7010)
!7019 = !DILocation(line: 1255, column: 235, scope: !7010)
!7020 = !DILocation(line: 1255, column: 204, scope: !7010)
!7021 = !DILocation(line: 1255, column: 257, scope: !7010)
!7022 = !DILocation(line: 1255, column: 278, scope: !7023)
!7023 = !DILexicalBlockFile(scope: !6990, file: !1150, discriminator: 6)
!7024 = !DILocation(line: 1255, column: 299, scope: !7023)
!7025 = !DILocation(line: 1255, column: 298, scope: !7023)
!7026 = !DILocation(line: 1255, column: 292, scope: !7023)
!7027 = !DILocation(line: 1255, column: 318, scope: !7023)
!7028 = !DILocation(line: 1255, column: 317, scope: !7023)
!7029 = !DILocation(line: 1255, column: 326, scope: !7023)
!7030 = !DILocation(line: 1255, column: 311, scope: !7023)
!7031 = !DILocation(line: 1255, column: 309, scope: !7023)
!7032 = !DILocation(line: 1255, column: 330, scope: !7023)
!7033 = !DILocation(line: 1255, column: 288, scope: !7023)
!7034 = !DILocation(line: 1255, column: 276, scope: !7023)
!7035 = !DILocation(line: 1255, column: 336, scope: !7023)
!7036 = !DILocation(line: 1255, column: 364, scope: !7037)
!7037 = !DILexicalBlockFile(scope: !6990, file: !1150, discriminator: 7)
!7038 = !DILocation(line: 1255, column: 363, scope: !7037)
!7039 = !DILocation(line: 1255, column: 357, scope: !7037)
!7040 = !DILocation(line: 1255, column: 378, scope: !7037)
!7041 = !DILocation(line: 1255, column: 397, scope: !7037)
!7042 = !DILocation(line: 1255, column: 396, scope: !7037)
!7043 = !DILocation(line: 1255, column: 405, scope: !7037)
!7044 = !DILocation(line: 1255, column: 390, scope: !7037)
!7045 = !DILocation(line: 1255, column: 388, scope: !7037)
!7046 = !DILocation(line: 1255, column: 409, scope: !7037)
!7047 = !DILocation(line: 1255, column: 374, scope: !7037)
!7048 = !DILocation(line: 1255, column: 355, scope: !7037)
!7049 = !DILocation(line: 1255, column: 415, scope: !7037)
!7050 = !DILocation(line: 1255, column: 415, scope: !7051)
!7051 = !DILexicalBlockFile(scope: !6990, file: !1150, discriminator: 8)
!7052 = !DILocation(line: 1255, column: 446, scope: !7053)
!7053 = !DILexicalBlockFile(scope: !6990, file: !1150, discriminator: 9)
!7054 = !DILocation(line: 1255, column: 465, scope: !7053)
!7055 = !DILocation(line: 1255, column: 464, scope: !7053)
!7056 = !DILocation(line: 1255, column: 458, scope: !7053)
!7057 = !DILocation(line: 1255, column: 456, scope: !7053)
!7058 = !DILocation(line: 1255, column: 475, scope: !7053)
!7059 = !DILocation(line: 1255, column: 443, scope: !7053)
!7060 = !DILocation(line: 1255, column: 480, scope: !7053)
!7061 = !DILocation(line: 1259, column: 33, scope: !7062)
!7062 = distinct !DILexicalBlock(scope: !6924, file: !1150, line: 1259, column: 33)
!7063 = !DILocation(line: 1259, column: 36, scope: !7062)
!7064 = !DILocation(line: 1259, column: 47, scope: !7062)
!7065 = !DILocation(line: 1259, column: 50, scope: !7066)
!7066 = !DILexicalBlockFile(scope: !7062, file: !1150, discriminator: 1)
!7067 = !DILocation(line: 1259, column: 53, scope: !7066)
!7068 = !DILocation(line: 1259, column: 33, scope: !7066)
!7069 = !DILocation(line: 1260, column: 42, scope: !7062)
!7070 = !DILocation(line: 1260, column: 51, scope: !7062)
!7071 = !DILocation(line: 1260, column: 39, scope: !7062)
!7072 = !DILocation(line: 1260, column: 33, scope: !7062)
!7073 = !DILocation(line: 1261, column: 37, scope: !6924)
!7074 = !DILocation(line: 1261, column: 34, scope: !6924)
!7075 = !DILocation(line: 1262, column: 37, scope: !6924)
!7076 = !DILocation(line: 1262, column: 55, scope: !6924)
!7077 = !DILocation(line: 1262, column: 61, scope: !6924)
!7078 = !DILocation(line: 1262, column: 58, scope: !6924)
!7079 = !DILocation(line: 1262, column: 42, scope: !6924)
!7080 = !DILocation(line: 1262, column: 30, scope: !6924)
!7081 = !DILocation(line: 1262, column: 35, scope: !6924)
!7082 = !DILocation(line: 1264, column: 29, scope: !7083)
!7083 = distinct !DILexicalBlock(scope: !6724, file: !1150, line: 1264, column: 29)
!7084 = !DILocation(line: 1264, column: 36, scope: !7083)
!7085 = !DILocation(line: 1264, column: 33, scope: !7083)
!7086 = !DILocation(line: 1264, column: 29, scope: !6724)
!7087 = !DILocation(line: 1265, column: 31, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7083, file: !1150, line: 1264, column: 39)
!7089 = !DILocation(line: 1266, column: 30, scope: !7088)
!7090 = !DILocation(line: 1267, column: 25, scope: !7088)
!7091 = !DILocation(line: 1268, column: 21, scope: !6724)
!7092 = !DILocation(line: 1214, column: 36, scope: !7093)
!7093 = !DILexicalBlockFile(scope: !6719, file: !1150, discriminator: 2)
!7094 = !DILocation(line: 1214, column: 21, scope: !7093)
!7095 = distinct !{!7095, !7096}
!7096 = !DILocation(line: 1214, column: 21, scope: !6665)
!7097 = !DILocation(line: 1269, column: 17, scope: !6665)
!7098 = !DILocation(line: 1200, column: 49, scope: !7099)
!7099 = !DILexicalBlockFile(scope: !6660, file: !1150, discriminator: 2)
!7100 = !DILocation(line: 1200, column: 17, scope: !7099)
!7101 = distinct !{!7101, !7102}
!7102 = !DILocation(line: 1200, column: 17, scope: !6620)
!7103 = !DILocation(line: 1270, column: 13, scope: !6620)
!7104 = !DILocation(line: 1271, column: 24, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7106, file: !1150, line: 1271, column: 17)
!7106 = distinct !DILexicalBlock(scope: !6597, file: !1150, line: 1270, column: 20)
!7107 = !DILocation(line: 1271, column: 22, scope: !7105)
!7108 = !DILocation(line: 1271, column: 29, scope: !7109)
!7109 = !DILexicalBlockFile(scope: !7110, file: !1150, discriminator: 1)
!7110 = distinct !DILexicalBlock(scope: !7105, file: !1150, line: 1271, column: 17)
!7111 = !DILocation(line: 1271, column: 33, scope: !7109)
!7112 = !DILocation(line: 1271, column: 31, scope: !7109)
!7113 = !DILocation(line: 1271, column: 17, scope: !7109)
!7114 = !DILocalVariable(name: "ptr", scope: !7115, file: !1150, line: 1272, type: !1030)
!7115 = distinct !DILexicalBlock(scope: !7110, file: !1150, line: 1271, column: 53)
!7116 = !DILocation(line: 1272, column: 30, scope: !7115)
!7117 = !DILocalVariable(name: "ptr16", scope: !7115, file: !1150, line: 1273, type: !1027)
!7118 = !DILocation(line: 1273, column: 31, scope: !7115)
!7119 = !DILocalVariable(name: "n", scope: !7115, file: !1150, line: 1274, type: !1025)
!7120 = !DILocation(line: 1274, column: 25, scope: !7115)
!7121 = !DILocalVariable(name: "h", scope: !7115, file: !1150, line: 1274, type: !1025)
!7122 = !DILocation(line: 1274, column: 28, scope: !7115)
!7123 = !DILocalVariable(name: "v", scope: !7115, file: !1150, line: 1274, type: !1025)
!7124 = !DILocation(line: 1274, column: 31, scope: !7115)
!7125 = !DILocalVariable(name: "x", scope: !7115, file: !1150, line: 1274, type: !1025)
!7126 = !DILocation(line: 1274, column: 34, scope: !7115)
!7127 = !DILocalVariable(name: "y", scope: !7115, file: !1150, line: 1274, type: !1025)
!7128 = !DILocation(line: 1274, column: 37, scope: !7115)
!7129 = !DILocalVariable(name: "c", scope: !7115, file: !1150, line: 1274, type: !1025)
!7130 = !DILocation(line: 1274, column: 40, scope: !7115)
!7131 = !DILocalVariable(name: "j", scope: !7115, file: !1150, line: 1274, type: !1025)
!7132 = !DILocation(line: 1274, column: 43, scope: !7115)
!7133 = !DILocalVariable(name: "linesize", scope: !7115, file: !1150, line: 1274, type: !1025)
!7134 = !DILocation(line: 1274, column: 46, scope: !7115)
!7135 = !DILocalVariable(name: "dc", scope: !7115, file: !1150, line: 1274, type: !1025)
!7136 = !DILocation(line: 1274, column: 56, scope: !7115)
!7137 = !DILocation(line: 1275, column: 38, scope: !7115)
!7138 = !DILocation(line: 1275, column: 25, scope: !7115)
!7139 = !DILocation(line: 1275, column: 28, scope: !7115)
!7140 = !DILocation(line: 1275, column: 23, scope: !7115)
!7141 = !DILocation(line: 1276, column: 39, scope: !7115)
!7142 = !DILocation(line: 1276, column: 25, scope: !7115)
!7143 = !DILocation(line: 1276, column: 28, scope: !7115)
!7144 = !DILocation(line: 1276, column: 23, scope: !7115)
!7145 = !DILocation(line: 1277, column: 37, scope: !7115)
!7146 = !DILocation(line: 1277, column: 25, scope: !7115)
!7147 = !DILocation(line: 1277, column: 28, scope: !7115)
!7148 = !DILocation(line: 1277, column: 23, scope: !7115)
!7149 = !DILocation(line: 1278, column: 37, scope: !7115)
!7150 = !DILocation(line: 1278, column: 25, scope: !7115)
!7151 = !DILocation(line: 1278, column: 28, scope: !7115)
!7152 = !DILocation(line: 1278, column: 23, scope: !7115)
!7153 = !DILocation(line: 1279, column: 23, scope: !7115)
!7154 = !DILocation(line: 1280, column: 23, scope: !7115)
!7155 = !DILocation(line: 1281, column: 44, scope: !7115)
!7156 = !DILocation(line: 1281, column: 32, scope: !7115)
!7157 = !DILocation(line: 1281, column: 35, scope: !7115)
!7158 = !DILocation(line: 1281, column: 30, scope: !7115)
!7159 = !DILocation(line: 1283, column: 24, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !7115, file: !1150, line: 1283, column: 24)
!7161 = !DILocation(line: 1283, column: 28, scope: !7160)
!7162 = !DILocation(line: 1283, column: 24, scope: !7115)
!7163 = !DILocation(line: 1283, column: 41, scope: !7164)
!7164 = !DILexicalBlockFile(scope: !7160, file: !1150, discriminator: 1)
!7165 = !DILocation(line: 1283, column: 32, scope: !7164)
!7166 = !DILocation(line: 1285, column: 28, scope: !7167)
!7167 = distinct !DILexicalBlock(scope: !7115, file: !1150, line: 1285, column: 21)
!7168 = !DILocation(line: 1285, column: 26, scope: !7167)
!7169 = !DILocation(line: 1285, column: 33, scope: !7170)
!7170 = !DILexicalBlockFile(scope: !7171, file: !1150, discriminator: 1)
!7171 = distinct !DILexicalBlock(scope: !7167, file: !1150, line: 1285, column: 21)
!7172 = !DILocation(line: 1285, column: 37, scope: !7170)
!7173 = !DILocation(line: 1285, column: 35, scope: !7170)
!7174 = !DILocation(line: 1285, column: 21, scope: !7170)
!7175 = !DILocalVariable(name: "pred", scope: !7176, file: !1150, line: 1286, type: !1025)
!7176 = distinct !DILexicalBlock(scope: !7171, file: !1150, line: 1285, column: 45)
!7177 = !DILocation(line: 1286, column: 29, scope: !7176)
!7178 = !DILocation(line: 1288, column: 46, scope: !7176)
!7179 = !DILocation(line: 1288, column: 61, scope: !7176)
!7180 = !DILocation(line: 1288, column: 49, scope: !7176)
!7181 = !DILocation(line: 1288, column: 52, scope: !7176)
!7182 = !DILocation(line: 1288, column: 30, scope: !7176)
!7183 = !DILocation(line: 1288, column: 28, scope: !7176)
!7184 = !DILocation(line: 1289, column: 28, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7176, file: !1150, line: 1289, column: 28)
!7186 = !DILocation(line: 1289, column: 31, scope: !7185)
!7187 = !DILocation(line: 1289, column: 28, scope: !7176)
!7188 = !DILocation(line: 1290, column: 29, scope: !7185)
!7189 = !DILocation(line: 1291, column: 30, scope: !7190)
!7190 = distinct !DILexicalBlock(scope: !7176, file: !1150, line: 1291, column: 30)
!7191 = !DILocation(line: 1291, column: 34, scope: !7190)
!7192 = !DILocation(line: 1291, column: 32, scope: !7190)
!7193 = !DILocation(line: 1291, column: 41, scope: !7190)
!7194 = !DILocation(line: 1291, column: 39, scope: !7190)
!7195 = !DILocation(line: 1291, column: 46, scope: !7190)
!7196 = !DILocation(line: 1291, column: 49, scope: !7190)
!7197 = !DILocation(line: 1291, column: 43, scope: !7190)
!7198 = !DILocation(line: 1292, column: 29, scope: !7190)
!7199 = !DILocation(line: 1292, column: 32, scope: !7200)
!7200 = !DILexicalBlockFile(scope: !7190, file: !1150, discriminator: 1)
!7201 = !DILocation(line: 1292, column: 36, scope: !7200)
!7202 = !DILocation(line: 1292, column: 34, scope: !7200)
!7203 = !DILocation(line: 1292, column: 43, scope: !7200)
!7204 = !DILocation(line: 1292, column: 41, scope: !7200)
!7205 = !DILocation(line: 1292, column: 48, scope: !7200)
!7206 = !DILocation(line: 1292, column: 51, scope: !7200)
!7207 = !DILocation(line: 1292, column: 45, scope: !7200)
!7208 = !DILocation(line: 1291, column: 30, scope: !7209)
!7209 = !DILexicalBlockFile(scope: !7176, file: !1150, discriminator: 1)
!7210 = !DILocation(line: 1294, column: 25, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7190, file: !1150, line: 1292, column: 59)
!7212 = !DILocation(line: 1294, column: 36, scope: !7213)
!7213 = !DILexicalBlockFile(scope: !7214, file: !1150, discriminator: 1)
!7214 = distinct !DILexicalBlock(scope: !7190, file: !1150, line: 1294, column: 36)
!7215 = !DILocation(line: 1294, column: 40, scope: !7213)
!7216 = !DILocation(line: 1295, column: 56, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7214, file: !1150, line: 1294, column: 45)
!7218 = !DILocation(line: 1295, column: 35, scope: !7217)
!7219 = !DILocation(line: 1295, column: 38, scope: !7217)
!7220 = !DILocation(line: 1295, column: 51, scope: !7217)
!7221 = !DILocation(line: 1296, column: 32, scope: !7217)
!7222 = !DILocation(line: 1296, column: 44, scope: !7217)
!7223 = !DILocation(line: 1296, column: 48, scope: !7217)
!7224 = !DILocation(line: 1296, column: 46, scope: !7217)
!7225 = !DILocation(line: 1296, column: 55, scope: !7217)
!7226 = !DILocation(line: 1296, column: 53, scope: !7217)
!7227 = !DILocation(line: 1296, column: 41, scope: !7217)
!7228 = !DILocation(line: 1295, column: 59, scope: !7217)
!7229 = !DILocation(line: 1297, column: 32, scope: !7217)
!7230 = !DILocation(line: 1297, column: 36, scope: !7217)
!7231 = !DILocation(line: 1297, column: 34, scope: !7217)
!7232 = !DILocation(line: 1297, column: 43, scope: !7217)
!7233 = !DILocation(line: 1297, column: 41, scope: !7217)
!7234 = !DILocation(line: 1296, column: 59, scope: !7217)
!7235 = !DILocation(line: 1295, column: 33, scope: !7217)
!7236 = !DILocation(line: 1298, column: 36, scope: !7217)
!7237 = !DILocation(line: 1298, column: 29, scope: !7217)
!7238 = !DILocation(line: 1298, column: 60, scope: !7239)
!7239 = !DILexicalBlockFile(scope: !7240, file: !1150, discriminator: 1)
!7240 = distinct !DILexicalBlock(scope: !7217, file: !1150, line: 1298, column: 46)
!7241 = !DILocation(line: 1298, column: 65, scope: !7239)
!7242 = !DILocation(line: 1298, column: 86, scope: !7243)
!7243 = !DILexicalBlockFile(scope: !7240, file: !1150, discriminator: 2)
!7244 = !DILocation(line: 1298, column: 84, scope: !7243)
!7245 = !DILocation(line: 1298, column: 95, scope: !7243)
!7246 = !DILocation(line: 1298, column: 121, scope: !7247)
!7247 = !DILexicalBlockFile(scope: !7240, file: !1150, discriminator: 3)
!7248 = !DILocation(line: 1298, column: 120, scope: !7247)
!7249 = !DILocation(line: 1298, column: 116, scope: !7247)
!7250 = !DILocation(line: 1298, column: 114, scope: !7247)
!7251 = !DILocation(line: 1298, column: 132, scope: !7247)
!7252 = !DILocation(line: 1298, column: 158, scope: !7253)
!7253 = !DILexicalBlockFile(scope: !7240, file: !1150, discriminator: 4)
!7254 = !DILocation(line: 1298, column: 157, scope: !7253)
!7255 = !DILocation(line: 1298, column: 166, scope: !7253)
!7256 = !DILocation(line: 1298, column: 153, scope: !7253)
!7257 = !DILocation(line: 1298, column: 151, scope: !7253)
!7258 = !DILocation(line: 1298, column: 171, scope: !7253)
!7259 = !DILocation(line: 1298, column: 192, scope: !7260)
!7260 = !DILexicalBlockFile(scope: !7240, file: !1150, discriminator: 5)
!7261 = !DILocation(line: 1298, column: 207, scope: !7260)
!7262 = !DILocation(line: 1298, column: 206, scope: !7260)
!7263 = !DILocation(line: 1298, column: 202, scope: !7260)
!7264 = !DILocation(line: 1298, column: 200, scope: !7260)
!7265 = !DILocation(line: 1298, column: 224, scope: !7260)
!7266 = !DILocation(line: 1298, column: 223, scope: !7260)
!7267 = !DILocation(line: 1298, column: 232, scope: !7260)
!7268 = !DILocation(line: 1298, column: 219, scope: !7260)
!7269 = !DILocation(line: 1298, column: 217, scope: !7260)
!7270 = !DILocation(line: 1298, column: 190, scope: !7260)
!7271 = !DILocation(line: 1298, column: 237, scope: !7260)
!7272 = !DILocation(line: 1298, column: 258, scope: !7273)
!7273 = !DILexicalBlockFile(scope: !7240, file: !1150, discriminator: 6)
!7274 = !DILocation(line: 1298, column: 275, scope: !7273)
!7275 = !DILocation(line: 1298, column: 274, scope: !7273)
!7276 = !DILocation(line: 1298, column: 270, scope: !7273)
!7277 = !DILocation(line: 1298, column: 292, scope: !7273)
!7278 = !DILocation(line: 1298, column: 291, scope: !7273)
!7279 = !DILocation(line: 1298, column: 300, scope: !7273)
!7280 = !DILocation(line: 1298, column: 287, scope: !7273)
!7281 = !DILocation(line: 1298, column: 285, scope: !7273)
!7282 = !DILocation(line: 1298, column: 304, scope: !7273)
!7283 = !DILocation(line: 1298, column: 266, scope: !7273)
!7284 = !DILocation(line: 1298, column: 256, scope: !7273)
!7285 = !DILocation(line: 1298, column: 310, scope: !7273)
!7286 = !DILocation(line: 1298, column: 336, scope: !7287)
!7287 = !DILexicalBlockFile(scope: !7240, file: !1150, discriminator: 7)
!7288 = !DILocation(line: 1298, column: 335, scope: !7287)
!7289 = !DILocation(line: 1298, column: 331, scope: !7287)
!7290 = !DILocation(line: 1298, column: 350, scope: !7287)
!7291 = !DILocation(line: 1298, column: 365, scope: !7287)
!7292 = !DILocation(line: 1298, column: 364, scope: !7287)
!7293 = !DILocation(line: 1298, column: 373, scope: !7287)
!7294 = !DILocation(line: 1298, column: 360, scope: !7287)
!7295 = !DILocation(line: 1298, column: 358, scope: !7287)
!7296 = !DILocation(line: 1298, column: 377, scope: !7287)
!7297 = !DILocation(line: 1298, column: 346, scope: !7287)
!7298 = !DILocation(line: 1298, column: 329, scope: !7287)
!7299 = !DILocation(line: 1298, column: 383, scope: !7287)
!7300 = !DILocation(line: 1298, column: 383, scope: !7301)
!7301 = !DILexicalBlockFile(scope: !7240, file: !1150, discriminator: 8)
!7302 = !DILocation(line: 1298, column: 414, scope: !7303)
!7303 = !DILexicalBlockFile(scope: !7240, file: !1150, discriminator: 9)
!7304 = !DILocation(line: 1298, column: 429, scope: !7303)
!7305 = !DILocation(line: 1298, column: 428, scope: !7303)
!7306 = !DILocation(line: 1298, column: 424, scope: !7303)
!7307 = !DILocation(line: 1298, column: 422, scope: !7303)
!7308 = !DILocation(line: 1298, column: 439, scope: !7303)
!7309 = !DILocation(line: 1298, column: 411, scope: !7303)
!7310 = !DILocation(line: 1298, column: 444, scope: !7303)
!7311 = !DILocation(line: 1300, column: 37, scope: !7217)
!7312 = !DILocation(line: 1300, column: 34, scope: !7217)
!7313 = !DILocation(line: 1301, column: 36, scope: !7217)
!7314 = !DILocation(line: 1301, column: 54, scope: !7217)
!7315 = !DILocation(line: 1301, column: 60, scope: !7217)
!7316 = !DILocation(line: 1301, column: 57, scope: !7217)
!7317 = !DILocation(line: 1301, column: 41, scope: !7217)
!7318 = !DILocation(line: 1301, column: 30, scope: !7217)
!7319 = !DILocation(line: 1301, column: 34, scope: !7217)
!7320 = !DILocation(line: 1302, column: 25, scope: !7217)
!7321 = !DILocation(line: 1303, column: 70, scope: !7322)
!7322 = distinct !DILexicalBlock(scope: !7214, file: !1150, line: 1302, column: 30)
!7323 = !DILocation(line: 1303, column: 49, scope: !7322)
!7324 = !DILocation(line: 1303, column: 52, scope: !7322)
!7325 = !DILocation(line: 1303, column: 65, scope: !7322)
!7326 = !DILocation(line: 1303, column: 78, scope: !7322)
!7327 = !DILocation(line: 1303, column: 90, scope: !7322)
!7328 = !DILocation(line: 1303, column: 94, scope: !7322)
!7329 = !DILocation(line: 1303, column: 92, scope: !7322)
!7330 = !DILocation(line: 1303, column: 101, scope: !7322)
!7331 = !DILocation(line: 1303, column: 99, scope: !7322)
!7332 = !DILocation(line: 1303, column: 87, scope: !7322)
!7333 = !DILocation(line: 1303, column: 76, scope: !7322)
!7334 = !DILocation(line: 1303, column: 73, scope: !7322)
!7335 = !DILocation(line: 1303, column: 110, scope: !7322)
!7336 = !DILocation(line: 1303, column: 114, scope: !7322)
!7337 = !DILocation(line: 1303, column: 112, scope: !7322)
!7338 = !DILocation(line: 1303, column: 121, scope: !7322)
!7339 = !DILocation(line: 1303, column: 119, scope: !7322)
!7340 = !DILocation(line: 1303, column: 108, scope: !7322)
!7341 = !DILocation(line: 1303, column: 105, scope: !7322)
!7342 = !DILocation(line: 1303, column: 37, scope: !7322)
!7343 = !DILocation(line: 1303, column: 35, scope: !7322)
!7344 = !DILocation(line: 1304, column: 36, scope: !7322)
!7345 = !DILocation(line: 1304, column: 29, scope: !7322)
!7346 = !DILocation(line: 1304, column: 60, scope: !7347)
!7347 = !DILexicalBlockFile(scope: !7348, file: !1150, discriminator: 1)
!7348 = distinct !DILexicalBlock(scope: !7322, file: !1150, line: 1304, column: 46)
!7349 = !DILocation(line: 1304, column: 65, scope: !7347)
!7350 = !DILocation(line: 1304, column: 86, scope: !7351)
!7351 = !DILexicalBlockFile(scope: !7348, file: !1150, discriminator: 2)
!7352 = !DILocation(line: 1304, column: 84, scope: !7351)
!7353 = !DILocation(line: 1304, column: 97, scope: !7351)
!7354 = !DILocation(line: 1304, column: 125, scope: !7355)
!7355 = !DILexicalBlockFile(scope: !7348, file: !1150, discriminator: 3)
!7356 = !DILocation(line: 1304, column: 124, scope: !7355)
!7357 = !DILocation(line: 1304, column: 118, scope: !7355)
!7358 = !DILocation(line: 1304, column: 116, scope: !7355)
!7359 = !DILocation(line: 1304, column: 136, scope: !7355)
!7360 = !DILocation(line: 1304, column: 164, scope: !7361)
!7361 = !DILexicalBlockFile(scope: !7348, file: !1150, discriminator: 4)
!7362 = !DILocation(line: 1304, column: 163, scope: !7361)
!7363 = !DILocation(line: 1304, column: 172, scope: !7361)
!7364 = !DILocation(line: 1304, column: 157, scope: !7361)
!7365 = !DILocation(line: 1304, column: 155, scope: !7361)
!7366 = !DILocation(line: 1304, column: 177, scope: !7361)
!7367 = !DILocation(line: 1304, column: 198, scope: !7368)
!7368 = !DILexicalBlockFile(scope: !7348, file: !1150, discriminator: 5)
!7369 = !DILocation(line: 1304, column: 217, scope: !7368)
!7370 = !DILocation(line: 1304, column: 216, scope: !7368)
!7371 = !DILocation(line: 1304, column: 210, scope: !7368)
!7372 = !DILocation(line: 1304, column: 208, scope: !7368)
!7373 = !DILocation(line: 1304, column: 236, scope: !7368)
!7374 = !DILocation(line: 1304, column: 235, scope: !7368)
!7375 = !DILocation(line: 1304, column: 244, scope: !7368)
!7376 = !DILocation(line: 1304, column: 229, scope: !7368)
!7377 = !DILocation(line: 1304, column: 227, scope: !7368)
!7378 = !DILocation(line: 1304, column: 196, scope: !7368)
!7379 = !DILocation(line: 1304, column: 249, scope: !7368)
!7380 = !DILocation(line: 1304, column: 270, scope: !7381)
!7381 = !DILexicalBlockFile(scope: !7348, file: !1150, discriminator: 6)
!7382 = !DILocation(line: 1304, column: 291, scope: !7381)
!7383 = !DILocation(line: 1304, column: 290, scope: !7381)
!7384 = !DILocation(line: 1304, column: 284, scope: !7381)
!7385 = !DILocation(line: 1304, column: 310, scope: !7381)
!7386 = !DILocation(line: 1304, column: 309, scope: !7381)
!7387 = !DILocation(line: 1304, column: 318, scope: !7381)
!7388 = !DILocation(line: 1304, column: 303, scope: !7381)
!7389 = !DILocation(line: 1304, column: 301, scope: !7381)
!7390 = !DILocation(line: 1304, column: 322, scope: !7381)
!7391 = !DILocation(line: 1304, column: 280, scope: !7381)
!7392 = !DILocation(line: 1304, column: 268, scope: !7381)
!7393 = !DILocation(line: 1304, column: 328, scope: !7381)
!7394 = !DILocation(line: 1304, column: 356, scope: !7395)
!7395 = !DILexicalBlockFile(scope: !7348, file: !1150, discriminator: 7)
!7396 = !DILocation(line: 1304, column: 355, scope: !7395)
!7397 = !DILocation(line: 1304, column: 349, scope: !7395)
!7398 = !DILocation(line: 1304, column: 370, scope: !7395)
!7399 = !DILocation(line: 1304, column: 389, scope: !7395)
!7400 = !DILocation(line: 1304, column: 388, scope: !7395)
!7401 = !DILocation(line: 1304, column: 397, scope: !7395)
!7402 = !DILocation(line: 1304, column: 382, scope: !7395)
!7403 = !DILocation(line: 1304, column: 380, scope: !7395)
!7404 = !DILocation(line: 1304, column: 401, scope: !7395)
!7405 = !DILocation(line: 1304, column: 366, scope: !7395)
!7406 = !DILocation(line: 1304, column: 347, scope: !7395)
!7407 = !DILocation(line: 1304, column: 407, scope: !7395)
!7408 = !DILocation(line: 1304, column: 407, scope: !7409)
!7409 = !DILexicalBlockFile(scope: !7348, file: !1150, discriminator: 8)
!7410 = !DILocation(line: 1304, column: 438, scope: !7411)
!7411 = !DILexicalBlockFile(scope: !7348, file: !1150, discriminator: 9)
!7412 = !DILocation(line: 1304, column: 457, scope: !7411)
!7413 = !DILocation(line: 1304, column: 456, scope: !7411)
!7414 = !DILocation(line: 1304, column: 450, scope: !7411)
!7415 = !DILocation(line: 1304, column: 448, scope: !7411)
!7416 = !DILocation(line: 1304, column: 467, scope: !7411)
!7417 = !DILocation(line: 1304, column: 435, scope: !7411)
!7418 = !DILocation(line: 1304, column: 472, scope: !7411)
!7419 = !DILocation(line: 1306, column: 37, scope: !7322)
!7420 = !DILocation(line: 1306, column: 34, scope: !7322)
!7421 = !DILocation(line: 1307, column: 37, scope: !7322)
!7422 = !DILocation(line: 1307, column: 55, scope: !7322)
!7423 = !DILocation(line: 1307, column: 61, scope: !7322)
!7424 = !DILocation(line: 1307, column: 58, scope: !7322)
!7425 = !DILocation(line: 1307, column: 42, scope: !7322)
!7426 = !DILocation(line: 1307, column: 30, scope: !7322)
!7427 = !DILocation(line: 1307, column: 35, scope: !7322)
!7428 = !DILocation(line: 1310, column: 29, scope: !7429)
!7429 = distinct !DILexicalBlock(scope: !7176, file: !1150, line: 1310, column: 29)
!7430 = !DILocation(line: 1310, column: 36, scope: !7429)
!7431 = !DILocation(line: 1310, column: 33, scope: !7429)
!7432 = !DILocation(line: 1310, column: 29, scope: !7176)
!7433 = !DILocation(line: 1311, column: 31, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !7429, file: !1150, line: 1310, column: 39)
!7435 = !DILocation(line: 1312, column: 30, scope: !7434)
!7436 = !DILocation(line: 1313, column: 25, scope: !7434)
!7437 = !DILocation(line: 1314, column: 21, scope: !7176)
!7438 = !DILocation(line: 1285, column: 41, scope: !7439)
!7439 = !DILexicalBlockFile(scope: !7171, file: !1150, discriminator: 2)
!7440 = !DILocation(line: 1285, column: 21, scope: !7439)
!7441 = distinct !{!7441, !7442}
!7442 = !DILocation(line: 1285, column: 21, scope: !7115)
!7443 = !DILocation(line: 1315, column: 17, scope: !7115)
!7444 = !DILocation(line: 1271, column: 49, scope: !7445)
!7445 = !DILexicalBlockFile(scope: !7110, file: !1150, discriminator: 2)
!7446 = !DILocation(line: 1271, column: 17, scope: !7445)
!7447 = distinct !{!7447, !7448}
!7448 = !DILocation(line: 1271, column: 17, scope: !7106)
!7449 = !DILocation(line: 1317, column: 17, scope: !7450)
!7450 = distinct !DILexicalBlock(scope: !6567, file: !1150, line: 1317, column: 17)
!7451 = !DILocation(line: 1317, column: 20, scope: !7450)
!7452 = !DILocation(line: 1317, column: 37, scope: !7450)
!7453 = !DILocation(line: 1317, column: 43, scope: !7454)
!7454 = !DILexicalBlockFile(scope: !7450, file: !1150, discriminator: 1)
!7455 = !DILocation(line: 1317, column: 46, scope: !7454)
!7456 = !DILocation(line: 1317, column: 41, scope: !7454)
!7457 = !DILocation(line: 1317, column: 17, scope: !7454)
!7458 = !DILocation(line: 1318, column: 33, scope: !7459)
!7459 = distinct !DILexicalBlock(scope: !7450, file: !1150, line: 1317, column: 61)
!7460 = !DILocation(line: 1318, column: 36, scope: !7459)
!7461 = !DILocation(line: 1318, column: 17, scope: !7459)
!7462 = !DILocation(line: 1319, column: 28, scope: !7459)
!7463 = !DILocation(line: 1319, column: 31, scope: !7459)
!7464 = !DILocation(line: 1319, column: 17, scope: !7459)
!7465 = !DILocation(line: 1320, column: 13, scope: !7459)
!7466 = !DILocation(line: 1321, column: 9, scope: !6567)
!7467 = !DILocation(line: 1186, column: 48, scope: !7468)
!7468 = !DILexicalBlockFile(scope: !6560, file: !1150, discriminator: 2)
!7469 = !DILocation(line: 1186, column: 9, scope: !7468)
!7470 = distinct !{!7470, !7471}
!7471 = !DILocation(line: 1186, column: 9, scope: !6556)
!7472 = !DILocation(line: 1322, column: 5, scope: !6556)
!7473 = !DILocation(line: 1185, column: 45, scope: !7474)
!7474 = !DILexicalBlockFile(scope: !6549, file: !1150, discriminator: 2)
!7475 = !DILocation(line: 1185, column: 5, scope: !7474)
!7476 = distinct !{!7476, !7477}
!7477 = !DILocation(line: 1185, column: 5, scope: !6485)
!7478 = !DILocation(line: 1323, column: 5, scope: !6485)
!7479 = !DILocation(line: 1324, column: 1, scope: !6485)
!7480 = distinct !DISubprogram(name: "mjpeg_decode_scan_progressive_ac", scope: !1150, file: !1150, line: 1478, type: !7481, isLocal: true, isDefinition: true, scopeLine: 1480, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!7481 = !DISubroutineType(types: !7482)
!7482 = !{!1025, !1815, !1025, !1025, !1025, !1025}
!7483 = !DILocalVariable(name: "s", arg: 1, scope: !7480, file: !1150, line: 1478, type: !1815)
!7484 = !DILocation(line: 1478, column: 65, scope: !7480)
!7485 = !DILocalVariable(name: "ss", arg: 2, scope: !7480, file: !1150, line: 1478, type: !1025)
!7486 = !DILocation(line: 1478, column: 72, scope: !7480)
!7487 = !DILocalVariable(name: "se", arg: 3, scope: !7480, file: !1150, line: 1479, type: !1025)
!7488 = !DILocation(line: 1479, column: 49, scope: !7480)
!7489 = !DILocalVariable(name: "Ah", arg: 4, scope: !7480, file: !1150, line: 1479, type: !1025)
!7490 = !DILocation(line: 1479, column: 57, scope: !7480)
!7491 = !DILocalVariable(name: "Al", arg: 5, scope: !7480, file: !1150, line: 1479, type: !1025)
!7492 = !DILocation(line: 1479, column: 65, scope: !7480)
!7493 = !DILocalVariable(name: "mb_x", scope: !7480, file: !1150, line: 1481, type: !1025)
!7494 = !DILocation(line: 1481, column: 9, scope: !7480)
!7495 = !DILocalVariable(name: "mb_y", scope: !7480, file: !1150, line: 1481, type: !1025)
!7496 = !DILocation(line: 1481, column: 15, scope: !7480)
!7497 = !DILocalVariable(name: "EOBRUN", scope: !7480, file: !1150, line: 1482, type: !1025)
!7498 = !DILocation(line: 1482, column: 9, scope: !7480)
!7499 = !DILocalVariable(name: "c", scope: !7480, file: !1150, line: 1483, type: !1025)
!7500 = !DILocation(line: 1483, column: 9, scope: !7480)
!7501 = !DILocation(line: 1483, column: 13, scope: !7480)
!7502 = !DILocation(line: 1483, column: 16, scope: !7480)
!7503 = !DILocalVariable(name: "quant_matrix", scope: !7480, file: !1150, line: 1484, type: !1027)
!7504 = !DILocation(line: 1484, column: 15, scope: !7480)
!7505 = !DILocation(line: 1484, column: 48, scope: !7480)
!7506 = !DILocation(line: 1484, column: 51, scope: !7480)
!7507 = !DILocation(line: 1484, column: 30, scope: !7480)
!7508 = !DILocation(line: 1484, column: 33, scope: !7480)
!7509 = !DILocation(line: 1486, column: 5, scope: !7480)
!7510 = distinct !{!7510, !7509}
!7511 = !DILocation(line: 1486, column: 16, scope: !7512)
!7512 = !DILexicalBlockFile(scope: !7513, file: !1150, discriminator: 1)
!7513 = distinct !DILexicalBlock(scope: !7514, file: !1150, line: 1486, column: 14)
!7514 = distinct !DILexicalBlock(scope: !7480, file: !1150, line: 1486, column: 8)
!7515 = !DILocation(line: 1486, column: 18, scope: !7512)
!7516 = !DILocation(line: 1486, column: 22, scope: !7512)
!7517 = !DILocation(line: 1486, column: 25, scope: !7518)
!7518 = !DILexicalBlockFile(scope: !7513, file: !1150, discriminator: 2)
!7519 = !DILocation(line: 1486, column: 27, scope: !7518)
!7520 = !DILocation(line: 1486, column: 31, scope: !7518)
!7521 = !DILocation(line: 1486, column: 34, scope: !7522)
!7522 = !DILexicalBlockFile(scope: !7513, file: !1150, discriminator: 3)
!7523 = !DILocation(line: 1486, column: 36, scope: !7522)
!7524 = !DILocation(line: 1486, column: 14, scope: !7522)
!7525 = !DILocation(line: 1486, column: 44, scope: !7526)
!7526 = !DILexicalBlockFile(scope: !7527, file: !1150, discriminator: 4)
!7527 = distinct !DILexicalBlock(scope: !7513, file: !1150, line: 1486, column: 42)
!7528 = !DILocation(line: 1486, column: 102, scope: !7529)
!7529 = !DILexicalBlockFile(scope: !7526, file: !1150, discriminator: 6)
!7530 = !DILocation(line: 1486, column: 102, scope: !7526)
!7531 = !DILocation(line: 1486, column: 113, scope: !7532)
!7532 = !DILexicalBlockFile(scope: !7514, file: !1150, discriminator: 5)
!7533 = !DILocation(line: 1487, column: 9, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !7480, file: !1150, line: 1487, column: 9)
!7535 = !DILocation(line: 1487, column: 14, scope: !7534)
!7536 = !DILocation(line: 1487, column: 12, scope: !7534)
!7537 = !DILocation(line: 1487, column: 17, scope: !7534)
!7538 = !DILocation(line: 1487, column: 20, scope: !7539)
!7539 = !DILexicalBlockFile(scope: !7534, file: !1150, discriminator: 1)
!7540 = !DILocation(line: 1487, column: 23, scope: !7539)
!7541 = !DILocation(line: 1487, column: 9, scope: !7539)
!7542 = !DILocation(line: 1488, column: 16, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !7534, file: !1150, line: 1487, column: 29)
!7544 = !DILocation(line: 1488, column: 19, scope: !7543)
!7545 = !DILocation(line: 1488, column: 58, scope: !7543)
!7546 = !DILocation(line: 1488, column: 62, scope: !7543)
!7547 = !DILocation(line: 1488, column: 9, scope: !7543)
!7548 = !DILocation(line: 1489, column: 9, scope: !7543)
!7549 = !DILocation(line: 1494, column: 38, scope: !7480)
!7550 = !DILocation(line: 1494, column: 35, scope: !7480)
!7551 = !DILocation(line: 1494, column: 53, scope: !7480)
!7552 = !DILocation(line: 1494, column: 50, scope: !7480)
!7553 = !DILocation(line: 1494, column: 42, scope: !7480)
!7554 = !DILocation(line: 1494, column: 23, scope: !7480)
!7555 = !DILocation(line: 1494, column: 5, scope: !7480)
!7556 = !DILocation(line: 1494, column: 8, scope: !7480)
!7557 = !DILocation(line: 1494, column: 26, scope: !7480)
!7558 = !DILocation(line: 1496, column: 5, scope: !7480)
!7559 = !DILocation(line: 1496, column: 8, scope: !7480)
!7560 = !DILocation(line: 1496, column: 22, scope: !7480)
!7561 = !DILocation(line: 1498, column: 15, scope: !7562)
!7562 = distinct !DILexicalBlock(scope: !7480, file: !1150, line: 1498, column: 5)
!7563 = !DILocation(line: 1498, column: 10, scope: !7562)
!7564 = !DILocation(line: 1498, column: 20, scope: !7565)
!7565 = !DILexicalBlockFile(scope: !7566, file: !1150, discriminator: 1)
!7566 = distinct !DILexicalBlock(scope: !7562, file: !1150, line: 1498, column: 5)
!7567 = !DILocation(line: 1498, column: 27, scope: !7565)
!7568 = !DILocation(line: 1498, column: 30, scope: !7565)
!7569 = !DILocation(line: 1498, column: 25, scope: !7565)
!7570 = !DILocation(line: 1498, column: 5, scope: !7565)
!7571 = !DILocalVariable(name: "block_idx", scope: !7572, file: !1150, line: 1499, type: !1025)
!7572 = distinct !DILexicalBlock(scope: !7566, file: !1150, line: 1498, column: 49)
!7573 = !DILocation(line: 1499, column: 13, scope: !7572)
!7574 = !DILocation(line: 1499, column: 25, scope: !7572)
!7575 = !DILocation(line: 1499, column: 48, scope: !7572)
!7576 = !DILocation(line: 1499, column: 32, scope: !7572)
!7577 = !DILocation(line: 1499, column: 35, scope: !7572)
!7578 = !DILocation(line: 1499, column: 30, scope: !7572)
!7579 = !DILocalVariable(name: "block", scope: !7572, file: !1150, line: 1500, type: !1913)
!7580 = !DILocation(line: 1500, column: 19, scope: !7572)
!7581 = !DILocation(line: 1500, column: 46, scope: !7572)
!7582 = !DILocation(line: 1500, column: 33, scope: !7572)
!7583 = !DILocation(line: 1500, column: 43, scope: !7572)
!7584 = !DILocation(line: 1500, column: 36, scope: !7572)
!7585 = !DILocalVariable(name: "last_nnz", scope: !7572, file: !1150, line: 1501, type: !1030)
!7586 = !DILocation(line: 1501, column: 18, scope: !7572)
!7587 = !DILocation(line: 1501, column: 45, scope: !7572)
!7588 = !DILocation(line: 1501, column: 30, scope: !7572)
!7589 = !DILocation(line: 1501, column: 42, scope: !7572)
!7590 = !DILocation(line: 1501, column: 33, scope: !7572)
!7591 = !DILocation(line: 1502, column: 28, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7572, file: !1150, line: 1502, column: 13)
!7593 = !DILocation(line: 1502, column: 31, scope: !7592)
!7594 = !DILocation(line: 1502, column: 13, scope: !7592)
!7595 = !DILocation(line: 1502, column: 35, scope: !7592)
!7596 = !DILocation(line: 1502, column: 13, scope: !7572)
!7597 = !DILocation(line: 1503, column: 20, scope: !7598)
!7598 = distinct !DILexicalBlock(scope: !7592, file: !1150, line: 1502, column: 41)
!7599 = !DILocation(line: 1503, column: 23, scope: !7598)
!7600 = !DILocation(line: 1503, column: 13, scope: !7598)
!7601 = !DILocation(line: 1504, column: 13, scope: !7598)
!7602 = !DILocation(line: 1506, column: 19, scope: !7603)
!7603 = distinct !DILexicalBlock(scope: !7572, file: !1150, line: 1506, column: 9)
!7604 = !DILocation(line: 1506, column: 14, scope: !7603)
!7605 = !DILocation(line: 1506, column: 24, scope: !7606)
!7606 = !DILexicalBlockFile(scope: !7607, file: !1150, discriminator: 1)
!7607 = distinct !DILexicalBlock(scope: !7603, file: !1150, line: 1506, column: 9)
!7608 = !DILocation(line: 1506, column: 31, scope: !7606)
!7609 = !DILocation(line: 1506, column: 34, scope: !7606)
!7610 = !DILocation(line: 1506, column: 29, scope: !7606)
!7611 = !DILocation(line: 1506, column: 9, scope: !7606)
!7612 = !DILocalVariable(name: "ret", scope: !7613, file: !1150, line: 1507, type: !1025)
!7613 = distinct !DILexicalBlock(scope: !7607, file: !1150, line: 1506, column: 73)
!7614 = !DILocation(line: 1507, column: 21, scope: !7613)
!7615 = !DILocation(line: 1508, column: 21, scope: !7616)
!7616 = distinct !DILexicalBlock(scope: !7613, file: !1150, line: 1508, column: 21)
!7617 = !DILocation(line: 1508, column: 24, scope: !7616)
!7618 = !DILocation(line: 1508, column: 41, scope: !7616)
!7619 = !DILocation(line: 1508, column: 45, scope: !7620)
!7620 = !DILexicalBlockFile(scope: !7616, file: !1150, discriminator: 1)
!7621 = !DILocation(line: 1508, column: 48, scope: !7620)
!7622 = !DILocation(line: 1508, column: 21, scope: !7620)
!7623 = !DILocation(line: 1509, column: 40, scope: !7616)
!7624 = !DILocation(line: 1509, column: 43, scope: !7616)
!7625 = !DILocation(line: 1509, column: 21, scope: !7616)
!7626 = !DILocation(line: 1509, column: 24, scope: !7616)
!7627 = !DILocation(line: 1509, column: 38, scope: !7616)
!7628 = !DILocation(line: 1511, column: 21, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7613, file: !1150, line: 1511, column: 21)
!7630 = !DILocation(line: 1511, column: 21, scope: !7613)
!7631 = !DILocation(line: 1512, column: 51, scope: !7629)
!7632 = !DILocation(line: 1512, column: 55, scope: !7629)
!7633 = !DILocation(line: 1512, column: 54, scope: !7629)
!7634 = !DILocation(line: 1512, column: 62, scope: !7629)
!7635 = !DILocation(line: 1512, column: 72, scope: !7629)
!7636 = !DILocation(line: 1512, column: 75, scope: !7629)
!7637 = !DILocation(line: 1513, column: 51, scope: !7629)
!7638 = !DILocation(line: 1513, column: 65, scope: !7629)
!7639 = !DILocation(line: 1513, column: 69, scope: !7629)
!7640 = !DILocation(line: 1513, column: 73, scope: !7629)
!7641 = !DILocation(line: 1512, column: 27, scope: !7629)
!7642 = !DILocation(line: 1512, column: 25, scope: !7629)
!7643 = !DILocation(line: 1512, column: 21, scope: !7629)
!7644 = !DILocation(line: 1515, column: 52, scope: !7629)
!7645 = !DILocation(line: 1515, column: 56, scope: !7629)
!7646 = !DILocation(line: 1515, column: 55, scope: !7629)
!7647 = !DILocation(line: 1515, column: 63, scope: !7629)
!7648 = !DILocation(line: 1515, column: 73, scope: !7629)
!7649 = !DILocation(line: 1515, column: 76, scope: !7629)
!7650 = !DILocation(line: 1516, column: 52, scope: !7629)
!7651 = !DILocation(line: 1516, column: 66, scope: !7629)
!7652 = !DILocation(line: 1516, column: 70, scope: !7629)
!7653 = !DILocation(line: 1516, column: 74, scope: !7629)
!7654 = !DILocation(line: 1515, column: 27, scope: !7629)
!7655 = !DILocation(line: 1515, column: 25, scope: !7629)
!7656 = !DILocation(line: 1517, column: 21, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7613, file: !1150, line: 1517, column: 21)
!7658 = !DILocation(line: 1517, column: 25, scope: !7657)
!7659 = !DILocation(line: 1517, column: 21, scope: !7613)
!7660 = !DILocation(line: 1518, column: 28, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !7657, file: !1150, line: 1517, column: 30)
!7662 = !DILocation(line: 1518, column: 31, scope: !7661)
!7663 = !DILocation(line: 1519, column: 49, scope: !7661)
!7664 = !DILocation(line: 1519, column: 55, scope: !7661)
!7665 = !DILocation(line: 1518, column: 21, scope: !7661)
!7666 = !DILocation(line: 1520, column: 21, scope: !7661)
!7667 = !DILocation(line: 1523, column: 29, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !7613, file: !1150, line: 1523, column: 17)
!7669 = !DILocation(line: 1523, column: 17, scope: !7668)
!7670 = !DILocation(line: 1523, column: 17, scope: !7613)
!7671 = !DILocation(line: 1524, column: 24, scope: !7668)
!7672 = !DILocation(line: 1524, column: 17, scope: !7668)
!7673 = !DILocation(line: 1525, column: 9, scope: !7613)
!7674 = !DILocation(line: 1506, column: 48, scope: !7675)
!7675 = !DILexicalBlockFile(scope: !7607, file: !1150, discriminator: 2)
!7676 = !DILocation(line: 1506, column: 57, scope: !7675)
!7677 = !DILocation(line: 1506, column: 69, scope: !7675)
!7678 = !DILocation(line: 1506, column: 9, scope: !7675)
!7679 = distinct !{!7679, !7680}
!7680 = !DILocation(line: 1506, column: 9, scope: !7572)
!7681 = !DILocation(line: 1526, column: 5, scope: !7572)
!7682 = !DILocation(line: 1498, column: 45, scope: !7683)
!7683 = !DILexicalBlockFile(scope: !7566, file: !1150, discriminator: 2)
!7684 = !DILocation(line: 1498, column: 5, scope: !7683)
!7685 = distinct !{!7685, !7686}
!7686 = !DILocation(line: 1498, column: 5, scope: !7480)
!7687 = !DILocation(line: 1527, column: 5, scope: !7480)
!7688 = !DILocation(line: 1528, column: 1, scope: !7480)
!7689 = distinct !DISubprogram(name: "mjpeg_decode_scan", scope: !1150, file: !1150, line: 1357, type: !7690, isLocal: true, isDefinition: true, scopeLine: 1361, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!7690 = !DISubroutineType(types: !7691)
!7691 = !{!1025, !1815, !1025, !1025, !1025, !1146, !1025, !1460}
!7692 = !DILocalVariable(name: "s", arg: 1, scope: !7693, file: !1150, line: 1326, type: !1815)
!7693 = distinct !DISubprogram(name: "mjpeg_copy_block", scope: !1150, file: !1150, line: 1326, type: !7694, isLocal: true, isDefinition: true, scopeLine: 1329, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!7694 = !DISubroutineType(types: !7695)
!7695 = !{null, !1815, !1030, !1146, !1025, !1025}
!7696 = !DILocation(line: 1326, column: 88, scope: !7693, inlinedAt: !7697)
!7697 = distinct !DILocation(line: 1428, column: 33, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7699, file: !1150, line: 1427, column: 33)
!7699 = distinct !DILexicalBlock(scope: !7700, file: !1150, line: 1426, column: 38)
!7700 = distinct !DILexicalBlock(scope: !7701, file: !1150, line: 1426, column: 29)
!7701 = distinct !DILexicalBlock(scope: !7702, file: !1150, line: 1425, column: 42)
!7702 = distinct !DILexicalBlock(scope: !7703, file: !1150, line: 1425, column: 25)
!7703 = distinct !DILexicalBlock(scope: !7704, file: !1150, line: 1414, column: 41)
!7704 = distinct !DILexicalBlock(scope: !7705, file: !1150, line: 1414, column: 17)
!7705 = distinct !DILexicalBlock(scope: !7706, file: !1150, line: 1414, column: 17)
!7706 = distinct !DILexicalBlock(scope: !7707, file: !1150, line: 1404, column: 49)
!7707 = distinct !DILexicalBlock(scope: !7708, file: !1150, line: 1404, column: 13)
!7708 = distinct !DILexicalBlock(scope: !7709, file: !1150, line: 1404, column: 13)
!7709 = distinct !DILexicalBlock(scope: !7710, file: !1150, line: 1393, column: 52)
!7710 = distinct !DILexicalBlock(scope: !7711, file: !1150, line: 1393, column: 9)
!7711 = distinct !DILexicalBlock(scope: !7712, file: !1150, line: 1393, column: 9)
!7712 = distinct !DILexicalBlock(scope: !7713, file: !1150, line: 1392, column: 49)
!7713 = distinct !DILexicalBlock(scope: !7714, file: !1150, line: 1392, column: 5)
!7714 = distinct !DILexicalBlock(scope: !7689, file: !1150, line: 1392, column: 5)
!7715 = !DILocalVariable(name: "dst", arg: 2, scope: !7693, file: !1150, line: 1327, type: !1030)
!7716 = !DILocation(line: 1327, column: 56, scope: !7693, inlinedAt: !7697)
!7717 = !DILocalVariable(name: "src", arg: 3, scope: !7693, file: !1150, line: 1327, type: !1146)
!7718 = !DILocation(line: 1327, column: 76, scope: !7693, inlinedAt: !7697)
!7719 = !DILocalVariable(name: "linesize", arg: 4, scope: !7693, file: !1150, line: 1328, type: !1025)
!7720 = !DILocation(line: 1328, column: 51, scope: !7693, inlinedAt: !7697)
!7721 = !DILocalVariable(name: "lowres", arg: 5, scope: !7693, file: !1150, line: 1328, type: !1025)
!7722 = !DILocation(line: 1328, column: 65, scope: !7693, inlinedAt: !7697)
!7723 = !DILocalVariable(name: "s", arg: 1, scope: !7689, file: !1150, line: 1357, type: !1815)
!7724 = !DILocation(line: 1357, column: 50, scope: !7689)
!7725 = !DILocalVariable(name: "nb_components", arg: 2, scope: !7689, file: !1150, line: 1357, type: !1025)
!7726 = !DILocation(line: 1357, column: 57, scope: !7689)
!7727 = !DILocalVariable(name: "Ah", arg: 3, scope: !7689, file: !1150, line: 1357, type: !1025)
!7728 = !DILocation(line: 1357, column: 76, scope: !7689)
!7729 = !DILocalVariable(name: "Al", arg: 4, scope: !7689, file: !1150, line: 1358, type: !1025)
!7730 = !DILocation(line: 1358, column: 34, scope: !7689)
!7731 = !DILocalVariable(name: "mb_bitmask", arg: 5, scope: !7689, file: !1150, line: 1358, type: !1146)
!7732 = !DILocation(line: 1358, column: 53, scope: !7689)
!7733 = !DILocalVariable(name: "mb_bitmask_size", arg: 6, scope: !7689, file: !1150, line: 1359, type: !1025)
!7734 = !DILocation(line: 1359, column: 34, scope: !7689)
!7735 = !DILocalVariable(name: "reference", arg: 7, scope: !7689, file: !1150, line: 1360, type: !1460)
!7736 = !DILocation(line: 1360, column: 45, scope: !7689)
!7737 = !DILocalVariable(name: "i", scope: !7689, file: !1150, line: 1362, type: !1025)
!7738 = !DILocation(line: 1362, column: 9, scope: !7689)
!7739 = !DILocalVariable(name: "mb_x", scope: !7689, file: !1150, line: 1362, type: !1025)
!7740 = !DILocation(line: 1362, column: 12, scope: !7689)
!7741 = !DILocalVariable(name: "mb_y", scope: !7689, file: !1150, line: 1362, type: !1025)
!7742 = !DILocation(line: 1362, column: 18, scope: !7689)
!7743 = !DILocalVariable(name: "chroma_h_shift", scope: !7689, file: !1150, line: 1362, type: !1025)
!7744 = !DILocation(line: 1362, column: 24, scope: !7689)
!7745 = !DILocalVariable(name: "chroma_v_shift", scope: !7689, file: !1150, line: 1362, type: !1025)
!7746 = !DILocation(line: 1362, column: 40, scope: !7689)
!7747 = !DILocalVariable(name: "chroma_width", scope: !7689, file: !1150, line: 1362, type: !1025)
!7748 = !DILocation(line: 1362, column: 56, scope: !7689)
!7749 = !DILocalVariable(name: "chroma_height", scope: !7689, file: !1150, line: 1362, type: !1025)
!7750 = !DILocation(line: 1362, column: 70, scope: !7689)
!7751 = !DILocalVariable(name: "data", scope: !7689, file: !1150, line: 1363, type: !1761)
!7752 = !DILocation(line: 1363, column: 14, scope: !7689)
!7753 = !DILocalVariable(name: "reference_data", scope: !7689, file: !1150, line: 1364, type: !7754)
!7754 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1146, size: 256, align: 64, elements: !1299)
!7755 = !DILocation(line: 1364, column: 20, scope: !7689)
!7756 = !DILocalVariable(name: "linesize", scope: !7689, file: !1150, line: 1365, type: !1306)
!7757 = !DILocation(line: 1365, column: 9, scope: !7689)
!7758 = !DILocalVariable(name: "mb_bitmask_gb", scope: !7689, file: !1150, line: 1366, type: !1824)
!7759 = !DILocation(line: 1366, column: 19, scope: !7689)
!7760 = !DILocalVariable(name: "bytes_per_pixel", scope: !7689, file: !1150, line: 1367, type: !1025)
!7761 = !DILocation(line: 1367, column: 9, scope: !7689)
!7762 = !DILocation(line: 1367, column: 32, scope: !7689)
!7763 = !DILocation(line: 1367, column: 35, scope: !7689)
!7764 = !DILocation(line: 1367, column: 40, scope: !7689)
!7765 = !DILocation(line: 1367, column: 29, scope: !7689)
!7766 = !DILocation(line: 1369, column: 9, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7689, file: !1150, line: 1369, column: 9)
!7768 = !DILocation(line: 1369, column: 9, scope: !7689)
!7769 = !DILocation(line: 1370, column: 13, scope: !7770)
!7770 = distinct !DILexicalBlock(scope: !7771, file: !1150, line: 1370, column: 13)
!7771 = distinct !DILexicalBlock(scope: !7767, file: !1150, line: 1369, column: 21)
!7772 = !DILocation(line: 1370, column: 33, scope: !7770)
!7773 = !DILocation(line: 1370, column: 36, scope: !7770)
!7774 = !DILocation(line: 1370, column: 47, scope: !7770)
!7775 = !DILocation(line: 1370, column: 50, scope: !7770)
!7776 = !DILocation(line: 1370, column: 45, scope: !7770)
!7777 = !DILocation(line: 1370, column: 60, scope: !7770)
!7778 = !DILocation(line: 1370, column: 64, scope: !7770)
!7779 = !DILocation(line: 1370, column: 29, scope: !7770)
!7780 = !DILocation(line: 1370, column: 13, scope: !7771)
!7781 = !DILocation(line: 1371, column: 20, scope: !7782)
!7782 = distinct !DILexicalBlock(scope: !7770, file: !1150, line: 1370, column: 69)
!7783 = !DILocation(line: 1371, column: 23, scope: !7782)
!7784 = !DILocation(line: 1371, column: 13, scope: !7782)
!7785 = !DILocation(line: 1372, column: 13, scope: !7782)
!7786 = !DILocation(line: 1374, column: 39, scope: !7771)
!7787 = !DILocation(line: 1374, column: 51, scope: !7771)
!7788 = !DILocation(line: 1374, column: 54, scope: !7771)
!7789 = !DILocation(line: 1374, column: 65, scope: !7771)
!7790 = !DILocation(line: 1374, column: 68, scope: !7771)
!7791 = !DILocation(line: 1374, column: 63, scope: !7771)
!7792 = !DILocation(line: 1374, column: 9, scope: !7771)
!7793 = !DILocation(line: 1375, column: 5, scope: !7771)
!7794 = !DILocation(line: 1377, column: 5, scope: !7689)
!7795 = !DILocation(line: 1377, column: 8, scope: !7689)
!7796 = !DILocation(line: 1377, column: 22, scope: !7689)
!7797 = !DILocation(line: 1379, column: 38, scope: !7689)
!7798 = !DILocation(line: 1379, column: 41, scope: !7689)
!7799 = !DILocation(line: 1379, column: 48, scope: !7689)
!7800 = !DILocation(line: 1379, column: 5, scope: !7689)
!7801 = !DILocation(line: 1381, column: 66, scope: !7689)
!7802 = !DILocation(line: 1381, column: 69, scope: !7689)
!7803 = !DILocation(line: 1381, column: 64, scope: !7689)
!7804 = !DILocation(line: 1381, column: 81, scope: !7689)
!7805 = !DILocation(line: 1381, column: 77, scope: !7689)
!7806 = !DILocation(line: 1381, column: 61, scope: !7689)
!7807 = !DILocation(line: 1381, column: 18, scope: !7689)
!7808 = !DILocation(line: 1382, column: 67, scope: !7689)
!7809 = !DILocation(line: 1382, column: 70, scope: !7689)
!7810 = !DILocation(line: 1382, column: 65, scope: !7689)
!7811 = !DILocation(line: 1382, column: 83, scope: !7689)
!7812 = !DILocation(line: 1382, column: 79, scope: !7689)
!7813 = !DILocation(line: 1382, column: 62, scope: !7689)
!7814 = !DILocation(line: 1382, column: 19, scope: !7689)
!7815 = !DILocation(line: 1384, column: 12, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7689, file: !1150, line: 1384, column: 5)
!7817 = !DILocation(line: 1384, column: 10, scope: !7816)
!7818 = !DILocation(line: 1384, column: 17, scope: !7819)
!7819 = !DILexicalBlockFile(scope: !7820, file: !1150, discriminator: 1)
!7820 = distinct !DILexicalBlock(scope: !7816, file: !1150, line: 1384, column: 5)
!7821 = !DILocation(line: 1384, column: 21, scope: !7819)
!7822 = !DILocation(line: 1384, column: 19, scope: !7819)
!7823 = !DILocation(line: 1384, column: 5, scope: !7819)
!7824 = !DILocalVariable(name: "c", scope: !7825, file: !1150, line: 1385, type: !1025)
!7825 = distinct !DILexicalBlock(scope: !7820, file: !1150, line: 1384, column: 41)
!7826 = !DILocation(line: 1385, column: 13, scope: !7825)
!7827 = !DILocation(line: 1385, column: 31, scope: !7825)
!7828 = !DILocation(line: 1385, column: 17, scope: !7825)
!7829 = !DILocation(line: 1385, column: 20, scope: !7825)
!7830 = !DILocation(line: 1386, column: 40, scope: !7825)
!7831 = !DILocation(line: 1386, column: 19, scope: !7825)
!7832 = !DILocation(line: 1386, column: 22, scope: !7825)
!7833 = !DILocation(line: 1386, column: 35, scope: !7825)
!7834 = !DILocation(line: 1386, column: 14, scope: !7825)
!7835 = !DILocation(line: 1386, column: 9, scope: !7825)
!7836 = !DILocation(line: 1386, column: 17, scope: !7825)
!7837 = !DILocation(line: 1387, column: 29, scope: !7825)
!7838 = !DILocation(line: 1387, column: 57, scope: !7839)
!7839 = !DILexicalBlockFile(scope: !7825, file: !1150, discriminator: 1)
!7840 = !DILocation(line: 1387, column: 41, scope: !7839)
!7841 = !DILocation(line: 1387, column: 52, scope: !7839)
!7842 = !DILocation(line: 1387, column: 29, scope: !7839)
!7843 = !DILocation(line: 1387, column: 29, scope: !7844)
!7844 = !DILexicalBlockFile(scope: !7825, file: !1150, discriminator: 2)
!7845 = !DILocation(line: 1387, column: 29, scope: !7846)
!7846 = !DILexicalBlockFile(scope: !7825, file: !1150, discriminator: 3)
!7847 = !DILocation(line: 1387, column: 24, scope: !7846)
!7848 = !DILocation(line: 1387, column: 9, scope: !7846)
!7849 = !DILocation(line: 1387, column: 27, scope: !7846)
!7850 = !DILocation(line: 1388, column: 35, scope: !7825)
!7851 = !DILocation(line: 1388, column: 23, scope: !7825)
!7852 = !DILocation(line: 1388, column: 26, scope: !7825)
!7853 = !DILocation(line: 1388, column: 18, scope: !7825)
!7854 = !DILocation(line: 1388, column: 9, scope: !7825)
!7855 = !DILocation(line: 1388, column: 21, scope: !7825)
!7856 = !DILocation(line: 1389, column: 27, scope: !7825)
!7857 = !DILocation(line: 1389, column: 9, scope: !7825)
!7858 = !DILocation(line: 1389, column: 12, scope: !7825)
!7859 = !DILocation(line: 1389, column: 30, scope: !7825)
!7860 = !DILocation(line: 1390, column: 5, scope: !7825)
!7861 = !DILocation(line: 1384, column: 37, scope: !7862)
!7862 = !DILexicalBlockFile(scope: !7820, file: !1150, discriminator: 2)
!7863 = !DILocation(line: 1384, column: 5, scope: !7862)
!7864 = distinct !{!7864, !7865}
!7865 = !DILocation(line: 1384, column: 5, scope: !7689)
!7866 = !DILocation(line: 1392, column: 15, scope: !7714)
!7867 = !DILocation(line: 1392, column: 10, scope: !7714)
!7868 = !DILocation(line: 1392, column: 20, scope: !7869)
!7869 = !DILexicalBlockFile(scope: !7713, file: !1150, discriminator: 1)
!7870 = !DILocation(line: 1392, column: 27, scope: !7869)
!7871 = !DILocation(line: 1392, column: 30, scope: !7869)
!7872 = !DILocation(line: 1392, column: 25, scope: !7869)
!7873 = !DILocation(line: 1392, column: 5, scope: !7869)
!7874 = !DILocation(line: 1393, column: 19, scope: !7711)
!7875 = !DILocation(line: 1393, column: 14, scope: !7711)
!7876 = !DILocation(line: 1393, column: 24, scope: !7877)
!7877 = !DILexicalBlockFile(scope: !7710, file: !1150, discriminator: 1)
!7878 = !DILocation(line: 1393, column: 31, scope: !7877)
!7879 = !DILocation(line: 1393, column: 34, scope: !7877)
!7880 = !DILocation(line: 1393, column: 29, scope: !7877)
!7881 = !DILocation(line: 1393, column: 9, scope: !7877)
!7882 = !DILocalVariable(name: "copy_mb", scope: !7709, file: !1150, line: 1394, type: !1170)
!7883 = !DILocation(line: 1394, column: 23, scope: !7709)
!7884 = !DILocation(line: 1394, column: 33, scope: !7709)
!7885 = !DILocation(line: 1394, column: 44, scope: !7709)
!7886 = !DILocation(line: 1394, column: 48, scope: !7887)
!7887 = !DILexicalBlockFile(scope: !7709, file: !1150, discriminator: 1)
!7888 = !DILocation(line: 1394, column: 47, scope: !7887)
!7889 = !DILocation(line: 1394, column: 44, scope: !7890)
!7890 = !DILexicalBlockFile(scope: !7709, file: !1150, discriminator: 2)
!7891 = !DILocation(line: 1394, column: 23, scope: !7890)
!7892 = !DILocation(line: 1396, column: 17, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7709, file: !1150, line: 1396, column: 17)
!7894 = !DILocation(line: 1396, column: 20, scope: !7893)
!7895 = !DILocation(line: 1396, column: 37, scope: !7893)
!7896 = !DILocation(line: 1396, column: 41, scope: !7897)
!7897 = !DILexicalBlockFile(scope: !7893, file: !1150, discriminator: 1)
!7898 = !DILocation(line: 1396, column: 44, scope: !7897)
!7899 = !DILocation(line: 1396, column: 17, scope: !7897)
!7900 = !DILocation(line: 1397, column: 36, scope: !7893)
!7901 = !DILocation(line: 1397, column: 39, scope: !7893)
!7902 = !DILocation(line: 1397, column: 17, scope: !7893)
!7903 = !DILocation(line: 1397, column: 20, scope: !7893)
!7904 = !DILocation(line: 1397, column: 34, scope: !7893)
!7905 = !DILocation(line: 1399, column: 32, scope: !7906)
!7906 = distinct !DILexicalBlock(scope: !7709, file: !1150, line: 1399, column: 17)
!7907 = !DILocation(line: 1399, column: 35, scope: !7906)
!7908 = !DILocation(line: 1399, column: 17, scope: !7906)
!7909 = !DILocation(line: 1399, column: 39, scope: !7906)
!7910 = !DILocation(line: 1399, column: 17, scope: !7709)
!7911 = !DILocation(line: 1400, column: 24, scope: !7912)
!7912 = distinct !DILexicalBlock(scope: !7906, file: !1150, line: 1399, column: 44)
!7913 = !DILocation(line: 1400, column: 27, scope: !7912)
!7914 = !DILocation(line: 1401, column: 40, scope: !7912)
!7915 = !DILocation(line: 1401, column: 43, scope: !7912)
!7916 = !DILocation(line: 1401, column: 25, scope: !7912)
!7917 = !DILocation(line: 1401, column: 24, scope: !7912)
!7918 = !DILocation(line: 1400, column: 17, scope: !7912)
!7919 = !DILocation(line: 1402, column: 17, scope: !7912)
!7920 = !DILocation(line: 1404, column: 20, scope: !7708)
!7921 = !DILocation(line: 1404, column: 18, scope: !7708)
!7922 = !DILocation(line: 1404, column: 25, scope: !7923)
!7923 = !DILexicalBlockFile(scope: !7707, file: !1150, discriminator: 1)
!7924 = !DILocation(line: 1404, column: 29, scope: !7923)
!7925 = !DILocation(line: 1404, column: 27, scope: !7923)
!7926 = !DILocation(line: 1404, column: 13, scope: !7923)
!7927 = !DILocalVariable(name: "ptr", scope: !7706, file: !1150, line: 1405, type: !1030)
!7928 = !DILocation(line: 1405, column: 26, scope: !7706)
!7929 = !DILocalVariable(name: "n", scope: !7706, file: !1150, line: 1406, type: !1025)
!7930 = !DILocation(line: 1406, column: 21, scope: !7706)
!7931 = !DILocalVariable(name: "h", scope: !7706, file: !1150, line: 1406, type: !1025)
!7932 = !DILocation(line: 1406, column: 24, scope: !7706)
!7933 = !DILocalVariable(name: "v", scope: !7706, file: !1150, line: 1406, type: !1025)
!7934 = !DILocation(line: 1406, column: 27, scope: !7706)
!7935 = !DILocalVariable(name: "x", scope: !7706, file: !1150, line: 1406, type: !1025)
!7936 = !DILocation(line: 1406, column: 30, scope: !7706)
!7937 = !DILocalVariable(name: "y", scope: !7706, file: !1150, line: 1406, type: !1025)
!7938 = !DILocation(line: 1406, column: 33, scope: !7706)
!7939 = !DILocalVariable(name: "c", scope: !7706, file: !1150, line: 1406, type: !1025)
!7940 = !DILocation(line: 1406, column: 36, scope: !7706)
!7941 = !DILocalVariable(name: "j", scope: !7706, file: !1150, line: 1406, type: !1025)
!7942 = !DILocation(line: 1406, column: 39, scope: !7706)
!7943 = !DILocalVariable(name: "block_offset", scope: !7706, file: !1150, line: 1407, type: !1025)
!7944 = !DILocation(line: 1407, column: 21, scope: !7706)
!7945 = !DILocation(line: 1408, column: 34, scope: !7706)
!7946 = !DILocation(line: 1408, column: 21, scope: !7706)
!7947 = !DILocation(line: 1408, column: 24, scope: !7706)
!7948 = !DILocation(line: 1408, column: 19, scope: !7706)
!7949 = !DILocation(line: 1409, column: 35, scope: !7706)
!7950 = !DILocation(line: 1409, column: 21, scope: !7706)
!7951 = !DILocation(line: 1409, column: 24, scope: !7706)
!7952 = !DILocation(line: 1409, column: 19, scope: !7706)
!7953 = !DILocation(line: 1410, column: 33, scope: !7706)
!7954 = !DILocation(line: 1410, column: 21, scope: !7706)
!7955 = !DILocation(line: 1410, column: 24, scope: !7706)
!7956 = !DILocation(line: 1410, column: 19, scope: !7706)
!7957 = !DILocation(line: 1411, column: 33, scope: !7706)
!7958 = !DILocation(line: 1411, column: 21, scope: !7706)
!7959 = !DILocation(line: 1411, column: 24, scope: !7706)
!7960 = !DILocation(line: 1411, column: 19, scope: !7706)
!7961 = !DILocation(line: 1412, column: 19, scope: !7706)
!7962 = !DILocation(line: 1413, column: 19, scope: !7706)
!7963 = !DILocation(line: 1414, column: 24, scope: !7705)
!7964 = !DILocation(line: 1414, column: 22, scope: !7705)
!7965 = !DILocation(line: 1414, column: 29, scope: !7966)
!7966 = !DILexicalBlockFile(scope: !7704, file: !1150, discriminator: 1)
!7967 = !DILocation(line: 1414, column: 33, scope: !7966)
!7968 = !DILocation(line: 1414, column: 31, scope: !7966)
!7969 = !DILocation(line: 1414, column: 17, scope: !7966)
!7970 = !DILocation(line: 1415, column: 48, scope: !7703)
!7971 = !DILocation(line: 1415, column: 39, scope: !7703)
!7972 = !DILocation(line: 1415, column: 54, scope: !7703)
!7973 = !DILocation(line: 1415, column: 58, scope: !7703)
!7974 = !DILocation(line: 1415, column: 56, scope: !7703)
!7975 = !DILocation(line: 1415, column: 65, scope: !7703)
!7976 = !DILocation(line: 1415, column: 63, scope: !7703)
!7977 = !DILocation(line: 1415, column: 51, scope: !7703)
!7978 = !DILocation(line: 1415, column: 68, scope: !7703)
!7979 = !DILocation(line: 1416, column: 39, scope: !7703)
!7980 = !DILocation(line: 1416, column: 43, scope: !7703)
!7981 = !DILocation(line: 1416, column: 41, scope: !7703)
!7982 = !DILocation(line: 1416, column: 50, scope: !7703)
!7983 = !DILocation(line: 1416, column: 48, scope: !7703)
!7984 = !DILocation(line: 1416, column: 53, scope: !7703)
!7985 = !DILocation(line: 1416, column: 59, scope: !7703)
!7986 = !DILocation(line: 1416, column: 57, scope: !7703)
!7987 = !DILocation(line: 1415, column: 73, scope: !7703)
!7988 = !DILocation(line: 1416, column: 79, scope: !7703)
!7989 = !DILocation(line: 1416, column: 82, scope: !7703)
!7990 = !DILocation(line: 1416, column: 89, scope: !7703)
!7991 = !DILocation(line: 1416, column: 76, scope: !7703)
!7992 = !DILocation(line: 1415, column: 34, scope: !7703)
!7993 = !DILocation(line: 1418, column: 25, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7703, file: !1150, line: 1418, column: 25)
!7995 = !DILocation(line: 1418, column: 28, scope: !7994)
!7996 = !DILocation(line: 1418, column: 39, scope: !7994)
!7997 = !DILocation(line: 1418, column: 42, scope: !7998)
!7998 = !DILexicalBlockFile(scope: !7994, file: !1150, discriminator: 1)
!7999 = !DILocation(line: 1418, column: 45, scope: !7998)
!8000 = !DILocation(line: 1418, column: 25, scope: !7998)
!8001 = !DILocation(line: 1419, column: 50, scope: !7994)
!8002 = !DILocation(line: 1419, column: 41, scope: !7994)
!8003 = !DILocation(line: 1419, column: 53, scope: !7994)
!8004 = !DILocation(line: 1419, column: 38, scope: !7994)
!8005 = !DILocation(line: 1419, column: 25, scope: !7994)
!8006 = !DILocation(line: 1420, column: 29, scope: !8007)
!8007 = distinct !DILexicalBlock(scope: !7703, file: !1150, line: 1420, column: 26)
!8008 = !DILocation(line: 1420, column: 33, scope: !8007)
!8009 = !DILocation(line: 1420, column: 31, scope: !8007)
!8010 = !DILocation(line: 1420, column: 40, scope: !8007)
!8011 = !DILocation(line: 1420, column: 38, scope: !8007)
!8012 = !DILocation(line: 1420, column: 27, scope: !8007)
!8013 = !DILocation(line: 1420, column: 47, scope: !8007)
!8014 = !DILocation(line: 1420, column: 49, scope: !8007)
!8015 = !DILocation(line: 1420, column: 55, scope: !8007)
!8016 = !DILocation(line: 1420, column: 59, scope: !8017)
!8017 = !DILexicalBlockFile(scope: !8007, file: !1150, discriminator: 1)
!8018 = !DILocation(line: 1420, column: 61, scope: !8017)
!8019 = !DILocation(line: 1420, column: 46, scope: !8017)
!8020 = !DILocation(line: 1420, column: 69, scope: !8021)
!8021 = !DILexicalBlockFile(scope: !8007, file: !1150, discriminator: 2)
!8022 = !DILocation(line: 1420, column: 46, scope: !8021)
!8023 = !DILocation(line: 1420, column: 84, scope: !8024)
!8024 = !DILexicalBlockFile(scope: !8007, file: !1150, discriminator: 3)
!8025 = !DILocation(line: 1420, column: 87, scope: !8024)
!8026 = !DILocation(line: 1420, column: 46, scope: !8024)
!8027 = !DILocation(line: 1420, column: 46, scope: !8028)
!8028 = !DILexicalBlockFile(scope: !8007, file: !1150, discriminator: 4)
!8029 = !DILocation(line: 1420, column: 43, scope: !8028)
!8030 = !DILocation(line: 1421, column: 25, scope: !8007)
!8031 = !DILocation(line: 1421, column: 31, scope: !8017)
!8032 = !DILocation(line: 1421, column: 35, scope: !8017)
!8033 = !DILocation(line: 1421, column: 33, scope: !8017)
!8034 = !DILocation(line: 1421, column: 42, scope: !8017)
!8035 = !DILocation(line: 1421, column: 40, scope: !8017)
!8036 = !DILocation(line: 1421, column: 29, scope: !8017)
!8037 = !DILocation(line: 1421, column: 49, scope: !8017)
!8038 = !DILocation(line: 1421, column: 51, scope: !8017)
!8039 = !DILocation(line: 1421, column: 57, scope: !8017)
!8040 = !DILocation(line: 1421, column: 61, scope: !8021)
!8041 = !DILocation(line: 1421, column: 63, scope: !8021)
!8042 = !DILocation(line: 1421, column: 48, scope: !8021)
!8043 = !DILocation(line: 1421, column: 71, scope: !8024)
!8044 = !DILocation(line: 1421, column: 48, scope: !8024)
!8045 = !DILocation(line: 1421, column: 87, scope: !8028)
!8046 = !DILocation(line: 1421, column: 90, scope: !8028)
!8047 = !DILocation(line: 1421, column: 48, scope: !8028)
!8048 = !DILocation(line: 1421, column: 48, scope: !8049)
!8049 = !DILexicalBlockFile(scope: !8007, file: !1150, discriminator: 5)
!8050 = !DILocation(line: 1421, column: 45, scope: !8049)
!8051 = !DILocation(line: 1420, column: 26, scope: !8052)
!8052 = !DILexicalBlockFile(scope: !7703, file: !1150, discriminator: 5)
!8053 = !DILocation(line: 1422, column: 36, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !8007, file: !1150, line: 1421, column: 99)
!8055 = !DILocation(line: 1422, column: 31, scope: !8054)
!8056 = !DILocation(line: 1422, column: 41, scope: !8054)
!8057 = !DILocation(line: 1422, column: 39, scope: !8054)
!8058 = !DILocation(line: 1422, column: 29, scope: !8054)
!8059 = !DILocation(line: 1423, column: 21, scope: !8054)
!8060 = !DILocation(line: 1424, column: 29, scope: !8007)
!8061 = !DILocation(line: 1425, column: 26, scope: !7702)
!8062 = !DILocation(line: 1425, column: 29, scope: !7702)
!8063 = !DILocation(line: 1425, column: 25, scope: !7703)
!8064 = !DILocation(line: 1426, column: 29, scope: !7700)
!8065 = !DILocation(line: 1426, column: 29, scope: !7701)
!8066 = !DILocation(line: 1427, column: 33, scope: !7698)
!8067 = !DILocation(line: 1427, column: 33, scope: !7699)
!8068 = !DILocation(line: 1428, column: 50, scope: !7698)
!8069 = !DILocation(line: 1428, column: 53, scope: !7698)
!8070 = !DILocation(line: 1428, column: 73, scope: !7698)
!8071 = !DILocation(line: 1428, column: 58, scope: !7698)
!8072 = !DILocation(line: 1428, column: 78, scope: !7698)
!8073 = !DILocation(line: 1428, column: 76, scope: !7698)
!8074 = !DILocation(line: 1429, column: 58, scope: !7698)
!8075 = !DILocation(line: 1429, column: 49, scope: !7698)
!8076 = !DILocation(line: 1429, column: 62, scope: !7698)
!8077 = !DILocation(line: 1429, column: 65, scope: !7698)
!8078 = !DILocation(line: 1429, column: 72, scope: !7698)
!8079 = !DILocation(line: 1428, column: 33, scope: !7698)
!8080 = !DILocation(line: 1330, column: 13, scope: !7693, inlinedAt: !7697)
!8081 = !DILocation(line: 1330, column: 5, scope: !7693, inlinedAt: !7697)
!8082 = !DILocation(line: 1331, column: 13, scope: !8083, inlinedAt: !7697)
!8083 = distinct !DILexicalBlock(scope: !7693, file: !1150, line: 1330, column: 21)
!8084 = !DILocation(line: 1331, column: 16, scope: !8083, inlinedAt: !7697)
!8085 = !DILocation(line: 1331, column: 21, scope: !8083, inlinedAt: !7697)
!8086 = !DILocation(line: 1331, column: 42, scope: !8083, inlinedAt: !7697)
!8087 = !DILocation(line: 1331, column: 47, scope: !8083, inlinedAt: !7697)
!8088 = !DILocation(line: 1331, column: 52, scope: !8083, inlinedAt: !7697)
!8089 = !DILocation(line: 1332, column: 9, scope: !8083, inlinedAt: !7697)
!8090 = !DILocation(line: 1333, column: 25, scope: !8083, inlinedAt: !7697)
!8091 = !DILocation(line: 1333, column: 30, scope: !8083, inlinedAt: !7697)
!8092 = !DILocation(line: 1333, column: 35, scope: !8083, inlinedAt: !7697)
!8093 = !DILocation(line: 1333, column: 45, scope: !8083, inlinedAt: !7697)
!8094 = !DILocation(line: 1333, column: 13, scope: !8083, inlinedAt: !7697)
!8095 = !DILocation(line: 1334, column: 9, scope: !8083, inlinedAt: !7697)
!8096 = !DILocation(line: 1335, column: 25, scope: !8083, inlinedAt: !7697)
!8097 = !DILocation(line: 1335, column: 30, scope: !8083, inlinedAt: !7697)
!8098 = !DILocation(line: 1335, column: 35, scope: !8083, inlinedAt: !7697)
!8099 = !DILocation(line: 1335, column: 45, scope: !8083, inlinedAt: !7697)
!8100 = !DILocation(line: 1335, column: 13, scope: !8083, inlinedAt: !7697)
!8101 = !DILocation(line: 1336, column: 9, scope: !8083, inlinedAt: !7697)
!8102 = !DILocation(line: 1337, column: 21, scope: !8083, inlinedAt: !7697)
!8103 = !DILocation(line: 1337, column: 20, scope: !8083, inlinedAt: !7697)
!8104 = !DILocation(line: 1337, column: 14, scope: !8083, inlinedAt: !7697)
!8105 = !DILocation(line: 1337, column: 18, scope: !8083, inlinedAt: !7697)
!8106 = !DILocation(line: 1338, column: 9, scope: !8083, inlinedAt: !7697)
!8107 = !DILocation(line: 1431, column: 25, scope: !7699)
!8108 = !DILocation(line: 1432, column: 29, scope: !8109)
!8109 = distinct !DILexicalBlock(scope: !7700, file: !1150, line: 1431, column: 32)
!8110 = !DILocation(line: 1432, column: 32, scope: !8109)
!8111 = !DILocation(line: 1432, column: 37, scope: !8109)
!8112 = !DILocation(line: 1432, column: 49, scope: !8109)
!8113 = !DILocation(line: 1432, column: 52, scope: !8109)
!8114 = !DILocation(line: 1433, column: 46, scope: !8115)
!8115 = distinct !DILexicalBlock(scope: !8109, file: !1150, line: 1433, column: 33)
!8116 = !DILocation(line: 1433, column: 49, scope: !8115)
!8117 = !DILocation(line: 1433, column: 52, scope: !8115)
!8118 = !DILocation(line: 1433, column: 59, scope: !8115)
!8119 = !DILocation(line: 1434, column: 58, scope: !8115)
!8120 = !DILocation(line: 1434, column: 46, scope: !8115)
!8121 = !DILocation(line: 1434, column: 49, scope: !8115)
!8122 = !DILocation(line: 1434, column: 74, scope: !8115)
!8123 = !DILocation(line: 1434, column: 62, scope: !8115)
!8124 = !DILocation(line: 1434, column: 65, scope: !8115)
!8125 = !DILocation(line: 1435, column: 80, scope: !8115)
!8126 = !DILocation(line: 1435, column: 64, scope: !8115)
!8127 = !DILocation(line: 1435, column: 67, scope: !8115)
!8128 = !DILocation(line: 1435, column: 46, scope: !8115)
!8129 = !DILocation(line: 1435, column: 49, scope: !8115)
!8130 = !DILocation(line: 1433, column: 33, scope: !8115)
!8131 = !DILocation(line: 1435, column: 85, scope: !8115)
!8132 = !DILocation(line: 1433, column: 33, scope: !8109)
!8133 = !DILocation(line: 1436, column: 40, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8115, file: !1150, line: 1435, column: 90)
!8135 = !DILocation(line: 1436, column: 43, scope: !8134)
!8136 = !DILocation(line: 1437, column: 61, scope: !8134)
!8137 = !DILocation(line: 1437, column: 67, scope: !8134)
!8138 = !DILocation(line: 1436, column: 33, scope: !8134)
!8139 = !DILocation(line: 1438, column: 33, scope: !8134)
!8140 = !DILocation(line: 1440, column: 33, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !8109, file: !1150, line: 1440, column: 33)
!8142 = !DILocation(line: 1440, column: 33, scope: !8109)
!8143 = !DILocation(line: 1441, column: 33, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8141, file: !1150, line: 1440, column: 38)
!8145 = !DILocation(line: 1441, column: 36, scope: !8144)
!8146 = !DILocation(line: 1441, column: 41, scope: !8144)
!8147 = !DILocation(line: 1441, column: 50, scope: !8144)
!8148 = !DILocation(line: 1441, column: 64, scope: !8144)
!8149 = !DILocation(line: 1441, column: 55, scope: !8144)
!8150 = !DILocation(line: 1441, column: 68, scope: !8144)
!8151 = !DILocation(line: 1441, column: 71, scope: !8144)
!8152 = !DILocation(line: 1442, column: 37, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8144, file: !1150, line: 1442, column: 37)
!8154 = !DILocation(line: 1442, column: 40, scope: !8153)
!8155 = !DILocation(line: 1442, column: 45, scope: !8153)
!8156 = !DILocation(line: 1442, column: 37, scope: !8144)
!8157 = !DILocation(line: 1443, column: 50, scope: !8153)
!8158 = !DILocation(line: 1443, column: 53, scope: !8153)
!8159 = !DILocation(line: 1443, column: 67, scope: !8153)
!8160 = !DILocation(line: 1443, column: 58, scope: !8153)
!8161 = !DILocation(line: 1443, column: 37, scope: !8153)
!8162 = !DILocation(line: 1444, column: 29, scope: !8144)
!8163 = !DILocation(line: 1446, column: 21, scope: !7701)
!8164 = !DILocalVariable(name: "block_idx", scope: !8165, file: !1150, line: 1447, type: !1025)
!8165 = distinct !DILexicalBlock(scope: !7702, file: !1150, line: 1446, column: 28)
!8166 = !DILocation(line: 1447, column: 29, scope: !8165)
!8167 = !DILocation(line: 1447, column: 57, scope: !8165)
!8168 = !DILocation(line: 1447, column: 41, scope: !8165)
!8169 = !DILocation(line: 1447, column: 44, scope: !8165)
!8170 = !DILocation(line: 1447, column: 63, scope: !8165)
!8171 = !DILocation(line: 1447, column: 67, scope: !8165)
!8172 = !DILocation(line: 1447, column: 65, scope: !8165)
!8173 = !DILocation(line: 1447, column: 74, scope: !8165)
!8174 = !DILocation(line: 1447, column: 72, scope: !8165)
!8175 = !DILocation(line: 1447, column: 60, scope: !8165)
!8176 = !DILocation(line: 1448, column: 43, scope: !8165)
!8177 = !DILocation(line: 1448, column: 47, scope: !8165)
!8178 = !DILocation(line: 1448, column: 45, scope: !8165)
!8179 = !DILocation(line: 1448, column: 54, scope: !8165)
!8180 = !DILocation(line: 1448, column: 52, scope: !8165)
!8181 = !DILocation(line: 1447, column: 77, scope: !8165)
!8182 = !DILocalVariable(name: "block", scope: !8165, file: !1150, line: 1449, type: !1935)
!8183 = !DILocation(line: 1449, column: 34, scope: !8165)
!8184 = !DILocation(line: 1449, column: 55, scope: !8165)
!8185 = !DILocation(line: 1449, column: 42, scope: !8165)
!8186 = !DILocation(line: 1449, column: 52, scope: !8165)
!8187 = !DILocation(line: 1449, column: 45, scope: !8165)
!8188 = !DILocation(line: 1450, column: 29, scope: !8189)
!8189 = distinct !DILexicalBlock(scope: !8165, file: !1150, line: 1450, column: 29)
!8190 = !DILocation(line: 1450, column: 29, scope: !8165)
!8191 = !DILocation(line: 1451, column: 52, scope: !8189)
!8192 = !DILocation(line: 1451, column: 55, scope: !8189)
!8193 = !DILocation(line: 1451, column: 41, scope: !8189)
!8194 = !DILocation(line: 1452, column: 75, scope: !8189)
!8195 = !DILocation(line: 1452, column: 59, scope: !8189)
!8196 = !DILocation(line: 1452, column: 62, scope: !8189)
!8197 = !DILocation(line: 1452, column: 41, scope: !8189)
!8198 = !DILocation(line: 1452, column: 44, scope: !8189)
!8199 = !DILocation(line: 1451, column: 59, scope: !8189)
!8200 = !DILocation(line: 1452, column: 85, scope: !8189)
!8201 = !DILocation(line: 1452, column: 82, scope: !8189)
!8202 = !DILocation(line: 1451, column: 29, scope: !8189)
!8203 = !DILocation(line: 1451, column: 38, scope: !8189)
!8204 = !DILocation(line: 1453, column: 56, scope: !8205)
!8205 = distinct !DILexicalBlock(scope: !8189, file: !1150, line: 1453, column: 34)
!8206 = !DILocation(line: 1453, column: 59, scope: !8205)
!8207 = !DILocation(line: 1453, column: 66, scope: !8205)
!8208 = !DILocation(line: 1453, column: 81, scope: !8205)
!8209 = !DILocation(line: 1453, column: 69, scope: !8205)
!8210 = !DILocation(line: 1453, column: 72, scope: !8205)
!8211 = !DILocation(line: 1454, column: 90, scope: !8205)
!8212 = !DILocation(line: 1454, column: 74, scope: !8205)
!8213 = !DILocation(line: 1454, column: 77, scope: !8205)
!8214 = !DILocation(line: 1454, column: 56, scope: !8205)
!8215 = !DILocation(line: 1454, column: 59, scope: !8205)
!8216 = !DILocation(line: 1455, column: 56, scope: !8205)
!8217 = !DILocation(line: 1453, column: 34, scope: !8205)
!8218 = !DILocation(line: 1455, column: 60, scope: !8205)
!8219 = !DILocation(line: 1453, column: 34, scope: !8189)
!8220 = !DILocation(line: 1456, column: 36, scope: !8221)
!8221 = distinct !DILexicalBlock(scope: !8205, file: !1150, line: 1455, column: 65)
!8222 = !DILocation(line: 1456, column: 39, scope: !8221)
!8223 = !DILocation(line: 1457, column: 57, scope: !8221)
!8224 = !DILocation(line: 1457, column: 63, scope: !8221)
!8225 = !DILocation(line: 1456, column: 29, scope: !8221)
!8226 = !DILocation(line: 1458, column: 29, scope: !8221)
!8227 = !DILocation(line: 1461, column: 21, scope: !7703)
!8228 = distinct !{!8228, !8227}
!8229 = !DILocation(line: 1461, column: 92, scope: !8230)
!8230 = !DILexicalBlockFile(scope: !8231, file: !1150, discriminator: 1)
!8231 = distinct !DILexicalBlock(scope: !7703, file: !1150, line: 1461, column: 24)
!8232 = !DILocation(line: 1462, column: 21, scope: !7703)
!8233 = distinct !{!8233, !8232}
!8234 = !DILocation(line: 1462, column: 163, scope: !8235)
!8235 = !DILexicalBlockFile(scope: !8236, file: !1150, discriminator: 1)
!8236 = distinct !DILexicalBlock(scope: !7703, file: !1150, line: 1462, column: 24)
!8237 = !DILocation(line: 1465, column: 25, scope: !8238)
!8238 = distinct !DILexicalBlock(scope: !7703, file: !1150, line: 1465, column: 25)
!8239 = !DILocation(line: 1465, column: 32, scope: !8238)
!8240 = !DILocation(line: 1465, column: 29, scope: !8238)
!8241 = !DILocation(line: 1465, column: 25, scope: !7703)
!8242 = !DILocation(line: 1466, column: 27, scope: !8243)
!8243 = distinct !DILexicalBlock(scope: !8238, file: !1150, line: 1465, column: 35)
!8244 = !DILocation(line: 1467, column: 26, scope: !8243)
!8245 = !DILocation(line: 1468, column: 21, scope: !8243)
!8246 = !DILocation(line: 1469, column: 17, scope: !7703)
!8247 = !DILocation(line: 1414, column: 37, scope: !8248)
!8248 = !DILexicalBlockFile(scope: !7704, file: !1150, discriminator: 2)
!8249 = !DILocation(line: 1414, column: 17, scope: !8248)
!8250 = distinct !{!8250, !8251}
!8251 = !DILocation(line: 1414, column: 17, scope: !7706)
!8252 = !DILocation(line: 1470, column: 13, scope: !7706)
!8253 = !DILocation(line: 1404, column: 45, scope: !8254)
!8254 = !DILexicalBlockFile(scope: !7707, file: !1150, discriminator: 2)
!8255 = !DILocation(line: 1404, column: 13, scope: !8254)
!8256 = distinct !{!8256, !8257}
!8257 = !DILocation(line: 1404, column: 13, scope: !7709)
!8258 = !DILocation(line: 1472, column: 25, scope: !7709)
!8259 = !DILocation(line: 1472, column: 28, scope: !7709)
!8260 = !DILocation(line: 1472, column: 13, scope: !7709)
!8261 = !DILocation(line: 1473, column: 9, scope: !7709)
!8262 = !DILocation(line: 1393, column: 48, scope: !8263)
!8263 = !DILexicalBlockFile(scope: !7710, file: !1150, discriminator: 2)
!8264 = !DILocation(line: 1393, column: 9, scope: !8263)
!8265 = distinct !{!8265, !8266}
!8266 = !DILocation(line: 1393, column: 9, scope: !7712)
!8267 = !DILocation(line: 1474, column: 5, scope: !7712)
!8268 = !DILocation(line: 1392, column: 45, scope: !8269)
!8269 = !DILexicalBlockFile(scope: !7713, file: !1150, discriminator: 2)
!8270 = !DILocation(line: 1392, column: 5, scope: !8269)
!8271 = distinct !{!8271, !8272}
!8272 = !DILocation(line: 1392, column: 5, scope: !7689)
!8273 = !DILocation(line: 1475, column: 5, scope: !7689)
!8274 = !DILocation(line: 1476, column: 1, scope: !7689)
!8275 = distinct !DISubprogram(name: "show_bits", scope: !1825, file: !1825, line: 443, type: !2862, isLocal: true, isDefinition: true, scopeLine: 444, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!8276 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !8277)
!8277 = distinct !DILocation(line: 454, column: 16, scope: !8275)
!8278 = !DILocalVariable(name: "s", arg: 1, scope: !8275, file: !1825, line: 443, type: !2362)
!8279 = !DILocation(line: 443, column: 53, scope: !8275)
!8280 = !DILocalVariable(name: "n", arg: 2, scope: !8275, file: !1825, line: 443, type: !1025)
!8281 = !DILocation(line: 443, column: 60, scope: !8275)
!8282 = !DILocalVariable(name: "tmp", scope: !8275, file: !1825, line: 445, type: !1025)
!8283 = !DILocation(line: 445, column: 18, scope: !8275)
!8284 = !DILocalVariable(name: "re_index", scope: !8275, file: !1825, line: 452, type: !1024)
!8285 = !DILocation(line: 452, column: 18, scope: !8275)
!8286 = !DILocation(line: 452, column: 30, scope: !8275)
!8287 = !DILocation(line: 452, column: 34, scope: !8275)
!8288 = !DILocalVariable(name: "re_cache", scope: !8275, file: !1825, line: 452, type: !1024)
!8289 = !DILocation(line: 452, column: 78, scope: !8275)
!8290 = !DILocation(line: 454, column: 60, scope: !8275)
!8291 = !DILocation(line: 454, column: 64, scope: !8275)
!8292 = !DILocation(line: 454, column: 74, scope: !8275)
!8293 = !DILocation(line: 454, column: 83, scope: !8275)
!8294 = !DILocation(line: 454, column: 71, scope: !8275)
!8295 = !DILocation(line: 454, column: 92, scope: !8275)
!8296 = !DILocation(line: 454, column: 16, scope: !8275)
!8297 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !8277)
!8298 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !8277)
!8299 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !8277)
!8300 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !8277)
!8301 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !8277)
!8302 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !8277)
!8303 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !8277)
!8304 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !8277)
!8305 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !8277)
!8306 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !8277)
!8307 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !8277)
!8308 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !8277)
!8309 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !8277)
!8310 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !8277)
!8311 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !8277)
!8312 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !8277)
!8313 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !8277)
!8314 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !8277)
!8315 = !DILocation(line: 454, column: 100, scope: !8275)
!8316 = !DILocation(line: 454, column: 109, scope: !8275)
!8317 = !DILocation(line: 454, column: 96, scope: !8275)
!8318 = !DILocation(line: 454, column: 14, scope: !8275)
!8319 = !DILocation(line: 455, column: 21, scope: !8275)
!8320 = !DILocation(line: 455, column: 31, scope: !8275)
!8321 = !DILocation(line: 455, column: 11, scope: !8275)
!8322 = !DILocation(line: 455, column: 9, scope: !8275)
!8323 = !DILocation(line: 457, column: 12, scope: !8275)
!8324 = !DILocation(line: 457, column: 5, scope: !8275)
!8325 = distinct !DISubprogram(name: "align_get_bits", scope: !1825, file: !1825, line: 658, type: !8326, isLocal: true, isDefinition: true, scopeLine: 659, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!8326 = !DISubroutineType(types: !8327)
!8327 = !{!1146, !2362}
!8328 = !DILocalVariable(name: "s", arg: 1, scope: !8325, file: !1825, line: 658, type: !2362)
!8329 = !DILocation(line: 658, column: 60, scope: !8325)
!8330 = !DILocalVariable(name: "n", scope: !8325, file: !1825, line: 660, type: !1025)
!8331 = !DILocation(line: 660, column: 9, scope: !8325)
!8332 = !DILocation(line: 660, column: 29, scope: !8325)
!8333 = !DILocation(line: 660, column: 14, scope: !8325)
!8334 = !DILocation(line: 660, column: 13, scope: !8325)
!8335 = !DILocation(line: 660, column: 32, scope: !8325)
!8336 = !DILocation(line: 661, column: 9, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8325, file: !1825, line: 661, column: 9)
!8338 = !DILocation(line: 661, column: 9, scope: !8325)
!8339 = !DILocation(line: 662, column: 19, scope: !8337)
!8340 = !DILocation(line: 662, column: 22, scope: !8337)
!8341 = !DILocation(line: 662, column: 9, scope: !8337)
!8342 = !DILocation(line: 663, column: 12, scope: !8325)
!8343 = !DILocation(line: 663, column: 15, scope: !8325)
!8344 = !DILocation(line: 663, column: 25, scope: !8325)
!8345 = !DILocation(line: 663, column: 28, scope: !8325)
!8346 = !DILocation(line: 663, column: 34, scope: !8325)
!8347 = !DILocation(line: 663, column: 22, scope: !8325)
!8348 = !DILocation(line: 663, column: 5, scope: !8325)
!8349 = distinct !DISubprogram(name: "ff_mjpeg_find_marker", scope: !1150, file: !1150, line: 2129, type: !8350, isLocal: false, isDefinition: true, scopeLine: 2133, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!8350 = !DISubroutineType(types: !8351)
!8351 = !{!1025, !1815, !8352, !1146, !8352, !1462}
!8352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 64, align: 64)
!8353 = !DILocalVariable(name: "s", arg: 1, scope: !8349, file: !1150, line: 2129, type: !1815)
!8354 = !DILocation(line: 2129, column: 46, scope: !8349)
!8355 = !DILocalVariable(name: "buf_ptr", arg: 2, scope: !8349, file: !1150, line: 2130, type: !8352)
!8356 = !DILocation(line: 2130, column: 42, scope: !8349)
!8357 = !DILocalVariable(name: "buf_end", arg: 3, scope: !8349, file: !1150, line: 2130, type: !1146)
!8358 = !DILocation(line: 2130, column: 66, scope: !8349)
!8359 = !DILocalVariable(name: "unescaped_buf_ptr", arg: 4, scope: !8349, file: !1150, line: 2131, type: !8352)
!8360 = !DILocation(line: 2131, column: 42, scope: !8349)
!8361 = !DILocalVariable(name: "unescaped_buf_size", arg: 5, scope: !8349, file: !1150, line: 2132, type: !1462)
!8362 = !DILocation(line: 2132, column: 31, scope: !8349)
!8363 = !DILocalVariable(name: "start_code", scope: !8349, file: !1150, line: 2134, type: !1025)
!8364 = !DILocation(line: 2134, column: 9, scope: !8349)
!8365 = !DILocation(line: 2135, column: 30, scope: !8349)
!8366 = !DILocation(line: 2135, column: 39, scope: !8349)
!8367 = !DILocation(line: 2135, column: 18, scope: !8349)
!8368 = !DILocation(line: 2135, column: 16, scope: !8349)
!8369 = !DILocation(line: 2137, column: 28, scope: !8349)
!8370 = !DILocation(line: 2137, column: 31, scope: !8349)
!8371 = !DILocation(line: 2137, column: 27, scope: !8349)
!8372 = !DILocation(line: 2137, column: 40, scope: !8349)
!8373 = !DILocation(line: 2137, column: 43, scope: !8349)
!8374 = !DILocation(line: 2137, column: 56, scope: !8349)
!8375 = !DILocation(line: 2137, column: 67, scope: !8349)
!8376 = !DILocation(line: 2137, column: 66, scope: !8349)
!8377 = !DILocation(line: 2137, column: 64, scope: !8349)
!8378 = !DILocation(line: 2137, column: 5, scope: !8349)
!8379 = !DILocation(line: 2138, column: 10, scope: !8380)
!8380 = distinct !DILexicalBlock(scope: !8349, file: !1150, line: 2138, column: 9)
!8381 = !DILocation(line: 2138, column: 13, scope: !8380)
!8382 = !DILocation(line: 2138, column: 9, scope: !8349)
!8383 = !DILocation(line: 2139, column: 9, scope: !8380)
!8384 = !DILocation(line: 2142, column: 9, scope: !8385)
!8385 = distinct !DILexicalBlock(scope: !8349, file: !1150, line: 2142, column: 9)
!8386 = !DILocation(line: 2142, column: 20, scope: !8385)
!8387 = !DILocation(line: 2142, column: 27, scope: !8385)
!8388 = !DILocation(line: 2142, column: 31, scope: !8389)
!8389 = !DILexicalBlockFile(scope: !8385, file: !1150, discriminator: 1)
!8390 = !DILocation(line: 2142, column: 34, scope: !8389)
!8391 = !DILocation(line: 2142, column: 9, scope: !8389)
!8392 = !DILocalVariable(name: "src", scope: !8393, file: !1150, line: 2143, type: !1146)
!8393 = distinct !DILexicalBlock(scope: !8385, file: !1150, line: 2142, column: 38)
!8394 = !DILocation(line: 2143, column: 24, scope: !8393)
!8395 = !DILocation(line: 2143, column: 31, scope: !8393)
!8396 = !DILocation(line: 2143, column: 30, scope: !8393)
!8397 = !DILocalVariable(name: "ptr", scope: !8393, file: !1150, line: 2144, type: !1146)
!8398 = !DILocation(line: 2144, column: 24, scope: !8393)
!8399 = !DILocation(line: 2144, column: 30, scope: !8393)
!8400 = !DILocalVariable(name: "dst", scope: !8393, file: !1150, line: 2145, type: !1030)
!8401 = !DILocation(line: 2145, column: 18, scope: !8393)
!8402 = !DILocation(line: 2145, column: 24, scope: !8393)
!8403 = !DILocation(line: 2145, column: 27, scope: !8393)
!8404 = !DILocation(line: 2156, column: 13, scope: !8405)
!8405 = distinct !DILexicalBlock(scope: !8393, file: !1150, line: 2156, column: 13)
!8406 = !DILocation(line: 2156, column: 16, scope: !8405)
!8407 = !DILocation(line: 2156, column: 23, scope: !8405)
!8408 = !DILocation(line: 2156, column: 32, scope: !8405)
!8409 = !DILocation(line: 2156, column: 13, scope: !8393)
!8410 = !DILocation(line: 2157, column: 19, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !8405, file: !1150, line: 2156, column: 52)
!8412 = !DILocation(line: 2157, column: 17, scope: !8411)
!8413 = !DILocation(line: 2158, column: 13, scope: !8411)
!8414 = distinct !{!8414, !8413}
!8415 = !DILocalVariable(name: "length", scope: !8416, file: !1150, line: 2158, type: !1943)
!8416 = distinct !DILexicalBlock(scope: !8411, file: !1150, line: 2158, column: 16)
!8417 = !DILocation(line: 2158, column: 28, scope: !8416)
!8418 = !DILocation(line: 2158, column: 38, scope: !8419)
!8419 = !DILexicalBlockFile(scope: !8416, file: !1150, discriminator: 1)
!8420 = !DILocation(line: 2158, column: 44, scope: !8419)
!8421 = !DILocation(line: 2158, column: 42, scope: !8419)
!8422 = !DILocation(line: 2158, column: 49, scope: !8419)
!8423 = !DILocation(line: 2158, column: 28, scope: !8419)
!8424 = !DILocation(line: 2158, column: 60, scope: !8419)
!8425 = !DILocation(line: 2158, column: 67, scope: !8419)
!8426 = !DILocation(line: 2158, column: 81, scope: !8427)
!8427 = !DILexicalBlockFile(scope: !8428, file: !1150, discriminator: 2)
!8428 = distinct !DILexicalBlock(scope: !8429, file: !1150, line: 2158, column: 72)
!8429 = distinct !DILexicalBlock(scope: !8416, file: !1150, line: 2158, column: 60)
!8430 = !DILocation(line: 2158, column: 86, scope: !8427)
!8431 = !DILocation(line: 2158, column: 91, scope: !8427)
!8432 = !DILocation(line: 2158, column: 74, scope: !8427)
!8433 = !DILocation(line: 2158, column: 107, scope: !8427)
!8434 = !DILocation(line: 2158, column: 104, scope: !8427)
!8435 = !DILocation(line: 2158, column: 121, scope: !8427)
!8436 = !DILocation(line: 2158, column: 119, scope: !8427)
!8437 = !DILocation(line: 2158, column: 126, scope: !8427)
!8438 = !DILocation(line: 2158, column: 128, scope: !8439)
!8439 = !DILexicalBlockFile(scope: !8416, file: !1150, discriminator: 3)
!8440 = !DILocation(line: 2159, column: 9, scope: !8411)
!8441 = !DILocation(line: 2160, column: 13, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !8405, file: !1150, line: 2159, column: 16)
!8443 = !DILocation(line: 2160, column: 20, scope: !8444)
!8444 = !DILexicalBlockFile(scope: !8442, file: !1150, discriminator: 1)
!8445 = !DILocation(line: 2160, column: 26, scope: !8444)
!8446 = !DILocation(line: 2160, column: 24, scope: !8444)
!8447 = !DILocation(line: 2160, column: 13, scope: !8444)
!8448 = !DILocalVariable(name: "x", scope: !8449, file: !1150, line: 2161, type: !1031)
!8449 = distinct !DILexicalBlock(scope: !8442, file: !1150, line: 2160, column: 35)
!8450 = !DILocation(line: 2161, column: 25, scope: !8449)
!8451 = !DILocation(line: 2161, column: 34, scope: !8449)
!8452 = !DILocation(line: 2161, column: 29, scope: !8449)
!8453 = !DILocation(line: 2163, column: 21, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !8449, file: !1150, line: 2163, column: 21)
!8455 = !DILocation(line: 2163, column: 23, scope: !8454)
!8456 = !DILocation(line: 2163, column: 21, scope: !8449)
!8457 = !DILocalVariable(name: "skip", scope: !8458, file: !1150, line: 2164, type: !1943)
!8458 = distinct !DILexicalBlock(scope: !8454, file: !1150, line: 2163, column: 32)
!8459 = !DILocation(line: 2164, column: 31, scope: !8458)
!8460 = !DILocation(line: 2165, column: 21, scope: !8458)
!8461 = !DILocation(line: 2165, column: 28, scope: !8462)
!8462 = !DILexicalBlockFile(scope: !8458, file: !1150, discriminator: 1)
!8463 = !DILocation(line: 2165, column: 34, scope: !8462)
!8464 = !DILocation(line: 2165, column: 32, scope: !8462)
!8465 = !DILocation(line: 2165, column: 42, scope: !8462)
!8466 = !DILocation(line: 2165, column: 45, scope: !8467)
!8467 = !DILexicalBlockFile(scope: !8458, file: !1150, discriminator: 2)
!8468 = !DILocation(line: 2165, column: 47, scope: !8467)
!8469 = !DILocation(line: 2165, column: 21, scope: !8470)
!8470 = !DILexicalBlockFile(scope: !8458, file: !1150, discriminator: 3)
!8471 = !DILocation(line: 2166, column: 34, scope: !8472)
!8472 = distinct !DILexicalBlock(scope: !8458, file: !1150, line: 2165, column: 56)
!8473 = !DILocation(line: 2166, column: 29, scope: !8472)
!8474 = !DILocation(line: 2166, column: 27, scope: !8472)
!8475 = !DILocation(line: 2167, column: 29, scope: !8472)
!8476 = !DILocation(line: 2165, column: 21, scope: !8477)
!8477 = !DILexicalBlockFile(scope: !8458, file: !1150, discriminator: 4)
!8478 = distinct !{!8478, !8460}
!8479 = !DILocation(line: 2171, column: 25, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8458, file: !1150, line: 2171, column: 25)
!8481 = !DILocation(line: 2171, column: 30, scope: !8480)
!8482 = !DILocation(line: 2171, column: 25, scope: !8458)
!8483 = !DILocation(line: 2172, column: 25, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8480, file: !1150, line: 2171, column: 35)
!8485 = distinct !{!8485, !8483}
!8486 = !DILocalVariable(name: "length", scope: !8487, file: !1150, line: 2172, type: !1943)
!8487 = distinct !DILexicalBlock(scope: !8484, file: !1150, line: 2172, column: 28)
!8488 = !DILocation(line: 2172, column: 40, scope: !8487)
!8489 = !DILocation(line: 2172, column: 50, scope: !8490)
!8490 = !DILexicalBlockFile(scope: !8487, file: !1150, discriminator: 1)
!8491 = !DILocation(line: 2172, column: 56, scope: !8490)
!8492 = !DILocation(line: 2172, column: 54, scope: !8490)
!8493 = !DILocation(line: 2172, column: 64, scope: !8490)
!8494 = !DILocation(line: 2172, column: 61, scope: !8490)
!8495 = !DILocation(line: 2172, column: 40, scope: !8490)
!8496 = !DILocation(line: 2172, column: 75, scope: !8490)
!8497 = !DILocation(line: 2172, column: 82, scope: !8490)
!8498 = !DILocation(line: 2172, column: 96, scope: !8499)
!8499 = !DILexicalBlockFile(scope: !8500, file: !1150, discriminator: 2)
!8500 = distinct !DILexicalBlock(scope: !8501, file: !1150, line: 2172, column: 87)
!8501 = distinct !DILexicalBlock(scope: !8487, file: !1150, line: 2172, column: 75)
!8502 = !DILocation(line: 2172, column: 101, scope: !8499)
!8503 = !DILocation(line: 2172, column: 106, scope: !8499)
!8504 = !DILocation(line: 2172, column: 89, scope: !8499)
!8505 = !DILocation(line: 2172, column: 122, scope: !8499)
!8506 = !DILocation(line: 2172, column: 119, scope: !8499)
!8507 = !DILocation(line: 2172, column: 136, scope: !8499)
!8508 = !DILocation(line: 2172, column: 134, scope: !8499)
!8509 = !DILocation(line: 2172, column: 141, scope: !8499)
!8510 = !DILocation(line: 2172, column: 143, scope: !8511)
!8511 = !DILexicalBlockFile(scope: !8487, file: !1150, discriminator: 3)
!8512 = !DILocation(line: 2177, column: 28, scope: !8484)
!8513 = !DILocation(line: 2178, column: 21, scope: !8484)
!8514 = !DILocation(line: 2180, column: 25, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !8458, file: !1150, line: 2180, column: 25)
!8516 = !DILocation(line: 2180, column: 27, scope: !8515)
!8517 = !DILocation(line: 2180, column: 34, scope: !8515)
!8518 = !DILocation(line: 2180, column: 37, scope: !8519)
!8519 = !DILexicalBlockFile(scope: !8515, file: !1150, discriminator: 1)
!8520 = !DILocation(line: 2180, column: 39, scope: !8519)
!8521 = !DILocation(line: 2180, column: 25, scope: !8519)
!8522 = !DILocation(line: 2181, column: 25, scope: !8523)
!8523 = distinct !DILexicalBlock(scope: !8515, file: !1150, line: 2180, column: 47)
!8524 = distinct !{!8524, !8522}
!8525 = !DILocalVariable(name: "length", scope: !8526, file: !1150, line: 2181, type: !1943)
!8526 = distinct !DILexicalBlock(scope: !8523, file: !1150, line: 2181, column: 28)
!8527 = !DILocation(line: 2181, column: 40, scope: !8526)
!8528 = !DILocation(line: 2181, column: 50, scope: !8529)
!8529 = !DILexicalBlockFile(scope: !8526, file: !1150, discriminator: 1)
!8530 = !DILocation(line: 2181, column: 56, scope: !8529)
!8531 = !DILocation(line: 2181, column: 54, scope: !8529)
!8532 = !DILocation(line: 2181, column: 61, scope: !8529)
!8533 = !DILocation(line: 2181, column: 40, scope: !8529)
!8534 = !DILocation(line: 2181, column: 72, scope: !8529)
!8535 = !DILocation(line: 2181, column: 79, scope: !8529)
!8536 = !DILocation(line: 2181, column: 93, scope: !8537)
!8537 = !DILexicalBlockFile(scope: !8538, file: !1150, discriminator: 2)
!8538 = distinct !DILexicalBlock(scope: !8539, file: !1150, line: 2181, column: 84)
!8539 = distinct !DILexicalBlock(scope: !8526, file: !1150, line: 2181, column: 72)
!8540 = !DILocation(line: 2181, column: 98, scope: !8537)
!8541 = !DILocation(line: 2181, column: 103, scope: !8537)
!8542 = !DILocation(line: 2181, column: 86, scope: !8537)
!8543 = !DILocation(line: 2181, column: 119, scope: !8537)
!8544 = !DILocation(line: 2181, column: 116, scope: !8537)
!8545 = !DILocation(line: 2181, column: 133, scope: !8537)
!8546 = !DILocation(line: 2181, column: 131, scope: !8537)
!8547 = !DILocation(line: 2181, column: 138, scope: !8537)
!8548 = !DILocation(line: 2181, column: 140, scope: !8549)
!8549 = !DILexicalBlockFile(scope: !8526, file: !1150, discriminator: 3)
!8550 = !DILocation(line: 2182, column: 29, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !8523, file: !1150, line: 2182, column: 29)
!8552 = !DILocation(line: 2182, column: 29, scope: !8523)
!8553 = !DILocation(line: 2183, column: 29, scope: !8551)
!8554 = !DILocation(line: 2184, column: 21, scope: !8523)
!8555 = !DILocation(line: 2185, column: 17, scope: !8458)
!8556 = !DILocation(line: 2160, column: 13, scope: !8557)
!8557 = !DILexicalBlockFile(scope: !8442, file: !1150, discriminator: 2)
!8558 = distinct !{!8558, !8441}
!8559 = !DILocation(line: 2187, column: 17, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8442, file: !1150, line: 2187, column: 17)
!8561 = !DILocation(line: 2187, column: 23, scope: !8560)
!8562 = !DILocation(line: 2187, column: 21, scope: !8560)
!8563 = !DILocation(line: 2187, column: 17, scope: !8442)
!8564 = !DILocation(line: 2188, column: 17, scope: !8560)
!8565 = distinct !{!8565, !8564}
!8566 = !DILocalVariable(name: "length", scope: !8567, file: !1150, line: 2188, type: !1943)
!8567 = distinct !DILexicalBlock(scope: !8560, file: !1150, line: 2188, column: 20)
!8568 = !DILocation(line: 2188, column: 32, scope: !8567)
!8569 = !DILocation(line: 2188, column: 42, scope: !8570)
!8570 = !DILexicalBlockFile(scope: !8567, file: !1150, discriminator: 1)
!8571 = !DILocation(line: 2188, column: 48, scope: !8570)
!8572 = !DILocation(line: 2188, column: 46, scope: !8570)
!8573 = !DILocation(line: 2188, column: 53, scope: !8570)
!8574 = !DILocation(line: 2188, column: 32, scope: !8570)
!8575 = !DILocation(line: 2188, column: 64, scope: !8570)
!8576 = !DILocation(line: 2188, column: 71, scope: !8570)
!8577 = !DILocation(line: 2188, column: 85, scope: !8578)
!8578 = !DILexicalBlockFile(scope: !8579, file: !1150, discriminator: 2)
!8579 = distinct !DILexicalBlock(scope: !8580, file: !1150, line: 2188, column: 76)
!8580 = distinct !DILexicalBlock(scope: !8567, file: !1150, line: 2188, column: 64)
!8581 = !DILocation(line: 2188, column: 90, scope: !8578)
!8582 = !DILocation(line: 2188, column: 95, scope: !8578)
!8583 = !DILocation(line: 2188, column: 78, scope: !8578)
!8584 = !DILocation(line: 2188, column: 111, scope: !8578)
!8585 = !DILocation(line: 2188, column: 108, scope: !8578)
!8586 = !DILocation(line: 2188, column: 125, scope: !8578)
!8587 = !DILocation(line: 2188, column: 123, scope: !8578)
!8588 = !DILocation(line: 2188, column: 130, scope: !8578)
!8589 = !DILocation(line: 2188, column: 132, scope: !8590)
!8590 = !DILexicalBlockFile(scope: !8567, file: !1150, discriminator: 3)
!8591 = !DILocation(line: 2188, column: 132, scope: !8592)
!8592 = !DILexicalBlockFile(scope: !8567, file: !1150, discriminator: 4)
!8593 = !DILocation(line: 2192, column: 30, scope: !8393)
!8594 = !DILocation(line: 2192, column: 33, scope: !8393)
!8595 = !DILocation(line: 2192, column: 10, scope: !8393)
!8596 = !DILocation(line: 2192, column: 28, scope: !8393)
!8597 = !DILocation(line: 2193, column: 31, scope: !8393)
!8598 = !DILocation(line: 2193, column: 37, scope: !8393)
!8599 = !DILocation(line: 2193, column: 40, scope: !8393)
!8600 = !DILocation(line: 2193, column: 35, scope: !8393)
!8601 = !DILocation(line: 2193, column: 10, scope: !8393)
!8602 = !DILocation(line: 2193, column: 29, scope: !8393)
!8603 = !DILocation(line: 2194, column: 16, scope: !8393)
!8604 = !DILocation(line: 2194, column: 19, scope: !8393)
!8605 = !DILocation(line: 2194, column: 29, scope: !8393)
!8606 = !DILocation(line: 2194, column: 28, scope: !8393)
!8607 = !DILocation(line: 2194, column: 26, scope: !8393)
!8608 = !DILocation(line: 2194, column: 9, scope: !8393)
!8609 = !DILocation(line: 2197, column: 16, scope: !8393)
!8610 = !DILocation(line: 2197, column: 19, scope: !8393)
!8611 = !DILocation(line: 2198, column: 17, scope: !8393)
!8612 = !DILocation(line: 2198, column: 28, scope: !8393)
!8613 = !DILocation(line: 2198, column: 27, scope: !8393)
!8614 = !DILocation(line: 2198, column: 25, scope: !8393)
!8615 = !DILocation(line: 2198, column: 40, scope: !8393)
!8616 = !DILocation(line: 2198, column: 46, scope: !8393)
!8617 = !DILocation(line: 2198, column: 49, scope: !8393)
!8618 = !DILocation(line: 2198, column: 44, scope: !8393)
!8619 = !DILocation(line: 2198, column: 37, scope: !8393)
!8620 = !DILocation(line: 2197, column: 9, scope: !8393)
!8621 = !DILocation(line: 2199, column: 5, scope: !8393)
!8622 = !DILocation(line: 2199, column: 16, scope: !8623)
!8623 = !DILexicalBlockFile(scope: !8624, file: !1150, discriminator: 1)
!8624 = distinct !DILexicalBlock(scope: !8385, file: !1150, line: 2199, column: 16)
!8625 = !DILocation(line: 2199, column: 27, scope: !8623)
!8626 = !DILocation(line: 2199, column: 34, scope: !8623)
!8627 = !DILocation(line: 2199, column: 37, scope: !8628)
!8628 = !DILexicalBlockFile(scope: !8624, file: !1150, discriminator: 2)
!8629 = !DILocation(line: 2199, column: 40, scope: !8628)
!8630 = !DILocation(line: 2199, column: 16, scope: !8628)
!8631 = !DILocalVariable(name: "src", scope: !8632, file: !1150, line: 2200, type: !1146)
!8632 = distinct !DILexicalBlock(scope: !8624, file: !1150, line: 2199, column: 44)
!8633 = !DILocation(line: 2200, column: 24, scope: !8632)
!8634 = !DILocation(line: 2200, column: 31, scope: !8632)
!8635 = !DILocation(line: 2200, column: 30, scope: !8632)
!8636 = !DILocalVariable(name: "dst", scope: !8632, file: !1150, line: 2201, type: !1030)
!8637 = !DILocation(line: 2201, column: 18, scope: !8632)
!8638 = !DILocation(line: 2201, column: 24, scope: !8632)
!8639 = !DILocation(line: 2201, column: 27, scope: !8632)
!8640 = !DILocalVariable(name: "bit_count", scope: !8632, file: !1150, line: 2202, type: !1025)
!8641 = !DILocation(line: 2202, column: 13, scope: !8632)
!8642 = !DILocalVariable(name: "t", scope: !8632, file: !1150, line: 2203, type: !1025)
!8643 = !DILocation(line: 2203, column: 13, scope: !8632)
!8644 = !DILocalVariable(name: "b", scope: !8632, file: !1150, line: 2203, type: !1025)
!8645 = !DILocation(line: 2203, column: 20, scope: !8632)
!8646 = !DILocalVariable(name: "pb", scope: !8632, file: !1150, line: 2204, type: !8647)
!8647 = !DIDerivedType(tag: DW_TAG_typedef, name: "PutBitContext", file: !8648, line: 40, baseType: !8649)
!8648 = !DIFile(filename: "libavcodec/put_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!8649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PutBitContext", file: !8648, line: 35, size: 320, align: 64, elements: !8650)
!8650 = !{!8651, !8652, !8653, !8654, !8655, !8656}
!8651 = !DIDerivedType(tag: DW_TAG_member, name: "bit_buf", scope: !8649, file: !8648, line: 36, baseType: !1022, size: 32, align: 32)
!8652 = !DIDerivedType(tag: DW_TAG_member, name: "bit_left", scope: !8649, file: !8648, line: 37, baseType: !1025, size: 32, align: 32, offset: 32)
!8653 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !8649, file: !8648, line: 38, baseType: !1030, size: 64, align: 64, offset: 64)
!8654 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr", scope: !8649, file: !8648, line: 38, baseType: !1030, size: 64, align: 64, offset: 128)
!8655 = !DIDerivedType(tag: DW_TAG_member, name: "buf_end", scope: !8649, file: !8648, line: 38, baseType: !1030, size: 64, align: 64, offset: 192)
!8656 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !8649, file: !8648, line: 39, baseType: !1025, size: 32, align: 32, offset: 256)
!8657 = !DILocation(line: 2204, column: 23, scope: !8632)
!8658 = !DILocation(line: 2207, column: 9, scope: !8632)
!8659 = !DILocation(line: 2207, column: 16, scope: !8660)
!8660 = !DILexicalBlockFile(scope: !8632, file: !1150, discriminator: 1)
!8661 = !DILocation(line: 2207, column: 22, scope: !8660)
!8662 = !DILocation(line: 2207, column: 20, scope: !8660)
!8663 = !DILocation(line: 2207, column: 26, scope: !8660)
!8664 = !DILocation(line: 2207, column: 24, scope: !8660)
!8665 = !DILocation(line: 2207, column: 9, scope: !8660)
!8666 = !DILocalVariable(name: "x", scope: !8667, file: !1150, line: 2208, type: !1031)
!8667 = distinct !DILexicalBlock(scope: !8632, file: !1150, line: 2207, column: 35)
!8668 = !DILocation(line: 2208, column: 21, scope: !8667)
!8669 = !DILocation(line: 2208, column: 30, scope: !8667)
!8670 = !DILocation(line: 2208, column: 25, scope: !8667)
!8671 = !DILocation(line: 2209, column: 17, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !8667, file: !1150, line: 2209, column: 17)
!8673 = !DILocation(line: 2209, column: 19, scope: !8672)
!8674 = !DILocation(line: 2209, column: 17, scope: !8667)
!8675 = !DILocation(line: 2210, column: 17, scope: !8676)
!8676 = distinct !DILexicalBlock(scope: !8672, file: !1150, line: 2209, column: 28)
!8677 = !DILocation(line: 2210, column: 25, scope: !8678)
!8678 = !DILexicalBlockFile(scope: !8676, file: !1150, discriminator: 1)
!8679 = !DILocation(line: 2210, column: 31, scope: !8678)
!8680 = !DILocation(line: 2210, column: 29, scope: !8678)
!8681 = !DILocation(line: 2210, column: 35, scope: !8678)
!8682 = !DILocation(line: 2210, column: 33, scope: !8678)
!8683 = !DILocation(line: 2210, column: 44, scope: !8678)
!8684 = !DILocation(line: 2210, column: 47, scope: !8685)
!8685 = !DILexicalBlockFile(scope: !8676, file: !1150, discriminator: 2)
!8686 = !DILocation(line: 2210, column: 49, scope: !8685)
!8687 = !DILocation(line: 2210, column: 17, scope: !8688)
!8688 = !DILexicalBlockFile(scope: !8676, file: !1150, discriminator: 3)
!8689 = !DILocation(line: 2211, column: 30, scope: !8676)
!8690 = !DILocation(line: 2211, column: 25, scope: !8676)
!8691 = !DILocation(line: 2211, column: 23, scope: !8676)
!8692 = !DILocation(line: 2210, column: 17, scope: !8693)
!8693 = !DILexicalBlockFile(scope: !8676, file: !1150, discriminator: 4)
!8694 = distinct !{!8694, !8675}
!8695 = !DILocation(line: 2212, column: 21, scope: !8696)
!8696 = distinct !DILexicalBlock(scope: !8676, file: !1150, line: 2212, column: 21)
!8697 = !DILocation(line: 2212, column: 23, scope: !8696)
!8698 = !DILocation(line: 2212, column: 21, scope: !8676)
!8699 = !DILocation(line: 2213, column: 34, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !8696, file: !1150, line: 2212, column: 31)
!8701 = !DILocation(line: 2213, column: 31, scope: !8700)
!8702 = !DILocation(line: 2213, column: 27, scope: !8700)
!8703 = !DILocation(line: 2213, column: 40, scope: !8704)
!8704 = !DILexicalBlockFile(scope: !8700, file: !1150, discriminator: 1)
!8705 = !DILocation(line: 2213, column: 27, scope: !8704)
!8706 = !DILocation(line: 2213, column: 27, scope: !8707)
!8707 = !DILexicalBlockFile(scope: !8700, file: !1150, discriminator: 2)
!8708 = !DILocation(line: 2213, column: 27, scope: !8709)
!8709 = !DILexicalBlockFile(scope: !8700, file: !1150, discriminator: 3)
!8710 = !DILocation(line: 2213, column: 23, scope: !8709)
!8711 = !DILocation(line: 2214, column: 21, scope: !8700)
!8712 = !DILocation(line: 2216, column: 13, scope: !8676)
!8713 = !DILocation(line: 2207, column: 9, scope: !8714)
!8714 = !DILexicalBlockFile(scope: !8632, file: !1150, discriminator: 2)
!8715 = distinct !{!8715, !8658}
!8716 = !DILocation(line: 2218, column: 21, scope: !8632)
!8717 = !DILocation(line: 2218, column: 23, scope: !8632)
!8718 = !DILocation(line: 2218, column: 19, scope: !8632)
!8719 = !DILocation(line: 2219, column: 28, scope: !8632)
!8720 = !DILocation(line: 2219, column: 33, scope: !8632)
!8721 = !DILocation(line: 2219, column: 9, scope: !8632)
!8722 = !DILocation(line: 2222, column: 9, scope: !8632)
!8723 = !DILocation(line: 2222, column: 16, scope: !8660)
!8724 = !DILocation(line: 2222, column: 20, scope: !8660)
!8725 = !DILocation(line: 2222, column: 18, scope: !8660)
!8726 = !DILocation(line: 2222, column: 9, scope: !8660)
!8727 = !DILocalVariable(name: "x", scope: !8728, file: !1150, line: 2223, type: !1031)
!8728 = distinct !DILexicalBlock(scope: !8632, file: !1150, line: 2222, column: 23)
!8729 = !DILocation(line: 2223, column: 21, scope: !8728)
!8730 = !DILocation(line: 2223, column: 30, scope: !8728)
!8731 = !DILocation(line: 2223, column: 25, scope: !8728)
!8732 = !DILocation(line: 2224, column: 30, scope: !8728)
!8733 = !DILocation(line: 2224, column: 13, scope: !8728)
!8734 = !DILocation(line: 2225, column: 17, scope: !8735)
!8735 = distinct !DILexicalBlock(scope: !8728, file: !1150, line: 2225, column: 17)
!8736 = !DILocation(line: 2225, column: 19, scope: !8735)
!8737 = !DILocation(line: 2225, column: 27, scope: !8735)
!8738 = !DILocation(line: 2225, column: 30, scope: !8739)
!8739 = !DILexicalBlockFile(scope: !8735, file: !1150, discriminator: 1)
!8740 = !DILocation(line: 2225, column: 34, scope: !8739)
!8741 = !DILocation(line: 2225, column: 32, scope: !8739)
!8742 = !DILocation(line: 2225, column: 17, scope: !8739)
!8743 = !DILocation(line: 2226, column: 26, scope: !8744)
!8744 = distinct !DILexicalBlock(scope: !8735, file: !1150, line: 2225, column: 37)
!8745 = !DILocation(line: 2226, column: 21, scope: !8744)
!8746 = !DILocation(line: 2226, column: 19, scope: !8744)
!8747 = !DILocation(line: 2227, column: 21, scope: !8748)
!8748 = distinct !DILexicalBlock(scope: !8744, file: !1150, line: 2227, column: 21)
!8749 = !DILocation(line: 2227, column: 23, scope: !8748)
!8750 = !DILocation(line: 2227, column: 21, scope: !8744)
!8751 = !DILocation(line: 2228, column: 28, scope: !8752)
!8752 = distinct !DILexicalBlock(scope: !8748, file: !1150, line: 2227, column: 31)
!8753 = !DILocation(line: 2228, column: 31, scope: !8752)
!8754 = !DILocation(line: 2228, column: 21, scope: !8752)
!8755 = !DILocation(line: 2229, column: 23, scope: !8752)
!8756 = !DILocation(line: 2230, column: 17, scope: !8752)
!8757 = !DILocation(line: 2231, column: 34, scope: !8744)
!8758 = !DILocation(line: 2231, column: 17, scope: !8744)
!8759 = !DILocation(line: 2232, column: 26, scope: !8744)
!8760 = !DILocation(line: 2233, column: 13, scope: !8744)
!8761 = !DILocation(line: 2222, column: 9, scope: !8714)
!8762 = distinct !{!8762, !8722}
!8763 = !DILocation(line: 2235, column: 9, scope: !8632)
!8764 = !DILocation(line: 2237, column: 30, scope: !8632)
!8765 = !DILocation(line: 2237, column: 10, scope: !8632)
!8766 = !DILocation(line: 2237, column: 28, scope: !8632)
!8767 = !DILocation(line: 2238, column: 32, scope: !8632)
!8768 = !DILocation(line: 2238, column: 42, scope: !8632)
!8769 = !DILocation(line: 2238, column: 47, scope: !8632)
!8770 = !DILocation(line: 2238, column: 10, scope: !8632)
!8771 = !DILocation(line: 2238, column: 29, scope: !8632)
!8772 = !DILocation(line: 2239, column: 16, scope: !8632)
!8773 = !DILocation(line: 2239, column: 19, scope: !8632)
!8774 = !DILocation(line: 2239, column: 29, scope: !8632)
!8775 = !DILocation(line: 2239, column: 28, scope: !8632)
!8776 = !DILocation(line: 2239, column: 26, scope: !8632)
!8777 = !DILocation(line: 2239, column: 9, scope: !8632)
!8778 = !DILocation(line: 2241, column: 5, scope: !8632)
!8779 = !DILocation(line: 2242, column: 31, scope: !8780)
!8780 = distinct !DILexicalBlock(scope: !8624, file: !1150, line: 2241, column: 12)
!8781 = !DILocation(line: 2242, column: 30, scope: !8780)
!8782 = !DILocation(line: 2242, column: 10, scope: !8780)
!8783 = !DILocation(line: 2242, column: 28, scope: !8780)
!8784 = !DILocation(line: 2243, column: 31, scope: !8780)
!8785 = !DILocation(line: 2243, column: 42, scope: !8780)
!8786 = !DILocation(line: 2243, column: 41, scope: !8780)
!8787 = !DILocation(line: 2243, column: 39, scope: !8780)
!8788 = !DILocation(line: 2243, column: 10, scope: !8780)
!8789 = !DILocation(line: 2243, column: 29, scope: !8780)
!8790 = !DILocation(line: 2246, column: 12, scope: !8349)
!8791 = !DILocation(line: 2246, column: 5, scope: !8349)
!8792 = !DILocation(line: 2247, column: 1, scope: !8349)
!8793 = distinct !DISubprogram(name: "find_marker", scope: !1150, file: !1150, line: 2104, type: !8794, isLocal: true, isDefinition: true, scopeLine: 2105, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!8794 = !DISubroutineType(types: !8795)
!8795 = !{!1025, !8352, !1146}
!8796 = !DILocalVariable(name: "pbuf_ptr", arg: 1, scope: !8793, file: !1150, line: 2104, type: !8352)
!8797 = !DILocation(line: 2104, column: 40, scope: !8793)
!8798 = !DILocalVariable(name: "buf_end", arg: 2, scope: !8793, file: !1150, line: 2104, type: !1146)
!8799 = !DILocation(line: 2104, column: 65, scope: !8793)
!8800 = !DILocalVariable(name: "buf_ptr", scope: !8793, file: !1150, line: 2106, type: !1146)
!8801 = !DILocation(line: 2106, column: 20, scope: !8793)
!8802 = !DILocalVariable(name: "v", scope: !8793, file: !1150, line: 2107, type: !1024)
!8803 = !DILocation(line: 2107, column: 18, scope: !8793)
!8804 = !DILocalVariable(name: "v2", scope: !8793, file: !1150, line: 2107, type: !1024)
!8805 = !DILocation(line: 2107, column: 21, scope: !8793)
!8806 = !DILocalVariable(name: "val", scope: !8793, file: !1150, line: 2108, type: !1025)
!8807 = !DILocation(line: 2108, column: 9, scope: !8793)
!8808 = !DILocalVariable(name: "skipped", scope: !8793, file: !1150, line: 2109, type: !1025)
!8809 = !DILocation(line: 2109, column: 9, scope: !8793)
!8810 = !DILocation(line: 2111, column: 16, scope: !8793)
!8811 = !DILocation(line: 2111, column: 15, scope: !8793)
!8812 = !DILocation(line: 2111, column: 13, scope: !8793)
!8813 = !DILocation(line: 2112, column: 5, scope: !8793)
!8814 = !DILocation(line: 2112, column: 12, scope: !8815)
!8815 = !DILexicalBlockFile(scope: !8793, file: !1150, discriminator: 1)
!8816 = !DILocation(line: 2112, column: 22, scope: !8815)
!8817 = !DILocation(line: 2112, column: 20, scope: !8815)
!8818 = !DILocation(line: 2112, column: 30, scope: !8815)
!8819 = !DILocation(line: 2112, column: 5, scope: !8815)
!8820 = !DILocation(line: 2113, column: 21, scope: !8821)
!8821 = distinct !DILexicalBlock(scope: !8793, file: !1150, line: 2112, column: 35)
!8822 = !DILocation(line: 2113, column: 13, scope: !8821)
!8823 = !DILocation(line: 2113, column: 11, scope: !8821)
!8824 = !DILocation(line: 2114, column: 15, scope: !8821)
!8825 = !DILocation(line: 2114, column: 14, scope: !8821)
!8826 = !DILocation(line: 2114, column: 12, scope: !8821)
!8827 = !DILocation(line: 2115, column: 14, scope: !8828)
!8828 = distinct !DILexicalBlock(scope: !8821, file: !1150, line: 2115, column: 13)
!8829 = !DILocation(line: 2115, column: 16, scope: !8828)
!8830 = !DILocation(line: 2115, column: 25, scope: !8828)
!8831 = !DILocation(line: 2115, column: 29, scope: !8832)
!8832 = !DILexicalBlockFile(scope: !8828, file: !1150, discriminator: 1)
!8833 = !DILocation(line: 2115, column: 32, scope: !8832)
!8834 = !DILocation(line: 2115, column: 41, scope: !8832)
!8835 = !DILocation(line: 2115, column: 45, scope: !8836)
!8836 = !DILexicalBlockFile(scope: !8828, file: !1150, discriminator: 2)
!8837 = !DILocation(line: 2115, column: 48, scope: !8836)
!8838 = !DILocation(line: 2115, column: 57, scope: !8836)
!8839 = !DILocation(line: 2115, column: 60, scope: !8840)
!8840 = !DILexicalBlockFile(scope: !8828, file: !1150, discriminator: 3)
!8841 = !DILocation(line: 2115, column: 70, scope: !8840)
!8842 = !DILocation(line: 2115, column: 68, scope: !8840)
!8843 = !DILocation(line: 2115, column: 13, scope: !8840)
!8844 = !DILocation(line: 2116, column: 27, scope: !8845)
!8845 = distinct !DILexicalBlock(scope: !8828, file: !1150, line: 2115, column: 79)
!8846 = !DILocation(line: 2116, column: 19, scope: !8845)
!8847 = !DILocation(line: 2116, column: 17, scope: !8845)
!8848 = !DILocation(line: 2117, column: 13, scope: !8845)
!8849 = !DILocation(line: 2119, column: 16, scope: !8821)
!8850 = !DILocation(line: 2112, column: 5, scope: !8851)
!8851 = !DILexicalBlockFile(scope: !8793, file: !1150, discriminator: 2)
!8852 = distinct !{!8852, !8813}
!8853 = !DILocation(line: 2121, column: 15, scope: !8793)
!8854 = !DILocation(line: 2121, column: 13, scope: !8793)
!8855 = !DILocation(line: 2122, column: 9, scope: !8793)
!8856 = !DILocation(line: 2122, column: 5, scope: !8793)
!8857 = !DILocation(line: 2124, column: 5, scope: !8793)
!8858 = distinct !{!8858, !8857}
!8859 = !DILocation(line: 2124, column: 54, scope: !8860)
!8860 = !DILexicalBlockFile(scope: !8861, file: !1150, discriminator: 1)
!8861 = distinct !DILexicalBlock(scope: !8793, file: !1150, line: 2124, column: 8)
!8862 = !DILocation(line: 2125, column: 17, scope: !8793)
!8863 = !DILocation(line: 2125, column: 6, scope: !8793)
!8864 = !DILocation(line: 2125, column: 15, scope: !8793)
!8865 = !DILocation(line: 2126, column: 12, scope: !8793)
!8866 = !DILocation(line: 2126, column: 5, scope: !8793)
!8867 = distinct !DISubprogram(name: "init_put_bits", scope: !8648, file: !8648, line: 48, type: !8868, isLocal: true, isDefinition: true, scopeLine: 50, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!8868 = !DISubroutineType(types: !8869)
!8869 = !{null, !8870, !1030, !1025}
!8870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8647, size: 64, align: 64)
!8871 = !DILocalVariable(name: "s", arg: 1, scope: !8867, file: !8648, line: 48, type: !8870)
!8872 = !DILocation(line: 48, column: 49, scope: !8867)
!8873 = !DILocalVariable(name: "buffer", arg: 2, scope: !8867, file: !8648, line: 48, type: !1030)
!8874 = !DILocation(line: 48, column: 61, scope: !8867)
!8875 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !8867, file: !8648, line: 49, type: !1025)
!8876 = !DILocation(line: 49, column: 38, scope: !8867)
!8877 = !DILocation(line: 51, column: 9, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8867, file: !8648, line: 51, column: 9)
!8879 = !DILocation(line: 51, column: 21, scope: !8878)
!8880 = !DILocation(line: 51, column: 9, scope: !8867)
!8881 = !DILocation(line: 52, column: 21, scope: !8882)
!8882 = distinct !DILexicalBlock(scope: !8878, file: !8648, line: 51, column: 26)
!8883 = !DILocation(line: 53, column: 16, scope: !8882)
!8884 = !DILocation(line: 54, column: 5, scope: !8882)
!8885 = !DILocation(line: 56, column: 27, scope: !8867)
!8886 = !DILocation(line: 56, column: 25, scope: !8867)
!8887 = !DILocation(line: 56, column: 5, scope: !8867)
!8888 = !DILocation(line: 56, column: 8, scope: !8867)
!8889 = !DILocation(line: 56, column: 21, scope: !8867)
!8890 = !DILocation(line: 57, column: 14, scope: !8867)
!8891 = !DILocation(line: 57, column: 5, scope: !8867)
!8892 = !DILocation(line: 57, column: 8, scope: !8867)
!8893 = !DILocation(line: 57, column: 12, scope: !8867)
!8894 = !DILocation(line: 58, column: 18, scope: !8867)
!8895 = !DILocation(line: 58, column: 21, scope: !8867)
!8896 = !DILocation(line: 58, column: 27, scope: !8867)
!8897 = !DILocation(line: 58, column: 25, scope: !8867)
!8898 = !DILocation(line: 58, column: 5, scope: !8867)
!8899 = !DILocation(line: 58, column: 8, scope: !8867)
!8900 = !DILocation(line: 58, column: 16, scope: !8867)
!8901 = !DILocation(line: 59, column: 18, scope: !8867)
!8902 = !DILocation(line: 59, column: 21, scope: !8867)
!8903 = !DILocation(line: 59, column: 5, scope: !8867)
!8904 = !DILocation(line: 59, column: 8, scope: !8867)
!8905 = !DILocation(line: 59, column: 16, scope: !8867)
!8906 = !DILocation(line: 60, column: 5, scope: !8867)
!8907 = !DILocation(line: 60, column: 8, scope: !8867)
!8908 = !DILocation(line: 60, column: 17, scope: !8867)
!8909 = !DILocation(line: 61, column: 5, scope: !8867)
!8910 = !DILocation(line: 61, column: 8, scope: !8867)
!8911 = !DILocation(line: 61, column: 16, scope: !8867)
!8912 = !DILocation(line: 62, column: 1, scope: !8867)
!8913 = distinct !DISubprogram(name: "put_bits", scope: !8648, file: !8648, line: 164, type: !8914, isLocal: true, isDefinition: true, scopeLine: 165, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!8914 = !DISubroutineType(types: !8915)
!8915 = !{null, !8870, !1025, !1024}
!8916 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !8917)
!8917 = distinct !DILocation(line: 197, column: 60, scope: !8918)
!8918 = distinct !DILexicalBlock(scope: !8919, file: !8648, line: 196, column: 42)
!8919 = distinct !DILexicalBlock(scope: !8920, file: !8648, line: 196, column: 13)
!8920 = distinct !DILexicalBlock(scope: !8921, file: !8648, line: 193, column: 12)
!8921 = distinct !DILexicalBlock(scope: !8913, file: !8648, line: 190, column: 9)
!8922 = !DILocalVariable(name: "s", arg: 1, scope: !8913, file: !8648, line: 164, type: !8870)
!8923 = !DILocation(line: 164, column: 44, scope: !8913)
!8924 = !DILocalVariable(name: "n", arg: 2, scope: !8913, file: !8648, line: 164, type: !1025)
!8925 = !DILocation(line: 164, column: 51, scope: !8913)
!8926 = !DILocalVariable(name: "value", arg: 3, scope: !8913, file: !8648, line: 164, type: !1024)
!8927 = !DILocation(line: 164, column: 67, scope: !8913)
!8928 = !DILocalVariable(name: "bit_buf", scope: !8913, file: !8648, line: 166, type: !1024)
!8929 = !DILocation(line: 166, column: 18, scope: !8913)
!8930 = !DILocalVariable(name: "bit_left", scope: !8913, file: !8648, line: 167, type: !1025)
!8931 = !DILocation(line: 167, column: 9, scope: !8913)
!8932 = !DILocation(line: 171, column: 15, scope: !8913)
!8933 = !DILocation(line: 171, column: 18, scope: !8913)
!8934 = !DILocation(line: 171, column: 13, scope: !8913)
!8935 = !DILocation(line: 172, column: 16, scope: !8913)
!8936 = !DILocation(line: 172, column: 19, scope: !8913)
!8937 = !DILocation(line: 172, column: 14, scope: !8913)
!8938 = !DILocation(line: 190, column: 9, scope: !8921)
!8939 = !DILocation(line: 190, column: 13, scope: !8921)
!8940 = !DILocation(line: 190, column: 11, scope: !8921)
!8941 = !DILocation(line: 190, column: 9, scope: !8913)
!8942 = !DILocation(line: 191, column: 20, scope: !8943)
!8943 = distinct !DILexicalBlock(scope: !8921, file: !8648, line: 190, column: 23)
!8944 = !DILocation(line: 191, column: 31, scope: !8943)
!8945 = !DILocation(line: 191, column: 28, scope: !8943)
!8946 = !DILocation(line: 191, column: 36, scope: !8943)
!8947 = !DILocation(line: 191, column: 34, scope: !8943)
!8948 = !DILocation(line: 191, column: 17, scope: !8943)
!8949 = !DILocation(line: 192, column: 21, scope: !8943)
!8950 = !DILocation(line: 192, column: 18, scope: !8943)
!8951 = !DILocation(line: 193, column: 5, scope: !8943)
!8952 = !DILocation(line: 194, column: 21, scope: !8920)
!8953 = !DILocation(line: 194, column: 17, scope: !8920)
!8954 = !DILocation(line: 195, column: 20, scope: !8920)
!8955 = !DILocation(line: 195, column: 30, scope: !8920)
!8956 = !DILocation(line: 195, column: 34, scope: !8920)
!8957 = !DILocation(line: 195, column: 32, scope: !8920)
!8958 = !DILocation(line: 195, column: 26, scope: !8920)
!8959 = !DILocation(line: 195, column: 17, scope: !8920)
!8960 = !DILocation(line: 196, column: 17, scope: !8919)
!8961 = !DILocation(line: 196, column: 20, scope: !8919)
!8962 = !DILocation(line: 196, column: 30, scope: !8919)
!8963 = !DILocation(line: 196, column: 33, scope: !8919)
!8964 = !DILocation(line: 196, column: 28, scope: !8919)
!8965 = !DILocation(line: 196, column: 15, scope: !8919)
!8966 = !DILocation(line: 196, column: 13, scope: !8920)
!8967 = !DILocation(line: 197, column: 71, scope: !8918)
!8968 = !DILocation(line: 197, column: 60, scope: !8918)
!8969 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !8917)
!8970 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !8917)
!8971 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !8917)
!8972 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !8917)
!8973 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !8917)
!8974 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !8917)
!8975 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !8917)
!8976 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !8917)
!8977 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !8917)
!8978 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !8917)
!8979 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !8917)
!8980 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !8917)
!8981 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !8917)
!8982 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !8917)
!8983 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !8917)
!8984 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !8917)
!8985 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !8917)
!8986 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !8917)
!8987 = !DILocation(line: 197, column: 40, scope: !8918)
!8988 = !DILocation(line: 197, column: 43, scope: !8918)
!8989 = !DILocation(line: 197, column: 54, scope: !8918)
!8990 = !DILocation(line: 197, column: 57, scope: !8918)
!8991 = !DILocation(line: 198, column: 13, scope: !8918)
!8992 = !DILocation(line: 198, column: 16, scope: !8918)
!8993 = !DILocation(line: 198, column: 24, scope: !8918)
!8994 = !DILocation(line: 199, column: 9, scope: !8918)
!8995 = !DILocation(line: 200, column: 13, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8919, file: !8648, line: 199, column: 16)
!8997 = !DILocation(line: 203, column: 26, scope: !8920)
!8998 = !DILocation(line: 203, column: 24, scope: !8920)
!8999 = !DILocation(line: 203, column: 18, scope: !8920)
!9000 = !DILocation(line: 204, column: 19, scope: !8920)
!9001 = !DILocation(line: 204, column: 17, scope: !8920)
!9002 = !DILocation(line: 208, column: 18, scope: !8913)
!9003 = !DILocation(line: 208, column: 5, scope: !8913)
!9004 = !DILocation(line: 208, column: 8, scope: !8913)
!9005 = !DILocation(line: 208, column: 16, scope: !8913)
!9006 = !DILocation(line: 209, column: 19, scope: !8913)
!9007 = !DILocation(line: 209, column: 5, scope: !8913)
!9008 = !DILocation(line: 209, column: 8, scope: !8913)
!9009 = !DILocation(line: 209, column: 17, scope: !8913)
!9010 = !DILocation(line: 210, column: 1, scope: !8913)
!9011 = distinct !DISubprogram(name: "flush_put_bits", scope: !8648, file: !8648, line: 101, type: !9012, isLocal: true, isDefinition: true, scopeLine: 102, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!9012 = !DISubroutineType(types: !9013)
!9013 = !{null, !8870}
!9014 = !DILocalVariable(name: "s", arg: 1, scope: !9011, file: !8648, line: 101, type: !8870)
!9015 = !DILocation(line: 101, column: 50, scope: !9011)
!9016 = !DILocation(line: 104, column: 9, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !9011, file: !8648, line: 104, column: 9)
!9018 = !DILocation(line: 104, column: 12, scope: !9017)
!9019 = !DILocation(line: 104, column: 21, scope: !9017)
!9020 = !DILocation(line: 104, column: 9, scope: !9011)
!9021 = !DILocation(line: 105, column: 24, scope: !9017)
!9022 = !DILocation(line: 105, column: 27, scope: !9017)
!9023 = !DILocation(line: 105, column: 9, scope: !9017)
!9024 = !DILocation(line: 105, column: 12, scope: !9017)
!9025 = !DILocation(line: 105, column: 20, scope: !9017)
!9026 = !DILocation(line: 107, column: 5, scope: !9011)
!9027 = !DILocation(line: 107, column: 12, scope: !9028)
!9028 = !DILexicalBlockFile(scope: !9011, file: !8648, discriminator: 1)
!9029 = !DILocation(line: 107, column: 15, scope: !9028)
!9030 = !DILocation(line: 107, column: 24, scope: !9028)
!9031 = !DILocation(line: 107, column: 5, scope: !9028)
!9032 = !DILocation(line: 108, column: 9, scope: !9033)
!9033 = distinct !DILexicalBlock(scope: !9011, file: !8648, line: 107, column: 30)
!9034 = distinct !{!9034, !9032}
!9035 = !DILocation(line: 108, column: 20, scope: !9036)
!9036 = !DILexicalBlockFile(scope: !9037, file: !8648, discriminator: 1)
!9037 = distinct !DILexicalBlock(scope: !9038, file: !8648, line: 108, column: 18)
!9038 = distinct !DILexicalBlock(scope: !9033, file: !8648, line: 108, column: 12)
!9039 = !DILocation(line: 108, column: 23, scope: !9036)
!9040 = !DILocation(line: 108, column: 33, scope: !9036)
!9041 = !DILocation(line: 108, column: 36, scope: !9036)
!9042 = !DILocation(line: 108, column: 31, scope: !9036)
!9043 = !DILocation(line: 108, column: 18, scope: !9036)
!9044 = !DILocation(line: 108, column: 48, scope: !9045)
!9045 = !DILexicalBlockFile(scope: !9046, file: !8648, discriminator: 2)
!9046 = distinct !DILexicalBlock(scope: !9037, file: !8648, line: 108, column: 46)
!9047 = !DILocation(line: 108, column: 105, scope: !9048)
!9048 = !DILexicalBlockFile(scope: !9045, file: !8648, discriminator: 4)
!9049 = !DILocation(line: 108, column: 105, scope: !9045)
!9050 = !DILocation(line: 108, column: 116, scope: !9051)
!9051 = !DILexicalBlockFile(scope: !9038, file: !8648, discriminator: 3)
!9052 = !DILocation(line: 113, column: 25, scope: !9033)
!9053 = !DILocation(line: 113, column: 28, scope: !9033)
!9054 = !DILocation(line: 113, column: 36, scope: !9033)
!9055 = !DILocation(line: 113, column: 10, scope: !9033)
!9056 = !DILocation(line: 113, column: 13, scope: !9033)
!9057 = !DILocation(line: 113, column: 20, scope: !9033)
!9058 = !DILocation(line: 113, column: 23, scope: !9033)
!9059 = !DILocation(line: 114, column: 9, scope: !9033)
!9060 = !DILocation(line: 114, column: 12, scope: !9033)
!9061 = !DILocation(line: 114, column: 20, scope: !9033)
!9062 = !DILocation(line: 116, column: 9, scope: !9033)
!9063 = !DILocation(line: 116, column: 12, scope: !9033)
!9064 = !DILocation(line: 116, column: 21, scope: !9033)
!9065 = !DILocation(line: 107, column: 5, scope: !9066)
!9066 = !DILexicalBlockFile(scope: !9011, file: !8648, discriminator: 2)
!9067 = distinct !{!9067, !9026}
!9068 = !DILocation(line: 118, column: 5, scope: !9011)
!9069 = !DILocation(line: 118, column: 8, scope: !9011)
!9070 = !DILocation(line: 118, column: 17, scope: !9011)
!9071 = !DILocation(line: 119, column: 5, scope: !9011)
!9072 = !DILocation(line: 119, column: 8, scope: !9011)
!9073 = !DILocation(line: 119, column: 16, scope: !9011)
!9074 = !DILocation(line: 120, column: 1, scope: !9011)
!9075 = distinct !DISubprogram(name: "ff_mjpeg_decode_frame", scope: !1150, file: !1150, line: 2263, type: !1774, isLocal: false, isDefinition: true, scopeLine: 2265, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!9076 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !9077)
!9077 = distinct !DILocation(line: 2582, column: 9, scope: !9078)
!9078 = distinct !DILexicalBlock(scope: !9075, file: !1150, line: 2582, column: 9)
!9079 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !9080)
!9080 = distinct !DILocation(line: 2521, column: 9, scope: !9081)
!9081 = distinct !DILexicalBlock(scope: !9075, file: !1150, line: 2521, column: 9)
!9082 = !DILocalVariable(name: "avctx", arg: 1, scope: !9075, file: !1150, line: 2263, type: !1267)
!9083 = !DILocation(line: 2263, column: 43, scope: !9075)
!9084 = !DILocalVariable(name: "data", arg: 2, scope: !9075, file: !1150, line: 2263, type: !1026)
!9085 = !DILocation(line: 2263, column: 56, scope: !9075)
!9086 = !DILocalVariable(name: "got_frame", arg: 3, scope: !9075, file: !1150, line: 2263, type: !1462)
!9087 = !DILocation(line: 2263, column: 67, scope: !9075)
!9088 = !DILocalVariable(name: "avpkt", arg: 4, scope: !9075, file: !1150, line: 2264, type: !1316)
!9089 = !DILocation(line: 2264, column: 37, scope: !9075)
!9090 = !DILocalVariable(name: "frame", scope: !9075, file: !1150, line: 2266, type: !1033)
!9091 = !DILocation(line: 2266, column: 14, scope: !9075)
!9092 = !DILocation(line: 2266, column: 22, scope: !9075)
!9093 = !DILocalVariable(name: "buf", scope: !9075, file: !1150, line: 2267, type: !1146)
!9094 = !DILocation(line: 2267, column: 20, scope: !9075)
!9095 = !DILocation(line: 2267, column: 26, scope: !9075)
!9096 = !DILocation(line: 2267, column: 33, scope: !9075)
!9097 = !DILocalVariable(name: "buf_size", scope: !9075, file: !1150, line: 2268, type: !1025)
!9098 = !DILocation(line: 2268, column: 9, scope: !9075)
!9099 = !DILocation(line: 2268, column: 20, scope: !9075)
!9100 = !DILocation(line: 2268, column: 27, scope: !9075)
!9101 = !DILocalVariable(name: "s", scope: !9075, file: !1150, line: 2269, type: !1815)
!9102 = !DILocation(line: 2269, column: 25, scope: !9075)
!9103 = !DILocation(line: 2269, column: 29, scope: !9075)
!9104 = !DILocation(line: 2269, column: 36, scope: !9075)
!9105 = !DILocalVariable(name: "buf_end", scope: !9075, file: !1150, line: 2270, type: !1146)
!9106 = !DILocation(line: 2270, column: 20, scope: !9075)
!9107 = !DILocalVariable(name: "buf_ptr", scope: !9075, file: !1150, line: 2270, type: !1146)
!9108 = !DILocation(line: 2270, column: 30, scope: !9075)
!9109 = !DILocalVariable(name: "unescaped_buf_ptr", scope: !9075, file: !1150, line: 2271, type: !1146)
!9110 = !DILocation(line: 2271, column: 20, scope: !9075)
!9111 = !DILocalVariable(name: "hshift", scope: !9075, file: !1150, line: 2272, type: !1025)
!9112 = !DILocation(line: 2272, column: 9, scope: !9075)
!9113 = !DILocalVariable(name: "vshift", scope: !9075, file: !1150, line: 2272, type: !1025)
!9114 = !DILocation(line: 2272, column: 17, scope: !9075)
!9115 = !DILocalVariable(name: "unescaped_buf_size", scope: !9075, file: !1150, line: 2273, type: !1025)
!9116 = !DILocation(line: 2273, column: 9, scope: !9075)
!9117 = !DILocalVariable(name: "start_code", scope: !9075, file: !1150, line: 2274, type: !1025)
!9118 = !DILocation(line: 2274, column: 9, scope: !9075)
!9119 = !DILocalVariable(name: "i", scope: !9075, file: !1150, line: 2275, type: !1025)
!9120 = !DILocation(line: 2275, column: 9, scope: !9075)
!9121 = !DILocalVariable(name: "index", scope: !9075, file: !1150, line: 2275, type: !1025)
!9122 = !DILocation(line: 2275, column: 12, scope: !9075)
!9123 = !DILocalVariable(name: "ret", scope: !9075, file: !1150, line: 2276, type: !1025)
!9124 = !DILocation(line: 2276, column: 9, scope: !9075)
!9125 = !DILocalVariable(name: "is16bit", scope: !9075, file: !1150, line: 2277, type: !1025)
!9126 = !DILocation(line: 2277, column: 9, scope: !9075)
!9127 = !DILocation(line: 2279, column: 19, scope: !9075)
!9128 = !DILocation(line: 2279, column: 5, scope: !9075)
!9129 = !DILocation(line: 2279, column: 8, scope: !9075)
!9130 = !DILocation(line: 2279, column: 17, scope: !9075)
!9131 = !DILocation(line: 2281, column: 19, scope: !9075)
!9132 = !DILocation(line: 2281, column: 22, scope: !9075)
!9133 = !DILocation(line: 2281, column: 5, scope: !9075)
!9134 = !DILocation(line: 2282, column: 15, scope: !9075)
!9135 = !DILocation(line: 2282, column: 18, scope: !9075)
!9136 = !DILocation(line: 2282, column: 14, scope: !9075)
!9137 = !DILocation(line: 2282, column: 5, scope: !9075)
!9138 = !DILocation(line: 2283, column: 5, scope: !9075)
!9139 = !DILocation(line: 2283, column: 8, scope: !9075)
!9140 = !DILocation(line: 2283, column: 24, scope: !9075)
!9141 = !DILocation(line: 2285, column: 9, scope: !9142)
!9142 = distinct !DILexicalBlock(scope: !9075, file: !1150, line: 2285, column: 9)
!9143 = !DILocation(line: 2285, column: 12, scope: !9142)
!9144 = !DILocation(line: 2285, column: 19, scope: !9142)
!9145 = !DILocation(line: 2285, column: 9, scope: !9075)
!9146 = !DILocation(line: 2286, column: 27, scope: !9142)
!9147 = !DILocation(line: 2286, column: 9, scope: !9142)
!9148 = !DILocation(line: 2288, column: 15, scope: !9075)
!9149 = !DILocation(line: 2288, column: 13, scope: !9075)
!9150 = !DILocation(line: 2289, column: 15, scope: !9075)
!9151 = !DILocation(line: 2289, column: 21, scope: !9075)
!9152 = !DILocation(line: 2289, column: 19, scope: !9075)
!9153 = !DILocation(line: 2289, column: 13, scope: !9075)
!9154 = !DILocation(line: 2290, column: 5, scope: !9075)
!9155 = !DILocation(line: 2290, column: 12, scope: !9156)
!9156 = !DILexicalBlockFile(scope: !9075, file: !1150, discriminator: 1)
!9157 = !DILocation(line: 2290, column: 22, scope: !9156)
!9158 = !DILocation(line: 2290, column: 20, scope: !9156)
!9159 = !DILocation(line: 2290, column: 5, scope: !9156)
!9160 = !DILocation(line: 2292, column: 43, scope: !9161)
!9161 = distinct !DILexicalBlock(scope: !9075, file: !1150, line: 2290, column: 31)
!9162 = !DILocation(line: 2292, column: 56, scope: !9161)
!9163 = !DILocation(line: 2292, column: 22, scope: !9161)
!9164 = !DILocation(line: 2292, column: 20, scope: !9161)
!9165 = !DILocation(line: 2296, column: 13, scope: !9166)
!9166 = distinct !DILexicalBlock(scope: !9161, file: !1150, line: 2296, column: 13)
!9167 = !DILocation(line: 2296, column: 24, scope: !9166)
!9168 = !DILocation(line: 2296, column: 13, scope: !9161)
!9169 = !DILocation(line: 2297, column: 13, scope: !9170)
!9170 = distinct !DILexicalBlock(scope: !9166, file: !1150, line: 2296, column: 29)
!9171 = !DILocation(line: 2298, column: 20, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9166, file: !1150, line: 2298, column: 20)
!9173 = !DILocation(line: 2298, column: 39, scope: !9172)
!9174 = !DILocation(line: 2298, column: 20, scope: !9166)
!9175 = !DILocation(line: 2299, column: 20, scope: !9176)
!9176 = distinct !DILexicalBlock(scope: !9172, file: !1150, line: 2298, column: 57)
!9177 = !DILocation(line: 2301, column: 20, scope: !9176)
!9178 = !DILocation(line: 2301, column: 32, scope: !9176)
!9179 = !DILocation(line: 2301, column: 52, scope: !9176)
!9180 = !DILocation(line: 2299, column: 13, scope: !9176)
!9181 = !DILocation(line: 2302, column: 13, scope: !9176)
!9182 = !DILocation(line: 2304, column: 16, scope: !9161)
!9183 = !DILocation(line: 2305, column: 16, scope: !9161)
!9184 = !DILocation(line: 2305, column: 28, scope: !9161)
!9185 = !DILocation(line: 2305, column: 38, scope: !9161)
!9186 = !DILocation(line: 2305, column: 36, scope: !9161)
!9187 = !DILocation(line: 2304, column: 9, scope: !9161)
!9188 = !DILocation(line: 2307, column: 31, scope: !9161)
!9189 = !DILocation(line: 2307, column: 34, scope: !9161)
!9190 = !DILocation(line: 2307, column: 38, scope: !9161)
!9191 = !DILocation(line: 2307, column: 57, scope: !9161)
!9192 = !DILocation(line: 2307, column: 15, scope: !9161)
!9193 = !DILocation(line: 2307, column: 13, scope: !9161)
!9194 = !DILocation(line: 2309, column: 13, scope: !9195)
!9195 = distinct !DILexicalBlock(scope: !9161, file: !1150, line: 2309, column: 13)
!9196 = !DILocation(line: 2309, column: 17, scope: !9195)
!9197 = !DILocation(line: 2309, column: 13, scope: !9161)
!9198 = !DILocation(line: 2310, column: 20, scope: !9199)
!9199 = distinct !DILexicalBlock(scope: !9195, file: !1150, line: 2309, column: 22)
!9200 = !DILocation(line: 2310, column: 13, scope: !9199)
!9201 = !DILocation(line: 2311, column: 13, scope: !9199)
!9202 = !DILocation(line: 2314, column: 25, scope: !9161)
!9203 = !DILocation(line: 2314, column: 9, scope: !9161)
!9204 = !DILocation(line: 2314, column: 12, scope: !9161)
!9205 = !DILocation(line: 2314, column: 23, scope: !9161)
!9206 = !DILocation(line: 2315, column: 13, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !9161, file: !1150, line: 2315, column: 13)
!9208 = !DILocation(line: 2315, column: 16, scope: !9207)
!9209 = !DILocation(line: 2315, column: 23, scope: !9207)
!9210 = !DILocation(line: 2315, column: 29, scope: !9207)
!9211 = !DILocation(line: 2315, column: 13, scope: !9161)
!9212 = !DILocation(line: 2316, column: 20, scope: !9207)
!9213 = !DILocation(line: 2316, column: 50, scope: !9207)
!9214 = !DILocation(line: 2316, column: 13, scope: !9207)
!9215 = !DILocation(line: 2319, column: 13, scope: !9216)
!9216 = distinct !DILexicalBlock(scope: !9161, file: !1150, line: 2319, column: 13)
!9217 = !DILocation(line: 2319, column: 24, scope: !9216)
!9218 = !DILocation(line: 2319, column: 32, scope: !9216)
!9219 = !DILocation(line: 2319, column: 35, scope: !9220)
!9220 = !DILexicalBlockFile(scope: !9216, file: !1150, discriminator: 1)
!9221 = !DILocation(line: 2319, column: 46, scope: !9220)
!9222 = !DILocation(line: 2319, column: 13, scope: !9220)
!9223 = !DILocation(line: 2320, column: 20, scope: !9224)
!9224 = distinct !DILexicalBlock(scope: !9216, file: !1150, line: 2319, column: 55)
!9225 = !DILocation(line: 2321, column: 44, scope: !9224)
!9226 = !DILocation(line: 2321, column: 55, scope: !9224)
!9227 = !DILocation(line: 2320, column: 13, scope: !9224)
!9228 = !DILocation(line: 2323, column: 9, scope: !9224)
!9229 = !DILocation(line: 2323, column: 20, scope: !9230)
!9230 = !DILexicalBlockFile(scope: !9231, file: !1150, discriminator: 1)
!9231 = distinct !DILexicalBlock(scope: !9216, file: !1150, line: 2323, column: 20)
!9232 = !DILocation(line: 2323, column: 31, scope: !9230)
!9233 = !DILocation(line: 2323, column: 39, scope: !9230)
!9234 = !DILocation(line: 2323, column: 42, scope: !9235)
!9235 = !DILexicalBlockFile(scope: !9231, file: !1150, discriminator: 2)
!9236 = !DILocation(line: 2323, column: 53, scope: !9235)
!9237 = !DILocation(line: 2323, column: 20, scope: !9235)
!9238 = !DILocation(line: 2324, column: 41, scope: !9239)
!9239 = distinct !DILexicalBlock(scope: !9240, file: !1150, line: 2324, column: 17)
!9240 = distinct !DILexicalBlock(scope: !9231, file: !1150, line: 2323, column: 63)
!9241 = !DILocation(line: 2324, column: 24, scope: !9239)
!9242 = !DILocation(line: 2324, column: 22, scope: !9239)
!9243 = !DILocation(line: 2324, column: 45, scope: !9239)
!9244 = !DILocation(line: 2324, column: 17, scope: !9240)
!9245 = !DILocation(line: 2325, column: 24, scope: !9239)
!9246 = !DILocation(line: 2326, column: 45, scope: !9239)
!9247 = !DILocation(line: 2326, column: 55, scope: !9239)
!9248 = !DILocation(line: 2326, column: 64, scope: !9239)
!9249 = !DILocation(line: 2326, column: 24, scope: !9250)
!9250 = !DILexicalBlockFile(scope: !9239, file: !1150, discriminator: 1)
!9251 = !DILocation(line: 2325, column: 17, scope: !9239)
!9252 = !DILocation(line: 2328, column: 9, scope: !9240)
!9253 = !DILocation(line: 2328, column: 20, scope: !9254)
!9254 = !DILexicalBlockFile(scope: !9255, file: !1150, discriminator: 1)
!9255 = distinct !DILexicalBlock(scope: !9231, file: !1150, line: 2328, column: 20)
!9256 = !DILocation(line: 2328, column: 31, scope: !9254)
!9257 = !DILocation(line: 2329, column: 36, scope: !9258)
!9258 = distinct !DILexicalBlock(scope: !9255, file: !1150, line: 2328, column: 39)
!9259 = !DILocation(line: 2329, column: 19, scope: !9258)
!9260 = !DILocation(line: 2329, column: 17, scope: !9258)
!9261 = !DILocation(line: 2330, column: 17, scope: !9262)
!9262 = distinct !DILexicalBlock(scope: !9258, file: !1150, line: 2330, column: 17)
!9263 = !DILocation(line: 2330, column: 21, scope: !9262)
!9264 = !DILocation(line: 2330, column: 17, scope: !9258)
!9265 = !DILocation(line: 2331, column: 24, scope: !9262)
!9266 = !DILocation(line: 2331, column: 17, scope: !9262)
!9267 = !DILocation(line: 2332, column: 9, scope: !9258)
!9268 = !DILocation(line: 2332, column: 20, scope: !9269)
!9269 = !DILexicalBlockFile(scope: !9270, file: !1150, discriminator: 1)
!9270 = distinct !DILexicalBlock(scope: !9255, file: !1150, line: 2332, column: 20)
!9271 = !DILocation(line: 2332, column: 31, scope: !9269)
!9272 = !DILocation(line: 2333, column: 39, scope: !9273)
!9273 = distinct !DILexicalBlock(scope: !9270, file: !1150, line: 2332, column: 39)
!9274 = !DILocation(line: 2333, column: 19, scope: !9273)
!9275 = !DILocation(line: 2333, column: 17, scope: !9273)
!9276 = !DILocation(line: 2334, column: 17, scope: !9277)
!9277 = distinct !DILexicalBlock(scope: !9273, file: !1150, line: 2334, column: 17)
!9278 = !DILocation(line: 2334, column: 21, scope: !9277)
!9279 = !DILocation(line: 2334, column: 17, scope: !9273)
!9280 = !DILocation(line: 2335, column: 24, scope: !9277)
!9281 = !DILocation(line: 2335, column: 17, scope: !9277)
!9282 = !DILocation(line: 2336, column: 9, scope: !9273)
!9283 = !DILocation(line: 2338, column: 13, scope: !9161)
!9284 = !DILocation(line: 2346, column: 13, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !9161, file: !1150, line: 2346, column: 13)
!9286 = !DILocation(line: 2346, column: 20, scope: !9285)
!9287 = !DILocation(line: 2346, column: 31, scope: !9285)
!9288 = !DILocation(line: 2346, column: 13, scope: !9161)
!9289 = !DILocation(line: 2347, column: 20, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9285, file: !1150, line: 2346, column: 49)
!9291 = !DILocation(line: 2347, column: 13, scope: !9290)
!9292 = !DILocation(line: 2356, column: 17, scope: !9293)
!9293 = distinct !DILexicalBlock(scope: !9290, file: !1150, line: 2347, column: 32)
!9294 = !DILocation(line: 2358, column: 17, scope: !9293)
!9295 = !DILocation(line: 2360, column: 9, scope: !9290)
!9296 = !DILocation(line: 2362, column: 17, scope: !9161)
!9297 = !DILocation(line: 2362, column: 9, scope: !9161)
!9298 = !DILocation(line: 2364, column: 13, scope: !9299)
!9299 = distinct !DILexicalBlock(scope: !9161, file: !1150, line: 2362, column: 29)
!9300 = !DILocation(line: 2364, column: 16, scope: !9299)
!9301 = !DILocation(line: 2364, column: 33, scope: !9299)
!9302 = !DILocation(line: 2365, column: 13, scope: !9299)
!9303 = !DILocation(line: 2365, column: 16, scope: !9299)
!9304 = !DILocation(line: 2365, column: 30, scope: !9299)
!9305 = !DILocation(line: 2366, column: 35, scope: !9299)
!9306 = !DILocation(line: 2366, column: 13, scope: !9299)
!9307 = !DILocation(line: 2366, column: 16, scope: !9299)
!9308 = !DILocation(line: 2366, column: 33, scope: !9299)
!9309 = !DILocation(line: 2367, column: 40, scope: !9299)
!9310 = !DILocation(line: 2367, column: 50, scope: !9299)
!9311 = !DILocation(line: 2367, column: 48, scope: !9299)
!9312 = !DILocation(line: 2367, column: 13, scope: !9299)
!9313 = !DILocation(line: 2367, column: 16, scope: !9299)
!9314 = !DILocation(line: 2367, column: 38, scope: !9299)
!9315 = !DILocation(line: 2369, column: 13, scope: !9299)
!9316 = !DILocation(line: 2371, column: 44, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9299, file: !1150, line: 2371, column: 17)
!9318 = !DILocation(line: 2371, column: 24, scope: !9317)
!9319 = !DILocation(line: 2371, column: 22, scope: !9317)
!9320 = !DILocation(line: 2371, column: 48, scope: !9317)
!9321 = !DILocation(line: 2371, column: 17, scope: !9299)
!9322 = !DILocation(line: 2372, column: 24, scope: !9323)
!9323 = distinct !DILexicalBlock(scope: !9317, file: !1150, line: 2371, column: 53)
!9324 = !DILocation(line: 2372, column: 17, scope: !9323)
!9325 = !DILocation(line: 2373, column: 17, scope: !9323)
!9326 = !DILocation(line: 2375, column: 13, scope: !9299)
!9327 = !DILocation(line: 2378, column: 17, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !9299, file: !1150, line: 2378, column: 17)
!9329 = !DILocation(line: 2378, column: 28, scope: !9328)
!9330 = !DILocation(line: 2378, column: 17, scope: !9299)
!9331 = !DILocation(line: 2379, column: 17, scope: !9328)
!9332 = !DILocation(line: 2379, column: 20, scope: !9328)
!9333 = !DILocation(line: 2379, column: 27, scope: !9328)
!9334 = !DILocation(line: 2379, column: 35, scope: !9328)
!9335 = !DILocation(line: 2381, column: 17, scope: !9328)
!9336 = !DILocation(line: 2381, column: 20, scope: !9328)
!9337 = !DILocation(line: 2381, column: 27, scope: !9328)
!9338 = !DILocation(line: 2381, column: 35, scope: !9328)
!9339 = !DILocation(line: 2382, column: 13, scope: !9299)
!9340 = !DILocation(line: 2382, column: 16, scope: !9299)
!9341 = !DILocation(line: 2382, column: 25, scope: !9299)
!9342 = !DILocation(line: 2383, column: 13, scope: !9299)
!9343 = !DILocation(line: 2383, column: 16, scope: !9299)
!9344 = !DILocation(line: 2383, column: 19, scope: !9299)
!9345 = !DILocation(line: 2384, column: 13, scope: !9299)
!9346 = !DILocation(line: 2384, column: 16, scope: !9299)
!9347 = !DILocation(line: 2384, column: 28, scope: !9299)
!9348 = !DILocation(line: 2385, column: 44, scope: !9349)
!9349 = distinct !DILexicalBlock(scope: !9299, file: !1150, line: 2385, column: 17)
!9350 = !DILocation(line: 2385, column: 24, scope: !9349)
!9351 = !DILocation(line: 2385, column: 22, scope: !9349)
!9352 = !DILocation(line: 2385, column: 48, scope: !9349)
!9353 = !DILocation(line: 2385, column: 17, scope: !9299)
!9354 = !DILocation(line: 2386, column: 17, scope: !9349)
!9355 = !DILocation(line: 2387, column: 13, scope: !9299)
!9356 = !DILocation(line: 2389, column: 13, scope: !9299)
!9357 = !DILocation(line: 2389, column: 16, scope: !9299)
!9358 = !DILocation(line: 2389, column: 23, scope: !9299)
!9359 = !DILocation(line: 2389, column: 31, scope: !9299)
!9360 = !DILocation(line: 2390, column: 13, scope: !9299)
!9361 = !DILocation(line: 2390, column: 16, scope: !9299)
!9362 = !DILocation(line: 2390, column: 25, scope: !9299)
!9363 = !DILocation(line: 2391, column: 13, scope: !9299)
!9364 = !DILocation(line: 2391, column: 16, scope: !9299)
!9365 = !DILocation(line: 2391, column: 19, scope: !9299)
!9366 = !DILocation(line: 2392, column: 13, scope: !9299)
!9367 = !DILocation(line: 2392, column: 16, scope: !9299)
!9368 = !DILocation(line: 2392, column: 28, scope: !9299)
!9369 = !DILocation(line: 2393, column: 44, scope: !9370)
!9370 = distinct !DILexicalBlock(scope: !9299, file: !1150, line: 2393, column: 17)
!9371 = !DILocation(line: 2393, column: 24, scope: !9370)
!9372 = !DILocation(line: 2393, column: 22, scope: !9370)
!9373 = !DILocation(line: 2393, column: 48, scope: !9370)
!9374 = !DILocation(line: 2393, column: 17, scope: !9299)
!9375 = !DILocation(line: 2394, column: 17, scope: !9370)
!9376 = !DILocation(line: 2395, column: 13, scope: !9299)
!9377 = !DILocation(line: 2397, column: 13, scope: !9299)
!9378 = !DILocation(line: 2397, column: 16, scope: !9299)
!9379 = !DILocation(line: 2397, column: 23, scope: !9299)
!9380 = !DILocation(line: 2397, column: 31, scope: !9299)
!9381 = !DILocation(line: 2398, column: 13, scope: !9299)
!9382 = !DILocation(line: 2398, column: 16, scope: !9299)
!9383 = !DILocation(line: 2398, column: 23, scope: !9299)
!9384 = !DILocation(line: 2398, column: 34, scope: !9299)
!9385 = !DILocation(line: 2399, column: 13, scope: !9299)
!9386 = !DILocation(line: 2399, column: 16, scope: !9299)
!9387 = !DILocation(line: 2399, column: 25, scope: !9299)
!9388 = !DILocation(line: 2400, column: 13, scope: !9299)
!9389 = !DILocation(line: 2400, column: 16, scope: !9299)
!9390 = !DILocation(line: 2400, column: 19, scope: !9299)
!9391 = !DILocation(line: 2401, column: 13, scope: !9299)
!9392 = !DILocation(line: 2401, column: 16, scope: !9299)
!9393 = !DILocation(line: 2401, column: 28, scope: !9299)
!9394 = !DILocation(line: 2402, column: 44, scope: !9395)
!9395 = distinct !DILexicalBlock(scope: !9299, file: !1150, line: 2402, column: 17)
!9396 = !DILocation(line: 2402, column: 24, scope: !9395)
!9397 = !DILocation(line: 2402, column: 22, scope: !9395)
!9398 = !DILocation(line: 2402, column: 48, scope: !9395)
!9399 = !DILocation(line: 2402, column: 17, scope: !9299)
!9400 = !DILocation(line: 2403, column: 17, scope: !9395)
!9401 = !DILocation(line: 2404, column: 13, scope: !9299)
!9402 = !DILocation(line: 2406, column: 13, scope: !9299)
!9403 = !DILocation(line: 2406, column: 16, scope: !9299)
!9404 = !DILocation(line: 2406, column: 23, scope: !9299)
!9405 = !DILocation(line: 2406, column: 31, scope: !9299)
!9406 = !DILocation(line: 2407, column: 13, scope: !9299)
!9407 = !DILocation(line: 2407, column: 16, scope: !9299)
!9408 = !DILocation(line: 2407, column: 23, scope: !9299)
!9409 = !DILocation(line: 2407, column: 34, scope: !9299)
!9410 = !DILocation(line: 2408, column: 13, scope: !9299)
!9411 = !DILocation(line: 2408, column: 16, scope: !9299)
!9412 = !DILocation(line: 2408, column: 25, scope: !9299)
!9413 = !DILocation(line: 2409, column: 13, scope: !9299)
!9414 = !DILocation(line: 2409, column: 16, scope: !9299)
!9415 = !DILocation(line: 2409, column: 19, scope: !9299)
!9416 = !DILocation(line: 2410, column: 13, scope: !9299)
!9417 = !DILocation(line: 2410, column: 16, scope: !9299)
!9418 = !DILocation(line: 2410, column: 28, scope: !9299)
!9419 = !DILocation(line: 2411, column: 44, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !9299, file: !1150, line: 2411, column: 17)
!9421 = !DILocation(line: 2411, column: 24, scope: !9420)
!9422 = !DILocation(line: 2411, column: 22, scope: !9420)
!9423 = !DILocation(line: 2411, column: 48, scope: !9420)
!9424 = !DILocation(line: 2411, column: 17, scope: !9299)
!9425 = !DILocation(line: 2412, column: 17, scope: !9420)
!9426 = !DILocation(line: 2413, column: 13, scope: !9299)
!9427 = !DILocation(line: 2416, column: 45, scope: !9428)
!9428 = distinct !DILexicalBlock(scope: !9299, file: !1150, line: 2415, column: 17)
!9429 = !DILocation(line: 2416, column: 24, scope: !9428)
!9430 = !DILocation(line: 2416, column: 22, scope: !9428)
!9431 = !DILocation(line: 2416, column: 49, scope: !9428)
!9432 = !DILocation(line: 2415, column: 17, scope: !9299)
!9433 = !DILocation(line: 2417, column: 17, scope: !9428)
!9434 = !DILocation(line: 2418, column: 13, scope: !9299)
!9435 = !DILocation(line: 2418, column: 13, scope: !9436)
!9436 = !DILexicalBlockFile(scope: !9299, file: !1150, discriminator: 1)
!9437 = !DILocation(line: 2421, column: 18, scope: !9438)
!9438 = distinct !DILexicalBlock(scope: !9299, file: !1150, line: 2421, column: 17)
!9439 = !DILocation(line: 2421, column: 25, scope: !9438)
!9440 = !DILocation(line: 2421, column: 33, scope: !9438)
!9441 = !DILocation(line: 2421, column: 36, scope: !9442)
!9442 = !DILexicalBlockFile(scope: !9438, file: !1150, discriminator: 1)
!9443 = !DILocation(line: 2421, column: 43, scope: !9442)
!9444 = !DILocation(line: 2421, column: 54, scope: !9442)
!9445 = !DILocation(line: 2421, column: 71, scope: !9442)
!9446 = !DILocation(line: 2422, column: 17, scope: !9438)
!9447 = !DILocation(line: 2422, column: 20, scope: !9438)
!9448 = !DILocation(line: 2422, column: 32, scope: !9438)
!9449 = !DILocation(line: 2422, column: 35, scope: !9442)
!9450 = !DILocation(line: 2422, column: 38, scope: !9442)
!9451 = !DILocation(line: 2422, column: 47, scope: !9442)
!9452 = !DILocation(line: 2422, column: 50, scope: !9453)
!9453 = !DILexicalBlockFile(scope: !9438, file: !1150, discriminator: 2)
!9454 = !DILocation(line: 2422, column: 53, scope: !9453)
!9455 = !DILocation(line: 2421, column: 17, scope: !9456)
!9456 = !DILexicalBlockFile(scope: !9299, file: !1150, discriminator: 2)
!9457 = !DILocation(line: 2423, column: 48, scope: !9438)
!9458 = !DILocation(line: 2423, column: 17, scope: !9438)
!9459 = !DILocation(line: 2424, column: 13, scope: !9299)
!9460 = !DILocation(line: 2424, column: 16, scope: !9299)
!9461 = !DILocation(line: 2424, column: 25, scope: !9299)
!9462 = !DILocation(line: 2425, column: 18, scope: !9463)
!9463 = distinct !DILexicalBlock(scope: !9299, file: !1150, line: 2425, column: 17)
!9464 = !DILocation(line: 2425, column: 21, scope: !9463)
!9465 = !DILocation(line: 2425, column: 17, scope: !9299)
!9466 = !DILocation(line: 2426, column: 24, scope: !9467)
!9467 = distinct !DILexicalBlock(scope: !9463, file: !1150, line: 2425, column: 34)
!9468 = !DILocation(line: 2426, column: 17, scope: !9467)
!9469 = !DILocation(line: 2428, column: 17, scope: !9467)
!9470 = !DILocation(line: 2430, column: 17, scope: !9471)
!9471 = distinct !DILexicalBlock(scope: !9299, file: !1150, line: 2430, column: 17)
!9472 = !DILocation(line: 2430, column: 20, scope: !9471)
!9473 = !DILocation(line: 2430, column: 17, scope: !9299)
!9474 = !DILocation(line: 2431, column: 17, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !9471, file: !1150, line: 2430, column: 32)
!9476 = !DILocation(line: 2431, column: 20, scope: !9475)
!9477 = !DILocation(line: 2431, column: 33, scope: !9475)
!9478 = !DILocation(line: 2433, column: 21, scope: !9479)
!9479 = distinct !DILexicalBlock(scope: !9475, file: !1150, line: 2433, column: 21)
!9480 = !DILocation(line: 2433, column: 24, scope: !9479)
!9481 = !DILocation(line: 2433, column: 41, scope: !9479)
!9482 = !DILocation(line: 2433, column: 44, scope: !9479)
!9483 = !DILocation(line: 2433, column: 40, scope: !9479)
!9484 = !DILocation(line: 2433, column: 37, scope: !9479)
!9485 = !DILocation(line: 2433, column: 21, scope: !9475)
!9486 = !DILocation(line: 2434, column: 21, scope: !9479)
!9487 = !DILocation(line: 2435, column: 13, scope: !9475)
!9488 = !DILocation(line: 2436, column: 17, scope: !9489)
!9489 = distinct !DILexicalBlock(scope: !9299, file: !1150, line: 2436, column: 17)
!9490 = !DILocation(line: 2436, column: 24, scope: !9489)
!9491 = !DILocation(line: 2436, column: 35, scope: !9489)
!9492 = !DILocation(line: 2436, column: 17, scope: !9299)
!9493 = !DILocation(line: 2437, column: 17, scope: !9494)
!9494 = distinct !DILexicalBlock(scope: !9489, file: !1150, line: 2436, column: 53)
!9495 = !DILocation(line: 2437, column: 20, scope: !9494)
!9496 = !DILocation(line: 2437, column: 32, scope: !9494)
!9497 = !DILocation(line: 2438, column: 17, scope: !9494)
!9498 = !DILocation(line: 2440, column: 17, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9299, file: !1150, line: 2440, column: 17)
!9500 = !DILocation(line: 2440, column: 20, scope: !9499)
!9501 = !DILocation(line: 2440, column: 27, scope: !9499)
!9502 = !DILocation(line: 2440, column: 17, scope: !9299)
!9503 = !DILocation(line: 2441, column: 23, scope: !9504)
!9504 = distinct !DILexicalBlock(scope: !9499, file: !1150, line: 2440, column: 36)
!9505 = !DILocation(line: 2441, column: 26, scope: !9504)
!9506 = !DILocation(line: 2441, column: 33, scope: !9504)
!9507 = !DILocation(line: 2441, column: 42, scope: !9504)
!9508 = !DILocation(line: 2441, column: 52, scope: !9504)
!9509 = !DILocation(line: 2441, column: 55, scope: !9504)
!9510 = !DILocation(line: 2441, column: 21, scope: !9504)
!9511 = !DILocation(line: 2442, column: 21, scope: !9512)
!9512 = distinct !DILexicalBlock(scope: !9504, file: !1150, line: 2442, column: 21)
!9513 = !DILocation(line: 2442, column: 25, scope: !9512)
!9514 = !DILocation(line: 2442, column: 21, scope: !9504)
!9515 = !DILocation(line: 2443, column: 28, scope: !9512)
!9516 = !DILocation(line: 2443, column: 21, scope: !9512)
!9517 = !DILocation(line: 2445, column: 27, scope: !9504)
!9518 = !DILocation(line: 2445, column: 30, scope: !9504)
!9519 = !DILocation(line: 2445, column: 26, scope: !9504)
!9520 = !DILocation(line: 2445, column: 17, scope: !9504)
!9521 = !DILocation(line: 2446, column: 13, scope: !9504)
!9522 = !DILocation(line: 2447, column: 37, scope: !9523)
!9523 = distinct !DILexicalBlock(scope: !9299, file: !1150, line: 2447, column: 17)
!9524 = !DILocation(line: 2447, column: 44, scope: !9523)
!9525 = !DILocation(line: 2447, column: 47, scope: !9523)
!9526 = !DILocation(line: 2447, column: 24, scope: !9523)
!9527 = !DILocation(line: 2447, column: 22, scope: !9523)
!9528 = !DILocation(line: 2447, column: 61, scope: !9523)
!9529 = !DILocation(line: 2447, column: 17, scope: !9299)
!9530 = !DILocation(line: 2448, column: 24, scope: !9523)
!9531 = !DILocation(line: 2448, column: 17, scope: !9523)
!9532 = !DILocation(line: 2449, column: 14, scope: !9299)
!9533 = !DILocation(line: 2449, column: 24, scope: !9299)
!9534 = !DILocation(line: 2450, column: 13, scope: !9299)
!9535 = !DILocation(line: 2450, column: 16, scope: !9299)
!9536 = !DILocation(line: 2450, column: 28, scope: !9299)
!9537 = !DILocation(line: 2452, column: 18, scope: !9538)
!9538 = distinct !DILexicalBlock(scope: !9299, file: !1150, line: 2452, column: 17)
!9539 = !DILocation(line: 2452, column: 21, scope: !9538)
!9540 = !DILocation(line: 2452, column: 17, scope: !9299)
!9541 = !DILocalVariable(name: "qp", scope: !9542, file: !1150, line: 2453, type: !1025)
!9542 = distinct !DILexicalBlock(scope: !9538, file: !1150, line: 2452, column: 31)
!9543 = !DILocation(line: 2453, column: 21, scope: !9542)
!9544 = !DILocation(line: 2453, column: 30, scope: !9542)
!9545 = !DILocation(line: 2453, column: 33, scope: !9542)
!9546 = !DILocation(line: 2453, column: 47, scope: !9542)
!9547 = !DILocation(line: 2453, column: 50, scope: !9542)
!9548 = !DILocation(line: 2453, column: 44, scope: !9542)
!9549 = !DILocation(line: 2453, column: 29, scope: !9542)
!9550 = !DILocation(line: 2453, column: 64, scope: !9551)
!9551 = !DILexicalBlockFile(scope: !9542, file: !1150, discriminator: 1)
!9552 = !DILocation(line: 2453, column: 67, scope: !9551)
!9553 = !DILocation(line: 2453, column: 29, scope: !9551)
!9554 = !DILocation(line: 2453, column: 81, scope: !9555)
!9555 = !DILexicalBlockFile(scope: !9542, file: !1150, discriminator: 2)
!9556 = !DILocation(line: 2453, column: 84, scope: !9555)
!9557 = !DILocation(line: 2453, column: 29, scope: !9555)
!9558 = !DILocation(line: 2453, column: 29, scope: !9559)
!9559 = !DILexicalBlockFile(scope: !9542, file: !1150, discriminator: 3)
!9560 = !DILocation(line: 2453, column: 100, scope: !9559)
!9561 = !DILocation(line: 2453, column: 103, scope: !9559)
!9562 = !DILocation(line: 2453, column: 97, scope: !9559)
!9563 = !DILocation(line: 2453, column: 27, scope: !9559)
!9564 = !DILocation(line: 2453, column: 119, scope: !9565)
!9565 = !DILexicalBlockFile(scope: !9542, file: !1150, discriminator: 4)
!9566 = !DILocation(line: 2453, column: 122, scope: !9565)
!9567 = !DILocation(line: 2453, column: 136, scope: !9565)
!9568 = !DILocation(line: 2453, column: 139, scope: !9565)
!9569 = !DILocation(line: 2453, column: 133, scope: !9565)
!9570 = !DILocation(line: 2453, column: 118, scope: !9565)
!9571 = !DILocation(line: 2453, column: 153, scope: !9572)
!9572 = !DILexicalBlockFile(scope: !9542, file: !1150, discriminator: 5)
!9573 = !DILocation(line: 2453, column: 156, scope: !9572)
!9574 = !DILocation(line: 2453, column: 118, scope: !9572)
!9575 = !DILocation(line: 2453, column: 170, scope: !9576)
!9576 = !DILexicalBlockFile(scope: !9542, file: !1150, discriminator: 6)
!9577 = !DILocation(line: 2453, column: 173, scope: !9576)
!9578 = !DILocation(line: 2453, column: 118, scope: !9576)
!9579 = !DILocation(line: 2453, column: 118, scope: !9580)
!9580 = !DILexicalBlockFile(scope: !9542, file: !1150, discriminator: 7)
!9581 = !DILocation(line: 2453, column: 27, scope: !9580)
!9582 = !DILocation(line: 2453, column: 189, scope: !9583)
!9583 = !DILexicalBlockFile(scope: !9542, file: !1150, discriminator: 8)
!9584 = !DILocation(line: 2453, column: 192, scope: !9583)
!9585 = !DILocation(line: 2453, column: 27, scope: !9583)
!9586 = !DILocation(line: 2453, column: 27, scope: !9587)
!9587 = !DILexicalBlockFile(scope: !9542, file: !1150, discriminator: 9)
!9588 = !DILocation(line: 2453, column: 21, scope: !9587)
!9589 = !DILocalVariable(name: "qpw", scope: !9542, file: !1150, line: 2456, type: !1025)
!9590 = !DILocation(line: 2456, column: 21, scope: !9542)
!9591 = !DILocation(line: 2456, column: 28, scope: !9542)
!9592 = !DILocation(line: 2456, column: 31, scope: !9542)
!9593 = !DILocation(line: 2456, column: 37, scope: !9542)
!9594 = !DILocation(line: 2456, column: 43, scope: !9542)
!9595 = !DILocalVariable(name: "qp_table_buf", scope: !9542, file: !1150, line: 2457, type: !1080)
!9596 = !DILocation(line: 2457, column: 30, scope: !9542)
!9597 = !DILocation(line: 2457, column: 61, scope: !9542)
!9598 = !DILocation(line: 2457, column: 45, scope: !9542)
!9599 = !DILocation(line: 2458, column: 21, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9542, file: !1150, line: 2458, column: 21)
!9601 = !DILocation(line: 2458, column: 21, scope: !9542)
!9602 = !DILocation(line: 2459, column: 28, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9600, file: !1150, line: 2458, column: 35)
!9604 = !DILocation(line: 2459, column: 42, scope: !9603)
!9605 = !DILocation(line: 2459, column: 48, scope: !9603)
!9606 = !DILocation(line: 2459, column: 21, scope: !9603)
!9607 = !DILocation(line: 2459, column: 52, scope: !9603)
!9608 = !DILocation(line: 2460, column: 43, scope: !9603)
!9609 = !DILocation(line: 2460, column: 49, scope: !9603)
!9610 = !DILocation(line: 2460, column: 21, scope: !9603)
!9611 = !DILocation(line: 2461, column: 17, scope: !9603)
!9612 = !DILocation(line: 2463, column: 20, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9542, file: !1150, line: 2463, column: 20)
!9614 = !DILocation(line: 2463, column: 27, scope: !9613)
!9615 = !DILocation(line: 2463, column: 33, scope: !9613)
!9616 = !DILocation(line: 2463, column: 20, scope: !9542)
!9617 = !DILocation(line: 2464, column: 28, scope: !9613)
!9618 = !DILocation(line: 2464, column: 51, scope: !9613)
!9619 = !DILocation(line: 2464, column: 21, scope: !9613)
!9620 = !DILocation(line: 2465, column: 13, scope: !9542)
!9621 = !DILocation(line: 2467, column: 13, scope: !9299)
!9622 = !DILocation(line: 2469, column: 34, scope: !9299)
!9623 = !DILocation(line: 2469, column: 13, scope: !9299)
!9624 = !DILocation(line: 2469, column: 16, scope: !9299)
!9625 = !DILocation(line: 2469, column: 32, scope: !9299)
!9626 = !DILocation(line: 2470, column: 39, scope: !9299)
!9627 = !DILocation(line: 2470, column: 49, scope: !9299)
!9628 = !DILocation(line: 2470, column: 47, scope: !9299)
!9629 = !DILocation(line: 2470, column: 13, scope: !9299)
!9630 = !DILocation(line: 2470, column: 16, scope: !9299)
!9631 = !DILocation(line: 2470, column: 37, scope: !9299)
!9632 = !DILocation(line: 2472, column: 13, scope: !9299)
!9633 = !DILocation(line: 2472, column: 16, scope: !9299)
!9634 = !DILocation(line: 2472, column: 24, scope: !9299)
!9635 = !DILocation(line: 2473, column: 17, scope: !9636)
!9636 = distinct !DILexicalBlock(scope: !9299, file: !1150, line: 2473, column: 17)
!9637 = !DILocation(line: 2473, column: 24, scope: !9636)
!9638 = !DILocation(line: 2473, column: 35, scope: !9636)
!9639 = !DILocation(line: 2473, column: 17, scope: !9299)
!9640 = !DILocation(line: 2474, column: 28, scope: !9641)
!9641 = distinct !DILexicalBlock(scope: !9636, file: !1150, line: 2473, column: 53)
!9642 = !DILocation(line: 2474, column: 31, scope: !9641)
!9643 = !DILocation(line: 2474, column: 50, scope: !9641)
!9644 = !DILocation(line: 2474, column: 53, scope: !9641)
!9645 = !DILocation(line: 2474, column: 35, scope: !9641)
!9646 = !DILocation(line: 2474, column: 17, scope: !9647)
!9647 = !DILexicalBlockFile(scope: !9641, file: !1150, discriminator: 1)
!9648 = !DILocation(line: 2475, column: 17, scope: !9641)
!9649 = !DILocation(line: 2478, column: 44, scope: !9650)
!9650 = distinct !DILexicalBlock(scope: !9299, file: !1150, line: 2478, column: 17)
!9651 = !DILocation(line: 2478, column: 24, scope: !9650)
!9652 = !DILocation(line: 2478, column: 22, scope: !9650)
!9653 = !DILocation(line: 2478, column: 62, scope: !9650)
!9654 = !DILocation(line: 2478, column: 66, scope: !9650)
!9655 = !DILocation(line: 2479, column: 18, scope: !9650)
!9656 = !DILocation(line: 2479, column: 25, scope: !9650)
!9657 = !DILocation(line: 2479, column: 41, scope: !9650)
!9658 = !DILocation(line: 2478, column: 17, scope: !9436)
!9659 = !DILocation(line: 2480, column: 17, scope: !9650)
!9660 = !DILocation(line: 2481, column: 13, scope: !9299)
!9661 = !DILocation(line: 2483, column: 41, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9299, file: !1150, line: 2483, column: 17)
!9663 = !DILocation(line: 2483, column: 24, scope: !9662)
!9664 = !DILocation(line: 2483, column: 22, scope: !9662)
!9665 = !DILocation(line: 2483, column: 45, scope: !9662)
!9666 = !DILocation(line: 2483, column: 17, scope: !9299)
!9667 = !DILocation(line: 2484, column: 24, scope: !9662)
!9668 = !DILocation(line: 2484, column: 17, scope: !9662)
!9669 = !DILocation(line: 2485, column: 13, scope: !9299)
!9670 = !DILocation(line: 2496, column: 20, scope: !9299)
!9671 = !DILocation(line: 2497, column: 61, scope: !9299)
!9672 = !DILocation(line: 2496, column: 13, scope: !9299)
!9673 = !DILocation(line: 2498, column: 13, scope: !9299)
!9674 = !DILocation(line: 2499, column: 9, scope: !9299)
!9675 = !DILocation(line: 2503, column: 37, scope: !9161)
!9676 = !DILocation(line: 2503, column: 40, scope: !9161)
!9677 = !DILocation(line: 2503, column: 21, scope: !9161)
!9678 = !DILocation(line: 2503, column: 44, scope: !9161)
!9679 = !DILocation(line: 2503, column: 49, scope: !9161)
!9680 = !DILocation(line: 2503, column: 17, scope: !9161)
!9681 = !DILocation(line: 2504, column: 16, scope: !9161)
!9682 = !DILocation(line: 2506, column: 33, scope: !9161)
!9683 = !DILocation(line: 2506, column: 36, scope: !9161)
!9684 = !DILocation(line: 2506, column: 17, scope: !9161)
!9685 = !DILocation(line: 2506, column: 40, scope: !9161)
!9686 = !DILocation(line: 2506, column: 45, scope: !9161)
!9687 = !DILocation(line: 2506, column: 66, scope: !9161)
!9688 = !DILocation(line: 2506, column: 69, scope: !9161)
!9689 = !DILocation(line: 2506, column: 50, scope: !9690)
!9690 = !DILexicalBlockFile(scope: !9161, file: !1150, discriminator: 1)
!9691 = !DILocation(line: 2504, column: 9, scope: !9161)
!9692 = !DILocation(line: 2290, column: 5, scope: !9693)
!9693 = !DILexicalBlockFile(scope: !9075, file: !1150, discriminator: 2)
!9694 = distinct !{!9694, !9154}
!9695 = !DILocation(line: 2508, column: 9, scope: !9696)
!9696 = distinct !DILexicalBlock(scope: !9075, file: !1150, line: 2508, column: 9)
!9697 = !DILocation(line: 2508, column: 12, scope: !9696)
!9698 = !DILocation(line: 2508, column: 24, scope: !9696)
!9699 = !DILocation(line: 2508, column: 27, scope: !9700)
!9700 = !DILexicalBlockFile(scope: !9696, file: !1150, discriminator: 1)
!9701 = !DILocation(line: 2508, column: 30, scope: !9700)
!9702 = !DILocation(line: 2508, column: 9, scope: !9700)
!9703 = !DILocation(line: 2509, column: 16, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9696, file: !1150, line: 2508, column: 40)
!9705 = !DILocation(line: 2509, column: 9, scope: !9704)
!9706 = !DILocation(line: 2510, column: 9, scope: !9704)
!9707 = !DILocation(line: 2512, column: 12, scope: !9075)
!9708 = !DILocation(line: 2512, column: 5, scope: !9075)
!9709 = !DILocation(line: 2513, column: 5, scope: !9075)
!9710 = !DILocation(line: 2515, column: 5, scope: !9075)
!9711 = !DILocation(line: 2515, column: 8, scope: !9075)
!9712 = !DILocation(line: 2515, column: 20, scope: !9075)
!9713 = !DILocation(line: 2516, column: 12, scope: !9075)
!9714 = !DILocation(line: 2516, column: 5, scope: !9075)
!9715 = !DILocation(line: 2519, column: 35, scope: !9075)
!9716 = !DILocation(line: 2519, column: 38, scope: !9075)
!9717 = !DILocation(line: 2519, column: 45, scope: !9075)
!9718 = !DILocation(line: 2519, column: 15, scope: !9075)
!9719 = !DILocation(line: 2519, column: 55, scope: !9075)
!9720 = !DILocation(line: 2519, column: 63, scope: !9075)
!9721 = !DILocation(line: 2519, column: 68, scope: !9075)
!9722 = !DILocation(line: 2519, column: 13, scope: !9075)
!9723 = !DILocation(line: 2521, column: 52, scope: !9081)
!9724 = !DILocation(line: 2521, column: 55, scope: !9081)
!9725 = !DILocation(line: 2521, column: 68, scope: !9081)
!9726 = !DILocation(line: 2521, column: 9, scope: !9081)
!9727 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !9080)
!9728 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !9080)
!9729 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !9080)
!9730 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !9080)
!9731 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !9080)
!9732 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !9080)
!9733 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !9080)
!9734 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !9080)
!9735 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !9080)
!9736 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !9080)
!9737 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !9080)
!9738 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !9080)
!9739 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !9080)
!9740 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !9080)
!9741 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !9080)
!9742 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !9080)
!9743 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !9080)
!9744 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !9080)
!9745 = !DILocation(line: 2521, column: 9, scope: !9075)
!9746 = !DILocalVariable(name: "p", scope: !9747, file: !1150, line: 2522, type: !1025)
!9747 = distinct !DILexicalBlock(scope: !9081, file: !1150, line: 2521, column: 73)
!9748 = !DILocation(line: 2522, column: 13, scope: !9747)
!9749 = !DILocation(line: 2523, column: 9, scope: !9747)
!9750 = distinct !{!9750, !9749}
!9751 = !DILocation(line: 2523, column: 20, scope: !9752)
!9752 = !DILexicalBlockFile(scope: !9753, file: !1150, discriminator: 1)
!9753 = distinct !DILexicalBlock(scope: !9754, file: !1150, line: 2523, column: 18)
!9754 = distinct !DILexicalBlock(scope: !9747, file: !1150, line: 2523, column: 12)
!9755 = !DILocation(line: 2523, column: 27, scope: !9752)
!9756 = !DILocation(line: 2523, column: 35, scope: !9752)
!9757 = !DILocation(line: 2523, column: 58, scope: !9752)
!9758 = !DILocation(line: 2523, column: 61, scope: !9759)
!9759 = !DILexicalBlockFile(scope: !9753, file: !1150, discriminator: 2)
!9760 = !DILocation(line: 2523, column: 68, scope: !9759)
!9761 = !DILocation(line: 2523, column: 76, scope: !9759)
!9762 = !DILocation(line: 2523, column: 98, scope: !9759)
!9763 = !DILocation(line: 2523, column: 101, scope: !9764)
!9764 = !DILexicalBlockFile(scope: !9753, file: !1150, discriminator: 3)
!9765 = !DILocation(line: 2523, column: 108, scope: !9764)
!9766 = !DILocation(line: 2523, column: 116, scope: !9764)
!9767 = !DILocation(line: 2523, column: 139, scope: !9764)
!9768 = !DILocation(line: 2523, column: 142, scope: !9769)
!9769 = !DILexicalBlockFile(scope: !9753, file: !1150, discriminator: 4)
!9770 = !DILocation(line: 2523, column: 149, scope: !9769)
!9771 = !DILocation(line: 2523, column: 157, scope: !9769)
!9772 = !DILocation(line: 2523, column: 179, scope: !9769)
!9773 = !DILocation(line: 2523, column: 182, scope: !9774)
!9774 = !DILexicalBlockFile(scope: !9753, file: !1150, discriminator: 5)
!9775 = !DILocation(line: 2523, column: 189, scope: !9774)
!9776 = !DILocation(line: 2523, column: 197, scope: !9774)
!9777 = !DILocation(line: 2523, column: 220, scope: !9774)
!9778 = !DILocation(line: 2523, column: 223, scope: !9779)
!9779 = !DILexicalBlockFile(scope: !9753, file: !1150, discriminator: 6)
!9780 = !DILocation(line: 2523, column: 230, scope: !9779)
!9781 = !DILocation(line: 2523, column: 238, scope: !9779)
!9782 = !DILocation(line: 2523, column: 261, scope: !9779)
!9783 = !DILocation(line: 2523, column: 264, scope: !9784)
!9784 = !DILexicalBlockFile(scope: !9753, file: !1150, discriminator: 7)
!9785 = !DILocation(line: 2523, column: 271, scope: !9784)
!9786 = !DILocation(line: 2523, column: 279, scope: !9784)
!9787 = !DILocation(line: 2523, column: 301, scope: !9784)
!9788 = !DILocation(line: 2523, column: 304, scope: !9789)
!9789 = !DILexicalBlockFile(scope: !9753, file: !1150, discriminator: 8)
!9790 = !DILocation(line: 2523, column: 311, scope: !9789)
!9791 = !DILocation(line: 2523, column: 319, scope: !9789)
!9792 = !DILocation(line: 2523, column: 344, scope: !9789)
!9793 = !DILocation(line: 2523, column: 347, scope: !9794)
!9794 = !DILexicalBlockFile(scope: !9753, file: !1150, discriminator: 9)
!9795 = !DILocation(line: 2523, column: 354, scope: !9794)
!9796 = !DILocation(line: 2523, column: 362, scope: !9794)
!9797 = !DILocation(line: 2523, column: 385, scope: !9794)
!9798 = !DILocation(line: 2523, column: 388, scope: !9799)
!9799 = !DILexicalBlockFile(scope: !9753, file: !1150, discriminator: 10)
!9800 = !DILocation(line: 2523, column: 395, scope: !9799)
!9801 = !DILocation(line: 2523, column: 403, scope: !9799)
!9802 = !DILocation(line: 2523, column: 429, scope: !9799)
!9803 = !DILocation(line: 2523, column: 432, scope: !9804)
!9804 = !DILexicalBlockFile(scope: !9753, file: !1150, discriminator: 11)
!9805 = !DILocation(line: 2523, column: 439, scope: !9804)
!9806 = !DILocation(line: 2523, column: 447, scope: !9804)
!9807 = !DILocation(line: 2523, column: 466, scope: !9804)
!9808 = !DILocation(line: 2523, column: 469, scope: !9809)
!9809 = !DILexicalBlockFile(scope: !9753, file: !1150, discriminator: 12)
!9810 = !DILocation(line: 2523, column: 476, scope: !9809)
!9811 = !DILocation(line: 2523, column: 484, scope: !9809)
!9812 = !DILocation(line: 2523, column: 18, scope: !9809)
!9813 = !DILocation(line: 2523, column: 508, scope: !9814)
!9814 = !DILexicalBlockFile(scope: !9815, file: !1150, discriminator: 13)
!9815 = distinct !DILexicalBlock(scope: !9753, file: !1150, line: 2523, column: 506)
!9816 = !DILocation(line: 2523, column: 12, scope: !9817)
!9817 = !DILexicalBlockFile(scope: !9814, file: !1150, discriminator: 15)
!9818 = !DILocation(line: 2523, column: 12, scope: !9814)
!9819 = !DILocation(line: 2523, column: 23, scope: !9820)
!9820 = !DILexicalBlockFile(scope: !9754, file: !1150, discriminator: 14)
!9821 = !DILocation(line: 2536, column: 48, scope: !9747)
!9822 = !DILocation(line: 2536, column: 51, scope: !9747)
!9823 = !DILocation(line: 2536, column: 58, scope: !9747)
!9824 = !DILocation(line: 2536, column: 15, scope: !9747)
!9825 = !DILocation(line: 2536, column: 13, scope: !9747)
!9826 = !DILocation(line: 2537, column: 13, scope: !9827)
!9827 = distinct !DILexicalBlock(scope: !9747, file: !1150, line: 2537, column: 13)
!9828 = !DILocation(line: 2537, column: 13, scope: !9747)
!9829 = !DILocation(line: 2538, column: 20, scope: !9827)
!9830 = !DILocation(line: 2538, column: 13, scope: !9827)
!9831 = !DILocation(line: 2540, column: 9, scope: !9747)
!9832 = distinct !{!9832, !9831}
!9833 = !DILocation(line: 2540, column: 20, scope: !9834)
!9834 = !DILexicalBlockFile(scope: !9835, file: !1150, discriminator: 1)
!9835 = distinct !DILexicalBlock(scope: !9836, file: !1150, line: 2540, column: 18)
!9836 = distinct !DILexicalBlock(scope: !9747, file: !1150, line: 2540, column: 12)
!9837 = !DILocation(line: 2540, column: 23, scope: !9834)
!9838 = !DILocation(line: 2540, column: 64, scope: !9834)
!9839 = !DILocation(line: 2540, column: 67, scope: !9834)
!9840 = !DILocation(line: 2540, column: 80, scope: !9834)
!9841 = !DILocation(line: 2540, column: 40, scope: !9834)
!9842 = !DILocation(line: 2540, column: 37, scope: !9834)
!9843 = !DILocation(line: 2540, column: 18, scope: !9834)
!9844 = !DILocation(line: 2540, column: 92, scope: !9845)
!9845 = !DILexicalBlockFile(scope: !9846, file: !1150, discriminator: 2)
!9846 = distinct !DILexicalBlock(scope: !9835, file: !1150, line: 2540, column: 90)
!9847 = !DILocation(line: 2540, column: 150, scope: !9848)
!9848 = !DILexicalBlockFile(scope: !9845, file: !1150, discriminator: 4)
!9849 = !DILocation(line: 2540, column: 150, scope: !9845)
!9850 = !DILocation(line: 2540, column: 161, scope: !9851)
!9851 = !DILexicalBlockFile(scope: !9836, file: !1150, discriminator: 3)
!9852 = !DILocation(line: 2541, column: 16, scope: !9853)
!9853 = distinct !DILexicalBlock(scope: !9747, file: !1150, line: 2541, column: 9)
!9854 = !DILocation(line: 2541, column: 14, scope: !9853)
!9855 = !DILocation(line: 2541, column: 21, scope: !9856)
!9856 = !DILexicalBlockFile(scope: !9857, file: !1150, discriminator: 1)
!9857 = distinct !DILexicalBlock(scope: !9853, file: !1150, line: 2541, column: 9)
!9858 = !DILocation(line: 2541, column: 23, scope: !9856)
!9859 = !DILocation(line: 2541, column: 26, scope: !9856)
!9860 = !DILocation(line: 2541, column: 22, scope: !9856)
!9861 = !DILocation(line: 2541, column: 9, scope: !9856)
!9862 = !DILocalVariable(name: "line", scope: !9863, file: !1150, line: 2542, type: !1030)
!9863 = distinct !DILexicalBlock(scope: !9857, file: !1150, line: 2541, column: 46)
!9864 = !DILocation(line: 2542, column: 22, scope: !9863)
!9865 = !DILocation(line: 2542, column: 50, scope: !9863)
!9866 = !DILocation(line: 2542, column: 29, scope: !9863)
!9867 = !DILocation(line: 2542, column: 32, scope: !9863)
!9868 = !DILocation(line: 2542, column: 45, scope: !9863)
!9869 = !DILocalVariable(name: "w", scope: !9863, file: !1150, line: 2543, type: !1025)
!9870 = !DILocation(line: 2543, column: 17, scope: !9863)
!9871 = !DILocation(line: 2543, column: 21, scope: !9863)
!9872 = !DILocation(line: 2543, column: 24, scope: !9863)
!9873 = !DILocalVariable(name: "h", scope: !9863, file: !1150, line: 2544, type: !1025)
!9874 = !DILocation(line: 2544, column: 17, scope: !9863)
!9875 = !DILocation(line: 2544, column: 21, scope: !9863)
!9876 = !DILocation(line: 2544, column: 24, scope: !9863)
!9877 = !DILocation(line: 2545, column: 31, scope: !9878)
!9878 = distinct !DILexicalBlock(scope: !9863, file: !1150, line: 2545, column: 17)
!9879 = !DILocation(line: 2545, column: 18, scope: !9878)
!9880 = !DILocation(line: 2545, column: 21, scope: !9878)
!9881 = !DILocation(line: 2545, column: 17, scope: !9863)
!9882 = !DILocation(line: 2546, column: 17, scope: !9878)
!9883 = !DILocation(line: 2547, column: 17, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !9863, file: !1150, line: 2547, column: 17)
!9885 = !DILocation(line: 2547, column: 18, scope: !9884)
!9886 = !DILocation(line: 2547, column: 22, scope: !9884)
!9887 = !DILocation(line: 2547, column: 25, scope: !9888)
!9888 = !DILexicalBlockFile(scope: !9884, file: !1150, discriminator: 1)
!9889 = !DILocation(line: 2547, column: 26, scope: !9888)
!9890 = !DILocation(line: 2547, column: 17, scope: !9888)
!9891 = !DILocation(line: 2548, column: 59, scope: !9892)
!9892 = distinct !DILexicalBlock(scope: !9884, file: !1150, line: 2547, column: 31)
!9893 = !DILocation(line: 2548, column: 57, scope: !9892)
!9894 = !DILocation(line: 2548, column: 67, scope: !9892)
!9895 = !DILocation(line: 2548, column: 63, scope: !9892)
!9896 = !DILocation(line: 2548, column: 54, scope: !9892)
!9897 = !DILocation(line: 2548, column: 19, scope: !9892)
!9898 = !DILocation(line: 2549, column: 59, scope: !9892)
!9899 = !DILocation(line: 2549, column: 57, scope: !9892)
!9900 = !DILocation(line: 2549, column: 67, scope: !9892)
!9901 = !DILocation(line: 2549, column: 63, scope: !9892)
!9902 = !DILocation(line: 2549, column: 54, scope: !9892)
!9903 = !DILocation(line: 2549, column: 19, scope: !9892)
!9904 = !DILocation(line: 2550, column: 13, scope: !9892)
!9905 = !DILocation(line: 2551, column: 30, scope: !9906)
!9906 = distinct !DILexicalBlock(scope: !9863, file: !1150, line: 2551, column: 17)
!9907 = !DILocation(line: 2551, column: 17, scope: !9906)
!9908 = !DILocation(line: 2551, column: 20, scope: !9906)
!9909 = !DILocation(line: 2551, column: 33, scope: !9906)
!9910 = !DILocation(line: 2551, column: 17, scope: !9863)
!9911 = !DILocation(line: 2552, column: 22, scope: !9906)
!9912 = !DILocation(line: 2552, column: 23, scope: !9906)
!9913 = !DILocation(line: 2552, column: 26, scope: !9906)
!9914 = !DILocation(line: 2552, column: 19, scope: !9906)
!9915 = !DILocation(line: 2552, column: 17, scope: !9906)
!9916 = !DILocation(line: 2553, column: 13, scope: !9863)
!9917 = distinct !{!9917, !9916}
!9918 = !DILocation(line: 2553, column: 24, scope: !9919)
!9919 = !DILexicalBlockFile(scope: !9920, file: !1150, discriminator: 1)
!9920 = distinct !DILexicalBlock(scope: !9921, file: !1150, line: 2553, column: 22)
!9921 = distinct !DILexicalBlock(scope: !9863, file: !1150, line: 2553, column: 16)
!9922 = !DILocation(line: 2553, column: 26, scope: !9919)
!9923 = !DILocation(line: 2553, column: 22, scope: !9919)
!9924 = !DILocation(line: 2553, column: 34, scope: !9925)
!9925 = !DILexicalBlockFile(scope: !9926, file: !1150, discriminator: 2)
!9926 = distinct !DILexicalBlock(scope: !9920, file: !1150, line: 2553, column: 32)
!9927 = !DILocation(line: 2553, column: 92, scope: !9928)
!9928 = !DILexicalBlockFile(scope: !9925, file: !1150, discriminator: 4)
!9929 = !DILocation(line: 2553, column: 92, scope: !9925)
!9930 = !DILocation(line: 2553, column: 103, scope: !9931)
!9931 = !DILexicalBlockFile(scope: !9921, file: !1150, discriminator: 3)
!9932 = !DILocation(line: 2554, column: 20, scope: !9933)
!9933 = distinct !DILexicalBlock(scope: !9863, file: !1150, line: 2554, column: 13)
!9934 = !DILocation(line: 2554, column: 18, scope: !9933)
!9935 = !DILocation(line: 2554, column: 25, scope: !9936)
!9936 = !DILexicalBlockFile(scope: !9937, file: !1150, discriminator: 1)
!9937 = distinct !DILexicalBlock(scope: !9933, file: !1150, line: 2554, column: 13)
!9938 = !DILocation(line: 2554, column: 29, scope: !9936)
!9939 = !DILocation(line: 2554, column: 27, scope: !9936)
!9940 = !DILocation(line: 2554, column: 13, scope: !9936)
!9941 = !DILocation(line: 2555, column: 34, scope: !9942)
!9942 = distinct !DILexicalBlock(scope: !9943, file: !1150, line: 2555, column: 21)
!9943 = distinct !DILexicalBlock(scope: !9937, file: !1150, line: 2554, column: 37)
!9944 = !DILocation(line: 2555, column: 21, scope: !9942)
!9945 = !DILocation(line: 2555, column: 24, scope: !9942)
!9946 = !DILocation(line: 2555, column: 37, scope: !9942)
!9947 = !DILocation(line: 2555, column: 21, scope: !9943)
!9948 = !DILocation(line: 2556, column: 25, scope: !9949)
!9949 = distinct !DILexicalBlock(scope: !9950, file: !1150, line: 2556, column: 25)
!9950 = distinct !DILexicalBlock(scope: !9942, file: !1150, line: 2555, column: 43)
!9951 = !DILocation(line: 2556, column: 25, scope: !9950)
!9952 = !DILocation(line: 2556, column: 80, scope: !9953)
!9953 = !DILexicalBlockFile(scope: !9949, file: !1150, discriminator: 1)
!9954 = !DILocation(line: 2556, column: 82, scope: !9953)
!9955 = !DILocation(line: 2556, column: 87, scope: !9953)
!9956 = !DILocation(line: 2556, column: 61, scope: !9953)
!9957 = !DILocation(line: 2556, column: 73, scope: !9953)
!9958 = !DILocation(line: 2556, column: 52, scope: !9953)
!9959 = !DILocation(line: 2556, column: 54, scope: !9953)
!9960 = !DILocation(line: 2556, column: 34, scope: !9953)
!9961 = !DILocation(line: 2556, column: 46, scope: !9953)
!9962 = !DILocation(line: 2556, column: 59, scope: !9953)
!9963 = !DILocation(line: 2557, column: 46, scope: !9949)
!9964 = !DILocation(line: 2557, column: 48, scope: !9949)
!9965 = !DILocation(line: 2557, column: 53, scope: !9949)
!9966 = !DILocation(line: 2557, column: 40, scope: !9949)
!9967 = !DILocation(line: 2557, column: 31, scope: !9949)
!9968 = !DILocation(line: 2557, column: 33, scope: !9949)
!9969 = !DILocation(line: 2557, column: 26, scope: !9949)
!9970 = !DILocation(line: 2557, column: 38, scope: !9949)
!9971 = !DILocation(line: 2558, column: 34, scope: !9972)
!9972 = distinct !DILexicalBlock(scope: !9950, file: !1150, line: 2558, column: 21)
!9973 = !DILocation(line: 2558, column: 36, scope: !9972)
!9974 = !DILocation(line: 2558, column: 32, scope: !9972)
!9975 = !DILocation(line: 2558, column: 26, scope: !9972)
!9976 = !DILocation(line: 2558, column: 41, scope: !9977)
!9977 = !DILexicalBlockFile(scope: !9978, file: !1150, discriminator: 1)
!9978 = distinct !DILexicalBlock(scope: !9972, file: !1150, line: 2558, column: 21)
!9979 = !DILocation(line: 2558, column: 47, scope: !9977)
!9980 = !DILocation(line: 2558, column: 21, scope: !9977)
!9981 = !DILocation(line: 2559, column: 29, scope: !9982)
!9982 = distinct !DILexicalBlock(scope: !9983, file: !1150, line: 2559, column: 29)
!9983 = distinct !DILexicalBlock(scope: !9978, file: !1150, line: 2558, column: 61)
!9984 = !DILocation(line: 2559, column: 29, scope: !9983)
!9985 = !DILocation(line: 2560, column: 75, scope: !9982)
!9986 = !DILocation(line: 2560, column: 81, scope: !9982)
!9987 = !DILocation(line: 2560, column: 57, scope: !9982)
!9988 = !DILocation(line: 2560, column: 69, scope: !9982)
!9989 = !DILocation(line: 2560, column: 107, scope: !9982)
!9990 = !DILocation(line: 2560, column: 113, scope: !9982)
!9991 = !DILocation(line: 2560, column: 118, scope: !9982)
!9992 = !DILocation(line: 2560, column: 88, scope: !9982)
!9993 = !DILocation(line: 2560, column: 100, scope: !9982)
!9994 = !DILocation(line: 2560, column: 86, scope: !9982)
!9995 = !DILocation(line: 2560, column: 124, scope: !9982)
!9996 = !DILocation(line: 2560, column: 56, scope: !9982)
!9997 = !DILocation(line: 2560, column: 47, scope: !9982)
!9998 = !DILocation(line: 2560, column: 29, scope: !9982)
!9999 = !DILocation(line: 2560, column: 41, scope: !9982)
!10000 = !DILocation(line: 2560, column: 54, scope: !9982)
!10001 = !DILocation(line: 2562, column: 49, scope: !9982)
!10002 = !DILocation(line: 2562, column: 55, scope: !9982)
!10003 = !DILocation(line: 2562, column: 44, scope: !9982)
!10004 = !DILocation(line: 2562, column: 68, scope: !9982)
!10005 = !DILocation(line: 2562, column: 74, scope: !9982)
!10006 = !DILocation(line: 2562, column: 79, scope: !9982)
!10007 = !DILocation(line: 2562, column: 62, scope: !9982)
!10008 = !DILocation(line: 2562, column: 60, scope: !9982)
!10009 = !DILocation(line: 2562, column: 85, scope: !9982)
!10010 = !DILocation(line: 2562, column: 43, scope: !9982)
!10011 = !DILocation(line: 2562, column: 34, scope: !9982)
!10012 = !DILocation(line: 2562, column: 29, scope: !9982)
!10013 = !DILocation(line: 2562, column: 41, scope: !9982)
!10014 = !DILocation(line: 2563, column: 21, scope: !9983)
!10015 = !DILocation(line: 2558, column: 57, scope: !10016)
!10016 = !DILexicalBlockFile(scope: !9978, file: !1150, discriminator: 2)
!10017 = !DILocation(line: 2558, column: 21, scope: !10016)
!10018 = distinct !{!10018, !10019}
!10019 = !DILocation(line: 2558, column: 21, scope: !9950)
!10020 = !DILocation(line: 2564, column: 17, scope: !9950)
!10021 = !DILocation(line: 2564, column: 41, scope: !10022)
!10022 = !DILexicalBlockFile(scope: !10023, file: !1150, discriminator: 1)
!10023 = distinct !DILexicalBlock(scope: !9942, file: !1150, line: 2564, column: 28)
!10024 = !DILocation(line: 2564, column: 28, scope: !10022)
!10025 = !DILocation(line: 2564, column: 31, scope: !10022)
!10026 = !DILocation(line: 2564, column: 44, scope: !10022)
!10027 = !DILocation(line: 2565, column: 25, scope: !10028)
!10028 = distinct !DILexicalBlock(scope: !10029, file: !1150, line: 2565, column: 25)
!10029 = distinct !DILexicalBlock(scope: !10023, file: !1150, line: 2564, column: 50)
!10030 = !DILocation(line: 2565, column: 25, scope: !10029)
!10031 = !DILocation(line: 2566, column: 71, scope: !10032)
!10032 = distinct !DILexicalBlock(scope: !10028, file: !1150, line: 2565, column: 34)
!10033 = !DILocation(line: 2566, column: 73, scope: !10032)
!10034 = !DILocation(line: 2566, column: 78, scope: !10032)
!10035 = !DILocation(line: 2566, column: 52, scope: !10032)
!10036 = !DILocation(line: 2566, column: 64, scope: !10032)
!10037 = !DILocation(line: 2566, column: 43, scope: !10032)
!10038 = !DILocation(line: 2566, column: 45, scope: !10032)
!10039 = !DILocation(line: 2566, column: 25, scope: !10032)
!10040 = !DILocation(line: 2566, column: 37, scope: !10032)
!10041 = !DILocation(line: 2566, column: 50, scope: !10032)
!10042 = !DILocation(line: 2567, column: 29, scope: !10043)
!10043 = distinct !DILexicalBlock(scope: !10032, file: !1150, line: 2567, column: 29)
!10044 = !DILocation(line: 2567, column: 31, scope: !10043)
!10045 = !DILocation(line: 2567, column: 29, scope: !10032)
!10046 = !DILocation(line: 2568, column: 74, scope: !10043)
!10047 = !DILocation(line: 2568, column: 76, scope: !10043)
!10048 = !DILocation(line: 2568, column: 56, scope: !10043)
!10049 = !DILocation(line: 2568, column: 68, scope: !10043)
!10050 = !DILocation(line: 2568, column: 47, scope: !10043)
!10051 = !DILocation(line: 2568, column: 49, scope: !10043)
!10052 = !DILocation(line: 2568, column: 29, scope: !10043)
!10053 = !DILocation(line: 2568, column: 41, scope: !10043)
!10054 = !DILocation(line: 2568, column: 54, scope: !10043)
!10055 = !DILocation(line: 2569, column: 21, scope: !10032)
!10056 = !DILocation(line: 2570, column: 45, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !10028, file: !1150, line: 2569, column: 28)
!10058 = !DILocation(line: 2570, column: 47, scope: !10057)
!10059 = !DILocation(line: 2570, column: 52, scope: !10057)
!10060 = !DILocation(line: 2570, column: 39, scope: !10057)
!10061 = !DILocation(line: 2570, column: 30, scope: !10057)
!10062 = !DILocation(line: 2570, column: 32, scope: !10057)
!10063 = !DILocation(line: 2570, column: 25, scope: !10057)
!10064 = !DILocation(line: 2570, column: 37, scope: !10057)
!10065 = !DILocation(line: 2571, column: 29, scope: !10066)
!10066 = distinct !DILexicalBlock(scope: !10057, file: !1150, line: 2571, column: 29)
!10067 = !DILocation(line: 2571, column: 31, scope: !10066)
!10068 = !DILocation(line: 2571, column: 29, scope: !10057)
!10069 = !DILocation(line: 2572, column: 48, scope: !10066)
!10070 = !DILocation(line: 2572, column: 50, scope: !10066)
!10071 = !DILocation(line: 2572, column: 43, scope: !10066)
!10072 = !DILocation(line: 2572, column: 34, scope: !10066)
!10073 = !DILocation(line: 2572, column: 36, scope: !10066)
!10074 = !DILocation(line: 2572, column: 29, scope: !10066)
!10075 = !DILocation(line: 2572, column: 41, scope: !10066)
!10076 = !DILocation(line: 2574, column: 34, scope: !10077)
!10077 = distinct !DILexicalBlock(scope: !10029, file: !1150, line: 2574, column: 21)
!10078 = !DILocation(line: 2574, column: 36, scope: !10077)
!10079 = !DILocation(line: 2574, column: 32, scope: !10077)
!10080 = !DILocation(line: 2574, column: 26, scope: !10077)
!10081 = !DILocation(line: 2574, column: 41, scope: !10082)
!10082 = !DILexicalBlockFile(scope: !10083, file: !1150, discriminator: 1)
!10083 = distinct !DILexicalBlock(scope: !10077, file: !1150, line: 2574, column: 21)
!10084 = !DILocation(line: 2574, column: 47, scope: !10082)
!10085 = !DILocation(line: 2574, column: 21, scope: !10082)
!10086 = !DILocation(line: 2575, column: 45, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !10083, file: !1150, line: 2574, column: 61)
!10088 = !DILocation(line: 2575, column: 51, scope: !10087)
!10089 = !DILocation(line: 2575, column: 40, scope: !10087)
!10090 = !DILocation(line: 2575, column: 64, scope: !10087)
!10091 = !DILocation(line: 2575, column: 70, scope: !10087)
!10092 = !DILocation(line: 2575, column: 75, scope: !10087)
!10093 = !DILocation(line: 2575, column: 58, scope: !10087)
!10094 = !DILocation(line: 2575, column: 56, scope: !10087)
!10095 = !DILocation(line: 2575, column: 88, scope: !10087)
!10096 = !DILocation(line: 2575, column: 94, scope: !10087)
!10097 = !DILocation(line: 2575, column: 99, scope: !10087)
!10098 = !DILocation(line: 2575, column: 82, scope: !10087)
!10099 = !DILocation(line: 2575, column: 80, scope: !10087)
!10100 = !DILocation(line: 2575, column: 104, scope: !10087)
!10101 = !DILocation(line: 2575, column: 109, scope: !10087)
!10102 = !DILocation(line: 2575, column: 39, scope: !10087)
!10103 = !DILocation(line: 2575, column: 30, scope: !10087)
!10104 = !DILocation(line: 2575, column: 25, scope: !10087)
!10105 = !DILocation(line: 2575, column: 37, scope: !10087)
!10106 = !DILocation(line: 2576, column: 21, scope: !10087)
!10107 = !DILocation(line: 2574, column: 57, scope: !10108)
!10108 = !DILexicalBlockFile(scope: !10083, file: !1150, discriminator: 2)
!10109 = !DILocation(line: 2574, column: 21, scope: !10108)
!10110 = distinct !{!10110, !10111}
!10111 = !DILocation(line: 2574, column: 21, scope: !10029)
!10112 = !DILocation(line: 2577, column: 17, scope: !10029)
!10113 = !DILocation(line: 2578, column: 37, scope: !9943)
!10114 = !DILocation(line: 2578, column: 25, scope: !9943)
!10115 = !DILocation(line: 2578, column: 28, scope: !9943)
!10116 = !DILocation(line: 2578, column: 22, scope: !9943)
!10117 = !DILocation(line: 2579, column: 13, scope: !9943)
!10118 = !DILocation(line: 2554, column: 33, scope: !10119)
!10119 = !DILexicalBlockFile(scope: !9937, file: !1150, discriminator: 2)
!10120 = !DILocation(line: 2554, column: 13, scope: !10119)
!10121 = distinct !{!10121, !10122}
!10122 = !DILocation(line: 2554, column: 13, scope: !9863)
!10123 = !DILocation(line: 2580, column: 9, scope: !9863)
!10124 = !DILocation(line: 2541, column: 42, scope: !10125)
!10125 = !DILexicalBlockFile(scope: !9857, file: !1150, discriminator: 2)
!10126 = !DILocation(line: 2541, column: 9, scope: !10125)
!10127 = distinct !{!10127, !10128}
!10128 = !DILocation(line: 2541, column: 9, scope: !9747)
!10129 = !DILocation(line: 2581, column: 5, scope: !9747)
!10130 = !DILocation(line: 2582, column: 52, scope: !9078)
!10131 = !DILocation(line: 2582, column: 55, scope: !9078)
!10132 = !DILocation(line: 2582, column: 68, scope: !9078)
!10133 = !DILocation(line: 2582, column: 9, scope: !9078)
!10134 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !9077)
!10135 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !9077)
!10136 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !9077)
!10137 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !9077)
!10138 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !9077)
!10139 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !9077)
!10140 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !9077)
!10141 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !9077)
!10142 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !9077)
!10143 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !9077)
!10144 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !9077)
!10145 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !9077)
!10146 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !9077)
!10147 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !9077)
!10148 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !9077)
!10149 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !9077)
!10150 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !9077)
!10151 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !9077)
!10152 = !DILocation(line: 2582, column: 9, scope: !9075)
!10153 = !DILocalVariable(name: "p", scope: !10154, file: !1150, line: 2583, type: !1025)
!10154 = distinct !DILexicalBlock(scope: !9078, file: !1150, line: 2582, column: 73)
!10155 = !DILocation(line: 2583, column: 13, scope: !10154)
!10156 = !DILocation(line: 2584, column: 9, scope: !10154)
!10157 = distinct !{!10157, !10156}
!10158 = !DILocation(line: 2584, column: 20, scope: !10159)
!10159 = !DILexicalBlockFile(scope: !10160, file: !1150, discriminator: 1)
!10160 = distinct !DILexicalBlock(scope: !10161, file: !1150, line: 2584, column: 18)
!10161 = distinct !DILexicalBlock(scope: !10154, file: !1150, line: 2584, column: 12)
!10162 = !DILocation(line: 2584, column: 27, scope: !10159)
!10163 = !DILocation(line: 2584, column: 35, scope: !10159)
!10164 = !DILocation(line: 2584, column: 58, scope: !10159)
!10165 = !DILocation(line: 2584, column: 61, scope: !10166)
!10166 = !DILexicalBlockFile(scope: !10160, file: !1150, discriminator: 2)
!10167 = !DILocation(line: 2584, column: 68, scope: !10166)
!10168 = !DILocation(line: 2584, column: 76, scope: !10166)
!10169 = !DILocation(line: 2584, column: 98, scope: !10166)
!10170 = !DILocation(line: 2584, column: 101, scope: !10171)
!10171 = !DILexicalBlockFile(scope: !10160, file: !1150, discriminator: 3)
!10172 = !DILocation(line: 2584, column: 108, scope: !10171)
!10173 = !DILocation(line: 2584, column: 116, scope: !10171)
!10174 = !DILocation(line: 2584, column: 139, scope: !10171)
!10175 = !DILocation(line: 2584, column: 142, scope: !10176)
!10176 = !DILexicalBlockFile(scope: !10160, file: !1150, discriminator: 4)
!10177 = !DILocation(line: 2584, column: 149, scope: !10176)
!10178 = !DILocation(line: 2584, column: 157, scope: !10176)
!10179 = !DILocation(line: 2584, column: 179, scope: !10176)
!10180 = !DILocation(line: 2584, column: 182, scope: !10181)
!10181 = !DILexicalBlockFile(scope: !10160, file: !1150, discriminator: 5)
!10182 = !DILocation(line: 2584, column: 189, scope: !10181)
!10183 = !DILocation(line: 2584, column: 197, scope: !10181)
!10184 = !DILocation(line: 2584, column: 220, scope: !10181)
!10185 = !DILocation(line: 2584, column: 223, scope: !10186)
!10186 = !DILexicalBlockFile(scope: !10160, file: !1150, discriminator: 6)
!10187 = !DILocation(line: 2584, column: 230, scope: !10186)
!10188 = !DILocation(line: 2584, column: 238, scope: !10186)
!10189 = !DILocation(line: 2584, column: 260, scope: !10186)
!10190 = !DILocation(line: 2584, column: 263, scope: !10191)
!10191 = !DILexicalBlockFile(scope: !10160, file: !1150, discriminator: 7)
!10192 = !DILocation(line: 2584, column: 270, scope: !10191)
!10193 = !DILocation(line: 2584, column: 278, scope: !10191)
!10194 = !DILocation(line: 2584, column: 300, scope: !10191)
!10195 = !DILocation(line: 2584, column: 303, scope: !10196)
!10196 = !DILexicalBlockFile(scope: !10160, file: !1150, discriminator: 8)
!10197 = !DILocation(line: 2584, column: 310, scope: !10196)
!10198 = !DILocation(line: 2584, column: 318, scope: !10196)
!10199 = !DILocation(line: 2584, column: 341, scope: !10196)
!10200 = !DILocation(line: 2584, column: 344, scope: !10201)
!10201 = !DILexicalBlockFile(scope: !10160, file: !1150, discriminator: 9)
!10202 = !DILocation(line: 2584, column: 351, scope: !10201)
!10203 = !DILocation(line: 2584, column: 359, scope: !10201)
!10204 = !DILocation(line: 2584, column: 382, scope: !10201)
!10205 = !DILocation(line: 2584, column: 385, scope: !10206)
!10206 = !DILexicalBlockFile(scope: !10160, file: !1150, discriminator: 10)
!10207 = !DILocation(line: 2584, column: 392, scope: !10206)
!10208 = !DILocation(line: 2584, column: 400, scope: !10206)
!10209 = !DILocation(line: 2584, column: 423, scope: !10206)
!10210 = !DILocation(line: 2584, column: 426, scope: !10211)
!10211 = !DILexicalBlockFile(scope: !10160, file: !1150, discriminator: 11)
!10212 = !DILocation(line: 2584, column: 433, scope: !10211)
!10213 = !DILocation(line: 2584, column: 441, scope: !10211)
!10214 = !DILocation(line: 2584, column: 467, scope: !10211)
!10215 = !DILocation(line: 2584, column: 470, scope: !10216)
!10216 = !DILexicalBlockFile(scope: !10160, file: !1150, discriminator: 12)
!10217 = !DILocation(line: 2584, column: 477, scope: !10216)
!10218 = !DILocation(line: 2584, column: 485, scope: !10216)
!10219 = !DILocation(line: 2584, column: 504, scope: !10216)
!10220 = !DILocation(line: 2584, column: 507, scope: !10221)
!10221 = !DILexicalBlockFile(scope: !10160, file: !1150, discriminator: 13)
!10222 = !DILocation(line: 2584, column: 514, scope: !10221)
!10223 = !DILocation(line: 2584, column: 522, scope: !10221)
!10224 = !DILocation(line: 2584, column: 18, scope: !10221)
!10225 = !DILocation(line: 2584, column: 546, scope: !10226)
!10226 = !DILexicalBlockFile(scope: !10227, file: !1150, discriminator: 14)
!10227 = distinct !DILexicalBlock(scope: !10160, file: !1150, line: 2584, column: 544)
!10228 = !DILocation(line: 2584, column: 12, scope: !10229)
!10229 = !DILexicalBlockFile(scope: !10226, file: !1150, discriminator: 16)
!10230 = !DILocation(line: 2584, column: 12, scope: !10226)
!10231 = !DILocation(line: 2584, column: 23, scope: !10232)
!10232 = !DILexicalBlockFile(scope: !10161, file: !1150, discriminator: 15)
!10233 = !DILocation(line: 2598, column: 48, scope: !10154)
!10234 = !DILocation(line: 2598, column: 51, scope: !10154)
!10235 = !DILocation(line: 2598, column: 58, scope: !10154)
!10236 = !DILocation(line: 2598, column: 15, scope: !10154)
!10237 = !DILocation(line: 2598, column: 13, scope: !10154)
!10238 = !DILocation(line: 2599, column: 13, scope: !10239)
!10239 = distinct !DILexicalBlock(scope: !10154, file: !1150, line: 2599, column: 13)
!10240 = !DILocation(line: 2599, column: 13, scope: !10154)
!10241 = !DILocation(line: 2600, column: 20, scope: !10239)
!10242 = !DILocation(line: 2600, column: 13, scope: !10239)
!10243 = !DILocation(line: 2602, column: 9, scope: !10154)
!10244 = distinct !{!10244, !10243}
!10245 = !DILocation(line: 2602, column: 20, scope: !10246)
!10246 = !DILexicalBlockFile(scope: !10247, file: !1150, discriminator: 1)
!10247 = distinct !DILexicalBlock(scope: !10248, file: !1150, line: 2602, column: 18)
!10248 = distinct !DILexicalBlock(scope: !10154, file: !1150, line: 2602, column: 12)
!10249 = !DILocation(line: 2602, column: 23, scope: !10246)
!10250 = !DILocation(line: 2602, column: 64, scope: !10246)
!10251 = !DILocation(line: 2602, column: 67, scope: !10246)
!10252 = !DILocation(line: 2602, column: 80, scope: !10246)
!10253 = !DILocation(line: 2602, column: 40, scope: !10246)
!10254 = !DILocation(line: 2602, column: 37, scope: !10246)
!10255 = !DILocation(line: 2602, column: 18, scope: !10246)
!10256 = !DILocation(line: 2602, column: 92, scope: !10257)
!10257 = !DILexicalBlockFile(scope: !10258, file: !1150, discriminator: 2)
!10258 = distinct !DILexicalBlock(scope: !10247, file: !1150, line: 2602, column: 90)
!10259 = !DILocation(line: 2602, column: 150, scope: !10260)
!10260 = !DILexicalBlockFile(scope: !10257, file: !1150, discriminator: 4)
!10261 = !DILocation(line: 2602, column: 150, scope: !10257)
!10262 = !DILocation(line: 2602, column: 161, scope: !10263)
!10263 = !DILexicalBlockFile(scope: !10248, file: !1150, discriminator: 3)
!10264 = !DILocation(line: 2603, column: 16, scope: !10265)
!10265 = distinct !DILexicalBlock(scope: !10154, file: !1150, line: 2603, column: 9)
!10266 = !DILocation(line: 2603, column: 14, scope: !10265)
!10267 = !DILocation(line: 2603, column: 21, scope: !10268)
!10268 = !DILexicalBlockFile(scope: !10269, file: !1150, discriminator: 1)
!10269 = distinct !DILexicalBlock(scope: !10265, file: !1150, line: 2603, column: 9)
!10270 = !DILocation(line: 2603, column: 25, scope: !10268)
!10271 = !DILocation(line: 2603, column: 28, scope: !10268)
!10272 = !DILocation(line: 2603, column: 23, scope: !10268)
!10273 = !DILocation(line: 2603, column: 9, scope: !10268)
!10274 = !DILocalVariable(name: "dst", scope: !10275, file: !1150, line: 2604, type: !1030)
!10275 = distinct !DILexicalBlock(scope: !10269, file: !1150, line: 2603, column: 48)
!10276 = !DILocation(line: 2604, column: 22, scope: !10275)
!10277 = !DILocalVariable(name: "w", scope: !10275, file: !1150, line: 2605, type: !1025)
!10278 = !DILocation(line: 2605, column: 17, scope: !10275)
!10279 = !DILocation(line: 2605, column: 21, scope: !10275)
!10280 = !DILocation(line: 2605, column: 24, scope: !10275)
!10281 = !DILocalVariable(name: "h", scope: !10275, file: !1150, line: 2606, type: !1025)
!10282 = !DILocation(line: 2606, column: 17, scope: !10275)
!10283 = !DILocation(line: 2606, column: 21, scope: !10275)
!10284 = !DILocation(line: 2606, column: 24, scope: !10275)
!10285 = !DILocation(line: 2607, column: 31, scope: !10286)
!10286 = distinct !DILexicalBlock(scope: !10275, file: !1150, line: 2607, column: 17)
!10287 = !DILocation(line: 2607, column: 18, scope: !10286)
!10288 = !DILocation(line: 2607, column: 21, scope: !10286)
!10289 = !DILocation(line: 2607, column: 17, scope: !10275)
!10290 = !DILocation(line: 2608, column: 17, scope: !10286)
!10291 = !DILocation(line: 2609, column: 17, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10275, file: !1150, line: 2609, column: 17)
!10293 = !DILocation(line: 2609, column: 18, scope: !10292)
!10294 = !DILocation(line: 2609, column: 22, scope: !10292)
!10295 = !DILocation(line: 2609, column: 25, scope: !10296)
!10296 = !DILexicalBlockFile(scope: !10292, file: !1150, discriminator: 1)
!10297 = !DILocation(line: 2609, column: 26, scope: !10296)
!10298 = !DILocation(line: 2609, column: 17, scope: !10296)
!10299 = !DILocation(line: 2610, column: 59, scope: !10300)
!10300 = distinct !DILexicalBlock(scope: !10292, file: !1150, line: 2609, column: 31)
!10301 = !DILocation(line: 2610, column: 57, scope: !10300)
!10302 = !DILocation(line: 2610, column: 67, scope: !10300)
!10303 = !DILocation(line: 2610, column: 63, scope: !10300)
!10304 = !DILocation(line: 2610, column: 54, scope: !10300)
!10305 = !DILocation(line: 2610, column: 19, scope: !10300)
!10306 = !DILocation(line: 2611, column: 59, scope: !10300)
!10307 = !DILocation(line: 2611, column: 57, scope: !10300)
!10308 = !DILocation(line: 2611, column: 67, scope: !10300)
!10309 = !DILocation(line: 2611, column: 63, scope: !10300)
!10310 = !DILocation(line: 2611, column: 54, scope: !10300)
!10311 = !DILocation(line: 2611, column: 19, scope: !10300)
!10312 = !DILocation(line: 2612, column: 13, scope: !10300)
!10313 = !DILocation(line: 2613, column: 58, scope: !10275)
!10314 = !DILocation(line: 2613, column: 60, scope: !10275)
!10315 = !DILocation(line: 2613, column: 79, scope: !10275)
!10316 = !DILocation(line: 2613, column: 67, scope: !10275)
!10317 = !DILocation(line: 2613, column: 70, scope: !10275)
!10318 = !DILocation(line: 2613, column: 65, scope: !10275)
!10319 = !DILocation(line: 2613, column: 20, scope: !10275)
!10320 = !DILocation(line: 2613, column: 53, scope: !10275)
!10321 = !DILocation(line: 2613, column: 32, scope: !10275)
!10322 = !DILocation(line: 2613, column: 35, scope: !10275)
!10323 = !DILocation(line: 2613, column: 48, scope: !10275)
!10324 = !DILocation(line: 2613, column: 17, scope: !10275)
!10325 = !DILocation(line: 2614, column: 22, scope: !10326)
!10326 = distinct !DILexicalBlock(scope: !10275, file: !1150, line: 2614, column: 13)
!10327 = !DILocation(line: 2614, column: 24, scope: !10326)
!10328 = !DILocation(line: 2614, column: 20, scope: !10326)
!10329 = !DILocation(line: 2614, column: 18, scope: !10326)
!10330 = !DILocation(line: 2614, column: 29, scope: !10331)
!10331 = !DILexicalBlockFile(scope: !10332, file: !1150, discriminator: 1)
!10332 = distinct !DILexicalBlock(scope: !10326, file: !1150, line: 2614, column: 13)
!10333 = !DILocation(line: 2614, column: 13, scope: !10331)
!10334 = !DILocalVariable(name: "src1", scope: !10335, file: !1150, line: 2615, type: !1030)
!10335 = distinct !DILexicalBlock(scope: !10332, file: !1150, line: 2614, column: 37)
!10336 = !DILocation(line: 2615, column: 26, scope: !10335)
!10337 = !DILocation(line: 2615, column: 71, scope: !10335)
!10338 = !DILocation(line: 2615, column: 88, scope: !10335)
!10339 = !DILocation(line: 2615, column: 75, scope: !10335)
!10340 = !DILocation(line: 2615, column: 78, scope: !10335)
!10341 = !DILocation(line: 2615, column: 73, scope: !10335)
!10342 = !DILocation(line: 2615, column: 107, scope: !10335)
!10343 = !DILocation(line: 2615, column: 94, scope: !10335)
!10344 = !DILocation(line: 2615, column: 97, scope: !10335)
!10345 = !DILocation(line: 2615, column: 110, scope: !10335)
!10346 = !DILocation(line: 2615, column: 91, scope: !10335)
!10347 = !DILocation(line: 2615, column: 129, scope: !10335)
!10348 = !DILocation(line: 2615, column: 117, scope: !10335)
!10349 = !DILocation(line: 2615, column: 120, scope: !10335)
!10350 = !DILocation(line: 2615, column: 115, scope: !10335)
!10351 = !DILocation(line: 2615, column: 34, scope: !10335)
!10352 = !DILocation(line: 2615, column: 67, scope: !10335)
!10353 = !DILocation(line: 2615, column: 46, scope: !10335)
!10354 = !DILocation(line: 2615, column: 49, scope: !10335)
!10355 = !DILocation(line: 2615, column: 62, scope: !10335)
!10356 = !DILocalVariable(name: "src2", scope: !10335, file: !1150, line: 2616, type: !1030)
!10357 = !DILocation(line: 2616, column: 26, scope: !10335)
!10358 = !DILocation(line: 2616, column: 72, scope: !10335)
!10359 = !DILocation(line: 2616, column: 74, scope: !10335)
!10360 = !DILocation(line: 2616, column: 94, scope: !10335)
!10361 = !DILocation(line: 2616, column: 81, scope: !10335)
!10362 = !DILocation(line: 2616, column: 84, scope: !10335)
!10363 = !DILocation(line: 2616, column: 79, scope: !10335)
!10364 = !DILocation(line: 2616, column: 113, scope: !10335)
!10365 = !DILocation(line: 2616, column: 100, scope: !10335)
!10366 = !DILocation(line: 2616, column: 103, scope: !10335)
!10367 = !DILocation(line: 2616, column: 116, scope: !10335)
!10368 = !DILocation(line: 2616, column: 97, scope: !10335)
!10369 = !DILocation(line: 2616, column: 135, scope: !10335)
!10370 = !DILocation(line: 2616, column: 123, scope: !10335)
!10371 = !DILocation(line: 2616, column: 126, scope: !10335)
!10372 = !DILocation(line: 2616, column: 121, scope: !10335)
!10373 = !DILocation(line: 2616, column: 34, scope: !10335)
!10374 = !DILocation(line: 2616, column: 67, scope: !10335)
!10375 = !DILocation(line: 2616, column: 46, scope: !10335)
!10376 = !DILocation(line: 2616, column: 49, scope: !10335)
!10377 = !DILocation(line: 2616, column: 62, scope: !10335)
!10378 = !DILocation(line: 2617, column: 34, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !10335, file: !1150, line: 2617, column: 21)
!10380 = !DILocation(line: 2617, column: 21, scope: !10379)
!10381 = !DILocation(line: 2617, column: 24, scope: !10379)
!10382 = !DILocation(line: 2617, column: 37, scope: !10379)
!10383 = !DILocation(line: 2617, column: 42, scope: !10379)
!10384 = !DILocation(line: 2617, column: 46, scope: !10385)
!10385 = !DILexicalBlockFile(scope: !10379, file: !1150, discriminator: 1)
!10386 = !DILocation(line: 2617, column: 54, scope: !10385)
!10387 = !DILocation(line: 2617, column: 51, scope: !10385)
!10388 = !DILocation(line: 2617, column: 59, scope: !10385)
!10389 = !DILocation(line: 2617, column: 62, scope: !10390)
!10390 = !DILexicalBlockFile(scope: !10379, file: !1150, discriminator: 2)
!10391 = !DILocation(line: 2617, column: 67, scope: !10390)
!10392 = !DILocation(line: 2617, column: 69, scope: !10390)
!10393 = !DILocation(line: 2617, column: 64, scope: !10390)
!10394 = !DILocation(line: 2617, column: 21, scope: !10390)
!10395 = !DILocation(line: 2618, column: 28, scope: !10396)
!10396 = distinct !DILexicalBlock(scope: !10379, file: !1150, line: 2617, column: 75)
!10397 = !DILocation(line: 2618, column: 33, scope: !10396)
!10398 = !DILocation(line: 2618, column: 39, scope: !10396)
!10399 = !DILocation(line: 2618, column: 21, scope: !10396)
!10400 = !DILocation(line: 2619, column: 17, scope: !10396)
!10401 = !DILocation(line: 2620, column: 32, scope: !10402)
!10402 = distinct !DILexicalBlock(scope: !10403, file: !1150, line: 2620, column: 21)
!10403 = distinct !DILexicalBlock(scope: !10379, file: !1150, line: 2619, column: 24)
!10404 = !DILocation(line: 2620, column: 26, scope: !10402)
!10405 = !DILocation(line: 2620, column: 37, scope: !10406)
!10406 = !DILexicalBlockFile(scope: !10407, file: !1150, discriminator: 1)
!10407 = distinct !DILexicalBlock(scope: !10402, file: !1150, line: 2620, column: 21)
!10408 = !DILocation(line: 2620, column: 45, scope: !10406)
!10409 = !DILocation(line: 2620, column: 43, scope: !10406)
!10410 = !DILocation(line: 2620, column: 21, scope: !10406)
!10411 = !DILocation(line: 2621, column: 44, scope: !10407)
!10412 = !DILocation(line: 2621, column: 39, scope: !10407)
!10413 = !DILocation(line: 2621, column: 58, scope: !10407)
!10414 = !DILocation(line: 2621, column: 53, scope: !10407)
!10415 = !DILocation(line: 2621, column: 51, scope: !10407)
!10416 = !DILocation(line: 2621, column: 66, scope: !10407)
!10417 = !DILocation(line: 2621, column: 38, scope: !10407)
!10418 = !DILocation(line: 2621, column: 29, scope: !10407)
!10419 = !DILocation(line: 2621, column: 25, scope: !10407)
!10420 = !DILocation(line: 2621, column: 36, scope: !10407)
!10421 = !DILocation(line: 2620, column: 53, scope: !10422)
!10422 = !DILexicalBlockFile(scope: !10407, file: !1150, discriminator: 2)
!10423 = !DILocation(line: 2620, column: 21, scope: !10422)
!10424 = distinct !{!10424, !10425}
!10425 = !DILocation(line: 2620, column: 21, scope: !10403)
!10426 = !DILocation(line: 2623, column: 36, scope: !10335)
!10427 = !DILocation(line: 2623, column: 24, scope: !10335)
!10428 = !DILocation(line: 2623, column: 27, scope: !10335)
!10429 = !DILocation(line: 2623, column: 21, scope: !10335)
!10430 = !DILocation(line: 2624, column: 13, scope: !10335)
!10431 = !DILocation(line: 2614, column: 33, scope: !10432)
!10432 = !DILexicalBlockFile(scope: !10332, file: !1150, discriminator: 2)
!10433 = !DILocation(line: 2614, column: 13, scope: !10432)
!10434 = distinct !{!10434, !10435}
!10435 = !DILocation(line: 2614, column: 13, scope: !10275)
!10436 = !DILocation(line: 2625, column: 9, scope: !10275)
!10437 = !DILocation(line: 2603, column: 44, scope: !10438)
!10438 = !DILexicalBlockFile(scope: !10269, file: !1150, discriminator: 2)
!10439 = !DILocation(line: 2603, column: 9, scope: !10438)
!10440 = distinct !{!10440, !10441}
!10441 = !DILocation(line: 2603, column: 9, scope: !10154)
!10442 = !DILocation(line: 2626, column: 5, scope: !10154)
!10443 = !DILocation(line: 2627, column: 9, scope: !10444)
!10444 = distinct !DILexicalBlock(scope: !9075, file: !1150, line: 2627, column: 9)
!10445 = !DILocation(line: 2627, column: 12, scope: !10444)
!10446 = !DILocation(line: 2627, column: 20, scope: !10444)
!10447 = !DILocation(line: 2627, column: 24, scope: !10448)
!10448 = !DILexicalBlockFile(scope: !10444, file: !1150, discriminator: 1)
!10449 = !DILocation(line: 2627, column: 27, scope: !10448)
!10450 = !DILocation(line: 2627, column: 9, scope: !10448)
!10451 = !DILocalVariable(name: "j", scope: !10452, file: !1150, line: 2628, type: !1025)
!10452 = distinct !DILexicalBlock(scope: !10444, file: !1150, line: 2627, column: 32)
!10453 = !DILocation(line: 2628, column: 13, scope: !10452)
!10454 = !DILocation(line: 2629, column: 48, scope: !10452)
!10455 = !DILocation(line: 2629, column: 51, scope: !10452)
!10456 = !DILocation(line: 2629, column: 58, scope: !10452)
!10457 = !DILocation(line: 2629, column: 15, scope: !10452)
!10458 = !DILocation(line: 2629, column: 13, scope: !10452)
!10459 = !DILocation(line: 2630, column: 13, scope: !10460)
!10460 = distinct !DILexicalBlock(scope: !10452, file: !1150, line: 2630, column: 13)
!10461 = !DILocation(line: 2630, column: 13, scope: !10452)
!10462 = !DILocation(line: 2631, column: 20, scope: !10460)
!10463 = !DILocation(line: 2631, column: 13, scope: !10460)
!10464 = !DILocation(line: 2633, column: 9, scope: !10452)
!10465 = distinct !{!10465, !10464}
!10466 = !DILocation(line: 2633, column: 20, scope: !10467)
!10467 = !DILexicalBlockFile(scope: !10468, file: !1150, discriminator: 1)
!10468 = distinct !DILexicalBlock(scope: !10469, file: !1150, line: 2633, column: 18)
!10469 = distinct !DILexicalBlock(scope: !10452, file: !1150, line: 2633, column: 12)
!10470 = !DILocation(line: 2633, column: 23, scope: !10467)
!10471 = !DILocation(line: 2633, column: 64, scope: !10467)
!10472 = !DILocation(line: 2633, column: 67, scope: !10467)
!10473 = !DILocation(line: 2633, column: 80, scope: !10467)
!10474 = !DILocation(line: 2633, column: 40, scope: !10467)
!10475 = !DILocation(line: 2633, column: 37, scope: !10467)
!10476 = !DILocation(line: 2633, column: 18, scope: !10467)
!10477 = !DILocation(line: 2633, column: 92, scope: !10478)
!10478 = !DILexicalBlockFile(scope: !10479, file: !1150, discriminator: 2)
!10479 = distinct !DILexicalBlock(scope: !10468, file: !1150, line: 2633, column: 90)
!10480 = !DILocation(line: 2633, column: 150, scope: !10481)
!10481 = !DILexicalBlockFile(scope: !10478, file: !1150, discriminator: 4)
!10482 = !DILocation(line: 2633, column: 150, scope: !10478)
!10483 = !DILocation(line: 2633, column: 161, scope: !10484)
!10484 = !DILexicalBlockFile(scope: !10469, file: !1150, discriminator: 3)
!10485 = !DILocation(line: 2634, column: 19, scope: !10486)
!10486 = distinct !DILexicalBlock(scope: !10452, file: !1150, line: 2634, column: 9)
!10487 = !DILocation(line: 2634, column: 14, scope: !10486)
!10488 = !DILocation(line: 2634, column: 23, scope: !10489)
!10489 = !DILexicalBlockFile(scope: !10490, file: !1150, discriminator: 1)
!10490 = distinct !DILexicalBlock(scope: !10486, file: !1150, line: 2634, column: 9)
!10491 = !DILocation(line: 2634, column: 29, scope: !10489)
!10492 = !DILocation(line: 2634, column: 32, scope: !10489)
!10493 = !DILocation(line: 2634, column: 28, scope: !10489)
!10494 = !DILocation(line: 2634, column: 9, scope: !10489)
!10495 = !DILocalVariable(name: "dst", scope: !10496, file: !1150, line: 2635, type: !1030)
!10496 = distinct !DILexicalBlock(scope: !10490, file: !1150, line: 2634, column: 56)
!10497 = !DILocation(line: 2635, column: 22, scope: !10496)
!10498 = !DILocation(line: 2635, column: 49, scope: !10496)
!10499 = !DILocation(line: 2635, column: 28, scope: !10496)
!10500 = !DILocation(line: 2635, column: 31, scope: !10496)
!10501 = !DILocation(line: 2635, column: 44, scope: !10496)
!10502 = !DILocalVariable(name: "w", scope: !10496, file: !1150, line: 2636, type: !1025)
!10503 = !DILocation(line: 2636, column: 17, scope: !10496)
!10504 = !DILocation(line: 2636, column: 21, scope: !10496)
!10505 = !DILocation(line: 2636, column: 24, scope: !10496)
!10506 = !DILocation(line: 2636, column: 37, scope: !10496)
!10507 = !DILocalVariable(name: "h", scope: !10496, file: !1150, line: 2637, type: !1025)
!10508 = !DILocation(line: 2637, column: 17, scope: !10496)
!10509 = !DILocation(line: 2637, column: 21, scope: !10496)
!10510 = !DILocation(line: 2637, column: 24, scope: !10496)
!10511 = !DILocation(line: 2637, column: 37, scope: !10496)
!10512 = !DILocation(line: 2638, column: 16, scope: !10513)
!10513 = distinct !DILexicalBlock(scope: !10496, file: !1150, line: 2638, column: 16)
!10514 = !DILocation(line: 2638, column: 22, scope: !10513)
!10515 = !DILocation(line: 2638, column: 25, scope: !10516)
!10516 = !DILexicalBlockFile(scope: !10513, file: !1150, discriminator: 1)
!10517 = !DILocation(line: 2638, column: 30, scope: !10516)
!10518 = !DILocation(line: 2638, column: 16, scope: !10516)
!10519 = !DILocation(line: 2639, column: 59, scope: !10520)
!10520 = distinct !DILexicalBlock(scope: !10513, file: !1150, line: 2638, column: 33)
!10521 = !DILocation(line: 2639, column: 57, scope: !10520)
!10522 = !DILocation(line: 2639, column: 67, scope: !10520)
!10523 = !DILocation(line: 2639, column: 63, scope: !10520)
!10524 = !DILocation(line: 2639, column: 54, scope: !10520)
!10525 = !DILocation(line: 2639, column: 19, scope: !10520)
!10526 = !DILocation(line: 2640, column: 59, scope: !10520)
!10527 = !DILocation(line: 2640, column: 57, scope: !10520)
!10528 = !DILocation(line: 2640, column: 67, scope: !10520)
!10529 = !DILocation(line: 2640, column: 63, scope: !10520)
!10530 = !DILocation(line: 2640, column: 54, scope: !10520)
!10531 = !DILocation(line: 2640, column: 19, scope: !10520)
!10532 = !DILocation(line: 2641, column: 13, scope: !10520)
!10533 = !DILocation(line: 2642, column: 16, scope: !10534)
!10534 = distinct !DILexicalBlock(scope: !10496, file: !1150, line: 2642, column: 16)
!10535 = !DILocation(line: 2642, column: 16, scope: !10496)
!10536 = !DILocalVariable(name: "dst2", scope: !10537, file: !1150, line: 2643, type: !1030)
!10537 = distinct !DILexicalBlock(scope: !10534, file: !1150, line: 2642, column: 20)
!10538 = !DILocation(line: 2643, column: 26, scope: !10537)
!10539 = !DILocation(line: 2643, column: 33, scope: !10537)
!10540 = !DILocation(line: 2643, column: 64, scope: !10537)
!10541 = !DILocation(line: 2643, column: 39, scope: !10537)
!10542 = !DILocation(line: 2643, column: 42, scope: !10537)
!10543 = !DILocation(line: 2643, column: 55, scope: !10537)
!10544 = !DILocation(line: 2643, column: 72, scope: !10537)
!10545 = !DILocation(line: 2643, column: 73, scope: !10537)
!10546 = !DILocation(line: 2643, column: 70, scope: !10537)
!10547 = !DILocation(line: 2643, column: 37, scope: !10537)
!10548 = !DILocation(line: 2644, column: 23, scope: !10549)
!10549 = distinct !DILexicalBlock(scope: !10537, file: !1150, line: 2644, column: 17)
!10550 = !DILocation(line: 2644, column: 22, scope: !10549)
!10551 = !DILocation(line: 2644, column: 27, scope: !10552)
!10552 = !DILexicalBlockFile(scope: !10553, file: !1150, discriminator: 1)
!10553 = distinct !DILexicalBlock(scope: !10549, file: !1150, line: 2644, column: 17)
!10554 = !DILocation(line: 2644, column: 29, scope: !10552)
!10555 = !DILocation(line: 2644, column: 30, scope: !10552)
!10556 = !DILocation(line: 2644, column: 28, scope: !10552)
!10557 = !DILocation(line: 2644, column: 17, scope: !10552)
!10558 = !DILocation(line: 2645, column: 27, scope: !10559)
!10559 = distinct !DILexicalBlock(scope: !10560, file: !1150, line: 2645, column: 21)
!10560 = distinct !DILexicalBlock(scope: !10553, file: !1150, line: 2644, column: 39)
!10561 = !DILocation(line: 2645, column: 26, scope: !10559)
!10562 = !DILocation(line: 2645, column: 31, scope: !10563)
!10563 = !DILexicalBlockFile(scope: !10564, file: !1150, discriminator: 1)
!10564 = distinct !DILexicalBlock(scope: !10559, file: !1150, line: 2645, column: 21)
!10565 = !DILocation(line: 2645, column: 33, scope: !10563)
!10566 = !DILocation(line: 2645, column: 32, scope: !10563)
!10567 = !DILocation(line: 2645, column: 21, scope: !10563)
!10568 = !DILocation(line: 2646, column: 25, scope: !10564)
!10569 = distinct !{!10569, !10568}
!10570 = !DILocalVariable(name: "SWAP_tmp", scope: !10571, file: !1150, line: 2646, type: !1025)
!10571 = distinct !DILexicalBlock(scope: !10564, file: !1150, line: 2646, column: 27)
!10572 = !DILocation(line: 2646, column: 32, scope: !10571)
!10573 = !DILocation(line: 2646, column: 47, scope: !10574)
!10574 = !DILexicalBlockFile(scope: !10571, file: !1150, discriminator: 1)
!10575 = !DILocation(line: 2646, column: 42, scope: !10574)
!10576 = !DILocation(line: 2646, column: 32, scope: !10574)
!10577 = !DILocation(line: 2646, column: 64, scope: !10574)
!10578 = !DILocation(line: 2646, column: 60, scope: !10574)
!10579 = !DILocation(line: 2646, column: 56, scope: !10574)
!10580 = !DILocation(line: 2646, column: 51, scope: !10574)
!10581 = !DILocation(line: 2646, column: 58, scope: !10574)
!10582 = !DILocation(line: 2646, column: 76, scope: !10574)
!10583 = !DILocation(line: 2646, column: 72, scope: !10574)
!10584 = !DILocation(line: 2646, column: 68, scope: !10574)
!10585 = !DILocation(line: 2646, column: 74, scope: !10574)
!10586 = !DILocation(line: 2646, column: 85, scope: !10574)
!10587 = !DILocation(line: 2646, column: 85, scope: !10588)
!10588 = !DILexicalBlockFile(scope: !10571, file: !1150, discriminator: 2)
!10589 = !DILocation(line: 2645, column: 37, scope: !10590)
!10590 = !DILexicalBlockFile(scope: !10564, file: !1150, discriminator: 2)
!10591 = !DILocation(line: 2645, column: 21, scope: !10590)
!10592 = distinct !{!10592, !10593}
!10593 = !DILocation(line: 2645, column: 21, scope: !10560)
!10594 = !DILocation(line: 2647, column: 53, scope: !10560)
!10595 = !DILocation(line: 2647, column: 28, scope: !10560)
!10596 = !DILocation(line: 2647, column: 31, scope: !10560)
!10597 = !DILocation(line: 2647, column: 44, scope: !10560)
!10598 = !DILocation(line: 2647, column: 25, scope: !10560)
!10599 = !DILocation(line: 2648, column: 54, scope: !10560)
!10600 = !DILocation(line: 2648, column: 29, scope: !10560)
!10601 = !DILocation(line: 2648, column: 32, scope: !10560)
!10602 = !DILocation(line: 2648, column: 45, scope: !10560)
!10603 = !DILocation(line: 2648, column: 26, scope: !10560)
!10604 = !DILocation(line: 2649, column: 17, scope: !10560)
!10605 = !DILocation(line: 2644, column: 35, scope: !10606)
!10606 = !DILexicalBlockFile(scope: !10553, file: !1150, discriminator: 2)
!10607 = !DILocation(line: 2644, column: 17, scope: !10606)
!10608 = distinct !{!10608, !10609}
!10609 = !DILocation(line: 2644, column: 17, scope: !10537)
!10610 = !DILocation(line: 2650, column: 13, scope: !10537)
!10611 = !DILocation(line: 2651, column: 9, scope: !10496)
!10612 = !DILocation(line: 2634, column: 52, scope: !10613)
!10613 = !DILexicalBlockFile(scope: !10490, file: !1150, discriminator: 2)
!10614 = !DILocation(line: 2634, column: 9, scope: !10613)
!10615 = distinct !{!10615, !10616}
!10616 = !DILocation(line: 2634, column: 9, scope: !10452)
!10617 = !DILocation(line: 2652, column: 5, scope: !10452)
!10618 = !DILocation(line: 2653, column: 9, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !9075, file: !1150, line: 2653, column: 9)
!10620 = !DILocation(line: 2653, column: 12, scope: !10619)
!10621 = !DILocation(line: 2653, column: 28, scope: !10619)
!10622 = !DILocation(line: 2653, column: 33, scope: !10619)
!10623 = !DILocation(line: 2653, column: 36, scope: !10624)
!10624 = !DILexicalBlockFile(scope: !10619, file: !1150, discriminator: 1)
!10625 = !DILocation(line: 2653, column: 39, scope: !10624)
!10626 = !DILocation(line: 2653, column: 46, scope: !10624)
!10627 = !DILocation(line: 2653, column: 54, scope: !10624)
!10628 = !DILocation(line: 2653, column: 9, scope: !10624)
!10629 = !DILocalVariable(name: "w", scope: !10630, file: !1150, line: 2654, type: !1025)
!10630 = distinct !DILexicalBlock(scope: !10619, file: !1150, line: 2653, column: 75)
!10631 = !DILocation(line: 2654, column: 13, scope: !10630)
!10632 = !DILocation(line: 2654, column: 17, scope: !10630)
!10633 = !DILocation(line: 2654, column: 20, scope: !10630)
!10634 = !DILocation(line: 2654, column: 33, scope: !10630)
!10635 = !DILocalVariable(name: "h", scope: !10630, file: !1150, line: 2655, type: !1025)
!10636 = !DILocation(line: 2655, column: 13, scope: !10630)
!10637 = !DILocation(line: 2655, column: 17, scope: !10630)
!10638 = !DILocation(line: 2655, column: 20, scope: !10630)
!10639 = !DILocation(line: 2655, column: 33, scope: !10630)
!10640 = !DILocation(line: 2656, column: 9, scope: !10630)
!10641 = distinct !{!10641, !10640}
!10642 = !DILocation(line: 2656, column: 20, scope: !10643)
!10643 = !DILexicalBlockFile(scope: !10644, file: !1150, discriminator: 1)
!10644 = distinct !DILexicalBlock(scope: !10645, file: !1150, line: 2656, column: 18)
!10645 = distinct !DILexicalBlock(scope: !10630, file: !1150, line: 2656, column: 12)
!10646 = !DILocation(line: 2656, column: 23, scope: !10643)
!10647 = !DILocation(line: 2656, column: 37, scope: !10643)
!10648 = !DILocation(line: 2656, column: 18, scope: !10643)
!10649 = !DILocation(line: 2656, column: 46, scope: !10650)
!10650 = !DILexicalBlockFile(scope: !10651, file: !1150, discriminator: 2)
!10651 = distinct !DILexicalBlock(scope: !10644, file: !1150, line: 2656, column: 44)
!10652 = !DILocation(line: 2656, column: 104, scope: !10653)
!10653 = !DILexicalBlockFile(scope: !10650, file: !1150, discriminator: 4)
!10654 = !DILocation(line: 2656, column: 104, scope: !10650)
!10655 = !DILocation(line: 2656, column: 115, scope: !10656)
!10656 = !DILexicalBlockFile(scope: !10645, file: !1150, discriminator: 3)
!10657 = !DILocation(line: 2657, column: 15, scope: !10658)
!10658 = distinct !DILexicalBlock(scope: !10630, file: !1150, line: 2657, column: 9)
!10659 = !DILocation(line: 2657, column: 14, scope: !10658)
!10660 = !DILocation(line: 2657, column: 19, scope: !10661)
!10661 = !DILexicalBlockFile(scope: !10662, file: !1150, discriminator: 1)
!10662 = distinct !DILexicalBlock(scope: !10658, file: !1150, line: 2657, column: 9)
!10663 = !DILocation(line: 2657, column: 21, scope: !10661)
!10664 = !DILocation(line: 2657, column: 20, scope: !10661)
!10665 = !DILocation(line: 2657, column: 9, scope: !10661)
!10666 = !DILocalVariable(name: "j", scope: !10667, file: !1150, line: 2658, type: !1025)
!10667 = distinct !DILexicalBlock(scope: !10662, file: !1150, line: 2657, column: 29)
!10668 = !DILocation(line: 2658, column: 17, scope: !10667)
!10669 = !DILocalVariable(name: "dst", scope: !10667, file: !1150, line: 2659, type: !1761)
!10670 = !DILocation(line: 2659, column: 22, scope: !10667)
!10671 = !DILocation(line: 2660, column: 23, scope: !10672)
!10672 = distinct !DILexicalBlock(scope: !10667, file: !1150, line: 2660, column: 13)
!10673 = !DILocation(line: 2660, column: 18, scope: !10672)
!10674 = !DILocation(line: 2660, column: 27, scope: !10675)
!10675 = !DILexicalBlockFile(scope: !10676, file: !1150, discriminator: 1)
!10676 = distinct !DILexicalBlock(scope: !10672, file: !1150, line: 2660, column: 13)
!10677 = !DILocation(line: 2660, column: 32, scope: !10675)
!10678 = !DILocation(line: 2660, column: 13, scope: !10675)
!10679 = !DILocation(line: 2661, column: 51, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10676, file: !1150, line: 2660, column: 45)
!10681 = !DILocation(line: 2661, column: 30, scope: !10680)
!10682 = !DILocation(line: 2661, column: 33, scope: !10680)
!10683 = !DILocation(line: 2661, column: 46, scope: !10680)
!10684 = !DILocation(line: 2662, column: 57, scope: !10680)
!10685 = !DILocation(line: 2662, column: 32, scope: !10680)
!10686 = !DILocation(line: 2662, column: 35, scope: !10680)
!10687 = !DILocation(line: 2662, column: 48, scope: !10680)
!10688 = !DILocation(line: 2662, column: 64, scope: !10680)
!10689 = !DILocation(line: 2662, column: 63, scope: !10680)
!10690 = !DILocation(line: 2662, column: 30, scope: !10680)
!10691 = !DILocation(line: 2661, column: 21, scope: !10680)
!10692 = !DILocation(line: 2661, column: 17, scope: !10680)
!10693 = !DILocation(line: 2661, column: 28, scope: !10680)
!10694 = !DILocation(line: 2663, column: 13, scope: !10680)
!10695 = !DILocation(line: 2660, column: 41, scope: !10696)
!10696 = !DILexicalBlockFile(scope: !10676, file: !1150, discriminator: 2)
!10697 = !DILocation(line: 2660, column: 13, scope: !10696)
!10698 = distinct !{!10698, !10699}
!10699 = !DILocation(line: 2660, column: 13, scope: !10667)
!10700 = !DILocation(line: 2664, column: 19, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10667, file: !1150, line: 2664, column: 13)
!10702 = !DILocation(line: 2664, column: 18, scope: !10701)
!10703 = !DILocation(line: 2664, column: 23, scope: !10704)
!10704 = !DILexicalBlockFile(scope: !10705, file: !1150, discriminator: 1)
!10705 = distinct !DILexicalBlock(scope: !10701, file: !1150, line: 2664, column: 13)
!10706 = !DILocation(line: 2664, column: 25, scope: !10704)
!10707 = !DILocation(line: 2664, column: 24, scope: !10704)
!10708 = !DILocation(line: 2664, column: 13, scope: !10704)
!10709 = !DILocalVariable(name: "k", scope: !10710, file: !1150, line: 2665, type: !1025)
!10710 = distinct !DILexicalBlock(scope: !10705, file: !1150, line: 2664, column: 33)
!10711 = !DILocation(line: 2665, column: 21, scope: !10710)
!10712 = !DILocation(line: 2665, column: 32, scope: !10710)
!10713 = !DILocation(line: 2665, column: 25, scope: !10710)
!10714 = !DILocalVariable(name: "r", scope: !10710, file: !1150, line: 2666, type: !1025)
!10715 = !DILocation(line: 2666, column: 21, scope: !10710)
!10716 = !DILocation(line: 2666, column: 32, scope: !10710)
!10717 = !DILocation(line: 2666, column: 25, scope: !10710)
!10718 = !DILocation(line: 2666, column: 37, scope: !10710)
!10719 = !DILocation(line: 2666, column: 35, scope: !10710)
!10720 = !DILocalVariable(name: "g", scope: !10710, file: !1150, line: 2667, type: !1025)
!10721 = !DILocation(line: 2667, column: 21, scope: !10710)
!10722 = !DILocation(line: 2667, column: 32, scope: !10710)
!10723 = !DILocation(line: 2667, column: 25, scope: !10710)
!10724 = !DILocation(line: 2667, column: 37, scope: !10710)
!10725 = !DILocation(line: 2667, column: 35, scope: !10710)
!10726 = !DILocalVariable(name: "b", scope: !10710, file: !1150, line: 2668, type: !1025)
!10727 = !DILocation(line: 2668, column: 21, scope: !10710)
!10728 = !DILocation(line: 2668, column: 32, scope: !10710)
!10729 = !DILocation(line: 2668, column: 25, scope: !10710)
!10730 = !DILocation(line: 2668, column: 37, scope: !10710)
!10731 = !DILocation(line: 2668, column: 35, scope: !10710)
!10732 = !DILocation(line: 2669, column: 29, scope: !10710)
!10733 = !DILocation(line: 2669, column: 30, scope: !10710)
!10734 = !DILocation(line: 2669, column: 35, scope: !10710)
!10735 = !DILocation(line: 2669, column: 24, scope: !10710)
!10736 = !DILocation(line: 2669, column: 17, scope: !10710)
!10737 = !DILocation(line: 2669, column: 27, scope: !10710)
!10738 = !DILocation(line: 2670, column: 29, scope: !10710)
!10739 = !DILocation(line: 2670, column: 30, scope: !10710)
!10740 = !DILocation(line: 2670, column: 35, scope: !10710)
!10741 = !DILocation(line: 2670, column: 24, scope: !10710)
!10742 = !DILocation(line: 2670, column: 17, scope: !10710)
!10743 = !DILocation(line: 2670, column: 27, scope: !10710)
!10744 = !DILocation(line: 2671, column: 29, scope: !10710)
!10745 = !DILocation(line: 2671, column: 30, scope: !10710)
!10746 = !DILocation(line: 2671, column: 35, scope: !10710)
!10747 = !DILocation(line: 2671, column: 24, scope: !10710)
!10748 = !DILocation(line: 2671, column: 17, scope: !10710)
!10749 = !DILocation(line: 2671, column: 27, scope: !10710)
!10750 = !DILocation(line: 2672, column: 24, scope: !10710)
!10751 = !DILocation(line: 2672, column: 17, scope: !10710)
!10752 = !DILocation(line: 2672, column: 27, scope: !10710)
!10753 = !DILocation(line: 2673, column: 13, scope: !10710)
!10754 = !DILocation(line: 2664, column: 29, scope: !10755)
!10755 = !DILexicalBlockFile(scope: !10705, file: !1150, discriminator: 2)
!10756 = !DILocation(line: 2664, column: 13, scope: !10755)
!10757 = distinct !{!10757, !10758}
!10758 = !DILocation(line: 2664, column: 13, scope: !10667)
!10759 = !DILocation(line: 2674, column: 9, scope: !10667)
!10760 = !DILocation(line: 2657, column: 25, scope: !10761)
!10761 = !DILexicalBlockFile(scope: !10662, file: !1150, discriminator: 2)
!10762 = !DILocation(line: 2657, column: 9, scope: !10761)
!10763 = distinct !{!10763, !10764}
!10764 = !DILocation(line: 2657, column: 9, scope: !10630)
!10765 = !DILocation(line: 2675, column: 5, scope: !10630)
!10766 = !DILocation(line: 2676, column: 9, scope: !10767)
!10767 = distinct !DILexicalBlock(scope: !9075, file: !1150, line: 2676, column: 9)
!10768 = !DILocation(line: 2676, column: 12, scope: !10767)
!10769 = !DILocation(line: 2676, column: 28, scope: !10767)
!10770 = !DILocation(line: 2676, column: 33, scope: !10767)
!10771 = !DILocation(line: 2676, column: 36, scope: !10772)
!10772 = !DILexicalBlockFile(scope: !10767, file: !1150, discriminator: 1)
!10773 = !DILocation(line: 2676, column: 39, scope: !10772)
!10774 = !DILocation(line: 2676, column: 46, scope: !10772)
!10775 = !DILocation(line: 2676, column: 54, scope: !10772)
!10776 = !DILocation(line: 2676, column: 9, scope: !10772)
!10777 = !DILocalVariable(name: "w", scope: !10778, file: !1150, line: 2677, type: !1025)
!10778 = distinct !DILexicalBlock(scope: !10767, file: !1150, line: 2676, column: 78)
!10779 = !DILocation(line: 2677, column: 13, scope: !10778)
!10780 = !DILocation(line: 2677, column: 17, scope: !10778)
!10781 = !DILocation(line: 2677, column: 20, scope: !10778)
!10782 = !DILocation(line: 2677, column: 33, scope: !10778)
!10783 = !DILocalVariable(name: "h", scope: !10778, file: !1150, line: 2678, type: !1025)
!10784 = !DILocation(line: 2678, column: 13, scope: !10778)
!10785 = !DILocation(line: 2678, column: 17, scope: !10778)
!10786 = !DILocation(line: 2678, column: 20, scope: !10778)
!10787 = !DILocation(line: 2678, column: 33, scope: !10778)
!10788 = !DILocation(line: 2679, column: 9, scope: !10778)
!10789 = distinct !{!10789, !10788}
!10790 = !DILocation(line: 2679, column: 20, scope: !10791)
!10791 = !DILexicalBlockFile(scope: !10792, file: !1150, discriminator: 1)
!10792 = distinct !DILexicalBlock(scope: !10793, file: !1150, line: 2679, column: 18)
!10793 = distinct !DILexicalBlock(scope: !10778, file: !1150, line: 2679, column: 12)
!10794 = !DILocation(line: 2679, column: 23, scope: !10791)
!10795 = !DILocation(line: 2679, column: 37, scope: !10791)
!10796 = !DILocation(line: 2679, column: 18, scope: !10791)
!10797 = !DILocation(line: 2679, column: 46, scope: !10798)
!10798 = !DILexicalBlockFile(scope: !10799, file: !1150, discriminator: 2)
!10799 = distinct !DILexicalBlock(scope: !10792, file: !1150, line: 2679, column: 44)
!10800 = !DILocation(line: 2679, column: 104, scope: !10801)
!10801 = !DILexicalBlockFile(scope: !10798, file: !1150, discriminator: 4)
!10802 = !DILocation(line: 2679, column: 104, scope: !10798)
!10803 = !DILocation(line: 2679, column: 115, scope: !10804)
!10804 = !DILexicalBlockFile(scope: !10793, file: !1150, discriminator: 3)
!10805 = !DILocation(line: 2680, column: 15, scope: !10806)
!10806 = distinct !DILexicalBlock(scope: !10778, file: !1150, line: 2680, column: 9)
!10807 = !DILocation(line: 2680, column: 14, scope: !10806)
!10808 = !DILocation(line: 2680, column: 19, scope: !10809)
!10809 = !DILexicalBlockFile(scope: !10810, file: !1150, discriminator: 1)
!10810 = distinct !DILexicalBlock(scope: !10806, file: !1150, line: 2680, column: 9)
!10811 = !DILocation(line: 2680, column: 21, scope: !10809)
!10812 = !DILocation(line: 2680, column: 20, scope: !10809)
!10813 = !DILocation(line: 2680, column: 9, scope: !10809)
!10814 = !DILocalVariable(name: "j", scope: !10815, file: !1150, line: 2681, type: !1025)
!10815 = distinct !DILexicalBlock(scope: !10810, file: !1150, line: 2680, column: 29)
!10816 = !DILocation(line: 2681, column: 17, scope: !10815)
!10817 = !DILocalVariable(name: "dst", scope: !10815, file: !1150, line: 2682, type: !1761)
!10818 = !DILocation(line: 2682, column: 22, scope: !10815)
!10819 = !DILocation(line: 2683, column: 23, scope: !10820)
!10820 = distinct !DILexicalBlock(scope: !10815, file: !1150, line: 2683, column: 13)
!10821 = !DILocation(line: 2683, column: 18, scope: !10820)
!10822 = !DILocation(line: 2683, column: 27, scope: !10823)
!10823 = !DILexicalBlockFile(scope: !10824, file: !1150, discriminator: 1)
!10824 = distinct !DILexicalBlock(scope: !10820, file: !1150, line: 2683, column: 13)
!10825 = !DILocation(line: 2683, column: 32, scope: !10823)
!10826 = !DILocation(line: 2683, column: 13, scope: !10823)
!10827 = !DILocation(line: 2684, column: 51, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10824, file: !1150, line: 2683, column: 45)
!10829 = !DILocation(line: 2684, column: 30, scope: !10828)
!10830 = !DILocation(line: 2684, column: 33, scope: !10828)
!10831 = !DILocation(line: 2684, column: 46, scope: !10828)
!10832 = !DILocation(line: 2685, column: 57, scope: !10828)
!10833 = !DILocation(line: 2685, column: 32, scope: !10828)
!10834 = !DILocation(line: 2685, column: 35, scope: !10828)
!10835 = !DILocation(line: 2685, column: 48, scope: !10828)
!10836 = !DILocation(line: 2685, column: 64, scope: !10828)
!10837 = !DILocation(line: 2685, column: 63, scope: !10828)
!10838 = !DILocation(line: 2685, column: 30, scope: !10828)
!10839 = !DILocation(line: 2684, column: 21, scope: !10828)
!10840 = !DILocation(line: 2684, column: 17, scope: !10828)
!10841 = !DILocation(line: 2684, column: 28, scope: !10828)
!10842 = !DILocation(line: 2686, column: 13, scope: !10828)
!10843 = !DILocation(line: 2683, column: 41, scope: !10844)
!10844 = !DILexicalBlockFile(scope: !10824, file: !1150, discriminator: 2)
!10845 = !DILocation(line: 2683, column: 13, scope: !10844)
!10846 = distinct !{!10846, !10847}
!10847 = !DILocation(line: 2683, column: 13, scope: !10815)
!10848 = !DILocation(line: 2687, column: 19, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !10815, file: !1150, line: 2687, column: 13)
!10850 = !DILocation(line: 2687, column: 18, scope: !10849)
!10851 = !DILocation(line: 2687, column: 23, scope: !10852)
!10852 = !DILexicalBlockFile(scope: !10853, file: !1150, discriminator: 1)
!10853 = distinct !DILexicalBlock(scope: !10849, file: !1150, line: 2687, column: 13)
!10854 = !DILocation(line: 2687, column: 25, scope: !10852)
!10855 = !DILocation(line: 2687, column: 24, scope: !10852)
!10856 = !DILocation(line: 2687, column: 13, scope: !10852)
!10857 = !DILocalVariable(name: "k", scope: !10858, file: !1150, line: 2688, type: !1025)
!10858 = distinct !DILexicalBlock(scope: !10853, file: !1150, line: 2687, column: 33)
!10859 = !DILocation(line: 2688, column: 21, scope: !10858)
!10860 = !DILocation(line: 2688, column: 32, scope: !10858)
!10861 = !DILocation(line: 2688, column: 25, scope: !10858)
!10862 = !DILocalVariable(name: "r", scope: !10858, file: !1150, line: 2689, type: !1025)
!10863 = !DILocation(line: 2689, column: 21, scope: !10858)
!10864 = !DILocation(line: 2689, column: 39, scope: !10858)
!10865 = !DILocation(line: 2689, column: 32, scope: !10858)
!10866 = !DILocation(line: 2689, column: 30, scope: !10858)
!10867 = !DILocation(line: 2689, column: 45, scope: !10858)
!10868 = !DILocation(line: 2689, column: 43, scope: !10858)
!10869 = !DILocalVariable(name: "g", scope: !10858, file: !1150, line: 2690, type: !1025)
!10870 = !DILocation(line: 2690, column: 21, scope: !10858)
!10871 = !DILocation(line: 2690, column: 39, scope: !10858)
!10872 = !DILocation(line: 2690, column: 32, scope: !10858)
!10873 = !DILocation(line: 2690, column: 30, scope: !10858)
!10874 = !DILocation(line: 2690, column: 45, scope: !10858)
!10875 = !DILocation(line: 2690, column: 43, scope: !10858)
!10876 = !DILocalVariable(name: "b", scope: !10858, file: !1150, line: 2691, type: !1025)
!10877 = !DILocation(line: 2691, column: 21, scope: !10858)
!10878 = !DILocation(line: 2691, column: 39, scope: !10858)
!10879 = !DILocation(line: 2691, column: 32, scope: !10858)
!10880 = !DILocation(line: 2691, column: 30, scope: !10858)
!10881 = !DILocation(line: 2691, column: 45, scope: !10858)
!10882 = !DILocation(line: 2691, column: 43, scope: !10858)
!10883 = !DILocation(line: 2692, column: 29, scope: !10858)
!10884 = !DILocation(line: 2692, column: 30, scope: !10858)
!10885 = !DILocation(line: 2692, column: 35, scope: !10858)
!10886 = !DILocation(line: 2692, column: 24, scope: !10858)
!10887 = !DILocation(line: 2692, column: 17, scope: !10858)
!10888 = !DILocation(line: 2692, column: 27, scope: !10858)
!10889 = !DILocation(line: 2693, column: 30, scope: !10858)
!10890 = !DILocation(line: 2693, column: 31, scope: !10858)
!10891 = !DILocation(line: 2693, column: 36, scope: !10858)
!10892 = !DILocation(line: 2693, column: 43, scope: !10858)
!10893 = !DILocation(line: 2693, column: 29, scope: !10858)
!10894 = !DILocation(line: 2693, column: 24, scope: !10858)
!10895 = !DILocation(line: 2693, column: 17, scope: !10858)
!10896 = !DILocation(line: 2693, column: 27, scope: !10858)
!10897 = !DILocation(line: 2694, column: 30, scope: !10858)
!10898 = !DILocation(line: 2694, column: 31, scope: !10858)
!10899 = !DILocation(line: 2694, column: 36, scope: !10858)
!10900 = !DILocation(line: 2694, column: 43, scope: !10858)
!10901 = !DILocation(line: 2694, column: 29, scope: !10858)
!10902 = !DILocation(line: 2694, column: 24, scope: !10858)
!10903 = !DILocation(line: 2694, column: 17, scope: !10858)
!10904 = !DILocation(line: 2694, column: 27, scope: !10858)
!10905 = !DILocation(line: 2695, column: 24, scope: !10858)
!10906 = !DILocation(line: 2695, column: 17, scope: !10858)
!10907 = !DILocation(line: 2695, column: 27, scope: !10858)
!10908 = !DILocation(line: 2696, column: 13, scope: !10858)
!10909 = !DILocation(line: 2687, column: 29, scope: !10910)
!10910 = !DILexicalBlockFile(scope: !10853, file: !1150, discriminator: 2)
!10911 = !DILocation(line: 2687, column: 13, scope: !10910)
!10912 = distinct !{!10912, !10913}
!10913 = !DILocation(line: 2687, column: 13, scope: !10815)
!10914 = !DILocation(line: 2697, column: 9, scope: !10815)
!10915 = !DILocation(line: 2680, column: 25, scope: !10916)
!10916 = !DILexicalBlockFile(scope: !10810, file: !1150, discriminator: 2)
!10917 = !DILocation(line: 2680, column: 9, scope: !10916)
!10918 = distinct !{!10918, !10919}
!10919 = !DILocation(line: 2680, column: 9, scope: !10778)
!10920 = !DILocation(line: 2698, column: 5, scope: !10778)
!10921 = !DILocation(line: 2700, column: 9, scope: !10922)
!10922 = distinct !DILexicalBlock(scope: !9075, file: !1150, line: 2700, column: 9)
!10923 = !DILocation(line: 2700, column: 12, scope: !10922)
!10924 = !DILocation(line: 2700, column: 9, scope: !9075)
!10925 = !DILocalVariable(name: "stereo", scope: !10926, file: !1150, line: 2701, type: !1998)
!10926 = distinct !DILexicalBlock(scope: !10922, file: !1150, line: 2700, column: 22)
!10927 = !DILocation(line: 2701, column: 21, scope: !10926)
!10928 = !DILocation(line: 2701, column: 59, scope: !10926)
!10929 = !DILocation(line: 2701, column: 30, scope: !10926)
!10930 = !DILocation(line: 2702, column: 13, scope: !10931)
!10931 = distinct !DILexicalBlock(scope: !10926, file: !1150, line: 2702, column: 13)
!10932 = !DILocation(line: 2702, column: 13, scope: !10926)
!10933 = !DILocation(line: 2703, column: 28, scope: !10934)
!10934 = distinct !DILexicalBlock(scope: !10931, file: !1150, line: 2702, column: 21)
!10935 = !DILocation(line: 2703, column: 31, scope: !10934)
!10936 = !DILocation(line: 2703, column: 41, scope: !10934)
!10937 = !DILocation(line: 2703, column: 13, scope: !10934)
!10938 = !DILocation(line: 2703, column: 21, scope: !10934)
!10939 = !DILocation(line: 2703, column: 26, scope: !10934)
!10940 = !DILocation(line: 2704, column: 29, scope: !10934)
!10941 = !DILocation(line: 2704, column: 32, scope: !10934)
!10942 = !DILocation(line: 2704, column: 42, scope: !10934)
!10943 = !DILocation(line: 2704, column: 13, scope: !10934)
!10944 = !DILocation(line: 2704, column: 21, scope: !10934)
!10945 = !DILocation(line: 2704, column: 27, scope: !10934)
!10946 = !DILocation(line: 2705, column: 9, scope: !10934)
!10947 = !DILocation(line: 2706, column: 19, scope: !10926)
!10948 = !DILocation(line: 2706, column: 22, scope: !10926)
!10949 = !DILocation(line: 2706, column: 18, scope: !10926)
!10950 = !DILocation(line: 2706, column: 9, scope: !10926)
!10951 = !DILocation(line: 2707, column: 5, scope: !10926)
!10952 = !DILocation(line: 2709, column: 9, scope: !10953)
!10953 = distinct !DILexicalBlock(scope: !9075, file: !1150, line: 2709, column: 9)
!10954 = !DILocation(line: 2709, column: 12, scope: !10953)
!10955 = !DILocation(line: 2709, column: 19, scope: !10953)
!10956 = !DILocation(line: 2709, column: 24, scope: !10953)
!10957 = !DILocation(line: 2709, column: 27, scope: !10958)
!10958 = !DILexicalBlockFile(scope: !10953, file: !1150, discriminator: 1)
!10959 = !DILocation(line: 2709, column: 30, scope: !10958)
!10960 = !DILocation(line: 2709, column: 40, scope: !10958)
!10961 = !DILocation(line: 2709, column: 43, scope: !10958)
!10962 = !DILocation(line: 2709, column: 37, scope: !10958)
!10963 = !DILocation(line: 2709, column: 9, scope: !10958)
!10964 = !DILocalVariable(name: "sd", scope: !10965, file: !1150, line: 2710, type: !1096)
!10965 = distinct !DILexicalBlock(scope: !10953, file: !1150, line: 2709, column: 52)
!10966 = !DILocation(line: 2710, column: 26, scope: !10965)
!10967 = !DILocalVariable(name: "offset", scope: !10965, file: !1150, line: 2711, type: !1133)
!10968 = !DILocation(line: 2711, column: 16, scope: !10965)
!10969 = !DILocalVariable(name: "total_size", scope: !10965, file: !1150, line: 2712, type: !1025)
!10970 = !DILocation(line: 2712, column: 13, scope: !10965)
!10971 = !DILocalVariable(name: "i", scope: !10965, file: !1150, line: 2713, type: !1025)
!10972 = !DILocation(line: 2713, column: 13, scope: !10965)
!10973 = !DILocation(line: 2716, column: 16, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !10965, file: !1150, line: 2716, column: 9)
!10975 = !DILocation(line: 2716, column: 14, scope: !10974)
!10976 = !DILocation(line: 2716, column: 21, scope: !10977)
!10977 = !DILexicalBlockFile(scope: !10978, file: !1150, discriminator: 1)
!10978 = distinct !DILexicalBlock(scope: !10974, file: !1150, line: 2716, column: 9)
!10979 = !DILocation(line: 2716, column: 25, scope: !10977)
!10980 = !DILocation(line: 2716, column: 28, scope: !10977)
!10981 = !DILocation(line: 2716, column: 23, scope: !10977)
!10982 = !DILocation(line: 2716, column: 9, scope: !10977)
!10983 = !DILocation(line: 2717, column: 42, scope: !10978)
!10984 = !DILocation(line: 2717, column: 27, scope: !10978)
!10985 = !DILocation(line: 2717, column: 30, scope: !10978)
!10986 = !DILocation(line: 2717, column: 24, scope: !10978)
!10987 = !DILocation(line: 2717, column: 13, scope: !10978)
!10988 = !DILocation(line: 2716, column: 37, scope: !10989)
!10989 = !DILexicalBlockFile(scope: !10978, file: !1150, discriminator: 2)
!10990 = !DILocation(line: 2716, column: 9, scope: !10989)
!10991 = distinct !{!10991, !10992}
!10992 = !DILocation(line: 2716, column: 9, scope: !10965)
!10993 = !DILocation(line: 2719, column: 37, scope: !10965)
!10994 = !DILocation(line: 2719, column: 70, scope: !10965)
!10995 = !DILocation(line: 2719, column: 14, scope: !10965)
!10996 = !DILocation(line: 2719, column: 12, scope: !10965)
!10997 = !DILocation(line: 2720, column: 14, scope: !10998)
!10998 = distinct !DILexicalBlock(scope: !10965, file: !1150, line: 2720, column: 13)
!10999 = !DILocation(line: 2720, column: 13, scope: !10965)
!11000 = !DILocation(line: 2721, column: 20, scope: !11001)
!11001 = distinct !DILexicalBlock(scope: !10998, file: !1150, line: 2720, column: 18)
!11002 = !DILocation(line: 2721, column: 23, scope: !11001)
!11003 = !DILocation(line: 2721, column: 13, scope: !11001)
!11004 = !DILocation(line: 2722, column: 13, scope: !11001)
!11005 = !DILocation(line: 2726, column: 16, scope: !11006)
!11006 = distinct !DILexicalBlock(scope: !10965, file: !1150, line: 2726, column: 9)
!11007 = !DILocation(line: 2726, column: 14, scope: !11006)
!11008 = !DILocation(line: 2726, column: 21, scope: !11009)
!11009 = !DILexicalBlockFile(scope: !11010, file: !1150, discriminator: 1)
!11010 = distinct !DILexicalBlock(scope: !11006, file: !1150, line: 2726, column: 9)
!11011 = !DILocation(line: 2726, column: 25, scope: !11009)
!11012 = !DILocation(line: 2726, column: 28, scope: !11009)
!11013 = !DILocation(line: 2726, column: 23, scope: !11009)
!11014 = !DILocation(line: 2726, column: 9, scope: !11009)
!11015 = !DILocation(line: 2727, column: 20, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !11010, file: !1150, line: 2726, column: 41)
!11017 = !DILocation(line: 2727, column: 24, scope: !11016)
!11018 = !DILocation(line: 2727, column: 31, scope: !11016)
!11019 = !DILocation(line: 2727, column: 29, scope: !11016)
!11020 = !DILocation(line: 2727, column: 50, scope: !11016)
!11021 = !DILocation(line: 2727, column: 39, scope: !11016)
!11022 = !DILocation(line: 2727, column: 42, scope: !11016)
!11023 = !DILocation(line: 2727, column: 69, scope: !11016)
!11024 = !DILocation(line: 2727, column: 54, scope: !11016)
!11025 = !DILocation(line: 2727, column: 57, scope: !11016)
!11026 = !DILocation(line: 2727, column: 13, scope: !11016)
!11027 = !DILocation(line: 2728, column: 38, scope: !11016)
!11028 = !DILocation(line: 2728, column: 23, scope: !11016)
!11029 = !DILocation(line: 2728, column: 26, scope: !11016)
!11030 = !DILocation(line: 2728, column: 20, scope: !11016)
!11031 = !DILocation(line: 2729, column: 9, scope: !11016)
!11032 = !DILocation(line: 2726, column: 37, scope: !11033)
!11033 = !DILexicalBlockFile(scope: !11010, file: !1150, discriminator: 2)
!11034 = !DILocation(line: 2726, column: 9, scope: !11033)
!11035 = distinct !{!11035, !11036}
!11036 = !DILocation(line: 2726, column: 9, scope: !10965)
!11037 = !DILocation(line: 2730, column: 5, scope: !10965)
!11038 = !DILocation(line: 2732, column: 32, scope: !9075)
!11039 = !DILocation(line: 2732, column: 20, scope: !9075)
!11040 = !DILocation(line: 2732, column: 39, scope: !9075)
!11041 = !DILocation(line: 2732, column: 49, scope: !9075)
!11042 = !DILocation(line: 2732, column: 52, scope: !9075)
!11043 = !DILocation(line: 2732, column: 5, scope: !9075)
!11044 = !DILocation(line: 2733, column: 19, scope: !9075)
!11045 = !DILocation(line: 2733, column: 22, scope: !9075)
!11046 = !DILocation(line: 2733, column: 5, scope: !9075)
!11047 = !DILocation(line: 2736, column: 12, scope: !9075)
!11048 = !DILocation(line: 2737, column: 12, scope: !9075)
!11049 = !DILocation(line: 2737, column: 22, scope: !9075)
!11050 = !DILocation(line: 2737, column: 20, scope: !9075)
!11051 = !DILocation(line: 2736, column: 5, scope: !9075)
!11052 = !DILocation(line: 2739, column: 12, scope: !9075)
!11053 = !DILocation(line: 2739, column: 22, scope: !9075)
!11054 = !DILocation(line: 2739, column: 20, scope: !9075)
!11055 = !DILocation(line: 2739, column: 5, scope: !9075)
!11056 = !DILocation(line: 2740, column: 1, scope: !9075)
!11057 = distinct !DISubprogram(name: "reset_icc_profile", scope: !1150, file: !1150, line: 2249, type: !11058, isLocal: true, isDefinition: true, scopeLine: 2250, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!11058 = !DISubroutineType(types: !11059)
!11059 = !{null, !1815}
!11060 = !DILocalVariable(name: "s", arg: 1, scope: !11057, file: !1150, line: 2249, type: !1815)
!11061 = !DILocation(line: 2249, column: 51, scope: !11057)
!11062 = !DILocalVariable(name: "i", scope: !11057, file: !1150, line: 2251, type: !1025)
!11063 = !DILocation(line: 2251, column: 9, scope: !11057)
!11064 = !DILocation(line: 2253, column: 9, scope: !11065)
!11065 = distinct !DILexicalBlock(scope: !11057, file: !1150, line: 2253, column: 9)
!11066 = !DILocation(line: 2253, column: 12, scope: !11065)
!11067 = !DILocation(line: 2253, column: 9, scope: !11057)
!11068 = !DILocation(line: 2254, column: 16, scope: !11069)
!11069 = distinct !DILexicalBlock(scope: !11065, file: !1150, line: 2254, column: 9)
!11070 = !DILocation(line: 2254, column: 14, scope: !11069)
!11071 = !DILocation(line: 2254, column: 21, scope: !11072)
!11072 = !DILexicalBlockFile(scope: !11073, file: !1150, discriminator: 1)
!11073 = distinct !DILexicalBlock(scope: !11069, file: !1150, line: 2254, column: 9)
!11074 = !DILocation(line: 2254, column: 25, scope: !11072)
!11075 = !DILocation(line: 2254, column: 28, scope: !11072)
!11076 = !DILocation(line: 2254, column: 23, scope: !11072)
!11077 = !DILocation(line: 2254, column: 9, scope: !11072)
!11078 = !DILocation(line: 2255, column: 34, scope: !11073)
!11079 = !DILocation(line: 2255, column: 23, scope: !11073)
!11080 = !DILocation(line: 2255, column: 26, scope: !11073)
!11081 = !DILocation(line: 2255, column: 22, scope: !11073)
!11082 = !DILocation(line: 2255, column: 13, scope: !11073)
!11083 = !DILocation(line: 2254, column: 37, scope: !11084)
!11084 = !DILexicalBlockFile(scope: !11073, file: !1150, discriminator: 2)
!11085 = !DILocation(line: 2254, column: 9, scope: !11084)
!11086 = distinct !{!11086, !11087}
!11087 = !DILocation(line: 2254, column: 9, scope: !11065)
!11088 = !DILocation(line: 2255, column: 36, scope: !11089)
!11089 = !DILexicalBlockFile(scope: !11069, file: !1150, discriminator: 1)
!11090 = !DILocation(line: 2256, column: 15, scope: !11057)
!11091 = !DILocation(line: 2256, column: 18, scope: !11057)
!11092 = !DILocation(line: 2256, column: 14, scope: !11057)
!11093 = !DILocation(line: 2256, column: 5, scope: !11057)
!11094 = !DILocation(line: 2257, column: 15, scope: !11057)
!11095 = !DILocation(line: 2257, column: 18, scope: !11057)
!11096 = !DILocation(line: 2257, column: 14, scope: !11057)
!11097 = !DILocation(line: 2257, column: 5, scope: !11057)
!11098 = !DILocation(line: 2259, column: 5, scope: !11057)
!11099 = !DILocation(line: 2259, column: 8, scope: !11057)
!11100 = !DILocation(line: 2259, column: 16, scope: !11057)
!11101 = !DILocation(line: 2260, column: 5, scope: !11057)
!11102 = !DILocation(line: 2260, column: 8, scope: !11057)
!11103 = !DILocation(line: 2260, column: 15, scope: !11057)
!11104 = !DILocation(line: 2261, column: 1, scope: !11057)
!11105 = distinct !DISubprogram(name: "init_get_bits8", scope: !1825, file: !1825, line: 650, type: !2360, isLocal: true, isDefinition: true, scopeLine: 652, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!11106 = !DILocalVariable(name: "s", arg: 1, scope: !11105, file: !1825, line: 650, type: !2362)
!11107 = !DILocation(line: 650, column: 49, scope: !11105)
!11108 = !DILocalVariable(name: "buffer", arg: 2, scope: !11105, file: !1825, line: 650, type: !1146)
!11109 = !DILocation(line: 650, column: 67, scope: !11105)
!11110 = !DILocalVariable(name: "byte_size", arg: 3, scope: !11105, file: !1825, line: 651, type: !1025)
!11111 = !DILocation(line: 651, column: 38, scope: !11105)
!11112 = !DILocation(line: 653, column: 9, scope: !11113)
!11113 = distinct !DILexicalBlock(scope: !11105, file: !1825, line: 653, column: 9)
!11114 = !DILocation(line: 653, column: 19, scope: !11113)
!11115 = !DILocation(line: 653, column: 36, scope: !11113)
!11116 = !DILocation(line: 653, column: 39, scope: !11117)
!11117 = !DILexicalBlockFile(scope: !11113, file: !1825, discriminator: 1)
!11118 = !DILocation(line: 653, column: 49, scope: !11117)
!11119 = !DILocation(line: 653, column: 9, scope: !11117)
!11120 = !DILocation(line: 654, column: 19, scope: !11113)
!11121 = !DILocation(line: 654, column: 9, scope: !11113)
!11122 = !DILocation(line: 655, column: 26, scope: !11105)
!11123 = !DILocation(line: 655, column: 29, scope: !11105)
!11124 = !DILocation(line: 655, column: 37, scope: !11105)
!11125 = !DILocation(line: 655, column: 47, scope: !11105)
!11126 = !DILocation(line: 655, column: 12, scope: !11105)
!11127 = !DILocation(line: 655, column: 5, scope: !11105)
!11128 = distinct !DISubprogram(name: "mjpeg_decode_app", scope: !1150, file: !1150, line: 1755, type: !1813, isLocal: true, isDefinition: true, scopeLine: 1756, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!11129 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !11130)
!11130 = distinct !DILocation(line: 1971, column: 19, scope: !11131)
!11131 = distinct !DILexicalBlock(scope: !11132, file: !1150, line: 1971, column: 13)
!11132 = distinct !DILexicalBlock(scope: !11133, file: !1150, line: 1967, column: 56)
!11133 = distinct !DILexicalBlock(scope: !11128, file: !1150, line: 1967, column: 9)
!11134 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !11135)
!11135 = distinct !DILocation(line: 1987, column: 40, scope: !11136)
!11136 = !DILexicalBlockFile(scope: !11137, file: !1150, discriminator: 1)
!11137 = distinct !DILexicalBlock(scope: !11128, file: !1150, line: 1987, column: 9)
!11138 = !DILocalVariable(name: "g", arg: 1, scope: !11139, file: !11140, line: 188, type: !11143)
!11139 = distinct !DISubprogram(name: "bytestream2_tell", scope: !11140, file: !11140, line: 188, type: !11141, isLocal: true, isDefinition: true, scopeLine: 189, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!11140 = !DIFile(filename: "libavcodec/bytestream.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!11141 = !DISubroutineType(types: !11142)
!11142 = !{!1025, !11143}
!11143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11144, size: 64, align: 64)
!11144 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetByteContext", file: !11140, line: 35, baseType: !11145)
!11145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetByteContext", file: !11140, line: 33, size: 192, align: 64, elements: !11146)
!11146 = !{!11147, !11148, !11149}
!11147 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !11145, file: !11140, line: 34, baseType: !1146, size: 64, align: 64)
!11148 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !11145, file: !11140, line: 34, baseType: !1146, size: 64, align: 64, offset: 64)
!11149 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !11145, file: !11140, line: 34, baseType: !1146, size: 64, align: 64, offset: 128)
!11150 = !DILocation(line: 188, column: 83, scope: !11139, inlinedAt: !11151)
!11151 = distinct !DILocation(line: 1959, column: 22, scope: !11152)
!11152 = distinct !DILexicalBlock(scope: !11153, file: !1150, line: 1932, column: 110)
!11153 = distinct !DILexicalBlock(scope: !11128, file: !1150, line: 1932, column: 9)
!11154 = !DILocalVariable(name: "a", arg: 1, scope: !11155, file: !11156, line: 127, type: !1025)
!11155 = distinct !DISubprogram(name: "av_clip_c", scope: !11156, file: !11156, line: 127, type: !11157, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!11156 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!11157 = !DISubroutineType(types: !11158)
!11158 = !{!1025, !1025, !1025, !1025}
!11159 = !DILocation(line: 127, column: 87, scope: !11155, inlinedAt: !11160)
!11160 = distinct !DILocation(line: 219, column: 18, scope: !11161, inlinedAt: !11165)
!11161 = distinct !DILexicalBlock(scope: !11162, file: !11140, line: 212, column: 21)
!11162 = distinct !DISubprogram(name: "bytestream2_seek", scope: !11140, file: !11140, line: 208, type: !11163, isLocal: true, isDefinition: true, scopeLine: 211, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!11163 = !DISubroutineType(types: !11164)
!11164 = !{!1025, !11143, !1025, !1025}
!11165 = distinct !DILocation(line: 1949, column: 13, scope: !11166)
!11166 = distinct !DILexicalBlock(scope: !11167, file: !1150, line: 1948, column: 16)
!11167 = distinct !DILexicalBlock(scope: !11152, file: !1150, line: 1946, column: 13)
!11168 = !DILocalVariable(name: "amin", arg: 2, scope: !11155, file: !11156, line: 127, type: !1025)
!11169 = !DILocation(line: 127, column: 94, scope: !11155, inlinedAt: !11160)
!11170 = !DILocalVariable(name: "amax", arg: 3, scope: !11155, file: !11156, line: 127, type: !1025)
!11171 = !DILocation(line: 127, column: 104, scope: !11155, inlinedAt: !11160)
!11172 = !DILocation(line: 127, column: 87, scope: !11155, inlinedAt: !11173)
!11173 = distinct !DILocation(line: 223, column: 18, scope: !11161, inlinedAt: !11165)
!11174 = !DILocation(line: 127, column: 94, scope: !11155, inlinedAt: !11173)
!11175 = !DILocation(line: 127, column: 104, scope: !11155, inlinedAt: !11173)
!11176 = !DILocation(line: 188, column: 83, scope: !11139, inlinedAt: !11177)
!11177 = distinct !DILocation(line: 229, column: 12, scope: !11162, inlinedAt: !11165)
!11178 = !DILocation(line: 127, column: 87, scope: !11155, inlinedAt: !11179)
!11179 = distinct !DILocation(line: 214, column: 18, scope: !11161, inlinedAt: !11165)
!11180 = !DILocation(line: 127, column: 94, scope: !11155, inlinedAt: !11179)
!11181 = !DILocation(line: 127, column: 104, scope: !11155, inlinedAt: !11179)
!11182 = !DILocalVariable(name: "g", arg: 1, scope: !11162, file: !11140, line: 208, type: !11143)
!11183 = !DILocation(line: 208, column: 83, scope: !11162, inlinedAt: !11165)
!11184 = !DILocalVariable(name: "offset", arg: 2, scope: !11162, file: !11140, line: 209, type: !1025)
!11185 = !DILocation(line: 209, column: 50, scope: !11162, inlinedAt: !11165)
!11186 = !DILocalVariable(name: "whence", arg: 3, scope: !11162, file: !11140, line: 210, type: !1025)
!11187 = !DILocation(line: 210, column: 50, scope: !11162, inlinedAt: !11165)
!11188 = !DILocalVariable(name: "g", arg: 1, scope: !11189, file: !11140, line: 133, type: !11143)
!11189 = distinct !DISubprogram(name: "bytestream2_init", scope: !11140, file: !11140, line: 133, type: !11190, isLocal: true, isDefinition: true, scopeLine: 136, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!11190 = !DISubroutineType(types: !11191)
!11191 = !{null, !11143, !1146, !1025}
!11192 = !DILocation(line: 133, column: 84, scope: !11189, inlinedAt: !11193)
!11193 = distinct !DILocation(line: 1942, column: 9, scope: !11152)
!11194 = !DILocalVariable(name: "buf", arg: 2, scope: !11189, file: !11140, line: 134, type: !1146)
!11195 = !DILocation(line: 134, column: 62, scope: !11189, inlinedAt: !11193)
!11196 = !DILocalVariable(name: "buf_size", arg: 3, scope: !11189, file: !11140, line: 135, type: !1025)
!11197 = !DILocation(line: 135, column: 51, scope: !11189, inlinedAt: !11193)
!11198 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !11199)
!11199 = distinct !DILocation(line: 1932, column: 40, scope: !11200)
!11200 = !DILexicalBlockFile(scope: !11153, file: !1150, discriminator: 1)
!11201 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !11202)
!11202 = distinct !DILocation(line: 1995, column: 19, scope: !11203)
!11203 = distinct !DILexicalBlock(scope: !11204, file: !1150, line: 1995, column: 13)
!11204 = distinct !DILexicalBlock(scope: !11137, file: !1150, line: 1987, column: 111)
!11205 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !11206)
!11206 = distinct !DILocation(line: 1893, column: 40, scope: !11207)
!11207 = !DILexicalBlockFile(scope: !11208, file: !1150, discriminator: 1)
!11208 = distinct !DILexicalBlock(scope: !11128, file: !1150, line: 1893, column: 9)
!11209 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !11210)
!11210 = distinct !DILocation(line: 1842, column: 15, scope: !11211)
!11211 = distinct !DILexicalBlock(scope: !11128, file: !1150, line: 1842, column: 9)
!11212 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !11213)
!11213 = distinct !DILocation(line: 1830, column: 42, scope: !11214)
!11214 = !DILexicalBlockFile(scope: !11215, file: !1150, discriminator: 2)
!11215 = !DILexicalBlockFile(scope: !11216, file: !1150, discriminator: 1)
!11216 = distinct !DILexicalBlock(scope: !11128, file: !1150, line: 1827, column: 10)
!11217 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !11218)
!11218 = distinct !DILocation(line: 1827, column: 16, scope: !11216)
!11219 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !11220)
!11220 = distinct !DILocation(line: 1789, column: 15, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11128, file: !1150, line: 1789, column: 9)
!11222 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !11223)
!11223 = distinct !DILocation(line: 1775, column: 15, scope: !11224)
!11224 = distinct !DILexicalBlock(scope: !11128, file: !1150, line: 1775, column: 9)
!11225 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !11226)
!11226 = distinct !DILocation(line: 1770, column: 53, scope: !11227)
!11227 = !DILexicalBlockFile(scope: !11228, file: !1150, discriminator: 1)
!11228 = distinct !DILexicalBlock(scope: !11128, file: !1150, line: 1768, column: 9)
!11229 = !DILocalVariable(name: "s", arg: 1, scope: !11128, file: !1150, line: 1755, type: !1815)
!11230 = !DILocation(line: 1755, column: 49, scope: !11128)
!11231 = !DILocalVariable(name: "len", scope: !11128, file: !1150, line: 1757, type: !1025)
!11232 = !DILocation(line: 1757, column: 9, scope: !11128)
!11233 = !DILocalVariable(name: "id", scope: !11128, file: !1150, line: 1757, type: !1025)
!11234 = !DILocation(line: 1757, column: 14, scope: !11128)
!11235 = !DILocalVariable(name: "i", scope: !11128, file: !1150, line: 1757, type: !1025)
!11236 = !DILocation(line: 1757, column: 18, scope: !11128)
!11237 = !DILocation(line: 1759, column: 21, scope: !11128)
!11238 = !DILocation(line: 1759, column: 24, scope: !11128)
!11239 = !DILocation(line: 1759, column: 11, scope: !11128)
!11240 = !DILocation(line: 1759, column: 9, scope: !11128)
!11241 = !DILocation(line: 1760, column: 9, scope: !11242)
!11242 = distinct !DILexicalBlock(scope: !11128, file: !1150, line: 1760, column: 9)
!11243 = !DILocation(line: 1760, column: 13, scope: !11242)
!11244 = !DILocation(line: 1760, column: 9, scope: !11128)
!11245 = !DILocation(line: 1761, column: 9, scope: !11242)
!11246 = !DILocation(line: 1762, column: 13, scope: !11247)
!11247 = distinct !DILexicalBlock(scope: !11128, file: !1150, line: 1762, column: 9)
!11248 = !DILocation(line: 1762, column: 11, scope: !11247)
!11249 = !DILocation(line: 1762, column: 34, scope: !11247)
!11250 = !DILocation(line: 1762, column: 37, scope: !11247)
!11251 = !DILocation(line: 1762, column: 19, scope: !11247)
!11252 = !DILocation(line: 1762, column: 17, scope: !11247)
!11253 = !DILocation(line: 1762, column: 9, scope: !11128)
!11254 = !DILocation(line: 1763, column: 9, scope: !11247)
!11255 = !DILocation(line: 1765, column: 25, scope: !11128)
!11256 = !DILocation(line: 1765, column: 28, scope: !11128)
!11257 = !DILocation(line: 1765, column: 10, scope: !11128)
!11258 = !DILocation(line: 1765, column: 8, scope: !11128)
!11259 = !DILocation(line: 1766, column: 9, scope: !11128)
!11260 = !DILocation(line: 1768, column: 9, scope: !11228)
!11261 = !DILocation(line: 1768, column: 12, scope: !11228)
!11262 = !DILocation(line: 1768, column: 19, scope: !11228)
!11263 = !DILocation(line: 1768, column: 25, scope: !11228)
!11264 = !DILocation(line: 1768, column: 9, scope: !11128)
!11265 = !DILocation(line: 1769, column: 16, scope: !11228)
!11266 = !DILocation(line: 1769, column: 19, scope: !11228)
!11267 = !DILocation(line: 1770, column: 38, scope: !11228)
!11268 = !DILocation(line: 1770, column: 48, scope: !11228)
!11269 = !DILocation(line: 1770, column: 64, scope: !11228)
!11270 = !DILocation(line: 1770, column: 53, scope: !11227)
!11271 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !11226)
!11272 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !11226)
!11273 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !11226)
!11274 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !11226)
!11275 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !11226)
!11276 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !11226)
!11277 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !11226)
!11278 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !11226)
!11279 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !11226)
!11280 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !11226)
!11281 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !11226)
!11282 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !11226)
!11283 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !11226)
!11284 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !11226)
!11285 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !11226)
!11286 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !11226)
!11287 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !11226)
!11288 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !11226)
!11289 = !DILocation(line: 1770, column: 16, scope: !11290)
!11290 = !DILexicalBlockFile(scope: !11228, file: !1150, discriminator: 2)
!11291 = !DILocation(line: 1770, column: 70, scope: !11228)
!11292 = !DILocation(line: 1770, column: 74, scope: !11228)
!11293 = !DILocation(line: 1769, column: 9, scope: !11228)
!11294 = !DILocation(line: 1775, column: 9, scope: !11224)
!11295 = !DILocation(line: 1775, column: 68, scope: !11224)
!11296 = !DILocation(line: 1775, column: 15, scope: !11224)
!11297 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !11223)
!11298 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !11223)
!11299 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !11223)
!11300 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !11223)
!11301 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !11223)
!11302 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !11223)
!11303 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !11223)
!11304 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !11223)
!11305 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !11223)
!11306 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !11223)
!11307 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !11223)
!11308 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !11223)
!11309 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !11223)
!11310 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !11223)
!11311 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !11223)
!11312 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !11223)
!11313 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !11223)
!11314 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !11223)
!11315 = !DILocation(line: 1775, column: 12, scope: !11224)
!11316 = !DILocation(line: 1775, column: 9, scope: !11128)
!11317 = !DILocation(line: 1783, column: 13, scope: !11318)
!11318 = distinct !DILexicalBlock(scope: !11224, file: !1150, line: 1775, column: 73)
!11319 = !DILocation(line: 1783, column: 16, scope: !11318)
!11320 = !DILocation(line: 1783, column: 27, scope: !11318)
!11321 = !DILocation(line: 1784, column: 23, scope: !11318)
!11322 = !DILocation(line: 1784, column: 26, scope: !11318)
!11323 = !DILocation(line: 1784, column: 13, scope: !11318)
!11324 = !DILocation(line: 1784, column: 11, scope: !11318)
!11325 = !DILocation(line: 1784, column: 37, scope: !11318)
!11326 = !DILocation(line: 1785, column: 16, scope: !11318)
!11327 = !DILocation(line: 1785, column: 19, scope: !11318)
!11328 = !DILocation(line: 1785, column: 47, scope: !11318)
!11329 = !DILocation(line: 1785, column: 9, scope: !11318)
!11330 = !DILocation(line: 1786, column: 9, scope: !11318)
!11331 = !DILocation(line: 1789, column: 9, scope: !11221)
!11332 = !DILocation(line: 1789, column: 68, scope: !11221)
!11333 = !DILocation(line: 1789, column: 15, scope: !11221)
!11334 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !11220)
!11335 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !11220)
!11336 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !11220)
!11337 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !11220)
!11338 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !11220)
!11339 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !11220)
!11340 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !11220)
!11341 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !11220)
!11342 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !11220)
!11343 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !11220)
!11344 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !11220)
!11345 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !11220)
!11346 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !11220)
!11347 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !11220)
!11348 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !11220)
!11349 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !11220)
!11350 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !11220)
!11351 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !11220)
!11352 = !DILocation(line: 1789, column: 12, scope: !11221)
!11353 = !DILocation(line: 1789, column: 9, scope: !11128)
!11354 = !DILocalVariable(name: "t_w", scope: !11355, file: !1150, line: 1790, type: !1025)
!11355 = distinct !DILexicalBlock(scope: !11221, file: !1150, line: 1789, column: 73)
!11356 = !DILocation(line: 1790, column: 13, scope: !11355)
!11357 = !DILocalVariable(name: "t_h", scope: !11355, file: !1150, line: 1790, type: !1025)
!11358 = !DILocation(line: 1790, column: 18, scope: !11355)
!11359 = !DILocalVariable(name: "v1", scope: !11355, file: !1150, line: 1790, type: !1025)
!11360 = !DILocation(line: 1790, column: 23, scope: !11355)
!11361 = !DILocalVariable(name: "v2", scope: !11355, file: !1150, line: 1790, type: !1025)
!11362 = !DILocation(line: 1790, column: 27, scope: !11355)
!11363 = !DILocation(line: 1791, column: 13, scope: !11364)
!11364 = distinct !DILexicalBlock(scope: !11355, file: !1150, line: 1791, column: 13)
!11365 = !DILocation(line: 1791, column: 17, scope: !11364)
!11366 = !DILocation(line: 1791, column: 13, scope: !11355)
!11367 = !DILocation(line: 1792, column: 13, scope: !11364)
!11368 = !DILocation(line: 1793, column: 20, scope: !11355)
!11369 = !DILocation(line: 1793, column: 23, scope: !11355)
!11370 = !DILocation(line: 1793, column: 9, scope: !11355)
!11371 = !DILocation(line: 1794, column: 24, scope: !11355)
!11372 = !DILocation(line: 1794, column: 27, scope: !11355)
!11373 = !DILocation(line: 1794, column: 14, scope: !11355)
!11374 = !DILocation(line: 1794, column: 12, scope: !11355)
!11375 = !DILocation(line: 1795, column: 24, scope: !11355)
!11376 = !DILocation(line: 1795, column: 27, scope: !11355)
!11377 = !DILocation(line: 1795, column: 14, scope: !11355)
!11378 = !DILocation(line: 1795, column: 12, scope: !11355)
!11379 = !DILocation(line: 1796, column: 20, scope: !11355)
!11380 = !DILocation(line: 1796, column: 23, scope: !11355)
!11381 = !DILocation(line: 1796, column: 9, scope: !11355)
!11382 = !DILocation(line: 1798, column: 55, scope: !11355)
!11383 = !DILocation(line: 1798, column: 58, scope: !11355)
!11384 = !DILocation(line: 1798, column: 45, scope: !11355)
!11385 = !DILocation(line: 1798, column: 9, scope: !11355)
!11386 = !DILocation(line: 1798, column: 12, scope: !11355)
!11387 = !DILocation(line: 1798, column: 19, scope: !11355)
!11388 = !DILocation(line: 1798, column: 39, scope: !11355)
!11389 = !DILocation(line: 1798, column: 43, scope: !11355)
!11390 = !DILocation(line: 1799, column: 55, scope: !11355)
!11391 = !DILocation(line: 1799, column: 58, scope: !11355)
!11392 = !DILocation(line: 1799, column: 45, scope: !11355)
!11393 = !DILocation(line: 1799, column: 9, scope: !11355)
!11394 = !DILocation(line: 1799, column: 12, scope: !11355)
!11395 = !DILocation(line: 1799, column: 19, scope: !11355)
!11396 = !DILocation(line: 1799, column: 39, scope: !11355)
!11397 = !DILocation(line: 1799, column: 43, scope: !11355)
!11398 = !DILocation(line: 1800, column: 14, scope: !11399)
!11399 = distinct !DILexicalBlock(scope: !11355, file: !1150, line: 1800, column: 14)
!11400 = !DILocation(line: 1800, column: 17, scope: !11399)
!11401 = !DILocation(line: 1800, column: 24, scope: !11399)
!11402 = !DILocation(line: 1800, column: 44, scope: !11399)
!11403 = !DILocation(line: 1800, column: 48, scope: !11399)
!11404 = !DILocation(line: 1801, column: 13, scope: !11399)
!11405 = !DILocation(line: 1801, column: 16, scope: !11406)
!11406 = !DILexicalBlockFile(scope: !11399, file: !1150, discriminator: 1)
!11407 = !DILocation(line: 1801, column: 19, scope: !11406)
!11408 = !DILocation(line: 1801, column: 26, scope: !11406)
!11409 = !DILocation(line: 1801, column: 46, scope: !11406)
!11410 = !DILocation(line: 1801, column: 50, scope: !11406)
!11411 = !DILocation(line: 1800, column: 14, scope: !11412)
!11412 = !DILexicalBlockFile(scope: !11355, file: !1150, discriminator: 1)
!11413 = !DILocation(line: 1802, column: 13, scope: !11414)
!11414 = distinct !DILexicalBlock(scope: !11399, file: !1150, line: 1801, column: 56)
!11415 = !DILocation(line: 1802, column: 16, scope: !11414)
!11416 = !DILocation(line: 1802, column: 23, scope: !11414)
!11417 = !DILocation(line: 1802, column: 43, scope: !11414)
!11418 = !DILocation(line: 1802, column: 47, scope: !11414)
!11419 = !DILocation(line: 1803, column: 13, scope: !11414)
!11420 = !DILocation(line: 1803, column: 16, scope: !11414)
!11421 = !DILocation(line: 1803, column: 23, scope: !11414)
!11422 = !DILocation(line: 1803, column: 43, scope: !11414)
!11423 = !DILocation(line: 1803, column: 47, scope: !11414)
!11424 = !DILocation(line: 1804, column: 9, scope: !11414)
!11425 = !DILocation(line: 1806, column: 13, scope: !11426)
!11426 = distinct !DILexicalBlock(scope: !11355, file: !1150, line: 1806, column: 13)
!11427 = !DILocation(line: 1806, column: 16, scope: !11426)
!11428 = !DILocation(line: 1806, column: 23, scope: !11426)
!11429 = !DILocation(line: 1806, column: 29, scope: !11426)
!11430 = !DILocation(line: 1806, column: 13, scope: !11355)
!11431 = !DILocation(line: 1807, column: 20, scope: !11426)
!11432 = !DILocation(line: 1807, column: 23, scope: !11426)
!11433 = !DILocation(line: 1809, column: 20, scope: !11426)
!11434 = !DILocation(line: 1809, column: 24, scope: !11426)
!11435 = !DILocation(line: 1810, column: 20, scope: !11426)
!11436 = !DILocation(line: 1810, column: 23, scope: !11426)
!11437 = !DILocation(line: 1810, column: 30, scope: !11426)
!11438 = !DILocation(line: 1810, column: 50, scope: !11426)
!11439 = !DILocation(line: 1811, column: 20, scope: !11426)
!11440 = !DILocation(line: 1811, column: 23, scope: !11426)
!11441 = !DILocation(line: 1811, column: 30, scope: !11426)
!11442 = !DILocation(line: 1811, column: 50, scope: !11426)
!11443 = !DILocation(line: 1807, column: 13, scope: !11426)
!11444 = !DILocation(line: 1813, column: 13, scope: !11355)
!11445 = !DILocation(line: 1814, column: 13, scope: !11446)
!11446 = distinct !DILexicalBlock(scope: !11355, file: !1150, line: 1814, column: 13)
!11447 = !DILocation(line: 1814, column: 17, scope: !11446)
!11448 = !DILocation(line: 1814, column: 13, scope: !11355)
!11449 = !DILocation(line: 1815, column: 29, scope: !11450)
!11450 = distinct !DILexicalBlock(scope: !11446, file: !1150, line: 1814, column: 23)
!11451 = !DILocation(line: 1815, column: 32, scope: !11450)
!11452 = !DILocation(line: 1815, column: 19, scope: !11450)
!11453 = !DILocation(line: 1815, column: 17, scope: !11450)
!11454 = !DILocation(line: 1816, column: 29, scope: !11450)
!11455 = !DILocation(line: 1816, column: 32, scope: !11450)
!11456 = !DILocation(line: 1816, column: 19, scope: !11450)
!11457 = !DILocation(line: 1816, column: 17, scope: !11450)
!11458 = !DILocation(line: 1817, column: 17, scope: !11459)
!11459 = distinct !DILexicalBlock(scope: !11450, file: !1150, line: 1817, column: 17)
!11460 = !DILocation(line: 1817, column: 21, scope: !11459)
!11461 = !DILocation(line: 1817, column: 24, scope: !11462)
!11462 = !DILexicalBlockFile(scope: !11459, file: !1150, discriminator: 1)
!11463 = !DILocation(line: 1817, column: 17, scope: !11462)
!11464 = !DILocation(line: 1819, column: 21, scope: !11465)
!11465 = distinct !DILexicalBlock(scope: !11466, file: !1150, line: 1819, column: 21)
!11466 = distinct !DILexicalBlock(scope: !11459, file: !1150, line: 1817, column: 29)
!11467 = !DILocation(line: 1819, column: 25, scope: !11465)
!11468 = !DILocation(line: 1819, column: 32, scope: !11465)
!11469 = !DILocation(line: 1819, column: 38, scope: !11465)
!11470 = !DILocation(line: 1819, column: 36, scope: !11465)
!11471 = !DILocation(line: 1819, column: 42, scope: !11465)
!11472 = !DILocation(line: 1819, column: 29, scope: !11465)
!11473 = !DILocation(line: 1819, column: 47, scope: !11465)
!11474 = !DILocation(line: 1819, column: 21, scope: !11466)
!11475 = !DILocation(line: 1820, column: 28, scope: !11465)
!11476 = !DILocation(line: 1820, column: 34, scope: !11465)
!11477 = !DILocation(line: 1820, column: 32, scope: !11465)
!11478 = !DILocation(line: 1820, column: 38, scope: !11465)
!11479 = !DILocation(line: 1820, column: 25, scope: !11465)
!11480 = !DILocation(line: 1820, column: 21, scope: !11465)
!11481 = !DILocation(line: 1821, column: 13, scope: !11466)
!11482 = !DILocation(line: 1822, column: 17, scope: !11450)
!11483 = !DILocation(line: 1823, column: 9, scope: !11450)
!11484 = !DILocation(line: 1824, column: 9, scope: !11355)
!11485 = !DILocation(line: 1827, column: 10, scope: !11216)
!11486 = !DILocation(line: 1827, column: 69, scope: !11216)
!11487 = !DILocation(line: 1827, column: 16, scope: !11216)
!11488 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !11218)
!11489 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !11218)
!11490 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !11218)
!11491 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !11218)
!11492 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !11218)
!11493 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !11218)
!11494 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !11218)
!11495 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !11218)
!11496 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !11218)
!11497 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !11218)
!11498 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !11218)
!11499 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !11218)
!11500 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !11218)
!11501 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !11218)
!11502 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !11218)
!11503 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !11218)
!11504 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !11218)
!11505 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !11218)
!11506 = !DILocation(line: 1827, column: 13, scope: !11216)
!11507 = !DILocation(line: 1828, column: 9, scope: !11216)
!11508 = !DILocation(line: 1828, column: 12, scope: !11215)
!11509 = !DILocation(line: 1828, column: 16, scope: !11215)
!11510 = !DILocation(line: 1829, column: 9, scope: !11216)
!11511 = !DILocation(line: 1829, column: 23, scope: !11215)
!11512 = !DILocation(line: 1829, column: 26, scope: !11215)
!11513 = !DILocation(line: 1829, column: 12, scope: !11215)
!11514 = !DILocation(line: 1829, column: 33, scope: !11215)
!11515 = !DILocation(line: 1830, column: 9, scope: !11216)
!11516 = !DILocation(line: 1830, column: 28, scope: !11215)
!11517 = !DILocation(line: 1830, column: 31, scope: !11215)
!11518 = !DILocation(line: 1830, column: 12, scope: !11215)
!11519 = !DILocation(line: 1830, column: 95, scope: !11215)
!11520 = !DILocation(line: 1830, column: 42, scope: !11214)
!11521 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !11213)
!11522 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !11213)
!11523 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !11213)
!11524 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !11213)
!11525 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !11213)
!11526 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !11213)
!11527 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !11213)
!11528 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !11213)
!11529 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !11213)
!11530 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !11213)
!11531 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !11213)
!11532 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !11213)
!11533 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !11213)
!11534 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !11213)
!11535 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !11213)
!11536 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !11213)
!11537 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !11213)
!11538 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !11213)
!11539 = !DILocation(line: 1830, column: 39, scope: !11215)
!11540 = !DILocation(line: 1827, column: 10, scope: !11541)
!11541 = !DILexicalBlockFile(scope: !11128, file: !1150, discriminator: 1)
!11542 = !DILocation(line: 1831, column: 20, scope: !11543)
!11543 = distinct !DILexicalBlock(scope: !11216, file: !1150, line: 1830, column: 100)
!11544 = !DILocation(line: 1831, column: 23, scope: !11543)
!11545 = !DILocation(line: 1831, column: 9, scope: !11543)
!11546 = !DILocation(line: 1832, column: 20, scope: !11543)
!11547 = !DILocation(line: 1832, column: 23, scope: !11543)
!11548 = !DILocation(line: 1832, column: 9, scope: !11543)
!11549 = !DILocation(line: 1833, column: 20, scope: !11543)
!11550 = !DILocation(line: 1833, column: 23, scope: !11543)
!11551 = !DILocation(line: 1833, column: 9, scope: !11543)
!11552 = !DILocation(line: 1834, column: 20, scope: !11543)
!11553 = !DILocation(line: 1834, column: 23, scope: !11543)
!11554 = !DILocation(line: 1834, column: 9, scope: !11543)
!11555 = !DILocation(line: 1835, column: 40, scope: !11543)
!11556 = !DILocation(line: 1835, column: 43, scope: !11543)
!11557 = !DILocation(line: 1835, column: 30, scope: !11543)
!11558 = !DILocation(line: 1835, column: 9, scope: !11543)
!11559 = !DILocation(line: 1835, column: 12, scope: !11543)
!11560 = !DILocation(line: 1835, column: 28, scope: !11543)
!11561 = !DILocation(line: 1836, column: 13, scope: !11562)
!11562 = distinct !DILexicalBlock(scope: !11543, file: !1150, line: 1836, column: 13)
!11563 = !DILocation(line: 1836, column: 16, scope: !11562)
!11564 = !DILocation(line: 1836, column: 23, scope: !11562)
!11565 = !DILocation(line: 1836, column: 29, scope: !11562)
!11566 = !DILocation(line: 1836, column: 13, scope: !11543)
!11567 = !DILocation(line: 1837, column: 20, scope: !11562)
!11568 = !DILocation(line: 1837, column: 23, scope: !11562)
!11569 = !DILocation(line: 1837, column: 79, scope: !11562)
!11570 = !DILocation(line: 1837, column: 82, scope: !11562)
!11571 = !DILocation(line: 1837, column: 13, scope: !11562)
!11572 = !DILocation(line: 1838, column: 13, scope: !11543)
!11573 = !DILocation(line: 1839, column: 9, scope: !11543)
!11574 = !DILocation(line: 1842, column: 9, scope: !11211)
!11575 = !DILocation(line: 1842, column: 68, scope: !11211)
!11576 = !DILocation(line: 1842, column: 15, scope: !11211)
!11577 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !11210)
!11578 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !11210)
!11579 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !11210)
!11580 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !11210)
!11581 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !11210)
!11582 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !11210)
!11583 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !11210)
!11584 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !11210)
!11585 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !11210)
!11586 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !11210)
!11587 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !11210)
!11588 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !11210)
!11589 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !11210)
!11590 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !11210)
!11591 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !11210)
!11592 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !11210)
!11593 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !11210)
!11594 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !11210)
!11595 = !DILocation(line: 1842, column: 12, scope: !11211)
!11596 = !DILocation(line: 1842, column: 9, scope: !11128)
!11597 = !DILocalVariable(name: "rgb", scope: !11598, file: !1150, line: 1843, type: !1025)
!11598 = distinct !DILexicalBlock(scope: !11211, file: !1150, line: 1842, column: 73)
!11599 = !DILocation(line: 1843, column: 13, scope: !11598)
!11600 = !DILocation(line: 1843, column: 19, scope: !11598)
!11601 = !DILocation(line: 1843, column: 22, scope: !11598)
!11602 = !DILocalVariable(name: "pegasus_rct", scope: !11598, file: !1150, line: 1844, type: !1025)
!11603 = !DILocation(line: 1844, column: 13, scope: !11598)
!11604 = !DILocation(line: 1844, column: 27, scope: !11598)
!11605 = !DILocation(line: 1844, column: 30, scope: !11598)
!11606 = !DILocation(line: 1845, column: 13, scope: !11607)
!11607 = distinct !DILexicalBlock(scope: !11598, file: !1150, line: 1845, column: 13)
!11608 = !DILocation(line: 1845, column: 16, scope: !11607)
!11609 = !DILocation(line: 1845, column: 23, scope: !11607)
!11610 = !DILocation(line: 1845, column: 29, scope: !11607)
!11611 = !DILocation(line: 1845, column: 13, scope: !11598)
!11612 = !DILocation(line: 1846, column: 20, scope: !11607)
!11613 = !DILocation(line: 1846, column: 23, scope: !11607)
!11614 = !DILocation(line: 1846, column: 13, scope: !11607)
!11615 = !DILocation(line: 1848, column: 20, scope: !11598)
!11616 = !DILocation(line: 1848, column: 23, scope: !11598)
!11617 = !DILocation(line: 1848, column: 9, scope: !11598)
!11618 = !DILocation(line: 1849, column: 20, scope: !11598)
!11619 = !DILocation(line: 1849, column: 23, scope: !11598)
!11620 = !DILocation(line: 1849, column: 9, scope: !11598)
!11621 = !DILocation(line: 1850, column: 20, scope: !11598)
!11622 = !DILocation(line: 1850, column: 23, scope: !11598)
!11623 = !DILocation(line: 1850, column: 9, scope: !11598)
!11624 = !DILocation(line: 1851, column: 20, scope: !11598)
!11625 = !DILocation(line: 1851, column: 23, scope: !11598)
!11626 = !DILocation(line: 1851, column: 9, scope: !11598)
!11627 = !DILocation(line: 1852, column: 29, scope: !11598)
!11628 = !DILocation(line: 1852, column: 32, scope: !11598)
!11629 = !DILocation(line: 1852, column: 19, scope: !11598)
!11630 = !DILocation(line: 1852, column: 18, scope: !11598)
!11631 = !DILocation(line: 1852, column: 9, scope: !11598)
!11632 = !DILocation(line: 1854, column: 17, scope: !11633)
!11633 = distinct !DILexicalBlock(scope: !11598, file: !1150, line: 1852, column: 40)
!11634 = !DILocation(line: 1855, column: 25, scope: !11633)
!11635 = !DILocation(line: 1856, column: 13, scope: !11633)
!11636 = !DILocation(line: 1858, column: 17, scope: !11633)
!11637 = !DILocation(line: 1859, column: 25, scope: !11633)
!11638 = !DILocation(line: 1860, column: 13, scope: !11633)
!11639 = !DILocation(line: 1862, column: 20, scope: !11633)
!11640 = !DILocation(line: 1862, column: 23, scope: !11633)
!11641 = !DILocation(line: 1862, column: 61, scope: !11633)
!11642 = !DILocation(line: 1862, column: 13, scope: !11633)
!11643 = !DILocation(line: 1863, column: 9, scope: !11633)
!11644 = !DILocation(line: 1865, column: 13, scope: !11598)
!11645 = !DILocation(line: 1866, column: 13, scope: !11646)
!11646 = distinct !DILexicalBlock(scope: !11598, file: !1150, line: 1866, column: 13)
!11647 = !DILocation(line: 1866, column: 16, scope: !11646)
!11648 = !DILocation(line: 1866, column: 13, scope: !11598)
!11649 = !DILocation(line: 1867, column: 17, scope: !11650)
!11650 = distinct !DILexicalBlock(scope: !11646, file: !1150, line: 1867, column: 17)
!11651 = !DILocation(line: 1867, column: 24, scope: !11650)
!11652 = !DILocation(line: 1867, column: 27, scope: !11650)
!11653 = !DILocation(line: 1867, column: 21, scope: !11650)
!11654 = !DILocation(line: 1867, column: 31, scope: !11650)
!11655 = !DILocation(line: 1867, column: 34, scope: !11656)
!11656 = !DILexicalBlockFile(scope: !11650, file: !1150, discriminator: 1)
!11657 = !DILocation(line: 1867, column: 49, scope: !11656)
!11658 = !DILocation(line: 1867, column: 52, scope: !11656)
!11659 = !DILocation(line: 1867, column: 46, scope: !11656)
!11660 = !DILocation(line: 1867, column: 17, scope: !11656)
!11661 = !DILocation(line: 1868, column: 24, scope: !11662)
!11662 = distinct !DILexicalBlock(scope: !11650, file: !1150, line: 1867, column: 65)
!11663 = !DILocation(line: 1868, column: 27, scope: !11662)
!11664 = !DILocation(line: 1868, column: 17, scope: !11662)
!11665 = !DILocation(line: 1869, column: 17, scope: !11662)
!11666 = !DILocation(line: 1867, column: 52, scope: !11667)
!11667 = !DILexicalBlockFile(scope: !11650, file: !1150, discriminator: 2)
!11668 = !DILocation(line: 1872, column: 18, scope: !11598)
!11669 = !DILocation(line: 1872, column: 9, scope: !11598)
!11670 = !DILocation(line: 1872, column: 12, scope: !11598)
!11671 = !DILocation(line: 1872, column: 16, scope: !11598)
!11672 = !DILocation(line: 1873, column: 26, scope: !11598)
!11673 = !DILocation(line: 1873, column: 9, scope: !11598)
!11674 = !DILocation(line: 1873, column: 12, scope: !11598)
!11675 = !DILocation(line: 1873, column: 24, scope: !11598)
!11676 = !DILocation(line: 1875, column: 9, scope: !11598)
!11677 = !DILocation(line: 1877, column: 9, scope: !11678)
!11678 = distinct !DILexicalBlock(scope: !11128, file: !1150, line: 1877, column: 9)
!11679 = !DILocation(line: 1877, column: 57, scope: !11678)
!11680 = !DILocation(line: 1877, column: 12, scope: !11678)
!11681 = !DILocation(line: 1877, column: 60, scope: !11678)
!11682 = !DILocation(line: 1877, column: 63, scope: !11683)
!11683 = !DILexicalBlockFile(scope: !11678, file: !1150, discriminator: 1)
!11684 = !DILocation(line: 1877, column: 67, scope: !11683)
!11685 = !DILocation(line: 1877, column: 9, scope: !11683)
!11686 = !DILocation(line: 1878, column: 29, scope: !11687)
!11687 = distinct !DILexicalBlock(scope: !11678, file: !1150, line: 1877, column: 72)
!11688 = !DILocation(line: 1878, column: 32, scope: !11687)
!11689 = !DILocation(line: 1878, column: 19, scope: !11687)
!11690 = !DILocation(line: 1878, column: 9, scope: !11687)
!11691 = !DILocation(line: 1878, column: 12, scope: !11687)
!11692 = !DILocation(line: 1878, column: 17, scope: !11687)
!11693 = !DILocation(line: 1879, column: 13, scope: !11694)
!11694 = distinct !DILexicalBlock(scope: !11687, file: !1150, line: 1879, column: 13)
!11695 = !DILocation(line: 1879, column: 16, scope: !11694)
!11696 = !DILocation(line: 1879, column: 23, scope: !11694)
!11697 = !DILocation(line: 1879, column: 29, scope: !11694)
!11698 = !DILocation(line: 1879, column: 13, scope: !11687)
!11699 = !DILocation(line: 1880, column: 20, scope: !11694)
!11700 = !DILocation(line: 1880, column: 23, scope: !11694)
!11701 = !DILocation(line: 1880, column: 47, scope: !11694)
!11702 = !DILocation(line: 1880, column: 50, scope: !11694)
!11703 = !DILocation(line: 1880, column: 13, scope: !11694)
!11704 = !DILocation(line: 1881, column: 13, scope: !11687)
!11705 = !DILocation(line: 1882, column: 9, scope: !11687)
!11706 = !DILocation(line: 1884, column: 9, scope: !11707)
!11707 = distinct !DILexicalBlock(scope: !11128, file: !1150, line: 1884, column: 9)
!11708 = !DILocation(line: 1884, column: 57, scope: !11707)
!11709 = !DILocation(line: 1884, column: 12, scope: !11707)
!11710 = !DILocation(line: 1884, column: 60, scope: !11707)
!11711 = !DILocation(line: 1884, column: 63, scope: !11712)
!11712 = !DILexicalBlockFile(scope: !11707, file: !1150, discriminator: 1)
!11713 = !DILocation(line: 1884, column: 67, scope: !11712)
!11714 = !DILocation(line: 1884, column: 9, scope: !11712)
!11715 = !DILocation(line: 1885, column: 29, scope: !11716)
!11716 = distinct !DILexicalBlock(scope: !11707, file: !1150, line: 1884, column: 72)
!11717 = !DILocation(line: 1885, column: 32, scope: !11716)
!11718 = !DILocation(line: 1885, column: 19, scope: !11716)
!11719 = !DILocation(line: 1885, column: 9, scope: !11716)
!11720 = !DILocation(line: 1885, column: 12, scope: !11716)
!11721 = !DILocation(line: 1885, column: 17, scope: !11716)
!11722 = !DILocation(line: 1886, column: 13, scope: !11723)
!11723 = distinct !DILexicalBlock(scope: !11716, file: !1150, line: 1886, column: 13)
!11724 = !DILocation(line: 1886, column: 16, scope: !11723)
!11725 = !DILocation(line: 1886, column: 23, scope: !11723)
!11726 = !DILocation(line: 1886, column: 29, scope: !11723)
!11727 = !DILocation(line: 1886, column: 13, scope: !11716)
!11728 = !DILocation(line: 1887, column: 20, scope: !11723)
!11729 = !DILocation(line: 1887, column: 23, scope: !11723)
!11730 = !DILocation(line: 1887, column: 47, scope: !11723)
!11731 = !DILocation(line: 1887, column: 50, scope: !11723)
!11732 = !DILocation(line: 1887, column: 13, scope: !11723)
!11733 = !DILocation(line: 1888, column: 13, scope: !11716)
!11734 = !DILocation(line: 1889, column: 9, scope: !11716)
!11735 = !DILocation(line: 1893, column: 9, scope: !11208)
!11736 = !DILocation(line: 1893, column: 12, scope: !11208)
!11737 = !DILocation(line: 1893, column: 23, scope: !11208)
!11738 = !DILocation(line: 1893, column: 31, scope: !11208)
!11739 = !DILocation(line: 1893, column: 34, scope: !11207)
!11740 = !DILocation(line: 1893, column: 93, scope: !11207)
!11741 = !DILocation(line: 1893, column: 40, scope: !11207)
!11742 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !11206)
!11743 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !11206)
!11744 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !11206)
!11745 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !11206)
!11746 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !11206)
!11747 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !11206)
!11748 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !11206)
!11749 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !11206)
!11750 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !11206)
!11751 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !11206)
!11752 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !11206)
!11753 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !11206)
!11754 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !11206)
!11755 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !11206)
!11756 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !11206)
!11757 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !11206)
!11758 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !11206)
!11759 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !11206)
!11760 = !DILocation(line: 1893, column: 37, scope: !11207)
!11761 = !DILocation(line: 1893, column: 97, scope: !11207)
!11762 = !DILocation(line: 1893, column: 100, scope: !11763)
!11763 = !DILexicalBlockFile(scope: !11208, file: !1150, discriminator: 2)
!11764 = !DILocation(line: 1893, column: 104, scope: !11763)
!11765 = !DILocation(line: 1893, column: 9, scope: !11763)
!11766 = !DILocalVariable(name: "flags", scope: !11767, file: !1150, line: 1894, type: !1025)
!11767 = distinct !DILexicalBlock(scope: !11208, file: !1150, line: 1893, column: 111)
!11768 = !DILocation(line: 1894, column: 13, scope: !11767)
!11769 = !DILocalVariable(name: "layout", scope: !11767, file: !1150, line: 1894, type: !1025)
!11770 = !DILocation(line: 1894, column: 20, scope: !11767)
!11771 = !DILocalVariable(name: "type", scope: !11767, file: !1150, line: 1894, type: !1025)
!11772 = !DILocation(line: 1894, column: 28, scope: !11767)
!11773 = !DILocation(line: 1895, column: 13, scope: !11774)
!11774 = distinct !DILexicalBlock(scope: !11767, file: !1150, line: 1895, column: 13)
!11775 = !DILocation(line: 1895, column: 16, scope: !11774)
!11776 = !DILocation(line: 1895, column: 23, scope: !11774)
!11777 = !DILocation(line: 1895, column: 29, scope: !11774)
!11778 = !DILocation(line: 1895, column: 13, scope: !11767)
!11779 = !DILocation(line: 1896, column: 20, scope: !11774)
!11780 = !DILocation(line: 1896, column: 23, scope: !11774)
!11781 = !DILocation(line: 1896, column: 13, scope: !11774)
!11782 = !DILocation(line: 1898, column: 20, scope: !11767)
!11783 = !DILocation(line: 1898, column: 23, scope: !11767)
!11784 = !DILocation(line: 1898, column: 9, scope: !11767)
!11785 = !DILocation(line: 1898, column: 36, scope: !11767)
!11786 = !DILocation(line: 1899, column: 20, scope: !11767)
!11787 = !DILocation(line: 1899, column: 23, scope: !11767)
!11788 = !DILocation(line: 1899, column: 9, scope: !11767)
!11789 = !DILocation(line: 1899, column: 36, scope: !11767)
!11790 = !DILocation(line: 1900, column: 20, scope: !11767)
!11791 = !DILocation(line: 1900, column: 23, scope: !11767)
!11792 = !DILocation(line: 1900, column: 9, scope: !11767)
!11793 = !DILocation(line: 1901, column: 27, scope: !11767)
!11794 = !DILocation(line: 1901, column: 30, scope: !11767)
!11795 = !DILocation(line: 1901, column: 17, scope: !11767)
!11796 = !DILocation(line: 1901, column: 15, scope: !11767)
!11797 = !DILocation(line: 1902, column: 28, scope: !11767)
!11798 = !DILocation(line: 1902, column: 31, scope: !11767)
!11799 = !DILocation(line: 1902, column: 18, scope: !11767)
!11800 = !DILocation(line: 1902, column: 16, scope: !11767)
!11801 = !DILocation(line: 1903, column: 26, scope: !11767)
!11802 = !DILocation(line: 1903, column: 29, scope: !11767)
!11803 = !DILocation(line: 1903, column: 16, scope: !11767)
!11804 = !DILocation(line: 1903, column: 14, scope: !11767)
!11805 = !DILocation(line: 1904, column: 13, scope: !11767)
!11806 = !DILocation(line: 1906, column: 23, scope: !11767)
!11807 = !DILocation(line: 1906, column: 9, scope: !11767)
!11808 = !DILocation(line: 1906, column: 12, scope: !11767)
!11809 = !DILocation(line: 1906, column: 21, scope: !11767)
!11810 = !DILocation(line: 1907, column: 14, scope: !11811)
!11811 = distinct !DILexicalBlock(scope: !11767, file: !1150, line: 1907, column: 13)
!11812 = !DILocation(line: 1907, column: 17, scope: !11811)
!11813 = !DILocation(line: 1907, column: 13, scope: !11767)
!11814 = !DILocation(line: 1908, column: 13, scope: !11815)
!11815 = distinct !DILexicalBlock(scope: !11811, file: !1150, line: 1907, column: 27)
!11816 = !DILocation(line: 1910, column: 13, scope: !11817)
!11817 = distinct !DILexicalBlock(scope: !11767, file: !1150, line: 1910, column: 13)
!11818 = !DILocation(line: 1910, column: 18, scope: !11817)
!11819 = !DILocation(line: 1910, column: 13, scope: !11767)
!11820 = !DILocation(line: 1911, column: 13, scope: !11821)
!11821 = distinct !DILexicalBlock(scope: !11817, file: !1150, line: 1910, column: 24)
!11822 = !DILocation(line: 1911, column: 16, scope: !11821)
!11823 = !DILocation(line: 1911, column: 26, scope: !11821)
!11824 = !DILocation(line: 1911, column: 31, scope: !11821)
!11825 = !DILocation(line: 1912, column: 9, scope: !11821)
!11826 = !DILocation(line: 1912, column: 20, scope: !11827)
!11827 = !DILexicalBlockFile(scope: !11828, file: !1150, discriminator: 1)
!11828 = distinct !DILexicalBlock(scope: !11817, file: !1150, line: 1912, column: 20)
!11829 = !DILocation(line: 1912, column: 25, scope: !11827)
!11830 = !DILocation(line: 1913, column: 21, scope: !11831)
!11831 = distinct !DILexicalBlock(scope: !11828, file: !1150, line: 1912, column: 31)
!11832 = !DILocation(line: 1913, column: 13, scope: !11831)
!11833 = !DILocation(line: 1915, column: 17, scope: !11834)
!11834 = distinct !DILexicalBlock(scope: !11831, file: !1150, line: 1913, column: 29)
!11835 = !DILocation(line: 1915, column: 20, scope: !11834)
!11836 = !DILocation(line: 1915, column: 30, scope: !11834)
!11837 = !DILocation(line: 1915, column: 35, scope: !11834)
!11838 = !DILocation(line: 1916, column: 17, scope: !11834)
!11839 = !DILocation(line: 1918, column: 17, scope: !11834)
!11840 = !DILocation(line: 1918, column: 20, scope: !11834)
!11841 = !DILocation(line: 1918, column: 30, scope: !11834)
!11842 = !DILocation(line: 1918, column: 35, scope: !11834)
!11843 = !DILocation(line: 1919, column: 17, scope: !11834)
!11844 = !DILocation(line: 1921, column: 17, scope: !11834)
!11845 = !DILocation(line: 1921, column: 20, scope: !11834)
!11846 = !DILocation(line: 1921, column: 30, scope: !11834)
!11847 = !DILocation(line: 1921, column: 35, scope: !11834)
!11848 = !DILocation(line: 1922, column: 17, scope: !11834)
!11849 = !DILocation(line: 1924, column: 19, scope: !11850)
!11850 = distinct !DILexicalBlock(scope: !11831, file: !1150, line: 1924, column: 17)
!11851 = !DILocation(line: 1924, column: 25, scope: !11850)
!11852 = !DILocation(line: 1924, column: 17, scope: !11831)
!11853 = !DILocation(line: 1925, column: 17, scope: !11854)
!11854 = distinct !DILexicalBlock(scope: !11850, file: !1150, line: 1924, column: 34)
!11855 = !DILocation(line: 1925, column: 20, scope: !11854)
!11856 = !DILocation(line: 1925, column: 30, scope: !11854)
!11857 = !DILocation(line: 1925, column: 36, scope: !11854)
!11858 = !DILocation(line: 1926, column: 13, scope: !11854)
!11859 = !DILocation(line: 1927, column: 9, scope: !11831)
!11860 = !DILocation(line: 1928, column: 9, scope: !11767)
!11861 = !DILocation(line: 1932, column: 9, scope: !11153)
!11862 = !DILocation(line: 1932, column: 12, scope: !11153)
!11863 = !DILocation(line: 1932, column: 23, scope: !11153)
!11864 = !DILocation(line: 1932, column: 31, scope: !11153)
!11865 = !DILocation(line: 1932, column: 34, scope: !11200)
!11866 = !DILocation(line: 1932, column: 93, scope: !11200)
!11867 = !DILocation(line: 1932, column: 40, scope: !11200)
!11868 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !11199)
!11869 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !11199)
!11870 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !11199)
!11871 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !11199)
!11872 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !11199)
!11873 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !11199)
!11874 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !11199)
!11875 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !11199)
!11876 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !11199)
!11877 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !11199)
!11878 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !11199)
!11879 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !11199)
!11880 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !11199)
!11881 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !11199)
!11882 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !11199)
!11883 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !11199)
!11884 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !11199)
!11885 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !11199)
!11886 = !DILocation(line: 1932, column: 37, scope: !11200)
!11887 = !DILocation(line: 1932, column: 97, scope: !11200)
!11888 = !DILocation(line: 1932, column: 100, scope: !11889)
!11889 = !DILexicalBlockFile(scope: !11153, file: !1150, discriminator: 2)
!11890 = !DILocation(line: 1932, column: 104, scope: !11889)
!11891 = !DILocation(line: 1932, column: 9, scope: !11889)
!11892 = !DILocalVariable(name: "gbytes", scope: !11152, file: !1150, line: 1933, type: !11144)
!11893 = !DILocation(line: 1933, column: 24, scope: !11152)
!11894 = !DILocalVariable(name: "ret", scope: !11152, file: !1150, line: 1934, type: !1025)
!11895 = !DILocation(line: 1934, column: 13, scope: !11152)
!11896 = !DILocalVariable(name: "le", scope: !11152, file: !1150, line: 1934, type: !1025)
!11897 = !DILocation(line: 1934, column: 18, scope: !11152)
!11898 = !DILocalVariable(name: "ifd_offset", scope: !11152, file: !1150, line: 1934, type: !1025)
!11899 = !DILocation(line: 1934, column: 22, scope: !11152)
!11900 = !DILocalVariable(name: "bytes_read", scope: !11152, file: !1150, line: 1934, type: !1025)
!11901 = !DILocation(line: 1934, column: 34, scope: !11152)
!11902 = !DILocalVariable(name: "aligned", scope: !11152, file: !1150, line: 1935, type: !1146)
!11903 = !DILocation(line: 1935, column: 24, scope: !11152)
!11904 = !DILocation(line: 1937, column: 20, scope: !11152)
!11905 = !DILocation(line: 1937, column: 23, scope: !11152)
!11906 = !DILocation(line: 1937, column: 9, scope: !11152)
!11907 = !DILocation(line: 1938, column: 13, scope: !11152)
!11908 = !DILocation(line: 1941, column: 35, scope: !11152)
!11909 = !DILocation(line: 1941, column: 38, scope: !11152)
!11910 = !DILocation(line: 1941, column: 19, scope: !11152)
!11911 = !DILocation(line: 1941, column: 17, scope: !11152)
!11912 = !DILocation(line: 1942, column: 35, scope: !11152)
!11913 = !DILocation(line: 1942, column: 44, scope: !11152)
!11914 = !DILocation(line: 1942, column: 9, scope: !11152)
!11915 = !DILocation(line: 137, column: 16, scope: !11916, inlinedAt: !11193)
!11916 = !DILexicalBlockFile(scope: !11917, file: !11140, discriminator: 1)
!11917 = distinct !DILexicalBlock(scope: !11918, file: !11140, line: 137, column: 14)
!11918 = distinct !DILexicalBlock(scope: !11189, file: !11140, line: 137, column: 8)
!11919 = !DILocation(line: 137, column: 25, scope: !11916, inlinedAt: !11193)
!11920 = !DILocation(line: 137, column: 14, scope: !11916, inlinedAt: !11193)
!11921 = !DILocation(line: 137, column: 34, scope: !11922, inlinedAt: !11193)
!11922 = !DILexicalBlockFile(scope: !11923, file: !11140, discriminator: 2)
!11923 = distinct !DILexicalBlock(scope: !11917, file: !11140, line: 137, column: 32)
!11924 = !DILocation(line: 137, column: 93, scope: !11925, inlinedAt: !11193)
!11925 = !DILexicalBlockFile(scope: !11922, file: !11140, discriminator: 4)
!11926 = !DILocation(line: 137, column: 93, scope: !11922, inlinedAt: !11193)
!11927 = !DILocation(line: 138, column: 17, scope: !11189, inlinedAt: !11193)
!11928 = !DILocation(line: 138, column: 5, scope: !11189, inlinedAt: !11193)
!11929 = !DILocation(line: 138, column: 8, scope: !11189, inlinedAt: !11193)
!11930 = !DILocation(line: 138, column: 15, scope: !11189, inlinedAt: !11193)
!11931 = !DILocation(line: 139, column: 23, scope: !11189, inlinedAt: !11193)
!11932 = !DILocation(line: 139, column: 5, scope: !11189, inlinedAt: !11193)
!11933 = !DILocation(line: 139, column: 8, scope: !11189, inlinedAt: !11193)
!11934 = !DILocation(line: 139, column: 21, scope: !11189, inlinedAt: !11193)
!11935 = !DILocation(line: 140, column: 21, scope: !11189, inlinedAt: !11193)
!11936 = !DILocation(line: 140, column: 27, scope: !11189, inlinedAt: !11193)
!11937 = !DILocation(line: 140, column: 25, scope: !11189, inlinedAt: !11193)
!11938 = !DILocation(line: 140, column: 5, scope: !11189, inlinedAt: !11193)
!11939 = !DILocation(line: 140, column: 8, scope: !11189, inlinedAt: !11193)
!11940 = !DILocation(line: 140, column: 19, scope: !11189, inlinedAt: !11193)
!11941 = !DILocation(line: 1945, column: 15, scope: !11152)
!11942 = !DILocation(line: 1945, column: 13, scope: !11152)
!11943 = !DILocation(line: 1946, column: 13, scope: !11167)
!11944 = !DILocation(line: 1946, column: 13, scope: !11152)
!11945 = !DILocation(line: 1947, column: 20, scope: !11946)
!11946 = distinct !DILexicalBlock(scope: !11167, file: !1150, line: 1946, column: 18)
!11947 = !DILocation(line: 1947, column: 23, scope: !11946)
!11948 = !DILocation(line: 1947, column: 13, scope: !11946)
!11949 = !DILocation(line: 1948, column: 9, scope: !11946)
!11950 = !DILocation(line: 1949, column: 39, scope: !11166)
!11951 = !DILocation(line: 1949, column: 13, scope: !11166)
!11952 = !DILocation(line: 212, column: 13, scope: !11162, inlinedAt: !11165)
!11953 = !DILocation(line: 212, column: 5, scope: !11162, inlinedAt: !11165)
!11954 = !DILocation(line: 214, column: 28, scope: !11161, inlinedAt: !11165)
!11955 = !DILocation(line: 214, column: 38, scope: !11161, inlinedAt: !11165)
!11956 = !DILocation(line: 214, column: 41, scope: !11161, inlinedAt: !11165)
!11957 = !DILocation(line: 214, column: 50, scope: !11161, inlinedAt: !11165)
!11958 = !DILocation(line: 214, column: 53, scope: !11161, inlinedAt: !11165)
!11959 = !DILocation(line: 214, column: 48, scope: !11161, inlinedAt: !11165)
!11960 = !DILocation(line: 214, column: 36, scope: !11161, inlinedAt: !11165)
!11961 = !DILocation(line: 215, column: 30, scope: !11161, inlinedAt: !11165)
!11962 = !DILocation(line: 215, column: 33, scope: !11161, inlinedAt: !11165)
!11963 = !DILocation(line: 215, column: 46, scope: !11161, inlinedAt: !11165)
!11964 = !DILocation(line: 215, column: 49, scope: !11161, inlinedAt: !11165)
!11965 = !DILocation(line: 215, column: 44, scope: !11161, inlinedAt: !11165)
!11966 = !DILocation(line: 214, column: 18, scope: !11161, inlinedAt: !11165)
!11967 = !DILocation(line: 132, column: 9, scope: !11968, inlinedAt: !11179)
!11968 = distinct !DILexicalBlock(scope: !11155, file: !11156, line: 132, column: 9)
!11969 = !DILocation(line: 132, column: 13, scope: !11968, inlinedAt: !11179)
!11970 = !DILocation(line: 132, column: 11, scope: !11968, inlinedAt: !11179)
!11971 = !DILocation(line: 132, column: 9, scope: !11155, inlinedAt: !11179)
!11972 = !DILocation(line: 132, column: 26, scope: !11973, inlinedAt: !11179)
!11973 = !DILexicalBlockFile(scope: !11968, file: !11156, discriminator: 1)
!11974 = !DILocation(line: 132, column: 19, scope: !11973, inlinedAt: !11179)
!11975 = !DILocation(line: 133, column: 14, scope: !11976, inlinedAt: !11179)
!11976 = distinct !DILexicalBlock(scope: !11968, file: !11156, line: 133, column: 14)
!11977 = !DILocation(line: 133, column: 18, scope: !11976, inlinedAt: !11179)
!11978 = !DILocation(line: 133, column: 16, scope: !11976, inlinedAt: !11179)
!11979 = !DILocation(line: 133, column: 14, scope: !11968, inlinedAt: !11179)
!11980 = !DILocation(line: 133, column: 31, scope: !11981, inlinedAt: !11179)
!11981 = !DILexicalBlockFile(scope: !11976, file: !11156, discriminator: 1)
!11982 = !DILocation(line: 133, column: 24, scope: !11981, inlinedAt: !11179)
!11983 = !DILocation(line: 134, column: 17, scope: !11976, inlinedAt: !11179)
!11984 = !DILocation(line: 134, column: 10, scope: !11976, inlinedAt: !11179)
!11985 = !DILocation(line: 135, column: 1, scope: !11155, inlinedAt: !11179)
!11986 = !DILocation(line: 214, column: 16, scope: !11161, inlinedAt: !11165)
!11987 = !DILocation(line: 216, column: 22, scope: !11161, inlinedAt: !11165)
!11988 = !DILocation(line: 216, column: 9, scope: !11161, inlinedAt: !11165)
!11989 = !DILocation(line: 216, column: 12, scope: !11161, inlinedAt: !11165)
!11990 = !DILocation(line: 216, column: 19, scope: !11161, inlinedAt: !11165)
!11991 = !DILocation(line: 217, column: 9, scope: !11161, inlinedAt: !11165)
!11992 = !DILocation(line: 219, column: 28, scope: !11161, inlinedAt: !11165)
!11993 = !DILocation(line: 219, column: 38, scope: !11161, inlinedAt: !11165)
!11994 = !DILocation(line: 219, column: 41, scope: !11161, inlinedAt: !11165)
!11995 = !DILocation(line: 219, column: 54, scope: !11161, inlinedAt: !11165)
!11996 = !DILocation(line: 219, column: 57, scope: !11161, inlinedAt: !11165)
!11997 = !DILocation(line: 219, column: 52, scope: !11161, inlinedAt: !11165)
!11998 = !DILocation(line: 219, column: 36, scope: !11161, inlinedAt: !11165)
!11999 = !DILocation(line: 219, column: 18, scope: !11161, inlinedAt: !11165)
!12000 = !DILocation(line: 132, column: 9, scope: !11968, inlinedAt: !11160)
!12001 = !DILocation(line: 132, column: 13, scope: !11968, inlinedAt: !11160)
!12002 = !DILocation(line: 132, column: 11, scope: !11968, inlinedAt: !11160)
!12003 = !DILocation(line: 132, column: 9, scope: !11155, inlinedAt: !11160)
!12004 = !DILocation(line: 132, column: 26, scope: !11973, inlinedAt: !11160)
!12005 = !DILocation(line: 132, column: 19, scope: !11973, inlinedAt: !11160)
!12006 = !DILocation(line: 133, column: 14, scope: !11976, inlinedAt: !11160)
!12007 = !DILocation(line: 133, column: 18, scope: !11976, inlinedAt: !11160)
!12008 = !DILocation(line: 133, column: 16, scope: !11976, inlinedAt: !11160)
!12009 = !DILocation(line: 133, column: 14, scope: !11968, inlinedAt: !11160)
!12010 = !DILocation(line: 133, column: 31, scope: !11981, inlinedAt: !11160)
!12011 = !DILocation(line: 133, column: 24, scope: !11981, inlinedAt: !11160)
!12012 = !DILocation(line: 134, column: 17, scope: !11976, inlinedAt: !11160)
!12013 = !DILocation(line: 134, column: 10, scope: !11976, inlinedAt: !11160)
!12014 = !DILocation(line: 135, column: 1, scope: !11155, inlinedAt: !11160)
!12015 = !DILocation(line: 219, column: 16, scope: !11161, inlinedAt: !11165)
!12016 = !DILocation(line: 220, column: 21, scope: !11161, inlinedAt: !11165)
!12017 = !DILocation(line: 220, column: 24, scope: !11161, inlinedAt: !11165)
!12018 = !DILocation(line: 220, column: 37, scope: !11161, inlinedAt: !11165)
!12019 = !DILocation(line: 220, column: 35, scope: !11161, inlinedAt: !11165)
!12020 = !DILocation(line: 220, column: 9, scope: !11161, inlinedAt: !11165)
!12021 = !DILocation(line: 220, column: 12, scope: !11161, inlinedAt: !11165)
!12022 = !DILocation(line: 220, column: 19, scope: !11161, inlinedAt: !11165)
!12023 = !DILocation(line: 221, column: 9, scope: !11161, inlinedAt: !11165)
!12024 = !DILocation(line: 223, column: 28, scope: !11161, inlinedAt: !11165)
!12025 = !DILocation(line: 223, column: 39, scope: !11161, inlinedAt: !11165)
!12026 = !DILocation(line: 223, column: 42, scope: !11161, inlinedAt: !11165)
!12027 = !DILocation(line: 223, column: 55, scope: !11161, inlinedAt: !11165)
!12028 = !DILocation(line: 223, column: 58, scope: !11161, inlinedAt: !11165)
!12029 = !DILocation(line: 223, column: 53, scope: !11161, inlinedAt: !11165)
!12030 = !DILocation(line: 223, column: 18, scope: !11161, inlinedAt: !11165)
!12031 = !DILocation(line: 132, column: 9, scope: !11968, inlinedAt: !11173)
!12032 = !DILocation(line: 132, column: 13, scope: !11968, inlinedAt: !11173)
!12033 = !DILocation(line: 132, column: 11, scope: !11968, inlinedAt: !11173)
!12034 = !DILocation(line: 132, column: 9, scope: !11155, inlinedAt: !11173)
!12035 = !DILocation(line: 132, column: 26, scope: !11973, inlinedAt: !11173)
!12036 = !DILocation(line: 132, column: 19, scope: !11973, inlinedAt: !11173)
!12037 = !DILocation(line: 133, column: 14, scope: !11976, inlinedAt: !11173)
!12038 = !DILocation(line: 133, column: 18, scope: !11976, inlinedAt: !11173)
!12039 = !DILocation(line: 133, column: 16, scope: !11976, inlinedAt: !11173)
!12040 = !DILocation(line: 133, column: 14, scope: !11968, inlinedAt: !11173)
!12041 = !DILocation(line: 133, column: 31, scope: !11981, inlinedAt: !11173)
!12042 = !DILocation(line: 133, column: 24, scope: !11981, inlinedAt: !11173)
!12043 = !DILocation(line: 134, column: 17, scope: !11976, inlinedAt: !11173)
!12044 = !DILocation(line: 134, column: 10, scope: !11976, inlinedAt: !11173)
!12045 = !DILocation(line: 135, column: 1, scope: !11155, inlinedAt: !11173)
!12046 = !DILocation(line: 223, column: 16, scope: !11161, inlinedAt: !11165)
!12047 = !DILocation(line: 224, column: 21, scope: !11161, inlinedAt: !11165)
!12048 = !DILocation(line: 224, column: 24, scope: !11161, inlinedAt: !11165)
!12049 = !DILocation(line: 224, column: 39, scope: !11161, inlinedAt: !11165)
!12050 = !DILocation(line: 224, column: 37, scope: !11161, inlinedAt: !11165)
!12051 = !DILocation(line: 224, column: 9, scope: !11161, inlinedAt: !11165)
!12052 = !DILocation(line: 224, column: 12, scope: !11161, inlinedAt: !11165)
!12053 = !DILocation(line: 224, column: 19, scope: !11161, inlinedAt: !11165)
!12054 = !DILocation(line: 225, column: 9, scope: !11161, inlinedAt: !11165)
!12055 = !DILocation(line: 227, column: 9, scope: !11161, inlinedAt: !11165)
!12056 = !DILocation(line: 229, column: 29, scope: !11162, inlinedAt: !11165)
!12057 = !DILocation(line: 229, column: 12, scope: !11162, inlinedAt: !11165)
!12058 = !DILocation(line: 190, column: 18, scope: !11139, inlinedAt: !11177)
!12059 = !DILocation(line: 190, column: 21, scope: !11139, inlinedAt: !11177)
!12060 = !DILocation(line: 190, column: 30, scope: !11139, inlinedAt: !11177)
!12061 = !DILocation(line: 190, column: 33, scope: !11139, inlinedAt: !11177)
!12062 = !DILocation(line: 190, column: 28, scope: !11139, inlinedAt: !11177)
!12063 = !DILocation(line: 190, column: 12, scope: !11139, inlinedAt: !11177)
!12064 = !DILocation(line: 229, column: 5, scope: !11162, inlinedAt: !11165)
!12065 = !DILocation(line: 230, column: 1, scope: !11162, inlinedAt: !11165)
!12066 = !DILocation(line: 1953, column: 38, scope: !11166)
!12067 = !DILocation(line: 1953, column: 41, scope: !11166)
!12068 = !DILocation(line: 1953, column: 57, scope: !11166)
!12069 = !DILocation(line: 1953, column: 65, scope: !11166)
!12070 = !DILocation(line: 1953, column: 68, scope: !11166)
!12071 = !DILocation(line: 1953, column: 19, scope: !11166)
!12072 = !DILocation(line: 1953, column: 17, scope: !11166)
!12073 = !DILocation(line: 1954, column: 17, scope: !12074)
!12074 = distinct !DILexicalBlock(scope: !11166, file: !1150, line: 1954, column: 17)
!12075 = !DILocation(line: 1954, column: 21, scope: !12074)
!12076 = !DILocation(line: 1954, column: 17, scope: !11166)
!12077 = !DILocation(line: 1955, column: 24, scope: !12078)
!12078 = distinct !DILexicalBlock(scope: !12074, file: !1150, line: 1954, column: 26)
!12079 = !DILocation(line: 1955, column: 27, scope: !12078)
!12080 = !DILocation(line: 1955, column: 17, scope: !12078)
!12081 = !DILocation(line: 1956, column: 13, scope: !12078)
!12082 = !DILocation(line: 1959, column: 22, scope: !11152)
!12083 = !DILocation(line: 190, column: 18, scope: !11139, inlinedAt: !11151)
!12084 = !DILocation(line: 190, column: 21, scope: !11139, inlinedAt: !11151)
!12085 = !DILocation(line: 190, column: 30, scope: !11139, inlinedAt: !11151)
!12086 = !DILocation(line: 190, column: 33, scope: !11139, inlinedAt: !11151)
!12087 = !DILocation(line: 190, column: 28, scope: !11139, inlinedAt: !11151)
!12088 = !DILocation(line: 190, column: 12, scope: !11139, inlinedAt: !11151)
!12089 = !DILocation(line: 1959, column: 20, scope: !11152)
!12090 = !DILocation(line: 1960, column: 20, scope: !11152)
!12091 = !DILocation(line: 1960, column: 23, scope: !11152)
!12092 = !DILocation(line: 1960, column: 27, scope: !11152)
!12093 = !DILocation(line: 1960, column: 38, scope: !11152)
!12094 = !DILocation(line: 1960, column: 9, scope: !11152)
!12095 = !DILocation(line: 1961, column: 16, scope: !11152)
!12096 = !DILocation(line: 1961, column: 13, scope: !11152)
!12097 = !DILocation(line: 1963, column: 9, scope: !11152)
!12098 = !DILocation(line: 1967, column: 10, scope: !11133)
!12099 = !DILocation(line: 1967, column: 13, scope: !11133)
!12100 = !DILocation(line: 1967, column: 24, scope: !11133)
!12101 = !DILocation(line: 1967, column: 33, scope: !11133)
!12102 = !DILocation(line: 1967, column: 37, scope: !12103)
!12103 = !DILexicalBlockFile(scope: !11133, file: !1150, discriminator: 1)
!12104 = !DILocation(line: 1967, column: 41, scope: !12103)
!12105 = !DILocation(line: 1967, column: 9, scope: !12103)
!12106 = !DILocation(line: 1968, column: 29, scope: !11132)
!12107 = !DILocation(line: 1968, column: 32, scope: !11132)
!12108 = !DILocation(line: 1968, column: 14, scope: !11132)
!12109 = !DILocation(line: 1968, column: 12, scope: !11132)
!12110 = !DILocation(line: 1969, column: 13, scope: !11132)
!12111 = !DILocation(line: 1971, column: 13, scope: !11131)
!12112 = !DILocation(line: 1971, column: 72, scope: !11131)
!12113 = !DILocation(line: 1971, column: 19, scope: !11131)
!12114 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !11130)
!12115 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !11130)
!12116 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !11130)
!12117 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !11130)
!12118 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !11130)
!12119 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !11130)
!12120 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !11130)
!12121 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !11130)
!12122 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !11130)
!12123 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !11130)
!12124 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !11130)
!12125 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !11130)
!12126 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !11130)
!12127 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !11130)
!12128 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !11130)
!12129 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !11130)
!12130 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !11130)
!12131 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !11130)
!12132 = !DILocation(line: 1971, column: 16, scope: !11131)
!12133 = !DILocation(line: 1971, column: 13, scope: !11132)
!12134 = !DILocation(line: 1982, column: 17, scope: !12135)
!12135 = distinct !DILexicalBlock(scope: !12136, file: !1150, line: 1982, column: 17)
!12136 = distinct !DILexicalBlock(scope: !11131, file: !1150, line: 1971, column: 77)
!12137 = !DILocation(line: 1982, column: 20, scope: !12135)
!12138 = !DILocation(line: 1982, column: 27, scope: !12135)
!12139 = !DILocation(line: 1982, column: 33, scope: !12135)
!12140 = !DILocation(line: 1982, column: 17, scope: !12136)
!12141 = !DILocation(line: 1983, column: 24, scope: !12135)
!12142 = !DILocation(line: 1983, column: 27, scope: !12135)
!12143 = !DILocation(line: 1983, column: 17, scope: !12135)
!12144 = !DILocation(line: 1984, column: 9, scope: !12136)
!12145 = !DILocation(line: 1985, column: 5, scope: !11132)
!12146 = !DILocation(line: 1987, column: 9, scope: !11137)
!12147 = !DILocation(line: 1987, column: 12, scope: !11137)
!12148 = !DILocation(line: 1987, column: 23, scope: !11137)
!12149 = !DILocation(line: 1987, column: 31, scope: !11137)
!12150 = !DILocation(line: 1987, column: 34, scope: !11136)
!12151 = !DILocation(line: 1987, column: 93, scope: !11136)
!12152 = !DILocation(line: 1987, column: 40, scope: !11136)
!12153 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !11135)
!12154 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !11135)
!12155 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !11135)
!12156 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !11135)
!12157 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !11135)
!12158 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !11135)
!12159 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !11135)
!12160 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !11135)
!12161 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !11135)
!12162 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !11135)
!12163 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !11135)
!12164 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !11135)
!12165 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !11135)
!12166 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !11135)
!12167 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !11135)
!12168 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !11135)
!12169 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !11135)
!12170 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !11135)
!12171 = !DILocation(line: 1987, column: 37, scope: !11136)
!12172 = !DILocation(line: 1987, column: 97, scope: !11136)
!12173 = !DILocation(line: 1987, column: 100, scope: !12174)
!12174 = !DILexicalBlockFile(scope: !11137, file: !1150, discriminator: 2)
!12175 = !DILocation(line: 1987, column: 104, scope: !12174)
!12176 = !DILocation(line: 1987, column: 9, scope: !12174)
!12177 = !DILocalVariable(name: "id2", scope: !11204, file: !1150, line: 1988, type: !1025)
!12178 = !DILocation(line: 1988, column: 13, scope: !11204)
!12179 = !DILocalVariable(name: "seqno", scope: !11204, file: !1150, line: 1989, type: !1024)
!12180 = !DILocation(line: 1989, column: 18, scope: !11204)
!12181 = !DILocalVariable(name: "nummarkers", scope: !11204, file: !1150, line: 1990, type: !1024)
!12182 = !DILocation(line: 1990, column: 18, scope: !11204)
!12183 = !DILocation(line: 1992, column: 29, scope: !11204)
!12184 = !DILocation(line: 1992, column: 32, scope: !11204)
!12185 = !DILocation(line: 1992, column: 14, scope: !11204)
!12186 = !DILocation(line: 1992, column: 12, scope: !11204)
!12187 = !DILocation(line: 1993, column: 30, scope: !11204)
!12188 = !DILocation(line: 1993, column: 33, scope: !11204)
!12189 = !DILocation(line: 1993, column: 15, scope: !11204)
!12190 = !DILocation(line: 1993, column: 13, scope: !11204)
!12191 = !DILocation(line: 1994, column: 13, scope: !11204)
!12192 = !DILocation(line: 1995, column: 13, scope: !11203)
!12193 = !DILocation(line: 1995, column: 72, scope: !11203)
!12194 = !DILocation(line: 1995, column: 19, scope: !11203)
!12195 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !11202)
!12196 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !11202)
!12197 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !11202)
!12198 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !11202)
!12199 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !11202)
!12200 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !11202)
!12201 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !11202)
!12202 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !11202)
!12203 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !11202)
!12204 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !11202)
!12205 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !11202)
!12206 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !11202)
!12207 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !11202)
!12208 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !11202)
!12209 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !11202)
!12210 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !11202)
!12211 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !11202)
!12212 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !11202)
!12213 = !DILocation(line: 1995, column: 16, scope: !11203)
!12214 = !DILocation(line: 1995, column: 76, scope: !11203)
!12215 = !DILocation(line: 1995, column: 79, scope: !12216)
!12216 = !DILexicalBlockFile(scope: !11203, file: !1150, discriminator: 1)
!12217 = !DILocation(line: 1995, column: 88, scope: !12216)
!12218 = !DILocation(line: 1995, column: 117, scope: !12216)
!12219 = !DILocation(line: 1995, column: 127, scope: !12216)
!12220 = !DILocation(line: 1995, column: 156, scope: !12216)
!12221 = !DILocation(line: 1995, column: 124, scope: !12216)
!12222 = !DILocation(line: 1995, column: 164, scope: !12216)
!12223 = !DILocation(line: 1995, column: 162, scope: !12216)
!12224 = !DILocation(line: 1995, column: 83, scope: !12216)
!12225 = !DILocation(line: 1995, column: 13, scope: !12216)
!12226 = !DILocation(line: 1996, column: 20, scope: !12227)
!12227 = distinct !DILexicalBlock(scope: !11203, file: !1150, line: 1995, column: 195)
!12228 = !DILocation(line: 1996, column: 23, scope: !12227)
!12229 = !DILocation(line: 1996, column: 13, scope: !12227)
!12230 = !DILocation(line: 1997, column: 13, scope: !12227)
!12231 = !DILocation(line: 2000, column: 20, scope: !11204)
!12232 = !DILocation(line: 2000, column: 23, scope: !11204)
!12233 = !DILocation(line: 2000, column: 9, scope: !11204)
!12234 = !DILocation(line: 2001, column: 27, scope: !11204)
!12235 = !DILocation(line: 2001, column: 30, scope: !11204)
!12236 = !DILocation(line: 2001, column: 17, scope: !11204)
!12237 = !DILocation(line: 2001, column: 15, scope: !11204)
!12238 = !DILocation(line: 2002, column: 13, scope: !11204)
!12239 = !DILocation(line: 2003, column: 13, scope: !12240)
!12240 = distinct !DILexicalBlock(scope: !11204, file: !1150, line: 2003, column: 13)
!12241 = !DILocation(line: 2003, column: 19, scope: !12240)
!12242 = !DILocation(line: 2003, column: 13, scope: !11204)
!12243 = !DILocation(line: 2004, column: 20, scope: !12244)
!12244 = distinct !DILexicalBlock(scope: !12240, file: !1150, line: 2003, column: 25)
!12245 = !DILocation(line: 2004, column: 23, scope: !12244)
!12246 = !DILocation(line: 2004, column: 13, scope: !12244)
!12247 = !DILocation(line: 2005, column: 13, scope: !12244)
!12248 = !DILocation(line: 2008, column: 32, scope: !11204)
!12249 = !DILocation(line: 2008, column: 35, scope: !11204)
!12250 = !DILocation(line: 2008, column: 22, scope: !11204)
!12251 = !DILocation(line: 2008, column: 20, scope: !11204)
!12252 = !DILocation(line: 2009, column: 13, scope: !11204)
!12253 = !DILocation(line: 2010, column: 13, scope: !12254)
!12254 = distinct !DILexicalBlock(scope: !11204, file: !1150, line: 2010, column: 13)
!12255 = !DILocation(line: 2010, column: 24, scope: !12254)
!12256 = !DILocation(line: 2010, column: 13, scope: !11204)
!12257 = !DILocation(line: 2011, column: 20, scope: !12258)
!12258 = distinct !DILexicalBlock(scope: !12254, file: !1150, line: 2010, column: 30)
!12259 = !DILocation(line: 2011, column: 23, scope: !12258)
!12260 = !DILocation(line: 2011, column: 13, scope: !12258)
!12261 = !DILocation(line: 2012, column: 13, scope: !12258)
!12262 = !DILocation(line: 2013, column: 20, scope: !12263)
!12263 = distinct !DILexicalBlock(scope: !12254, file: !1150, line: 2013, column: 20)
!12264 = !DILocation(line: 2013, column: 23, scope: !12263)
!12265 = !DILocation(line: 2013, column: 30, scope: !12263)
!12266 = !DILocation(line: 2013, column: 35, scope: !12263)
!12267 = !DILocation(line: 2013, column: 38, scope: !12268)
!12268 = !DILexicalBlockFile(scope: !12263, file: !1150, discriminator: 1)
!12269 = !DILocation(line: 2013, column: 52, scope: !12268)
!12270 = !DILocation(line: 2013, column: 55, scope: !12268)
!12271 = !DILocation(line: 2013, column: 49, scope: !12268)
!12272 = !DILocation(line: 2013, column: 20, scope: !12268)
!12273 = !DILocation(line: 2014, column: 20, scope: !12274)
!12274 = distinct !DILexicalBlock(scope: !12263, file: !1150, line: 2013, column: 63)
!12275 = !DILocation(line: 2014, column: 23, scope: !12274)
!12276 = !DILocation(line: 2014, column: 13, scope: !12274)
!12277 = !DILocation(line: 2015, column: 13, scope: !12274)
!12278 = !DILocation(line: 2016, column: 20, scope: !12279)
!12279 = distinct !DILexicalBlock(scope: !12263, file: !1150, line: 2016, column: 20)
!12280 = !DILocation(line: 2016, column: 28, scope: !12279)
!12281 = !DILocation(line: 2016, column: 26, scope: !12279)
!12282 = !DILocation(line: 2016, column: 20, scope: !12263)
!12283 = !DILocation(line: 2017, column: 20, scope: !12284)
!12284 = distinct !DILexicalBlock(scope: !12279, file: !1150, line: 2016, column: 40)
!12285 = !DILocation(line: 2017, column: 23, scope: !12284)
!12286 = !DILocation(line: 2017, column: 13, scope: !12284)
!12287 = !DILocation(line: 2018, column: 13, scope: !12284)
!12288 = !DILocation(line: 2022, column: 13, scope: !12289)
!12289 = distinct !DILexicalBlock(scope: !11204, file: !1150, line: 2022, column: 13)
!12290 = !DILocation(line: 2022, column: 16, scope: !12289)
!12291 = !DILocation(line: 2022, column: 23, scope: !12289)
!12292 = !DILocation(line: 2022, column: 13, scope: !11204)
!12293 = !DILocation(line: 2023, column: 37, scope: !12294)
!12294 = distinct !DILexicalBlock(scope: !12289, file: !1150, line: 2022, column: 29)
!12295 = !DILocation(line: 2023, column: 48, scope: !12294)
!12296 = !DILocation(line: 2023, column: 26, scope: !12294)
!12297 = !DILocation(line: 2023, column: 13, scope: !12294)
!12298 = !DILocation(line: 2023, column: 16, scope: !12294)
!12299 = !DILocation(line: 2023, column: 24, scope: !12294)
!12300 = !DILocation(line: 2024, column: 41, scope: !12294)
!12301 = !DILocation(line: 2024, column: 52, scope: !12294)
!12302 = !DILocation(line: 2024, column: 30, scope: !12294)
!12303 = !DILocation(line: 2024, column: 13, scope: !12294)
!12304 = !DILocation(line: 2024, column: 16, scope: !12294)
!12305 = !DILocation(line: 2024, column: 28, scope: !12294)
!12306 = !DILocation(line: 2025, column: 18, scope: !12307)
!12307 = distinct !DILexicalBlock(scope: !12294, file: !1150, line: 2025, column: 17)
!12308 = !DILocation(line: 2025, column: 21, scope: !12307)
!12309 = !DILocation(line: 2025, column: 29, scope: !12307)
!12310 = !DILocation(line: 2025, column: 33, scope: !12311)
!12311 = !DILexicalBlockFile(scope: !12307, file: !1150, discriminator: 1)
!12312 = !DILocation(line: 2025, column: 36, scope: !12311)
!12313 = !DILocation(line: 2025, column: 17, scope: !12311)
!12314 = !DILocation(line: 2026, column: 24, scope: !12315)
!12315 = distinct !DILexicalBlock(scope: !12307, file: !1150, line: 2025, column: 49)
!12316 = !DILocation(line: 2026, column: 27, scope: !12315)
!12317 = !DILocation(line: 2026, column: 17, scope: !12315)
!12318 = !DILocation(line: 2027, column: 17, scope: !12315)
!12319 = !DILocation(line: 2029, column: 25, scope: !12294)
!12320 = !DILocation(line: 2029, column: 13, scope: !12294)
!12321 = !DILocation(line: 2029, column: 16, scope: !12294)
!12322 = !DILocation(line: 2029, column: 23, scope: !12294)
!12323 = !DILocation(line: 2030, column: 9, scope: !12294)
!12324 = !DILocation(line: 2032, column: 24, scope: !12325)
!12325 = distinct !DILexicalBlock(scope: !11204, file: !1150, line: 2032, column: 13)
!12326 = !DILocation(line: 2032, column: 30, scope: !12325)
!12327 = !DILocation(line: 2032, column: 13, scope: !12325)
!12328 = !DILocation(line: 2032, column: 16, scope: !12325)
!12329 = !DILocation(line: 2032, column: 13, scope: !11204)
!12330 = !DILocation(line: 2033, column: 20, scope: !12331)
!12331 = distinct !DILexicalBlock(scope: !12325, file: !1150, line: 2032, column: 36)
!12332 = !DILocation(line: 2033, column: 23, scope: !12331)
!12333 = !DILocation(line: 2033, column: 13, scope: !12331)
!12334 = !DILocation(line: 2034, column: 13, scope: !12331)
!12335 = !DILocation(line: 2037, column: 37, scope: !11204)
!12336 = !DILocation(line: 2037, column: 24, scope: !11204)
!12337 = !DILocation(line: 2037, column: 30, scope: !11204)
!12338 = !DILocation(line: 2037, column: 9, scope: !11204)
!12339 = !DILocation(line: 2037, column: 12, scope: !11204)
!12340 = !DILocation(line: 2037, column: 35, scope: !11204)
!12341 = !DILocation(line: 2038, column: 43, scope: !11204)
!12342 = !DILocation(line: 2038, column: 33, scope: !11204)
!12343 = !DILocation(line: 2038, column: 20, scope: !11204)
!12344 = !DILocation(line: 2038, column: 26, scope: !11204)
!12345 = !DILocation(line: 2038, column: 9, scope: !11204)
!12346 = !DILocation(line: 2038, column: 12, scope: !11204)
!12347 = !DILocation(line: 2038, column: 31, scope: !11204)
!12348 = !DILocation(line: 2039, column: 25, scope: !12349)
!12349 = distinct !DILexicalBlock(scope: !11204, file: !1150, line: 2039, column: 13)
!12350 = !DILocation(line: 2039, column: 31, scope: !12349)
!12351 = !DILocation(line: 2039, column: 14, scope: !12349)
!12352 = !DILocation(line: 2039, column: 17, scope: !12349)
!12353 = !DILocation(line: 2039, column: 13, scope: !11204)
!12354 = !DILocation(line: 2040, column: 20, scope: !12355)
!12355 = distinct !DILexicalBlock(scope: !12349, file: !1150, line: 2039, column: 37)
!12356 = !DILocation(line: 2040, column: 23, scope: !12355)
!12357 = !DILocation(line: 2040, column: 13, scope: !12355)
!12358 = !DILocation(line: 2041, column: 13, scope: !12355)
!12359 = !DILocation(line: 2044, column: 27, scope: !11204)
!12360 = !DILocation(line: 2044, column: 33, scope: !11204)
!12361 = !DILocation(line: 2044, column: 16, scope: !11204)
!12362 = !DILocation(line: 2044, column: 19, scope: !11204)
!12363 = !DILocation(line: 2044, column: 55, scope: !11204)
!12364 = !DILocation(line: 2044, column: 58, scope: !11204)
!12365 = !DILocation(line: 2044, column: 39, scope: !11204)
!12366 = !DILocation(line: 2044, column: 63, scope: !11204)
!12367 = !DILocation(line: 2044, column: 9, scope: !12368)
!12368 = !DILexicalBlockFile(scope: !11204, file: !1150, discriminator: 1)
!12369 = !DILocation(line: 2045, column: 20, scope: !11204)
!12370 = !DILocation(line: 2045, column: 23, scope: !11204)
!12371 = !DILocation(line: 2045, column: 27, scope: !11204)
!12372 = !DILocation(line: 2045, column: 31, scope: !11204)
!12373 = !DILocation(line: 2045, column: 9, scope: !11204)
!12374 = !DILocation(line: 2046, column: 13, scope: !11204)
!12375 = !DILocation(line: 2047, column: 9, scope: !11204)
!12376 = !DILocation(line: 2047, column: 12, scope: !11204)
!12377 = !DILocation(line: 2047, column: 19, scope: !11204)
!12378 = !DILocation(line: 2049, column: 13, scope: !12379)
!12379 = distinct !DILexicalBlock(scope: !11204, file: !1150, line: 2049, column: 13)
!12380 = !DILocation(line: 2049, column: 16, scope: !12379)
!12381 = !DILocation(line: 2049, column: 26, scope: !12379)
!12382 = !DILocation(line: 2049, column: 29, scope: !12379)
!12383 = !DILocation(line: 2049, column: 24, scope: !12379)
!12384 = !DILocation(line: 2049, column: 13, scope: !11204)
!12385 = !DILocation(line: 2050, column: 20, scope: !12379)
!12386 = !DILocation(line: 2050, column: 23, scope: !12379)
!12387 = !DILocation(line: 2050, column: 13, scope: !12379)
!12388 = !DILocation(line: 2051, column: 5, scope: !11204)
!12389 = !DILocation(line: 1987, column: 107, scope: !12390)
!12390 = !DILexicalBlockFile(scope: !11137, file: !1150, discriminator: 3)
!12391 = !DILocation(line: 2055, column: 9, scope: !12392)
!12392 = distinct !DILexicalBlock(scope: !11128, file: !1150, line: 2055, column: 9)
!12393 = !DILocation(line: 2055, column: 13, scope: !12392)
!12394 = !DILocation(line: 2055, column: 9, scope: !11128)
!12395 = !DILocation(line: 2056, column: 16, scope: !12392)
!12396 = !DILocation(line: 2056, column: 19, scope: !12392)
!12397 = !DILocation(line: 2056, column: 9, scope: !12392)
!12398 = !DILocation(line: 2058, column: 5, scope: !11128)
!12399 = !DILocation(line: 2058, column: 12, scope: !11541)
!12400 = !DILocation(line: 2058, column: 18, scope: !11541)
!12401 = !DILocation(line: 2058, column: 5, scope: !11541)
!12402 = !DILocation(line: 2059, column: 20, scope: !11128)
!12403 = !DILocation(line: 2059, column: 23, scope: !11128)
!12404 = !DILocation(line: 2059, column: 9, scope: !11128)
!12405 = !DILocation(line: 2058, column: 5, scope: !12406)
!12406 = !DILexicalBlockFile(scope: !11128, file: !1150, discriminator: 2)
!12407 = distinct !{!12407, !12398}
!12408 = !DILocation(line: 2061, column: 5, scope: !11128)
!12409 = !DILocation(line: 2062, column: 1, scope: !11128)
!12410 = distinct !DISubprogram(name: "av_make_error_string", scope: !12411, file: !12411, line: 109, type: !12412, isLocal: true, isDefinition: true, scopeLine: 110, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!12411 = !DIFile(filename: "./libavutil/error.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!12412 = !DISubroutineType(types: !12413)
!12413 = !{!1584, !1584, !1133, !1025}
!12414 = !DILocalVariable(name: "errbuf", arg: 1, scope: !12410, file: !12411, line: 109, type: !1584)
!12415 = !DILocation(line: 109, column: 48, scope: !12410)
!12416 = !DILocalVariable(name: "errbuf_size", arg: 2, scope: !12410, file: !12411, line: 109, type: !1133)
!12417 = !DILocation(line: 109, column: 63, scope: !12410)
!12418 = !DILocalVariable(name: "errnum", arg: 3, scope: !12410, file: !12411, line: 109, type: !1025)
!12419 = !DILocation(line: 109, column: 80, scope: !12410)
!12420 = !DILocation(line: 111, column: 17, scope: !12410)
!12421 = !DILocation(line: 111, column: 25, scope: !12410)
!12422 = !DILocation(line: 111, column: 33, scope: !12410)
!12423 = !DILocation(line: 111, column: 5, scope: !12410)
!12424 = !DILocation(line: 112, column: 12, scope: !12410)
!12425 = !DILocation(line: 112, column: 5, scope: !12410)
!12426 = distinct !DISubprogram(name: "mjpeg_decode_com", scope: !1150, file: !1150, line: 2064, type: !1813, isLocal: true, isDefinition: true, scopeLine: 2065, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!12427 = !DILocalVariable(name: "s", arg: 1, scope: !12426, file: !1150, line: 2064, type: !1815)
!12428 = !DILocation(line: 2064, column: 49, scope: !12426)
!12429 = !DILocalVariable(name: "len", scope: !12426, file: !1150, line: 2066, type: !1025)
!12430 = !DILocation(line: 2066, column: 9, scope: !12426)
!12431 = !DILocation(line: 2066, column: 25, scope: !12426)
!12432 = !DILocation(line: 2066, column: 28, scope: !12426)
!12433 = !DILocation(line: 2066, column: 15, scope: !12426)
!12434 = !DILocation(line: 2067, column: 9, scope: !12435)
!12435 = distinct !DILexicalBlock(scope: !12426, file: !1150, line: 2067, column: 9)
!12436 = !DILocation(line: 2067, column: 13, scope: !12435)
!12437 = !DILocation(line: 2067, column: 18, scope: !12435)
!12438 = !DILocation(line: 2067, column: 25, scope: !12439)
!12439 = !DILexicalBlockFile(scope: !12435, file: !1150, discriminator: 1)
!12440 = !DILocation(line: 2067, column: 23, scope: !12439)
!12441 = !DILocation(line: 2067, column: 29, scope: !12439)
!12442 = !DILocation(line: 2067, column: 52, scope: !12439)
!12443 = !DILocation(line: 2067, column: 55, scope: !12439)
!12444 = !DILocation(line: 2067, column: 37, scope: !12439)
!12445 = !DILocation(line: 2067, column: 34, scope: !12439)
!12446 = !DILocation(line: 2067, column: 9, scope: !12439)
!12447 = !DILocalVariable(name: "i", scope: !12448, file: !1150, line: 2068, type: !1025)
!12448 = distinct !DILexicalBlock(scope: !12435, file: !1150, line: 2067, column: 60)
!12449 = !DILocation(line: 2068, column: 13, scope: !12448)
!12450 = !DILocalVariable(name: "cbuf", scope: !12448, file: !1150, line: 2069, type: !1584)
!12451 = !DILocation(line: 2069, column: 15, scope: !12448)
!12452 = !DILocation(line: 2069, column: 32, scope: !12448)
!12453 = !DILocation(line: 2069, column: 36, scope: !12448)
!12454 = !DILocation(line: 2069, column: 22, scope: !12448)
!12455 = !DILocation(line: 2070, column: 14, scope: !12456)
!12456 = distinct !DILexicalBlock(scope: !12448, file: !1150, line: 2070, column: 13)
!12457 = !DILocation(line: 2070, column: 13, scope: !12448)
!12458 = !DILocation(line: 2071, column: 13, scope: !12456)
!12459 = !DILocation(line: 2073, column: 16, scope: !12460)
!12460 = distinct !DILexicalBlock(scope: !12448, file: !1150, line: 2073, column: 9)
!12461 = !DILocation(line: 2073, column: 14, scope: !12460)
!12462 = !DILocation(line: 2073, column: 21, scope: !12463)
!12463 = !DILexicalBlockFile(scope: !12464, file: !1150, discriminator: 1)
!12464 = distinct !DILexicalBlock(scope: !12460, file: !1150, line: 2073, column: 9)
!12465 = !DILocation(line: 2073, column: 25, scope: !12463)
!12466 = !DILocation(line: 2073, column: 29, scope: !12463)
!12467 = !DILocation(line: 2073, column: 23, scope: !12463)
!12468 = !DILocation(line: 2073, column: 9, scope: !12463)
!12469 = !DILocation(line: 2074, column: 33, scope: !12464)
!12470 = !DILocation(line: 2074, column: 36, scope: !12464)
!12471 = !DILocation(line: 2074, column: 23, scope: !12464)
!12472 = !DILocation(line: 2074, column: 18, scope: !12464)
!12473 = !DILocation(line: 2074, column: 13, scope: !12464)
!12474 = !DILocation(line: 2074, column: 21, scope: !12464)
!12475 = !DILocation(line: 2073, column: 35, scope: !12476)
!12476 = !DILexicalBlockFile(scope: !12464, file: !1150, discriminator: 2)
!12477 = !DILocation(line: 2073, column: 9, scope: !12476)
!12478 = distinct !{!12478, !12479}
!12479 = !DILocation(line: 2073, column: 9, scope: !12448)
!12480 = !DILocation(line: 2075, column: 13, scope: !12481)
!12481 = distinct !DILexicalBlock(scope: !12448, file: !1150, line: 2075, column: 13)
!12482 = !DILocation(line: 2075, column: 15, scope: !12481)
!12483 = !DILocation(line: 2075, column: 19, scope: !12481)
!12484 = !DILocation(line: 2075, column: 27, scope: !12485)
!12485 = !DILexicalBlockFile(scope: !12481, file: !1150, discriminator: 1)
!12486 = !DILocation(line: 2075, column: 29, scope: !12485)
!12487 = !DILocation(line: 2075, column: 22, scope: !12485)
!12488 = !DILocation(line: 2075, column: 34, scope: !12485)
!12489 = !DILocation(line: 2075, column: 13, scope: !12485)
!12490 = !DILocation(line: 2076, column: 18, scope: !12481)
!12491 = !DILocation(line: 2076, column: 20, scope: !12481)
!12492 = !DILocation(line: 2076, column: 13, scope: !12481)
!12493 = !DILocation(line: 2076, column: 25, scope: !12481)
!12494 = !DILocation(line: 2078, column: 18, scope: !12481)
!12495 = !DILocation(line: 2078, column: 13, scope: !12481)
!12496 = !DILocation(line: 2078, column: 21, scope: !12481)
!12497 = !DILocation(line: 2080, column: 13, scope: !12498)
!12498 = distinct !DILexicalBlock(scope: !12448, file: !1150, line: 2080, column: 13)
!12499 = !DILocation(line: 2080, column: 16, scope: !12498)
!12500 = !DILocation(line: 2080, column: 23, scope: !12498)
!12501 = !DILocation(line: 2080, column: 29, scope: !12498)
!12502 = !DILocation(line: 2080, column: 13, scope: !12448)
!12503 = !DILocation(line: 2081, column: 20, scope: !12498)
!12504 = !DILocation(line: 2081, column: 23, scope: !12498)
!12505 = !DILocation(line: 2081, column: 53, scope: !12498)
!12506 = !DILocation(line: 2081, column: 13, scope: !12498)
!12507 = !DILocation(line: 2084, column: 22, scope: !12508)
!12508 = distinct !DILexicalBlock(scope: !12448, file: !1150, line: 2084, column: 13)
!12509 = !DILocation(line: 2084, column: 14, scope: !12508)
!12510 = !DILocation(line: 2084, column: 13, scope: !12448)
!12511 = !DILocation(line: 2085, column: 24, scope: !12512)
!12512 = distinct !DILexicalBlock(scope: !12508, file: !1150, line: 2084, column: 40)
!12513 = !DILocation(line: 2085, column: 27, scope: !12512)
!12514 = !DILocation(line: 2085, column: 33, scope: !12512)
!12515 = !DILocation(line: 2085, column: 13, scope: !12512)
!12516 = !DILocation(line: 2086, column: 9, scope: !12512)
!12517 = !DILocation(line: 2086, column: 28, scope: !12518)
!12518 = !DILexicalBlockFile(scope: !12519, file: !1150, discriminator: 1)
!12519 = distinct !DILexicalBlock(scope: !12508, file: !1150, line: 2086, column: 20)
!12520 = !DILocation(line: 2086, column: 21, scope: !12518)
!12521 = !DILocation(line: 2086, column: 20, scope: !12518)
!12522 = !DILocation(line: 2087, column: 13, scope: !12519)
!12523 = !DILocation(line: 2087, column: 16, scope: !12519)
!12524 = !DILocation(line: 2087, column: 26, scope: !12519)
!12525 = !DILocation(line: 2088, column: 28, scope: !12526)
!12526 = distinct !DILexicalBlock(scope: !12519, file: !1150, line: 2088, column: 18)
!12527 = !DILocation(line: 2088, column: 20, scope: !12526)
!12528 = !DILocation(line: 2088, column: 74, scope: !12526)
!12529 = !DILocation(line: 2088, column: 77, scope: !12530)
!12530 = !DILexicalBlockFile(scope: !12526, file: !1150, discriminator: 1)
!12531 = !DILocation(line: 2088, column: 80, scope: !12530)
!12532 = !DILocation(line: 2088, column: 87, scope: !12530)
!12533 = !DILocation(line: 2088, column: 98, scope: !12530)
!12534 = !DILocation(line: 2089, column: 28, scope: !12526)
!12535 = !DILocation(line: 2089, column: 20, scope: !12526)
!12536 = !DILocation(line: 2088, column: 18, scope: !12537)
!12537 = !DILexicalBlockFile(scope: !12519, file: !1150, discriminator: 2)
!12538 = !DILocation(line: 2090, column: 13, scope: !12526)
!12539 = !DILocation(line: 2090, column: 16, scope: !12526)
!12540 = !DILocation(line: 2090, column: 24, scope: !12526)
!12541 = !DILocation(line: 2091, column: 26, scope: !12542)
!12542 = distinct !DILexicalBlock(scope: !12526, file: !1150, line: 2091, column: 18)
!12543 = !DILocation(line: 2091, column: 19, scope: !12542)
!12544 = !DILocation(line: 2091, column: 18, scope: !12526)
!12545 = !DILocation(line: 2092, column: 13, scope: !12546)
!12546 = distinct !DILexicalBlock(scope: !12542, file: !1150, line: 2091, column: 50)
!12547 = !DILocation(line: 2092, column: 16, scope: !12546)
!12548 = !DILocation(line: 2092, column: 23, scope: !12546)
!12549 = !DILocation(line: 2092, column: 58, scope: !12546)
!12550 = !DILocation(line: 2092, column: 45, scope: !12546)
!12551 = !DILocation(line: 2093, column: 13, scope: !12546)
!12552 = !DILocation(line: 2093, column: 16, scope: !12546)
!12553 = !DILocation(line: 2093, column: 27, scope: !12546)
!12554 = !DILocation(line: 2094, column: 9, scope: !12546)
!12555 = !DILocation(line: 2096, column: 17, scope: !12448)
!12556 = !DILocation(line: 2096, column: 9, scope: !12448)
!12557 = !DILocation(line: 2097, column: 5, scope: !12448)
!12558 = !DILocation(line: 2099, column: 5, scope: !12426)
!12559 = !DILocation(line: 2100, column: 1, scope: !12426)
!12560 = distinct !DISubprogram(name: "mjpeg_idct_scan_progressive_ac", scope: !1150, file: !1150, line: 1530, type: !11058, isLocal: true, isDefinition: true, scopeLine: 1531, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!12561 = !DILocalVariable(name: "s", arg: 1, scope: !12560, file: !1150, line: 1530, type: !1815)
!12562 = !DILocation(line: 1530, column: 64, scope: !12560)
!12563 = !DILocalVariable(name: "mb_x", scope: !12560, file: !1150, line: 1532, type: !1025)
!12564 = !DILocation(line: 1532, column: 9, scope: !12560)
!12565 = !DILocalVariable(name: "mb_y", scope: !12560, file: !1150, line: 1532, type: !1025)
!12566 = !DILocation(line: 1532, column: 15, scope: !12560)
!12567 = !DILocalVariable(name: "c", scope: !12560, file: !1150, line: 1533, type: !1025)
!12568 = !DILocation(line: 1533, column: 9, scope: !12560)
!12569 = !DILocalVariable(name: "bytes_per_pixel", scope: !12560, file: !1150, line: 1534, type: !1170)
!12570 = !DILocation(line: 1534, column: 15, scope: !12560)
!12571 = !DILocation(line: 1534, column: 38, scope: !12560)
!12572 = !DILocation(line: 1534, column: 41, scope: !12560)
!12573 = !DILocation(line: 1534, column: 46, scope: !12560)
!12574 = !DILocation(line: 1534, column: 35, scope: !12560)
!12575 = !DILocalVariable(name: "block_size", scope: !12560, file: !1150, line: 1535, type: !1170)
!12576 = !DILocation(line: 1535, column: 15, scope: !12560)
!12577 = !DILocation(line: 1535, column: 28, scope: !12560)
!12578 = !DILocation(line: 1535, column: 31, scope: !12560)
!12579 = !DILocation(line: 1537, column: 12, scope: !12580)
!12580 = distinct !DILexicalBlock(scope: !12560, file: !1150, line: 1537, column: 5)
!12581 = !DILocation(line: 1537, column: 10, scope: !12580)
!12582 = !DILocation(line: 1537, column: 17, scope: !12583)
!12583 = !DILexicalBlockFile(scope: !12584, file: !1150, discriminator: 1)
!12584 = distinct !DILexicalBlock(scope: !12580, file: !1150, line: 1537, column: 5)
!12585 = !DILocation(line: 1537, column: 21, scope: !12583)
!12586 = !DILocation(line: 1537, column: 24, scope: !12583)
!12587 = !DILocation(line: 1537, column: 19, scope: !12583)
!12588 = !DILocation(line: 1537, column: 5, scope: !12583)
!12589 = !DILocalVariable(name: "data", scope: !12590, file: !1150, line: 1538, type: !1030)
!12590 = distinct !DILexicalBlock(scope: !12584, file: !1150, line: 1537, column: 44)
!12591 = !DILocation(line: 1538, column: 18, scope: !12590)
!12592 = !DILocation(line: 1538, column: 46, scope: !12590)
!12593 = !DILocation(line: 1538, column: 25, scope: !12590)
!12594 = !DILocation(line: 1538, column: 28, scope: !12590)
!12595 = !DILocation(line: 1538, column: 41, scope: !12590)
!12596 = !DILocalVariable(name: "linesize", scope: !12590, file: !1150, line: 1539, type: !1025)
!12597 = !DILocation(line: 1539, column: 13, scope: !12590)
!12598 = !DILocation(line: 1539, column: 36, scope: !12590)
!12599 = !DILocation(line: 1539, column: 24, scope: !12590)
!12600 = !DILocation(line: 1539, column: 27, scope: !12590)
!12601 = !DILocalVariable(name: "h", scope: !12590, file: !1150, line: 1540, type: !1025)
!12602 = !DILocation(line: 1540, column: 13, scope: !12590)
!12603 = !DILocation(line: 1540, column: 17, scope: !12590)
!12604 = !DILocation(line: 1540, column: 20, scope: !12590)
!12605 = !DILocation(line: 1540, column: 39, scope: !12590)
!12606 = !DILocation(line: 1540, column: 28, scope: !12590)
!12607 = !DILocation(line: 1540, column: 31, scope: !12590)
!12608 = !DILocation(line: 1540, column: 26, scope: !12590)
!12609 = !DILocalVariable(name: "v", scope: !12590, file: !1150, line: 1541, type: !1025)
!12610 = !DILocation(line: 1541, column: 13, scope: !12590)
!12611 = !DILocation(line: 1541, column: 17, scope: !12590)
!12612 = !DILocation(line: 1541, column: 20, scope: !12590)
!12613 = !DILocation(line: 1541, column: 39, scope: !12590)
!12614 = !DILocation(line: 1541, column: 28, scope: !12590)
!12615 = !DILocation(line: 1541, column: 31, scope: !12590)
!12616 = !DILocation(line: 1541, column: 26, scope: !12590)
!12617 = !DILocalVariable(name: "mb_width", scope: !12590, file: !1150, line: 1542, type: !1025)
!12618 = !DILocation(line: 1542, column: 13, scope: !12590)
!12619 = !DILocation(line: 1542, column: 25, scope: !12590)
!12620 = !DILocation(line: 1542, column: 28, scope: !12590)
!12621 = !DILocation(line: 1542, column: 36, scope: !12590)
!12622 = !DILocation(line: 1542, column: 40, scope: !12590)
!12623 = !DILocation(line: 1542, column: 38, scope: !12590)
!12624 = !DILocation(line: 1542, column: 34, scope: !12590)
!12625 = !DILocation(line: 1542, column: 51, scope: !12590)
!12626 = !DILocation(line: 1542, column: 59, scope: !12590)
!12627 = !DILocation(line: 1542, column: 63, scope: !12590)
!12628 = !DILocation(line: 1542, column: 61, scope: !12590)
!12629 = !DILocation(line: 1542, column: 56, scope: !12590)
!12630 = !DILocalVariable(name: "mb_height", scope: !12590, file: !1150, line: 1543, type: !1025)
!12631 = !DILocation(line: 1543, column: 13, scope: !12590)
!12632 = !DILocation(line: 1543, column: 26, scope: !12590)
!12633 = !DILocation(line: 1543, column: 29, scope: !12590)
!12634 = !DILocation(line: 1543, column: 38, scope: !12590)
!12635 = !DILocation(line: 1543, column: 42, scope: !12590)
!12636 = !DILocation(line: 1543, column: 40, scope: !12590)
!12637 = !DILocation(line: 1543, column: 36, scope: !12590)
!12638 = !DILocation(line: 1543, column: 53, scope: !12590)
!12639 = !DILocation(line: 1543, column: 61, scope: !12590)
!12640 = !DILocation(line: 1543, column: 65, scope: !12590)
!12641 = !DILocation(line: 1543, column: 63, scope: !12590)
!12642 = !DILocation(line: 1543, column: 58, scope: !12590)
!12643 = !DILocation(line: 1545, column: 32, scope: !12644)
!12644 = distinct !DILexicalBlock(scope: !12590, file: !1150, line: 1545, column: 13)
!12645 = !DILocation(line: 1545, column: 14, scope: !12644)
!12646 = !DILocation(line: 1545, column: 17, scope: !12644)
!12647 = !DILocation(line: 1545, column: 13, scope: !12644)
!12648 = !DILocation(line: 1545, column: 13, scope: !12590)
!12649 = !DILocation(line: 1546, column: 20, scope: !12644)
!12650 = !DILocation(line: 1546, column: 23, scope: !12644)
!12651 = !DILocation(line: 1546, column: 66, scope: !12644)
!12652 = !DILocation(line: 1546, column: 13, scope: !12644)
!12653 = !DILocation(line: 1548, column: 13, scope: !12654)
!12654 = distinct !DILexicalBlock(scope: !12590, file: !1150, line: 1548, column: 13)
!12655 = !DILocation(line: 1548, column: 16, scope: !12654)
!12656 = !DILocation(line: 1548, column: 27, scope: !12654)
!12657 = !DILocation(line: 1548, column: 30, scope: !12658)
!12658 = !DILexicalBlockFile(scope: !12654, file: !1150, discriminator: 1)
!12659 = !DILocation(line: 1548, column: 33, scope: !12658)
!12660 = !DILocation(line: 1548, column: 13, scope: !12658)
!12661 = !DILocation(line: 1549, column: 21, scope: !12654)
!12662 = !DILocation(line: 1549, column: 30, scope: !12654)
!12663 = !DILocation(line: 1549, column: 18, scope: !12654)
!12664 = !DILocation(line: 1549, column: 13, scope: !12654)
!12665 = !DILocation(line: 1551, column: 19, scope: !12666)
!12666 = distinct !DILexicalBlock(scope: !12590, file: !1150, line: 1551, column: 9)
!12667 = !DILocation(line: 1551, column: 14, scope: !12666)
!12668 = !DILocation(line: 1551, column: 24, scope: !12669)
!12669 = !DILexicalBlockFile(scope: !12670, file: !1150, discriminator: 1)
!12670 = distinct !DILexicalBlock(scope: !12666, file: !1150, line: 1551, column: 9)
!12671 = !DILocation(line: 1551, column: 31, scope: !12669)
!12672 = !DILocation(line: 1551, column: 29, scope: !12669)
!12673 = !DILocation(line: 1551, column: 9, scope: !12669)
!12674 = !DILocalVariable(name: "ptr", scope: !12675, file: !1150, line: 1552, type: !1030)
!12675 = distinct !DILexicalBlock(scope: !12670, file: !1150, line: 1551, column: 50)
!12676 = !DILocation(line: 1552, column: 22, scope: !12675)
!12677 = !DILocation(line: 1552, column: 28, scope: !12675)
!12678 = !DILocation(line: 1552, column: 36, scope: !12675)
!12679 = !DILocation(line: 1552, column: 43, scope: !12675)
!12680 = !DILocation(line: 1552, column: 41, scope: !12675)
!12681 = !DILocation(line: 1552, column: 52, scope: !12675)
!12682 = !DILocation(line: 1552, column: 59, scope: !12675)
!12683 = !DILocation(line: 1552, column: 62, scope: !12675)
!12684 = !DILocation(line: 1552, column: 69, scope: !12675)
!12685 = !DILocation(line: 1552, column: 56, scope: !12675)
!12686 = !DILocation(line: 1552, column: 33, scope: !12675)
!12687 = !DILocalVariable(name: "block_idx", scope: !12675, file: !1150, line: 1553, type: !1025)
!12688 = !DILocation(line: 1553, column: 17, scope: !12675)
!12689 = !DILocation(line: 1553, column: 29, scope: !12675)
!12690 = !DILocation(line: 1553, column: 52, scope: !12675)
!12691 = !DILocation(line: 1553, column: 36, scope: !12675)
!12692 = !DILocation(line: 1553, column: 39, scope: !12675)
!12693 = !DILocation(line: 1553, column: 34, scope: !12675)
!12694 = !DILocalVariable(name: "block", scope: !12675, file: !1150, line: 1554, type: !1913)
!12695 = !DILocation(line: 1554, column: 23, scope: !12675)
!12696 = !DILocation(line: 1554, column: 50, scope: !12675)
!12697 = !DILocation(line: 1554, column: 37, scope: !12675)
!12698 = !DILocation(line: 1554, column: 47, scope: !12675)
!12699 = !DILocation(line: 1554, column: 40, scope: !12675)
!12700 = !DILocation(line: 1555, column: 23, scope: !12701)
!12701 = distinct !DILexicalBlock(scope: !12675, file: !1150, line: 1555, column: 13)
!12702 = !DILocation(line: 1555, column: 18, scope: !12701)
!12703 = !DILocation(line: 1555, column: 28, scope: !12704)
!12704 = !DILexicalBlockFile(scope: !12705, file: !1150, discriminator: 1)
!12705 = distinct !DILexicalBlock(scope: !12701, file: !1150, line: 1555, column: 13)
!12706 = !DILocation(line: 1555, column: 35, scope: !12704)
!12707 = !DILocation(line: 1555, column: 33, scope: !12704)
!12708 = !DILocation(line: 1555, column: 13, scope: !12704)
!12709 = !DILocation(line: 1556, column: 17, scope: !12710)
!12710 = distinct !DILexicalBlock(scope: !12705, file: !1150, line: 1555, column: 62)
!12711 = !DILocation(line: 1556, column: 20, scope: !12710)
!12712 = !DILocation(line: 1556, column: 25, scope: !12710)
!12713 = !DILocation(line: 1556, column: 34, scope: !12710)
!12714 = !DILocation(line: 1556, column: 39, scope: !12710)
!12715 = !DILocation(line: 1556, column: 50, scope: !12710)
!12716 = !DILocation(line: 1556, column: 49, scope: !12710)
!12717 = !DILocation(line: 1557, column: 21, scope: !12718)
!12718 = distinct !DILexicalBlock(scope: !12710, file: !1150, line: 1557, column: 21)
!12719 = !DILocation(line: 1557, column: 24, scope: !12718)
!12720 = !DILocation(line: 1557, column: 29, scope: !12718)
!12721 = !DILocation(line: 1557, column: 21, scope: !12710)
!12722 = !DILocation(line: 1558, column: 34, scope: !12718)
!12723 = !DILocation(line: 1558, column: 37, scope: !12718)
!12724 = !DILocation(line: 1558, column: 42, scope: !12718)
!12725 = !DILocation(line: 1558, column: 21, scope: !12718)
!12726 = !DILocation(line: 1559, column: 24, scope: !12710)
!12727 = !DILocation(line: 1559, column: 39, scope: !12710)
!12728 = !DILocation(line: 1559, column: 45, scope: !12710)
!12729 = !DILocation(line: 1559, column: 48, scope: !12710)
!12730 = !DILocation(line: 1559, column: 55, scope: !12710)
!12731 = !DILocation(line: 1559, column: 42, scope: !12710)
!12732 = !DILocation(line: 1559, column: 21, scope: !12710)
!12733 = !DILocation(line: 1560, column: 13, scope: !12710)
!12734 = !DILocation(line: 1555, column: 49, scope: !12735)
!12735 = !DILexicalBlockFile(scope: !12705, file: !1150, discriminator: 2)
!12736 = !DILocation(line: 1555, column: 58, scope: !12735)
!12737 = !DILocation(line: 1555, column: 13, scope: !12735)
!12738 = distinct !{!12738, !12739}
!12739 = !DILocation(line: 1555, column: 13, scope: !12675)
!12740 = !DILocation(line: 1561, column: 9, scope: !12675)
!12741 = !DILocation(line: 1551, column: 46, scope: !12742)
!12742 = !DILexicalBlockFile(scope: !12670, file: !1150, discriminator: 2)
!12743 = !DILocation(line: 1551, column: 9, scope: !12742)
!12744 = distinct !{!12744, !12745}
!12745 = !DILocation(line: 1551, column: 9, scope: !12590)
!12746 = !DILocation(line: 1562, column: 5, scope: !12590)
!12747 = !DILocation(line: 1537, column: 40, scope: !12748)
!12748 = !DILexicalBlockFile(scope: !12584, file: !1150, discriminator: 2)
!12749 = !DILocation(line: 1537, column: 5, scope: !12748)
!12750 = distinct !{!12750, !12751}
!12751 = !DILocation(line: 1537, column: 5, scope: !12560)
!12752 = !DILocation(line: 1563, column: 1, scope: !12560)
!12753 = distinct !DISubprogram(name: "mjpeg_decode_dri", scope: !1150, file: !1150, line: 1743, type: !1813, isLocal: true, isDefinition: true, scopeLine: 1744, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!12754 = !DILocalVariable(name: "s", arg: 1, scope: !12753, file: !1150, line: 1743, type: !1815)
!12755 = !DILocation(line: 1743, column: 49, scope: !12753)
!12756 = !DILocation(line: 1745, column: 19, scope: !12757)
!12757 = distinct !DILexicalBlock(scope: !12753, file: !1150, line: 1745, column: 9)
!12758 = !DILocation(line: 1745, column: 22, scope: !12757)
!12759 = !DILocation(line: 1745, column: 9, scope: !12757)
!12760 = !DILocation(line: 1745, column: 30, scope: !12757)
!12761 = !DILocation(line: 1745, column: 9, scope: !12753)
!12762 = !DILocation(line: 1746, column: 9, scope: !12757)
!12763 = !DILocation(line: 1747, column: 37, scope: !12753)
!12764 = !DILocation(line: 1747, column: 40, scope: !12753)
!12765 = !DILocation(line: 1747, column: 27, scope: !12753)
!12766 = !DILocation(line: 1747, column: 5, scope: !12753)
!12767 = !DILocation(line: 1747, column: 8, scope: !12753)
!12768 = !DILocation(line: 1747, column: 25, scope: !12753)
!12769 = !DILocation(line: 1748, column: 5, scope: !12753)
!12770 = !DILocation(line: 1748, column: 8, scope: !12753)
!12771 = !DILocation(line: 1748, column: 22, scope: !12753)
!12772 = !DILocation(line: 1749, column: 12, scope: !12753)
!12773 = !DILocation(line: 1749, column: 15, scope: !12753)
!12774 = !DILocation(line: 1750, column: 12, scope: !12753)
!12775 = !DILocation(line: 1750, column: 15, scope: !12753)
!12776 = !DILocation(line: 1749, column: 5, scope: !12753)
!12777 = !DILocation(line: 1752, column: 5, scope: !12753)
!12778 = !DILocation(line: 1753, column: 1, scope: !12753)
!12779 = distinct !DISubprogram(name: "ff_mjpeg_decode_end", scope: !1150, file: !1150, line: 2742, type: !1265, isLocal: false, isDefinition: true, scopeLine: 2743, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!12780 = !DILocalVariable(name: "avctx", arg: 1, scope: !12779, file: !1150, line: 2742, type: !1267)
!12781 = !DILocation(line: 2742, column: 63, scope: !12779)
!12782 = !DILocalVariable(name: "s", scope: !12779, file: !1150, line: 2744, type: !1815)
!12783 = !DILocation(line: 2744, column: 25, scope: !12779)
!12784 = !DILocation(line: 2744, column: 29, scope: !12779)
!12785 = !DILocation(line: 2744, column: 36, scope: !12779)
!12786 = !DILocalVariable(name: "i", scope: !12779, file: !1150, line: 2745, type: !1025)
!12787 = !DILocation(line: 2745, column: 9, scope: !12779)
!12788 = !DILocalVariable(name: "j", scope: !12779, file: !1150, line: 2745, type: !1025)
!12789 = !DILocation(line: 2745, column: 12, scope: !12779)
!12790 = !DILocation(line: 2747, column: 9, scope: !12791)
!12791 = distinct !DILexicalBlock(scope: !12779, file: !1150, line: 2747, column: 9)
!12792 = !DILocation(line: 2747, column: 12, scope: !12791)
!12793 = !DILocation(line: 2747, column: 23, scope: !12791)
!12794 = !DILocation(line: 2747, column: 26, scope: !12795)
!12795 = !DILexicalBlockFile(scope: !12791, file: !1150, discriminator: 1)
!12796 = !DILocation(line: 2747, column: 29, scope: !12795)
!12797 = !DILocation(line: 2747, column: 46, scope: !12795)
!12798 = !DILocation(line: 2747, column: 49, scope: !12795)
!12799 = !DILocation(line: 2747, column: 45, scope: !12795)
!12800 = !DILocation(line: 2747, column: 42, scope: !12795)
!12801 = !DILocation(line: 2747, column: 68, scope: !12795)
!12802 = !DILocation(line: 2747, column: 71, scope: !12803)
!12803 = !DILexicalBlockFile(scope: !12791, file: !1150, discriminator: 2)
!12804 = !DILocation(line: 2747, column: 74, scope: !12803)
!12805 = !DILocation(line: 2747, column: 86, scope: !12803)
!12806 = !DILocation(line: 2747, column: 90, scope: !12807)
!12807 = !DILexicalBlockFile(scope: !12791, file: !1150, discriminator: 3)
!12808 = !DILocation(line: 2747, column: 97, scope: !12807)
!12809 = !DILocation(line: 2747, column: 9, scope: !12807)
!12810 = !DILocation(line: 2748, column: 16, scope: !12811)
!12811 = distinct !DILexicalBlock(scope: !12791, file: !1150, line: 2747, column: 111)
!12812 = !DILocation(line: 2748, column: 9, scope: !12811)
!12813 = !DILocation(line: 2749, column: 5, scope: !12811)
!12814 = !DILocation(line: 2751, column: 9, scope: !12815)
!12815 = distinct !DILexicalBlock(scope: !12779, file: !1150, line: 2751, column: 9)
!12816 = !DILocation(line: 2751, column: 12, scope: !12815)
!12817 = !DILocation(line: 2751, column: 9, scope: !12779)
!12818 = !DILocation(line: 2752, column: 24, scope: !12819)
!12819 = distinct !DILexicalBlock(scope: !12815, file: !1150, line: 2751, column: 21)
!12820 = !DILocation(line: 2752, column: 27, scope: !12819)
!12821 = !DILocation(line: 2752, column: 9, scope: !12819)
!12822 = !DILocation(line: 2753, column: 9, scope: !12819)
!12823 = !DILocation(line: 2753, column: 12, scope: !12819)
!12824 = !DILocation(line: 2753, column: 24, scope: !12819)
!12825 = !DILocation(line: 2754, column: 5, scope: !12819)
!12826 = !DILocation(line: 2754, column: 16, scope: !12827)
!12827 = !DILexicalBlockFile(scope: !12828, file: !1150, discriminator: 1)
!12828 = distinct !DILexicalBlock(scope: !12815, file: !1150, line: 2754, column: 16)
!12829 = !DILocation(line: 2754, column: 19, scope: !12827)
!12830 = !DILocation(line: 2755, column: 24, scope: !12828)
!12831 = !DILocation(line: 2755, column: 27, scope: !12828)
!12832 = !DILocation(line: 2755, column: 9, scope: !12828)
!12833 = !DILocation(line: 2757, column: 15, scope: !12779)
!12834 = !DILocation(line: 2757, column: 18, scope: !12779)
!12835 = !DILocation(line: 2757, column: 14, scope: !12779)
!12836 = !DILocation(line: 2757, column: 5, scope: !12779)
!12837 = !DILocation(line: 2758, column: 15, scope: !12779)
!12838 = !DILocation(line: 2758, column: 18, scope: !12779)
!12839 = !DILocation(line: 2758, column: 14, scope: !12779)
!12840 = !DILocation(line: 2758, column: 5, scope: !12779)
!12841 = !DILocation(line: 2759, column: 15, scope: !12779)
!12842 = !DILocation(line: 2759, column: 18, scope: !12779)
!12843 = !DILocation(line: 2759, column: 14, scope: !12779)
!12844 = !DILocation(line: 2759, column: 5, scope: !12779)
!12845 = !DILocation(line: 2760, column: 5, scope: !12779)
!12846 = !DILocation(line: 2760, column: 8, scope: !12779)
!12847 = !DILocation(line: 2760, column: 26, scope: !12779)
!12848 = !DILocation(line: 2762, column: 12, scope: !12849)
!12849 = distinct !DILexicalBlock(scope: !12779, file: !1150, line: 2762, column: 5)
!12850 = !DILocation(line: 2762, column: 10, scope: !12849)
!12851 = !DILocation(line: 2762, column: 17, scope: !12852)
!12852 = !DILexicalBlockFile(scope: !12853, file: !1150, discriminator: 1)
!12853 = distinct !DILexicalBlock(scope: !12849, file: !1150, line: 2762, column: 5)
!12854 = !DILocation(line: 2762, column: 19, scope: !12852)
!12855 = !DILocation(line: 2762, column: 5, scope: !12852)
!12856 = !DILocation(line: 2763, column: 16, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !12858, file: !1150, line: 2763, column: 9)
!12858 = distinct !DILexicalBlock(scope: !12853, file: !1150, line: 2762, column: 29)
!12859 = !DILocation(line: 2763, column: 14, scope: !12857)
!12860 = !DILocation(line: 2763, column: 21, scope: !12861)
!12861 = !DILexicalBlockFile(scope: !12862, file: !1150, discriminator: 1)
!12862 = distinct !DILexicalBlock(scope: !12857, file: !1150, line: 2763, column: 9)
!12863 = !DILocation(line: 2763, column: 23, scope: !12861)
!12864 = !DILocation(line: 2763, column: 9, scope: !12861)
!12865 = !DILocation(line: 2764, column: 37, scope: !12862)
!12866 = !DILocation(line: 2764, column: 26, scope: !12862)
!12867 = !DILocation(line: 2764, column: 34, scope: !12862)
!12868 = !DILocation(line: 2764, column: 29, scope: !12862)
!12869 = !DILocation(line: 2764, column: 13, scope: !12862)
!12870 = !DILocation(line: 2763, column: 29, scope: !12871)
!12871 = !DILexicalBlockFile(scope: !12862, file: !1150, discriminator: 2)
!12872 = !DILocation(line: 2763, column: 9, scope: !12871)
!12873 = distinct !{!12873, !12874}
!12874 = !DILocation(line: 2763, column: 9, scope: !12858)
!12875 = !DILocation(line: 2765, column: 5, scope: !12858)
!12876 = !DILocation(line: 2762, column: 25, scope: !12877)
!12877 = !DILexicalBlockFile(scope: !12853, file: !1150, discriminator: 2)
!12878 = !DILocation(line: 2762, column: 5, scope: !12877)
!12879 = distinct !{!12879, !12880}
!12880 = !DILocation(line: 2762, column: 5, scope: !12779)
!12881 = !DILocation(line: 2766, column: 12, scope: !12882)
!12882 = distinct !DILexicalBlock(scope: !12779, file: !1150, line: 2766, column: 5)
!12883 = !DILocation(line: 2766, column: 10, scope: !12882)
!12884 = !DILocation(line: 2766, column: 17, scope: !12885)
!12885 = !DILexicalBlockFile(scope: !12886, file: !1150, discriminator: 1)
!12886 = distinct !DILexicalBlock(scope: !12882, file: !1150, line: 2766, column: 5)
!12887 = !DILocation(line: 2766, column: 19, scope: !12885)
!12888 = !DILocation(line: 2766, column: 5, scope: !12885)
!12889 = !DILocation(line: 2767, column: 29, scope: !12890)
!12890 = distinct !DILexicalBlock(scope: !12886, file: !1150, line: 2766, column: 29)
!12891 = !DILocation(line: 2767, column: 19, scope: !12890)
!12892 = !DILocation(line: 2767, column: 22, scope: !12890)
!12893 = !DILocation(line: 2767, column: 18, scope: !12890)
!12894 = !DILocation(line: 2767, column: 9, scope: !12890)
!12895 = !DILocation(line: 2768, column: 31, scope: !12890)
!12896 = !DILocation(line: 2768, column: 19, scope: !12890)
!12897 = !DILocation(line: 2768, column: 22, scope: !12890)
!12898 = !DILocation(line: 2768, column: 18, scope: !12890)
!12899 = !DILocation(line: 2768, column: 9, scope: !12890)
!12900 = !DILocation(line: 2769, column: 5, scope: !12890)
!12901 = !DILocation(line: 2766, column: 25, scope: !12902)
!12902 = !DILexicalBlockFile(scope: !12886, file: !1150, discriminator: 2)
!12903 = !DILocation(line: 2766, column: 5, scope: !12902)
!12904 = distinct !{!12904, !12905}
!12905 = !DILocation(line: 2766, column: 5, scope: !12779)
!12906 = !DILocation(line: 2770, column: 19, scope: !12779)
!12907 = !DILocation(line: 2770, column: 22, scope: !12779)
!12908 = !DILocation(line: 2770, column: 5, scope: !12779)
!12909 = !DILocation(line: 2772, column: 23, scope: !12779)
!12910 = !DILocation(line: 2772, column: 5, scope: !12779)
!12911 = !DILocation(line: 2774, column: 15, scope: !12779)
!12912 = !DILocation(line: 2774, column: 18, scope: !12779)
!12913 = !DILocation(line: 2774, column: 14, scope: !12779)
!12914 = !DILocation(line: 2774, column: 5, scope: !12779)
!12915 = !DILocation(line: 2776, column: 5, scope: !12779)
!12916 = distinct !DISubprogram(name: "decode_flush", scope: !1150, file: !1150, line: 2779, type: !1788, isLocal: true, isDefinition: true, scopeLine: 2780, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!12917 = !DILocalVariable(name: "avctx", arg: 1, scope: !12916, file: !1150, line: 2779, type: !1267)
!12918 = !DILocation(line: 2779, column: 42, scope: !12916)
!12919 = !DILocalVariable(name: "s", scope: !12916, file: !1150, line: 2781, type: !1815)
!12920 = !DILocation(line: 2781, column: 25, scope: !12916)
!12921 = !DILocation(line: 2781, column: 29, scope: !12916)
!12922 = !DILocation(line: 2781, column: 36, scope: !12916)
!12923 = !DILocation(line: 2782, column: 5, scope: !12916)
!12924 = !DILocation(line: 2782, column: 8, scope: !12916)
!12925 = !DILocation(line: 2782, column: 20, scope: !12916)
!12926 = !DILocation(line: 2783, column: 1, scope: !12916)
!12927 = distinct !DISubprogram(name: "NEG_USR32", scope: !12928, file: !12928, line: 124, type: !12929, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!12928 = !DIFile(filename: "libavcodec/x86/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!12929 = !DISubroutineType(types: !12930)
!12930 = !{!1022, !1022, !1125}
!12931 = !DILocalVariable(name: "a", arg: 1, scope: !12927, file: !12928, line: 124, type: !1022)
!12932 = !DILocation(line: 124, column: 43, scope: !12927)
!12933 = !DILocalVariable(name: "s", arg: 2, scope: !12927, file: !12928, line: 124, type: !1125)
!12934 = !DILocation(line: 124, column: 53, scope: !12927)
!12935 = !DILocation(line: 125, column: 5, scope: !12927)
!12936 = !DILocation(line: 127, column: 29, scope: !12927)
!12937 = !DILocation(line: 127, column: 28, scope: !12927)
!12938 = !DILocation(line: 127, column: 18, scope: !12927)
!12939 = !{i32 208079, i32 208093}
!12940 = !DILocation(line: 129, column: 12, scope: !12927)
!12941 = !DILocation(line: 129, column: 5, scope: !12927)
!12942 = distinct !DISubprogram(name: "mjpeg_decode_dc", scope: !1150, file: !1150, line: 759, type: !12943, isLocal: true, isDefinition: true, scopeLine: 760, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!12943 = !DISubroutineType(types: !12944)
!12944 = !{!1025, !1815, !1025}
!12945 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !12946)
!12946 = distinct !DILocation(line: 788, column: 601, scope: !12947, inlinedAt: !12956)
!12947 = !DILexicalBlockFile(scope: !12948, file: !1825, discriminator: 11)
!12948 = distinct !DILexicalBlock(scope: !12949, file: !1825, line: 788, column: 490)
!12949 = distinct !DILexicalBlock(scope: !12950, file: !1825, line: 788, column: 466)
!12950 = distinct !DILexicalBlock(scope: !12951, file: !1825, line: 788, column: 154)
!12951 = distinct !DILexicalBlock(scope: !12952, file: !1825, line: 788, column: 130)
!12952 = distinct !DILexicalBlock(scope: !12953, file: !1825, line: 788, column: 8)
!12953 = distinct !DISubprogram(name: "get_vlc2", scope: !1825, file: !1825, line: 762, type: !12954, isLocal: true, isDefinition: true, scopeLine: 764, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!12954 = !DISubroutineType(types: !12955)
!12955 = !{!1025, !2362, !1849, !1025, !1025}
!12956 = distinct !DILocation(line: 762, column: 12, scope: !12942)
!12957 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !12958)
!12958 = distinct !DILocation(line: 788, column: 259, scope: !12959, inlinedAt: !12956)
!12959 = !DILexicalBlockFile(scope: !12950, file: !1825, discriminator: 6)
!12960 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !12961)
!12961 = distinct !DILocation(line: 786, column: 16, scope: !12953, inlinedAt: !12956)
!12962 = !DILocalVariable(name: "s", arg: 1, scope: !12953, file: !1825, line: 762, type: !2362)
!12963 = !DILocation(line: 762, column: 74, scope: !12953, inlinedAt: !12956)
!12964 = !DILocalVariable(name: "table", arg: 2, scope: !12953, file: !1825, line: 762, type: !1849)
!12965 = !DILocation(line: 762, column: 87, scope: !12953, inlinedAt: !12956)
!12966 = !DILocalVariable(name: "bits", arg: 3, scope: !12953, file: !1825, line: 763, type: !1025)
!12967 = !DILocation(line: 763, column: 42, scope: !12953, inlinedAt: !12956)
!12968 = !DILocalVariable(name: "max_depth", arg: 4, scope: !12953, file: !1825, line: 763, type: !1025)
!12969 = !DILocation(line: 763, column: 52, scope: !12953, inlinedAt: !12956)
!12970 = !DILocalVariable(name: "code", scope: !12953, file: !1825, line: 783, type: !1025)
!12971 = !DILocation(line: 783, column: 9, scope: !12953, inlinedAt: !12956)
!12972 = !DILocalVariable(name: "re_index", scope: !12953, file: !1825, line: 785, type: !1024)
!12973 = !DILocation(line: 785, column: 18, scope: !12953, inlinedAt: !12956)
!12974 = !DILocalVariable(name: "re_cache", scope: !12953, file: !1825, line: 785, type: !1024)
!12975 = !DILocation(line: 785, column: 78, scope: !12953, inlinedAt: !12956)
!12976 = !DILocalVariable(name: "re_size_plus8", scope: !12953, file: !1825, line: 785, type: !1024)
!12977 = !DILocation(line: 785, column: 101, scope: !12953, inlinedAt: !12956)
!12978 = !DILocalVariable(name: "n", scope: !12952, file: !1825, line: 788, type: !1025)
!12979 = !DILocation(line: 788, column: 14, scope: !12952, inlinedAt: !12956)
!12980 = !DILocalVariable(name: "nb_bits", scope: !12952, file: !1825, line: 788, type: !1025)
!12981 = !DILocation(line: 788, column: 17, scope: !12952, inlinedAt: !12956)
!12982 = !DILocalVariable(name: "index", scope: !12952, file: !1825, line: 788, type: !1024)
!12983 = !DILocation(line: 788, column: 39, scope: !12952, inlinedAt: !12956)
!12984 = !DILocalVariable(name: "s", arg: 1, scope: !12942, file: !1150, line: 759, type: !1815)
!12985 = !DILocation(line: 759, column: 55, scope: !12942)
!12986 = !DILocalVariable(name: "dc_index", arg: 2, scope: !12942, file: !1150, line: 759, type: !1025)
!12987 = !DILocation(line: 759, column: 62, scope: !12942)
!12988 = !DILocalVariable(name: "code", scope: !12942, file: !1150, line: 761, type: !1025)
!12989 = !DILocation(line: 761, column: 9, scope: !12942)
!12990 = !DILocation(line: 762, column: 22, scope: !12942)
!12991 = !DILocation(line: 762, column: 25, scope: !12942)
!12992 = !DILocation(line: 762, column: 40, scope: !12942)
!12993 = !DILocation(line: 762, column: 29, scope: !12942)
!12994 = !DILocation(line: 762, column: 32, scope: !12942)
!12995 = !DILocation(line: 762, column: 50, scope: !12942)
!12996 = !DILocation(line: 762, column: 12, scope: !12942)
!12997 = !DILocation(line: 785, column: 30, scope: !12953, inlinedAt: !12956)
!12998 = !DILocation(line: 785, column: 34, scope: !12953, inlinedAt: !12956)
!12999 = !DILocation(line: 785, column: 118, scope: !12953, inlinedAt: !12956)
!13000 = !DILocation(line: 785, column: 122, scope: !12953, inlinedAt: !12956)
!13001 = !DILocation(line: 786, column: 60, scope: !12953, inlinedAt: !12956)
!13002 = !DILocation(line: 786, column: 64, scope: !12953, inlinedAt: !12956)
!13003 = !DILocation(line: 786, column: 74, scope: !12953, inlinedAt: !12956)
!13004 = !DILocation(line: 786, column: 83, scope: !12953, inlinedAt: !12956)
!13005 = !DILocation(line: 786, column: 71, scope: !12953, inlinedAt: !12956)
!13006 = !DILocation(line: 786, column: 92, scope: !12953, inlinedAt: !12956)
!13007 = !DILocation(line: 786, column: 16, scope: !12953, inlinedAt: !12956)
!13008 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !12961)
!13009 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !12961)
!13010 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !12961)
!13011 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !12961)
!13012 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !12961)
!13013 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !12961)
!13014 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !12961)
!13015 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !12961)
!13016 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !12961)
!13017 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !12961)
!13018 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !12961)
!13019 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !12961)
!13020 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !12961)
!13021 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !12961)
!13022 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !12961)
!13023 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !12961)
!13024 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !12961)
!13025 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !12961)
!13026 = !DILocation(line: 786, column: 100, scope: !12953, inlinedAt: !12956)
!13027 = !DILocation(line: 786, column: 109, scope: !12953, inlinedAt: !12956)
!13028 = !DILocation(line: 786, column: 96, scope: !12953, inlinedAt: !12956)
!13029 = !DILocation(line: 786, column: 14, scope: !12953, inlinedAt: !12956)
!13030 = !DILocation(line: 788, column: 64, scope: !13031, inlinedAt: !12956)
!13031 = !DILexicalBlockFile(scope: !12952, file: !1825, discriminator: 1)
!13032 = !DILocation(line: 788, column: 74, scope: !13031, inlinedAt: !12956)
!13033 = !DILocation(line: 788, column: 54, scope: !13031, inlinedAt: !12956)
!13034 = !DILocation(line: 788, column: 52, scope: !13031, inlinedAt: !12956)
!13035 = !DILocation(line: 788, column: 94, scope: !13031, inlinedAt: !12956)
!13036 = !DILocation(line: 788, column: 88, scope: !13031, inlinedAt: !12956)
!13037 = !DILocation(line: 788, column: 86, scope: !13031, inlinedAt: !12956)
!13038 = !DILocation(line: 788, column: 115, scope: !13031, inlinedAt: !12956)
!13039 = !DILocation(line: 788, column: 109, scope: !13031, inlinedAt: !12956)
!13040 = !DILocation(line: 788, column: 107, scope: !13031, inlinedAt: !12956)
!13041 = !DILocation(line: 788, column: 130, scope: !13031, inlinedAt: !12956)
!13042 = !DILocation(line: 788, column: 140, scope: !13031, inlinedAt: !12956)
!13043 = !DILocation(line: 788, column: 144, scope: !13031, inlinedAt: !12956)
!13044 = !DILocation(line: 788, column: 147, scope: !13045, inlinedAt: !12956)
!13045 = !DILexicalBlockFile(scope: !12951, file: !1825, discriminator: 2)
!13046 = !DILocation(line: 788, column: 149, scope: !13045, inlinedAt: !12956)
!13047 = !DILocation(line: 788, column: 130, scope: !13045, inlinedAt: !12956)
!13048 = !DILocation(line: 788, column: 169, scope: !13049, inlinedAt: !12956)
!13049 = !DILexicalBlockFile(scope: !12950, file: !1825, discriminator: 3)
!13050 = !DILocation(line: 788, column: 187, scope: !13049, inlinedAt: !12956)
!13051 = !DILocation(line: 788, column: 199, scope: !13049, inlinedAt: !12956)
!13052 = !DILocation(line: 788, column: 196, scope: !13049, inlinedAt: !12956)
!13053 = !DILocation(line: 788, column: 184, scope: !13049, inlinedAt: !12956)
!13054 = !DILocation(line: 788, column: 168, scope: !13049, inlinedAt: !12956)
!13055 = !DILocation(line: 788, column: 209, scope: !13056, inlinedAt: !12956)
!13056 = !DILexicalBlockFile(scope: !12950, file: !1825, discriminator: 4)
!13057 = !DILocation(line: 788, column: 221, scope: !13056, inlinedAt: !12956)
!13058 = !DILocation(line: 788, column: 218, scope: !13056, inlinedAt: !12956)
!13059 = !DILocation(line: 788, column: 168, scope: !13056, inlinedAt: !12956)
!13060 = !DILocation(line: 788, column: 231, scope: !13061, inlinedAt: !12956)
!13061 = !DILexicalBlockFile(scope: !12950, file: !1825, discriminator: 5)
!13062 = !DILocation(line: 788, column: 168, scope: !13061, inlinedAt: !12956)
!13063 = !DILocation(line: 788, column: 168, scope: !12959, inlinedAt: !12956)
!13064 = !DILocation(line: 788, column: 165, scope: !12959, inlinedAt: !12956)
!13065 = !DILocation(line: 788, column: 303, scope: !12959, inlinedAt: !12956)
!13066 = !DILocation(line: 788, column: 307, scope: !12959, inlinedAt: !12956)
!13067 = !DILocation(line: 788, column: 317, scope: !12959, inlinedAt: !12956)
!13068 = !DILocation(line: 788, column: 326, scope: !12959, inlinedAt: !12956)
!13069 = !DILocation(line: 788, column: 314, scope: !12959, inlinedAt: !12956)
!13070 = !DILocation(line: 788, column: 335, scope: !12959, inlinedAt: !12956)
!13071 = !DILocation(line: 788, column: 259, scope: !12959, inlinedAt: !12956)
!13072 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !12958)
!13073 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !12958)
!13074 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !12958)
!13075 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !12958)
!13076 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !12958)
!13077 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !12958)
!13078 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !12958)
!13079 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !12958)
!13080 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !12958)
!13081 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !12958)
!13082 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !12958)
!13083 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !12958)
!13084 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !12958)
!13085 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !12958)
!13086 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !12958)
!13087 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !12958)
!13088 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !12958)
!13089 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !12958)
!13090 = !DILocation(line: 788, column: 343, scope: !12959, inlinedAt: !12956)
!13091 = !DILocation(line: 788, column: 352, scope: !12959, inlinedAt: !12956)
!13092 = !DILocation(line: 788, column: 339, scope: !12959, inlinedAt: !12956)
!13093 = !DILocation(line: 788, column: 257, scope: !12959, inlinedAt: !12956)
!13094 = !DILocation(line: 788, column: 369, scope: !12959, inlinedAt: !12956)
!13095 = !DILocation(line: 788, column: 368, scope: !12959, inlinedAt: !12956)
!13096 = !DILocation(line: 788, column: 366, scope: !12959, inlinedAt: !12956)
!13097 = !DILocation(line: 788, column: 390, scope: !12959, inlinedAt: !12956)
!13098 = !DILocation(line: 788, column: 400, scope: !12959, inlinedAt: !12956)
!13099 = !DILocation(line: 788, column: 380, scope: !13100, inlinedAt: !12956)
!13100 = !DILexicalBlockFile(scope: !12959, file: !1825, discriminator: 19)
!13101 = !DILocation(line: 788, column: 411, scope: !12959, inlinedAt: !12956)
!13102 = !DILocation(line: 788, column: 409, scope: !12959, inlinedAt: !12956)
!13103 = !DILocation(line: 788, column: 378, scope: !12959, inlinedAt: !12956)
!13104 = !DILocation(line: 788, column: 430, scope: !12959, inlinedAt: !12956)
!13105 = !DILocation(line: 788, column: 424, scope: !12959, inlinedAt: !12956)
!13106 = !DILocation(line: 788, column: 422, scope: !12959, inlinedAt: !12956)
!13107 = !DILocation(line: 788, column: 451, scope: !12959, inlinedAt: !12956)
!13108 = !DILocation(line: 788, column: 445, scope: !12959, inlinedAt: !12956)
!13109 = !DILocation(line: 788, column: 443, scope: !12959, inlinedAt: !12956)
!13110 = !DILocation(line: 788, column: 466, scope: !12959, inlinedAt: !12956)
!13111 = !DILocation(line: 788, column: 476, scope: !12959, inlinedAt: !12956)
!13112 = !DILocation(line: 788, column: 480, scope: !12959, inlinedAt: !12956)
!13113 = !DILocation(line: 788, column: 483, scope: !13114, inlinedAt: !12956)
!13114 = !DILexicalBlockFile(scope: !12949, file: !1825, discriminator: 7)
!13115 = !DILocation(line: 788, column: 485, scope: !13114, inlinedAt: !12956)
!13116 = !DILocation(line: 788, column: 466, scope: !13114, inlinedAt: !12956)
!13117 = !DILocation(line: 788, column: 505, scope: !13118, inlinedAt: !12956)
!13118 = !DILexicalBlockFile(scope: !12948, file: !1825, discriminator: 8)
!13119 = !DILocation(line: 788, column: 523, scope: !13118, inlinedAt: !12956)
!13120 = !DILocation(line: 788, column: 535, scope: !13118, inlinedAt: !12956)
!13121 = !DILocation(line: 788, column: 532, scope: !13118, inlinedAt: !12956)
!13122 = !DILocation(line: 788, column: 520, scope: !13118, inlinedAt: !12956)
!13123 = !DILocation(line: 788, column: 504, scope: !13118, inlinedAt: !12956)
!13124 = !DILocation(line: 788, column: 548, scope: !13125, inlinedAt: !12956)
!13125 = !DILexicalBlockFile(scope: !12948, file: !1825, discriminator: 9)
!13126 = !DILocation(line: 788, column: 560, scope: !13125, inlinedAt: !12956)
!13127 = !DILocation(line: 788, column: 557, scope: !13125, inlinedAt: !12956)
!13128 = !DILocation(line: 788, column: 504, scope: !13125, inlinedAt: !12956)
!13129 = !DILocation(line: 788, column: 573, scope: !13130, inlinedAt: !12956)
!13130 = !DILexicalBlockFile(scope: !12948, file: !1825, discriminator: 10)
!13131 = !DILocation(line: 788, column: 504, scope: !13130, inlinedAt: !12956)
!13132 = !DILocation(line: 788, column: 504, scope: !12947, inlinedAt: !12956)
!13133 = !DILocation(line: 788, column: 501, scope: !12947, inlinedAt: !12956)
!13134 = !DILocation(line: 788, column: 645, scope: !12947, inlinedAt: !12956)
!13135 = !DILocation(line: 788, column: 649, scope: !12947, inlinedAt: !12956)
!13136 = !DILocation(line: 788, column: 659, scope: !12947, inlinedAt: !12956)
!13137 = !DILocation(line: 788, column: 668, scope: !12947, inlinedAt: !12956)
!13138 = !DILocation(line: 788, column: 656, scope: !12947, inlinedAt: !12956)
!13139 = !DILocation(line: 788, column: 677, scope: !12947, inlinedAt: !12956)
!13140 = !DILocation(line: 788, column: 601, scope: !12947, inlinedAt: !12956)
!13141 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !12946)
!13142 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !12946)
!13143 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !12946)
!13144 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !12946)
!13145 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !12946)
!13146 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !12946)
!13147 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !12946)
!13148 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !12946)
!13149 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !12946)
!13150 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !12946)
!13151 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !12946)
!13152 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !12946)
!13153 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !12946)
!13154 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !12946)
!13155 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !12946)
!13156 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !12946)
!13157 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !12946)
!13158 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !12946)
!13159 = !DILocation(line: 788, column: 685, scope: !12947, inlinedAt: !12956)
!13160 = !DILocation(line: 788, column: 694, scope: !12947, inlinedAt: !12956)
!13161 = !DILocation(line: 788, column: 681, scope: !12947, inlinedAt: !12956)
!13162 = !DILocation(line: 788, column: 599, scope: !12947, inlinedAt: !12956)
!13163 = !DILocation(line: 788, column: 711, scope: !12947, inlinedAt: !12956)
!13164 = !DILocation(line: 788, column: 710, scope: !12947, inlinedAt: !12956)
!13165 = !DILocation(line: 788, column: 708, scope: !12947, inlinedAt: !12956)
!13166 = !DILocation(line: 788, column: 732, scope: !12947, inlinedAt: !12956)
!13167 = !DILocation(line: 788, column: 742, scope: !12947, inlinedAt: !12956)
!13168 = !DILocation(line: 788, column: 722, scope: !13169, inlinedAt: !12956)
!13169 = !DILexicalBlockFile(scope: !12947, file: !1825, discriminator: 20)
!13170 = !DILocation(line: 788, column: 753, scope: !12947, inlinedAt: !12956)
!13171 = !DILocation(line: 788, column: 751, scope: !12947, inlinedAt: !12956)
!13172 = !DILocation(line: 788, column: 720, scope: !12947, inlinedAt: !12956)
!13173 = !DILocation(line: 788, column: 772, scope: !12947, inlinedAt: !12956)
!13174 = !DILocation(line: 788, column: 766, scope: !12947, inlinedAt: !12956)
!13175 = !DILocation(line: 788, column: 764, scope: !12947, inlinedAt: !12956)
!13176 = !DILocation(line: 788, column: 793, scope: !12947, inlinedAt: !12956)
!13177 = !DILocation(line: 788, column: 787, scope: !12947, inlinedAt: !12956)
!13178 = !DILocation(line: 788, column: 785, scope: !12947, inlinedAt: !12956)
!13179 = !DILocation(line: 788, column: 804, scope: !12947, inlinedAt: !12956)
!13180 = !DILocation(line: 788, column: 806, scope: !13181, inlinedAt: !12956)
!13181 = !DILexicalBlockFile(scope: !12950, file: !1825, discriminator: 12)
!13182 = !DILocation(line: 788, column: 827, scope: !13183, inlinedAt: !12956)
!13183 = !DILexicalBlockFile(scope: !13184, file: !1825, discriminator: 14)
!13184 = distinct !DILexicalBlock(scope: !12952, file: !1825, line: 788, column: 811)
!13185 = !DILocation(line: 788, column: 822, scope: !13183, inlinedAt: !12956)
!13186 = !DILocation(line: 788, column: 844, scope: !13183, inlinedAt: !12956)
!13187 = !DILocation(line: 788, column: 862, scope: !13183, inlinedAt: !12956)
!13188 = !DILocation(line: 788, column: 874, scope: !13183, inlinedAt: !12956)
!13189 = !DILocation(line: 788, column: 871, scope: !13183, inlinedAt: !12956)
!13190 = !DILocation(line: 788, column: 859, scope: !13183, inlinedAt: !12956)
!13191 = !DILocation(line: 788, column: 843, scope: !13183, inlinedAt: !12956)
!13192 = !DILocation(line: 788, column: 881, scope: !13193, inlinedAt: !12956)
!13193 = !DILexicalBlockFile(scope: !13184, file: !1825, discriminator: 15)
!13194 = !DILocation(line: 788, column: 893, scope: !13193, inlinedAt: !12956)
!13195 = !DILocation(line: 788, column: 890, scope: !13193, inlinedAt: !12956)
!13196 = !DILocation(line: 788, column: 843, scope: !13193, inlinedAt: !12956)
!13197 = !DILocation(line: 788, column: 900, scope: !13198, inlinedAt: !12956)
!13198 = !DILexicalBlockFile(scope: !13184, file: !1825, discriminator: 16)
!13199 = !DILocation(line: 788, column: 843, scope: !13198, inlinedAt: !12956)
!13200 = !DILocation(line: 788, column: 843, scope: !13201, inlinedAt: !12956)
!13201 = !DILexicalBlockFile(scope: !13184, file: !1825, discriminator: 17)
!13202 = !DILocation(line: 788, column: 840, scope: !13201, inlinedAt: !12956)
!13203 = !DILocation(line: 790, column: 18, scope: !12953, inlinedAt: !12956)
!13204 = !DILocation(line: 790, column: 6, scope: !12953, inlinedAt: !12956)
!13205 = !DILocation(line: 790, column: 10, scope: !12953, inlinedAt: !12956)
!13206 = !DILocation(line: 790, column: 16, scope: !12953, inlinedAt: !12956)
!13207 = !DILocation(line: 792, column: 12, scope: !12953, inlinedAt: !12956)
!13208 = !DILocation(line: 762, column: 10, scope: !12942)
!13209 = !DILocation(line: 763, column: 9, scope: !13210)
!13210 = distinct !DILexicalBlock(scope: !12942, file: !1150, line: 763, column: 9)
!13211 = !DILocation(line: 763, column: 14, scope: !13210)
!13212 = !DILocation(line: 763, column: 18, scope: !13210)
!13213 = !DILocation(line: 763, column: 21, scope: !13214)
!13214 = !DILexicalBlockFile(scope: !13210, file: !1150, discriminator: 1)
!13215 = !DILocation(line: 763, column: 26, scope: !13214)
!13216 = !DILocation(line: 763, column: 9, scope: !13214)
!13217 = !DILocation(line: 764, column: 16, scope: !13218)
!13218 = distinct !DILexicalBlock(scope: !13210, file: !1150, line: 763, column: 32)
!13219 = !DILocation(line: 764, column: 19, scope: !13218)
!13220 = !DILocation(line: 766, column: 19, scope: !13218)
!13221 = !DILocation(line: 766, column: 41, scope: !13218)
!13222 = !DILocation(line: 766, column: 30, scope: !13218)
!13223 = !DILocation(line: 766, column: 33, scope: !13218)
!13224 = !DILocation(line: 764, column: 9, scope: !13218)
!13225 = !DILocation(line: 767, column: 9, scope: !13218)
!13226 = !DILocation(line: 770, column: 9, scope: !13227)
!13227 = distinct !DILexicalBlock(scope: !12942, file: !1150, line: 770, column: 9)
!13228 = !DILocation(line: 770, column: 9, scope: !12942)
!13229 = !DILocation(line: 771, column: 27, scope: !13227)
!13230 = !DILocation(line: 771, column: 30, scope: !13227)
!13231 = !DILocation(line: 771, column: 34, scope: !13227)
!13232 = !DILocation(line: 771, column: 16, scope: !13227)
!13233 = !DILocation(line: 771, column: 9, scope: !13227)
!13234 = !DILocation(line: 773, column: 9, scope: !13227)
!13235 = !DILocation(line: 774, column: 1, scope: !12942)
!13236 = distinct !DISubprogram(name: "get_xbits", scope: !1825, file: !1825, line: 323, type: !13237, isLocal: true, isDefinition: true, scopeLine: 324, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!13237 = !DISubroutineType(types: !13238)
!13238 = !{!1025, !2362, !1025}
!13239 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !13240)
!13240 = distinct !DILocation(line: 336, column: 16, scope: !13236)
!13241 = !DILocalVariable(name: "s", arg: 1, scope: !13236, file: !1825, line: 323, type: !2362)
!13242 = !DILocation(line: 323, column: 44, scope: !13236)
!13243 = !DILocalVariable(name: "n", arg: 2, scope: !13236, file: !1825, line: 323, type: !1025)
!13244 = !DILocation(line: 323, column: 51, scope: !13236)
!13245 = !DILocalVariable(name: "sign", scope: !13236, file: !1825, line: 332, type: !1025)
!13246 = !DILocation(line: 332, column: 18, scope: !13236)
!13247 = !DILocalVariable(name: "cache", scope: !13236, file: !1825, line: 333, type: !13248)
!13248 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !1023, line: 38, baseType: !1025)
!13249 = !DILocation(line: 333, column: 22, scope: !13236)
!13250 = !DILocalVariable(name: "re_index", scope: !13236, file: !1825, line: 334, type: !1024)
!13251 = !DILocation(line: 334, column: 18, scope: !13236)
!13252 = !DILocation(line: 334, column: 30, scope: !13236)
!13253 = !DILocation(line: 334, column: 34, scope: !13236)
!13254 = !DILocalVariable(name: "re_cache", scope: !13236, file: !1825, line: 334, type: !1024)
!13255 = !DILocation(line: 334, column: 78, scope: !13236)
!13256 = !DILocalVariable(name: "re_size_plus8", scope: !13236, file: !1825, line: 334, type: !1024)
!13257 = !DILocation(line: 334, column: 101, scope: !13236)
!13258 = !DILocation(line: 334, column: 118, scope: !13236)
!13259 = !DILocation(line: 334, column: 122, scope: !13236)
!13260 = !DILocation(line: 336, column: 60, scope: !13236)
!13261 = !DILocation(line: 336, column: 64, scope: !13236)
!13262 = !DILocation(line: 336, column: 74, scope: !13236)
!13263 = !DILocation(line: 336, column: 83, scope: !13236)
!13264 = !DILocation(line: 336, column: 71, scope: !13236)
!13265 = !DILocation(line: 336, column: 92, scope: !13236)
!13266 = !DILocation(line: 336, column: 16, scope: !13236)
!13267 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !13240)
!13268 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !13240)
!13269 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !13240)
!13270 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !13240)
!13271 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !13240)
!13272 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !13240)
!13273 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !13240)
!13274 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !13240)
!13275 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !13240)
!13276 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !13240)
!13277 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !13240)
!13278 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !13240)
!13279 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !13240)
!13280 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !13240)
!13281 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !13240)
!13282 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !13240)
!13283 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !13240)
!13284 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !13240)
!13285 = !DILocation(line: 336, column: 100, scope: !13236)
!13286 = !DILocation(line: 336, column: 109, scope: !13236)
!13287 = !DILocation(line: 336, column: 96, scope: !13236)
!13288 = !DILocation(line: 336, column: 14, scope: !13236)
!13289 = !DILocation(line: 337, column: 25, scope: !13236)
!13290 = !DILocation(line: 337, column: 11, scope: !13236)
!13291 = !DILocation(line: 338, column: 13, scope: !13236)
!13292 = !DILocation(line: 338, column: 12, scope: !13236)
!13293 = !DILocation(line: 338, column: 19, scope: !13236)
!13294 = !DILocation(line: 338, column: 10, scope: !13236)
!13295 = !DILocation(line: 339, column: 18, scope: !13236)
!13296 = !DILocation(line: 339, column: 36, scope: !13236)
!13297 = !DILocation(line: 339, column: 48, scope: !13236)
!13298 = !DILocation(line: 339, column: 45, scope: !13236)
!13299 = !DILocation(line: 339, column: 33, scope: !13236)
!13300 = !DILocation(line: 339, column: 17, scope: !13236)
!13301 = !DILocation(line: 339, column: 55, scope: !13302)
!13302 = !DILexicalBlockFile(scope: !13236, file: !1825, discriminator: 1)
!13303 = !DILocation(line: 339, column: 67, scope: !13302)
!13304 = !DILocation(line: 339, column: 64, scope: !13302)
!13305 = !DILocation(line: 339, column: 17, scope: !13302)
!13306 = !DILocation(line: 339, column: 74, scope: !13307)
!13307 = !DILexicalBlockFile(scope: !13236, file: !1825, discriminator: 2)
!13308 = !DILocation(line: 339, column: 17, scope: !13307)
!13309 = !DILocation(line: 339, column: 17, scope: !13310)
!13310 = !DILexicalBlockFile(scope: !13236, file: !1825, discriminator: 3)
!13311 = !DILocation(line: 339, column: 14, scope: !13310)
!13312 = !DILocation(line: 340, column: 18, scope: !13236)
!13313 = !DILocation(line: 340, column: 6, scope: !13236)
!13314 = !DILocation(line: 340, column: 10, scope: !13236)
!13315 = !DILocation(line: 340, column: 16, scope: !13236)
!13316 = !DILocation(line: 341, column: 23, scope: !13236)
!13317 = !DILocation(line: 341, column: 30, scope: !13236)
!13318 = !DILocation(line: 341, column: 28, scope: !13236)
!13319 = !DILocation(line: 341, column: 37, scope: !13236)
!13320 = !DILocation(line: 341, column: 13, scope: !13236)
!13321 = !DILocation(line: 341, column: 42, scope: !13236)
!13322 = !DILocation(line: 341, column: 40, scope: !13236)
!13323 = !DILocation(line: 341, column: 50, scope: !13236)
!13324 = !DILocation(line: 341, column: 48, scope: !13236)
!13325 = !DILocation(line: 341, column: 5, scope: !13236)
!13326 = distinct !DISubprogram(name: "decode_block_refinement", scope: !1150, file: !1150, line: 943, type: !13327, isLocal: true, isDefinition: true, scopeLine: 947, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!13327 = !DISubroutineType(types: !13328)
!13328 = !{!1025, !1815, !1935, !1030, !1025, !1027, !1025, !1025, !1025, !1462}
!13329 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !13330)
!13330 = distinct !DILocation(line: 977, column: 204, scope: !13331)
!13331 = !DILexicalBlockFile(scope: !13332, file: !1150, discriminator: 6)
!13332 = distinct !DILexicalBlock(scope: !13333, file: !1150, line: 977, column: 191)
!13333 = distinct !DILexicalBlock(scope: !13334, file: !1150, line: 977, column: 181)
!13334 = distinct !DILexicalBlock(scope: !13335, file: !1150, line: 977, column: 35)
!13335 = distinct !DILexicalBlock(scope: !13336, file: !1150, line: 977, column: 21)
!13336 = distinct !DILexicalBlock(scope: !13337, file: !1150, line: 977, column: 21)
!13337 = distinct !DILexicalBlock(scope: !13338, file: !1150, line: 976, column: 33)
!13338 = distinct !DILexicalBlock(scope: !13339, file: !1150, line: 976, column: 21)
!13339 = distinct !DILexicalBlock(scope: !13340, file: !1150, line: 974, column: 20)
!13340 = distinct !DILexicalBlock(scope: !13341, file: !1150, line: 959, column: 17)
!13341 = distinct !DILexicalBlock(scope: !13342, file: !1150, line: 955, column: 23)
!13342 = distinct !DILexicalBlock(scope: !13343, file: !1150, line: 955, column: 9)
!13343 = distinct !DILexicalBlock(scope: !13344, file: !1150, line: 955, column: 9)
!13344 = distinct !DILexicalBlock(scope: !13345, file: !1150, line: 954, column: 12)
!13345 = distinct !DILexicalBlock(scope: !13326, file: !1150, line: 952, column: 9)
!13346 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !13347)
!13347 = distinct !DILocation(line: 964, column: 200, scope: !13348)
!13348 = !DILexicalBlockFile(scope: !13349, file: !1150, discriminator: 6)
!13349 = distinct !DILexicalBlock(scope: !13350, file: !1150, line: 964, column: 187)
!13350 = distinct !DILexicalBlock(scope: !13351, file: !1150, line: 964, column: 177)
!13351 = distinct !DILexicalBlock(scope: !13352, file: !1150, line: 964, column: 31)
!13352 = distinct !DILexicalBlock(scope: !13353, file: !1150, line: 964, column: 17)
!13353 = distinct !DILexicalBlock(scope: !13354, file: !1150, line: 964, column: 17)
!13354 = distinct !DILexicalBlock(scope: !13340, file: !1150, line: 959, column: 29)
!13355 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !13356)
!13356 = distinct !DILocation(line: 982, column: 36, scope: !13357)
!13357 = distinct !DILexicalBlock(scope: !13358, file: !1150, line: 981, column: 30)
!13358 = distinct !DILexicalBlock(scope: !13359, file: !1150, line: 981, column: 25)
!13359 = distinct !DILexicalBlock(scope: !13338, file: !1150, line: 978, column: 24)
!13360 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !13361)
!13361 = distinct !DILocation(line: 961, column: 28, scope: !13354)
!13362 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !13363)
!13363 = distinct !DILocation(line: 999, column: 26, scope: !13364)
!13364 = distinct !DILexicalBlock(scope: !13365, file: !1150, line: 999, column: 13)
!13365 = distinct !DILexicalBlock(scope: !13366, file: !1150, line: 998, column: 13)
!13366 = distinct !DILexicalBlock(scope: !13367, file: !1150, line: 996, column: 28)
!13367 = distinct !DILexicalBlock(scope: !13368, file: !1150, line: 996, column: 5)
!13368 = distinct !DILexicalBlock(scope: !13326, file: !1150, line: 996, column: 5)
!13369 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !13370)
!13370 = distinct !DILocation(line: 957, column: 292, scope: !13371)
!13371 = !DILexicalBlockFile(scope: !13372, file: !1150, discriminator: 5)
!13372 = distinct !DILexicalBlock(scope: !13373, file: !1150, line: 957, column: 193)
!13373 = distinct !DILexicalBlock(scope: !13374, file: !1150, line: 957, column: 177)
!13374 = distinct !DILexicalBlock(scope: !13341, file: !1150, line: 957, column: 16)
!13375 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !13376)
!13376 = distinct !DILocation(line: 956, column: 24, scope: !13341)
!13377 = !DILocalVariable(name: "s", arg: 1, scope: !13326, file: !1150, line: 943, type: !1815)
!13378 = !DILocation(line: 943, column: 56, scope: !13326)
!13379 = !DILocalVariable(name: "block", arg: 2, scope: !13326, file: !1150, line: 943, type: !1935)
!13380 = !DILocation(line: 943, column: 68, scope: !13326)
!13381 = !DILocalVariable(name: "last_nnz", arg: 3, scope: !13326, file: !1150, line: 944, type: !1030)
!13382 = !DILocation(line: 944, column: 45, scope: !13326)
!13383 = !DILocalVariable(name: "ac_index", arg: 4, scope: !13326, file: !1150, line: 945, type: !1025)
!13384 = !DILocation(line: 945, column: 40, scope: !13326)
!13385 = !DILocalVariable(name: "quant_matrix", arg: 5, scope: !13326, file: !1150, line: 945, type: !1027)
!13386 = !DILocation(line: 945, column: 60, scope: !13326)
!13387 = !DILocalVariable(name: "ss", arg: 6, scope: !13326, file: !1150, line: 946, type: !1025)
!13388 = !DILocation(line: 946, column: 40, scope: !13326)
!13389 = !DILocalVariable(name: "se", arg: 7, scope: !13326, file: !1150, line: 946, type: !1025)
!13390 = !DILocation(line: 946, column: 48, scope: !13326)
!13391 = !DILocalVariable(name: "Al", arg: 8, scope: !13326, file: !1150, line: 946, type: !1025)
!13392 = !DILocation(line: 946, column: 56, scope: !13326)
!13393 = !DILocalVariable(name: "EOBRUN", arg: 9, scope: !13326, file: !1150, line: 946, type: !1462)
!13394 = !DILocation(line: 946, column: 65, scope: !13326)
!13395 = !DILocalVariable(name: "code", scope: !13326, file: !1150, line: 948, type: !1025)
!13396 = !DILocation(line: 948, column: 9, scope: !13326)
!13397 = !DILocalVariable(name: "i", scope: !13326, file: !1150, line: 948, type: !1025)
!13398 = !DILocation(line: 948, column: 15, scope: !13326)
!13399 = !DILocation(line: 948, column: 19, scope: !13326)
!13400 = !DILocalVariable(name: "j", scope: !13326, file: !1150, line: 948, type: !1025)
!13401 = !DILocation(line: 948, column: 23, scope: !13326)
!13402 = !DILocalVariable(name: "sign", scope: !13326, file: !1150, line: 948, type: !1025)
!13403 = !DILocation(line: 948, column: 26, scope: !13326)
!13404 = !DILocalVariable(name: "val", scope: !13326, file: !1150, line: 948, type: !1025)
!13405 = !DILocation(line: 948, column: 32, scope: !13326)
!13406 = !DILocalVariable(name: "run", scope: !13326, file: !1150, line: 948, type: !1025)
!13407 = !DILocation(line: 948, column: 37, scope: !13326)
!13408 = !DILocalVariable(name: "last", scope: !13326, file: !1150, line: 949, type: !1025)
!13409 = !DILocation(line: 949, column: 9, scope: !13326)
!13410 = !DILocation(line: 949, column: 18, scope: !13326)
!13411 = !DILocation(line: 949, column: 26, scope: !13326)
!13412 = !DILocation(line: 949, column: 25, scope: !13326)
!13413 = !DILocation(line: 949, column: 24, scope: !13326)
!13414 = !DILocation(line: 949, column: 22, scope: !13326)
!13415 = !DILocation(line: 949, column: 17, scope: !13326)
!13416 = !DILocation(line: 949, column: 40, scope: !13417)
!13417 = !DILexicalBlockFile(scope: !13326, file: !1150, discriminator: 1)
!13418 = !DILocation(line: 949, column: 39, scope: !13417)
!13419 = !DILocation(line: 949, column: 38, scope: !13417)
!13420 = !DILocation(line: 949, column: 17, scope: !13417)
!13421 = !DILocation(line: 949, column: 53, scope: !13422)
!13422 = !DILexicalBlockFile(scope: !13326, file: !1150, discriminator: 2)
!13423 = !DILocation(line: 949, column: 17, scope: !13422)
!13424 = !DILocation(line: 949, column: 17, scope: !13425)
!13425 = !DILexicalBlockFile(scope: !13326, file: !1150, discriminator: 3)
!13426 = !DILocation(line: 949, column: 9, scope: !13425)
!13427 = !DILocalVariable(name: "re_index", scope: !13326, file: !1150, line: 951, type: !1024)
!13428 = !DILocation(line: 951, column: 18, scope: !13326)
!13429 = !DILocation(line: 951, column: 31, scope: !13326)
!13430 = !DILocation(line: 951, column: 34, scope: !13326)
!13431 = !DILocation(line: 951, column: 39, scope: !13326)
!13432 = !DILocalVariable(name: "re_cache", scope: !13326, file: !1150, line: 951, type: !1024)
!13433 = !DILocation(line: 951, column: 83, scope: !13326)
!13434 = !DILocalVariable(name: "re_size_plus8", scope: !13326, file: !1150, line: 951, type: !1024)
!13435 = !DILocation(line: 951, column: 106, scope: !13326)
!13436 = !DILocation(line: 951, column: 124, scope: !13326)
!13437 = !DILocation(line: 951, column: 127, scope: !13326)
!13438 = !DILocation(line: 951, column: 132, scope: !13326)
!13439 = !DILocation(line: 952, column: 10, scope: !13345)
!13440 = !DILocation(line: 952, column: 9, scope: !13345)
!13441 = !DILocation(line: 952, column: 9, scope: !13326)
!13442 = !DILocation(line: 953, column: 11, scope: !13443)
!13443 = distinct !DILexicalBlock(scope: !13345, file: !1150, line: 952, column: 18)
!13444 = !DILocation(line: 953, column: 18, scope: !13443)
!13445 = !DILocation(line: 954, column: 5, scope: !13443)
!13446 = !DILocation(line: 955, column: 9, scope: !13344)
!13447 = !DILocation(line: 956, column: 69, scope: !13341)
!13448 = !DILocation(line: 956, column: 72, scope: !13341)
!13449 = !DILocation(line: 956, column: 77, scope: !13341)
!13450 = !DILocation(line: 956, column: 87, scope: !13341)
!13451 = !DILocation(line: 956, column: 96, scope: !13341)
!13452 = !DILocation(line: 956, column: 84, scope: !13341)
!13453 = !DILocation(line: 956, column: 105, scope: !13341)
!13454 = !DILocation(line: 956, column: 24, scope: !13341)
!13455 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !13376)
!13456 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !13376)
!13457 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !13376)
!13458 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !13376)
!13459 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !13376)
!13460 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !13376)
!13461 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !13376)
!13462 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !13376)
!13463 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !13376)
!13464 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !13376)
!13465 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !13376)
!13466 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !13376)
!13467 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !13376)
!13468 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !13376)
!13469 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !13376)
!13470 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !13376)
!13471 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !13376)
!13472 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !13376)
!13473 = !DILocation(line: 956, column: 113, scope: !13341)
!13474 = !DILocation(line: 956, column: 122, scope: !13341)
!13475 = !DILocation(line: 956, column: 109, scope: !13341)
!13476 = !DILocation(line: 956, column: 22, scope: !13341)
!13477 = !DILocation(line: 957, column: 13, scope: !13341)
!13478 = distinct !{!13478, !13477}
!13479 = !DILocalVariable(name: "n", scope: !13374, file: !1150, line: 957, type: !1025)
!13480 = !DILocation(line: 957, column: 22, scope: !13374)
!13481 = !DILocalVariable(name: "nb_bits", scope: !13374, file: !1150, line: 957, type: !1025)
!13482 = !DILocation(line: 957, column: 25, scope: !13374)
!13483 = !DILocalVariable(name: "index", scope: !13374, file: !1150, line: 957, type: !1024)
!13484 = !DILocation(line: 957, column: 47, scope: !13374)
!13485 = !DILocation(line: 957, column: 72, scope: !13486)
!13486 = !DILexicalBlockFile(scope: !13374, file: !1150, discriminator: 1)
!13487 = !DILocation(line: 957, column: 62, scope: !13486)
!13488 = !DILocation(line: 957, column: 60, scope: !13486)
!13489 = !DILocation(line: 957, column: 120, scope: !13486)
!13490 = !DILocation(line: 957, column: 93, scope: !13486)
!13491 = !DILocation(line: 957, column: 104, scope: !13486)
!13492 = !DILocation(line: 957, column: 96, scope: !13486)
!13493 = !DILocation(line: 957, column: 114, scope: !13486)
!13494 = !DILocation(line: 957, column: 91, scope: !13486)
!13495 = !DILocation(line: 957, column: 162, scope: !13486)
!13496 = !DILocation(line: 957, column: 135, scope: !13486)
!13497 = !DILocation(line: 957, column: 146, scope: !13486)
!13498 = !DILocation(line: 957, column: 138, scope: !13486)
!13499 = !DILocation(line: 957, column: 156, scope: !13486)
!13500 = !DILocation(line: 957, column: 133, scope: !13486)
!13501 = !DILocation(line: 957, column: 186, scope: !13486)
!13502 = !DILocation(line: 957, column: 188, scope: !13486)
!13503 = !DILocation(line: 957, column: 177, scope: !13486)
!13504 = !DILocation(line: 957, column: 208, scope: !13505)
!13505 = !DILexicalBlockFile(scope: !13372, file: !1150, discriminator: 2)
!13506 = !DILocation(line: 957, column: 226, scope: !13505)
!13507 = !DILocation(line: 957, column: 235, scope: !13505)
!13508 = !DILocation(line: 957, column: 223, scope: !13505)
!13509 = !DILocation(line: 957, column: 207, scope: !13505)
!13510 = !DILocation(line: 957, column: 245, scope: !13511)
!13511 = !DILexicalBlockFile(scope: !13372, file: !1150, discriminator: 3)
!13512 = !DILocation(line: 957, column: 254, scope: !13511)
!13513 = !DILocation(line: 957, column: 207, scope: !13511)
!13514 = !DILocation(line: 957, column: 264, scope: !13515)
!13515 = !DILexicalBlockFile(scope: !13372, file: !1150, discriminator: 4)
!13516 = !DILocation(line: 957, column: 207, scope: !13515)
!13517 = !DILocation(line: 957, column: 207, scope: !13371)
!13518 = !DILocation(line: 957, column: 204, scope: !13371)
!13519 = !DILocation(line: 957, column: 337, scope: !13371)
!13520 = !DILocation(line: 957, column: 340, scope: !13371)
!13521 = !DILocation(line: 957, column: 345, scope: !13371)
!13522 = !DILocation(line: 957, column: 355, scope: !13371)
!13523 = !DILocation(line: 957, column: 364, scope: !13371)
!13524 = !DILocation(line: 957, column: 352, scope: !13371)
!13525 = !DILocation(line: 957, column: 373, scope: !13371)
!13526 = !DILocation(line: 957, column: 292, scope: !13371)
!13527 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !13370)
!13528 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !13370)
!13529 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !13370)
!13530 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !13370)
!13531 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !13370)
!13532 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !13370)
!13533 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !13370)
!13534 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !13370)
!13535 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !13370)
!13536 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !13370)
!13537 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !13370)
!13538 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !13370)
!13539 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !13370)
!13540 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !13370)
!13541 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !13370)
!13542 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !13370)
!13543 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !13370)
!13544 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !13370)
!13545 = !DILocation(line: 957, column: 381, scope: !13371)
!13546 = !DILocation(line: 957, column: 390, scope: !13371)
!13547 = !DILocation(line: 957, column: 377, scope: !13371)
!13548 = !DILocation(line: 957, column: 290, scope: !13371)
!13549 = !DILocation(line: 957, column: 407, scope: !13371)
!13550 = !DILocation(line: 957, column: 406, scope: !13371)
!13551 = !DILocation(line: 957, column: 404, scope: !13371)
!13552 = !DILocation(line: 957, column: 428, scope: !13371)
!13553 = !DILocation(line: 957, column: 438, scope: !13371)
!13554 = !DILocation(line: 957, column: 418, scope: !13555)
!13555 = !DILexicalBlockFile(scope: !13371, file: !1150, discriminator: 12)
!13556 = !DILocation(line: 957, column: 449, scope: !13371)
!13557 = !DILocation(line: 957, column: 447, scope: !13371)
!13558 = !DILocation(line: 957, column: 416, scope: !13371)
!13559 = !DILocation(line: 957, column: 489, scope: !13371)
!13560 = !DILocation(line: 957, column: 462, scope: !13371)
!13561 = !DILocation(line: 957, column: 473, scope: !13371)
!13562 = !DILocation(line: 957, column: 465, scope: !13371)
!13563 = !DILocation(line: 957, column: 483, scope: !13371)
!13564 = !DILocation(line: 957, column: 460, scope: !13371)
!13565 = !DILocation(line: 957, column: 531, scope: !13371)
!13566 = !DILocation(line: 957, column: 504, scope: !13371)
!13567 = !DILocation(line: 957, column: 515, scope: !13371)
!13568 = !DILocation(line: 957, column: 507, scope: !13371)
!13569 = !DILocation(line: 957, column: 525, scope: !13371)
!13570 = !DILocation(line: 957, column: 502, scope: !13371)
!13571 = !DILocation(line: 957, column: 925, scope: !13371)
!13572 = !DILocation(line: 957, column: 927, scope: !13573)
!13573 = !DILexicalBlockFile(scope: !13374, file: !1150, discriminator: 6)
!13574 = distinct !{!13574, !13575}
!13575 = !DILocation(line: 957, column: 927, scope: !13374)
!13576 = !DILocation(line: 957, column: 946, scope: !13577)
!13577 = !DILexicalBlockFile(scope: !13578, file: !1150, discriminator: 7)
!13578 = distinct !DILexicalBlock(scope: !13374, file: !1150, line: 957, column: 930)
!13579 = !DILocation(line: 957, column: 941, scope: !13577)
!13580 = !DILocation(line: 957, column: 963, scope: !13577)
!13581 = !DILocation(line: 957, column: 981, scope: !13577)
!13582 = !DILocation(line: 957, column: 993, scope: !13577)
!13583 = !DILocation(line: 957, column: 990, scope: !13577)
!13584 = !DILocation(line: 957, column: 978, scope: !13577)
!13585 = !DILocation(line: 957, column: 962, scope: !13577)
!13586 = !DILocation(line: 957, column: 1000, scope: !13587)
!13587 = !DILexicalBlockFile(scope: !13578, file: !1150, discriminator: 8)
!13588 = !DILocation(line: 957, column: 1012, scope: !13587)
!13589 = !DILocation(line: 957, column: 1009, scope: !13587)
!13590 = !DILocation(line: 957, column: 962, scope: !13587)
!13591 = !DILocation(line: 957, column: 1019, scope: !13592)
!13592 = !DILexicalBlockFile(scope: !13578, file: !1150, discriminator: 9)
!13593 = !DILocation(line: 957, column: 962, scope: !13592)
!13594 = !DILocation(line: 957, column: 962, scope: !13595)
!13595 = !DILexicalBlockFile(scope: !13578, file: !1150, discriminator: 10)
!13596 = !DILocation(line: 957, column: 959, scope: !13595)
!13597 = !DILocation(line: 957, column: 1036, scope: !13595)
!13598 = !DILocation(line: 957, column: 1049, scope: !13599)
!13599 = !DILexicalBlockFile(scope: !13374, file: !1150, discriminator: 11)
!13600 = !DILocation(line: 959, column: 17, scope: !13340)
!13601 = !DILocation(line: 959, column: 22, scope: !13340)
!13602 = !DILocation(line: 959, column: 17, scope: !13341)
!13603 = !DILocation(line: 960, column: 35, scope: !13354)
!13604 = !DILocation(line: 960, column: 41, scope: !13354)
!13605 = !DILocation(line: 960, column: 21, scope: !13354)
!13606 = !DILocation(line: 961, column: 73, scope: !13354)
!13607 = !DILocation(line: 961, column: 76, scope: !13354)
!13608 = !DILocation(line: 961, column: 81, scope: !13354)
!13609 = !DILocation(line: 961, column: 91, scope: !13354)
!13610 = !DILocation(line: 961, column: 100, scope: !13354)
!13611 = !DILocation(line: 961, column: 88, scope: !13354)
!13612 = !DILocation(line: 961, column: 109, scope: !13354)
!13613 = !DILocation(line: 961, column: 28, scope: !13354)
!13614 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !13361)
!13615 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !13361)
!13616 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !13361)
!13617 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !13361)
!13618 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !13361)
!13619 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !13361)
!13620 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !13361)
!13621 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !13361)
!13622 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !13361)
!13623 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !13361)
!13624 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !13361)
!13625 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !13361)
!13626 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !13361)
!13627 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !13361)
!13628 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !13361)
!13629 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !13361)
!13630 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !13361)
!13631 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !13361)
!13632 = !DILocation(line: 961, column: 117, scope: !13354)
!13633 = !DILocation(line: 961, column: 126, scope: !13354)
!13634 = !DILocation(line: 961, column: 113, scope: !13354)
!13635 = !DILocation(line: 961, column: 26, scope: !13354)
!13636 = !DILocation(line: 962, column: 33, scope: !13354)
!13637 = !DILocation(line: 962, column: 23, scope: !13354)
!13638 = !DILocation(line: 962, column: 21, scope: !13354)
!13639 = !DILocation(line: 963, column: 30, scope: !13354)
!13640 = !DILocation(line: 963, column: 48, scope: !13354)
!13641 = !DILocation(line: 963, column: 57, scope: !13354)
!13642 = !DILocation(line: 963, column: 45, scope: !13354)
!13643 = !DILocation(line: 963, column: 29, scope: !13354)
!13644 = !DILocation(line: 963, column: 67, scope: !13645)
!13645 = !DILexicalBlockFile(scope: !13354, file: !1150, discriminator: 1)
!13646 = !DILocation(line: 963, column: 76, scope: !13645)
!13647 = !DILocation(line: 963, column: 29, scope: !13645)
!13648 = !DILocation(line: 963, column: 86, scope: !13649)
!13649 = !DILexicalBlockFile(scope: !13354, file: !1150, discriminator: 2)
!13650 = !DILocation(line: 963, column: 29, scope: !13649)
!13651 = !DILocation(line: 963, column: 29, scope: !13652)
!13652 = !DILexicalBlockFile(scope: !13354, file: !1150, discriminator: 3)
!13653 = !DILocation(line: 963, column: 26, scope: !13652)
!13654 = !DILocation(line: 964, column: 17, scope: !13354)
!13655 = !DILocation(line: 964, column: 37, scope: !13656)
!13656 = !DILexicalBlockFile(scope: !13657, file: !1150, discriminator: 1)
!13657 = distinct !DILexicalBlock(scope: !13351, file: !1150, line: 964, column: 37)
!13658 = !DILocation(line: 964, column: 41, scope: !13656)
!13659 = !DILocation(line: 964, column: 39, scope: !13656)
!13660 = !DILocation(line: 964, column: 54, scope: !13661)
!13661 = !DILexicalBlockFile(scope: !13662, file: !1150, discriminator: 2)
!13662 = distinct !DILexicalBlock(scope: !13657, file: !1150, line: 964, column: 47)
!13663 = !DILocation(line: 964, column: 51, scope: !13661)
!13664 = !DILocation(line: 964, column: 63, scope: !13661)
!13665 = !DILocation(line: 964, column: 67, scope: !13661)
!13666 = !DILocation(line: 964, column: 65, scope: !13661)
!13667 = !DILocation(line: 964, column: 80, scope: !13668)
!13668 = !DILexicalBlockFile(scope: !13669, file: !1150, discriminator: 3)
!13669 = distinct !DILexicalBlock(scope: !13670, file: !1150, line: 964, column: 71)
!13670 = distinct !DILexicalBlock(scope: !13662, file: !1150, line: 964, column: 63)
!13671 = !DILocation(line: 964, column: 83, scope: !13668)
!13672 = !DILocation(line: 964, column: 115, scope: !13668)
!13673 = !DILocation(line: 964, column: 73, scope: !13668)
!13674 = !DILocation(line: 964, column: 119, scope: !13668)
!13675 = !DILocation(line: 964, column: 132, scope: !13676)
!13676 = !DILexicalBlockFile(scope: !13662, file: !1150, discriminator: 4)
!13677 = !DILocation(line: 964, column: 169, scope: !13678)
!13678 = !DILexicalBlockFile(scope: !13351, file: !1150, discriminator: 5)
!13679 = !DILocation(line: 964, column: 145, scope: !13678)
!13680 = !DILocation(line: 964, column: 148, scope: !13678)
!13681 = !DILocation(line: 964, column: 158, scope: !13678)
!13682 = !DILocation(line: 964, column: 143, scope: !13678)
!13683 = !DILocation(line: 964, column: 183, scope: !13678)
!13684 = !DILocation(line: 964, column: 177, scope: !13678)
!13685 = !DILocation(line: 964, column: 245, scope: !13348)
!13686 = !DILocation(line: 964, column: 248, scope: !13348)
!13687 = !DILocation(line: 964, column: 253, scope: !13348)
!13688 = !DILocation(line: 964, column: 263, scope: !13348)
!13689 = !DILocation(line: 964, column: 272, scope: !13348)
!13690 = !DILocation(line: 964, column: 260, scope: !13348)
!13691 = !DILocation(line: 964, column: 281, scope: !13348)
!13692 = !DILocation(line: 964, column: 200, scope: !13348)
!13693 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !13347)
!13694 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !13347)
!13695 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !13347)
!13696 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !13347)
!13697 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !13347)
!13698 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !13347)
!13699 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !13347)
!13700 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !13347)
!13701 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !13347)
!13702 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !13347)
!13703 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !13347)
!13704 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !13347)
!13705 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !13347)
!13706 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !13347)
!13707 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !13347)
!13708 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !13347)
!13709 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !13347)
!13710 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !13347)
!13711 = !DILocation(line: 964, column: 289, scope: !13348)
!13712 = !DILocation(line: 964, column: 298, scope: !13348)
!13713 = !DILocation(line: 964, column: 285, scope: !13348)
!13714 = !DILocation(line: 964, column: 198, scope: !13348)
!13715 = !DILocation(line: 964, column: 317, scope: !13348)
!13716 = !DILocation(line: 964, column: 311, scope: !13348)
!13717 = !DILocation(line: 964, column: 320, scope: !13348)
!13718 = !DILocation(line: 964, column: 309, scope: !13348)
!13719 = !DILocation(line: 964, column: 349, scope: !13348)
!13720 = !DILocation(line: 964, column: 339, scope: !13721)
!13721 = !DILexicalBlockFile(scope: !13348, file: !1150, discriminator: 14)
!13722 = !DILocation(line: 964, column: 379, scope: !13348)
!13723 = !DILocation(line: 964, column: 366, scope: !13348)
!13724 = !DILocation(line: 964, column: 384, scope: !13348)
!13725 = !DILocation(line: 964, column: 382, scope: !13348)
!13726 = !DILocation(line: 964, column: 392, scope: !13348)
!13727 = !DILocation(line: 964, column: 390, scope: !13348)
!13728 = !DILocation(line: 964, column: 362, scope: !13348)
!13729 = !DILocation(line: 964, column: 401, scope: !13348)
!13730 = !DILocation(line: 964, column: 398, scope: !13348)
!13731 = !DILocation(line: 964, column: 333, scope: !13348)
!13732 = !DILocation(line: 964, column: 327, scope: !13348)
!13733 = !DILocation(line: 964, column: 336, scope: !13348)
!13734 = !DILocation(line: 964, column: 418, scope: !13348)
!13735 = !DILocation(line: 964, column: 436, scope: !13348)
!13736 = !DILocation(line: 964, column: 445, scope: !13348)
!13737 = !DILocation(line: 964, column: 433, scope: !13348)
!13738 = !DILocation(line: 964, column: 417, scope: !13348)
!13739 = !DILocation(line: 964, column: 455, scope: !13740)
!13740 = !DILexicalBlockFile(scope: !13349, file: !1150, discriminator: 7)
!13741 = !DILocation(line: 964, column: 464, scope: !13740)
!13742 = !DILocation(line: 964, column: 417, scope: !13740)
!13743 = !DILocation(line: 964, column: 474, scope: !13744)
!13744 = !DILexicalBlockFile(scope: !13349, file: !1150, discriminator: 8)
!13745 = !DILocation(line: 964, column: 417, scope: !13744)
!13746 = !DILocation(line: 964, column: 417, scope: !13747)
!13747 = !DILexicalBlockFile(scope: !13349, file: !1150, discriminator: 9)
!13748 = !DILocation(line: 964, column: 414, scope: !13747)
!13749 = !DILocation(line: 964, column: 491, scope: !13747)
!13750 = !DILocation(line: 964, column: 505, scope: !13751)
!13751 = !DILexicalBlockFile(scope: !13752, file: !1150, discriminator: 10)
!13752 = distinct !DILexicalBlock(scope: !13350, file: !1150, line: 964, column: 502)
!13753 = !DILocation(line: 964, column: 508, scope: !13751)
!13754 = !DILocation(line: 964, column: 502, scope: !13751)
!13755 = !DILocation(line: 964, column: 514, scope: !13756)
!13756 = !DILexicalBlockFile(scope: !13752, file: !1150, discriminator: 11)
!13757 = !DILocation(line: 964, column: 521, scope: !13758)
!13758 = !DILexicalBlockFile(scope: !13351, file: !1150, discriminator: 12)
!13759 = !DILocation(line: 964, column: 27, scope: !13760)
!13760 = !DILexicalBlockFile(scope: !13352, file: !1150, discriminator: 13)
!13761 = !DILocation(line: 964, column: 17, scope: !13760)
!13762 = distinct !{!13762, !13654}
!13763 = !DILocation(line: 965, column: 45, scope: !13354)
!13764 = !DILocation(line: 965, column: 21, scope: !13354)
!13765 = !DILocation(line: 965, column: 24, scope: !13354)
!13766 = !DILocation(line: 965, column: 34, scope: !13354)
!13767 = !DILocation(line: 965, column: 19, scope: !13354)
!13768 = !DILocation(line: 966, column: 20, scope: !13354)
!13769 = !DILocation(line: 967, column: 43, scope: !13354)
!13770 = !DILocation(line: 967, column: 30, scope: !13354)
!13771 = !DILocation(line: 967, column: 49, scope: !13354)
!13772 = !DILocation(line: 967, column: 46, scope: !13354)
!13773 = !DILocation(line: 967, column: 55, scope: !13354)
!13774 = !DILocation(line: 967, column: 53, scope: !13354)
!13775 = !DILocation(line: 967, column: 62, scope: !13354)
!13776 = !DILocation(line: 967, column: 60, scope: !13354)
!13777 = !DILocation(line: 967, column: 28, scope: !13354)
!13778 = !DILocation(line: 967, column: 23, scope: !13354)
!13779 = !DILocation(line: 967, column: 17, scope: !13354)
!13780 = !DILocation(line: 967, column: 26, scope: !13354)
!13781 = !DILocation(line: 968, column: 21, scope: !13782)
!13782 = distinct !DILexicalBlock(scope: !13354, file: !1150, line: 968, column: 21)
!13783 = !DILocation(line: 968, column: 26, scope: !13782)
!13784 = !DILocation(line: 968, column: 23, scope: !13782)
!13785 = !DILocation(line: 968, column: 21, scope: !13354)
!13786 = !DILocation(line: 969, column: 25, scope: !13787)
!13787 = distinct !DILexicalBlock(scope: !13788, file: !1150, line: 969, column: 25)
!13788 = distinct !DILexicalBlock(scope: !13782, file: !1150, line: 968, column: 30)
!13789 = !DILocation(line: 969, column: 30, scope: !13787)
!13790 = !DILocation(line: 969, column: 29, scope: !13787)
!13791 = !DILocation(line: 969, column: 27, scope: !13787)
!13792 = !DILocation(line: 969, column: 25, scope: !13788)
!13793 = !DILocation(line: 970, column: 37, scope: !13787)
!13794 = !DILocation(line: 970, column: 26, scope: !13787)
!13795 = !DILocation(line: 970, column: 35, scope: !13787)
!13796 = !DILocation(line: 970, column: 25, scope: !13787)
!13797 = !DILocation(line: 971, column: 39, scope: !13788)
!13798 = !DILocation(line: 971, column: 23, scope: !13788)
!13799 = !DILocation(line: 971, column: 26, scope: !13788)
!13800 = !DILocation(line: 971, column: 31, scope: !13788)
!13801 = !DILocation(line: 971, column: 37, scope: !13788)
!13802 = !DILocation(line: 972, column: 21, scope: !13788)
!13803 = !DILocation(line: 974, column: 13, scope: !13354)
!13804 = !DILocation(line: 975, column: 35, scope: !13339)
!13805 = !DILocation(line: 975, column: 41, scope: !13339)
!13806 = !DILocation(line: 975, column: 21, scope: !13339)
!13807 = !DILocation(line: 976, column: 21, scope: !13338)
!13808 = !DILocation(line: 976, column: 25, scope: !13338)
!13809 = !DILocation(line: 976, column: 21, scope: !13339)
!13810 = !DILocation(line: 977, column: 21, scope: !13337)
!13811 = !DILocation(line: 977, column: 41, scope: !13812)
!13812 = !DILexicalBlockFile(scope: !13813, file: !1150, discriminator: 1)
!13813 = distinct !DILexicalBlock(scope: !13334, file: !1150, line: 977, column: 41)
!13814 = !DILocation(line: 977, column: 45, scope: !13812)
!13815 = !DILocation(line: 977, column: 43, scope: !13812)
!13816 = !DILocation(line: 977, column: 58, scope: !13817)
!13817 = !DILexicalBlockFile(scope: !13818, file: !1150, discriminator: 2)
!13818 = distinct !DILexicalBlock(scope: !13813, file: !1150, line: 977, column: 51)
!13819 = !DILocation(line: 977, column: 55, scope: !13817)
!13820 = !DILocation(line: 977, column: 67, scope: !13817)
!13821 = !DILocation(line: 977, column: 71, scope: !13817)
!13822 = !DILocation(line: 977, column: 69, scope: !13817)
!13823 = !DILocation(line: 977, column: 84, scope: !13824)
!13824 = !DILexicalBlockFile(scope: !13825, file: !1150, discriminator: 3)
!13825 = distinct !DILexicalBlock(scope: !13826, file: !1150, line: 977, column: 75)
!13826 = distinct !DILexicalBlock(scope: !13818, file: !1150, line: 977, column: 67)
!13827 = !DILocation(line: 977, column: 87, scope: !13824)
!13828 = !DILocation(line: 977, column: 119, scope: !13824)
!13829 = !DILocation(line: 977, column: 77, scope: !13824)
!13830 = !DILocation(line: 977, column: 123, scope: !13824)
!13831 = !DILocation(line: 977, column: 136, scope: !13832)
!13832 = !DILexicalBlockFile(scope: !13818, file: !1150, discriminator: 4)
!13833 = !DILocation(line: 977, column: 173, scope: !13834)
!13834 = !DILexicalBlockFile(scope: !13334, file: !1150, discriminator: 5)
!13835 = !DILocation(line: 977, column: 149, scope: !13834)
!13836 = !DILocation(line: 977, column: 152, scope: !13834)
!13837 = !DILocation(line: 977, column: 162, scope: !13834)
!13838 = !DILocation(line: 977, column: 147, scope: !13834)
!13839 = !DILocation(line: 977, column: 187, scope: !13834)
!13840 = !DILocation(line: 977, column: 181, scope: !13834)
!13841 = !DILocation(line: 977, column: 249, scope: !13331)
!13842 = !DILocation(line: 977, column: 252, scope: !13331)
!13843 = !DILocation(line: 977, column: 257, scope: !13331)
!13844 = !DILocation(line: 977, column: 267, scope: !13331)
!13845 = !DILocation(line: 977, column: 276, scope: !13331)
!13846 = !DILocation(line: 977, column: 264, scope: !13331)
!13847 = !DILocation(line: 977, column: 285, scope: !13331)
!13848 = !DILocation(line: 977, column: 204, scope: !13331)
!13849 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !13330)
!13850 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !13330)
!13851 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !13330)
!13852 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !13330)
!13853 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !13330)
!13854 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !13330)
!13855 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !13330)
!13856 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !13330)
!13857 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !13330)
!13858 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !13330)
!13859 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !13330)
!13860 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !13330)
!13861 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !13330)
!13862 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !13330)
!13863 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !13330)
!13864 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !13330)
!13865 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !13330)
!13866 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !13330)
!13867 = !DILocation(line: 977, column: 293, scope: !13331)
!13868 = !DILocation(line: 977, column: 302, scope: !13331)
!13869 = !DILocation(line: 977, column: 289, scope: !13331)
!13870 = !DILocation(line: 977, column: 202, scope: !13331)
!13871 = !DILocation(line: 977, column: 321, scope: !13331)
!13872 = !DILocation(line: 977, column: 315, scope: !13331)
!13873 = !DILocation(line: 977, column: 324, scope: !13331)
!13874 = !DILocation(line: 977, column: 313, scope: !13331)
!13875 = !DILocation(line: 977, column: 353, scope: !13331)
!13876 = !DILocation(line: 977, column: 343, scope: !13877)
!13877 = !DILexicalBlockFile(scope: !13331, file: !1150, discriminator: 14)
!13878 = !DILocation(line: 977, column: 383, scope: !13331)
!13879 = !DILocation(line: 977, column: 370, scope: !13331)
!13880 = !DILocation(line: 977, column: 388, scope: !13331)
!13881 = !DILocation(line: 977, column: 386, scope: !13331)
!13882 = !DILocation(line: 977, column: 396, scope: !13331)
!13883 = !DILocation(line: 977, column: 394, scope: !13331)
!13884 = !DILocation(line: 977, column: 366, scope: !13331)
!13885 = !DILocation(line: 977, column: 405, scope: !13331)
!13886 = !DILocation(line: 977, column: 402, scope: !13331)
!13887 = !DILocation(line: 977, column: 337, scope: !13331)
!13888 = !DILocation(line: 977, column: 331, scope: !13331)
!13889 = !DILocation(line: 977, column: 340, scope: !13331)
!13890 = !DILocation(line: 977, column: 422, scope: !13331)
!13891 = !DILocation(line: 977, column: 440, scope: !13331)
!13892 = !DILocation(line: 977, column: 449, scope: !13331)
!13893 = !DILocation(line: 977, column: 437, scope: !13331)
!13894 = !DILocation(line: 977, column: 421, scope: !13331)
!13895 = !DILocation(line: 977, column: 459, scope: !13896)
!13896 = !DILexicalBlockFile(scope: !13332, file: !1150, discriminator: 7)
!13897 = !DILocation(line: 977, column: 468, scope: !13896)
!13898 = !DILocation(line: 977, column: 421, scope: !13896)
!13899 = !DILocation(line: 977, column: 478, scope: !13900)
!13900 = !DILexicalBlockFile(scope: !13332, file: !1150, discriminator: 8)
!13901 = !DILocation(line: 977, column: 421, scope: !13900)
!13902 = !DILocation(line: 977, column: 421, scope: !13903)
!13903 = !DILexicalBlockFile(scope: !13332, file: !1150, discriminator: 9)
!13904 = !DILocation(line: 977, column: 418, scope: !13903)
!13905 = !DILocation(line: 977, column: 495, scope: !13903)
!13906 = !DILocation(line: 977, column: 509, scope: !13907)
!13907 = !DILexicalBlockFile(scope: !13908, file: !1150, discriminator: 10)
!13908 = distinct !DILexicalBlock(scope: !13333, file: !1150, line: 977, column: 506)
!13909 = !DILocation(line: 977, column: 512, scope: !13907)
!13910 = !DILocation(line: 977, column: 506, scope: !13907)
!13911 = !DILocation(line: 977, column: 518, scope: !13912)
!13912 = !DILexicalBlockFile(scope: !13908, file: !1150, discriminator: 11)
!13913 = !DILocation(line: 977, column: 525, scope: !13914)
!13914 = !DILexicalBlockFile(scope: !13334, file: !1150, discriminator: 12)
!13915 = !DILocation(line: 977, column: 31, scope: !13916)
!13916 = !DILexicalBlockFile(scope: !13335, file: !1150, discriminator: 13)
!13917 = !DILocation(line: 977, column: 21, scope: !13916)
!13918 = distinct !{!13918, !13810}
!13919 = !DILocation(line: 978, column: 17, scope: !13337)
!13920 = !DILocation(line: 979, column: 27, scope: !13359)
!13921 = !DILocation(line: 979, column: 25, scope: !13359)
!13922 = !DILocation(line: 980, column: 33, scope: !13359)
!13923 = !DILocation(line: 980, column: 30, scope: !13359)
!13924 = !DILocation(line: 980, column: 25, scope: !13359)
!13925 = !DILocation(line: 981, column: 25, scope: !13358)
!13926 = !DILocation(line: 981, column: 25, scope: !13359)
!13927 = !DILocation(line: 982, column: 81, scope: !13357)
!13928 = !DILocation(line: 982, column: 84, scope: !13357)
!13929 = !DILocation(line: 982, column: 89, scope: !13357)
!13930 = !DILocation(line: 982, column: 99, scope: !13357)
!13931 = !DILocation(line: 982, column: 108, scope: !13357)
!13932 = !DILocation(line: 982, column: 96, scope: !13357)
!13933 = !DILocation(line: 982, column: 117, scope: !13357)
!13934 = !DILocation(line: 982, column: 36, scope: !13357)
!13935 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !13356)
!13936 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !13356)
!13937 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !13356)
!13938 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !13356)
!13939 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !13356)
!13940 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !13356)
!13941 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !13356)
!13942 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !13356)
!13943 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !13356)
!13944 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !13356)
!13945 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !13356)
!13946 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !13356)
!13947 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !13356)
!13948 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !13356)
!13949 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !13356)
!13950 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !13356)
!13951 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !13356)
!13952 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !13356)
!13953 = !DILocation(line: 982, column: 125, scope: !13357)
!13954 = !DILocation(line: 982, column: 134, scope: !13357)
!13955 = !DILocation(line: 982, column: 121, scope: !13357)
!13956 = !DILocation(line: 982, column: 34, scope: !13357)
!13957 = !DILocation(line: 983, column: 42, scope: !13357)
!13958 = !DILocation(line: 983, column: 52, scope: !13357)
!13959 = !DILocation(line: 983, column: 32, scope: !13357)
!13960 = !DILocation(line: 983, column: 29, scope: !13357)
!13961 = !DILocation(line: 984, column: 38, scope: !13357)
!13962 = !DILocation(line: 984, column: 56, scope: !13357)
!13963 = !DILocation(line: 984, column: 68, scope: !13357)
!13964 = !DILocation(line: 984, column: 65, scope: !13357)
!13965 = !DILocation(line: 984, column: 53, scope: !13357)
!13966 = !DILocation(line: 984, column: 37, scope: !13357)
!13967 = !DILocation(line: 984, column: 77, scope: !13968)
!13968 = !DILexicalBlockFile(scope: !13357, file: !1150, discriminator: 1)
!13969 = !DILocation(line: 984, column: 89, scope: !13968)
!13970 = !DILocation(line: 984, column: 86, scope: !13968)
!13971 = !DILocation(line: 984, column: 37, scope: !13968)
!13972 = !DILocation(line: 984, column: 98, scope: !13973)
!13973 = !DILexicalBlockFile(scope: !13357, file: !1150, discriminator: 2)
!13974 = !DILocation(line: 984, column: 37, scope: !13973)
!13975 = !DILocation(line: 984, column: 37, scope: !13976)
!13976 = !DILexicalBlockFile(scope: !13357, file: !1150, discriminator: 3)
!13977 = !DILocation(line: 984, column: 34, scope: !13976)
!13978 = !DILocation(line: 985, column: 21, scope: !13357)
!13979 = !DILocation(line: 986, column: 31, scope: !13359)
!13980 = !DILocation(line: 986, column: 35, scope: !13359)
!13981 = !DILocation(line: 986, column: 22, scope: !13359)
!13982 = !DILocation(line: 986, column: 29, scope: !13359)
!13983 = !DILocation(line: 987, column: 21, scope: !13359)
!13984 = !DILocation(line: 990, column: 9, scope: !13341)
!13985 = !DILocation(line: 955, column: 19, scope: !13986)
!13986 = !DILexicalBlockFile(scope: !13342, file: !1150, discriminator: 1)
!13987 = !DILocation(line: 955, column: 9, scope: !13986)
!13988 = distinct !{!13988, !13446}
!13989 = !DILocation(line: 992, column: 13, scope: !13990)
!13990 = distinct !DILexicalBlock(scope: !13344, file: !1150, line: 992, column: 13)
!13991 = !DILocation(line: 992, column: 18, scope: !13990)
!13992 = !DILocation(line: 992, column: 17, scope: !13990)
!13993 = !DILocation(line: 992, column: 15, scope: !13990)
!13994 = !DILocation(line: 992, column: 13, scope: !13344)
!13995 = !DILocation(line: 993, column: 25, scope: !13990)
!13996 = !DILocation(line: 993, column: 14, scope: !13990)
!13997 = !DILocation(line: 993, column: 23, scope: !13990)
!13998 = !DILocation(line: 993, column: 13, scope: !13990)
!13999 = !DILocation(line: 996, column: 5, scope: !13326)
!14000 = !DILocation(line: 996, column: 12, scope: !14001)
!14001 = !DILexicalBlockFile(scope: !13367, file: !1150, discriminator: 1)
!14002 = !DILocation(line: 996, column: 17, scope: !14001)
!14003 = !DILocation(line: 996, column: 14, scope: !14001)
!14004 = !DILocation(line: 996, column: 5, scope: !14001)
!14005 = !DILocation(line: 997, column: 37, scope: !13366)
!14006 = !DILocation(line: 997, column: 13, scope: !13366)
!14007 = !DILocation(line: 997, column: 16, scope: !13366)
!14008 = !DILocation(line: 997, column: 26, scope: !13366)
!14009 = !DILocation(line: 997, column: 11, scope: !13366)
!14010 = !DILocation(line: 998, column: 19, scope: !13365)
!14011 = !DILocation(line: 998, column: 13, scope: !13365)
!14012 = !DILocation(line: 998, column: 13, scope: !13366)
!14013 = !DILocation(line: 999, column: 71, scope: !13364)
!14014 = !DILocation(line: 999, column: 74, scope: !13364)
!14015 = !DILocation(line: 999, column: 79, scope: !13364)
!14016 = !DILocation(line: 999, column: 89, scope: !13364)
!14017 = !DILocation(line: 999, column: 98, scope: !13364)
!14018 = !DILocation(line: 999, column: 86, scope: !13364)
!14019 = !DILocation(line: 999, column: 107, scope: !13364)
!14020 = !DILocation(line: 999, column: 26, scope: !13364)
!14021 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !13363)
!14022 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !13363)
!14023 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !13363)
!14024 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !13363)
!14025 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !13363)
!14026 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !13363)
!14027 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !13363)
!14028 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !13363)
!14029 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !13363)
!14030 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !13363)
!14031 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !13363)
!14032 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !13363)
!14033 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !13363)
!14034 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !13363)
!14035 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !13363)
!14036 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !13363)
!14037 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !13363)
!14038 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !13363)
!14039 = !DILocation(line: 999, column: 115, scope: !13364)
!14040 = !DILocation(line: 999, column: 124, scope: !13364)
!14041 = !DILocation(line: 999, column: 111, scope: !13364)
!14042 = !DILocation(line: 999, column: 24, scope: !13364)
!14043 = !DILocation(line: 999, column: 143, scope: !13364)
!14044 = !DILocation(line: 999, column: 137, scope: !13364)
!14045 = !DILocation(line: 999, column: 146, scope: !13364)
!14046 = !DILocation(line: 999, column: 135, scope: !13364)
!14047 = !DILocation(line: 999, column: 175, scope: !13364)
!14048 = !DILocation(line: 999, column: 165, scope: !14049)
!14049 = !DILexicalBlockFile(scope: !13364, file: !1150, discriminator: 4)
!14050 = !DILocation(line: 999, column: 205, scope: !13364)
!14051 = !DILocation(line: 999, column: 192, scope: !13364)
!14052 = !DILocation(line: 999, column: 210, scope: !13364)
!14053 = !DILocation(line: 999, column: 208, scope: !13364)
!14054 = !DILocation(line: 999, column: 218, scope: !13364)
!14055 = !DILocation(line: 999, column: 216, scope: !13364)
!14056 = !DILocation(line: 999, column: 188, scope: !13364)
!14057 = !DILocation(line: 999, column: 227, scope: !13364)
!14058 = !DILocation(line: 999, column: 224, scope: !13364)
!14059 = !DILocation(line: 999, column: 159, scope: !13364)
!14060 = !DILocation(line: 999, column: 153, scope: !13364)
!14061 = !DILocation(line: 999, column: 162, scope: !13364)
!14062 = !DILocation(line: 999, column: 244, scope: !13364)
!14063 = !DILocation(line: 999, column: 262, scope: !13364)
!14064 = !DILocation(line: 999, column: 271, scope: !13364)
!14065 = !DILocation(line: 999, column: 259, scope: !13364)
!14066 = !DILocation(line: 999, column: 243, scope: !13364)
!14067 = !DILocation(line: 999, column: 281, scope: !14068)
!14068 = !DILexicalBlockFile(scope: !13364, file: !1150, discriminator: 1)
!14069 = !DILocation(line: 999, column: 290, scope: !14068)
!14070 = !DILocation(line: 999, column: 243, scope: !14068)
!14071 = !DILocation(line: 999, column: 300, scope: !14072)
!14072 = !DILexicalBlockFile(scope: !13364, file: !1150, discriminator: 2)
!14073 = !DILocation(line: 999, column: 243, scope: !14072)
!14074 = !DILocation(line: 999, column: 243, scope: !14075)
!14075 = !DILexicalBlockFile(scope: !13364, file: !1150, discriminator: 3)
!14076 = !DILocation(line: 999, column: 240, scope: !14075)
!14077 = !DILocation(line: 999, column: 317, scope: !14075)
!14078 = !DILocation(line: 1000, column: 5, scope: !13366)
!14079 = !DILocation(line: 996, column: 24, scope: !14080)
!14080 = !DILexicalBlockFile(scope: !13367, file: !1150, discriminator: 2)
!14081 = !DILocation(line: 996, column: 5, scope: !14080)
!14082 = distinct !{!14082, !13999}
!14083 = !DILocation(line: 1001, column: 23, scope: !13326)
!14084 = !DILocation(line: 1001, column: 7, scope: !13326)
!14085 = !DILocation(line: 1001, column: 10, scope: !13326)
!14086 = !DILocation(line: 1001, column: 15, scope: !13326)
!14087 = !DILocation(line: 1001, column: 21, scope: !13326)
!14088 = !DILocation(line: 1003, column: 5, scope: !13326)
!14089 = !DILocation(line: 1004, column: 1, scope: !13326)
!14090 = distinct !DISubprogram(name: "decode_block_progressive", scope: !1150, file: !1150, line: 844, type: !13327, isLocal: true, isDefinition: true, scopeLine: 848, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!14091 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !14092)
!14092 = distinct !DILocation(line: 868, column: 32, scope: !14093)
!14093 = distinct !DILexicalBlock(scope: !14094, file: !1150, line: 867, column: 21)
!14094 = distinct !DILexicalBlock(scope: !14095, file: !1150, line: 865, column: 23)
!14095 = distinct !DILexicalBlock(scope: !14096, file: !1150, line: 865, column: 17)
!14096 = distinct !DILexicalBlock(scope: !14097, file: !1150, line: 859, column: 29)
!14097 = distinct !DILexicalBlock(scope: !14098, file: !1150, line: 859, column: 9)
!14098 = distinct !DILexicalBlock(scope: !14099, file: !1150, line: 859, column: 9)
!14099 = distinct !DILexicalBlock(scope: !14090, file: !1150, line: 857, column: 5)
!14100 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !14101)
!14101 = distinct !DILocation(line: 899, column: 36, scope: !14102)
!14102 = distinct !DILexicalBlock(scope: !14103, file: !1150, line: 898, column: 30)
!14103 = distinct !DILexicalBlock(scope: !14104, file: !1150, line: 898, column: 25)
!14104 = distinct !DILexicalBlock(scope: !14105, file: !1150, line: 896, column: 24)
!14105 = distinct !DILexicalBlock(scope: !14106, file: !1150, line: 890, column: 21)
!14106 = distinct !DILexicalBlock(scope: !14095, file: !1150, line: 889, column: 20)
!14107 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !14108)
!14108 = distinct !DILocation(line: 861, column: 292, scope: !14109)
!14109 = !DILexicalBlockFile(scope: !14110, file: !1150, discriminator: 5)
!14110 = distinct !DILexicalBlock(scope: !14111, file: !1150, line: 861, column: 193)
!14111 = distinct !DILexicalBlock(scope: !14112, file: !1150, line: 861, column: 177)
!14112 = distinct !DILexicalBlock(scope: !14096, file: !1150, line: 861, column: 16)
!14113 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !14114)
!14114 = distinct !DILocation(line: 860, column: 24, scope: !14096)
!14115 = !DILocalVariable(name: "s", arg: 1, scope: !14090, file: !1150, line: 844, type: !1815)
!14116 = !DILocation(line: 844, column: 57, scope: !14090)
!14117 = !DILocalVariable(name: "block", arg: 2, scope: !14090, file: !1150, line: 844, type: !1935)
!14118 = !DILocation(line: 844, column: 69, scope: !14090)
!14119 = !DILocalVariable(name: "last_nnz", arg: 3, scope: !14090, file: !1150, line: 845, type: !1030)
!14120 = !DILocation(line: 845, column: 46, scope: !14090)
!14121 = !DILocalVariable(name: "ac_index", arg: 4, scope: !14090, file: !1150, line: 845, type: !1025)
!14122 = !DILocation(line: 845, column: 60, scope: !14090)
!14123 = !DILocalVariable(name: "quant_matrix", arg: 5, scope: !14090, file: !1150, line: 846, type: !1027)
!14124 = !DILocation(line: 846, column: 47, scope: !14090)
!14125 = !DILocalVariable(name: "ss", arg: 6, scope: !14090, file: !1150, line: 847, type: !1025)
!14126 = !DILocation(line: 847, column: 41, scope: !14090)
!14127 = !DILocalVariable(name: "se", arg: 7, scope: !14090, file: !1150, line: 847, type: !1025)
!14128 = !DILocation(line: 847, column: 49, scope: !14090)
!14129 = !DILocalVariable(name: "Al", arg: 8, scope: !14090, file: !1150, line: 847, type: !1025)
!14130 = !DILocation(line: 847, column: 57, scope: !14090)
!14131 = !DILocalVariable(name: "EOBRUN", arg: 9, scope: !14090, file: !1150, line: 847, type: !1462)
!14132 = !DILocation(line: 847, column: 66, scope: !14090)
!14133 = !DILocalVariable(name: "code", scope: !14090, file: !1150, line: 849, type: !1025)
!14134 = !DILocation(line: 849, column: 9, scope: !14090)
!14135 = !DILocalVariable(name: "i", scope: !14090, file: !1150, line: 849, type: !1025)
!14136 = !DILocation(line: 849, column: 15, scope: !14090)
!14137 = !DILocalVariable(name: "j", scope: !14090, file: !1150, line: 849, type: !1025)
!14138 = !DILocation(line: 849, column: 18, scope: !14090)
!14139 = !DILocalVariable(name: "val", scope: !14090, file: !1150, line: 849, type: !1025)
!14140 = !DILocation(line: 849, column: 21, scope: !14090)
!14141 = !DILocalVariable(name: "run", scope: !14090, file: !1150, line: 849, type: !1025)
!14142 = !DILocation(line: 849, column: 26, scope: !14090)
!14143 = !DILocalVariable(name: "level", scope: !14090, file: !1150, line: 850, type: !1024)
!14144 = !DILocation(line: 850, column: 14, scope: !14090)
!14145 = !DILocation(line: 852, column: 10, scope: !14146)
!14146 = distinct !DILexicalBlock(scope: !14090, file: !1150, line: 852, column: 9)
!14147 = !DILocation(line: 852, column: 9, scope: !14146)
!14148 = !DILocation(line: 852, column: 9, scope: !14090)
!14149 = !DILocation(line: 853, column: 11, scope: !14150)
!14150 = distinct !DILexicalBlock(scope: !14146, file: !1150, line: 852, column: 18)
!14151 = !DILocation(line: 853, column: 18, scope: !14150)
!14152 = !DILocation(line: 854, column: 9, scope: !14150)
!14153 = !DILocalVariable(name: "re_index", scope: !14099, file: !1150, line: 858, type: !1024)
!14154 = !DILocation(line: 858, column: 22, scope: !14099)
!14155 = !DILocation(line: 858, column: 35, scope: !14099)
!14156 = !DILocation(line: 858, column: 38, scope: !14099)
!14157 = !DILocation(line: 858, column: 43, scope: !14099)
!14158 = !DILocalVariable(name: "re_cache", scope: !14099, file: !1150, line: 858, type: !1024)
!14159 = !DILocation(line: 858, column: 87, scope: !14099)
!14160 = !DILocalVariable(name: "re_size_plus8", scope: !14099, file: !1150, line: 858, type: !1024)
!14161 = !DILocation(line: 858, column: 110, scope: !14099)
!14162 = !DILocation(line: 858, column: 128, scope: !14099)
!14163 = !DILocation(line: 858, column: 131, scope: !14099)
!14164 = !DILocation(line: 858, column: 136, scope: !14099)
!14165 = !DILocation(line: 859, column: 18, scope: !14098)
!14166 = !DILocation(line: 859, column: 16, scope: !14098)
!14167 = !DILocation(line: 859, column: 14, scope: !14098)
!14168 = !DILocation(line: 860, column: 69, scope: !14096)
!14169 = !DILocation(line: 860, column: 72, scope: !14096)
!14170 = !DILocation(line: 860, column: 77, scope: !14096)
!14171 = !DILocation(line: 860, column: 87, scope: !14096)
!14172 = !DILocation(line: 860, column: 96, scope: !14096)
!14173 = !DILocation(line: 860, column: 84, scope: !14096)
!14174 = !DILocation(line: 860, column: 105, scope: !14096)
!14175 = !DILocation(line: 860, column: 24, scope: !14096)
!14176 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !14114)
!14177 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !14114)
!14178 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !14114)
!14179 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !14114)
!14180 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !14114)
!14181 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !14114)
!14182 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !14114)
!14183 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !14114)
!14184 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !14114)
!14185 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !14114)
!14186 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !14114)
!14187 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !14114)
!14188 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !14114)
!14189 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !14114)
!14190 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !14114)
!14191 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !14114)
!14192 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !14114)
!14193 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !14114)
!14194 = !DILocation(line: 860, column: 113, scope: !14096)
!14195 = !DILocation(line: 860, column: 122, scope: !14096)
!14196 = !DILocation(line: 860, column: 109, scope: !14096)
!14197 = !DILocation(line: 860, column: 22, scope: !14096)
!14198 = !DILocation(line: 861, column: 13, scope: !14096)
!14199 = distinct !{!14199, !14198}
!14200 = !DILocalVariable(name: "n", scope: !14112, file: !1150, line: 861, type: !1025)
!14201 = !DILocation(line: 861, column: 22, scope: !14112)
!14202 = !DILocalVariable(name: "nb_bits", scope: !14112, file: !1150, line: 861, type: !1025)
!14203 = !DILocation(line: 861, column: 25, scope: !14112)
!14204 = !DILocalVariable(name: "index", scope: !14112, file: !1150, line: 861, type: !1024)
!14205 = !DILocation(line: 861, column: 47, scope: !14112)
!14206 = !DILocation(line: 861, column: 72, scope: !14207)
!14207 = !DILexicalBlockFile(scope: !14112, file: !1150, discriminator: 1)
!14208 = !DILocation(line: 861, column: 62, scope: !14207)
!14209 = !DILocation(line: 861, column: 60, scope: !14207)
!14210 = !DILocation(line: 861, column: 120, scope: !14207)
!14211 = !DILocation(line: 861, column: 93, scope: !14207)
!14212 = !DILocation(line: 861, column: 104, scope: !14207)
!14213 = !DILocation(line: 861, column: 96, scope: !14207)
!14214 = !DILocation(line: 861, column: 114, scope: !14207)
!14215 = !DILocation(line: 861, column: 91, scope: !14207)
!14216 = !DILocation(line: 861, column: 162, scope: !14207)
!14217 = !DILocation(line: 861, column: 135, scope: !14207)
!14218 = !DILocation(line: 861, column: 146, scope: !14207)
!14219 = !DILocation(line: 861, column: 138, scope: !14207)
!14220 = !DILocation(line: 861, column: 156, scope: !14207)
!14221 = !DILocation(line: 861, column: 133, scope: !14207)
!14222 = !DILocation(line: 861, column: 186, scope: !14207)
!14223 = !DILocation(line: 861, column: 188, scope: !14207)
!14224 = !DILocation(line: 861, column: 177, scope: !14207)
!14225 = !DILocation(line: 861, column: 208, scope: !14226)
!14226 = !DILexicalBlockFile(scope: !14110, file: !1150, discriminator: 2)
!14227 = !DILocation(line: 861, column: 226, scope: !14226)
!14228 = !DILocation(line: 861, column: 235, scope: !14226)
!14229 = !DILocation(line: 861, column: 223, scope: !14226)
!14230 = !DILocation(line: 861, column: 207, scope: !14226)
!14231 = !DILocation(line: 861, column: 245, scope: !14232)
!14232 = !DILexicalBlockFile(scope: !14110, file: !1150, discriminator: 3)
!14233 = !DILocation(line: 861, column: 254, scope: !14232)
!14234 = !DILocation(line: 861, column: 207, scope: !14232)
!14235 = !DILocation(line: 861, column: 264, scope: !14236)
!14236 = !DILexicalBlockFile(scope: !14110, file: !1150, discriminator: 4)
!14237 = !DILocation(line: 861, column: 207, scope: !14236)
!14238 = !DILocation(line: 861, column: 207, scope: !14109)
!14239 = !DILocation(line: 861, column: 204, scope: !14109)
!14240 = !DILocation(line: 861, column: 337, scope: !14109)
!14241 = !DILocation(line: 861, column: 340, scope: !14109)
!14242 = !DILocation(line: 861, column: 345, scope: !14109)
!14243 = !DILocation(line: 861, column: 355, scope: !14109)
!14244 = !DILocation(line: 861, column: 364, scope: !14109)
!14245 = !DILocation(line: 861, column: 352, scope: !14109)
!14246 = !DILocation(line: 861, column: 373, scope: !14109)
!14247 = !DILocation(line: 861, column: 292, scope: !14109)
!14248 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !14108)
!14249 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !14108)
!14250 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !14108)
!14251 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !14108)
!14252 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !14108)
!14253 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !14108)
!14254 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !14108)
!14255 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !14108)
!14256 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !14108)
!14257 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !14108)
!14258 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !14108)
!14259 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !14108)
!14260 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !14108)
!14261 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !14108)
!14262 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !14108)
!14263 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !14108)
!14264 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !14108)
!14265 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !14108)
!14266 = !DILocation(line: 861, column: 381, scope: !14109)
!14267 = !DILocation(line: 861, column: 390, scope: !14109)
!14268 = !DILocation(line: 861, column: 377, scope: !14109)
!14269 = !DILocation(line: 861, column: 290, scope: !14109)
!14270 = !DILocation(line: 861, column: 407, scope: !14109)
!14271 = !DILocation(line: 861, column: 406, scope: !14109)
!14272 = !DILocation(line: 861, column: 404, scope: !14109)
!14273 = !DILocation(line: 861, column: 428, scope: !14109)
!14274 = !DILocation(line: 861, column: 438, scope: !14109)
!14275 = !DILocation(line: 861, column: 418, scope: !14276)
!14276 = !DILexicalBlockFile(scope: !14109, file: !1150, discriminator: 12)
!14277 = !DILocation(line: 861, column: 449, scope: !14109)
!14278 = !DILocation(line: 861, column: 447, scope: !14109)
!14279 = !DILocation(line: 861, column: 416, scope: !14109)
!14280 = !DILocation(line: 861, column: 489, scope: !14109)
!14281 = !DILocation(line: 861, column: 462, scope: !14109)
!14282 = !DILocation(line: 861, column: 473, scope: !14109)
!14283 = !DILocation(line: 861, column: 465, scope: !14109)
!14284 = !DILocation(line: 861, column: 483, scope: !14109)
!14285 = !DILocation(line: 861, column: 460, scope: !14109)
!14286 = !DILocation(line: 861, column: 531, scope: !14109)
!14287 = !DILocation(line: 861, column: 504, scope: !14109)
!14288 = !DILocation(line: 861, column: 515, scope: !14109)
!14289 = !DILocation(line: 861, column: 507, scope: !14109)
!14290 = !DILocation(line: 861, column: 525, scope: !14109)
!14291 = !DILocation(line: 861, column: 502, scope: !14109)
!14292 = !DILocation(line: 861, column: 925, scope: !14109)
!14293 = !DILocation(line: 861, column: 927, scope: !14294)
!14294 = !DILexicalBlockFile(scope: !14112, file: !1150, discriminator: 6)
!14295 = distinct !{!14295, !14296}
!14296 = !DILocation(line: 861, column: 927, scope: !14112)
!14297 = !DILocation(line: 861, column: 946, scope: !14298)
!14298 = !DILexicalBlockFile(scope: !14299, file: !1150, discriminator: 7)
!14299 = distinct !DILexicalBlock(scope: !14112, file: !1150, line: 861, column: 930)
!14300 = !DILocation(line: 861, column: 941, scope: !14298)
!14301 = !DILocation(line: 861, column: 963, scope: !14298)
!14302 = !DILocation(line: 861, column: 981, scope: !14298)
!14303 = !DILocation(line: 861, column: 993, scope: !14298)
!14304 = !DILocation(line: 861, column: 990, scope: !14298)
!14305 = !DILocation(line: 861, column: 978, scope: !14298)
!14306 = !DILocation(line: 861, column: 962, scope: !14298)
!14307 = !DILocation(line: 861, column: 1000, scope: !14308)
!14308 = !DILexicalBlockFile(scope: !14299, file: !1150, discriminator: 8)
!14309 = !DILocation(line: 861, column: 1012, scope: !14308)
!14310 = !DILocation(line: 861, column: 1009, scope: !14308)
!14311 = !DILocation(line: 861, column: 962, scope: !14308)
!14312 = !DILocation(line: 861, column: 1019, scope: !14313)
!14313 = !DILexicalBlockFile(scope: !14299, file: !1150, discriminator: 9)
!14314 = !DILocation(line: 861, column: 962, scope: !14313)
!14315 = !DILocation(line: 861, column: 962, scope: !14316)
!14316 = !DILexicalBlockFile(scope: !14299, file: !1150, discriminator: 10)
!14317 = !DILocation(line: 861, column: 959, scope: !14316)
!14318 = !DILocation(line: 861, column: 1036, scope: !14316)
!14319 = !DILocation(line: 861, column: 1049, scope: !14320)
!14320 = !DILexicalBlockFile(scope: !14112, file: !1150, discriminator: 11)
!14321 = !DILocation(line: 863, column: 31, scope: !14096)
!14322 = !DILocation(line: 863, column: 37, scope: !14096)
!14323 = !DILocation(line: 863, column: 17, scope: !14096)
!14324 = !DILocation(line: 864, column: 18, scope: !14096)
!14325 = !DILocation(line: 865, column: 17, scope: !14095)
!14326 = !DILocation(line: 865, column: 17, scope: !14096)
!14327 = !DILocation(line: 866, column: 22, scope: !14094)
!14328 = !DILocation(line: 866, column: 19, scope: !14094)
!14329 = !DILocation(line: 867, column: 21, scope: !14093)
!14330 = !DILocation(line: 867, column: 26, scope: !14093)
!14331 = !DILocation(line: 867, column: 21, scope: !14094)
!14332 = !DILocation(line: 868, column: 77, scope: !14093)
!14333 = !DILocation(line: 868, column: 80, scope: !14093)
!14334 = !DILocation(line: 868, column: 85, scope: !14093)
!14335 = !DILocation(line: 868, column: 95, scope: !14093)
!14336 = !DILocation(line: 868, column: 104, scope: !14093)
!14337 = !DILocation(line: 868, column: 92, scope: !14093)
!14338 = !DILocation(line: 868, column: 113, scope: !14093)
!14339 = !DILocation(line: 868, column: 32, scope: !14093)
!14340 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !14092)
!14341 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !14092)
!14342 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !14092)
!14343 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !14092)
!14344 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !14092)
!14345 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !14092)
!14346 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !14092)
!14347 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !14092)
!14348 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !14092)
!14349 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !14092)
!14350 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !14092)
!14351 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !14092)
!14352 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !14092)
!14353 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !14092)
!14354 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !14092)
!14355 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !14092)
!14356 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !14092)
!14357 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !14092)
!14358 = !DILocation(line: 868, column: 121, scope: !14093)
!14359 = !DILocation(line: 868, column: 130, scope: !14093)
!14360 = !DILocation(line: 868, column: 117, scope: !14093)
!14361 = !DILocation(line: 868, column: 30, scope: !14093)
!14362 = !DILocation(line: 868, column: 21, scope: !14093)
!14363 = !DILocalVariable(name: "cache", scope: !14364, file: !1150, line: 871, type: !1025)
!14364 = distinct !DILexicalBlock(scope: !14094, file: !1150, line: 870, column: 17)
!14365 = !DILocation(line: 871, column: 25, scope: !14364)
!14366 = !DILocation(line: 871, column: 45, scope: !14364)
!14367 = !DILocalVariable(name: "sign", scope: !14364, file: !1150, line: 872, type: !1025)
!14368 = !DILocation(line: 872, column: 25, scope: !14364)
!14369 = !DILocation(line: 872, column: 34, scope: !14364)
!14370 = !DILocation(line: 872, column: 33, scope: !14364)
!14371 = !DILocation(line: 872, column: 41, scope: !14364)
!14372 = !DILocation(line: 873, column: 40, scope: !14364)
!14373 = !DILocation(line: 873, column: 47, scope: !14364)
!14374 = !DILocation(line: 873, column: 45, scope: !14364)
!14375 = !DILocation(line: 873, column: 53, scope: !14364)
!14376 = !DILocation(line: 873, column: 30, scope: !14364)
!14377 = !DILocation(line: 873, column: 61, scope: !14364)
!14378 = !DILocation(line: 873, column: 59, scope: !14364)
!14379 = !DILocation(line: 873, column: 69, scope: !14364)
!14380 = !DILocation(line: 873, column: 67, scope: !14364)
!14381 = !DILocation(line: 873, column: 27, scope: !14364)
!14382 = !DILocation(line: 876, column: 30, scope: !14094)
!14383 = !DILocation(line: 876, column: 48, scope: !14094)
!14384 = !DILocation(line: 876, column: 60, scope: !14094)
!14385 = !DILocation(line: 876, column: 57, scope: !14094)
!14386 = !DILocation(line: 876, column: 45, scope: !14094)
!14387 = !DILocation(line: 876, column: 29, scope: !14094)
!14388 = !DILocation(line: 876, column: 70, scope: !14389)
!14389 = !DILexicalBlockFile(scope: !14094, file: !1150, discriminator: 1)
!14390 = !DILocation(line: 876, column: 82, scope: !14389)
!14391 = !DILocation(line: 876, column: 79, scope: !14389)
!14392 = !DILocation(line: 876, column: 29, scope: !14389)
!14393 = !DILocation(line: 876, column: 92, scope: !14394)
!14394 = !DILexicalBlockFile(scope: !14094, file: !1150, discriminator: 2)
!14395 = !DILocation(line: 876, column: 29, scope: !14394)
!14396 = !DILocation(line: 876, column: 29, scope: !14397)
!14397 = !DILexicalBlockFile(scope: !14094, file: !1150, discriminator: 3)
!14398 = !DILocation(line: 876, column: 26, scope: !14397)
!14399 = !DILocation(line: 878, column: 21, scope: !14400)
!14400 = distinct !DILexicalBlock(scope: !14094, file: !1150, line: 878, column: 21)
!14401 = !DILocation(line: 878, column: 26, scope: !14400)
!14402 = !DILocation(line: 878, column: 23, scope: !14400)
!14403 = !DILocation(line: 878, column: 21, scope: !14094)
!14404 = !DILocation(line: 879, column: 25, scope: !14405)
!14405 = distinct !DILexicalBlock(scope: !14406, file: !1150, line: 879, column: 25)
!14406 = distinct !DILexicalBlock(scope: !14400, file: !1150, line: 878, column: 30)
!14407 = !DILocation(line: 879, column: 30, scope: !14405)
!14408 = !DILocation(line: 879, column: 27, scope: !14405)
!14409 = !DILocation(line: 879, column: 25, scope: !14406)
!14410 = !DILocation(line: 880, column: 53, scope: !14411)
!14411 = distinct !DILexicalBlock(scope: !14405, file: !1150, line: 879, column: 34)
!14412 = !DILocation(line: 880, column: 29, scope: !14411)
!14413 = !DILocation(line: 880, column: 32, scope: !14411)
!14414 = !DILocation(line: 880, column: 42, scope: !14411)
!14415 = !DILocation(line: 880, column: 27, scope: !14411)
!14416 = !DILocation(line: 881, column: 36, scope: !14411)
!14417 = !DILocation(line: 881, column: 58, scope: !14411)
!14418 = !DILocation(line: 881, column: 45, scope: !14411)
!14419 = !DILocation(line: 881, column: 65, scope: !14411)
!14420 = !DILocation(line: 881, column: 62, scope: !14411)
!14421 = !DILocation(line: 881, column: 42, scope: !14411)
!14422 = !DILocation(line: 881, column: 31, scope: !14411)
!14423 = !DILocation(line: 881, column: 25, scope: !14411)
!14424 = !DILocation(line: 881, column: 34, scope: !14411)
!14425 = !DILocation(line: 882, column: 25, scope: !14411)
!14426 = !DILocation(line: 884, column: 28, scope: !14406)
!14427 = !DILocation(line: 884, column: 31, scope: !14406)
!14428 = !DILocation(line: 884, column: 63, scope: !14406)
!14429 = !DILocation(line: 884, column: 21, scope: !14406)
!14430 = !DILocation(line: 885, column: 21, scope: !14406)
!14431 = !DILocation(line: 887, column: 45, scope: !14094)
!14432 = !DILocation(line: 887, column: 21, scope: !14094)
!14433 = !DILocation(line: 887, column: 24, scope: !14094)
!14434 = !DILocation(line: 887, column: 34, scope: !14094)
!14435 = !DILocation(line: 887, column: 19, scope: !14094)
!14436 = !DILocation(line: 888, column: 28, scope: !14094)
!14437 = !DILocation(line: 888, column: 50, scope: !14094)
!14438 = !DILocation(line: 888, column: 37, scope: !14094)
!14439 = !DILocation(line: 888, column: 56, scope: !14094)
!14440 = !DILocation(line: 888, column: 53, scope: !14094)
!14441 = !DILocation(line: 888, column: 34, scope: !14094)
!14442 = !DILocation(line: 888, column: 23, scope: !14094)
!14443 = !DILocation(line: 888, column: 17, scope: !14094)
!14444 = !DILocation(line: 888, column: 26, scope: !14094)
!14445 = !DILocation(line: 889, column: 13, scope: !14094)
!14446 = !DILocation(line: 890, column: 21, scope: !14105)
!14447 = !DILocation(line: 890, column: 25, scope: !14105)
!14448 = !DILocation(line: 890, column: 21, scope: !14106)
!14449 = !DILocation(line: 891, column: 23, scope: !14450)
!14450 = distinct !DILexicalBlock(scope: !14105, file: !1150, line: 890, column: 33)
!14451 = !DILocation(line: 892, column: 25, scope: !14452)
!14452 = distinct !DILexicalBlock(scope: !14450, file: !1150, line: 892, column: 25)
!14453 = !DILocation(line: 892, column: 30, scope: !14452)
!14454 = !DILocation(line: 892, column: 27, scope: !14452)
!14455 = !DILocation(line: 892, column: 25, scope: !14450)
!14456 = !DILocation(line: 893, column: 32, scope: !14457)
!14457 = distinct !DILexicalBlock(scope: !14452, file: !1150, line: 892, column: 34)
!14458 = !DILocation(line: 893, column: 35, scope: !14457)
!14459 = !DILocation(line: 893, column: 68, scope: !14457)
!14460 = !DILocation(line: 893, column: 25, scope: !14457)
!14461 = !DILocation(line: 894, column: 25, scope: !14457)
!14462 = !DILocation(line: 896, column: 17, scope: !14450)
!14463 = !DILocation(line: 897, column: 33, scope: !14104)
!14464 = !DILocation(line: 897, column: 30, scope: !14104)
!14465 = !DILocation(line: 897, column: 25, scope: !14104)
!14466 = !DILocation(line: 898, column: 25, scope: !14103)
!14467 = !DILocation(line: 898, column: 25, scope: !14104)
!14468 = !DILocation(line: 899, column: 81, scope: !14102)
!14469 = !DILocation(line: 899, column: 84, scope: !14102)
!14470 = !DILocation(line: 899, column: 89, scope: !14102)
!14471 = !DILocation(line: 899, column: 99, scope: !14102)
!14472 = !DILocation(line: 899, column: 108, scope: !14102)
!14473 = !DILocation(line: 899, column: 96, scope: !14102)
!14474 = !DILocation(line: 899, column: 117, scope: !14102)
!14475 = !DILocation(line: 899, column: 36, scope: !14102)
!14476 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !14101)
!14477 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !14101)
!14478 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !14101)
!14479 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !14101)
!14480 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !14101)
!14481 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !14101)
!14482 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !14101)
!14483 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !14101)
!14484 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !14101)
!14485 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !14101)
!14486 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !14101)
!14487 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !14101)
!14488 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !14101)
!14489 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !14101)
!14490 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !14101)
!14491 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !14101)
!14492 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !14101)
!14493 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !14101)
!14494 = !DILocation(line: 899, column: 125, scope: !14102)
!14495 = !DILocation(line: 899, column: 134, scope: !14102)
!14496 = !DILocation(line: 899, column: 121, scope: !14102)
!14497 = !DILocation(line: 899, column: 34, scope: !14102)
!14498 = !DILocation(line: 900, column: 54, scope: !14102)
!14499 = !DILocation(line: 900, column: 65, scope: !14102)
!14500 = !DILocation(line: 900, column: 32, scope: !14102)
!14501 = !DILocation(line: 900, column: 29, scope: !14102)
!14502 = !DILocation(line: 901, column: 38, scope: !14102)
!14503 = !DILocation(line: 901, column: 56, scope: !14102)
!14504 = !DILocation(line: 901, column: 68, scope: !14102)
!14505 = !DILocation(line: 901, column: 65, scope: !14102)
!14506 = !DILocation(line: 901, column: 53, scope: !14102)
!14507 = !DILocation(line: 901, column: 37, scope: !14102)
!14508 = !DILocation(line: 901, column: 77, scope: !14509)
!14509 = !DILexicalBlockFile(scope: !14102, file: !1150, discriminator: 1)
!14510 = !DILocation(line: 901, column: 89, scope: !14509)
!14511 = !DILocation(line: 901, column: 86, scope: !14509)
!14512 = !DILocation(line: 901, column: 37, scope: !14509)
!14513 = !DILocation(line: 901, column: 98, scope: !14514)
!14514 = !DILexicalBlockFile(scope: !14102, file: !1150, discriminator: 2)
!14515 = !DILocation(line: 901, column: 37, scope: !14514)
!14516 = !DILocation(line: 901, column: 37, scope: !14517)
!14517 = !DILexicalBlockFile(scope: !14102, file: !1150, discriminator: 3)
!14518 = !DILocation(line: 901, column: 34, scope: !14517)
!14519 = !DILocation(line: 902, column: 21, scope: !14102)
!14520 = !DILocation(line: 903, column: 31, scope: !14104)
!14521 = !DILocation(line: 903, column: 35, scope: !14104)
!14522 = !DILocation(line: 903, column: 22, scope: !14104)
!14523 = !DILocation(line: 903, column: 29, scope: !14104)
!14524 = !DILocation(line: 904, column: 21, scope: !14104)
!14525 = !DILocation(line: 907, column: 9, scope: !14096)
!14526 = !DILocation(line: 859, column: 25, scope: !14527)
!14527 = !DILexicalBlockFile(scope: !14097, file: !1150, discriminator: 1)
!14528 = !DILocation(line: 859, column: 9, scope: !14527)
!14529 = distinct !{!14529, !14530}
!14530 = !DILocation(line: 859, column: 9, scope: !14099)
!14531 = !DILocation(line: 908, column: 27, scope: !14099)
!14532 = !DILocation(line: 908, column: 11, scope: !14099)
!14533 = !DILocation(line: 908, column: 14, scope: !14099)
!14534 = !DILocation(line: 908, column: 19, scope: !14099)
!14535 = !DILocation(line: 908, column: 25, scope: !14099)
!14536 = !DILocation(line: 911, column: 9, scope: !14537)
!14537 = distinct !DILexicalBlock(scope: !14090, file: !1150, line: 911, column: 9)
!14538 = !DILocation(line: 911, column: 14, scope: !14537)
!14539 = !DILocation(line: 911, column: 13, scope: !14537)
!14540 = !DILocation(line: 911, column: 11, scope: !14537)
!14541 = !DILocation(line: 911, column: 9, scope: !14090)
!14542 = !DILocation(line: 912, column: 21, scope: !14537)
!14543 = !DILocation(line: 912, column: 10, scope: !14537)
!14544 = !DILocation(line: 912, column: 19, scope: !14537)
!14545 = !DILocation(line: 912, column: 9, scope: !14537)
!14546 = !DILocation(line: 914, column: 5, scope: !14090)
!14547 = !DILocation(line: 915, column: 1, scope: !14090)
!14548 = distinct !DISubprogram(name: "handle_rstn", scope: !1150, file: !1150, line: 1008, type: !12943, isLocal: true, isDefinition: true, scopeLine: 1009, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!14549 = !DILocalVariable(name: "s", arg: 1, scope: !14548, file: !1150, line: 1008, type: !1815)
!14550 = !DILocation(line: 1008, column: 44, scope: !14548)
!14551 = !DILocalVariable(name: "nb_components", arg: 2, scope: !14548, file: !1150, line: 1008, type: !1025)
!14552 = !DILocation(line: 1008, column: 51, scope: !14548)
!14553 = !DILocalVariable(name: "i", scope: !14548, file: !1150, line: 1010, type: !1025)
!14554 = !DILocation(line: 1010, column: 9, scope: !14548)
!14555 = !DILocalVariable(name: "reset", scope: !14548, file: !1150, line: 1011, type: !1025)
!14556 = !DILocation(line: 1011, column: 9, scope: !14548)
!14557 = !DILocation(line: 1013, column: 9, scope: !14558)
!14558 = distinct !DILexicalBlock(scope: !14548, file: !1150, line: 1013, column: 9)
!14559 = !DILocation(line: 1013, column: 12, scope: !14558)
!14560 = !DILocation(line: 1013, column: 9, scope: !14548)
!14561 = !DILocation(line: 1014, column: 9, scope: !14562)
!14562 = distinct !DILexicalBlock(scope: !14558, file: !1150, line: 1013, column: 30)
!14563 = !DILocation(line: 1014, column: 12, scope: !14562)
!14564 = !DILocation(line: 1014, column: 25, scope: !14562)
!14565 = !DILocation(line: 1015, column: 12, scope: !14566)
!14566 = distinct !DILexicalBlock(scope: !14562, file: !1150, line: 1015, column: 12)
!14567 = !DILocation(line: 1015, column: 15, scope: !14566)
!14568 = !DILocation(line: 1015, column: 29, scope: !14566)
!14569 = !DILocation(line: 1015, column: 34, scope: !14566)
!14570 = !DILocation(line: 1015, column: 37, scope: !14571)
!14571 = !DILexicalBlockFile(scope: !14566, file: !1150, discriminator: 1)
!14572 = !DILocation(line: 1015, column: 40, scope: !14571)
!14573 = !DILocation(line: 1015, column: 47, scope: !14571)
!14574 = !DILocation(line: 1015, column: 56, scope: !14571)
!14575 = !DILocation(line: 1015, column: 12, scope: !14571)
!14576 = !DILocation(line: 1016, column: 29, scope: !14577)
!14577 = distinct !DILexicalBlock(scope: !14566, file: !1150, line: 1015, column: 75)
!14578 = !DILocation(line: 1016, column: 32, scope: !14577)
!14579 = !DILocation(line: 1016, column: 13, scope: !14577)
!14580 = !DILocation(line: 1017, column: 20, scope: !14581)
!14581 = distinct !DILexicalBlock(scope: !14577, file: !1150, line: 1017, column: 13)
!14582 = !DILocation(line: 1017, column: 18, scope: !14581)
!14583 = !DILocation(line: 1017, column: 25, scope: !14584)
!14584 = !DILexicalBlockFile(scope: !14585, file: !1150, discriminator: 1)
!14585 = distinct !DILexicalBlock(scope: !14581, file: !1150, line: 1017, column: 13)
!14586 = !DILocation(line: 1017, column: 29, scope: !14584)
!14587 = !DILocation(line: 1017, column: 27, scope: !14584)
!14588 = !DILocation(line: 1017, column: 13, scope: !14584)
!14589 = !DILocation(line: 1018, column: 39, scope: !14585)
!14590 = !DILocation(line: 1018, column: 42, scope: !14585)
!14591 = !DILocation(line: 1018, column: 36, scope: !14585)
!14592 = !DILocation(line: 1018, column: 28, scope: !14585)
!14593 = !DILocation(line: 1018, column: 17, scope: !14585)
!14594 = !DILocation(line: 1018, column: 20, scope: !14585)
!14595 = !DILocation(line: 1018, column: 31, scope: !14585)
!14596 = !DILocation(line: 1017, column: 45, scope: !14597)
!14597 = !DILexicalBlockFile(scope: !14585, file: !1150, discriminator: 2)
!14598 = !DILocation(line: 1017, column: 13, scope: !14597)
!14599 = distinct !{!14599, !14600}
!14600 = !DILocation(line: 1017, column: 13, scope: !14577)
!14601 = !DILocation(line: 1019, column: 9, scope: !14577)
!14602 = !DILocation(line: 1021, column: 36, scope: !14562)
!14603 = !DILocation(line: 1021, column: 39, scope: !14562)
!14604 = !DILocation(line: 1021, column: 20, scope: !14562)
!14605 = !DILocation(line: 1021, column: 19, scope: !14562)
!14606 = !DILocation(line: 1021, column: 44, scope: !14562)
!14607 = !DILocation(line: 1021, column: 15, scope: !14562)
!14608 = !DILocation(line: 1021, column: 11, scope: !14562)
!14609 = !DILocation(line: 1023, column: 13, scope: !14610)
!14610 = distinct !DILexicalBlock(scope: !14562, file: !1150, line: 1023, column: 13)
!14611 = !DILocation(line: 1023, column: 16, scope: !14610)
!14612 = !DILocation(line: 1023, column: 30, scope: !14610)
!14613 = !DILocation(line: 1023, column: 13, scope: !14562)
!14614 = !DILocation(line: 1024, column: 28, scope: !14615)
!14615 = distinct !DILexicalBlock(scope: !14616, file: !1150, line: 1024, column: 17)
!14616 = distinct !DILexicalBlock(scope: !14610, file: !1150, line: 1023, column: 36)
!14617 = !DILocation(line: 1024, column: 31, scope: !14615)
!14618 = !DILocation(line: 1024, column: 35, scope: !14615)
!14619 = !DILocation(line: 1024, column: 17, scope: !14615)
!14620 = !DILocation(line: 1024, column: 47, scope: !14615)
!14621 = !DILocation(line: 1024, column: 44, scope: !14615)
!14622 = !DILocation(line: 1024, column: 50, scope: !14615)
!14623 = !DILocation(line: 1024, column: 38, scope: !14615)
!14624 = !DILocation(line: 1025, column: 16, scope: !14615)
!14625 = !DILocation(line: 1025, column: 30, scope: !14626)
!14626 = !DILexicalBlockFile(scope: !14615, file: !1150, discriminator: 1)
!14627 = !DILocation(line: 1025, column: 33, scope: !14626)
!14628 = !DILocation(line: 1025, column: 37, scope: !14626)
!14629 = !DILocation(line: 1025, column: 19, scope: !14626)
!14630 = !DILocation(line: 1025, column: 40, scope: !14626)
!14631 = !DILocation(line: 1024, column: 17, scope: !14632)
!14632 = !DILexicalBlockFile(scope: !14616, file: !1150, discriminator: 1)
!14633 = !DILocalVariable(name: "pos", scope: !14634, file: !1150, line: 1026, type: !1025)
!14634 = distinct !DILexicalBlock(scope: !14615, file: !1150, line: 1025, column: 49)
!14635 = !DILocation(line: 1026, column: 21, scope: !14634)
!14636 = !DILocation(line: 1026, column: 43, scope: !14634)
!14637 = !DILocation(line: 1026, column: 46, scope: !14634)
!14638 = !DILocation(line: 1026, column: 27, scope: !14634)
!14639 = !DILocation(line: 1027, column: 33, scope: !14634)
!14640 = !DILocation(line: 1027, column: 36, scope: !14634)
!14641 = !DILocation(line: 1027, column: 17, scope: !14634)
!14642 = !DILocation(line: 1028, column: 17, scope: !14634)
!14643 = !DILocation(line: 1028, column: 39, scope: !14644)
!14644 = !DILexicalBlockFile(scope: !14634, file: !1150, discriminator: 1)
!14645 = !DILocation(line: 1028, column: 42, scope: !14644)
!14646 = !DILocation(line: 1028, column: 24, scope: !14644)
!14647 = !DILocation(line: 1028, column: 46, scope: !14644)
!14648 = !DILocation(line: 1028, column: 51, scope: !14644)
!14649 = !DILocation(line: 1028, column: 65, scope: !14650)
!14650 = !DILexicalBlockFile(scope: !14634, file: !1150, discriminator: 2)
!14651 = !DILocation(line: 1028, column: 68, scope: !14650)
!14652 = !DILocation(line: 1028, column: 54, scope: !14650)
!14653 = !DILocation(line: 1028, column: 75, scope: !14650)
!14654 = !DILocation(line: 1028, column: 17, scope: !14655)
!14655 = !DILexicalBlockFile(scope: !14634, file: !1150, discriminator: 3)
!14656 = !DILocation(line: 1029, column: 32, scope: !14634)
!14657 = !DILocation(line: 1029, column: 35, scope: !14634)
!14658 = !DILocation(line: 1029, column: 21, scope: !14634)
!14659 = !DILocation(line: 1028, column: 17, scope: !14660)
!14660 = !DILexicalBlockFile(scope: !14634, file: !1150, discriminator: 4)
!14661 = distinct !{!14661, !14642}
!14662 = !DILocation(line: 1030, column: 36, scope: !14663)
!14663 = distinct !DILexicalBlock(scope: !14634, file: !1150, line: 1030, column: 21)
!14664 = !DILocation(line: 1030, column: 39, scope: !14663)
!14665 = !DILocation(line: 1030, column: 21, scope: !14663)
!14666 = !DILocation(line: 1030, column: 43, scope: !14663)
!14667 = !DILocation(line: 1030, column: 48, scope: !14663)
!14668 = !DILocation(line: 1030, column: 62, scope: !14669)
!14669 = !DILexicalBlockFile(scope: !14663, file: !1150, discriminator: 1)
!14670 = !DILocation(line: 1030, column: 65, scope: !14669)
!14671 = !DILocation(line: 1030, column: 52, scope: !14669)
!14672 = !DILocation(line: 1030, column: 72, scope: !14669)
!14673 = !DILocation(line: 1030, column: 80, scope: !14669)
!14674 = !DILocation(line: 1030, column: 21, scope: !14669)
!14675 = !DILocation(line: 1031, column: 28, scope: !14676)
!14676 = distinct !DILexicalBlock(scope: !14677, file: !1150, line: 1031, column: 21)
!14677 = distinct !DILexicalBlock(scope: !14663, file: !1150, line: 1030, column: 89)
!14678 = !DILocation(line: 1031, column: 26, scope: !14676)
!14679 = !DILocation(line: 1031, column: 33, scope: !14680)
!14680 = !DILexicalBlockFile(scope: !14681, file: !1150, discriminator: 1)
!14681 = distinct !DILexicalBlock(scope: !14676, file: !1150, line: 1031, column: 21)
!14682 = !DILocation(line: 1031, column: 37, scope: !14680)
!14683 = !DILocation(line: 1031, column: 35, scope: !14680)
!14684 = !DILocation(line: 1031, column: 21, scope: !14680)
!14685 = !DILocation(line: 1032, column: 47, scope: !14681)
!14686 = !DILocation(line: 1032, column: 50, scope: !14681)
!14687 = !DILocation(line: 1032, column: 44, scope: !14681)
!14688 = !DILocation(line: 1032, column: 36, scope: !14681)
!14689 = !DILocation(line: 1032, column: 25, scope: !14681)
!14690 = !DILocation(line: 1032, column: 28, scope: !14681)
!14691 = !DILocation(line: 1032, column: 39, scope: !14681)
!14692 = !DILocation(line: 1031, column: 53, scope: !14693)
!14693 = !DILexicalBlockFile(scope: !14681, file: !1150, discriminator: 2)
!14694 = !DILocation(line: 1031, column: 21, scope: !14693)
!14695 = distinct !{!14695, !14696}
!14696 = !DILocation(line: 1031, column: 21, scope: !14677)
!14697 = !DILocation(line: 1033, column: 27, scope: !14677)
!14698 = !DILocation(line: 1034, column: 17, scope: !14677)
!14699 = !DILocation(line: 1035, column: 37, scope: !14663)
!14700 = !DILocation(line: 1035, column: 40, scope: !14663)
!14701 = !DILocation(line: 1035, column: 44, scope: !14663)
!14702 = !DILocation(line: 1035, column: 66, scope: !14663)
!14703 = !DILocation(line: 1035, column: 69, scope: !14663)
!14704 = !DILocation(line: 1035, column: 50, scope: !14663)
!14705 = !DILocation(line: 1035, column: 48, scope: !14663)
!14706 = !DILocation(line: 1035, column: 21, scope: !14669)
!14707 = !DILocation(line: 1036, column: 13, scope: !14634)
!14708 = !DILocation(line: 1037, column: 9, scope: !14616)
!14709 = !DILocation(line: 1038, column: 5, scope: !14562)
!14710 = !DILocation(line: 1039, column: 12, scope: !14548)
!14711 = !DILocation(line: 1039, column: 5, scope: !14548)
!14712 = distinct !DISubprogram(name: "skip_bits_long", scope: !1825, file: !1825, line: 293, type: !5637, isLocal: true, isDefinition: true, scopeLine: 294, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!14713 = !DILocation(line: 127, column: 87, scope: !11155, inlinedAt: !14714)
!14714 = distinct !DILocation(line: 301, column: 17, scope: !14712)
!14715 = !DILocation(line: 127, column: 94, scope: !11155, inlinedAt: !14714)
!14716 = !DILocation(line: 127, column: 104, scope: !11155, inlinedAt: !14714)
!14717 = !DILocalVariable(name: "s", arg: 1, scope: !14712, file: !1825, line: 293, type: !2362)
!14718 = !DILocation(line: 293, column: 50, scope: !14712)
!14719 = !DILocalVariable(name: "n", arg: 2, scope: !14712, file: !1825, line: 293, type: !1025)
!14720 = !DILocation(line: 293, column: 57, scope: !14712)
!14721 = !DILocation(line: 301, column: 27, scope: !14712)
!14722 = !DILocation(line: 301, column: 31, scope: !14712)
!14723 = !DILocation(line: 301, column: 34, scope: !14712)
!14724 = !DILocation(line: 301, column: 30, scope: !14712)
!14725 = !DILocation(line: 301, column: 41, scope: !14712)
!14726 = !DILocation(line: 301, column: 44, scope: !14712)
!14727 = !DILocation(line: 301, column: 65, scope: !14712)
!14728 = !DILocation(line: 301, column: 68, scope: !14712)
!14729 = !DILocation(line: 301, column: 63, scope: !14712)
!14730 = !DILocation(line: 301, column: 17, scope: !14712)
!14731 = !DILocation(line: 132, column: 9, scope: !11968, inlinedAt: !14714)
!14732 = !DILocation(line: 132, column: 13, scope: !11968, inlinedAt: !14714)
!14733 = !DILocation(line: 132, column: 11, scope: !11968, inlinedAt: !14714)
!14734 = !DILocation(line: 132, column: 9, scope: !11155, inlinedAt: !14714)
!14735 = !DILocation(line: 132, column: 26, scope: !11973, inlinedAt: !14714)
!14736 = !DILocation(line: 132, column: 19, scope: !11973, inlinedAt: !14714)
!14737 = !DILocation(line: 133, column: 14, scope: !11976, inlinedAt: !14714)
!14738 = !DILocation(line: 133, column: 18, scope: !11976, inlinedAt: !14714)
!14739 = !DILocation(line: 133, column: 16, scope: !11976, inlinedAt: !14714)
!14740 = !DILocation(line: 133, column: 14, scope: !11968, inlinedAt: !14714)
!14741 = !DILocation(line: 133, column: 31, scope: !11981, inlinedAt: !14714)
!14742 = !DILocation(line: 133, column: 24, scope: !11981, inlinedAt: !14714)
!14743 = !DILocation(line: 134, column: 17, scope: !11976, inlinedAt: !14714)
!14744 = !DILocation(line: 134, column: 10, scope: !11976, inlinedAt: !14714)
!14745 = !DILocation(line: 135, column: 1, scope: !11155, inlinedAt: !14714)
!14746 = !DILocation(line: 301, column: 5, scope: !14712)
!14747 = !DILocation(line: 301, column: 8, scope: !14712)
!14748 = !DILocation(line: 301, column: 14, scope: !14712)
!14749 = !DILocation(line: 304, column: 1, scope: !14712)
!14750 = distinct !DISubprogram(name: "get_bits1", scope: !1825, file: !1825, line: 487, type: !14751, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!14751 = !DISubroutineType(types: !14752)
!14752 = !{!1024, !2362}
!14753 = !DILocalVariable(name: "s", arg: 1, scope: !14750, file: !1825, line: 487, type: !2362)
!14754 = !DILocation(line: 487, column: 53, scope: !14750)
!14755 = !DILocalVariable(name: "index", scope: !14750, file: !1825, line: 499, type: !1024)
!14756 = !DILocation(line: 499, column: 18, scope: !14750)
!14757 = !DILocation(line: 499, column: 26, scope: !14750)
!14758 = !DILocation(line: 499, column: 29, scope: !14750)
!14759 = !DILocalVariable(name: "result", scope: !14750, file: !1825, line: 500, type: !1031)
!14760 = !DILocation(line: 500, column: 13, scope: !14750)
!14761 = !DILocation(line: 500, column: 32, scope: !14750)
!14762 = !DILocation(line: 500, column: 38, scope: !14750)
!14763 = !DILocation(line: 500, column: 22, scope: !14750)
!14764 = !DILocation(line: 500, column: 25, scope: !14750)
!14765 = !DILocation(line: 505, column: 16, scope: !14750)
!14766 = !DILocation(line: 505, column: 22, scope: !14750)
!14767 = !DILocation(line: 505, column: 12, scope: !14750)
!14768 = !DILocation(line: 506, column: 12, scope: !14750)
!14769 = !DILocation(line: 509, column: 9, scope: !14770)
!14770 = distinct !DILexicalBlock(scope: !14750, file: !1825, line: 509, column: 9)
!14771 = !DILocation(line: 509, column: 12, scope: !14770)
!14772 = !DILocation(line: 509, column: 20, scope: !14770)
!14773 = !DILocation(line: 509, column: 23, scope: !14770)
!14774 = !DILocation(line: 509, column: 18, scope: !14770)
!14775 = !DILocation(line: 509, column: 9, scope: !14750)
!14776 = !DILocation(line: 511, column: 14, scope: !14770)
!14777 = !DILocation(line: 511, column: 9, scope: !14770)
!14778 = !DILocation(line: 512, column: 16, scope: !14750)
!14779 = !DILocation(line: 512, column: 5, scope: !14750)
!14780 = !DILocation(line: 512, column: 8, scope: !14750)
!14781 = !DILocation(line: 512, column: 14, scope: !14750)
!14782 = !DILocation(line: 514, column: 12, scope: !14750)
!14783 = !DILocation(line: 514, column: 5, scope: !14750)
!14784 = distinct !DISubprogram(name: "decode_block", scope: !1150, file: !1150, line: 777, type: !14785, isLocal: true, isDefinition: true, scopeLine: 779, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!14785 = !DISubroutineType(types: !14786)
!14786 = !{!1025, !1815, !1935, !1025, !1025, !1025, !1027}
!14787 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !14788)
!14788 = distinct !DILocation(line: 797, column: 288, scope: !14789)
!14789 = !DILexicalBlockFile(scope: !14790, file: !1150, discriminator: 5)
!14790 = distinct !DILexicalBlock(scope: !14791, file: !1150, line: 797, column: 189)
!14791 = distinct !DILexicalBlock(scope: !14792, file: !1150, line: 797, column: 173)
!14792 = distinct !DILexicalBlock(scope: !14793, file: !1150, line: 797, column: 12)
!14793 = distinct !DILexicalBlock(scope: !14794, file: !1150, line: 795, column: 8)
!14794 = distinct !DILexicalBlock(scope: !14784, file: !1150, line: 794, column: 5)
!14795 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !14796)
!14796 = distinct !DILocation(line: 803, column: 28, scope: !14797)
!14797 = distinct !DILexicalBlock(scope: !14798, file: !1150, line: 802, column: 17)
!14798 = distinct !DILexicalBlock(scope: !14799, file: !1150, line: 801, column: 19)
!14799 = distinct !DILexicalBlock(scope: !14793, file: !1150, line: 801, column: 13)
!14800 = !DILocation(line: 66, column: 98, scope: !2865, inlinedAt: !14801)
!14801 = distinct !DILocation(line: 796, column: 20, scope: !14793)
!14802 = !DILocalVariable(name: "a", arg: 1, scope: !14803, file: !11156, line: 192, type: !1025)
!14803 = distinct !DISubprogram(name: "av_clip_int16_c", scope: !11156, file: !11156, line: 192, type: !14804, isLocal: true, isDefinition: true, scopeLine: 193, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!14804 = !DISubroutineType(types: !14805)
!14805 = !{!1851, !1025}
!14806 = !DILocation(line: 192, column: 97, scope: !14803, inlinedAt: !14807)
!14807 = distinct !DILocation(line: 789, column: 11, scope: !14784)
!14808 = !DILocalVariable(name: "s", arg: 1, scope: !14784, file: !1150, line: 777, type: !1815)
!14809 = !DILocation(line: 777, column: 45, scope: !14784)
!14810 = !DILocalVariable(name: "block", arg: 2, scope: !14784, file: !1150, line: 777, type: !1935)
!14811 = !DILocation(line: 777, column: 57, scope: !14784)
!14812 = !DILocalVariable(name: "component", arg: 3, scope: !14784, file: !1150, line: 777, type: !1025)
!14813 = !DILocation(line: 777, column: 68, scope: !14784)
!14814 = !DILocalVariable(name: "dc_index", arg: 4, scope: !14784, file: !1150, line: 778, type: !1025)
!14815 = !DILocation(line: 778, column: 29, scope: !14784)
!14816 = !DILocalVariable(name: "ac_index", arg: 5, scope: !14784, file: !1150, line: 778, type: !1025)
!14817 = !DILocation(line: 778, column: 43, scope: !14784)
!14818 = !DILocalVariable(name: "quant_matrix", arg: 6, scope: !14784, file: !1150, line: 778, type: !1027)
!14819 = !DILocation(line: 778, column: 63, scope: !14784)
!14820 = !DILocalVariable(name: "code", scope: !14784, file: !1150, line: 780, type: !1025)
!14821 = !DILocation(line: 780, column: 9, scope: !14784)
!14822 = !DILocalVariable(name: "i", scope: !14784, file: !1150, line: 780, type: !1025)
!14823 = !DILocation(line: 780, column: 15, scope: !14784)
!14824 = !DILocalVariable(name: "j", scope: !14784, file: !1150, line: 780, type: !1025)
!14825 = !DILocation(line: 780, column: 18, scope: !14784)
!14826 = !DILocalVariable(name: "level", scope: !14784, file: !1150, line: 780, type: !1025)
!14827 = !DILocation(line: 780, column: 21, scope: !14784)
!14828 = !DILocalVariable(name: "val", scope: !14784, file: !1150, line: 780, type: !1025)
!14829 = !DILocation(line: 780, column: 28, scope: !14784)
!14830 = !DILocation(line: 783, column: 27, scope: !14784)
!14831 = !DILocation(line: 783, column: 30, scope: !14784)
!14832 = !DILocation(line: 783, column: 11, scope: !14784)
!14833 = !DILocation(line: 783, column: 9, scope: !14784)
!14834 = !DILocation(line: 784, column: 9, scope: !14835)
!14835 = distinct !DILexicalBlock(scope: !14784, file: !1150, line: 784, column: 9)
!14836 = !DILocation(line: 784, column: 13, scope: !14835)
!14837 = !DILocation(line: 784, column: 9, scope: !14784)
!14838 = !DILocation(line: 785, column: 16, scope: !14839)
!14839 = distinct !DILexicalBlock(scope: !14835, file: !1150, line: 784, column: 25)
!14840 = !DILocation(line: 785, column: 19, scope: !14839)
!14841 = !DILocation(line: 785, column: 9, scope: !14839)
!14842 = !DILocation(line: 786, column: 9, scope: !14839)
!14843 = !DILocation(line: 788, column: 11, scope: !14784)
!14844 = !DILocation(line: 788, column: 27, scope: !14784)
!14845 = !DILocation(line: 788, column: 17, scope: !14784)
!14846 = !DILocation(line: 788, column: 15, scope: !14784)
!14847 = !DILocation(line: 788, column: 56, scope: !14784)
!14848 = !DILocation(line: 788, column: 45, scope: !14784)
!14849 = !DILocation(line: 788, column: 48, scope: !14784)
!14850 = !DILocation(line: 788, column: 43, scope: !14784)
!14851 = !DILocation(line: 788, column: 9, scope: !14784)
!14852 = !DILocation(line: 789, column: 27, scope: !14784)
!14853 = !DILocation(line: 789, column: 11, scope: !14784)
!14854 = !DILocation(line: 194, column: 10, scope: !14855, inlinedAt: !14807)
!14855 = distinct !DILexicalBlock(scope: !14803, file: !11156, line: 194, column: 9)
!14856 = !DILocation(line: 194, column: 11, scope: !14855, inlinedAt: !14807)
!14857 = !DILocation(line: 194, column: 21, scope: !14855, inlinedAt: !14807)
!14858 = !DILocation(line: 194, column: 9, scope: !14803, inlinedAt: !14807)
!14859 = !DILocation(line: 194, column: 40, scope: !14860, inlinedAt: !14807)
!14860 = !DILexicalBlockFile(scope: !14855, file: !11156, discriminator: 1)
!14861 = !DILocation(line: 194, column: 41, scope: !14860, inlinedAt: !14807)
!14862 = !DILocation(line: 194, column: 47, scope: !14860, inlinedAt: !14807)
!14863 = !DILocation(line: 194, column: 39, scope: !14860, inlinedAt: !14807)
!14864 = !DILocation(line: 194, column: 32, scope: !14860, inlinedAt: !14807)
!14865 = !DILocation(line: 195, column: 17, scope: !14855, inlinedAt: !14807)
!14866 = !DILocation(line: 195, column: 10, scope: !14855, inlinedAt: !14807)
!14867 = !DILocation(line: 196, column: 1, scope: !14803, inlinedAt: !14807)
!14868 = !DILocation(line: 789, column: 9, scope: !14784)
!14869 = !DILocation(line: 790, column: 29, scope: !14784)
!14870 = !DILocation(line: 790, column: 16, scope: !14784)
!14871 = !DILocation(line: 790, column: 5, scope: !14784)
!14872 = !DILocation(line: 790, column: 8, scope: !14784)
!14873 = !DILocation(line: 790, column: 27, scope: !14784)
!14874 = !DILocation(line: 791, column: 16, scope: !14784)
!14875 = !DILocation(line: 791, column: 5, scope: !14784)
!14876 = !DILocation(line: 791, column: 14, scope: !14784)
!14877 = !DILocation(line: 793, column: 7, scope: !14784)
!14878 = !DILocalVariable(name: "re_index", scope: !14794, file: !1150, line: 794, type: !1024)
!14879 = !DILocation(line: 794, column: 19, scope: !14794)
!14880 = !DILocation(line: 794, column: 32, scope: !14794)
!14881 = !DILocation(line: 794, column: 35, scope: !14794)
!14882 = !DILocation(line: 794, column: 40, scope: !14794)
!14883 = !DILocalVariable(name: "re_cache", scope: !14794, file: !1150, line: 794, type: !1024)
!14884 = !DILocation(line: 794, column: 84, scope: !14794)
!14885 = !DILocalVariable(name: "re_size_plus8", scope: !14794, file: !1150, line: 794, type: !1024)
!14886 = !DILocation(line: 794, column: 107, scope: !14794)
!14887 = !DILocation(line: 794, column: 125, scope: !14794)
!14888 = !DILocation(line: 794, column: 128, scope: !14794)
!14889 = !DILocation(line: 794, column: 133, scope: !14794)
!14890 = !DILocation(line: 795, column: 5, scope: !14794)
!14891 = distinct !{!14891, !14890}
!14892 = !DILocation(line: 796, column: 65, scope: !14793)
!14893 = !DILocation(line: 796, column: 68, scope: !14793)
!14894 = !DILocation(line: 796, column: 73, scope: !14793)
!14895 = !DILocation(line: 796, column: 83, scope: !14793)
!14896 = !DILocation(line: 796, column: 92, scope: !14793)
!14897 = !DILocation(line: 796, column: 80, scope: !14793)
!14898 = !DILocation(line: 796, column: 101, scope: !14793)
!14899 = !DILocation(line: 796, column: 20, scope: !14793)
!14900 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !14801)
!14901 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !14801)
!14902 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !14801)
!14903 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !14801)
!14904 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !14801)
!14905 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !14801)
!14906 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !14801)
!14907 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !14801)
!14908 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !14801)
!14909 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !14801)
!14910 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !14801)
!14911 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !14801)
!14912 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !14801)
!14913 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !14801)
!14914 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !14801)
!14915 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !14801)
!14916 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !14801)
!14917 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !14801)
!14918 = !DILocation(line: 796, column: 109, scope: !14793)
!14919 = !DILocation(line: 796, column: 118, scope: !14793)
!14920 = !DILocation(line: 796, column: 105, scope: !14793)
!14921 = !DILocation(line: 796, column: 18, scope: !14793)
!14922 = !DILocation(line: 797, column: 9, scope: !14793)
!14923 = distinct !{!14923, !14922}
!14924 = !DILocalVariable(name: "n", scope: !14792, file: !1150, line: 797, type: !1025)
!14925 = !DILocation(line: 797, column: 18, scope: !14792)
!14926 = !DILocalVariable(name: "nb_bits", scope: !14792, file: !1150, line: 797, type: !1025)
!14927 = !DILocation(line: 797, column: 21, scope: !14792)
!14928 = !DILocalVariable(name: "index", scope: !14792, file: !1150, line: 797, type: !1024)
!14929 = !DILocation(line: 797, column: 43, scope: !14792)
!14930 = !DILocation(line: 797, column: 68, scope: !14931)
!14931 = !DILexicalBlockFile(scope: !14792, file: !1150, discriminator: 1)
!14932 = !DILocation(line: 797, column: 58, scope: !14931)
!14933 = !DILocation(line: 797, column: 56, scope: !14931)
!14934 = !DILocation(line: 797, column: 116, scope: !14931)
!14935 = !DILocation(line: 797, column: 89, scope: !14931)
!14936 = !DILocation(line: 797, column: 100, scope: !14931)
!14937 = !DILocation(line: 797, column: 92, scope: !14931)
!14938 = !DILocation(line: 797, column: 110, scope: !14931)
!14939 = !DILocation(line: 797, column: 87, scope: !14931)
!14940 = !DILocation(line: 797, column: 158, scope: !14931)
!14941 = !DILocation(line: 797, column: 131, scope: !14931)
!14942 = !DILocation(line: 797, column: 142, scope: !14931)
!14943 = !DILocation(line: 797, column: 134, scope: !14931)
!14944 = !DILocation(line: 797, column: 152, scope: !14931)
!14945 = !DILocation(line: 797, column: 129, scope: !14931)
!14946 = !DILocation(line: 797, column: 182, scope: !14931)
!14947 = !DILocation(line: 797, column: 184, scope: !14931)
!14948 = !DILocation(line: 797, column: 173, scope: !14931)
!14949 = !DILocation(line: 797, column: 204, scope: !14950)
!14950 = !DILexicalBlockFile(scope: !14790, file: !1150, discriminator: 2)
!14951 = !DILocation(line: 797, column: 222, scope: !14950)
!14952 = !DILocation(line: 797, column: 231, scope: !14950)
!14953 = !DILocation(line: 797, column: 219, scope: !14950)
!14954 = !DILocation(line: 797, column: 203, scope: !14950)
!14955 = !DILocation(line: 797, column: 241, scope: !14956)
!14956 = !DILexicalBlockFile(scope: !14790, file: !1150, discriminator: 3)
!14957 = !DILocation(line: 797, column: 250, scope: !14956)
!14958 = !DILocation(line: 797, column: 203, scope: !14956)
!14959 = !DILocation(line: 797, column: 260, scope: !14960)
!14960 = !DILexicalBlockFile(scope: !14790, file: !1150, discriminator: 4)
!14961 = !DILocation(line: 797, column: 203, scope: !14960)
!14962 = !DILocation(line: 797, column: 203, scope: !14789)
!14963 = !DILocation(line: 797, column: 200, scope: !14789)
!14964 = !DILocation(line: 797, column: 333, scope: !14789)
!14965 = !DILocation(line: 797, column: 336, scope: !14789)
!14966 = !DILocation(line: 797, column: 341, scope: !14789)
!14967 = !DILocation(line: 797, column: 351, scope: !14789)
!14968 = !DILocation(line: 797, column: 360, scope: !14789)
!14969 = !DILocation(line: 797, column: 348, scope: !14789)
!14970 = !DILocation(line: 797, column: 369, scope: !14789)
!14971 = !DILocation(line: 797, column: 288, scope: !14789)
!14972 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !14788)
!14973 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !14788)
!14974 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !14788)
!14975 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !14788)
!14976 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !14788)
!14977 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !14788)
!14978 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !14788)
!14979 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !14788)
!14980 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !14788)
!14981 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !14788)
!14982 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !14788)
!14983 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !14788)
!14984 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !14788)
!14985 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !14788)
!14986 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !14788)
!14987 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !14788)
!14988 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !14788)
!14989 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !14788)
!14990 = !DILocation(line: 797, column: 377, scope: !14789)
!14991 = !DILocation(line: 797, column: 386, scope: !14789)
!14992 = !DILocation(line: 797, column: 373, scope: !14789)
!14993 = !DILocation(line: 797, column: 286, scope: !14789)
!14994 = !DILocation(line: 797, column: 403, scope: !14789)
!14995 = !DILocation(line: 797, column: 402, scope: !14789)
!14996 = !DILocation(line: 797, column: 400, scope: !14789)
!14997 = !DILocation(line: 797, column: 424, scope: !14789)
!14998 = !DILocation(line: 797, column: 434, scope: !14789)
!14999 = !DILocation(line: 797, column: 414, scope: !15000)
!15000 = !DILexicalBlockFile(scope: !14789, file: !1150, discriminator: 12)
!15001 = !DILocation(line: 797, column: 445, scope: !14789)
!15002 = !DILocation(line: 797, column: 443, scope: !14789)
!15003 = !DILocation(line: 797, column: 412, scope: !14789)
!15004 = !DILocation(line: 797, column: 485, scope: !14789)
!15005 = !DILocation(line: 797, column: 458, scope: !14789)
!15006 = !DILocation(line: 797, column: 469, scope: !14789)
!15007 = !DILocation(line: 797, column: 461, scope: !14789)
!15008 = !DILocation(line: 797, column: 479, scope: !14789)
!15009 = !DILocation(line: 797, column: 456, scope: !14789)
!15010 = !DILocation(line: 797, column: 527, scope: !14789)
!15011 = !DILocation(line: 797, column: 500, scope: !14789)
!15012 = !DILocation(line: 797, column: 511, scope: !14789)
!15013 = !DILocation(line: 797, column: 503, scope: !14789)
!15014 = !DILocation(line: 797, column: 521, scope: !14789)
!15015 = !DILocation(line: 797, column: 498, scope: !14789)
!15016 = !DILocation(line: 797, column: 921, scope: !14789)
!15017 = !DILocation(line: 797, column: 923, scope: !15018)
!15018 = !DILexicalBlockFile(scope: !14792, file: !1150, discriminator: 6)
!15019 = distinct !{!15019, !15020}
!15020 = !DILocation(line: 797, column: 923, scope: !14792)
!15021 = !DILocation(line: 797, column: 942, scope: !15022)
!15022 = !DILexicalBlockFile(scope: !15023, file: !1150, discriminator: 7)
!15023 = distinct !DILexicalBlock(scope: !14792, file: !1150, line: 797, column: 926)
!15024 = !DILocation(line: 797, column: 937, scope: !15022)
!15025 = !DILocation(line: 797, column: 959, scope: !15022)
!15026 = !DILocation(line: 797, column: 977, scope: !15022)
!15027 = !DILocation(line: 797, column: 989, scope: !15022)
!15028 = !DILocation(line: 797, column: 986, scope: !15022)
!15029 = !DILocation(line: 797, column: 974, scope: !15022)
!15030 = !DILocation(line: 797, column: 958, scope: !15022)
!15031 = !DILocation(line: 797, column: 996, scope: !15032)
!15032 = !DILexicalBlockFile(scope: !15023, file: !1150, discriminator: 8)
!15033 = !DILocation(line: 797, column: 1008, scope: !15032)
!15034 = !DILocation(line: 797, column: 1005, scope: !15032)
!15035 = !DILocation(line: 797, column: 958, scope: !15032)
!15036 = !DILocation(line: 797, column: 1015, scope: !15037)
!15037 = !DILexicalBlockFile(scope: !15023, file: !1150, discriminator: 9)
!15038 = !DILocation(line: 797, column: 958, scope: !15037)
!15039 = !DILocation(line: 797, column: 958, scope: !15040)
!15040 = !DILexicalBlockFile(scope: !15023, file: !1150, discriminator: 10)
!15041 = !DILocation(line: 797, column: 955, scope: !15040)
!15042 = !DILocation(line: 797, column: 1032, scope: !15040)
!15043 = !DILocation(line: 797, column: 1045, scope: !15044)
!15044 = !DILexicalBlockFile(scope: !14792, file: !1150, discriminator: 11)
!15045 = !DILocation(line: 799, column: 25, scope: !14793)
!15046 = !DILocation(line: 799, column: 31, scope: !14793)
!15047 = !DILocation(line: 799, column: 11, scope: !14793)
!15048 = !DILocation(line: 800, column: 18, scope: !14793)
!15049 = !DILocation(line: 801, column: 13, scope: !14799)
!15050 = !DILocation(line: 801, column: 13, scope: !14793)
!15051 = !DILocation(line: 802, column: 17, scope: !14797)
!15052 = !DILocation(line: 802, column: 22, scope: !14797)
!15053 = !DILocation(line: 802, column: 17, scope: !14798)
!15054 = !DILocation(line: 803, column: 73, scope: !14797)
!15055 = !DILocation(line: 803, column: 76, scope: !14797)
!15056 = !DILocation(line: 803, column: 81, scope: !14797)
!15057 = !DILocation(line: 803, column: 91, scope: !14797)
!15058 = !DILocation(line: 803, column: 100, scope: !14797)
!15059 = !DILocation(line: 803, column: 88, scope: !14797)
!15060 = !DILocation(line: 803, column: 109, scope: !14797)
!15061 = !DILocation(line: 803, column: 28, scope: !14797)
!15062 = !DILocation(line: 68, column: 16, scope: !2865, inlinedAt: !14796)
!15063 = !DILocation(line: 68, column: 19, scope: !2865, inlinedAt: !14796)
!15064 = !DILocation(line: 68, column: 24, scope: !2865, inlinedAt: !14796)
!15065 = !DILocation(line: 68, column: 38, scope: !2865, inlinedAt: !14796)
!15066 = !DILocation(line: 68, column: 41, scope: !2865, inlinedAt: !14796)
!15067 = !DILocation(line: 68, column: 46, scope: !2865, inlinedAt: !14796)
!15068 = !DILocation(line: 68, column: 34, scope: !2865, inlinedAt: !14796)
!15069 = !DILocation(line: 68, column: 57, scope: !2865, inlinedAt: !14796)
!15070 = !DILocation(line: 68, column: 69, scope: !2865, inlinedAt: !14796)
!15071 = !DILocation(line: 68, column: 72, scope: !2865, inlinedAt: !14796)
!15072 = !DILocation(line: 68, column: 79, scope: !2865, inlinedAt: !14796)
!15073 = !DILocation(line: 68, column: 84, scope: !2865, inlinedAt: !14796)
!15074 = !DILocation(line: 68, column: 99, scope: !2865, inlinedAt: !14796)
!15075 = !DILocation(line: 68, column: 102, scope: !2865, inlinedAt: !14796)
!15076 = !DILocation(line: 68, column: 109, scope: !2865, inlinedAt: !14796)
!15077 = !DILocation(line: 68, column: 114, scope: !2865, inlinedAt: !14796)
!15078 = !DILocation(line: 68, column: 94, scope: !2865, inlinedAt: !14796)
!15079 = !DILocation(line: 68, column: 63, scope: !2865, inlinedAt: !14796)
!15080 = !DILocation(line: 803, column: 117, scope: !14797)
!15081 = !DILocation(line: 803, column: 126, scope: !14797)
!15082 = !DILocation(line: 803, column: 113, scope: !14797)
!15083 = !DILocation(line: 803, column: 26, scope: !14797)
!15084 = !DILocation(line: 803, column: 17, scope: !14797)
!15085 = !DILocalVariable(name: "cache", scope: !15086, file: !1150, line: 806, type: !1025)
!15086 = distinct !DILexicalBlock(scope: !14798, file: !1150, line: 805, column: 13)
!15087 = !DILocation(line: 806, column: 21, scope: !15086)
!15088 = !DILocation(line: 806, column: 41, scope: !15086)
!15089 = !DILocalVariable(name: "sign", scope: !15086, file: !1150, line: 807, type: !1025)
!15090 = !DILocation(line: 807, column: 21, scope: !15086)
!15091 = !DILocation(line: 807, column: 30, scope: !15086)
!15092 = !DILocation(line: 807, column: 29, scope: !15086)
!15093 = !DILocation(line: 807, column: 37, scope: !15086)
!15094 = !DILocation(line: 808, column: 36, scope: !15086)
!15095 = !DILocation(line: 808, column: 43, scope: !15086)
!15096 = !DILocation(line: 808, column: 41, scope: !15086)
!15097 = !DILocation(line: 808, column: 49, scope: !15086)
!15098 = !DILocation(line: 808, column: 26, scope: !15086)
!15099 = !DILocation(line: 808, column: 57, scope: !15086)
!15100 = !DILocation(line: 808, column: 55, scope: !15086)
!15101 = !DILocation(line: 808, column: 65, scope: !15086)
!15102 = !DILocation(line: 808, column: 63, scope: !15086)
!15103 = !DILocation(line: 808, column: 23, scope: !15086)
!15104 = !DILocation(line: 811, column: 26, scope: !14798)
!15105 = !DILocation(line: 811, column: 44, scope: !14798)
!15106 = !DILocation(line: 811, column: 56, scope: !14798)
!15107 = !DILocation(line: 811, column: 53, scope: !14798)
!15108 = !DILocation(line: 811, column: 41, scope: !14798)
!15109 = !DILocation(line: 811, column: 25, scope: !14798)
!15110 = !DILocation(line: 811, column: 66, scope: !15111)
!15111 = !DILexicalBlockFile(scope: !14798, file: !1150, discriminator: 1)
!15112 = !DILocation(line: 811, column: 78, scope: !15111)
!15113 = !DILocation(line: 811, column: 75, scope: !15111)
!15114 = !DILocation(line: 811, column: 25, scope: !15111)
!15115 = !DILocation(line: 811, column: 88, scope: !15116)
!15116 = !DILexicalBlockFile(scope: !14798, file: !1150, discriminator: 2)
!15117 = !DILocation(line: 811, column: 25, scope: !15116)
!15118 = !DILocation(line: 811, column: 25, scope: !15119)
!15119 = !DILexicalBlockFile(scope: !14798, file: !1150, discriminator: 3)
!15120 = !DILocation(line: 811, column: 22, scope: !15119)
!15121 = !DILocation(line: 813, column: 17, scope: !15122)
!15122 = distinct !DILexicalBlock(scope: !14798, file: !1150, line: 813, column: 17)
!15123 = !DILocation(line: 813, column: 19, scope: !15122)
!15124 = !DILocation(line: 813, column: 17, scope: !14798)
!15125 = !DILocation(line: 814, column: 24, scope: !15126)
!15126 = distinct !DILexicalBlock(scope: !15122, file: !1150, line: 813, column: 25)
!15127 = !DILocation(line: 814, column: 27, scope: !15126)
!15128 = !DILocation(line: 814, column: 59, scope: !15126)
!15129 = !DILocation(line: 814, column: 17, scope: !15126)
!15130 = !DILocation(line: 815, column: 17, scope: !15126)
!15131 = !DILocation(line: 817, column: 41, scope: !14798)
!15132 = !DILocation(line: 817, column: 17, scope: !14798)
!15133 = !DILocation(line: 817, column: 20, scope: !14798)
!15134 = !DILocation(line: 817, column: 30, scope: !14798)
!15135 = !DILocation(line: 817, column: 15, scope: !14798)
!15136 = !DILocation(line: 818, column: 24, scope: !14798)
!15137 = !DILocation(line: 818, column: 45, scope: !14798)
!15138 = !DILocation(line: 818, column: 32, scope: !14798)
!15139 = !DILocation(line: 818, column: 30, scope: !14798)
!15140 = !DILocation(line: 818, column: 19, scope: !14798)
!15141 = !DILocation(line: 818, column: 13, scope: !14798)
!15142 = !DILocation(line: 818, column: 22, scope: !14798)
!15143 = !DILocation(line: 819, column: 9, scope: !14798)
!15144 = !DILocation(line: 820, column: 5, scope: !14793)
!15145 = !DILocation(line: 820, column: 14, scope: !15146)
!15146 = !DILexicalBlockFile(scope: !14794, file: !1150, discriminator: 1)
!15147 = !DILocation(line: 820, column: 16, scope: !15146)
!15148 = !DILocation(line: 820, column: 5, scope: !15146)
!15149 = !DILocation(line: 821, column: 23, scope: !14794)
!15150 = !DILocation(line: 821, column: 7, scope: !14794)
!15151 = !DILocation(line: 821, column: 10, scope: !14794)
!15152 = !DILocation(line: 821, column: 15, scope: !14794)
!15153 = !DILocation(line: 821, column: 21, scope: !14794)
!15154 = !DILocation(line: 823, column: 5, scope: !14784)
!15155 = !DILocation(line: 824, column: 1, scope: !14784)
!15156 = distinct !DISubprogram(name: "shift_output", scope: !1150, file: !1150, line: 1342, type: !2666, isLocal: true, isDefinition: true, scopeLine: 1343, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!15157 = !DILocalVariable(name: "s", arg: 1, scope: !15156, file: !1150, line: 1342, type: !1815)
!15158 = !DILocation(line: 1342, column: 46, scope: !15156)
!15159 = !DILocalVariable(name: "ptr", arg: 2, scope: !15156, file: !1150, line: 1342, type: !1030)
!15160 = !DILocation(line: 1342, column: 58, scope: !15156)
!15161 = !DILocalVariable(name: "linesize", arg: 3, scope: !15156, file: !1150, line: 1342, type: !1025)
!15162 = !DILocation(line: 1342, column: 67, scope: !15156)
!15163 = !DILocalVariable(name: "block_x", scope: !15156, file: !1150, line: 1344, type: !1025)
!15164 = !DILocation(line: 1344, column: 9, scope: !15156)
!15165 = !DILocalVariable(name: "block_y", scope: !15156, file: !1150, line: 1344, type: !1025)
!15166 = !DILocation(line: 1344, column: 18, scope: !15156)
!15167 = !DILocalVariable(name: "size", scope: !15156, file: !1150, line: 1345, type: !1025)
!15168 = !DILocation(line: 1345, column: 9, scope: !15156)
!15169 = !DILocation(line: 1345, column: 21, scope: !15156)
!15170 = !DILocation(line: 1345, column: 24, scope: !15156)
!15171 = !DILocation(line: 1345, column: 31, scope: !15156)
!15172 = !DILocation(line: 1345, column: 18, scope: !15156)
!15173 = !DILocation(line: 1346, column: 9, scope: !15174)
!15174 = distinct !DILexicalBlock(scope: !15156, file: !1150, line: 1346, column: 9)
!15175 = !DILocation(line: 1346, column: 12, scope: !15174)
!15176 = !DILocation(line: 1346, column: 17, scope: !15174)
!15177 = !DILocation(line: 1346, column: 9, scope: !15156)
!15178 = !DILocation(line: 1347, column: 21, scope: !15179)
!15179 = distinct !DILexicalBlock(scope: !15180, file: !1150, line: 1347, column: 9)
!15180 = distinct !DILexicalBlock(scope: !15174, file: !1150, line: 1346, column: 22)
!15181 = !DILocation(line: 1347, column: 14, scope: !15179)
!15182 = !DILocation(line: 1347, column: 25, scope: !15183)
!15183 = !DILexicalBlockFile(scope: !15184, file: !1150, discriminator: 1)
!15184 = distinct !DILexicalBlock(scope: !15179, file: !1150, line: 1347, column: 9)
!15185 = !DILocation(line: 1347, column: 33, scope: !15183)
!15186 = !DILocation(line: 1347, column: 32, scope: !15183)
!15187 = !DILocation(line: 1347, column: 9, scope: !15183)
!15188 = !DILocation(line: 1348, column: 25, scope: !15189)
!15189 = distinct !DILexicalBlock(scope: !15184, file: !1150, line: 1348, column: 13)
!15190 = !DILocation(line: 1348, column: 18, scope: !15189)
!15191 = !DILocation(line: 1348, column: 29, scope: !15192)
!15192 = !DILexicalBlockFile(scope: !15193, file: !1150, discriminator: 1)
!15193 = distinct !DILexicalBlock(scope: !15189, file: !1150, line: 1348, column: 13)
!15194 = !DILocation(line: 1348, column: 37, scope: !15192)
!15195 = !DILocation(line: 1348, column: 36, scope: !15192)
!15196 = !DILocation(line: 1348, column: 13, scope: !15192)
!15197 = !DILocation(line: 1349, column: 75, scope: !15193)
!15198 = !DILocation(line: 1349, column: 78, scope: !15193)
!15199 = !DILocation(line: 1349, column: 73, scope: !15193)
!15200 = !DILocation(line: 1349, column: 30, scope: !15193)
!15201 = !DILocation(line: 1349, column: 38, scope: !15193)
!15202 = !DILocation(line: 1349, column: 37, scope: !15193)
!15203 = !DILocation(line: 1349, column: 34, scope: !15193)
!15204 = !DILocation(line: 1349, column: 48, scope: !15193)
!15205 = !DILocation(line: 1349, column: 56, scope: !15193)
!15206 = !DILocation(line: 1349, column: 55, scope: !15193)
!15207 = !DILocation(line: 1349, column: 46, scope: !15193)
!15208 = !DILocation(line: 1349, column: 17, scope: !15193)
!15209 = !DILocation(line: 1349, column: 66, scope: !15193)
!15210 = !DILocation(line: 1348, column: 50, scope: !15211)
!15211 = !DILexicalBlockFile(scope: !15193, file: !1150, discriminator: 2)
!15212 = !DILocation(line: 1348, column: 13, scope: !15211)
!15213 = distinct !{!15213, !15214}
!15214 = !DILocation(line: 1348, column: 13, scope: !15184)
!15215 = !DILocation(line: 1349, column: 78, scope: !15216)
!15216 = !DILexicalBlockFile(scope: !15189, file: !1150, discriminator: 1)
!15217 = !DILocation(line: 1347, column: 46, scope: !15218)
!15218 = !DILexicalBlockFile(scope: !15184, file: !1150, discriminator: 2)
!15219 = !DILocation(line: 1347, column: 9, scope: !15218)
!15220 = distinct !{!15220, !15221}
!15221 = !DILocation(line: 1347, column: 9, scope: !15180)
!15222 = !DILocation(line: 1350, column: 5, scope: !15180)
!15223 = !DILocation(line: 1351, column: 21, scope: !15224)
!15224 = distinct !DILexicalBlock(scope: !15225, file: !1150, line: 1351, column: 9)
!15225 = distinct !DILexicalBlock(scope: !15174, file: !1150, line: 1350, column: 12)
!15226 = !DILocation(line: 1351, column: 14, scope: !15224)
!15227 = !DILocation(line: 1351, column: 25, scope: !15228)
!15228 = !DILexicalBlockFile(scope: !15229, file: !1150, discriminator: 1)
!15229 = distinct !DILexicalBlock(scope: !15224, file: !1150, line: 1351, column: 9)
!15230 = !DILocation(line: 1351, column: 33, scope: !15228)
!15231 = !DILocation(line: 1351, column: 32, scope: !15228)
!15232 = !DILocation(line: 1351, column: 9, scope: !15228)
!15233 = !DILocation(line: 1352, column: 25, scope: !15234)
!15234 = distinct !DILexicalBlock(scope: !15229, file: !1150, line: 1352, column: 13)
!15235 = !DILocation(line: 1352, column: 18, scope: !15234)
!15236 = !DILocation(line: 1352, column: 29, scope: !15237)
!15237 = !DILexicalBlockFile(scope: !15238, file: !1150, discriminator: 1)
!15238 = distinct !DILexicalBlock(scope: !15234, file: !1150, line: 1352, column: 13)
!15239 = !DILocation(line: 1352, column: 37, scope: !15237)
!15240 = !DILocation(line: 1352, column: 36, scope: !15237)
!15241 = !DILocation(line: 1352, column: 13, scope: !15237)
!15242 = !DILocation(line: 1353, column: 61, scope: !15238)
!15243 = !DILocation(line: 1353, column: 64, scope: !15238)
!15244 = !DILocation(line: 1353, column: 59, scope: !15238)
!15245 = !DILocation(line: 1353, column: 19, scope: !15238)
!15246 = !DILocation(line: 1353, column: 25, scope: !15238)
!15247 = !DILocation(line: 1353, column: 23, scope: !15238)
!15248 = !DILocation(line: 1353, column: 35, scope: !15238)
!15249 = !DILocation(line: 1353, column: 43, scope: !15238)
!15250 = !DILocation(line: 1353, column: 42, scope: !15238)
!15251 = !DILocation(line: 1353, column: 33, scope: !15238)
!15252 = !DILocation(line: 1353, column: 53, scope: !15238)
!15253 = !DILocation(line: 1353, column: 17, scope: !15238)
!15254 = !DILocation(line: 1352, column: 50, scope: !15255)
!15255 = !DILexicalBlockFile(scope: !15238, file: !1150, discriminator: 2)
!15256 = !DILocation(line: 1352, column: 13, scope: !15255)
!15257 = distinct !{!15257, !15258}
!15258 = !DILocation(line: 1352, column: 13, scope: !15229)
!15259 = !DILocation(line: 1353, column: 64, scope: !15260)
!15260 = !DILexicalBlockFile(scope: !15234, file: !1150, discriminator: 1)
!15261 = !DILocation(line: 1351, column: 46, scope: !15262)
!15262 = !DILexicalBlockFile(scope: !15229, file: !1150, discriminator: 2)
!15263 = !DILocation(line: 1351, column: 9, scope: !15262)
!15264 = distinct !{!15264, !15265}
!15265 = !DILocation(line: 1351, column: 9, scope: !15225)
!15266 = !DILocation(line: 1355, column: 1, scope: !15156)
!15267 = distinct !DISubprogram(name: "decode_dc_progressive", scope: !1150, file: !1150, line: 826, type: !15268, isLocal: true, isDefinition: true, scopeLine: 829, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!15268 = !DISubroutineType(types: !15269)
!15269 = !{!1025, !1815, !1935, !1025, !1025, !1027, !1025}
!15270 = !DILocalVariable(name: "s", arg: 1, scope: !15267, file: !1150, line: 826, type: !1815)
!15271 = !DILocation(line: 826, column: 54, scope: !15267)
!15272 = !DILocalVariable(name: "block", arg: 2, scope: !15267, file: !1150, line: 826, type: !1935)
!15273 = !DILocation(line: 826, column: 66, scope: !15267)
!15274 = !DILocalVariable(name: "component", arg: 3, scope: !15267, file: !1150, line: 827, type: !1025)
!15275 = !DILocation(line: 827, column: 38, scope: !15267)
!15276 = !DILocalVariable(name: "dc_index", arg: 4, scope: !15267, file: !1150, line: 827, type: !1025)
!15277 = !DILocation(line: 827, column: 53, scope: !15267)
!15278 = !DILocalVariable(name: "quant_matrix", arg: 5, scope: !15267, file: !1150, line: 828, type: !1027)
!15279 = !DILocation(line: 828, column: 44, scope: !15267)
!15280 = !DILocalVariable(name: "Al", arg: 6, scope: !15267, file: !1150, line: 828, type: !1025)
!15281 = !DILocation(line: 828, column: 62, scope: !15267)
!15282 = !DILocalVariable(name: "val", scope: !15267, file: !1150, line: 830, type: !1024)
!15283 = !DILocation(line: 830, column: 14, scope: !15267)
!15284 = !DILocation(line: 831, column: 5, scope: !15267)
!15285 = !DILocation(line: 831, column: 8, scope: !15267)
!15286 = !DILocation(line: 831, column: 13, scope: !15267)
!15287 = !DILocation(line: 831, column: 25, scope: !15267)
!15288 = !DILocation(line: 832, column: 27, scope: !15267)
!15289 = !DILocation(line: 832, column: 30, scope: !15267)
!15290 = !DILocation(line: 832, column: 11, scope: !15267)
!15291 = !DILocation(line: 832, column: 9, scope: !15267)
!15292 = !DILocation(line: 833, column: 9, scope: !15293)
!15293 = distinct !DILexicalBlock(scope: !15267, file: !1150, line: 833, column: 9)
!15294 = !DILocation(line: 833, column: 13, scope: !15293)
!15295 = !DILocation(line: 833, column: 9, scope: !15267)
!15296 = !DILocation(line: 834, column: 16, scope: !15297)
!15297 = distinct !DILexicalBlock(scope: !15293, file: !1150, line: 833, column: 25)
!15298 = !DILocation(line: 834, column: 19, scope: !15297)
!15299 = !DILocation(line: 834, column: 9, scope: !15297)
!15300 = !DILocation(line: 835, column: 9, scope: !15297)
!15301 = !DILocation(line: 837, column: 12, scope: !15267)
!15302 = !DILocation(line: 837, column: 19, scope: !15267)
!15303 = !DILocation(line: 837, column: 38, scope: !15267)
!15304 = !DILocation(line: 837, column: 35, scope: !15267)
!15305 = !DILocation(line: 837, column: 16, scope: !15267)
!15306 = !DILocation(line: 837, column: 56, scope: !15267)
!15307 = !DILocation(line: 837, column: 45, scope: !15267)
!15308 = !DILocation(line: 837, column: 48, scope: !15267)
!15309 = !DILocation(line: 837, column: 43, scope: !15267)
!15310 = !DILocation(line: 837, column: 9, scope: !15267)
!15311 = !DILocation(line: 838, column: 29, scope: !15267)
!15312 = !DILocation(line: 838, column: 16, scope: !15267)
!15313 = !DILocation(line: 838, column: 5, scope: !15267)
!15314 = !DILocation(line: 838, column: 8, scope: !15267)
!15315 = !DILocation(line: 838, column: 27, scope: !15267)
!15316 = !DILocation(line: 839, column: 16, scope: !15267)
!15317 = !DILocation(line: 839, column: 5, scope: !15267)
!15318 = !DILocation(line: 839, column: 14, scope: !15267)
!15319 = !DILocation(line: 840, column: 5, scope: !15267)
!15320 = !DILocation(line: 841, column: 1, scope: !15267)
!15321 = distinct !DISubprogram(name: "copy_block4", scope: !15322, file: !15322, line: 37, type: !15323, isLocal: true, isDefinition: true, scopeLine: 38, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!15322 = !DIFile(filename: "libavcodec/copy_block.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!15323 = !DISubroutineType(types: !15324)
!15324 = !{null, !1030, !1146, !1943, !1943, !1025}
!15325 = !DILocalVariable(name: "dst", arg: 1, scope: !15321, file: !15322, line: 37, type: !1030)
!15326 = !DILocation(line: 37, column: 41, scope: !15321)
!15327 = !DILocalVariable(name: "src", arg: 2, scope: !15321, file: !15322, line: 37, type: !1146)
!15328 = !DILocation(line: 37, column: 61, scope: !15321)
!15329 = !DILocalVariable(name: "dstStride", arg: 3, scope: !15321, file: !15322, line: 37, type: !1943)
!15330 = !DILocation(line: 37, column: 76, scope: !15321)
!15331 = !DILocalVariable(name: "srcStride", arg: 4, scope: !15321, file: !15322, line: 37, type: !1943)
!15332 = !DILocation(line: 37, column: 97, scope: !15321)
!15333 = !DILocalVariable(name: "h", arg: 5, scope: !15321, file: !15322, line: 37, type: !1025)
!15334 = !DILocation(line: 37, column: 112, scope: !15321)
!15335 = !DILocalVariable(name: "i", scope: !15321, file: !15322, line: 39, type: !1025)
!15336 = !DILocation(line: 39, column: 9, scope: !15321)
!15337 = !DILocation(line: 40, column: 12, scope: !15338)
!15338 = distinct !DILexicalBlock(scope: !15321, file: !15322, line: 40, column: 5)
!15339 = !DILocation(line: 40, column: 10, scope: !15338)
!15340 = !DILocation(line: 40, column: 17, scope: !15341)
!15341 = !DILexicalBlockFile(scope: !15342, file: !15322, discriminator: 1)
!15342 = distinct !DILexicalBlock(scope: !15338, file: !15322, line: 40, column: 5)
!15343 = !DILocation(line: 40, column: 21, scope: !15341)
!15344 = !DILocation(line: 40, column: 19, scope: !15341)
!15345 = !DILocation(line: 40, column: 5, scope: !15341)
!15346 = !DILocation(line: 41, column: 81, scope: !15347)
!15347 = distinct !DILexicalBlock(scope: !15342, file: !15322, line: 40, column: 29)
!15348 = !DILocation(line: 41, column: 88, scope: !15347)
!15349 = !DILocation(line: 41, column: 36, scope: !15347)
!15350 = !DILocation(line: 41, column: 43, scope: !15347)
!15351 = !DILocation(line: 41, column: 46, scope: !15347)
!15352 = !DILocation(line: 42, column: 16, scope: !15347)
!15353 = !DILocation(line: 42, column: 13, scope: !15347)
!15354 = !DILocation(line: 43, column: 16, scope: !15347)
!15355 = !DILocation(line: 43, column: 13, scope: !15347)
!15356 = !DILocation(line: 44, column: 5, scope: !15347)
!15357 = !DILocation(line: 40, column: 25, scope: !15358)
!15358 = !DILexicalBlockFile(scope: !15342, file: !15322, discriminator: 2)
!15359 = !DILocation(line: 40, column: 5, scope: !15358)
!15360 = distinct !{!15360, !15361}
!15361 = !DILocation(line: 40, column: 5, scope: !15321)
!15362 = !DILocation(line: 45, column: 1, scope: !15321)
!15363 = distinct !DISubprogram(name: "copy_block2", scope: !15322, file: !15322, line: 27, type: !15323, isLocal: true, isDefinition: true, scopeLine: 28, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!15364 = !DILocalVariable(name: "dst", arg: 1, scope: !15363, file: !15322, line: 27, type: !1030)
!15365 = !DILocation(line: 27, column: 41, scope: !15363)
!15366 = !DILocalVariable(name: "src", arg: 2, scope: !15363, file: !15322, line: 27, type: !1146)
!15367 = !DILocation(line: 27, column: 61, scope: !15363)
!15368 = !DILocalVariable(name: "dstStride", arg: 3, scope: !15363, file: !15322, line: 27, type: !1943)
!15369 = !DILocation(line: 27, column: 76, scope: !15363)
!15370 = !DILocalVariable(name: "srcStride", arg: 4, scope: !15363, file: !15322, line: 27, type: !1943)
!15371 = !DILocation(line: 27, column: 97, scope: !15363)
!15372 = !DILocalVariable(name: "h", arg: 5, scope: !15363, file: !15322, line: 27, type: !1025)
!15373 = !DILocation(line: 27, column: 112, scope: !15363)
!15374 = !DILocalVariable(name: "i", scope: !15363, file: !15322, line: 29, type: !1025)
!15375 = !DILocation(line: 29, column: 9, scope: !15363)
!15376 = !DILocation(line: 30, column: 12, scope: !15377)
!15377 = distinct !DILexicalBlock(scope: !15363, file: !15322, line: 30, column: 5)
!15378 = !DILocation(line: 30, column: 10, scope: !15377)
!15379 = !DILocation(line: 30, column: 17, scope: !15380)
!15380 = !DILexicalBlockFile(scope: !15381, file: !15322, discriminator: 1)
!15381 = distinct !DILexicalBlock(scope: !15377, file: !15322, line: 30, column: 5)
!15382 = !DILocation(line: 30, column: 21, scope: !15380)
!15383 = !DILocation(line: 30, column: 19, scope: !15380)
!15384 = !DILocation(line: 30, column: 5, scope: !15380)
!15385 = !DILocation(line: 31, column: 81, scope: !15386)
!15386 = distinct !DILexicalBlock(scope: !15381, file: !15322, line: 30, column: 29)
!15387 = !DILocation(line: 31, column: 88, scope: !15386)
!15388 = !DILocation(line: 31, column: 36, scope: !15386)
!15389 = !DILocation(line: 31, column: 43, scope: !15386)
!15390 = !DILocation(line: 31, column: 46, scope: !15386)
!15391 = !DILocation(line: 32, column: 16, scope: !15386)
!15392 = !DILocation(line: 32, column: 13, scope: !15386)
!15393 = !DILocation(line: 33, column: 16, scope: !15386)
!15394 = !DILocation(line: 33, column: 13, scope: !15386)
!15395 = !DILocation(line: 34, column: 5, scope: !15386)
!15396 = !DILocation(line: 30, column: 25, scope: !15397)
!15397 = !DILexicalBlockFile(scope: !15381, file: !15322, discriminator: 2)
!15398 = !DILocation(line: 30, column: 5, scope: !15397)
!15399 = distinct !{!15399, !15400}
!15400 = !DILocation(line: 30, column: 5, scope: !15363)
!15401 = !DILocation(line: 35, column: 1, scope: !15363)
!15402 = distinct !DISubprogram(name: "get_bits_long", scope: !1825, file: !1825, line: 531, type: !2862, isLocal: true, isDefinition: true, scopeLine: 532, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!15403 = !DILocalVariable(name: "s", arg: 1, scope: !15402, file: !1825, line: 531, type: !2362)
!15404 = !DILocation(line: 531, column: 57, scope: !15402)
!15405 = !DILocalVariable(name: "n", arg: 2, scope: !15402, file: !1825, line: 531, type: !1025)
!15406 = !DILocation(line: 531, column: 64, scope: !15402)
!15407 = !DILocation(line: 534, column: 10, scope: !15408)
!15408 = distinct !DILexicalBlock(scope: !15402, file: !1825, line: 534, column: 9)
!15409 = !DILocation(line: 534, column: 9, scope: !15402)
!15410 = !DILocation(line: 535, column: 9, scope: !15411)
!15411 = distinct !DILexicalBlock(scope: !15408, file: !1825, line: 534, column: 13)
!15412 = !DILocation(line: 540, column: 16, scope: !15413)
!15413 = distinct !DILexicalBlock(scope: !15408, file: !1825, line: 540, column: 16)
!15414 = !DILocation(line: 540, column: 18, scope: !15413)
!15415 = !DILocation(line: 540, column: 16, scope: !15408)
!15416 = !DILocation(line: 541, column: 25, scope: !15417)
!15417 = distinct !DILexicalBlock(scope: !15413, file: !1825, line: 540, column: 25)
!15418 = !DILocation(line: 541, column: 28, scope: !15417)
!15419 = !DILocation(line: 541, column: 16, scope: !15417)
!15420 = !DILocation(line: 541, column: 9, scope: !15417)
!15421 = !DILocalVariable(name: "ret", scope: !15422, file: !1825, line: 547, type: !1024)
!15422 = distinct !DILexicalBlock(scope: !15413, file: !1825, line: 542, column: 12)
!15423 = !DILocation(line: 547, column: 18, scope: !15422)
!15424 = !DILocation(line: 547, column: 33, scope: !15422)
!15425 = !DILocation(line: 547, column: 24, scope: !15422)
!15426 = !DILocation(line: 547, column: 44, scope: !15422)
!15427 = !DILocation(line: 547, column: 46, scope: !15422)
!15428 = !DILocation(line: 547, column: 40, scope: !15422)
!15429 = !DILocation(line: 548, column: 16, scope: !15422)
!15430 = !DILocation(line: 548, column: 31, scope: !15422)
!15431 = !DILocation(line: 548, column: 34, scope: !15422)
!15432 = !DILocation(line: 548, column: 36, scope: !15422)
!15433 = !DILocation(line: 548, column: 22, scope: !15422)
!15434 = !DILocation(line: 548, column: 20, scope: !15422)
!15435 = !DILocation(line: 548, column: 9, scope: !15422)
!15436 = !DILocation(line: 552, column: 1, scope: !15402)
!15437 = distinct !DISubprogram(name: "show_bits_long", scope: !1825, file: !1825, line: 587, type: !2862, isLocal: true, isDefinition: true, scopeLine: 588, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2050)
!15438 = !DILocalVariable(name: "s", arg: 1, scope: !15437, file: !1825, line: 587, type: !2362)
!15439 = !DILocation(line: 587, column: 58, scope: !15437)
!15440 = !DILocalVariable(name: "n", arg: 2, scope: !15437, file: !1825, line: 587, type: !1025)
!15441 = !DILocation(line: 587, column: 65, scope: !15437)
!15442 = !DILocation(line: 589, column: 9, scope: !15443)
!15443 = distinct !DILexicalBlock(scope: !15437, file: !1825, line: 589, column: 9)
!15444 = !DILocation(line: 589, column: 11, scope: !15443)
!15445 = !DILocation(line: 589, column: 9, scope: !15437)
!15446 = !DILocation(line: 590, column: 26, scope: !15447)
!15447 = distinct !DILexicalBlock(scope: !15443, file: !1825, line: 589, column: 18)
!15448 = !DILocation(line: 590, column: 29, scope: !15447)
!15449 = !DILocation(line: 590, column: 16, scope: !15447)
!15450 = !DILocation(line: 590, column: 9, scope: !15447)
!15451 = !DILocalVariable(name: "gb", scope: !15452, file: !1825, line: 592, type: !1824)
!15452 = distinct !DILexicalBlock(scope: !15443, file: !1825, line: 591, column: 12)
!15453 = !DILocation(line: 592, column: 23, scope: !15452)
!15454 = !DILocation(line: 592, column: 29, scope: !15452)
!15455 = !DILocation(line: 592, column: 28, scope: !15452)
!15456 = !DILocation(line: 593, column: 35, scope: !15452)
!15457 = !DILocation(line: 593, column: 16, scope: !15452)
!15458 = !DILocation(line: 593, column: 9, scope: !15452)
!15459 = !DILocation(line: 595, column: 1, scope: !15437)
