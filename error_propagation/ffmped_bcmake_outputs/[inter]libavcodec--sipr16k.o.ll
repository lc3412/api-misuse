; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--sipr16k.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--sipr16k.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.SiprContext = type { %struct.AVCodecContext*, i32, float, [16 x float], [452 x float], [256 x float], [10 x float], float, [4 x float], [2 x float], [153 x float], float, float, [153 x float], [250 x float], i32, [17 x float], [2 x [17 x float]], [2 x float*], [16 x float], [16 x float], [16 x double], {}*, [8 x i8] }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecDefault = type opaque
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVCodecInternal = type opaque
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVRational = type { i32, i32 }
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.SiprParameters = type { i32, [5 x i32], [5 x i32], [5 x i32], [5 x [10 x i16]], [5 x i32] }
%struct.AMRFixed = type { i32, [10 x i32], [10 x float], i32, i32, float }

@gain_pitch_cb_16k = internal constant [16 x float] [float 0.000000e+00, float 0x3FC99999A0000000, float 0x3FD99999A0000000, float 5.000000e-01, float 0x3FE3333340000000, float 0x3FE6666660000000, float 7.500000e-01, float 0x3FE99999A0000000, float 0x3FEB333340000000, float 0x3FECCCCCC0000000, float 0x3FEE666660000000, float 1.000000e+00, float 0x3FF0CCCCC0000000, float 0x3FF19999A0000000, float 0x3FF2666660000000, float 0x3FF3333340000000], align 16
@sinc_win = internal constant [40 x float] [float 0x3FEBFBB300000000, float 0x3FE829C9A0000000, float 0x3FDD2E7B40000000, float 0x3FBE6A22C0000000, float 0xBFBD3DB800000000, float 0xBFC6A0A960000000, float 0xBFBA17A020000000, float 0x3F8FDA4060000000, float 0x3FB62877E0000000, float 0x3FB40474E0000000, float 0x3F931B9B60000000, float 0xBFA334E760000000, float 0xBFAAFFD1E0000000, float 0xBF9C1E3640000000, float 0x3F84699420000000, float 0x3F9F013220000000, float 0x3F98A09020000000, float 0x3F6906CCA0000000, float 0xBF8C63AE20000000, float 0xBF908CC580000000, float 0xBF7B8BAC80000000, float 0x3F71409A20000000, float 0x3F81AEB3E0000000, float 0x3F776EE740000000, float -0.000000e+00, float 0xBF6E646F20000000, float 0xBF6E3A7DA0000000, float 0xBF541E9B00000000, float 0x3F5715C640000000, float 0x3F65619120000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], align 16
@ff_fc_4pulses_8bits_tracks_13 = external constant [16 x i8], align 16
@gain_cb_16k = internal constant [32 x float] [float 0x3FB3328B60000000, float 0x3FBB1E3A80000000, float 0x3FC2147AE0000000, float 0x3FC81C2E40000000, float 0x3FCE5A9A80000000, float 0x3FD209AAA0000000, float 0x3FD4F32380000000, float 0x3FD80DC340000000, float 0x3FDAFD2200000000, float 0x3FDE481700000000, float 0x3FE0FCF800000000, float 0x3FE30FA580000000, float 0x3FE5630AA0000000, float 0x3FE7FF1960000000, float 0x3FEAECBFC0000000, float 0x3FEE35BD60000000, float 0x3FF0F2B020000000, float 0x3FF30418A0000000, float 0x3FF5561920000000, float 0x3FF7F09960000000, float 0x3FFADC5D60000000, float 0x3FFE236E20000000, float 0x4000E86D80000000, float 0x4002F890E0000000, float 0x4005492CC0000000, float 0x40087079E0000000, float 0x400C629200000000, float 0x4010DE2D60000000, float 0x40153C4080000000, float 0x401C515E00000000, float 0x4022E197A0000000, float 0x402AABA0A0000000], align 16
@pred_16k = internal constant [2 x float] [float 0x3FE99999A0000000, float 0x3FE3333340000000], align 4
@lsf_codebooks_16k = internal constant [5 x float*] [float* getelementptr inbounds ([128 x [3 x float]], [128 x [3 x float]]* @lsf_cb1_16k, i32 0, i32 0, i32 0), float* getelementptr inbounds ([256 x [3 x float]], [256 x [3 x float]]* @lsf_cb2_16k, i32 0, i32 0, i32 0), float* getelementptr inbounds ([128 x [3 x float]], [128 x [3 x float]]* @lsf_cb3_16k, i32 0, i32 0, i32 0), float* getelementptr inbounds ([128 x [3 x float]], [128 x [3 x float]]* @lsf_cb4_16k, i32 0, i32 0, i32 0), float* getelementptr inbounds ([128 x [4 x float]], [128 x [4 x float]]* @lsf_cb5_16k, i32 0, i32 0, i32 0)], align 16
@qu = internal constant [2 x float] [float 0x3FBEB851E0000000, float 5.000000e-01], align 4
@mean_lsf_16k = internal constant [16 x float] [float 0x3FC0D6C2E0000000, float 0x3FCF911480000000, float 0x3FDBE5B860000000, float 0x3FE49F14A0000000, float 0x3FEA7D6B60000000, float 0x3FF0493860000000, float 0x3FF32EBC40000000, float 0x3FF6110900000000, float 0x3FF8FE9860000000, float 0x3FFBCA6000000000, float 0x3FFF0D2F60000000, float 0x40010E42A0000000, float 0x4002C6FCE0000000, float 0x40042C1340000000, float 0x4005BE32A0000000, float 0x4006C6CBA0000000], align 16
@lsf_cb1_16k = internal constant [128 x [3 x float]] [[3 x float] [float 0xBFB70995A0000000, float 0xBFC613FD00000000, float 0xBFCA08B760000000], [3 x float] [float 0xBFB83EEA20000000, float 0xBFC6DF3740000000, float 0xBFC136BD20000000], [3 x float] [float 0xBFACE032E0000000, float 0xBFC0E3CDA0000000, float 0xBFC3C6A7E0000000], [3 x float] [float 0xBFAA4C1EC0000000, float 0xBFC066D380000000, float 0xBFC96A0DC0000000], [3 x float] [float 0xBFAF972480000000, float 0xBFC24840E0000000, float 0xBFD01A9760000000], [3 x float] [float 0xBFA5410FA0000000, float 0xBFBD9A62E0000000, float 0xBFCD5DA280000000], [3 x float] [float 0xBFA2B5E520000000, float 0xBFBB85E800000000, float 0xBFC628F5C0000000], [3 x float] [float 0xBF98BCDFE0000000, float 0xBFB6A4A8C0000000, float 0xBFCA216400000000], [3 x float] [float 0xBFA3CF2D00000000, float 0xBFBA765340000000, float 0xBFC0FB7620000000], [3 x float] [float 0xBFAD291320000000, float 0xBFC071C540000000, float 0xBFBACB9660000000], [3 x float] [float 0xBF95775320000000, float 0xBFB3A82E80000000, float 0xBFC4E3B460000000], [3 x float] [float 0xBF8A869400000000, float 0xBFB3C69720000000, float 0xBFC06EEB80000000], [3 x float] [float 0xBFA0C97520000000, float 0xBFB8D7E020000000, float 0xBFB80E38A0000000], [3 x float] [float 0xBFA20791C0000000, float 0xBFAB90A780000000, float 0xBFBCA81980000000], [3 x float] [float 0xBF8C5D6380000000, float 0xBFA2E7F700000000, float 0xBFC1D58000000000], [3 x float] [float 0xBF744CBE20000000, float 0xBFB0A9DE80000000, float 0xBFB67418E0000000], [3 x float] [float 0xBFB0BB0A20000000, float 0xBFB0CAD580000000, float 0xBFB43D89C0000000], [3 x float] [float 0xBF9831AD20000000, float 0xBFB4DA5DA0000000, float 0xBFABBF7280000000], [3 x float] [float 0xBF9BFDB4C0000000, float 0xBFA20B8060000000, float 0xBFB16AAD20000000], [3 x float] [float 0x3F90F3CB40000000, float 0xBFA81A36E0000000, float 0xBFC06BAD00000000], [3 x float] [float 0x3F95925360000000, float 0xBFA312B1C0000000, float 0xBFB78FFFC0000000], [3 x float] [float 0x3F8E111280000000, float 0xBFA609DD00000000, float 0xBFAD8FF760000000], [3 x float] [float 0xBF8164C720000000, float 0xBF80AD4700000000, float 0xBFBA3C85C0000000], [3 x float] [float 0xBF62DDBDC0000000, float 0xBFAF822BC0000000, float 0xBF9780BAA0000000], [3 x float] [float 0xBF78D36B40000000, float 0xBF8D3DC8C0000000, float 0xBFA13AD5C0000000], [3 x float] [float 0xBF759C4980000000, float 0x3F870824A0000000, float 0xBFB0112BA0000000], [3 x float] [float 0x3FA639F780000000, float 0xBF79D12CA0000000, float 0xBFB0509C00000000], [3 x float] [float 0x3FA25F84C0000000, float 0xBF849624A0000000, float 0xBFBD83A540000000], [3 x float] [float 0x3F9F5CF240000000, float 0xBFA025BFA0000000, float 0xBF923BFF80000000], [3 x float] [float 0x3F96E19BA0000000, float 0x3F9CE31500000000, float 0xBFA08E3680000000], [3 x float] [float 0x3F9B2BFDC0000000, float 0x3F9C3265A0000000, float 0xBFB7559B40000000], [3 x float] [float 0xBF6B90EAA0000000, float 0xBF808AACA0000000, float 0x3F901040C0000000], [3 x float] [float 0xBF9AA326E0000000, float 0x3F91E9AF60000000, float 0xBF853500A0000000], [3 x float] [float 0x3FAE3E4AC0000000, float 0x3F85C74760000000, float 0xBF7ED7C700000000], [3 x float] [float 0x3FA68C2620000000, float 0xBF93E3E2A0000000, float 0x3F9F2F1240000000], [3 x float] [float 0xBFA2771CA0000000, float 0xBFA184A0E0000000, float 0xBF7FC6DA40000000], [3 x float] [float 0x3F970691E0000000, float 0x3FA5C83240000000, float 0x3F9C89F400000000], [3 x float] [float 0xBFA997A240000000, float 0xBF90789620000000, float 0x3F964A59C0000000], [3 x float] [float 0xBF963C7500000000, float 0x3F95AD1060000000, float 0x3FAAA9B4A0000000], [3 x float] [float 0xBF71611BA0000000, float 0xBFAF5946C0000000, float 0x3F9C4DA900000000], [3 x float] [float 0xBFA161E500000000, float 0xBF91B3AEE0000000, float 0x3FB08D4BA0000000], [3 x float] [float 0x3F9089E340000000, float 0x3F47D284A0000000, float 0x3FB010D7C0000000], [3 x float] [float 0xBFB03EA700000000, float 0xBFA61804E0000000, float 0x3FAD08B320000000], [3 x float] [float 0xBFB155C520000000, float 0x3F791793A0000000, float 0x3FADC981C0000000], [3 x float] [float 0xBFA3EEC3A0000000, float 0x3FAA74E220000000, float 0x3F9F5F0B20000000], [3 x float] [float 0xBFB2B13E00000000, float 0xBFB3209680000000, float 0x3F9B0531A0000000], [3 x float] [float 0xBFA46CDB00000000, float 0xBFBAC8F760000000, float 0x3FA4488C60000000], [3 x float] [float 0xBFB2BBDBE0000000, float 0xBFB3190D20000000, float 0x3FB5027960000000], [3 x float] [float 0xBFB0EF7800000000, float 0xBF9BD512E0000000, float 0x3FB974D5A0000000], [3 x float] [float 0xBFB33E2500000000, float 0xBFBF039F00000000, float 0x3FB26A8760000000], [3 x float] [float 0xBF9F1C7580000000, float 0xBFB7B37440000000, float 0x3FB7502AC0000000], [3 x float] [float 0xBFB5A30980000000, float 0xBFC19AF9E0000000, float 0x3F98316A00000000], [3 x float] [float 0xBFAF35A000000000, float 0xBFBF0AD460000000, float 0xBF8F42BB60000000], [3 x float] [float 0xBF9ECA6860000000, float 0xBFB804C8C0000000, float 0xBF81CD1C80000000], [3 x float] [float 0xBFB045BB00000000, float 0xBFB0B295E0000000, float 0xBF9A708EE0000000], [3 x float] [float 0xBFAAA97180000000, float 0xBFBE1AB4C0000000, float 0xBFAE8F8E80000000], [3 x float] [float 0xBFB7768160000000, float 0xBFC5246380000000, float 0xBFA7555820000000], [3 x float] [float 0xBFB1F676E0000000, float 0xBFBF104500000000, float 0x3FC0DBC660000000], [3 x float] [float 0xBFAF3E89A0000000, float 0xBF77E45800000000, float 0xBFAA214260000000], [3 x float] [float 0x3F800CD860000000, float 0xBFAA87A080000000, float 0x3FB31758E0000000], [3 x float] [float 0xBFB215A8E0000000, float 0xBFAB9C51E0000000, float 0x3FC322C020000000], [3 x float] [float 0xBF8D67BA20000000, float 0xBFB1120180000000, float 0x3FC1E1F3A0000000], [3 x float] [float 0xBFADCA8E20000000, float 0x3F9E492BC0000000, float 0x3FB7C9CD40000000], [3 x float] [float 0xBF97EE9140000000, float 0x3F7CE8D980000000, float 0x3FBCCBC060000000], [3 x float] [float 0xBFADAE1CE0000000, float 0x3F975536A0000000, float 0x3FC2FF6D40000000], [3 x float] [float 0x3F9E2541E0000000, float 0xBF9218DF00000000, float 0x3FBF1593E0000000], [3 x float] [float 0xBF9030C240000000, float 0x3FAD12EC60000000, float 0x3FB772B460000000], [3 x float] [float 0x3F71CE28E0000000, float 0x3FAD052940000000, float 0x3FC1A500E0000000], [3 x float] [float 0xBF7248D7E0000000, float 0x3F632F87A0000000, float 0x3FC78DBCE0000000], [3 x float] [float 0x3F9E5F30E0000000, float 0x3FA7FF5840000000, float 0x3FB528D000000000], [3 x float] [float 0x3FAE6AB9C0000000, float 0x3F50A569C0000000, float 0x3FB6083980000000], [3 x float] [float 0x3FAC4B6EA0000000, float 0x3F9C3C5BE0000000, float 0x3FC3D840A0000000], [3 x float] [float 0x3FAFD438E0000000, float 0x3FB07778E0000000, float 0x3FBE0C06A0000000], [3 x float] [float 0x3F9784A940000000, float 0x3FB99CE080000000, float 0x3FB3C52600000000], [3 x float] [float 0x3FA5662780000000, float 0x3FB8A9EF60000000, float 0x3FC5D05B00000000], [3 x float] [float 0x3FAB3B96A0000000, float 0x3FBF786800000000, float 0x3FBE593A20000000], [3 x float] [float 0x3FB8209240000000, float 0x3FB82DBE80000000, float 0x3FB411B1E0000000], [3 x float] [float 0x3FB518A000000000, float 0x3FA11ADA80000000, float 0x3FA50917E0000000], [3 x float] [float 0x3FB8C93200000000, float 0x3FBDAF8E00000000, float 0x3FC3209EE0000000], [3 x float] [float 0x3FB15B9A60000000, float 0x3FBF317F00000000, float 0x3F99F1AE20000000], [3 x float] [float 0xBF813F0780000000, float 0x3FBAB47420000000, float 0x3FA08B75E0000000], [3 x float] [float 0x3F9FC1DF40000000, float 0x3FB2BE6A40000000, float 0xBF7410F940000000], [3 x float] [float 0x3FB5C7BCC0000000, float 0x3FAEE2A800000000, float 0xBF83D6C720000000], [3 x float] [float 0x3F9CD9A520000000, float 0x3FB7BF8340000000, float 0xBFAC764AE0000000], [3 x float] [float 0x3FB1F43C80000000, float 0x3FA40CC780000000, float 0xBFAF3FFAC0000000], [3 x float] [float 0xBFA41376E0000000, float 0x3FB2907960000000, float 0xBF9D723680000000], [3 x float] [float 0x3FC0998D00000000, float 0x3FB9A8DEC0000000, float 0xBFA8101F40000000], [3 x float] [float 0x3FC3BC7720000000, float 0x3FBB8CB8E0000000, float 0x3F97568620000000], [3 x float] [float 0xBFA941E9A0000000, float 0x3FB81C7140000000, float 0x3FB6861EA0000000], [3 x float] [float 0xBF8AFD9760000000, float 0x3FC032DB20000000, float 0x3FC0033E80000000], [3 x float] [float 0xBFAE100600000000, float 0x3FB938DE60000000, float 0x3FC3503B80000000], [3 x float] [float 0xBF974C9000000000, float 0x3FB47B99E0000000, float 0x3FC876D980000000], [3 x float] [float 0x3F8B8C32A0000000, float 0x3FC5116220000000, float 0x3FC3AEAB80000000], [3 x float] [float 0x3FB32745C0000000, float 0x3FC7320540000000, float 0x3FBBB3B760000000], [3 x float] [float 0x3FB760F1C0000000, float 0x3FC5A9F380000000, float 0x3FC59018E0000000], [3 x float] [float 0x3FA1595FE0000000, float 0x3FC3E7F2C0000000, float 0x3FCB5BFF00000000], [3 x float] [float 0xBFA07314C0000000, float 0x3FCD162280000000, float 0x3FC16262C0000000], [3 x float] [float 0xBFAE4C5120000000, float 0x3FC5A12300000000, float 0x3FCD537A00000000], [3 x float] [float 0x3FA15D91A0000000, float 0x3FCD688BE0000000, float 0x3FCC7325A0000000], [3 x float] [float 0x3FB52BF560000000, float 0x3FBDCA6CA0000000, float 0x3FCCC2DF00000000], [3 x float] [float 0x3FC059AFA0000000, float 0x3FC7E468C0000000, float 0x3FCB3C7920000000], [3 x float] [float 0x3FA8559700000000, float 0x3FB05D0FA0000000, float 0x3FCBC1F000000000], [3 x float] [float 0xBF6409A240000000, float 0x3FBD3A81E0000000, float 0x3FD0D9BA20000000], [3 x float] [float 0xBFB3E99640000000, float 0x3FB5203A40000000, float 0x3FCFF61240000000], [3 x float] [float 0x3F8486F040000000, float 0x3F98D972C0000000, float 0x3FD0709FA0000000], [3 x float] [float 0x3FAB3BB840000000, float 0x3FBC862700000000, float 0x3FD3DDB560000000], [3 x float] [float 0xBFB42C7FC0000000, float 0x3F7233DF20000000, float 0x3FCCAE9680000000], [3 x float] [float 0xBFAC4A1F00000000, float 0xBFAE4CD740000000, float 0x3FCBE3E2A0000000], [3 x float] [float 0xBFB0BC2760000000, float 0x3F80A350E0000000, float 0x3FD55681E0000000], [3 x float] [float 0xBFB3810E80000000, float 0xBFB948CB40000000, float 0x3FD25DEE00000000], [3 x float] [float 0xBFB268C260000000, float 0xBFBDA554C0000000, float 0x3FC9591460000000], [3 x float] [float 0xBFAFFC7600000000, float 0x3FC7817BA0000000, float 0x3FD7B0BC00000000], [3 x float] [float 0xBFA5D85160000000, float 0x3FD0555C60000000, float 0x3FD0D06780000000], [3 x float] [float 0x3F8892EE80000000, float 0x3FCBD805E0000000, float 0x3FD45EE140000000], [3 x float] [float 0xBFA593E600000000, float 0x3FD49D12C0000000, float 0x3FD4E38640000000], [3 x float] [float 0x3FB735B0C0000000, float 0x3FCA58CD20000000, float 0x3FD2DDBDC0000000], [3 x float] [float 0x3FADCEBFE0000000, float 0x3FD2CB2520000000, float 0x3FD1C98E60000000], [3 x float] [float 0x3FC4292820000000, float 0x3FD21A8AC0000000, float 0x3FD2DAE3E0000000], [3 x float] [float 0x3FBE458040000000, float 0x3FD0B456C0000000, float 0x3FC305C8A0000000], [3 x float] [float 0x3FB0B4F1E0000000, float 0x3FD5456B40000000, float 0x3FDA5CC420000000], [3 x float] [float 0x3FC2151A40000000, float 0x3FDCEB1C40000000, float 0x3FD434DAE0000000], [3 x float] [float 0x3F5BF37B80000000, float 0x3FDD340920000000, float 0x3FD6E2C120000000], [3 x float] [float 0xBFAB1BDE80000000, float 0x3FD6D1DCE0000000, float 0x3FDD3E9200000000], [3 x float] [float 0x3FCFB4DCE0000000, float 0x3FD0E2B4A0000000, float 0x3FC3881A20000000], [3 x float] [float 0x3FD3A361A0000000, float 0x3FDAB63D40000000, float 0x3FD08C21E0000000], [3 x float] [float 0x3FC54ADBC0000000, float 0x3FC319B4E0000000, float 0x3FBE7503C0000000], [3 x float] [float 0x3FD84D2700000000, float 0x3FD2B2F240000000, float 0x3FC1E76C80000000], [3 x float] [float 0x3F84D48880000000, float 0xBFAC3F3E00000000, float 0xBFC656C500000000]], align 16
@lsf_cb2_16k = internal constant [256 x [3 x float]] [[3 x float] [float 0xBFCB43F1C0000000, float 0xBFD2C6D1E0000000, float 0xBFD5288060000000], [3 x float] [float 0xBFCB35E320000000, float 0xBFCED8D360000000, float 0xBFD5A5B540000000], [3 x float] [float 0xBFCC977C80000000, float 0xBFD39902A0000000, float 0xBFD1BD8380000000], [3 x float] [float 0xBFCD95EE20000000, float 0xBFD26A26E0000000, float 0xBFCD5D5F60000000], [3 x float] [float 0xBFCE860DC0000000, float 0xBFCD41D080000000, float 0xBFD0B37860000000], [3 x float] [float 0xBFC20A06E0000000, float 0xBFCF9E4920000000, float 0xBFD08C5860000000], [3 x float] [float 0xBFC17047A0000000, float 0xBFCFF52760000000, float 0xBFD668BE20000000], [3 x float] [float 0xBFC32A9D60000000, float 0xBFC8B33DA0000000, float 0xBFD203AFC0000000], [3 x float] [float 0xBFC5622820000000, float 0xBFD0B51380000000, float 0xBFC9206420000000], [3 x float] [float 0xBFC6A98AA0000000, float 0xBFC9C4FC20000000, float 0xBFCA9C5E60000000], [3 x float] [float 0xBFBDEE2440000000, float 0xBFC9AE3600000000, float 0xBFCB340D40000000], [3 x float] [float 0xBFC4C48280000000, float 0xBFC26833C0000000, float 0xBFCF5F3520000000], [3 x float] [float 0xBFB500B460000000, float 0xBFC88E4760000000, float 0xBFD10BAE80000000], [3 x float] [float 0xBFB94DF8C0000000, float 0xBFCAB07D00000000, float 0xBFD482C2C0000000], [3 x float] [float 0xBFBD0EFDC0000000, float 0xBFC3842300000000, float 0xBFCC7A0720000000], [3 x float] [float 0xBFB0F24960000000, float 0xBFC6ED2460000000, float 0xBFCA999DC0000000], [3 x float] [float 0xBFC09320E0000000, float 0xBFC5AC4720000000, float 0xBFC3DED6C0000000], [3 x float] [float 0xBFB42F0E00000000, float 0xBFC85B7D00000000, float 0xBFC3DCAD20000000], [3 x float] [float 0xBFB67967C0000000, float 0xBFC2E8C8A0000000, float 0xBFC5AD4B20000000], [3 x float] [float 0xBFC20D8020000000, float 0xBFC04851A0000000, float 0xBFC6C5C140000000], [3 x float] [float 0xBFC031F8A0000000, float 0xBFCCAAC100000000, float 0xBFC3AA7160000000], [3 x float] [float 0xBFB9F98B80000000, float 0xBFC8506140000000, float 0xBFBD53BD20000000], [3 x float] [float 0xBFBA3A29C0000000, float 0xBFBB36AC60000000, float 0xBFC3599240000000], [3 x float] [float 0xBFBA6BD6E0000000, float 0xBFC27D9120000000, float 0xBFBAFA0D80000000], [3 x float] [float 0xBFC5DC93E0000000, float 0xBFC1FCB920000000, float 0xBFC1767900000000], [3 x float] [float 0xBFC5960740000000, float 0xBFC9FE0040000000, float 0xBFC153BD20000000], [3 x float] [float 0xBFC1B04EE0000000, float 0xBFBDB4EDC0000000, float 0xBFBCA5CE60000000], [3 x float] [float 0xBFC2922540000000, float 0xBFC5940FE0000000, float 0xBFB7B57C40000000], [3 x float] [float 0xBFC02D2FE0000000, float 0xBFCC371540000000, float 0xBFB76134C0000000], [3 x float] [float 0xBFCB416BE0000000, float 0xBFC7A76DA0000000, float 0xBFBA048E00000000], [3 x float] [float 0xBFC8CB85A0000000, float 0xBFC1FDBD20000000, float 0xBFB40BBB20000000], [3 x float] [float 0xBFC63AF320000000, float 0xBFC9405700000000, float 0xBFAECAAB80000000], [3 x float] [float 0xBFC954B060000000, float 0xBFCEF6CF00000000, float 0xBFB78D1D80000000], [3 x float] [float 0xBFC3F90540000000, float 0xBFD08B9340000000, float 0xBFBC93A720000000], [3 x float] [float 0xBFCEF8AD20000000, float 0xBFC876C060000000, float 0xBFB029F160000000], [3 x float] [float 0xBFD0B9CB60000000, float 0xBFCED41320000000, float 0xBFBA66DBE0000000], [3 x float] [float 0xBFCC5E13C0000000, float 0xBFCF19B4E0000000, float 0xBFA51F6020000000], [3 x float] [float 0xBFCCB178C0000000, float 0xBFCDCA7D60000000, float 0xBFC4AE42A0000000], [3 x float] [float 0xBFCA0F4520000000, float 0xBFD2D898C0000000, float 0xBFC021EA40000000], [3 x float] [float 0xBFCAD234E0000000, float 0xBFD366CB20000000, float 0xBFAB391920000000], [3 x float] [float 0xBFD03F39E0000000, float 0xBFD2E25C80000000, float 0xBFC3F97240000000], [3 x float] [float 0xBFD1CD1840000000, float 0xBFD530D300000000, float 0xBFB5D21780000000], [3 x float] [float 0xBFD337AC40000000, float 0xBFC970A3E0000000, float 0xBFB8470A80000000], [3 x float] [float 0xBFD0ABA7C0000000, float 0xBFC5B927E0000000, float 0xBFC0F4F940000000], [3 x float] [float 0xBFCB1F2DC0000000, float 0xBFC612F900000000, float 0xBFC50728E0000000], [3 x float] [float 0xBFCD3B3A60000000, float 0xBFBF452820000000, float 0xBFBFCA2120000000], [3 x float] [float 0xBFD04BD760000000, float 0xBFC15D91A0000000, float 0xBFB4E9C460000000], [3 x float] [float 0xBFD0E24FE0000000, float 0xBFC3D4AE40000000, float 0xBFCB571D20000000], [3 x float] [float 0xBFD3B9F120000000, float 0xBFBB5C4A80000000, float 0xBFB59B8020000000], [3 x float] [float 0xBFCF0EF560000000, float 0xBFB53671A0000000, float 0xBFB5F94860000000], [3 x float] [float 0xBFD02224E0000000, float 0xBFB09C8000000000, float 0xBFC2C07240000000], [3 x float] [float 0xBFC95D5F60000000, float 0xBFBB108800000000, float 0xBFC82D7300000000], [3 x float] [float 0xBFC838F360000000, float 0xBFB68900C0000000, float 0xBFBC17A8A0000000], [3 x float] [float 0xBFC94AE420000000, float 0xBFB98E8640000000, float 0xBFA68B19A0000000], [3 x float] [float 0xBFD1379320000000, float 0xBFBB2239E0000000, float 0xBF96078100000000], [3 x float] [float 0xBFCD9CD820000000, float 0xBFAE1E4F80000000, float 0xBFA5334C60000000], [3 x float] [float 0xBFCCE019C0000000, float 0xBF9C2938E0000000, float 0xBFB6501E20000000], [3 x float] [float 0xBFC4864020000000, float 0xBFADDEDF20000000, float 0xBFB46D0D40000000], [3 x float] [float 0xBFC4513B60000000, float 0xBFBBE43680000000, float 0xBFB1381520000000], [3 x float] [float 0xBFC5D26300000000, float 0xBFAB25D4A0000000, float 0xBF91FB82C0000000], [3 x float] [float 0xBFC66D2EE0000000, float 0xBF8BF401C0000000, float 0xBFA959C4A0000000], [3 x float] [float 0xBFC3F7F060000000, float 0xBFBBBEA920000000, float 0xBF7098D480000000], [3 x float] [float 0xBFCC279580000000, float 0xBFB515AD20000000, float 0x3F8E9E1B00000000], [3 x float] [float 0xBFCBE06100000000, float 0xBF8A95C860000000, float 0xBF83458CE0000000], [3 x float] [float 0xBFBF8FEF00000000, float 0xBFA4EA2900000000, float 0xBFA4F227E0000000], [3 x float] [float 0xBFBEAF35E0000000, float 0xBFB8570820000000, float 0xBFAED89040000000], [3 x float] [float 0xBFBE16E7A0000000, float 0xBFB0C33B60000000, float 0x3F685058E0000000], [3 x float] [float 0xBFBA6D58C0000000, float 0xBFBD011900000000, float 0xBF97D73CA0000000], [3 x float] [float 0xBFC1746880000000, float 0xBFC3239A40000000, float 0xBFAA4F65A0000000], [3 x float] [float 0xBFBE8C8AC0000000, float 0xBFC50B0F20000000, float 0xBF82A49800000000], [3 x float] [float 0xBFBAC1F420000000, float 0xBFAF349380000000, float 0xBFB5432880000000], [3 x float] [float 0xBFB24B44A0000000, float 0xBFB21F18C0000000, float 0xBFA31F2560000000], [3 x float] [float 0xBFB4C404A0000000, float 0xBFC312EC60000000, float 0xBFAD0D0680000000], [3 x float] [float 0xBFB1CEBFE0000000, float 0xBFBBAC6040000000, float 0xBFB1B4EDC0000000], [3 x float] [float 0xBFAC7ABFC0000000, float 0xBFBE0BE520000000, float 0xBF99B17480000000], [3 x float] [float 0xBFB7897200000000, float 0xBFC854E6E0000000, float 0xBFAEBAF100000000], [3 x float] [float 0xBFB26EC9E0000000, float 0xBFC58F3660000000, float 0xBF7AC9AFE0000000], [3 x float] [float 0xBFA10D5A60000000, float 0xBFC3C443A0000000, float 0xBFABF59460000000], [3 x float] [float 0xBFB01FFB40000000, float 0xBFC0449560000000, float 0xBFBBBA01E0000000], [3 x float] [float 0xBFAD0678C0000000, float 0xBFC5DD3340000000, float 0xBFBA535440000000], [3 x float] [float 0xBF92B62840000000, float 0xBFC05DD0A0000000, float 0xBFB851CA00000000], [3 x float] [float 0xBFACCB5BC0000000, float 0xBFBFA95C80000000, float 0xBFC2B8B6A0000000], [3 x float] [float 0xBF98012E00000000, float 0xBFC3CA7D60000000, float 0xBFC196E160000000], [3 x float] [float 0xBFAA9307A0000000, float 0xBFB410A560000000, float 0xBFB7E8BC20000000], [3 x float] [float 0xBF8DE614A0000000, float 0xBFBABABEA0000000, float 0xBFC1671AC0000000], [3 x float] [float 0xBFAA68F4C0000000, float 0xBFB4CEC420000000, float 0xBFC2009700000000], [3 x float] [float 0xBFB7BCF4E0000000, float 0xBFB788B980000000, float 0xBFBB99D460000000], [3 x float] [float 0xBF9968D760000000, float 0xBFC20C0F00000000, float 0xBFC77481C0000000], [3 x float] [float 0xBFB0766C60000000, float 0xBFBCEF2400000000, float 0xBFC8EED020000000], [3 x float] [float 0xBF1EEED8A0000000, float 0xBFB94EC200000000, float 0xBFC900C520000000], [3 x float] [float 0xBF9CC3A000000000, float 0xBFA8B545C0000000, float 0xBFC5014300000000], [3 x float] [float 0xBFB7E9FAE0000000, float 0xBFACA7F800000000, float 0xBFC61C7140000000], [3 x float] [float 0xBFBD4C4480000000, float 0xBFBAB5C3A0000000, float 0xBFCB8BCE00000000], [3 x float] [float 0xBFA8D759E0000000, float 0xBFC0E770C0000000, float 0xBFCF1A5440000000], [3 x float] [float 0xBFC46E6DA0000000, float 0xBFAED7C700000000, float 0xBFC6DC1A40000000], [3 x float] [float 0xBFC15F8900000000, float 0xBFB145E920000000, float 0xBFC0E15020000000], [3 x float] [float 0xBFB4163780000000, float 0xBFA379FAA0000000, float 0xBFC00370C0000000], [3 x float] [float 0xBF86A72640000000, float 0xBFB0630660000000, float 0xBFBA3D2D80000000], [3 x float] [float 0xBFA159A300000000, float 0xBF9B1EE240000000, float 0xBFBC07BBC0000000], [3 x float] [float 0xBFC0874420000000, float 0xBF8D1D4740000000, float 0xBFBC800EA0000000], [3 x float] [float 0xBFC8686E80000000, float 0xBF9F6555C0000000, float 0xBFC162B6A0000000], [3 x float] [float 0xBFB5006080000000, float 0x3F86859860000000, float 0xBFB9A48B60000000], [3 x float] [float 0xBFC779BFE0000000, float 0x3F5B0CCBC0000000, float 0xBFB95592E0000000], [3 x float] [float 0xBFB3247460000000, float 0xBF9F102360000000, float 0xBFAFDAE820000000], [3 x float] [float 0xBFA042B740000000, float 0xBFA9E1D220000000, float 0xBFAE6C4C60000000], [3 x float] [float 0xBFAA563660000000, float 0x3F862C7760000000, float 0xBFAAB32480000000], [3 x float] [float 0xBFC03925C0000000, float 0x3F81CB89E0000000, float 0xBFA8774680000000], [3 x float] [float 0xBFC2AD6020000000, float 0x3FA58383A0000000, float 0xBFB3D284A0000000], [3 x float] [float 0xBFB7F30620000000, float 0x3FABB8A1A0000000, float 0xBFAEF65120000000], [3 x float] [float 0xBFB7357E60000000, float 0x3F8A5A89C0000000, float 0xBF92A1B5C0000000], [3 x float] [float 0xBFB46CA8A0000000, float 0xBFA0EEAEA0000000, float 0x3F5847F560000000], [3 x float] [float 0xBFA0E6AFC0000000, float 0xBF96DDF000000000, float 0xBF8DB55260000000], [3 x float] [float 0xBF73A71160000000, float 0xBF91C150A0000000, float 0xBFAEC80C80000000], [3 x float] [float 0xBF999F1AE0000000, float 0x3F9B05FAE0000000, float 0xBF6ABB01C0000000], [3 x float] [float 0xBF578B3700000000, float 0x3F9A9E2BC0000000, float 0xBFA4EFCBE0000000], [3 x float] [float 0xBFB3277820000000, float 0x3F93760C00000000, float 0x3F9C35CE20000000], [3 x float] [float 0xBF9F8CEB40000000, float 0xBF88CF3980000000, float 0x3FA18DAC20000000], [3 x float] [float 0x3F7BCA96A0000000, float 0x3F72EA52E0000000, float 0x3F932A8CA0000000], [3 x float] [float 0x3F8B6D43E0000000, float 0xBFA0B08DE0000000, float 0xBF984CF080000000], [3 x float] [float 0x3FA26DCE40000000, float 0x3F786CA8A0000000, float 0xBF88140DE0000000], [3 x float] [float 0x3F80878740000000, float 0xBFA76C8B40000000, float 0x3F997C8080000000], [3 x float] [float 0x3F8ABC9480000000, float 0x3F9172EF00000000, float 0x3FABB5BF60000000], [3 x float] [float 0xBF8A99FA20000000, float 0x3FA6F86A00000000, float 0x3FA29973E0000000], [3 x float] [float 0x3F99A7C180000000, float 0x3FA8225740000000, float 0x3F846D3FA0000000], [3 x float] [float 0x3FAB8BCE00000000, float 0x3F98C21E20000000, float 0x3FA044AE80000000], [3 x float] [float 0x3FACE5F740000000, float 0xBF9F61ED60000000, float 0x3F95CD4EE0000000], [3 x float] [float 0x3FA082ADC0000000, float 0x3FAAF8DF80000000, float 0x3FA98AA860000000], [3 x float] [float 0x3FA21BE2C0000000, float 0x3FB717CE60000000, float 0x3FA012DFE0000000], [3 x float] [float 0x3FB0917D60000000, float 0x3FB2051440000000, float 0x3FA4F5D360000000], [3 x float] [float 0x3F96A48740000000, float 0x3FAC1333C0000000, float 0x3FB74FA480000000], [3 x float] [float 0x3FA56238E0000000, float 0x3FB6145960000000, float 0x3FB1F85D80000000], [3 x float] [float 0x3FB215CA60000000, float 0x3FAF27FE40000000, float 0x3FB42DE000000000], [3 x float] [float 0x3FADF47FA0000000, float 0x3F91537A00000000, float 0x3FB4E48620000000], [3 x float] [float 0x3EE2DFD6A0000000, float 0x3FB624DD20000000, float 0x3FAEA48740000000], [3 x float] [float 0x3FB23DA300000000, float 0x3FBB7E0AC0000000, float 0x3FAE3B4700000000], [3 x float] [float 0x3FB83E63E0000000, float 0x3FB89DF120000000, float 0x3FB74A98A0000000], [3 x float] [float 0x3FA86423A0000000, float 0x3FBC626F60000000, float 0x3FBC795F60000000], [3 x float] [float 0x3FBF587D60000000, float 0x3FB745CFE0000000, float 0x3FAD630220000000], [3 x float] [float 0x3FBA172AC0000000, float 0x3FAAC6EF40000000, float 0x3F9EA07700000000], [3 x float] [float 0x3FB3996FA0000000, float 0x3FB60A41A0000000, float 0xBF7DB445E0000000], [3 x float] [float 0x3FBF97DD00000000, float 0x3F9F81E8A0000000, float 0x3FB52F09E0000000], [3 x float] [float 0x3FC15AA720000000, float 0x3FBA5FA660000000, float 0x3F8389B520000000], [3 x float] [float 0x3FBEDE11A0000000, float 0x3FB0B673C0000000, float 0xBF98AC5C20000000], [3 x float] [float 0x3FB3D5ED00000000, float 0x3F9D35EB80000000, float 0xBF8954EB20000000], [3 x float] [float 0x3FC07AC820000000, float 0x3F9254A3C0000000, float 0xBF6FBC5DE0000000], [3 x float] [float 0x3FC441AAC0000000, float 0x3FA80B6740000000, float 0x3F9E496EE0000000], [3 x float] [float 0x3FBA2F7B20000000, float 0xBF621CCDA0000000, float 0x3FA31CC960000000], [3 x float] [float 0x3FB6F39080000000, float 0xBF95E28AA0000000, float 0xBF7C1615E0000000], [3 x float] [float 0x3FC1A743A0000000, float 0x3F9BE1A820000000, float 0xBFAB400B80000000], [3 x float] [float 0x3FB9463D00000000, float 0xBF88F81E80000000, float 0xBFA8D759E0000000], [3 x float] [float 0x3FB57F51E0000000, float 0x3FA282A560000000, float 0xBFAFE15440000000], [3 x float] [float 0x3FA8B19A40000000, float 0xBF84F93BC0000000, float 0xBFAAC625E0000000], [3 x float] [float 0x3FBC31CEA0000000, float 0x3F7F99C380000000, float 0xBFB86130A0000000], [3 x float] [float 0x3FB17BB740000000, float 0xBF8D523B40000000, float 0xBFBAA1A500000000], [3 x float] [float 0x3FB05C5720000000, float 0xBFACE28EE0000000, float 0xBFB0224680000000], [3 x float] [float 0x3FAE46AE40000000, float 0xBFA6DFA440000000, float 0xBF9859C8C0000000], [3 x float] [float 0x3F9F7C6760000000, float 0x3F965E8920000000, float 0xBFB619DAA0000000], [3 x float] [float 0x3F9891E220000000, float 0xBFA75579A0000000, float 0xBFB383F0C0000000], [3 x float] [float 0x3FAAB30300000000, float 0xBFAEA161E0000000, float 0xBFBC132300000000], [3 x float] [float 0x3F8ACD5B60000000, float 0xBF94E8FB00000000, float 0xBFBF37C9A0000000], [3 x float] [float 0x3F92995240000000, float 0xBFB8C59740000000, float 0xBFB6B8D820000000], [3 x float] [float 0x3F94AE42A0000000, float 0xBFB39389C0000000, float 0xBFA8A222E0000000], [3 x float] [float 0x3F94C4CE00000000, float 0xBFB58E64C0000000, float 0xBFC1593600000000], [3 x float] [float 0x3FA484D760000000, float 0xBFAB5FA220000000, float 0xBFC4BABEA0000000], [3 x float] [float 0xBF92391D60000000, float 0xBFBA62CBA0000000, float 0xBFAE7E8460000000], [3 x float] [float 0xBF90E12E80000000, float 0xBFB1F49060000000, float 0xBF91455220000000], [3 x float] [float 0x3F73DC8B80000000, float 0xBFBCCB8E00000000, float 0xBF92281340000000], [3 x float] [float 0x3FA48FDA00000000, float 0xBFB2E95740000000, float 0xBF75D1C3A0000000], [3 x float] [float 0x3F6209EDC0000000, float 0xBFB83FC440000000, float 0x3FA73A3660000000], [3 x float] [float 0xBFAD245B20000000, float 0xBFB4E24BC0000000, float 0x3F924DD300000000], [3 x float] [float 0xBF9FD86A80000000, float 0xBFC2237CE0000000, float 0x3F82D01C00000000], [3 x float] [float 0xBFBA513B60000000, float 0xBFBF67A100000000, float 0x3F9EC80C80000000], [3 x float] [float 0xBFAF995EE0000000, float 0xBFC2932940000000, float 0x3FB3A14CE0000000], [3 x float] [float 0xBFB2D7E880000000, float 0xBFA9D66AE0000000, float 0x3FB2A67E80000000], [3 x float] [float 0xBFBE0E1F80000000, float 0xBFC8F32BE0000000, float 0x3FA4881E40000000], [3 x float] [float 0xBFC7B5D040000000, float 0xBFC11A75C0000000, float 0x3FA7855100000000], [3 x float] [float 0xBFC48094E0000000, float 0xBFAD4CB9E0000000, float 0x3FAD000CA0000000], [3 x float] [float 0xBFC6D8BA40000000, float 0xBFC6331E40000000, float 0xBF7FF92F20000000], [3 x float] [float 0xBFC996D900000000, float 0xBFCA390CA0000000, float 0x3FA83D35E0000000], [3 x float] [float 0xBFC37FC760000000, float 0xBFCFF49060000000, float 0x3FA1BE6E60000000], [3 x float] [float 0xBFC7C2F400000000, float 0xBFCD8F81E0000000, float 0xBF60F94C80000000], [3 x float] [float 0xBFBF5F4E40000000, float 0xBFCB8BF800000000, float 0xBF992428E0000000], [3 x float] [float 0xBFCFF22C00000000, float 0xBFCAD7E880000000, float 0x3F836501E0000000], [3 x float] [float 0xBFC47E6B40000000, float 0xBFD07E3080000000, float 0xBFA4FCE740000000], [3 x float] [float 0xBFCBBCA100000000, float 0xBFD284C280000000, float 0x3F9BD59920000000], [3 x float] [float 0xBFCCFA5900000000, float 0xBFC2EC8D60000000, float 0xBF9749ADC0000000], [3 x float] [float 0xBFD27AAAC0000000, float 0xBFD16AE7E0000000, float 0xBF8C90C4E0000000], [3 x float] [float 0xBFD0CDAF40000000, float 0xBFCE5729C0000000, float 0x3FB28D9720000000], [3 x float] [float 0xBFD399E0E0000000, float 0xBFC81B5C80000000, float 0xBFA0D77B80000000], [3 x float] [float 0xBFD09E5E20000000, float 0xBFD621D960000000, float 0x3F98B7A1C0000000], [3 x float] [float 0xBFD1599680000000, float 0xBFC18DE6E0000000, float 0x3FA4AFD540000000], [3 x float] [float 0xBFC9C4C160000000, float 0xBFD25AA2E0000000, float 0x3FBB8CA820000000], [3 x float] [float 0xBFCE2C3CA0000000, float 0xBFC4EA2900000000, float 0x3FBD24E160000000], [3 x float] [float 0xBFC47A7CA0000000, float 0xBFCADA5540000000, float 0x3FBCB53500000000], [3 x float] [float 0xBFD0D4BF00000000, float 0xBFAD0D2800000000, float 0x3FB7F00260000000], [3 x float] [float 0xBFD1BE1220000000, float 0xBFA319C5A0000000, float 0x3F906466C0000000], [3 x float] [float 0xBFD2C87980000000, float 0xBFA4B23140000000, float 0xBFAFC0D2C0000000], [3 x float] [float 0xBFCB828800000000, float 0x3F97731900000000, float 0x3FAC4FA060000000], [3 x float] [float 0xBFD03FB7A0000000, float 0x3FADFD8AE0000000, float 0xBF23CAB820000000], [3 x float] [float 0xBFCF938160000000, float 0x3F98D2E520000000, float 0xBFADF223A0000000], [3 x float] [float 0xBFC267B600000000, float 0x3F7BB7B6C0000000, float 0x3F8CCC0380000000], [3 x float] [float 0xBFC7F223A0000000, float 0x3FA9070FC0000000, float 0xBFA23D70A0000000], [3 x float] [float 0xBFC9229EA0000000, float 0x3FBCB19A40000000, float 0x3FA026CC20000000], [3 x float] [float 0xBFBFCFC400000000, float 0x3FB61101C0000000, float 0xBF954C9860000000], [3 x float] [float 0xBFC028ED60000000, float 0x3F915DF660000000, float 0x3FB8827B60000000], [3 x float] [float 0xBFB46ED240000000, float 0x3FB494F6A0000000, float 0x3FAA21A720000000], [3 x float] [float 0xBFACCF4A60000000, float 0x3FB34C1A80000000, float 0xBF9CF0B6C0000000], [3 x float] [float 0xBFBED8A120000000, float 0x3FC301E260000000, float 0x3F9D1CC100000000], [3 x float] [float 0xBFC4B43960000000, float 0x3FB9EE2440000000, float 0x3FBE2888C0000000], [3 x float] [float 0xBF6A9973E0000000, float 0x3FB5593E60000000, float 0xBF91787060000000], [3 x float] [float 0xBFA1695DA0000000, float 0x3FC23ED100000000, float 0x3F7E518F40000000], [3 x float] [float 0xBFA342AAA0000000, float 0x3F9A7DED60000000, float 0x3FB6E935C0000000], [3 x float] [float 0xBFB533A040000000, float 0x3FC79B90E0000000, float 0x3FB2BECEE0000000], [3 x float] [float 0x3F7A6937E0000000, float 0x3FC560BF60000000, float 0x3FB49ECB40000000], [3 x float] [float 0x3FA214CEC0000000, float 0x3FC26F5020000000, float 0x3F6A5CA2A0000000], [3 x float] [float 0xBF9805A2E0000000, float 0x3FB690CD40000000, float 0x3FC3888720000000], [3 x float] [float 0x3F79967440000000, float 0xBF98AD6880000000, float 0x3FB3EA2D20000000], [3 x float] [float 0x3FA46CFC80000000, float 0x3FAD7BE980000000, float 0xBFA5BCA960000000], [3 x float] [float 0xBF94E831A0000000, float 0x3FA21FF2E0000000, float 0xBFB80E7BC0000000], [3 x float] [float 0x3FB351ACA0000000, float 0x3FAAA80060000000, float 0x3FC2A26E60000000], [3 x float] [float 0x3FB3F993E0000000, float 0x3FC7A4E7A0000000, float 0x3FB7939A80000000], [3 x float] [float 0x3FBB77AF60000000, float 0x3FC2FE1DA0000000, float 0x3F96CC5FC0000000], [3 x float] [float 0x3FB1223180000000, float 0xBFAB0CAA40000000, float 0x3FB0AAEB00000000], [3 x float] [float 0x3FB7E22E60000000, float 0x3FBE3F8980000000, float 0x3FC32D2340000000], [3 x float] [float 0x3FBE8F3AA0000000, float 0x3FC18CF3A0000000, float 0x3FB97B3100000000], [3 x float] [float 0x3FC1BF61A0000000, float 0x3FB3548EC0000000, float 0x3FBF1D92C0000000], [3 x float] [float 0x3FC6467380000000, float 0x3FB3D91260000000, float 0x3FB3C15900000000], [3 x float] [float 0x3FC53A3660000000, float 0x3FC335D240000000, float 0x3FC1140140000000], [3 x float] [float 0x3FC62DE880000000, float 0x3FC3F41AE0000000, float 0x3FA8A71DE0000000], [3 x float] [float 0x3FC4DA3C20000000, float 0x3FB88CC580000000, float 0x3FC600B020000000], [3 x float] [float 0x3FCB774260000000, float 0x3FBCE63A60000000, float 0x3FBD9695E0000000], [3 x float] [float 0x3FCA356960000000, float 0x3FBB3C81A0000000, float 0x3FA08E79A0000000], [3 x float] [float 0x3FC6E4A7C0000000, float 0x3FCA3E8DE0000000, float 0x3FBD60E940000000], [3 x float] [float 0x3FC6B51380000000, float 0x3FB20C8CE0000000, float 0xBF8C37A3E0000000], [3 x float] [float 0x3FCEED8900000000, float 0x3FC55DAAE0000000, float 0x3FB0EB13E0000000], [3 x float] [float 0x3FCC1BB060000000, float 0x3FC77EAA20000000, float 0x3FC60EF9A0000000], [3 x float] [float 0x3FBFA8E720000000, float 0x3FC5DE26A0000000, float 0x3FC5675580000000], [3 x float] [float 0x3FC6AB5800000000, float 0x3FCEBEC680000000, float 0x3FC7DA9CA0000000], [3 x float] [float 0x3FD1687F40000000, float 0x3FCC2FF8E0000000, float 0x3FC0232900000000], [3 x float] [float 0x3FB7FFDE80000000, float 0x3FCE301A80000000, float 0x3FC49B9520000000], [3 x float] [float 0x3FC21CFFE0000000, float 0x3FC8525020000000, float 0x3FCEC5F3A0000000], [3 x float] [float 0x3FA80064A0000000, float 0x3FC5A14480000000, float 0x3FC85F6BA0000000], [3 x float] [float 0x3FB84B3C40000000, float 0x3FBB66D7A0000000, float 0x3FCE149400000000], [3 x float] [float 0x3FBBCCAF80000000, float 0x3FD14013E0000000, float 0x3FD0CD4240000000], [3 x float] [float 0xBF9C6B8B60000000, float 0x3FCDFF5840000000, float 0x3FC138BCE0000000], [3 x float] [float 0x3FD0F7D740000000, float 0x3FD11F6020000000, float 0x3FC97A2CE0000000], [3 x float] [float 0x3FC989F840000000, float 0x3FD2A80D00000000, float 0x3FD0F88FC0000000], [3 x float] [float 0x3FD1090B40000000, float 0x3FCACB9EC0000000, float 0x3FD66C7220000000], [3 x float] [float 0x3FD49E40C0000000, float 0x3FD6111AE0000000, float 0x3FD1552A00000000], [3 x float] [float 0x3FD998E540000000, float 0x3FD0E670E0000000, float 0x3FBC425280000000], [3 x float] [float 0x3FD1C7C100000000, float 0x3FC04EDF60000000, float 0xBFA23D70A0000000], [3 x float] [float 0xBFC6A92E60000000, float 0x3FCAA4D2C0000000, float 0x3FBE7BD480000000], [3 x float] [float 0x3FA9205BC0000000, float 0xBFB38800E0000000, float 0x3FC2A6A880000000], [3 x float] [float 0x3FC7F7AD40000000, float 0x3FA5F266C0000000, float 0xBFC044B6E0000000], [3 x float] [float 0x3FBE2DB620000000, float 0xBF980D8020000000, float 0xBFC1BF8BA0000000], [3 x float] [float 0xBFD2314020000000, float 0x3FB17279A0000000, float 0x3FBFCF7020000000]], align 16
@lsf_cb3_16k = internal constant [128 x [3 x float]] [[3 x float] [float 0xBFCC98C3C0000000, float 0xBFCE3F1420000000, float 0xBFC8129460000000], [3 x float] [float 0xBFC9E48200000000, float 0xBFCBFEB8E0000000, float 0xBFBA5ABC00000000], [3 x float] [float 0xBFD01B1100000000, float 0xBFC49C4DA0000000, float 0xBFC0092CC0000000], [3 x float] [float 0xBFC5A91960000000, float 0xBFC1AF1020000000, float 0xBFC1F99C40000000], [3 x float] [float 0xBFC6952900000000, float 0xBFC2C4B4E0000000, float 0xBFCC7F34A0000000], [3 x float] [float 0xBFBEDE97E0000000, float 0xBFC7F8A900000000, float 0xBFC70F9D20000000], [3 x float] [float 0xBFC90813C0000000, float 0xBFB30068E0000000, float 0xBFC5A55D20000000], [3 x float] [float 0xBFC280A5A0000000, float 0xBFC2466B20000000, float 0xBFB2C66900000000], [3 x float] [float 0xBFBC6A8FC0000000, float 0xBFBC7ECFE0000000, float 0xBFC0BAA580000000], [3 x float] [float 0xBFB8606740000000, float 0xBFC65C0BA0000000, float 0xBFBCA19CA0000000], [3 x float] [float 0xBFBCB66300000000, float 0xBFBA616B60000000, float 0xBFC8FA0520000000], [3 x float] [float 0xBFAEB6E0E0000000, float 0xBFC232A060000000, float 0xBFC4346DC0000000], [3 x float] [float 0xBFC05521A0000000, float 0xBFAA8027E0000000, float 0xBFC3991360000000], [3 x float] [float 0xBFB0521DE0000000, float 0xBFB161C360000000, float 0xBFC501C920000000], [3 x float] [float 0xBFC224F660000000, float 0xBFB17A67A0000000, float 0xBFB78D3F20000000], [3 x float] [float 0xBFAEF77F20000000, float 0xBFB9DEACC0000000, float 0xBFB9773180000000], [3 x float] [float 0xBFBACD8DC0000000, float 0xBFBABDA0E0000000, float 0xBFB105E1C0000000], [3 x float] [float 0xBFB2DAA920000000, float 0xBFAAF038E0000000, float 0xBFB773E240000000], [3 x float] [float 0xBFB698BB40000000, float 0xBF93879C40000000, float 0xBFC0A26600000000], [3 x float] [float 0xBF934A01A0000000, float 0xBFBAA747E0000000, float 0xBFC05CF680000000], [3 x float] [float 0xBF96262CC0000000, float 0xBFA0EC95C0000000, float 0xBFC09F83C0000000], [3 x float] [float 0xBFB571D1E0000000, float 0xBFA85857A0000000, float 0xBFA5334C60000000], [3 x float] [float 0xBFAC9DE060000000, float 0xBFBBC85C20000000, float 0xBFA61E4F80000000], [3 x float] [float 0xBF9C7BCC20000000, float 0xBFAFFFDE80000000, float 0xBFA8AC5C20000000], [3 x float] [float 0xBF626A65C0000000, float 0xBFBC450260000000, float 0xBFB0181E00000000], [3 x float] [float 0x3F54CEC420000000, float 0xBFA1057D20000000, float 0xBFB2891180000000], [3 x float] [float 0xBFA5E2EF40000000, float 0xBF8C558640000000, float 0xBFA15208E0000000], [3 x float] [float 0xBFA3424600000000, float 0xBFC2EC3120000000, float 0xBFB57B41C0000000], [3 x float] [float 0xBFA70D4140000000, float 0x3F789EFD80000000, float 0xBFB7993D60000000], [3 x float] [float 0xBFA9CF7880000000, float 0xBFB4F2F120000000, float 0x3F77B41C00000000], [3 x float] [float 0x3F37657760000000, float 0xBFBAB239A0000000, float 0xBF834EFCC0000000], [3 x float] [float 0xBF6FE43680000000, float 0xBFA8854CE0000000, float 0xBF58AC9F20000000], [3 x float] [float 0xBFA484F900000000, float 0xBFC2D48020000000, float 0xBF8290ABC0000000], [3 x float] [float 0xBFAF28C7A0000000, float 0xBF9FB71FC0000000, float 0x3F8A9F3840000000], [3 x float] [float 0xBF8E0D6700000000, float 0x3F56723240000000, float 0x3F76BFCA80000000], [3 x float] [float 0xBFB9F2DC20000000, float 0xBFC022C460000000, float 0xBF5F18CA00000000], [3 x float] [float 0xBFBA3EAF60000000, float 0xBF398F1D40000000, float 0xBF90192A80000000], [3 x float] [float 0xBFC0FBE340000000, float 0xBFB1D1D480000000, float 0xBF94680180000000], [3 x float] [float 0xBFBA2B8C80000000, float 0xBFB37D5240000000, float 0x3FA62C3440000000], [3 x float] [float 0xBFAC4241C0000000, float 0x3F9BA62660000000, float 0x3F88487BA0000000], [3 x float] [float 0xBFC405CCC0000000, float 0xBF91073140000000, float 0x3F91E64700000000], [3 x float] [float 0xBFB4280AE0000000, float 0x3F6702E660000000, float 0x3FADAF6C60000000], [3 x float] [float 0xBFC4326E20000000, float 0xBF9117F840000000, float 0xBFAC328740000000], [3 x float] [float 0xBFC6F67B20000000, float 0xBFB873FFA0000000, float 0x3F96983520000000], [3 x float] [float 0xBFBC375000000000, float 0x3F8550CA20000000, float 0xBFB4F92B00000000], [3 x float] [float 0xBFC00CD860000000, float 0x3FA92513C0000000, float 0x3FA6D527E0000000], [3 x float] [float 0xBFBCCEA280000000, float 0x3FB02C1B20000000, float 0xBF998D8AA0000000], [3 x float] [float 0xBFC7BF4880000000, float 0x3FAB2F0180000000, float 0xBFA06FAC60000000], [3 x float] [float 0xBFC6A43BC0000000, float 0xBF93D816A0000000, float 0xBFBD78D500000000], [3 x float] [float 0xBFCFF65DC0000000, float 0xBF92168300000000, float 0xBFAE4DE3C0000000], [3 x float] [float 0xBFC9A19000000000, float 0xBFBA729700000000, float 0xBFB11CD1C0000000], [3 x float] [float 0xBFAC5DE9C0000000, float 0x3FA7182240000000, float 0xBFA80F3460000000], [3 x float] [float 0xBF41D36720000000, float 0x3F973C0C20000000, float 0xBFA6F416C0000000], [3 x float] [float 0x3F96D54980000000, float 0xBF90C282C0000000, float 0xBF970C9960000000], [3 x float] [float 0x3F9CF4E880000000, float 0x3F9201CD60000000, float 0xBFB9C1B540000000], [3 x float] [float 0x3FAFA1C260000000, float 0xBF95536940000000, float 0xBFB174E660000000], [3 x float] [float 0x3F9DDB5520000000, float 0xBFB310ECC0000000, float 0xBFB9516120000000], [3 x float] [float 0x3FA60DAA00000000, float 0xBFB1363F60000000, float 0xBFA088B540000000], [3 x float] [float 0x3FAECCE600000000, float 0x3FA1BBCF40000000, float 0xBFA1DC7260000000], [3 x float] [float 0x3FB2371540000000, float 0xBF8C6DA440000000, float 0xBF82817760000000], [3 x float] [float 0x3FABBF9400000000, float 0xBF9EB56FC0000000, float 0xBFC0C929A0000000], [3 x float] [float 0x3F9EEAE9E0000000, float 0x3F99934F00000000, float 0x3F84320100000000], [3 x float] [float 0x3FACA48FA0000000, float 0xBFA7321600000000, float 0x3FA058BC60000000], [3 x float] [float 0x3FA101D1A0000000, float 0xBF63CEE9E0000000, float 0x3FA38A5CE0000000], [3 x float] [float 0x3FB0561D40000000, float 0x3FA75C2900000000, float 0x3F99EA9A40000000], [3 x float] [float 0x3FA13FAF40000000, float 0x3FA3E01580000000, float 0x3FA9724740000000], [3 x float] [float 0x3FB2D64520000000, float 0x3F9D362EA0000000, float 0x3FAED288C0000000], [3 x float] [float 0xBF804BC280000000, float 0x3F97125DE0000000, float 0x3FA65E2480000000], [3 x float] [float 0xBF501F3200000000, float 0x3FABE9C880000000, float 0x3F93311A60000000], [3 x float] [float 0x3FAD2FA0E0000000, float 0x3FAF3061C0000000, float 0x3FAF036CA0000000], [3 x float] [float 0x3F843D89C0000000, float 0x3F8F3519C0000000, float 0x3FB488B540000000], [3 x float] [float 0x3F9749ADC0000000, float 0x3FB2220BC0000000, float 0x3FB1A07B40000000], [3 x float] [float 0x3FAB22F280000000, float 0x3F9E814500000000, float 0x3FB7690140000000], [3 x float] [float 0xBFA5BB9D00000000, float 0x3FAEE9FF00000000, float 0x3FAF77F280000000], [3 x float] [float 0x3FB3AADE60000000, float 0x3FAFFBCE40000000, float 0x3FB6F37FC0000000], [3 x float] [float 0x3FA40053E0000000, float 0x3FB1DC50C0000000, float 0x3FBE7F2C40000000], [3 x float] [float 0x3FB06BCE80000000, float 0x3FB8690DE0000000, float 0x3FB255C100000000], [3 x float] [float 0x3FB82B51C0000000, float 0x3FB1CC8580000000, float 0x3FABBFB580000000], [3 x float] [float 0x3FA5EB7460000000, float 0x3FB7D2C7C0000000, float 0x3F9CA6CA00000000], [3 x float] [float 0x3FB8443920000000, float 0x3FB9647340000000, float 0x3FB9E279E0000000], [3 x float] [float 0x3FBE1BC120000000, float 0x3FA8E23B00000000, float 0x3FB7D61F60000000], [3 x float] [float 0x3FBEB51BE0000000, float 0x3FBF6D1180000000, float 0x3FAA643CC0000000], [3 x float] [float 0x3FBA82C6E0000000, float 0x3FB5D29DC0000000, float 0xBF85E9E1C0000000], [3 x float] [float 0x3FC3375420000000, float 0x3FAE99A620000000, float 0x3F94C447C0000000], [3 x float] [float 0x3FBBAA36A0000000, float 0x3F91950340000000, float 0x3F81A005C0000000], [3 x float] [float 0x3FBBC18B60000000, float 0x3F97CFA260000000, float 0xBFB05E80C0000000], [3 x float] [float 0x3F941FA760000000, float 0x3FB2813440000000, float 0xBF9F0F1700000000], [3 x float] [float 0x3FC8AB0420000000, float 0x3FB35C1820000000, float 0x3FB23747A0000000], [3 x float] [float 0x3FCC4E50C0000000, float 0x3FB1B68060000000, float 0xBFA1F6A940000000], [3 x float] [float 0x3FC81C68E0000000, float 0x3FC0275260000000, float 0x3FA20902E0000000], [3 x float] [float 0x3FC7C6FBE0000000, float 0x3FA64A7B40000000, float 0xBFBA09EDC0000000], [3 x float] [float 0xBFA5C4EB60000000, float 0x3FB9826680000000, float 0x3F6A932940000000], [3 x float] [float 0xBF8F59CD00000000, float 0xBF9C2E7700000000, float 0x3FA78E1940000000], [3 x float] [float 0x3FA173B860000000, float 0xBFA7701540000000, float 0x3FB892BC20000000], [3 x float] [float 0x3F7D627C00000000, float 0xBFB7E64F60000000, float 0x3FA7C97960000000], [3 x float] [float 0xBFAA3D2D80000000, float 0xBFAFCAEA80000000, float 0x3FB54A0A00000000], [3 x float] [float 0xBFA75C4A80000000, float 0xBFC11001E0000000, float 0x3FAB226C40000000], [3 x float] [float 0xBFA35FC3C0000000, float 0x3F989E7740000000, float 0x3FC0C7C960000000], [3 x float] [float 0xBF94B3C3E0000000, float 0xBFBDAE6000000000, float 0x3FC02656A0000000], [3 x float] [float 0xBFC138EF40000000, float 0xBFA294BBE0000000, float 0x3FBC7F9940000000], [3 x float] [float 0xBFBC4EB560000000, float 0xBFC47BAAA0000000, float 0x3FB782E440000000], [3 x float] [float 0xBFB7E30880000000, float 0xBFC7ACB420000000, float 0x3F8C8C0CE0000000], [3 x float] [float 0xBFB52E1F00000000, float 0xBFC56DEBA0000000, float 0xBFAA7BB300000000], [3 x float] [float 0xBFC5C065C0000000, float 0xBFC624F660000000, float 0xBF7D4E8FC0000000], [3 x float] [float 0xBFC06A4CA0000000, float 0xBFCB479D40000000, float 0xBFAB4EFCC0000000], [3 x float] [float 0xBFB4712E40000000, float 0xBFC3BA12C0000000, float 0xBFCF8ED1C0000000], [3 x float] [float 0xBFA0820600000000, float 0xBFBBD76EE0000000, float 0xBFCA2107C0000000], [3 x float] [float 0xBFC1EF5AA0000000, float 0xBFC9890D60000000, float 0xBFD2355480000000], [3 x float] [float 0x3F863454A0000000, float 0xBFB331D2E0000000, float 0xBFC54A6660000000], [3 x float] [float 0xBFB7E35C60000000, float 0x3FC28F8E80000000, float 0x3FA176DDA0000000], [3 x float] [float 0xBFA416BDC0000000, float 0x3FBCFB8700000000, float 0x3FBC6DF820000000], [3 x float] [float 0x3FA4CB3A20000000, float 0xBFA045DC80000000, float 0x3FC6478860000000], [3 x float] [float 0xBFC5058DE0000000, float 0x3FC0D26740000000, float 0x3FC32E05C0000000], [3 x float] [float 0x3F9B89D6A0000000, float 0x3FBB76C480000000, float 0x3FC6F33440000000], [3 x float] [float 0x3FA81BA800000000, float 0x3FC44D3380000000, float 0x3FBA6FB4C0000000], [3 x float] [float 0xBFB210ADC0000000, float 0x3FCAF05200000000, float 0x3FC13EF6C0000000], [3 x float] [float 0x3FB82A1300000000, float 0x3FC18ADAC0000000, float 0x3FC55CB7A0000000], [3 x float] [float 0x3FB606A6E0000000, float 0x3FB04BD340000000, float 0x3FC59C0EC0000000], [3 x float] [float 0x3FC46644E0000000, float 0x3FBEF31B20000000, float 0x3FC3C1F860000000], [3 x float] [float 0x3FC2D434A0000000, float 0x3FC4914B20000000, float 0x3FBD68E820000000], [3 x float] [float 0x3FBEC2ACC0000000, float 0x3FC98E21A0000000, float 0x3FC7294DE0000000], [3 x float] [float 0x3FC8805A20000000, float 0x3FC6560420000000, float 0x3FC5DA9CA0000000], [3 x float] [float 0x3FC45F2020000000, float 0x3FC2327680000000, float 0x3FCDDE5080000000], [3 x float] [float 0x3FCDB23DE0000000, float 0x3FC3392180000000, float 0x3FBA4CE820000000], [3 x float] [float 0x3FC81A2E80000000, float 0x3FCC61E920000000, float 0x3FCD479D40000000], [3 x float] [float 0x3FD06F2E80000000, float 0x3FCAD6F540000000, float 0x3FC4AD2560000000], [3 x float] [float 0x3FD080CB60000000, float 0x3FCFB7AE60000000, float 0x3FD0087440000000], [3 x float] [float 0xBFC50D0EE0000000, float 0xBF22BE48A0000000, float 0x3FCDC14840000000]], align 16
@lsf_cb4_16k = internal constant [128 x [3 x float]] [[3 x float] [float 0xBFC8C050C0000000, float 0xBFD37F4560000000, float 0xBFD03DE1E0000000], [3 x float] [float 0xBFC5020C40000000, float 0xBFD1C73EE0000000, float 0xBFC3994E20000000], [3 x float] [float 0xBFC15DFEC0000000, float 0xBFCAC471C0000000, float 0xBFCB19C5A0000000], [3 x float] [float 0xBFBF2FBA00000000, float 0xBFCB9D2C00000000, float 0xBFD2B38500000000], [3 x float] [float 0xBFC971A7E0000000, float 0xBFC4B1BBC0000000, float 0xBFCF0B7C40000000], [3 x float] [float 0xBFC502C4E0000000, float 0xBFC71CEB00000000, float 0xBFC1AC4720000000], [3 x float] [float 0xBFB88DE2A0000000, float 0xBFC96ED680000000, float 0xBFC3C065C0000000], [3 x float] [float 0xBFCFCB1CC0000000, float 0xBFCE02D9C0000000, float 0xBFC188B120000000], [3 x float] [float 0xBFC51DABE0000000, float 0xBFBBBABA80000000, float 0xBFC67B3520000000], [3 x float] [float 0xBFBFC9ABC0000000, float 0xBFBC9F83C0000000, float 0xBFCCB93460000000], [3 x float] [float 0xBFB140FEC0000000, float 0xBFC4192200000000, float 0xBFC90EA180000000], [3 x float] [float 0xBFB712E400000000, float 0xBFBE823000000000, float 0xBFC52702A0000000], [3 x float] [float 0xBFB97635E0000000, float 0xBFC2CD74A0000000, float 0xBFBB572DE0000000], [3 x float] [float 0xBFC21C7140000000, float 0xBFBBACA360000000, float 0xBFBBDF8F40000000], [3 x float] [float 0xBFB5C853C0000000, float 0xBFB92CCF60000000, float 0xBFBC25E140000000], [3 x float] [float 0xBFBB03C080000000, float 0xBFABE29300000000, float 0xBFC3C09800000000], [3 x float] [float 0xBFA4B9CB60000000, float 0xBFC277EE40000000, float 0xBFBFC13760000000], [3 x float] [float 0xBFA4F9E380000000, float 0xBFB5839480000000, float 0xBFC249E440000000], [3 x float] [float 0xBFA92146A0000000, float 0xBFBE597D40000000, float 0xBFB1125560000000], [3 x float] [float 0xBFB8A979E0000000, float 0xBFB6676200000000, float 0xBFAC8A15A0000000], [3 x float] [float 0xBFAE017980000000, float 0xBFAE601BC0000000, float 0xBFB6DABA00000000], [3 x float] [float 0xBFBF310980000000, float 0xBFAE0B6FA0000000, float 0xBFB6424A20000000], [3 x float] [float 0xBFAB8AA000000000, float 0xBF968DB8C0000000, float 0xBFBFDC0540000000], [3 x float] [float 0xBFA2D01C00000000, float 0xBFB1A2D720000000, float 0xBFA77B9E00000000], [3 x float] [float 0x3F6FF2E480000000, float 0xBFB9260F60000000, float 0xBFB7562180000000], [3 x float] [float 0xBF5B435260000000, float 0xBFA715E7C0000000, float 0xBFB4D38CE0000000], [3 x float] [float 0xBFB2A4EBE0000000, float 0xBFA173D9E0000000, float 0xBFA3AB4300000000], [3 x float] [float 0xBFB9CF7880000000, float 0xBF7E060FE0000000, float 0xBFB6B606C0000000], [3 x float] [float 0xBFA262ED40000000, float 0xBF7804D980000000, float 0xBFB0050BE0000000], [3 x float] [float 0xBF94B09EA0000000, float 0xBF9B2F2300000000, float 0xBF941AEF60000000], [3 x float] [float 0x3F71937080000000, float 0xBFA523F680000000, float 0xBFC1AFEA40000000], [3 x float] [float 0x3F97F737E0000000, float 0xBF86638440000000, float 0xBFA6FDA840000000], [3 x float] [float 0x3F8BC3C5C0000000, float 0x3F8E5B8560000000, float 0xBFB7CB1CC0000000], [3 x float] [float 0x3FAE8D75A0000000, float 0xBF9FC4C160000000, float 0xBFB88259E0000000], [3 x float] [float 0x3F95A31A40000000, float 0xBFB4A2A900000000, float 0xBFA1B64E00000000], [3 x float] [float 0x3F993F2900000000, float 0xBFA23571E0000000, float 0x3F6A911060000000], [3 x float] [float 0x3F91843C40000000, float 0x3F7C79B340000000, float 0xBF342F61E0000000], [3 x float] [float 0x3FB340D4E0000000, float 0xBF9FA6DF00000000, float 0xBF9FEDE980000000], [3 x float] [float 0x3F99906CC0000000, float 0x3FA8E64B20000000, float 0xBFA4328740000000], [3 x float] [float 0x3FAD32C620000000, float 0x3F96106AC0000000, float 0xBF8349BE80000000], [3 x float] [float 0xBF9305D960000000, float 0x3F984406C0000000, float 0xBF83FC86C0000000], [3 x float] [float 0x3F98A7A420000000, float 0x3FA0EC52A0000000, float 0x3F98E86400000000], [3 x float] [float 0x3FA2F87AE0000000, float 0xBF6C25D080000000, float 0x3FA6CCA2E0000000], [3 x float] [float 0xBF8A5C1C60000000, float 0xBF7D67BA20000000, float 0x3FA0476F20000000], [3 x float] [float 0x3FB3EFBF40000000, float 0x3F96106AC0000000, float 0x3F97AFA720000000], [3 x float] [float 0x3FAB52A840000000, float 0x3FAAA9F7C0000000, float 0x3F9E23AF40000000], [3 x float] [float 0x3F87681660000000, float 0x3FB2077040000000, float 0x3F9D6C7220000000], [3 x float] [float 0xBF5DEEFE40000000, float 0x3FA0F47300000000, float 0x3FAF7D9560000000], [3 x float] [float 0xBFA6F93360000000, float 0x3FA3BF2F60000000, float 0x3F9ADE6580000000], [3 x float] [float 0x3FAF8E5C40000000, float 0x3FA1D12CA0000000, float 0x3FAE9C0220000000], [3 x float] [float 0x3FA18AA860000000, float 0x3FAEE52580000000, float 0x3FB0AFF6E0000000], [3 x float] [float 0x3FAE32C200000000, float 0x3FB51D7980000000, float 0x3FA8316A00000000], [3 x float] [float 0x3FB70AC3A0000000, float 0x3FB0E19320000000, float 0x3FA6C4C5A0000000], [3 x float] [float 0x3FB1245B20000000, float 0x3FB2DFD6A0000000, float 0xBF3C0CA600000000], [3 x float] [float 0x3FB323AB00000000, float 0x3FAEDEB960000000, float 0x3FB5EBFA80000000], [3 x float] [float 0x3FB0FD5CC0000000, float 0x3FBA76C8C0000000, float 0x3FB4636B00000000], [3 x float] [float 0x3FBF4EDB20000000, float 0x3FA2B7BAE0000000, float 0x3FAE13D320000000], [3 x float] [float 0x3FBC6D3FA0000000, float 0x3FB7936820000000, float 0x3FB5DD8FA0000000], [3 x float] [float 0x3FB967FD40000000, float 0x3FBD8FD5C0000000, float 0x3FA41919A0000000], [3 x float] [float 0x3F9473CD60000000, float 0x3FBF72B460000000, float 0x3FA9BB0600000000], [3 x float] [float 0x3FC46CD2A0000000, float 0x3FB955C520000000, float 0x3FAA7DAA40000000], [3 x float] [float 0x3FC19DA9C0000000, float 0x3FB2892260000000, float 0xBF7C5A3E40000000], [3 x float] [float 0x3FC0ABB440000000, float 0x3FC2B31C20000000, float 0x3FB6F672C0000000], [3 x float] [float 0x3FC1B4F620000000, float 0x3FB7CCC040000000, float 0x3FC16EC5C0000000], [3 x float] [float 0x3FB0E76860000000, float 0x3FC31C64C0000000, float 0x3FC00F9900000000], [3 x float] [float 0x3FC9F3ADE0000000, float 0x3FC2A7F800000000, float 0x3FB3BE4480000000], [3 x float] [float 0x3F623810E0000000, float 0x3FB5331A00000000, float 0x3FC0CB2960000000], [3 x float] [float 0x3FBFDDA8C0000000, float 0x3FC6CB18A0000000, float 0x3FC4C76D20000000], [3 x float] [float 0x3FC65D4A60000000, float 0x3FC85BAF60000000, float 0x3FC0450260000000], [3 x float] [float 0x3FC9E175E0000000, float 0x3FC3A82620000000, float 0x3FC4F8B580000000], [3 x float] [float 0x3FCF0DA5E0000000, float 0x3FC9516120000000, float 0x3FC186E3C0000000], [3 x float] [float 0x3FC7C896E0000000, float 0x3FCD5B4680000000, float 0x3FC8BFCA80000000], [3 x float] [float 0xBFAE1CDE60000000, float 0x3FC8FB97C0000000, float 0x3FC22730C0000000], [3 x float] [float 0x3FD03BBC60000000, float 0x3FCFA36E20000000, float 0x3FCA568A60000000], [3 x float] [float 0x3FAF742560000000, float 0xBF9A27AEA0000000, float 0x3FBE8B2A60000000], [3 x float] [float 0xBFAD9A0F00000000, float 0x3FB51B1DA0000000, float 0x3FB2C00DA0000000], [3 x float] [float 0xBFB1B9A5A0000000, float 0x3FC307E180000000, float 0x3F9FE4BCA0000000], [3 x float] [float 0xBF9EF13480000000, float 0xBF816A0560000000, float 0x3FBB2F87A0000000], [3 x float] [float 0xBF9B595780000000, float 0x3FB6645E40000000, float 0xBF83A365C0000000], [3 x float] [float 0xBFB725A260000000, float 0x3F315DF660000000, float 0x3FAD15CEA0000000], [3 x float] [float 0xBFA9E92920000000, float 0xBF93D92320000000, float 0x3F857DE0E0000000], [3 x float] [float 0xBFB4535CA0000000, float 0x3F80DC7680000000, float 0xBF877D0F20000000], [3 x float] [float 0xBFB2982440000000, float 0xBFAF5104E0000000, float 0x3FA8058140000000], [3 x float] [float 0xBFB363C320000000, float 0xBFB2851220000000, float 0xBF7EF416C0000000], [3 x float] [float 0xBF99C41140000000, float 0xBFB2C7EAE0000000, float 0x3F753048A0000000], [3 x float] [float 0xBFBF953DE0000000, float 0xBFA51FA340000000, float 0xBF8126E980000000], [3 x float] [float 0xBFC1E85FE0000000, float 0x3F92B94DA0000000, float 0x3F8450EFE0000000], [3 x float] [float 0xBFC25B9E80000000, float 0xBFBAAF5780000000, float 0x3FA12146A0000000], [3 x float] [float 0xBFB9D61700000000, float 0xBFC13404E0000000, float 0xBF97D0AEE0000000], [3 x float] [float 0xBFC4327EE0000000, float 0xBFB854AC20000000, float 0xBFA2EC4A40000000], [3 x float] [float 0xBFCC255B00000000, float 0xBFB4218DE0000000, float 0x3F5DBCA960000000], [3 x float] [float 0xBFC7806F20000000, float 0xBF979B34A0000000, float 0xBFA65CF680000000], [3 x float] [float 0xBFC29949E0000000, float 0xBFC45796C0000000, float 0xBFAE3B2560000000], [3 x float] [float 0xBFC94B72C0000000, float 0xBFC5253DA0000000, float 0x3F9CC5FC00000000], [3 x float] [float 0xBFCCD117C0000000, float 0xBFC5790760000000, float 0xBFACE09780000000], [3 x float] [float 0xBFCBB8A1A0000000, float 0xBFBAD0F620000000, float 0xBFBA5BD940000000], [3 x float] [float 0xBFC5EE5680000000, float 0xBFCEF8C640000000, float 0xBFB03B3EA0000000], [3 x float] [float 0xBFC1280F20000000, float 0xBFCA518F40000000, float 0x3F883ADA00000000], [3 x float] [float 0xBFD303F2E0000000, float 0xBFCB07B780000000, float 0xBF8F70DE80000000], [3 x float] [float 0xBFB6228140000000, float 0xBFC9ACFFA0000000, float 0xBFB2094600000000], [3 x float] [float 0xBFCBE01DE0000000, float 0xBFD1D15AE0000000, float 0x3F9F20A740000000], [3 x float] [float 0xBFCE3D5FE0000000, float 0xBFD4B76700000000, float 0xBFB66C2AC0000000], [3 x float] [float 0xBFCC6CEBC0000000, float 0xBFCAFB00C0000000, float 0x3FBB309420000000], [3 x float] [float 0xBFD22339C0000000, float 0xBFB8DA09C0000000, float 0x3FA525AAC0000000], [3 x float] [float 0xBFB4132300000000, float 0xBFC3C57A00000000, float 0x3FB01DE260000000], [3 x float] [float 0xBFCB720420000000, float 0xBFB9C725C0000000, float 0x3FBF356DA0000000], [3 x float] [float 0xBFC6DB9400000000, float 0xBF9D8A1160000000, float 0x3FAF40E5A0000000], [3 x float] [float 0xBFA3749AE0000000, float 0xBFC2763A20000000, float 0xBF85992420000000], [3 x float] [float 0xBFB631A4C0000000, float 0xBFB22CCB40000000, float 0x3FC0093DA0000000], [3 x float] [float 0x3F861804E0000000, float 0xBFB5C2F400000000, float 0x3FADF74040000000], [3 x float] [float 0xBFC3B6C380000000, float 0x3FB10A1380000000, float 0x3FB22F8BE0000000], [3 x float] [float 0xBFC25E4E60000000, float 0x3FA1077460000000, float 0x3FC3C32660000000], [3 x float] [float 0xBFC1292C40000000, float 0x3FA0995AA0000000, float 0xBFACD26FA0000000], [3 x float] [float 0xBFBC60BB20000000, float 0x3FB63F9A40000000, float 0x3F700E6B00000000], [3 x float] [float 0xBFAD506580000000, float 0x3FA868BA00000000, float 0xBFAC73CD60000000], [3 x float] [float 0xBFCB6B1A20000000, float 0x3FB19BD400000000, float 0xBF736501E0000000], [3 x float] [float 0xBFD0770360000000, float 0x3FA9D6F120000000, float 0x3FB4EA6C20000000], [3 x float] [float 0xBFD2AD6880000000, float 0x3F70E02220000000, float 0xBF96E71CE0000000], [3 x float] [float 0xBFC62EFD40000000, float 0xBF9DC768E0000000, float 0xBFBDABB020000000], [3 x float] [float 0xBFCA935BA0000000, float 0x3FC596C820000000, float 0x3FC1696E60000000], [3 x float] [float 0x3FB72DB1E0000000, float 0x3FA0C521E0000000, float 0xBFAD5A5BA0000000], [3 x float] [float 0x3FC1F2B240000000, float 0xBF4815A080000000, float 0xBF900218E0000000], [3 x float] [float 0x3FC17F4980000000, float 0xBF91932D60000000, float 0xBFB9D52C20000000], [3 x float] [float 0x3F9E8DDA40000000, float 0xBFB6EA7480000000, float 0xBFC2D527E0000000], [3 x float] [float 0xBFAC591040000000, float 0xBFB29B5A60000000, float 0xBFCB64D800000000], [3 x float] [float 0x3FA8EC95C0000000, float 0xBFAD8212A0000000, float 0xBFCB30DFA0000000], [3 x float] [float 0xBF8AE5FFA0000000, float 0xBFBD286B60000000, float 0xBFC923BBC0000000], [3 x float] [float 0xBFB25B1000000000, float 0xBFC4677B40000000, float 0xBFD0503320000000]], align 16
@lsf_cb5_16k = internal constant [128 x [4 x float]] [[4 x float] [float 0xBFC9C371E0000000, float 0xBFD1D5E080000000, float 0xBFC62D7300000000, float 0xBFC96B11C0000000], [4 x float] [float 0xBFCB7A3560000000, float 0xBFC3722E20000000, float 0xBFBE17D280000000, float 0xBFC8AAD1E0000000], [4 x float] [float 0xBFC49A6720000000, float 0xBFCA96D4C0000000, float 0xBFBFEF9DC0000000, float 0xBFC09B9D80000000], [4 x float] [float 0xBFC0C60460000000, float 0xBFC1A40520000000, float 0xBFC3E03F80000000, float 0xBFC54994A0000000], [4 x float] [float 0xBFC6EDDCE0000000, float 0xBFC5B584C0000000, float 0xBFC5260700000000, float 0xBFB0F89400000000], [4 x float] [float 0xBFC177FAE0000000, float 0xBFC6A91540000000, float 0xBFD00214A0000000, float 0xBFC1330940000000], [4 x float] [float 0xBFB124F220000000, float 0xBFC2B91B40000000, float 0xBFC5D77740000000, float 0xBFC13532E0000000], [4 x float] [float 0xBFB5525CC0000000, float 0xBFC53AE680000000, float 0xBFBA7AD8E0000000, float 0xBFC1F75960000000], [4 x float] [float 0xBFC0B35F40000000, float 0xBFBE8B8F20000000, float 0xBFBFD83840000000, float 0xBFB61ED5A0000000], [4 x float] [float 0xBFC0557DE0000000, float 0xBFC13482C0000000, float 0xBFB2D6ECE0000000, float 0xBFBDB8ED20000000], [4 x float] [float 0xBFBCEF5660000000, float 0xBFB77D5240000000, float 0xBFBB97DD00000000, float 0xBFC0E33F00000000], [4 x float] [float 0xBFC0115E00000000, float 0xBFC750C1C0000000, float 0xBFB80303C0000000, float 0xBFA715C640000000], [4 x float] [float 0xBFB3BE4480000000, float 0xBFC1ABB020000000, float 0xBFC5485E40000000, float 0xBFA3E8DDA0000000], [4 x float] [float 0xBFB2B1E5C0000000, float 0xBFBB5A31A0000000, float 0xBFB12BB240000000, float 0xBFBD2934A0000000], [4 x float] [float 0xBFA929AA20000000, float 0xBFBB6598E0000000, float 0xBFBCCED4E0000000, float 0xBFB03A3220000000], [4 x float] [float 0xBFB9FE75C0000000, float 0xBFBE9D3020000000, float 0xBFA9C08740000000, float 0xBFA4D2B2C0000000], [4 x float] [float 0xBFBB97BB80000000, float 0xBFB12135E0000000, float 0xBFB4BBF500000000, float 0xBFAACDE1A0000000], [4 x float] [float 0xBFC379D0A0000000, float 0xBFBA5EDD00000000, float 0xBFB72873C0000000, float 0xBF8FCC1880000000], [4 x float] [float 0xBFC3985AE0000000, float 0xBFB6709FA0000000, float 0xBF9E9B38E0000000, float 0xBFA321C480000000], [4 x float] [float 0xBFCB8E53E0000000, float 0xBFC1AC0400000000, float 0xBFB6D35220000000, float 0xBFAA0791C0000000], [4 x float] [float 0xBFAB50B100000000, float 0xBFAECE78A0000000, float 0xBFB03ED960000000, float 0xBF99164400000000], [4 x float] [float 0xBFAA7503C0000000, float 0xBFB38C0060000000, float 0xBFA14573A0000000, float 0xBFB3C419A0000000], [4 x float] [float 0xBFA7106680000000, float 0xBFBB64BEC0000000, float 0xBF95619120000000, float 0xBF991D14E0000000], [4 x float] [float 0xBFB53FAF40000000, float 0xBFB04CCEE0000000, float 0xBF8B1F2560000000, float 0xBF9D00F780000000], [4 x float] [float 0xBFBAA68F40000000, float 0xBFB350B100000000, float 0xBFA0C41560000000, float 0x3F99114900000000], [4 x float] [float 0xBFB5F01B80000000, float 0xBF93F85520000000, float 0xBFA71A1980000000, float 0xBF999DCB60000000], [4 x float] [float 0xBFBF84CAE0000000, float 0xBF9F9591C0000000, float 0xBF6CF13CE0000000, float 0xBF909D0640000000], [4 x float] [float 0xBF9A2E7F60000000, float 0xBFA92D1280000000, float 0xBF7004FB20000000, float 0xBF9C2EBA20000000], [4 x float] [float 0xBFA3FB9BE0000000, float 0xBF945564C0000000, float 0xBFA61FC080000000, float 0xBFADBD9440000000], [4 x float] [float 0xBFA48ADEE0000000, float 0xBF979EE020000000, float 0xBF563779E0000000, float 0x3F81A08C00000000], [4 x float] [float 0xBFB037C560000000, float 0xBF5D191580000000, float 0x3F90663C80000000, float 0xBF9BBCF4E0000000], [4 x float] [float 0xBFB16FA820000000, float 0xBFA3E29300000000, float 0x3FA5C5D640000000, float 0x3F51A11240000000], [4 x float] [float 0xBFA655C100000000, float 0xBF953BD160000000, float 0xBFA8815E40000000, float 0x3FA34EB9A0000000], [4 x float] [float 0xBFA504C480000000, float 0x3F967B1C00000000, float 0xBF9A469D80000000, float 0x3F48D690A0000000], [4 x float] [float 0xBF8AB21820000000, float 0x3F6528F1A0000000, float 0xBF80DC7680000000, float 0xBFA318FC60000000], [4 x float] [float 0xBF769F4900000000, float 0xBF8E0B4E20000000, float 0x3F941F6440000000, float 0xBF89F12800000000], [4 x float] [float 0xBF720F2BE0000000, float 0xBF8D912560000000, float 0xBFAE6B3FE0000000, float 0xBF942C7FC0000000], [4 x float] [float 0x3F998B71C0000000, float 0xBF87E2C560000000, float 0xBF8D640EA0000000, float 0xBF9D73C920000000], [4 x float] [float 0x3F89ED7C60000000, float 0x3F92EEC7C0000000, float 0xBF84E65BE0000000, float 0x3F89FFD600000000], [4 x float] [float 0xBF721DDA00000000, float 0x3F92413DC0000000, float 0x3FA4C22EE0000000, float 0x3F6DBA9080000000], [4 x float] [float 0x3F952E2FC0000000, float 0x3F9B628460000000, float 0x3F7FC08FA0000000, float 0xBF9A359360000000], [4 x float] [float 0x3FA06B9C40000000, float 0x3F068B5CC0000000, float 0x3F9AD106E0000000, float 0xBF7A650620000000], [4 x float] [float 0x3FAE1A1DC0000000, float 0x3F90331E40000000, float 0xBF52556D20000000, float 0xBF91D53CE0000000], [4 x float] [float 0x3F94A3C640000000, float 0xBFA85DB760000000, float 0x3F715054A0000000, float 0x3F81C193C0000000], [4 x float] [float 0x3FAC0AD040000000, float 0x3FA073FFA0000000, float 0x3F9E7C06E0000000, float 0xBF8400B880000000], [4 x float] [float 0x3F9FA00E20000000, float 0x3FA8739B00000000, float 0x3FA0EE4A00000000, float 0x3F7C1F85E0000000], [4 x float] [float 0x3FAFC39360000000, float 0x3F87D9DBA0000000, float 0x3FACB0E1C0000000, float 0x3F91437C60000000], [4 x float] [float 0x3F8C422040000000, float 0xBF9CDF6980000000, float 0x3FAF1561A0000000, float 0x3F8D48CB40000000], [4 x float] [float 0x3FB99C6B00000000, float 0x3FA5384760000000, float 0x3F97F0AA20000000, float 0xBF8E7E1FC0000000], [4 x float] [float 0x3FB00EF140000000, float 0xBFA5ECA260000000, float 0x3F61DBCAA0000000, float 0xBFAC5AC480000000], [4 x float] [float 0x3FAF924B00000000, float 0x3F9337A800000000, float 0xBF8FE3B040000000, float 0xBFB2F7E3E0000000], [4 x float] [float 0x3FB01F7520000000, float 0x3FB49B7380000000, float 0x3F882ECAE0000000, float 0xBFA04662C0000000], [4 x float] [float 0x3FB5C03360000000, float 0x3FA6113400000000, float 0xBF9A7F8020000000, float 0x3F94CBE1E0000000], [4 x float] [float 0x3F8E1EB420000000, float 0x3FA222B380000000, float 0xBFA5379FA0000000, float 0xBFAB53B4C0000000], [4 x float] [float 0x3FB4CDFAC0000000, float 0x3F77B84DC0000000, float 0xBFB0F861A0000000, float 0xBFA463F140000000], [4 x float] [float 0x3F921D96E0000000, float 0xBF94E3FFE0000000, float 0xBFA4BE1EC0000000, float 0xBFB57E6700000000], [4 x float] [float 0x3FBEF19940000000, float 0x3FAC8BA840000000, float 0xBF9A9C9920000000, float 0xBFAE7D9980000000], [4 x float] [float 0x3FB4751CE0000000, float 0x3F802ABAC0000000, float 0xBFB5DB76C0000000, float 0xBFBD5592E0000000], [4 x float] [float 0x3FA2DECA20000000, float 0xBFA4233160000000, float 0xBFBAAF46A0000000, float 0xBFB1B19600000000], [4 x float] [float 0x3F81761460000000, float 0xBFB0743200000000, float 0xBFA8BC59C0000000, float 0xBFA3C2B940000000], [4 x float] [float 0x3FA121CCE0000000, float 0xBF9DA6A440000000, float 0xBFB10678C0000000, float 0x3FA3D35EC0000000], [4 x float] [float 0xBFA58969A0000000, float 0xBFA685B9E0000000, float 0xBFB9C46520000000, float 0xBFB25119C0000000], [4 x float] [float 0xBF8F6BA060000000, float 0xBFB09A0280000000, float 0xBFB0D013A0000000, float 0xBFBF6DCA00000000], [4 x float] [float 0xBF7AF4ADC0000000, float 0xBF7425F200000000, float 0xBFBD1287C0000000, float 0xBFC2A808C0000000], [4 x float] [float 0x3F80F16F40000000, float 0xBFB21986C0000000, float 0xBFC51EA780000000, float 0xBFB8756000000000], [4 x float] [float 0xBF5BD1EDA0000000, float 0xBFB05186E0000000, float 0xBFC0A2E3C0000000, float 0xBF86DC1A40000000], [4 x float] [float 0xBFA8D130E0000000, float 0xBFB6666660000000, float 0xBFBC6AE3A0000000, float 0xBFC4B69DC0000000], [4 x float] [float 0xBFA07B99E0000000, float 0xBFB78A5CE0000000, float 0xBFB4A4F440000000, float 0x3F892A7380000000], [4 x float] [float 0xBFB88B2200000000, float 0xBF905EA240000000, float 0xBFB29DE8C0000000, float 0xBFBA0BF5E0000000], [4 x float] [float 0xBFB4589AC0000000, float 0xBFB501E260000000, float 0xBFC9FC2A80000000, float 0xBFB9AD1060000000], [4 x float] [float 0xBF9874C900000000, float 0xBFB063BEE0000000, float 0xBFC58C32A0000000, float 0xBFCB1A4380000000], [4 x float] [float 0xBFB20E4100000000, float 0xBFBA820E60000000, float 0xBFBFB52860000000, float 0x3FAC2F61E0000000], [4 x float] [float 0xBFA1274E20000000, float 0xBFB3A9F380000000, float 0xBF90AD8A20000000, float 0x3FA69C0220000000], [4 x float] [float 0xBFB6A326E0000000, float 0xBFC4B1FEE0000000, float 0xBFADFE1120000000, float 0x3F8C697280000000], [4 x float] [float 0xBFB543F1C0000000, float 0xBFC5884C60000000, float 0xBF912CF100000000, float 0xBFB48893C0000000], [4 x float] [float 0xBFB49ECB40000000, float 0xBFC1CDB380000000, float 0x3F9F46ED20000000, float 0x3F7D5F56A0000000], [4 x float] [float 0xBFBE134CE0000000, float 0xBFB56E8B00000000, float 0x3F9BB94960000000, float 0xBF6E18EFC0000000], [4 x float] [float 0xBFC4DFF820000000, float 0xBFC413DB80000000, float 0xBF89D77740000000, float 0xBF96DD69E0000000], [4 x float] [float 0xBFC698DCE0000000, float 0xBFBCF05200000000, float 0xBF94A1AD60000000, float 0x3FAA819900000000], [4 x float] [float 0xBFC3B2B340000000, float 0xBFC9826EE0000000, float 0xBFA62413E0000000, float 0x3F9D02CD40000000], [4 x float] [float 0xBFBB9A3900000000, float 0xBFC3475A40000000, float 0x3F90D306A0000000, float 0x3FB7C98A20000000], [4 x float] [float 0xBFC19F5E00000000, float 0xBFC773E240000000, float 0x3FB0E71480000000, float 0x3F9E0C1760000000], [4 x float] [float 0xBFC8762960000000, float 0xBFB96872C0000000, float 0x3FA73ABCA0000000, float 0x3F70BA6260000000], [4 x float] [float 0xBFCE576460000000, float 0xBFC0BE8BC0000000, float 0xBF97158320000000, float 0xBF9E225FA0000000], [4 x float] [float 0xBFC9BAD3A0000000, float 0xBFAB7047A0000000, float 0xBF7DEBD900000000, float 0xBFA12D1280000000], [4 x float] [float 0xBFCFE89A80000000, float 0xBFCD3C7920000000, float 0x3F747CFA20000000, float 0x3F7D451FC0000000], [4 x float] [float 0xBFCA6EE300000000, float 0xBFCB22C020000000, float 0xBFAF698780000000, float 0xBFA82EEC80000000], [4 x float] [float 0xBFD05D6BE0000000, float 0xBFC14B6A60000000, float 0x3FB38D4FE0000000, float 0x3FA2C12AE0000000], [4 x float] [float 0xBFD2F61AA0000000, float 0xBFB2EE2000000000, float 0xBF7DCA4B20000000, float 0xBF941248E0000000], [4 x float] [float 0xBFD362FE00000000, float 0xBFC66A0980000000, float 0xBFB1ED17C0000000, float 0xBFA67AB760000000], [4 x float] [float 0xBFCEA09020000000, float 0xBFA6823000000000, float 0xBFB5C16160000000, float 0xBFB1442420000000], [4 x float] [float 0xBFD04B1680000000, float 0xBFD2DCB140000000, float 0xBFB6B91B40000000, float 0xBFB20913A0000000], [4 x float] [float 0xBFCA508B40000000, float 0xBFCE976BC0000000, float 0xBFBFEFD000000000, float 0x3FA0EF5660000000], [4 x float] [float 0xBFCA508B40000000, float 0xBFCBA20580000000, float 0xBF9D27C3A0000000, float 0x3FBE61BF40000000], [4 x float] [float 0xBFC3AA79C0000000, float 0xBFCA2BE060000000, float 0xBFA44D8780000000, float 0xBFC1355CE0000000], [4 x float] [float 0xBFC2ADCD20000000, float 0xBFC8927920000000, float 0xBFC6707E20000000, float 0x3F95E0F800000000], [4 x float] [float 0xBFC31DD5E0000000, float 0xBFCB357600000000, float 0xBFBE4A7B40000000, float 0x3FBA936C60000000], [4 x float] [float 0xBFC54C7F40000000, float 0xBFCC3BFF80000000, float 0xBFD0FA0520000000, float 0xBF9DCFCC60000000], [4 x float] [float 0xBFC5038E20000000, float 0xBFCD99FE40000000, float 0xBFD090A360000000, float 0x3FAF735C20000000], [4 x float] [float 0xBFC9A01680000000, float 0xBFD0DC6A00000000, float 0xBFCB235720000000, float 0x3FBD882AE0000000], [4 x float] [float 0xBFC0A6B940000000, float 0xBFCB285220000000, float 0xBFC9E731E0000000, float 0x3FBE5A2500000000], [4 x float] [float 0xBFCA6AE3A0000000, float 0xBFB3FCB920000000, float 0xBFCD2A62A0000000, float 0xBFBC754F40000000], [4 x float] [float 0xBFC096E580000000, float 0xBFC6A2F480000000, float 0xBFCEEC3980000000, float 0xBFD0A233A0000000], [4 x float] [float 0xBFC6A23C00000000, float 0xBFA7805600000000, float 0xBFC2239E60000000, float 0xBFCACBD120000000], [4 x float] [float 0xBFD6799E60000000, float 0xBF9FD7E460000000, float 0xBFC124C840000000, float 0xBFC75946C0000000], [4 x float] [float 0xBFC5058DE0000000, float 0x3F9BA77600000000, float 0xBF8CC07AA0000000, float 0xBFAB6D2240000000], [4 x float] [float 0xBFC5E48A60000000, float 0xBF9A8BD240000000, float 0x3F9FB71FC0000000, float 0x3F91BEB180000000], [4 x float] [float 0xBFB4B35F40000000, float 0xBF96184800000000, float 0x3F7F57B420000000, float 0x3FB0603500000000], [4 x float] [float 0xBFAFA2AD40000000, float 0x3FA5842B80000000, float 0xBF933BD9C0000000, float 0xBFADAF6C60000000], [4 x float] [float 0xBFBC3D5780000000, float 0x3FAC0980C0000000, float 0x3FA019B0A0000000, float 0xBF7B7BF1E0000000], [4 x float] [float 0xBFC17D5240000000, float 0x3F96B3FEA0000000, float 0x3FB5C1F860000000, float 0x3F9CB64180000000], [4 x float] [float 0xBFD04940C0000000, float 0xBF71EC9180000000, float 0x3FB3FA0940000000, float 0x3FA13A7120000000], [4 x float] [float 0xBFCE02EAA0000000, float 0x3FB6917500000000, float 0x3FA4FDD220000000, float 0x3F659E6260000000], [4 x float] [float 0xBFA2FE1DA0000000, float 0x3FAE6F5020000000, float 0x3FB27A6380000000, float 0x3F8EC679C0000000], [4 x float] [float 0xBFA7FB8B20000000, float 0xBF73B6CBE0000000, float 0x3FB69899C0000000, float 0x3FA3DBC240000000], [4 x float] [float 0xBFB6375860000000, float 0x3FBEBEDFA0000000, float 0x3FB528E0C0000000, float 0x3F94C1EBC0000000], [4 x float] [float 0xBFBE4CE820000000, float 0xBFB1B9D800000000, float 0x3FB8493420000000, float 0x3FA41205C0000000], [4 x float] [float 0xBF97E6F720000000, float 0xBFB594E1A0000000, float 0x3FAAF965C0000000, float 0x3F9180D3C0000000], [4 x float] [float 0xBF8D11BE60000000, float 0x3F5094A2C0000000, float 0x3F88772500000000, float 0x3FB2F9DB20000000], [4 x float] [float 0xBF8F6BA060000000, float 0x3FB38EB040000000, float 0x3F96E6D9C0000000, float 0xBF9CAC4B40000000], [4 x float] [float 0x3F9C5EF620000000, float 0x3FA2F7D300000000, float 0x3FBB89E780000000, float 0x3FAF2324C0000000], [4 x float] [float 0x3F9F5989E0000000, float 0x3FA4D1E960000000, float 0x3F856FB900000000, float 0x3FB3049AA0000000], [4 x float] [float 0x3FA3C968A0000000, float 0x3FBD96E9C0000000, float 0x3FB1D31340000000, float 0x3F7F4D37C0000000], [4 x float] [float 0x3FB8B1CCA0000000, float 0x3FB1DF97A0000000, float 0x3FAFFF36A0000000, float 0x3F8F90D9E0000000], [4 x float] [float 0x3FAC1333C0000000, float 0x3FB0B30B60000000, float 0x3FABCB5FE0000000, float 0x3FBC2EBA20000000], [4 x float] [float 0x3FC37EF5A0000000, float 0x3FB7A5A040000000, float 0x3F9B0DD820000000, float 0xBF8B003680000000], [4 x float] [float 0x3FC2773E20000000, float 0x3FBF99A200000000, float 0x3FB4837720000000, float 0x3F97CA6440000000], [4 x float] [float 0x3FBFD90180000000, float 0x3F845CFEE0000000, float 0xBFC3014B60000000, float 0xBFCA437820000000]], align 16
@ff_pow_0_5 = external constant [16 x float], align 16

; Function Attrs: nounwind uwtable
define void @ff_sipr_decode_frame_16k(%struct.SiprContext* %ctx, %struct.SiprParameters* %params, float* %out_data) #0 !dbg !941 {
entry:
  %ctx.addr = alloca %struct.SiprContext*, align 8
  %params.addr = alloca %struct.SiprParameters*, align 8
  %out_data.addr = alloca float*, align 8
  %frame_size = alloca i32, align 4
  %synth = alloca float*, align 8
  %lsf_new = alloca [16 x float], align 16
  %lsp_new = alloca [16 x double], align 16
  %Az = alloca [2 x [16 x float]], align 16
  %fixed_vector = alloca [80 x float], align 16
  %pitch_fac = alloca float, align 4
  %gain_code = alloca float, align 4
  %i = alloca i32, align 4
  %pitch_delay_3x = alloca i32, align 4
  %excitation = alloca float*, align 8
  %i_subfr = alloca i32, align 4
  %f = alloca %struct.AMRFixed, align 4
  %gain_corr_factor = alloca float, align 4
  %pitch_delay_int = alloca i32, align 4
  %pitch_delay_frac = alloca i32, align 4
  store %struct.SiprContext* %ctx, %struct.SiprContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SiprContext** %ctx.addr, metadata !1618, metadata !1619), !dbg !1620
  store %struct.SiprParameters* %params, %struct.SiprParameters** %params.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SiprParameters** %params.addr, metadata !1621, metadata !1619), !dbg !1622
  store float* %out_data, float** %out_data.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out_data.addr, metadata !1623, metadata !1619), !dbg !1624
  call void @llvm.dbg.declare(metadata i32* %frame_size, metadata !1625, metadata !1619), !dbg !1626
  store i32 160, i32* %frame_size, align 4, !dbg !1626
  call void @llvm.dbg.declare(metadata float** %synth, metadata !1627, metadata !1619), !dbg !1628
  %0 = load %struct.SiprContext*, %struct.SiprContext** %ctx.addr, align 8, !dbg !1629
  %synth_buf = getelementptr inbounds %struct.SiprContext, %struct.SiprContext* %0, i32 0, i32 5, !dbg !1630
  %arraydecay = getelementptr inbounds [256 x float], [256 x float]* %synth_buf, i32 0, i32 0, !dbg !1629
  %add.ptr = getelementptr inbounds float, float* %arraydecay, i64 16, !dbg !1631
  store float* %add.ptr, float** %synth, align 8, !dbg !1628
  call void @llvm.dbg.declare(metadata [16 x float]* %lsf_new, metadata !1632, metadata !1619), !dbg !1633
  call void @llvm.dbg.declare(metadata [16 x double]* %lsp_new, metadata !1634, metadata !1619), !dbg !1635
  call void @llvm.dbg.declare(metadata [2 x [16 x float]]* %Az, metadata !1636, metadata !1619), !dbg !1639
  call void @llvm.dbg.declare(metadata [80 x float]* %fixed_vector, metadata !1640, metadata !1619), !dbg !1644
  call void @llvm.dbg.declare(metadata float* %pitch_fac, metadata !1645, metadata !1619), !dbg !1646
  call void @llvm.dbg.declare(metadata float* %gain_code, metadata !1647, metadata !1619), !dbg !1648
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1649, metadata !1619), !dbg !1650
  call void @llvm.dbg.declare(metadata i32* %pitch_delay_3x, metadata !1651, metadata !1619), !dbg !1652
  call void @llvm.dbg.declare(metadata float** %excitation, metadata !1653, metadata !1619), !dbg !1654
  %1 = load %struct.SiprContext*, %struct.SiprContext** %ctx.addr, align 8, !dbg !1655
  %excitation1 = getelementptr inbounds %struct.SiprContext, %struct.SiprContext* %1, i32 0, i32 4, !dbg !1656
  %arraydecay2 = getelementptr inbounds [452 x float], [452 x float]* %excitation1, i32 0, i32 0, !dbg !1655
  %add.ptr3 = getelementptr inbounds float, float* %arraydecay2, i64 292, !dbg !1657
  store float* %add.ptr3, float** %excitation, align 8, !dbg !1654
  %2 = load %struct.SiprContext*, %struct.SiprContext** %ctx.addr, align 8, !dbg !1658
  %lsf_history = getelementptr inbounds %struct.SiprContext, %struct.SiprContext* %2, i32 0, i32 3, !dbg !1659
  %arraydecay4 = getelementptr inbounds [16 x float], [16 x float]* %lsf_history, i32 0, i32 0, !dbg !1658
  %arraydecay5 = getelementptr inbounds [16 x float], [16 x float]* %lsf_new, i32 0, i32 0, !dbg !1660
  %3 = load %struct.SiprParameters*, %struct.SiprParameters** %params.addr, align 8, !dbg !1661
  %vq_indexes = getelementptr inbounds %struct.SiprParameters, %struct.SiprParameters* %3, i32 0, i32 1, !dbg !1662
  %arraydecay6 = getelementptr inbounds [5 x i32], [5 x i32]* %vq_indexes, i32 0, i32 0, !dbg !1661
  %4 = load %struct.SiprParameters*, %struct.SiprParameters** %params.addr, align 8, !dbg !1663
  %ma_pred_switch = getelementptr inbounds %struct.SiprParameters, %struct.SiprParameters* %4, i32 0, i32 0, !dbg !1664
  %5 = load i32, i32* %ma_pred_switch, align 4, !dbg !1664
  call void @lsf_decode_fp_16k(float* %arraydecay4, float* %arraydecay5, i32* %arraydecay6, i32 %5), !dbg !1665
  %arraydecay7 = getelementptr inbounds [16 x float], [16 x float]* %lsf_new, i32 0, i32 0, !dbg !1666
  call void @ff_set_min_dist_lsf(float* %arraydecay7, double 0x3F941B2F769CF0E0, i32 16), !dbg !1667
  %arraydecay8 = getelementptr inbounds [16 x float], [16 x float]* %lsf_new, i32 0, i32 0, !dbg !1668
  %arraydecay9 = getelementptr inbounds [16 x double], [16 x double]* %lsp_new, i32 0, i32 0, !dbg !1669
  call void @lsf2lsp(float* %arraydecay8, double* %arraydecay9), !dbg !1670
  %arrayidx = getelementptr inbounds [2 x [16 x float]], [2 x [16 x float]]* %Az, i64 0, i64 0, !dbg !1671
  %arraydecay10 = getelementptr inbounds [16 x float], [16 x float]* %arrayidx, i32 0, i32 0, !dbg !1671
  %arrayidx11 = getelementptr inbounds [2 x [16 x float]], [2 x [16 x float]]* %Az, i64 0, i64 1, !dbg !1672
  %arraydecay12 = getelementptr inbounds [16 x float], [16 x float]* %arrayidx11, i32 0, i32 0, !dbg !1672
  %arraydecay13 = getelementptr inbounds [16 x double], [16 x double]* %lsp_new, i32 0, i32 0, !dbg !1673
  %6 = load %struct.SiprContext*, %struct.SiprContext** %ctx.addr, align 8, !dbg !1674
  %lsp_history_16k = getelementptr inbounds %struct.SiprContext, %struct.SiprContext* %6, i32 0, i32 21, !dbg !1675
  %arraydecay14 = getelementptr inbounds [16 x double], [16 x double]* %lsp_history_16k, i32 0, i32 0, !dbg !1674
  call void @acelp_lp_decodef(float* %arraydecay10, float* %arraydecay12, double* %arraydecay13, double* %arraydecay14), !dbg !1676
  %7 = load %struct.SiprContext*, %struct.SiprContext** %ctx.addr, align 8, !dbg !1677
  %lsp_history_16k15 = getelementptr inbounds %struct.SiprContext, %struct.SiprContext* %7, i32 0, i32 21, !dbg !1678
  %arraydecay16 = getelementptr inbounds [16 x double], [16 x double]* %lsp_history_16k15, i32 0, i32 0, !dbg !1679
  %8 = bitcast double* %arraydecay16 to i8*, !dbg !1679
  %arraydecay17 = getelementptr inbounds [16 x double], [16 x double]* %lsp_new, i32 0, i32 0, !dbg !1679
  %9 = bitcast double* %arraydecay17 to i8*, !dbg !1679
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 128, i32 16, i1 false), !dbg !1679
  %10 = load float*, float** %synth, align 8, !dbg !1680
  %add.ptr18 = getelementptr inbounds float, float* %10, i64 -16, !dbg !1681
  %11 = bitcast float* %add.ptr18 to i8*, !dbg !1682
  %12 = load %struct.SiprContext*, %struct.SiprContext** %ctx.addr, align 8, !dbg !1683
  %synth19 = getelementptr inbounds %struct.SiprContext, %struct.SiprContext* %12, i32 0, i32 20, !dbg !1684
  %arraydecay20 = getelementptr inbounds [16 x float], [16 x float]* %synth19, i32 0, i32 0, !dbg !1682
  %13 = bitcast float* %arraydecay20 to i8*, !dbg !1682
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %13, i64 64, i32 4, i1 false), !dbg !1682
  store i32 0, i32* %i, align 4, !dbg !1685
  br label %for.cond, !dbg !1687

for.cond:                                         ; preds = %for.inc, %entry
  %14 = load i32, i32* %i, align 4, !dbg !1688
  %cmp = icmp slt i32 %14, 2, !dbg !1691
  br i1 %cmp, label %for.body, label %for.end, !dbg !1692

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i_subfr, metadata !1693, metadata !1619), !dbg !1695
  %15 = load i32, i32* %i, align 4, !dbg !1696
  %mul = mul nsw i32 %15, 80, !dbg !1697
  store i32 %mul, i32* %i_subfr, align 4, !dbg !1695
  call void @llvm.dbg.declare(metadata %struct.AMRFixed* %f, metadata !1698, metadata !1619), !dbg !1710
  call void @llvm.dbg.declare(metadata float* %gain_corr_factor, metadata !1711, metadata !1619), !dbg !1712
  call void @llvm.dbg.declare(metadata i32* %pitch_delay_int, metadata !1713, metadata !1619), !dbg !1714
  call void @llvm.dbg.declare(metadata i32* %pitch_delay_frac, metadata !1715, metadata !1619), !dbg !1716
  %16 = load i32, i32* %i, align 4, !dbg !1717
  %tobool = icmp ne i32 %16, 0, !dbg !1717
  br i1 %tobool, label %if.else, label %if.then, !dbg !1719

if.then:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !1720
  %idxprom = sext i32 %17 to i64, !dbg !1722
  %18 = load %struct.SiprParameters*, %struct.SiprParameters** %params.addr, align 8, !dbg !1722
  %pitch_delay = getelementptr inbounds %struct.SiprParameters, %struct.SiprParameters* %18, i32 0, i32 2, !dbg !1723
  %arrayidx21 = getelementptr inbounds [5 x i32], [5 x i32]* %pitch_delay, i64 0, i64 %idxprom, !dbg !1722
  %19 = load i32, i32* %arrayidx21, align 4, !dbg !1722
  %call = call i32 @dec_delay3_1st(i32 %19), !dbg !1724
  store i32 %call, i32* %pitch_delay_3x, align 4, !dbg !1725
  br label %if.end, !dbg !1726

if.else:                                          ; preds = %for.body
  %20 = load i32, i32* %i, align 4, !dbg !1727
  %idxprom22 = sext i32 %20 to i64, !dbg !1728
  %21 = load %struct.SiprParameters*, %struct.SiprParameters** %params.addr, align 8, !dbg !1728
  %pitch_delay23 = getelementptr inbounds %struct.SiprParameters, %struct.SiprParameters* %21, i32 0, i32 2, !dbg !1729
  %arrayidx24 = getelementptr inbounds [5 x i32], [5 x i32]* %pitch_delay23, i64 0, i64 %idxprom22, !dbg !1728
  %22 = load i32, i32* %arrayidx24, align 4, !dbg !1728
  %23 = load %struct.SiprContext*, %struct.SiprContext** %ctx.addr, align 8, !dbg !1730
  %pitch_lag_prev = getelementptr inbounds %struct.SiprContext, %struct.SiprContext* %23, i32 0, i32 15, !dbg !1731
  %24 = load i32, i32* %pitch_lag_prev, align 4, !dbg !1731
  %call25 = call i32 @dec_delay3_2nd(i32 %22, i32 30, i32 281, i32 %24), !dbg !1732
  store i32 %call25, i32* %pitch_delay_3x, align 4, !dbg !1733
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %25 = load i32, i32* %i, align 4, !dbg !1734
  %idxprom26 = sext i32 %25 to i64, !dbg !1735
  %26 = load %struct.SiprParameters*, %struct.SiprParameters** %params.addr, align 8, !dbg !1735
  %gp_index = getelementptr inbounds %struct.SiprParameters, %struct.SiprParameters* %26, i32 0, i32 3, !dbg !1736
  %arrayidx27 = getelementptr inbounds [5 x i32], [5 x i32]* %gp_index, i64 0, i64 %idxprom26, !dbg !1735
  %27 = load i32, i32* %arrayidx27, align 4, !dbg !1735
  %idxprom28 = sext i32 %27 to i64, !dbg !1737
  %arrayidx29 = getelementptr inbounds [16 x float], [16 x float]* @gain_pitch_cb_16k, i64 0, i64 %idxprom28, !dbg !1737
  %28 = load float, float* %arrayidx29, align 4, !dbg !1737
  store float %28, float* %pitch_fac, align 4, !dbg !1738
  %29 = load float, float* %pitch_fac, align 4, !dbg !1739
  %conv = fpext float %29 to double, !dbg !1740
  %cmp30 = fcmp ogt double %conv, 1.000000e+00, !dbg !1741
  br i1 %cmp30, label %cond.true, label %cond.false, !dbg !1740

cond.true:                                        ; preds = %if.end
  br label %cond.end, !dbg !1742

cond.false:                                       ; preds = %if.end
  %30 = load float, float* %pitch_fac, align 4, !dbg !1744
  %conv32 = fpext float %30 to double, !dbg !1746
  br label %cond.end, !dbg !1747

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ 1.000000e+00, %cond.true ], [ %conv32, %cond.false ], !dbg !1748
  %conv33 = fptrunc double %cond to float, !dbg !1750
  %pitch_fac34 = getelementptr inbounds %struct.AMRFixed, %struct.AMRFixed* %f, i32 0, i32 5, !dbg !1751
  store float %conv33, float* %pitch_fac34, align 4, !dbg !1752
  %31 = load i32, i32* %pitch_delay_3x, align 4, !dbg !1753
  %add = add nsw i32 %31, 1, !dbg !1754
  %mul35 = mul nsw i32 %add, 10923, !dbg !1755
  %shr = ashr i32 %mul35, 15, !dbg !1756
  %pitch_lag = getelementptr inbounds %struct.AMRFixed, %struct.AMRFixed* %f, i32 0, i32 4, !dbg !1757
  store i32 %shr, i32* %pitch_lag, align 4, !dbg !1758
  %pitch_lag36 = getelementptr inbounds %struct.AMRFixed, %struct.AMRFixed* %f, i32 0, i32 4, !dbg !1759
  %32 = load i32, i32* %pitch_lag36, align 4, !dbg !1759
  %33 = load %struct.SiprContext*, %struct.SiprContext** %ctx.addr, align 8, !dbg !1760
  %pitch_lag_prev37 = getelementptr inbounds %struct.SiprContext, %struct.SiprContext* %33, i32 0, i32 15, !dbg !1761
  store i32 %32, i32* %pitch_lag_prev37, align 4, !dbg !1762
  %34 = load i32, i32* %pitch_delay_3x, align 4, !dbg !1763
  %add38 = add nsw i32 %34, 2, !dbg !1764
  %mul39 = mul nsw i32 %add38, 10923, !dbg !1765
  %shr40 = ashr i32 %mul39, 15, !dbg !1766
  store i32 %shr40, i32* %pitch_delay_int, align 4, !dbg !1767
  %35 = load i32, i32* %pitch_delay_3x, align 4, !dbg !1768
  %add41 = add nsw i32 %35, 2, !dbg !1769
  %36 = load i32, i32* %pitch_delay_int, align 4, !dbg !1770
  %mul42 = mul nsw i32 3, %36, !dbg !1771
  %sub = sub nsw i32 %add41, %mul42, !dbg !1772
  store i32 %sub, i32* %pitch_delay_frac, align 4, !dbg !1773
  %37 = load i32, i32* %i_subfr, align 4, !dbg !1774
  %idxprom43 = sext i32 %37 to i64, !dbg !1775
  %38 = load float*, float** %excitation, align 8, !dbg !1775
  %arrayidx44 = getelementptr inbounds float, float* %38, i64 %idxprom43, !dbg !1775
  %39 = load i32, i32* %i_subfr, align 4, !dbg !1776
  %idxprom45 = sext i32 %39 to i64, !dbg !1777
  %40 = load float*, float** %excitation, align 8, !dbg !1777
  %arrayidx46 = getelementptr inbounds float, float* %40, i64 %idxprom45, !dbg !1777
  %41 = load i32, i32* %pitch_delay_int, align 4, !dbg !1778
  %idx.ext = sext i32 %41 to i64, !dbg !1779
  %idx.neg = sub i64 0, %idx.ext, !dbg !1779
  %add.ptr47 = getelementptr inbounds float, float* %arrayidx46, i64 %idx.neg, !dbg !1779
  %add.ptr48 = getelementptr inbounds float, float* %add.ptr47, i64 1, !dbg !1780
  %42 = load i32, i32* %pitch_delay_frac, align 4, !dbg !1781
  %add49 = add nsw i32 %42, 1, !dbg !1782
  call void @ff_acelp_interpolatef(float* %arrayidx44, float* %add.ptr48, float* getelementptr inbounds ([40 x float], [40 x float]* @sinc_win, i32 0, i32 0), i32 3, i32 %add49, i32 10, i32 80), !dbg !1783
  %arraydecay50 = getelementptr inbounds [80 x float], [80 x float]* %fixed_vector, i32 0, i32 0, !dbg !1784
  %43 = bitcast float* %arraydecay50 to i8*, !dbg !1784
  call void @llvm.memset.p0i8.i64(i8* %43, i8 0, i64 320, i32 16, i1 false), !dbg !1784
  %44 = load i32, i32* %i, align 4, !dbg !1785
  %idxprom51 = sext i32 %44 to i64, !dbg !1786
  %45 = load %struct.SiprParameters*, %struct.SiprParameters** %params.addr, align 8, !dbg !1786
  %fc_indexes = getelementptr inbounds %struct.SiprParameters, %struct.SiprParameters* %45, i32 0, i32 4, !dbg !1787
  %arrayidx52 = getelementptr inbounds [5 x [10 x i16]], [5 x [10 x i16]]* %fc_indexes, i64 0, i64 %idxprom51, !dbg !1786
  %arraydecay53 = getelementptr inbounds [10 x i16], [10 x i16]* %arrayidx52, i32 0, i32 0, !dbg !1786
  call void @ff_decode_10_pulses_35bits(i16* %arraydecay53, %struct.AMRFixed* %f, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @ff_fc_4pulses_8bits_tracks_13, i32 0, i32 0), i32 5, i32 4), !dbg !1788
  %arraydecay54 = getelementptr inbounds [80 x float], [80 x float]* %fixed_vector, i32 0, i32 0, !dbg !1789
  call void @ff_set_fixed_vector(float* %arraydecay54, %struct.AMRFixed* %f, float 1.000000e+00, i32 80), !dbg !1790
  %46 = load i32, i32* %i, align 4, !dbg !1791
  %idxprom55 = sext i32 %46 to i64, !dbg !1792
  %47 = load %struct.SiprParameters*, %struct.SiprParameters** %params.addr, align 8, !dbg !1792
  %gc_index = getelementptr inbounds %struct.SiprParameters, %struct.SiprParameters* %47, i32 0, i32 5, !dbg !1793
  %arrayidx56 = getelementptr inbounds [5 x i32], [5 x i32]* %gc_index, i64 0, i64 %idxprom55, !dbg !1792
  %48 = load i32, i32* %arrayidx56, align 4, !dbg !1792
  %idxprom57 = sext i32 %48 to i64, !dbg !1794
  %arrayidx58 = getelementptr inbounds [32 x float], [32 x float]* @gain_cb_16k, i64 0, i64 %idxprom57, !dbg !1794
  %49 = load float, float* %arrayidx58, align 4, !dbg !1794
  store float %49, float* %gain_corr_factor, align 4, !dbg !1795
  %50 = load float, float* %gain_corr_factor, align 4, !dbg !1796
  %call59 = call double @sqrt(double 8.000000e+01) #6, !dbg !1797
  %conv60 = fptrunc double %call59 to float, !dbg !1797
  %arraydecay61 = getelementptr inbounds [80 x float], [80 x float]* %fixed_vector, i32 0, i32 0, !dbg !1798
  %51 = load %struct.SiprContext*, %struct.SiprContext** %ctx.addr, align 8, !dbg !1799
  %energy_history = getelementptr inbounds %struct.SiprContext, %struct.SiprContext* %51, i32 0, i32 8, !dbg !1800
  %arraydecay62 = getelementptr inbounds [4 x float], [4 x float]* %energy_history, i32 0, i32 0, !dbg !1799
  %call63 = call float @acelp_decode_gain_codef(float %conv60, float* %arraydecay61, float 0xC051D3C6A0000000, float* getelementptr inbounds ([2 x float], [2 x float]* @pred_16k, i32 0, i32 0), float* %arraydecay62, i32 80, i32 2), !dbg !1801
  %mul64 = fmul float %50, %call63, !dbg !1802
  store float %mul64, float* %gain_code, align 4, !dbg !1803
  %52 = load %struct.SiprContext*, %struct.SiprContext** %ctx.addr, align 8, !dbg !1804
  %energy_history65 = getelementptr inbounds %struct.SiprContext, %struct.SiprContext* %52, i32 0, i32 8, !dbg !1805
  %arrayidx66 = getelementptr inbounds [4 x float], [4 x float]* %energy_history65, i64 0, i64 0, !dbg !1804
  %53 = load float, float* %arrayidx66, align 4, !dbg !1804
  %54 = load %struct.SiprContext*, %struct.SiprContext** %ctx.addr, align 8, !dbg !1806
  %energy_history67 = getelementptr inbounds %struct.SiprContext, %struct.SiprContext* %54, i32 0, i32 8, !dbg !1807
  %arrayidx68 = getelementptr inbounds [4 x float], [4 x float]* %energy_history67, i64 0, i64 1, !dbg !1806
  store float %53, float* %arrayidx68, align 4, !dbg !1808
  %55 = load float, float* %gain_corr_factor, align 4, !dbg !1809
  %call69 = call float @log10f(float %55) #6, !dbg !1810
  %conv70 = fpext float %call69 to double, !dbg !1810
  %mul71 = fmul double 2.000000e+01, %conv70, !dbg !1811
  %conv72 = fptrunc double %mul71 to float, !dbg !1812
  %56 = load %struct.SiprContext*, %struct.SiprContext** %ctx.addr, align 8, !dbg !1813
  %energy_history73 = getelementptr inbounds %struct.SiprContext, %struct.SiprContext* %56, i32 0, i32 8, !dbg !1814
  %arrayidx74 = getelementptr inbounds [4 x float], [4 x float]* %energy_history73, i64 0, i64 0, !dbg !1813
  store float %conv72, float* %arrayidx74, align 4, !dbg !1815
  %57 = load i32, i32* %i_subfr, align 4, !dbg !1816
  %idxprom75 = sext i32 %57 to i64, !dbg !1817
  %58 = load float*, float** %excitation, align 8, !dbg !1817
  %arrayidx76 = getelementptr inbounds float, float* %58, i64 %idxprom75, !dbg !1817
  %59 = load i32, i32* %i_subfr, align 4, !dbg !1818
  %idxprom77 = sext i32 %59 to i64, !dbg !1819
  %60 = load float*, float** %excitation, align 8, !dbg !1819
  %arrayidx78 = getelementptr inbounds float, float* %60, i64 %idxprom77, !dbg !1819
  %arraydecay79 = getelementptr inbounds [80 x float], [80 x float]* %fixed_vector, i32 0, i32 0, !dbg !1820
  %61 = load float, float* %pitch_fac, align 4, !dbg !1821
  %62 = load float, float* %gain_code, align 4, !dbg !1822
  call void @ff_weighted_vector_sumf(float* %arrayidx76, float* %arrayidx78, float* %arraydecay79, float %61, float %62, i32 80), !dbg !1823
  %63 = load float*, float** %synth, align 8, !dbg !1824
  %64 = load i32, i32* %i_subfr, align 4, !dbg !1825
  %idx.ext80 = sext i32 %64 to i64, !dbg !1826
  %add.ptr81 = getelementptr inbounds float, float* %63, i64 %idx.ext80, !dbg !1826
  %65 = load i32, i32* %i, align 4, !dbg !1827
  %idxprom82 = sext i32 %65 to i64, !dbg !1828
  %arrayidx83 = getelementptr inbounds [2 x [16 x float]], [2 x [16 x float]]* %Az, i64 0, i64 %idxprom82, !dbg !1828
  %arraydecay84 = getelementptr inbounds [16 x float], [16 x float]* %arrayidx83, i32 0, i32 0, !dbg !1828
  %66 = load i32, i32* %i_subfr, align 4, !dbg !1829
  %idxprom85 = sext i32 %66 to i64, !dbg !1830
  %67 = load float*, float** %excitation, align 8, !dbg !1830
  %arrayidx86 = getelementptr inbounds float, float* %67, i64 %idxprom85, !dbg !1830
  call void @ff_celp_lp_synthesis_filterf(float* %add.ptr81, float* %arraydecay84, float* %arrayidx86, i32 80, i32 16), !dbg !1831
  br label %for.inc, !dbg !1832

for.inc:                                          ; preds = %cond.end
  %68 = load i32, i32* %i, align 4, !dbg !1833
  %inc = add nsw i32 %68, 1, !dbg !1833
  store i32 %inc, i32* %i, align 4, !dbg !1833
  br label %for.cond, !dbg !1835, !llvm.loop !1836

for.end:                                          ; preds = %for.cond
  %69 = load %struct.SiprContext*, %struct.SiprContext** %ctx.addr, align 8, !dbg !1838
  %synth87 = getelementptr inbounds %struct.SiprContext, %struct.SiprContext* %69, i32 0, i32 20, !dbg !1839
  %arraydecay88 = getelementptr inbounds [16 x float], [16 x float]* %synth87, i32 0, i32 0, !dbg !1840
  %70 = bitcast float* %arraydecay88 to i8*, !dbg !1840
  %71 = load float*, float** %synth, align 8, !dbg !1841
  %72 = load i32, i32* %frame_size, align 4, !dbg !1842
  %idx.ext89 = sext i32 %72 to i64, !dbg !1843
  %add.ptr90 = getelementptr inbounds float, float* %71, i64 %idx.ext89, !dbg !1843
  %add.ptr91 = getelementptr inbounds float, float* %add.ptr90, i64 -16, !dbg !1844
  %73 = bitcast float* %add.ptr91 to i8*, !dbg !1840
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %70, i8* %73, i64 64, i32 4, i1 false), !dbg !1840
  %74 = load %struct.SiprContext*, %struct.SiprContext** %ctx.addr, align 8, !dbg !1845
  %excitation92 = getelementptr inbounds %struct.SiprContext, %struct.SiprContext* %74, i32 0, i32 4, !dbg !1846
  %arraydecay93 = getelementptr inbounds [452 x float], [452 x float]* %excitation92, i32 0, i32 0, !dbg !1847
  %75 = bitcast float* %arraydecay93 to i8*, !dbg !1847
  %76 = load %struct.SiprContext*, %struct.SiprContext** %ctx.addr, align 8, !dbg !1848
  %excitation94 = getelementptr inbounds %struct.SiprContext, %struct.SiprContext* %76, i32 0, i32 4, !dbg !1849
  %arraydecay95 = getelementptr inbounds [452 x float], [452 x float]* %excitation94, i32 0, i32 0, !dbg !1848
  %add.ptr96 = getelementptr inbounds float, float* %arraydecay95, i64 160, !dbg !1850
  %77 = bitcast float* %add.ptr96 to i8*, !dbg !1847
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %75, i8* %77, i64 1168, i32 4, i1 false), !dbg !1847
  %78 = load float*, float** %out_data.addr, align 8, !dbg !1851
  %79 = load float*, float** %synth, align 8, !dbg !1852
  %80 = load %struct.SiprContext*, %struct.SiprContext** %ctx.addr, align 8, !dbg !1853
  %iir_mem = getelementptr inbounds %struct.SiprContext, %struct.SiprContext* %80, i32 0, i32 16, !dbg !1854
  %arraydecay97 = getelementptr inbounds [17 x float], [17 x float]* %iir_mem, i32 0, i32 0, !dbg !1853
  %81 = load %struct.SiprContext*, %struct.SiprContext** %ctx.addr, align 8, !dbg !1855
  %filt_mem = getelementptr inbounds %struct.SiprContext, %struct.SiprContext* %81, i32 0, i32 18, !dbg !1856
  %arraydecay98 = getelementptr inbounds [2 x float*], [2 x float*]* %filt_mem, i32 0, i32 0, !dbg !1855
  %82 = load %struct.SiprContext*, %struct.SiprContext** %ctx.addr, align 8, !dbg !1857
  %mem_preemph = getelementptr inbounds %struct.SiprContext, %struct.SiprContext* %82, i32 0, i32 19, !dbg !1858
  %arraydecay99 = getelementptr inbounds [16 x float], [16 x float]* %mem_preemph, i32 0, i32 0, !dbg !1857
  call void @postfilter(float* %78, float* %79, float* %arraydecay97, float** %arraydecay98, float* %arraydecay99), !dbg !1859
  %83 = load %struct.SiprContext*, %struct.SiprContext** %ctx.addr, align 8, !dbg !1860
  %iir_mem100 = getelementptr inbounds %struct.SiprContext, %struct.SiprContext* %83, i32 0, i32 16, !dbg !1861
  %arraydecay101 = getelementptr inbounds [17 x float], [17 x float]* %iir_mem100, i32 0, i32 0, !dbg !1862
  %84 = bitcast float* %arraydecay101 to i8*, !dbg !1862
  %arrayidx102 = getelementptr inbounds [2 x [16 x float]], [2 x [16 x float]]* %Az, i64 0, i64 1, !dbg !1863
  %arraydecay103 = getelementptr inbounds [16 x float], [16 x float]* %arrayidx102, i32 0, i32 0, !dbg !1862
  %85 = bitcast float* %arraydecay103 to i8*, !dbg !1862
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %84, i8* %85, i64 64, i32 16, i1 false), !dbg !1862
  ret void, !dbg !1864
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind uwtable
define internal void @lsf_decode_fp_16k(float* %lsf_history, float* %isp_new, i32* %parm, i32 %ma_pred) #0 !dbg !1865 {
entry:
  %lsf_history.addr = alloca float*, align 8
  %isp_new.addr = alloca float*, align 8
  %parm.addr = alloca i32*, align 8
  %ma_pred.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %isp_q = alloca [16 x float], align 16
  store float* %lsf_history, float** %lsf_history.addr, align 8
  call void @llvm.dbg.declare(metadata float** %lsf_history.addr, metadata !1868, metadata !1619), !dbg !1869
  store float* %isp_new, float** %isp_new.addr, align 8
  call void @llvm.dbg.declare(metadata float** %isp_new.addr, metadata !1870, metadata !1619), !dbg !1871
  store i32* %parm, i32** %parm.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %parm.addr, metadata !1872, metadata !1619), !dbg !1873
  store i32 %ma_pred, i32* %ma_pred.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ma_pred.addr, metadata !1874, metadata !1619), !dbg !1875
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1876, metadata !1619), !dbg !1877
  call void @llvm.dbg.declare(metadata [16 x float]* %isp_q, metadata !1878, metadata !1619), !dbg !1879
  %arraydecay = getelementptr inbounds [16 x float], [16 x float]* %isp_q, i32 0, i32 0, !dbg !1880
  %0 = load i32*, i32** %parm.addr, align 8, !dbg !1881
  call void @dequant(float* %arraydecay, i32* %0, float** getelementptr inbounds ([5 x float*], [5 x float*]* @lsf_codebooks_16k, i32 0, i32 0)), !dbg !1882
  store i32 0, i32* %i, align 4, !dbg !1883
  br label %for.cond, !dbg !1885

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !1886
  %cmp = icmp slt i32 %1, 16, !dbg !1889
  br i1 %cmp, label %for.body, label %for.end, !dbg !1890

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %ma_pred.addr, align 4, !dbg !1891
  %idxprom = sext i32 %2 to i64, !dbg !1893
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* @qu, i64 0, i64 %idxprom, !dbg !1893
  %3 = load float, float* %arrayidx, align 4, !dbg !1893
  %sub = fsub float 1.000000e+00, %3, !dbg !1894
  %4 = load i32, i32* %i, align 4, !dbg !1895
  %idxprom1 = sext i32 %4 to i64, !dbg !1896
  %arrayidx2 = getelementptr inbounds [16 x float], [16 x float]* %isp_q, i64 0, i64 %idxprom1, !dbg !1896
  %5 = load float, float* %arrayidx2, align 4, !dbg !1896
  %mul = fmul float %sub, %5, !dbg !1897
  %6 = load i32, i32* %ma_pred.addr, align 4, !dbg !1898
  %idxprom3 = sext i32 %6 to i64, !dbg !1899
  %arrayidx4 = getelementptr inbounds [2 x float], [2 x float]* @qu, i64 0, i64 %idxprom3, !dbg !1899
  %7 = load float, float* %arrayidx4, align 4, !dbg !1899
  %8 = load i32, i32* %i, align 4, !dbg !1900
  %idxprom5 = sext i32 %8 to i64, !dbg !1901
  %9 = load float*, float** %lsf_history.addr, align 8, !dbg !1901
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 %idxprom5, !dbg !1901
  %10 = load float, float* %arrayidx6, align 4, !dbg !1901
  %mul7 = fmul float %7, %10, !dbg !1902
  %add = fadd float %mul, %mul7, !dbg !1903
  %11 = load i32, i32* %i, align 4, !dbg !1904
  %idxprom8 = sext i32 %11 to i64, !dbg !1905
  %arrayidx9 = getelementptr inbounds [16 x float], [16 x float]* @mean_lsf_16k, i64 0, i64 %idxprom8, !dbg !1905
  %12 = load float, float* %arrayidx9, align 4, !dbg !1905
  %add10 = fadd float %add, %12, !dbg !1906
  %13 = load i32, i32* %i, align 4, !dbg !1907
  %idxprom11 = sext i32 %13 to i64, !dbg !1908
  %14 = load float*, float** %isp_new.addr, align 8, !dbg !1908
  %arrayidx12 = getelementptr inbounds float, float* %14, i64 %idxprom11, !dbg !1908
  store float %add10, float* %arrayidx12, align 4, !dbg !1909
  br label %for.inc, !dbg !1910

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !dbg !1911
  %inc = add nsw i32 %15, 1, !dbg !1911
  store i32 %inc, i32* %i, align 4, !dbg !1911
  br label %for.cond, !dbg !1913, !llvm.loop !1914

for.end:                                          ; preds = %for.cond
  %16 = load float*, float** %lsf_history.addr, align 8, !dbg !1916
  %17 = bitcast float* %16 to i8*, !dbg !1917
  %arraydecay13 = getelementptr inbounds [16 x float], [16 x float]* %isp_q, i32 0, i32 0, !dbg !1917
  %18 = bitcast float* %arraydecay13 to i8*, !dbg !1917
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 64, i32 4, i1 false), !dbg !1917
  ret void, !dbg !1918
}

declare void @ff_set_min_dist_lsf(float*, double, i32) #2

; Function Attrs: nounwind uwtable
define internal void @lsf2lsp(float* %lsf, double* %lsp) #0 !dbg !1919 {
entry:
  %lsf.addr = alloca float*, align 8
  %lsp.addr = alloca double*, align 8
  %i = alloca i32, align 4
  store float* %lsf, float** %lsf.addr, align 8
  call void @llvm.dbg.declare(metadata float** %lsf.addr, metadata !1923, metadata !1619), !dbg !1924
  store double* %lsp, double** %lsp.addr, align 8
  call void @llvm.dbg.declare(metadata double** %lsp.addr, metadata !1925, metadata !1619), !dbg !1926
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1927, metadata !1619), !dbg !1928
  store i32 0, i32* %i, align 4, !dbg !1929
  br label %for.cond, !dbg !1931

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !1932
  %cmp = icmp slt i32 %0, 16, !dbg !1935
  br i1 %cmp, label %for.body, label %for.end, !dbg !1936

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !1937
  %idxprom = sext i32 %1 to i64, !dbg !1938
  %2 = load float*, float** %lsf.addr, align 8, !dbg !1938
  %arrayidx = getelementptr inbounds float, float* %2, i64 %idxprom, !dbg !1938
  %3 = load float, float* %arrayidx, align 4, !dbg !1938
  %call = call float @cosf(float %3) #6, !dbg !1939
  %conv = fpext float %call to double, !dbg !1939
  %4 = load i32, i32* %i, align 4, !dbg !1940
  %idxprom1 = sext i32 %4 to i64, !dbg !1941
  %5 = load double*, double** %lsp.addr, align 8, !dbg !1941
  %arrayidx2 = getelementptr inbounds double, double* %5, i64 %idxprom1, !dbg !1941
  store double %conv, double* %arrayidx2, align 8, !dbg !1942
  br label %for.inc, !dbg !1941

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !1943
  %inc = add nsw i32 %6, 1, !dbg !1943
  store i32 %inc, i32* %i, align 4, !dbg !1943
  br label %for.cond, !dbg !1945, !llvm.loop !1946

for.end:                                          ; preds = %for.cond
  ret void, !dbg !1948
}

; Function Attrs: nounwind uwtable
define internal void @acelp_lp_decodef(float* %lp_1st, float* %lp_2nd, double* %lsp_2nd, double* %lsp_prev) #0 !dbg !1949 {
entry:
  %lp_1st.addr = alloca float*, align 8
  %lp_2nd.addr = alloca float*, align 8
  %lsp_2nd.addr = alloca double*, align 8
  %lsp_prev.addr = alloca double*, align 8
  %lsp_1st = alloca [16 x double], align 16
  %i = alloca i32, align 4
  store float* %lp_1st, float** %lp_1st.addr, align 8
  call void @llvm.dbg.declare(metadata float** %lp_1st.addr, metadata !1954, metadata !1619), !dbg !1955
  store float* %lp_2nd, float** %lp_2nd.addr, align 8
  call void @llvm.dbg.declare(metadata float** %lp_2nd.addr, metadata !1956, metadata !1619), !dbg !1957
  store double* %lsp_2nd, double** %lsp_2nd.addr, align 8
  call void @llvm.dbg.declare(metadata double** %lsp_2nd.addr, metadata !1958, metadata !1619), !dbg !1959
  store double* %lsp_prev, double** %lsp_prev.addr, align 8
  call void @llvm.dbg.declare(metadata double** %lsp_prev.addr, metadata !1960, metadata !1619), !dbg !1961
  call void @llvm.dbg.declare(metadata [16 x double]* %lsp_1st, metadata !1962, metadata !1619), !dbg !1963
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1964, metadata !1619), !dbg !1965
  store i32 0, i32* %i, align 4, !dbg !1966
  br label %for.cond, !dbg !1968

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !1969
  %cmp = icmp slt i32 %0, 16, !dbg !1972
  br i1 %cmp, label %for.body, label %for.end, !dbg !1973

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !1974
  %idxprom = sext i32 %1 to i64, !dbg !1975
  %2 = load double*, double** %lsp_2nd.addr, align 8, !dbg !1975
  %arrayidx = getelementptr inbounds double, double* %2, i64 %idxprom, !dbg !1975
  %3 = load double, double* %arrayidx, align 8, !dbg !1975
  %4 = load i32, i32* %i, align 4, !dbg !1976
  %idxprom1 = sext i32 %4 to i64, !dbg !1977
  %5 = load double*, double** %lsp_prev.addr, align 8, !dbg !1977
  %arrayidx2 = getelementptr inbounds double, double* %5, i64 %idxprom1, !dbg !1977
  %6 = load double, double* %arrayidx2, align 8, !dbg !1977
  %add = fadd double %3, %6, !dbg !1978
  %mul = fmul double %add, 5.000000e-01, !dbg !1979
  %7 = load i32, i32* %i, align 4, !dbg !1980
  %idxprom3 = sext i32 %7 to i64, !dbg !1981
  %arrayidx4 = getelementptr inbounds [16 x double], [16 x double]* %lsp_1st, i64 0, i64 %idxprom3, !dbg !1981
  store double %mul, double* %arrayidx4, align 8, !dbg !1982
  br label %for.inc, !dbg !1981

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !1983
  %inc = add nsw i32 %8, 1, !dbg !1983
  store i32 %inc, i32* %i, align 4, !dbg !1983
  br label %for.cond, !dbg !1985, !llvm.loop !1986

for.end:                                          ; preds = %for.cond
  %arraydecay = getelementptr inbounds [16 x double], [16 x double]* %lsp_1st, i32 0, i32 0, !dbg !1988
  %9 = load float*, float** %lp_1st.addr, align 8, !dbg !1989
  call void @ff_acelp_lspd2lpc(double* %arraydecay, float* %9, i32 8), !dbg !1990
  %10 = load double*, double** %lsp_2nd.addr, align 8, !dbg !1991
  %11 = load float*, float** %lp_2nd.addr, align 8, !dbg !1992
  call void @ff_acelp_lspd2lpc(double* %10, float* %11, i32 8), !dbg !1993
  ret void, !dbg !1994
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #3

; Function Attrs: nounwind uwtable
define internal i32 @dec_delay3_1st(i32 %index) #0 !dbg !1995 {
entry:
  %retval = alloca i32, align 4
  %index.addr = alloca i32, align 4
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !1998, metadata !1619), !dbg !1999
  %0 = load i32, i32* %index.addr, align 4, !dbg !2000
  %cmp = icmp slt i32 %0, 390, !dbg !2002
  br i1 %cmp, label %if.then, label %if.else, !dbg !2003

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %index.addr, align 4, !dbg !2004
  %add = add nsw i32 %1, 88, !dbg !2006
  store i32 %add, i32* %retval, align 4, !dbg !2007
  br label %return, !dbg !2007

if.else:                                          ; preds = %entry
  %2 = load i32, i32* %index.addr, align 4, !dbg !2008
  %mul = mul nsw i32 3, %2, !dbg !2009
  %sub = sub nsw i32 %mul, 690, !dbg !2010
  store i32 %sub, i32* %retval, align 4, !dbg !2011
  br label %return, !dbg !2011

return:                                           ; preds = %if.else, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !2012
  ret i32 %3, !dbg !2012
}

; Function Attrs: nounwind uwtable
define internal i32 @dec_delay3_2nd(i32 %index, i32 %pit_min, i32 %pit_max, i32 %pitch_lag_prev) #0 !dbg !2013 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !2016, metadata !1619), !dbg !2021
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !2025, metadata !1619), !dbg !2026
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !2027, metadata !1619), !dbg !2028
  %retval = alloca i32, align 4
  %index.addr = alloca i32, align 4
  %pit_min.addr = alloca i32, align 4
  %pit_max.addr = alloca i32, align 4
  %pitch_lag_prev.addr = alloca i32, align 4
  %pitch_delay_min = alloca i32, align 4
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !2029, metadata !1619), !dbg !2030
  store i32 %pit_min, i32* %pit_min.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pit_min.addr, metadata !2031, metadata !1619), !dbg !2032
  store i32 %pit_max, i32* %pit_max.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pit_max.addr, metadata !2033, metadata !1619), !dbg !2034
  store i32 %pitch_lag_prev, i32* %pitch_lag_prev.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pitch_lag_prev.addr, metadata !2035, metadata !1619), !dbg !2036
  %0 = load i32, i32* %index.addr, align 4, !dbg !2037
  %cmp = icmp slt i32 %0, 62, !dbg !2038
  br i1 %cmp, label %if.then, label %if.else, !dbg !2039

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %pitch_delay_min, metadata !2040, metadata !1619), !dbg !2041
  %1 = load i32, i32* %pitch_lag_prev.addr, align 4, !dbg !2042
  %sub = sub nsw i32 %1, 10, !dbg !2043
  %2 = load i32, i32* %pit_min.addr, align 4, !dbg !2044
  %3 = load i32, i32* %pit_max.addr, align 4, !dbg !2045
  %sub1 = sub nsw i32 %3, 19, !dbg !2046
  store i32 %sub, i32* %a.addr.i, align 4, !dbg !2047
  store i32 %2, i32* %amin.addr.i, align 4, !dbg !2047
  store i32 %sub1, i32* %amax.addr.i, align 4, !dbg !2047
  %4 = load i32, i32* %a.addr.i, align 4, !dbg !2048
  %5 = load i32, i32* %amin.addr.i, align 4, !dbg !2050
  %cmp.i = icmp slt i32 %4, %5, !dbg !2051
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !2052

if.then.i:                                        ; preds = %if.then
  %6 = load i32, i32* %amin.addr.i, align 4, !dbg !2053
  store i32 %6, i32* %retval.i, align 4, !dbg !2055
  br label %av_clip_c.exit, !dbg !2055

if.else.i:                                        ; preds = %if.then
  %7 = load i32, i32* %a.addr.i, align 4, !dbg !2056
  %8 = load i32, i32* %amax.addr.i, align 4, !dbg !2058
  %cmp1.i = icmp sgt i32 %7, %8, !dbg !2059
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !2060

if.then2.i:                                       ; preds = %if.else.i
  %9 = load i32, i32* %amax.addr.i, align 4, !dbg !2061
  store i32 %9, i32* %retval.i, align 4, !dbg !2063
  br label %av_clip_c.exit, !dbg !2063

if.else3.i:                                       ; preds = %if.else.i
  %10 = load i32, i32* %a.addr.i, align 4, !dbg !2064
  store i32 %10, i32* %retval.i, align 4, !dbg !2065
  br label %av_clip_c.exit, !dbg !2065

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %11 = load i32, i32* %retval.i, align 4, !dbg !2066
  store i32 %11, i32* %pitch_delay_min, align 4, !dbg !2041
  %12 = load i32, i32* %pitch_delay_min, align 4, !dbg !2067
  %mul = mul nsw i32 3, %12, !dbg !2068
  %13 = load i32, i32* %index.addr, align 4, !dbg !2069
  %add = add nsw i32 %mul, %13, !dbg !2070
  %sub2 = sub nsw i32 %add, 2, !dbg !2071
  store i32 %sub2, i32* %retval, align 4, !dbg !2072
  br label %return, !dbg !2072

if.else:                                          ; preds = %entry
  %14 = load i32, i32* %pitch_lag_prev.addr, align 4, !dbg !2073
  %mul3 = mul nsw i32 3, %14, !dbg !2074
  store i32 %mul3, i32* %retval, align 4, !dbg !2075
  br label %return, !dbg !2075

return:                                           ; preds = %if.else, %av_clip_c.exit
  %15 = load i32, i32* %retval, align 4, !dbg !2076
  ret i32 %15, !dbg !2076
}

declare void @ff_acelp_interpolatef(float*, float*, float*, i32, i32, i32, i32) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #3

declare void @ff_decode_10_pulses_35bits(i16*, %struct.AMRFixed*, i8*, i32, i32) #2

declare void @ff_set_fixed_vector(float*, %struct.AMRFixed*, float, i32) #2

; Function Attrs: nounwind uwtable
define internal float @acelp_decode_gain_codef(float %gain_corr_factor, float* %fc_v, float %mr_energy, float* %quant_energy, float* %ma_prediction_coeff, i32 %subframe_size, i32 %ma_pred_order) #0 !dbg !2077 {
entry:
  %gain_corr_factor.addr = alloca float, align 4
  %fc_v.addr = alloca float*, align 8
  %mr_energy.addr = alloca float, align 4
  %quant_energy.addr = alloca float*, align 8
  %ma_prediction_coeff.addr = alloca float*, align 8
  %subframe_size.addr = alloca i32, align 4
  %ma_pred_order.addr = alloca i32, align 4
  store float %gain_corr_factor, float* %gain_corr_factor.addr, align 4
  call void @llvm.dbg.declare(metadata float* %gain_corr_factor.addr, metadata !2080, metadata !1619), !dbg !2081
  store float* %fc_v, float** %fc_v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %fc_v.addr, metadata !2082, metadata !1619), !dbg !2083
  store float %mr_energy, float* %mr_energy.addr, align 4
  call void @llvm.dbg.declare(metadata float* %mr_energy.addr, metadata !2084, metadata !1619), !dbg !2085
  store float* %quant_energy, float** %quant_energy.addr, align 8
  call void @llvm.dbg.declare(metadata float** %quant_energy.addr, metadata !2086, metadata !1619), !dbg !2087
  store float* %ma_prediction_coeff, float** %ma_prediction_coeff.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ma_prediction_coeff.addr, metadata !2088, metadata !1619), !dbg !2089
  store i32 %subframe_size, i32* %subframe_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %subframe_size.addr, metadata !2090, metadata !1619), !dbg !2091
  store i32 %ma_pred_order, i32* %ma_pred_order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ma_pred_order.addr, metadata !2092, metadata !1619), !dbg !2093
  %0 = load float*, float** %quant_energy.addr, align 8, !dbg !2094
  %1 = load float*, float** %ma_prediction_coeff.addr, align 8, !dbg !2095
  %2 = load i32, i32* %ma_pred_order.addr, align 4, !dbg !2096
  %call = call float @avpriv_scalarproduct_float_c(float* %0, float* %1, i32 %2), !dbg !2097
  %3 = load float, float* %mr_energy.addr, align 4, !dbg !2098
  %add = fadd float %3, %call, !dbg !2098
  store float %add, float* %mr_energy.addr, align 4, !dbg !2098
  %4 = load float, float* %gain_corr_factor.addr, align 4, !dbg !2099
  %conv = fpext float %4 to double, !dbg !2099
  %5 = load float, float* %mr_energy.addr, align 4, !dbg !2100
  %conv1 = fpext float %5 to double, !dbg !2100
  %mul = fmul double 0x3FBD791C5F888823, %conv1, !dbg !2101
  %call2 = call double @exp(double %mul) #6, !dbg !2102
  %mul3 = fmul double %conv, %call2, !dbg !2103
  %6 = load float*, float** %fc_v.addr, align 8, !dbg !2104
  %7 = load float*, float** %fc_v.addr, align 8, !dbg !2105
  %8 = load i32, i32* %subframe_size.addr, align 4, !dbg !2106
  %call4 = call float @avpriv_scalarproduct_float_c(float* %6, float* %7, i32 %8), !dbg !2107
  %conv5 = fpext float %call4 to double, !dbg !2107
  %add6 = fadd double 1.000000e-02, %conv5, !dbg !2108
  %call7 = call double @sqrt(double %add6) #6, !dbg !2109
  %div = fdiv double %mul3, %call7, !dbg !2111
  %conv8 = fptrunc double %div to float, !dbg !2099
  store float %conv8, float* %mr_energy.addr, align 4, !dbg !2112
  %9 = load float, float* %mr_energy.addr, align 4, !dbg !2113
  ret float %9, !dbg !2114
}

; Function Attrs: nounwind
declare double @sqrt(double) #4

; Function Attrs: nounwind
declare float @log10f(float) #4

declare void @ff_weighted_vector_sumf(float*, float*, float*, float, float, i32) #2

declare void @ff_celp_lp_synthesis_filterf(float*, float*, float*, i32, i32) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #3

; Function Attrs: nounwind uwtable
define internal void @postfilter(float* %out_data, float* %synth, float* %iir_mem, float** %filt_mem, float* %mem_preemph) #0 !dbg !2115 {
entry:
  %out_data.addr = alloca float*, align 8
  %synth.addr = alloca float*, align 8
  %iir_mem.addr = alloca float*, align 8
  %filt_mem.addr = alloca float**, align 8
  %mem_preemph.addr = alloca float*, align 8
  %buf = alloca [46 x float], align 16
  %tmpbuf = alloca float*, align 8
  %s = alloca float, align 4
  %i = alloca i32, align 4
  %SWAP_tmp = alloca float*, align 8
  store float* %out_data, float** %out_data.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out_data.addr, metadata !2119, metadata !1619), !dbg !2120
  store float* %synth, float** %synth.addr, align 8
  call void @llvm.dbg.declare(metadata float** %synth.addr, metadata !2121, metadata !1619), !dbg !2122
  store float* %iir_mem, float** %iir_mem.addr, align 8
  call void @llvm.dbg.declare(metadata float** %iir_mem.addr, metadata !2123, metadata !1619), !dbg !2124
  store float** %filt_mem, float*** %filt_mem.addr, align 8
  call void @llvm.dbg.declare(metadata float*** %filt_mem.addr, metadata !2125, metadata !1619), !dbg !2126
  store float* %mem_preemph, float** %mem_preemph.addr, align 8
  call void @llvm.dbg.declare(metadata float** %mem_preemph.addr, metadata !2127, metadata !1619), !dbg !2128
  call void @llvm.dbg.declare(metadata [46 x float]* %buf, metadata !2129, metadata !1619), !dbg !2133
  call void @llvm.dbg.declare(metadata float** %tmpbuf, metadata !2134, metadata !1619), !dbg !2135
  %arraydecay = getelementptr inbounds [46 x float], [46 x float]* %buf, i32 0, i32 0, !dbg !2136
  %add.ptr = getelementptr inbounds float, float* %arraydecay, i64 16, !dbg !2137
  store float* %add.ptr, float** %tmpbuf, align 8, !dbg !2135
  call void @llvm.dbg.declare(metadata float* %s, metadata !2138, metadata !1619), !dbg !2139
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2140, metadata !1619), !dbg !2141
  store i32 0, i32* %i, align 4, !dbg !2142
  br label %for.cond, !dbg !2144

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !2145
  %cmp = icmp slt i32 %0, 16, !dbg !2148
  br i1 %cmp, label %for.body, label %for.end, !dbg !2149

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !2150
  %idxprom = sext i32 %1 to i64, !dbg !2151
  %2 = load float*, float** %iir_mem.addr, align 8, !dbg !2151
  %arrayidx = getelementptr inbounds float, float* %2, i64 %idxprom, !dbg !2151
  %3 = load float, float* %arrayidx, align 4, !dbg !2151
  %4 = load i32, i32* %i, align 4, !dbg !2152
  %idxprom1 = sext i32 %4 to i64, !dbg !2153
  %arrayidx2 = getelementptr inbounds [16 x float], [16 x float]* @ff_pow_0_5, i64 0, i64 %idxprom1, !dbg !2153
  %5 = load float, float* %arrayidx2, align 4, !dbg !2153
  %mul = fmul float %3, %5, !dbg !2154
  %6 = load i32, i32* %i, align 4, !dbg !2155
  %idxprom3 = sext i32 %6 to i64, !dbg !2156
  %7 = load float**, float*** %filt_mem.addr, align 8, !dbg !2156
  %arrayidx4 = getelementptr inbounds float*, float** %7, i64 0, !dbg !2156
  %8 = load float*, float** %arrayidx4, align 8, !dbg !2156
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 %idxprom3, !dbg !2156
  store float %mul, float* %arrayidx5, align 4, !dbg !2157
  br label %for.inc, !dbg !2156

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !2158
  %inc = add nsw i32 %9, 1, !dbg !2158
  store i32 %inc, i32* %i, align 4, !dbg !2158
  br label %for.cond, !dbg !2160, !llvm.loop !2161

for.end:                                          ; preds = %for.cond
  %10 = load float*, float** %tmpbuf, align 8, !dbg !2163
  %add.ptr6 = getelementptr inbounds float, float* %10, i64 -16, !dbg !2164
  %11 = bitcast float* %add.ptr6 to i8*, !dbg !2165
  %12 = load float*, float** %mem_preemph.addr, align 8, !dbg !2166
  %13 = bitcast float* %12 to i8*, !dbg !2165
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %13, i64 64, i32 4, i1 false), !dbg !2165
  %14 = load float*, float** %tmpbuf, align 8, !dbg !2167
  %15 = load float**, float*** %filt_mem.addr, align 8, !dbg !2168
  %arrayidx7 = getelementptr inbounds float*, float** %15, i64 1, !dbg !2168
  %16 = load float*, float** %arrayidx7, align 8, !dbg !2168
  %17 = load float*, float** %synth.addr, align 8, !dbg !2169
  call void @ff_celp_lp_synthesis_filterf(float* %14, float* %16, float* %17, i32 30, i32 16), !dbg !2170
  %18 = load float*, float** %synth.addr, align 8, !dbg !2171
  %add.ptr8 = getelementptr inbounds float, float* %18, i64 -16, !dbg !2172
  %19 = bitcast float* %add.ptr8 to i8*, !dbg !2173
  %20 = load float*, float** %mem_preemph.addr, align 8, !dbg !2174
  %21 = bitcast float* %20 to i8*, !dbg !2173
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %21, i64 64, i32 4, i1 false), !dbg !2173
  %22 = load float*, float** %synth.addr, align 8, !dbg !2175
  %23 = load float**, float*** %filt_mem.addr, align 8, !dbg !2176
  %arrayidx9 = getelementptr inbounds float*, float** %23, i64 0, !dbg !2176
  %24 = load float*, float** %arrayidx9, align 8, !dbg !2176
  %25 = load float*, float** %synth.addr, align 8, !dbg !2177
  call void @ff_celp_lp_synthesis_filterf(float* %22, float* %24, float* %25, i32 30, i32 16), !dbg !2178
  %26 = load float*, float** %out_data.addr, align 8, !dbg !2179
  %add.ptr10 = getelementptr inbounds float, float* %26, i64 30, !dbg !2180
  %add.ptr11 = getelementptr inbounds float, float* %add.ptr10, i64 -16, !dbg !2181
  %27 = bitcast float* %add.ptr11 to i8*, !dbg !2182
  %28 = load float*, float** %synth.addr, align 8, !dbg !2183
  %add.ptr12 = getelementptr inbounds float, float* %28, i64 30, !dbg !2184
  %add.ptr13 = getelementptr inbounds float, float* %add.ptr12, i64 -16, !dbg !2185
  %29 = bitcast float* %add.ptr13 to i8*, !dbg !2182
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %29, i64 64, i32 4, i1 false), !dbg !2182
  %30 = load float*, float** %out_data.addr, align 8, !dbg !2186
  %add.ptr14 = getelementptr inbounds float, float* %30, i64 30, !dbg !2187
  %31 = load float**, float*** %filt_mem.addr, align 8, !dbg !2188
  %arrayidx15 = getelementptr inbounds float*, float** %31, i64 0, !dbg !2188
  %32 = load float*, float** %arrayidx15, align 8, !dbg !2188
  %33 = load float*, float** %synth.addr, align 8, !dbg !2189
  %add.ptr16 = getelementptr inbounds float, float* %33, i64 30, !dbg !2190
  call void @ff_celp_lp_synthesis_filterf(float* %add.ptr14, float* %32, float* %add.ptr16, i32 130, i32 16), !dbg !2191
  %34 = load float*, float** %mem_preemph.addr, align 8, !dbg !2192
  %35 = bitcast float* %34 to i8*, !dbg !2193
  %36 = load float*, float** %out_data.addr, align 8, !dbg !2194
  %add.ptr17 = getelementptr inbounds float, float* %36, i64 160, !dbg !2195
  %add.ptr18 = getelementptr inbounds float, float* %add.ptr17, i64 -16, !dbg !2196
  %37 = bitcast float* %add.ptr18 to i8*, !dbg !2193
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %37, i64 64, i32 4, i1 false), !dbg !2193
  br label %do.body, !dbg !2197, !llvm.loop !2198

do.body:                                          ; preds = %for.end
  call void @llvm.dbg.declare(metadata float** %SWAP_tmp, metadata !2199, metadata !1619), !dbg !2201
  %38 = load float**, float*** %filt_mem.addr, align 8, !dbg !2202
  %arrayidx19 = getelementptr inbounds float*, float** %38, i64 1, !dbg !2202
  %39 = load float*, float** %arrayidx19, align 8, !dbg !2202
  store float* %39, float** %SWAP_tmp, align 8, !dbg !2204
  %40 = load float**, float*** %filt_mem.addr, align 8, !dbg !2205
  %arrayidx20 = getelementptr inbounds float*, float** %40, i64 0, !dbg !2205
  %41 = load float*, float** %arrayidx20, align 8, !dbg !2205
  %42 = load float**, float*** %filt_mem.addr, align 8, !dbg !2206
  %arrayidx21 = getelementptr inbounds float*, float** %42, i64 1, !dbg !2206
  store float* %41, float** %arrayidx21, align 8, !dbg !2207
  %43 = load float*, float** %SWAP_tmp, align 8, !dbg !2208
  %44 = load float**, float*** %filt_mem.addr, align 8, !dbg !2209
  %arrayidx22 = getelementptr inbounds float*, float** %44, i64 0, !dbg !2209
  store float* %43, float** %arrayidx22, align 8, !dbg !2210
  br label %do.end, !dbg !2211

do.end:                                           ; preds = %do.body
  store i32 0, i32* %i, align 4, !dbg !2212
  store float 0.000000e+00, float* %s, align 4, !dbg !2214
  br label %for.cond23, !dbg !2215

for.cond23:                                       ; preds = %for.inc35, %do.end
  %45 = load i32, i32* %i, align 4, !dbg !2216
  %cmp24 = icmp slt i32 %45, 30, !dbg !2219
  br i1 %cmp24, label %for.body25, label %for.end39, !dbg !2220

for.body25:                                       ; preds = %for.cond23
  %46 = load i32, i32* %i, align 4, !dbg !2221
  %idxprom26 = sext i32 %46 to i64, !dbg !2222
  %47 = load float*, float** %tmpbuf, align 8, !dbg !2222
  %arrayidx27 = getelementptr inbounds float, float* %47, i64 %idxprom26, !dbg !2222
  %48 = load float, float* %arrayidx27, align 4, !dbg !2222
  %49 = load float, float* %s, align 4, !dbg !2223
  %50 = load i32, i32* %i, align 4, !dbg !2224
  %idxprom28 = sext i32 %50 to i64, !dbg !2225
  %51 = load float*, float** %synth.addr, align 8, !dbg !2225
  %arrayidx29 = getelementptr inbounds float, float* %51, i64 %idxprom28, !dbg !2225
  %52 = load float, float* %arrayidx29, align 4, !dbg !2225
  %53 = load i32, i32* %i, align 4, !dbg !2226
  %idxprom30 = sext i32 %53 to i64, !dbg !2227
  %54 = load float*, float** %tmpbuf, align 8, !dbg !2227
  %arrayidx31 = getelementptr inbounds float, float* %54, i64 %idxprom30, !dbg !2227
  %55 = load float, float* %arrayidx31, align 4, !dbg !2227
  %sub = fsub float %52, %55, !dbg !2228
  %mul32 = fmul float %49, %sub, !dbg !2229
  %add = fadd float %48, %mul32, !dbg !2230
  %56 = load i32, i32* %i, align 4, !dbg !2231
  %idxprom33 = sext i32 %56 to i64, !dbg !2232
  %57 = load float*, float** %out_data.addr, align 8, !dbg !2232
  %arrayidx34 = getelementptr inbounds float, float* %57, i64 %idxprom33, !dbg !2232
  store float %add, float* %arrayidx34, align 4, !dbg !2233
  br label %for.inc35, !dbg !2232

for.inc35:                                        ; preds = %for.body25
  %58 = load i32, i32* %i, align 4, !dbg !2234
  %inc36 = add nsw i32 %58, 1, !dbg !2234
  store i32 %inc36, i32* %i, align 4, !dbg !2234
  %59 = load float, float* %s, align 4, !dbg !2236
  %conv = fpext float %59 to double, !dbg !2236
  %add37 = fadd double %conv, 0x3FA1111111111111, !dbg !2236
  %conv38 = fptrunc double %add37 to float, !dbg !2236
  store float %conv38, float* %s, align 4, !dbg !2236
  br label %for.cond23, !dbg !2237, !llvm.loop !2238

for.end39:                                        ; preds = %for.cond23
  ret void, !dbg !2240
}

; Function Attrs: cold nounwind optsize uwtable
define void @ff_sipr_init_16k(%struct.SiprContext* %ctx) #5 !dbg !2241 {
entry:
  %ctx.addr = alloca %struct.SiprContext*, align 8
  %i = alloca i32, align 4
  store %struct.SiprContext* %ctx, %struct.SiprContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SiprContext** %ctx.addr, metadata !2244, metadata !1619), !dbg !2245
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2246, metadata !1619), !dbg !2247
  store i32 0, i32* %i, align 4, !dbg !2248
  br label %for.cond, !dbg !2250

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !2251
  %cmp = icmp slt i32 %0, 16, !dbg !2254
  br i1 %cmp, label %for.body, label %for.end, !dbg !2255

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !2256
  %add = add nsw i32 %1, 1, !dbg !2257
  %conv = sitofp i32 %add to double, !dbg !2258
  %mul = fmul double %conv, 0x400921FB54442D18, !dbg !2259
  %div = fdiv double %mul, 1.700000e+01, !dbg !2260
  %call = call double @cos(double %div) #6, !dbg !2261
  %2 = load i32, i32* %i, align 4, !dbg !2262
  %idxprom = sext i32 %2 to i64, !dbg !2263
  %3 = load %struct.SiprContext*, %struct.SiprContext** %ctx.addr, align 8, !dbg !2263
  %lsp_history_16k = getelementptr inbounds %struct.SiprContext, %struct.SiprContext* %3, i32 0, i32 21, !dbg !2264
  %arrayidx = getelementptr inbounds [16 x double], [16 x double]* %lsp_history_16k, i64 0, i64 %idxprom, !dbg !2263
  store double %call, double* %arrayidx, align 8, !dbg !2265
  br label %for.inc, !dbg !2263

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !2266
  %inc = add nsw i32 %4, 1, !dbg !2266
  store i32 %inc, i32* %i, align 4, !dbg !2266
  br label %for.cond, !dbg !2268, !llvm.loop !2269

for.end:                                          ; preds = %for.cond
  %5 = load %struct.SiprContext*, %struct.SiprContext** %ctx.addr, align 8, !dbg !2271
  %filt_buf = getelementptr inbounds %struct.SiprContext, %struct.SiprContext* %5, i32 0, i32 17, !dbg !2272
  %arrayidx1 = getelementptr inbounds [2 x [17 x float]], [2 x [17 x float]]* %filt_buf, i64 0, i64 0, !dbg !2271
  %arraydecay = getelementptr inbounds [17 x float], [17 x float]* %arrayidx1, i32 0, i32 0, !dbg !2271
  %6 = load %struct.SiprContext*, %struct.SiprContext** %ctx.addr, align 8, !dbg !2273
  %filt_mem = getelementptr inbounds %struct.SiprContext, %struct.SiprContext* %6, i32 0, i32 18, !dbg !2274
  %arrayidx2 = getelementptr inbounds [2 x float*], [2 x float*]* %filt_mem, i64 0, i64 0, !dbg !2273
  store float* %arraydecay, float** %arrayidx2, align 16, !dbg !2275
  %7 = load %struct.SiprContext*, %struct.SiprContext** %ctx.addr, align 8, !dbg !2276
  %filt_buf3 = getelementptr inbounds %struct.SiprContext, %struct.SiprContext* %7, i32 0, i32 17, !dbg !2277
  %arrayidx4 = getelementptr inbounds [2 x [17 x float]], [2 x [17 x float]]* %filt_buf3, i64 0, i64 1, !dbg !2276
  %arraydecay5 = getelementptr inbounds [17 x float], [17 x float]* %arrayidx4, i32 0, i32 0, !dbg !2276
  %8 = load %struct.SiprContext*, %struct.SiprContext** %ctx.addr, align 8, !dbg !2278
  %filt_mem6 = getelementptr inbounds %struct.SiprContext, %struct.SiprContext* %8, i32 0, i32 18, !dbg !2279
  %arrayidx7 = getelementptr inbounds [2 x float*], [2 x float*]* %filt_mem6, i64 0, i64 1, !dbg !2278
  store float* %arraydecay5, float** %arrayidx7, align 8, !dbg !2280
  %9 = load %struct.SiprContext*, %struct.SiprContext** %ctx.addr, align 8, !dbg !2281
  %pitch_lag_prev = getelementptr inbounds %struct.SiprContext, %struct.SiprContext* %9, i32 0, i32 15, !dbg !2282
  store i32 180, i32* %pitch_lag_prev, align 4, !dbg !2283
  ret void, !dbg !2284
}

; Function Attrs: nounwind
declare double @cos(double) #4

; Function Attrs: nounwind uwtable
define internal void @dequant(float* %out, i32* %idx, float** %cbs) #0 !dbg !2285 {
entry:
  %out.addr = alloca float*, align 8
  %idx.addr = alloca i32*, align 8
  %cbs.addr = alloca float**, align 8
  %i = alloca i32, align 4
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !2289, metadata !1619), !dbg !2290
  store i32* %idx, i32** %idx.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %idx.addr, metadata !2291, metadata !1619), !dbg !2292
  store float** %cbs, float*** %cbs.addr, align 8
  call void @llvm.dbg.declare(metadata float*** %cbs.addr, metadata !2293, metadata !1619), !dbg !2294
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2295, metadata !1619), !dbg !2296
  store i32 0, i32* %i, align 4, !dbg !2297
  br label %for.cond, !dbg !2299

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !2300
  %cmp = icmp slt i32 %0, 4, !dbg !2303
  br i1 %cmp, label %for.body, label %for.end, !dbg !2304

for.body:                                         ; preds = %for.cond
  %1 = load float*, float** %out.addr, align 8, !dbg !2305
  %2 = load i32, i32* %i, align 4, !dbg !2306
  %mul = mul nsw i32 3, %2, !dbg !2307
  %idx.ext = sext i32 %mul to i64, !dbg !2308
  %add.ptr = getelementptr inbounds float, float* %1, i64 %idx.ext, !dbg !2308
  %3 = bitcast float* %add.ptr to i8*, !dbg !2309
  %4 = load i32, i32* %i, align 4, !dbg !2310
  %idxprom = sext i32 %4 to i64, !dbg !2311
  %5 = load float**, float*** %cbs.addr, align 8, !dbg !2311
  %arrayidx = getelementptr inbounds float*, float** %5, i64 %idxprom, !dbg !2311
  %6 = load float*, float** %arrayidx, align 8, !dbg !2311
  %7 = load i32, i32* %i, align 4, !dbg !2312
  %idxprom1 = sext i32 %7 to i64, !dbg !2313
  %8 = load i32*, i32** %idx.addr, align 8, !dbg !2313
  %arrayidx2 = getelementptr inbounds i32, i32* %8, i64 %idxprom1, !dbg !2313
  %9 = load i32, i32* %arrayidx2, align 4, !dbg !2313
  %mul3 = mul nsw i32 3, %9, !dbg !2314
  %idx.ext4 = sext i32 %mul3 to i64, !dbg !2315
  %add.ptr5 = getelementptr inbounds float, float* %6, i64 %idx.ext4, !dbg !2315
  %10 = bitcast float* %add.ptr5 to i8*, !dbg !2309
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %10, i64 12, i32 4, i1 false), !dbg !2309
  br label %for.inc, !dbg !2309

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !2316
  %inc = add nsw i32 %11, 1, !dbg !2316
  store i32 %inc, i32* %i, align 4, !dbg !2316
  br label %for.cond, !dbg !2318, !llvm.loop !2319

for.end:                                          ; preds = %for.cond
  %12 = load float*, float** %out.addr, align 8, !dbg !2321
  %add.ptr6 = getelementptr inbounds float, float* %12, i64 12, !dbg !2322
  %13 = bitcast float* %add.ptr6 to i8*, !dbg !2323
  %14 = load float**, float*** %cbs.addr, align 8, !dbg !2324
  %arrayidx7 = getelementptr inbounds float*, float** %14, i64 4, !dbg !2324
  %15 = load float*, float** %arrayidx7, align 8, !dbg !2324
  %16 = load i32*, i32** %idx.addr, align 8, !dbg !2325
  %arrayidx8 = getelementptr inbounds i32, i32* %16, i64 4, !dbg !2325
  %17 = load i32, i32* %arrayidx8, align 4, !dbg !2325
  %mul9 = mul nsw i32 4, %17, !dbg !2326
  %idx.ext10 = sext i32 %mul9 to i64, !dbg !2327
  %add.ptr11 = getelementptr inbounds float, float* %15, i64 %idx.ext10, !dbg !2327
  %18 = bitcast float* %add.ptr11 to i8*, !dbg !2323
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %18, i64 16, i32 4, i1 false), !dbg !2323
  ret void, !dbg !2328
}

; Function Attrs: nounwind
declare float @cosf(float) #4

declare void @ff_acelp_lspd2lpc(double*, float*, i32) #2

declare float @avpriv_scalarproduct_float_c(float*, float*, i32) #2

; Function Attrs: nounwind
declare double @exp(double) #4

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!938, !939}
!llvm.ident = !{!940}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, globals: !895)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--sipr16k.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2 = !{!3, !24, !34, !494, !694, !711, !717, !747, !757, !781, !787, !805, !829, !848, !858, !866, !878, !887}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 29, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23}
!6 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!7 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!8 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!9 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!10 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!11 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!12 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!13 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!14 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!15 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!16 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!17 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!18 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!19 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!20 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!21 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!22 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!23 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !25, line: 199, size: 32, align: 32, elements: !26)
!25 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!26 = !{!27, !28, !29, !30, !31, !32, !33}
!27 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!28 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!29 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!30 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!31 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!32 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!33 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!34 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !35, line: 215, size: 32, align: 32, elements: !36)
!35 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!36 = !{!37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493}
!37 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!38 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!39 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!40 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!41 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!42 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!43 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!44 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!45 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!46 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!47 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!48 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!49 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!50 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!51 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!52 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!54 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!55 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!56 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!57 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!58 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!59 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!60 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!61 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!62 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!63 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!64 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!65 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!66 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!67 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!68 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!69 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!70 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!71 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!72 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!73 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!74 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!75 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!76 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!77 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!78 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!79 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!80 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!81 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!82 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!83 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!84 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!85 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!86 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!87 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!88 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!89 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!90 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!91 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!92 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!94 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!95 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!96 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!97 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!98 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!99 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!100 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!101 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!102 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!103 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!104 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!105 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!106 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!108 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!109 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!110 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!111 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!112 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!113 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!114 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!115 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!116 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!117 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!118 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!119 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!120 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!121 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!122 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!123 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!124 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!125 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!126 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!127 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!128 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!129 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!130 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!131 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!132 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!133 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!134 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!135 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!136 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!137 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!138 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!139 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!140 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!141 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!143 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!144 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!145 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!146 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!147 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!148 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!149 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!150 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!151 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!152 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!153 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!154 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!155 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!156 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!157 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!158 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!159 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!160 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!161 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!162 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!163 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!164 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!166 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!167 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!168 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!169 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!170 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!171 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!172 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!173 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!174 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!175 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!176 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!177 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!178 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!179 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!180 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!181 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!183 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!184 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!185 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!186 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!188 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!189 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!190 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!191 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!192 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!193 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!194 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!195 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!196 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!197 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!200 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!201 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!202 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!203 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!204 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!205 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!206 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!207 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!208 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!209 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!210 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!211 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!212 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!213 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!214 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!215 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!216 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!217 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!218 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!219 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!220 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!221 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!222 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!223 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!224 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!225 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!226 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!227 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!228 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!229 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!230 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!231 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!232 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!233 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!234 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!235 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!236 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!237 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!238 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!239 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!240 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!241 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!243 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!244 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!245 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!246 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!247 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!248 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!249 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!250 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!251 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!252 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!254 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!255 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!256 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!257 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!258 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!259 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!260 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!261 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!262 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!263 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!264 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!265 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!266 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!268 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!269 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!270 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!271 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!272 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!273 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!279 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!289 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!290 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!291 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!292 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!293 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!294 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!295 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!296 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!297 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!298 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!299 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!300 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!301 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!302 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!303 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!304 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!305 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!306 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!307 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!308 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!309 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!330 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!331 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!332 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!333 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!335 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!336 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!337 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!338 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!339 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!340 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!341 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!342 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!343 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!344 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!345 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!346 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!347 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!348 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!349 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!350 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!351 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!352 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!353 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!354 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!355 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!356 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!357 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!358 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!359 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!360 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!361 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!362 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!363 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!364 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!365 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!366 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!367 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!368 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!369 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!370 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!371 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!372 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!373 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!375 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!376 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!377 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!379 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!380 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!381 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!382 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!384 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!385 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!386 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!387 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!388 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!389 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!390 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!391 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!392 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!393 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!394 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!395 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!396 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!397 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!398 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!399 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!400 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!401 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!402 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!403 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!404 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!405 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!406 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!407 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!408 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!409 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!410 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!411 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!412 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!413 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!414 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!415 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!416 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!417 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!418 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!419 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!420 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!421 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!422 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!423 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!424 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!425 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!426 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!427 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!428 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!429 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!430 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!431 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!432 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!433 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!434 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!435 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!436 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!437 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!438 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!439 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!440 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!441 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!442 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!443 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!444 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!445 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!446 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!447 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!449 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!450 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!451 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!452 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!453 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!454 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!455 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!456 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!457 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!458 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!459 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!460 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!461 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!462 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!463 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!465 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!466 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!467 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!468 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!469 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!470 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!471 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!472 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!473 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!474 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!475 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!476 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!477 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!478 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!479 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!480 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!481 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!482 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!483 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!484 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!485 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!486 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!487 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!488 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!489 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!490 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!491 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!492 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!493 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!494 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !495, line: 64, size: 32, align: 32, elements: !496)
!495 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!496 = !{!497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693}
!497 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!498 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!499 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!500 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!501 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!502 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!503 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!504 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!505 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!507 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!508 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!509 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!511 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!512 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!513 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!514 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!515 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!516 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!518 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!519 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!520 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!521 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!522 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!523 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!524 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!525 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!526 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!527 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!528 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!531 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!534 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!535 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!536 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!537 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!538 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!541 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!542 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!543 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!544 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!545 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!552 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!553 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!554 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!555 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!556 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!557 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!558 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!560 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!561 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!574 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!575 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!576 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!577 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!578 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!579 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!580 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!581 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!582 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!583 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!584 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!585 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!586 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!587 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!588 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!589 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!590 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!594 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!595 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!596 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!597 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!598 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!599 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!600 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!601 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!602 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!603 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!604 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!605 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!606 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!607 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!608 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!609 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!610 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!611 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!615 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!616 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!618 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!619 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!620 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!621 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!622 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!623 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!624 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!626 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!627 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!628 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!629 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!630 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!631 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!632 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!633 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!634 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!638 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!639 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!640 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!641 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!642 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!643 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!644 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!645 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!646 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!647 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!648 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!649 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!650 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!651 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!652 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!653 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!654 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!655 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!656 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!657 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!658 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!659 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!660 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!661 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!662 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!663 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!664 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!668 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!669 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!670 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!671 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!672 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!673 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!674 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!675 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!676 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!677 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!678 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!679 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!680 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!681 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!682 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!683 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!684 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!685 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!686 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!687 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!688 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!689 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!690 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!691 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!692 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!693 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!694 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !695, line: 58, size: 32, align: 32, elements: !696)
!695 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!696 = !{!697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710}
!697 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!698 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!699 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!700 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!701 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!702 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!703 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!704 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!705 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!706 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!707 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!708 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!709 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!710 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !35, line: 3865, size: 32, align: 32, elements: !712)
!712 = !{!713, !714, !715, !716}
!713 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!714 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!715 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!716 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!717 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !35, line: 1175, size: 32, align: 32, elements: !718)
!718 = !{!719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746}
!719 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!720 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!721 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!722 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!723 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!724 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!725 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!726 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!727 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!728 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!729 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!730 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!731 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!732 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!733 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!734 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!735 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!736 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!737 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!738 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!739 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!740 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!741 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!742 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!743 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!744 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!745 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!746 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!747 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !25, line: 272, size: 32, align: 32, elements: !748)
!748 = !{!749, !750, !751, !752, !753, !754, !755, !756}
!749 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!750 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!751 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!752 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!753 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!754 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!755 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!756 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!757 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !758, line: 48, size: 32, align: 32, elements: !759)
!758 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!759 = !{!760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780}
!760 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!761 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!762 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!763 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!764 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!765 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!766 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!767 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!768 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!769 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!770 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!771 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!772 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!773 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!774 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!775 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!776 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!777 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!778 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!779 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!780 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!781 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !495, line: 516, size: 32, align: 32, elements: !782)
!782 = !{!783, !784, !785, !786}
!783 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!784 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!785 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!786 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!787 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !495, line: 440, size: 32, align: 32, elements: !788)
!788 = !{!789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804}
!789 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!790 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!791 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!792 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!793 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!794 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!795 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!796 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!797 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!798 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!799 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!800 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!801 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!802 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!803 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!804 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!805 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !495, line: 464, size: 32, align: 32, elements: !806)
!806 = !{!807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828}
!807 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!808 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!809 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!810 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!811 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!812 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!813 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!814 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!815 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!816 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!817 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!818 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!819 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!820 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!821 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!822 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!823 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!824 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!825 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!826 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!827 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!828 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!829 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !495, line: 493, size: 32, align: 32, elements: !830)
!830 = !{!831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847}
!831 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!832 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!833 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!834 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!835 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!836 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!837 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!838 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!839 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!840 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!841 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!842 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!843 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!844 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!845 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!846 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!847 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!848 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !495, line: 538, size: 32, align: 32, elements: !849)
!849 = !{!850, !851, !852, !853, !854, !855, !856, !857}
!850 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!851 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!852 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!853 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!854 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!855 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!856 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!857 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!858 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !35, line: 1534, size: 32, align: 32, elements: !859)
!859 = !{!860, !861, !862, !863, !864, !865}
!860 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!861 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!862 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!863 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!864 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!865 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!866 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !35, line: 810, size: 32, align: 32, elements: !867)
!867 = !{!868, !869, !870, !871, !872, !873, !874, !875, !876, !877}
!868 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!869 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!870 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!871 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!872 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!873 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!874 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!875 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!876 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!877 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!878 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !35, line: 798, size: 32, align: 32, elements: !879)
!879 = !{!880, !881, !882, !883, !884, !885, !886}
!880 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!881 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!882 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!883 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!884 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!885 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!886 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!887 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !888, line: 48, size: 32, align: 32, elements: !889)
!888 = !DIFile(filename: "libavcodec/sipr.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!889 = !{!890, !891, !892, !893, !894}
!890 = !DIEnumerator(name: "MODE_16k", value: 0)
!891 = !DIEnumerator(name: "MODE_8k5", value: 1)
!892 = !DIEnumerator(name: "MODE_6k5", value: 2)
!893 = !DIEnumerator(name: "MODE_5k0", value: 3)
!894 = !DIEnumerator(name: "MODE_COUNT", value: 4)
!895 = !{!896, !905, !910, !914, !915, !916, !920, !924, !928, !929, !933, !937}
!896 = distinct !DIGlobalVariable(name: "lsf_codebooks_16k", scope: !0, file: !897, line: 528, type: !898, isLocal: true, isDefinition: true, variable: [5 x float*]* @lsf_codebooks_16k)
!897 = !DIFile(filename: "libavcodec/sipr16kdata.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!898 = !DICompositeType(tag: DW_TAG_array_type, baseType: !899, size: 320, align: 64, elements: !903)
!899 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !900)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64, align: 64)
!901 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !902)
!902 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!903 = !{!904}
!904 = !DISubrange(count: 5)
!905 = distinct !DIGlobalVariable(name: "lsf_cb1_16k", scope: !0, file: !897, line: 65, type: !906, isLocal: true, isDefinition: true, variable: [128 x [3 x float]]* @lsf_cb1_16k)
!906 = !DICompositeType(tag: DW_TAG_array_type, baseType: !901, size: 12288, align: 32, elements: !907)
!907 = !{!908, !909}
!908 = !DISubrange(count: 128)
!909 = !DISubrange(count: 3)
!910 = distinct !DIGlobalVariable(name: "lsf_cb2_16k", scope: !0, file: !897, line: 132, type: !911, isLocal: true, isDefinition: true, variable: [256 x [3 x float]]* @lsf_cb2_16k)
!911 = !DICompositeType(tag: DW_TAG_array_type, baseType: !901, size: 24576, align: 32, elements: !912)
!912 = !{!913, !909}
!913 = !DISubrange(count: 256)
!914 = distinct !DIGlobalVariable(name: "lsf_cb3_16k", scope: !0, file: !897, line: 263, type: !906, isLocal: true, isDefinition: true, variable: [128 x [3 x float]]* @lsf_cb3_16k)
!915 = distinct !DIGlobalVariable(name: "lsf_cb4_16k", scope: !0, file: !897, line: 330, type: !906, isLocal: true, isDefinition: true, variable: [128 x [3 x float]]* @lsf_cb4_16k)
!916 = distinct !DIGlobalVariable(name: "lsf_cb5_16k", scope: !0, file: !897, line: 397, type: !917, isLocal: true, isDefinition: true, variable: [128 x [4 x float]]* @lsf_cb5_16k)
!917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !901, size: 16384, align: 32, elements: !918)
!918 = !{!908, !919}
!919 = !DISubrange(count: 4)
!920 = distinct !DIGlobalVariable(name: "qu", scope: !0, file: !897, line: 28, type: !921, isLocal: true, isDefinition: true, variable: [2 x float]* @qu)
!921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !901, size: 64, align: 32, elements: !922)
!922 = !{!923}
!923 = !DISubrange(count: 2)
!924 = distinct !DIGlobalVariable(name: "mean_lsf_16k", scope: !0, file: !897, line: 47, type: !925, isLocal: true, isDefinition: true, variable: [16 x float]* @mean_lsf_16k)
!925 = !DICompositeType(tag: DW_TAG_array_type, baseType: !901, size: 512, align: 32, elements: !926)
!926 = !{!927}
!927 = !DISubrange(count: 16)
!928 = distinct !DIGlobalVariable(name: "gain_pitch_cb_16k", scope: !0, file: !897, line: 41, type: !925, isLocal: true, isDefinition: true, variable: [16 x float]* @gain_pitch_cb_16k)
!929 = distinct !DIGlobalVariable(name: "sinc_win", scope: !0, file: !897, line: 57, type: !930, isLocal: true, isDefinition: true, variable: [40 x float]* @sinc_win)
!930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !901, size: 1280, align: 32, elements: !931)
!931 = !{!932}
!932 = !DISubrange(count: 40)
!933 = distinct !DIGlobalVariable(name: "gain_cb_16k", scope: !0, file: !897, line: 30, type: !934, isLocal: true, isDefinition: true, variable: [32 x float]* @gain_cb_16k)
!934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !901, size: 1024, align: 32, elements: !935)
!935 = !{!936}
!936 = !DISubrange(count: 32)
!937 = distinct !DIGlobalVariable(name: "pred_16k", scope: !0, file: !897, line: 27, type: !921, isLocal: true, isDefinition: true, variable: [2 x float]* @pred_16k)
!938 = !{i32 2, !"Dwarf Version", i32 4}
!939 = !{i32 2, !"Debug Info Version", i32 3}
!940 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!941 = distinct !DISubprogram(name: "ff_sipr_decode_frame_16k", scope: !942, file: !942, line: 176, type: !943, isLocal: false, isDefinition: true, scopeLine: 178, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1617)
!942 = !DIFile(filename: "libavcodec/sipr16k.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!943 = !DISubroutineType(types: !944)
!944 = !{null, !945, !1602, !1591}
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64, align: 64)
!946 = !DIDerivedType(tag: DW_TAG_typedef, name: "SiprContext", file: !888, line: 100, baseType: !947)
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SiprContext", file: !888, line: 65, size: 45696, align: 128, elements: !948)
!948 = !{!949, !1549, !1551, !1552, !1554, !1558, !1561, !1565, !1566, !1568, !1570, !1574, !1575, !1576, !1577, !1581, !1582, !1586, !1589, !1592, !1593, !1594, !1597}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !947, file: !888, line: 66, baseType: !950, size: 64, align: 64)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64, align: 64)
!951 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !35, line: 3360, baseType: !952)
!952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !35, line: 1556, size: 8448, align: 64, elements: !953)
!953 = !{!954, !1000, !1001, !1002, !1273, !1274, !1275, !1276, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1302, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1487, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !952, file: !35, line: 1561, baseType: !955, size: 64, align: 64)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64, align: 64)
!956 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !957)
!957 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !4, line: 143, baseType: !958)
!958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !4, line: 67, size: 640, align: 64, elements: !959)
!959 = !{!960, !964, !969, !973, !975, !976, !977, !981, !987, !989, !993}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !958, file: !4, line: 72, baseType: !961, size: 64, align: 64)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64, align: 64)
!962 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !963)
!963 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !958, file: !4, line: 78, baseType: !965, size: 64, align: 64, offset: 64)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64, align: 64)
!966 = !DISubroutineType(types: !967)
!967 = !{!961, !968}
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !958, file: !4, line: 85, baseType: !970, size: 64, align: 64, offset: 128)
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 64, align: 64)
!971 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !972)
!972 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !4, line: 85, flags: DIFlagFwdDecl)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !958, file: !4, line: 93, baseType: !974, size: 32, align: 32, offset: 192)
!974 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !958, file: !4, line: 99, baseType: !974, size: 32, align: 32, offset: 224)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !958, file: !4, line: 108, baseType: !974, size: 32, align: 32, offset: 256)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !958, file: !4, line: 113, baseType: !978, size: 64, align: 64, offset: 320)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64, align: 64)
!979 = !DISubroutineType(types: !980)
!980 = !{!968, !968, !968}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !958, file: !4, line: 123, baseType: !982, size: 64, align: 64, offset: 384)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64, align: 64)
!983 = !DISubroutineType(types: !984)
!984 = !{!985, !985}
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64, align: 64)
!986 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !958)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !958, file: !4, line: 130, baseType: !988, size: 32, align: 32, offset: 448)
!988 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !4, line: 48, baseType: !3)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !958, file: !4, line: 136, baseType: !990, size: 64, align: 64, offset: 512)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64, align: 64)
!991 = !DISubroutineType(types: !992)
!992 = !{!988, !968}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !958, file: !4, line: 142, baseType: !994, size: 64, align: 64, offset: 576)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 64, align: 64)
!995 = !DISubroutineType(types: !996)
!996 = !{!974, !997, !968, !961, !974}
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 64, align: 64)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64, align: 64)
!999 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !4, line: 60, flags: DIFlagFwdDecl)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !952, file: !35, line: 1562, baseType: !974, size: 32, align: 32, offset: 64)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !952, file: !35, line: 1564, baseType: !24, size: 32, align: 32, offset: 96)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !952, file: !35, line: 1565, baseType: !1003, size: 64, align: 64, offset: 128)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64, align: 64)
!1004 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1005)
!1005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !35, line: 3468, size: 1984, align: 64, elements: !1006)
!1006 = !{!1007, !1008, !1009, !1010, !1011, !1012, !1021, !1024, !1027, !1030, !1036, !1039, !1040, !1048, !1049, !1050, !1052, !1056, !1062, !1067, !1071, !1072, !1123, !1244, !1248, !1249, !1253, !1257, !1262, !1266, !1267, !1268}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1005, file: !35, line: 3475, baseType: !961, size: 64, align: 64)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1005, file: !35, line: 3480, baseType: !961, size: 64, align: 64, offset: 64)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1005, file: !35, line: 3481, baseType: !24, size: 32, align: 32, offset: 128)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1005, file: !35, line: 3482, baseType: !34, size: 32, align: 32, offset: 160)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1005, file: !35, line: 3487, baseType: !974, size: 32, align: 32, offset: 192)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1005, file: !35, line: 3488, baseType: !1013, size: 64, align: 64, offset: 256)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64, align: 64)
!1014 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1015)
!1015 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1016, line: 61, baseType: !1017)
!1016 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1016, line: 58, size: 64, align: 32, elements: !1018)
!1018 = !{!1019, !1020}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1017, file: !1016, line: 59, baseType: !974, size: 32, align: 32)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1017, file: !1016, line: 60, baseType: !974, size: 32, align: 32, offset: 32)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1005, file: !35, line: 3489, baseType: !1022, size: 64, align: 64, offset: 320)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64, align: 64)
!1023 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1005, file: !35, line: 3490, baseType: !1025, size: 64, align: 64, offset: 384)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 64, align: 64)
!1026 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !974)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1005, file: !35, line: 3491, baseType: !1028, size: 64, align: 64, offset: 448)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 64, align: 64)
!1029 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !694)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1005, file: !35, line: 3492, baseType: !1031, size: 64, align: 64, offset: 512)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64, align: 64)
!1032 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1033)
!1033 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1034, line: 55, baseType: !1035)
!1034 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1035 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1005, file: !35, line: 3493, baseType: !1037, size: 8, align: 8, offset: 576)
!1037 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !1034, line: 48, baseType: !1038)
!1038 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1005, file: !35, line: 3494, baseType: !955, size: 64, align: 64, offset: 640)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1005, file: !35, line: 3495, baseType: !1041, size: 64, align: 64, offset: 704)
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64, align: 64)
!1042 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1043)
!1043 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !35, line: 3404, baseType: !1044)
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !35, line: 3401, size: 128, align: 64, elements: !1045)
!1045 = !{!1046, !1047}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1044, file: !35, line: 3402, baseType: !974, size: 32, align: 32)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1044, file: !35, line: 3403, baseType: !961, size: 64, align: 64, offset: 64)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1005, file: !35, line: 3507, baseType: !961, size: 64, align: 64, offset: 768)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1005, file: !35, line: 3516, baseType: !974, size: 32, align: 32, offset: 832)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1005, file: !35, line: 3517, baseType: !1051, size: 64, align: 64, offset: 896)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64, align: 64)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1005, file: !35, line: 3527, baseType: !1053, size: 64, align: 64, offset: 960)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 64, align: 64)
!1054 = !DISubroutineType(types: !1055)
!1055 = !{!974, !950}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1005, file: !35, line: 3535, baseType: !1057, size: 64, align: 64, offset: 1024)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 64, align: 64)
!1058 = !DISubroutineType(types: !1059)
!1059 = !{!974, !950, !1060}
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64, align: 64)
!1061 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !951)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1005, file: !35, line: 3541, baseType: !1063, size: 64, align: 64, offset: 1088)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64, align: 64)
!1064 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1065)
!1065 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !35, line: 3461, baseType: !1066)
!1066 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !35, line: 3461, flags: DIFlagFwdDecl)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1005, file: !35, line: 3549, baseType: !1068, size: 64, align: 64, offset: 1152)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64, align: 64)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{null, !1051}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1005, file: !35, line: 3551, baseType: !1053, size: 64, align: 64, offset: 1216)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1005, file: !35, line: 3552, baseType: !1073, size: 64, align: 64, offset: 1280)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64, align: 64)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!974, !950, !1076, !974, !1077}
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64, align: 64)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64, align: 64)
!1078 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1079)
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !35, line: 3920, size: 256, align: 64, elements: !1080)
!1080 = !{!1081, !1084, !1087, !1088, !1089, !1120}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1079, file: !35, line: 3921, baseType: !1082, size: 16, align: 16)
!1082 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !1034, line: 49, baseType: !1083)
!1083 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1079, file: !35, line: 3922, baseType: !1085, size: 32, align: 32, offset: 32)
!1085 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !1034, line: 51, baseType: !1086)
!1086 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1079, file: !35, line: 3923, baseType: !1085, size: 32, align: 32, offset: 64)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1079, file: !35, line: 3924, baseType: !1086, size: 32, align: 32, offset: 96)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1079, file: !35, line: 3925, baseType: !1090, size: 64, align: 64, offset: 128)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 64, align: 64)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 64, align: 64)
!1092 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !35, line: 3918, baseType: !1093)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !35, line: 3885, size: 1600, align: 64, elements: !1094)
!1094 = !{!1095, !1096, !1097, !1098, !1099, !1100, !1110, !1113, !1115, !1116, !1118, !1119}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1093, file: !35, line: 3886, baseType: !974, size: 32, align: 32)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1093, file: !35, line: 3887, baseType: !974, size: 32, align: 32, offset: 32)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1093, file: !35, line: 3888, baseType: !974, size: 32, align: 32, offset: 64)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1093, file: !35, line: 3889, baseType: !974, size: 32, align: 32, offset: 96)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1093, file: !35, line: 3890, baseType: !974, size: 32, align: 32, offset: 128)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1093, file: !35, line: 3897, baseType: !1101, size: 768, align: 64, offset: 192)
!1101 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !35, line: 3858, baseType: !1102)
!1102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !35, line: 3853, size: 768, align: 64, elements: !1103)
!1103 = !{!1104, !1108}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1102, file: !35, line: 3855, baseType: !1105, size: 512, align: 64)
!1105 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1076, size: 512, align: 64, elements: !1106)
!1106 = !{!1107}
!1107 = !DISubrange(count: 8)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1102, file: !35, line: 3857, baseType: !1109, size: 256, align: 32, offset: 512)
!1109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !974, size: 256, align: 32, elements: !1106)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1093, file: !35, line: 3903, baseType: !1111, size: 256, align: 64, offset: 960)
!1111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1076, size: 256, align: 64, elements: !1112)
!1112 = !{!919}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1093, file: !35, line: 3904, baseType: !1114, size: 128, align: 32, offset: 1216)
!1114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !974, size: 128, align: 32, elements: !1112)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1093, file: !35, line: 3906, baseType: !711, size: 32, align: 32, offset: 1344)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1093, file: !35, line: 3908, baseType: !1117, size: 64, align: 64, offset: 1408)
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64, align: 64)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1093, file: !35, line: 3915, baseType: !1117, size: 64, align: 64, offset: 1472)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1093, file: !35, line: 3917, baseType: !974, size: 32, align: 32, offset: 1536)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1079, file: !35, line: 3926, baseType: !1121, size: 64, align: 64, offset: 192)
!1121 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !1034, line: 40, baseType: !1122)
!1122 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1005, file: !35, line: 3564, baseType: !1124, size: 64, align: 64, offset: 1344)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 64, align: 64)
!1125 = !DISubroutineType(types: !1126)
!1126 = !{!974, !950, !1127, !1161, !1243}
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64, align: 64)
!1128 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !35, line: 1499, baseType: !1129)
!1129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !35, line: 1445, size: 704, align: 64, elements: !1130)
!1130 = !{!1131, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1157, !1158, !1159, !1160}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1129, file: !35, line: 1451, baseType: !1132, size: 64, align: 64)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 64, align: 64)
!1133 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1134, line: 94, baseType: !1135)
!1134 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1134, line: 81, size: 192, align: 64, elements: !1136)
!1136 = !{!1137, !1141, !1142}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1135, file: !1134, line: 82, baseType: !1138, size: 64, align: 64)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 64, align: 64)
!1139 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1134, line: 73, baseType: !1140)
!1140 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1134, line: 73, flags: DIFlagFwdDecl)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1135, file: !1134, line: 89, baseType: !1076, size: 64, align: 64, offset: 64)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1135, file: !1134, line: 93, baseType: !974, size: 32, align: 32, offset: 128)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1129, file: !35, line: 1461, baseType: !1121, size: 64, align: 64, offset: 64)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1129, file: !35, line: 1467, baseType: !1121, size: 64, align: 64, offset: 128)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1129, file: !35, line: 1468, baseType: !1076, size: 64, align: 64, offset: 192)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1129, file: !35, line: 1469, baseType: !974, size: 32, align: 32, offset: 256)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1129, file: !35, line: 1470, baseType: !974, size: 32, align: 32, offset: 288)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1129, file: !35, line: 1474, baseType: !974, size: 32, align: 32, offset: 320)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1129, file: !35, line: 1479, baseType: !1150, size: 64, align: 64, offset: 384)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 64, align: 64)
!1151 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !35, line: 1415, baseType: !1152)
!1152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !35, line: 1411, size: 128, align: 64, elements: !1153)
!1153 = !{!1154, !1155, !1156}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1152, file: !35, line: 1412, baseType: !1076, size: 64, align: 64)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1152, file: !35, line: 1413, baseType: !974, size: 32, align: 32, offset: 64)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1152, file: !35, line: 1414, baseType: !717, size: 32, align: 32, offset: 96)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1129, file: !35, line: 1480, baseType: !974, size: 32, align: 32, offset: 448)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1129, file: !35, line: 1486, baseType: !1121, size: 64, align: 64, offset: 512)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1129, file: !35, line: 1488, baseType: !1121, size: 64, align: 64, offset: 576)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1129, file: !35, line: 1497, baseType: !1121, size: 64, align: 64, offset: 640)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64, align: 64)
!1162 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1163)
!1163 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !758, line: 646, baseType: !1164)
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !758, line: 268, size: 4288, align: 64, elements: !1165)
!1165 = !{!1166, !1167, !1168, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1195, !1197, !1198, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1231, !1232, !1233, !1234, !1235, !1236, !1239, !1240, !1241, !1242}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1164, file: !758, line: 282, baseType: !1105, size: 512, align: 64)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1164, file: !758, line: 299, baseType: !1109, size: 256, align: 32, offset: 512)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1164, file: !758, line: 315, baseType: !1169, size: 64, align: 64, offset: 768)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64, align: 64)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1164, file: !758, line: 326, baseType: !974, size: 32, align: 32, offset: 832)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1164, file: !758, line: 326, baseType: !974, size: 32, align: 32, offset: 864)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1164, file: !758, line: 334, baseType: !974, size: 32, align: 32, offset: 896)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1164, file: !758, line: 341, baseType: !974, size: 32, align: 32, offset: 928)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1164, file: !758, line: 346, baseType: !974, size: 32, align: 32, offset: 960)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1164, file: !758, line: 351, baseType: !747, size: 32, align: 32, offset: 992)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1164, file: !758, line: 356, baseType: !1015, size: 64, align: 32, offset: 1024)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1164, file: !758, line: 361, baseType: !1121, size: 64, align: 64, offset: 1088)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1164, file: !758, line: 369, baseType: !1121, size: 64, align: 64, offset: 1152)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1164, file: !758, line: 377, baseType: !1121, size: 64, align: 64, offset: 1216)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1164, file: !758, line: 382, baseType: !974, size: 32, align: 32, offset: 1280)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1164, file: !758, line: 386, baseType: !974, size: 32, align: 32, offset: 1312)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1164, file: !758, line: 391, baseType: !974, size: 32, align: 32, offset: 1344)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1164, file: !758, line: 396, baseType: !968, size: 64, align: 64, offset: 1408)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1164, file: !758, line: 403, baseType: !1185, size: 512, align: 64, offset: 1472)
!1185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1033, size: 512, align: 64, elements: !1106)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1164, file: !758, line: 410, baseType: !974, size: 32, align: 32, offset: 1984)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1164, file: !758, line: 415, baseType: !974, size: 32, align: 32, offset: 2016)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1164, file: !758, line: 420, baseType: !974, size: 32, align: 32, offset: 2048)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1164, file: !758, line: 425, baseType: !974, size: 32, align: 32, offset: 2080)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1164, file: !758, line: 435, baseType: !1121, size: 64, align: 64, offset: 2112)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1164, file: !758, line: 440, baseType: !974, size: 32, align: 32, offset: 2176)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1164, file: !758, line: 445, baseType: !1033, size: 64, align: 64, offset: 2240)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1164, file: !758, line: 459, baseType: !1194, size: 512, align: 64, offset: 2304)
!1194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1132, size: 512, align: 64, elements: !1106)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1164, file: !758, line: 473, baseType: !1196, size: 64, align: 64, offset: 2816)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64, align: 64)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1164, file: !758, line: 477, baseType: !974, size: 32, align: 32, offset: 2880)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1164, file: !758, line: 479, baseType: !1199, size: 64, align: 64, offset: 2944)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 64, align: 64)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64, align: 64)
!1201 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !758, line: 207, baseType: !1202)
!1202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !758, line: 201, size: 320, align: 64, elements: !1203)
!1203 = !{!1204, !1205, !1206, !1207, !1212}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1202, file: !758, line: 202, baseType: !757, size: 32, align: 32)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1202, file: !758, line: 203, baseType: !1076, size: 64, align: 64, offset: 64)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1202, file: !758, line: 204, baseType: !974, size: 32, align: 32, offset: 128)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1202, file: !758, line: 205, baseType: !1208, size: 64, align: 64, offset: 192)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 64, align: 64)
!1209 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1210, line: 86, baseType: !1211)
!1210 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1211 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1210, line: 86, flags: DIFlagFwdDecl)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1202, file: !758, line: 206, baseType: !1132, size: 64, align: 64, offset: 256)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1164, file: !758, line: 480, baseType: !974, size: 32, align: 32, offset: 3008)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1164, file: !758, line: 505, baseType: !974, size: 32, align: 32, offset: 3040)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1164, file: !758, line: 512, baseType: !781, size: 32, align: 32, offset: 3072)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1164, file: !758, line: 514, baseType: !787, size: 32, align: 32, offset: 3104)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1164, file: !758, line: 516, baseType: !805, size: 32, align: 32, offset: 3136)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1164, file: !758, line: 523, baseType: !829, size: 32, align: 32, offset: 3168)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1164, file: !758, line: 525, baseType: !848, size: 32, align: 32, offset: 3200)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1164, file: !758, line: 532, baseType: !1121, size: 64, align: 64, offset: 3264)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1164, file: !758, line: 539, baseType: !1121, size: 64, align: 64, offset: 3328)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1164, file: !758, line: 547, baseType: !1121, size: 64, align: 64, offset: 3392)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1164, file: !758, line: 554, baseType: !1208, size: 64, align: 64, offset: 3456)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1164, file: !758, line: 563, baseType: !974, size: 32, align: 32, offset: 3520)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1164, file: !758, line: 572, baseType: !974, size: 32, align: 32, offset: 3552)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1164, file: !758, line: 581, baseType: !974, size: 32, align: 32, offset: 3584)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1164, file: !758, line: 588, baseType: !1228, size: 64, align: 64, offset: 3648)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 64, align: 64)
!1229 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !1034, line: 36, baseType: !1230)
!1230 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1164, file: !758, line: 593, baseType: !974, size: 32, align: 32, offset: 3712)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1164, file: !758, line: 596, baseType: !974, size: 32, align: 32, offset: 3744)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1164, file: !758, line: 599, baseType: !1132, size: 64, align: 64, offset: 3776)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1164, file: !758, line: 605, baseType: !1132, size: 64, align: 64, offset: 3840)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1164, file: !758, line: 616, baseType: !1132, size: 64, align: 64, offset: 3904)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1164, file: !758, line: 626, baseType: !1237, size: 64, align: 64, offset: 3968)
!1237 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1238, line: 216, baseType: !1035)
!1238 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1164, file: !758, line: 627, baseType: !1237, size: 64, align: 64, offset: 4032)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1164, file: !758, line: 628, baseType: !1237, size: 64, align: 64, offset: 4096)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1164, file: !758, line: 629, baseType: !1237, size: 64, align: 64, offset: 4160)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1164, file: !758, line: 645, baseType: !1132, size: 64, align: 64, offset: 4224)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64, align: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1005, file: !35, line: 3566, baseType: !1245, size: 64, align: 64, offset: 1408)
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 64, align: 64)
!1246 = !DISubroutineType(types: !1247)
!1247 = !{!974, !950, !968, !1243, !1127}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1005, file: !35, line: 3567, baseType: !1053, size: 64, align: 64, offset: 1472)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1005, file: !35, line: 3576, baseType: !1250, size: 64, align: 64, offset: 1536)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 64, align: 64)
!1251 = !DISubroutineType(types: !1252)
!1252 = !{!974, !950, !1161}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1005, file: !35, line: 3577, baseType: !1254, size: 64, align: 64, offset: 1600)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 64, align: 64)
!1255 = !DISubroutineType(types: !1256)
!1256 = !{!974, !950, !1127}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1005, file: !35, line: 3584, baseType: !1258, size: 64, align: 64, offset: 1664)
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 64, align: 64)
!1259 = !DISubroutineType(types: !1260)
!1260 = !{!974, !950, !1261}
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 64, align: 64)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1005, file: !35, line: 3589, baseType: !1263, size: 64, align: 64, offset: 1728)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 64, align: 64)
!1264 = !DISubroutineType(types: !1265)
!1265 = !{null, !950}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1005, file: !35, line: 3594, baseType: !974, size: 32, align: 32, offset: 1792)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1005, file: !35, line: 3600, baseType: !961, size: 64, align: 64, offset: 1856)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1005, file: !35, line: 3609, baseType: !1269, size: 64, align: 64, offset: 1920)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64, align: 64)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64, align: 64)
!1271 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1272)
!1272 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !35, line: 3609, flags: DIFlagFwdDecl)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !952, file: !35, line: 1566, baseType: !34, size: 32, align: 32, offset: 192)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !952, file: !35, line: 1581, baseType: !1086, size: 32, align: 32, offset: 224)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !952, file: !35, line: 1583, baseType: !968, size: 64, align: 64, offset: 256)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !952, file: !35, line: 1591, baseType: !1277, size: 64, align: 64, offset: 320)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64, align: 64)
!1278 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !35, line: 1532, flags: DIFlagFwdDecl)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !952, file: !35, line: 1598, baseType: !968, size: 64, align: 64, offset: 384)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !952, file: !35, line: 1606, baseType: !1121, size: 64, align: 64, offset: 448)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !952, file: !35, line: 1614, baseType: !974, size: 32, align: 32, offset: 512)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !952, file: !35, line: 1622, baseType: !974, size: 32, align: 32, offset: 544)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !952, file: !35, line: 1628, baseType: !974, size: 32, align: 32, offset: 576)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !952, file: !35, line: 1636, baseType: !974, size: 32, align: 32, offset: 608)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !952, file: !35, line: 1643, baseType: !974, size: 32, align: 32, offset: 640)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !952, file: !35, line: 1657, baseType: !1076, size: 64, align: 64, offset: 704)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !952, file: !35, line: 1658, baseType: !974, size: 32, align: 32, offset: 768)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !952, file: !35, line: 1679, baseType: !1015, size: 64, align: 32, offset: 800)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !952, file: !35, line: 1688, baseType: !974, size: 32, align: 32, offset: 864)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !952, file: !35, line: 1712, baseType: !974, size: 32, align: 32, offset: 896)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !952, file: !35, line: 1729, baseType: !974, size: 32, align: 32, offset: 928)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !952, file: !35, line: 1729, baseType: !974, size: 32, align: 32, offset: 960)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !952, file: !35, line: 1744, baseType: !974, size: 32, align: 32, offset: 992)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !952, file: !35, line: 1744, baseType: !974, size: 32, align: 32, offset: 1024)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !952, file: !35, line: 1751, baseType: !974, size: 32, align: 32, offset: 1056)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !952, file: !35, line: 1766, baseType: !494, size: 32, align: 32, offset: 1088)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !952, file: !35, line: 1791, baseType: !1298, size: 64, align: 64, offset: 1152)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64, align: 64)
!1299 = !DISubroutineType(types: !1300)
!1300 = !{null, !1301, !1161, !1243, !974, !974, !974}
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 64, align: 64)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !952, file: !35, line: 1808, baseType: !1303, size: 64, align: 64, offset: 1216)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 64, align: 64)
!1304 = !DISubroutineType(types: !1305)
!1305 = !{!494, !1301, !1022}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !952, file: !35, line: 1816, baseType: !974, size: 32, align: 32, offset: 1280)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !952, file: !35, line: 1825, baseType: !902, size: 32, align: 32, offset: 1312)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !952, file: !35, line: 1830, baseType: !974, size: 32, align: 32, offset: 1344)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !952, file: !35, line: 1838, baseType: !902, size: 32, align: 32, offset: 1376)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !952, file: !35, line: 1846, baseType: !974, size: 32, align: 32, offset: 1408)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !952, file: !35, line: 1851, baseType: !974, size: 32, align: 32, offset: 1440)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !952, file: !35, line: 1861, baseType: !902, size: 32, align: 32, offset: 1472)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !952, file: !35, line: 1868, baseType: !902, size: 32, align: 32, offset: 1504)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !952, file: !35, line: 1875, baseType: !902, size: 32, align: 32, offset: 1536)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !952, file: !35, line: 1882, baseType: !902, size: 32, align: 32, offset: 1568)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !952, file: !35, line: 1889, baseType: !902, size: 32, align: 32, offset: 1600)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !952, file: !35, line: 1896, baseType: !902, size: 32, align: 32, offset: 1632)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !952, file: !35, line: 1903, baseType: !902, size: 32, align: 32, offset: 1664)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !952, file: !35, line: 1910, baseType: !974, size: 32, align: 32, offset: 1696)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !952, file: !35, line: 1915, baseType: !974, size: 32, align: 32, offset: 1728)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !952, file: !35, line: 1926, baseType: !1243, size: 64, align: 64, offset: 1792)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !952, file: !35, line: 1935, baseType: !1015, size: 64, align: 32, offset: 1856)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !952, file: !35, line: 1942, baseType: !974, size: 32, align: 32, offset: 1920)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !952, file: !35, line: 1948, baseType: !974, size: 32, align: 32, offset: 1952)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !952, file: !35, line: 1954, baseType: !974, size: 32, align: 32, offset: 1984)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !952, file: !35, line: 1960, baseType: !974, size: 32, align: 32, offset: 2016)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !952, file: !35, line: 1984, baseType: !974, size: 32, align: 32, offset: 2048)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !952, file: !35, line: 1991, baseType: !974, size: 32, align: 32, offset: 2080)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !952, file: !35, line: 1996, baseType: !974, size: 32, align: 32, offset: 2112)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !952, file: !35, line: 2004, baseType: !974, size: 32, align: 32, offset: 2144)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !952, file: !35, line: 2011, baseType: !974, size: 32, align: 32, offset: 2176)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !952, file: !35, line: 2018, baseType: !974, size: 32, align: 32, offset: 2208)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !952, file: !35, line: 2027, baseType: !974, size: 32, align: 32, offset: 2240)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !952, file: !35, line: 2034, baseType: !974, size: 32, align: 32, offset: 2272)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !952, file: !35, line: 2044, baseType: !974, size: 32, align: 32, offset: 2304)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !952, file: !35, line: 2054, baseType: !1337, size: 64, align: 64, offset: 2368)
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64, align: 64)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !952, file: !35, line: 2061, baseType: !1337, size: 64, align: 64, offset: 2432)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !952, file: !35, line: 2066, baseType: !974, size: 32, align: 32, offset: 2496)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !952, file: !35, line: 2070, baseType: !974, size: 32, align: 32, offset: 2528)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !952, file: !35, line: 2078, baseType: !974, size: 32, align: 32, offset: 2560)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !952, file: !35, line: 2085, baseType: !974, size: 32, align: 32, offset: 2592)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !952, file: !35, line: 2092, baseType: !974, size: 32, align: 32, offset: 2624)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !952, file: !35, line: 2099, baseType: !974, size: 32, align: 32, offset: 2656)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !952, file: !35, line: 2106, baseType: !974, size: 32, align: 32, offset: 2688)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !952, file: !35, line: 2113, baseType: !974, size: 32, align: 32, offset: 2720)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !952, file: !35, line: 2120, baseType: !974, size: 32, align: 32, offset: 2752)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !952, file: !35, line: 2125, baseType: !974, size: 32, align: 32, offset: 2784)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !952, file: !35, line: 2133, baseType: !974, size: 32, align: 32, offset: 2816)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !952, file: !35, line: 2140, baseType: !974, size: 32, align: 32, offset: 2848)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !952, file: !35, line: 2145, baseType: !974, size: 32, align: 32, offset: 2880)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !952, file: !35, line: 2153, baseType: !974, size: 32, align: 32, offset: 2912)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !952, file: !35, line: 2158, baseType: !974, size: 32, align: 32, offset: 2944)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !952, file: !35, line: 2166, baseType: !787, size: 32, align: 32, offset: 2976)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !952, file: !35, line: 2173, baseType: !805, size: 32, align: 32, offset: 3008)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !952, file: !35, line: 2180, baseType: !829, size: 32, align: 32, offset: 3040)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !952, file: !35, line: 2187, baseType: !781, size: 32, align: 32, offset: 3072)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !952, file: !35, line: 2194, baseType: !848, size: 32, align: 32, offset: 3104)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !952, file: !35, line: 2203, baseType: !974, size: 32, align: 32, offset: 3136)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !952, file: !35, line: 2209, baseType: !858, size: 32, align: 32, offset: 3168)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !952, file: !35, line: 2212, baseType: !974, size: 32, align: 32, offset: 3200)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !952, file: !35, line: 2213, baseType: !974, size: 32, align: 32, offset: 3232)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !952, file: !35, line: 2220, baseType: !694, size: 32, align: 32, offset: 3264)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !952, file: !35, line: 2232, baseType: !974, size: 32, align: 32, offset: 3296)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !952, file: !35, line: 2243, baseType: !974, size: 32, align: 32, offset: 3328)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !952, file: !35, line: 2249, baseType: !974, size: 32, align: 32, offset: 3360)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !952, file: !35, line: 2256, baseType: !974, size: 32, align: 32, offset: 3392)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !952, file: !35, line: 2263, baseType: !1033, size: 64, align: 64, offset: 3456)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !952, file: !35, line: 2270, baseType: !1033, size: 64, align: 64, offset: 3520)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !952, file: !35, line: 2277, baseType: !866, size: 32, align: 32, offset: 3584)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !952, file: !35, line: 2285, baseType: !694, size: 32, align: 32, offset: 3616)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !952, file: !35, line: 2367, baseType: !1373, size: 64, align: 64, offset: 3648)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 64, align: 64)
!1374 = !DISubroutineType(types: !1375)
!1375 = !{!974, !1301, !1261, !974}
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !952, file: !35, line: 2383, baseType: !974, size: 32, align: 32, offset: 3712)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !952, file: !35, line: 2386, baseType: !902, size: 32, align: 32, offset: 3744)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !952, file: !35, line: 2387, baseType: !902, size: 32, align: 32, offset: 3776)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !952, file: !35, line: 2394, baseType: !974, size: 32, align: 32, offset: 3808)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !952, file: !35, line: 2401, baseType: !974, size: 32, align: 32, offset: 3840)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !952, file: !35, line: 2408, baseType: !974, size: 32, align: 32, offset: 3872)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !952, file: !35, line: 2415, baseType: !974, size: 32, align: 32, offset: 3904)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !952, file: !35, line: 2422, baseType: !974, size: 32, align: 32, offset: 3936)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !952, file: !35, line: 2423, baseType: !1385, size: 64, align: 64, offset: 3968)
!1385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1386, size: 64, align: 64)
!1386 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !35, line: 831, baseType: !1387)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !35, line: 826, size: 128, align: 32, elements: !1388)
!1388 = !{!1389, !1390, !1391, !1392}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1387, file: !35, line: 827, baseType: !974, size: 32, align: 32)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1387, file: !35, line: 828, baseType: !974, size: 32, align: 32, offset: 32)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1387, file: !35, line: 829, baseType: !974, size: 32, align: 32, offset: 64)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1387, file: !35, line: 830, baseType: !902, size: 32, align: 32, offset: 96)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !952, file: !35, line: 2430, baseType: !1121, size: 64, align: 64, offset: 4032)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !952, file: !35, line: 2437, baseType: !1121, size: 64, align: 64, offset: 4096)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !952, file: !35, line: 2444, baseType: !902, size: 32, align: 32, offset: 4160)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !952, file: !35, line: 2451, baseType: !902, size: 32, align: 32, offset: 4192)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !952, file: !35, line: 2458, baseType: !974, size: 32, align: 32, offset: 4224)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !952, file: !35, line: 2469, baseType: !974, size: 32, align: 32, offset: 4256)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !952, file: !35, line: 2475, baseType: !974, size: 32, align: 32, offset: 4288)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !952, file: !35, line: 2481, baseType: !974, size: 32, align: 32, offset: 4320)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !952, file: !35, line: 2485, baseType: !974, size: 32, align: 32, offset: 4352)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !952, file: !35, line: 2489, baseType: !974, size: 32, align: 32, offset: 4384)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !952, file: !35, line: 2493, baseType: !974, size: 32, align: 32, offset: 4416)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !952, file: !35, line: 2501, baseType: !974, size: 32, align: 32, offset: 4448)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !952, file: !35, line: 2506, baseType: !974, size: 32, align: 32, offset: 4480)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !952, file: !35, line: 2510, baseType: !974, size: 32, align: 32, offset: 4512)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !952, file: !35, line: 2514, baseType: !1121, size: 64, align: 64, offset: 4544)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !952, file: !35, line: 2528, baseType: !1409, size: 64, align: 64, offset: 4608)
!1409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 64, align: 64)
!1410 = !DISubroutineType(types: !1411)
!1411 = !{null, !1301, !968, !974, !974}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !952, file: !35, line: 2534, baseType: !974, size: 32, align: 32, offset: 4672)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !952, file: !35, line: 2545, baseType: !974, size: 32, align: 32, offset: 4704)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !952, file: !35, line: 2547, baseType: !974, size: 32, align: 32, offset: 4736)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !952, file: !35, line: 2549, baseType: !974, size: 32, align: 32, offset: 4768)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !952, file: !35, line: 2551, baseType: !974, size: 32, align: 32, offset: 4800)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !952, file: !35, line: 2553, baseType: !974, size: 32, align: 32, offset: 4832)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !952, file: !35, line: 2555, baseType: !974, size: 32, align: 32, offset: 4864)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !952, file: !35, line: 2557, baseType: !974, size: 32, align: 32, offset: 4896)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !952, file: !35, line: 2559, baseType: !974, size: 32, align: 32, offset: 4928)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !952, file: !35, line: 2563, baseType: !974, size: 32, align: 32, offset: 4960)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !952, file: !35, line: 2571, baseType: !1117, size: 64, align: 64, offset: 4992)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !952, file: !35, line: 2579, baseType: !1117, size: 64, align: 64, offset: 5056)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !952, file: !35, line: 2586, baseType: !974, size: 32, align: 32, offset: 5120)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !952, file: !35, line: 2615, baseType: !974, size: 32, align: 32, offset: 5152)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !952, file: !35, line: 2627, baseType: !974, size: 32, align: 32, offset: 5184)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !952, file: !35, line: 2637, baseType: !974, size: 32, align: 32, offset: 5216)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !952, file: !35, line: 2681, baseType: !974, size: 32, align: 32, offset: 5248)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !952, file: !35, line: 2709, baseType: !1121, size: 64, align: 64, offset: 5312)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !952, file: !35, line: 2716, baseType: !1431, size: 64, align: 64, offset: 5376)
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1432, size: 64, align: 64)
!1432 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1433)
!1433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !35, line: 3636, size: 896, align: 64, elements: !1434)
!1434 = !{!1435, !1436, !1437, !1438, !1439, !1440, !1441, !1447, !1451, !1452, !1453, !1454, !1460, !1461, !1462, !1463, !1464}
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1433, file: !35, line: 3642, baseType: !961, size: 64, align: 64)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1433, file: !35, line: 3649, baseType: !24, size: 32, align: 32, offset: 64)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1433, file: !35, line: 3656, baseType: !34, size: 32, align: 32, offset: 96)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1433, file: !35, line: 3663, baseType: !494, size: 32, align: 32, offset: 128)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1433, file: !35, line: 3669, baseType: !974, size: 32, align: 32, offset: 160)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1433, file: !35, line: 3682, baseType: !1258, size: 64, align: 64, offset: 192)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1433, file: !35, line: 3698, baseType: !1442, size: 64, align: 64, offset: 256)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 64, align: 64)
!1443 = !DISubroutineType(types: !1444)
!1444 = !{!974, !950, !1445, !1085}
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64, align: 64)
!1446 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1037)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1433, file: !35, line: 3712, baseType: !1448, size: 64, align: 64, offset: 320)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 64, align: 64)
!1449 = !DISubroutineType(types: !1450)
!1450 = !{!974, !950, !974, !1445, !1085}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1433, file: !35, line: 3726, baseType: !1442, size: 64, align: 64, offset: 384)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1433, file: !35, line: 3737, baseType: !1053, size: 64, align: 64, offset: 448)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1433, file: !35, line: 3746, baseType: !974, size: 32, align: 32, offset: 512)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1433, file: !35, line: 3757, baseType: !1455, size: 64, align: 64, offset: 576)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 64, align: 64)
!1456 = !DISubroutineType(types: !1457)
!1457 = !{null, !1458}
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 64, align: 64)
!1459 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !35, line: 3617, flags: DIFlagFwdDecl)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1433, file: !35, line: 3766, baseType: !1053, size: 64, align: 64, offset: 640)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1433, file: !35, line: 3774, baseType: !1053, size: 64, align: 64, offset: 704)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1433, file: !35, line: 3780, baseType: !974, size: 32, align: 32, offset: 768)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1433, file: !35, line: 3785, baseType: !974, size: 32, align: 32, offset: 800)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1433, file: !35, line: 3795, baseType: !1465, size: 64, align: 64, offset: 832)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64, align: 64)
!1466 = !DISubroutineType(types: !1467)
!1467 = !{!974, !950, !1132}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !952, file: !35, line: 2728, baseType: !968, size: 64, align: 64, offset: 5440)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !952, file: !35, line: 2735, baseType: !1185, size: 512, align: 64, offset: 5504)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !952, file: !35, line: 2742, baseType: !974, size: 32, align: 32, offset: 6016)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !952, file: !35, line: 2755, baseType: !974, size: 32, align: 32, offset: 6048)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !952, file: !35, line: 2776, baseType: !974, size: 32, align: 32, offset: 6080)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !952, file: !35, line: 2783, baseType: !974, size: 32, align: 32, offset: 6112)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !952, file: !35, line: 2791, baseType: !974, size: 32, align: 32, offset: 6144)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !952, file: !35, line: 2802, baseType: !1261, size: 64, align: 64, offset: 6208)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !952, file: !35, line: 2811, baseType: !974, size: 32, align: 32, offset: 6272)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !952, file: !35, line: 2821, baseType: !974, size: 32, align: 32, offset: 6304)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !952, file: !35, line: 2830, baseType: !974, size: 32, align: 32, offset: 6336)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !952, file: !35, line: 2840, baseType: !974, size: 32, align: 32, offset: 6368)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !952, file: !35, line: 2851, baseType: !1481, size: 64, align: 64, offset: 6400)
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 64, align: 64)
!1482 = !DISubroutineType(types: !1483)
!1483 = !{!974, !1301, !1484, !968, !1243, !974, !974}
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 64, align: 64)
!1485 = !DISubroutineType(types: !1486)
!1486 = !{!974, !1301, !968}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !952, file: !35, line: 2871, baseType: !1488, size: 64, align: 64, offset: 6464)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 64, align: 64)
!1489 = !DISubroutineType(types: !1490)
!1490 = !{!974, !1301, !1491, !968, !1243, !974}
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 64, align: 64)
!1492 = !DISubroutineType(types: !1493)
!1493 = !{!974, !1301, !968, !974, !974}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !952, file: !35, line: 2878, baseType: !974, size: 32, align: 32, offset: 6528)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !952, file: !35, line: 2885, baseType: !974, size: 32, align: 32, offset: 6560)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !952, file: !35, line: 3005, baseType: !974, size: 32, align: 32, offset: 6592)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !952, file: !35, line: 3013, baseType: !878, size: 32, align: 32, offset: 6624)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !952, file: !35, line: 3020, baseType: !878, size: 32, align: 32, offset: 6656)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !952, file: !35, line: 3027, baseType: !878, size: 32, align: 32, offset: 6688)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !952, file: !35, line: 3037, baseType: !1076, size: 64, align: 64, offset: 6720)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !952, file: !35, line: 3038, baseType: !974, size: 32, align: 32, offset: 6784)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !952, file: !35, line: 3050, baseType: !1033, size: 64, align: 64, offset: 6848)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !952, file: !35, line: 3065, baseType: !974, size: 32, align: 32, offset: 6912)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !952, file: !35, line: 3083, baseType: !974, size: 32, align: 32, offset: 6944)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !952, file: !35, line: 3092, baseType: !1015, size: 64, align: 32, offset: 6976)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !952, file: !35, line: 3099, baseType: !494, size: 32, align: 32, offset: 7040)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !952, file: !35, line: 3106, baseType: !1015, size: 64, align: 32, offset: 7072)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !952, file: !35, line: 3113, baseType: !1509, size: 64, align: 64, offset: 7168)
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 64, align: 64)
!1510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1511)
!1511 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !35, line: 740, baseType: !1512)
!1512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !35, line: 712, size: 384, align: 64, elements: !1513)
!1513 = !{!1514, !1515, !1516, !1517, !1518, !1519, !1522}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1512, file: !35, line: 713, baseType: !34, size: 32, align: 32)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1512, file: !35, line: 714, baseType: !24, size: 32, align: 32, offset: 32)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1512, file: !35, line: 720, baseType: !961, size: 64, align: 64, offset: 64)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1512, file: !35, line: 724, baseType: !961, size: 64, align: 64, offset: 128)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1512, file: !35, line: 728, baseType: !974, size: 32, align: 32, offset: 192)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1512, file: !35, line: 734, baseType: !1520, size: 64, align: 64, offset: 256)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 64, align: 64)
!1521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !961)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1512, file: !35, line: 739, baseType: !1523, size: 64, align: 64, offset: 320)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 64, align: 64)
!1524 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1044)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !952, file: !35, line: 3129, baseType: !1121, size: 64, align: 64, offset: 7232)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !952, file: !35, line: 3130, baseType: !1121, size: 64, align: 64, offset: 7296)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !952, file: !35, line: 3131, baseType: !1121, size: 64, align: 64, offset: 7360)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !952, file: !35, line: 3132, baseType: !1121, size: 64, align: 64, offset: 7424)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !952, file: !35, line: 3139, baseType: !1117, size: 64, align: 64, offset: 7488)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !952, file: !35, line: 3147, baseType: !974, size: 32, align: 32, offset: 7552)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !952, file: !35, line: 3165, baseType: !974, size: 32, align: 32, offset: 7584)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !952, file: !35, line: 3172, baseType: !974, size: 32, align: 32, offset: 7616)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !952, file: !35, line: 3180, baseType: !974, size: 32, align: 32, offset: 7648)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !952, file: !35, line: 3191, baseType: !1337, size: 64, align: 64, offset: 7680)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !952, file: !35, line: 3199, baseType: !1076, size: 64, align: 64, offset: 7744)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !952, file: !35, line: 3207, baseType: !1117, size: 64, align: 64, offset: 7808)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !952, file: !35, line: 3214, baseType: !1086, size: 32, align: 32, offset: 7872)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !952, file: !35, line: 3224, baseType: !1150, size: 64, align: 64, offset: 7936)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !952, file: !35, line: 3225, baseType: !974, size: 32, align: 32, offset: 8000)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !952, file: !35, line: 3249, baseType: !1132, size: 64, align: 64, offset: 8064)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !952, file: !35, line: 3256, baseType: !974, size: 32, align: 32, offset: 8128)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !952, file: !35, line: 3271, baseType: !974, size: 32, align: 32, offset: 8160)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !952, file: !35, line: 3279, baseType: !1121, size: 64, align: 64, offset: 8192)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !952, file: !35, line: 3301, baseType: !1132, size: 64, align: 64, offset: 8256)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !952, file: !35, line: 3310, baseType: !974, size: 32, align: 32, offset: 8320)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !952, file: !35, line: 3337, baseType: !974, size: 32, align: 32, offset: 8352)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !952, file: !35, line: 3351, baseType: !974, size: 32, align: 32, offset: 8384)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !952, file: !35, line: 3359, baseType: !974, size: 32, align: 32, offset: 8416)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !947, file: !888, line: 68, baseType: !1550, size: 32, align: 32, offset: 64)
!1550 = !DIDerivedType(tag: DW_TAG_typedef, name: "SiprMode", file: !888, line: 54, baseType: !887)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "past_pitch_gain", scope: !947, file: !888, line: 70, baseType: !902, size: 32, align: 32, offset: 96)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "lsf_history", scope: !947, file: !888, line: 71, baseType: !1553, size: 512, align: 32, offset: 128)
!1553 = !DICompositeType(tag: DW_TAG_array_type, baseType: !902, size: 512, align: 32, elements: !926)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "excitation", scope: !947, file: !888, line: 73, baseType: !1555, size: 14464, align: 32, offset: 640)
!1555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !902, size: 14464, align: 32, elements: !1556)
!1556 = !{!1557}
!1557 = !DISubrange(count: 452)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "synth_buf", scope: !947, file: !888, line: 75, baseType: !1559, size: 8192, align: 32, offset: 15104)
!1559 = !DICompositeType(tag: DW_TAG_array_type, baseType: !902, size: 8192, align: 32, elements: !1560)
!1560 = !{!913}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "lsp_history", scope: !947, file: !888, line: 77, baseType: !1562, size: 320, align: 32, offset: 23296)
!1562 = !DICompositeType(tag: DW_TAG_array_type, baseType: !902, size: 320, align: 32, elements: !1563)
!1563 = !{!1564}
!1564 = !DISubrange(count: 10)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "gain_mem", scope: !947, file: !888, line: 78, baseType: !902, size: 32, align: 32, offset: 23616)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "energy_history", scope: !947, file: !888, line: 79, baseType: !1567, size: 128, align: 32, offset: 23648)
!1567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !902, size: 128, align: 32, elements: !1112)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "highpass_filt_mem", scope: !947, file: !888, line: 80, baseType: !1569, size: 64, align: 32, offset: 23776)
!1569 = !DICompositeType(tag: DW_TAG_array_type, baseType: !902, size: 64, align: 32, elements: !922)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "postfilter_mem", scope: !947, file: !888, line: 81, baseType: !1571, size: 4896, align: 32, offset: 23840)
!1571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !902, size: 4896, align: 32, elements: !1572)
!1572 = !{!1573}
!1573 = !DISubrange(count: 153)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "tilt_mem", scope: !947, file: !888, line: 84, baseType: !902, size: 32, align: 32, offset: 28736)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "postfilter_agc", scope: !947, file: !888, line: 85, baseType: !902, size: 32, align: 32, offset: 28768)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "postfilter_mem5k0", scope: !947, file: !888, line: 86, baseType: !1571, size: 4896, align: 32, offset: 28800)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "postfilter_syn5k0", scope: !947, file: !888, line: 87, baseType: !1578, size: 8000, align: 32, offset: 33696)
!1578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !902, size: 8000, align: 32, elements: !1579)
!1579 = !{!1580}
!1580 = !DISubrange(count: 250)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "pitch_lag_prev", scope: !947, file: !888, line: 90, baseType: !974, size: 32, align: 32, offset: 41696)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "iir_mem", scope: !947, file: !888, line: 91, baseType: !1583, size: 544, align: 32, offset: 41728)
!1583 = !DICompositeType(tag: DW_TAG_array_type, baseType: !902, size: 544, align: 32, elements: !1584)
!1584 = !{!1585}
!1585 = !DISubrange(count: 17)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "filt_buf", scope: !947, file: !888, line: 92, baseType: !1587, size: 1088, align: 32, offset: 42272)
!1587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !902, size: 1088, align: 32, elements: !1588)
!1588 = !{!923, !1585}
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "filt_mem", scope: !947, file: !888, line: 93, baseType: !1590, size: 128, align: 64, offset: 43392)
!1590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1591, size: 128, align: 64, elements: !922)
!1591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 64, align: 64)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "mem_preemph", scope: !947, file: !888, line: 94, baseType: !1553, size: 512, align: 32, offset: 43520)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "synth", scope: !947, file: !888, line: 95, baseType: !1553, size: 512, align: 32, offset: 44032)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "lsp_history_16k", scope: !947, file: !888, line: 96, baseType: !1595, size: 1024, align: 64, offset: 44544)
!1595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1596, size: 1024, align: 64, elements: !926)
!1596 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "decode_frame", scope: !947, file: !888, line: 98, baseType: !1598, size: 64, align: 64, offset: 45568)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 64, align: 64)
!1599 = !DISubroutineType(types: !1600)
!1600 = !{null, !1601, !1602, !1591}
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64, align: 64)
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 64, align: 64)
!1603 = !DIDerivedType(tag: DW_TAG_typedef, name: "SiprParameters", file: !888, line: 63, baseType: !1604)
!1604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SiprParameters", file: !888, line: 56, size: 1472, align: 32, elements: !1605)
!1605 = !{!1606, !1607, !1609, !1610, !1611, !1616}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "ma_pred_switch", scope: !1604, file: !888, line: 57, baseType: !974, size: 32, align: 32)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "vq_indexes", scope: !1604, file: !888, line: 58, baseType: !1608, size: 160, align: 32, offset: 32)
!1608 = !DICompositeType(tag: DW_TAG_array_type, baseType: !974, size: 160, align: 32, elements: !903)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "pitch_delay", scope: !1604, file: !888, line: 59, baseType: !1608, size: 160, align: 32, offset: 192)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "gp_index", scope: !1604, file: !888, line: 60, baseType: !1608, size: 160, align: 32, offset: 352)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "fc_indexes", scope: !1604, file: !888, line: 61, baseType: !1612, size: 800, align: 16, offset: 512)
!1612 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1613, size: 800, align: 16, elements: !1615)
!1613 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !1034, line: 37, baseType: !1614)
!1614 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!1615 = !{!904, !1564}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "gc_index", scope: !1604, file: !888, line: 62, baseType: !1608, size: 160, align: 32, offset: 1312)
!1617 = !{}
!1618 = !DILocalVariable(name: "ctx", arg: 1, scope: !941, file: !942, line: 176, type: !945)
!1619 = !DIExpression()
!1620 = !DILocation(line: 176, column: 44, scope: !941)
!1621 = !DILocalVariable(name: "params", arg: 2, scope: !941, file: !942, line: 176, type: !1602)
!1622 = !DILocation(line: 176, column: 65, scope: !941)
!1623 = !DILocalVariable(name: "out_data", arg: 3, scope: !941, file: !942, line: 177, type: !1591)
!1624 = !DILocation(line: 177, column: 38, scope: !941)
!1625 = !DILocalVariable(name: "frame_size", scope: !941, file: !942, line: 179, type: !974)
!1626 = !DILocation(line: 179, column: 9, scope: !941)
!1627 = !DILocalVariable(name: "synth", scope: !941, file: !942, line: 180, type: !1591)
!1628 = !DILocation(line: 180, column: 12, scope: !941)
!1629 = !DILocation(line: 180, column: 20, scope: !941)
!1630 = !DILocation(line: 180, column: 25, scope: !941)
!1631 = !DILocation(line: 180, column: 35, scope: !941)
!1632 = !DILocalVariable(name: "lsf_new", scope: !941, file: !942, line: 181, type: !1553)
!1633 = !DILocation(line: 181, column: 11, scope: !941)
!1634 = !DILocalVariable(name: "lsp_new", scope: !941, file: !942, line: 182, type: !1595)
!1635 = !DILocation(line: 182, column: 12, scope: !941)
!1636 = !DILocalVariable(name: "Az", scope: !941, file: !942, line: 183, type: !1637)
!1637 = !DICompositeType(tag: DW_TAG_array_type, baseType: !902, size: 1024, align: 32, elements: !1638)
!1638 = !{!923, !927}
!1639 = !DILocation(line: 183, column: 11, scope: !941)
!1640 = !DILocalVariable(name: "fixed_vector", scope: !941, file: !942, line: 184, type: !1641)
!1641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !902, size: 2560, align: 32, elements: !1642)
!1642 = !{!1643}
!1643 = !DISubrange(count: 80)
!1644 = !DILocation(line: 184, column: 11, scope: !941)
!1645 = !DILocalVariable(name: "pitch_fac", scope: !941, file: !942, line: 185, type: !902)
!1646 = !DILocation(line: 185, column: 11, scope: !941)
!1647 = !DILocalVariable(name: "gain_code", scope: !941, file: !942, line: 185, type: !902)
!1648 = !DILocation(line: 185, column: 22, scope: !941)
!1649 = !DILocalVariable(name: "i", scope: !941, file: !942, line: 187, type: !974)
!1650 = !DILocation(line: 187, column: 9, scope: !941)
!1651 = !DILocalVariable(name: "pitch_delay_3x", scope: !941, file: !942, line: 188, type: !974)
!1652 = !DILocation(line: 188, column: 9, scope: !941)
!1653 = !DILocalVariable(name: "excitation", scope: !941, file: !942, line: 190, type: !1591)
!1654 = !DILocation(line: 190, column: 12, scope: !941)
!1655 = !DILocation(line: 190, column: 25, scope: !941)
!1656 = !DILocation(line: 190, column: 30, scope: !941)
!1657 = !DILocation(line: 190, column: 41, scope: !941)
!1658 = !DILocation(line: 192, column: 23, scope: !941)
!1659 = !DILocation(line: 192, column: 28, scope: !941)
!1660 = !DILocation(line: 192, column: 41, scope: !941)
!1661 = !DILocation(line: 192, column: 50, scope: !941)
!1662 = !DILocation(line: 192, column: 58, scope: !941)
!1663 = !DILocation(line: 193, column: 23, scope: !941)
!1664 = !DILocation(line: 193, column: 31, scope: !941)
!1665 = !DILocation(line: 192, column: 5, scope: !941)
!1666 = !DILocation(line: 195, column: 25, scope: !941)
!1667 = !DILocation(line: 195, column: 5, scope: !941)
!1668 = !DILocation(line: 197, column: 13, scope: !941)
!1669 = !DILocation(line: 197, column: 22, scope: !941)
!1670 = !DILocation(line: 197, column: 5, scope: !941)
!1671 = !DILocation(line: 199, column: 22, scope: !941)
!1672 = !DILocation(line: 199, column: 29, scope: !941)
!1673 = !DILocation(line: 199, column: 36, scope: !941)
!1674 = !DILocation(line: 199, column: 45, scope: !941)
!1675 = !DILocation(line: 199, column: 50, scope: !941)
!1676 = !DILocation(line: 199, column: 5, scope: !941)
!1677 = !DILocation(line: 201, column: 12, scope: !941)
!1678 = !DILocation(line: 201, column: 17, scope: !941)
!1679 = !DILocation(line: 201, column: 5, scope: !941)
!1680 = !DILocation(line: 203, column: 12, scope: !941)
!1681 = !DILocation(line: 203, column: 18, scope: !941)
!1682 = !DILocation(line: 203, column: 5, scope: !941)
!1683 = !DILocation(line: 203, column: 24, scope: !941)
!1684 = !DILocation(line: 203, column: 29, scope: !941)
!1685 = !DILocation(line: 206, column: 12, scope: !1686)
!1686 = distinct !DILexicalBlock(scope: !941, file: !942, line: 206, column: 5)
!1687 = !DILocation(line: 206, column: 10, scope: !1686)
!1688 = !DILocation(line: 206, column: 17, scope: !1689)
!1689 = !DILexicalBlockFile(scope: !1690, file: !942, discriminator: 1)
!1690 = distinct !DILexicalBlock(scope: !1686, file: !942, line: 206, column: 5)
!1691 = !DILocation(line: 206, column: 19, scope: !1689)
!1692 = !DILocation(line: 206, column: 5, scope: !1689)
!1693 = !DILocalVariable(name: "i_subfr", scope: !1694, file: !942, line: 207, type: !974)
!1694 = distinct !DILexicalBlock(scope: !1690, file: !942, line: 206, column: 29)
!1695 = !DILocation(line: 207, column: 13, scope: !1694)
!1696 = !DILocation(line: 207, column: 23, scope: !1694)
!1697 = !DILocation(line: 207, column: 25, scope: !1694)
!1698 = !DILocalVariable(name: "f", scope: !1694, file: !942, line: 208, type: !1699)
!1699 = !DIDerivedType(tag: DW_TAG_typedef, name: "AMRFixed", file: !1700, line: 60, baseType: !1701)
!1700 = !DIFile(filename: "libavcodec/acelp_vectors.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AMRFixed", file: !1700, line: 53, size: 768, align: 32, elements: !1702)
!1702 = !{!1703, !1704, !1706, !1707, !1708, !1709}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !1701, file: !1700, line: 54, baseType: !974, size: 32, align: 32)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1701, file: !1700, line: 55, baseType: !1705, size: 320, align: 32, offset: 32)
!1705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !974, size: 320, align: 32, elements: !1563)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1701, file: !1700, line: 56, baseType: !1562, size: 320, align: 32, offset: 352)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "no_repeat_mask", scope: !1701, file: !1700, line: 57, baseType: !974, size: 32, align: 32, offset: 672)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "pitch_lag", scope: !1701, file: !1700, line: 58, baseType: !974, size: 32, align: 32, offset: 704)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "pitch_fac", scope: !1701, file: !1700, line: 59, baseType: !902, size: 32, align: 32, offset: 736)
!1710 = !DILocation(line: 208, column: 18, scope: !1694)
!1711 = !DILocalVariable(name: "gain_corr_factor", scope: !1694, file: !942, line: 209, type: !902)
!1712 = !DILocation(line: 209, column: 15, scope: !1694)
!1713 = !DILocalVariable(name: "pitch_delay_int", scope: !1694, file: !942, line: 210, type: !974)
!1714 = !DILocation(line: 210, column: 13, scope: !1694)
!1715 = !DILocalVariable(name: "pitch_delay_frac", scope: !1694, file: !942, line: 211, type: !974)
!1716 = !DILocation(line: 211, column: 13, scope: !1694)
!1717 = !DILocation(line: 213, column: 14, scope: !1718)
!1718 = distinct !DILexicalBlock(scope: !1694, file: !942, line: 213, column: 13)
!1719 = !DILocation(line: 213, column: 13, scope: !1694)
!1720 = !DILocation(line: 214, column: 65, scope: !1721)
!1721 = distinct !DILexicalBlock(scope: !1718, file: !942, line: 213, column: 17)
!1722 = !DILocation(line: 214, column: 45, scope: !1721)
!1723 = !DILocation(line: 214, column: 53, scope: !1721)
!1724 = !DILocation(line: 214, column: 30, scope: !1721)
!1725 = !DILocation(line: 214, column: 28, scope: !1721)
!1726 = !DILocation(line: 215, column: 9, scope: !1721)
!1727 = !DILocation(line: 216, column: 65, scope: !1718)
!1728 = !DILocation(line: 216, column: 45, scope: !1718)
!1729 = !DILocation(line: 216, column: 53, scope: !1718)
!1730 = !DILocation(line: 218, column: 45, scope: !1718)
!1731 = !DILocation(line: 218, column: 50, scope: !1718)
!1732 = !DILocation(line: 216, column: 30, scope: !1718)
!1733 = !DILocation(line: 216, column: 28, scope: !1718)
!1734 = !DILocation(line: 220, column: 56, scope: !1694)
!1735 = !DILocation(line: 220, column: 39, scope: !1694)
!1736 = !DILocation(line: 220, column: 47, scope: !1694)
!1737 = !DILocation(line: 220, column: 21, scope: !1694)
!1738 = !DILocation(line: 220, column: 19, scope: !1694)
!1739 = !DILocation(line: 221, column: 25, scope: !1694)
!1740 = !DILocation(line: 221, column: 24, scope: !1694)
!1741 = !DILocation(line: 221, column: 36, scope: !1694)
!1742 = !DILocation(line: 221, column: 24, scope: !1743)
!1743 = !DILexicalBlockFile(scope: !1694, file: !942, discriminator: 1)
!1744 = !DILocation(line: 221, column: 55, scope: !1745)
!1745 = !DILexicalBlockFile(scope: !1694, file: !942, discriminator: 2)
!1746 = !DILocation(line: 221, column: 54, scope: !1745)
!1747 = !DILocation(line: 221, column: 24, scope: !1745)
!1748 = !DILocation(line: 221, column: 24, scope: !1749)
!1749 = !DILexicalBlockFile(scope: !1694, file: !942, discriminator: 3)
!1750 = !DILocation(line: 221, column: 23, scope: !1749)
!1751 = !DILocation(line: 221, column: 11, scope: !1749)
!1752 = !DILocation(line: 221, column: 21, scope: !1749)
!1753 = !DILocation(line: 222, column: 25, scope: !1694)
!1754 = !DILocation(line: 222, column: 39, scope: !1694)
!1755 = !DILocation(line: 222, column: 43, scope: !1694)
!1756 = !DILocation(line: 222, column: 51, scope: !1694)
!1757 = !DILocation(line: 222, column: 11, scope: !1694)
!1758 = !DILocation(line: 222, column: 21, scope: !1694)
!1759 = !DILocation(line: 223, column: 33, scope: !1694)
!1760 = !DILocation(line: 223, column: 9, scope: !1694)
!1761 = !DILocation(line: 223, column: 14, scope: !1694)
!1762 = !DILocation(line: 223, column: 29, scope: !1694)
!1763 = !DILocation(line: 225, column: 29, scope: !1694)
!1764 = !DILocation(line: 225, column: 44, scope: !1694)
!1765 = !DILocation(line: 225, column: 49, scope: !1694)
!1766 = !DILocation(line: 225, column: 57, scope: !1694)
!1767 = !DILocation(line: 225, column: 25, scope: !1694)
!1768 = !DILocation(line: 226, column: 28, scope: !1694)
!1769 = !DILocation(line: 226, column: 43, scope: !1694)
!1770 = !DILocation(line: 226, column: 51, scope: !1694)
!1771 = !DILocation(line: 226, column: 50, scope: !1694)
!1772 = !DILocation(line: 226, column: 47, scope: !1694)
!1773 = !DILocation(line: 226, column: 26, scope: !1694)
!1774 = !DILocation(line: 228, column: 43, scope: !1694)
!1775 = !DILocation(line: 228, column: 32, scope: !1694)
!1776 = !DILocation(line: 229, column: 43, scope: !1694)
!1777 = !DILocation(line: 229, column: 32, scope: !1694)
!1778 = !DILocation(line: 229, column: 54, scope: !1694)
!1779 = !DILocation(line: 229, column: 52, scope: !1694)
!1780 = !DILocation(line: 229, column: 70, scope: !1694)
!1781 = !DILocation(line: 230, column: 44, scope: !1694)
!1782 = !DILocation(line: 230, column: 61, scope: !1694)
!1783 = !DILocation(line: 228, column: 9, scope: !1694)
!1784 = !DILocation(line: 234, column: 9, scope: !1694)
!1785 = !DILocation(line: 236, column: 55, scope: !1694)
!1786 = !DILocation(line: 236, column: 36, scope: !1694)
!1787 = !DILocation(line: 236, column: 44, scope: !1694)
!1788 = !DILocation(line: 236, column: 9, scope: !1694)
!1789 = !DILocation(line: 239, column: 29, scope: !1694)
!1790 = !DILocation(line: 239, column: 9, scope: !1694)
!1791 = !DILocation(line: 241, column: 57, scope: !1694)
!1792 = !DILocation(line: 241, column: 40, scope: !1694)
!1793 = !DILocation(line: 241, column: 48, scope: !1694)
!1794 = !DILocation(line: 241, column: 28, scope: !1694)
!1795 = !DILocation(line: 241, column: 26, scope: !1694)
!1796 = !DILocation(line: 242, column: 21, scope: !1694)
!1797 = !DILocation(line: 243, column: 37, scope: !1694)
!1798 = !DILocation(line: 243, column: 47, scope: !1694)
!1799 = !DILocation(line: 245, column: 47, scope: !1694)
!1800 = !DILocation(line: 245, column: 52, scope: !1694)
!1801 = !DILocation(line: 243, column: 13, scope: !1743)
!1802 = !DILocation(line: 242, column: 38, scope: !1694)
!1803 = !DILocation(line: 242, column: 19, scope: !1694)
!1804 = !DILocation(line: 248, column: 34, scope: !1694)
!1805 = !DILocation(line: 248, column: 39, scope: !1694)
!1806 = !DILocation(line: 248, column: 9, scope: !1694)
!1807 = !DILocation(line: 248, column: 14, scope: !1694)
!1808 = !DILocation(line: 248, column: 32, scope: !1694)
!1809 = !DILocation(line: 249, column: 48, scope: !1694)
!1810 = !DILocation(line: 249, column: 41, scope: !1694)
!1811 = !DILocation(line: 249, column: 39, scope: !1694)
!1812 = !DILocation(line: 249, column: 34, scope: !1694)
!1813 = !DILocation(line: 249, column: 9, scope: !1694)
!1814 = !DILocation(line: 249, column: 14, scope: !1694)
!1815 = !DILocation(line: 249, column: 32, scope: !1694)
!1816 = !DILocation(line: 251, column: 45, scope: !1694)
!1817 = !DILocation(line: 251, column: 34, scope: !1694)
!1818 = !DILocation(line: 251, column: 67, scope: !1694)
!1819 = !DILocation(line: 251, column: 56, scope: !1694)
!1820 = !DILocation(line: 252, column: 33, scope: !1694)
!1821 = !DILocation(line: 252, column: 47, scope: !1694)
!1822 = !DILocation(line: 253, column: 33, scope: !1694)
!1823 = !DILocation(line: 251, column: 9, scope: !1694)
!1824 = !DILocation(line: 255, column: 38, scope: !1694)
!1825 = !DILocation(line: 255, column: 46, scope: !1694)
!1826 = !DILocation(line: 255, column: 44, scope: !1694)
!1827 = !DILocation(line: 255, column: 58, scope: !1694)
!1828 = !DILocation(line: 255, column: 55, scope: !1694)
!1829 = !DILocation(line: 256, column: 50, scope: !1694)
!1830 = !DILocation(line: 256, column: 39, scope: !1694)
!1831 = !DILocation(line: 255, column: 9, scope: !1694)
!1832 = !DILocation(line: 259, column: 5, scope: !1694)
!1833 = !DILocation(line: 206, column: 25, scope: !1834)
!1834 = !DILexicalBlockFile(scope: !1690, file: !942, discriminator: 2)
!1835 = !DILocation(line: 206, column: 5, scope: !1834)
!1836 = distinct !{!1836, !1837}
!1837 = !DILocation(line: 206, column: 5, scope: !941)
!1838 = !DILocation(line: 260, column: 12, scope: !941)
!1839 = !DILocation(line: 260, column: 17, scope: !941)
!1840 = !DILocation(line: 260, column: 5, scope: !941)
!1841 = !DILocation(line: 260, column: 24, scope: !941)
!1842 = !DILocation(line: 260, column: 32, scope: !941)
!1843 = !DILocation(line: 260, column: 30, scope: !941)
!1844 = !DILocation(line: 260, column: 43, scope: !941)
!1845 = !DILocation(line: 263, column: 13, scope: !941)
!1846 = !DILocation(line: 263, column: 18, scope: !941)
!1847 = !DILocation(line: 263, column: 5, scope: !941)
!1848 = !DILocation(line: 263, column: 30, scope: !941)
!1849 = !DILocation(line: 263, column: 35, scope: !941)
!1850 = !DILocation(line: 263, column: 46, scope: !941)
!1851 = !DILocation(line: 266, column: 16, scope: !941)
!1852 = !DILocation(line: 266, column: 26, scope: !941)
!1853 = !DILocation(line: 266, column: 33, scope: !941)
!1854 = !DILocation(line: 266, column: 38, scope: !941)
!1855 = !DILocation(line: 266, column: 47, scope: !941)
!1856 = !DILocation(line: 266, column: 52, scope: !941)
!1857 = !DILocation(line: 266, column: 62, scope: !941)
!1858 = !DILocation(line: 266, column: 67, scope: !941)
!1859 = !DILocation(line: 266, column: 5, scope: !941)
!1860 = !DILocation(line: 268, column: 12, scope: !941)
!1861 = !DILocation(line: 268, column: 17, scope: !941)
!1862 = !DILocation(line: 268, column: 5, scope: !941)
!1863 = !DILocation(line: 268, column: 26, scope: !941)
!1864 = !DILocation(line: 269, column: 1, scope: !941)
!1865 = distinct !DISubprogram(name: "lsf_decode_fp_16k", scope: !942, file: !942, line: 63, type: !1866, isLocal: true, isDefinition: true, scopeLine: 65, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1617)
!1866 = !DISubroutineType(types: !1867)
!1867 = !{null, !1591, !1591, !1025, !974}
!1868 = !DILocalVariable(name: "lsf_history", arg: 1, scope: !1865, file: !942, line: 63, type: !1591)
!1869 = !DILocation(line: 63, column: 38, scope: !1865)
!1870 = !DILocalVariable(name: "isp_new", arg: 2, scope: !1865, file: !942, line: 63, type: !1591)
!1871 = !DILocation(line: 63, column: 58, scope: !1865)
!1872 = !DILocalVariable(name: "parm", arg: 3, scope: !1865, file: !942, line: 64, type: !1025)
!1873 = !DILocation(line: 64, column: 42, scope: !1865)
!1874 = !DILocalVariable(name: "ma_pred", arg: 4, scope: !1865, file: !942, line: 64, type: !974)
!1875 = !DILocation(line: 64, column: 52, scope: !1865)
!1876 = !DILocalVariable(name: "i", scope: !1865, file: !942, line: 66, type: !974)
!1877 = !DILocation(line: 66, column: 9, scope: !1865)
!1878 = !DILocalVariable(name: "isp_q", scope: !1865, file: !942, line: 67, type: !1553)
!1879 = !DILocation(line: 67, column: 11, scope: !1865)
!1880 = !DILocation(line: 69, column: 13, scope: !1865)
!1881 = !DILocation(line: 69, column: 20, scope: !1865)
!1882 = !DILocation(line: 69, column: 5, scope: !1865)
!1883 = !DILocation(line: 71, column: 12, scope: !1884)
!1884 = distinct !DILexicalBlock(scope: !1865, file: !942, line: 71, column: 5)
!1885 = !DILocation(line: 71, column: 10, scope: !1884)
!1886 = !DILocation(line: 71, column: 17, scope: !1887)
!1887 = !DILexicalBlockFile(scope: !1888, file: !942, discriminator: 1)
!1888 = distinct !DILexicalBlock(scope: !1884, file: !942, line: 71, column: 5)
!1889 = !DILocation(line: 71, column: 19, scope: !1887)
!1890 = !DILocation(line: 71, column: 5, scope: !1887)
!1891 = !DILocation(line: 72, column: 30, scope: !1892)
!1892 = distinct !DILexicalBlock(scope: !1888, file: !942, line: 71, column: 30)
!1893 = !DILocation(line: 72, column: 27, scope: !1892)
!1894 = !DILocation(line: 72, column: 25, scope: !1892)
!1895 = !DILocation(line: 72, column: 48, scope: !1892)
!1896 = !DILocation(line: 72, column: 42, scope: !1892)
!1897 = !DILocation(line: 72, column: 40, scope: !1892)
!1898 = !DILocation(line: 73, column: 26, scope: !1892)
!1899 = !DILocation(line: 73, column: 23, scope: !1892)
!1900 = !DILocation(line: 73, column: 49, scope: !1892)
!1901 = !DILocation(line: 73, column: 37, scope: !1892)
!1902 = !DILocation(line: 73, column: 35, scope: !1892)
!1903 = !DILocation(line: 73, column: 21, scope: !1892)
!1904 = !DILocation(line: 74, column: 36, scope: !1892)
!1905 = !DILocation(line: 74, column: 23, scope: !1892)
!1906 = !DILocation(line: 74, column: 21, scope: !1892)
!1907 = !DILocation(line: 72, column: 17, scope: !1892)
!1908 = !DILocation(line: 72, column: 9, scope: !1892)
!1909 = !DILocation(line: 72, column: 20, scope: !1892)
!1910 = !DILocation(line: 75, column: 5, scope: !1892)
!1911 = !DILocation(line: 71, column: 26, scope: !1912)
!1912 = !DILexicalBlockFile(scope: !1888, file: !942, discriminator: 2)
!1913 = !DILocation(line: 71, column: 5, scope: !1912)
!1914 = distinct !{!1914, !1915}
!1915 = !DILocation(line: 71, column: 5, scope: !1865)
!1916 = !DILocation(line: 77, column: 12, scope: !1865)
!1917 = !DILocation(line: 77, column: 5, scope: !1865)
!1918 = !DILocation(line: 78, column: 1, scope: !1865)
!1919 = distinct !DISubprogram(name: "lsf2lsp", scope: !942, file: !942, line: 45, type: !1920, isLocal: true, isDefinition: true, scopeLine: 46, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1617)
!1920 = !DISubroutineType(types: !1921)
!1921 = !{null, !900, !1922}
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 64, align: 64)
!1923 = !DILocalVariable(name: "lsf", arg: 1, scope: !1919, file: !942, line: 45, type: !900)
!1924 = !DILocation(line: 45, column: 34, scope: !1919)
!1925 = !DILocalVariable(name: "lsp", arg: 2, scope: !1919, file: !942, line: 45, type: !1922)
!1926 = !DILocation(line: 45, column: 47, scope: !1919)
!1927 = !DILocalVariable(name: "i", scope: !1919, file: !942, line: 47, type: !974)
!1928 = !DILocation(line: 47, column: 9, scope: !1919)
!1929 = !DILocation(line: 49, column: 12, scope: !1930)
!1930 = distinct !DILexicalBlock(scope: !1919, file: !942, line: 49, column: 5)
!1931 = !DILocation(line: 49, column: 10, scope: !1930)
!1932 = !DILocation(line: 49, column: 17, scope: !1933)
!1933 = !DILexicalBlockFile(scope: !1934, file: !942, discriminator: 1)
!1934 = distinct !DILexicalBlock(scope: !1930, file: !942, line: 49, column: 5)
!1935 = !DILocation(line: 49, column: 19, scope: !1933)
!1936 = !DILocation(line: 49, column: 5, scope: !1933)
!1937 = !DILocation(line: 50, column: 27, scope: !1934)
!1938 = !DILocation(line: 50, column: 23, scope: !1934)
!1939 = !DILocation(line: 50, column: 18, scope: !1934)
!1940 = !DILocation(line: 50, column: 13, scope: !1934)
!1941 = !DILocation(line: 50, column: 9, scope: !1934)
!1942 = !DILocation(line: 50, column: 16, scope: !1934)
!1943 = !DILocation(line: 49, column: 26, scope: !1944)
!1944 = !DILexicalBlockFile(scope: !1934, file: !942, discriminator: 2)
!1945 = !DILocation(line: 49, column: 5, scope: !1944)
!1946 = distinct !{!1946, !1947}
!1947 = !DILocation(line: 49, column: 5, scope: !1919)
!1948 = !DILocation(line: 51, column: 1, scope: !1919)
!1949 = distinct !DISubprogram(name: "acelp_lp_decodef", scope: !942, file: !942, line: 142, type: !1950, isLocal: true, isDefinition: true, scopeLine: 144, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1617)
!1950 = !DISubroutineType(types: !1951)
!1951 = !{null, !1591, !1591, !1952, !1952}
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 64, align: 64)
!1953 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1596)
!1954 = !DILocalVariable(name: "lp_1st", arg: 1, scope: !1949, file: !942, line: 142, type: !1591)
!1955 = !DILocation(line: 142, column: 37, scope: !1949)
!1956 = !DILocalVariable(name: "lp_2nd", arg: 2, scope: !1949, file: !942, line: 142, type: !1591)
!1957 = !DILocation(line: 142, column: 52, scope: !1949)
!1958 = !DILocalVariable(name: "lsp_2nd", arg: 3, scope: !1949, file: !942, line: 143, type: !1952)
!1959 = !DILocation(line: 143, column: 44, scope: !1949)
!1960 = !DILocalVariable(name: "lsp_prev", arg: 4, scope: !1949, file: !942, line: 143, type: !1952)
!1961 = !DILocation(line: 143, column: 67, scope: !1949)
!1962 = !DILocalVariable(name: "lsp_1st", scope: !1949, file: !942, line: 145, type: !1595)
!1963 = !DILocation(line: 145, column: 12, scope: !1949)
!1964 = !DILocalVariable(name: "i", scope: !1949, file: !942, line: 146, type: !974)
!1965 = !DILocation(line: 146, column: 9, scope: !1949)
!1966 = !DILocation(line: 149, column: 12, scope: !1967)
!1967 = distinct !DILexicalBlock(scope: !1949, file: !942, line: 149, column: 5)
!1968 = !DILocation(line: 149, column: 10, scope: !1967)
!1969 = !DILocation(line: 149, column: 17, scope: !1970)
!1970 = !DILexicalBlockFile(scope: !1971, file: !942, discriminator: 1)
!1971 = distinct !DILexicalBlock(scope: !1967, file: !942, line: 149, column: 5)
!1972 = !DILocation(line: 149, column: 19, scope: !1970)
!1973 = !DILocation(line: 149, column: 5, scope: !1970)
!1974 = !DILocation(line: 150, column: 31, scope: !1971)
!1975 = !DILocation(line: 150, column: 23, scope: !1971)
!1976 = !DILocation(line: 150, column: 45, scope: !1971)
!1977 = !DILocation(line: 150, column: 36, scope: !1971)
!1978 = !DILocation(line: 150, column: 34, scope: !1971)
!1979 = !DILocation(line: 150, column: 49, scope: !1971)
!1980 = !DILocation(line: 150, column: 17, scope: !1971)
!1981 = !DILocation(line: 150, column: 9, scope: !1971)
!1982 = !DILocation(line: 150, column: 20, scope: !1971)
!1983 = !DILocation(line: 149, column: 26, scope: !1984)
!1984 = !DILexicalBlockFile(scope: !1971, file: !942, discriminator: 2)
!1985 = !DILocation(line: 149, column: 5, scope: !1984)
!1986 = distinct !{!1986, !1987}
!1987 = !DILocation(line: 149, column: 5, scope: !1949)
!1988 = !DILocation(line: 152, column: 23, scope: !1949)
!1989 = !DILocation(line: 152, column: 32, scope: !1949)
!1990 = !DILocation(line: 152, column: 5, scope: !1949)
!1991 = !DILocation(line: 155, column: 23, scope: !1949)
!1992 = !DILocation(line: 155, column: 32, scope: !1949)
!1993 = !DILocation(line: 155, column: 5, scope: !1949)
!1994 = !DILocation(line: 156, column: 1, scope: !1949)
!1995 = distinct !DISubprogram(name: "dec_delay3_1st", scope: !942, file: !942, line: 80, type: !1996, isLocal: true, isDefinition: true, scopeLine: 81, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1617)
!1996 = !DISubroutineType(types: !1997)
!1997 = !{!974, !974}
!1998 = !DILocalVariable(name: "index", arg: 1, scope: !1995, file: !942, line: 80, type: !974)
!1999 = !DILocation(line: 80, column: 31, scope: !1995)
!2000 = !DILocation(line: 82, column: 9, scope: !2001)
!2001 = distinct !DILexicalBlock(scope: !1995, file: !942, line: 82, column: 9)
!2002 = !DILocation(line: 82, column: 15, scope: !2001)
!2003 = !DILocation(line: 82, column: 9, scope: !1995)
!2004 = !DILocation(line: 83, column: 16, scope: !2005)
!2005 = distinct !DILexicalBlock(scope: !2001, file: !942, line: 82, column: 22)
!2006 = !DILocation(line: 83, column: 22, scope: !2005)
!2007 = !DILocation(line: 83, column: 9, scope: !2005)
!2008 = !DILocation(line: 85, column: 20, scope: !2001)
!2009 = !DILocation(line: 85, column: 18, scope: !2001)
!2010 = !DILocation(line: 85, column: 26, scope: !2001)
!2011 = !DILocation(line: 85, column: 9, scope: !2001)
!2012 = !DILocation(line: 86, column: 1, scope: !1995)
!2013 = distinct !DISubprogram(name: "dec_delay3_2nd", scope: !942, file: !942, line: 88, type: !2014, isLocal: true, isDefinition: true, scopeLine: 90, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1617)
!2014 = !DISubroutineType(types: !2015)
!2015 = !{!974, !974, !974, !974, !974}
!2016 = !DILocalVariable(name: "a", arg: 1, scope: !2017, file: !2018, line: 127, type: !974)
!2017 = distinct !DISubprogram(name: "av_clip_c", scope: !2018, file: !2018, line: 127, type: !2019, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1617)
!2018 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2019 = !DISubroutineType(types: !2020)
!2020 = !{!974, !974, !974, !974}
!2021 = !DILocation(line: 127, column: 87, scope: !2017, inlinedAt: !2022)
!2022 = distinct !DILocation(line: 92, column: 31, scope: !2023)
!2023 = distinct !DILexicalBlock(scope: !2024, file: !942, line: 91, column: 21)
!2024 = distinct !DILexicalBlock(scope: !2013, file: !942, line: 91, column: 9)
!2025 = !DILocalVariable(name: "amin", arg: 2, scope: !2017, file: !2018, line: 127, type: !974)
!2026 = !DILocation(line: 127, column: 94, scope: !2017, inlinedAt: !2022)
!2027 = !DILocalVariable(name: "amax", arg: 3, scope: !2017, file: !2018, line: 127, type: !974)
!2028 = !DILocation(line: 127, column: 104, scope: !2017, inlinedAt: !2022)
!2029 = !DILocalVariable(name: "index", arg: 1, scope: !2013, file: !942, line: 88, type: !974)
!2030 = !DILocation(line: 88, column: 31, scope: !2013)
!2031 = !DILocalVariable(name: "pit_min", arg: 2, scope: !2013, file: !942, line: 88, type: !974)
!2032 = !DILocation(line: 88, column: 42, scope: !2013)
!2033 = !DILocalVariable(name: "pit_max", arg: 3, scope: !2013, file: !942, line: 88, type: !974)
!2034 = !DILocation(line: 88, column: 55, scope: !2013)
!2035 = !DILocalVariable(name: "pitch_lag_prev", arg: 4, scope: !2013, file: !942, line: 89, type: !974)
!2036 = !DILocation(line: 89, column: 31, scope: !2013)
!2037 = !DILocation(line: 91, column: 9, scope: !2024)
!2038 = !DILocation(line: 91, column: 15, scope: !2024)
!2039 = !DILocation(line: 91, column: 9, scope: !2013)
!2040 = !DILocalVariable(name: "pitch_delay_min", scope: !2023, file: !942, line: 92, type: !974)
!2041 = !DILocation(line: 92, column: 13, scope: !2023)
!2042 = !DILocation(line: 92, column: 41, scope: !2023)
!2043 = !DILocation(line: 92, column: 56, scope: !2023)
!2044 = !DILocation(line: 93, column: 39, scope: !2023)
!2045 = !DILocation(line: 93, column: 48, scope: !2023)
!2046 = !DILocation(line: 93, column: 56, scope: !2023)
!2047 = !DILocation(line: 92, column: 31, scope: !2023)
!2048 = !DILocation(line: 132, column: 9, scope: !2049, inlinedAt: !2022)
!2049 = distinct !DILexicalBlock(scope: !2017, file: !2018, line: 132, column: 9)
!2050 = !DILocation(line: 132, column: 13, scope: !2049, inlinedAt: !2022)
!2051 = !DILocation(line: 132, column: 11, scope: !2049, inlinedAt: !2022)
!2052 = !DILocation(line: 132, column: 9, scope: !2017, inlinedAt: !2022)
!2053 = !DILocation(line: 132, column: 26, scope: !2054, inlinedAt: !2022)
!2054 = !DILexicalBlockFile(scope: !2049, file: !2018, discriminator: 1)
!2055 = !DILocation(line: 132, column: 19, scope: !2054, inlinedAt: !2022)
!2056 = !DILocation(line: 133, column: 14, scope: !2057, inlinedAt: !2022)
!2057 = distinct !DILexicalBlock(scope: !2049, file: !2018, line: 133, column: 14)
!2058 = !DILocation(line: 133, column: 18, scope: !2057, inlinedAt: !2022)
!2059 = !DILocation(line: 133, column: 16, scope: !2057, inlinedAt: !2022)
!2060 = !DILocation(line: 133, column: 14, scope: !2049, inlinedAt: !2022)
!2061 = !DILocation(line: 133, column: 31, scope: !2062, inlinedAt: !2022)
!2062 = !DILexicalBlockFile(scope: !2057, file: !2018, discriminator: 1)
!2063 = !DILocation(line: 133, column: 24, scope: !2062, inlinedAt: !2022)
!2064 = !DILocation(line: 134, column: 17, scope: !2057, inlinedAt: !2022)
!2065 = !DILocation(line: 134, column: 10, scope: !2057, inlinedAt: !2022)
!2066 = !DILocation(line: 135, column: 1, scope: !2017, inlinedAt: !2022)
!2067 = !DILocation(line: 94, column: 20, scope: !2023)
!2068 = !DILocation(line: 94, column: 18, scope: !2023)
!2069 = !DILocation(line: 94, column: 38, scope: !2023)
!2070 = !DILocation(line: 94, column: 36, scope: !2023)
!2071 = !DILocation(line: 94, column: 44, scope: !2023)
!2072 = !DILocation(line: 94, column: 9, scope: !2023)
!2073 = !DILocation(line: 96, column: 20, scope: !2024)
!2074 = !DILocation(line: 96, column: 18, scope: !2024)
!2075 = !DILocation(line: 96, column: 9, scope: !2024)
!2076 = !DILocation(line: 97, column: 1, scope: !2013)
!2077 = distinct !DISubprogram(name: "acelp_decode_gain_codef", scope: !942, file: !942, line: 161, type: !2078, isLocal: true, isDefinition: true, scopeLine: 165, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1617)
!2078 = !DISubroutineType(types: !2079)
!2079 = !{!902, !902, !900, !902, !900, !900, !974, !974}
!2080 = !DILocalVariable(name: "gain_corr_factor", arg: 1, scope: !2077, file: !942, line: 161, type: !902)
!2081 = !DILocation(line: 161, column: 44, scope: !2077)
!2082 = !DILocalVariable(name: "fc_v", arg: 2, scope: !2077, file: !942, line: 161, type: !900)
!2083 = !DILocation(line: 161, column: 75, scope: !2077)
!2084 = !DILocalVariable(name: "mr_energy", arg: 3, scope: !2077, file: !942, line: 162, type: !902)
!2085 = !DILocation(line: 162, column: 44, scope: !2077)
!2086 = !DILocalVariable(name: "quant_energy", arg: 4, scope: !2077, file: !942, line: 162, type: !900)
!2087 = !DILocation(line: 162, column: 68, scope: !2077)
!2088 = !DILocalVariable(name: "ma_prediction_coeff", arg: 5, scope: !2077, file: !942, line: 163, type: !900)
!2089 = !DILocation(line: 163, column: 51, scope: !2077)
!2090 = !DILocalVariable(name: "subframe_size", arg: 6, scope: !2077, file: !942, line: 164, type: !974)
!2091 = !DILocation(line: 164, column: 42, scope: !2077)
!2092 = !DILocalVariable(name: "ma_pred_order", arg: 7, scope: !2077, file: !942, line: 164, type: !974)
!2093 = !DILocation(line: 164, column: 61, scope: !2077)
!2094 = !DILocation(line: 166, column: 47, scope: !2077)
!2095 = !DILocation(line: 166, column: 61, scope: !2077)
!2096 = !DILocation(line: 167, column: 47, scope: !2077)
!2097 = !DILocation(line: 166, column: 18, scope: !2077)
!2098 = !DILocation(line: 166, column: 15, scope: !2077)
!2099 = !DILocation(line: 169, column: 17, scope: !2077)
!2100 = !DILocation(line: 169, column: 54, scope: !2077)
!2101 = !DILocation(line: 169, column: 52, scope: !2077)
!2102 = !DILocation(line: 169, column: 36, scope: !2077)
!2103 = !DILocation(line: 169, column: 34, scope: !2077)
!2104 = !DILocation(line: 170, column: 51, scope: !2077)
!2105 = !DILocation(line: 170, column: 57, scope: !2077)
!2106 = !DILocation(line: 170, column: 63, scope: !2077)
!2107 = !DILocation(line: 170, column: 22, scope: !2077)
!2108 = !DILocation(line: 170, column: 20, scope: !2077)
!2109 = !DILocation(line: 170, column: 9, scope: !2110)
!2110 = !DILexicalBlockFile(scope: !2077, file: !942, discriminator: 1)
!2111 = !DILocation(line: 169, column: 65, scope: !2077)
!2112 = !DILocation(line: 169, column: 15, scope: !2077)
!2113 = !DILocation(line: 171, column: 12, scope: !2077)
!2114 = !DILocation(line: 171, column: 5, scope: !2077)
!2115 = distinct !DISubprogram(name: "postfilter", scope: !942, file: !942, line: 99, type: !2116, isLocal: true, isDefinition: true, scopeLine: 101, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1617)
!2116 = !DISubroutineType(types: !2117)
!2117 = !{null, !1591, !1591, !1591, !2118, !1591}
!2118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 64, align: 64)
!2119 = !DILocalVariable(name: "out_data", arg: 1, scope: !2115, file: !942, line: 99, type: !1591)
!2120 = !DILocation(line: 99, column: 31, scope: !2115)
!2121 = !DILocalVariable(name: "synth", arg: 2, scope: !2115, file: !942, line: 99, type: !1591)
!2122 = !DILocation(line: 99, column: 48, scope: !2115)
!2123 = !DILocalVariable(name: "iir_mem", arg: 3, scope: !2115, file: !942, line: 99, type: !1591)
!2124 = !DILocation(line: 99, column: 62, scope: !2115)
!2125 = !DILocalVariable(name: "filt_mem", arg: 4, scope: !2115, file: !942, line: 100, type: !2118)
!2126 = !DILocation(line: 100, column: 31, scope: !2115)
!2127 = !DILocalVariable(name: "mem_preemph", arg: 5, scope: !2115, file: !942, line: 100, type: !1591)
!2128 = !DILocation(line: 100, column: 51, scope: !2115)
!2129 = !DILocalVariable(name: "buf", scope: !2115, file: !942, line: 102, type: !2130)
!2130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !902, size: 1472, align: 32, elements: !2131)
!2131 = !{!2132}
!2132 = !DISubrange(count: 46)
!2133 = !DILocation(line: 102, column: 11, scope: !2115)
!2134 = !DILocalVariable(name: "tmpbuf", scope: !2115, file: !942, line: 103, type: !1591)
!2135 = !DILocation(line: 103, column: 12, scope: !2115)
!2136 = !DILocation(line: 103, column: 21, scope: !2115)
!2137 = !DILocation(line: 103, column: 25, scope: !2115)
!2138 = !DILocalVariable(name: "s", scope: !2115, file: !942, line: 104, type: !902)
!2139 = !DILocation(line: 104, column: 11, scope: !2115)
!2140 = !DILocalVariable(name: "i", scope: !2115, file: !942, line: 105, type: !974)
!2141 = !DILocation(line: 105, column: 9, scope: !2115)
!2142 = !DILocation(line: 107, column: 12, scope: !2143)
!2143 = distinct !DILexicalBlock(scope: !2115, file: !942, line: 107, column: 5)
!2144 = !DILocation(line: 107, column: 10, scope: !2143)
!2145 = !DILocation(line: 107, column: 17, scope: !2146)
!2146 = !DILexicalBlockFile(scope: !2147, file: !942, discriminator: 1)
!2147 = distinct !DILexicalBlock(scope: !2143, file: !942, line: 107, column: 5)
!2148 = !DILocation(line: 107, column: 19, scope: !2146)
!2149 = !DILocation(line: 107, column: 5, scope: !2146)
!2150 = !DILocation(line: 108, column: 34, scope: !2147)
!2151 = !DILocation(line: 108, column: 26, scope: !2147)
!2152 = !DILocation(line: 108, column: 50, scope: !2147)
!2153 = !DILocation(line: 108, column: 39, scope: !2147)
!2154 = !DILocation(line: 108, column: 37, scope: !2147)
!2155 = !DILocation(line: 108, column: 21, scope: !2147)
!2156 = !DILocation(line: 108, column: 9, scope: !2147)
!2157 = !DILocation(line: 108, column: 24, scope: !2147)
!2158 = !DILocation(line: 107, column: 26, scope: !2159)
!2159 = !DILexicalBlockFile(scope: !2147, file: !942, discriminator: 2)
!2160 = !DILocation(line: 107, column: 5, scope: !2159)
!2161 = distinct !{!2161, !2162}
!2162 = !DILocation(line: 107, column: 5, scope: !2115)
!2163 = !DILocation(line: 110, column: 12, scope: !2115)
!2164 = !DILocation(line: 110, column: 19, scope: !2115)
!2165 = !DILocation(line: 110, column: 5, scope: !2115)
!2166 = !DILocation(line: 110, column: 25, scope: !2115)
!2167 = !DILocation(line: 113, column: 34, scope: !2115)
!2168 = !DILocation(line: 113, column: 42, scope: !2115)
!2169 = !DILocation(line: 113, column: 55, scope: !2115)
!2170 = !DILocation(line: 113, column: 5, scope: !2115)
!2171 = !DILocation(line: 116, column: 12, scope: !2115)
!2172 = !DILocation(line: 116, column: 18, scope: !2115)
!2173 = !DILocation(line: 116, column: 5, scope: !2115)
!2174 = !DILocation(line: 116, column: 24, scope: !2115)
!2175 = !DILocation(line: 119, column: 34, scope: !2115)
!2176 = !DILocation(line: 119, column: 41, scope: !2115)
!2177 = !DILocation(line: 119, column: 54, scope: !2115)
!2178 = !DILocation(line: 119, column: 5, scope: !2115)
!2179 = !DILocation(line: 122, column: 12, scope: !2115)
!2180 = !DILocation(line: 122, column: 21, scope: !2115)
!2181 = !DILocation(line: 122, column: 26, scope: !2115)
!2182 = !DILocation(line: 122, column: 5, scope: !2115)
!2183 = !DILocation(line: 123, column: 12, scope: !2115)
!2184 = !DILocation(line: 123, column: 18, scope: !2115)
!2185 = !DILocation(line: 123, column: 23, scope: !2115)
!2186 = !DILocation(line: 126, column: 34, scope: !2115)
!2187 = !DILocation(line: 126, column: 43, scope: !2115)
!2188 = !DILocation(line: 126, column: 49, scope: !2115)
!2189 = !DILocation(line: 127, column: 34, scope: !2115)
!2190 = !DILocation(line: 127, column: 40, scope: !2115)
!2191 = !DILocation(line: 126, column: 5, scope: !2115)
!2192 = !DILocation(line: 131, column: 12, scope: !2115)
!2193 = !DILocation(line: 131, column: 5, scope: !2115)
!2194 = !DILocation(line: 131, column: 25, scope: !2115)
!2195 = !DILocation(line: 131, column: 34, scope: !2115)
!2196 = !DILocation(line: 131, column: 41, scope: !2115)
!2197 = !DILocation(line: 134, column: 5, scope: !2115)
!2198 = distinct !{!2198, !2197}
!2199 = !DILocalVariable(name: "SWAP_tmp", scope: !2200, file: !942, line: 134, type: !1591)
!2200 = distinct !DILexicalBlock(scope: !2115, file: !942, line: 134, column: 7)
!2201 = !DILocation(line: 134, column: 16, scope: !2200)
!2202 = !DILocation(line: 134, column: 26, scope: !2203)
!2203 = !DILexicalBlockFile(scope: !2200, file: !942, discriminator: 1)
!2204 = !DILocation(line: 134, column: 16, scope: !2203)
!2205 = !DILocation(line: 134, column: 52, scope: !2203)
!2206 = !DILocation(line: 134, column: 39, scope: !2203)
!2207 = !DILocation(line: 134, column: 50, scope: !2203)
!2208 = !DILocation(line: 134, column: 78, scope: !2203)
!2209 = !DILocation(line: 134, column: 65, scope: !2203)
!2210 = !DILocation(line: 134, column: 76, scope: !2203)
!2211 = !DILocation(line: 134, column: 87, scope: !2203)
!2212 = !DILocation(line: 135, column: 12, scope: !2213)
!2213 = distinct !DILexicalBlock(scope: !2115, file: !942, line: 135, column: 5)
!2214 = !DILocation(line: 135, column: 19, scope: !2213)
!2215 = !DILocation(line: 135, column: 10, scope: !2213)
!2216 = !DILocation(line: 135, column: 24, scope: !2217)
!2217 = !DILexicalBlockFile(scope: !2218, file: !942, discriminator: 1)
!2218 = distinct !DILexicalBlock(scope: !2213, file: !942, line: 135, column: 5)
!2219 = !DILocation(line: 135, column: 26, scope: !2217)
!2220 = !DILocation(line: 135, column: 5, scope: !2217)
!2221 = !DILocation(line: 136, column: 30, scope: !2218)
!2222 = !DILocation(line: 136, column: 23, scope: !2218)
!2223 = !DILocation(line: 136, column: 35, scope: !2218)
!2224 = !DILocation(line: 136, column: 46, scope: !2218)
!2225 = !DILocation(line: 136, column: 40, scope: !2218)
!2226 = !DILocation(line: 136, column: 58, scope: !2218)
!2227 = !DILocation(line: 136, column: 51, scope: !2218)
!2228 = !DILocation(line: 136, column: 49, scope: !2218)
!2229 = !DILocation(line: 136, column: 37, scope: !2218)
!2230 = !DILocation(line: 136, column: 33, scope: !2218)
!2231 = !DILocation(line: 136, column: 18, scope: !2218)
!2232 = !DILocation(line: 136, column: 9, scope: !2218)
!2233 = !DILocation(line: 136, column: 21, scope: !2218)
!2234 = !DILocation(line: 135, column: 33, scope: !2235)
!2235 = !DILexicalBlockFile(scope: !2218, file: !942, discriminator: 2)
!2236 = !DILocation(line: 135, column: 39, scope: !2235)
!2237 = !DILocation(line: 135, column: 5, scope: !2235)
!2238 = distinct !{!2238, !2239}
!2239 = !DILocation(line: 135, column: 5, scope: !2115)
!2240 = !DILocation(line: 137, column: 1, scope: !2115)
!2241 = distinct !DISubprogram(name: "ff_sipr_init_16k", scope: !942, file: !942, line: 271, type: !2242, isLocal: false, isDefinition: true, scopeLine: 272, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1617)
!2242 = !DISubroutineType(types: !2243)
!2243 = !{null, !945}
!2244 = !DILocalVariable(name: "ctx", arg: 1, scope: !2241, file: !942, line: 271, type: !945)
!2245 = !DILocation(line: 271, column: 58, scope: !2241)
!2246 = !DILocalVariable(name: "i", scope: !2241, file: !942, line: 273, type: !974)
!2247 = !DILocation(line: 273, column: 9, scope: !2241)
!2248 = !DILocation(line: 275, column: 12, scope: !2249)
!2249 = distinct !DILexicalBlock(scope: !2241, file: !942, line: 275, column: 5)
!2250 = !DILocation(line: 275, column: 10, scope: !2249)
!2251 = !DILocation(line: 275, column: 17, scope: !2252)
!2252 = !DILexicalBlockFile(scope: !2253, file: !942, discriminator: 1)
!2253 = distinct !DILexicalBlock(scope: !2249, file: !942, line: 275, column: 5)
!2254 = !DILocation(line: 275, column: 19, scope: !2252)
!2255 = !DILocation(line: 275, column: 5, scope: !2252)
!2256 = !DILocation(line: 276, column: 40, scope: !2253)
!2257 = !DILocation(line: 276, column: 42, scope: !2253)
!2258 = !DILocation(line: 276, column: 39, scope: !2253)
!2259 = !DILocation(line: 276, column: 47, scope: !2253)
!2260 = !DILocation(line: 276, column: 52, scope: !2253)
!2261 = !DILocation(line: 276, column: 35, scope: !2253)
!2262 = !DILocation(line: 276, column: 30, scope: !2253)
!2263 = !DILocation(line: 276, column: 9, scope: !2253)
!2264 = !DILocation(line: 276, column: 14, scope: !2253)
!2265 = !DILocation(line: 276, column: 33, scope: !2253)
!2266 = !DILocation(line: 275, column: 26, scope: !2267)
!2267 = !DILexicalBlockFile(scope: !2253, file: !942, discriminator: 2)
!2268 = !DILocation(line: 275, column: 5, scope: !2267)
!2269 = distinct !{!2269, !2270}
!2270 = !DILocation(line: 275, column: 5, scope: !2241)
!2271 = !DILocation(line: 278, column: 24, scope: !2241)
!2272 = !DILocation(line: 278, column: 29, scope: !2241)
!2273 = !DILocation(line: 278, column: 5, scope: !2241)
!2274 = !DILocation(line: 278, column: 10, scope: !2241)
!2275 = !DILocation(line: 278, column: 22, scope: !2241)
!2276 = !DILocation(line: 279, column: 24, scope: !2241)
!2277 = !DILocation(line: 279, column: 29, scope: !2241)
!2278 = !DILocation(line: 279, column: 5, scope: !2241)
!2279 = !DILocation(line: 279, column: 10, scope: !2241)
!2280 = !DILocation(line: 279, column: 22, scope: !2241)
!2281 = !DILocation(line: 281, column: 5, scope: !2241)
!2282 = !DILocation(line: 281, column: 10, scope: !2241)
!2283 = !DILocation(line: 281, column: 25, scope: !2241)
!2284 = !DILocation(line: 282, column: 1, scope: !2241)
!2285 = distinct !DISubprogram(name: "dequant", scope: !942, file: !942, line: 53, type: !2286, isLocal: true, isDefinition: true, scopeLine: 54, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1617)
!2286 = !DISubroutineType(types: !2287)
!2287 = !{null, !1591, !1025, !2288}
!2288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 64, align: 64)
!2289 = !DILocalVariable(name: "out", arg: 1, scope: !2285, file: !942, line: 53, type: !1591)
!2290 = !DILocation(line: 53, column: 28, scope: !2285)
!2291 = !DILocalVariable(name: "idx", arg: 2, scope: !2285, file: !942, line: 53, type: !1025)
!2292 = !DILocation(line: 53, column: 44, scope: !2285)
!2293 = !DILocalVariable(name: "cbs", arg: 3, scope: !2285, file: !942, line: 53, type: !2288)
!2294 = !DILocation(line: 53, column: 69, scope: !2285)
!2295 = !DILocalVariable(name: "i", scope: !2285, file: !942, line: 55, type: !974)
!2296 = !DILocation(line: 55, column: 9, scope: !2285)
!2297 = !DILocation(line: 57, column: 12, scope: !2298)
!2298 = distinct !DILexicalBlock(scope: !2285, file: !942, line: 57, column: 5)
!2299 = !DILocation(line: 57, column: 10, scope: !2298)
!2300 = !DILocation(line: 57, column: 17, scope: !2301)
!2301 = !DILexicalBlockFile(scope: !2302, file: !942, discriminator: 1)
!2302 = distinct !DILexicalBlock(scope: !2298, file: !942, line: 57, column: 5)
!2303 = !DILocation(line: 57, column: 19, scope: !2301)
!2304 = !DILocation(line: 57, column: 5, scope: !2301)
!2305 = !DILocation(line: 58, column: 16, scope: !2302)
!2306 = !DILocation(line: 58, column: 24, scope: !2302)
!2307 = !DILocation(line: 58, column: 23, scope: !2302)
!2308 = !DILocation(line: 58, column: 20, scope: !2302)
!2309 = !DILocation(line: 58, column: 9, scope: !2302)
!2310 = !DILocation(line: 58, column: 31, scope: !2302)
!2311 = !DILocation(line: 58, column: 27, scope: !2302)
!2312 = !DILocation(line: 58, column: 42, scope: !2302)
!2313 = !DILocation(line: 58, column: 38, scope: !2302)
!2314 = !DILocation(line: 58, column: 37, scope: !2302)
!2315 = !DILocation(line: 58, column: 34, scope: !2302)
!2316 = !DILocation(line: 57, column: 25, scope: !2317)
!2317 = !DILexicalBlockFile(scope: !2302, file: !942, discriminator: 2)
!2318 = !DILocation(line: 57, column: 5, scope: !2317)
!2319 = distinct !{!2319, !2320}
!2320 = !DILocation(line: 57, column: 5, scope: !2285)
!2321 = !DILocation(line: 60, column: 12, scope: !2285)
!2322 = !DILocation(line: 60, column: 16, scope: !2285)
!2323 = !DILocation(line: 60, column: 5, scope: !2285)
!2324 = !DILocation(line: 60, column: 22, scope: !2285)
!2325 = !DILocation(line: 60, column: 33, scope: !2285)
!2326 = !DILocation(line: 60, column: 32, scope: !2285)
!2327 = !DILocation(line: 60, column: 29, scope: !2285)
!2328 = !DILocation(line: 61, column: 1, scope: !2285)
