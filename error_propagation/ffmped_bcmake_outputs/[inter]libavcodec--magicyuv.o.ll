; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--magicyuv.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--magicyuv.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVRational = type { i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, {}*, i32, void (%struct.MpegEncContext*)*, {}*, {}*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.MagicYUVContext = type { %struct.AVFrame*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, [4 x i32], [4 x i32], [4 x %struct.Slice*], [4 x i32], [4 x [4096 x i8]], [4 x %struct.VLC], i32 (%struct.VLC*, i8*)*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, %struct.LLVidDSPContext }
%struct.Slice = type { i32, i32 }
%struct.VLC = type { i32, [2 x i16]*, i32, i32 }
%struct.LLVidDSPContext = type { void (i8*, i8*, i64)*, void (i8*, i8*, i8*, i64, i32*, i32*)*, i32 (i8*, i8*, i64, i32)*, i32 (i16*, i16*, i32, i64, i32)*, void (i8*, i64, i64)* }
%struct.GetByteContext = type { i8*, i8*, i8* }
%struct.ThreadFrame = type { %struct.AVFrame*, [2 x %struct.AVCodecContext*], %struct.AVBufferRef* }
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%union.unaligned_32 = type { i32 }
%struct.HuffEntry = type { i16, i8, i32 }

@.str = private unnamed_addr constant [9 x i8] c"magicyuv\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"MagicYUV video\00", align 1
@ff_magicyuv_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i32 0, i32 0), i32 0, i32 32787, i32 12290, %struct.AVRational* null, i32* null, i32* null, i32* null, i64* null, i8 0, %struct.AVClass* null, %struct.AVProfile* null, i8* null, i32 16672, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* @magy_init_thread_copy, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @magy_decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @magy_decode_frame, i32 (%struct.AVCodecContext*)* @magy_decode_end, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* null, i32 1, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.2 = private unnamed_addr constant [31 x i8] c"header or packet too small %u\0A\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"Version %d\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"Format 0x%X\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"Slice width %u\00", align 1
@.str.6 = private unnamed_addr constant [26 x i8] c"invalid slice height: %d\0A\00", align 1
@.str.7 = private unnamed_addr constant [30 x i8] c"invalid number of slices: %d\0A\00", align 1
@.str.8 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.9 = private unnamed_addr constant [14 x i8] c"buf_size >= 0\00", align 1
@.str.10 = private unnamed_addr constant [24 x i8] c"libavcodec/bytestream.h\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"Unknown prediction: %d\00", align 1
@.str.12 = private unnamed_addr constant [28 x i8] c"Cannot build Huffman codes\0A\00", align 1
@.str.13 = private unnamed_addr constant [23 x i8] c"Invalid Huffman codes\0A\00", align 1
@.str.14 = private unnamed_addr constant [26 x i8] c"Huffman tables too short\0A\00", align 1

; Function Attrs: nounwind uwtable
define internal i32 @magy_init_thread_copy(%struct.AVCodecContext* %avctx) #0 !dbg !1634 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.MagicYUVContext*, align 8
  %i = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !1636, metadata !1637), !dbg !1638
  call void @llvm.dbg.declare(metadata %struct.MagicYUVContext** %s, metadata !1639, metadata !1637), !dbg !1725
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1726
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !1727
  %1 = load i8*, i8** %priv_data, align 8, !dbg !1727
  %2 = bitcast i8* %1 to %struct.MagicYUVContext*, !dbg !1726
  store %struct.MagicYUVContext* %2, %struct.MagicYUVContext** %s, align 8, !dbg !1725
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1728, metadata !1637), !dbg !1729
  store i32 0, i32* %i, align 4, !dbg !1730
  br label %for.cond, !dbg !1732

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !1733
  %conv = sext i32 %3 to i64, !dbg !1733
  %cmp = icmp ult i64 %conv, 4, !dbg !1736
  br i1 %cmp, label %for.body, label %for.end, !dbg !1737

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %i, align 4, !dbg !1738
  %idxprom = sext i32 %4 to i64, !dbg !1740
  %5 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !1740
  %slices = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %5, i32 0, i32 13, !dbg !1741
  %arrayidx = getelementptr inbounds [4 x %struct.Slice*], [4 x %struct.Slice*]* %slices, i64 0, i64 %idxprom, !dbg !1740
  store %struct.Slice* null, %struct.Slice** %arrayidx, align 8, !dbg !1742
  %6 = load i32, i32* %i, align 4, !dbg !1743
  %idxprom2 = sext i32 %6 to i64, !dbg !1744
  %7 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !1744
  %slices_size = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %7, i32 0, i32 14, !dbg !1745
  %arrayidx3 = getelementptr inbounds [4 x i32], [4 x i32]* %slices_size, i64 0, i64 %idxprom2, !dbg !1744
  store i32 0, i32* %arrayidx3, align 4, !dbg !1746
  br label %for.inc, !dbg !1747

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !1748
  %inc = add nsw i32 %8, 1, !dbg !1748
  store i32 %inc, i32* %i, align 4, !dbg !1748
  br label %for.cond, !dbg !1750, !llvm.loop !1751

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !1753
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @magy_decode_init(%struct.AVCodecContext* %avctx) #1 !dbg !1754 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.MagicYUVContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !1755, metadata !1637), !dbg !1756
  call void @llvm.dbg.declare(metadata %struct.MagicYUVContext** %s, metadata !1757, metadata !1637), !dbg !1758
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1759
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !1760
  %1 = load i8*, i8** %priv_data, align 8, !dbg !1760
  %2 = bitcast i8* %1 to %struct.MagicYUVContext*, !dbg !1759
  store %struct.MagicYUVContext* %2, %struct.MagicYUVContext** %s, align 8, !dbg !1758
  %3 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !1761
  %llviddsp = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %3, i32 0, i32 19, !dbg !1762
  call void @ff_llviddsp_init(%struct.LLVidDSPContext* %llviddsp), !dbg !1763
  ret i32 0, !dbg !1764
}

; Function Attrs: nounwind uwtable
define internal i32 @magy_decode_frame(%struct.AVCodecContext* %avctx, i8* %data, i32* %got_frame, %struct.AVPacket* %avpkt) #0 !dbg !1765 {
entry:
  %b.addr.i.i.i589 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i589, metadata !1766, metadata !1637), !dbg !1772
  %g.addr.i.i590 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i590, metadata !1788, metadata !1637), !dbg !1789
  %retval.i591 = alloca i32, align 4
  %g.addr.i592 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i592, metadata !1790, metadata !1637), !dbg !1791
  %b.addr.i.i.i570 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i570, metadata !1766, metadata !1637), !dbg !1792
  %g.addr.i.i571 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i571, metadata !1788, metadata !1637), !dbg !1796
  %retval.i572 = alloca i32, align 4
  %g.addr.i573 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i573, metadata !1790, metadata !1637), !dbg !1797
  %g.addr.i549 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i549, metadata !1798, metadata !1637), !dbg !1802
  %size.addr.i550 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i550, metadata !1804, metadata !1637), !dbg !1805
  %b.addr.i.i.i530 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i530, metadata !1806, metadata !1637), !dbg !1808
  %g.addr.i.i531 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i531, metadata !1815, metadata !1637), !dbg !1816
  %retval.i532 = alloca i32, align 4
  %g.addr.i533 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i533, metadata !1817, metadata !1637), !dbg !1818
  %b.addr.i.i.i511 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i511, metadata !1806, metadata !1637), !dbg !1819
  %g.addr.i.i512 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i512, metadata !1815, metadata !1637), !dbg !1823
  %retval.i513 = alloca i32, align 4
  %g.addr.i514 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i514, metadata !1817, metadata !1637), !dbg !1824
  %b.addr.i.i.i492 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i492, metadata !1806, metadata !1637), !dbg !1825
  %g.addr.i.i493 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i493, metadata !1815, metadata !1637), !dbg !1829
  %retval.i494 = alloca i32, align 4
  %g.addr.i495 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i495, metadata !1817, metadata !1637), !dbg !1830
  %b.addr.i.i.i473 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i473, metadata !1806, metadata !1637), !dbg !1831
  %g.addr.i.i474 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i474, metadata !1815, metadata !1637), !dbg !1835
  %retval.i475 = alloca i32, align 4
  %g.addr.i476 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i476, metadata !1817, metadata !1637), !dbg !1836
  %g.addr.i452 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i452, metadata !1798, metadata !1637), !dbg !1837
  %size.addr.i453 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i453, metadata !1804, metadata !1637), !dbg !1839
  %b.addr.i.i.i433 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i433, metadata !1806, metadata !1637), !dbg !1840
  %g.addr.i.i434 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i434, metadata !1815, metadata !1637), !dbg !1847
  %retval.i435 = alloca i32, align 4
  %g.addr.i436 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i436, metadata !1817, metadata !1637), !dbg !1848
  %b.addr.i.i.i414 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i414, metadata !1806, metadata !1637), !dbg !1849
  %g.addr.i.i415 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i415, metadata !1815, metadata !1637), !dbg !1856
  %retval.i416 = alloca i32, align 4
  %g.addr.i417 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i417, metadata !1817, metadata !1637), !dbg !1857
  %b.addr.i.i.i395 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i395, metadata !1766, metadata !1637), !dbg !1858
  %g.addr.i.i396 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i396, metadata !1788, metadata !1637), !dbg !1863
  %retval.i397 = alloca i32, align 4
  %g.addr.i398 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i398, metadata !1790, metadata !1637), !dbg !1864
  %g.addr.i374 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i374, metadata !1798, metadata !1637), !dbg !1865
  %size.addr.i375 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i375, metadata !1804, metadata !1637), !dbg !1867
  %g.addr.i367 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i367, metadata !1868, metadata !1637), !dbg !1872
  %g.addr.i360 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i360, metadata !1868, metadata !1637), !dbg !1874
  %g.addr.i352 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i352, metadata !1798, metadata !1637), !dbg !1876
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !1804, metadata !1637), !dbg !1878
  %b.addr.i.i.i333 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i333, metadata !1766, metadata !1637), !dbg !1879
  %g.addr.i.i334 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i334, metadata !1788, metadata !1637), !dbg !1883
  %retval.i335 = alloca i32, align 4
  %g.addr.i336 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i336, metadata !1790, metadata !1637), !dbg !1884
  %b.addr.i.i.i316 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i316, metadata !1766, metadata !1637), !dbg !1885
  %g.addr.i.i317 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i317, metadata !1788, metadata !1637), !dbg !1889
  %retval.i318 = alloca i32, align 4
  %g.addr.i319 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i319, metadata !1790, metadata !1637), !dbg !1890
  %b.addr.i.i.i297 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i297, metadata !1806, metadata !1637), !dbg !1891
  %g.addr.i.i298 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i298, metadata !1815, metadata !1637), !dbg !1895
  %retval.i299 = alloca i32, align 4
  %g.addr.i300 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i300, metadata !1817, metadata !1637), !dbg !1896
  %b.addr.i.i.i = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i, metadata !1806, metadata !1637), !dbg !1897
  %g.addr.i.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i, metadata !1815, metadata !1637), !dbg !1902
  %retval.i = alloca i32, align 4
  %g.addr.i292 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i292, metadata !1817, metadata !1637), !dbg !1903
  %g.addr.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i, metadata !1904, metadata !1637), !dbg !1908
  %buf.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr.i, metadata !1910, metadata !1637), !dbg !1911
  %buf_size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr.i, metadata !1912, metadata !1637), !dbg !1913
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %data.addr = alloca i8*, align 8
  %got_frame.addr = alloca i32*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %s = alloca %struct.MagicYUVContext*, align 8
  %frame = alloca %struct.ThreadFrame, align 8
  %p = alloca %struct.AVFrame*, align 8
  %gbyte = alloca %struct.GetByteContext, align 8
  %gbit = alloca %struct.GetBitContext, align 8
  %first_offset = alloca i32, align 4
  %offset = alloca i32, align 4
  %next_offset = alloca i32, align 4
  %header_size = alloca i32, align 4
  %slice_width = alloca i32, align 4
  %width = alloca i32, align 4
  %height = alloca i32, align 4
  %format = alloca i32, align 4
  %version = alloca i32, align 4
  %table_size = alloca i32, align 4
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %SWAP_tmp = alloca i8*, align 8
  %SWAP_tmp273 = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !1914, metadata !1637), !dbg !1915
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !1916, metadata !1637), !dbg !1917
  store i32* %got_frame, i32** %got_frame.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame.addr, metadata !1918, metadata !1637), !dbg !1919
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !1920, metadata !1637), !dbg !1921
  call void @llvm.dbg.declare(metadata %struct.MagicYUVContext** %s, metadata !1922, metadata !1637), !dbg !1923
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1924
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !1925
  %1 = load i8*, i8** %priv_data, align 8, !dbg !1925
  %2 = bitcast i8* %1 to %struct.MagicYUVContext*, !dbg !1924
  store %struct.MagicYUVContext* %2, %struct.MagicYUVContext** %s, align 8, !dbg !1923
  call void @llvm.dbg.declare(metadata %struct.ThreadFrame* %frame, metadata !1926, metadata !1637), !dbg !1935
  %3 = bitcast %struct.ThreadFrame* %frame to i8*, !dbg !1935
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 32, i32 8, i1 false), !dbg !1935
  %f = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %frame, i32 0, i32 0, !dbg !1936
  %4 = load i8*, i8** %data.addr, align 8, !dbg !1937
  %5 = bitcast i8* %4 to %struct.AVFrame*, !dbg !1937
  store %struct.AVFrame* %5, %struct.AVFrame** %f, align 8, !dbg !1936
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %p, metadata !1938, metadata !1637), !dbg !1939
  %6 = load i8*, i8** %data.addr, align 8, !dbg !1940
  %7 = bitcast i8* %6 to %struct.AVFrame*, !dbg !1940
  store %struct.AVFrame* %7, %struct.AVFrame** %p, align 8, !dbg !1939
  call void @llvm.dbg.declare(metadata %struct.GetByteContext* %gbyte, metadata !1941, metadata !1637), !dbg !1942
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gbit, metadata !1943, metadata !1637), !dbg !1953
  call void @llvm.dbg.declare(metadata i32* %first_offset, metadata !1954, metadata !1637), !dbg !1955
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !1956, metadata !1637), !dbg !1957
  call void @llvm.dbg.declare(metadata i32* %next_offset, metadata !1958, metadata !1637), !dbg !1959
  call void @llvm.dbg.declare(metadata i32* %header_size, metadata !1960, metadata !1637), !dbg !1961
  call void @llvm.dbg.declare(metadata i32* %slice_width, metadata !1962, metadata !1637), !dbg !1963
  call void @llvm.dbg.declare(metadata i32* %width, metadata !1964, metadata !1637), !dbg !1965
  call void @llvm.dbg.declare(metadata i32* %height, metadata !1966, metadata !1637), !dbg !1967
  call void @llvm.dbg.declare(metadata i32* %format, metadata !1968, metadata !1637), !dbg !1969
  call void @llvm.dbg.declare(metadata i32* %version, metadata !1970, metadata !1637), !dbg !1971
  call void @llvm.dbg.declare(metadata i32* %table_size, metadata !1972, metadata !1637), !dbg !1973
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1974, metadata !1637), !dbg !1975
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1976, metadata !1637), !dbg !1977
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1978, metadata !1637), !dbg !1979
  %8 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !1980
  %data1 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %8, i32 0, i32 3, !dbg !1981
  %9 = load i8*, i8** %data1, align 8, !dbg !1981
  %10 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !1982
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %10, i32 0, i32 4, !dbg !1983
  %11 = load i32, i32* %size, align 8, !dbg !1983
  store %struct.GetByteContext* %gbyte, %struct.GetByteContext** %g.addr.i, align 8, !dbg !1984
  store i8* %9, i8** %buf.addr.i, align 8, !dbg !1984
  store i32 %11, i32* %buf_size.addr.i, align 4, !dbg !1984
  %12 = load i32, i32* %buf_size.addr.i, align 4, !dbg !1985
  %cmp.i = icmp sge i32 %12, 0, !dbg !1989
  br i1 %cmp.i, label %bytestream2_init.exit, label %if.then.i, !dbg !1990

if.then.i:                                        ; preds = %entry
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i32 0, i32 0), i32 137) #8, !dbg !1991
  call void @abort() #9, !dbg !1994
  unreachable, !dbg !1996

bytestream2_init.exit:                            ; preds = %entry
  %13 = load i8*, i8** %buf.addr.i, align 8, !dbg !1997
  %14 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !1998
  %buffer.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %14, i32 0, i32 0, !dbg !1999
  store i8* %13, i8** %buffer.i, align 8, !dbg !2000
  %15 = load i8*, i8** %buf.addr.i, align 8, !dbg !2001
  %16 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !2002
  %buffer_start.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %16, i32 0, i32 2, !dbg !2003
  store i8* %15, i8** %buffer_start.i, align 8, !dbg !2004
  %17 = load i8*, i8** %buf.addr.i, align 8, !dbg !2005
  %18 = load i32, i32* %buf_size.addr.i, align 4, !dbg !2006
  %idx.ext.i = sext i32 %18 to i64, !dbg !2007
  %add.ptr.i = getelementptr inbounds i8, i8* %17, i64 %idx.ext.i, !dbg !2007
  %19 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !2008
  %buffer_end.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %19, i32 0, i32 1, !dbg !2009
  store i8* %add.ptr.i, i8** %buffer_end.i, align 8, !dbg !2010
  store %struct.GetByteContext* %gbyte, %struct.GetByteContext** %g.addr.i292, align 8, !dbg !2011
  %20 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i292, align 8, !dbg !2012
  %buffer_end.i293 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %20, i32 0, i32 1, !dbg !2014
  %21 = load i8*, i8** %buffer_end.i293, align 8, !dbg !2014
  %22 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i292, align 8, !dbg !2015
  %buffer.i294 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %22, i32 0, i32 0, !dbg !2016
  %23 = load i8*, i8** %buffer.i294, align 8, !dbg !2016
  %sub.ptr.lhs.cast.i = ptrtoint i8* %21 to i64, !dbg !2017
  %sub.ptr.rhs.cast.i = ptrtoint i8* %23 to i64, !dbg !2017
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i, !dbg !2017
  %cmp.i295 = icmp slt i64 %sub.ptr.sub.i, 4, !dbg !2018
  br i1 %cmp.i295, label %if.then.i296, label %if.end.i, !dbg !2019

if.then.i296:                                     ; preds = %bytestream2_init.exit
  %24 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i292, align 8, !dbg !2020
  %buffer_end1.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %24, i32 0, i32 1, !dbg !2023
  %25 = load i8*, i8** %buffer_end1.i, align 8, !dbg !2023
  %26 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i292, align 8, !dbg !2024
  %buffer2.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %26, i32 0, i32 0, !dbg !2025
  store i8* %25, i8** %buffer2.i, align 8, !dbg !2026
  store i32 0, i32* %retval.i, align 4, !dbg !2027
  br label %bytestream2_get_le32.exit, !dbg !2027

if.end.i:                                         ; preds = %bytestream2_init.exit
  %27 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i292, align 8, !dbg !2028
  store %struct.GetByteContext* %27, %struct.GetByteContext** %g.addr.i.i, align 8, !dbg !2029
  %28 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i, align 8, !dbg !2030
  %buffer.i.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %28, i32 0, i32 0, !dbg !2031
  store i8** %buffer.i.i, i8*** %b.addr.i.i.i, align 8, !dbg !2032
  %29 = load i8**, i8*** %b.addr.i.i.i, align 8, !dbg !2033
  %30 = load i8*, i8** %29, align 8, !dbg !2034
  %add.ptr.i.i.i = getelementptr inbounds i8, i8* %30, i64 4, !dbg !2034
  store i8* %add.ptr.i.i.i, i8** %29, align 8, !dbg !2034
  %31 = load i8**, i8*** %b.addr.i.i.i, align 8, !dbg !2035
  %32 = load i8*, i8** %31, align 8, !dbg !2036
  %add.ptr1.i.i.i = getelementptr inbounds i8, i8* %32, i64 -4, !dbg !2037
  %33 = bitcast i8* %add.ptr1.i.i.i to %union.unaligned_32*, !dbg !2038
  %l.i.i.i = bitcast %union.unaligned_32* %33 to i32*, !dbg !2038
  %34 = load i32, i32* %l.i.i.i, align 1, !dbg !2038
  store i32 %34, i32* %retval.i, align 4, !dbg !2039
  br label %bytestream2_get_le32.exit, !dbg !2039

bytestream2_get_le32.exit:                        ; preds = %if.then.i296, %if.end.i
  %35 = load i32, i32* %retval.i, align 4, !dbg !2040
  %cmp = icmp ne i32 %35, 1497841997, !dbg !2042
  br i1 %cmp, label %if.then, label %if.end, !dbg !2043

if.then:                                          ; preds = %bytestream2_get_le32.exit
  store i32 -1094995529, i32* %retval, align 4, !dbg !2044
  br label %return, !dbg !2044

if.end:                                           ; preds = %bytestream2_get_le32.exit
  store %struct.GetByteContext* %gbyte, %struct.GetByteContext** %g.addr.i300, align 8, !dbg !2045
  %36 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i300, align 8, !dbg !2046
  %buffer_end.i301 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %36, i32 0, i32 1, !dbg !2047
  %37 = load i8*, i8** %buffer_end.i301, align 8, !dbg !2047
  %38 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i300, align 8, !dbg !2048
  %buffer.i302 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %38, i32 0, i32 0, !dbg !2049
  %39 = load i8*, i8** %buffer.i302, align 8, !dbg !2049
  %sub.ptr.lhs.cast.i303 = ptrtoint i8* %37 to i64, !dbg !2050
  %sub.ptr.rhs.cast.i304 = ptrtoint i8* %39 to i64, !dbg !2050
  %sub.ptr.sub.i305 = sub i64 %sub.ptr.lhs.cast.i303, %sub.ptr.rhs.cast.i304, !dbg !2050
  %cmp.i306 = icmp slt i64 %sub.ptr.sub.i305, 4, !dbg !2051
  br i1 %cmp.i306, label %if.then.i309, label %if.end.i314, !dbg !2052

if.then.i309:                                     ; preds = %if.end
  %40 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i300, align 8, !dbg !2053
  %buffer_end1.i307 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %40, i32 0, i32 1, !dbg !2054
  %41 = load i8*, i8** %buffer_end1.i307, align 8, !dbg !2054
  %42 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i300, align 8, !dbg !2055
  %buffer2.i308 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %42, i32 0, i32 0, !dbg !2056
  store i8* %41, i8** %buffer2.i308, align 8, !dbg !2057
  store i32 0, i32* %retval.i299, align 4, !dbg !2058
  br label %bytestream2_get_le32.exit315, !dbg !2058

if.end.i314:                                      ; preds = %if.end
  %43 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i300, align 8, !dbg !2059
  store %struct.GetByteContext* %43, %struct.GetByteContext** %g.addr.i.i298, align 8, !dbg !2060
  %44 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i298, align 8, !dbg !2061
  %buffer.i.i310 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %44, i32 0, i32 0, !dbg !2062
  store i8** %buffer.i.i310, i8*** %b.addr.i.i.i297, align 8, !dbg !2063
  %45 = load i8**, i8*** %b.addr.i.i.i297, align 8, !dbg !2064
  %46 = load i8*, i8** %45, align 8, !dbg !2065
  %add.ptr.i.i.i311 = getelementptr inbounds i8, i8* %46, i64 4, !dbg !2065
  store i8* %add.ptr.i.i.i311, i8** %45, align 8, !dbg !2065
  %47 = load i8**, i8*** %b.addr.i.i.i297, align 8, !dbg !2066
  %48 = load i8*, i8** %47, align 8, !dbg !2067
  %add.ptr1.i.i.i312 = getelementptr inbounds i8, i8* %48, i64 -4, !dbg !2068
  %49 = bitcast i8* %add.ptr1.i.i.i312 to %union.unaligned_32*, !dbg !2069
  %l.i.i.i313 = bitcast %union.unaligned_32* %49 to i32*, !dbg !2069
  %50 = load i32, i32* %l.i.i.i313, align 1, !dbg !2069
  store i32 %50, i32* %retval.i299, align 4, !dbg !2070
  br label %bytestream2_get_le32.exit315, !dbg !2070

bytestream2_get_le32.exit315:                     ; preds = %if.then.i309, %if.end.i314
  %51 = load i32, i32* %retval.i299, align 4, !dbg !2071
  store i32 %51, i32* %header_size, align 4, !dbg !2072
  %52 = load i32, i32* %header_size, align 4, !dbg !2073
  %cmp3 = icmp ult i32 %52, 32, !dbg !2075
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !2076

lor.lhs.false:                                    ; preds = %bytestream2_get_le32.exit315
  %53 = load i32, i32* %header_size, align 4, !dbg !2077
  %54 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2079
  %size4 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %54, i32 0, i32 4, !dbg !2080
  %55 = load i32, i32* %size4, align 8, !dbg !2080
  %cmp5 = icmp uge i32 %53, %55, !dbg !2081
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !2082

if.then6:                                         ; preds = %lor.lhs.false, %bytestream2_get_le32.exit315
  %56 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2083
  %57 = bitcast %struct.AVCodecContext* %56 to i8*, !dbg !2083
  %58 = load i32, i32* %header_size, align 4, !dbg !2085
  call void (i8*, i32, i8*, ...) @av_log(i8* %57, i32 16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i32 0, i32 0), i32 %58), !dbg !2086
  store i32 -1094995529, i32* %retval, align 4, !dbg !2087
  br label %return, !dbg !2087

if.end7:                                          ; preds = %lor.lhs.false
  store %struct.GetByteContext* %gbyte, %struct.GetByteContext** %g.addr.i319, align 8, !dbg !2088
  %59 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i319, align 8, !dbg !2089
  %buffer_end.i320 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %59, i32 0, i32 1, !dbg !2091
  %60 = load i8*, i8** %buffer_end.i320, align 8, !dbg !2091
  %61 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i319, align 8, !dbg !2092
  %buffer.i321 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %61, i32 0, i32 0, !dbg !2093
  %62 = load i8*, i8** %buffer.i321, align 8, !dbg !2093
  %sub.ptr.lhs.cast.i322 = ptrtoint i8* %60 to i64, !dbg !2094
  %sub.ptr.rhs.cast.i323 = ptrtoint i8* %62 to i64, !dbg !2094
  %sub.ptr.sub.i324 = sub i64 %sub.ptr.lhs.cast.i322, %sub.ptr.rhs.cast.i323, !dbg !2094
  %cmp.i325 = icmp slt i64 %sub.ptr.sub.i324, 1, !dbg !2095
  br i1 %cmp.i325, label %if.then.i328, label %if.end.i332, !dbg !2096

if.then.i328:                                     ; preds = %if.end7
  %63 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i319, align 8, !dbg !2097
  %buffer_end1.i326 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %63, i32 0, i32 1, !dbg !2100
  %64 = load i8*, i8** %buffer_end1.i326, align 8, !dbg !2100
  %65 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i319, align 8, !dbg !2101
  %buffer2.i327 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %65, i32 0, i32 0, !dbg !2102
  store i8* %64, i8** %buffer2.i327, align 8, !dbg !2103
  store i32 0, i32* %retval.i318, align 4, !dbg !2104
  br label %bytestream2_get_byte.exit, !dbg !2104

if.end.i332:                                      ; preds = %if.end7
  %66 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i319, align 8, !dbg !2105
  store %struct.GetByteContext* %66, %struct.GetByteContext** %g.addr.i.i317, align 8, !dbg !2106
  %67 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i317, align 8, !dbg !2107
  %buffer.i.i329 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %67, i32 0, i32 0, !dbg !2108
  store i8** %buffer.i.i329, i8*** %b.addr.i.i.i316, align 8, !dbg !2109
  %68 = load i8**, i8*** %b.addr.i.i.i316, align 8, !dbg !2110
  %69 = load i8*, i8** %68, align 8, !dbg !2111
  %add.ptr.i.i.i330 = getelementptr inbounds i8, i8* %69, i64 1, !dbg !2111
  store i8* %add.ptr.i.i.i330, i8** %68, align 8, !dbg !2111
  %70 = load i8**, i8*** %b.addr.i.i.i316, align 8, !dbg !2112
  %71 = load i8*, i8** %70, align 8, !dbg !2113
  %add.ptr1.i.i.i331 = getelementptr inbounds i8, i8* %71, i64 -1, !dbg !2114
  %72 = load i8, i8* %add.ptr1.i.i.i331, align 1, !dbg !2115
  %conv.i.i.i = zext i8 %72 to i32, !dbg !2116
  store i32 %conv.i.i.i, i32* %retval.i318, align 4, !dbg !2117
  br label %bytestream2_get_byte.exit, !dbg !2117

bytestream2_get_byte.exit:                        ; preds = %if.then.i328, %if.end.i332
  %73 = load i32, i32* %retval.i318, align 4, !dbg !2118
  store i32 %73, i32* %version, align 4, !dbg !2120
  %74 = load i32, i32* %version, align 4, !dbg !2121
  %cmp9 = icmp ne i32 %74, 7, !dbg !2123
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !2124

if.then10:                                        ; preds = %bytestream2_get_byte.exit
  %75 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2125
  %76 = bitcast %struct.AVCodecContext* %75 to i8*, !dbg !2125
  %77 = load i32, i32* %version, align 4, !dbg !2127
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %76, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0), i32 %77), !dbg !2128
  store i32 -1163346256, i32* %retval, align 4, !dbg !2129
  br label %return, !dbg !2129

if.end11:                                         ; preds = %bytestream2_get_byte.exit
  %78 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2130
  %vshift = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %78, i32 0, i32 12, !dbg !2131
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %vshift, i64 0, i64 2, !dbg !2130
  store i32 0, i32* %arrayidx, align 8, !dbg !2132
  %79 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2133
  %hshift = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %79, i32 0, i32 11, !dbg !2134
  %arrayidx12 = getelementptr inbounds [4 x i32], [4 x i32]* %hshift, i64 0, i64 2, !dbg !2133
  store i32 0, i32* %arrayidx12, align 8, !dbg !2135
  %80 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2136
  %vshift13 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %80, i32 0, i32 12, !dbg !2137
  %arrayidx14 = getelementptr inbounds [4 x i32], [4 x i32]* %vshift13, i64 0, i64 1, !dbg !2136
  store i32 0, i32* %arrayidx14, align 4, !dbg !2138
  %81 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2139
  %hshift15 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %81, i32 0, i32 11, !dbg !2140
  %arrayidx16 = getelementptr inbounds [4 x i32], [4 x i32]* %hshift15, i64 0, i64 1, !dbg !2139
  store i32 0, i32* %arrayidx16, align 4, !dbg !2141
  %82 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2142
  %decorrelate = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %82, i32 0, i32 6, !dbg !2143
  store i32 0, i32* %decorrelate, align 4, !dbg !2144
  %83 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2145
  %max = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %83, i32 0, i32 1, !dbg !2146
  store i32 256, i32* %max, align 8, !dbg !2147
  %84 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2148
  %bps = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %84, i32 0, i32 2, !dbg !2149
  store i32 8, i32* %bps, align 4, !dbg !2150
  %85 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2151
  %huff_build = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %85, i32 0, i32 17, !dbg !2152
  store i32 (%struct.VLC*, i8*)* @huff_build, i32 (%struct.VLC*, i8*)** %huff_build, align 8, !dbg !2153
  %86 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2154
  %magy_decode_slice = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %86, i32 0, i32 18, !dbg !2155
  store i32 (%struct.AVCodecContext*, i8*, i32, i32)* @magy_decode_slice, i32 (%struct.AVCodecContext*, i8*, i32, i32)** %magy_decode_slice, align 8, !dbg !2156
  store %struct.GetByteContext* %gbyte, %struct.GetByteContext** %g.addr.i336, align 8, !dbg !2157
  %87 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i336, align 8, !dbg !2158
  %buffer_end.i337 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %87, i32 0, i32 1, !dbg !2159
  %88 = load i8*, i8** %buffer_end.i337, align 8, !dbg !2159
  %89 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i336, align 8, !dbg !2160
  %buffer.i338 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %89, i32 0, i32 0, !dbg !2161
  %90 = load i8*, i8** %buffer.i338, align 8, !dbg !2161
  %sub.ptr.lhs.cast.i339 = ptrtoint i8* %88 to i64, !dbg !2162
  %sub.ptr.rhs.cast.i340 = ptrtoint i8* %90 to i64, !dbg !2162
  %sub.ptr.sub.i341 = sub i64 %sub.ptr.lhs.cast.i339, %sub.ptr.rhs.cast.i340, !dbg !2162
  %cmp.i342 = icmp slt i64 %sub.ptr.sub.i341, 1, !dbg !2163
  br i1 %cmp.i342, label %if.then.i345, label %if.end.i350, !dbg !2164

if.then.i345:                                     ; preds = %if.end11
  %91 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i336, align 8, !dbg !2165
  %buffer_end1.i343 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %91, i32 0, i32 1, !dbg !2166
  %92 = load i8*, i8** %buffer_end1.i343, align 8, !dbg !2166
  %93 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i336, align 8, !dbg !2167
  %buffer2.i344 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %93, i32 0, i32 0, !dbg !2168
  store i8* %92, i8** %buffer2.i344, align 8, !dbg !2169
  store i32 0, i32* %retval.i335, align 4, !dbg !2170
  br label %bytestream2_get_byte.exit351, !dbg !2170

if.end.i350:                                      ; preds = %if.end11
  %94 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i336, align 8, !dbg !2171
  store %struct.GetByteContext* %94, %struct.GetByteContext** %g.addr.i.i334, align 8, !dbg !2172
  %95 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i334, align 8, !dbg !2173
  %buffer.i.i346 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %95, i32 0, i32 0, !dbg !2174
  store i8** %buffer.i.i346, i8*** %b.addr.i.i.i333, align 8, !dbg !2175
  %96 = load i8**, i8*** %b.addr.i.i.i333, align 8, !dbg !2176
  %97 = load i8*, i8** %96, align 8, !dbg !2177
  %add.ptr.i.i.i347 = getelementptr inbounds i8, i8* %97, i64 1, !dbg !2177
  store i8* %add.ptr.i.i.i347, i8** %96, align 8, !dbg !2177
  %98 = load i8**, i8*** %b.addr.i.i.i333, align 8, !dbg !2178
  %99 = load i8*, i8** %98, align 8, !dbg !2179
  %add.ptr1.i.i.i348 = getelementptr inbounds i8, i8* %99, i64 -1, !dbg !2180
  %100 = load i8, i8* %add.ptr1.i.i.i348, align 1, !dbg !2181
  %conv.i.i.i349 = zext i8 %100 to i32, !dbg !2182
  store i32 %conv.i.i.i349, i32* %retval.i335, align 4, !dbg !2183
  br label %bytestream2_get_byte.exit351, !dbg !2183

bytestream2_get_byte.exit351:                     ; preds = %if.then.i345, %if.end.i350
  %101 = load i32, i32* %retval.i335, align 4, !dbg !2184
  store i32 %101, i32* %format, align 4, !dbg !2185
  %102 = load i32, i32* %format, align 4, !dbg !2186
  switch i32 %102, label %sw.default [
    i32 101, label %sw.bb
    i32 102, label %sw.bb19
    i32 103, label %sw.bb22
    i32 104, label %sw.bb24
    i32 105, label %sw.bb30
    i32 106, label %sw.bb40
    i32 107, label %sw.bb42
    i32 108, label %sw.bb44
    i32 109, label %sw.bb54
    i32 110, label %sw.bb61
    i32 111, label %sw.bb68
    i32 112, label %sw.bb75
    i32 115, label %sw.bb82
  ], !dbg !2187

sw.bb:                                            ; preds = %bytestream2_get_byte.exit351
  %103 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2188
  %pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %103, i32 0, i32 25, !dbg !2190
  store i32 73, i32* %pix_fmt, align 8, !dbg !2191
  %104 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2192
  %decorrelate18 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %104, i32 0, i32 6, !dbg !2193
  store i32 1, i32* %decorrelate18, align 4, !dbg !2194
  br label %sw.epilog, !dbg !2195

sw.bb19:                                          ; preds = %bytestream2_get_byte.exit351
  %105 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2196
  %pix_fmt20 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %105, i32 0, i32 25, !dbg !2197
  store i32 113, i32* %pix_fmt20, align 8, !dbg !2198
  %106 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2199
  %decorrelate21 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %106, i32 0, i32 6, !dbg !2200
  store i32 1, i32* %decorrelate21, align 4, !dbg !2201
  br label %sw.epilog, !dbg !2202

sw.bb22:                                          ; preds = %bytestream2_get_byte.exit351
  %107 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2203
  %pix_fmt23 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %107, i32 0, i32 25, !dbg !2204
  store i32 5, i32* %pix_fmt23, align 8, !dbg !2205
  br label %sw.epilog, !dbg !2206

sw.bb24:                                          ; preds = %bytestream2_get_byte.exit351
  %108 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2207
  %pix_fmt25 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %108, i32 0, i32 25, !dbg !2208
  store i32 4, i32* %pix_fmt25, align 8, !dbg !2209
  %109 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2210
  %hshift26 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %109, i32 0, i32 11, !dbg !2211
  %arrayidx27 = getelementptr inbounds [4 x i32], [4 x i32]* %hshift26, i64 0, i64 2, !dbg !2210
  store i32 1, i32* %arrayidx27, align 8, !dbg !2212
  %110 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2213
  %hshift28 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %110, i32 0, i32 11, !dbg !2214
  %arrayidx29 = getelementptr inbounds [4 x i32], [4 x i32]* %hshift28, i64 0, i64 1, !dbg !2213
  store i32 1, i32* %arrayidx29, align 4, !dbg !2215
  br label %sw.epilog, !dbg !2216

sw.bb30:                                          ; preds = %bytestream2_get_byte.exit351
  %111 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2217
  %pix_fmt31 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %111, i32 0, i32 25, !dbg !2218
  store i32 0, i32* %pix_fmt31, align 8, !dbg !2219
  %112 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2220
  %vshift32 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %112, i32 0, i32 12, !dbg !2221
  %arrayidx33 = getelementptr inbounds [4 x i32], [4 x i32]* %vshift32, i64 0, i64 2, !dbg !2220
  store i32 1, i32* %arrayidx33, align 8, !dbg !2222
  %113 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2223
  %hshift34 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %113, i32 0, i32 11, !dbg !2224
  %arrayidx35 = getelementptr inbounds [4 x i32], [4 x i32]* %hshift34, i64 0, i64 2, !dbg !2223
  store i32 1, i32* %arrayidx35, align 8, !dbg !2225
  %114 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2226
  %vshift36 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %114, i32 0, i32 12, !dbg !2227
  %arrayidx37 = getelementptr inbounds [4 x i32], [4 x i32]* %vshift36, i64 0, i64 1, !dbg !2226
  store i32 1, i32* %arrayidx37, align 4, !dbg !2228
  %115 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2229
  %hshift38 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %115, i32 0, i32 11, !dbg !2230
  %arrayidx39 = getelementptr inbounds [4 x i32], [4 x i32]* %hshift38, i64 0, i64 1, !dbg !2229
  store i32 1, i32* %arrayidx39, align 4, !dbg !2231
  br label %sw.epilog, !dbg !2232

sw.bb40:                                          ; preds = %bytestream2_get_byte.exit351
  %116 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2233
  %pix_fmt41 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %116, i32 0, i32 25, !dbg !2234
  store i32 81, i32* %pix_fmt41, align 8, !dbg !2235
  br label %sw.epilog, !dbg !2236

sw.bb42:                                          ; preds = %bytestream2_get_byte.exit351
  %117 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2237
  %pix_fmt43 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %117, i32 0, i32 25, !dbg !2238
  store i32 8, i32* %pix_fmt43, align 8, !dbg !2239
  br label %sw.epilog, !dbg !2240

sw.bb44:                                          ; preds = %bytestream2_get_byte.exit351
  %118 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2241
  %pix_fmt45 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %118, i32 0, i32 25, !dbg !2242
  store i32 66, i32* %pix_fmt45, align 8, !dbg !2243
  %119 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2244
  %hshift46 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %119, i32 0, i32 11, !dbg !2245
  %arrayidx47 = getelementptr inbounds [4 x i32], [4 x i32]* %hshift46, i64 0, i64 2, !dbg !2244
  store i32 1, i32* %arrayidx47, align 8, !dbg !2246
  %120 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2247
  %hshift48 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %120, i32 0, i32 11, !dbg !2248
  %arrayidx49 = getelementptr inbounds [4 x i32], [4 x i32]* %hshift48, i64 0, i64 1, !dbg !2247
  store i32 1, i32* %arrayidx49, align 4, !dbg !2249
  %121 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2250
  %max50 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %121, i32 0, i32 1, !dbg !2251
  store i32 1024, i32* %max50, align 8, !dbg !2252
  %122 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2253
  %huff_build51 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %122, i32 0, i32 17, !dbg !2254
  store i32 (%struct.VLC*, i8*)* @huff_build10, i32 (%struct.VLC*, i8*)** %huff_build51, align 8, !dbg !2255
  %123 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2256
  %magy_decode_slice52 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %123, i32 0, i32 18, !dbg !2257
  store i32 (%struct.AVCodecContext*, i8*, i32, i32)* @magy_decode_slice10, i32 (%struct.AVCodecContext*, i8*, i32, i32)** %magy_decode_slice52, align 8, !dbg !2258
  %124 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2259
  %bps53 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %124, i32 0, i32 2, !dbg !2260
  store i32 10, i32* %bps53, align 4, !dbg !2261
  br label %sw.epilog, !dbg !2262

sw.bb54:                                          ; preds = %bytestream2_get_byte.exit351
  %125 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2263
  %pix_fmt55 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %125, i32 0, i32 25, !dbg !2264
  store i32 77, i32* %pix_fmt55, align 8, !dbg !2265
  %126 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2266
  %decorrelate56 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %126, i32 0, i32 6, !dbg !2267
  store i32 1, i32* %decorrelate56, align 4, !dbg !2268
  %127 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2269
  %max57 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %127, i32 0, i32 1, !dbg !2270
  store i32 1024, i32* %max57, align 8, !dbg !2271
  %128 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2272
  %huff_build58 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %128, i32 0, i32 17, !dbg !2273
  store i32 (%struct.VLC*, i8*)* @huff_build10, i32 (%struct.VLC*, i8*)** %huff_build58, align 8, !dbg !2274
  %129 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2275
  %magy_decode_slice59 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %129, i32 0, i32 18, !dbg !2276
  store i32 (%struct.AVCodecContext*, i8*, i32, i32)* @magy_decode_slice10, i32 (%struct.AVCodecContext*, i8*, i32, i32)** %magy_decode_slice59, align 8, !dbg !2277
  %130 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2278
  %bps60 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %130, i32 0, i32 2, !dbg !2279
  store i32 10, i32* %bps60, align 4, !dbg !2280
  br label %sw.epilog, !dbg !2281

sw.bb61:                                          ; preds = %bytestream2_get_byte.exit351
  %131 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2282
  %pix_fmt62 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %131, i32 0, i32 25, !dbg !2283
  store i32 166, i32* %pix_fmt62, align 8, !dbg !2284
  %132 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2285
  %decorrelate63 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %132, i32 0, i32 6, !dbg !2286
  store i32 1, i32* %decorrelate63, align 4, !dbg !2287
  %133 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2288
  %max64 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %133, i32 0, i32 1, !dbg !2289
  store i32 1024, i32* %max64, align 8, !dbg !2290
  %134 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2291
  %huff_build65 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %134, i32 0, i32 17, !dbg !2292
  store i32 (%struct.VLC*, i8*)* @huff_build10, i32 (%struct.VLC*, i8*)** %huff_build65, align 8, !dbg !2293
  %135 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2294
  %magy_decode_slice66 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %135, i32 0, i32 18, !dbg !2295
  store i32 (%struct.AVCodecContext*, i8*, i32, i32)* @magy_decode_slice10, i32 (%struct.AVCodecContext*, i8*, i32, i32)** %magy_decode_slice66, align 8, !dbg !2296
  %136 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2297
  %bps67 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %136, i32 0, i32 2, !dbg !2298
  store i32 10, i32* %bps67, align 4, !dbg !2299
  br label %sw.epilog, !dbg !2300

sw.bb68:                                          ; preds = %bytestream2_get_byte.exit351
  %137 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2301
  %pix_fmt69 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %137, i32 0, i32 25, !dbg !2302
  store i32 137, i32* %pix_fmt69, align 8, !dbg !2303
  %138 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2304
  %decorrelate70 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %138, i32 0, i32 6, !dbg !2305
  store i32 1, i32* %decorrelate70, align 4, !dbg !2306
  %139 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2307
  %max71 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %139, i32 0, i32 1, !dbg !2308
  store i32 4096, i32* %max71, align 8, !dbg !2309
  %140 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2310
  %huff_build72 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %140, i32 0, i32 17, !dbg !2311
  store i32 (%struct.VLC*, i8*)* @huff_build12, i32 (%struct.VLC*, i8*)** %huff_build72, align 8, !dbg !2312
  %141 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2313
  %magy_decode_slice73 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %141, i32 0, i32 18, !dbg !2314
  store i32 (%struct.AVCodecContext*, i8*, i32, i32)* @magy_decode_slice10, i32 (%struct.AVCodecContext*, i8*, i32, i32)** %magy_decode_slice73, align 8, !dbg !2315
  %142 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2316
  %bps74 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %142, i32 0, i32 2, !dbg !2317
  store i32 12, i32* %bps74, align 4, !dbg !2318
  br label %sw.epilog, !dbg !2319

sw.bb75:                                          ; preds = %bytestream2_get_byte.exit351
  %143 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2320
  %pix_fmt76 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %143, i32 0, i32 25, !dbg !2321
  store i32 164, i32* %pix_fmt76, align 8, !dbg !2322
  %144 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2323
  %decorrelate77 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %144, i32 0, i32 6, !dbg !2324
  store i32 1, i32* %decorrelate77, align 4, !dbg !2325
  %145 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2326
  %max78 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %145, i32 0, i32 1, !dbg !2327
  store i32 4096, i32* %max78, align 8, !dbg !2328
  %146 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2329
  %huff_build79 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %146, i32 0, i32 17, !dbg !2330
  store i32 (%struct.VLC*, i8*)* @huff_build12, i32 (%struct.VLC*, i8*)** %huff_build79, align 8, !dbg !2331
  %147 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2332
  %magy_decode_slice80 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %147, i32 0, i32 18, !dbg !2333
  store i32 (%struct.AVCodecContext*, i8*, i32, i32)* @magy_decode_slice10, i32 (%struct.AVCodecContext*, i8*, i32, i32)** %magy_decode_slice80, align 8, !dbg !2334
  %148 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2335
  %bps81 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %148, i32 0, i32 2, !dbg !2336
  store i32 12, i32* %bps81, align 4, !dbg !2337
  br label %sw.epilog, !dbg !2338

sw.bb82:                                          ; preds = %bytestream2_get_byte.exit351
  %149 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2339
  %pix_fmt83 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %149, i32 0, i32 25, !dbg !2340
  store i32 171, i32* %pix_fmt83, align 8, !dbg !2341
  %150 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2342
  %max84 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %150, i32 0, i32 1, !dbg !2343
  store i32 1024, i32* %max84, align 8, !dbg !2344
  %151 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2345
  %huff_build85 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %151, i32 0, i32 17, !dbg !2346
  store i32 (%struct.VLC*, i8*)* @huff_build10, i32 (%struct.VLC*, i8*)** %huff_build85, align 8, !dbg !2347
  %152 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2348
  %magy_decode_slice86 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %152, i32 0, i32 18, !dbg !2349
  store i32 (%struct.AVCodecContext*, i8*, i32, i32)* @magy_decode_slice10, i32 (%struct.AVCodecContext*, i8*, i32, i32)** %magy_decode_slice86, align 8, !dbg !2350
  %153 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2351
  %bps87 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %153, i32 0, i32 2, !dbg !2352
  store i32 10, i32* %bps87, align 4, !dbg !2353
  br label %sw.epilog, !dbg !2354

sw.default:                                       ; preds = %bytestream2_get_byte.exit351
  %154 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2355
  %155 = bitcast %struct.AVCodecContext* %154 to i8*, !dbg !2355
  %156 = load i32, i32* %format, align 4, !dbg !2356
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %155, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i32 0, i32 0), i32 %156), !dbg !2357
  store i32 -1163346256, i32* %retval, align 4, !dbg !2358
  br label %return, !dbg !2358

sw.epilog:                                        ; preds = %sw.bb82, %sw.bb75, %sw.bb68, %sw.bb61, %sw.bb54, %sw.bb44, %sw.bb42, %sw.bb40, %sw.bb30, %sw.bb24, %sw.bb22, %sw.bb19, %sw.bb
  %157 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2359
  %pix_fmt88 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %157, i32 0, i32 25, !dbg !2360
  %158 = load i32, i32* %pix_fmt88, align 8, !dbg !2360
  %call89 = call i32 @av_pix_fmt_count_planes(i32 %158), !dbg !2361
  %159 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2362
  %planes = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %159, i32 0, i32 5, !dbg !2363
  store i32 %call89, i32* %planes, align 8, !dbg !2364
  store %struct.GetByteContext* %gbyte, %struct.GetByteContext** %g.addr.i352, align 8, !dbg !2365
  store i32 1, i32* %size.addr.i, align 4, !dbg !2365
  %160 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i352, align 8, !dbg !2366
  %buffer_end.i353 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %160, i32 0, i32 1, !dbg !2367
  %161 = load i8*, i8** %buffer_end.i353, align 8, !dbg !2367
  %162 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i352, align 8, !dbg !2368
  %buffer.i354 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %162, i32 0, i32 0, !dbg !2369
  %163 = load i8*, i8** %buffer.i354, align 8, !dbg !2369
  %sub.ptr.lhs.cast.i355 = ptrtoint i8* %161 to i64, !dbg !2370
  %sub.ptr.rhs.cast.i356 = ptrtoint i8* %163 to i64, !dbg !2370
  %sub.ptr.sub.i357 = sub i64 %sub.ptr.lhs.cast.i355, %sub.ptr.rhs.cast.i356, !dbg !2370
  %164 = load i32, i32* %size.addr.i, align 4, !dbg !2371
  %conv.i = zext i32 %164 to i64, !dbg !2372
  %cmp.i358 = icmp sgt i64 %sub.ptr.sub.i357, %conv.i, !dbg !2373
  br i1 %cmp.i358, label %cond.true.i, label %cond.false.i, !dbg !2374

cond.true.i:                                      ; preds = %sw.epilog
  %165 = load i32, i32* %size.addr.i, align 4, !dbg !2375
  %conv2.i = zext i32 %165 to i64, !dbg !2377
  br label %bytestream2_skip.exit, !dbg !2378

cond.false.i:                                     ; preds = %sw.epilog
  %166 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i352, align 8, !dbg !2379
  %buffer_end3.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %166, i32 0, i32 1, !dbg !2381
  %167 = load i8*, i8** %buffer_end3.i, align 8, !dbg !2381
  %168 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i352, align 8, !dbg !2382
  %buffer4.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %168, i32 0, i32 0, !dbg !2383
  %169 = load i8*, i8** %buffer4.i, align 8, !dbg !2383
  %sub.ptr.lhs.cast5.i = ptrtoint i8* %167 to i64, !dbg !2384
  %sub.ptr.rhs.cast6.i = ptrtoint i8* %169 to i64, !dbg !2384
  %sub.ptr.sub7.i = sub i64 %sub.ptr.lhs.cast5.i, %sub.ptr.rhs.cast6.i, !dbg !2384
  br label %bytestream2_skip.exit, !dbg !2385

bytestream2_skip.exit:                            ; preds = %cond.true.i, %cond.false.i
  %cond.i = phi i64 [ %conv2.i, %cond.true.i ], [ %sub.ptr.sub7.i, %cond.false.i ], !dbg !2386
  %170 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i352, align 8, !dbg !2388
  %buffer8.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %170, i32 0, i32 0, !dbg !2389
  %171 = load i8*, i8** %buffer8.i, align 8, !dbg !2390
  %add.ptr.i359 = getelementptr inbounds i8, i8* %171, i64 %cond.i, !dbg !2390
  store i8* %add.ptr.i359, i8** %buffer8.i, align 8, !dbg !2390
  store %struct.GetByteContext* %gbyte, %struct.GetByteContext** %g.addr.i592, align 8, !dbg !2391
  %172 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i592, align 8, !dbg !2392
  %buffer_end.i593 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %172, i32 0, i32 1, !dbg !2393
  %173 = load i8*, i8** %buffer_end.i593, align 8, !dbg !2393
  %174 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i592, align 8, !dbg !2394
  %buffer.i594 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %174, i32 0, i32 0, !dbg !2395
  %175 = load i8*, i8** %buffer.i594, align 8, !dbg !2395
  %sub.ptr.lhs.cast.i595 = ptrtoint i8* %173 to i64, !dbg !2396
  %sub.ptr.rhs.cast.i596 = ptrtoint i8* %175 to i64, !dbg !2396
  %sub.ptr.sub.i597 = sub i64 %sub.ptr.lhs.cast.i595, %sub.ptr.rhs.cast.i596, !dbg !2396
  %cmp.i598 = icmp slt i64 %sub.ptr.sub.i597, 1, !dbg !2397
  br i1 %cmp.i598, label %if.then.i601, label %if.end.i606, !dbg !2398

if.then.i601:                                     ; preds = %bytestream2_skip.exit
  %176 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i592, align 8, !dbg !2399
  %buffer_end1.i599 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %176, i32 0, i32 1, !dbg !2400
  %177 = load i8*, i8** %buffer_end1.i599, align 8, !dbg !2400
  %178 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i592, align 8, !dbg !2401
  %buffer2.i600 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %178, i32 0, i32 0, !dbg !2402
  store i8* %177, i8** %buffer2.i600, align 8, !dbg !2403
  store i32 0, i32* %retval.i591, align 4, !dbg !2404
  br label %bytestream2_get_byte.exit607, !dbg !2404

if.end.i606:                                      ; preds = %bytestream2_skip.exit
  %179 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i592, align 8, !dbg !2405
  store %struct.GetByteContext* %179, %struct.GetByteContext** %g.addr.i.i590, align 8, !dbg !2406
  %180 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i590, align 8, !dbg !2407
  %buffer.i.i602 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %180, i32 0, i32 0, !dbg !2408
  store i8** %buffer.i.i602, i8*** %b.addr.i.i.i589, align 8, !dbg !2409
  %181 = load i8**, i8*** %b.addr.i.i.i589, align 8, !dbg !2410
  %182 = load i8*, i8** %181, align 8, !dbg !2411
  %add.ptr.i.i.i603 = getelementptr inbounds i8, i8* %182, i64 1, !dbg !2411
  store i8* %add.ptr.i.i.i603, i8** %181, align 8, !dbg !2411
  %183 = load i8**, i8*** %b.addr.i.i.i589, align 8, !dbg !2412
  %184 = load i8*, i8** %183, align 8, !dbg !2413
  %add.ptr1.i.i.i604 = getelementptr inbounds i8, i8* %184, i64 -1, !dbg !2414
  %185 = load i8, i8* %add.ptr1.i.i.i604, align 1, !dbg !2415
  %conv.i.i.i605 = zext i8 %185 to i32, !dbg !2416
  store i32 %conv.i.i.i605, i32* %retval.i591, align 4, !dbg !2417
  br label %bytestream2_get_byte.exit607, !dbg !2417

bytestream2_get_byte.exit607:                     ; preds = %if.then.i601, %if.end.i606
  %186 = load i32, i32* %retval.i591, align 4, !dbg !2418
  %187 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2419
  %color_matrix = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %187, i32 0, i32 7, !dbg !2420
  store i32 %186, i32* %color_matrix, align 8, !dbg !2421
  store %struct.GetByteContext* %gbyte, %struct.GetByteContext** %g.addr.i573, align 8, !dbg !2422
  %188 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i573, align 8, !dbg !2423
  %buffer_end.i574 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %188, i32 0, i32 1, !dbg !2424
  %189 = load i8*, i8** %buffer_end.i574, align 8, !dbg !2424
  %190 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i573, align 8, !dbg !2425
  %buffer.i575 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %190, i32 0, i32 0, !dbg !2426
  %191 = load i8*, i8** %buffer.i575, align 8, !dbg !2426
  %sub.ptr.lhs.cast.i576 = ptrtoint i8* %189 to i64, !dbg !2427
  %sub.ptr.rhs.cast.i577 = ptrtoint i8* %191 to i64, !dbg !2427
  %sub.ptr.sub.i578 = sub i64 %sub.ptr.lhs.cast.i576, %sub.ptr.rhs.cast.i577, !dbg !2427
  %cmp.i579 = icmp slt i64 %sub.ptr.sub.i578, 1, !dbg !2428
  br i1 %cmp.i579, label %if.then.i582, label %if.end.i587, !dbg !2429

if.then.i582:                                     ; preds = %bytestream2_get_byte.exit607
  %192 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i573, align 8, !dbg !2430
  %buffer_end1.i580 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %192, i32 0, i32 1, !dbg !2431
  %193 = load i8*, i8** %buffer_end1.i580, align 8, !dbg !2431
  %194 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i573, align 8, !dbg !2432
  %buffer2.i581 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %194, i32 0, i32 0, !dbg !2433
  store i8* %193, i8** %buffer2.i581, align 8, !dbg !2434
  store i32 0, i32* %retval.i572, align 4, !dbg !2435
  br label %bytestream2_get_byte.exit588, !dbg !2435

if.end.i587:                                      ; preds = %bytestream2_get_byte.exit607
  %195 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i573, align 8, !dbg !2436
  store %struct.GetByteContext* %195, %struct.GetByteContext** %g.addr.i.i571, align 8, !dbg !2437
  %196 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i571, align 8, !dbg !2438
  %buffer.i.i583 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %196, i32 0, i32 0, !dbg !2439
  store i8** %buffer.i.i583, i8*** %b.addr.i.i.i570, align 8, !dbg !2440
  %197 = load i8**, i8*** %b.addr.i.i.i570, align 8, !dbg !2441
  %198 = load i8*, i8** %197, align 8, !dbg !2442
  %add.ptr.i.i.i584 = getelementptr inbounds i8, i8* %198, i64 1, !dbg !2442
  store i8* %add.ptr.i.i.i584, i8** %197, align 8, !dbg !2442
  %199 = load i8**, i8*** %b.addr.i.i.i570, align 8, !dbg !2443
  %200 = load i8*, i8** %199, align 8, !dbg !2444
  %add.ptr1.i.i.i585 = getelementptr inbounds i8, i8* %200, i64 -1, !dbg !2445
  %201 = load i8, i8* %add.ptr1.i.i.i585, align 1, !dbg !2446
  %conv.i.i.i586 = zext i8 %201 to i32, !dbg !2447
  store i32 %conv.i.i.i586, i32* %retval.i572, align 4, !dbg !2448
  br label %bytestream2_get_byte.exit588, !dbg !2448

bytestream2_get_byte.exit588:                     ; preds = %if.then.i582, %if.end.i587
  %202 = load i32, i32* %retval.i572, align 4, !dbg !2449
  %203 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2450
  %flags = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %203, i32 0, i32 8, !dbg !2451
  store i32 %202, i32* %flags, align 4, !dbg !2452
  %204 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2453
  %flags92 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %204, i32 0, i32 8, !dbg !2454
  %205 = load i32, i32* %flags92, align 4, !dbg !2454
  %and = and i32 %205, 2, !dbg !2455
  %tobool = icmp ne i32 %and, 0, !dbg !2456
  %lnot = xor i1 %tobool, true, !dbg !2456
  %lnot93 = xor i1 %lnot, true, !dbg !2457
  %lnot.ext = zext i1 %lnot93 to i32, !dbg !2457
  %206 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2458
  %interlaced = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %206, i32 0, i32 9, !dbg !2459
  store i32 %lnot.ext, i32* %interlaced, align 8, !dbg !2460
  store %struct.GetByteContext* %gbyte, %struct.GetByteContext** %g.addr.i549, align 8, !dbg !2461
  store i32 3, i32* %size.addr.i550, align 4, !dbg !2461
  %207 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i549, align 8, !dbg !2462
  %buffer_end.i551 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %207, i32 0, i32 1, !dbg !2463
  %208 = load i8*, i8** %buffer_end.i551, align 8, !dbg !2463
  %209 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i549, align 8, !dbg !2464
  %buffer.i552 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %209, i32 0, i32 0, !dbg !2465
  %210 = load i8*, i8** %buffer.i552, align 8, !dbg !2465
  %sub.ptr.lhs.cast.i553 = ptrtoint i8* %208 to i64, !dbg !2466
  %sub.ptr.rhs.cast.i554 = ptrtoint i8* %210 to i64, !dbg !2466
  %sub.ptr.sub.i555 = sub i64 %sub.ptr.lhs.cast.i553, %sub.ptr.rhs.cast.i554, !dbg !2466
  %211 = load i32, i32* %size.addr.i550, align 4, !dbg !2467
  %conv.i556 = zext i32 %211 to i64, !dbg !2468
  %cmp.i557 = icmp sgt i64 %sub.ptr.sub.i555, %conv.i556, !dbg !2469
  br i1 %cmp.i557, label %cond.true.i559, label %cond.false.i565, !dbg !2470

cond.true.i559:                                   ; preds = %bytestream2_get_byte.exit588
  %212 = load i32, i32* %size.addr.i550, align 4, !dbg !2471
  %conv2.i558 = zext i32 %212 to i64, !dbg !2472
  br label %bytestream2_skip.exit569, !dbg !2473

cond.false.i565:                                  ; preds = %bytestream2_get_byte.exit588
  %213 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i549, align 8, !dbg !2474
  %buffer_end3.i560 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %213, i32 0, i32 1, !dbg !2475
  %214 = load i8*, i8** %buffer_end3.i560, align 8, !dbg !2475
  %215 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i549, align 8, !dbg !2476
  %buffer4.i561 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %215, i32 0, i32 0, !dbg !2477
  %216 = load i8*, i8** %buffer4.i561, align 8, !dbg !2477
  %sub.ptr.lhs.cast5.i562 = ptrtoint i8* %214 to i64, !dbg !2478
  %sub.ptr.rhs.cast6.i563 = ptrtoint i8* %216 to i64, !dbg !2478
  %sub.ptr.sub7.i564 = sub i64 %sub.ptr.lhs.cast5.i562, %sub.ptr.rhs.cast6.i563, !dbg !2478
  br label %bytestream2_skip.exit569, !dbg !2479

bytestream2_skip.exit569:                         ; preds = %cond.true.i559, %cond.false.i565
  %cond.i566 = phi i64 [ %conv2.i558, %cond.true.i559 ], [ %sub.ptr.sub7.i564, %cond.false.i565 ], !dbg !2480
  %217 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i549, align 8, !dbg !2481
  %buffer8.i567 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %217, i32 0, i32 0, !dbg !2482
  %218 = load i8*, i8** %buffer8.i567, align 8, !dbg !2483
  %add.ptr.i568 = getelementptr inbounds i8, i8* %218, i64 %cond.i566, !dbg !2483
  store i8* %add.ptr.i568, i8** %buffer8.i567, align 8, !dbg !2483
  store %struct.GetByteContext* %gbyte, %struct.GetByteContext** %g.addr.i533, align 8, !dbg !2484
  %219 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i533, align 8, !dbg !2485
  %buffer_end.i534 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %219, i32 0, i32 1, !dbg !2486
  %220 = load i8*, i8** %buffer_end.i534, align 8, !dbg !2486
  %221 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i533, align 8, !dbg !2487
  %buffer.i535 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %221, i32 0, i32 0, !dbg !2488
  %222 = load i8*, i8** %buffer.i535, align 8, !dbg !2488
  %sub.ptr.lhs.cast.i536 = ptrtoint i8* %220 to i64, !dbg !2489
  %sub.ptr.rhs.cast.i537 = ptrtoint i8* %222 to i64, !dbg !2489
  %sub.ptr.sub.i538 = sub i64 %sub.ptr.lhs.cast.i536, %sub.ptr.rhs.cast.i537, !dbg !2489
  %cmp.i539 = icmp slt i64 %sub.ptr.sub.i538, 4, !dbg !2490
  br i1 %cmp.i539, label %if.then.i542, label %if.end.i547, !dbg !2491

if.then.i542:                                     ; preds = %bytestream2_skip.exit569
  %223 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i533, align 8, !dbg !2492
  %buffer_end1.i540 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %223, i32 0, i32 1, !dbg !2493
  %224 = load i8*, i8** %buffer_end1.i540, align 8, !dbg !2493
  %225 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i533, align 8, !dbg !2494
  %buffer2.i541 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %225, i32 0, i32 0, !dbg !2495
  store i8* %224, i8** %buffer2.i541, align 8, !dbg !2496
  store i32 0, i32* %retval.i532, align 4, !dbg !2497
  br label %bytestream2_get_le32.exit548, !dbg !2497

if.end.i547:                                      ; preds = %bytestream2_skip.exit569
  %226 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i533, align 8, !dbg !2498
  store %struct.GetByteContext* %226, %struct.GetByteContext** %g.addr.i.i531, align 8, !dbg !2499
  %227 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i531, align 8, !dbg !2500
  %buffer.i.i543 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %227, i32 0, i32 0, !dbg !2501
  store i8** %buffer.i.i543, i8*** %b.addr.i.i.i530, align 8, !dbg !2502
  %228 = load i8**, i8*** %b.addr.i.i.i530, align 8, !dbg !2503
  %229 = load i8*, i8** %228, align 8, !dbg !2504
  %add.ptr.i.i.i544 = getelementptr inbounds i8, i8* %229, i64 4, !dbg !2504
  store i8* %add.ptr.i.i.i544, i8** %228, align 8, !dbg !2504
  %230 = load i8**, i8*** %b.addr.i.i.i530, align 8, !dbg !2505
  %231 = load i8*, i8** %230, align 8, !dbg !2506
  %add.ptr1.i.i.i545 = getelementptr inbounds i8, i8* %231, i64 -4, !dbg !2507
  %232 = bitcast i8* %add.ptr1.i.i.i545 to %union.unaligned_32*, !dbg !2508
  %l.i.i.i546 = bitcast %union.unaligned_32* %232 to i32*, !dbg !2508
  %233 = load i32, i32* %l.i.i.i546, align 1, !dbg !2508
  store i32 %233, i32* %retval.i532, align 4, !dbg !2509
  br label %bytestream2_get_le32.exit548, !dbg !2509

bytestream2_get_le32.exit548:                     ; preds = %if.then.i542, %if.end.i547
  %234 = load i32, i32* %retval.i532, align 4, !dbg !2510
  store i32 %234, i32* %width, align 4, !dbg !2511
  store %struct.GetByteContext* %gbyte, %struct.GetByteContext** %g.addr.i514, align 8, !dbg !2512
  %235 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i514, align 8, !dbg !2513
  %buffer_end.i515 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %235, i32 0, i32 1, !dbg !2514
  %236 = load i8*, i8** %buffer_end.i515, align 8, !dbg !2514
  %237 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i514, align 8, !dbg !2515
  %buffer.i516 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %237, i32 0, i32 0, !dbg !2516
  %238 = load i8*, i8** %buffer.i516, align 8, !dbg !2516
  %sub.ptr.lhs.cast.i517 = ptrtoint i8* %236 to i64, !dbg !2517
  %sub.ptr.rhs.cast.i518 = ptrtoint i8* %238 to i64, !dbg !2517
  %sub.ptr.sub.i519 = sub i64 %sub.ptr.lhs.cast.i517, %sub.ptr.rhs.cast.i518, !dbg !2517
  %cmp.i520 = icmp slt i64 %sub.ptr.sub.i519, 4, !dbg !2518
  br i1 %cmp.i520, label %if.then.i523, label %if.end.i528, !dbg !2519

if.then.i523:                                     ; preds = %bytestream2_get_le32.exit548
  %239 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i514, align 8, !dbg !2520
  %buffer_end1.i521 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %239, i32 0, i32 1, !dbg !2521
  %240 = load i8*, i8** %buffer_end1.i521, align 8, !dbg !2521
  %241 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i514, align 8, !dbg !2522
  %buffer2.i522 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %241, i32 0, i32 0, !dbg !2523
  store i8* %240, i8** %buffer2.i522, align 8, !dbg !2524
  store i32 0, i32* %retval.i513, align 4, !dbg !2525
  br label %bytestream2_get_le32.exit529, !dbg !2525

if.end.i528:                                      ; preds = %bytestream2_get_le32.exit548
  %242 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i514, align 8, !dbg !2526
  store %struct.GetByteContext* %242, %struct.GetByteContext** %g.addr.i.i512, align 8, !dbg !2527
  %243 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i512, align 8, !dbg !2528
  %buffer.i.i524 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %243, i32 0, i32 0, !dbg !2529
  store i8** %buffer.i.i524, i8*** %b.addr.i.i.i511, align 8, !dbg !2530
  %244 = load i8**, i8*** %b.addr.i.i.i511, align 8, !dbg !2531
  %245 = load i8*, i8** %244, align 8, !dbg !2532
  %add.ptr.i.i.i525 = getelementptr inbounds i8, i8* %245, i64 4, !dbg !2532
  store i8* %add.ptr.i.i.i525, i8** %244, align 8, !dbg !2532
  %246 = load i8**, i8*** %b.addr.i.i.i511, align 8, !dbg !2533
  %247 = load i8*, i8** %246, align 8, !dbg !2534
  %add.ptr1.i.i.i526 = getelementptr inbounds i8, i8* %247, i64 -4, !dbg !2535
  %248 = bitcast i8* %add.ptr1.i.i.i526 to %union.unaligned_32*, !dbg !2536
  %l.i.i.i527 = bitcast %union.unaligned_32* %248 to i32*, !dbg !2536
  %249 = load i32, i32* %l.i.i.i527, align 1, !dbg !2536
  store i32 %249, i32* %retval.i513, align 4, !dbg !2537
  br label %bytestream2_get_le32.exit529, !dbg !2537

bytestream2_get_le32.exit529:                     ; preds = %if.then.i523, %if.end.i528
  %250 = load i32, i32* %retval.i513, align 4, !dbg !2538
  store i32 %250, i32* %height, align 4, !dbg !2539
  %251 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2540
  %252 = load i32, i32* %width, align 4, !dbg !2541
  %253 = load i32, i32* %height, align 4, !dbg !2542
  %call96 = call i32 @ff_set_dimensions(%struct.AVCodecContext* %251, i32 %252, i32 %253), !dbg !2543
  store i32 %call96, i32* %ret, align 4, !dbg !2544
  %254 = load i32, i32* %ret, align 4, !dbg !2545
  %cmp97 = icmp slt i32 %254, 0, !dbg !2547
  br i1 %cmp97, label %if.then98, label %if.end99, !dbg !2548

if.then98:                                        ; preds = %bytestream2_get_le32.exit529
  %255 = load i32, i32* %ret, align 4, !dbg !2549
  store i32 %255, i32* %retval, align 4, !dbg !2550
  br label %return, !dbg !2550

if.end99:                                         ; preds = %bytestream2_get_le32.exit529
  store %struct.GetByteContext* %gbyte, %struct.GetByteContext** %g.addr.i495, align 8, !dbg !2551
  %256 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i495, align 8, !dbg !2552
  %buffer_end.i496 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %256, i32 0, i32 1, !dbg !2553
  %257 = load i8*, i8** %buffer_end.i496, align 8, !dbg !2553
  %258 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i495, align 8, !dbg !2554
  %buffer.i497 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %258, i32 0, i32 0, !dbg !2555
  %259 = load i8*, i8** %buffer.i497, align 8, !dbg !2555
  %sub.ptr.lhs.cast.i498 = ptrtoint i8* %257 to i64, !dbg !2556
  %sub.ptr.rhs.cast.i499 = ptrtoint i8* %259 to i64, !dbg !2556
  %sub.ptr.sub.i500 = sub i64 %sub.ptr.lhs.cast.i498, %sub.ptr.rhs.cast.i499, !dbg !2556
  %cmp.i501 = icmp slt i64 %sub.ptr.sub.i500, 4, !dbg !2557
  br i1 %cmp.i501, label %if.then.i504, label %if.end.i509, !dbg !2558

if.then.i504:                                     ; preds = %if.end99
  %260 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i495, align 8, !dbg !2559
  %buffer_end1.i502 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %260, i32 0, i32 1, !dbg !2560
  %261 = load i8*, i8** %buffer_end1.i502, align 8, !dbg !2560
  %262 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i495, align 8, !dbg !2561
  %buffer2.i503 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %262, i32 0, i32 0, !dbg !2562
  store i8* %261, i8** %buffer2.i503, align 8, !dbg !2563
  store i32 0, i32* %retval.i494, align 4, !dbg !2564
  br label %bytestream2_get_le32.exit510, !dbg !2564

if.end.i509:                                      ; preds = %if.end99
  %263 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i495, align 8, !dbg !2565
  store %struct.GetByteContext* %263, %struct.GetByteContext** %g.addr.i.i493, align 8, !dbg !2566
  %264 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i493, align 8, !dbg !2567
  %buffer.i.i505 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %264, i32 0, i32 0, !dbg !2568
  store i8** %buffer.i.i505, i8*** %b.addr.i.i.i492, align 8, !dbg !2569
  %265 = load i8**, i8*** %b.addr.i.i.i492, align 8, !dbg !2570
  %266 = load i8*, i8** %265, align 8, !dbg !2571
  %add.ptr.i.i.i506 = getelementptr inbounds i8, i8* %266, i64 4, !dbg !2571
  store i8* %add.ptr.i.i.i506, i8** %265, align 8, !dbg !2571
  %267 = load i8**, i8*** %b.addr.i.i.i492, align 8, !dbg !2572
  %268 = load i8*, i8** %267, align 8, !dbg !2573
  %add.ptr1.i.i.i507 = getelementptr inbounds i8, i8* %268, i64 -4, !dbg !2574
  %269 = bitcast i8* %add.ptr1.i.i.i507 to %union.unaligned_32*, !dbg !2575
  %l.i.i.i508 = bitcast %union.unaligned_32* %269 to i32*, !dbg !2575
  %270 = load i32, i32* %l.i.i.i508, align 1, !dbg !2575
  store i32 %270, i32* %retval.i494, align 4, !dbg !2576
  br label %bytestream2_get_le32.exit510, !dbg !2576

bytestream2_get_le32.exit510:                     ; preds = %if.then.i504, %if.end.i509
  %271 = load i32, i32* %retval.i494, align 4, !dbg !2577
  store i32 %271, i32* %slice_width, align 4, !dbg !2578
  %272 = load i32, i32* %slice_width, align 4, !dbg !2579
  %273 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2581
  %coded_width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %273, i32 0, i32 22, !dbg !2582
  %274 = load i32, i32* %coded_width, align 4, !dbg !2582
  %cmp101 = icmp ne i32 %272, %274, !dbg !2583
  br i1 %cmp101, label %if.then102, label %if.end103, !dbg !2584

if.then102:                                       ; preds = %bytestream2_get_le32.exit510
  %275 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2585
  %276 = bitcast %struct.AVCodecContext* %275 to i8*, !dbg !2585
  %277 = load i32, i32* %slice_width, align 4, !dbg !2587
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %276, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i32 0, i32 0), i32 %277), !dbg !2588
  store i32 -1163346256, i32* %retval, align 4, !dbg !2589
  br label %return, !dbg !2589

if.end103:                                        ; preds = %bytestream2_get_le32.exit510
  store %struct.GetByteContext* %gbyte, %struct.GetByteContext** %g.addr.i476, align 8, !dbg !2590
  %278 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i476, align 8, !dbg !2591
  %buffer_end.i477 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %278, i32 0, i32 1, !dbg !2592
  %279 = load i8*, i8** %buffer_end.i477, align 8, !dbg !2592
  %280 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i476, align 8, !dbg !2593
  %buffer.i478 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %280, i32 0, i32 0, !dbg !2594
  %281 = load i8*, i8** %buffer.i478, align 8, !dbg !2594
  %sub.ptr.lhs.cast.i479 = ptrtoint i8* %279 to i64, !dbg !2595
  %sub.ptr.rhs.cast.i480 = ptrtoint i8* %281 to i64, !dbg !2595
  %sub.ptr.sub.i481 = sub i64 %sub.ptr.lhs.cast.i479, %sub.ptr.rhs.cast.i480, !dbg !2595
  %cmp.i482 = icmp slt i64 %sub.ptr.sub.i481, 4, !dbg !2596
  br i1 %cmp.i482, label %if.then.i485, label %if.end.i490, !dbg !2597

if.then.i485:                                     ; preds = %if.end103
  %282 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i476, align 8, !dbg !2598
  %buffer_end1.i483 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %282, i32 0, i32 1, !dbg !2599
  %283 = load i8*, i8** %buffer_end1.i483, align 8, !dbg !2599
  %284 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i476, align 8, !dbg !2600
  %buffer2.i484 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %284, i32 0, i32 0, !dbg !2601
  store i8* %283, i8** %buffer2.i484, align 8, !dbg !2602
  store i32 0, i32* %retval.i475, align 4, !dbg !2603
  br label %bytestream2_get_le32.exit491, !dbg !2603

if.end.i490:                                      ; preds = %if.end103
  %285 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i476, align 8, !dbg !2604
  store %struct.GetByteContext* %285, %struct.GetByteContext** %g.addr.i.i474, align 8, !dbg !2605
  %286 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i474, align 8, !dbg !2606
  %buffer.i.i486 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %286, i32 0, i32 0, !dbg !2607
  store i8** %buffer.i.i486, i8*** %b.addr.i.i.i473, align 8, !dbg !2608
  %287 = load i8**, i8*** %b.addr.i.i.i473, align 8, !dbg !2609
  %288 = load i8*, i8** %287, align 8, !dbg !2610
  %add.ptr.i.i.i487 = getelementptr inbounds i8, i8* %288, i64 4, !dbg !2610
  store i8* %add.ptr.i.i.i487, i8** %287, align 8, !dbg !2610
  %289 = load i8**, i8*** %b.addr.i.i.i473, align 8, !dbg !2611
  %290 = load i8*, i8** %289, align 8, !dbg !2612
  %add.ptr1.i.i.i488 = getelementptr inbounds i8, i8* %290, i64 -4, !dbg !2613
  %291 = bitcast i8* %add.ptr1.i.i.i488 to %union.unaligned_32*, !dbg !2614
  %l.i.i.i489 = bitcast %union.unaligned_32* %291 to i32*, !dbg !2614
  %292 = load i32, i32* %l.i.i.i489, align 1, !dbg !2614
  store i32 %292, i32* %retval.i475, align 4, !dbg !2615
  br label %bytestream2_get_le32.exit491, !dbg !2615

bytestream2_get_le32.exit491:                     ; preds = %if.then.i485, %if.end.i490
  %293 = load i32, i32* %retval.i475, align 4, !dbg !2616
  %294 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2617
  %slice_height = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %294, i32 0, i32 3, !dbg !2618
  store i32 %293, i32* %slice_height, align 8, !dbg !2619
  %295 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2620
  %slice_height105 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %295, i32 0, i32 3, !dbg !2622
  %296 = load i32, i32* %slice_height105, align 8, !dbg !2622
  %cmp106 = icmp sle i32 %296, 0, !dbg !2623
  br i1 %cmp106, label %if.then110, label %lor.lhs.false107, !dbg !2624

lor.lhs.false107:                                 ; preds = %bytestream2_get_le32.exit491
  %297 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2625
  %slice_height108 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %297, i32 0, i32 3, !dbg !2627
  %298 = load i32, i32* %slice_height108, align 8, !dbg !2627
  %299 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2628
  %coded_height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %299, i32 0, i32 23, !dbg !2629
  %300 = load i32, i32* %coded_height, align 8, !dbg !2629
  %sub = sub nsw i32 2147483647, %300, !dbg !2630
  %cmp109 = icmp sgt i32 %298, %sub, !dbg !2631
  br i1 %cmp109, label %if.then110, label %if.end112, !dbg !2632

if.then110:                                       ; preds = %lor.lhs.false107, %bytestream2_get_le32.exit491
  %301 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2633
  %302 = bitcast %struct.AVCodecContext* %301 to i8*, !dbg !2633
  %303 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2635
  %slice_height111 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %303, i32 0, i32 3, !dbg !2636
  %304 = load i32, i32* %slice_height111, align 8, !dbg !2636
  call void (i8*, i32, i8*, ...) @av_log(i8* %302, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i32 0, i32 0), i32 %304), !dbg !2637
  store i32 -1094995529, i32* %retval, align 4, !dbg !2638
  br label %return, !dbg !2638

if.end112:                                        ; preds = %lor.lhs.false107
  store %struct.GetByteContext* %gbyte, %struct.GetByteContext** %g.addr.i452, align 8, !dbg !2639
  store i32 4, i32* %size.addr.i453, align 4, !dbg !2639
  %305 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i452, align 8, !dbg !2640
  %buffer_end.i454 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %305, i32 0, i32 1, !dbg !2641
  %306 = load i8*, i8** %buffer_end.i454, align 8, !dbg !2641
  %307 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i452, align 8, !dbg !2642
  %buffer.i455 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %307, i32 0, i32 0, !dbg !2643
  %308 = load i8*, i8** %buffer.i455, align 8, !dbg !2643
  %sub.ptr.lhs.cast.i456 = ptrtoint i8* %306 to i64, !dbg !2644
  %sub.ptr.rhs.cast.i457 = ptrtoint i8* %308 to i64, !dbg !2644
  %sub.ptr.sub.i458 = sub i64 %sub.ptr.lhs.cast.i456, %sub.ptr.rhs.cast.i457, !dbg !2644
  %309 = load i32, i32* %size.addr.i453, align 4, !dbg !2645
  %conv.i459 = zext i32 %309 to i64, !dbg !2646
  %cmp.i460 = icmp sgt i64 %sub.ptr.sub.i458, %conv.i459, !dbg !2647
  br i1 %cmp.i460, label %cond.true.i462, label %cond.false.i468, !dbg !2648

cond.true.i462:                                   ; preds = %if.end112
  %310 = load i32, i32* %size.addr.i453, align 4, !dbg !2649
  %conv2.i461 = zext i32 %310 to i64, !dbg !2650
  br label %bytestream2_skip.exit472, !dbg !2651

cond.false.i468:                                  ; preds = %if.end112
  %311 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i452, align 8, !dbg !2652
  %buffer_end3.i463 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %311, i32 0, i32 1, !dbg !2653
  %312 = load i8*, i8** %buffer_end3.i463, align 8, !dbg !2653
  %313 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i452, align 8, !dbg !2654
  %buffer4.i464 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %313, i32 0, i32 0, !dbg !2655
  %314 = load i8*, i8** %buffer4.i464, align 8, !dbg !2655
  %sub.ptr.lhs.cast5.i465 = ptrtoint i8* %312 to i64, !dbg !2656
  %sub.ptr.rhs.cast6.i466 = ptrtoint i8* %314 to i64, !dbg !2656
  %sub.ptr.sub7.i467 = sub i64 %sub.ptr.lhs.cast5.i465, %sub.ptr.rhs.cast6.i466, !dbg !2656
  br label %bytestream2_skip.exit472, !dbg !2657

bytestream2_skip.exit472:                         ; preds = %cond.true.i462, %cond.false.i468
  %cond.i469 = phi i64 [ %conv2.i461, %cond.true.i462 ], [ %sub.ptr.sub7.i467, %cond.false.i468 ], !dbg !2658
  %315 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i452, align 8, !dbg !2659
  %buffer8.i470 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %315, i32 0, i32 0, !dbg !2660
  %316 = load i8*, i8** %buffer8.i470, align 8, !dbg !2661
  %add.ptr.i471 = getelementptr inbounds i8, i8* %316, i64 %cond.i469, !dbg !2661
  store i8* %add.ptr.i471, i8** %buffer8.i470, align 8, !dbg !2661
  %317 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2662
  %coded_height113 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %317, i32 0, i32 23, !dbg !2663
  %318 = load i32, i32* %coded_height113, align 8, !dbg !2663
  %319 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2664
  %slice_height114 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %319, i32 0, i32 3, !dbg !2665
  %320 = load i32, i32* %slice_height114, align 8, !dbg !2665
  %add = add nsw i32 %318, %320, !dbg !2666
  %sub115 = sub nsw i32 %add, 1, !dbg !2667
  %321 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2668
  %slice_height116 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %321, i32 0, i32 3, !dbg !2669
  %322 = load i32, i32* %slice_height116, align 8, !dbg !2669
  %div = sdiv i32 %sub115, %322, !dbg !2670
  %323 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2671
  %nb_slices = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %323, i32 0, i32 4, !dbg !2672
  store i32 %div, i32* %nb_slices, align 4, !dbg !2673
  %324 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2674
  %nb_slices117 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %324, i32 0, i32 4, !dbg !2676
  %325 = load i32, i32* %nb_slices117, align 4, !dbg !2676
  %conv = sext i32 %325 to i64, !dbg !2674
  %cmp118 = icmp ugt i64 %conv, 268435455, !dbg !2677
  br i1 %cmp118, label %if.then120, label %if.end122, !dbg !2678

if.then120:                                       ; preds = %bytestream2_skip.exit472
  %326 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2679
  %327 = bitcast %struct.AVCodecContext* %326 to i8*, !dbg !2679
  %328 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2681
  %nb_slices121 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %328, i32 0, i32 4, !dbg !2682
  %329 = load i32, i32* %nb_slices121, align 4, !dbg !2682
  call void (i8*, i32, i8*, ...) @av_log(i8* %327, i32 16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i32 0, i32 0), i32 %329), !dbg !2683
  store i32 -1094995529, i32* %retval, align 4, !dbg !2684
  br label %return, !dbg !2684

if.end122:                                        ; preds = %bytestream2_skip.exit472
  store i32 0, i32* %i, align 4, !dbg !2685
  br label %for.cond, !dbg !2686

for.cond:                                         ; preds = %for.inc198, %if.end122
  %330 = load i32, i32* %i, align 4, !dbg !2687
  %331 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2689
  %planes123 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %331, i32 0, i32 5, !dbg !2690
  %332 = load i32, i32* %planes123, align 8, !dbg !2690
  %cmp124 = icmp slt i32 %330, %332, !dbg !2691
  br i1 %cmp124, label %for.body, label %for.end200, !dbg !2692

for.body:                                         ; preds = %for.cond
  %333 = load i32, i32* %i, align 4, !dbg !2693
  %idxprom = sext i32 %333 to i64, !dbg !2694
  %334 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2694
  %slices = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %334, i32 0, i32 13, !dbg !2695
  %arrayidx126 = getelementptr inbounds [4 x %struct.Slice*], [4 x %struct.Slice*]* %slices, i64 0, i64 %idxprom, !dbg !2694
  %335 = bitcast %struct.Slice** %arrayidx126 to i8*, !dbg !2696
  %336 = load i32, i32* %i, align 4, !dbg !2697
  %idxprom127 = sext i32 %336 to i64, !dbg !2698
  %337 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2698
  %slices_size = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %337, i32 0, i32 14, !dbg !2699
  %arrayidx128 = getelementptr inbounds [4 x i32], [4 x i32]* %slices_size, i64 0, i64 %idxprom127, !dbg !2698
  %338 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2700
  %nb_slices129 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %338, i32 0, i32 4, !dbg !2701
  %339 = load i32, i32* %nb_slices129, align 4, !dbg !2701
  %conv130 = sext i32 %339 to i64, !dbg !2700
  %mul = mul i64 %conv130, 8, !dbg !2702
  call void @av_fast_malloc(i8* %335, i32* %arrayidx128, i64 %mul), !dbg !2703
  %340 = load i32, i32* %i, align 4, !dbg !2704
  %idxprom131 = sext i32 %340 to i64, !dbg !2706
  %341 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2706
  %slices132 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %341, i32 0, i32 13, !dbg !2707
  %arrayidx133 = getelementptr inbounds [4 x %struct.Slice*], [4 x %struct.Slice*]* %slices132, i64 0, i64 %idxprom131, !dbg !2706
  %342 = load %struct.Slice*, %struct.Slice** %arrayidx133, align 8, !dbg !2706
  %tobool134 = icmp ne %struct.Slice* %342, null, !dbg !2706
  br i1 %tobool134, label %if.end136, label %if.then135, !dbg !2708

if.then135:                                       ; preds = %for.body
  store i32 -12, i32* %retval, align 4, !dbg !2709
  br label %return, !dbg !2709

if.end136:                                        ; preds = %for.body
  store %struct.GetByteContext* %gbyte, %struct.GetByteContext** %g.addr.i436, align 8, !dbg !2710
  %343 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i436, align 8, !dbg !2711
  %buffer_end.i437 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %343, i32 0, i32 1, !dbg !2712
  %344 = load i8*, i8** %buffer_end.i437, align 8, !dbg !2712
  %345 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i436, align 8, !dbg !2713
  %buffer.i438 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %345, i32 0, i32 0, !dbg !2714
  %346 = load i8*, i8** %buffer.i438, align 8, !dbg !2714
  %sub.ptr.lhs.cast.i439 = ptrtoint i8* %344 to i64, !dbg !2715
  %sub.ptr.rhs.cast.i440 = ptrtoint i8* %346 to i64, !dbg !2715
  %sub.ptr.sub.i441 = sub i64 %sub.ptr.lhs.cast.i439, %sub.ptr.rhs.cast.i440, !dbg !2715
  %cmp.i442 = icmp slt i64 %sub.ptr.sub.i441, 4, !dbg !2716
  br i1 %cmp.i442, label %if.then.i445, label %if.end.i450, !dbg !2717

if.then.i445:                                     ; preds = %if.end136
  %347 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i436, align 8, !dbg !2718
  %buffer_end1.i443 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %347, i32 0, i32 1, !dbg !2719
  %348 = load i8*, i8** %buffer_end1.i443, align 8, !dbg !2719
  %349 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i436, align 8, !dbg !2720
  %buffer2.i444 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %349, i32 0, i32 0, !dbg !2721
  store i8* %348, i8** %buffer2.i444, align 8, !dbg !2722
  store i32 0, i32* %retval.i435, align 4, !dbg !2723
  br label %bytestream2_get_le32.exit451, !dbg !2723

if.end.i450:                                      ; preds = %if.end136
  %350 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i436, align 8, !dbg !2724
  store %struct.GetByteContext* %350, %struct.GetByteContext** %g.addr.i.i434, align 8, !dbg !2725
  %351 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i434, align 8, !dbg !2726
  %buffer.i.i446 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %351, i32 0, i32 0, !dbg !2727
  store i8** %buffer.i.i446, i8*** %b.addr.i.i.i433, align 8, !dbg !2728
  %352 = load i8**, i8*** %b.addr.i.i.i433, align 8, !dbg !2729
  %353 = load i8*, i8** %352, align 8, !dbg !2730
  %add.ptr.i.i.i447 = getelementptr inbounds i8, i8* %353, i64 4, !dbg !2730
  store i8* %add.ptr.i.i.i447, i8** %352, align 8, !dbg !2730
  %354 = load i8**, i8*** %b.addr.i.i.i433, align 8, !dbg !2731
  %355 = load i8*, i8** %354, align 8, !dbg !2732
  %add.ptr1.i.i.i448 = getelementptr inbounds i8, i8* %355, i64 -4, !dbg !2733
  %356 = bitcast i8* %add.ptr1.i.i.i448 to %union.unaligned_32*, !dbg !2734
  %l.i.i.i449 = bitcast %union.unaligned_32* %356 to i32*, !dbg !2734
  %357 = load i32, i32* %l.i.i.i449, align 1, !dbg !2734
  store i32 %357, i32* %retval.i435, align 4, !dbg !2735
  br label %bytestream2_get_le32.exit451, !dbg !2735

bytestream2_get_le32.exit451:                     ; preds = %if.then.i445, %if.end.i450
  %358 = load i32, i32* %retval.i435, align 4, !dbg !2736
  store i32 %358, i32* %offset, align 4, !dbg !2737
  %359 = load i32, i32* %offset, align 4, !dbg !2738
  %360 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2740
  %size138 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %360, i32 0, i32 4, !dbg !2741
  %361 = load i32, i32* %size138, align 8, !dbg !2741
  %362 = load i32, i32* %header_size, align 4, !dbg !2742
  %sub139 = sub i32 %361, %362, !dbg !2743
  %cmp140 = icmp uge i32 %359, %sub139, !dbg !2744
  br i1 %cmp140, label %if.then142, label %if.end143, !dbg !2745

if.then142:                                       ; preds = %bytestream2_get_le32.exit451
  store i32 -1094995529, i32* %retval, align 4, !dbg !2746
  br label %return, !dbg !2746

if.end143:                                        ; preds = %bytestream2_get_le32.exit451
  %363 = load i32, i32* %i, align 4, !dbg !2747
  %cmp144 = icmp eq i32 %363, 0, !dbg !2749
  br i1 %cmp144, label %if.then146, label %if.end147, !dbg !2750

if.then146:                                       ; preds = %if.end143
  %364 = load i32, i32* %offset, align 4, !dbg !2751
  store i32 %364, i32* %first_offset, align 4, !dbg !2752
  br label %if.end147, !dbg !2753

if.end147:                                        ; preds = %if.then146, %if.end143
  store i32 0, i32* %j, align 4, !dbg !2754
  br label %for.cond148, !dbg !2755

for.cond148:                                      ; preds = %for.inc, %if.end147
  %365 = load i32, i32* %j, align 4, !dbg !2756
  %366 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2758
  %nb_slices149 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %366, i32 0, i32 4, !dbg !2759
  %367 = load i32, i32* %nb_slices149, align 4, !dbg !2759
  %sub150 = sub nsw i32 %367, 1, !dbg !2760
  %cmp151 = icmp slt i32 %365, %sub150, !dbg !2761
  br i1 %cmp151, label %for.body153, label %for.end, !dbg !2762

for.body153:                                      ; preds = %for.cond148
  %368 = load i32, i32* %offset, align 4, !dbg !2763
  %369 = load i32, i32* %header_size, align 4, !dbg !2764
  %add154 = add i32 %368, %369, !dbg !2765
  %370 = load i32, i32* %j, align 4, !dbg !2766
  %idxprom155 = sext i32 %370 to i64, !dbg !2767
  %371 = load i32, i32* %i, align 4, !dbg !2768
  %idxprom156 = sext i32 %371 to i64, !dbg !2767
  %372 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2767
  %slices157 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %372, i32 0, i32 13, !dbg !2769
  %arrayidx158 = getelementptr inbounds [4 x %struct.Slice*], [4 x %struct.Slice*]* %slices157, i64 0, i64 %idxprom156, !dbg !2767
  %373 = load %struct.Slice*, %struct.Slice** %arrayidx158, align 8, !dbg !2767
  %arrayidx159 = getelementptr inbounds %struct.Slice, %struct.Slice* %373, i64 %idxprom155, !dbg !2767
  %start = getelementptr inbounds %struct.Slice, %struct.Slice* %arrayidx159, i32 0, i32 0, !dbg !2770
  store i32 %add154, i32* %start, align 4, !dbg !2771
  store %struct.GetByteContext* %gbyte, %struct.GetByteContext** %g.addr.i417, align 8, !dbg !2772
  %374 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i417, align 8, !dbg !2773
  %buffer_end.i418 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %374, i32 0, i32 1, !dbg !2774
  %375 = load i8*, i8** %buffer_end.i418, align 8, !dbg !2774
  %376 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i417, align 8, !dbg !2775
  %buffer.i419 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %376, i32 0, i32 0, !dbg !2776
  %377 = load i8*, i8** %buffer.i419, align 8, !dbg !2776
  %sub.ptr.lhs.cast.i420 = ptrtoint i8* %375 to i64, !dbg !2777
  %sub.ptr.rhs.cast.i421 = ptrtoint i8* %377 to i64, !dbg !2777
  %sub.ptr.sub.i422 = sub i64 %sub.ptr.lhs.cast.i420, %sub.ptr.rhs.cast.i421, !dbg !2777
  %cmp.i423 = icmp slt i64 %sub.ptr.sub.i422, 4, !dbg !2778
  br i1 %cmp.i423, label %if.then.i426, label %if.end.i431, !dbg !2779

if.then.i426:                                     ; preds = %for.body153
  %378 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i417, align 8, !dbg !2780
  %buffer_end1.i424 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %378, i32 0, i32 1, !dbg !2781
  %379 = load i8*, i8** %buffer_end1.i424, align 8, !dbg !2781
  %380 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i417, align 8, !dbg !2782
  %buffer2.i425 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %380, i32 0, i32 0, !dbg !2783
  store i8* %379, i8** %buffer2.i425, align 8, !dbg !2784
  store i32 0, i32* %retval.i416, align 4, !dbg !2785
  br label %bytestream2_get_le32.exit432, !dbg !2785

if.end.i431:                                      ; preds = %for.body153
  %381 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i417, align 8, !dbg !2786
  store %struct.GetByteContext* %381, %struct.GetByteContext** %g.addr.i.i415, align 8, !dbg !2787
  %382 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i415, align 8, !dbg !2788
  %buffer.i.i427 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %382, i32 0, i32 0, !dbg !2789
  store i8** %buffer.i.i427, i8*** %b.addr.i.i.i414, align 8, !dbg !2790
  %383 = load i8**, i8*** %b.addr.i.i.i414, align 8, !dbg !2791
  %384 = load i8*, i8** %383, align 8, !dbg !2792
  %add.ptr.i.i.i428 = getelementptr inbounds i8, i8* %384, i64 4, !dbg !2792
  store i8* %add.ptr.i.i.i428, i8** %383, align 8, !dbg !2792
  %385 = load i8**, i8*** %b.addr.i.i.i414, align 8, !dbg !2793
  %386 = load i8*, i8** %385, align 8, !dbg !2794
  %add.ptr1.i.i.i429 = getelementptr inbounds i8, i8* %386, i64 -4, !dbg !2795
  %387 = bitcast i8* %add.ptr1.i.i.i429 to %union.unaligned_32*, !dbg !2796
  %l.i.i.i430 = bitcast %union.unaligned_32* %387 to i32*, !dbg !2796
  %388 = load i32, i32* %l.i.i.i430, align 1, !dbg !2796
  store i32 %388, i32* %retval.i416, align 4, !dbg !2797
  br label %bytestream2_get_le32.exit432, !dbg !2797

bytestream2_get_le32.exit432:                     ; preds = %if.then.i426, %if.end.i431
  %389 = load i32, i32* %retval.i416, align 4, !dbg !2798
  store i32 %389, i32* %next_offset, align 4, !dbg !2799
  %390 = load i32, i32* %next_offset, align 4, !dbg !2800
  %391 = load i32, i32* %offset, align 4, !dbg !2802
  %cmp161 = icmp ule i32 %390, %391, !dbg !2803
  br i1 %cmp161, label %if.then168, label %lor.lhs.false163, !dbg !2804

lor.lhs.false163:                                 ; preds = %bytestream2_get_le32.exit432
  %392 = load i32, i32* %next_offset, align 4, !dbg !2805
  %393 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2807
  %size164 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %393, i32 0, i32 4, !dbg !2808
  %394 = load i32, i32* %size164, align 8, !dbg !2808
  %395 = load i32, i32* %header_size, align 4, !dbg !2809
  %sub165 = sub i32 %394, %395, !dbg !2810
  %cmp166 = icmp uge i32 %392, %sub165, !dbg !2811
  br i1 %cmp166, label %if.then168, label %if.end169, !dbg !2812

if.then168:                                       ; preds = %lor.lhs.false163, %bytestream2_get_le32.exit432
  store i32 -1094995529, i32* %retval, align 4, !dbg !2813
  br label %return, !dbg !2813

if.end169:                                        ; preds = %lor.lhs.false163
  %396 = load i32, i32* %next_offset, align 4, !dbg !2814
  %397 = load i32, i32* %offset, align 4, !dbg !2815
  %sub170 = sub i32 %396, %397, !dbg !2816
  %398 = load i32, i32* %j, align 4, !dbg !2817
  %idxprom171 = sext i32 %398 to i64, !dbg !2818
  %399 = load i32, i32* %i, align 4, !dbg !2819
  %idxprom172 = sext i32 %399 to i64, !dbg !2818
  %400 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2818
  %slices173 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %400, i32 0, i32 13, !dbg !2820
  %arrayidx174 = getelementptr inbounds [4 x %struct.Slice*], [4 x %struct.Slice*]* %slices173, i64 0, i64 %idxprom172, !dbg !2818
  %401 = load %struct.Slice*, %struct.Slice** %arrayidx174, align 8, !dbg !2818
  %arrayidx175 = getelementptr inbounds %struct.Slice, %struct.Slice* %401, i64 %idxprom171, !dbg !2818
  %size176 = getelementptr inbounds %struct.Slice, %struct.Slice* %arrayidx175, i32 0, i32 1, !dbg !2821
  store i32 %sub170, i32* %size176, align 4, !dbg !2822
  %402 = load i32, i32* %next_offset, align 4, !dbg !2823
  store i32 %402, i32* %offset, align 4, !dbg !2824
  br label %for.inc, !dbg !2825

for.inc:                                          ; preds = %if.end169
  %403 = load i32, i32* %j, align 4, !dbg !2826
  %inc = add nsw i32 %403, 1, !dbg !2826
  store i32 %inc, i32* %j, align 4, !dbg !2826
  br label %for.cond148, !dbg !2828, !llvm.loop !2829

for.end:                                          ; preds = %for.cond148
  %404 = load i32, i32* %offset, align 4, !dbg !2831
  %405 = load i32, i32* %header_size, align 4, !dbg !2832
  %add177 = add i32 %404, %405, !dbg !2833
  %406 = load i32, i32* %j, align 4, !dbg !2834
  %idxprom178 = sext i32 %406 to i64, !dbg !2835
  %407 = load i32, i32* %i, align 4, !dbg !2836
  %idxprom179 = sext i32 %407 to i64, !dbg !2835
  %408 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2835
  %slices180 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %408, i32 0, i32 13, !dbg !2837
  %arrayidx181 = getelementptr inbounds [4 x %struct.Slice*], [4 x %struct.Slice*]* %slices180, i64 0, i64 %idxprom179, !dbg !2835
  %409 = load %struct.Slice*, %struct.Slice** %arrayidx181, align 8, !dbg !2835
  %arrayidx182 = getelementptr inbounds %struct.Slice, %struct.Slice* %409, i64 %idxprom178, !dbg !2835
  %start183 = getelementptr inbounds %struct.Slice, %struct.Slice* %arrayidx182, i32 0, i32 0, !dbg !2838
  store i32 %add177, i32* %start183, align 4, !dbg !2839
  %410 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2840
  %size184 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %410, i32 0, i32 4, !dbg !2841
  %411 = load i32, i32* %size184, align 8, !dbg !2841
  %412 = load i32, i32* %j, align 4, !dbg !2842
  %idxprom185 = sext i32 %412 to i64, !dbg !2843
  %413 = load i32, i32* %i, align 4, !dbg !2844
  %idxprom186 = sext i32 %413 to i64, !dbg !2843
  %414 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2843
  %slices187 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %414, i32 0, i32 13, !dbg !2845
  %arrayidx188 = getelementptr inbounds [4 x %struct.Slice*], [4 x %struct.Slice*]* %slices187, i64 0, i64 %idxprom186, !dbg !2843
  %415 = load %struct.Slice*, %struct.Slice** %arrayidx188, align 8, !dbg !2843
  %arrayidx189 = getelementptr inbounds %struct.Slice, %struct.Slice* %415, i64 %idxprom185, !dbg !2843
  %start190 = getelementptr inbounds %struct.Slice, %struct.Slice* %arrayidx189, i32 0, i32 0, !dbg !2846
  %416 = load i32, i32* %start190, align 4, !dbg !2846
  %sub191 = sub i32 %411, %416, !dbg !2847
  %417 = load i32, i32* %j, align 4, !dbg !2848
  %idxprom192 = sext i32 %417 to i64, !dbg !2849
  %418 = load i32, i32* %i, align 4, !dbg !2850
  %idxprom193 = sext i32 %418 to i64, !dbg !2849
  %419 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2849
  %slices194 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %419, i32 0, i32 13, !dbg !2851
  %arrayidx195 = getelementptr inbounds [4 x %struct.Slice*], [4 x %struct.Slice*]* %slices194, i64 0, i64 %idxprom193, !dbg !2849
  %420 = load %struct.Slice*, %struct.Slice** %arrayidx195, align 8, !dbg !2849
  %arrayidx196 = getelementptr inbounds %struct.Slice, %struct.Slice* %420, i64 %idxprom192, !dbg !2849
  %size197 = getelementptr inbounds %struct.Slice, %struct.Slice* %arrayidx196, i32 0, i32 1, !dbg !2852
  store i32 %sub191, i32* %size197, align 4, !dbg !2853
  br label %for.inc198, !dbg !2854

for.inc198:                                       ; preds = %for.end
  %421 = load i32, i32* %i, align 4, !dbg !2855
  %inc199 = add nsw i32 %421, 1, !dbg !2855
  store i32 %inc199, i32* %i, align 4, !dbg !2855
  br label %for.cond, !dbg !2857, !llvm.loop !2858

for.end200:                                       ; preds = %for.cond
  store %struct.GetByteContext* %gbyte, %struct.GetByteContext** %g.addr.i398, align 8, !dbg !2860
  %422 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i398, align 8, !dbg !2861
  %buffer_end.i399 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %422, i32 0, i32 1, !dbg !2862
  %423 = load i8*, i8** %buffer_end.i399, align 8, !dbg !2862
  %424 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i398, align 8, !dbg !2863
  %buffer.i400 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %424, i32 0, i32 0, !dbg !2864
  %425 = load i8*, i8** %buffer.i400, align 8, !dbg !2864
  %sub.ptr.lhs.cast.i401 = ptrtoint i8* %423 to i64, !dbg !2865
  %sub.ptr.rhs.cast.i402 = ptrtoint i8* %425 to i64, !dbg !2865
  %sub.ptr.sub.i403 = sub i64 %sub.ptr.lhs.cast.i401, %sub.ptr.rhs.cast.i402, !dbg !2865
  %cmp.i404 = icmp slt i64 %sub.ptr.sub.i403, 1, !dbg !2866
  br i1 %cmp.i404, label %if.then.i407, label %if.end.i412, !dbg !2867

if.then.i407:                                     ; preds = %for.end200
  %426 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i398, align 8, !dbg !2868
  %buffer_end1.i405 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %426, i32 0, i32 1, !dbg !2869
  %427 = load i8*, i8** %buffer_end1.i405, align 8, !dbg !2869
  %428 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i398, align 8, !dbg !2870
  %buffer2.i406 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %428, i32 0, i32 0, !dbg !2871
  store i8* %427, i8** %buffer2.i406, align 8, !dbg !2872
  store i32 0, i32* %retval.i397, align 4, !dbg !2873
  br label %bytestream2_get_byte.exit413, !dbg !2873

if.end.i412:                                      ; preds = %for.end200
  %429 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i398, align 8, !dbg !2874
  store %struct.GetByteContext* %429, %struct.GetByteContext** %g.addr.i.i396, align 8, !dbg !2875
  %430 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i396, align 8, !dbg !2876
  %buffer.i.i408 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %430, i32 0, i32 0, !dbg !2877
  store i8** %buffer.i.i408, i8*** %b.addr.i.i.i395, align 8, !dbg !2878
  %431 = load i8**, i8*** %b.addr.i.i.i395, align 8, !dbg !2879
  %432 = load i8*, i8** %431, align 8, !dbg !2880
  %add.ptr.i.i.i409 = getelementptr inbounds i8, i8* %432, i64 1, !dbg !2880
  store i8* %add.ptr.i.i.i409, i8** %431, align 8, !dbg !2880
  %433 = load i8**, i8*** %b.addr.i.i.i395, align 8, !dbg !2881
  %434 = load i8*, i8** %433, align 8, !dbg !2882
  %add.ptr1.i.i.i410 = getelementptr inbounds i8, i8* %434, i64 -1, !dbg !2883
  %435 = load i8, i8* %add.ptr1.i.i.i410, align 1, !dbg !2884
  %conv.i.i.i411 = zext i8 %435 to i32, !dbg !2885
  store i32 %conv.i.i.i411, i32* %retval.i397, align 4, !dbg !2886
  br label %bytestream2_get_byte.exit413, !dbg !2886

bytestream2_get_byte.exit413:                     ; preds = %if.then.i407, %if.end.i412
  %436 = load i32, i32* %retval.i397, align 4, !dbg !2887
  %437 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2888
  %planes202 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %437, i32 0, i32 5, !dbg !2889
  %438 = load i32, i32* %planes202, align 8, !dbg !2889
  %cmp203 = icmp ne i32 %436, %438, !dbg !2890
  br i1 %cmp203, label %if.then205, label %if.end206, !dbg !2891

if.then205:                                       ; preds = %bytestream2_get_byte.exit413
  store i32 -1094995529, i32* %retval, align 4, !dbg !2892
  br label %return, !dbg !2892

if.end206:                                        ; preds = %bytestream2_get_byte.exit413
  %439 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2893
  %nb_slices207 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %439, i32 0, i32 4, !dbg !2894
  %440 = load i32, i32* %nb_slices207, align 4, !dbg !2894
  %441 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2895
  %planes208 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %441, i32 0, i32 5, !dbg !2896
  %442 = load i32, i32* %planes208, align 8, !dbg !2896
  %mul209 = mul nsw i32 %440, %442, !dbg !2897
  store %struct.GetByteContext* %gbyte, %struct.GetByteContext** %g.addr.i374, align 8, !dbg !2898
  store i32 %mul209, i32* %size.addr.i375, align 4, !dbg !2898
  %443 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i374, align 8, !dbg !2899
  %buffer_end.i376 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %443, i32 0, i32 1, !dbg !2900
  %444 = load i8*, i8** %buffer_end.i376, align 8, !dbg !2900
  %445 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i374, align 8, !dbg !2901
  %buffer.i377 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %445, i32 0, i32 0, !dbg !2902
  %446 = load i8*, i8** %buffer.i377, align 8, !dbg !2902
  %sub.ptr.lhs.cast.i378 = ptrtoint i8* %444 to i64, !dbg !2903
  %sub.ptr.rhs.cast.i379 = ptrtoint i8* %446 to i64, !dbg !2903
  %sub.ptr.sub.i380 = sub i64 %sub.ptr.lhs.cast.i378, %sub.ptr.rhs.cast.i379, !dbg !2903
  %447 = load i32, i32* %size.addr.i375, align 4, !dbg !2904
  %conv.i381 = zext i32 %447 to i64, !dbg !2905
  %cmp.i382 = icmp sgt i64 %sub.ptr.sub.i380, %conv.i381, !dbg !2906
  br i1 %cmp.i382, label %cond.true.i384, label %cond.false.i390, !dbg !2907

cond.true.i384:                                   ; preds = %if.end206
  %448 = load i32, i32* %size.addr.i375, align 4, !dbg !2908
  %conv2.i383 = zext i32 %448 to i64, !dbg !2909
  br label %bytestream2_skip.exit394, !dbg !2910

cond.false.i390:                                  ; preds = %if.end206
  %449 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i374, align 8, !dbg !2911
  %buffer_end3.i385 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %449, i32 0, i32 1, !dbg !2912
  %450 = load i8*, i8** %buffer_end3.i385, align 8, !dbg !2912
  %451 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i374, align 8, !dbg !2913
  %buffer4.i386 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %451, i32 0, i32 0, !dbg !2914
  %452 = load i8*, i8** %buffer4.i386, align 8, !dbg !2914
  %sub.ptr.lhs.cast5.i387 = ptrtoint i8* %450 to i64, !dbg !2915
  %sub.ptr.rhs.cast6.i388 = ptrtoint i8* %452 to i64, !dbg !2915
  %sub.ptr.sub7.i389 = sub i64 %sub.ptr.lhs.cast5.i387, %sub.ptr.rhs.cast6.i388, !dbg !2915
  br label %bytestream2_skip.exit394, !dbg !2916

bytestream2_skip.exit394:                         ; preds = %cond.true.i384, %cond.false.i390
  %cond.i391 = phi i64 [ %conv2.i383, %cond.true.i384 ], [ %sub.ptr.sub7.i389, %cond.false.i390 ], !dbg !2917
  %453 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i374, align 8, !dbg !2918
  %buffer8.i392 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %453, i32 0, i32 0, !dbg !2919
  %454 = load i8*, i8** %buffer8.i392, align 8, !dbg !2920
  %add.ptr.i393 = getelementptr inbounds i8, i8* %454, i64 %cond.i391, !dbg !2920
  store i8* %add.ptr.i393, i8** %buffer8.i392, align 8, !dbg !2920
  %455 = load i32, i32* %header_size, align 4, !dbg !2921
  %456 = load i32, i32* %first_offset, align 4, !dbg !2922
  %add210 = add i32 %455, %456, !dbg !2923
  store %struct.GetByteContext* %gbyte, %struct.GetByteContext** %g.addr.i367, align 8, !dbg !2924
  %457 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i367, align 8, !dbg !2925
  %buffer.i368 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %457, i32 0, i32 0, !dbg !2926
  %458 = load i8*, i8** %buffer.i368, align 8, !dbg !2926
  %459 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i367, align 8, !dbg !2927
  %buffer_start.i369 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %459, i32 0, i32 2, !dbg !2928
  %460 = load i8*, i8** %buffer_start.i369, align 8, !dbg !2928
  %sub.ptr.lhs.cast.i370 = ptrtoint i8* %458 to i64, !dbg !2929
  %sub.ptr.rhs.cast.i371 = ptrtoint i8* %460 to i64, !dbg !2929
  %sub.ptr.sub.i372 = sub i64 %sub.ptr.lhs.cast.i370, %sub.ptr.rhs.cast.i371, !dbg !2929
  %conv.i373 = trunc i64 %sub.ptr.sub.i372 to i32, !dbg !2930
  %sub212 = sub i32 %add210, %conv.i373, !dbg !2931
  store i32 %sub212, i32* %table_size, align 4, !dbg !2932
  %461 = load i32, i32* %table_size, align 4, !dbg !2933
  %cmp213 = icmp slt i32 %461, 2, !dbg !2935
  br i1 %cmp213, label %if.then215, label %if.end216, !dbg !2936

if.then215:                                       ; preds = %bytestream2_skip.exit394
  store i32 -1094995529, i32* %retval, align 4, !dbg !2937
  br label %return, !dbg !2937

if.end216:                                        ; preds = %bytestream2_skip.exit394
  %462 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2938
  %data217 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %462, i32 0, i32 3, !dbg !2939
  %463 = load i8*, i8** %data217, align 8, !dbg !2939
  store %struct.GetByteContext* %gbyte, %struct.GetByteContext** %g.addr.i360, align 8, !dbg !2940
  %464 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i360, align 8, !dbg !2941
  %buffer.i361 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %464, i32 0, i32 0, !dbg !2942
  %465 = load i8*, i8** %buffer.i361, align 8, !dbg !2942
  %466 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i360, align 8, !dbg !2943
  %buffer_start.i362 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %466, i32 0, i32 2, !dbg !2944
  %467 = load i8*, i8** %buffer_start.i362, align 8, !dbg !2944
  %sub.ptr.lhs.cast.i363 = ptrtoint i8* %465 to i64, !dbg !2945
  %sub.ptr.rhs.cast.i364 = ptrtoint i8* %467 to i64, !dbg !2945
  %sub.ptr.sub.i365 = sub i64 %sub.ptr.lhs.cast.i363, %sub.ptr.rhs.cast.i364, !dbg !2945
  %conv.i366 = trunc i64 %sub.ptr.sub.i365 to i32, !dbg !2946
  %idx.ext = sext i32 %conv.i366 to i64, !dbg !2947
  %add.ptr = getelementptr inbounds i8, i8* %463, i64 %idx.ext, !dbg !2947
  %468 = load i32, i32* %table_size, align 4, !dbg !2948
  %call219 = call i32 @init_get_bits8(%struct.GetBitContext* %gbit, i8* %add.ptr, i32 %468), !dbg !2949
  store i32 %call219, i32* %ret, align 4, !dbg !2951
  %469 = load i32, i32* %ret, align 4, !dbg !2952
  %cmp220 = icmp slt i32 %469, 0, !dbg !2954
  br i1 %cmp220, label %if.then222, label %if.end223, !dbg !2955

if.then222:                                       ; preds = %if.end216
  %470 = load i32, i32* %ret, align 4, !dbg !2956
  store i32 %470, i32* %retval, align 4, !dbg !2957
  br label %return, !dbg !2957

if.end223:                                        ; preds = %if.end216
  %471 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2958
  %472 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2959
  %max224 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %472, i32 0, i32 1, !dbg !2960
  %473 = load i32, i32* %max224, align 8, !dbg !2960
  %call225 = call i32 @build_huffman(%struct.AVCodecContext* %471, %struct.GetBitContext* %gbit, i32 %473), !dbg !2961
  store i32 %call225, i32* %ret, align 4, !dbg !2962
  %474 = load i32, i32* %ret, align 4, !dbg !2963
  %cmp226 = icmp slt i32 %474, 0, !dbg !2965
  br i1 %cmp226, label %if.then228, label %if.end229, !dbg !2966

if.then228:                                       ; preds = %if.end223
  %475 = load i32, i32* %ret, align 4, !dbg !2967
  store i32 %475, i32* %retval, align 4, !dbg !2968
  br label %return, !dbg !2968

if.end229:                                        ; preds = %if.end223
  %476 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !2969
  %pict_type = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %476, i32 0, i32 8, !dbg !2970
  store i32 1, i32* %pict_type, align 4, !dbg !2971
  %477 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !2972
  %key_frame = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %477, i32 0, i32 7, !dbg !2973
  store i32 1, i32* %key_frame, align 8, !dbg !2974
  %478 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2975
  %call230 = call i32 @ff_thread_get_buffer(%struct.AVCodecContext* %478, %struct.ThreadFrame* %frame, i32 0), !dbg !2977
  store i32 %call230, i32* %ret, align 4, !dbg !2978
  %cmp231 = icmp slt i32 %call230, 0, !dbg !2979
  br i1 %cmp231, label %if.then233, label %if.end234, !dbg !2980

if.then233:                                       ; preds = %if.end229
  %479 = load i32, i32* %ret, align 4, !dbg !2981
  store i32 %479, i32* %retval, align 4, !dbg !2982
  br label %return, !dbg !2982

if.end234:                                        ; preds = %if.end229
  %480 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2983
  %data235 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %480, i32 0, i32 3, !dbg !2984
  %481 = load i8*, i8** %data235, align 8, !dbg !2984
  %482 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2985
  %buf = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %482, i32 0, i32 10, !dbg !2986
  store i8* %481, i8** %buf, align 8, !dbg !2987
  %483 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !2988
  %484 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2989
  %p236 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %484, i32 0, i32 0, !dbg !2990
  store %struct.AVFrame* %483, %struct.AVFrame** %p236, align 8, !dbg !2991
  %485 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2992
  %execute2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %485, i32 0, i32 151, !dbg !2993
  %486 = load i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)** %execute2, align 8, !dbg !2993
  %487 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2994
  %488 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2995
  %magy_decode_slice237 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %488, i32 0, i32 18, !dbg !2996
  %489 = load i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i32 (%struct.AVCodecContext*, i8*, i32, i32)** %magy_decode_slice237, align 8, !dbg !2996
  %490 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !2997
  %nb_slices238 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %490, i32 0, i32 4, !dbg !2998
  %491 = load i32, i32* %nb_slices238, align 4, !dbg !2998
  %call239 = call i32 %486(%struct.AVCodecContext* %487, i32 (%struct.AVCodecContext*, i8*, i32, i32)* %489, i8* null, i32* null, i32 %491), !dbg !2992
  %492 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2999
  %pix_fmt240 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %492, i32 0, i32 25, !dbg !3001
  %493 = load i32, i32* %pix_fmt240, align 8, !dbg !3001
  %cmp241 = icmp eq i32 %493, 73, !dbg !3002
  br i1 %cmp241, label %if.then263, label %lor.lhs.false243, !dbg !3003

lor.lhs.false243:                                 ; preds = %if.end234
  %494 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3004
  %pix_fmt244 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %494, i32 0, i32 25, !dbg !3005
  %495 = load i32, i32* %pix_fmt244, align 8, !dbg !3005
  %cmp245 = icmp eq i32 %495, 113, !dbg !3006
  br i1 %cmp245, label %if.then263, label %lor.lhs.false247, !dbg !3007

lor.lhs.false247:                                 ; preds = %lor.lhs.false243
  %496 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3008
  %pix_fmt248 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %496, i32 0, i32 25, !dbg !3009
  %497 = load i32, i32* %pix_fmt248, align 8, !dbg !3009
  %cmp249 = icmp eq i32 %497, 77, !dbg !3010
  br i1 %cmp249, label %if.then263, label %lor.lhs.false251, !dbg !3011

lor.lhs.false251:                                 ; preds = %lor.lhs.false247
  %498 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3012
  %pix_fmt252 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %498, i32 0, i32 25, !dbg !3013
  %499 = load i32, i32* %pix_fmt252, align 8, !dbg !3013
  %cmp253 = icmp eq i32 %499, 166, !dbg !3014
  br i1 %cmp253, label %if.then263, label %lor.lhs.false255, !dbg !3015

lor.lhs.false255:                                 ; preds = %lor.lhs.false251
  %500 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3016
  %pix_fmt256 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %500, i32 0, i32 25, !dbg !3017
  %501 = load i32, i32* %pix_fmt256, align 8, !dbg !3017
  %cmp257 = icmp eq i32 %501, 164, !dbg !3018
  br i1 %cmp257, label %if.then263, label %lor.lhs.false259, !dbg !3019

lor.lhs.false259:                                 ; preds = %lor.lhs.false255
  %502 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3020
  %pix_fmt260 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %502, i32 0, i32 25, !dbg !3021
  %503 = load i32, i32* %pix_fmt260, align 8, !dbg !3021
  %cmp261 = icmp eq i32 %503, 137, !dbg !3022
  br i1 %cmp261, label %if.then263, label %if.else, !dbg !3023

if.then263:                                       ; preds = %lor.lhs.false259, %lor.lhs.false255, %lor.lhs.false251, %lor.lhs.false247, %lor.lhs.false243, %if.end234
  br label %do.body, !dbg !3024, !llvm.loop !3026

do.body:                                          ; preds = %if.then263
  call void @llvm.dbg.declare(metadata i8** %SWAP_tmp, metadata !3027, metadata !1637), !dbg !3029
  %504 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !3030
  %data264 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %504, i32 0, i32 0, !dbg !3032
  %arrayidx265 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data264, i64 0, i64 1, !dbg !3030
  %505 = load i8*, i8** %arrayidx265, align 8, !dbg !3030
  store i8* %505, i8** %SWAP_tmp, align 8, !dbg !3033
  %506 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !3034
  %data266 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %506, i32 0, i32 0, !dbg !3035
  %arrayidx267 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data266, i64 0, i64 0, !dbg !3034
  %507 = load i8*, i8** %arrayidx267, align 8, !dbg !3034
  %508 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !3036
  %data268 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %508, i32 0, i32 0, !dbg !3037
  %arrayidx269 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data268, i64 0, i64 1, !dbg !3036
  store i8* %507, i8** %arrayidx269, align 8, !dbg !3038
  %509 = load i8*, i8** %SWAP_tmp, align 8, !dbg !3039
  %510 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !3040
  %data270 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %510, i32 0, i32 0, !dbg !3041
  %arrayidx271 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data270, i64 0, i64 0, !dbg !3040
  store i8* %509, i8** %arrayidx271, align 8, !dbg !3042
  br label %do.end, !dbg !3043

do.end:                                           ; preds = %do.body
  br label %do.body272, !dbg !3044, !llvm.loop !3045

do.body272:                                       ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %SWAP_tmp273, metadata !3046, metadata !1637), !dbg !3048
  %511 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !3049
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %511, i32 0, i32 1, !dbg !3051
  %arrayidx274 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 1, !dbg !3049
  %512 = load i32, i32* %arrayidx274, align 4, !dbg !3049
  store i32 %512, i32* %SWAP_tmp273, align 4, !dbg !3052
  %513 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !3053
  %linesize275 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %513, i32 0, i32 1, !dbg !3054
  %arrayidx276 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize275, i64 0, i64 0, !dbg !3053
  %514 = load i32, i32* %arrayidx276, align 8, !dbg !3053
  %515 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !3055
  %linesize277 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %515, i32 0, i32 1, !dbg !3056
  %arrayidx278 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize277, i64 0, i64 1, !dbg !3055
  store i32 %514, i32* %arrayidx278, align 4, !dbg !3057
  %516 = load i32, i32* %SWAP_tmp273, align 4, !dbg !3058
  %517 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !3059
  %linesize279 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %517, i32 0, i32 1, !dbg !3060
  %arrayidx280 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize279, i64 0, i64 0, !dbg !3059
  store i32 %516, i32* %arrayidx280, align 8, !dbg !3061
  br label %do.end281, !dbg !3062

do.end281:                                        ; preds = %do.body272
  br label %if.end290, !dbg !3063

if.else:                                          ; preds = %lor.lhs.false259
  %518 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !3064
  %color_matrix282 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %518, i32 0, i32 7, !dbg !3066
  %519 = load i32, i32* %color_matrix282, align 8, !dbg !3066
  switch i32 %519, label %sw.epilog286 [
    i32 1, label %sw.bb283
    i32 2, label %sw.bb284
  ], !dbg !3067

sw.bb283:                                         ; preds = %if.else
  %520 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !3068
  %colorspace = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %520, i32 0, i32 34, !dbg !3070
  store i32 5, i32* %colorspace, align 4, !dbg !3071
  br label %sw.epilog286, !dbg !3072

sw.bb284:                                         ; preds = %if.else
  %521 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !3073
  %colorspace285 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %521, i32 0, i32 34, !dbg !3074
  store i32 1, i32* %colorspace285, align 4, !dbg !3075
  br label %sw.epilog286, !dbg !3076

sw.epilog286:                                     ; preds = %if.else, %sw.bb284, %sw.bb283
  %522 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !3077
  %flags287 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %522, i32 0, i32 8, !dbg !3078
  %523 = load i32, i32* %flags287, align 4, !dbg !3078
  %and288 = and i32 %523, 4, !dbg !3079
  %tobool289 = icmp ne i32 %and288, 0, !dbg !3080
  %cond = select i1 %tobool289, i32 2, i32 1, !dbg !3080
  %524 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !3081
  %color_range = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %524, i32 0, i32 31, !dbg !3082
  store i32 %cond, i32* %color_range, align 8, !dbg !3083
  br label %if.end290

if.end290:                                        ; preds = %sw.epilog286, %do.end281
  %525 = load i32*, i32** %got_frame.addr, align 8, !dbg !3084
  store i32 1, i32* %525, align 4, !dbg !3085
  %526 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !3086
  %size291 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %526, i32 0, i32 4, !dbg !3087
  %527 = load i32, i32* %size291, align 8, !dbg !3087
  store i32 %527, i32* %retval, align 4, !dbg !3088
  br label %return, !dbg !3088

return:                                           ; preds = %if.end290, %if.then233, %if.then228, %if.then222, %if.then215, %if.then205, %if.then168, %if.then142, %if.then135, %if.then120, %if.then110, %if.then102, %if.then98, %sw.default, %if.then10, %if.then6, %if.then
  %528 = load i32, i32* %retval, align 4, !dbg !3089
  ret i32 %528, !dbg !3089
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @magy_decode_end(%struct.AVCodecContext* %avctx) #1 !dbg !3090 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.MagicYUVContext*, align 8
  %i = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3091, metadata !1637), !dbg !3092
  call void @llvm.dbg.declare(metadata %struct.MagicYUVContext** %s, metadata !3093, metadata !1637), !dbg !3095
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3096
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !3097
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3097
  %2 = bitcast i8* %1 to %struct.MagicYUVContext*, !dbg !3096
  store %struct.MagicYUVContext* %2, %struct.MagicYUVContext** %s, align 8, !dbg !3095
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3098, metadata !1637), !dbg !3099
  store i32 0, i32* %i, align 4, !dbg !3100
  br label %for.cond, !dbg !3102

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !3103
  %conv = sext i32 %3 to i64, !dbg !3103
  %cmp = icmp ult i64 %conv, 4, !dbg !3106
  br i1 %cmp, label %for.body, label %for.end, !dbg !3107

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %i, align 4, !dbg !3108
  %idxprom = sext i32 %4 to i64, !dbg !3110
  %5 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !3110
  %slices = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %5, i32 0, i32 13, !dbg !3111
  %arrayidx = getelementptr inbounds [4 x %struct.Slice*], [4 x %struct.Slice*]* %slices, i64 0, i64 %idxprom, !dbg !3110
  %6 = bitcast %struct.Slice** %arrayidx to i8*, !dbg !3112
  call void @av_freep(i8* %6), !dbg !3113
  %7 = load i32, i32* %i, align 4, !dbg !3114
  %idxprom2 = sext i32 %7 to i64, !dbg !3115
  %8 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !3115
  %slices_size = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %8, i32 0, i32 14, !dbg !3116
  %arrayidx3 = getelementptr inbounds [4 x i32], [4 x i32]* %slices_size, i64 0, i64 %idxprom2, !dbg !3115
  store i32 0, i32* %arrayidx3, align 4, !dbg !3117
  %9 = load i32, i32* %i, align 4, !dbg !3118
  %idxprom4 = sext i32 %9 to i64, !dbg !3119
  %10 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !3119
  %vlc = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %10, i32 0, i32 16, !dbg !3120
  %arrayidx5 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* %vlc, i64 0, i64 %idxprom4, !dbg !3119
  call void @ff_free_vlc(%struct.VLC* %arrayidx5), !dbg !3121
  br label %for.inc, !dbg !3122

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !3123
  %inc = add nsw i32 %11, 1, !dbg !3123
  store i32 %inc, i32* %i, align 4, !dbg !3123
  br label %for.cond, !dbg !3125, !llvm.loop !3126

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !3128
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

declare void @ff_llviddsp_init(%struct.LLVidDSPContext*) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #4

declare void @av_log(i8*, i32, i8*, ...) #3

declare void @avpriv_request_sample(i8*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal i32 @huff_build(%struct.VLC* %vlc, i8* %len) #0 !dbg !3129 {
entry:
  %retval = alloca i32, align 4
  %vlc.addr = alloca %struct.VLC*, align 8
  %len.addr = alloca i8*, align 8
  %he = alloca [256 x %struct.HuffEntry], align 16
  %codes = alloca [256 x i32], align 16
  %bits = alloca [256 x i8], align 16
  %syms = alloca [256 x i8], align 16
  %code = alloca i32, align 4
  %i = alloca i32, align 4
  %stack = alloca [64 x [2 x i8*]], align 16
  %sp = alloca i32, align 4
  %start = alloca %struct.HuffEntry*, align 8
  %end = alloca %struct.HuffEntry*, align 8
  %checksort = alloca i32, align 4
  %right = alloca %struct.HuffEntry*, align 8
  %left = alloca %struct.HuffEntry*, align 8
  %mid = alloca %struct.HuffEntry*, align 8
  %SWAP_tmp = alloca %struct.HuffEntry, align 4
  %SWAP_tmp48 = alloca %struct.HuffEntry, align 4
  %SWAP_tmp57 = alloca %struct.HuffEntry, align 4
  %SWAP_tmp67 = alloca %struct.HuffEntry, align 4
  %SWAP_tmp76 = alloca %struct.HuffEntry, align 4
  %SWAP_tmp108 = alloca %struct.HuffEntry, align 4
  %SWAP_tmp115 = alloca %struct.HuffEntry, align 4
  %SWAP_tmp179 = alloca %struct.HuffEntry, align 4
  store %struct.VLC* %vlc, %struct.VLC** %vlc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VLC** %vlc.addr, metadata !3130, metadata !1637), !dbg !3131
  store i8* %len, i8** %len.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %len.addr, metadata !3132, metadata !1637), !dbg !3133
  call void @llvm.dbg.declare(metadata [256 x %struct.HuffEntry]* %he, metadata !3134, metadata !1637), !dbg !3144
  call void @llvm.dbg.declare(metadata [256 x i32]* %codes, metadata !3145, metadata !1637), !dbg !3147
  call void @llvm.dbg.declare(metadata [256 x i8]* %bits, metadata !3148, metadata !1637), !dbg !3150
  call void @llvm.dbg.declare(metadata [256 x i8]* %syms, metadata !3151, metadata !1637), !dbg !3152
  call void @llvm.dbg.declare(metadata i32* %code, metadata !3153, metadata !1637), !dbg !3154
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3155, metadata !1637), !dbg !3156
  store i32 0, i32* %i, align 4, !dbg !3157
  br label %for.cond, !dbg !3159

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3160
  %cmp = icmp slt i32 %0, 256, !dbg !3163
  br i1 %cmp, label %for.body, label %for.end, !dbg !3164

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !3165
  %sub = sub nsw i32 255, %1, !dbg !3167
  %conv = trunc i32 %sub to i16, !dbg !3168
  %2 = load i32, i32* %i, align 4, !dbg !3169
  %idxprom = sext i32 %2 to i64, !dbg !3170
  %arrayidx = getelementptr inbounds [256 x %struct.HuffEntry], [256 x %struct.HuffEntry]* %he, i64 0, i64 %idxprom, !dbg !3170
  %sym = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %arrayidx, i32 0, i32 0, !dbg !3171
  store i16 %conv, i16* %sym, align 8, !dbg !3172
  %3 = load i32, i32* %i, align 4, !dbg !3173
  %idxprom1 = sext i32 %3 to i64, !dbg !3174
  %4 = load i8*, i8** %len.addr, align 8, !dbg !3174
  %arrayidx2 = getelementptr inbounds i8, i8* %4, i64 %idxprom1, !dbg !3174
  %5 = load i8, i8* %arrayidx2, align 1, !dbg !3174
  %6 = load i32, i32* %i, align 4, !dbg !3175
  %idxprom3 = sext i32 %6 to i64, !dbg !3176
  %arrayidx4 = getelementptr inbounds [256 x %struct.HuffEntry], [256 x %struct.HuffEntry]* %he, i64 0, i64 %idxprom3, !dbg !3176
  %len5 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %arrayidx4, i32 0, i32 1, !dbg !3177
  store i8 %5, i8* %len5, align 2, !dbg !3178
  %7 = load i32, i32* %i, align 4, !dbg !3179
  %idxprom6 = sext i32 %7 to i64, !dbg !3181
  %8 = load i8*, i8** %len.addr, align 8, !dbg !3181
  %arrayidx7 = getelementptr inbounds i8, i8* %8, i64 %idxprom6, !dbg !3181
  %9 = load i8, i8* %arrayidx7, align 1, !dbg !3181
  %conv8 = zext i8 %9 to i32, !dbg !3181
  %cmp9 = icmp eq i32 %conv8, 0, !dbg !3182
  br i1 %cmp9, label %if.then, label %lor.lhs.false, !dbg !3183

lor.lhs.false:                                    ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !3184
  %idxprom11 = sext i32 %10 to i64, !dbg !3186
  %11 = load i8*, i8** %len.addr, align 8, !dbg !3186
  %arrayidx12 = getelementptr inbounds i8, i8* %11, i64 %idxprom11, !dbg !3186
  %12 = load i8, i8* %arrayidx12, align 1, !dbg !3186
  %conv13 = zext i8 %12 to i32, !dbg !3186
  %cmp14 = icmp sgt i32 %conv13, 32, !dbg !3187
  br i1 %cmp14, label %if.then, label %if.end, !dbg !3188

if.then:                                          ; preds = %lor.lhs.false, %for.body
  store i32 -1094995529, i32* %retval, align 4, !dbg !3189
  br label %return, !dbg !3189

if.end:                                           ; preds = %lor.lhs.false
  br label %for.inc, !dbg !3190

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %i, align 4, !dbg !3191
  %inc = add nsw i32 %13, 1, !dbg !3191
  store i32 %inc, i32* %i, align 4, !dbg !3191
  br label %for.cond, !dbg !3193, !llvm.loop !3194

for.end:                                          ; preds = %for.cond
  br label %do.body, !dbg !3196, !llvm.loop !3197

do.body:                                          ; preds = %for.end
  call void @llvm.dbg.declare(metadata [64 x [2 x i8*]]* %stack, metadata !3198, metadata !1637), !dbg !3203
  call void @llvm.dbg.declare(metadata i32* %sp, metadata !3204, metadata !1637), !dbg !3205
  store i32 1, i32* %sp, align 4, !dbg !3206
  %arraydecay = getelementptr inbounds [256 x %struct.HuffEntry], [256 x %struct.HuffEntry]* %he, i32 0, i32 0, !dbg !3208
  %14 = bitcast %struct.HuffEntry* %arraydecay to i8*, !dbg !3208
  %arrayidx16 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 0, !dbg !3209
  %arrayidx17 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx16, i64 0, i64 0, !dbg !3209
  store i8* %14, i8** %arrayidx17, align 16, !dbg !3210
  %arraydecay18 = getelementptr inbounds [256 x %struct.HuffEntry], [256 x %struct.HuffEntry]* %he, i32 0, i32 0, !dbg !3211
  %add.ptr = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %arraydecay18, i64 256, !dbg !3212
  %add.ptr19 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %add.ptr, i64 -1, !dbg !3213
  %15 = bitcast %struct.HuffEntry* %add.ptr19 to i8*, !dbg !3211
  %arrayidx20 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 0, !dbg !3214
  %arrayidx21 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx20, i64 0, i64 1, !dbg !3214
  store i8* %15, i8** %arrayidx21, align 8, !dbg !3215
  br label %while.cond, !dbg !3216

while.cond:                                       ; preds = %while.end183, %do.body
  %16 = load i32, i32* %sp, align 4, !dbg !3217
  %tobool = icmp ne i32 %16, 0, !dbg !3219
  br i1 %tobool, label %while.body, label %while.end184, !dbg !3219

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.HuffEntry** %start, metadata !3220, metadata !1637), !dbg !3223
  %17 = load i32, i32* %sp, align 4, !dbg !3224
  %dec = add nsw i32 %17, -1, !dbg !3224
  store i32 %dec, i32* %sp, align 4, !dbg !3224
  %idxprom22 = sext i32 %dec to i64, !dbg !3226
  %arrayidx23 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom22, !dbg !3226
  %arrayidx24 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx23, i64 0, i64 0, !dbg !3226
  %18 = load i8*, i8** %arrayidx24, align 16, !dbg !3226
  %19 = bitcast i8* %18 to %struct.HuffEntry*, !dbg !3226
  store %struct.HuffEntry* %19, %struct.HuffEntry** %start, align 8, !dbg !3227
  call void @llvm.dbg.declare(metadata %struct.HuffEntry** %end, metadata !3228, metadata !1637), !dbg !3229
  %20 = load i32, i32* %sp, align 4, !dbg !3230
  %idxprom25 = sext i32 %20 to i64, !dbg !3231
  %arrayidx26 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom25, !dbg !3231
  %arrayidx27 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx26, i64 0, i64 1, !dbg !3231
  %21 = load i8*, i8** %arrayidx27, align 8, !dbg !3231
  %22 = bitcast i8* %21 to %struct.HuffEntry*, !dbg !3231
  store %struct.HuffEntry* %22, %struct.HuffEntry** %end, align 8, !dbg !3232
  br label %while.cond28, !dbg !3233

while.cond28:                                     ; preds = %if.end182, %while.body
  %23 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !3234
  %24 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !3236
  %cmp29 = icmp ult %struct.HuffEntry* %23, %24, !dbg !3237
  br i1 %cmp29, label %while.body31, label %while.end183, !dbg !3238

while.body31:                                     ; preds = %while.cond28
  %25 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !3239
  %26 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !3243
  %add.ptr32 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %26, i64 -1, !dbg !3244
  %cmp33 = icmp ult %struct.HuffEntry* %25, %add.ptr32, !dbg !3245
  br i1 %cmp33, label %if.then35, label %if.else173, !dbg !3239

if.then35:                                        ; preds = %while.body31
  call void @llvm.dbg.declare(metadata i32* %checksort, metadata !3246, metadata !1637), !dbg !3248
  store i32 0, i32* %checksort, align 4, !dbg !3249
  call void @llvm.dbg.declare(metadata %struct.HuffEntry** %right, metadata !3251, metadata !1637), !dbg !3252
  %27 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !3253
  %add.ptr36 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %27, i64 -2, !dbg !3254
  store %struct.HuffEntry* %add.ptr36, %struct.HuffEntry** %right, align 8, !dbg !3255
  call void @llvm.dbg.declare(metadata %struct.HuffEntry** %left, metadata !3256, metadata !1637), !dbg !3257
  %28 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !3258
  %add.ptr37 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %28, i64 1, !dbg !3259
  store %struct.HuffEntry* %add.ptr37, %struct.HuffEntry** %left, align 8, !dbg !3260
  call void @llvm.dbg.declare(metadata %struct.HuffEntry** %mid, metadata !3261, metadata !1637), !dbg !3262
  %29 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !3263
  %30 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !3264
  %31 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !3265
  %sub.ptr.lhs.cast = ptrtoint %struct.HuffEntry* %30 to i64, !dbg !3266
  %sub.ptr.rhs.cast = ptrtoint %struct.HuffEntry* %31 to i64, !dbg !3266
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3266
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8, !dbg !3266
  %shr = ashr i64 %sub.ptr.div, 1, !dbg !3267
  %add.ptr38 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %29, i64 %shr, !dbg !3268
  store %struct.HuffEntry* %add.ptr38, %struct.HuffEntry** %mid, align 8, !dbg !3269
  %32 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !3270
  %33 = bitcast %struct.HuffEntry* %32 to i8*, !dbg !3270
  %34 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !3271
  %35 = bitcast %struct.HuffEntry* %34 to i8*, !dbg !3271
  %call = call i32 @huff_cmp_len(i8* %33, i8* %35), !dbg !3272
  %cmp39 = icmp sgt i32 %call, 0, !dbg !3273
  br i1 %cmp39, label %if.then41, label %if.else51, !dbg !3272

if.then41:                                        ; preds = %if.then35
  %36 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !3274
  %37 = bitcast %struct.HuffEntry* %36 to i8*, !dbg !3274
  %38 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !3279
  %39 = bitcast %struct.HuffEntry* %38 to i8*, !dbg !3279
  %call42 = call i32 @huff_cmp_len(i8* %37, i8* %39), !dbg !3280
  %cmp43 = icmp sgt i32 %call42, 0, !dbg !3281
  br i1 %cmp43, label %if.then45, label %if.else, !dbg !3280

if.then45:                                        ; preds = %if.then41
  br label %do.body46, !dbg !3282, !llvm.loop !3284

do.body46:                                        ; preds = %if.then45
  call void @llvm.dbg.declare(metadata %struct.HuffEntry* %SWAP_tmp, metadata !3286, metadata !1637), !dbg !3288
  %40 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !3289
  %41 = bitcast %struct.HuffEntry* %SWAP_tmp to i8*, !dbg !3291
  %42 = bitcast %struct.HuffEntry* %40 to i8*, !dbg !3291
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 4, i1 false), !dbg !3291
  %43 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !3292
  %44 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !3293
  %45 = bitcast %struct.HuffEntry* %43 to i8*, !dbg !3294
  %46 = bitcast %struct.HuffEntry* %44 to i8*, !dbg !3294
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* %46, i64 8, i32 4, i1 false), !dbg !3295
  %47 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !3297
  %48 = bitcast %struct.HuffEntry* %47 to i8*, !dbg !3298
  %49 = bitcast %struct.HuffEntry* %SWAP_tmp to i8*, !dbg !3298
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 4, i1 false), !dbg !3299
  br label %do.end, !dbg !3301

do.end:                                           ; preds = %do.body46
  br label %if.end50, !dbg !3302

if.else:                                          ; preds = %if.then41
  br label %do.body47, !dbg !3304, !llvm.loop !3306

do.body47:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.HuffEntry* %SWAP_tmp48, metadata !3308, metadata !1637), !dbg !3310
  %50 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !3311
  %51 = bitcast %struct.HuffEntry* %SWAP_tmp48 to i8*, !dbg !3313
  %52 = bitcast %struct.HuffEntry* %50 to i8*, !dbg !3313
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 4, i1 false), !dbg !3313
  %53 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !3314
  %54 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !3315
  %55 = bitcast %struct.HuffEntry* %53 to i8*, !dbg !3316
  %56 = bitcast %struct.HuffEntry* %54 to i8*, !dbg !3316
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %55, i8* %56, i64 8, i32 4, i1 false), !dbg !3317
  %57 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !3319
  %58 = bitcast %struct.HuffEntry* %57 to i8*, !dbg !3320
  %59 = bitcast %struct.HuffEntry* %SWAP_tmp48 to i8*, !dbg !3320
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %58, i8* %59, i64 8, i32 4, i1 false), !dbg !3321
  br label %do.end49, !dbg !3323

do.end49:                                         ; preds = %do.body47
  br label %if.end50

if.end50:                                         ; preds = %do.end49, %do.end
  br label %if.end61, !dbg !3324

if.else51:                                        ; preds = %if.then35
  %60 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !3326
  %61 = bitcast %struct.HuffEntry* %60 to i8*, !dbg !3326
  %62 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !3330
  %63 = bitcast %struct.HuffEntry* %62 to i8*, !dbg !3330
  %call52 = call i32 @huff_cmp_len(i8* %61, i8* %63), !dbg !3331
  %cmp53 = icmp sgt i32 %call52, 0, !dbg !3332
  br i1 %cmp53, label %if.then55, label %if.else59, !dbg !3331

if.then55:                                        ; preds = %if.else51
  br label %do.body56, !dbg !3333, !llvm.loop !3335

do.body56:                                        ; preds = %if.then55
  call void @llvm.dbg.declare(metadata %struct.HuffEntry* %SWAP_tmp57, metadata !3337, metadata !1637), !dbg !3339
  %64 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !3340
  %65 = bitcast %struct.HuffEntry* %SWAP_tmp57 to i8*, !dbg !3342
  %66 = bitcast %struct.HuffEntry* %64 to i8*, !dbg !3342
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %66, i64 8, i32 4, i1 false), !dbg !3342
  %67 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !3343
  %68 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !3344
  %69 = bitcast %struct.HuffEntry* %67 to i8*, !dbg !3345
  %70 = bitcast %struct.HuffEntry* %68 to i8*, !dbg !3345
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %69, i8* %70, i64 8, i32 4, i1 false), !dbg !3346
  %71 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !3348
  %72 = bitcast %struct.HuffEntry* %71 to i8*, !dbg !3349
  %73 = bitcast %struct.HuffEntry* %SWAP_tmp57 to i8*, !dbg !3349
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %72, i8* %73, i64 8, i32 4, i1 false), !dbg !3350
  br label %do.end58, !dbg !3352

do.end58:                                         ; preds = %do.body56
  br label %if.end60, !dbg !3353

if.else59:                                        ; preds = %if.else51
  store i32 1, i32* %checksort, align 4, !dbg !3355
  br label %if.end60

if.end60:                                         ; preds = %if.else59, %do.end58
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.end50
  %74 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !3357
  %75 = bitcast %struct.HuffEntry* %74 to i8*, !dbg !3357
  %76 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !3360
  %77 = bitcast %struct.HuffEntry* %76 to i8*, !dbg !3360
  %call62 = call i32 @huff_cmp_len(i8* %75, i8* %77), !dbg !3361
  %cmp63 = icmp sgt i32 %call62, 0, !dbg !3362
  br i1 %cmp63, label %if.then65, label %if.end69, !dbg !3361

if.then65:                                        ; preds = %if.end61
  br label %do.body66, !dbg !3363, !llvm.loop !3366

do.body66:                                        ; preds = %if.then65
  call void @llvm.dbg.declare(metadata %struct.HuffEntry* %SWAP_tmp67, metadata !3368, metadata !1637), !dbg !3370
  %78 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !3371
  %79 = bitcast %struct.HuffEntry* %SWAP_tmp67 to i8*, !dbg !3373
  %80 = bitcast %struct.HuffEntry* %78 to i8*, !dbg !3373
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %79, i8* %80, i64 8, i32 4, i1 false), !dbg !3373
  %81 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !3374
  %82 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !3375
  %83 = bitcast %struct.HuffEntry* %81 to i8*, !dbg !3376
  %84 = bitcast %struct.HuffEntry* %82 to i8*, !dbg !3376
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %83, i8* %84, i64 8, i32 4, i1 false), !dbg !3377
  %85 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !3379
  %86 = bitcast %struct.HuffEntry* %85 to i8*, !dbg !3380
  %87 = bitcast %struct.HuffEntry* %SWAP_tmp67 to i8*, !dbg !3380
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 8, i32 4, i1 false), !dbg !3381
  br label %do.end68, !dbg !3383

do.end68:                                         ; preds = %do.body66
  store i32 0, i32* %checksort, align 4, !dbg !3384
  br label %if.end69, !dbg !3386

if.end69:                                         ; preds = %do.end68, %if.end61
  %88 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !3387
  %89 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !3390
  %add.ptr70 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %89, i64 -2, !dbg !3391
  %cmp71 = icmp eq %struct.HuffEntry* %88, %add.ptr70, !dbg !3392
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !3387

if.then73:                                        ; preds = %if.end69
  br label %while.end183, !dbg !3393

if.end74:                                         ; preds = %if.end69
  br label %do.body75, !dbg !3395, !llvm.loop !3397

do.body75:                                        ; preds = %if.end74
  call void @llvm.dbg.declare(metadata %struct.HuffEntry* %SWAP_tmp76, metadata !3399, metadata !1637), !dbg !3401
  %90 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !3402
  %91 = bitcast %struct.HuffEntry* %SWAP_tmp76 to i8*, !dbg !3404
  %92 = bitcast %struct.HuffEntry* %90 to i8*, !dbg !3404
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %91, i8* %92, i64 8, i32 4, i1 false), !dbg !3404
  %93 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !3405
  %94 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !3406
  %arrayidx77 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %94, i64 -1, !dbg !3406
  %95 = bitcast %struct.HuffEntry* %93 to i8*, !dbg !3406
  %96 = bitcast %struct.HuffEntry* %arrayidx77 to i8*, !dbg !3406
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %95, i8* %96, i64 8, i32 4, i1 false), !dbg !3407
  %97 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !3409
  %arrayidx78 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %97, i64 -1, !dbg !3409
  %98 = bitcast %struct.HuffEntry* %arrayidx78 to i8*, !dbg !3410
  %99 = bitcast %struct.HuffEntry* %SWAP_tmp76 to i8*, !dbg !3410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %98, i8* %99, i64 8, i32 4, i1 false), !dbg !3411
  br label %do.end79, !dbg !3413

do.end79:                                         ; preds = %do.body75
  br label %while.cond80, !dbg !3414

while.cond80:                                     ; preds = %if.end112, %do.end79
  %100 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !3416
  %101 = load %struct.HuffEntry*, %struct.HuffEntry** %right, align 8, !dbg !3418
  %cmp81 = icmp ule %struct.HuffEntry* %100, %101, !dbg !3419
  br i1 %cmp81, label %while.body83, label %while.end113, !dbg !3420

while.body83:                                     ; preds = %while.cond80
  br label %while.cond84, !dbg !3421

while.cond84:                                     ; preds = %while.body91, %while.body83
  %102 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !3424
  %103 = load %struct.HuffEntry*, %struct.HuffEntry** %right, align 8, !dbg !3426
  %cmp85 = icmp ule %struct.HuffEntry* %102, %103, !dbg !3427
  br i1 %cmp85, label %land.rhs, label %land.end, !dbg !3428

land.rhs:                                         ; preds = %while.cond84
  %104 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !3429
  %105 = bitcast %struct.HuffEntry* %104 to i8*, !dbg !3429
  %106 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !3431
  %add.ptr87 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %106, i64 -1, !dbg !3432
  %107 = bitcast %struct.HuffEntry* %add.ptr87 to i8*, !dbg !3431
  %call88 = call i32 @huff_cmp_len(i8* %105, i8* %107), !dbg !3433
  %cmp89 = icmp slt i32 %call88, 0, !dbg !3434
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond84
  %108 = phi i1 [ false, %while.cond84 ], [ %cmp89, %land.rhs ]
  br i1 %108, label %while.body91, label %while.end, !dbg !3435

while.body91:                                     ; preds = %land.end
  %109 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !3437
  %incdec.ptr = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %109, i32 1, !dbg !3437
  store %struct.HuffEntry* %incdec.ptr, %struct.HuffEntry** %left, align 8, !dbg !3437
  br label %while.cond84, !dbg !3439, !llvm.loop !3440

while.end:                                        ; preds = %land.end
  br label %while.cond92, !dbg !3442

while.cond92:                                     ; preds = %while.body101, %while.end
  %110 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !3444
  %111 = load %struct.HuffEntry*, %struct.HuffEntry** %right, align 8, !dbg !3446
  %cmp93 = icmp ule %struct.HuffEntry* %110, %111, !dbg !3447
  br i1 %cmp93, label %land.rhs95, label %land.end100, !dbg !3448

land.rhs95:                                       ; preds = %while.cond92
  %112 = load %struct.HuffEntry*, %struct.HuffEntry** %right, align 8, !dbg !3449
  %113 = bitcast %struct.HuffEntry* %112 to i8*, !dbg !3449
  %114 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !3451
  %add.ptr96 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %114, i64 -1, !dbg !3452
  %115 = bitcast %struct.HuffEntry* %add.ptr96 to i8*, !dbg !3451
  %call97 = call i32 @huff_cmp_len(i8* %113, i8* %115), !dbg !3453
  %cmp98 = icmp sgt i32 %call97, 0, !dbg !3454
  br label %land.end100

land.end100:                                      ; preds = %land.rhs95, %while.cond92
  %116 = phi i1 [ false, %while.cond92 ], [ %cmp98, %land.rhs95 ]
  br i1 %116, label %while.body101, label %while.end103, !dbg !3455

while.body101:                                    ; preds = %land.end100
  %117 = load %struct.HuffEntry*, %struct.HuffEntry** %right, align 8, !dbg !3457
  %incdec.ptr102 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %117, i32 -1, !dbg !3457
  store %struct.HuffEntry* %incdec.ptr102, %struct.HuffEntry** %right, align 8, !dbg !3457
  br label %while.cond92, !dbg !3459, !llvm.loop !3460

while.end103:                                     ; preds = %land.end100
  %118 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !3462
  %119 = load %struct.HuffEntry*, %struct.HuffEntry** %right, align 8, !dbg !3465
  %cmp104 = icmp ule %struct.HuffEntry* %118, %119, !dbg !3466
  br i1 %cmp104, label %if.then106, label %if.end112, !dbg !3462

if.then106:                                       ; preds = %while.end103
  br label %do.body107, !dbg !3467, !llvm.loop !3470

do.body107:                                       ; preds = %if.then106
  call void @llvm.dbg.declare(metadata %struct.HuffEntry* %SWAP_tmp108, metadata !3472, metadata !1637), !dbg !3474
  %120 = load %struct.HuffEntry*, %struct.HuffEntry** %right, align 8, !dbg !3475
  %121 = bitcast %struct.HuffEntry* %SWAP_tmp108 to i8*, !dbg !3477
  %122 = bitcast %struct.HuffEntry* %120 to i8*, !dbg !3477
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %121, i8* %122, i64 8, i32 4, i1 false), !dbg !3477
  %123 = load %struct.HuffEntry*, %struct.HuffEntry** %right, align 8, !dbg !3478
  %124 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !3479
  %125 = bitcast %struct.HuffEntry* %123 to i8*, !dbg !3480
  %126 = bitcast %struct.HuffEntry* %124 to i8*, !dbg !3480
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %125, i8* %126, i64 8, i32 4, i1 false), !dbg !3481
  %127 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !3483
  %128 = bitcast %struct.HuffEntry* %127 to i8*, !dbg !3484
  %129 = bitcast %struct.HuffEntry* %SWAP_tmp108 to i8*, !dbg !3484
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %128, i8* %129, i64 8, i32 4, i1 false), !dbg !3485
  br label %do.end109, !dbg !3487

do.end109:                                        ; preds = %do.body107
  %130 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !3488
  %incdec.ptr110 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %130, i32 1, !dbg !3488
  store %struct.HuffEntry* %incdec.ptr110, %struct.HuffEntry** %left, align 8, !dbg !3488
  %131 = load %struct.HuffEntry*, %struct.HuffEntry** %right, align 8, !dbg !3490
  %incdec.ptr111 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %131, i32 -1, !dbg !3490
  store %struct.HuffEntry* %incdec.ptr111, %struct.HuffEntry** %right, align 8, !dbg !3490
  br label %if.end112, !dbg !3491

if.end112:                                        ; preds = %do.end109, %while.end103
  br label %while.cond80, !dbg !3492, !llvm.loop !3494

while.end113:                                     ; preds = %while.cond80
  br label %do.body114, !dbg !3496, !llvm.loop !3498

do.body114:                                       ; preds = %while.end113
  call void @llvm.dbg.declare(metadata %struct.HuffEntry* %SWAP_tmp115, metadata !3500, metadata !1637), !dbg !3502
  %132 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !3503
  %133 = bitcast %struct.HuffEntry* %SWAP_tmp115 to i8*, !dbg !3505
  %134 = bitcast %struct.HuffEntry* %132 to i8*, !dbg !3505
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %133, i8* %134, i64 8, i32 4, i1 false), !dbg !3505
  %135 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !3506
  %136 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !3507
  %arrayidx116 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %136, i64 -1, !dbg !3507
  %137 = bitcast %struct.HuffEntry* %135 to i8*, !dbg !3507
  %138 = bitcast %struct.HuffEntry* %arrayidx116 to i8*, !dbg !3507
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %137, i8* %138, i64 8, i32 4, i1 false), !dbg !3508
  %139 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !3510
  %arrayidx117 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %139, i64 -1, !dbg !3510
  %140 = bitcast %struct.HuffEntry* %arrayidx117 to i8*, !dbg !3511
  %141 = bitcast %struct.HuffEntry* %SWAP_tmp115 to i8*, !dbg !3511
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %140, i8* %141, i64 8, i32 4, i1 false), !dbg !3512
  br label %do.end118, !dbg !3514

do.end118:                                        ; preds = %do.body114
  %142 = load i32, i32* %checksort, align 4, !dbg !3515
  %tobool119 = icmp ne i32 %142, 0, !dbg !3515
  br i1 %tobool119, label %land.lhs.true, label %if.end143, !dbg !3518

land.lhs.true:                                    ; preds = %do.end118
  %143 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !3519
  %144 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !3521
  %add.ptr120 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %144, i64 -1, !dbg !3522
  %cmp121 = icmp eq %struct.HuffEntry* %143, %add.ptr120, !dbg !3523
  br i1 %cmp121, label %if.then126, label %lor.lhs.false123, !dbg !3524

lor.lhs.false123:                                 ; preds = %land.lhs.true
  %145 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !3525
  %146 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !3527
  %cmp124 = icmp eq %struct.HuffEntry* %145, %146, !dbg !3528
  br i1 %cmp124, label %if.then126, label %if.end143, !dbg !3529

if.then126:                                       ; preds = %lor.lhs.false123, %land.lhs.true
  %147 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !3530
  store %struct.HuffEntry* %147, %struct.HuffEntry** %mid, align 8, !dbg !3533
  br label %while.cond127, !dbg !3534

while.cond127:                                    ; preds = %while.body136, %if.then126
  %148 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !3535
  %149 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !3537
  %cmp128 = icmp ult %struct.HuffEntry* %148, %149, !dbg !3538
  br i1 %cmp128, label %land.rhs130, label %land.end135, !dbg !3539

land.rhs130:                                      ; preds = %while.cond127
  %150 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !3540
  %151 = bitcast %struct.HuffEntry* %150 to i8*, !dbg !3540
  %152 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !3542
  %add.ptr131 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %152, i64 1, !dbg !3543
  %153 = bitcast %struct.HuffEntry* %add.ptr131 to i8*, !dbg !3542
  %call132 = call i32 @huff_cmp_len(i8* %151, i8* %153), !dbg !3544
  %cmp133 = icmp sle i32 %call132, 0, !dbg !3545
  br label %land.end135

land.end135:                                      ; preds = %land.rhs130, %while.cond127
  %154 = phi i1 [ false, %while.cond127 ], [ %cmp133, %land.rhs130 ]
  br i1 %154, label %while.body136, label %while.end138, !dbg !3546

while.body136:                                    ; preds = %land.end135
  %155 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !3548
  %incdec.ptr137 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %155, i32 1, !dbg !3548
  store %struct.HuffEntry* %incdec.ptr137, %struct.HuffEntry** %mid, align 8, !dbg !3548
  br label %while.cond127, !dbg !3550, !llvm.loop !3551

while.end138:                                     ; preds = %land.end135
  %156 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !3553
  %157 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !3556
  %cmp139 = icmp eq %struct.HuffEntry* %156, %157, !dbg !3557
  br i1 %cmp139, label %if.then141, label %if.end142, !dbg !3553

if.then141:                                       ; preds = %while.end138
  br label %while.end183, !dbg !3558

if.end142:                                        ; preds = %while.end138
  br label %if.end143, !dbg !3560

if.end143:                                        ; preds = %if.end142, %lor.lhs.false123, %do.end118
  %158 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !3562
  %159 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !3565
  %sub.ptr.lhs.cast144 = ptrtoint %struct.HuffEntry* %158 to i64, !dbg !3566
  %sub.ptr.rhs.cast145 = ptrtoint %struct.HuffEntry* %159 to i64, !dbg !3566
  %sub.ptr.sub146 = sub i64 %sub.ptr.lhs.cast144, %sub.ptr.rhs.cast145, !dbg !3566
  %sub.ptr.div147 = sdiv exact i64 %sub.ptr.sub146, 8, !dbg !3566
  %160 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !3567
  %161 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !3568
  %sub.ptr.lhs.cast148 = ptrtoint %struct.HuffEntry* %160 to i64, !dbg !3569
  %sub.ptr.rhs.cast149 = ptrtoint %struct.HuffEntry* %161 to i64, !dbg !3569
  %sub.ptr.sub150 = sub i64 %sub.ptr.lhs.cast148, %sub.ptr.rhs.cast149, !dbg !3569
  %sub.ptr.div151 = sdiv exact i64 %sub.ptr.sub150, 8, !dbg !3569
  %cmp152 = icmp slt i64 %sub.ptr.div147, %sub.ptr.div151, !dbg !3570
  br i1 %cmp152, label %if.then154, label %if.else163, !dbg !3562

if.then154:                                       ; preds = %if.end143
  %162 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !3571
  %163 = bitcast %struct.HuffEntry* %162 to i8*, !dbg !3571
  %164 = load i32, i32* %sp, align 4, !dbg !3574
  %idxprom155 = sext i32 %164 to i64, !dbg !3575
  %arrayidx156 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom155, !dbg !3575
  %arrayidx157 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx156, i64 0, i64 0, !dbg !3575
  store i8* %163, i8** %arrayidx157, align 16, !dbg !3576
  %165 = load %struct.HuffEntry*, %struct.HuffEntry** %right, align 8, !dbg !3577
  %166 = bitcast %struct.HuffEntry* %165 to i8*, !dbg !3577
  %167 = load i32, i32* %sp, align 4, !dbg !3578
  %inc158 = add nsw i32 %167, 1, !dbg !3578
  store i32 %inc158, i32* %sp, align 4, !dbg !3578
  %idxprom159 = sext i32 %167 to i64, !dbg !3579
  %arrayidx160 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom159, !dbg !3579
  %arrayidx161 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx160, i64 0, i64 1, !dbg !3579
  store i8* %166, i8** %arrayidx161, align 8, !dbg !3580
  %168 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !3581
  %add.ptr162 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %168, i64 1, !dbg !3582
  store %struct.HuffEntry* %add.ptr162, %struct.HuffEntry** %start, align 8, !dbg !3583
  br label %if.end172, !dbg !3584

if.else163:                                       ; preds = %if.end143
  %169 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !3585
  %add.ptr164 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %169, i64 1, !dbg !3588
  %170 = bitcast %struct.HuffEntry* %add.ptr164 to i8*, !dbg !3585
  %171 = load i32, i32* %sp, align 4, !dbg !3589
  %idxprom165 = sext i32 %171 to i64, !dbg !3590
  %arrayidx166 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom165, !dbg !3590
  %arrayidx167 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx166, i64 0, i64 0, !dbg !3590
  store i8* %170, i8** %arrayidx167, align 16, !dbg !3591
  %172 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !3592
  %173 = bitcast %struct.HuffEntry* %172 to i8*, !dbg !3592
  %174 = load i32, i32* %sp, align 4, !dbg !3593
  %inc168 = add nsw i32 %174, 1, !dbg !3593
  store i32 %inc168, i32* %sp, align 4, !dbg !3593
  %idxprom169 = sext i32 %174 to i64, !dbg !3594
  %arrayidx170 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom169, !dbg !3594
  %arrayidx171 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx170, i64 0, i64 1, !dbg !3594
  store i8* %173, i8** %arrayidx171, align 8, !dbg !3595
  %175 = load %struct.HuffEntry*, %struct.HuffEntry** %right, align 8, !dbg !3596
  store %struct.HuffEntry* %175, %struct.HuffEntry** %end, align 8, !dbg !3597
  br label %if.end172

if.end172:                                        ; preds = %if.else163, %if.then154
  br label %if.end182, !dbg !3598

if.else173:                                       ; preds = %while.body31
  %176 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !3600
  %177 = bitcast %struct.HuffEntry* %176 to i8*, !dbg !3600
  %178 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !3604
  %179 = bitcast %struct.HuffEntry* %178 to i8*, !dbg !3604
  %call174 = call i32 @huff_cmp_len(i8* %177, i8* %179), !dbg !3605
  %cmp175 = icmp sgt i32 %call174, 0, !dbg !3606
  br i1 %cmp175, label %if.then177, label %if.end181, !dbg !3605

if.then177:                                       ; preds = %if.else173
  br label %do.body178, !dbg !3607, !llvm.loop !3609

do.body178:                                       ; preds = %if.then177
  call void @llvm.dbg.declare(metadata %struct.HuffEntry* %SWAP_tmp179, metadata !3611, metadata !1637), !dbg !3613
  %180 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !3614
  %181 = bitcast %struct.HuffEntry* %SWAP_tmp179 to i8*, !dbg !3616
  %182 = bitcast %struct.HuffEntry* %180 to i8*, !dbg !3616
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %181, i8* %182, i64 8, i32 4, i1 false), !dbg !3616
  %183 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !3617
  %184 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !3618
  %185 = bitcast %struct.HuffEntry* %183 to i8*, !dbg !3619
  %186 = bitcast %struct.HuffEntry* %184 to i8*, !dbg !3619
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %185, i8* %186, i64 8, i32 4, i1 false), !dbg !3620
  %187 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !3622
  %188 = bitcast %struct.HuffEntry* %187 to i8*, !dbg !3623
  %189 = bitcast %struct.HuffEntry* %SWAP_tmp179 to i8*, !dbg !3623
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %188, i8* %189, i64 8, i32 4, i1 false), !dbg !3624
  br label %do.end180, !dbg !3626

do.end180:                                        ; preds = %do.body178
  br label %if.end181, !dbg !3627

if.end181:                                        ; preds = %do.end180, %if.else173
  br label %while.end183, !dbg !3629

if.end182:                                        ; preds = %if.end172
  br label %while.cond28, !dbg !3631, !llvm.loop !3633

while.end183:                                     ; preds = %if.end181, %if.then141, %if.then73, %while.cond28
  br label %while.cond, !dbg !3635, !llvm.loop !3637

while.end184:                                     ; preds = %while.cond
  br label %do.end185, !dbg !3639

do.end185:                                        ; preds = %while.end184
  store i32 1, i32* %code, align 4, !dbg !3641
  store i32 255, i32* %i, align 4, !dbg !3642
  br label %for.cond186, !dbg !3644

for.cond186:                                      ; preds = %for.inc215, %do.end185
  %190 = load i32, i32* %i, align 4, !dbg !3645
  %cmp187 = icmp sge i32 %190, 0, !dbg !3648
  br i1 %cmp187, label %for.body189, label %for.end217, !dbg !3649

for.body189:                                      ; preds = %for.cond186
  %191 = load i32, i32* %code, align 4, !dbg !3650
  %192 = load i32, i32* %i, align 4, !dbg !3652
  %idxprom190 = sext i32 %192 to i64, !dbg !3653
  %arrayidx191 = getelementptr inbounds [256 x %struct.HuffEntry], [256 x %struct.HuffEntry]* %he, i64 0, i64 %idxprom190, !dbg !3653
  %len192 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %arrayidx191, i32 0, i32 1, !dbg !3654
  %193 = load i8, i8* %len192, align 2, !dbg !3654
  %conv193 = zext i8 %193 to i32, !dbg !3653
  %sub194 = sub nsw i32 32, %conv193, !dbg !3655
  %shr195 = lshr i32 %191, %sub194, !dbg !3656
  %194 = load i32, i32* %i, align 4, !dbg !3657
  %idxprom196 = sext i32 %194 to i64, !dbg !3658
  %arrayidx197 = getelementptr inbounds [256 x i32], [256 x i32]* %codes, i64 0, i64 %idxprom196, !dbg !3658
  store i32 %shr195, i32* %arrayidx197, align 4, !dbg !3659
  %195 = load i32, i32* %i, align 4, !dbg !3660
  %idxprom198 = sext i32 %195 to i64, !dbg !3661
  %arrayidx199 = getelementptr inbounds [256 x %struct.HuffEntry], [256 x %struct.HuffEntry]* %he, i64 0, i64 %idxprom198, !dbg !3661
  %len200 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %arrayidx199, i32 0, i32 1, !dbg !3662
  %196 = load i8, i8* %len200, align 2, !dbg !3662
  %197 = load i32, i32* %i, align 4, !dbg !3663
  %idxprom201 = sext i32 %197 to i64, !dbg !3664
  %arrayidx202 = getelementptr inbounds [256 x i8], [256 x i8]* %bits, i64 0, i64 %idxprom201, !dbg !3664
  store i8 %196, i8* %arrayidx202, align 1, !dbg !3665
  %198 = load i32, i32* %i, align 4, !dbg !3666
  %idxprom203 = sext i32 %198 to i64, !dbg !3667
  %arrayidx204 = getelementptr inbounds [256 x %struct.HuffEntry], [256 x %struct.HuffEntry]* %he, i64 0, i64 %idxprom203, !dbg !3667
  %sym205 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %arrayidx204, i32 0, i32 0, !dbg !3668
  %199 = load i16, i16* %sym205, align 8, !dbg !3668
  %conv206 = trunc i16 %199 to i8, !dbg !3667
  %200 = load i32, i32* %i, align 4, !dbg !3669
  %idxprom207 = sext i32 %200 to i64, !dbg !3670
  %arrayidx208 = getelementptr inbounds [256 x i8], [256 x i8]* %syms, i64 0, i64 %idxprom207, !dbg !3670
  store i8 %conv206, i8* %arrayidx208, align 1, !dbg !3671
  %201 = load i32, i32* %i, align 4, !dbg !3672
  %idxprom209 = sext i32 %201 to i64, !dbg !3673
  %arrayidx210 = getelementptr inbounds [256 x %struct.HuffEntry], [256 x %struct.HuffEntry]* %he, i64 0, i64 %idxprom209, !dbg !3673
  %len211 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %arrayidx210, i32 0, i32 1, !dbg !3674
  %202 = load i8, i8* %len211, align 2, !dbg !3674
  %conv212 = zext i8 %202 to i32, !dbg !3673
  %sub213 = sub nsw i32 %conv212, 1, !dbg !3675
  %shr214 = lshr i32 -2147483648, %sub213, !dbg !3676
  %203 = load i32, i32* %code, align 4, !dbg !3677
  %add = add i32 %203, %shr214, !dbg !3677
  store i32 %add, i32* %code, align 4, !dbg !3677
  br label %for.inc215, !dbg !3678

for.inc215:                                       ; preds = %for.body189
  %204 = load i32, i32* %i, align 4, !dbg !3679
  %dec216 = add nsw i32 %204, -1, !dbg !3679
  store i32 %dec216, i32* %i, align 4, !dbg !3679
  br label %for.cond186, !dbg !3681, !llvm.loop !3682

for.end217:                                       ; preds = %for.cond186
  %205 = load %struct.VLC*, %struct.VLC** %vlc.addr, align 8, !dbg !3684
  call void @ff_free_vlc(%struct.VLC* %205), !dbg !3685
  %206 = load %struct.VLC*, %struct.VLC** %vlc.addr, align 8, !dbg !3686
  %arrayidx218 = getelementptr inbounds [256 x %struct.HuffEntry], [256 x %struct.HuffEntry]* %he, i64 0, i64 255, !dbg !3687
  %len219 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %arrayidx218, i32 0, i32 1, !dbg !3688
  %207 = load i8, i8* %len219, align 2, !dbg !3688
  %conv220 = zext i8 %207 to i32, !dbg !3689
  %cmp221 = icmp sgt i32 %conv220, 12, !dbg !3690
  br i1 %cmp221, label %cond.true, label %cond.false, !dbg !3689

cond.true:                                        ; preds = %for.end217
  br label %cond.end, !dbg !3691

cond.false:                                       ; preds = %for.end217
  %arrayidx223 = getelementptr inbounds [256 x %struct.HuffEntry], [256 x %struct.HuffEntry]* %he, i64 0, i64 255, !dbg !3693
  %len224 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %arrayidx223, i32 0, i32 1, !dbg !3695
  %208 = load i8, i8* %len224, align 2, !dbg !3695
  %conv225 = zext i8 %208 to i32, !dbg !3696
  br label %cond.end, !dbg !3697

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 12, %cond.true ], [ %conv225, %cond.false ], !dbg !3698
  %arraydecay226 = getelementptr inbounds [256 x i8], [256 x i8]* %bits, i32 0, i32 0, !dbg !3700
  %arraydecay227 = getelementptr inbounds [256 x i32], [256 x i32]* %codes, i32 0, i32 0, !dbg !3701
  %209 = bitcast i32* %arraydecay227 to i8*, !dbg !3701
  %arraydecay228 = getelementptr inbounds [256 x i8], [256 x i8]* %syms, i32 0, i32 0, !dbg !3702
  %call229 = call i32 @ff_init_vlc_sparse(%struct.VLC* %206, i32 %cond, i32 256, i8* %arraydecay226, i32 1, i32 1, i8* %209, i32 4, i32 4, i8* %arraydecay228, i32 1, i32 1, i32 0), !dbg !3703
  store i32 %call229, i32* %retval, align 4, !dbg !3704
  br label %return, !dbg !3704

return:                                           ; preds = %cond.end, %if.then
  %210 = load i32, i32* %retval, align 4, !dbg !3705
  ret i32 %210, !dbg !3705
}

; Function Attrs: nounwind uwtable
define internal i32 @magy_decode_slice(%struct.AVCodecContext* %avctx, i8* %tdata, i32 %j, i32 %threadnr) #0 !dbg !3706 {
entry:
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !3707, metadata !1637), !dbg !3712
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !3707, metadata !1637), !dbg !3736
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !3707, metadata !1637), !dbg !3739
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !3741, metadata !1637), !dbg !3742
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !3743, metadata !1637), !dbg !3744
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !3745, metadata !1637), !dbg !3746
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !3747, metadata !1637), !dbg !3748
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !3749, metadata !1637), !dbg !3750
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !3751, metadata !1637), !dbg !3752
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !3753, metadata !1637), !dbg !3754
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !3755, metadata !1637), !dbg !3756
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !3757, metadata !1637), !dbg !3758
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !3759, metadata !1637), !dbg !3760
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !3761, metadata !1637), !dbg !3762
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %tdata.addr = alloca i8*, align 8
  %j.addr = alloca i32, align 4
  %threadnr.addr = alloca i32, align 4
  %s = alloca %struct.MagicYUVContext*, align 8
  %interlaced = alloca i32, align 4
  %p = alloca %struct.AVFrame*, align 8
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %x = alloca i32, align 4
  %min_width = alloca i32, align 4
  %gb = alloca %struct.GetBitContext, align 8
  %dst = alloca i8*, align 8
  %left = alloca i32, align 4
  %lefttop = alloca i32, align 4
  %top = alloca i32, align 4
  %height = alloca i32, align 4
  %width = alloca i32, align 4
  %sheight = alloca i32, align 4
  %fake_stride = alloca i64, align 8
  %stride = alloca i64, align 8
  %flags = alloca i32, align 4
  %pred = alloca i32, align 4
  %ret = alloca i32, align 4
  %pix = alloca i32, align 4
  %height262 = alloca i32, align 4
  %width279 = alloca i32, align 4
  %b = alloca i8*, align 8
  %g = alloca i8*, align 8
  %r = alloca i8*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3763, metadata !1637), !dbg !3764
  store i8* %tdata, i8** %tdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tdata.addr, metadata !3765, metadata !1637), !dbg !3766
  store i32 %j, i32* %j.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %j.addr, metadata !3767, metadata !1637), !dbg !3768
  store i32 %threadnr, i32* %threadnr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %threadnr.addr, metadata !3769, metadata !1637), !dbg !3770
  call void @llvm.dbg.declare(metadata %struct.MagicYUVContext** %s, metadata !3771, metadata !1637), !dbg !3772
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3773
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !3774
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3774
  %2 = bitcast i8* %1 to %struct.MagicYUVContext*, !dbg !3773
  store %struct.MagicYUVContext* %2, %struct.MagicYUVContext** %s, align 8, !dbg !3772
  call void @llvm.dbg.declare(metadata i32* %interlaced, metadata !3775, metadata !1637), !dbg !3776
  %3 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !3777
  %interlaced1 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %3, i32 0, i32 9, !dbg !3778
  %4 = load i32, i32* %interlaced1, align 8, !dbg !3778
  store i32 %4, i32* %interlaced, align 4, !dbg !3776
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %p, metadata !3779, metadata !1637), !dbg !3780
  %5 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !3781
  %p2 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %5, i32 0, i32 0, !dbg !3782
  %6 = load %struct.AVFrame*, %struct.AVFrame** %p2, align 8, !dbg !3782
  store %struct.AVFrame* %6, %struct.AVFrame** %p, align 8, !dbg !3780
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3783, metadata !1637), !dbg !3784
  call void @llvm.dbg.declare(metadata i32* %k, metadata !3785, metadata !1637), !dbg !3786
  call void @llvm.dbg.declare(metadata i32* %x, metadata !3787, metadata !1637), !dbg !3788
  call void @llvm.dbg.declare(metadata i32* %min_width, metadata !3789, metadata !1637), !dbg !3790
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gb, metadata !3791, metadata !1637), !dbg !3792
  call void @llvm.dbg.declare(metadata i8** %dst, metadata !3793, metadata !1637), !dbg !3794
  store i32 0, i32* %i, align 4, !dbg !3795
  br label %for.cond, !dbg !3796

for.cond:                                         ; preds = %for.inc257, %entry
  %7 = load i32, i32* %i, align 4, !dbg !3797
  %8 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !3799
  %planes = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %8, i32 0, i32 5, !dbg !3800
  %9 = load i32, i32* %planes, align 8, !dbg !3800
  %cmp = icmp slt i32 %7, %9, !dbg !3801
  br i1 %cmp, label %for.body, label %for.end259, !dbg !3802

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %left, metadata !3803, metadata !1637), !dbg !3804
  call void @llvm.dbg.declare(metadata i32* %lefttop, metadata !3805, metadata !1637), !dbg !3806
  call void @llvm.dbg.declare(metadata i32* %top, metadata !3807, metadata !1637), !dbg !3808
  call void @llvm.dbg.declare(metadata i32* %height, metadata !3809, metadata !1637), !dbg !3810
  %10 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !3811
  %slice_height = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %10, i32 0, i32 3, !dbg !3812
  %11 = load i32, i32* %slice_height, align 8, !dbg !3812
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3813
  %coded_height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %12, i32 0, i32 23, !dbg !3814
  %13 = load i32, i32* %coded_height, align 8, !dbg !3814
  %14 = load i32, i32* %j.addr, align 4, !dbg !3815
  %15 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !3816
  %slice_height3 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %15, i32 0, i32 3, !dbg !3817
  %16 = load i32, i32* %slice_height3, align 8, !dbg !3817
  %mul = mul nsw i32 %14, %16, !dbg !3818
  %sub = sub nsw i32 %13, %mul, !dbg !3819
  %cmp4 = icmp sgt i32 %11, %sub, !dbg !3820
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !3821

cond.true:                                        ; preds = %for.body
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3822
  %coded_height5 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %17, i32 0, i32 23, !dbg !3824
  %18 = load i32, i32* %coded_height5, align 8, !dbg !3824
  %19 = load i32, i32* %j.addr, align 4, !dbg !3825
  %20 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !3826
  %slice_height6 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %20, i32 0, i32 3, !dbg !3827
  %21 = load i32, i32* %slice_height6, align 8, !dbg !3827
  %mul7 = mul nsw i32 %19, %21, !dbg !3828
  %sub8 = sub nsw i32 %18, %mul7, !dbg !3829
  br label %cond.end, !dbg !3830

cond.false:                                       ; preds = %for.body
  %22 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !3831
  %slice_height9 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %22, i32 0, i32 3, !dbg !3833
  %23 = load i32, i32* %slice_height9, align 8, !dbg !3833
  br label %cond.end, !dbg !3834

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub8, %cond.true ], [ %23, %cond.false ], !dbg !3835
  %sub10 = sub nsw i32 0, %cond, !dbg !3837
  %24 = load i32, i32* %i, align 4, !dbg !3838
  %idxprom = sext i32 %24 to i64, !dbg !3839
  %25 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !3839
  %vshift = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %25, i32 0, i32 12, !dbg !3840
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %vshift, i64 0, i64 %idxprom, !dbg !3839
  %26 = load i32, i32* %arrayidx, align 4, !dbg !3839
  %shr = ashr i32 %sub10, %26, !dbg !3841
  %sub11 = sub nsw i32 0, %shr, !dbg !3842
  store i32 %sub11, i32* %height, align 4, !dbg !3843
  call void @llvm.dbg.declare(metadata i32* %width, metadata !3844, metadata !1637), !dbg !3845
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3846
  %coded_width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %27, i32 0, i32 22, !dbg !3847
  %28 = load i32, i32* %coded_width, align 4, !dbg !3847
  %sub12 = sub nsw i32 0, %28, !dbg !3848
  %29 = load i32, i32* %i, align 4, !dbg !3849
  %idxprom13 = sext i32 %29 to i64, !dbg !3850
  %30 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !3850
  %hshift = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %30, i32 0, i32 11, !dbg !3851
  %arrayidx14 = getelementptr inbounds [4 x i32], [4 x i32]* %hshift, i64 0, i64 %idxprom13, !dbg !3850
  %31 = load i32, i32* %arrayidx14, align 4, !dbg !3850
  %shr15 = ashr i32 %sub12, %31, !dbg !3852
  %sub16 = sub nsw i32 0, %shr15, !dbg !3853
  store i32 %sub16, i32* %width, align 4, !dbg !3845
  call void @llvm.dbg.declare(metadata i32* %sheight, metadata !3854, metadata !1637), !dbg !3855
  %32 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !3856
  %slice_height17 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %32, i32 0, i32 3, !dbg !3857
  %33 = load i32, i32* %slice_height17, align 8, !dbg !3857
  %sub18 = sub nsw i32 0, %33, !dbg !3858
  %34 = load i32, i32* %i, align 4, !dbg !3859
  %idxprom19 = sext i32 %34 to i64, !dbg !3860
  %35 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !3860
  %vshift20 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %35, i32 0, i32 12, !dbg !3861
  %arrayidx21 = getelementptr inbounds [4 x i32], [4 x i32]* %vshift20, i64 0, i64 %idxprom19, !dbg !3860
  %36 = load i32, i32* %arrayidx21, align 4, !dbg !3860
  %shr22 = ashr i32 %sub18, %36, !dbg !3862
  %sub23 = sub nsw i32 0, %shr22, !dbg !3863
  store i32 %sub23, i32* %sheight, align 4, !dbg !3855
  call void @llvm.dbg.declare(metadata i64* %fake_stride, metadata !3864, metadata !1637), !dbg !3865
  %37 = load i32, i32* %i, align 4, !dbg !3866
  %idxprom24 = sext i32 %37 to i64, !dbg !3867
  %38 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !3867
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %38, i32 0, i32 1, !dbg !3868
  %arrayidx25 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 %idxprom24, !dbg !3867
  %39 = load i32, i32* %arrayidx25, align 4, !dbg !3867
  %40 = load i32, i32* %interlaced, align 4, !dbg !3869
  %add = add nsw i32 1, %40, !dbg !3870
  %mul26 = mul nsw i32 %39, %add, !dbg !3871
  %conv = sext i32 %mul26 to i64, !dbg !3867
  store i64 %conv, i64* %fake_stride, align 8, !dbg !3865
  call void @llvm.dbg.declare(metadata i64* %stride, metadata !3872, metadata !1637), !dbg !3873
  %41 = load i32, i32* %i, align 4, !dbg !3874
  %idxprom27 = sext i32 %41 to i64, !dbg !3875
  %42 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !3875
  %linesize28 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %42, i32 0, i32 1, !dbg !3876
  %arrayidx29 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize28, i64 0, i64 %idxprom27, !dbg !3875
  %43 = load i32, i32* %arrayidx29, align 4, !dbg !3875
  %conv30 = sext i32 %43 to i64, !dbg !3875
  store i64 %conv30, i64* %stride, align 8, !dbg !3873
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !3877, metadata !1637), !dbg !3878
  call void @llvm.dbg.declare(metadata i32* %pred, metadata !3879, metadata !1637), !dbg !3880
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3881, metadata !1637), !dbg !3882
  %44 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !3883
  %buf = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %44, i32 0, i32 10, !dbg !3884
  %45 = load i8*, i8** %buf, align 8, !dbg !3884
  %46 = load i32, i32* %j.addr, align 4, !dbg !3885
  %idxprom31 = sext i32 %46 to i64, !dbg !3886
  %47 = load i32, i32* %i, align 4, !dbg !3887
  %idxprom32 = sext i32 %47 to i64, !dbg !3886
  %48 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !3886
  %slices = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %48, i32 0, i32 13, !dbg !3888
  %arrayidx33 = getelementptr inbounds [4 x %struct.Slice*], [4 x %struct.Slice*]* %slices, i64 0, i64 %idxprom32, !dbg !3886
  %49 = load %struct.Slice*, %struct.Slice** %arrayidx33, align 8, !dbg !3886
  %arrayidx34 = getelementptr inbounds %struct.Slice, %struct.Slice* %49, i64 %idxprom31, !dbg !3886
  %start = getelementptr inbounds %struct.Slice, %struct.Slice* %arrayidx34, i32 0, i32 0, !dbg !3889
  %50 = load i32, i32* %start, align 4, !dbg !3889
  %idx.ext = zext i32 %50 to i64, !dbg !3890
  %add.ptr = getelementptr inbounds i8, i8* %45, i64 %idx.ext, !dbg !3890
  %51 = load i32, i32* %j.addr, align 4, !dbg !3891
  %idxprom35 = sext i32 %51 to i64, !dbg !3892
  %52 = load i32, i32* %i, align 4, !dbg !3893
  %idxprom36 = sext i32 %52 to i64, !dbg !3892
  %53 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !3892
  %slices37 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %53, i32 0, i32 13, !dbg !3894
  %arrayidx38 = getelementptr inbounds [4 x %struct.Slice*], [4 x %struct.Slice*]* %slices37, i64 0, i64 %idxprom36, !dbg !3892
  %54 = load %struct.Slice*, %struct.Slice** %arrayidx38, align 8, !dbg !3892
  %arrayidx39 = getelementptr inbounds %struct.Slice, %struct.Slice* %54, i64 %idxprom35, !dbg !3892
  %size = getelementptr inbounds %struct.Slice, %struct.Slice* %arrayidx39, i32 0, i32 1, !dbg !3895
  %55 = load i32, i32* %size, align 4, !dbg !3895
  %call = call i32 @init_get_bits8(%struct.GetBitContext* %gb, i8* %add.ptr, i32 %55), !dbg !3896
  store i32 %call, i32* %ret, align 4, !dbg !3882
  %56 = load i32, i32* %ret, align 4, !dbg !3897
  %cmp40 = icmp slt i32 %56, 0, !dbg !3899
  br i1 %cmp40, label %if.then, label %if.end, !dbg !3900

if.then:                                          ; preds = %cond.end
  %57 = load i32, i32* %ret, align 4, !dbg !3901
  store i32 %57, i32* %retval, align 4, !dbg !3902
  br label %return, !dbg !3902

if.end:                                           ; preds = %cond.end
  %call42 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 8), !dbg !3903
  store i32 %call42, i32* %flags, align 4, !dbg !3904
  %call43 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 8), !dbg !3905
  store i32 %call43, i32* %pred, align 4, !dbg !3906
  %58 = load i32, i32* %i, align 4, !dbg !3907
  %idxprom44 = sext i32 %58 to i64, !dbg !3908
  %59 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !3908
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %59, i32 0, i32 0, !dbg !3909
  %arrayidx45 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 %idxprom44, !dbg !3908
  %60 = load i8*, i8** %arrayidx45, align 8, !dbg !3908
  %61 = load i32, i32* %j.addr, align 4, !dbg !3910
  %62 = load i32, i32* %sheight, align 4, !dbg !3911
  %mul46 = mul nsw i32 %61, %62, !dbg !3912
  %conv47 = sext i32 %mul46 to i64, !dbg !3910
  %63 = load i64, i64* %stride, align 8, !dbg !3913
  %mul48 = mul nsw i64 %conv47, %63, !dbg !3914
  %add.ptr49 = getelementptr inbounds i8, i8* %60, i64 %mul48, !dbg !3915
  store i8* %add.ptr49, i8** %dst, align 8, !dbg !3916
  %64 = load i32, i32* %flags, align 4, !dbg !3917
  %and = and i32 %64, 1, !dbg !3918
  %tobool = icmp ne i32 %and, 0, !dbg !3918
  br i1 %tobool, label %if.then50, label %if.else, !dbg !3919

if.then50:                                        ; preds = %if.end
  %call51 = call i32 @get_bits_left(%struct.GetBitContext* %gb), !dbg !3920
  %65 = load i32, i32* %width, align 4, !dbg !3923
  %mul52 = mul nsw i32 8, %65, !dbg !3924
  %66 = load i32, i32* %height, align 4, !dbg !3925
  %mul53 = mul nsw i32 %mul52, %66, !dbg !3926
  %cmp54 = icmp slt i32 %call51, %mul53, !dbg !3927
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !3928

if.then56:                                        ; preds = %if.then50
  store i32 -1094995529, i32* %retval, align 4, !dbg !3929
  br label %return, !dbg !3929

if.end57:                                         ; preds = %if.then50
  store i32 0, i32* %k, align 4, !dbg !3930
  br label %for.cond58, !dbg !3932

for.cond58:                                       ; preds = %for.inc71, %if.end57
  %67 = load i32, i32* %k, align 4, !dbg !3933
  %68 = load i32, i32* %height, align 4, !dbg !3936
  %cmp59 = icmp slt i32 %67, %68, !dbg !3937
  br i1 %cmp59, label %for.body61, label %for.end73, !dbg !3938

for.body61:                                       ; preds = %for.cond58
  store i32 0, i32* %x, align 4, !dbg !3939
  br label %for.cond62, !dbg !3942

for.cond62:                                       ; preds = %for.inc, %for.body61
  %69 = load i32, i32* %x, align 4, !dbg !3943
  %70 = load i32, i32* %width, align 4, !dbg !3946
  %cmp63 = icmp slt i32 %69, %70, !dbg !3947
  br i1 %cmp63, label %for.body65, label %for.end, !dbg !3948

for.body65:                                       ; preds = %for.cond62
  %call66 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 8), !dbg !3949
  %conv67 = trunc i32 %call66 to i8, !dbg !3949
  %71 = load i32, i32* %x, align 4, !dbg !3950
  %idxprom68 = sext i32 %71 to i64, !dbg !3951
  %72 = load i8*, i8** %dst, align 8, !dbg !3951
  %arrayidx69 = getelementptr inbounds i8, i8* %72, i64 %idxprom68, !dbg !3951
  store i8 %conv67, i8* %arrayidx69, align 1, !dbg !3952
  br label %for.inc, !dbg !3951

for.inc:                                          ; preds = %for.body65
  %73 = load i32, i32* %x, align 4, !dbg !3953
  %inc = add nsw i32 %73, 1, !dbg !3953
  store i32 %inc, i32* %x, align 4, !dbg !3953
  br label %for.cond62, !dbg !3955, !llvm.loop !3956

for.end:                                          ; preds = %for.cond62
  %74 = load i64, i64* %stride, align 8, !dbg !3958
  %75 = load i8*, i8** %dst, align 8, !dbg !3959
  %add.ptr70 = getelementptr inbounds i8, i8* %75, i64 %74, !dbg !3959
  store i8* %add.ptr70, i8** %dst, align 8, !dbg !3959
  br label %for.inc71, !dbg !3960

for.inc71:                                        ; preds = %for.end
  %76 = load i32, i32* %k, align 4, !dbg !3961
  %inc72 = add nsw i32 %76, 1, !dbg !3961
  store i32 %inc72, i32* %k, align 4, !dbg !3961
  br label %for.cond58, !dbg !3963, !llvm.loop !3964

for.end73:                                        ; preds = %for.cond58
  br label %if.end108, !dbg !3966

if.else:                                          ; preds = %if.end
  store i32 0, i32* %k, align 4, !dbg !3967
  br label %for.cond74, !dbg !3968

for.cond74:                                       ; preds = %for.inc105, %if.else
  %77 = load i32, i32* %k, align 4, !dbg !3969
  %78 = load i32, i32* %height, align 4, !dbg !3971
  %cmp75 = icmp slt i32 %77, %78, !dbg !3972
  br i1 %cmp75, label %for.body77, label %for.end107, !dbg !3973

for.body77:                                       ; preds = %for.cond74
  store i32 0, i32* %x, align 4, !dbg !3974
  br label %for.cond78, !dbg !3975

for.cond78:                                       ; preds = %for.inc101, %for.body77
  %79 = load i32, i32* %x, align 4, !dbg !3976
  %80 = load i32, i32* %width, align 4, !dbg !3978
  %cmp79 = icmp slt i32 %79, %80, !dbg !3979
  br i1 %cmp79, label %for.body81, label %for.end103, !dbg !3980

for.body81:                                       ; preds = %for.cond78
  call void @llvm.dbg.declare(metadata i32* %pix, metadata !3981, metadata !1637), !dbg !3982
  %call82 = call i32 @get_bits_left(%struct.GetBitContext* %gb), !dbg !3983
  %cmp83 = icmp sle i32 %call82, 0, !dbg !3985
  br i1 %cmp83, label %if.then85, label %if.end86, !dbg !3986

if.then85:                                        ; preds = %for.body81
  store i32 -1094995529, i32* %retval, align 4, !dbg !3987
  br label %return, !dbg !3987

if.end86:                                         ; preds = %for.body81
  %81 = load i32, i32* %i, align 4, !dbg !3988
  %idxprom87 = sext i32 %81 to i64, !dbg !3989
  %82 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !3989
  %vlc = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %82, i32 0, i32 16, !dbg !3990
  %arrayidx88 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* %vlc, i64 0, i64 %idxprom87, !dbg !3989
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx88, i32 0, i32 1, !dbg !3991
  %83 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !3991
  %84 = load i32, i32* %i, align 4, !dbg !3992
  %idxprom89 = sext i32 %84 to i64, !dbg !3993
  %85 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !3993
  %vlc90 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %85, i32 0, i32 16, !dbg !3994
  %arrayidx91 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* %vlc90, i64 0, i64 %idxprom89, !dbg !3993
  %bits = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx91, i32 0, i32 0, !dbg !3995
  %86 = load i32, i32* %bits, align 8, !dbg !3995
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %s.addr.i, align 8, !dbg !3996
  store [2 x i16]* %83, [2 x i16]** %table.addr.i, align 8, !dbg !3996
  store i32 %86, i32* %bits.addr.i, align 4, !dbg !3996
  store i32 3, i32* %max_depth.addr.i, align 4, !dbg !3996
  %87 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !3997
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %87, i32 0, i32 2, !dbg !3998
  %88 = load i32, i32* %index.i, align 8, !dbg !3998
  store i32 %88, i32* %re_index.i, align 4, !dbg !3752
  %89 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !3999
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %89, i32 0, i32 4, !dbg !4000
  %90 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !4000
  store i32 %90, i32* %re_size_plus8.i, align 4, !dbg !3756
  %91 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4001
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %91, i32 0, i32 0, !dbg !4002
  %92 = load i8*, i8** %buffer.i, align 8, !dbg !4002
  %93 = load i32, i32* %re_index.i, align 4, !dbg !4003
  %shr.i = lshr i32 %93, 3, !dbg !4004
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !4005
  %add.ptr.i = getelementptr inbounds i8, i8* %92, i64 %idx.ext.i, !dbg !4005
  %94 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !4006
  %l.i = bitcast %union.unaligned_32* %94 to i32*, !dbg !4006
  %95 = load i32, i32* %l.i, align 1, !dbg !4006
  store i32 %95, i32* %x.addr.i.i, align 4, !dbg !4007
  %96 = load i32, i32* %x.addr.i.i, align 4, !dbg !4008
  %shl.i.i = shl i32 %96, 8, !dbg !4009
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !4010
  %97 = load i32, i32* %x.addr.i.i, align 4, !dbg !4011
  %shr.i.i = lshr i32 %97, 8, !dbg !4012
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !4013
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !4014
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !4015
  %98 = load i32, i32* %x.addr.i.i, align 4, !dbg !4016
  %shr3.i.i = lshr i32 %98, 16, !dbg !4017
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !4018
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !4019
  %99 = load i32, i32* %x.addr.i.i, align 4, !dbg !4020
  %shr6.i.i = lshr i32 %99, 16, !dbg !4021
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !4022
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !4023
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !4024
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !4025
  %100 = load i32, i32* %re_index.i, align 4, !dbg !4026
  %and.i = and i32 %100, 7, !dbg !4027
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !4028
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !4029
  %101 = load i32, i32* %re_cache.i, align 4, !dbg !4030
  %102 = load i32, i32* %bits.addr.i, align 4, !dbg !4032
  %conv.i = trunc i32 %102 to i8, !dbg !4032
  %call2.i = call i32 @NEG_USR32(i32 %101, i8 signext %conv.i) #8, !dbg !4033
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !4034
  %103 = load i32, i32* %index1.i, align 4, !dbg !4035
  %idxprom.i = zext i32 %103 to i64, !dbg !4036
  %104 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4036
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %104, i64 %idxprom.i, !dbg !4036
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !4036
  %105 = load i16, i16* %arrayidx3.i, align 2, !dbg !4036
  %conv4.i = sext i16 %105 to i32, !dbg !4036
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !4037
  %106 = load i32, i32* %index1.i, align 4, !dbg !4038
  %idxprom5.i = zext i32 %106 to i64, !dbg !4039
  %107 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4039
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %107, i64 %idxprom5.i, !dbg !4039
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !4039
  %108 = load i16, i16* %arrayidx7.i, align 2, !dbg !4039
  %conv8.i = sext i16 %108 to i32, !dbg !4039
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !4040
  %109 = load i32, i32* %max_depth.addr.i, align 4, !dbg !4041
  %cmp.i = icmp sgt i32 %109, 1, !dbg !4042
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !4043

land.lhs.true.i:                                  ; preds = %if.end86
  %110 = load i32, i32* %n.i, align 4, !dbg !4044
  %cmp10.i = icmp slt i32 %110, 0, !dbg !4046
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !4047

if.then.i:                                        ; preds = %land.lhs.true.i
  %111 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4048
  %112 = load i32, i32* %re_index.i, align 4, !dbg !4050
  %113 = load i32, i32* %bits.addr.i, align 4, !dbg !4051
  %add.i = add i32 %112, %113, !dbg !4052
  %cmp12.i = icmp ugt i32 %111, %add.i, !dbg !4053
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !4054

cond.true.i:                                      ; preds = %if.then.i
  %114 = load i32, i32* %re_index.i, align 4, !dbg !4055
  %115 = load i32, i32* %bits.addr.i, align 4, !dbg !4057
  %add14.i = add i32 %114, %115, !dbg !4058
  br label %cond.end.i, !dbg !4059

cond.false.i:                                     ; preds = %if.then.i
  %116 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4060
  br label %cond.end.i, !dbg !4062

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %116, %cond.false.i ], !dbg !4063
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !4064
  %117 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4065
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %117, i32 0, i32 0, !dbg !4066
  %118 = load i8*, i8** %buffer15.i, align 8, !dbg !4066
  %119 = load i32, i32* %re_index.i, align 4, !dbg !4067
  %shr16.i = lshr i32 %119, 3, !dbg !4068
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !4069
  %add.ptr18.i = getelementptr inbounds i8, i8* %118, i64 %idx.ext17.i, !dbg !4069
  %120 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !4070
  %l19.i = bitcast %union.unaligned_32* %120 to i32*, !dbg !4070
  %121 = load i32, i32* %l19.i, align 1, !dbg !4070
  store i32 %121, i32* %x.addr.i81.i, align 4, !dbg !4071
  %122 = load i32, i32* %x.addr.i81.i, align 4, !dbg !4072
  %shl.i82.i = shl i32 %122, 8, !dbg !4073
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !4074
  %123 = load i32, i32* %x.addr.i81.i, align 4, !dbg !4075
  %shr.i84.i = lshr i32 %123, 8, !dbg !4076
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !4077
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !4078
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !4079
  %124 = load i32, i32* %x.addr.i81.i, align 4, !dbg !4080
  %shr3.i88.i = lshr i32 %124, 16, !dbg !4081
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !4082
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !4083
  %125 = load i32, i32* %x.addr.i81.i, align 4, !dbg !4084
  %shr6.i91.i = lshr i32 %125, 16, !dbg !4085
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !4086
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !4087
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !4088
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !4089
  %126 = load i32, i32* %re_index.i, align 4, !dbg !4090
  %and21.i = and i32 %126, 7, !dbg !4091
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !4092
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !4093
  %127 = load i32, i32* %n.i, align 4, !dbg !4094
  %sub.i = sub nsw i32 0, %127, !dbg !4095
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !4096
  %128 = load i32, i32* %re_cache.i, align 4, !dbg !4097
  %129 = load i32, i32* %nb_bits.i, align 4, !dbg !4098
  %conv23.i = trunc i32 %129 to i8, !dbg !4098
  %call24.i = call i32 @NEG_USR32(i32 %128, i8 signext %conv23.i) #8, !dbg !4099
  %130 = load i32, i32* %code.i, align 4, !dbg !4101
  %add25.i = add i32 %call24.i, %130, !dbg !4102
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !4103
  %131 = load i32, i32* %index1.i, align 4, !dbg !4104
  %idxprom26.i = zext i32 %131 to i64, !dbg !4105
  %132 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4105
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %132, i64 %idxprom26.i, !dbg !4105
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !4105
  %133 = load i16, i16* %arrayidx28.i, align 2, !dbg !4105
  %conv29.i = sext i16 %133 to i32, !dbg !4105
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !4106
  %134 = load i32, i32* %index1.i, align 4, !dbg !4107
  %idxprom30.i = zext i32 %134 to i64, !dbg !4108
  %135 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4108
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %135, i64 %idxprom30.i, !dbg !4108
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !4108
  %136 = load i16, i16* %arrayidx32.i, align 2, !dbg !4108
  %conv33.i = sext i16 %136 to i32, !dbg !4108
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !4109
  %137 = load i32, i32* %max_depth.addr.i, align 4, !dbg !4110
  %cmp34.i = icmp sgt i32 %137, 2, !dbg !4111
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !4112

land.lhs.true36.i:                                ; preds = %cond.end.i
  %138 = load i32, i32* %n.i, align 4, !dbg !4113
  %cmp37.i = icmp slt i32 %138, 0, !dbg !4115
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !4116

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %139 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4117
  %140 = load i32, i32* %re_index.i, align 4, !dbg !4119
  %141 = load i32, i32* %nb_bits.i, align 4, !dbg !4120
  %add40.i = add i32 %140, %141, !dbg !4121
  %cmp41.i = icmp ugt i32 %139, %add40.i, !dbg !4122
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !4123

cond.true43.i:                                    ; preds = %if.then39.i
  %142 = load i32, i32* %re_index.i, align 4, !dbg !4124
  %143 = load i32, i32* %nb_bits.i, align 4, !dbg !4126
  %add44.i = add i32 %142, %143, !dbg !4127
  br label %cond.end46.i, !dbg !4128

cond.false45.i:                                   ; preds = %if.then39.i
  %144 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4129
  br label %cond.end46.i, !dbg !4131

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %144, %cond.false45.i ], !dbg !4132
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !4133
  %145 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4134
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %145, i32 0, i32 0, !dbg !4135
  %146 = load i8*, i8** %buffer48.i, align 8, !dbg !4135
  %147 = load i32, i32* %re_index.i, align 4, !dbg !4136
  %shr49.i = lshr i32 %147, 3, !dbg !4137
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !4138
  %add.ptr51.i = getelementptr inbounds i8, i8* %146, i64 %idx.ext50.i, !dbg !4138
  %148 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !4139
  %l52.i = bitcast %union.unaligned_32* %148 to i32*, !dbg !4139
  %149 = load i32, i32* %l52.i, align 1, !dbg !4139
  store i32 %149, i32* %x.addr.i96.i, align 4, !dbg !4140
  %150 = load i32, i32* %x.addr.i96.i, align 4, !dbg !4141
  %shl.i97.i = shl i32 %150, 8, !dbg !4142
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !4143
  %151 = load i32, i32* %x.addr.i96.i, align 4, !dbg !4144
  %shr.i99.i = lshr i32 %151, 8, !dbg !4145
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !4146
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !4147
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !4148
  %152 = load i32, i32* %x.addr.i96.i, align 4, !dbg !4149
  %shr3.i103.i = lshr i32 %152, 16, !dbg !4150
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !4151
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !4152
  %153 = load i32, i32* %x.addr.i96.i, align 4, !dbg !4153
  %shr6.i106.i = lshr i32 %153, 16, !dbg !4154
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !4155
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !4156
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !4157
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !4158
  %154 = load i32, i32* %re_index.i, align 4, !dbg !4159
  %and54.i = and i32 %154, 7, !dbg !4160
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !4161
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !4162
  %155 = load i32, i32* %n.i, align 4, !dbg !4163
  %sub56.i = sub nsw i32 0, %155, !dbg !4164
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !4165
  %156 = load i32, i32* %re_cache.i, align 4, !dbg !4166
  %157 = load i32, i32* %nb_bits.i, align 4, !dbg !4167
  %conv57.i = trunc i32 %157 to i8, !dbg !4167
  %call58.i = call i32 @NEG_USR32(i32 %156, i8 signext %conv57.i) #8, !dbg !4168
  %158 = load i32, i32* %code.i, align 4, !dbg !4170
  %add59.i = add i32 %call58.i, %158, !dbg !4171
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !4172
  %159 = load i32, i32* %index1.i, align 4, !dbg !4173
  %idxprom60.i = zext i32 %159 to i64, !dbg !4174
  %160 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4174
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %160, i64 %idxprom60.i, !dbg !4174
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !4174
  %161 = load i16, i16* %arrayidx62.i, align 2, !dbg !4174
  %conv63.i = sext i16 %161 to i32, !dbg !4174
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !4175
  %162 = load i32, i32* %index1.i, align 4, !dbg !4176
  %idxprom64.i = zext i32 %162 to i64, !dbg !4177
  %163 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4177
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %163, i64 %idxprom64.i, !dbg !4177
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !4177
  %164 = load i16, i16* %arrayidx66.i, align 2, !dbg !4177
  %conv67.i = sext i16 %164 to i32, !dbg !4177
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !4178
  br label %if.end.i, !dbg !4179

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !4180

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %if.end86
  %165 = load i32, i32* %n.i, align 4, !dbg !4182
  %166 = load i32, i32* %re_cache.i, align 4, !dbg !4185
  %shl70.i = shl i32 %166, %165, !dbg !4185
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !4185
  %167 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4186
  %168 = load i32, i32* %re_index.i, align 4, !dbg !4187
  %169 = load i32, i32* %n.i, align 4, !dbg !4188
  %add71.i = add i32 %168, %169, !dbg !4189
  %cmp72.i = icmp ugt i32 %167, %add71.i, !dbg !4190
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !4191

cond.true74.i:                                    ; preds = %if.end68.i
  %170 = load i32, i32* %re_index.i, align 4, !dbg !4192
  %171 = load i32, i32* %n.i, align 4, !dbg !4194
  %add75.i = add i32 %170, %171, !dbg !4195
  br label %get_vlc2.exit, !dbg !4196

cond.false76.i:                                   ; preds = %if.end68.i
  %172 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4197
  br label %get_vlc2.exit, !dbg !4199

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %172, %cond.false76.i ], !dbg !4200
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !4202
  %173 = load i32, i32* %re_index.i, align 4, !dbg !4203
  %174 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4204
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %174, i32 0, i32 2, !dbg !4205
  store i32 %173, i32* %index80.i, align 8, !dbg !4206
  %175 = load i32, i32* %code.i, align 4, !dbg !4207
  store i32 %175, i32* %pix, align 4, !dbg !4208
  %176 = load i32, i32* %pix, align 4, !dbg !4209
  %cmp93 = icmp slt i32 %176, 0, !dbg !4211
  br i1 %cmp93, label %if.then95, label %if.end96, !dbg !4212

if.then95:                                        ; preds = %get_vlc2.exit
  store i32 -1094995529, i32* %retval, align 4, !dbg !4213
  br label %return, !dbg !4213

if.end96:                                         ; preds = %get_vlc2.exit
  %177 = load i32, i32* %pix, align 4, !dbg !4214
  %sub97 = sub nsw i32 255, %177, !dbg !4215
  %conv98 = trunc i32 %sub97 to i8, !dbg !4216
  %178 = load i32, i32* %x, align 4, !dbg !4217
  %idxprom99 = sext i32 %178 to i64, !dbg !4218
  %179 = load i8*, i8** %dst, align 8, !dbg !4218
  %arrayidx100 = getelementptr inbounds i8, i8* %179, i64 %idxprom99, !dbg !4218
  store i8 %conv98, i8* %arrayidx100, align 1, !dbg !4219
  br label %for.inc101, !dbg !4220

for.inc101:                                       ; preds = %if.end96
  %180 = load i32, i32* %x, align 4, !dbg !4221
  %inc102 = add nsw i32 %180, 1, !dbg !4221
  store i32 %inc102, i32* %x, align 4, !dbg !4221
  br label %for.cond78, !dbg !4223, !llvm.loop !4224

for.end103:                                       ; preds = %for.cond78
  %181 = load i64, i64* %stride, align 8, !dbg !4226
  %182 = load i8*, i8** %dst, align 8, !dbg !4227
  %add.ptr104 = getelementptr inbounds i8, i8* %182, i64 %181, !dbg !4227
  store i8* %add.ptr104, i8** %dst, align 8, !dbg !4227
  br label %for.inc105, !dbg !4228

for.inc105:                                       ; preds = %for.end103
  %183 = load i32, i32* %k, align 4, !dbg !4229
  %inc106 = add nsw i32 %183, 1, !dbg !4229
  store i32 %inc106, i32* %k, align 4, !dbg !4229
  br label %for.cond74, !dbg !4231, !llvm.loop !4232

for.end107:                                       ; preds = %for.cond74
  br label %if.end108

if.end108:                                        ; preds = %for.end107, %for.end73
  %184 = load i32, i32* %pred, align 4, !dbg !4234
  switch i32 %184, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb143
    i32 3, label %sw.bb220
  ], !dbg !4235

sw.bb:                                            ; preds = %if.end108
  %185 = load i32, i32* %i, align 4, !dbg !4236
  %idxprom109 = sext i32 %185 to i64, !dbg !4238
  %186 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !4238
  %data110 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %186, i32 0, i32 0, !dbg !4239
  %arrayidx111 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data110, i64 0, i64 %idxprom109, !dbg !4238
  %187 = load i8*, i8** %arrayidx111, align 8, !dbg !4238
  %188 = load i32, i32* %j.addr, align 4, !dbg !4240
  %189 = load i32, i32* %sheight, align 4, !dbg !4241
  %mul112 = mul nsw i32 %188, %189, !dbg !4242
  %conv113 = sext i32 %mul112 to i64, !dbg !4240
  %190 = load i64, i64* %stride, align 8, !dbg !4243
  %mul114 = mul nsw i64 %conv113, %190, !dbg !4244
  %add.ptr115 = getelementptr inbounds i8, i8* %187, i64 %mul114, !dbg !4245
  store i8* %add.ptr115, i8** %dst, align 8, !dbg !4246
  %191 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !4247
  %llviddsp = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %191, i32 0, i32 19, !dbg !4248
  %add_left_pred = getelementptr inbounds %struct.LLVidDSPContext, %struct.LLVidDSPContext* %llviddsp, i32 0, i32 2, !dbg !4249
  %192 = load i32 (i8*, i8*, i64, i32)*, i32 (i8*, i8*, i64, i32)** %add_left_pred, align 8, !dbg !4249
  %193 = load i8*, i8** %dst, align 8, !dbg !4250
  %194 = load i8*, i8** %dst, align 8, !dbg !4251
  %195 = load i32, i32* %width, align 4, !dbg !4252
  %conv116 = sext i32 %195 to i64, !dbg !4252
  %call117 = call i32 %192(i8* %193, i8* %194, i64 %conv116, i32 0), !dbg !4247
  %196 = load i64, i64* %stride, align 8, !dbg !4253
  %197 = load i8*, i8** %dst, align 8, !dbg !4254
  %add.ptr118 = getelementptr inbounds i8, i8* %197, i64 %196, !dbg !4254
  store i8* %add.ptr118, i8** %dst, align 8, !dbg !4254
  %198 = load i32, i32* %interlaced, align 4, !dbg !4255
  %tobool119 = icmp ne i32 %198, 0, !dbg !4255
  br i1 %tobool119, label %if.then120, label %if.end126, !dbg !4257

if.then120:                                       ; preds = %sw.bb
  %199 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !4258
  %llviddsp121 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %199, i32 0, i32 19, !dbg !4260
  %add_left_pred122 = getelementptr inbounds %struct.LLVidDSPContext, %struct.LLVidDSPContext* %llviddsp121, i32 0, i32 2, !dbg !4261
  %200 = load i32 (i8*, i8*, i64, i32)*, i32 (i8*, i8*, i64, i32)** %add_left_pred122, align 8, !dbg !4261
  %201 = load i8*, i8** %dst, align 8, !dbg !4262
  %202 = load i8*, i8** %dst, align 8, !dbg !4263
  %203 = load i32, i32* %width, align 4, !dbg !4264
  %conv123 = sext i32 %203 to i64, !dbg !4264
  %call124 = call i32 %200(i8* %201, i8* %202, i64 %conv123, i32 0), !dbg !4258
  %204 = load i64, i64* %stride, align 8, !dbg !4265
  %205 = load i8*, i8** %dst, align 8, !dbg !4266
  %add.ptr125 = getelementptr inbounds i8, i8* %205, i64 %204, !dbg !4266
  store i8* %add.ptr125, i8** %dst, align 8, !dbg !4266
  br label %if.end126, !dbg !4267

if.end126:                                        ; preds = %if.then120, %sw.bb
  %206 = load i32, i32* %interlaced, align 4, !dbg !4268
  %add127 = add nsw i32 1, %206, !dbg !4270
  store i32 %add127, i32* %k, align 4, !dbg !4271
  br label %for.cond128, !dbg !4272

for.cond128:                                      ; preds = %for.inc140, %if.end126
  %207 = load i32, i32* %k, align 4, !dbg !4273
  %208 = load i32, i32* %height, align 4, !dbg !4276
  %cmp129 = icmp slt i32 %207, %208, !dbg !4277
  br i1 %cmp129, label %for.body131, label %for.end142, !dbg !4278

for.body131:                                      ; preds = %for.cond128
  %209 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !4279
  %llviddsp132 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %209, i32 0, i32 19, !dbg !4281
  %add_left_pred133 = getelementptr inbounds %struct.LLVidDSPContext, %struct.LLVidDSPContext* %llviddsp132, i32 0, i32 2, !dbg !4282
  %210 = load i32 (i8*, i8*, i64, i32)*, i32 (i8*, i8*, i64, i32)** %add_left_pred133, align 8, !dbg !4282
  %211 = load i8*, i8** %dst, align 8, !dbg !4283
  %212 = load i8*, i8** %dst, align 8, !dbg !4284
  %213 = load i32, i32* %width, align 4, !dbg !4285
  %conv134 = sext i32 %213 to i64, !dbg !4285
  %214 = load i64, i64* %fake_stride, align 8, !dbg !4286
  %sub135 = sub nsw i64 0, %214, !dbg !4287
  %215 = load i8*, i8** %dst, align 8, !dbg !4288
  %arrayidx136 = getelementptr inbounds i8, i8* %215, i64 %sub135, !dbg !4288
  %216 = load i8, i8* %arrayidx136, align 1, !dbg !4288
  %conv137 = zext i8 %216 to i32, !dbg !4288
  %call138 = call i32 %210(i8* %211, i8* %212, i64 %conv134, i32 %conv137), !dbg !4279
  %217 = load i64, i64* %stride, align 8, !dbg !4289
  %218 = load i8*, i8** %dst, align 8, !dbg !4290
  %add.ptr139 = getelementptr inbounds i8, i8* %218, i64 %217, !dbg !4290
  store i8* %add.ptr139, i8** %dst, align 8, !dbg !4290
  br label %for.inc140, !dbg !4291

for.inc140:                                       ; preds = %for.body131
  %219 = load i32, i32* %k, align 4, !dbg !4292
  %inc141 = add nsw i32 %219, 1, !dbg !4292
  store i32 %inc141, i32* %k, align 4, !dbg !4292
  br label %for.cond128, !dbg !4294, !llvm.loop !4295

for.end142:                                       ; preds = %for.cond128
  br label %sw.epilog, !dbg !4297

sw.bb143:                                         ; preds = %if.end108
  %220 = load i32, i32* %i, align 4, !dbg !4298
  %idxprom144 = sext i32 %220 to i64, !dbg !4299
  %221 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !4299
  %data145 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %221, i32 0, i32 0, !dbg !4300
  %arrayidx146 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data145, i64 0, i64 %idxprom144, !dbg !4299
  %222 = load i8*, i8** %arrayidx146, align 8, !dbg !4299
  %223 = load i32, i32* %j.addr, align 4, !dbg !4301
  %224 = load i32, i32* %sheight, align 4, !dbg !4302
  %mul147 = mul nsw i32 %223, %224, !dbg !4303
  %conv148 = sext i32 %mul147 to i64, !dbg !4301
  %225 = load i64, i64* %stride, align 8, !dbg !4304
  %mul149 = mul nsw i64 %conv148, %225, !dbg !4305
  %add.ptr150 = getelementptr inbounds i8, i8* %222, i64 %mul149, !dbg !4306
  store i8* %add.ptr150, i8** %dst, align 8, !dbg !4307
  %226 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !4308
  %llviddsp151 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %226, i32 0, i32 19, !dbg !4309
  %add_left_pred152 = getelementptr inbounds %struct.LLVidDSPContext, %struct.LLVidDSPContext* %llviddsp151, i32 0, i32 2, !dbg !4310
  %227 = load i32 (i8*, i8*, i64, i32)*, i32 (i8*, i8*, i64, i32)** %add_left_pred152, align 8, !dbg !4310
  %228 = load i8*, i8** %dst, align 8, !dbg !4311
  %229 = load i8*, i8** %dst, align 8, !dbg !4312
  %230 = load i32, i32* %width, align 4, !dbg !4313
  %conv153 = sext i32 %230 to i64, !dbg !4313
  %call154 = call i32 %227(i8* %228, i8* %229, i64 %conv153, i32 0), !dbg !4308
  %231 = load i64, i64* %stride, align 8, !dbg !4314
  %232 = load i8*, i8** %dst, align 8, !dbg !4315
  %add.ptr155 = getelementptr inbounds i8, i8* %232, i64 %231, !dbg !4315
  store i8* %add.ptr155, i8** %dst, align 8, !dbg !4315
  %233 = load i32, i32* %interlaced, align 4, !dbg !4316
  %tobool156 = icmp ne i32 %233, 0, !dbg !4316
  br i1 %tobool156, label %if.then157, label %if.end163, !dbg !4318

if.then157:                                       ; preds = %sw.bb143
  %234 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !4319
  %llviddsp158 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %234, i32 0, i32 19, !dbg !4321
  %add_left_pred159 = getelementptr inbounds %struct.LLVidDSPContext, %struct.LLVidDSPContext* %llviddsp158, i32 0, i32 2, !dbg !4322
  %235 = load i32 (i8*, i8*, i64, i32)*, i32 (i8*, i8*, i64, i32)** %add_left_pred159, align 8, !dbg !4322
  %236 = load i8*, i8** %dst, align 8, !dbg !4323
  %237 = load i8*, i8** %dst, align 8, !dbg !4324
  %238 = load i32, i32* %width, align 4, !dbg !4325
  %conv160 = sext i32 %238 to i64, !dbg !4325
  %call161 = call i32 %235(i8* %236, i8* %237, i64 %conv160, i32 0), !dbg !4319
  %239 = load i64, i64* %stride, align 8, !dbg !4326
  %240 = load i8*, i8** %dst, align 8, !dbg !4327
  %add.ptr162 = getelementptr inbounds i8, i8* %240, i64 %239, !dbg !4327
  store i8* %add.ptr162, i8** %dst, align 8, !dbg !4327
  br label %if.end163, !dbg !4328

if.end163:                                        ; preds = %if.then157, %sw.bb143
  %241 = load i32, i32* %width, align 4, !dbg !4329
  %cmp164 = icmp sgt i32 %241, 32, !dbg !4330
  br i1 %cmp164, label %cond.true166, label %cond.false167, !dbg !4331

cond.true166:                                     ; preds = %if.end163
  br label %cond.end168, !dbg !4332

cond.false167:                                    ; preds = %if.end163
  %242 = load i32, i32* %width, align 4, !dbg !4334
  br label %cond.end168, !dbg !4336

cond.end168:                                      ; preds = %cond.false167, %cond.true166
  %cond169 = phi i32 [ 32, %cond.true166 ], [ %242, %cond.false167 ], !dbg !4337
  store i32 %cond169, i32* %min_width, align 4, !dbg !4339
  %243 = load i32, i32* %interlaced, align 4, !dbg !4340
  %add170 = add nsw i32 1, %243, !dbg !4342
  store i32 %add170, i32* %k, align 4, !dbg !4343
  br label %for.cond171, !dbg !4344

for.cond171:                                      ; preds = %for.inc217, %cond.end168
  %244 = load i32, i32* %k, align 4, !dbg !4345
  %245 = load i32, i32* %height, align 4, !dbg !4348
  %cmp172 = icmp slt i32 %244, %245, !dbg !4349
  br i1 %cmp172, label %for.body174, label %for.end219, !dbg !4350

for.body174:                                      ; preds = %for.cond171
  %246 = load i64, i64* %fake_stride, align 8, !dbg !4351
  %sub175 = sub nsw i64 0, %246, !dbg !4353
  %247 = load i8*, i8** %dst, align 8, !dbg !4354
  %arrayidx176 = getelementptr inbounds i8, i8* %247, i64 %sub175, !dbg !4354
  %248 = load i8, i8* %arrayidx176, align 1, !dbg !4354
  %conv177 = zext i8 %248 to i32, !dbg !4354
  store i32 %conv177, i32* %top, align 4, !dbg !4355
  %249 = load i32, i32* %top, align 4, !dbg !4356
  %250 = load i8*, i8** %dst, align 8, !dbg !4357
  %arrayidx178 = getelementptr inbounds i8, i8* %250, i64 0, !dbg !4357
  %251 = load i8, i8* %arrayidx178, align 1, !dbg !4357
  %conv179 = zext i8 %251 to i32, !dbg !4357
  %add180 = add nsw i32 %249, %conv179, !dbg !4358
  store i32 %add180, i32* %left, align 4, !dbg !4359
  %252 = load i32, i32* %left, align 4, !dbg !4360
  %conv181 = trunc i32 %252 to i8, !dbg !4360
  %253 = load i8*, i8** %dst, align 8, !dbg !4361
  %arrayidx182 = getelementptr inbounds i8, i8* %253, i64 0, !dbg !4361
  store i8 %conv181, i8* %arrayidx182, align 1, !dbg !4362
  store i32 1, i32* %x, align 4, !dbg !4363
  br label %for.cond183, !dbg !4365

for.cond183:                                      ; preds = %for.inc205, %for.body174
  %254 = load i32, i32* %x, align 4, !dbg !4366
  %255 = load i32, i32* %min_width, align 4, !dbg !4369
  %cmp184 = icmp slt i32 %254, %255, !dbg !4370
  br i1 %cmp184, label %for.body186, label %for.end207, !dbg !4371

for.body186:                                      ; preds = %for.cond183
  %256 = load i32, i32* %x, align 4, !dbg !4372
  %conv187 = sext i32 %256 to i64, !dbg !4372
  %257 = load i64, i64* %fake_stride, align 8, !dbg !4374
  %sub188 = sub nsw i64 %conv187, %257, !dbg !4375
  %258 = load i8*, i8** %dst, align 8, !dbg !4376
  %arrayidx189 = getelementptr inbounds i8, i8* %258, i64 %sub188, !dbg !4376
  %259 = load i8, i8* %arrayidx189, align 1, !dbg !4376
  %conv190 = zext i8 %259 to i32, !dbg !4376
  store i32 %conv190, i32* %top, align 4, !dbg !4377
  %260 = load i32, i32* %x, align 4, !dbg !4378
  %conv191 = sext i32 %260 to i64, !dbg !4378
  %261 = load i64, i64* %fake_stride, align 8, !dbg !4379
  %add192 = add nsw i64 %261, 1, !dbg !4380
  %sub193 = sub nsw i64 %conv191, %add192, !dbg !4381
  %262 = load i8*, i8** %dst, align 8, !dbg !4382
  %arrayidx194 = getelementptr inbounds i8, i8* %262, i64 %sub193, !dbg !4382
  %263 = load i8, i8* %arrayidx194, align 1, !dbg !4382
  %conv195 = zext i8 %263 to i32, !dbg !4382
  store i32 %conv195, i32* %lefttop, align 4, !dbg !4383
  %264 = load i32, i32* %top, align 4, !dbg !4384
  %265 = load i32, i32* %lefttop, align 4, !dbg !4385
  %sub196 = sub nsw i32 %264, %265, !dbg !4386
  %266 = load i32, i32* %x, align 4, !dbg !4387
  %idxprom197 = sext i32 %266 to i64, !dbg !4388
  %267 = load i8*, i8** %dst, align 8, !dbg !4388
  %arrayidx198 = getelementptr inbounds i8, i8* %267, i64 %idxprom197, !dbg !4388
  %268 = load i8, i8* %arrayidx198, align 1, !dbg !4388
  %conv199 = zext i8 %268 to i32, !dbg !4388
  %add200 = add nsw i32 %sub196, %conv199, !dbg !4389
  %269 = load i32, i32* %left, align 4, !dbg !4390
  %add201 = add nsw i32 %269, %add200, !dbg !4390
  store i32 %add201, i32* %left, align 4, !dbg !4390
  %270 = load i32, i32* %left, align 4, !dbg !4391
  %conv202 = trunc i32 %270 to i8, !dbg !4391
  %271 = load i32, i32* %x, align 4, !dbg !4392
  %idxprom203 = sext i32 %271 to i64, !dbg !4393
  %272 = load i8*, i8** %dst, align 8, !dbg !4393
  %arrayidx204 = getelementptr inbounds i8, i8* %272, i64 %idxprom203, !dbg !4393
  store i8 %conv202, i8* %arrayidx204, align 1, !dbg !4394
  br label %for.inc205, !dbg !4395

for.inc205:                                       ; preds = %for.body186
  %273 = load i32, i32* %x, align 4, !dbg !4396
  %inc206 = add nsw i32 %273, 1, !dbg !4396
  store i32 %inc206, i32* %x, align 4, !dbg !4396
  br label %for.cond183, !dbg !4398, !llvm.loop !4399

for.end207:                                       ; preds = %for.cond183
  %274 = load i32, i32* %width, align 4, !dbg !4401
  %cmp208 = icmp sgt i32 %274, 32, !dbg !4403
  br i1 %cmp208, label %if.then210, label %if.end215, !dbg !4404

if.then210:                                       ; preds = %for.end207
  %275 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !4405
  %llviddsp211 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %275, i32 0, i32 19, !dbg !4406
  %add_gradient_pred = getelementptr inbounds %struct.LLVidDSPContext, %struct.LLVidDSPContext* %llviddsp211, i32 0, i32 4, !dbg !4407
  %276 = load void (i8*, i64, i64)*, void (i8*, i64, i64)** %add_gradient_pred, align 8, !dbg !4407
  %277 = load i8*, i8** %dst, align 8, !dbg !4408
  %add.ptr212 = getelementptr inbounds i8, i8* %277, i64 32, !dbg !4409
  %278 = load i64, i64* %fake_stride, align 8, !dbg !4410
  %279 = load i32, i32* %width, align 4, !dbg !4411
  %sub213 = sub nsw i32 %279, 32, !dbg !4412
  %conv214 = sext i32 %sub213 to i64, !dbg !4411
  call void %276(i8* %add.ptr212, i64 %278, i64 %conv214), !dbg !4405
  br label %if.end215, !dbg !4405

if.end215:                                        ; preds = %if.then210, %for.end207
  %280 = load i64, i64* %stride, align 8, !dbg !4413
  %281 = load i8*, i8** %dst, align 8, !dbg !4414
  %add.ptr216 = getelementptr inbounds i8, i8* %281, i64 %280, !dbg !4414
  store i8* %add.ptr216, i8** %dst, align 8, !dbg !4414
  br label %for.inc217, !dbg !4415

for.inc217:                                       ; preds = %if.end215
  %282 = load i32, i32* %k, align 4, !dbg !4416
  %inc218 = add nsw i32 %282, 1, !dbg !4416
  store i32 %inc218, i32* %k, align 4, !dbg !4416
  br label %for.cond171, !dbg !4418, !llvm.loop !4419

for.end219:                                       ; preds = %for.cond171
  br label %sw.epilog, !dbg !4421

sw.bb220:                                         ; preds = %if.end108
  %283 = load i32, i32* %i, align 4, !dbg !4422
  %idxprom221 = sext i32 %283 to i64, !dbg !4423
  %284 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !4423
  %data222 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %284, i32 0, i32 0, !dbg !4424
  %arrayidx223 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data222, i64 0, i64 %idxprom221, !dbg !4423
  %285 = load i8*, i8** %arrayidx223, align 8, !dbg !4423
  %286 = load i32, i32* %j.addr, align 4, !dbg !4425
  %287 = load i32, i32* %sheight, align 4, !dbg !4426
  %mul224 = mul nsw i32 %286, %287, !dbg !4427
  %conv225 = sext i32 %mul224 to i64, !dbg !4425
  %288 = load i64, i64* %stride, align 8, !dbg !4428
  %mul226 = mul nsw i64 %conv225, %288, !dbg !4429
  %add.ptr227 = getelementptr inbounds i8, i8* %285, i64 %mul226, !dbg !4430
  store i8* %add.ptr227, i8** %dst, align 8, !dbg !4431
  %289 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !4432
  %llviddsp228 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %289, i32 0, i32 19, !dbg !4433
  %add_left_pred229 = getelementptr inbounds %struct.LLVidDSPContext, %struct.LLVidDSPContext* %llviddsp228, i32 0, i32 2, !dbg !4434
  %290 = load i32 (i8*, i8*, i64, i32)*, i32 (i8*, i8*, i64, i32)** %add_left_pred229, align 8, !dbg !4434
  %291 = load i8*, i8** %dst, align 8, !dbg !4435
  %292 = load i8*, i8** %dst, align 8, !dbg !4436
  %293 = load i32, i32* %width, align 4, !dbg !4437
  %conv230 = sext i32 %293 to i64, !dbg !4437
  %call231 = call i32 %290(i8* %291, i8* %292, i64 %conv230, i32 0), !dbg !4432
  %294 = load i64, i64* %stride, align 8, !dbg !4438
  %295 = load i8*, i8** %dst, align 8, !dbg !4439
  %add.ptr232 = getelementptr inbounds i8, i8* %295, i64 %294, !dbg !4439
  store i8* %add.ptr232, i8** %dst, align 8, !dbg !4439
  %296 = load i32, i32* %interlaced, align 4, !dbg !4440
  %tobool233 = icmp ne i32 %296, 0, !dbg !4440
  br i1 %tobool233, label %if.then234, label %if.end240, !dbg !4442

if.then234:                                       ; preds = %sw.bb220
  %297 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !4443
  %llviddsp235 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %297, i32 0, i32 19, !dbg !4445
  %add_left_pred236 = getelementptr inbounds %struct.LLVidDSPContext, %struct.LLVidDSPContext* %llviddsp235, i32 0, i32 2, !dbg !4446
  %298 = load i32 (i8*, i8*, i64, i32)*, i32 (i8*, i8*, i64, i32)** %add_left_pred236, align 8, !dbg !4446
  %299 = load i8*, i8** %dst, align 8, !dbg !4447
  %300 = load i8*, i8** %dst, align 8, !dbg !4448
  %301 = load i32, i32* %width, align 4, !dbg !4449
  %conv237 = sext i32 %301 to i64, !dbg !4449
  %call238 = call i32 %298(i8* %299, i8* %300, i64 %conv237, i32 0), !dbg !4443
  %302 = load i64, i64* %stride, align 8, !dbg !4450
  %303 = load i8*, i8** %dst, align 8, !dbg !4451
  %add.ptr239 = getelementptr inbounds i8, i8* %303, i64 %302, !dbg !4451
  store i8* %add.ptr239, i8** %dst, align 8, !dbg !4451
  br label %if.end240, !dbg !4452

if.end240:                                        ; preds = %if.then234, %sw.bb220
  %304 = load i8*, i8** %dst, align 8, !dbg !4453
  %arrayidx241 = getelementptr inbounds i8, i8* %304, i64 0, !dbg !4453
  %305 = load i8, i8* %arrayidx241, align 1, !dbg !4453
  %conv242 = zext i8 %305 to i32, !dbg !4453
  store i32 %conv242, i32* %left, align 4, !dbg !4454
  store i32 %conv242, i32* %lefttop, align 4, !dbg !4455
  %306 = load i32, i32* %interlaced, align 4, !dbg !4456
  %add243 = add nsw i32 1, %306, !dbg !4458
  store i32 %add243, i32* %k, align 4, !dbg !4459
  br label %for.cond244, !dbg !4460

for.cond244:                                      ; preds = %for.inc254, %if.end240
  %307 = load i32, i32* %k, align 4, !dbg !4461
  %308 = load i32, i32* %height, align 4, !dbg !4464
  %cmp245 = icmp slt i32 %307, %308, !dbg !4465
  br i1 %cmp245, label %for.body247, label %for.end256, !dbg !4466

for.body247:                                      ; preds = %for.cond244
  %309 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !4467
  %llviddsp248 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %309, i32 0, i32 19, !dbg !4469
  %add_median_pred = getelementptr inbounds %struct.LLVidDSPContext, %struct.LLVidDSPContext* %llviddsp248, i32 0, i32 1, !dbg !4470
  %310 = load void (i8*, i8*, i8*, i64, i32*, i32*)*, void (i8*, i8*, i8*, i64, i32*, i32*)** %add_median_pred, align 8, !dbg !4470
  %311 = load i8*, i8** %dst, align 8, !dbg !4471
  %312 = load i8*, i8** %dst, align 8, !dbg !4472
  %313 = load i64, i64* %fake_stride, align 8, !dbg !4473
  %idx.neg = sub i64 0, %313, !dbg !4474
  %add.ptr249 = getelementptr inbounds i8, i8* %312, i64 %idx.neg, !dbg !4474
  %314 = load i8*, i8** %dst, align 8, !dbg !4475
  %315 = load i32, i32* %width, align 4, !dbg !4476
  %conv250 = sext i32 %315 to i64, !dbg !4476
  call void %310(i8* %311, i8* %add.ptr249, i8* %314, i64 %conv250, i32* %left, i32* %lefttop), !dbg !4467
  %316 = load i8*, i8** %dst, align 8, !dbg !4477
  %arrayidx251 = getelementptr inbounds i8, i8* %316, i64 0, !dbg !4477
  %317 = load i8, i8* %arrayidx251, align 1, !dbg !4477
  %conv252 = zext i8 %317 to i32, !dbg !4477
  store i32 %conv252, i32* %left, align 4, !dbg !4478
  store i32 %conv252, i32* %lefttop, align 4, !dbg !4479
  %318 = load i64, i64* %stride, align 8, !dbg !4480
  %319 = load i8*, i8** %dst, align 8, !dbg !4481
  %add.ptr253 = getelementptr inbounds i8, i8* %319, i64 %318, !dbg !4481
  store i8* %add.ptr253, i8** %dst, align 8, !dbg !4481
  br label %for.inc254, !dbg !4482

for.inc254:                                       ; preds = %for.body247
  %320 = load i32, i32* %k, align 4, !dbg !4483
  %inc255 = add nsw i32 %320, 1, !dbg !4483
  store i32 %inc255, i32* %k, align 4, !dbg !4483
  br label %for.cond244, !dbg !4485, !llvm.loop !4486

for.end256:                                       ; preds = %for.cond244
  br label %sw.epilog, !dbg !4488

sw.default:                                       ; preds = %if.end108
  %321 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4489
  %322 = bitcast %struct.AVCodecContext* %321 to i8*, !dbg !4489
  %323 = load i32, i32* %pred, align 4, !dbg !4490
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %322, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i32 0, i32 0), i32 %323), !dbg !4491
  br label %sw.epilog, !dbg !4492

sw.epilog:                                        ; preds = %sw.default, %for.end256, %for.end219, %for.end142
  br label %for.inc257, !dbg !4493

for.inc257:                                       ; preds = %sw.epilog
  %324 = load i32, i32* %i, align 4, !dbg !4494
  %inc258 = add nsw i32 %324, 1, !dbg !4494
  store i32 %inc258, i32* %i, align 4, !dbg !4494
  br label %for.cond, !dbg !4496, !llvm.loop !4497

for.end259:                                       ; preds = %for.cond
  %325 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !4499
  %decorrelate = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %325, i32 0, i32 6, !dbg !4501
  %326 = load i32, i32* %decorrelate, align 4, !dbg !4501
  %tobool260 = icmp ne i32 %326, 0, !dbg !4499
  br i1 %tobool260, label %if.then261, label %if.end332, !dbg !4502

if.then261:                                       ; preds = %for.end259
  call void @llvm.dbg.declare(metadata i32* %height262, metadata !4503, metadata !1637), !dbg !4505
  %327 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !4506
  %slice_height263 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %327, i32 0, i32 3, !dbg !4507
  %328 = load i32, i32* %slice_height263, align 8, !dbg !4507
  %329 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4508
  %coded_height264 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %329, i32 0, i32 23, !dbg !4509
  %330 = load i32, i32* %coded_height264, align 8, !dbg !4509
  %331 = load i32, i32* %j.addr, align 4, !dbg !4510
  %332 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !4511
  %slice_height265 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %332, i32 0, i32 3, !dbg !4512
  %333 = load i32, i32* %slice_height265, align 8, !dbg !4512
  %mul266 = mul nsw i32 %331, %333, !dbg !4513
  %sub267 = sub nsw i32 %330, %mul266, !dbg !4514
  %cmp268 = icmp sgt i32 %328, %sub267, !dbg !4515
  br i1 %cmp268, label %cond.true270, label %cond.false275, !dbg !4516

cond.true270:                                     ; preds = %if.then261
  %334 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4517
  %coded_height271 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %334, i32 0, i32 23, !dbg !4519
  %335 = load i32, i32* %coded_height271, align 8, !dbg !4519
  %336 = load i32, i32* %j.addr, align 4, !dbg !4520
  %337 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !4521
  %slice_height272 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %337, i32 0, i32 3, !dbg !4522
  %338 = load i32, i32* %slice_height272, align 8, !dbg !4522
  %mul273 = mul nsw i32 %336, %338, !dbg !4523
  %sub274 = sub nsw i32 %335, %mul273, !dbg !4524
  br label %cond.end277, !dbg !4525

cond.false275:                                    ; preds = %if.then261
  %339 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !4526
  %slice_height276 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %339, i32 0, i32 3, !dbg !4528
  %340 = load i32, i32* %slice_height276, align 8, !dbg !4528
  br label %cond.end277, !dbg !4529

cond.end277:                                      ; preds = %cond.false275, %cond.true270
  %cond278 = phi i32 [ %sub274, %cond.true270 ], [ %340, %cond.false275 ], !dbg !4530
  store i32 %cond278, i32* %height262, align 4, !dbg !4532
  call void @llvm.dbg.declare(metadata i32* %width279, metadata !4533, metadata !1637), !dbg !4534
  %341 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4535
  %coded_width280 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %341, i32 0, i32 22, !dbg !4536
  %342 = load i32, i32* %coded_width280, align 4, !dbg !4536
  store i32 %342, i32* %width279, align 4, !dbg !4534
  call void @llvm.dbg.declare(metadata i8** %b, metadata !4537, metadata !1637), !dbg !4538
  %343 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !4539
  %data281 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %343, i32 0, i32 0, !dbg !4540
  %arrayidx282 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data281, i64 0, i64 0, !dbg !4539
  %344 = load i8*, i8** %arrayidx282, align 8, !dbg !4539
  %345 = load i32, i32* %j.addr, align 4, !dbg !4541
  %346 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !4542
  %slice_height283 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %346, i32 0, i32 3, !dbg !4543
  %347 = load i32, i32* %slice_height283, align 8, !dbg !4543
  %mul284 = mul nsw i32 %345, %347, !dbg !4544
  %348 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !4545
  %linesize285 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %348, i32 0, i32 1, !dbg !4546
  %arrayidx286 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize285, i64 0, i64 0, !dbg !4545
  %349 = load i32, i32* %arrayidx286, align 8, !dbg !4545
  %mul287 = mul nsw i32 %mul284, %349, !dbg !4547
  %idx.ext288 = sext i32 %mul287 to i64, !dbg !4548
  %add.ptr289 = getelementptr inbounds i8, i8* %344, i64 %idx.ext288, !dbg !4548
  store i8* %add.ptr289, i8** %b, align 8, !dbg !4538
  call void @llvm.dbg.declare(metadata i8** %g, metadata !4549, metadata !1637), !dbg !4550
  %350 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !4551
  %data290 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %350, i32 0, i32 0, !dbg !4552
  %arrayidx291 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data290, i64 0, i64 1, !dbg !4551
  %351 = load i8*, i8** %arrayidx291, align 8, !dbg !4551
  %352 = load i32, i32* %j.addr, align 4, !dbg !4553
  %353 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !4554
  %slice_height292 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %353, i32 0, i32 3, !dbg !4555
  %354 = load i32, i32* %slice_height292, align 8, !dbg !4555
  %mul293 = mul nsw i32 %352, %354, !dbg !4556
  %355 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !4557
  %linesize294 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %355, i32 0, i32 1, !dbg !4558
  %arrayidx295 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize294, i64 0, i64 1, !dbg !4557
  %356 = load i32, i32* %arrayidx295, align 4, !dbg !4557
  %mul296 = mul nsw i32 %mul293, %356, !dbg !4559
  %idx.ext297 = sext i32 %mul296 to i64, !dbg !4560
  %add.ptr298 = getelementptr inbounds i8, i8* %351, i64 %idx.ext297, !dbg !4560
  store i8* %add.ptr298, i8** %g, align 8, !dbg !4550
  call void @llvm.dbg.declare(metadata i8** %r, metadata !4561, metadata !1637), !dbg !4562
  %357 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !4563
  %data299 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %357, i32 0, i32 0, !dbg !4564
  %arrayidx300 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data299, i64 0, i64 2, !dbg !4563
  %358 = load i8*, i8** %arrayidx300, align 8, !dbg !4563
  %359 = load i32, i32* %j.addr, align 4, !dbg !4565
  %360 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !4566
  %slice_height301 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %360, i32 0, i32 3, !dbg !4567
  %361 = load i32, i32* %slice_height301, align 8, !dbg !4567
  %mul302 = mul nsw i32 %359, %361, !dbg !4568
  %362 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !4569
  %linesize303 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %362, i32 0, i32 1, !dbg !4570
  %arrayidx304 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize303, i64 0, i64 2, !dbg !4569
  %363 = load i32, i32* %arrayidx304, align 8, !dbg !4569
  %mul305 = mul nsw i32 %mul302, %363, !dbg !4571
  %idx.ext306 = sext i32 %mul305 to i64, !dbg !4572
  %add.ptr307 = getelementptr inbounds i8, i8* %358, i64 %idx.ext306, !dbg !4572
  store i8* %add.ptr307, i8** %r, align 8, !dbg !4562
  store i32 0, i32* %i, align 4, !dbg !4573
  br label %for.cond308, !dbg !4575

for.cond308:                                      ; preds = %for.inc329, %cond.end277
  %364 = load i32, i32* %i, align 4, !dbg !4576
  %365 = load i32, i32* %height262, align 4, !dbg !4579
  %cmp309 = icmp slt i32 %364, %365, !dbg !4580
  br i1 %cmp309, label %for.body311, label %for.end331, !dbg !4581

for.body311:                                      ; preds = %for.cond308
  %366 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !4582
  %llviddsp312 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %366, i32 0, i32 19, !dbg !4584
  %add_bytes = getelementptr inbounds %struct.LLVidDSPContext, %struct.LLVidDSPContext* %llviddsp312, i32 0, i32 0, !dbg !4585
  %367 = load void (i8*, i8*, i64)*, void (i8*, i8*, i64)** %add_bytes, align 8, !dbg !4585
  %368 = load i8*, i8** %b, align 8, !dbg !4586
  %369 = load i8*, i8** %g, align 8, !dbg !4587
  %370 = load i32, i32* %width279, align 4, !dbg !4588
  %conv313 = sext i32 %370 to i64, !dbg !4588
  call void %367(i8* %368, i8* %369, i64 %conv313), !dbg !4582
  %371 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !4589
  %llviddsp314 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %371, i32 0, i32 19, !dbg !4590
  %add_bytes315 = getelementptr inbounds %struct.LLVidDSPContext, %struct.LLVidDSPContext* %llviddsp314, i32 0, i32 0, !dbg !4591
  %372 = load void (i8*, i8*, i64)*, void (i8*, i8*, i64)** %add_bytes315, align 8, !dbg !4591
  %373 = load i8*, i8** %r, align 8, !dbg !4592
  %374 = load i8*, i8** %g, align 8, !dbg !4593
  %375 = load i32, i32* %width279, align 4, !dbg !4594
  %conv316 = sext i32 %375 to i64, !dbg !4594
  call void %372(i8* %373, i8* %374, i64 %conv316), !dbg !4589
  %376 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !4595
  %linesize317 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %376, i32 0, i32 1, !dbg !4596
  %arrayidx318 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize317, i64 0, i64 0, !dbg !4595
  %377 = load i32, i32* %arrayidx318, align 8, !dbg !4595
  %378 = load i8*, i8** %b, align 8, !dbg !4597
  %idx.ext319 = sext i32 %377 to i64, !dbg !4597
  %add.ptr320 = getelementptr inbounds i8, i8* %378, i64 %idx.ext319, !dbg !4597
  store i8* %add.ptr320, i8** %b, align 8, !dbg !4597
  %379 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !4598
  %linesize321 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %379, i32 0, i32 1, !dbg !4599
  %arrayidx322 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize321, i64 0, i64 1, !dbg !4598
  %380 = load i32, i32* %arrayidx322, align 4, !dbg !4598
  %381 = load i8*, i8** %g, align 8, !dbg !4600
  %idx.ext323 = sext i32 %380 to i64, !dbg !4600
  %add.ptr324 = getelementptr inbounds i8, i8* %381, i64 %idx.ext323, !dbg !4600
  store i8* %add.ptr324, i8** %g, align 8, !dbg !4600
  %382 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !4601
  %linesize325 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %382, i32 0, i32 1, !dbg !4602
  %arrayidx326 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize325, i64 0, i64 2, !dbg !4601
  %383 = load i32, i32* %arrayidx326, align 8, !dbg !4601
  %384 = load i8*, i8** %r, align 8, !dbg !4603
  %idx.ext327 = sext i32 %383 to i64, !dbg !4603
  %add.ptr328 = getelementptr inbounds i8, i8* %384, i64 %idx.ext327, !dbg !4603
  store i8* %add.ptr328, i8** %r, align 8, !dbg !4603
  br label %for.inc329, !dbg !4604

for.inc329:                                       ; preds = %for.body311
  %385 = load i32, i32* %i, align 4, !dbg !4605
  %inc330 = add nsw i32 %385, 1, !dbg !4605
  store i32 %inc330, i32* %i, align 4, !dbg !4605
  br label %for.cond308, !dbg !4607, !llvm.loop !4608

for.end331:                                       ; preds = %for.cond308
  br label %if.end332, !dbg !4610

if.end332:                                        ; preds = %for.end331, %for.end259
  store i32 0, i32* %retval, align 4, !dbg !4611
  br label %return, !dbg !4611

return:                                           ; preds = %if.end332, %if.then95, %if.then85, %if.then56, %if.then
  %386 = load i32, i32* %retval, align 4, !dbg !4612
  ret i32 %386, !dbg !4612
}

; Function Attrs: nounwind uwtable
define internal i32 @huff_build10(%struct.VLC* %vlc, i8* %len) #0 !dbg !4613 {
entry:
  %retval = alloca i32, align 4
  %vlc.addr = alloca %struct.VLC*, align 8
  %len.addr = alloca i8*, align 8
  %he = alloca [1024 x %struct.HuffEntry], align 16
  %codes = alloca [1024 x i32], align 16
  %bits = alloca [1024 x i8], align 16
  %syms = alloca [1024 x i16], align 16
  %code = alloca i32, align 4
  %i = alloca i32, align 4
  %stack = alloca [64 x [2 x i8*]], align 16
  %sp = alloca i32, align 4
  %start = alloca %struct.HuffEntry*, align 8
  %end = alloca %struct.HuffEntry*, align 8
  %checksort = alloca i32, align 4
  %right = alloca %struct.HuffEntry*, align 8
  %left = alloca %struct.HuffEntry*, align 8
  %mid = alloca %struct.HuffEntry*, align 8
  %SWAP_tmp = alloca %struct.HuffEntry, align 4
  %SWAP_tmp48 = alloca %struct.HuffEntry, align 4
  %SWAP_tmp57 = alloca %struct.HuffEntry, align 4
  %SWAP_tmp67 = alloca %struct.HuffEntry, align 4
  %SWAP_tmp76 = alloca %struct.HuffEntry, align 4
  %SWAP_tmp108 = alloca %struct.HuffEntry, align 4
  %SWAP_tmp115 = alloca %struct.HuffEntry, align 4
  %SWAP_tmp179 = alloca %struct.HuffEntry, align 4
  store %struct.VLC* %vlc, %struct.VLC** %vlc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VLC** %vlc.addr, metadata !4614, metadata !1637), !dbg !4615
  store i8* %len, i8** %len.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %len.addr, metadata !4616, metadata !1637), !dbg !4617
  call void @llvm.dbg.declare(metadata [1024 x %struct.HuffEntry]* %he, metadata !4618, metadata !1637), !dbg !4622
  call void @llvm.dbg.declare(metadata [1024 x i32]* %codes, metadata !4623, metadata !1637), !dbg !4625
  call void @llvm.dbg.declare(metadata [1024 x i8]* %bits, metadata !4626, metadata !1637), !dbg !4628
  call void @llvm.dbg.declare(metadata [1024 x i16]* %syms, metadata !4629, metadata !1637), !dbg !4631
  call void @llvm.dbg.declare(metadata i32* %code, metadata !4632, metadata !1637), !dbg !4633
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4634, metadata !1637), !dbg !4635
  store i32 0, i32* %i, align 4, !dbg !4636
  br label %for.cond, !dbg !4638

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !4639
  %cmp = icmp slt i32 %0, 1024, !dbg !4642
  br i1 %cmp, label %for.body, label %for.end, !dbg !4643

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !4644
  %sub = sub nsw i32 1023, %1, !dbg !4646
  %conv = trunc i32 %sub to i16, !dbg !4647
  %2 = load i32, i32* %i, align 4, !dbg !4648
  %idxprom = sext i32 %2 to i64, !dbg !4649
  %arrayidx = getelementptr inbounds [1024 x %struct.HuffEntry], [1024 x %struct.HuffEntry]* %he, i64 0, i64 %idxprom, !dbg !4649
  %sym = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %arrayidx, i32 0, i32 0, !dbg !4650
  store i16 %conv, i16* %sym, align 8, !dbg !4651
  %3 = load i32, i32* %i, align 4, !dbg !4652
  %idxprom1 = sext i32 %3 to i64, !dbg !4653
  %4 = load i8*, i8** %len.addr, align 8, !dbg !4653
  %arrayidx2 = getelementptr inbounds i8, i8* %4, i64 %idxprom1, !dbg !4653
  %5 = load i8, i8* %arrayidx2, align 1, !dbg !4653
  %6 = load i32, i32* %i, align 4, !dbg !4654
  %idxprom3 = sext i32 %6 to i64, !dbg !4655
  %arrayidx4 = getelementptr inbounds [1024 x %struct.HuffEntry], [1024 x %struct.HuffEntry]* %he, i64 0, i64 %idxprom3, !dbg !4655
  %len5 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %arrayidx4, i32 0, i32 1, !dbg !4656
  store i8 %5, i8* %len5, align 2, !dbg !4657
  %7 = load i32, i32* %i, align 4, !dbg !4658
  %idxprom6 = sext i32 %7 to i64, !dbg !4660
  %8 = load i8*, i8** %len.addr, align 8, !dbg !4660
  %arrayidx7 = getelementptr inbounds i8, i8* %8, i64 %idxprom6, !dbg !4660
  %9 = load i8, i8* %arrayidx7, align 1, !dbg !4660
  %conv8 = zext i8 %9 to i32, !dbg !4660
  %cmp9 = icmp eq i32 %conv8, 0, !dbg !4661
  br i1 %cmp9, label %if.then, label %lor.lhs.false, !dbg !4662

lor.lhs.false:                                    ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !4663
  %idxprom11 = sext i32 %10 to i64, !dbg !4665
  %11 = load i8*, i8** %len.addr, align 8, !dbg !4665
  %arrayidx12 = getelementptr inbounds i8, i8* %11, i64 %idxprom11, !dbg !4665
  %12 = load i8, i8* %arrayidx12, align 1, !dbg !4665
  %conv13 = zext i8 %12 to i32, !dbg !4665
  %cmp14 = icmp sgt i32 %conv13, 32, !dbg !4666
  br i1 %cmp14, label %if.then, label %if.end, !dbg !4667

if.then:                                          ; preds = %lor.lhs.false, %for.body
  store i32 -1094995529, i32* %retval, align 4, !dbg !4668
  br label %return, !dbg !4668

if.end:                                           ; preds = %lor.lhs.false
  br label %for.inc, !dbg !4669

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %i, align 4, !dbg !4670
  %inc = add nsw i32 %13, 1, !dbg !4670
  store i32 %inc, i32* %i, align 4, !dbg !4670
  br label %for.cond, !dbg !4672, !llvm.loop !4673

for.end:                                          ; preds = %for.cond
  br label %do.body, !dbg !4675, !llvm.loop !4676

do.body:                                          ; preds = %for.end
  call void @llvm.dbg.declare(metadata [64 x [2 x i8*]]* %stack, metadata !4677, metadata !1637), !dbg !4679
  call void @llvm.dbg.declare(metadata i32* %sp, metadata !4680, metadata !1637), !dbg !4681
  store i32 1, i32* %sp, align 4, !dbg !4682
  %arraydecay = getelementptr inbounds [1024 x %struct.HuffEntry], [1024 x %struct.HuffEntry]* %he, i32 0, i32 0, !dbg !4684
  %14 = bitcast %struct.HuffEntry* %arraydecay to i8*, !dbg !4684
  %arrayidx16 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 0, !dbg !4685
  %arrayidx17 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx16, i64 0, i64 0, !dbg !4685
  store i8* %14, i8** %arrayidx17, align 16, !dbg !4686
  %arraydecay18 = getelementptr inbounds [1024 x %struct.HuffEntry], [1024 x %struct.HuffEntry]* %he, i32 0, i32 0, !dbg !4687
  %add.ptr = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %arraydecay18, i64 1024, !dbg !4688
  %add.ptr19 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %add.ptr, i64 -1, !dbg !4689
  %15 = bitcast %struct.HuffEntry* %add.ptr19 to i8*, !dbg !4687
  %arrayidx20 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 0, !dbg !4690
  %arrayidx21 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx20, i64 0, i64 1, !dbg !4690
  store i8* %15, i8** %arrayidx21, align 8, !dbg !4691
  br label %while.cond, !dbg !4692

while.cond:                                       ; preds = %while.end183, %do.body
  %16 = load i32, i32* %sp, align 4, !dbg !4693
  %tobool = icmp ne i32 %16, 0, !dbg !4695
  br i1 %tobool, label %while.body, label %while.end184, !dbg !4695

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.HuffEntry** %start, metadata !4696, metadata !1637), !dbg !4698
  %17 = load i32, i32* %sp, align 4, !dbg !4699
  %dec = add nsw i32 %17, -1, !dbg !4699
  store i32 %dec, i32* %sp, align 4, !dbg !4699
  %idxprom22 = sext i32 %dec to i64, !dbg !4701
  %arrayidx23 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom22, !dbg !4701
  %arrayidx24 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx23, i64 0, i64 0, !dbg !4701
  %18 = load i8*, i8** %arrayidx24, align 16, !dbg !4701
  %19 = bitcast i8* %18 to %struct.HuffEntry*, !dbg !4701
  store %struct.HuffEntry* %19, %struct.HuffEntry** %start, align 8, !dbg !4702
  call void @llvm.dbg.declare(metadata %struct.HuffEntry** %end, metadata !4703, metadata !1637), !dbg !4704
  %20 = load i32, i32* %sp, align 4, !dbg !4705
  %idxprom25 = sext i32 %20 to i64, !dbg !4706
  %arrayidx26 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom25, !dbg !4706
  %arrayidx27 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx26, i64 0, i64 1, !dbg !4706
  %21 = load i8*, i8** %arrayidx27, align 8, !dbg !4706
  %22 = bitcast i8* %21 to %struct.HuffEntry*, !dbg !4706
  store %struct.HuffEntry* %22, %struct.HuffEntry** %end, align 8, !dbg !4707
  br label %while.cond28, !dbg !4708

while.cond28:                                     ; preds = %if.end182, %while.body
  %23 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !4709
  %24 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !4711
  %cmp29 = icmp ult %struct.HuffEntry* %23, %24, !dbg !4712
  br i1 %cmp29, label %while.body31, label %while.end183, !dbg !4713

while.body31:                                     ; preds = %while.cond28
  %25 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !4714
  %26 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !4718
  %add.ptr32 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %26, i64 -1, !dbg !4719
  %cmp33 = icmp ult %struct.HuffEntry* %25, %add.ptr32, !dbg !4720
  br i1 %cmp33, label %if.then35, label %if.else173, !dbg !4714

if.then35:                                        ; preds = %while.body31
  call void @llvm.dbg.declare(metadata i32* %checksort, metadata !4721, metadata !1637), !dbg !4723
  store i32 0, i32* %checksort, align 4, !dbg !4724
  call void @llvm.dbg.declare(metadata %struct.HuffEntry** %right, metadata !4726, metadata !1637), !dbg !4727
  %27 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !4728
  %add.ptr36 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %27, i64 -2, !dbg !4729
  store %struct.HuffEntry* %add.ptr36, %struct.HuffEntry** %right, align 8, !dbg !4730
  call void @llvm.dbg.declare(metadata %struct.HuffEntry** %left, metadata !4731, metadata !1637), !dbg !4732
  %28 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !4733
  %add.ptr37 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %28, i64 1, !dbg !4734
  store %struct.HuffEntry* %add.ptr37, %struct.HuffEntry** %left, align 8, !dbg !4735
  call void @llvm.dbg.declare(metadata %struct.HuffEntry** %mid, metadata !4736, metadata !1637), !dbg !4737
  %29 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !4738
  %30 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !4739
  %31 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !4740
  %sub.ptr.lhs.cast = ptrtoint %struct.HuffEntry* %30 to i64, !dbg !4741
  %sub.ptr.rhs.cast = ptrtoint %struct.HuffEntry* %31 to i64, !dbg !4741
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4741
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8, !dbg !4741
  %shr = ashr i64 %sub.ptr.div, 1, !dbg !4742
  %add.ptr38 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %29, i64 %shr, !dbg !4743
  store %struct.HuffEntry* %add.ptr38, %struct.HuffEntry** %mid, align 8, !dbg !4744
  %32 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !4745
  %33 = bitcast %struct.HuffEntry* %32 to i8*, !dbg !4745
  %34 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !4746
  %35 = bitcast %struct.HuffEntry* %34 to i8*, !dbg !4746
  %call = call i32 @huff_cmp_len10(i8* %33, i8* %35), !dbg !4747
  %cmp39 = icmp sgt i32 %call, 0, !dbg !4748
  br i1 %cmp39, label %if.then41, label %if.else51, !dbg !4747

if.then41:                                        ; preds = %if.then35
  %36 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !4749
  %37 = bitcast %struct.HuffEntry* %36 to i8*, !dbg !4749
  %38 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !4754
  %39 = bitcast %struct.HuffEntry* %38 to i8*, !dbg !4754
  %call42 = call i32 @huff_cmp_len10(i8* %37, i8* %39), !dbg !4755
  %cmp43 = icmp sgt i32 %call42, 0, !dbg !4756
  br i1 %cmp43, label %if.then45, label %if.else, !dbg !4755

if.then45:                                        ; preds = %if.then41
  br label %do.body46, !dbg !4757, !llvm.loop !4759

do.body46:                                        ; preds = %if.then45
  call void @llvm.dbg.declare(metadata %struct.HuffEntry* %SWAP_tmp, metadata !4761, metadata !1637), !dbg !4763
  %40 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !4764
  %41 = bitcast %struct.HuffEntry* %SWAP_tmp to i8*, !dbg !4766
  %42 = bitcast %struct.HuffEntry* %40 to i8*, !dbg !4766
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 4, i1 false), !dbg !4766
  %43 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !4767
  %44 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !4768
  %45 = bitcast %struct.HuffEntry* %43 to i8*, !dbg !4769
  %46 = bitcast %struct.HuffEntry* %44 to i8*, !dbg !4769
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* %46, i64 8, i32 4, i1 false), !dbg !4770
  %47 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !4772
  %48 = bitcast %struct.HuffEntry* %47 to i8*, !dbg !4773
  %49 = bitcast %struct.HuffEntry* %SWAP_tmp to i8*, !dbg !4773
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 4, i1 false), !dbg !4774
  br label %do.end, !dbg !4776

do.end:                                           ; preds = %do.body46
  br label %if.end50, !dbg !4777

if.else:                                          ; preds = %if.then41
  br label %do.body47, !dbg !4779, !llvm.loop !4781

do.body47:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.HuffEntry* %SWAP_tmp48, metadata !4783, metadata !1637), !dbg !4785
  %50 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !4786
  %51 = bitcast %struct.HuffEntry* %SWAP_tmp48 to i8*, !dbg !4788
  %52 = bitcast %struct.HuffEntry* %50 to i8*, !dbg !4788
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 4, i1 false), !dbg !4788
  %53 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !4789
  %54 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !4790
  %55 = bitcast %struct.HuffEntry* %53 to i8*, !dbg !4791
  %56 = bitcast %struct.HuffEntry* %54 to i8*, !dbg !4791
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %55, i8* %56, i64 8, i32 4, i1 false), !dbg !4792
  %57 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !4794
  %58 = bitcast %struct.HuffEntry* %57 to i8*, !dbg !4795
  %59 = bitcast %struct.HuffEntry* %SWAP_tmp48 to i8*, !dbg !4795
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %58, i8* %59, i64 8, i32 4, i1 false), !dbg !4796
  br label %do.end49, !dbg !4798

do.end49:                                         ; preds = %do.body47
  br label %if.end50

if.end50:                                         ; preds = %do.end49, %do.end
  br label %if.end61, !dbg !4799

if.else51:                                        ; preds = %if.then35
  %60 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !4801
  %61 = bitcast %struct.HuffEntry* %60 to i8*, !dbg !4801
  %62 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !4805
  %63 = bitcast %struct.HuffEntry* %62 to i8*, !dbg !4805
  %call52 = call i32 @huff_cmp_len10(i8* %61, i8* %63), !dbg !4806
  %cmp53 = icmp sgt i32 %call52, 0, !dbg !4807
  br i1 %cmp53, label %if.then55, label %if.else59, !dbg !4806

if.then55:                                        ; preds = %if.else51
  br label %do.body56, !dbg !4808, !llvm.loop !4810

do.body56:                                        ; preds = %if.then55
  call void @llvm.dbg.declare(metadata %struct.HuffEntry* %SWAP_tmp57, metadata !4812, metadata !1637), !dbg !4814
  %64 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !4815
  %65 = bitcast %struct.HuffEntry* %SWAP_tmp57 to i8*, !dbg !4817
  %66 = bitcast %struct.HuffEntry* %64 to i8*, !dbg !4817
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %66, i64 8, i32 4, i1 false), !dbg !4817
  %67 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !4818
  %68 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !4819
  %69 = bitcast %struct.HuffEntry* %67 to i8*, !dbg !4820
  %70 = bitcast %struct.HuffEntry* %68 to i8*, !dbg !4820
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %69, i8* %70, i64 8, i32 4, i1 false), !dbg !4821
  %71 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !4823
  %72 = bitcast %struct.HuffEntry* %71 to i8*, !dbg !4824
  %73 = bitcast %struct.HuffEntry* %SWAP_tmp57 to i8*, !dbg !4824
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %72, i8* %73, i64 8, i32 4, i1 false), !dbg !4825
  br label %do.end58, !dbg !4827

do.end58:                                         ; preds = %do.body56
  br label %if.end60, !dbg !4828

if.else59:                                        ; preds = %if.else51
  store i32 1, i32* %checksort, align 4, !dbg !4830
  br label %if.end60

if.end60:                                         ; preds = %if.else59, %do.end58
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.end50
  %74 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !4832
  %75 = bitcast %struct.HuffEntry* %74 to i8*, !dbg !4832
  %76 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !4835
  %77 = bitcast %struct.HuffEntry* %76 to i8*, !dbg !4835
  %call62 = call i32 @huff_cmp_len10(i8* %75, i8* %77), !dbg !4836
  %cmp63 = icmp sgt i32 %call62, 0, !dbg !4837
  br i1 %cmp63, label %if.then65, label %if.end69, !dbg !4836

if.then65:                                        ; preds = %if.end61
  br label %do.body66, !dbg !4838, !llvm.loop !4841

do.body66:                                        ; preds = %if.then65
  call void @llvm.dbg.declare(metadata %struct.HuffEntry* %SWAP_tmp67, metadata !4843, metadata !1637), !dbg !4845
  %78 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !4846
  %79 = bitcast %struct.HuffEntry* %SWAP_tmp67 to i8*, !dbg !4848
  %80 = bitcast %struct.HuffEntry* %78 to i8*, !dbg !4848
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %79, i8* %80, i64 8, i32 4, i1 false), !dbg !4848
  %81 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !4849
  %82 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !4850
  %83 = bitcast %struct.HuffEntry* %81 to i8*, !dbg !4851
  %84 = bitcast %struct.HuffEntry* %82 to i8*, !dbg !4851
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %83, i8* %84, i64 8, i32 4, i1 false), !dbg !4852
  %85 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !4854
  %86 = bitcast %struct.HuffEntry* %85 to i8*, !dbg !4855
  %87 = bitcast %struct.HuffEntry* %SWAP_tmp67 to i8*, !dbg !4855
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 8, i32 4, i1 false), !dbg !4856
  br label %do.end68, !dbg !4858

do.end68:                                         ; preds = %do.body66
  store i32 0, i32* %checksort, align 4, !dbg !4859
  br label %if.end69, !dbg !4861

if.end69:                                         ; preds = %do.end68, %if.end61
  %88 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !4862
  %89 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !4865
  %add.ptr70 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %89, i64 -2, !dbg !4866
  %cmp71 = icmp eq %struct.HuffEntry* %88, %add.ptr70, !dbg !4867
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !4862

if.then73:                                        ; preds = %if.end69
  br label %while.end183, !dbg !4868

if.end74:                                         ; preds = %if.end69
  br label %do.body75, !dbg !4870, !llvm.loop !4872

do.body75:                                        ; preds = %if.end74
  call void @llvm.dbg.declare(metadata %struct.HuffEntry* %SWAP_tmp76, metadata !4874, metadata !1637), !dbg !4876
  %90 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !4877
  %91 = bitcast %struct.HuffEntry* %SWAP_tmp76 to i8*, !dbg !4879
  %92 = bitcast %struct.HuffEntry* %90 to i8*, !dbg !4879
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %91, i8* %92, i64 8, i32 4, i1 false), !dbg !4879
  %93 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !4880
  %94 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !4881
  %arrayidx77 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %94, i64 -1, !dbg !4881
  %95 = bitcast %struct.HuffEntry* %93 to i8*, !dbg !4881
  %96 = bitcast %struct.HuffEntry* %arrayidx77 to i8*, !dbg !4881
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %95, i8* %96, i64 8, i32 4, i1 false), !dbg !4882
  %97 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !4884
  %arrayidx78 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %97, i64 -1, !dbg !4884
  %98 = bitcast %struct.HuffEntry* %arrayidx78 to i8*, !dbg !4885
  %99 = bitcast %struct.HuffEntry* %SWAP_tmp76 to i8*, !dbg !4885
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %98, i8* %99, i64 8, i32 4, i1 false), !dbg !4886
  br label %do.end79, !dbg !4888

do.end79:                                         ; preds = %do.body75
  br label %while.cond80, !dbg !4889

while.cond80:                                     ; preds = %if.end112, %do.end79
  %100 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !4891
  %101 = load %struct.HuffEntry*, %struct.HuffEntry** %right, align 8, !dbg !4893
  %cmp81 = icmp ule %struct.HuffEntry* %100, %101, !dbg !4894
  br i1 %cmp81, label %while.body83, label %while.end113, !dbg !4895

while.body83:                                     ; preds = %while.cond80
  br label %while.cond84, !dbg !4896

while.cond84:                                     ; preds = %while.body91, %while.body83
  %102 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !4899
  %103 = load %struct.HuffEntry*, %struct.HuffEntry** %right, align 8, !dbg !4901
  %cmp85 = icmp ule %struct.HuffEntry* %102, %103, !dbg !4902
  br i1 %cmp85, label %land.rhs, label %land.end, !dbg !4903

land.rhs:                                         ; preds = %while.cond84
  %104 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !4904
  %105 = bitcast %struct.HuffEntry* %104 to i8*, !dbg !4904
  %106 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !4906
  %add.ptr87 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %106, i64 -1, !dbg !4907
  %107 = bitcast %struct.HuffEntry* %add.ptr87 to i8*, !dbg !4906
  %call88 = call i32 @huff_cmp_len10(i8* %105, i8* %107), !dbg !4908
  %cmp89 = icmp slt i32 %call88, 0, !dbg !4909
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond84
  %108 = phi i1 [ false, %while.cond84 ], [ %cmp89, %land.rhs ]
  br i1 %108, label %while.body91, label %while.end, !dbg !4910

while.body91:                                     ; preds = %land.end
  %109 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !4912
  %incdec.ptr = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %109, i32 1, !dbg !4912
  store %struct.HuffEntry* %incdec.ptr, %struct.HuffEntry** %left, align 8, !dbg !4912
  br label %while.cond84, !dbg !4914, !llvm.loop !4915

while.end:                                        ; preds = %land.end
  br label %while.cond92, !dbg !4917

while.cond92:                                     ; preds = %while.body101, %while.end
  %110 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !4919
  %111 = load %struct.HuffEntry*, %struct.HuffEntry** %right, align 8, !dbg !4921
  %cmp93 = icmp ule %struct.HuffEntry* %110, %111, !dbg !4922
  br i1 %cmp93, label %land.rhs95, label %land.end100, !dbg !4923

land.rhs95:                                       ; preds = %while.cond92
  %112 = load %struct.HuffEntry*, %struct.HuffEntry** %right, align 8, !dbg !4924
  %113 = bitcast %struct.HuffEntry* %112 to i8*, !dbg !4924
  %114 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !4926
  %add.ptr96 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %114, i64 -1, !dbg !4927
  %115 = bitcast %struct.HuffEntry* %add.ptr96 to i8*, !dbg !4926
  %call97 = call i32 @huff_cmp_len10(i8* %113, i8* %115), !dbg !4928
  %cmp98 = icmp sgt i32 %call97, 0, !dbg !4929
  br label %land.end100

land.end100:                                      ; preds = %land.rhs95, %while.cond92
  %116 = phi i1 [ false, %while.cond92 ], [ %cmp98, %land.rhs95 ]
  br i1 %116, label %while.body101, label %while.end103, !dbg !4930

while.body101:                                    ; preds = %land.end100
  %117 = load %struct.HuffEntry*, %struct.HuffEntry** %right, align 8, !dbg !4932
  %incdec.ptr102 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %117, i32 -1, !dbg !4932
  store %struct.HuffEntry* %incdec.ptr102, %struct.HuffEntry** %right, align 8, !dbg !4932
  br label %while.cond92, !dbg !4934, !llvm.loop !4935

while.end103:                                     ; preds = %land.end100
  %118 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !4937
  %119 = load %struct.HuffEntry*, %struct.HuffEntry** %right, align 8, !dbg !4940
  %cmp104 = icmp ule %struct.HuffEntry* %118, %119, !dbg !4941
  br i1 %cmp104, label %if.then106, label %if.end112, !dbg !4937

if.then106:                                       ; preds = %while.end103
  br label %do.body107, !dbg !4942, !llvm.loop !4945

do.body107:                                       ; preds = %if.then106
  call void @llvm.dbg.declare(metadata %struct.HuffEntry* %SWAP_tmp108, metadata !4947, metadata !1637), !dbg !4949
  %120 = load %struct.HuffEntry*, %struct.HuffEntry** %right, align 8, !dbg !4950
  %121 = bitcast %struct.HuffEntry* %SWAP_tmp108 to i8*, !dbg !4952
  %122 = bitcast %struct.HuffEntry* %120 to i8*, !dbg !4952
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %121, i8* %122, i64 8, i32 4, i1 false), !dbg !4952
  %123 = load %struct.HuffEntry*, %struct.HuffEntry** %right, align 8, !dbg !4953
  %124 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !4954
  %125 = bitcast %struct.HuffEntry* %123 to i8*, !dbg !4955
  %126 = bitcast %struct.HuffEntry* %124 to i8*, !dbg !4955
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %125, i8* %126, i64 8, i32 4, i1 false), !dbg !4956
  %127 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !4958
  %128 = bitcast %struct.HuffEntry* %127 to i8*, !dbg !4959
  %129 = bitcast %struct.HuffEntry* %SWAP_tmp108 to i8*, !dbg !4959
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %128, i8* %129, i64 8, i32 4, i1 false), !dbg !4960
  br label %do.end109, !dbg !4962

do.end109:                                        ; preds = %do.body107
  %130 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !4963
  %incdec.ptr110 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %130, i32 1, !dbg !4963
  store %struct.HuffEntry* %incdec.ptr110, %struct.HuffEntry** %left, align 8, !dbg !4963
  %131 = load %struct.HuffEntry*, %struct.HuffEntry** %right, align 8, !dbg !4965
  %incdec.ptr111 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %131, i32 -1, !dbg !4965
  store %struct.HuffEntry* %incdec.ptr111, %struct.HuffEntry** %right, align 8, !dbg !4965
  br label %if.end112, !dbg !4966

if.end112:                                        ; preds = %do.end109, %while.end103
  br label %while.cond80, !dbg !4967, !llvm.loop !4969

while.end113:                                     ; preds = %while.cond80
  br label %do.body114, !dbg !4971, !llvm.loop !4973

do.body114:                                       ; preds = %while.end113
  call void @llvm.dbg.declare(metadata %struct.HuffEntry* %SWAP_tmp115, metadata !4975, metadata !1637), !dbg !4977
  %132 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !4978
  %133 = bitcast %struct.HuffEntry* %SWAP_tmp115 to i8*, !dbg !4980
  %134 = bitcast %struct.HuffEntry* %132 to i8*, !dbg !4980
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %133, i8* %134, i64 8, i32 4, i1 false), !dbg !4980
  %135 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !4981
  %136 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !4982
  %arrayidx116 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %136, i64 -1, !dbg !4982
  %137 = bitcast %struct.HuffEntry* %135 to i8*, !dbg !4982
  %138 = bitcast %struct.HuffEntry* %arrayidx116 to i8*, !dbg !4982
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %137, i8* %138, i64 8, i32 4, i1 false), !dbg !4983
  %139 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !4985
  %arrayidx117 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %139, i64 -1, !dbg !4985
  %140 = bitcast %struct.HuffEntry* %arrayidx117 to i8*, !dbg !4986
  %141 = bitcast %struct.HuffEntry* %SWAP_tmp115 to i8*, !dbg !4986
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %140, i8* %141, i64 8, i32 4, i1 false), !dbg !4987
  br label %do.end118, !dbg !4989

do.end118:                                        ; preds = %do.body114
  %142 = load i32, i32* %checksort, align 4, !dbg !4990
  %tobool119 = icmp ne i32 %142, 0, !dbg !4990
  br i1 %tobool119, label %land.lhs.true, label %if.end143, !dbg !4993

land.lhs.true:                                    ; preds = %do.end118
  %143 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !4994
  %144 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !4996
  %add.ptr120 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %144, i64 -1, !dbg !4997
  %cmp121 = icmp eq %struct.HuffEntry* %143, %add.ptr120, !dbg !4998
  br i1 %cmp121, label %if.then126, label %lor.lhs.false123, !dbg !4999

lor.lhs.false123:                                 ; preds = %land.lhs.true
  %145 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !5000
  %146 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !5002
  %cmp124 = icmp eq %struct.HuffEntry* %145, %146, !dbg !5003
  br i1 %cmp124, label %if.then126, label %if.end143, !dbg !5004

if.then126:                                       ; preds = %lor.lhs.false123, %land.lhs.true
  %147 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !5005
  store %struct.HuffEntry* %147, %struct.HuffEntry** %mid, align 8, !dbg !5008
  br label %while.cond127, !dbg !5009

while.cond127:                                    ; preds = %while.body136, %if.then126
  %148 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !5010
  %149 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !5012
  %cmp128 = icmp ult %struct.HuffEntry* %148, %149, !dbg !5013
  br i1 %cmp128, label %land.rhs130, label %land.end135, !dbg !5014

land.rhs130:                                      ; preds = %while.cond127
  %150 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !5015
  %151 = bitcast %struct.HuffEntry* %150 to i8*, !dbg !5015
  %152 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !5017
  %add.ptr131 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %152, i64 1, !dbg !5018
  %153 = bitcast %struct.HuffEntry* %add.ptr131 to i8*, !dbg !5017
  %call132 = call i32 @huff_cmp_len10(i8* %151, i8* %153), !dbg !5019
  %cmp133 = icmp sle i32 %call132, 0, !dbg !5020
  br label %land.end135

land.end135:                                      ; preds = %land.rhs130, %while.cond127
  %154 = phi i1 [ false, %while.cond127 ], [ %cmp133, %land.rhs130 ]
  br i1 %154, label %while.body136, label %while.end138, !dbg !5021

while.body136:                                    ; preds = %land.end135
  %155 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !5023
  %incdec.ptr137 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %155, i32 1, !dbg !5023
  store %struct.HuffEntry* %incdec.ptr137, %struct.HuffEntry** %mid, align 8, !dbg !5023
  br label %while.cond127, !dbg !5025, !llvm.loop !5026

while.end138:                                     ; preds = %land.end135
  %156 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !5028
  %157 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !5031
  %cmp139 = icmp eq %struct.HuffEntry* %156, %157, !dbg !5032
  br i1 %cmp139, label %if.then141, label %if.end142, !dbg !5028

if.then141:                                       ; preds = %while.end138
  br label %while.end183, !dbg !5033

if.end142:                                        ; preds = %while.end138
  br label %if.end143, !dbg !5035

if.end143:                                        ; preds = %if.end142, %lor.lhs.false123, %do.end118
  %158 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !5037
  %159 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !5040
  %sub.ptr.lhs.cast144 = ptrtoint %struct.HuffEntry* %158 to i64, !dbg !5041
  %sub.ptr.rhs.cast145 = ptrtoint %struct.HuffEntry* %159 to i64, !dbg !5041
  %sub.ptr.sub146 = sub i64 %sub.ptr.lhs.cast144, %sub.ptr.rhs.cast145, !dbg !5041
  %sub.ptr.div147 = sdiv exact i64 %sub.ptr.sub146, 8, !dbg !5041
  %160 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !5042
  %161 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !5043
  %sub.ptr.lhs.cast148 = ptrtoint %struct.HuffEntry* %160 to i64, !dbg !5044
  %sub.ptr.rhs.cast149 = ptrtoint %struct.HuffEntry* %161 to i64, !dbg !5044
  %sub.ptr.sub150 = sub i64 %sub.ptr.lhs.cast148, %sub.ptr.rhs.cast149, !dbg !5044
  %sub.ptr.div151 = sdiv exact i64 %sub.ptr.sub150, 8, !dbg !5044
  %cmp152 = icmp slt i64 %sub.ptr.div147, %sub.ptr.div151, !dbg !5045
  br i1 %cmp152, label %if.then154, label %if.else163, !dbg !5037

if.then154:                                       ; preds = %if.end143
  %162 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !5046
  %163 = bitcast %struct.HuffEntry* %162 to i8*, !dbg !5046
  %164 = load i32, i32* %sp, align 4, !dbg !5049
  %idxprom155 = sext i32 %164 to i64, !dbg !5050
  %arrayidx156 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom155, !dbg !5050
  %arrayidx157 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx156, i64 0, i64 0, !dbg !5050
  store i8* %163, i8** %arrayidx157, align 16, !dbg !5051
  %165 = load %struct.HuffEntry*, %struct.HuffEntry** %right, align 8, !dbg !5052
  %166 = bitcast %struct.HuffEntry* %165 to i8*, !dbg !5052
  %167 = load i32, i32* %sp, align 4, !dbg !5053
  %inc158 = add nsw i32 %167, 1, !dbg !5053
  store i32 %inc158, i32* %sp, align 4, !dbg !5053
  %idxprom159 = sext i32 %167 to i64, !dbg !5054
  %arrayidx160 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom159, !dbg !5054
  %arrayidx161 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx160, i64 0, i64 1, !dbg !5054
  store i8* %166, i8** %arrayidx161, align 8, !dbg !5055
  %168 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !5056
  %add.ptr162 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %168, i64 1, !dbg !5057
  store %struct.HuffEntry* %add.ptr162, %struct.HuffEntry** %start, align 8, !dbg !5058
  br label %if.end172, !dbg !5059

if.else163:                                       ; preds = %if.end143
  %169 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !5060
  %add.ptr164 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %169, i64 1, !dbg !5063
  %170 = bitcast %struct.HuffEntry* %add.ptr164 to i8*, !dbg !5060
  %171 = load i32, i32* %sp, align 4, !dbg !5064
  %idxprom165 = sext i32 %171 to i64, !dbg !5065
  %arrayidx166 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom165, !dbg !5065
  %arrayidx167 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx166, i64 0, i64 0, !dbg !5065
  store i8* %170, i8** %arrayidx167, align 16, !dbg !5066
  %172 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !5067
  %173 = bitcast %struct.HuffEntry* %172 to i8*, !dbg !5067
  %174 = load i32, i32* %sp, align 4, !dbg !5068
  %inc168 = add nsw i32 %174, 1, !dbg !5068
  store i32 %inc168, i32* %sp, align 4, !dbg !5068
  %idxprom169 = sext i32 %174 to i64, !dbg !5069
  %arrayidx170 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom169, !dbg !5069
  %arrayidx171 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx170, i64 0, i64 1, !dbg !5069
  store i8* %173, i8** %arrayidx171, align 8, !dbg !5070
  %175 = load %struct.HuffEntry*, %struct.HuffEntry** %right, align 8, !dbg !5071
  store %struct.HuffEntry* %175, %struct.HuffEntry** %end, align 8, !dbg !5072
  br label %if.end172

if.end172:                                        ; preds = %if.else163, %if.then154
  br label %if.end182, !dbg !5073

if.else173:                                       ; preds = %while.body31
  %176 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !5075
  %177 = bitcast %struct.HuffEntry* %176 to i8*, !dbg !5075
  %178 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !5079
  %179 = bitcast %struct.HuffEntry* %178 to i8*, !dbg !5079
  %call174 = call i32 @huff_cmp_len10(i8* %177, i8* %179), !dbg !5080
  %cmp175 = icmp sgt i32 %call174, 0, !dbg !5081
  br i1 %cmp175, label %if.then177, label %if.end181, !dbg !5080

if.then177:                                       ; preds = %if.else173
  br label %do.body178, !dbg !5082, !llvm.loop !5084

do.body178:                                       ; preds = %if.then177
  call void @llvm.dbg.declare(metadata %struct.HuffEntry* %SWAP_tmp179, metadata !5086, metadata !1637), !dbg !5088
  %180 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !5089
  %181 = bitcast %struct.HuffEntry* %SWAP_tmp179 to i8*, !dbg !5091
  %182 = bitcast %struct.HuffEntry* %180 to i8*, !dbg !5091
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %181, i8* %182, i64 8, i32 4, i1 false), !dbg !5091
  %183 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !5092
  %184 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !5093
  %185 = bitcast %struct.HuffEntry* %183 to i8*, !dbg !5094
  %186 = bitcast %struct.HuffEntry* %184 to i8*, !dbg !5094
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %185, i8* %186, i64 8, i32 4, i1 false), !dbg !5095
  %187 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !5097
  %188 = bitcast %struct.HuffEntry* %187 to i8*, !dbg !5098
  %189 = bitcast %struct.HuffEntry* %SWAP_tmp179 to i8*, !dbg !5098
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %188, i8* %189, i64 8, i32 4, i1 false), !dbg !5099
  br label %do.end180, !dbg !5101

do.end180:                                        ; preds = %do.body178
  br label %if.end181, !dbg !5102

if.end181:                                        ; preds = %do.end180, %if.else173
  br label %while.end183, !dbg !5104

if.end182:                                        ; preds = %if.end172
  br label %while.cond28, !dbg !5106, !llvm.loop !5108

while.end183:                                     ; preds = %if.end181, %if.then141, %if.then73, %while.cond28
  br label %while.cond, !dbg !5110, !llvm.loop !5112

while.end184:                                     ; preds = %while.cond
  br label %do.end185, !dbg !5114

do.end185:                                        ; preds = %while.end184
  store i32 1, i32* %code, align 4, !dbg !5116
  store i32 1023, i32* %i, align 4, !dbg !5117
  br label %for.cond186, !dbg !5119

for.cond186:                                      ; preds = %for.inc214, %do.end185
  %190 = load i32, i32* %i, align 4, !dbg !5120
  %cmp187 = icmp sge i32 %190, 0, !dbg !5123
  br i1 %cmp187, label %for.body189, label %for.end216, !dbg !5124

for.body189:                                      ; preds = %for.cond186
  %191 = load i32, i32* %code, align 4, !dbg !5125
  %192 = load i32, i32* %i, align 4, !dbg !5127
  %idxprom190 = sext i32 %192 to i64, !dbg !5128
  %arrayidx191 = getelementptr inbounds [1024 x %struct.HuffEntry], [1024 x %struct.HuffEntry]* %he, i64 0, i64 %idxprom190, !dbg !5128
  %len192 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %arrayidx191, i32 0, i32 1, !dbg !5129
  %193 = load i8, i8* %len192, align 2, !dbg !5129
  %conv193 = zext i8 %193 to i32, !dbg !5128
  %sub194 = sub nsw i32 32, %conv193, !dbg !5130
  %shr195 = lshr i32 %191, %sub194, !dbg !5131
  %194 = load i32, i32* %i, align 4, !dbg !5132
  %idxprom196 = sext i32 %194 to i64, !dbg !5133
  %arrayidx197 = getelementptr inbounds [1024 x i32], [1024 x i32]* %codes, i64 0, i64 %idxprom196, !dbg !5133
  store i32 %shr195, i32* %arrayidx197, align 4, !dbg !5134
  %195 = load i32, i32* %i, align 4, !dbg !5135
  %idxprom198 = sext i32 %195 to i64, !dbg !5136
  %arrayidx199 = getelementptr inbounds [1024 x %struct.HuffEntry], [1024 x %struct.HuffEntry]* %he, i64 0, i64 %idxprom198, !dbg !5136
  %len200 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %arrayidx199, i32 0, i32 1, !dbg !5137
  %196 = load i8, i8* %len200, align 2, !dbg !5137
  %197 = load i32, i32* %i, align 4, !dbg !5138
  %idxprom201 = sext i32 %197 to i64, !dbg !5139
  %arrayidx202 = getelementptr inbounds [1024 x i8], [1024 x i8]* %bits, i64 0, i64 %idxprom201, !dbg !5139
  store i8 %196, i8* %arrayidx202, align 1, !dbg !5140
  %198 = load i32, i32* %i, align 4, !dbg !5141
  %idxprom203 = sext i32 %198 to i64, !dbg !5142
  %arrayidx204 = getelementptr inbounds [1024 x %struct.HuffEntry], [1024 x %struct.HuffEntry]* %he, i64 0, i64 %idxprom203, !dbg !5142
  %sym205 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %arrayidx204, i32 0, i32 0, !dbg !5143
  %199 = load i16, i16* %sym205, align 8, !dbg !5143
  %200 = load i32, i32* %i, align 4, !dbg !5144
  %idxprom206 = sext i32 %200 to i64, !dbg !5145
  %arrayidx207 = getelementptr inbounds [1024 x i16], [1024 x i16]* %syms, i64 0, i64 %idxprom206, !dbg !5145
  store i16 %199, i16* %arrayidx207, align 2, !dbg !5146
  %201 = load i32, i32* %i, align 4, !dbg !5147
  %idxprom208 = sext i32 %201 to i64, !dbg !5148
  %arrayidx209 = getelementptr inbounds [1024 x %struct.HuffEntry], [1024 x %struct.HuffEntry]* %he, i64 0, i64 %idxprom208, !dbg !5148
  %len210 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %arrayidx209, i32 0, i32 1, !dbg !5149
  %202 = load i8, i8* %len210, align 2, !dbg !5149
  %conv211 = zext i8 %202 to i32, !dbg !5148
  %sub212 = sub nsw i32 %conv211, 1, !dbg !5150
  %shr213 = lshr i32 -2147483648, %sub212, !dbg !5151
  %203 = load i32, i32* %code, align 4, !dbg !5152
  %add = add i32 %203, %shr213, !dbg !5152
  store i32 %add, i32* %code, align 4, !dbg !5152
  br label %for.inc214, !dbg !5153

for.inc214:                                       ; preds = %for.body189
  %204 = load i32, i32* %i, align 4, !dbg !5154
  %dec215 = add nsw i32 %204, -1, !dbg !5154
  store i32 %dec215, i32* %i, align 4, !dbg !5154
  br label %for.cond186, !dbg !5156, !llvm.loop !5157

for.end216:                                       ; preds = %for.cond186
  %205 = load %struct.VLC*, %struct.VLC** %vlc.addr, align 8, !dbg !5159
  call void @ff_free_vlc(%struct.VLC* %205), !dbg !5160
  %206 = load %struct.VLC*, %struct.VLC** %vlc.addr, align 8, !dbg !5161
  %arrayidx217 = getelementptr inbounds [1024 x %struct.HuffEntry], [1024 x %struct.HuffEntry]* %he, i64 0, i64 1023, !dbg !5162
  %len218 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %arrayidx217, i32 0, i32 1, !dbg !5163
  %207 = load i8, i8* %len218, align 2, !dbg !5163
  %conv219 = zext i8 %207 to i32, !dbg !5164
  %cmp220 = icmp sgt i32 %conv219, 12, !dbg !5165
  br i1 %cmp220, label %cond.true, label %cond.false, !dbg !5164

cond.true:                                        ; preds = %for.end216
  br label %cond.end, !dbg !5166

cond.false:                                       ; preds = %for.end216
  %arrayidx222 = getelementptr inbounds [1024 x %struct.HuffEntry], [1024 x %struct.HuffEntry]* %he, i64 0, i64 1023, !dbg !5168
  %len223 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %arrayidx222, i32 0, i32 1, !dbg !5170
  %208 = load i8, i8* %len223, align 2, !dbg !5170
  %conv224 = zext i8 %208 to i32, !dbg !5171
  br label %cond.end, !dbg !5172

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 12, %cond.true ], [ %conv224, %cond.false ], !dbg !5173
  %arraydecay225 = getelementptr inbounds [1024 x i8], [1024 x i8]* %bits, i32 0, i32 0, !dbg !5175
  %arraydecay226 = getelementptr inbounds [1024 x i32], [1024 x i32]* %codes, i32 0, i32 0, !dbg !5176
  %209 = bitcast i32* %arraydecay226 to i8*, !dbg !5176
  %arraydecay227 = getelementptr inbounds [1024 x i16], [1024 x i16]* %syms, i32 0, i32 0, !dbg !5177
  %210 = bitcast i16* %arraydecay227 to i8*, !dbg !5177
  %call228 = call i32 @ff_init_vlc_sparse(%struct.VLC* %206, i32 %cond, i32 1024, i8* %arraydecay225, i32 1, i32 1, i8* %209, i32 4, i32 4, i8* %210, i32 2, i32 2, i32 0), !dbg !5178
  store i32 %call228, i32* %retval, align 4, !dbg !5179
  br label %return, !dbg !5179

return:                                           ; preds = %cond.end, %if.then
  %211 = load i32, i32* %retval, align 4, !dbg !5180
  ret i32 %211, !dbg !5180
}

; Function Attrs: nounwind uwtable
define internal i32 @magy_decode_slice10(%struct.AVCodecContext* %avctx, i8* %tdata, i32 %j, i32 %threadnr) #0 !dbg !5181 {
entry:
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !3707, metadata !1637), !dbg !5182
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !3707, metadata !1637), !dbg !5196
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !3707, metadata !1637), !dbg !5198
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !3741, metadata !1637), !dbg !5200
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !3743, metadata !1637), !dbg !5201
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !3745, metadata !1637), !dbg !5202
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !3747, metadata !1637), !dbg !5203
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !3749, metadata !1637), !dbg !5204
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !3751, metadata !1637), !dbg !5205
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !3753, metadata !1637), !dbg !5206
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !3755, metadata !1637), !dbg !5207
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !3757, metadata !1637), !dbg !5208
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !3759, metadata !1637), !dbg !5209
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !3761, metadata !1637), !dbg !5210
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %tdata.addr = alloca i8*, align 8
  %j.addr = alloca i32, align 4
  %threadnr.addr = alloca i32, align 4
  %s = alloca %struct.MagicYUVContext*, align 8
  %interlaced = alloca i32, align 4
  %bps = alloca i32, align 4
  %max = alloca i32, align 4
  %p = alloca %struct.AVFrame*, align 8
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %x = alloca i32, align 4
  %gb = alloca %struct.GetBitContext, align 8
  %dst = alloca i16*, align 8
  %left = alloca i32, align 4
  %lefttop = alloca i32, align 4
  %top = alloca i32, align 4
  %height = alloca i32, align 4
  %width = alloca i32, align 4
  %sheight = alloca i32, align 4
  %fake_stride = alloca i64, align 8
  %stride = alloca i64, align 8
  %flags = alloca i32, align 4
  %pred = alloca i32, align 4
  %ret = alloca i32, align 4
  %pix = alloca i32, align 4
  %height253 = alloca i32, align 4
  %width270 = alloca i32, align 4
  %r = alloca i16*, align 8
  %g = alloca i16*, align 8
  %b = alloca i16*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !5211, metadata !1637), !dbg !5212
  store i8* %tdata, i8** %tdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tdata.addr, metadata !5213, metadata !1637), !dbg !5214
  store i32 %j, i32* %j.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %j.addr, metadata !5215, metadata !1637), !dbg !5216
  store i32 %threadnr, i32* %threadnr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %threadnr.addr, metadata !5217, metadata !1637), !dbg !5218
  call void @llvm.dbg.declare(metadata %struct.MagicYUVContext** %s, metadata !5219, metadata !1637), !dbg !5220
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5221
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !5222
  %1 = load i8*, i8** %priv_data, align 8, !dbg !5222
  %2 = bitcast i8* %1 to %struct.MagicYUVContext*, !dbg !5221
  store %struct.MagicYUVContext* %2, %struct.MagicYUVContext** %s, align 8, !dbg !5220
  call void @llvm.dbg.declare(metadata i32* %interlaced, metadata !5223, metadata !1637), !dbg !5224
  %3 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !5225
  %interlaced1 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %3, i32 0, i32 9, !dbg !5226
  %4 = load i32, i32* %interlaced1, align 8, !dbg !5226
  store i32 %4, i32* %interlaced, align 4, !dbg !5224
  call void @llvm.dbg.declare(metadata i32* %bps, metadata !5227, metadata !1637), !dbg !5228
  %5 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !5229
  %bps2 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %5, i32 0, i32 2, !dbg !5230
  %6 = load i32, i32* %bps2, align 4, !dbg !5230
  store i32 %6, i32* %bps, align 4, !dbg !5228
  call void @llvm.dbg.declare(metadata i32* %max, metadata !5231, metadata !1637), !dbg !5232
  %7 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !5233
  %max3 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %7, i32 0, i32 1, !dbg !5234
  %8 = load i32, i32* %max3, align 8, !dbg !5234
  %sub = sub nsw i32 %8, 1, !dbg !5235
  store i32 %sub, i32* %max, align 4, !dbg !5232
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %p, metadata !5236, metadata !1637), !dbg !5237
  %9 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !5238
  %p4 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %9, i32 0, i32 0, !dbg !5239
  %10 = load %struct.AVFrame*, %struct.AVFrame** %p4, align 8, !dbg !5239
  store %struct.AVFrame* %10, %struct.AVFrame** %p, align 8, !dbg !5237
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5240, metadata !1637), !dbg !5241
  call void @llvm.dbg.declare(metadata i32* %k, metadata !5242, metadata !1637), !dbg !5243
  call void @llvm.dbg.declare(metadata i32* %x, metadata !5244, metadata !1637), !dbg !5245
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gb, metadata !5246, metadata !1637), !dbg !5247
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !5248, metadata !1637), !dbg !5249
  store i32 0, i32* %i, align 4, !dbg !5250
  br label %for.cond, !dbg !5251

for.cond:                                         ; preds = %for.inc248, %entry
  %11 = load i32, i32* %i, align 4, !dbg !5252
  %12 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !5254
  %planes = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %12, i32 0, i32 5, !dbg !5255
  %13 = load i32, i32* %planes, align 8, !dbg !5255
  %cmp = icmp slt i32 %11, %13, !dbg !5256
  br i1 %cmp, label %for.body, label %for.end250, !dbg !5257

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %left, metadata !5258, metadata !1637), !dbg !5259
  call void @llvm.dbg.declare(metadata i32* %lefttop, metadata !5260, metadata !1637), !dbg !5261
  call void @llvm.dbg.declare(metadata i32* %top, metadata !5262, metadata !1637), !dbg !5263
  call void @llvm.dbg.declare(metadata i32* %height, metadata !5264, metadata !1637), !dbg !5265
  %14 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !5266
  %slice_height = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %14, i32 0, i32 3, !dbg !5267
  %15 = load i32, i32* %slice_height, align 8, !dbg !5267
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5268
  %coded_height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %16, i32 0, i32 23, !dbg !5269
  %17 = load i32, i32* %coded_height, align 8, !dbg !5269
  %18 = load i32, i32* %j.addr, align 4, !dbg !5270
  %19 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !5271
  %slice_height5 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %19, i32 0, i32 3, !dbg !5272
  %20 = load i32, i32* %slice_height5, align 8, !dbg !5272
  %mul = mul nsw i32 %18, %20, !dbg !5273
  %sub6 = sub nsw i32 %17, %mul, !dbg !5274
  %cmp7 = icmp sgt i32 %15, %sub6, !dbg !5275
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !5276

cond.true:                                        ; preds = %for.body
  %21 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5277
  %coded_height8 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %21, i32 0, i32 23, !dbg !5279
  %22 = load i32, i32* %coded_height8, align 8, !dbg !5279
  %23 = load i32, i32* %j.addr, align 4, !dbg !5280
  %24 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !5281
  %slice_height9 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %24, i32 0, i32 3, !dbg !5282
  %25 = load i32, i32* %slice_height9, align 8, !dbg !5282
  %mul10 = mul nsw i32 %23, %25, !dbg !5283
  %sub11 = sub nsw i32 %22, %mul10, !dbg !5284
  br label %cond.end, !dbg !5285

cond.false:                                       ; preds = %for.body
  %26 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !5286
  %slice_height12 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %26, i32 0, i32 3, !dbg !5288
  %27 = load i32, i32* %slice_height12, align 8, !dbg !5288
  br label %cond.end, !dbg !5289

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub11, %cond.true ], [ %27, %cond.false ], !dbg !5290
  %sub13 = sub nsw i32 0, %cond, !dbg !5292
  %28 = load i32, i32* %i, align 4, !dbg !5293
  %idxprom = sext i32 %28 to i64, !dbg !5294
  %29 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !5294
  %vshift = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %29, i32 0, i32 12, !dbg !5295
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %vshift, i64 0, i64 %idxprom, !dbg !5294
  %30 = load i32, i32* %arrayidx, align 4, !dbg !5294
  %shr = ashr i32 %sub13, %30, !dbg !5296
  %sub14 = sub nsw i32 0, %shr, !dbg !5297
  store i32 %sub14, i32* %height, align 4, !dbg !5298
  call void @llvm.dbg.declare(metadata i32* %width, metadata !5299, metadata !1637), !dbg !5300
  %31 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5301
  %coded_width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %31, i32 0, i32 22, !dbg !5302
  %32 = load i32, i32* %coded_width, align 4, !dbg !5302
  %sub15 = sub nsw i32 0, %32, !dbg !5303
  %33 = load i32, i32* %i, align 4, !dbg !5304
  %idxprom16 = sext i32 %33 to i64, !dbg !5305
  %34 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !5305
  %hshift = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %34, i32 0, i32 11, !dbg !5306
  %arrayidx17 = getelementptr inbounds [4 x i32], [4 x i32]* %hshift, i64 0, i64 %idxprom16, !dbg !5305
  %35 = load i32, i32* %arrayidx17, align 4, !dbg !5305
  %shr18 = ashr i32 %sub15, %35, !dbg !5307
  %sub19 = sub nsw i32 0, %shr18, !dbg !5308
  store i32 %sub19, i32* %width, align 4, !dbg !5300
  call void @llvm.dbg.declare(metadata i32* %sheight, metadata !5309, metadata !1637), !dbg !5310
  %36 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !5311
  %slice_height20 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %36, i32 0, i32 3, !dbg !5312
  %37 = load i32, i32* %slice_height20, align 8, !dbg !5312
  %sub21 = sub nsw i32 0, %37, !dbg !5313
  %38 = load i32, i32* %i, align 4, !dbg !5314
  %idxprom22 = sext i32 %38 to i64, !dbg !5315
  %39 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !5315
  %vshift23 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %39, i32 0, i32 12, !dbg !5316
  %arrayidx24 = getelementptr inbounds [4 x i32], [4 x i32]* %vshift23, i64 0, i64 %idxprom22, !dbg !5315
  %40 = load i32, i32* %arrayidx24, align 4, !dbg !5315
  %shr25 = ashr i32 %sub21, %40, !dbg !5317
  %sub26 = sub nsw i32 0, %shr25, !dbg !5318
  store i32 %sub26, i32* %sheight, align 4, !dbg !5310
  call void @llvm.dbg.declare(metadata i64* %fake_stride, metadata !5319, metadata !1637), !dbg !5320
  %41 = load i32, i32* %i, align 4, !dbg !5321
  %idxprom27 = sext i32 %41 to i64, !dbg !5322
  %42 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5322
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %42, i32 0, i32 1, !dbg !5323
  %arrayidx28 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 %idxprom27, !dbg !5322
  %43 = load i32, i32* %arrayidx28, align 4, !dbg !5322
  %div = sdiv i32 %43, 2, !dbg !5324
  %44 = load i32, i32* %interlaced, align 4, !dbg !5325
  %add = add nsw i32 1, %44, !dbg !5326
  %mul29 = mul nsw i32 %div, %add, !dbg !5327
  %conv = sext i32 %mul29 to i64, !dbg !5328
  store i64 %conv, i64* %fake_stride, align 8, !dbg !5320
  call void @llvm.dbg.declare(metadata i64* %stride, metadata !5329, metadata !1637), !dbg !5330
  %45 = load i32, i32* %i, align 4, !dbg !5331
  %idxprom30 = sext i32 %45 to i64, !dbg !5332
  %46 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5332
  %linesize31 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %46, i32 0, i32 1, !dbg !5333
  %arrayidx32 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize31, i64 0, i64 %idxprom30, !dbg !5332
  %47 = load i32, i32* %arrayidx32, align 4, !dbg !5332
  %div33 = sdiv i32 %47, 2, !dbg !5334
  %conv34 = sext i32 %div33 to i64, !dbg !5332
  store i64 %conv34, i64* %stride, align 8, !dbg !5330
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !5335, metadata !1637), !dbg !5336
  call void @llvm.dbg.declare(metadata i32* %pred, metadata !5337, metadata !1637), !dbg !5338
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5339, metadata !1637), !dbg !5340
  %48 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !5341
  %buf = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %48, i32 0, i32 10, !dbg !5342
  %49 = load i8*, i8** %buf, align 8, !dbg !5342
  %50 = load i32, i32* %j.addr, align 4, !dbg !5343
  %idxprom35 = sext i32 %50 to i64, !dbg !5344
  %51 = load i32, i32* %i, align 4, !dbg !5345
  %idxprom36 = sext i32 %51 to i64, !dbg !5344
  %52 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !5344
  %slices = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %52, i32 0, i32 13, !dbg !5346
  %arrayidx37 = getelementptr inbounds [4 x %struct.Slice*], [4 x %struct.Slice*]* %slices, i64 0, i64 %idxprom36, !dbg !5344
  %53 = load %struct.Slice*, %struct.Slice** %arrayidx37, align 8, !dbg !5344
  %arrayidx38 = getelementptr inbounds %struct.Slice, %struct.Slice* %53, i64 %idxprom35, !dbg !5344
  %start = getelementptr inbounds %struct.Slice, %struct.Slice* %arrayidx38, i32 0, i32 0, !dbg !5347
  %54 = load i32, i32* %start, align 4, !dbg !5347
  %idx.ext = zext i32 %54 to i64, !dbg !5348
  %add.ptr = getelementptr inbounds i8, i8* %49, i64 %idx.ext, !dbg !5348
  %55 = load i32, i32* %j.addr, align 4, !dbg !5349
  %idxprom39 = sext i32 %55 to i64, !dbg !5350
  %56 = load i32, i32* %i, align 4, !dbg !5351
  %idxprom40 = sext i32 %56 to i64, !dbg !5350
  %57 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !5350
  %slices41 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %57, i32 0, i32 13, !dbg !5352
  %arrayidx42 = getelementptr inbounds [4 x %struct.Slice*], [4 x %struct.Slice*]* %slices41, i64 0, i64 %idxprom40, !dbg !5350
  %58 = load %struct.Slice*, %struct.Slice** %arrayidx42, align 8, !dbg !5350
  %arrayidx43 = getelementptr inbounds %struct.Slice, %struct.Slice* %58, i64 %idxprom39, !dbg !5350
  %size = getelementptr inbounds %struct.Slice, %struct.Slice* %arrayidx43, i32 0, i32 1, !dbg !5353
  %59 = load i32, i32* %size, align 4, !dbg !5353
  %call = call i32 @init_get_bits8(%struct.GetBitContext* %gb, i8* %add.ptr, i32 %59), !dbg !5354
  store i32 %call, i32* %ret, align 4, !dbg !5340
  %60 = load i32, i32* %ret, align 4, !dbg !5355
  %cmp44 = icmp slt i32 %60, 0, !dbg !5357
  br i1 %cmp44, label %if.then, label %if.end, !dbg !5358

if.then:                                          ; preds = %cond.end
  %61 = load i32, i32* %ret, align 4, !dbg !5359
  store i32 %61, i32* %retval, align 4, !dbg !5360
  br label %return, !dbg !5360

if.end:                                           ; preds = %cond.end
  %call46 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 8), !dbg !5361
  store i32 %call46, i32* %flags, align 4, !dbg !5362
  %call47 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 8), !dbg !5363
  store i32 %call47, i32* %pred, align 4, !dbg !5364
  %62 = load i32, i32* %i, align 4, !dbg !5365
  %idxprom48 = sext i32 %62 to i64, !dbg !5366
  %63 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5366
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %63, i32 0, i32 0, !dbg !5367
  %arrayidx49 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 %idxprom48, !dbg !5366
  %64 = load i8*, i8** %arrayidx49, align 8, !dbg !5366
  %65 = bitcast i8* %64 to i16*, !dbg !5368
  %66 = load i32, i32* %j.addr, align 4, !dbg !5369
  %67 = load i32, i32* %sheight, align 4, !dbg !5370
  %mul50 = mul nsw i32 %66, %67, !dbg !5371
  %conv51 = sext i32 %mul50 to i64, !dbg !5369
  %68 = load i64, i64* %stride, align 8, !dbg !5372
  %mul52 = mul nsw i64 %conv51, %68, !dbg !5373
  %add.ptr53 = getelementptr inbounds i16, i16* %65, i64 %mul52, !dbg !5374
  store i16* %add.ptr53, i16** %dst, align 8, !dbg !5375
  %69 = load i32, i32* %flags, align 4, !dbg !5376
  %and = and i32 %69, 1, !dbg !5377
  %tobool = icmp ne i32 %and, 0, !dbg !5377
  br i1 %tobool, label %if.then54, label %if.else, !dbg !5378

if.then54:                                        ; preds = %if.end
  %call55 = call i32 @get_bits_left(%struct.GetBitContext* %gb), !dbg !5379
  %70 = load i32, i32* %bps, align 4, !dbg !5382
  %71 = load i32, i32* %width, align 4, !dbg !5383
  %mul56 = mul nsw i32 %70, %71, !dbg !5384
  %72 = load i32, i32* %height, align 4, !dbg !5385
  %mul57 = mul nsw i32 %mul56, %72, !dbg !5386
  %cmp58 = icmp slt i32 %call55, %mul57, !dbg !5387
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !5388

if.then60:                                        ; preds = %if.then54
  store i32 -1094995529, i32* %retval, align 4, !dbg !5389
  br label %return, !dbg !5389

if.end61:                                         ; preds = %if.then54
  store i32 0, i32* %k, align 4, !dbg !5390
  br label %for.cond62, !dbg !5392

for.cond62:                                       ; preds = %for.inc75, %if.end61
  %73 = load i32, i32* %k, align 4, !dbg !5393
  %74 = load i32, i32* %height, align 4, !dbg !5396
  %cmp63 = icmp slt i32 %73, %74, !dbg !5397
  br i1 %cmp63, label %for.body65, label %for.end77, !dbg !5398

for.body65:                                       ; preds = %for.cond62
  store i32 0, i32* %x, align 4, !dbg !5399
  br label %for.cond66, !dbg !5402

for.cond66:                                       ; preds = %for.inc, %for.body65
  %75 = load i32, i32* %x, align 4, !dbg !5403
  %76 = load i32, i32* %width, align 4, !dbg !5406
  %cmp67 = icmp slt i32 %75, %76, !dbg !5407
  br i1 %cmp67, label %for.body69, label %for.end, !dbg !5408

for.body69:                                       ; preds = %for.cond66
  %77 = load i32, i32* %bps, align 4, !dbg !5409
  %call70 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 %77), !dbg !5410
  %conv71 = trunc i32 %call70 to i16, !dbg !5410
  %78 = load i32, i32* %x, align 4, !dbg !5411
  %idxprom72 = sext i32 %78 to i64, !dbg !5412
  %79 = load i16*, i16** %dst, align 8, !dbg !5412
  %arrayidx73 = getelementptr inbounds i16, i16* %79, i64 %idxprom72, !dbg !5412
  store i16 %conv71, i16* %arrayidx73, align 2, !dbg !5413
  br label %for.inc, !dbg !5412

for.inc:                                          ; preds = %for.body69
  %80 = load i32, i32* %x, align 4, !dbg !5414
  %inc = add nsw i32 %80, 1, !dbg !5414
  store i32 %inc, i32* %x, align 4, !dbg !5414
  br label %for.cond66, !dbg !5416, !llvm.loop !5417

for.end:                                          ; preds = %for.cond66
  %81 = load i64, i64* %stride, align 8, !dbg !5419
  %82 = load i16*, i16** %dst, align 8, !dbg !5420
  %add.ptr74 = getelementptr inbounds i16, i16* %82, i64 %81, !dbg !5420
  store i16* %add.ptr74, i16** %dst, align 8, !dbg !5420
  br label %for.inc75, !dbg !5421

for.inc75:                                        ; preds = %for.end
  %83 = load i32, i32* %k, align 4, !dbg !5422
  %inc76 = add nsw i32 %83, 1, !dbg !5422
  store i32 %inc76, i32* %k, align 4, !dbg !5422
  br label %for.cond62, !dbg !5424, !llvm.loop !5425

for.end77:                                        ; preds = %for.cond62
  br label %if.end112, !dbg !5427

if.else:                                          ; preds = %if.end
  store i32 0, i32* %k, align 4, !dbg !5428
  br label %for.cond78, !dbg !5429

for.cond78:                                       ; preds = %for.inc109, %if.else
  %84 = load i32, i32* %k, align 4, !dbg !5430
  %85 = load i32, i32* %height, align 4, !dbg !5432
  %cmp79 = icmp slt i32 %84, %85, !dbg !5433
  br i1 %cmp79, label %for.body81, label %for.end111, !dbg !5434

for.body81:                                       ; preds = %for.cond78
  store i32 0, i32* %x, align 4, !dbg !5435
  br label %for.cond82, !dbg !5436

for.cond82:                                       ; preds = %for.inc105, %for.body81
  %86 = load i32, i32* %x, align 4, !dbg !5437
  %87 = load i32, i32* %width, align 4, !dbg !5439
  %cmp83 = icmp slt i32 %86, %87, !dbg !5440
  br i1 %cmp83, label %for.body85, label %for.end107, !dbg !5441

for.body85:                                       ; preds = %for.cond82
  call void @llvm.dbg.declare(metadata i32* %pix, metadata !5442, metadata !1637), !dbg !5443
  %call86 = call i32 @get_bits_left(%struct.GetBitContext* %gb), !dbg !5444
  %cmp87 = icmp sle i32 %call86, 0, !dbg !5446
  br i1 %cmp87, label %if.then89, label %if.end90, !dbg !5447

if.then89:                                        ; preds = %for.body85
  store i32 -1094995529, i32* %retval, align 4, !dbg !5448
  br label %return, !dbg !5448

if.end90:                                         ; preds = %for.body85
  %88 = load i32, i32* %i, align 4, !dbg !5449
  %idxprom91 = sext i32 %88 to i64, !dbg !5450
  %89 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !5450
  %vlc = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %89, i32 0, i32 16, !dbg !5451
  %arrayidx92 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* %vlc, i64 0, i64 %idxprom91, !dbg !5450
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx92, i32 0, i32 1, !dbg !5452
  %90 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !5452
  %91 = load i32, i32* %i, align 4, !dbg !5453
  %idxprom93 = sext i32 %91 to i64, !dbg !5454
  %92 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !5454
  %vlc94 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %92, i32 0, i32 16, !dbg !5455
  %arrayidx95 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* %vlc94, i64 0, i64 %idxprom93, !dbg !5454
  %bits = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx95, i32 0, i32 0, !dbg !5456
  %93 = load i32, i32* %bits, align 8, !dbg !5456
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5457
  store [2 x i16]* %90, [2 x i16]** %table.addr.i, align 8, !dbg !5457
  store i32 %93, i32* %bits.addr.i, align 4, !dbg !5457
  store i32 3, i32* %max_depth.addr.i, align 4, !dbg !5457
  %94 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5458
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %94, i32 0, i32 2, !dbg !5459
  %95 = load i32, i32* %index.i, align 8, !dbg !5459
  store i32 %95, i32* %re_index.i, align 4, !dbg !5205
  %96 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5460
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %96, i32 0, i32 4, !dbg !5461
  %97 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !5461
  store i32 %97, i32* %re_size_plus8.i, align 4, !dbg !5207
  %98 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5462
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %98, i32 0, i32 0, !dbg !5463
  %99 = load i8*, i8** %buffer.i, align 8, !dbg !5463
  %100 = load i32, i32* %re_index.i, align 4, !dbg !5464
  %shr.i = lshr i32 %100, 3, !dbg !5465
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !5466
  %add.ptr.i = getelementptr inbounds i8, i8* %99, i64 %idx.ext.i, !dbg !5466
  %101 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !5467
  %l.i = bitcast %union.unaligned_32* %101 to i32*, !dbg !5467
  %102 = load i32, i32* %l.i, align 1, !dbg !5467
  store i32 %102, i32* %x.addr.i.i, align 4, !dbg !5468
  %103 = load i32, i32* %x.addr.i.i, align 4, !dbg !5469
  %shl.i.i = shl i32 %103, 8, !dbg !5470
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !5471
  %104 = load i32, i32* %x.addr.i.i, align 4, !dbg !5472
  %shr.i.i = lshr i32 %104, 8, !dbg !5473
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !5474
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !5475
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !5476
  %105 = load i32, i32* %x.addr.i.i, align 4, !dbg !5477
  %shr3.i.i = lshr i32 %105, 16, !dbg !5478
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !5479
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !5480
  %106 = load i32, i32* %x.addr.i.i, align 4, !dbg !5481
  %shr6.i.i = lshr i32 %106, 16, !dbg !5482
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !5483
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !5484
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !5485
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !5486
  %107 = load i32, i32* %re_index.i, align 4, !dbg !5487
  %and.i = and i32 %107, 7, !dbg !5488
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !5489
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !5490
  %108 = load i32, i32* %re_cache.i, align 4, !dbg !5491
  %109 = load i32, i32* %bits.addr.i, align 4, !dbg !5492
  %conv.i = trunc i32 %109 to i8, !dbg !5492
  %call2.i = call i32 @NEG_USR32(i32 %108, i8 signext %conv.i) #8, !dbg !5493
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !5494
  %110 = load i32, i32* %index1.i, align 4, !dbg !5495
  %idxprom.i = zext i32 %110 to i64, !dbg !5496
  %111 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !5496
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %111, i64 %idxprom.i, !dbg !5496
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !5496
  %112 = load i16, i16* %arrayidx3.i, align 2, !dbg !5496
  %conv4.i = sext i16 %112 to i32, !dbg !5496
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !5497
  %113 = load i32, i32* %index1.i, align 4, !dbg !5498
  %idxprom5.i = zext i32 %113 to i64, !dbg !5499
  %114 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !5499
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %114, i64 %idxprom5.i, !dbg !5499
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !5499
  %115 = load i16, i16* %arrayidx7.i, align 2, !dbg !5499
  %conv8.i = sext i16 %115 to i32, !dbg !5499
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !5500
  %116 = load i32, i32* %max_depth.addr.i, align 4, !dbg !5501
  %cmp.i = icmp sgt i32 %116, 1, !dbg !5502
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !5503

land.lhs.true.i:                                  ; preds = %if.end90
  %117 = load i32, i32* %n.i, align 4, !dbg !5504
  %cmp10.i = icmp slt i32 %117, 0, !dbg !5505
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !5506

if.then.i:                                        ; preds = %land.lhs.true.i
  %118 = load i32, i32* %re_size_plus8.i, align 4, !dbg !5507
  %119 = load i32, i32* %re_index.i, align 4, !dbg !5508
  %120 = load i32, i32* %bits.addr.i, align 4, !dbg !5509
  %add.i = add i32 %119, %120, !dbg !5510
  %cmp12.i = icmp ugt i32 %118, %add.i, !dbg !5511
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !5512

cond.true.i:                                      ; preds = %if.then.i
  %121 = load i32, i32* %re_index.i, align 4, !dbg !5513
  %122 = load i32, i32* %bits.addr.i, align 4, !dbg !5514
  %add14.i = add i32 %121, %122, !dbg !5515
  br label %cond.end.i, !dbg !5516

cond.false.i:                                     ; preds = %if.then.i
  %123 = load i32, i32* %re_size_plus8.i, align 4, !dbg !5517
  br label %cond.end.i, !dbg !5518

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %123, %cond.false.i ], !dbg !5519
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !5520
  %124 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5521
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %124, i32 0, i32 0, !dbg !5522
  %125 = load i8*, i8** %buffer15.i, align 8, !dbg !5522
  %126 = load i32, i32* %re_index.i, align 4, !dbg !5523
  %shr16.i = lshr i32 %126, 3, !dbg !5524
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !5525
  %add.ptr18.i = getelementptr inbounds i8, i8* %125, i64 %idx.ext17.i, !dbg !5525
  %127 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !5526
  %l19.i = bitcast %union.unaligned_32* %127 to i32*, !dbg !5526
  %128 = load i32, i32* %l19.i, align 1, !dbg !5526
  store i32 %128, i32* %x.addr.i81.i, align 4, !dbg !5527
  %129 = load i32, i32* %x.addr.i81.i, align 4, !dbg !5528
  %shl.i82.i = shl i32 %129, 8, !dbg !5529
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !5530
  %130 = load i32, i32* %x.addr.i81.i, align 4, !dbg !5531
  %shr.i84.i = lshr i32 %130, 8, !dbg !5532
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !5533
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !5534
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !5535
  %131 = load i32, i32* %x.addr.i81.i, align 4, !dbg !5536
  %shr3.i88.i = lshr i32 %131, 16, !dbg !5537
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !5538
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !5539
  %132 = load i32, i32* %x.addr.i81.i, align 4, !dbg !5540
  %shr6.i91.i = lshr i32 %132, 16, !dbg !5541
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !5542
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !5543
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !5544
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !5545
  %133 = load i32, i32* %re_index.i, align 4, !dbg !5546
  %and21.i = and i32 %133, 7, !dbg !5547
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !5548
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !5549
  %134 = load i32, i32* %n.i, align 4, !dbg !5550
  %sub.i = sub nsw i32 0, %134, !dbg !5551
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !5552
  %135 = load i32, i32* %re_cache.i, align 4, !dbg !5553
  %136 = load i32, i32* %nb_bits.i, align 4, !dbg !5554
  %conv23.i = trunc i32 %136 to i8, !dbg !5554
  %call24.i = call i32 @NEG_USR32(i32 %135, i8 signext %conv23.i) #8, !dbg !5555
  %137 = load i32, i32* %code.i, align 4, !dbg !5556
  %add25.i = add i32 %call24.i, %137, !dbg !5557
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !5558
  %138 = load i32, i32* %index1.i, align 4, !dbg !5559
  %idxprom26.i = zext i32 %138 to i64, !dbg !5560
  %139 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !5560
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %139, i64 %idxprom26.i, !dbg !5560
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !5560
  %140 = load i16, i16* %arrayidx28.i, align 2, !dbg !5560
  %conv29.i = sext i16 %140 to i32, !dbg !5560
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !5561
  %141 = load i32, i32* %index1.i, align 4, !dbg !5562
  %idxprom30.i = zext i32 %141 to i64, !dbg !5563
  %142 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !5563
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %142, i64 %idxprom30.i, !dbg !5563
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !5563
  %143 = load i16, i16* %arrayidx32.i, align 2, !dbg !5563
  %conv33.i = sext i16 %143 to i32, !dbg !5563
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !5564
  %144 = load i32, i32* %max_depth.addr.i, align 4, !dbg !5565
  %cmp34.i = icmp sgt i32 %144, 2, !dbg !5566
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !5567

land.lhs.true36.i:                                ; preds = %cond.end.i
  %145 = load i32, i32* %n.i, align 4, !dbg !5568
  %cmp37.i = icmp slt i32 %145, 0, !dbg !5569
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !5570

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %146 = load i32, i32* %re_size_plus8.i, align 4, !dbg !5571
  %147 = load i32, i32* %re_index.i, align 4, !dbg !5572
  %148 = load i32, i32* %nb_bits.i, align 4, !dbg !5573
  %add40.i = add i32 %147, %148, !dbg !5574
  %cmp41.i = icmp ugt i32 %146, %add40.i, !dbg !5575
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !5576

cond.true43.i:                                    ; preds = %if.then39.i
  %149 = load i32, i32* %re_index.i, align 4, !dbg !5577
  %150 = load i32, i32* %nb_bits.i, align 4, !dbg !5578
  %add44.i = add i32 %149, %150, !dbg !5579
  br label %cond.end46.i, !dbg !5580

cond.false45.i:                                   ; preds = %if.then39.i
  %151 = load i32, i32* %re_size_plus8.i, align 4, !dbg !5581
  br label %cond.end46.i, !dbg !5582

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %151, %cond.false45.i ], !dbg !5583
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !5584
  %152 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5585
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %152, i32 0, i32 0, !dbg !5586
  %153 = load i8*, i8** %buffer48.i, align 8, !dbg !5586
  %154 = load i32, i32* %re_index.i, align 4, !dbg !5587
  %shr49.i = lshr i32 %154, 3, !dbg !5588
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !5589
  %add.ptr51.i = getelementptr inbounds i8, i8* %153, i64 %idx.ext50.i, !dbg !5589
  %155 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !5590
  %l52.i = bitcast %union.unaligned_32* %155 to i32*, !dbg !5590
  %156 = load i32, i32* %l52.i, align 1, !dbg !5590
  store i32 %156, i32* %x.addr.i96.i, align 4, !dbg !5591
  %157 = load i32, i32* %x.addr.i96.i, align 4, !dbg !5592
  %shl.i97.i = shl i32 %157, 8, !dbg !5593
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !5594
  %158 = load i32, i32* %x.addr.i96.i, align 4, !dbg !5595
  %shr.i99.i = lshr i32 %158, 8, !dbg !5596
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !5597
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !5598
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !5599
  %159 = load i32, i32* %x.addr.i96.i, align 4, !dbg !5600
  %shr3.i103.i = lshr i32 %159, 16, !dbg !5601
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !5602
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !5603
  %160 = load i32, i32* %x.addr.i96.i, align 4, !dbg !5604
  %shr6.i106.i = lshr i32 %160, 16, !dbg !5605
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !5606
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !5607
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !5608
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !5609
  %161 = load i32, i32* %re_index.i, align 4, !dbg !5610
  %and54.i = and i32 %161, 7, !dbg !5611
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !5612
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !5613
  %162 = load i32, i32* %n.i, align 4, !dbg !5614
  %sub56.i = sub nsw i32 0, %162, !dbg !5615
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !5616
  %163 = load i32, i32* %re_cache.i, align 4, !dbg !5617
  %164 = load i32, i32* %nb_bits.i, align 4, !dbg !5618
  %conv57.i = trunc i32 %164 to i8, !dbg !5618
  %call58.i = call i32 @NEG_USR32(i32 %163, i8 signext %conv57.i) #8, !dbg !5619
  %165 = load i32, i32* %code.i, align 4, !dbg !5620
  %add59.i = add i32 %call58.i, %165, !dbg !5621
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !5622
  %166 = load i32, i32* %index1.i, align 4, !dbg !5623
  %idxprom60.i = zext i32 %166 to i64, !dbg !5624
  %167 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !5624
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %167, i64 %idxprom60.i, !dbg !5624
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !5624
  %168 = load i16, i16* %arrayidx62.i, align 2, !dbg !5624
  %conv63.i = sext i16 %168 to i32, !dbg !5624
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !5625
  %169 = load i32, i32* %index1.i, align 4, !dbg !5626
  %idxprom64.i = zext i32 %169 to i64, !dbg !5627
  %170 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !5627
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %170, i64 %idxprom64.i, !dbg !5627
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !5627
  %171 = load i16, i16* %arrayidx66.i, align 2, !dbg !5627
  %conv67.i = sext i16 %171 to i32, !dbg !5627
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !5628
  br label %if.end.i, !dbg !5629

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !5630

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %if.end90
  %172 = load i32, i32* %n.i, align 4, !dbg !5631
  %173 = load i32, i32* %re_cache.i, align 4, !dbg !5632
  %shl70.i = shl i32 %173, %172, !dbg !5632
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !5632
  %174 = load i32, i32* %re_size_plus8.i, align 4, !dbg !5633
  %175 = load i32, i32* %re_index.i, align 4, !dbg !5634
  %176 = load i32, i32* %n.i, align 4, !dbg !5635
  %add71.i = add i32 %175, %176, !dbg !5636
  %cmp72.i = icmp ugt i32 %174, %add71.i, !dbg !5637
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !5638

cond.true74.i:                                    ; preds = %if.end68.i
  %177 = load i32, i32* %re_index.i, align 4, !dbg !5639
  %178 = load i32, i32* %n.i, align 4, !dbg !5640
  %add75.i = add i32 %177, %178, !dbg !5641
  br label %get_vlc2.exit, !dbg !5642

cond.false76.i:                                   ; preds = %if.end68.i
  %179 = load i32, i32* %re_size_plus8.i, align 4, !dbg !5643
  br label %get_vlc2.exit, !dbg !5644

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %179, %cond.false76.i ], !dbg !5645
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !5646
  %180 = load i32, i32* %re_index.i, align 4, !dbg !5647
  %181 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5648
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %181, i32 0, i32 2, !dbg !5649
  store i32 %180, i32* %index80.i, align 8, !dbg !5650
  %182 = load i32, i32* %code.i, align 4, !dbg !5651
  store i32 %182, i32* %pix, align 4, !dbg !5652
  %183 = load i32, i32* %pix, align 4, !dbg !5653
  %cmp97 = icmp slt i32 %183, 0, !dbg !5655
  br i1 %cmp97, label %if.then99, label %if.end100, !dbg !5656

if.then99:                                        ; preds = %get_vlc2.exit
  store i32 -1094995529, i32* %retval, align 4, !dbg !5657
  br label %return, !dbg !5657

if.end100:                                        ; preds = %get_vlc2.exit
  %184 = load i32, i32* %max, align 4, !dbg !5658
  %185 = load i32, i32* %pix, align 4, !dbg !5659
  %sub101 = sub nsw i32 %184, %185, !dbg !5660
  %conv102 = trunc i32 %sub101 to i16, !dbg !5658
  %186 = load i32, i32* %x, align 4, !dbg !5661
  %idxprom103 = sext i32 %186 to i64, !dbg !5662
  %187 = load i16*, i16** %dst, align 8, !dbg !5662
  %arrayidx104 = getelementptr inbounds i16, i16* %187, i64 %idxprom103, !dbg !5662
  store i16 %conv102, i16* %arrayidx104, align 2, !dbg !5663
  br label %for.inc105, !dbg !5664

for.inc105:                                       ; preds = %if.end100
  %188 = load i32, i32* %x, align 4, !dbg !5665
  %inc106 = add nsw i32 %188, 1, !dbg !5665
  store i32 %inc106, i32* %x, align 4, !dbg !5665
  br label %for.cond82, !dbg !5667, !llvm.loop !5668

for.end107:                                       ; preds = %for.cond82
  %189 = load i64, i64* %stride, align 8, !dbg !5670
  %190 = load i16*, i16** %dst, align 8, !dbg !5671
  %add.ptr108 = getelementptr inbounds i16, i16* %190, i64 %189, !dbg !5671
  store i16* %add.ptr108, i16** %dst, align 8, !dbg !5671
  br label %for.inc109, !dbg !5672

for.inc109:                                       ; preds = %for.end107
  %191 = load i32, i32* %k, align 4, !dbg !5673
  %inc110 = add nsw i32 %191, 1, !dbg !5673
  store i32 %inc110, i32* %k, align 4, !dbg !5673
  br label %for.cond78, !dbg !5675, !llvm.loop !5676

for.end111:                                       ; preds = %for.cond78
  br label %if.end112

if.end112:                                        ; preds = %for.end111, %for.end77
  %192 = load i32, i32* %pred, align 4, !dbg !5678
  switch i32 %192, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb147
    i32 3, label %sw.bb212
  ], !dbg !5679

sw.bb:                                            ; preds = %if.end112
  %193 = load i32, i32* %i, align 4, !dbg !5680
  %idxprom113 = sext i32 %193 to i64, !dbg !5682
  %194 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5682
  %data114 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %194, i32 0, i32 0, !dbg !5683
  %arrayidx115 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data114, i64 0, i64 %idxprom113, !dbg !5682
  %195 = load i8*, i8** %arrayidx115, align 8, !dbg !5682
  %196 = bitcast i8* %195 to i16*, !dbg !5684
  %197 = load i32, i32* %j.addr, align 4, !dbg !5685
  %198 = load i32, i32* %sheight, align 4, !dbg !5686
  %mul116 = mul nsw i32 %197, %198, !dbg !5687
  %conv117 = sext i32 %mul116 to i64, !dbg !5685
  %199 = load i64, i64* %stride, align 8, !dbg !5688
  %mul118 = mul nsw i64 %conv117, %199, !dbg !5689
  %add.ptr119 = getelementptr inbounds i16, i16* %196, i64 %mul118, !dbg !5690
  store i16* %add.ptr119, i16** %dst, align 8, !dbg !5691
  %200 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !5692
  %llviddsp = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %200, i32 0, i32 19, !dbg !5693
  %add_left_pred_int16 = getelementptr inbounds %struct.LLVidDSPContext, %struct.LLVidDSPContext* %llviddsp, i32 0, i32 3, !dbg !5694
  %201 = load i32 (i16*, i16*, i32, i64, i32)*, i32 (i16*, i16*, i32, i64, i32)** %add_left_pred_int16, align 8, !dbg !5694
  %202 = load i16*, i16** %dst, align 8, !dbg !5695
  %203 = load i16*, i16** %dst, align 8, !dbg !5696
  %204 = load i32, i32* %max, align 4, !dbg !5697
  %205 = load i32, i32* %width, align 4, !dbg !5698
  %conv120 = sext i32 %205 to i64, !dbg !5698
  %call121 = call i32 %201(i16* %202, i16* %203, i32 %204, i64 %conv120, i32 0), !dbg !5692
  %206 = load i64, i64* %stride, align 8, !dbg !5699
  %207 = load i16*, i16** %dst, align 8, !dbg !5700
  %add.ptr122 = getelementptr inbounds i16, i16* %207, i64 %206, !dbg !5700
  store i16* %add.ptr122, i16** %dst, align 8, !dbg !5700
  %208 = load i32, i32* %interlaced, align 4, !dbg !5701
  %tobool123 = icmp ne i32 %208, 0, !dbg !5701
  br i1 %tobool123, label %if.then124, label %if.end130, !dbg !5703

if.then124:                                       ; preds = %sw.bb
  %209 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !5704
  %llviddsp125 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %209, i32 0, i32 19, !dbg !5706
  %add_left_pred_int16126 = getelementptr inbounds %struct.LLVidDSPContext, %struct.LLVidDSPContext* %llviddsp125, i32 0, i32 3, !dbg !5707
  %210 = load i32 (i16*, i16*, i32, i64, i32)*, i32 (i16*, i16*, i32, i64, i32)** %add_left_pred_int16126, align 8, !dbg !5707
  %211 = load i16*, i16** %dst, align 8, !dbg !5708
  %212 = load i16*, i16** %dst, align 8, !dbg !5709
  %213 = load i32, i32* %max, align 4, !dbg !5710
  %214 = load i32, i32* %width, align 4, !dbg !5711
  %conv127 = sext i32 %214 to i64, !dbg !5711
  %call128 = call i32 %210(i16* %211, i16* %212, i32 %213, i64 %conv127, i32 0), !dbg !5704
  %215 = load i64, i64* %stride, align 8, !dbg !5712
  %216 = load i16*, i16** %dst, align 8, !dbg !5713
  %add.ptr129 = getelementptr inbounds i16, i16* %216, i64 %215, !dbg !5713
  store i16* %add.ptr129, i16** %dst, align 8, !dbg !5713
  br label %if.end130, !dbg !5714

if.end130:                                        ; preds = %if.then124, %sw.bb
  %217 = load i32, i32* %interlaced, align 4, !dbg !5715
  %add131 = add nsw i32 1, %217, !dbg !5717
  store i32 %add131, i32* %k, align 4, !dbg !5718
  br label %for.cond132, !dbg !5719

for.cond132:                                      ; preds = %for.inc144, %if.end130
  %218 = load i32, i32* %k, align 4, !dbg !5720
  %219 = load i32, i32* %height, align 4, !dbg !5723
  %cmp133 = icmp slt i32 %218, %219, !dbg !5724
  br i1 %cmp133, label %for.body135, label %for.end146, !dbg !5725

for.body135:                                      ; preds = %for.cond132
  %220 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !5726
  %llviddsp136 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %220, i32 0, i32 19, !dbg !5728
  %add_left_pred_int16137 = getelementptr inbounds %struct.LLVidDSPContext, %struct.LLVidDSPContext* %llviddsp136, i32 0, i32 3, !dbg !5729
  %221 = load i32 (i16*, i16*, i32, i64, i32)*, i32 (i16*, i16*, i32, i64, i32)** %add_left_pred_int16137, align 8, !dbg !5729
  %222 = load i16*, i16** %dst, align 8, !dbg !5730
  %223 = load i16*, i16** %dst, align 8, !dbg !5731
  %224 = load i32, i32* %max, align 4, !dbg !5732
  %225 = load i32, i32* %width, align 4, !dbg !5733
  %conv138 = sext i32 %225 to i64, !dbg !5733
  %226 = load i64, i64* %fake_stride, align 8, !dbg !5734
  %sub139 = sub nsw i64 0, %226, !dbg !5735
  %227 = load i16*, i16** %dst, align 8, !dbg !5736
  %arrayidx140 = getelementptr inbounds i16, i16* %227, i64 %sub139, !dbg !5736
  %228 = load i16, i16* %arrayidx140, align 2, !dbg !5736
  %conv141 = zext i16 %228 to i32, !dbg !5736
  %call142 = call i32 %221(i16* %222, i16* %223, i32 %224, i64 %conv138, i32 %conv141), !dbg !5726
  %229 = load i64, i64* %stride, align 8, !dbg !5737
  %230 = load i16*, i16** %dst, align 8, !dbg !5738
  %add.ptr143 = getelementptr inbounds i16, i16* %230, i64 %229, !dbg !5738
  store i16* %add.ptr143, i16** %dst, align 8, !dbg !5738
  br label %for.inc144, !dbg !5739

for.inc144:                                       ; preds = %for.body135
  %231 = load i32, i32* %k, align 4, !dbg !5740
  %inc145 = add nsw i32 %231, 1, !dbg !5740
  store i32 %inc145, i32* %k, align 4, !dbg !5740
  br label %for.cond132, !dbg !5742, !llvm.loop !5743

for.end146:                                       ; preds = %for.cond132
  br label %sw.epilog, !dbg !5745

sw.bb147:                                         ; preds = %if.end112
  %232 = load i32, i32* %i, align 4, !dbg !5746
  %idxprom148 = sext i32 %232 to i64, !dbg !5747
  %233 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5747
  %data149 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %233, i32 0, i32 0, !dbg !5748
  %arrayidx150 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data149, i64 0, i64 %idxprom148, !dbg !5747
  %234 = load i8*, i8** %arrayidx150, align 8, !dbg !5747
  %235 = bitcast i8* %234 to i16*, !dbg !5749
  %236 = load i32, i32* %j.addr, align 4, !dbg !5750
  %237 = load i32, i32* %sheight, align 4, !dbg !5751
  %mul151 = mul nsw i32 %236, %237, !dbg !5752
  %conv152 = sext i32 %mul151 to i64, !dbg !5750
  %238 = load i64, i64* %stride, align 8, !dbg !5753
  %mul153 = mul nsw i64 %conv152, %238, !dbg !5754
  %add.ptr154 = getelementptr inbounds i16, i16* %235, i64 %mul153, !dbg !5755
  store i16* %add.ptr154, i16** %dst, align 8, !dbg !5756
  %239 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !5757
  %llviddsp155 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %239, i32 0, i32 19, !dbg !5758
  %add_left_pred_int16156 = getelementptr inbounds %struct.LLVidDSPContext, %struct.LLVidDSPContext* %llviddsp155, i32 0, i32 3, !dbg !5759
  %240 = load i32 (i16*, i16*, i32, i64, i32)*, i32 (i16*, i16*, i32, i64, i32)** %add_left_pred_int16156, align 8, !dbg !5759
  %241 = load i16*, i16** %dst, align 8, !dbg !5760
  %242 = load i16*, i16** %dst, align 8, !dbg !5761
  %243 = load i32, i32* %max, align 4, !dbg !5762
  %244 = load i32, i32* %width, align 4, !dbg !5763
  %conv157 = sext i32 %244 to i64, !dbg !5763
  %call158 = call i32 %240(i16* %241, i16* %242, i32 %243, i64 %conv157, i32 0), !dbg !5757
  %245 = load i64, i64* %stride, align 8, !dbg !5764
  %246 = load i16*, i16** %dst, align 8, !dbg !5765
  %add.ptr159 = getelementptr inbounds i16, i16* %246, i64 %245, !dbg !5765
  store i16* %add.ptr159, i16** %dst, align 8, !dbg !5765
  %247 = load i32, i32* %interlaced, align 4, !dbg !5766
  %tobool160 = icmp ne i32 %247, 0, !dbg !5766
  br i1 %tobool160, label %if.then161, label %if.end167, !dbg !5768

if.then161:                                       ; preds = %sw.bb147
  %248 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !5769
  %llviddsp162 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %248, i32 0, i32 19, !dbg !5771
  %add_left_pred_int16163 = getelementptr inbounds %struct.LLVidDSPContext, %struct.LLVidDSPContext* %llviddsp162, i32 0, i32 3, !dbg !5772
  %249 = load i32 (i16*, i16*, i32, i64, i32)*, i32 (i16*, i16*, i32, i64, i32)** %add_left_pred_int16163, align 8, !dbg !5772
  %250 = load i16*, i16** %dst, align 8, !dbg !5773
  %251 = load i16*, i16** %dst, align 8, !dbg !5774
  %252 = load i32, i32* %max, align 4, !dbg !5775
  %253 = load i32, i32* %width, align 4, !dbg !5776
  %conv164 = sext i32 %253 to i64, !dbg !5776
  %call165 = call i32 %249(i16* %250, i16* %251, i32 %252, i64 %conv164, i32 0), !dbg !5769
  %254 = load i64, i64* %stride, align 8, !dbg !5777
  %255 = load i16*, i16** %dst, align 8, !dbg !5778
  %add.ptr166 = getelementptr inbounds i16, i16* %255, i64 %254, !dbg !5778
  store i16* %add.ptr166, i16** %dst, align 8, !dbg !5778
  br label %if.end167, !dbg !5779

if.end167:                                        ; preds = %if.then161, %sw.bb147
  %256 = load i32, i32* %interlaced, align 4, !dbg !5780
  %add168 = add nsw i32 1, %256, !dbg !5782
  store i32 %add168, i32* %k, align 4, !dbg !5783
  br label %for.cond169, !dbg !5784

for.cond169:                                      ; preds = %for.inc209, %if.end167
  %257 = load i32, i32* %k, align 4, !dbg !5785
  %258 = load i32, i32* %height, align 4, !dbg !5788
  %cmp170 = icmp slt i32 %257, %258, !dbg !5789
  br i1 %cmp170, label %for.body172, label %for.end211, !dbg !5790

for.body172:                                      ; preds = %for.cond169
  %259 = load i64, i64* %fake_stride, align 8, !dbg !5791
  %sub173 = sub nsw i64 0, %259, !dbg !5793
  %260 = load i16*, i16** %dst, align 8, !dbg !5794
  %arrayidx174 = getelementptr inbounds i16, i16* %260, i64 %sub173, !dbg !5794
  %261 = load i16, i16* %arrayidx174, align 2, !dbg !5794
  %conv175 = zext i16 %261 to i32, !dbg !5794
  store i32 %conv175, i32* %top, align 4, !dbg !5795
  %262 = load i32, i32* %top, align 4, !dbg !5796
  %263 = load i16*, i16** %dst, align 8, !dbg !5797
  %arrayidx176 = getelementptr inbounds i16, i16* %263, i64 0, !dbg !5797
  %264 = load i16, i16* %arrayidx176, align 2, !dbg !5797
  %conv177 = zext i16 %264 to i32, !dbg !5797
  %add178 = add nsw i32 %262, %conv177, !dbg !5798
  store i32 %add178, i32* %left, align 4, !dbg !5799
  %265 = load i32, i32* %left, align 4, !dbg !5800
  %266 = load i32, i32* %max, align 4, !dbg !5801
  %and179 = and i32 %265, %266, !dbg !5802
  %conv180 = trunc i32 %and179 to i16, !dbg !5800
  %267 = load i16*, i16** %dst, align 8, !dbg !5803
  %arrayidx181 = getelementptr inbounds i16, i16* %267, i64 0, !dbg !5803
  store i16 %conv180, i16* %arrayidx181, align 2, !dbg !5804
  store i32 1, i32* %x, align 4, !dbg !5805
  br label %for.cond182, !dbg !5807

for.cond182:                                      ; preds = %for.inc205, %for.body172
  %268 = load i32, i32* %x, align 4, !dbg !5808
  %269 = load i32, i32* %width, align 4, !dbg !5811
  %cmp183 = icmp slt i32 %268, %269, !dbg !5812
  br i1 %cmp183, label %for.body185, label %for.end207, !dbg !5813

for.body185:                                      ; preds = %for.cond182
  %270 = load i32, i32* %x, align 4, !dbg !5814
  %conv186 = sext i32 %270 to i64, !dbg !5814
  %271 = load i64, i64* %fake_stride, align 8, !dbg !5816
  %sub187 = sub nsw i64 %conv186, %271, !dbg !5817
  %272 = load i16*, i16** %dst, align 8, !dbg !5818
  %arrayidx188 = getelementptr inbounds i16, i16* %272, i64 %sub187, !dbg !5818
  %273 = load i16, i16* %arrayidx188, align 2, !dbg !5818
  %conv189 = zext i16 %273 to i32, !dbg !5818
  store i32 %conv189, i32* %top, align 4, !dbg !5819
  %274 = load i32, i32* %x, align 4, !dbg !5820
  %conv190 = sext i32 %274 to i64, !dbg !5820
  %275 = load i64, i64* %fake_stride, align 8, !dbg !5821
  %add191 = add nsw i64 %275, 1, !dbg !5822
  %sub192 = sub nsw i64 %conv190, %add191, !dbg !5823
  %276 = load i16*, i16** %dst, align 8, !dbg !5824
  %arrayidx193 = getelementptr inbounds i16, i16* %276, i64 %sub192, !dbg !5824
  %277 = load i16, i16* %arrayidx193, align 2, !dbg !5824
  %conv194 = zext i16 %277 to i32, !dbg !5824
  store i32 %conv194, i32* %lefttop, align 4, !dbg !5825
  %278 = load i32, i32* %top, align 4, !dbg !5826
  %279 = load i32, i32* %lefttop, align 4, !dbg !5827
  %sub195 = sub nsw i32 %278, %279, !dbg !5828
  %280 = load i32, i32* %x, align 4, !dbg !5829
  %idxprom196 = sext i32 %280 to i64, !dbg !5830
  %281 = load i16*, i16** %dst, align 8, !dbg !5830
  %arrayidx197 = getelementptr inbounds i16, i16* %281, i64 %idxprom196, !dbg !5830
  %282 = load i16, i16* %arrayidx197, align 2, !dbg !5830
  %conv198 = zext i16 %282 to i32, !dbg !5830
  %add199 = add nsw i32 %sub195, %conv198, !dbg !5831
  %283 = load i32, i32* %left, align 4, !dbg !5832
  %add200 = add nsw i32 %283, %add199, !dbg !5832
  store i32 %add200, i32* %left, align 4, !dbg !5832
  %284 = load i32, i32* %left, align 4, !dbg !5833
  %285 = load i32, i32* %max, align 4, !dbg !5834
  %and201 = and i32 %284, %285, !dbg !5835
  %conv202 = trunc i32 %and201 to i16, !dbg !5833
  %286 = load i32, i32* %x, align 4, !dbg !5836
  %idxprom203 = sext i32 %286 to i64, !dbg !5837
  %287 = load i16*, i16** %dst, align 8, !dbg !5837
  %arrayidx204 = getelementptr inbounds i16, i16* %287, i64 %idxprom203, !dbg !5837
  store i16 %conv202, i16* %arrayidx204, align 2, !dbg !5838
  br label %for.inc205, !dbg !5839

for.inc205:                                       ; preds = %for.body185
  %288 = load i32, i32* %x, align 4, !dbg !5840
  %inc206 = add nsw i32 %288, 1, !dbg !5840
  store i32 %inc206, i32* %x, align 4, !dbg !5840
  br label %for.cond182, !dbg !5842, !llvm.loop !5843

for.end207:                                       ; preds = %for.cond182
  %289 = load i64, i64* %stride, align 8, !dbg !5845
  %290 = load i16*, i16** %dst, align 8, !dbg !5846
  %add.ptr208 = getelementptr inbounds i16, i16* %290, i64 %289, !dbg !5846
  store i16* %add.ptr208, i16** %dst, align 8, !dbg !5846
  br label %for.inc209, !dbg !5847

for.inc209:                                       ; preds = %for.end207
  %291 = load i32, i32* %k, align 4, !dbg !5848
  %inc210 = add nsw i32 %291, 1, !dbg !5848
  store i32 %inc210, i32* %k, align 4, !dbg !5848
  br label %for.cond169, !dbg !5850, !llvm.loop !5851

for.end211:                                       ; preds = %for.cond169
  br label %sw.epilog, !dbg !5853

sw.bb212:                                         ; preds = %if.end112
  %292 = load i32, i32* %i, align 4, !dbg !5854
  %idxprom213 = sext i32 %292 to i64, !dbg !5855
  %293 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5855
  %data214 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %293, i32 0, i32 0, !dbg !5856
  %arrayidx215 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data214, i64 0, i64 %idxprom213, !dbg !5855
  %294 = load i8*, i8** %arrayidx215, align 8, !dbg !5855
  %295 = bitcast i8* %294 to i16*, !dbg !5857
  %296 = load i32, i32* %j.addr, align 4, !dbg !5858
  %297 = load i32, i32* %sheight, align 4, !dbg !5859
  %mul216 = mul nsw i32 %296, %297, !dbg !5860
  %conv217 = sext i32 %mul216 to i64, !dbg !5858
  %298 = load i64, i64* %stride, align 8, !dbg !5861
  %mul218 = mul nsw i64 %conv217, %298, !dbg !5862
  %add.ptr219 = getelementptr inbounds i16, i16* %295, i64 %mul218, !dbg !5863
  store i16* %add.ptr219, i16** %dst, align 8, !dbg !5864
  %299 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !5865
  %llviddsp220 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %299, i32 0, i32 19, !dbg !5866
  %add_left_pred_int16221 = getelementptr inbounds %struct.LLVidDSPContext, %struct.LLVidDSPContext* %llviddsp220, i32 0, i32 3, !dbg !5867
  %300 = load i32 (i16*, i16*, i32, i64, i32)*, i32 (i16*, i16*, i32, i64, i32)** %add_left_pred_int16221, align 8, !dbg !5867
  %301 = load i16*, i16** %dst, align 8, !dbg !5868
  %302 = load i16*, i16** %dst, align 8, !dbg !5869
  %303 = load i32, i32* %max, align 4, !dbg !5870
  %304 = load i32, i32* %width, align 4, !dbg !5871
  %conv222 = sext i32 %304 to i64, !dbg !5871
  %call223 = call i32 %300(i16* %301, i16* %302, i32 %303, i64 %conv222, i32 0), !dbg !5865
  %305 = load i64, i64* %stride, align 8, !dbg !5872
  %306 = load i16*, i16** %dst, align 8, !dbg !5873
  %add.ptr224 = getelementptr inbounds i16, i16* %306, i64 %305, !dbg !5873
  store i16* %add.ptr224, i16** %dst, align 8, !dbg !5873
  %307 = load i32, i32* %interlaced, align 4, !dbg !5874
  %tobool225 = icmp ne i32 %307, 0, !dbg !5874
  br i1 %tobool225, label %if.then226, label %if.end232, !dbg !5876

if.then226:                                       ; preds = %sw.bb212
  %308 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !5877
  %llviddsp227 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %308, i32 0, i32 19, !dbg !5879
  %add_left_pred_int16228 = getelementptr inbounds %struct.LLVidDSPContext, %struct.LLVidDSPContext* %llviddsp227, i32 0, i32 3, !dbg !5880
  %309 = load i32 (i16*, i16*, i32, i64, i32)*, i32 (i16*, i16*, i32, i64, i32)** %add_left_pred_int16228, align 8, !dbg !5880
  %310 = load i16*, i16** %dst, align 8, !dbg !5881
  %311 = load i16*, i16** %dst, align 8, !dbg !5882
  %312 = load i32, i32* %max, align 4, !dbg !5883
  %313 = load i32, i32* %width, align 4, !dbg !5884
  %conv229 = sext i32 %313 to i64, !dbg !5884
  %call230 = call i32 %309(i16* %310, i16* %311, i32 %312, i64 %conv229, i32 0), !dbg !5877
  %314 = load i64, i64* %stride, align 8, !dbg !5885
  %315 = load i16*, i16** %dst, align 8, !dbg !5886
  %add.ptr231 = getelementptr inbounds i16, i16* %315, i64 %314, !dbg !5886
  store i16* %add.ptr231, i16** %dst, align 8, !dbg !5886
  br label %if.end232, !dbg !5887

if.end232:                                        ; preds = %if.then226, %sw.bb212
  %316 = load i16*, i16** %dst, align 8, !dbg !5888
  %arrayidx233 = getelementptr inbounds i16, i16* %316, i64 0, !dbg !5888
  %317 = load i16, i16* %arrayidx233, align 2, !dbg !5888
  %conv234 = zext i16 %317 to i32, !dbg !5888
  store i32 %conv234, i32* %left, align 4, !dbg !5889
  store i32 %conv234, i32* %lefttop, align 4, !dbg !5890
  %318 = load i32, i32* %interlaced, align 4, !dbg !5891
  %add235 = add nsw i32 1, %318, !dbg !5893
  store i32 %add235, i32* %k, align 4, !dbg !5894
  br label %for.cond236, !dbg !5895

for.cond236:                                      ; preds = %for.inc245, %if.end232
  %319 = load i32, i32* %k, align 4, !dbg !5896
  %320 = load i32, i32* %height, align 4, !dbg !5899
  %cmp237 = icmp slt i32 %319, %320, !dbg !5900
  br i1 %cmp237, label %for.body239, label %for.end247, !dbg !5901

for.body239:                                      ; preds = %for.cond236
  %321 = load i16*, i16** %dst, align 8, !dbg !5902
  %322 = load i16*, i16** %dst, align 8, !dbg !5904
  %323 = load i64, i64* %fake_stride, align 8, !dbg !5905
  %idx.neg = sub i64 0, %323, !dbg !5906
  %add.ptr240 = getelementptr inbounds i16, i16* %322, i64 %idx.neg, !dbg !5906
  %324 = load i16*, i16** %dst, align 8, !dbg !5907
  %325 = load i32, i32* %width, align 4, !dbg !5908
  %conv241 = sext i32 %325 to i64, !dbg !5908
  %326 = load i32, i32* %max, align 4, !dbg !5909
  call void @magicyuv_median_pred16(i16* %321, i16* %add.ptr240, i16* %324, i64 %conv241, i32* %left, i32* %lefttop, i32 %326), !dbg !5910
  %327 = load i16*, i16** %dst, align 8, !dbg !5911
  %arrayidx242 = getelementptr inbounds i16, i16* %327, i64 0, !dbg !5911
  %328 = load i16, i16* %arrayidx242, align 2, !dbg !5911
  %conv243 = zext i16 %328 to i32, !dbg !5911
  store i32 %conv243, i32* %left, align 4, !dbg !5912
  store i32 %conv243, i32* %lefttop, align 4, !dbg !5913
  %329 = load i64, i64* %stride, align 8, !dbg !5914
  %330 = load i16*, i16** %dst, align 8, !dbg !5915
  %add.ptr244 = getelementptr inbounds i16, i16* %330, i64 %329, !dbg !5915
  store i16* %add.ptr244, i16** %dst, align 8, !dbg !5915
  br label %for.inc245, !dbg !5916

for.inc245:                                       ; preds = %for.body239
  %331 = load i32, i32* %k, align 4, !dbg !5917
  %inc246 = add nsw i32 %331, 1, !dbg !5917
  store i32 %inc246, i32* %k, align 4, !dbg !5917
  br label %for.cond236, !dbg !5919, !llvm.loop !5920

for.end247:                                       ; preds = %for.cond236
  br label %sw.epilog, !dbg !5922

sw.default:                                       ; preds = %if.end112
  %332 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5923
  %333 = bitcast %struct.AVCodecContext* %332 to i8*, !dbg !5923
  %334 = load i32, i32* %pred, align 4, !dbg !5924
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %333, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i32 0, i32 0), i32 %334), !dbg !5925
  br label %sw.epilog, !dbg !5926

sw.epilog:                                        ; preds = %sw.default, %for.end247, %for.end211, %for.end146
  br label %for.inc248, !dbg !5927

for.inc248:                                       ; preds = %sw.epilog
  %335 = load i32, i32* %i, align 4, !dbg !5928
  %inc249 = add nsw i32 %335, 1, !dbg !5928
  store i32 %inc249, i32* %i, align 4, !dbg !5928
  br label %for.cond, !dbg !5930, !llvm.loop !5931

for.end250:                                       ; preds = %for.cond
  %336 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !5933
  %decorrelate = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %336, i32 0, i32 6, !dbg !5935
  %337 = load i32, i32* %decorrelate, align 4, !dbg !5935
  %tobool251 = icmp ne i32 %337, 0, !dbg !5933
  br i1 %tobool251, label %if.then252, label %if.end353, !dbg !5936

if.then252:                                       ; preds = %for.end250
  call void @llvm.dbg.declare(metadata i32* %height253, metadata !5937, metadata !1637), !dbg !5939
  %338 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !5940
  %slice_height254 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %338, i32 0, i32 3, !dbg !5941
  %339 = load i32, i32* %slice_height254, align 8, !dbg !5941
  %340 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5942
  %coded_height255 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %340, i32 0, i32 23, !dbg !5943
  %341 = load i32, i32* %coded_height255, align 8, !dbg !5943
  %342 = load i32, i32* %j.addr, align 4, !dbg !5944
  %343 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !5945
  %slice_height256 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %343, i32 0, i32 3, !dbg !5946
  %344 = load i32, i32* %slice_height256, align 8, !dbg !5946
  %mul257 = mul nsw i32 %342, %344, !dbg !5947
  %sub258 = sub nsw i32 %341, %mul257, !dbg !5948
  %cmp259 = icmp sgt i32 %339, %sub258, !dbg !5949
  br i1 %cmp259, label %cond.true261, label %cond.false266, !dbg !5950

cond.true261:                                     ; preds = %if.then252
  %345 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5951
  %coded_height262 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %345, i32 0, i32 23, !dbg !5953
  %346 = load i32, i32* %coded_height262, align 8, !dbg !5953
  %347 = load i32, i32* %j.addr, align 4, !dbg !5954
  %348 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !5955
  %slice_height263 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %348, i32 0, i32 3, !dbg !5956
  %349 = load i32, i32* %slice_height263, align 8, !dbg !5956
  %mul264 = mul nsw i32 %347, %349, !dbg !5957
  %sub265 = sub nsw i32 %346, %mul264, !dbg !5958
  br label %cond.end268, !dbg !5959

cond.false266:                                    ; preds = %if.then252
  %350 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !5960
  %slice_height267 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %350, i32 0, i32 3, !dbg !5962
  %351 = load i32, i32* %slice_height267, align 8, !dbg !5962
  br label %cond.end268, !dbg !5963

cond.end268:                                      ; preds = %cond.false266, %cond.true261
  %cond269 = phi i32 [ %sub265, %cond.true261 ], [ %351, %cond.false266 ], !dbg !5964
  store i32 %cond269, i32* %height253, align 4, !dbg !5966
  call void @llvm.dbg.declare(metadata i32* %width270, metadata !5967, metadata !1637), !dbg !5968
  %352 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5969
  %coded_width271 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %352, i32 0, i32 22, !dbg !5970
  %353 = load i32, i32* %coded_width271, align 4, !dbg !5970
  store i32 %353, i32* %width270, align 4, !dbg !5968
  call void @llvm.dbg.declare(metadata i16** %r, metadata !5971, metadata !1637), !dbg !5972
  %354 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5973
  %data272 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %354, i32 0, i32 0, !dbg !5974
  %arrayidx273 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data272, i64 0, i64 0, !dbg !5973
  %355 = load i8*, i8** %arrayidx273, align 8, !dbg !5973
  %356 = bitcast i8* %355 to i16*, !dbg !5975
  %357 = load i32, i32* %j.addr, align 4, !dbg !5976
  %358 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !5977
  %slice_height274 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %358, i32 0, i32 3, !dbg !5978
  %359 = load i32, i32* %slice_height274, align 8, !dbg !5978
  %mul275 = mul nsw i32 %357, %359, !dbg !5979
  %360 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5980
  %linesize276 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %360, i32 0, i32 1, !dbg !5981
  %arrayidx277 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize276, i64 0, i64 0, !dbg !5980
  %361 = load i32, i32* %arrayidx277, align 8, !dbg !5980
  %mul278 = mul nsw i32 %mul275, %361, !dbg !5982
  %div279 = sdiv i32 %mul278, 2, !dbg !5983
  %idx.ext280 = sext i32 %div279 to i64, !dbg !5984
  %add.ptr281 = getelementptr inbounds i16, i16* %356, i64 %idx.ext280, !dbg !5984
  store i16* %add.ptr281, i16** %r, align 8, !dbg !5972
  call void @llvm.dbg.declare(metadata i16** %g, metadata !5985, metadata !1637), !dbg !5986
  %362 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5987
  %data282 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %362, i32 0, i32 0, !dbg !5988
  %arrayidx283 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data282, i64 0, i64 1, !dbg !5987
  %363 = load i8*, i8** %arrayidx283, align 8, !dbg !5987
  %364 = bitcast i8* %363 to i16*, !dbg !5989
  %365 = load i32, i32* %j.addr, align 4, !dbg !5990
  %366 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !5991
  %slice_height284 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %366, i32 0, i32 3, !dbg !5992
  %367 = load i32, i32* %slice_height284, align 8, !dbg !5992
  %mul285 = mul nsw i32 %365, %367, !dbg !5993
  %368 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5994
  %linesize286 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %368, i32 0, i32 1, !dbg !5995
  %arrayidx287 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize286, i64 0, i64 1, !dbg !5994
  %369 = load i32, i32* %arrayidx287, align 4, !dbg !5994
  %mul288 = mul nsw i32 %mul285, %369, !dbg !5996
  %div289 = sdiv i32 %mul288, 2, !dbg !5997
  %idx.ext290 = sext i32 %div289 to i64, !dbg !5998
  %add.ptr291 = getelementptr inbounds i16, i16* %364, i64 %idx.ext290, !dbg !5998
  store i16* %add.ptr291, i16** %g, align 8, !dbg !5986
  call void @llvm.dbg.declare(metadata i16** %b, metadata !5999, metadata !1637), !dbg !6000
  %370 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !6001
  %data292 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %370, i32 0, i32 0, !dbg !6002
  %arrayidx293 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data292, i64 0, i64 2, !dbg !6001
  %371 = load i8*, i8** %arrayidx293, align 8, !dbg !6001
  %372 = bitcast i8* %371 to i16*, !dbg !6003
  %373 = load i32, i32* %j.addr, align 4, !dbg !6004
  %374 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !6005
  %slice_height294 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %374, i32 0, i32 3, !dbg !6006
  %375 = load i32, i32* %slice_height294, align 8, !dbg !6006
  %mul295 = mul nsw i32 %373, %375, !dbg !6007
  %376 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !6008
  %linesize296 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %376, i32 0, i32 1, !dbg !6009
  %arrayidx297 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize296, i64 0, i64 2, !dbg !6008
  %377 = load i32, i32* %arrayidx297, align 8, !dbg !6008
  %mul298 = mul nsw i32 %mul295, %377, !dbg !6010
  %div299 = sdiv i32 %mul298, 2, !dbg !6011
  %idx.ext300 = sext i32 %div299 to i64, !dbg !6012
  %add.ptr301 = getelementptr inbounds i16, i16* %372, i64 %idx.ext300, !dbg !6012
  store i16* %add.ptr301, i16** %b, align 8, !dbg !6000
  store i32 0, i32* %i, align 4, !dbg !6013
  br label %for.cond302, !dbg !6015

for.cond302:                                      ; preds = %for.inc350, %cond.end268
  %378 = load i32, i32* %i, align 4, !dbg !6016
  %379 = load i32, i32* %height253, align 4, !dbg !6019
  %cmp303 = icmp slt i32 %378, %379, !dbg !6020
  br i1 %cmp303, label %for.body305, label %for.end352, !dbg !6021

for.body305:                                      ; preds = %for.cond302
  store i32 0, i32* %k, align 4, !dbg !6022
  br label %for.cond306, !dbg !6025

for.cond306:                                      ; preds = %for.inc332, %for.body305
  %380 = load i32, i32* %k, align 4, !dbg !6026
  %381 = load i32, i32* %width270, align 4, !dbg !6029
  %cmp307 = icmp slt i32 %380, %381, !dbg !6030
  br i1 %cmp307, label %for.body309, label %for.end334, !dbg !6031

for.body309:                                      ; preds = %for.cond306
  %382 = load i32, i32* %k, align 4, !dbg !6032
  %idxprom310 = sext i32 %382 to i64, !dbg !6034
  %383 = load i16*, i16** %b, align 8, !dbg !6034
  %arrayidx311 = getelementptr inbounds i16, i16* %383, i64 %idxprom310, !dbg !6034
  %384 = load i16, i16* %arrayidx311, align 2, !dbg !6034
  %conv312 = zext i16 %384 to i32, !dbg !6034
  %385 = load i32, i32* %k, align 4, !dbg !6035
  %idxprom313 = sext i32 %385 to i64, !dbg !6036
  %386 = load i16*, i16** %g, align 8, !dbg !6036
  %arrayidx314 = getelementptr inbounds i16, i16* %386, i64 %idxprom313, !dbg !6036
  %387 = load i16, i16* %arrayidx314, align 2, !dbg !6036
  %conv315 = zext i16 %387 to i32, !dbg !6036
  %add316 = add nsw i32 %conv312, %conv315, !dbg !6037
  %388 = load i32, i32* %max, align 4, !dbg !6038
  %and317 = and i32 %add316, %388, !dbg !6039
  %conv318 = trunc i32 %and317 to i16, !dbg !6040
  %389 = load i32, i32* %k, align 4, !dbg !6041
  %idxprom319 = sext i32 %389 to i64, !dbg !6042
  %390 = load i16*, i16** %b, align 8, !dbg !6042
  %arrayidx320 = getelementptr inbounds i16, i16* %390, i64 %idxprom319, !dbg !6042
  store i16 %conv318, i16* %arrayidx320, align 2, !dbg !6043
  %391 = load i32, i32* %k, align 4, !dbg !6044
  %idxprom321 = sext i32 %391 to i64, !dbg !6045
  %392 = load i16*, i16** %r, align 8, !dbg !6045
  %arrayidx322 = getelementptr inbounds i16, i16* %392, i64 %idxprom321, !dbg !6045
  %393 = load i16, i16* %arrayidx322, align 2, !dbg !6045
  %conv323 = zext i16 %393 to i32, !dbg !6045
  %394 = load i32, i32* %k, align 4, !dbg !6046
  %idxprom324 = sext i32 %394 to i64, !dbg !6047
  %395 = load i16*, i16** %g, align 8, !dbg !6047
  %arrayidx325 = getelementptr inbounds i16, i16* %395, i64 %idxprom324, !dbg !6047
  %396 = load i16, i16* %arrayidx325, align 2, !dbg !6047
  %conv326 = zext i16 %396 to i32, !dbg !6047
  %add327 = add nsw i32 %conv323, %conv326, !dbg !6048
  %397 = load i32, i32* %max, align 4, !dbg !6049
  %and328 = and i32 %add327, %397, !dbg !6050
  %conv329 = trunc i32 %and328 to i16, !dbg !6051
  %398 = load i32, i32* %k, align 4, !dbg !6052
  %idxprom330 = sext i32 %398 to i64, !dbg !6053
  %399 = load i16*, i16** %r, align 8, !dbg !6053
  %arrayidx331 = getelementptr inbounds i16, i16* %399, i64 %idxprom330, !dbg !6053
  store i16 %conv329, i16* %arrayidx331, align 2, !dbg !6054
  br label %for.inc332, !dbg !6055

for.inc332:                                       ; preds = %for.body309
  %400 = load i32, i32* %k, align 4, !dbg !6056
  %inc333 = add nsw i32 %400, 1, !dbg !6056
  store i32 %inc333, i32* %k, align 4, !dbg !6056
  br label %for.cond306, !dbg !6058, !llvm.loop !6059

for.end334:                                       ; preds = %for.cond306
  %401 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !6061
  %linesize335 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %401, i32 0, i32 1, !dbg !6062
  %arrayidx336 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize335, i64 0, i64 0, !dbg !6061
  %402 = load i32, i32* %arrayidx336, align 8, !dbg !6061
  %div337 = sdiv i32 %402, 2, !dbg !6063
  %403 = load i16*, i16** %b, align 8, !dbg !6064
  %idx.ext338 = sext i32 %div337 to i64, !dbg !6064
  %add.ptr339 = getelementptr inbounds i16, i16* %403, i64 %idx.ext338, !dbg !6064
  store i16* %add.ptr339, i16** %b, align 8, !dbg !6064
  %404 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !6065
  %linesize340 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %404, i32 0, i32 1, !dbg !6066
  %arrayidx341 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize340, i64 0, i64 1, !dbg !6065
  %405 = load i32, i32* %arrayidx341, align 4, !dbg !6065
  %div342 = sdiv i32 %405, 2, !dbg !6067
  %406 = load i16*, i16** %g, align 8, !dbg !6068
  %idx.ext343 = sext i32 %div342 to i64, !dbg !6068
  %add.ptr344 = getelementptr inbounds i16, i16* %406, i64 %idx.ext343, !dbg !6068
  store i16* %add.ptr344, i16** %g, align 8, !dbg !6068
  %407 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !6069
  %linesize345 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %407, i32 0, i32 1, !dbg !6070
  %arrayidx346 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize345, i64 0, i64 2, !dbg !6069
  %408 = load i32, i32* %arrayidx346, align 8, !dbg !6069
  %div347 = sdiv i32 %408, 2, !dbg !6071
  %409 = load i16*, i16** %r, align 8, !dbg !6072
  %idx.ext348 = sext i32 %div347 to i64, !dbg !6072
  %add.ptr349 = getelementptr inbounds i16, i16* %409, i64 %idx.ext348, !dbg !6072
  store i16* %add.ptr349, i16** %r, align 8, !dbg !6072
  br label %for.inc350, !dbg !6073

for.inc350:                                       ; preds = %for.end334
  %410 = load i32, i32* %i, align 4, !dbg !6074
  %inc351 = add nsw i32 %410, 1, !dbg !6074
  store i32 %inc351, i32* %i, align 4, !dbg !6074
  br label %for.cond302, !dbg !6076, !llvm.loop !6077

for.end352:                                       ; preds = %for.cond302
  br label %if.end353, !dbg !6079

if.end353:                                        ; preds = %for.end352, %for.end250
  store i32 0, i32* %retval, align 4, !dbg !6080
  br label %return, !dbg !6080

return:                                           ; preds = %if.end353, %if.then99, %if.then89, %if.then60, %if.then
  %411 = load i32, i32* %retval, align 4, !dbg !6081
  ret i32 %411, !dbg !6081
}

; Function Attrs: nounwind uwtable
define internal i32 @huff_build12(%struct.VLC* %vlc, i8* %len) #0 !dbg !6082 {
entry:
  %retval = alloca i32, align 4
  %vlc.addr = alloca %struct.VLC*, align 8
  %len.addr = alloca i8*, align 8
  %he = alloca [4096 x %struct.HuffEntry], align 16
  %codes = alloca [4096 x i32], align 16
  %bits = alloca [4096 x i8], align 16
  %syms = alloca [4096 x i16], align 16
  %code = alloca i32, align 4
  %i = alloca i32, align 4
  %stack = alloca [64 x [2 x i8*]], align 16
  %sp = alloca i32, align 4
  %start = alloca %struct.HuffEntry*, align 8
  %end = alloca %struct.HuffEntry*, align 8
  %checksort = alloca i32, align 4
  %right = alloca %struct.HuffEntry*, align 8
  %left = alloca %struct.HuffEntry*, align 8
  %mid = alloca %struct.HuffEntry*, align 8
  %SWAP_tmp = alloca %struct.HuffEntry, align 4
  %SWAP_tmp48 = alloca %struct.HuffEntry, align 4
  %SWAP_tmp57 = alloca %struct.HuffEntry, align 4
  %SWAP_tmp67 = alloca %struct.HuffEntry, align 4
  %SWAP_tmp76 = alloca %struct.HuffEntry, align 4
  %SWAP_tmp108 = alloca %struct.HuffEntry, align 4
  %SWAP_tmp115 = alloca %struct.HuffEntry, align 4
  %SWAP_tmp179 = alloca %struct.HuffEntry, align 4
  store %struct.VLC* %vlc, %struct.VLC** %vlc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VLC** %vlc.addr, metadata !6083, metadata !1637), !dbg !6084
  store i8* %len, i8** %len.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %len.addr, metadata !6085, metadata !1637), !dbg !6086
  call void @llvm.dbg.declare(metadata [4096 x %struct.HuffEntry]* %he, metadata !6087, metadata !1637), !dbg !6090
  call void @llvm.dbg.declare(metadata [4096 x i32]* %codes, metadata !6091, metadata !1637), !dbg !6093
  call void @llvm.dbg.declare(metadata [4096 x i8]* %bits, metadata !6094, metadata !1637), !dbg !6096
  call void @llvm.dbg.declare(metadata [4096 x i16]* %syms, metadata !6097, metadata !1637), !dbg !6099
  call void @llvm.dbg.declare(metadata i32* %code, metadata !6100, metadata !1637), !dbg !6101
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6102, metadata !1637), !dbg !6103
  store i32 0, i32* %i, align 4, !dbg !6104
  br label %for.cond, !dbg !6106

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6107
  %cmp = icmp slt i32 %0, 4096, !dbg !6110
  br i1 %cmp, label %for.body, label %for.end, !dbg !6111

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !6112
  %sub = sub nsw i32 4095, %1, !dbg !6114
  %conv = trunc i32 %sub to i16, !dbg !6115
  %2 = load i32, i32* %i, align 4, !dbg !6116
  %idxprom = sext i32 %2 to i64, !dbg !6117
  %arrayidx = getelementptr inbounds [4096 x %struct.HuffEntry], [4096 x %struct.HuffEntry]* %he, i64 0, i64 %idxprom, !dbg !6117
  %sym = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %arrayidx, i32 0, i32 0, !dbg !6118
  store i16 %conv, i16* %sym, align 8, !dbg !6119
  %3 = load i32, i32* %i, align 4, !dbg !6120
  %idxprom1 = sext i32 %3 to i64, !dbg !6121
  %4 = load i8*, i8** %len.addr, align 8, !dbg !6121
  %arrayidx2 = getelementptr inbounds i8, i8* %4, i64 %idxprom1, !dbg !6121
  %5 = load i8, i8* %arrayidx2, align 1, !dbg !6121
  %6 = load i32, i32* %i, align 4, !dbg !6122
  %idxprom3 = sext i32 %6 to i64, !dbg !6123
  %arrayidx4 = getelementptr inbounds [4096 x %struct.HuffEntry], [4096 x %struct.HuffEntry]* %he, i64 0, i64 %idxprom3, !dbg !6123
  %len5 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %arrayidx4, i32 0, i32 1, !dbg !6124
  store i8 %5, i8* %len5, align 2, !dbg !6125
  %7 = load i32, i32* %i, align 4, !dbg !6126
  %idxprom6 = sext i32 %7 to i64, !dbg !6128
  %8 = load i8*, i8** %len.addr, align 8, !dbg !6128
  %arrayidx7 = getelementptr inbounds i8, i8* %8, i64 %idxprom6, !dbg !6128
  %9 = load i8, i8* %arrayidx7, align 1, !dbg !6128
  %conv8 = zext i8 %9 to i32, !dbg !6128
  %cmp9 = icmp eq i32 %conv8, 0, !dbg !6129
  br i1 %cmp9, label %if.then, label %lor.lhs.false, !dbg !6130

lor.lhs.false:                                    ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !6131
  %idxprom11 = sext i32 %10 to i64, !dbg !6133
  %11 = load i8*, i8** %len.addr, align 8, !dbg !6133
  %arrayidx12 = getelementptr inbounds i8, i8* %11, i64 %idxprom11, !dbg !6133
  %12 = load i8, i8* %arrayidx12, align 1, !dbg !6133
  %conv13 = zext i8 %12 to i32, !dbg !6133
  %cmp14 = icmp sgt i32 %conv13, 32, !dbg !6134
  br i1 %cmp14, label %if.then, label %if.end, !dbg !6135

if.then:                                          ; preds = %lor.lhs.false, %for.body
  store i32 -1094995529, i32* %retval, align 4, !dbg !6136
  br label %return, !dbg !6136

if.end:                                           ; preds = %lor.lhs.false
  br label %for.inc, !dbg !6137

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %i, align 4, !dbg !6138
  %inc = add nsw i32 %13, 1, !dbg !6138
  store i32 %inc, i32* %i, align 4, !dbg !6138
  br label %for.cond, !dbg !6140, !llvm.loop !6141

for.end:                                          ; preds = %for.cond
  br label %do.body, !dbg !6143, !llvm.loop !6144

do.body:                                          ; preds = %for.end
  call void @llvm.dbg.declare(metadata [64 x [2 x i8*]]* %stack, metadata !6145, metadata !1637), !dbg !6147
  call void @llvm.dbg.declare(metadata i32* %sp, metadata !6148, metadata !1637), !dbg !6149
  store i32 1, i32* %sp, align 4, !dbg !6150
  %arraydecay = getelementptr inbounds [4096 x %struct.HuffEntry], [4096 x %struct.HuffEntry]* %he, i32 0, i32 0, !dbg !6152
  %14 = bitcast %struct.HuffEntry* %arraydecay to i8*, !dbg !6152
  %arrayidx16 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 0, !dbg !6153
  %arrayidx17 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx16, i64 0, i64 0, !dbg !6153
  store i8* %14, i8** %arrayidx17, align 16, !dbg !6154
  %arraydecay18 = getelementptr inbounds [4096 x %struct.HuffEntry], [4096 x %struct.HuffEntry]* %he, i32 0, i32 0, !dbg !6155
  %add.ptr = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %arraydecay18, i64 4096, !dbg !6156
  %add.ptr19 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %add.ptr, i64 -1, !dbg !6157
  %15 = bitcast %struct.HuffEntry* %add.ptr19 to i8*, !dbg !6155
  %arrayidx20 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 0, !dbg !6158
  %arrayidx21 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx20, i64 0, i64 1, !dbg !6158
  store i8* %15, i8** %arrayidx21, align 8, !dbg !6159
  br label %while.cond, !dbg !6160

while.cond:                                       ; preds = %while.end183, %do.body
  %16 = load i32, i32* %sp, align 4, !dbg !6161
  %tobool = icmp ne i32 %16, 0, !dbg !6163
  br i1 %tobool, label %while.body, label %while.end184, !dbg !6163

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.HuffEntry** %start, metadata !6164, metadata !1637), !dbg !6166
  %17 = load i32, i32* %sp, align 4, !dbg !6167
  %dec = add nsw i32 %17, -1, !dbg !6167
  store i32 %dec, i32* %sp, align 4, !dbg !6167
  %idxprom22 = sext i32 %dec to i64, !dbg !6169
  %arrayidx23 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom22, !dbg !6169
  %arrayidx24 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx23, i64 0, i64 0, !dbg !6169
  %18 = load i8*, i8** %arrayidx24, align 16, !dbg !6169
  %19 = bitcast i8* %18 to %struct.HuffEntry*, !dbg !6169
  store %struct.HuffEntry* %19, %struct.HuffEntry** %start, align 8, !dbg !6170
  call void @llvm.dbg.declare(metadata %struct.HuffEntry** %end, metadata !6171, metadata !1637), !dbg !6172
  %20 = load i32, i32* %sp, align 4, !dbg !6173
  %idxprom25 = sext i32 %20 to i64, !dbg !6174
  %arrayidx26 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom25, !dbg !6174
  %arrayidx27 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx26, i64 0, i64 1, !dbg !6174
  %21 = load i8*, i8** %arrayidx27, align 8, !dbg !6174
  %22 = bitcast i8* %21 to %struct.HuffEntry*, !dbg !6174
  store %struct.HuffEntry* %22, %struct.HuffEntry** %end, align 8, !dbg !6175
  br label %while.cond28, !dbg !6176

while.cond28:                                     ; preds = %if.end182, %while.body
  %23 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !6177
  %24 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !6179
  %cmp29 = icmp ult %struct.HuffEntry* %23, %24, !dbg !6180
  br i1 %cmp29, label %while.body31, label %while.end183, !dbg !6181

while.body31:                                     ; preds = %while.cond28
  %25 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !6182
  %26 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !6186
  %add.ptr32 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %26, i64 -1, !dbg !6187
  %cmp33 = icmp ult %struct.HuffEntry* %25, %add.ptr32, !dbg !6188
  br i1 %cmp33, label %if.then35, label %if.else173, !dbg !6182

if.then35:                                        ; preds = %while.body31
  call void @llvm.dbg.declare(metadata i32* %checksort, metadata !6189, metadata !1637), !dbg !6191
  store i32 0, i32* %checksort, align 4, !dbg !6192
  call void @llvm.dbg.declare(metadata %struct.HuffEntry** %right, metadata !6194, metadata !1637), !dbg !6195
  %27 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !6196
  %add.ptr36 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %27, i64 -2, !dbg !6197
  store %struct.HuffEntry* %add.ptr36, %struct.HuffEntry** %right, align 8, !dbg !6198
  call void @llvm.dbg.declare(metadata %struct.HuffEntry** %left, metadata !6199, metadata !1637), !dbg !6200
  %28 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !6201
  %add.ptr37 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %28, i64 1, !dbg !6202
  store %struct.HuffEntry* %add.ptr37, %struct.HuffEntry** %left, align 8, !dbg !6203
  call void @llvm.dbg.declare(metadata %struct.HuffEntry** %mid, metadata !6204, metadata !1637), !dbg !6205
  %29 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !6206
  %30 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !6207
  %31 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !6208
  %sub.ptr.lhs.cast = ptrtoint %struct.HuffEntry* %30 to i64, !dbg !6209
  %sub.ptr.rhs.cast = ptrtoint %struct.HuffEntry* %31 to i64, !dbg !6209
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6209
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8, !dbg !6209
  %shr = ashr i64 %sub.ptr.div, 1, !dbg !6210
  %add.ptr38 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %29, i64 %shr, !dbg !6211
  store %struct.HuffEntry* %add.ptr38, %struct.HuffEntry** %mid, align 8, !dbg !6212
  %32 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !6213
  %33 = bitcast %struct.HuffEntry* %32 to i8*, !dbg !6213
  %34 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !6214
  %35 = bitcast %struct.HuffEntry* %34 to i8*, !dbg !6214
  %call = call i32 @huff_cmp_len12(i8* %33, i8* %35), !dbg !6215
  %cmp39 = icmp sgt i32 %call, 0, !dbg !6216
  br i1 %cmp39, label %if.then41, label %if.else51, !dbg !6215

if.then41:                                        ; preds = %if.then35
  %36 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !6217
  %37 = bitcast %struct.HuffEntry* %36 to i8*, !dbg !6217
  %38 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !6222
  %39 = bitcast %struct.HuffEntry* %38 to i8*, !dbg !6222
  %call42 = call i32 @huff_cmp_len12(i8* %37, i8* %39), !dbg !6223
  %cmp43 = icmp sgt i32 %call42, 0, !dbg !6224
  br i1 %cmp43, label %if.then45, label %if.else, !dbg !6223

if.then45:                                        ; preds = %if.then41
  br label %do.body46, !dbg !6225, !llvm.loop !6227

do.body46:                                        ; preds = %if.then45
  call void @llvm.dbg.declare(metadata %struct.HuffEntry* %SWAP_tmp, metadata !6229, metadata !1637), !dbg !6231
  %40 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !6232
  %41 = bitcast %struct.HuffEntry* %SWAP_tmp to i8*, !dbg !6234
  %42 = bitcast %struct.HuffEntry* %40 to i8*, !dbg !6234
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 4, i1 false), !dbg !6234
  %43 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !6235
  %44 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !6236
  %45 = bitcast %struct.HuffEntry* %43 to i8*, !dbg !6237
  %46 = bitcast %struct.HuffEntry* %44 to i8*, !dbg !6237
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* %46, i64 8, i32 4, i1 false), !dbg !6238
  %47 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !6240
  %48 = bitcast %struct.HuffEntry* %47 to i8*, !dbg !6241
  %49 = bitcast %struct.HuffEntry* %SWAP_tmp to i8*, !dbg !6241
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 4, i1 false), !dbg !6242
  br label %do.end, !dbg !6244

do.end:                                           ; preds = %do.body46
  br label %if.end50, !dbg !6245

if.else:                                          ; preds = %if.then41
  br label %do.body47, !dbg !6247, !llvm.loop !6249

do.body47:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.HuffEntry* %SWAP_tmp48, metadata !6251, metadata !1637), !dbg !6253
  %50 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !6254
  %51 = bitcast %struct.HuffEntry* %SWAP_tmp48 to i8*, !dbg !6256
  %52 = bitcast %struct.HuffEntry* %50 to i8*, !dbg !6256
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 4, i1 false), !dbg !6256
  %53 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !6257
  %54 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !6258
  %55 = bitcast %struct.HuffEntry* %53 to i8*, !dbg !6259
  %56 = bitcast %struct.HuffEntry* %54 to i8*, !dbg !6259
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %55, i8* %56, i64 8, i32 4, i1 false), !dbg !6260
  %57 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !6262
  %58 = bitcast %struct.HuffEntry* %57 to i8*, !dbg !6263
  %59 = bitcast %struct.HuffEntry* %SWAP_tmp48 to i8*, !dbg !6263
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %58, i8* %59, i64 8, i32 4, i1 false), !dbg !6264
  br label %do.end49, !dbg !6266

do.end49:                                         ; preds = %do.body47
  br label %if.end50

if.end50:                                         ; preds = %do.end49, %do.end
  br label %if.end61, !dbg !6267

if.else51:                                        ; preds = %if.then35
  %60 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !6269
  %61 = bitcast %struct.HuffEntry* %60 to i8*, !dbg !6269
  %62 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !6273
  %63 = bitcast %struct.HuffEntry* %62 to i8*, !dbg !6273
  %call52 = call i32 @huff_cmp_len12(i8* %61, i8* %63), !dbg !6274
  %cmp53 = icmp sgt i32 %call52, 0, !dbg !6275
  br i1 %cmp53, label %if.then55, label %if.else59, !dbg !6274

if.then55:                                        ; preds = %if.else51
  br label %do.body56, !dbg !6276, !llvm.loop !6278

do.body56:                                        ; preds = %if.then55
  call void @llvm.dbg.declare(metadata %struct.HuffEntry* %SWAP_tmp57, metadata !6280, metadata !1637), !dbg !6282
  %64 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !6283
  %65 = bitcast %struct.HuffEntry* %SWAP_tmp57 to i8*, !dbg !6285
  %66 = bitcast %struct.HuffEntry* %64 to i8*, !dbg !6285
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %66, i64 8, i32 4, i1 false), !dbg !6285
  %67 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !6286
  %68 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !6287
  %69 = bitcast %struct.HuffEntry* %67 to i8*, !dbg !6288
  %70 = bitcast %struct.HuffEntry* %68 to i8*, !dbg !6288
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %69, i8* %70, i64 8, i32 4, i1 false), !dbg !6289
  %71 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !6291
  %72 = bitcast %struct.HuffEntry* %71 to i8*, !dbg !6292
  %73 = bitcast %struct.HuffEntry* %SWAP_tmp57 to i8*, !dbg !6292
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %72, i8* %73, i64 8, i32 4, i1 false), !dbg !6293
  br label %do.end58, !dbg !6295

do.end58:                                         ; preds = %do.body56
  br label %if.end60, !dbg !6296

if.else59:                                        ; preds = %if.else51
  store i32 1, i32* %checksort, align 4, !dbg !6298
  br label %if.end60

if.end60:                                         ; preds = %if.else59, %do.end58
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.end50
  %74 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !6300
  %75 = bitcast %struct.HuffEntry* %74 to i8*, !dbg !6300
  %76 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !6303
  %77 = bitcast %struct.HuffEntry* %76 to i8*, !dbg !6303
  %call62 = call i32 @huff_cmp_len12(i8* %75, i8* %77), !dbg !6304
  %cmp63 = icmp sgt i32 %call62, 0, !dbg !6305
  br i1 %cmp63, label %if.then65, label %if.end69, !dbg !6304

if.then65:                                        ; preds = %if.end61
  br label %do.body66, !dbg !6306, !llvm.loop !6309

do.body66:                                        ; preds = %if.then65
  call void @llvm.dbg.declare(metadata %struct.HuffEntry* %SWAP_tmp67, metadata !6311, metadata !1637), !dbg !6313
  %78 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !6314
  %79 = bitcast %struct.HuffEntry* %SWAP_tmp67 to i8*, !dbg !6316
  %80 = bitcast %struct.HuffEntry* %78 to i8*, !dbg !6316
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %79, i8* %80, i64 8, i32 4, i1 false), !dbg !6316
  %81 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !6317
  %82 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !6318
  %83 = bitcast %struct.HuffEntry* %81 to i8*, !dbg !6319
  %84 = bitcast %struct.HuffEntry* %82 to i8*, !dbg !6319
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %83, i8* %84, i64 8, i32 4, i1 false), !dbg !6320
  %85 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !6322
  %86 = bitcast %struct.HuffEntry* %85 to i8*, !dbg !6323
  %87 = bitcast %struct.HuffEntry* %SWAP_tmp67 to i8*, !dbg !6323
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 8, i32 4, i1 false), !dbg !6324
  br label %do.end68, !dbg !6326

do.end68:                                         ; preds = %do.body66
  store i32 0, i32* %checksort, align 4, !dbg !6327
  br label %if.end69, !dbg !6329

if.end69:                                         ; preds = %do.end68, %if.end61
  %88 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !6330
  %89 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !6333
  %add.ptr70 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %89, i64 -2, !dbg !6334
  %cmp71 = icmp eq %struct.HuffEntry* %88, %add.ptr70, !dbg !6335
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !6330

if.then73:                                        ; preds = %if.end69
  br label %while.end183, !dbg !6336

if.end74:                                         ; preds = %if.end69
  br label %do.body75, !dbg !6338, !llvm.loop !6340

do.body75:                                        ; preds = %if.end74
  call void @llvm.dbg.declare(metadata %struct.HuffEntry* %SWAP_tmp76, metadata !6342, metadata !1637), !dbg !6344
  %90 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !6345
  %91 = bitcast %struct.HuffEntry* %SWAP_tmp76 to i8*, !dbg !6347
  %92 = bitcast %struct.HuffEntry* %90 to i8*, !dbg !6347
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %91, i8* %92, i64 8, i32 4, i1 false), !dbg !6347
  %93 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !6348
  %94 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !6349
  %arrayidx77 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %94, i64 -1, !dbg !6349
  %95 = bitcast %struct.HuffEntry* %93 to i8*, !dbg !6349
  %96 = bitcast %struct.HuffEntry* %arrayidx77 to i8*, !dbg !6349
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %95, i8* %96, i64 8, i32 4, i1 false), !dbg !6350
  %97 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !6352
  %arrayidx78 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %97, i64 -1, !dbg !6352
  %98 = bitcast %struct.HuffEntry* %arrayidx78 to i8*, !dbg !6353
  %99 = bitcast %struct.HuffEntry* %SWAP_tmp76 to i8*, !dbg !6353
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %98, i8* %99, i64 8, i32 4, i1 false), !dbg !6354
  br label %do.end79, !dbg !6356

do.end79:                                         ; preds = %do.body75
  br label %while.cond80, !dbg !6357

while.cond80:                                     ; preds = %if.end112, %do.end79
  %100 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !6359
  %101 = load %struct.HuffEntry*, %struct.HuffEntry** %right, align 8, !dbg !6361
  %cmp81 = icmp ule %struct.HuffEntry* %100, %101, !dbg !6362
  br i1 %cmp81, label %while.body83, label %while.end113, !dbg !6363

while.body83:                                     ; preds = %while.cond80
  br label %while.cond84, !dbg !6364

while.cond84:                                     ; preds = %while.body91, %while.body83
  %102 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !6367
  %103 = load %struct.HuffEntry*, %struct.HuffEntry** %right, align 8, !dbg !6369
  %cmp85 = icmp ule %struct.HuffEntry* %102, %103, !dbg !6370
  br i1 %cmp85, label %land.rhs, label %land.end, !dbg !6371

land.rhs:                                         ; preds = %while.cond84
  %104 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !6372
  %105 = bitcast %struct.HuffEntry* %104 to i8*, !dbg !6372
  %106 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !6374
  %add.ptr87 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %106, i64 -1, !dbg !6375
  %107 = bitcast %struct.HuffEntry* %add.ptr87 to i8*, !dbg !6374
  %call88 = call i32 @huff_cmp_len12(i8* %105, i8* %107), !dbg !6376
  %cmp89 = icmp slt i32 %call88, 0, !dbg !6377
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond84
  %108 = phi i1 [ false, %while.cond84 ], [ %cmp89, %land.rhs ]
  br i1 %108, label %while.body91, label %while.end, !dbg !6378

while.body91:                                     ; preds = %land.end
  %109 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !6380
  %incdec.ptr = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %109, i32 1, !dbg !6380
  store %struct.HuffEntry* %incdec.ptr, %struct.HuffEntry** %left, align 8, !dbg !6380
  br label %while.cond84, !dbg !6382, !llvm.loop !6383

while.end:                                        ; preds = %land.end
  br label %while.cond92, !dbg !6385

while.cond92:                                     ; preds = %while.body101, %while.end
  %110 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !6387
  %111 = load %struct.HuffEntry*, %struct.HuffEntry** %right, align 8, !dbg !6389
  %cmp93 = icmp ule %struct.HuffEntry* %110, %111, !dbg !6390
  br i1 %cmp93, label %land.rhs95, label %land.end100, !dbg !6391

land.rhs95:                                       ; preds = %while.cond92
  %112 = load %struct.HuffEntry*, %struct.HuffEntry** %right, align 8, !dbg !6392
  %113 = bitcast %struct.HuffEntry* %112 to i8*, !dbg !6392
  %114 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !6394
  %add.ptr96 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %114, i64 -1, !dbg !6395
  %115 = bitcast %struct.HuffEntry* %add.ptr96 to i8*, !dbg !6394
  %call97 = call i32 @huff_cmp_len12(i8* %113, i8* %115), !dbg !6396
  %cmp98 = icmp sgt i32 %call97, 0, !dbg !6397
  br label %land.end100

land.end100:                                      ; preds = %land.rhs95, %while.cond92
  %116 = phi i1 [ false, %while.cond92 ], [ %cmp98, %land.rhs95 ]
  br i1 %116, label %while.body101, label %while.end103, !dbg !6398

while.body101:                                    ; preds = %land.end100
  %117 = load %struct.HuffEntry*, %struct.HuffEntry** %right, align 8, !dbg !6400
  %incdec.ptr102 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %117, i32 -1, !dbg !6400
  store %struct.HuffEntry* %incdec.ptr102, %struct.HuffEntry** %right, align 8, !dbg !6400
  br label %while.cond92, !dbg !6402, !llvm.loop !6403

while.end103:                                     ; preds = %land.end100
  %118 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !6405
  %119 = load %struct.HuffEntry*, %struct.HuffEntry** %right, align 8, !dbg !6408
  %cmp104 = icmp ule %struct.HuffEntry* %118, %119, !dbg !6409
  br i1 %cmp104, label %if.then106, label %if.end112, !dbg !6405

if.then106:                                       ; preds = %while.end103
  br label %do.body107, !dbg !6410, !llvm.loop !6413

do.body107:                                       ; preds = %if.then106
  call void @llvm.dbg.declare(metadata %struct.HuffEntry* %SWAP_tmp108, metadata !6415, metadata !1637), !dbg !6417
  %120 = load %struct.HuffEntry*, %struct.HuffEntry** %right, align 8, !dbg !6418
  %121 = bitcast %struct.HuffEntry* %SWAP_tmp108 to i8*, !dbg !6420
  %122 = bitcast %struct.HuffEntry* %120 to i8*, !dbg !6420
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %121, i8* %122, i64 8, i32 4, i1 false), !dbg !6420
  %123 = load %struct.HuffEntry*, %struct.HuffEntry** %right, align 8, !dbg !6421
  %124 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !6422
  %125 = bitcast %struct.HuffEntry* %123 to i8*, !dbg !6423
  %126 = bitcast %struct.HuffEntry* %124 to i8*, !dbg !6423
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %125, i8* %126, i64 8, i32 4, i1 false), !dbg !6424
  %127 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !6426
  %128 = bitcast %struct.HuffEntry* %127 to i8*, !dbg !6427
  %129 = bitcast %struct.HuffEntry* %SWAP_tmp108 to i8*, !dbg !6427
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %128, i8* %129, i64 8, i32 4, i1 false), !dbg !6428
  br label %do.end109, !dbg !6430

do.end109:                                        ; preds = %do.body107
  %130 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !6431
  %incdec.ptr110 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %130, i32 1, !dbg !6431
  store %struct.HuffEntry* %incdec.ptr110, %struct.HuffEntry** %left, align 8, !dbg !6431
  %131 = load %struct.HuffEntry*, %struct.HuffEntry** %right, align 8, !dbg !6433
  %incdec.ptr111 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %131, i32 -1, !dbg !6433
  store %struct.HuffEntry* %incdec.ptr111, %struct.HuffEntry** %right, align 8, !dbg !6433
  br label %if.end112, !dbg !6434

if.end112:                                        ; preds = %do.end109, %while.end103
  br label %while.cond80, !dbg !6435, !llvm.loop !6437

while.end113:                                     ; preds = %while.cond80
  br label %do.body114, !dbg !6439, !llvm.loop !6441

do.body114:                                       ; preds = %while.end113
  call void @llvm.dbg.declare(metadata %struct.HuffEntry* %SWAP_tmp115, metadata !6443, metadata !1637), !dbg !6445
  %132 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !6446
  %133 = bitcast %struct.HuffEntry* %SWAP_tmp115 to i8*, !dbg !6448
  %134 = bitcast %struct.HuffEntry* %132 to i8*, !dbg !6448
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %133, i8* %134, i64 8, i32 4, i1 false), !dbg !6448
  %135 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !6449
  %136 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !6450
  %arrayidx116 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %136, i64 -1, !dbg !6450
  %137 = bitcast %struct.HuffEntry* %135 to i8*, !dbg !6450
  %138 = bitcast %struct.HuffEntry* %arrayidx116 to i8*, !dbg !6450
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %137, i8* %138, i64 8, i32 4, i1 false), !dbg !6451
  %139 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !6453
  %arrayidx117 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %139, i64 -1, !dbg !6453
  %140 = bitcast %struct.HuffEntry* %arrayidx117 to i8*, !dbg !6454
  %141 = bitcast %struct.HuffEntry* %SWAP_tmp115 to i8*, !dbg !6454
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %140, i8* %141, i64 8, i32 4, i1 false), !dbg !6455
  br label %do.end118, !dbg !6457

do.end118:                                        ; preds = %do.body114
  %142 = load i32, i32* %checksort, align 4, !dbg !6458
  %tobool119 = icmp ne i32 %142, 0, !dbg !6458
  br i1 %tobool119, label %land.lhs.true, label %if.end143, !dbg !6461

land.lhs.true:                                    ; preds = %do.end118
  %143 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !6462
  %144 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !6464
  %add.ptr120 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %144, i64 -1, !dbg !6465
  %cmp121 = icmp eq %struct.HuffEntry* %143, %add.ptr120, !dbg !6466
  br i1 %cmp121, label %if.then126, label %lor.lhs.false123, !dbg !6467

lor.lhs.false123:                                 ; preds = %land.lhs.true
  %145 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !6468
  %146 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !6470
  %cmp124 = icmp eq %struct.HuffEntry* %145, %146, !dbg !6471
  br i1 %cmp124, label %if.then126, label %if.end143, !dbg !6472

if.then126:                                       ; preds = %lor.lhs.false123, %land.lhs.true
  %147 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !6473
  store %struct.HuffEntry* %147, %struct.HuffEntry** %mid, align 8, !dbg !6476
  br label %while.cond127, !dbg !6477

while.cond127:                                    ; preds = %while.body136, %if.then126
  %148 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !6478
  %149 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !6480
  %cmp128 = icmp ult %struct.HuffEntry* %148, %149, !dbg !6481
  br i1 %cmp128, label %land.rhs130, label %land.end135, !dbg !6482

land.rhs130:                                      ; preds = %while.cond127
  %150 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !6483
  %151 = bitcast %struct.HuffEntry* %150 to i8*, !dbg !6483
  %152 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !6485
  %add.ptr131 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %152, i64 1, !dbg !6486
  %153 = bitcast %struct.HuffEntry* %add.ptr131 to i8*, !dbg !6485
  %call132 = call i32 @huff_cmp_len12(i8* %151, i8* %153), !dbg !6487
  %cmp133 = icmp sle i32 %call132, 0, !dbg !6488
  br label %land.end135

land.end135:                                      ; preds = %land.rhs130, %while.cond127
  %154 = phi i1 [ false, %while.cond127 ], [ %cmp133, %land.rhs130 ]
  br i1 %154, label %while.body136, label %while.end138, !dbg !6489

while.body136:                                    ; preds = %land.end135
  %155 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !6491
  %incdec.ptr137 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %155, i32 1, !dbg !6491
  store %struct.HuffEntry* %incdec.ptr137, %struct.HuffEntry** %mid, align 8, !dbg !6491
  br label %while.cond127, !dbg !6493, !llvm.loop !6494

while.end138:                                     ; preds = %land.end135
  %156 = load %struct.HuffEntry*, %struct.HuffEntry** %mid, align 8, !dbg !6496
  %157 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !6499
  %cmp139 = icmp eq %struct.HuffEntry* %156, %157, !dbg !6500
  br i1 %cmp139, label %if.then141, label %if.end142, !dbg !6496

if.then141:                                       ; preds = %while.end138
  br label %while.end183, !dbg !6501

if.end142:                                        ; preds = %while.end138
  br label %if.end143, !dbg !6503

if.end143:                                        ; preds = %if.end142, %lor.lhs.false123, %do.end118
  %158 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !6505
  %159 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !6508
  %sub.ptr.lhs.cast144 = ptrtoint %struct.HuffEntry* %158 to i64, !dbg !6509
  %sub.ptr.rhs.cast145 = ptrtoint %struct.HuffEntry* %159 to i64, !dbg !6509
  %sub.ptr.sub146 = sub i64 %sub.ptr.lhs.cast144, %sub.ptr.rhs.cast145, !dbg !6509
  %sub.ptr.div147 = sdiv exact i64 %sub.ptr.sub146, 8, !dbg !6509
  %160 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !6510
  %161 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !6511
  %sub.ptr.lhs.cast148 = ptrtoint %struct.HuffEntry* %160 to i64, !dbg !6512
  %sub.ptr.rhs.cast149 = ptrtoint %struct.HuffEntry* %161 to i64, !dbg !6512
  %sub.ptr.sub150 = sub i64 %sub.ptr.lhs.cast148, %sub.ptr.rhs.cast149, !dbg !6512
  %sub.ptr.div151 = sdiv exact i64 %sub.ptr.sub150, 8, !dbg !6512
  %cmp152 = icmp slt i64 %sub.ptr.div147, %sub.ptr.div151, !dbg !6513
  br i1 %cmp152, label %if.then154, label %if.else163, !dbg !6505

if.then154:                                       ; preds = %if.end143
  %162 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !6514
  %163 = bitcast %struct.HuffEntry* %162 to i8*, !dbg !6514
  %164 = load i32, i32* %sp, align 4, !dbg !6517
  %idxprom155 = sext i32 %164 to i64, !dbg !6518
  %arrayidx156 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom155, !dbg !6518
  %arrayidx157 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx156, i64 0, i64 0, !dbg !6518
  store i8* %163, i8** %arrayidx157, align 16, !dbg !6519
  %165 = load %struct.HuffEntry*, %struct.HuffEntry** %right, align 8, !dbg !6520
  %166 = bitcast %struct.HuffEntry* %165 to i8*, !dbg !6520
  %167 = load i32, i32* %sp, align 4, !dbg !6521
  %inc158 = add nsw i32 %167, 1, !dbg !6521
  store i32 %inc158, i32* %sp, align 4, !dbg !6521
  %idxprom159 = sext i32 %167 to i64, !dbg !6522
  %arrayidx160 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom159, !dbg !6522
  %arrayidx161 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx160, i64 0, i64 1, !dbg !6522
  store i8* %166, i8** %arrayidx161, align 8, !dbg !6523
  %168 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !6524
  %add.ptr162 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %168, i64 1, !dbg !6525
  store %struct.HuffEntry* %add.ptr162, %struct.HuffEntry** %start, align 8, !dbg !6526
  br label %if.end172, !dbg !6527

if.else163:                                       ; preds = %if.end143
  %169 = load %struct.HuffEntry*, %struct.HuffEntry** %left, align 8, !dbg !6528
  %add.ptr164 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %169, i64 1, !dbg !6531
  %170 = bitcast %struct.HuffEntry* %add.ptr164 to i8*, !dbg !6528
  %171 = load i32, i32* %sp, align 4, !dbg !6532
  %idxprom165 = sext i32 %171 to i64, !dbg !6533
  %arrayidx166 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom165, !dbg !6533
  %arrayidx167 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx166, i64 0, i64 0, !dbg !6533
  store i8* %170, i8** %arrayidx167, align 16, !dbg !6534
  %172 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !6535
  %173 = bitcast %struct.HuffEntry* %172 to i8*, !dbg !6535
  %174 = load i32, i32* %sp, align 4, !dbg !6536
  %inc168 = add nsw i32 %174, 1, !dbg !6536
  store i32 %inc168, i32* %sp, align 4, !dbg !6536
  %idxprom169 = sext i32 %174 to i64, !dbg !6537
  %arrayidx170 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom169, !dbg !6537
  %arrayidx171 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx170, i64 0, i64 1, !dbg !6537
  store i8* %173, i8** %arrayidx171, align 8, !dbg !6538
  %175 = load %struct.HuffEntry*, %struct.HuffEntry** %right, align 8, !dbg !6539
  store %struct.HuffEntry* %175, %struct.HuffEntry** %end, align 8, !dbg !6540
  br label %if.end172

if.end172:                                        ; preds = %if.else163, %if.then154
  br label %if.end182, !dbg !6541

if.else173:                                       ; preds = %while.body31
  %176 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !6543
  %177 = bitcast %struct.HuffEntry* %176 to i8*, !dbg !6543
  %178 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !6547
  %179 = bitcast %struct.HuffEntry* %178 to i8*, !dbg !6547
  %call174 = call i32 @huff_cmp_len12(i8* %177, i8* %179), !dbg !6548
  %cmp175 = icmp sgt i32 %call174, 0, !dbg !6549
  br i1 %cmp175, label %if.then177, label %if.end181, !dbg !6548

if.then177:                                       ; preds = %if.else173
  br label %do.body178, !dbg !6550, !llvm.loop !6552

do.body178:                                       ; preds = %if.then177
  call void @llvm.dbg.declare(metadata %struct.HuffEntry* %SWAP_tmp179, metadata !6554, metadata !1637), !dbg !6556
  %180 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !6557
  %181 = bitcast %struct.HuffEntry* %SWAP_tmp179 to i8*, !dbg !6559
  %182 = bitcast %struct.HuffEntry* %180 to i8*, !dbg !6559
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %181, i8* %182, i64 8, i32 4, i1 false), !dbg !6559
  %183 = load %struct.HuffEntry*, %struct.HuffEntry** %end, align 8, !dbg !6560
  %184 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !6561
  %185 = bitcast %struct.HuffEntry* %183 to i8*, !dbg !6562
  %186 = bitcast %struct.HuffEntry* %184 to i8*, !dbg !6562
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %185, i8* %186, i64 8, i32 4, i1 false), !dbg !6563
  %187 = load %struct.HuffEntry*, %struct.HuffEntry** %start, align 8, !dbg !6565
  %188 = bitcast %struct.HuffEntry* %187 to i8*, !dbg !6566
  %189 = bitcast %struct.HuffEntry* %SWAP_tmp179 to i8*, !dbg !6566
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %188, i8* %189, i64 8, i32 4, i1 false), !dbg !6567
  br label %do.end180, !dbg !6569

do.end180:                                        ; preds = %do.body178
  br label %if.end181, !dbg !6570

if.end181:                                        ; preds = %do.end180, %if.else173
  br label %while.end183, !dbg !6572

if.end182:                                        ; preds = %if.end172
  br label %while.cond28, !dbg !6574, !llvm.loop !6576

while.end183:                                     ; preds = %if.end181, %if.then141, %if.then73, %while.cond28
  br label %while.cond, !dbg !6578, !llvm.loop !6580

while.end184:                                     ; preds = %while.cond
  br label %do.end185, !dbg !6582

do.end185:                                        ; preds = %while.end184
  store i32 1, i32* %code, align 4, !dbg !6584
  store i32 4095, i32* %i, align 4, !dbg !6585
  br label %for.cond186, !dbg !6587

for.cond186:                                      ; preds = %for.inc214, %do.end185
  %190 = load i32, i32* %i, align 4, !dbg !6588
  %cmp187 = icmp sge i32 %190, 0, !dbg !6591
  br i1 %cmp187, label %for.body189, label %for.end216, !dbg !6592

for.body189:                                      ; preds = %for.cond186
  %191 = load i32, i32* %code, align 4, !dbg !6593
  %192 = load i32, i32* %i, align 4, !dbg !6595
  %idxprom190 = sext i32 %192 to i64, !dbg !6596
  %arrayidx191 = getelementptr inbounds [4096 x %struct.HuffEntry], [4096 x %struct.HuffEntry]* %he, i64 0, i64 %idxprom190, !dbg !6596
  %len192 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %arrayidx191, i32 0, i32 1, !dbg !6597
  %193 = load i8, i8* %len192, align 2, !dbg !6597
  %conv193 = zext i8 %193 to i32, !dbg !6596
  %sub194 = sub nsw i32 32, %conv193, !dbg !6598
  %shr195 = lshr i32 %191, %sub194, !dbg !6599
  %194 = load i32, i32* %i, align 4, !dbg !6600
  %idxprom196 = sext i32 %194 to i64, !dbg !6601
  %arrayidx197 = getelementptr inbounds [4096 x i32], [4096 x i32]* %codes, i64 0, i64 %idxprom196, !dbg !6601
  store i32 %shr195, i32* %arrayidx197, align 4, !dbg !6602
  %195 = load i32, i32* %i, align 4, !dbg !6603
  %idxprom198 = sext i32 %195 to i64, !dbg !6604
  %arrayidx199 = getelementptr inbounds [4096 x %struct.HuffEntry], [4096 x %struct.HuffEntry]* %he, i64 0, i64 %idxprom198, !dbg !6604
  %len200 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %arrayidx199, i32 0, i32 1, !dbg !6605
  %196 = load i8, i8* %len200, align 2, !dbg !6605
  %197 = load i32, i32* %i, align 4, !dbg !6606
  %idxprom201 = sext i32 %197 to i64, !dbg !6607
  %arrayidx202 = getelementptr inbounds [4096 x i8], [4096 x i8]* %bits, i64 0, i64 %idxprom201, !dbg !6607
  store i8 %196, i8* %arrayidx202, align 1, !dbg !6608
  %198 = load i32, i32* %i, align 4, !dbg !6609
  %idxprom203 = sext i32 %198 to i64, !dbg !6610
  %arrayidx204 = getelementptr inbounds [4096 x %struct.HuffEntry], [4096 x %struct.HuffEntry]* %he, i64 0, i64 %idxprom203, !dbg !6610
  %sym205 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %arrayidx204, i32 0, i32 0, !dbg !6611
  %199 = load i16, i16* %sym205, align 8, !dbg !6611
  %200 = load i32, i32* %i, align 4, !dbg !6612
  %idxprom206 = sext i32 %200 to i64, !dbg !6613
  %arrayidx207 = getelementptr inbounds [4096 x i16], [4096 x i16]* %syms, i64 0, i64 %idxprom206, !dbg !6613
  store i16 %199, i16* %arrayidx207, align 2, !dbg !6614
  %201 = load i32, i32* %i, align 4, !dbg !6615
  %idxprom208 = sext i32 %201 to i64, !dbg !6616
  %arrayidx209 = getelementptr inbounds [4096 x %struct.HuffEntry], [4096 x %struct.HuffEntry]* %he, i64 0, i64 %idxprom208, !dbg !6616
  %len210 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %arrayidx209, i32 0, i32 1, !dbg !6617
  %202 = load i8, i8* %len210, align 2, !dbg !6617
  %conv211 = zext i8 %202 to i32, !dbg !6616
  %sub212 = sub nsw i32 %conv211, 1, !dbg !6618
  %shr213 = lshr i32 -2147483648, %sub212, !dbg !6619
  %203 = load i32, i32* %code, align 4, !dbg !6620
  %add = add i32 %203, %shr213, !dbg !6620
  store i32 %add, i32* %code, align 4, !dbg !6620
  br label %for.inc214, !dbg !6621

for.inc214:                                       ; preds = %for.body189
  %204 = load i32, i32* %i, align 4, !dbg !6622
  %dec215 = add nsw i32 %204, -1, !dbg !6622
  store i32 %dec215, i32* %i, align 4, !dbg !6622
  br label %for.cond186, !dbg !6624, !llvm.loop !6625

for.end216:                                       ; preds = %for.cond186
  %205 = load %struct.VLC*, %struct.VLC** %vlc.addr, align 8, !dbg !6627
  call void @ff_free_vlc(%struct.VLC* %205), !dbg !6628
  %206 = load %struct.VLC*, %struct.VLC** %vlc.addr, align 8, !dbg !6629
  %arrayidx217 = getelementptr inbounds [4096 x %struct.HuffEntry], [4096 x %struct.HuffEntry]* %he, i64 0, i64 4095, !dbg !6630
  %len218 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %arrayidx217, i32 0, i32 1, !dbg !6631
  %207 = load i8, i8* %len218, align 2, !dbg !6631
  %conv219 = zext i8 %207 to i32, !dbg !6632
  %cmp220 = icmp sgt i32 %conv219, 14, !dbg !6633
  br i1 %cmp220, label %cond.true, label %cond.false, !dbg !6632

cond.true:                                        ; preds = %for.end216
  br label %cond.end, !dbg !6634

cond.false:                                       ; preds = %for.end216
  %arrayidx222 = getelementptr inbounds [4096 x %struct.HuffEntry], [4096 x %struct.HuffEntry]* %he, i64 0, i64 4095, !dbg !6636
  %len223 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %arrayidx222, i32 0, i32 1, !dbg !6638
  %208 = load i8, i8* %len223, align 2, !dbg !6638
  %conv224 = zext i8 %208 to i32, !dbg !6639
  br label %cond.end, !dbg !6640

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 14, %cond.true ], [ %conv224, %cond.false ], !dbg !6641
  %arraydecay225 = getelementptr inbounds [4096 x i8], [4096 x i8]* %bits, i32 0, i32 0, !dbg !6643
  %arraydecay226 = getelementptr inbounds [4096 x i32], [4096 x i32]* %codes, i32 0, i32 0, !dbg !6644
  %209 = bitcast i32* %arraydecay226 to i8*, !dbg !6644
  %arraydecay227 = getelementptr inbounds [4096 x i16], [4096 x i16]* %syms, i32 0, i32 0, !dbg !6645
  %210 = bitcast i16* %arraydecay227 to i8*, !dbg !6645
  %call228 = call i32 @ff_init_vlc_sparse(%struct.VLC* %206, i32 %cond, i32 4096, i8* %arraydecay225, i32 1, i32 1, i8* %209, i32 4, i32 4, i8* %210, i32 2, i32 2, i32 0), !dbg !6646
  store i32 %call228, i32* %retval, align 4, !dbg !6647
  br label %return, !dbg !6647

return:                                           ; preds = %cond.end, %if.then
  %211 = load i32, i32* %retval, align 4, !dbg !6648
  ret i32 %211, !dbg !6648
}

declare i32 @av_pix_fmt_count_planes(i32) #3

declare i32 @ff_set_dimensions(%struct.AVCodecContext*, i32, i32) #3

declare void @av_fast_malloc(i8*, i32*, i64) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits8(%struct.GetBitContext* %s, i8* %buffer, i32 %byte_size) #5 !dbg !6649 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %byte_size.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !6652, metadata !1637), !dbg !6653
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !6654, metadata !1637), !dbg !6655
  store i32 %byte_size, i32* %byte_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %byte_size.addr, metadata !6656, metadata !1637), !dbg !6657
  %0 = load i32, i32* %byte_size.addr, align 4, !dbg !6658
  %cmp = icmp sgt i32 %0, 268435455, !dbg !6660
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6661

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %byte_size.addr, align 4, !dbg !6662
  %cmp1 = icmp slt i32 %1, 0, !dbg !6664
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6665

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %byte_size.addr, align 4, !dbg !6666
  br label %if.end, !dbg !6667

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6668
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !6669
  %4 = load i32, i32* %byte_size.addr, align 4, !dbg !6670
  %mul = mul nsw i32 %4, 8, !dbg !6671
  %call = call i32 @init_get_bits(%struct.GetBitContext* %2, i8* %3, i32 %mul), !dbg !6672
  ret i32 %call, !dbg !6673
}

; Function Attrs: nounwind uwtable
define internal i32 @build_huffman(%struct.AVCodecContext* %avctx, %struct.GetBitContext* %gbit, i32 %max) #0 !dbg !6674 {
entry:
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !6677, metadata !1637), !dbg !6681
  %n.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr.i, metadata !6684, metadata !1637), !dbg !6685
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %gbit.addr = alloca %struct.GetBitContext*, align 8
  %max.addr = alloca i32, align 4
  %s = alloca %struct.MagicYUVContext*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %b = alloca i32, align 4
  %x = alloca i32, align 4
  %l = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !6686, metadata !1637), !dbg !6687
  store %struct.GetBitContext* %gbit, %struct.GetBitContext** %gbit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gbit.addr, metadata !6688, metadata !1637), !dbg !6689
  store i32 %max, i32* %max.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max.addr, metadata !6690, metadata !1637), !dbg !6691
  call void @llvm.dbg.declare(metadata %struct.MagicYUVContext** %s, metadata !6692, metadata !1637), !dbg !6693
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6694
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !6695
  %1 = load i8*, i8** %priv_data, align 8, !dbg !6695
  %2 = bitcast i8* %1 to %struct.MagicYUVContext*, !dbg !6694
  store %struct.MagicYUVContext* %2, %struct.MagicYUVContext** %s, align 8, !dbg !6693
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6696, metadata !1637), !dbg !6697
  store i32 0, i32* %i, align 4, !dbg !6697
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6698, metadata !1637), !dbg !6699
  store i32 0, i32* %j, align 4, !dbg !6699
  call void @llvm.dbg.declare(metadata i32* %k, metadata !6700, metadata !1637), !dbg !6701
  %3 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !6702
  %len = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %3, i32 0, i32 15, !dbg !6703
  %arraydecay = getelementptr inbounds [4 x [4096 x i8]], [4 x [4096 x i8]]* %len, i32 0, i32 0, !dbg !6704
  %4 = bitcast [4096 x i8]* %arraydecay to i8*, !dbg !6704
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 16384, i32 8, i1 false), !dbg !6704
  br label %while.cond, !dbg !6705

while.cond:                                       ; preds = %if.end33, %entry
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %gbit.addr, align 8, !dbg !6706
  %call = call i32 @get_bits_left(%struct.GetBitContext* %5), !dbg !6708
  %cmp = icmp sge i32 %call, 8, !dbg !6709
  br i1 %cmp, label %while.body, label %while.end, !dbg !6710

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %b, metadata !6711, metadata !1637), !dbg !6712
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gbit.addr, align 8, !dbg !6713
  %call1 = call i32 @get_bits(%struct.GetBitContext* %6, i32 1), !dbg !6714
  store i32 %call1, i32* %b, align 4, !dbg !6712
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6715, metadata !1637), !dbg !6716
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gbit.addr, align 8, !dbg !6717
  %call2 = call i32 @get_bits(%struct.GetBitContext* %7, i32 7), !dbg !6718
  store i32 %call2, i32* %x, align 4, !dbg !6716
  call void @llvm.dbg.declare(metadata i32* %l, metadata !6719, metadata !1637), !dbg !6720
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %gbit.addr, align 8, !dbg !6721
  %9 = load i32, i32* %b, align 4, !dbg !6722
  %mul = mul nsw i32 %9, 8, !dbg !6723
  store %struct.GetBitContext* %8, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6724
  store i32 %mul, i32* %n.addr.i, align 4, !dbg !6724
  %10 = load i32, i32* %n.addr.i, align 4, !dbg !6725
  %tobool.i = icmp ne i32 %10, 0, !dbg !6725
  br i1 %tobool.i, label %cond.true.i, label %cond.false.i, !dbg !6725

cond.true.i:                                      ; preds = %while.body
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6726
  %12 = load i32, i32* %n.addr.i, align 4, !dbg !6728
  %call.i = call i32 @get_bits(%struct.GetBitContext* %11, i32 %12) #8, !dbg !6729
  br label %get_bitsz.exit, !dbg !6730

cond.false.i:                                     ; preds = %while.body
  br label %get_bitsz.exit, !dbg !6731

get_bitsz.exit:                                   ; preds = %cond.true.i, %cond.false.i
  %cond.i = phi i32 [ %call.i, %cond.true.i ], [ 0, %cond.false.i ], !dbg !6733
  %add = add nsw i32 %cond.i, 1, !dbg !6735
  store i32 %add, i32* %l, align 4, !dbg !6720
  store i32 0, i32* %k, align 4, !dbg !6736
  br label %for.cond, !dbg !6738

for.cond:                                         ; preds = %for.inc, %get_bitsz.exit
  %13 = load i32, i32* %k, align 4, !dbg !6739
  %14 = load i32, i32* %l, align 4, !dbg !6742
  %cmp4 = icmp slt i32 %13, %14, !dbg !6743
  br i1 %cmp4, label %for.body, label %for.end, !dbg !6744

for.body:                                         ; preds = %for.cond
  %15 = load i32, i32* %j, align 4, !dbg !6745
  %16 = load i32, i32* %k, align 4, !dbg !6747
  %add5 = add nsw i32 %15, %16, !dbg !6748
  %17 = load i32, i32* %max.addr, align 4, !dbg !6749
  %cmp6 = icmp slt i32 %add5, %17, !dbg !6750
  br i1 %cmp6, label %if.then, label %if.end, !dbg !6751

if.then:                                          ; preds = %for.body
  %18 = load i32, i32* %x, align 4, !dbg !6752
  %conv = trunc i32 %18 to i8, !dbg !6752
  %19 = load i32, i32* %j, align 4, !dbg !6753
  %20 = load i32, i32* %k, align 4, !dbg !6754
  %add7 = add nsw i32 %19, %20, !dbg !6755
  %idxprom = sext i32 %add7 to i64, !dbg !6756
  %21 = load i32, i32* %i, align 4, !dbg !6757
  %idxprom8 = sext i32 %21 to i64, !dbg !6756
  %22 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !6756
  %len9 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %22, i32 0, i32 15, !dbg !6758
  %arrayidx = getelementptr inbounds [4 x [4096 x i8]], [4 x [4096 x i8]]* %len9, i64 0, i64 %idxprom8, !dbg !6756
  %arrayidx10 = getelementptr inbounds [4096 x i8], [4096 x i8]* %arrayidx, i64 0, i64 %idxprom, !dbg !6756
  store i8 %conv, i8* %arrayidx10, align 1, !dbg !6759
  br label %if.end, !dbg !6756

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !6760

for.inc:                                          ; preds = %if.end
  %23 = load i32, i32* %k, align 4, !dbg !6762
  %inc = add nsw i32 %23, 1, !dbg !6762
  store i32 %inc, i32* %k, align 4, !dbg !6762
  br label %for.cond, !dbg !6764, !llvm.loop !6765

for.end:                                          ; preds = %for.cond
  %24 = load i32, i32* %l, align 4, !dbg !6767
  %25 = load i32, i32* %j, align 4, !dbg !6768
  %add11 = add nsw i32 %25, %24, !dbg !6768
  store i32 %add11, i32* %j, align 4, !dbg !6768
  %26 = load i32, i32* %j, align 4, !dbg !6769
  %27 = load i32, i32* %max.addr, align 4, !dbg !6771
  %cmp12 = icmp eq i32 %26, %27, !dbg !6772
  br i1 %cmp12, label %if.then14, label %if.else, !dbg !6773

if.then14:                                        ; preds = %for.end
  store i32 0, i32* %j, align 4, !dbg !6774
  %28 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !6776
  %huff_build = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %28, i32 0, i32 17, !dbg !6778
  %29 = load i32 (%struct.VLC*, i8*)*, i32 (%struct.VLC*, i8*)** %huff_build, align 8, !dbg !6778
  %30 = load i32, i32* %i, align 4, !dbg !6779
  %idxprom15 = sext i32 %30 to i64, !dbg !6780
  %31 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !6780
  %vlc = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %31, i32 0, i32 16, !dbg !6781
  %arrayidx16 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* %vlc, i64 0, i64 %idxprom15, !dbg !6780
  %32 = load i32, i32* %i, align 4, !dbg !6782
  %idxprom17 = sext i32 %32 to i64, !dbg !6783
  %33 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !6783
  %len18 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %33, i32 0, i32 15, !dbg !6784
  %arrayidx19 = getelementptr inbounds [4 x [4096 x i8]], [4 x [4096 x i8]]* %len18, i64 0, i64 %idxprom17, !dbg !6783
  %arraydecay20 = getelementptr inbounds [4096 x i8], [4096 x i8]* %arrayidx19, i32 0, i32 0, !dbg !6783
  %call21 = call i32 %29(%struct.VLC* %arrayidx16, i8* %arraydecay20), !dbg !6776
  %tobool = icmp ne i32 %call21, 0, !dbg !6776
  br i1 %tobool, label %if.then22, label %if.end23, !dbg !6785

if.then22:                                        ; preds = %if.then14
  %34 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6786
  %35 = bitcast %struct.AVCodecContext* %34 to i8*, !dbg !6786
  call void (i8*, i32, i8*, ...) @av_log(i8* %35, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i32 0, i32 0)), !dbg !6788
  store i32 -1094995529, i32* %retval, align 4, !dbg !6789
  br label %return, !dbg !6789

if.end23:                                         ; preds = %if.then14
  %36 = load i32, i32* %i, align 4, !dbg !6790
  %inc24 = add nsw i32 %36, 1, !dbg !6790
  store i32 %inc24, i32* %i, align 4, !dbg !6790
  %37 = load i32, i32* %i, align 4, !dbg !6791
  %38 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !6793
  %planes = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %38, i32 0, i32 5, !dbg !6794
  %39 = load i32, i32* %planes, align 8, !dbg !6794
  %cmp25 = icmp eq i32 %37, %39, !dbg !6795
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !6796

if.then27:                                        ; preds = %if.end23
  br label %while.end, !dbg !6797

if.end28:                                         ; preds = %if.end23
  br label %if.end33, !dbg !6799

if.else:                                          ; preds = %for.end
  %40 = load i32, i32* %j, align 4, !dbg !6800
  %41 = load i32, i32* %max.addr, align 4, !dbg !6803
  %cmp29 = icmp sgt i32 %40, %41, !dbg !6804
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !6800

if.then31:                                        ; preds = %if.else
  %42 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6805
  %43 = bitcast %struct.AVCodecContext* %42 to i8*, !dbg !6805
  call void (i8*, i32, i8*, ...) @av_log(i8* %43, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i32 0, i32 0)), !dbg !6807
  store i32 -1094995529, i32* %retval, align 4, !dbg !6808
  br label %return, !dbg !6808

if.end32:                                         ; preds = %if.else
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.end28
  br label %while.cond, !dbg !6809, !llvm.loop !6811

while.end:                                        ; preds = %if.then27, %while.cond
  %44 = load i32, i32* %i, align 4, !dbg !6812
  %45 = load %struct.MagicYUVContext*, %struct.MagicYUVContext** %s, align 8, !dbg !6814
  %planes34 = getelementptr inbounds %struct.MagicYUVContext, %struct.MagicYUVContext* %45, i32 0, i32 5, !dbg !6815
  %46 = load i32, i32* %planes34, align 8, !dbg !6815
  %cmp35 = icmp ne i32 %44, %46, !dbg !6816
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !6817

if.then37:                                        ; preds = %while.end
  %47 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6818
  %48 = bitcast %struct.AVCodecContext* %47 to i8*, !dbg !6818
  call void (i8*, i32, i8*, ...) @av_log(i8* %48, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.14, i32 0, i32 0)), !dbg !6820
  store i32 -1094995529, i32* %retval, align 4, !dbg !6821
  br label %return, !dbg !6821

if.end38:                                         ; preds = %while.end
  store i32 0, i32* %retval, align 4, !dbg !6822
  br label %return, !dbg !6822

return:                                           ; preds = %if.end38, %if.then37, %if.then31, %if.then22
  %49 = load i32, i32* %retval, align 4, !dbg !6823
  ret i32 %49, !dbg !6823
}

declare i32 @ff_thread_get_buffer(%struct.AVCodecContext*, %struct.ThreadFrame*, i32) #3

; Function Attrs: noreturn nounwind
declare void @abort() #6

; Function Attrs: nounwind uwtable
define internal i32 @huff_cmp_len(i8* %a, i8* %b) #0 !dbg !6824 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %aa = alloca %struct.HuffEntry*, align 8
  %bb = alloca %struct.HuffEntry*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !6829, metadata !1637), !dbg !6830
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !6831, metadata !1637), !dbg !6832
  call void @llvm.dbg.declare(metadata %struct.HuffEntry** %aa, metadata !6833, metadata !1637), !dbg !6836
  %0 = load i8*, i8** %a.addr, align 8, !dbg !6837
  %1 = bitcast i8* %0 to %struct.HuffEntry*, !dbg !6837
  store %struct.HuffEntry* %1, %struct.HuffEntry** %aa, align 8, !dbg !6836
  call void @llvm.dbg.declare(metadata %struct.HuffEntry** %bb, metadata !6838, metadata !1637), !dbg !6839
  %2 = load i8*, i8** %b.addr, align 8, !dbg !6840
  %3 = bitcast i8* %2 to %struct.HuffEntry*, !dbg !6840
  store %struct.HuffEntry* %3, %struct.HuffEntry** %bb, align 8, !dbg !6839
  %4 = load %struct.HuffEntry*, %struct.HuffEntry** %aa, align 8, !dbg !6841
  %len = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %4, i32 0, i32 1, !dbg !6842
  %5 = load i8, i8* %len, align 2, !dbg !6842
  %conv = zext i8 %5 to i32, !dbg !6841
  %6 = load %struct.HuffEntry*, %struct.HuffEntry** %bb, align 8, !dbg !6843
  %len1 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %6, i32 0, i32 1, !dbg !6844
  %7 = load i8, i8* %len1, align 2, !dbg !6844
  %conv2 = zext i8 %7 to i32, !dbg !6843
  %sub = sub nsw i32 %conv, %conv2, !dbg !6845
  %mul = mul nsw i32 %sub, 256, !dbg !6846
  %8 = load %struct.HuffEntry*, %struct.HuffEntry** %aa, align 8, !dbg !6847
  %sym = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %8, i32 0, i32 0, !dbg !6848
  %9 = load i16, i16* %sym, align 4, !dbg !6848
  %conv3 = zext i16 %9 to i32, !dbg !6847
  %add = add nsw i32 %mul, %conv3, !dbg !6849
  %10 = load %struct.HuffEntry*, %struct.HuffEntry** %bb, align 8, !dbg !6850
  %sym4 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %10, i32 0, i32 0, !dbg !6851
  %11 = load i16, i16* %sym4, align 4, !dbg !6851
  %conv5 = zext i16 %11 to i32, !dbg !6850
  %sub6 = sub nsw i32 %add, %conv5, !dbg !6852
  ret i32 %sub6, !dbg !6853
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #4

declare void @ff_free_vlc(%struct.VLC*) #3

declare i32 @ff_init_vlc_sparse(%struct.VLC*, i32, i32, i8*, i32, i32, i8*, i32, i32, i8*, i32, i32, i32) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits(%struct.GetBitContext* %s, i32 %n) #5 !dbg !6854 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !3707, metadata !1637), !dbg !6857
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !6859, metadata !1637), !dbg !6860
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6861, metadata !1637), !dbg !6862
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !6863, metadata !1637), !dbg !6864
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !6865, metadata !1637), !dbg !6866
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6867
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !6868
  %1 = load i32, i32* %index, align 8, !dbg !6868
  store i32 %1, i32* %re_index, align 4, !dbg !6866
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !6869, metadata !1637), !dbg !6870
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !6871, metadata !1637), !dbg !6872
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6873
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !6874
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !6874
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !6872
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6875
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !6876
  %5 = load i8*, i8** %buffer, align 8, !dbg !6876
  %6 = load i32, i32* %re_index, align 4, !dbg !6877
  %shr = lshr i32 %6, 3, !dbg !6878
  %idx.ext = zext i32 %shr to i64, !dbg !6879
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !6879
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !6880
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !6880
  %8 = load i32, i32* %l, align 1, !dbg !6880
  store i32 %8, i32* %x.addr.i, align 4, !dbg !6881
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !6882
  %shl.i = shl i32 %9, 8, !dbg !6883
  %and.i = and i32 %shl.i, 65280, !dbg !6884
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !6885
  %shr.i = lshr i32 %10, 8, !dbg !6886
  %and1.i = and i32 %shr.i, 255, !dbg !6887
  %or.i = or i32 %and.i, %and1.i, !dbg !6888
  %shl2.i = shl i32 %or.i, 16, !dbg !6889
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !6890
  %shr3.i = lshr i32 %11, 16, !dbg !6891
  %shl4.i = shl i32 %shr3.i, 8, !dbg !6892
  %and5.i = and i32 %shl4.i, 65280, !dbg !6893
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !6894
  %shr6.i = lshr i32 %12, 16, !dbg !6895
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !6896
  %and8.i = and i32 %shr7.i, 255, !dbg !6897
  %or9.i = or i32 %and5.i, %and8.i, !dbg !6898
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !6899
  %13 = load i32, i32* %re_index, align 4, !dbg !6900
  %and = and i32 %13, 7, !dbg !6901
  %shl = shl i32 %or10.i, %and, !dbg !6902
  store i32 %shl, i32* %re_cache, align 4, !dbg !6903
  %14 = load i32, i32* %re_cache, align 4, !dbg !6904
  %15 = load i32, i32* %n.addr, align 4, !dbg !6905
  %conv = trunc i32 %15 to i8, !dbg !6905
  %call4 = call i32 @NEG_USR32(i32 %14, i8 signext %conv), !dbg !6906
  store i32 %call4, i32* %tmp, align 4, !dbg !6907
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !6908
  %17 = load i32, i32* %re_index, align 4, !dbg !6909
  %18 = load i32, i32* %n.addr, align 4, !dbg !6910
  %add = add i32 %17, %18, !dbg !6911
  %cmp = icmp ugt i32 %16, %add, !dbg !6912
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6913

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !6914
  %20 = load i32, i32* %n.addr, align 4, !dbg !6916
  %add6 = add i32 %19, %20, !dbg !6917
  br label %cond.end, !dbg !6918

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !6919
  br label %cond.end, !dbg !6921

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ %21, %cond.false ], !dbg !6922
  store i32 %cond, i32* %re_index, align 4, !dbg !6924
  %22 = load i32, i32* %re_index, align 4, !dbg !6925
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6926
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !6927
  store i32 %22, i32* %index7, align 8, !dbg !6928
  %24 = load i32, i32* %tmp, align 4, !dbg !6929
  ret i32 %24, !dbg !6930
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_left(%struct.GetBitContext* %gb) #5 !dbg !6931 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !6934, metadata !1637), !dbg !6935
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6936
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 3, !dbg !6937
  %1 = load i32, i32* %size_in_bits, align 4, !dbg !6937
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6938
  %call = call i32 @get_bits_count(%struct.GetBitContext* %2), !dbg !6939
  %sub = sub nsw i32 %1, %call, !dbg !6940
  ret i32 %sub, !dbg !6941
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @NEG_USR32(i32 %a, i8 signext %s) #5 !dbg !6942 {
entry:
  %a.addr = alloca i32, align 4
  %s.addr = alloca i8, align 1
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !6946, metadata !1637), !dbg !6947
  store i8 %s, i8* %s.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %s.addr, metadata !6948, metadata !1637), !dbg !6949
  %0 = load i32, i32* %a.addr, align 4, !dbg !6950
  %1 = load i8, i8* %s.addr, align 1, !dbg !6951
  %conv = sext i8 %1 to i32, !dbg !6951
  %sub = sub nsw i32 0, %conv, !dbg !6952
  %conv1 = trunc i32 %sub to i8, !dbg !6953
  %2 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %conv1, i32 %0) #2, !dbg !6950, !srcloc !6954
  store i32 %2, i32* %a.addr, align 4, !dbg !6950
  %3 = load i32, i32* %a.addr, align 4, !dbg !6955
  ret i32 %3, !dbg !6956
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_count(%struct.GetBitContext* %s) #5 !dbg !6957 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !6962, metadata !1637), !dbg !6963
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6964
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !6965
  %1 = load i32, i32* %index, align 8, !dbg !6965
  ret i32 %1, !dbg !6966
}

; Function Attrs: nounwind uwtable
define internal i32 @huff_cmp_len10(i8* %a, i8* %b) #0 !dbg !6967 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %aa = alloca %struct.HuffEntry*, align 8
  %bb = alloca %struct.HuffEntry*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !6968, metadata !1637), !dbg !6969
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !6970, metadata !1637), !dbg !6971
  call void @llvm.dbg.declare(metadata %struct.HuffEntry** %aa, metadata !6972, metadata !1637), !dbg !6973
  %0 = load i8*, i8** %a.addr, align 8, !dbg !6974
  %1 = bitcast i8* %0 to %struct.HuffEntry*, !dbg !6974
  store %struct.HuffEntry* %1, %struct.HuffEntry** %aa, align 8, !dbg !6973
  call void @llvm.dbg.declare(metadata %struct.HuffEntry** %bb, metadata !6975, metadata !1637), !dbg !6976
  %2 = load i8*, i8** %b.addr, align 8, !dbg !6977
  %3 = bitcast i8* %2 to %struct.HuffEntry*, !dbg !6977
  store %struct.HuffEntry* %3, %struct.HuffEntry** %bb, align 8, !dbg !6976
  %4 = load %struct.HuffEntry*, %struct.HuffEntry** %aa, align 8, !dbg !6978
  %len = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %4, i32 0, i32 1, !dbg !6979
  %5 = load i8, i8* %len, align 2, !dbg !6979
  %conv = zext i8 %5 to i32, !dbg !6978
  %6 = load %struct.HuffEntry*, %struct.HuffEntry** %bb, align 8, !dbg !6980
  %len1 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %6, i32 0, i32 1, !dbg !6981
  %7 = load i8, i8* %len1, align 2, !dbg !6981
  %conv2 = zext i8 %7 to i32, !dbg !6980
  %sub = sub nsw i32 %conv, %conv2, !dbg !6982
  %mul = mul nsw i32 %sub, 1024, !dbg !6983
  %8 = load %struct.HuffEntry*, %struct.HuffEntry** %aa, align 8, !dbg !6984
  %sym = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %8, i32 0, i32 0, !dbg !6985
  %9 = load i16, i16* %sym, align 4, !dbg !6985
  %conv3 = zext i16 %9 to i32, !dbg !6984
  %add = add nsw i32 %mul, %conv3, !dbg !6986
  %10 = load %struct.HuffEntry*, %struct.HuffEntry** %bb, align 8, !dbg !6987
  %sym4 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %10, i32 0, i32 0, !dbg !6988
  %11 = load i16, i16* %sym4, align 4, !dbg !6988
  %conv5 = zext i16 %11 to i32, !dbg !6987
  %sub6 = sub nsw i32 %add, %conv5, !dbg !6989
  ret i32 %sub6, !dbg !6990
}

; Function Attrs: nounwind uwtable
define internal void @magicyuv_median_pred16(i16* %dst, i16* %src1, i16* %diff, i64 %w, i32* %left, i32* %left_top, i32 %max) #0 !dbg !6991 {
entry:
  %dst.addr = alloca i16*, align 8
  %src1.addr = alloca i16*, align 8
  %diff.addr = alloca i16*, align 8
  %w.addr = alloca i64, align 8
  %left.addr = alloca i32*, align 8
  %left_top.addr = alloca i32*, align 8
  %max.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %l = alloca i16, align 2
  %lt = alloca i16, align 2
  store i16* %dst, i16** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %dst.addr, metadata !6995, metadata !1637), !dbg !6996
  store i16* %src1, i16** %src1.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %src1.addr, metadata !6997, metadata !1637), !dbg !6998
  store i16* %diff, i16** %diff.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %diff.addr, metadata !6999, metadata !1637), !dbg !7000
  store i64 %w, i64* %w.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %w.addr, metadata !7001, metadata !1637), !dbg !7002
  store i32* %left, i32** %left.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %left.addr, metadata !7003, metadata !1637), !dbg !7004
  store i32* %left_top, i32** %left_top.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %left_top.addr, metadata !7005, metadata !1637), !dbg !7006
  store i32 %max, i32* %max.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max.addr, metadata !7007, metadata !1637), !dbg !7008
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7009, metadata !1637), !dbg !7010
  call void @llvm.dbg.declare(metadata i16* %l, metadata !7011, metadata !1637), !dbg !7012
  call void @llvm.dbg.declare(metadata i16* %lt, metadata !7013, metadata !1637), !dbg !7014
  %0 = load i32*, i32** %left.addr, align 8, !dbg !7015
  %1 = load i32, i32* %0, align 4, !dbg !7016
  %conv = trunc i32 %1 to i16, !dbg !7016
  store i16 %conv, i16* %l, align 2, !dbg !7017
  %2 = load i32*, i32** %left_top.addr, align 8, !dbg !7018
  %3 = load i32, i32* %2, align 4, !dbg !7019
  %conv1 = trunc i32 %3 to i16, !dbg !7019
  store i16 %conv1, i16* %lt, align 2, !dbg !7020
  store i32 0, i32* %i, align 4, !dbg !7021
  br label %for.cond, !dbg !7023

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !7024
  %conv2 = sext i32 %4 to i64, !dbg !7024
  %5 = load i64, i64* %w.addr, align 8, !dbg !7027
  %cmp = icmp slt i64 %conv2, %5, !dbg !7028
  br i1 %cmp, label %for.body, label %for.end, !dbg !7029

for.body:                                         ; preds = %for.cond
  %6 = load i16, i16* %l, align 2, !dbg !7030
  %conv4 = zext i16 %6 to i32, !dbg !7030
  %7 = load i32, i32* %i, align 4, !dbg !7032
  %idxprom = sext i32 %7 to i64, !dbg !7033
  %8 = load i16*, i16** %src1.addr, align 8, !dbg !7033
  %arrayidx = getelementptr inbounds i16, i16* %8, i64 %idxprom, !dbg !7033
  %9 = load i16, i16* %arrayidx, align 2, !dbg !7033
  %conv5 = zext i16 %9 to i32, !dbg !7033
  %10 = load i16, i16* %l, align 2, !dbg !7034
  %conv6 = zext i16 %10 to i32, !dbg !7034
  %11 = load i32, i32* %i, align 4, !dbg !7035
  %idxprom7 = sext i32 %11 to i64, !dbg !7036
  %12 = load i16*, i16** %src1.addr, align 8, !dbg !7036
  %arrayidx8 = getelementptr inbounds i16, i16* %12, i64 %idxprom7, !dbg !7036
  %13 = load i16, i16* %arrayidx8, align 2, !dbg !7036
  %conv9 = zext i16 %13 to i32, !dbg !7036
  %add = add nsw i32 %conv6, %conv9, !dbg !7037
  %14 = load i16, i16* %lt, align 2, !dbg !7038
  %conv10 = zext i16 %14 to i32, !dbg !7038
  %sub = sub nsw i32 %add, %conv10, !dbg !7039
  %call = call i32 @mid_pred(i32 %conv4, i32 %conv5, i32 %sub) #2, !dbg !7040
  %15 = load i32, i32* %i, align 4, !dbg !7041
  %idxprom11 = sext i32 %15 to i64, !dbg !7042
  %16 = load i16*, i16** %diff.addr, align 8, !dbg !7042
  %arrayidx12 = getelementptr inbounds i16, i16* %16, i64 %idxprom11, !dbg !7042
  %17 = load i16, i16* %arrayidx12, align 2, !dbg !7042
  %conv13 = zext i16 %17 to i32, !dbg !7042
  %add14 = add nsw i32 %call, %conv13, !dbg !7043
  %conv15 = trunc i32 %add14 to i16, !dbg !7040
  store i16 %conv15, i16* %l, align 2, !dbg !7044
  %18 = load i32, i32* %max.addr, align 4, !dbg !7045
  %19 = load i16, i16* %l, align 2, !dbg !7046
  %conv16 = zext i16 %19 to i32, !dbg !7046
  %and = and i32 %conv16, %18, !dbg !7046
  %conv17 = trunc i32 %and to i16, !dbg !7046
  store i16 %conv17, i16* %l, align 2, !dbg !7046
  %20 = load i32, i32* %i, align 4, !dbg !7047
  %idxprom18 = sext i32 %20 to i64, !dbg !7048
  %21 = load i16*, i16** %src1.addr, align 8, !dbg !7048
  %arrayidx19 = getelementptr inbounds i16, i16* %21, i64 %idxprom18, !dbg !7048
  %22 = load i16, i16* %arrayidx19, align 2, !dbg !7048
  store i16 %22, i16* %lt, align 2, !dbg !7049
  %23 = load i16, i16* %l, align 2, !dbg !7050
  %24 = load i32, i32* %i, align 4, !dbg !7051
  %idxprom20 = sext i32 %24 to i64, !dbg !7052
  %25 = load i16*, i16** %dst.addr, align 8, !dbg !7052
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !7052
  store i16 %23, i16* %arrayidx21, align 2, !dbg !7053
  br label %for.inc, !dbg !7054

for.inc:                                          ; preds = %for.body
  %26 = load i32, i32* %i, align 4, !dbg !7055
  %inc = add nsw i32 %26, 1, !dbg !7055
  store i32 %inc, i32* %i, align 4, !dbg !7055
  br label %for.cond, !dbg !7057, !llvm.loop !7058

for.end:                                          ; preds = %for.cond
  %27 = load i16, i16* %l, align 2, !dbg !7060
  %conv22 = zext i16 %27 to i32, !dbg !7060
  %28 = load i32*, i32** %left.addr, align 8, !dbg !7061
  store i32 %conv22, i32* %28, align 4, !dbg !7062
  %29 = load i16, i16* %lt, align 2, !dbg !7063
  %conv23 = zext i16 %29 to i32, !dbg !7063
  %30 = load i32*, i32** %left_top.addr, align 8, !dbg !7064
  store i32 %conv23, i32* %30, align 4, !dbg !7065
  ret void, !dbg !7066
}

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i32 @mid_pred(i32 %a, i32 %b, i32 %c) #7 !dbg !7067 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %c.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !7070, metadata !1637), !dbg !7071
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !7072, metadata !1637), !dbg !7073
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !7074, metadata !1637), !dbg !7075
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7076, metadata !1637), !dbg !7077
  %0 = load i32, i32* %b.addr, align 4, !dbg !7078
  store i32 %0, i32* %i, align 4, !dbg !7077
  %1 = load i32, i32* %i, align 4, !dbg !7079
  %2 = load i32, i32* %a.addr, align 4, !dbg !7079
  %3 = load i32, i32* %b.addr, align 4, !dbg !7080
  %4 = load i32, i32* %c.addr, align 4, !dbg !7081
  %5 = call { i32, i32 } asm "cmp    $2, $1 \0A\09cmovg  $1, $0 \0A\09cmovg  $2, $1 \0A\09cmp    $3, $1 \0A\09cmovl  $3, $1 \0A\09cmp    $1, $0 \0A\09cmovg  $1, $0 \0A\09", "=&r,=&r,r,r,0,1,~{dirflag},~{fpsr},~{flags}"(i32 %3, i32 %4, i32 %1, i32 %2) #2, !dbg !7079, !srcloc !7082
  %asmresult = extractvalue { i32, i32 } %5, 0, !dbg !7079
  %asmresult1 = extractvalue { i32, i32 } %5, 1, !dbg !7079
  store i32 %asmresult, i32* %i, align 4, !dbg !7079
  store i32 %asmresult1, i32* %a.addr, align 4, !dbg !7079
  %6 = load i32, i32* %i, align 4, !dbg !7083
  ret i32 %6, !dbg !7084
}

; Function Attrs: nounwind uwtable
define internal i32 @huff_cmp_len12(i8* %a, i8* %b) #0 !dbg !7085 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %aa = alloca %struct.HuffEntry*, align 8
  %bb = alloca %struct.HuffEntry*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7086, metadata !1637), !dbg !7087
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7088, metadata !1637), !dbg !7089
  call void @llvm.dbg.declare(metadata %struct.HuffEntry** %aa, metadata !7090, metadata !1637), !dbg !7091
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7092
  %1 = bitcast i8* %0 to %struct.HuffEntry*, !dbg !7092
  store %struct.HuffEntry* %1, %struct.HuffEntry** %aa, align 8, !dbg !7091
  call void @llvm.dbg.declare(metadata %struct.HuffEntry** %bb, metadata !7093, metadata !1637), !dbg !7094
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7095
  %3 = bitcast i8* %2 to %struct.HuffEntry*, !dbg !7095
  store %struct.HuffEntry* %3, %struct.HuffEntry** %bb, align 8, !dbg !7094
  %4 = load %struct.HuffEntry*, %struct.HuffEntry** %aa, align 8, !dbg !7096
  %len = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %4, i32 0, i32 1, !dbg !7097
  %5 = load i8, i8* %len, align 2, !dbg !7097
  %conv = zext i8 %5 to i32, !dbg !7096
  %6 = load %struct.HuffEntry*, %struct.HuffEntry** %bb, align 8, !dbg !7098
  %len1 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %6, i32 0, i32 1, !dbg !7099
  %7 = load i8, i8* %len1, align 2, !dbg !7099
  %conv2 = zext i8 %7 to i32, !dbg !7098
  %sub = sub nsw i32 %conv, %conv2, !dbg !7100
  %mul = mul nsw i32 %sub, 4096, !dbg !7101
  %8 = load %struct.HuffEntry*, %struct.HuffEntry** %aa, align 8, !dbg !7102
  %sym = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %8, i32 0, i32 0, !dbg !7103
  %9 = load i16, i16* %sym, align 4, !dbg !7103
  %conv3 = zext i16 %9 to i32, !dbg !7102
  %add = add nsw i32 %mul, %conv3, !dbg !7104
  %10 = load %struct.HuffEntry*, %struct.HuffEntry** %bb, align 8, !dbg !7105
  %sym4 = getelementptr inbounds %struct.HuffEntry, %struct.HuffEntry* %10, i32 0, i32 0, !dbg !7106
  %11 = load i16, i16* %sym4, align 4, !dbg !7106
  %conv5 = zext i16 %11 to i32, !dbg !7105
  %sub6 = sub nsw i32 %add, %conv5, !dbg !7107
  ret i32 %sub6, !dbg !7108
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits(%struct.GetBitContext* %s, i8* %buffer, i32 %bit_size) #5 !dbg !7109 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %bit_size.addr = alloca i32, align 4
  %buffer_size = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7110, metadata !1637), !dbg !7111
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !7112, metadata !1637), !dbg !7113
  store i32 %bit_size, i32* %bit_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit_size.addr, metadata !7114, metadata !1637), !dbg !7115
  call void @llvm.dbg.declare(metadata i32* %buffer_size, metadata !7116, metadata !1637), !dbg !7117
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7118, metadata !1637), !dbg !7119
  store i32 0, i32* %ret, align 4, !dbg !7119
  %0 = load i32, i32* %bit_size.addr, align 4, !dbg !7120
  %cmp = icmp sge i32 %0, 2147483135, !dbg !7122
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7123

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %bit_size.addr, align 4, !dbg !7124
  %cmp1 = icmp slt i32 %1, 0, !dbg !7126
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !7127

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !7128
  %tobool = icmp ne i8* %2, null, !dbg !7128
  br i1 %tobool, label %if.end, label %if.then, !dbg !7130

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %bit_size.addr, align 4, !dbg !7131
  store i8* null, i8** %buffer.addr, align 8, !dbg !7133
  store i32 -1094995529, i32* %ret, align 4, !dbg !7134
  br label %if.end, !dbg !7135

if.end:                                           ; preds = %if.then, %lor.lhs.false2
  %3 = load i32, i32* %bit_size.addr, align 4, !dbg !7136
  %add = add nsw i32 %3, 7, !dbg !7137
  %shr = ashr i32 %add, 3, !dbg !7138
  store i32 %shr, i32* %buffer_size, align 4, !dbg !7139
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !7140
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7141
  %buffer3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 0, !dbg !7142
  store i8* %4, i8** %buffer3, align 8, !dbg !7143
  %6 = load i32, i32* %bit_size.addr, align 4, !dbg !7144
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7145
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %7, i32 0, i32 3, !dbg !7146
  store i32 %6, i32* %size_in_bits, align 4, !dbg !7147
  %8 = load i32, i32* %bit_size.addr, align 4, !dbg !7148
  %add4 = add nsw i32 %8, 8, !dbg !7149
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7150
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 4, !dbg !7151
  store i32 %add4, i32* %size_in_bits_plus8, align 8, !dbg !7152
  %10 = load i8*, i8** %buffer.addr, align 8, !dbg !7153
  %11 = load i32, i32* %buffer_size, align 4, !dbg !7154
  %idx.ext = sext i32 %11 to i64, !dbg !7155
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !7155
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7156
  %buffer_end = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %12, i32 0, i32 1, !dbg !7157
  store i8* %add.ptr, i8** %buffer_end, align 8, !dbg !7158
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7159
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %13, i32 0, i32 2, !dbg !7160
  store i32 0, i32* %index, align 8, !dbg !7161
  %14 = load i32, i32* %ret, align 4, !dbg !7162
  ret i32 %14, !dbg !7163
}

declare void @av_freep(i8*) #3

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1631, !1632}
!llvm.ident = !{!1633}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !887, globals: !906)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--magicyuv.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2 = !{!3, !13, !473, !673, !690, !711, !721, !745, !751, !769, !793, !812, !822, !852, !860, !872, !881}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !4, line: 199, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5 = !{!6, !7, !8, !9, !10, !11, !12}
!6 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!7 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!8 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!9 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!10 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!11 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!12 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !14, line: 215, size: 32, align: 32, elements: !15)
!14 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472}
!16 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!17 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!18 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!19 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!20 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!21 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!22 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!23 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!24 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!25 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!26 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!27 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!28 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!29 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!30 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!31 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!32 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!33 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!34 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!35 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!36 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!37 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!38 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!39 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!40 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!41 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!42 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!43 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!44 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!45 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!46 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!47 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!48 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!49 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!50 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!51 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!52 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!54 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!55 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!56 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!57 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!58 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!59 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!60 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!61 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!62 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!63 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!64 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!65 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!66 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!67 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!68 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!69 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!70 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!71 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!72 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!73 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!74 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!75 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!76 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!77 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!78 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!79 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!80 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!81 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!82 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!83 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!84 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!85 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!86 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!87 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!88 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!89 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!90 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!91 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!94 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!95 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!96 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!97 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!98 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!99 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!100 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!101 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!102 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!103 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!104 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!105 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!106 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!108 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!109 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!110 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!111 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!112 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!113 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!114 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!115 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!116 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!117 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!118 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!119 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!120 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!121 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!122 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!123 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!124 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!125 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!126 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!127 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!128 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!129 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!130 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!131 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!132 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!133 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!134 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!135 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!136 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!137 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!138 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!139 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!140 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!141 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!143 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!144 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!145 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!146 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!147 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!148 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!149 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!150 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!151 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!152 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!153 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!154 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!155 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!156 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!157 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!158 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!159 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!160 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!161 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!162 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!163 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!164 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!166 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!167 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!168 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!169 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!170 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!171 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!172 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!173 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!174 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!175 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!176 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!177 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!178 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!179 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!180 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!181 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!183 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!184 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!185 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!186 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!188 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!189 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!190 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!191 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!192 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!193 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!194 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!195 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!197 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!200 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!201 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!202 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!203 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!204 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!205 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!206 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!207 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!208 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!209 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!210 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!211 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!212 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!213 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!214 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!215 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!216 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!217 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!218 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!219 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!220 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!221 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!222 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!223 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!224 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!225 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!226 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!227 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!228 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!229 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!230 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!231 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!232 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!233 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!234 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!235 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!236 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!237 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!238 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!239 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!240 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!241 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!243 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!244 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!245 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!246 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!247 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!248 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!249 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!250 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!251 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!252 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!254 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!255 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!257 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!258 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!259 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!260 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!261 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!262 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!263 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!265 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!266 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!268 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!269 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!270 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!271 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!273 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!279 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!289 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!290 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!291 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!292 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!293 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!295 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!296 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!297 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!298 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!299 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!300 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!301 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!302 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!303 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!304 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!305 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!306 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!307 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!308 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!309 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!330 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!331 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!332 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!333 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!335 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!336 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!337 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!338 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!339 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!341 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!342 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!343 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!344 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!345 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!346 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!347 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!348 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!349 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!350 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!351 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!352 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!353 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!354 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!355 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!356 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!357 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!358 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!359 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!360 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!361 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!362 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!363 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!364 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!365 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!366 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!367 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!368 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!369 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!370 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!372 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!373 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!375 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!376 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!377 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!379 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!380 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!381 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!382 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!384 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!385 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!386 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!387 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!388 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!389 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!390 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!391 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!392 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!393 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!394 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!395 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!396 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!397 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!398 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!400 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!401 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!402 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!403 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!404 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!405 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!406 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!407 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!408 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!409 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!410 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!411 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!412 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!413 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!414 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!415 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!416 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!417 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!418 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!419 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!420 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!421 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!422 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!423 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!424 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!425 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!426 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!427 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!428 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!429 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!430 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!431 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!432 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!433 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!434 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!435 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!436 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!437 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!438 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!439 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!441 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!442 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!443 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!444 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!445 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!446 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!447 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!449 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!450 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!451 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!452 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!453 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!454 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!455 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!456 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!457 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!458 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!459 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!460 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!461 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!462 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!463 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!465 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!466 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!467 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!468 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!469 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!470 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!471 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!472 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !474, line: 64, size: 32, align: 32, elements: !475)
!474 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!475 = !{!476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672}
!476 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!477 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!478 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!479 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!480 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!481 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!482 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!483 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!484 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!485 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!486 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!487 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!488 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!489 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!490 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!491 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!492 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!493 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!494 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!495 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!496 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!497 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!498 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!499 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!500 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!501 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!502 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!503 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!504 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!505 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!507 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!508 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!509 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!511 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!512 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!513 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!514 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!515 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!516 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!518 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!519 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!520 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!521 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!522 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!523 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!524 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!525 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!526 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!527 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!528 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!531 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!534 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!535 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!536 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!537 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!538 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!541 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!542 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!543 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!544 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!545 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!552 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!553 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!554 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!555 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!556 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!557 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!558 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!560 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!561 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!574 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!575 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!576 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!577 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!578 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!579 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!580 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!581 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!582 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!583 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!584 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!585 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!586 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!587 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!588 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!589 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!590 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!594 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!595 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!596 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!597 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!598 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!599 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!600 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!601 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!602 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!603 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!604 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!605 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!606 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!618 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!619 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!620 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!622 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!623 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!624 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!626 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!627 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!628 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!629 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!630 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!631 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!634 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!638 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!639 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!640 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!641 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!642 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!643 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!644 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!645 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!646 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!647 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!648 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!649 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!650 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!651 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!652 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!653 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!654 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!655 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!656 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!657 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!658 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!659 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!662 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!663 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!664 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!668 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!669 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!670 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!671 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!672 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!673 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !674, line: 58, size: 32, align: 32, elements: !675)
!674 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!675 = !{!676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689}
!676 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!677 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!678 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!679 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!680 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!681 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!682 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!683 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!684 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!685 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!686 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!687 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!688 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!689 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!690 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !691, line: 29, size: 32, align: 32, elements: !692)
!691 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!692 = !{!693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710}
!693 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!694 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!695 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!696 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!697 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!698 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!699 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!700 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!701 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!702 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!703 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!704 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!705 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!706 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!707 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!708 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!709 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!710 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !4, line: 272, size: 32, align: 32, elements: !712)
!712 = !{!713, !714, !715, !716, !717, !718, !719, !720}
!713 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!714 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!715 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!716 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!717 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!718 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!719 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!720 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!721 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !722, line: 48, size: 32, align: 32, elements: !723)
!722 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!723 = !{!724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744}
!724 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!725 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!726 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!727 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!728 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!729 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!730 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!731 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!732 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!733 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!734 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!735 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!736 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!737 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!738 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!739 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!740 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!741 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!742 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!743 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!744 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!745 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !474, line: 516, size: 32, align: 32, elements: !746)
!746 = !{!747, !748, !749, !750}
!747 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!748 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!749 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!750 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!751 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !474, line: 440, size: 32, align: 32, elements: !752)
!752 = !{!753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768}
!753 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!754 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!755 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!756 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!757 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!758 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!759 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!760 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!761 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!762 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!763 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!764 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!765 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!766 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!767 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!768 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!769 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !474, line: 464, size: 32, align: 32, elements: !770)
!770 = !{!771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792}
!771 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!772 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!773 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!774 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!775 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!776 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!777 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!778 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!779 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!780 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!781 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!782 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!783 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!784 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!785 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!786 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!787 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!788 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!789 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!790 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!791 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!792 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!793 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !474, line: 493, size: 32, align: 32, elements: !794)
!794 = !{!795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811}
!795 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!796 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!797 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!798 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!799 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!800 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!801 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!802 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!803 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!804 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!805 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!806 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!807 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!808 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!809 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!810 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!811 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!812 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !474, line: 538, size: 32, align: 32, elements: !813)
!813 = !{!814, !815, !816, !817, !818, !819, !820, !821}
!814 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!815 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!816 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!817 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!818 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!819 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!820 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!821 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!822 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !14, line: 1175, size: 32, align: 32, elements: !823)
!823 = !{!824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851}
!824 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!825 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!826 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!827 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!828 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!829 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!830 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!831 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!832 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!833 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!834 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!835 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!836 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!837 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!838 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!839 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!840 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!841 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!842 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!843 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!844 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!845 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!846 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!847 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!848 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!849 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!850 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!851 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!852 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !14, line: 1534, size: 32, align: 32, elements: !853)
!853 = !{!854, !855, !856, !857, !858, !859}
!854 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!855 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!856 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!857 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!858 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!859 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!860 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !14, line: 810, size: 32, align: 32, elements: !861)
!861 = !{!862, !863, !864, !865, !866, !867, !868, !869, !870, !871}
!862 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!863 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!864 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!865 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!866 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!867 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!868 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!869 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!870 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!871 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!872 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !14, line: 798, size: 32, align: 32, elements: !873)
!873 = !{!874, !875, !876, !877, !878, !879, !880}
!874 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!875 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!876 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!877 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!878 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!879 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!880 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!881 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !14, line: 3865, size: 32, align: 32, elements: !882)
!882 = !{!883, !884, !885, !886}
!883 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!884 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!885 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!886 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!887 = !{!888, !889, !890, !891, !899, !901, !903}
!888 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!889 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64, align: 64)
!892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !893)
!893 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !894, line: 221, size: 32, align: 8, elements: !895)
!894 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!895 = !{!896}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !893, file: !894, line: 221, baseType: !897, size: 32, align: 32)
!897 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !898, line: 51, baseType: !888)
!898 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 64, align: 64)
!900 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !901)
!901 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !898, line: 48, baseType: !902)
!902 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64, align: 64)
!904 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !898, line: 49, baseType: !905)
!905 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!906 = !{!907}
!907 = distinct !DIGlobalVariable(name: "ff_magicyuv_decoder", scope: !0, file: !908, line: 788, type: !909, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_magicyuv_decoder)
!908 = !DIFile(filename: "libavcodec/magicyuv.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!909 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !14, line: 3610, baseType: !910)
!910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !14, line: 3468, size: 1984, align: 64, elements: !911)
!911 = !{!912, !916, !917, !918, !919, !920, !929, !932, !935, !938, !943, !944, !985, !993, !994, !995, !997, !1546, !1552, !1560, !1564, !1565, !1602, !1606, !1610, !1611, !1615, !1619, !1620, !1624, !1625, !1626}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !910, file: !14, line: 3475, baseType: !913, size: 64, align: 64)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64, align: 64)
!914 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !915)
!915 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !910, file: !14, line: 3480, baseType: !913, size: 64, align: 64, offset: 64)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !910, file: !14, line: 3481, baseType: !3, size: 32, align: 32, offset: 128)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !910, file: !14, line: 3482, baseType: !13, size: 32, align: 32, offset: 160)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !910, file: !14, line: 3487, baseType: !889, size: 32, align: 32, offset: 192)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !910, file: !14, line: 3488, baseType: !921, size: 64, align: 64, offset: 256)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64, align: 64)
!922 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !923)
!923 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !924, line: 61, baseType: !925)
!924 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !924, line: 58, size: 64, align: 32, elements: !926)
!926 = !{!927, !928}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !925, file: !924, line: 59, baseType: !889, size: 32, align: 32)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !925, file: !924, line: 60, baseType: !889, size: 32, align: 32, offset: 32)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !910, file: !14, line: 3489, baseType: !930, size: 64, align: 64, offset: 320)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 64, align: 64)
!931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !910, file: !14, line: 3490, baseType: !933, size: 64, align: 64, offset: 384)
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 64, align: 64)
!934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !889)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !910, file: !14, line: 3491, baseType: !936, size: 64, align: 64, offset: 448)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64, align: 64)
!937 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !910, file: !14, line: 3492, baseType: !939, size: 64, align: 64, offset: 512)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 64, align: 64)
!940 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !941)
!941 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !898, line: 55, baseType: !942)
!942 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !910, file: !14, line: 3493, baseType: !901, size: 8, align: 8, offset: 576)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !910, file: !14, line: 3494, baseType: !945, size: 64, align: 64, offset: 640)
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64, align: 64)
!946 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !947)
!947 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !691, line: 143, baseType: !948)
!948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !691, line: 67, size: 640, align: 64, elements: !949)
!949 = !{!950, !951, !955, !959, !960, !961, !962, !966, !972, !974, !978}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !948, file: !691, line: 72, baseType: !913, size: 64, align: 64)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !948, file: !691, line: 78, baseType: !952, size: 64, align: 64, offset: 64)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 64, align: 64)
!953 = !DISubroutineType(types: !954)
!954 = !{!913, !890}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !948, file: !691, line: 85, baseType: !956, size: 64, align: 64, offset: 128)
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64, align: 64)
!957 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !958)
!958 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !691, line: 85, flags: DIFlagFwdDecl)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !948, file: !691, line: 93, baseType: !889, size: 32, align: 32, offset: 192)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !948, file: !691, line: 99, baseType: !889, size: 32, align: 32, offset: 224)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !948, file: !691, line: 108, baseType: !889, size: 32, align: 32, offset: 256)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !948, file: !691, line: 113, baseType: !963, size: 64, align: 64, offset: 320)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 64, align: 64)
!964 = !DISubroutineType(types: !965)
!965 = !{!890, !890, !890}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !948, file: !691, line: 123, baseType: !967, size: 64, align: 64, offset: 384)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 64, align: 64)
!968 = !DISubroutineType(types: !969)
!969 = !{!970, !970}
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 64, align: 64)
!971 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !948)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !948, file: !691, line: 130, baseType: !973, size: 32, align: 32, offset: 448)
!973 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !691, line: 48, baseType: !690)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !948, file: !691, line: 136, baseType: !975, size: 64, align: 64, offset: 512)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64, align: 64)
!976 = !DISubroutineType(types: !977)
!977 = !{!973, !890}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !948, file: !691, line: 142, baseType: !979, size: 64, align: 64, offset: 576)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64, align: 64)
!980 = !DISubroutineType(types: !981)
!981 = !{!889, !982, !890, !913, !889}
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64, align: 64)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64, align: 64)
!984 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !691, line: 60, flags: DIFlagFwdDecl)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !910, file: !14, line: 3495, baseType: !986, size: 64, align: 64, offset: 704)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64, align: 64)
!987 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !988)
!988 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !14, line: 3404, baseType: !989)
!989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !14, line: 3401, size: 128, align: 64, elements: !990)
!990 = !{!991, !992}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !989, file: !14, line: 3402, baseType: !889, size: 32, align: 32)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !989, file: !14, line: 3403, baseType: !913, size: 64, align: 64, offset: 64)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !910, file: !14, line: 3507, baseType: !913, size: 64, align: 64, offset: 768)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !910, file: !14, line: 3516, baseType: !889, size: 32, align: 32, offset: 832)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !910, file: !14, line: 3517, baseType: !996, size: 64, align: 64, offset: 896)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 64, align: 64)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !910, file: !14, line: 3527, baseType: !998, size: 64, align: 64, offset: 960)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64, align: 64)
!999 = !DISubroutineType(types: !1000)
!1000 = !{!889, !1001}
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64, align: 64)
!1002 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !14, line: 3360, baseType: !1003)
!1003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !14, line: 1556, size: 8448, align: 64, elements: !1004)
!1004 = !{!1005, !1006, !1007, !1008, !1011, !1012, !1013, !1014, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1297, !1301, !1302, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1484, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1003, file: !14, line: 1561, baseType: !945, size: 64, align: 64)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1003, file: !14, line: 1562, baseType: !889, size: 32, align: 32, offset: 64)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1003, file: !14, line: 1564, baseType: !3, size: 32, align: 32, offset: 96)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1003, file: !14, line: 1565, baseType: !1009, size: 64, align: 64, offset: 128)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64, align: 64)
!1010 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !910)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1003, file: !14, line: 1566, baseType: !13, size: 32, align: 32, offset: 192)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1003, file: !14, line: 1581, baseType: !888, size: 32, align: 32, offset: 224)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1003, file: !14, line: 1583, baseType: !890, size: 64, align: 64, offset: 256)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1003, file: !14, line: 1591, baseType: !1015, size: 64, align: 64, offset: 320)
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 64, align: 64)
!1016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1017, line: 129, size: 1664, align: 64, elements: !1018)
!1017 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1018 = !{!1019, !1020, !1021, !1022, !1123, !1144, !1145, !1174, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1016, file: !1017, line: 136, baseType: !889, size: 32, align: 32)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1016, file: !1017, line: 151, baseType: !889, size: 32, align: 32, offset: 32)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1016, file: !1017, line: 157, baseType: !889, size: 32, align: 32, offset: 64)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1016, file: !1017, line: 159, baseType: !1023, size: 64, align: 64, offset: 128)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 64, align: 64)
!1024 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !722, line: 646, baseType: !1025)
!1025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !722, line: 268, size: 4288, align: 64, elements: !1026)
!1026 = !{!1027, !1032, !1034, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1075, !1077, !1078, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1111, !1112, !1113, !1114, !1115, !1116, !1119, !1120, !1121, !1122}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1025, file: !722, line: 282, baseType: !1028, size: 512, align: 64)
!1028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1029, size: 512, align: 64, elements: !1030)
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64, align: 64)
!1030 = !{!1031}
!1031 = !DISubrange(count: 8)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1025, file: !722, line: 299, baseType: !1033, size: 256, align: 32, offset: 512)
!1033 = !DICompositeType(tag: DW_TAG_array_type, baseType: !889, size: 256, align: 32, elements: !1030)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1025, file: !722, line: 315, baseType: !1035, size: 64, align: 64, offset: 768)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 64, align: 64)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1025, file: !722, line: 326, baseType: !889, size: 32, align: 32, offset: 832)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1025, file: !722, line: 326, baseType: !889, size: 32, align: 32, offset: 864)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1025, file: !722, line: 334, baseType: !889, size: 32, align: 32, offset: 896)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1025, file: !722, line: 341, baseType: !889, size: 32, align: 32, offset: 928)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1025, file: !722, line: 346, baseType: !889, size: 32, align: 32, offset: 960)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1025, file: !722, line: 351, baseType: !711, size: 32, align: 32, offset: 992)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1025, file: !722, line: 356, baseType: !923, size: 64, align: 32, offset: 1024)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1025, file: !722, line: 361, baseType: !1044, size: 64, align: 64, offset: 1088)
!1044 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !1045, line: 197, baseType: !1046)
!1045 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1046 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1025, file: !722, line: 369, baseType: !1044, size: 64, align: 64, offset: 1152)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1025, file: !722, line: 377, baseType: !1044, size: 64, align: 64, offset: 1216)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1025, file: !722, line: 382, baseType: !889, size: 32, align: 32, offset: 1280)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1025, file: !722, line: 386, baseType: !889, size: 32, align: 32, offset: 1312)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1025, file: !722, line: 391, baseType: !889, size: 32, align: 32, offset: 1344)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1025, file: !722, line: 396, baseType: !890, size: 64, align: 64, offset: 1408)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1025, file: !722, line: 403, baseType: !1054, size: 512, align: 64, offset: 1472)
!1054 = !DICompositeType(tag: DW_TAG_array_type, baseType: !941, size: 512, align: 64, elements: !1030)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1025, file: !722, line: 410, baseType: !889, size: 32, align: 32, offset: 1984)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1025, file: !722, line: 415, baseType: !889, size: 32, align: 32, offset: 2016)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1025, file: !722, line: 420, baseType: !889, size: 32, align: 32, offset: 2048)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1025, file: !722, line: 425, baseType: !889, size: 32, align: 32, offset: 2080)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1025, file: !722, line: 435, baseType: !1044, size: 64, align: 64, offset: 2112)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1025, file: !722, line: 440, baseType: !889, size: 32, align: 32, offset: 2176)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1025, file: !722, line: 445, baseType: !941, size: 64, align: 64, offset: 2240)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1025, file: !722, line: 459, baseType: !1063, size: 512, align: 64, offset: 2304)
!1063 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1064, size: 512, align: 64, elements: !1030)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64, align: 64)
!1065 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1066, line: 94, baseType: !1067)
!1066 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1066, line: 81, size: 192, align: 64, elements: !1068)
!1068 = !{!1069, !1073, !1074}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1067, file: !1066, line: 82, baseType: !1070, size: 64, align: 64)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 64, align: 64)
!1071 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1066, line: 73, baseType: !1072)
!1072 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1066, line: 73, flags: DIFlagFwdDecl)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1067, file: !1066, line: 89, baseType: !1029, size: 64, align: 64, offset: 64)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1067, file: !1066, line: 93, baseType: !889, size: 32, align: 32, offset: 128)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1025, file: !722, line: 473, baseType: !1076, size: 64, align: 64, offset: 2816)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64, align: 64)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1025, file: !722, line: 477, baseType: !889, size: 32, align: 32, offset: 2880)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1025, file: !722, line: 479, baseType: !1079, size: 64, align: 64, offset: 2944)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 64, align: 64)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64, align: 64)
!1081 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !722, line: 207, baseType: !1082)
!1082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !722, line: 201, size: 320, align: 64, elements: !1083)
!1083 = !{!1084, !1085, !1086, !1087, !1092}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1082, file: !722, line: 202, baseType: !721, size: 32, align: 32)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1082, file: !722, line: 203, baseType: !1029, size: 64, align: 64, offset: 64)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1082, file: !722, line: 204, baseType: !889, size: 32, align: 32, offset: 128)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1082, file: !722, line: 205, baseType: !1088, size: 64, align: 64, offset: 192)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64, align: 64)
!1089 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1090, line: 86, baseType: !1091)
!1090 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1091 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1090, line: 86, flags: DIFlagFwdDecl)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1082, file: !722, line: 206, baseType: !1064, size: 64, align: 64, offset: 256)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1025, file: !722, line: 480, baseType: !889, size: 32, align: 32, offset: 3008)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1025, file: !722, line: 505, baseType: !889, size: 32, align: 32, offset: 3040)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1025, file: !722, line: 512, baseType: !745, size: 32, align: 32, offset: 3072)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1025, file: !722, line: 514, baseType: !751, size: 32, align: 32, offset: 3104)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1025, file: !722, line: 516, baseType: !769, size: 32, align: 32, offset: 3136)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1025, file: !722, line: 523, baseType: !793, size: 32, align: 32, offset: 3168)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1025, file: !722, line: 525, baseType: !812, size: 32, align: 32, offset: 3200)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1025, file: !722, line: 532, baseType: !1044, size: 64, align: 64, offset: 3264)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1025, file: !722, line: 539, baseType: !1044, size: 64, align: 64, offset: 3328)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1025, file: !722, line: 547, baseType: !1044, size: 64, align: 64, offset: 3392)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1025, file: !722, line: 554, baseType: !1088, size: 64, align: 64, offset: 3456)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1025, file: !722, line: 563, baseType: !889, size: 32, align: 32, offset: 3520)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1025, file: !722, line: 572, baseType: !889, size: 32, align: 32, offset: 3552)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1025, file: !722, line: 581, baseType: !889, size: 32, align: 32, offset: 3584)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1025, file: !722, line: 588, baseType: !1108, size: 64, align: 64, offset: 3648)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 64, align: 64)
!1109 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !1045, line: 194, baseType: !1110)
!1110 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1025, file: !722, line: 593, baseType: !889, size: 32, align: 32, offset: 3712)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1025, file: !722, line: 596, baseType: !889, size: 32, align: 32, offset: 3744)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1025, file: !722, line: 599, baseType: !1064, size: 64, align: 64, offset: 3776)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1025, file: !722, line: 605, baseType: !1064, size: 64, align: 64, offset: 3840)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1025, file: !722, line: 616, baseType: !1064, size: 64, align: 64, offset: 3904)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1025, file: !722, line: 626, baseType: !1117, size: 64, align: 64, offset: 3968)
!1117 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1118, line: 216, baseType: !942)
!1118 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1025, file: !722, line: 627, baseType: !1117, size: 64, align: 64, offset: 4032)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1025, file: !722, line: 628, baseType: !1117, size: 64, align: 64, offset: 4096)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1025, file: !722, line: 629, baseType: !1117, size: 64, align: 64, offset: 4160)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1025, file: !722, line: 645, baseType: !1064, size: 64, align: 64, offset: 4224)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1016, file: !1017, line: 161, baseType: !1124, size: 64, align: 64, offset: 192)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 64, align: 64)
!1125 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1017, line: 117, baseType: !1126)
!1126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1017, line: 100, size: 832, align: 64, elements: !1127)
!1127 = !{!1128, !1135, !1136, !1137, !1138, !1139, !1141, !1142, !1143}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1126, file: !1017, line: 105, baseType: !1129, size: 256, align: 64)
!1129 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1130, size: 256, align: 64, elements: !1133)
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 64, align: 64)
!1131 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1066, line: 238, baseType: !1132)
!1132 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1066, line: 238, flags: DIFlagFwdDecl)
!1133 = !{!1134}
!1134 = !DISubrange(count: 4)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1126, file: !1017, line: 110, baseType: !889, size: 32, align: 32, offset: 256)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1126, file: !1017, line: 111, baseType: !889, size: 32, align: 32, offset: 288)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1126, file: !1017, line: 111, baseType: !889, size: 32, align: 32, offset: 320)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1126, file: !1017, line: 112, baseType: !1033, size: 256, align: 32, offset: 352)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1126, file: !1017, line: 113, baseType: !1140, size: 128, align: 32, offset: 608)
!1140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !889, size: 128, align: 32, elements: !1133)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1126, file: !1017, line: 114, baseType: !889, size: 32, align: 32, offset: 736)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1126, file: !1017, line: 115, baseType: !889, size: 32, align: 32, offset: 768)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1126, file: !1017, line: 116, baseType: !889, size: 32, align: 32, offset: 800)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1016, file: !1017, line: 163, baseType: !890, size: 64, align: 64, offset: 256)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1016, file: !1017, line: 165, baseType: !1146, size: 128, align: 64, offset: 320)
!1146 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1017, line: 122, baseType: !1147)
!1147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1017, line: 119, size: 128, align: 64, elements: !1148)
!1148 = !{!1149, !1173}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1147, file: !1017, line: 120, baseType: !1150, size: 64, align: 64)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 64, align: 64)
!1151 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !14, line: 1499, baseType: !1152)
!1152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !14, line: 1445, size: 704, align: 64, elements: !1153)
!1153 = !{!1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1169, !1170, !1171, !1172}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1152, file: !14, line: 1451, baseType: !1064, size: 64, align: 64)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1152, file: !14, line: 1461, baseType: !1044, size: 64, align: 64, offset: 64)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1152, file: !14, line: 1467, baseType: !1044, size: 64, align: 64, offset: 128)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1152, file: !14, line: 1468, baseType: !1029, size: 64, align: 64, offset: 192)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1152, file: !14, line: 1469, baseType: !889, size: 32, align: 32, offset: 256)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1152, file: !14, line: 1470, baseType: !889, size: 32, align: 32, offset: 288)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1152, file: !14, line: 1474, baseType: !889, size: 32, align: 32, offset: 320)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1152, file: !14, line: 1479, baseType: !1162, size: 64, align: 64, offset: 384)
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 64, align: 64)
!1163 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !14, line: 1415, baseType: !1164)
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !14, line: 1411, size: 128, align: 64, elements: !1165)
!1165 = !{!1166, !1167, !1168}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1164, file: !14, line: 1412, baseType: !1029, size: 64, align: 64)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1164, file: !14, line: 1413, baseType: !889, size: 32, align: 32, offset: 64)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1164, file: !14, line: 1414, baseType: !822, size: 32, align: 32, offset: 96)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1152, file: !14, line: 1480, baseType: !889, size: 32, align: 32, offset: 448)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1152, file: !14, line: 1486, baseType: !1044, size: 64, align: 64, offset: 512)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1152, file: !14, line: 1488, baseType: !1044, size: 64, align: 64, offset: 576)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1152, file: !14, line: 1497, baseType: !1044, size: 64, align: 64, offset: 640)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1147, file: !1017, line: 121, baseType: !1023, size: 64, align: 64, offset: 64)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1016, file: !1017, line: 166, baseType: !1175, size: 128, align: 64, offset: 448)
!1175 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1017, line: 127, baseType: !1176)
!1176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1017, line: 124, size: 128, align: 64, elements: !1177)
!1177 = !{!1178, !1251}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1176, file: !1017, line: 125, baseType: !1179, size: 64, align: 64)
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 64, align: 64)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64, align: 64)
!1181 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !14, line: 5794, baseType: !1182)
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !14, line: 5747, size: 512, align: 64, elements: !1183)
!1183 = !{!1184, !1185, !1209, !1213, !1214, !1248, !1249, !1250}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1182, file: !14, line: 5751, baseType: !945, size: 64, align: 64)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1182, file: !14, line: 5756, baseType: !1186, size: 64, align: 64, offset: 64)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 64, align: 64)
!1187 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1188)
!1188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !14, line: 5796, size: 512, align: 64, elements: !1189)
!1189 = !{!1190, !1191, !1194, !1195, !1196, !1200, !1204, !1208}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1188, file: !14, line: 5797, baseType: !913, size: 64, align: 64)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1188, file: !14, line: 5804, baseType: !1192, size: 64, align: 64, offset: 64)
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 64, align: 64)
!1193 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1188, file: !14, line: 5815, baseType: !945, size: 64, align: 64, offset: 128)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1188, file: !14, line: 5825, baseType: !889, size: 32, align: 32, offset: 192)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1188, file: !14, line: 5826, baseType: !1197, size: 64, align: 64, offset: 256)
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 64, align: 64)
!1198 = !DISubroutineType(types: !1199)
!1199 = !{!889, !1180}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1188, file: !14, line: 5827, baseType: !1201, size: 64, align: 64, offset: 320)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 64, align: 64)
!1202 = !DISubroutineType(types: !1203)
!1203 = !{!889, !1180, !1150}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1188, file: !14, line: 5828, baseType: !1205, size: 64, align: 64, offset: 384)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 64, align: 64)
!1206 = !DISubroutineType(types: !1207)
!1207 = !{null, !1180}
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1188, file: !14, line: 5829, baseType: !1205, size: 64, align: 64, offset: 448)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1182, file: !14, line: 5762, baseType: !1210, size: 64, align: 64, offset: 128)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 64, align: 64)
!1211 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !14, line: 5735, baseType: !1212)
!1212 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !14, line: 5735, flags: DIFlagFwdDecl)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1182, file: !14, line: 5768, baseType: !890, size: 64, align: 64, offset: 192)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1182, file: !14, line: 5775, baseType: !1215, size: 64, align: 64, offset: 256)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 64, align: 64)
!1216 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !14, line: 4085, baseType: !1217)
!1217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !14, line: 3936, size: 1152, align: 64, elements: !1218)
!1218 = !{!1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1217, file: !14, line: 3940, baseType: !3, size: 32, align: 32)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1217, file: !14, line: 3944, baseType: !13, size: 32, align: 32, offset: 32)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1217, file: !14, line: 3948, baseType: !897, size: 32, align: 32, offset: 64)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1217, file: !14, line: 3958, baseType: !1029, size: 64, align: 64, offset: 128)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1217, file: !14, line: 3962, baseType: !889, size: 32, align: 32, offset: 192)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1217, file: !14, line: 3968, baseType: !889, size: 32, align: 32, offset: 224)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1217, file: !14, line: 3973, baseType: !1044, size: 64, align: 64, offset: 256)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1217, file: !14, line: 3986, baseType: !889, size: 32, align: 32, offset: 320)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1217, file: !14, line: 3999, baseType: !889, size: 32, align: 32, offset: 352)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1217, file: !14, line: 4004, baseType: !889, size: 32, align: 32, offset: 384)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1217, file: !14, line: 4005, baseType: !889, size: 32, align: 32, offset: 416)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1217, file: !14, line: 4010, baseType: !889, size: 32, align: 32, offset: 448)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1217, file: !14, line: 4011, baseType: !889, size: 32, align: 32, offset: 480)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1217, file: !14, line: 4020, baseType: !923, size: 64, align: 32, offset: 512)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1217, file: !14, line: 4025, baseType: !852, size: 32, align: 32, offset: 576)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1217, file: !14, line: 4030, baseType: !745, size: 32, align: 32, offset: 608)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1217, file: !14, line: 4031, baseType: !751, size: 32, align: 32, offset: 640)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1217, file: !14, line: 4032, baseType: !769, size: 32, align: 32, offset: 672)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1217, file: !14, line: 4033, baseType: !793, size: 32, align: 32, offset: 704)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1217, file: !14, line: 4034, baseType: !812, size: 32, align: 32, offset: 736)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1217, file: !14, line: 4039, baseType: !889, size: 32, align: 32, offset: 768)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1217, file: !14, line: 4046, baseType: !941, size: 64, align: 64, offset: 832)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1217, file: !14, line: 4050, baseType: !889, size: 32, align: 32, offset: 896)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1217, file: !14, line: 4054, baseType: !889, size: 32, align: 32, offset: 928)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1217, file: !14, line: 4061, baseType: !889, size: 32, align: 32, offset: 960)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1217, file: !14, line: 4065, baseType: !889, size: 32, align: 32, offset: 992)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1217, file: !14, line: 4073, baseType: !889, size: 32, align: 32, offset: 1024)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1217, file: !14, line: 4080, baseType: !889, size: 32, align: 32, offset: 1056)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1217, file: !14, line: 4084, baseType: !889, size: 32, align: 32, offset: 1088)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1182, file: !14, line: 5781, baseType: !1215, size: 64, align: 64, offset: 320)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1182, file: !14, line: 5787, baseType: !923, size: 64, align: 32, offset: 384)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1182, file: !14, line: 5793, baseType: !923, size: 64, align: 32, offset: 448)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1176, file: !1017, line: 126, baseType: !889, size: 32, align: 32, offset: 64)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1016, file: !1017, line: 172, baseType: !1150, size: 64, align: 64, offset: 576)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1016, file: !1017, line: 177, baseType: !1029, size: 64, align: 64, offset: 640)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1016, file: !1017, line: 178, baseType: !888, size: 32, align: 32, offset: 704)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1016, file: !1017, line: 180, baseType: !890, size: 64, align: 64, offset: 768)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1016, file: !1017, line: 185, baseType: !889, size: 32, align: 32, offset: 832)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1016, file: !1017, line: 190, baseType: !890, size: 64, align: 64, offset: 896)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1016, file: !1017, line: 195, baseType: !889, size: 32, align: 32, offset: 960)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1016, file: !1017, line: 200, baseType: !1150, size: 64, align: 64, offset: 1024)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1016, file: !1017, line: 201, baseType: !889, size: 32, align: 32, offset: 1088)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1016, file: !1017, line: 202, baseType: !1023, size: 64, align: 64, offset: 1152)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1016, file: !1017, line: 203, baseType: !889, size: 32, align: 32, offset: 1216)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1016, file: !1017, line: 205, baseType: !889, size: 32, align: 32, offset: 1248)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1016, file: !1017, line: 206, baseType: !889, size: 32, align: 32, offset: 1280)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1016, file: !1017, line: 209, baseType: !1117, size: 64, align: 64, offset: 1344)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1016, file: !1017, line: 212, baseType: !1117, size: 64, align: 64, offset: 1408)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1016, file: !1017, line: 213, baseType: !1023, size: 64, align: 64, offset: 1472)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1016, file: !1017, line: 215, baseType: !889, size: 32, align: 32, offset: 1536)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1016, file: !1017, line: 217, baseType: !889, size: 32, align: 32, offset: 1568)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1016, file: !1017, line: 220, baseType: !889, size: 32, align: 32, offset: 1600)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1003, file: !14, line: 1598, baseType: !890, size: 64, align: 64, offset: 384)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1003, file: !14, line: 1606, baseType: !1044, size: 64, align: 64, offset: 448)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1003, file: !14, line: 1614, baseType: !889, size: 32, align: 32, offset: 512)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1003, file: !14, line: 1622, baseType: !889, size: 32, align: 32, offset: 544)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1003, file: !14, line: 1628, baseType: !889, size: 32, align: 32, offset: 576)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1003, file: !14, line: 1636, baseType: !889, size: 32, align: 32, offset: 608)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1003, file: !14, line: 1643, baseType: !889, size: 32, align: 32, offset: 640)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1003, file: !14, line: 1657, baseType: !1029, size: 64, align: 64, offset: 704)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1003, file: !14, line: 1658, baseType: !889, size: 32, align: 32, offset: 768)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1003, file: !14, line: 1679, baseType: !923, size: 64, align: 32, offset: 800)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1003, file: !14, line: 1688, baseType: !889, size: 32, align: 32, offset: 864)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1003, file: !14, line: 1712, baseType: !889, size: 32, align: 32, offset: 896)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1003, file: !14, line: 1729, baseType: !889, size: 32, align: 32, offset: 928)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1003, file: !14, line: 1729, baseType: !889, size: 32, align: 32, offset: 960)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1003, file: !14, line: 1744, baseType: !889, size: 32, align: 32, offset: 992)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1003, file: !14, line: 1744, baseType: !889, size: 32, align: 32, offset: 1024)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1003, file: !14, line: 1751, baseType: !889, size: 32, align: 32, offset: 1056)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1003, file: !14, line: 1766, baseType: !473, size: 32, align: 32, offset: 1088)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1003, file: !14, line: 1791, baseType: !1290, size: 64, align: 64, offset: 1152)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 64, align: 64)
!1291 = !DISubroutineType(types: !1292)
!1292 = !{null, !1293, !1294, !1296, !889, !889, !889}
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 64, align: 64)
!1294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 64, align: 64)
!1295 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1024)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64, align: 64)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1003, file: !14, line: 1808, baseType: !1298, size: 64, align: 64, offset: 1216)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64, align: 64)
!1299 = !DISubroutineType(types: !1300)
!1300 = !{!473, !1293, !930}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1003, file: !14, line: 1816, baseType: !889, size: 32, align: 32, offset: 1280)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1003, file: !14, line: 1825, baseType: !1303, size: 32, align: 32, offset: 1312)
!1303 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1003, file: !14, line: 1830, baseType: !889, size: 32, align: 32, offset: 1344)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1003, file: !14, line: 1838, baseType: !1303, size: 32, align: 32, offset: 1376)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1003, file: !14, line: 1846, baseType: !889, size: 32, align: 32, offset: 1408)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1003, file: !14, line: 1851, baseType: !889, size: 32, align: 32, offset: 1440)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1003, file: !14, line: 1861, baseType: !1303, size: 32, align: 32, offset: 1472)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1003, file: !14, line: 1868, baseType: !1303, size: 32, align: 32, offset: 1504)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1003, file: !14, line: 1875, baseType: !1303, size: 32, align: 32, offset: 1536)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1003, file: !14, line: 1882, baseType: !1303, size: 32, align: 32, offset: 1568)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1003, file: !14, line: 1889, baseType: !1303, size: 32, align: 32, offset: 1600)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1003, file: !14, line: 1896, baseType: !1303, size: 32, align: 32, offset: 1632)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1003, file: !14, line: 1903, baseType: !1303, size: 32, align: 32, offset: 1664)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1003, file: !14, line: 1910, baseType: !889, size: 32, align: 32, offset: 1696)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1003, file: !14, line: 1915, baseType: !889, size: 32, align: 32, offset: 1728)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1003, file: !14, line: 1926, baseType: !1296, size: 64, align: 64, offset: 1792)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1003, file: !14, line: 1935, baseType: !923, size: 64, align: 32, offset: 1856)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1003, file: !14, line: 1942, baseType: !889, size: 32, align: 32, offset: 1920)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1003, file: !14, line: 1948, baseType: !889, size: 32, align: 32, offset: 1952)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1003, file: !14, line: 1954, baseType: !889, size: 32, align: 32, offset: 1984)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1003, file: !14, line: 1960, baseType: !889, size: 32, align: 32, offset: 2016)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1003, file: !14, line: 1984, baseType: !889, size: 32, align: 32, offset: 2048)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1003, file: !14, line: 1991, baseType: !889, size: 32, align: 32, offset: 2080)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1003, file: !14, line: 1996, baseType: !889, size: 32, align: 32, offset: 2112)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1003, file: !14, line: 2004, baseType: !889, size: 32, align: 32, offset: 2144)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1003, file: !14, line: 2011, baseType: !889, size: 32, align: 32, offset: 2176)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1003, file: !14, line: 2018, baseType: !889, size: 32, align: 32, offset: 2208)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1003, file: !14, line: 2027, baseType: !889, size: 32, align: 32, offset: 2240)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1003, file: !14, line: 2034, baseType: !889, size: 32, align: 32, offset: 2272)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1003, file: !14, line: 2044, baseType: !889, size: 32, align: 32, offset: 2304)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1003, file: !14, line: 2054, baseType: !903, size: 64, align: 64, offset: 2368)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1003, file: !14, line: 2061, baseType: !903, size: 64, align: 64, offset: 2432)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1003, file: !14, line: 2066, baseType: !889, size: 32, align: 32, offset: 2496)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1003, file: !14, line: 2070, baseType: !889, size: 32, align: 32, offset: 2528)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1003, file: !14, line: 2078, baseType: !889, size: 32, align: 32, offset: 2560)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1003, file: !14, line: 2085, baseType: !889, size: 32, align: 32, offset: 2592)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1003, file: !14, line: 2092, baseType: !889, size: 32, align: 32, offset: 2624)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1003, file: !14, line: 2099, baseType: !889, size: 32, align: 32, offset: 2656)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1003, file: !14, line: 2106, baseType: !889, size: 32, align: 32, offset: 2688)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1003, file: !14, line: 2113, baseType: !889, size: 32, align: 32, offset: 2720)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1003, file: !14, line: 2120, baseType: !889, size: 32, align: 32, offset: 2752)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1003, file: !14, line: 2125, baseType: !889, size: 32, align: 32, offset: 2784)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1003, file: !14, line: 2133, baseType: !889, size: 32, align: 32, offset: 2816)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1003, file: !14, line: 2140, baseType: !889, size: 32, align: 32, offset: 2848)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1003, file: !14, line: 2145, baseType: !889, size: 32, align: 32, offset: 2880)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1003, file: !14, line: 2153, baseType: !889, size: 32, align: 32, offset: 2912)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1003, file: !14, line: 2158, baseType: !889, size: 32, align: 32, offset: 2944)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1003, file: !14, line: 2166, baseType: !751, size: 32, align: 32, offset: 2976)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1003, file: !14, line: 2173, baseType: !769, size: 32, align: 32, offset: 3008)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1003, file: !14, line: 2180, baseType: !793, size: 32, align: 32, offset: 3040)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1003, file: !14, line: 2187, baseType: !745, size: 32, align: 32, offset: 3072)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1003, file: !14, line: 2194, baseType: !812, size: 32, align: 32, offset: 3104)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1003, file: !14, line: 2203, baseType: !889, size: 32, align: 32, offset: 3136)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1003, file: !14, line: 2209, baseType: !852, size: 32, align: 32, offset: 3168)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1003, file: !14, line: 2212, baseType: !889, size: 32, align: 32, offset: 3200)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1003, file: !14, line: 2213, baseType: !889, size: 32, align: 32, offset: 3232)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1003, file: !14, line: 2220, baseType: !673, size: 32, align: 32, offset: 3264)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1003, file: !14, line: 2232, baseType: !889, size: 32, align: 32, offset: 3296)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1003, file: !14, line: 2243, baseType: !889, size: 32, align: 32, offset: 3328)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1003, file: !14, line: 2249, baseType: !889, size: 32, align: 32, offset: 3360)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1003, file: !14, line: 2256, baseType: !889, size: 32, align: 32, offset: 3392)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1003, file: !14, line: 2263, baseType: !941, size: 64, align: 64, offset: 3456)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1003, file: !14, line: 2270, baseType: !941, size: 64, align: 64, offset: 3520)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1003, file: !14, line: 2277, baseType: !860, size: 32, align: 32, offset: 3584)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1003, file: !14, line: 2285, baseType: !673, size: 32, align: 32, offset: 3616)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1003, file: !14, line: 2367, baseType: !1368, size: 64, align: 64, offset: 3648)
!1368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 64, align: 64)
!1369 = !DISubroutineType(types: !1370)
!1370 = !{!889, !1293, !1023, !889}
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1003, file: !14, line: 2383, baseType: !889, size: 32, align: 32, offset: 3712)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1003, file: !14, line: 2386, baseType: !1303, size: 32, align: 32, offset: 3744)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1003, file: !14, line: 2387, baseType: !1303, size: 32, align: 32, offset: 3776)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1003, file: !14, line: 2394, baseType: !889, size: 32, align: 32, offset: 3808)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1003, file: !14, line: 2401, baseType: !889, size: 32, align: 32, offset: 3840)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1003, file: !14, line: 2408, baseType: !889, size: 32, align: 32, offset: 3872)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1003, file: !14, line: 2415, baseType: !889, size: 32, align: 32, offset: 3904)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1003, file: !14, line: 2422, baseType: !889, size: 32, align: 32, offset: 3936)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1003, file: !14, line: 2423, baseType: !1380, size: 64, align: 64, offset: 3968)
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 64, align: 64)
!1381 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !14, line: 831, baseType: !1382)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !14, line: 826, size: 128, align: 32, elements: !1383)
!1383 = !{!1384, !1385, !1386, !1387}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1382, file: !14, line: 827, baseType: !889, size: 32, align: 32)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1382, file: !14, line: 828, baseType: !889, size: 32, align: 32, offset: 32)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1382, file: !14, line: 829, baseType: !889, size: 32, align: 32, offset: 64)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1382, file: !14, line: 830, baseType: !1303, size: 32, align: 32, offset: 96)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1003, file: !14, line: 2430, baseType: !1044, size: 64, align: 64, offset: 4032)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1003, file: !14, line: 2437, baseType: !1044, size: 64, align: 64, offset: 4096)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1003, file: !14, line: 2444, baseType: !1303, size: 32, align: 32, offset: 4160)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1003, file: !14, line: 2451, baseType: !1303, size: 32, align: 32, offset: 4192)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1003, file: !14, line: 2458, baseType: !889, size: 32, align: 32, offset: 4224)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1003, file: !14, line: 2469, baseType: !889, size: 32, align: 32, offset: 4256)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1003, file: !14, line: 2475, baseType: !889, size: 32, align: 32, offset: 4288)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1003, file: !14, line: 2481, baseType: !889, size: 32, align: 32, offset: 4320)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1003, file: !14, line: 2485, baseType: !889, size: 32, align: 32, offset: 4352)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1003, file: !14, line: 2489, baseType: !889, size: 32, align: 32, offset: 4384)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1003, file: !14, line: 2493, baseType: !889, size: 32, align: 32, offset: 4416)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1003, file: !14, line: 2501, baseType: !889, size: 32, align: 32, offset: 4448)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1003, file: !14, line: 2506, baseType: !889, size: 32, align: 32, offset: 4480)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1003, file: !14, line: 2510, baseType: !889, size: 32, align: 32, offset: 4512)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1003, file: !14, line: 2514, baseType: !1044, size: 64, align: 64, offset: 4544)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1003, file: !14, line: 2528, baseType: !1404, size: 64, align: 64, offset: 4608)
!1404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 64, align: 64)
!1405 = !DISubroutineType(types: !1406)
!1406 = !{null, !1293, !890, !889, !889}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1003, file: !14, line: 2534, baseType: !889, size: 32, align: 32, offset: 4672)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1003, file: !14, line: 2545, baseType: !889, size: 32, align: 32, offset: 4704)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1003, file: !14, line: 2547, baseType: !889, size: 32, align: 32, offset: 4736)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1003, file: !14, line: 2549, baseType: !889, size: 32, align: 32, offset: 4768)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1003, file: !14, line: 2551, baseType: !889, size: 32, align: 32, offset: 4800)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1003, file: !14, line: 2553, baseType: !889, size: 32, align: 32, offset: 4832)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1003, file: !14, line: 2555, baseType: !889, size: 32, align: 32, offset: 4864)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1003, file: !14, line: 2557, baseType: !889, size: 32, align: 32, offset: 4896)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1003, file: !14, line: 2559, baseType: !889, size: 32, align: 32, offset: 4928)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1003, file: !14, line: 2563, baseType: !889, size: 32, align: 32, offset: 4960)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1003, file: !14, line: 2571, baseType: !1418, size: 64, align: 64, offset: 4992)
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64, align: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1003, file: !14, line: 2579, baseType: !1418, size: 64, align: 64, offset: 5056)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1003, file: !14, line: 2586, baseType: !889, size: 32, align: 32, offset: 5120)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1003, file: !14, line: 2615, baseType: !889, size: 32, align: 32, offset: 5152)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1003, file: !14, line: 2627, baseType: !889, size: 32, align: 32, offset: 5184)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1003, file: !14, line: 2637, baseType: !889, size: 32, align: 32, offset: 5216)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1003, file: !14, line: 2681, baseType: !889, size: 32, align: 32, offset: 5248)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1003, file: !14, line: 2709, baseType: !1044, size: 64, align: 64, offset: 5312)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1003, file: !14, line: 2716, baseType: !1427, size: 64, align: 64, offset: 5376)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 64, align: 64)
!1428 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1429)
!1429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !14, line: 3636, size: 896, align: 64, elements: !1430)
!1430 = !{!1431, !1432, !1433, !1434, !1435, !1436, !1440, !1444, !1448, !1449, !1450, !1451, !1457, !1458, !1459, !1460, !1461}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1429, file: !14, line: 3642, baseType: !913, size: 64, align: 64)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1429, file: !14, line: 3649, baseType: !3, size: 32, align: 32, offset: 64)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1429, file: !14, line: 3656, baseType: !13, size: 32, align: 32, offset: 96)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1429, file: !14, line: 3663, baseType: !473, size: 32, align: 32, offset: 128)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1429, file: !14, line: 3669, baseType: !889, size: 32, align: 32, offset: 160)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1429, file: !14, line: 3682, baseType: !1437, size: 64, align: 64, offset: 192)
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 64, align: 64)
!1438 = !DISubroutineType(types: !1439)
!1439 = !{!889, !1001, !1023}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1429, file: !14, line: 3698, baseType: !1441, size: 64, align: 64, offset: 256)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 64, align: 64)
!1442 = !DISubroutineType(types: !1443)
!1443 = !{!889, !1001, !899, !897}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1429, file: !14, line: 3712, baseType: !1445, size: 64, align: 64, offset: 320)
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64, align: 64)
!1446 = !DISubroutineType(types: !1447)
!1447 = !{!889, !1001, !889, !899, !897}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1429, file: !14, line: 3726, baseType: !1441, size: 64, align: 64, offset: 384)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1429, file: !14, line: 3737, baseType: !998, size: 64, align: 64, offset: 448)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1429, file: !14, line: 3746, baseType: !889, size: 32, align: 32, offset: 512)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1429, file: !14, line: 3757, baseType: !1452, size: 64, align: 64, offset: 576)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64, align: 64)
!1453 = !DISubroutineType(types: !1454)
!1454 = !{null, !1455}
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 64, align: 64)
!1456 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !14, line: 3617, flags: DIFlagFwdDecl)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1429, file: !14, line: 3766, baseType: !998, size: 64, align: 64, offset: 640)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1429, file: !14, line: 3774, baseType: !998, size: 64, align: 64, offset: 704)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1429, file: !14, line: 3780, baseType: !889, size: 32, align: 32, offset: 768)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1429, file: !14, line: 3785, baseType: !889, size: 32, align: 32, offset: 800)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1429, file: !14, line: 3795, baseType: !1462, size: 64, align: 64, offset: 832)
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 64, align: 64)
!1463 = !DISubroutineType(types: !1464)
!1464 = !{!889, !1001, !1064}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1003, file: !14, line: 2728, baseType: !890, size: 64, align: 64, offset: 5440)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1003, file: !14, line: 2735, baseType: !1054, size: 512, align: 64, offset: 5504)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1003, file: !14, line: 2742, baseType: !889, size: 32, align: 32, offset: 6016)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1003, file: !14, line: 2755, baseType: !889, size: 32, align: 32, offset: 6048)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1003, file: !14, line: 2776, baseType: !889, size: 32, align: 32, offset: 6080)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1003, file: !14, line: 2783, baseType: !889, size: 32, align: 32, offset: 6112)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1003, file: !14, line: 2791, baseType: !889, size: 32, align: 32, offset: 6144)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1003, file: !14, line: 2802, baseType: !1023, size: 64, align: 64, offset: 6208)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1003, file: !14, line: 2811, baseType: !889, size: 32, align: 32, offset: 6272)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1003, file: !14, line: 2821, baseType: !889, size: 32, align: 32, offset: 6304)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1003, file: !14, line: 2830, baseType: !889, size: 32, align: 32, offset: 6336)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1003, file: !14, line: 2840, baseType: !889, size: 32, align: 32, offset: 6368)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1003, file: !14, line: 2851, baseType: !1478, size: 64, align: 64, offset: 6400)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64, align: 64)
!1479 = !DISubroutineType(types: !1480)
!1480 = !{!889, !1293, !1481, !890, !1296, !889, !889}
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 64, align: 64)
!1482 = !DISubroutineType(types: !1483)
!1483 = !{!889, !1293, !890}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1003, file: !14, line: 2871, baseType: !1485, size: 64, align: 64, offset: 6464)
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 64, align: 64)
!1486 = !DISubroutineType(types: !1487)
!1487 = !{!889, !1293, !1488, !890, !1296, !889}
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 64, align: 64)
!1489 = !DISubroutineType(types: !1490)
!1490 = !{!889, !1293, !890, !889, !889}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1003, file: !14, line: 2878, baseType: !889, size: 32, align: 32, offset: 6528)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1003, file: !14, line: 2885, baseType: !889, size: 32, align: 32, offset: 6560)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1003, file: !14, line: 3005, baseType: !889, size: 32, align: 32, offset: 6592)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1003, file: !14, line: 3013, baseType: !872, size: 32, align: 32, offset: 6624)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1003, file: !14, line: 3020, baseType: !872, size: 32, align: 32, offset: 6656)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1003, file: !14, line: 3027, baseType: !872, size: 32, align: 32, offset: 6688)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1003, file: !14, line: 3037, baseType: !1029, size: 64, align: 64, offset: 6720)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1003, file: !14, line: 3038, baseType: !889, size: 32, align: 32, offset: 6784)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1003, file: !14, line: 3050, baseType: !941, size: 64, align: 64, offset: 6848)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1003, file: !14, line: 3065, baseType: !889, size: 32, align: 32, offset: 6912)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1003, file: !14, line: 3083, baseType: !889, size: 32, align: 32, offset: 6944)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1003, file: !14, line: 3092, baseType: !923, size: 64, align: 32, offset: 6976)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1003, file: !14, line: 3099, baseType: !473, size: 32, align: 32, offset: 7040)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1003, file: !14, line: 3106, baseType: !923, size: 64, align: 32, offset: 7072)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1003, file: !14, line: 3113, baseType: !1506, size: 64, align: 64, offset: 7168)
!1506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1507, size: 64, align: 64)
!1507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1508)
!1508 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !14, line: 740, baseType: !1509)
!1509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !14, line: 712, size: 384, align: 64, elements: !1510)
!1510 = !{!1511, !1512, !1513, !1514, !1515, !1516, !1519}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1509, file: !14, line: 713, baseType: !13, size: 32, align: 32)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1509, file: !14, line: 714, baseType: !3, size: 32, align: 32, offset: 32)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1509, file: !14, line: 720, baseType: !913, size: 64, align: 64, offset: 64)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1509, file: !14, line: 724, baseType: !913, size: 64, align: 64, offset: 128)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1509, file: !14, line: 728, baseType: !889, size: 32, align: 32, offset: 192)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1509, file: !14, line: 734, baseType: !1517, size: 64, align: 64, offset: 256)
!1517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1518, size: 64, align: 64)
!1518 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !913)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1509, file: !14, line: 739, baseType: !1520, size: 64, align: 64, offset: 320)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 64, align: 64)
!1521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !989)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1003, file: !14, line: 3129, baseType: !1044, size: 64, align: 64, offset: 7232)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1003, file: !14, line: 3130, baseType: !1044, size: 64, align: 64, offset: 7296)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1003, file: !14, line: 3131, baseType: !1044, size: 64, align: 64, offset: 7360)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1003, file: !14, line: 3132, baseType: !1044, size: 64, align: 64, offset: 7424)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1003, file: !14, line: 3139, baseType: !1418, size: 64, align: 64, offset: 7488)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1003, file: !14, line: 3147, baseType: !889, size: 32, align: 32, offset: 7552)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1003, file: !14, line: 3165, baseType: !889, size: 32, align: 32, offset: 7584)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1003, file: !14, line: 3172, baseType: !889, size: 32, align: 32, offset: 7616)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1003, file: !14, line: 3180, baseType: !889, size: 32, align: 32, offset: 7648)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1003, file: !14, line: 3191, baseType: !903, size: 64, align: 64, offset: 7680)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1003, file: !14, line: 3199, baseType: !1029, size: 64, align: 64, offset: 7744)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1003, file: !14, line: 3207, baseType: !1418, size: 64, align: 64, offset: 7808)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1003, file: !14, line: 3214, baseType: !888, size: 32, align: 32, offset: 7872)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1003, file: !14, line: 3224, baseType: !1162, size: 64, align: 64, offset: 7936)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1003, file: !14, line: 3225, baseType: !889, size: 32, align: 32, offset: 8000)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1003, file: !14, line: 3249, baseType: !1064, size: 64, align: 64, offset: 8064)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1003, file: !14, line: 3256, baseType: !889, size: 32, align: 32, offset: 8128)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1003, file: !14, line: 3271, baseType: !889, size: 32, align: 32, offset: 8160)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1003, file: !14, line: 3279, baseType: !1044, size: 64, align: 64, offset: 8192)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1003, file: !14, line: 3301, baseType: !1064, size: 64, align: 64, offset: 8256)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1003, file: !14, line: 3310, baseType: !889, size: 32, align: 32, offset: 8320)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1003, file: !14, line: 3337, baseType: !889, size: 32, align: 32, offset: 8352)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1003, file: !14, line: 3351, baseType: !889, size: 32, align: 32, offset: 8384)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1003, file: !14, line: 3359, baseType: !889, size: 32, align: 32, offset: 8416)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !910, file: !14, line: 3535, baseType: !1547, size: 64, align: 64, offset: 1024)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 64, align: 64)
!1548 = !DISubroutineType(types: !1549)
!1549 = !{!889, !1001, !1550}
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 64, align: 64)
!1551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1002)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !910, file: !14, line: 3541, baseType: !1553, size: 64, align: 64, offset: 1088)
!1553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 64, align: 64)
!1554 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1555)
!1555 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !14, line: 3461, baseType: !1556)
!1556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1017, line: 223, size: 128, align: 64, elements: !1557)
!1557 = !{!1558, !1559}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1556, file: !1017, line: 224, baseType: !899, size: 64, align: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1556, file: !1017, line: 225, baseType: !899, size: 64, align: 64, offset: 64)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !910, file: !14, line: 3549, baseType: !1561, size: 64, align: 64, offset: 1152)
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 64, align: 64)
!1562 = !DISubroutineType(types: !1563)
!1563 = !{null, !996}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !910, file: !14, line: 3551, baseType: !998, size: 64, align: 64, offset: 1216)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !910, file: !14, line: 3552, baseType: !1566, size: 64, align: 64, offset: 1280)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 64, align: 64)
!1567 = !DISubroutineType(types: !1568)
!1568 = !{!889, !1001, !1029, !889, !1569}
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 64, align: 64)
!1570 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1571)
!1571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !14, line: 3920, size: 256, align: 64, elements: !1572)
!1572 = !{!1573, !1574, !1575, !1576, !1577, !1601}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1571, file: !14, line: 3921, baseType: !904, size: 16, align: 16)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1571, file: !14, line: 3922, baseType: !897, size: 32, align: 32, offset: 32)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1571, file: !14, line: 3923, baseType: !897, size: 32, align: 32, offset: 64)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1571, file: !14, line: 3924, baseType: !888, size: 32, align: 32, offset: 96)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1571, file: !14, line: 3925, baseType: !1578, size: 64, align: 64, offset: 128)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 64, align: 64)
!1579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1580, size: 64, align: 64)
!1580 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !14, line: 3918, baseType: !1581)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !14, line: 3885, size: 1600, align: 64, elements: !1582)
!1582 = !{!1583, !1584, !1585, !1586, !1587, !1588, !1594, !1596, !1597, !1598, !1599, !1600}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1581, file: !14, line: 3886, baseType: !889, size: 32, align: 32)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1581, file: !14, line: 3887, baseType: !889, size: 32, align: 32, offset: 32)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1581, file: !14, line: 3888, baseType: !889, size: 32, align: 32, offset: 64)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1581, file: !14, line: 3889, baseType: !889, size: 32, align: 32, offset: 96)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1581, file: !14, line: 3890, baseType: !889, size: 32, align: 32, offset: 128)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1581, file: !14, line: 3897, baseType: !1589, size: 768, align: 64, offset: 192)
!1589 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !14, line: 3858, baseType: !1590)
!1590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !14, line: 3853, size: 768, align: 64, elements: !1591)
!1591 = !{!1592, !1593}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1590, file: !14, line: 3855, baseType: !1028, size: 512, align: 64)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1590, file: !14, line: 3857, baseType: !1033, size: 256, align: 32, offset: 512)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1581, file: !14, line: 3903, baseType: !1595, size: 256, align: 64, offset: 960)
!1595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1029, size: 256, align: 64, elements: !1133)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1581, file: !14, line: 3904, baseType: !1140, size: 128, align: 32, offset: 1216)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1581, file: !14, line: 3906, baseType: !881, size: 32, align: 32, offset: 1344)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1581, file: !14, line: 3908, baseType: !1418, size: 64, align: 64, offset: 1408)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1581, file: !14, line: 3915, baseType: !1418, size: 64, align: 64, offset: 1472)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1581, file: !14, line: 3917, baseType: !889, size: 32, align: 32, offset: 1536)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1571, file: !14, line: 3926, baseType: !1044, size: 64, align: 64, offset: 192)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !910, file: !14, line: 3564, baseType: !1603, size: 64, align: 64, offset: 1344)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64, align: 64)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!889, !1001, !1150, !1294, !1296}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !910, file: !14, line: 3566, baseType: !1607, size: 64, align: 64, offset: 1408)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64, align: 64)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{!889, !1001, !890, !1296, !1150}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !910, file: !14, line: 3567, baseType: !998, size: 64, align: 64, offset: 1472)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !910, file: !14, line: 3576, baseType: !1612, size: 64, align: 64, offset: 1536)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 64, align: 64)
!1613 = !DISubroutineType(types: !1614)
!1614 = !{!889, !1001, !1294}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !910, file: !14, line: 3577, baseType: !1616, size: 64, align: 64, offset: 1600)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 64, align: 64)
!1617 = !DISubroutineType(types: !1618)
!1618 = !{!889, !1001, !1150}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !910, file: !14, line: 3584, baseType: !1437, size: 64, align: 64, offset: 1664)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !910, file: !14, line: 3589, baseType: !1621, size: 64, align: 64, offset: 1728)
!1621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1622, size: 64, align: 64)
!1622 = !DISubroutineType(types: !1623)
!1623 = !{null, !1001}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !910, file: !14, line: 3594, baseType: !889, size: 32, align: 32, offset: 1792)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !910, file: !14, line: 3600, baseType: !913, size: 64, align: 64, offset: 1856)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !910, file: !14, line: 3609, baseType: !1627, size: 64, align: 64, offset: 1920)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 64, align: 64)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 64, align: 64)
!1629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1630)
!1630 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !14, line: 3609, flags: DIFlagFwdDecl)
!1631 = !{i32 2, !"Dwarf Version", i32 4}
!1632 = !{i32 2, !"Debug Info Version", i32 3}
!1633 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!1634 = distinct !DISubprogram(name: "magy_init_thread_copy", scope: !908, file: !908, line: 753, type: !999, isLocal: true, isDefinition: true, scopeLine: 754, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1635)
!1635 = !{}
!1636 = !DILocalVariable(name: "avctx", arg: 1, scope: !1634, file: !908, line: 753, type: !1001)
!1637 = !DIExpression()
!1638 = !DILocation(line: 753, column: 50, scope: !1634)
!1639 = !DILocalVariable(name: "s", scope: !1634, file: !908, line: 755, type: !1640)
!1640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 64, align: 64)
!1641 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagicYUVContext", file: !908, line: 75, baseType: !1642)
!1642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MagicYUVContext", file: !908, line: 53, size: 133376, align: 64, elements: !1643)
!1643 = !{!1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1665, !1667, !1671, !1687, !1692, !1696}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1642, file: !908, line: 54, baseType: !1023, size: 64, align: 64)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1642, file: !908, line: 55, baseType: !889, size: 32, align: 32, offset: 64)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "bps", scope: !1642, file: !908, line: 56, baseType: !889, size: 32, align: 32, offset: 96)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "slice_height", scope: !1642, file: !908, line: 57, baseType: !889, size: 32, align: 32, offset: 128)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "nb_slices", scope: !1642, file: !908, line: 58, baseType: !889, size: 32, align: 32, offset: 160)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1642, file: !908, line: 59, baseType: !889, size: 32, align: 32, offset: 192)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "decorrelate", scope: !1642, file: !908, line: 60, baseType: !889, size: 32, align: 32, offset: 224)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "color_matrix", scope: !1642, file: !908, line: 61, baseType: !889, size: 32, align: 32, offset: 256)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1642, file: !908, line: 62, baseType: !889, size: 32, align: 32, offset: 288)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced", scope: !1642, file: !908, line: 63, baseType: !889, size: 32, align: 32, offset: 320)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1642, file: !908, line: 64, baseType: !1029, size: 64, align: 64, offset: 384)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "hshift", scope: !1642, file: !908, line: 65, baseType: !1140, size: 128, align: 32, offset: 448)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "vshift", scope: !1642, file: !908, line: 66, baseType: !1140, size: 128, align: 32, offset: 576)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1642, file: !908, line: 67, baseType: !1658, size: 256, align: 64, offset: 704)
!1658 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1659, size: 256, align: 64, elements: !1133)
!1659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1660, size: 64, align: 64)
!1660 = !DIDerivedType(tag: DW_TAG_typedef, name: "Slice", file: !908, line: 39, baseType: !1661)
!1661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Slice", file: !908, line: 36, size: 64, align: 32, elements: !1662)
!1662 = !{!1663, !1664}
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1661, file: !908, line: 37, baseType: !897, size: 32, align: 32)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1661, file: !908, line: 38, baseType: !897, size: 32, align: 32, offset: 32)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "slices_size", scope: !1642, file: !908, line: 68, baseType: !1666, size: 128, align: 32, offset: 960)
!1666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !888, size: 128, align: 32, elements: !1133)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1642, file: !908, line: 69, baseType: !1668, size: 131072, align: 8, offset: 1088)
!1668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !901, size: 131072, align: 8, elements: !1669)
!1669 = !{!1134, !1670}
!1670 = !DISubrange(count: 4096)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "vlc", scope: !1642, file: !908, line: 70, baseType: !1672, size: 768, align: 64, offset: 132160)
!1672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1673, size: 768, align: 64, elements: !1133)
!1673 = !DIDerivedType(tag: DW_TAG_typedef, name: "VLC", file: !1674, line: 30, baseType: !1675)
!1674 = !DIFile(filename: "libavcodec/vlc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VLC", file: !1674, line: 26, size: 192, align: 64, elements: !1676)
!1676 = !{!1677, !1678, !1685, !1686}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1675, file: !1674, line: 27, baseType: !889, size: 32, align: 32)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1675, file: !1674, line: 28, baseType: !1679, size: 64, align: 64, offset: 64)
!1679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1680, size: 64, align: 64)
!1680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1681, size: 32, align: 16, elements: !1683)
!1681 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !1045, line: 195, baseType: !1682)
!1682 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!1683 = !{!1684}
!1684 = !DISubrange(count: 2)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "table_size", scope: !1675, file: !1674, line: 29, baseType: !889, size: 32, align: 32, offset: 128)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "table_allocated", scope: !1675, file: !1674, line: 29, baseType: !889, size: 32, align: 32, offset: 160)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "huff_build", scope: !1642, file: !908, line: 71, baseType: !1688, size: 64, align: 64, offset: 132928)
!1688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 64, align: 64)
!1689 = !DISubroutineType(types: !1690)
!1690 = !{!889, !1691, !1029}
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 64, align: 64)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "magy_decode_slice", scope: !1642, file: !908, line: 72, baseType: !1693, size: 64, align: 64, offset: 132992)
!1693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1694, size: 64, align: 64)
!1694 = !DISubroutineType(types: !1695)
!1695 = !{!889, !1001, !890, !889, !889}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "llviddsp", scope: !1642, file: !908, line: 74, baseType: !1697, size: 320, align: 64, offset: 133056)
!1697 = !DIDerivedType(tag: DW_TAG_typedef, name: "LLVidDSPContext", file: !1698, line: 43, baseType: !1699)
!1698 = !DIFile(filename: "libavcodec/lossless_videodsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LLVidDSPContext", file: !1698, line: 31, size: 320, align: 64, elements: !1700)
!1700 = !{!1701, !1706, !1710, !1714, !1720}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "add_bytes", scope: !1699, file: !1698, line: 32, baseType: !1702, size: 64, align: 64)
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 64, align: 64)
!1703 = !DISubroutineType(types: !1704)
!1704 = !{null, !1029, !1029, !1705}
!1705 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1118, line: 149, baseType: !1046)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "add_median_pred", scope: !1699, file: !1698, line: 34, baseType: !1707, size: 64, align: 64, offset: 64)
!1707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 64, align: 64)
!1708 = !DISubroutineType(types: !1709)
!1709 = !{null, !1029, !899, !899, !1705, !1296, !1296}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "add_left_pred", scope: !1699, file: !1698, line: 37, baseType: !1711, size: 64, align: 64, offset: 128)
!1711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1712, size: 64, align: 64)
!1712 = !DISubroutineType(types: !1713)
!1713 = !{!889, !1029, !899, !1705, !889}
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "add_left_pred_int16", scope: !1699, file: !1698, line: 40, baseType: !1715, size: 64, align: 64, offset: 192)
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 64, align: 64)
!1716 = !DISubroutineType(types: !1717)
!1717 = !{!889, !903, !1718, !888, !1705, !888}
!1718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 64, align: 64)
!1719 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !904)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "add_gradient_pred", scope: !1699, file: !1698, line: 42, baseType: !1721, size: 64, align: 64, offset: 256)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 64, align: 64)
!1722 = !DISubroutineType(types: !1723)
!1723 = !{null, !1029, !1724, !1724}
!1724 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1705)
!1725 = !DILocation(line: 755, column: 22, scope: !1634)
!1726 = !DILocation(line: 755, column: 26, scope: !1634)
!1727 = !DILocation(line: 755, column: 33, scope: !1634)
!1728 = !DILocalVariable(name: "i", scope: !1634, file: !908, line: 756, type: !889)
!1729 = !DILocation(line: 756, column: 9, scope: !1634)
!1730 = !DILocation(line: 758, column: 12, scope: !1731)
!1731 = distinct !DILexicalBlock(scope: !1634, file: !908, line: 758, column: 5)
!1732 = !DILocation(line: 758, column: 10, scope: !1731)
!1733 = !DILocation(line: 758, column: 17, scope: !1734)
!1734 = !DILexicalBlockFile(scope: !1735, file: !908, discriminator: 1)
!1735 = distinct !DILexicalBlock(scope: !1731, file: !908, line: 758, column: 5)
!1736 = !DILocation(line: 758, column: 19, scope: !1734)
!1737 = !DILocation(line: 758, column: 5, scope: !1734)
!1738 = !DILocation(line: 759, column: 19, scope: !1739)
!1739 = distinct !DILexicalBlock(scope: !1735, file: !908, line: 758, column: 72)
!1740 = !DILocation(line: 759, column: 9, scope: !1739)
!1741 = !DILocation(line: 759, column: 12, scope: !1739)
!1742 = !DILocation(line: 759, column: 22, scope: !1739)
!1743 = !DILocation(line: 760, column: 24, scope: !1739)
!1744 = !DILocation(line: 760, column: 9, scope: !1739)
!1745 = !DILocation(line: 760, column: 12, scope: !1739)
!1746 = !DILocation(line: 760, column: 27, scope: !1739)
!1747 = !DILocation(line: 761, column: 5, scope: !1739)
!1748 = !DILocation(line: 758, column: 68, scope: !1749)
!1749 = !DILexicalBlockFile(scope: !1735, file: !908, discriminator: 2)
!1750 = !DILocation(line: 758, column: 5, scope: !1749)
!1751 = distinct !{!1751, !1752}
!1752 = !DILocation(line: 758, column: 5, scope: !1634)
!1753 = !DILocation(line: 763, column: 5, scope: !1634)
!1754 = distinct !DISubprogram(name: "magy_decode_init", scope: !908, file: !908, line: 767, type: !999, isLocal: true, isDefinition: true, scopeLine: 768, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1635)
!1755 = !DILocalVariable(name: "avctx", arg: 1, scope: !1754, file: !908, line: 767, type: !1001)
!1756 = !DILocation(line: 767, column: 67, scope: !1754)
!1757 = !DILocalVariable(name: "s", scope: !1754, file: !908, line: 769, type: !1640)
!1758 = !DILocation(line: 769, column: 22, scope: !1754)
!1759 = !DILocation(line: 769, column: 26, scope: !1754)
!1760 = !DILocation(line: 769, column: 33, scope: !1754)
!1761 = !DILocation(line: 770, column: 23, scope: !1754)
!1762 = !DILocation(line: 770, column: 26, scope: !1754)
!1763 = !DILocation(line: 770, column: 5, scope: !1754)
!1764 = !DILocation(line: 771, column: 5, scope: !1754)
!1765 = distinct !DISubprogram(name: "magy_decode_frame", scope: !908, file: !908, line: 516, type: !1608, isLocal: true, isDefinition: true, scopeLine: 518, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1635)
!1766 = !DILocalVariable(name: "b", arg: 1, scope: !1767, file: !1768, line: 95, type: !1771)
!1767 = distinct !DISubprogram(name: "bytestream_get_byte", scope: !1768, file: !1768, line: 95, type: !1769, isLocal: true, isDefinition: true, scopeLine: 95, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1635)
!1768 = !DIFile(filename: "libavcodec/bytestream.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1769 = !DISubroutineType(types: !1770)
!1770 = !{!888, !1771}
!1771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 64, align: 64)
!1772 = !DILocation(line: 95, column: 95, scope: !1767, inlinedAt: !1773)
!1773 = distinct !DILocation(line: 95, column: 855, scope: !1774, inlinedAt: !1784)
!1774 = distinct !DISubprogram(name: "bytestream2_get_byteu", scope: !1768, file: !1768, line: 95, type: !1775, isLocal: true, isDefinition: true, scopeLine: 95, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1635)
!1775 = !DISubroutineType(types: !1776)
!1776 = !{!888, !1777}
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 64, align: 64)
!1778 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetByteContext", file: !1768, line: 35, baseType: !1779)
!1779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetByteContext", file: !1768, line: 33, size: 192, align: 64, elements: !1780)
!1780 = !{!1781, !1782, !1783}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1779, file: !1768, line: 34, baseType: !899, size: 64, align: 64)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1779, file: !1768, line: 34, baseType: !899, size: 64, align: 64, offset: 64)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !1779, file: !1768, line: 34, baseType: !899, size: 64, align: 64, offset: 128)
!1784 = distinct !DILocation(line: 95, column: 1073, scope: !1785, inlinedAt: !1787)
!1785 = !DILexicalBlockFile(scope: !1786, file: !1768, discriminator: 2)
!1786 = distinct !DISubprogram(name: "bytestream2_get_byte", scope: !1768, file: !1768, line: 95, type: !1775, isLocal: true, isDefinition: true, scopeLine: 95, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1635)
!1787 = distinct !DILocation(line: 641, column: 23, scope: !1765)
!1788 = !DILocalVariable(name: "g", arg: 1, scope: !1774, file: !1768, line: 95, type: !1777)
!1789 = !DILocation(line: 95, column: 843, scope: !1774, inlinedAt: !1784)
!1790 = !DILocalVariable(name: "g", arg: 1, scope: !1786, file: !1768, line: 95, type: !1777)
!1791 = !DILocation(line: 95, column: 985, scope: !1786, inlinedAt: !1787)
!1792 = !DILocation(line: 95, column: 95, scope: !1767, inlinedAt: !1793)
!1793 = distinct !DILocation(line: 95, column: 855, scope: !1774, inlinedAt: !1794)
!1794 = distinct !DILocation(line: 95, column: 1073, scope: !1785, inlinedAt: !1795)
!1795 = distinct !DILocation(line: 642, column: 16, scope: !1765)
!1796 = !DILocation(line: 95, column: 843, scope: !1774, inlinedAt: !1794)
!1797 = !DILocation(line: 95, column: 985, scope: !1786, inlinedAt: !1795)
!1798 = !DILocalVariable(name: "g", arg: 1, scope: !1799, file: !1768, line: 164, type: !1777)
!1799 = distinct !DISubprogram(name: "bytestream2_skip", scope: !1768, file: !1768, line: 164, type: !1800, isLocal: true, isDefinition: true, scopeLine: 166, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1635)
!1800 = !DISubroutineType(types: !1801)
!1801 = !{null, !1777, !888}
!1802 = !DILocation(line: 164, column: 84, scope: !1799, inlinedAt: !1803)
!1803 = distinct !DILocation(line: 644, column: 5, scope: !1765)
!1804 = !DILocalVariable(name: "size", arg: 2, scope: !1799, file: !1768, line: 165, type: !888)
!1805 = !DILocation(line: 165, column: 60, scope: !1799, inlinedAt: !1803)
!1806 = !DILocalVariable(name: "b", arg: 1, scope: !1807, file: !1768, line: 88, type: !1771)
!1807 = distinct !DISubprogram(name: "bytestream_get_le32", scope: !1768, file: !1768, line: 88, type: !1769, isLocal: true, isDefinition: true, scopeLine: 88, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1635)
!1808 = !DILocation(line: 88, column: 95, scope: !1807, inlinedAt: !1809)
!1809 = distinct !DILocation(line: 88, column: 868, scope: !1810, inlinedAt: !1811)
!1810 = distinct !DISubprogram(name: "bytestream2_get_le32u", scope: !1768, file: !1768, line: 88, type: !1775, isLocal: true, isDefinition: true, scopeLine: 88, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1635)
!1811 = distinct !DILocation(line: 88, column: 1086, scope: !1812, inlinedAt: !1814)
!1812 = !DILexicalBlockFile(scope: !1813, file: !1768, discriminator: 2)
!1813 = distinct !DISubprogram(name: "bytestream2_get_le32", scope: !1768, file: !1768, line: 88, type: !1775, isLocal: true, isDefinition: true, scopeLine: 88, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1635)
!1814 = distinct !DILocation(line: 646, column: 13, scope: !1765)
!1815 = !DILocalVariable(name: "g", arg: 1, scope: !1810, file: !1768, line: 88, type: !1777)
!1816 = !DILocation(line: 88, column: 856, scope: !1810, inlinedAt: !1811)
!1817 = !DILocalVariable(name: "g", arg: 1, scope: !1813, file: !1768, line: 88, type: !1777)
!1818 = !DILocation(line: 88, column: 998, scope: !1813, inlinedAt: !1814)
!1819 = !DILocation(line: 88, column: 95, scope: !1807, inlinedAt: !1820)
!1820 = distinct !DILocation(line: 88, column: 868, scope: !1810, inlinedAt: !1821)
!1821 = distinct !DILocation(line: 88, column: 1086, scope: !1812, inlinedAt: !1822)
!1822 = distinct !DILocation(line: 647, column: 14, scope: !1765)
!1823 = !DILocation(line: 88, column: 856, scope: !1810, inlinedAt: !1821)
!1824 = !DILocation(line: 88, column: 998, scope: !1813, inlinedAt: !1822)
!1825 = !DILocation(line: 88, column: 95, scope: !1807, inlinedAt: !1826)
!1826 = distinct !DILocation(line: 88, column: 868, scope: !1810, inlinedAt: !1827)
!1827 = distinct !DILocation(line: 88, column: 1086, scope: !1812, inlinedAt: !1828)
!1828 = distinct !DILocation(line: 652, column: 19, scope: !1765)
!1829 = !DILocation(line: 88, column: 856, scope: !1810, inlinedAt: !1827)
!1830 = !DILocation(line: 88, column: 998, scope: !1813, inlinedAt: !1828)
!1831 = !DILocation(line: 88, column: 95, scope: !1807, inlinedAt: !1832)
!1832 = distinct !DILocation(line: 88, column: 868, scope: !1810, inlinedAt: !1833)
!1833 = distinct !DILocation(line: 88, column: 1086, scope: !1812, inlinedAt: !1834)
!1834 = distinct !DILocation(line: 657, column: 23, scope: !1765)
!1835 = !DILocation(line: 88, column: 856, scope: !1810, inlinedAt: !1833)
!1836 = !DILocation(line: 88, column: 998, scope: !1813, inlinedAt: !1834)
!1837 = !DILocation(line: 164, column: 84, scope: !1799, inlinedAt: !1838)
!1838 = distinct !DILocation(line: 664, column: 5, scope: !1765)
!1839 = !DILocation(line: 165, column: 60, scope: !1799, inlinedAt: !1838)
!1840 = !DILocation(line: 88, column: 95, scope: !1807, inlinedAt: !1841)
!1841 = distinct !DILocation(line: 88, column: 868, scope: !1810, inlinedAt: !1842)
!1842 = distinct !DILocation(line: 88, column: 1086, scope: !1812, inlinedAt: !1843)
!1843 = distinct !DILocation(line: 678, column: 18, scope: !1844)
!1844 = distinct !DILexicalBlock(scope: !1845, file: !908, line: 673, column: 37)
!1845 = distinct !DILexicalBlock(scope: !1846, file: !908, line: 673, column: 5)
!1846 = distinct !DILexicalBlock(scope: !1765, file: !908, line: 673, column: 5)
!1847 = !DILocation(line: 88, column: 856, scope: !1810, inlinedAt: !1842)
!1848 = !DILocation(line: 88, column: 998, scope: !1813, inlinedAt: !1843)
!1849 = !DILocation(line: 88, column: 95, scope: !1807, inlinedAt: !1850)
!1850 = distinct !DILocation(line: 88, column: 868, scope: !1810, inlinedAt: !1851)
!1851 = distinct !DILocation(line: 88, column: 1086, scope: !1812, inlinedAt: !1852)
!1852 = distinct !DILocation(line: 688, column: 27, scope: !1853)
!1853 = distinct !DILexicalBlock(scope: !1854, file: !908, line: 685, column: 48)
!1854 = distinct !DILexicalBlock(scope: !1855, file: !908, line: 685, column: 9)
!1855 = distinct !DILexicalBlock(scope: !1844, file: !908, line: 685, column: 9)
!1856 = !DILocation(line: 88, column: 856, scope: !1810, inlinedAt: !1851)
!1857 = !DILocation(line: 88, column: 998, scope: !1813, inlinedAt: !1852)
!1858 = !DILocation(line: 95, column: 95, scope: !1767, inlinedAt: !1859)
!1859 = distinct !DILocation(line: 95, column: 855, scope: !1774, inlinedAt: !1860)
!1860 = distinct !DILocation(line: 95, column: 1073, scope: !1785, inlinedAt: !1861)
!1861 = distinct !DILocation(line: 700, column: 9, scope: !1862)
!1862 = distinct !DILexicalBlock(scope: !1765, file: !908, line: 700, column: 9)
!1863 = !DILocation(line: 95, column: 843, scope: !1774, inlinedAt: !1860)
!1864 = !DILocation(line: 95, column: 985, scope: !1786, inlinedAt: !1861)
!1865 = !DILocation(line: 164, column: 84, scope: !1799, inlinedAt: !1866)
!1866 = distinct !DILocation(line: 703, column: 5, scope: !1765)
!1867 = !DILocation(line: 165, column: 60, scope: !1799, inlinedAt: !1866)
!1868 = !DILocalVariable(name: "g", arg: 1, scope: !1869, file: !1768, line: 188, type: !1777)
!1869 = distinct !DISubprogram(name: "bytestream2_tell", scope: !1768, file: !1768, line: 188, type: !1870, isLocal: true, isDefinition: true, scopeLine: 189, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1635)
!1870 = !DISubroutineType(types: !1871)
!1871 = !{!889, !1777}
!1872 = !DILocation(line: 188, column: 83, scope: !1869, inlinedAt: !1873)
!1873 = distinct !DILocation(line: 705, column: 47, scope: !1765)
!1874 = !DILocation(line: 188, column: 83, scope: !1869, inlinedAt: !1875)
!1875 = distinct !DILocation(line: 709, column: 47, scope: !1765)
!1876 = !DILocation(line: 164, column: 84, scope: !1799, inlinedAt: !1877)
!1877 = distinct !DILocation(line: 640, column: 5, scope: !1765)
!1878 = !DILocation(line: 165, column: 60, scope: !1799, inlinedAt: !1877)
!1879 = !DILocation(line: 95, column: 95, scope: !1767, inlinedAt: !1880)
!1880 = distinct !DILocation(line: 95, column: 855, scope: !1774, inlinedAt: !1881)
!1881 = distinct !DILocation(line: 95, column: 1073, scope: !1785, inlinedAt: !1882)
!1882 = distinct !DILocation(line: 555, column: 14, scope: !1765)
!1883 = !DILocation(line: 95, column: 843, scope: !1774, inlinedAt: !1881)
!1884 = !DILocation(line: 95, column: 985, scope: !1786, inlinedAt: !1882)
!1885 = !DILocation(line: 95, column: 95, scope: !1767, inlinedAt: !1886)
!1886 = distinct !DILocation(line: 95, column: 855, scope: !1774, inlinedAt: !1887)
!1887 = distinct !DILocation(line: 95, column: 1073, scope: !1785, inlinedAt: !1888)
!1888 = distinct !DILocation(line: 539, column: 15, scope: !1765)
!1889 = !DILocation(line: 95, column: 843, scope: !1774, inlinedAt: !1887)
!1890 = !DILocation(line: 95, column: 985, scope: !1786, inlinedAt: !1888)
!1891 = !DILocation(line: 88, column: 95, scope: !1807, inlinedAt: !1892)
!1892 = distinct !DILocation(line: 88, column: 868, scope: !1810, inlinedAt: !1893)
!1893 = distinct !DILocation(line: 88, column: 1086, scope: !1812, inlinedAt: !1894)
!1894 = distinct !DILocation(line: 532, column: 19, scope: !1765)
!1895 = !DILocation(line: 88, column: 856, scope: !1810, inlinedAt: !1893)
!1896 = !DILocation(line: 88, column: 998, scope: !1813, inlinedAt: !1894)
!1897 = !DILocation(line: 88, column: 95, scope: !1807, inlinedAt: !1898)
!1898 = distinct !DILocation(line: 88, column: 868, scope: !1810, inlinedAt: !1899)
!1899 = distinct !DILocation(line: 88, column: 1086, scope: !1812, inlinedAt: !1900)
!1900 = distinct !DILocation(line: 529, column: 9, scope: !1901)
!1901 = distinct !DILexicalBlock(scope: !1765, file: !908, line: 529, column: 9)
!1902 = !DILocation(line: 88, column: 856, scope: !1810, inlinedAt: !1899)
!1903 = !DILocation(line: 88, column: 998, scope: !1813, inlinedAt: !1900)
!1904 = !DILocalVariable(name: "g", arg: 1, scope: !1905, file: !1768, line: 133, type: !1777)
!1905 = distinct !DISubprogram(name: "bytestream2_init", scope: !1768, file: !1768, line: 133, type: !1906, isLocal: true, isDefinition: true, scopeLine: 136, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1635)
!1906 = !DISubroutineType(types: !1907)
!1907 = !{null, !1777, !899, !889}
!1908 = !DILocation(line: 133, column: 84, scope: !1905, inlinedAt: !1909)
!1909 = distinct !DILocation(line: 528, column: 5, scope: !1765)
!1910 = !DILocalVariable(name: "buf", arg: 2, scope: !1905, file: !1768, line: 134, type: !899)
!1911 = !DILocation(line: 134, column: 62, scope: !1905, inlinedAt: !1909)
!1912 = !DILocalVariable(name: "buf_size", arg: 3, scope: !1905, file: !1768, line: 135, type: !889)
!1913 = !DILocation(line: 135, column: 51, scope: !1905, inlinedAt: !1909)
!1914 = !DILocalVariable(name: "avctx", arg: 1, scope: !1765, file: !908, line: 516, type: !1001)
!1915 = !DILocation(line: 516, column: 46, scope: !1765)
!1916 = !DILocalVariable(name: "data", arg: 2, scope: !1765, file: !908, line: 516, type: !890)
!1917 = !DILocation(line: 516, column: 59, scope: !1765)
!1918 = !DILocalVariable(name: "got_frame", arg: 3, scope: !1765, file: !908, line: 517, type: !1296)
!1919 = !DILocation(line: 517, column: 35, scope: !1765)
!1920 = !DILocalVariable(name: "avpkt", arg: 4, scope: !1765, file: !908, line: 517, type: !1150)
!1921 = !DILocation(line: 517, column: 56, scope: !1765)
!1922 = !DILocalVariable(name: "s", scope: !1765, file: !908, line: 519, type: !1640)
!1923 = !DILocation(line: 519, column: 22, scope: !1765)
!1924 = !DILocation(line: 519, column: 26, scope: !1765)
!1925 = !DILocation(line: 519, column: 33, scope: !1765)
!1926 = !DILocalVariable(name: "frame", scope: !1765, file: !908, line: 520, type: !1927)
!1927 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThreadFrame", file: !1928, line: 40, baseType: !1929)
!1928 = !DIFile(filename: "libavcodec/thread.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ThreadFrame", file: !1928, line: 34, size: 256, align: 64, elements: !1930)
!1930 = !{!1931, !1932, !1934}
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1929, file: !1928, line: 35, baseType: !1023, size: 64, align: 64)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1929, file: !1928, line: 36, baseType: !1933, size: 128, align: 64, offset: 64)
!1933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1001, size: 128, align: 64, elements: !1683)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !1929, file: !1928, line: 39, baseType: !1064, size: 64, align: 64, offset: 192)
!1935 = !DILocation(line: 520, column: 17, scope: !1765)
!1936 = !DILocation(line: 520, column: 25, scope: !1765)
!1937 = !DILocation(line: 520, column: 32, scope: !1765)
!1938 = !DILocalVariable(name: "p", scope: !1765, file: !908, line: 521, type: !1023)
!1939 = !DILocation(line: 521, column: 14, scope: !1765)
!1940 = !DILocation(line: 521, column: 18, scope: !1765)
!1941 = !DILocalVariable(name: "gbyte", scope: !1765, file: !908, line: 522, type: !1778)
!1942 = !DILocation(line: 522, column: 20, scope: !1765)
!1943 = !DILocalVariable(name: "gbit", scope: !1765, file: !908, line: 523, type: !1944)
!1944 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !1945, line: 70, baseType: !1946)
!1945 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !1945, line: 61, size: 256, align: 64, elements: !1947)
!1947 = !{!1948, !1949, !1950, !1951, !1952}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1946, file: !1945, line: 62, baseType: !899, size: 64, align: 64)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1946, file: !1945, line: 62, baseType: !899, size: 64, align: 64, offset: 64)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1946, file: !1945, line: 67, baseType: !889, size: 32, align: 32, offset: 128)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1946, file: !1945, line: 68, baseType: !889, size: 32, align: 32, offset: 160)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !1946, file: !1945, line: 69, baseType: !889, size: 32, align: 32, offset: 192)
!1953 = !DILocation(line: 523, column: 19, scope: !1765)
!1954 = !DILocalVariable(name: "first_offset", scope: !1765, file: !908, line: 524, type: !897)
!1955 = !DILocation(line: 524, column: 14, scope: !1765)
!1956 = !DILocalVariable(name: "offset", scope: !1765, file: !908, line: 524, type: !897)
!1957 = !DILocation(line: 524, column: 28, scope: !1765)
!1958 = !DILocalVariable(name: "next_offset", scope: !1765, file: !908, line: 524, type: !897)
!1959 = !DILocation(line: 524, column: 36, scope: !1765)
!1960 = !DILocalVariable(name: "header_size", scope: !1765, file: !908, line: 524, type: !897)
!1961 = !DILocation(line: 524, column: 49, scope: !1765)
!1962 = !DILocalVariable(name: "slice_width", scope: !1765, file: !908, line: 524, type: !897)
!1963 = !DILocation(line: 524, column: 62, scope: !1765)
!1964 = !DILocalVariable(name: "width", scope: !1765, file: !908, line: 525, type: !889)
!1965 = !DILocation(line: 525, column: 9, scope: !1765)
!1966 = !DILocalVariable(name: "height", scope: !1765, file: !908, line: 525, type: !889)
!1967 = !DILocation(line: 525, column: 16, scope: !1765)
!1968 = !DILocalVariable(name: "format", scope: !1765, file: !908, line: 525, type: !889)
!1969 = !DILocation(line: 525, column: 24, scope: !1765)
!1970 = !DILocalVariable(name: "version", scope: !1765, file: !908, line: 525, type: !889)
!1971 = !DILocation(line: 525, column: 32, scope: !1765)
!1972 = !DILocalVariable(name: "table_size", scope: !1765, file: !908, line: 525, type: !889)
!1973 = !DILocation(line: 525, column: 41, scope: !1765)
!1974 = !DILocalVariable(name: "ret", scope: !1765, file: !908, line: 526, type: !889)
!1975 = !DILocation(line: 526, column: 9, scope: !1765)
!1976 = !DILocalVariable(name: "i", scope: !1765, file: !908, line: 526, type: !889)
!1977 = !DILocation(line: 526, column: 14, scope: !1765)
!1978 = !DILocalVariable(name: "j", scope: !1765, file: !908, line: 526, type: !889)
!1979 = !DILocation(line: 526, column: 17, scope: !1765)
!1980 = !DILocation(line: 528, column: 30, scope: !1765)
!1981 = !DILocation(line: 528, column: 37, scope: !1765)
!1982 = !DILocation(line: 528, column: 43, scope: !1765)
!1983 = !DILocation(line: 528, column: 50, scope: !1765)
!1984 = !DILocation(line: 528, column: 5, scope: !1765)
!1985 = !DILocation(line: 137, column: 16, scope: !1986, inlinedAt: !1909)
!1986 = !DILexicalBlockFile(scope: !1987, file: !1768, discriminator: 1)
!1987 = distinct !DILexicalBlock(scope: !1988, file: !1768, line: 137, column: 14)
!1988 = distinct !DILexicalBlock(scope: !1905, file: !1768, line: 137, column: 8)
!1989 = !DILocation(line: 137, column: 25, scope: !1986, inlinedAt: !1909)
!1990 = !DILocation(line: 137, column: 14, scope: !1986, inlinedAt: !1909)
!1991 = !DILocation(line: 137, column: 34, scope: !1992, inlinedAt: !1909)
!1992 = !DILexicalBlockFile(scope: !1993, file: !1768, discriminator: 2)
!1993 = distinct !DILexicalBlock(scope: !1987, file: !1768, line: 137, column: 32)
!1994 = !DILocation(line: 137, column: 93, scope: !1995, inlinedAt: !1909)
!1995 = !DILexicalBlockFile(scope: !1992, file: !1768, discriminator: 4)
!1996 = !DILocation(line: 137, column: 93, scope: !1992, inlinedAt: !1909)
!1997 = !DILocation(line: 138, column: 17, scope: !1905, inlinedAt: !1909)
!1998 = !DILocation(line: 138, column: 5, scope: !1905, inlinedAt: !1909)
!1999 = !DILocation(line: 138, column: 8, scope: !1905, inlinedAt: !1909)
!2000 = !DILocation(line: 138, column: 15, scope: !1905, inlinedAt: !1909)
!2001 = !DILocation(line: 139, column: 23, scope: !1905, inlinedAt: !1909)
!2002 = !DILocation(line: 139, column: 5, scope: !1905, inlinedAt: !1909)
!2003 = !DILocation(line: 139, column: 8, scope: !1905, inlinedAt: !1909)
!2004 = !DILocation(line: 139, column: 21, scope: !1905, inlinedAt: !1909)
!2005 = !DILocation(line: 140, column: 21, scope: !1905, inlinedAt: !1909)
!2006 = !DILocation(line: 140, column: 27, scope: !1905, inlinedAt: !1909)
!2007 = !DILocation(line: 140, column: 25, scope: !1905, inlinedAt: !1909)
!2008 = !DILocation(line: 140, column: 5, scope: !1905, inlinedAt: !1909)
!2009 = !DILocation(line: 140, column: 8, scope: !1905, inlinedAt: !1909)
!2010 = !DILocation(line: 140, column: 19, scope: !1905, inlinedAt: !1909)
!2011 = !DILocation(line: 529, column: 9, scope: !1901)
!2012 = !DILocation(line: 88, column: 1007, scope: !2013, inlinedAt: !1900)
!2013 = distinct !DILexicalBlock(scope: !1813, file: !1768, line: 88, column: 1007)
!2014 = !DILocation(line: 88, column: 1010, scope: !2013, inlinedAt: !1900)
!2015 = !DILocation(line: 88, column: 1023, scope: !2013, inlinedAt: !1900)
!2016 = !DILocation(line: 88, column: 1026, scope: !2013, inlinedAt: !1900)
!2017 = !DILocation(line: 88, column: 1021, scope: !2013, inlinedAt: !1900)
!2018 = !DILocation(line: 88, column: 1033, scope: !2013, inlinedAt: !1900)
!2019 = !DILocation(line: 88, column: 1007, scope: !1813, inlinedAt: !1900)
!2020 = !DILocation(line: 88, column: 1052, scope: !2021, inlinedAt: !1900)
!2021 = !DILexicalBlockFile(scope: !2022, file: !1768, discriminator: 1)
!2022 = distinct !DILexicalBlock(scope: !2013, file: !1768, line: 88, column: 1038)
!2023 = !DILocation(line: 88, column: 1055, scope: !2021, inlinedAt: !1900)
!2024 = !DILocation(line: 88, column: 1040, scope: !2021, inlinedAt: !1900)
!2025 = !DILocation(line: 88, column: 1043, scope: !2021, inlinedAt: !1900)
!2026 = !DILocation(line: 88, column: 1050, scope: !2021, inlinedAt: !1900)
!2027 = !DILocation(line: 88, column: 1067, scope: !2021, inlinedAt: !1900)
!2028 = !DILocation(line: 88, column: 1108, scope: !1812, inlinedAt: !1900)
!2029 = !DILocation(line: 88, column: 1086, scope: !1812, inlinedAt: !1900)
!2030 = !DILocation(line: 88, column: 889, scope: !1810, inlinedAt: !1899)
!2031 = !DILocation(line: 88, column: 892, scope: !1810, inlinedAt: !1899)
!2032 = !DILocation(line: 88, column: 868, scope: !1810, inlinedAt: !1899)
!2033 = !DILocation(line: 88, column: 102, scope: !1807, inlinedAt: !1898)
!2034 = !DILocation(line: 88, column: 105, scope: !1807, inlinedAt: !1898)
!2035 = !DILocation(line: 88, column: 151, scope: !1807, inlinedAt: !1898)
!2036 = !DILocation(line: 88, column: 150, scope: !1807, inlinedAt: !1898)
!2037 = !DILocation(line: 88, column: 153, scope: !1807, inlinedAt: !1898)
!2038 = !DILocation(line: 88, column: 160, scope: !1807, inlinedAt: !1898)
!2039 = !DILocation(line: 88, column: 1079, scope: !1812, inlinedAt: !1900)
!2040 = !DILocation(line: 88, column: 1112, scope: !2041, inlinedAt: !1900)
!2041 = !DILexicalBlockFile(scope: !1813, file: !1768, discriminator: 3)
!2042 = !DILocation(line: 529, column: 38, scope: !1901)
!2043 = !DILocation(line: 529, column: 9, scope: !1765)
!2044 = !DILocation(line: 530, column: 9, scope: !1901)
!2045 = !DILocation(line: 532, column: 19, scope: !1765)
!2046 = !DILocation(line: 88, column: 1007, scope: !2013, inlinedAt: !1894)
!2047 = !DILocation(line: 88, column: 1010, scope: !2013, inlinedAt: !1894)
!2048 = !DILocation(line: 88, column: 1023, scope: !2013, inlinedAt: !1894)
!2049 = !DILocation(line: 88, column: 1026, scope: !2013, inlinedAt: !1894)
!2050 = !DILocation(line: 88, column: 1021, scope: !2013, inlinedAt: !1894)
!2051 = !DILocation(line: 88, column: 1033, scope: !2013, inlinedAt: !1894)
!2052 = !DILocation(line: 88, column: 1007, scope: !1813, inlinedAt: !1894)
!2053 = !DILocation(line: 88, column: 1052, scope: !2021, inlinedAt: !1894)
!2054 = !DILocation(line: 88, column: 1055, scope: !2021, inlinedAt: !1894)
!2055 = !DILocation(line: 88, column: 1040, scope: !2021, inlinedAt: !1894)
!2056 = !DILocation(line: 88, column: 1043, scope: !2021, inlinedAt: !1894)
!2057 = !DILocation(line: 88, column: 1050, scope: !2021, inlinedAt: !1894)
!2058 = !DILocation(line: 88, column: 1067, scope: !2021, inlinedAt: !1894)
!2059 = !DILocation(line: 88, column: 1108, scope: !1812, inlinedAt: !1894)
!2060 = !DILocation(line: 88, column: 1086, scope: !1812, inlinedAt: !1894)
!2061 = !DILocation(line: 88, column: 889, scope: !1810, inlinedAt: !1893)
!2062 = !DILocation(line: 88, column: 892, scope: !1810, inlinedAt: !1893)
!2063 = !DILocation(line: 88, column: 868, scope: !1810, inlinedAt: !1893)
!2064 = !DILocation(line: 88, column: 102, scope: !1807, inlinedAt: !1892)
!2065 = !DILocation(line: 88, column: 105, scope: !1807, inlinedAt: !1892)
!2066 = !DILocation(line: 88, column: 151, scope: !1807, inlinedAt: !1892)
!2067 = !DILocation(line: 88, column: 150, scope: !1807, inlinedAt: !1892)
!2068 = !DILocation(line: 88, column: 153, scope: !1807, inlinedAt: !1892)
!2069 = !DILocation(line: 88, column: 160, scope: !1807, inlinedAt: !1892)
!2070 = !DILocation(line: 88, column: 1079, scope: !1812, inlinedAt: !1894)
!2071 = !DILocation(line: 88, column: 1112, scope: !2041, inlinedAt: !1894)
!2072 = !DILocation(line: 532, column: 17, scope: !1765)
!2073 = !DILocation(line: 533, column: 9, scope: !2074)
!2074 = distinct !DILexicalBlock(scope: !1765, file: !908, line: 533, column: 9)
!2075 = !DILocation(line: 533, column: 21, scope: !2074)
!2076 = !DILocation(line: 533, column: 26, scope: !2074)
!2077 = !DILocation(line: 533, column: 29, scope: !2078)
!2078 = !DILexicalBlockFile(scope: !2074, file: !908, discriminator: 1)
!2079 = !DILocation(line: 533, column: 44, scope: !2078)
!2080 = !DILocation(line: 533, column: 51, scope: !2078)
!2081 = !DILocation(line: 533, column: 41, scope: !2078)
!2082 = !DILocation(line: 533, column: 9, scope: !2078)
!2083 = !DILocation(line: 534, column: 16, scope: !2084)
!2084 = distinct !DILexicalBlock(scope: !2074, file: !908, line: 533, column: 57)
!2085 = !DILocation(line: 535, column: 57, scope: !2084)
!2086 = !DILocation(line: 534, column: 9, scope: !2084)
!2087 = !DILocation(line: 536, column: 9, scope: !2084)
!2088 = !DILocation(line: 539, column: 15, scope: !1765)
!2089 = !DILocation(line: 95, column: 994, scope: !2090, inlinedAt: !1888)
!2090 = distinct !DILexicalBlock(scope: !1786, file: !1768, line: 95, column: 994)
!2091 = !DILocation(line: 95, column: 997, scope: !2090, inlinedAt: !1888)
!2092 = !DILocation(line: 95, column: 1010, scope: !2090, inlinedAt: !1888)
!2093 = !DILocation(line: 95, column: 1013, scope: !2090, inlinedAt: !1888)
!2094 = !DILocation(line: 95, column: 1008, scope: !2090, inlinedAt: !1888)
!2095 = !DILocation(line: 95, column: 1020, scope: !2090, inlinedAt: !1888)
!2096 = !DILocation(line: 95, column: 994, scope: !1786, inlinedAt: !1888)
!2097 = !DILocation(line: 95, column: 1039, scope: !2098, inlinedAt: !1888)
!2098 = !DILexicalBlockFile(scope: !2099, file: !1768, discriminator: 1)
!2099 = distinct !DILexicalBlock(scope: !2090, file: !1768, line: 95, column: 1025)
!2100 = !DILocation(line: 95, column: 1042, scope: !2098, inlinedAt: !1888)
!2101 = !DILocation(line: 95, column: 1027, scope: !2098, inlinedAt: !1888)
!2102 = !DILocation(line: 95, column: 1030, scope: !2098, inlinedAt: !1888)
!2103 = !DILocation(line: 95, column: 1037, scope: !2098, inlinedAt: !1888)
!2104 = !DILocation(line: 95, column: 1054, scope: !2098, inlinedAt: !1888)
!2105 = !DILocation(line: 95, column: 1095, scope: !1785, inlinedAt: !1888)
!2106 = !DILocation(line: 95, column: 1073, scope: !1785, inlinedAt: !1888)
!2107 = !DILocation(line: 95, column: 876, scope: !1774, inlinedAt: !1887)
!2108 = !DILocation(line: 95, column: 879, scope: !1774, inlinedAt: !1887)
!2109 = !DILocation(line: 95, column: 855, scope: !1774, inlinedAt: !1887)
!2110 = !DILocation(line: 95, column: 102, scope: !1767, inlinedAt: !1886)
!2111 = !DILocation(line: 95, column: 105, scope: !1767, inlinedAt: !1886)
!2112 = !DILocation(line: 95, column: 138, scope: !1767, inlinedAt: !1886)
!2113 = !DILocation(line: 95, column: 137, scope: !1767, inlinedAt: !1886)
!2114 = !DILocation(line: 95, column: 140, scope: !1767, inlinedAt: !1886)
!2115 = !DILocation(line: 95, column: 119, scope: !1767, inlinedAt: !1886)
!2116 = !DILocation(line: 95, column: 118, scope: !1767, inlinedAt: !1886)
!2117 = !DILocation(line: 95, column: 1066, scope: !1785, inlinedAt: !1888)
!2118 = !DILocation(line: 95, column: 1099, scope: !2119, inlinedAt: !1888)
!2119 = !DILexicalBlockFile(scope: !1786, file: !1768, discriminator: 3)
!2120 = !DILocation(line: 539, column: 13, scope: !1765)
!2121 = !DILocation(line: 540, column: 9, scope: !2122)
!2122 = distinct !DILexicalBlock(scope: !1765, file: !908, line: 540, column: 9)
!2123 = !DILocation(line: 540, column: 17, scope: !2122)
!2124 = !DILocation(line: 540, column: 9, scope: !1765)
!2125 = !DILocation(line: 541, column: 31, scope: !2126)
!2126 = distinct !DILexicalBlock(scope: !2122, file: !908, line: 540, column: 23)
!2127 = !DILocation(line: 541, column: 52, scope: !2126)
!2128 = !DILocation(line: 541, column: 9, scope: !2126)
!2129 = !DILocation(line: 542, column: 9, scope: !2126)
!2130 = !DILocation(line: 548, column: 5, scope: !1765)
!2131 = !DILocation(line: 548, column: 8, scope: !1765)
!2132 = !DILocation(line: 548, column: 18, scope: !1765)
!2133 = !DILocation(line: 547, column: 5, scope: !1765)
!2134 = !DILocation(line: 547, column: 8, scope: !1765)
!2135 = !DILocation(line: 547, column: 18, scope: !1765)
!2136 = !DILocation(line: 546, column: 5, scope: !1765)
!2137 = !DILocation(line: 546, column: 8, scope: !1765)
!2138 = !DILocation(line: 546, column: 18, scope: !1765)
!2139 = !DILocation(line: 545, column: 5, scope: !1765)
!2140 = !DILocation(line: 545, column: 8, scope: !1765)
!2141 = !DILocation(line: 545, column: 18, scope: !1765)
!2142 = !DILocation(line: 549, column: 5, scope: !1765)
!2143 = !DILocation(line: 549, column: 8, scope: !1765)
!2144 = !DILocation(line: 549, column: 20, scope: !1765)
!2145 = !DILocation(line: 550, column: 5, scope: !1765)
!2146 = !DILocation(line: 550, column: 8, scope: !1765)
!2147 = !DILocation(line: 550, column: 12, scope: !1765)
!2148 = !DILocation(line: 551, column: 5, scope: !1765)
!2149 = !DILocation(line: 551, column: 8, scope: !1765)
!2150 = !DILocation(line: 551, column: 12, scope: !1765)
!2151 = !DILocation(line: 552, column: 5, scope: !1765)
!2152 = !DILocation(line: 552, column: 8, scope: !1765)
!2153 = !DILocation(line: 552, column: 19, scope: !1765)
!2154 = !DILocation(line: 553, column: 5, scope: !1765)
!2155 = !DILocation(line: 553, column: 8, scope: !1765)
!2156 = !DILocation(line: 553, column: 26, scope: !1765)
!2157 = !DILocation(line: 555, column: 14, scope: !1765)
!2158 = !DILocation(line: 95, column: 994, scope: !2090, inlinedAt: !1882)
!2159 = !DILocation(line: 95, column: 997, scope: !2090, inlinedAt: !1882)
!2160 = !DILocation(line: 95, column: 1010, scope: !2090, inlinedAt: !1882)
!2161 = !DILocation(line: 95, column: 1013, scope: !2090, inlinedAt: !1882)
!2162 = !DILocation(line: 95, column: 1008, scope: !2090, inlinedAt: !1882)
!2163 = !DILocation(line: 95, column: 1020, scope: !2090, inlinedAt: !1882)
!2164 = !DILocation(line: 95, column: 994, scope: !1786, inlinedAt: !1882)
!2165 = !DILocation(line: 95, column: 1039, scope: !2098, inlinedAt: !1882)
!2166 = !DILocation(line: 95, column: 1042, scope: !2098, inlinedAt: !1882)
!2167 = !DILocation(line: 95, column: 1027, scope: !2098, inlinedAt: !1882)
!2168 = !DILocation(line: 95, column: 1030, scope: !2098, inlinedAt: !1882)
!2169 = !DILocation(line: 95, column: 1037, scope: !2098, inlinedAt: !1882)
!2170 = !DILocation(line: 95, column: 1054, scope: !2098, inlinedAt: !1882)
!2171 = !DILocation(line: 95, column: 1095, scope: !1785, inlinedAt: !1882)
!2172 = !DILocation(line: 95, column: 1073, scope: !1785, inlinedAt: !1882)
!2173 = !DILocation(line: 95, column: 876, scope: !1774, inlinedAt: !1881)
!2174 = !DILocation(line: 95, column: 879, scope: !1774, inlinedAt: !1881)
!2175 = !DILocation(line: 95, column: 855, scope: !1774, inlinedAt: !1881)
!2176 = !DILocation(line: 95, column: 102, scope: !1767, inlinedAt: !1880)
!2177 = !DILocation(line: 95, column: 105, scope: !1767, inlinedAt: !1880)
!2178 = !DILocation(line: 95, column: 138, scope: !1767, inlinedAt: !1880)
!2179 = !DILocation(line: 95, column: 137, scope: !1767, inlinedAt: !1880)
!2180 = !DILocation(line: 95, column: 140, scope: !1767, inlinedAt: !1880)
!2181 = !DILocation(line: 95, column: 119, scope: !1767, inlinedAt: !1880)
!2182 = !DILocation(line: 95, column: 118, scope: !1767, inlinedAt: !1880)
!2183 = !DILocation(line: 95, column: 1066, scope: !1785, inlinedAt: !1882)
!2184 = !DILocation(line: 95, column: 1099, scope: !2119, inlinedAt: !1882)
!2185 = !DILocation(line: 555, column: 12, scope: !1765)
!2186 = !DILocation(line: 556, column: 13, scope: !1765)
!2187 = !DILocation(line: 556, column: 5, scope: !1765)
!2188 = !DILocation(line: 558, column: 9, scope: !2189)
!2189 = distinct !DILexicalBlock(scope: !1765, file: !908, line: 556, column: 21)
!2190 = !DILocation(line: 558, column: 16, scope: !2189)
!2191 = !DILocation(line: 558, column: 24, scope: !2189)
!2192 = !DILocation(line: 559, column: 9, scope: !2189)
!2193 = !DILocation(line: 559, column: 12, scope: !2189)
!2194 = !DILocation(line: 559, column: 24, scope: !2189)
!2195 = !DILocation(line: 560, column: 9, scope: !2189)
!2196 = !DILocation(line: 562, column: 9, scope: !2189)
!2197 = !DILocation(line: 562, column: 16, scope: !2189)
!2198 = !DILocation(line: 562, column: 24, scope: !2189)
!2199 = !DILocation(line: 563, column: 9, scope: !2189)
!2200 = !DILocation(line: 563, column: 12, scope: !2189)
!2201 = !DILocation(line: 563, column: 24, scope: !2189)
!2202 = !DILocation(line: 564, column: 9, scope: !2189)
!2203 = !DILocation(line: 566, column: 9, scope: !2189)
!2204 = !DILocation(line: 566, column: 16, scope: !2189)
!2205 = !DILocation(line: 566, column: 24, scope: !2189)
!2206 = !DILocation(line: 567, column: 9, scope: !2189)
!2207 = !DILocation(line: 569, column: 9, scope: !2189)
!2208 = !DILocation(line: 569, column: 16, scope: !2189)
!2209 = !DILocation(line: 569, column: 24, scope: !2189)
!2210 = !DILocation(line: 571, column: 9, scope: !2189)
!2211 = !DILocation(line: 571, column: 12, scope: !2189)
!2212 = !DILocation(line: 571, column: 22, scope: !2189)
!2213 = !DILocation(line: 570, column: 9, scope: !2189)
!2214 = !DILocation(line: 570, column: 12, scope: !2189)
!2215 = !DILocation(line: 570, column: 22, scope: !2189)
!2216 = !DILocation(line: 572, column: 9, scope: !2189)
!2217 = !DILocation(line: 574, column: 9, scope: !2189)
!2218 = !DILocation(line: 574, column: 16, scope: !2189)
!2219 = !DILocation(line: 574, column: 24, scope: !2189)
!2220 = !DILocation(line: 578, column: 9, scope: !2189)
!2221 = !DILocation(line: 578, column: 12, scope: !2189)
!2222 = !DILocation(line: 578, column: 22, scope: !2189)
!2223 = !DILocation(line: 577, column: 9, scope: !2189)
!2224 = !DILocation(line: 577, column: 12, scope: !2189)
!2225 = !DILocation(line: 577, column: 22, scope: !2189)
!2226 = !DILocation(line: 576, column: 9, scope: !2189)
!2227 = !DILocation(line: 576, column: 12, scope: !2189)
!2228 = !DILocation(line: 576, column: 22, scope: !2189)
!2229 = !DILocation(line: 575, column: 9, scope: !2189)
!2230 = !DILocation(line: 575, column: 12, scope: !2189)
!2231 = !DILocation(line: 575, column: 22, scope: !2189)
!2232 = !DILocation(line: 579, column: 9, scope: !2189)
!2233 = !DILocation(line: 581, column: 9, scope: !2189)
!2234 = !DILocation(line: 581, column: 16, scope: !2189)
!2235 = !DILocation(line: 581, column: 24, scope: !2189)
!2236 = !DILocation(line: 582, column: 9, scope: !2189)
!2237 = !DILocation(line: 584, column: 9, scope: !2189)
!2238 = !DILocation(line: 584, column: 16, scope: !2189)
!2239 = !DILocation(line: 584, column: 24, scope: !2189)
!2240 = !DILocation(line: 585, column: 9, scope: !2189)
!2241 = !DILocation(line: 587, column: 9, scope: !2189)
!2242 = !DILocation(line: 587, column: 16, scope: !2189)
!2243 = !DILocation(line: 587, column: 24, scope: !2189)
!2244 = !DILocation(line: 589, column: 9, scope: !2189)
!2245 = !DILocation(line: 589, column: 12, scope: !2189)
!2246 = !DILocation(line: 589, column: 22, scope: !2189)
!2247 = !DILocation(line: 588, column: 9, scope: !2189)
!2248 = !DILocation(line: 588, column: 12, scope: !2189)
!2249 = !DILocation(line: 588, column: 22, scope: !2189)
!2250 = !DILocation(line: 590, column: 9, scope: !2189)
!2251 = !DILocation(line: 590, column: 12, scope: !2189)
!2252 = !DILocation(line: 590, column: 16, scope: !2189)
!2253 = !DILocation(line: 591, column: 9, scope: !2189)
!2254 = !DILocation(line: 591, column: 12, scope: !2189)
!2255 = !DILocation(line: 591, column: 23, scope: !2189)
!2256 = !DILocation(line: 592, column: 9, scope: !2189)
!2257 = !DILocation(line: 592, column: 12, scope: !2189)
!2258 = !DILocation(line: 592, column: 30, scope: !2189)
!2259 = !DILocation(line: 593, column: 9, scope: !2189)
!2260 = !DILocation(line: 593, column: 12, scope: !2189)
!2261 = !DILocation(line: 593, column: 16, scope: !2189)
!2262 = !DILocation(line: 594, column: 9, scope: !2189)
!2263 = !DILocation(line: 596, column: 9, scope: !2189)
!2264 = !DILocation(line: 596, column: 16, scope: !2189)
!2265 = !DILocation(line: 596, column: 24, scope: !2189)
!2266 = !DILocation(line: 597, column: 9, scope: !2189)
!2267 = !DILocation(line: 597, column: 12, scope: !2189)
!2268 = !DILocation(line: 597, column: 24, scope: !2189)
!2269 = !DILocation(line: 598, column: 9, scope: !2189)
!2270 = !DILocation(line: 598, column: 12, scope: !2189)
!2271 = !DILocation(line: 598, column: 16, scope: !2189)
!2272 = !DILocation(line: 599, column: 9, scope: !2189)
!2273 = !DILocation(line: 599, column: 12, scope: !2189)
!2274 = !DILocation(line: 599, column: 23, scope: !2189)
!2275 = !DILocation(line: 600, column: 9, scope: !2189)
!2276 = !DILocation(line: 600, column: 12, scope: !2189)
!2277 = !DILocation(line: 600, column: 30, scope: !2189)
!2278 = !DILocation(line: 601, column: 9, scope: !2189)
!2279 = !DILocation(line: 601, column: 12, scope: !2189)
!2280 = !DILocation(line: 601, column: 16, scope: !2189)
!2281 = !DILocation(line: 602, column: 9, scope: !2189)
!2282 = !DILocation(line: 604, column: 9, scope: !2189)
!2283 = !DILocation(line: 604, column: 16, scope: !2189)
!2284 = !DILocation(line: 604, column: 24, scope: !2189)
!2285 = !DILocation(line: 605, column: 9, scope: !2189)
!2286 = !DILocation(line: 605, column: 12, scope: !2189)
!2287 = !DILocation(line: 605, column: 24, scope: !2189)
!2288 = !DILocation(line: 606, column: 9, scope: !2189)
!2289 = !DILocation(line: 606, column: 12, scope: !2189)
!2290 = !DILocation(line: 606, column: 16, scope: !2189)
!2291 = !DILocation(line: 607, column: 9, scope: !2189)
!2292 = !DILocation(line: 607, column: 12, scope: !2189)
!2293 = !DILocation(line: 607, column: 23, scope: !2189)
!2294 = !DILocation(line: 608, column: 9, scope: !2189)
!2295 = !DILocation(line: 608, column: 12, scope: !2189)
!2296 = !DILocation(line: 608, column: 30, scope: !2189)
!2297 = !DILocation(line: 609, column: 9, scope: !2189)
!2298 = !DILocation(line: 609, column: 12, scope: !2189)
!2299 = !DILocation(line: 609, column: 16, scope: !2189)
!2300 = !DILocation(line: 610, column: 9, scope: !2189)
!2301 = !DILocation(line: 612, column: 9, scope: !2189)
!2302 = !DILocation(line: 612, column: 16, scope: !2189)
!2303 = !DILocation(line: 612, column: 24, scope: !2189)
!2304 = !DILocation(line: 613, column: 9, scope: !2189)
!2305 = !DILocation(line: 613, column: 12, scope: !2189)
!2306 = !DILocation(line: 613, column: 24, scope: !2189)
!2307 = !DILocation(line: 614, column: 9, scope: !2189)
!2308 = !DILocation(line: 614, column: 12, scope: !2189)
!2309 = !DILocation(line: 614, column: 16, scope: !2189)
!2310 = !DILocation(line: 615, column: 9, scope: !2189)
!2311 = !DILocation(line: 615, column: 12, scope: !2189)
!2312 = !DILocation(line: 615, column: 23, scope: !2189)
!2313 = !DILocation(line: 616, column: 9, scope: !2189)
!2314 = !DILocation(line: 616, column: 12, scope: !2189)
!2315 = !DILocation(line: 616, column: 30, scope: !2189)
!2316 = !DILocation(line: 617, column: 9, scope: !2189)
!2317 = !DILocation(line: 617, column: 12, scope: !2189)
!2318 = !DILocation(line: 617, column: 16, scope: !2189)
!2319 = !DILocation(line: 618, column: 9, scope: !2189)
!2320 = !DILocation(line: 620, column: 9, scope: !2189)
!2321 = !DILocation(line: 620, column: 16, scope: !2189)
!2322 = !DILocation(line: 620, column: 24, scope: !2189)
!2323 = !DILocation(line: 621, column: 9, scope: !2189)
!2324 = !DILocation(line: 621, column: 12, scope: !2189)
!2325 = !DILocation(line: 621, column: 24, scope: !2189)
!2326 = !DILocation(line: 622, column: 9, scope: !2189)
!2327 = !DILocation(line: 622, column: 12, scope: !2189)
!2328 = !DILocation(line: 622, column: 16, scope: !2189)
!2329 = !DILocation(line: 623, column: 9, scope: !2189)
!2330 = !DILocation(line: 623, column: 12, scope: !2189)
!2331 = !DILocation(line: 623, column: 23, scope: !2189)
!2332 = !DILocation(line: 624, column: 9, scope: !2189)
!2333 = !DILocation(line: 624, column: 12, scope: !2189)
!2334 = !DILocation(line: 624, column: 30, scope: !2189)
!2335 = !DILocation(line: 625, column: 9, scope: !2189)
!2336 = !DILocation(line: 625, column: 12, scope: !2189)
!2337 = !DILocation(line: 625, column: 16, scope: !2189)
!2338 = !DILocation(line: 626, column: 9, scope: !2189)
!2339 = !DILocation(line: 628, column: 9, scope: !2189)
!2340 = !DILocation(line: 628, column: 16, scope: !2189)
!2341 = !DILocation(line: 628, column: 24, scope: !2189)
!2342 = !DILocation(line: 629, column: 9, scope: !2189)
!2343 = !DILocation(line: 629, column: 12, scope: !2189)
!2344 = !DILocation(line: 629, column: 16, scope: !2189)
!2345 = !DILocation(line: 630, column: 9, scope: !2189)
!2346 = !DILocation(line: 630, column: 12, scope: !2189)
!2347 = !DILocation(line: 630, column: 23, scope: !2189)
!2348 = !DILocation(line: 631, column: 9, scope: !2189)
!2349 = !DILocation(line: 631, column: 12, scope: !2189)
!2350 = !DILocation(line: 631, column: 30, scope: !2189)
!2351 = !DILocation(line: 632, column: 9, scope: !2189)
!2352 = !DILocation(line: 632, column: 12, scope: !2189)
!2353 = !DILocation(line: 632, column: 16, scope: !2189)
!2354 = !DILocation(line: 633, column: 9, scope: !2189)
!2355 = !DILocation(line: 635, column: 31, scope: !2189)
!2356 = !DILocation(line: 635, column: 53, scope: !2189)
!2357 = !DILocation(line: 635, column: 9, scope: !2189)
!2358 = !DILocation(line: 636, column: 9, scope: !2189)
!2359 = !DILocation(line: 638, column: 41, scope: !1765)
!2360 = !DILocation(line: 638, column: 48, scope: !1765)
!2361 = !DILocation(line: 638, column: 17, scope: !1765)
!2362 = !DILocation(line: 638, column: 5, scope: !1765)
!2363 = !DILocation(line: 638, column: 8, scope: !1765)
!2364 = !DILocation(line: 638, column: 15, scope: !1765)
!2365 = !DILocation(line: 640, column: 5, scope: !1765)
!2366 = !DILocation(line: 167, column: 20, scope: !1799, inlinedAt: !1877)
!2367 = !DILocation(line: 167, column: 23, scope: !1799, inlinedAt: !1877)
!2368 = !DILocation(line: 167, column: 36, scope: !1799, inlinedAt: !1877)
!2369 = !DILocation(line: 167, column: 39, scope: !1799, inlinedAt: !1877)
!2370 = !DILocation(line: 167, column: 34, scope: !1799, inlinedAt: !1877)
!2371 = !DILocation(line: 167, column: 50, scope: !1799, inlinedAt: !1877)
!2372 = !DILocation(line: 167, column: 49, scope: !1799, inlinedAt: !1877)
!2373 = !DILocation(line: 167, column: 47, scope: !1799, inlinedAt: !1877)
!2374 = !DILocation(line: 167, column: 19, scope: !1799, inlinedAt: !1877)
!2375 = !DILocation(line: 167, column: 59, scope: !2376, inlinedAt: !1877)
!2376 = !DILexicalBlockFile(scope: !1799, file: !1768, discriminator: 1)
!2377 = !DILocation(line: 167, column: 58, scope: !2376, inlinedAt: !1877)
!2378 = !DILocation(line: 167, column: 19, scope: !2376, inlinedAt: !1877)
!2379 = !DILocation(line: 167, column: 68, scope: !2380, inlinedAt: !1877)
!2380 = !DILexicalBlockFile(scope: !1799, file: !1768, discriminator: 2)
!2381 = !DILocation(line: 167, column: 71, scope: !2380, inlinedAt: !1877)
!2382 = !DILocation(line: 167, column: 84, scope: !2380, inlinedAt: !1877)
!2383 = !DILocation(line: 167, column: 87, scope: !2380, inlinedAt: !1877)
!2384 = !DILocation(line: 167, column: 82, scope: !2380, inlinedAt: !1877)
!2385 = !DILocation(line: 167, column: 19, scope: !2380, inlinedAt: !1877)
!2386 = !DILocation(line: 167, column: 19, scope: !2387, inlinedAt: !1877)
!2387 = !DILexicalBlockFile(scope: !1799, file: !1768, discriminator: 3)
!2388 = !DILocation(line: 167, column: 5, scope: !2387, inlinedAt: !1877)
!2389 = !DILocation(line: 167, column: 8, scope: !2387, inlinedAt: !1877)
!2390 = !DILocation(line: 167, column: 15, scope: !2387, inlinedAt: !1877)
!2391 = !DILocation(line: 641, column: 23, scope: !1765)
!2392 = !DILocation(line: 95, column: 994, scope: !2090, inlinedAt: !1787)
!2393 = !DILocation(line: 95, column: 997, scope: !2090, inlinedAt: !1787)
!2394 = !DILocation(line: 95, column: 1010, scope: !2090, inlinedAt: !1787)
!2395 = !DILocation(line: 95, column: 1013, scope: !2090, inlinedAt: !1787)
!2396 = !DILocation(line: 95, column: 1008, scope: !2090, inlinedAt: !1787)
!2397 = !DILocation(line: 95, column: 1020, scope: !2090, inlinedAt: !1787)
!2398 = !DILocation(line: 95, column: 994, scope: !1786, inlinedAt: !1787)
!2399 = !DILocation(line: 95, column: 1039, scope: !2098, inlinedAt: !1787)
!2400 = !DILocation(line: 95, column: 1042, scope: !2098, inlinedAt: !1787)
!2401 = !DILocation(line: 95, column: 1027, scope: !2098, inlinedAt: !1787)
!2402 = !DILocation(line: 95, column: 1030, scope: !2098, inlinedAt: !1787)
!2403 = !DILocation(line: 95, column: 1037, scope: !2098, inlinedAt: !1787)
!2404 = !DILocation(line: 95, column: 1054, scope: !2098, inlinedAt: !1787)
!2405 = !DILocation(line: 95, column: 1095, scope: !1785, inlinedAt: !1787)
!2406 = !DILocation(line: 95, column: 1073, scope: !1785, inlinedAt: !1787)
!2407 = !DILocation(line: 95, column: 876, scope: !1774, inlinedAt: !1784)
!2408 = !DILocation(line: 95, column: 879, scope: !1774, inlinedAt: !1784)
!2409 = !DILocation(line: 95, column: 855, scope: !1774, inlinedAt: !1784)
!2410 = !DILocation(line: 95, column: 102, scope: !1767, inlinedAt: !1773)
!2411 = !DILocation(line: 95, column: 105, scope: !1767, inlinedAt: !1773)
!2412 = !DILocation(line: 95, column: 138, scope: !1767, inlinedAt: !1773)
!2413 = !DILocation(line: 95, column: 137, scope: !1767, inlinedAt: !1773)
!2414 = !DILocation(line: 95, column: 140, scope: !1767, inlinedAt: !1773)
!2415 = !DILocation(line: 95, column: 119, scope: !1767, inlinedAt: !1773)
!2416 = !DILocation(line: 95, column: 118, scope: !1767, inlinedAt: !1773)
!2417 = !DILocation(line: 95, column: 1066, scope: !1785, inlinedAt: !1787)
!2418 = !DILocation(line: 95, column: 1099, scope: !2119, inlinedAt: !1787)
!2419 = !DILocation(line: 641, column: 5, scope: !1765)
!2420 = !DILocation(line: 641, column: 8, scope: !1765)
!2421 = !DILocation(line: 641, column: 21, scope: !1765)
!2422 = !DILocation(line: 642, column: 16, scope: !1765)
!2423 = !DILocation(line: 95, column: 994, scope: !2090, inlinedAt: !1795)
!2424 = !DILocation(line: 95, column: 997, scope: !2090, inlinedAt: !1795)
!2425 = !DILocation(line: 95, column: 1010, scope: !2090, inlinedAt: !1795)
!2426 = !DILocation(line: 95, column: 1013, scope: !2090, inlinedAt: !1795)
!2427 = !DILocation(line: 95, column: 1008, scope: !2090, inlinedAt: !1795)
!2428 = !DILocation(line: 95, column: 1020, scope: !2090, inlinedAt: !1795)
!2429 = !DILocation(line: 95, column: 994, scope: !1786, inlinedAt: !1795)
!2430 = !DILocation(line: 95, column: 1039, scope: !2098, inlinedAt: !1795)
!2431 = !DILocation(line: 95, column: 1042, scope: !2098, inlinedAt: !1795)
!2432 = !DILocation(line: 95, column: 1027, scope: !2098, inlinedAt: !1795)
!2433 = !DILocation(line: 95, column: 1030, scope: !2098, inlinedAt: !1795)
!2434 = !DILocation(line: 95, column: 1037, scope: !2098, inlinedAt: !1795)
!2435 = !DILocation(line: 95, column: 1054, scope: !2098, inlinedAt: !1795)
!2436 = !DILocation(line: 95, column: 1095, scope: !1785, inlinedAt: !1795)
!2437 = !DILocation(line: 95, column: 1073, scope: !1785, inlinedAt: !1795)
!2438 = !DILocation(line: 95, column: 876, scope: !1774, inlinedAt: !1794)
!2439 = !DILocation(line: 95, column: 879, scope: !1774, inlinedAt: !1794)
!2440 = !DILocation(line: 95, column: 855, scope: !1774, inlinedAt: !1794)
!2441 = !DILocation(line: 95, column: 102, scope: !1767, inlinedAt: !1793)
!2442 = !DILocation(line: 95, column: 105, scope: !1767, inlinedAt: !1793)
!2443 = !DILocation(line: 95, column: 138, scope: !1767, inlinedAt: !1793)
!2444 = !DILocation(line: 95, column: 137, scope: !1767, inlinedAt: !1793)
!2445 = !DILocation(line: 95, column: 140, scope: !1767, inlinedAt: !1793)
!2446 = !DILocation(line: 95, column: 119, scope: !1767, inlinedAt: !1793)
!2447 = !DILocation(line: 95, column: 118, scope: !1767, inlinedAt: !1793)
!2448 = !DILocation(line: 95, column: 1066, scope: !1785, inlinedAt: !1795)
!2449 = !DILocation(line: 95, column: 1099, scope: !2119, inlinedAt: !1795)
!2450 = !DILocation(line: 642, column: 5, scope: !1765)
!2451 = !DILocation(line: 642, column: 8, scope: !1765)
!2452 = !DILocation(line: 642, column: 14, scope: !1765)
!2453 = !DILocation(line: 643, column: 24, scope: !1765)
!2454 = !DILocation(line: 643, column: 27, scope: !1765)
!2455 = !DILocation(line: 643, column: 33, scope: !1765)
!2456 = !DILocation(line: 643, column: 22, scope: !1765)
!2457 = !DILocation(line: 643, column: 21, scope: !1765)
!2458 = !DILocation(line: 643, column: 5, scope: !1765)
!2459 = !DILocation(line: 643, column: 8, scope: !1765)
!2460 = !DILocation(line: 643, column: 19, scope: !1765)
!2461 = !DILocation(line: 644, column: 5, scope: !1765)
!2462 = !DILocation(line: 167, column: 20, scope: !1799, inlinedAt: !1803)
!2463 = !DILocation(line: 167, column: 23, scope: !1799, inlinedAt: !1803)
!2464 = !DILocation(line: 167, column: 36, scope: !1799, inlinedAt: !1803)
!2465 = !DILocation(line: 167, column: 39, scope: !1799, inlinedAt: !1803)
!2466 = !DILocation(line: 167, column: 34, scope: !1799, inlinedAt: !1803)
!2467 = !DILocation(line: 167, column: 50, scope: !1799, inlinedAt: !1803)
!2468 = !DILocation(line: 167, column: 49, scope: !1799, inlinedAt: !1803)
!2469 = !DILocation(line: 167, column: 47, scope: !1799, inlinedAt: !1803)
!2470 = !DILocation(line: 167, column: 19, scope: !1799, inlinedAt: !1803)
!2471 = !DILocation(line: 167, column: 59, scope: !2376, inlinedAt: !1803)
!2472 = !DILocation(line: 167, column: 58, scope: !2376, inlinedAt: !1803)
!2473 = !DILocation(line: 167, column: 19, scope: !2376, inlinedAt: !1803)
!2474 = !DILocation(line: 167, column: 68, scope: !2380, inlinedAt: !1803)
!2475 = !DILocation(line: 167, column: 71, scope: !2380, inlinedAt: !1803)
!2476 = !DILocation(line: 167, column: 84, scope: !2380, inlinedAt: !1803)
!2477 = !DILocation(line: 167, column: 87, scope: !2380, inlinedAt: !1803)
!2478 = !DILocation(line: 167, column: 82, scope: !2380, inlinedAt: !1803)
!2479 = !DILocation(line: 167, column: 19, scope: !2380, inlinedAt: !1803)
!2480 = !DILocation(line: 167, column: 19, scope: !2387, inlinedAt: !1803)
!2481 = !DILocation(line: 167, column: 5, scope: !2387, inlinedAt: !1803)
!2482 = !DILocation(line: 167, column: 8, scope: !2387, inlinedAt: !1803)
!2483 = !DILocation(line: 167, column: 15, scope: !2387, inlinedAt: !1803)
!2484 = !DILocation(line: 646, column: 13, scope: !1765)
!2485 = !DILocation(line: 88, column: 1007, scope: !2013, inlinedAt: !1814)
!2486 = !DILocation(line: 88, column: 1010, scope: !2013, inlinedAt: !1814)
!2487 = !DILocation(line: 88, column: 1023, scope: !2013, inlinedAt: !1814)
!2488 = !DILocation(line: 88, column: 1026, scope: !2013, inlinedAt: !1814)
!2489 = !DILocation(line: 88, column: 1021, scope: !2013, inlinedAt: !1814)
!2490 = !DILocation(line: 88, column: 1033, scope: !2013, inlinedAt: !1814)
!2491 = !DILocation(line: 88, column: 1007, scope: !1813, inlinedAt: !1814)
!2492 = !DILocation(line: 88, column: 1052, scope: !2021, inlinedAt: !1814)
!2493 = !DILocation(line: 88, column: 1055, scope: !2021, inlinedAt: !1814)
!2494 = !DILocation(line: 88, column: 1040, scope: !2021, inlinedAt: !1814)
!2495 = !DILocation(line: 88, column: 1043, scope: !2021, inlinedAt: !1814)
!2496 = !DILocation(line: 88, column: 1050, scope: !2021, inlinedAt: !1814)
!2497 = !DILocation(line: 88, column: 1067, scope: !2021, inlinedAt: !1814)
!2498 = !DILocation(line: 88, column: 1108, scope: !1812, inlinedAt: !1814)
!2499 = !DILocation(line: 88, column: 1086, scope: !1812, inlinedAt: !1814)
!2500 = !DILocation(line: 88, column: 889, scope: !1810, inlinedAt: !1811)
!2501 = !DILocation(line: 88, column: 892, scope: !1810, inlinedAt: !1811)
!2502 = !DILocation(line: 88, column: 868, scope: !1810, inlinedAt: !1811)
!2503 = !DILocation(line: 88, column: 102, scope: !1807, inlinedAt: !1809)
!2504 = !DILocation(line: 88, column: 105, scope: !1807, inlinedAt: !1809)
!2505 = !DILocation(line: 88, column: 151, scope: !1807, inlinedAt: !1809)
!2506 = !DILocation(line: 88, column: 150, scope: !1807, inlinedAt: !1809)
!2507 = !DILocation(line: 88, column: 153, scope: !1807, inlinedAt: !1809)
!2508 = !DILocation(line: 88, column: 160, scope: !1807, inlinedAt: !1809)
!2509 = !DILocation(line: 88, column: 1079, scope: !1812, inlinedAt: !1814)
!2510 = !DILocation(line: 88, column: 1112, scope: !2041, inlinedAt: !1814)
!2511 = !DILocation(line: 646, column: 11, scope: !1765)
!2512 = !DILocation(line: 647, column: 14, scope: !1765)
!2513 = !DILocation(line: 88, column: 1007, scope: !2013, inlinedAt: !1822)
!2514 = !DILocation(line: 88, column: 1010, scope: !2013, inlinedAt: !1822)
!2515 = !DILocation(line: 88, column: 1023, scope: !2013, inlinedAt: !1822)
!2516 = !DILocation(line: 88, column: 1026, scope: !2013, inlinedAt: !1822)
!2517 = !DILocation(line: 88, column: 1021, scope: !2013, inlinedAt: !1822)
!2518 = !DILocation(line: 88, column: 1033, scope: !2013, inlinedAt: !1822)
!2519 = !DILocation(line: 88, column: 1007, scope: !1813, inlinedAt: !1822)
!2520 = !DILocation(line: 88, column: 1052, scope: !2021, inlinedAt: !1822)
!2521 = !DILocation(line: 88, column: 1055, scope: !2021, inlinedAt: !1822)
!2522 = !DILocation(line: 88, column: 1040, scope: !2021, inlinedAt: !1822)
!2523 = !DILocation(line: 88, column: 1043, scope: !2021, inlinedAt: !1822)
!2524 = !DILocation(line: 88, column: 1050, scope: !2021, inlinedAt: !1822)
!2525 = !DILocation(line: 88, column: 1067, scope: !2021, inlinedAt: !1822)
!2526 = !DILocation(line: 88, column: 1108, scope: !1812, inlinedAt: !1822)
!2527 = !DILocation(line: 88, column: 1086, scope: !1812, inlinedAt: !1822)
!2528 = !DILocation(line: 88, column: 889, scope: !1810, inlinedAt: !1821)
!2529 = !DILocation(line: 88, column: 892, scope: !1810, inlinedAt: !1821)
!2530 = !DILocation(line: 88, column: 868, scope: !1810, inlinedAt: !1821)
!2531 = !DILocation(line: 88, column: 102, scope: !1807, inlinedAt: !1820)
!2532 = !DILocation(line: 88, column: 105, scope: !1807, inlinedAt: !1820)
!2533 = !DILocation(line: 88, column: 151, scope: !1807, inlinedAt: !1820)
!2534 = !DILocation(line: 88, column: 150, scope: !1807, inlinedAt: !1820)
!2535 = !DILocation(line: 88, column: 153, scope: !1807, inlinedAt: !1820)
!2536 = !DILocation(line: 88, column: 160, scope: !1807, inlinedAt: !1820)
!2537 = !DILocation(line: 88, column: 1079, scope: !1812, inlinedAt: !1822)
!2538 = !DILocation(line: 88, column: 1112, scope: !2041, inlinedAt: !1822)
!2539 = !DILocation(line: 647, column: 12, scope: !1765)
!2540 = !DILocation(line: 648, column: 29, scope: !1765)
!2541 = !DILocation(line: 648, column: 36, scope: !1765)
!2542 = !DILocation(line: 648, column: 43, scope: !1765)
!2543 = !DILocation(line: 648, column: 11, scope: !1765)
!2544 = !DILocation(line: 648, column: 9, scope: !1765)
!2545 = !DILocation(line: 649, column: 9, scope: !2546)
!2546 = distinct !DILexicalBlock(scope: !1765, file: !908, line: 649, column: 9)
!2547 = !DILocation(line: 649, column: 13, scope: !2546)
!2548 = !DILocation(line: 649, column: 9, scope: !1765)
!2549 = !DILocation(line: 650, column: 16, scope: !2546)
!2550 = !DILocation(line: 650, column: 9, scope: !2546)
!2551 = !DILocation(line: 652, column: 19, scope: !1765)
!2552 = !DILocation(line: 88, column: 1007, scope: !2013, inlinedAt: !1828)
!2553 = !DILocation(line: 88, column: 1010, scope: !2013, inlinedAt: !1828)
!2554 = !DILocation(line: 88, column: 1023, scope: !2013, inlinedAt: !1828)
!2555 = !DILocation(line: 88, column: 1026, scope: !2013, inlinedAt: !1828)
!2556 = !DILocation(line: 88, column: 1021, scope: !2013, inlinedAt: !1828)
!2557 = !DILocation(line: 88, column: 1033, scope: !2013, inlinedAt: !1828)
!2558 = !DILocation(line: 88, column: 1007, scope: !1813, inlinedAt: !1828)
!2559 = !DILocation(line: 88, column: 1052, scope: !2021, inlinedAt: !1828)
!2560 = !DILocation(line: 88, column: 1055, scope: !2021, inlinedAt: !1828)
!2561 = !DILocation(line: 88, column: 1040, scope: !2021, inlinedAt: !1828)
!2562 = !DILocation(line: 88, column: 1043, scope: !2021, inlinedAt: !1828)
!2563 = !DILocation(line: 88, column: 1050, scope: !2021, inlinedAt: !1828)
!2564 = !DILocation(line: 88, column: 1067, scope: !2021, inlinedAt: !1828)
!2565 = !DILocation(line: 88, column: 1108, scope: !1812, inlinedAt: !1828)
!2566 = !DILocation(line: 88, column: 1086, scope: !1812, inlinedAt: !1828)
!2567 = !DILocation(line: 88, column: 889, scope: !1810, inlinedAt: !1827)
!2568 = !DILocation(line: 88, column: 892, scope: !1810, inlinedAt: !1827)
!2569 = !DILocation(line: 88, column: 868, scope: !1810, inlinedAt: !1827)
!2570 = !DILocation(line: 88, column: 102, scope: !1807, inlinedAt: !1826)
!2571 = !DILocation(line: 88, column: 105, scope: !1807, inlinedAt: !1826)
!2572 = !DILocation(line: 88, column: 151, scope: !1807, inlinedAt: !1826)
!2573 = !DILocation(line: 88, column: 150, scope: !1807, inlinedAt: !1826)
!2574 = !DILocation(line: 88, column: 153, scope: !1807, inlinedAt: !1826)
!2575 = !DILocation(line: 88, column: 160, scope: !1807, inlinedAt: !1826)
!2576 = !DILocation(line: 88, column: 1079, scope: !1812, inlinedAt: !1828)
!2577 = !DILocation(line: 88, column: 1112, scope: !2041, inlinedAt: !1828)
!2578 = !DILocation(line: 652, column: 17, scope: !1765)
!2579 = !DILocation(line: 653, column: 9, scope: !2580)
!2580 = distinct !DILexicalBlock(scope: !1765, file: !908, line: 653, column: 9)
!2581 = !DILocation(line: 653, column: 24, scope: !2580)
!2582 = !DILocation(line: 653, column: 31, scope: !2580)
!2583 = !DILocation(line: 653, column: 21, scope: !2580)
!2584 = !DILocation(line: 653, column: 9, scope: !1765)
!2585 = !DILocation(line: 654, column: 31, scope: !2586)
!2586 = distinct !DILexicalBlock(scope: !2580, file: !908, line: 653, column: 44)
!2587 = !DILocation(line: 654, column: 60, scope: !2586)
!2588 = !DILocation(line: 654, column: 9, scope: !2586)
!2589 = !DILocation(line: 655, column: 9, scope: !2586)
!2590 = !DILocation(line: 657, column: 23, scope: !1765)
!2591 = !DILocation(line: 88, column: 1007, scope: !2013, inlinedAt: !1834)
!2592 = !DILocation(line: 88, column: 1010, scope: !2013, inlinedAt: !1834)
!2593 = !DILocation(line: 88, column: 1023, scope: !2013, inlinedAt: !1834)
!2594 = !DILocation(line: 88, column: 1026, scope: !2013, inlinedAt: !1834)
!2595 = !DILocation(line: 88, column: 1021, scope: !2013, inlinedAt: !1834)
!2596 = !DILocation(line: 88, column: 1033, scope: !2013, inlinedAt: !1834)
!2597 = !DILocation(line: 88, column: 1007, scope: !1813, inlinedAt: !1834)
!2598 = !DILocation(line: 88, column: 1052, scope: !2021, inlinedAt: !1834)
!2599 = !DILocation(line: 88, column: 1055, scope: !2021, inlinedAt: !1834)
!2600 = !DILocation(line: 88, column: 1040, scope: !2021, inlinedAt: !1834)
!2601 = !DILocation(line: 88, column: 1043, scope: !2021, inlinedAt: !1834)
!2602 = !DILocation(line: 88, column: 1050, scope: !2021, inlinedAt: !1834)
!2603 = !DILocation(line: 88, column: 1067, scope: !2021, inlinedAt: !1834)
!2604 = !DILocation(line: 88, column: 1108, scope: !1812, inlinedAt: !1834)
!2605 = !DILocation(line: 88, column: 1086, scope: !1812, inlinedAt: !1834)
!2606 = !DILocation(line: 88, column: 889, scope: !1810, inlinedAt: !1833)
!2607 = !DILocation(line: 88, column: 892, scope: !1810, inlinedAt: !1833)
!2608 = !DILocation(line: 88, column: 868, scope: !1810, inlinedAt: !1833)
!2609 = !DILocation(line: 88, column: 102, scope: !1807, inlinedAt: !1832)
!2610 = !DILocation(line: 88, column: 105, scope: !1807, inlinedAt: !1832)
!2611 = !DILocation(line: 88, column: 151, scope: !1807, inlinedAt: !1832)
!2612 = !DILocation(line: 88, column: 150, scope: !1807, inlinedAt: !1832)
!2613 = !DILocation(line: 88, column: 153, scope: !1807, inlinedAt: !1832)
!2614 = !DILocation(line: 88, column: 160, scope: !1807, inlinedAt: !1832)
!2615 = !DILocation(line: 88, column: 1079, scope: !1812, inlinedAt: !1834)
!2616 = !DILocation(line: 88, column: 1112, scope: !2041, inlinedAt: !1834)
!2617 = !DILocation(line: 657, column: 5, scope: !1765)
!2618 = !DILocation(line: 657, column: 8, scope: !1765)
!2619 = !DILocation(line: 657, column: 21, scope: !1765)
!2620 = !DILocation(line: 658, column: 9, scope: !2621)
!2621 = distinct !DILexicalBlock(scope: !1765, file: !908, line: 658, column: 9)
!2622 = !DILocation(line: 658, column: 12, scope: !2621)
!2623 = !DILocation(line: 658, column: 25, scope: !2621)
!2624 = !DILocation(line: 658, column: 30, scope: !2621)
!2625 = !DILocation(line: 658, column: 33, scope: !2626)
!2626 = !DILexicalBlockFile(scope: !2621, file: !908, discriminator: 1)
!2627 = !DILocation(line: 658, column: 36, scope: !2626)
!2628 = !DILocation(line: 658, column: 64, scope: !2626)
!2629 = !DILocation(line: 658, column: 71, scope: !2626)
!2630 = !DILocation(line: 658, column: 62, scope: !2626)
!2631 = !DILocation(line: 658, column: 49, scope: !2626)
!2632 = !DILocation(line: 658, column: 9, scope: !2626)
!2633 = !DILocation(line: 659, column: 16, scope: !2634)
!2634 = distinct !DILexicalBlock(scope: !2621, file: !908, line: 658, column: 85)
!2635 = !DILocation(line: 660, column: 46, scope: !2634)
!2636 = !DILocation(line: 660, column: 49, scope: !2634)
!2637 = !DILocation(line: 659, column: 9, scope: !2634)
!2638 = !DILocation(line: 661, column: 9, scope: !2634)
!2639 = !DILocation(line: 664, column: 5, scope: !1765)
!2640 = !DILocation(line: 167, column: 20, scope: !1799, inlinedAt: !1838)
!2641 = !DILocation(line: 167, column: 23, scope: !1799, inlinedAt: !1838)
!2642 = !DILocation(line: 167, column: 36, scope: !1799, inlinedAt: !1838)
!2643 = !DILocation(line: 167, column: 39, scope: !1799, inlinedAt: !1838)
!2644 = !DILocation(line: 167, column: 34, scope: !1799, inlinedAt: !1838)
!2645 = !DILocation(line: 167, column: 50, scope: !1799, inlinedAt: !1838)
!2646 = !DILocation(line: 167, column: 49, scope: !1799, inlinedAt: !1838)
!2647 = !DILocation(line: 167, column: 47, scope: !1799, inlinedAt: !1838)
!2648 = !DILocation(line: 167, column: 19, scope: !1799, inlinedAt: !1838)
!2649 = !DILocation(line: 167, column: 59, scope: !2376, inlinedAt: !1838)
!2650 = !DILocation(line: 167, column: 58, scope: !2376, inlinedAt: !1838)
!2651 = !DILocation(line: 167, column: 19, scope: !2376, inlinedAt: !1838)
!2652 = !DILocation(line: 167, column: 68, scope: !2380, inlinedAt: !1838)
!2653 = !DILocation(line: 167, column: 71, scope: !2380, inlinedAt: !1838)
!2654 = !DILocation(line: 167, column: 84, scope: !2380, inlinedAt: !1838)
!2655 = !DILocation(line: 167, column: 87, scope: !2380, inlinedAt: !1838)
!2656 = !DILocation(line: 167, column: 82, scope: !2380, inlinedAt: !1838)
!2657 = !DILocation(line: 167, column: 19, scope: !2380, inlinedAt: !1838)
!2658 = !DILocation(line: 167, column: 19, scope: !2387, inlinedAt: !1838)
!2659 = !DILocation(line: 167, column: 5, scope: !2387, inlinedAt: !1838)
!2660 = !DILocation(line: 167, column: 8, scope: !2387, inlinedAt: !1838)
!2661 = !DILocation(line: 167, column: 15, scope: !2387, inlinedAt: !1838)
!2662 = !DILocation(line: 666, column: 21, scope: !1765)
!2663 = !DILocation(line: 666, column: 28, scope: !1765)
!2664 = !DILocation(line: 666, column: 43, scope: !1765)
!2665 = !DILocation(line: 666, column: 46, scope: !1765)
!2666 = !DILocation(line: 666, column: 41, scope: !1765)
!2667 = !DILocation(line: 666, column: 59, scope: !1765)
!2668 = !DILocation(line: 666, column: 66, scope: !1765)
!2669 = !DILocation(line: 666, column: 69, scope: !1765)
!2670 = !DILocation(line: 666, column: 64, scope: !1765)
!2671 = !DILocation(line: 666, column: 5, scope: !1765)
!2672 = !DILocation(line: 666, column: 8, scope: !1765)
!2673 = !DILocation(line: 666, column: 18, scope: !1765)
!2674 = !DILocation(line: 667, column: 9, scope: !2675)
!2675 = distinct !DILexicalBlock(scope: !1765, file: !908, line: 667, column: 9)
!2676 = !DILocation(line: 667, column: 12, scope: !2675)
!2677 = !DILocation(line: 667, column: 22, scope: !2675)
!2678 = !DILocation(line: 667, column: 9, scope: !1765)
!2679 = !DILocation(line: 668, column: 16, scope: !2680)
!2680 = distinct !DILexicalBlock(scope: !2675, file: !908, line: 667, column: 52)
!2681 = !DILocation(line: 669, column: 50, scope: !2680)
!2682 = !DILocation(line: 669, column: 53, scope: !2680)
!2683 = !DILocation(line: 668, column: 9, scope: !2680)
!2684 = !DILocation(line: 670, column: 9, scope: !2680)
!2685 = !DILocation(line: 673, column: 12, scope: !1846)
!2686 = !DILocation(line: 673, column: 10, scope: !1846)
!2687 = !DILocation(line: 673, column: 17, scope: !2688)
!2688 = !DILexicalBlockFile(scope: !1845, file: !908, discriminator: 1)
!2689 = !DILocation(line: 673, column: 21, scope: !2688)
!2690 = !DILocation(line: 673, column: 24, scope: !2688)
!2691 = !DILocation(line: 673, column: 19, scope: !2688)
!2692 = !DILocation(line: 673, column: 5, scope: !2688)
!2693 = !DILocation(line: 674, column: 35, scope: !1844)
!2694 = !DILocation(line: 674, column: 25, scope: !1844)
!2695 = !DILocation(line: 674, column: 28, scope: !1844)
!2696 = !DILocation(line: 674, column: 24, scope: !1844)
!2697 = !DILocation(line: 674, column: 55, scope: !1844)
!2698 = !DILocation(line: 674, column: 40, scope: !1844)
!2699 = !DILocation(line: 674, column: 43, scope: !1844)
!2700 = !DILocation(line: 674, column: 59, scope: !1844)
!2701 = !DILocation(line: 674, column: 62, scope: !1844)
!2702 = !DILocation(line: 674, column: 72, scope: !1844)
!2703 = !DILocation(line: 674, column: 9, scope: !1844)
!2704 = !DILocation(line: 675, column: 24, scope: !2705)
!2705 = distinct !DILexicalBlock(scope: !1844, file: !908, line: 675, column: 13)
!2706 = !DILocation(line: 675, column: 14, scope: !2705)
!2707 = !DILocation(line: 675, column: 17, scope: !2705)
!2708 = !DILocation(line: 675, column: 13, scope: !1844)
!2709 = !DILocation(line: 676, column: 13, scope: !2705)
!2710 = !DILocation(line: 678, column: 18, scope: !1844)
!2711 = !DILocation(line: 88, column: 1007, scope: !2013, inlinedAt: !1843)
!2712 = !DILocation(line: 88, column: 1010, scope: !2013, inlinedAt: !1843)
!2713 = !DILocation(line: 88, column: 1023, scope: !2013, inlinedAt: !1843)
!2714 = !DILocation(line: 88, column: 1026, scope: !2013, inlinedAt: !1843)
!2715 = !DILocation(line: 88, column: 1021, scope: !2013, inlinedAt: !1843)
!2716 = !DILocation(line: 88, column: 1033, scope: !2013, inlinedAt: !1843)
!2717 = !DILocation(line: 88, column: 1007, scope: !1813, inlinedAt: !1843)
!2718 = !DILocation(line: 88, column: 1052, scope: !2021, inlinedAt: !1843)
!2719 = !DILocation(line: 88, column: 1055, scope: !2021, inlinedAt: !1843)
!2720 = !DILocation(line: 88, column: 1040, scope: !2021, inlinedAt: !1843)
!2721 = !DILocation(line: 88, column: 1043, scope: !2021, inlinedAt: !1843)
!2722 = !DILocation(line: 88, column: 1050, scope: !2021, inlinedAt: !1843)
!2723 = !DILocation(line: 88, column: 1067, scope: !2021, inlinedAt: !1843)
!2724 = !DILocation(line: 88, column: 1108, scope: !1812, inlinedAt: !1843)
!2725 = !DILocation(line: 88, column: 1086, scope: !1812, inlinedAt: !1843)
!2726 = !DILocation(line: 88, column: 889, scope: !1810, inlinedAt: !1842)
!2727 = !DILocation(line: 88, column: 892, scope: !1810, inlinedAt: !1842)
!2728 = !DILocation(line: 88, column: 868, scope: !1810, inlinedAt: !1842)
!2729 = !DILocation(line: 88, column: 102, scope: !1807, inlinedAt: !1841)
!2730 = !DILocation(line: 88, column: 105, scope: !1807, inlinedAt: !1841)
!2731 = !DILocation(line: 88, column: 151, scope: !1807, inlinedAt: !1841)
!2732 = !DILocation(line: 88, column: 150, scope: !1807, inlinedAt: !1841)
!2733 = !DILocation(line: 88, column: 153, scope: !1807, inlinedAt: !1841)
!2734 = !DILocation(line: 88, column: 160, scope: !1807, inlinedAt: !1841)
!2735 = !DILocation(line: 88, column: 1079, scope: !1812, inlinedAt: !1843)
!2736 = !DILocation(line: 88, column: 1112, scope: !2041, inlinedAt: !1843)
!2737 = !DILocation(line: 678, column: 16, scope: !1844)
!2738 = !DILocation(line: 679, column: 13, scope: !2739)
!2739 = distinct !DILexicalBlock(scope: !1844, file: !908, line: 679, column: 13)
!2740 = !DILocation(line: 679, column: 23, scope: !2739)
!2741 = !DILocation(line: 679, column: 30, scope: !2739)
!2742 = !DILocation(line: 679, column: 37, scope: !2739)
!2743 = !DILocation(line: 679, column: 35, scope: !2739)
!2744 = !DILocation(line: 679, column: 20, scope: !2739)
!2745 = !DILocation(line: 679, column: 13, scope: !1844)
!2746 = !DILocation(line: 680, column: 13, scope: !2739)
!2747 = !DILocation(line: 682, column: 13, scope: !2748)
!2748 = distinct !DILexicalBlock(scope: !1844, file: !908, line: 682, column: 13)
!2749 = !DILocation(line: 682, column: 15, scope: !2748)
!2750 = !DILocation(line: 682, column: 13, scope: !1844)
!2751 = !DILocation(line: 683, column: 28, scope: !2748)
!2752 = !DILocation(line: 683, column: 26, scope: !2748)
!2753 = !DILocation(line: 683, column: 13, scope: !2748)
!2754 = !DILocation(line: 685, column: 16, scope: !1855)
!2755 = !DILocation(line: 685, column: 14, scope: !1855)
!2756 = !DILocation(line: 685, column: 21, scope: !2757)
!2757 = !DILexicalBlockFile(scope: !1854, file: !908, discriminator: 1)
!2758 = !DILocation(line: 685, column: 25, scope: !2757)
!2759 = !DILocation(line: 685, column: 28, scope: !2757)
!2760 = !DILocation(line: 685, column: 38, scope: !2757)
!2761 = !DILocation(line: 685, column: 23, scope: !2757)
!2762 = !DILocation(line: 685, column: 9, scope: !2757)
!2763 = !DILocation(line: 686, column: 37, scope: !1853)
!2764 = !DILocation(line: 686, column: 46, scope: !1853)
!2765 = !DILocation(line: 686, column: 44, scope: !1853)
!2766 = !DILocation(line: 686, column: 26, scope: !1853)
!2767 = !DILocation(line: 686, column: 13, scope: !1853)
!2768 = !DILocation(line: 686, column: 23, scope: !1853)
!2769 = !DILocation(line: 686, column: 16, scope: !1853)
!2770 = !DILocation(line: 686, column: 29, scope: !1853)
!2771 = !DILocation(line: 686, column: 35, scope: !1853)
!2772 = !DILocation(line: 688, column: 27, scope: !1853)
!2773 = !DILocation(line: 88, column: 1007, scope: !2013, inlinedAt: !1852)
!2774 = !DILocation(line: 88, column: 1010, scope: !2013, inlinedAt: !1852)
!2775 = !DILocation(line: 88, column: 1023, scope: !2013, inlinedAt: !1852)
!2776 = !DILocation(line: 88, column: 1026, scope: !2013, inlinedAt: !1852)
!2777 = !DILocation(line: 88, column: 1021, scope: !2013, inlinedAt: !1852)
!2778 = !DILocation(line: 88, column: 1033, scope: !2013, inlinedAt: !1852)
!2779 = !DILocation(line: 88, column: 1007, scope: !1813, inlinedAt: !1852)
!2780 = !DILocation(line: 88, column: 1052, scope: !2021, inlinedAt: !1852)
!2781 = !DILocation(line: 88, column: 1055, scope: !2021, inlinedAt: !1852)
!2782 = !DILocation(line: 88, column: 1040, scope: !2021, inlinedAt: !1852)
!2783 = !DILocation(line: 88, column: 1043, scope: !2021, inlinedAt: !1852)
!2784 = !DILocation(line: 88, column: 1050, scope: !2021, inlinedAt: !1852)
!2785 = !DILocation(line: 88, column: 1067, scope: !2021, inlinedAt: !1852)
!2786 = !DILocation(line: 88, column: 1108, scope: !1812, inlinedAt: !1852)
!2787 = !DILocation(line: 88, column: 1086, scope: !1812, inlinedAt: !1852)
!2788 = !DILocation(line: 88, column: 889, scope: !1810, inlinedAt: !1851)
!2789 = !DILocation(line: 88, column: 892, scope: !1810, inlinedAt: !1851)
!2790 = !DILocation(line: 88, column: 868, scope: !1810, inlinedAt: !1851)
!2791 = !DILocation(line: 88, column: 102, scope: !1807, inlinedAt: !1850)
!2792 = !DILocation(line: 88, column: 105, scope: !1807, inlinedAt: !1850)
!2793 = !DILocation(line: 88, column: 151, scope: !1807, inlinedAt: !1850)
!2794 = !DILocation(line: 88, column: 150, scope: !1807, inlinedAt: !1850)
!2795 = !DILocation(line: 88, column: 153, scope: !1807, inlinedAt: !1850)
!2796 = !DILocation(line: 88, column: 160, scope: !1807, inlinedAt: !1850)
!2797 = !DILocation(line: 88, column: 1079, scope: !1812, inlinedAt: !1852)
!2798 = !DILocation(line: 88, column: 1112, scope: !2041, inlinedAt: !1852)
!2799 = !DILocation(line: 688, column: 25, scope: !1853)
!2800 = !DILocation(line: 689, column: 17, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !1853, file: !908, line: 689, column: 17)
!2802 = !DILocation(line: 689, column: 32, scope: !2801)
!2803 = !DILocation(line: 689, column: 29, scope: !2801)
!2804 = !DILocation(line: 689, column: 39, scope: !2801)
!2805 = !DILocation(line: 689, column: 42, scope: !2806)
!2806 = !DILexicalBlockFile(scope: !2801, file: !908, discriminator: 1)
!2807 = !DILocation(line: 689, column: 57, scope: !2806)
!2808 = !DILocation(line: 689, column: 64, scope: !2806)
!2809 = !DILocation(line: 689, column: 71, scope: !2806)
!2810 = !DILocation(line: 689, column: 69, scope: !2806)
!2811 = !DILocation(line: 689, column: 54, scope: !2806)
!2812 = !DILocation(line: 689, column: 17, scope: !2806)
!2813 = !DILocation(line: 690, column: 17, scope: !2801)
!2814 = !DILocation(line: 692, column: 36, scope: !1853)
!2815 = !DILocation(line: 692, column: 50, scope: !1853)
!2816 = !DILocation(line: 692, column: 48, scope: !1853)
!2817 = !DILocation(line: 692, column: 26, scope: !1853)
!2818 = !DILocation(line: 692, column: 13, scope: !1853)
!2819 = !DILocation(line: 692, column: 23, scope: !1853)
!2820 = !DILocation(line: 692, column: 16, scope: !1853)
!2821 = !DILocation(line: 692, column: 29, scope: !1853)
!2822 = !DILocation(line: 692, column: 34, scope: !1853)
!2823 = !DILocation(line: 693, column: 22, scope: !1853)
!2824 = !DILocation(line: 693, column: 20, scope: !1853)
!2825 = !DILocation(line: 694, column: 9, scope: !1853)
!2826 = !DILocation(line: 685, column: 44, scope: !2827)
!2827 = !DILexicalBlockFile(scope: !1854, file: !908, discriminator: 2)
!2828 = !DILocation(line: 685, column: 9, scope: !2827)
!2829 = distinct !{!2829, !2830}
!2830 = !DILocation(line: 685, column: 9, scope: !1844)
!2831 = !DILocation(line: 696, column: 33, scope: !1844)
!2832 = !DILocation(line: 696, column: 42, scope: !1844)
!2833 = !DILocation(line: 696, column: 40, scope: !1844)
!2834 = !DILocation(line: 696, column: 22, scope: !1844)
!2835 = !DILocation(line: 696, column: 9, scope: !1844)
!2836 = !DILocation(line: 696, column: 19, scope: !1844)
!2837 = !DILocation(line: 696, column: 12, scope: !1844)
!2838 = !DILocation(line: 696, column: 25, scope: !1844)
!2839 = !DILocation(line: 696, column: 31, scope: !1844)
!2840 = !DILocation(line: 697, column: 32, scope: !1844)
!2841 = !DILocation(line: 697, column: 39, scope: !1844)
!2842 = !DILocation(line: 697, column: 59, scope: !1844)
!2843 = !DILocation(line: 697, column: 46, scope: !1844)
!2844 = !DILocation(line: 697, column: 56, scope: !1844)
!2845 = !DILocation(line: 697, column: 49, scope: !1844)
!2846 = !DILocation(line: 697, column: 62, scope: !1844)
!2847 = !DILocation(line: 697, column: 44, scope: !1844)
!2848 = !DILocation(line: 697, column: 22, scope: !1844)
!2849 = !DILocation(line: 697, column: 9, scope: !1844)
!2850 = !DILocation(line: 697, column: 19, scope: !1844)
!2851 = !DILocation(line: 697, column: 12, scope: !1844)
!2852 = !DILocation(line: 697, column: 25, scope: !1844)
!2853 = !DILocation(line: 697, column: 30, scope: !1844)
!2854 = !DILocation(line: 698, column: 5, scope: !1844)
!2855 = !DILocation(line: 673, column: 33, scope: !2856)
!2856 = !DILexicalBlockFile(scope: !1845, file: !908, discriminator: 2)
!2857 = !DILocation(line: 673, column: 5, scope: !2856)
!2858 = distinct !{!2858, !2859}
!2859 = !DILocation(line: 673, column: 5, scope: !1765)
!2860 = !DILocation(line: 700, column: 9, scope: !1862)
!2861 = !DILocation(line: 95, column: 994, scope: !2090, inlinedAt: !1861)
!2862 = !DILocation(line: 95, column: 997, scope: !2090, inlinedAt: !1861)
!2863 = !DILocation(line: 95, column: 1010, scope: !2090, inlinedAt: !1861)
!2864 = !DILocation(line: 95, column: 1013, scope: !2090, inlinedAt: !1861)
!2865 = !DILocation(line: 95, column: 1008, scope: !2090, inlinedAt: !1861)
!2866 = !DILocation(line: 95, column: 1020, scope: !2090, inlinedAt: !1861)
!2867 = !DILocation(line: 95, column: 994, scope: !1786, inlinedAt: !1861)
!2868 = !DILocation(line: 95, column: 1039, scope: !2098, inlinedAt: !1861)
!2869 = !DILocation(line: 95, column: 1042, scope: !2098, inlinedAt: !1861)
!2870 = !DILocation(line: 95, column: 1027, scope: !2098, inlinedAt: !1861)
!2871 = !DILocation(line: 95, column: 1030, scope: !2098, inlinedAt: !1861)
!2872 = !DILocation(line: 95, column: 1037, scope: !2098, inlinedAt: !1861)
!2873 = !DILocation(line: 95, column: 1054, scope: !2098, inlinedAt: !1861)
!2874 = !DILocation(line: 95, column: 1095, scope: !1785, inlinedAt: !1861)
!2875 = !DILocation(line: 95, column: 1073, scope: !1785, inlinedAt: !1861)
!2876 = !DILocation(line: 95, column: 876, scope: !1774, inlinedAt: !1860)
!2877 = !DILocation(line: 95, column: 879, scope: !1774, inlinedAt: !1860)
!2878 = !DILocation(line: 95, column: 855, scope: !1774, inlinedAt: !1860)
!2879 = !DILocation(line: 95, column: 102, scope: !1767, inlinedAt: !1859)
!2880 = !DILocation(line: 95, column: 105, scope: !1767, inlinedAt: !1859)
!2881 = !DILocation(line: 95, column: 138, scope: !1767, inlinedAt: !1859)
!2882 = !DILocation(line: 95, column: 137, scope: !1767, inlinedAt: !1859)
!2883 = !DILocation(line: 95, column: 140, scope: !1767, inlinedAt: !1859)
!2884 = !DILocation(line: 95, column: 119, scope: !1767, inlinedAt: !1859)
!2885 = !DILocation(line: 95, column: 118, scope: !1767, inlinedAt: !1859)
!2886 = !DILocation(line: 95, column: 1066, scope: !1785, inlinedAt: !1861)
!2887 = !DILocation(line: 95, column: 1099, scope: !2119, inlinedAt: !1861)
!2888 = !DILocation(line: 700, column: 41, scope: !1862)
!2889 = !DILocation(line: 700, column: 44, scope: !1862)
!2890 = !DILocation(line: 700, column: 38, scope: !1862)
!2891 = !DILocation(line: 700, column: 9, scope: !1765)
!2892 = !DILocation(line: 701, column: 9, scope: !1862)
!2893 = !DILocation(line: 703, column: 30, scope: !1765)
!2894 = !DILocation(line: 703, column: 33, scope: !1765)
!2895 = !DILocation(line: 703, column: 45, scope: !1765)
!2896 = !DILocation(line: 703, column: 48, scope: !1765)
!2897 = !DILocation(line: 703, column: 43, scope: !1765)
!2898 = !DILocation(line: 703, column: 5, scope: !1765)
!2899 = !DILocation(line: 167, column: 20, scope: !1799, inlinedAt: !1866)
!2900 = !DILocation(line: 167, column: 23, scope: !1799, inlinedAt: !1866)
!2901 = !DILocation(line: 167, column: 36, scope: !1799, inlinedAt: !1866)
!2902 = !DILocation(line: 167, column: 39, scope: !1799, inlinedAt: !1866)
!2903 = !DILocation(line: 167, column: 34, scope: !1799, inlinedAt: !1866)
!2904 = !DILocation(line: 167, column: 50, scope: !1799, inlinedAt: !1866)
!2905 = !DILocation(line: 167, column: 49, scope: !1799, inlinedAt: !1866)
!2906 = !DILocation(line: 167, column: 47, scope: !1799, inlinedAt: !1866)
!2907 = !DILocation(line: 167, column: 19, scope: !1799, inlinedAt: !1866)
!2908 = !DILocation(line: 167, column: 59, scope: !2376, inlinedAt: !1866)
!2909 = !DILocation(line: 167, column: 58, scope: !2376, inlinedAt: !1866)
!2910 = !DILocation(line: 167, column: 19, scope: !2376, inlinedAt: !1866)
!2911 = !DILocation(line: 167, column: 68, scope: !2380, inlinedAt: !1866)
!2912 = !DILocation(line: 167, column: 71, scope: !2380, inlinedAt: !1866)
!2913 = !DILocation(line: 167, column: 84, scope: !2380, inlinedAt: !1866)
!2914 = !DILocation(line: 167, column: 87, scope: !2380, inlinedAt: !1866)
!2915 = !DILocation(line: 167, column: 82, scope: !2380, inlinedAt: !1866)
!2916 = !DILocation(line: 167, column: 19, scope: !2380, inlinedAt: !1866)
!2917 = !DILocation(line: 167, column: 19, scope: !2387, inlinedAt: !1866)
!2918 = !DILocation(line: 167, column: 5, scope: !2387, inlinedAt: !1866)
!2919 = !DILocation(line: 167, column: 8, scope: !2387, inlinedAt: !1866)
!2920 = !DILocation(line: 167, column: 15, scope: !2387, inlinedAt: !1866)
!2921 = !DILocation(line: 705, column: 18, scope: !1765)
!2922 = !DILocation(line: 705, column: 32, scope: !1765)
!2923 = !DILocation(line: 705, column: 30, scope: !1765)
!2924 = !DILocation(line: 705, column: 47, scope: !1765)
!2925 = !DILocation(line: 190, column: 18, scope: !1869, inlinedAt: !1873)
!2926 = !DILocation(line: 190, column: 21, scope: !1869, inlinedAt: !1873)
!2927 = !DILocation(line: 190, column: 30, scope: !1869, inlinedAt: !1873)
!2928 = !DILocation(line: 190, column: 33, scope: !1869, inlinedAt: !1873)
!2929 = !DILocation(line: 190, column: 28, scope: !1869, inlinedAt: !1873)
!2930 = !DILocation(line: 190, column: 12, scope: !1869, inlinedAt: !1873)
!2931 = !DILocation(line: 705, column: 45, scope: !1765)
!2932 = !DILocation(line: 705, column: 16, scope: !1765)
!2933 = !DILocation(line: 706, column: 9, scope: !2934)
!2934 = distinct !DILexicalBlock(scope: !1765, file: !908, line: 706, column: 9)
!2935 = !DILocation(line: 706, column: 20, scope: !2934)
!2936 = !DILocation(line: 706, column: 9, scope: !1765)
!2937 = !DILocation(line: 707, column: 9, scope: !2934)
!2938 = !DILocation(line: 709, column: 33, scope: !1765)
!2939 = !DILocation(line: 709, column: 40, scope: !1765)
!2940 = !DILocation(line: 709, column: 47, scope: !1765)
!2941 = !DILocation(line: 190, column: 18, scope: !1869, inlinedAt: !1875)
!2942 = !DILocation(line: 190, column: 21, scope: !1869, inlinedAt: !1875)
!2943 = !DILocation(line: 190, column: 30, scope: !1869, inlinedAt: !1875)
!2944 = !DILocation(line: 190, column: 33, scope: !1869, inlinedAt: !1875)
!2945 = !DILocation(line: 190, column: 28, scope: !1869, inlinedAt: !1875)
!2946 = !DILocation(line: 190, column: 12, scope: !1869, inlinedAt: !1875)
!2947 = !DILocation(line: 709, column: 45, scope: !1765)
!2948 = !DILocation(line: 709, column: 73, scope: !1765)
!2949 = !DILocation(line: 709, column: 11, scope: !2950)
!2950 = !DILexicalBlockFile(scope: !1765, file: !908, discriminator: 1)
!2951 = !DILocation(line: 709, column: 9, scope: !1765)
!2952 = !DILocation(line: 710, column: 9, scope: !2953)
!2953 = distinct !DILexicalBlock(scope: !1765, file: !908, line: 710, column: 9)
!2954 = !DILocation(line: 710, column: 13, scope: !2953)
!2955 = !DILocation(line: 710, column: 9, scope: !1765)
!2956 = !DILocation(line: 711, column: 16, scope: !2953)
!2957 = !DILocation(line: 711, column: 9, scope: !2953)
!2958 = !DILocation(line: 713, column: 25, scope: !1765)
!2959 = !DILocation(line: 713, column: 39, scope: !1765)
!2960 = !DILocation(line: 713, column: 42, scope: !1765)
!2961 = !DILocation(line: 713, column: 11, scope: !1765)
!2962 = !DILocation(line: 713, column: 9, scope: !1765)
!2963 = !DILocation(line: 714, column: 9, scope: !2964)
!2964 = distinct !DILexicalBlock(scope: !1765, file: !908, line: 714, column: 9)
!2965 = !DILocation(line: 714, column: 13, scope: !2964)
!2966 = !DILocation(line: 714, column: 9, scope: !1765)
!2967 = !DILocation(line: 715, column: 16, scope: !2964)
!2968 = !DILocation(line: 715, column: 9, scope: !2964)
!2969 = !DILocation(line: 717, column: 5, scope: !1765)
!2970 = !DILocation(line: 717, column: 8, scope: !1765)
!2971 = !DILocation(line: 717, column: 18, scope: !1765)
!2972 = !DILocation(line: 718, column: 5, scope: !1765)
!2973 = !DILocation(line: 718, column: 8, scope: !1765)
!2974 = !DILocation(line: 718, column: 18, scope: !1765)
!2975 = !DILocation(line: 720, column: 37, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !1765, file: !908, line: 720, column: 9)
!2977 = !DILocation(line: 720, column: 16, scope: !2976)
!2978 = !DILocation(line: 720, column: 14, scope: !2976)
!2979 = !DILocation(line: 720, column: 56, scope: !2976)
!2980 = !DILocation(line: 720, column: 9, scope: !1765)
!2981 = !DILocation(line: 721, column: 16, scope: !2976)
!2982 = !DILocation(line: 721, column: 9, scope: !2976)
!2983 = !DILocation(line: 723, column: 14, scope: !1765)
!2984 = !DILocation(line: 723, column: 21, scope: !1765)
!2985 = !DILocation(line: 723, column: 5, scope: !1765)
!2986 = !DILocation(line: 723, column: 8, scope: !1765)
!2987 = !DILocation(line: 723, column: 12, scope: !1765)
!2988 = !DILocation(line: 724, column: 12, scope: !1765)
!2989 = !DILocation(line: 724, column: 5, scope: !1765)
!2990 = !DILocation(line: 724, column: 8, scope: !1765)
!2991 = !DILocation(line: 724, column: 10, scope: !1765)
!2992 = !DILocation(line: 725, column: 5, scope: !1765)
!2993 = !DILocation(line: 725, column: 12, scope: !1765)
!2994 = !DILocation(line: 725, column: 21, scope: !1765)
!2995 = !DILocation(line: 725, column: 28, scope: !1765)
!2996 = !DILocation(line: 725, column: 31, scope: !1765)
!2997 = !DILocation(line: 725, column: 61, scope: !1765)
!2998 = !DILocation(line: 725, column: 64, scope: !1765)
!2999 = !DILocation(line: 727, column: 9, scope: !3000)
!3000 = distinct !DILexicalBlock(scope: !1765, file: !908, line: 727, column: 9)
!3001 = !DILocation(line: 727, column: 16, scope: !3000)
!3002 = !DILocation(line: 727, column: 24, scope: !3000)
!3003 = !DILocation(line: 727, column: 43, scope: !3000)
!3004 = !DILocation(line: 728, column: 9, scope: !3000)
!3005 = !DILocation(line: 728, column: 16, scope: !3000)
!3006 = !DILocation(line: 728, column: 24, scope: !3000)
!3007 = !DILocation(line: 728, column: 44, scope: !3000)
!3008 = !DILocation(line: 729, column: 9, scope: !3000)
!3009 = !DILocation(line: 729, column: 16, scope: !3000)
!3010 = !DILocation(line: 729, column: 24, scope: !3000)
!3011 = !DILocation(line: 729, column: 47, scope: !3000)
!3012 = !DILocation(line: 730, column: 9, scope: !3000)
!3013 = !DILocation(line: 730, column: 16, scope: !3000)
!3014 = !DILocation(line: 730, column: 24, scope: !3000)
!3015 = !DILocation(line: 730, column: 47, scope: !3000)
!3016 = !DILocation(line: 731, column: 9, scope: !3000)
!3017 = !DILocation(line: 731, column: 16, scope: !3000)
!3018 = !DILocation(line: 731, column: 24, scope: !3000)
!3019 = !DILocation(line: 731, column: 47, scope: !3000)
!3020 = !DILocation(line: 732, column: 9, scope: !3000)
!3021 = !DILocation(line: 732, column: 16, scope: !3000)
!3022 = !DILocation(line: 732, column: 24, scope: !3000)
!3023 = !DILocation(line: 727, column: 9, scope: !2950)
!3024 = !DILocation(line: 733, column: 9, scope: !3025)
!3025 = distinct !DILexicalBlock(scope: !3000, file: !908, line: 732, column: 48)
!3026 = distinct !{!3026, !3024}
!3027 = !DILocalVariable(name: "SWAP_tmp", scope: !3028, file: !908, line: 733, type: !1029)
!3028 = distinct !DILexicalBlock(scope: !3025, file: !908, line: 733, column: 11)
!3029 = !DILocation(line: 733, column: 21, scope: !3028)
!3030 = !DILocation(line: 733, column: 31, scope: !3031)
!3031 = !DILexicalBlockFile(scope: !3028, file: !908, discriminator: 1)
!3032 = !DILocation(line: 733, column: 34, scope: !3031)
!3033 = !DILocation(line: 733, column: 21, scope: !3031)
!3034 = !DILocation(line: 733, column: 55, scope: !3031)
!3035 = !DILocation(line: 733, column: 58, scope: !3031)
!3036 = !DILocation(line: 733, column: 43, scope: !3031)
!3037 = !DILocation(line: 733, column: 46, scope: !3031)
!3038 = !DILocation(line: 733, column: 53, scope: !3031)
!3039 = !DILocation(line: 733, column: 79, scope: !3031)
!3040 = !DILocation(line: 733, column: 67, scope: !3031)
!3041 = !DILocation(line: 733, column: 70, scope: !3031)
!3042 = !DILocation(line: 733, column: 77, scope: !3031)
!3043 = !DILocation(line: 733, column: 88, scope: !3031)
!3044 = !DILocation(line: 734, column: 9, scope: !3025)
!3045 = distinct !{!3045, !3044}
!3046 = !DILocalVariable(name: "SWAP_tmp", scope: !3047, file: !908, line: 734, type: !889)
!3047 = distinct !DILexicalBlock(scope: !3025, file: !908, line: 734, column: 11)
!3048 = !DILocation(line: 734, column: 16, scope: !3047)
!3049 = !DILocation(line: 734, column: 26, scope: !3050)
!3050 = !DILexicalBlockFile(scope: !3047, file: !908, discriminator: 1)
!3051 = !DILocation(line: 734, column: 29, scope: !3050)
!3052 = !DILocation(line: 734, column: 16, scope: !3050)
!3053 = !DILocation(line: 734, column: 58, scope: !3050)
!3054 = !DILocation(line: 734, column: 61, scope: !3050)
!3055 = !DILocation(line: 734, column: 42, scope: !3050)
!3056 = !DILocation(line: 734, column: 45, scope: !3050)
!3057 = !DILocation(line: 734, column: 56, scope: !3050)
!3058 = !DILocation(line: 734, column: 90, scope: !3050)
!3059 = !DILocation(line: 734, column: 74, scope: !3050)
!3060 = !DILocation(line: 734, column: 77, scope: !3050)
!3061 = !DILocation(line: 734, column: 88, scope: !3050)
!3062 = !DILocation(line: 734, column: 99, scope: !3050)
!3063 = !DILocation(line: 735, column: 5, scope: !3025)
!3064 = !DILocation(line: 736, column: 17, scope: !3065)
!3065 = distinct !DILexicalBlock(scope: !3000, file: !908, line: 735, column: 12)
!3066 = !DILocation(line: 736, column: 20, scope: !3065)
!3067 = !DILocation(line: 736, column: 9, scope: !3065)
!3068 = !DILocation(line: 738, column: 13, scope: !3069)
!3069 = distinct !DILexicalBlock(scope: !3065, file: !908, line: 736, column: 34)
!3070 = !DILocation(line: 738, column: 16, scope: !3069)
!3071 = !DILocation(line: 738, column: 27, scope: !3069)
!3072 = !DILocation(line: 739, column: 13, scope: !3069)
!3073 = !DILocation(line: 741, column: 13, scope: !3069)
!3074 = !DILocation(line: 741, column: 16, scope: !3069)
!3075 = !DILocation(line: 741, column: 27, scope: !3069)
!3076 = !DILocation(line: 742, column: 13, scope: !3069)
!3077 = !DILocation(line: 744, column: 27, scope: !3065)
!3078 = !DILocation(line: 744, column: 30, scope: !3065)
!3079 = !DILocation(line: 744, column: 36, scope: !3065)
!3080 = !DILocation(line: 744, column: 26, scope: !3065)
!3081 = !DILocation(line: 744, column: 9, scope: !3065)
!3082 = !DILocation(line: 744, column: 12, scope: !3065)
!3083 = !DILocation(line: 744, column: 24, scope: !3065)
!3084 = !DILocation(line: 747, column: 6, scope: !1765)
!3085 = !DILocation(line: 747, column: 16, scope: !1765)
!3086 = !DILocation(line: 749, column: 12, scope: !1765)
!3087 = !DILocation(line: 749, column: 19, scope: !1765)
!3088 = !DILocation(line: 749, column: 5, scope: !1765)
!3089 = !DILocation(line: 750, column: 1, scope: !1765)
!3090 = distinct !DISubprogram(name: "magy_decode_end", scope: !908, file: !908, line: 774, type: !999, isLocal: true, isDefinition: true, scopeLine: 775, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1635)
!3091 = !DILocalVariable(name: "avctx", arg: 1, scope: !3090, file: !908, line: 774, type: !1001)
!3092 = !DILocation(line: 774, column: 66, scope: !3090)
!3093 = !DILocalVariable(name: "s", scope: !3090, file: !908, line: 776, type: !3094)
!3094 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1640)
!3095 = !DILocation(line: 776, column: 29, scope: !3090)
!3096 = !DILocation(line: 776, column: 33, scope: !3090)
!3097 = !DILocation(line: 776, column: 40, scope: !3090)
!3098 = !DILocalVariable(name: "i", scope: !3090, file: !908, line: 777, type: !889)
!3099 = !DILocation(line: 777, column: 9, scope: !3090)
!3100 = !DILocation(line: 779, column: 12, scope: !3101)
!3101 = distinct !DILexicalBlock(scope: !3090, file: !908, line: 779, column: 5)
!3102 = !DILocation(line: 779, column: 10, scope: !3101)
!3103 = !DILocation(line: 779, column: 17, scope: !3104)
!3104 = !DILexicalBlockFile(scope: !3105, file: !908, discriminator: 1)
!3105 = distinct !DILexicalBlock(scope: !3101, file: !908, line: 779, column: 5)
!3106 = !DILocation(line: 779, column: 19, scope: !3104)
!3107 = !DILocation(line: 779, column: 5, scope: !3104)
!3108 = !DILocation(line: 780, column: 29, scope: !3109)
!3109 = distinct !DILexicalBlock(scope: !3105, file: !908, line: 779, column: 72)
!3110 = !DILocation(line: 780, column: 19, scope: !3109)
!3111 = !DILocation(line: 780, column: 22, scope: !3109)
!3112 = !DILocation(line: 780, column: 18, scope: !3109)
!3113 = !DILocation(line: 780, column: 9, scope: !3109)
!3114 = !DILocation(line: 781, column: 24, scope: !3109)
!3115 = !DILocation(line: 781, column: 9, scope: !3109)
!3116 = !DILocation(line: 781, column: 12, scope: !3109)
!3117 = !DILocation(line: 781, column: 27, scope: !3109)
!3118 = !DILocation(line: 782, column: 29, scope: !3109)
!3119 = !DILocation(line: 782, column: 22, scope: !3109)
!3120 = !DILocation(line: 782, column: 25, scope: !3109)
!3121 = !DILocation(line: 782, column: 9, scope: !3109)
!3122 = !DILocation(line: 783, column: 5, scope: !3109)
!3123 = !DILocation(line: 779, column: 68, scope: !3124)
!3124 = !DILexicalBlockFile(scope: !3105, file: !908, discriminator: 2)
!3125 = !DILocation(line: 779, column: 5, scope: !3124)
!3126 = distinct !{!3126, !3127}
!3127 = !DILocation(line: 779, column: 5, scope: !3090)
!3128 = !DILocation(line: 785, column: 5, scope: !3090)
!3129 = distinct !DISubprogram(name: "huff_build", scope: !908, file: !908, line: 159, type: !1689, isLocal: true, isDefinition: true, scopeLine: 160, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1635)
!3130 = !DILocalVariable(name: "vlc", arg: 1, scope: !3129, file: !908, line: 159, type: !1691)
!3131 = !DILocation(line: 159, column: 28, scope: !3129)
!3132 = !DILocalVariable(name: "len", arg: 2, scope: !3129, file: !908, line: 159, type: !1029)
!3133 = !DILocation(line: 159, column: 42, scope: !3129)
!3134 = !DILocalVariable(name: "he", scope: !3129, file: !908, line: 161, type: !3135)
!3135 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3136, size: 16384, align: 32, elements: !3142)
!3136 = !DIDerivedType(tag: DW_TAG_typedef, name: "HuffEntry", file: !908, line: 51, baseType: !3137)
!3137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HuffEntry", file: !908, line: 47, size: 64, align: 32, elements: !3138)
!3138 = !{!3139, !3140, !3141}
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "sym", scope: !3137, file: !908, line: 48, baseType: !904, size: 16, align: 16)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3137, file: !908, line: 49, baseType: !901, size: 8, align: 8, offset: 16)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3137, file: !908, line: 50, baseType: !897, size: 32, align: 32, offset: 32)
!3142 = !{!3143}
!3143 = !DISubrange(count: 256)
!3144 = !DILocation(line: 161, column: 15, scope: !3129)
!3145 = !DILocalVariable(name: "codes", scope: !3129, file: !908, line: 162, type: !3146)
!3146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !897, size: 8192, align: 32, elements: !3142)
!3147 = !DILocation(line: 162, column: 14, scope: !3129)
!3148 = !DILocalVariable(name: "bits", scope: !3129, file: !908, line: 163, type: !3149)
!3149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !901, size: 2048, align: 8, elements: !3142)
!3150 = !DILocation(line: 163, column: 13, scope: !3129)
!3151 = !DILocalVariable(name: "syms", scope: !3129, file: !908, line: 164, type: !3149)
!3152 = !DILocation(line: 164, column: 13, scope: !3129)
!3153 = !DILocalVariable(name: "code", scope: !3129, file: !908, line: 165, type: !897)
!3154 = !DILocation(line: 165, column: 14, scope: !3129)
!3155 = !DILocalVariable(name: "i", scope: !3129, file: !908, line: 166, type: !889)
!3156 = !DILocation(line: 166, column: 9, scope: !3129)
!3157 = !DILocation(line: 168, column: 12, scope: !3158)
!3158 = distinct !DILexicalBlock(scope: !3129, file: !908, line: 168, column: 5)
!3159 = !DILocation(line: 168, column: 10, scope: !3158)
!3160 = !DILocation(line: 168, column: 17, scope: !3161)
!3161 = !DILexicalBlockFile(scope: !3162, file: !908, discriminator: 1)
!3162 = distinct !DILexicalBlock(scope: !3158, file: !908, line: 168, column: 5)
!3163 = !DILocation(line: 168, column: 19, scope: !3161)
!3164 = !DILocation(line: 168, column: 5, scope: !3161)
!3165 = !DILocation(line: 169, column: 27, scope: !3166)
!3166 = distinct !DILexicalBlock(scope: !3162, file: !908, line: 168, column: 31)
!3167 = !DILocation(line: 169, column: 25, scope: !3166)
!3168 = !DILocation(line: 169, column: 21, scope: !3166)
!3169 = !DILocation(line: 169, column: 12, scope: !3166)
!3170 = !DILocation(line: 169, column: 9, scope: !3166)
!3171 = !DILocation(line: 169, column: 15, scope: !3166)
!3172 = !DILocation(line: 169, column: 19, scope: !3166)
!3173 = !DILocation(line: 170, column: 25, scope: !3166)
!3174 = !DILocation(line: 170, column: 21, scope: !3166)
!3175 = !DILocation(line: 170, column: 12, scope: !3166)
!3176 = !DILocation(line: 170, column: 9, scope: !3166)
!3177 = !DILocation(line: 170, column: 15, scope: !3166)
!3178 = !DILocation(line: 170, column: 19, scope: !3166)
!3179 = !DILocation(line: 171, column: 17, scope: !3180)
!3180 = distinct !DILexicalBlock(scope: !3166, file: !908, line: 171, column: 13)
!3181 = !DILocation(line: 171, column: 13, scope: !3180)
!3182 = !DILocation(line: 171, column: 20, scope: !3180)
!3183 = !DILocation(line: 171, column: 25, scope: !3180)
!3184 = !DILocation(line: 171, column: 32, scope: !3185)
!3185 = !DILexicalBlockFile(scope: !3180, file: !908, discriminator: 1)
!3186 = !DILocation(line: 171, column: 28, scope: !3185)
!3187 = !DILocation(line: 171, column: 35, scope: !3185)
!3188 = !DILocation(line: 171, column: 13, scope: !3185)
!3189 = !DILocation(line: 172, column: 13, scope: !3180)
!3190 = !DILocation(line: 173, column: 5, scope: !3166)
!3191 = !DILocation(line: 168, column: 27, scope: !3192)
!3192 = !DILexicalBlockFile(scope: !3162, file: !908, discriminator: 2)
!3193 = !DILocation(line: 168, column: 5, scope: !3192)
!3194 = distinct !{!3194, !3195}
!3195 = !DILocation(line: 168, column: 5, scope: !3129)
!3196 = !DILocation(line: 174, column: 5, scope: !3129)
!3197 = distinct !{!3197, !3196}
!3198 = !DILocalVariable(name: "stack", scope: !3199, file: !908, line: 174, type: !3200)
!3199 = distinct !DILexicalBlock(scope: !3129, file: !908, line: 174, column: 8)
!3200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !890, size: 8192, align: 64, elements: !3201)
!3201 = !{!3202, !1684}
!3202 = !DISubrange(count: 64)
!3203 = !DILocation(line: 174, column: 16, scope: !3199)
!3204 = !DILocalVariable(name: "sp", scope: !3199, file: !908, line: 174, type: !889)
!3205 = !DILocation(line: 174, column: 34, scope: !3199)
!3206 = !DILocation(line: 174, column: 34, scope: !3207)
!3207 = !DILexicalBlockFile(scope: !3199, file: !908, discriminator: 1)
!3208 = !DILocation(line: 174, column: 55, scope: !3207)
!3209 = !DILocation(line: 174, column: 41, scope: !3207)
!3210 = !DILocation(line: 174, column: 53, scope: !3207)
!3211 = !DILocation(line: 174, column: 73, scope: !3207)
!3212 = !DILocation(line: 174, column: 77, scope: !3207)
!3213 = !DILocation(line: 174, column: 83, scope: !3207)
!3214 = !DILocation(line: 174, column: 59, scope: !3207)
!3215 = !DILocation(line: 174, column: 71, scope: !3207)
!3216 = !DILocation(line: 174, column: 87, scope: !3207)
!3217 = !DILocation(line: 174, column: 93, scope: !3218)
!3218 = !DILexicalBlockFile(scope: !3199, file: !908, discriminator: 2)
!3219 = !DILocation(line: 174, column: 87, scope: !3218)
!3220 = !DILocalVariable(name: "start", scope: !3221, file: !908, line: 174, type: !3222)
!3221 = distinct !DILexicalBlock(scope: !3199, file: !908, line: 174, column: 96)
!3222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3136, size: 64, align: 64)
!3223 = !DILocation(line: 174, column: 109, scope: !3221)
!3224 = !DILocation(line: 174, column: 122, scope: !3225)
!3225 = !DILexicalBlockFile(scope: !3221, file: !908, discriminator: 3)
!3226 = !DILocation(line: 174, column: 116, scope: !3225)
!3227 = !DILocation(line: 174, column: 109, scope: !3225)
!3228 = !DILocalVariable(name: "end", scope: !3221, file: !908, line: 174, type: !3222)
!3229 = !DILocation(line: 174, column: 143, scope: !3221)
!3230 = !DILocation(line: 174, column: 156, scope: !3225)
!3231 = !DILocation(line: 174, column: 149, scope: !3225)
!3232 = !DILocation(line: 174, column: 143, scope: !3225)
!3233 = !DILocation(line: 174, column: 164, scope: !3225)
!3234 = !DILocation(line: 174, column: 170, scope: !3235)
!3235 = !DILexicalBlockFile(scope: !3221, file: !908, discriminator: 4)
!3236 = !DILocation(line: 174, column: 178, scope: !3235)
!3237 = !DILocation(line: 174, column: 176, scope: !3235)
!3238 = !DILocation(line: 174, column: 164, scope: !3235)
!3239 = !DILocation(line: 174, column: 187, scope: !3240)
!3240 = !DILexicalBlockFile(scope: !3241, file: !908, discriminator: 5)
!3241 = distinct !DILexicalBlock(scope: !3242, file: !908, line: 174, column: 187)
!3242 = distinct !DILexicalBlock(scope: !3221, file: !908, line: 174, column: 182)
!3243 = !DILocation(line: 174, column: 195, scope: !3240)
!3244 = !DILocation(line: 174, column: 198, scope: !3240)
!3245 = !DILocation(line: 174, column: 193, scope: !3240)
!3246 = !DILocalVariable(name: "checksort", scope: !3247, file: !908, line: 174, type: !889)
!3247 = distinct !DILexicalBlock(scope: !3241, file: !908, line: 174, column: 202)
!3248 = !DILocation(line: 174, column: 208, scope: !3247)
!3249 = !DILocation(line: 174, column: 208, scope: !3250)
!3250 = !DILexicalBlockFile(scope: !3247, file: !908, discriminator: 6)
!3251 = !DILocalVariable(name: "right", scope: !3247, file: !908, line: 174, type: !3222)
!3252 = !DILocation(line: 174, column: 232, scope: !3247)
!3253 = !DILocation(line: 174, column: 240, scope: !3250)
!3254 = !DILocation(line: 174, column: 243, scope: !3250)
!3255 = !DILocation(line: 174, column: 232, scope: !3250)
!3256 = !DILocalVariable(name: "left", scope: !3247, file: !908, line: 174, type: !3222)
!3257 = !DILocation(line: 174, column: 258, scope: !3247)
!3258 = !DILocation(line: 174, column: 265, scope: !3250)
!3259 = !DILocation(line: 174, column: 270, scope: !3250)
!3260 = !DILocation(line: 174, column: 258, scope: !3250)
!3261 = !DILocalVariable(name: "mid", scope: !3247, file: !908, line: 174, type: !3222)
!3262 = !DILocation(line: 174, column: 285, scope: !3247)
!3263 = !DILocation(line: 174, column: 291, scope: !3250)
!3264 = !DILocation(line: 174, column: 301, scope: !3250)
!3265 = !DILocation(line: 174, column: 305, scope: !3250)
!3266 = !DILocation(line: 174, column: 304, scope: !3250)
!3267 = !DILocation(line: 174, column: 311, scope: !3250)
!3268 = !DILocation(line: 174, column: 297, scope: !3250)
!3269 = !DILocation(line: 174, column: 285, scope: !3250)
!3270 = !DILocation(line: 174, column: 333, scope: !3250)
!3271 = !DILocation(line: 174, column: 340, scope: !3250)
!3272 = !DILocation(line: 174, column: 320, scope: !3250)
!3273 = !DILocation(line: 174, column: 345, scope: !3250)
!3274 = !DILocation(line: 174, column: 369, scope: !3275)
!3275 = !DILexicalBlockFile(scope: !3276, file: !908, discriminator: 7)
!3276 = distinct !DILexicalBlock(scope: !3277, file: !908, line: 174, column: 355)
!3277 = distinct !DILexicalBlock(scope: !3278, file: !908, line: 174, column: 350)
!3278 = distinct !DILexicalBlock(scope: !3247, file: !908, line: 174, column: 320)
!3279 = !DILocation(line: 174, column: 374, scope: !3275)
!3280 = !DILocation(line: 174, column: 355, scope: !3275)
!3281 = !DILocation(line: 174, column: 379, scope: !3275)
!3282 = !DILocation(line: 174, column: 384, scope: !3283)
!3283 = !DILexicalBlockFile(scope: !3276, file: !908, discriminator: 8)
!3284 = distinct !{!3284, !3285}
!3285 = !DILocation(line: 174, column: 384, scope: !3276)
!3286 = !DILocalVariable(name: "SWAP_tmp", scope: !3287, file: !908, line: 174, type: !3136)
!3287 = distinct !DILexicalBlock(scope: !3276, file: !908, line: 174, column: 386)
!3288 = !DILocation(line: 174, column: 397, scope: !3287)
!3289 = !DILocation(line: 174, column: 408, scope: !3290)
!3290 = !DILexicalBlockFile(scope: !3287, file: !908, discriminator: 9)
!3291 = !DILocation(line: 174, column: 407, scope: !3290)
!3292 = !DILocation(line: 174, column: 414, scope: !3290)
!3293 = !DILocation(line: 174, column: 420, scope: !3290)
!3294 = !DILocation(line: 174, column: 419, scope: !3290)
!3295 = !DILocation(line: 174, column: 419, scope: !3296)
!3296 = !DILexicalBlockFile(scope: !3290, file: !908, discriminator: 69)
!3297 = !DILocation(line: 174, column: 428, scope: !3290)
!3298 = !DILocation(line: 174, column: 435, scope: !3290)
!3299 = !DILocation(line: 174, column: 435, scope: !3300)
!3300 = !DILexicalBlockFile(scope: !3290, file: !908, discriminator: 70)
!3301 = !DILocation(line: 174, column: 444, scope: !3290)
!3302 = !DILocation(line: 174, column: 444, scope: !3303)
!3303 = !DILexicalBlockFile(scope: !3287, file: !908, discriminator: 10)
!3304 = !DILocation(line: 174, column: 460, scope: !3305)
!3305 = !DILexicalBlockFile(scope: !3276, file: !908, discriminator: 11)
!3306 = distinct !{!3306, !3307}
!3307 = !DILocation(line: 174, column: 460, scope: !3276)
!3308 = !DILocalVariable(name: "SWAP_tmp", scope: !3309, file: !908, line: 174, type: !3136)
!3309 = distinct !DILexicalBlock(scope: !3276, file: !908, line: 174, column: 462)
!3310 = !DILocation(line: 174, column: 473, scope: !3309)
!3311 = !DILocation(line: 174, column: 484, scope: !3312)
!3312 = !DILexicalBlockFile(scope: !3309, file: !908, discriminator: 12)
!3313 = !DILocation(line: 174, column: 483, scope: !3312)
!3314 = !DILocation(line: 174, column: 490, scope: !3312)
!3315 = !DILocation(line: 174, column: 496, scope: !3312)
!3316 = !DILocation(line: 174, column: 495, scope: !3312)
!3317 = !DILocation(line: 174, column: 495, scope: !3318)
!3318 = !DILexicalBlockFile(scope: !3312, file: !908, discriminator: 71)
!3319 = !DILocation(line: 174, column: 504, scope: !3312)
!3320 = !DILocation(line: 174, column: 511, scope: !3312)
!3321 = !DILocation(line: 174, column: 511, scope: !3322)
!3322 = !DILexicalBlockFile(scope: !3312, file: !908, discriminator: 72)
!3323 = !DILocation(line: 174, column: 520, scope: !3312)
!3324 = !DILocation(line: 174, column: 531, scope: !3325)
!3325 = !DILexicalBlockFile(scope: !3277, file: !908, discriminator: 13)
!3326 = !DILocation(line: 174, column: 554, scope: !3327)
!3327 = !DILexicalBlockFile(scope: !3328, file: !908, discriminator: 14)
!3328 = distinct !DILexicalBlock(scope: !3329, file: !908, line: 174, column: 541)
!3329 = distinct !DILexicalBlock(scope: !3278, file: !908, line: 174, column: 536)
!3330 = !DILocation(line: 174, column: 561, scope: !3327)
!3331 = !DILocation(line: 174, column: 541, scope: !3327)
!3332 = !DILocation(line: 174, column: 566, scope: !3327)
!3333 = !DILocation(line: 174, column: 571, scope: !3334)
!3334 = !DILexicalBlockFile(scope: !3328, file: !908, discriminator: 15)
!3335 = distinct !{!3335, !3336}
!3336 = !DILocation(line: 174, column: 571, scope: !3328)
!3337 = !DILocalVariable(name: "SWAP_tmp", scope: !3338, file: !908, line: 174, type: !3136)
!3338 = distinct !DILexicalBlock(scope: !3328, file: !908, line: 174, column: 573)
!3339 = !DILocation(line: 174, column: 584, scope: !3338)
!3340 = !DILocation(line: 174, column: 595, scope: !3341)
!3341 = !DILexicalBlockFile(scope: !3338, file: !908, discriminator: 16)
!3342 = !DILocation(line: 174, column: 594, scope: !3341)
!3343 = !DILocation(line: 174, column: 601, scope: !3341)
!3344 = !DILocation(line: 174, column: 607, scope: !3341)
!3345 = !DILocation(line: 174, column: 606, scope: !3341)
!3346 = !DILocation(line: 174, column: 606, scope: !3347)
!3347 = !DILexicalBlockFile(scope: !3341, file: !908, discriminator: 73)
!3348 = !DILocation(line: 174, column: 615, scope: !3341)
!3349 = !DILocation(line: 174, column: 622, scope: !3341)
!3350 = !DILocation(line: 174, column: 622, scope: !3351)
!3351 = !DILexicalBlockFile(scope: !3341, file: !908, discriminator: 74)
!3352 = !DILocation(line: 174, column: 631, scope: !3341)
!3353 = !DILocation(line: 174, column: 631, scope: !3354)
!3354 = !DILexicalBlockFile(scope: !3338, file: !908, discriminator: 17)
!3355 = !DILocation(line: 174, column: 656, scope: !3356)
!3356 = !DILexicalBlockFile(scope: !3328, file: !908, discriminator: 18)
!3357 = !DILocation(line: 174, column: 679, scope: !3358)
!3358 = !DILexicalBlockFile(scope: !3359, file: !908, discriminator: 19)
!3359 = distinct !DILexicalBlock(scope: !3247, file: !908, line: 174, column: 666)
!3360 = !DILocation(line: 174, column: 684, scope: !3358)
!3361 = !DILocation(line: 174, column: 666, scope: !3358)
!3362 = !DILocation(line: 174, column: 689, scope: !3358)
!3363 = !DILocation(line: 174, column: 695, scope: !3364)
!3364 = !DILexicalBlockFile(scope: !3365, file: !908, discriminator: 20)
!3365 = distinct !DILexicalBlock(scope: !3359, file: !908, line: 174, column: 693)
!3366 = distinct !{!3366, !3367}
!3367 = !DILocation(line: 174, column: 695, scope: !3365)
!3368 = !DILocalVariable(name: "SWAP_tmp", scope: !3369, file: !908, line: 174, type: !3136)
!3369 = distinct !DILexicalBlock(scope: !3365, file: !908, line: 174, column: 697)
!3370 = !DILocation(line: 174, column: 708, scope: !3369)
!3371 = !DILocation(line: 174, column: 719, scope: !3372)
!3372 = !DILexicalBlockFile(scope: !3369, file: !908, discriminator: 21)
!3373 = !DILocation(line: 174, column: 718, scope: !3372)
!3374 = !DILocation(line: 174, column: 725, scope: !3372)
!3375 = !DILocation(line: 174, column: 731, scope: !3372)
!3376 = !DILocation(line: 174, column: 730, scope: !3372)
!3377 = !DILocation(line: 174, column: 730, scope: !3378)
!3378 = !DILexicalBlockFile(scope: !3372, file: !908, discriminator: 75)
!3379 = !DILocation(line: 174, column: 737, scope: !3372)
!3380 = !DILocation(line: 174, column: 742, scope: !3372)
!3381 = !DILocation(line: 174, column: 742, scope: !3382)
!3382 = !DILexicalBlockFile(scope: !3372, file: !908, discriminator: 76)
!3383 = !DILocation(line: 174, column: 751, scope: !3372)
!3384 = !DILocation(line: 174, column: 771, scope: !3385)
!3385 = !DILexicalBlockFile(scope: !3365, file: !908, discriminator: 22)
!3386 = !DILocation(line: 174, column: 775, scope: !3385)
!3387 = !DILocation(line: 174, column: 780, scope: !3388)
!3388 = !DILexicalBlockFile(scope: !3389, file: !908, discriminator: 23)
!3389 = distinct !DILexicalBlock(scope: !3247, file: !908, line: 174, column: 780)
!3390 = !DILocation(line: 174, column: 789, scope: !3388)
!3391 = !DILocation(line: 174, column: 792, scope: !3388)
!3392 = !DILocation(line: 174, column: 786, scope: !3388)
!3393 = !DILocation(line: 174, column: 796, scope: !3394)
!3394 = !DILexicalBlockFile(scope: !3389, file: !908, discriminator: 24)
!3395 = !DILocation(line: 174, column: 803, scope: !3396)
!3396 = !DILexicalBlockFile(scope: !3247, file: !908, discriminator: 25)
!3397 = distinct !{!3397, !3398}
!3398 = !DILocation(line: 174, column: 803, scope: !3247)
!3399 = !DILocalVariable(name: "SWAP_tmp", scope: !3400, file: !908, line: 174, type: !3136)
!3400 = distinct !DILexicalBlock(scope: !3247, file: !908, line: 174, column: 805)
!3401 = !DILocation(line: 174, column: 816, scope: !3400)
!3402 = !DILocation(line: 174, column: 827, scope: !3403)
!3403 = !DILexicalBlockFile(scope: !3400, file: !908, discriminator: 26)
!3404 = !DILocation(line: 174, column: 826, scope: !3403)
!3405 = !DILocation(line: 174, column: 833, scope: !3403)
!3406 = !DILocation(line: 174, column: 838, scope: !3403)
!3407 = !DILocation(line: 174, column: 838, scope: !3408)
!3408 = !DILexicalBlockFile(scope: !3403, file: !908, discriminator: 77)
!3409 = !DILocation(line: 174, column: 847, scope: !3403)
!3410 = !DILocation(line: 174, column: 856, scope: !3403)
!3411 = !DILocation(line: 174, column: 856, scope: !3412)
!3412 = !DILexicalBlockFile(scope: !3403, file: !908, discriminator: 78)
!3413 = !DILocation(line: 174, column: 865, scope: !3403)
!3414 = !DILocation(line: 174, column: 876, scope: !3415)
!3415 = !DILexicalBlockFile(scope: !3247, file: !908, discriminator: 27)
!3416 = !DILocation(line: 174, column: 882, scope: !3417)
!3417 = !DILexicalBlockFile(scope: !3247, file: !908, discriminator: 28)
!3418 = !DILocation(line: 174, column: 890, scope: !3417)
!3419 = !DILocation(line: 174, column: 887, scope: !3417)
!3420 = !DILocation(line: 174, column: 876, scope: !3417)
!3421 = !DILocation(line: 174, column: 898, scope: !3422)
!3422 = !DILexicalBlockFile(scope: !3423, file: !908, discriminator: 29)
!3423 = distinct !DILexicalBlock(scope: !3247, file: !908, line: 174, column: 896)
!3424 = !DILocation(line: 174, column: 904, scope: !3425)
!3425 = !DILexicalBlockFile(scope: !3423, file: !908, discriminator: 30)
!3426 = !DILocation(line: 174, column: 910, scope: !3425)
!3427 = !DILocation(line: 174, column: 908, scope: !3425)
!3428 = !DILocation(line: 174, column: 916, scope: !3425)
!3429 = !DILocation(line: 174, column: 932, scope: !3430)
!3430 = !DILexicalBlockFile(scope: !3423, file: !908, discriminator: 31)
!3431 = !DILocation(line: 174, column: 938, scope: !3430)
!3432 = !DILocation(line: 174, column: 941, scope: !3430)
!3433 = !DILocation(line: 174, column: 919, scope: !3430)
!3434 = !DILocation(line: 174, column: 945, scope: !3430)
!3435 = !DILocation(line: 174, column: 898, scope: !3436)
!3436 = !DILexicalBlockFile(scope: !3423, file: !908, discriminator: 32)
!3437 = !DILocation(line: 174, column: 954, scope: !3438)
!3438 = !DILexicalBlockFile(scope: !3423, file: !908, discriminator: 33)
!3439 = !DILocation(line: 174, column: 898, scope: !3438)
!3440 = distinct !{!3440, !3441}
!3441 = !DILocation(line: 174, column: 898, scope: !3423)
!3442 = !DILocation(line: 174, column: 958, scope: !3443)
!3443 = !DILexicalBlockFile(scope: !3423, file: !908, discriminator: 34)
!3444 = !DILocation(line: 174, column: 964, scope: !3445)
!3445 = !DILexicalBlockFile(scope: !3423, file: !908, discriminator: 35)
!3446 = !DILocation(line: 174, column: 970, scope: !3445)
!3447 = !DILocation(line: 174, column: 968, scope: !3445)
!3448 = !DILocation(line: 174, column: 976, scope: !3445)
!3449 = !DILocation(line: 174, column: 992, scope: !3450)
!3450 = !DILexicalBlockFile(scope: !3423, file: !908, discriminator: 36)
!3451 = !DILocation(line: 174, column: 999, scope: !3450)
!3452 = !DILocation(line: 174, column: 1002, scope: !3450)
!3453 = !DILocation(line: 174, column: 979, scope: !3450)
!3454 = !DILocation(line: 174, column: 1006, scope: !3450)
!3455 = !DILocation(line: 174, column: 958, scope: !3456)
!3456 = !DILexicalBlockFile(scope: !3423, file: !908, discriminator: 37)
!3457 = !DILocation(line: 174, column: 1016, scope: !3458)
!3458 = !DILexicalBlockFile(scope: !3423, file: !908, discriminator: 38)
!3459 = !DILocation(line: 174, column: 958, scope: !3458)
!3460 = distinct !{!3460, !3461}
!3461 = !DILocation(line: 174, column: 958, scope: !3423)
!3462 = !DILocation(line: 174, column: 1023, scope: !3463)
!3463 = !DILexicalBlockFile(scope: !3464, file: !908, discriminator: 39)
!3464 = distinct !DILexicalBlock(scope: !3423, file: !908, line: 174, column: 1023)
!3465 = !DILocation(line: 174, column: 1031, scope: !3463)
!3466 = !DILocation(line: 174, column: 1028, scope: !3463)
!3467 = !DILocation(line: 174, column: 1039, scope: !3468)
!3468 = !DILexicalBlockFile(scope: !3469, file: !908, discriminator: 40)
!3469 = distinct !DILexicalBlock(scope: !3464, file: !908, line: 174, column: 1037)
!3470 = distinct !{!3470, !3471}
!3471 = !DILocation(line: 174, column: 1039, scope: !3469)
!3472 = !DILocalVariable(name: "SWAP_tmp", scope: !3473, file: !908, line: 174, type: !3136)
!3473 = distinct !DILexicalBlock(scope: !3469, file: !908, line: 174, column: 1041)
!3474 = !DILocation(line: 174, column: 1052, scope: !3473)
!3475 = !DILocation(line: 174, column: 1063, scope: !3476)
!3476 = !DILexicalBlockFile(scope: !3473, file: !908, discriminator: 41)
!3477 = !DILocation(line: 174, column: 1062, scope: !3476)
!3478 = !DILocation(line: 174, column: 1071, scope: !3476)
!3479 = !DILocation(line: 174, column: 1079, scope: !3476)
!3480 = !DILocation(line: 174, column: 1078, scope: !3476)
!3481 = !DILocation(line: 174, column: 1078, scope: !3482)
!3482 = !DILexicalBlockFile(scope: !3476, file: !908, discriminator: 79)
!3483 = !DILocation(line: 174, column: 1086, scope: !3476)
!3484 = !DILocation(line: 174, column: 1092, scope: !3476)
!3485 = !DILocation(line: 174, column: 1092, scope: !3486)
!3486 = !DILexicalBlockFile(scope: !3476, file: !908, discriminator: 80)
!3487 = !DILocation(line: 174, column: 1101, scope: !3476)
!3488 = !DILocation(line: 174, column: 1116, scope: !3489)
!3489 = !DILexicalBlockFile(scope: !3469, file: !908, discriminator: 42)
!3490 = !DILocation(line: 174, column: 1125, scope: !3489)
!3491 = !DILocation(line: 174, column: 1129, scope: !3489)
!3492 = !DILocation(line: 174, column: 876, scope: !3493)
!3493 = !DILexicalBlockFile(scope: !3247, file: !908, discriminator: 43)
!3494 = distinct !{!3494, !3495}
!3495 = !DILocation(line: 174, column: 876, scope: !3247)
!3496 = !DILocation(line: 174, column: 1133, scope: !3497)
!3497 = !DILexicalBlockFile(scope: !3247, file: !908, discriminator: 44)
!3498 = distinct !{!3498, !3499}
!3499 = !DILocation(line: 174, column: 1133, scope: !3247)
!3500 = !DILocalVariable(name: "SWAP_tmp", scope: !3501, file: !908, line: 174, type: !3136)
!3501 = distinct !DILexicalBlock(scope: !3247, file: !908, line: 174, column: 1135)
!3502 = !DILocation(line: 174, column: 1146, scope: !3501)
!3503 = !DILocation(line: 174, column: 1157, scope: !3504)
!3504 = !DILexicalBlockFile(scope: !3501, file: !908, discriminator: 45)
!3505 = !DILocation(line: 174, column: 1156, scope: !3504)
!3506 = !DILocation(line: 174, column: 1164, scope: !3504)
!3507 = !DILocation(line: 174, column: 1170, scope: !3504)
!3508 = !DILocation(line: 174, column: 1170, scope: !3509)
!3509 = !DILexicalBlockFile(scope: !3504, file: !908, discriminator: 81)
!3510 = !DILocation(line: 174, column: 1179, scope: !3504)
!3511 = !DILocation(line: 174, column: 1188, scope: !3504)
!3512 = !DILocation(line: 174, column: 1188, scope: !3513)
!3513 = !DILexicalBlockFile(scope: !3504, file: !908, discriminator: 82)
!3514 = !DILocation(line: 174, column: 1197, scope: !3504)
!3515 = !DILocation(line: 174, column: 1211, scope: !3516)
!3516 = !DILexicalBlockFile(scope: !3517, file: !908, discriminator: 46)
!3517 = distinct !DILexicalBlock(scope: !3247, file: !908, line: 174, column: 1211)
!3518 = !DILocation(line: 174, column: 1221, scope: !3516)
!3519 = !DILocation(line: 174, column: 1225, scope: !3520)
!3520 = !DILexicalBlockFile(scope: !3517, file: !908, discriminator: 47)
!3521 = !DILocation(line: 174, column: 1232, scope: !3520)
!3522 = !DILocation(line: 174, column: 1236, scope: !3520)
!3523 = !DILocation(line: 174, column: 1229, scope: !3520)
!3524 = !DILocation(line: 174, column: 1239, scope: !3520)
!3525 = !DILocation(line: 174, column: 1242, scope: !3526)
!3526 = !DILexicalBlockFile(scope: !3517, file: !908, discriminator: 48)
!3527 = !DILocation(line: 174, column: 1249, scope: !3526)
!3528 = !DILocation(line: 174, column: 1246, scope: !3526)
!3529 = !DILocation(line: 174, column: 1211, scope: !3526)
!3530 = !DILocation(line: 174, column: 1262, scope: !3531)
!3531 = !DILexicalBlockFile(scope: !3532, file: !908, discriminator: 49)
!3532 = distinct !DILexicalBlock(scope: !3517, file: !908, line: 174, column: 1255)
!3533 = !DILocation(line: 174, column: 1260, scope: !3531)
!3534 = !DILocation(line: 174, column: 1269, scope: !3531)
!3535 = !DILocation(line: 174, column: 1275, scope: !3536)
!3536 = !DILexicalBlockFile(scope: !3532, file: !908, discriminator: 50)
!3537 = !DILocation(line: 174, column: 1279, scope: !3536)
!3538 = !DILocation(line: 174, column: 1278, scope: !3536)
!3539 = !DILocation(line: 174, column: 1283, scope: !3536)
!3540 = !DILocation(line: 174, column: 1299, scope: !3541)
!3541 = !DILexicalBlockFile(scope: !3532, file: !908, discriminator: 51)
!3542 = !DILocation(line: 174, column: 1304, scope: !3541)
!3543 = !DILocation(line: 174, column: 1307, scope: !3541)
!3544 = !DILocation(line: 174, column: 1286, scope: !3541)
!3545 = !DILocation(line: 174, column: 1311, scope: !3541)
!3546 = !DILocation(line: 174, column: 1269, scope: !3547)
!3547 = !DILexicalBlockFile(scope: !3532, file: !908, discriminator: 52)
!3548 = !DILocation(line: 174, column: 1320, scope: !3549)
!3549 = !DILexicalBlockFile(scope: !3532, file: !908, discriminator: 53)
!3550 = !DILocation(line: 174, column: 1269, scope: !3549)
!3551 = distinct !{!3551, !3552}
!3552 = !DILocation(line: 174, column: 1269, scope: !3532)
!3553 = !DILocation(line: 174, column: 1327, scope: !3554)
!3554 = !DILexicalBlockFile(scope: !3555, file: !908, discriminator: 54)
!3555 = distinct !DILexicalBlock(scope: !3532, file: !908, line: 174, column: 1327)
!3556 = !DILocation(line: 174, column: 1332, scope: !3554)
!3557 = !DILocation(line: 174, column: 1330, scope: !3554)
!3558 = !DILocation(line: 174, column: 1337, scope: !3559)
!3559 = !DILexicalBlockFile(scope: !3555, file: !908, discriminator: 55)
!3560 = !DILocation(line: 174, column: 1344, scope: !3561)
!3561 = !DILexicalBlockFile(scope: !3532, file: !908, discriminator: 56)
!3562 = !DILocation(line: 174, column: 1349, scope: !3563)
!3563 = !DILexicalBlockFile(scope: !3564, file: !908, discriminator: 57)
!3564 = distinct !DILexicalBlock(scope: !3247, file: !908, line: 174, column: 1349)
!3565 = !DILocation(line: 174, column: 1353, scope: !3563)
!3566 = !DILocation(line: 174, column: 1352, scope: !3563)
!3567 = !DILocation(line: 174, column: 1360, scope: !3563)
!3568 = !DILocation(line: 174, column: 1365, scope: !3563)
!3569 = !DILocation(line: 174, column: 1364, scope: !3563)
!3570 = !DILocation(line: 174, column: 1358, scope: !3563)
!3571 = !DILocation(line: 174, column: 1388, scope: !3572)
!3572 = !DILexicalBlockFile(scope: !3573, file: !908, discriminator: 58)
!3573 = distinct !DILexicalBlock(scope: !3564, file: !908, line: 174, column: 1371)
!3574 = !DILocation(line: 174, column: 1379, scope: !3572)
!3575 = !DILocation(line: 174, column: 1373, scope: !3572)
!3576 = !DILocation(line: 174, column: 1386, scope: !3572)
!3577 = !DILocation(line: 174, column: 1411, scope: !3572)
!3578 = !DILocation(line: 174, column: 1403, scope: !3572)
!3579 = !DILocation(line: 174, column: 1395, scope: !3572)
!3580 = !DILocation(line: 174, column: 1409, scope: !3572)
!3581 = !DILocation(line: 174, column: 1426, scope: !3572)
!3582 = !DILocation(line: 174, column: 1430, scope: !3572)
!3583 = !DILocation(line: 174, column: 1424, scope: !3572)
!3584 = !DILocation(line: 174, column: 1434, scope: !3572)
!3585 = !DILocation(line: 174, column: 1456, scope: !3586)
!3586 = !DILexicalBlockFile(scope: !3587, file: !908, discriminator: 59)
!3587 = distinct !DILexicalBlock(scope: !3564, file: !908, line: 174, column: 1439)
!3588 = !DILocation(line: 174, column: 1460, scope: !3586)
!3589 = !DILocation(line: 174, column: 1447, scope: !3586)
!3590 = !DILocation(line: 174, column: 1441, scope: !3586)
!3591 = !DILocation(line: 174, column: 1454, scope: !3586)
!3592 = !DILocation(line: 174, column: 1480, scope: !3586)
!3593 = !DILocation(line: 174, column: 1472, scope: !3586)
!3594 = !DILocation(line: 174, column: 1464, scope: !3586)
!3595 = !DILocation(line: 174, column: 1478, scope: !3586)
!3596 = !DILocation(line: 174, column: 1491, scope: !3586)
!3597 = !DILocation(line: 174, column: 1489, scope: !3586)
!3598 = !DILocation(line: 174, column: 1500, scope: !3599)
!3599 = !DILexicalBlockFile(scope: !3247, file: !908, discriminator: 60)
!3600 = !DILocation(line: 174, column: 1523, scope: !3601)
!3601 = !DILexicalBlockFile(scope: !3602, file: !908, discriminator: 61)
!3602 = distinct !DILexicalBlock(scope: !3603, file: !908, line: 174, column: 1510)
!3603 = distinct !DILexicalBlock(scope: !3241, file: !908, line: 174, column: 1505)
!3604 = !DILocation(line: 174, column: 1530, scope: !3601)
!3605 = !DILocation(line: 174, column: 1510, scope: !3601)
!3606 = !DILocation(line: 174, column: 1535, scope: !3601)
!3607 = !DILocation(line: 174, column: 1540, scope: !3608)
!3608 = !DILexicalBlockFile(scope: !3602, file: !908, discriminator: 62)
!3609 = distinct !{!3609, !3610}
!3610 = !DILocation(line: 174, column: 1540, scope: !3602)
!3611 = !DILocalVariable(name: "SWAP_tmp", scope: !3612, file: !908, line: 174, type: !3136)
!3612 = distinct !DILexicalBlock(scope: !3602, file: !908, line: 174, column: 1542)
!3613 = !DILocation(line: 174, column: 1553, scope: !3612)
!3614 = !DILocation(line: 174, column: 1564, scope: !3615)
!3615 = !DILexicalBlockFile(scope: !3612, file: !908, discriminator: 63)
!3616 = !DILocation(line: 174, column: 1563, scope: !3615)
!3617 = !DILocation(line: 174, column: 1570, scope: !3615)
!3618 = !DILocation(line: 174, column: 1576, scope: !3615)
!3619 = !DILocation(line: 174, column: 1575, scope: !3615)
!3620 = !DILocation(line: 174, column: 1575, scope: !3621)
!3621 = !DILexicalBlockFile(scope: !3615, file: !908, discriminator: 83)
!3622 = !DILocation(line: 174, column: 1584, scope: !3615)
!3623 = !DILocation(line: 174, column: 1591, scope: !3615)
!3624 = !DILocation(line: 174, column: 1591, scope: !3625)
!3625 = !DILexicalBlockFile(scope: !3615, file: !908, discriminator: 84)
!3626 = !DILocation(line: 174, column: 1600, scope: !3615)
!3627 = !DILocation(line: 174, column: 1600, scope: !3628)
!3628 = !DILexicalBlockFile(scope: !3612, file: !908, discriminator: 64)
!3629 = !DILocation(line: 174, column: 1611, scope: !3630)
!3630 = !DILexicalBlockFile(scope: !3603, file: !908, discriminator: 65)
!3631 = !DILocation(line: 174, column: 164, scope: !3632)
!3632 = !DILexicalBlockFile(scope: !3221, file: !908, discriminator: 66)
!3633 = distinct !{!3633, !3634}
!3634 = !DILocation(line: 174, column: 164, scope: !3221)
!3635 = !DILocation(line: 174, column: 87, scope: !3636)
!3636 = !DILexicalBlockFile(scope: !3199, file: !908, discriminator: 67)
!3637 = distinct !{!3637, !3638}
!3638 = !DILocation(line: 174, column: 87, scope: !3199)
!3639 = !DILocation(line: 174, column: 1623, scope: !3640)
!3640 = !DILexicalBlockFile(scope: !3199, file: !908, discriminator: 68)
!3641 = !DILocation(line: 176, column: 10, scope: !3129)
!3642 = !DILocation(line: 177, column: 12, scope: !3643)
!3643 = distinct !DILexicalBlock(scope: !3129, file: !908, line: 177, column: 5)
!3644 = !DILocation(line: 177, column: 10, scope: !3643)
!3645 = !DILocation(line: 177, column: 19, scope: !3646)
!3646 = !DILexicalBlockFile(scope: !3647, file: !908, discriminator: 1)
!3647 = distinct !DILexicalBlock(scope: !3643, file: !908, line: 177, column: 5)
!3648 = !DILocation(line: 177, column: 21, scope: !3646)
!3649 = !DILocation(line: 177, column: 5, scope: !3646)
!3650 = !DILocation(line: 178, column: 20, scope: !3651)
!3651 = distinct !DILexicalBlock(scope: !3647, file: !908, line: 177, column: 32)
!3652 = !DILocation(line: 178, column: 37, scope: !3651)
!3653 = !DILocation(line: 178, column: 34, scope: !3651)
!3654 = !DILocation(line: 178, column: 40, scope: !3651)
!3655 = !DILocation(line: 178, column: 32, scope: !3651)
!3656 = !DILocation(line: 178, column: 25, scope: !3651)
!3657 = !DILocation(line: 178, column: 15, scope: !3651)
!3658 = !DILocation(line: 178, column: 9, scope: !3651)
!3659 = !DILocation(line: 178, column: 18, scope: !3651)
!3660 = !DILocation(line: 179, column: 22, scope: !3651)
!3661 = !DILocation(line: 179, column: 19, scope: !3651)
!3662 = !DILocation(line: 179, column: 25, scope: !3651)
!3663 = !DILocation(line: 179, column: 14, scope: !3651)
!3664 = !DILocation(line: 179, column: 9, scope: !3651)
!3665 = !DILocation(line: 179, column: 17, scope: !3651)
!3666 = !DILocation(line: 180, column: 22, scope: !3651)
!3667 = !DILocation(line: 180, column: 19, scope: !3651)
!3668 = !DILocation(line: 180, column: 25, scope: !3651)
!3669 = !DILocation(line: 180, column: 14, scope: !3651)
!3670 = !DILocation(line: 180, column: 9, scope: !3651)
!3671 = !DILocation(line: 180, column: 17, scope: !3651)
!3672 = !DILocation(line: 181, column: 36, scope: !3651)
!3673 = !DILocation(line: 181, column: 33, scope: !3651)
!3674 = !DILocation(line: 181, column: 39, scope: !3651)
!3675 = !DILocation(line: 181, column: 43, scope: !3651)
!3676 = !DILocation(line: 181, column: 29, scope: !3651)
!3677 = !DILocation(line: 181, column: 14, scope: !3651)
!3678 = !DILocation(line: 182, column: 5, scope: !3651)
!3679 = !DILocation(line: 177, column: 28, scope: !3680)
!3680 = !DILexicalBlockFile(scope: !3647, file: !908, discriminator: 2)
!3681 = !DILocation(line: 177, column: 5, scope: !3680)
!3682 = distinct !{!3682, !3683}
!3683 = !DILocation(line: 177, column: 5, scope: !3129)
!3684 = !DILocation(line: 184, column: 17, scope: !3129)
!3685 = !DILocation(line: 184, column: 5, scope: !3129)
!3686 = !DILocation(line: 185, column: 31, scope: !3129)
!3687 = !DILocation(line: 185, column: 38, scope: !3129)
!3688 = !DILocation(line: 185, column: 46, scope: !3129)
!3689 = !DILocation(line: 185, column: 37, scope: !3129)
!3690 = !DILocation(line: 185, column: 51, scope: !3129)
!3691 = !DILocation(line: 185, column: 37, scope: !3692)
!3692 = !DILexicalBlockFile(scope: !3129, file: !908, discriminator: 1)
!3693 = !DILocation(line: 185, column: 68, scope: !3694)
!3694 = !DILexicalBlockFile(scope: !3129, file: !908, discriminator: 2)
!3695 = !DILocation(line: 185, column: 76, scope: !3694)
!3696 = !DILocation(line: 185, column: 67, scope: !3694)
!3697 = !DILocation(line: 185, column: 37, scope: !3694)
!3698 = !DILocation(line: 185, column: 37, scope: !3699)
!3699 = !DILexicalBlockFile(scope: !3129, file: !908, discriminator: 3)
!3700 = !DILocation(line: 186, column: 31, scope: !3129)
!3701 = !DILocation(line: 187, column: 31, scope: !3129)
!3702 = !DILocation(line: 188, column: 31, scope: !3129)
!3703 = !DILocation(line: 185, column: 12, scope: !3699)
!3704 = !DILocation(line: 185, column: 5, scope: !3699)
!3705 = !DILocation(line: 189, column: 1, scope: !3129)
!3706 = distinct !DISubprogram(name: "magy_decode_slice", scope: !908, file: !908, line: 344, type: !1694, isLocal: true, isDefinition: true, scopeLine: 346, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1635)
!3707 = !DILocalVariable(name: "x", arg: 1, scope: !3708, file: !3709, line: 66, type: !897)
!3708 = distinct !DISubprogram(name: "av_bswap32", scope: !3709, file: !3709, line: 66, type: !3710, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1635)
!3709 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!3710 = !DISubroutineType(types: !3711)
!3711 = !{!897, !897}
!3712 = !DILocation(line: 66, column: 98, scope: !3708, inlinedAt: !3713)
!3713 = distinct !DILocation(line: 788, column: 601, scope: !3714, inlinedAt: !3724)
!3714 = !DILexicalBlockFile(scope: !3715, file: !1945, discriminator: 11)
!3715 = distinct !DILexicalBlock(scope: !3716, file: !1945, line: 788, column: 490)
!3716 = distinct !DILexicalBlock(scope: !3717, file: !1945, line: 788, column: 466)
!3717 = distinct !DILexicalBlock(scope: !3718, file: !1945, line: 788, column: 154)
!3718 = distinct !DILexicalBlock(scope: !3719, file: !1945, line: 788, column: 130)
!3719 = distinct !DILexicalBlock(scope: !3720, file: !1945, line: 788, column: 8)
!3720 = distinct !DISubprogram(name: "get_vlc2", scope: !1945, file: !1945, line: 762, type: !3721, isLocal: true, isDefinition: true, scopeLine: 764, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1635)
!3721 = !DISubroutineType(types: !3722)
!3722 = !{!889, !3723, !1679, !889, !889}
!3723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 64, align: 64)
!3724 = distinct !DILocation(line: 388, column: 27, scope: !3725)
!3725 = distinct !DILexicalBlock(scope: !3726, file: !908, line: 383, column: 45)
!3726 = distinct !DILexicalBlock(scope: !3727, file: !908, line: 383, column: 17)
!3727 = distinct !DILexicalBlock(scope: !3728, file: !908, line: 383, column: 17)
!3728 = distinct !DILexicalBlock(scope: !3729, file: !908, line: 382, column: 42)
!3729 = distinct !DILexicalBlock(scope: !3730, file: !908, line: 382, column: 13)
!3730 = distinct !DILexicalBlock(scope: !3731, file: !908, line: 382, column: 13)
!3731 = distinct !DILexicalBlock(scope: !3732, file: !908, line: 381, column: 16)
!3732 = distinct !DILexicalBlock(scope: !3733, file: !908, line: 372, column: 13)
!3733 = distinct !DILexicalBlock(scope: !3734, file: !908, line: 354, column: 37)
!3734 = distinct !DILexicalBlock(scope: !3735, file: !908, line: 354, column: 5)
!3735 = distinct !DILexicalBlock(scope: !3706, file: !908, line: 354, column: 5)
!3736 = !DILocation(line: 66, column: 98, scope: !3708, inlinedAt: !3737)
!3737 = distinct !DILocation(line: 788, column: 259, scope: !3738, inlinedAt: !3724)
!3738 = !DILexicalBlockFile(scope: !3717, file: !1945, discriminator: 6)
!3739 = !DILocation(line: 66, column: 98, scope: !3708, inlinedAt: !3740)
!3740 = distinct !DILocation(line: 786, column: 16, scope: !3720, inlinedAt: !3724)
!3741 = !DILocalVariable(name: "s", arg: 1, scope: !3720, file: !1945, line: 762, type: !3723)
!3742 = !DILocation(line: 762, column: 74, scope: !3720, inlinedAt: !3724)
!3743 = !DILocalVariable(name: "table", arg: 2, scope: !3720, file: !1945, line: 762, type: !1679)
!3744 = !DILocation(line: 762, column: 87, scope: !3720, inlinedAt: !3724)
!3745 = !DILocalVariable(name: "bits", arg: 3, scope: !3720, file: !1945, line: 763, type: !889)
!3746 = !DILocation(line: 763, column: 42, scope: !3720, inlinedAt: !3724)
!3747 = !DILocalVariable(name: "max_depth", arg: 4, scope: !3720, file: !1945, line: 763, type: !889)
!3748 = !DILocation(line: 763, column: 52, scope: !3720, inlinedAt: !3724)
!3749 = !DILocalVariable(name: "code", scope: !3720, file: !1945, line: 783, type: !889)
!3750 = !DILocation(line: 783, column: 9, scope: !3720, inlinedAt: !3724)
!3751 = !DILocalVariable(name: "re_index", scope: !3720, file: !1945, line: 785, type: !888)
!3752 = !DILocation(line: 785, column: 18, scope: !3720, inlinedAt: !3724)
!3753 = !DILocalVariable(name: "re_cache", scope: !3720, file: !1945, line: 785, type: !888)
!3754 = !DILocation(line: 785, column: 78, scope: !3720, inlinedAt: !3724)
!3755 = !DILocalVariable(name: "re_size_plus8", scope: !3720, file: !1945, line: 785, type: !888)
!3756 = !DILocation(line: 785, column: 101, scope: !3720, inlinedAt: !3724)
!3757 = !DILocalVariable(name: "n", scope: !3719, file: !1945, line: 788, type: !889)
!3758 = !DILocation(line: 788, column: 14, scope: !3719, inlinedAt: !3724)
!3759 = !DILocalVariable(name: "nb_bits", scope: !3719, file: !1945, line: 788, type: !889)
!3760 = !DILocation(line: 788, column: 17, scope: !3719, inlinedAt: !3724)
!3761 = !DILocalVariable(name: "index", scope: !3719, file: !1945, line: 788, type: !888)
!3762 = !DILocation(line: 788, column: 39, scope: !3719, inlinedAt: !3724)
!3763 = !DILocalVariable(name: "avctx", arg: 1, scope: !3706, file: !908, line: 344, type: !1001)
!3764 = !DILocation(line: 344, column: 46, scope: !3706)
!3765 = !DILocalVariable(name: "tdata", arg: 2, scope: !3706, file: !908, line: 344, type: !890)
!3766 = !DILocation(line: 344, column: 59, scope: !3706)
!3767 = !DILocalVariable(name: "j", arg: 3, scope: !3706, file: !908, line: 345, type: !889)
!3768 = !DILocation(line: 345, column: 34, scope: !3706)
!3769 = !DILocalVariable(name: "threadnr", arg: 4, scope: !3706, file: !908, line: 345, type: !889)
!3770 = !DILocation(line: 345, column: 41, scope: !3706)
!3771 = !DILocalVariable(name: "s", scope: !3706, file: !908, line: 347, type: !1640)
!3772 = !DILocation(line: 347, column: 22, scope: !3706)
!3773 = !DILocation(line: 347, column: 26, scope: !3706)
!3774 = !DILocation(line: 347, column: 33, scope: !3706)
!3775 = !DILocalVariable(name: "interlaced", scope: !3706, file: !908, line: 348, type: !889)
!3776 = !DILocation(line: 348, column: 9, scope: !3706)
!3777 = !DILocation(line: 348, column: 22, scope: !3706)
!3778 = !DILocation(line: 348, column: 25, scope: !3706)
!3779 = !DILocalVariable(name: "p", scope: !3706, file: !908, line: 349, type: !1023)
!3780 = !DILocation(line: 349, column: 14, scope: !3706)
!3781 = !DILocation(line: 349, column: 18, scope: !3706)
!3782 = !DILocation(line: 349, column: 21, scope: !3706)
!3783 = !DILocalVariable(name: "i", scope: !3706, file: !908, line: 350, type: !889)
!3784 = !DILocation(line: 350, column: 9, scope: !3706)
!3785 = !DILocalVariable(name: "k", scope: !3706, file: !908, line: 350, type: !889)
!3786 = !DILocation(line: 350, column: 12, scope: !3706)
!3787 = !DILocalVariable(name: "x", scope: !3706, file: !908, line: 350, type: !889)
!3788 = !DILocation(line: 350, column: 15, scope: !3706)
!3789 = !DILocalVariable(name: "min_width", scope: !3706, file: !908, line: 350, type: !889)
!3790 = !DILocation(line: 350, column: 18, scope: !3706)
!3791 = !DILocalVariable(name: "gb", scope: !3706, file: !908, line: 351, type: !1944)
!3792 = !DILocation(line: 351, column: 19, scope: !3706)
!3793 = !DILocalVariable(name: "dst", scope: !3706, file: !908, line: 352, type: !1029)
!3794 = !DILocation(line: 352, column: 14, scope: !3706)
!3795 = !DILocation(line: 354, column: 12, scope: !3735)
!3796 = !DILocation(line: 354, column: 10, scope: !3735)
!3797 = !DILocation(line: 354, column: 17, scope: !3798)
!3798 = !DILexicalBlockFile(scope: !3734, file: !908, discriminator: 1)
!3799 = !DILocation(line: 354, column: 21, scope: !3798)
!3800 = !DILocation(line: 354, column: 24, scope: !3798)
!3801 = !DILocation(line: 354, column: 19, scope: !3798)
!3802 = !DILocation(line: 354, column: 5, scope: !3798)
!3803 = !DILocalVariable(name: "left", scope: !3733, file: !908, line: 355, type: !889)
!3804 = !DILocation(line: 355, column: 13, scope: !3733)
!3805 = !DILocalVariable(name: "lefttop", scope: !3733, file: !908, line: 355, type: !889)
!3806 = !DILocation(line: 355, column: 19, scope: !3733)
!3807 = !DILocalVariable(name: "top", scope: !3733, file: !908, line: 355, type: !889)
!3808 = !DILocation(line: 355, column: 28, scope: !3733)
!3809 = !DILocalVariable(name: "height", scope: !3733, file: !908, line: 356, type: !889)
!3810 = !DILocation(line: 356, column: 13, scope: !3733)
!3811 = !DILocation(line: 356, column: 68, scope: !3733)
!3812 = !DILocation(line: 356, column: 71, scope: !3733)
!3813 = !DILocation(line: 356, column: 88, scope: !3733)
!3814 = !DILocation(line: 356, column: 95, scope: !3733)
!3815 = !DILocation(line: 356, column: 110, scope: !3733)
!3816 = !DILocation(line: 356, column: 114, scope: !3733)
!3817 = !DILocation(line: 356, column: 117, scope: !3733)
!3818 = !DILocation(line: 356, column: 112, scope: !3733)
!3819 = !DILocation(line: 356, column: 108, scope: !3733)
!3820 = !DILocation(line: 356, column: 85, scope: !3733)
!3821 = !DILocation(line: 356, column: 67, scope: !3733)
!3822 = !DILocation(line: 356, column: 134, scope: !3823)
!3823 = !DILexicalBlockFile(scope: !3733, file: !908, discriminator: 1)
!3824 = !DILocation(line: 356, column: 141, scope: !3823)
!3825 = !DILocation(line: 356, column: 156, scope: !3823)
!3826 = !DILocation(line: 356, column: 160, scope: !3823)
!3827 = !DILocation(line: 356, column: 163, scope: !3823)
!3828 = !DILocation(line: 356, column: 158, scope: !3823)
!3829 = !DILocation(line: 356, column: 154, scope: !3823)
!3830 = !DILocation(line: 356, column: 67, scope: !3823)
!3831 = !DILocation(line: 356, column: 180, scope: !3832)
!3832 = !DILexicalBlockFile(scope: !3733, file: !908, discriminator: 2)
!3833 = !DILocation(line: 356, column: 183, scope: !3832)
!3834 = !DILocation(line: 356, column: 67, scope: !3832)
!3835 = !DILocation(line: 356, column: 67, scope: !3836)
!3836 = !DILexicalBlockFile(scope: !3733, file: !908, discriminator: 3)
!3837 = !DILocation(line: 356, column: 64, scope: !3836)
!3838 = !DILocation(line: 356, column: 214, scope: !3836)
!3839 = !DILocation(line: 356, column: 204, scope: !3836)
!3840 = !DILocation(line: 356, column: 207, scope: !3836)
!3841 = !DILocation(line: 356, column: 200, scope: !3836)
!3842 = !DILocation(line: 356, column: 61, scope: !3836)
!3843 = !DILocation(line: 356, column: 13, scope: !3836)
!3844 = !DILocalVariable(name: "width", scope: !3733, file: !908, line: 357, type: !889)
!3845 = !DILocation(line: 357, column: 13, scope: !3733)
!3846 = !DILocation(line: 357, column: 65, scope: !3733)
!3847 = !DILocation(line: 357, column: 72, scope: !3733)
!3848 = !DILocation(line: 357, column: 63, scope: !3733)
!3849 = !DILocation(line: 357, column: 100, scope: !3733)
!3850 = !DILocation(line: 357, column: 90, scope: !3733)
!3851 = !DILocation(line: 357, column: 93, scope: !3733)
!3852 = !DILocation(line: 357, column: 86, scope: !3733)
!3853 = !DILocation(line: 357, column: 60, scope: !3733)
!3854 = !DILocalVariable(name: "sheight", scope: !3733, file: !908, line: 358, type: !889)
!3855 = !DILocation(line: 358, column: 13, scope: !3733)
!3856 = !DILocation(line: 358, column: 67, scope: !3733)
!3857 = !DILocation(line: 358, column: 70, scope: !3733)
!3858 = !DILocation(line: 358, column: 65, scope: !3733)
!3859 = !DILocation(line: 358, column: 99, scope: !3733)
!3860 = !DILocation(line: 358, column: 89, scope: !3733)
!3861 = !DILocation(line: 358, column: 92, scope: !3733)
!3862 = !DILocation(line: 358, column: 85, scope: !3733)
!3863 = !DILocation(line: 358, column: 62, scope: !3733)
!3864 = !DILocalVariable(name: "fake_stride", scope: !3733, file: !908, line: 359, type: !1705)
!3865 = !DILocation(line: 359, column: 19, scope: !3733)
!3866 = !DILocation(line: 359, column: 45, scope: !3733)
!3867 = !DILocation(line: 359, column: 33, scope: !3733)
!3868 = !DILocation(line: 359, column: 36, scope: !3733)
!3869 = !DILocation(line: 359, column: 55, scope: !3733)
!3870 = !DILocation(line: 359, column: 53, scope: !3733)
!3871 = !DILocation(line: 359, column: 48, scope: !3733)
!3872 = !DILocalVariable(name: "stride", scope: !3733, file: !908, line: 360, type: !1705)
!3873 = !DILocation(line: 360, column: 19, scope: !3733)
!3874 = !DILocation(line: 360, column: 40, scope: !3733)
!3875 = !DILocation(line: 360, column: 28, scope: !3733)
!3876 = !DILocation(line: 360, column: 31, scope: !3733)
!3877 = !DILocalVariable(name: "flags", scope: !3733, file: !908, line: 361, type: !889)
!3878 = !DILocation(line: 361, column: 13, scope: !3733)
!3879 = !DILocalVariable(name: "pred", scope: !3733, file: !908, line: 361, type: !889)
!3880 = !DILocation(line: 361, column: 20, scope: !3733)
!3881 = !DILocalVariable(name: "ret", scope: !3733, file: !908, line: 362, type: !889)
!3882 = !DILocation(line: 362, column: 13, scope: !3733)
!3883 = !DILocation(line: 362, column: 39, scope: !3733)
!3884 = !DILocation(line: 362, column: 42, scope: !3733)
!3885 = !DILocation(line: 362, column: 61, scope: !3733)
!3886 = !DILocation(line: 362, column: 48, scope: !3733)
!3887 = !DILocation(line: 362, column: 58, scope: !3733)
!3888 = !DILocation(line: 362, column: 51, scope: !3733)
!3889 = !DILocation(line: 362, column: 64, scope: !3733)
!3890 = !DILocation(line: 362, column: 46, scope: !3733)
!3891 = !DILocation(line: 363, column: 47, scope: !3733)
!3892 = !DILocation(line: 363, column: 34, scope: !3733)
!3893 = !DILocation(line: 363, column: 44, scope: !3733)
!3894 = !DILocation(line: 363, column: 37, scope: !3733)
!3895 = !DILocation(line: 363, column: 50, scope: !3733)
!3896 = !DILocation(line: 362, column: 19, scope: !3733)
!3897 = !DILocation(line: 365, column: 13, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3733, file: !908, line: 365, column: 13)
!3899 = !DILocation(line: 365, column: 17, scope: !3898)
!3900 = !DILocation(line: 365, column: 13, scope: !3733)
!3901 = !DILocation(line: 366, column: 20, scope: !3898)
!3902 = !DILocation(line: 366, column: 13, scope: !3898)
!3903 = !DILocation(line: 368, column: 17, scope: !3733)
!3904 = !DILocation(line: 368, column: 15, scope: !3733)
!3905 = !DILocation(line: 369, column: 16, scope: !3733)
!3906 = !DILocation(line: 369, column: 14, scope: !3733)
!3907 = !DILocation(line: 371, column: 23, scope: !3733)
!3908 = !DILocation(line: 371, column: 15, scope: !3733)
!3909 = !DILocation(line: 371, column: 18, scope: !3733)
!3910 = !DILocation(line: 371, column: 28, scope: !3733)
!3911 = !DILocation(line: 371, column: 32, scope: !3733)
!3912 = !DILocation(line: 371, column: 30, scope: !3733)
!3913 = !DILocation(line: 371, column: 42, scope: !3733)
!3914 = !DILocation(line: 371, column: 40, scope: !3733)
!3915 = !DILocation(line: 371, column: 26, scope: !3733)
!3916 = !DILocation(line: 371, column: 13, scope: !3733)
!3917 = !DILocation(line: 372, column: 13, scope: !3732)
!3918 = !DILocation(line: 372, column: 19, scope: !3732)
!3919 = !DILocation(line: 372, column: 13, scope: !3733)
!3920 = !DILocation(line: 373, column: 17, scope: !3921)
!3921 = distinct !DILexicalBlock(scope: !3922, file: !908, line: 373, column: 17)
!3922 = distinct !DILexicalBlock(scope: !3732, file: !908, line: 372, column: 24)
!3923 = !DILocation(line: 373, column: 41, scope: !3921)
!3924 = !DILocation(line: 373, column: 39, scope: !3921)
!3925 = !DILocation(line: 373, column: 49, scope: !3921)
!3926 = !DILocation(line: 373, column: 47, scope: !3921)
!3927 = !DILocation(line: 373, column: 36, scope: !3921)
!3928 = !DILocation(line: 373, column: 17, scope: !3922)
!3929 = !DILocation(line: 374, column: 17, scope: !3921)
!3930 = !DILocation(line: 375, column: 20, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3922, file: !908, line: 375, column: 13)
!3932 = !DILocation(line: 375, column: 18, scope: !3931)
!3933 = !DILocation(line: 375, column: 25, scope: !3934)
!3934 = !DILexicalBlockFile(scope: !3935, file: !908, discriminator: 1)
!3935 = distinct !DILexicalBlock(scope: !3931, file: !908, line: 375, column: 13)
!3936 = !DILocation(line: 375, column: 29, scope: !3934)
!3937 = !DILocation(line: 375, column: 27, scope: !3934)
!3938 = !DILocation(line: 375, column: 13, scope: !3934)
!3939 = !DILocation(line: 376, column: 24, scope: !3940)
!3940 = distinct !DILexicalBlock(scope: !3941, file: !908, line: 376, column: 17)
!3941 = distinct !DILexicalBlock(scope: !3935, file: !908, line: 375, column: 42)
!3942 = !DILocation(line: 376, column: 22, scope: !3940)
!3943 = !DILocation(line: 376, column: 29, scope: !3944)
!3944 = !DILexicalBlockFile(scope: !3945, file: !908, discriminator: 1)
!3945 = distinct !DILexicalBlock(scope: !3940, file: !908, line: 376, column: 17)
!3946 = !DILocation(line: 376, column: 33, scope: !3944)
!3947 = !DILocation(line: 376, column: 31, scope: !3944)
!3948 = !DILocation(line: 376, column: 17, scope: !3944)
!3949 = !DILocation(line: 377, column: 30, scope: !3945)
!3950 = !DILocation(line: 377, column: 25, scope: !3945)
!3951 = !DILocation(line: 377, column: 21, scope: !3945)
!3952 = !DILocation(line: 377, column: 28, scope: !3945)
!3953 = !DILocation(line: 376, column: 41, scope: !3954)
!3954 = !DILexicalBlockFile(scope: !3945, file: !908, discriminator: 2)
!3955 = !DILocation(line: 376, column: 17, scope: !3954)
!3956 = distinct !{!3956, !3957}
!3957 = !DILocation(line: 376, column: 17, scope: !3941)
!3958 = !DILocation(line: 379, column: 24, scope: !3941)
!3959 = !DILocation(line: 379, column: 21, scope: !3941)
!3960 = !DILocation(line: 380, column: 13, scope: !3941)
!3961 = !DILocation(line: 375, column: 38, scope: !3962)
!3962 = !DILexicalBlockFile(scope: !3935, file: !908, discriminator: 2)
!3963 = !DILocation(line: 375, column: 13, scope: !3962)
!3964 = distinct !{!3964, !3965}
!3965 = !DILocation(line: 375, column: 13, scope: !3922)
!3966 = !DILocation(line: 381, column: 9, scope: !3922)
!3967 = !DILocation(line: 382, column: 20, scope: !3730)
!3968 = !DILocation(line: 382, column: 18, scope: !3730)
!3969 = !DILocation(line: 382, column: 25, scope: !3970)
!3970 = !DILexicalBlockFile(scope: !3729, file: !908, discriminator: 1)
!3971 = !DILocation(line: 382, column: 29, scope: !3970)
!3972 = !DILocation(line: 382, column: 27, scope: !3970)
!3973 = !DILocation(line: 382, column: 13, scope: !3970)
!3974 = !DILocation(line: 383, column: 24, scope: !3727)
!3975 = !DILocation(line: 383, column: 22, scope: !3727)
!3976 = !DILocation(line: 383, column: 29, scope: !3977)
!3977 = !DILexicalBlockFile(scope: !3726, file: !908, discriminator: 1)
!3978 = !DILocation(line: 383, column: 33, scope: !3977)
!3979 = !DILocation(line: 383, column: 31, scope: !3977)
!3980 = !DILocation(line: 383, column: 17, scope: !3977)
!3981 = !DILocalVariable(name: "pix", scope: !3725, file: !908, line: 384, type: !889)
!3982 = !DILocation(line: 384, column: 25, scope: !3725)
!3983 = !DILocation(line: 385, column: 25, scope: !3984)
!3984 = distinct !DILexicalBlock(scope: !3725, file: !908, line: 385, column: 25)
!3985 = !DILocation(line: 385, column: 44, scope: !3984)
!3986 = !DILocation(line: 385, column: 25, scope: !3725)
!3987 = !DILocation(line: 386, column: 25, scope: !3984)
!3988 = !DILocation(line: 388, column: 48, scope: !3725)
!3989 = !DILocation(line: 388, column: 41, scope: !3725)
!3990 = !DILocation(line: 388, column: 44, scope: !3725)
!3991 = !DILocation(line: 388, column: 51, scope: !3725)
!3992 = !DILocation(line: 388, column: 65, scope: !3725)
!3993 = !DILocation(line: 388, column: 58, scope: !3725)
!3994 = !DILocation(line: 388, column: 61, scope: !3725)
!3995 = !DILocation(line: 388, column: 68, scope: !3725)
!3996 = !DILocation(line: 388, column: 27, scope: !3725)
!3997 = !DILocation(line: 785, column: 30, scope: !3720, inlinedAt: !3724)
!3998 = !DILocation(line: 785, column: 34, scope: !3720, inlinedAt: !3724)
!3999 = !DILocation(line: 785, column: 118, scope: !3720, inlinedAt: !3724)
!4000 = !DILocation(line: 785, column: 122, scope: !3720, inlinedAt: !3724)
!4001 = !DILocation(line: 786, column: 60, scope: !3720, inlinedAt: !3724)
!4002 = !DILocation(line: 786, column: 64, scope: !3720, inlinedAt: !3724)
!4003 = !DILocation(line: 786, column: 74, scope: !3720, inlinedAt: !3724)
!4004 = !DILocation(line: 786, column: 83, scope: !3720, inlinedAt: !3724)
!4005 = !DILocation(line: 786, column: 71, scope: !3720, inlinedAt: !3724)
!4006 = !DILocation(line: 786, column: 92, scope: !3720, inlinedAt: !3724)
!4007 = !DILocation(line: 786, column: 16, scope: !3720, inlinedAt: !3724)
!4008 = !DILocation(line: 68, column: 16, scope: !3708, inlinedAt: !3740)
!4009 = !DILocation(line: 68, column: 19, scope: !3708, inlinedAt: !3740)
!4010 = !DILocation(line: 68, column: 24, scope: !3708, inlinedAt: !3740)
!4011 = !DILocation(line: 68, column: 38, scope: !3708, inlinedAt: !3740)
!4012 = !DILocation(line: 68, column: 41, scope: !3708, inlinedAt: !3740)
!4013 = !DILocation(line: 68, column: 46, scope: !3708, inlinedAt: !3740)
!4014 = !DILocation(line: 68, column: 34, scope: !3708, inlinedAt: !3740)
!4015 = !DILocation(line: 68, column: 57, scope: !3708, inlinedAt: !3740)
!4016 = !DILocation(line: 68, column: 69, scope: !3708, inlinedAt: !3740)
!4017 = !DILocation(line: 68, column: 72, scope: !3708, inlinedAt: !3740)
!4018 = !DILocation(line: 68, column: 79, scope: !3708, inlinedAt: !3740)
!4019 = !DILocation(line: 68, column: 84, scope: !3708, inlinedAt: !3740)
!4020 = !DILocation(line: 68, column: 99, scope: !3708, inlinedAt: !3740)
!4021 = !DILocation(line: 68, column: 102, scope: !3708, inlinedAt: !3740)
!4022 = !DILocation(line: 68, column: 109, scope: !3708, inlinedAt: !3740)
!4023 = !DILocation(line: 68, column: 114, scope: !3708, inlinedAt: !3740)
!4024 = !DILocation(line: 68, column: 94, scope: !3708, inlinedAt: !3740)
!4025 = !DILocation(line: 68, column: 63, scope: !3708, inlinedAt: !3740)
!4026 = !DILocation(line: 786, column: 100, scope: !3720, inlinedAt: !3724)
!4027 = !DILocation(line: 786, column: 109, scope: !3720, inlinedAt: !3724)
!4028 = !DILocation(line: 786, column: 96, scope: !3720, inlinedAt: !3724)
!4029 = !DILocation(line: 786, column: 14, scope: !3720, inlinedAt: !3724)
!4030 = !DILocation(line: 788, column: 64, scope: !4031, inlinedAt: !3724)
!4031 = !DILexicalBlockFile(scope: !3719, file: !1945, discriminator: 1)
!4032 = !DILocation(line: 788, column: 74, scope: !4031, inlinedAt: !3724)
!4033 = !DILocation(line: 788, column: 54, scope: !4031, inlinedAt: !3724)
!4034 = !DILocation(line: 788, column: 52, scope: !4031, inlinedAt: !3724)
!4035 = !DILocation(line: 788, column: 94, scope: !4031, inlinedAt: !3724)
!4036 = !DILocation(line: 788, column: 88, scope: !4031, inlinedAt: !3724)
!4037 = !DILocation(line: 788, column: 86, scope: !4031, inlinedAt: !3724)
!4038 = !DILocation(line: 788, column: 115, scope: !4031, inlinedAt: !3724)
!4039 = !DILocation(line: 788, column: 109, scope: !4031, inlinedAt: !3724)
!4040 = !DILocation(line: 788, column: 107, scope: !4031, inlinedAt: !3724)
!4041 = !DILocation(line: 788, column: 130, scope: !4031, inlinedAt: !3724)
!4042 = !DILocation(line: 788, column: 140, scope: !4031, inlinedAt: !3724)
!4043 = !DILocation(line: 788, column: 144, scope: !4031, inlinedAt: !3724)
!4044 = !DILocation(line: 788, column: 147, scope: !4045, inlinedAt: !3724)
!4045 = !DILexicalBlockFile(scope: !3718, file: !1945, discriminator: 2)
!4046 = !DILocation(line: 788, column: 149, scope: !4045, inlinedAt: !3724)
!4047 = !DILocation(line: 788, column: 130, scope: !4045, inlinedAt: !3724)
!4048 = !DILocation(line: 788, column: 169, scope: !4049, inlinedAt: !3724)
!4049 = !DILexicalBlockFile(scope: !3717, file: !1945, discriminator: 3)
!4050 = !DILocation(line: 788, column: 187, scope: !4049, inlinedAt: !3724)
!4051 = !DILocation(line: 788, column: 199, scope: !4049, inlinedAt: !3724)
!4052 = !DILocation(line: 788, column: 196, scope: !4049, inlinedAt: !3724)
!4053 = !DILocation(line: 788, column: 184, scope: !4049, inlinedAt: !3724)
!4054 = !DILocation(line: 788, column: 168, scope: !4049, inlinedAt: !3724)
!4055 = !DILocation(line: 788, column: 209, scope: !4056, inlinedAt: !3724)
!4056 = !DILexicalBlockFile(scope: !3717, file: !1945, discriminator: 4)
!4057 = !DILocation(line: 788, column: 221, scope: !4056, inlinedAt: !3724)
!4058 = !DILocation(line: 788, column: 218, scope: !4056, inlinedAt: !3724)
!4059 = !DILocation(line: 788, column: 168, scope: !4056, inlinedAt: !3724)
!4060 = !DILocation(line: 788, column: 231, scope: !4061, inlinedAt: !3724)
!4061 = !DILexicalBlockFile(scope: !3717, file: !1945, discriminator: 5)
!4062 = !DILocation(line: 788, column: 168, scope: !4061, inlinedAt: !3724)
!4063 = !DILocation(line: 788, column: 168, scope: !3738, inlinedAt: !3724)
!4064 = !DILocation(line: 788, column: 165, scope: !3738, inlinedAt: !3724)
!4065 = !DILocation(line: 788, column: 303, scope: !3738, inlinedAt: !3724)
!4066 = !DILocation(line: 788, column: 307, scope: !3738, inlinedAt: !3724)
!4067 = !DILocation(line: 788, column: 317, scope: !3738, inlinedAt: !3724)
!4068 = !DILocation(line: 788, column: 326, scope: !3738, inlinedAt: !3724)
!4069 = !DILocation(line: 788, column: 314, scope: !3738, inlinedAt: !3724)
!4070 = !DILocation(line: 788, column: 335, scope: !3738, inlinedAt: !3724)
!4071 = !DILocation(line: 788, column: 259, scope: !3738, inlinedAt: !3724)
!4072 = !DILocation(line: 68, column: 16, scope: !3708, inlinedAt: !3737)
!4073 = !DILocation(line: 68, column: 19, scope: !3708, inlinedAt: !3737)
!4074 = !DILocation(line: 68, column: 24, scope: !3708, inlinedAt: !3737)
!4075 = !DILocation(line: 68, column: 38, scope: !3708, inlinedAt: !3737)
!4076 = !DILocation(line: 68, column: 41, scope: !3708, inlinedAt: !3737)
!4077 = !DILocation(line: 68, column: 46, scope: !3708, inlinedAt: !3737)
!4078 = !DILocation(line: 68, column: 34, scope: !3708, inlinedAt: !3737)
!4079 = !DILocation(line: 68, column: 57, scope: !3708, inlinedAt: !3737)
!4080 = !DILocation(line: 68, column: 69, scope: !3708, inlinedAt: !3737)
!4081 = !DILocation(line: 68, column: 72, scope: !3708, inlinedAt: !3737)
!4082 = !DILocation(line: 68, column: 79, scope: !3708, inlinedAt: !3737)
!4083 = !DILocation(line: 68, column: 84, scope: !3708, inlinedAt: !3737)
!4084 = !DILocation(line: 68, column: 99, scope: !3708, inlinedAt: !3737)
!4085 = !DILocation(line: 68, column: 102, scope: !3708, inlinedAt: !3737)
!4086 = !DILocation(line: 68, column: 109, scope: !3708, inlinedAt: !3737)
!4087 = !DILocation(line: 68, column: 114, scope: !3708, inlinedAt: !3737)
!4088 = !DILocation(line: 68, column: 94, scope: !3708, inlinedAt: !3737)
!4089 = !DILocation(line: 68, column: 63, scope: !3708, inlinedAt: !3737)
!4090 = !DILocation(line: 788, column: 343, scope: !3738, inlinedAt: !3724)
!4091 = !DILocation(line: 788, column: 352, scope: !3738, inlinedAt: !3724)
!4092 = !DILocation(line: 788, column: 339, scope: !3738, inlinedAt: !3724)
!4093 = !DILocation(line: 788, column: 257, scope: !3738, inlinedAt: !3724)
!4094 = !DILocation(line: 788, column: 369, scope: !3738, inlinedAt: !3724)
!4095 = !DILocation(line: 788, column: 368, scope: !3738, inlinedAt: !3724)
!4096 = !DILocation(line: 788, column: 366, scope: !3738, inlinedAt: !3724)
!4097 = !DILocation(line: 788, column: 390, scope: !3738, inlinedAt: !3724)
!4098 = !DILocation(line: 788, column: 400, scope: !3738, inlinedAt: !3724)
!4099 = !DILocation(line: 788, column: 380, scope: !4100, inlinedAt: !3724)
!4100 = !DILexicalBlockFile(scope: !3738, file: !1945, discriminator: 19)
!4101 = !DILocation(line: 788, column: 411, scope: !3738, inlinedAt: !3724)
!4102 = !DILocation(line: 788, column: 409, scope: !3738, inlinedAt: !3724)
!4103 = !DILocation(line: 788, column: 378, scope: !3738, inlinedAt: !3724)
!4104 = !DILocation(line: 788, column: 430, scope: !3738, inlinedAt: !3724)
!4105 = !DILocation(line: 788, column: 424, scope: !3738, inlinedAt: !3724)
!4106 = !DILocation(line: 788, column: 422, scope: !3738, inlinedAt: !3724)
!4107 = !DILocation(line: 788, column: 451, scope: !3738, inlinedAt: !3724)
!4108 = !DILocation(line: 788, column: 445, scope: !3738, inlinedAt: !3724)
!4109 = !DILocation(line: 788, column: 443, scope: !3738, inlinedAt: !3724)
!4110 = !DILocation(line: 788, column: 466, scope: !3738, inlinedAt: !3724)
!4111 = !DILocation(line: 788, column: 476, scope: !3738, inlinedAt: !3724)
!4112 = !DILocation(line: 788, column: 480, scope: !3738, inlinedAt: !3724)
!4113 = !DILocation(line: 788, column: 483, scope: !4114, inlinedAt: !3724)
!4114 = !DILexicalBlockFile(scope: !3716, file: !1945, discriminator: 7)
!4115 = !DILocation(line: 788, column: 485, scope: !4114, inlinedAt: !3724)
!4116 = !DILocation(line: 788, column: 466, scope: !4114, inlinedAt: !3724)
!4117 = !DILocation(line: 788, column: 505, scope: !4118, inlinedAt: !3724)
!4118 = !DILexicalBlockFile(scope: !3715, file: !1945, discriminator: 8)
!4119 = !DILocation(line: 788, column: 523, scope: !4118, inlinedAt: !3724)
!4120 = !DILocation(line: 788, column: 535, scope: !4118, inlinedAt: !3724)
!4121 = !DILocation(line: 788, column: 532, scope: !4118, inlinedAt: !3724)
!4122 = !DILocation(line: 788, column: 520, scope: !4118, inlinedAt: !3724)
!4123 = !DILocation(line: 788, column: 504, scope: !4118, inlinedAt: !3724)
!4124 = !DILocation(line: 788, column: 548, scope: !4125, inlinedAt: !3724)
!4125 = !DILexicalBlockFile(scope: !3715, file: !1945, discriminator: 9)
!4126 = !DILocation(line: 788, column: 560, scope: !4125, inlinedAt: !3724)
!4127 = !DILocation(line: 788, column: 557, scope: !4125, inlinedAt: !3724)
!4128 = !DILocation(line: 788, column: 504, scope: !4125, inlinedAt: !3724)
!4129 = !DILocation(line: 788, column: 573, scope: !4130, inlinedAt: !3724)
!4130 = !DILexicalBlockFile(scope: !3715, file: !1945, discriminator: 10)
!4131 = !DILocation(line: 788, column: 504, scope: !4130, inlinedAt: !3724)
!4132 = !DILocation(line: 788, column: 504, scope: !3714, inlinedAt: !3724)
!4133 = !DILocation(line: 788, column: 501, scope: !3714, inlinedAt: !3724)
!4134 = !DILocation(line: 788, column: 645, scope: !3714, inlinedAt: !3724)
!4135 = !DILocation(line: 788, column: 649, scope: !3714, inlinedAt: !3724)
!4136 = !DILocation(line: 788, column: 659, scope: !3714, inlinedAt: !3724)
!4137 = !DILocation(line: 788, column: 668, scope: !3714, inlinedAt: !3724)
!4138 = !DILocation(line: 788, column: 656, scope: !3714, inlinedAt: !3724)
!4139 = !DILocation(line: 788, column: 677, scope: !3714, inlinedAt: !3724)
!4140 = !DILocation(line: 788, column: 601, scope: !3714, inlinedAt: !3724)
!4141 = !DILocation(line: 68, column: 16, scope: !3708, inlinedAt: !3713)
!4142 = !DILocation(line: 68, column: 19, scope: !3708, inlinedAt: !3713)
!4143 = !DILocation(line: 68, column: 24, scope: !3708, inlinedAt: !3713)
!4144 = !DILocation(line: 68, column: 38, scope: !3708, inlinedAt: !3713)
!4145 = !DILocation(line: 68, column: 41, scope: !3708, inlinedAt: !3713)
!4146 = !DILocation(line: 68, column: 46, scope: !3708, inlinedAt: !3713)
!4147 = !DILocation(line: 68, column: 34, scope: !3708, inlinedAt: !3713)
!4148 = !DILocation(line: 68, column: 57, scope: !3708, inlinedAt: !3713)
!4149 = !DILocation(line: 68, column: 69, scope: !3708, inlinedAt: !3713)
!4150 = !DILocation(line: 68, column: 72, scope: !3708, inlinedAt: !3713)
!4151 = !DILocation(line: 68, column: 79, scope: !3708, inlinedAt: !3713)
!4152 = !DILocation(line: 68, column: 84, scope: !3708, inlinedAt: !3713)
!4153 = !DILocation(line: 68, column: 99, scope: !3708, inlinedAt: !3713)
!4154 = !DILocation(line: 68, column: 102, scope: !3708, inlinedAt: !3713)
!4155 = !DILocation(line: 68, column: 109, scope: !3708, inlinedAt: !3713)
!4156 = !DILocation(line: 68, column: 114, scope: !3708, inlinedAt: !3713)
!4157 = !DILocation(line: 68, column: 94, scope: !3708, inlinedAt: !3713)
!4158 = !DILocation(line: 68, column: 63, scope: !3708, inlinedAt: !3713)
!4159 = !DILocation(line: 788, column: 685, scope: !3714, inlinedAt: !3724)
!4160 = !DILocation(line: 788, column: 694, scope: !3714, inlinedAt: !3724)
!4161 = !DILocation(line: 788, column: 681, scope: !3714, inlinedAt: !3724)
!4162 = !DILocation(line: 788, column: 599, scope: !3714, inlinedAt: !3724)
!4163 = !DILocation(line: 788, column: 711, scope: !3714, inlinedAt: !3724)
!4164 = !DILocation(line: 788, column: 710, scope: !3714, inlinedAt: !3724)
!4165 = !DILocation(line: 788, column: 708, scope: !3714, inlinedAt: !3724)
!4166 = !DILocation(line: 788, column: 732, scope: !3714, inlinedAt: !3724)
!4167 = !DILocation(line: 788, column: 742, scope: !3714, inlinedAt: !3724)
!4168 = !DILocation(line: 788, column: 722, scope: !4169, inlinedAt: !3724)
!4169 = !DILexicalBlockFile(scope: !3714, file: !1945, discriminator: 20)
!4170 = !DILocation(line: 788, column: 753, scope: !3714, inlinedAt: !3724)
!4171 = !DILocation(line: 788, column: 751, scope: !3714, inlinedAt: !3724)
!4172 = !DILocation(line: 788, column: 720, scope: !3714, inlinedAt: !3724)
!4173 = !DILocation(line: 788, column: 772, scope: !3714, inlinedAt: !3724)
!4174 = !DILocation(line: 788, column: 766, scope: !3714, inlinedAt: !3724)
!4175 = !DILocation(line: 788, column: 764, scope: !3714, inlinedAt: !3724)
!4176 = !DILocation(line: 788, column: 793, scope: !3714, inlinedAt: !3724)
!4177 = !DILocation(line: 788, column: 787, scope: !3714, inlinedAt: !3724)
!4178 = !DILocation(line: 788, column: 785, scope: !3714, inlinedAt: !3724)
!4179 = !DILocation(line: 788, column: 804, scope: !3714, inlinedAt: !3724)
!4180 = !DILocation(line: 788, column: 806, scope: !4181, inlinedAt: !3724)
!4181 = !DILexicalBlockFile(scope: !3717, file: !1945, discriminator: 12)
!4182 = !DILocation(line: 788, column: 827, scope: !4183, inlinedAt: !3724)
!4183 = !DILexicalBlockFile(scope: !4184, file: !1945, discriminator: 14)
!4184 = distinct !DILexicalBlock(scope: !3719, file: !1945, line: 788, column: 811)
!4185 = !DILocation(line: 788, column: 822, scope: !4183, inlinedAt: !3724)
!4186 = !DILocation(line: 788, column: 844, scope: !4183, inlinedAt: !3724)
!4187 = !DILocation(line: 788, column: 862, scope: !4183, inlinedAt: !3724)
!4188 = !DILocation(line: 788, column: 874, scope: !4183, inlinedAt: !3724)
!4189 = !DILocation(line: 788, column: 871, scope: !4183, inlinedAt: !3724)
!4190 = !DILocation(line: 788, column: 859, scope: !4183, inlinedAt: !3724)
!4191 = !DILocation(line: 788, column: 843, scope: !4183, inlinedAt: !3724)
!4192 = !DILocation(line: 788, column: 881, scope: !4193, inlinedAt: !3724)
!4193 = !DILexicalBlockFile(scope: !4184, file: !1945, discriminator: 15)
!4194 = !DILocation(line: 788, column: 893, scope: !4193, inlinedAt: !3724)
!4195 = !DILocation(line: 788, column: 890, scope: !4193, inlinedAt: !3724)
!4196 = !DILocation(line: 788, column: 843, scope: !4193, inlinedAt: !3724)
!4197 = !DILocation(line: 788, column: 900, scope: !4198, inlinedAt: !3724)
!4198 = !DILexicalBlockFile(scope: !4184, file: !1945, discriminator: 16)
!4199 = !DILocation(line: 788, column: 843, scope: !4198, inlinedAt: !3724)
!4200 = !DILocation(line: 788, column: 843, scope: !4201, inlinedAt: !3724)
!4201 = !DILexicalBlockFile(scope: !4184, file: !1945, discriminator: 17)
!4202 = !DILocation(line: 788, column: 840, scope: !4201, inlinedAt: !3724)
!4203 = !DILocation(line: 790, column: 18, scope: !3720, inlinedAt: !3724)
!4204 = !DILocation(line: 790, column: 6, scope: !3720, inlinedAt: !3724)
!4205 = !DILocation(line: 790, column: 10, scope: !3720, inlinedAt: !3724)
!4206 = !DILocation(line: 790, column: 16, scope: !3720, inlinedAt: !3724)
!4207 = !DILocation(line: 792, column: 12, scope: !3720, inlinedAt: !3724)
!4208 = !DILocation(line: 388, column: 25, scope: !3725)
!4209 = !DILocation(line: 389, column: 25, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !3725, file: !908, line: 389, column: 25)
!4211 = !DILocation(line: 389, column: 29, scope: !4210)
!4212 = !DILocation(line: 389, column: 25, scope: !3725)
!4213 = !DILocation(line: 390, column: 25, scope: !4210)
!4214 = !DILocation(line: 392, column: 36, scope: !3725)
!4215 = !DILocation(line: 392, column: 34, scope: !3725)
!4216 = !DILocation(line: 392, column: 30, scope: !3725)
!4217 = !DILocation(line: 392, column: 25, scope: !3725)
!4218 = !DILocation(line: 392, column: 21, scope: !3725)
!4219 = !DILocation(line: 392, column: 28, scope: !3725)
!4220 = !DILocation(line: 393, column: 17, scope: !3725)
!4221 = !DILocation(line: 383, column: 41, scope: !4222)
!4222 = !DILexicalBlockFile(scope: !3726, file: !908, discriminator: 2)
!4223 = !DILocation(line: 383, column: 17, scope: !4222)
!4224 = distinct !{!4224, !4225}
!4225 = !DILocation(line: 383, column: 17, scope: !3728)
!4226 = !DILocation(line: 394, column: 24, scope: !3728)
!4227 = !DILocation(line: 394, column: 21, scope: !3728)
!4228 = !DILocation(line: 395, column: 13, scope: !3728)
!4229 = !DILocation(line: 382, column: 38, scope: !4230)
!4230 = !DILexicalBlockFile(scope: !3729, file: !908, discriminator: 2)
!4231 = !DILocation(line: 382, column: 13, scope: !4230)
!4232 = distinct !{!4232, !4233}
!4233 = !DILocation(line: 382, column: 13, scope: !3731)
!4234 = !DILocation(line: 398, column: 17, scope: !3733)
!4235 = !DILocation(line: 398, column: 9, scope: !3733)
!4236 = !DILocation(line: 400, column: 27, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !3733, file: !908, line: 398, column: 23)
!4238 = !DILocation(line: 400, column: 19, scope: !4237)
!4239 = !DILocation(line: 400, column: 22, scope: !4237)
!4240 = !DILocation(line: 400, column: 32, scope: !4237)
!4241 = !DILocation(line: 400, column: 36, scope: !4237)
!4242 = !DILocation(line: 400, column: 34, scope: !4237)
!4243 = !DILocation(line: 400, column: 46, scope: !4237)
!4244 = !DILocation(line: 400, column: 44, scope: !4237)
!4245 = !DILocation(line: 400, column: 30, scope: !4237)
!4246 = !DILocation(line: 400, column: 17, scope: !4237)
!4247 = !DILocation(line: 401, column: 13, scope: !4237)
!4248 = !DILocation(line: 401, column: 16, scope: !4237)
!4249 = !DILocation(line: 401, column: 25, scope: !4237)
!4250 = !DILocation(line: 401, column: 39, scope: !4237)
!4251 = !DILocation(line: 401, column: 44, scope: !4237)
!4252 = !DILocation(line: 401, column: 49, scope: !4237)
!4253 = !DILocation(line: 402, column: 20, scope: !4237)
!4254 = !DILocation(line: 402, column: 17, scope: !4237)
!4255 = !DILocation(line: 403, column: 17, scope: !4256)
!4256 = distinct !DILexicalBlock(scope: !4237, file: !908, line: 403, column: 17)
!4257 = !DILocation(line: 403, column: 17, scope: !4237)
!4258 = !DILocation(line: 404, column: 17, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4256, file: !908, line: 403, column: 29)
!4260 = !DILocation(line: 404, column: 20, scope: !4259)
!4261 = !DILocation(line: 404, column: 29, scope: !4259)
!4262 = !DILocation(line: 404, column: 43, scope: !4259)
!4263 = !DILocation(line: 404, column: 48, scope: !4259)
!4264 = !DILocation(line: 404, column: 53, scope: !4259)
!4265 = !DILocation(line: 405, column: 24, scope: !4259)
!4266 = !DILocation(line: 405, column: 21, scope: !4259)
!4267 = !DILocation(line: 406, column: 13, scope: !4259)
!4268 = !DILocation(line: 407, column: 26, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4237, file: !908, line: 407, column: 13)
!4270 = !DILocation(line: 407, column: 24, scope: !4269)
!4271 = !DILocation(line: 407, column: 20, scope: !4269)
!4272 = !DILocation(line: 407, column: 18, scope: !4269)
!4273 = !DILocation(line: 407, column: 38, scope: !4274)
!4274 = !DILexicalBlockFile(scope: !4275, file: !908, discriminator: 1)
!4275 = distinct !DILexicalBlock(scope: !4269, file: !908, line: 407, column: 13)
!4276 = !DILocation(line: 407, column: 42, scope: !4274)
!4277 = !DILocation(line: 407, column: 40, scope: !4274)
!4278 = !DILocation(line: 407, column: 13, scope: !4274)
!4279 = !DILocation(line: 408, column: 17, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !4275, file: !908, line: 407, column: 55)
!4281 = !DILocation(line: 408, column: 20, scope: !4280)
!4282 = !DILocation(line: 408, column: 29, scope: !4280)
!4283 = !DILocation(line: 408, column: 43, scope: !4280)
!4284 = !DILocation(line: 408, column: 48, scope: !4280)
!4285 = !DILocation(line: 408, column: 53, scope: !4280)
!4286 = !DILocation(line: 408, column: 65, scope: !4280)
!4287 = !DILocation(line: 408, column: 64, scope: !4280)
!4288 = !DILocation(line: 408, column: 60, scope: !4280)
!4289 = !DILocation(line: 409, column: 24, scope: !4280)
!4290 = !DILocation(line: 409, column: 21, scope: !4280)
!4291 = !DILocation(line: 410, column: 13, scope: !4280)
!4292 = !DILocation(line: 407, column: 51, scope: !4293)
!4293 = !DILexicalBlockFile(scope: !4275, file: !908, discriminator: 2)
!4294 = !DILocation(line: 407, column: 13, scope: !4293)
!4295 = distinct !{!4295, !4296}
!4296 = !DILocation(line: 407, column: 13, scope: !4237)
!4297 = !DILocation(line: 411, column: 13, scope: !4237)
!4298 = !DILocation(line: 413, column: 27, scope: !4237)
!4299 = !DILocation(line: 413, column: 19, scope: !4237)
!4300 = !DILocation(line: 413, column: 22, scope: !4237)
!4301 = !DILocation(line: 413, column: 32, scope: !4237)
!4302 = !DILocation(line: 413, column: 36, scope: !4237)
!4303 = !DILocation(line: 413, column: 34, scope: !4237)
!4304 = !DILocation(line: 413, column: 46, scope: !4237)
!4305 = !DILocation(line: 413, column: 44, scope: !4237)
!4306 = !DILocation(line: 413, column: 30, scope: !4237)
!4307 = !DILocation(line: 413, column: 17, scope: !4237)
!4308 = !DILocation(line: 414, column: 13, scope: !4237)
!4309 = !DILocation(line: 414, column: 16, scope: !4237)
!4310 = !DILocation(line: 414, column: 25, scope: !4237)
!4311 = !DILocation(line: 414, column: 39, scope: !4237)
!4312 = !DILocation(line: 414, column: 44, scope: !4237)
!4313 = !DILocation(line: 414, column: 49, scope: !4237)
!4314 = !DILocation(line: 415, column: 20, scope: !4237)
!4315 = !DILocation(line: 415, column: 17, scope: !4237)
!4316 = !DILocation(line: 416, column: 17, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4237, file: !908, line: 416, column: 17)
!4318 = !DILocation(line: 416, column: 17, scope: !4237)
!4319 = !DILocation(line: 417, column: 17, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4317, file: !908, line: 416, column: 29)
!4321 = !DILocation(line: 417, column: 20, scope: !4320)
!4322 = !DILocation(line: 417, column: 29, scope: !4320)
!4323 = !DILocation(line: 417, column: 43, scope: !4320)
!4324 = !DILocation(line: 417, column: 48, scope: !4320)
!4325 = !DILocation(line: 417, column: 53, scope: !4320)
!4326 = !DILocation(line: 418, column: 24, scope: !4320)
!4327 = !DILocation(line: 418, column: 21, scope: !4320)
!4328 = !DILocation(line: 419, column: 13, scope: !4320)
!4329 = !DILocation(line: 420, column: 27, scope: !4237)
!4330 = !DILocation(line: 420, column: 34, scope: !4237)
!4331 = !DILocation(line: 420, column: 26, scope: !4237)
!4332 = !DILocation(line: 420, column: 26, scope: !4333)
!4333 = !DILexicalBlockFile(scope: !4237, file: !908, discriminator: 1)
!4334 = !DILocation(line: 420, column: 51, scope: !4335)
!4335 = !DILexicalBlockFile(scope: !4237, file: !908, discriminator: 2)
!4336 = !DILocation(line: 420, column: 26, scope: !4335)
!4337 = !DILocation(line: 420, column: 26, scope: !4338)
!4338 = !DILexicalBlockFile(scope: !4237, file: !908, discriminator: 3)
!4339 = !DILocation(line: 420, column: 23, scope: !4338)
!4340 = !DILocation(line: 421, column: 26, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !4237, file: !908, line: 421, column: 13)
!4342 = !DILocation(line: 421, column: 24, scope: !4341)
!4343 = !DILocation(line: 421, column: 20, scope: !4341)
!4344 = !DILocation(line: 421, column: 18, scope: !4341)
!4345 = !DILocation(line: 421, column: 38, scope: !4346)
!4346 = !DILexicalBlockFile(scope: !4347, file: !908, discriminator: 1)
!4347 = distinct !DILexicalBlock(scope: !4341, file: !908, line: 421, column: 13)
!4348 = !DILocation(line: 421, column: 42, scope: !4346)
!4349 = !DILocation(line: 421, column: 40, scope: !4346)
!4350 = !DILocation(line: 421, column: 13, scope: !4346)
!4351 = !DILocation(line: 422, column: 28, scope: !4352)
!4352 = distinct !DILexicalBlock(scope: !4347, file: !908, line: 421, column: 55)
!4353 = !DILocation(line: 422, column: 27, scope: !4352)
!4354 = !DILocation(line: 422, column: 23, scope: !4352)
!4355 = !DILocation(line: 422, column: 21, scope: !4352)
!4356 = !DILocation(line: 423, column: 24, scope: !4352)
!4357 = !DILocation(line: 423, column: 30, scope: !4352)
!4358 = !DILocation(line: 423, column: 28, scope: !4352)
!4359 = !DILocation(line: 423, column: 22, scope: !4352)
!4360 = !DILocation(line: 424, column: 26, scope: !4352)
!4361 = !DILocation(line: 424, column: 17, scope: !4352)
!4362 = !DILocation(line: 424, column: 24, scope: !4352)
!4363 = !DILocation(line: 425, column: 24, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !4352, file: !908, line: 425, column: 17)
!4365 = !DILocation(line: 425, column: 22, scope: !4364)
!4366 = !DILocation(line: 425, column: 29, scope: !4367)
!4367 = !DILexicalBlockFile(scope: !4368, file: !908, discriminator: 1)
!4368 = distinct !DILexicalBlock(scope: !4364, file: !908, line: 425, column: 17)
!4369 = !DILocation(line: 425, column: 33, scope: !4367)
!4370 = !DILocation(line: 425, column: 31, scope: !4367)
!4371 = !DILocation(line: 425, column: 17, scope: !4367)
!4372 = !DILocation(line: 426, column: 31, scope: !4373)
!4373 = distinct !DILexicalBlock(scope: !4368, file: !908, line: 425, column: 49)
!4374 = !DILocation(line: 426, column: 35, scope: !4373)
!4375 = !DILocation(line: 426, column: 33, scope: !4373)
!4376 = !DILocation(line: 426, column: 27, scope: !4373)
!4377 = !DILocation(line: 426, column: 25, scope: !4373)
!4378 = !DILocation(line: 427, column: 35, scope: !4373)
!4379 = !DILocation(line: 427, column: 40, scope: !4373)
!4380 = !DILocation(line: 427, column: 52, scope: !4373)
!4381 = !DILocation(line: 427, column: 37, scope: !4373)
!4382 = !DILocation(line: 427, column: 31, scope: !4373)
!4383 = !DILocation(line: 427, column: 29, scope: !4373)
!4384 = !DILocation(line: 428, column: 29, scope: !4373)
!4385 = !DILocation(line: 428, column: 35, scope: !4373)
!4386 = !DILocation(line: 428, column: 33, scope: !4373)
!4387 = !DILocation(line: 428, column: 49, scope: !4373)
!4388 = !DILocation(line: 428, column: 45, scope: !4373)
!4389 = !DILocation(line: 428, column: 43, scope: !4373)
!4390 = !DILocation(line: 428, column: 26, scope: !4373)
!4391 = !DILocation(line: 429, column: 30, scope: !4373)
!4392 = !DILocation(line: 429, column: 25, scope: !4373)
!4393 = !DILocation(line: 429, column: 21, scope: !4373)
!4394 = !DILocation(line: 429, column: 28, scope: !4373)
!4395 = !DILocation(line: 430, column: 17, scope: !4373)
!4396 = !DILocation(line: 425, column: 45, scope: !4397)
!4397 = !DILexicalBlockFile(scope: !4368, file: !908, discriminator: 2)
!4398 = !DILocation(line: 425, column: 17, scope: !4397)
!4399 = distinct !{!4399, !4400}
!4400 = !DILocation(line: 425, column: 17, scope: !4352)
!4401 = !DILocation(line: 431, column: 21, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !4352, file: !908, line: 431, column: 21)
!4403 = !DILocation(line: 431, column: 27, scope: !4402)
!4404 = !DILocation(line: 431, column: 21, scope: !4352)
!4405 = !DILocation(line: 432, column: 21, scope: !4402)
!4406 = !DILocation(line: 432, column: 24, scope: !4402)
!4407 = !DILocation(line: 432, column: 33, scope: !4402)
!4408 = !DILocation(line: 432, column: 51, scope: !4402)
!4409 = !DILocation(line: 432, column: 55, scope: !4402)
!4410 = !DILocation(line: 432, column: 61, scope: !4402)
!4411 = !DILocation(line: 432, column: 74, scope: !4402)
!4412 = !DILocation(line: 432, column: 80, scope: !4402)
!4413 = !DILocation(line: 433, column: 24, scope: !4352)
!4414 = !DILocation(line: 433, column: 21, scope: !4352)
!4415 = !DILocation(line: 434, column: 13, scope: !4352)
!4416 = !DILocation(line: 421, column: 51, scope: !4417)
!4417 = !DILexicalBlockFile(scope: !4347, file: !908, discriminator: 2)
!4418 = !DILocation(line: 421, column: 13, scope: !4417)
!4419 = distinct !{!4419, !4420}
!4420 = !DILocation(line: 421, column: 13, scope: !4237)
!4421 = !DILocation(line: 435, column: 13, scope: !4237)
!4422 = !DILocation(line: 437, column: 27, scope: !4237)
!4423 = !DILocation(line: 437, column: 19, scope: !4237)
!4424 = !DILocation(line: 437, column: 22, scope: !4237)
!4425 = !DILocation(line: 437, column: 32, scope: !4237)
!4426 = !DILocation(line: 437, column: 36, scope: !4237)
!4427 = !DILocation(line: 437, column: 34, scope: !4237)
!4428 = !DILocation(line: 437, column: 46, scope: !4237)
!4429 = !DILocation(line: 437, column: 44, scope: !4237)
!4430 = !DILocation(line: 437, column: 30, scope: !4237)
!4431 = !DILocation(line: 437, column: 17, scope: !4237)
!4432 = !DILocation(line: 438, column: 13, scope: !4237)
!4433 = !DILocation(line: 438, column: 16, scope: !4237)
!4434 = !DILocation(line: 438, column: 25, scope: !4237)
!4435 = !DILocation(line: 438, column: 39, scope: !4237)
!4436 = !DILocation(line: 438, column: 44, scope: !4237)
!4437 = !DILocation(line: 438, column: 49, scope: !4237)
!4438 = !DILocation(line: 439, column: 20, scope: !4237)
!4439 = !DILocation(line: 439, column: 17, scope: !4237)
!4440 = !DILocation(line: 440, column: 17, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !4237, file: !908, line: 440, column: 17)
!4442 = !DILocation(line: 440, column: 17, scope: !4237)
!4443 = !DILocation(line: 441, column: 17, scope: !4444)
!4444 = distinct !DILexicalBlock(scope: !4441, file: !908, line: 440, column: 29)
!4445 = !DILocation(line: 441, column: 20, scope: !4444)
!4446 = !DILocation(line: 441, column: 29, scope: !4444)
!4447 = !DILocation(line: 441, column: 43, scope: !4444)
!4448 = !DILocation(line: 441, column: 48, scope: !4444)
!4449 = !DILocation(line: 441, column: 53, scope: !4444)
!4450 = !DILocation(line: 442, column: 24, scope: !4444)
!4451 = !DILocation(line: 442, column: 21, scope: !4444)
!4452 = !DILocation(line: 443, column: 13, scope: !4444)
!4453 = !DILocation(line: 444, column: 30, scope: !4237)
!4454 = !DILocation(line: 444, column: 28, scope: !4237)
!4455 = !DILocation(line: 444, column: 21, scope: !4237)
!4456 = !DILocation(line: 445, column: 26, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4237, file: !908, line: 445, column: 13)
!4458 = !DILocation(line: 445, column: 24, scope: !4457)
!4459 = !DILocation(line: 445, column: 20, scope: !4457)
!4460 = !DILocation(line: 445, column: 18, scope: !4457)
!4461 = !DILocation(line: 445, column: 38, scope: !4462)
!4462 = !DILexicalBlockFile(scope: !4463, file: !908, discriminator: 1)
!4463 = distinct !DILexicalBlock(scope: !4457, file: !908, line: 445, column: 13)
!4464 = !DILocation(line: 445, column: 42, scope: !4462)
!4465 = !DILocation(line: 445, column: 40, scope: !4462)
!4466 = !DILocation(line: 445, column: 13, scope: !4462)
!4467 = !DILocation(line: 446, column: 17, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !4463, file: !908, line: 445, column: 55)
!4469 = !DILocation(line: 446, column: 20, scope: !4468)
!4470 = !DILocation(line: 446, column: 29, scope: !4468)
!4471 = !DILocation(line: 446, column: 45, scope: !4468)
!4472 = !DILocation(line: 446, column: 50, scope: !4468)
!4473 = !DILocation(line: 446, column: 56, scope: !4468)
!4474 = !DILocation(line: 446, column: 54, scope: !4468)
!4475 = !DILocation(line: 447, column: 46, scope: !4468)
!4476 = !DILocation(line: 447, column: 51, scope: !4468)
!4477 = !DILocation(line: 448, column: 34, scope: !4468)
!4478 = !DILocation(line: 448, column: 32, scope: !4468)
!4479 = !DILocation(line: 448, column: 25, scope: !4468)
!4480 = !DILocation(line: 449, column: 24, scope: !4468)
!4481 = !DILocation(line: 449, column: 21, scope: !4468)
!4482 = !DILocation(line: 450, column: 13, scope: !4468)
!4483 = !DILocation(line: 445, column: 51, scope: !4484)
!4484 = !DILexicalBlockFile(scope: !4463, file: !908, discriminator: 2)
!4485 = !DILocation(line: 445, column: 13, scope: !4484)
!4486 = distinct !{!4486, !4487}
!4487 = !DILocation(line: 445, column: 13, scope: !4237)
!4488 = !DILocation(line: 451, column: 13, scope: !4237)
!4489 = !DILocation(line: 453, column: 35, scope: !4237)
!4490 = !DILocation(line: 453, column: 68, scope: !4237)
!4491 = !DILocation(line: 453, column: 13, scope: !4237)
!4492 = !DILocation(line: 454, column: 9, scope: !4237)
!4493 = !DILocation(line: 455, column: 5, scope: !3733)
!4494 = !DILocation(line: 354, column: 33, scope: !4495)
!4495 = !DILexicalBlockFile(scope: !3734, file: !908, discriminator: 2)
!4496 = !DILocation(line: 354, column: 5, scope: !4495)
!4497 = distinct !{!4497, !4498}
!4498 = !DILocation(line: 354, column: 5, scope: !3706)
!4499 = !DILocation(line: 457, column: 9, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !3706, file: !908, line: 457, column: 9)
!4501 = !DILocation(line: 457, column: 12, scope: !4500)
!4502 = !DILocation(line: 457, column: 9, scope: !3706)
!4503 = !DILocalVariable(name: "height", scope: !4504, file: !908, line: 458, type: !889)
!4504 = distinct !DILexicalBlock(scope: !4500, file: !908, line: 457, column: 25)
!4505 = !DILocation(line: 458, column: 13, scope: !4504)
!4506 = !DILocation(line: 458, column: 24, scope: !4504)
!4507 = !DILocation(line: 458, column: 27, scope: !4504)
!4508 = !DILocation(line: 458, column: 44, scope: !4504)
!4509 = !DILocation(line: 458, column: 51, scope: !4504)
!4510 = !DILocation(line: 458, column: 66, scope: !4504)
!4511 = !DILocation(line: 458, column: 70, scope: !4504)
!4512 = !DILocation(line: 458, column: 73, scope: !4504)
!4513 = !DILocation(line: 458, column: 68, scope: !4504)
!4514 = !DILocation(line: 458, column: 64, scope: !4504)
!4515 = !DILocation(line: 458, column: 41, scope: !4504)
!4516 = !DILocation(line: 458, column: 23, scope: !4504)
!4517 = !DILocation(line: 458, column: 90, scope: !4518)
!4518 = !DILexicalBlockFile(scope: !4504, file: !908, discriminator: 1)
!4519 = !DILocation(line: 458, column: 97, scope: !4518)
!4520 = !DILocation(line: 458, column: 112, scope: !4518)
!4521 = !DILocation(line: 458, column: 116, scope: !4518)
!4522 = !DILocation(line: 458, column: 119, scope: !4518)
!4523 = !DILocation(line: 458, column: 114, scope: !4518)
!4524 = !DILocation(line: 458, column: 110, scope: !4518)
!4525 = !DILocation(line: 458, column: 23, scope: !4518)
!4526 = !DILocation(line: 458, column: 136, scope: !4527)
!4527 = !DILexicalBlockFile(scope: !4504, file: !908, discriminator: 2)
!4528 = !DILocation(line: 458, column: 139, scope: !4527)
!4529 = !DILocation(line: 458, column: 23, scope: !4527)
!4530 = !DILocation(line: 458, column: 23, scope: !4531)
!4531 = !DILexicalBlockFile(scope: !4504, file: !908, discriminator: 3)
!4532 = !DILocation(line: 458, column: 13, scope: !4531)
!4533 = !DILocalVariable(name: "width", scope: !4504, file: !908, line: 459, type: !889)
!4534 = !DILocation(line: 459, column: 13, scope: !4504)
!4535 = !DILocation(line: 459, column: 21, scope: !4504)
!4536 = !DILocation(line: 459, column: 28, scope: !4504)
!4537 = !DILocalVariable(name: "b", scope: !4504, file: !908, line: 460, type: !1029)
!4538 = !DILocation(line: 460, column: 18, scope: !4504)
!4539 = !DILocation(line: 460, column: 22, scope: !4504)
!4540 = !DILocation(line: 460, column: 25, scope: !4504)
!4541 = !DILocation(line: 460, column: 35, scope: !4504)
!4542 = !DILocation(line: 460, column: 39, scope: !4504)
!4543 = !DILocation(line: 460, column: 42, scope: !4504)
!4544 = !DILocation(line: 460, column: 37, scope: !4504)
!4545 = !DILocation(line: 460, column: 57, scope: !4504)
!4546 = !DILocation(line: 460, column: 60, scope: !4504)
!4547 = !DILocation(line: 460, column: 55, scope: !4504)
!4548 = !DILocation(line: 460, column: 33, scope: !4504)
!4549 = !DILocalVariable(name: "g", scope: !4504, file: !908, line: 461, type: !1029)
!4550 = !DILocation(line: 461, column: 18, scope: !4504)
!4551 = !DILocation(line: 461, column: 22, scope: !4504)
!4552 = !DILocation(line: 461, column: 25, scope: !4504)
!4553 = !DILocation(line: 461, column: 35, scope: !4504)
!4554 = !DILocation(line: 461, column: 39, scope: !4504)
!4555 = !DILocation(line: 461, column: 42, scope: !4504)
!4556 = !DILocation(line: 461, column: 37, scope: !4504)
!4557 = !DILocation(line: 461, column: 57, scope: !4504)
!4558 = !DILocation(line: 461, column: 60, scope: !4504)
!4559 = !DILocation(line: 461, column: 55, scope: !4504)
!4560 = !DILocation(line: 461, column: 33, scope: !4504)
!4561 = !DILocalVariable(name: "r", scope: !4504, file: !908, line: 462, type: !1029)
!4562 = !DILocation(line: 462, column: 18, scope: !4504)
!4563 = !DILocation(line: 462, column: 22, scope: !4504)
!4564 = !DILocation(line: 462, column: 25, scope: !4504)
!4565 = !DILocation(line: 462, column: 35, scope: !4504)
!4566 = !DILocation(line: 462, column: 39, scope: !4504)
!4567 = !DILocation(line: 462, column: 42, scope: !4504)
!4568 = !DILocation(line: 462, column: 37, scope: !4504)
!4569 = !DILocation(line: 462, column: 57, scope: !4504)
!4570 = !DILocation(line: 462, column: 60, scope: !4504)
!4571 = !DILocation(line: 462, column: 55, scope: !4504)
!4572 = !DILocation(line: 462, column: 33, scope: !4504)
!4573 = !DILocation(line: 464, column: 16, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4504, file: !908, line: 464, column: 9)
!4575 = !DILocation(line: 464, column: 14, scope: !4574)
!4576 = !DILocation(line: 464, column: 21, scope: !4577)
!4577 = !DILexicalBlockFile(scope: !4578, file: !908, discriminator: 1)
!4578 = distinct !DILexicalBlock(scope: !4574, file: !908, line: 464, column: 9)
!4579 = !DILocation(line: 464, column: 25, scope: !4577)
!4580 = !DILocation(line: 464, column: 23, scope: !4577)
!4581 = !DILocation(line: 464, column: 9, scope: !4577)
!4582 = !DILocation(line: 465, column: 13, scope: !4583)
!4583 = distinct !DILexicalBlock(scope: !4578, file: !908, line: 464, column: 38)
!4584 = !DILocation(line: 465, column: 16, scope: !4583)
!4585 = !DILocation(line: 465, column: 25, scope: !4583)
!4586 = !DILocation(line: 465, column: 35, scope: !4583)
!4587 = !DILocation(line: 465, column: 38, scope: !4583)
!4588 = !DILocation(line: 465, column: 41, scope: !4583)
!4589 = !DILocation(line: 466, column: 13, scope: !4583)
!4590 = !DILocation(line: 466, column: 16, scope: !4583)
!4591 = !DILocation(line: 466, column: 25, scope: !4583)
!4592 = !DILocation(line: 466, column: 35, scope: !4583)
!4593 = !DILocation(line: 466, column: 38, scope: !4583)
!4594 = !DILocation(line: 466, column: 41, scope: !4583)
!4595 = !DILocation(line: 467, column: 18, scope: !4583)
!4596 = !DILocation(line: 467, column: 21, scope: !4583)
!4597 = !DILocation(line: 467, column: 15, scope: !4583)
!4598 = !DILocation(line: 468, column: 18, scope: !4583)
!4599 = !DILocation(line: 468, column: 21, scope: !4583)
!4600 = !DILocation(line: 468, column: 15, scope: !4583)
!4601 = !DILocation(line: 469, column: 18, scope: !4583)
!4602 = !DILocation(line: 469, column: 21, scope: !4583)
!4603 = !DILocation(line: 469, column: 15, scope: !4583)
!4604 = !DILocation(line: 470, column: 9, scope: !4583)
!4605 = !DILocation(line: 464, column: 34, scope: !4606)
!4606 = !DILexicalBlockFile(scope: !4578, file: !908, discriminator: 2)
!4607 = !DILocation(line: 464, column: 9, scope: !4606)
!4608 = distinct !{!4608, !4609}
!4609 = !DILocation(line: 464, column: 9, scope: !4504)
!4610 = !DILocation(line: 471, column: 5, scope: !4504)
!4611 = !DILocation(line: 473, column: 5, scope: !3706)
!4612 = !DILocation(line: 474, column: 1, scope: !3706)
!4613 = distinct !DISubprogram(name: "huff_build10", scope: !908, file: !908, line: 95, type: !1689, isLocal: true, isDefinition: true, scopeLine: 96, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1635)
!4614 = !DILocalVariable(name: "vlc", arg: 1, scope: !4613, file: !908, line: 95, type: !1691)
!4615 = !DILocation(line: 95, column: 30, scope: !4613)
!4616 = !DILocalVariable(name: "len", arg: 2, scope: !4613, file: !908, line: 95, type: !1029)
!4617 = !DILocation(line: 95, column: 44, scope: !4613)
!4618 = !DILocalVariable(name: "he", scope: !4613, file: !908, line: 97, type: !4619)
!4619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3136, size: 65536, align: 32, elements: !4620)
!4620 = !{!4621}
!4621 = !DISubrange(count: 1024)
!4622 = !DILocation(line: 97, column: 15, scope: !4613)
!4623 = !DILocalVariable(name: "codes", scope: !4613, file: !908, line: 98, type: !4624)
!4624 = !DICompositeType(tag: DW_TAG_array_type, baseType: !897, size: 32768, align: 32, elements: !4620)
!4625 = !DILocation(line: 98, column: 14, scope: !4613)
!4626 = !DILocalVariable(name: "bits", scope: !4613, file: !908, line: 99, type: !4627)
!4627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !901, size: 8192, align: 8, elements: !4620)
!4628 = !DILocation(line: 99, column: 13, scope: !4613)
!4629 = !DILocalVariable(name: "syms", scope: !4613, file: !908, line: 100, type: !4630)
!4630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !904, size: 16384, align: 16, elements: !4620)
!4631 = !DILocation(line: 100, column: 14, scope: !4613)
!4632 = !DILocalVariable(name: "code", scope: !4613, file: !908, line: 101, type: !897)
!4633 = !DILocation(line: 101, column: 14, scope: !4613)
!4634 = !DILocalVariable(name: "i", scope: !4613, file: !908, line: 102, type: !889)
!4635 = !DILocation(line: 102, column: 9, scope: !4613)
!4636 = !DILocation(line: 104, column: 12, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4613, file: !908, line: 104, column: 5)
!4638 = !DILocation(line: 104, column: 10, scope: !4637)
!4639 = !DILocation(line: 104, column: 17, scope: !4640)
!4640 = !DILexicalBlockFile(scope: !4641, file: !908, discriminator: 1)
!4641 = distinct !DILexicalBlock(scope: !4637, file: !908, line: 104, column: 5)
!4642 = !DILocation(line: 104, column: 19, scope: !4640)
!4643 = !DILocation(line: 104, column: 5, scope: !4640)
!4644 = !DILocation(line: 105, column: 28, scope: !4645)
!4645 = distinct !DILexicalBlock(scope: !4641, file: !908, line: 104, column: 32)
!4646 = !DILocation(line: 105, column: 26, scope: !4645)
!4647 = !DILocation(line: 105, column: 21, scope: !4645)
!4648 = !DILocation(line: 105, column: 12, scope: !4645)
!4649 = !DILocation(line: 105, column: 9, scope: !4645)
!4650 = !DILocation(line: 105, column: 15, scope: !4645)
!4651 = !DILocation(line: 105, column: 19, scope: !4645)
!4652 = !DILocation(line: 106, column: 25, scope: !4645)
!4653 = !DILocation(line: 106, column: 21, scope: !4645)
!4654 = !DILocation(line: 106, column: 12, scope: !4645)
!4655 = !DILocation(line: 106, column: 9, scope: !4645)
!4656 = !DILocation(line: 106, column: 15, scope: !4645)
!4657 = !DILocation(line: 106, column: 19, scope: !4645)
!4658 = !DILocation(line: 107, column: 17, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !4645, file: !908, line: 107, column: 13)
!4660 = !DILocation(line: 107, column: 13, scope: !4659)
!4661 = !DILocation(line: 107, column: 20, scope: !4659)
!4662 = !DILocation(line: 107, column: 25, scope: !4659)
!4663 = !DILocation(line: 107, column: 32, scope: !4664)
!4664 = !DILexicalBlockFile(scope: !4659, file: !908, discriminator: 1)
!4665 = !DILocation(line: 107, column: 28, scope: !4664)
!4666 = !DILocation(line: 107, column: 35, scope: !4664)
!4667 = !DILocation(line: 107, column: 13, scope: !4664)
!4668 = !DILocation(line: 108, column: 13, scope: !4659)
!4669 = !DILocation(line: 109, column: 5, scope: !4645)
!4670 = !DILocation(line: 104, column: 28, scope: !4671)
!4671 = !DILexicalBlockFile(scope: !4641, file: !908, discriminator: 2)
!4672 = !DILocation(line: 104, column: 5, scope: !4671)
!4673 = distinct !{!4673, !4674}
!4674 = !DILocation(line: 104, column: 5, scope: !4613)
!4675 = !DILocation(line: 110, column: 5, scope: !4613)
!4676 = distinct !{!4676, !4675}
!4677 = !DILocalVariable(name: "stack", scope: !4678, file: !908, line: 110, type: !3200)
!4678 = distinct !DILexicalBlock(scope: !4613, file: !908, line: 110, column: 8)
!4679 = !DILocation(line: 110, column: 16, scope: !4678)
!4680 = !DILocalVariable(name: "sp", scope: !4678, file: !908, line: 110, type: !889)
!4681 = !DILocation(line: 110, column: 34, scope: !4678)
!4682 = !DILocation(line: 110, column: 34, scope: !4683)
!4683 = !DILexicalBlockFile(scope: !4678, file: !908, discriminator: 1)
!4684 = !DILocation(line: 110, column: 55, scope: !4683)
!4685 = !DILocation(line: 110, column: 41, scope: !4683)
!4686 = !DILocation(line: 110, column: 53, scope: !4683)
!4687 = !DILocation(line: 110, column: 73, scope: !4683)
!4688 = !DILocation(line: 110, column: 77, scope: !4683)
!4689 = !DILocation(line: 110, column: 84, scope: !4683)
!4690 = !DILocation(line: 110, column: 59, scope: !4683)
!4691 = !DILocation(line: 110, column: 71, scope: !4683)
!4692 = !DILocation(line: 110, column: 88, scope: !4683)
!4693 = !DILocation(line: 110, column: 94, scope: !4694)
!4694 = !DILexicalBlockFile(scope: !4678, file: !908, discriminator: 2)
!4695 = !DILocation(line: 110, column: 88, scope: !4694)
!4696 = !DILocalVariable(name: "start", scope: !4697, file: !908, line: 110, type: !3222)
!4697 = distinct !DILexicalBlock(scope: !4678, file: !908, line: 110, column: 97)
!4698 = !DILocation(line: 110, column: 110, scope: !4697)
!4699 = !DILocation(line: 110, column: 123, scope: !4700)
!4700 = !DILexicalBlockFile(scope: !4697, file: !908, discriminator: 3)
!4701 = !DILocation(line: 110, column: 117, scope: !4700)
!4702 = !DILocation(line: 110, column: 110, scope: !4700)
!4703 = !DILocalVariable(name: "end", scope: !4697, file: !908, line: 110, type: !3222)
!4704 = !DILocation(line: 110, column: 144, scope: !4697)
!4705 = !DILocation(line: 110, column: 157, scope: !4700)
!4706 = !DILocation(line: 110, column: 150, scope: !4700)
!4707 = !DILocation(line: 110, column: 144, scope: !4700)
!4708 = !DILocation(line: 110, column: 165, scope: !4700)
!4709 = !DILocation(line: 110, column: 171, scope: !4710)
!4710 = !DILexicalBlockFile(scope: !4697, file: !908, discriminator: 4)
!4711 = !DILocation(line: 110, column: 179, scope: !4710)
!4712 = !DILocation(line: 110, column: 177, scope: !4710)
!4713 = !DILocation(line: 110, column: 165, scope: !4710)
!4714 = !DILocation(line: 110, column: 188, scope: !4715)
!4715 = !DILexicalBlockFile(scope: !4716, file: !908, discriminator: 5)
!4716 = distinct !DILexicalBlock(scope: !4717, file: !908, line: 110, column: 188)
!4717 = distinct !DILexicalBlock(scope: !4697, file: !908, line: 110, column: 183)
!4718 = !DILocation(line: 110, column: 196, scope: !4715)
!4719 = !DILocation(line: 110, column: 199, scope: !4715)
!4720 = !DILocation(line: 110, column: 194, scope: !4715)
!4721 = !DILocalVariable(name: "checksort", scope: !4722, file: !908, line: 110, type: !889)
!4722 = distinct !DILexicalBlock(scope: !4716, file: !908, line: 110, column: 203)
!4723 = !DILocation(line: 110, column: 209, scope: !4722)
!4724 = !DILocation(line: 110, column: 209, scope: !4725)
!4725 = !DILexicalBlockFile(scope: !4722, file: !908, discriminator: 6)
!4726 = !DILocalVariable(name: "right", scope: !4722, file: !908, line: 110, type: !3222)
!4727 = !DILocation(line: 110, column: 233, scope: !4722)
!4728 = !DILocation(line: 110, column: 241, scope: !4725)
!4729 = !DILocation(line: 110, column: 244, scope: !4725)
!4730 = !DILocation(line: 110, column: 233, scope: !4725)
!4731 = !DILocalVariable(name: "left", scope: !4722, file: !908, line: 110, type: !3222)
!4732 = !DILocation(line: 110, column: 259, scope: !4722)
!4733 = !DILocation(line: 110, column: 266, scope: !4725)
!4734 = !DILocation(line: 110, column: 271, scope: !4725)
!4735 = !DILocation(line: 110, column: 259, scope: !4725)
!4736 = !DILocalVariable(name: "mid", scope: !4722, file: !908, line: 110, type: !3222)
!4737 = !DILocation(line: 110, column: 286, scope: !4722)
!4738 = !DILocation(line: 110, column: 292, scope: !4725)
!4739 = !DILocation(line: 110, column: 302, scope: !4725)
!4740 = !DILocation(line: 110, column: 306, scope: !4725)
!4741 = !DILocation(line: 110, column: 305, scope: !4725)
!4742 = !DILocation(line: 110, column: 312, scope: !4725)
!4743 = !DILocation(line: 110, column: 298, scope: !4725)
!4744 = !DILocation(line: 110, column: 286, scope: !4725)
!4745 = !DILocation(line: 110, column: 336, scope: !4725)
!4746 = !DILocation(line: 110, column: 343, scope: !4725)
!4747 = !DILocation(line: 110, column: 321, scope: !4725)
!4748 = !DILocation(line: 110, column: 348, scope: !4725)
!4749 = !DILocation(line: 110, column: 374, scope: !4750)
!4750 = !DILexicalBlockFile(scope: !4751, file: !908, discriminator: 7)
!4751 = distinct !DILexicalBlock(scope: !4752, file: !908, line: 110, column: 358)
!4752 = distinct !DILexicalBlock(scope: !4753, file: !908, line: 110, column: 353)
!4753 = distinct !DILexicalBlock(scope: !4722, file: !908, line: 110, column: 321)
!4754 = !DILocation(line: 110, column: 379, scope: !4750)
!4755 = !DILocation(line: 110, column: 358, scope: !4750)
!4756 = !DILocation(line: 110, column: 384, scope: !4750)
!4757 = !DILocation(line: 110, column: 389, scope: !4758)
!4758 = !DILexicalBlockFile(scope: !4751, file: !908, discriminator: 8)
!4759 = distinct !{!4759, !4760}
!4760 = !DILocation(line: 110, column: 389, scope: !4751)
!4761 = !DILocalVariable(name: "SWAP_tmp", scope: !4762, file: !908, line: 110, type: !3136)
!4762 = distinct !DILexicalBlock(scope: !4751, file: !908, line: 110, column: 391)
!4763 = !DILocation(line: 110, column: 402, scope: !4762)
!4764 = !DILocation(line: 110, column: 413, scope: !4765)
!4765 = !DILexicalBlockFile(scope: !4762, file: !908, discriminator: 9)
!4766 = !DILocation(line: 110, column: 412, scope: !4765)
!4767 = !DILocation(line: 110, column: 419, scope: !4765)
!4768 = !DILocation(line: 110, column: 425, scope: !4765)
!4769 = !DILocation(line: 110, column: 424, scope: !4765)
!4770 = !DILocation(line: 110, column: 424, scope: !4771)
!4771 = !DILexicalBlockFile(scope: !4765, file: !908, discriminator: 69)
!4772 = !DILocation(line: 110, column: 433, scope: !4765)
!4773 = !DILocation(line: 110, column: 440, scope: !4765)
!4774 = !DILocation(line: 110, column: 440, scope: !4775)
!4775 = !DILexicalBlockFile(scope: !4765, file: !908, discriminator: 70)
!4776 = !DILocation(line: 110, column: 449, scope: !4765)
!4777 = !DILocation(line: 110, column: 449, scope: !4778)
!4778 = !DILexicalBlockFile(scope: !4762, file: !908, discriminator: 10)
!4779 = !DILocation(line: 110, column: 465, scope: !4780)
!4780 = !DILexicalBlockFile(scope: !4751, file: !908, discriminator: 11)
!4781 = distinct !{!4781, !4782}
!4782 = !DILocation(line: 110, column: 465, scope: !4751)
!4783 = !DILocalVariable(name: "SWAP_tmp", scope: !4784, file: !908, line: 110, type: !3136)
!4784 = distinct !DILexicalBlock(scope: !4751, file: !908, line: 110, column: 467)
!4785 = !DILocation(line: 110, column: 478, scope: !4784)
!4786 = !DILocation(line: 110, column: 489, scope: !4787)
!4787 = !DILexicalBlockFile(scope: !4784, file: !908, discriminator: 12)
!4788 = !DILocation(line: 110, column: 488, scope: !4787)
!4789 = !DILocation(line: 110, column: 495, scope: !4787)
!4790 = !DILocation(line: 110, column: 501, scope: !4787)
!4791 = !DILocation(line: 110, column: 500, scope: !4787)
!4792 = !DILocation(line: 110, column: 500, scope: !4793)
!4793 = !DILexicalBlockFile(scope: !4787, file: !908, discriminator: 71)
!4794 = !DILocation(line: 110, column: 509, scope: !4787)
!4795 = !DILocation(line: 110, column: 516, scope: !4787)
!4796 = !DILocation(line: 110, column: 516, scope: !4797)
!4797 = !DILexicalBlockFile(scope: !4787, file: !908, discriminator: 72)
!4798 = !DILocation(line: 110, column: 525, scope: !4787)
!4799 = !DILocation(line: 110, column: 536, scope: !4800)
!4800 = !DILexicalBlockFile(scope: !4752, file: !908, discriminator: 13)
!4801 = !DILocation(line: 110, column: 561, scope: !4802)
!4802 = !DILexicalBlockFile(scope: !4803, file: !908, discriminator: 14)
!4803 = distinct !DILexicalBlock(scope: !4804, file: !908, line: 110, column: 546)
!4804 = distinct !DILexicalBlock(scope: !4753, file: !908, line: 110, column: 541)
!4805 = !DILocation(line: 110, column: 568, scope: !4802)
!4806 = !DILocation(line: 110, column: 546, scope: !4802)
!4807 = !DILocation(line: 110, column: 573, scope: !4802)
!4808 = !DILocation(line: 110, column: 578, scope: !4809)
!4809 = !DILexicalBlockFile(scope: !4803, file: !908, discriminator: 15)
!4810 = distinct !{!4810, !4811}
!4811 = !DILocation(line: 110, column: 578, scope: !4803)
!4812 = !DILocalVariable(name: "SWAP_tmp", scope: !4813, file: !908, line: 110, type: !3136)
!4813 = distinct !DILexicalBlock(scope: !4803, file: !908, line: 110, column: 580)
!4814 = !DILocation(line: 110, column: 591, scope: !4813)
!4815 = !DILocation(line: 110, column: 602, scope: !4816)
!4816 = !DILexicalBlockFile(scope: !4813, file: !908, discriminator: 16)
!4817 = !DILocation(line: 110, column: 601, scope: !4816)
!4818 = !DILocation(line: 110, column: 608, scope: !4816)
!4819 = !DILocation(line: 110, column: 614, scope: !4816)
!4820 = !DILocation(line: 110, column: 613, scope: !4816)
!4821 = !DILocation(line: 110, column: 613, scope: !4822)
!4822 = !DILexicalBlockFile(scope: !4816, file: !908, discriminator: 73)
!4823 = !DILocation(line: 110, column: 622, scope: !4816)
!4824 = !DILocation(line: 110, column: 629, scope: !4816)
!4825 = !DILocation(line: 110, column: 629, scope: !4826)
!4826 = !DILexicalBlockFile(scope: !4816, file: !908, discriminator: 74)
!4827 = !DILocation(line: 110, column: 638, scope: !4816)
!4828 = !DILocation(line: 110, column: 638, scope: !4829)
!4829 = !DILexicalBlockFile(scope: !4813, file: !908, discriminator: 17)
!4830 = !DILocation(line: 110, column: 663, scope: !4831)
!4831 = !DILexicalBlockFile(scope: !4803, file: !908, discriminator: 18)
!4832 = !DILocation(line: 110, column: 688, scope: !4833)
!4833 = !DILexicalBlockFile(scope: !4834, file: !908, discriminator: 19)
!4834 = distinct !DILexicalBlock(scope: !4722, file: !908, line: 110, column: 673)
!4835 = !DILocation(line: 110, column: 693, scope: !4833)
!4836 = !DILocation(line: 110, column: 673, scope: !4833)
!4837 = !DILocation(line: 110, column: 698, scope: !4833)
!4838 = !DILocation(line: 110, column: 704, scope: !4839)
!4839 = !DILexicalBlockFile(scope: !4840, file: !908, discriminator: 20)
!4840 = distinct !DILexicalBlock(scope: !4834, file: !908, line: 110, column: 702)
!4841 = distinct !{!4841, !4842}
!4842 = !DILocation(line: 110, column: 704, scope: !4840)
!4843 = !DILocalVariable(name: "SWAP_tmp", scope: !4844, file: !908, line: 110, type: !3136)
!4844 = distinct !DILexicalBlock(scope: !4840, file: !908, line: 110, column: 706)
!4845 = !DILocation(line: 110, column: 717, scope: !4844)
!4846 = !DILocation(line: 110, column: 728, scope: !4847)
!4847 = !DILexicalBlockFile(scope: !4844, file: !908, discriminator: 21)
!4848 = !DILocation(line: 110, column: 727, scope: !4847)
!4849 = !DILocation(line: 110, column: 734, scope: !4847)
!4850 = !DILocation(line: 110, column: 740, scope: !4847)
!4851 = !DILocation(line: 110, column: 739, scope: !4847)
!4852 = !DILocation(line: 110, column: 739, scope: !4853)
!4853 = !DILexicalBlockFile(scope: !4847, file: !908, discriminator: 75)
!4854 = !DILocation(line: 110, column: 746, scope: !4847)
!4855 = !DILocation(line: 110, column: 751, scope: !4847)
!4856 = !DILocation(line: 110, column: 751, scope: !4857)
!4857 = !DILexicalBlockFile(scope: !4847, file: !908, discriminator: 76)
!4858 = !DILocation(line: 110, column: 760, scope: !4847)
!4859 = !DILocation(line: 110, column: 780, scope: !4860)
!4860 = !DILexicalBlockFile(scope: !4840, file: !908, discriminator: 22)
!4861 = !DILocation(line: 110, column: 784, scope: !4860)
!4862 = !DILocation(line: 110, column: 789, scope: !4863)
!4863 = !DILexicalBlockFile(scope: !4864, file: !908, discriminator: 23)
!4864 = distinct !DILexicalBlock(scope: !4722, file: !908, line: 110, column: 789)
!4865 = !DILocation(line: 110, column: 798, scope: !4863)
!4866 = !DILocation(line: 110, column: 801, scope: !4863)
!4867 = !DILocation(line: 110, column: 795, scope: !4863)
!4868 = !DILocation(line: 110, column: 805, scope: !4869)
!4869 = !DILexicalBlockFile(scope: !4864, file: !908, discriminator: 24)
!4870 = !DILocation(line: 110, column: 812, scope: !4871)
!4871 = !DILexicalBlockFile(scope: !4722, file: !908, discriminator: 25)
!4872 = distinct !{!4872, !4873}
!4873 = !DILocation(line: 110, column: 812, scope: !4722)
!4874 = !DILocalVariable(name: "SWAP_tmp", scope: !4875, file: !908, line: 110, type: !3136)
!4875 = distinct !DILexicalBlock(scope: !4722, file: !908, line: 110, column: 814)
!4876 = !DILocation(line: 110, column: 825, scope: !4875)
!4877 = !DILocation(line: 110, column: 836, scope: !4878)
!4878 = !DILexicalBlockFile(scope: !4875, file: !908, discriminator: 26)
!4879 = !DILocation(line: 110, column: 835, scope: !4878)
!4880 = !DILocation(line: 110, column: 842, scope: !4878)
!4881 = !DILocation(line: 110, column: 847, scope: !4878)
!4882 = !DILocation(line: 110, column: 847, scope: !4883)
!4883 = !DILexicalBlockFile(scope: !4878, file: !908, discriminator: 77)
!4884 = !DILocation(line: 110, column: 856, scope: !4878)
!4885 = !DILocation(line: 110, column: 865, scope: !4878)
!4886 = !DILocation(line: 110, column: 865, scope: !4887)
!4887 = !DILexicalBlockFile(scope: !4878, file: !908, discriminator: 78)
!4888 = !DILocation(line: 110, column: 874, scope: !4878)
!4889 = !DILocation(line: 110, column: 885, scope: !4890)
!4890 = !DILexicalBlockFile(scope: !4722, file: !908, discriminator: 27)
!4891 = !DILocation(line: 110, column: 891, scope: !4892)
!4892 = !DILexicalBlockFile(scope: !4722, file: !908, discriminator: 28)
!4893 = !DILocation(line: 110, column: 899, scope: !4892)
!4894 = !DILocation(line: 110, column: 896, scope: !4892)
!4895 = !DILocation(line: 110, column: 885, scope: !4892)
!4896 = !DILocation(line: 110, column: 907, scope: !4897)
!4897 = !DILexicalBlockFile(scope: !4898, file: !908, discriminator: 29)
!4898 = distinct !DILexicalBlock(scope: !4722, file: !908, line: 110, column: 905)
!4899 = !DILocation(line: 110, column: 913, scope: !4900)
!4900 = !DILexicalBlockFile(scope: !4898, file: !908, discriminator: 30)
!4901 = !DILocation(line: 110, column: 919, scope: !4900)
!4902 = !DILocation(line: 110, column: 917, scope: !4900)
!4903 = !DILocation(line: 110, column: 925, scope: !4900)
!4904 = !DILocation(line: 110, column: 943, scope: !4905)
!4905 = !DILexicalBlockFile(scope: !4898, file: !908, discriminator: 31)
!4906 = !DILocation(line: 110, column: 949, scope: !4905)
!4907 = !DILocation(line: 110, column: 952, scope: !4905)
!4908 = !DILocation(line: 110, column: 928, scope: !4905)
!4909 = !DILocation(line: 110, column: 956, scope: !4905)
!4910 = !DILocation(line: 110, column: 907, scope: !4911)
!4911 = !DILexicalBlockFile(scope: !4898, file: !908, discriminator: 32)
!4912 = !DILocation(line: 110, column: 965, scope: !4913)
!4913 = !DILexicalBlockFile(scope: !4898, file: !908, discriminator: 33)
!4914 = !DILocation(line: 110, column: 907, scope: !4913)
!4915 = distinct !{!4915, !4916}
!4916 = !DILocation(line: 110, column: 907, scope: !4898)
!4917 = !DILocation(line: 110, column: 969, scope: !4918)
!4918 = !DILexicalBlockFile(scope: !4898, file: !908, discriminator: 34)
!4919 = !DILocation(line: 110, column: 975, scope: !4920)
!4920 = !DILexicalBlockFile(scope: !4898, file: !908, discriminator: 35)
!4921 = !DILocation(line: 110, column: 981, scope: !4920)
!4922 = !DILocation(line: 110, column: 979, scope: !4920)
!4923 = !DILocation(line: 110, column: 987, scope: !4920)
!4924 = !DILocation(line: 110, column: 1005, scope: !4925)
!4925 = !DILexicalBlockFile(scope: !4898, file: !908, discriminator: 36)
!4926 = !DILocation(line: 110, column: 1012, scope: !4925)
!4927 = !DILocation(line: 110, column: 1015, scope: !4925)
!4928 = !DILocation(line: 110, column: 990, scope: !4925)
!4929 = !DILocation(line: 110, column: 1019, scope: !4925)
!4930 = !DILocation(line: 110, column: 969, scope: !4931)
!4931 = !DILexicalBlockFile(scope: !4898, file: !908, discriminator: 37)
!4932 = !DILocation(line: 110, column: 1029, scope: !4933)
!4933 = !DILexicalBlockFile(scope: !4898, file: !908, discriminator: 38)
!4934 = !DILocation(line: 110, column: 969, scope: !4933)
!4935 = distinct !{!4935, !4936}
!4936 = !DILocation(line: 110, column: 969, scope: !4898)
!4937 = !DILocation(line: 110, column: 1036, scope: !4938)
!4938 = !DILexicalBlockFile(scope: !4939, file: !908, discriminator: 39)
!4939 = distinct !DILexicalBlock(scope: !4898, file: !908, line: 110, column: 1036)
!4940 = !DILocation(line: 110, column: 1044, scope: !4938)
!4941 = !DILocation(line: 110, column: 1041, scope: !4938)
!4942 = !DILocation(line: 110, column: 1052, scope: !4943)
!4943 = !DILexicalBlockFile(scope: !4944, file: !908, discriminator: 40)
!4944 = distinct !DILexicalBlock(scope: !4939, file: !908, line: 110, column: 1050)
!4945 = distinct !{!4945, !4946}
!4946 = !DILocation(line: 110, column: 1052, scope: !4944)
!4947 = !DILocalVariable(name: "SWAP_tmp", scope: !4948, file: !908, line: 110, type: !3136)
!4948 = distinct !DILexicalBlock(scope: !4944, file: !908, line: 110, column: 1054)
!4949 = !DILocation(line: 110, column: 1065, scope: !4948)
!4950 = !DILocation(line: 110, column: 1076, scope: !4951)
!4951 = !DILexicalBlockFile(scope: !4948, file: !908, discriminator: 41)
!4952 = !DILocation(line: 110, column: 1075, scope: !4951)
!4953 = !DILocation(line: 110, column: 1084, scope: !4951)
!4954 = !DILocation(line: 110, column: 1092, scope: !4951)
!4955 = !DILocation(line: 110, column: 1091, scope: !4951)
!4956 = !DILocation(line: 110, column: 1091, scope: !4957)
!4957 = !DILexicalBlockFile(scope: !4951, file: !908, discriminator: 79)
!4958 = !DILocation(line: 110, column: 1099, scope: !4951)
!4959 = !DILocation(line: 110, column: 1105, scope: !4951)
!4960 = !DILocation(line: 110, column: 1105, scope: !4961)
!4961 = !DILexicalBlockFile(scope: !4951, file: !908, discriminator: 80)
!4962 = !DILocation(line: 110, column: 1114, scope: !4951)
!4963 = !DILocation(line: 110, column: 1129, scope: !4964)
!4964 = !DILexicalBlockFile(scope: !4944, file: !908, discriminator: 42)
!4965 = !DILocation(line: 110, column: 1138, scope: !4964)
!4966 = !DILocation(line: 110, column: 1142, scope: !4964)
!4967 = !DILocation(line: 110, column: 885, scope: !4968)
!4968 = !DILexicalBlockFile(scope: !4722, file: !908, discriminator: 43)
!4969 = distinct !{!4969, !4970}
!4970 = !DILocation(line: 110, column: 885, scope: !4722)
!4971 = !DILocation(line: 110, column: 1146, scope: !4972)
!4972 = !DILexicalBlockFile(scope: !4722, file: !908, discriminator: 44)
!4973 = distinct !{!4973, !4974}
!4974 = !DILocation(line: 110, column: 1146, scope: !4722)
!4975 = !DILocalVariable(name: "SWAP_tmp", scope: !4976, file: !908, line: 110, type: !3136)
!4976 = distinct !DILexicalBlock(scope: !4722, file: !908, line: 110, column: 1148)
!4977 = !DILocation(line: 110, column: 1159, scope: !4976)
!4978 = !DILocation(line: 110, column: 1170, scope: !4979)
!4979 = !DILexicalBlockFile(scope: !4976, file: !908, discriminator: 45)
!4980 = !DILocation(line: 110, column: 1169, scope: !4979)
!4981 = !DILocation(line: 110, column: 1177, scope: !4979)
!4982 = !DILocation(line: 110, column: 1183, scope: !4979)
!4983 = !DILocation(line: 110, column: 1183, scope: !4984)
!4984 = !DILexicalBlockFile(scope: !4979, file: !908, discriminator: 81)
!4985 = !DILocation(line: 110, column: 1192, scope: !4979)
!4986 = !DILocation(line: 110, column: 1201, scope: !4979)
!4987 = !DILocation(line: 110, column: 1201, scope: !4988)
!4988 = !DILexicalBlockFile(scope: !4979, file: !908, discriminator: 82)
!4989 = !DILocation(line: 110, column: 1210, scope: !4979)
!4990 = !DILocation(line: 110, column: 1224, scope: !4991)
!4991 = !DILexicalBlockFile(scope: !4992, file: !908, discriminator: 46)
!4992 = distinct !DILexicalBlock(scope: !4722, file: !908, line: 110, column: 1224)
!4993 = !DILocation(line: 110, column: 1234, scope: !4991)
!4994 = !DILocation(line: 110, column: 1238, scope: !4995)
!4995 = !DILexicalBlockFile(scope: !4992, file: !908, discriminator: 47)
!4996 = !DILocation(line: 110, column: 1245, scope: !4995)
!4997 = !DILocation(line: 110, column: 1249, scope: !4995)
!4998 = !DILocation(line: 110, column: 1242, scope: !4995)
!4999 = !DILocation(line: 110, column: 1252, scope: !4995)
!5000 = !DILocation(line: 110, column: 1255, scope: !5001)
!5001 = !DILexicalBlockFile(scope: !4992, file: !908, discriminator: 48)
!5002 = !DILocation(line: 110, column: 1262, scope: !5001)
!5003 = !DILocation(line: 110, column: 1259, scope: !5001)
!5004 = !DILocation(line: 110, column: 1224, scope: !5001)
!5005 = !DILocation(line: 110, column: 1275, scope: !5006)
!5006 = !DILexicalBlockFile(scope: !5007, file: !908, discriminator: 49)
!5007 = distinct !DILexicalBlock(scope: !4992, file: !908, line: 110, column: 1268)
!5008 = !DILocation(line: 110, column: 1273, scope: !5006)
!5009 = !DILocation(line: 110, column: 1282, scope: !5006)
!5010 = !DILocation(line: 110, column: 1288, scope: !5011)
!5011 = !DILexicalBlockFile(scope: !5007, file: !908, discriminator: 50)
!5012 = !DILocation(line: 110, column: 1292, scope: !5011)
!5013 = !DILocation(line: 110, column: 1291, scope: !5011)
!5014 = !DILocation(line: 110, column: 1296, scope: !5011)
!5015 = !DILocation(line: 110, column: 1314, scope: !5016)
!5016 = !DILexicalBlockFile(scope: !5007, file: !908, discriminator: 51)
!5017 = !DILocation(line: 110, column: 1319, scope: !5016)
!5018 = !DILocation(line: 110, column: 1322, scope: !5016)
!5019 = !DILocation(line: 110, column: 1299, scope: !5016)
!5020 = !DILocation(line: 110, column: 1326, scope: !5016)
!5021 = !DILocation(line: 110, column: 1282, scope: !5022)
!5022 = !DILexicalBlockFile(scope: !5007, file: !908, discriminator: 52)
!5023 = !DILocation(line: 110, column: 1335, scope: !5024)
!5024 = !DILexicalBlockFile(scope: !5007, file: !908, discriminator: 53)
!5025 = !DILocation(line: 110, column: 1282, scope: !5024)
!5026 = distinct !{!5026, !5027}
!5027 = !DILocation(line: 110, column: 1282, scope: !5007)
!5028 = !DILocation(line: 110, column: 1342, scope: !5029)
!5029 = !DILexicalBlockFile(scope: !5030, file: !908, discriminator: 54)
!5030 = distinct !DILexicalBlock(scope: !5007, file: !908, line: 110, column: 1342)
!5031 = !DILocation(line: 110, column: 1347, scope: !5029)
!5032 = !DILocation(line: 110, column: 1345, scope: !5029)
!5033 = !DILocation(line: 110, column: 1352, scope: !5034)
!5034 = !DILexicalBlockFile(scope: !5030, file: !908, discriminator: 55)
!5035 = !DILocation(line: 110, column: 1359, scope: !5036)
!5036 = !DILexicalBlockFile(scope: !5007, file: !908, discriminator: 56)
!5037 = !DILocation(line: 110, column: 1364, scope: !5038)
!5038 = !DILexicalBlockFile(scope: !5039, file: !908, discriminator: 57)
!5039 = distinct !DILexicalBlock(scope: !4722, file: !908, line: 110, column: 1364)
!5040 = !DILocation(line: 110, column: 1368, scope: !5038)
!5041 = !DILocation(line: 110, column: 1367, scope: !5038)
!5042 = !DILocation(line: 110, column: 1375, scope: !5038)
!5043 = !DILocation(line: 110, column: 1380, scope: !5038)
!5044 = !DILocation(line: 110, column: 1379, scope: !5038)
!5045 = !DILocation(line: 110, column: 1373, scope: !5038)
!5046 = !DILocation(line: 110, column: 1403, scope: !5047)
!5047 = !DILexicalBlockFile(scope: !5048, file: !908, discriminator: 58)
!5048 = distinct !DILexicalBlock(scope: !5039, file: !908, line: 110, column: 1386)
!5049 = !DILocation(line: 110, column: 1394, scope: !5047)
!5050 = !DILocation(line: 110, column: 1388, scope: !5047)
!5051 = !DILocation(line: 110, column: 1401, scope: !5047)
!5052 = !DILocation(line: 110, column: 1426, scope: !5047)
!5053 = !DILocation(line: 110, column: 1418, scope: !5047)
!5054 = !DILocation(line: 110, column: 1410, scope: !5047)
!5055 = !DILocation(line: 110, column: 1424, scope: !5047)
!5056 = !DILocation(line: 110, column: 1441, scope: !5047)
!5057 = !DILocation(line: 110, column: 1445, scope: !5047)
!5058 = !DILocation(line: 110, column: 1439, scope: !5047)
!5059 = !DILocation(line: 110, column: 1449, scope: !5047)
!5060 = !DILocation(line: 110, column: 1471, scope: !5061)
!5061 = !DILexicalBlockFile(scope: !5062, file: !908, discriminator: 59)
!5062 = distinct !DILexicalBlock(scope: !5039, file: !908, line: 110, column: 1454)
!5063 = !DILocation(line: 110, column: 1475, scope: !5061)
!5064 = !DILocation(line: 110, column: 1462, scope: !5061)
!5065 = !DILocation(line: 110, column: 1456, scope: !5061)
!5066 = !DILocation(line: 110, column: 1469, scope: !5061)
!5067 = !DILocation(line: 110, column: 1495, scope: !5061)
!5068 = !DILocation(line: 110, column: 1487, scope: !5061)
!5069 = !DILocation(line: 110, column: 1479, scope: !5061)
!5070 = !DILocation(line: 110, column: 1493, scope: !5061)
!5071 = !DILocation(line: 110, column: 1506, scope: !5061)
!5072 = !DILocation(line: 110, column: 1504, scope: !5061)
!5073 = !DILocation(line: 110, column: 1515, scope: !5074)
!5074 = !DILexicalBlockFile(scope: !4722, file: !908, discriminator: 60)
!5075 = !DILocation(line: 110, column: 1540, scope: !5076)
!5076 = !DILexicalBlockFile(scope: !5077, file: !908, discriminator: 61)
!5077 = distinct !DILexicalBlock(scope: !5078, file: !908, line: 110, column: 1525)
!5078 = distinct !DILexicalBlock(scope: !4716, file: !908, line: 110, column: 1520)
!5079 = !DILocation(line: 110, column: 1547, scope: !5076)
!5080 = !DILocation(line: 110, column: 1525, scope: !5076)
!5081 = !DILocation(line: 110, column: 1552, scope: !5076)
!5082 = !DILocation(line: 110, column: 1557, scope: !5083)
!5083 = !DILexicalBlockFile(scope: !5077, file: !908, discriminator: 62)
!5084 = distinct !{!5084, !5085}
!5085 = !DILocation(line: 110, column: 1557, scope: !5077)
!5086 = !DILocalVariable(name: "SWAP_tmp", scope: !5087, file: !908, line: 110, type: !3136)
!5087 = distinct !DILexicalBlock(scope: !5077, file: !908, line: 110, column: 1559)
!5088 = !DILocation(line: 110, column: 1570, scope: !5087)
!5089 = !DILocation(line: 110, column: 1581, scope: !5090)
!5090 = !DILexicalBlockFile(scope: !5087, file: !908, discriminator: 63)
!5091 = !DILocation(line: 110, column: 1580, scope: !5090)
!5092 = !DILocation(line: 110, column: 1587, scope: !5090)
!5093 = !DILocation(line: 110, column: 1593, scope: !5090)
!5094 = !DILocation(line: 110, column: 1592, scope: !5090)
!5095 = !DILocation(line: 110, column: 1592, scope: !5096)
!5096 = !DILexicalBlockFile(scope: !5090, file: !908, discriminator: 83)
!5097 = !DILocation(line: 110, column: 1601, scope: !5090)
!5098 = !DILocation(line: 110, column: 1608, scope: !5090)
!5099 = !DILocation(line: 110, column: 1608, scope: !5100)
!5100 = !DILexicalBlockFile(scope: !5090, file: !908, discriminator: 84)
!5101 = !DILocation(line: 110, column: 1617, scope: !5090)
!5102 = !DILocation(line: 110, column: 1617, scope: !5103)
!5103 = !DILexicalBlockFile(scope: !5087, file: !908, discriminator: 64)
!5104 = !DILocation(line: 110, column: 1628, scope: !5105)
!5105 = !DILexicalBlockFile(scope: !5078, file: !908, discriminator: 65)
!5106 = !DILocation(line: 110, column: 165, scope: !5107)
!5107 = !DILexicalBlockFile(scope: !4697, file: !908, discriminator: 66)
!5108 = distinct !{!5108, !5109}
!5109 = !DILocation(line: 110, column: 165, scope: !4697)
!5110 = !DILocation(line: 110, column: 88, scope: !5111)
!5111 = !DILexicalBlockFile(scope: !4678, file: !908, discriminator: 67)
!5112 = distinct !{!5112, !5113}
!5113 = !DILocation(line: 110, column: 88, scope: !4678)
!5114 = !DILocation(line: 110, column: 1640, scope: !5115)
!5115 = !DILexicalBlockFile(scope: !4678, file: !908, discriminator: 68)
!5116 = !DILocation(line: 112, column: 10, scope: !4613)
!5117 = !DILocation(line: 113, column: 12, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !4613, file: !908, line: 113, column: 5)
!5119 = !DILocation(line: 113, column: 10, scope: !5118)
!5120 = !DILocation(line: 113, column: 20, scope: !5121)
!5121 = !DILexicalBlockFile(scope: !5122, file: !908, discriminator: 1)
!5122 = distinct !DILexicalBlock(scope: !5118, file: !908, line: 113, column: 5)
!5123 = !DILocation(line: 113, column: 22, scope: !5121)
!5124 = !DILocation(line: 113, column: 5, scope: !5121)
!5125 = !DILocation(line: 114, column: 20, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5122, file: !908, line: 113, column: 33)
!5127 = !DILocation(line: 114, column: 37, scope: !5126)
!5128 = !DILocation(line: 114, column: 34, scope: !5126)
!5129 = !DILocation(line: 114, column: 40, scope: !5126)
!5130 = !DILocation(line: 114, column: 32, scope: !5126)
!5131 = !DILocation(line: 114, column: 25, scope: !5126)
!5132 = !DILocation(line: 114, column: 15, scope: !5126)
!5133 = !DILocation(line: 114, column: 9, scope: !5126)
!5134 = !DILocation(line: 114, column: 18, scope: !5126)
!5135 = !DILocation(line: 115, column: 22, scope: !5126)
!5136 = !DILocation(line: 115, column: 19, scope: !5126)
!5137 = !DILocation(line: 115, column: 25, scope: !5126)
!5138 = !DILocation(line: 115, column: 14, scope: !5126)
!5139 = !DILocation(line: 115, column: 9, scope: !5126)
!5140 = !DILocation(line: 115, column: 17, scope: !5126)
!5141 = !DILocation(line: 116, column: 22, scope: !5126)
!5142 = !DILocation(line: 116, column: 19, scope: !5126)
!5143 = !DILocation(line: 116, column: 25, scope: !5126)
!5144 = !DILocation(line: 116, column: 14, scope: !5126)
!5145 = !DILocation(line: 116, column: 9, scope: !5126)
!5146 = !DILocation(line: 116, column: 17, scope: !5126)
!5147 = !DILocation(line: 117, column: 36, scope: !5126)
!5148 = !DILocation(line: 117, column: 33, scope: !5126)
!5149 = !DILocation(line: 117, column: 39, scope: !5126)
!5150 = !DILocation(line: 117, column: 43, scope: !5126)
!5151 = !DILocation(line: 117, column: 29, scope: !5126)
!5152 = !DILocation(line: 117, column: 14, scope: !5126)
!5153 = !DILocation(line: 118, column: 5, scope: !5126)
!5154 = !DILocation(line: 113, column: 29, scope: !5155)
!5155 = !DILexicalBlockFile(scope: !5122, file: !908, discriminator: 2)
!5156 = !DILocation(line: 113, column: 5, scope: !5155)
!5157 = distinct !{!5157, !5158}
!5158 = !DILocation(line: 113, column: 5, scope: !4613)
!5159 = !DILocation(line: 120, column: 17, scope: !4613)
!5160 = !DILocation(line: 120, column: 5, scope: !4613)
!5161 = !DILocation(line: 121, column: 31, scope: !4613)
!5162 = !DILocation(line: 121, column: 38, scope: !4613)
!5163 = !DILocation(line: 121, column: 47, scope: !4613)
!5164 = !DILocation(line: 121, column: 37, scope: !4613)
!5165 = !DILocation(line: 121, column: 52, scope: !4613)
!5166 = !DILocation(line: 121, column: 37, scope: !5167)
!5167 = !DILexicalBlockFile(scope: !4613, file: !908, discriminator: 1)
!5168 = !DILocation(line: 121, column: 69, scope: !5169)
!5169 = !DILexicalBlockFile(scope: !4613, file: !908, discriminator: 2)
!5170 = !DILocation(line: 121, column: 78, scope: !5169)
!5171 = !DILocation(line: 121, column: 68, scope: !5169)
!5172 = !DILocation(line: 121, column: 37, scope: !5169)
!5173 = !DILocation(line: 121, column: 37, scope: !5174)
!5174 = !DILexicalBlockFile(scope: !4613, file: !908, discriminator: 3)
!5175 = !DILocation(line: 122, column: 31, scope: !4613)
!5176 = !DILocation(line: 123, column: 31, scope: !4613)
!5177 = !DILocation(line: 124, column: 31, scope: !4613)
!5178 = !DILocation(line: 121, column: 12, scope: !5174)
!5179 = !DILocation(line: 121, column: 5, scope: !5174)
!5180 = !DILocation(line: 125, column: 1, scope: !4613)
!5181 = distinct !DISubprogram(name: "magy_decode_slice10", scope: !908, file: !908, line: 212, type: !1694, isLocal: true, isDefinition: true, scopeLine: 214, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1635)
!5182 = !DILocation(line: 66, column: 98, scope: !3708, inlinedAt: !5183)
!5183 = distinct !DILocation(line: 788, column: 601, scope: !3714, inlinedAt: !5184)
!5184 = distinct !DILocation(line: 258, column: 27, scope: !5185)
!5185 = distinct !DILexicalBlock(scope: !5186, file: !908, line: 253, column: 45)
!5186 = distinct !DILexicalBlock(scope: !5187, file: !908, line: 253, column: 17)
!5187 = distinct !DILexicalBlock(scope: !5188, file: !908, line: 253, column: 17)
!5188 = distinct !DILexicalBlock(scope: !5189, file: !908, line: 252, column: 42)
!5189 = distinct !DILexicalBlock(scope: !5190, file: !908, line: 252, column: 13)
!5190 = distinct !DILexicalBlock(scope: !5191, file: !908, line: 252, column: 13)
!5191 = distinct !DILexicalBlock(scope: !5192, file: !908, line: 251, column: 16)
!5192 = distinct !DILexicalBlock(scope: !5193, file: !908, line: 242, column: 13)
!5193 = distinct !DILexicalBlock(scope: !5194, file: !908, line: 224, column: 37)
!5194 = distinct !DILexicalBlock(scope: !5195, file: !908, line: 224, column: 5)
!5195 = distinct !DILexicalBlock(scope: !5181, file: !908, line: 224, column: 5)
!5196 = !DILocation(line: 66, column: 98, scope: !3708, inlinedAt: !5197)
!5197 = distinct !DILocation(line: 788, column: 259, scope: !3738, inlinedAt: !5184)
!5198 = !DILocation(line: 66, column: 98, scope: !3708, inlinedAt: !5199)
!5199 = distinct !DILocation(line: 786, column: 16, scope: !3720, inlinedAt: !5184)
!5200 = !DILocation(line: 762, column: 74, scope: !3720, inlinedAt: !5184)
!5201 = !DILocation(line: 762, column: 87, scope: !3720, inlinedAt: !5184)
!5202 = !DILocation(line: 763, column: 42, scope: !3720, inlinedAt: !5184)
!5203 = !DILocation(line: 763, column: 52, scope: !3720, inlinedAt: !5184)
!5204 = !DILocation(line: 783, column: 9, scope: !3720, inlinedAt: !5184)
!5205 = !DILocation(line: 785, column: 18, scope: !3720, inlinedAt: !5184)
!5206 = !DILocation(line: 785, column: 78, scope: !3720, inlinedAt: !5184)
!5207 = !DILocation(line: 785, column: 101, scope: !3720, inlinedAt: !5184)
!5208 = !DILocation(line: 788, column: 14, scope: !3719, inlinedAt: !5184)
!5209 = !DILocation(line: 788, column: 17, scope: !3719, inlinedAt: !5184)
!5210 = !DILocation(line: 788, column: 39, scope: !3719, inlinedAt: !5184)
!5211 = !DILocalVariable(name: "avctx", arg: 1, scope: !5181, file: !908, line: 212, type: !1001)
!5212 = !DILocation(line: 212, column: 48, scope: !5181)
!5213 = !DILocalVariable(name: "tdata", arg: 2, scope: !5181, file: !908, line: 212, type: !890)
!5214 = !DILocation(line: 212, column: 61, scope: !5181)
!5215 = !DILocalVariable(name: "j", arg: 3, scope: !5181, file: !908, line: 213, type: !889)
!5216 = !DILocation(line: 213, column: 36, scope: !5181)
!5217 = !DILocalVariable(name: "threadnr", arg: 4, scope: !5181, file: !908, line: 213, type: !889)
!5218 = !DILocation(line: 213, column: 43, scope: !5181)
!5219 = !DILocalVariable(name: "s", scope: !5181, file: !908, line: 215, type: !1640)
!5220 = !DILocation(line: 215, column: 22, scope: !5181)
!5221 = !DILocation(line: 215, column: 26, scope: !5181)
!5222 = !DILocation(line: 215, column: 33, scope: !5181)
!5223 = !DILocalVariable(name: "interlaced", scope: !5181, file: !908, line: 216, type: !889)
!5224 = !DILocation(line: 216, column: 9, scope: !5181)
!5225 = !DILocation(line: 216, column: 22, scope: !5181)
!5226 = !DILocation(line: 216, column: 25, scope: !5181)
!5227 = !DILocalVariable(name: "bps", scope: !5181, file: !908, line: 217, type: !934)
!5228 = !DILocation(line: 217, column: 15, scope: !5181)
!5229 = !DILocation(line: 217, column: 21, scope: !5181)
!5230 = !DILocation(line: 217, column: 24, scope: !5181)
!5231 = !DILocalVariable(name: "max", scope: !5181, file: !908, line: 218, type: !934)
!5232 = !DILocation(line: 218, column: 15, scope: !5181)
!5233 = !DILocation(line: 218, column: 21, scope: !5181)
!5234 = !DILocation(line: 218, column: 24, scope: !5181)
!5235 = !DILocation(line: 218, column: 28, scope: !5181)
!5236 = !DILocalVariable(name: "p", scope: !5181, file: !908, line: 219, type: !1023)
!5237 = !DILocation(line: 219, column: 14, scope: !5181)
!5238 = !DILocation(line: 219, column: 18, scope: !5181)
!5239 = !DILocation(line: 219, column: 21, scope: !5181)
!5240 = !DILocalVariable(name: "i", scope: !5181, file: !908, line: 220, type: !889)
!5241 = !DILocation(line: 220, column: 9, scope: !5181)
!5242 = !DILocalVariable(name: "k", scope: !5181, file: !908, line: 220, type: !889)
!5243 = !DILocation(line: 220, column: 12, scope: !5181)
!5244 = !DILocalVariable(name: "x", scope: !5181, file: !908, line: 220, type: !889)
!5245 = !DILocation(line: 220, column: 15, scope: !5181)
!5246 = !DILocalVariable(name: "gb", scope: !5181, file: !908, line: 221, type: !1944)
!5247 = !DILocation(line: 221, column: 19, scope: !5181)
!5248 = !DILocalVariable(name: "dst", scope: !5181, file: !908, line: 222, type: !903)
!5249 = !DILocation(line: 222, column: 15, scope: !5181)
!5250 = !DILocation(line: 224, column: 12, scope: !5195)
!5251 = !DILocation(line: 224, column: 10, scope: !5195)
!5252 = !DILocation(line: 224, column: 17, scope: !5253)
!5253 = !DILexicalBlockFile(scope: !5194, file: !908, discriminator: 1)
!5254 = !DILocation(line: 224, column: 21, scope: !5253)
!5255 = !DILocation(line: 224, column: 24, scope: !5253)
!5256 = !DILocation(line: 224, column: 19, scope: !5253)
!5257 = !DILocation(line: 224, column: 5, scope: !5253)
!5258 = !DILocalVariable(name: "left", scope: !5193, file: !908, line: 225, type: !889)
!5259 = !DILocation(line: 225, column: 13, scope: !5193)
!5260 = !DILocalVariable(name: "lefttop", scope: !5193, file: !908, line: 225, type: !889)
!5261 = !DILocation(line: 225, column: 19, scope: !5193)
!5262 = !DILocalVariable(name: "top", scope: !5193, file: !908, line: 225, type: !889)
!5263 = !DILocation(line: 225, column: 28, scope: !5193)
!5264 = !DILocalVariable(name: "height", scope: !5193, file: !908, line: 226, type: !889)
!5265 = !DILocation(line: 226, column: 13, scope: !5193)
!5266 = !DILocation(line: 226, column: 68, scope: !5193)
!5267 = !DILocation(line: 226, column: 71, scope: !5193)
!5268 = !DILocation(line: 226, column: 88, scope: !5193)
!5269 = !DILocation(line: 226, column: 95, scope: !5193)
!5270 = !DILocation(line: 226, column: 110, scope: !5193)
!5271 = !DILocation(line: 226, column: 114, scope: !5193)
!5272 = !DILocation(line: 226, column: 117, scope: !5193)
!5273 = !DILocation(line: 226, column: 112, scope: !5193)
!5274 = !DILocation(line: 226, column: 108, scope: !5193)
!5275 = !DILocation(line: 226, column: 85, scope: !5193)
!5276 = !DILocation(line: 226, column: 67, scope: !5193)
!5277 = !DILocation(line: 226, column: 134, scope: !5278)
!5278 = !DILexicalBlockFile(scope: !5193, file: !908, discriminator: 1)
!5279 = !DILocation(line: 226, column: 141, scope: !5278)
!5280 = !DILocation(line: 226, column: 156, scope: !5278)
!5281 = !DILocation(line: 226, column: 160, scope: !5278)
!5282 = !DILocation(line: 226, column: 163, scope: !5278)
!5283 = !DILocation(line: 226, column: 158, scope: !5278)
!5284 = !DILocation(line: 226, column: 154, scope: !5278)
!5285 = !DILocation(line: 226, column: 67, scope: !5278)
!5286 = !DILocation(line: 226, column: 180, scope: !5287)
!5287 = !DILexicalBlockFile(scope: !5193, file: !908, discriminator: 2)
!5288 = !DILocation(line: 226, column: 183, scope: !5287)
!5289 = !DILocation(line: 226, column: 67, scope: !5287)
!5290 = !DILocation(line: 226, column: 67, scope: !5291)
!5291 = !DILexicalBlockFile(scope: !5193, file: !908, discriminator: 3)
!5292 = !DILocation(line: 226, column: 64, scope: !5291)
!5293 = !DILocation(line: 226, column: 214, scope: !5291)
!5294 = !DILocation(line: 226, column: 204, scope: !5291)
!5295 = !DILocation(line: 226, column: 207, scope: !5291)
!5296 = !DILocation(line: 226, column: 200, scope: !5291)
!5297 = !DILocation(line: 226, column: 61, scope: !5291)
!5298 = !DILocation(line: 226, column: 13, scope: !5291)
!5299 = !DILocalVariable(name: "width", scope: !5193, file: !908, line: 227, type: !889)
!5300 = !DILocation(line: 227, column: 13, scope: !5193)
!5301 = !DILocation(line: 227, column: 65, scope: !5193)
!5302 = !DILocation(line: 227, column: 72, scope: !5193)
!5303 = !DILocation(line: 227, column: 63, scope: !5193)
!5304 = !DILocation(line: 227, column: 100, scope: !5193)
!5305 = !DILocation(line: 227, column: 90, scope: !5193)
!5306 = !DILocation(line: 227, column: 93, scope: !5193)
!5307 = !DILocation(line: 227, column: 86, scope: !5193)
!5308 = !DILocation(line: 227, column: 60, scope: !5193)
!5309 = !DILocalVariable(name: "sheight", scope: !5193, file: !908, line: 228, type: !889)
!5310 = !DILocation(line: 228, column: 13, scope: !5193)
!5311 = !DILocation(line: 228, column: 67, scope: !5193)
!5312 = !DILocation(line: 228, column: 70, scope: !5193)
!5313 = !DILocation(line: 228, column: 65, scope: !5193)
!5314 = !DILocation(line: 228, column: 99, scope: !5193)
!5315 = !DILocation(line: 228, column: 89, scope: !5193)
!5316 = !DILocation(line: 228, column: 92, scope: !5193)
!5317 = !DILocation(line: 228, column: 85, scope: !5193)
!5318 = !DILocation(line: 228, column: 62, scope: !5193)
!5319 = !DILocalVariable(name: "fake_stride", scope: !5193, file: !908, line: 229, type: !1705)
!5320 = !DILocation(line: 229, column: 19, scope: !5193)
!5321 = !DILocation(line: 229, column: 46, scope: !5193)
!5322 = !DILocation(line: 229, column: 34, scope: !5193)
!5323 = !DILocation(line: 229, column: 37, scope: !5193)
!5324 = !DILocation(line: 229, column: 49, scope: !5193)
!5325 = !DILocation(line: 229, column: 61, scope: !5193)
!5326 = !DILocation(line: 229, column: 59, scope: !5193)
!5327 = !DILocation(line: 229, column: 54, scope: !5193)
!5328 = !DILocation(line: 229, column: 33, scope: !5193)
!5329 = !DILocalVariable(name: "stride", scope: !5193, file: !908, line: 230, type: !1705)
!5330 = !DILocation(line: 230, column: 19, scope: !5193)
!5331 = !DILocation(line: 230, column: 40, scope: !5193)
!5332 = !DILocation(line: 230, column: 28, scope: !5193)
!5333 = !DILocation(line: 230, column: 31, scope: !5193)
!5334 = !DILocation(line: 230, column: 43, scope: !5193)
!5335 = !DILocalVariable(name: "flags", scope: !5193, file: !908, line: 231, type: !889)
!5336 = !DILocation(line: 231, column: 13, scope: !5193)
!5337 = !DILocalVariable(name: "pred", scope: !5193, file: !908, line: 231, type: !889)
!5338 = !DILocation(line: 231, column: 20, scope: !5193)
!5339 = !DILocalVariable(name: "ret", scope: !5193, file: !908, line: 232, type: !889)
!5340 = !DILocation(line: 232, column: 13, scope: !5193)
!5341 = !DILocation(line: 232, column: 39, scope: !5193)
!5342 = !DILocation(line: 232, column: 42, scope: !5193)
!5343 = !DILocation(line: 232, column: 61, scope: !5193)
!5344 = !DILocation(line: 232, column: 48, scope: !5193)
!5345 = !DILocation(line: 232, column: 58, scope: !5193)
!5346 = !DILocation(line: 232, column: 51, scope: !5193)
!5347 = !DILocation(line: 232, column: 64, scope: !5193)
!5348 = !DILocation(line: 232, column: 46, scope: !5193)
!5349 = !DILocation(line: 233, column: 47, scope: !5193)
!5350 = !DILocation(line: 233, column: 34, scope: !5193)
!5351 = !DILocation(line: 233, column: 44, scope: !5193)
!5352 = !DILocation(line: 233, column: 37, scope: !5193)
!5353 = !DILocation(line: 233, column: 50, scope: !5193)
!5354 = !DILocation(line: 232, column: 19, scope: !5193)
!5355 = !DILocation(line: 235, column: 13, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5193, file: !908, line: 235, column: 13)
!5357 = !DILocation(line: 235, column: 17, scope: !5356)
!5358 = !DILocation(line: 235, column: 13, scope: !5193)
!5359 = !DILocation(line: 236, column: 20, scope: !5356)
!5360 = !DILocation(line: 236, column: 13, scope: !5356)
!5361 = !DILocation(line: 238, column: 17, scope: !5193)
!5362 = !DILocation(line: 238, column: 15, scope: !5193)
!5363 = !DILocation(line: 239, column: 16, scope: !5193)
!5364 = !DILocation(line: 239, column: 14, scope: !5193)
!5365 = !DILocation(line: 241, column: 35, scope: !5193)
!5366 = !DILocation(line: 241, column: 27, scope: !5193)
!5367 = !DILocation(line: 241, column: 30, scope: !5193)
!5368 = !DILocation(line: 241, column: 15, scope: !5193)
!5369 = !DILocation(line: 241, column: 40, scope: !5193)
!5370 = !DILocation(line: 241, column: 44, scope: !5193)
!5371 = !DILocation(line: 241, column: 42, scope: !5193)
!5372 = !DILocation(line: 241, column: 54, scope: !5193)
!5373 = !DILocation(line: 241, column: 52, scope: !5193)
!5374 = !DILocation(line: 241, column: 38, scope: !5193)
!5375 = !DILocation(line: 241, column: 13, scope: !5193)
!5376 = !DILocation(line: 242, column: 13, scope: !5192)
!5377 = !DILocation(line: 242, column: 19, scope: !5192)
!5378 = !DILocation(line: 242, column: 13, scope: !5193)
!5379 = !DILocation(line: 243, column: 17, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5381, file: !908, line: 243, column: 17)
!5381 = distinct !DILexicalBlock(scope: !5192, file: !908, line: 242, column: 24)
!5382 = !DILocation(line: 243, column: 38, scope: !5380)
!5383 = !DILocation(line: 243, column: 44, scope: !5380)
!5384 = !DILocation(line: 243, column: 42, scope: !5380)
!5385 = !DILocation(line: 243, column: 52, scope: !5380)
!5386 = !DILocation(line: 243, column: 50, scope: !5380)
!5387 = !DILocation(line: 243, column: 36, scope: !5380)
!5388 = !DILocation(line: 243, column: 17, scope: !5381)
!5389 = !DILocation(line: 244, column: 17, scope: !5380)
!5390 = !DILocation(line: 245, column: 20, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5381, file: !908, line: 245, column: 13)
!5392 = !DILocation(line: 245, column: 18, scope: !5391)
!5393 = !DILocation(line: 245, column: 25, scope: !5394)
!5394 = !DILexicalBlockFile(scope: !5395, file: !908, discriminator: 1)
!5395 = distinct !DILexicalBlock(scope: !5391, file: !908, line: 245, column: 13)
!5396 = !DILocation(line: 245, column: 29, scope: !5394)
!5397 = !DILocation(line: 245, column: 27, scope: !5394)
!5398 = !DILocation(line: 245, column: 13, scope: !5394)
!5399 = !DILocation(line: 246, column: 24, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !5401, file: !908, line: 246, column: 17)
!5401 = distinct !DILexicalBlock(scope: !5395, file: !908, line: 245, column: 42)
!5402 = !DILocation(line: 246, column: 22, scope: !5400)
!5403 = !DILocation(line: 246, column: 29, scope: !5404)
!5404 = !DILexicalBlockFile(scope: !5405, file: !908, discriminator: 1)
!5405 = distinct !DILexicalBlock(scope: !5400, file: !908, line: 246, column: 17)
!5406 = !DILocation(line: 246, column: 33, scope: !5404)
!5407 = !DILocation(line: 246, column: 31, scope: !5404)
!5408 = !DILocation(line: 246, column: 17, scope: !5404)
!5409 = !DILocation(line: 247, column: 44, scope: !5405)
!5410 = !DILocation(line: 247, column: 30, scope: !5405)
!5411 = !DILocation(line: 247, column: 25, scope: !5405)
!5412 = !DILocation(line: 247, column: 21, scope: !5405)
!5413 = !DILocation(line: 247, column: 28, scope: !5405)
!5414 = !DILocation(line: 246, column: 41, scope: !5415)
!5415 = !DILexicalBlockFile(scope: !5405, file: !908, discriminator: 2)
!5416 = !DILocation(line: 246, column: 17, scope: !5415)
!5417 = distinct !{!5417, !5418}
!5418 = !DILocation(line: 246, column: 17, scope: !5401)
!5419 = !DILocation(line: 249, column: 24, scope: !5401)
!5420 = !DILocation(line: 249, column: 21, scope: !5401)
!5421 = !DILocation(line: 250, column: 13, scope: !5401)
!5422 = !DILocation(line: 245, column: 38, scope: !5423)
!5423 = !DILexicalBlockFile(scope: !5395, file: !908, discriminator: 2)
!5424 = !DILocation(line: 245, column: 13, scope: !5423)
!5425 = distinct !{!5425, !5426}
!5426 = !DILocation(line: 245, column: 13, scope: !5381)
!5427 = !DILocation(line: 251, column: 9, scope: !5381)
!5428 = !DILocation(line: 252, column: 20, scope: !5190)
!5429 = !DILocation(line: 252, column: 18, scope: !5190)
!5430 = !DILocation(line: 252, column: 25, scope: !5431)
!5431 = !DILexicalBlockFile(scope: !5189, file: !908, discriminator: 1)
!5432 = !DILocation(line: 252, column: 29, scope: !5431)
!5433 = !DILocation(line: 252, column: 27, scope: !5431)
!5434 = !DILocation(line: 252, column: 13, scope: !5431)
!5435 = !DILocation(line: 253, column: 24, scope: !5187)
!5436 = !DILocation(line: 253, column: 22, scope: !5187)
!5437 = !DILocation(line: 253, column: 29, scope: !5438)
!5438 = !DILexicalBlockFile(scope: !5186, file: !908, discriminator: 1)
!5439 = !DILocation(line: 253, column: 33, scope: !5438)
!5440 = !DILocation(line: 253, column: 31, scope: !5438)
!5441 = !DILocation(line: 253, column: 17, scope: !5438)
!5442 = !DILocalVariable(name: "pix", scope: !5185, file: !908, line: 254, type: !889)
!5443 = !DILocation(line: 254, column: 25, scope: !5185)
!5444 = !DILocation(line: 255, column: 25, scope: !5445)
!5445 = distinct !DILexicalBlock(scope: !5185, file: !908, line: 255, column: 25)
!5446 = !DILocation(line: 255, column: 44, scope: !5445)
!5447 = !DILocation(line: 255, column: 25, scope: !5185)
!5448 = !DILocation(line: 256, column: 25, scope: !5445)
!5449 = !DILocation(line: 258, column: 48, scope: !5185)
!5450 = !DILocation(line: 258, column: 41, scope: !5185)
!5451 = !DILocation(line: 258, column: 44, scope: !5185)
!5452 = !DILocation(line: 258, column: 51, scope: !5185)
!5453 = !DILocation(line: 258, column: 65, scope: !5185)
!5454 = !DILocation(line: 258, column: 58, scope: !5185)
!5455 = !DILocation(line: 258, column: 61, scope: !5185)
!5456 = !DILocation(line: 258, column: 68, scope: !5185)
!5457 = !DILocation(line: 258, column: 27, scope: !5185)
!5458 = !DILocation(line: 785, column: 30, scope: !3720, inlinedAt: !5184)
!5459 = !DILocation(line: 785, column: 34, scope: !3720, inlinedAt: !5184)
!5460 = !DILocation(line: 785, column: 118, scope: !3720, inlinedAt: !5184)
!5461 = !DILocation(line: 785, column: 122, scope: !3720, inlinedAt: !5184)
!5462 = !DILocation(line: 786, column: 60, scope: !3720, inlinedAt: !5184)
!5463 = !DILocation(line: 786, column: 64, scope: !3720, inlinedAt: !5184)
!5464 = !DILocation(line: 786, column: 74, scope: !3720, inlinedAt: !5184)
!5465 = !DILocation(line: 786, column: 83, scope: !3720, inlinedAt: !5184)
!5466 = !DILocation(line: 786, column: 71, scope: !3720, inlinedAt: !5184)
!5467 = !DILocation(line: 786, column: 92, scope: !3720, inlinedAt: !5184)
!5468 = !DILocation(line: 786, column: 16, scope: !3720, inlinedAt: !5184)
!5469 = !DILocation(line: 68, column: 16, scope: !3708, inlinedAt: !5199)
!5470 = !DILocation(line: 68, column: 19, scope: !3708, inlinedAt: !5199)
!5471 = !DILocation(line: 68, column: 24, scope: !3708, inlinedAt: !5199)
!5472 = !DILocation(line: 68, column: 38, scope: !3708, inlinedAt: !5199)
!5473 = !DILocation(line: 68, column: 41, scope: !3708, inlinedAt: !5199)
!5474 = !DILocation(line: 68, column: 46, scope: !3708, inlinedAt: !5199)
!5475 = !DILocation(line: 68, column: 34, scope: !3708, inlinedAt: !5199)
!5476 = !DILocation(line: 68, column: 57, scope: !3708, inlinedAt: !5199)
!5477 = !DILocation(line: 68, column: 69, scope: !3708, inlinedAt: !5199)
!5478 = !DILocation(line: 68, column: 72, scope: !3708, inlinedAt: !5199)
!5479 = !DILocation(line: 68, column: 79, scope: !3708, inlinedAt: !5199)
!5480 = !DILocation(line: 68, column: 84, scope: !3708, inlinedAt: !5199)
!5481 = !DILocation(line: 68, column: 99, scope: !3708, inlinedAt: !5199)
!5482 = !DILocation(line: 68, column: 102, scope: !3708, inlinedAt: !5199)
!5483 = !DILocation(line: 68, column: 109, scope: !3708, inlinedAt: !5199)
!5484 = !DILocation(line: 68, column: 114, scope: !3708, inlinedAt: !5199)
!5485 = !DILocation(line: 68, column: 94, scope: !3708, inlinedAt: !5199)
!5486 = !DILocation(line: 68, column: 63, scope: !3708, inlinedAt: !5199)
!5487 = !DILocation(line: 786, column: 100, scope: !3720, inlinedAt: !5184)
!5488 = !DILocation(line: 786, column: 109, scope: !3720, inlinedAt: !5184)
!5489 = !DILocation(line: 786, column: 96, scope: !3720, inlinedAt: !5184)
!5490 = !DILocation(line: 786, column: 14, scope: !3720, inlinedAt: !5184)
!5491 = !DILocation(line: 788, column: 64, scope: !4031, inlinedAt: !5184)
!5492 = !DILocation(line: 788, column: 74, scope: !4031, inlinedAt: !5184)
!5493 = !DILocation(line: 788, column: 54, scope: !4031, inlinedAt: !5184)
!5494 = !DILocation(line: 788, column: 52, scope: !4031, inlinedAt: !5184)
!5495 = !DILocation(line: 788, column: 94, scope: !4031, inlinedAt: !5184)
!5496 = !DILocation(line: 788, column: 88, scope: !4031, inlinedAt: !5184)
!5497 = !DILocation(line: 788, column: 86, scope: !4031, inlinedAt: !5184)
!5498 = !DILocation(line: 788, column: 115, scope: !4031, inlinedAt: !5184)
!5499 = !DILocation(line: 788, column: 109, scope: !4031, inlinedAt: !5184)
!5500 = !DILocation(line: 788, column: 107, scope: !4031, inlinedAt: !5184)
!5501 = !DILocation(line: 788, column: 130, scope: !4031, inlinedAt: !5184)
!5502 = !DILocation(line: 788, column: 140, scope: !4031, inlinedAt: !5184)
!5503 = !DILocation(line: 788, column: 144, scope: !4031, inlinedAt: !5184)
!5504 = !DILocation(line: 788, column: 147, scope: !4045, inlinedAt: !5184)
!5505 = !DILocation(line: 788, column: 149, scope: !4045, inlinedAt: !5184)
!5506 = !DILocation(line: 788, column: 130, scope: !4045, inlinedAt: !5184)
!5507 = !DILocation(line: 788, column: 169, scope: !4049, inlinedAt: !5184)
!5508 = !DILocation(line: 788, column: 187, scope: !4049, inlinedAt: !5184)
!5509 = !DILocation(line: 788, column: 199, scope: !4049, inlinedAt: !5184)
!5510 = !DILocation(line: 788, column: 196, scope: !4049, inlinedAt: !5184)
!5511 = !DILocation(line: 788, column: 184, scope: !4049, inlinedAt: !5184)
!5512 = !DILocation(line: 788, column: 168, scope: !4049, inlinedAt: !5184)
!5513 = !DILocation(line: 788, column: 209, scope: !4056, inlinedAt: !5184)
!5514 = !DILocation(line: 788, column: 221, scope: !4056, inlinedAt: !5184)
!5515 = !DILocation(line: 788, column: 218, scope: !4056, inlinedAt: !5184)
!5516 = !DILocation(line: 788, column: 168, scope: !4056, inlinedAt: !5184)
!5517 = !DILocation(line: 788, column: 231, scope: !4061, inlinedAt: !5184)
!5518 = !DILocation(line: 788, column: 168, scope: !4061, inlinedAt: !5184)
!5519 = !DILocation(line: 788, column: 168, scope: !3738, inlinedAt: !5184)
!5520 = !DILocation(line: 788, column: 165, scope: !3738, inlinedAt: !5184)
!5521 = !DILocation(line: 788, column: 303, scope: !3738, inlinedAt: !5184)
!5522 = !DILocation(line: 788, column: 307, scope: !3738, inlinedAt: !5184)
!5523 = !DILocation(line: 788, column: 317, scope: !3738, inlinedAt: !5184)
!5524 = !DILocation(line: 788, column: 326, scope: !3738, inlinedAt: !5184)
!5525 = !DILocation(line: 788, column: 314, scope: !3738, inlinedAt: !5184)
!5526 = !DILocation(line: 788, column: 335, scope: !3738, inlinedAt: !5184)
!5527 = !DILocation(line: 788, column: 259, scope: !3738, inlinedAt: !5184)
!5528 = !DILocation(line: 68, column: 16, scope: !3708, inlinedAt: !5197)
!5529 = !DILocation(line: 68, column: 19, scope: !3708, inlinedAt: !5197)
!5530 = !DILocation(line: 68, column: 24, scope: !3708, inlinedAt: !5197)
!5531 = !DILocation(line: 68, column: 38, scope: !3708, inlinedAt: !5197)
!5532 = !DILocation(line: 68, column: 41, scope: !3708, inlinedAt: !5197)
!5533 = !DILocation(line: 68, column: 46, scope: !3708, inlinedAt: !5197)
!5534 = !DILocation(line: 68, column: 34, scope: !3708, inlinedAt: !5197)
!5535 = !DILocation(line: 68, column: 57, scope: !3708, inlinedAt: !5197)
!5536 = !DILocation(line: 68, column: 69, scope: !3708, inlinedAt: !5197)
!5537 = !DILocation(line: 68, column: 72, scope: !3708, inlinedAt: !5197)
!5538 = !DILocation(line: 68, column: 79, scope: !3708, inlinedAt: !5197)
!5539 = !DILocation(line: 68, column: 84, scope: !3708, inlinedAt: !5197)
!5540 = !DILocation(line: 68, column: 99, scope: !3708, inlinedAt: !5197)
!5541 = !DILocation(line: 68, column: 102, scope: !3708, inlinedAt: !5197)
!5542 = !DILocation(line: 68, column: 109, scope: !3708, inlinedAt: !5197)
!5543 = !DILocation(line: 68, column: 114, scope: !3708, inlinedAt: !5197)
!5544 = !DILocation(line: 68, column: 94, scope: !3708, inlinedAt: !5197)
!5545 = !DILocation(line: 68, column: 63, scope: !3708, inlinedAt: !5197)
!5546 = !DILocation(line: 788, column: 343, scope: !3738, inlinedAt: !5184)
!5547 = !DILocation(line: 788, column: 352, scope: !3738, inlinedAt: !5184)
!5548 = !DILocation(line: 788, column: 339, scope: !3738, inlinedAt: !5184)
!5549 = !DILocation(line: 788, column: 257, scope: !3738, inlinedAt: !5184)
!5550 = !DILocation(line: 788, column: 369, scope: !3738, inlinedAt: !5184)
!5551 = !DILocation(line: 788, column: 368, scope: !3738, inlinedAt: !5184)
!5552 = !DILocation(line: 788, column: 366, scope: !3738, inlinedAt: !5184)
!5553 = !DILocation(line: 788, column: 390, scope: !3738, inlinedAt: !5184)
!5554 = !DILocation(line: 788, column: 400, scope: !3738, inlinedAt: !5184)
!5555 = !DILocation(line: 788, column: 380, scope: !4100, inlinedAt: !5184)
!5556 = !DILocation(line: 788, column: 411, scope: !3738, inlinedAt: !5184)
!5557 = !DILocation(line: 788, column: 409, scope: !3738, inlinedAt: !5184)
!5558 = !DILocation(line: 788, column: 378, scope: !3738, inlinedAt: !5184)
!5559 = !DILocation(line: 788, column: 430, scope: !3738, inlinedAt: !5184)
!5560 = !DILocation(line: 788, column: 424, scope: !3738, inlinedAt: !5184)
!5561 = !DILocation(line: 788, column: 422, scope: !3738, inlinedAt: !5184)
!5562 = !DILocation(line: 788, column: 451, scope: !3738, inlinedAt: !5184)
!5563 = !DILocation(line: 788, column: 445, scope: !3738, inlinedAt: !5184)
!5564 = !DILocation(line: 788, column: 443, scope: !3738, inlinedAt: !5184)
!5565 = !DILocation(line: 788, column: 466, scope: !3738, inlinedAt: !5184)
!5566 = !DILocation(line: 788, column: 476, scope: !3738, inlinedAt: !5184)
!5567 = !DILocation(line: 788, column: 480, scope: !3738, inlinedAt: !5184)
!5568 = !DILocation(line: 788, column: 483, scope: !4114, inlinedAt: !5184)
!5569 = !DILocation(line: 788, column: 485, scope: !4114, inlinedAt: !5184)
!5570 = !DILocation(line: 788, column: 466, scope: !4114, inlinedAt: !5184)
!5571 = !DILocation(line: 788, column: 505, scope: !4118, inlinedAt: !5184)
!5572 = !DILocation(line: 788, column: 523, scope: !4118, inlinedAt: !5184)
!5573 = !DILocation(line: 788, column: 535, scope: !4118, inlinedAt: !5184)
!5574 = !DILocation(line: 788, column: 532, scope: !4118, inlinedAt: !5184)
!5575 = !DILocation(line: 788, column: 520, scope: !4118, inlinedAt: !5184)
!5576 = !DILocation(line: 788, column: 504, scope: !4118, inlinedAt: !5184)
!5577 = !DILocation(line: 788, column: 548, scope: !4125, inlinedAt: !5184)
!5578 = !DILocation(line: 788, column: 560, scope: !4125, inlinedAt: !5184)
!5579 = !DILocation(line: 788, column: 557, scope: !4125, inlinedAt: !5184)
!5580 = !DILocation(line: 788, column: 504, scope: !4125, inlinedAt: !5184)
!5581 = !DILocation(line: 788, column: 573, scope: !4130, inlinedAt: !5184)
!5582 = !DILocation(line: 788, column: 504, scope: !4130, inlinedAt: !5184)
!5583 = !DILocation(line: 788, column: 504, scope: !3714, inlinedAt: !5184)
!5584 = !DILocation(line: 788, column: 501, scope: !3714, inlinedAt: !5184)
!5585 = !DILocation(line: 788, column: 645, scope: !3714, inlinedAt: !5184)
!5586 = !DILocation(line: 788, column: 649, scope: !3714, inlinedAt: !5184)
!5587 = !DILocation(line: 788, column: 659, scope: !3714, inlinedAt: !5184)
!5588 = !DILocation(line: 788, column: 668, scope: !3714, inlinedAt: !5184)
!5589 = !DILocation(line: 788, column: 656, scope: !3714, inlinedAt: !5184)
!5590 = !DILocation(line: 788, column: 677, scope: !3714, inlinedAt: !5184)
!5591 = !DILocation(line: 788, column: 601, scope: !3714, inlinedAt: !5184)
!5592 = !DILocation(line: 68, column: 16, scope: !3708, inlinedAt: !5183)
!5593 = !DILocation(line: 68, column: 19, scope: !3708, inlinedAt: !5183)
!5594 = !DILocation(line: 68, column: 24, scope: !3708, inlinedAt: !5183)
!5595 = !DILocation(line: 68, column: 38, scope: !3708, inlinedAt: !5183)
!5596 = !DILocation(line: 68, column: 41, scope: !3708, inlinedAt: !5183)
!5597 = !DILocation(line: 68, column: 46, scope: !3708, inlinedAt: !5183)
!5598 = !DILocation(line: 68, column: 34, scope: !3708, inlinedAt: !5183)
!5599 = !DILocation(line: 68, column: 57, scope: !3708, inlinedAt: !5183)
!5600 = !DILocation(line: 68, column: 69, scope: !3708, inlinedAt: !5183)
!5601 = !DILocation(line: 68, column: 72, scope: !3708, inlinedAt: !5183)
!5602 = !DILocation(line: 68, column: 79, scope: !3708, inlinedAt: !5183)
!5603 = !DILocation(line: 68, column: 84, scope: !3708, inlinedAt: !5183)
!5604 = !DILocation(line: 68, column: 99, scope: !3708, inlinedAt: !5183)
!5605 = !DILocation(line: 68, column: 102, scope: !3708, inlinedAt: !5183)
!5606 = !DILocation(line: 68, column: 109, scope: !3708, inlinedAt: !5183)
!5607 = !DILocation(line: 68, column: 114, scope: !3708, inlinedAt: !5183)
!5608 = !DILocation(line: 68, column: 94, scope: !3708, inlinedAt: !5183)
!5609 = !DILocation(line: 68, column: 63, scope: !3708, inlinedAt: !5183)
!5610 = !DILocation(line: 788, column: 685, scope: !3714, inlinedAt: !5184)
!5611 = !DILocation(line: 788, column: 694, scope: !3714, inlinedAt: !5184)
!5612 = !DILocation(line: 788, column: 681, scope: !3714, inlinedAt: !5184)
!5613 = !DILocation(line: 788, column: 599, scope: !3714, inlinedAt: !5184)
!5614 = !DILocation(line: 788, column: 711, scope: !3714, inlinedAt: !5184)
!5615 = !DILocation(line: 788, column: 710, scope: !3714, inlinedAt: !5184)
!5616 = !DILocation(line: 788, column: 708, scope: !3714, inlinedAt: !5184)
!5617 = !DILocation(line: 788, column: 732, scope: !3714, inlinedAt: !5184)
!5618 = !DILocation(line: 788, column: 742, scope: !3714, inlinedAt: !5184)
!5619 = !DILocation(line: 788, column: 722, scope: !4169, inlinedAt: !5184)
!5620 = !DILocation(line: 788, column: 753, scope: !3714, inlinedAt: !5184)
!5621 = !DILocation(line: 788, column: 751, scope: !3714, inlinedAt: !5184)
!5622 = !DILocation(line: 788, column: 720, scope: !3714, inlinedAt: !5184)
!5623 = !DILocation(line: 788, column: 772, scope: !3714, inlinedAt: !5184)
!5624 = !DILocation(line: 788, column: 766, scope: !3714, inlinedAt: !5184)
!5625 = !DILocation(line: 788, column: 764, scope: !3714, inlinedAt: !5184)
!5626 = !DILocation(line: 788, column: 793, scope: !3714, inlinedAt: !5184)
!5627 = !DILocation(line: 788, column: 787, scope: !3714, inlinedAt: !5184)
!5628 = !DILocation(line: 788, column: 785, scope: !3714, inlinedAt: !5184)
!5629 = !DILocation(line: 788, column: 804, scope: !3714, inlinedAt: !5184)
!5630 = !DILocation(line: 788, column: 806, scope: !4181, inlinedAt: !5184)
!5631 = !DILocation(line: 788, column: 827, scope: !4183, inlinedAt: !5184)
!5632 = !DILocation(line: 788, column: 822, scope: !4183, inlinedAt: !5184)
!5633 = !DILocation(line: 788, column: 844, scope: !4183, inlinedAt: !5184)
!5634 = !DILocation(line: 788, column: 862, scope: !4183, inlinedAt: !5184)
!5635 = !DILocation(line: 788, column: 874, scope: !4183, inlinedAt: !5184)
!5636 = !DILocation(line: 788, column: 871, scope: !4183, inlinedAt: !5184)
!5637 = !DILocation(line: 788, column: 859, scope: !4183, inlinedAt: !5184)
!5638 = !DILocation(line: 788, column: 843, scope: !4183, inlinedAt: !5184)
!5639 = !DILocation(line: 788, column: 881, scope: !4193, inlinedAt: !5184)
!5640 = !DILocation(line: 788, column: 893, scope: !4193, inlinedAt: !5184)
!5641 = !DILocation(line: 788, column: 890, scope: !4193, inlinedAt: !5184)
!5642 = !DILocation(line: 788, column: 843, scope: !4193, inlinedAt: !5184)
!5643 = !DILocation(line: 788, column: 900, scope: !4198, inlinedAt: !5184)
!5644 = !DILocation(line: 788, column: 843, scope: !4198, inlinedAt: !5184)
!5645 = !DILocation(line: 788, column: 843, scope: !4201, inlinedAt: !5184)
!5646 = !DILocation(line: 788, column: 840, scope: !4201, inlinedAt: !5184)
!5647 = !DILocation(line: 790, column: 18, scope: !3720, inlinedAt: !5184)
!5648 = !DILocation(line: 790, column: 6, scope: !3720, inlinedAt: !5184)
!5649 = !DILocation(line: 790, column: 10, scope: !3720, inlinedAt: !5184)
!5650 = !DILocation(line: 790, column: 16, scope: !3720, inlinedAt: !5184)
!5651 = !DILocation(line: 792, column: 12, scope: !3720, inlinedAt: !5184)
!5652 = !DILocation(line: 258, column: 25, scope: !5185)
!5653 = !DILocation(line: 259, column: 25, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5185, file: !908, line: 259, column: 25)
!5655 = !DILocation(line: 259, column: 29, scope: !5654)
!5656 = !DILocation(line: 259, column: 25, scope: !5185)
!5657 = !DILocation(line: 260, column: 25, scope: !5654)
!5658 = !DILocation(line: 262, column: 30, scope: !5185)
!5659 = !DILocation(line: 262, column: 36, scope: !5185)
!5660 = !DILocation(line: 262, column: 34, scope: !5185)
!5661 = !DILocation(line: 262, column: 25, scope: !5185)
!5662 = !DILocation(line: 262, column: 21, scope: !5185)
!5663 = !DILocation(line: 262, column: 28, scope: !5185)
!5664 = !DILocation(line: 263, column: 17, scope: !5185)
!5665 = !DILocation(line: 253, column: 41, scope: !5666)
!5666 = !DILexicalBlockFile(scope: !5186, file: !908, discriminator: 2)
!5667 = !DILocation(line: 253, column: 17, scope: !5666)
!5668 = distinct !{!5668, !5669}
!5669 = !DILocation(line: 253, column: 17, scope: !5188)
!5670 = !DILocation(line: 264, column: 24, scope: !5188)
!5671 = !DILocation(line: 264, column: 21, scope: !5188)
!5672 = !DILocation(line: 265, column: 13, scope: !5188)
!5673 = !DILocation(line: 252, column: 38, scope: !5674)
!5674 = !DILexicalBlockFile(scope: !5189, file: !908, discriminator: 2)
!5675 = !DILocation(line: 252, column: 13, scope: !5674)
!5676 = distinct !{!5676, !5677}
!5677 = !DILocation(line: 252, column: 13, scope: !5191)
!5678 = !DILocation(line: 268, column: 17, scope: !5193)
!5679 = !DILocation(line: 268, column: 9, scope: !5193)
!5680 = !DILocation(line: 270, column: 39, scope: !5681)
!5681 = distinct !DILexicalBlock(scope: !5193, file: !908, line: 268, column: 23)
!5682 = !DILocation(line: 270, column: 31, scope: !5681)
!5683 = !DILocation(line: 270, column: 34, scope: !5681)
!5684 = !DILocation(line: 270, column: 19, scope: !5681)
!5685 = !DILocation(line: 270, column: 44, scope: !5681)
!5686 = !DILocation(line: 270, column: 48, scope: !5681)
!5687 = !DILocation(line: 270, column: 46, scope: !5681)
!5688 = !DILocation(line: 270, column: 58, scope: !5681)
!5689 = !DILocation(line: 270, column: 56, scope: !5681)
!5690 = !DILocation(line: 270, column: 42, scope: !5681)
!5691 = !DILocation(line: 270, column: 17, scope: !5681)
!5692 = !DILocation(line: 271, column: 13, scope: !5681)
!5693 = !DILocation(line: 271, column: 16, scope: !5681)
!5694 = !DILocation(line: 271, column: 25, scope: !5681)
!5695 = !DILocation(line: 271, column: 45, scope: !5681)
!5696 = !DILocation(line: 271, column: 50, scope: !5681)
!5697 = !DILocation(line: 271, column: 55, scope: !5681)
!5698 = !DILocation(line: 271, column: 60, scope: !5681)
!5699 = !DILocation(line: 272, column: 20, scope: !5681)
!5700 = !DILocation(line: 272, column: 17, scope: !5681)
!5701 = !DILocation(line: 273, column: 17, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5681, file: !908, line: 273, column: 17)
!5703 = !DILocation(line: 273, column: 17, scope: !5681)
!5704 = !DILocation(line: 274, column: 17, scope: !5705)
!5705 = distinct !DILexicalBlock(scope: !5702, file: !908, line: 273, column: 29)
!5706 = !DILocation(line: 274, column: 20, scope: !5705)
!5707 = !DILocation(line: 274, column: 29, scope: !5705)
!5708 = !DILocation(line: 274, column: 49, scope: !5705)
!5709 = !DILocation(line: 274, column: 54, scope: !5705)
!5710 = !DILocation(line: 274, column: 59, scope: !5705)
!5711 = !DILocation(line: 274, column: 64, scope: !5705)
!5712 = !DILocation(line: 275, column: 24, scope: !5705)
!5713 = !DILocation(line: 275, column: 21, scope: !5705)
!5714 = !DILocation(line: 276, column: 13, scope: !5705)
!5715 = !DILocation(line: 277, column: 26, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5681, file: !908, line: 277, column: 13)
!5717 = !DILocation(line: 277, column: 24, scope: !5716)
!5718 = !DILocation(line: 277, column: 20, scope: !5716)
!5719 = !DILocation(line: 277, column: 18, scope: !5716)
!5720 = !DILocation(line: 277, column: 38, scope: !5721)
!5721 = !DILexicalBlockFile(scope: !5722, file: !908, discriminator: 1)
!5722 = distinct !DILexicalBlock(scope: !5716, file: !908, line: 277, column: 13)
!5723 = !DILocation(line: 277, column: 42, scope: !5721)
!5724 = !DILocation(line: 277, column: 40, scope: !5721)
!5725 = !DILocation(line: 277, column: 13, scope: !5721)
!5726 = !DILocation(line: 278, column: 17, scope: !5727)
!5727 = distinct !DILexicalBlock(scope: !5722, file: !908, line: 277, column: 55)
!5728 = !DILocation(line: 278, column: 20, scope: !5727)
!5729 = !DILocation(line: 278, column: 29, scope: !5727)
!5730 = !DILocation(line: 278, column: 49, scope: !5727)
!5731 = !DILocation(line: 278, column: 54, scope: !5727)
!5732 = !DILocation(line: 278, column: 59, scope: !5727)
!5733 = !DILocation(line: 278, column: 64, scope: !5727)
!5734 = !DILocation(line: 278, column: 76, scope: !5727)
!5735 = !DILocation(line: 278, column: 75, scope: !5727)
!5736 = !DILocation(line: 278, column: 71, scope: !5727)
!5737 = !DILocation(line: 279, column: 24, scope: !5727)
!5738 = !DILocation(line: 279, column: 21, scope: !5727)
!5739 = !DILocation(line: 280, column: 13, scope: !5727)
!5740 = !DILocation(line: 277, column: 51, scope: !5741)
!5741 = !DILexicalBlockFile(scope: !5722, file: !908, discriminator: 2)
!5742 = !DILocation(line: 277, column: 13, scope: !5741)
!5743 = distinct !{!5743, !5744}
!5744 = !DILocation(line: 277, column: 13, scope: !5681)
!5745 = !DILocation(line: 281, column: 13, scope: !5681)
!5746 = !DILocation(line: 283, column: 39, scope: !5681)
!5747 = !DILocation(line: 283, column: 31, scope: !5681)
!5748 = !DILocation(line: 283, column: 34, scope: !5681)
!5749 = !DILocation(line: 283, column: 19, scope: !5681)
!5750 = !DILocation(line: 283, column: 44, scope: !5681)
!5751 = !DILocation(line: 283, column: 48, scope: !5681)
!5752 = !DILocation(line: 283, column: 46, scope: !5681)
!5753 = !DILocation(line: 283, column: 58, scope: !5681)
!5754 = !DILocation(line: 283, column: 56, scope: !5681)
!5755 = !DILocation(line: 283, column: 42, scope: !5681)
!5756 = !DILocation(line: 283, column: 17, scope: !5681)
!5757 = !DILocation(line: 284, column: 13, scope: !5681)
!5758 = !DILocation(line: 284, column: 16, scope: !5681)
!5759 = !DILocation(line: 284, column: 25, scope: !5681)
!5760 = !DILocation(line: 284, column: 45, scope: !5681)
!5761 = !DILocation(line: 284, column: 50, scope: !5681)
!5762 = !DILocation(line: 284, column: 55, scope: !5681)
!5763 = !DILocation(line: 284, column: 60, scope: !5681)
!5764 = !DILocation(line: 285, column: 20, scope: !5681)
!5765 = !DILocation(line: 285, column: 17, scope: !5681)
!5766 = !DILocation(line: 286, column: 17, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5681, file: !908, line: 286, column: 17)
!5768 = !DILocation(line: 286, column: 17, scope: !5681)
!5769 = !DILocation(line: 287, column: 17, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5767, file: !908, line: 286, column: 29)
!5771 = !DILocation(line: 287, column: 20, scope: !5770)
!5772 = !DILocation(line: 287, column: 29, scope: !5770)
!5773 = !DILocation(line: 287, column: 49, scope: !5770)
!5774 = !DILocation(line: 287, column: 54, scope: !5770)
!5775 = !DILocation(line: 287, column: 59, scope: !5770)
!5776 = !DILocation(line: 287, column: 64, scope: !5770)
!5777 = !DILocation(line: 288, column: 24, scope: !5770)
!5778 = !DILocation(line: 288, column: 21, scope: !5770)
!5779 = !DILocation(line: 289, column: 13, scope: !5770)
!5780 = !DILocation(line: 290, column: 26, scope: !5781)
!5781 = distinct !DILexicalBlock(scope: !5681, file: !908, line: 290, column: 13)
!5782 = !DILocation(line: 290, column: 24, scope: !5781)
!5783 = !DILocation(line: 290, column: 20, scope: !5781)
!5784 = !DILocation(line: 290, column: 18, scope: !5781)
!5785 = !DILocation(line: 290, column: 38, scope: !5786)
!5786 = !DILexicalBlockFile(scope: !5787, file: !908, discriminator: 1)
!5787 = distinct !DILexicalBlock(scope: !5781, file: !908, line: 290, column: 13)
!5788 = !DILocation(line: 290, column: 42, scope: !5786)
!5789 = !DILocation(line: 290, column: 40, scope: !5786)
!5790 = !DILocation(line: 290, column: 13, scope: !5786)
!5791 = !DILocation(line: 291, column: 28, scope: !5792)
!5792 = distinct !DILexicalBlock(scope: !5787, file: !908, line: 290, column: 55)
!5793 = !DILocation(line: 291, column: 27, scope: !5792)
!5794 = !DILocation(line: 291, column: 23, scope: !5792)
!5795 = !DILocation(line: 291, column: 21, scope: !5792)
!5796 = !DILocation(line: 292, column: 24, scope: !5792)
!5797 = !DILocation(line: 292, column: 30, scope: !5792)
!5798 = !DILocation(line: 292, column: 28, scope: !5792)
!5799 = !DILocation(line: 292, column: 22, scope: !5792)
!5800 = !DILocation(line: 293, column: 26, scope: !5792)
!5801 = !DILocation(line: 293, column: 33, scope: !5792)
!5802 = !DILocation(line: 293, column: 31, scope: !5792)
!5803 = !DILocation(line: 293, column: 17, scope: !5792)
!5804 = !DILocation(line: 293, column: 24, scope: !5792)
!5805 = !DILocation(line: 294, column: 24, scope: !5806)
!5806 = distinct !DILexicalBlock(scope: !5792, file: !908, line: 294, column: 17)
!5807 = !DILocation(line: 294, column: 22, scope: !5806)
!5808 = !DILocation(line: 294, column: 29, scope: !5809)
!5809 = !DILexicalBlockFile(scope: !5810, file: !908, discriminator: 1)
!5810 = distinct !DILexicalBlock(scope: !5806, file: !908, line: 294, column: 17)
!5811 = !DILocation(line: 294, column: 33, scope: !5809)
!5812 = !DILocation(line: 294, column: 31, scope: !5809)
!5813 = !DILocation(line: 294, column: 17, scope: !5809)
!5814 = !DILocation(line: 295, column: 31, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !5810, file: !908, line: 294, column: 45)
!5816 = !DILocation(line: 295, column: 35, scope: !5815)
!5817 = !DILocation(line: 295, column: 33, scope: !5815)
!5818 = !DILocation(line: 295, column: 27, scope: !5815)
!5819 = !DILocation(line: 295, column: 25, scope: !5815)
!5820 = !DILocation(line: 296, column: 35, scope: !5815)
!5821 = !DILocation(line: 296, column: 40, scope: !5815)
!5822 = !DILocation(line: 296, column: 52, scope: !5815)
!5823 = !DILocation(line: 296, column: 37, scope: !5815)
!5824 = !DILocation(line: 296, column: 31, scope: !5815)
!5825 = !DILocation(line: 296, column: 29, scope: !5815)
!5826 = !DILocation(line: 297, column: 29, scope: !5815)
!5827 = !DILocation(line: 297, column: 35, scope: !5815)
!5828 = !DILocation(line: 297, column: 33, scope: !5815)
!5829 = !DILocation(line: 297, column: 49, scope: !5815)
!5830 = !DILocation(line: 297, column: 45, scope: !5815)
!5831 = !DILocation(line: 297, column: 43, scope: !5815)
!5832 = !DILocation(line: 297, column: 26, scope: !5815)
!5833 = !DILocation(line: 298, column: 30, scope: !5815)
!5834 = !DILocation(line: 298, column: 37, scope: !5815)
!5835 = !DILocation(line: 298, column: 35, scope: !5815)
!5836 = !DILocation(line: 298, column: 25, scope: !5815)
!5837 = !DILocation(line: 298, column: 21, scope: !5815)
!5838 = !DILocation(line: 298, column: 28, scope: !5815)
!5839 = !DILocation(line: 299, column: 17, scope: !5815)
!5840 = !DILocation(line: 294, column: 41, scope: !5841)
!5841 = !DILexicalBlockFile(scope: !5810, file: !908, discriminator: 2)
!5842 = !DILocation(line: 294, column: 17, scope: !5841)
!5843 = distinct !{!5843, !5844}
!5844 = !DILocation(line: 294, column: 17, scope: !5792)
!5845 = !DILocation(line: 300, column: 24, scope: !5792)
!5846 = !DILocation(line: 300, column: 21, scope: !5792)
!5847 = !DILocation(line: 301, column: 13, scope: !5792)
!5848 = !DILocation(line: 290, column: 51, scope: !5849)
!5849 = !DILexicalBlockFile(scope: !5787, file: !908, discriminator: 2)
!5850 = !DILocation(line: 290, column: 13, scope: !5849)
!5851 = distinct !{!5851, !5852}
!5852 = !DILocation(line: 290, column: 13, scope: !5681)
!5853 = !DILocation(line: 302, column: 13, scope: !5681)
!5854 = !DILocation(line: 304, column: 39, scope: !5681)
!5855 = !DILocation(line: 304, column: 31, scope: !5681)
!5856 = !DILocation(line: 304, column: 34, scope: !5681)
!5857 = !DILocation(line: 304, column: 19, scope: !5681)
!5858 = !DILocation(line: 304, column: 44, scope: !5681)
!5859 = !DILocation(line: 304, column: 48, scope: !5681)
!5860 = !DILocation(line: 304, column: 46, scope: !5681)
!5861 = !DILocation(line: 304, column: 58, scope: !5681)
!5862 = !DILocation(line: 304, column: 56, scope: !5681)
!5863 = !DILocation(line: 304, column: 42, scope: !5681)
!5864 = !DILocation(line: 304, column: 17, scope: !5681)
!5865 = !DILocation(line: 305, column: 13, scope: !5681)
!5866 = !DILocation(line: 305, column: 16, scope: !5681)
!5867 = !DILocation(line: 305, column: 25, scope: !5681)
!5868 = !DILocation(line: 305, column: 45, scope: !5681)
!5869 = !DILocation(line: 305, column: 50, scope: !5681)
!5870 = !DILocation(line: 305, column: 55, scope: !5681)
!5871 = !DILocation(line: 305, column: 60, scope: !5681)
!5872 = !DILocation(line: 306, column: 20, scope: !5681)
!5873 = !DILocation(line: 306, column: 17, scope: !5681)
!5874 = !DILocation(line: 307, column: 17, scope: !5875)
!5875 = distinct !DILexicalBlock(scope: !5681, file: !908, line: 307, column: 17)
!5876 = !DILocation(line: 307, column: 17, scope: !5681)
!5877 = !DILocation(line: 308, column: 17, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !5875, file: !908, line: 307, column: 29)
!5879 = !DILocation(line: 308, column: 20, scope: !5878)
!5880 = !DILocation(line: 308, column: 29, scope: !5878)
!5881 = !DILocation(line: 308, column: 49, scope: !5878)
!5882 = !DILocation(line: 308, column: 54, scope: !5878)
!5883 = !DILocation(line: 308, column: 59, scope: !5878)
!5884 = !DILocation(line: 308, column: 64, scope: !5878)
!5885 = !DILocation(line: 309, column: 24, scope: !5878)
!5886 = !DILocation(line: 309, column: 21, scope: !5878)
!5887 = !DILocation(line: 310, column: 13, scope: !5878)
!5888 = !DILocation(line: 311, column: 30, scope: !5681)
!5889 = !DILocation(line: 311, column: 28, scope: !5681)
!5890 = !DILocation(line: 311, column: 21, scope: !5681)
!5891 = !DILocation(line: 312, column: 26, scope: !5892)
!5892 = distinct !DILexicalBlock(scope: !5681, file: !908, line: 312, column: 13)
!5893 = !DILocation(line: 312, column: 24, scope: !5892)
!5894 = !DILocation(line: 312, column: 20, scope: !5892)
!5895 = !DILocation(line: 312, column: 18, scope: !5892)
!5896 = !DILocation(line: 312, column: 38, scope: !5897)
!5897 = !DILexicalBlockFile(scope: !5898, file: !908, discriminator: 1)
!5898 = distinct !DILexicalBlock(scope: !5892, file: !908, line: 312, column: 13)
!5899 = !DILocation(line: 312, column: 42, scope: !5897)
!5900 = !DILocation(line: 312, column: 40, scope: !5897)
!5901 = !DILocation(line: 312, column: 13, scope: !5897)
!5902 = !DILocation(line: 313, column: 40, scope: !5903)
!5903 = distinct !DILexicalBlock(scope: !5898, file: !908, line: 312, column: 55)
!5904 = !DILocation(line: 313, column: 45, scope: !5903)
!5905 = !DILocation(line: 313, column: 51, scope: !5903)
!5906 = !DILocation(line: 313, column: 49, scope: !5903)
!5907 = !DILocation(line: 313, column: 64, scope: !5903)
!5908 = !DILocation(line: 313, column: 69, scope: !5903)
!5909 = !DILocation(line: 313, column: 93, scope: !5903)
!5910 = !DILocation(line: 313, column: 17, scope: !5903)
!5911 = !DILocation(line: 314, column: 34, scope: !5903)
!5912 = !DILocation(line: 314, column: 32, scope: !5903)
!5913 = !DILocation(line: 314, column: 25, scope: !5903)
!5914 = !DILocation(line: 315, column: 24, scope: !5903)
!5915 = !DILocation(line: 315, column: 21, scope: !5903)
!5916 = !DILocation(line: 316, column: 13, scope: !5903)
!5917 = !DILocation(line: 312, column: 51, scope: !5918)
!5918 = !DILexicalBlockFile(scope: !5898, file: !908, discriminator: 2)
!5919 = !DILocation(line: 312, column: 13, scope: !5918)
!5920 = distinct !{!5920, !5921}
!5921 = !DILocation(line: 312, column: 13, scope: !5681)
!5922 = !DILocation(line: 317, column: 13, scope: !5681)
!5923 = !DILocation(line: 319, column: 35, scope: !5681)
!5924 = !DILocation(line: 319, column: 68, scope: !5681)
!5925 = !DILocation(line: 319, column: 13, scope: !5681)
!5926 = !DILocation(line: 320, column: 9, scope: !5681)
!5927 = !DILocation(line: 321, column: 5, scope: !5193)
!5928 = !DILocation(line: 224, column: 33, scope: !5929)
!5929 = !DILexicalBlockFile(scope: !5194, file: !908, discriminator: 2)
!5930 = !DILocation(line: 224, column: 5, scope: !5929)
!5931 = distinct !{!5931, !5932}
!5932 = !DILocation(line: 224, column: 5, scope: !5181)
!5933 = !DILocation(line: 323, column: 9, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5181, file: !908, line: 323, column: 9)
!5935 = !DILocation(line: 323, column: 12, scope: !5934)
!5936 = !DILocation(line: 323, column: 9, scope: !5181)
!5937 = !DILocalVariable(name: "height", scope: !5938, file: !908, line: 324, type: !889)
!5938 = distinct !DILexicalBlock(scope: !5934, file: !908, line: 323, column: 25)
!5939 = !DILocation(line: 324, column: 13, scope: !5938)
!5940 = !DILocation(line: 324, column: 24, scope: !5938)
!5941 = !DILocation(line: 324, column: 27, scope: !5938)
!5942 = !DILocation(line: 324, column: 44, scope: !5938)
!5943 = !DILocation(line: 324, column: 51, scope: !5938)
!5944 = !DILocation(line: 324, column: 66, scope: !5938)
!5945 = !DILocation(line: 324, column: 70, scope: !5938)
!5946 = !DILocation(line: 324, column: 73, scope: !5938)
!5947 = !DILocation(line: 324, column: 68, scope: !5938)
!5948 = !DILocation(line: 324, column: 64, scope: !5938)
!5949 = !DILocation(line: 324, column: 41, scope: !5938)
!5950 = !DILocation(line: 324, column: 23, scope: !5938)
!5951 = !DILocation(line: 324, column: 90, scope: !5952)
!5952 = !DILexicalBlockFile(scope: !5938, file: !908, discriminator: 1)
!5953 = !DILocation(line: 324, column: 97, scope: !5952)
!5954 = !DILocation(line: 324, column: 112, scope: !5952)
!5955 = !DILocation(line: 324, column: 116, scope: !5952)
!5956 = !DILocation(line: 324, column: 119, scope: !5952)
!5957 = !DILocation(line: 324, column: 114, scope: !5952)
!5958 = !DILocation(line: 324, column: 110, scope: !5952)
!5959 = !DILocation(line: 324, column: 23, scope: !5952)
!5960 = !DILocation(line: 324, column: 136, scope: !5961)
!5961 = !DILexicalBlockFile(scope: !5938, file: !908, discriminator: 2)
!5962 = !DILocation(line: 324, column: 139, scope: !5961)
!5963 = !DILocation(line: 324, column: 23, scope: !5961)
!5964 = !DILocation(line: 324, column: 23, scope: !5965)
!5965 = !DILexicalBlockFile(scope: !5938, file: !908, discriminator: 3)
!5966 = !DILocation(line: 324, column: 13, scope: !5965)
!5967 = !DILocalVariable(name: "width", scope: !5938, file: !908, line: 325, type: !889)
!5968 = !DILocation(line: 325, column: 13, scope: !5938)
!5969 = !DILocation(line: 325, column: 21, scope: !5938)
!5970 = !DILocation(line: 325, column: 28, scope: !5938)
!5971 = !DILocalVariable(name: "r", scope: !5938, file: !908, line: 326, type: !903)
!5972 = !DILocation(line: 326, column: 19, scope: !5938)
!5973 = !DILocation(line: 326, column: 35, scope: !5938)
!5974 = !DILocation(line: 326, column: 38, scope: !5938)
!5975 = !DILocation(line: 326, column: 23, scope: !5938)
!5976 = !DILocation(line: 326, column: 48, scope: !5938)
!5977 = !DILocation(line: 326, column: 52, scope: !5938)
!5978 = !DILocation(line: 326, column: 55, scope: !5938)
!5979 = !DILocation(line: 326, column: 50, scope: !5938)
!5980 = !DILocation(line: 326, column: 70, scope: !5938)
!5981 = !DILocation(line: 326, column: 73, scope: !5938)
!5982 = !DILocation(line: 326, column: 68, scope: !5938)
!5983 = !DILocation(line: 326, column: 85, scope: !5938)
!5984 = !DILocation(line: 326, column: 46, scope: !5938)
!5985 = !DILocalVariable(name: "g", scope: !5938, file: !908, line: 327, type: !903)
!5986 = !DILocation(line: 327, column: 19, scope: !5938)
!5987 = !DILocation(line: 327, column: 35, scope: !5938)
!5988 = !DILocation(line: 327, column: 38, scope: !5938)
!5989 = !DILocation(line: 327, column: 23, scope: !5938)
!5990 = !DILocation(line: 327, column: 48, scope: !5938)
!5991 = !DILocation(line: 327, column: 52, scope: !5938)
!5992 = !DILocation(line: 327, column: 55, scope: !5938)
!5993 = !DILocation(line: 327, column: 50, scope: !5938)
!5994 = !DILocation(line: 327, column: 70, scope: !5938)
!5995 = !DILocation(line: 327, column: 73, scope: !5938)
!5996 = !DILocation(line: 327, column: 68, scope: !5938)
!5997 = !DILocation(line: 327, column: 85, scope: !5938)
!5998 = !DILocation(line: 327, column: 46, scope: !5938)
!5999 = !DILocalVariable(name: "b", scope: !5938, file: !908, line: 328, type: !903)
!6000 = !DILocation(line: 328, column: 19, scope: !5938)
!6001 = !DILocation(line: 328, column: 35, scope: !5938)
!6002 = !DILocation(line: 328, column: 38, scope: !5938)
!6003 = !DILocation(line: 328, column: 23, scope: !5938)
!6004 = !DILocation(line: 328, column: 48, scope: !5938)
!6005 = !DILocation(line: 328, column: 52, scope: !5938)
!6006 = !DILocation(line: 328, column: 55, scope: !5938)
!6007 = !DILocation(line: 328, column: 50, scope: !5938)
!6008 = !DILocation(line: 328, column: 70, scope: !5938)
!6009 = !DILocation(line: 328, column: 73, scope: !5938)
!6010 = !DILocation(line: 328, column: 68, scope: !5938)
!6011 = !DILocation(line: 328, column: 85, scope: !5938)
!6012 = !DILocation(line: 328, column: 46, scope: !5938)
!6013 = !DILocation(line: 330, column: 16, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !5938, file: !908, line: 330, column: 9)
!6015 = !DILocation(line: 330, column: 14, scope: !6014)
!6016 = !DILocation(line: 330, column: 21, scope: !6017)
!6017 = !DILexicalBlockFile(scope: !6018, file: !908, discriminator: 1)
!6018 = distinct !DILexicalBlock(scope: !6014, file: !908, line: 330, column: 9)
!6019 = !DILocation(line: 330, column: 25, scope: !6017)
!6020 = !DILocation(line: 330, column: 23, scope: !6017)
!6021 = !DILocation(line: 330, column: 9, scope: !6017)
!6022 = !DILocation(line: 331, column: 20, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !6024, file: !908, line: 331, column: 13)
!6024 = distinct !DILexicalBlock(scope: !6018, file: !908, line: 330, column: 38)
!6025 = !DILocation(line: 331, column: 18, scope: !6023)
!6026 = !DILocation(line: 331, column: 25, scope: !6027)
!6027 = !DILexicalBlockFile(scope: !6028, file: !908, discriminator: 1)
!6028 = distinct !DILexicalBlock(scope: !6023, file: !908, line: 331, column: 13)
!6029 = !DILocation(line: 331, column: 29, scope: !6027)
!6030 = !DILocation(line: 331, column: 27, scope: !6027)
!6031 = !DILocation(line: 331, column: 13, scope: !6027)
!6032 = !DILocation(line: 332, column: 27, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !6028, file: !908, line: 331, column: 41)
!6034 = !DILocation(line: 332, column: 25, scope: !6033)
!6035 = !DILocation(line: 332, column: 34, scope: !6033)
!6036 = !DILocation(line: 332, column: 32, scope: !6033)
!6037 = !DILocation(line: 332, column: 30, scope: !6033)
!6038 = !DILocation(line: 332, column: 40, scope: !6033)
!6039 = !DILocation(line: 332, column: 38, scope: !6033)
!6040 = !DILocation(line: 332, column: 24, scope: !6033)
!6041 = !DILocation(line: 332, column: 19, scope: !6033)
!6042 = !DILocation(line: 332, column: 17, scope: !6033)
!6043 = !DILocation(line: 332, column: 22, scope: !6033)
!6044 = !DILocation(line: 333, column: 27, scope: !6033)
!6045 = !DILocation(line: 333, column: 25, scope: !6033)
!6046 = !DILocation(line: 333, column: 34, scope: !6033)
!6047 = !DILocation(line: 333, column: 32, scope: !6033)
!6048 = !DILocation(line: 333, column: 30, scope: !6033)
!6049 = !DILocation(line: 333, column: 40, scope: !6033)
!6050 = !DILocation(line: 333, column: 38, scope: !6033)
!6051 = !DILocation(line: 333, column: 24, scope: !6033)
!6052 = !DILocation(line: 333, column: 19, scope: !6033)
!6053 = !DILocation(line: 333, column: 17, scope: !6033)
!6054 = !DILocation(line: 333, column: 22, scope: !6033)
!6055 = !DILocation(line: 334, column: 13, scope: !6033)
!6056 = !DILocation(line: 331, column: 37, scope: !6057)
!6057 = !DILexicalBlockFile(scope: !6028, file: !908, discriminator: 2)
!6058 = !DILocation(line: 331, column: 13, scope: !6057)
!6059 = distinct !{!6059, !6060}
!6060 = !DILocation(line: 331, column: 13, scope: !6024)
!6061 = !DILocation(line: 335, column: 18, scope: !6024)
!6062 = !DILocation(line: 335, column: 21, scope: !6024)
!6063 = !DILocation(line: 335, column: 33, scope: !6024)
!6064 = !DILocation(line: 335, column: 15, scope: !6024)
!6065 = !DILocation(line: 336, column: 18, scope: !6024)
!6066 = !DILocation(line: 336, column: 21, scope: !6024)
!6067 = !DILocation(line: 336, column: 33, scope: !6024)
!6068 = !DILocation(line: 336, column: 15, scope: !6024)
!6069 = !DILocation(line: 337, column: 18, scope: !6024)
!6070 = !DILocation(line: 337, column: 21, scope: !6024)
!6071 = !DILocation(line: 337, column: 33, scope: !6024)
!6072 = !DILocation(line: 337, column: 15, scope: !6024)
!6073 = !DILocation(line: 338, column: 9, scope: !6024)
!6074 = !DILocation(line: 330, column: 34, scope: !6075)
!6075 = !DILexicalBlockFile(scope: !6018, file: !908, discriminator: 2)
!6076 = !DILocation(line: 330, column: 9, scope: !6075)
!6077 = distinct !{!6077, !6078}
!6078 = !DILocation(line: 330, column: 9, scope: !5938)
!6079 = !DILocation(line: 339, column: 5, scope: !5938)
!6080 = !DILocation(line: 341, column: 5, scope: !5181)
!6081 = !DILocation(line: 342, column: 1, scope: !5181)
!6082 = distinct !DISubprogram(name: "huff_build12", scope: !908, file: !908, line: 127, type: !1689, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1635)
!6083 = !DILocalVariable(name: "vlc", arg: 1, scope: !6082, file: !908, line: 127, type: !1691)
!6084 = !DILocation(line: 127, column: 30, scope: !6082)
!6085 = !DILocalVariable(name: "len", arg: 2, scope: !6082, file: !908, line: 127, type: !1029)
!6086 = !DILocation(line: 127, column: 44, scope: !6082)
!6087 = !DILocalVariable(name: "he", scope: !6082, file: !908, line: 129, type: !6088)
!6088 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3136, size: 262144, align: 32, elements: !6089)
!6089 = !{!1670}
!6090 = !DILocation(line: 129, column: 15, scope: !6082)
!6091 = !DILocalVariable(name: "codes", scope: !6082, file: !908, line: 130, type: !6092)
!6092 = !DICompositeType(tag: DW_TAG_array_type, baseType: !897, size: 131072, align: 32, elements: !6089)
!6093 = !DILocation(line: 130, column: 14, scope: !6082)
!6094 = !DILocalVariable(name: "bits", scope: !6082, file: !908, line: 131, type: !6095)
!6095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !901, size: 32768, align: 8, elements: !6089)
!6096 = !DILocation(line: 131, column: 13, scope: !6082)
!6097 = !DILocalVariable(name: "syms", scope: !6082, file: !908, line: 132, type: !6098)
!6098 = !DICompositeType(tag: DW_TAG_array_type, baseType: !904, size: 65536, align: 16, elements: !6089)
!6099 = !DILocation(line: 132, column: 14, scope: !6082)
!6100 = !DILocalVariable(name: "code", scope: !6082, file: !908, line: 133, type: !897)
!6101 = !DILocation(line: 133, column: 14, scope: !6082)
!6102 = !DILocalVariable(name: "i", scope: !6082, file: !908, line: 134, type: !889)
!6103 = !DILocation(line: 134, column: 9, scope: !6082)
!6104 = !DILocation(line: 136, column: 12, scope: !6105)
!6105 = distinct !DILexicalBlock(scope: !6082, file: !908, line: 136, column: 5)
!6106 = !DILocation(line: 136, column: 10, scope: !6105)
!6107 = !DILocation(line: 136, column: 17, scope: !6108)
!6108 = !DILexicalBlockFile(scope: !6109, file: !908, discriminator: 1)
!6109 = distinct !DILexicalBlock(scope: !6105, file: !908, line: 136, column: 5)
!6110 = !DILocation(line: 136, column: 19, scope: !6108)
!6111 = !DILocation(line: 136, column: 5, scope: !6108)
!6112 = !DILocation(line: 137, column: 28, scope: !6113)
!6113 = distinct !DILexicalBlock(scope: !6109, file: !908, line: 136, column: 32)
!6114 = !DILocation(line: 137, column: 26, scope: !6113)
!6115 = !DILocation(line: 137, column: 21, scope: !6113)
!6116 = !DILocation(line: 137, column: 12, scope: !6113)
!6117 = !DILocation(line: 137, column: 9, scope: !6113)
!6118 = !DILocation(line: 137, column: 15, scope: !6113)
!6119 = !DILocation(line: 137, column: 19, scope: !6113)
!6120 = !DILocation(line: 138, column: 25, scope: !6113)
!6121 = !DILocation(line: 138, column: 21, scope: !6113)
!6122 = !DILocation(line: 138, column: 12, scope: !6113)
!6123 = !DILocation(line: 138, column: 9, scope: !6113)
!6124 = !DILocation(line: 138, column: 15, scope: !6113)
!6125 = !DILocation(line: 138, column: 19, scope: !6113)
!6126 = !DILocation(line: 139, column: 17, scope: !6127)
!6127 = distinct !DILexicalBlock(scope: !6113, file: !908, line: 139, column: 13)
!6128 = !DILocation(line: 139, column: 13, scope: !6127)
!6129 = !DILocation(line: 139, column: 20, scope: !6127)
!6130 = !DILocation(line: 139, column: 25, scope: !6127)
!6131 = !DILocation(line: 139, column: 32, scope: !6132)
!6132 = !DILexicalBlockFile(scope: !6127, file: !908, discriminator: 1)
!6133 = !DILocation(line: 139, column: 28, scope: !6132)
!6134 = !DILocation(line: 139, column: 35, scope: !6132)
!6135 = !DILocation(line: 139, column: 13, scope: !6132)
!6136 = !DILocation(line: 140, column: 13, scope: !6127)
!6137 = !DILocation(line: 141, column: 5, scope: !6113)
!6138 = !DILocation(line: 136, column: 28, scope: !6139)
!6139 = !DILexicalBlockFile(scope: !6109, file: !908, discriminator: 2)
!6140 = !DILocation(line: 136, column: 5, scope: !6139)
!6141 = distinct !{!6141, !6142}
!6142 = !DILocation(line: 136, column: 5, scope: !6082)
!6143 = !DILocation(line: 142, column: 5, scope: !6082)
!6144 = distinct !{!6144, !6143}
!6145 = !DILocalVariable(name: "stack", scope: !6146, file: !908, line: 142, type: !3200)
!6146 = distinct !DILexicalBlock(scope: !6082, file: !908, line: 142, column: 8)
!6147 = !DILocation(line: 142, column: 16, scope: !6146)
!6148 = !DILocalVariable(name: "sp", scope: !6146, file: !908, line: 142, type: !889)
!6149 = !DILocation(line: 142, column: 34, scope: !6146)
!6150 = !DILocation(line: 142, column: 34, scope: !6151)
!6151 = !DILexicalBlockFile(scope: !6146, file: !908, discriminator: 1)
!6152 = !DILocation(line: 142, column: 55, scope: !6151)
!6153 = !DILocation(line: 142, column: 41, scope: !6151)
!6154 = !DILocation(line: 142, column: 53, scope: !6151)
!6155 = !DILocation(line: 142, column: 73, scope: !6151)
!6156 = !DILocation(line: 142, column: 77, scope: !6151)
!6157 = !DILocation(line: 142, column: 84, scope: !6151)
!6158 = !DILocation(line: 142, column: 59, scope: !6151)
!6159 = !DILocation(line: 142, column: 71, scope: !6151)
!6160 = !DILocation(line: 142, column: 88, scope: !6151)
!6161 = !DILocation(line: 142, column: 94, scope: !6162)
!6162 = !DILexicalBlockFile(scope: !6146, file: !908, discriminator: 2)
!6163 = !DILocation(line: 142, column: 88, scope: !6162)
!6164 = !DILocalVariable(name: "start", scope: !6165, file: !908, line: 142, type: !3222)
!6165 = distinct !DILexicalBlock(scope: !6146, file: !908, line: 142, column: 97)
!6166 = !DILocation(line: 142, column: 110, scope: !6165)
!6167 = !DILocation(line: 142, column: 123, scope: !6168)
!6168 = !DILexicalBlockFile(scope: !6165, file: !908, discriminator: 3)
!6169 = !DILocation(line: 142, column: 117, scope: !6168)
!6170 = !DILocation(line: 142, column: 110, scope: !6168)
!6171 = !DILocalVariable(name: "end", scope: !6165, file: !908, line: 142, type: !3222)
!6172 = !DILocation(line: 142, column: 144, scope: !6165)
!6173 = !DILocation(line: 142, column: 157, scope: !6168)
!6174 = !DILocation(line: 142, column: 150, scope: !6168)
!6175 = !DILocation(line: 142, column: 144, scope: !6168)
!6176 = !DILocation(line: 142, column: 165, scope: !6168)
!6177 = !DILocation(line: 142, column: 171, scope: !6178)
!6178 = !DILexicalBlockFile(scope: !6165, file: !908, discriminator: 4)
!6179 = !DILocation(line: 142, column: 179, scope: !6178)
!6180 = !DILocation(line: 142, column: 177, scope: !6178)
!6181 = !DILocation(line: 142, column: 165, scope: !6178)
!6182 = !DILocation(line: 142, column: 188, scope: !6183)
!6183 = !DILexicalBlockFile(scope: !6184, file: !908, discriminator: 5)
!6184 = distinct !DILexicalBlock(scope: !6185, file: !908, line: 142, column: 188)
!6185 = distinct !DILexicalBlock(scope: !6165, file: !908, line: 142, column: 183)
!6186 = !DILocation(line: 142, column: 196, scope: !6183)
!6187 = !DILocation(line: 142, column: 199, scope: !6183)
!6188 = !DILocation(line: 142, column: 194, scope: !6183)
!6189 = !DILocalVariable(name: "checksort", scope: !6190, file: !908, line: 142, type: !889)
!6190 = distinct !DILexicalBlock(scope: !6184, file: !908, line: 142, column: 203)
!6191 = !DILocation(line: 142, column: 209, scope: !6190)
!6192 = !DILocation(line: 142, column: 209, scope: !6193)
!6193 = !DILexicalBlockFile(scope: !6190, file: !908, discriminator: 6)
!6194 = !DILocalVariable(name: "right", scope: !6190, file: !908, line: 142, type: !3222)
!6195 = !DILocation(line: 142, column: 233, scope: !6190)
!6196 = !DILocation(line: 142, column: 241, scope: !6193)
!6197 = !DILocation(line: 142, column: 244, scope: !6193)
!6198 = !DILocation(line: 142, column: 233, scope: !6193)
!6199 = !DILocalVariable(name: "left", scope: !6190, file: !908, line: 142, type: !3222)
!6200 = !DILocation(line: 142, column: 259, scope: !6190)
!6201 = !DILocation(line: 142, column: 266, scope: !6193)
!6202 = !DILocation(line: 142, column: 271, scope: !6193)
!6203 = !DILocation(line: 142, column: 259, scope: !6193)
!6204 = !DILocalVariable(name: "mid", scope: !6190, file: !908, line: 142, type: !3222)
!6205 = !DILocation(line: 142, column: 286, scope: !6190)
!6206 = !DILocation(line: 142, column: 292, scope: !6193)
!6207 = !DILocation(line: 142, column: 302, scope: !6193)
!6208 = !DILocation(line: 142, column: 306, scope: !6193)
!6209 = !DILocation(line: 142, column: 305, scope: !6193)
!6210 = !DILocation(line: 142, column: 312, scope: !6193)
!6211 = !DILocation(line: 142, column: 298, scope: !6193)
!6212 = !DILocation(line: 142, column: 286, scope: !6193)
!6213 = !DILocation(line: 142, column: 336, scope: !6193)
!6214 = !DILocation(line: 142, column: 343, scope: !6193)
!6215 = !DILocation(line: 142, column: 321, scope: !6193)
!6216 = !DILocation(line: 142, column: 348, scope: !6193)
!6217 = !DILocation(line: 142, column: 374, scope: !6218)
!6218 = !DILexicalBlockFile(scope: !6219, file: !908, discriminator: 7)
!6219 = distinct !DILexicalBlock(scope: !6220, file: !908, line: 142, column: 358)
!6220 = distinct !DILexicalBlock(scope: !6221, file: !908, line: 142, column: 353)
!6221 = distinct !DILexicalBlock(scope: !6190, file: !908, line: 142, column: 321)
!6222 = !DILocation(line: 142, column: 379, scope: !6218)
!6223 = !DILocation(line: 142, column: 358, scope: !6218)
!6224 = !DILocation(line: 142, column: 384, scope: !6218)
!6225 = !DILocation(line: 142, column: 389, scope: !6226)
!6226 = !DILexicalBlockFile(scope: !6219, file: !908, discriminator: 8)
!6227 = distinct !{!6227, !6228}
!6228 = !DILocation(line: 142, column: 389, scope: !6219)
!6229 = !DILocalVariable(name: "SWAP_tmp", scope: !6230, file: !908, line: 142, type: !3136)
!6230 = distinct !DILexicalBlock(scope: !6219, file: !908, line: 142, column: 391)
!6231 = !DILocation(line: 142, column: 402, scope: !6230)
!6232 = !DILocation(line: 142, column: 413, scope: !6233)
!6233 = !DILexicalBlockFile(scope: !6230, file: !908, discriminator: 9)
!6234 = !DILocation(line: 142, column: 412, scope: !6233)
!6235 = !DILocation(line: 142, column: 419, scope: !6233)
!6236 = !DILocation(line: 142, column: 425, scope: !6233)
!6237 = !DILocation(line: 142, column: 424, scope: !6233)
!6238 = !DILocation(line: 142, column: 424, scope: !6239)
!6239 = !DILexicalBlockFile(scope: !6233, file: !908, discriminator: 69)
!6240 = !DILocation(line: 142, column: 433, scope: !6233)
!6241 = !DILocation(line: 142, column: 440, scope: !6233)
!6242 = !DILocation(line: 142, column: 440, scope: !6243)
!6243 = !DILexicalBlockFile(scope: !6233, file: !908, discriminator: 70)
!6244 = !DILocation(line: 142, column: 449, scope: !6233)
!6245 = !DILocation(line: 142, column: 449, scope: !6246)
!6246 = !DILexicalBlockFile(scope: !6230, file: !908, discriminator: 10)
!6247 = !DILocation(line: 142, column: 465, scope: !6248)
!6248 = !DILexicalBlockFile(scope: !6219, file: !908, discriminator: 11)
!6249 = distinct !{!6249, !6250}
!6250 = !DILocation(line: 142, column: 465, scope: !6219)
!6251 = !DILocalVariable(name: "SWAP_tmp", scope: !6252, file: !908, line: 142, type: !3136)
!6252 = distinct !DILexicalBlock(scope: !6219, file: !908, line: 142, column: 467)
!6253 = !DILocation(line: 142, column: 478, scope: !6252)
!6254 = !DILocation(line: 142, column: 489, scope: !6255)
!6255 = !DILexicalBlockFile(scope: !6252, file: !908, discriminator: 12)
!6256 = !DILocation(line: 142, column: 488, scope: !6255)
!6257 = !DILocation(line: 142, column: 495, scope: !6255)
!6258 = !DILocation(line: 142, column: 501, scope: !6255)
!6259 = !DILocation(line: 142, column: 500, scope: !6255)
!6260 = !DILocation(line: 142, column: 500, scope: !6261)
!6261 = !DILexicalBlockFile(scope: !6255, file: !908, discriminator: 71)
!6262 = !DILocation(line: 142, column: 509, scope: !6255)
!6263 = !DILocation(line: 142, column: 516, scope: !6255)
!6264 = !DILocation(line: 142, column: 516, scope: !6265)
!6265 = !DILexicalBlockFile(scope: !6255, file: !908, discriminator: 72)
!6266 = !DILocation(line: 142, column: 525, scope: !6255)
!6267 = !DILocation(line: 142, column: 536, scope: !6268)
!6268 = !DILexicalBlockFile(scope: !6220, file: !908, discriminator: 13)
!6269 = !DILocation(line: 142, column: 561, scope: !6270)
!6270 = !DILexicalBlockFile(scope: !6271, file: !908, discriminator: 14)
!6271 = distinct !DILexicalBlock(scope: !6272, file: !908, line: 142, column: 546)
!6272 = distinct !DILexicalBlock(scope: !6221, file: !908, line: 142, column: 541)
!6273 = !DILocation(line: 142, column: 568, scope: !6270)
!6274 = !DILocation(line: 142, column: 546, scope: !6270)
!6275 = !DILocation(line: 142, column: 573, scope: !6270)
!6276 = !DILocation(line: 142, column: 578, scope: !6277)
!6277 = !DILexicalBlockFile(scope: !6271, file: !908, discriminator: 15)
!6278 = distinct !{!6278, !6279}
!6279 = !DILocation(line: 142, column: 578, scope: !6271)
!6280 = !DILocalVariable(name: "SWAP_tmp", scope: !6281, file: !908, line: 142, type: !3136)
!6281 = distinct !DILexicalBlock(scope: !6271, file: !908, line: 142, column: 580)
!6282 = !DILocation(line: 142, column: 591, scope: !6281)
!6283 = !DILocation(line: 142, column: 602, scope: !6284)
!6284 = !DILexicalBlockFile(scope: !6281, file: !908, discriminator: 16)
!6285 = !DILocation(line: 142, column: 601, scope: !6284)
!6286 = !DILocation(line: 142, column: 608, scope: !6284)
!6287 = !DILocation(line: 142, column: 614, scope: !6284)
!6288 = !DILocation(line: 142, column: 613, scope: !6284)
!6289 = !DILocation(line: 142, column: 613, scope: !6290)
!6290 = !DILexicalBlockFile(scope: !6284, file: !908, discriminator: 73)
!6291 = !DILocation(line: 142, column: 622, scope: !6284)
!6292 = !DILocation(line: 142, column: 629, scope: !6284)
!6293 = !DILocation(line: 142, column: 629, scope: !6294)
!6294 = !DILexicalBlockFile(scope: !6284, file: !908, discriminator: 74)
!6295 = !DILocation(line: 142, column: 638, scope: !6284)
!6296 = !DILocation(line: 142, column: 638, scope: !6297)
!6297 = !DILexicalBlockFile(scope: !6281, file: !908, discriminator: 17)
!6298 = !DILocation(line: 142, column: 663, scope: !6299)
!6299 = !DILexicalBlockFile(scope: !6271, file: !908, discriminator: 18)
!6300 = !DILocation(line: 142, column: 688, scope: !6301)
!6301 = !DILexicalBlockFile(scope: !6302, file: !908, discriminator: 19)
!6302 = distinct !DILexicalBlock(scope: !6190, file: !908, line: 142, column: 673)
!6303 = !DILocation(line: 142, column: 693, scope: !6301)
!6304 = !DILocation(line: 142, column: 673, scope: !6301)
!6305 = !DILocation(line: 142, column: 698, scope: !6301)
!6306 = !DILocation(line: 142, column: 704, scope: !6307)
!6307 = !DILexicalBlockFile(scope: !6308, file: !908, discriminator: 20)
!6308 = distinct !DILexicalBlock(scope: !6302, file: !908, line: 142, column: 702)
!6309 = distinct !{!6309, !6310}
!6310 = !DILocation(line: 142, column: 704, scope: !6308)
!6311 = !DILocalVariable(name: "SWAP_tmp", scope: !6312, file: !908, line: 142, type: !3136)
!6312 = distinct !DILexicalBlock(scope: !6308, file: !908, line: 142, column: 706)
!6313 = !DILocation(line: 142, column: 717, scope: !6312)
!6314 = !DILocation(line: 142, column: 728, scope: !6315)
!6315 = !DILexicalBlockFile(scope: !6312, file: !908, discriminator: 21)
!6316 = !DILocation(line: 142, column: 727, scope: !6315)
!6317 = !DILocation(line: 142, column: 734, scope: !6315)
!6318 = !DILocation(line: 142, column: 740, scope: !6315)
!6319 = !DILocation(line: 142, column: 739, scope: !6315)
!6320 = !DILocation(line: 142, column: 739, scope: !6321)
!6321 = !DILexicalBlockFile(scope: !6315, file: !908, discriminator: 75)
!6322 = !DILocation(line: 142, column: 746, scope: !6315)
!6323 = !DILocation(line: 142, column: 751, scope: !6315)
!6324 = !DILocation(line: 142, column: 751, scope: !6325)
!6325 = !DILexicalBlockFile(scope: !6315, file: !908, discriminator: 76)
!6326 = !DILocation(line: 142, column: 760, scope: !6315)
!6327 = !DILocation(line: 142, column: 780, scope: !6328)
!6328 = !DILexicalBlockFile(scope: !6308, file: !908, discriminator: 22)
!6329 = !DILocation(line: 142, column: 784, scope: !6328)
!6330 = !DILocation(line: 142, column: 789, scope: !6331)
!6331 = !DILexicalBlockFile(scope: !6332, file: !908, discriminator: 23)
!6332 = distinct !DILexicalBlock(scope: !6190, file: !908, line: 142, column: 789)
!6333 = !DILocation(line: 142, column: 798, scope: !6331)
!6334 = !DILocation(line: 142, column: 801, scope: !6331)
!6335 = !DILocation(line: 142, column: 795, scope: !6331)
!6336 = !DILocation(line: 142, column: 805, scope: !6337)
!6337 = !DILexicalBlockFile(scope: !6332, file: !908, discriminator: 24)
!6338 = !DILocation(line: 142, column: 812, scope: !6339)
!6339 = !DILexicalBlockFile(scope: !6190, file: !908, discriminator: 25)
!6340 = distinct !{!6340, !6341}
!6341 = !DILocation(line: 142, column: 812, scope: !6190)
!6342 = !DILocalVariable(name: "SWAP_tmp", scope: !6343, file: !908, line: 142, type: !3136)
!6343 = distinct !DILexicalBlock(scope: !6190, file: !908, line: 142, column: 814)
!6344 = !DILocation(line: 142, column: 825, scope: !6343)
!6345 = !DILocation(line: 142, column: 836, scope: !6346)
!6346 = !DILexicalBlockFile(scope: !6343, file: !908, discriminator: 26)
!6347 = !DILocation(line: 142, column: 835, scope: !6346)
!6348 = !DILocation(line: 142, column: 842, scope: !6346)
!6349 = !DILocation(line: 142, column: 847, scope: !6346)
!6350 = !DILocation(line: 142, column: 847, scope: !6351)
!6351 = !DILexicalBlockFile(scope: !6346, file: !908, discriminator: 77)
!6352 = !DILocation(line: 142, column: 856, scope: !6346)
!6353 = !DILocation(line: 142, column: 865, scope: !6346)
!6354 = !DILocation(line: 142, column: 865, scope: !6355)
!6355 = !DILexicalBlockFile(scope: !6346, file: !908, discriminator: 78)
!6356 = !DILocation(line: 142, column: 874, scope: !6346)
!6357 = !DILocation(line: 142, column: 885, scope: !6358)
!6358 = !DILexicalBlockFile(scope: !6190, file: !908, discriminator: 27)
!6359 = !DILocation(line: 142, column: 891, scope: !6360)
!6360 = !DILexicalBlockFile(scope: !6190, file: !908, discriminator: 28)
!6361 = !DILocation(line: 142, column: 899, scope: !6360)
!6362 = !DILocation(line: 142, column: 896, scope: !6360)
!6363 = !DILocation(line: 142, column: 885, scope: !6360)
!6364 = !DILocation(line: 142, column: 907, scope: !6365)
!6365 = !DILexicalBlockFile(scope: !6366, file: !908, discriminator: 29)
!6366 = distinct !DILexicalBlock(scope: !6190, file: !908, line: 142, column: 905)
!6367 = !DILocation(line: 142, column: 913, scope: !6368)
!6368 = !DILexicalBlockFile(scope: !6366, file: !908, discriminator: 30)
!6369 = !DILocation(line: 142, column: 919, scope: !6368)
!6370 = !DILocation(line: 142, column: 917, scope: !6368)
!6371 = !DILocation(line: 142, column: 925, scope: !6368)
!6372 = !DILocation(line: 142, column: 943, scope: !6373)
!6373 = !DILexicalBlockFile(scope: !6366, file: !908, discriminator: 31)
!6374 = !DILocation(line: 142, column: 949, scope: !6373)
!6375 = !DILocation(line: 142, column: 952, scope: !6373)
!6376 = !DILocation(line: 142, column: 928, scope: !6373)
!6377 = !DILocation(line: 142, column: 956, scope: !6373)
!6378 = !DILocation(line: 142, column: 907, scope: !6379)
!6379 = !DILexicalBlockFile(scope: !6366, file: !908, discriminator: 32)
!6380 = !DILocation(line: 142, column: 965, scope: !6381)
!6381 = !DILexicalBlockFile(scope: !6366, file: !908, discriminator: 33)
!6382 = !DILocation(line: 142, column: 907, scope: !6381)
!6383 = distinct !{!6383, !6384}
!6384 = !DILocation(line: 142, column: 907, scope: !6366)
!6385 = !DILocation(line: 142, column: 969, scope: !6386)
!6386 = !DILexicalBlockFile(scope: !6366, file: !908, discriminator: 34)
!6387 = !DILocation(line: 142, column: 975, scope: !6388)
!6388 = !DILexicalBlockFile(scope: !6366, file: !908, discriminator: 35)
!6389 = !DILocation(line: 142, column: 981, scope: !6388)
!6390 = !DILocation(line: 142, column: 979, scope: !6388)
!6391 = !DILocation(line: 142, column: 987, scope: !6388)
!6392 = !DILocation(line: 142, column: 1005, scope: !6393)
!6393 = !DILexicalBlockFile(scope: !6366, file: !908, discriminator: 36)
!6394 = !DILocation(line: 142, column: 1012, scope: !6393)
!6395 = !DILocation(line: 142, column: 1015, scope: !6393)
!6396 = !DILocation(line: 142, column: 990, scope: !6393)
!6397 = !DILocation(line: 142, column: 1019, scope: !6393)
!6398 = !DILocation(line: 142, column: 969, scope: !6399)
!6399 = !DILexicalBlockFile(scope: !6366, file: !908, discriminator: 37)
!6400 = !DILocation(line: 142, column: 1029, scope: !6401)
!6401 = !DILexicalBlockFile(scope: !6366, file: !908, discriminator: 38)
!6402 = !DILocation(line: 142, column: 969, scope: !6401)
!6403 = distinct !{!6403, !6404}
!6404 = !DILocation(line: 142, column: 969, scope: !6366)
!6405 = !DILocation(line: 142, column: 1036, scope: !6406)
!6406 = !DILexicalBlockFile(scope: !6407, file: !908, discriminator: 39)
!6407 = distinct !DILexicalBlock(scope: !6366, file: !908, line: 142, column: 1036)
!6408 = !DILocation(line: 142, column: 1044, scope: !6406)
!6409 = !DILocation(line: 142, column: 1041, scope: !6406)
!6410 = !DILocation(line: 142, column: 1052, scope: !6411)
!6411 = !DILexicalBlockFile(scope: !6412, file: !908, discriminator: 40)
!6412 = distinct !DILexicalBlock(scope: !6407, file: !908, line: 142, column: 1050)
!6413 = distinct !{!6413, !6414}
!6414 = !DILocation(line: 142, column: 1052, scope: !6412)
!6415 = !DILocalVariable(name: "SWAP_tmp", scope: !6416, file: !908, line: 142, type: !3136)
!6416 = distinct !DILexicalBlock(scope: !6412, file: !908, line: 142, column: 1054)
!6417 = !DILocation(line: 142, column: 1065, scope: !6416)
!6418 = !DILocation(line: 142, column: 1076, scope: !6419)
!6419 = !DILexicalBlockFile(scope: !6416, file: !908, discriminator: 41)
!6420 = !DILocation(line: 142, column: 1075, scope: !6419)
!6421 = !DILocation(line: 142, column: 1084, scope: !6419)
!6422 = !DILocation(line: 142, column: 1092, scope: !6419)
!6423 = !DILocation(line: 142, column: 1091, scope: !6419)
!6424 = !DILocation(line: 142, column: 1091, scope: !6425)
!6425 = !DILexicalBlockFile(scope: !6419, file: !908, discriminator: 79)
!6426 = !DILocation(line: 142, column: 1099, scope: !6419)
!6427 = !DILocation(line: 142, column: 1105, scope: !6419)
!6428 = !DILocation(line: 142, column: 1105, scope: !6429)
!6429 = !DILexicalBlockFile(scope: !6419, file: !908, discriminator: 80)
!6430 = !DILocation(line: 142, column: 1114, scope: !6419)
!6431 = !DILocation(line: 142, column: 1129, scope: !6432)
!6432 = !DILexicalBlockFile(scope: !6412, file: !908, discriminator: 42)
!6433 = !DILocation(line: 142, column: 1138, scope: !6432)
!6434 = !DILocation(line: 142, column: 1142, scope: !6432)
!6435 = !DILocation(line: 142, column: 885, scope: !6436)
!6436 = !DILexicalBlockFile(scope: !6190, file: !908, discriminator: 43)
!6437 = distinct !{!6437, !6438}
!6438 = !DILocation(line: 142, column: 885, scope: !6190)
!6439 = !DILocation(line: 142, column: 1146, scope: !6440)
!6440 = !DILexicalBlockFile(scope: !6190, file: !908, discriminator: 44)
!6441 = distinct !{!6441, !6442}
!6442 = !DILocation(line: 142, column: 1146, scope: !6190)
!6443 = !DILocalVariable(name: "SWAP_tmp", scope: !6444, file: !908, line: 142, type: !3136)
!6444 = distinct !DILexicalBlock(scope: !6190, file: !908, line: 142, column: 1148)
!6445 = !DILocation(line: 142, column: 1159, scope: !6444)
!6446 = !DILocation(line: 142, column: 1170, scope: !6447)
!6447 = !DILexicalBlockFile(scope: !6444, file: !908, discriminator: 45)
!6448 = !DILocation(line: 142, column: 1169, scope: !6447)
!6449 = !DILocation(line: 142, column: 1177, scope: !6447)
!6450 = !DILocation(line: 142, column: 1183, scope: !6447)
!6451 = !DILocation(line: 142, column: 1183, scope: !6452)
!6452 = !DILexicalBlockFile(scope: !6447, file: !908, discriminator: 81)
!6453 = !DILocation(line: 142, column: 1192, scope: !6447)
!6454 = !DILocation(line: 142, column: 1201, scope: !6447)
!6455 = !DILocation(line: 142, column: 1201, scope: !6456)
!6456 = !DILexicalBlockFile(scope: !6447, file: !908, discriminator: 82)
!6457 = !DILocation(line: 142, column: 1210, scope: !6447)
!6458 = !DILocation(line: 142, column: 1224, scope: !6459)
!6459 = !DILexicalBlockFile(scope: !6460, file: !908, discriminator: 46)
!6460 = distinct !DILexicalBlock(scope: !6190, file: !908, line: 142, column: 1224)
!6461 = !DILocation(line: 142, column: 1234, scope: !6459)
!6462 = !DILocation(line: 142, column: 1238, scope: !6463)
!6463 = !DILexicalBlockFile(scope: !6460, file: !908, discriminator: 47)
!6464 = !DILocation(line: 142, column: 1245, scope: !6463)
!6465 = !DILocation(line: 142, column: 1249, scope: !6463)
!6466 = !DILocation(line: 142, column: 1242, scope: !6463)
!6467 = !DILocation(line: 142, column: 1252, scope: !6463)
!6468 = !DILocation(line: 142, column: 1255, scope: !6469)
!6469 = !DILexicalBlockFile(scope: !6460, file: !908, discriminator: 48)
!6470 = !DILocation(line: 142, column: 1262, scope: !6469)
!6471 = !DILocation(line: 142, column: 1259, scope: !6469)
!6472 = !DILocation(line: 142, column: 1224, scope: !6469)
!6473 = !DILocation(line: 142, column: 1275, scope: !6474)
!6474 = !DILexicalBlockFile(scope: !6475, file: !908, discriminator: 49)
!6475 = distinct !DILexicalBlock(scope: !6460, file: !908, line: 142, column: 1268)
!6476 = !DILocation(line: 142, column: 1273, scope: !6474)
!6477 = !DILocation(line: 142, column: 1282, scope: !6474)
!6478 = !DILocation(line: 142, column: 1288, scope: !6479)
!6479 = !DILexicalBlockFile(scope: !6475, file: !908, discriminator: 50)
!6480 = !DILocation(line: 142, column: 1292, scope: !6479)
!6481 = !DILocation(line: 142, column: 1291, scope: !6479)
!6482 = !DILocation(line: 142, column: 1296, scope: !6479)
!6483 = !DILocation(line: 142, column: 1314, scope: !6484)
!6484 = !DILexicalBlockFile(scope: !6475, file: !908, discriminator: 51)
!6485 = !DILocation(line: 142, column: 1319, scope: !6484)
!6486 = !DILocation(line: 142, column: 1322, scope: !6484)
!6487 = !DILocation(line: 142, column: 1299, scope: !6484)
!6488 = !DILocation(line: 142, column: 1326, scope: !6484)
!6489 = !DILocation(line: 142, column: 1282, scope: !6490)
!6490 = !DILexicalBlockFile(scope: !6475, file: !908, discriminator: 52)
!6491 = !DILocation(line: 142, column: 1335, scope: !6492)
!6492 = !DILexicalBlockFile(scope: !6475, file: !908, discriminator: 53)
!6493 = !DILocation(line: 142, column: 1282, scope: !6492)
!6494 = distinct !{!6494, !6495}
!6495 = !DILocation(line: 142, column: 1282, scope: !6475)
!6496 = !DILocation(line: 142, column: 1342, scope: !6497)
!6497 = !DILexicalBlockFile(scope: !6498, file: !908, discriminator: 54)
!6498 = distinct !DILexicalBlock(scope: !6475, file: !908, line: 142, column: 1342)
!6499 = !DILocation(line: 142, column: 1347, scope: !6497)
!6500 = !DILocation(line: 142, column: 1345, scope: !6497)
!6501 = !DILocation(line: 142, column: 1352, scope: !6502)
!6502 = !DILexicalBlockFile(scope: !6498, file: !908, discriminator: 55)
!6503 = !DILocation(line: 142, column: 1359, scope: !6504)
!6504 = !DILexicalBlockFile(scope: !6475, file: !908, discriminator: 56)
!6505 = !DILocation(line: 142, column: 1364, scope: !6506)
!6506 = !DILexicalBlockFile(scope: !6507, file: !908, discriminator: 57)
!6507 = distinct !DILexicalBlock(scope: !6190, file: !908, line: 142, column: 1364)
!6508 = !DILocation(line: 142, column: 1368, scope: !6506)
!6509 = !DILocation(line: 142, column: 1367, scope: !6506)
!6510 = !DILocation(line: 142, column: 1375, scope: !6506)
!6511 = !DILocation(line: 142, column: 1380, scope: !6506)
!6512 = !DILocation(line: 142, column: 1379, scope: !6506)
!6513 = !DILocation(line: 142, column: 1373, scope: !6506)
!6514 = !DILocation(line: 142, column: 1403, scope: !6515)
!6515 = !DILexicalBlockFile(scope: !6516, file: !908, discriminator: 58)
!6516 = distinct !DILexicalBlock(scope: !6507, file: !908, line: 142, column: 1386)
!6517 = !DILocation(line: 142, column: 1394, scope: !6515)
!6518 = !DILocation(line: 142, column: 1388, scope: !6515)
!6519 = !DILocation(line: 142, column: 1401, scope: !6515)
!6520 = !DILocation(line: 142, column: 1426, scope: !6515)
!6521 = !DILocation(line: 142, column: 1418, scope: !6515)
!6522 = !DILocation(line: 142, column: 1410, scope: !6515)
!6523 = !DILocation(line: 142, column: 1424, scope: !6515)
!6524 = !DILocation(line: 142, column: 1441, scope: !6515)
!6525 = !DILocation(line: 142, column: 1445, scope: !6515)
!6526 = !DILocation(line: 142, column: 1439, scope: !6515)
!6527 = !DILocation(line: 142, column: 1449, scope: !6515)
!6528 = !DILocation(line: 142, column: 1471, scope: !6529)
!6529 = !DILexicalBlockFile(scope: !6530, file: !908, discriminator: 59)
!6530 = distinct !DILexicalBlock(scope: !6507, file: !908, line: 142, column: 1454)
!6531 = !DILocation(line: 142, column: 1475, scope: !6529)
!6532 = !DILocation(line: 142, column: 1462, scope: !6529)
!6533 = !DILocation(line: 142, column: 1456, scope: !6529)
!6534 = !DILocation(line: 142, column: 1469, scope: !6529)
!6535 = !DILocation(line: 142, column: 1495, scope: !6529)
!6536 = !DILocation(line: 142, column: 1487, scope: !6529)
!6537 = !DILocation(line: 142, column: 1479, scope: !6529)
!6538 = !DILocation(line: 142, column: 1493, scope: !6529)
!6539 = !DILocation(line: 142, column: 1506, scope: !6529)
!6540 = !DILocation(line: 142, column: 1504, scope: !6529)
!6541 = !DILocation(line: 142, column: 1515, scope: !6542)
!6542 = !DILexicalBlockFile(scope: !6190, file: !908, discriminator: 60)
!6543 = !DILocation(line: 142, column: 1540, scope: !6544)
!6544 = !DILexicalBlockFile(scope: !6545, file: !908, discriminator: 61)
!6545 = distinct !DILexicalBlock(scope: !6546, file: !908, line: 142, column: 1525)
!6546 = distinct !DILexicalBlock(scope: !6184, file: !908, line: 142, column: 1520)
!6547 = !DILocation(line: 142, column: 1547, scope: !6544)
!6548 = !DILocation(line: 142, column: 1525, scope: !6544)
!6549 = !DILocation(line: 142, column: 1552, scope: !6544)
!6550 = !DILocation(line: 142, column: 1557, scope: !6551)
!6551 = !DILexicalBlockFile(scope: !6545, file: !908, discriminator: 62)
!6552 = distinct !{!6552, !6553}
!6553 = !DILocation(line: 142, column: 1557, scope: !6545)
!6554 = !DILocalVariable(name: "SWAP_tmp", scope: !6555, file: !908, line: 142, type: !3136)
!6555 = distinct !DILexicalBlock(scope: !6545, file: !908, line: 142, column: 1559)
!6556 = !DILocation(line: 142, column: 1570, scope: !6555)
!6557 = !DILocation(line: 142, column: 1581, scope: !6558)
!6558 = !DILexicalBlockFile(scope: !6555, file: !908, discriminator: 63)
!6559 = !DILocation(line: 142, column: 1580, scope: !6558)
!6560 = !DILocation(line: 142, column: 1587, scope: !6558)
!6561 = !DILocation(line: 142, column: 1593, scope: !6558)
!6562 = !DILocation(line: 142, column: 1592, scope: !6558)
!6563 = !DILocation(line: 142, column: 1592, scope: !6564)
!6564 = !DILexicalBlockFile(scope: !6558, file: !908, discriminator: 83)
!6565 = !DILocation(line: 142, column: 1601, scope: !6558)
!6566 = !DILocation(line: 142, column: 1608, scope: !6558)
!6567 = !DILocation(line: 142, column: 1608, scope: !6568)
!6568 = !DILexicalBlockFile(scope: !6558, file: !908, discriminator: 84)
!6569 = !DILocation(line: 142, column: 1617, scope: !6558)
!6570 = !DILocation(line: 142, column: 1617, scope: !6571)
!6571 = !DILexicalBlockFile(scope: !6555, file: !908, discriminator: 64)
!6572 = !DILocation(line: 142, column: 1628, scope: !6573)
!6573 = !DILexicalBlockFile(scope: !6546, file: !908, discriminator: 65)
!6574 = !DILocation(line: 142, column: 165, scope: !6575)
!6575 = !DILexicalBlockFile(scope: !6165, file: !908, discriminator: 66)
!6576 = distinct !{!6576, !6577}
!6577 = !DILocation(line: 142, column: 165, scope: !6165)
!6578 = !DILocation(line: 142, column: 88, scope: !6579)
!6579 = !DILexicalBlockFile(scope: !6146, file: !908, discriminator: 67)
!6580 = distinct !{!6580, !6581}
!6581 = !DILocation(line: 142, column: 88, scope: !6146)
!6582 = !DILocation(line: 142, column: 1640, scope: !6583)
!6583 = !DILexicalBlockFile(scope: !6146, file: !908, discriminator: 68)
!6584 = !DILocation(line: 144, column: 10, scope: !6082)
!6585 = !DILocation(line: 145, column: 12, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6082, file: !908, line: 145, column: 5)
!6587 = !DILocation(line: 145, column: 10, scope: !6586)
!6588 = !DILocation(line: 145, column: 20, scope: !6589)
!6589 = !DILexicalBlockFile(scope: !6590, file: !908, discriminator: 1)
!6590 = distinct !DILexicalBlock(scope: !6586, file: !908, line: 145, column: 5)
!6591 = !DILocation(line: 145, column: 22, scope: !6589)
!6592 = !DILocation(line: 145, column: 5, scope: !6589)
!6593 = !DILocation(line: 146, column: 20, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6590, file: !908, line: 145, column: 33)
!6595 = !DILocation(line: 146, column: 37, scope: !6594)
!6596 = !DILocation(line: 146, column: 34, scope: !6594)
!6597 = !DILocation(line: 146, column: 40, scope: !6594)
!6598 = !DILocation(line: 146, column: 32, scope: !6594)
!6599 = !DILocation(line: 146, column: 25, scope: !6594)
!6600 = !DILocation(line: 146, column: 15, scope: !6594)
!6601 = !DILocation(line: 146, column: 9, scope: !6594)
!6602 = !DILocation(line: 146, column: 18, scope: !6594)
!6603 = !DILocation(line: 147, column: 22, scope: !6594)
!6604 = !DILocation(line: 147, column: 19, scope: !6594)
!6605 = !DILocation(line: 147, column: 25, scope: !6594)
!6606 = !DILocation(line: 147, column: 14, scope: !6594)
!6607 = !DILocation(line: 147, column: 9, scope: !6594)
!6608 = !DILocation(line: 147, column: 17, scope: !6594)
!6609 = !DILocation(line: 148, column: 22, scope: !6594)
!6610 = !DILocation(line: 148, column: 19, scope: !6594)
!6611 = !DILocation(line: 148, column: 25, scope: !6594)
!6612 = !DILocation(line: 148, column: 14, scope: !6594)
!6613 = !DILocation(line: 148, column: 9, scope: !6594)
!6614 = !DILocation(line: 148, column: 17, scope: !6594)
!6615 = !DILocation(line: 149, column: 36, scope: !6594)
!6616 = !DILocation(line: 149, column: 33, scope: !6594)
!6617 = !DILocation(line: 149, column: 39, scope: !6594)
!6618 = !DILocation(line: 149, column: 43, scope: !6594)
!6619 = !DILocation(line: 149, column: 29, scope: !6594)
!6620 = !DILocation(line: 149, column: 14, scope: !6594)
!6621 = !DILocation(line: 150, column: 5, scope: !6594)
!6622 = !DILocation(line: 145, column: 29, scope: !6623)
!6623 = !DILexicalBlockFile(scope: !6590, file: !908, discriminator: 2)
!6624 = !DILocation(line: 145, column: 5, scope: !6623)
!6625 = distinct !{!6625, !6626}
!6626 = !DILocation(line: 145, column: 5, scope: !6082)
!6627 = !DILocation(line: 152, column: 17, scope: !6082)
!6628 = !DILocation(line: 152, column: 5, scope: !6082)
!6629 = !DILocation(line: 153, column: 31, scope: !6082)
!6630 = !DILocation(line: 153, column: 38, scope: !6082)
!6631 = !DILocation(line: 153, column: 47, scope: !6082)
!6632 = !DILocation(line: 153, column: 37, scope: !6082)
!6633 = !DILocation(line: 153, column: 52, scope: !6082)
!6634 = !DILocation(line: 153, column: 37, scope: !6635)
!6635 = !DILexicalBlockFile(scope: !6082, file: !908, discriminator: 1)
!6636 = !DILocation(line: 153, column: 69, scope: !6637)
!6637 = !DILexicalBlockFile(scope: !6082, file: !908, discriminator: 2)
!6638 = !DILocation(line: 153, column: 78, scope: !6637)
!6639 = !DILocation(line: 153, column: 68, scope: !6637)
!6640 = !DILocation(line: 153, column: 37, scope: !6637)
!6641 = !DILocation(line: 153, column: 37, scope: !6642)
!6642 = !DILexicalBlockFile(scope: !6082, file: !908, discriminator: 3)
!6643 = !DILocation(line: 154, column: 31, scope: !6082)
!6644 = !DILocation(line: 155, column: 31, scope: !6082)
!6645 = !DILocation(line: 156, column: 31, scope: !6082)
!6646 = !DILocation(line: 153, column: 12, scope: !6642)
!6647 = !DILocation(line: 153, column: 5, scope: !6642)
!6648 = !DILocation(line: 157, column: 1, scope: !6082)
!6649 = distinct !DISubprogram(name: "init_get_bits8", scope: !1945, file: !1945, line: 650, type: !6650, isLocal: true, isDefinition: true, scopeLine: 652, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1635)
!6650 = !DISubroutineType(types: !6651)
!6651 = !{!889, !3723, !899, !889}
!6652 = !DILocalVariable(name: "s", arg: 1, scope: !6649, file: !1945, line: 650, type: !3723)
!6653 = !DILocation(line: 650, column: 49, scope: !6649)
!6654 = !DILocalVariable(name: "buffer", arg: 2, scope: !6649, file: !1945, line: 650, type: !899)
!6655 = !DILocation(line: 650, column: 67, scope: !6649)
!6656 = !DILocalVariable(name: "byte_size", arg: 3, scope: !6649, file: !1945, line: 651, type: !889)
!6657 = !DILocation(line: 651, column: 38, scope: !6649)
!6658 = !DILocation(line: 653, column: 9, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !6649, file: !1945, line: 653, column: 9)
!6660 = !DILocation(line: 653, column: 19, scope: !6659)
!6661 = !DILocation(line: 653, column: 36, scope: !6659)
!6662 = !DILocation(line: 653, column: 39, scope: !6663)
!6663 = !DILexicalBlockFile(scope: !6659, file: !1945, discriminator: 1)
!6664 = !DILocation(line: 653, column: 49, scope: !6663)
!6665 = !DILocation(line: 653, column: 9, scope: !6663)
!6666 = !DILocation(line: 654, column: 19, scope: !6659)
!6667 = !DILocation(line: 654, column: 9, scope: !6659)
!6668 = !DILocation(line: 655, column: 26, scope: !6649)
!6669 = !DILocation(line: 655, column: 29, scope: !6649)
!6670 = !DILocation(line: 655, column: 37, scope: !6649)
!6671 = !DILocation(line: 655, column: 47, scope: !6649)
!6672 = !DILocation(line: 655, column: 12, scope: !6649)
!6673 = !DILocation(line: 655, column: 5, scope: !6649)
!6674 = distinct !DISubprogram(name: "build_huffman", scope: !908, file: !908, line: 476, type: !6675, isLocal: true, isDefinition: true, scopeLine: 477, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1635)
!6675 = !DISubroutineType(types: !6676)
!6676 = !{!889, !1001, !3723, !889}
!6677 = !DILocalVariable(name: "s", arg: 1, scope: !6678, file: !1945, line: 412, type: !3723)
!6678 = distinct !DISubprogram(name: "get_bitsz", scope: !1945, file: !1945, line: 412, type: !6679, isLocal: true, isDefinition: true, scopeLine: 413, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1635)
!6679 = !DISubroutineType(types: !6680)
!6680 = !{!889, !3723, !889}
!6681 = !DILocation(line: 412, column: 75, scope: !6678, inlinedAt: !6682)
!6682 = distinct !DILocation(line: 485, column: 17, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6674, file: !908, line: 482, column: 38)
!6684 = !DILocalVariable(name: "n", arg: 2, scope: !6678, file: !1945, line: 412, type: !889)
!6685 = !DILocation(line: 412, column: 82, scope: !6678, inlinedAt: !6682)
!6686 = !DILocalVariable(name: "avctx", arg: 1, scope: !6674, file: !908, line: 476, type: !1001)
!6687 = !DILocation(line: 476, column: 42, scope: !6674)
!6688 = !DILocalVariable(name: "gbit", arg: 2, scope: !6674, file: !908, line: 476, type: !3723)
!6689 = !DILocation(line: 476, column: 64, scope: !6674)
!6690 = !DILocalVariable(name: "max", arg: 3, scope: !6674, file: !908, line: 476, type: !889)
!6691 = !DILocation(line: 476, column: 74, scope: !6674)
!6692 = !DILocalVariable(name: "s", scope: !6674, file: !908, line: 478, type: !1640)
!6693 = !DILocation(line: 478, column: 22, scope: !6674)
!6694 = !DILocation(line: 478, column: 26, scope: !6674)
!6695 = !DILocation(line: 478, column: 33, scope: !6674)
!6696 = !DILocalVariable(name: "i", scope: !6674, file: !908, line: 479, type: !889)
!6697 = !DILocation(line: 479, column: 9, scope: !6674)
!6698 = !DILocalVariable(name: "j", scope: !6674, file: !908, line: 479, type: !889)
!6699 = !DILocation(line: 479, column: 16, scope: !6674)
!6700 = !DILocalVariable(name: "k", scope: !6674, file: !908, line: 479, type: !889)
!6701 = !DILocation(line: 479, column: 23, scope: !6674)
!6702 = !DILocation(line: 481, column: 12, scope: !6674)
!6703 = !DILocation(line: 481, column: 15, scope: !6674)
!6704 = !DILocation(line: 481, column: 5, scope: !6674)
!6705 = !DILocation(line: 482, column: 5, scope: !6674)
!6706 = !DILocation(line: 482, column: 26, scope: !6707)
!6707 = !DILexicalBlockFile(scope: !6674, file: !908, discriminator: 1)
!6708 = !DILocation(line: 482, column: 12, scope: !6707)
!6709 = !DILocation(line: 482, column: 32, scope: !6707)
!6710 = !DILocation(line: 482, column: 5, scope: !6707)
!6711 = !DILocalVariable(name: "b", scope: !6683, file: !908, line: 483, type: !889)
!6712 = !DILocation(line: 483, column: 13, scope: !6683)
!6713 = !DILocation(line: 483, column: 26, scope: !6683)
!6714 = !DILocation(line: 483, column: 17, scope: !6683)
!6715 = !DILocalVariable(name: "x", scope: !6683, file: !908, line: 484, type: !889)
!6716 = !DILocation(line: 484, column: 13, scope: !6683)
!6717 = !DILocation(line: 484, column: 26, scope: !6683)
!6718 = !DILocation(line: 484, column: 17, scope: !6683)
!6719 = !DILocalVariable(name: "l", scope: !6683, file: !908, line: 485, type: !889)
!6720 = !DILocation(line: 485, column: 13, scope: !6683)
!6721 = !DILocation(line: 485, column: 27, scope: !6683)
!6722 = !DILocation(line: 485, column: 33, scope: !6683)
!6723 = !DILocation(line: 485, column: 35, scope: !6683)
!6724 = !DILocation(line: 485, column: 17, scope: !6683)
!6725 = !DILocation(line: 414, column: 12, scope: !6678, inlinedAt: !6682)
!6726 = !DILocation(line: 414, column: 25, scope: !6727, inlinedAt: !6682)
!6727 = !DILexicalBlockFile(scope: !6678, file: !1945, discriminator: 1)
!6728 = !DILocation(line: 414, column: 28, scope: !6727, inlinedAt: !6682)
!6729 = !DILocation(line: 414, column: 16, scope: !6727, inlinedAt: !6682)
!6730 = !DILocation(line: 414, column: 12, scope: !6727, inlinedAt: !6682)
!6731 = !DILocation(line: 414, column: 12, scope: !6732, inlinedAt: !6682)
!6732 = !DILexicalBlockFile(scope: !6678, file: !1945, discriminator: 2)
!6733 = !DILocation(line: 414, column: 12, scope: !6734, inlinedAt: !6682)
!6734 = !DILexicalBlockFile(scope: !6678, file: !1945, discriminator: 3)
!6735 = !DILocation(line: 485, column: 40, scope: !6683)
!6736 = !DILocation(line: 487, column: 16, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6683, file: !908, line: 487, column: 9)
!6738 = !DILocation(line: 487, column: 14, scope: !6737)
!6739 = !DILocation(line: 487, column: 21, scope: !6740)
!6740 = !DILexicalBlockFile(scope: !6741, file: !908, discriminator: 1)
!6741 = distinct !DILexicalBlock(scope: !6737, file: !908, line: 487, column: 9)
!6742 = !DILocation(line: 487, column: 25, scope: !6740)
!6743 = !DILocation(line: 487, column: 23, scope: !6740)
!6744 = !DILocation(line: 487, column: 9, scope: !6740)
!6745 = !DILocation(line: 488, column: 17, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6741, file: !908, line: 488, column: 17)
!6747 = !DILocation(line: 488, column: 21, scope: !6746)
!6748 = !DILocation(line: 488, column: 19, scope: !6746)
!6749 = !DILocation(line: 488, column: 25, scope: !6746)
!6750 = !DILocation(line: 488, column: 23, scope: !6746)
!6751 = !DILocation(line: 488, column: 17, scope: !6741)
!6752 = !DILocation(line: 489, column: 36, scope: !6746)
!6753 = !DILocation(line: 489, column: 27, scope: !6746)
!6754 = !DILocation(line: 489, column: 31, scope: !6746)
!6755 = !DILocation(line: 489, column: 29, scope: !6746)
!6756 = !DILocation(line: 489, column: 17, scope: !6746)
!6757 = !DILocation(line: 489, column: 24, scope: !6746)
!6758 = !DILocation(line: 489, column: 20, scope: !6746)
!6759 = !DILocation(line: 489, column: 34, scope: !6746)
!6760 = !DILocation(line: 488, column: 25, scope: !6761)
!6761 = !DILexicalBlockFile(scope: !6746, file: !908, discriminator: 1)
!6762 = !DILocation(line: 487, column: 29, scope: !6763)
!6763 = !DILexicalBlockFile(scope: !6741, file: !908, discriminator: 2)
!6764 = !DILocation(line: 487, column: 9, scope: !6763)
!6765 = distinct !{!6765, !6766}
!6766 = !DILocation(line: 487, column: 9, scope: !6683)
!6767 = !DILocation(line: 491, column: 14, scope: !6683)
!6768 = !DILocation(line: 491, column: 11, scope: !6683)
!6769 = !DILocation(line: 492, column: 13, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6683, file: !908, line: 492, column: 13)
!6771 = !DILocation(line: 492, column: 18, scope: !6770)
!6772 = !DILocation(line: 492, column: 15, scope: !6770)
!6773 = !DILocation(line: 492, column: 13, scope: !6683)
!6774 = !DILocation(line: 493, column: 15, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6770, file: !908, line: 492, column: 23)
!6776 = !DILocation(line: 494, column: 17, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6775, file: !908, line: 494, column: 17)
!6778 = !DILocation(line: 494, column: 20, scope: !6777)
!6779 = !DILocation(line: 494, column: 39, scope: !6777)
!6780 = !DILocation(line: 494, column: 32, scope: !6777)
!6781 = !DILocation(line: 494, column: 35, scope: !6777)
!6782 = !DILocation(line: 494, column: 50, scope: !6777)
!6783 = !DILocation(line: 494, column: 43, scope: !6777)
!6784 = !DILocation(line: 494, column: 46, scope: !6777)
!6785 = !DILocation(line: 494, column: 17, scope: !6775)
!6786 = !DILocation(line: 495, column: 24, scope: !6787)
!6787 = distinct !DILexicalBlock(scope: !6777, file: !908, line: 494, column: 55)
!6788 = !DILocation(line: 495, column: 17, scope: !6787)
!6789 = !DILocation(line: 496, column: 17, scope: !6787)
!6790 = !DILocation(line: 498, column: 14, scope: !6775)
!6791 = !DILocation(line: 499, column: 17, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6775, file: !908, line: 499, column: 17)
!6793 = !DILocation(line: 499, column: 22, scope: !6792)
!6794 = !DILocation(line: 499, column: 25, scope: !6792)
!6795 = !DILocation(line: 499, column: 19, scope: !6792)
!6796 = !DILocation(line: 499, column: 17, scope: !6775)
!6797 = !DILocation(line: 500, column: 17, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6792, file: !908, line: 499, column: 33)
!6799 = !DILocation(line: 502, column: 9, scope: !6775)
!6800 = !DILocation(line: 502, column: 20, scope: !6801)
!6801 = !DILexicalBlockFile(scope: !6802, file: !908, discriminator: 1)
!6802 = distinct !DILexicalBlock(scope: !6770, file: !908, line: 502, column: 20)
!6803 = !DILocation(line: 502, column: 24, scope: !6801)
!6804 = !DILocation(line: 502, column: 22, scope: !6801)
!6805 = !DILocation(line: 503, column: 20, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6802, file: !908, line: 502, column: 29)
!6807 = !DILocation(line: 503, column: 13, scope: !6806)
!6808 = !DILocation(line: 504, column: 13, scope: !6806)
!6809 = !DILocation(line: 482, column: 5, scope: !6810)
!6810 = !DILexicalBlockFile(scope: !6674, file: !908, discriminator: 2)
!6811 = distinct !{!6811, !6705}
!6812 = !DILocation(line: 508, column: 9, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !6674, file: !908, line: 508, column: 9)
!6814 = !DILocation(line: 508, column: 14, scope: !6813)
!6815 = !DILocation(line: 508, column: 17, scope: !6813)
!6816 = !DILocation(line: 508, column: 11, scope: !6813)
!6817 = !DILocation(line: 508, column: 9, scope: !6674)
!6818 = !DILocation(line: 509, column: 16, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6813, file: !908, line: 508, column: 25)
!6820 = !DILocation(line: 509, column: 9, scope: !6819)
!6821 = !DILocation(line: 510, column: 9, scope: !6819)
!6822 = !DILocation(line: 513, column: 5, scope: !6674)
!6823 = !DILocation(line: 514, column: 1, scope: !6674)
!6824 = distinct !DISubprogram(name: "huff_cmp_len", scope: !908, file: !908, line: 77, type: !6825, isLocal: true, isDefinition: true, scopeLine: 78, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1635)
!6825 = !DISubroutineType(types: !6826)
!6826 = !{!889, !6827, !6827}
!6827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6828, size: 64, align: 64)
!6828 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!6829 = !DILocalVariable(name: "a", arg: 1, scope: !6824, file: !908, line: 77, type: !6827)
!6830 = !DILocation(line: 77, column: 37, scope: !6824)
!6831 = !DILocalVariable(name: "b", arg: 2, scope: !6824, file: !908, line: 77, type: !6827)
!6832 = !DILocation(line: 77, column: 52, scope: !6824)
!6833 = !DILocalVariable(name: "aa", scope: !6824, file: !908, line: 79, type: !6834)
!6834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6835, size: 64, align: 64)
!6835 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3136)
!6836 = !DILocation(line: 79, column: 22, scope: !6824)
!6837 = !DILocation(line: 79, column: 27, scope: !6824)
!6838 = !DILocalVariable(name: "bb", scope: !6824, file: !908, line: 79, type: !6834)
!6839 = !DILocation(line: 79, column: 31, scope: !6824)
!6840 = !DILocation(line: 79, column: 36, scope: !6824)
!6841 = !DILocation(line: 80, column: 13, scope: !6824)
!6842 = !DILocation(line: 80, column: 17, scope: !6824)
!6843 = !DILocation(line: 80, column: 23, scope: !6824)
!6844 = !DILocation(line: 80, column: 27, scope: !6824)
!6845 = !DILocation(line: 80, column: 21, scope: !6824)
!6846 = !DILocation(line: 80, column: 32, scope: !6824)
!6847 = !DILocation(line: 80, column: 40, scope: !6824)
!6848 = !DILocation(line: 80, column: 44, scope: !6824)
!6849 = !DILocation(line: 80, column: 38, scope: !6824)
!6850 = !DILocation(line: 80, column: 50, scope: !6824)
!6851 = !DILocation(line: 80, column: 54, scope: !6824)
!6852 = !DILocation(line: 80, column: 48, scope: !6824)
!6853 = !DILocation(line: 80, column: 5, scope: !6824)
!6854 = distinct !DISubprogram(name: "get_bits", scope: !1945, file: !1945, line: 381, type: !6855, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1635)
!6855 = !DISubroutineType(types: !6856)
!6856 = !{!888, !3723, !889}
!6857 = !DILocation(line: 66, column: 98, scope: !3708, inlinedAt: !6858)
!6858 = distinct !DILocation(line: 401, column: 16, scope: !6854)
!6859 = !DILocalVariable(name: "s", arg: 1, scope: !6854, file: !1945, line: 381, type: !3723)
!6860 = !DILocation(line: 381, column: 52, scope: !6854)
!6861 = !DILocalVariable(name: "n", arg: 2, scope: !6854, file: !1945, line: 381, type: !889)
!6862 = !DILocation(line: 381, column: 59, scope: !6854)
!6863 = !DILocalVariable(name: "tmp", scope: !6854, file: !1945, line: 383, type: !889)
!6864 = !DILocation(line: 383, column: 18, scope: !6854)
!6865 = !DILocalVariable(name: "re_index", scope: !6854, file: !1945, line: 399, type: !888)
!6866 = !DILocation(line: 399, column: 18, scope: !6854)
!6867 = !DILocation(line: 399, column: 30, scope: !6854)
!6868 = !DILocation(line: 399, column: 34, scope: !6854)
!6869 = !DILocalVariable(name: "re_cache", scope: !6854, file: !1945, line: 399, type: !888)
!6870 = !DILocation(line: 399, column: 78, scope: !6854)
!6871 = !DILocalVariable(name: "re_size_plus8", scope: !6854, file: !1945, line: 399, type: !888)
!6872 = !DILocation(line: 399, column: 101, scope: !6854)
!6873 = !DILocation(line: 399, column: 118, scope: !6854)
!6874 = !DILocation(line: 399, column: 122, scope: !6854)
!6875 = !DILocation(line: 401, column: 60, scope: !6854)
!6876 = !DILocation(line: 401, column: 64, scope: !6854)
!6877 = !DILocation(line: 401, column: 74, scope: !6854)
!6878 = !DILocation(line: 401, column: 83, scope: !6854)
!6879 = !DILocation(line: 401, column: 71, scope: !6854)
!6880 = !DILocation(line: 401, column: 92, scope: !6854)
!6881 = !DILocation(line: 401, column: 16, scope: !6854)
!6882 = !DILocation(line: 68, column: 16, scope: !3708, inlinedAt: !6858)
!6883 = !DILocation(line: 68, column: 19, scope: !3708, inlinedAt: !6858)
!6884 = !DILocation(line: 68, column: 24, scope: !3708, inlinedAt: !6858)
!6885 = !DILocation(line: 68, column: 38, scope: !3708, inlinedAt: !6858)
!6886 = !DILocation(line: 68, column: 41, scope: !3708, inlinedAt: !6858)
!6887 = !DILocation(line: 68, column: 46, scope: !3708, inlinedAt: !6858)
!6888 = !DILocation(line: 68, column: 34, scope: !3708, inlinedAt: !6858)
!6889 = !DILocation(line: 68, column: 57, scope: !3708, inlinedAt: !6858)
!6890 = !DILocation(line: 68, column: 69, scope: !3708, inlinedAt: !6858)
!6891 = !DILocation(line: 68, column: 72, scope: !3708, inlinedAt: !6858)
!6892 = !DILocation(line: 68, column: 79, scope: !3708, inlinedAt: !6858)
!6893 = !DILocation(line: 68, column: 84, scope: !3708, inlinedAt: !6858)
!6894 = !DILocation(line: 68, column: 99, scope: !3708, inlinedAt: !6858)
!6895 = !DILocation(line: 68, column: 102, scope: !3708, inlinedAt: !6858)
!6896 = !DILocation(line: 68, column: 109, scope: !3708, inlinedAt: !6858)
!6897 = !DILocation(line: 68, column: 114, scope: !3708, inlinedAt: !6858)
!6898 = !DILocation(line: 68, column: 94, scope: !3708, inlinedAt: !6858)
!6899 = !DILocation(line: 68, column: 63, scope: !3708, inlinedAt: !6858)
!6900 = !DILocation(line: 401, column: 100, scope: !6854)
!6901 = !DILocation(line: 401, column: 109, scope: !6854)
!6902 = !DILocation(line: 401, column: 96, scope: !6854)
!6903 = !DILocation(line: 401, column: 14, scope: !6854)
!6904 = !DILocation(line: 402, column: 21, scope: !6854)
!6905 = !DILocation(line: 402, column: 31, scope: !6854)
!6906 = !DILocation(line: 402, column: 11, scope: !6854)
!6907 = !DILocation(line: 402, column: 9, scope: !6854)
!6908 = !DILocation(line: 403, column: 18, scope: !6854)
!6909 = !DILocation(line: 403, column: 36, scope: !6854)
!6910 = !DILocation(line: 403, column: 48, scope: !6854)
!6911 = !DILocation(line: 403, column: 45, scope: !6854)
!6912 = !DILocation(line: 403, column: 33, scope: !6854)
!6913 = !DILocation(line: 403, column: 17, scope: !6854)
!6914 = !DILocation(line: 403, column: 55, scope: !6915)
!6915 = !DILexicalBlockFile(scope: !6854, file: !1945, discriminator: 1)
!6916 = !DILocation(line: 403, column: 67, scope: !6915)
!6917 = !DILocation(line: 403, column: 64, scope: !6915)
!6918 = !DILocation(line: 403, column: 17, scope: !6915)
!6919 = !DILocation(line: 403, column: 74, scope: !6920)
!6920 = !DILexicalBlockFile(scope: !6854, file: !1945, discriminator: 2)
!6921 = !DILocation(line: 403, column: 17, scope: !6920)
!6922 = !DILocation(line: 403, column: 17, scope: !6923)
!6923 = !DILexicalBlockFile(scope: !6854, file: !1945, discriminator: 3)
!6924 = !DILocation(line: 403, column: 14, scope: !6923)
!6925 = !DILocation(line: 404, column: 18, scope: !6854)
!6926 = !DILocation(line: 404, column: 6, scope: !6854)
!6927 = !DILocation(line: 404, column: 10, scope: !6854)
!6928 = !DILocation(line: 404, column: 16, scope: !6854)
!6929 = !DILocation(line: 406, column: 12, scope: !6854)
!6930 = !DILocation(line: 406, column: 5, scope: !6854)
!6931 = distinct !DISubprogram(name: "get_bits_left", scope: !1945, file: !1945, line: 814, type: !6932, isLocal: true, isDefinition: true, scopeLine: 815, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1635)
!6932 = !DISubroutineType(types: !6933)
!6933 = !{!889, !3723}
!6934 = !DILocalVariable(name: "gb", arg: 1, scope: !6931, file: !1945, line: 814, type: !3723)
!6935 = !DILocation(line: 814, column: 48, scope: !6931)
!6936 = !DILocation(line: 816, column: 12, scope: !6931)
!6937 = !DILocation(line: 816, column: 16, scope: !6931)
!6938 = !DILocation(line: 816, column: 46, scope: !6931)
!6939 = !DILocation(line: 816, column: 31, scope: !6931)
!6940 = !DILocation(line: 816, column: 29, scope: !6931)
!6941 = !DILocation(line: 816, column: 5, scope: !6931)
!6942 = distinct !DISubprogram(name: "NEG_USR32", scope: !6943, file: !6943, line: 124, type: !6944, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1635)
!6943 = !DIFile(filename: "libavcodec/x86/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!6944 = !DISubroutineType(types: !6945)
!6945 = !{!897, !897, !1109}
!6946 = !DILocalVariable(name: "a", arg: 1, scope: !6942, file: !6943, line: 124, type: !897)
!6947 = !DILocation(line: 124, column: 43, scope: !6942)
!6948 = !DILocalVariable(name: "s", arg: 2, scope: !6942, file: !6943, line: 124, type: !1109)
!6949 = !DILocation(line: 124, column: 53, scope: !6942)
!6950 = !DILocation(line: 125, column: 5, scope: !6942)
!6951 = !DILocation(line: 127, column: 29, scope: !6942)
!6952 = !DILocation(line: 127, column: 28, scope: !6942)
!6953 = !DILocation(line: 127, column: 18, scope: !6942)
!6954 = !{i32 205070, i32 205084}
!6955 = !DILocation(line: 129, column: 12, scope: !6942)
!6956 = !DILocation(line: 129, column: 5, scope: !6942)
!6957 = distinct !DISubprogram(name: "get_bits_count", scope: !1945, file: !1945, line: 219, type: !6958, isLocal: true, isDefinition: true, scopeLine: 220, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1635)
!6958 = !DISubroutineType(types: !6959)
!6959 = !{!889, !6960}
!6960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6961, size: 64, align: 64)
!6961 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1944)
!6962 = !DILocalVariable(name: "s", arg: 1, scope: !6957, file: !1945, line: 219, type: !6960)
!6963 = !DILocation(line: 219, column: 55, scope: !6957)
!6964 = !DILocation(line: 224, column: 12, scope: !6957)
!6965 = !DILocation(line: 224, column: 15, scope: !6957)
!6966 = !DILocation(line: 224, column: 5, scope: !6957)
!6967 = distinct !DISubprogram(name: "huff_cmp_len10", scope: !908, file: !908, line: 83, type: !6825, isLocal: true, isDefinition: true, scopeLine: 84, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1635)
!6968 = !DILocalVariable(name: "a", arg: 1, scope: !6967, file: !908, line: 83, type: !6827)
!6969 = !DILocation(line: 83, column: 39, scope: !6967)
!6970 = !DILocalVariable(name: "b", arg: 2, scope: !6967, file: !908, line: 83, type: !6827)
!6971 = !DILocation(line: 83, column: 54, scope: !6967)
!6972 = !DILocalVariable(name: "aa", scope: !6967, file: !908, line: 85, type: !6834)
!6973 = !DILocation(line: 85, column: 22, scope: !6967)
!6974 = !DILocation(line: 85, column: 27, scope: !6967)
!6975 = !DILocalVariable(name: "bb", scope: !6967, file: !908, line: 85, type: !6834)
!6976 = !DILocation(line: 85, column: 31, scope: !6967)
!6977 = !DILocation(line: 85, column: 36, scope: !6967)
!6978 = !DILocation(line: 86, column: 13, scope: !6967)
!6979 = !DILocation(line: 86, column: 17, scope: !6967)
!6980 = !DILocation(line: 86, column: 23, scope: !6967)
!6981 = !DILocation(line: 86, column: 27, scope: !6967)
!6982 = !DILocation(line: 86, column: 21, scope: !6967)
!6983 = !DILocation(line: 86, column: 32, scope: !6967)
!6984 = !DILocation(line: 86, column: 41, scope: !6967)
!6985 = !DILocation(line: 86, column: 45, scope: !6967)
!6986 = !DILocation(line: 86, column: 39, scope: !6967)
!6987 = !DILocation(line: 86, column: 51, scope: !6967)
!6988 = !DILocation(line: 86, column: 55, scope: !6967)
!6989 = !DILocation(line: 86, column: 49, scope: !6967)
!6990 = !DILocation(line: 86, column: 5, scope: !6967)
!6991 = distinct !DISubprogram(name: "magicyuv_median_pred16", scope: !908, file: !908, line: 191, type: !6992, isLocal: true, isDefinition: true, scopeLine: 194, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1635)
!6992 = !DISubroutineType(types: !6993)
!6993 = !{null, !903, !1718, !1718, !6994, !1296, !1296, !889}
!6994 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !898, line: 119, baseType: !1046)
!6995 = !DILocalVariable(name: "dst", arg: 1, scope: !6991, file: !908, line: 191, type: !903)
!6996 = !DILocation(line: 191, column: 46, scope: !6991)
!6997 = !DILocalVariable(name: "src1", arg: 2, scope: !6991, file: !908, line: 191, type: !1718)
!6998 = !DILocation(line: 191, column: 67, scope: !6991)
!6999 = !DILocalVariable(name: "diff", arg: 3, scope: !6991, file: !908, line: 192, type: !1718)
!7000 = !DILocation(line: 192, column: 52, scope: !6991)
!7001 = !DILocalVariable(name: "w", arg: 4, scope: !6991, file: !908, line: 192, type: !6994)
!7002 = !DILocation(line: 192, column: 67, scope: !6991)
!7003 = !DILocalVariable(name: "left", arg: 5, scope: !6991, file: !908, line: 193, type: !1296)
!7004 = !DILocation(line: 193, column: 41, scope: !6991)
!7005 = !DILocalVariable(name: "left_top", arg: 6, scope: !6991, file: !908, line: 193, type: !1296)
!7006 = !DILocation(line: 193, column: 52, scope: !6991)
!7007 = !DILocalVariable(name: "max", arg: 7, scope: !6991, file: !908, line: 193, type: !889)
!7008 = !DILocation(line: 193, column: 66, scope: !6991)
!7009 = !DILocalVariable(name: "i", scope: !6991, file: !908, line: 195, type: !889)
!7010 = !DILocation(line: 195, column: 9, scope: !6991)
!7011 = !DILocalVariable(name: "l", scope: !6991, file: !908, line: 196, type: !904)
!7012 = !DILocation(line: 196, column: 14, scope: !6991)
!7013 = !DILocalVariable(name: "lt", scope: !6991, file: !908, line: 196, type: !904)
!7014 = !DILocation(line: 196, column: 17, scope: !6991)
!7015 = !DILocation(line: 198, column: 10, scope: !6991)
!7016 = !DILocation(line: 198, column: 9, scope: !6991)
!7017 = !DILocation(line: 198, column: 7, scope: !6991)
!7018 = !DILocation(line: 199, column: 11, scope: !6991)
!7019 = !DILocation(line: 199, column: 10, scope: !6991)
!7020 = !DILocation(line: 199, column: 8, scope: !6991)
!7021 = !DILocation(line: 201, column: 12, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !6991, file: !908, line: 201, column: 5)
!7023 = !DILocation(line: 201, column: 10, scope: !7022)
!7024 = !DILocation(line: 201, column: 17, scope: !7025)
!7025 = !DILexicalBlockFile(scope: !7026, file: !908, discriminator: 1)
!7026 = distinct !DILexicalBlock(scope: !7022, file: !908, line: 201, column: 5)
!7027 = !DILocation(line: 201, column: 21, scope: !7025)
!7028 = !DILocation(line: 201, column: 19, scope: !7025)
!7029 = !DILocation(line: 201, column: 5, scope: !7025)
!7030 = !DILocation(line: 202, column: 22, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !7026, file: !908, line: 201, column: 29)
!7032 = !DILocation(line: 202, column: 30, scope: !7031)
!7033 = !DILocation(line: 202, column: 25, scope: !7031)
!7034 = !DILocation(line: 202, column: 35, scope: !7031)
!7035 = !DILocation(line: 202, column: 44, scope: !7031)
!7036 = !DILocation(line: 202, column: 39, scope: !7031)
!7037 = !DILocation(line: 202, column: 37, scope: !7031)
!7038 = !DILocation(line: 202, column: 49, scope: !7031)
!7039 = !DILocation(line: 202, column: 47, scope: !7031)
!7040 = !DILocation(line: 202, column: 13, scope: !7031)
!7041 = !DILocation(line: 202, column: 61, scope: !7031)
!7042 = !DILocation(line: 202, column: 56, scope: !7031)
!7043 = !DILocation(line: 202, column: 54, scope: !7031)
!7044 = !DILocation(line: 202, column: 11, scope: !7031)
!7045 = !DILocation(line: 203, column: 14, scope: !7031)
!7046 = !DILocation(line: 203, column: 11, scope: !7031)
!7047 = !DILocation(line: 204, column: 19, scope: !7031)
!7048 = !DILocation(line: 204, column: 14, scope: !7031)
!7049 = !DILocation(line: 204, column: 12, scope: !7031)
!7050 = !DILocation(line: 205, column: 18, scope: !7031)
!7051 = !DILocation(line: 205, column: 13, scope: !7031)
!7052 = !DILocation(line: 205, column: 9, scope: !7031)
!7053 = !DILocation(line: 205, column: 16, scope: !7031)
!7054 = !DILocation(line: 206, column: 5, scope: !7031)
!7055 = !DILocation(line: 201, column: 25, scope: !7056)
!7056 = !DILexicalBlockFile(scope: !7026, file: !908, discriminator: 2)
!7057 = !DILocation(line: 201, column: 5, scope: !7056)
!7058 = distinct !{!7058, !7059}
!7059 = !DILocation(line: 201, column: 5, scope: !6991)
!7060 = !DILocation(line: 208, column: 13, scope: !6991)
!7061 = !DILocation(line: 208, column: 6, scope: !6991)
!7062 = !DILocation(line: 208, column: 11, scope: !6991)
!7063 = !DILocation(line: 209, column: 17, scope: !6991)
!7064 = !DILocation(line: 209, column: 6, scope: !6991)
!7065 = !DILocation(line: 209, column: 15, scope: !6991)
!7066 = !DILocation(line: 210, column: 1, scope: !6991)
!7067 = distinct !DISubprogram(name: "mid_pred", scope: !6943, file: !6943, line: 76, type: !7068, isLocal: true, isDefinition: true, scopeLine: 77, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1635)
!7068 = !DISubroutineType(types: !7069)
!7069 = !{!889, !889, !889, !889}
!7070 = !DILocalVariable(name: "a", arg: 1, scope: !7067, file: !6943, line: 76, type: !889)
!7071 = !DILocation(line: 76, column: 55, scope: !7067)
!7072 = !DILocalVariable(name: "b", arg: 2, scope: !7067, file: !6943, line: 76, type: !889)
!7073 = !DILocation(line: 76, column: 62, scope: !7067)
!7074 = !DILocalVariable(name: "c", arg: 3, scope: !7067, file: !6943, line: 76, type: !889)
!7075 = !DILocation(line: 76, column: 69, scope: !7067)
!7076 = !DILocalVariable(name: "i", scope: !7067, file: !6943, line: 78, type: !889)
!7077 = !DILocation(line: 78, column: 9, scope: !7067)
!7078 = !DILocation(line: 78, column: 11, scope: !7067)
!7079 = !DILocation(line: 79, column: 5, scope: !7067)
!7080 = !DILocation(line: 88, column: 14, scope: !7067)
!7081 = !DILocation(line: 88, column: 22, scope: !7067)
!7082 = !{i32 204535, i32 204552, i32 204581, i32 204610, i32 204639, i32 204668, i32 204697, i32 204726}
!7083 = !DILocation(line: 90, column: 12, scope: !7067)
!7084 = !DILocation(line: 90, column: 5, scope: !7067)
!7085 = distinct !DISubprogram(name: "huff_cmp_len12", scope: !908, file: !908, line: 89, type: !6825, isLocal: true, isDefinition: true, scopeLine: 90, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1635)
!7086 = !DILocalVariable(name: "a", arg: 1, scope: !7085, file: !908, line: 89, type: !6827)
!7087 = !DILocation(line: 89, column: 39, scope: !7085)
!7088 = !DILocalVariable(name: "b", arg: 2, scope: !7085, file: !908, line: 89, type: !6827)
!7089 = !DILocation(line: 89, column: 54, scope: !7085)
!7090 = !DILocalVariable(name: "aa", scope: !7085, file: !908, line: 91, type: !6834)
!7091 = !DILocation(line: 91, column: 22, scope: !7085)
!7092 = !DILocation(line: 91, column: 27, scope: !7085)
!7093 = !DILocalVariable(name: "bb", scope: !7085, file: !908, line: 91, type: !6834)
!7094 = !DILocation(line: 91, column: 31, scope: !7085)
!7095 = !DILocation(line: 91, column: 36, scope: !7085)
!7096 = !DILocation(line: 92, column: 13, scope: !7085)
!7097 = !DILocation(line: 92, column: 17, scope: !7085)
!7098 = !DILocation(line: 92, column: 23, scope: !7085)
!7099 = !DILocation(line: 92, column: 27, scope: !7085)
!7100 = !DILocation(line: 92, column: 21, scope: !7085)
!7101 = !DILocation(line: 92, column: 32, scope: !7085)
!7102 = !DILocation(line: 92, column: 41, scope: !7085)
!7103 = !DILocation(line: 92, column: 45, scope: !7085)
!7104 = !DILocation(line: 92, column: 39, scope: !7085)
!7105 = !DILocation(line: 92, column: 51, scope: !7085)
!7106 = !DILocation(line: 92, column: 55, scope: !7085)
!7107 = !DILocation(line: 92, column: 49, scope: !7085)
!7108 = !DILocation(line: 92, column: 5, scope: !7085)
!7109 = distinct !DISubprogram(name: "init_get_bits", scope: !1945, file: !1945, line: 615, type: !6650, isLocal: true, isDefinition: true, scopeLine: 617, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1635)
!7110 = !DILocalVariable(name: "s", arg: 1, scope: !7109, file: !1945, line: 615, type: !3723)
!7111 = !DILocation(line: 615, column: 48, scope: !7109)
!7112 = !DILocalVariable(name: "buffer", arg: 2, scope: !7109, file: !1945, line: 615, type: !899)
!7113 = !DILocation(line: 615, column: 66, scope: !7109)
!7114 = !DILocalVariable(name: "bit_size", arg: 3, scope: !7109, file: !1945, line: 616, type: !889)
!7115 = !DILocation(line: 616, column: 37, scope: !7109)
!7116 = !DILocalVariable(name: "buffer_size", scope: !7109, file: !1945, line: 618, type: !889)
!7117 = !DILocation(line: 618, column: 9, scope: !7109)
!7118 = !DILocalVariable(name: "ret", scope: !7109, file: !1945, line: 619, type: !889)
!7119 = !DILocation(line: 619, column: 9, scope: !7109)
!7120 = !DILocation(line: 621, column: 9, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !7109, file: !1945, line: 621, column: 9)
!7122 = !DILocation(line: 621, column: 18, scope: !7121)
!7123 = !DILocation(line: 621, column: 64, scope: !7121)
!7124 = !DILocation(line: 621, column: 67, scope: !7125)
!7125 = !DILexicalBlockFile(scope: !7121, file: !1945, discriminator: 1)
!7126 = !DILocation(line: 621, column: 76, scope: !7125)
!7127 = !DILocation(line: 621, column: 80, scope: !7125)
!7128 = !DILocation(line: 621, column: 84, scope: !7129)
!7129 = !DILexicalBlockFile(scope: !7121, file: !1945, discriminator: 2)
!7130 = !DILocation(line: 621, column: 9, scope: !7129)
!7131 = !DILocation(line: 622, column: 18, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !7121, file: !1945, line: 621, column: 92)
!7133 = !DILocation(line: 623, column: 16, scope: !7132)
!7134 = !DILocation(line: 624, column: 13, scope: !7132)
!7135 = !DILocation(line: 625, column: 5, scope: !7132)
!7136 = !DILocation(line: 627, column: 20, scope: !7109)
!7137 = !DILocation(line: 627, column: 29, scope: !7109)
!7138 = !DILocation(line: 627, column: 34, scope: !7109)
!7139 = !DILocation(line: 627, column: 17, scope: !7109)
!7140 = !DILocation(line: 629, column: 17, scope: !7109)
!7141 = !DILocation(line: 629, column: 5, scope: !7109)
!7142 = !DILocation(line: 629, column: 8, scope: !7109)
!7143 = !DILocation(line: 629, column: 15, scope: !7109)
!7144 = !DILocation(line: 630, column: 23, scope: !7109)
!7145 = !DILocation(line: 630, column: 5, scope: !7109)
!7146 = !DILocation(line: 630, column: 8, scope: !7109)
!7147 = !DILocation(line: 630, column: 21, scope: !7109)
!7148 = !DILocation(line: 631, column: 29, scope: !7109)
!7149 = !DILocation(line: 631, column: 38, scope: !7109)
!7150 = !DILocation(line: 631, column: 5, scope: !7109)
!7151 = !DILocation(line: 631, column: 8, scope: !7109)
!7152 = !DILocation(line: 631, column: 27, scope: !7109)
!7153 = !DILocation(line: 632, column: 21, scope: !7109)
!7154 = !DILocation(line: 632, column: 30, scope: !7109)
!7155 = !DILocation(line: 632, column: 28, scope: !7109)
!7156 = !DILocation(line: 632, column: 5, scope: !7109)
!7157 = !DILocation(line: 632, column: 8, scope: !7109)
!7158 = !DILocation(line: 632, column: 19, scope: !7109)
!7159 = !DILocation(line: 633, column: 5, scope: !7109)
!7160 = !DILocation(line: 633, column: 8, scope: !7109)
!7161 = !DILocation(line: 633, column: 14, scope: !7109)
!7162 = !DILocation(line: 639, column: 12, scope: !7109)
!7163 = !DILocation(line: 639, column: 5, scope: !7109)
