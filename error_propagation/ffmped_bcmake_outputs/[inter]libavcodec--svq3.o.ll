; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--svq3.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--svq3.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVRational = type { i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, {}*, i32, void (%struct.MpegEncContext*)*, {}*, {}*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.IMbInfo = type { i16, i8, i8 }
%struct.anon = type { i8, i8 }
%struct.SVQ3Context = type { %struct.AVCodecContext*, %struct.H264DSPContext, %struct.H264PredContext, %struct.HpelDSPContext, %struct.TpelDSPContext, %struct.VideoDSPContext, %struct.SVQ3Frame*, %struct.SVQ3Frame*, %struct.SVQ3Frame*, %struct.GetBitContext, %struct.GetBitContext, i8*, i32, i32, i32, i32, i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32*, i32, i32, [40 x i8], i8*, i32, i32, i32, i8*, [8 x i8], [2 x [40 x [2 x i16]]], [2 x [40 x i8]], [1536 x i16], [3 x [32 x i16]], [120 x i8], [88 x [16 x i32]], [96 x i32], [8 x i8] }
%struct.H264DSPContext = type { [4 x void (i8*, i64, i32, i32, i32, i32)*], [4 x void (i8*, i8*, i64, i32, i32, i32, i32, i32)*], void (i8*, i32, i32, i32, i8*)*, void (i8*, i32, i32, i32, i8*)*, void (i8*, i32, i32, i32, i8*)*, void (i8*, i32, i32, i32)*, void (i8*, i32, i32, i32)*, void (i8*, i32, i32, i32)*, void (i8*, i32, i32, i32, i8*)*, void (i8*, i32, i32, i32, i8*)*, void (i8*, i32, i32, i32, i8*)*, void (i8*, i32, i32, i32)*, void (i8*, i32, i32, i32)*, void (i8*, i32, i32, i32)*, void ([4 x [4 x i16]]*, i8*, [40 x i8]*, [40 x [2 x i16]]*, i32, i32, i32, i32, i32, i32)*, void (i8*, i16*, i32)*, void (i8*, i16*, i32)*, void (i8*, i16*, i32)*, void (i8*, i16*, i32)*, void (i8*, i32*, i16*, i32, i8*)*, void (i8*, i32*, i16*, i32, i8*)*, void (i8**, i32*, i16*, i32, i8*)*, void (i8*, i32*, i16*, i32, i8*)*, void (i16*, i16*, i32)*, void (i16*, i32)*, void (i8*, i16*, i32)*, void (i8*, i16*, i32)*, i32 (i8*, i32)* }
%struct.H264PredContext = type { [15 x void (i8*, i8*, i64)*], [12 x void (i8*, i32, i32, i64)*], [11 x void (i8*, i64)*], [9 x void (i8*, i64)*], [2 x void (i8*, i16*, i64)*], [2 x void (i8*, i16*, i64)*], [2 x void (i8*, i16*, i32, i32, i64)*], [3 x void (i8*, i32*, i16*, i64)*], [3 x void (i8*, i32*, i16*, i64)*] }
%struct.HpelDSPContext = type { [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x void (i8*, i8*, i64, i32)*] }
%struct.TpelDSPContext = type { [11 x void (i8*, i8*, i32, i32, i32)*], [11 x void (i8*, i8*, i32, i32, i32)*] }
%struct.VideoDSPContext = type { void (i8*, i8*, i64, i64, i32, i32, i32, i32, i32, i32)*, void (i8*, i64, i32)* }
%struct.SVQ3Frame = type { %struct.AVFrame*, [2 x %struct.AVBufferRef*], [2 x [2 x i16]*], %struct.AVBufferRef*, i32*, [2 x %struct.AVBufferRef*], [2 x i8*] }
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%union.unaligned_32 = type { i32 }
%union.av_alias32 = type { i32 }
%struct.v = type { [2 x i64] }

@.str = private unnamed_addr constant [5 x i8] c"svq3\00", align 1
@.str.1 = private unnamed_addr constant [54 x i8] c"Sorenson Vector Quantizer 3 / Sorenson Video 3 / SVQ3\00", align 1
@.compoundliteral = internal constant [2 x i32] [i32 12, i32 -1], align 4
@ff_svq3_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i32 0, i32 0), i32 0, i32 23, i32 35, %struct.AVRational* null, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.compoundliteral, i32 0, i32 0), i32* null, i32* null, i64* null, i8 0, %struct.AVClass* null, %struct.AVProfile* null, i8* null, i32 11488, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @svq3_decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @svq3_decode_frame, i32 (%struct.AVCodecContext*)* @svq3_decode_end, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* null, i32 0, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.2 = private unnamed_addr constant [5 x i8] c"SEQH\00", align 1
@.str.3 = private unnamed_addr constant [31 x i8] c"Unknown fields %d %d %d %d %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"watermark size: %ux%u\0A\00", align 1
@.str.5 = private unnamed_addr constant [58 x i8] c"u1: %x u2: %x u3: %x compressed data size: %d offset: %d\0A\00", align 1
@.str.6 = private unnamed_addr constant [37 x i8] c"could not uncompress watermark logo\0A\00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c"watermark key %#x\0A\00", align 1
@ff_interleaved_golomb_vlc_len = external constant [256 x i8], align 16
@ff_interleaved_ue_golomb_vlc_code = external constant [256 x i8], align 16
@ff_interleaved_dirac_golomb_vlc_code = external constant [256 x i8], align 16
@ff_h264_quant_div6 = external constant [88 x i8], align 16
@ff_h264_quant_rem6 = external constant [88 x i8], align 16
@ff_h264_dequant4_coeff_init = external constant [6 x [3 x i8]], align 16
@scan8 = internal constant [51 x i8] c"\0C\0D\14\15\0E\0F\16\17\1C\1D$%\1E\1F&'45<=67>?DELMFGNO\5C]de^_fglmtunovw\00(P", align 16
@.str.8 = private unnamed_addr constant [26 x i8] c"Missing reference frame.\0A\00", align 1
@.str.9 = private unnamed_addr constant [50 x i8] c"%c hpel:%d, tpel:%d aqp:%d qp:%d, slice_num:%02X\0A\00", align 1
@.str.10 = private unnamed_addr constant [29 x i8] c"error in B-frame picture id\0A\00", align 1
@.str.11 = private unnamed_addr constant [24 x i8] c"non constant slice type\00", align 1
@.str.12 = private unnamed_addr constant [31 x i8] c"error while decoding MB %d %d\0A\00", align 1
@.str.13 = private unnamed_addr constant [47 x i8] c"frame num %d incomplete pic x %d y %d left %d\0A\00", align 1
@.str.14 = private unnamed_addr constant [22 x i8] c"frame num %d left %d\0A\00", align 1
@.str.15 = private unnamed_addr constant [33 x i8] c"unsupported slice header (%02X)\0A\00", align 1
@.str.16 = private unnamed_addr constant [27 x i8] c"slice after bitstream end\0A\00", align 1
@.str.17 = private unnamed_addr constant [24 x i8] c"illegal slice type %u \0A\00", align 1
@ff_h264_golomb_to_pict_type = external constant [5 x i8], align 1
@.str.18 = private unnamed_addr constant [21 x i8] c"Media key encryption\00", align 1
@.str.19 = private unnamed_addr constant [20 x i8] c"luma prediction:%u\0A\00", align 1
@svq3_pred_0 = internal constant [25 x [2 x i8]] [[2 x i8] zeroinitializer, [2 x i8] c"\01\00", [2 x i8] c"\00\01", [2 x i8] c"\00\02", [2 x i8] c"\01\01", [2 x i8] c"\02\00", [2 x i8] c"\03\00", [2 x i8] c"\02\01", [2 x i8] c"\01\02", [2 x i8] c"\00\03", [2 x i8] c"\00\04", [2 x i8] c"\01\03", [2 x i8] c"\02\02", [2 x i8] c"\03\01", [2 x i8] c"\04\00", [2 x i8] c"\04\01", [2 x i8] c"\03\02", [2 x i8] c"\02\03", [2 x i8] c"\01\04", [2 x i8] c"\02\04", [2 x i8] c"\03\03", [2 x i8] c"\04\02", [2 x i8] c"\04\03", [2 x i8] c"\03\04", [2 x i8] c"\04\04"], align 16
@svq3_pred_1 = internal constant [6 x [6 x [5 x i8]]] [[6 x [5 x i8]] [[5 x i8] c"\02\FF\FF\FF\FF", [5 x i8] c"\02\01\FF\FF\FF", [5 x i8] c"\01\02\FF\FF\FF", [5 x i8] c"\02\01\FF\FF\FF", [5 x i8] c"\01\02\FF\FF\FF", [5 x i8] c"\01\02\FF\FF\FF"], [6 x [5 x i8]] [[5 x i8] c"\00\02\FF\FF\FF", [5 x i8] c"\00\02\01\04\03", [5 x i8] c"\00\01\02\04\03", [5 x i8] c"\00\02\01\04\03", [5 x i8] c"\02\00\01\03\04", [5 x i8] c"\00\04\02\01\03"], [6 x [5 x i8]] [[5 x i8] c"\02\00\FF\FF\FF", [5 x i8] c"\02\01\00\04\03", [5 x i8] c"\01\02\04\00\03", [5 x i8] c"\02\01\00\04\03", [5 x i8] c"\02\01\04\03\00", [5 x i8] c"\01\02\04\00\03"], [6 x [5 x i8]] [[5 x i8] c"\02\00\FF\FF\FF", [5 x i8] c"\02\00\01\04\03", [5 x i8] c"\01\02\00\04\03", [5 x i8] c"\02\01\00\04\03", [5 x i8] c"\02\01\03\04\00", [5 x i8] c"\02\04\01\00\03"], [6 x [5 x i8]] [[5 x i8] c"\00\02\FF\FF\FF", [5 x i8] c"\00\02\01\03\04", [5 x i8] c"\01\02\03\00\04", [5 x i8] c"\02\00\01\03\04", [5 x i8] c"\02\01\03\00\04", [5 x i8] c"\02\00\04\03\01"], [6 x [5 x i8]] [[5 x i8] c"\00\02\FF\FF\FF", [5 x i8] c"\00\02\04\01\03", [5 x i8] c"\01\04\02\00\03", [5 x i8] c"\04\02\00\01\03", [5 x i8] c"\02\00\01\04\03", [5 x i8] c"\04\02\01\00\03"]], align 16
@.str.20 = private unnamed_addr constant [18 x i8] c"weird prediction\0A\00", align 1
@ff_h264_i_mb_type_info = external constant [26 x %struct.IMbInfo], align 16
@.str.21 = private unnamed_addr constant [35 x i8] c"ff_h264_check_intra_pred_mode < 0\0A\00", align 1
@.str.22 = private unnamed_addr constant [12 x i8] c"cbp_vlc=%u\0A\00", align 1
@ff_h264_golomb_to_intra4x4_cbp = external constant [48 x i8], align 16
@ff_h264_golomb_to_inter_cbp = external constant [48 x i8], align 16
@.str.23 = private unnamed_addr constant [11 x i8] c"qscale:%d\0A\00", align 1
@.str.24 = private unnamed_addr constant [36 x i8] c"error while decoding intra luma dc\0A\00", align 1
@.str.25 = private unnamed_addr constant [28 x i8] c"error while decoding block\0A\00", align 1
@.str.26 = private unnamed_addr constant [38 x i8] c"error while decoding chroma dc block\0A\00", align 1
@.str.27 = private unnamed_addr constant [38 x i8] c"error while decoding chroma ac block\0A\00", align 1
@.str.28 = private unnamed_addr constant [16 x i8] c"invalid MV vlc\0A\00", align 1
@ff_interleaved_se_golomb_vlc_code = external constant [256 x i8], align 16
@svq3_decode_block.scan_patterns = internal constant [4 x i8*] [i8* getelementptr inbounds ([16 x i8], [16 x i8]* @luma_dc_zigzag_scan, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @ff_zigzag_scan, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @svq3_scan, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @ff_h264_chroma_dc_scan, i32 0, i32 0)], align 16
@luma_dc_zigzag_scan = internal constant [16 x i8] c"\00\10 \800@P`\90\A0\B0\C0p\D0\E0\F0", align 16
@ff_zigzag_scan = external constant [17 x i8], align 16
@svq3_scan = internal constant [16 x i8] c"\00\01\02\06\0A\03\07\0B\04\08\05\09\0C\0D\0E\0F", align 16
@ff_h264_chroma_dc_scan = external constant [4 x i8], align 1
@svq3_dct_tables = internal constant [2 x [16 x %struct.anon]] [[16 x %struct.anon] [%struct.anon zeroinitializer, %struct.anon { i8 0, i8 1 }, %struct.anon { i8 1, i8 1 }, %struct.anon { i8 2, i8 1 }, %struct.anon { i8 0, i8 2 }, %struct.anon { i8 3, i8 1 }, %struct.anon { i8 4, i8 1 }, %struct.anon { i8 5, i8 1 }, %struct.anon { i8 0, i8 3 }, %struct.anon { i8 1, i8 2 }, %struct.anon { i8 2, i8 2 }, %struct.anon { i8 6, i8 1 }, %struct.anon { i8 7, i8 1 }, %struct.anon { i8 8, i8 1 }, %struct.anon { i8 9, i8 1 }, %struct.anon { i8 0, i8 4 }], [16 x %struct.anon] [%struct.anon zeroinitializer, %struct.anon { i8 0, i8 1 }, %struct.anon { i8 1, i8 1 }, %struct.anon { i8 0, i8 2 }, %struct.anon { i8 2, i8 1 }, %struct.anon { i8 0, i8 3 }, %struct.anon { i8 0, i8 4 }, %struct.anon { i8 0, i8 5 }, %struct.anon { i8 3, i8 1 }, %struct.anon { i8 4, i8 1 }, %struct.anon { i8 1, i8 2 }, %struct.anon { i8 1, i8 3 }, %struct.anon { i8 0, i8 6 }, %struct.anon { i8 0, i8 7 }, %struct.anon { i8 0, i8 8 }, %struct.anon { i8 0, i8 9 }]], align 16
@ff_h264_chroma_qp = external constant [7 x [88 x i8]], align 16
@svq3_dequant_coeff = internal constant [32 x i32] [i32 3881, i32 4351, i32 4890, i32 5481, i32 6154, i32 6914, i32 7761, i32 8718, i32 9781, i32 10987, i32 12339, i32 13828, i32 15523, i32 17435, i32 19561, i32 21873, i32 24552, i32 27656, i32 30847, i32 34870, i32 38807, i32 43747, i32 49103, i32 54683, i32 61694, i32 68745, i32 77615, i32 89113, i32 100253, i32 109366, i32 126635, i32 141533], align 16
@svq3_luma_dc_dequant_idct_c.x_offset = internal constant [4 x i8] c"\00\10@P", align 1

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @svq3_decode_init(%struct.AVCodecContext* %avctx) #0 !dbg !1721 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !1722, metadata !1727), !dbg !1728
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.SVQ3Context*, align 8
  %m = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %extradata = alloca i8*, align 8
  %extradata_end = alloca i8*, align 8
  %size = alloca i32, align 4
  %marker_found = alloca i32, align 4
  %ret = alloca i32, align 4
  %gb = alloca %struct.GetBitContext, align 8
  %frame_size_code = alloca i32, align 4
  %unk0 = alloca i32, align 4
  %unk1 = alloca i32, align 4
  %unk2 = alloca i32, align 4
  %unk3 = alloca i32, align 4
  %unk4 = alloca i32, align 4
  %watermark_width = alloca i32, align 4
  %watermark_height = alloca i32, align 4
  %u1 = alloca i32, align 4
  %u2 = alloca i32, align 4
  %u3 = alloca i32, align 4
  %u4 = alloca i32, align 4
  %buf_len = alloca i64, align 8
  %offset = alloca i32, align 4
  %buf = alloca i8*, align 8
  %mb_xy = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !1732, metadata !1727), !dbg !1733
  call void @llvm.dbg.declare(metadata %struct.SVQ3Context** %s, metadata !1734, metadata !1727), !dbg !1992
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1993
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !1994
  %1 = load i8*, i8** %priv_data, align 8, !dbg !1994
  %2 = bitcast i8* %1 to %struct.SVQ3Context*, !dbg !1993
  store %struct.SVQ3Context* %2, %struct.SVQ3Context** %s, align 8, !dbg !1992
  call void @llvm.dbg.declare(metadata i32* %m, metadata !1995, metadata !1727), !dbg !1996
  call void @llvm.dbg.declare(metadata i32* %x, metadata !1997, metadata !1727), !dbg !1998
  call void @llvm.dbg.declare(metadata i32* %y, metadata !1999, metadata !1727), !dbg !2000
  call void @llvm.dbg.declare(metadata i8** %extradata, metadata !2001, metadata !1727), !dbg !2002
  call void @llvm.dbg.declare(metadata i8** %extradata_end, metadata !2003, metadata !1727), !dbg !2004
  call void @llvm.dbg.declare(metadata i32* %size, metadata !2005, metadata !1727), !dbg !2006
  call void @llvm.dbg.declare(metadata i32* %marker_found, metadata !2007, metadata !1727), !dbg !2008
  store i32 0, i32* %marker_found, align 4, !dbg !2008
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2009, metadata !1727), !dbg !2010
  %call = call noalias i8* @av_mallocz(i64 88), !dbg !2011
  %3 = bitcast i8* %call to %struct.SVQ3Frame*, !dbg !2011
  %4 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2012
  %cur_pic = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %4, i32 0, i32 6, !dbg !2013
  store %struct.SVQ3Frame* %3, %struct.SVQ3Frame** %cur_pic, align 16, !dbg !2014
  %call1 = call noalias i8* @av_mallocz(i64 88), !dbg !2015
  %5 = bitcast i8* %call1 to %struct.SVQ3Frame*, !dbg !2015
  %6 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2016
  %last_pic = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %6, i32 0, i32 8, !dbg !2017
  store %struct.SVQ3Frame* %5, %struct.SVQ3Frame** %last_pic, align 16, !dbg !2018
  %call2 = call noalias i8* @av_mallocz(i64 88), !dbg !2019
  %7 = bitcast i8* %call2 to %struct.SVQ3Frame*, !dbg !2019
  %8 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2020
  %next_pic = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %8, i32 0, i32 7, !dbg !2021
  store %struct.SVQ3Frame* %7, %struct.SVQ3Frame** %next_pic, align 8, !dbg !2022
  %9 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2023
  %next_pic3 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %9, i32 0, i32 7, !dbg !2025
  %10 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %next_pic3, align 8, !dbg !2025
  %tobool = icmp ne %struct.SVQ3Frame* %10, null, !dbg !2023
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !2026

lor.lhs.false:                                    ; preds = %entry
  %11 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2027
  %last_pic4 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %11, i32 0, i32 8, !dbg !2029
  %12 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %last_pic4, align 16, !dbg !2029
  %tobool5 = icmp ne %struct.SVQ3Frame* %12, null, !dbg !2027
  br i1 %tobool5, label %lor.lhs.false6, label %if.then, !dbg !2030

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %13 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2031
  %cur_pic7 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %13, i32 0, i32 6, !dbg !2033
  %14 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic7, align 16, !dbg !2033
  %tobool8 = icmp ne %struct.SVQ3Frame* %14, null, !dbg !2031
  br i1 %tobool8, label %if.end, label %if.then, !dbg !2034

if.then:                                          ; preds = %lor.lhs.false6, %lor.lhs.false, %entry
  store i32 -12, i32* %ret, align 4, !dbg !2035
  br label %fail, !dbg !2037

if.end:                                           ; preds = %lor.lhs.false6
  %call9 = call %struct.AVFrame* @av_frame_alloc(), !dbg !2038
  %15 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2039
  %cur_pic10 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %15, i32 0, i32 6, !dbg !2040
  %16 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic10, align 16, !dbg !2040
  %f = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %16, i32 0, i32 0, !dbg !2041
  store %struct.AVFrame* %call9, %struct.AVFrame** %f, align 8, !dbg !2042
  %call11 = call %struct.AVFrame* @av_frame_alloc(), !dbg !2043
  %17 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2044
  %last_pic12 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %17, i32 0, i32 8, !dbg !2045
  %18 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %last_pic12, align 16, !dbg !2045
  %f13 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %18, i32 0, i32 0, !dbg !2046
  store %struct.AVFrame* %call11, %struct.AVFrame** %f13, align 8, !dbg !2047
  %call14 = call %struct.AVFrame* @av_frame_alloc(), !dbg !2048
  %19 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2049
  %next_pic15 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %19, i32 0, i32 7, !dbg !2050
  %20 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %next_pic15, align 8, !dbg !2050
  %f16 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %20, i32 0, i32 0, !dbg !2051
  store %struct.AVFrame* %call14, %struct.AVFrame** %f16, align 8, !dbg !2052
  %21 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2053
  %cur_pic17 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %21, i32 0, i32 6, !dbg !2055
  %22 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic17, align 16, !dbg !2055
  %f18 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %22, i32 0, i32 0, !dbg !2056
  %23 = load %struct.AVFrame*, %struct.AVFrame** %f18, align 8, !dbg !2056
  %tobool19 = icmp ne %struct.AVFrame* %23, null, !dbg !2053
  br i1 %tobool19, label %lor.lhs.false20, label %if.then28, !dbg !2057

lor.lhs.false20:                                  ; preds = %if.end
  %24 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2058
  %last_pic21 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %24, i32 0, i32 8, !dbg !2060
  %25 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %last_pic21, align 16, !dbg !2060
  %f22 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %25, i32 0, i32 0, !dbg !2061
  %26 = load %struct.AVFrame*, %struct.AVFrame** %f22, align 8, !dbg !2061
  %tobool23 = icmp ne %struct.AVFrame* %26, null, !dbg !2058
  br i1 %tobool23, label %lor.lhs.false24, label %if.then28, !dbg !2062

lor.lhs.false24:                                  ; preds = %lor.lhs.false20
  %27 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2063
  %next_pic25 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %27, i32 0, i32 7, !dbg !2065
  %28 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %next_pic25, align 8, !dbg !2065
  %f26 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %28, i32 0, i32 0, !dbg !2066
  %29 = load %struct.AVFrame*, %struct.AVFrame** %f26, align 8, !dbg !2066
  %tobool27 = icmp ne %struct.AVFrame* %29, null, !dbg !2063
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !2067

if.then28:                                        ; preds = %lor.lhs.false24, %lor.lhs.false20, %if.end
  store i32 -12, i32* %retval, align 4, !dbg !2068
  br label %return, !dbg !2068

if.end29:                                         ; preds = %lor.lhs.false24
  %30 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2069
  %h264dsp = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %30, i32 0, i32 1, !dbg !2070
  call void @ff_h264dsp_init(%struct.H264DSPContext* %h264dsp, i32 8, i32 1), !dbg !2071
  %31 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2072
  %hpc = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %31, i32 0, i32 2, !dbg !2073
  call void @ff_h264_pred_init(%struct.H264PredContext* %hpc, i32 23, i32 8, i32 1), !dbg !2074
  %32 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2075
  %vdsp = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %32, i32 0, i32 5, !dbg !2076
  call void @ff_videodsp_init(%struct.VideoDSPContext* %vdsp, i32 8), !dbg !2077
  %33 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2078
  %bits_per_raw_sample = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %33, i32 0, i32 143, !dbg !2079
  store i32 8, i32* %bits_per_raw_sample, align 4, !dbg !2080
  %34 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2081
  %hdsp = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %34, i32 0, i32 3, !dbg !2082
  %35 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2083
  %flags = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %35, i32 0, i32 13, !dbg !2084
  %36 = load i32, i32* %flags, align 4, !dbg !2084
  call void @ff_hpeldsp_init(%struct.HpelDSPContext* %hdsp, i32 %36), !dbg !2085
  %37 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2086
  %tdsp = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %37, i32 0, i32 4, !dbg !2087
  call void @ff_tpeldsp_init(%struct.TpelDSPContext* %tdsp), !dbg !2088
  %38 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2089
  %pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %38, i32 0, i32 25, !dbg !2090
  store i32 12, i32* %pix_fmt, align 8, !dbg !2091
  %39 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2092
  %color_range = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %39, i32 0, i32 78, !dbg !2093
  store i32 2, i32* %color_range, align 8, !dbg !2094
  %40 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2095
  %41 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2096
  %avctx30 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %41, i32 0, i32 0, !dbg !2097
  store %struct.AVCodecContext* %40, %struct.AVCodecContext** %avctx30, align 16, !dbg !2098
  %42 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2099
  %halfpel_flag = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %42, i32 0, i32 13, !dbg !2100
  store i32 1, i32* %halfpel_flag, align 4, !dbg !2101
  %43 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2102
  %thirdpel_flag = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %43, i32 0, i32 14, !dbg !2103
  store i32 1, i32* %thirdpel_flag, align 8, !dbg !2104
  %44 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2105
  %has_watermark = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %44, i32 0, i32 15, !dbg !2106
  store i32 0, i32* %has_watermark, align 4, !dbg !2107
  %45 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2108
  %extradata31 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %45, i32 0, i32 15, !dbg !2109
  %46 = load i8*, i8** %extradata31, align 8, !dbg !2109
  store i8* %46, i8** %extradata, align 8, !dbg !2110
  %47 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2111
  %extradata32 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %47, i32 0, i32 15, !dbg !2112
  %48 = load i8*, i8** %extradata32, align 8, !dbg !2112
  %49 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2113
  %extradata_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %49, i32 0, i32 16, !dbg !2114
  %50 = load i32, i32* %extradata_size, align 8, !dbg !2114
  %idx.ext = sext i32 %50 to i64, !dbg !2115
  %add.ptr = getelementptr inbounds i8, i8* %48, i64 %idx.ext, !dbg !2115
  store i8* %add.ptr, i8** %extradata_end, align 8, !dbg !2116
  %51 = load i8*, i8** %extradata, align 8, !dbg !2117
  %tobool33 = icmp ne i8* %51, null, !dbg !2117
  br i1 %tobool33, label %if.then34, label %if.end40, !dbg !2119

if.then34:                                        ; preds = %if.end29
  store i32 0, i32* %m, align 4, !dbg !2120
  br label %for.cond, !dbg !2123

for.cond:                                         ; preds = %for.inc, %if.then34
  %52 = load i32, i32* %m, align 4, !dbg !2124
  %add = add nsw i32 %52, 8, !dbg !2127
  %53 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2128
  %extradata_size35 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %53, i32 0, i32 16, !dbg !2129
  %54 = load i32, i32* %extradata_size35, align 8, !dbg !2129
  %cmp = icmp slt i32 %add, %54, !dbg !2130
  br i1 %cmp, label %for.body, label %for.end, !dbg !2131

for.body:                                         ; preds = %for.cond
  %55 = load i8*, i8** %extradata, align 8, !dbg !2132
  %call36 = call i32 @memcmp(i8* %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i64 4) #8, !dbg !2135
  %tobool37 = icmp ne i32 %call36, 0, !dbg !2135
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !2136

if.then38:                                        ; preds = %for.body
  store i32 1, i32* %marker_found, align 4, !dbg !2137
  br label %for.end, !dbg !2139

if.end39:                                         ; preds = %for.body
  %56 = load i8*, i8** %extradata, align 8, !dbg !2140
  %incdec.ptr = getelementptr inbounds i8, i8* %56, i32 1, !dbg !2140
  store i8* %incdec.ptr, i8** %extradata, align 8, !dbg !2140
  br label %for.inc, !dbg !2141

for.inc:                                          ; preds = %if.end39
  %57 = load i32, i32* %m, align 4, !dbg !2142
  %inc = add nsw i32 %57, 1, !dbg !2142
  store i32 %inc, i32* %m, align 4, !dbg !2142
  br label %for.cond, !dbg !2144, !llvm.loop !2145

for.end:                                          ; preds = %if.then38, %for.cond
  br label %if.end40, !dbg !2147

if.end40:                                         ; preds = %for.end, %if.end29
  %58 = load i32, i32* %marker_found, align 4, !dbg !2148
  %tobool41 = icmp ne i32 %58, 0, !dbg !2148
  br i1 %tobool41, label %if.then42, label %if.end139, !dbg !2149

if.then42:                                        ; preds = %if.end40
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gb, metadata !2150, metadata !1727), !dbg !2151
  call void @llvm.dbg.declare(metadata i32* %frame_size_code, metadata !2152, metadata !1727), !dbg !2153
  call void @llvm.dbg.declare(metadata i32* %unk0, metadata !2154, metadata !1727), !dbg !2155
  call void @llvm.dbg.declare(metadata i32* %unk1, metadata !2156, metadata !1727), !dbg !2157
  call void @llvm.dbg.declare(metadata i32* %unk2, metadata !2158, metadata !1727), !dbg !2159
  call void @llvm.dbg.declare(metadata i32* %unk3, metadata !2160, metadata !1727), !dbg !2161
  call void @llvm.dbg.declare(metadata i32* %unk4, metadata !2162, metadata !1727), !dbg !2163
  %59 = load i8*, i8** %extradata, align 8, !dbg !2164
  %arrayidx = getelementptr inbounds i8, i8* %59, i64 4, !dbg !2164
  %60 = bitcast i8* %arrayidx to %union.unaligned_32*, !dbg !2165
  %l = bitcast %union.unaligned_32* %60 to i32*, !dbg !2165
  %61 = load i32, i32* %l, align 1, !dbg !2165
  store i32 %61, i32* %x.addr.i, align 4, !dbg !2166
  %62 = load i32, i32* %x.addr.i, align 4, !dbg !2167
  %shl.i = shl i32 %62, 8, !dbg !2168
  %and.i = and i32 %shl.i, 65280, !dbg !2169
  %63 = load i32, i32* %x.addr.i, align 4, !dbg !2170
  %shr.i = lshr i32 %63, 8, !dbg !2171
  %and1.i = and i32 %shr.i, 255, !dbg !2172
  %or.i = or i32 %and.i, %and1.i, !dbg !2173
  %shl2.i = shl i32 %or.i, 16, !dbg !2174
  %64 = load i32, i32* %x.addr.i, align 4, !dbg !2175
  %shr3.i = lshr i32 %64, 16, !dbg !2176
  %shl4.i = shl i32 %shr3.i, 8, !dbg !2177
  %and5.i = and i32 %shl4.i, 65280, !dbg !2178
  %65 = load i32, i32* %x.addr.i, align 4, !dbg !2179
  %shr6.i = lshr i32 %65, 16, !dbg !2180
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !2181
  %and8.i = and i32 %shr7.i, 255, !dbg !2182
  %or9.i = or i32 %and5.i, %and8.i, !dbg !2183
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !2184
  store i32 %or10.i, i32* %size, align 4, !dbg !2185
  %66 = load i32, i32* %size, align 4, !dbg !2186
  %conv = zext i32 %66 to i64, !dbg !2186
  %67 = load i8*, i8** %extradata_end, align 8, !dbg !2188
  %68 = load i8*, i8** %extradata, align 8, !dbg !2189
  %sub.ptr.lhs.cast = ptrtoint i8* %67 to i64, !dbg !2190
  %sub.ptr.rhs.cast = ptrtoint i8* %68 to i64, !dbg !2190
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2190
  %sub = sub nsw i64 %sub.ptr.sub, 8, !dbg !2191
  %cmp44 = icmp sgt i64 %conv, %sub, !dbg !2192
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !2193

if.then46:                                        ; preds = %if.then42
  store i32 -1094995529, i32* %ret, align 4, !dbg !2194
  br label %fail, !dbg !2196

if.end47:                                         ; preds = %if.then42
  %69 = load i8*, i8** %extradata, align 8, !dbg !2197
  %add.ptr48 = getelementptr inbounds i8, i8* %69, i64 8, !dbg !2198
  %70 = load i32, i32* %size, align 4, !dbg !2199
  %mul = mul i32 %70, 8, !dbg !2200
  %call49 = call i32 @init_get_bits(%struct.GetBitContext* %gb, i8* %add.ptr48, i32 %mul), !dbg !2201
  %call50 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 3), !dbg !2202
  store i32 %call50, i32* %frame_size_code, align 4, !dbg !2203
  %71 = load i32, i32* %frame_size_code, align 4, !dbg !2204
  switch i32 %71, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb51
    i32 2, label %sw.bb54
    i32 3, label %sw.bb57
    i32 4, label %sw.bb60
    i32 5, label %sw.bb63
    i32 6, label %sw.bb66
    i32 7, label %sw.bb69
  ], !dbg !2205

sw.bb:                                            ; preds = %if.end47
  %72 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2206
  %width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %72, i32 0, i32 20, !dbg !2208
  store i32 160, i32* %width, align 4, !dbg !2209
  %73 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2210
  %height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %73, i32 0, i32 21, !dbg !2211
  store i32 120, i32* %height, align 8, !dbg !2212
  br label %sw.epilog, !dbg !2213

sw.bb51:                                          ; preds = %if.end47
  %74 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2214
  %width52 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %74, i32 0, i32 20, !dbg !2215
  store i32 128, i32* %width52, align 4, !dbg !2216
  %75 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2217
  %height53 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %75, i32 0, i32 21, !dbg !2218
  store i32 96, i32* %height53, align 8, !dbg !2219
  br label %sw.epilog, !dbg !2220

sw.bb54:                                          ; preds = %if.end47
  %76 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2221
  %width55 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %76, i32 0, i32 20, !dbg !2222
  store i32 176, i32* %width55, align 4, !dbg !2223
  %77 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2224
  %height56 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %77, i32 0, i32 21, !dbg !2225
  store i32 144, i32* %height56, align 8, !dbg !2226
  br label %sw.epilog, !dbg !2227

sw.bb57:                                          ; preds = %if.end47
  %78 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2228
  %width58 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %78, i32 0, i32 20, !dbg !2229
  store i32 352, i32* %width58, align 4, !dbg !2230
  %79 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2231
  %height59 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %79, i32 0, i32 21, !dbg !2232
  store i32 288, i32* %height59, align 8, !dbg !2233
  br label %sw.epilog, !dbg !2234

sw.bb60:                                          ; preds = %if.end47
  %80 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2235
  %width61 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %80, i32 0, i32 20, !dbg !2236
  store i32 704, i32* %width61, align 4, !dbg !2237
  %81 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2238
  %height62 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %81, i32 0, i32 21, !dbg !2239
  store i32 576, i32* %height62, align 8, !dbg !2240
  br label %sw.epilog, !dbg !2241

sw.bb63:                                          ; preds = %if.end47
  %82 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2242
  %width64 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %82, i32 0, i32 20, !dbg !2243
  store i32 240, i32* %width64, align 4, !dbg !2244
  %83 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2245
  %height65 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %83, i32 0, i32 21, !dbg !2246
  store i32 180, i32* %height65, align 8, !dbg !2247
  br label %sw.epilog, !dbg !2248

sw.bb66:                                          ; preds = %if.end47
  %84 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2249
  %width67 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %84, i32 0, i32 20, !dbg !2250
  store i32 320, i32* %width67, align 4, !dbg !2251
  %85 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2252
  %height68 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %85, i32 0, i32 21, !dbg !2253
  store i32 240, i32* %height68, align 8, !dbg !2254
  br label %sw.epilog, !dbg !2255

sw.bb69:                                          ; preds = %if.end47
  %call70 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 12), !dbg !2256
  %86 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2257
  %width71 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %86, i32 0, i32 20, !dbg !2258
  store i32 %call70, i32* %width71, align 4, !dbg !2259
  %call72 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 12), !dbg !2260
  %87 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2261
  %height73 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %87, i32 0, i32 21, !dbg !2262
  store i32 %call72, i32* %height73, align 8, !dbg !2263
  br label %sw.epilog, !dbg !2264

sw.epilog:                                        ; preds = %if.end47, %sw.bb69, %sw.bb66, %sw.bb63, %sw.bb60, %sw.bb57, %sw.bb54, %sw.bb51, %sw.bb
  %call74 = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !2265
  %88 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2266
  %halfpel_flag75 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %88, i32 0, i32 13, !dbg !2267
  store i32 %call74, i32* %halfpel_flag75, align 4, !dbg !2268
  %call76 = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !2269
  %89 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2270
  %thirdpel_flag77 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %89, i32 0, i32 14, !dbg !2271
  store i32 %call76, i32* %thirdpel_flag77, align 8, !dbg !2272
  %call78 = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !2273
  store i32 %call78, i32* %unk0, align 4, !dbg !2274
  %call79 = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !2275
  store i32 %call79, i32* %unk1, align 4, !dbg !2276
  %call80 = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !2277
  store i32 %call80, i32* %unk2, align 4, !dbg !2278
  %call81 = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !2279
  store i32 %call81, i32* %unk3, align 4, !dbg !2280
  %call82 = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !2281
  %90 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2282
  %low_delay = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %90, i32 0, i32 33, !dbg !2283
  store i32 %call82, i32* %low_delay, align 4, !dbg !2284
  %call83 = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !2285
  store i32 %call83, i32* %unk4, align 4, !dbg !2286
  %91 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2287
  %92 = bitcast %struct.AVCodecContext* %91 to i8*, !dbg !2287
  %93 = load i32, i32* %unk0, align 4, !dbg !2288
  %94 = load i32, i32* %unk1, align 4, !dbg !2289
  %95 = load i32, i32* %unk2, align 4, !dbg !2290
  %96 = load i32, i32* %unk3, align 4, !dbg !2291
  %97 = load i32, i32* %unk4, align 4, !dbg !2292
  call void (i8*, i32, i8*, ...) @av_log(i8* %92, i32 48, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i32 0, i32 0), i32 %93, i32 %94, i32 %95, i32 %96, i32 %97), !dbg !2293
  %call84 = call i32 @skip_1stop_8data_bits(%struct.GetBitContext* %gb), !dbg !2294
  %cmp85 = icmp slt i32 %call84, 0, !dbg !2296
  br i1 %cmp85, label %if.then87, label %if.end88, !dbg !2297

if.then87:                                        ; preds = %sw.epilog
  store i32 -1094995529, i32* %ret, align 4, !dbg !2298
  br label %fail, !dbg !2300

if.end88:                                         ; preds = %sw.epilog
  %call89 = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !2301
  %98 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2302
  %has_watermark90 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %98, i32 0, i32 15, !dbg !2303
  store i32 %call89, i32* %has_watermark90, align 4, !dbg !2304
  %99 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2305
  %low_delay91 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %99, i32 0, i32 33, !dbg !2306
  %100 = load i32, i32* %low_delay91, align 4, !dbg !2306
  %tobool92 = icmp ne i32 %100, 0, !dbg !2307
  %lnot = xor i1 %tobool92, true, !dbg !2307
  %lnot.ext = zext i1 %lnot to i32, !dbg !2307
  %101 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2308
  %has_b_frames = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %101, i32 0, i32 32, !dbg !2309
  store i32 %lnot.ext, i32* %has_b_frames, align 8, !dbg !2310
  %102 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2311
  %has_watermark93 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %102, i32 0, i32 15, !dbg !2313
  %103 = load i32, i32* %has_watermark93, align 4, !dbg !2313
  %tobool94 = icmp ne i32 %103, 0, !dbg !2311
  br i1 %tobool94, label %if.then95, label %if.end138, !dbg !2314

if.then95:                                        ; preds = %if.end88
  call void @llvm.dbg.declare(metadata i32* %watermark_width, metadata !2315, metadata !1727), !dbg !2317
  %call96 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %gb), !dbg !2318
  store i32 %call96, i32* %watermark_width, align 4, !dbg !2317
  call void @llvm.dbg.declare(metadata i32* %watermark_height, metadata !2319, metadata !1727), !dbg !2320
  %call97 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %gb), !dbg !2321
  store i32 %call97, i32* %watermark_height, align 4, !dbg !2320
  call void @llvm.dbg.declare(metadata i32* %u1, metadata !2322, metadata !1727), !dbg !2323
  %call98 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %gb), !dbg !2324
  store i32 %call98, i32* %u1, align 4, !dbg !2323
  call void @llvm.dbg.declare(metadata i32* %u2, metadata !2325, metadata !1727), !dbg !2326
  %call99 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 8), !dbg !2327
  store i32 %call99, i32* %u2, align 4, !dbg !2326
  call void @llvm.dbg.declare(metadata i32* %u3, metadata !2328, metadata !1727), !dbg !2329
  %call100 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 2), !dbg !2330
  store i32 %call100, i32* %u3, align 4, !dbg !2329
  call void @llvm.dbg.declare(metadata i32* %u4, metadata !2331, metadata !1727), !dbg !2332
  %call101 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %gb), !dbg !2333
  store i32 %call101, i32* %u4, align 4, !dbg !2332
  call void @llvm.dbg.declare(metadata i64* %buf_len, metadata !2334, metadata !1727), !dbg !2335
  %104 = load i32, i32* %watermark_width, align 4, !dbg !2336
  %105 = load i32, i32* %watermark_height, align 4, !dbg !2337
  %mul102 = mul i32 %104, %105, !dbg !2338
  %mul103 = mul i32 %mul102, 4, !dbg !2339
  %conv104 = zext i32 %mul103 to i64, !dbg !2336
  store i64 %conv104, i64* %buf_len, align 8, !dbg !2335
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !2340, metadata !1727), !dbg !2341
  %call105 = call i32 @get_bits_count(%struct.GetBitContext* %gb), !dbg !2342
  %add106 = add nsw i32 %call105, 7, !dbg !2343
  %shr = ashr i32 %add106, 3, !dbg !2344
  store i32 %shr, i32* %offset, align 4, !dbg !2341
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !2345, metadata !1727), !dbg !2346
  %106 = load i32, i32* %watermark_height, align 4, !dbg !2347
  %cmp107 = icmp ule i32 %106, 0, !dbg !2349
  br i1 %cmp107, label %if.then115, label %lor.lhs.false109, !dbg !2350

lor.lhs.false109:                                 ; preds = %if.then95
  %107 = load i32, i32* %watermark_width, align 4, !dbg !2351
  %conv110 = zext i32 %107 to i64, !dbg !2352
  %mul111 = mul i64 %conv110, 4, !dbg !2353
  %108 = load i32, i32* %watermark_height, align 4, !dbg !2354
  %div = udiv i32 -1, %108, !dbg !2355
  %conv112 = zext i32 %div to i64, !dbg !2356
  %cmp113 = icmp ugt i64 %mul111, %conv112, !dbg !2357
  br i1 %cmp113, label %if.then115, label %if.end116, !dbg !2358

if.then115:                                       ; preds = %lor.lhs.false109, %if.then95
  store i32 -1, i32* %ret, align 4, !dbg !2360
  br label %fail, !dbg !2362

if.end116:                                        ; preds = %lor.lhs.false109
  %109 = load i64, i64* %buf_len, align 8, !dbg !2363
  %call117 = call noalias i8* @av_malloc(i64 %109), !dbg !2364
  store i8* %call117, i8** %buf, align 8, !dbg !2365
  %110 = load i8*, i8** %buf, align 8, !dbg !2366
  %tobool118 = icmp ne i8* %110, null, !dbg !2366
  br i1 %tobool118, label %if.end120, label %if.then119, !dbg !2368

if.then119:                                       ; preds = %if.end116
  store i32 -12, i32* %ret, align 4, !dbg !2369
  br label %fail, !dbg !2371

if.end120:                                        ; preds = %if.end116
  %111 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2372
  %112 = bitcast %struct.AVCodecContext* %111 to i8*, !dbg !2372
  %113 = load i32, i32* %watermark_width, align 4, !dbg !2373
  %114 = load i32, i32* %watermark_height, align 4, !dbg !2374
  call void (i8*, i32, i8*, ...) @av_log(i8* %112, i32 48, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0), i32 %113, i32 %114), !dbg !2375
  %115 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2376
  %116 = bitcast %struct.AVCodecContext* %115 to i8*, !dbg !2376
  %117 = load i32, i32* %u1, align 4, !dbg !2377
  %118 = load i32, i32* %u2, align 4, !dbg !2378
  %119 = load i32, i32* %u3, align 4, !dbg !2379
  %120 = load i32, i32* %u4, align 4, !dbg !2380
  %121 = load i32, i32* %offset, align 4, !dbg !2381
  call void (i8*, i32, i8*, ...) @av_log(i8* %116, i32 48, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5, i32 0, i32 0), i32 %117, i32 %118, i32 %119, i32 %120, i32 %121), !dbg !2382
  %122 = load i8*, i8** %buf, align 8, !dbg !2383
  %123 = load i8*, i8** %extradata, align 8, !dbg !2385
  %add.ptr121 = getelementptr inbounds i8, i8* %123, i64 8, !dbg !2386
  %124 = load i32, i32* %offset, align 4, !dbg !2387
  %idx.ext122 = sext i32 %124 to i64, !dbg !2388
  %add.ptr123 = getelementptr inbounds i8, i8* %add.ptr121, i64 %idx.ext122, !dbg !2388
  %125 = load i32, i32* %size, align 4, !dbg !2389
  %126 = load i32, i32* %offset, align 4, !dbg !2390
  %sub124 = sub i32 %125, %126, !dbg !2391
  %conv125 = zext i32 %sub124 to i64, !dbg !2389
  %call126 = call i32 @uncompress(i8* %122, i64* %buf_len, i8* %add.ptr123, i64 %conv125), !dbg !2392
  %cmp127 = icmp ne i32 %call126, 0, !dbg !2393
  br i1 %cmp127, label %if.then129, label %if.end130, !dbg !2394

if.then129:                                       ; preds = %if.end120
  %127 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2395
  %128 = bitcast %struct.AVCodecContext* %127 to i8*, !dbg !2395
  call void (i8*, i32, i8*, ...) @av_log(i8* %128, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6, i32 0, i32 0)), !dbg !2397
  %129 = load i8*, i8** %buf, align 8, !dbg !2398
  call void @av_free(i8* %129), !dbg !2399
  store i32 -1, i32* %ret, align 4, !dbg !2400
  br label %fail, !dbg !2401

if.end130:                                        ; preds = %if.end120
  %130 = load i8*, i8** %buf, align 8, !dbg !2402
  %131 = load i64, i64* %buf_len, align 8, !dbg !2403
  %conv131 = trunc i64 %131 to i32, !dbg !2403
  %call132 = call zeroext i16 @ff_svq1_packet_checksum(i8* %130, i32 %conv131, i32 0), !dbg !2404
  %conv133 = zext i16 %call132 to i32, !dbg !2404
  %132 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2405
  %watermark_key = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %132, i32 0, i32 16, !dbg !2406
  store i32 %conv133, i32* %watermark_key, align 16, !dbg !2407
  %133 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2408
  %watermark_key134 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %133, i32 0, i32 16, !dbg !2409
  %134 = load i32, i32* %watermark_key134, align 16, !dbg !2409
  %shl = shl i32 %134, 16, !dbg !2410
  %135 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2411
  %watermark_key135 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %135, i32 0, i32 16, !dbg !2412
  %136 = load i32, i32* %watermark_key135, align 16, !dbg !2412
  %or = or i32 %shl, %136, !dbg !2413
  %137 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2414
  %watermark_key136 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %137, i32 0, i32 16, !dbg !2415
  store i32 %or, i32* %watermark_key136, align 16, !dbg !2416
  %138 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2417
  %139 = bitcast %struct.AVCodecContext* %138 to i8*, !dbg !2417
  %140 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2418
  %watermark_key137 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %140, i32 0, i32 16, !dbg !2419
  %141 = load i32, i32* %watermark_key137, align 16, !dbg !2419
  call void (i8*, i32, i8*, ...) @av_log(i8* %139, i32 48, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i32 0, i32 0), i32 %141), !dbg !2420
  %142 = load i8*, i8** %buf, align 8, !dbg !2421
  call void @av_free(i8* %142), !dbg !2422
  br label %if.end138, !dbg !2423

if.end138:                                        ; preds = %if.end130, %if.end88
  br label %if.end139, !dbg !2424

if.end139:                                        ; preds = %if.end138, %if.end40
  %143 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2425
  %width140 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %143, i32 0, i32 20, !dbg !2426
  %144 = load i32, i32* %width140, align 4, !dbg !2426
  %add141 = add nsw i32 %144, 15, !dbg !2427
  %div142 = sdiv i32 %add141, 16, !dbg !2428
  %145 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2429
  %mb_width = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %145, i32 0, i32 37, !dbg !2430
  store i32 %div142, i32* %mb_width, align 4, !dbg !2431
  %146 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2432
  %height143 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %146, i32 0, i32 21, !dbg !2433
  %147 = load i32, i32* %height143, align 8, !dbg !2433
  %add144 = add nsw i32 %147, 15, !dbg !2434
  %div145 = sdiv i32 %add144, 16, !dbg !2435
  %148 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2436
  %mb_height = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %148, i32 0, i32 38, !dbg !2437
  store i32 %div145, i32* %mb_height, align 16, !dbg !2438
  %149 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2439
  %mb_width146 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %149, i32 0, i32 37, !dbg !2440
  %150 = load i32, i32* %mb_width146, align 4, !dbg !2440
  %add147 = add nsw i32 %150, 1, !dbg !2441
  %151 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2442
  %mb_stride = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %151, i32 0, i32 39, !dbg !2443
  store i32 %add147, i32* %mb_stride, align 4, !dbg !2444
  %152 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2445
  %mb_width148 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %152, i32 0, i32 37, !dbg !2446
  %153 = load i32, i32* %mb_width148, align 4, !dbg !2446
  %154 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2447
  %mb_height149 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %154, i32 0, i32 38, !dbg !2448
  %155 = load i32, i32* %mb_height149, align 16, !dbg !2448
  %mul150 = mul nsw i32 %153, %155, !dbg !2449
  %156 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2450
  %mb_num = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %156, i32 0, i32 40, !dbg !2451
  store i32 %mul150, i32* %mb_num, align 8, !dbg !2452
  %157 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2453
  %mb_width151 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %157, i32 0, i32 37, !dbg !2454
  %158 = load i32, i32* %mb_width151, align 4, !dbg !2454
  %mul152 = mul nsw i32 4, %158, !dbg !2455
  %159 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2456
  %b_stride = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %159, i32 0, i32 41, !dbg !2457
  store i32 %mul152, i32* %b_stride, align 4, !dbg !2458
  %160 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2459
  %mb_width153 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %160, i32 0, i32 37, !dbg !2460
  %161 = load i32, i32* %mb_width153, align 4, !dbg !2460
  %mul154 = mul nsw i32 %161, 16, !dbg !2461
  %162 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2462
  %h_edge_pos = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %162, i32 0, i32 21, !dbg !2463
  store i32 %mul154, i32* %h_edge_pos, align 4, !dbg !2464
  %163 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2465
  %mb_height155 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %163, i32 0, i32 38, !dbg !2466
  %164 = load i32, i32* %mb_height155, align 16, !dbg !2466
  %mul156 = mul nsw i32 %164, 16, !dbg !2467
  %165 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2468
  %v_edge_pos = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %165, i32 0, i32 22, !dbg !2469
  store i32 %mul156, i32* %v_edge_pos, align 16, !dbg !2470
  %166 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2471
  %mb_stride157 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %166, i32 0, i32 39, !dbg !2472
  %167 = load i32, i32* %mb_stride157, align 4, !dbg !2472
  %mul158 = mul nsw i32 %167, 2, !dbg !2473
  %mul159 = mul nsw i32 %mul158, 8, !dbg !2474
  %conv160 = sext i32 %mul159 to i64, !dbg !2471
  %call161 = call noalias i8* @av_mallocz(i64 %conv160), !dbg !2475
  %168 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2476
  %intra4x4_pred_mode = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %168, i32 0, i32 46, !dbg !2477
  store i8* %call161, i8** %intra4x4_pred_mode, align 8, !dbg !2478
  %169 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2479
  %intra4x4_pred_mode162 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %169, i32 0, i32 46, !dbg !2481
  %170 = load i8*, i8** %intra4x4_pred_mode162, align 8, !dbg !2481
  %tobool163 = icmp ne i8* %170, null, !dbg !2479
  br i1 %tobool163, label %if.end165, label %if.then164, !dbg !2482

if.then164:                                       ; preds = %if.end139
  store i32 -12, i32* %retval, align 4, !dbg !2483
  br label %return, !dbg !2483

if.end165:                                        ; preds = %if.end139
  %171 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2484
  %mb_stride166 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %171, i32 0, i32 39, !dbg !2485
  %172 = load i32, i32* %mb_stride166, align 4, !dbg !2485
  %173 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2486
  %mb_height167 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %173, i32 0, i32 38, !dbg !2487
  %174 = load i32, i32* %mb_height167, align 16, !dbg !2487
  %add168 = add nsw i32 %174, 1, !dbg !2488
  %mul169 = mul nsw i32 %172, %add168, !dbg !2489
  %conv170 = sext i32 %mul169 to i64, !dbg !2484
  %mul171 = mul i64 %conv170, 4, !dbg !2490
  %call172 = call noalias i8* @av_mallocz(i64 %mul171), !dbg !2491
  %175 = bitcast i8* %call172 to i32*, !dbg !2491
  %176 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2492
  %mb2br_xy = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %176, i32 0, i32 42, !dbg !2493
  store i32* %175, i32** %mb2br_xy, align 16, !dbg !2494
  %177 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2495
  %mb2br_xy173 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %177, i32 0, i32 42, !dbg !2497
  %178 = load i32*, i32** %mb2br_xy173, align 16, !dbg !2497
  %tobool174 = icmp ne i32* %178, null, !dbg !2495
  br i1 %tobool174, label %if.end176, label %if.then175, !dbg !2498

if.then175:                                       ; preds = %if.end165
  store i32 -12, i32* %retval, align 4, !dbg !2499
  br label %return, !dbg !2499

if.end176:                                        ; preds = %if.end165
  store i32 0, i32* %y, align 4, !dbg !2500
  br label %for.cond177, !dbg !2502

for.cond177:                                      ; preds = %for.inc198, %if.end176
  %179 = load i32, i32* %y, align 4, !dbg !2503
  %180 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2506
  %mb_height178 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %180, i32 0, i32 38, !dbg !2507
  %181 = load i32, i32* %mb_height178, align 16, !dbg !2507
  %cmp179 = icmp slt i32 %179, %181, !dbg !2508
  br i1 %cmp179, label %for.body181, label %for.end200, !dbg !2509

for.body181:                                      ; preds = %for.cond177
  store i32 0, i32* %x, align 4, !dbg !2510
  br label %for.cond182, !dbg !2512

for.cond182:                                      ; preds = %for.inc195, %for.body181
  %182 = load i32, i32* %x, align 4, !dbg !2513
  %183 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2516
  %mb_width183 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %183, i32 0, i32 37, !dbg !2517
  %184 = load i32, i32* %mb_width183, align 4, !dbg !2517
  %cmp184 = icmp slt i32 %182, %184, !dbg !2518
  br i1 %cmp184, label %for.body186, label %for.end197, !dbg !2519

for.body186:                                      ; preds = %for.cond182
  call void @llvm.dbg.declare(metadata i32* %mb_xy, metadata !2520, metadata !1727), !dbg !2522
  %185 = load i32, i32* %x, align 4, !dbg !2523
  %186 = load i32, i32* %y, align 4, !dbg !2524
  %187 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2525
  %mb_stride187 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %187, i32 0, i32 39, !dbg !2526
  %188 = load i32, i32* %mb_stride187, align 4, !dbg !2526
  %mul188 = mul nsw i32 %186, %188, !dbg !2527
  %add189 = add nsw i32 %185, %mul188, !dbg !2528
  store i32 %add189, i32* %mb_xy, align 4, !dbg !2522
  %189 = load i32, i32* %mb_xy, align 4, !dbg !2529
  %190 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2530
  %mb_stride190 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %190, i32 0, i32 39, !dbg !2531
  %191 = load i32, i32* %mb_stride190, align 4, !dbg !2531
  %mul191 = mul nsw i32 2, %191, !dbg !2532
  %rem = srem i32 %189, %mul191, !dbg !2533
  %mul192 = mul nsw i32 8, %rem, !dbg !2534
  %192 = load i32, i32* %mb_xy, align 4, !dbg !2535
  %idxprom = sext i32 %192 to i64, !dbg !2536
  %193 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2536
  %mb2br_xy193 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %193, i32 0, i32 42, !dbg !2537
  %194 = load i32*, i32** %mb2br_xy193, align 16, !dbg !2537
  %arrayidx194 = getelementptr inbounds i32, i32* %194, i64 %idxprom, !dbg !2536
  store i32 %mul192, i32* %arrayidx194, align 4, !dbg !2538
  br label %for.inc195, !dbg !2539

for.inc195:                                       ; preds = %for.body186
  %195 = load i32, i32* %x, align 4, !dbg !2540
  %inc196 = add nsw i32 %195, 1, !dbg !2540
  store i32 %inc196, i32* %x, align 4, !dbg !2540
  br label %for.cond182, !dbg !2542, !llvm.loop !2543

for.end197:                                       ; preds = %for.cond182
  br label %for.inc198, !dbg !2545

for.inc198:                                       ; preds = %for.end197
  %196 = load i32, i32* %y, align 4, !dbg !2547
  %inc199 = add nsw i32 %196, 1, !dbg !2547
  store i32 %inc199, i32* %y, align 4, !dbg !2547
  br label %for.cond177, !dbg !2549, !llvm.loop !2550

for.end200:                                       ; preds = %for.cond177
  %197 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2552
  call void @init_dequant4_coeff_table(%struct.SVQ3Context* %197), !dbg !2553
  store i32 0, i32* %retval, align 4, !dbg !2554
  br label %return, !dbg !2554

fail:                                             ; preds = %if.then129, %if.then119, %if.then115, %if.then87, %if.then46, %if.then
  %198 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2555
  %call201 = call i32 @svq3_decode_end(%struct.AVCodecContext* %198), !dbg !2556
  %199 = load i32, i32* %ret, align 4, !dbg !2557
  store i32 %199, i32* %retval, align 4, !dbg !2558
  br label %return, !dbg !2558

return:                                           ; preds = %fail, %for.end200, %if.then175, %if.then164, %if.then28
  %200 = load i32, i32* %retval, align 4, !dbg !2559
  ret i32 %200, !dbg !2559
}

; Function Attrs: nounwind uwtable
define internal i32 @svq3_decode_frame(%struct.AVCodecContext* %avctx, i8* %data, i32* %got_frame, %struct.AVPacket* %avpkt) #1 !dbg !2560 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %data.addr = alloca i8*, align 8
  %got_frame.addr = alloca i32*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %s = alloca %struct.SVQ3Context*, align 8
  %buf_size = alloca i32, align 4
  %left = alloca i32, align 4
  %buf = alloca i8*, align 8
  %ret = alloca i32, align 4
  %m = alloca i32, align 4
  %i = alloca i32, align 4
  %SWAP_tmp = alloca %struct.SVQ3Frame*, align 8
  %i352 = alloca i32, align 4
  %j = alloca i32, align 4
  %mb_type = alloca i32, align 4
  %SWAP_tmp583 = alloca %struct.SVQ3Frame*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2561, metadata !1727), !dbg !2562
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !2563, metadata !1727), !dbg !2564
  store i32* %got_frame, i32** %got_frame.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame.addr, metadata !2565, metadata !1727), !dbg !2566
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !2567, metadata !1727), !dbg !2568
  call void @llvm.dbg.declare(metadata %struct.SVQ3Context** %s, metadata !2569, metadata !1727), !dbg !2570
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2571
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2572
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2572
  %2 = bitcast i8* %1 to %struct.SVQ3Context*, !dbg !2571
  store %struct.SVQ3Context* %2, %struct.SVQ3Context** %s, align 8, !dbg !2570
  call void @llvm.dbg.declare(metadata i32* %buf_size, metadata !2573, metadata !1727), !dbg !2574
  %3 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2575
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %3, i32 0, i32 4, !dbg !2576
  %4 = load i32, i32* %size, align 8, !dbg !2576
  store i32 %4, i32* %buf_size, align 4, !dbg !2574
  call void @llvm.dbg.declare(metadata i32* %left, metadata !2577, metadata !1727), !dbg !2578
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !2579, metadata !1727), !dbg !2580
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2581, metadata !1727), !dbg !2582
  call void @llvm.dbg.declare(metadata i32* %m, metadata !2583, metadata !1727), !dbg !2584
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2585, metadata !1727), !dbg !2586
  %5 = load i32, i32* %buf_size, align 4, !dbg !2587
  %cmp = icmp eq i32 %5, 0, !dbg !2589
  br i1 %cmp, label %if.then, label %if.end12, !dbg !2590

if.then:                                          ; preds = %entry
  %6 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2591
  %next_pic = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %6, i32 0, i32 7, !dbg !2594
  %7 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %next_pic, align 8, !dbg !2594
  %f = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %7, i32 0, i32 0, !dbg !2595
  %8 = load %struct.AVFrame*, %struct.AVFrame** %f, align 8, !dbg !2595
  %data1 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %8, i32 0, i32 0, !dbg !2596
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data1, i64 0, i64 0, !dbg !2591
  %9 = load i8*, i8** %arrayidx, align 8, !dbg !2591
  %tobool = icmp ne i8* %9, null, !dbg !2591
  br i1 %tobool, label %land.lhs.true, label %if.end11, !dbg !2597

land.lhs.true:                                    ; preds = %if.then
  %10 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2598
  %low_delay = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %10, i32 0, i32 33, !dbg !2600
  %11 = load i32, i32* %low_delay, align 4, !dbg !2600
  %tobool2 = icmp ne i32 %11, 0, !dbg !2598
  br i1 %tobool2, label %if.end11, label %land.lhs.true3, !dbg !2601

land.lhs.true3:                                   ; preds = %land.lhs.true
  %12 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2602
  %last_frame_output = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %12, i32 0, i32 23, !dbg !2604
  %13 = load i32, i32* %last_frame_output, align 4, !dbg !2604
  %tobool4 = icmp ne i32 %13, 0, !dbg !2602
  br i1 %tobool4, label %if.end11, label %if.then5, !dbg !2605

if.then5:                                         ; preds = %land.lhs.true3
  %14 = load i8*, i8** %data.addr, align 8, !dbg !2606
  %15 = bitcast i8* %14 to %struct.AVFrame*, !dbg !2606
  %16 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2608
  %next_pic6 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %16, i32 0, i32 7, !dbg !2609
  %17 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %next_pic6, align 8, !dbg !2609
  %f7 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %17, i32 0, i32 0, !dbg !2610
  %18 = load %struct.AVFrame*, %struct.AVFrame** %f7, align 8, !dbg !2610
  %call = call i32 @av_frame_ref(%struct.AVFrame* %15, %struct.AVFrame* %18), !dbg !2611
  store i32 %call, i32* %ret, align 4, !dbg !2612
  %19 = load i32, i32* %ret, align 4, !dbg !2613
  %cmp8 = icmp slt i32 %19, 0, !dbg !2615
  br i1 %cmp8, label %if.then9, label %if.end, !dbg !2616

if.then9:                                         ; preds = %if.then5
  %20 = load i32, i32* %ret, align 4, !dbg !2617
  store i32 %20, i32* %retval, align 4, !dbg !2618
  br label %return, !dbg !2618

if.end:                                           ; preds = %if.then5
  %21 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2619
  %last_frame_output10 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %21, i32 0, i32 23, !dbg !2620
  store i32 1, i32* %last_frame_output10, align 4, !dbg !2621
  %22 = load i32*, i32** %got_frame.addr, align 8, !dbg !2622
  store i32 1, i32* %22, align 4, !dbg !2623
  br label %if.end11, !dbg !2624

if.end11:                                         ; preds = %if.end, %land.lhs.true3, %land.lhs.true, %if.then
  store i32 0, i32* %retval, align 4, !dbg !2625
  br label %return, !dbg !2625

if.end12:                                         ; preds = %entry
  %23 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2626
  %mb_xy = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %23, i32 0, i32 36, !dbg !2627
  store i32 0, i32* %mb_xy, align 8, !dbg !2628
  %24 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2629
  %mb_y = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %24, i32 0, i32 35, !dbg !2630
  store i32 0, i32* %mb_y, align 4, !dbg !2631
  %25 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2632
  %mb_x = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %25, i32 0, i32 34, !dbg !2633
  store i32 0, i32* %mb_x, align 16, !dbg !2634
  %26 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2635
  %watermark_key = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %26, i32 0, i32 16, !dbg !2637
  %27 = load i32, i32* %watermark_key, align 16, !dbg !2637
  %tobool13 = icmp ne i32 %27, 0, !dbg !2635
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !2638

if.then14:                                        ; preds = %if.end12
  %28 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2639
  %buf15 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %28, i32 0, i32 17, !dbg !2641
  %29 = bitcast i8** %buf15 to i8*, !dbg !2642
  %30 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2643
  %buf_size16 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %30, i32 0, i32 18, !dbg !2644
  %31 = load i32, i32* %buf_size, align 4, !dbg !2645
  %conv = sext i32 %31 to i64, !dbg !2645
  call void @av_fast_padded_malloc(i8* %29, i32* %buf_size16, i64 %conv), !dbg !2646
  %32 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2647
  %buf17 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %32, i32 0, i32 17, !dbg !2649
  %33 = load i8*, i8** %buf17, align 8, !dbg !2649
  %tobool18 = icmp ne i8* %33, null, !dbg !2647
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !2650

if.then19:                                        ; preds = %if.then14
  store i32 -12, i32* %retval, align 4, !dbg !2651
  br label %return, !dbg !2651

if.end20:                                         ; preds = %if.then14
  %34 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2652
  %buf21 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %34, i32 0, i32 17, !dbg !2653
  %35 = load i8*, i8** %buf21, align 8, !dbg !2653
  %36 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2654
  %data22 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %36, i32 0, i32 3, !dbg !2655
  %37 = load i8*, i8** %data22, align 8, !dbg !2655
  %38 = load i32, i32* %buf_size, align 4, !dbg !2656
  %conv23 = sext i32 %38 to i64, !dbg !2656
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %37, i64 %conv23, i32 1, i1 false), !dbg !2657
  %39 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2658
  %buf24 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %39, i32 0, i32 17, !dbg !2659
  %40 = load i8*, i8** %buf24, align 8, !dbg !2659
  store i8* %40, i8** %buf, align 8, !dbg !2660
  br label %if.end26, !dbg !2661

if.else:                                          ; preds = %if.end12
  %41 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2662
  %data25 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %41, i32 0, i32 3, !dbg !2664
  %42 = load i8*, i8** %data25, align 8, !dbg !2664
  store i8* %42, i8** %buf, align 8, !dbg !2665
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.end20
  %43 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2666
  %gb = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %43, i32 0, i32 9, !dbg !2667
  %44 = load i8*, i8** %buf, align 8, !dbg !2668
  %45 = load i32, i32* %buf_size, align 4, !dbg !2669
  %mul = mul nsw i32 8, %45, !dbg !2670
  %call27 = call i32 @init_get_bits(%struct.GetBitContext* %gb, i8* %44, i32 %mul), !dbg !2671
  store i32 %call27, i32* %ret, align 4, !dbg !2672
  %46 = load i32, i32* %ret, align 4, !dbg !2673
  %cmp28 = icmp slt i32 %46, 0, !dbg !2675
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !2676

if.then30:                                        ; preds = %if.end26
  %47 = load i32, i32* %ret, align 4, !dbg !2677
  store i32 %47, i32* %retval, align 4, !dbg !2678
  br label %return, !dbg !2678

if.end31:                                         ; preds = %if.end26
  %48 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2679
  %call32 = call i32 @svq3_decode_slice_header(%struct.AVCodecContext* %48), !dbg !2681
  %tobool33 = icmp ne i32 %call32, 0, !dbg !2681
  br i1 %tobool33, label %if.then34, label %if.end35, !dbg !2682

if.then34:                                        ; preds = %if.end31
  store i32 -1, i32* %retval, align 4, !dbg !2683
  br label %return, !dbg !2683

if.end35:                                         ; preds = %if.end31
  %49 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2684
  %slice_type = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %49, i32 0, i32 32, !dbg !2685
  %50 = load i32, i32* %slice_type, align 8, !dbg !2685
  %51 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2686
  %pict_type = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %51, i32 0, i32 31, !dbg !2687
  store i32 %50, i32* %pict_type, align 4, !dbg !2688
  %52 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2689
  %pict_type36 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %52, i32 0, i32 31, !dbg !2691
  %53 = load i32, i32* %pict_type36, align 4, !dbg !2691
  %cmp37 = icmp ne i32 %53, 3, !dbg !2692
  br i1 %cmp37, label %if.then39, label %if.end43, !dbg !2693

if.then39:                                        ; preds = %if.end35
  br label %do.body, !dbg !2694, !llvm.loop !2695

do.body:                                          ; preds = %if.then39
  call void @llvm.dbg.declare(metadata %struct.SVQ3Frame** %SWAP_tmp, metadata !2696, metadata !1727), !dbg !2698
  %54 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2699
  %last_pic = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %54, i32 0, i32 8, !dbg !2701
  %55 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %last_pic, align 16, !dbg !2701
  store %struct.SVQ3Frame* %55, %struct.SVQ3Frame** %SWAP_tmp, align 8, !dbg !2702
  %56 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2703
  %next_pic40 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %56, i32 0, i32 7, !dbg !2704
  %57 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %next_pic40, align 8, !dbg !2704
  %58 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2705
  %last_pic41 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %58, i32 0, i32 8, !dbg !2706
  store %struct.SVQ3Frame* %57, %struct.SVQ3Frame** %last_pic41, align 16, !dbg !2707
  %59 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %SWAP_tmp, align 8, !dbg !2708
  %60 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2709
  %next_pic42 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %60, i32 0, i32 7, !dbg !2710
  store %struct.SVQ3Frame* %59, %struct.SVQ3Frame** %next_pic42, align 8, !dbg !2711
  br label %do.end, !dbg !2712

do.end:                                           ; preds = %do.body
  br label %if.end43, !dbg !2713

if.end43:                                         ; preds = %do.end, %if.end35
  %61 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2715
  %cur_pic = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %61, i32 0, i32 6, !dbg !2716
  %62 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic, align 16, !dbg !2716
  %f44 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %62, i32 0, i32 0, !dbg !2717
  %63 = load %struct.AVFrame*, %struct.AVFrame** %f44, align 8, !dbg !2717
  call void @av_frame_unref(%struct.AVFrame* %63), !dbg !2718
  %64 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2719
  %pict_type45 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %64, i32 0, i32 31, !dbg !2720
  %65 = load i32, i32* %pict_type45, align 4, !dbg !2720
  %66 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2721
  %cur_pic46 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %66, i32 0, i32 6, !dbg !2722
  %67 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic46, align 16, !dbg !2722
  %f47 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %67, i32 0, i32 0, !dbg !2723
  %68 = load %struct.AVFrame*, %struct.AVFrame** %f47, align 8, !dbg !2723
  %pict_type48 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %68, i32 0, i32 8, !dbg !2724
  store i32 %65, i32* %pict_type48, align 4, !dbg !2725
  %69 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2726
  %pict_type49 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %69, i32 0, i32 31, !dbg !2727
  %70 = load i32, i32* %pict_type49, align 4, !dbg !2727
  %cmp50 = icmp eq i32 %70, 1, !dbg !2728
  %conv51 = zext i1 %cmp50 to i32, !dbg !2728
  %71 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2729
  %cur_pic52 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %71, i32 0, i32 6, !dbg !2730
  %72 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic52, align 16, !dbg !2730
  %f53 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %72, i32 0, i32 0, !dbg !2731
  %73 = load %struct.AVFrame*, %struct.AVFrame** %f53, align 8, !dbg !2731
  %key_frame = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %73, i32 0, i32 7, !dbg !2732
  store i32 %conv51, i32* %key_frame, align 8, !dbg !2733
  %74 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2734
  %75 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2735
  %cur_pic54 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %75, i32 0, i32 6, !dbg !2736
  %76 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic54, align 16, !dbg !2736
  %call55 = call i32 @get_buffer(%struct.AVCodecContext* %74, %struct.SVQ3Frame* %76), !dbg !2737
  store i32 %call55, i32* %ret, align 4, !dbg !2738
  %77 = load i32, i32* %ret, align 4, !dbg !2739
  %cmp56 = icmp slt i32 %77, 0, !dbg !2741
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !2742

if.then58:                                        ; preds = %if.end43
  %78 = load i32, i32* %ret, align 4, !dbg !2743
  store i32 %78, i32* %retval, align 4, !dbg !2744
  br label %return, !dbg !2744

if.end59:                                         ; preds = %if.end43
  store i32 0, i32* %i, align 4, !dbg !2745
  br label %for.cond, !dbg !2747

for.cond:                                         ; preds = %for.inc, %if.end59
  %79 = load i32, i32* %i, align 4, !dbg !2748
  %cmp60 = icmp slt i32 %79, 16, !dbg !2751
  br i1 %cmp60, label %for.body, label %for.end, !dbg !2752

for.body:                                         ; preds = %for.cond
  %80 = load i32, i32* %i, align 4, !dbg !2753
  %idxprom = sext i32 %80 to i64, !dbg !2755
  %arrayidx62 = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom, !dbg !2755
  %81 = load i8, i8* %arrayidx62, align 1, !dbg !2755
  %conv63 = zext i8 %81 to i32, !dbg !2755
  %82 = load i8, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @scan8, i64 0, i64 0), align 16, !dbg !2756
  %conv64 = zext i8 %82 to i32, !dbg !2756
  %sub = sub nsw i32 %conv63, %conv64, !dbg !2757
  %and = and i32 %sub, 7, !dbg !2758
  %mul65 = mul nsw i32 4, %and, !dbg !2759
  %83 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2760
  %cur_pic66 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %83, i32 0, i32 6, !dbg !2761
  %84 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic66, align 16, !dbg !2761
  %f67 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %84, i32 0, i32 0, !dbg !2762
  %85 = load %struct.AVFrame*, %struct.AVFrame** %f67, align 8, !dbg !2762
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %85, i32 0, i32 1, !dbg !2763
  %arrayidx68 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 0, !dbg !2760
  %86 = load i32, i32* %arrayidx68, align 8, !dbg !2760
  %mul69 = mul nsw i32 4, %86, !dbg !2764
  %87 = load i32, i32* %i, align 4, !dbg !2765
  %idxprom70 = sext i32 %87 to i64, !dbg !2766
  %arrayidx71 = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom70, !dbg !2766
  %88 = load i8, i8* %arrayidx71, align 1, !dbg !2766
  %conv72 = zext i8 %88 to i32, !dbg !2766
  %89 = load i8, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @scan8, i64 0, i64 0), align 16, !dbg !2767
  %conv73 = zext i8 %89 to i32, !dbg !2767
  %sub74 = sub nsw i32 %conv72, %conv73, !dbg !2768
  %shr = ashr i32 %sub74, 3, !dbg !2769
  %mul75 = mul nsw i32 %mul69, %shr, !dbg !2770
  %add = add nsw i32 %mul65, %mul75, !dbg !2771
  %90 = load i32, i32* %i, align 4, !dbg !2772
  %idxprom76 = sext i32 %90 to i64, !dbg !2773
  %91 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2773
  %block_offset = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %91, i32 0, i32 58, !dbg !2774
  %arrayidx77 = getelementptr inbounds [96 x i32], [96 x i32]* %block_offset, i64 0, i64 %idxprom76, !dbg !2773
  store i32 %add, i32* %arrayidx77, align 4, !dbg !2775
  %92 = load i32, i32* %i, align 4, !dbg !2776
  %idxprom78 = sext i32 %92 to i64, !dbg !2777
  %arrayidx79 = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom78, !dbg !2777
  %93 = load i8, i8* %arrayidx79, align 1, !dbg !2777
  %conv80 = zext i8 %93 to i32, !dbg !2777
  %94 = load i8, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @scan8, i64 0, i64 0), align 16, !dbg !2778
  %conv81 = zext i8 %94 to i32, !dbg !2778
  %sub82 = sub nsw i32 %conv80, %conv81, !dbg !2779
  %and83 = and i32 %sub82, 7, !dbg !2780
  %mul84 = mul nsw i32 4, %and83, !dbg !2781
  %95 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2782
  %cur_pic85 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %95, i32 0, i32 6, !dbg !2783
  %96 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic85, align 16, !dbg !2783
  %f86 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %96, i32 0, i32 0, !dbg !2784
  %97 = load %struct.AVFrame*, %struct.AVFrame** %f86, align 8, !dbg !2784
  %linesize87 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %97, i32 0, i32 1, !dbg !2785
  %arrayidx88 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize87, i64 0, i64 0, !dbg !2782
  %98 = load i32, i32* %arrayidx88, align 8, !dbg !2782
  %mul89 = mul nsw i32 8, %98, !dbg !2786
  %99 = load i32, i32* %i, align 4, !dbg !2787
  %idxprom90 = sext i32 %99 to i64, !dbg !2788
  %arrayidx91 = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom90, !dbg !2788
  %100 = load i8, i8* %arrayidx91, align 1, !dbg !2788
  %conv92 = zext i8 %100 to i32, !dbg !2788
  %101 = load i8, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @scan8, i64 0, i64 0), align 16, !dbg !2789
  %conv93 = zext i8 %101 to i32, !dbg !2789
  %sub94 = sub nsw i32 %conv92, %conv93, !dbg !2790
  %shr95 = ashr i32 %sub94, 3, !dbg !2791
  %mul96 = mul nsw i32 %mul89, %shr95, !dbg !2792
  %add97 = add nsw i32 %mul84, %mul96, !dbg !2793
  %102 = load i32, i32* %i, align 4, !dbg !2794
  %add98 = add nsw i32 48, %102, !dbg !2795
  %idxprom99 = sext i32 %add98 to i64, !dbg !2796
  %103 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2796
  %block_offset100 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %103, i32 0, i32 58, !dbg !2797
  %arrayidx101 = getelementptr inbounds [96 x i32], [96 x i32]* %block_offset100, i64 0, i64 %idxprom99, !dbg !2796
  store i32 %add97, i32* %arrayidx101, align 4, !dbg !2798
  br label %for.inc, !dbg !2799

for.inc:                                          ; preds = %for.body
  %104 = load i32, i32* %i, align 4, !dbg !2800
  %inc = add nsw i32 %104, 1, !dbg !2800
  store i32 %inc, i32* %i, align 4, !dbg !2800
  br label %for.cond, !dbg !2802, !llvm.loop !2803

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !2805
  br label %for.cond102, !dbg !2807

for.cond102:                                      ; preds = %for.inc162, %for.end
  %105 = load i32, i32* %i, align 4, !dbg !2808
  %cmp103 = icmp slt i32 %105, 16, !dbg !2811
  br i1 %cmp103, label %for.body105, label %for.end164, !dbg !2812

for.body105:                                      ; preds = %for.cond102
  %106 = load i32, i32* %i, align 4, !dbg !2813
  %idxprom106 = sext i32 %106 to i64, !dbg !2815
  %arrayidx107 = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom106, !dbg !2815
  %107 = load i8, i8* %arrayidx107, align 1, !dbg !2815
  %conv108 = zext i8 %107 to i32, !dbg !2815
  %108 = load i8, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @scan8, i64 0, i64 0), align 16, !dbg !2816
  %conv109 = zext i8 %108 to i32, !dbg !2816
  %sub110 = sub nsw i32 %conv108, %conv109, !dbg !2817
  %and111 = and i32 %sub110, 7, !dbg !2818
  %mul112 = mul nsw i32 4, %and111, !dbg !2819
  %109 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2820
  %cur_pic113 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %109, i32 0, i32 6, !dbg !2821
  %110 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic113, align 16, !dbg !2821
  %f114 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %110, i32 0, i32 0, !dbg !2822
  %111 = load %struct.AVFrame*, %struct.AVFrame** %f114, align 8, !dbg !2822
  %linesize115 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %111, i32 0, i32 1, !dbg !2823
  %arrayidx116 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize115, i64 0, i64 1, !dbg !2820
  %112 = load i32, i32* %arrayidx116, align 4, !dbg !2820
  %mul117 = mul nsw i32 4, %112, !dbg !2824
  %113 = load i32, i32* %i, align 4, !dbg !2825
  %idxprom118 = sext i32 %113 to i64, !dbg !2826
  %arrayidx119 = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom118, !dbg !2826
  %114 = load i8, i8* %arrayidx119, align 1, !dbg !2826
  %conv120 = zext i8 %114 to i32, !dbg !2826
  %115 = load i8, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @scan8, i64 0, i64 0), align 16, !dbg !2827
  %conv121 = zext i8 %115 to i32, !dbg !2827
  %sub122 = sub nsw i32 %conv120, %conv121, !dbg !2828
  %shr123 = ashr i32 %sub122, 3, !dbg !2829
  %mul124 = mul nsw i32 %mul117, %shr123, !dbg !2830
  %add125 = add nsw i32 %mul112, %mul124, !dbg !2831
  %116 = load i32, i32* %i, align 4, !dbg !2832
  %add126 = add nsw i32 32, %116, !dbg !2833
  %idxprom127 = sext i32 %add126 to i64, !dbg !2834
  %117 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2834
  %block_offset128 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %117, i32 0, i32 58, !dbg !2835
  %arrayidx129 = getelementptr inbounds [96 x i32], [96 x i32]* %block_offset128, i64 0, i64 %idxprom127, !dbg !2834
  store i32 %add125, i32* %arrayidx129, align 4, !dbg !2836
  %118 = load i32, i32* %i, align 4, !dbg !2837
  %add130 = add nsw i32 16, %118, !dbg !2838
  %idxprom131 = sext i32 %add130 to i64, !dbg !2839
  %119 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2839
  %block_offset132 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %119, i32 0, i32 58, !dbg !2840
  %arrayidx133 = getelementptr inbounds [96 x i32], [96 x i32]* %block_offset132, i64 0, i64 %idxprom131, !dbg !2839
  store i32 %add125, i32* %arrayidx133, align 4, !dbg !2841
  %120 = load i32, i32* %i, align 4, !dbg !2842
  %idxprom134 = sext i32 %120 to i64, !dbg !2843
  %arrayidx135 = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom134, !dbg !2843
  %121 = load i8, i8* %arrayidx135, align 1, !dbg !2843
  %conv136 = zext i8 %121 to i32, !dbg !2843
  %122 = load i8, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @scan8, i64 0, i64 0), align 16, !dbg !2844
  %conv137 = zext i8 %122 to i32, !dbg !2844
  %sub138 = sub nsw i32 %conv136, %conv137, !dbg !2845
  %and139 = and i32 %sub138, 7, !dbg !2846
  %mul140 = mul nsw i32 4, %and139, !dbg !2847
  %123 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2848
  %cur_pic141 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %123, i32 0, i32 6, !dbg !2849
  %124 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic141, align 16, !dbg !2849
  %f142 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %124, i32 0, i32 0, !dbg !2850
  %125 = load %struct.AVFrame*, %struct.AVFrame** %f142, align 8, !dbg !2850
  %linesize143 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %125, i32 0, i32 1, !dbg !2851
  %arrayidx144 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize143, i64 0, i64 1, !dbg !2848
  %126 = load i32, i32* %arrayidx144, align 4, !dbg !2848
  %mul145 = mul nsw i32 8, %126, !dbg !2852
  %127 = load i32, i32* %i, align 4, !dbg !2853
  %idxprom146 = sext i32 %127 to i64, !dbg !2854
  %arrayidx147 = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom146, !dbg !2854
  %128 = load i8, i8* %arrayidx147, align 1, !dbg !2854
  %conv148 = zext i8 %128 to i32, !dbg !2854
  %129 = load i8, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @scan8, i64 0, i64 0), align 16, !dbg !2855
  %conv149 = zext i8 %129 to i32, !dbg !2855
  %sub150 = sub nsw i32 %conv148, %conv149, !dbg !2856
  %shr151 = ashr i32 %sub150, 3, !dbg !2857
  %mul152 = mul nsw i32 %mul145, %shr151, !dbg !2858
  %add153 = add nsw i32 %mul140, %mul152, !dbg !2859
  %130 = load i32, i32* %i, align 4, !dbg !2860
  %add154 = add nsw i32 80, %130, !dbg !2861
  %idxprom155 = sext i32 %add154 to i64, !dbg !2862
  %131 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2862
  %block_offset156 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %131, i32 0, i32 58, !dbg !2863
  %arrayidx157 = getelementptr inbounds [96 x i32], [96 x i32]* %block_offset156, i64 0, i64 %idxprom155, !dbg !2862
  store i32 %add153, i32* %arrayidx157, align 4, !dbg !2864
  %132 = load i32, i32* %i, align 4, !dbg !2865
  %add158 = add nsw i32 64, %132, !dbg !2866
  %idxprom159 = sext i32 %add158 to i64, !dbg !2867
  %133 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2867
  %block_offset160 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %133, i32 0, i32 58, !dbg !2868
  %arrayidx161 = getelementptr inbounds [96 x i32], [96 x i32]* %block_offset160, i64 0, i64 %idxprom159, !dbg !2867
  store i32 %add153, i32* %arrayidx161, align 4, !dbg !2869
  br label %for.inc162, !dbg !2870

for.inc162:                                       ; preds = %for.body105
  %134 = load i32, i32* %i, align 4, !dbg !2871
  %inc163 = add nsw i32 %134, 1, !dbg !2871
  store i32 %inc163, i32* %i, align 4, !dbg !2871
  br label %for.cond102, !dbg !2873, !llvm.loop !2874

for.end164:                                       ; preds = %for.cond102
  %135 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2876
  %pict_type165 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %135, i32 0, i32 31, !dbg !2878
  %136 = load i32, i32* %pict_type165, align 4, !dbg !2878
  %cmp166 = icmp ne i32 %136, 1, !dbg !2879
  br i1 %cmp166, label %if.then168, label %if.end271, !dbg !2880

if.then168:                                       ; preds = %for.end164
  %137 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2881
  %last_pic169 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %137, i32 0, i32 8, !dbg !2884
  %138 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %last_pic169, align 16, !dbg !2884
  %f170 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %138, i32 0, i32 0, !dbg !2885
  %139 = load %struct.AVFrame*, %struct.AVFrame** %f170, align 8, !dbg !2885
  %data171 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %139, i32 0, i32 0, !dbg !2886
  %arrayidx172 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data171, i64 0, i64 0, !dbg !2881
  %140 = load i8*, i8** %arrayidx172, align 8, !dbg !2881
  %tobool173 = icmp ne i8* %140, null, !dbg !2881
  br i1 %tobool173, label %if.end216, label %if.then174, !dbg !2887

if.then174:                                       ; preds = %if.then168
  %141 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2888
  %142 = bitcast %struct.AVCodecContext* %141 to i8*, !dbg !2888
  call void (i8*, i32, i8*, ...) @av_log(i8* %142, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8, i32 0, i32 0)), !dbg !2890
  %143 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2891
  %last_pic175 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %143, i32 0, i32 8, !dbg !2892
  %144 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %last_pic175, align 16, !dbg !2892
  %f176 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %144, i32 0, i32 0, !dbg !2893
  %145 = load %struct.AVFrame*, %struct.AVFrame** %f176, align 8, !dbg !2893
  call void @av_frame_unref(%struct.AVFrame* %145), !dbg !2894
  %146 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2895
  %147 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2896
  %last_pic177 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %147, i32 0, i32 8, !dbg !2897
  %148 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %last_pic177, align 16, !dbg !2897
  %call178 = call i32 @get_buffer(%struct.AVCodecContext* %146, %struct.SVQ3Frame* %148), !dbg !2898
  store i32 %call178, i32* %ret, align 4, !dbg !2899
  %149 = load i32, i32* %ret, align 4, !dbg !2900
  %cmp179 = icmp slt i32 %149, 0, !dbg !2902
  br i1 %cmp179, label %if.then181, label %if.end182, !dbg !2903

if.then181:                                       ; preds = %if.then174
  %150 = load i32, i32* %ret, align 4, !dbg !2904
  store i32 %150, i32* %retval, align 4, !dbg !2905
  br label %return, !dbg !2905

if.end182:                                        ; preds = %if.then174
  %151 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2906
  %last_pic183 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %151, i32 0, i32 8, !dbg !2907
  %152 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %last_pic183, align 16, !dbg !2907
  %f184 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %152, i32 0, i32 0, !dbg !2908
  %153 = load %struct.AVFrame*, %struct.AVFrame** %f184, align 8, !dbg !2908
  %data185 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %153, i32 0, i32 0, !dbg !2909
  %arrayidx186 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data185, i64 0, i64 0, !dbg !2906
  %154 = load i8*, i8** %arrayidx186, align 8, !dbg !2906
  %155 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2910
  %height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %155, i32 0, i32 21, !dbg !2911
  %156 = load i32, i32* %height, align 8, !dbg !2911
  %157 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2912
  %last_pic187 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %157, i32 0, i32 8, !dbg !2913
  %158 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %last_pic187, align 16, !dbg !2913
  %f188 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %158, i32 0, i32 0, !dbg !2914
  %159 = load %struct.AVFrame*, %struct.AVFrame** %f188, align 8, !dbg !2914
  %linesize189 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %159, i32 0, i32 1, !dbg !2915
  %arrayidx190 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize189, i64 0, i64 0, !dbg !2912
  %160 = load i32, i32* %arrayidx190, align 8, !dbg !2912
  %mul191 = mul nsw i32 %156, %160, !dbg !2916
  %conv192 = sext i32 %mul191 to i64, !dbg !2910
  call void @llvm.memset.p0i8.i64(i8* %154, i8 0, i64 %conv192, i32 1, i1 false), !dbg !2917
  %161 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2918
  %last_pic193 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %161, i32 0, i32 8, !dbg !2919
  %162 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %last_pic193, align 16, !dbg !2919
  %f194 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %162, i32 0, i32 0, !dbg !2920
  %163 = load %struct.AVFrame*, %struct.AVFrame** %f194, align 8, !dbg !2920
  %data195 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %163, i32 0, i32 0, !dbg !2921
  %arrayidx196 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data195, i64 0, i64 1, !dbg !2918
  %164 = load i8*, i8** %arrayidx196, align 8, !dbg !2918
  %165 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2922
  %height197 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %165, i32 0, i32 21, !dbg !2923
  %166 = load i32, i32* %height197, align 8, !dbg !2923
  %div = sdiv i32 %166, 2, !dbg !2924
  %167 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2925
  %last_pic198 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %167, i32 0, i32 8, !dbg !2926
  %168 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %last_pic198, align 16, !dbg !2926
  %f199 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %168, i32 0, i32 0, !dbg !2927
  %169 = load %struct.AVFrame*, %struct.AVFrame** %f199, align 8, !dbg !2927
  %linesize200 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %169, i32 0, i32 1, !dbg !2928
  %arrayidx201 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize200, i64 0, i64 1, !dbg !2925
  %170 = load i32, i32* %arrayidx201, align 4, !dbg !2925
  %mul202 = mul nsw i32 %div, %170, !dbg !2929
  %conv203 = sext i32 %mul202 to i64, !dbg !2930
  call void @llvm.memset.p0i8.i64(i8* %164, i8 -128, i64 %conv203, i32 1, i1 false), !dbg !2931
  %171 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2932
  %last_pic204 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %171, i32 0, i32 8, !dbg !2933
  %172 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %last_pic204, align 16, !dbg !2933
  %f205 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %172, i32 0, i32 0, !dbg !2934
  %173 = load %struct.AVFrame*, %struct.AVFrame** %f205, align 8, !dbg !2934
  %data206 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %173, i32 0, i32 0, !dbg !2935
  %arrayidx207 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data206, i64 0, i64 2, !dbg !2932
  %174 = load i8*, i8** %arrayidx207, align 8, !dbg !2932
  %175 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2936
  %height208 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %175, i32 0, i32 21, !dbg !2937
  %176 = load i32, i32* %height208, align 8, !dbg !2937
  %div209 = sdiv i32 %176, 2, !dbg !2938
  %177 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2939
  %last_pic210 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %177, i32 0, i32 8, !dbg !2940
  %178 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %last_pic210, align 16, !dbg !2940
  %f211 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %178, i32 0, i32 0, !dbg !2941
  %179 = load %struct.AVFrame*, %struct.AVFrame** %f211, align 8, !dbg !2941
  %linesize212 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %179, i32 0, i32 1, !dbg !2942
  %arrayidx213 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize212, i64 0, i64 2, !dbg !2939
  %180 = load i32, i32* %arrayidx213, align 8, !dbg !2939
  %mul214 = mul nsw i32 %div209, %180, !dbg !2943
  %conv215 = sext i32 %mul214 to i64, !dbg !2944
  call void @llvm.memset.p0i8.i64(i8* %174, i8 -128, i64 %conv215, i32 1, i1 false), !dbg !2945
  br label %if.end216, !dbg !2946

if.end216:                                        ; preds = %if.end182, %if.then168
  %181 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2947
  %pict_type217 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %181, i32 0, i32 31, !dbg !2949
  %182 = load i32, i32* %pict_type217, align 4, !dbg !2949
  %cmp218 = icmp eq i32 %182, 3, !dbg !2950
  br i1 %cmp218, label %land.lhs.true220, label %if.end270, !dbg !2951

land.lhs.true220:                                 ; preds = %if.end216
  %183 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2952
  %next_pic221 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %183, i32 0, i32 7, !dbg !2954
  %184 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %next_pic221, align 8, !dbg !2954
  %f222 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %184, i32 0, i32 0, !dbg !2955
  %185 = load %struct.AVFrame*, %struct.AVFrame** %f222, align 8, !dbg !2955
  %data223 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %185, i32 0, i32 0, !dbg !2956
  %arrayidx224 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data223, i64 0, i64 0, !dbg !2952
  %186 = load i8*, i8** %arrayidx224, align 8, !dbg !2952
  %tobool225 = icmp ne i8* %186, null, !dbg !2952
  br i1 %tobool225, label %if.end270, label %if.then226, !dbg !2957

if.then226:                                       ; preds = %land.lhs.true220
  %187 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2958
  %188 = bitcast %struct.AVCodecContext* %187 to i8*, !dbg !2958
  call void (i8*, i32, i8*, ...) @av_log(i8* %188, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8, i32 0, i32 0)), !dbg !2960
  %189 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2961
  %next_pic227 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %189, i32 0, i32 7, !dbg !2962
  %190 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %next_pic227, align 8, !dbg !2962
  %f228 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %190, i32 0, i32 0, !dbg !2963
  %191 = load %struct.AVFrame*, %struct.AVFrame** %f228, align 8, !dbg !2963
  call void @av_frame_unref(%struct.AVFrame* %191), !dbg !2964
  %192 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2965
  %193 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2966
  %next_pic229 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %193, i32 0, i32 7, !dbg !2967
  %194 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %next_pic229, align 8, !dbg !2967
  %call230 = call i32 @get_buffer(%struct.AVCodecContext* %192, %struct.SVQ3Frame* %194), !dbg !2968
  store i32 %call230, i32* %ret, align 4, !dbg !2969
  %195 = load i32, i32* %ret, align 4, !dbg !2970
  %cmp231 = icmp slt i32 %195, 0, !dbg !2972
  br i1 %cmp231, label %if.then233, label %if.end234, !dbg !2973

if.then233:                                       ; preds = %if.then226
  %196 = load i32, i32* %ret, align 4, !dbg !2974
  store i32 %196, i32* %retval, align 4, !dbg !2975
  br label %return, !dbg !2975

if.end234:                                        ; preds = %if.then226
  %197 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2976
  %next_pic235 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %197, i32 0, i32 7, !dbg !2977
  %198 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %next_pic235, align 8, !dbg !2977
  %f236 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %198, i32 0, i32 0, !dbg !2978
  %199 = load %struct.AVFrame*, %struct.AVFrame** %f236, align 8, !dbg !2978
  %data237 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %199, i32 0, i32 0, !dbg !2979
  %arrayidx238 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data237, i64 0, i64 0, !dbg !2976
  %200 = load i8*, i8** %arrayidx238, align 8, !dbg !2976
  %201 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2980
  %height239 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %201, i32 0, i32 21, !dbg !2981
  %202 = load i32, i32* %height239, align 8, !dbg !2981
  %203 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2982
  %next_pic240 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %203, i32 0, i32 7, !dbg !2983
  %204 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %next_pic240, align 8, !dbg !2983
  %f241 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %204, i32 0, i32 0, !dbg !2984
  %205 = load %struct.AVFrame*, %struct.AVFrame** %f241, align 8, !dbg !2984
  %linesize242 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %205, i32 0, i32 1, !dbg !2985
  %arrayidx243 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize242, i64 0, i64 0, !dbg !2982
  %206 = load i32, i32* %arrayidx243, align 8, !dbg !2982
  %mul244 = mul nsw i32 %202, %206, !dbg !2986
  %conv245 = sext i32 %mul244 to i64, !dbg !2980
  call void @llvm.memset.p0i8.i64(i8* %200, i8 0, i64 %conv245, i32 1, i1 false), !dbg !2987
  %207 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2988
  %next_pic246 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %207, i32 0, i32 7, !dbg !2989
  %208 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %next_pic246, align 8, !dbg !2989
  %f247 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %208, i32 0, i32 0, !dbg !2990
  %209 = load %struct.AVFrame*, %struct.AVFrame** %f247, align 8, !dbg !2990
  %data248 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %209, i32 0, i32 0, !dbg !2991
  %arrayidx249 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data248, i64 0, i64 1, !dbg !2988
  %210 = load i8*, i8** %arrayidx249, align 8, !dbg !2988
  %211 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2992
  %height250 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %211, i32 0, i32 21, !dbg !2993
  %212 = load i32, i32* %height250, align 8, !dbg !2993
  %div251 = sdiv i32 %212, 2, !dbg !2994
  %213 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !2995
  %next_pic252 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %213, i32 0, i32 7, !dbg !2996
  %214 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %next_pic252, align 8, !dbg !2996
  %f253 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %214, i32 0, i32 0, !dbg !2997
  %215 = load %struct.AVFrame*, %struct.AVFrame** %f253, align 8, !dbg !2997
  %linesize254 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %215, i32 0, i32 1, !dbg !2998
  %arrayidx255 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize254, i64 0, i64 1, !dbg !2995
  %216 = load i32, i32* %arrayidx255, align 4, !dbg !2995
  %mul256 = mul nsw i32 %div251, %216, !dbg !2999
  %conv257 = sext i32 %mul256 to i64, !dbg !3000
  call void @llvm.memset.p0i8.i64(i8* %210, i8 -128, i64 %conv257, i32 1, i1 false), !dbg !3001
  %217 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3002
  %next_pic258 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %217, i32 0, i32 7, !dbg !3003
  %218 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %next_pic258, align 8, !dbg !3003
  %f259 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %218, i32 0, i32 0, !dbg !3004
  %219 = load %struct.AVFrame*, %struct.AVFrame** %f259, align 8, !dbg !3004
  %data260 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %219, i32 0, i32 0, !dbg !3005
  %arrayidx261 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data260, i64 0, i64 2, !dbg !3002
  %220 = load i8*, i8** %arrayidx261, align 8, !dbg !3002
  %221 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3006
  %height262 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %221, i32 0, i32 21, !dbg !3007
  %222 = load i32, i32* %height262, align 8, !dbg !3007
  %div263 = sdiv i32 %222, 2, !dbg !3008
  %223 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3009
  %next_pic264 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %223, i32 0, i32 7, !dbg !3010
  %224 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %next_pic264, align 8, !dbg !3010
  %f265 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %224, i32 0, i32 0, !dbg !3011
  %225 = load %struct.AVFrame*, %struct.AVFrame** %f265, align 8, !dbg !3011
  %linesize266 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %225, i32 0, i32 1, !dbg !3012
  %arrayidx267 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize266, i64 0, i64 2, !dbg !3009
  %226 = load i32, i32* %arrayidx267, align 8, !dbg !3009
  %mul268 = mul nsw i32 %div263, %226, !dbg !3013
  %conv269 = sext i32 %mul268 to i64, !dbg !3014
  call void @llvm.memset.p0i8.i64(i8* %220, i8 -128, i64 %conv269, i32 1, i1 false), !dbg !3015
  br label %if.end270, !dbg !3016

if.end270:                                        ; preds = %if.end234, %land.lhs.true220, %if.end216
  br label %if.end271, !dbg !3017

if.end271:                                        ; preds = %if.end270, %for.end164
  %227 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3018
  %debug = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %227, i32 0, i32 134, !dbg !3020
  %228 = load i32, i32* %debug, align 4, !dbg !3020
  %and272 = and i32 %228, 1, !dbg !3021
  %tobool273 = icmp ne i32 %and272, 0, !dbg !3021
  br i1 %tobool273, label %if.then274, label %if.end279, !dbg !3022

if.then274:                                       ; preds = %if.end271
  %229 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3023
  %avctx275 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %229, i32 0, i32 0, !dbg !3024
  %230 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx275, align 16, !dbg !3024
  %231 = bitcast %struct.AVCodecContext* %230 to i8*, !dbg !3023
  %232 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3025
  %pict_type276 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %232, i32 0, i32 31, !dbg !3026
  %233 = load i32, i32* %pict_type276, align 4, !dbg !3026
  %call277 = call signext i8 @av_get_picture_type_char(i32 %233), !dbg !3027
  %conv278 = sext i8 %call277 to i32, !dbg !3027
  %234 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3028
  %halfpel_flag = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %234, i32 0, i32 13, !dbg !3029
  %235 = load i32, i32* %halfpel_flag, align 4, !dbg !3029
  %236 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3030
  %thirdpel_flag = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %236, i32 0, i32 14, !dbg !3031
  %237 = load i32, i32* %thirdpel_flag, align 8, !dbg !3031
  %238 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3032
  %adaptive_quant = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %238, i32 0, i32 19, !dbg !3033
  %239 = load i32, i32* %adaptive_quant, align 4, !dbg !3033
  %240 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3034
  %qscale = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %240, i32 0, i32 25, !dbg !3035
  %241 = load i32, i32* %qscale, align 4, !dbg !3035
  %242 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3036
  %slice_num = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %242, i32 0, i32 24, !dbg !3037
  %243 = load i32, i32* %slice_num, align 8, !dbg !3037
  call void (i8*, i32, i8*, ...) @av_log(i8* %231, i32 48, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.9, i32 0, i32 0), i32 %conv278, i32 %235, i32 %237, i32 %239, i32 %241, i32 %243), !dbg !3038
  br label %if.end279, !dbg !3038

if.end279:                                        ; preds = %if.then274, %if.end271
  %244 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3039
  %skip_frame = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %244, i32 0, i32 157, !dbg !3041
  %245 = load i32, i32* %skip_frame, align 4, !dbg !3041
  %cmp280 = icmp sge i32 %245, 8, !dbg !3042
  br i1 %cmp280, label %land.lhs.true282, label %lor.lhs.false, !dbg !3043

land.lhs.true282:                                 ; preds = %if.end279
  %246 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3044
  %pict_type283 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %246, i32 0, i32 31, !dbg !3046
  %247 = load i32, i32* %pict_type283, align 4, !dbg !3046
  %cmp284 = icmp eq i32 %247, 3, !dbg !3047
  br i1 %cmp284, label %if.then297, label %lor.lhs.false, !dbg !3048

lor.lhs.false:                                    ; preds = %land.lhs.true282, %if.end279
  %248 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3049
  %skip_frame286 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %248, i32 0, i32 157, !dbg !3050
  %249 = load i32, i32* %skip_frame286, align 4, !dbg !3050
  %cmp287 = icmp sge i32 %249, 32, !dbg !3051
  br i1 %cmp287, label %land.lhs.true289, label %lor.lhs.false293, !dbg !3052

land.lhs.true289:                                 ; preds = %lor.lhs.false
  %250 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3053
  %pict_type290 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %250, i32 0, i32 31, !dbg !3054
  %251 = load i32, i32* %pict_type290, align 4, !dbg !3054
  %cmp291 = icmp ne i32 %251, 1, !dbg !3055
  br i1 %cmp291, label %if.then297, label %lor.lhs.false293, !dbg !3056

lor.lhs.false293:                                 ; preds = %land.lhs.true289, %lor.lhs.false
  %252 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3057
  %skip_frame294 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %252, i32 0, i32 157, !dbg !3058
  %253 = load i32, i32* %skip_frame294, align 4, !dbg !3058
  %cmp295 = icmp sge i32 %253, 48, !dbg !3059
  br i1 %cmp295, label %if.then297, label %if.end298, !dbg !3060

if.then297:                                       ; preds = %lor.lhs.false293, %land.lhs.true289, %land.lhs.true282
  store i32 0, i32* %retval, align 4, !dbg !3062
  br label %return, !dbg !3062

if.end298:                                        ; preds = %lor.lhs.false293
  %254 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3063
  %next_p_frame_damaged = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %254, i32 0, i32 20, !dbg !3065
  %255 = load i32, i32* %next_p_frame_damaged, align 8, !dbg !3065
  %tobool299 = icmp ne i32 %255, 0, !dbg !3063
  br i1 %tobool299, label %if.then300, label %if.end308, !dbg !3066

if.then300:                                       ; preds = %if.end298
  %256 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3067
  %pict_type301 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %256, i32 0, i32 31, !dbg !3070
  %257 = load i32, i32* %pict_type301, align 4, !dbg !3070
  %cmp302 = icmp eq i32 %257, 3, !dbg !3071
  br i1 %cmp302, label %if.then304, label %if.else305, !dbg !3072

if.then304:                                       ; preds = %if.then300
  store i32 0, i32* %retval, align 4, !dbg !3073
  br label %return, !dbg !3073

if.else305:                                       ; preds = %if.then300
  %258 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3074
  %next_p_frame_damaged306 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %258, i32 0, i32 20, !dbg !3075
  store i32 0, i32* %next_p_frame_damaged306, align 8, !dbg !3076
  br label %if.end307

if.end307:                                        ; preds = %if.else305
  br label %if.end308, !dbg !3077

if.end308:                                        ; preds = %if.end307, %if.end298
  %259 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3078
  %pict_type309 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %259, i32 0, i32 31, !dbg !3080
  %260 = load i32, i32* %pict_type309, align 4, !dbg !3080
  %cmp310 = icmp eq i32 %260, 3, !dbg !3081
  br i1 %cmp310, label %if.then312, label %if.else332, !dbg !3082

if.then312:                                       ; preds = %if.end308
  %261 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3083
  %slice_num313 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %261, i32 0, i32 24, !dbg !3085
  %262 = load i32, i32* %slice_num313, align 8, !dbg !3085
  %263 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3086
  %prev_frame_num = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %263, i32 0, i32 30, !dbg !3087
  %264 = load i32, i32* %prev_frame_num, align 16, !dbg !3087
  %sub314 = sub nsw i32 %262, %264, !dbg !3088
  %265 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3089
  %frame_num_offset = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %265, i32 0, i32 28, !dbg !3090
  store i32 %sub314, i32* %frame_num_offset, align 8, !dbg !3091
  %266 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3092
  %frame_num_offset315 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %266, i32 0, i32 28, !dbg !3094
  %267 = load i32, i32* %frame_num_offset315, align 8, !dbg !3094
  %cmp316 = icmp slt i32 %267, 0, !dbg !3095
  br i1 %cmp316, label %if.then318, label %if.end321, !dbg !3096

if.then318:                                       ; preds = %if.then312
  %268 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3097
  %frame_num_offset319 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %268, i32 0, i32 28, !dbg !3098
  %269 = load i32, i32* %frame_num_offset319, align 8, !dbg !3099
  %add320 = add nsw i32 %269, 256, !dbg !3099
  store i32 %add320, i32* %frame_num_offset319, align 8, !dbg !3099
  br label %if.end321, !dbg !3097

if.end321:                                        ; preds = %if.then318, %if.then312
  %270 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3100
  %frame_num_offset322 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %270, i32 0, i32 28, !dbg !3102
  %271 = load i32, i32* %frame_num_offset322, align 8, !dbg !3102
  %cmp323 = icmp eq i32 %271, 0, !dbg !3103
  br i1 %cmp323, label %if.then329, label %lor.lhs.false325, !dbg !3104

lor.lhs.false325:                                 ; preds = %if.end321
  %272 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3105
  %frame_num_offset326 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %272, i32 0, i32 28, !dbg !3106
  %273 = load i32, i32* %frame_num_offset326, align 8, !dbg !3106
  %274 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3107
  %prev_frame_num_offset = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %274, i32 0, i32 29, !dbg !3108
  %275 = load i32, i32* %prev_frame_num_offset, align 4, !dbg !3108
  %cmp327 = icmp sge i32 %273, %275, !dbg !3109
  br i1 %cmp327, label %if.then329, label %if.end331, !dbg !3110

if.then329:                                       ; preds = %lor.lhs.false325, %if.end321
  %276 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3112
  %avctx330 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %276, i32 0, i32 0, !dbg !3114
  %277 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx330, align 16, !dbg !3114
  %278 = bitcast %struct.AVCodecContext* %277 to i8*, !dbg !3112
  call void (i8*, i32, i8*, ...) @av_log(i8* %278, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.10, i32 0, i32 0)), !dbg !3115
  store i32 -1, i32* %retval, align 4, !dbg !3116
  br label %return, !dbg !3116

if.end331:                                        ; preds = %lor.lhs.false325
  br label %if.end347, !dbg !3117

if.else332:                                       ; preds = %if.end308
  %279 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3118
  %frame_num = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %279, i32 0, i32 27, !dbg !3120
  %280 = load i32, i32* %frame_num, align 4, !dbg !3120
  %281 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3121
  %prev_frame_num333 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %281, i32 0, i32 30, !dbg !3122
  store i32 %280, i32* %prev_frame_num333, align 16, !dbg !3123
  %282 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3124
  %slice_num334 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %282, i32 0, i32 24, !dbg !3125
  %283 = load i32, i32* %slice_num334, align 8, !dbg !3125
  %284 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3126
  %frame_num335 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %284, i32 0, i32 27, !dbg !3127
  store i32 %283, i32* %frame_num335, align 4, !dbg !3128
  %285 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3129
  %frame_num336 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %285, i32 0, i32 27, !dbg !3130
  %286 = load i32, i32* %frame_num336, align 4, !dbg !3130
  %287 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3131
  %prev_frame_num337 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %287, i32 0, i32 30, !dbg !3132
  %288 = load i32, i32* %prev_frame_num337, align 16, !dbg !3132
  %sub338 = sub nsw i32 %286, %288, !dbg !3133
  %289 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3134
  %prev_frame_num_offset339 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %289, i32 0, i32 29, !dbg !3135
  store i32 %sub338, i32* %prev_frame_num_offset339, align 4, !dbg !3136
  %290 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3137
  %prev_frame_num_offset340 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %290, i32 0, i32 29, !dbg !3139
  %291 = load i32, i32* %prev_frame_num_offset340, align 4, !dbg !3139
  %cmp341 = icmp slt i32 %291, 0, !dbg !3140
  br i1 %cmp341, label %if.then343, label %if.end346, !dbg !3141

if.then343:                                       ; preds = %if.else332
  %292 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3142
  %prev_frame_num_offset344 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %292, i32 0, i32 29, !dbg !3143
  %293 = load i32, i32* %prev_frame_num_offset344, align 4, !dbg !3144
  %add345 = add nsw i32 %293, 256, !dbg !3144
  store i32 %add345, i32* %prev_frame_num_offset344, align 4, !dbg !3144
  br label %if.end346, !dbg !3142

if.end346:                                        ; preds = %if.then343, %if.else332
  br label %if.end347

if.end347:                                        ; preds = %if.end346, %if.end331
  store i32 0, i32* %m, align 4, !dbg !3145
  br label %for.cond348, !dbg !3147

for.cond348:                                      ; preds = %for.inc388, %if.end347
  %294 = load i32, i32* %m, align 4, !dbg !3148
  %cmp349 = icmp slt i32 %294, 2, !dbg !3151
  br i1 %cmp349, label %for.body351, label %for.end390, !dbg !3152

for.body351:                                      ; preds = %for.cond348
  call void @llvm.dbg.declare(metadata i32* %i352, metadata !3153, metadata !1727), !dbg !3155
  store i32 0, i32* %i352, align 4, !dbg !3156
  br label %for.cond353, !dbg !3158

for.cond353:                                      ; preds = %for.inc385, %for.body351
  %295 = load i32, i32* %i352, align 4, !dbg !3159
  %cmp354 = icmp slt i32 %295, 4, !dbg !3162
  br i1 %cmp354, label %for.body356, label %for.end387, !dbg !3163

for.body356:                                      ; preds = %for.cond353
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3164, metadata !1727), !dbg !3166
  store i32 -1, i32* %j, align 4, !dbg !3167
  br label %for.cond357, !dbg !3169

for.cond357:                                      ; preds = %for.inc369, %for.body356
  %296 = load i32, i32* %j, align 4, !dbg !3170
  %cmp358 = icmp slt i32 %296, 4, !dbg !3173
  br i1 %cmp358, label %for.body360, label %for.end371, !dbg !3174

for.body360:                                      ; preds = %for.cond357
  %297 = load i8, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @scan8, i64 0, i64 0), align 16, !dbg !3175
  %conv361 = zext i8 %297 to i32, !dbg !3175
  %298 = load i32, i32* %i352, align 4, !dbg !3176
  %mul362 = mul nsw i32 8, %298, !dbg !3177
  %add363 = add nsw i32 %conv361, %mul362, !dbg !3178
  %299 = load i32, i32* %j, align 4, !dbg !3179
  %add364 = add nsw i32 %add363, %299, !dbg !3180
  %idxprom365 = sext i32 %add364 to i64, !dbg !3181
  %300 = load i32, i32* %m, align 4, !dbg !3182
  %idxprom366 = sext i32 %300 to i64, !dbg !3181
  %301 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3181
  %ref_cache = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %301, i32 0, i32 53, !dbg !3183
  %arrayidx367 = getelementptr inbounds [2 x [40 x i8]], [2 x [40 x i8]]* %ref_cache, i64 0, i64 %idxprom366, !dbg !3181
  %arrayidx368 = getelementptr inbounds [40 x i8], [40 x i8]* %arrayidx367, i64 0, i64 %idxprom365, !dbg !3181
  store i8 1, i8* %arrayidx368, align 1, !dbg !3184
  br label %for.inc369, !dbg !3181

for.inc369:                                       ; preds = %for.body360
  %302 = load i32, i32* %j, align 4, !dbg !3185
  %inc370 = add nsw i32 %302, 1, !dbg !3185
  store i32 %inc370, i32* %j, align 4, !dbg !3185
  br label %for.cond357, !dbg !3187, !llvm.loop !3188

for.end371:                                       ; preds = %for.cond357
  %303 = load i32, i32* %i352, align 4, !dbg !3190
  %cmp372 = icmp slt i32 %303, 3, !dbg !3192
  br i1 %cmp372, label %if.then374, label %if.end384, !dbg !3193

if.then374:                                       ; preds = %for.end371
  %304 = load i8, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @scan8, i64 0, i64 0), align 16, !dbg !3194
  %conv375 = zext i8 %304 to i32, !dbg !3194
  %305 = load i32, i32* %i352, align 4, !dbg !3195
  %mul376 = mul nsw i32 8, %305, !dbg !3196
  %add377 = add nsw i32 %conv375, %mul376, !dbg !3197
  %306 = load i32, i32* %j, align 4, !dbg !3198
  %add378 = add nsw i32 %add377, %306, !dbg !3199
  %idxprom379 = sext i32 %add378 to i64, !dbg !3200
  %307 = load i32, i32* %m, align 4, !dbg !3201
  %idxprom380 = sext i32 %307 to i64, !dbg !3200
  %308 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3200
  %ref_cache381 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %308, i32 0, i32 53, !dbg !3202
  %arrayidx382 = getelementptr inbounds [2 x [40 x i8]], [2 x [40 x i8]]* %ref_cache381, i64 0, i64 %idxprom380, !dbg !3200
  %arrayidx383 = getelementptr inbounds [40 x i8], [40 x i8]* %arrayidx382, i64 0, i64 %idxprom379, !dbg !3200
  store i8 -2, i8* %arrayidx383, align 1, !dbg !3203
  br label %if.end384, !dbg !3200

if.end384:                                        ; preds = %if.then374, %for.end371
  br label %for.inc385, !dbg !3204

for.inc385:                                       ; preds = %if.end384
  %309 = load i32, i32* %i352, align 4, !dbg !3205
  %inc386 = add nsw i32 %309, 1, !dbg !3205
  store i32 %inc386, i32* %i352, align 4, !dbg !3205
  br label %for.cond353, !dbg !3207, !llvm.loop !3208

for.end387:                                       ; preds = %for.cond353
  br label %for.inc388, !dbg !3210

for.inc388:                                       ; preds = %for.end387
  %310 = load i32, i32* %m, align 4, !dbg !3211
  %inc389 = add nsw i32 %310, 1, !dbg !3211
  store i32 %inc389, i32* %m, align 4, !dbg !3211
  br label %for.cond348, !dbg !3213, !llvm.loop !3214

for.end390:                                       ; preds = %for.cond348
  %311 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3216
  %mb_y391 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %311, i32 0, i32 35, !dbg !3218
  store i32 0, i32* %mb_y391, align 4, !dbg !3219
  br label %for.cond392, !dbg !3216

for.cond392:                                      ; preds = %for.inc516, %for.end390
  %312 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3220
  %mb_y393 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %312, i32 0, i32 35, !dbg !3223
  %313 = load i32, i32* %mb_y393, align 4, !dbg !3223
  %314 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3224
  %mb_height = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %314, i32 0, i32 38, !dbg !3225
  %315 = load i32, i32* %mb_height, align 16, !dbg !3225
  %cmp394 = icmp slt i32 %313, %315, !dbg !3226
  br i1 %cmp394, label %for.body396, label %for.end519, !dbg !3227

for.body396:                                      ; preds = %for.cond392
  %316 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3228
  %mb_x397 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %316, i32 0, i32 34, !dbg !3231
  store i32 0, i32* %mb_x397, align 16, !dbg !3232
  br label %for.cond398, !dbg !3228

for.cond398:                                      ; preds = %for.inc496, %for.body396
  %317 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3233
  %mb_x399 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %317, i32 0, i32 34, !dbg !3236
  %318 = load i32, i32* %mb_x399, align 16, !dbg !3236
  %319 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3237
  %mb_width = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %319, i32 0, i32 37, !dbg !3238
  %320 = load i32, i32* %mb_width, align 4, !dbg !3238
  %cmp400 = icmp slt i32 %318, %320, !dbg !3239
  br i1 %cmp400, label %for.body402, label %for.end499, !dbg !3240

for.body402:                                      ; preds = %for.cond398
  call void @llvm.dbg.declare(metadata i32* %mb_type, metadata !3241, metadata !1727), !dbg !3243
  %321 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3244
  %mb_x403 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %321, i32 0, i32 34, !dbg !3245
  %322 = load i32, i32* %mb_x403, align 16, !dbg !3245
  %323 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3246
  %mb_y404 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %323, i32 0, i32 35, !dbg !3247
  %324 = load i32, i32* %mb_y404, align 4, !dbg !3247
  %325 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3248
  %mb_stride = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %325, i32 0, i32 39, !dbg !3249
  %326 = load i32, i32* %mb_stride, align 4, !dbg !3249
  %mul405 = mul nsw i32 %324, %326, !dbg !3250
  %add406 = add nsw i32 %322, %mul405, !dbg !3251
  %327 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3252
  %mb_xy407 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %327, i32 0, i32 36, !dbg !3253
  store i32 %add406, i32* %mb_xy407, align 8, !dbg !3254
  %328 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3255
  %gb_slice = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %328, i32 0, i32 10, !dbg !3257
  %call408 = call i32 @get_bits_left(%struct.GetBitContext* %gb_slice), !dbg !3258
  %cmp409 = icmp sle i32 %call408, 7, !dbg !3259
  br i1 %cmp409, label %if.then411, label %if.end437, !dbg !3260

if.then411:                                       ; preds = %for.body402
  %329 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3261
  %gb_slice412 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %329, i32 0, i32 10, !dbg !3264
  %call413 = call i32 @get_bits_count(%struct.GetBitContext* %gb_slice412), !dbg !3265
  %and414 = and i32 %call413, 7, !dbg !3266
  %cmp415 = icmp eq i32 %and414, 0, !dbg !3267
  br i1 %cmp415, label %if.then425, label %lor.lhs.false417, !dbg !3268

lor.lhs.false417:                                 ; preds = %if.then411
  %330 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3269
  %gb_slice418 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %330, i32 0, i32 10, !dbg !3270
  %331 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3271
  %gb_slice419 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %331, i32 0, i32 10, !dbg !3272
  %call420 = call i32 @get_bits_left(%struct.GetBitContext* %gb_slice419), !dbg !3273
  %and421 = and i32 %call420, 7, !dbg !3274
  %call422 = call i32 @show_bits(%struct.GetBitContext* %gb_slice418, i32 %and421), !dbg !3275
  %cmp423 = icmp eq i32 %call422, 0, !dbg !3277
  br i1 %cmp423, label %if.then425, label %if.end430, !dbg !3278

if.then425:                                       ; preds = %lor.lhs.false417, %if.then411
  %332 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3280
  %call426 = call i32 @svq3_decode_slice_header(%struct.AVCodecContext* %332), !dbg !3283
  %tobool427 = icmp ne i32 %call426, 0, !dbg !3283
  br i1 %tobool427, label %if.then428, label %if.end429, !dbg !3284

if.then428:                                       ; preds = %if.then425
  store i32 -1, i32* %retval, align 4, !dbg !3285
  br label %return, !dbg !3285

if.end429:                                        ; preds = %if.then425
  br label %if.end430, !dbg !3286

if.end430:                                        ; preds = %if.end429, %lor.lhs.false417
  %333 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3287
  %slice_type431 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %333, i32 0, i32 32, !dbg !3289
  %334 = load i32, i32* %slice_type431, align 8, !dbg !3289
  %335 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3290
  %pict_type432 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %335, i32 0, i32 31, !dbg !3291
  %336 = load i32, i32* %pict_type432, align 4, !dbg !3291
  %cmp433 = icmp ne i32 %334, %336, !dbg !3292
  br i1 %cmp433, label %if.then435, label %if.end436, !dbg !3293

if.then435:                                       ; preds = %if.end430
  %337 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3294
  %338 = bitcast %struct.AVCodecContext* %337 to i8*, !dbg !3294
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %338, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i32 0, i32 0)), !dbg !3296
  br label %if.end436, !dbg !3297

if.end436:                                        ; preds = %if.then435, %if.end430
  br label %if.end437, !dbg !3298

if.end437:                                        ; preds = %if.end436, %for.body402
  %339 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3299
  %gb_slice438 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %339, i32 0, i32 10, !dbg !3300
  %call439 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %gb_slice438), !dbg !3301
  store i32 %call439, i32* %mb_type, align 4, !dbg !3302
  %340 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3303
  %pict_type440 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %340, i32 0, i32 31, !dbg !3305
  %341 = load i32, i32* %pict_type440, align 4, !dbg !3305
  %cmp441 = icmp eq i32 %341, 1, !dbg !3306
  br i1 %cmp441, label %if.then443, label %if.else445, !dbg !3307

if.then443:                                       ; preds = %if.end437
  %342 = load i32, i32* %mb_type, align 4, !dbg !3308
  %add444 = add i32 %342, 8, !dbg !3308
  store i32 %add444, i32* %mb_type, align 4, !dbg !3308
  br label %if.end455, !dbg !3309

if.else445:                                       ; preds = %if.end437
  %343 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3310
  %pict_type446 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %343, i32 0, i32 31, !dbg !3312
  %344 = load i32, i32* %pict_type446, align 4, !dbg !3312
  %cmp447 = icmp eq i32 %344, 3, !dbg !3313
  br i1 %cmp447, label %land.lhs.true449, label %if.end454, !dbg !3314

land.lhs.true449:                                 ; preds = %if.else445
  %345 = load i32, i32* %mb_type, align 4, !dbg !3315
  %cmp450 = icmp uge i32 %345, 4, !dbg !3317
  br i1 %cmp450, label %if.then452, label %if.end454, !dbg !3318

if.then452:                                       ; preds = %land.lhs.true449
  %346 = load i32, i32* %mb_type, align 4, !dbg !3319
  %add453 = add i32 %346, 4, !dbg !3319
  store i32 %add453, i32* %mb_type, align 4, !dbg !3319
  br label %if.end454, !dbg !3320

if.end454:                                        ; preds = %if.then452, %land.lhs.true449, %if.else445
  br label %if.end455

if.end455:                                        ; preds = %if.end454, %if.then443
  %347 = load i32, i32* %mb_type, align 4, !dbg !3321
  %cmp456 = icmp ugt i32 %347, 33, !dbg !3323
  br i1 %cmp456, label %if.then461, label %lor.lhs.false458, !dbg !3324

lor.lhs.false458:                                 ; preds = %if.end455
  %348 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3325
  %349 = load i32, i32* %mb_type, align 4, !dbg !3327
  %call459 = call i32 @svq3_decode_mb(%struct.SVQ3Context* %348, i32 %349), !dbg !3328
  %tobool460 = icmp ne i32 %call459, 0, !dbg !3328
  br i1 %tobool460, label %if.then461, label %if.end465, !dbg !3329

if.then461:                                       ; preds = %lor.lhs.false458, %if.end455
  %350 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3330
  %avctx462 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %350, i32 0, i32 0, !dbg !3332
  %351 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx462, align 16, !dbg !3332
  %352 = bitcast %struct.AVCodecContext* %351 to i8*, !dbg !3330
  %353 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3333
  %mb_x463 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %353, i32 0, i32 34, !dbg !3334
  %354 = load i32, i32* %mb_x463, align 16, !dbg !3334
  %355 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3335
  %mb_y464 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %355, i32 0, i32 35, !dbg !3336
  %356 = load i32, i32* %mb_y464, align 4, !dbg !3336
  call void (i8*, i32, i8*, ...) @av_log(i8* %352, i32 16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12, i32 0, i32 0), i32 %354, i32 %356), !dbg !3337
  store i32 -1, i32* %retval, align 4, !dbg !3338
  br label %return, !dbg !3338

if.end465:                                        ; preds = %lor.lhs.false458
  %357 = load i32, i32* %mb_type, align 4, !dbg !3339
  %cmp466 = icmp ne i32 %357, 0, !dbg !3341
  br i1 %cmp466, label %if.then470, label %lor.lhs.false468, !dbg !3342

lor.lhs.false468:                                 ; preds = %if.end465
  %358 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3343
  %cbp = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %358, i32 0, i32 26, !dbg !3345
  %359 = load i32, i32* %cbp, align 16, !dbg !3345
  %tobool469 = icmp ne i32 %359, 0, !dbg !3343
  br i1 %tobool469, label %if.then470, label %if.end471, !dbg !3346

if.then470:                                       ; preds = %lor.lhs.false468, %if.end465
  %360 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3347
  call void @hl_decode_mb(%struct.SVQ3Context* %360), !dbg !3348
  br label %if.end471, !dbg !3348

if.end471:                                        ; preds = %if.then470, %lor.lhs.false468
  %361 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3349
  %pict_type472 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %361, i32 0, i32 31, !dbg !3351
  %362 = load i32, i32* %pict_type472, align 4, !dbg !3351
  %cmp473 = icmp ne i32 %362, 3, !dbg !3352
  br i1 %cmp473, label %land.lhs.true475, label %if.end495, !dbg !3353

land.lhs.true475:                                 ; preds = %if.end471
  %363 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3354
  %low_delay476 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %363, i32 0, i32 33, !dbg !3356
  %364 = load i32, i32* %low_delay476, align 4, !dbg !3356
  %tobool477 = icmp ne i32 %364, 0, !dbg !3354
  br i1 %tobool477, label %if.end495, label %if.then478, !dbg !3357

if.then478:                                       ; preds = %land.lhs.true475
  %365 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3358
  %pict_type479 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %365, i32 0, i32 31, !dbg !3359
  %366 = load i32, i32* %pict_type479, align 4, !dbg !3359
  %cmp480 = icmp eq i32 %366, 2, !dbg !3360
  br i1 %cmp480, label %land.lhs.true482, label %cond.false, !dbg !3361

land.lhs.true482:                                 ; preds = %if.then478
  %367 = load i32, i32* %mb_type, align 4, !dbg !3362
  %cmp483 = icmp ult i32 %367, 8, !dbg !3363
  br i1 %cmp483, label %cond.true, label %cond.false, !dbg !3364

cond.true:                                        ; preds = %land.lhs.true482
  %368 = load i32, i32* %mb_type, align 4, !dbg !3365
  %sub485 = sub i32 %368, 1, !dbg !3367
  br label %cond.end, !dbg !3368

cond.false:                                       ; preds = %land.lhs.true482, %if.then478
  br label %cond.end, !dbg !3369

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub485, %cond.true ], [ -1, %cond.false ], !dbg !3371
  %369 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3373
  %mb_x486 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %369, i32 0, i32 34, !dbg !3374
  %370 = load i32, i32* %mb_x486, align 16, !dbg !3374
  %371 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3375
  %mb_y487 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %371, i32 0, i32 35, !dbg !3376
  %372 = load i32, i32* %mb_y487, align 4, !dbg !3376
  %373 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3377
  %mb_stride488 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %373, i32 0, i32 39, !dbg !3378
  %374 = load i32, i32* %mb_stride488, align 4, !dbg !3378
  %mul489 = mul nsw i32 %372, %374, !dbg !3379
  %add490 = add nsw i32 %370, %mul489, !dbg !3380
  %idxprom491 = sext i32 %add490 to i64, !dbg !3381
  %375 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3381
  %cur_pic492 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %375, i32 0, i32 6, !dbg !3382
  %376 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic492, align 16, !dbg !3382
  %mb_type493 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %376, i32 0, i32 4, !dbg !3383
  %377 = load i32*, i32** %mb_type493, align 8, !dbg !3383
  %arrayidx494 = getelementptr inbounds i32, i32* %377, i64 %idxprom491, !dbg !3381
  store i32 %cond, i32* %arrayidx494, align 4, !dbg !3384
  br label %if.end495, !dbg !3381

if.end495:                                        ; preds = %cond.end, %land.lhs.true475, %if.end471
  br label %for.inc496, !dbg !3385

for.inc496:                                       ; preds = %if.end495
  %378 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3386
  %mb_x497 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %378, i32 0, i32 34, !dbg !3388
  %379 = load i32, i32* %mb_x497, align 16, !dbg !3389
  %inc498 = add nsw i32 %379, 1, !dbg !3389
  store i32 %inc498, i32* %mb_x497, align 16, !dbg !3389
  br label %for.cond398, !dbg !3390, !llvm.loop !3391

for.end499:                                       ; preds = %for.cond398
  %380 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3393
  %381 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3394
  %cur_pic500 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %381, i32 0, i32 6, !dbg !3395
  %382 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic500, align 16, !dbg !3395
  %f501 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %382, i32 0, i32 0, !dbg !3396
  %383 = load %struct.AVFrame*, %struct.AVFrame** %f501, align 8, !dbg !3396
  %384 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3397
  %last_pic502 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %384, i32 0, i32 8, !dbg !3398
  %385 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %last_pic502, align 16, !dbg !3398
  %f503 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %385, i32 0, i32 0, !dbg !3399
  %386 = load %struct.AVFrame*, %struct.AVFrame** %f503, align 8, !dbg !3399
  %data504 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %386, i32 0, i32 0, !dbg !3400
  %arrayidx505 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data504, i64 0, i64 0, !dbg !3397
  %387 = load i8*, i8** %arrayidx505, align 8, !dbg !3397
  %tobool506 = icmp ne i8* %387, null, !dbg !3397
  br i1 %tobool506, label %cond.true507, label %cond.false510, !dbg !3397

cond.true507:                                     ; preds = %for.end499
  %388 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3401
  %last_pic508 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %388, i32 0, i32 8, !dbg !3403
  %389 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %last_pic508, align 16, !dbg !3403
  %f509 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %389, i32 0, i32 0, !dbg !3404
  %390 = load %struct.AVFrame*, %struct.AVFrame** %f509, align 8, !dbg !3404
  br label %cond.end511, !dbg !3405

cond.false510:                                    ; preds = %for.end499
  br label %cond.end511, !dbg !3406

cond.end511:                                      ; preds = %cond.false510, %cond.true507
  %cond512 = phi %struct.AVFrame* [ %390, %cond.true507 ], [ null, %cond.false510 ], !dbg !3408
  %391 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3410
  %mb_y513 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %391, i32 0, i32 35, !dbg !3411
  %392 = load i32, i32* %mb_y513, align 4, !dbg !3411
  %mul514 = mul nsw i32 16, %392, !dbg !3412
  %393 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3413
  %low_delay515 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %393, i32 0, i32 33, !dbg !3414
  %394 = load i32, i32* %low_delay515, align 4, !dbg !3414
  call void @ff_draw_horiz_band(%struct.AVCodecContext* %380, %struct.AVFrame* %383, %struct.AVFrame* %cond512, i32 %mul514, i32 16, i32 3, i32 0, i32 %394), !dbg !3415
  br label %for.inc516, !dbg !3416

for.inc516:                                       ; preds = %cond.end511
  %395 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3417
  %mb_y517 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %395, i32 0, i32 35, !dbg !3419
  %396 = load i32, i32* %mb_y517, align 4, !dbg !3420
  %inc518 = add nsw i32 %396, 1, !dbg !3420
  store i32 %inc518, i32* %mb_y517, align 4, !dbg !3420
  br label %for.cond392, !dbg !3421, !llvm.loop !3422

for.end519:                                       ; preds = %for.cond392
  %397 = load i32, i32* %buf_size, align 4, !dbg !3424
  %mul520 = mul nsw i32 %397, 8, !dbg !3425
  %398 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3426
  %gb_slice521 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %398, i32 0, i32 10, !dbg !3427
  %call522 = call i32 @get_bits_count(%struct.GetBitContext* %gb_slice521), !dbg !3428
  %sub523 = sub nsw i32 %mul520, %call522, !dbg !3429
  store i32 %sub523, i32* %left, align 4, !dbg !3430
  %399 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3431
  %mb_y524 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %399, i32 0, i32 35, !dbg !3433
  %400 = load i32, i32* %mb_y524, align 4, !dbg !3433
  %401 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3434
  %mb_height525 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %401, i32 0, i32 38, !dbg !3435
  %402 = load i32, i32* %mb_height525, align 16, !dbg !3435
  %cmp526 = icmp ne i32 %400, %402, !dbg !3436
  br i1 %cmp526, label %if.then533, label %lor.lhs.false528, !dbg !3437

lor.lhs.false528:                                 ; preds = %for.end519
  %403 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3438
  %mb_x529 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %403, i32 0, i32 34, !dbg !3440
  %404 = load i32, i32* %mb_x529, align 16, !dbg !3440
  %405 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3441
  %mb_width530 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %405, i32 0, i32 37, !dbg !3442
  %406 = load i32, i32* %mb_width530, align 4, !dbg !3442
  %cmp531 = icmp ne i32 %404, %406, !dbg !3443
  br i1 %cmp531, label %if.then533, label %if.end536, !dbg !3444

if.then533:                                       ; preds = %lor.lhs.false528, %for.end519
  %407 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3445
  %408 = bitcast %struct.AVCodecContext* %407 to i8*, !dbg !3445
  %409 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3447
  %frame_number = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %409, i32 0, i32 86, !dbg !3448
  %410 = load i32, i32* %frame_number, align 8, !dbg !3448
  %411 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3449
  %mb_y534 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %411, i32 0, i32 35, !dbg !3450
  %412 = load i32, i32* %mb_y534, align 4, !dbg !3450
  %413 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3451
  %mb_x535 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %413, i32 0, i32 34, !dbg !3452
  %414 = load i32, i32* %mb_x535, align 16, !dbg !3452
  %415 = load i32, i32* %left, align 4, !dbg !3453
  call void (i8*, i32, i8*, ...) @av_log(i8* %408, i32 32, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.13, i32 0, i32 0), i32 %410, i32 %412, i32 %414, i32 %415), !dbg !3454
  br label %if.end536, !dbg !3455

if.end536:                                        ; preds = %if.then533, %lor.lhs.false528
  %416 = load i32, i32* %left, align 4, !dbg !3456
  %cmp537 = icmp slt i32 %416, 0, !dbg !3458
  br i1 %cmp537, label %if.then539, label %if.end541, !dbg !3459

if.then539:                                       ; preds = %if.end536
  %417 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3460
  %418 = bitcast %struct.AVCodecContext* %417 to i8*, !dbg !3460
  %419 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3462
  %frame_number540 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %419, i32 0, i32 86, !dbg !3463
  %420 = load i32, i32* %frame_number540, align 8, !dbg !3463
  %421 = load i32, i32* %left, align 4, !dbg !3464
  call void (i8*, i32, i8*, ...) @av_log(i8* %418, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i32 0, i32 0), i32 %420, i32 %421), !dbg !3465
  store i32 -1, i32* %retval, align 4, !dbg !3466
  br label %return, !dbg !3466

if.end541:                                        ; preds = %if.end536
  %422 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3467
  %pict_type542 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %422, i32 0, i32 31, !dbg !3469
  %423 = load i32, i32* %pict_type542, align 4, !dbg !3469
  %cmp543 = icmp eq i32 %423, 3, !dbg !3470
  br i1 %cmp543, label %if.then548, label %lor.lhs.false545, !dbg !3471

lor.lhs.false545:                                 ; preds = %if.end541
  %424 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3472
  %low_delay546 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %424, i32 0, i32 33, !dbg !3474
  %425 = load i32, i32* %low_delay546, align 4, !dbg !3474
  %tobool547 = icmp ne i32 %425, 0, !dbg !3472
  br i1 %tobool547, label %if.then548, label %if.else552, !dbg !3475

if.then548:                                       ; preds = %lor.lhs.false545, %if.end541
  %426 = load i8*, i8** %data.addr, align 8, !dbg !3476
  %427 = bitcast i8* %426 to %struct.AVFrame*, !dbg !3476
  %428 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3477
  %cur_pic549 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %428, i32 0, i32 6, !dbg !3478
  %429 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic549, align 16, !dbg !3478
  %f550 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %429, i32 0, i32 0, !dbg !3479
  %430 = load %struct.AVFrame*, %struct.AVFrame** %f550, align 8, !dbg !3479
  %call551 = call i32 @av_frame_ref(%struct.AVFrame* %427, %struct.AVFrame* %430), !dbg !3480
  store i32 %call551, i32* %ret, align 4, !dbg !3481
  br label %if.end563, !dbg !3482

if.else552:                                       ; preds = %lor.lhs.false545
  %431 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3483
  %last_pic553 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %431, i32 0, i32 8, !dbg !3485
  %432 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %last_pic553, align 16, !dbg !3485
  %f554 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %432, i32 0, i32 0, !dbg !3486
  %433 = load %struct.AVFrame*, %struct.AVFrame** %f554, align 8, !dbg !3486
  %data555 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %433, i32 0, i32 0, !dbg !3487
  %arrayidx556 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data555, i64 0, i64 0, !dbg !3483
  %434 = load i8*, i8** %arrayidx556, align 8, !dbg !3483
  %tobool557 = icmp ne i8* %434, null, !dbg !3483
  br i1 %tobool557, label %if.then558, label %if.end562, !dbg !3488

if.then558:                                       ; preds = %if.else552
  %435 = load i8*, i8** %data.addr, align 8, !dbg !3489
  %436 = bitcast i8* %435 to %struct.AVFrame*, !dbg !3489
  %437 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3490
  %last_pic559 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %437, i32 0, i32 8, !dbg !3491
  %438 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %last_pic559, align 16, !dbg !3491
  %f560 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %438, i32 0, i32 0, !dbg !3492
  %439 = load %struct.AVFrame*, %struct.AVFrame** %f560, align 8, !dbg !3492
  %call561 = call i32 @av_frame_ref(%struct.AVFrame* %436, %struct.AVFrame* %439), !dbg !3493
  store i32 %call561, i32* %ret, align 4, !dbg !3494
  br label %if.end562, !dbg !3495

if.end562:                                        ; preds = %if.then558, %if.else552
  br label %if.end563

if.end563:                                        ; preds = %if.end562, %if.then548
  %440 = load i32, i32* %ret, align 4, !dbg !3496
  %cmp564 = icmp slt i32 %440, 0, !dbg !3498
  br i1 %cmp564, label %if.then566, label %if.end567, !dbg !3499

if.then566:                                       ; preds = %if.end563
  %441 = load i32, i32* %ret, align 4, !dbg !3500
  store i32 %441, i32* %retval, align 4, !dbg !3501
  br label %return, !dbg !3501

if.end567:                                        ; preds = %if.end563
  %442 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3502
  %last_pic568 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %442, i32 0, i32 8, !dbg !3504
  %443 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %last_pic568, align 16, !dbg !3504
  %f569 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %443, i32 0, i32 0, !dbg !3505
  %444 = load %struct.AVFrame*, %struct.AVFrame** %f569, align 8, !dbg !3505
  %data570 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %444, i32 0, i32 0, !dbg !3506
  %arrayidx571 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data570, i64 0, i64 0, !dbg !3502
  %445 = load i8*, i8** %arrayidx571, align 8, !dbg !3502
  %tobool572 = icmp ne i8* %445, null, !dbg !3502
  br i1 %tobool572, label %if.then576, label %lor.lhs.false573, !dbg !3507

lor.lhs.false573:                                 ; preds = %if.end567
  %446 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3508
  %low_delay574 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %446, i32 0, i32 33, !dbg !3510
  %447 = load i32, i32* %low_delay574, align 4, !dbg !3510
  %tobool575 = icmp ne i32 %447, 0, !dbg !3508
  br i1 %tobool575, label %if.then576, label %if.end577, !dbg !3511

if.then576:                                       ; preds = %lor.lhs.false573, %if.end567
  %448 = load i32*, i32** %got_frame.addr, align 8, !dbg !3512
  store i32 1, i32* %448, align 4, !dbg !3513
  br label %if.end577, !dbg !3514

if.end577:                                        ; preds = %if.then576, %lor.lhs.false573
  %449 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3515
  %pict_type578 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %449, i32 0, i32 31, !dbg !3517
  %450 = load i32, i32* %pict_type578, align 4, !dbg !3517
  %cmp579 = icmp ne i32 %450, 3, !dbg !3518
  br i1 %cmp579, label %if.then581, label %if.else589, !dbg !3519

if.then581:                                       ; preds = %if.end577
  br label %do.body582, !dbg !3520, !llvm.loop !3522

do.body582:                                       ; preds = %if.then581
  call void @llvm.dbg.declare(metadata %struct.SVQ3Frame** %SWAP_tmp583, metadata !3523, metadata !1727), !dbg !3525
  %451 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3526
  %next_pic584 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %451, i32 0, i32 7, !dbg !3528
  %452 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %next_pic584, align 8, !dbg !3528
  store %struct.SVQ3Frame* %452, %struct.SVQ3Frame** %SWAP_tmp583, align 8, !dbg !3529
  %453 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3530
  %cur_pic585 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %453, i32 0, i32 6, !dbg !3531
  %454 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic585, align 16, !dbg !3531
  %455 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3532
  %next_pic586 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %455, i32 0, i32 7, !dbg !3533
  store %struct.SVQ3Frame* %454, %struct.SVQ3Frame** %next_pic586, align 8, !dbg !3534
  %456 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %SWAP_tmp583, align 8, !dbg !3535
  %457 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3536
  %cur_pic587 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %457, i32 0, i32 6, !dbg !3537
  store %struct.SVQ3Frame* %456, %struct.SVQ3Frame** %cur_pic587, align 16, !dbg !3538
  br label %do.end588, !dbg !3539

do.end588:                                        ; preds = %do.body582
  br label %if.end592, !dbg !3540

if.else589:                                       ; preds = %if.end577
  %458 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3541
  %cur_pic590 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %458, i32 0, i32 6, !dbg !3543
  %459 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic590, align 16, !dbg !3543
  %f591 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %459, i32 0, i32 0, !dbg !3544
  %460 = load %struct.AVFrame*, %struct.AVFrame** %f591, align 8, !dbg !3544
  call void @av_frame_unref(%struct.AVFrame* %460), !dbg !3545
  br label %if.end592

if.end592:                                        ; preds = %if.else589, %do.end588
  %461 = load i32, i32* %buf_size, align 4, !dbg !3546
  store i32 %461, i32* %retval, align 4, !dbg !3547
  br label %return, !dbg !3547

return:                                           ; preds = %if.end592, %if.then566, %if.then539, %if.then461, %if.then428, %if.then329, %if.then304, %if.then297, %if.then233, %if.then181, %if.then58, %if.then34, %if.then30, %if.then19, %if.end11, %if.then9
  %462 = load i32, i32* %retval, align 4, !dbg !3548
  ret i32 %462, !dbg !3548
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @svq3_decode_end(%struct.AVCodecContext* %avctx) #0 !dbg !3549 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.SVQ3Context*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3550, metadata !1727), !dbg !3551
  call void @llvm.dbg.declare(metadata %struct.SVQ3Context** %s, metadata !3552, metadata !1727), !dbg !3553
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3554
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !3555
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3555
  %2 = bitcast i8* %1 to %struct.SVQ3Context*, !dbg !3554
  store %struct.SVQ3Context* %2, %struct.SVQ3Context** %s, align 8, !dbg !3553
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3556
  %4 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3557
  %cur_pic = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %4, i32 0, i32 6, !dbg !3558
  %5 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic, align 16, !dbg !3558
  call void @free_picture(%struct.AVCodecContext* %3, %struct.SVQ3Frame* %5), !dbg !3559
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3560
  %7 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3561
  %next_pic = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %7, i32 0, i32 7, !dbg !3562
  %8 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %next_pic, align 8, !dbg !3562
  call void @free_picture(%struct.AVCodecContext* %6, %struct.SVQ3Frame* %8), !dbg !3563
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3564
  %10 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3565
  %last_pic = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %10, i32 0, i32 8, !dbg !3566
  %11 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %last_pic, align 16, !dbg !3566
  call void @free_picture(%struct.AVCodecContext* %9, %struct.SVQ3Frame* %11), !dbg !3567
  %12 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3568
  %cur_pic1 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %12, i32 0, i32 6, !dbg !3569
  %13 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic1, align 16, !dbg !3569
  %f = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %13, i32 0, i32 0, !dbg !3570
  call void @av_frame_free(%struct.AVFrame** %f), !dbg !3571
  %14 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3572
  %next_pic2 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %14, i32 0, i32 7, !dbg !3573
  %15 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %next_pic2, align 8, !dbg !3573
  %f3 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %15, i32 0, i32 0, !dbg !3574
  call void @av_frame_free(%struct.AVFrame** %f3), !dbg !3575
  %16 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3576
  %last_pic4 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %16, i32 0, i32 8, !dbg !3577
  %17 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %last_pic4, align 16, !dbg !3577
  %f5 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %17, i32 0, i32 0, !dbg !3578
  call void @av_frame_free(%struct.AVFrame** %f5), !dbg !3579
  %18 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3580
  %cur_pic6 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %18, i32 0, i32 6, !dbg !3581
  %19 = bitcast %struct.SVQ3Frame** %cur_pic6 to i8*, !dbg !3582
  call void @av_freep(i8* %19), !dbg !3583
  %20 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3584
  %next_pic7 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %20, i32 0, i32 7, !dbg !3585
  %21 = bitcast %struct.SVQ3Frame** %next_pic7 to i8*, !dbg !3586
  call void @av_freep(i8* %21), !dbg !3587
  %22 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3588
  %last_pic8 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %22, i32 0, i32 8, !dbg !3589
  %23 = bitcast %struct.SVQ3Frame** %last_pic8 to i8*, !dbg !3590
  call void @av_freep(i8* %23), !dbg !3591
  %24 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3592
  %slice_buf = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %24, i32 0, i32 11, !dbg !3593
  %25 = bitcast i8** %slice_buf to i8*, !dbg !3594
  call void @av_freep(i8* %25), !dbg !3595
  %26 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3596
  %intra4x4_pred_mode = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %26, i32 0, i32 46, !dbg !3597
  %27 = bitcast i8** %intra4x4_pred_mode to i8*, !dbg !3598
  call void @av_freep(i8* %27), !dbg !3599
  %28 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3600
  %edge_emu_buffer = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %28, i32 0, i32 50, !dbg !3601
  %29 = bitcast i8** %edge_emu_buffer to i8*, !dbg !3602
  call void @av_freep(i8* %29), !dbg !3603
  %30 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3604
  %mb2br_xy = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %30, i32 0, i32 42, !dbg !3605
  %31 = bitcast i32** %mb2br_xy to i8*, !dbg !3606
  call void @av_freep(i8* %31), !dbg !3607
  %32 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3608
  %buf = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %32, i32 0, i32 17, !dbg !3609
  %33 = bitcast i8** %buf to i8*, !dbg !3610
  call void @av_freep(i8* %33), !dbg !3611
  %34 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !3612
  %buf_size = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %34, i32 0, i32 18, !dbg !3613
  store i32 0, i32* %buf_size, align 16, !dbg !3614
  ret i32 0, !dbg !3615
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

declare noalias i8* @av_mallocz(i64) #3

declare %struct.AVFrame* @av_frame_alloc() #3

declare void @ff_h264dsp_init(%struct.H264DSPContext*, i32, i32) #3

declare void @ff_h264_pred_init(%struct.H264PredContext*, i32, i32, i32) #3

declare void @ff_videodsp_init(%struct.VideoDSPContext*, i32) #3

declare void @ff_hpeldsp_init(%struct.HpelDSPContext*, i32) #3

declare void @ff_tpeldsp_init(%struct.TpelDSPContext*) #3

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #4

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits(%struct.GetBitContext* %s, i8* %buffer, i32 %bit_size) #5 !dbg !3616 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %bit_size.addr = alloca i32, align 4
  %buffer_size = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3619, metadata !1727), !dbg !3620
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !3621, metadata !1727), !dbg !3622
  store i32 %bit_size, i32* %bit_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit_size.addr, metadata !3623, metadata !1727), !dbg !3624
  call void @llvm.dbg.declare(metadata i32* %buffer_size, metadata !3625, metadata !1727), !dbg !3626
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3627, metadata !1727), !dbg !3628
  store i32 0, i32* %ret, align 4, !dbg !3628
  %0 = load i32, i32* %bit_size.addr, align 4, !dbg !3629
  %cmp = icmp sge i32 %0, 2147483135, !dbg !3631
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3632

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %bit_size.addr, align 4, !dbg !3633
  %cmp1 = icmp slt i32 %1, 0, !dbg !3635
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !3636

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !3637
  %tobool = icmp ne i8* %2, null, !dbg !3637
  br i1 %tobool, label %if.end, label %if.then, !dbg !3639

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %bit_size.addr, align 4, !dbg !3640
  store i8* null, i8** %buffer.addr, align 8, !dbg !3642
  store i32 -1094995529, i32* %ret, align 4, !dbg !3643
  br label %if.end, !dbg !3644

if.end:                                           ; preds = %if.then, %lor.lhs.false2
  %3 = load i32, i32* %bit_size.addr, align 4, !dbg !3645
  %add = add nsw i32 %3, 7, !dbg !3646
  %shr = ashr i32 %add, 3, !dbg !3647
  store i32 %shr, i32* %buffer_size, align 4, !dbg !3648
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !3649
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3650
  %buffer3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 0, !dbg !3651
  store i8* %4, i8** %buffer3, align 8, !dbg !3652
  %6 = load i32, i32* %bit_size.addr, align 4, !dbg !3653
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3654
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %7, i32 0, i32 3, !dbg !3655
  store i32 %6, i32* %size_in_bits, align 4, !dbg !3656
  %8 = load i32, i32* %bit_size.addr, align 4, !dbg !3657
  %add4 = add nsw i32 %8, 8, !dbg !3658
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3659
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 4, !dbg !3660
  store i32 %add4, i32* %size_in_bits_plus8, align 8, !dbg !3661
  %10 = load i8*, i8** %buffer.addr, align 8, !dbg !3662
  %11 = load i32, i32* %buffer_size, align 4, !dbg !3663
  %idx.ext = sext i32 %11 to i64, !dbg !3664
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !3664
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3665
  %buffer_end = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %12, i32 0, i32 1, !dbg !3666
  store i8* %add.ptr, i8** %buffer_end, align 8, !dbg !3667
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3668
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %13, i32 0, i32 2, !dbg !3669
  store i32 0, i32* %index, align 8, !dbg !3670
  %14 = load i32, i32* %ret, align 4, !dbg !3671
  ret i32 %14, !dbg !3672
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits(%struct.GetBitContext* %s, i32 %n) #5 !dbg !3673 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !1722, metadata !1727), !dbg !3676
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3678, metadata !1727), !dbg !3679
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3680, metadata !1727), !dbg !3681
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !3682, metadata !1727), !dbg !3683
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !3684, metadata !1727), !dbg !3685
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3686
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !3687
  %1 = load i32, i32* %index, align 8, !dbg !3687
  store i32 %1, i32* %re_index, align 4, !dbg !3685
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !3688, metadata !1727), !dbg !3689
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !3690, metadata !1727), !dbg !3691
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3692
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !3693
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !3693
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !3691
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3694
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !3695
  %5 = load i8*, i8** %buffer, align 8, !dbg !3695
  %6 = load i32, i32* %re_index, align 4, !dbg !3696
  %shr = lshr i32 %6, 3, !dbg !3697
  %idx.ext = zext i32 %shr to i64, !dbg !3698
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !3698
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !3699
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !3699
  %8 = load i32, i32* %l, align 1, !dbg !3699
  store i32 %8, i32* %x.addr.i, align 4, !dbg !3700
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !3701
  %shl.i = shl i32 %9, 8, !dbg !3702
  %and.i = and i32 %shl.i, 65280, !dbg !3703
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !3704
  %shr.i = lshr i32 %10, 8, !dbg !3705
  %and1.i = and i32 %shr.i, 255, !dbg !3706
  %or.i = or i32 %and.i, %and1.i, !dbg !3707
  %shl2.i = shl i32 %or.i, 16, !dbg !3708
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !3709
  %shr3.i = lshr i32 %11, 16, !dbg !3710
  %shl4.i = shl i32 %shr3.i, 8, !dbg !3711
  %and5.i = and i32 %shl4.i, 65280, !dbg !3712
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !3713
  %shr6.i = lshr i32 %12, 16, !dbg !3714
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !3715
  %and8.i = and i32 %shr7.i, 255, !dbg !3716
  %or9.i = or i32 %and5.i, %and8.i, !dbg !3717
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !3718
  %13 = load i32, i32* %re_index, align 4, !dbg !3719
  %and = and i32 %13, 7, !dbg !3720
  %shl = shl i32 %or10.i, %and, !dbg !3721
  store i32 %shl, i32* %re_cache, align 4, !dbg !3722
  %14 = load i32, i32* %re_cache, align 4, !dbg !3723
  %15 = load i32, i32* %n.addr, align 4, !dbg !3724
  %conv = trunc i32 %15 to i8, !dbg !3724
  %call4 = call i32 @NEG_USR32(i32 %14, i8 signext %conv), !dbg !3725
  store i32 %call4, i32* %tmp, align 4, !dbg !3726
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !3727
  %17 = load i32, i32* %re_index, align 4, !dbg !3728
  %18 = load i32, i32* %n.addr, align 4, !dbg !3729
  %add = add i32 %17, %18, !dbg !3730
  %cmp = icmp ugt i32 %16, %add, !dbg !3731
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3732

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !3733
  %20 = load i32, i32* %n.addr, align 4, !dbg !3735
  %add6 = add i32 %19, %20, !dbg !3736
  br label %cond.end, !dbg !3737

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !3738
  br label %cond.end, !dbg !3740

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ %21, %cond.false ], !dbg !3741
  store i32 %cond, i32* %re_index, align 4, !dbg !3743
  %22 = load i32, i32* %re_index, align 4, !dbg !3744
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3745
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !3746
  store i32 %22, i32* %index7, align 8, !dbg !3747
  %24 = load i32, i32* %tmp, align 4, !dbg !3748
  ret i32 %24, !dbg !3749
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits1(%struct.GetBitContext* %s) #5 !dbg !3750 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %index = alloca i32, align 4
  %result = alloca i8, align 1
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3753, metadata !1727), !dbg !3754
  call void @llvm.dbg.declare(metadata i32* %index, metadata !3755, metadata !1727), !dbg !3756
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3757
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !3758
  %1 = load i32, i32* %index1, align 8, !dbg !3758
  store i32 %1, i32* %index, align 4, !dbg !3756
  call void @llvm.dbg.declare(metadata i8* %result, metadata !3759, metadata !1727), !dbg !3760
  %2 = load i32, i32* %index, align 4, !dbg !3761
  %shr = lshr i32 %2, 3, !dbg !3762
  %idxprom = zext i32 %shr to i64, !dbg !3763
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3763
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 0, !dbg !3764
  %4 = load i8*, i8** %buffer, align 8, !dbg !3764
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !3763
  %5 = load i8, i8* %arrayidx, align 1, !dbg !3763
  store i8 %5, i8* %result, align 1, !dbg !3760
  %6 = load i32, i32* %index, align 4, !dbg !3765
  %and = and i32 %6, 7, !dbg !3766
  %7 = load i8, i8* %result, align 1, !dbg !3767
  %conv = zext i8 %7 to i32, !dbg !3767
  %shl = shl i32 %conv, %and, !dbg !3767
  %conv2 = trunc i32 %shl to i8, !dbg !3767
  store i8 %conv2, i8* %result, align 1, !dbg !3767
  %8 = load i8, i8* %result, align 1, !dbg !3768
  %conv3 = zext i8 %8 to i32, !dbg !3768
  %shr4 = ashr i32 %conv3, 7, !dbg !3768
  %conv5 = trunc i32 %shr4 to i8, !dbg !3768
  store i8 %conv5, i8* %result, align 1, !dbg !3768
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3769
  %index6 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 2, !dbg !3771
  %10 = load i32, i32* %index6, align 8, !dbg !3771
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3772
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 4, !dbg !3773
  %12 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !3773
  %cmp = icmp slt i32 %10, %12, !dbg !3774
  br i1 %cmp, label %if.then, label %if.end, !dbg !3775

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %index, align 4, !dbg !3776
  %inc = add i32 %13, 1, !dbg !3776
  store i32 %inc, i32* %index, align 4, !dbg !3776
  br label %if.end, !dbg !3777

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %index, align 4, !dbg !3778
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3779
  %index8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !3780
  store i32 %14, i32* %index8, align 8, !dbg !3781
  %16 = load i8, i8* %result, align 1, !dbg !3782
  %conv9 = zext i8 %16 to i32, !dbg !3782
  ret i32 %conv9, !dbg !3783
}

declare void @av_log(i8*, i32, i8*, ...) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @skip_1stop_8data_bits(%struct.GetBitContext* %gb) #5 !dbg !3784 {
entry:
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !3787, metadata !1727), !dbg !3788
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3789
  %call = call i32 @get_bits_left(%struct.GetBitContext* %0), !dbg !3791
  %cmp = icmp sle i32 %call, 0, !dbg !3792
  br i1 %cmp, label %if.then, label %if.end, !dbg !3793

if.then:                                          ; preds = %entry
  store i32 -1094995529, i32* %retval, align 4, !dbg !3794
  br label %return, !dbg !3794

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !3795

while.cond:                                       ; preds = %if.end5, %if.end
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3796
  %call1 = call i32 @get_bits1(%struct.GetBitContext* %1), !dbg !3798
  %tobool = icmp ne i32 %call1, 0, !dbg !3799
  br i1 %tobool, label %while.body, label %while.end, !dbg !3799

while.body:                                       ; preds = %while.cond
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3800
  call void @skip_bits(%struct.GetBitContext* %2, i32 8), !dbg !3802
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3803
  %call2 = call i32 @get_bits_left(%struct.GetBitContext* %3), !dbg !3805
  %cmp3 = icmp sle i32 %call2, 0, !dbg !3806
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !3807

if.then4:                                         ; preds = %while.body
  store i32 -1094995529, i32* %retval, align 4, !dbg !3808
  br label %return, !dbg !3808

if.end5:                                          ; preds = %while.body
  br label %while.cond, !dbg !3809, !llvm.loop !3811

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !3812
  br label %return, !dbg !3812

return:                                           ; preds = %while.end, %if.then4, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !3813
  ret i32 %4, !dbg !3813
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %gb) #5 !dbg !3814 {
entry:
  %x.addr.i78 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i78, metadata !1722, metadata !1727), !dbg !3816
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !1722, metadata !1727), !dbg !3821
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %buf = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !3823, metadata !1727), !dbg !3824
  call void @llvm.dbg.declare(metadata i32* %buf, metadata !3825, metadata !1727), !dbg !3826
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !3827, metadata !1727), !dbg !3828
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3829
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !3830
  %1 = load i32, i32* %index, align 8, !dbg !3830
  store i32 %1, i32* %re_index, align 4, !dbg !3828
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !3831, metadata !1727), !dbg !3832
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !3833, metadata !1727), !dbg !3834
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3835
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !3836
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !3836
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !3834
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3837
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !3838
  %5 = load i8*, i8** %buffer, align 8, !dbg !3838
  %6 = load i32, i32* %re_index, align 4, !dbg !3839
  %shr = lshr i32 %6, 3, !dbg !3840
  %idx.ext = zext i32 %shr to i64, !dbg !3841
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !3841
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !3842
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !3842
  %8 = load i32, i32* %l, align 1, !dbg !3842
  store i32 %8, i32* %x.addr.i, align 4, !dbg !3843
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !3844
  %shl.i = shl i32 %9, 8, !dbg !3845
  %and.i = and i32 %shl.i, 65280, !dbg !3846
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !3847
  %shr.i = lshr i32 %10, 8, !dbg !3848
  %and1.i = and i32 %shr.i, 255, !dbg !3849
  %or.i = or i32 %and.i, %and1.i, !dbg !3850
  %shl2.i = shl i32 %or.i, 16, !dbg !3851
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !3852
  %shr3.i = lshr i32 %11, 16, !dbg !3853
  %shl4.i = shl i32 %shr3.i, 8, !dbg !3854
  %and5.i = and i32 %shl4.i, 65280, !dbg !3855
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !3856
  %shr6.i = lshr i32 %12, 16, !dbg !3857
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !3858
  %and8.i = and i32 %shr7.i, 255, !dbg !3859
  %or9.i = or i32 %and5.i, %and8.i, !dbg !3860
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !3861
  %13 = load i32, i32* %re_index, align 4, !dbg !3862
  %and = and i32 %13, 7, !dbg !3863
  %shl = shl i32 %or10.i, %and, !dbg !3864
  store i32 %shl, i32* %re_cache, align 4, !dbg !3865
  %14 = load i32, i32* %re_cache, align 4, !dbg !3866
  store i32 %14, i32* %buf, align 4, !dbg !3867
  %15 = load i32, i32* %buf, align 4, !dbg !3868
  %and1 = and i32 %15, -1434451968, !dbg !3869
  %tobool = icmp ne i32 %and1, 0, !dbg !3869
  br i1 %tobool, label %if.then, label %if.else, !dbg !3870

if.then:                                          ; preds = %entry
  %16 = load i32, i32* %buf, align 4, !dbg !3871
  %shr2 = lshr i32 %16, 24, !dbg !3871
  store i32 %shr2, i32* %buf, align 4, !dbg !3871
  %17 = load i32, i32* %re_size_plus8, align 4, !dbg !3873
  %18 = load i32, i32* %re_index, align 4, !dbg !3874
  %19 = load i32, i32* %buf, align 4, !dbg !3875
  %idxprom = zext i32 %19 to i64, !dbg !3876
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %idxprom, !dbg !3876
  %20 = load i8, i8* %arrayidx, align 1, !dbg !3876
  %conv = zext i8 %20 to i32, !dbg !3877
  %add = add i32 %18, %conv, !dbg !3878
  %cmp = icmp ugt i32 %17, %add, !dbg !3879
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3880

cond.true:                                        ; preds = %if.then
  %21 = load i32, i32* %re_index, align 4, !dbg !3881
  %22 = load i32, i32* %buf, align 4, !dbg !3883
  %idxprom4 = zext i32 %22 to i64, !dbg !3884
  %arrayidx5 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %idxprom4, !dbg !3884
  %23 = load i8, i8* %arrayidx5, align 1, !dbg !3884
  %conv6 = zext i8 %23 to i32, !dbg !3885
  %add7 = add i32 %21, %conv6, !dbg !3886
  br label %cond.end, !dbg !3887

cond.false:                                       ; preds = %if.then
  %24 = load i32, i32* %re_size_plus8, align 4, !dbg !3888
  br label %cond.end, !dbg !3890

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add7, %cond.true ], [ %24, %cond.false ], !dbg !3891
  store i32 %cond, i32* %re_index, align 4, !dbg !3893
  %25 = load i32, i32* %re_index, align 4, !dbg !3894
  %26 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3895
  %index8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %26, i32 0, i32 2, !dbg !3896
  store i32 %25, i32* %index8, align 8, !dbg !3897
  %27 = load i32, i32* %buf, align 4, !dbg !3898
  %idxprom9 = zext i32 %27 to i64, !dbg !3899
  %arrayidx10 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_ue_golomb_vlc_code, i64 0, i64 %idxprom9, !dbg !3899
  %28 = load i8, i8* %arrayidx10, align 1, !dbg !3899
  %conv11 = zext i8 %28 to i32, !dbg !3899
  store i32 %conv11, i32* %retval, align 4, !dbg !3900
  br label %return, !dbg !3900

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3901, metadata !1727), !dbg !3902
  store i32 1, i32* %ret, align 4, !dbg !3902
  br label %do.body, !dbg !3903, !llvm.loop !3904

do.body:                                          ; preds = %land.end, %if.else
  %29 = load i32, i32* %buf, align 4, !dbg !3905
  %shr12 = lshr i32 %29, 24, !dbg !3905
  store i32 %shr12, i32* %buf, align 4, !dbg !3905
  %30 = load i32, i32* %re_size_plus8, align 4, !dbg !3906
  %31 = load i32, i32* %re_index, align 4, !dbg !3907
  %32 = load i32, i32* %buf, align 4, !dbg !3908
  %idxprom13 = zext i32 %32 to i64, !dbg !3909
  %arrayidx14 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %idxprom13, !dbg !3909
  %33 = load i8, i8* %arrayidx14, align 1, !dbg !3909
  %conv15 = zext i8 %33 to i32, !dbg !3910
  %cmp16 = icmp sgt i32 %conv15, 8, !dbg !3911
  br i1 %cmp16, label %cond.true18, label %cond.false19, !dbg !3910

cond.true18:                                      ; preds = %do.body
  br label %cond.end23, !dbg !3912

cond.false19:                                     ; preds = %do.body
  %34 = load i32, i32* %buf, align 4, !dbg !3914
  %idxprom20 = zext i32 %34 to i64, !dbg !3916
  %arrayidx21 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %idxprom20, !dbg !3916
  %35 = load i8, i8* %arrayidx21, align 1, !dbg !3916
  %conv22 = zext i8 %35 to i32, !dbg !3917
  br label %cond.end23, !dbg !3918

cond.end23:                                       ; preds = %cond.false19, %cond.true18
  %cond24 = phi i32 [ 8, %cond.true18 ], [ %conv22, %cond.false19 ], !dbg !3919
  %add25 = add i32 %31, %cond24, !dbg !3921
  %cmp26 = icmp ugt i32 %30, %add25, !dbg !3922
  br i1 %cmp26, label %cond.true28, label %cond.false42, !dbg !3923

cond.true28:                                      ; preds = %cond.end23
  %36 = load i32, i32* %re_index, align 4, !dbg !3924
  %37 = load i32, i32* %buf, align 4, !dbg !3926
  %idxprom29 = zext i32 %37 to i64, !dbg !3927
  %arrayidx30 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %idxprom29, !dbg !3927
  %38 = load i8, i8* %arrayidx30, align 1, !dbg !3927
  %conv31 = zext i8 %38 to i32, !dbg !3928
  %cmp32 = icmp sgt i32 %conv31, 8, !dbg !3929
  br i1 %cmp32, label %cond.true34, label %cond.false35, !dbg !3928

cond.true34:                                      ; preds = %cond.true28
  br label %cond.end39, !dbg !3930

cond.false35:                                     ; preds = %cond.true28
  %39 = load i32, i32* %buf, align 4, !dbg !3932
  %idxprom36 = zext i32 %39 to i64, !dbg !3934
  %arrayidx37 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %idxprom36, !dbg !3934
  %40 = load i8, i8* %arrayidx37, align 1, !dbg !3934
  %conv38 = zext i8 %40 to i32, !dbg !3935
  br label %cond.end39, !dbg !3936

cond.end39:                                       ; preds = %cond.false35, %cond.true34
  %cond40 = phi i32 [ 8, %cond.true34 ], [ %conv38, %cond.false35 ], !dbg !3937
  %add41 = add i32 %36, %cond40, !dbg !3939
  br label %cond.end43, !dbg !3940

cond.false42:                                     ; preds = %cond.end23
  %41 = load i32, i32* %re_size_plus8, align 4, !dbg !3941
  br label %cond.end43, !dbg !3943

cond.end43:                                       ; preds = %cond.false42, %cond.end39
  %cond44 = phi i32 [ %add41, %cond.end39 ], [ %41, %cond.false42 ], !dbg !3944
  store i32 %cond44, i32* %re_index, align 4, !dbg !3946
  %42 = load i32, i32* %buf, align 4, !dbg !3947
  %idxprom45 = zext i32 %42 to i64, !dbg !3949
  %arrayidx46 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %idxprom45, !dbg !3949
  %43 = load i8, i8* %arrayidx46, align 1, !dbg !3949
  %conv47 = zext i8 %43 to i32, !dbg !3949
  %cmp48 = icmp ne i32 %conv47, 9, !dbg !3950
  br i1 %cmp48, label %if.then50, label %if.end, !dbg !3951

if.then50:                                        ; preds = %cond.end43
  %44 = load i32, i32* %buf, align 4, !dbg !3952
  %idxprom51 = zext i32 %44 to i64, !dbg !3954
  %arrayidx52 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %idxprom51, !dbg !3954
  %45 = load i8, i8* %arrayidx52, align 1, !dbg !3954
  %conv53 = zext i8 %45 to i32, !dbg !3954
  %sub = sub nsw i32 %conv53, 1, !dbg !3955
  %shr54 = ashr i32 %sub, 1, !dbg !3956
  %46 = load i32, i32* %ret, align 4, !dbg !3957
  %shl55 = shl i32 %46, %shr54, !dbg !3957
  store i32 %shl55, i32* %ret, align 4, !dbg !3957
  %47 = load i32, i32* %buf, align 4, !dbg !3958
  %idxprom56 = zext i32 %47 to i64, !dbg !3959
  %arrayidx57 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %idxprom56, !dbg !3959
  %48 = load i8, i8* %arrayidx57, align 1, !dbg !3959
  %conv58 = zext i8 %48 to i32, !dbg !3959
  %49 = load i32, i32* %ret, align 4, !dbg !3960
  %or = or i32 %49, %conv58, !dbg !3960
  store i32 %or, i32* %ret, align 4, !dbg !3960
  br label %do.end, !dbg !3961

if.end:                                           ; preds = %cond.end43
  %50 = load i32, i32* %ret, align 4, !dbg !3962
  %shl59 = shl i32 %50, 4, !dbg !3963
  %51 = load i32, i32* %buf, align 4, !dbg !3964
  %idxprom60 = zext i32 %51 to i64, !dbg !3965
  %arrayidx61 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %idxprom60, !dbg !3965
  %52 = load i8, i8* %arrayidx61, align 1, !dbg !3965
  %conv62 = zext i8 %52 to i32, !dbg !3965
  %or63 = or i32 %shl59, %conv62, !dbg !3966
  store i32 %or63, i32* %ret, align 4, !dbg !3967
  %53 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3968
  %buffer64 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %53, i32 0, i32 0, !dbg !3969
  %54 = load i8*, i8** %buffer64, align 8, !dbg !3969
  %55 = load i32, i32* %re_index, align 4, !dbg !3970
  %shr65 = lshr i32 %55, 3, !dbg !3971
  %idx.ext66 = zext i32 %shr65 to i64, !dbg !3972
  %add.ptr67 = getelementptr inbounds i8, i8* %54, i64 %idx.ext66, !dbg !3972
  %56 = bitcast i8* %add.ptr67 to %union.unaligned_32*, !dbg !3973
  %l68 = bitcast %union.unaligned_32* %56 to i32*, !dbg !3973
  %57 = load i32, i32* %l68, align 1, !dbg !3973
  store i32 %57, i32* %x.addr.i78, align 4, !dbg !3974
  %58 = load i32, i32* %x.addr.i78, align 4, !dbg !3975
  %shl.i79 = shl i32 %58, 8, !dbg !3976
  %and.i80 = and i32 %shl.i79, 65280, !dbg !3977
  %59 = load i32, i32* %x.addr.i78, align 4, !dbg !3978
  %shr.i81 = lshr i32 %59, 8, !dbg !3979
  %and1.i82 = and i32 %shr.i81, 255, !dbg !3980
  %or.i83 = or i32 %and.i80, %and1.i82, !dbg !3981
  %shl2.i84 = shl i32 %or.i83, 16, !dbg !3982
  %60 = load i32, i32* %x.addr.i78, align 4, !dbg !3983
  %shr3.i85 = lshr i32 %60, 16, !dbg !3984
  %shl4.i86 = shl i32 %shr3.i85, 8, !dbg !3985
  %and5.i87 = and i32 %shl4.i86, 65280, !dbg !3986
  %61 = load i32, i32* %x.addr.i78, align 4, !dbg !3987
  %shr6.i88 = lshr i32 %61, 16, !dbg !3988
  %shr7.i89 = lshr i32 %shr6.i88, 8, !dbg !3989
  %and8.i90 = and i32 %shr7.i89, 255, !dbg !3990
  %or9.i91 = or i32 %and5.i87, %and8.i90, !dbg !3991
  %or10.i92 = or i32 %shl2.i84, %or9.i91, !dbg !3992
  %62 = load i32, i32* %re_index, align 4, !dbg !3993
  %and70 = and i32 %62, 7, !dbg !3994
  %shl71 = shl i32 %or10.i92, %and70, !dbg !3995
  store i32 %shl71, i32* %re_cache, align 4, !dbg !3996
  %63 = load i32, i32* %re_cache, align 4, !dbg !3997
  store i32 %63, i32* %buf, align 4, !dbg !3998
  br label %do.cond, !dbg !3999

do.cond:                                          ; preds = %if.end
  %64 = load i32, i32* %ret, align 4, !dbg !4000
  %cmp72 = icmp ult i32 %64, 134217728, !dbg !4002
  br i1 %cmp72, label %land.rhs, label %land.end, !dbg !4003

land.rhs:                                         ; preds = %do.cond
  %65 = load i32, i32* %re_index, align 4, !dbg !4004
  %66 = load i32, i32* %re_size_plus8, align 4, !dbg !4006
  %cmp74 = icmp ult i32 %65, %66, !dbg !4007
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %67 = phi i1 [ false, %do.cond ], [ %cmp74, %land.rhs ]
  br i1 %67, label %do.body, label %do.end, !dbg !4008, !llvm.loop !3904

do.end:                                           ; preds = %land.end, %if.then50
  %68 = load i32, i32* %re_index, align 4, !dbg !4009
  %69 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4010
  %index76 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %69, i32 0, i32 2, !dbg !4011
  store i32 %68, i32* %index76, align 8, !dbg !4012
  %70 = load i32, i32* %ret, align 4, !dbg !4013
  %sub77 = sub i32 %70, 1, !dbg !4014
  store i32 %sub77, i32* %retval, align 4, !dbg !4015
  br label %return, !dbg !4015

return:                                           ; preds = %do.end, %cond.end
  %71 = load i32, i32* %retval, align 4, !dbg !4016
  ret i32 %71, !dbg !4016
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_count(%struct.GetBitContext* %s) #5 !dbg !4017 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !4022, metadata !1727), !dbg !4023
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4024
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !4025
  %1 = load i32, i32* %index, align 8, !dbg !4025
  ret i32 %1, !dbg !4026
}

declare noalias i8* @av_malloc(i64) #3

declare i32 @uncompress(i8*, i64*, i8*, i64) #3

declare void @av_free(i8*) #3

declare zeroext i16 @ff_svq1_packet_checksum(i8*, i32, i32) #3

; Function Attrs: nounwind uwtable
define internal void @init_dequant4_coeff_table(%struct.SVQ3Context* %s) #1 !dbg !4027 {
entry:
  %s.addr = alloca %struct.SVQ3Context*, align 8
  %q = alloca i32, align 4
  %x = alloca i32, align 4
  %max_qp = alloca i32, align 4
  %shift = alloca i32, align 4
  %idx = alloca i32, align 4
  store %struct.SVQ3Context* %s, %struct.SVQ3Context** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SVQ3Context** %s.addr, metadata !4030, metadata !1727), !dbg !4031
  call void @llvm.dbg.declare(metadata i32* %q, metadata !4032, metadata !1727), !dbg !4033
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4034, metadata !1727), !dbg !4035
  call void @llvm.dbg.declare(metadata i32* %max_qp, metadata !4036, metadata !1727), !dbg !4037
  store i32 51, i32* %max_qp, align 4, !dbg !4037
  store i32 0, i32* %q, align 4, !dbg !4038
  br label %for.cond, !dbg !4040

for.cond:                                         ; preds = %for.inc22, %entry
  %0 = load i32, i32* %q, align 4, !dbg !4041
  %cmp = icmp slt i32 %0, 52, !dbg !4044
  br i1 %cmp, label %for.body, label %for.end24, !dbg !4045

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !4046, metadata !1727), !dbg !4048
  %1 = load i32, i32* %q, align 4, !dbg !4049
  %idxprom = sext i32 %1 to i64, !dbg !4050
  %arrayidx = getelementptr inbounds [88 x i8], [88 x i8]* @ff_h264_quant_div6, i64 0, i64 %idxprom, !dbg !4050
  %2 = load i8, i8* %arrayidx, align 1, !dbg !4050
  %conv = zext i8 %2 to i32, !dbg !4050
  %add = add nsw i32 %conv, 2, !dbg !4051
  store i32 %add, i32* %shift, align 4, !dbg !4048
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !4052, metadata !1727), !dbg !4053
  %3 = load i32, i32* %q, align 4, !dbg !4054
  %idxprom1 = sext i32 %3 to i64, !dbg !4055
  %arrayidx2 = getelementptr inbounds [88 x i8], [88 x i8]* @ff_h264_quant_rem6, i64 0, i64 %idxprom1, !dbg !4055
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !4055
  %conv3 = zext i8 %4 to i32, !dbg !4055
  store i32 %conv3, i32* %idx, align 4, !dbg !4053
  store i32 0, i32* %x, align 4, !dbg !4056
  br label %for.cond4, !dbg !4058

for.cond4:                                        ; preds = %for.inc, %for.body
  %5 = load i32, i32* %x, align 4, !dbg !4059
  %cmp5 = icmp slt i32 %5, 16, !dbg !4062
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !4063

for.body7:                                        ; preds = %for.cond4
  %6 = load i32, i32* %x, align 4, !dbg !4064
  %and = and i32 %6, 1, !dbg !4065
  %7 = load i32, i32* %x, align 4, !dbg !4066
  %shr = ashr i32 %7, 2, !dbg !4067
  %and8 = and i32 %shr, 1, !dbg !4068
  %add9 = add nsw i32 %and, %and8, !dbg !4069
  %idxprom10 = sext i32 %add9 to i64, !dbg !4070
  %8 = load i32, i32* %idx, align 4, !dbg !4071
  %idxprom11 = sext i32 %8 to i64, !dbg !4070
  %arrayidx12 = getelementptr inbounds [6 x [3 x i8]], [6 x [3 x i8]]* @ff_h264_dequant4_coeff_init, i64 0, i64 %idxprom11, !dbg !4070
  %arrayidx13 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx12, i64 0, i64 %idxprom10, !dbg !4070
  %9 = load i8, i8* %arrayidx13, align 1, !dbg !4070
  %conv14 = zext i8 %9 to i32, !dbg !4072
  %mul = mul i32 %conv14, 16, !dbg !4073
  %10 = load i32, i32* %shift, align 4, !dbg !4074
  %shl = shl i32 %mul, %10, !dbg !4075
  %11 = load i32, i32* %x, align 4, !dbg !4076
  %shr15 = ashr i32 %11, 2, !dbg !4077
  %12 = load i32, i32* %x, align 4, !dbg !4078
  %shl16 = shl i32 %12, 2, !dbg !4079
  %and17 = and i32 %shl16, 15, !dbg !4080
  %or = or i32 %shr15, %and17, !dbg !4081
  %idxprom18 = sext i32 %or to i64, !dbg !4082
  %13 = load i32, i32* %q, align 4, !dbg !4083
  %idxprom19 = sext i32 %13 to i64, !dbg !4082
  %14 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4082
  %dequant4_coeff = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %14, i32 0, i32 57, !dbg !4084
  %arrayidx20 = getelementptr inbounds [88 x [16 x i32]], [88 x [16 x i32]]* %dequant4_coeff, i64 0, i64 %idxprom19, !dbg !4082
  %arrayidx21 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx20, i64 0, i64 %idxprom18, !dbg !4082
  store i32 %shl, i32* %arrayidx21, align 4, !dbg !4085
  br label %for.inc, !dbg !4082

for.inc:                                          ; preds = %for.body7
  %15 = load i32, i32* %x, align 4, !dbg !4086
  %inc = add nsw i32 %15, 1, !dbg !4086
  store i32 %inc, i32* %x, align 4, !dbg !4086
  br label %for.cond4, !dbg !4088, !llvm.loop !4089

for.end:                                          ; preds = %for.cond4
  br label %for.inc22, !dbg !4091

for.inc22:                                        ; preds = %for.end
  %16 = load i32, i32* %q, align 4, !dbg !4092
  %inc23 = add nsw i32 %16, 1, !dbg !4092
  store i32 %inc23, i32* %q, align 4, !dbg !4092
  br label %for.cond, !dbg !4094, !llvm.loop !4095

for.end24:                                        ; preds = %for.cond
  ret void, !dbg !4097
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @NEG_USR32(i32 %a, i8 signext %s) #5 !dbg !4098 {
entry:
  %a.addr = alloca i32, align 4
  %s.addr = alloca i8, align 1
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !4102, metadata !1727), !dbg !4103
  store i8 %s, i8* %s.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %s.addr, metadata !4104, metadata !1727), !dbg !4105
  %0 = load i32, i32* %a.addr, align 4, !dbg !4106
  %1 = load i8, i8* %s.addr, align 1, !dbg !4107
  %conv = sext i8 %1 to i32, !dbg !4107
  %sub = sub nsw i32 0, %conv, !dbg !4108
  %conv1 = trunc i32 %sub to i8, !dbg !4109
  %2 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %conv1, i32 %0) #2, !dbg !4106, !srcloc !4110
  store i32 %2, i32* %a.addr, align 4, !dbg !4106
  %3 = load i32, i32* %a.addr, align 4, !dbg !4111
  ret i32 %3, !dbg !4112
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_left(%struct.GetBitContext* %gb) #5 !dbg !4113 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !4114, metadata !1727), !dbg !4115
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4116
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 3, !dbg !4117
  %1 = load i32, i32* %size_in_bits, align 4, !dbg !4117
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4118
  %call = call i32 @get_bits_count(%struct.GetBitContext* %2), !dbg !4119
  %sub = sub nsw i32 %1, %call, !dbg !4120
  ret i32 %sub, !dbg !4121
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits(%struct.GetBitContext* %s, i32 %n) #5 !dbg !4122 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !4125, metadata !1727), !dbg !4126
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !4127, metadata !1727), !dbg !4128
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !4129, metadata !1727), !dbg !4130
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4131
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !4132
  %1 = load i32, i32* %index, align 8, !dbg !4132
  store i32 %1, i32* %re_index, align 4, !dbg !4130
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !4133, metadata !1727), !dbg !4134
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !4135, metadata !1727), !dbg !4136
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4137
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !4138
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !4138
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !4136
  %4 = load i32, i32* %re_size_plus8, align 4, !dbg !4139
  %5 = load i32, i32* %re_index, align 4, !dbg !4140
  %6 = load i32, i32* %n.addr, align 4, !dbg !4141
  %add = add i32 %5, %6, !dbg !4142
  %cmp = icmp ugt i32 %4, %add, !dbg !4143
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4144

cond.true:                                        ; preds = %entry
  %7 = load i32, i32* %re_index, align 4, !dbg !4145
  %8 = load i32, i32* %n.addr, align 4, !dbg !4147
  %add1 = add i32 %7, %8, !dbg !4148
  br label %cond.end, !dbg !4149

cond.false:                                       ; preds = %entry
  %9 = load i32, i32* %re_size_plus8, align 4, !dbg !4150
  br label %cond.end, !dbg !4152

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add1, %cond.true ], [ %9, %cond.false ], !dbg !4153
  store i32 %cond, i32* %re_index, align 4, !dbg !4155
  %10 = load i32, i32* %re_index, align 4, !dbg !4156
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4157
  %index2 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 2, !dbg !4158
  store i32 %10, i32* %index2, align 8, !dbg !4159
  ret void, !dbg !4160
}

declare i32 @av_frame_ref(%struct.AVFrame*, %struct.AVFrame*) #3

declare void @av_fast_padded_malloc(i8*, i32*, i64) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #6

; Function Attrs: nounwind uwtable
define internal i32 @svq3_decode_slice_header(%struct.AVCodecContext* %avctx) #1 !dbg !4161 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.SVQ3Context*, align 8
  %mb_xy = alloca i32, align 4
  %i = alloca i32, align 4
  %header = alloca i32, align 4
  %slice_id = alloca i32, align 4
  %slice_bits = alloca i32, align 4
  %slice_bytes = alloca i32, align 4
  %slice_length = alloca i32, align 4
  %length = alloca i32, align 4
  %header29 = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !4162, metadata !1727), !dbg !4163
  call void @llvm.dbg.declare(metadata %struct.SVQ3Context** %s, metadata !4164, metadata !1727), !dbg !4165
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4166
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !4167
  %1 = load i8*, i8** %priv_data, align 8, !dbg !4167
  %2 = bitcast i8* %1 to %struct.SVQ3Context*, !dbg !4166
  store %struct.SVQ3Context* %2, %struct.SVQ3Context** %s, align 8, !dbg !4165
  call void @llvm.dbg.declare(metadata i32* %mb_xy, metadata !4168, metadata !1727), !dbg !4169
  %3 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4170
  %mb_xy1 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %3, i32 0, i32 36, !dbg !4171
  %4 = load i32, i32* %mb_xy1, align 8, !dbg !4171
  store i32 %4, i32* %mb_xy, align 4, !dbg !4169
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4172, metadata !1727), !dbg !4173
  call void @llvm.dbg.declare(metadata i32* %header, metadata !4174, metadata !1727), !dbg !4175
  call void @llvm.dbg.declare(metadata i32* %slice_id, metadata !4176, metadata !1727), !dbg !4177
  %5 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4178
  %gb = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %5, i32 0, i32 9, !dbg !4179
  %call = call i32 @get_bits(%struct.GetBitContext* %gb, i32 8), !dbg !4180
  store i32 %call, i32* %header, align 4, !dbg !4181
  %6 = load i32, i32* %header, align 4, !dbg !4182
  %and = and i32 %6, 159, !dbg !4184
  %cmp = icmp ne i32 %and, 1, !dbg !4185
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !4186

land.lhs.true:                                    ; preds = %entry
  %7 = load i32, i32* %header, align 4, !dbg !4187
  %and2 = and i32 %7, 159, !dbg !4189
  %cmp3 = icmp ne i32 %and2, 2, !dbg !4190
  br i1 %cmp3, label %if.then, label %lor.lhs.false, !dbg !4191

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %8 = load i32, i32* %header, align 4, !dbg !4192
  %and4 = and i32 %8, 96, !dbg !4194
  %cmp5 = icmp eq i32 %and4, 0, !dbg !4195
  br i1 %cmp5, label %if.then, label %if.else, !dbg !4196

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4197
  %10 = bitcast %struct.AVCodecContext* %9 to i8*, !dbg !4197
  %11 = load i32, i32* %header, align 4, !dbg !4199
  call void (i8*, i32, i8*, ...) @av_log(i8* %10, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.15, i32 0, i32 0), i32 %11), !dbg !4200
  store i32 -1, i32* %retval, align 4, !dbg !4201
  br label %return, !dbg !4201

if.else:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i32* %slice_bits, metadata !4202, metadata !1727), !dbg !4204
  call void @llvm.dbg.declare(metadata i32* %slice_bytes, metadata !4205, metadata !1727), !dbg !4206
  call void @llvm.dbg.declare(metadata i32* %slice_length, metadata !4207, metadata !1727), !dbg !4208
  call void @llvm.dbg.declare(metadata i32* %length, metadata !4209, metadata !1727), !dbg !4210
  %12 = load i32, i32* %header, align 4, !dbg !4211
  %shr = ashr i32 %12, 5, !dbg !4212
  %and6 = and i32 %shr, 3, !dbg !4213
  store i32 %and6, i32* %length, align 4, !dbg !4210
  %13 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4214
  %gb7 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %13, i32 0, i32 9, !dbg !4215
  %14 = load i32, i32* %length, align 4, !dbg !4216
  %mul = mul nsw i32 8, %14, !dbg !4217
  %call8 = call i32 @show_bits(%struct.GetBitContext* %gb7, i32 %mul), !dbg !4218
  store i32 %call8, i32* %slice_length, align 4, !dbg !4219
  %15 = load i32, i32* %slice_length, align 4, !dbg !4220
  %mul9 = mul nsw i32 %15, 8, !dbg !4221
  store i32 %mul9, i32* %slice_bits, align 4, !dbg !4222
  %16 = load i32, i32* %slice_length, align 4, !dbg !4223
  %17 = load i32, i32* %length, align 4, !dbg !4224
  %add = add nsw i32 %16, %17, !dbg !4225
  %sub = sub nsw i32 %add, 1, !dbg !4226
  store i32 %sub, i32* %slice_bytes, align 4, !dbg !4227
  %18 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4228
  %gb10 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %18, i32 0, i32 9, !dbg !4229
  call void @skip_bits(%struct.GetBitContext* %gb10, i32 8), !dbg !4230
  %19 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4231
  %slice_buf = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %19, i32 0, i32 11, !dbg !4232
  %20 = bitcast i8** %slice_buf to i8*, !dbg !4233
  %21 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4234
  %slice_size = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %21, i32 0, i32 12, !dbg !4235
  %22 = load i32, i32* %slice_bytes, align 4, !dbg !4236
  %add11 = add nsw i32 %22, 64, !dbg !4237
  %conv = sext i32 %add11 to i64, !dbg !4236
  call void @av_fast_malloc(i8* %20, i32* %slice_size, i64 %conv), !dbg !4238
  %23 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4239
  %slice_buf12 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %23, i32 0, i32 11, !dbg !4241
  %24 = load i8*, i8** %slice_buf12, align 8, !dbg !4241
  %tobool = icmp ne i8* %24, null, !dbg !4239
  br i1 %tobool, label %if.end, label %if.then13, !dbg !4242

if.then13:                                        ; preds = %if.else
  store i32 -12, i32* %retval, align 4, !dbg !4243
  br label %return, !dbg !4243

if.end:                                           ; preds = %if.else
  %25 = load i32, i32* %slice_bytes, align 4, !dbg !4244
  %conv14 = sext i32 %25 to i64, !dbg !4244
  %mul15 = mul nsw i64 %conv14, 8, !dbg !4246
  %26 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4247
  %gb16 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %26, i32 0, i32 9, !dbg !4248
  %call17 = call i32 @get_bits_left(%struct.GetBitContext* %gb16), !dbg !4249
  %conv18 = sext i32 %call17 to i64, !dbg !4249
  %cmp19 = icmp sgt i64 %mul15, %conv18, !dbg !4250
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !4251

if.then21:                                        ; preds = %if.end
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4252
  %28 = bitcast %struct.AVCodecContext* %27 to i8*, !dbg !4252
  call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i32 0, i32 0)), !dbg !4254
  store i32 -1094995529, i32* %retval, align 4, !dbg !4255
  br label %return, !dbg !4255

if.end22:                                         ; preds = %if.end
  %29 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4256
  %slice_buf23 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %29, i32 0, i32 11, !dbg !4257
  %30 = load i8*, i8** %slice_buf23, align 8, !dbg !4257
  %31 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4258
  %gb24 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %31, i32 0, i32 9, !dbg !4259
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb24, i32 0, i32 0, !dbg !4260
  %32 = load i8*, i8** %buffer, align 8, !dbg !4260
  %33 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4261
  %gb25 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %33, i32 0, i32 9, !dbg !4262
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb25, i32 0, i32 2, !dbg !4263
  %34 = load i32, i32* %index, align 8, !dbg !4263
  %div = sdiv i32 %34, 8, !dbg !4264
  %idx.ext = sext i32 %div to i64, !dbg !4265
  %add.ptr = getelementptr inbounds i8, i8* %32, i64 %idx.ext, !dbg !4265
  %35 = load i32, i32* %slice_bytes, align 4, !dbg !4266
  %conv26 = sext i32 %35 to i64, !dbg !4266
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %add.ptr, i64 %conv26, i32 1, i1 false), !dbg !4267
  %36 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4268
  %watermark_key = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %36, i32 0, i32 16, !dbg !4270
  %37 = load i32, i32* %watermark_key, align 16, !dbg !4270
  %tobool27 = icmp ne i32 %37, 0, !dbg !4268
  br i1 %tobool27, label %if.then28, label %if.end35, !dbg !4271

if.then28:                                        ; preds = %if.end22
  call void @llvm.dbg.declare(metadata i32* %header29, metadata !4272, metadata !1727), !dbg !4274
  %38 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4275
  %slice_buf30 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %38, i32 0, i32 11, !dbg !4276
  %39 = load i8*, i8** %slice_buf30, align 8, !dbg !4276
  %arrayidx = getelementptr inbounds i8, i8* %39, i64 1, !dbg !4275
  %40 = bitcast i8* %arrayidx to %union.unaligned_32*, !dbg !4277
  %l = bitcast %union.unaligned_32* %40 to i32*, !dbg !4277
  %41 = load i32, i32* %l, align 1, !dbg !4277
  store i32 %41, i32* %header29, align 4, !dbg !4274
  %42 = load i32, i32* %header29, align 4, !dbg !4278
  %43 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4279
  %watermark_key31 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %43, i32 0, i32 16, !dbg !4280
  %44 = load i32, i32* %watermark_key31, align 16, !dbg !4280
  %xor = xor i32 %42, %44, !dbg !4281
  %45 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4282
  %slice_buf32 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %45, i32 0, i32 11, !dbg !4283
  %46 = load i8*, i8** %slice_buf32, align 8, !dbg !4283
  %arrayidx33 = getelementptr inbounds i8, i8* %46, i64 1, !dbg !4282
  %47 = bitcast i8* %arrayidx33 to %union.unaligned_32*, !dbg !4284
  %l34 = bitcast %union.unaligned_32* %47 to i32*, !dbg !4284
  store i32 %xor, i32* %l34, align 1, !dbg !4285
  br label %if.end35, !dbg !4286

if.end35:                                         ; preds = %if.then28, %if.end22
  %48 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4287
  %gb_slice = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %48, i32 0, i32 10, !dbg !4288
  %49 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4289
  %slice_buf36 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %49, i32 0, i32 11, !dbg !4290
  %50 = load i8*, i8** %slice_buf36, align 8, !dbg !4290
  %51 = load i32, i32* %slice_bits, align 4, !dbg !4291
  %call37 = call i32 @init_get_bits(%struct.GetBitContext* %gb_slice, i8* %50, i32 %51), !dbg !4292
  %52 = load i32, i32* %length, align 4, !dbg !4293
  %cmp38 = icmp sgt i32 %52, 0, !dbg !4295
  br i1 %cmp38, label %if.then40, label %if.end46, !dbg !4296

if.then40:                                        ; preds = %if.end35
  %53 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4297
  %slice_buf41 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %53, i32 0, i32 11, !dbg !4299
  %54 = load i8*, i8** %slice_buf41, align 8, !dbg !4299
  %55 = load i32, i32* %slice_length, align 4, !dbg !4300
  %idxprom = sext i32 %55 to i64, !dbg !4301
  %56 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4301
  %slice_buf42 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %56, i32 0, i32 11, !dbg !4302
  %57 = load i8*, i8** %slice_buf42, align 8, !dbg !4302
  %arrayidx43 = getelementptr inbounds i8, i8* %57, i64 %idxprom, !dbg !4301
  %58 = load i32, i32* %length, align 4, !dbg !4303
  %sub44 = sub nsw i32 %58, 1, !dbg !4304
  %conv45 = sext i32 %sub44 to i64, !dbg !4303
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %54, i8* %arrayidx43, i64 %conv45, i32 1, i1 false), !dbg !4305
  br label %if.end46, !dbg !4306

if.end46:                                         ; preds = %if.then40, %if.end35
  %59 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4307
  %gb47 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %59, i32 0, i32 9, !dbg !4308
  %60 = load i32, i32* %slice_bytes, align 4, !dbg !4309
  %mul48 = mul nsw i32 %60, 8, !dbg !4310
  call void @skip_bits_long(%struct.GetBitContext* %gb47, i32 %mul48), !dbg !4311
  br label %if.end49

if.end49:                                         ; preds = %if.end46
  %61 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4312
  %gb_slice50 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %61, i32 0, i32 10, !dbg !4314
  %call51 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %gb_slice50), !dbg !4315
  store i32 %call51, i32* %slice_id, align 4, !dbg !4316
  %cmp52 = icmp uge i32 %call51, 3, !dbg !4317
  br i1 %cmp52, label %if.then54, label %if.end56, !dbg !4318

if.then54:                                        ; preds = %if.end49
  %62 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4319
  %avctx55 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %62, i32 0, i32 0, !dbg !4321
  %63 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx55, align 16, !dbg !4321
  %64 = bitcast %struct.AVCodecContext* %63 to i8*, !dbg !4319
  %65 = load i32, i32* %slice_id, align 4, !dbg !4322
  call void (i8*, i32, i8*, ...) @av_log(i8* %64, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.17, i32 0, i32 0), i32 %65), !dbg !4323
  store i32 -1, i32* %retval, align 4, !dbg !4324
  br label %return, !dbg !4324

if.end56:                                         ; preds = %if.end49
  %66 = load i32, i32* %slice_id, align 4, !dbg !4325
  %idxprom57 = zext i32 %66 to i64, !dbg !4326
  %arrayidx58 = getelementptr inbounds [5 x i8], [5 x i8]* @ff_h264_golomb_to_pict_type, i64 0, i64 %idxprom57, !dbg !4326
  %67 = load i8, i8* %arrayidx58, align 1, !dbg !4326
  %conv59 = zext i8 %67 to i32, !dbg !4326
  %68 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4327
  %slice_type = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %68, i32 0, i32 32, !dbg !4328
  store i32 %conv59, i32* %slice_type, align 8, !dbg !4329
  %69 = load i32, i32* %header, align 4, !dbg !4330
  %and60 = and i32 %69, 159, !dbg !4332
  %cmp61 = icmp eq i32 %and60, 2, !dbg !4333
  br i1 %cmp61, label %if.then63, label %if.else72, !dbg !4334

if.then63:                                        ; preds = %if.end56
  %70 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4335
  %mb_num = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %70, i32 0, i32 40, !dbg !4337
  %71 = load i32, i32* %mb_num, align 8, !dbg !4337
  %cmp64 = icmp slt i32 %71, 64, !dbg !4338
  br i1 %cmp64, label %cond.true, label %cond.false, !dbg !4339

cond.true:                                        ; preds = %if.then63
  br label %cond.end, !dbg !4340

cond.false:                                       ; preds = %if.then63
  %72 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4342
  %mb_num66 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %72, i32 0, i32 40, !dbg !4344
  %73 = load i32, i32* %mb_num66, align 8, !dbg !4344
  %sub67 = sub nsw i32 %73, 1, !dbg !4345
  %or = or i32 %sub67, 1, !dbg !4346
  %74 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !4347
  %sub68 = sub nsw i32 31, %74, !dbg !4348
  %add69 = add nsw i32 1, %sub68, !dbg !4349
  br label %cond.end, !dbg !4350

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 6, %cond.true ], [ %add69, %cond.false ], !dbg !4351
  store i32 %cond, i32* %i, align 4, !dbg !4353
  %75 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4354
  %gb_slice70 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %75, i32 0, i32 10, !dbg !4355
  %76 = load i32, i32* %i, align 4, !dbg !4356
  %call71 = call i32 @get_bits(%struct.GetBitContext* %gb_slice70, i32 %76), !dbg !4357
  br label %if.end79, !dbg !4358

if.else72:                                        ; preds = %if.end56
  %77 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4359
  %gb_slice73 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %77, i32 0, i32 10, !dbg !4362
  %call74 = call i32 @get_bits1(%struct.GetBitContext* %gb_slice73), !dbg !4363
  %tobool75 = icmp ne i32 %call74, 0, !dbg !4363
  br i1 %tobool75, label %if.then76, label %if.end78, !dbg !4363

if.then76:                                        ; preds = %if.else72
  %78 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4364
  %avctx77 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %78, i32 0, i32 0, !dbg !4366
  %79 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx77, align 16, !dbg !4366
  %80 = bitcast %struct.AVCodecContext* %79 to i8*, !dbg !4364
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %80, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i32 0, i32 0)), !dbg !4367
  store i32 -1163346256, i32* %retval, align 4, !dbg !4368
  br label %return, !dbg !4368

if.end78:                                         ; preds = %if.else72
  br label %if.end79

if.end79:                                         ; preds = %if.end78, %cond.end
  %81 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4369
  %gb_slice80 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %81, i32 0, i32 10, !dbg !4370
  %call81 = call i32 @get_bits(%struct.GetBitContext* %gb_slice80, i32 8), !dbg !4371
  %82 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4372
  %slice_num = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %82, i32 0, i32 24, !dbg !4373
  store i32 %call81, i32* %slice_num, align 8, !dbg !4374
  %83 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4375
  %gb_slice82 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %83, i32 0, i32 10, !dbg !4376
  %call83 = call i32 @get_bits(%struct.GetBitContext* %gb_slice82, i32 5), !dbg !4377
  %84 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4378
  %qscale = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %84, i32 0, i32 25, !dbg !4379
  store i32 %call83, i32* %qscale, align 4, !dbg !4380
  %85 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4381
  %gb_slice84 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %85, i32 0, i32 10, !dbg !4382
  %call85 = call i32 @get_bits1(%struct.GetBitContext* %gb_slice84), !dbg !4383
  %86 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4384
  %adaptive_quant = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %86, i32 0, i32 19, !dbg !4385
  store i32 %call85, i32* %adaptive_quant, align 4, !dbg !4386
  %87 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4387
  %gb_slice86 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %87, i32 0, i32 10, !dbg !4388
  call void @skip_bits1(%struct.GetBitContext* %gb_slice86), !dbg !4389
  %88 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4390
  %has_watermark = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %88, i32 0, i32 15, !dbg !4392
  %89 = load i32, i32* %has_watermark, align 4, !dbg !4392
  %tobool87 = icmp ne i32 %89, 0, !dbg !4390
  br i1 %tobool87, label %if.then88, label %if.end90, !dbg !4393

if.then88:                                        ; preds = %if.end79
  %90 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4394
  %gb_slice89 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %90, i32 0, i32 10, !dbg !4395
  call void @skip_bits1(%struct.GetBitContext* %gb_slice89), !dbg !4396
  br label %if.end90, !dbg !4396

if.end90:                                         ; preds = %if.then88, %if.end79
  %91 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4397
  %gb_slice91 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %91, i32 0, i32 10, !dbg !4398
  call void @skip_bits1(%struct.GetBitContext* %gb_slice91), !dbg !4399
  %92 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4400
  %gb_slice92 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %92, i32 0, i32 10, !dbg !4401
  call void @skip_bits(%struct.GetBitContext* %gb_slice92, i32 2), !dbg !4402
  %93 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4403
  %gb_slice93 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %93, i32 0, i32 10, !dbg !4405
  %call94 = call i32 @skip_1stop_8data_bits(%struct.GetBitContext* %gb_slice93), !dbg !4406
  %cmp95 = icmp slt i32 %call94, 0, !dbg !4407
  br i1 %cmp95, label %if.then97, label %if.end98, !dbg !4408

if.then97:                                        ; preds = %if.end90
  store i32 -1094995529, i32* %retval, align 4, !dbg !4409
  br label %return, !dbg !4409

if.end98:                                         ; preds = %if.end90
  %94 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4410
  %mb_x = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %94, i32 0, i32 34, !dbg !4412
  %95 = load i32, i32* %mb_x, align 16, !dbg !4412
  %cmp99 = icmp sgt i32 %95, 0, !dbg !4413
  br i1 %cmp99, label %if.then101, label %if.end119, !dbg !4414

if.then101:                                       ; preds = %if.end98
  %96 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4415
  %intra4x4_pred_mode = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %96, i32 0, i32 46, !dbg !4417
  %97 = load i8*, i8** %intra4x4_pred_mode, align 8, !dbg !4417
  %98 = load i32, i32* %mb_xy, align 4, !dbg !4418
  %sub102 = sub nsw i32 %98, 1, !dbg !4419
  %idxprom103 = sext i32 %sub102 to i64, !dbg !4420
  %99 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4420
  %mb2br_xy = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %99, i32 0, i32 42, !dbg !4421
  %100 = load i32*, i32** %mb2br_xy, align 16, !dbg !4421
  %arrayidx104 = getelementptr inbounds i32, i32* %100, i64 %idxprom103, !dbg !4420
  %101 = load i32, i32* %arrayidx104, align 4, !dbg !4420
  %idx.ext105 = zext i32 %101 to i64, !dbg !4422
  %add.ptr106 = getelementptr inbounds i8, i8* %97, i64 %idx.ext105, !dbg !4422
  %add.ptr107 = getelementptr inbounds i8, i8* %add.ptr106, i64 3, !dbg !4423
  call void @llvm.memset.p0i8.i64(i8* %add.ptr107, i8 -1, i64 4, i32 1, i1 false), !dbg !4424
  %102 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4425
  %intra4x4_pred_mode108 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %102, i32 0, i32 46, !dbg !4426
  %103 = load i8*, i8** %intra4x4_pred_mode108, align 8, !dbg !4426
  %104 = load i32, i32* %mb_xy, align 4, !dbg !4427
  %105 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4428
  %mb_x109 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %105, i32 0, i32 34, !dbg !4429
  %106 = load i32, i32* %mb_x109, align 16, !dbg !4429
  %sub110 = sub nsw i32 %104, %106, !dbg !4430
  %idxprom111 = sext i32 %sub110 to i64, !dbg !4431
  %107 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4431
  %mb2br_xy112 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %107, i32 0, i32 42, !dbg !4432
  %108 = load i32*, i32** %mb2br_xy112, align 16, !dbg !4432
  %arrayidx113 = getelementptr inbounds i32, i32* %108, i64 %idxprom111, !dbg !4431
  %109 = load i32, i32* %arrayidx113, align 4, !dbg !4431
  %idx.ext114 = zext i32 %109 to i64, !dbg !4433
  %add.ptr115 = getelementptr inbounds i8, i8* %103, i64 %idx.ext114, !dbg !4433
  %110 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4434
  %mb_x116 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %110, i32 0, i32 34, !dbg !4435
  %111 = load i32, i32* %mb_x116, align 16, !dbg !4435
  %conv117 = sext i32 %111 to i64, !dbg !4434
  %mul118 = mul i64 8, %conv117, !dbg !4436
  call void @llvm.memset.p0i8.i64(i8* %add.ptr115, i8 -1, i64 %mul118, i32 1, i1 false), !dbg !4437
  br label %if.end119, !dbg !4438

if.end119:                                        ; preds = %if.then101, %if.end98
  %112 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4439
  %mb_y = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %112, i32 0, i32 35, !dbg !4441
  %113 = load i32, i32* %mb_y, align 4, !dbg !4441
  %cmp120 = icmp sgt i32 %113, 0, !dbg !4442
  br i1 %cmp120, label %if.then122, label %if.end149, !dbg !4443

if.then122:                                       ; preds = %if.end119
  %114 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4444
  %intra4x4_pred_mode123 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %114, i32 0, i32 46, !dbg !4446
  %115 = load i8*, i8** %intra4x4_pred_mode123, align 8, !dbg !4446
  %116 = load i32, i32* %mb_xy, align 4, !dbg !4447
  %117 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4448
  %mb_stride = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %117, i32 0, i32 39, !dbg !4449
  %118 = load i32, i32* %mb_stride, align 4, !dbg !4449
  %sub124 = sub nsw i32 %116, %118, !dbg !4450
  %idxprom125 = sext i32 %sub124 to i64, !dbg !4451
  %119 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4451
  %mb2br_xy126 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %119, i32 0, i32 42, !dbg !4452
  %120 = load i32*, i32** %mb2br_xy126, align 16, !dbg !4452
  %arrayidx127 = getelementptr inbounds i32, i32* %120, i64 %idxprom125, !dbg !4451
  %121 = load i32, i32* %arrayidx127, align 4, !dbg !4451
  %idx.ext128 = zext i32 %121 to i64, !dbg !4453
  %add.ptr129 = getelementptr inbounds i8, i8* %115, i64 %idx.ext128, !dbg !4453
  %122 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4454
  %mb_width = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %122, i32 0, i32 37, !dbg !4455
  %123 = load i32, i32* %mb_width, align 4, !dbg !4455
  %124 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4456
  %mb_x130 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %124, i32 0, i32 34, !dbg !4457
  %125 = load i32, i32* %mb_x130, align 16, !dbg !4457
  %sub131 = sub nsw i32 %123, %125, !dbg !4458
  %conv132 = sext i32 %sub131 to i64, !dbg !4459
  %mul133 = mul i64 8, %conv132, !dbg !4460
  call void @llvm.memset.p0i8.i64(i8* %add.ptr129, i8 -1, i64 %mul133, i32 1, i1 false), !dbg !4461
  %126 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4462
  %mb_x134 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %126, i32 0, i32 34, !dbg !4464
  %127 = load i32, i32* %mb_x134, align 16, !dbg !4464
  %cmp135 = icmp sgt i32 %127, 0, !dbg !4465
  br i1 %cmp135, label %if.then137, label %if.end148, !dbg !4466

if.then137:                                       ; preds = %if.then122
  %128 = load i32, i32* %mb_xy, align 4, !dbg !4467
  %129 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4468
  %mb_stride138 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %129, i32 0, i32 39, !dbg !4469
  %130 = load i32, i32* %mb_stride138, align 4, !dbg !4469
  %sub139 = sub nsw i32 %128, %130, !dbg !4470
  %sub140 = sub nsw i32 %sub139, 1, !dbg !4471
  %idxprom141 = sext i32 %sub140 to i64, !dbg !4472
  %131 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4472
  %mb2br_xy142 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %131, i32 0, i32 42, !dbg !4473
  %132 = load i32*, i32** %mb2br_xy142, align 16, !dbg !4473
  %arrayidx143 = getelementptr inbounds i32, i32* %132, i64 %idxprom141, !dbg !4472
  %133 = load i32, i32* %arrayidx143, align 4, !dbg !4472
  %add144 = add i32 %133, 3, !dbg !4474
  %idxprom145 = zext i32 %add144 to i64, !dbg !4475
  %134 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4475
  %intra4x4_pred_mode146 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %134, i32 0, i32 46, !dbg !4476
  %135 = load i8*, i8** %intra4x4_pred_mode146, align 8, !dbg !4476
  %arrayidx147 = getelementptr inbounds i8, i8* %135, i64 %idxprom145, !dbg !4475
  store i8 -1, i8* %arrayidx147, align 1, !dbg !4477
  br label %if.end148, !dbg !4475

if.end148:                                        ; preds = %if.then137, %if.then122
  br label %if.end149, !dbg !4478

if.end149:                                        ; preds = %if.end148, %if.end119
  store i32 0, i32* %retval, align 4, !dbg !4479
  br label %return, !dbg !4479

return:                                           ; preds = %if.end149, %if.then97, %if.then76, %if.then54, %if.then21, %if.then13, %if.then
  %136 = load i32, i32* %retval, align 4, !dbg !4480
  ret i32 %136, !dbg !4480
}

declare void @av_frame_unref(%struct.AVFrame*) #3

; Function Attrs: nounwind uwtable
define internal i32 @get_buffer(%struct.AVCodecContext* %avctx, %struct.SVQ3Frame* %pic) #1 !dbg !4481 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %pic.addr = alloca %struct.SVQ3Frame*, align 8
  %s = alloca %struct.SVQ3Context*, align 8
  %big_mb_num = alloca i32, align 4
  %mb_array_size = alloca i32, align 4
  %b4_stride = alloca i32, align 4
  %b4_array_size = alloca i32, align 4
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !4484, metadata !1727), !dbg !4485
  store %struct.SVQ3Frame* %pic, %struct.SVQ3Frame** %pic.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SVQ3Frame** %pic.addr, metadata !4486, metadata !1727), !dbg !4487
  call void @llvm.dbg.declare(metadata %struct.SVQ3Context** %s, metadata !4488, metadata !1727), !dbg !4489
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4490
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !4491
  %1 = load i8*, i8** %priv_data, align 8, !dbg !4491
  %2 = bitcast i8* %1 to %struct.SVQ3Context*, !dbg !4490
  store %struct.SVQ3Context* %2, %struct.SVQ3Context** %s, align 8, !dbg !4489
  call void @llvm.dbg.declare(metadata i32* %big_mb_num, metadata !4492, metadata !1727), !dbg !4493
  %3 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4494
  %mb_stride = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %3, i32 0, i32 39, !dbg !4495
  %4 = load i32, i32* %mb_stride, align 4, !dbg !4495
  %5 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4496
  %mb_height = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %5, i32 0, i32 38, !dbg !4497
  %6 = load i32, i32* %mb_height, align 16, !dbg !4497
  %add = add nsw i32 %6, 1, !dbg !4498
  %mul = mul nsw i32 %4, %add, !dbg !4499
  %add1 = add nsw i32 %mul, 1, !dbg !4500
  store i32 %add1, i32* %big_mb_num, align 4, !dbg !4493
  call void @llvm.dbg.declare(metadata i32* %mb_array_size, metadata !4501, metadata !1727), !dbg !4502
  %7 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4503
  %mb_stride2 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %7, i32 0, i32 39, !dbg !4504
  %8 = load i32, i32* %mb_stride2, align 4, !dbg !4504
  %9 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4505
  %mb_height3 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %9, i32 0, i32 38, !dbg !4506
  %10 = load i32, i32* %mb_height3, align 16, !dbg !4506
  %mul4 = mul nsw i32 %8, %10, !dbg !4507
  store i32 %mul4, i32* %mb_array_size, align 4, !dbg !4502
  call void @llvm.dbg.declare(metadata i32* %b4_stride, metadata !4508, metadata !1727), !dbg !4509
  %11 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4510
  %mb_width = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %11, i32 0, i32 37, !dbg !4511
  %12 = load i32, i32* %mb_width, align 4, !dbg !4511
  %mul5 = mul nsw i32 %12, 4, !dbg !4512
  %add6 = add nsw i32 %mul5, 1, !dbg !4513
  store i32 %add6, i32* %b4_stride, align 4, !dbg !4509
  call void @llvm.dbg.declare(metadata i32* %b4_array_size, metadata !4514, metadata !1727), !dbg !4515
  %13 = load i32, i32* %b4_stride, align 4, !dbg !4516
  %14 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4517
  %mb_height7 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %14, i32 0, i32 38, !dbg !4518
  %15 = load i32, i32* %mb_height7, align 16, !dbg !4518
  %mul8 = mul nsw i32 %13, %15, !dbg !4519
  %mul9 = mul nsw i32 %mul8, 4, !dbg !4520
  store i32 %mul9, i32* %b4_array_size, align 4, !dbg !4515
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4521, metadata !1727), !dbg !4522
  %16 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %pic.addr, align 8, !dbg !4523
  %motion_val_buf = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %16, i32 0, i32 1, !dbg !4525
  %arrayidx = getelementptr inbounds [2 x %struct.AVBufferRef*], [2 x %struct.AVBufferRef*]* %motion_val_buf, i64 0, i64 0, !dbg !4523
  %17 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx, align 8, !dbg !4523
  %tobool = icmp ne %struct.AVBufferRef* %17, null, !dbg !4523
  br i1 %tobool, label %if.end57, label %if.then, !dbg !4526

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4527, metadata !1727), !dbg !4529
  %18 = load i32, i32* %big_mb_num, align 4, !dbg !4530
  %19 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4531
  %mb_stride10 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %19, i32 0, i32 39, !dbg !4532
  %20 = load i32, i32* %mb_stride10, align 4, !dbg !4532
  %add11 = add nsw i32 %18, %20, !dbg !4533
  %conv = sext i32 %add11 to i64, !dbg !4534
  %mul12 = mul i64 %conv, 4, !dbg !4535
  %conv13 = trunc i64 %mul12 to i32, !dbg !4534
  %call = call %struct.AVBufferRef* @av_buffer_allocz(i32 %conv13), !dbg !4536
  %21 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %pic.addr, align 8, !dbg !4537
  %mb_type_buf = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %21, i32 0, i32 3, !dbg !4538
  store %struct.AVBufferRef* %call, %struct.AVBufferRef** %mb_type_buf, align 8, !dbg !4539
  %22 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %pic.addr, align 8, !dbg !4540
  %mb_type_buf14 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %22, i32 0, i32 3, !dbg !4542
  %23 = load %struct.AVBufferRef*, %struct.AVBufferRef** %mb_type_buf14, align 8, !dbg !4542
  %tobool15 = icmp ne %struct.AVBufferRef* %23, null, !dbg !4540
  br i1 %tobool15, label %if.end, label %if.then16, !dbg !4543

if.then16:                                        ; preds = %if.then
  store i32 -12, i32* %retval, align 4, !dbg !4544
  br label %return, !dbg !4544

if.end:                                           ; preds = %if.then
  %24 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %pic.addr, align 8, !dbg !4545
  %mb_type_buf17 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %24, i32 0, i32 3, !dbg !4546
  %25 = load %struct.AVBufferRef*, %struct.AVBufferRef** %mb_type_buf17, align 8, !dbg !4546
  %data = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %25, i32 0, i32 1, !dbg !4547
  %26 = load i8*, i8** %data, align 8, !dbg !4547
  %27 = bitcast i8* %26 to i32*, !dbg !4548
  %28 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4549
  %mb_stride18 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %28, i32 0, i32 39, !dbg !4550
  %29 = load i32, i32* %mb_stride18, align 4, !dbg !4550
  %mul19 = mul nsw i32 2, %29, !dbg !4551
  %idx.ext = sext i32 %mul19 to i64, !dbg !4552
  %add.ptr = getelementptr inbounds i32, i32* %27, i64 %idx.ext, !dbg !4552
  %add.ptr20 = getelementptr inbounds i32, i32* %add.ptr, i64 1, !dbg !4553
  %30 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %pic.addr, align 8, !dbg !4554
  %mb_type = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %30, i32 0, i32 4, !dbg !4555
  store i32* %add.ptr20, i32** %mb_type, align 8, !dbg !4556
  store i32 0, i32* %i, align 4, !dbg !4557
  br label %for.cond, !dbg !4559

for.cond:                                         ; preds = %for.inc, %if.end
  %31 = load i32, i32* %i, align 4, !dbg !4560
  %cmp = icmp slt i32 %31, 2, !dbg !4563
  br i1 %cmp, label %for.body, label %for.end, !dbg !4564

for.body:                                         ; preds = %for.cond
  %32 = load i32, i32* %b4_array_size, align 4, !dbg !4565
  %add22 = add nsw i32 %32, 4, !dbg !4567
  %mul23 = mul nsw i32 2, %add22, !dbg !4568
  %conv24 = sext i32 %mul23 to i64, !dbg !4569
  %mul25 = mul i64 %conv24, 2, !dbg !4570
  %conv26 = trunc i64 %mul25 to i32, !dbg !4569
  %call27 = call %struct.AVBufferRef* @av_buffer_allocz(i32 %conv26), !dbg !4571
  %33 = load i32, i32* %i, align 4, !dbg !4572
  %idxprom = sext i32 %33 to i64, !dbg !4573
  %34 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %pic.addr, align 8, !dbg !4573
  %motion_val_buf28 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %34, i32 0, i32 1, !dbg !4574
  %arrayidx29 = getelementptr inbounds [2 x %struct.AVBufferRef*], [2 x %struct.AVBufferRef*]* %motion_val_buf28, i64 0, i64 %idxprom, !dbg !4573
  store %struct.AVBufferRef* %call27, %struct.AVBufferRef** %arrayidx29, align 8, !dbg !4575
  %35 = load i32, i32* %mb_array_size, align 4, !dbg !4576
  %mul30 = mul nsw i32 4, %35, !dbg !4577
  %call31 = call %struct.AVBufferRef* @av_buffer_allocz(i32 %mul30), !dbg !4578
  %36 = load i32, i32* %i, align 4, !dbg !4579
  %idxprom32 = sext i32 %36 to i64, !dbg !4580
  %37 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %pic.addr, align 8, !dbg !4580
  %ref_index_buf = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %37, i32 0, i32 5, !dbg !4581
  %arrayidx33 = getelementptr inbounds [2 x %struct.AVBufferRef*], [2 x %struct.AVBufferRef*]* %ref_index_buf, i64 0, i64 %idxprom32, !dbg !4580
  store %struct.AVBufferRef* %call31, %struct.AVBufferRef** %arrayidx33, align 8, !dbg !4582
  %38 = load i32, i32* %i, align 4, !dbg !4583
  %idxprom34 = sext i32 %38 to i64, !dbg !4585
  %39 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %pic.addr, align 8, !dbg !4585
  %motion_val_buf35 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %39, i32 0, i32 1, !dbg !4586
  %arrayidx36 = getelementptr inbounds [2 x %struct.AVBufferRef*], [2 x %struct.AVBufferRef*]* %motion_val_buf35, i64 0, i64 %idxprom34, !dbg !4585
  %40 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx36, align 8, !dbg !4585
  %tobool37 = icmp ne %struct.AVBufferRef* %40, null, !dbg !4585
  br i1 %tobool37, label %lor.lhs.false, label %if.then42, !dbg !4587

lor.lhs.false:                                    ; preds = %for.body
  %41 = load i32, i32* %i, align 4, !dbg !4588
  %idxprom38 = sext i32 %41 to i64, !dbg !4590
  %42 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %pic.addr, align 8, !dbg !4590
  %ref_index_buf39 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %42, i32 0, i32 5, !dbg !4591
  %arrayidx40 = getelementptr inbounds [2 x %struct.AVBufferRef*], [2 x %struct.AVBufferRef*]* %ref_index_buf39, i64 0, i64 %idxprom38, !dbg !4590
  %43 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx40, align 8, !dbg !4590
  %tobool41 = icmp ne %struct.AVBufferRef* %43, null, !dbg !4590
  br i1 %tobool41, label %if.end43, label %if.then42, !dbg !4592

if.then42:                                        ; preds = %lor.lhs.false, %for.body
  store i32 -12, i32* %ret, align 4, !dbg !4593
  br label %fail, !dbg !4595

if.end43:                                         ; preds = %lor.lhs.false
  %44 = load i32, i32* %i, align 4, !dbg !4596
  %idxprom44 = sext i32 %44 to i64, !dbg !4597
  %45 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %pic.addr, align 8, !dbg !4597
  %motion_val_buf45 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %45, i32 0, i32 1, !dbg !4598
  %arrayidx46 = getelementptr inbounds [2 x %struct.AVBufferRef*], [2 x %struct.AVBufferRef*]* %motion_val_buf45, i64 0, i64 %idxprom44, !dbg !4597
  %46 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx46, align 8, !dbg !4597
  %data47 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %46, i32 0, i32 1, !dbg !4599
  %47 = load i8*, i8** %data47, align 8, !dbg !4599
  %48 = bitcast i8* %47 to [2 x i16]*, !dbg !4600
  %add.ptr48 = getelementptr inbounds [2 x i16], [2 x i16]* %48, i64 4, !dbg !4601
  %49 = load i32, i32* %i, align 4, !dbg !4602
  %idxprom49 = sext i32 %49 to i64, !dbg !4603
  %50 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %pic.addr, align 8, !dbg !4603
  %motion_val = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %50, i32 0, i32 2, !dbg !4604
  %arrayidx50 = getelementptr inbounds [2 x [2 x i16]*], [2 x [2 x i16]*]* %motion_val, i64 0, i64 %idxprom49, !dbg !4603
  store [2 x i16]* %add.ptr48, [2 x i16]** %arrayidx50, align 8, !dbg !4605
  %51 = load i32, i32* %i, align 4, !dbg !4606
  %idxprom51 = sext i32 %51 to i64, !dbg !4607
  %52 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %pic.addr, align 8, !dbg !4607
  %ref_index_buf52 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %52, i32 0, i32 5, !dbg !4608
  %arrayidx53 = getelementptr inbounds [2 x %struct.AVBufferRef*], [2 x %struct.AVBufferRef*]* %ref_index_buf52, i64 0, i64 %idxprom51, !dbg !4607
  %53 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx53, align 8, !dbg !4607
  %data54 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %53, i32 0, i32 1, !dbg !4609
  %54 = load i8*, i8** %data54, align 8, !dbg !4609
  %55 = load i32, i32* %i, align 4, !dbg !4610
  %idxprom55 = sext i32 %55 to i64, !dbg !4611
  %56 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %pic.addr, align 8, !dbg !4611
  %ref_index = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %56, i32 0, i32 6, !dbg !4612
  %arrayidx56 = getelementptr inbounds [2 x i8*], [2 x i8*]* %ref_index, i64 0, i64 %idxprom55, !dbg !4611
  store i8* %54, i8** %arrayidx56, align 8, !dbg !4613
  br label %for.inc, !dbg !4614

for.inc:                                          ; preds = %if.end43
  %57 = load i32, i32* %i, align 4, !dbg !4615
  %inc = add nsw i32 %57, 1, !dbg !4615
  store i32 %inc, i32* %i, align 4, !dbg !4615
  br label %for.cond, !dbg !4617, !llvm.loop !4618

for.end:                                          ; preds = %for.cond
  br label %if.end57, !dbg !4620

if.end57:                                         ; preds = %for.end, %entry
  %58 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4621
  %59 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %pic.addr, align 8, !dbg !4622
  %f = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %59, i32 0, i32 0, !dbg !4623
  %60 = load %struct.AVFrame*, %struct.AVFrame** %f, align 8, !dbg !4623
  %61 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4624
  %pict_type = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %61, i32 0, i32 31, !dbg !4625
  %62 = load i32, i32* %pict_type, align 4, !dbg !4625
  %cmp58 = icmp ne i32 %62, 3, !dbg !4626
  %cond = select i1 %cmp58, i32 1, i32 0, !dbg !4627
  %call60 = call i32 @ff_get_buffer(%struct.AVCodecContext* %58, %struct.AVFrame* %60, i32 %cond), !dbg !4628
  store i32 %call60, i32* %ret, align 4, !dbg !4629
  %63 = load i32, i32* %ret, align 4, !dbg !4630
  %cmp61 = icmp slt i32 %63, 0, !dbg !4632
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !4633

if.then63:                                        ; preds = %if.end57
  br label %fail, !dbg !4634

if.end64:                                         ; preds = %if.end57
  %64 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4635
  %edge_emu_buffer = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %64, i32 0, i32 50, !dbg !4637
  %65 = load i8*, i8** %edge_emu_buffer, align 16, !dbg !4637
  %tobool65 = icmp ne i8* %65, null, !dbg !4635
  br i1 %tobool65, label %if.end76, label %if.then66, !dbg !4638

if.then66:                                        ; preds = %if.end64
  %66 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %pic.addr, align 8, !dbg !4639
  %f67 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %66, i32 0, i32 0, !dbg !4641
  %67 = load %struct.AVFrame*, %struct.AVFrame** %f67, align 8, !dbg !4641
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %67, i32 0, i32 1, !dbg !4642
  %arrayidx68 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 0, !dbg !4639
  %68 = load i32, i32* %arrayidx68, align 8, !dbg !4639
  %conv69 = sext i32 %68 to i64, !dbg !4639
  %call70 = call i8* @av_mallocz_array(i64 %conv69, i64 17), !dbg !4643
  %69 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4644
  %edge_emu_buffer71 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %69, i32 0, i32 50, !dbg !4645
  store i8* %call70, i8** %edge_emu_buffer71, align 16, !dbg !4646
  %70 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s, align 8, !dbg !4647
  %edge_emu_buffer72 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %70, i32 0, i32 50, !dbg !4649
  %71 = load i8*, i8** %edge_emu_buffer72, align 16, !dbg !4649
  %tobool73 = icmp ne i8* %71, null, !dbg !4647
  br i1 %tobool73, label %if.end75, label %if.then74, !dbg !4650

if.then74:                                        ; preds = %if.then66
  store i32 -12, i32* %retval, align 4, !dbg !4651
  br label %return, !dbg !4651

if.end75:                                         ; preds = %if.then66
  br label %if.end76, !dbg !4652

if.end76:                                         ; preds = %if.end75, %if.end64
  store i32 0, i32* %retval, align 4, !dbg !4653
  br label %return, !dbg !4653

fail:                                             ; preds = %if.then63, %if.then42
  %72 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4654
  %73 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %pic.addr, align 8, !dbg !4655
  call void @free_picture(%struct.AVCodecContext* %72, %struct.SVQ3Frame* %73), !dbg !4656
  %74 = load i32, i32* %ret, align 4, !dbg !4657
  store i32 %74, i32* %retval, align 4, !dbg !4658
  br label %return, !dbg !4658

return:                                           ; preds = %fail, %if.end76, %if.then74, %if.then16
  %75 = load i32, i32* %retval, align 4, !dbg !4659
  ret i32 %75, !dbg !4659
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #6

declare signext i8 @av_get_picture_type_char(i32) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @show_bits(%struct.GetBitContext* %s, i32 %n) #5 !dbg !4660 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !1722, metadata !1727), !dbg !4661
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !4663, metadata !1727), !dbg !4664
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !4665, metadata !1727), !dbg !4666
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !4667, metadata !1727), !dbg !4668
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !4669, metadata !1727), !dbg !4670
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4671
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !4672
  %1 = load i32, i32* %index, align 8, !dbg !4672
  store i32 %1, i32* %re_index, align 4, !dbg !4670
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !4673, metadata !1727), !dbg !4674
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4675
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 0, !dbg !4676
  %3 = load i8*, i8** %buffer, align 8, !dbg !4676
  %4 = load i32, i32* %re_index, align 4, !dbg !4677
  %shr = lshr i32 %4, 3, !dbg !4678
  %idx.ext = zext i32 %shr to i64, !dbg !4679
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %idx.ext, !dbg !4679
  %5 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !4680
  %l = bitcast %union.unaligned_32* %5 to i32*, !dbg !4680
  %6 = load i32, i32* %l, align 1, !dbg !4680
  store i32 %6, i32* %x.addr.i, align 4, !dbg !4681
  %7 = load i32, i32* %x.addr.i, align 4, !dbg !4682
  %shl.i = shl i32 %7, 8, !dbg !4683
  %and.i = and i32 %shl.i, 65280, !dbg !4684
  %8 = load i32, i32* %x.addr.i, align 4, !dbg !4685
  %shr.i = lshr i32 %8, 8, !dbg !4686
  %and1.i = and i32 %shr.i, 255, !dbg !4687
  %or.i = or i32 %and.i, %and1.i, !dbg !4688
  %shl2.i = shl i32 %or.i, 16, !dbg !4689
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !4690
  %shr3.i = lshr i32 %9, 16, !dbg !4691
  %shl4.i = shl i32 %shr3.i, 8, !dbg !4692
  %and5.i = and i32 %shl4.i, 65280, !dbg !4693
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !4694
  %shr6.i = lshr i32 %10, 16, !dbg !4695
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !4696
  %and8.i = and i32 %shr7.i, 255, !dbg !4697
  %or9.i = or i32 %and5.i, %and8.i, !dbg !4698
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !4699
  %11 = load i32, i32* %re_index, align 4, !dbg !4700
  %and = and i32 %11, 7, !dbg !4701
  %shl = shl i32 %or10.i, %and, !dbg !4702
  store i32 %shl, i32* %re_cache, align 4, !dbg !4703
  %12 = load i32, i32* %re_cache, align 4, !dbg !4704
  %13 = load i32, i32* %n.addr, align 4, !dbg !4705
  %conv = trunc i32 %13 to i8, !dbg !4705
  %call3 = call i32 @NEG_USR32(i32 %12, i8 signext %conv), !dbg !4706
  store i32 %call3, i32* %tmp, align 4, !dbg !4707
  %14 = load i32, i32* %tmp, align 4, !dbg !4708
  ret i32 %14, !dbg !4709
}

declare void @avpriv_request_sample(i8*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal i32 @svq3_decode_mb(%struct.SVQ3Context* %s, i32 %mb_type) #1 !dbg !4710 {
entry:
  %d.addr.i907 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %d.addr.i907, metadata !4713, metadata !1727), !dbg !4714
  %d.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %d.addr.i, metadata !4713, metadata !1727), !dbg !4718
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.SVQ3Context*, align 8
  %mb_type.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %m = alloca i32, align 4
  %dir = alloca i32, align 4
  %mode = alloca i32, align 4
  %cbp = alloca i32, align 4
  %vlc = alloca i32, align 4
  %top = alloca i8*, align 8
  %left = alloca i8*, align 8
  %mb_xy = alloca i32, align 4
  %b_xy = alloca i32, align 4
  %i4x4 = alloca i8*, align 8
  %i4x4_cache = alloca i8*, align 8
  %index = alloca i32, align 4
  %type = alloca i32, align 4
  store %struct.SVQ3Context* %s, %struct.SVQ3Context** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SVQ3Context** %s.addr, metadata !4720, metadata !1727), !dbg !4721
  store i32 %mb_type, i32* %mb_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mb_type.addr, metadata !4722, metadata !1727), !dbg !4723
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4724, metadata !1727), !dbg !4725
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4726, metadata !1727), !dbg !4727
  call void @llvm.dbg.declare(metadata i32* %k, metadata !4728, metadata !1727), !dbg !4729
  call void @llvm.dbg.declare(metadata i32* %m, metadata !4730, metadata !1727), !dbg !4731
  call void @llvm.dbg.declare(metadata i32* %dir, metadata !4732, metadata !1727), !dbg !4733
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !4734, metadata !1727), !dbg !4735
  call void @llvm.dbg.declare(metadata i32* %cbp, metadata !4736, metadata !1727), !dbg !4737
  store i32 0, i32* %cbp, align 4, !dbg !4737
  call void @llvm.dbg.declare(metadata i32* %vlc, metadata !4738, metadata !1727), !dbg !4739
  call void @llvm.dbg.declare(metadata i8** %top, metadata !4740, metadata !1727), !dbg !4741
  call void @llvm.dbg.declare(metadata i8** %left, metadata !4742, metadata !1727), !dbg !4743
  call void @llvm.dbg.declare(metadata i32* %mb_xy, metadata !4744, metadata !1727), !dbg !4745
  %0 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4746
  %mb_xy1 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %0, i32 0, i32 36, !dbg !4747
  %1 = load i32, i32* %mb_xy1, align 8, !dbg !4747
  store i32 %1, i32* %mb_xy, align 4, !dbg !4745
  call void @llvm.dbg.declare(metadata i32* %b_xy, metadata !4748, metadata !1727), !dbg !4749
  %2 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4750
  %mb_x = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %2, i32 0, i32 34, !dbg !4751
  %3 = load i32, i32* %mb_x, align 16, !dbg !4751
  %mul = mul nsw i32 4, %3, !dbg !4752
  %4 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4753
  %mb_y = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %4, i32 0, i32 35, !dbg !4754
  %5 = load i32, i32* %mb_y, align 4, !dbg !4754
  %mul2 = mul nsw i32 4, %5, !dbg !4755
  %6 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4756
  %b_stride = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %6, i32 0, i32 41, !dbg !4757
  %7 = load i32, i32* %b_stride, align 4, !dbg !4757
  %mul3 = mul nsw i32 %mul2, %7, !dbg !4758
  %add = add nsw i32 %mul, %mul3, !dbg !4759
  store i32 %add, i32* %b_xy, align 4, !dbg !4749
  %8 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4760
  %mb_y4 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %8, i32 0, i32 35, !dbg !4761
  %9 = load i32, i32* %mb_y4, align 4, !dbg !4761
  %cmp = icmp eq i32 %9, 0, !dbg !4762
  %cond = select i1 %cmp, i32 13311, i32 65535, !dbg !4763
  %10 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4764
  %top_samples_available = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %10, i32 0, i32 47, !dbg !4765
  store i32 %cond, i32* %top_samples_available, align 16, !dbg !4766
  %11 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4767
  %mb_x5 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %11, i32 0, i32 34, !dbg !4768
  %12 = load i32, i32* %mb_x5, align 16, !dbg !4768
  %cmp6 = icmp eq i32 %12, 0, !dbg !4769
  %cond7 = select i1 %cmp6, i32 24415, i32 65535, !dbg !4770
  %13 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4771
  %left_samples_available = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %13, i32 0, i32 49, !dbg !4772
  store i32 %cond7, i32* %left_samples_available, align 8, !dbg !4773
  %14 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4774
  %topright_samples_available = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %14, i32 0, i32 48, !dbg !4775
  store i32 65535, i32* %topright_samples_available, align 4, !dbg !4776
  %15 = load i32, i32* %mb_type.addr, align 4, !dbg !4777
  %cmp8 = icmp eq i32 %15, 0, !dbg !4779
  br i1 %cmp8, label %if.then, label %if.else42, !dbg !4780

if.then:                                          ; preds = %entry
  %16 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4781
  %pict_type = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %16, i32 0, i32 31, !dbg !4784
  %17 = load i32, i32* %pict_type, align 4, !dbg !4784
  %cmp9 = icmp eq i32 %17, 2, !dbg !4785
  br i1 %cmp9, label %if.then12, label %lor.lhs.false, !dbg !4786

lor.lhs.false:                                    ; preds = %if.then
  %18 = load i32, i32* %mb_xy, align 4, !dbg !4787
  %idxprom = sext i32 %18 to i64, !dbg !4788
  %19 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4788
  %next_pic = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %19, i32 0, i32 7, !dbg !4789
  %20 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %next_pic, align 8, !dbg !4789
  %mb_type10 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %20, i32 0, i32 4, !dbg !4790
  %21 = load i32*, i32** %mb_type10, align 8, !dbg !4790
  %arrayidx = getelementptr inbounds i32, i32* %21, i64 %idxprom, !dbg !4788
  %22 = load i32, i32* %arrayidx, align 4, !dbg !4788
  %cmp11 = icmp eq i32 %22, -1, !dbg !4791
  br i1 %cmp11, label %if.then12, label %if.else, !dbg !4792

if.then12:                                        ; preds = %lor.lhs.false, %if.then
  %23 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4794
  %24 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4796
  %mb_x13 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %24, i32 0, i32 34, !dbg !4797
  %25 = load i32, i32* %mb_x13, align 16, !dbg !4797
  %mul14 = mul nsw i32 16, %25, !dbg !4798
  %26 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4799
  %mb_y15 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %26, i32 0, i32 35, !dbg !4800
  %27 = load i32, i32* %mb_y15, align 4, !dbg !4800
  %mul16 = mul nsw i32 16, %27, !dbg !4801
  call void @svq3_mc_dir_part(%struct.SVQ3Context* %23, i32 %mul14, i32 %mul16, i32 16, i32 16, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0), !dbg !4802
  %28 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4803
  %pict_type17 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %28, i32 0, i32 31, !dbg !4805
  %29 = load i32, i32* %pict_type17, align 4, !dbg !4805
  %cmp18 = icmp eq i32 %29, 3, !dbg !4806
  br i1 %cmp18, label %if.then19, label %if.end, !dbg !4807

if.then19:                                        ; preds = %if.then12
  %30 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4808
  %31 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4809
  %mb_x20 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %31, i32 0, i32 34, !dbg !4810
  %32 = load i32, i32* %mb_x20, align 16, !dbg !4810
  %mul21 = mul nsw i32 16, %32, !dbg !4811
  %33 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4812
  %mb_y22 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %33, i32 0, i32 35, !dbg !4813
  %34 = load i32, i32* %mb_y22, align 4, !dbg !4813
  %mul23 = mul nsw i32 16, %34, !dbg !4814
  call void @svq3_mc_dir_part(%struct.SVQ3Context* %30, i32 %mul21, i32 %mul23, i32 16, i32 16, i32 0, i32 0, i32 0, i32 0, i32 1, i32 1), !dbg !4815
  br label %if.end, !dbg !4815

if.end:                                           ; preds = %if.then19, %if.then12
  store i32 2048, i32* %mb_type.addr, align 4, !dbg !4816
  br label %if.end41, !dbg !4817

if.else:                                          ; preds = %lor.lhs.false
  %35 = load i32, i32* %mb_xy, align 4, !dbg !4818
  %idxprom24 = sext i32 %35 to i64, !dbg !4820
  %36 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4820
  %next_pic25 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %36, i32 0, i32 7, !dbg !4821
  %37 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %next_pic25, align 8, !dbg !4821
  %mb_type26 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %37, i32 0, i32 4, !dbg !4822
  %38 = load i32*, i32** %mb_type26, align 8, !dbg !4822
  %arrayidx27 = getelementptr inbounds i32, i32* %38, i64 %idxprom24, !dbg !4820
  %39 = load i32, i32* %arrayidx27, align 4, !dbg !4820
  %cmp28 = icmp ugt i32 %39, 6, !dbg !4823
  br i1 %cmp28, label %cond.true, label %cond.false, !dbg !4824

cond.true:                                        ; preds = %if.else
  br label %cond.end, !dbg !4825

cond.false:                                       ; preds = %if.else
  %40 = load i32, i32* %mb_xy, align 4, !dbg !4827
  %idxprom29 = sext i32 %40 to i64, !dbg !4829
  %41 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4829
  %next_pic30 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %41, i32 0, i32 7, !dbg !4830
  %42 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %next_pic30, align 8, !dbg !4830
  %mb_type31 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %42, i32 0, i32 4, !dbg !4831
  %43 = load i32*, i32** %mb_type31, align 8, !dbg !4831
  %arrayidx32 = getelementptr inbounds i32, i32* %43, i64 %idxprom29, !dbg !4829
  %44 = load i32, i32* %arrayidx32, align 4, !dbg !4829
  br label %cond.end, !dbg !4832

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond33 = phi i32 [ 6, %cond.true ], [ %44, %cond.false ], !dbg !4833
  store i32 %cond33, i32* %mb_type.addr, align 4, !dbg !4835
  %45 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4836
  %46 = load i32, i32* %mb_type.addr, align 4, !dbg !4838
  %call = call i32 @svq3_mc_dir(%struct.SVQ3Context* %45, i32 %46, i32 4, i32 0, i32 0), !dbg !4839
  %cmp34 = icmp slt i32 %call, 0, !dbg !4840
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !4841

if.then35:                                        ; preds = %cond.end
  store i32 -1, i32* %retval, align 4, !dbg !4842
  br label %return, !dbg !4842

if.end36:                                         ; preds = %cond.end
  %47 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4843
  %48 = load i32, i32* %mb_type.addr, align 4, !dbg !4845
  %call37 = call i32 @svq3_mc_dir(%struct.SVQ3Context* %47, i32 %48, i32 4, i32 1, i32 1), !dbg !4846
  %cmp38 = icmp slt i32 %call37, 0, !dbg !4847
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !4848

if.then39:                                        ; preds = %if.end36
  store i32 -1, i32* %retval, align 4, !dbg !4849
  br label %return, !dbg !4849

if.end40:                                         ; preds = %if.end36
  store i32 8, i32* %mb_type.addr, align 4, !dbg !4850
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.end
  br label %if.end638, !dbg !4851

if.else42:                                        ; preds = %entry
  %49 = load i32, i32* %mb_type.addr, align 4, !dbg !4852
  %cmp43 = icmp ult i32 %49, 8, !dbg !4855
  br i1 %cmp43, label %if.then44, label %if.else368, !dbg !4852

if.then44:                                        ; preds = %if.else42
  %50 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4856
  %thirdpel_flag = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %50, i32 0, i32 14, !dbg !4859
  %51 = load i32, i32* %thirdpel_flag, align 8, !dbg !4859
  %tobool = icmp ne i32 %51, 0, !dbg !4856
  br i1 %tobool, label %land.lhs.true, label %if.else49, !dbg !4860

land.lhs.true:                                    ; preds = %if.then44
  %52 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4861
  %halfpel_flag = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %52, i32 0, i32 13, !dbg !4863
  %53 = load i32, i32* %halfpel_flag, align 4, !dbg !4863
  %54 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4864
  %gb_slice = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %54, i32 0, i32 10, !dbg !4865
  %call45 = call i32 @get_bits1(%struct.GetBitContext* %gb_slice), !dbg !4866
  %tobool46 = icmp ne i32 %call45, 0, !dbg !4867
  %lnot = xor i1 %tobool46, true, !dbg !4867
  %lnot.ext = zext i1 %lnot to i32, !dbg !4867
  %cmp47 = icmp eq i32 %53, %lnot.ext, !dbg !4868
  br i1 %cmp47, label %if.then48, label %if.else49, !dbg !4869

if.then48:                                        ; preds = %land.lhs.true
  store i32 3, i32* %mode, align 4, !dbg !4870
  br label %if.end63, !dbg !4871

if.else49:                                        ; preds = %land.lhs.true, %if.then44
  %55 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4872
  %halfpel_flag50 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %55, i32 0, i32 13, !dbg !4874
  %56 = load i32, i32* %halfpel_flag50, align 4, !dbg !4874
  %tobool51 = icmp ne i32 %56, 0, !dbg !4872
  br i1 %tobool51, label %land.lhs.true52, label %if.else61, !dbg !4875

land.lhs.true52:                                  ; preds = %if.else49
  %57 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4876
  %thirdpel_flag53 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %57, i32 0, i32 14, !dbg !4877
  %58 = load i32, i32* %thirdpel_flag53, align 8, !dbg !4877
  %59 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4878
  %gb_slice54 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %59, i32 0, i32 10, !dbg !4879
  %call55 = call i32 @get_bits1(%struct.GetBitContext* %gb_slice54), !dbg !4880
  %tobool56 = icmp ne i32 %call55, 0, !dbg !4881
  %lnot57 = xor i1 %tobool56, true, !dbg !4881
  %lnot.ext58 = zext i1 %lnot57 to i32, !dbg !4881
  %cmp59 = icmp eq i32 %58, %lnot.ext58, !dbg !4882
  br i1 %cmp59, label %if.then60, label %if.else61, !dbg !4883

if.then60:                                        ; preds = %land.lhs.true52
  store i32 2, i32* %mode, align 4, !dbg !4884
  br label %if.end62, !dbg !4885

if.else61:                                        ; preds = %land.lhs.true52, %if.else49
  store i32 1, i32* %mode, align 4, !dbg !4886
  br label %if.end62

if.end62:                                         ; preds = %if.else61, %if.then60
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then48
  store i32 0, i32* %m, align 4, !dbg !4887
  br label %for.cond, !dbg !4889

for.cond:                                         ; preds = %for.inc299, %if.end63
  %60 = load i32, i32* %m, align 4, !dbg !4890
  %cmp64 = icmp slt i32 %60, 2, !dbg !4893
  br i1 %cmp64, label %for.body, label %for.end301, !dbg !4894

for.body:                                         ; preds = %for.cond
  %61 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4895
  %mb_x65 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %61, i32 0, i32 34, !dbg !4898
  %62 = load i32, i32* %mb_x65, align 16, !dbg !4898
  %cmp66 = icmp sgt i32 %62, 0, !dbg !4899
  br i1 %cmp66, label %land.lhs.true67, label %if.else98, !dbg !4900

land.lhs.true67:                                  ; preds = %for.body
  %63 = load i32, i32* %mb_xy, align 4, !dbg !4901
  %sub = sub nsw i32 %63, 1, !dbg !4903
  %idxprom68 = sext i32 %sub to i64, !dbg !4904
  %64 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4904
  %mb2br_xy = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %64, i32 0, i32 42, !dbg !4905
  %65 = load i32*, i32** %mb2br_xy, align 16, !dbg !4905
  %arrayidx69 = getelementptr inbounds i32, i32* %65, i64 %idxprom68, !dbg !4904
  %66 = load i32, i32* %arrayidx69, align 4, !dbg !4904
  %add70 = add i32 %66, 6, !dbg !4906
  %idxprom71 = zext i32 %add70 to i64, !dbg !4907
  %67 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4907
  %intra4x4_pred_mode = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %67, i32 0, i32 46, !dbg !4908
  %68 = load i8*, i8** %intra4x4_pred_mode, align 8, !dbg !4908
  %arrayidx72 = getelementptr inbounds i8, i8* %68, i64 %idxprom71, !dbg !4907
  %69 = load i8, i8* %arrayidx72, align 1, !dbg !4907
  %conv = sext i8 %69 to i32, !dbg !4907
  %cmp73 = icmp ne i32 %conv, -1, !dbg !4909
  br i1 %cmp73, label %if.then75, label %if.else98, !dbg !4910

if.then75:                                        ; preds = %land.lhs.true67
  store i32 0, i32* %i, align 4, !dbg !4911
  br label %for.cond76, !dbg !4914

for.cond76:                                       ; preds = %for.inc, %if.then75
  %70 = load i32, i32* %i, align 4, !dbg !4915
  %cmp77 = icmp slt i32 %70, 4, !dbg !4918
  br i1 %cmp77, label %for.body79, label %for.end, !dbg !4919

for.body79:                                       ; preds = %for.cond76
  %71 = load i32, i32* %b_xy, align 4, !dbg !4920
  %sub80 = sub nsw i32 %71, 1, !dbg !4921
  %72 = load i32, i32* %i, align 4, !dbg !4922
  %73 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4923
  %b_stride81 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %73, i32 0, i32 41, !dbg !4924
  %74 = load i32, i32* %b_stride81, align 4, !dbg !4924
  %mul82 = mul nsw i32 %72, %74, !dbg !4925
  %add83 = add nsw i32 %sub80, %mul82, !dbg !4926
  %idxprom84 = sext i32 %add83 to i64, !dbg !4927
  %75 = load i32, i32* %m, align 4, !dbg !4928
  %idxprom85 = sext i32 %75 to i64, !dbg !4927
  %76 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4927
  %cur_pic = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %76, i32 0, i32 6, !dbg !4929
  %77 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic, align 16, !dbg !4929
  %motion_val = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %77, i32 0, i32 2, !dbg !4930
  %arrayidx86 = getelementptr inbounds [2 x [2 x i16]*], [2 x [2 x i16]*]* %motion_val, i64 0, i64 %idxprom85, !dbg !4927
  %78 = load [2 x i16]*, [2 x i16]** %arrayidx86, align 8, !dbg !4927
  %arrayidx87 = getelementptr inbounds [2 x i16], [2 x i16]* %78, i64 %idxprom84, !dbg !4927
  %arraydecay = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx87, i32 0, i32 0, !dbg !4931
  %79 = bitcast i16* %arraydecay to %union.av_alias32*, !dbg !4931
  %u32 = bitcast %union.av_alias32* %79 to i32*, !dbg !4931
  %80 = load i32, i32* %u32, align 4, !dbg !4931
  %81 = load i8, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @scan8, i64 0, i64 0), align 16, !dbg !4932
  %conv88 = zext i8 %81 to i32, !dbg !4932
  %sub89 = sub nsw i32 %conv88, 1, !dbg !4933
  %82 = load i32, i32* %i, align 4, !dbg !4934
  %mul90 = mul nsw i32 %82, 8, !dbg !4935
  %add91 = add nsw i32 %sub89, %mul90, !dbg !4936
  %idxprom92 = sext i32 %add91 to i64, !dbg !4937
  %83 = load i32, i32* %m, align 4, !dbg !4938
  %idxprom93 = sext i32 %83 to i64, !dbg !4937
  %84 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4937
  %mv_cache = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %84, i32 0, i32 52, !dbg !4939
  %arrayidx94 = getelementptr inbounds [2 x [40 x [2 x i16]]], [2 x [40 x [2 x i16]]]* %mv_cache, i64 0, i64 %idxprom93, !dbg !4937
  %arrayidx95 = getelementptr inbounds [40 x [2 x i16]], [40 x [2 x i16]]* %arrayidx94, i64 0, i64 %idxprom92, !dbg !4937
  %arraydecay96 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx95, i32 0, i32 0, !dbg !4940
  %85 = bitcast i16* %arraydecay96 to %union.av_alias32*, !dbg !4940
  %u3297 = bitcast %union.av_alias32* %85 to i32*, !dbg !4940
  store i32 %80, i32* %u3297, align 4, !dbg !4941
  br label %for.inc, !dbg !4942

for.inc:                                          ; preds = %for.body79
  %86 = load i32, i32* %i, align 4, !dbg !4943
  %inc = add nsw i32 %86, 1, !dbg !4943
  store i32 %inc, i32* %i, align 4, !dbg !4943
  br label %for.cond76, !dbg !4945, !llvm.loop !4946

for.end:                                          ; preds = %for.cond76
  br label %if.end117, !dbg !4948

if.else98:                                        ; preds = %land.lhs.true67, %for.body
  store i32 0, i32* %i, align 4, !dbg !4949
  br label %for.cond99, !dbg !4952

for.cond99:                                       ; preds = %for.inc114, %if.else98
  %87 = load i32, i32* %i, align 4, !dbg !4953
  %cmp100 = icmp slt i32 %87, 4, !dbg !4956
  br i1 %cmp100, label %for.body102, label %for.end116, !dbg !4957

for.body102:                                      ; preds = %for.cond99
  %88 = load i8, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @scan8, i64 0, i64 0), align 16, !dbg !4958
  %conv103 = zext i8 %88 to i32, !dbg !4958
  %sub104 = sub nsw i32 %conv103, 1, !dbg !4959
  %89 = load i32, i32* %i, align 4, !dbg !4960
  %mul105 = mul nsw i32 %89, 8, !dbg !4961
  %add106 = add nsw i32 %sub104, %mul105, !dbg !4962
  %idxprom107 = sext i32 %add106 to i64, !dbg !4963
  %90 = load i32, i32* %m, align 4, !dbg !4964
  %idxprom108 = sext i32 %90 to i64, !dbg !4963
  %91 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4963
  %mv_cache109 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %91, i32 0, i32 52, !dbg !4965
  %arrayidx110 = getelementptr inbounds [2 x [40 x [2 x i16]]], [2 x [40 x [2 x i16]]]* %mv_cache109, i64 0, i64 %idxprom108, !dbg !4963
  %arrayidx111 = getelementptr inbounds [40 x [2 x i16]], [40 x [2 x i16]]* %arrayidx110, i64 0, i64 %idxprom107, !dbg !4963
  %arraydecay112 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx111, i32 0, i32 0, !dbg !4966
  %92 = bitcast i16* %arraydecay112 to %union.av_alias32*, !dbg !4966
  %u32113 = bitcast %union.av_alias32* %92 to i32*, !dbg !4966
  store i32 0, i32* %u32113, align 4, !dbg !4967
  br label %for.inc114, !dbg !4968

for.inc114:                                       ; preds = %for.body102
  %93 = load i32, i32* %i, align 4, !dbg !4969
  %inc115 = add nsw i32 %93, 1, !dbg !4969
  store i32 %inc115, i32* %i, align 4, !dbg !4969
  br label %for.cond99, !dbg !4971, !llvm.loop !4972

for.end116:                                       ; preds = %for.cond99
  br label %if.end117

if.end117:                                        ; preds = %for.end116, %for.end
  %94 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4974
  %mb_y118 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %94, i32 0, i32 35, !dbg !4976
  %95 = load i32, i32* %mb_y118, align 4, !dbg !4976
  %cmp119 = icmp sgt i32 %95, 0, !dbg !4977
  br i1 %cmp119, label %if.then121, label %if.else284, !dbg !4978

if.then121:                                       ; preds = %if.end117
  %96 = load i8, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @scan8, i64 0, i64 0), align 16, !dbg !4979
  %conv122 = zext i8 %96 to i32, !dbg !4979
  %sub123 = sub nsw i32 %conv122, 8, !dbg !4981
  %idxprom124 = sext i32 %sub123 to i64, !dbg !4982
  %97 = load i32, i32* %m, align 4, !dbg !4983
  %idxprom125 = sext i32 %97 to i64, !dbg !4982
  %98 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4982
  %mv_cache126 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %98, i32 0, i32 52, !dbg !4984
  %arrayidx127 = getelementptr inbounds [2 x [40 x [2 x i16]]], [2 x [40 x [2 x i16]]]* %mv_cache126, i64 0, i64 %idxprom125, !dbg !4982
  %arrayidx128 = getelementptr inbounds [40 x [2 x i16]], [40 x [2 x i16]]* %arrayidx127, i64 0, i64 %idxprom124, !dbg !4982
  %arraydecay129 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx128, i32 0, i32 0, !dbg !4985
  %99 = bitcast i16* %arraydecay129 to i8*, !dbg !4985
  %100 = load i32, i32* %b_xy, align 4, !dbg !4986
  %101 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4987
  %b_stride130 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %101, i32 0, i32 41, !dbg !4988
  %102 = load i32, i32* %b_stride130, align 4, !dbg !4988
  %sub131 = sub nsw i32 %100, %102, !dbg !4989
  %idxprom132 = sext i32 %sub131 to i64, !dbg !4990
  %103 = load i32, i32* %m, align 4, !dbg !4991
  %idxprom133 = sext i32 %103 to i64, !dbg !4990
  %104 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4990
  %cur_pic134 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %104, i32 0, i32 6, !dbg !4992
  %105 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic134, align 16, !dbg !4992
  %motion_val135 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %105, i32 0, i32 2, !dbg !4993
  %arrayidx136 = getelementptr inbounds [2 x [2 x i16]*], [2 x [2 x i16]*]* %motion_val135, i64 0, i64 %idxprom133, !dbg !4990
  %106 = load [2 x i16]*, [2 x i16]** %arrayidx136, align 8, !dbg !4990
  %arrayidx137 = getelementptr inbounds [2 x i16], [2 x i16]* %106, i64 %idxprom132, !dbg !4990
  %arraydecay138 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx137, i32 0, i32 0, !dbg !4985
  %107 = bitcast i16* %arraydecay138 to i8*, !dbg !4985
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %99, i8* %107, i64 16, i32 2, i1 false), !dbg !4985
  %108 = load i8, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @scan8, i64 0, i64 0), align 16, !dbg !4994
  %conv139 = zext i8 %108 to i32, !dbg !4994
  %sub140 = sub nsw i32 %conv139, 8, !dbg !4995
  %idxprom141 = sext i32 %sub140 to i64, !dbg !4996
  %109 = load i32, i32* %m, align 4, !dbg !4997
  %idxprom142 = sext i32 %109 to i64, !dbg !4996
  %110 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !4996
  %ref_cache = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %110, i32 0, i32 53, !dbg !4998
  %arrayidx143 = getelementptr inbounds [2 x [40 x i8]], [2 x [40 x i8]]* %ref_cache, i64 0, i64 %idxprom142, !dbg !4996
  %arrayidx144 = getelementptr inbounds [40 x i8], [40 x i8]* %arrayidx143, i64 0, i64 %idxprom141, !dbg !4996
  %111 = load i32, i32* %mb_xy, align 4, !dbg !4999
  %112 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5000
  %mb_stride = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %112, i32 0, i32 39, !dbg !5001
  %113 = load i32, i32* %mb_stride, align 4, !dbg !5001
  %sub145 = sub nsw i32 %111, %113, !dbg !5002
  %idxprom146 = sext i32 %sub145 to i64, !dbg !5003
  %114 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5003
  %mb2br_xy147 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %114, i32 0, i32 42, !dbg !5004
  %115 = load i32*, i32** %mb2br_xy147, align 16, !dbg !5004
  %arrayidx148 = getelementptr inbounds i32, i32* %115, i64 %idxprom146, !dbg !5003
  %116 = load i32, i32* %arrayidx148, align 4, !dbg !5003
  %idxprom149 = zext i32 %116 to i64, !dbg !5005
  %117 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5005
  %intra4x4_pred_mode150 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %117, i32 0, i32 46, !dbg !5006
  %118 = load i8*, i8** %intra4x4_pred_mode150, align 8, !dbg !5006
  %arrayidx151 = getelementptr inbounds i8, i8* %118, i64 %idxprom149, !dbg !5005
  %119 = load i8, i8* %arrayidx151, align 1, !dbg !5005
  %conv152 = sext i8 %119 to i32, !dbg !5005
  %cmp153 = icmp eq i32 %conv152, -1, !dbg !5007
  %cond155 = select i1 %cmp153, i32 -2, i32 1, !dbg !5008
  %120 = trunc i32 %cond155 to i8, !dbg !5009
  call void @llvm.memset.p0i8.i64(i8* %arrayidx144, i8 %120, i64 4, i32 1, i1 false), !dbg !5009
  %121 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5010
  %mb_x156 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %121, i32 0, i32 34, !dbg !5012
  %122 = load i32, i32* %mb_x156, align 16, !dbg !5012
  %123 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5013
  %mb_width = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %123, i32 0, i32 37, !dbg !5014
  %124 = load i32, i32* %mb_width, align 4, !dbg !5014
  %sub157 = sub nsw i32 %124, 1, !dbg !5015
  %cmp158 = icmp slt i32 %122, %sub157, !dbg !5016
  br i1 %cmp158, label %if.then160, label %if.else216, !dbg !5017

if.then160:                                       ; preds = %if.then121
  %125 = load i32, i32* %b_xy, align 4, !dbg !5018
  %126 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5020
  %b_stride161 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %126, i32 0, i32 41, !dbg !5021
  %127 = load i32, i32* %b_stride161, align 4, !dbg !5021
  %sub162 = sub nsw i32 %125, %127, !dbg !5022
  %add163 = add nsw i32 %sub162, 4, !dbg !5023
  %idxprom164 = sext i32 %add163 to i64, !dbg !5024
  %128 = load i32, i32* %m, align 4, !dbg !5025
  %idxprom165 = sext i32 %128 to i64, !dbg !5024
  %129 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5024
  %cur_pic166 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %129, i32 0, i32 6, !dbg !5026
  %130 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic166, align 16, !dbg !5026
  %motion_val167 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %130, i32 0, i32 2, !dbg !5027
  %arrayidx168 = getelementptr inbounds [2 x [2 x i16]*], [2 x [2 x i16]*]* %motion_val167, i64 0, i64 %idxprom165, !dbg !5024
  %131 = load [2 x i16]*, [2 x i16]** %arrayidx168, align 8, !dbg !5024
  %arrayidx169 = getelementptr inbounds [2 x i16], [2 x i16]* %131, i64 %idxprom164, !dbg !5024
  %arraydecay170 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx169, i32 0, i32 0, !dbg !5028
  %132 = bitcast i16* %arraydecay170 to %union.av_alias32*, !dbg !5028
  %u32171 = bitcast %union.av_alias32* %132 to i32*, !dbg !5028
  %133 = load i32, i32* %u32171, align 4, !dbg !5028
  %134 = load i8, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @scan8, i64 0, i64 0), align 16, !dbg !5029
  %conv172 = zext i8 %134 to i32, !dbg !5029
  %add173 = add nsw i32 %conv172, 4, !dbg !5030
  %sub174 = sub nsw i32 %add173, 8, !dbg !5031
  %idxprom175 = sext i32 %sub174 to i64, !dbg !5032
  %135 = load i32, i32* %m, align 4, !dbg !5033
  %idxprom176 = sext i32 %135 to i64, !dbg !5032
  %136 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5032
  %mv_cache177 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %136, i32 0, i32 52, !dbg !5034
  %arrayidx178 = getelementptr inbounds [2 x [40 x [2 x i16]]], [2 x [40 x [2 x i16]]]* %mv_cache177, i64 0, i64 %idxprom176, !dbg !5032
  %arrayidx179 = getelementptr inbounds [40 x [2 x i16]], [40 x [2 x i16]]* %arrayidx178, i64 0, i64 %idxprom175, !dbg !5032
  %arraydecay180 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx179, i32 0, i32 0, !dbg !5035
  %137 = bitcast i16* %arraydecay180 to %union.av_alias32*, !dbg !5035
  %u32181 = bitcast %union.av_alias32* %137 to i32*, !dbg !5035
  store i32 %133, i32* %u32181, align 4, !dbg !5036
  %138 = load i32, i32* %mb_xy, align 4, !dbg !5037
  %139 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5038
  %mb_stride182 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %139, i32 0, i32 39, !dbg !5039
  %140 = load i32, i32* %mb_stride182, align 4, !dbg !5039
  %sub183 = sub nsw i32 %138, %140, !dbg !5040
  %add184 = add nsw i32 %sub183, 1, !dbg !5041
  %idxprom185 = sext i32 %add184 to i64, !dbg !5042
  %141 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5042
  %mb2br_xy186 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %141, i32 0, i32 42, !dbg !5043
  %142 = load i32*, i32** %mb2br_xy186, align 16, !dbg !5043
  %arrayidx187 = getelementptr inbounds i32, i32* %142, i64 %idxprom185, !dbg !5042
  %143 = load i32, i32* %arrayidx187, align 4, !dbg !5042
  %add188 = add i32 %143, 6, !dbg !5044
  %idxprom189 = zext i32 %add188 to i64, !dbg !5045
  %144 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5045
  %intra4x4_pred_mode190 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %144, i32 0, i32 46, !dbg !5046
  %145 = load i8*, i8** %intra4x4_pred_mode190, align 8, !dbg !5046
  %arrayidx191 = getelementptr inbounds i8, i8* %145, i64 %idxprom189, !dbg !5045
  %146 = load i8, i8* %arrayidx191, align 1, !dbg !5045
  %conv192 = sext i8 %146 to i32, !dbg !5045
  %cmp193 = icmp eq i32 %conv192, -1, !dbg !5047
  br i1 %cmp193, label %lor.end, label %lor.rhs, !dbg !5048

lor.rhs:                                          ; preds = %if.then160
  %147 = load i32, i32* %mb_xy, align 4, !dbg !5049
  %148 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5050
  %mb_stride195 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %148, i32 0, i32 39, !dbg !5051
  %149 = load i32, i32* %mb_stride195, align 4, !dbg !5051
  %sub196 = sub nsw i32 %147, %149, !dbg !5052
  %idxprom197 = sext i32 %sub196 to i64, !dbg !5053
  %150 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5053
  %mb2br_xy198 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %150, i32 0, i32 42, !dbg !5054
  %151 = load i32*, i32** %mb2br_xy198, align 16, !dbg !5054
  %arrayidx199 = getelementptr inbounds i32, i32* %151, i64 %idxprom197, !dbg !5053
  %152 = load i32, i32* %arrayidx199, align 4, !dbg !5053
  %idxprom200 = zext i32 %152 to i64, !dbg !5055
  %153 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5055
  %intra4x4_pred_mode201 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %153, i32 0, i32 46, !dbg !5056
  %154 = load i8*, i8** %intra4x4_pred_mode201, align 8, !dbg !5056
  %arrayidx202 = getelementptr inbounds i8, i8* %154, i64 %idxprom200, !dbg !5055
  %155 = load i8, i8* %arrayidx202, align 1, !dbg !5055
  %conv203 = sext i8 %155 to i32, !dbg !5055
  %cmp204 = icmp eq i32 %conv203, -1, !dbg !5057
  br label %lor.end, !dbg !5058

lor.end:                                          ; preds = %lor.rhs, %if.then160
  %156 = phi i1 [ true, %if.then160 ], [ %cmp204, %lor.rhs ]
  %cond206 = select i1 %156, i32 -2, i32 1, !dbg !5060
  %conv207 = trunc i32 %cond206 to i8, !dbg !5060
  %157 = load i8, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @scan8, i64 0, i64 0), align 16, !dbg !5062
  %conv208 = zext i8 %157 to i32, !dbg !5062
  %add209 = add nsw i32 %conv208, 4, !dbg !5063
  %sub210 = sub nsw i32 %add209, 8, !dbg !5064
  %idxprom211 = sext i32 %sub210 to i64, !dbg !5065
  %158 = load i32, i32* %m, align 4, !dbg !5066
  %idxprom212 = sext i32 %158 to i64, !dbg !5065
  %159 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5065
  %ref_cache213 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %159, i32 0, i32 53, !dbg !5067
  %arrayidx214 = getelementptr inbounds [2 x [40 x i8]], [2 x [40 x i8]]* %ref_cache213, i64 0, i64 %idxprom212, !dbg !5065
  %arrayidx215 = getelementptr inbounds [40 x i8], [40 x i8]* %arrayidx214, i64 0, i64 %idxprom211, !dbg !5065
  store i8 %conv207, i8* %arrayidx215, align 1, !dbg !5068
  br label %if.end225, !dbg !5069

if.else216:                                       ; preds = %if.then121
  %160 = load i8, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @scan8, i64 0, i64 0), align 16, !dbg !5070
  %conv217 = zext i8 %160 to i32, !dbg !5070
  %add218 = add nsw i32 %conv217, 4, !dbg !5071
  %sub219 = sub nsw i32 %add218, 8, !dbg !5072
  %idxprom220 = sext i32 %sub219 to i64, !dbg !5073
  %161 = load i32, i32* %m, align 4, !dbg !5074
  %idxprom221 = sext i32 %161 to i64, !dbg !5073
  %162 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5073
  %ref_cache222 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %162, i32 0, i32 53, !dbg !5075
  %arrayidx223 = getelementptr inbounds [2 x [40 x i8]], [2 x [40 x i8]]* %ref_cache222, i64 0, i64 %idxprom221, !dbg !5073
  %arrayidx224 = getelementptr inbounds [40 x i8], [40 x i8]* %arrayidx223, i64 0, i64 %idxprom220, !dbg !5073
  store i8 -2, i8* %arrayidx224, align 1, !dbg !5076
  br label %if.end225

if.end225:                                        ; preds = %if.else216, %lor.end
  %163 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5077
  %mb_x226 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %163, i32 0, i32 34, !dbg !5079
  %164 = load i32, i32* %mb_x226, align 16, !dbg !5079
  %cmp227 = icmp sgt i32 %164, 0, !dbg !5080
  br i1 %cmp227, label %if.then229, label %if.else274, !dbg !5081

if.then229:                                       ; preds = %if.end225
  %165 = load i32, i32* %b_xy, align 4, !dbg !5082
  %166 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5084
  %b_stride230 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %166, i32 0, i32 41, !dbg !5085
  %167 = load i32, i32* %b_stride230, align 4, !dbg !5085
  %sub231 = sub nsw i32 %165, %167, !dbg !5086
  %sub232 = sub nsw i32 %sub231, 1, !dbg !5087
  %idxprom233 = sext i32 %sub232 to i64, !dbg !5088
  %168 = load i32, i32* %m, align 4, !dbg !5089
  %idxprom234 = sext i32 %168 to i64, !dbg !5088
  %169 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5088
  %cur_pic235 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %169, i32 0, i32 6, !dbg !5090
  %170 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic235, align 16, !dbg !5090
  %motion_val236 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %170, i32 0, i32 2, !dbg !5091
  %arrayidx237 = getelementptr inbounds [2 x [2 x i16]*], [2 x [2 x i16]*]* %motion_val236, i64 0, i64 %idxprom234, !dbg !5088
  %171 = load [2 x i16]*, [2 x i16]** %arrayidx237, align 8, !dbg !5088
  %arrayidx238 = getelementptr inbounds [2 x i16], [2 x i16]* %171, i64 %idxprom233, !dbg !5088
  %arraydecay239 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx238, i32 0, i32 0, !dbg !5092
  %172 = bitcast i16* %arraydecay239 to %union.av_alias32*, !dbg !5092
  %u32240 = bitcast %union.av_alias32* %172 to i32*, !dbg !5092
  %173 = load i32, i32* %u32240, align 4, !dbg !5092
  %174 = load i8, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @scan8, i64 0, i64 0), align 16, !dbg !5093
  %conv241 = zext i8 %174 to i32, !dbg !5093
  %sub242 = sub nsw i32 %conv241, 1, !dbg !5094
  %sub243 = sub nsw i32 %sub242, 8, !dbg !5095
  %idxprom244 = sext i32 %sub243 to i64, !dbg !5096
  %175 = load i32, i32* %m, align 4, !dbg !5097
  %idxprom245 = sext i32 %175 to i64, !dbg !5096
  %176 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5096
  %mv_cache246 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %176, i32 0, i32 52, !dbg !5098
  %arrayidx247 = getelementptr inbounds [2 x [40 x [2 x i16]]], [2 x [40 x [2 x i16]]]* %mv_cache246, i64 0, i64 %idxprom245, !dbg !5096
  %arrayidx248 = getelementptr inbounds [40 x [2 x i16]], [40 x [2 x i16]]* %arrayidx247, i64 0, i64 %idxprom244, !dbg !5096
  %arraydecay249 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx248, i32 0, i32 0, !dbg !5099
  %177 = bitcast i16* %arraydecay249 to %union.av_alias32*, !dbg !5099
  %u32250 = bitcast %union.av_alias32* %177 to i32*, !dbg !5099
  store i32 %173, i32* %u32250, align 4, !dbg !5100
  %178 = load i32, i32* %mb_xy, align 4, !dbg !5101
  %179 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5102
  %mb_stride251 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %179, i32 0, i32 39, !dbg !5103
  %180 = load i32, i32* %mb_stride251, align 4, !dbg !5103
  %sub252 = sub nsw i32 %178, %180, !dbg !5104
  %sub253 = sub nsw i32 %sub252, 1, !dbg !5105
  %idxprom254 = sext i32 %sub253 to i64, !dbg !5106
  %181 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5106
  %mb2br_xy255 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %181, i32 0, i32 42, !dbg !5107
  %182 = load i32*, i32** %mb2br_xy255, align 16, !dbg !5107
  %arrayidx256 = getelementptr inbounds i32, i32* %182, i64 %idxprom254, !dbg !5106
  %183 = load i32, i32* %arrayidx256, align 4, !dbg !5106
  %add257 = add i32 %183, 3, !dbg !5108
  %idxprom258 = zext i32 %add257 to i64, !dbg !5109
  %184 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5109
  %intra4x4_pred_mode259 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %184, i32 0, i32 46, !dbg !5110
  %185 = load i8*, i8** %intra4x4_pred_mode259, align 8, !dbg !5110
  %arrayidx260 = getelementptr inbounds i8, i8* %185, i64 %idxprom258, !dbg !5109
  %186 = load i8, i8* %arrayidx260, align 1, !dbg !5109
  %conv261 = sext i8 %186 to i32, !dbg !5109
  %cmp262 = icmp eq i32 %conv261, -1, !dbg !5111
  %cond264 = select i1 %cmp262, i32 -2, i32 1, !dbg !5112
  %conv265 = trunc i32 %cond264 to i8, !dbg !5112
  %187 = load i8, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @scan8, i64 0, i64 0), align 16, !dbg !5113
  %conv266 = zext i8 %187 to i32, !dbg !5113
  %sub267 = sub nsw i32 %conv266, 1, !dbg !5114
  %sub268 = sub nsw i32 %sub267, 8, !dbg !5115
  %idxprom269 = sext i32 %sub268 to i64, !dbg !5116
  %188 = load i32, i32* %m, align 4, !dbg !5117
  %idxprom270 = sext i32 %188 to i64, !dbg !5116
  %189 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5116
  %ref_cache271 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %189, i32 0, i32 53, !dbg !5118
  %arrayidx272 = getelementptr inbounds [2 x [40 x i8]], [2 x [40 x i8]]* %ref_cache271, i64 0, i64 %idxprom270, !dbg !5116
  %arrayidx273 = getelementptr inbounds [40 x i8], [40 x i8]* %arrayidx272, i64 0, i64 %idxprom269, !dbg !5116
  store i8 %conv265, i8* %arrayidx273, align 1, !dbg !5119
  br label %if.end283, !dbg !5120

if.else274:                                       ; preds = %if.end225
  %190 = load i8, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @scan8, i64 0, i64 0), align 16, !dbg !5121
  %conv275 = zext i8 %190 to i32, !dbg !5121
  %sub276 = sub nsw i32 %conv275, 1, !dbg !5122
  %sub277 = sub nsw i32 %sub276, 8, !dbg !5123
  %idxprom278 = sext i32 %sub277 to i64, !dbg !5124
  %191 = load i32, i32* %m, align 4, !dbg !5125
  %idxprom279 = sext i32 %191 to i64, !dbg !5124
  %192 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5124
  %ref_cache280 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %192, i32 0, i32 53, !dbg !5126
  %arrayidx281 = getelementptr inbounds [2 x [40 x i8]], [2 x [40 x i8]]* %ref_cache280, i64 0, i64 %idxprom279, !dbg !5124
  %arrayidx282 = getelementptr inbounds [40 x i8], [40 x i8]* %arrayidx281, i64 0, i64 %idxprom278, !dbg !5124
  store i8 -2, i8* %arrayidx282, align 1, !dbg !5127
  br label %if.end283

if.end283:                                        ; preds = %if.else274, %if.then229
  br label %if.end293, !dbg !5128

if.else284:                                       ; preds = %if.end117
  %193 = load i8, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @scan8, i64 0, i64 0), align 16, !dbg !5129
  %conv285 = zext i8 %193 to i32, !dbg !5129
  %sub286 = sub nsw i32 %conv285, 8, !dbg !5130
  %sub287 = sub nsw i32 %sub286, 1, !dbg !5131
  %idxprom288 = sext i32 %sub287 to i64, !dbg !5132
  %194 = load i32, i32* %m, align 4, !dbg !5133
  %idxprom289 = sext i32 %194 to i64, !dbg !5132
  %195 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5132
  %ref_cache290 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %195, i32 0, i32 53, !dbg !5134
  %arrayidx291 = getelementptr inbounds [2 x [40 x i8]], [2 x [40 x i8]]* %ref_cache290, i64 0, i64 %idxprom289, !dbg !5132
  %arrayidx292 = getelementptr inbounds [40 x i8], [40 x i8]* %arrayidx291, i64 0, i64 %idxprom288, !dbg !5132
  call void @llvm.memset.p0i8.i64(i8* %arrayidx292, i8 -2, i64 8, i32 1, i1 false), !dbg !5135
  br label %if.end293

if.end293:                                        ; preds = %if.else284, %if.end283
  %196 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5136
  %pict_type294 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %196, i32 0, i32 31, !dbg !5138
  %197 = load i32, i32* %pict_type294, align 4, !dbg !5138
  %cmp295 = icmp ne i32 %197, 3, !dbg !5139
  br i1 %cmp295, label %if.then297, label %if.end298, !dbg !5140

if.then297:                                       ; preds = %if.end293
  br label %for.end301, !dbg !5141

if.end298:                                        ; preds = %if.end293
  br label %for.inc299, !dbg !5142

for.inc299:                                       ; preds = %if.end298
  %198 = load i32, i32* %m, align 4, !dbg !5143
  %inc300 = add nsw i32 %198, 1, !dbg !5143
  store i32 %inc300, i32* %m, align 4, !dbg !5143
  br label %for.cond, !dbg !5145, !llvm.loop !5146

for.end301:                                       ; preds = %if.then297, %for.cond
  %199 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5148
  %pict_type302 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %199, i32 0, i32 31, !dbg !5150
  %200 = load i32, i32* %pict_type302, align 4, !dbg !5150
  %cmp303 = icmp eq i32 %200, 2, !dbg !5151
  br i1 %cmp303, label %if.then305, label %if.else312, !dbg !5152

if.then305:                                       ; preds = %for.end301
  %201 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5153
  %202 = load i32, i32* %mb_type.addr, align 4, !dbg !5156
  %sub306 = sub i32 %202, 1, !dbg !5157
  %203 = load i32, i32* %mode, align 4, !dbg !5158
  %call307 = call i32 @svq3_mc_dir(%struct.SVQ3Context* %201, i32 %sub306, i32 %203, i32 0, i32 0), !dbg !5159
  %cmp308 = icmp slt i32 %call307, 0, !dbg !5160
  br i1 %cmp308, label %if.then310, label %if.end311, !dbg !5161

if.then310:                                       ; preds = %if.then305
  store i32 -1, i32* %retval, align 4, !dbg !5162
  br label %return, !dbg !5162

if.end311:                                        ; preds = %if.then305
  br label %if.end367, !dbg !5163

if.else312:                                       ; preds = %for.end301
  %204 = load i32, i32* %mb_type.addr, align 4, !dbg !5164
  %cmp313 = icmp ne i32 %204, 2, !dbg !5167
  br i1 %cmp313, label %if.then315, label %if.else321, !dbg !5168

if.then315:                                       ; preds = %if.else312
  %205 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5169
  %206 = load i32, i32* %mode, align 4, !dbg !5172
  %call316 = call i32 @svq3_mc_dir(%struct.SVQ3Context* %205, i32 0, i32 %206, i32 0, i32 0), !dbg !5173
  %cmp317 = icmp slt i32 %call316, 0, !dbg !5174
  br i1 %cmp317, label %if.then319, label %if.end320, !dbg !5175

if.then319:                                       ; preds = %if.then315
  store i32 -1, i32* %retval, align 4, !dbg !5176
  br label %return, !dbg !5176

if.end320:                                        ; preds = %if.then315
  br label %if.end338, !dbg !5177

if.else321:                                       ; preds = %if.else312
  store i32 0, i32* %i, align 4, !dbg !5178
  br label %for.cond322, !dbg !5181

for.cond322:                                      ; preds = %for.inc335, %if.else321
  %207 = load i32, i32* %i, align 4, !dbg !5182
  %cmp323 = icmp slt i32 %207, 4, !dbg !5185
  br i1 %cmp323, label %for.body325, label %for.end337, !dbg !5186

for.body325:                                      ; preds = %for.cond322
  %208 = load i32, i32* %b_xy, align 4, !dbg !5187
  %209 = load i32, i32* %i, align 4, !dbg !5188
  %210 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5189
  %b_stride326 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %210, i32 0, i32 41, !dbg !5190
  %211 = load i32, i32* %b_stride326, align 4, !dbg !5190
  %mul327 = mul nsw i32 %209, %211, !dbg !5191
  %add328 = add nsw i32 %208, %mul327, !dbg !5192
  %idxprom329 = sext i32 %add328 to i64, !dbg !5193
  %212 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5193
  %cur_pic330 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %212, i32 0, i32 6, !dbg !5194
  %213 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic330, align 16, !dbg !5194
  %motion_val331 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %213, i32 0, i32 2, !dbg !5195
  %arrayidx332 = getelementptr inbounds [2 x [2 x i16]*], [2 x [2 x i16]*]* %motion_val331, i64 0, i64 0, !dbg !5193
  %214 = load [2 x i16]*, [2 x i16]** %arrayidx332, align 8, !dbg !5193
  %arrayidx333 = getelementptr inbounds [2 x i16], [2 x i16]* %214, i64 %idxprom329, !dbg !5193
  %arraydecay334 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx333, i32 0, i32 0, !dbg !5196
  %215 = bitcast i16* %arraydecay334 to i8*, !dbg !5196
  call void @llvm.memset.p0i8.i64(i8* %215, i8 0, i64 16, i32 2, i1 false), !dbg !5196
  br label %for.inc335, !dbg !5196

for.inc335:                                       ; preds = %for.body325
  %216 = load i32, i32* %i, align 4, !dbg !5197
  %inc336 = add nsw i32 %216, 1, !dbg !5197
  store i32 %inc336, i32* %i, align 4, !dbg !5197
  br label %for.cond322, !dbg !5199, !llvm.loop !5200

for.end337:                                       ; preds = %for.cond322
  br label %if.end338

if.end338:                                        ; preds = %for.end337, %if.end320
  %217 = load i32, i32* %mb_type.addr, align 4, !dbg !5202
  %cmp339 = icmp ne i32 %217, 1, !dbg !5204
  br i1 %cmp339, label %if.then341, label %if.else349, !dbg !5205

if.then341:                                       ; preds = %if.end338
  %218 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5206
  %219 = load i32, i32* %mode, align 4, !dbg !5209
  %220 = load i32, i32* %mb_type.addr, align 4, !dbg !5210
  %cmp342 = icmp eq i32 %220, 3, !dbg !5211
  %conv343 = zext i1 %cmp342 to i32, !dbg !5211
  %call344 = call i32 @svq3_mc_dir(%struct.SVQ3Context* %218, i32 0, i32 %219, i32 1, i32 %conv343), !dbg !5212
  %cmp345 = icmp slt i32 %call344, 0, !dbg !5213
  br i1 %cmp345, label %if.then347, label %if.end348, !dbg !5214

if.then347:                                       ; preds = %if.then341
  store i32 -1, i32* %retval, align 4, !dbg !5215
  br label %return, !dbg !5215

if.end348:                                        ; preds = %if.then341
  br label %if.end366, !dbg !5216

if.else349:                                       ; preds = %if.end338
  store i32 0, i32* %i, align 4, !dbg !5217
  br label %for.cond350, !dbg !5220

for.cond350:                                      ; preds = %for.inc363, %if.else349
  %221 = load i32, i32* %i, align 4, !dbg !5221
  %cmp351 = icmp slt i32 %221, 4, !dbg !5224
  br i1 %cmp351, label %for.body353, label %for.end365, !dbg !5225

for.body353:                                      ; preds = %for.cond350
  %222 = load i32, i32* %b_xy, align 4, !dbg !5226
  %223 = load i32, i32* %i, align 4, !dbg !5227
  %224 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5228
  %b_stride354 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %224, i32 0, i32 41, !dbg !5229
  %225 = load i32, i32* %b_stride354, align 4, !dbg !5229
  %mul355 = mul nsw i32 %223, %225, !dbg !5230
  %add356 = add nsw i32 %222, %mul355, !dbg !5231
  %idxprom357 = sext i32 %add356 to i64, !dbg !5232
  %226 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5232
  %cur_pic358 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %226, i32 0, i32 6, !dbg !5233
  %227 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic358, align 16, !dbg !5233
  %motion_val359 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %227, i32 0, i32 2, !dbg !5234
  %arrayidx360 = getelementptr inbounds [2 x [2 x i16]*], [2 x [2 x i16]*]* %motion_val359, i64 0, i64 1, !dbg !5232
  %228 = load [2 x i16]*, [2 x i16]** %arrayidx360, align 8, !dbg !5232
  %arrayidx361 = getelementptr inbounds [2 x i16], [2 x i16]* %228, i64 %idxprom357, !dbg !5232
  %arraydecay362 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx361, i32 0, i32 0, !dbg !5235
  %229 = bitcast i16* %arraydecay362 to i8*, !dbg !5235
  call void @llvm.memset.p0i8.i64(i8* %229, i8 0, i64 16, i32 2, i1 false), !dbg !5235
  br label %for.inc363, !dbg !5235

for.inc363:                                       ; preds = %for.body353
  %230 = load i32, i32* %i, align 4, !dbg !5236
  %inc364 = add nsw i32 %230, 1, !dbg !5236
  store i32 %inc364, i32* %i, align 4, !dbg !5236
  br label %for.cond350, !dbg !5238, !llvm.loop !5239

for.end365:                                       ; preds = %for.cond350
  br label %if.end366

if.end366:                                        ; preds = %for.end365, %if.end348
  br label %if.end367

if.end367:                                        ; preds = %if.end366, %if.end311
  store i32 8, i32* %mb_type.addr, align 4, !dbg !5241
  br label %if.end637, !dbg !5242

if.else368:                                       ; preds = %if.else42
  %231 = load i32, i32* %mb_type.addr, align 4, !dbg !5243
  %cmp369 = icmp eq i32 %231, 8, !dbg !5246
  br i1 %cmp369, label %if.then374, label %lor.lhs.false371, !dbg !5247

lor.lhs.false371:                                 ; preds = %if.else368
  %232 = load i32, i32* %mb_type.addr, align 4, !dbg !5248
  %cmp372 = icmp eq i32 %232, 33, !dbg !5250
  br i1 %cmp372, label %if.then374, label %if.else614, !dbg !5251

if.then374:                                       ; preds = %lor.lhs.false371, %if.else368
  call void @llvm.dbg.declare(metadata i8** %i4x4, metadata !5252, metadata !1727), !dbg !5254
  %233 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5255
  %intra4x4_pred_mode375 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %233, i32 0, i32 46, !dbg !5256
  %234 = load i8*, i8** %intra4x4_pred_mode375, align 8, !dbg !5256
  %235 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5257
  %mb_xy376 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %235, i32 0, i32 36, !dbg !5258
  %236 = load i32, i32* %mb_xy376, align 8, !dbg !5258
  %idxprom377 = sext i32 %236 to i64, !dbg !5259
  %237 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5259
  %mb2br_xy378 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %237, i32 0, i32 42, !dbg !5260
  %238 = load i32*, i32** %mb2br_xy378, align 16, !dbg !5260
  %arrayidx379 = getelementptr inbounds i32, i32* %238, i64 %idxprom377, !dbg !5259
  %239 = load i32, i32* %arrayidx379, align 4, !dbg !5259
  %idx.ext = zext i32 %239 to i64, !dbg !5261
  %add.ptr = getelementptr inbounds i8, i8* %234, i64 %idx.ext, !dbg !5261
  store i8* %add.ptr, i8** %i4x4, align 8, !dbg !5254
  call void @llvm.dbg.declare(metadata i8** %i4x4_cache, metadata !5262, metadata !1727), !dbg !5263
  %240 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5264
  %intra4x4_pred_mode_cache = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %240, i32 0, i32 45, !dbg !5265
  %arraydecay380 = getelementptr inbounds [40 x i8], [40 x i8]* %intra4x4_pred_mode_cache, i32 0, i32 0, !dbg !5264
  store i8* %arraydecay380, i8** %i4x4_cache, align 8, !dbg !5263
  %241 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5266
  %intra4x4_pred_mode_cache381 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %241, i32 0, i32 45, !dbg !5267
  %arraydecay382 = getelementptr inbounds [40 x i8], [40 x i8]* %intra4x4_pred_mode_cache381, i32 0, i32 0, !dbg !5268
  call void @llvm.memset.p0i8.i64(i8* %arraydecay382, i8 -1, i64 40, i32 16, i1 false), !dbg !5268
  %242 = load i32, i32* %mb_type.addr, align 4, !dbg !5269
  %cmp383 = icmp eq i32 %242, 8, !dbg !5271
  br i1 %cmp383, label %if.then385, label %if.else553, !dbg !5272

if.then385:                                       ; preds = %if.then374
  %243 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5273
  %mb_x386 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %243, i32 0, i32 34, !dbg !5276
  %244 = load i32, i32* %mb_x386, align 16, !dbg !5276
  %cmp387 = icmp sgt i32 %244, 0, !dbg !5277
  br i1 %cmp387, label %if.then389, label %if.end424, !dbg !5278

if.then389:                                       ; preds = %if.then385
  store i32 0, i32* %i, align 4, !dbg !5279
  br label %for.cond390, !dbg !5282

for.cond390:                                      ; preds = %for.inc410, %if.then389
  %245 = load i32, i32* %i, align 4, !dbg !5283
  %cmp391 = icmp slt i32 %245, 4, !dbg !5286
  br i1 %cmp391, label %for.body393, label %for.end412, !dbg !5287

for.body393:                                      ; preds = %for.cond390
  %246 = load i32, i32* %mb_xy, align 4, !dbg !5288
  %sub394 = sub nsw i32 %246, 1, !dbg !5289
  %idxprom395 = sext i32 %sub394 to i64, !dbg !5290
  %247 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5290
  %mb2br_xy396 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %247, i32 0, i32 42, !dbg !5291
  %248 = load i32*, i32** %mb2br_xy396, align 16, !dbg !5291
  %arrayidx397 = getelementptr inbounds i32, i32* %248, i64 %idxprom395, !dbg !5290
  %249 = load i32, i32* %arrayidx397, align 4, !dbg !5290
  %add398 = add i32 %249, 6, !dbg !5292
  %250 = load i32, i32* %i, align 4, !dbg !5293
  %sub399 = sub i32 %add398, %250, !dbg !5294
  %idxprom400 = zext i32 %sub399 to i64, !dbg !5295
  %251 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5295
  %intra4x4_pred_mode401 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %251, i32 0, i32 46, !dbg !5296
  %252 = load i8*, i8** %intra4x4_pred_mode401, align 8, !dbg !5296
  %arrayidx402 = getelementptr inbounds i8, i8* %252, i64 %idxprom400, !dbg !5295
  %253 = load i8, i8* %arrayidx402, align 1, !dbg !5295
  %254 = load i8, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @scan8, i64 0, i64 0), align 16, !dbg !5297
  %conv403 = zext i8 %254 to i32, !dbg !5297
  %sub404 = sub nsw i32 %conv403, 1, !dbg !5298
  %255 = load i32, i32* %i, align 4, !dbg !5299
  %mul405 = mul nsw i32 %255, 8, !dbg !5300
  %add406 = add nsw i32 %sub404, %mul405, !dbg !5301
  %idxprom407 = sext i32 %add406 to i64, !dbg !5302
  %256 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5302
  %intra4x4_pred_mode_cache408 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %256, i32 0, i32 45, !dbg !5303
  %arrayidx409 = getelementptr inbounds [40 x i8], [40 x i8]* %intra4x4_pred_mode_cache408, i64 0, i64 %idxprom407, !dbg !5302
  store i8 %253, i8* %arrayidx409, align 1, !dbg !5304
  br label %for.inc410, !dbg !5302

for.inc410:                                       ; preds = %for.body393
  %257 = load i32, i32* %i, align 4, !dbg !5305
  %inc411 = add nsw i32 %257, 1, !dbg !5305
  store i32 %inc411, i32* %i, align 4, !dbg !5305
  br label %for.cond390, !dbg !5307, !llvm.loop !5308

for.end412:                                       ; preds = %for.cond390
  %258 = load i8, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @scan8, i64 0, i64 0), align 16, !dbg !5310
  %conv413 = zext i8 %258 to i32, !dbg !5310
  %sub414 = sub nsw i32 %conv413, 1, !dbg !5312
  %idxprom415 = sext i32 %sub414 to i64, !dbg !5313
  %259 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5313
  %intra4x4_pred_mode_cache416 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %259, i32 0, i32 45, !dbg !5314
  %arrayidx417 = getelementptr inbounds [40 x i8], [40 x i8]* %intra4x4_pred_mode_cache416, i64 0, i64 %idxprom415, !dbg !5313
  %260 = load i8, i8* %arrayidx417, align 1, !dbg !5313
  %conv418 = sext i8 %260 to i32, !dbg !5313
  %cmp419 = icmp eq i32 %conv418, -1, !dbg !5315
  br i1 %cmp419, label %if.then421, label %if.end423, !dbg !5316

if.then421:                                       ; preds = %for.end412
  %261 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5317
  %left_samples_available422 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %261, i32 0, i32 49, !dbg !5318
  store i32 24415, i32* %left_samples_available422, align 8, !dbg !5319
  br label %if.end423, !dbg !5317

if.end423:                                        ; preds = %if.then421, %for.end412
  br label %if.end424, !dbg !5320

if.end424:                                        ; preds = %if.end423, %if.then385
  %262 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5321
  %mb_y425 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %262, i32 0, i32 35, !dbg !5323
  %263 = load i32, i32* %mb_y425, align 4, !dbg !5323
  %cmp426 = icmp sgt i32 %263, 0, !dbg !5324
  br i1 %cmp426, label %if.then428, label %if.end481, !dbg !5325

if.then428:                                       ; preds = %if.end424
  %264 = load i32, i32* %mb_xy, align 4, !dbg !5326
  %265 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5328
  %mb_stride429 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %265, i32 0, i32 39, !dbg !5329
  %266 = load i32, i32* %mb_stride429, align 4, !dbg !5329
  %sub430 = sub nsw i32 %264, %266, !dbg !5330
  %idxprom431 = sext i32 %sub430 to i64, !dbg !5331
  %267 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5331
  %mb2br_xy432 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %267, i32 0, i32 42, !dbg !5332
  %268 = load i32*, i32** %mb2br_xy432, align 16, !dbg !5332
  %arrayidx433 = getelementptr inbounds i32, i32* %268, i64 %idxprom431, !dbg !5331
  %269 = load i32, i32* %arrayidx433, align 4, !dbg !5331
  %add434 = add i32 %269, 0, !dbg !5333
  %idxprom435 = zext i32 %add434 to i64, !dbg !5334
  %270 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5334
  %intra4x4_pred_mode436 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %270, i32 0, i32 46, !dbg !5335
  %271 = load i8*, i8** %intra4x4_pred_mode436, align 8, !dbg !5335
  %arrayidx437 = getelementptr inbounds i8, i8* %271, i64 %idxprom435, !dbg !5334
  %272 = load i8, i8* %arrayidx437, align 1, !dbg !5334
  %273 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5336
  %intra4x4_pred_mode_cache438 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %273, i32 0, i32 45, !dbg !5337
  %arrayidx439 = getelementptr inbounds [40 x i8], [40 x i8]* %intra4x4_pred_mode_cache438, i64 0, i64 4, !dbg !5336
  store i8 %272, i8* %arrayidx439, align 4, !dbg !5338
  %274 = load i32, i32* %mb_xy, align 4, !dbg !5339
  %275 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5340
  %mb_stride440 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %275, i32 0, i32 39, !dbg !5341
  %276 = load i32, i32* %mb_stride440, align 4, !dbg !5341
  %sub441 = sub nsw i32 %274, %276, !dbg !5342
  %idxprom442 = sext i32 %sub441 to i64, !dbg !5343
  %277 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5343
  %mb2br_xy443 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %277, i32 0, i32 42, !dbg !5344
  %278 = load i32*, i32** %mb2br_xy443, align 16, !dbg !5344
  %arrayidx444 = getelementptr inbounds i32, i32* %278, i64 %idxprom442, !dbg !5343
  %279 = load i32, i32* %arrayidx444, align 4, !dbg !5343
  %add445 = add i32 %279, 1, !dbg !5345
  %idxprom446 = zext i32 %add445 to i64, !dbg !5346
  %280 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5346
  %intra4x4_pred_mode447 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %280, i32 0, i32 46, !dbg !5347
  %281 = load i8*, i8** %intra4x4_pred_mode447, align 8, !dbg !5347
  %arrayidx448 = getelementptr inbounds i8, i8* %281, i64 %idxprom446, !dbg !5346
  %282 = load i8, i8* %arrayidx448, align 1, !dbg !5346
  %283 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5348
  %intra4x4_pred_mode_cache449 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %283, i32 0, i32 45, !dbg !5349
  %arrayidx450 = getelementptr inbounds [40 x i8], [40 x i8]* %intra4x4_pred_mode_cache449, i64 0, i64 5, !dbg !5348
  store i8 %282, i8* %arrayidx450, align 1, !dbg !5350
  %284 = load i32, i32* %mb_xy, align 4, !dbg !5351
  %285 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5352
  %mb_stride451 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %285, i32 0, i32 39, !dbg !5353
  %286 = load i32, i32* %mb_stride451, align 4, !dbg !5353
  %sub452 = sub nsw i32 %284, %286, !dbg !5354
  %idxprom453 = sext i32 %sub452 to i64, !dbg !5355
  %287 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5355
  %mb2br_xy454 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %287, i32 0, i32 42, !dbg !5356
  %288 = load i32*, i32** %mb2br_xy454, align 16, !dbg !5356
  %arrayidx455 = getelementptr inbounds i32, i32* %288, i64 %idxprom453, !dbg !5355
  %289 = load i32, i32* %arrayidx455, align 4, !dbg !5355
  %add456 = add i32 %289, 2, !dbg !5357
  %idxprom457 = zext i32 %add456 to i64, !dbg !5358
  %290 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5358
  %intra4x4_pred_mode458 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %290, i32 0, i32 46, !dbg !5359
  %291 = load i8*, i8** %intra4x4_pred_mode458, align 8, !dbg !5359
  %arrayidx459 = getelementptr inbounds i8, i8* %291, i64 %idxprom457, !dbg !5358
  %292 = load i8, i8* %arrayidx459, align 1, !dbg !5358
  %293 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5360
  %intra4x4_pred_mode_cache460 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %293, i32 0, i32 45, !dbg !5361
  %arrayidx461 = getelementptr inbounds [40 x i8], [40 x i8]* %intra4x4_pred_mode_cache460, i64 0, i64 6, !dbg !5360
  store i8 %292, i8* %arrayidx461, align 2, !dbg !5362
  %294 = load i32, i32* %mb_xy, align 4, !dbg !5363
  %295 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5364
  %mb_stride462 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %295, i32 0, i32 39, !dbg !5365
  %296 = load i32, i32* %mb_stride462, align 4, !dbg !5365
  %sub463 = sub nsw i32 %294, %296, !dbg !5366
  %idxprom464 = sext i32 %sub463 to i64, !dbg !5367
  %297 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5367
  %mb2br_xy465 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %297, i32 0, i32 42, !dbg !5368
  %298 = load i32*, i32** %mb2br_xy465, align 16, !dbg !5368
  %arrayidx466 = getelementptr inbounds i32, i32* %298, i64 %idxprom464, !dbg !5367
  %299 = load i32, i32* %arrayidx466, align 4, !dbg !5367
  %add467 = add i32 %299, 3, !dbg !5369
  %idxprom468 = zext i32 %add467 to i64, !dbg !5370
  %300 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5370
  %intra4x4_pred_mode469 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %300, i32 0, i32 46, !dbg !5371
  %301 = load i8*, i8** %intra4x4_pred_mode469, align 8, !dbg !5371
  %arrayidx470 = getelementptr inbounds i8, i8* %301, i64 %idxprom468, !dbg !5370
  %302 = load i8, i8* %arrayidx470, align 1, !dbg !5370
  %303 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5372
  %intra4x4_pred_mode_cache471 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %303, i32 0, i32 45, !dbg !5373
  %arrayidx472 = getelementptr inbounds [40 x i8], [40 x i8]* %intra4x4_pred_mode_cache471, i64 0, i64 7, !dbg !5372
  store i8 %302, i8* %arrayidx472, align 1, !dbg !5374
  %304 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5375
  %intra4x4_pred_mode_cache473 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %304, i32 0, i32 45, !dbg !5377
  %arrayidx474 = getelementptr inbounds [40 x i8], [40 x i8]* %intra4x4_pred_mode_cache473, i64 0, i64 4, !dbg !5375
  %305 = load i8, i8* %arrayidx474, align 4, !dbg !5375
  %conv475 = sext i8 %305 to i32, !dbg !5375
  %cmp476 = icmp eq i32 %conv475, -1, !dbg !5378
  br i1 %cmp476, label %if.then478, label %if.end480, !dbg !5379

if.then478:                                       ; preds = %if.then428
  %306 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5380
  %top_samples_available479 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %306, i32 0, i32 47, !dbg !5381
  store i32 13311, i32* %top_samples_available479, align 16, !dbg !5382
  br label %if.end480, !dbg !5380

if.end480:                                        ; preds = %if.then478, %if.then428
  br label %if.end481, !dbg !5383

if.end481:                                        ; preds = %if.end480, %if.end424
  store i32 0, i32* %i, align 4, !dbg !5384
  br label %for.cond482, !dbg !5386

for.cond482:                                      ; preds = %for.inc550, %if.end481
  %307 = load i32, i32* %i, align 4, !dbg !5387
  %cmp483 = icmp slt i32 %307, 16, !dbg !5390
  br i1 %cmp483, label %for.body485, label %for.end552, !dbg !5391

for.body485:                                      ; preds = %for.cond482
  %308 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5392
  %gb_slice486 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %308, i32 0, i32 10, !dbg !5394
  %call487 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %gb_slice486), !dbg !5395
  store i32 %call487, i32* %vlc, align 4, !dbg !5396
  %309 = load i32, i32* %vlc, align 4, !dbg !5397
  %cmp488 = icmp uge i32 %309, 25, !dbg !5399
  br i1 %cmp488, label %if.then490, label %if.end491, !dbg !5400

if.then490:                                       ; preds = %for.body485
  %310 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5401
  %avctx = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %310, i32 0, i32 0, !dbg !5403
  %311 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 16, !dbg !5403
  %312 = bitcast %struct.AVCodecContext* %311 to i8*, !dbg !5401
  %313 = load i32, i32* %vlc, align 4, !dbg !5404
  call void (i8*, i32, i8*, ...) @av_log(i8* %312, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.19, i32 0, i32 0), i32 %313), !dbg !5405
  store i32 -1, i32* %retval, align 4, !dbg !5406
  br label %return, !dbg !5406

if.end491:                                        ; preds = %for.body485
  %314 = load i32, i32* %i, align 4, !dbg !5407
  %idxprom492 = sext i32 %314 to i64, !dbg !5408
  %arrayidx493 = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom492, !dbg !5408
  %315 = load i8, i8* %arrayidx493, align 1, !dbg !5408
  %conv494 = zext i8 %315 to i32, !dbg !5408
  %sub495 = sub nsw i32 %conv494, 1, !dbg !5409
  %idxprom496 = sext i32 %sub495 to i64, !dbg !5410
  %316 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5410
  %intra4x4_pred_mode_cache497 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %316, i32 0, i32 45, !dbg !5411
  %arrayidx498 = getelementptr inbounds [40 x i8], [40 x i8]* %intra4x4_pred_mode_cache497, i64 0, i64 %idxprom496, !dbg !5410
  store i8* %arrayidx498, i8** %left, align 8, !dbg !5412
  %317 = load i32, i32* %i, align 4, !dbg !5413
  %idxprom499 = sext i32 %317 to i64, !dbg !5414
  %arrayidx500 = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom499, !dbg !5414
  %318 = load i8, i8* %arrayidx500, align 1, !dbg !5414
  %conv501 = zext i8 %318 to i32, !dbg !5414
  %sub502 = sub nsw i32 %conv501, 8, !dbg !5415
  %idxprom503 = sext i32 %sub502 to i64, !dbg !5416
  %319 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5416
  %intra4x4_pred_mode_cache504 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %319, i32 0, i32 45, !dbg !5417
  %arrayidx505 = getelementptr inbounds [40 x i8], [40 x i8]* %intra4x4_pred_mode_cache504, i64 0, i64 %idxprom503, !dbg !5416
  store i8* %arrayidx505, i8** %top, align 8, !dbg !5418
  %320 = load i32, i32* %vlc, align 4, !dbg !5419
  %idxprom506 = zext i32 %320 to i64, !dbg !5420
  %arrayidx507 = getelementptr inbounds [25 x [2 x i8]], [25 x [2 x i8]]* @svq3_pred_0, i64 0, i64 %idxprom506, !dbg !5420
  %arrayidx508 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx507, i64 0, i64 0, !dbg !5420
  %321 = load i8, i8* %arrayidx508, align 2, !dbg !5420
  %idxprom509 = zext i8 %321 to i64, !dbg !5421
  %322 = load i8*, i8** %left, align 8, !dbg !5422
  %arrayidx510 = getelementptr inbounds i8, i8* %322, i64 0, !dbg !5422
  %323 = load i8, i8* %arrayidx510, align 1, !dbg !5422
  %conv511 = sext i8 %323 to i32, !dbg !5422
  %add512 = add nsw i32 %conv511, 1, !dbg !5423
  %idxprom513 = sext i32 %add512 to i64, !dbg !5421
  %324 = load i8*, i8** %top, align 8, !dbg !5424
  %arrayidx514 = getelementptr inbounds i8, i8* %324, i64 0, !dbg !5424
  %325 = load i8, i8* %arrayidx514, align 1, !dbg !5424
  %conv515 = sext i8 %325 to i32, !dbg !5424
  %add516 = add nsw i32 %conv515, 1, !dbg !5425
  %idxprom517 = sext i32 %add516 to i64, !dbg !5421
  %arrayidx518 = getelementptr inbounds [6 x [6 x [5 x i8]]], [6 x [6 x [5 x i8]]]* @svq3_pred_1, i64 0, i64 %idxprom517, !dbg !5421
  %arrayidx519 = getelementptr inbounds [6 x [5 x i8]], [6 x [5 x i8]]* %arrayidx518, i64 0, i64 %idxprom513, !dbg !5421
  %arrayidx520 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx519, i64 0, i64 %idxprom509, !dbg !5421
  %326 = load i8, i8* %arrayidx520, align 1, !dbg !5421
  %327 = load i8*, i8** %left, align 8, !dbg !5426
  %arrayidx521 = getelementptr inbounds i8, i8* %327, i64 1, !dbg !5426
  store i8 %326, i8* %arrayidx521, align 1, !dbg !5427
  %328 = load i32, i32* %vlc, align 4, !dbg !5428
  %idxprom522 = zext i32 %328 to i64, !dbg !5429
  %arrayidx523 = getelementptr inbounds [25 x [2 x i8]], [25 x [2 x i8]]* @svq3_pred_0, i64 0, i64 %idxprom522, !dbg !5429
  %arrayidx524 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx523, i64 0, i64 1, !dbg !5429
  %329 = load i8, i8* %arrayidx524, align 1, !dbg !5429
  %idxprom525 = zext i8 %329 to i64, !dbg !5430
  %330 = load i8*, i8** %left, align 8, !dbg !5431
  %arrayidx526 = getelementptr inbounds i8, i8* %330, i64 1, !dbg !5431
  %331 = load i8, i8* %arrayidx526, align 1, !dbg !5431
  %conv527 = sext i8 %331 to i32, !dbg !5431
  %add528 = add nsw i32 %conv527, 1, !dbg !5432
  %idxprom529 = sext i32 %add528 to i64, !dbg !5430
  %332 = load i8*, i8** %top, align 8, !dbg !5433
  %arrayidx530 = getelementptr inbounds i8, i8* %332, i64 1, !dbg !5433
  %333 = load i8, i8* %arrayidx530, align 1, !dbg !5433
  %conv531 = sext i8 %333 to i32, !dbg !5433
  %add532 = add nsw i32 %conv531, 1, !dbg !5434
  %idxprom533 = sext i32 %add532 to i64, !dbg !5430
  %arrayidx534 = getelementptr inbounds [6 x [6 x [5 x i8]]], [6 x [6 x [5 x i8]]]* @svq3_pred_1, i64 0, i64 %idxprom533, !dbg !5430
  %arrayidx535 = getelementptr inbounds [6 x [5 x i8]], [6 x [5 x i8]]* %arrayidx534, i64 0, i64 %idxprom529, !dbg !5430
  %arrayidx536 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx535, i64 0, i64 %idxprom525, !dbg !5430
  %334 = load i8, i8* %arrayidx536, align 1, !dbg !5430
  %335 = load i8*, i8** %left, align 8, !dbg !5435
  %arrayidx537 = getelementptr inbounds i8, i8* %335, i64 2, !dbg !5435
  store i8 %334, i8* %arrayidx537, align 1, !dbg !5436
  %336 = load i8*, i8** %left, align 8, !dbg !5437
  %arrayidx538 = getelementptr inbounds i8, i8* %336, i64 1, !dbg !5437
  %337 = load i8, i8* %arrayidx538, align 1, !dbg !5437
  %conv539 = sext i8 %337 to i32, !dbg !5437
  %cmp540 = icmp eq i32 %conv539, -1, !dbg !5439
  br i1 %cmp540, label %if.then547, label %lor.lhs.false542, !dbg !5440

lor.lhs.false542:                                 ; preds = %if.end491
  %338 = load i8*, i8** %left, align 8, !dbg !5441
  %arrayidx543 = getelementptr inbounds i8, i8* %338, i64 2, !dbg !5441
  %339 = load i8, i8* %arrayidx543, align 1, !dbg !5441
  %conv544 = sext i8 %339 to i32, !dbg !5441
  %cmp545 = icmp eq i32 %conv544, -1, !dbg !5443
  br i1 %cmp545, label %if.then547, label %if.end549, !dbg !5444

if.then547:                                       ; preds = %lor.lhs.false542, %if.end491
  %340 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5445
  %avctx548 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %340, i32 0, i32 0, !dbg !5447
  %341 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx548, align 16, !dbg !5447
  %342 = bitcast %struct.AVCodecContext* %341 to i8*, !dbg !5445
  call void (i8*, i32, i8*, ...) @av_log(i8* %342, i32 16, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20, i32 0, i32 0)), !dbg !5448
  store i32 -1, i32* %retval, align 4, !dbg !5449
  br label %return, !dbg !5449

if.end549:                                        ; preds = %lor.lhs.false542
  br label %for.inc550, !dbg !5450

for.inc550:                                       ; preds = %if.end549
  %343 = load i32, i32* %i, align 4, !dbg !5451
  %add551 = add nsw i32 %343, 2, !dbg !5451
  store i32 %add551, i32* %i, align 4, !dbg !5451
  br label %for.cond482, !dbg !5453, !llvm.loop !5454

for.end552:                                       ; preds = %for.cond482
  br label %if.end567, !dbg !5456

if.else553:                                       ; preds = %if.then374
  store i32 0, i32* %i, align 4, !dbg !5457
  br label %for.cond554, !dbg !5460

for.cond554:                                      ; preds = %for.inc564, %if.else553
  %344 = load i32, i32* %i, align 4, !dbg !5461
  %cmp555 = icmp slt i32 %344, 4, !dbg !5464
  br i1 %cmp555, label %for.body557, label %for.end566, !dbg !5465

for.body557:                                      ; preds = %for.cond554
  %345 = load i8, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @scan8, i64 0, i64 0), align 16, !dbg !5466
  %conv558 = zext i8 %345 to i32, !dbg !5466
  %346 = load i32, i32* %i, align 4, !dbg !5467
  %mul559 = mul nsw i32 8, %346, !dbg !5468
  %add560 = add nsw i32 %conv558, %mul559, !dbg !5469
  %idxprom561 = sext i32 %add560 to i64, !dbg !5470
  %347 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5470
  %intra4x4_pred_mode_cache562 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %347, i32 0, i32 45, !dbg !5471
  %arrayidx563 = getelementptr inbounds [40 x i8], [40 x i8]* %intra4x4_pred_mode_cache562, i64 0, i64 %idxprom561, !dbg !5470
  call void @llvm.memset.p0i8.i64(i8* %arrayidx563, i8 2, i64 4, i32 1, i1 false), !dbg !5472
  br label %for.inc564, !dbg !5472

for.inc564:                                       ; preds = %for.body557
  %348 = load i32, i32* %i, align 4, !dbg !5473
  %inc565 = add nsw i32 %348, 1, !dbg !5473
  store i32 %inc565, i32* %i, align 4, !dbg !5473
  br label %for.cond554, !dbg !5475, !llvm.loop !5476

for.end566:                                       ; preds = %for.cond554
  br label %if.end567

if.end567:                                        ; preds = %for.end566, %for.end552
  %349 = load i8*, i8** %i4x4_cache, align 8, !dbg !5478
  %add.ptr568 = getelementptr inbounds i8, i8* %349, i64 4, !dbg !5479
  %add.ptr569 = getelementptr inbounds i8, i8* %add.ptr568, i64 32, !dbg !5480
  %350 = bitcast i8* %add.ptr569 to %union.av_alias32*, !dbg !5481
  %u32570 = bitcast %union.av_alias32* %350 to i32*, !dbg !5481
  %351 = load i32, i32* %u32570, align 4, !dbg !5481
  %352 = load i8*, i8** %i4x4, align 8, !dbg !5482
  %353 = bitcast i8* %352 to %union.av_alias32*, !dbg !5483
  %u32571 = bitcast %union.av_alias32* %353 to i32*, !dbg !5483
  store i32 %351, i32* %u32571, align 4, !dbg !5484
  %354 = load i8*, i8** %i4x4_cache, align 8, !dbg !5485
  %arrayidx572 = getelementptr inbounds i8, i8* %354, i64 31, !dbg !5485
  %355 = load i8, i8* %arrayidx572, align 1, !dbg !5485
  %356 = load i8*, i8** %i4x4, align 8, !dbg !5486
  %arrayidx573 = getelementptr inbounds i8, i8* %356, i64 4, !dbg !5486
  store i8 %355, i8* %arrayidx573, align 1, !dbg !5487
  %357 = load i8*, i8** %i4x4_cache, align 8, !dbg !5488
  %arrayidx574 = getelementptr inbounds i8, i8* %357, i64 23, !dbg !5488
  %358 = load i8, i8* %arrayidx574, align 1, !dbg !5488
  %359 = load i8*, i8** %i4x4, align 8, !dbg !5489
  %arrayidx575 = getelementptr inbounds i8, i8* %359, i64 5, !dbg !5489
  store i8 %358, i8* %arrayidx575, align 1, !dbg !5490
  %360 = load i8*, i8** %i4x4_cache, align 8, !dbg !5491
  %arrayidx576 = getelementptr inbounds i8, i8* %360, i64 15, !dbg !5491
  %361 = load i8, i8* %arrayidx576, align 1, !dbg !5491
  %362 = load i8*, i8** %i4x4, align 8, !dbg !5492
  %arrayidx577 = getelementptr inbounds i8, i8* %362, i64 6, !dbg !5492
  store i8 %361, i8* %arrayidx577, align 1, !dbg !5493
  %363 = load i32, i32* %mb_type.addr, align 4, !dbg !5494
  %cmp578 = icmp eq i32 %363, 8, !dbg !5496
  br i1 %cmp578, label %if.then580, label %if.else597, !dbg !5497

if.then580:                                       ; preds = %if.end567
  %364 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5498
  %intra4x4_pred_mode_cache581 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %364, i32 0, i32 45, !dbg !5500
  %arraydecay582 = getelementptr inbounds [40 x i8], [40 x i8]* %intra4x4_pred_mode_cache581, i32 0, i32 0, !dbg !5498
  %365 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5501
  %avctx583 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %365, i32 0, i32 0, !dbg !5502
  %366 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx583, align 16, !dbg !5502
  %367 = bitcast %struct.AVCodecContext* %366 to i8*, !dbg !5501
  %368 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5503
  %top_samples_available584 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %368, i32 0, i32 47, !dbg !5504
  %369 = load i32, i32* %top_samples_available584, align 16, !dbg !5504
  %370 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5505
  %left_samples_available585 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %370, i32 0, i32 49, !dbg !5506
  %371 = load i32, i32* %left_samples_available585, align 8, !dbg !5506
  %call586 = call i32 @ff_h264_check_intra4x4_pred_mode(i8* %arraydecay582, i8* %367, i32 %369, i32 %371), !dbg !5507
  %372 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5508
  %mb_y587 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %372, i32 0, i32 35, !dbg !5509
  %373 = load i32, i32* %mb_y587, align 4, !dbg !5509
  %cmp588 = icmp eq i32 %373, 0, !dbg !5510
  %cond590 = select i1 %cmp588, i32 13311, i32 65535, !dbg !5511
  %374 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5512
  %top_samples_available591 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %374, i32 0, i32 47, !dbg !5513
  store i32 %cond590, i32* %top_samples_available591, align 16, !dbg !5514
  %375 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5515
  %mb_x592 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %375, i32 0, i32 34, !dbg !5516
  %376 = load i32, i32* %mb_x592, align 16, !dbg !5516
  %cmp593 = icmp eq i32 %376, 0, !dbg !5517
  %cond595 = select i1 %cmp593, i32 24415, i32 65535, !dbg !5518
  %377 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5519
  %left_samples_available596 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %377, i32 0, i32 49, !dbg !5520
  store i32 %cond595, i32* %left_samples_available596, align 8, !dbg !5521
  br label %if.end613, !dbg !5522

if.else597:                                       ; preds = %if.end567
  store i32 0, i32* %i, align 4, !dbg !5523
  br label %for.cond598, !dbg !5526

for.cond598:                                      ; preds = %for.inc608, %if.else597
  %378 = load i32, i32* %i, align 4, !dbg !5527
  %cmp599 = icmp slt i32 %378, 4, !dbg !5530
  br i1 %cmp599, label %for.body601, label %for.end610, !dbg !5531

for.body601:                                      ; preds = %for.cond598
  %379 = load i8, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @scan8, i64 0, i64 0), align 16, !dbg !5532
  %conv602 = zext i8 %379 to i32, !dbg !5532
  %380 = load i32, i32* %i, align 4, !dbg !5533
  %mul603 = mul nsw i32 8, %380, !dbg !5534
  %add604 = add nsw i32 %conv602, %mul603, !dbg !5535
  %idxprom605 = sext i32 %add604 to i64, !dbg !5536
  %381 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5536
  %intra4x4_pred_mode_cache606 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %381, i32 0, i32 45, !dbg !5537
  %arrayidx607 = getelementptr inbounds [40 x i8], [40 x i8]* %intra4x4_pred_mode_cache606, i64 0, i64 %idxprom605, !dbg !5536
  call void @llvm.memset.p0i8.i64(i8* %arrayidx607, i8 11, i64 4, i32 1, i1 false), !dbg !5538
  br label %for.inc608, !dbg !5538

for.inc608:                                       ; preds = %for.body601
  %382 = load i32, i32* %i, align 4, !dbg !5539
  %inc609 = add nsw i32 %382, 1, !dbg !5539
  store i32 %inc609, i32* %i, align 4, !dbg !5539
  br label %for.cond598, !dbg !5541, !llvm.loop !5542

for.end610:                                       ; preds = %for.cond598
  %383 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5544
  %top_samples_available611 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %383, i32 0, i32 47, !dbg !5545
  store i32 13311, i32* %top_samples_available611, align 16, !dbg !5546
  %384 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5547
  %left_samples_available612 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %384, i32 0, i32 49, !dbg !5548
  store i32 24415, i32* %left_samples_available612, align 8, !dbg !5549
  br label %if.end613

if.end613:                                        ; preds = %for.end610, %if.then580
  store i32 1, i32* %mb_type.addr, align 4, !dbg !5550
  br label %if.end636, !dbg !5551

if.else614:                                       ; preds = %lor.lhs.false371
  %385 = load i32, i32* %mb_type.addr, align 4, !dbg !5552
  %sub615 = sub i32 %385, 8, !dbg !5554
  %idxprom616 = zext i32 %sub615 to i64, !dbg !5555
  %arrayidx617 = getelementptr inbounds [26 x %struct.IMbInfo], [26 x %struct.IMbInfo]* @ff_h264_i_mb_type_info, i64 0, i64 %idxprom616, !dbg !5555
  %pred_mode = getelementptr inbounds %struct.IMbInfo, %struct.IMbInfo* %arrayidx617, i32 0, i32 1, !dbg !5556
  %386 = load i8, i8* %pred_mode, align 2, !dbg !5556
  %conv618 = zext i8 %386 to i32, !dbg !5555
  store i32 %conv618, i32* %dir, align 4, !dbg !5557
  %387 = load i32, i32* %dir, align 4, !dbg !5558
  %shr = ashr i32 %387, 1, !dbg !5559
  %388 = load i32, i32* %dir, align 4, !dbg !5560
  %and = and i32 %388, 1, !dbg !5561
  %mul619 = mul nsw i32 3, %and, !dbg !5562
  %xor = xor i32 %shr, %mul619, !dbg !5563
  %xor620 = xor i32 %xor, 1, !dbg !5564
  store i32 %xor620, i32* %dir, align 4, !dbg !5565
  %389 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5566
  %avctx621 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %389, i32 0, i32 0, !dbg !5568
  %390 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx621, align 16, !dbg !5568
  %391 = bitcast %struct.AVCodecContext* %390 to i8*, !dbg !5566
  %392 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5569
  %top_samples_available622 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %392, i32 0, i32 47, !dbg !5570
  %393 = load i32, i32* %top_samples_available622, align 16, !dbg !5570
  %394 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5571
  %left_samples_available623 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %394, i32 0, i32 49, !dbg !5572
  %395 = load i32, i32* %left_samples_available623, align 8, !dbg !5572
  %396 = load i32, i32* %dir, align 4, !dbg !5573
  %call624 = call i32 @ff_h264_check_intra_pred_mode(i8* %391, i32 %393, i32 %395, i32 %396, i32 0), !dbg !5574
  %397 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5575
  %intra16x16_pred_mode = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %397, i32 0, i32 44, !dbg !5576
  store i32 %call624, i32* %intra16x16_pred_mode, align 4, !dbg !5577
  %cmp625 = icmp slt i32 %call624, 0, !dbg !5578
  br i1 %cmp625, label %if.then627, label %if.end630, !dbg !5579

if.then627:                                       ; preds = %if.else614
  %398 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5580
  %avctx628 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %398, i32 0, i32 0, !dbg !5582
  %399 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx628, align 16, !dbg !5582
  %400 = bitcast %struct.AVCodecContext* %399 to i8*, !dbg !5580
  call void (i8*, i32, i8*, ...) @av_log(i8* %400, i32 16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)), !dbg !5583
  %401 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5584
  %intra16x16_pred_mode629 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %401, i32 0, i32 44, !dbg !5585
  %402 = load i32, i32* %intra16x16_pred_mode629, align 4, !dbg !5585
  store i32 %402, i32* %retval, align 4, !dbg !5586
  br label %return, !dbg !5586

if.end630:                                        ; preds = %if.else614
  %403 = load i32, i32* %mb_type.addr, align 4, !dbg !5587
  %sub631 = sub i32 %403, 8, !dbg !5588
  %idxprom632 = zext i32 %sub631 to i64, !dbg !5589
  %arrayidx633 = getelementptr inbounds [26 x %struct.IMbInfo], [26 x %struct.IMbInfo]* @ff_h264_i_mb_type_info, i64 0, i64 %idxprom632, !dbg !5589
  %cbp634 = getelementptr inbounds %struct.IMbInfo, %struct.IMbInfo* %arrayidx633, i32 0, i32 2, !dbg !5590
  %404 = load i8, i8* %cbp634, align 1, !dbg !5590
  %conv635 = zext i8 %404 to i32, !dbg !5589
  store i32 %conv635, i32* %cbp, align 4, !dbg !5591
  store i32 2, i32* %mb_type.addr, align 4, !dbg !5592
  br label %if.end636

if.end636:                                        ; preds = %if.end630, %if.end613
  br label %if.end637

if.end637:                                        ; preds = %if.end636, %if.end367
  br label %if.end638

if.end638:                                        ; preds = %if.end637, %if.end41
  %405 = load i32, i32* %mb_type.addr, align 4, !dbg !5593
  %and639 = and i32 %405, 120, !dbg !5595
  %tobool640 = icmp ne i32 %and639, 0, !dbg !5595
  br i1 %tobool640, label %if.end683, label %land.lhs.true641, !dbg !5596

land.lhs.true641:                                 ; preds = %if.end638
  %406 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5597
  %pict_type642 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %406, i32 0, i32 31, !dbg !5599
  %407 = load i32, i32* %pict_type642, align 4, !dbg !5599
  %cmp643 = icmp ne i32 %407, 1, !dbg !5600
  br i1 %cmp643, label %if.then645, label %if.end683, !dbg !5601

if.then645:                                       ; preds = %land.lhs.true641
  store i32 0, i32* %i, align 4, !dbg !5602
  br label %for.cond646, !dbg !5605

for.cond646:                                      ; preds = %for.inc659, %if.then645
  %408 = load i32, i32* %i, align 4, !dbg !5606
  %cmp647 = icmp slt i32 %408, 4, !dbg !5609
  br i1 %cmp647, label %for.body649, label %for.end661, !dbg !5610

for.body649:                                      ; preds = %for.cond646
  %409 = load i32, i32* %b_xy, align 4, !dbg !5611
  %410 = load i32, i32* %i, align 4, !dbg !5612
  %411 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5613
  %b_stride650 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %411, i32 0, i32 41, !dbg !5614
  %412 = load i32, i32* %b_stride650, align 4, !dbg !5614
  %mul651 = mul nsw i32 %410, %412, !dbg !5615
  %add652 = add nsw i32 %409, %mul651, !dbg !5616
  %idxprom653 = sext i32 %add652 to i64, !dbg !5617
  %413 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5617
  %cur_pic654 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %413, i32 0, i32 6, !dbg !5618
  %414 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic654, align 16, !dbg !5618
  %motion_val655 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %414, i32 0, i32 2, !dbg !5619
  %arrayidx656 = getelementptr inbounds [2 x [2 x i16]*], [2 x [2 x i16]*]* %motion_val655, i64 0, i64 0, !dbg !5617
  %415 = load [2 x i16]*, [2 x i16]** %arrayidx656, align 8, !dbg !5617
  %arrayidx657 = getelementptr inbounds [2 x i16], [2 x i16]* %415, i64 %idxprom653, !dbg !5617
  %arraydecay658 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx657, i32 0, i32 0, !dbg !5620
  %416 = bitcast i16* %arraydecay658 to i8*, !dbg !5620
  call void @llvm.memset.p0i8.i64(i8* %416, i8 0, i64 16, i32 2, i1 false), !dbg !5620
  br label %for.inc659, !dbg !5620

for.inc659:                                       ; preds = %for.body649
  %417 = load i32, i32* %i, align 4, !dbg !5621
  %inc660 = add nsw i32 %417, 1, !dbg !5621
  store i32 %inc660, i32* %i, align 4, !dbg !5621
  br label %for.cond646, !dbg !5623, !llvm.loop !5624

for.end661:                                       ; preds = %for.cond646
  %418 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5626
  %pict_type662 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %418, i32 0, i32 31, !dbg !5628
  %419 = load i32, i32* %pict_type662, align 4, !dbg !5628
  %cmp663 = icmp eq i32 %419, 3, !dbg !5629
  br i1 %cmp663, label %if.then665, label %if.end682, !dbg !5630

if.then665:                                       ; preds = %for.end661
  store i32 0, i32* %i, align 4, !dbg !5631
  br label %for.cond666, !dbg !5634

for.cond666:                                      ; preds = %for.inc679, %if.then665
  %420 = load i32, i32* %i, align 4, !dbg !5635
  %cmp667 = icmp slt i32 %420, 4, !dbg !5638
  br i1 %cmp667, label %for.body669, label %for.end681, !dbg !5639

for.body669:                                      ; preds = %for.cond666
  %421 = load i32, i32* %b_xy, align 4, !dbg !5640
  %422 = load i32, i32* %i, align 4, !dbg !5641
  %423 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5642
  %b_stride670 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %423, i32 0, i32 41, !dbg !5643
  %424 = load i32, i32* %b_stride670, align 4, !dbg !5643
  %mul671 = mul nsw i32 %422, %424, !dbg !5644
  %add672 = add nsw i32 %421, %mul671, !dbg !5645
  %idxprom673 = sext i32 %add672 to i64, !dbg !5646
  %425 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5646
  %cur_pic674 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %425, i32 0, i32 6, !dbg !5647
  %426 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic674, align 16, !dbg !5647
  %motion_val675 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %426, i32 0, i32 2, !dbg !5648
  %arrayidx676 = getelementptr inbounds [2 x [2 x i16]*], [2 x [2 x i16]*]* %motion_val675, i64 0, i64 1, !dbg !5646
  %427 = load [2 x i16]*, [2 x i16]** %arrayidx676, align 8, !dbg !5646
  %arrayidx677 = getelementptr inbounds [2 x i16], [2 x i16]* %427, i64 %idxprom673, !dbg !5646
  %arraydecay678 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx677, i32 0, i32 0, !dbg !5649
  %428 = bitcast i16* %arraydecay678 to i8*, !dbg !5649
  call void @llvm.memset.p0i8.i64(i8* %428, i8 0, i64 16, i32 2, i1 false), !dbg !5649
  br label %for.inc679, !dbg !5649

for.inc679:                                       ; preds = %for.body669
  %429 = load i32, i32* %i, align 4, !dbg !5650
  %inc680 = add nsw i32 %429, 1, !dbg !5650
  store i32 %inc680, i32* %i, align 4, !dbg !5650
  br label %for.cond666, !dbg !5652, !llvm.loop !5653

for.end681:                                       ; preds = %for.cond666
  br label %if.end682, !dbg !5655

if.end682:                                        ; preds = %for.end681, %for.end661
  br label %if.end683, !dbg !5656

if.end683:                                        ; preds = %if.end682, %land.lhs.true641, %if.end638
  %430 = load i32, i32* %mb_type.addr, align 4, !dbg !5657
  %and684 = and i32 %430, 1, !dbg !5659
  %tobool685 = icmp ne i32 %and684, 0, !dbg !5659
  br i1 %tobool685, label %if.end693, label %if.then686, !dbg !5660

if.then686:                                       ; preds = %if.end683
  %431 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5661
  %intra4x4_pred_mode687 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %431, i32 0, i32 46, !dbg !5663
  %432 = load i8*, i8** %intra4x4_pred_mode687, align 8, !dbg !5663
  %433 = load i32, i32* %mb_xy, align 4, !dbg !5664
  %idxprom688 = sext i32 %433 to i64, !dbg !5665
  %434 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5665
  %mb2br_xy689 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %434, i32 0, i32 42, !dbg !5666
  %435 = load i32*, i32** %mb2br_xy689, align 16, !dbg !5666
  %arrayidx690 = getelementptr inbounds i32, i32* %435, i64 %idxprom688, !dbg !5665
  %436 = load i32, i32* %arrayidx690, align 4, !dbg !5665
  %idx.ext691 = zext i32 %436 to i64, !dbg !5667
  %add.ptr692 = getelementptr inbounds i8, i8* %432, i64 %idx.ext691, !dbg !5667
  call void @llvm.memset.p0i8.i64(i8* %add.ptr692, i8 2, i64 8, i32 1, i1 false), !dbg !5668
  br label %if.end693, !dbg !5669

if.end693:                                        ; preds = %if.then686, %if.end683
  %437 = load i32, i32* %mb_type.addr, align 4, !dbg !5670
  %and694 = and i32 %437, 2048, !dbg !5672
  %tobool695 = icmp ne i32 %and694, 0, !dbg !5672
  br i1 %tobool695, label %lor.lhs.false696, label %if.then700, !dbg !5673

lor.lhs.false696:                                 ; preds = %if.end693
  %438 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5674
  %pict_type697 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %438, i32 0, i32 31, !dbg !5676
  %439 = load i32, i32* %pict_type697, align 4, !dbg !5676
  %cmp698 = icmp eq i32 %439, 3, !dbg !5677
  br i1 %cmp698, label %if.then700, label %if.end703, !dbg !5678

if.then700:                                       ; preds = %lor.lhs.false696, %if.end693
  %440 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5679
  %non_zero_count_cache = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %440, i32 0, i32 56, !dbg !5681
  %arraydecay701 = getelementptr inbounds [120 x i8], [120 x i8]* %non_zero_count_cache, i32 0, i32 0, !dbg !5679
  %add.ptr702 = getelementptr inbounds i8, i8* %arraydecay701, i64 8, !dbg !5682
  call void @llvm.memset.p0i8.i64(i8* %add.ptr702, i8 0, i64 112, i32 1, i1 false), !dbg !5683
  br label %if.end703, !dbg !5684

if.end703:                                        ; preds = %if.then700, %lor.lhs.false696
  %441 = load i32, i32* %mb_type.addr, align 4, !dbg !5685
  %and704 = and i32 %441, 2, !dbg !5687
  %tobool705 = icmp ne i32 %and704, 0, !dbg !5687
  br i1 %tobool705, label %if.end733, label %land.lhs.true706, !dbg !5688

land.lhs.true706:                                 ; preds = %if.end703
  %442 = load i32, i32* %mb_type.addr, align 4, !dbg !5689
  %and707 = and i32 %442, 2048, !dbg !5690
  %tobool708 = icmp ne i32 %and707, 0, !dbg !5690
  br i1 %tobool708, label %lor.lhs.false709, label %if.then713, !dbg !5691

lor.lhs.false709:                                 ; preds = %land.lhs.true706
  %443 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5692
  %pict_type710 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %443, i32 0, i32 31, !dbg !5694
  %444 = load i32, i32* %pict_type710, align 4, !dbg !5694
  %cmp711 = icmp eq i32 %444, 3, !dbg !5695
  br i1 %cmp711, label %if.then713, label %if.end733, !dbg !5696

if.then713:                                       ; preds = %lor.lhs.false709, %land.lhs.true706
  %445 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5698
  %gb_slice714 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %445, i32 0, i32 10, !dbg !5701
  %call715 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %gb_slice714), !dbg !5702
  store i32 %call715, i32* %vlc, align 4, !dbg !5703
  %cmp716 = icmp uge i32 %call715, 48, !dbg !5704
  br i1 %cmp716, label %if.then718, label %if.end720, !dbg !5705

if.then718:                                       ; preds = %if.then713
  %446 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5706
  %avctx719 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %446, i32 0, i32 0, !dbg !5708
  %447 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx719, align 16, !dbg !5708
  %448 = bitcast %struct.AVCodecContext* %447 to i8*, !dbg !5706
  %449 = load i32, i32* %vlc, align 4, !dbg !5709
  call void (i8*, i32, i8*, ...) @av_log(i8* %448, i32 16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.22, i32 0, i32 0), i32 %449), !dbg !5710
  store i32 -1, i32* %retval, align 4, !dbg !5711
  br label %return, !dbg !5711

if.end720:                                        ; preds = %if.then713
  %450 = load i32, i32* %mb_type.addr, align 4, !dbg !5712
  %and721 = and i32 %450, 7, !dbg !5713
  %tobool722 = icmp ne i32 %and721, 0, !dbg !5713
  br i1 %tobool722, label %cond.true723, label %cond.false727, !dbg !5714

cond.true723:                                     ; preds = %if.end720
  %451 = load i32, i32* %vlc, align 4, !dbg !5715
  %idxprom724 = zext i32 %451 to i64, !dbg !5717
  %arrayidx725 = getelementptr inbounds [48 x i8], [48 x i8]* @ff_h264_golomb_to_intra4x4_cbp, i64 0, i64 %idxprom724, !dbg !5717
  %452 = load i8, i8* %arrayidx725, align 1, !dbg !5717
  %conv726 = zext i8 %452 to i32, !dbg !5717
  br label %cond.end731, !dbg !5718

cond.false727:                                    ; preds = %if.end720
  %453 = load i32, i32* %vlc, align 4, !dbg !5719
  %idxprom728 = zext i32 %453 to i64, !dbg !5720
  %arrayidx729 = getelementptr inbounds [48 x i8], [48 x i8]* @ff_h264_golomb_to_inter_cbp, i64 0, i64 %idxprom728, !dbg !5720
  %454 = load i8, i8* %arrayidx729, align 1, !dbg !5720
  %conv730 = zext i8 %454 to i32, !dbg !5720
  br label %cond.end731, !dbg !5721

cond.end731:                                      ; preds = %cond.false727, %cond.true723
  %cond732 = phi i32 [ %conv726, %cond.true723 ], [ %conv730, %cond.false727 ], !dbg !5723
  store i32 %cond732, i32* %cbp, align 4, !dbg !5725
  br label %if.end733, !dbg !5726

if.end733:                                        ; preds = %cond.end731, %lor.lhs.false709, %if.end703
  %455 = load i32, i32* %mb_type.addr, align 4, !dbg !5727
  %and734 = and i32 %455, 2, !dbg !5729
  %tobool735 = icmp ne i32 %and734, 0, !dbg !5729
  br i1 %tobool735, label %if.then744, label %lor.lhs.false736, !dbg !5730

lor.lhs.false736:                                 ; preds = %if.end733
  %456 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5731
  %pict_type737 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %456, i32 0, i32 31, !dbg !5732
  %457 = load i32, i32* %pict_type737, align 4, !dbg !5732
  %cmp738 = icmp ne i32 %457, 1, !dbg !5733
  br i1 %cmp738, label %land.lhs.true740, label %if.end755, !dbg !5734

land.lhs.true740:                                 ; preds = %lor.lhs.false736
  %458 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5735
  %adaptive_quant = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %458, i32 0, i32 19, !dbg !5737
  %459 = load i32, i32* %adaptive_quant, align 4, !dbg !5737
  %tobool741 = icmp ne i32 %459, 0, !dbg !5735
  br i1 %tobool741, label %land.lhs.true742, label %if.end755, !dbg !5738

land.lhs.true742:                                 ; preds = %land.lhs.true740
  %460 = load i32, i32* %cbp, align 4, !dbg !5739
  %tobool743 = icmp ne i32 %460, 0, !dbg !5739
  br i1 %tobool743, label %if.then744, label %if.end755, !dbg !5741

if.then744:                                       ; preds = %land.lhs.true742, %if.end733
  %461 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5742
  %gb_slice745 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %461, i32 0, i32 10, !dbg !5744
  %call746 = call i32 @get_interleaved_se_golomb(%struct.GetBitContext* %gb_slice745), !dbg !5745
  %462 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5746
  %qscale = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %462, i32 0, i32 25, !dbg !5747
  %463 = load i32, i32* %qscale, align 4, !dbg !5748
  %add747 = add nsw i32 %463, %call746, !dbg !5748
  store i32 %add747, i32* %qscale, align 4, !dbg !5748
  %464 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5749
  %qscale748 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %464, i32 0, i32 25, !dbg !5751
  %465 = load i32, i32* %qscale748, align 4, !dbg !5751
  %cmp749 = icmp ugt i32 %465, 31, !dbg !5752
  br i1 %cmp749, label %if.then751, label %if.end754, !dbg !5753

if.then751:                                       ; preds = %if.then744
  %466 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5754
  %avctx752 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %466, i32 0, i32 0, !dbg !5756
  %467 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx752, align 16, !dbg !5756
  %468 = bitcast %struct.AVCodecContext* %467 to i8*, !dbg !5754
  %469 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5757
  %qscale753 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %469, i32 0, i32 25, !dbg !5758
  %470 = load i32, i32* %qscale753, align 4, !dbg !5758
  call void (i8*, i32, i8*, ...) @av_log(i8* %468, i32 16, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i32 0, i32 0), i32 %470), !dbg !5759
  store i32 -1, i32* %retval, align 4, !dbg !5760
  br label %return, !dbg !5760

if.end754:                                        ; preds = %if.then744
  br label %if.end755, !dbg !5761

if.end755:                                        ; preds = %if.end754, %land.lhs.true742, %land.lhs.true740, %lor.lhs.false736
  %471 = load i32, i32* %mb_type.addr, align 4, !dbg !5762
  %and756 = and i32 %471, 2, !dbg !5763
  %tobool757 = icmp ne i32 %and756, 0, !dbg !5763
  br i1 %tobool757, label %if.then758, label %if.end775, !dbg !5764

if.then758:                                       ; preds = %if.end755
  %472 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5765
  %mb_luma_dc = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %472, i32 0, i32 55, !dbg !5766
  %arrayidx759 = getelementptr inbounds [3 x [32 x i16]], [3 x [32 x i16]]* %mb_luma_dc, i64 0, i64 0, !dbg !5765
  %arraydecay760 = getelementptr inbounds [32 x i16], [32 x i16]* %arrayidx759, i32 0, i32 0, !dbg !5765
  %add.ptr761 = getelementptr inbounds i16, i16* %arraydecay760, i64 0, !dbg !5767
  %473 = bitcast i16* %add.ptr761 to i8*, !dbg !5765
  store i8* %473, i8** %d.addr.i, align 8, !dbg !5768
  %474 = load i8*, i8** %d.addr.i, align 8, !dbg !5769
  %475 = bitcast i8* %474 to %struct.v*, !dbg !5770
  call void asm "pxor %xmm0, %xmm0  \0A\09movdqa   %xmm0, $0  \0A\09", "=*m,~{xmm0},~{dirflag},~{fpsr},~{flags}"(%struct.v* %475) #9, !dbg !5771, !srcloc !5772
  %476 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5773
  %mb_luma_dc762 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %476, i32 0, i32 55, !dbg !5774
  %arrayidx763 = getelementptr inbounds [3 x [32 x i16]], [3 x [32 x i16]]* %mb_luma_dc762, i64 0, i64 0, !dbg !5773
  %arraydecay764 = getelementptr inbounds [32 x i16], [32 x i16]* %arrayidx763, i32 0, i32 0, !dbg !5773
  %add.ptr765 = getelementptr inbounds i16, i16* %arraydecay764, i64 8, !dbg !5775
  %477 = bitcast i16* %add.ptr765 to i8*, !dbg !5773
  store i8* %477, i8** %d.addr.i907, align 8, !dbg !5776
  %478 = load i8*, i8** %d.addr.i907, align 8, !dbg !5777
  %479 = bitcast i8* %478 to %struct.v*, !dbg !5778
  call void asm "pxor %xmm0, %xmm0  \0A\09movdqa   %xmm0, $0  \0A\09", "=*m,~{xmm0},~{dirflag},~{fpsr},~{flags}"(%struct.v* %479) #9, !dbg !5779, !srcloc !5772
  %480 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5780
  %gb_slice766 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %480, i32 0, i32 10, !dbg !5782
  %481 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5783
  %mb_luma_dc767 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %481, i32 0, i32 55, !dbg !5784
  %arrayidx768 = getelementptr inbounds [3 x [32 x i16]], [3 x [32 x i16]]* %mb_luma_dc767, i64 0, i64 0, !dbg !5783
  %arraydecay769 = getelementptr inbounds [32 x i16], [32 x i16]* %arrayidx768, i32 0, i32 0, !dbg !5783
  %call770 = call i32 @svq3_decode_block(%struct.GetBitContext* %gb_slice766, i16* %arraydecay769, i32 0, i32 1), !dbg !5785
  %tobool771 = icmp ne i32 %call770, 0, !dbg !5785
  br i1 %tobool771, label %if.then772, label %if.end774, !dbg !5786

if.then772:                                       ; preds = %if.then758
  %482 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5787
  %avctx773 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %482, i32 0, i32 0, !dbg !5789
  %483 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx773, align 16, !dbg !5789
  %484 = bitcast %struct.AVCodecContext* %483 to i8*, !dbg !5787
  call void (i8*, i32, i8*, ...) @av_log(i8* %484, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.24, i32 0, i32 0)), !dbg !5790
  store i32 -1, i32* %retval, align 4, !dbg !5791
  br label %return, !dbg !5791

if.end774:                                        ; preds = %if.then758
  br label %if.end775, !dbg !5792

if.end775:                                        ; preds = %if.end774, %if.end755
  %485 = load i32, i32* %cbp, align 4, !dbg !5793
  %tobool776 = icmp ne i32 %485, 0, !dbg !5793
  br i1 %tobool776, label %if.then777, label %if.end893, !dbg !5795

if.then777:                                       ; preds = %if.end775
  call void @llvm.dbg.declare(metadata i32* %index, metadata !5796, metadata !1727), !dbg !5798
  %486 = load i32, i32* %mb_type.addr, align 4, !dbg !5799
  %and778 = and i32 %486, 2, !dbg !5800
  %tobool779 = icmp ne i32 %and778, 0, !dbg !5801
  %cond780 = select i1 %tobool779, i32 1, i32 0, !dbg !5801
  store i32 %cond780, i32* %index, align 4, !dbg !5798
  call void @llvm.dbg.declare(metadata i32* %type, metadata !5802, metadata !1727), !dbg !5803
  %487 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5804
  %qscale781 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %487, i32 0, i32 25, !dbg !5805
  %488 = load i32, i32* %qscale781, align 4, !dbg !5805
  %cmp782 = icmp slt i32 %488, 24, !dbg !5806
  br i1 %cmp782, label %land.rhs, label %land.end, !dbg !5807

land.rhs:                                         ; preds = %if.then777
  %489 = load i32, i32* %mb_type.addr, align 4, !dbg !5808
  %and784 = and i32 %489, 1, !dbg !5810
  %tobool785 = icmp ne i32 %and784, 0, !dbg !5811
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then777
  %490 = phi i1 [ false, %if.then777 ], [ %tobool785, %land.rhs ]
  %cond786 = select i1 %490, i32 2, i32 1, !dbg !5812
  store i32 %cond786, i32* %type, align 4, !dbg !5814
  store i32 0, i32* %i, align 4, !dbg !5815
  br label %for.cond787, !dbg !5817

for.cond787:                                      ; preds = %for.inc834, %land.end
  %491 = load i32, i32* %i, align 4, !dbg !5818
  %cmp788 = icmp slt i32 %491, 4, !dbg !5821
  br i1 %cmp788, label %for.body790, label %for.end836, !dbg !5822

for.body790:                                      ; preds = %for.cond787
  %492 = load i32, i32* %cbp, align 4, !dbg !5823
  %493 = load i32, i32* %i, align 4, !dbg !5825
  %shl = shl i32 1, %493, !dbg !5826
  %and791 = and i32 %492, %shl, !dbg !5827
  %tobool792 = icmp ne i32 %and791, 0, !dbg !5827
  br i1 %tobool792, label %if.then793, label %if.end833, !dbg !5828

if.then793:                                       ; preds = %for.body790
  store i32 0, i32* %j, align 4, !dbg !5829
  br label %for.cond794, !dbg !5832

for.cond794:                                      ; preds = %for.inc830, %if.then793
  %494 = load i32, i32* %j, align 4, !dbg !5833
  %cmp795 = icmp slt i32 %494, 4, !dbg !5836
  br i1 %cmp795, label %for.body797, label %for.end832, !dbg !5837

for.body797:                                      ; preds = %for.cond794
  %495 = load i32, i32* %index, align 4, !dbg !5838
  %tobool798 = icmp ne i32 %495, 0, !dbg !5838
  br i1 %tobool798, label %cond.true799, label %cond.false811, !dbg !5838

cond.true799:                                     ; preds = %for.body797
  %496 = load i32, i32* %j, align 4, !dbg !5840
  %and800 = and i32 %496, 1, !dbg !5842
  %mul801 = mul nsw i32 1, %and800, !dbg !5843
  %497 = load i32, i32* %i, align 4, !dbg !5844
  %and802 = and i32 %497, 1, !dbg !5845
  %mul803 = mul nsw i32 2, %and802, !dbg !5846
  %add804 = add nsw i32 %mul801, %mul803, !dbg !5847
  %498 = load i32, i32* %j, align 4, !dbg !5848
  %and805 = and i32 %498, 2, !dbg !5849
  %mul806 = mul nsw i32 2, %and805, !dbg !5850
  %add807 = add nsw i32 %add804, %mul806, !dbg !5851
  %499 = load i32, i32* %i, align 4, !dbg !5852
  %and808 = and i32 %499, 2, !dbg !5853
  %mul809 = mul nsw i32 4, %and808, !dbg !5854
  %add810 = add nsw i32 %add807, %mul809, !dbg !5855
  br label %cond.end814, !dbg !5856

cond.false811:                                    ; preds = %for.body797
  %500 = load i32, i32* %i, align 4, !dbg !5857
  %mul812 = mul nsw i32 4, %500, !dbg !5858
  %501 = load i32, i32* %j, align 4, !dbg !5859
  %add813 = add nsw i32 %mul812, %501, !dbg !5860
  br label %cond.end814, !dbg !5861

cond.end814:                                      ; preds = %cond.false811, %cond.true799
  %cond815 = phi i32 [ %add810, %cond.true799 ], [ %add813, %cond.false811 ], !dbg !5863
  store i32 %cond815, i32* %k, align 4, !dbg !5865
  %502 = load i32, i32* %k, align 4, !dbg !5866
  %idxprom816 = sext i32 %502 to i64, !dbg !5867
  %arrayidx817 = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom816, !dbg !5867
  %503 = load i8, i8* %arrayidx817, align 1, !dbg !5867
  %idxprom818 = zext i8 %503 to i64, !dbg !5868
  %504 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5868
  %non_zero_count_cache819 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %504, i32 0, i32 56, !dbg !5869
  %arrayidx820 = getelementptr inbounds [120 x i8], [120 x i8]* %non_zero_count_cache819, i64 0, i64 %idxprom818, !dbg !5868
  store i8 1, i8* %arrayidx820, align 1, !dbg !5870
  %505 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5871
  %gb_slice821 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %505, i32 0, i32 10, !dbg !5873
  %506 = load i32, i32* %k, align 4, !dbg !5874
  %mul822 = mul nsw i32 16, %506, !dbg !5875
  %idxprom823 = sext i32 %mul822 to i64, !dbg !5876
  %507 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5876
  %mb = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %507, i32 0, i32 54, !dbg !5877
  %arrayidx824 = getelementptr inbounds [1536 x i16], [1536 x i16]* %mb, i64 0, i64 %idxprom823, !dbg !5876
  %508 = load i32, i32* %index, align 4, !dbg !5878
  %509 = load i32, i32* %type, align 4, !dbg !5879
  %call825 = call i32 @svq3_decode_block(%struct.GetBitContext* %gb_slice821, i16* %arrayidx824, i32 %508, i32 %509), !dbg !5880
  %tobool826 = icmp ne i32 %call825, 0, !dbg !5880
  br i1 %tobool826, label %if.then827, label %if.end829, !dbg !5881

if.then827:                                       ; preds = %cond.end814
  %510 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5882
  %avctx828 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %510, i32 0, i32 0, !dbg !5884
  %511 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx828, align 16, !dbg !5884
  %512 = bitcast %struct.AVCodecContext* %511 to i8*, !dbg !5882
  call void (i8*, i32, i8*, ...) @av_log(i8* %512, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.25, i32 0, i32 0)), !dbg !5885
  store i32 -1, i32* %retval, align 4, !dbg !5886
  br label %return, !dbg !5886

if.end829:                                        ; preds = %cond.end814
  br label %for.inc830, !dbg !5887

for.inc830:                                       ; preds = %if.end829
  %513 = load i32, i32* %j, align 4, !dbg !5888
  %inc831 = add nsw i32 %513, 1, !dbg !5888
  store i32 %inc831, i32* %j, align 4, !dbg !5888
  br label %for.cond794, !dbg !5890, !llvm.loop !5891

for.end832:                                       ; preds = %for.cond794
  br label %if.end833, !dbg !5893

if.end833:                                        ; preds = %for.end832, %for.body790
  br label %for.inc834, !dbg !5894

for.inc834:                                       ; preds = %if.end833
  %514 = load i32, i32* %i, align 4, !dbg !5896
  %inc835 = add nsw i32 %514, 1, !dbg !5896
  store i32 %inc835, i32* %i, align 4, !dbg !5896
  br label %for.cond787, !dbg !5898, !llvm.loop !5899

for.end836:                                       ; preds = %for.cond787
  %515 = load i32, i32* %cbp, align 4, !dbg !5901
  %and837 = and i32 %515, 48, !dbg !5903
  %tobool838 = icmp ne i32 %and837, 0, !dbg !5903
  br i1 %tobool838, label %if.then839, label %if.end892, !dbg !5904

if.then839:                                       ; preds = %for.end836
  store i32 1, i32* %i, align 4, !dbg !5905
  br label %for.cond840, !dbg !5908

for.cond840:                                      ; preds = %for.inc854, %if.then839
  %516 = load i32, i32* %i, align 4, !dbg !5909
  %cmp841 = icmp slt i32 %516, 3, !dbg !5912
  br i1 %cmp841, label %for.body843, label %for.end856, !dbg !5913

for.body843:                                      ; preds = %for.cond840
  %517 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5914
  %gb_slice844 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %517, i32 0, i32 10, !dbg !5916
  %518 = load i32, i32* %i, align 4, !dbg !5917
  %mul845 = mul nsw i32 256, %518, !dbg !5918
  %idxprom846 = sext i32 %mul845 to i64, !dbg !5919
  %519 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5919
  %mb847 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %519, i32 0, i32 54, !dbg !5920
  %arrayidx848 = getelementptr inbounds [1536 x i16], [1536 x i16]* %mb847, i64 0, i64 %idxprom846, !dbg !5919
  %call849 = call i32 @svq3_decode_block(%struct.GetBitContext* %gb_slice844, i16* %arrayidx848, i32 0, i32 3), !dbg !5921
  %tobool850 = icmp ne i32 %call849, 0, !dbg !5921
  br i1 %tobool850, label %if.then851, label %if.end853, !dbg !5922

if.then851:                                       ; preds = %for.body843
  %520 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5923
  %avctx852 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %520, i32 0, i32 0, !dbg !5925
  %521 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx852, align 16, !dbg !5925
  %522 = bitcast %struct.AVCodecContext* %521 to i8*, !dbg !5923
  call void (i8*, i32, i8*, ...) @av_log(i8* %522, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.26, i32 0, i32 0)), !dbg !5926
  store i32 -1, i32* %retval, align 4, !dbg !5927
  br label %return, !dbg !5927

if.end853:                                        ; preds = %for.body843
  br label %for.inc854, !dbg !5928

for.inc854:                                       ; preds = %if.end853
  %523 = load i32, i32* %i, align 4, !dbg !5930
  %inc855 = add nsw i32 %523, 1, !dbg !5930
  store i32 %inc855, i32* %i, align 4, !dbg !5930
  br label %for.cond840, !dbg !5932, !llvm.loop !5933

for.end856:                                       ; preds = %for.cond840
  %524 = load i32, i32* %cbp, align 4, !dbg !5935
  %and857 = and i32 %524, 32, !dbg !5937
  %tobool858 = icmp ne i32 %and857, 0, !dbg !5937
  br i1 %tobool858, label %if.then859, label %if.end891, !dbg !5938

if.then859:                                       ; preds = %for.end856
  store i32 1, i32* %i, align 4, !dbg !5939
  br label %for.cond860, !dbg !5942

for.cond860:                                      ; preds = %for.inc888, %if.then859
  %525 = load i32, i32* %i, align 4, !dbg !5943
  %cmp861 = icmp slt i32 %525, 3, !dbg !5946
  br i1 %cmp861, label %for.body863, label %for.end890, !dbg !5947

for.body863:                                      ; preds = %for.cond860
  store i32 0, i32* %j, align 4, !dbg !5948
  br label %for.cond864, !dbg !5951

for.cond864:                                      ; preds = %for.inc885, %for.body863
  %526 = load i32, i32* %j, align 4, !dbg !5952
  %cmp865 = icmp slt i32 %526, 4, !dbg !5955
  br i1 %cmp865, label %for.body867, label %for.end887, !dbg !5956

for.body867:                                      ; preds = %for.cond864
  %527 = load i32, i32* %i, align 4, !dbg !5957
  %mul868 = mul nsw i32 16, %527, !dbg !5959
  %528 = load i32, i32* %j, align 4, !dbg !5960
  %add869 = add nsw i32 %mul868, %528, !dbg !5961
  store i32 %add869, i32* %k, align 4, !dbg !5962
  %529 = load i32, i32* %k, align 4, !dbg !5963
  %idxprom870 = sext i32 %529 to i64, !dbg !5964
  %arrayidx871 = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom870, !dbg !5964
  %530 = load i8, i8* %arrayidx871, align 1, !dbg !5964
  %idxprom872 = zext i8 %530 to i64, !dbg !5965
  %531 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5965
  %non_zero_count_cache873 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %531, i32 0, i32 56, !dbg !5966
  %arrayidx874 = getelementptr inbounds [120 x i8], [120 x i8]* %non_zero_count_cache873, i64 0, i64 %idxprom872, !dbg !5965
  store i8 1, i8* %arrayidx874, align 1, !dbg !5967
  %532 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5968
  %gb_slice875 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %532, i32 0, i32 10, !dbg !5970
  %533 = load i32, i32* %k, align 4, !dbg !5971
  %mul876 = mul nsw i32 16, %533, !dbg !5972
  %idxprom877 = sext i32 %mul876 to i64, !dbg !5973
  %534 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5973
  %mb878 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %534, i32 0, i32 54, !dbg !5974
  %arrayidx879 = getelementptr inbounds [1536 x i16], [1536 x i16]* %mb878, i64 0, i64 %idxprom877, !dbg !5973
  %call880 = call i32 @svq3_decode_block(%struct.GetBitContext* %gb_slice875, i16* %arrayidx879, i32 1, i32 1), !dbg !5975
  %tobool881 = icmp ne i32 %call880, 0, !dbg !5975
  br i1 %tobool881, label %if.then882, label %if.end884, !dbg !5976

if.then882:                                       ; preds = %for.body867
  %535 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5977
  %avctx883 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %535, i32 0, i32 0, !dbg !5979
  %536 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx883, align 16, !dbg !5979
  %537 = bitcast %struct.AVCodecContext* %536 to i8*, !dbg !5977
  call void (i8*, i32, i8*, ...) @av_log(i8* %537, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.27, i32 0, i32 0)), !dbg !5980
  store i32 -1, i32* %retval, align 4, !dbg !5981
  br label %return, !dbg !5981

if.end884:                                        ; preds = %for.body867
  br label %for.inc885, !dbg !5982

for.inc885:                                       ; preds = %if.end884
  %538 = load i32, i32* %j, align 4, !dbg !5983
  %inc886 = add nsw i32 %538, 1, !dbg !5983
  store i32 %inc886, i32* %j, align 4, !dbg !5983
  br label %for.cond864, !dbg !5985, !llvm.loop !5986

for.end887:                                       ; preds = %for.cond864
  br label %for.inc888, !dbg !5988

for.inc888:                                       ; preds = %for.end887
  %539 = load i32, i32* %i, align 4, !dbg !5989
  %inc889 = add nsw i32 %539, 1, !dbg !5989
  store i32 %inc889, i32* %i, align 4, !dbg !5989
  br label %for.cond860, !dbg !5991, !llvm.loop !5992

for.end890:                                       ; preds = %for.cond860
  br label %if.end891, !dbg !5994

if.end891:                                        ; preds = %for.end890, %for.end856
  br label %if.end892, !dbg !5995

if.end892:                                        ; preds = %if.end891, %for.end836
  br label %if.end893, !dbg !5996

if.end893:                                        ; preds = %if.end892, %if.end775
  %540 = load i32, i32* %cbp, align 4, !dbg !5997
  %541 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !5998
  %cbp894 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %541, i32 0, i32 26, !dbg !5999
  store i32 %540, i32* %cbp894, align 16, !dbg !6000
  %542 = load i32, i32* %mb_type.addr, align 4, !dbg !6001
  %543 = load i32, i32* %mb_xy, align 4, !dbg !6002
  %idxprom895 = sext i32 %543 to i64, !dbg !6003
  %544 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6003
  %cur_pic896 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %544, i32 0, i32 6, !dbg !6004
  %545 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic896, align 16, !dbg !6004
  %mb_type897 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %545, i32 0, i32 4, !dbg !6005
  %546 = load i32*, i32** %mb_type897, align 8, !dbg !6005
  %arrayidx898 = getelementptr inbounds i32, i32* %546, i64 %idxprom895, !dbg !6003
  store i32 %542, i32* %arrayidx898, align 4, !dbg !6006
  %547 = load i32, i32* %mb_type.addr, align 4, !dbg !6007
  %and899 = and i32 %547, 7, !dbg !6009
  %tobool900 = icmp ne i32 %and899, 0, !dbg !6009
  br i1 %tobool900, label %if.then901, label %if.end906, !dbg !6010

if.then901:                                       ; preds = %if.end893
  %548 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6011
  %avctx902 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %548, i32 0, i32 0, !dbg !6012
  %549 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx902, align 16, !dbg !6012
  %550 = bitcast %struct.AVCodecContext* %549 to i8*, !dbg !6011
  %551 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6013
  %top_samples_available903 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %551, i32 0, i32 47, !dbg !6014
  %552 = load i32, i32* %top_samples_available903, align 16, !dbg !6014
  %553 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6015
  %left_samples_available904 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %553, i32 0, i32 49, !dbg !6016
  %554 = load i32, i32* %left_samples_available904, align 8, !dbg !6016
  %call905 = call i32 @ff_h264_check_intra_pred_mode(i8* %550, i32 %552, i32 %554, i32 0, i32 1), !dbg !6017
  %555 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6018
  %chroma_pred_mode = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %555, i32 0, i32 43, !dbg !6019
  store i32 %call905, i32* %chroma_pred_mode, align 8, !dbg !6020
  br label %if.end906, !dbg !6018

if.end906:                                        ; preds = %if.then901, %if.end893
  store i32 0, i32* %retval, align 4, !dbg !6021
  br label %return, !dbg !6021

return:                                           ; preds = %if.end906, %if.then882, %if.then851, %if.then827, %if.then772, %if.then751, %if.then718, %if.then627, %if.then547, %if.then490, %if.then347, %if.then319, %if.then310, %if.then39, %if.then35
  %556 = load i32, i32* %retval, align 4, !dbg !6022
  ret i32 %556, !dbg !6022
}

; Function Attrs: nounwind uwtable
define internal void @hl_decode_mb(%struct.SVQ3Context* %s) #1 !dbg !6023 {
entry:
  %s.addr.i120 = alloca %struct.SVQ3Context*, align 8
  call void @llvm.dbg.declare(metadata %struct.SVQ3Context** %s.addr.i120, metadata !6024, metadata !1727), !dbg !6028
  %mb_type.addr.i121 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %mb_type.addr.i121, metadata !6030, metadata !1727), !dbg !6031
  %block_offset.addr.i122 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %block_offset.addr.i122, metadata !6032, metadata !1727), !dbg !6033
  %linesize.addr.i123 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %linesize.addr.i123, metadata !6034, metadata !1727), !dbg !6035
  %dest_y.addr.i124 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %dest_y.addr.i124, metadata !6036, metadata !1727), !dbg !6037
  %i.i125 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i125, metadata !6038, metadata !1727), !dbg !6039
  %ptr.i126 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.i126, metadata !6040, metadata !1727), !dbg !6048
  %s.addr.i = alloca %struct.SVQ3Context*, align 8
  call void @llvm.dbg.declare(metadata %struct.SVQ3Context** %s.addr.i, metadata !6049, metadata !1727), !dbg !6051
  %mb_type.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %mb_type.addr.i, metadata !6055, metadata !1727), !dbg !6056
  %block_offset.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %block_offset.addr.i, metadata !6057, metadata !1727), !dbg !6058
  %linesize.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %linesize.addr.i, metadata !6059, metadata !1727), !dbg !6060
  %dest_y.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %dest_y.addr.i, metadata !6061, metadata !1727), !dbg !6062
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !6063, metadata !1727), !dbg !6064
  %qscale.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %qscale.i, metadata !6065, metadata !1727), !dbg !6066
  %ptr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.i, metadata !6067, metadata !1727), !dbg !6073
  %dir.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.i, metadata !6074, metadata !1727), !dbg !6075
  %topright.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %topright.i, metadata !6076, metadata !1727), !dbg !6077
  %nnz.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nnz.i, metadata !6078, metadata !1727), !dbg !6079
  %tr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tr.i, metadata !6080, metadata !1727), !dbg !6081
  %topright_avail.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topright_avail.i, metadata !6082, metadata !1727), !dbg !6085
  %s.addr = alloca %struct.SVQ3Context*, align 8
  %mb_x = alloca i32, align 4
  %mb_y = alloca i32, align 4
  %mb_xy = alloca i32, align 4
  %mb_type = alloca i32, align 4
  %dest_y = alloca i8*, align 8
  %dest_cb = alloca i8*, align 8
  %dest_cr = alloca i8*, align 8
  %linesize = alloca i32, align 4
  %uvlinesize = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %block_offset = alloca i32*, align 8
  %block_h = alloca i32, align 4
  %dest = alloca [2 x i8*], align 16
  %ptr = alloca i8*, align 8
  store %struct.SVQ3Context* %s, %struct.SVQ3Context** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SVQ3Context** %s.addr, metadata !6086, metadata !1727), !dbg !6087
  call void @llvm.dbg.declare(metadata i32* %mb_x, metadata !6088, metadata !1727), !dbg !6089
  %0 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6090
  %mb_x1 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %0, i32 0, i32 34, !dbg !6091
  %1 = load i32, i32* %mb_x1, align 16, !dbg !6091
  store i32 %1, i32* %mb_x, align 4, !dbg !6089
  call void @llvm.dbg.declare(metadata i32* %mb_y, metadata !6092, metadata !1727), !dbg !6093
  %2 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6094
  %mb_y2 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %2, i32 0, i32 35, !dbg !6095
  %3 = load i32, i32* %mb_y2, align 4, !dbg !6095
  store i32 %3, i32* %mb_y, align 4, !dbg !6093
  call void @llvm.dbg.declare(metadata i32* %mb_xy, metadata !6096, metadata !1727), !dbg !6097
  %4 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6098
  %mb_xy3 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %4, i32 0, i32 36, !dbg !6099
  %5 = load i32, i32* %mb_xy3, align 8, !dbg !6099
  store i32 %5, i32* %mb_xy, align 4, !dbg !6097
  call void @llvm.dbg.declare(metadata i32* %mb_type, metadata !6100, metadata !1727), !dbg !6101
  %6 = load i32, i32* %mb_xy, align 4, !dbg !6102
  %idxprom = sext i32 %6 to i64, !dbg !6103
  %7 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6103
  %cur_pic = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %7, i32 0, i32 6, !dbg !6104
  %8 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic, align 16, !dbg !6104
  %mb_type4 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %8, i32 0, i32 4, !dbg !6105
  %9 = load i32*, i32** %mb_type4, align 8, !dbg !6105
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom, !dbg !6103
  %10 = load i32, i32* %arrayidx, align 4, !dbg !6103
  store i32 %10, i32* %mb_type, align 4, !dbg !6101
  call void @llvm.dbg.declare(metadata i8** %dest_y, metadata !6106, metadata !1727), !dbg !6107
  call void @llvm.dbg.declare(metadata i8** %dest_cb, metadata !6108, metadata !1727), !dbg !6109
  call void @llvm.dbg.declare(metadata i8** %dest_cr, metadata !6110, metadata !1727), !dbg !6111
  call void @llvm.dbg.declare(metadata i32* %linesize, metadata !6112, metadata !1727), !dbg !6113
  call void @llvm.dbg.declare(metadata i32* %uvlinesize, metadata !6114, metadata !1727), !dbg !6115
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6116, metadata !1727), !dbg !6117
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6118, metadata !1727), !dbg !6119
  call void @llvm.dbg.declare(metadata i32** %block_offset, metadata !6120, metadata !1727), !dbg !6121
  %11 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6122
  %block_offset5 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %11, i32 0, i32 58, !dbg !6123
  %arrayidx6 = getelementptr inbounds [96 x i32], [96 x i32]* %block_offset5, i64 0, i64 0, !dbg !6122
  store i32* %arrayidx6, i32** %block_offset, align 8, !dbg !6121
  call void @llvm.dbg.declare(metadata i32* %block_h, metadata !6124, metadata !1727), !dbg !6125
  store i32 8, i32* %block_h, align 4, !dbg !6125
  %12 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6126
  %cur_pic7 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %12, i32 0, i32 6, !dbg !6127
  %13 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic7, align 16, !dbg !6127
  %f = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %13, i32 0, i32 0, !dbg !6128
  %14 = load %struct.AVFrame*, %struct.AVFrame** %f, align 8, !dbg !6128
  %linesize8 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %14, i32 0, i32 1, !dbg !6129
  %arrayidx9 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize8, i64 0, i64 0, !dbg !6126
  %15 = load i32, i32* %arrayidx9, align 8, !dbg !6126
  store i32 %15, i32* %linesize, align 4, !dbg !6130
  %16 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6131
  %cur_pic10 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %16, i32 0, i32 6, !dbg !6132
  %17 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic10, align 16, !dbg !6132
  %f11 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %17, i32 0, i32 0, !dbg !6133
  %18 = load %struct.AVFrame*, %struct.AVFrame** %f11, align 8, !dbg !6133
  %linesize12 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %18, i32 0, i32 1, !dbg !6134
  %arrayidx13 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize12, i64 0, i64 1, !dbg !6131
  %19 = load i32, i32* %arrayidx13, align 4, !dbg !6131
  store i32 %19, i32* %uvlinesize, align 4, !dbg !6135
  %20 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6136
  %cur_pic14 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %20, i32 0, i32 6, !dbg !6137
  %21 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic14, align 16, !dbg !6137
  %f15 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %21, i32 0, i32 0, !dbg !6138
  %22 = load %struct.AVFrame*, %struct.AVFrame** %f15, align 8, !dbg !6138
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %22, i32 0, i32 0, !dbg !6139
  %arrayidx16 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 0, !dbg !6136
  %23 = load i8*, i8** %arrayidx16, align 8, !dbg !6136
  %24 = load i32, i32* %mb_x, align 4, !dbg !6140
  %25 = load i32, i32* %mb_y, align 4, !dbg !6141
  %26 = load i32, i32* %linesize, align 4, !dbg !6142
  %mul = mul nsw i32 %25, %26, !dbg !6143
  %add = add nsw i32 %24, %mul, !dbg !6144
  %mul17 = mul nsw i32 %add, 16, !dbg !6145
  %idx.ext = sext i32 %mul17 to i64, !dbg !6146
  %add.ptr = getelementptr inbounds i8, i8* %23, i64 %idx.ext, !dbg !6146
  store i8* %add.ptr, i8** %dest_y, align 8, !dbg !6147
  %27 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6148
  %cur_pic18 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %27, i32 0, i32 6, !dbg !6149
  %28 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic18, align 16, !dbg !6149
  %f19 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %28, i32 0, i32 0, !dbg !6150
  %29 = load %struct.AVFrame*, %struct.AVFrame** %f19, align 8, !dbg !6150
  %data20 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %29, i32 0, i32 0, !dbg !6151
  %arrayidx21 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data20, i64 0, i64 1, !dbg !6148
  %30 = load i8*, i8** %arrayidx21, align 8, !dbg !6148
  %31 = load i32, i32* %mb_x, align 4, !dbg !6152
  %mul22 = mul nsw i32 %31, 8, !dbg !6153
  %idx.ext23 = sext i32 %mul22 to i64, !dbg !6154
  %add.ptr24 = getelementptr inbounds i8, i8* %30, i64 %idx.ext23, !dbg !6154
  %32 = load i32, i32* %mb_y, align 4, !dbg !6155
  %33 = load i32, i32* %uvlinesize, align 4, !dbg !6156
  %mul25 = mul nsw i32 %32, %33, !dbg !6157
  %mul26 = mul nsw i32 %mul25, 8, !dbg !6158
  %idx.ext27 = sext i32 %mul26 to i64, !dbg !6159
  %add.ptr28 = getelementptr inbounds i8, i8* %add.ptr24, i64 %idx.ext27, !dbg !6159
  store i8* %add.ptr28, i8** %dest_cb, align 8, !dbg !6160
  %34 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6161
  %cur_pic29 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %34, i32 0, i32 6, !dbg !6162
  %35 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic29, align 16, !dbg !6162
  %f30 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %35, i32 0, i32 0, !dbg !6163
  %36 = load %struct.AVFrame*, %struct.AVFrame** %f30, align 8, !dbg !6163
  %data31 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %36, i32 0, i32 0, !dbg !6164
  %arrayidx32 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data31, i64 0, i64 2, !dbg !6161
  %37 = load i8*, i8** %arrayidx32, align 8, !dbg !6161
  %38 = load i32, i32* %mb_x, align 4, !dbg !6165
  %mul33 = mul nsw i32 %38, 8, !dbg !6166
  %idx.ext34 = sext i32 %mul33 to i64, !dbg !6167
  %add.ptr35 = getelementptr inbounds i8, i8* %37, i64 %idx.ext34, !dbg !6167
  %39 = load i32, i32* %mb_y, align 4, !dbg !6168
  %40 = load i32, i32* %uvlinesize, align 4, !dbg !6169
  %mul36 = mul nsw i32 %39, %40, !dbg !6170
  %mul37 = mul nsw i32 %mul36, 8, !dbg !6171
  %idx.ext38 = sext i32 %mul37 to i64, !dbg !6172
  %add.ptr39 = getelementptr inbounds i8, i8* %add.ptr35, i64 %idx.ext38, !dbg !6172
  store i8* %add.ptr39, i8** %dest_cr, align 8, !dbg !6173
  %41 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6174
  %vdsp = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %41, i32 0, i32 5, !dbg !6175
  %prefetch = getelementptr inbounds %struct.VideoDSPContext, %struct.VideoDSPContext* %vdsp, i32 0, i32 1, !dbg !6176
  %42 = load void (i8*, i64, i32)*, void (i8*, i64, i32)** %prefetch, align 8, !dbg !6176
  %43 = load i8*, i8** %dest_y, align 8, !dbg !6177
  %44 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6178
  %mb_x40 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %44, i32 0, i32 34, !dbg !6179
  %45 = load i32, i32* %mb_x40, align 16, !dbg !6179
  %and = and i32 %45, 3, !dbg !6180
  %mul41 = mul nsw i32 %and, 4, !dbg !6181
  %46 = load i32, i32* %linesize, align 4, !dbg !6182
  %mul42 = mul nsw i32 %mul41, %46, !dbg !6183
  %idx.ext43 = sext i32 %mul42 to i64, !dbg !6184
  %add.ptr44 = getelementptr inbounds i8, i8* %43, i64 %idx.ext43, !dbg !6184
  %add.ptr45 = getelementptr inbounds i8, i8* %add.ptr44, i64 64, !dbg !6185
  %47 = load i32, i32* %linesize, align 4, !dbg !6186
  %conv = sext i32 %47 to i64, !dbg !6186
  call void %42(i8* %add.ptr45, i64 %conv, i32 4), !dbg !6174
  %48 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6187
  %vdsp46 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %48, i32 0, i32 5, !dbg !6188
  %prefetch47 = getelementptr inbounds %struct.VideoDSPContext, %struct.VideoDSPContext* %vdsp46, i32 0, i32 1, !dbg !6189
  %49 = load void (i8*, i64, i32)*, void (i8*, i64, i32)** %prefetch47, align 8, !dbg !6189
  %50 = load i8*, i8** %dest_cb, align 8, !dbg !6190
  %51 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6191
  %mb_x48 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %51, i32 0, i32 34, !dbg !6192
  %52 = load i32, i32* %mb_x48, align 16, !dbg !6192
  %and49 = and i32 %52, 7, !dbg !6193
  %53 = load i32, i32* %uvlinesize, align 4, !dbg !6194
  %mul50 = mul nsw i32 %and49, %53, !dbg !6195
  %idx.ext51 = sext i32 %mul50 to i64, !dbg !6196
  %add.ptr52 = getelementptr inbounds i8, i8* %50, i64 %idx.ext51, !dbg !6196
  %add.ptr53 = getelementptr inbounds i8, i8* %add.ptr52, i64 64, !dbg !6197
  %54 = load i8*, i8** %dest_cr, align 8, !dbg !6198
  %55 = load i8*, i8** %dest_cb, align 8, !dbg !6199
  %sub.ptr.lhs.cast = ptrtoint i8* %54 to i64, !dbg !6200
  %sub.ptr.rhs.cast = ptrtoint i8* %55 to i64, !dbg !6200
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6200
  call void %49(i8* %add.ptr53, i64 %sub.ptr.sub, i32 2), !dbg !6187
  %56 = load i32, i32* %mb_type, align 4, !dbg !6201
  %and54 = and i32 %56, 7, !dbg !6202
  %tobool = icmp ne i32 %and54, 0, !dbg !6202
  br i1 %tobool, label %if.then, label %if.end, !dbg !6203

if.then:                                          ; preds = %entry
  %57 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6204
  %chroma_pred_mode = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %57, i32 0, i32 43, !dbg !6205
  %58 = load i32, i32* %chroma_pred_mode, align 8, !dbg !6205
  %idxprom55 = sext i32 %58 to i64, !dbg !6206
  %59 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6206
  %hpc = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %59, i32 0, i32 2, !dbg !6207
  %pred8x8 = getelementptr inbounds %struct.H264PredContext, %struct.H264PredContext* %hpc, i32 0, i32 2, !dbg !6208
  %arrayidx56 = getelementptr inbounds [11 x void (i8*, i64)*], [11 x void (i8*, i64)*]* %pred8x8, i64 0, i64 %idxprom55, !dbg !6206
  %60 = load void (i8*, i64)*, void (i8*, i64)** %arrayidx56, align 8, !dbg !6206
  %61 = load i8*, i8** %dest_cb, align 8, !dbg !6209
  %62 = load i32, i32* %uvlinesize, align 4, !dbg !6210
  %conv57 = sext i32 %62 to i64, !dbg !6210
  call void %60(i8* %61, i64 %conv57), !dbg !6206
  %63 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6211
  %chroma_pred_mode58 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %63, i32 0, i32 43, !dbg !6212
  %64 = load i32, i32* %chroma_pred_mode58, align 8, !dbg !6212
  %idxprom59 = sext i32 %64 to i64, !dbg !6213
  %65 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6213
  %hpc60 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %65, i32 0, i32 2, !dbg !6214
  %pred8x861 = getelementptr inbounds %struct.H264PredContext, %struct.H264PredContext* %hpc60, i32 0, i32 2, !dbg !6215
  %arrayidx62 = getelementptr inbounds [11 x void (i8*, i64)*], [11 x void (i8*, i64)*]* %pred8x861, i64 0, i64 %idxprom59, !dbg !6213
  %66 = load void (i8*, i64)*, void (i8*, i64)** %arrayidx62, align 8, !dbg !6213
  %67 = load i8*, i8** %dest_cr, align 8, !dbg !6216
  %68 = load i32, i32* %uvlinesize, align 4, !dbg !6217
  %conv63 = sext i32 %68 to i64, !dbg !6217
  call void %66(i8* %67, i64 %conv63), !dbg !6213
  %69 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6218
  %70 = load i32, i32* %mb_type, align 4, !dbg !6219
  %71 = load i32*, i32** %block_offset, align 8, !dbg !6220
  %72 = load i32, i32* %linesize, align 4, !dbg !6221
  %73 = load i8*, i8** %dest_y, align 8, !dbg !6222
  store %struct.SVQ3Context* %69, %struct.SVQ3Context** %s.addr.i, align 8, !dbg !6223
  store i32 %70, i32* %mb_type.addr.i, align 4, !dbg !6223
  store i32* %71, i32** %block_offset.addr.i, align 8, !dbg !6223
  store i32 %72, i32* %linesize.addr.i, align 4, !dbg !6223
  store i8* %73, i8** %dest_y.addr.i, align 8, !dbg !6223
  %74 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr.i, align 8, !dbg !6224
  %qscale1.i = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %74, i32 0, i32 25, !dbg !6225
  %75 = load i32, i32* %qscale1.i, align 4, !dbg !6225
  store i32 %75, i32* %qscale.i, align 4, !dbg !6066
  %76 = load i32, i32* %mb_type.addr.i, align 4, !dbg !6226
  %and.i = and i32 %76, 1, !dbg !6227
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !6227
  br i1 %tobool.i, label %if.then.i, label %if.else36.i, !dbg !6228

if.then.i:                                        ; preds = %if.then
  store i32 0, i32* %i.i, align 4, !dbg !6229
  br label %for.cond.i, !dbg !6230

for.cond.i:                                       ; preds = %if.end35.i, %if.then.i
  %77 = load i32, i32* %i.i, align 4, !dbg !6231
  %cmp.i = icmp slt i32 %77, 16, !dbg !6233
  br i1 %cmp.i, label %for.body.i, label %for.end.i, !dbg !6234

for.body.i:                                       ; preds = %for.cond.i
  %78 = load i8*, i8** %dest_y.addr.i, align 8, !dbg !6235
  %79 = load i32, i32* %i.i, align 4, !dbg !6236
  %idxprom.i = sext i32 %79 to i64, !dbg !6237
  %80 = load i32*, i32** %block_offset.addr.i, align 8, !dbg !6237
  %arrayidx.i = getelementptr inbounds i32, i32* %80, i64 %idxprom.i, !dbg !6237
  %81 = load i32, i32* %arrayidx.i, align 4, !dbg !6237
  %idx.ext.i = sext i32 %81 to i64, !dbg !6238
  %add.ptr.i = getelementptr inbounds i8, i8* %78, i64 %idx.ext.i, !dbg !6238
  store i8* %add.ptr.i, i8** %ptr.i, align 8, !dbg !6073
  %82 = load i32, i32* %i.i, align 4, !dbg !6239
  %idxprom2.i = sext i32 %82 to i64, !dbg !6240
  %arrayidx3.i = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom2.i, !dbg !6240
  %83 = load i8, i8* %arrayidx3.i, align 1, !dbg !6240
  %idxprom4.i = zext i8 %83 to i64, !dbg !6241
  %84 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr.i, align 8, !dbg !6241
  %intra4x4_pred_mode_cache.i = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %84, i32 0, i32 45, !dbg !6242
  %arrayidx5.i = getelementptr inbounds [40 x i8], [40 x i8]* %intra4x4_pred_mode_cache.i, i64 0, i64 %idxprom4.i, !dbg !6241
  %85 = load i8, i8* %arrayidx5.i, align 1, !dbg !6241
  %conv.i = sext i8 %85 to i32, !dbg !6241
  store i32 %conv.i, i32* %dir.i, align 4, !dbg !6075
  %86 = load i32, i32* %dir.i, align 4, !dbg !6243
  %cmp6.i = icmp eq i32 %86, 3, !dbg !6244
  br i1 %cmp6.i, label %if.then10.i, label %lor.lhs.false.i, !dbg !6245

lor.lhs.false.i:                                  ; preds = %for.body.i
  %87 = load i32, i32* %dir.i, align 4, !dbg !6246
  %cmp8.i = icmp eq i32 %87, 7, !dbg !6248
  br i1 %cmp8.i, label %if.then10.i, label %if.else20.i, !dbg !6249

if.then10.i:                                      ; preds = %lor.lhs.false.i, %for.body.i
  %88 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr.i, align 8, !dbg !6250
  %topright_samples_available.i = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %88, i32 0, i32 48, !dbg !6251
  %89 = load i32, i32* %topright_samples_available.i, align 4, !dbg !6251
  %90 = load i32, i32* %i.i, align 4, !dbg !6252
  %shl.i = shl i32 %89, %90, !dbg !6253
  %and11.i = and i32 %shl.i, 32768, !dbg !6254
  store i32 %and11.i, i32* %topright_avail.i, align 4, !dbg !6085
  %91 = load i32, i32* %topright_avail.i, align 4, !dbg !6255
  %tobool12.i = icmp ne i32 %91, 0, !dbg !6255
  br i1 %tobool12.i, label %if.else.i, label %if.then13.i, !dbg !6257

if.then13.i:                                      ; preds = %if.then10.i
  %92 = load i32, i32* %linesize.addr.i, align 4, !dbg !6258
  %sub.i = sub nsw i32 3, %92, !dbg !6260
  %idxprom14.i = sext i32 %sub.i to i64, !dbg !6261
  %93 = load i8*, i8** %ptr.i, align 8, !dbg !6261
  %arrayidx15.i = getelementptr inbounds i8, i8* %93, i64 %idxprom14.i, !dbg !6261
  %94 = load i8, i8* %arrayidx15.i, align 1, !dbg !6261
  %conv16.i = zext i8 %94 to i32, !dbg !6261
  %mul.i = mul i32 %conv16.i, 16843009, !dbg !6262
  store i32 %mul.i, i32* %tr.i, align 4, !dbg !6263
  %95 = bitcast i32* %tr.i to i8*, !dbg !6264
  store i8* %95, i8** %topright.i, align 8, !dbg !6265
  br label %if.end.i, !dbg !6266

if.else.i:                                        ; preds = %if.then10.i
  %96 = load i8*, i8** %ptr.i, align 8, !dbg !6267
  %add.ptr17.i = getelementptr inbounds i8, i8* %96, i64 4, !dbg !6268
  %97 = load i32, i32* %linesize.addr.i, align 4, !dbg !6269
  %idx.ext18.i = sext i32 %97 to i64, !dbg !6270
  %idx.neg.i = sub i64 0, %idx.ext18.i, !dbg !6270
  %add.ptr19.i = getelementptr inbounds i8, i8* %add.ptr17.i, i64 %idx.neg.i, !dbg !6270
  store i8* %add.ptr19.i, i8** %topright.i, align 8, !dbg !6271
  br label %if.end.i, !dbg !6223

if.end.i:                                         ; preds = %if.else.i, %if.then13.i
  br label %if.end21.i, !dbg !6272

if.else20.i:                                      ; preds = %lor.lhs.false.i
  store i8* null, i8** %topright.i, align 8, !dbg !6273
  br label %if.end21.i, !dbg !6223

if.end21.i:                                       ; preds = %if.else20.i, %if.end.i
  %98 = load i32, i32* %dir.i, align 4, !dbg !6274
  %idxprom22.i = sext i32 %98 to i64, !dbg !6275
  %99 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr.i, align 8, !dbg !6275
  %hpc.i = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %99, i32 0, i32 2, !dbg !6276
  %pred4x4.i = getelementptr inbounds %struct.H264PredContext, %struct.H264PredContext* %hpc.i, i32 0, i32 0, !dbg !6277
  %arrayidx23.i = getelementptr inbounds [15 x void (i8*, i8*, i64)*], [15 x void (i8*, i8*, i64)*]* %pred4x4.i, i64 0, i64 %idxprom22.i, !dbg !6275
  %100 = load void (i8*, i8*, i64)*, void (i8*, i8*, i64)** %arrayidx23.i, align 8, !dbg !6275
  %101 = load i8*, i8** %ptr.i, align 8, !dbg !6278
  %102 = load i8*, i8** %topright.i, align 8, !dbg !6279
  %103 = load i32, i32* %linesize.addr.i, align 4, !dbg !6280
  %conv24.i = sext i32 %103 to i64, !dbg !6280
  call void %100(i8* %101, i8* %102, i64 %conv24.i) #9, !dbg !6275
  %104 = load i32, i32* %i.i, align 4, !dbg !6281
  %idxprom25.i = sext i32 %104 to i64, !dbg !6282
  %arrayidx26.i = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom25.i, !dbg !6282
  %105 = load i8, i8* %arrayidx26.i, align 1, !dbg !6282
  %idxprom27.i = zext i8 %105 to i64, !dbg !6283
  %106 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr.i, align 8, !dbg !6283
  %non_zero_count_cache.i = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %106, i32 0, i32 56, !dbg !6284
  %arrayidx28.i = getelementptr inbounds [120 x i8], [120 x i8]* %non_zero_count_cache.i, i64 0, i64 %idxprom27.i, !dbg !6283
  %107 = load i8, i8* %arrayidx28.i, align 1, !dbg !6283
  %conv29.i = zext i8 %107 to i32, !dbg !6283
  store i32 %conv29.i, i32* %nnz.i, align 4, !dbg !6285
  %108 = load i32, i32* %nnz.i, align 4, !dbg !6286
  %tobool30.i = icmp ne i32 %108, 0, !dbg !6286
  br i1 %tobool30.i, label %if.then31.i, label %if.end35.i, !dbg !6288

if.then31.i:                                      ; preds = %if.end21.i
  %109 = load i8*, i8** %ptr.i, align 8, !dbg !6289
  %110 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr.i, align 8, !dbg !6291
  %mb.i = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %110, i32 0, i32 54, !dbg !6292
  %arraydecay.i = getelementptr inbounds [1536 x i16], [1536 x i16]* %mb.i, i32 0, i32 0, !dbg !6291
  %111 = load i32, i32* %i.i, align 4, !dbg !6293
  %mul32.i = mul nsw i32 %111, 16, !dbg !6294
  %idx.ext33.i = sext i32 %mul32.i to i64, !dbg !6295
  %add.ptr34.i = getelementptr inbounds i16, i16* %arraydecay.i, i64 %idx.ext33.i, !dbg !6295
  %112 = load i32, i32* %linesize.addr.i, align 4, !dbg !6296
  %113 = load i32, i32* %qscale.i, align 4, !dbg !6297
  call void @svq3_add_idct_c(i8* %109, i16* %add.ptr34.i, i32 %112, i32 %113, i32 0) #9, !dbg !6298
  br label %if.end35.i, !dbg !6299

if.end35.i:                                       ; preds = %if.then31.i, %if.end21.i
  %114 = load i32, i32* %i.i, align 4, !dbg !6300
  %inc.i = add nsw i32 %114, 1, !dbg !6300
  store i32 %inc.i, i32* %i.i, align 4, !dbg !6300
  br label %for.cond.i, !dbg !6302, !llvm.loop !6303

for.end.i:                                        ; preds = %for.cond.i
  br label %hl_decode_mb_predict_luma.exit, !dbg !6305

if.else36.i:                                      ; preds = %if.then
  %115 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr.i, align 8, !dbg !6306
  %intra16x16_pred_mode.i = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %115, i32 0, i32 44, !dbg !6308
  %116 = load i32, i32* %intra16x16_pred_mode.i, align 4, !dbg !6308
  %idxprom37.i = sext i32 %116 to i64, !dbg !6309
  %117 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr.i, align 8, !dbg !6309
  %hpc38.i = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %117, i32 0, i32 2, !dbg !6310
  %pred16x16.i = getelementptr inbounds %struct.H264PredContext, %struct.H264PredContext* %hpc38.i, i32 0, i32 3, !dbg !6311
  %arrayidx39.i = getelementptr inbounds [9 x void (i8*, i64)*], [9 x void (i8*, i64)*]* %pred16x16.i, i64 0, i64 %idxprom37.i, !dbg !6309
  %118 = load void (i8*, i64)*, void (i8*, i64)** %arrayidx39.i, align 8, !dbg !6309
  %119 = load i8*, i8** %dest_y.addr.i, align 8, !dbg !6312
  %120 = load i32, i32* %linesize.addr.i, align 4, !dbg !6313
  %conv40.i = sext i32 %120 to i64, !dbg !6313
  call void %118(i8* %119, i64 %conv40.i) #9, !dbg !6309
  %121 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr.i, align 8, !dbg !6314
  %mb41.i = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %121, i32 0, i32 54, !dbg !6315
  %arraydecay42.i = getelementptr inbounds [1536 x i16], [1536 x i16]* %mb41.i, i32 0, i32 0, !dbg !6314
  %122 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr.i, align 8, !dbg !6316
  %mb_luma_dc.i = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %122, i32 0, i32 55, !dbg !6317
  %arrayidx43.i = getelementptr inbounds [3 x [32 x i16]], [3 x [32 x i16]]* %mb_luma_dc.i, i64 0, i64 0, !dbg !6316
  %arraydecay44.i = getelementptr inbounds [32 x i16], [32 x i16]* %arrayidx43.i, i32 0, i32 0, !dbg !6316
  %123 = load i32, i32* %qscale.i, align 4, !dbg !6318
  call void @svq3_luma_dc_dequant_idct_c(i16* %arraydecay42.i, i16* %arraydecay44.i, i32 %123) #9, !dbg !6319
  br label %hl_decode_mb_predict_luma.exit, !dbg !6223

hl_decode_mb_predict_luma.exit:                   ; preds = %for.end.i, %if.else36.i
  br label %if.end, !dbg !6320

if.end:                                           ; preds = %hl_decode_mb_predict_luma.exit, %entry
  %124 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6321
  %125 = load i32, i32* %mb_type, align 4, !dbg !6322
  %126 = load i32*, i32** %block_offset, align 8, !dbg !6323
  %127 = load i32, i32* %linesize, align 4, !dbg !6324
  %128 = load i8*, i8** %dest_y, align 8, !dbg !6325
  store %struct.SVQ3Context* %124, %struct.SVQ3Context** %s.addr.i120, align 8, !dbg !6326
  store i32 %125, i32* %mb_type.addr.i121, align 4, !dbg !6326
  store i32* %126, i32** %block_offset.addr.i122, align 8, !dbg !6326
  store i32 %127, i32* %linesize.addr.i123, align 4, !dbg !6326
  store i8* %128, i8** %dest_y.addr.i124, align 8, !dbg !6326
  %129 = load i32, i32* %mb_type.addr.i121, align 4, !dbg !6327
  %and.i127 = and i32 %129, 1, !dbg !6328
  %tobool.i128 = icmp ne i32 %and.i127, 0, !dbg !6328
  br i1 %tobool.i128, label %hl_decode_mb_idct_luma.exit, label %if.then.i129, !dbg !6329

if.then.i129:                                     ; preds = %if.end
  store i32 0, i32* %i.i125, align 4, !dbg !6330
  br label %for.cond.i131, !dbg !6331

for.cond.i131:                                    ; preds = %if.end.i146, %if.then.i129
  %130 = load i32, i32* %i.i125, align 4, !dbg !6332
  %cmp.i130 = icmp slt i32 %130, 16, !dbg !6334
  br i1 %cmp.i130, label %for.body.i136, label %for.end.i148, !dbg !6335

for.body.i136:                                    ; preds = %for.cond.i131
  %131 = load i32, i32* %i.i125, align 4, !dbg !6336
  %idxprom.i132 = sext i32 %131 to i64, !dbg !6337
  %arrayidx.i133 = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom.i132, !dbg !6337
  %132 = load i8, i8* %arrayidx.i133, align 1, !dbg !6337
  %idxprom1.i = zext i8 %132 to i64, !dbg !6338
  %133 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr.i120, align 8, !dbg !6338
  %non_zero_count_cache.i134 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %133, i32 0, i32 56, !dbg !6339
  %arrayidx2.i = getelementptr inbounds [120 x i8], [120 x i8]* %non_zero_count_cache.i134, i64 0, i64 %idxprom1.i, !dbg !6338
  %134 = load i8, i8* %arrayidx2.i, align 1, !dbg !6338
  %conv.i135 = zext i8 %134 to i32, !dbg !6338
  %tobool3.i = icmp ne i32 %conv.i135, 0, !dbg !6338
  br i1 %tobool3.i, label %if.then8.i, label %lor.lhs.false.i141, !dbg !6340

lor.lhs.false.i141:                               ; preds = %for.body.i136
  %135 = load i32, i32* %i.i125, align 4, !dbg !6341
  %mul.i137 = mul nsw i32 %135, 16, !dbg !6343
  %idxprom4.i138 = sext i32 %mul.i137 to i64, !dbg !6344
  %136 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr.i120, align 8, !dbg !6344
  %mb.i139 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %136, i32 0, i32 54, !dbg !6345
  %arrayidx5.i140 = getelementptr inbounds [1536 x i16], [1536 x i16]* %mb.i139, i64 0, i64 %idxprom4.i138, !dbg !6344
  %137 = load i16, i16* %arrayidx5.i140, align 2, !dbg !6344
  %conv6.i = sext i16 %137 to i32, !dbg !6344
  %tobool7.i = icmp ne i32 %conv6.i, 0, !dbg !6344
  br i1 %tobool7.i, label %if.then8.i, label %if.end.i146, !dbg !6346

if.then8.i:                                       ; preds = %lor.lhs.false.i141, %for.body.i136
  %138 = load i8*, i8** %dest_y.addr.i124, align 8, !dbg !6347
  %139 = load i32, i32* %i.i125, align 4, !dbg !6348
  %idxprom9.i = sext i32 %139 to i64, !dbg !6349
  %140 = load i32*, i32** %block_offset.addr.i122, align 8, !dbg !6349
  %arrayidx10.i = getelementptr inbounds i32, i32* %140, i64 %idxprom9.i, !dbg !6349
  %141 = load i32, i32* %arrayidx10.i, align 4, !dbg !6349
  %idx.ext.i142 = sext i32 %141 to i64, !dbg !6350
  %add.ptr.i143 = getelementptr inbounds i8, i8* %138, i64 %idx.ext.i142, !dbg !6350
  store i8* %add.ptr.i143, i8** %ptr.i126, align 8, !dbg !6048
  %142 = load i8*, i8** %ptr.i126, align 8, !dbg !6351
  %143 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr.i120, align 8, !dbg !6352
  %mb11.i = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %143, i32 0, i32 54, !dbg !6353
  %arraydecay.i144 = getelementptr inbounds [1536 x i16], [1536 x i16]* %mb11.i, i32 0, i32 0, !dbg !6352
  %144 = load i32, i32* %i.i125, align 4, !dbg !6354
  %mul12.i = mul nsw i32 %144, 16, !dbg !6355
  %idx.ext13.i = sext i32 %mul12.i to i64, !dbg !6356
  %add.ptr14.i = getelementptr inbounds i16, i16* %arraydecay.i144, i64 %idx.ext13.i, !dbg !6356
  %145 = load i32, i32* %linesize.addr.i123, align 4, !dbg !6357
  %146 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr.i120, align 8, !dbg !6358
  %qscale.i145 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %146, i32 0, i32 25, !dbg !6359
  %147 = load i32, i32* %qscale.i145, align 4, !dbg !6359
  %148 = load i32, i32* %mb_type.addr.i121, align 4, !dbg !6360
  %and15.i = and i32 %148, 7, !dbg !6361
  %tobool16.i = icmp ne i32 %and15.i, 0, !dbg !6362
  %cond.i = select i1 %tobool16.i, i32 1, i32 0, !dbg !6362
  call void @svq3_add_idct_c(i8* %142, i16* %add.ptr14.i, i32 %145, i32 %147, i32 %cond.i) #9, !dbg !6363
  br label %if.end.i146, !dbg !6364

if.end.i146:                                      ; preds = %if.then8.i, %lor.lhs.false.i141
  %149 = load i32, i32* %i.i125, align 4, !dbg !6365
  %inc.i147 = add nsw i32 %149, 1, !dbg !6365
  store i32 %inc.i147, i32* %i.i125, align 4, !dbg !6365
  br label %for.cond.i131, !dbg !6367, !llvm.loop !6368

for.end.i148:                                     ; preds = %for.cond.i131
  br label %hl_decode_mb_idct_luma.exit, !dbg !6370

hl_decode_mb_idct_luma.exit:                      ; preds = %if.end, %for.end.i148
  %150 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6371
  %cbp = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %150, i32 0, i32 26, !dbg !6373
  %151 = load i32, i32* %cbp, align 16, !dbg !6373
  %and64 = and i32 %151, 48, !dbg !6374
  %tobool65 = icmp ne i32 %and64, 0, !dbg !6374
  br i1 %tobool65, label %if.then66, label %if.end119, !dbg !6375

if.then66:                                        ; preds = %hl_decode_mb_idct_luma.exit
  call void @llvm.dbg.declare(metadata [2 x i8*]* %dest, metadata !6376, metadata !1727), !dbg !6379
  %arrayinit.begin = getelementptr inbounds [2 x i8*], [2 x i8*]* %dest, i64 0, i64 0, !dbg !6380
  %152 = load i8*, i8** %dest_cb, align 8, !dbg !6381
  store i8* %152, i8** %arrayinit.begin, align 8, !dbg !6380
  %arrayinit.element = getelementptr inbounds i8*, i8** %arrayinit.begin, i64 1, !dbg !6380
  %153 = load i8*, i8** %dest_cr, align 8, !dbg !6382
  store i8* %153, i8** %arrayinit.element, align 8, !dbg !6380
  %154 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6383
  %h264dsp = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %154, i32 0, i32 1, !dbg !6384
  %h264_chroma_dc_dequant_idct = getelementptr inbounds %struct.H264DSPContext, %struct.H264DSPContext* %h264dsp, i32 0, i32 24, !dbg !6385
  %155 = load void (i16*, i32)*, void (i16*, i32)** %h264_chroma_dc_dequant_idct, align 8, !dbg !6385
  %156 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6386
  %mb = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %156, i32 0, i32 54, !dbg !6387
  %arraydecay = getelementptr inbounds [1536 x i16], [1536 x i16]* %mb, i32 0, i32 0, !dbg !6386
  %add.ptr67 = getelementptr inbounds i16, i16* %arraydecay, i64 256, !dbg !6388
  %157 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6389
  %dequant4_coeff = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %157, i32 0, i32 57, !dbg !6390
  %arrayidx68 = getelementptr inbounds [88 x [16 x i32]], [88 x [16 x i32]]* %dequant4_coeff, i64 0, i64 4, !dbg !6389
  %arrayidx69 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx68, i64 0, i64 0, !dbg !6389
  %158 = load i32, i32* %arrayidx69, align 8, !dbg !6389
  call void %155(i16* %add.ptr67, i32 %158), !dbg !6383
  %159 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6391
  %h264dsp70 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %159, i32 0, i32 1, !dbg !6392
  %h264_chroma_dc_dequant_idct71 = getelementptr inbounds %struct.H264DSPContext, %struct.H264DSPContext* %h264dsp70, i32 0, i32 24, !dbg !6393
  %160 = load void (i16*, i32)*, void (i16*, i32)** %h264_chroma_dc_dequant_idct71, align 8, !dbg !6393
  %161 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6394
  %mb72 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %161, i32 0, i32 54, !dbg !6395
  %arraydecay73 = getelementptr inbounds [1536 x i16], [1536 x i16]* %mb72, i32 0, i32 0, !dbg !6394
  %add.ptr74 = getelementptr inbounds i16, i16* %arraydecay73, i64 512, !dbg !6396
  %162 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6397
  %dequant4_coeff75 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %162, i32 0, i32 57, !dbg !6398
  %arrayidx76 = getelementptr inbounds [88 x [16 x i32]], [88 x [16 x i32]]* %dequant4_coeff75, i64 0, i64 4, !dbg !6397
  %arrayidx77 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx76, i64 0, i64 0, !dbg !6397
  %163 = load i32, i32* %arrayidx77, align 8, !dbg !6397
  call void %160(i16* %add.ptr74, i32 %163), !dbg !6391
  store i32 1, i32* %j, align 4, !dbg !6399
  br label %for.cond, !dbg !6401

for.cond:                                         ; preds = %for.inc116, %if.then66
  %164 = load i32, i32* %j, align 4, !dbg !6402
  %cmp = icmp slt i32 %164, 3, !dbg !6405
  br i1 %cmp, label %for.body, label %for.end118, !dbg !6406

for.body:                                         ; preds = %for.cond
  %165 = load i32, i32* %j, align 4, !dbg !6407
  %mul79 = mul nsw i32 %165, 16, !dbg !6410
  store i32 %mul79, i32* %i, align 4, !dbg !6411
  br label %for.cond80, !dbg !6412

for.cond80:                                       ; preds = %for.inc, %for.body
  %166 = load i32, i32* %i, align 4, !dbg !6413
  %167 = load i32, i32* %j, align 4, !dbg !6416
  %mul81 = mul nsw i32 %167, 16, !dbg !6417
  %add82 = add nsw i32 %mul81, 4, !dbg !6418
  %cmp83 = icmp slt i32 %166, %add82, !dbg !6419
  br i1 %cmp83, label %for.body85, label %for.end, !dbg !6420

for.body85:                                       ; preds = %for.cond80
  %168 = load i32, i32* %i, align 4, !dbg !6421
  %idxprom86 = sext i32 %168 to i64, !dbg !6423
  %arrayidx87 = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom86, !dbg !6423
  %169 = load i8, i8* %arrayidx87, align 1, !dbg !6423
  %idxprom88 = zext i8 %169 to i64, !dbg !6424
  %170 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6424
  %non_zero_count_cache = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %170, i32 0, i32 56, !dbg !6425
  %arrayidx89 = getelementptr inbounds [120 x i8], [120 x i8]* %non_zero_count_cache, i64 0, i64 %idxprom88, !dbg !6424
  %171 = load i8, i8* %arrayidx89, align 1, !dbg !6424
  %conv90 = zext i8 %171 to i32, !dbg !6424
  %tobool91 = icmp ne i32 %conv90, 0, !dbg !6424
  br i1 %tobool91, label %if.then98, label %lor.lhs.false, !dbg !6426

lor.lhs.false:                                    ; preds = %for.body85
  %172 = load i32, i32* %i, align 4, !dbg !6427
  %mul92 = mul nsw i32 %172, 16, !dbg !6429
  %idxprom93 = sext i32 %mul92 to i64, !dbg !6430
  %173 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6430
  %mb94 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %173, i32 0, i32 54, !dbg !6431
  %arrayidx95 = getelementptr inbounds [1536 x i16], [1536 x i16]* %mb94, i64 0, i64 %idxprom93, !dbg !6430
  %174 = load i16, i16* %arrayidx95, align 2, !dbg !6430
  %conv96 = sext i16 %174 to i32, !dbg !6430
  %tobool97 = icmp ne i32 %conv96, 0, !dbg !6430
  br i1 %tobool97, label %if.then98, label %if.end115, !dbg !6432

if.then98:                                        ; preds = %lor.lhs.false, %for.body85
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !6433, metadata !1727), !dbg !6435
  %175 = load i32, i32* %j, align 4, !dbg !6436
  %sub = sub nsw i32 %175, 1, !dbg !6437
  %idxprom99 = sext i32 %sub to i64, !dbg !6438
  %arrayidx100 = getelementptr inbounds [2 x i8*], [2 x i8*]* %dest, i64 0, i64 %idxprom99, !dbg !6438
  %176 = load i8*, i8** %arrayidx100, align 8, !dbg !6438
  %177 = load i32, i32* %i, align 4, !dbg !6439
  %idxprom101 = sext i32 %177 to i64, !dbg !6440
  %178 = load i32*, i32** %block_offset, align 8, !dbg !6440
  %arrayidx102 = getelementptr inbounds i32, i32* %178, i64 %idxprom101, !dbg !6440
  %179 = load i32, i32* %arrayidx102, align 4, !dbg !6440
  %idx.ext103 = sext i32 %179 to i64, !dbg !6441
  %add.ptr104 = getelementptr inbounds i8, i8* %176, i64 %idx.ext103, !dbg !6441
  store i8* %add.ptr104, i8** %ptr, align 8, !dbg !6435
  %180 = load i8*, i8** %ptr, align 8, !dbg !6442
  %181 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6443
  %mb105 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %181, i32 0, i32 54, !dbg !6444
  %arraydecay106 = getelementptr inbounds [1536 x i16], [1536 x i16]* %mb105, i32 0, i32 0, !dbg !6443
  %182 = load i32, i32* %i, align 4, !dbg !6445
  %mul107 = mul nsw i32 %182, 16, !dbg !6446
  %idx.ext108 = sext i32 %mul107 to i64, !dbg !6447
  %add.ptr109 = getelementptr inbounds i16, i16* %arraydecay106, i64 %idx.ext108, !dbg !6447
  %183 = load i32, i32* %uvlinesize, align 4, !dbg !6448
  %184 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6449
  %qscale = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %184, i32 0, i32 25, !dbg !6450
  %185 = load i32, i32* %qscale, align 4, !dbg !6450
  %add110 = add nsw i32 %185, 12, !dbg !6451
  %idxprom111 = sext i32 %add110 to i64, !dbg !6452
  %arrayidx112 = getelementptr inbounds [88 x i8], [88 x i8]* getelementptr inbounds ([7 x [88 x i8]], [7 x [88 x i8]]* @ff_h264_chroma_qp, i64 0, i64 0), i64 0, i64 %idxprom111, !dbg !6452
  %186 = load i8, i8* %arrayidx112, align 1, !dbg !6452
  %conv113 = zext i8 %186 to i32, !dbg !6452
  %sub114 = sub nsw i32 %conv113, 12, !dbg !6453
  call void @svq3_add_idct_c(i8* %180, i16* %add.ptr109, i32 %183, i32 %sub114, i32 2), !dbg !6454
  br label %if.end115, !dbg !6455

if.end115:                                        ; preds = %if.then98, %lor.lhs.false
  br label %for.inc, !dbg !6456

for.inc:                                          ; preds = %if.end115
  %187 = load i32, i32* %i, align 4, !dbg !6458
  %inc = add nsw i32 %187, 1, !dbg !6458
  store i32 %inc, i32* %i, align 4, !dbg !6458
  br label %for.cond80, !dbg !6460, !llvm.loop !6461

for.end:                                          ; preds = %for.cond80
  br label %for.inc116, !dbg !6463

for.inc116:                                       ; preds = %for.end
  %188 = load i32, i32* %j, align 4, !dbg !6464
  %inc117 = add nsw i32 %188, 1, !dbg !6464
  store i32 %inc117, i32* %j, align 4, !dbg !6464
  br label %for.cond, !dbg !6466, !llvm.loop !6467

for.end118:                                       ; preds = %for.cond
  br label %if.end119, !dbg !6469

if.end119:                                        ; preds = %for.end118, %hl_decode_mb_idct_luma.exit
  ret void, !dbg !6470
}

declare void @ff_draw_horiz_band(%struct.AVCodecContext*, %struct.AVFrame*, %struct.AVFrame*, i32, i32, i32, i32, i32) #3

declare void @av_fast_malloc(i8*, i32*, i64) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #6

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits_long(%struct.GetBitContext* %s, i32 %n) #5 !dbg !6471 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !6472, metadata !1727), !dbg !6477
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !6479, metadata !1727), !dbg !6480
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !6481, metadata !1727), !dbg !6482
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !6483, metadata !1727), !dbg !6484
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6485, metadata !1727), !dbg !6486
  %0 = load i32, i32* %n.addr, align 4, !dbg !6487
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6488
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %1, i32 0, i32 2, !dbg !6489
  %2 = load i32, i32* %index, align 8, !dbg !6489
  %sub = sub nsw i32 0, %2, !dbg !6490
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6491
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 4, !dbg !6492
  %4 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !6492
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6493
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 2, !dbg !6494
  %6 = load i32, i32* %index1, align 8, !dbg !6494
  %sub2 = sub nsw i32 %4, %6, !dbg !6495
  store i32 %0, i32* %a.addr.i, align 4, !dbg !6496
  store i32 %sub, i32* %amin.addr.i, align 4, !dbg !6496
  store i32 %sub2, i32* %amax.addr.i, align 4, !dbg !6496
  %7 = load i32, i32* %a.addr.i, align 4, !dbg !6497
  %8 = load i32, i32* %amin.addr.i, align 4, !dbg !6499
  %cmp.i = icmp slt i32 %7, %8, !dbg !6500
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !6501

if.then.i:                                        ; preds = %entry
  %9 = load i32, i32* %amin.addr.i, align 4, !dbg !6502
  store i32 %9, i32* %retval.i, align 4, !dbg !6504
  br label %av_clip_c.exit, !dbg !6504

if.else.i:                                        ; preds = %entry
  %10 = load i32, i32* %a.addr.i, align 4, !dbg !6505
  %11 = load i32, i32* %amax.addr.i, align 4, !dbg !6507
  %cmp1.i = icmp sgt i32 %10, %11, !dbg !6508
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !6509

if.then2.i:                                       ; preds = %if.else.i
  %12 = load i32, i32* %amax.addr.i, align 4, !dbg !6510
  store i32 %12, i32* %retval.i, align 4, !dbg !6512
  br label %av_clip_c.exit, !dbg !6512

if.else3.i:                                       ; preds = %if.else.i
  %13 = load i32, i32* %a.addr.i, align 4, !dbg !6513
  store i32 %13, i32* %retval.i, align 4, !dbg !6514
  br label %av_clip_c.exit, !dbg !6514

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %14 = load i32, i32* %retval.i, align 4, !dbg !6515
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6516
  %index3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !6517
  %16 = load i32, i32* %index3, align 8, !dbg !6518
  %add = add nsw i32 %16, %14, !dbg !6518
  store i32 %add, i32* %index3, align 8, !dbg !6518
  ret void, !dbg !6519
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #2

declare void @avpriv_report_missing_feature(i8*, i8*, ...) #3

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits1(%struct.GetBitContext* %s) #5 !dbg !6520 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !6523, metadata !1727), !dbg !6524
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6525
  call void @skip_bits(%struct.GetBitContext* %0, i32 1), !dbg !6526
  ret void, !dbg !6527
}

declare %struct.AVBufferRef* @av_buffer_allocz(i32) #3

declare i32 @ff_get_buffer(%struct.AVCodecContext*, %struct.AVFrame*, i32) #3

declare i8* @av_mallocz_array(i64, i64) #3

; Function Attrs: nounwind uwtable
define internal void @free_picture(%struct.AVCodecContext* %avctx, %struct.SVQ3Frame* %pic) #1 !dbg !6528 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %pic.addr = alloca %struct.SVQ3Frame*, align 8
  %i = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !6531, metadata !1727), !dbg !6532
  store %struct.SVQ3Frame* %pic, %struct.SVQ3Frame** %pic.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SVQ3Frame** %pic.addr, metadata !6533, metadata !1727), !dbg !6534
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6535, metadata !1727), !dbg !6536
  store i32 0, i32* %i, align 4, !dbg !6537
  br label %for.cond, !dbg !6539

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6540
  %cmp = icmp slt i32 %0, 2, !dbg !6543
  br i1 %cmp, label %for.body, label %for.end, !dbg !6544

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !6545
  %idxprom = sext i32 %1 to i64, !dbg !6547
  %2 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %pic.addr, align 8, !dbg !6547
  %motion_val_buf = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %2, i32 0, i32 1, !dbg !6548
  %arrayidx = getelementptr inbounds [2 x %struct.AVBufferRef*], [2 x %struct.AVBufferRef*]* %motion_val_buf, i64 0, i64 %idxprom, !dbg !6547
  call void @av_buffer_unref(%struct.AVBufferRef** %arrayidx), !dbg !6549
  %3 = load i32, i32* %i, align 4, !dbg !6550
  %idxprom1 = sext i32 %3 to i64, !dbg !6551
  %4 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %pic.addr, align 8, !dbg !6551
  %ref_index_buf = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %4, i32 0, i32 5, !dbg !6552
  %arrayidx2 = getelementptr inbounds [2 x %struct.AVBufferRef*], [2 x %struct.AVBufferRef*]* %ref_index_buf, i64 0, i64 %idxprom1, !dbg !6551
  call void @av_buffer_unref(%struct.AVBufferRef** %arrayidx2), !dbg !6553
  br label %for.inc, !dbg !6554

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !6555
  %inc = add nsw i32 %5, 1, !dbg !6555
  store i32 %inc, i32* %i, align 4, !dbg !6555
  br label %for.cond, !dbg !6557, !llvm.loop !6558

for.end:                                          ; preds = %for.cond
  %6 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %pic.addr, align 8, !dbg !6560
  %mb_type_buf = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %6, i32 0, i32 3, !dbg !6561
  call void @av_buffer_unref(%struct.AVBufferRef** %mb_type_buf), !dbg !6562
  %7 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %pic.addr, align 8, !dbg !6563
  %f = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %7, i32 0, i32 0, !dbg !6564
  %8 = load %struct.AVFrame*, %struct.AVFrame** %f, align 8, !dbg !6564
  call void @av_frame_unref(%struct.AVFrame* %8), !dbg !6565
  ret void, !dbg !6566
}

declare void @av_buffer_unref(%struct.AVBufferRef**) #3

; Function Attrs: inlinehint nounwind uwtable
define internal void @svq3_mc_dir_part(%struct.SVQ3Context* %s, i32 %x, i32 %y, i32 %width, i32 %height, i32 %mx, i32 %my, i32 %dxy, i32 %thirdpel, i32 %dir, i32 %avg) #5 !dbg !6567 {
entry:
  %retval.i154 = alloca i32, align 4
  %a.addr.i155 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i155, metadata !6472, metadata !1727), !dbg !6570
  %amin.addr.i156 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i156, metadata !6479, metadata !1727), !dbg !6574
  %amax.addr.i157 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i157, metadata !6481, metadata !1727), !dbg !6575
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !6472, metadata !1727), !dbg !6576
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !6479, metadata !1727), !dbg !6578
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !6481, metadata !1727), !dbg !6579
  %s.addr = alloca %struct.SVQ3Context*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %mx.addr = alloca i32, align 4
  %my.addr = alloca i32, align 4
  %dxy.addr = alloca i32, align 4
  %thirdpel.addr = alloca i32, align 4
  %dir.addr = alloca i32, align 4
  %avg.addr = alloca i32, align 4
  %pic = alloca %struct.SVQ3Frame*, align 8
  %src = alloca i8*, align 8
  %dest = alloca i8*, align 8
  %i = alloca i32, align 4
  %emu = alloca i32, align 4
  %blocksize = alloca i32, align 4
  %linesize = alloca i32, align 4
  %uvlinesize = alloca i32, align 4
  store %struct.SVQ3Context* %s, %struct.SVQ3Context** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SVQ3Context** %s.addr, metadata !6580, metadata !1727), !dbg !6581
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !6582, metadata !1727), !dbg !6583
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !6584, metadata !1727), !dbg !6585
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !6586, metadata !1727), !dbg !6587
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !6588, metadata !1727), !dbg !6589
  store i32 %mx, i32* %mx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mx.addr, metadata !6590, metadata !1727), !dbg !6591
  store i32 %my, i32* %my.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %my.addr, metadata !6592, metadata !1727), !dbg !6593
  store i32 %dxy, i32* %dxy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dxy.addr, metadata !6594, metadata !1727), !dbg !6595
  store i32 %thirdpel, i32* %thirdpel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %thirdpel.addr, metadata !6596, metadata !1727), !dbg !6597
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !6598, metadata !1727), !dbg !6599
  store i32 %avg, i32* %avg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %avg.addr, metadata !6600, metadata !1727), !dbg !6601
  call void @llvm.dbg.declare(metadata %struct.SVQ3Frame** %pic, metadata !6602, metadata !1727), !dbg !6605
  %0 = load i32, i32* %dir.addr, align 4, !dbg !6606
  %cmp = icmp eq i32 %0, 0, !dbg !6607
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6608

cond.true:                                        ; preds = %entry
  %1 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6609
  %last_pic = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %1, i32 0, i32 8, !dbg !6611
  %2 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %last_pic, align 16, !dbg !6611
  br label %cond.end, !dbg !6612

cond.false:                                       ; preds = %entry
  %3 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6613
  %next_pic = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %3, i32 0, i32 7, !dbg !6615
  %4 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %next_pic, align 8, !dbg !6615
  br label %cond.end, !dbg !6616

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.SVQ3Frame* [ %2, %cond.true ], [ %4, %cond.false ], !dbg !6617
  store %struct.SVQ3Frame* %cond, %struct.SVQ3Frame** %pic, align 8, !dbg !6619
  call void @llvm.dbg.declare(metadata i8** %src, metadata !6620, metadata !1727), !dbg !6621
  call void @llvm.dbg.declare(metadata i8** %dest, metadata !6622, metadata !1727), !dbg !6623
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6624, metadata !1727), !dbg !6625
  call void @llvm.dbg.declare(metadata i32* %emu, metadata !6626, metadata !1727), !dbg !6627
  store i32 0, i32* %emu, align 4, !dbg !6627
  call void @llvm.dbg.declare(metadata i32* %blocksize, metadata !6628, metadata !1727), !dbg !6629
  %5 = load i32, i32* %width.addr, align 4, !dbg !6630
  %shr = ashr i32 %5, 3, !dbg !6631
  %sub = sub nsw i32 2, %shr, !dbg !6632
  store i32 %sub, i32* %blocksize, align 4, !dbg !6629
  call void @llvm.dbg.declare(metadata i32* %linesize, metadata !6633, metadata !1727), !dbg !6634
  %6 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6635
  %cur_pic = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %6, i32 0, i32 6, !dbg !6636
  %7 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic, align 16, !dbg !6636
  %f = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %7, i32 0, i32 0, !dbg !6637
  %8 = load %struct.AVFrame*, %struct.AVFrame** %f, align 8, !dbg !6637
  %linesize1 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %8, i32 0, i32 1, !dbg !6638
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %linesize1, i64 0, i64 0, !dbg !6635
  %9 = load i32, i32* %arrayidx, align 8, !dbg !6635
  store i32 %9, i32* %linesize, align 4, !dbg !6634
  call void @llvm.dbg.declare(metadata i32* %uvlinesize, metadata !6639, metadata !1727), !dbg !6640
  %10 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6641
  %cur_pic2 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %10, i32 0, i32 6, !dbg !6642
  %11 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic2, align 16, !dbg !6642
  %f3 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %11, i32 0, i32 0, !dbg !6643
  %12 = load %struct.AVFrame*, %struct.AVFrame** %f3, align 8, !dbg !6643
  %linesize4 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %12, i32 0, i32 1, !dbg !6644
  %arrayidx5 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize4, i64 0, i64 1, !dbg !6641
  %13 = load i32, i32* %arrayidx5, align 4, !dbg !6641
  store i32 %13, i32* %uvlinesize, align 4, !dbg !6640
  %14 = load i32, i32* %x.addr, align 4, !dbg !6645
  %15 = load i32, i32* %mx.addr, align 4, !dbg !6646
  %add = add nsw i32 %15, %14, !dbg !6646
  store i32 %add, i32* %mx.addr, align 4, !dbg !6646
  %16 = load i32, i32* %y.addr, align 4, !dbg !6647
  %17 = load i32, i32* %my.addr, align 4, !dbg !6648
  %add6 = add nsw i32 %17, %16, !dbg !6648
  store i32 %add6, i32* %my.addr, align 4, !dbg !6648
  %18 = load i32, i32* %mx.addr, align 4, !dbg !6649
  %cmp7 = icmp slt i32 %18, 0, !dbg !6650
  br i1 %cmp7, label %if.then, label %lor.lhs.false, !dbg !6651

lor.lhs.false:                                    ; preds = %cond.end
  %19 = load i32, i32* %mx.addr, align 4, !dbg !6652
  %20 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6654
  %h_edge_pos = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %20, i32 0, i32 21, !dbg !6655
  %21 = load i32, i32* %h_edge_pos, align 4, !dbg !6655
  %22 = load i32, i32* %width.addr, align 4, !dbg !6656
  %sub8 = sub nsw i32 %21, %22, !dbg !6657
  %sub9 = sub nsw i32 %sub8, 1, !dbg !6658
  %cmp10 = icmp sge i32 %19, %sub9, !dbg !6659
  br i1 %cmp10, label %if.then, label %lor.lhs.false11, !dbg !6660

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %23 = load i32, i32* %my.addr, align 4, !dbg !6661
  %cmp12 = icmp slt i32 %23, 0, !dbg !6662
  br i1 %cmp12, label %if.then, label %lor.lhs.false13, !dbg !6663

lor.lhs.false13:                                  ; preds = %lor.lhs.false11
  %24 = load i32, i32* %my.addr, align 4, !dbg !6664
  %25 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6665
  %v_edge_pos = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %25, i32 0, i32 22, !dbg !6666
  %26 = load i32, i32* %v_edge_pos, align 16, !dbg !6666
  %27 = load i32, i32* %height.addr, align 4, !dbg !6667
  %sub14 = sub nsw i32 %26, %27, !dbg !6668
  %sub15 = sub nsw i32 %sub14, 1, !dbg !6669
  %cmp16 = icmp sge i32 %24, %sub15, !dbg !6670
  br i1 %cmp16, label %if.then, label %if.end, !dbg !6671

if.then:                                          ; preds = %lor.lhs.false13, %lor.lhs.false11, %lor.lhs.false, %cond.end
  store i32 1, i32* %emu, align 4, !dbg !6672
  %28 = load i32, i32* %mx.addr, align 4, !dbg !6673
  %29 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6674
  %h_edge_pos17 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %29, i32 0, i32 21, !dbg !6675
  %30 = load i32, i32* %h_edge_pos17, align 4, !dbg !6675
  %31 = load i32, i32* %width.addr, align 4, !dbg !6676
  %sub18 = sub nsw i32 %30, %31, !dbg !6677
  %add19 = add nsw i32 %sub18, 15, !dbg !6678
  store i32 %28, i32* %a.addr.i, align 4, !dbg !6679
  store i32 -16, i32* %amin.addr.i, align 4, !dbg !6679
  store i32 %add19, i32* %amax.addr.i, align 4, !dbg !6679
  %32 = load i32, i32* %a.addr.i, align 4, !dbg !6680
  %33 = load i32, i32* %amin.addr.i, align 4, !dbg !6681
  %cmp.i = icmp slt i32 %32, %33, !dbg !6682
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !6683

if.then.i:                                        ; preds = %if.then
  %34 = load i32, i32* %amin.addr.i, align 4, !dbg !6684
  store i32 %34, i32* %retval.i, align 4, !dbg !6685
  br label %av_clip_c.exit, !dbg !6685

if.else.i:                                        ; preds = %if.then
  %35 = load i32, i32* %a.addr.i, align 4, !dbg !6686
  %36 = load i32, i32* %amax.addr.i, align 4, !dbg !6687
  %cmp1.i = icmp sgt i32 %35, %36, !dbg !6688
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !6689

if.then2.i:                                       ; preds = %if.else.i
  %37 = load i32, i32* %amax.addr.i, align 4, !dbg !6690
  store i32 %37, i32* %retval.i, align 4, !dbg !6691
  br label %av_clip_c.exit, !dbg !6691

if.else3.i:                                       ; preds = %if.else.i
  %38 = load i32, i32* %a.addr.i, align 4, !dbg !6692
  store i32 %38, i32* %retval.i, align 4, !dbg !6693
  br label %av_clip_c.exit, !dbg !6693

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %39 = load i32, i32* %retval.i, align 4, !dbg !6694
  store i32 %39, i32* %mx.addr, align 4, !dbg !6695
  %40 = load i32, i32* %my.addr, align 4, !dbg !6696
  %41 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6697
  %v_edge_pos20 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %41, i32 0, i32 22, !dbg !6698
  %42 = load i32, i32* %v_edge_pos20, align 16, !dbg !6698
  %43 = load i32, i32* %height.addr, align 4, !dbg !6699
  %sub21 = sub nsw i32 %42, %43, !dbg !6700
  %add22 = add nsw i32 %sub21, 15, !dbg !6701
  store i32 %40, i32* %a.addr.i155, align 4, !dbg !6702
  store i32 -16, i32* %amin.addr.i156, align 4, !dbg !6702
  store i32 %add22, i32* %amax.addr.i157, align 4, !dbg !6702
  %44 = load i32, i32* %a.addr.i155, align 4, !dbg !6703
  %45 = load i32, i32* %amin.addr.i156, align 4, !dbg !6704
  %cmp.i158 = icmp slt i32 %44, %45, !dbg !6705
  br i1 %cmp.i158, label %if.then.i159, label %if.else.i161, !dbg !6706

if.then.i159:                                     ; preds = %av_clip_c.exit
  %46 = load i32, i32* %amin.addr.i156, align 4, !dbg !6707
  store i32 %46, i32* %retval.i154, align 4, !dbg !6708
  br label %av_clip_c.exit164, !dbg !6708

if.else.i161:                                     ; preds = %av_clip_c.exit
  %47 = load i32, i32* %a.addr.i155, align 4, !dbg !6709
  %48 = load i32, i32* %amax.addr.i157, align 4, !dbg !6710
  %cmp1.i160 = icmp sgt i32 %47, %48, !dbg !6711
  br i1 %cmp1.i160, label %if.then2.i162, label %if.else3.i163, !dbg !6712

if.then2.i162:                                    ; preds = %if.else.i161
  %49 = load i32, i32* %amax.addr.i157, align 4, !dbg !6713
  store i32 %49, i32* %retval.i154, align 4, !dbg !6714
  br label %av_clip_c.exit164, !dbg !6714

if.else3.i163:                                    ; preds = %if.else.i161
  %50 = load i32, i32* %a.addr.i155, align 4, !dbg !6715
  store i32 %50, i32* %retval.i154, align 4, !dbg !6716
  br label %av_clip_c.exit164, !dbg !6716

av_clip_c.exit164:                                ; preds = %if.then.i159, %if.then2.i162, %if.else3.i163
  %51 = load i32, i32* %retval.i154, align 4, !dbg !6717
  store i32 %51, i32* %my.addr, align 4, !dbg !6718
  br label %if.end, !dbg !6719

if.end:                                           ; preds = %av_clip_c.exit164, %lor.lhs.false13
  %52 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6720
  %cur_pic24 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %52, i32 0, i32 6, !dbg !6721
  %53 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic24, align 16, !dbg !6721
  %f25 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %53, i32 0, i32 0, !dbg !6722
  %54 = load %struct.AVFrame*, %struct.AVFrame** %f25, align 8, !dbg !6722
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %54, i32 0, i32 0, !dbg !6723
  %arrayidx26 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 0, !dbg !6720
  %55 = load i8*, i8** %arrayidx26, align 8, !dbg !6720
  %56 = load i32, i32* %x.addr, align 4, !dbg !6724
  %idx.ext = sext i32 %56 to i64, !dbg !6725
  %add.ptr = getelementptr inbounds i8, i8* %55, i64 %idx.ext, !dbg !6725
  %57 = load i32, i32* %y.addr, align 4, !dbg !6726
  %58 = load i32, i32* %linesize, align 4, !dbg !6727
  %mul = mul nsw i32 %57, %58, !dbg !6728
  %idx.ext27 = sext i32 %mul to i64, !dbg !6729
  %add.ptr28 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.ext27, !dbg !6729
  store i8* %add.ptr28, i8** %dest, align 8, !dbg !6730
  %59 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %pic, align 8, !dbg !6731
  %f29 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %59, i32 0, i32 0, !dbg !6732
  %60 = load %struct.AVFrame*, %struct.AVFrame** %f29, align 8, !dbg !6732
  %data30 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %60, i32 0, i32 0, !dbg !6733
  %arrayidx31 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data30, i64 0, i64 0, !dbg !6731
  %61 = load i8*, i8** %arrayidx31, align 8, !dbg !6731
  %62 = load i32, i32* %mx.addr, align 4, !dbg !6734
  %idx.ext32 = sext i32 %62 to i64, !dbg !6735
  %add.ptr33 = getelementptr inbounds i8, i8* %61, i64 %idx.ext32, !dbg !6735
  %63 = load i32, i32* %my.addr, align 4, !dbg !6736
  %64 = load i32, i32* %linesize, align 4, !dbg !6737
  %mul34 = mul nsw i32 %63, %64, !dbg !6738
  %idx.ext35 = sext i32 %mul34 to i64, !dbg !6739
  %add.ptr36 = getelementptr inbounds i8, i8* %add.ptr33, i64 %idx.ext35, !dbg !6739
  store i8* %add.ptr36, i8** %src, align 8, !dbg !6740
  %65 = load i32, i32* %emu, align 4, !dbg !6741
  %tobool = icmp ne i32 %65, 0, !dbg !6741
  br i1 %tobool, label %if.then37, label %if.end44, !dbg !6743

if.then37:                                        ; preds = %if.end
  %66 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6744
  %vdsp = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %66, i32 0, i32 5, !dbg !6746
  %emulated_edge_mc = getelementptr inbounds %struct.VideoDSPContext, %struct.VideoDSPContext* %vdsp, i32 0, i32 0, !dbg !6747
  %67 = load void (i8*, i8*, i64, i64, i32, i32, i32, i32, i32, i32)*, void (i8*, i8*, i64, i64, i32, i32, i32, i32, i32, i32)** %emulated_edge_mc, align 16, !dbg !6747
  %68 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6748
  %edge_emu_buffer = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %68, i32 0, i32 50, !dbg !6749
  %69 = load i8*, i8** %edge_emu_buffer, align 16, !dbg !6749
  %70 = load i8*, i8** %src, align 8, !dbg !6750
  %71 = load i32, i32* %linesize, align 4, !dbg !6751
  %conv = sext i32 %71 to i64, !dbg !6751
  %72 = load i32, i32* %linesize, align 4, !dbg !6752
  %conv38 = sext i32 %72 to i64, !dbg !6752
  %73 = load i32, i32* %width.addr, align 4, !dbg !6753
  %add39 = add nsw i32 %73, 1, !dbg !6754
  %74 = load i32, i32* %height.addr, align 4, !dbg !6755
  %add40 = add nsw i32 %74, 1, !dbg !6756
  %75 = load i32, i32* %mx.addr, align 4, !dbg !6757
  %76 = load i32, i32* %my.addr, align 4, !dbg !6758
  %77 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6759
  %h_edge_pos41 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %77, i32 0, i32 21, !dbg !6760
  %78 = load i32, i32* %h_edge_pos41, align 4, !dbg !6760
  %79 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6761
  %v_edge_pos42 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %79, i32 0, i32 22, !dbg !6762
  %80 = load i32, i32* %v_edge_pos42, align 16, !dbg !6762
  call void %67(i8* %69, i8* %70, i64 %conv, i64 %conv38, i32 %add39, i32 %add40, i32 %75, i32 %76, i32 %78, i32 %80), !dbg !6744
  %81 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6763
  %edge_emu_buffer43 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %81, i32 0, i32 50, !dbg !6764
  %82 = load i8*, i8** %edge_emu_buffer43, align 16, !dbg !6764
  store i8* %82, i8** %src, align 8, !dbg !6765
  br label %if.end44, !dbg !6766

if.end44:                                         ; preds = %if.then37, %if.end
  %83 = load i32, i32* %thirdpel.addr, align 4, !dbg !6767
  %tobool45 = icmp ne i32 %83, 0, !dbg !6767
  br i1 %tobool45, label %if.then46, label %if.else, !dbg !6769

if.then46:                                        ; preds = %if.end44
  %84 = load i32, i32* %dxy.addr, align 4, !dbg !6770
  %idxprom = sext i32 %84 to i64, !dbg !6771
  %85 = load i32, i32* %avg.addr, align 4, !dbg !6772
  %tobool47 = icmp ne i32 %85, 0, !dbg !6772
  br i1 %tobool47, label %cond.true48, label %cond.false49, !dbg !6772

cond.true48:                                      ; preds = %if.then46
  %86 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6773
  %tdsp = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %86, i32 0, i32 4, !dbg !6775
  %avg_tpel_pixels_tab = getelementptr inbounds %struct.TpelDSPContext, %struct.TpelDSPContext* %tdsp, i32 0, i32 1, !dbg !6776
  %arraydecay = getelementptr inbounds [11 x void (i8*, i8*, i32, i32, i32)*], [11 x void (i8*, i8*, i32, i32, i32)*]* %avg_tpel_pixels_tab, i32 0, i32 0, !dbg !6773
  br label %cond.end52, !dbg !6777

cond.false49:                                     ; preds = %if.then46
  %87 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6778
  %tdsp50 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %87, i32 0, i32 4, !dbg !6779
  %put_tpel_pixels_tab = getelementptr inbounds %struct.TpelDSPContext, %struct.TpelDSPContext* %tdsp50, i32 0, i32 0, !dbg !6780
  %arraydecay51 = getelementptr inbounds [11 x void (i8*, i8*, i32, i32, i32)*], [11 x void (i8*, i8*, i32, i32, i32)*]* %put_tpel_pixels_tab, i32 0, i32 0, !dbg !6778
  br label %cond.end52, !dbg !6781

cond.end52:                                       ; preds = %cond.false49, %cond.true48
  %cond53 = phi void (i8*, i8*, i32, i32, i32)** [ %arraydecay, %cond.true48 ], [ %arraydecay51, %cond.false49 ], !dbg !6783
  %arrayidx54 = getelementptr inbounds void (i8*, i8*, i32, i32, i32)*, void (i8*, i8*, i32, i32, i32)** %cond53, i64 %idxprom, !dbg !6785
  %88 = load void (i8*, i8*, i32, i32, i32)*, void (i8*, i8*, i32, i32, i32)** %arrayidx54, align 8, !dbg !6785
  %89 = load i8*, i8** %dest, align 8, !dbg !6786
  %90 = load i8*, i8** %src, align 8, !dbg !6787
  %91 = load i32, i32* %linesize, align 4, !dbg !6788
  %92 = load i32, i32* %width.addr, align 4, !dbg !6789
  %93 = load i32, i32* %height.addr, align 4, !dbg !6790
  call void %88(i8* %89, i8* %90, i32 %91, i32 %92, i32 %93), !dbg !6785
  br label %if.end68, !dbg !6785

if.else:                                          ; preds = %if.end44
  %94 = load i32, i32* %dxy.addr, align 4, !dbg !6791
  %idxprom55 = sext i32 %94 to i64, !dbg !6792
  %95 = load i32, i32* %blocksize, align 4, !dbg !6793
  %idxprom56 = sext i32 %95 to i64, !dbg !6792
  %96 = load i32, i32* %avg.addr, align 4, !dbg !6794
  %tobool57 = icmp ne i32 %96, 0, !dbg !6794
  br i1 %tobool57, label %cond.true58, label %cond.false60, !dbg !6794

cond.true58:                                      ; preds = %if.else
  %97 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6795
  %hdsp = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %97, i32 0, i32 3, !dbg !6796
  %avg_pixels_tab = getelementptr inbounds %struct.HpelDSPContext, %struct.HpelDSPContext* %hdsp, i32 0, i32 1, !dbg !6797
  %arraydecay59 = getelementptr inbounds [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x [4 x void (i8*, i8*, i64, i32)*]]* %avg_pixels_tab, i32 0, i32 0, !dbg !6795
  br label %cond.end63, !dbg !6798

cond.false60:                                     ; preds = %if.else
  %98 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6799
  %hdsp61 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %98, i32 0, i32 3, !dbg !6800
  %put_pixels_tab = getelementptr inbounds %struct.HpelDSPContext, %struct.HpelDSPContext* %hdsp61, i32 0, i32 0, !dbg !6801
  %arraydecay62 = getelementptr inbounds [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x [4 x void (i8*, i8*, i64, i32)*]]* %put_pixels_tab, i32 0, i32 0, !dbg !6799
  br label %cond.end63, !dbg !6802

cond.end63:                                       ; preds = %cond.false60, %cond.true58
  %cond64 = phi [4 x void (i8*, i8*, i64, i32)*]* [ %arraydecay59, %cond.true58 ], [ %arraydecay62, %cond.false60 ], !dbg !6803
  %arrayidx65 = getelementptr inbounds [4 x void (i8*, i8*, i64, i32)*], [4 x void (i8*, i8*, i64, i32)*]* %cond64, i64 %idxprom56, !dbg !6804
  %arrayidx66 = getelementptr inbounds [4 x void (i8*, i8*, i64, i32)*], [4 x void (i8*, i8*, i64, i32)*]* %arrayidx65, i64 0, i64 %idxprom55, !dbg !6804
  %99 = load void (i8*, i8*, i64, i32)*, void (i8*, i8*, i64, i32)** %arrayidx66, align 8, !dbg !6804
  %100 = load i8*, i8** %dest, align 8, !dbg !6805
  %101 = load i8*, i8** %src, align 8, !dbg !6806
  %102 = load i32, i32* %linesize, align 4, !dbg !6807
  %conv67 = sext i32 %102 to i64, !dbg !6807
  %103 = load i32, i32* %height.addr, align 4, !dbg !6808
  call void %99(i8* %100, i8* %101, i64 %conv67, i32 %103), !dbg !6804
  br label %if.end68

if.end68:                                         ; preds = %cond.end63, %cond.end52
  %104 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6809
  %avctx = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %104, i32 0, i32 0, !dbg !6811
  %105 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 16, !dbg !6811
  %flags = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %105, i32 0, i32 13, !dbg !6812
  %106 = load i32, i32* %flags, align 4, !dbg !6812
  %and = and i32 %106, 8192, !dbg !6813
  %tobool69 = icmp ne i32 %and, 0, !dbg !6813
  br i1 %tobool69, label %if.end153, label %if.then70, !dbg !6814

if.then70:                                        ; preds = %if.end68
  %107 = load i32, i32* %mx.addr, align 4, !dbg !6815
  %108 = load i32, i32* %mx.addr, align 4, !dbg !6817
  %109 = load i32, i32* %x.addr, align 4, !dbg !6818
  %cmp71 = icmp slt i32 %108, %109, !dbg !6819
  %conv72 = zext i1 %cmp71 to i32, !dbg !6819
  %add73 = add nsw i32 %107, %conv72, !dbg !6820
  %shr74 = ashr i32 %add73, 1, !dbg !6821
  store i32 %shr74, i32* %mx.addr, align 4, !dbg !6822
  %110 = load i32, i32* %my.addr, align 4, !dbg !6823
  %111 = load i32, i32* %my.addr, align 4, !dbg !6824
  %112 = load i32, i32* %y.addr, align 4, !dbg !6825
  %cmp75 = icmp slt i32 %111, %112, !dbg !6826
  %conv76 = zext i1 %cmp75 to i32, !dbg !6826
  %add77 = add nsw i32 %110, %conv76, !dbg !6827
  %shr78 = ashr i32 %add77, 1, !dbg !6828
  store i32 %shr78, i32* %my.addr, align 4, !dbg !6829
  %113 = load i32, i32* %width.addr, align 4, !dbg !6830
  %shr79 = ashr i32 %113, 1, !dbg !6831
  store i32 %shr79, i32* %width.addr, align 4, !dbg !6832
  %114 = load i32, i32* %height.addr, align 4, !dbg !6833
  %shr80 = ashr i32 %114, 1, !dbg !6834
  store i32 %shr80, i32* %height.addr, align 4, !dbg !6835
  %115 = load i32, i32* %blocksize, align 4, !dbg !6836
  %inc = add nsw i32 %115, 1, !dbg !6836
  store i32 %inc, i32* %blocksize, align 4, !dbg !6836
  store i32 1, i32* %i, align 4, !dbg !6837
  br label %for.cond, !dbg !6839

for.cond:                                         ; preds = %for.inc, %if.then70
  %116 = load i32, i32* %i, align 4, !dbg !6840
  %cmp81 = icmp slt i32 %116, 3, !dbg !6843
  br i1 %cmp81, label %for.body, label %for.end, !dbg !6844

for.body:                                         ; preds = %for.cond
  %117 = load i32, i32* %i, align 4, !dbg !6845
  %idxprom83 = sext i32 %117 to i64, !dbg !6847
  %118 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6847
  %cur_pic84 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %118, i32 0, i32 6, !dbg !6848
  %119 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic84, align 16, !dbg !6848
  %f85 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %119, i32 0, i32 0, !dbg !6849
  %120 = load %struct.AVFrame*, %struct.AVFrame** %f85, align 8, !dbg !6849
  %data86 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %120, i32 0, i32 0, !dbg !6850
  %arrayidx87 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data86, i64 0, i64 %idxprom83, !dbg !6847
  %121 = load i8*, i8** %arrayidx87, align 8, !dbg !6847
  %122 = load i32, i32* %x.addr, align 4, !dbg !6851
  %shr88 = ashr i32 %122, 1, !dbg !6852
  %idx.ext89 = sext i32 %shr88 to i64, !dbg !6853
  %add.ptr90 = getelementptr inbounds i8, i8* %121, i64 %idx.ext89, !dbg !6853
  %123 = load i32, i32* %y.addr, align 4, !dbg !6854
  %shr91 = ashr i32 %123, 1, !dbg !6855
  %124 = load i32, i32* %uvlinesize, align 4, !dbg !6856
  %mul92 = mul nsw i32 %shr91, %124, !dbg !6857
  %idx.ext93 = sext i32 %mul92 to i64, !dbg !6858
  %add.ptr94 = getelementptr inbounds i8, i8* %add.ptr90, i64 %idx.ext93, !dbg !6858
  store i8* %add.ptr94, i8** %dest, align 8, !dbg !6859
  %125 = load i32, i32* %i, align 4, !dbg !6860
  %idxprom95 = sext i32 %125 to i64, !dbg !6861
  %126 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %pic, align 8, !dbg !6861
  %f96 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %126, i32 0, i32 0, !dbg !6862
  %127 = load %struct.AVFrame*, %struct.AVFrame** %f96, align 8, !dbg !6862
  %data97 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %127, i32 0, i32 0, !dbg !6863
  %arrayidx98 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data97, i64 0, i64 %idxprom95, !dbg !6861
  %128 = load i8*, i8** %arrayidx98, align 8, !dbg !6861
  %129 = load i32, i32* %mx.addr, align 4, !dbg !6864
  %idx.ext99 = sext i32 %129 to i64, !dbg !6865
  %add.ptr100 = getelementptr inbounds i8, i8* %128, i64 %idx.ext99, !dbg !6865
  %130 = load i32, i32* %my.addr, align 4, !dbg !6866
  %131 = load i32, i32* %uvlinesize, align 4, !dbg !6867
  %mul101 = mul nsw i32 %130, %131, !dbg !6868
  %idx.ext102 = sext i32 %mul101 to i64, !dbg !6869
  %add.ptr103 = getelementptr inbounds i8, i8* %add.ptr100, i64 %idx.ext102, !dbg !6869
  store i8* %add.ptr103, i8** %src, align 8, !dbg !6870
  %132 = load i32, i32* %emu, align 4, !dbg !6871
  %tobool104 = icmp ne i32 %132, 0, !dbg !6871
  br i1 %tobool104, label %if.then105, label %if.end118, !dbg !6873

if.then105:                                       ; preds = %for.body
  %133 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6874
  %vdsp106 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %133, i32 0, i32 5, !dbg !6876
  %emulated_edge_mc107 = getelementptr inbounds %struct.VideoDSPContext, %struct.VideoDSPContext* %vdsp106, i32 0, i32 0, !dbg !6877
  %134 = load void (i8*, i8*, i64, i64, i32, i32, i32, i32, i32, i32)*, void (i8*, i8*, i64, i64, i32, i32, i32, i32, i32, i32)** %emulated_edge_mc107, align 16, !dbg !6877
  %135 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6878
  %edge_emu_buffer108 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %135, i32 0, i32 50, !dbg !6879
  %136 = load i8*, i8** %edge_emu_buffer108, align 16, !dbg !6879
  %137 = load i8*, i8** %src, align 8, !dbg !6880
  %138 = load i32, i32* %uvlinesize, align 4, !dbg !6881
  %conv109 = sext i32 %138 to i64, !dbg !6881
  %139 = load i32, i32* %uvlinesize, align 4, !dbg !6882
  %conv110 = sext i32 %139 to i64, !dbg !6882
  %140 = load i32, i32* %width.addr, align 4, !dbg !6883
  %add111 = add nsw i32 %140, 1, !dbg !6884
  %141 = load i32, i32* %height.addr, align 4, !dbg !6885
  %add112 = add nsw i32 %141, 1, !dbg !6886
  %142 = load i32, i32* %mx.addr, align 4, !dbg !6887
  %143 = load i32, i32* %my.addr, align 4, !dbg !6888
  %144 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6889
  %h_edge_pos113 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %144, i32 0, i32 21, !dbg !6890
  %145 = load i32, i32* %h_edge_pos113, align 4, !dbg !6890
  %shr114 = ashr i32 %145, 1, !dbg !6891
  %146 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6892
  %v_edge_pos115 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %146, i32 0, i32 22, !dbg !6893
  %147 = load i32, i32* %v_edge_pos115, align 16, !dbg !6893
  %shr116 = ashr i32 %147, 1, !dbg !6894
  call void %134(i8* %136, i8* %137, i64 %conv109, i64 %conv110, i32 %add111, i32 %add112, i32 %142, i32 %143, i32 %shr114, i32 %shr116), !dbg !6874
  %148 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6895
  %edge_emu_buffer117 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %148, i32 0, i32 50, !dbg !6896
  %149 = load i8*, i8** %edge_emu_buffer117, align 16, !dbg !6896
  store i8* %149, i8** %src, align 8, !dbg !6897
  br label %if.end118, !dbg !6898

if.end118:                                        ; preds = %if.then105, %for.body
  %150 = load i32, i32* %thirdpel.addr, align 4, !dbg !6899
  %tobool119 = icmp ne i32 %150, 0, !dbg !6899
  br i1 %tobool119, label %if.then120, label %if.else134, !dbg !6901

if.then120:                                       ; preds = %if.end118
  %151 = load i32, i32* %dxy.addr, align 4, !dbg !6902
  %idxprom121 = sext i32 %151 to i64, !dbg !6903
  %152 = load i32, i32* %avg.addr, align 4, !dbg !6904
  %tobool122 = icmp ne i32 %152, 0, !dbg !6904
  br i1 %tobool122, label %cond.true123, label %cond.false127, !dbg !6904

cond.true123:                                     ; preds = %if.then120
  %153 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6905
  %tdsp124 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %153, i32 0, i32 4, !dbg !6907
  %avg_tpel_pixels_tab125 = getelementptr inbounds %struct.TpelDSPContext, %struct.TpelDSPContext* %tdsp124, i32 0, i32 1, !dbg !6908
  %arraydecay126 = getelementptr inbounds [11 x void (i8*, i8*, i32, i32, i32)*], [11 x void (i8*, i8*, i32, i32, i32)*]* %avg_tpel_pixels_tab125, i32 0, i32 0, !dbg !6905
  br label %cond.end131, !dbg !6909

cond.false127:                                    ; preds = %if.then120
  %154 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6910
  %tdsp128 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %154, i32 0, i32 4, !dbg !6911
  %put_tpel_pixels_tab129 = getelementptr inbounds %struct.TpelDSPContext, %struct.TpelDSPContext* %tdsp128, i32 0, i32 0, !dbg !6912
  %arraydecay130 = getelementptr inbounds [11 x void (i8*, i8*, i32, i32, i32)*], [11 x void (i8*, i8*, i32, i32, i32)*]* %put_tpel_pixels_tab129, i32 0, i32 0, !dbg !6910
  br label %cond.end131, !dbg !6913

cond.end131:                                      ; preds = %cond.false127, %cond.true123
  %cond132 = phi void (i8*, i8*, i32, i32, i32)** [ %arraydecay126, %cond.true123 ], [ %arraydecay130, %cond.false127 ], !dbg !6915
  %arrayidx133 = getelementptr inbounds void (i8*, i8*, i32, i32, i32)*, void (i8*, i8*, i32, i32, i32)** %cond132, i64 %idxprom121, !dbg !6917
  %155 = load void (i8*, i8*, i32, i32, i32)*, void (i8*, i8*, i32, i32, i32)** %arrayidx133, align 8, !dbg !6917
  %156 = load i8*, i8** %dest, align 8, !dbg !6918
  %157 = load i8*, i8** %src, align 8, !dbg !6919
  %158 = load i32, i32* %uvlinesize, align 4, !dbg !6920
  %159 = load i32, i32* %width.addr, align 4, !dbg !6921
  %160 = load i32, i32* %height.addr, align 4, !dbg !6922
  call void %155(i8* %156, i8* %157, i32 %158, i32 %159, i32 %160), !dbg !6917
  br label %if.end151, !dbg !6917

if.else134:                                       ; preds = %if.end118
  %161 = load i32, i32* %dxy.addr, align 4, !dbg !6923
  %idxprom135 = sext i32 %161 to i64, !dbg !6924
  %162 = load i32, i32* %blocksize, align 4, !dbg !6925
  %idxprom136 = sext i32 %162 to i64, !dbg !6924
  %163 = load i32, i32* %avg.addr, align 4, !dbg !6926
  %tobool137 = icmp ne i32 %163, 0, !dbg !6926
  br i1 %tobool137, label %cond.true138, label %cond.false142, !dbg !6926

cond.true138:                                     ; preds = %if.else134
  %164 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6927
  %hdsp139 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %164, i32 0, i32 3, !dbg !6928
  %avg_pixels_tab140 = getelementptr inbounds %struct.HpelDSPContext, %struct.HpelDSPContext* %hdsp139, i32 0, i32 1, !dbg !6929
  %arraydecay141 = getelementptr inbounds [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x [4 x void (i8*, i8*, i64, i32)*]]* %avg_pixels_tab140, i32 0, i32 0, !dbg !6927
  br label %cond.end146, !dbg !6930

cond.false142:                                    ; preds = %if.else134
  %165 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !6931
  %hdsp143 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %165, i32 0, i32 3, !dbg !6932
  %put_pixels_tab144 = getelementptr inbounds %struct.HpelDSPContext, %struct.HpelDSPContext* %hdsp143, i32 0, i32 0, !dbg !6933
  %arraydecay145 = getelementptr inbounds [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x [4 x void (i8*, i8*, i64, i32)*]]* %put_pixels_tab144, i32 0, i32 0, !dbg !6931
  br label %cond.end146, !dbg !6934

cond.end146:                                      ; preds = %cond.false142, %cond.true138
  %cond147 = phi [4 x void (i8*, i8*, i64, i32)*]* [ %arraydecay141, %cond.true138 ], [ %arraydecay145, %cond.false142 ], !dbg !6935
  %arrayidx148 = getelementptr inbounds [4 x void (i8*, i8*, i64, i32)*], [4 x void (i8*, i8*, i64, i32)*]* %cond147, i64 %idxprom136, !dbg !6936
  %arrayidx149 = getelementptr inbounds [4 x void (i8*, i8*, i64, i32)*], [4 x void (i8*, i8*, i64, i32)*]* %arrayidx148, i64 0, i64 %idxprom135, !dbg !6936
  %166 = load void (i8*, i8*, i64, i32)*, void (i8*, i8*, i64, i32)** %arrayidx149, align 8, !dbg !6936
  %167 = load i8*, i8** %dest, align 8, !dbg !6937
  %168 = load i8*, i8** %src, align 8, !dbg !6938
  %169 = load i32, i32* %uvlinesize, align 4, !dbg !6939
  %conv150 = sext i32 %169 to i64, !dbg !6939
  %170 = load i32, i32* %height.addr, align 4, !dbg !6940
  call void %166(i8* %167, i8* %168, i64 %conv150, i32 %170), !dbg !6936
  br label %if.end151

if.end151:                                        ; preds = %cond.end146, %cond.end131
  br label %for.inc, !dbg !6941

for.inc:                                          ; preds = %if.end151
  %171 = load i32, i32* %i, align 4, !dbg !6942
  %inc152 = add nsw i32 %171, 1, !dbg !6942
  store i32 %inc152, i32* %i, align 4, !dbg !6942
  br label %for.cond, !dbg !6944, !llvm.loop !6945

for.end:                                          ; preds = %for.cond
  br label %if.end153, !dbg !6947

if.end153:                                        ; preds = %for.end, %if.end68
  ret void, !dbg !6948
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @svq3_mc_dir(%struct.SVQ3Context* %s, i32 %size, i32 %mode, i32 %dir, i32 %avg) #5 !dbg !6949 {
entry:
  %vp.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %vp.addr.i, metadata !6952, metadata !1727), !dbg !6957
  %w.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i, metadata !6964, metadata !1727), !dbg !6965
  %h.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr.i, metadata !6966, metadata !1727), !dbg !6967
  %stride.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr.i, metadata !6968, metadata !1727), !dbg !6969
  %val.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i, metadata !6970, metadata !1727), !dbg !6971
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !6972, metadata !1727), !dbg !6973
  %p.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.i, metadata !6974, metadata !1727), !dbg !6975
  %v.i = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %v.i, metadata !6976, metadata !1727), !dbg !6980
  %v24.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %v24.i, metadata !6981, metadata !1727), !dbg !6984
  %v63.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %v63.i, metadata !6985, metadata !1727), !dbg !6988
  %v98.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %v98.i, metadata !6989, metadata !1727), !dbg !6992
  %a.addr.i275 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i275, metadata !6993, metadata !1727), !dbg !6997
  %b.addr.i276 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i276, metadata !6999, metadata !1727), !dbg !7000
  %a.addr.i273 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i273, metadata !6993, metadata !1727), !dbg !7001
  %b.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i, metadata !6999, metadata !1727), !dbg !7005
  %retval.i262 = alloca i32, align 4
  %a.addr.i263 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i263, metadata !6472, metadata !1727), !dbg !7006
  %amin.addr.i264 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i264, metadata !6479, metadata !1727), !dbg !7008
  %amax.addr.i265 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i265, metadata !6481, metadata !1727), !dbg !7009
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !6472, metadata !1727), !dbg !7010
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !6479, metadata !1727), !dbg !7012
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !6481, metadata !1727), !dbg !7013
  %retval.i.i = alloca i32, align 4
  %s.addr.i.i = alloca %struct.SVQ3Context*, align 8
  call void @llvm.dbg.declare(metadata %struct.SVQ3Context** %s.addr.i.i, metadata !7014, metadata !1727), !dbg !7023
  %C.addr.i.i = alloca i16**, align 8
  call void @llvm.dbg.declare(metadata i16*** %C.addr.i.i, metadata !7032, metadata !1727), !dbg !7033
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !7034, metadata !1727), !dbg !7035
  %list.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %list.addr.i.i, metadata !7036, metadata !1727), !dbg !7037
  %part_width.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %part_width.addr.i.i, metadata !7038, metadata !1727), !dbg !7039
  %topright_ref.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topright_ref.i.i, metadata !7040, metadata !1727), !dbg !7041
  %s.addr.i = alloca %struct.SVQ3Context*, align 8
  call void @llvm.dbg.declare(metadata %struct.SVQ3Context** %s.addr.i, metadata !7042, metadata !1727), !dbg !7043
  %n.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr.i, metadata !7044, metadata !1727), !dbg !7045
  %part_width.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %part_width.addr.i, metadata !7046, metadata !1727), !dbg !7047
  %list.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %list.addr.i, metadata !7048, metadata !1727), !dbg !7049
  %ref.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ref.addr.i, metadata !7050, metadata !1727), !dbg !7051
  %mx.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %mx.addr.i, metadata !7052, metadata !1727), !dbg !7053
  %my.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %my.addr.i, metadata !7054, metadata !1727), !dbg !7055
  %index8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index8.i, metadata !7056, metadata !1727), !dbg !7057
  %top_ref.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %top_ref.i, metadata !7058, metadata !1727), !dbg !7059
  %left_ref.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %left_ref.i, metadata !7060, metadata !1727), !dbg !7061
  %A.i = alloca i16*, align 8
  call void @llvm.dbg.declare(metadata i16** %A.i, metadata !7062, metadata !1727), !dbg !7064
  %B.i = alloca i16*, align 8
  call void @llvm.dbg.declare(metadata i16** %B.i, metadata !7065, metadata !1727), !dbg !7066
  %C.i = alloca i16*, align 8
  call void @llvm.dbg.declare(metadata i16** %C.i, metadata !7067, metadata !1727), !dbg !7068
  %diagonal_ref.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %diagonal_ref.i, metadata !7069, metadata !1727), !dbg !7070
  %match_count.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %match_count.i, metadata !7071, metadata !1727), !dbg !7072
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.SVQ3Context*, align 8
  %size.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %dir.addr = alloca i32, align 4
  %avg.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %mx = alloca i32, align 4
  %my = alloca i32, align 4
  %dx = alloca i32, align 4
  %dy = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %part_width = alloca i32, align 4
  %part_height = alloca i32, align 4
  %extra_width = alloca i32, align 4
  %h_edge_pos = alloca i32, align 4
  %v_edge_pos = alloca i32, align 4
  %b_xy = alloca i32, align 4
  %dxy = alloca i32, align 4
  %fx = alloca i32, align 4
  %fy = alloca i32, align 4
  %mv = alloca i32, align 4
  store %struct.SVQ3Context* %s, %struct.SVQ3Context** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SVQ3Context** %s.addr, metadata !7073, metadata !1727), !dbg !7074
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7075, metadata !1727), !dbg !7076
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !7077, metadata !1727), !dbg !7078
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !7079, metadata !1727), !dbg !7080
  store i32 %avg, i32* %avg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %avg.addr, metadata !7081, metadata !1727), !dbg !7082
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7083, metadata !1727), !dbg !7084
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7085, metadata !1727), !dbg !7086
  call void @llvm.dbg.declare(metadata i32* %k, metadata !7087, metadata !1727), !dbg !7088
  call void @llvm.dbg.declare(metadata i32* %mx, metadata !7089, metadata !1727), !dbg !7090
  call void @llvm.dbg.declare(metadata i32* %my, metadata !7091, metadata !1727), !dbg !7092
  call void @llvm.dbg.declare(metadata i32* %dx, metadata !7093, metadata !1727), !dbg !7094
  call void @llvm.dbg.declare(metadata i32* %dy, metadata !7095, metadata !1727), !dbg !7096
  call void @llvm.dbg.declare(metadata i32* %x, metadata !7097, metadata !1727), !dbg !7098
  call void @llvm.dbg.declare(metadata i32* %y, metadata !7099, metadata !1727), !dbg !7100
  call void @llvm.dbg.declare(metadata i32* %part_width, metadata !7101, metadata !1727), !dbg !7102
  %0 = load i32, i32* %size.addr, align 4, !dbg !7103
  %and = and i32 %0, 5, !dbg !7104
  %cmp = icmp eq i32 %and, 4, !dbg !7105
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7106

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !7107

cond.false:                                       ; preds = %entry
  %1 = load i32, i32* %size.addr, align 4, !dbg !7109
  %and1 = and i32 %1, 1, !dbg !7111
  %shr = ashr i32 16, %and1, !dbg !7112
  br label %cond.end, !dbg !7113

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 4, %cond.true ], [ %shr, %cond.false ], !dbg !7114
  store i32 %cond, i32* %part_width, align 4, !dbg !7116
  call void @llvm.dbg.declare(metadata i32* %part_height, metadata !7117, metadata !1727), !dbg !7118
  %2 = load i32, i32* %size.addr, align 4, !dbg !7119
  %add = add nsw i32 %2, 1, !dbg !7120
  %div = udiv i32 %add, 3, !dbg !7121
  %shr2 = ashr i32 16, %div, !dbg !7122
  store i32 %shr2, i32* %part_height, align 4, !dbg !7118
  call void @llvm.dbg.declare(metadata i32* %extra_width, metadata !7123, metadata !1727), !dbg !7124
  %3 = load i32, i32* %mode.addr, align 4, !dbg !7125
  %cmp3 = icmp eq i32 %3, 4, !dbg !7126
  %cond4 = select i1 %cmp3, i32 -96, i32 0, !dbg !7127
  store i32 %cond4, i32* %extra_width, align 4, !dbg !7124
  call void @llvm.dbg.declare(metadata i32* %h_edge_pos, metadata !7128, metadata !1727), !dbg !7129
  %4 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !7130
  %h_edge_pos5 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %4, i32 0, i32 21, !dbg !7131
  %5 = load i32, i32* %h_edge_pos5, align 4, !dbg !7131
  %6 = load i32, i32* %part_width, align 4, !dbg !7132
  %sub = sub nsw i32 %5, %6, !dbg !7133
  %mul = mul nsw i32 6, %sub, !dbg !7134
  %7 = load i32, i32* %extra_width, align 4, !dbg !7135
  %sub6 = sub nsw i32 %mul, %7, !dbg !7136
  store i32 %sub6, i32* %h_edge_pos, align 4, !dbg !7129
  call void @llvm.dbg.declare(metadata i32* %v_edge_pos, metadata !7137, metadata !1727), !dbg !7138
  %8 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !7139
  %v_edge_pos7 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %8, i32 0, i32 22, !dbg !7140
  %9 = load i32, i32* %v_edge_pos7, align 16, !dbg !7140
  %10 = load i32, i32* %part_height, align 4, !dbg !7141
  %sub8 = sub nsw i32 %9, %10, !dbg !7142
  %mul9 = mul nsw i32 6, %sub8, !dbg !7143
  %11 = load i32, i32* %extra_width, align 4, !dbg !7144
  %sub10 = sub nsw i32 %mul9, %11, !dbg !7145
  store i32 %sub10, i32* %v_edge_pos, align 4, !dbg !7138
  store i32 0, i32* %i, align 4, !dbg !7146
  br label %for.cond, !dbg !7147

for.cond:                                         ; preds = %for.inc256, %cond.end
  %12 = load i32, i32* %i, align 4, !dbg !7148
  %cmp11 = icmp slt i32 %12, 16, !dbg !7150
  br i1 %cmp11, label %for.body, label %for.end258, !dbg !7151

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !7152
  br label %for.cond12, !dbg !7153

for.cond12:                                       ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !7154
  %cmp13 = icmp slt i32 %13, 16, !dbg !7156
  br i1 %cmp13, label %for.body14, label %for.end, !dbg !7157

for.body14:                                       ; preds = %for.cond12
  call void @llvm.dbg.declare(metadata i32* %b_xy, metadata !7158, metadata !1727), !dbg !7159
  %14 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !7160
  %mb_x = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %14, i32 0, i32 34, !dbg !7161
  %15 = load i32, i32* %mb_x, align 16, !dbg !7161
  %mul15 = mul nsw i32 4, %15, !dbg !7162
  %16 = load i32, i32* %j, align 4, !dbg !7163
  %shr16 = ashr i32 %16, 2, !dbg !7164
  %add17 = add nsw i32 %mul15, %shr16, !dbg !7165
  %17 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !7166
  %mb_y = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %17, i32 0, i32 35, !dbg !7167
  %18 = load i32, i32* %mb_y, align 4, !dbg !7167
  %mul18 = mul nsw i32 4, %18, !dbg !7168
  %19 = load i32, i32* %i, align 4, !dbg !7169
  %shr19 = ashr i32 %19, 2, !dbg !7170
  %add20 = add nsw i32 %mul18, %shr19, !dbg !7171
  %20 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !7172
  %b_stride = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %20, i32 0, i32 41, !dbg !7173
  %21 = load i32, i32* %b_stride, align 4, !dbg !7173
  %mul21 = mul nsw i32 %add20, %21, !dbg !7174
  %add22 = add nsw i32 %add17, %mul21, !dbg !7175
  store i32 %add22, i32* %b_xy, align 4, !dbg !7159
  call void @llvm.dbg.declare(metadata i32* %dxy, metadata !7176, metadata !1727), !dbg !7177
  %22 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !7178
  %mb_x23 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %22, i32 0, i32 34, !dbg !7179
  %23 = load i32, i32* %mb_x23, align 16, !dbg !7179
  %mul24 = mul nsw i32 16, %23, !dbg !7180
  %24 = load i32, i32* %j, align 4, !dbg !7181
  %add25 = add nsw i32 %mul24, %24, !dbg !7182
  store i32 %add25, i32* %x, align 4, !dbg !7183
  %25 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !7184
  %mb_y26 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %25, i32 0, i32 35, !dbg !7185
  %26 = load i32, i32* %mb_y26, align 4, !dbg !7185
  %mul27 = mul nsw i32 16, %26, !dbg !7186
  %27 = load i32, i32* %i, align 4, !dbg !7187
  %add28 = add nsw i32 %mul27, %27, !dbg !7188
  store i32 %add28, i32* %y, align 4, !dbg !7189
  %28 = load i32, i32* %j, align 4, !dbg !7190
  %shr29 = ashr i32 %28, 2, !dbg !7191
  %and30 = and i32 %shr29, 1, !dbg !7192
  %29 = load i32, i32* %i, align 4, !dbg !7193
  %shr31 = ashr i32 %29, 1, !dbg !7194
  %and32 = and i32 %shr31, 2, !dbg !7195
  %add33 = add nsw i32 %and30, %and32, !dbg !7196
  %30 = load i32, i32* %j, align 4, !dbg !7197
  %shr34 = ashr i32 %30, 1, !dbg !7198
  %and35 = and i32 %shr34, 4, !dbg !7199
  %add36 = add nsw i32 %add33, %and35, !dbg !7200
  %31 = load i32, i32* %i, align 4, !dbg !7201
  %and37 = and i32 %31, 8, !dbg !7202
  %add38 = add nsw i32 %add36, %and37, !dbg !7203
  store i32 %add38, i32* %k, align 4, !dbg !7204
  %32 = load i32, i32* %mode.addr, align 4, !dbg !7205
  %cmp39 = icmp ne i32 %32, 4, !dbg !7206
  br i1 %cmp39, label %if.then, label %if.else, !dbg !7207

if.then:                                          ; preds = %for.body14
  %33 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !7208
  %34 = load i32, i32* %k, align 4, !dbg !7209
  %35 = load i32, i32* %part_width, align 4, !dbg !7210
  %shr40 = ashr i32 %35, 2, !dbg !7211
  %36 = load i32, i32* %dir.addr, align 4, !dbg !7212
  store %struct.SVQ3Context* %33, %struct.SVQ3Context** %s.addr.i, align 8, !dbg !7213
  store i32 %34, i32* %n.addr.i, align 4, !dbg !7213
  store i32 %shr40, i32* %part_width.addr.i, align 4, !dbg !7213
  store i32 %36, i32* %list.addr.i, align 4, !dbg !7213
  store i32 1, i32* %ref.addr.i, align 4, !dbg !7213
  store i32* %mx, i32** %mx.addr.i, align 8, !dbg !7213
  store i32* %my, i32** %my.addr.i, align 8, !dbg !7213
  %37 = load i32, i32* %n.addr.i, align 4, !dbg !7214
  %idxprom.i = sext i32 %37 to i64, !dbg !7215
  %arrayidx.i = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom.i, !dbg !7215
  %38 = load i8, i8* %arrayidx.i, align 1, !dbg !7215
  %conv.i = zext i8 %38 to i32, !dbg !7215
  store i32 %conv.i, i32* %index8.i, align 4, !dbg !7057
  %39 = load i32, i32* %index8.i, align 4, !dbg !7216
  %sub.i = sub nsw i32 %39, 8, !dbg !7217
  %idxprom1.i = sext i32 %sub.i to i64, !dbg !7218
  %40 = load i32, i32* %list.addr.i, align 4, !dbg !7219
  %idxprom2.i = sext i32 %40 to i64, !dbg !7218
  %41 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr.i, align 8, !dbg !7218
  %ref_cache.i = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %41, i32 0, i32 53, !dbg !7220
  %arrayidx3.i = getelementptr inbounds [2 x [40 x i8]], [2 x [40 x i8]]* %ref_cache.i, i64 0, i64 %idxprom2.i, !dbg !7218
  %arrayidx4.i = getelementptr inbounds [40 x i8], [40 x i8]* %arrayidx3.i, i64 0, i64 %idxprom1.i, !dbg !7218
  %42 = load i8, i8* %arrayidx4.i, align 1, !dbg !7218
  %conv5.i = sext i8 %42 to i32, !dbg !7218
  store i32 %conv5.i, i32* %top_ref.i, align 4, !dbg !7059
  %43 = load i32, i32* %index8.i, align 4, !dbg !7221
  %sub6.i = sub nsw i32 %43, 1, !dbg !7222
  %idxprom7.i = sext i32 %sub6.i to i64, !dbg !7223
  %44 = load i32, i32* %list.addr.i, align 4, !dbg !7224
  %idxprom8.i = sext i32 %44 to i64, !dbg !7223
  %45 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr.i, align 8, !dbg !7223
  %ref_cache9.i = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %45, i32 0, i32 53, !dbg !7225
  %arrayidx10.i = getelementptr inbounds [2 x [40 x i8]], [2 x [40 x i8]]* %ref_cache9.i, i64 0, i64 %idxprom8.i, !dbg !7223
  %arrayidx11.i = getelementptr inbounds [40 x i8], [40 x i8]* %arrayidx10.i, i64 0, i64 %idxprom7.i, !dbg !7223
  %46 = load i8, i8* %arrayidx11.i, align 1, !dbg !7223
  %conv12.i = sext i8 %46 to i32, !dbg !7223
  store i32 %conv12.i, i32* %left_ref.i, align 4, !dbg !7061
  %47 = load i32, i32* %index8.i, align 4, !dbg !7226
  %sub13.i = sub nsw i32 %47, 1, !dbg !7227
  %idxprom14.i = sext i32 %sub13.i to i64, !dbg !7228
  %48 = load i32, i32* %list.addr.i, align 4, !dbg !7229
  %idxprom15.i = sext i32 %48 to i64, !dbg !7228
  %49 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr.i, align 8, !dbg !7228
  %mv_cache.i = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %49, i32 0, i32 52, !dbg !7230
  %arrayidx16.i = getelementptr inbounds [2 x [40 x [2 x i16]]], [2 x [40 x [2 x i16]]]* %mv_cache.i, i64 0, i64 %idxprom15.i, !dbg !7228
  %arrayidx17.i = getelementptr inbounds [40 x [2 x i16]], [40 x [2 x i16]]* %arrayidx16.i, i64 0, i64 %idxprom14.i, !dbg !7228
  %arraydecay.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx17.i, i32 0, i32 0, !dbg !7228
  store i16* %arraydecay.i, i16** %A.i, align 8, !dbg !7064
  %50 = load i32, i32* %index8.i, align 4, !dbg !7231
  %sub18.i = sub nsw i32 %50, 8, !dbg !7232
  %idxprom19.i = sext i32 %sub18.i to i64, !dbg !7233
  %51 = load i32, i32* %list.addr.i, align 4, !dbg !7234
  %idxprom20.i = sext i32 %51 to i64, !dbg !7233
  %52 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr.i, align 8, !dbg !7233
  %mv_cache21.i = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %52, i32 0, i32 52, !dbg !7235
  %arrayidx22.i = getelementptr inbounds [2 x [40 x [2 x i16]]], [2 x [40 x [2 x i16]]]* %mv_cache21.i, i64 0, i64 %idxprom20.i, !dbg !7233
  %arrayidx23.i = getelementptr inbounds [40 x [2 x i16]], [40 x [2 x i16]]* %arrayidx22.i, i64 0, i64 %idxprom19.i, !dbg !7233
  %arraydecay24.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx23.i, i32 0, i32 0, !dbg !7233
  store i16* %arraydecay24.i, i16** %B.i, align 8, !dbg !7066
  %53 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr.i, align 8, !dbg !7236
  %54 = load i32, i32* %index8.i, align 4, !dbg !7237
  %55 = load i32, i32* %list.addr.i, align 4, !dbg !7238
  %56 = load i32, i32* %part_width.addr.i, align 4, !dbg !7239
  store %struct.SVQ3Context* %53, %struct.SVQ3Context** %s.addr.i.i, align 8, !dbg !7240
  store i16** %C.i, i16*** %C.addr.i.i, align 8, !dbg !7240
  store i32 %54, i32* %i.addr.i.i, align 4, !dbg !7240
  store i32 %55, i32* %list.addr.i.i, align 4, !dbg !7240
  store i32 %56, i32* %part_width.addr.i.i, align 4, !dbg !7240
  %57 = load i32, i32* %i.addr.i.i, align 4, !dbg !7241
  %sub.i.i = sub nsw i32 %57, 8, !dbg !7242
  %58 = load i32, i32* %part_width.addr.i.i, align 4, !dbg !7243
  %add.i.i = add nsw i32 %sub.i.i, %58, !dbg !7244
  %idxprom.i.i = sext i32 %add.i.i to i64, !dbg !7245
  %59 = load i32, i32* %list.addr.i.i, align 4, !dbg !7246
  %idxprom1.i.i = sext i32 %59 to i64, !dbg !7245
  %60 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr.i.i, align 8, !dbg !7245
  %ref_cache.i.i = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %60, i32 0, i32 53, !dbg !7247
  %arrayidx.i.i = getelementptr inbounds [2 x [40 x i8]], [2 x [40 x i8]]* %ref_cache.i.i, i64 0, i64 %idxprom1.i.i, !dbg !7245
  %arrayidx2.i.i = getelementptr inbounds [40 x i8], [40 x i8]* %arrayidx.i.i, i64 0, i64 %idxprom.i.i, !dbg !7245
  %61 = load i8, i8* %arrayidx2.i.i, align 1, !dbg !7245
  %conv.i.i = sext i8 %61 to i32, !dbg !7245
  store i32 %conv.i.i, i32* %topright_ref.i.i, align 4, !dbg !7041
  %62 = load i32, i32* %topright_ref.i.i, align 4, !dbg !7248
  %cmp.i.i = icmp ne i32 %62, -2, !dbg !7250
  br i1 %cmp.i.i, label %if.then.i.i, label %if.else.i.i, !dbg !7251

if.then.i.i:                                      ; preds = %if.then
  %63 = load i32, i32* %i.addr.i.i, align 4, !dbg !7252
  %sub4.i.i = sub nsw i32 %63, 8, !dbg !7254
  %64 = load i32, i32* %part_width.addr.i.i, align 4, !dbg !7255
  %add5.i.i = add nsw i32 %sub4.i.i, %64, !dbg !7256
  %idxprom6.i.i = sext i32 %add5.i.i to i64, !dbg !7257
  %65 = load i32, i32* %list.addr.i.i, align 4, !dbg !7258
  %idxprom7.i.i = sext i32 %65 to i64, !dbg !7257
  %66 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr.i.i, align 8, !dbg !7257
  %mv_cache.i.i = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %66, i32 0, i32 52, !dbg !7259
  %arrayidx8.i.i = getelementptr inbounds [2 x [40 x [2 x i16]]], [2 x [40 x [2 x i16]]]* %mv_cache.i.i, i64 0, i64 %idxprom7.i.i, !dbg !7257
  %arrayidx9.i.i = getelementptr inbounds [40 x [2 x i16]], [40 x [2 x i16]]* %arrayidx8.i.i, i64 0, i64 %idxprom6.i.i, !dbg !7257
  %arraydecay.i.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx9.i.i, i32 0, i32 0, !dbg !7257
  %67 = load i16**, i16*** %C.addr.i.i, align 8, !dbg !7260
  store i16* %arraydecay.i.i, i16** %67, align 8, !dbg !7261
  %68 = load i32, i32* %topright_ref.i.i, align 4, !dbg !7262
  store i32 %68, i32* %retval.i.i, align 4, !dbg !7263
  br label %svq3_fetch_diagonal_mv.exit.i, !dbg !7263

if.else.i.i:                                      ; preds = %if.then
  %69 = load i32, i32* %i.addr.i.i, align 4, !dbg !7264
  %sub10.i.i = sub nsw i32 %69, 8, !dbg !7266
  %sub11.i.i = sub nsw i32 %sub10.i.i, 1, !dbg !7267
  %idxprom12.i.i = sext i32 %sub11.i.i to i64, !dbg !7268
  %70 = load i32, i32* %list.addr.i.i, align 4, !dbg !7269
  %idxprom13.i.i = sext i32 %70 to i64, !dbg !7268
  %71 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr.i.i, align 8, !dbg !7268
  %mv_cache14.i.i = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %71, i32 0, i32 52, !dbg !7270
  %arrayidx15.i.i = getelementptr inbounds [2 x [40 x [2 x i16]]], [2 x [40 x [2 x i16]]]* %mv_cache14.i.i, i64 0, i64 %idxprom13.i.i, !dbg !7268
  %arrayidx16.i.i = getelementptr inbounds [40 x [2 x i16]], [40 x [2 x i16]]* %arrayidx15.i.i, i64 0, i64 %idxprom12.i.i, !dbg !7268
  %arraydecay17.i.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx16.i.i, i32 0, i32 0, !dbg !7268
  %72 = load i16**, i16*** %C.addr.i.i, align 8, !dbg !7271
  store i16* %arraydecay17.i.i, i16** %72, align 8, !dbg !7272
  %73 = load i32, i32* %i.addr.i.i, align 4, !dbg !7273
  %sub18.i.i = sub nsw i32 %73, 8, !dbg !7274
  %sub19.i.i = sub nsw i32 %sub18.i.i, 1, !dbg !7275
  %idxprom20.i.i = sext i32 %sub19.i.i to i64, !dbg !7276
  %74 = load i32, i32* %list.addr.i.i, align 4, !dbg !7277
  %idxprom21.i.i = sext i32 %74 to i64, !dbg !7276
  %75 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr.i.i, align 8, !dbg !7276
  %ref_cache22.i.i = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %75, i32 0, i32 53, !dbg !7278
  %arrayidx23.i.i = getelementptr inbounds [2 x [40 x i8]], [2 x [40 x i8]]* %ref_cache22.i.i, i64 0, i64 %idxprom21.i.i, !dbg !7276
  %arrayidx24.i.i = getelementptr inbounds [40 x i8], [40 x i8]* %arrayidx23.i.i, i64 0, i64 %idxprom20.i.i, !dbg !7276
  %76 = load i8, i8* %arrayidx24.i.i, align 1, !dbg !7276
  %conv25.i.i = sext i8 %76 to i32, !dbg !7276
  store i32 %conv25.i.i, i32* %retval.i.i, align 4, !dbg !7279
  br label %svq3_fetch_diagonal_mv.exit.i, !dbg !7279

svq3_fetch_diagonal_mv.exit.i:                    ; preds = %if.else.i.i, %if.then.i.i
  %77 = load i32, i32* %retval.i.i, align 4, !dbg !7280
  store i32 %77, i32* %diagonal_ref.i, align 4, !dbg !7281
  %78 = load i32, i32* %diagonal_ref.i, align 4, !dbg !7282
  %79 = load i32, i32* %ref.addr.i, align 4, !dbg !7283
  %cmp.i = icmp eq i32 %78, %79, !dbg !7284
  %conv25.i = zext i1 %cmp.i to i32, !dbg !7284
  %80 = load i32, i32* %top_ref.i, align 4, !dbg !7285
  %81 = load i32, i32* %ref.addr.i, align 4, !dbg !7286
  %cmp26.i = icmp eq i32 %80, %81, !dbg !7287
  %conv27.i = zext i1 %cmp26.i to i32, !dbg !7287
  %add.i = add nsw i32 %conv25.i, %conv27.i, !dbg !7288
  %82 = load i32, i32* %left_ref.i, align 4, !dbg !7289
  %83 = load i32, i32* %ref.addr.i, align 4, !dbg !7290
  %cmp28.i = icmp eq i32 %82, %83, !dbg !7291
  %conv29.i = zext i1 %cmp28.i to i32, !dbg !7291
  %add30.i = add nsw i32 %add.i, %conv29.i, !dbg !7292
  store i32 %add30.i, i32* %match_count.i, align 4, !dbg !7293
  %84 = load i32, i32* %match_count.i, align 4, !dbg !7294
  %cmp31.i = icmp sgt i32 %84, 1, !dbg !7296
  br i1 %cmp31.i, label %if.then.i, label %if.else.i, !dbg !7297

if.then.i:                                        ; preds = %svq3_fetch_diagonal_mv.exit.i
  %85 = load i16*, i16** %A.i, align 8, !dbg !7298
  %86 = load i16, i16* %85, align 2, !dbg !7298
  %conv34.i = sext i16 %86 to i32, !dbg !7298
  %87 = load i16*, i16** %B.i, align 8, !dbg !7300
  %88 = load i16, i16* %87, align 2, !dbg !7300
  %conv36.i = sext i16 %88 to i32, !dbg !7300
  %89 = load i16*, i16** %C.i, align 8, !dbg !7301
  %90 = load i16, i16* %89, align 2, !dbg !7301
  %conv38.i = sext i16 %90 to i32, !dbg !7301
  %call39.i = call i32 @mid_pred(i32 %conv34.i, i32 %conv36.i, i32 %conv38.i) #2, !dbg !7302
  %91 = load i32*, i32** %mx.addr.i, align 8, !dbg !7303
  store i32 %call39.i, i32* %91, align 4, !dbg !7304
  %92 = load i16*, i16** %A.i, align 8, !dbg !7305
  %arrayidx40.i = getelementptr inbounds i16, i16* %92, i64 1, !dbg !7305
  %93 = load i16, i16* %arrayidx40.i, align 2, !dbg !7305
  %conv41.i = sext i16 %93 to i32, !dbg !7305
  %94 = load i16*, i16** %B.i, align 8, !dbg !7306
  %arrayidx42.i = getelementptr inbounds i16, i16* %94, i64 1, !dbg !7306
  %95 = load i16, i16* %arrayidx42.i, align 2, !dbg !7306
  %conv43.i = sext i16 %95 to i32, !dbg !7306
  %96 = load i16*, i16** %C.i, align 8, !dbg !7307
  %arrayidx44.i = getelementptr inbounds i16, i16* %96, i64 1, !dbg !7307
  %97 = load i16, i16* %arrayidx44.i, align 2, !dbg !7307
  %conv45.i = sext i16 %97 to i32, !dbg !7307
  %call46.i = call i32 @mid_pred(i32 %conv41.i, i32 %conv43.i, i32 %conv45.i) #2, !dbg !7308
  %98 = load i32*, i32** %my.addr.i, align 8, !dbg !7309
  store i32 %call46.i, i32* %98, align 4, !dbg !7310
  br label %svq3_pred_motion.exit, !dbg !7311

if.else.i:                                        ; preds = %svq3_fetch_diagonal_mv.exit.i
  %99 = load i32, i32* %match_count.i, align 4, !dbg !7312
  %cmp47.i = icmp eq i32 %99, 1, !dbg !7315
  br i1 %cmp47.i, label %if.then49.i, label %if.else71.i, !dbg !7312

if.then49.i:                                      ; preds = %if.else.i
  %100 = load i32, i32* %left_ref.i, align 4, !dbg !7316
  %101 = load i32, i32* %ref.addr.i, align 4, !dbg !7319
  %cmp50.i = icmp eq i32 %100, %101, !dbg !7320
  br i1 %cmp50.i, label %if.then52.i, label %if.else57.i, !dbg !7321

if.then52.i:                                      ; preds = %if.then49.i
  %102 = load i16*, i16** %A.i, align 8, !dbg !7322
  %103 = load i16, i16* %102, align 2, !dbg !7322
  %conv54.i = sext i16 %103 to i32, !dbg !7322
  %104 = load i32*, i32** %mx.addr.i, align 8, !dbg !7324
  store i32 %conv54.i, i32* %104, align 4, !dbg !7325
  %105 = load i16*, i16** %A.i, align 8, !dbg !7326
  %arrayidx55.i = getelementptr inbounds i16, i16* %105, i64 1, !dbg !7326
  %106 = load i16, i16* %arrayidx55.i, align 2, !dbg !7326
  %conv56.i = sext i16 %106 to i32, !dbg !7326
  %107 = load i32*, i32** %my.addr.i, align 8, !dbg !7327
  store i32 %conv56.i, i32* %107, align 4, !dbg !7328
  br label %if.end70.i, !dbg !7329

if.else57.i:                                      ; preds = %if.then49.i
  %108 = load i32, i32* %top_ref.i, align 4, !dbg !7330
  %109 = load i32, i32* %ref.addr.i, align 4, !dbg !7333
  %cmp58.i = icmp eq i32 %108, %109, !dbg !7334
  br i1 %cmp58.i, label %if.then60.i, label %if.else65.i, !dbg !7330

if.then60.i:                                      ; preds = %if.else57.i
  %110 = load i16*, i16** %B.i, align 8, !dbg !7335
  %111 = load i16, i16* %110, align 2, !dbg !7335
  %conv62.i = sext i16 %111 to i32, !dbg !7335
  %112 = load i32*, i32** %mx.addr.i, align 8, !dbg !7337
  store i32 %conv62.i, i32* %112, align 4, !dbg !7338
  %113 = load i16*, i16** %B.i, align 8, !dbg !7339
  %arrayidx63.i = getelementptr inbounds i16, i16* %113, i64 1, !dbg !7339
  %114 = load i16, i16* %arrayidx63.i, align 2, !dbg !7339
  %conv64.i = sext i16 %114 to i32, !dbg !7339
  %115 = load i32*, i32** %my.addr.i, align 8, !dbg !7340
  store i32 %conv64.i, i32* %115, align 4, !dbg !7341
  br label %if.end.i, !dbg !7342

if.else65.i:                                      ; preds = %if.else57.i
  %116 = load i16*, i16** %C.i, align 8, !dbg !7343
  %117 = load i16, i16* %116, align 2, !dbg !7343
  %conv67.i = sext i16 %117 to i32, !dbg !7343
  %118 = load i32*, i32** %mx.addr.i, align 8, !dbg !7345
  store i32 %conv67.i, i32* %118, align 4, !dbg !7346
  %119 = load i16*, i16** %C.i, align 8, !dbg !7347
  %arrayidx68.i = getelementptr inbounds i16, i16* %119, i64 1, !dbg !7347
  %120 = load i16, i16* %arrayidx68.i, align 2, !dbg !7347
  %conv69.i = sext i16 %120 to i32, !dbg !7347
  %121 = load i32*, i32** %my.addr.i, align 8, !dbg !7348
  store i32 %conv69.i, i32* %121, align 4, !dbg !7349
  br label %if.end.i, !dbg !7213

if.end.i:                                         ; preds = %if.else65.i, %if.then60.i
  br label %if.end70.i, !dbg !7213

if.end70.i:                                       ; preds = %if.end.i, %if.then52.i
  br label %if.end100.i, !dbg !7350

if.else71.i:                                      ; preds = %if.else.i
  %122 = load i32, i32* %top_ref.i, align 4, !dbg !7351
  %cmp72.i = icmp eq i32 %122, -2, !dbg !7354
  br i1 %cmp72.i, label %land.lhs.true.i, label %if.else84.i, !dbg !7355

land.lhs.true.i:                                  ; preds = %if.else71.i
  %123 = load i32, i32* %diagonal_ref.i, align 4, !dbg !7356
  %cmp74.i = icmp eq i32 %123, -2, !dbg !7357
  br i1 %cmp74.i, label %land.lhs.true76.i, label %if.else84.i, !dbg !7358

land.lhs.true76.i:                                ; preds = %land.lhs.true.i
  %124 = load i32, i32* %left_ref.i, align 4, !dbg !7359
  %cmp77.i = icmp ne i32 %124, -2, !dbg !7360
  br i1 %cmp77.i, label %if.then79.i, label %if.else84.i, !dbg !7361

if.then79.i:                                      ; preds = %land.lhs.true76.i
  %125 = load i16*, i16** %A.i, align 8, !dbg !7363
  %126 = load i16, i16* %125, align 2, !dbg !7363
  %conv81.i = sext i16 %126 to i32, !dbg !7363
  %127 = load i32*, i32** %mx.addr.i, align 8, !dbg !7365
  store i32 %conv81.i, i32* %127, align 4, !dbg !7366
  %128 = load i16*, i16** %A.i, align 8, !dbg !7367
  %arrayidx82.i = getelementptr inbounds i16, i16* %128, i64 1, !dbg !7367
  %129 = load i16, i16* %arrayidx82.i, align 2, !dbg !7367
  %conv83.i = sext i16 %129 to i32, !dbg !7367
  %130 = load i32*, i32** %my.addr.i, align 8, !dbg !7368
  store i32 %conv83.i, i32* %130, align 4, !dbg !7369
  br label %if.end99.i, !dbg !7370

if.else84.i:                                      ; preds = %land.lhs.true76.i, %land.lhs.true.i, %if.else71.i
  %131 = load i16*, i16** %A.i, align 8, !dbg !7371
  %132 = load i16, i16* %131, align 2, !dbg !7371
  %conv86.i = sext i16 %132 to i32, !dbg !7371
  %133 = load i16*, i16** %B.i, align 8, !dbg !7373
  %134 = load i16, i16* %133, align 2, !dbg !7373
  %conv88.i = sext i16 %134 to i32, !dbg !7373
  %135 = load i16*, i16** %C.i, align 8, !dbg !7374
  %136 = load i16, i16* %135, align 2, !dbg !7374
  %conv90.i = sext i16 %136 to i32, !dbg !7374
  %call91.i = call i32 @mid_pred(i32 %conv86.i, i32 %conv88.i, i32 %conv90.i) #2, !dbg !7375
  %137 = load i32*, i32** %mx.addr.i, align 8, !dbg !7376
  store i32 %call91.i, i32* %137, align 4, !dbg !7377
  %138 = load i16*, i16** %A.i, align 8, !dbg !7378
  %arrayidx92.i = getelementptr inbounds i16, i16* %138, i64 1, !dbg !7378
  %139 = load i16, i16* %arrayidx92.i, align 2, !dbg !7378
  %conv93.i = sext i16 %139 to i32, !dbg !7378
  %140 = load i16*, i16** %B.i, align 8, !dbg !7379
  %arrayidx94.i = getelementptr inbounds i16, i16* %140, i64 1, !dbg !7379
  %141 = load i16, i16* %arrayidx94.i, align 2, !dbg !7379
  %conv95.i = sext i16 %141 to i32, !dbg !7379
  %142 = load i16*, i16** %C.i, align 8, !dbg !7380
  %arrayidx96.i = getelementptr inbounds i16, i16* %142, i64 1, !dbg !7380
  %143 = load i16, i16* %arrayidx96.i, align 2, !dbg !7380
  %conv97.i = sext i16 %143 to i32, !dbg !7380
  %call98.i = call i32 @mid_pred(i32 %conv93.i, i32 %conv95.i, i32 %conv97.i) #2, !dbg !7381
  %144 = load i32*, i32** %my.addr.i, align 8, !dbg !7382
  store i32 %call98.i, i32* %144, align 4, !dbg !7383
  br label %if.end99.i, !dbg !7213

if.end99.i:                                       ; preds = %if.else84.i, %if.then79.i
  br label %if.end100.i, !dbg !7213

if.end100.i:                                      ; preds = %if.end99.i, %if.end70.i
  br label %svq3_pred_motion.exit, !dbg !7213

svq3_pred_motion.exit:                            ; preds = %if.then.i, %if.end100.i
  br label %if.end82, !dbg !7384

if.else:                                          ; preds = %for.body14
  %145 = load i32, i32* %b_xy, align 4, !dbg !7385
  %idxprom = sext i32 %145 to i64, !dbg !7387
  %146 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !7387
  %next_pic = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %146, i32 0, i32 7, !dbg !7388
  %147 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %next_pic, align 8, !dbg !7388
  %motion_val = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %147, i32 0, i32 2, !dbg !7389
  %arrayidx = getelementptr inbounds [2 x [2 x i16]*], [2 x [2 x i16]*]* %motion_val, i64 0, i64 0, !dbg !7387
  %148 = load [2 x i16]*, [2 x i16]** %arrayidx, align 8, !dbg !7387
  %arrayidx41 = getelementptr inbounds [2 x i16], [2 x i16]* %148, i64 %idxprom, !dbg !7387
  %arrayidx42 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx41, i64 0, i64 0, !dbg !7387
  %149 = load i16, i16* %arrayidx42, align 2, !dbg !7387
  %conv = sext i16 %149 to i32, !dbg !7387
  %mul43 = mul nsw i32 %conv, 2, !dbg !7390
  store i32 %mul43, i32* %mx, align 4, !dbg !7391
  %150 = load i32, i32* %b_xy, align 4, !dbg !7392
  %idxprom44 = sext i32 %150 to i64, !dbg !7393
  %151 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !7393
  %next_pic45 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %151, i32 0, i32 7, !dbg !7394
  %152 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %next_pic45, align 8, !dbg !7394
  %motion_val46 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %152, i32 0, i32 2, !dbg !7395
  %arrayidx47 = getelementptr inbounds [2 x [2 x i16]*], [2 x [2 x i16]*]* %motion_val46, i64 0, i64 0, !dbg !7393
  %153 = load [2 x i16]*, [2 x i16]** %arrayidx47, align 8, !dbg !7393
  %arrayidx48 = getelementptr inbounds [2 x i16], [2 x i16]* %153, i64 %idxprom44, !dbg !7393
  %arrayidx49 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx48, i64 0, i64 1, !dbg !7393
  %154 = load i16, i16* %arrayidx49, align 2, !dbg !7393
  %conv50 = sext i16 %154 to i32, !dbg !7393
  %mul51 = mul nsw i32 %conv50, 2, !dbg !7396
  store i32 %mul51, i32* %my, align 4, !dbg !7397
  %155 = load i32, i32* %dir.addr, align 4, !dbg !7398
  %cmp52 = icmp eq i32 %155, 0, !dbg !7400
  br i1 %cmp52, label %if.then54, label %if.else65, !dbg !7401

if.then54:                                        ; preds = %if.else
  %156 = load i32, i32* %mx, align 4, !dbg !7402
  %157 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !7404
  %frame_num_offset = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %157, i32 0, i32 28, !dbg !7405
  %158 = load i32, i32* %frame_num_offset, align 8, !dbg !7405
  %mul55 = mul nsw i32 %156, %158, !dbg !7406
  %159 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !7407
  %prev_frame_num_offset = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %159, i32 0, i32 29, !dbg !7408
  %160 = load i32, i32* %prev_frame_num_offset, align 4, !dbg !7408
  %div56 = sdiv i32 %mul55, %160, !dbg !7409
  %add57 = add nsw i32 %div56, 1, !dbg !7410
  %shr58 = ashr i32 %add57, 1, !dbg !7411
  store i32 %shr58, i32* %mx, align 4, !dbg !7412
  %161 = load i32, i32* %my, align 4, !dbg !7413
  %162 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !7414
  %frame_num_offset59 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %162, i32 0, i32 28, !dbg !7415
  %163 = load i32, i32* %frame_num_offset59, align 8, !dbg !7415
  %mul60 = mul nsw i32 %161, %163, !dbg !7416
  %164 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !7417
  %prev_frame_num_offset61 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %164, i32 0, i32 29, !dbg !7418
  %165 = load i32, i32* %prev_frame_num_offset61, align 4, !dbg !7418
  %div62 = sdiv i32 %mul60, %165, !dbg !7419
  %add63 = add nsw i32 %div62, 1, !dbg !7420
  %shr64 = ashr i32 %add63, 1, !dbg !7421
  store i32 %shr64, i32* %my, align 4, !dbg !7422
  br label %if.end, !dbg !7423

if.else65:                                        ; preds = %if.else
  %166 = load i32, i32* %mx, align 4, !dbg !7424
  %167 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !7426
  %frame_num_offset66 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %167, i32 0, i32 28, !dbg !7427
  %168 = load i32, i32* %frame_num_offset66, align 8, !dbg !7427
  %169 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !7428
  %prev_frame_num_offset67 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %169, i32 0, i32 29, !dbg !7429
  %170 = load i32, i32* %prev_frame_num_offset67, align 4, !dbg !7429
  %sub68 = sub nsw i32 %168, %170, !dbg !7430
  %mul69 = mul nsw i32 %166, %sub68, !dbg !7431
  %171 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !7432
  %prev_frame_num_offset70 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %171, i32 0, i32 29, !dbg !7433
  %172 = load i32, i32* %prev_frame_num_offset70, align 4, !dbg !7433
  %div71 = sdiv i32 %mul69, %172, !dbg !7434
  %add72 = add nsw i32 %div71, 1, !dbg !7435
  %shr73 = ashr i32 %add72, 1, !dbg !7436
  store i32 %shr73, i32* %mx, align 4, !dbg !7437
  %173 = load i32, i32* %my, align 4, !dbg !7438
  %174 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !7439
  %frame_num_offset74 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %174, i32 0, i32 28, !dbg !7440
  %175 = load i32, i32* %frame_num_offset74, align 8, !dbg !7440
  %176 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !7441
  %prev_frame_num_offset75 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %176, i32 0, i32 29, !dbg !7442
  %177 = load i32, i32* %prev_frame_num_offset75, align 4, !dbg !7442
  %sub76 = sub nsw i32 %175, %177, !dbg !7443
  %mul77 = mul nsw i32 %173, %sub76, !dbg !7444
  %178 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !7445
  %prev_frame_num_offset78 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %178, i32 0, i32 29, !dbg !7446
  %179 = load i32, i32* %prev_frame_num_offset78, align 4, !dbg !7446
  %div79 = sdiv i32 %mul77, %179, !dbg !7447
  %add80 = add nsw i32 %div79, 1, !dbg !7448
  %shr81 = ashr i32 %add80, 1, !dbg !7449
  store i32 %shr81, i32* %my, align 4, !dbg !7450
  br label %if.end

if.end:                                           ; preds = %if.else65, %if.then54
  br label %if.end82

if.end82:                                         ; preds = %if.end, %svq3_pred_motion.exit
  %180 = load i32, i32* %mx, align 4, !dbg !7451
  %181 = load i32, i32* %extra_width, align 4, !dbg !7452
  %182 = load i32, i32* %x, align 4, !dbg !7453
  %mul83 = mul nsw i32 6, %182, !dbg !7454
  %sub84 = sub nsw i32 %181, %mul83, !dbg !7455
  %183 = load i32, i32* %h_edge_pos, align 4, !dbg !7456
  %184 = load i32, i32* %x, align 4, !dbg !7457
  %mul85 = mul nsw i32 6, %184, !dbg !7458
  %sub86 = sub nsw i32 %183, %mul85, !dbg !7459
  store i32 %180, i32* %a.addr.i, align 4, !dbg !7460
  store i32 %sub84, i32* %amin.addr.i, align 4, !dbg !7460
  store i32 %sub86, i32* %amax.addr.i, align 4, !dbg !7460
  %185 = load i32, i32* %a.addr.i, align 4, !dbg !7461
  %186 = load i32, i32* %amin.addr.i, align 4, !dbg !7462
  %cmp.i259 = icmp slt i32 %185, %186, !dbg !7463
  br i1 %cmp.i259, label %if.then.i260, label %if.else.i261, !dbg !7464

if.then.i260:                                     ; preds = %if.end82
  %187 = load i32, i32* %amin.addr.i, align 4, !dbg !7465
  store i32 %187, i32* %retval.i, align 4, !dbg !7466
  br label %av_clip_c.exit, !dbg !7466

if.else.i261:                                     ; preds = %if.end82
  %188 = load i32, i32* %a.addr.i, align 4, !dbg !7467
  %189 = load i32, i32* %amax.addr.i, align 4, !dbg !7468
  %cmp1.i = icmp sgt i32 %188, %189, !dbg !7469
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !7470

if.then2.i:                                       ; preds = %if.else.i261
  %190 = load i32, i32* %amax.addr.i, align 4, !dbg !7471
  store i32 %190, i32* %retval.i, align 4, !dbg !7472
  br label %av_clip_c.exit, !dbg !7472

if.else3.i:                                       ; preds = %if.else.i261
  %191 = load i32, i32* %a.addr.i, align 4, !dbg !7473
  store i32 %191, i32* %retval.i, align 4, !dbg !7474
  br label %av_clip_c.exit, !dbg !7474

av_clip_c.exit:                                   ; preds = %if.then.i260, %if.then2.i, %if.else3.i
  %192 = load i32, i32* %retval.i, align 4, !dbg !7475
  store i32 %192, i32* %mx, align 4, !dbg !7476
  %193 = load i32, i32* %my, align 4, !dbg !7477
  %194 = load i32, i32* %extra_width, align 4, !dbg !7478
  %195 = load i32, i32* %y, align 4, !dbg !7479
  %mul87 = mul nsw i32 6, %195, !dbg !7480
  %sub88 = sub nsw i32 %194, %mul87, !dbg !7481
  %196 = load i32, i32* %v_edge_pos, align 4, !dbg !7482
  %197 = load i32, i32* %y, align 4, !dbg !7483
  %mul89 = mul nsw i32 6, %197, !dbg !7484
  %sub90 = sub nsw i32 %196, %mul89, !dbg !7485
  store i32 %193, i32* %a.addr.i263, align 4, !dbg !7486
  store i32 %sub88, i32* %amin.addr.i264, align 4, !dbg !7486
  store i32 %sub90, i32* %amax.addr.i265, align 4, !dbg !7486
  %198 = load i32, i32* %a.addr.i263, align 4, !dbg !7487
  %199 = load i32, i32* %amin.addr.i264, align 4, !dbg !7488
  %cmp.i266 = icmp slt i32 %198, %199, !dbg !7489
  br i1 %cmp.i266, label %if.then.i267, label %if.else.i269, !dbg !7490

if.then.i267:                                     ; preds = %av_clip_c.exit
  %200 = load i32, i32* %amin.addr.i264, align 4, !dbg !7491
  store i32 %200, i32* %retval.i262, align 4, !dbg !7492
  br label %av_clip_c.exit272, !dbg !7492

if.else.i269:                                     ; preds = %av_clip_c.exit
  %201 = load i32, i32* %a.addr.i263, align 4, !dbg !7493
  %202 = load i32, i32* %amax.addr.i265, align 4, !dbg !7494
  %cmp1.i268 = icmp sgt i32 %201, %202, !dbg !7495
  br i1 %cmp1.i268, label %if.then2.i270, label %if.else3.i271, !dbg !7496

if.then2.i270:                                    ; preds = %if.else.i269
  %203 = load i32, i32* %amax.addr.i265, align 4, !dbg !7497
  store i32 %203, i32* %retval.i262, align 4, !dbg !7498
  br label %av_clip_c.exit272, !dbg !7498

if.else3.i271:                                    ; preds = %if.else.i269
  %204 = load i32, i32* %a.addr.i263, align 4, !dbg !7499
  store i32 %204, i32* %retval.i262, align 4, !dbg !7500
  br label %av_clip_c.exit272, !dbg !7500

av_clip_c.exit272:                                ; preds = %if.then.i267, %if.then2.i270, %if.else3.i271
  %205 = load i32, i32* %retval.i262, align 4, !dbg !7501
  store i32 %205, i32* %my, align 4, !dbg !7502
  %206 = load i32, i32* %mode.addr, align 4, !dbg !7503
  %cmp92 = icmp eq i32 %206, 4, !dbg !7505
  br i1 %cmp92, label %if.then94, label %if.else95, !dbg !7506

if.then94:                                        ; preds = %av_clip_c.exit272
  store i32 0, i32* %dy, align 4, !dbg !7507
  store i32 0, i32* %dx, align 4, !dbg !7509
  br label %if.end109, !dbg !7510

if.else95:                                        ; preds = %av_clip_c.exit272
  %207 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !7511
  %gb_slice = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %207, i32 0, i32 10, !dbg !7513
  %call96 = call i32 @get_interleaved_se_golomb(%struct.GetBitContext* %gb_slice), !dbg !7514
  store i32 %call96, i32* %dy, align 4, !dbg !7515
  %208 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !7516
  %gb_slice97 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %208, i32 0, i32 10, !dbg !7517
  %call98 = call i32 @get_interleaved_se_golomb(%struct.GetBitContext* %gb_slice97), !dbg !7518
  store i32 %call98, i32* %dx, align 4, !dbg !7519
  %209 = load i32, i32* %dx, align 4, !dbg !7520
  %210 = load i32, i32* %dx, align 4, !dbg !7522
  %conv99 = trunc i32 %210 to i16, !dbg !7523
  %conv100 = sext i16 %conv99 to i32, !dbg !7523
  %cmp101 = icmp ne i32 %209, %conv100, !dbg !7524
  br i1 %cmp101, label %if.then107, label %lor.lhs.false, !dbg !7525

lor.lhs.false:                                    ; preds = %if.else95
  %211 = load i32, i32* %dy, align 4, !dbg !7526
  %212 = load i32, i32* %dy, align 4, !dbg !7528
  %conv103 = trunc i32 %212 to i16, !dbg !7529
  %conv104 = sext i16 %conv103 to i32, !dbg !7529
  %cmp105 = icmp ne i32 %211, %conv104, !dbg !7530
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !7531

if.then107:                                       ; preds = %lor.lhs.false, %if.else95
  %213 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !7532
  %avctx = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %213, i32 0, i32 0, !dbg !7534
  %214 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 16, !dbg !7534
  %215 = bitcast %struct.AVCodecContext* %214 to i8*, !dbg !7532
  call void (i8*, i32, i8*, ...) @av_log(i8* %215, i32 16, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28, i32 0, i32 0)), !dbg !7535
  store i32 -1, i32* %retval, align 4, !dbg !7536
  br label %return, !dbg !7536

if.end108:                                        ; preds = %lor.lhs.false
  br label %if.end109

if.end109:                                        ; preds = %if.end108, %if.then94
  %216 = load i32, i32* %mode.addr, align 4, !dbg !7537
  %cmp110 = icmp eq i32 %216, 3, !dbg !7539
  br i1 %cmp110, label %if.then112, label %if.else133, !dbg !7540

if.then112:                                       ; preds = %if.end109
  call void @llvm.dbg.declare(metadata i32* %fx, metadata !7541, metadata !1727), !dbg !7543
  call void @llvm.dbg.declare(metadata i32* %fy, metadata !7544, metadata !1727), !dbg !7545
  %217 = load i32, i32* %mx, align 4, !dbg !7546
  %add113 = add nsw i32 %217, 1, !dbg !7547
  %shr114 = ashr i32 %add113, 1, !dbg !7548
  %218 = load i32, i32* %dx, align 4, !dbg !7549
  %add115 = add nsw i32 %shr114, %218, !dbg !7550
  store i32 %add115, i32* %mx, align 4, !dbg !7551
  %219 = load i32, i32* %my, align 4, !dbg !7552
  %add116 = add nsw i32 %219, 1, !dbg !7553
  %shr117 = ashr i32 %add116, 1, !dbg !7554
  %220 = load i32, i32* %dy, align 4, !dbg !7555
  %add118 = add nsw i32 %shr117, %220, !dbg !7556
  store i32 %add118, i32* %my, align 4, !dbg !7557
  %221 = load i32, i32* %mx, align 4, !dbg !7558
  %add119 = add nsw i32 %221, 196608, !dbg !7559
  %div120 = udiv i32 %add119, 3, !dbg !7560
  %sub121 = sub i32 %div120, 65536, !dbg !7561
  store i32 %sub121, i32* %fx, align 4, !dbg !7562
  %222 = load i32, i32* %my, align 4, !dbg !7563
  %add122 = add nsw i32 %222, 196608, !dbg !7564
  %div123 = udiv i32 %add122, 3, !dbg !7565
  %sub124 = sub i32 %div123, 65536, !dbg !7566
  store i32 %sub124, i32* %fy, align 4, !dbg !7567
  %223 = load i32, i32* %mx, align 4, !dbg !7568
  %224 = load i32, i32* %fx, align 4, !dbg !7569
  %mul125 = mul nsw i32 3, %224, !dbg !7570
  %sub126 = sub nsw i32 %223, %mul125, !dbg !7571
  %225 = load i32, i32* %my, align 4, !dbg !7572
  %226 = load i32, i32* %fy, align 4, !dbg !7573
  %mul127 = mul nsw i32 3, %226, !dbg !7574
  %sub128 = sub nsw i32 %225, %mul127, !dbg !7575
  %mul129 = mul nsw i32 4, %sub128, !dbg !7576
  %add130 = add nsw i32 %sub126, %mul129, !dbg !7577
  store i32 %add130, i32* %dxy, align 4, !dbg !7578
  %227 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !7579
  %228 = load i32, i32* %x, align 4, !dbg !7580
  %229 = load i32, i32* %y, align 4, !dbg !7581
  %230 = load i32, i32* %part_width, align 4, !dbg !7582
  %231 = load i32, i32* %part_height, align 4, !dbg !7583
  %232 = load i32, i32* %fx, align 4, !dbg !7584
  %233 = load i32, i32* %fy, align 4, !dbg !7585
  %234 = load i32, i32* %dxy, align 4, !dbg !7586
  %235 = load i32, i32* %dir.addr, align 4, !dbg !7587
  %236 = load i32, i32* %avg.addr, align 4, !dbg !7588
  call void @svq3_mc_dir_part(%struct.SVQ3Context* %227, i32 %228, i32 %229, i32 %230, i32 %231, i32 %232, i32 %233, i32 %234, i32 1, i32 %235, i32 %236), !dbg !7589
  %237 = load i32, i32* %mx, align 4, !dbg !7590
  %238 = load i32, i32* %mx, align 4, !dbg !7591
  %add131 = add nsw i32 %238, %237, !dbg !7591
  store i32 %add131, i32* %mx, align 4, !dbg !7591
  %239 = load i32, i32* %my, align 4, !dbg !7592
  %240 = load i32, i32* %my, align 4, !dbg !7593
  %add132 = add nsw i32 %240, %239, !dbg !7593
  store i32 %add132, i32* %my, align 4, !dbg !7593
  br label %if.end172, !dbg !7594

if.else133:                                       ; preds = %if.end109
  %241 = load i32, i32* %mode.addr, align 4, !dbg !7595
  %cmp134 = icmp eq i32 %241, 2, !dbg !7598
  br i1 %cmp134, label %if.then139, label %lor.lhs.false136, !dbg !7599

lor.lhs.false136:                                 ; preds = %if.else133
  %242 = load i32, i32* %mode.addr, align 4, !dbg !7600
  %cmp137 = icmp eq i32 %242, 4, !dbg !7602
  br i1 %cmp137, label %if.then139, label %if.else158, !dbg !7603

if.then139:                                       ; preds = %lor.lhs.false136, %if.else133
  %243 = load i32, i32* %mx, align 4, !dbg !7604
  %add140 = add nsw i32 %243, 1, !dbg !7606
  %add141 = add nsw i32 %add140, 196608, !dbg !7607
  %div142 = udiv i32 %add141, 3, !dbg !7608
  %244 = load i32, i32* %dx, align 4, !dbg !7609
  %add143 = add i32 %div142, %244, !dbg !7610
  %sub144 = sub i32 %add143, 65536, !dbg !7611
  store i32 %sub144, i32* %mx, align 4, !dbg !7612
  %245 = load i32, i32* %my, align 4, !dbg !7613
  %add145 = add nsw i32 %245, 1, !dbg !7614
  %add146 = add nsw i32 %add145, 196608, !dbg !7615
  %div147 = udiv i32 %add146, 3, !dbg !7616
  %246 = load i32, i32* %dy, align 4, !dbg !7617
  %add148 = add i32 %div147, %246, !dbg !7618
  %sub149 = sub i32 %add148, 65536, !dbg !7619
  store i32 %sub149, i32* %my, align 4, !dbg !7620
  %247 = load i32, i32* %mx, align 4, !dbg !7621
  %and150 = and i32 %247, 1, !dbg !7622
  %248 = load i32, i32* %my, align 4, !dbg !7623
  %and151 = and i32 %248, 1, !dbg !7624
  %mul152 = mul nsw i32 2, %and151, !dbg !7625
  %add153 = add nsw i32 %and150, %mul152, !dbg !7626
  store i32 %add153, i32* %dxy, align 4, !dbg !7627
  %249 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !7628
  %250 = load i32, i32* %x, align 4, !dbg !7629
  %251 = load i32, i32* %y, align 4, !dbg !7630
  %252 = load i32, i32* %part_width, align 4, !dbg !7631
  %253 = load i32, i32* %part_height, align 4, !dbg !7632
  %254 = load i32, i32* %mx, align 4, !dbg !7633
  %shr154 = ashr i32 %254, 1, !dbg !7634
  %255 = load i32, i32* %my, align 4, !dbg !7635
  %shr155 = ashr i32 %255, 1, !dbg !7636
  %256 = load i32, i32* %dxy, align 4, !dbg !7637
  %257 = load i32, i32* %dir.addr, align 4, !dbg !7638
  %258 = load i32, i32* %avg.addr, align 4, !dbg !7639
  call void @svq3_mc_dir_part(%struct.SVQ3Context* %249, i32 %250, i32 %251, i32 %252, i32 %253, i32 %shr154, i32 %shr155, i32 %256, i32 0, i32 %257, i32 %258), !dbg !7640
  %259 = load i32, i32* %mx, align 4, !dbg !7641
  %mul156 = mul nsw i32 %259, 3, !dbg !7641
  store i32 %mul156, i32* %mx, align 4, !dbg !7641
  %260 = load i32, i32* %my, align 4, !dbg !7642
  %mul157 = mul nsw i32 %260, 3, !dbg !7642
  store i32 %mul157, i32* %my, align 4, !dbg !7642
  br label %if.end171, !dbg !7643

if.else158:                                       ; preds = %lor.lhs.false136
  %261 = load i32, i32* %mx, align 4, !dbg !7644
  %add159 = add nsw i32 %261, 3, !dbg !7646
  %add160 = add nsw i32 %add159, 393216, !dbg !7647
  %div161 = udiv i32 %add160, 6, !dbg !7648
  %262 = load i32, i32* %dx, align 4, !dbg !7649
  %add162 = add i32 %div161, %262, !dbg !7650
  %sub163 = sub i32 %add162, 65536, !dbg !7651
  store i32 %sub163, i32* %mx, align 4, !dbg !7652
  %263 = load i32, i32* %my, align 4, !dbg !7653
  %add164 = add nsw i32 %263, 3, !dbg !7654
  %add165 = add nsw i32 %add164, 393216, !dbg !7655
  %div166 = udiv i32 %add165, 6, !dbg !7656
  %264 = load i32, i32* %dy, align 4, !dbg !7657
  %add167 = add i32 %div166, %264, !dbg !7658
  %sub168 = sub i32 %add167, 65536, !dbg !7659
  store i32 %sub168, i32* %my, align 4, !dbg !7660
  %265 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !7661
  %266 = load i32, i32* %x, align 4, !dbg !7662
  %267 = load i32, i32* %y, align 4, !dbg !7663
  %268 = load i32, i32* %part_width, align 4, !dbg !7664
  %269 = load i32, i32* %part_height, align 4, !dbg !7665
  %270 = load i32, i32* %mx, align 4, !dbg !7666
  %271 = load i32, i32* %my, align 4, !dbg !7667
  %272 = load i32, i32* %dir.addr, align 4, !dbg !7668
  %273 = load i32, i32* %avg.addr, align 4, !dbg !7669
  call void @svq3_mc_dir_part(%struct.SVQ3Context* %265, i32 %266, i32 %267, i32 %268, i32 %269, i32 %270, i32 %271, i32 0, i32 0, i32 %272, i32 %273), !dbg !7670
  %274 = load i32, i32* %mx, align 4, !dbg !7671
  %mul169 = mul nsw i32 %274, 6, !dbg !7671
  store i32 %mul169, i32* %mx, align 4, !dbg !7671
  %275 = load i32, i32* %my, align 4, !dbg !7672
  %mul170 = mul nsw i32 %275, 6, !dbg !7672
  store i32 %mul170, i32* %my, align 4, !dbg !7672
  br label %if.end171

if.end171:                                        ; preds = %if.else158, %if.then139
  br label %if.end172

if.end172:                                        ; preds = %if.end171, %if.then112
  %276 = load i32, i32* %mode.addr, align 4, !dbg !7673
  %cmp173 = icmp ne i32 %276, 4, !dbg !7674
  br i1 %cmp173, label %if.then175, label %if.end244, !dbg !7675

if.then175:                                       ; preds = %if.end172
  call void @llvm.dbg.declare(metadata i32* %mv, metadata !7676, metadata !1727), !dbg !7677
  %277 = load i32, i32* %mx, align 4, !dbg !7678
  %278 = load i32, i32* %my, align 4, !dbg !7679
  store i32 %277, i32* %a.addr.i273, align 4, !dbg !7680
  store i32 %278, i32* %b.addr.i, align 4, !dbg !7680
  %279 = load i32, i32* %a.addr.i273, align 4, !dbg !7681
  %and.i = and i32 %279, 65535, !dbg !7682
  %280 = load i32, i32* %b.addr.i, align 4, !dbg !7683
  %shl.i = shl i32 %280, 16, !dbg !7684
  %add.i274 = add i32 %and.i, %shl.i, !dbg !7685
  store i32 %add.i274, i32* %mv, align 4, !dbg !7677
  %281 = load i32, i32* %part_height, align 4, !dbg !7686
  %cmp177 = icmp eq i32 %281, 8, !dbg !7688
  br i1 %cmp177, label %land.lhs.true, label %if.end209, !dbg !7689

land.lhs.true:                                    ; preds = %if.then175
  %282 = load i32, i32* %i, align 4, !dbg !7690
  %cmp179 = icmp slt i32 %282, 8, !dbg !7692
  br i1 %cmp179, label %if.then181, label %if.end209, !dbg !7693

if.then181:                                       ; preds = %land.lhs.true
  %283 = load i32, i32* %mv, align 4, !dbg !7694
  %284 = load i32, i32* %k, align 4, !dbg !7696
  %idxprom182 = sext i32 %284 to i64, !dbg !7697
  %arrayidx183 = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom182, !dbg !7697
  %285 = load i8, i8* %arrayidx183, align 1, !dbg !7697
  %conv184 = zext i8 %285 to i32, !dbg !7697
  %add185 = add nsw i32 %conv184, 8, !dbg !7698
  %idxprom186 = sext i32 %add185 to i64, !dbg !7699
  %286 = load i32, i32* %dir.addr, align 4, !dbg !7700
  %idxprom187 = sext i32 %286 to i64, !dbg !7699
  %287 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !7699
  %mv_cache = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %287, i32 0, i32 52, !dbg !7701
  %arrayidx188 = getelementptr inbounds [2 x [40 x [2 x i16]]], [2 x [40 x [2 x i16]]]* %mv_cache, i64 0, i64 %idxprom187, !dbg !7699
  %arrayidx189 = getelementptr inbounds [40 x [2 x i16]], [40 x [2 x i16]]* %arrayidx188, i64 0, i64 %idxprom186, !dbg !7699
  %arraydecay = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx189, i32 0, i32 0, !dbg !7702
  %288 = bitcast i16* %arraydecay to %union.av_alias32*, !dbg !7702
  %u32 = bitcast %union.av_alias32* %288 to i32*, !dbg !7702
  store i32 %283, i32* %u32, align 4, !dbg !7703
  %289 = load i32, i32* %part_width, align 4, !dbg !7704
  %cmp190 = icmp eq i32 %289, 8, !dbg !7706
  br i1 %cmp190, label %land.lhs.true192, label %if.end208, !dbg !7707

land.lhs.true192:                                 ; preds = %if.then181
  %290 = load i32, i32* %j, align 4, !dbg !7708
  %cmp193 = icmp slt i32 %290, 8, !dbg !7710
  br i1 %cmp193, label %if.then195, label %if.end208, !dbg !7711

if.then195:                                       ; preds = %land.lhs.true192
  %291 = load i32, i32* %mv, align 4, !dbg !7712
  %292 = load i32, i32* %k, align 4, !dbg !7713
  %idxprom196 = sext i32 %292 to i64, !dbg !7714
  %arrayidx197 = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom196, !dbg !7714
  %293 = load i8, i8* %arrayidx197, align 1, !dbg !7714
  %conv198 = zext i8 %293 to i32, !dbg !7714
  %add199 = add nsw i32 %conv198, 1, !dbg !7715
  %add200 = add nsw i32 %add199, 8, !dbg !7716
  %idxprom201 = sext i32 %add200 to i64, !dbg !7717
  %294 = load i32, i32* %dir.addr, align 4, !dbg !7718
  %idxprom202 = sext i32 %294 to i64, !dbg !7717
  %295 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !7717
  %mv_cache203 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %295, i32 0, i32 52, !dbg !7719
  %arrayidx204 = getelementptr inbounds [2 x [40 x [2 x i16]]], [2 x [40 x [2 x i16]]]* %mv_cache203, i64 0, i64 %idxprom202, !dbg !7717
  %arrayidx205 = getelementptr inbounds [40 x [2 x i16]], [40 x [2 x i16]]* %arrayidx204, i64 0, i64 %idxprom201, !dbg !7717
  %arraydecay206 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx205, i32 0, i32 0, !dbg !7720
  %296 = bitcast i16* %arraydecay206 to %union.av_alias32*, !dbg !7720
  %u32207 = bitcast %union.av_alias32* %296 to i32*, !dbg !7720
  store i32 %291, i32* %u32207, align 4, !dbg !7721
  br label %if.end208, !dbg !7722

if.end208:                                        ; preds = %if.then195, %land.lhs.true192, %if.then181
  br label %if.end209, !dbg !7723

if.end209:                                        ; preds = %if.end208, %land.lhs.true, %if.then175
  %297 = load i32, i32* %part_width, align 4, !dbg !7724
  %cmp210 = icmp eq i32 %297, 8, !dbg !7726
  br i1 %cmp210, label %land.lhs.true212, label %if.end227, !dbg !7727

land.lhs.true212:                                 ; preds = %if.end209
  %298 = load i32, i32* %j, align 4, !dbg !7728
  %cmp213 = icmp slt i32 %298, 8, !dbg !7730
  br i1 %cmp213, label %if.then215, label %if.end227, !dbg !7731

if.then215:                                       ; preds = %land.lhs.true212
  %299 = load i32, i32* %mv, align 4, !dbg !7732
  %300 = load i32, i32* %k, align 4, !dbg !7733
  %idxprom216 = sext i32 %300 to i64, !dbg !7734
  %arrayidx217 = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom216, !dbg !7734
  %301 = load i8, i8* %arrayidx217, align 1, !dbg !7734
  %conv218 = zext i8 %301 to i32, !dbg !7734
  %add219 = add nsw i32 %conv218, 1, !dbg !7735
  %idxprom220 = sext i32 %add219 to i64, !dbg !7736
  %302 = load i32, i32* %dir.addr, align 4, !dbg !7737
  %idxprom221 = sext i32 %302 to i64, !dbg !7736
  %303 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !7736
  %mv_cache222 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %303, i32 0, i32 52, !dbg !7738
  %arrayidx223 = getelementptr inbounds [2 x [40 x [2 x i16]]], [2 x [40 x [2 x i16]]]* %mv_cache222, i64 0, i64 %idxprom221, !dbg !7736
  %arrayidx224 = getelementptr inbounds [40 x [2 x i16]], [40 x [2 x i16]]* %arrayidx223, i64 0, i64 %idxprom220, !dbg !7736
  %arraydecay225 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx224, i32 0, i32 0, !dbg !7739
  %304 = bitcast i16* %arraydecay225 to %union.av_alias32*, !dbg !7739
  %u32226 = bitcast %union.av_alias32* %304 to i32*, !dbg !7739
  store i32 %299, i32* %u32226, align 4, !dbg !7740
  br label %if.end227, !dbg !7741

if.end227:                                        ; preds = %if.then215, %land.lhs.true212, %if.end209
  %305 = load i32, i32* %part_width, align 4, !dbg !7742
  %cmp228 = icmp eq i32 %305, 4, !dbg !7744
  br i1 %cmp228, label %if.then233, label %lor.lhs.false230, !dbg !7745

lor.lhs.false230:                                 ; preds = %if.end227
  %306 = load i32, i32* %part_height, align 4, !dbg !7746
  %cmp231 = icmp eq i32 %306, 4, !dbg !7748
  br i1 %cmp231, label %if.then233, label %if.end243, !dbg !7749

if.then233:                                       ; preds = %lor.lhs.false230, %if.end227
  %307 = load i32, i32* %mv, align 4, !dbg !7750
  %308 = load i32, i32* %k, align 4, !dbg !7751
  %idxprom234 = sext i32 %308 to i64, !dbg !7752
  %arrayidx235 = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom234, !dbg !7752
  %309 = load i8, i8* %arrayidx235, align 1, !dbg !7752
  %idxprom236 = zext i8 %309 to i64, !dbg !7753
  %310 = load i32, i32* %dir.addr, align 4, !dbg !7754
  %idxprom237 = sext i32 %310 to i64, !dbg !7753
  %311 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !7753
  %mv_cache238 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %311, i32 0, i32 52, !dbg !7755
  %arrayidx239 = getelementptr inbounds [2 x [40 x [2 x i16]]], [2 x [40 x [2 x i16]]]* %mv_cache238, i64 0, i64 %idxprom237, !dbg !7753
  %arrayidx240 = getelementptr inbounds [40 x [2 x i16]], [40 x [2 x i16]]* %arrayidx239, i64 0, i64 %idxprom236, !dbg !7753
  %arraydecay241 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx240, i32 0, i32 0, !dbg !7756
  %312 = bitcast i16* %arraydecay241 to %union.av_alias32*, !dbg !7756
  %u32242 = bitcast %union.av_alias32* %312 to i32*, !dbg !7756
  store i32 %307, i32* %u32242, align 4, !dbg !7757
  br label %if.end243, !dbg !7758

if.end243:                                        ; preds = %if.then233, %lor.lhs.false230
  br label %if.end244, !dbg !7759

if.end244:                                        ; preds = %if.end243, %if.end172
  %313 = load i32, i32* %b_xy, align 4, !dbg !7760
  %idxprom245 = sext i32 %313 to i64, !dbg !7761
  %314 = load i32, i32* %dir.addr, align 4, !dbg !7762
  %idxprom246 = sext i32 %314 to i64, !dbg !7761
  %315 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !7761
  %cur_pic = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %315, i32 0, i32 6, !dbg !7763
  %316 = load %struct.SVQ3Frame*, %struct.SVQ3Frame** %cur_pic, align 16, !dbg !7763
  %motion_val247 = getelementptr inbounds %struct.SVQ3Frame, %struct.SVQ3Frame* %316, i32 0, i32 2, !dbg !7764
  %arrayidx248 = getelementptr inbounds [2 x [2 x i16]*], [2 x [2 x i16]*]* %motion_val247, i64 0, i64 %idxprom246, !dbg !7761
  %317 = load [2 x i16]*, [2 x i16]** %arrayidx248, align 8, !dbg !7761
  %arrayidx249 = getelementptr inbounds [2 x i16], [2 x i16]* %317, i64 %idxprom245, !dbg !7761
  %arraydecay250 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx249, i32 0, i32 0, !dbg !7761
  %318 = bitcast i16* %arraydecay250 to i8*, !dbg !7761
  %319 = load i32, i32* %part_width, align 4, !dbg !7765
  %shr251 = ashr i32 %319, 2, !dbg !7766
  %320 = load i32, i32* %part_height, align 4, !dbg !7767
  %shr252 = ashr i32 %320, 2, !dbg !7768
  %321 = load %struct.SVQ3Context*, %struct.SVQ3Context** %s.addr, align 8, !dbg !7769
  %b_stride253 = getelementptr inbounds %struct.SVQ3Context, %struct.SVQ3Context* %321, i32 0, i32 41, !dbg !7770
  %322 = load i32, i32* %b_stride253, align 4, !dbg !7770
  %323 = load i32, i32* %mx, align 4, !dbg !7771
  %324 = load i32, i32* %my, align 4, !dbg !7772
  store i32 %323, i32* %a.addr.i275, align 4, !dbg !7773
  store i32 %324, i32* %b.addr.i276, align 4, !dbg !7773
  %325 = load i32, i32* %a.addr.i275, align 4, !dbg !7774
  %and.i277 = and i32 %325, 65535, !dbg !7775
  %326 = load i32, i32* %b.addr.i276, align 4, !dbg !7776
  %shl.i278 = shl i32 %326, 16, !dbg !7777
  %add.i279 = add i32 %and.i277, %shl.i278, !dbg !7778
  store i8* %318, i8** %vp.addr.i, align 8, !dbg !7779
  store i32 %shr251, i32* %w.addr.i, align 4, !dbg !7779
  store i32 %shr252, i32* %h.addr.i, align 4, !dbg !7779
  store i32 %322, i32* %stride.addr.i, align 4, !dbg !7779
  store i32 %add.i279, i32* %val.addr.i, align 4, !dbg !7779
  store i32 4, i32* %size.addr.i, align 4, !dbg !7779
  %327 = load i8*, i8** %vp.addr.i, align 8, !dbg !7780
  store i8* %327, i8** %p.i, align 8, !dbg !6975
  %328 = load i32, i32* %size.addr.i, align 4, !dbg !7781
  %329 = load i32, i32* %w.addr.i, align 4, !dbg !7782
  %mul.i = mul nsw i32 %329, %328, !dbg !7782
  store i32 %mul.i, i32* %w.addr.i, align 4, !dbg !7782
  %330 = load i32, i32* %size.addr.i, align 4, !dbg !7783
  %331 = load i32, i32* %stride.addr.i, align 4, !dbg !7784
  %mul1.i = mul nsw i32 %331, %330, !dbg !7784
  store i32 %mul1.i, i32* %stride.addr.i, align 4, !dbg !7784
  %332 = load i32, i32* %w.addr.i, align 4, !dbg !7785
  %cmp.i280 = icmp eq i32 %332, 2, !dbg !7786
  br i1 %cmp.i280, label %if.then.i281, label %if.else.i284, !dbg !7787

if.then.i281:                                     ; preds = %if.end244
  %333 = load i32, i32* %size.addr.i, align 4, !dbg !7788
  %cmp2.i = icmp eq i32 %333, 4, !dbg !7789
  br i1 %cmp2.i, label %cond.true.i, label %cond.false.i, !dbg !7788

cond.true.i:                                      ; preds = %if.then.i281
  %334 = load i32, i32* %val.addr.i, align 4, !dbg !7790
  br label %cond.end.i, !dbg !7792

cond.false.i:                                     ; preds = %if.then.i281
  %335 = load i32, i32* %val.addr.i, align 4, !dbg !7793
  %mul3.i = mul i32 %335, 257, !dbg !7795
  br label %cond.end.i, !dbg !7796

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %334, %cond.true.i ], [ %mul3.i, %cond.false.i ], !dbg !7797
  %conv.i282 = trunc i32 %cond.i to i16, !dbg !7797
  store i16 %conv.i282, i16* %v.i, align 2, !dbg !7799
  %336 = load i16, i16* %v.i, align 2, !dbg !7800
  %337 = load i8*, i8** %p.i, align 8, !dbg !7801
  %338 = load i32, i32* %stride.addr.i, align 4, !dbg !7802
  %339 = bitcast i8* %337 to i16*, !dbg !7803
  store i16 %336, i16* %339, align 2, !dbg !7804
  %340 = load i32, i32* %h.addr.i, align 4, !dbg !7805
  %cmp5.i = icmp eq i32 %340, 1, !dbg !7807
  br i1 %cmp5.i, label %if.then7.i, label %if.end.i283, !dbg !7808

if.then7.i:                                       ; preds = %cond.end.i
  br label %fill_rectangle.exit, !dbg !7809

if.end.i283:                                      ; preds = %cond.end.i
  %341 = load i16, i16* %v.i, align 2, !dbg !7811
  %342 = load i8*, i8** %p.i, align 8, !dbg !7812
  %343 = load i32, i32* %stride.addr.i, align 4, !dbg !7813
  %idx.ext9.i = sext i32 %343 to i64, !dbg !7814
  %add.ptr10.i = getelementptr inbounds i8, i8* %342, i64 %idx.ext9.i, !dbg !7814
  %344 = bitcast i8* %add.ptr10.i to i16*, !dbg !7815
  store i16 %341, i16* %344, align 2, !dbg !7816
  %345 = load i32, i32* %h.addr.i, align 4, !dbg !7817
  %cmp11.i = icmp eq i32 %345, 2, !dbg !7819
  br i1 %cmp11.i, label %if.then13.i, label %if.end14.i, !dbg !7820

if.then13.i:                                      ; preds = %if.end.i283
  br label %fill_rectangle.exit, !dbg !7821

if.end14.i:                                       ; preds = %if.end.i283
  %346 = load i16, i16* %v.i, align 2, !dbg !7823
  %347 = load i8*, i8** %p.i, align 8, !dbg !7824
  %348 = load i32, i32* %stride.addr.i, align 4, !dbg !7825
  %mul15.i = mul nsw i32 2, %348, !dbg !7826
  %idx.ext16.i = sext i32 %mul15.i to i64, !dbg !7827
  %add.ptr17.i = getelementptr inbounds i8, i8* %347, i64 %idx.ext16.i, !dbg !7827
  %349 = bitcast i8* %add.ptr17.i to i16*, !dbg !7828
  store i16 %346, i16* %349, align 2, !dbg !7829
  %350 = load i16, i16* %v.i, align 2, !dbg !7830
  %351 = load i8*, i8** %p.i, align 8, !dbg !7831
  %352 = load i32, i32* %stride.addr.i, align 4, !dbg !7832
  %mul18.i = mul nsw i32 3, %352, !dbg !7833
  %idx.ext19.i = sext i32 %mul18.i to i64, !dbg !7834
  %add.ptr20.i = getelementptr inbounds i8, i8* %351, i64 %idx.ext19.i, !dbg !7834
  %353 = bitcast i8* %add.ptr20.i to i16*, !dbg !7835
  store i16 %350, i16* %353, align 2, !dbg !7836
  br label %fill_rectangle.exit, !dbg !7837

if.else.i284:                                     ; preds = %if.end244
  %354 = load i32, i32* %w.addr.i, align 4, !dbg !7838
  %cmp21.i = icmp eq i32 %354, 4, !dbg !7840
  br i1 %cmp21.i, label %if.then23.i, label %if.else59.i, !dbg !7838

if.then23.i:                                      ; preds = %if.else.i284
  %355 = load i32, i32* %size.addr.i, align 4, !dbg !7841
  %cmp25.i = icmp eq i32 %355, 4, !dbg !7842
  br i1 %cmp25.i, label %cond.true27.i, label %cond.false28.i, !dbg !7841

cond.true27.i:                                    ; preds = %if.then23.i
  %356 = load i32, i32* %val.addr.i, align 4, !dbg !7843
  br label %cond.end37.i, !dbg !7845

cond.false28.i:                                   ; preds = %if.then23.i
  %357 = load i32, i32* %size.addr.i, align 4, !dbg !7846
  %cmp29.i = icmp eq i32 %357, 2, !dbg !7848
  br i1 %cmp29.i, label %cond.true31.i, label %cond.false33.i, !dbg !7846

cond.true31.i:                                    ; preds = %cond.false28.i
  %358 = load i32, i32* %val.addr.i, align 4, !dbg !7849
  %mul32.i = mul i32 %358, 65537, !dbg !7851
  br label %cond.end35.i, !dbg !7852

cond.false33.i:                                   ; preds = %cond.false28.i
  %359 = load i32, i32* %val.addr.i, align 4, !dbg !7853
  %mul34.i = mul i32 %359, 16843009, !dbg !7855
  br label %cond.end35.i, !dbg !7856

cond.end35.i:                                     ; preds = %cond.false33.i, %cond.true31.i
  %cond36.i = phi i32 [ %mul32.i, %cond.true31.i ], [ %mul34.i, %cond.false33.i ], !dbg !7857
  br label %cond.end37.i, !dbg !7859

cond.end37.i:                                     ; preds = %cond.end35.i, %cond.true27.i
  %cond38.i = phi i32 [ %356, %cond.true27.i ], [ %cond36.i, %cond.end35.i ], !dbg !7860
  store i32 %cond38.i, i32* %v24.i, align 4, !dbg !7862
  %360 = load i32, i32* %v24.i, align 4, !dbg !7863
  %361 = load i8*, i8** %p.i, align 8, !dbg !7864
  %362 = load i32, i32* %stride.addr.i, align 4, !dbg !7865
  %363 = bitcast i8* %361 to i32*, !dbg !7866
  store i32 %360, i32* %363, align 4, !dbg !7867
  %364 = load i32, i32* %h.addr.i, align 4, !dbg !7868
  %cmp42.i = icmp eq i32 %364, 1, !dbg !7870
  br i1 %cmp42.i, label %if.then44.i, label %if.end45.i, !dbg !7871

if.then44.i:                                      ; preds = %cond.end37.i
  br label %fill_rectangle.exit, !dbg !7872

if.end45.i:                                       ; preds = %cond.end37.i
  %365 = load i32, i32* %v24.i, align 4, !dbg !7874
  %366 = load i8*, i8** %p.i, align 8, !dbg !7875
  %367 = load i32, i32* %stride.addr.i, align 4, !dbg !7876
  %idx.ext47.i = sext i32 %367 to i64, !dbg !7877
  %add.ptr48.i = getelementptr inbounds i8, i8* %366, i64 %idx.ext47.i, !dbg !7877
  %368 = bitcast i8* %add.ptr48.i to i32*, !dbg !7878
  store i32 %365, i32* %368, align 4, !dbg !7879
  %369 = load i32, i32* %h.addr.i, align 4, !dbg !7880
  %cmp49.i = icmp eq i32 %369, 2, !dbg !7882
  br i1 %cmp49.i, label %if.then51.i, label %if.end52.i, !dbg !7883

if.then51.i:                                      ; preds = %if.end45.i
  br label %fill_rectangle.exit, !dbg !7884

if.end52.i:                                       ; preds = %if.end45.i
  %370 = load i32, i32* %v24.i, align 4, !dbg !7886
  %371 = load i8*, i8** %p.i, align 8, !dbg !7887
  %372 = load i32, i32* %stride.addr.i, align 4, !dbg !7888
  %mul53.i = mul nsw i32 2, %372, !dbg !7889
  %idx.ext54.i = sext i32 %mul53.i to i64, !dbg !7890
  %add.ptr55.i = getelementptr inbounds i8, i8* %371, i64 %idx.ext54.i, !dbg !7890
  %373 = bitcast i8* %add.ptr55.i to i32*, !dbg !7891
  store i32 %370, i32* %373, align 4, !dbg !7892
  %374 = load i32, i32* %v24.i, align 4, !dbg !7893
  %375 = load i8*, i8** %p.i, align 8, !dbg !7894
  %376 = load i32, i32* %stride.addr.i, align 4, !dbg !7895
  %mul56.i = mul nsw i32 3, %376, !dbg !7896
  %idx.ext57.i = sext i32 %mul56.i to i64, !dbg !7897
  %add.ptr58.i = getelementptr inbounds i8, i8* %375, i64 %idx.ext57.i, !dbg !7897
  %377 = bitcast i8* %add.ptr58.i to i32*, !dbg !7898
  store i32 %374, i32* %377, align 4, !dbg !7899
  br label %if.end140.i, !dbg !7900

if.else59.i:                                      ; preds = %if.else.i284
  %378 = load i32, i32* %w.addr.i, align 4, !dbg !7901
  %cmp60.i = icmp eq i32 %378, 8, !dbg !7903
  br i1 %cmp60.i, label %if.then62.i, label %if.else94.i, !dbg !7901

if.then62.i:                                      ; preds = %if.else59.i
  %379 = load i32, i32* %size.addr.i, align 4, !dbg !7904
  %cmp64.i = icmp eq i32 %379, 2, !dbg !7905
  br i1 %cmp64.i, label %cond.true66.i, label %cond.false69.i, !dbg !7904

cond.true66.i:                                    ; preds = %if.then62.i
  %380 = load i32, i32* %val.addr.i, align 4, !dbg !7906
  %conv67.i285 = zext i32 %380 to i64, !dbg !7906
  %mul68.i = mul i64 %conv67.i285, 281479271743489, !dbg !7908
  br label %cond.end72.i, !dbg !7909

cond.false69.i:                                   ; preds = %if.then62.i
  %381 = load i32, i32* %val.addr.i, align 4, !dbg !7910
  %conv70.i = zext i32 %381 to i64, !dbg !7910
  %mul71.i = mul i64 %conv70.i, 4294967297, !dbg !7912
  br label %cond.end72.i, !dbg !7913

cond.end72.i:                                     ; preds = %cond.false69.i, %cond.true66.i
  %cond73.i = phi i64 [ %mul68.i, %cond.true66.i ], [ %mul71.i, %cond.false69.i ], !dbg !7914
  store i64 %cond73.i, i64* %v63.i, align 8, !dbg !7916
  %382 = load i64, i64* %v63.i, align 8, !dbg !7917
  %383 = load i8*, i8** %p.i, align 8, !dbg !7918
  %384 = load i32, i32* %stride.addr.i, align 4, !dbg !7919
  %385 = bitcast i8* %383 to i64*, !dbg !7920
  store i64 %382, i64* %385, align 8, !dbg !7921
  %386 = load i32, i32* %h.addr.i, align 4, !dbg !7922
  %cmp77.i286 = icmp eq i32 %386, 1, !dbg !7924
  br i1 %cmp77.i286, label %if.then79.i287, label %if.end80.i, !dbg !7925

if.then79.i287:                                   ; preds = %cond.end72.i
  br label %fill_rectangle.exit, !dbg !7926

if.end80.i:                                       ; preds = %cond.end72.i
  %387 = load i64, i64* %v63.i, align 8, !dbg !7928
  %388 = load i8*, i8** %p.i, align 8, !dbg !7929
  %389 = load i32, i32* %stride.addr.i, align 4, !dbg !7930
  %idx.ext82.i = sext i32 %389 to i64, !dbg !7931
  %add.ptr83.i = getelementptr inbounds i8, i8* %388, i64 %idx.ext82.i, !dbg !7931
  %390 = bitcast i8* %add.ptr83.i to i64*, !dbg !7932
  store i64 %387, i64* %390, align 8, !dbg !7933
  %391 = load i32, i32* %h.addr.i, align 4, !dbg !7934
  %cmp84.i = icmp eq i32 %391, 2, !dbg !7936
  br i1 %cmp84.i, label %if.then86.i, label %if.end87.i, !dbg !7937

if.then86.i:                                      ; preds = %if.end80.i
  br label %fill_rectangle.exit, !dbg !7938

if.end87.i:                                       ; preds = %if.end80.i
  %392 = load i64, i64* %v63.i, align 8, !dbg !7940
  %393 = load i8*, i8** %p.i, align 8, !dbg !7941
  %394 = load i32, i32* %stride.addr.i, align 4, !dbg !7942
  %mul88.i = mul nsw i32 2, %394, !dbg !7943
  %idx.ext89.i = sext i32 %mul88.i to i64, !dbg !7944
  %add.ptr90.i = getelementptr inbounds i8, i8* %393, i64 %idx.ext89.i, !dbg !7944
  %395 = bitcast i8* %add.ptr90.i to i64*, !dbg !7945
  store i64 %392, i64* %395, align 8, !dbg !7946
  %396 = load i64, i64* %v63.i, align 8, !dbg !7947
  %397 = load i8*, i8** %p.i, align 8, !dbg !7948
  %398 = load i32, i32* %stride.addr.i, align 4, !dbg !7949
  %mul91.i = mul nsw i32 3, %398, !dbg !7950
  %idx.ext92.i = sext i32 %mul91.i to i64, !dbg !7951
  %add.ptr93.i = getelementptr inbounds i8, i8* %397, i64 %idx.ext92.i, !dbg !7951
  %399 = bitcast i8* %add.ptr93.i to i64*, !dbg !7952
  store i64 %396, i64* %399, align 8, !dbg !7953
  br label %if.end139.i, !dbg !7954

if.else94.i:                                      ; preds = %if.else59.i
  %400 = load i32, i32* %w.addr.i, align 4, !dbg !7955
  %cmp95.i = icmp eq i32 %400, 16, !dbg !7957
  br i1 %cmp95.i, label %if.then97.i, label %if.else137.i, !dbg !7955

if.then97.i:                                      ; preds = %if.else94.i
  %401 = load i32, i32* %val.addr.i, align 4, !dbg !7958
  %conv99.i = zext i32 %401 to i64, !dbg !7958
  %mul100.i = mul i64 %conv99.i, 4294967297, !dbg !7959
  store i64 %mul100.i, i64* %v98.i, align 8, !dbg !6992
  %402 = load i64, i64* %v98.i, align 8, !dbg !7960
  %403 = load i8*, i8** %p.i, align 8, !dbg !7961
  %404 = load i32, i32* %stride.addr.i, align 4, !dbg !7962
  %405 = bitcast i8* %403 to i64*, !dbg !7963
  store i64 %402, i64* %405, align 8, !dbg !7964
  %406 = load i64, i64* %v98.i, align 8, !dbg !7965
  %407 = load i8*, i8** %p.i, align 8, !dbg !7966
  %add.ptr105.i = getelementptr inbounds i8, i8* %407, i64 8, !dbg !7967
  %408 = load i32, i32* %stride.addr.i, align 4, !dbg !7968
  %409 = bitcast i8* %add.ptr105.i to i64*, !dbg !7969
  store i64 %406, i64* %409, align 8, !dbg !7970
  %410 = load i64, i64* %v98.i, align 8, !dbg !7971
  %411 = load i8*, i8** %p.i, align 8, !dbg !7972
  %412 = load i32, i32* %stride.addr.i, align 4, !dbg !7973
  %idx.ext111.i = sext i32 %412 to i64, !dbg !7974
  %add.ptr112.i = getelementptr inbounds i8, i8* %411, i64 %idx.ext111.i, !dbg !7974
  %413 = bitcast i8* %add.ptr112.i to i64*, !dbg !7975
  store i64 %410, i64* %413, align 8, !dbg !7976
  %414 = load i64, i64* %v98.i, align 8, !dbg !7977
  %415 = load i8*, i8** %p.i, align 8, !dbg !7978
  %add.ptr113.i = getelementptr inbounds i8, i8* %415, i64 8, !dbg !7979
  %416 = load i32, i32* %stride.addr.i, align 4, !dbg !7980
  %idx.ext115.i = sext i32 %416 to i64, !dbg !7981
  %add.ptr116.i = getelementptr inbounds i8, i8* %add.ptr113.i, i64 %idx.ext115.i, !dbg !7981
  %417 = bitcast i8* %add.ptr116.i to i64*, !dbg !7982
  store i64 %414, i64* %417, align 8, !dbg !7983
  %418 = load i32, i32* %h.addr.i, align 4, !dbg !7984
  %cmp117.i = icmp eq i32 %418, 2, !dbg !7986
  br i1 %cmp117.i, label %if.then119.i, label %if.end120.i, !dbg !7987

if.then119.i:                                     ; preds = %if.then97.i
  br label %fill_rectangle.exit, !dbg !7988

if.end120.i:                                      ; preds = %if.then97.i
  %419 = load i64, i64* %v98.i, align 8, !dbg !7990
  %420 = load i8*, i8** %p.i, align 8, !dbg !7991
  %421 = load i32, i32* %stride.addr.i, align 4, !dbg !7992
  %mul122.i = mul nsw i32 2, %421, !dbg !7993
  %idx.ext123.i = sext i32 %mul122.i to i64, !dbg !7994
  %add.ptr124.i = getelementptr inbounds i8, i8* %420, i64 %idx.ext123.i, !dbg !7994
  %422 = bitcast i8* %add.ptr124.i to i64*, !dbg !7995
  store i64 %419, i64* %422, align 8, !dbg !7996
  %423 = load i64, i64* %v98.i, align 8, !dbg !7997
  %424 = load i8*, i8** %p.i, align 8, !dbg !7998
  %add.ptr125.i = getelementptr inbounds i8, i8* %424, i64 8, !dbg !7999
  %425 = load i32, i32* %stride.addr.i, align 4, !dbg !8000
  %mul126.i = mul nsw i32 2, %425, !dbg !8001
  %idx.ext127.i = sext i32 %mul126.i to i64, !dbg !8002
  %add.ptr128.i = getelementptr inbounds i8, i8* %add.ptr125.i, i64 %idx.ext127.i, !dbg !8002
  %426 = bitcast i8* %add.ptr128.i to i64*, !dbg !8003
  store i64 %423, i64* %426, align 8, !dbg !8004
  %427 = load i64, i64* %v98.i, align 8, !dbg !8005
  %428 = load i8*, i8** %p.i, align 8, !dbg !8006
  %429 = load i32, i32* %stride.addr.i, align 4, !dbg !8007
  %mul130.i = mul nsw i32 3, %429, !dbg !8008
  %idx.ext131.i = sext i32 %mul130.i to i64, !dbg !8009
  %add.ptr132.i = getelementptr inbounds i8, i8* %428, i64 %idx.ext131.i, !dbg !8009
  %430 = bitcast i8* %add.ptr132.i to i64*, !dbg !8010
  store i64 %427, i64* %430, align 8, !dbg !8011
  %431 = load i64, i64* %v98.i, align 8, !dbg !8012
  %432 = load i8*, i8** %p.i, align 8, !dbg !8013
  %add.ptr133.i = getelementptr inbounds i8, i8* %432, i64 8, !dbg !8014
  %433 = load i32, i32* %stride.addr.i, align 4, !dbg !8015
  %mul134.i = mul nsw i32 3, %433, !dbg !8016
  %idx.ext135.i = sext i32 %mul134.i to i64, !dbg !8017
  %add.ptr136.i = getelementptr inbounds i8, i8* %add.ptr133.i, i64 %idx.ext135.i, !dbg !8017
  %434 = bitcast i8* %add.ptr136.i to i64*, !dbg !8018
  store i64 %431, i64* %434, align 8, !dbg !8019
  br label %if.end138.i, !dbg !8020

if.else137.i:                                     ; preds = %if.else94.i
  br label %if.end138.i, !dbg !7779

if.end138.i:                                      ; preds = %if.else137.i, %if.end120.i
  br label %if.end139.i, !dbg !7779

if.end139.i:                                      ; preds = %if.end138.i, %if.end87.i
  br label %if.end140.i, !dbg !7779

if.end140.i:                                      ; preds = %if.end139.i, %if.end52.i
  br label %fill_rectangle.exit, !dbg !7779

fill_rectangle.exit:                              ; preds = %if.then7.i, %if.then13.i, %if.end14.i, %if.then44.i, %if.then51.i, %if.then79.i287, %if.then86.i, %if.then119.i, %if.end140.i
  br label %for.inc, !dbg !8021

for.inc:                                          ; preds = %fill_rectangle.exit
  %435 = load i32, i32* %part_width, align 4, !dbg !8022
  %436 = load i32, i32* %j, align 4, !dbg !8024
  %add255 = add nsw i32 %436, %435, !dbg !8024
  store i32 %add255, i32* %j, align 4, !dbg !8024
  br label %for.cond12, !dbg !8025, !llvm.loop !8026

for.end:                                          ; preds = %for.cond12
  br label %for.inc256, !dbg !8028

for.inc256:                                       ; preds = %for.end
  %437 = load i32, i32* %part_height, align 4, !dbg !8030
  %438 = load i32, i32* %i, align 4, !dbg !8032
  %add257 = add nsw i32 %438, %437, !dbg !8032
  store i32 %add257, i32* %i, align 4, !dbg !8032
  br label %for.cond, !dbg !8033, !llvm.loop !8034

for.end258:                                       ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !8036
  br label %return, !dbg !8036

return:                                           ; preds = %for.end258, %if.then107
  %439 = load i32, i32* %retval, align 4, !dbg !8037
  ret i32 %439, !dbg !8037
}

declare i32 @ff_h264_check_intra4x4_pred_mode(i8*, i8*, i32, i32) #3

declare i32 @ff_h264_check_intra_pred_mode(i8*, i32, i32, i32, i32) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_interleaved_se_golomb(%struct.GetBitContext* %gb) #5 !dbg !8038 {
entry:
  %x.addr.i64 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i64, metadata !1722, metadata !1727), !dbg !8039
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !1722, metadata !1727), !dbg !8043
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %buf = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  %log = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !8045, metadata !1727), !dbg !8046
  call void @llvm.dbg.declare(metadata i32* %buf, metadata !8047, metadata !1727), !dbg !8048
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !8049, metadata !1727), !dbg !8050
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8051
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !8052
  %1 = load i32, i32* %index, align 8, !dbg !8052
  store i32 %1, i32* %re_index, align 4, !dbg !8050
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !8053, metadata !1727), !dbg !8054
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !8055, metadata !1727), !dbg !8056
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8057
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !8058
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !8058
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !8056
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8059
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !8060
  %5 = load i8*, i8** %buffer, align 8, !dbg !8060
  %6 = load i32, i32* %re_index, align 4, !dbg !8061
  %shr = lshr i32 %6, 3, !dbg !8062
  %idx.ext = zext i32 %shr to i64, !dbg !8063
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !8063
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !8064
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !8064
  %8 = load i32, i32* %l, align 1, !dbg !8064
  store i32 %8, i32* %x.addr.i, align 4, !dbg !8065
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !8066
  %shl.i = shl i32 %9, 8, !dbg !8067
  %and.i = and i32 %shl.i, 65280, !dbg !8068
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !8069
  %shr.i = lshr i32 %10, 8, !dbg !8070
  %and1.i = and i32 %shr.i, 255, !dbg !8071
  %or.i = or i32 %and.i, %and1.i, !dbg !8072
  %shl2.i = shl i32 %or.i, 16, !dbg !8073
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !8074
  %shr3.i = lshr i32 %11, 16, !dbg !8075
  %shl4.i = shl i32 %shr3.i, 8, !dbg !8076
  %and5.i = and i32 %shl4.i, 65280, !dbg !8077
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !8078
  %shr6.i = lshr i32 %12, 16, !dbg !8079
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !8080
  %and8.i = and i32 %shr7.i, 255, !dbg !8081
  %or9.i = or i32 %and5.i, %and8.i, !dbg !8082
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !8083
  %13 = load i32, i32* %re_index, align 4, !dbg !8084
  %and = and i32 %13, 7, !dbg !8085
  %shl = shl i32 %or10.i, %and, !dbg !8086
  store i32 %shl, i32* %re_cache, align 4, !dbg !8087
  %14 = load i32, i32* %re_cache, align 4, !dbg !8088
  store i32 %14, i32* %buf, align 4, !dbg !8089
  %15 = load i32, i32* %buf, align 4, !dbg !8090
  %and1 = and i32 %15, -1434451968, !dbg !8091
  %tobool = icmp ne i32 %and1, 0, !dbg !8091
  br i1 %tobool, label %if.then, label %if.else, !dbg !8092

if.then:                                          ; preds = %entry
  %16 = load i32, i32* %buf, align 4, !dbg !8093
  %shr2 = lshr i32 %16, 24, !dbg !8093
  store i32 %shr2, i32* %buf, align 4, !dbg !8093
  %17 = load i32, i32* %re_size_plus8, align 4, !dbg !8095
  %18 = load i32, i32* %re_index, align 4, !dbg !8096
  %19 = load i32, i32* %buf, align 4, !dbg !8097
  %idxprom = zext i32 %19 to i64, !dbg !8098
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %idxprom, !dbg !8098
  %20 = load i8, i8* %arrayidx, align 1, !dbg !8098
  %conv = zext i8 %20 to i32, !dbg !8099
  %add = add i32 %18, %conv, !dbg !8100
  %cmp = icmp ugt i32 %17, %add, !dbg !8101
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8102

cond.true:                                        ; preds = %if.then
  %21 = load i32, i32* %re_index, align 4, !dbg !8103
  %22 = load i32, i32* %buf, align 4, !dbg !8105
  %idxprom4 = zext i32 %22 to i64, !dbg !8106
  %arrayidx5 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %idxprom4, !dbg !8106
  %23 = load i8, i8* %arrayidx5, align 1, !dbg !8106
  %conv6 = zext i8 %23 to i32, !dbg !8107
  %add7 = add i32 %21, %conv6, !dbg !8108
  br label %cond.end, !dbg !8109

cond.false:                                       ; preds = %if.then
  %24 = load i32, i32* %re_size_plus8, align 4, !dbg !8110
  br label %cond.end, !dbg !8112

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add7, %cond.true ], [ %24, %cond.false ], !dbg !8113
  store i32 %cond, i32* %re_index, align 4, !dbg !8115
  %25 = load i32, i32* %re_index, align 4, !dbg !8116
  %26 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8117
  %index8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %26, i32 0, i32 2, !dbg !8118
  store i32 %25, i32* %index8, align 8, !dbg !8119
  %27 = load i32, i32* %buf, align 4, !dbg !8120
  %idxprom9 = zext i32 %27 to i64, !dbg !8121
  %arrayidx10 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_se_golomb_vlc_code, i64 0, i64 %idxprom9, !dbg !8121
  %28 = load i8, i8* %arrayidx10, align 1, !dbg !8121
  %conv11 = sext i8 %28 to i32, !dbg !8121
  store i32 %conv11, i32* %retval, align 4, !dbg !8122
  br label %return, !dbg !8122

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %log, metadata !8123, metadata !1727), !dbg !8124
  %29 = load i32, i32* %re_size_plus8, align 4, !dbg !8125
  %30 = load i32, i32* %re_index, align 4, !dbg !8126
  %add12 = add i32 %30, 8, !dbg !8127
  %cmp13 = icmp ugt i32 %29, %add12, !dbg !8128
  br i1 %cmp13, label %cond.true15, label %cond.false17, !dbg !8129

cond.true15:                                      ; preds = %if.else
  %31 = load i32, i32* %re_index, align 4, !dbg !8130
  %add16 = add i32 %31, 8, !dbg !8132
  br label %cond.end18, !dbg !8133

cond.false17:                                     ; preds = %if.else
  %32 = load i32, i32* %re_size_plus8, align 4, !dbg !8134
  br label %cond.end18, !dbg !8136

cond.end18:                                       ; preds = %cond.false17, %cond.true15
  %cond19 = phi i32 [ %add16, %cond.true15 ], [ %32, %cond.false17 ], !dbg !8137
  store i32 %cond19, i32* %re_index, align 4, !dbg !8139
  %33 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8140
  %buffer20 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %33, i32 0, i32 0, !dbg !8141
  %34 = load i8*, i8** %buffer20, align 8, !dbg !8141
  %35 = load i32, i32* %re_index, align 4, !dbg !8142
  %shr21 = lshr i32 %35, 3, !dbg !8143
  %idx.ext22 = zext i32 %shr21 to i64, !dbg !8144
  %add.ptr23 = getelementptr inbounds i8, i8* %34, i64 %idx.ext22, !dbg !8144
  %36 = bitcast i8* %add.ptr23 to %union.unaligned_32*, !dbg !8145
  %l24 = bitcast %union.unaligned_32* %36 to i32*, !dbg !8145
  %37 = load i32, i32* %l24, align 1, !dbg !8145
  store i32 %37, i32* %x.addr.i64, align 4, !dbg !8146
  %38 = load i32, i32* %x.addr.i64, align 4, !dbg !8147
  %shl.i65 = shl i32 %38, 8, !dbg !8148
  %and.i66 = and i32 %shl.i65, 65280, !dbg !8149
  %39 = load i32, i32* %x.addr.i64, align 4, !dbg !8150
  %shr.i67 = lshr i32 %39, 8, !dbg !8151
  %and1.i68 = and i32 %shr.i67, 255, !dbg !8152
  %or.i69 = or i32 %and.i66, %and1.i68, !dbg !8153
  %shl2.i70 = shl i32 %or.i69, 16, !dbg !8154
  %40 = load i32, i32* %x.addr.i64, align 4, !dbg !8155
  %shr3.i71 = lshr i32 %40, 16, !dbg !8156
  %shl4.i72 = shl i32 %shr3.i71, 8, !dbg !8157
  %and5.i73 = and i32 %shl4.i72, 65280, !dbg !8158
  %41 = load i32, i32* %x.addr.i64, align 4, !dbg !8159
  %shr6.i74 = lshr i32 %41, 16, !dbg !8160
  %shr7.i75 = lshr i32 %shr6.i74, 8, !dbg !8161
  %and8.i76 = and i32 %shr7.i75, 255, !dbg !8162
  %or9.i77 = or i32 %and5.i73, %and8.i76, !dbg !8163
  %or10.i78 = or i32 %shl2.i70, %or9.i77, !dbg !8164
  %42 = load i32, i32* %re_index, align 4, !dbg !8165
  %and26 = and i32 %42, 7, !dbg !8166
  %shl27 = shl i32 %or10.i78, %and26, !dbg !8167
  store i32 %shl27, i32* %re_cache, align 4, !dbg !8168
  %43 = load i32, i32* %re_cache, align 4, !dbg !8169
  %shr28 = lshr i32 %43, 8, !dbg !8170
  %or = or i32 1, %shr28, !dbg !8171
  %44 = load i32, i32* %buf, align 4, !dbg !8172
  %or29 = or i32 %44, %or, !dbg !8172
  store i32 %or29, i32* %buf, align 4, !dbg !8172
  %45 = load i32, i32* %buf, align 4, !dbg !8173
  %and30 = and i32 %45, -1431655766, !dbg !8175
  %cmp31 = icmp eq i32 %and30, 0, !dbg !8176
  br i1 %cmp31, label %if.then33, label %if.end, !dbg !8177

if.then33:                                        ; preds = %cond.end18
  store i32 -2147483648, i32* %retval, align 4, !dbg !8178
  br label %return, !dbg !8178

if.end:                                           ; preds = %cond.end18
  store i32 31, i32* %log, align 4, !dbg !8179
  br label %for.cond, !dbg !8181

for.cond:                                         ; preds = %for.inc, %if.end
  %46 = load i32, i32* %buf, align 4, !dbg !8182
  %and34 = and i32 %46, -2147483648, !dbg !8185
  %cmp35 = icmp eq i32 %and34, 0, !dbg !8186
  br i1 %cmp35, label %for.body, label %for.end, !dbg !8187

for.body:                                         ; preds = %for.cond
  %47 = load i32, i32* %buf, align 4, !dbg !8188
  %shl37 = shl i32 %47, 2, !dbg !8189
  %48 = load i32, i32* %buf, align 4, !dbg !8190
  %49 = load i32, i32* %log, align 4, !dbg !8191
  %shl38 = shl i32 %48, %49, !dbg !8192
  %50 = load i32, i32* %log, align 4, !dbg !8193
  %sub = sub nsw i32 %50, 1, !dbg !8194
  %shr39 = lshr i32 %shl38, %sub, !dbg !8195
  %sub40 = sub i32 %shl37, %shr39, !dbg !8196
  %51 = load i32, i32* %buf, align 4, !dbg !8197
  %shr41 = lshr i32 %51, 30, !dbg !8198
  %add42 = add i32 %sub40, %shr41, !dbg !8199
  store i32 %add42, i32* %buf, align 4, !dbg !8200
  br label %for.inc, !dbg !8201

for.inc:                                          ; preds = %for.body
  %52 = load i32, i32* %log, align 4, !dbg !8202
  %dec = add nsw i32 %52, -1, !dbg !8202
  store i32 %dec, i32* %log, align 4, !dbg !8202
  br label %for.cond, !dbg !8204, !llvm.loop !8205

for.end:                                          ; preds = %for.cond
  %53 = load i32, i32* %re_size_plus8, align 4, !dbg !8207
  %54 = load i32, i32* %re_index, align 4, !dbg !8208
  %55 = load i32, i32* %log, align 4, !dbg !8209
  %mul = mul nsw i32 2, %55, !dbg !8210
  %sub43 = sub nsw i32 63, %mul, !dbg !8211
  %sub44 = sub nsw i32 %sub43, 8, !dbg !8212
  %add45 = add i32 %54, %sub44, !dbg !8213
  %cmp46 = icmp ugt i32 %53, %add45, !dbg !8214
  br i1 %cmp46, label %cond.true48, label %cond.false53, !dbg !8215

cond.true48:                                      ; preds = %for.end
  %56 = load i32, i32* %re_index, align 4, !dbg !8216
  %57 = load i32, i32* %log, align 4, !dbg !8217
  %mul49 = mul nsw i32 2, %57, !dbg !8218
  %sub50 = sub nsw i32 63, %mul49, !dbg !8219
  %sub51 = sub nsw i32 %sub50, 8, !dbg !8220
  %add52 = add i32 %56, %sub51, !dbg !8221
  br label %cond.end54, !dbg !8222

cond.false53:                                     ; preds = %for.end
  %58 = load i32, i32* %re_size_plus8, align 4, !dbg !8223
  br label %cond.end54, !dbg !8224

cond.end54:                                       ; preds = %cond.false53, %cond.true48
  %cond55 = phi i32 [ %add52, %cond.true48 ], [ %58, %cond.false53 ], !dbg !8225
  store i32 %cond55, i32* %re_index, align 4, !dbg !8226
  %59 = load i32, i32* %re_index, align 4, !dbg !8227
  %60 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8228
  %index56 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %60, i32 0, i32 2, !dbg !8229
  store i32 %59, i32* %index56, align 8, !dbg !8230
  %61 = load i32, i32* %buf, align 4, !dbg !8231
  %62 = load i32, i32* %log, align 4, !dbg !8232
  %shl57 = shl i32 %61, %62, !dbg !8233
  %63 = load i32, i32* %log, align 4, !dbg !8234
  %shr58 = lshr i32 %shl57, %63, !dbg !8235
  %sub59 = sub i32 %shr58, 1, !dbg !8236
  %64 = load i32, i32* %buf, align 4, !dbg !8237
  %and60 = and i32 %64, 1, !dbg !8238
  %sub61 = sub i32 0, %and60, !dbg !8239
  %xor = xor i32 %sub59, %sub61, !dbg !8240
  %add62 = add i32 %xor, 1, !dbg !8241
  %shr63 = ashr i32 %add62, 1, !dbg !8242
  store i32 %shr63, i32* %retval, align 4, !dbg !8243
  br label %return, !dbg !8243

return:                                           ; preds = %cond.end54, %if.then33, %cond.end
  %65 = load i32, i32* %retval, align 4, !dbg !8244
  ret i32 %65, !dbg !8244
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @svq3_decode_block(%struct.GetBitContext* %gb, i16* %block, i32 %index, i32 %type) #5 !dbg !1679 {
entry:
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %block.addr = alloca i16*, align 8
  %index.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %run = alloca i32, align 4
  %level = alloca i32, align 4
  %sign = alloca i32, align 4
  %limit = alloca i32, align 4
  %vlc = alloca i32, align 4
  %intra = alloca i32, align 4
  %scan = alloca i8*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !8245, metadata !1727), !dbg !8246
  store i16* %block, i16** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %block.addr, metadata !8247, metadata !1727), !dbg !8248
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !8249, metadata !1727), !dbg !8250
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !8251, metadata !1727), !dbg !8252
  call void @llvm.dbg.declare(metadata i32* %run, metadata !8253, metadata !1727), !dbg !8254
  call void @llvm.dbg.declare(metadata i32* %level, metadata !8255, metadata !1727), !dbg !8256
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !8257, metadata !1727), !dbg !8258
  call void @llvm.dbg.declare(metadata i32* %limit, metadata !8259, metadata !1727), !dbg !8260
  call void @llvm.dbg.declare(metadata i32* %vlc, metadata !8261, metadata !1727), !dbg !8262
  call void @llvm.dbg.declare(metadata i32* %intra, metadata !8263, metadata !1727), !dbg !8264
  %0 = load i32, i32* %type.addr, align 4, !dbg !8265
  %mul = mul nsw i32 3, %0, !dbg !8266
  %shr = ashr i32 %mul, 2, !dbg !8267
  store i32 %shr, i32* %intra, align 4, !dbg !8264
  call void @llvm.dbg.declare(metadata i8** %scan, metadata !8268, metadata !1727), !dbg !8269
  %1 = load i32, i32* %type.addr, align 4, !dbg !8270
  %idxprom = sext i32 %1 to i64, !dbg !8271
  %arrayidx = getelementptr inbounds [4 x i8*], [4 x i8*]* @svq3_decode_block.scan_patterns, i64 0, i64 %idxprom, !dbg !8271
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !8271
  store i8* %2, i8** %scan, align 8, !dbg !8269
  %3 = load i32, i32* %intra, align 4, !dbg !8272
  %shr1 = ashr i32 16, %3, !dbg !8274
  store i32 %shr1, i32* %limit, align 4, !dbg !8275
  br label %for.cond, !dbg !8276

for.cond:                                         ; preds = %for.inc88, %entry
  %4 = load i32, i32* %index.addr, align 4, !dbg !8277
  %cmp = icmp slt i32 %4, 16, !dbg !8280
  br i1 %cmp, label %for.body, label %for.end90, !dbg !8281

for.body:                                         ; preds = %for.cond
  br label %for.cond2, !dbg !8282

for.cond2:                                        ; preds = %for.inc, %for.body
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8284
  %call = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %5), !dbg !8288
  store i32 %call, i32* %vlc, align 4, !dbg !8289
  %cmp3 = icmp ne i32 %call, 0, !dbg !8290
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !8291

for.body4:                                        ; preds = %for.cond2
  %6 = load i32, i32* %vlc, align 4, !dbg !8292
  %cmp5 = icmp slt i32 %6, 0, !dbg !8295
  br i1 %cmp5, label %if.then, label %if.end, !dbg !8296

if.then:                                          ; preds = %for.body4
  store i32 -1, i32* %retval, align 4, !dbg !8297
  br label %return, !dbg !8297

if.end:                                           ; preds = %for.body4
  %7 = load i32, i32* %vlc, align 4, !dbg !8298
  %and = and i32 %7, 1, !dbg !8299
  %tobool = icmp ne i32 %and, 0, !dbg !8300
  %cond = select i1 %tobool, i32 0, i32 -1, !dbg !8300
  store i32 %cond, i32* %sign, align 4, !dbg !8301
  %8 = load i32, i32* %vlc, align 4, !dbg !8302
  %add = add i32 %8, 1, !dbg !8303
  %shr6 = lshr i32 %add, 1, !dbg !8304
  store i32 %shr6, i32* %vlc, align 4, !dbg !8305
  %9 = load i32, i32* %type.addr, align 4, !dbg !8306
  %cmp7 = icmp eq i32 %9, 3, !dbg !8308
  br i1 %cmp7, label %if.then8, label %if.else19, !dbg !8309

if.then8:                                         ; preds = %if.end
  %10 = load i32, i32* %vlc, align 4, !dbg !8310
  %cmp9 = icmp ult i32 %10, 3, !dbg !8313
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !8314

if.then10:                                        ; preds = %if.then8
  store i32 0, i32* %run, align 4, !dbg !8315
  %11 = load i32, i32* %vlc, align 4, !dbg !8317
  store i32 %11, i32* %level, align 4, !dbg !8318
  br label %if.end18, !dbg !8319

if.else:                                          ; preds = %if.then8
  %12 = load i32, i32* %vlc, align 4, !dbg !8320
  %cmp11 = icmp ult i32 %12, 4, !dbg !8323
  br i1 %cmp11, label %if.then12, label %if.else13, !dbg !8320

if.then12:                                        ; preds = %if.else
  store i32 1, i32* %run, align 4, !dbg !8324
  store i32 1, i32* %level, align 4, !dbg !8326
  br label %if.end17, !dbg !8327

if.else13:                                        ; preds = %if.else
  %13 = load i32, i32* %vlc, align 4, !dbg !8328
  %and14 = and i32 %13, 3, !dbg !8330
  store i32 %and14, i32* %run, align 4, !dbg !8331
  %14 = load i32, i32* %vlc, align 4, !dbg !8332
  %add15 = add i32 %14, 9, !dbg !8333
  %shr16 = lshr i32 %add15, 2, !dbg !8334
  %15 = load i32, i32* %run, align 4, !dbg !8335
  %sub = sub i32 %shr16, %15, !dbg !8336
  store i32 %sub, i32* %level, align 4, !dbg !8337
  br label %if.end17

if.end17:                                         ; preds = %if.else13, %if.then12
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then10
  br label %if.end72, !dbg !8338

if.else19:                                        ; preds = %if.end
  %16 = load i32, i32* %vlc, align 4, !dbg !8339
  %cmp20 = icmp ult i32 %16, 16, !dbg !8342
  br i1 %cmp20, label %if.then21, label %if.else33, !dbg !8343

if.then21:                                        ; preds = %if.else19
  %17 = load i32, i32* %vlc, align 4, !dbg !8344
  %idxprom22 = zext i32 %17 to i64, !dbg !8346
  %18 = load i32, i32* %intra, align 4, !dbg !8347
  %idxprom23 = sext i32 %18 to i64, !dbg !8346
  %arrayidx24 = getelementptr inbounds [2 x [16 x %struct.anon]], [2 x [16 x %struct.anon]]* @svq3_dct_tables, i64 0, i64 %idxprom23, !dbg !8346
  %arrayidx25 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %arrayidx24, i64 0, i64 %idxprom22, !dbg !8346
  %run26 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx25, i32 0, i32 0, !dbg !8348
  %19 = load i8, i8* %run26, align 2, !dbg !8348
  %conv = zext i8 %19 to i32, !dbg !8346
  store i32 %conv, i32* %run, align 4, !dbg !8349
  %20 = load i32, i32* %vlc, align 4, !dbg !8350
  %idxprom27 = zext i32 %20 to i64, !dbg !8351
  %21 = load i32, i32* %intra, align 4, !dbg !8352
  %idxprom28 = sext i32 %21 to i64, !dbg !8351
  %arrayidx29 = getelementptr inbounds [2 x [16 x %struct.anon]], [2 x [16 x %struct.anon]]* @svq3_dct_tables, i64 0, i64 %idxprom28, !dbg !8351
  %arrayidx30 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %arrayidx29, i64 0, i64 %idxprom27, !dbg !8351
  %level31 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx30, i32 0, i32 1, !dbg !8353
  %22 = load i8, i8* %level31, align 1, !dbg !8353
  %conv32 = zext i8 %22 to i32, !dbg !8351
  store i32 %conv32, i32* %level, align 4, !dbg !8354
  br label %if.end71, !dbg !8355

if.else33:                                        ; preds = %if.else19
  %23 = load i32, i32* %intra, align 4, !dbg !8356
  %tobool34 = icmp ne i32 %23, 0, !dbg !8356
  br i1 %tobool34, label %if.then35, label %if.else51, !dbg !8356

if.then35:                                        ; preds = %if.else33
  %24 = load i32, i32* %vlc, align 4, !dbg !8359
  %and36 = and i32 %24, 7, !dbg !8361
  store i32 %and36, i32* %run, align 4, !dbg !8362
  %25 = load i32, i32* %vlc, align 4, !dbg !8363
  %shr37 = lshr i32 %25, 3, !dbg !8364
  %26 = load i32, i32* %run, align 4, !dbg !8365
  %cmp38 = icmp eq i32 %26, 0, !dbg !8366
  br i1 %cmp38, label %cond.true, label %cond.false, !dbg !8367

cond.true:                                        ; preds = %if.then35
  br label %cond.end48, !dbg !8368

cond.false:                                       ; preds = %if.then35
  %27 = load i32, i32* %run, align 4, !dbg !8370
  %cmp40 = icmp slt i32 %27, 2, !dbg !8372
  br i1 %cmp40, label %cond.true42, label %cond.false43, !dbg !8373

cond.true42:                                      ; preds = %cond.false
  br label %cond.end, !dbg !8374

cond.false43:                                     ; preds = %cond.false
  %28 = load i32, i32* %run, align 4, !dbg !8376
  %cmp44 = icmp slt i32 %28, 5, !dbg !8378
  %cond46 = select i1 %cmp44, i32 0, i32 -1, !dbg !8379
  br label %cond.end, !dbg !8380

cond.end:                                         ; preds = %cond.false43, %cond.true42
  %cond47 = phi i32 [ 2, %cond.true42 ], [ %cond46, %cond.false43 ], !dbg !8381
  br label %cond.end48, !dbg !8383

cond.end48:                                       ; preds = %cond.end, %cond.true
  %cond49 = phi i32 [ 8, %cond.true ], [ %cond47, %cond.end ], !dbg !8384
  %add50 = add i32 %shr37, %cond49, !dbg !8386
  store i32 %add50, i32* %level, align 4, !dbg !8387
  br label %if.end70, !dbg !8388

if.else51:                                        ; preds = %if.else33
  %29 = load i32, i32* %vlc, align 4, !dbg !8389
  %and52 = and i32 %29, 15, !dbg !8391
  store i32 %and52, i32* %run, align 4, !dbg !8392
  %30 = load i32, i32* %vlc, align 4, !dbg !8393
  %shr53 = lshr i32 %30, 4, !dbg !8394
  %31 = load i32, i32* %run, align 4, !dbg !8395
  %cmp54 = icmp eq i32 %31, 0, !dbg !8396
  br i1 %cmp54, label %cond.true56, label %cond.false57, !dbg !8397

cond.true56:                                      ; preds = %if.else51
  br label %cond.end67, !dbg !8398

cond.false57:                                     ; preds = %if.else51
  %32 = load i32, i32* %run, align 4, !dbg !8400
  %cmp58 = icmp slt i32 %32, 3, !dbg !8402
  br i1 %cmp58, label %cond.true60, label %cond.false61, !dbg !8403

cond.true60:                                      ; preds = %cond.false57
  br label %cond.end65, !dbg !8404

cond.false61:                                     ; preds = %cond.false57
  %33 = load i32, i32* %run, align 4, !dbg !8406
  %cmp62 = icmp slt i32 %33, 10, !dbg !8408
  %cond64 = select i1 %cmp62, i32 1, i32 0, !dbg !8409
  br label %cond.end65, !dbg !8410

cond.end65:                                       ; preds = %cond.false61, %cond.true60
  %cond66 = phi i32 [ 2, %cond.true60 ], [ %cond64, %cond.false61 ], !dbg !8411
  br label %cond.end67, !dbg !8413

cond.end67:                                       ; preds = %cond.end65, %cond.true56
  %cond68 = phi i32 [ 4, %cond.true56 ], [ %cond66, %cond.end65 ], !dbg !8414
  %add69 = add i32 %shr53, %cond68, !dbg !8416
  store i32 %add69, i32* %level, align 4, !dbg !8417
  br label %if.end70

if.end70:                                         ; preds = %cond.end67, %cond.end48
  br label %if.end71

if.end71:                                         ; preds = %if.end70, %if.then21
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.end18
  %34 = load i32, i32* %run, align 4, !dbg !8418
  %35 = load i32, i32* %index.addr, align 4, !dbg !8420
  %add73 = add nsw i32 %35, %34, !dbg !8420
  store i32 %add73, i32* %index.addr, align 4, !dbg !8420
  %36 = load i32, i32* %limit, align 4, !dbg !8421
  %cmp74 = icmp sge i32 %add73, %36, !dbg !8422
  br i1 %cmp74, label %if.then76, label %if.end77, !dbg !8423

if.then76:                                        ; preds = %if.end72
  store i32 -1, i32* %retval, align 4, !dbg !8424
  br label %return, !dbg !8424

if.end77:                                         ; preds = %if.end72
  %37 = load i32, i32* %level, align 4, !dbg !8425
  %38 = load i32, i32* %sign, align 4, !dbg !8426
  %xor = xor i32 %37, %38, !dbg !8427
  %39 = load i32, i32* %sign, align 4, !dbg !8428
  %sub78 = sub nsw i32 %xor, %39, !dbg !8429
  %conv79 = trunc i32 %sub78 to i16, !dbg !8430
  %40 = load i32, i32* %index.addr, align 4, !dbg !8431
  %idxprom80 = sext i32 %40 to i64, !dbg !8432
  %41 = load i8*, i8** %scan, align 8, !dbg !8432
  %arrayidx81 = getelementptr inbounds i8, i8* %41, i64 %idxprom80, !dbg !8432
  %42 = load i8, i8* %arrayidx81, align 1, !dbg !8432
  %idxprom82 = zext i8 %42 to i64, !dbg !8433
  %43 = load i16*, i16** %block.addr, align 8, !dbg !8433
  %arrayidx83 = getelementptr inbounds i16, i16* %43, i64 %idxprom82, !dbg !8433
  store i16 %conv79, i16* %arrayidx83, align 2, !dbg !8434
  br label %for.inc, !dbg !8435

for.inc:                                          ; preds = %if.end77
  %44 = load i32, i32* %index.addr, align 4, !dbg !8436
  %inc = add nsw i32 %44, 1, !dbg !8436
  store i32 %inc, i32* %index.addr, align 4, !dbg !8436
  br label %for.cond2, !dbg !8438, !llvm.loop !8439

for.end:                                          ; preds = %for.cond2
  %45 = load i32, i32* %type.addr, align 4, !dbg !8440
  %cmp84 = icmp ne i32 %45, 2, !dbg !8442
  br i1 %cmp84, label %if.then86, label %if.end87, !dbg !8443

if.then86:                                        ; preds = %for.end
  br label %for.end90, !dbg !8444

if.end87:                                         ; preds = %for.end
  br label %for.inc88, !dbg !8446

for.inc88:                                        ; preds = %if.end87
  %46 = load i32, i32* %limit, align 4, !dbg !8447
  store i32 %46, i32* %index.addr, align 4, !dbg !8449
  %47 = load i32, i32* %limit, align 4, !dbg !8450
  %add89 = add nsw i32 %47, 8, !dbg !8450
  store i32 %add89, i32* %limit, align 4, !dbg !8450
  br label %for.cond, !dbg !8451, !llvm.loop !8452

for.end90:                                        ; preds = %if.then86, %for.cond
  store i32 0, i32* %retval, align 4, !dbg !8454
  br label %return, !dbg !8454

return:                                           ; preds = %for.end90, %if.then76, %if.then
  %48 = load i32, i32* %retval, align 4, !dbg !8455
  ret i32 %48, !dbg !8455
}

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i32 @mid_pred(i32 %a, i32 %b, i32 %c) #7 !dbg !8456 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %c.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !8457, metadata !1727), !dbg !8458
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !8459, metadata !1727), !dbg !8460
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !8461, metadata !1727), !dbg !8462
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8463, metadata !1727), !dbg !8464
  %0 = load i32, i32* %b.addr, align 4, !dbg !8465
  store i32 %0, i32* %i, align 4, !dbg !8464
  %1 = load i32, i32* %i, align 4, !dbg !8466
  %2 = load i32, i32* %a.addr, align 4, !dbg !8466
  %3 = load i32, i32* %b.addr, align 4, !dbg !8467
  %4 = load i32, i32* %c.addr, align 4, !dbg !8468
  %5 = call { i32, i32 } asm "cmp    $2, $1 \0A\09cmovg  $1, $0 \0A\09cmovg  $2, $1 \0A\09cmp    $3, $1 \0A\09cmovl  $3, $1 \0A\09cmp    $1, $0 \0A\09cmovg  $1, $0 \0A\09", "=&r,=&r,r,r,0,1,~{dirflag},~{fpsr},~{flags}"(i32 %3, i32 %4, i32 %1, i32 %2) #2, !dbg !8466, !srcloc !8469
  %asmresult = extractvalue { i32, i32 } %5, 0, !dbg !8466
  %asmresult1 = extractvalue { i32, i32 } %5, 1, !dbg !8466
  store i32 %asmresult, i32* %i, align 4, !dbg !8466
  store i32 %asmresult1, i32* %a.addr, align 4, !dbg !8466
  %6 = load i32, i32* %i, align 4, !dbg !8470
  ret i32 %6, !dbg !8471
}

; Function Attrs: nounwind uwtable
define internal void @svq3_add_idct_c(i8* %dst, i16* %block, i32 %stride, i32 %qp, i32 %dc) #1 !dbg !8472 {
entry:
  %retval.i216 = alloca i8, align 1
  %a.addr.i217 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i217, metadata !8475, metadata !1727), !dbg !8479
  %retval.i205 = alloca i8, align 1
  %a.addr.i206 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i206, metadata !8475, metadata !1727), !dbg !8484
  %retval.i194 = alloca i8, align 1
  %a.addr.i195 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i195, metadata !8475, metadata !1727), !dbg !8486
  %retval.i = alloca i8, align 1
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !8475, metadata !1727), !dbg !8488
  %dst.addr = alloca i8*, align 8
  %block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %qp.addr = alloca i32, align 4
  %dc.addr = alloca i32, align 4
  %qmul = alloca i32, align 4
  %i = alloca i32, align 4
  %z0 = alloca i32, align 4
  %z1 = alloca i32, align 4
  %z2 = alloca i32, align 4
  %z3 = alloca i32, align 4
  %z085 = alloca i32, align 4
  %z196 = alloca i32, align 4
  %z2107 = alloca i32, align 4
  %z3119 = alloca i32, align 4
  %rr = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !8490, metadata !1727), !dbg !8491
  store i16* %block, i16** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %block.addr, metadata !8492, metadata !1727), !dbg !8493
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !8494, metadata !1727), !dbg !8495
  store i32 %qp, i32* %qp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %qp.addr, metadata !8496, metadata !1727), !dbg !8497
  store i32 %dc, i32* %dc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dc.addr, metadata !8498, metadata !1727), !dbg !8499
  call void @llvm.dbg.declare(metadata i32* %qmul, metadata !8500, metadata !1727), !dbg !8501
  %0 = load i32, i32* %qp.addr, align 4, !dbg !8502
  %idxprom = sext i32 %0 to i64, !dbg !8503
  %arrayidx = getelementptr inbounds [32 x i32], [32 x i32]* @svq3_dequant_coeff, i64 0, i64 %idxprom, !dbg !8503
  %1 = load i32, i32* %arrayidx, align 4, !dbg !8503
  store i32 %1, i32* %qmul, align 4, !dbg !8501
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8504, metadata !1727), !dbg !8505
  %2 = load i32, i32* %dc.addr, align 4, !dbg !8506
  %tobool = icmp ne i32 %2, 0, !dbg !8506
  br i1 %tobool, label %if.then, label %if.end, !dbg !8508

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %dc.addr, align 4, !dbg !8509
  %cmp = icmp eq i32 %3, 1, !dbg !8511
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8509

cond.true:                                        ; preds = %if.then
  %4 = load i16*, i16** %block.addr, align 8, !dbg !8512
  %arrayidx1 = getelementptr inbounds i16, i16* %4, i64 0, !dbg !8512
  %5 = load i16, i16* %arrayidx1, align 2, !dbg !8512
  %conv = sext i16 %5 to i32, !dbg !8512
  %mul = mul i32 1538, %conv, !dbg !8514
  br label %cond.end, !dbg !8515

cond.false:                                       ; preds = %if.then
  %6 = load i32, i32* %qmul, align 4, !dbg !8516
  %7 = load i16*, i16** %block.addr, align 8, !dbg !8517
  %arrayidx2 = getelementptr inbounds i16, i16* %7, i64 0, !dbg !8517
  %8 = load i16, i16* %arrayidx2, align 2, !dbg !8517
  %conv3 = sext i16 %8 to i32, !dbg !8517
  %shr = ashr i32 %conv3, 3, !dbg !8518
  %mul4 = mul nsw i32 %6, %shr, !dbg !8519
  %div = sdiv i32 %mul4, 2, !dbg !8520
  br label %cond.end, !dbg !8521

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %mul, %cond.true ], [ %div, %cond.false ], !dbg !8523
  %mul5 = mul i32 169, %cond, !dbg !8525
  store i32 %mul5, i32* %dc.addr, align 4, !dbg !8526
  %9 = load i16*, i16** %block.addr, align 8, !dbg !8527
  %arrayidx6 = getelementptr inbounds i16, i16* %9, i64 0, !dbg !8527
  store i16 0, i16* %arrayidx6, align 2, !dbg !8528
  br label %if.end, !dbg !8529

if.end:                                           ; preds = %cond.end, %entry
  store i32 0, i32* %i, align 4, !dbg !8530
  br label %for.cond, !dbg !8532

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load i32, i32* %i, align 4, !dbg !8533
  %cmp7 = icmp slt i32 %10, 4, !dbg !8536
  br i1 %cmp7, label %for.body, label %for.end, !dbg !8537

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %z0, metadata !8538, metadata !1727), !dbg !8540
  %11 = load i32, i32* %i, align 4, !dbg !8541
  %mul9 = mul nsw i32 4, %11, !dbg !8542
  %add = add nsw i32 0, %mul9, !dbg !8543
  %idxprom10 = sext i32 %add to i64, !dbg !8544
  %12 = load i16*, i16** %block.addr, align 8, !dbg !8544
  %arrayidx11 = getelementptr inbounds i16, i16* %12, i64 %idxprom10, !dbg !8544
  %13 = load i16, i16* %arrayidx11, align 2, !dbg !8544
  %conv12 = sext i16 %13 to i32, !dbg !8544
  %14 = load i32, i32* %i, align 4, !dbg !8545
  %mul13 = mul nsw i32 4, %14, !dbg !8546
  %add14 = add nsw i32 2, %mul13, !dbg !8547
  %idxprom15 = sext i32 %add14 to i64, !dbg !8548
  %15 = load i16*, i16** %block.addr, align 8, !dbg !8548
  %arrayidx16 = getelementptr inbounds i16, i16* %15, i64 %idxprom15, !dbg !8548
  %16 = load i16, i16* %arrayidx16, align 2, !dbg !8548
  %conv17 = sext i16 %16 to i32, !dbg !8548
  %add18 = add nsw i32 %conv12, %conv17, !dbg !8549
  %mul19 = mul nsw i32 13, %add18, !dbg !8550
  store i32 %mul19, i32* %z0, align 4, !dbg !8540
  call void @llvm.dbg.declare(metadata i32* %z1, metadata !8551, metadata !1727), !dbg !8552
  %17 = load i32, i32* %i, align 4, !dbg !8553
  %mul20 = mul nsw i32 4, %17, !dbg !8554
  %add21 = add nsw i32 0, %mul20, !dbg !8555
  %idxprom22 = sext i32 %add21 to i64, !dbg !8556
  %18 = load i16*, i16** %block.addr, align 8, !dbg !8556
  %arrayidx23 = getelementptr inbounds i16, i16* %18, i64 %idxprom22, !dbg !8556
  %19 = load i16, i16* %arrayidx23, align 2, !dbg !8556
  %conv24 = sext i16 %19 to i32, !dbg !8556
  %20 = load i32, i32* %i, align 4, !dbg !8557
  %mul25 = mul nsw i32 4, %20, !dbg !8558
  %add26 = add nsw i32 2, %mul25, !dbg !8559
  %idxprom27 = sext i32 %add26 to i64, !dbg !8560
  %21 = load i16*, i16** %block.addr, align 8, !dbg !8560
  %arrayidx28 = getelementptr inbounds i16, i16* %21, i64 %idxprom27, !dbg !8560
  %22 = load i16, i16* %arrayidx28, align 2, !dbg !8560
  %conv29 = sext i16 %22 to i32, !dbg !8560
  %sub = sub nsw i32 %conv24, %conv29, !dbg !8561
  %mul30 = mul nsw i32 13, %sub, !dbg !8562
  store i32 %mul30, i32* %z1, align 4, !dbg !8552
  call void @llvm.dbg.declare(metadata i32* %z2, metadata !8563, metadata !1727), !dbg !8564
  %23 = load i32, i32* %i, align 4, !dbg !8565
  %mul31 = mul nsw i32 4, %23, !dbg !8566
  %add32 = add nsw i32 1, %mul31, !dbg !8567
  %idxprom33 = sext i32 %add32 to i64, !dbg !8568
  %24 = load i16*, i16** %block.addr, align 8, !dbg !8568
  %arrayidx34 = getelementptr inbounds i16, i16* %24, i64 %idxprom33, !dbg !8568
  %25 = load i16, i16* %arrayidx34, align 2, !dbg !8568
  %conv35 = sext i16 %25 to i32, !dbg !8568
  %mul36 = mul nsw i32 7, %conv35, !dbg !8569
  %26 = load i32, i32* %i, align 4, !dbg !8570
  %mul37 = mul nsw i32 4, %26, !dbg !8571
  %add38 = add nsw i32 3, %mul37, !dbg !8572
  %idxprom39 = sext i32 %add38 to i64, !dbg !8573
  %27 = load i16*, i16** %block.addr, align 8, !dbg !8573
  %arrayidx40 = getelementptr inbounds i16, i16* %27, i64 %idxprom39, !dbg !8573
  %28 = load i16, i16* %arrayidx40, align 2, !dbg !8573
  %conv41 = sext i16 %28 to i32, !dbg !8573
  %mul42 = mul nsw i32 17, %conv41, !dbg !8574
  %sub43 = sub nsw i32 %mul36, %mul42, !dbg !8575
  store i32 %sub43, i32* %z2, align 4, !dbg !8564
  call void @llvm.dbg.declare(metadata i32* %z3, metadata !8576, metadata !1727), !dbg !8577
  %29 = load i32, i32* %i, align 4, !dbg !8578
  %mul44 = mul nsw i32 4, %29, !dbg !8579
  %add45 = add nsw i32 1, %mul44, !dbg !8580
  %idxprom46 = sext i32 %add45 to i64, !dbg !8581
  %30 = load i16*, i16** %block.addr, align 8, !dbg !8581
  %arrayidx47 = getelementptr inbounds i16, i16* %30, i64 %idxprom46, !dbg !8581
  %31 = load i16, i16* %arrayidx47, align 2, !dbg !8581
  %conv48 = sext i16 %31 to i32, !dbg !8581
  %mul49 = mul nsw i32 17, %conv48, !dbg !8582
  %32 = load i32, i32* %i, align 4, !dbg !8583
  %mul50 = mul nsw i32 4, %32, !dbg !8584
  %add51 = add nsw i32 3, %mul50, !dbg !8585
  %idxprom52 = sext i32 %add51 to i64, !dbg !8586
  %33 = load i16*, i16** %block.addr, align 8, !dbg !8586
  %arrayidx53 = getelementptr inbounds i16, i16* %33, i64 %idxprom52, !dbg !8586
  %34 = load i16, i16* %arrayidx53, align 2, !dbg !8586
  %conv54 = sext i16 %34 to i32, !dbg !8586
  %mul55 = mul nsw i32 7, %conv54, !dbg !8587
  %add56 = add nsw i32 %mul49, %mul55, !dbg !8588
  store i32 %add56, i32* %z3, align 4, !dbg !8577
  %35 = load i32, i32* %z0, align 4, !dbg !8589
  %36 = load i32, i32* %z3, align 4, !dbg !8590
  %add57 = add nsw i32 %35, %36, !dbg !8591
  %conv58 = trunc i32 %add57 to i16, !dbg !8589
  %37 = load i32, i32* %i, align 4, !dbg !8592
  %mul59 = mul nsw i32 4, %37, !dbg !8593
  %add60 = add nsw i32 0, %mul59, !dbg !8594
  %idxprom61 = sext i32 %add60 to i64, !dbg !8595
  %38 = load i16*, i16** %block.addr, align 8, !dbg !8595
  %arrayidx62 = getelementptr inbounds i16, i16* %38, i64 %idxprom61, !dbg !8595
  store i16 %conv58, i16* %arrayidx62, align 2, !dbg !8596
  %39 = load i32, i32* %z1, align 4, !dbg !8597
  %40 = load i32, i32* %z2, align 4, !dbg !8598
  %add63 = add nsw i32 %39, %40, !dbg !8599
  %conv64 = trunc i32 %add63 to i16, !dbg !8597
  %41 = load i32, i32* %i, align 4, !dbg !8600
  %mul65 = mul nsw i32 4, %41, !dbg !8601
  %add66 = add nsw i32 1, %mul65, !dbg !8602
  %idxprom67 = sext i32 %add66 to i64, !dbg !8603
  %42 = load i16*, i16** %block.addr, align 8, !dbg !8603
  %arrayidx68 = getelementptr inbounds i16, i16* %42, i64 %idxprom67, !dbg !8603
  store i16 %conv64, i16* %arrayidx68, align 2, !dbg !8604
  %43 = load i32, i32* %z1, align 4, !dbg !8605
  %44 = load i32, i32* %z2, align 4, !dbg !8606
  %sub69 = sub nsw i32 %43, %44, !dbg !8607
  %conv70 = trunc i32 %sub69 to i16, !dbg !8605
  %45 = load i32, i32* %i, align 4, !dbg !8608
  %mul71 = mul nsw i32 4, %45, !dbg !8609
  %add72 = add nsw i32 2, %mul71, !dbg !8610
  %idxprom73 = sext i32 %add72 to i64, !dbg !8611
  %46 = load i16*, i16** %block.addr, align 8, !dbg !8611
  %arrayidx74 = getelementptr inbounds i16, i16* %46, i64 %idxprom73, !dbg !8611
  store i16 %conv70, i16* %arrayidx74, align 2, !dbg !8612
  %47 = load i32, i32* %z0, align 4, !dbg !8613
  %48 = load i32, i32* %z3, align 4, !dbg !8614
  %sub75 = sub nsw i32 %47, %48, !dbg !8615
  %conv76 = trunc i32 %sub75 to i16, !dbg !8613
  %49 = load i32, i32* %i, align 4, !dbg !8616
  %mul77 = mul nsw i32 4, %49, !dbg !8617
  %add78 = add nsw i32 3, %mul77, !dbg !8618
  %idxprom79 = sext i32 %add78 to i64, !dbg !8619
  %50 = load i16*, i16** %block.addr, align 8, !dbg !8619
  %arrayidx80 = getelementptr inbounds i16, i16* %50, i64 %idxprom79, !dbg !8619
  store i16 %conv76, i16* %arrayidx80, align 2, !dbg !8620
  br label %for.inc, !dbg !8621

for.inc:                                          ; preds = %for.body
  %51 = load i32, i32* %i, align 4, !dbg !8622
  %inc = add nsw i32 %51, 1, !dbg !8622
  store i32 %inc, i32* %i, align 4, !dbg !8622
  br label %for.cond, !dbg !8624, !llvm.loop !8625

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !8627
  br label %for.cond81, !dbg !8628

for.cond81:                                       ; preds = %for.inc191, %for.end
  %52 = load i32, i32* %i, align 4, !dbg !8629
  %cmp82 = icmp slt i32 %52, 4, !dbg !8631
  br i1 %cmp82, label %for.body84, label %for.end193, !dbg !8632

for.body84:                                       ; preds = %for.cond81
  call void @llvm.dbg.declare(metadata i32* %z085, metadata !8633, metadata !1727), !dbg !8635
  %53 = load i32, i32* %i, align 4, !dbg !8636
  %add86 = add nsw i32 %53, 0, !dbg !8637
  %idxprom87 = sext i32 %add86 to i64, !dbg !8638
  %54 = load i16*, i16** %block.addr, align 8, !dbg !8638
  %arrayidx88 = getelementptr inbounds i16, i16* %54, i64 %idxprom87, !dbg !8638
  %55 = load i16, i16* %arrayidx88, align 2, !dbg !8638
  %conv89 = sext i16 %55 to i32, !dbg !8638
  %56 = load i32, i32* %i, align 4, !dbg !8639
  %add90 = add nsw i32 %56, 8, !dbg !8640
  %idxprom91 = sext i32 %add90 to i64, !dbg !8641
  %57 = load i16*, i16** %block.addr, align 8, !dbg !8641
  %arrayidx92 = getelementptr inbounds i16, i16* %57, i64 %idxprom91, !dbg !8641
  %58 = load i16, i16* %arrayidx92, align 2, !dbg !8641
  %conv93 = sext i16 %58 to i32, !dbg !8641
  %add94 = add nsw i32 %conv89, %conv93, !dbg !8642
  %mul95 = mul nsw i32 13, %add94, !dbg !8643
  store i32 %mul95, i32* %z085, align 4, !dbg !8635
  call void @llvm.dbg.declare(metadata i32* %z196, metadata !8644, metadata !1727), !dbg !8645
  %59 = load i32, i32* %i, align 4, !dbg !8646
  %add97 = add nsw i32 %59, 0, !dbg !8647
  %idxprom98 = sext i32 %add97 to i64, !dbg !8648
  %60 = load i16*, i16** %block.addr, align 8, !dbg !8648
  %arrayidx99 = getelementptr inbounds i16, i16* %60, i64 %idxprom98, !dbg !8648
  %61 = load i16, i16* %arrayidx99, align 2, !dbg !8648
  %conv100 = sext i16 %61 to i32, !dbg !8648
  %62 = load i32, i32* %i, align 4, !dbg !8649
  %add101 = add nsw i32 %62, 8, !dbg !8650
  %idxprom102 = sext i32 %add101 to i64, !dbg !8651
  %63 = load i16*, i16** %block.addr, align 8, !dbg !8651
  %arrayidx103 = getelementptr inbounds i16, i16* %63, i64 %idxprom102, !dbg !8651
  %64 = load i16, i16* %arrayidx103, align 2, !dbg !8651
  %conv104 = sext i16 %64 to i32, !dbg !8651
  %sub105 = sub nsw i32 %conv100, %conv104, !dbg !8652
  %mul106 = mul nsw i32 13, %sub105, !dbg !8653
  store i32 %mul106, i32* %z196, align 4, !dbg !8645
  call void @llvm.dbg.declare(metadata i32* %z2107, metadata !8654, metadata !1727), !dbg !8655
  %65 = load i32, i32* %i, align 4, !dbg !8656
  %add108 = add nsw i32 %65, 4, !dbg !8657
  %idxprom109 = sext i32 %add108 to i64, !dbg !8658
  %66 = load i16*, i16** %block.addr, align 8, !dbg !8658
  %arrayidx110 = getelementptr inbounds i16, i16* %66, i64 %idxprom109, !dbg !8658
  %67 = load i16, i16* %arrayidx110, align 2, !dbg !8658
  %conv111 = sext i16 %67 to i32, !dbg !8658
  %mul112 = mul nsw i32 7, %conv111, !dbg !8659
  %68 = load i32, i32* %i, align 4, !dbg !8660
  %add113 = add nsw i32 %68, 12, !dbg !8661
  %idxprom114 = sext i32 %add113 to i64, !dbg !8662
  %69 = load i16*, i16** %block.addr, align 8, !dbg !8662
  %arrayidx115 = getelementptr inbounds i16, i16* %69, i64 %idxprom114, !dbg !8662
  %70 = load i16, i16* %arrayidx115, align 2, !dbg !8662
  %conv116 = sext i16 %70 to i32, !dbg !8662
  %mul117 = mul nsw i32 17, %conv116, !dbg !8663
  %sub118 = sub nsw i32 %mul112, %mul117, !dbg !8664
  store i32 %sub118, i32* %z2107, align 4, !dbg !8655
  call void @llvm.dbg.declare(metadata i32* %z3119, metadata !8665, metadata !1727), !dbg !8666
  %71 = load i32, i32* %i, align 4, !dbg !8667
  %add120 = add nsw i32 %71, 4, !dbg !8668
  %idxprom121 = sext i32 %add120 to i64, !dbg !8669
  %72 = load i16*, i16** %block.addr, align 8, !dbg !8669
  %arrayidx122 = getelementptr inbounds i16, i16* %72, i64 %idxprom121, !dbg !8669
  %73 = load i16, i16* %arrayidx122, align 2, !dbg !8669
  %conv123 = sext i16 %73 to i32, !dbg !8669
  %mul124 = mul nsw i32 17, %conv123, !dbg !8670
  %74 = load i32, i32* %i, align 4, !dbg !8671
  %add125 = add nsw i32 %74, 12, !dbg !8672
  %idxprom126 = sext i32 %add125 to i64, !dbg !8673
  %75 = load i16*, i16** %block.addr, align 8, !dbg !8673
  %arrayidx127 = getelementptr inbounds i16, i16* %75, i64 %idxprom126, !dbg !8673
  %76 = load i16, i16* %arrayidx127, align 2, !dbg !8673
  %conv128 = sext i16 %76 to i32, !dbg !8673
  %mul129 = mul nsw i32 7, %conv128, !dbg !8674
  %add130 = add nsw i32 %mul124, %mul129, !dbg !8675
  store i32 %add130, i32* %z3119, align 4, !dbg !8666
  call void @llvm.dbg.declare(metadata i32* %rr, metadata !8676, metadata !1727), !dbg !8677
  %77 = load i32, i32* %dc.addr, align 4, !dbg !8678
  %add131 = add i32 %77, 524288, !dbg !8679
  store i32 %add131, i32* %rr, align 4, !dbg !8677
  %78 = load i32, i32* %i, align 4, !dbg !8680
  %79 = load i32, i32* %stride.addr, align 4, !dbg !8681
  %mul132 = mul nsw i32 %79, 0, !dbg !8682
  %add133 = add nsw i32 %78, %mul132, !dbg !8683
  %idxprom134 = sext i32 %add133 to i64, !dbg !8684
  %80 = load i8*, i8** %dst.addr, align 8, !dbg !8684
  %arrayidx135 = getelementptr inbounds i8, i8* %80, i64 %idxprom134, !dbg !8684
  %81 = load i8, i8* %arrayidx135, align 1, !dbg !8684
  %conv136 = zext i8 %81 to i32, !dbg !8684
  %82 = load i32, i32* %z085, align 4, !dbg !8685
  %83 = load i32, i32* %z3119, align 4, !dbg !8686
  %add137 = add i32 %82, %83, !dbg !8687
  %84 = load i32, i32* %qmul, align 4, !dbg !8688
  %mul138 = mul i32 %add137, %84, !dbg !8689
  %85 = load i32, i32* %rr, align 4, !dbg !8690
  %add139 = add i32 %mul138, %85, !dbg !8691
  %shr140 = ashr i32 %add139, 20, !dbg !8692
  %add141 = add nsw i32 %conv136, %shr140, !dbg !8693
  store i32 %add141, i32* %a.addr.i, align 4, !dbg !8694
  %86 = load i32, i32* %a.addr.i, align 4, !dbg !8695
  %and.i = and i32 %86, -256, !dbg !8697
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !8697
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !8698

if.then.i:                                        ; preds = %for.body84
  %87 = load i32, i32* %a.addr.i, align 4, !dbg !8699
  %neg.i = xor i32 %87, -1, !dbg !8701
  %shr.i = ashr i32 %neg.i, 31, !dbg !8702
  %conv.i = trunc i32 %shr.i to i8, !dbg !8703
  store i8 %conv.i, i8* %retval.i, align 1, !dbg !8704
  br label %av_clip_uint8_c.exit, !dbg !8704

if.else.i:                                        ; preds = %for.body84
  %88 = load i32, i32* %a.addr.i, align 4, !dbg !8705
  %conv1.i = trunc i32 %88 to i8, !dbg !8705
  store i8 %conv1.i, i8* %retval.i, align 1, !dbg !8706
  br label %av_clip_uint8_c.exit, !dbg !8706

av_clip_uint8_c.exit:                             ; preds = %if.then.i, %if.else.i
  %89 = load i8, i8* %retval.i, align 1, !dbg !8707
  %90 = load i32, i32* %i, align 4, !dbg !8708
  %91 = load i32, i32* %stride.addr, align 4, !dbg !8709
  %mul142 = mul nsw i32 %91, 0, !dbg !8710
  %add143 = add nsw i32 %90, %mul142, !dbg !8711
  %idxprom144 = sext i32 %add143 to i64, !dbg !8712
  %92 = load i8*, i8** %dst.addr, align 8, !dbg !8712
  %arrayidx145 = getelementptr inbounds i8, i8* %92, i64 %idxprom144, !dbg !8712
  store i8 %89, i8* %arrayidx145, align 1, !dbg !8713
  %93 = load i32, i32* %i, align 4, !dbg !8714
  %94 = load i32, i32* %stride.addr, align 4, !dbg !8715
  %mul146 = mul nsw i32 %94, 1, !dbg !8716
  %add147 = add nsw i32 %93, %mul146, !dbg !8717
  %idxprom148 = sext i32 %add147 to i64, !dbg !8718
  %95 = load i8*, i8** %dst.addr, align 8, !dbg !8718
  %arrayidx149 = getelementptr inbounds i8, i8* %95, i64 %idxprom148, !dbg !8718
  %96 = load i8, i8* %arrayidx149, align 1, !dbg !8718
  %conv150 = zext i8 %96 to i32, !dbg !8718
  %97 = load i32, i32* %z196, align 4, !dbg !8719
  %98 = load i32, i32* %z2107, align 4, !dbg !8720
  %add151 = add i32 %97, %98, !dbg !8721
  %99 = load i32, i32* %qmul, align 4, !dbg !8722
  %mul152 = mul i32 %add151, %99, !dbg !8723
  %100 = load i32, i32* %rr, align 4, !dbg !8724
  %add153 = add i32 %mul152, %100, !dbg !8725
  %shr154 = ashr i32 %add153, 20, !dbg !8726
  %add155 = add nsw i32 %conv150, %shr154, !dbg !8727
  store i32 %add155, i32* %a.addr.i217, align 4, !dbg !8728
  %101 = load i32, i32* %a.addr.i217, align 4, !dbg !8729
  %and.i218 = and i32 %101, -256, !dbg !8730
  %tobool.i219 = icmp ne i32 %and.i218, 0, !dbg !8730
  br i1 %tobool.i219, label %if.then.i223, label %if.else.i225, !dbg !8731

if.then.i223:                                     ; preds = %av_clip_uint8_c.exit
  %102 = load i32, i32* %a.addr.i217, align 4, !dbg !8732
  %neg.i220 = xor i32 %102, -1, !dbg !8733
  %shr.i221 = ashr i32 %neg.i220, 31, !dbg !8734
  %conv.i222 = trunc i32 %shr.i221 to i8, !dbg !8735
  store i8 %conv.i222, i8* %retval.i216, align 1, !dbg !8736
  br label %av_clip_uint8_c.exit226, !dbg !8736

if.else.i225:                                     ; preds = %av_clip_uint8_c.exit
  %103 = load i32, i32* %a.addr.i217, align 4, !dbg !8737
  %conv1.i224 = trunc i32 %103 to i8, !dbg !8737
  store i8 %conv1.i224, i8* %retval.i216, align 1, !dbg !8738
  br label %av_clip_uint8_c.exit226, !dbg !8738

av_clip_uint8_c.exit226:                          ; preds = %if.then.i223, %if.else.i225
  %104 = load i8, i8* %retval.i216, align 1, !dbg !8739
  %105 = load i32, i32* %i, align 4, !dbg !8740
  %106 = load i32, i32* %stride.addr, align 4, !dbg !8741
  %mul157 = mul nsw i32 %106, 1, !dbg !8742
  %add158 = add nsw i32 %105, %mul157, !dbg !8743
  %idxprom159 = sext i32 %add158 to i64, !dbg !8744
  %107 = load i8*, i8** %dst.addr, align 8, !dbg !8744
  %arrayidx160 = getelementptr inbounds i8, i8* %107, i64 %idxprom159, !dbg !8744
  store i8 %104, i8* %arrayidx160, align 1, !dbg !8745
  %108 = load i32, i32* %i, align 4, !dbg !8746
  %109 = load i32, i32* %stride.addr, align 4, !dbg !8747
  %mul161 = mul nsw i32 %109, 2, !dbg !8748
  %add162 = add nsw i32 %108, %mul161, !dbg !8749
  %idxprom163 = sext i32 %add162 to i64, !dbg !8750
  %110 = load i8*, i8** %dst.addr, align 8, !dbg !8750
  %arrayidx164 = getelementptr inbounds i8, i8* %110, i64 %idxprom163, !dbg !8750
  %111 = load i8, i8* %arrayidx164, align 1, !dbg !8750
  %conv165 = zext i8 %111 to i32, !dbg !8750
  %112 = load i32, i32* %z196, align 4, !dbg !8751
  %113 = load i32, i32* %z2107, align 4, !dbg !8752
  %sub166 = sub i32 %112, %113, !dbg !8753
  %114 = load i32, i32* %qmul, align 4, !dbg !8754
  %mul167 = mul i32 %sub166, %114, !dbg !8755
  %115 = load i32, i32* %rr, align 4, !dbg !8756
  %add168 = add i32 %mul167, %115, !dbg !8757
  %shr169 = ashr i32 %add168, 20, !dbg !8758
  %add170 = add nsw i32 %conv165, %shr169, !dbg !8759
  store i32 %add170, i32* %a.addr.i206, align 4, !dbg !8760
  %116 = load i32, i32* %a.addr.i206, align 4, !dbg !8761
  %and.i207 = and i32 %116, -256, !dbg !8762
  %tobool.i208 = icmp ne i32 %and.i207, 0, !dbg !8762
  br i1 %tobool.i208, label %if.then.i212, label %if.else.i214, !dbg !8763

if.then.i212:                                     ; preds = %av_clip_uint8_c.exit226
  %117 = load i32, i32* %a.addr.i206, align 4, !dbg !8764
  %neg.i209 = xor i32 %117, -1, !dbg !8765
  %shr.i210 = ashr i32 %neg.i209, 31, !dbg !8766
  %conv.i211 = trunc i32 %shr.i210 to i8, !dbg !8767
  store i8 %conv.i211, i8* %retval.i205, align 1, !dbg !8768
  br label %av_clip_uint8_c.exit215, !dbg !8768

if.else.i214:                                     ; preds = %av_clip_uint8_c.exit226
  %118 = load i32, i32* %a.addr.i206, align 4, !dbg !8769
  %conv1.i213 = trunc i32 %118 to i8, !dbg !8769
  store i8 %conv1.i213, i8* %retval.i205, align 1, !dbg !8770
  br label %av_clip_uint8_c.exit215, !dbg !8770

av_clip_uint8_c.exit215:                          ; preds = %if.then.i212, %if.else.i214
  %119 = load i8, i8* %retval.i205, align 1, !dbg !8771
  %120 = load i32, i32* %i, align 4, !dbg !8772
  %121 = load i32, i32* %stride.addr, align 4, !dbg !8773
  %mul172 = mul nsw i32 %121, 2, !dbg !8774
  %add173 = add nsw i32 %120, %mul172, !dbg !8775
  %idxprom174 = sext i32 %add173 to i64, !dbg !8776
  %122 = load i8*, i8** %dst.addr, align 8, !dbg !8776
  %arrayidx175 = getelementptr inbounds i8, i8* %122, i64 %idxprom174, !dbg !8776
  store i8 %119, i8* %arrayidx175, align 1, !dbg !8777
  %123 = load i32, i32* %i, align 4, !dbg !8778
  %124 = load i32, i32* %stride.addr, align 4, !dbg !8779
  %mul176 = mul nsw i32 %124, 3, !dbg !8780
  %add177 = add nsw i32 %123, %mul176, !dbg !8781
  %idxprom178 = sext i32 %add177 to i64, !dbg !8782
  %125 = load i8*, i8** %dst.addr, align 8, !dbg !8782
  %arrayidx179 = getelementptr inbounds i8, i8* %125, i64 %idxprom178, !dbg !8782
  %126 = load i8, i8* %arrayidx179, align 1, !dbg !8782
  %conv180 = zext i8 %126 to i32, !dbg !8782
  %127 = load i32, i32* %z085, align 4, !dbg !8783
  %128 = load i32, i32* %z3119, align 4, !dbg !8784
  %sub181 = sub i32 %127, %128, !dbg !8785
  %129 = load i32, i32* %qmul, align 4, !dbg !8786
  %mul182 = mul i32 %sub181, %129, !dbg !8787
  %130 = load i32, i32* %rr, align 4, !dbg !8788
  %add183 = add i32 %mul182, %130, !dbg !8789
  %shr184 = ashr i32 %add183, 20, !dbg !8790
  %add185 = add nsw i32 %conv180, %shr184, !dbg !8791
  store i32 %add185, i32* %a.addr.i195, align 4, !dbg !8792
  %131 = load i32, i32* %a.addr.i195, align 4, !dbg !8793
  %and.i196 = and i32 %131, -256, !dbg !8794
  %tobool.i197 = icmp ne i32 %and.i196, 0, !dbg !8794
  br i1 %tobool.i197, label %if.then.i201, label %if.else.i203, !dbg !8795

if.then.i201:                                     ; preds = %av_clip_uint8_c.exit215
  %132 = load i32, i32* %a.addr.i195, align 4, !dbg !8796
  %neg.i198 = xor i32 %132, -1, !dbg !8797
  %shr.i199 = ashr i32 %neg.i198, 31, !dbg !8798
  %conv.i200 = trunc i32 %shr.i199 to i8, !dbg !8799
  store i8 %conv.i200, i8* %retval.i194, align 1, !dbg !8800
  br label %av_clip_uint8_c.exit204, !dbg !8800

if.else.i203:                                     ; preds = %av_clip_uint8_c.exit215
  %133 = load i32, i32* %a.addr.i195, align 4, !dbg !8801
  %conv1.i202 = trunc i32 %133 to i8, !dbg !8801
  store i8 %conv1.i202, i8* %retval.i194, align 1, !dbg !8802
  br label %av_clip_uint8_c.exit204, !dbg !8802

av_clip_uint8_c.exit204:                          ; preds = %if.then.i201, %if.else.i203
  %134 = load i8, i8* %retval.i194, align 1, !dbg !8803
  %135 = load i32, i32* %i, align 4, !dbg !8804
  %136 = load i32, i32* %stride.addr, align 4, !dbg !8805
  %mul187 = mul nsw i32 %136, 3, !dbg !8806
  %add188 = add nsw i32 %135, %mul187, !dbg !8807
  %idxprom189 = sext i32 %add188 to i64, !dbg !8808
  %137 = load i8*, i8** %dst.addr, align 8, !dbg !8808
  %arrayidx190 = getelementptr inbounds i8, i8* %137, i64 %idxprom189, !dbg !8808
  store i8 %134, i8* %arrayidx190, align 1, !dbg !8809
  br label %for.inc191, !dbg !8810

for.inc191:                                       ; preds = %av_clip_uint8_c.exit204
  %138 = load i32, i32* %i, align 4, !dbg !8811
  %inc192 = add nsw i32 %138, 1, !dbg !8811
  store i32 %inc192, i32* %i, align 4, !dbg !8811
  br label %for.cond81, !dbg !8813, !llvm.loop !8814

for.end193:                                       ; preds = %for.cond81
  %139 = load i16*, i16** %block.addr, align 8, !dbg !8816
  %140 = bitcast i16* %139 to i8*, !dbg !8817
  call void @llvm.memset.p0i8.i64(i8* %140, i8 0, i64 32, i32 2, i1 false), !dbg !8817
  ret void, !dbg !8818
}

; Function Attrs: nounwind uwtable
define internal void @svq3_luma_dc_dequant_idct_c(i16* %output, i16* %input, i32 %qp) #1 !dbg !1709 {
entry:
  %output.addr = alloca i16*, align 8
  %input.addr = alloca i16*, align 8
  %qp.addr = alloca i32, align 4
  %qmul = alloca i32, align 4
  %i = alloca i32, align 4
  %temp = alloca [16 x i32], align 16
  %z0 = alloca i32, align 4
  %z1 = alloca i32, align 4
  %z2 = alloca i32, align 4
  %z3 = alloca i32, align 4
  %offset = alloca i32, align 4
  %z074 = alloca i32, align 4
  %z183 = alloca i32, align 4
  %z292 = alloca i32, align 4
  %z3102 = alloca i32, align 4
  store i16* %output, i16** %output.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %output.addr, metadata !8819, metadata !1727), !dbg !8820
  store i16* %input, i16** %input.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %input.addr, metadata !8821, metadata !1727), !dbg !8822
  store i32 %qp, i32* %qp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %qp.addr, metadata !8823, metadata !1727), !dbg !8824
  call void @llvm.dbg.declare(metadata i32* %qmul, metadata !8825, metadata !1727), !dbg !8826
  %0 = load i32, i32* %qp.addr, align 4, !dbg !8827
  %idxprom = sext i32 %0 to i64, !dbg !8828
  %arrayidx = getelementptr inbounds [32 x i32], [32 x i32]* @svq3_dequant_coeff, i64 0, i64 %idxprom, !dbg !8828
  %1 = load i32, i32* %arrayidx, align 4, !dbg !8828
  store i32 %1, i32* %qmul, align 4, !dbg !8826
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8829, metadata !1727), !dbg !8830
  call void @llvm.dbg.declare(metadata [16 x i32]* %temp, metadata !8831, metadata !1727), !dbg !8833
  store i32 0, i32* %i, align 4, !dbg !8834
  br label %for.cond, !dbg !8836

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !8837
  %cmp = icmp slt i32 %2, 4, !dbg !8840
  br i1 %cmp, label %for.body, label %for.end, !dbg !8841

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %z0, metadata !8842, metadata !1727), !dbg !8844
  %3 = load i32, i32* %i, align 4, !dbg !8845
  %mul = mul nsw i32 4, %3, !dbg !8846
  %add = add nsw i32 %mul, 0, !dbg !8847
  %idxprom1 = sext i32 %add to i64, !dbg !8848
  %4 = load i16*, i16** %input.addr, align 8, !dbg !8848
  %arrayidx2 = getelementptr inbounds i16, i16* %4, i64 %idxprom1, !dbg !8848
  %5 = load i16, i16* %arrayidx2, align 2, !dbg !8848
  %conv = sext i16 %5 to i32, !dbg !8848
  %6 = load i32, i32* %i, align 4, !dbg !8849
  %mul3 = mul nsw i32 4, %6, !dbg !8850
  %add4 = add nsw i32 %mul3, 2, !dbg !8851
  %idxprom5 = sext i32 %add4 to i64, !dbg !8852
  %7 = load i16*, i16** %input.addr, align 8, !dbg !8852
  %arrayidx6 = getelementptr inbounds i16, i16* %7, i64 %idxprom5, !dbg !8852
  %8 = load i16, i16* %arrayidx6, align 2, !dbg !8852
  %conv7 = sext i16 %8 to i32, !dbg !8852
  %add8 = add nsw i32 %conv, %conv7, !dbg !8853
  %mul9 = mul nsw i32 13, %add8, !dbg !8854
  store i32 %mul9, i32* %z0, align 4, !dbg !8844
  call void @llvm.dbg.declare(metadata i32* %z1, metadata !8855, metadata !1727), !dbg !8856
  %9 = load i32, i32* %i, align 4, !dbg !8857
  %mul10 = mul nsw i32 4, %9, !dbg !8858
  %add11 = add nsw i32 %mul10, 0, !dbg !8859
  %idxprom12 = sext i32 %add11 to i64, !dbg !8860
  %10 = load i16*, i16** %input.addr, align 8, !dbg !8860
  %arrayidx13 = getelementptr inbounds i16, i16* %10, i64 %idxprom12, !dbg !8860
  %11 = load i16, i16* %arrayidx13, align 2, !dbg !8860
  %conv14 = sext i16 %11 to i32, !dbg !8860
  %12 = load i32, i32* %i, align 4, !dbg !8861
  %mul15 = mul nsw i32 4, %12, !dbg !8862
  %add16 = add nsw i32 %mul15, 2, !dbg !8863
  %idxprom17 = sext i32 %add16 to i64, !dbg !8864
  %13 = load i16*, i16** %input.addr, align 8, !dbg !8864
  %arrayidx18 = getelementptr inbounds i16, i16* %13, i64 %idxprom17, !dbg !8864
  %14 = load i16, i16* %arrayidx18, align 2, !dbg !8864
  %conv19 = sext i16 %14 to i32, !dbg !8864
  %sub = sub nsw i32 %conv14, %conv19, !dbg !8865
  %mul20 = mul nsw i32 13, %sub, !dbg !8866
  store i32 %mul20, i32* %z1, align 4, !dbg !8856
  call void @llvm.dbg.declare(metadata i32* %z2, metadata !8867, metadata !1727), !dbg !8868
  %15 = load i32, i32* %i, align 4, !dbg !8869
  %mul21 = mul nsw i32 4, %15, !dbg !8870
  %add22 = add nsw i32 %mul21, 1, !dbg !8871
  %idxprom23 = sext i32 %add22 to i64, !dbg !8872
  %16 = load i16*, i16** %input.addr, align 8, !dbg !8872
  %arrayidx24 = getelementptr inbounds i16, i16* %16, i64 %idxprom23, !dbg !8872
  %17 = load i16, i16* %arrayidx24, align 2, !dbg !8872
  %conv25 = sext i16 %17 to i32, !dbg !8872
  %mul26 = mul nsw i32 7, %conv25, !dbg !8873
  %18 = load i32, i32* %i, align 4, !dbg !8874
  %mul27 = mul nsw i32 4, %18, !dbg !8875
  %add28 = add nsw i32 %mul27, 3, !dbg !8876
  %idxprom29 = sext i32 %add28 to i64, !dbg !8877
  %19 = load i16*, i16** %input.addr, align 8, !dbg !8877
  %arrayidx30 = getelementptr inbounds i16, i16* %19, i64 %idxprom29, !dbg !8877
  %20 = load i16, i16* %arrayidx30, align 2, !dbg !8877
  %conv31 = sext i16 %20 to i32, !dbg !8877
  %mul32 = mul nsw i32 17, %conv31, !dbg !8878
  %sub33 = sub nsw i32 %mul26, %mul32, !dbg !8879
  store i32 %sub33, i32* %z2, align 4, !dbg !8868
  call void @llvm.dbg.declare(metadata i32* %z3, metadata !8880, metadata !1727), !dbg !8881
  %21 = load i32, i32* %i, align 4, !dbg !8882
  %mul34 = mul nsw i32 4, %21, !dbg !8883
  %add35 = add nsw i32 %mul34, 1, !dbg !8884
  %idxprom36 = sext i32 %add35 to i64, !dbg !8885
  %22 = load i16*, i16** %input.addr, align 8, !dbg !8885
  %arrayidx37 = getelementptr inbounds i16, i16* %22, i64 %idxprom36, !dbg !8885
  %23 = load i16, i16* %arrayidx37, align 2, !dbg !8885
  %conv38 = sext i16 %23 to i32, !dbg !8885
  %mul39 = mul nsw i32 17, %conv38, !dbg !8886
  %24 = load i32, i32* %i, align 4, !dbg !8887
  %mul40 = mul nsw i32 4, %24, !dbg !8888
  %add41 = add nsw i32 %mul40, 3, !dbg !8889
  %idxprom42 = sext i32 %add41 to i64, !dbg !8890
  %25 = load i16*, i16** %input.addr, align 8, !dbg !8890
  %arrayidx43 = getelementptr inbounds i16, i16* %25, i64 %idxprom42, !dbg !8890
  %26 = load i16, i16* %arrayidx43, align 2, !dbg !8890
  %conv44 = sext i16 %26 to i32, !dbg !8890
  %mul45 = mul nsw i32 7, %conv44, !dbg !8891
  %add46 = add nsw i32 %mul39, %mul45, !dbg !8892
  store i32 %add46, i32* %z3, align 4, !dbg !8881
  %27 = load i32, i32* %z0, align 4, !dbg !8893
  %28 = load i32, i32* %z3, align 4, !dbg !8894
  %add47 = add nsw i32 %27, %28, !dbg !8895
  %29 = load i32, i32* %i, align 4, !dbg !8896
  %mul48 = mul nsw i32 4, %29, !dbg !8897
  %add49 = add nsw i32 %mul48, 0, !dbg !8898
  %idxprom50 = sext i32 %add49 to i64, !dbg !8899
  %arrayidx51 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom50, !dbg !8899
  store i32 %add47, i32* %arrayidx51, align 4, !dbg !8900
  %30 = load i32, i32* %z1, align 4, !dbg !8901
  %31 = load i32, i32* %z2, align 4, !dbg !8902
  %add52 = add nsw i32 %30, %31, !dbg !8903
  %32 = load i32, i32* %i, align 4, !dbg !8904
  %mul53 = mul nsw i32 4, %32, !dbg !8905
  %add54 = add nsw i32 %mul53, 1, !dbg !8906
  %idxprom55 = sext i32 %add54 to i64, !dbg !8907
  %arrayidx56 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom55, !dbg !8907
  store i32 %add52, i32* %arrayidx56, align 4, !dbg !8908
  %33 = load i32, i32* %z1, align 4, !dbg !8909
  %34 = load i32, i32* %z2, align 4, !dbg !8910
  %sub57 = sub nsw i32 %33, %34, !dbg !8911
  %35 = load i32, i32* %i, align 4, !dbg !8912
  %mul58 = mul nsw i32 4, %35, !dbg !8913
  %add59 = add nsw i32 %mul58, 2, !dbg !8914
  %idxprom60 = sext i32 %add59 to i64, !dbg !8915
  %arrayidx61 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom60, !dbg !8915
  store i32 %sub57, i32* %arrayidx61, align 4, !dbg !8916
  %36 = load i32, i32* %z0, align 4, !dbg !8917
  %37 = load i32, i32* %z3, align 4, !dbg !8918
  %sub62 = sub nsw i32 %36, %37, !dbg !8919
  %38 = load i32, i32* %i, align 4, !dbg !8920
  %mul63 = mul nsw i32 4, %38, !dbg !8921
  %add64 = add nsw i32 %mul63, 3, !dbg !8922
  %idxprom65 = sext i32 %add64 to i64, !dbg !8923
  %arrayidx66 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom65, !dbg !8923
  store i32 %sub62, i32* %arrayidx66, align 4, !dbg !8924
  br label %for.inc, !dbg !8925

for.inc:                                          ; preds = %for.body
  %39 = load i32, i32* %i, align 4, !dbg !8926
  %inc = add nsw i32 %39, 1, !dbg !8926
  store i32 %inc, i32* %i, align 4, !dbg !8926
  br label %for.cond, !dbg !8928, !llvm.loop !8929

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !8931
  br label %for.cond67, !dbg !8933

for.cond67:                                       ; preds = %for.inc143, %for.end
  %40 = load i32, i32* %i, align 4, !dbg !8934
  %cmp68 = icmp slt i32 %40, 4, !dbg !8937
  br i1 %cmp68, label %for.body70, label %for.end145, !dbg !8938

for.body70:                                       ; preds = %for.cond67
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !8939, metadata !1727), !dbg !8941
  %41 = load i32, i32* %i, align 4, !dbg !8942
  %idxprom71 = sext i32 %41 to i64, !dbg !8943
  %arrayidx72 = getelementptr inbounds [4 x i8], [4 x i8]* @svq3_luma_dc_dequant_idct_c.x_offset, i64 0, i64 %idxprom71, !dbg !8943
  %42 = load i8, i8* %arrayidx72, align 1, !dbg !8943
  %conv73 = zext i8 %42 to i32, !dbg !8943
  store i32 %conv73, i32* %offset, align 4, !dbg !8941
  call void @llvm.dbg.declare(metadata i32* %z074, metadata !8944, metadata !1727), !dbg !8945
  %43 = load i32, i32* %i, align 4, !dbg !8946
  %add75 = add nsw i32 0, %43, !dbg !8947
  %idxprom76 = sext i32 %add75 to i64, !dbg !8948
  %arrayidx77 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom76, !dbg !8948
  %44 = load i32, i32* %arrayidx77, align 4, !dbg !8948
  %45 = load i32, i32* %i, align 4, !dbg !8949
  %add78 = add nsw i32 8, %45, !dbg !8950
  %idxprom79 = sext i32 %add78 to i64, !dbg !8951
  %arrayidx80 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom79, !dbg !8951
  %46 = load i32, i32* %arrayidx80, align 4, !dbg !8951
  %add81 = add nsw i32 %44, %46, !dbg !8952
  %mul82 = mul nsw i32 13, %add81, !dbg !8953
  store i32 %mul82, i32* %z074, align 4, !dbg !8945
  call void @llvm.dbg.declare(metadata i32* %z183, metadata !8954, metadata !1727), !dbg !8955
  %47 = load i32, i32* %i, align 4, !dbg !8956
  %add84 = add nsw i32 0, %47, !dbg !8957
  %idxprom85 = sext i32 %add84 to i64, !dbg !8958
  %arrayidx86 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom85, !dbg !8958
  %48 = load i32, i32* %arrayidx86, align 4, !dbg !8958
  %49 = load i32, i32* %i, align 4, !dbg !8959
  %add87 = add nsw i32 8, %49, !dbg !8960
  %idxprom88 = sext i32 %add87 to i64, !dbg !8961
  %arrayidx89 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom88, !dbg !8961
  %50 = load i32, i32* %arrayidx89, align 4, !dbg !8961
  %sub90 = sub nsw i32 %48, %50, !dbg !8962
  %mul91 = mul nsw i32 13, %sub90, !dbg !8963
  store i32 %mul91, i32* %z183, align 4, !dbg !8955
  call void @llvm.dbg.declare(metadata i32* %z292, metadata !8964, metadata !1727), !dbg !8965
  %51 = load i32, i32* %i, align 4, !dbg !8966
  %add93 = add nsw i32 4, %51, !dbg !8967
  %idxprom94 = sext i32 %add93 to i64, !dbg !8968
  %arrayidx95 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom94, !dbg !8968
  %52 = load i32, i32* %arrayidx95, align 4, !dbg !8968
  %mul96 = mul nsw i32 7, %52, !dbg !8969
  %53 = load i32, i32* %i, align 4, !dbg !8970
  %add97 = add nsw i32 12, %53, !dbg !8971
  %idxprom98 = sext i32 %add97 to i64, !dbg !8972
  %arrayidx99 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom98, !dbg !8972
  %54 = load i32, i32* %arrayidx99, align 4, !dbg !8972
  %mul100 = mul nsw i32 17, %54, !dbg !8973
  %sub101 = sub nsw i32 %mul96, %mul100, !dbg !8974
  store i32 %sub101, i32* %z292, align 4, !dbg !8965
  call void @llvm.dbg.declare(metadata i32* %z3102, metadata !8975, metadata !1727), !dbg !8976
  %55 = load i32, i32* %i, align 4, !dbg !8977
  %add103 = add nsw i32 4, %55, !dbg !8978
  %idxprom104 = sext i32 %add103 to i64, !dbg !8979
  %arrayidx105 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom104, !dbg !8979
  %56 = load i32, i32* %arrayidx105, align 4, !dbg !8979
  %mul106 = mul nsw i32 17, %56, !dbg !8980
  %57 = load i32, i32* %i, align 4, !dbg !8981
  %add107 = add nsw i32 12, %57, !dbg !8982
  %idxprom108 = sext i32 %add107 to i64, !dbg !8983
  %arrayidx109 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom108, !dbg !8983
  %58 = load i32, i32* %arrayidx109, align 4, !dbg !8983
  %mul110 = mul nsw i32 7, %58, !dbg !8984
  %add111 = add nsw i32 %mul106, %mul110, !dbg !8985
  store i32 %add111, i32* %z3102, align 4, !dbg !8976
  %59 = load i32, i32* %z074, align 4, !dbg !8986
  %60 = load i32, i32* %z3102, align 4, !dbg !8987
  %add112 = add nsw i32 %59, %60, !dbg !8988
  %61 = load i32, i32* %qmul, align 4, !dbg !8989
  %mul113 = mul i32 %add112, %61, !dbg !8990
  %add114 = add i32 %mul113, 524288, !dbg !8991
  %shr = ashr i32 %add114, 20, !dbg !8992
  %conv115 = trunc i32 %shr to i16, !dbg !8993
  %62 = load i32, i32* %offset, align 4, !dbg !8994
  %add116 = add nsw i32 0, %62, !dbg !8995
  %idxprom117 = sext i32 %add116 to i64, !dbg !8996
  %63 = load i16*, i16** %output.addr, align 8, !dbg !8996
  %arrayidx118 = getelementptr inbounds i16, i16* %63, i64 %idxprom117, !dbg !8996
  store i16 %conv115, i16* %arrayidx118, align 2, !dbg !8997
  %64 = load i32, i32* %z183, align 4, !dbg !8998
  %65 = load i32, i32* %z292, align 4, !dbg !8999
  %add119 = add nsw i32 %64, %65, !dbg !9000
  %66 = load i32, i32* %qmul, align 4, !dbg !9001
  %mul120 = mul i32 %add119, %66, !dbg !9002
  %add121 = add i32 %mul120, 524288, !dbg !9003
  %shr122 = ashr i32 %add121, 20, !dbg !9004
  %conv123 = trunc i32 %shr122 to i16, !dbg !9005
  %67 = load i32, i32* %offset, align 4, !dbg !9006
  %add124 = add nsw i32 32, %67, !dbg !9007
  %idxprom125 = sext i32 %add124 to i64, !dbg !9008
  %68 = load i16*, i16** %output.addr, align 8, !dbg !9008
  %arrayidx126 = getelementptr inbounds i16, i16* %68, i64 %idxprom125, !dbg !9008
  store i16 %conv123, i16* %arrayidx126, align 2, !dbg !9009
  %69 = load i32, i32* %z183, align 4, !dbg !9010
  %70 = load i32, i32* %z292, align 4, !dbg !9011
  %sub127 = sub nsw i32 %69, %70, !dbg !9012
  %71 = load i32, i32* %qmul, align 4, !dbg !9013
  %mul128 = mul i32 %sub127, %71, !dbg !9014
  %add129 = add i32 %mul128, 524288, !dbg !9015
  %shr130 = ashr i32 %add129, 20, !dbg !9016
  %conv131 = trunc i32 %shr130 to i16, !dbg !9017
  %72 = load i32, i32* %offset, align 4, !dbg !9018
  %add132 = add nsw i32 128, %72, !dbg !9019
  %idxprom133 = sext i32 %add132 to i64, !dbg !9020
  %73 = load i16*, i16** %output.addr, align 8, !dbg !9020
  %arrayidx134 = getelementptr inbounds i16, i16* %73, i64 %idxprom133, !dbg !9020
  store i16 %conv131, i16* %arrayidx134, align 2, !dbg !9021
  %74 = load i32, i32* %z074, align 4, !dbg !9022
  %75 = load i32, i32* %z3102, align 4, !dbg !9023
  %sub135 = sub nsw i32 %74, %75, !dbg !9024
  %76 = load i32, i32* %qmul, align 4, !dbg !9025
  %mul136 = mul i32 %sub135, %76, !dbg !9026
  %add137 = add i32 %mul136, 524288, !dbg !9027
  %shr138 = ashr i32 %add137, 20, !dbg !9028
  %conv139 = trunc i32 %shr138 to i16, !dbg !9029
  %77 = load i32, i32* %offset, align 4, !dbg !9030
  %add140 = add nsw i32 160, %77, !dbg !9031
  %idxprom141 = sext i32 %add140 to i64, !dbg !9032
  %78 = load i16*, i16** %output.addr, align 8, !dbg !9032
  %arrayidx142 = getelementptr inbounds i16, i16* %78, i64 %idxprom141, !dbg !9032
  store i16 %conv139, i16* %arrayidx142, align 2, !dbg !9033
  br label %for.inc143, !dbg !9034

for.inc143:                                       ; preds = %for.body70
  %79 = load i32, i32* %i, align 4, !dbg !9035
  %inc144 = add nsw i32 %79, 1, !dbg !9035
  store i32 %inc144, i32* %i, align 4, !dbg !9035
  br label %for.cond67, !dbg !9037, !llvm.loop !9038

for.end145:                                       ; preds = %for.cond67
  ret void, !dbg !9040
}

declare void @av_frame_free(%struct.AVFrame**) #3

declare void @av_freep(i8*) #3

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { inlinehint nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly }
attributes #9 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1718, !1719}
!llvm.ident = !{!1720}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !887, globals: !943)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--svq3.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2 = !{!3, !13, !473, !673, !690, !711, !721, !745, !751, !769, !793, !812, !822, !852, !860, !872, !881}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !4, line: 199, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5 = !{!6, !7, !8, !9, !10, !11, !12}
!6 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!7 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!8 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!9 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!10 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!11 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!12 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !14, line: 215, size: 32, align: 32, elements: !15)
!14 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472}
!16 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!17 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!18 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!19 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!20 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!21 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!22 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!23 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!24 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!25 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!26 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!27 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!28 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!29 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!30 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!31 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!32 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!33 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!34 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!35 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!36 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!37 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!38 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!39 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!40 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!41 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!42 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!43 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!44 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!45 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!46 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!47 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!48 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!49 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!50 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!51 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!52 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!54 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!55 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!56 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!57 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!58 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!59 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!60 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!61 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!62 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!63 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!64 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!65 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!66 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!67 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!68 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!69 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!70 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!71 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!72 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!73 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!74 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!75 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!76 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!77 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!78 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!79 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!80 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!81 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!82 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!83 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!84 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!85 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!86 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!87 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!88 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!89 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!90 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!91 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!94 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!95 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!96 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!97 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!98 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!99 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!100 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!101 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!102 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!103 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!104 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!105 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!106 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!108 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!109 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!110 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!111 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!112 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!113 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!114 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!115 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!116 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!117 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!118 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!119 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!120 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!121 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!122 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!123 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!124 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!125 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!126 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!127 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!128 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!129 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!130 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!131 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!132 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!133 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!134 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!135 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!136 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!137 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!138 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!139 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!140 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!141 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!143 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!144 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!145 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!146 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!147 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!148 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!149 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!150 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!151 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!152 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!153 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!154 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!155 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!156 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!157 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!158 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!159 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!160 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!161 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!162 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!163 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!164 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!166 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!167 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!168 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!169 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!170 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!171 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!172 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!173 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!174 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!175 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!176 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!177 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!178 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!179 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!180 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!181 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!183 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!184 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!185 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!186 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!188 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!189 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!190 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!191 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!192 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!193 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!194 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!195 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!197 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!200 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!201 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!202 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!203 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!204 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!205 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!206 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!207 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!208 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!209 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!210 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!211 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!212 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!213 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!214 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!215 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!216 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!217 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!218 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!219 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!220 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!221 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!222 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!223 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!224 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!225 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!226 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!227 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!228 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!229 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!230 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!231 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!232 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!233 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!234 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!235 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!236 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!237 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!238 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!239 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!240 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!241 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!243 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!244 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!245 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!246 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!247 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!248 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!249 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!250 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!251 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!252 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!254 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!255 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!257 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!258 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!259 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!260 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!261 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!262 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!263 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!265 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!266 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!268 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!269 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!270 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!271 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!273 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!279 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!289 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!290 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!291 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!292 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!293 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!295 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!296 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!297 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!298 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!299 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!300 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!301 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!302 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!303 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!304 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!305 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!306 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!307 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!308 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!309 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!330 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!331 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!332 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!333 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!335 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!336 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!337 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!338 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!339 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!341 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!342 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!343 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!344 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!345 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!346 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!347 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!348 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!349 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!350 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!351 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!352 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!353 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!354 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!355 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!356 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!357 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!358 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!359 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!360 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!361 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!362 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!363 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!364 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!365 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!366 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!367 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!368 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!369 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!370 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!372 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!373 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!375 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!376 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!377 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!379 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!380 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!381 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!382 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!384 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!385 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!386 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!387 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!388 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!389 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!390 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!391 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!392 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!393 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!394 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!395 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!396 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!397 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!398 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!400 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!401 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!402 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!403 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!404 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!405 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!406 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!407 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!408 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!409 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!410 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!411 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!412 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!413 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!414 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!415 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!416 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!417 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!418 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!419 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!420 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!421 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!422 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!423 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!424 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!425 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!426 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!427 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!428 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!429 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!430 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!431 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!432 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!433 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!434 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!435 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!436 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!437 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!438 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!439 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!441 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!442 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!443 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!444 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!445 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!446 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!447 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!449 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!450 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!451 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!452 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!453 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!454 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!455 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!456 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!457 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!458 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!459 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!460 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!461 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!462 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!463 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!465 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!466 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!467 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!468 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!469 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!470 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!471 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!472 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !474, line: 64, size: 32, align: 32, elements: !475)
!474 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!475 = !{!476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672}
!476 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!477 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!478 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!479 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!480 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!481 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!482 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!483 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!484 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!485 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!486 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!487 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!488 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!489 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!490 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!491 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!492 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!493 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!494 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!495 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!496 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!497 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!498 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!499 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!500 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!501 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!502 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!503 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!504 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!505 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!507 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!508 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!509 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!511 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!512 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!513 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!514 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!515 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!516 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!518 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!519 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!520 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!521 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!522 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!523 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!524 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!525 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!526 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!527 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!528 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!531 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!534 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!535 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!536 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!537 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!538 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!541 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!542 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!543 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!544 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!545 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!552 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!553 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!554 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!555 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!556 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!557 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!558 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!560 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!561 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!574 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!575 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!576 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!577 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!578 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!579 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!580 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!581 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!582 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!583 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!584 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!585 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!586 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!587 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!588 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!589 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!590 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!594 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!595 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!596 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!597 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!598 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!599 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!600 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!601 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!602 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!603 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!604 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!605 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!606 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!618 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!619 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!620 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!622 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!623 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!624 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!626 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!627 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!628 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!629 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!630 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!631 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!634 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!638 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!639 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!640 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!641 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!642 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!643 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!644 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!645 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!646 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!647 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!648 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!649 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!650 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!651 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!652 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!653 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!654 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!655 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!656 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!657 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!658 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!659 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!662 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!663 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!664 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!668 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!669 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!670 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!671 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!672 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!673 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !674, line: 58, size: 32, align: 32, elements: !675)
!674 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!675 = !{!676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689}
!676 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!677 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!678 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!679 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!680 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!681 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!682 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!683 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!684 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!685 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!686 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!687 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!688 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!689 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!690 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !691, line: 29, size: 32, align: 32, elements: !692)
!691 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!692 = !{!693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710}
!693 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!694 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!695 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!696 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!697 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!698 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!699 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!700 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!701 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!702 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!703 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!704 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!705 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!706 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!707 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!708 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!709 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!710 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !4, line: 272, size: 32, align: 32, elements: !712)
!712 = !{!713, !714, !715, !716, !717, !718, !719, !720}
!713 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!714 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!715 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!716 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!717 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!718 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!719 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!720 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!721 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !722, line: 48, size: 32, align: 32, elements: !723)
!722 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!723 = !{!724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744}
!724 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!725 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!726 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!727 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!728 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!729 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!730 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!731 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!732 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!733 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!734 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!735 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!736 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!737 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!738 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!739 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!740 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!741 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!742 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!743 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!744 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!745 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !474, line: 516, size: 32, align: 32, elements: !746)
!746 = !{!747, !748, !749, !750}
!747 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!748 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!749 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!750 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!751 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !474, line: 440, size: 32, align: 32, elements: !752)
!752 = !{!753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768}
!753 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!754 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!755 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!756 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!757 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!758 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!759 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!760 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!761 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!762 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!763 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!764 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!765 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!766 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!767 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!768 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!769 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !474, line: 464, size: 32, align: 32, elements: !770)
!770 = !{!771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792}
!771 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!772 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!773 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!774 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!775 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!776 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!777 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!778 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!779 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!780 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!781 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!782 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!783 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!784 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!785 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!786 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!787 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!788 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!789 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!790 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!791 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!792 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!793 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !474, line: 493, size: 32, align: 32, elements: !794)
!794 = !{!795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811}
!795 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!796 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!797 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!798 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!799 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!800 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!801 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!802 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!803 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!804 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!805 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!806 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!807 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!808 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!809 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!810 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!811 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!812 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !474, line: 538, size: 32, align: 32, elements: !813)
!813 = !{!814, !815, !816, !817, !818, !819, !820, !821}
!814 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!815 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!816 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!817 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!818 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!819 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!820 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!821 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!822 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !14, line: 1175, size: 32, align: 32, elements: !823)
!823 = !{!824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851}
!824 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!825 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!826 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!827 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!828 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!829 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!830 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!831 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!832 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!833 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!834 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!835 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!836 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!837 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!838 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!839 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!840 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!841 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!842 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!843 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!844 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!845 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!846 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!847 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!848 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!849 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!850 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!851 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!852 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !14, line: 1534, size: 32, align: 32, elements: !853)
!853 = !{!854, !855, !856, !857, !858, !859}
!854 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!855 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!856 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!857 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!858 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!859 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!860 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !14, line: 810, size: 32, align: 32, elements: !861)
!861 = !{!862, !863, !864, !865, !866, !867, !868, !869, !870, !871}
!862 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!863 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!864 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!865 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!866 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!867 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!868 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!869 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!870 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!871 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!872 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !14, line: 798, size: 32, align: 32, elements: !873)
!873 = !{!874, !875, !876, !877, !878, !879, !880}
!874 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!875 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!876 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!877 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!878 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!879 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!880 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!881 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !14, line: 3865, size: 32, align: 32, elements: !882)
!882 = !{!883, !884, !885, !886}
!883 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!884 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!885 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!886 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!887 = !{!888, !890, !899, !898, !900, !902, !896, !903, !904, !905, !911, !927, !907, !928, !929, !930, !931, !942}
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64, align: 64)
!889 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 64, align: 64)
!891 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !892)
!892 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !893, line: 221, size: 32, align: 8, elements: !894)
!893 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!894 = !{!895}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !892, file: !893, line: 221, baseType: !896, size: 32, align: 32)
!896 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !897, line: 51, baseType: !898)
!897 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!898 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!899 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!900 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !897, line: 55, baseType: !901)
!901 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!902 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !897, line: 48, baseType: !889)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64, align: 64)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64, align: 64)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 64, align: 64)
!906 = !DICompositeType(tag: DW_TAG_array_type, baseType: !907, size: 32, align: 16, elements: !909)
!907 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !897, line: 37, baseType: !908)
!908 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!909 = !{!910}
!910 = !DISubrange(count: 2)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64, align: 64)
!912 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !913)
!913 = !DIDerivedType(tag: DW_TAG_typedef, name: "av_alias32", file: !893, line: 41, baseType: !914)
!914 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !893, line: 36, size: 32, align: 32, elements: !915)
!915 = !{!916, !917, !921, !925}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "u32", scope: !914, file: !893, line: 37, baseType: !896, size: 32, align: 32)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "u16", scope: !914, file: !893, line: 38, baseType: !918, size: 32, align: 16)
!918 = !DICompositeType(tag: DW_TAG_array_type, baseType: !919, size: 32, align: 16, elements: !909)
!919 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !897, line: 49, baseType: !920)
!920 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "u8", scope: !914, file: !893, line: 39, baseType: !922, size: 32, align: 8)
!922 = !DICompositeType(tag: DW_TAG_array_type, baseType: !902, size: 32, align: 8, elements: !923)
!923 = !{!924}
!924 = !DISubrange(count: 4)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "f32", scope: !914, file: !893, line: 40, baseType: !926, size: 32, align: 32)
!926 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 64, align: 64)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 64, align: 64)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64, align: 64)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 64, align: 64)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64, align: 64)
!932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "v", scope: !934, file: !933, line: 85, size: 128, align: 64, elements: !939)
!933 = !DIFile(filename: "./libavutil/x86/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!934 = distinct !DISubprogram(name: "AV_ZERO128", scope: !933, file: !933, line: 83, type: !935, isLocal: true, isDefinition: true, scopeLine: 84, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!935 = !DISubroutineType(types: !936)
!936 = !{null, !937}
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!938 = !{}
!939 = !{!940}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !932, file: !933, line: 85, baseType: !941, size: 128, align: 64)
!941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !900, size: 128, align: 64, elements: !909)
!942 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !897, line: 38, baseType: !899)
!943 = !{!944, !1663, !1668, !1672, !1678, !1695, !1699, !1700, !1708, !1713}
!944 = distinct !DIGlobalVariable(name: "ff_svq3_decoder", scope: !0, file: !945, line: 1642, type: !946, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_svq3_decoder)
!945 = !DIFile(filename: "libavcodec/svq3.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!946 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !14, line: 3610, baseType: !947)
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !14, line: 3468, size: 1984, align: 64, elements: !948)
!948 = !{!949, !953, !954, !955, !956, !957, !966, !969, !972, !975, !978, !979, !1020, !1028, !1029, !1030, !1032, !1578, !1584, !1592, !1596, !1597, !1634, !1638, !1642, !1643, !1647, !1651, !1652, !1656, !1657, !1658}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !947, file: !14, line: 3475, baseType: !950, size: 64, align: 64)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64, align: 64)
!951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !952)
!952 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !947, file: !14, line: 3480, baseType: !950, size: 64, align: 64, offset: 64)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !947, file: !14, line: 3481, baseType: !3, size: 32, align: 32, offset: 128)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !947, file: !14, line: 3482, baseType: !13, size: 32, align: 32, offset: 160)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !947, file: !14, line: 3487, baseType: !899, size: 32, align: 32, offset: 192)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !947, file: !14, line: 3488, baseType: !958, size: 64, align: 64, offset: 256)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64, align: 64)
!959 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !960)
!960 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !961, line: 61, baseType: !962)
!961 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !961, line: 58, size: 64, align: 32, elements: !963)
!963 = !{!964, !965}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !962, file: !961, line: 59, baseType: !899, size: 32, align: 32)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !962, file: !961, line: 60, baseType: !899, size: 32, align: 32, offset: 32)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !947, file: !14, line: 3489, baseType: !967, size: 64, align: 64, offset: 320)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 64, align: 64)
!968 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !947, file: !14, line: 3490, baseType: !970, size: 64, align: 64, offset: 384)
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 64, align: 64)
!971 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !899)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !947, file: !14, line: 3491, baseType: !973, size: 64, align: 64, offset: 448)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64, align: 64)
!974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !947, file: !14, line: 3492, baseType: !976, size: 64, align: 64, offset: 512)
!976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 64, align: 64)
!977 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !900)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !947, file: !14, line: 3493, baseType: !902, size: 8, align: 8, offset: 576)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !947, file: !14, line: 3494, baseType: !980, size: 64, align: 64, offset: 640)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64, align: 64)
!981 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !982)
!982 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !691, line: 143, baseType: !983)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !691, line: 67, size: 640, align: 64, elements: !984)
!984 = !{!985, !986, !990, !994, !995, !996, !997, !1001, !1007, !1009, !1013}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !983, file: !691, line: 72, baseType: !950, size: 64, align: 64)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !983, file: !691, line: 78, baseType: !987, size: 64, align: 64, offset: 64)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64, align: 64)
!988 = !DISubroutineType(types: !989)
!989 = !{!950, !937}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !983, file: !691, line: 85, baseType: !991, size: 64, align: 64, offset: 128)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64, align: 64)
!992 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !993)
!993 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !691, line: 85, flags: DIFlagFwdDecl)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !983, file: !691, line: 93, baseType: !899, size: 32, align: 32, offset: 192)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !983, file: !691, line: 99, baseType: !899, size: 32, align: 32, offset: 224)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !983, file: !691, line: 108, baseType: !899, size: 32, align: 32, offset: 256)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !983, file: !691, line: 113, baseType: !998, size: 64, align: 64, offset: 320)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64, align: 64)
!999 = !DISubroutineType(types: !1000)
!1000 = !{!937, !937, !937}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !983, file: !691, line: 123, baseType: !1002, size: 64, align: 64, offset: 384)
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 64, align: 64)
!1003 = !DISubroutineType(types: !1004)
!1004 = !{!1005, !1005}
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64, align: 64)
!1006 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !983)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !983, file: !691, line: 130, baseType: !1008, size: 32, align: 32, offset: 448)
!1008 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !691, line: 48, baseType: !690)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !983, file: !691, line: 136, baseType: !1010, size: 64, align: 64, offset: 512)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64, align: 64)
!1011 = !DISubroutineType(types: !1012)
!1012 = !{!1008, !937}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !983, file: !691, line: 142, baseType: !1014, size: 64, align: 64, offset: 576)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64, align: 64)
!1015 = !DISubroutineType(types: !1016)
!1016 = !{!899, !1017, !937, !950, !899}
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64, align: 64)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 64, align: 64)
!1019 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !691, line: 60, flags: DIFlagFwdDecl)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !947, file: !14, line: 3495, baseType: !1021, size: 64, align: 64, offset: 704)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64, align: 64)
!1022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1023)
!1023 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !14, line: 3404, baseType: !1024)
!1024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !14, line: 3401, size: 128, align: 64, elements: !1025)
!1025 = !{!1026, !1027}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1024, file: !14, line: 3402, baseType: !899, size: 32, align: 32)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1024, file: !14, line: 3403, baseType: !950, size: 64, align: 64, offset: 64)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !947, file: !14, line: 3507, baseType: !950, size: 64, align: 64, offset: 768)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !947, file: !14, line: 3516, baseType: !899, size: 32, align: 32, offset: 832)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !947, file: !14, line: 3517, baseType: !1031, size: 64, align: 64, offset: 896)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64, align: 64)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !947, file: !14, line: 3527, baseType: !1033, size: 64, align: 64, offset: 960)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 64, align: 64)
!1034 = !DISubroutineType(types: !1035)
!1035 = !{!899, !1036}
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64, align: 64)
!1037 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !14, line: 3360, baseType: !1038)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !14, line: 1556, size: 8448, align: 64, elements: !1039)
!1039 = !{!1040, !1041, !1042, !1043, !1046, !1047, !1048, !1049, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1328, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1516, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1038, file: !14, line: 1561, baseType: !980, size: 64, align: 64)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1038, file: !14, line: 1562, baseType: !899, size: 32, align: 32, offset: 64)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1038, file: !14, line: 1564, baseType: !3, size: 32, align: 32, offset: 96)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1038, file: !14, line: 1565, baseType: !1044, size: 64, align: 64, offset: 128)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64, align: 64)
!1045 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !947)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1038, file: !14, line: 1566, baseType: !13, size: 32, align: 32, offset: 192)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1038, file: !14, line: 1581, baseType: !898, size: 32, align: 32, offset: 224)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1038, file: !14, line: 1583, baseType: !937, size: 64, align: 64, offset: 256)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1038, file: !14, line: 1591, baseType: !1050, size: 64, align: 64, offset: 320)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64, align: 64)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1052, line: 129, size: 1664, align: 64, elements: !1053)
!1052 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1053 = !{!1054, !1055, !1056, !1057, !1156, !1175, !1176, !1205, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1051, file: !1052, line: 136, baseType: !899, size: 32, align: 32)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1051, file: !1052, line: 151, baseType: !899, size: 32, align: 32, offset: 32)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1051, file: !1052, line: 157, baseType: !899, size: 32, align: 32, offset: 64)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1051, file: !1052, line: 159, baseType: !1058, size: 64, align: 64, offset: 128)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 64, align: 64)
!1059 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !722, line: 646, baseType: !1060)
!1060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !722, line: 268, size: 4288, align: 64, elements: !1061)
!1061 = !{!1062, !1066, !1068, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1108, !1110, !1111, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1144, !1145, !1146, !1147, !1148, !1149, !1152, !1153, !1154, !1155}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1060, file: !722, line: 282, baseType: !1063, size: 512, align: 64)
!1063 = !DICompositeType(tag: DW_TAG_array_type, baseType: !928, size: 512, align: 64, elements: !1064)
!1064 = !{!1065}
!1065 = !DISubrange(count: 8)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1060, file: !722, line: 299, baseType: !1067, size: 256, align: 32, offset: 512)
!1067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !899, size: 256, align: 32, elements: !1064)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1060, file: !722, line: 315, baseType: !1069, size: 64, align: 64, offset: 768)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64, align: 64)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1060, file: !722, line: 326, baseType: !899, size: 32, align: 32, offset: 832)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1060, file: !722, line: 326, baseType: !899, size: 32, align: 32, offset: 864)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1060, file: !722, line: 334, baseType: !899, size: 32, align: 32, offset: 896)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1060, file: !722, line: 341, baseType: !899, size: 32, align: 32, offset: 928)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1060, file: !722, line: 346, baseType: !899, size: 32, align: 32, offset: 960)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1060, file: !722, line: 351, baseType: !711, size: 32, align: 32, offset: 992)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1060, file: !722, line: 356, baseType: !960, size: 64, align: 32, offset: 1024)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1060, file: !722, line: 361, baseType: !1078, size: 64, align: 64, offset: 1088)
!1078 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !897, line: 40, baseType: !1079)
!1079 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1060, file: !722, line: 369, baseType: !1078, size: 64, align: 64, offset: 1152)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1060, file: !722, line: 377, baseType: !1078, size: 64, align: 64, offset: 1216)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1060, file: !722, line: 382, baseType: !899, size: 32, align: 32, offset: 1280)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1060, file: !722, line: 386, baseType: !899, size: 32, align: 32, offset: 1312)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1060, file: !722, line: 391, baseType: !899, size: 32, align: 32, offset: 1344)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1060, file: !722, line: 396, baseType: !937, size: 64, align: 64, offset: 1408)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1060, file: !722, line: 403, baseType: !1087, size: 512, align: 64, offset: 1472)
!1087 = !DICompositeType(tag: DW_TAG_array_type, baseType: !900, size: 512, align: 64, elements: !1064)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1060, file: !722, line: 410, baseType: !899, size: 32, align: 32, offset: 1984)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1060, file: !722, line: 415, baseType: !899, size: 32, align: 32, offset: 2016)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1060, file: !722, line: 420, baseType: !899, size: 32, align: 32, offset: 2048)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1060, file: !722, line: 425, baseType: !899, size: 32, align: 32, offset: 2080)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1060, file: !722, line: 435, baseType: !1078, size: 64, align: 64, offset: 2112)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1060, file: !722, line: 440, baseType: !899, size: 32, align: 32, offset: 2176)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1060, file: !722, line: 445, baseType: !900, size: 64, align: 64, offset: 2240)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1060, file: !722, line: 459, baseType: !1096, size: 512, align: 64, offset: 2304)
!1096 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1097, size: 512, align: 64, elements: !1064)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64, align: 64)
!1098 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1099, line: 94, baseType: !1100)
!1099 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1099, line: 81, size: 192, align: 64, elements: !1101)
!1101 = !{!1102, !1106, !1107}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1100, file: !1099, line: 82, baseType: !1103, size: 64, align: 64)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64, align: 64)
!1104 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1099, line: 73, baseType: !1105)
!1105 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1099, line: 73, flags: DIFlagFwdDecl)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1100, file: !1099, line: 89, baseType: !928, size: 64, align: 64, offset: 64)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1100, file: !1099, line: 93, baseType: !899, size: 32, align: 32, offset: 128)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1060, file: !722, line: 473, baseType: !1109, size: 64, align: 64, offset: 2816)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64, align: 64)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1060, file: !722, line: 477, baseType: !899, size: 32, align: 32, offset: 2880)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1060, file: !722, line: 479, baseType: !1112, size: 64, align: 64, offset: 2944)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 64, align: 64)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 64, align: 64)
!1114 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !722, line: 207, baseType: !1115)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !722, line: 201, size: 320, align: 64, elements: !1116)
!1116 = !{!1117, !1118, !1119, !1120, !1125}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1115, file: !722, line: 202, baseType: !721, size: 32, align: 32)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1115, file: !722, line: 203, baseType: !928, size: 64, align: 64, offset: 64)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1115, file: !722, line: 204, baseType: !899, size: 32, align: 32, offset: 128)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1115, file: !722, line: 205, baseType: !1121, size: 64, align: 64, offset: 192)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64, align: 64)
!1122 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1123, line: 86, baseType: !1124)
!1123 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1124 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1123, line: 86, flags: DIFlagFwdDecl)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1115, file: !722, line: 206, baseType: !1097, size: 64, align: 64, offset: 256)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1060, file: !722, line: 480, baseType: !899, size: 32, align: 32, offset: 3008)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1060, file: !722, line: 505, baseType: !899, size: 32, align: 32, offset: 3040)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1060, file: !722, line: 512, baseType: !745, size: 32, align: 32, offset: 3072)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1060, file: !722, line: 514, baseType: !751, size: 32, align: 32, offset: 3104)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1060, file: !722, line: 516, baseType: !769, size: 32, align: 32, offset: 3136)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1060, file: !722, line: 523, baseType: !793, size: 32, align: 32, offset: 3168)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1060, file: !722, line: 525, baseType: !812, size: 32, align: 32, offset: 3200)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1060, file: !722, line: 532, baseType: !1078, size: 64, align: 64, offset: 3264)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1060, file: !722, line: 539, baseType: !1078, size: 64, align: 64, offset: 3328)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1060, file: !722, line: 547, baseType: !1078, size: 64, align: 64, offset: 3392)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1060, file: !722, line: 554, baseType: !1121, size: 64, align: 64, offset: 3456)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1060, file: !722, line: 563, baseType: !899, size: 32, align: 32, offset: 3520)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1060, file: !722, line: 572, baseType: !899, size: 32, align: 32, offset: 3552)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1060, file: !722, line: 581, baseType: !899, size: 32, align: 32, offset: 3584)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1060, file: !722, line: 588, baseType: !1141, size: 64, align: 64, offset: 3648)
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 64, align: 64)
!1142 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !897, line: 36, baseType: !1143)
!1143 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1060, file: !722, line: 593, baseType: !899, size: 32, align: 32, offset: 3712)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1060, file: !722, line: 596, baseType: !899, size: 32, align: 32, offset: 3744)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1060, file: !722, line: 599, baseType: !1097, size: 64, align: 64, offset: 3776)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1060, file: !722, line: 605, baseType: !1097, size: 64, align: 64, offset: 3840)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1060, file: !722, line: 616, baseType: !1097, size: 64, align: 64, offset: 3904)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1060, file: !722, line: 626, baseType: !1150, size: 64, align: 64, offset: 3968)
!1150 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1151, line: 216, baseType: !901)
!1151 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1060, file: !722, line: 627, baseType: !1150, size: 64, align: 64, offset: 4032)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1060, file: !722, line: 628, baseType: !1150, size: 64, align: 64, offset: 4096)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1060, file: !722, line: 629, baseType: !1150, size: 64, align: 64, offset: 4160)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1060, file: !722, line: 645, baseType: !1097, size: 64, align: 64, offset: 4224)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1051, file: !1052, line: 161, baseType: !1157, size: 64, align: 64, offset: 192)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 64, align: 64)
!1158 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1052, line: 117, baseType: !1159)
!1159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1052, line: 100, size: 832, align: 64, elements: !1160)
!1160 = !{!1161, !1166, !1167, !1168, !1169, !1170, !1172, !1173, !1174}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1159, file: !1052, line: 105, baseType: !1162, size: 256, align: 64)
!1162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1163, size: 256, align: 64, elements: !923)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 64, align: 64)
!1164 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1099, line: 238, baseType: !1165)
!1165 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1099, line: 238, flags: DIFlagFwdDecl)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1159, file: !1052, line: 110, baseType: !899, size: 32, align: 32, offset: 256)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1159, file: !1052, line: 111, baseType: !899, size: 32, align: 32, offset: 288)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1159, file: !1052, line: 111, baseType: !899, size: 32, align: 32, offset: 320)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1159, file: !1052, line: 112, baseType: !1067, size: 256, align: 32, offset: 352)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1159, file: !1052, line: 113, baseType: !1171, size: 128, align: 32, offset: 608)
!1171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !899, size: 128, align: 32, elements: !923)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1159, file: !1052, line: 114, baseType: !899, size: 32, align: 32, offset: 736)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1159, file: !1052, line: 115, baseType: !899, size: 32, align: 32, offset: 768)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1159, file: !1052, line: 116, baseType: !899, size: 32, align: 32, offset: 800)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1051, file: !1052, line: 163, baseType: !937, size: 64, align: 64, offset: 256)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1051, file: !1052, line: 165, baseType: !1177, size: 128, align: 64, offset: 320)
!1177 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1052, line: 122, baseType: !1178)
!1178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1052, line: 119, size: 128, align: 64, elements: !1179)
!1179 = !{!1180, !1204}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1178, file: !1052, line: 120, baseType: !1181, size: 64, align: 64)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 64, align: 64)
!1182 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !14, line: 1499, baseType: !1183)
!1183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !14, line: 1445, size: 704, align: 64, elements: !1184)
!1184 = !{!1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1200, !1201, !1202, !1203}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1183, file: !14, line: 1451, baseType: !1097, size: 64, align: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1183, file: !14, line: 1461, baseType: !1078, size: 64, align: 64, offset: 64)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1183, file: !14, line: 1467, baseType: !1078, size: 64, align: 64, offset: 128)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1183, file: !14, line: 1468, baseType: !928, size: 64, align: 64, offset: 192)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1183, file: !14, line: 1469, baseType: !899, size: 32, align: 32, offset: 256)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1183, file: !14, line: 1470, baseType: !899, size: 32, align: 32, offset: 288)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1183, file: !14, line: 1474, baseType: !899, size: 32, align: 32, offset: 320)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1183, file: !14, line: 1479, baseType: !1193, size: 64, align: 64, offset: 384)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 64, align: 64)
!1194 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !14, line: 1415, baseType: !1195)
!1195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !14, line: 1411, size: 128, align: 64, elements: !1196)
!1196 = !{!1197, !1198, !1199}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1195, file: !14, line: 1412, baseType: !928, size: 64, align: 64)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1195, file: !14, line: 1413, baseType: !899, size: 32, align: 32, offset: 64)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1195, file: !14, line: 1414, baseType: !822, size: 32, align: 32, offset: 96)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1183, file: !14, line: 1480, baseType: !899, size: 32, align: 32, offset: 448)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1183, file: !14, line: 1486, baseType: !1078, size: 64, align: 64, offset: 512)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1183, file: !14, line: 1488, baseType: !1078, size: 64, align: 64, offset: 576)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1183, file: !14, line: 1497, baseType: !1078, size: 64, align: 64, offset: 640)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1178, file: !1052, line: 121, baseType: !1058, size: 64, align: 64, offset: 64)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1051, file: !1052, line: 166, baseType: !1206, size: 128, align: 64, offset: 448)
!1206 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1052, line: 127, baseType: !1207)
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1052, line: 124, size: 128, align: 64, elements: !1208)
!1208 = !{!1209, !1282}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1207, file: !1052, line: 125, baseType: !1210, size: 64, align: 64)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 64, align: 64)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 64, align: 64)
!1212 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !14, line: 5794, baseType: !1213)
!1213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !14, line: 5747, size: 512, align: 64, elements: !1214)
!1214 = !{!1215, !1216, !1240, !1244, !1245, !1279, !1280, !1281}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1213, file: !14, line: 5751, baseType: !980, size: 64, align: 64)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1213, file: !14, line: 5756, baseType: !1217, size: 64, align: 64, offset: 64)
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 64, align: 64)
!1218 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1219)
!1219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !14, line: 5796, size: 512, align: 64, elements: !1220)
!1220 = !{!1221, !1222, !1225, !1226, !1227, !1231, !1235, !1239}
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1219, file: !14, line: 5797, baseType: !950, size: 64, align: 64)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1219, file: !14, line: 5804, baseType: !1223, size: 64, align: 64, offset: 64)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 64, align: 64)
!1224 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1219, file: !14, line: 5815, baseType: !980, size: 64, align: 64, offset: 128)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1219, file: !14, line: 5825, baseType: !899, size: 32, align: 32, offset: 192)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1219, file: !14, line: 5826, baseType: !1228, size: 64, align: 64, offset: 256)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 64, align: 64)
!1229 = !DISubroutineType(types: !1230)
!1230 = !{!899, !1211}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1219, file: !14, line: 5827, baseType: !1232, size: 64, align: 64, offset: 320)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 64, align: 64)
!1233 = !DISubroutineType(types: !1234)
!1234 = !{!899, !1211, !1181}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1219, file: !14, line: 5828, baseType: !1236, size: 64, align: 64, offset: 384)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 64, align: 64)
!1237 = !DISubroutineType(types: !1238)
!1238 = !{null, !1211}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1219, file: !14, line: 5829, baseType: !1236, size: 64, align: 64, offset: 448)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1213, file: !14, line: 5762, baseType: !1241, size: 64, align: 64, offset: 128)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 64, align: 64)
!1242 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !14, line: 5735, baseType: !1243)
!1243 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !14, line: 5735, flags: DIFlagFwdDecl)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1213, file: !14, line: 5768, baseType: !937, size: 64, align: 64, offset: 192)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1213, file: !14, line: 5775, baseType: !1246, size: 64, align: 64, offset: 256)
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 64, align: 64)
!1247 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !14, line: 4085, baseType: !1248)
!1248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !14, line: 3936, size: 1152, align: 64, elements: !1249)
!1249 = !{!1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1248, file: !14, line: 3940, baseType: !3, size: 32, align: 32)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1248, file: !14, line: 3944, baseType: !13, size: 32, align: 32, offset: 32)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1248, file: !14, line: 3948, baseType: !896, size: 32, align: 32, offset: 64)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1248, file: !14, line: 3958, baseType: !928, size: 64, align: 64, offset: 128)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1248, file: !14, line: 3962, baseType: !899, size: 32, align: 32, offset: 192)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1248, file: !14, line: 3968, baseType: !899, size: 32, align: 32, offset: 224)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1248, file: !14, line: 3973, baseType: !1078, size: 64, align: 64, offset: 256)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1248, file: !14, line: 3986, baseType: !899, size: 32, align: 32, offset: 320)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1248, file: !14, line: 3999, baseType: !899, size: 32, align: 32, offset: 352)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1248, file: !14, line: 4004, baseType: !899, size: 32, align: 32, offset: 384)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1248, file: !14, line: 4005, baseType: !899, size: 32, align: 32, offset: 416)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1248, file: !14, line: 4010, baseType: !899, size: 32, align: 32, offset: 448)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1248, file: !14, line: 4011, baseType: !899, size: 32, align: 32, offset: 480)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1248, file: !14, line: 4020, baseType: !960, size: 64, align: 32, offset: 512)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1248, file: !14, line: 4025, baseType: !852, size: 32, align: 32, offset: 576)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1248, file: !14, line: 4030, baseType: !745, size: 32, align: 32, offset: 608)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1248, file: !14, line: 4031, baseType: !751, size: 32, align: 32, offset: 640)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1248, file: !14, line: 4032, baseType: !769, size: 32, align: 32, offset: 672)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1248, file: !14, line: 4033, baseType: !793, size: 32, align: 32, offset: 704)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1248, file: !14, line: 4034, baseType: !812, size: 32, align: 32, offset: 736)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1248, file: !14, line: 4039, baseType: !899, size: 32, align: 32, offset: 768)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1248, file: !14, line: 4046, baseType: !900, size: 64, align: 64, offset: 832)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1248, file: !14, line: 4050, baseType: !899, size: 32, align: 32, offset: 896)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1248, file: !14, line: 4054, baseType: !899, size: 32, align: 32, offset: 928)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1248, file: !14, line: 4061, baseType: !899, size: 32, align: 32, offset: 960)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1248, file: !14, line: 4065, baseType: !899, size: 32, align: 32, offset: 992)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1248, file: !14, line: 4073, baseType: !899, size: 32, align: 32, offset: 1024)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1248, file: !14, line: 4080, baseType: !899, size: 32, align: 32, offset: 1056)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1248, file: !14, line: 4084, baseType: !899, size: 32, align: 32, offset: 1088)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1213, file: !14, line: 5781, baseType: !1246, size: 64, align: 64, offset: 320)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1213, file: !14, line: 5787, baseType: !960, size: 64, align: 32, offset: 384)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1213, file: !14, line: 5793, baseType: !960, size: 64, align: 32, offset: 448)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1207, file: !1052, line: 126, baseType: !899, size: 32, align: 32, offset: 64)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1051, file: !1052, line: 172, baseType: !1181, size: 64, align: 64, offset: 576)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1051, file: !1052, line: 177, baseType: !928, size: 64, align: 64, offset: 640)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1051, file: !1052, line: 178, baseType: !898, size: 32, align: 32, offset: 704)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1051, file: !1052, line: 180, baseType: !937, size: 64, align: 64, offset: 768)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1051, file: !1052, line: 185, baseType: !899, size: 32, align: 32, offset: 832)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1051, file: !1052, line: 190, baseType: !937, size: 64, align: 64, offset: 896)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1051, file: !1052, line: 195, baseType: !899, size: 32, align: 32, offset: 960)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1051, file: !1052, line: 200, baseType: !1181, size: 64, align: 64, offset: 1024)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1051, file: !1052, line: 201, baseType: !899, size: 32, align: 32, offset: 1088)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1051, file: !1052, line: 202, baseType: !1058, size: 64, align: 64, offset: 1152)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1051, file: !1052, line: 203, baseType: !899, size: 32, align: 32, offset: 1216)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1051, file: !1052, line: 205, baseType: !899, size: 32, align: 32, offset: 1248)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1051, file: !1052, line: 206, baseType: !899, size: 32, align: 32, offset: 1280)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1051, file: !1052, line: 209, baseType: !1150, size: 64, align: 64, offset: 1344)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1051, file: !1052, line: 212, baseType: !1150, size: 64, align: 64, offset: 1408)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1051, file: !1052, line: 213, baseType: !1058, size: 64, align: 64, offset: 1472)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1051, file: !1052, line: 215, baseType: !899, size: 32, align: 32, offset: 1536)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1051, file: !1052, line: 217, baseType: !899, size: 32, align: 32, offset: 1568)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1051, file: !1052, line: 220, baseType: !899, size: 32, align: 32, offset: 1600)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1038, file: !14, line: 1598, baseType: !937, size: 64, align: 64, offset: 384)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1038, file: !14, line: 1606, baseType: !1078, size: 64, align: 64, offset: 448)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1038, file: !14, line: 1614, baseType: !899, size: 32, align: 32, offset: 512)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1038, file: !14, line: 1622, baseType: !899, size: 32, align: 32, offset: 544)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1038, file: !14, line: 1628, baseType: !899, size: 32, align: 32, offset: 576)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1038, file: !14, line: 1636, baseType: !899, size: 32, align: 32, offset: 608)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1038, file: !14, line: 1643, baseType: !899, size: 32, align: 32, offset: 640)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1038, file: !14, line: 1657, baseType: !928, size: 64, align: 64, offset: 704)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1038, file: !14, line: 1658, baseType: !899, size: 32, align: 32, offset: 768)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1038, file: !14, line: 1679, baseType: !960, size: 64, align: 32, offset: 800)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1038, file: !14, line: 1688, baseType: !899, size: 32, align: 32, offset: 864)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1038, file: !14, line: 1712, baseType: !899, size: 32, align: 32, offset: 896)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1038, file: !14, line: 1729, baseType: !899, size: 32, align: 32, offset: 928)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1038, file: !14, line: 1729, baseType: !899, size: 32, align: 32, offset: 960)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1038, file: !14, line: 1744, baseType: !899, size: 32, align: 32, offset: 992)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1038, file: !14, line: 1744, baseType: !899, size: 32, align: 32, offset: 1024)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1038, file: !14, line: 1751, baseType: !899, size: 32, align: 32, offset: 1056)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1038, file: !14, line: 1766, baseType: !473, size: 32, align: 32, offset: 1088)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1038, file: !14, line: 1791, baseType: !1321, size: 64, align: 64, offset: 1152)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 64, align: 64)
!1322 = !DISubroutineType(types: !1323)
!1323 = !{null, !1324, !1325, !1327, !899, !899, !899}
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64, align: 64)
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 64, align: 64)
!1326 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1059)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 64, align: 64)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1038, file: !14, line: 1808, baseType: !1329, size: 64, align: 64, offset: 1216)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64, align: 64)
!1330 = !DISubroutineType(types: !1331)
!1331 = !{!473, !1324, !967}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1038, file: !14, line: 1816, baseType: !899, size: 32, align: 32, offset: 1280)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1038, file: !14, line: 1825, baseType: !926, size: 32, align: 32, offset: 1312)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1038, file: !14, line: 1830, baseType: !899, size: 32, align: 32, offset: 1344)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1038, file: !14, line: 1838, baseType: !926, size: 32, align: 32, offset: 1376)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1038, file: !14, line: 1846, baseType: !899, size: 32, align: 32, offset: 1408)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1038, file: !14, line: 1851, baseType: !899, size: 32, align: 32, offset: 1440)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1038, file: !14, line: 1861, baseType: !926, size: 32, align: 32, offset: 1472)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1038, file: !14, line: 1868, baseType: !926, size: 32, align: 32, offset: 1504)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1038, file: !14, line: 1875, baseType: !926, size: 32, align: 32, offset: 1536)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1038, file: !14, line: 1882, baseType: !926, size: 32, align: 32, offset: 1568)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1038, file: !14, line: 1889, baseType: !926, size: 32, align: 32, offset: 1600)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1038, file: !14, line: 1896, baseType: !926, size: 32, align: 32, offset: 1632)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1038, file: !14, line: 1903, baseType: !926, size: 32, align: 32, offset: 1664)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1038, file: !14, line: 1910, baseType: !899, size: 32, align: 32, offset: 1696)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1038, file: !14, line: 1915, baseType: !899, size: 32, align: 32, offset: 1728)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1038, file: !14, line: 1926, baseType: !1327, size: 64, align: 64, offset: 1792)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1038, file: !14, line: 1935, baseType: !960, size: 64, align: 32, offset: 1856)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1038, file: !14, line: 1942, baseType: !899, size: 32, align: 32, offset: 1920)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1038, file: !14, line: 1948, baseType: !899, size: 32, align: 32, offset: 1952)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1038, file: !14, line: 1954, baseType: !899, size: 32, align: 32, offset: 1984)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1038, file: !14, line: 1960, baseType: !899, size: 32, align: 32, offset: 2016)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1038, file: !14, line: 1984, baseType: !899, size: 32, align: 32, offset: 2048)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1038, file: !14, line: 1991, baseType: !899, size: 32, align: 32, offset: 2080)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1038, file: !14, line: 1996, baseType: !899, size: 32, align: 32, offset: 2112)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1038, file: !14, line: 2004, baseType: !899, size: 32, align: 32, offset: 2144)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1038, file: !14, line: 2011, baseType: !899, size: 32, align: 32, offset: 2176)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1038, file: !14, line: 2018, baseType: !899, size: 32, align: 32, offset: 2208)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1038, file: !14, line: 2027, baseType: !899, size: 32, align: 32, offset: 2240)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1038, file: !14, line: 2034, baseType: !899, size: 32, align: 32, offset: 2272)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1038, file: !14, line: 2044, baseType: !899, size: 32, align: 32, offset: 2304)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1038, file: !14, line: 2054, baseType: !929, size: 64, align: 64, offset: 2368)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1038, file: !14, line: 2061, baseType: !929, size: 64, align: 64, offset: 2432)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1038, file: !14, line: 2066, baseType: !899, size: 32, align: 32, offset: 2496)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1038, file: !14, line: 2070, baseType: !899, size: 32, align: 32, offset: 2528)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1038, file: !14, line: 2078, baseType: !899, size: 32, align: 32, offset: 2560)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1038, file: !14, line: 2085, baseType: !899, size: 32, align: 32, offset: 2592)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1038, file: !14, line: 2092, baseType: !899, size: 32, align: 32, offset: 2624)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1038, file: !14, line: 2099, baseType: !899, size: 32, align: 32, offset: 2656)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1038, file: !14, line: 2106, baseType: !899, size: 32, align: 32, offset: 2688)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1038, file: !14, line: 2113, baseType: !899, size: 32, align: 32, offset: 2720)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1038, file: !14, line: 2120, baseType: !899, size: 32, align: 32, offset: 2752)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1038, file: !14, line: 2125, baseType: !899, size: 32, align: 32, offset: 2784)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1038, file: !14, line: 2133, baseType: !899, size: 32, align: 32, offset: 2816)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1038, file: !14, line: 2140, baseType: !899, size: 32, align: 32, offset: 2848)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1038, file: !14, line: 2145, baseType: !899, size: 32, align: 32, offset: 2880)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1038, file: !14, line: 2153, baseType: !899, size: 32, align: 32, offset: 2912)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1038, file: !14, line: 2158, baseType: !899, size: 32, align: 32, offset: 2944)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1038, file: !14, line: 2166, baseType: !751, size: 32, align: 32, offset: 2976)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1038, file: !14, line: 2173, baseType: !769, size: 32, align: 32, offset: 3008)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1038, file: !14, line: 2180, baseType: !793, size: 32, align: 32, offset: 3040)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1038, file: !14, line: 2187, baseType: !745, size: 32, align: 32, offset: 3072)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1038, file: !14, line: 2194, baseType: !812, size: 32, align: 32, offset: 3104)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1038, file: !14, line: 2203, baseType: !899, size: 32, align: 32, offset: 3136)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1038, file: !14, line: 2209, baseType: !852, size: 32, align: 32, offset: 3168)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1038, file: !14, line: 2212, baseType: !899, size: 32, align: 32, offset: 3200)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1038, file: !14, line: 2213, baseType: !899, size: 32, align: 32, offset: 3232)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1038, file: !14, line: 2220, baseType: !673, size: 32, align: 32, offset: 3264)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1038, file: !14, line: 2232, baseType: !899, size: 32, align: 32, offset: 3296)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1038, file: !14, line: 2243, baseType: !899, size: 32, align: 32, offset: 3328)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1038, file: !14, line: 2249, baseType: !899, size: 32, align: 32, offset: 3360)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1038, file: !14, line: 2256, baseType: !899, size: 32, align: 32, offset: 3392)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1038, file: !14, line: 2263, baseType: !900, size: 64, align: 64, offset: 3456)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1038, file: !14, line: 2270, baseType: !900, size: 64, align: 64, offset: 3520)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1038, file: !14, line: 2277, baseType: !860, size: 32, align: 32, offset: 3584)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1038, file: !14, line: 2285, baseType: !673, size: 32, align: 32, offset: 3616)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1038, file: !14, line: 2367, baseType: !1398, size: 64, align: 64, offset: 3648)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 64, align: 64)
!1399 = !DISubroutineType(types: !1400)
!1400 = !{!899, !1324, !1058, !899}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1038, file: !14, line: 2383, baseType: !899, size: 32, align: 32, offset: 3712)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1038, file: !14, line: 2386, baseType: !926, size: 32, align: 32, offset: 3744)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1038, file: !14, line: 2387, baseType: !926, size: 32, align: 32, offset: 3776)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1038, file: !14, line: 2394, baseType: !899, size: 32, align: 32, offset: 3808)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1038, file: !14, line: 2401, baseType: !899, size: 32, align: 32, offset: 3840)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1038, file: !14, line: 2408, baseType: !899, size: 32, align: 32, offset: 3872)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1038, file: !14, line: 2415, baseType: !899, size: 32, align: 32, offset: 3904)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1038, file: !14, line: 2422, baseType: !899, size: 32, align: 32, offset: 3936)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1038, file: !14, line: 2423, baseType: !1410, size: 64, align: 64, offset: 3968)
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 64, align: 64)
!1411 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !14, line: 831, baseType: !1412)
!1412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !14, line: 826, size: 128, align: 32, elements: !1413)
!1413 = !{!1414, !1415, !1416, !1417}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1412, file: !14, line: 827, baseType: !899, size: 32, align: 32)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1412, file: !14, line: 828, baseType: !899, size: 32, align: 32, offset: 32)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1412, file: !14, line: 829, baseType: !899, size: 32, align: 32, offset: 64)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1412, file: !14, line: 830, baseType: !926, size: 32, align: 32, offset: 96)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1038, file: !14, line: 2430, baseType: !1078, size: 64, align: 64, offset: 4032)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1038, file: !14, line: 2437, baseType: !1078, size: 64, align: 64, offset: 4096)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1038, file: !14, line: 2444, baseType: !926, size: 32, align: 32, offset: 4160)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1038, file: !14, line: 2451, baseType: !926, size: 32, align: 32, offset: 4192)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1038, file: !14, line: 2458, baseType: !899, size: 32, align: 32, offset: 4224)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1038, file: !14, line: 2469, baseType: !899, size: 32, align: 32, offset: 4256)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1038, file: !14, line: 2475, baseType: !899, size: 32, align: 32, offset: 4288)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1038, file: !14, line: 2481, baseType: !899, size: 32, align: 32, offset: 4320)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1038, file: !14, line: 2485, baseType: !899, size: 32, align: 32, offset: 4352)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1038, file: !14, line: 2489, baseType: !899, size: 32, align: 32, offset: 4384)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1038, file: !14, line: 2493, baseType: !899, size: 32, align: 32, offset: 4416)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1038, file: !14, line: 2501, baseType: !899, size: 32, align: 32, offset: 4448)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1038, file: !14, line: 2506, baseType: !899, size: 32, align: 32, offset: 4480)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1038, file: !14, line: 2510, baseType: !899, size: 32, align: 32, offset: 4512)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1038, file: !14, line: 2514, baseType: !1078, size: 64, align: 64, offset: 4544)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1038, file: !14, line: 2528, baseType: !1434, size: 64, align: 64, offset: 4608)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64, align: 64)
!1435 = !DISubroutineType(types: !1436)
!1436 = !{null, !1324, !937, !899, !899}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1038, file: !14, line: 2534, baseType: !899, size: 32, align: 32, offset: 4672)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1038, file: !14, line: 2545, baseType: !899, size: 32, align: 32, offset: 4704)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1038, file: !14, line: 2547, baseType: !899, size: 32, align: 32, offset: 4736)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1038, file: !14, line: 2549, baseType: !899, size: 32, align: 32, offset: 4768)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1038, file: !14, line: 2551, baseType: !899, size: 32, align: 32, offset: 4800)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1038, file: !14, line: 2553, baseType: !899, size: 32, align: 32, offset: 4832)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1038, file: !14, line: 2555, baseType: !899, size: 32, align: 32, offset: 4864)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1038, file: !14, line: 2557, baseType: !899, size: 32, align: 32, offset: 4896)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1038, file: !14, line: 2559, baseType: !899, size: 32, align: 32, offset: 4928)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1038, file: !14, line: 2563, baseType: !899, size: 32, align: 32, offset: 4960)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1038, file: !14, line: 2571, baseType: !1448, size: 64, align: 64, offset: 4992)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 64, align: 64)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1038, file: !14, line: 2579, baseType: !1448, size: 64, align: 64, offset: 5056)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1038, file: !14, line: 2586, baseType: !899, size: 32, align: 32, offset: 5120)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1038, file: !14, line: 2615, baseType: !899, size: 32, align: 32, offset: 5152)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1038, file: !14, line: 2627, baseType: !899, size: 32, align: 32, offset: 5184)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1038, file: !14, line: 2637, baseType: !899, size: 32, align: 32, offset: 5216)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1038, file: !14, line: 2681, baseType: !899, size: 32, align: 32, offset: 5248)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1038, file: !14, line: 2709, baseType: !1078, size: 64, align: 64, offset: 5312)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1038, file: !14, line: 2716, baseType: !1457, size: 64, align: 64, offset: 5376)
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 64, align: 64)
!1458 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1459)
!1459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !14, line: 3636, size: 896, align: 64, elements: !1460)
!1460 = !{!1461, !1462, !1463, !1464, !1465, !1466, !1470, !1476, !1480, !1481, !1482, !1483, !1489, !1490, !1491, !1492, !1493}
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1459, file: !14, line: 3642, baseType: !950, size: 64, align: 64)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1459, file: !14, line: 3649, baseType: !3, size: 32, align: 32, offset: 64)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1459, file: !14, line: 3656, baseType: !13, size: 32, align: 32, offset: 96)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1459, file: !14, line: 3663, baseType: !473, size: 32, align: 32, offset: 128)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1459, file: !14, line: 3669, baseType: !899, size: 32, align: 32, offset: 160)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1459, file: !14, line: 3682, baseType: !1467, size: 64, align: 64, offset: 192)
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 64, align: 64)
!1468 = !DISubroutineType(types: !1469)
!1469 = !{!899, !1036, !1058}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1459, file: !14, line: 3698, baseType: !1471, size: 64, align: 64, offset: 256)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 64, align: 64)
!1472 = !DISubroutineType(types: !1473)
!1473 = !{!899, !1036, !1474, !896}
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 64, align: 64)
!1475 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !902)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1459, file: !14, line: 3712, baseType: !1477, size: 64, align: 64, offset: 320)
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 64, align: 64)
!1478 = !DISubroutineType(types: !1479)
!1479 = !{!899, !1036, !899, !1474, !896}
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1459, file: !14, line: 3726, baseType: !1471, size: 64, align: 64, offset: 384)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1459, file: !14, line: 3737, baseType: !1033, size: 64, align: 64, offset: 448)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1459, file: !14, line: 3746, baseType: !899, size: 32, align: 32, offset: 512)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1459, file: !14, line: 3757, baseType: !1484, size: 64, align: 64, offset: 576)
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 64, align: 64)
!1485 = !DISubroutineType(types: !1486)
!1486 = !{null, !1487}
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 64, align: 64)
!1488 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !14, line: 3617, flags: DIFlagFwdDecl)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1459, file: !14, line: 3766, baseType: !1033, size: 64, align: 64, offset: 640)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1459, file: !14, line: 3774, baseType: !1033, size: 64, align: 64, offset: 704)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1459, file: !14, line: 3780, baseType: !899, size: 32, align: 32, offset: 768)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1459, file: !14, line: 3785, baseType: !899, size: 32, align: 32, offset: 800)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1459, file: !14, line: 3795, baseType: !1494, size: 64, align: 64, offset: 832)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64, align: 64)
!1495 = !DISubroutineType(types: !1496)
!1496 = !{!899, !1036, !1097}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1038, file: !14, line: 2728, baseType: !937, size: 64, align: 64, offset: 5440)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1038, file: !14, line: 2735, baseType: !1087, size: 512, align: 64, offset: 5504)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1038, file: !14, line: 2742, baseType: !899, size: 32, align: 32, offset: 6016)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1038, file: !14, line: 2755, baseType: !899, size: 32, align: 32, offset: 6048)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1038, file: !14, line: 2776, baseType: !899, size: 32, align: 32, offset: 6080)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1038, file: !14, line: 2783, baseType: !899, size: 32, align: 32, offset: 6112)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1038, file: !14, line: 2791, baseType: !899, size: 32, align: 32, offset: 6144)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1038, file: !14, line: 2802, baseType: !1058, size: 64, align: 64, offset: 6208)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1038, file: !14, line: 2811, baseType: !899, size: 32, align: 32, offset: 6272)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1038, file: !14, line: 2821, baseType: !899, size: 32, align: 32, offset: 6304)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1038, file: !14, line: 2830, baseType: !899, size: 32, align: 32, offset: 6336)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1038, file: !14, line: 2840, baseType: !899, size: 32, align: 32, offset: 6368)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1038, file: !14, line: 2851, baseType: !1510, size: 64, align: 64, offset: 6400)
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 64, align: 64)
!1511 = !DISubroutineType(types: !1512)
!1512 = !{!899, !1324, !1513, !937, !1327, !899, !899}
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 64, align: 64)
!1514 = !DISubroutineType(types: !1515)
!1515 = !{!899, !1324, !937}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1038, file: !14, line: 2871, baseType: !1517, size: 64, align: 64, offset: 6464)
!1517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1518, size: 64, align: 64)
!1518 = !DISubroutineType(types: !1519)
!1519 = !{!899, !1324, !1520, !937, !1327, !899}
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 64, align: 64)
!1521 = !DISubroutineType(types: !1522)
!1522 = !{!899, !1324, !937, !899, !899}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1038, file: !14, line: 2878, baseType: !899, size: 32, align: 32, offset: 6528)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1038, file: !14, line: 2885, baseType: !899, size: 32, align: 32, offset: 6560)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1038, file: !14, line: 3005, baseType: !899, size: 32, align: 32, offset: 6592)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1038, file: !14, line: 3013, baseType: !872, size: 32, align: 32, offset: 6624)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1038, file: !14, line: 3020, baseType: !872, size: 32, align: 32, offset: 6656)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1038, file: !14, line: 3027, baseType: !872, size: 32, align: 32, offset: 6688)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1038, file: !14, line: 3037, baseType: !928, size: 64, align: 64, offset: 6720)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1038, file: !14, line: 3038, baseType: !899, size: 32, align: 32, offset: 6784)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1038, file: !14, line: 3050, baseType: !900, size: 64, align: 64, offset: 6848)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1038, file: !14, line: 3065, baseType: !899, size: 32, align: 32, offset: 6912)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1038, file: !14, line: 3083, baseType: !899, size: 32, align: 32, offset: 6944)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1038, file: !14, line: 3092, baseType: !960, size: 64, align: 32, offset: 6976)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1038, file: !14, line: 3099, baseType: !473, size: 32, align: 32, offset: 7040)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1038, file: !14, line: 3106, baseType: !960, size: 64, align: 32, offset: 7072)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1038, file: !14, line: 3113, baseType: !1538, size: 64, align: 64, offset: 7168)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 64, align: 64)
!1539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1540)
!1540 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !14, line: 740, baseType: !1541)
!1541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !14, line: 712, size: 384, align: 64, elements: !1542)
!1542 = !{!1543, !1544, !1545, !1546, !1547, !1548, !1551}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1541, file: !14, line: 713, baseType: !13, size: 32, align: 32)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1541, file: !14, line: 714, baseType: !3, size: 32, align: 32, offset: 32)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1541, file: !14, line: 720, baseType: !950, size: 64, align: 64, offset: 64)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1541, file: !14, line: 724, baseType: !950, size: 64, align: 64, offset: 128)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1541, file: !14, line: 728, baseType: !899, size: 32, align: 32, offset: 192)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1541, file: !14, line: 734, baseType: !1549, size: 64, align: 64, offset: 256)
!1549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1550, size: 64, align: 64)
!1550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !950)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1541, file: !14, line: 739, baseType: !1552, size: 64, align: 64, offset: 320)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64, align: 64)
!1553 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1024)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1038, file: !14, line: 3129, baseType: !1078, size: 64, align: 64, offset: 7232)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1038, file: !14, line: 3130, baseType: !1078, size: 64, align: 64, offset: 7296)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1038, file: !14, line: 3131, baseType: !1078, size: 64, align: 64, offset: 7360)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1038, file: !14, line: 3132, baseType: !1078, size: 64, align: 64, offset: 7424)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1038, file: !14, line: 3139, baseType: !1448, size: 64, align: 64, offset: 7488)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1038, file: !14, line: 3147, baseType: !899, size: 32, align: 32, offset: 7552)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1038, file: !14, line: 3165, baseType: !899, size: 32, align: 32, offset: 7584)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1038, file: !14, line: 3172, baseType: !899, size: 32, align: 32, offset: 7616)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1038, file: !14, line: 3180, baseType: !899, size: 32, align: 32, offset: 7648)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1038, file: !14, line: 3191, baseType: !929, size: 64, align: 64, offset: 7680)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1038, file: !14, line: 3199, baseType: !928, size: 64, align: 64, offset: 7744)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1038, file: !14, line: 3207, baseType: !1448, size: 64, align: 64, offset: 7808)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1038, file: !14, line: 3214, baseType: !898, size: 32, align: 32, offset: 7872)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1038, file: !14, line: 3224, baseType: !1193, size: 64, align: 64, offset: 7936)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1038, file: !14, line: 3225, baseType: !899, size: 32, align: 32, offset: 8000)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1038, file: !14, line: 3249, baseType: !1097, size: 64, align: 64, offset: 8064)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1038, file: !14, line: 3256, baseType: !899, size: 32, align: 32, offset: 8128)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1038, file: !14, line: 3271, baseType: !899, size: 32, align: 32, offset: 8160)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1038, file: !14, line: 3279, baseType: !1078, size: 64, align: 64, offset: 8192)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1038, file: !14, line: 3301, baseType: !1097, size: 64, align: 64, offset: 8256)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1038, file: !14, line: 3310, baseType: !899, size: 32, align: 32, offset: 8320)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1038, file: !14, line: 3337, baseType: !899, size: 32, align: 32, offset: 8352)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1038, file: !14, line: 3351, baseType: !899, size: 32, align: 32, offset: 8384)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1038, file: !14, line: 3359, baseType: !899, size: 32, align: 32, offset: 8416)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !947, file: !14, line: 3535, baseType: !1579, size: 64, align: 64, offset: 1024)
!1579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1580, size: 64, align: 64)
!1580 = !DISubroutineType(types: !1581)
!1581 = !{!899, !1036, !1582}
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 64, align: 64)
!1583 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1037)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !947, file: !14, line: 3541, baseType: !1585, size: 64, align: 64, offset: 1088)
!1585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1586, size: 64, align: 64)
!1586 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1587)
!1587 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !14, line: 3461, baseType: !1588)
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1052, line: 223, size: 128, align: 64, elements: !1589)
!1589 = !{!1590, !1591}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1588, file: !1052, line: 224, baseType: !1474, size: 64, align: 64)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1588, file: !1052, line: 225, baseType: !1474, size: 64, align: 64, offset: 64)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !947, file: !14, line: 3549, baseType: !1593, size: 64, align: 64, offset: 1152)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 64, align: 64)
!1594 = !DISubroutineType(types: !1595)
!1595 = !{null, !1031}
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !947, file: !14, line: 3551, baseType: !1033, size: 64, align: 64, offset: 1216)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !947, file: !14, line: 3552, baseType: !1598, size: 64, align: 64, offset: 1280)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 64, align: 64)
!1599 = !DISubroutineType(types: !1600)
!1600 = !{!899, !1036, !928, !899, !1601}
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 64, align: 64)
!1602 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1603)
!1603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !14, line: 3920, size: 256, align: 64, elements: !1604)
!1604 = !{!1605, !1606, !1607, !1608, !1609, !1633}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1603, file: !14, line: 3921, baseType: !919, size: 16, align: 16)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1603, file: !14, line: 3922, baseType: !896, size: 32, align: 32, offset: 32)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1603, file: !14, line: 3923, baseType: !896, size: 32, align: 32, offset: 64)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1603, file: !14, line: 3924, baseType: !898, size: 32, align: 32, offset: 96)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1603, file: !14, line: 3925, baseType: !1610, size: 64, align: 64, offset: 128)
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 64, align: 64)
!1611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 64, align: 64)
!1612 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !14, line: 3918, baseType: !1613)
!1613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !14, line: 3885, size: 1600, align: 64, elements: !1614)
!1614 = !{!1615, !1616, !1617, !1618, !1619, !1620, !1626, !1628, !1629, !1630, !1631, !1632}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1613, file: !14, line: 3886, baseType: !899, size: 32, align: 32)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1613, file: !14, line: 3887, baseType: !899, size: 32, align: 32, offset: 32)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1613, file: !14, line: 3888, baseType: !899, size: 32, align: 32, offset: 64)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1613, file: !14, line: 3889, baseType: !899, size: 32, align: 32, offset: 96)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1613, file: !14, line: 3890, baseType: !899, size: 32, align: 32, offset: 128)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1613, file: !14, line: 3897, baseType: !1621, size: 768, align: 64, offset: 192)
!1621 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !14, line: 3858, baseType: !1622)
!1622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !14, line: 3853, size: 768, align: 64, elements: !1623)
!1623 = !{!1624, !1625}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1622, file: !14, line: 3855, baseType: !1063, size: 512, align: 64)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1622, file: !14, line: 3857, baseType: !1067, size: 256, align: 32, offset: 512)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1613, file: !14, line: 3903, baseType: !1627, size: 256, align: 64, offset: 960)
!1627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !928, size: 256, align: 64, elements: !923)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1613, file: !14, line: 3904, baseType: !1171, size: 128, align: 32, offset: 1216)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1613, file: !14, line: 3906, baseType: !881, size: 32, align: 32, offset: 1344)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1613, file: !14, line: 3908, baseType: !1448, size: 64, align: 64, offset: 1408)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1613, file: !14, line: 3915, baseType: !1448, size: 64, align: 64, offset: 1472)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1613, file: !14, line: 3917, baseType: !899, size: 32, align: 32, offset: 1536)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1603, file: !14, line: 3926, baseType: !1078, size: 64, align: 64, offset: 192)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !947, file: !14, line: 3564, baseType: !1635, size: 64, align: 64, offset: 1344)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64, align: 64)
!1636 = !DISubroutineType(types: !1637)
!1637 = !{!899, !1036, !1181, !1325, !1327}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !947, file: !14, line: 3566, baseType: !1639, size: 64, align: 64, offset: 1408)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 64, align: 64)
!1640 = !DISubroutineType(types: !1641)
!1641 = !{!899, !1036, !937, !1327, !1181}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !947, file: !14, line: 3567, baseType: !1033, size: 64, align: 64, offset: 1472)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !947, file: !14, line: 3576, baseType: !1644, size: 64, align: 64, offset: 1536)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64, align: 64)
!1645 = !DISubroutineType(types: !1646)
!1646 = !{!899, !1036, !1325}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !947, file: !14, line: 3577, baseType: !1648, size: 64, align: 64, offset: 1600)
!1648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 64, align: 64)
!1649 = !DISubroutineType(types: !1650)
!1650 = !{!899, !1036, !1181}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !947, file: !14, line: 3584, baseType: !1467, size: 64, align: 64, offset: 1664)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !947, file: !14, line: 3589, baseType: !1653, size: 64, align: 64, offset: 1728)
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 64, align: 64)
!1654 = !DISubroutineType(types: !1655)
!1655 = !{null, !1036}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !947, file: !14, line: 3594, baseType: !899, size: 32, align: 32, offset: 1792)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !947, file: !14, line: 3600, baseType: !950, size: 64, align: 64, offset: 1856)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !947, file: !14, line: 3609, baseType: !1659, size: 64, align: 64, offset: 1920)
!1659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1660, size: 64, align: 64)
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 64, align: 64)
!1661 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1662)
!1662 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !14, line: 3609, flags: DIFlagFwdDecl)
!1663 = distinct !DIGlobalVariable(name: "scan8", scope: !0, file: !1664, line: 644, type: !1665, isLocal: true, isDefinition: true, variable: [51 x i8]* @scan8)
!1664 = !DIFile(filename: "libavcodec/h264dec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1475, size: 408, align: 8, elements: !1666)
!1666 = !{!1667}
!1667 = !DISubrange(count: 51)
!1668 = distinct !DIGlobalVariable(name: "svq3_pred_0", scope: !0, file: !945, line: 178, type: !1669, isLocal: true, isDefinition: true, variable: [25 x [2 x i8]]* @svq3_pred_0)
!1669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1475, size: 400, align: 8, elements: !1670)
!1670 = !{!1671, !910}
!1671 = !DISubrange(count: 25)
!1672 = distinct !DIGlobalVariable(name: "svq3_pred_1", scope: !0, file: !945, line: 190, type: !1673, isLocal: true, isDefinition: true, variable: [6 x [6 x [5 x i8]]]* @svq3_pred_1)
!1673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1674, size: 1440, align: 8, elements: !1675)
!1674 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1142)
!1675 = !{!1676, !1676, !1677}
!1676 = !DISubrange(count: 6)
!1677 = !DISubrange(count: 5)
!1678 = distinct !DIGlobalVariable(name: "scan_patterns", scope: !1679, file: !945, line: 302, type: !1693, isLocal: true, isDefinition: true, variable: [4 x i8*]* @svq3_decode_block.scan_patterns)
!1679 = distinct !DISubprogram(name: "svq3_decode_block", scope: !945, file: !945, line: 299, type: !1680, isLocal: true, isDefinition: true, scopeLine: 301, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!1680 = !DISubroutineType(types: !1681)
!1681 = !{!899, !1682, !1692, !899, !971}
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 64, align: 64)
!1683 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !1684, line: 70, baseType: !1685)
!1684 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !1684, line: 61, size: 256, align: 64, elements: !1686)
!1686 = !{!1687, !1688, !1689, !1690, !1691}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1685, file: !1684, line: 62, baseType: !1474, size: 64, align: 64)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1685, file: !1684, line: 62, baseType: !1474, size: 64, align: 64, offset: 64)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1685, file: !1684, line: 67, baseType: !899, size: 32, align: 32, offset: 128)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1685, file: !1684, line: 68, baseType: !899, size: 32, align: 32, offset: 160)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !1685, file: !1684, line: 69, baseType: !899, size: 32, align: 32, offset: 192)
!1692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64, align: 64)
!1693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1694, size: 256, align: 64, elements: !923)
!1694 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1474)
!1695 = distinct !DIGlobalVariable(name: "luma_dc_zigzag_scan", scope: !0, file: !945, line: 171, type: !1696, isLocal: true, isDefinition: true, variable: [16 x i8]* @luma_dc_zigzag_scan)
!1696 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1475, size: 128, align: 8, elements: !1697)
!1697 = !{!1698}
!1698 = !DISubrange(count: 16)
!1699 = distinct !DIGlobalVariable(name: "svq3_scan", scope: !0, file: !945, line: 164, type: !1696, isLocal: true, isDefinition: true, variable: [16 x i8]* @svq3_scan)
!1700 = distinct !DIGlobalVariable(name: "svq3_dct_tables", scope: !0, file: !945, line: 208, type: !1701, isLocal: true, isDefinition: true, variable: [2 x [16 x %struct.anon]]* @svq3_dct_tables)
!1701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1702, size: 512, align: 8, elements: !1707)
!1702 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1703)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !945, line: 205, size: 16, align: 8, elements: !1704)
!1704 = !{!1705, !1706}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "run", scope: !1703, file: !945, line: 206, baseType: !902, size: 8, align: 8)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1703, file: !945, line: 207, baseType: !902, size: 8, align: 8, offset: 8)
!1707 = !{!910, !1698}
!1708 = distinct !DIGlobalVariable(name: "x_offset", scope: !1709, file: !945, line: 230, type: !1712, isLocal: true, isDefinition: true, variable: [4 x i8]* @svq3_luma_dc_dequant_idct_c.x_offset)
!1709 = distinct !DISubprogram(name: "svq3_luma_dc_dequant_idct_c", scope: !945, file: !945, line: 224, type: !1710, isLocal: true, isDefinition: true, scopeLine: 225, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!1710 = !DISubroutineType(types: !1711)
!1711 = !{null, !1692, !1692, !899}
!1712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1475, size: 32, align: 8, elements: !923)
!1713 = distinct !DIGlobalVariable(name: "svq3_dequant_coeff", scope: !0, file: !945, line: 215, type: !1714, isLocal: true, isDefinition: true, variable: [32 x i32]* @svq3_dequant_coeff)
!1714 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1715, size: 1024, align: 32, elements: !1716)
!1715 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !896)
!1716 = !{!1717}
!1717 = !DISubrange(count: 32)
!1718 = !{i32 2, !"Dwarf Version", i32 4}
!1719 = !{i32 2, !"Debug Info Version", i32 3}
!1720 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!1721 = distinct !DISubprogram(name: "svq3_decode_init", scope: !945, file: !945, line: 1126, type: !1034, isLocal: true, isDefinition: true, scopeLine: 1127, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!1722 = !DILocalVariable(name: "x", arg: 1, scope: !1723, file: !1724, line: 66, type: !896)
!1723 = distinct !DISubprogram(name: "av_bswap32", scope: !1724, file: !1724, line: 66, type: !1725, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!1724 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1725 = !DISubroutineType(types: !1726)
!1726 = !{!896, !896}
!1727 = !DIExpression()
!1728 = !DILocation(line: 66, column: 98, scope: !1723, inlinedAt: !1729)
!1729 = distinct !DILocation(line: 1187, column: 16, scope: !1730)
!1730 = distinct !DILexicalBlock(scope: !1731, file: !945, line: 1182, column: 23)
!1731 = distinct !DILexicalBlock(scope: !1721, file: !945, line: 1182, column: 9)
!1732 = !DILocalVariable(name: "avctx", arg: 1, scope: !1721, file: !945, line: 1126, type: !1036)
!1733 = !DILocation(line: 1126, column: 67, scope: !1721)
!1734 = !DILocalVariable(name: "s", scope: !1721, file: !945, line: 1128, type: !1735)
!1735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 64, align: 64)
!1736 = !DIDerivedType(tag: DW_TAG_typedef, name: "SVQ3Context", file: !945, line: 148, baseType: !1737)
!1737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SVQ3Context", file: !945, line: 82, size: 91904, align: 128, elements: !1738)
!1738 = !{!1739, !1740, !1819, !1868, !1883, !1895, !1908, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1970, !1973, !1977, !1980, !1984, !1988}
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !1737, file: !945, line: 83, baseType: !1036, size: 64, align: 64)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "h264dsp", scope: !1737, file: !945, line: 85, baseType: !1741, size: 2176, align: 64, offset: 64)
!1741 = !DIDerivedType(tag: DW_TAG_typedef, name: "H264DSPContext", file: !1742, line: 118, baseType: !1743)
!1742 = !DIFile(filename: "libavcodec/h264dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "H264DSPContext", file: !1742, line: 42, size: 2176, align: 64, elements: !1744)
!1744 = !{!1745, !1752, !1758, !1762, !1763, !1764, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1790, !1794, !1795, !1796, !1797, !1801, !1802, !1806, !1807, !1809, !1813, !1814, !1815}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "weight_h264_pixels_tab", scope: !1743, file: !1742, line: 44, baseType: !1746, size: 256, align: 64)
!1746 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1747, size: 256, align: 64, elements: !923)
!1747 = !DIDerivedType(tag: DW_TAG_typedef, name: "h264_weight_func", file: !1742, line: 33, baseType: !1748)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 64, align: 64)
!1749 = !DISubroutineType(types: !1750)
!1750 = !{null, !928, !1751, !899, !899, !899, !899}
!1751 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1151, line: 149, baseType: !1079)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "biweight_h264_pixels_tab", scope: !1743, file: !1742, line: 45, baseType: !1753, size: 256, align: 64, offset: 256)
!1753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1754, size: 256, align: 64, elements: !923)
!1754 = !DIDerivedType(tag: DW_TAG_typedef, name: "h264_biweight_func", file: !1742, line: 35, baseType: !1755)
!1755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1756, size: 64, align: 64)
!1756 = !DISubroutineType(types: !1757)
!1757 = !{null, !928, !928, !1751, !899, !899, !899, !899, !899}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "h264_v_loop_filter_luma", scope: !1743, file: !1742, line: 48, baseType: !1759, size: 64, align: 64, offset: 512)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 64, align: 64)
!1760 = !DISubroutineType(types: !1761)
!1761 = !{null, !928, !899, !899, !899, !1141}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "h264_h_loop_filter_luma", scope: !1743, file: !1742, line: 50, baseType: !1759, size: 64, align: 64, offset: 576)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "h264_h_loop_filter_luma_mbaff", scope: !1743, file: !1742, line: 52, baseType: !1759, size: 64, align: 64, offset: 640)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "h264_v_loop_filter_luma_intra", scope: !1743, file: !1742, line: 55, baseType: !1765, size: 64, align: 64, offset: 704)
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 64, align: 64)
!1766 = !DISubroutineType(types: !1767)
!1767 = !{null, !928, !899, !899, !899}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "h264_h_loop_filter_luma_intra", scope: !1743, file: !1742, line: 57, baseType: !1765, size: 64, align: 64, offset: 768)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "h264_h_loop_filter_luma_mbaff_intra", scope: !1743, file: !1742, line: 59, baseType: !1765, size: 64, align: 64, offset: 832)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "h264_v_loop_filter_chroma", scope: !1743, file: !1742, line: 61, baseType: !1759, size: 64, align: 64, offset: 896)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "h264_h_loop_filter_chroma", scope: !1743, file: !1742, line: 63, baseType: !1759, size: 64, align: 64, offset: 960)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "h264_h_loop_filter_chroma_mbaff", scope: !1743, file: !1742, line: 65, baseType: !1759, size: 64, align: 64, offset: 1024)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "h264_v_loop_filter_chroma_intra", scope: !1743, file: !1742, line: 68, baseType: !1765, size: 64, align: 64, offset: 1088)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "h264_h_loop_filter_chroma_intra", scope: !1743, file: !1742, line: 70, baseType: !1765, size: 64, align: 64, offset: 1152)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "h264_h_loop_filter_chroma_mbaff_intra", scope: !1743, file: !1742, line: 72, baseType: !1765, size: 64, align: 64, offset: 1216)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "h264_loop_filter_strength", scope: !1743, file: !1742, line: 75, baseType: !1777, size: 64, align: 64, offset: 1280)
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 64, align: 64)
!1778 = !DISubroutineType(types: !1779)
!1779 = !{null, !1780, !928, !1783, !1787, !899, !899, !899, !899, !899, !899}
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 64, align: 64)
!1781 = !DICompositeType(tag: DW_TAG_array_type, baseType: !907, size: 256, align: 16, elements: !1782)
!1782 = !{!924, !924}
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 64, align: 64)
!1784 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1142, size: 320, align: 8, elements: !1785)
!1785 = !{!1786}
!1786 = !DISubrange(count: 40)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64, align: 64)
!1788 = !DICompositeType(tag: DW_TAG_array_type, baseType: !907, size: 1280, align: 16, elements: !1789)
!1789 = !{!1786, !910}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "h264_idct_add", scope: !1743, file: !1742, line: 81, baseType: !1791, size: 64, align: 64, offset: 1344)
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 64, align: 64)
!1792 = !DISubroutineType(types: !1793)
!1793 = !{null, !928, !1692, !899}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "h264_idct8_add", scope: !1743, file: !1742, line: 83, baseType: !1791, size: 64, align: 64, offset: 1408)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "h264_idct_dc_add", scope: !1743, file: !1742, line: 85, baseType: !1791, size: 64, align: 64, offset: 1472)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "h264_idct8_dc_add", scope: !1743, file: !1742, line: 87, baseType: !1791, size: 64, align: 64, offset: 1536)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "h264_idct_add16", scope: !1743, file: !1742, line: 90, baseType: !1798, size: 64, align: 64, offset: 1600)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 64, align: 64)
!1799 = !DISubroutineType(types: !1800)
!1800 = !{null, !928, !970, !1692, !899, !1474}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "h264_idct8_add4", scope: !1743, file: !1742, line: 93, baseType: !1798, size: 64, align: 64, offset: 1664)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "h264_idct_add8", scope: !1743, file: !1742, line: 96, baseType: !1803, size: 64, align: 64, offset: 1728)
!1803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1804, size: 64, align: 64)
!1804 = !DISubroutineType(types: !1805)
!1805 = !{null, !1069, !970, !1692, !899, !1474}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "h264_idct_add16intra", scope: !1743, file: !1742, line: 99, baseType: !1798, size: 64, align: 64, offset: 1792)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "h264_luma_dc_dequant_idct", scope: !1743, file: !1742, line: 102, baseType: !1808, size: 64, align: 64, offset: 1856)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 64, align: 64)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "h264_chroma_dc_dequant_idct", scope: !1743, file: !1742, line: 104, baseType: !1810, size: 64, align: 64, offset: 1920)
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 64, align: 64)
!1811 = !DISubroutineType(types: !1812)
!1812 = !{null, !1692, !899}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "h264_add_pixels8_clear", scope: !1743, file: !1742, line: 107, baseType: !1791, size: 64, align: 64, offset: 1984)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "h264_add_pixels4_clear", scope: !1743, file: !1742, line: 108, baseType: !1791, size: 64, align: 64, offset: 2048)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "startcode_find_candidate", scope: !1743, file: !1742, line: 117, baseType: !1816, size: 64, align: 64, offset: 2112)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 64, align: 64)
!1817 = !DISubroutineType(types: !1818)
!1818 = !{!899, !1474, !899}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "hpc", scope: !1737, file: !945, line: 86, baseType: !1820, size: 3776, align: 64, offset: 2240)
!1820 = !DIDerivedType(tag: DW_TAG_typedef, name: "H264PredContext", file: !1821, line: 112, baseType: !1822)
!1821 = !DIFile(filename: "libavcodec/h264pred.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "H264PredContext", file: !1821, line: 92, size: 3776, align: 64, elements: !1823)
!1823 = !{!1824, !1831, !1838, !1845, !1849, !1854, !1855, !1860, !1867}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "pred4x4", scope: !1822, file: !1821, line: 93, baseType: !1825, size: 960, align: 64)
!1825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1826, size: 960, align: 64, elements: !1829)
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 64, align: 64)
!1827 = !DISubroutineType(types: !1828)
!1828 = !{null, !928, !1474, !1751}
!1829 = !{!1830}
!1830 = !DISubrange(count: 15)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "pred8x8l", scope: !1822, file: !1821, line: 95, baseType: !1832, size: 768, align: 64, offset: 960)
!1832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1833, size: 768, align: 64, elements: !1836)
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 64, align: 64)
!1834 = !DISubroutineType(types: !1835)
!1835 = !{null, !928, !899, !899, !1751}
!1836 = !{!1837}
!1837 = !DISubrange(count: 12)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "pred8x8", scope: !1822, file: !1821, line: 97, baseType: !1839, size: 704, align: 64, offset: 1728)
!1839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1840, size: 704, align: 64, elements: !1843)
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 64, align: 64)
!1841 = !DISubroutineType(types: !1842)
!1842 = !{null, !928, !1751}
!1843 = !{!1844}
!1844 = !DISubrange(count: 11)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "pred16x16", scope: !1822, file: !1821, line: 98, baseType: !1846, size: 576, align: 64, offset: 2432)
!1846 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1840, size: 576, align: 64, elements: !1847)
!1847 = !{!1848}
!1848 = !DISubrange(count: 9)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "pred4x4_add", scope: !1822, file: !1821, line: 100, baseType: !1850, size: 128, align: 64, offset: 3008)
!1850 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1851, size: 128, align: 64, elements: !909)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64, align: 64)
!1852 = !DISubroutineType(types: !1853)
!1853 = !{null, !928, !1692, !1751}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "pred8x8l_add", scope: !1822, file: !1821, line: 102, baseType: !1850, size: 128, align: 64, offset: 3136)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "pred8x8l_filter_add", scope: !1822, file: !1821, line: 104, baseType: !1856, size: 128, align: 64, offset: 3264)
!1856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1857, size: 128, align: 64, elements: !909)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 64, align: 64)
!1858 = !DISubroutineType(types: !1859)
!1859 = !{null, !928, !1692, !899, !899, !1751}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "pred8x8_add", scope: !1822, file: !1821, line: 106, baseType: !1861, size: 192, align: 64, offset: 3392)
!1861 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1862, size: 192, align: 64, elements: !1865)
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 64, align: 64)
!1863 = !DISubroutineType(types: !1864)
!1864 = !{null, !928, !970, !1692, !1751}
!1865 = !{!1866}
!1866 = !DISubrange(count: 3)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "pred16x16_add", scope: !1822, file: !1821, line: 109, baseType: !1861, size: 192, align: 64, offset: 3584)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "hdsp", scope: !1737, file: !945, line: 87, baseType: !1869, size: 3328, align: 64, offset: 6016)
!1869 = !DIDerivedType(tag: DW_TAG_typedef, name: "HpelDSPContext", file: !1870, line: 95, baseType: !1871)
!1870 = !DIFile(filename: "libavcodec/hpeldsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HpelDSPContext", file: !1870, line: 45, size: 3328, align: 64, elements: !1872)
!1872 = !{!1873, !1879, !1880, !1881}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "put_pixels_tab", scope: !1871, file: !1870, line: 56, baseType: !1874, size: 1024, align: 64)
!1874 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1875, size: 1024, align: 64, elements: !1782)
!1875 = !DIDerivedType(tag: DW_TAG_typedef, name: "op_pixels_func", file: !1870, line: 38, baseType: !1876)
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1877, size: 64, align: 64)
!1877 = !DISubroutineType(types: !1878)
!1878 = !{null, !928, !1474, !1751, !899}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "avg_pixels_tab", scope: !1871, file: !1870, line: 68, baseType: !1874, size: 1024, align: 64, offset: 1024)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "put_no_rnd_pixels_tab", scope: !1871, file: !1870, line: 82, baseType: !1874, size: 1024, align: 64, offset: 2048)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "avg_no_rnd_pixels_tab", scope: !1871, file: !1870, line: 94, baseType: !1882, size: 256, align: 64, offset: 3072)
!1882 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1875, size: 256, align: 64, elements: !923)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "tdsp", scope: !1737, file: !945, line: 88, baseType: !1884, size: 1408, align: 64, offset: 9344)
!1884 = !DIDerivedType(tag: DW_TAG_typedef, name: "TpelDSPContext", file: !1885, line: 55, baseType: !1886)
!1885 = !DIFile(filename: "libavcodec/tpeldsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TpelDSPContext", file: !1885, line: 42, size: 1408, align: 64, elements: !1887)
!1887 = !{!1888, !1894}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "put_tpel_pixels_tab", scope: !1886, file: !1885, line: 53, baseType: !1889, size: 704, align: 64)
!1889 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1890, size: 704, align: 64, elements: !1843)
!1890 = !DIDerivedType(tag: DW_TAG_typedef, name: "tpel_mc_func", file: !1885, line: 35, baseType: !1891)
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 64, align: 64)
!1892 = !DISubroutineType(types: !1893)
!1893 = !{null, !928, !1474, !899, !899, !899}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "avg_tpel_pixels_tab", scope: !1886, file: !1885, line: 54, baseType: !1889, size: 704, align: 64, offset: 704)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "vdsp", scope: !1737, file: !945, line: 89, baseType: !1896, size: 128, align: 64, offset: 10752)
!1896 = !DIDerivedType(tag: DW_TAG_typedef, name: "VideoDSPContext", file: !1897, line: 77, baseType: !1898)
!1897 = !DIFile(filename: "libavcodec/videodsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VideoDSPContext", file: !1897, line: 41, size: 128, align: 64, elements: !1899)
!1899 = !{!1900, !1904}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "emulated_edge_mc", scope: !1898, file: !1897, line: 63, baseType: !1901, size: 64, align: 64)
!1901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 64, align: 64)
!1902 = !DISubroutineType(types: !1903)
!1903 = !{null, !928, !1474, !1751, !1751, !899, !899, !899, !899, !899, !899}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "prefetch", scope: !1898, file: !1897, line: 76, baseType: !1905, size: 64, align: 64, offset: 64)
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 64, align: 64)
!1906 = !DISubroutineType(types: !1907)
!1907 = !{null, !928, !1751, !899}
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "cur_pic", scope: !1737, file: !945, line: 91, baseType: !1909, size: 64, align: 64, offset: 10880)
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 64, align: 64)
!1910 = !DIDerivedType(tag: DW_TAG_typedef, name: "SVQ3Frame", file: !945, line: 80, baseType: !1911)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SVQ3Frame", file: !945, line: 68, size: 704, align: 64, elements: !1912)
!1912 = !{!1913, !1914, !1916, !1918, !1919, !1920, !1921}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1911, file: !945, line: 69, baseType: !1058, size: 64, align: 64)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "motion_val_buf", scope: !1911, file: !945, line: 71, baseType: !1915, size: 128, align: 64, offset: 64)
!1915 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1097, size: 128, align: 64, elements: !909)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "motion_val", scope: !1911, file: !945, line: 72, baseType: !1917, size: 128, align: 64, offset: 192)
!1917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !905, size: 128, align: 64, elements: !909)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "mb_type_buf", scope: !1911, file: !945, line: 74, baseType: !1097, size: 64, align: 64, offset: 320)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "mb_type", scope: !1911, file: !945, line: 75, baseType: !904, size: 64, align: 64, offset: 384)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "ref_index_buf", scope: !1911, file: !945, line: 78, baseType: !1915, size: 128, align: 64, offset: 448)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "ref_index", scope: !1911, file: !945, line: 79, baseType: !1922, size: 128, align: 64, offset: 576)
!1922 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1141, size: 128, align: 64, elements: !909)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "next_pic", scope: !1737, file: !945, line: 92, baseType: !1909, size: 64, align: 64, offset: 10944)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "last_pic", scope: !1737, file: !945, line: 93, baseType: !1909, size: 64, align: 64, offset: 11008)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "gb", scope: !1737, file: !945, line: 94, baseType: !1683, size: 256, align: 64, offset: 11072)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "gb_slice", scope: !1737, file: !945, line: 95, baseType: !1683, size: 256, align: 64, offset: 11328)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "slice_buf", scope: !1737, file: !945, line: 96, baseType: !928, size: 64, align: 64, offset: 11584)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "slice_size", scope: !1737, file: !945, line: 97, baseType: !899, size: 32, align: 32, offset: 11648)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "halfpel_flag", scope: !1737, file: !945, line: 98, baseType: !899, size: 32, align: 32, offset: 11680)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "thirdpel_flag", scope: !1737, file: !945, line: 99, baseType: !899, size: 32, align: 32, offset: 11712)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "has_watermark", scope: !1737, file: !945, line: 100, baseType: !899, size: 32, align: 32, offset: 11744)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "watermark_key", scope: !1737, file: !945, line: 101, baseType: !896, size: 32, align: 32, offset: 11776)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1737, file: !945, line: 102, baseType: !928, size: 64, align: 64, offset: 11840)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "buf_size", scope: !1737, file: !945, line: 103, baseType: !899, size: 32, align: 32, offset: 11904)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "adaptive_quant", scope: !1737, file: !945, line: 104, baseType: !899, size: 32, align: 32, offset: 11936)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "next_p_frame_damaged", scope: !1737, file: !945, line: 105, baseType: !899, size: 32, align: 32, offset: 11968)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "h_edge_pos", scope: !1737, file: !945, line: 106, baseType: !899, size: 32, align: 32, offset: 12000)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "v_edge_pos", scope: !1737, file: !945, line: 107, baseType: !899, size: 32, align: 32, offset: 12032)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "last_frame_output", scope: !1737, file: !945, line: 108, baseType: !899, size: 32, align: 32, offset: 12064)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "slice_num", scope: !1737, file: !945, line: 109, baseType: !899, size: 32, align: 32, offset: 12096)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1737, file: !945, line: 110, baseType: !899, size: 32, align: 32, offset: 12128)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "cbp", scope: !1737, file: !945, line: 111, baseType: !899, size: 32, align: 32, offset: 12160)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "frame_num", scope: !1737, file: !945, line: 112, baseType: !899, size: 32, align: 32, offset: 12192)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "frame_num_offset", scope: !1737, file: !945, line: 113, baseType: !899, size: 32, align: 32, offset: 12224)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "prev_frame_num_offset", scope: !1737, file: !945, line: 114, baseType: !899, size: 32, align: 32, offset: 12256)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "prev_frame_num", scope: !1737, file: !945, line: 115, baseType: !899, size: 32, align: 32, offset: 12288)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1737, file: !945, line: 117, baseType: !711, size: 32, align: 32, offset: 12320)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "slice_type", scope: !1737, file: !945, line: 118, baseType: !711, size: 32, align: 32, offset: 12352)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "low_delay", scope: !1737, file: !945, line: 119, baseType: !899, size: 32, align: 32, offset: 12384)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "mb_x", scope: !1737, file: !945, line: 121, baseType: !899, size: 32, align: 32, offset: 12416)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "mb_y", scope: !1737, file: !945, line: 121, baseType: !899, size: 32, align: 32, offset: 12448)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "mb_xy", scope: !1737, file: !945, line: 122, baseType: !899, size: 32, align: 32, offset: 12480)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "mb_width", scope: !1737, file: !945, line: 123, baseType: !899, size: 32, align: 32, offset: 12512)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "mb_height", scope: !1737, file: !945, line: 123, baseType: !899, size: 32, align: 32, offset: 12544)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "mb_stride", scope: !1737, file: !945, line: 124, baseType: !899, size: 32, align: 32, offset: 12576)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "mb_num", scope: !1737, file: !945, line: 124, baseType: !899, size: 32, align: 32, offset: 12608)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "b_stride", scope: !1737, file: !945, line: 125, baseType: !899, size: 32, align: 32, offset: 12640)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "mb2br_xy", scope: !1737, file: !945, line: 127, baseType: !904, size: 64, align: 64, offset: 12672)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_pred_mode", scope: !1737, file: !945, line: 129, baseType: !899, size: 32, align: 32, offset: 12736)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "intra16x16_pred_mode", scope: !1737, file: !945, line: 130, baseType: !899, size: 32, align: 32, offset: 12768)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "intra4x4_pred_mode_cache", scope: !1737, file: !945, line: 132, baseType: !1784, size: 320, align: 8, offset: 12800)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "intra4x4_pred_mode", scope: !1737, file: !945, line: 133, baseType: !1141, size: 64, align: 64, offset: 13120)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "top_samples_available", scope: !1737, file: !945, line: 135, baseType: !898, size: 32, align: 32, offset: 13184)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "topright_samples_available", scope: !1737, file: !945, line: 136, baseType: !898, size: 32, align: 32, offset: 13216)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "left_samples_available", scope: !1737, file: !945, line: 137, baseType: !898, size: 32, align: 32, offset: 13248)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "edge_emu_buffer", scope: !1737, file: !945, line: 139, baseType: !928, size: 64, align: 64, offset: 13312)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "mv_cache", scope: !1737, file: !945, line: 141, baseType: !1968, size: 2560, align: 16, offset: 13440)
!1968 = !DICompositeType(tag: DW_TAG_array_type, baseType: !907, size: 2560, align: 16, elements: !1969)
!1969 = !{!910, !1786, !910}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "ref_cache", scope: !1737, file: !945, line: 142, baseType: !1971, size: 640, align: 8, offset: 16000)
!1971 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1142, size: 640, align: 8, elements: !1972)
!1972 = !{!910, !1786}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "mb", scope: !1737, file: !945, line: 143, baseType: !1974, size: 24576, align: 16, offset: 16640)
!1974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !907, size: 24576, align: 16, elements: !1975)
!1975 = !{!1976}
!1976 = !DISubrange(count: 1536)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "mb_luma_dc", scope: !1737, file: !945, line: 144, baseType: !1978, size: 1536, align: 16, offset: 41216)
!1978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !907, size: 1536, align: 16, elements: !1979)
!1979 = !{!1866, !1717}
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "non_zero_count_cache", scope: !1737, file: !945, line: 145, baseType: !1981, size: 960, align: 8, offset: 42752)
!1981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !902, size: 960, align: 8, elements: !1982)
!1982 = !{!1983}
!1983 = !DISubrange(count: 120)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "dequant4_coeff", scope: !1737, file: !945, line: 146, baseType: !1985, size: 45056, align: 32, offset: 43712)
!1985 = !DICompositeType(tag: DW_TAG_array_type, baseType: !896, size: 45056, align: 32, elements: !1986)
!1986 = !{!1987, !1698}
!1987 = !DISubrange(count: 88)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "block_offset", scope: !1737, file: !945, line: 147, baseType: !1989, size: 3072, align: 32, offset: 88768)
!1989 = !DICompositeType(tag: DW_TAG_array_type, baseType: !899, size: 3072, align: 32, elements: !1990)
!1990 = !{!1991}
!1991 = !DISubrange(count: 96)
!1992 = !DILocation(line: 1128, column: 18, scope: !1721)
!1993 = !DILocation(line: 1128, column: 22, scope: !1721)
!1994 = !DILocation(line: 1128, column: 29, scope: !1721)
!1995 = !DILocalVariable(name: "m", scope: !1721, file: !945, line: 1129, type: !899)
!1996 = !DILocation(line: 1129, column: 9, scope: !1721)
!1997 = !DILocalVariable(name: "x", scope: !1721, file: !945, line: 1129, type: !899)
!1998 = !DILocation(line: 1129, column: 12, scope: !1721)
!1999 = !DILocalVariable(name: "y", scope: !1721, file: !945, line: 1129, type: !899)
!2000 = !DILocation(line: 1129, column: 15, scope: !1721)
!2001 = !DILocalVariable(name: "extradata", scope: !1721, file: !945, line: 1130, type: !888)
!2002 = !DILocation(line: 1130, column: 20, scope: !1721)
!2003 = !DILocalVariable(name: "extradata_end", scope: !1721, file: !945, line: 1131, type: !888)
!2004 = !DILocation(line: 1131, column: 20, scope: !1721)
!2005 = !DILocalVariable(name: "size", scope: !1721, file: !945, line: 1132, type: !898)
!2006 = !DILocation(line: 1132, column: 18, scope: !1721)
!2007 = !DILocalVariable(name: "marker_found", scope: !1721, file: !945, line: 1133, type: !899)
!2008 = !DILocation(line: 1133, column: 9, scope: !1721)
!2009 = !DILocalVariable(name: "ret", scope: !1721, file: !945, line: 1134, type: !899)
!2010 = !DILocation(line: 1134, column: 9, scope: !1721)
!2011 = !DILocation(line: 1136, column: 18, scope: !1721)
!2012 = !DILocation(line: 1136, column: 5, scope: !1721)
!2013 = !DILocation(line: 1136, column: 8, scope: !1721)
!2014 = !DILocation(line: 1136, column: 16, scope: !1721)
!2015 = !DILocation(line: 1137, column: 19, scope: !1721)
!2016 = !DILocation(line: 1137, column: 5, scope: !1721)
!2017 = !DILocation(line: 1137, column: 8, scope: !1721)
!2018 = !DILocation(line: 1137, column: 17, scope: !1721)
!2019 = !DILocation(line: 1138, column: 19, scope: !1721)
!2020 = !DILocation(line: 1138, column: 5, scope: !1721)
!2021 = !DILocation(line: 1138, column: 8, scope: !1721)
!2022 = !DILocation(line: 1138, column: 17, scope: !1721)
!2023 = !DILocation(line: 1139, column: 10, scope: !2024)
!2024 = distinct !DILexicalBlock(scope: !1721, file: !945, line: 1139, column: 9)
!2025 = !DILocation(line: 1139, column: 13, scope: !2024)
!2026 = !DILocation(line: 1139, column: 22, scope: !2024)
!2027 = !DILocation(line: 1139, column: 26, scope: !2028)
!2028 = !DILexicalBlockFile(scope: !2024, file: !945, discriminator: 1)
!2029 = !DILocation(line: 1139, column: 29, scope: !2028)
!2030 = !DILocation(line: 1139, column: 38, scope: !2028)
!2031 = !DILocation(line: 1139, column: 42, scope: !2032)
!2032 = !DILexicalBlockFile(scope: !2024, file: !945, discriminator: 2)
!2033 = !DILocation(line: 1139, column: 45, scope: !2032)
!2034 = !DILocation(line: 1139, column: 9, scope: !2032)
!2035 = !DILocation(line: 1140, column: 13, scope: !2036)
!2036 = distinct !DILexicalBlock(scope: !2024, file: !945, line: 1139, column: 54)
!2037 = !DILocation(line: 1141, column: 9, scope: !2036)
!2038 = !DILocation(line: 1144, column: 21, scope: !1721)
!2039 = !DILocation(line: 1144, column: 5, scope: !1721)
!2040 = !DILocation(line: 1144, column: 8, scope: !1721)
!2041 = !DILocation(line: 1144, column: 17, scope: !1721)
!2042 = !DILocation(line: 1144, column: 19, scope: !1721)
!2043 = !DILocation(line: 1145, column: 22, scope: !1721)
!2044 = !DILocation(line: 1145, column: 5, scope: !1721)
!2045 = !DILocation(line: 1145, column: 8, scope: !1721)
!2046 = !DILocation(line: 1145, column: 18, scope: !1721)
!2047 = !DILocation(line: 1145, column: 20, scope: !1721)
!2048 = !DILocation(line: 1146, column: 22, scope: !1721)
!2049 = !DILocation(line: 1146, column: 5, scope: !1721)
!2050 = !DILocation(line: 1146, column: 8, scope: !1721)
!2051 = !DILocation(line: 1146, column: 18, scope: !1721)
!2052 = !DILocation(line: 1146, column: 20, scope: !1721)
!2053 = !DILocation(line: 1147, column: 10, scope: !2054)
!2054 = distinct !DILexicalBlock(scope: !1721, file: !945, line: 1147, column: 9)
!2055 = !DILocation(line: 1147, column: 13, scope: !2054)
!2056 = !DILocation(line: 1147, column: 22, scope: !2054)
!2057 = !DILocation(line: 1147, column: 24, scope: !2054)
!2058 = !DILocation(line: 1147, column: 28, scope: !2059)
!2059 = !DILexicalBlockFile(scope: !2054, file: !945, discriminator: 1)
!2060 = !DILocation(line: 1147, column: 31, scope: !2059)
!2061 = !DILocation(line: 1147, column: 41, scope: !2059)
!2062 = !DILocation(line: 1147, column: 43, scope: !2059)
!2063 = !DILocation(line: 1147, column: 47, scope: !2064)
!2064 = !DILexicalBlockFile(scope: !2054, file: !945, discriminator: 2)
!2065 = !DILocation(line: 1147, column: 50, scope: !2064)
!2066 = !DILocation(line: 1147, column: 60, scope: !2064)
!2067 = !DILocation(line: 1147, column: 9, scope: !2064)
!2068 = !DILocation(line: 1148, column: 9, scope: !2054)
!2069 = !DILocation(line: 1150, column: 22, scope: !1721)
!2070 = !DILocation(line: 1150, column: 25, scope: !1721)
!2071 = !DILocation(line: 1150, column: 5, scope: !1721)
!2072 = !DILocation(line: 1151, column: 24, scope: !1721)
!2073 = !DILocation(line: 1151, column: 27, scope: !1721)
!2074 = !DILocation(line: 1151, column: 5, scope: !1721)
!2075 = !DILocation(line: 1152, column: 23, scope: !1721)
!2076 = !DILocation(line: 1152, column: 26, scope: !1721)
!2077 = !DILocation(line: 1152, column: 5, scope: !1721)
!2078 = !DILocation(line: 1155, column: 5, scope: !1721)
!2079 = !DILocation(line: 1155, column: 12, scope: !1721)
!2080 = !DILocation(line: 1155, column: 32, scope: !1721)
!2081 = !DILocation(line: 1157, column: 22, scope: !1721)
!2082 = !DILocation(line: 1157, column: 25, scope: !1721)
!2083 = !DILocation(line: 1157, column: 31, scope: !1721)
!2084 = !DILocation(line: 1157, column: 38, scope: !1721)
!2085 = !DILocation(line: 1157, column: 5, scope: !1721)
!2086 = !DILocation(line: 1158, column: 22, scope: !1721)
!2087 = !DILocation(line: 1158, column: 25, scope: !1721)
!2088 = !DILocation(line: 1158, column: 5, scope: !1721)
!2089 = !DILocation(line: 1160, column: 5, scope: !1721)
!2090 = !DILocation(line: 1160, column: 12, scope: !1721)
!2091 = !DILocation(line: 1160, column: 20, scope: !1721)
!2092 = !DILocation(line: 1161, column: 5, scope: !1721)
!2093 = !DILocation(line: 1161, column: 12, scope: !1721)
!2094 = !DILocation(line: 1161, column: 24, scope: !1721)
!2095 = !DILocation(line: 1163, column: 16, scope: !1721)
!2096 = !DILocation(line: 1163, column: 5, scope: !1721)
!2097 = !DILocation(line: 1163, column: 8, scope: !1721)
!2098 = !DILocation(line: 1163, column: 14, scope: !1721)
!2099 = !DILocation(line: 1164, column: 5, scope: !1721)
!2100 = !DILocation(line: 1164, column: 8, scope: !1721)
!2101 = !DILocation(line: 1164, column: 21, scope: !1721)
!2102 = !DILocation(line: 1165, column: 5, scope: !1721)
!2103 = !DILocation(line: 1165, column: 8, scope: !1721)
!2104 = !DILocation(line: 1165, column: 22, scope: !1721)
!2105 = !DILocation(line: 1166, column: 5, scope: !1721)
!2106 = !DILocation(line: 1166, column: 8, scope: !1721)
!2107 = !DILocation(line: 1166, column: 22, scope: !1721)
!2108 = !DILocation(line: 1169, column: 34, scope: !1721)
!2109 = !DILocation(line: 1169, column: 41, scope: !1721)
!2110 = !DILocation(line: 1169, column: 15, scope: !1721)
!2111 = !DILocation(line: 1170, column: 21, scope: !1721)
!2112 = !DILocation(line: 1170, column: 28, scope: !1721)
!2113 = !DILocation(line: 1170, column: 40, scope: !1721)
!2114 = !DILocation(line: 1170, column: 47, scope: !1721)
!2115 = !DILocation(line: 1170, column: 38, scope: !1721)
!2116 = !DILocation(line: 1170, column: 19, scope: !1721)
!2117 = !DILocation(line: 1171, column: 9, scope: !2118)
!2118 = distinct !DILexicalBlock(scope: !1721, file: !945, line: 1171, column: 9)
!2119 = !DILocation(line: 1171, column: 9, scope: !1721)
!2120 = !DILocation(line: 1172, column: 16, scope: !2121)
!2121 = distinct !DILexicalBlock(scope: !2122, file: !945, line: 1172, column: 9)
!2122 = distinct !DILexicalBlock(scope: !2118, file: !945, line: 1171, column: 20)
!2123 = !DILocation(line: 1172, column: 14, scope: !2121)
!2124 = !DILocation(line: 1172, column: 21, scope: !2125)
!2125 = !DILexicalBlockFile(scope: !2126, file: !945, discriminator: 1)
!2126 = distinct !DILexicalBlock(scope: !2121, file: !945, line: 1172, column: 9)
!2127 = !DILocation(line: 1172, column: 23, scope: !2125)
!2128 = !DILocation(line: 1172, column: 29, scope: !2125)
!2129 = !DILocation(line: 1172, column: 36, scope: !2125)
!2130 = !DILocation(line: 1172, column: 27, scope: !2125)
!2131 = !DILocation(line: 1172, column: 9, scope: !2125)
!2132 = !DILocation(line: 1173, column: 25, scope: !2133)
!2133 = distinct !DILexicalBlock(scope: !2134, file: !945, line: 1173, column: 17)
!2134 = distinct !DILexicalBlock(scope: !2126, file: !945, line: 1172, column: 57)
!2135 = !DILocation(line: 1173, column: 18, scope: !2133)
!2136 = !DILocation(line: 1173, column: 17, scope: !2134)
!2137 = !DILocation(line: 1174, column: 30, scope: !2138)
!2138 = distinct !DILexicalBlock(scope: !2133, file: !945, line: 1173, column: 48)
!2139 = !DILocation(line: 1175, column: 17, scope: !2138)
!2140 = !DILocation(line: 1177, column: 22, scope: !2134)
!2141 = !DILocation(line: 1178, column: 9, scope: !2134)
!2142 = !DILocation(line: 1172, column: 53, scope: !2143)
!2143 = !DILexicalBlockFile(scope: !2126, file: !945, discriminator: 2)
!2144 = !DILocation(line: 1172, column: 9, scope: !2143)
!2145 = distinct !{!2145, !2146}
!2146 = !DILocation(line: 1172, column: 9, scope: !2122)
!2147 = !DILocation(line: 1179, column: 5, scope: !2122)
!2148 = !DILocation(line: 1182, column: 9, scope: !1731)
!2149 = !DILocation(line: 1182, column: 9, scope: !1721)
!2150 = !DILocalVariable(name: "gb", scope: !1730, file: !945, line: 1183, type: !1683)
!2151 = !DILocation(line: 1183, column: 23, scope: !1730)
!2152 = !DILocalVariable(name: "frame_size_code", scope: !1730, file: !945, line: 1184, type: !899)
!2153 = !DILocation(line: 1184, column: 13, scope: !1730)
!2154 = !DILocalVariable(name: "unk0", scope: !1730, file: !945, line: 1185, type: !899)
!2155 = !DILocation(line: 1185, column: 13, scope: !1730)
!2156 = !DILocalVariable(name: "unk1", scope: !1730, file: !945, line: 1185, type: !899)
!2157 = !DILocation(line: 1185, column: 19, scope: !1730)
!2158 = !DILocalVariable(name: "unk2", scope: !1730, file: !945, line: 1185, type: !899)
!2159 = !DILocation(line: 1185, column: 25, scope: !1730)
!2160 = !DILocalVariable(name: "unk3", scope: !1730, file: !945, line: 1185, type: !899)
!2161 = !DILocation(line: 1185, column: 31, scope: !1730)
!2162 = !DILocalVariable(name: "unk4", scope: !1730, file: !945, line: 1185, type: !899)
!2163 = !DILocation(line: 1185, column: 37, scope: !1730)
!2164 = !DILocation(line: 1187, column: 60, scope: !1730)
!2165 = !DILocation(line: 1187, column: 76, scope: !1730)
!2166 = !DILocation(line: 1187, column: 16, scope: !1730)
!2167 = !DILocation(line: 68, column: 16, scope: !1723, inlinedAt: !1729)
!2168 = !DILocation(line: 68, column: 19, scope: !1723, inlinedAt: !1729)
!2169 = !DILocation(line: 68, column: 24, scope: !1723, inlinedAt: !1729)
!2170 = !DILocation(line: 68, column: 38, scope: !1723, inlinedAt: !1729)
!2171 = !DILocation(line: 68, column: 41, scope: !1723, inlinedAt: !1729)
!2172 = !DILocation(line: 68, column: 46, scope: !1723, inlinedAt: !1729)
!2173 = !DILocation(line: 68, column: 34, scope: !1723, inlinedAt: !1729)
!2174 = !DILocation(line: 68, column: 57, scope: !1723, inlinedAt: !1729)
!2175 = !DILocation(line: 68, column: 69, scope: !1723, inlinedAt: !1729)
!2176 = !DILocation(line: 68, column: 72, scope: !1723, inlinedAt: !1729)
!2177 = !DILocation(line: 68, column: 79, scope: !1723, inlinedAt: !1729)
!2178 = !DILocation(line: 68, column: 84, scope: !1723, inlinedAt: !1729)
!2179 = !DILocation(line: 68, column: 99, scope: !1723, inlinedAt: !1729)
!2180 = !DILocation(line: 68, column: 102, scope: !1723, inlinedAt: !1729)
!2181 = !DILocation(line: 68, column: 109, scope: !1723, inlinedAt: !1729)
!2182 = !DILocation(line: 68, column: 114, scope: !1723, inlinedAt: !1729)
!2183 = !DILocation(line: 68, column: 94, scope: !1723, inlinedAt: !1729)
!2184 = !DILocation(line: 68, column: 63, scope: !1723, inlinedAt: !1729)
!2185 = !DILocation(line: 1187, column: 14, scope: !1730)
!2186 = !DILocation(line: 1188, column: 13, scope: !2187)
!2187 = distinct !DILexicalBlock(scope: !1730, file: !945, line: 1188, column: 13)
!2188 = !DILocation(line: 1188, column: 20, scope: !2187)
!2189 = !DILocation(line: 1188, column: 36, scope: !2187)
!2190 = !DILocation(line: 1188, column: 34, scope: !2187)
!2191 = !DILocation(line: 1188, column: 46, scope: !2187)
!2192 = !DILocation(line: 1188, column: 18, scope: !2187)
!2193 = !DILocation(line: 1188, column: 13, scope: !1730)
!2194 = !DILocation(line: 1189, column: 17, scope: !2195)
!2195 = distinct !DILexicalBlock(scope: !2187, file: !945, line: 1188, column: 51)
!2196 = !DILocation(line: 1190, column: 13, scope: !2195)
!2197 = !DILocation(line: 1192, column: 28, scope: !1730)
!2198 = !DILocation(line: 1192, column: 38, scope: !1730)
!2199 = !DILocation(line: 1192, column: 43, scope: !1730)
!2200 = !DILocation(line: 1192, column: 48, scope: !1730)
!2201 = !DILocation(line: 1192, column: 9, scope: !1730)
!2202 = !DILocation(line: 1195, column: 27, scope: !1730)
!2203 = !DILocation(line: 1195, column: 25, scope: !1730)
!2204 = !DILocation(line: 1196, column: 17, scope: !1730)
!2205 = !DILocation(line: 1196, column: 9, scope: !1730)
!2206 = !DILocation(line: 1198, column: 13, scope: !2207)
!2207 = distinct !DILexicalBlock(scope: !1730, file: !945, line: 1196, column: 34)
!2208 = !DILocation(line: 1198, column: 20, scope: !2207)
!2209 = !DILocation(line: 1198, column: 26, scope: !2207)
!2210 = !DILocation(line: 1199, column: 13, scope: !2207)
!2211 = !DILocation(line: 1199, column: 20, scope: !2207)
!2212 = !DILocation(line: 1199, column: 27, scope: !2207)
!2213 = !DILocation(line: 1200, column: 13, scope: !2207)
!2214 = !DILocation(line: 1202, column: 13, scope: !2207)
!2215 = !DILocation(line: 1202, column: 20, scope: !2207)
!2216 = !DILocation(line: 1202, column: 26, scope: !2207)
!2217 = !DILocation(line: 1203, column: 13, scope: !2207)
!2218 = !DILocation(line: 1203, column: 20, scope: !2207)
!2219 = !DILocation(line: 1203, column: 27, scope: !2207)
!2220 = !DILocation(line: 1204, column: 13, scope: !2207)
!2221 = !DILocation(line: 1206, column: 13, scope: !2207)
!2222 = !DILocation(line: 1206, column: 20, scope: !2207)
!2223 = !DILocation(line: 1206, column: 26, scope: !2207)
!2224 = !DILocation(line: 1207, column: 13, scope: !2207)
!2225 = !DILocation(line: 1207, column: 20, scope: !2207)
!2226 = !DILocation(line: 1207, column: 27, scope: !2207)
!2227 = !DILocation(line: 1208, column: 13, scope: !2207)
!2228 = !DILocation(line: 1210, column: 13, scope: !2207)
!2229 = !DILocation(line: 1210, column: 20, scope: !2207)
!2230 = !DILocation(line: 1210, column: 26, scope: !2207)
!2231 = !DILocation(line: 1211, column: 13, scope: !2207)
!2232 = !DILocation(line: 1211, column: 20, scope: !2207)
!2233 = !DILocation(line: 1211, column: 27, scope: !2207)
!2234 = !DILocation(line: 1212, column: 13, scope: !2207)
!2235 = !DILocation(line: 1214, column: 13, scope: !2207)
!2236 = !DILocation(line: 1214, column: 20, scope: !2207)
!2237 = !DILocation(line: 1214, column: 26, scope: !2207)
!2238 = !DILocation(line: 1215, column: 13, scope: !2207)
!2239 = !DILocation(line: 1215, column: 20, scope: !2207)
!2240 = !DILocation(line: 1215, column: 27, scope: !2207)
!2241 = !DILocation(line: 1216, column: 13, scope: !2207)
!2242 = !DILocation(line: 1218, column: 13, scope: !2207)
!2243 = !DILocation(line: 1218, column: 20, scope: !2207)
!2244 = !DILocation(line: 1218, column: 26, scope: !2207)
!2245 = !DILocation(line: 1219, column: 13, scope: !2207)
!2246 = !DILocation(line: 1219, column: 20, scope: !2207)
!2247 = !DILocation(line: 1219, column: 27, scope: !2207)
!2248 = !DILocation(line: 1220, column: 13, scope: !2207)
!2249 = !DILocation(line: 1222, column: 13, scope: !2207)
!2250 = !DILocation(line: 1222, column: 20, scope: !2207)
!2251 = !DILocation(line: 1222, column: 26, scope: !2207)
!2252 = !DILocation(line: 1223, column: 13, scope: !2207)
!2253 = !DILocation(line: 1223, column: 20, scope: !2207)
!2254 = !DILocation(line: 1223, column: 27, scope: !2207)
!2255 = !DILocation(line: 1224, column: 13, scope: !2207)
!2256 = !DILocation(line: 1226, column: 28, scope: !2207)
!2257 = !DILocation(line: 1226, column: 13, scope: !2207)
!2258 = !DILocation(line: 1226, column: 20, scope: !2207)
!2259 = !DILocation(line: 1226, column: 26, scope: !2207)
!2260 = !DILocation(line: 1227, column: 29, scope: !2207)
!2261 = !DILocation(line: 1227, column: 13, scope: !2207)
!2262 = !DILocation(line: 1227, column: 20, scope: !2207)
!2263 = !DILocation(line: 1227, column: 27, scope: !2207)
!2264 = !DILocation(line: 1228, column: 13, scope: !2207)
!2265 = !DILocation(line: 1231, column: 27, scope: !1730)
!2266 = !DILocation(line: 1231, column: 9, scope: !1730)
!2267 = !DILocation(line: 1231, column: 12, scope: !1730)
!2268 = !DILocation(line: 1231, column: 25, scope: !1730)
!2269 = !DILocation(line: 1232, column: 28, scope: !1730)
!2270 = !DILocation(line: 1232, column: 9, scope: !1730)
!2271 = !DILocation(line: 1232, column: 12, scope: !1730)
!2272 = !DILocation(line: 1232, column: 26, scope: !1730)
!2273 = !DILocation(line: 1235, column: 16, scope: !1730)
!2274 = !DILocation(line: 1235, column: 14, scope: !1730)
!2275 = !DILocation(line: 1236, column: 16, scope: !1730)
!2276 = !DILocation(line: 1236, column: 14, scope: !1730)
!2277 = !DILocation(line: 1237, column: 16, scope: !1730)
!2278 = !DILocation(line: 1237, column: 14, scope: !1730)
!2279 = !DILocation(line: 1238, column: 16, scope: !1730)
!2280 = !DILocation(line: 1238, column: 14, scope: !1730)
!2281 = !DILocation(line: 1240, column: 24, scope: !1730)
!2282 = !DILocation(line: 1240, column: 9, scope: !1730)
!2283 = !DILocation(line: 1240, column: 12, scope: !1730)
!2284 = !DILocation(line: 1240, column: 22, scope: !1730)
!2285 = !DILocation(line: 1243, column: 16, scope: !1730)
!2286 = !DILocation(line: 1243, column: 14, scope: !1730)
!2287 = !DILocation(line: 1245, column: 16, scope: !1730)
!2288 = !DILocation(line: 1246, column: 16, scope: !1730)
!2289 = !DILocation(line: 1246, column: 22, scope: !1730)
!2290 = !DILocation(line: 1246, column: 28, scope: !1730)
!2291 = !DILocation(line: 1246, column: 34, scope: !1730)
!2292 = !DILocation(line: 1246, column: 40, scope: !1730)
!2293 = !DILocation(line: 1245, column: 9, scope: !1730)
!2294 = !DILocation(line: 1248, column: 13, scope: !2295)
!2295 = distinct !DILexicalBlock(scope: !1730, file: !945, line: 1248, column: 13)
!2296 = !DILocation(line: 1248, column: 40, scope: !2295)
!2297 = !DILocation(line: 1248, column: 13, scope: !1730)
!2298 = !DILocation(line: 1249, column: 17, scope: !2299)
!2299 = distinct !DILexicalBlock(scope: !2295, file: !945, line: 1248, column: 45)
!2300 = !DILocation(line: 1250, column: 13, scope: !2299)
!2301 = !DILocation(line: 1253, column: 28, scope: !1730)
!2302 = !DILocation(line: 1253, column: 9, scope: !1730)
!2303 = !DILocation(line: 1253, column: 12, scope: !1730)
!2304 = !DILocation(line: 1253, column: 26, scope: !1730)
!2305 = !DILocation(line: 1254, column: 32, scope: !1730)
!2306 = !DILocation(line: 1254, column: 35, scope: !1730)
!2307 = !DILocation(line: 1254, column: 31, scope: !1730)
!2308 = !DILocation(line: 1254, column: 9, scope: !1730)
!2309 = !DILocation(line: 1254, column: 16, scope: !1730)
!2310 = !DILocation(line: 1254, column: 29, scope: !1730)
!2311 = !DILocation(line: 1255, column: 13, scope: !2312)
!2312 = distinct !DILexicalBlock(scope: !1730, file: !945, line: 1255, column: 13)
!2313 = !DILocation(line: 1255, column: 16, scope: !2312)
!2314 = !DILocation(line: 1255, column: 13, scope: !1730)
!2315 = !DILocalVariable(name: "watermark_width", scope: !2316, file: !945, line: 1257, type: !898)
!2316 = distinct !DILexicalBlock(scope: !2312, file: !945, line: 1255, column: 31)
!2317 = !DILocation(line: 1257, column: 22, scope: !2316)
!2318 = !DILocation(line: 1257, column: 40, scope: !2316)
!2319 = !DILocalVariable(name: "watermark_height", scope: !2316, file: !945, line: 1258, type: !898)
!2320 = !DILocation(line: 1258, column: 22, scope: !2316)
!2321 = !DILocation(line: 1258, column: 41, scope: !2316)
!2322 = !DILocalVariable(name: "u1", scope: !2316, file: !945, line: 1259, type: !899)
!2323 = !DILocation(line: 1259, column: 17, scope: !2316)
!2324 = !DILocation(line: 1259, column: 22, scope: !2316)
!2325 = !DILocalVariable(name: "u2", scope: !2316, file: !945, line: 1260, type: !899)
!2326 = !DILocation(line: 1260, column: 17, scope: !2316)
!2327 = !DILocation(line: 1260, column: 22, scope: !2316)
!2328 = !DILocalVariable(name: "u3", scope: !2316, file: !945, line: 1261, type: !899)
!2329 = !DILocation(line: 1261, column: 17, scope: !2316)
!2330 = !DILocation(line: 1261, column: 22, scope: !2316)
!2331 = !DILocalVariable(name: "u4", scope: !2316, file: !945, line: 1262, type: !899)
!2332 = !DILocation(line: 1262, column: 17, scope: !2316)
!2333 = !DILocation(line: 1262, column: 22, scope: !2316)
!2334 = !DILocalVariable(name: "buf_len", scope: !2316, file: !945, line: 1263, type: !901)
!2335 = !DILocation(line: 1263, column: 27, scope: !2316)
!2336 = !DILocation(line: 1263, column: 37, scope: !2316)
!2337 = !DILocation(line: 1264, column: 41, scope: !2316)
!2338 = !DILocation(line: 1263, column: 53, scope: !2316)
!2339 = !DILocation(line: 1264, column: 58, scope: !2316)
!2340 = !DILocalVariable(name: "offset", scope: !2316, file: !945, line: 1265, type: !899)
!2341 = !DILocation(line: 1265, column: 17, scope: !2316)
!2342 = !DILocation(line: 1265, column: 26, scope: !2316)
!2343 = !DILocation(line: 1265, column: 46, scope: !2316)
!2344 = !DILocation(line: 1265, column: 50, scope: !2316)
!2345 = !DILocalVariable(name: "buf", scope: !2316, file: !945, line: 1266, type: !928)
!2346 = !DILocation(line: 1266, column: 22, scope: !2316)
!2347 = !DILocation(line: 1268, column: 17, scope: !2348)
!2348 = distinct !DILexicalBlock(scope: !2316, file: !945, line: 1268, column: 17)
!2349 = !DILocation(line: 1268, column: 34, scope: !2348)
!2350 = !DILocation(line: 1268, column: 39, scope: !2348)
!2351 = !DILocation(line: 1269, column: 27, scope: !2348)
!2352 = !DILocation(line: 1269, column: 17, scope: !2348)
!2353 = !DILocation(line: 1269, column: 43, scope: !2348)
!2354 = !DILocation(line: 1269, column: 59, scope: !2348)
!2355 = !DILocation(line: 1269, column: 57, scope: !2348)
!2356 = !DILocation(line: 1269, column: 48, scope: !2348)
!2357 = !DILocation(line: 1269, column: 47, scope: !2348)
!2358 = !DILocation(line: 1268, column: 17, scope: !2359)
!2359 = !DILexicalBlockFile(scope: !2316, file: !945, discriminator: 1)
!2360 = !DILocation(line: 1270, column: 21, scope: !2361)
!2361 = distinct !DILexicalBlock(scope: !2348, file: !945, line: 1269, column: 77)
!2362 = !DILocation(line: 1271, column: 17, scope: !2361)
!2363 = !DILocation(line: 1274, column: 29, scope: !2316)
!2364 = !DILocation(line: 1274, column: 19, scope: !2316)
!2365 = !DILocation(line: 1274, column: 17, scope: !2316)
!2366 = !DILocation(line: 1275, column: 18, scope: !2367)
!2367 = distinct !DILexicalBlock(scope: !2316, file: !945, line: 1275, column: 17)
!2368 = !DILocation(line: 1275, column: 17, scope: !2316)
!2369 = !DILocation(line: 1276, column: 21, scope: !2370)
!2370 = distinct !DILexicalBlock(scope: !2367, file: !945, line: 1275, column: 23)
!2371 = !DILocation(line: 1277, column: 17, scope: !2370)
!2372 = !DILocation(line: 1279, column: 20, scope: !2316)
!2373 = !DILocation(line: 1280, column: 20, scope: !2316)
!2374 = !DILocation(line: 1280, column: 37, scope: !2316)
!2375 = !DILocation(line: 1279, column: 13, scope: !2316)
!2376 = !DILocation(line: 1281, column: 20, scope: !2316)
!2377 = !DILocation(line: 1283, column: 20, scope: !2316)
!2378 = !DILocation(line: 1283, column: 24, scope: !2316)
!2379 = !DILocation(line: 1283, column: 28, scope: !2316)
!2380 = !DILocation(line: 1283, column: 32, scope: !2316)
!2381 = !DILocation(line: 1283, column: 36, scope: !2316)
!2382 = !DILocation(line: 1281, column: 13, scope: !2316)
!2383 = !DILocation(line: 1284, column: 28, scope: !2384)
!2384 = distinct !DILexicalBlock(scope: !2316, file: !945, line: 1284, column: 17)
!2385 = !DILocation(line: 1284, column: 43, scope: !2384)
!2386 = !DILocation(line: 1284, column: 53, scope: !2384)
!2387 = !DILocation(line: 1284, column: 59, scope: !2384)
!2388 = !DILocation(line: 1284, column: 57, scope: !2384)
!2389 = !DILocation(line: 1285, column: 28, scope: !2384)
!2390 = !DILocation(line: 1285, column: 35, scope: !2384)
!2391 = !DILocation(line: 1285, column: 33, scope: !2384)
!2392 = !DILocation(line: 1284, column: 17, scope: !2384)
!2393 = !DILocation(line: 1285, column: 43, scope: !2384)
!2394 = !DILocation(line: 1284, column: 17, scope: !2316)
!2395 = !DILocation(line: 1286, column: 24, scope: !2396)
!2396 = distinct !DILexicalBlock(scope: !2384, file: !945, line: 1285, column: 51)
!2397 = !DILocation(line: 1286, column: 17, scope: !2396)
!2398 = !DILocation(line: 1288, column: 25, scope: !2396)
!2399 = !DILocation(line: 1288, column: 17, scope: !2396)
!2400 = !DILocation(line: 1289, column: 21, scope: !2396)
!2401 = !DILocation(line: 1290, column: 17, scope: !2396)
!2402 = !DILocation(line: 1292, column: 56, scope: !2316)
!2403 = !DILocation(line: 1292, column: 61, scope: !2316)
!2404 = !DILocation(line: 1292, column: 32, scope: !2316)
!2405 = !DILocation(line: 1292, column: 13, scope: !2316)
!2406 = !DILocation(line: 1292, column: 16, scope: !2316)
!2407 = !DILocation(line: 1292, column: 30, scope: !2316)
!2408 = !DILocation(line: 1293, column: 32, scope: !2316)
!2409 = !DILocation(line: 1293, column: 35, scope: !2316)
!2410 = !DILocation(line: 1293, column: 49, scope: !2316)
!2411 = !DILocation(line: 1293, column: 57, scope: !2316)
!2412 = !DILocation(line: 1293, column: 60, scope: !2316)
!2413 = !DILocation(line: 1293, column: 55, scope: !2316)
!2414 = !DILocation(line: 1293, column: 13, scope: !2316)
!2415 = !DILocation(line: 1293, column: 16, scope: !2316)
!2416 = !DILocation(line: 1293, column: 30, scope: !2316)
!2417 = !DILocation(line: 1294, column: 20, scope: !2316)
!2418 = !DILocation(line: 1295, column: 49, scope: !2316)
!2419 = !DILocation(line: 1295, column: 52, scope: !2316)
!2420 = !DILocation(line: 1294, column: 13, scope: !2316)
!2421 = !DILocation(line: 1296, column: 21, scope: !2316)
!2422 = !DILocation(line: 1296, column: 13, scope: !2316)
!2423 = !DILocation(line: 1303, column: 9, scope: !2316)
!2424 = !DILocation(line: 1304, column: 5, scope: !1730)
!2425 = !DILocation(line: 1306, column: 20, scope: !1721)
!2426 = !DILocation(line: 1306, column: 27, scope: !1721)
!2427 = !DILocation(line: 1306, column: 33, scope: !1721)
!2428 = !DILocation(line: 1306, column: 39, scope: !1721)
!2429 = !DILocation(line: 1306, column: 5, scope: !1721)
!2430 = !DILocation(line: 1306, column: 8, scope: !1721)
!2431 = !DILocation(line: 1306, column: 17, scope: !1721)
!2432 = !DILocation(line: 1307, column: 21, scope: !1721)
!2433 = !DILocation(line: 1307, column: 28, scope: !1721)
!2434 = !DILocation(line: 1307, column: 35, scope: !1721)
!2435 = !DILocation(line: 1307, column: 41, scope: !1721)
!2436 = !DILocation(line: 1307, column: 5, scope: !1721)
!2437 = !DILocation(line: 1307, column: 8, scope: !1721)
!2438 = !DILocation(line: 1307, column: 18, scope: !1721)
!2439 = !DILocation(line: 1308, column: 20, scope: !1721)
!2440 = !DILocation(line: 1308, column: 23, scope: !1721)
!2441 = !DILocation(line: 1308, column: 32, scope: !1721)
!2442 = !DILocation(line: 1308, column: 5, scope: !1721)
!2443 = !DILocation(line: 1308, column: 8, scope: !1721)
!2444 = !DILocation(line: 1308, column: 18, scope: !1721)
!2445 = !DILocation(line: 1309, column: 17, scope: !1721)
!2446 = !DILocation(line: 1309, column: 20, scope: !1721)
!2447 = !DILocation(line: 1309, column: 31, scope: !1721)
!2448 = !DILocation(line: 1309, column: 34, scope: !1721)
!2449 = !DILocation(line: 1309, column: 29, scope: !1721)
!2450 = !DILocation(line: 1309, column: 5, scope: !1721)
!2451 = !DILocation(line: 1309, column: 8, scope: !1721)
!2452 = !DILocation(line: 1309, column: 15, scope: !1721)
!2453 = !DILocation(line: 1310, column: 23, scope: !1721)
!2454 = !DILocation(line: 1310, column: 26, scope: !1721)
!2455 = !DILocation(line: 1310, column: 21, scope: !1721)
!2456 = !DILocation(line: 1310, column: 5, scope: !1721)
!2457 = !DILocation(line: 1310, column: 8, scope: !1721)
!2458 = !DILocation(line: 1310, column: 17, scope: !1721)
!2459 = !DILocation(line: 1311, column: 21, scope: !1721)
!2460 = !DILocation(line: 1311, column: 24, scope: !1721)
!2461 = !DILocation(line: 1311, column: 33, scope: !1721)
!2462 = !DILocation(line: 1311, column: 5, scope: !1721)
!2463 = !DILocation(line: 1311, column: 8, scope: !1721)
!2464 = !DILocation(line: 1311, column: 19, scope: !1721)
!2465 = !DILocation(line: 1312, column: 21, scope: !1721)
!2466 = !DILocation(line: 1312, column: 24, scope: !1721)
!2467 = !DILocation(line: 1312, column: 34, scope: !1721)
!2468 = !DILocation(line: 1312, column: 5, scope: !1721)
!2469 = !DILocation(line: 1312, column: 8, scope: !1721)
!2470 = !DILocation(line: 1312, column: 19, scope: !1721)
!2471 = !DILocation(line: 1314, column: 40, scope: !1721)
!2472 = !DILocation(line: 1314, column: 43, scope: !1721)
!2473 = !DILocation(line: 1314, column: 53, scope: !1721)
!2474 = !DILocation(line: 1314, column: 57, scope: !1721)
!2475 = !DILocation(line: 1314, column: 29, scope: !1721)
!2476 = !DILocation(line: 1314, column: 5, scope: !1721)
!2477 = !DILocation(line: 1314, column: 8, scope: !1721)
!2478 = !DILocation(line: 1314, column: 27, scope: !1721)
!2479 = !DILocation(line: 1315, column: 10, scope: !2480)
!2480 = distinct !DILexicalBlock(scope: !1721, file: !945, line: 1315, column: 9)
!2481 = !DILocation(line: 1315, column: 13, scope: !2480)
!2482 = !DILocation(line: 1315, column: 9, scope: !1721)
!2483 = !DILocation(line: 1316, column: 9, scope: !2480)
!2484 = !DILocation(line: 1318, column: 30, scope: !1721)
!2485 = !DILocation(line: 1318, column: 33, scope: !1721)
!2486 = !DILocation(line: 1318, column: 46, scope: !1721)
!2487 = !DILocation(line: 1318, column: 49, scope: !1721)
!2488 = !DILocation(line: 1318, column: 59, scope: !1721)
!2489 = !DILocation(line: 1318, column: 43, scope: !1721)
!2490 = !DILocation(line: 1318, column: 64, scope: !1721)
!2491 = !DILocation(line: 1318, column: 19, scope: !1721)
!2492 = !DILocation(line: 1318, column: 5, scope: !1721)
!2493 = !DILocation(line: 1318, column: 8, scope: !1721)
!2494 = !DILocation(line: 1318, column: 17, scope: !1721)
!2495 = !DILocation(line: 1320, column: 10, scope: !2496)
!2496 = distinct !DILexicalBlock(scope: !1721, file: !945, line: 1320, column: 9)
!2497 = !DILocation(line: 1320, column: 13, scope: !2496)
!2498 = !DILocation(line: 1320, column: 9, scope: !1721)
!2499 = !DILocation(line: 1321, column: 9, scope: !2496)
!2500 = !DILocation(line: 1323, column: 12, scope: !2501)
!2501 = distinct !DILexicalBlock(scope: !1721, file: !945, line: 1323, column: 5)
!2502 = !DILocation(line: 1323, column: 10, scope: !2501)
!2503 = !DILocation(line: 1323, column: 17, scope: !2504)
!2504 = !DILexicalBlockFile(scope: !2505, file: !945, discriminator: 1)
!2505 = distinct !DILexicalBlock(scope: !2501, file: !945, line: 1323, column: 5)
!2506 = !DILocation(line: 1323, column: 21, scope: !2504)
!2507 = !DILocation(line: 1323, column: 24, scope: !2504)
!2508 = !DILocation(line: 1323, column: 19, scope: !2504)
!2509 = !DILocation(line: 1323, column: 5, scope: !2504)
!2510 = !DILocation(line: 1324, column: 16, scope: !2511)
!2511 = distinct !DILexicalBlock(scope: !2505, file: !945, line: 1324, column: 9)
!2512 = !DILocation(line: 1324, column: 14, scope: !2511)
!2513 = !DILocation(line: 1324, column: 21, scope: !2514)
!2514 = !DILexicalBlockFile(scope: !2515, file: !945, discriminator: 1)
!2515 = distinct !DILexicalBlock(scope: !2511, file: !945, line: 1324, column: 9)
!2516 = !DILocation(line: 1324, column: 25, scope: !2514)
!2517 = !DILocation(line: 1324, column: 28, scope: !2514)
!2518 = !DILocation(line: 1324, column: 23, scope: !2514)
!2519 = !DILocation(line: 1324, column: 9, scope: !2514)
!2520 = !DILocalVariable(name: "mb_xy", scope: !2521, file: !945, line: 1325, type: !971)
!2521 = distinct !DILexicalBlock(scope: !2515, file: !945, line: 1324, column: 43)
!2522 = !DILocation(line: 1325, column: 23, scope: !2521)
!2523 = !DILocation(line: 1325, column: 31, scope: !2521)
!2524 = !DILocation(line: 1325, column: 35, scope: !2521)
!2525 = !DILocation(line: 1325, column: 39, scope: !2521)
!2526 = !DILocation(line: 1325, column: 42, scope: !2521)
!2527 = !DILocation(line: 1325, column: 37, scope: !2521)
!2528 = !DILocation(line: 1325, column: 33, scope: !2521)
!2529 = !DILocation(line: 1327, column: 39, scope: !2521)
!2530 = !DILocation(line: 1327, column: 52, scope: !2521)
!2531 = !DILocation(line: 1327, column: 55, scope: !2521)
!2532 = !DILocation(line: 1327, column: 50, scope: !2521)
!2533 = !DILocation(line: 1327, column: 45, scope: !2521)
!2534 = !DILocation(line: 1327, column: 36, scope: !2521)
!2535 = !DILocation(line: 1327, column: 25, scope: !2521)
!2536 = !DILocation(line: 1327, column: 13, scope: !2521)
!2537 = !DILocation(line: 1327, column: 16, scope: !2521)
!2538 = !DILocation(line: 1327, column: 32, scope: !2521)
!2539 = !DILocation(line: 1328, column: 9, scope: !2521)
!2540 = !DILocation(line: 1324, column: 39, scope: !2541)
!2541 = !DILexicalBlockFile(scope: !2515, file: !945, discriminator: 2)
!2542 = !DILocation(line: 1324, column: 9, scope: !2541)
!2543 = distinct !{!2543, !2544}
!2544 = !DILocation(line: 1324, column: 9, scope: !2505)
!2545 = !DILocation(line: 1328, column: 9, scope: !2546)
!2546 = !DILexicalBlockFile(scope: !2511, file: !945, discriminator: 1)
!2547 = !DILocation(line: 1323, column: 36, scope: !2548)
!2548 = !DILexicalBlockFile(scope: !2505, file: !945, discriminator: 2)
!2549 = !DILocation(line: 1323, column: 5, scope: !2548)
!2550 = distinct !{!2550, !2551}
!2551 = !DILocation(line: 1323, column: 5, scope: !1721)
!2552 = !DILocation(line: 1330, column: 31, scope: !1721)
!2553 = !DILocation(line: 1330, column: 5, scope: !1721)
!2554 = !DILocation(line: 1332, column: 5, scope: !1721)
!2555 = !DILocation(line: 1334, column: 21, scope: !1721)
!2556 = !DILocation(line: 1334, column: 5, scope: !1721)
!2557 = !DILocation(line: 1335, column: 12, scope: !1721)
!2558 = !DILocation(line: 1335, column: 5, scope: !1721)
!2559 = !DILocation(line: 1336, column: 1, scope: !1721)
!2560 = distinct !DISubprogram(name: "svq3_decode_frame", scope: !945, file: !945, line: 1398, type: !1640, isLocal: true, isDefinition: true, scopeLine: 1400, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!2561 = !DILocalVariable(name: "avctx", arg: 1, scope: !2560, file: !945, line: 1398, type: !1036)
!2562 = !DILocation(line: 1398, column: 46, scope: !2560)
!2563 = !DILocalVariable(name: "data", arg: 2, scope: !2560, file: !945, line: 1398, type: !937)
!2564 = !DILocation(line: 1398, column: 59, scope: !2560)
!2565 = !DILocalVariable(name: "got_frame", arg: 3, scope: !2560, file: !945, line: 1399, type: !1327)
!2566 = !DILocation(line: 1399, column: 35, scope: !2560)
!2567 = !DILocalVariable(name: "avpkt", arg: 4, scope: !2560, file: !945, line: 1399, type: !1181)
!2568 = !DILocation(line: 1399, column: 56, scope: !2560)
!2569 = !DILocalVariable(name: "s", scope: !2560, file: !945, line: 1401, type: !1735)
!2570 = !DILocation(line: 1401, column: 18, scope: !2560)
!2571 = !DILocation(line: 1401, column: 22, scope: !2560)
!2572 = !DILocation(line: 1401, column: 29, scope: !2560)
!2573 = !DILocalVariable(name: "buf_size", scope: !2560, file: !945, line: 1402, type: !899)
!2574 = !DILocation(line: 1402, column: 9, scope: !2560)
!2575 = !DILocation(line: 1402, column: 20, scope: !2560)
!2576 = !DILocation(line: 1402, column: 27, scope: !2560)
!2577 = !DILocalVariable(name: "left", scope: !2560, file: !945, line: 1403, type: !899)
!2578 = !DILocation(line: 1403, column: 9, scope: !2560)
!2579 = !DILocalVariable(name: "buf", scope: !2560, file: !945, line: 1404, type: !928)
!2580 = !DILocation(line: 1404, column: 14, scope: !2560)
!2581 = !DILocalVariable(name: "ret", scope: !2560, file: !945, line: 1405, type: !899)
!2582 = !DILocation(line: 1405, column: 9, scope: !2560)
!2583 = !DILocalVariable(name: "m", scope: !2560, file: !945, line: 1405, type: !899)
!2584 = !DILocation(line: 1405, column: 14, scope: !2560)
!2585 = !DILocalVariable(name: "i", scope: !2560, file: !945, line: 1405, type: !899)
!2586 = !DILocation(line: 1405, column: 17, scope: !2560)
!2587 = !DILocation(line: 1408, column: 9, scope: !2588)
!2588 = distinct !DILexicalBlock(scope: !2560, file: !945, line: 1408, column: 9)
!2589 = !DILocation(line: 1408, column: 18, scope: !2588)
!2590 = !DILocation(line: 1408, column: 9, scope: !2560)
!2591 = !DILocation(line: 1409, column: 13, scope: !2592)
!2592 = distinct !DILexicalBlock(scope: !2593, file: !945, line: 1409, column: 13)
!2593 = distinct !DILexicalBlock(scope: !2588, file: !945, line: 1408, column: 24)
!2594 = !DILocation(line: 1409, column: 16, scope: !2592)
!2595 = !DILocation(line: 1409, column: 26, scope: !2592)
!2596 = !DILocation(line: 1409, column: 29, scope: !2592)
!2597 = !DILocation(line: 1409, column: 37, scope: !2592)
!2598 = !DILocation(line: 1409, column: 41, scope: !2599)
!2599 = !DILexicalBlockFile(scope: !2592, file: !945, discriminator: 1)
!2600 = !DILocation(line: 1409, column: 44, scope: !2599)
!2601 = !DILocation(line: 1409, column: 54, scope: !2599)
!2602 = !DILocation(line: 1409, column: 58, scope: !2603)
!2603 = !DILexicalBlockFile(scope: !2592, file: !945, discriminator: 2)
!2604 = !DILocation(line: 1409, column: 61, scope: !2603)
!2605 = !DILocation(line: 1409, column: 13, scope: !2603)
!2606 = !DILocation(line: 1410, column: 32, scope: !2607)
!2607 = distinct !DILexicalBlock(scope: !2592, file: !945, line: 1409, column: 80)
!2608 = !DILocation(line: 1410, column: 38, scope: !2607)
!2609 = !DILocation(line: 1410, column: 41, scope: !2607)
!2610 = !DILocation(line: 1410, column: 51, scope: !2607)
!2611 = !DILocation(line: 1410, column: 19, scope: !2607)
!2612 = !DILocation(line: 1410, column: 17, scope: !2607)
!2613 = !DILocation(line: 1411, column: 17, scope: !2614)
!2614 = distinct !DILexicalBlock(scope: !2607, file: !945, line: 1411, column: 17)
!2615 = !DILocation(line: 1411, column: 21, scope: !2614)
!2616 = !DILocation(line: 1411, column: 17, scope: !2607)
!2617 = !DILocation(line: 1412, column: 24, scope: !2614)
!2618 = !DILocation(line: 1412, column: 17, scope: !2614)
!2619 = !DILocation(line: 1413, column: 13, scope: !2607)
!2620 = !DILocation(line: 1413, column: 16, scope: !2607)
!2621 = !DILocation(line: 1413, column: 34, scope: !2607)
!2622 = !DILocation(line: 1414, column: 14, scope: !2607)
!2623 = !DILocation(line: 1414, column: 24, scope: !2607)
!2624 = !DILocation(line: 1415, column: 9, scope: !2607)
!2625 = !DILocation(line: 1416, column: 9, scope: !2593)
!2626 = !DILocation(line: 1419, column: 25, scope: !2560)
!2627 = !DILocation(line: 1419, column: 28, scope: !2560)
!2628 = !DILocation(line: 1419, column: 34, scope: !2560)
!2629 = !DILocation(line: 1419, column: 15, scope: !2560)
!2630 = !DILocation(line: 1419, column: 18, scope: !2560)
!2631 = !DILocation(line: 1419, column: 23, scope: !2560)
!2632 = !DILocation(line: 1419, column: 5, scope: !2560)
!2633 = !DILocation(line: 1419, column: 8, scope: !2560)
!2634 = !DILocation(line: 1419, column: 13, scope: !2560)
!2635 = !DILocation(line: 1421, column: 9, scope: !2636)
!2636 = distinct !DILexicalBlock(scope: !2560, file: !945, line: 1421, column: 9)
!2637 = !DILocation(line: 1421, column: 12, scope: !2636)
!2638 = !DILocation(line: 1421, column: 9, scope: !2560)
!2639 = !DILocation(line: 1422, column: 32, scope: !2640)
!2640 = distinct !DILexicalBlock(scope: !2636, file: !945, line: 1421, column: 27)
!2641 = !DILocation(line: 1422, column: 35, scope: !2640)
!2642 = !DILocation(line: 1422, column: 31, scope: !2640)
!2643 = !DILocation(line: 1422, column: 41, scope: !2640)
!2644 = !DILocation(line: 1422, column: 44, scope: !2640)
!2645 = !DILocation(line: 1422, column: 54, scope: !2640)
!2646 = !DILocation(line: 1422, column: 9, scope: !2640)
!2647 = !DILocation(line: 1423, column: 14, scope: !2648)
!2648 = distinct !DILexicalBlock(scope: !2640, file: !945, line: 1423, column: 13)
!2649 = !DILocation(line: 1423, column: 17, scope: !2648)
!2650 = !DILocation(line: 1423, column: 13, scope: !2640)
!2651 = !DILocation(line: 1424, column: 13, scope: !2648)
!2652 = !DILocation(line: 1425, column: 16, scope: !2640)
!2653 = !DILocation(line: 1425, column: 19, scope: !2640)
!2654 = !DILocation(line: 1425, column: 24, scope: !2640)
!2655 = !DILocation(line: 1425, column: 31, scope: !2640)
!2656 = !DILocation(line: 1425, column: 37, scope: !2640)
!2657 = !DILocation(line: 1425, column: 9, scope: !2640)
!2658 = !DILocation(line: 1426, column: 15, scope: !2640)
!2659 = !DILocation(line: 1426, column: 18, scope: !2640)
!2660 = !DILocation(line: 1426, column: 13, scope: !2640)
!2661 = !DILocation(line: 1427, column: 5, scope: !2640)
!2662 = !DILocation(line: 1428, column: 15, scope: !2663)
!2663 = distinct !DILexicalBlock(scope: !2636, file: !945, line: 1427, column: 12)
!2664 = !DILocation(line: 1428, column: 22, scope: !2663)
!2665 = !DILocation(line: 1428, column: 13, scope: !2663)
!2666 = !DILocation(line: 1431, column: 26, scope: !2560)
!2667 = !DILocation(line: 1431, column: 29, scope: !2560)
!2668 = !DILocation(line: 1431, column: 33, scope: !2560)
!2669 = !DILocation(line: 1431, column: 42, scope: !2560)
!2670 = !DILocation(line: 1431, column: 40, scope: !2560)
!2671 = !DILocation(line: 1431, column: 11, scope: !2560)
!2672 = !DILocation(line: 1431, column: 9, scope: !2560)
!2673 = !DILocation(line: 1432, column: 9, scope: !2674)
!2674 = distinct !DILexicalBlock(scope: !2560, file: !945, line: 1432, column: 9)
!2675 = !DILocation(line: 1432, column: 13, scope: !2674)
!2676 = !DILocation(line: 1432, column: 9, scope: !2560)
!2677 = !DILocation(line: 1433, column: 16, scope: !2674)
!2678 = !DILocation(line: 1433, column: 9, scope: !2674)
!2679 = !DILocation(line: 1435, column: 34, scope: !2680)
!2680 = distinct !DILexicalBlock(scope: !2560, file: !945, line: 1435, column: 9)
!2681 = !DILocation(line: 1435, column: 9, scope: !2680)
!2682 = !DILocation(line: 1435, column: 9, scope: !2560)
!2683 = !DILocation(line: 1436, column: 9, scope: !2680)
!2684 = !DILocation(line: 1438, column: 20, scope: !2560)
!2685 = !DILocation(line: 1438, column: 23, scope: !2560)
!2686 = !DILocation(line: 1438, column: 5, scope: !2560)
!2687 = !DILocation(line: 1438, column: 8, scope: !2560)
!2688 = !DILocation(line: 1438, column: 18, scope: !2560)
!2689 = !DILocation(line: 1440, column: 9, scope: !2690)
!2690 = distinct !DILexicalBlock(scope: !2560, file: !945, line: 1440, column: 9)
!2691 = !DILocation(line: 1440, column: 12, scope: !2690)
!2692 = !DILocation(line: 1440, column: 22, scope: !2690)
!2693 = !DILocation(line: 1440, column: 9, scope: !2560)
!2694 = !DILocation(line: 1441, column: 9, scope: !2690)
!2695 = distinct !{!2695, !2694}
!2696 = !DILocalVariable(name: "SWAP_tmp", scope: !2697, file: !945, line: 1441, type: !1909)
!2697 = distinct !DILexicalBlock(scope: !2690, file: !945, line: 1441, column: 11)
!2698 = !DILocation(line: 1441, column: 23, scope: !2697)
!2699 = !DILocation(line: 1441, column: 33, scope: !2700)
!2700 = !DILexicalBlockFile(scope: !2697, file: !945, discriminator: 1)
!2701 = !DILocation(line: 1441, column: 36, scope: !2700)
!2702 = !DILocation(line: 1441, column: 23, scope: !2700)
!2703 = !DILocation(line: 1441, column: 59, scope: !2700)
!2704 = !DILocation(line: 1441, column: 62, scope: !2700)
!2705 = !DILocation(line: 1441, column: 46, scope: !2700)
!2706 = !DILocation(line: 1441, column: 49, scope: !2700)
!2707 = !DILocation(line: 1441, column: 57, scope: !2700)
!2708 = !DILocation(line: 1441, column: 85, scope: !2700)
!2709 = !DILocation(line: 1441, column: 72, scope: !2700)
!2710 = !DILocation(line: 1441, column: 75, scope: !2700)
!2711 = !DILocation(line: 1441, column: 83, scope: !2700)
!2712 = !DILocation(line: 1441, column: 94, scope: !2700)
!2713 = !DILocation(line: 1441, column: 94, scope: !2714)
!2714 = !DILexicalBlockFile(scope: !2697, file: !945, discriminator: 2)
!2715 = !DILocation(line: 1443, column: 20, scope: !2560)
!2716 = !DILocation(line: 1443, column: 23, scope: !2560)
!2717 = !DILocation(line: 1443, column: 32, scope: !2560)
!2718 = !DILocation(line: 1443, column: 5, scope: !2560)
!2719 = !DILocation(line: 1446, column: 32, scope: !2560)
!2720 = !DILocation(line: 1446, column: 35, scope: !2560)
!2721 = !DILocation(line: 1446, column: 5, scope: !2560)
!2722 = !DILocation(line: 1446, column: 8, scope: !2560)
!2723 = !DILocation(line: 1446, column: 17, scope: !2560)
!2724 = !DILocation(line: 1446, column: 20, scope: !2560)
!2725 = !DILocation(line: 1446, column: 30, scope: !2560)
!2726 = !DILocation(line: 1447, column: 33, scope: !2560)
!2727 = !DILocation(line: 1447, column: 36, scope: !2560)
!2728 = !DILocation(line: 1447, column: 46, scope: !2560)
!2729 = !DILocation(line: 1447, column: 5, scope: !2560)
!2730 = !DILocation(line: 1447, column: 8, scope: !2560)
!2731 = !DILocation(line: 1447, column: 17, scope: !2560)
!2732 = !DILocation(line: 1447, column: 20, scope: !2560)
!2733 = !DILocation(line: 1447, column: 30, scope: !2560)
!2734 = !DILocation(line: 1449, column: 22, scope: !2560)
!2735 = !DILocation(line: 1449, column: 29, scope: !2560)
!2736 = !DILocation(line: 1449, column: 32, scope: !2560)
!2737 = !DILocation(line: 1449, column: 11, scope: !2560)
!2738 = !DILocation(line: 1449, column: 9, scope: !2560)
!2739 = !DILocation(line: 1450, column: 9, scope: !2740)
!2740 = distinct !DILexicalBlock(scope: !2560, file: !945, line: 1450, column: 9)
!2741 = !DILocation(line: 1450, column: 13, scope: !2740)
!2742 = !DILocation(line: 1450, column: 9, scope: !2560)
!2743 = !DILocation(line: 1451, column: 16, scope: !2740)
!2744 = !DILocation(line: 1451, column: 9, scope: !2740)
!2745 = !DILocation(line: 1453, column: 12, scope: !2746)
!2746 = distinct !DILexicalBlock(scope: !2560, file: !945, line: 1453, column: 5)
!2747 = !DILocation(line: 1453, column: 10, scope: !2746)
!2748 = !DILocation(line: 1453, column: 17, scope: !2749)
!2749 = !DILexicalBlockFile(scope: !2750, file: !945, discriminator: 1)
!2750 = distinct !DILexicalBlock(scope: !2746, file: !945, line: 1453, column: 5)
!2751 = !DILocation(line: 1453, column: 19, scope: !2749)
!2752 = !DILocation(line: 1453, column: 5, scope: !2749)
!2753 = !DILocation(line: 1454, column: 43, scope: !2754)
!2754 = distinct !DILexicalBlock(scope: !2750, file: !945, line: 1453, column: 30)
!2755 = !DILocation(line: 1454, column: 37, scope: !2754)
!2756 = !DILocation(line: 1454, column: 48, scope: !2754)
!2757 = !DILocation(line: 1454, column: 46, scope: !2754)
!2758 = !DILocation(line: 1454, column: 58, scope: !2754)
!2759 = !DILocation(line: 1454, column: 33, scope: !2754)
!2760 = !DILocation(line: 1454, column: 70, scope: !2754)
!2761 = !DILocation(line: 1454, column: 73, scope: !2754)
!2762 = !DILocation(line: 1454, column: 82, scope: !2754)
!2763 = !DILocation(line: 1454, column: 85, scope: !2754)
!2764 = !DILocation(line: 1454, column: 68, scope: !2754)
!2765 = !DILocation(line: 1454, column: 107, scope: !2754)
!2766 = !DILocation(line: 1454, column: 101, scope: !2754)
!2767 = !DILocation(line: 1454, column: 112, scope: !2754)
!2768 = !DILocation(line: 1454, column: 110, scope: !2754)
!2769 = !DILocation(line: 1454, column: 122, scope: !2754)
!2770 = !DILocation(line: 1454, column: 97, scope: !2754)
!2771 = !DILocation(line: 1454, column: 64, scope: !2754)
!2772 = !DILocation(line: 1454, column: 25, scope: !2754)
!2773 = !DILocation(line: 1454, column: 9, scope: !2754)
!2774 = !DILocation(line: 1454, column: 12, scope: !2754)
!2775 = !DILocation(line: 1454, column: 28, scope: !2754)
!2776 = !DILocation(line: 1455, column: 48, scope: !2754)
!2777 = !DILocation(line: 1455, column: 42, scope: !2754)
!2778 = !DILocation(line: 1455, column: 53, scope: !2754)
!2779 = !DILocation(line: 1455, column: 51, scope: !2754)
!2780 = !DILocation(line: 1455, column: 63, scope: !2754)
!2781 = !DILocation(line: 1455, column: 38, scope: !2754)
!2782 = !DILocation(line: 1455, column: 75, scope: !2754)
!2783 = !DILocation(line: 1455, column: 78, scope: !2754)
!2784 = !DILocation(line: 1455, column: 87, scope: !2754)
!2785 = !DILocation(line: 1455, column: 90, scope: !2754)
!2786 = !DILocation(line: 1455, column: 73, scope: !2754)
!2787 = !DILocation(line: 1455, column: 112, scope: !2754)
!2788 = !DILocation(line: 1455, column: 106, scope: !2754)
!2789 = !DILocation(line: 1455, column: 117, scope: !2754)
!2790 = !DILocation(line: 1455, column: 115, scope: !2754)
!2791 = !DILocation(line: 1455, column: 127, scope: !2754)
!2792 = !DILocation(line: 1455, column: 102, scope: !2754)
!2793 = !DILocation(line: 1455, column: 69, scope: !2754)
!2794 = !DILocation(line: 1455, column: 30, scope: !2754)
!2795 = !DILocation(line: 1455, column: 28, scope: !2754)
!2796 = !DILocation(line: 1455, column: 9, scope: !2754)
!2797 = !DILocation(line: 1455, column: 12, scope: !2754)
!2798 = !DILocation(line: 1455, column: 33, scope: !2754)
!2799 = !DILocation(line: 1456, column: 5, scope: !2754)
!2800 = !DILocation(line: 1453, column: 26, scope: !2801)
!2801 = !DILexicalBlockFile(scope: !2750, file: !945, discriminator: 2)
!2802 = !DILocation(line: 1453, column: 5, scope: !2801)
!2803 = distinct !{!2803, !2804}
!2804 = !DILocation(line: 1453, column: 5, scope: !2560)
!2805 = !DILocation(line: 1457, column: 12, scope: !2806)
!2806 = distinct !DILexicalBlock(scope: !2560, file: !945, line: 1457, column: 5)
!2807 = !DILocation(line: 1457, column: 10, scope: !2806)
!2808 = !DILocation(line: 1457, column: 17, scope: !2809)
!2809 = !DILexicalBlockFile(scope: !2810, file: !945, discriminator: 1)
!2810 = distinct !DILexicalBlock(scope: !2806, file: !945, line: 1457, column: 5)
!2811 = !DILocation(line: 1457, column: 19, scope: !2809)
!2812 = !DILocation(line: 1457, column: 5, scope: !2809)
!2813 = !DILocation(line: 1459, column: 48, scope: !2814)
!2814 = distinct !DILexicalBlock(scope: !2810, file: !945, line: 1457, column: 30)
!2815 = !DILocation(line: 1459, column: 42, scope: !2814)
!2816 = !DILocation(line: 1459, column: 53, scope: !2814)
!2817 = !DILocation(line: 1459, column: 51, scope: !2814)
!2818 = !DILocation(line: 1459, column: 63, scope: !2814)
!2819 = !DILocation(line: 1459, column: 38, scope: !2814)
!2820 = !DILocation(line: 1459, column: 75, scope: !2814)
!2821 = !DILocation(line: 1459, column: 78, scope: !2814)
!2822 = !DILocation(line: 1459, column: 87, scope: !2814)
!2823 = !DILocation(line: 1459, column: 90, scope: !2814)
!2824 = !DILocation(line: 1459, column: 73, scope: !2814)
!2825 = !DILocation(line: 1459, column: 112, scope: !2814)
!2826 = !DILocation(line: 1459, column: 106, scope: !2814)
!2827 = !DILocation(line: 1459, column: 117, scope: !2814)
!2828 = !DILocation(line: 1459, column: 115, scope: !2814)
!2829 = !DILocation(line: 1459, column: 127, scope: !2814)
!2830 = !DILocation(line: 1459, column: 102, scope: !2814)
!2831 = !DILocation(line: 1459, column: 69, scope: !2814)
!2832 = !DILocation(line: 1459, column: 30, scope: !2814)
!2833 = !DILocation(line: 1459, column: 28, scope: !2814)
!2834 = !DILocation(line: 1459, column: 9, scope: !2814)
!2835 = !DILocation(line: 1459, column: 12, scope: !2814)
!2836 = !DILocation(line: 1459, column: 33, scope: !2814)
!2837 = !DILocation(line: 1458, column: 30, scope: !2814)
!2838 = !DILocation(line: 1458, column: 28, scope: !2814)
!2839 = !DILocation(line: 1458, column: 9, scope: !2814)
!2840 = !DILocation(line: 1458, column: 12, scope: !2814)
!2841 = !DILocation(line: 1458, column: 33, scope: !2814)
!2842 = !DILocation(line: 1461, column: 53, scope: !2814)
!2843 = !DILocation(line: 1461, column: 47, scope: !2814)
!2844 = !DILocation(line: 1461, column: 58, scope: !2814)
!2845 = !DILocation(line: 1461, column: 56, scope: !2814)
!2846 = !DILocation(line: 1461, column: 68, scope: !2814)
!2847 = !DILocation(line: 1461, column: 43, scope: !2814)
!2848 = !DILocation(line: 1461, column: 80, scope: !2814)
!2849 = !DILocation(line: 1461, column: 83, scope: !2814)
!2850 = !DILocation(line: 1461, column: 92, scope: !2814)
!2851 = !DILocation(line: 1461, column: 95, scope: !2814)
!2852 = !DILocation(line: 1461, column: 78, scope: !2814)
!2853 = !DILocation(line: 1461, column: 117, scope: !2814)
!2854 = !DILocation(line: 1461, column: 111, scope: !2814)
!2855 = !DILocation(line: 1461, column: 122, scope: !2814)
!2856 = !DILocation(line: 1461, column: 120, scope: !2814)
!2857 = !DILocation(line: 1461, column: 132, scope: !2814)
!2858 = !DILocation(line: 1461, column: 107, scope: !2814)
!2859 = !DILocation(line: 1461, column: 74, scope: !2814)
!2860 = !DILocation(line: 1461, column: 35, scope: !2814)
!2861 = !DILocation(line: 1461, column: 33, scope: !2814)
!2862 = !DILocation(line: 1461, column: 9, scope: !2814)
!2863 = !DILocation(line: 1461, column: 12, scope: !2814)
!2864 = !DILocation(line: 1461, column: 38, scope: !2814)
!2865 = !DILocation(line: 1460, column: 35, scope: !2814)
!2866 = !DILocation(line: 1460, column: 33, scope: !2814)
!2867 = !DILocation(line: 1460, column: 9, scope: !2814)
!2868 = !DILocation(line: 1460, column: 12, scope: !2814)
!2869 = !DILocation(line: 1460, column: 38, scope: !2814)
!2870 = !DILocation(line: 1462, column: 5, scope: !2814)
!2871 = !DILocation(line: 1457, column: 26, scope: !2872)
!2872 = !DILexicalBlockFile(scope: !2810, file: !945, discriminator: 2)
!2873 = !DILocation(line: 1457, column: 5, scope: !2872)
!2874 = distinct !{!2874, !2875}
!2875 = !DILocation(line: 1457, column: 5, scope: !2560)
!2876 = !DILocation(line: 1464, column: 9, scope: !2877)
!2877 = distinct !DILexicalBlock(scope: !2560, file: !945, line: 1464, column: 9)
!2878 = !DILocation(line: 1464, column: 12, scope: !2877)
!2879 = !DILocation(line: 1464, column: 22, scope: !2877)
!2880 = !DILocation(line: 1464, column: 9, scope: !2560)
!2881 = !DILocation(line: 1465, column: 14, scope: !2882)
!2882 = distinct !DILexicalBlock(scope: !2883, file: !945, line: 1465, column: 13)
!2883 = distinct !DILexicalBlock(scope: !2877, file: !945, line: 1464, column: 44)
!2884 = !DILocation(line: 1465, column: 17, scope: !2882)
!2885 = !DILocation(line: 1465, column: 27, scope: !2882)
!2886 = !DILocation(line: 1465, column: 30, scope: !2882)
!2887 = !DILocation(line: 1465, column: 13, scope: !2883)
!2888 = !DILocation(line: 1466, column: 20, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2882, file: !945, line: 1465, column: 39)
!2890 = !DILocation(line: 1466, column: 13, scope: !2889)
!2891 = !DILocation(line: 1467, column: 28, scope: !2889)
!2892 = !DILocation(line: 1467, column: 31, scope: !2889)
!2893 = !DILocation(line: 1467, column: 41, scope: !2889)
!2894 = !DILocation(line: 1467, column: 13, scope: !2889)
!2895 = !DILocation(line: 1468, column: 30, scope: !2889)
!2896 = !DILocation(line: 1468, column: 37, scope: !2889)
!2897 = !DILocation(line: 1468, column: 40, scope: !2889)
!2898 = !DILocation(line: 1468, column: 19, scope: !2889)
!2899 = !DILocation(line: 1468, column: 17, scope: !2889)
!2900 = !DILocation(line: 1469, column: 17, scope: !2901)
!2901 = distinct !DILexicalBlock(scope: !2889, file: !945, line: 1469, column: 17)
!2902 = !DILocation(line: 1469, column: 21, scope: !2901)
!2903 = !DILocation(line: 1469, column: 17, scope: !2889)
!2904 = !DILocation(line: 1470, column: 24, scope: !2901)
!2905 = !DILocation(line: 1470, column: 17, scope: !2901)
!2906 = !DILocation(line: 1471, column: 20, scope: !2889)
!2907 = !DILocation(line: 1471, column: 23, scope: !2889)
!2908 = !DILocation(line: 1471, column: 33, scope: !2889)
!2909 = !DILocation(line: 1471, column: 36, scope: !2889)
!2910 = !DILocation(line: 1471, column: 48, scope: !2889)
!2911 = !DILocation(line: 1471, column: 55, scope: !2889)
!2912 = !DILocation(line: 1471, column: 64, scope: !2889)
!2913 = !DILocation(line: 1471, column: 67, scope: !2889)
!2914 = !DILocation(line: 1471, column: 77, scope: !2889)
!2915 = !DILocation(line: 1471, column: 80, scope: !2889)
!2916 = !DILocation(line: 1471, column: 62, scope: !2889)
!2917 = !DILocation(line: 1471, column: 13, scope: !2889)
!2918 = !DILocation(line: 1472, column: 20, scope: !2889)
!2919 = !DILocation(line: 1472, column: 23, scope: !2889)
!2920 = !DILocation(line: 1472, column: 33, scope: !2889)
!2921 = !DILocation(line: 1472, column: 36, scope: !2889)
!2922 = !DILocation(line: 1472, column: 52, scope: !2889)
!2923 = !DILocation(line: 1472, column: 59, scope: !2889)
!2924 = !DILocation(line: 1472, column: 66, scope: !2889)
!2925 = !DILocation(line: 1473, column: 20, scope: !2889)
!2926 = !DILocation(line: 1473, column: 23, scope: !2889)
!2927 = !DILocation(line: 1473, column: 33, scope: !2889)
!2928 = !DILocation(line: 1473, column: 36, scope: !2889)
!2929 = !DILocation(line: 1472, column: 71, scope: !2889)
!2930 = !DILocation(line: 1472, column: 51, scope: !2889)
!2931 = !DILocation(line: 1472, column: 13, scope: !2889)
!2932 = !DILocation(line: 1474, column: 20, scope: !2889)
!2933 = !DILocation(line: 1474, column: 23, scope: !2889)
!2934 = !DILocation(line: 1474, column: 33, scope: !2889)
!2935 = !DILocation(line: 1474, column: 36, scope: !2889)
!2936 = !DILocation(line: 1474, column: 52, scope: !2889)
!2937 = !DILocation(line: 1474, column: 59, scope: !2889)
!2938 = !DILocation(line: 1474, column: 66, scope: !2889)
!2939 = !DILocation(line: 1475, column: 20, scope: !2889)
!2940 = !DILocation(line: 1475, column: 23, scope: !2889)
!2941 = !DILocation(line: 1475, column: 33, scope: !2889)
!2942 = !DILocation(line: 1475, column: 36, scope: !2889)
!2943 = !DILocation(line: 1474, column: 71, scope: !2889)
!2944 = !DILocation(line: 1474, column: 51, scope: !2889)
!2945 = !DILocation(line: 1474, column: 13, scope: !2889)
!2946 = !DILocation(line: 1476, column: 9, scope: !2889)
!2947 = !DILocation(line: 1478, column: 13, scope: !2948)
!2948 = distinct !DILexicalBlock(scope: !2883, file: !945, line: 1478, column: 13)
!2949 = !DILocation(line: 1478, column: 16, scope: !2948)
!2950 = !DILocation(line: 1478, column: 26, scope: !2948)
!2951 = !DILocation(line: 1478, column: 47, scope: !2948)
!2952 = !DILocation(line: 1478, column: 51, scope: !2953)
!2953 = !DILexicalBlockFile(scope: !2948, file: !945, discriminator: 1)
!2954 = !DILocation(line: 1478, column: 54, scope: !2953)
!2955 = !DILocation(line: 1478, column: 64, scope: !2953)
!2956 = !DILocation(line: 1478, column: 67, scope: !2953)
!2957 = !DILocation(line: 1478, column: 13, scope: !2953)
!2958 = !DILocation(line: 1479, column: 20, scope: !2959)
!2959 = distinct !DILexicalBlock(scope: !2948, file: !945, line: 1478, column: 76)
!2960 = !DILocation(line: 1479, column: 13, scope: !2959)
!2961 = !DILocation(line: 1480, column: 28, scope: !2959)
!2962 = !DILocation(line: 1480, column: 31, scope: !2959)
!2963 = !DILocation(line: 1480, column: 41, scope: !2959)
!2964 = !DILocation(line: 1480, column: 13, scope: !2959)
!2965 = !DILocation(line: 1481, column: 30, scope: !2959)
!2966 = !DILocation(line: 1481, column: 37, scope: !2959)
!2967 = !DILocation(line: 1481, column: 40, scope: !2959)
!2968 = !DILocation(line: 1481, column: 19, scope: !2959)
!2969 = !DILocation(line: 1481, column: 17, scope: !2959)
!2970 = !DILocation(line: 1482, column: 17, scope: !2971)
!2971 = distinct !DILexicalBlock(scope: !2959, file: !945, line: 1482, column: 17)
!2972 = !DILocation(line: 1482, column: 21, scope: !2971)
!2973 = !DILocation(line: 1482, column: 17, scope: !2959)
!2974 = !DILocation(line: 1483, column: 24, scope: !2971)
!2975 = !DILocation(line: 1483, column: 17, scope: !2971)
!2976 = !DILocation(line: 1484, column: 20, scope: !2959)
!2977 = !DILocation(line: 1484, column: 23, scope: !2959)
!2978 = !DILocation(line: 1484, column: 33, scope: !2959)
!2979 = !DILocation(line: 1484, column: 36, scope: !2959)
!2980 = !DILocation(line: 1484, column: 48, scope: !2959)
!2981 = !DILocation(line: 1484, column: 55, scope: !2959)
!2982 = !DILocation(line: 1484, column: 64, scope: !2959)
!2983 = !DILocation(line: 1484, column: 67, scope: !2959)
!2984 = !DILocation(line: 1484, column: 77, scope: !2959)
!2985 = !DILocation(line: 1484, column: 80, scope: !2959)
!2986 = !DILocation(line: 1484, column: 62, scope: !2959)
!2987 = !DILocation(line: 1484, column: 13, scope: !2959)
!2988 = !DILocation(line: 1485, column: 20, scope: !2959)
!2989 = !DILocation(line: 1485, column: 23, scope: !2959)
!2990 = !DILocation(line: 1485, column: 33, scope: !2959)
!2991 = !DILocation(line: 1485, column: 36, scope: !2959)
!2992 = !DILocation(line: 1485, column: 52, scope: !2959)
!2993 = !DILocation(line: 1485, column: 59, scope: !2959)
!2994 = !DILocation(line: 1485, column: 66, scope: !2959)
!2995 = !DILocation(line: 1486, column: 20, scope: !2959)
!2996 = !DILocation(line: 1486, column: 23, scope: !2959)
!2997 = !DILocation(line: 1486, column: 33, scope: !2959)
!2998 = !DILocation(line: 1486, column: 36, scope: !2959)
!2999 = !DILocation(line: 1485, column: 71, scope: !2959)
!3000 = !DILocation(line: 1485, column: 51, scope: !2959)
!3001 = !DILocation(line: 1485, column: 13, scope: !2959)
!3002 = !DILocation(line: 1487, column: 20, scope: !2959)
!3003 = !DILocation(line: 1487, column: 23, scope: !2959)
!3004 = !DILocation(line: 1487, column: 33, scope: !2959)
!3005 = !DILocation(line: 1487, column: 36, scope: !2959)
!3006 = !DILocation(line: 1487, column: 52, scope: !2959)
!3007 = !DILocation(line: 1487, column: 59, scope: !2959)
!3008 = !DILocation(line: 1487, column: 66, scope: !2959)
!3009 = !DILocation(line: 1488, column: 20, scope: !2959)
!3010 = !DILocation(line: 1488, column: 23, scope: !2959)
!3011 = !DILocation(line: 1488, column: 33, scope: !2959)
!3012 = !DILocation(line: 1488, column: 36, scope: !2959)
!3013 = !DILocation(line: 1487, column: 71, scope: !2959)
!3014 = !DILocation(line: 1487, column: 51, scope: !2959)
!3015 = !DILocation(line: 1487, column: 13, scope: !2959)
!3016 = !DILocation(line: 1489, column: 9, scope: !2959)
!3017 = !DILocation(line: 1490, column: 5, scope: !2883)
!3018 = !DILocation(line: 1492, column: 9, scope: !3019)
!3019 = distinct !DILexicalBlock(scope: !2560, file: !945, line: 1492, column: 9)
!3020 = !DILocation(line: 1492, column: 16, scope: !3019)
!3021 = !DILocation(line: 1492, column: 22, scope: !3019)
!3022 = !DILocation(line: 1492, column: 9, scope: !2560)
!3023 = !DILocation(line: 1493, column: 16, scope: !3019)
!3024 = !DILocation(line: 1493, column: 19, scope: !3019)
!3025 = !DILocation(line: 1495, column: 41, scope: !3019)
!3026 = !DILocation(line: 1495, column: 44, scope: !3019)
!3027 = !DILocation(line: 1495, column: 16, scope: !3019)
!3028 = !DILocation(line: 1496, column: 16, scope: !3019)
!3029 = !DILocation(line: 1496, column: 19, scope: !3019)
!3030 = !DILocation(line: 1496, column: 33, scope: !3019)
!3031 = !DILocation(line: 1496, column: 36, scope: !3019)
!3032 = !DILocation(line: 1497, column: 16, scope: !3019)
!3033 = !DILocation(line: 1497, column: 19, scope: !3019)
!3034 = !DILocation(line: 1497, column: 35, scope: !3019)
!3035 = !DILocation(line: 1497, column: 38, scope: !3019)
!3036 = !DILocation(line: 1497, column: 46, scope: !3019)
!3037 = !DILocation(line: 1497, column: 49, scope: !3019)
!3038 = !DILocation(line: 1493, column: 9, scope: !3019)
!3039 = !DILocation(line: 1499, column: 9, scope: !3040)
!3040 = distinct !DILexicalBlock(scope: !2560, file: !945, line: 1499, column: 9)
!3041 = !DILocation(line: 1499, column: 16, scope: !3040)
!3042 = !DILocation(line: 1499, column: 27, scope: !3040)
!3043 = !DILocation(line: 1499, column: 47, scope: !3040)
!3044 = !DILocation(line: 1499, column: 50, scope: !3045)
!3045 = !DILexicalBlockFile(scope: !3040, file: !945, discriminator: 1)
!3046 = !DILocation(line: 1499, column: 53, scope: !3045)
!3047 = !DILocation(line: 1499, column: 63, scope: !3045)
!3048 = !DILocation(line: 1499, column: 84, scope: !3045)
!3049 = !DILocation(line: 1500, column: 9, scope: !3040)
!3050 = !DILocation(line: 1500, column: 16, scope: !3040)
!3051 = !DILocation(line: 1500, column: 27, scope: !3040)
!3052 = !DILocation(line: 1500, column: 47, scope: !3040)
!3053 = !DILocation(line: 1500, column: 50, scope: !3045)
!3054 = !DILocation(line: 1500, column: 53, scope: !3045)
!3055 = !DILocation(line: 1500, column: 63, scope: !3045)
!3056 = !DILocation(line: 1500, column: 84, scope: !3045)
!3057 = !DILocation(line: 1501, column: 9, scope: !3040)
!3058 = !DILocation(line: 1501, column: 16, scope: !3040)
!3059 = !DILocation(line: 1501, column: 27, scope: !3040)
!3060 = !DILocation(line: 1499, column: 9, scope: !3061)
!3061 = !DILexicalBlockFile(scope: !2560, file: !945, discriminator: 2)
!3062 = !DILocation(line: 1502, column: 9, scope: !3040)
!3063 = !DILocation(line: 1504, column: 9, scope: !3064)
!3064 = distinct !DILexicalBlock(scope: !2560, file: !945, line: 1504, column: 9)
!3065 = !DILocation(line: 1504, column: 12, scope: !3064)
!3066 = !DILocation(line: 1504, column: 9, scope: !2560)
!3067 = !DILocation(line: 1505, column: 13, scope: !3068)
!3068 = distinct !DILexicalBlock(scope: !3069, file: !945, line: 1505, column: 13)
!3069 = distinct !DILexicalBlock(scope: !3064, file: !945, line: 1504, column: 34)
!3070 = !DILocation(line: 1505, column: 16, scope: !3068)
!3071 = !DILocation(line: 1505, column: 26, scope: !3068)
!3072 = !DILocation(line: 1505, column: 13, scope: !3069)
!3073 = !DILocation(line: 1506, column: 13, scope: !3068)
!3074 = !DILocation(line: 1508, column: 13, scope: !3068)
!3075 = !DILocation(line: 1508, column: 16, scope: !3068)
!3076 = !DILocation(line: 1508, column: 37, scope: !3068)
!3077 = !DILocation(line: 1509, column: 5, scope: !3069)
!3078 = !DILocation(line: 1511, column: 9, scope: !3079)
!3079 = distinct !DILexicalBlock(scope: !2560, file: !945, line: 1511, column: 9)
!3080 = !DILocation(line: 1511, column: 12, scope: !3079)
!3081 = !DILocation(line: 1511, column: 22, scope: !3079)
!3082 = !DILocation(line: 1511, column: 9, scope: !2560)
!3083 = !DILocation(line: 1512, column: 31, scope: !3084)
!3084 = distinct !DILexicalBlock(scope: !3079, file: !945, line: 1511, column: 44)
!3085 = !DILocation(line: 1512, column: 34, scope: !3084)
!3086 = !DILocation(line: 1512, column: 46, scope: !3084)
!3087 = !DILocation(line: 1512, column: 49, scope: !3084)
!3088 = !DILocation(line: 1512, column: 44, scope: !3084)
!3089 = !DILocation(line: 1512, column: 9, scope: !3084)
!3090 = !DILocation(line: 1512, column: 12, scope: !3084)
!3091 = !DILocation(line: 1512, column: 29, scope: !3084)
!3092 = !DILocation(line: 1514, column: 13, scope: !3093)
!3093 = distinct !DILexicalBlock(scope: !3084, file: !945, line: 1514, column: 13)
!3094 = !DILocation(line: 1514, column: 16, scope: !3093)
!3095 = !DILocation(line: 1514, column: 33, scope: !3093)
!3096 = !DILocation(line: 1514, column: 13, scope: !3084)
!3097 = !DILocation(line: 1515, column: 13, scope: !3093)
!3098 = !DILocation(line: 1515, column: 16, scope: !3093)
!3099 = !DILocation(line: 1515, column: 33, scope: !3093)
!3100 = !DILocation(line: 1516, column: 13, scope: !3101)
!3101 = distinct !DILexicalBlock(scope: !3084, file: !945, line: 1516, column: 13)
!3102 = !DILocation(line: 1516, column: 16, scope: !3101)
!3103 = !DILocation(line: 1516, column: 33, scope: !3101)
!3104 = !DILocation(line: 1516, column: 38, scope: !3101)
!3105 = !DILocation(line: 1517, column: 13, scope: !3101)
!3106 = !DILocation(line: 1517, column: 16, scope: !3101)
!3107 = !DILocation(line: 1517, column: 36, scope: !3101)
!3108 = !DILocation(line: 1517, column: 39, scope: !3101)
!3109 = !DILocation(line: 1517, column: 33, scope: !3101)
!3110 = !DILocation(line: 1516, column: 13, scope: !3111)
!3111 = !DILexicalBlockFile(scope: !3084, file: !945, discriminator: 1)
!3112 = !DILocation(line: 1518, column: 20, scope: !3113)
!3113 = distinct !DILexicalBlock(scope: !3101, file: !945, line: 1517, column: 62)
!3114 = !DILocation(line: 1518, column: 23, scope: !3113)
!3115 = !DILocation(line: 1518, column: 13, scope: !3113)
!3116 = !DILocation(line: 1519, column: 13, scope: !3113)
!3117 = !DILocation(line: 1521, column: 5, scope: !3084)
!3118 = !DILocation(line: 1522, column: 29, scope: !3119)
!3119 = distinct !DILexicalBlock(scope: !3079, file: !945, line: 1521, column: 12)
!3120 = !DILocation(line: 1522, column: 32, scope: !3119)
!3121 = !DILocation(line: 1522, column: 9, scope: !3119)
!3122 = !DILocation(line: 1522, column: 12, scope: !3119)
!3123 = !DILocation(line: 1522, column: 27, scope: !3119)
!3124 = !DILocation(line: 1523, column: 24, scope: !3119)
!3125 = !DILocation(line: 1523, column: 27, scope: !3119)
!3126 = !DILocation(line: 1523, column: 9, scope: !3119)
!3127 = !DILocation(line: 1523, column: 12, scope: !3119)
!3128 = !DILocation(line: 1523, column: 22, scope: !3119)
!3129 = !DILocation(line: 1524, column: 36, scope: !3119)
!3130 = !DILocation(line: 1524, column: 39, scope: !3119)
!3131 = !DILocation(line: 1524, column: 51, scope: !3119)
!3132 = !DILocation(line: 1524, column: 54, scope: !3119)
!3133 = !DILocation(line: 1524, column: 49, scope: !3119)
!3134 = !DILocation(line: 1524, column: 9, scope: !3119)
!3135 = !DILocation(line: 1524, column: 12, scope: !3119)
!3136 = !DILocation(line: 1524, column: 34, scope: !3119)
!3137 = !DILocation(line: 1526, column: 13, scope: !3138)
!3138 = distinct !DILexicalBlock(scope: !3119, file: !945, line: 1526, column: 13)
!3139 = !DILocation(line: 1526, column: 16, scope: !3138)
!3140 = !DILocation(line: 1526, column: 38, scope: !3138)
!3141 = !DILocation(line: 1526, column: 13, scope: !3119)
!3142 = !DILocation(line: 1527, column: 13, scope: !3138)
!3143 = !DILocation(line: 1527, column: 16, scope: !3138)
!3144 = !DILocation(line: 1527, column: 38, scope: !3138)
!3145 = !DILocation(line: 1530, column: 12, scope: !3146)
!3146 = distinct !DILexicalBlock(scope: !2560, file: !945, line: 1530, column: 5)
!3147 = !DILocation(line: 1530, column: 10, scope: !3146)
!3148 = !DILocation(line: 1530, column: 17, scope: !3149)
!3149 = !DILexicalBlockFile(scope: !3150, file: !945, discriminator: 1)
!3150 = distinct !DILexicalBlock(scope: !3146, file: !945, line: 1530, column: 5)
!3151 = !DILocation(line: 1530, column: 19, scope: !3149)
!3152 = !DILocation(line: 1530, column: 5, scope: !3149)
!3153 = !DILocalVariable(name: "i", scope: !3154, file: !945, line: 1531, type: !899)
!3154 = distinct !DILexicalBlock(scope: !3150, file: !945, line: 1530, column: 29)
!3155 = !DILocation(line: 1531, column: 13, scope: !3154)
!3156 = !DILocation(line: 1532, column: 16, scope: !3157)
!3157 = distinct !DILexicalBlock(scope: !3154, file: !945, line: 1532, column: 9)
!3158 = !DILocation(line: 1532, column: 14, scope: !3157)
!3159 = !DILocation(line: 1532, column: 21, scope: !3160)
!3160 = !DILexicalBlockFile(scope: !3161, file: !945, discriminator: 1)
!3161 = distinct !DILexicalBlock(scope: !3157, file: !945, line: 1532, column: 9)
!3162 = !DILocation(line: 1532, column: 23, scope: !3160)
!3163 = !DILocation(line: 1532, column: 9, scope: !3160)
!3164 = !DILocalVariable(name: "j", scope: !3165, file: !945, line: 1533, type: !899)
!3165 = distinct !DILexicalBlock(scope: !3161, file: !945, line: 1532, column: 33)
!3166 = !DILocation(line: 1533, column: 17, scope: !3165)
!3167 = !DILocation(line: 1534, column: 20, scope: !3168)
!3168 = distinct !DILexicalBlock(scope: !3165, file: !945, line: 1534, column: 13)
!3169 = !DILocation(line: 1534, column: 18, scope: !3168)
!3170 = !DILocation(line: 1534, column: 26, scope: !3171)
!3171 = !DILexicalBlockFile(scope: !3172, file: !945, discriminator: 1)
!3172 = distinct !DILexicalBlock(scope: !3168, file: !945, line: 1534, column: 13)
!3173 = !DILocation(line: 1534, column: 28, scope: !3171)
!3174 = !DILocation(line: 1534, column: 13, scope: !3171)
!3175 = !DILocation(line: 1535, column: 33, scope: !3172)
!3176 = !DILocation(line: 1535, column: 48, scope: !3172)
!3177 = !DILocation(line: 1535, column: 46, scope: !3172)
!3178 = !DILocation(line: 1535, column: 42, scope: !3172)
!3179 = !DILocation(line: 1535, column: 52, scope: !3172)
!3180 = !DILocation(line: 1535, column: 50, scope: !3172)
!3181 = !DILocation(line: 1535, column: 17, scope: !3172)
!3182 = !DILocation(line: 1535, column: 30, scope: !3172)
!3183 = !DILocation(line: 1535, column: 20, scope: !3172)
!3184 = !DILocation(line: 1535, column: 55, scope: !3172)
!3185 = !DILocation(line: 1534, column: 34, scope: !3186)
!3186 = !DILexicalBlockFile(scope: !3172, file: !945, discriminator: 2)
!3187 = !DILocation(line: 1534, column: 13, scope: !3186)
!3188 = distinct !{!3188, !3189}
!3189 = !DILocation(line: 1534, column: 13, scope: !3165)
!3190 = !DILocation(line: 1536, column: 17, scope: !3191)
!3191 = distinct !DILexicalBlock(scope: !3165, file: !945, line: 1536, column: 17)
!3192 = !DILocation(line: 1536, column: 19, scope: !3191)
!3193 = !DILocation(line: 1536, column: 17, scope: !3165)
!3194 = !DILocation(line: 1537, column: 33, scope: !3191)
!3195 = !DILocation(line: 1537, column: 48, scope: !3191)
!3196 = !DILocation(line: 1537, column: 46, scope: !3191)
!3197 = !DILocation(line: 1537, column: 42, scope: !3191)
!3198 = !DILocation(line: 1537, column: 52, scope: !3191)
!3199 = !DILocation(line: 1537, column: 50, scope: !3191)
!3200 = !DILocation(line: 1537, column: 17, scope: !3191)
!3201 = !DILocation(line: 1537, column: 30, scope: !3191)
!3202 = !DILocation(line: 1537, column: 20, scope: !3191)
!3203 = !DILocation(line: 1537, column: 55, scope: !3191)
!3204 = !DILocation(line: 1538, column: 9, scope: !3165)
!3205 = !DILocation(line: 1532, column: 29, scope: !3206)
!3206 = !DILexicalBlockFile(scope: !3161, file: !945, discriminator: 2)
!3207 = !DILocation(line: 1532, column: 9, scope: !3206)
!3208 = distinct !{!3208, !3209}
!3209 = !DILocation(line: 1532, column: 9, scope: !3154)
!3210 = !DILocation(line: 1539, column: 5, scope: !3154)
!3211 = !DILocation(line: 1530, column: 25, scope: !3212)
!3212 = !DILexicalBlockFile(scope: !3150, file: !945, discriminator: 2)
!3213 = !DILocation(line: 1530, column: 5, scope: !3212)
!3214 = distinct !{!3214, !3215}
!3215 = !DILocation(line: 1530, column: 5, scope: !2560)
!3216 = !DILocation(line: 1541, column: 10, scope: !3217)
!3217 = distinct !DILexicalBlock(scope: !2560, file: !945, line: 1541, column: 5)
!3218 = !DILocation(line: 1541, column: 13, scope: !3217)
!3219 = !DILocation(line: 1541, column: 18, scope: !3217)
!3220 = !DILocation(line: 1541, column: 23, scope: !3221)
!3221 = !DILexicalBlockFile(scope: !3222, file: !945, discriminator: 1)
!3222 = distinct !DILexicalBlock(scope: !3217, file: !945, line: 1541, column: 5)
!3223 = !DILocation(line: 1541, column: 26, scope: !3221)
!3224 = !DILocation(line: 1541, column: 33, scope: !3221)
!3225 = !DILocation(line: 1541, column: 36, scope: !3221)
!3226 = !DILocation(line: 1541, column: 31, scope: !3221)
!3227 = !DILocation(line: 1541, column: 5, scope: !3221)
!3228 = !DILocation(line: 1542, column: 14, scope: !3229)
!3229 = distinct !DILexicalBlock(scope: !3230, file: !945, line: 1542, column: 9)
!3230 = distinct !DILexicalBlock(scope: !3222, file: !945, line: 1541, column: 58)
!3231 = !DILocation(line: 1542, column: 17, scope: !3229)
!3232 = !DILocation(line: 1542, column: 22, scope: !3229)
!3233 = !DILocation(line: 1542, column: 27, scope: !3234)
!3234 = !DILexicalBlockFile(scope: !3235, file: !945, discriminator: 1)
!3235 = distinct !DILexicalBlock(scope: !3229, file: !945, line: 1542, column: 9)
!3236 = !DILocation(line: 1542, column: 30, scope: !3234)
!3237 = !DILocation(line: 1542, column: 37, scope: !3234)
!3238 = !DILocation(line: 1542, column: 40, scope: !3234)
!3239 = !DILocation(line: 1542, column: 35, scope: !3234)
!3240 = !DILocation(line: 1542, column: 9, scope: !3234)
!3241 = !DILocalVariable(name: "mb_type", scope: !3242, file: !945, line: 1543, type: !898)
!3242 = distinct !DILexicalBlock(scope: !3235, file: !945, line: 1542, column: 61)
!3243 = !DILocation(line: 1543, column: 22, scope: !3242)
!3244 = !DILocation(line: 1544, column: 24, scope: !3242)
!3245 = !DILocation(line: 1544, column: 27, scope: !3242)
!3246 = !DILocation(line: 1544, column: 34, scope: !3242)
!3247 = !DILocation(line: 1544, column: 37, scope: !3242)
!3248 = !DILocation(line: 1544, column: 44, scope: !3242)
!3249 = !DILocation(line: 1544, column: 47, scope: !3242)
!3250 = !DILocation(line: 1544, column: 42, scope: !3242)
!3251 = !DILocation(line: 1544, column: 32, scope: !3242)
!3252 = !DILocation(line: 1544, column: 13, scope: !3242)
!3253 = !DILocation(line: 1544, column: 16, scope: !3242)
!3254 = !DILocation(line: 1544, column: 22, scope: !3242)
!3255 = !DILocation(line: 1546, column: 33, scope: !3256)
!3256 = distinct !DILexicalBlock(scope: !3242, file: !945, line: 1546, column: 17)
!3257 = !DILocation(line: 1546, column: 36, scope: !3256)
!3258 = !DILocation(line: 1546, column: 18, scope: !3256)
!3259 = !DILocation(line: 1546, column: 47, scope: !3256)
!3260 = !DILocation(line: 1546, column: 17, scope: !3242)
!3261 = !DILocation(line: 1547, column: 39, scope: !3262)
!3262 = distinct !DILexicalBlock(scope: !3263, file: !945, line: 1547, column: 21)
!3263 = distinct !DILexicalBlock(scope: !3256, file: !945, line: 1546, column: 53)
!3264 = !DILocation(line: 1547, column: 42, scope: !3262)
!3265 = !DILocation(line: 1547, column: 23, scope: !3262)
!3266 = !DILocation(line: 1547, column: 52, scope: !3262)
!3267 = !DILocation(line: 1547, column: 57, scope: !3262)
!3268 = !DILocation(line: 1547, column: 62, scope: !3262)
!3269 = !DILocation(line: 1548, column: 32, scope: !3262)
!3270 = !DILocation(line: 1548, column: 35, scope: !3262)
!3271 = !DILocation(line: 1548, column: 60, scope: !3262)
!3272 = !DILocation(line: 1548, column: 63, scope: !3262)
!3273 = !DILocation(line: 1548, column: 45, scope: !3262)
!3274 = !DILocation(line: 1548, column: 73, scope: !3262)
!3275 = !DILocation(line: 1548, column: 21, scope: !3276)
!3276 = !DILexicalBlockFile(scope: !3262, file: !945, discriminator: 1)
!3277 = !DILocation(line: 1548, column: 78, scope: !3262)
!3278 = !DILocation(line: 1547, column: 21, scope: !3279)
!3279 = !DILexicalBlockFile(scope: !3263, file: !945, discriminator: 1)
!3280 = !DILocation(line: 1550, column: 50, scope: !3281)
!3281 = distinct !DILexicalBlock(scope: !3282, file: !945, line: 1550, column: 25)
!3282 = distinct !DILexicalBlock(scope: !3262, file: !945, line: 1548, column: 85)
!3283 = !DILocation(line: 1550, column: 25, scope: !3281)
!3284 = !DILocation(line: 1550, column: 25, scope: !3282)
!3285 = !DILocation(line: 1551, column: 25, scope: !3281)
!3286 = !DILocation(line: 1552, column: 17, scope: !3282)
!3287 = !DILocation(line: 1553, column: 21, scope: !3288)
!3288 = distinct !DILexicalBlock(scope: !3263, file: !945, line: 1553, column: 21)
!3289 = !DILocation(line: 1553, column: 24, scope: !3288)
!3290 = !DILocation(line: 1553, column: 38, scope: !3288)
!3291 = !DILocation(line: 1553, column: 41, scope: !3288)
!3292 = !DILocation(line: 1553, column: 35, scope: !3288)
!3293 = !DILocation(line: 1553, column: 21, scope: !3263)
!3294 = !DILocation(line: 1554, column: 43, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3288, file: !945, line: 1553, column: 52)
!3296 = !DILocation(line: 1554, column: 21, scope: !3295)
!3297 = !DILocation(line: 1555, column: 17, scope: !3295)
!3298 = !DILocation(line: 1557, column: 13, scope: !3263)
!3299 = !DILocation(line: 1559, column: 50, scope: !3242)
!3300 = !DILocation(line: 1559, column: 53, scope: !3242)
!3301 = !DILocation(line: 1559, column: 23, scope: !3242)
!3302 = !DILocation(line: 1559, column: 21, scope: !3242)
!3303 = !DILocation(line: 1561, column: 17, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !3242, file: !945, line: 1561, column: 17)
!3305 = !DILocation(line: 1561, column: 20, scope: !3304)
!3306 = !DILocation(line: 1561, column: 30, scope: !3304)
!3307 = !DILocation(line: 1561, column: 17, scope: !3242)
!3308 = !DILocation(line: 1562, column: 25, scope: !3304)
!3309 = !DILocation(line: 1562, column: 17, scope: !3304)
!3310 = !DILocation(line: 1563, column: 22, scope: !3311)
!3311 = distinct !DILexicalBlock(scope: !3304, file: !945, line: 1563, column: 22)
!3312 = !DILocation(line: 1563, column: 25, scope: !3311)
!3313 = !DILocation(line: 1563, column: 35, scope: !3311)
!3314 = !DILocation(line: 1563, column: 56, scope: !3311)
!3315 = !DILocation(line: 1563, column: 59, scope: !3316)
!3316 = !DILexicalBlockFile(scope: !3311, file: !945, discriminator: 1)
!3317 = !DILocation(line: 1563, column: 67, scope: !3316)
!3318 = !DILocation(line: 1563, column: 22, scope: !3316)
!3319 = !DILocation(line: 1564, column: 25, scope: !3311)
!3320 = !DILocation(line: 1564, column: 17, scope: !3311)
!3321 = !DILocation(line: 1565, column: 17, scope: !3322)
!3322 = distinct !DILexicalBlock(scope: !3242, file: !945, line: 1565, column: 17)
!3323 = !DILocation(line: 1565, column: 25, scope: !3322)
!3324 = !DILocation(line: 1565, column: 30, scope: !3322)
!3325 = !DILocation(line: 1565, column: 48, scope: !3326)
!3326 = !DILexicalBlockFile(scope: !3322, file: !945, discriminator: 1)
!3327 = !DILocation(line: 1565, column: 51, scope: !3326)
!3328 = !DILocation(line: 1565, column: 33, scope: !3326)
!3329 = !DILocation(line: 1565, column: 17, scope: !3326)
!3330 = !DILocation(line: 1566, column: 24, scope: !3331)
!3331 = distinct !DILexicalBlock(scope: !3322, file: !945, line: 1565, column: 61)
!3332 = !DILocation(line: 1566, column: 27, scope: !3331)
!3333 = !DILocation(line: 1567, column: 59, scope: !3331)
!3334 = !DILocation(line: 1567, column: 62, scope: !3331)
!3335 = !DILocation(line: 1567, column: 68, scope: !3331)
!3336 = !DILocation(line: 1567, column: 71, scope: !3331)
!3337 = !DILocation(line: 1566, column: 17, scope: !3331)
!3338 = !DILocation(line: 1568, column: 17, scope: !3331)
!3339 = !DILocation(line: 1571, column: 17, scope: !3340)
!3340 = distinct !DILexicalBlock(scope: !3242, file: !945, line: 1571, column: 17)
!3341 = !DILocation(line: 1571, column: 25, scope: !3340)
!3342 = !DILocation(line: 1571, column: 30, scope: !3340)
!3343 = !DILocation(line: 1571, column: 33, scope: !3344)
!3344 = !DILexicalBlockFile(scope: !3340, file: !945, discriminator: 1)
!3345 = !DILocation(line: 1571, column: 36, scope: !3344)
!3346 = !DILocation(line: 1571, column: 17, scope: !3344)
!3347 = !DILocation(line: 1572, column: 30, scope: !3340)
!3348 = !DILocation(line: 1572, column: 17, scope: !3340)
!3349 = !DILocation(line: 1574, column: 17, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !3242, file: !945, line: 1574, column: 17)
!3351 = !DILocation(line: 1574, column: 20, scope: !3350)
!3352 = !DILocation(line: 1574, column: 30, scope: !3350)
!3353 = !DILocation(line: 1574, column: 51, scope: !3350)
!3354 = !DILocation(line: 1574, column: 55, scope: !3355)
!3355 = !DILexicalBlockFile(scope: !3350, file: !945, discriminator: 1)
!3356 = !DILocation(line: 1574, column: 58, scope: !3355)
!3357 = !DILocation(line: 1574, column: 17, scope: !3355)
!3358 = !DILocation(line: 1576, column: 22, scope: !3350)
!3359 = !DILocation(line: 1576, column: 25, scope: !3350)
!3360 = !DILocation(line: 1576, column: 35, scope: !3350)
!3361 = !DILocation(line: 1576, column: 56, scope: !3350)
!3362 = !DILocation(line: 1576, column: 59, scope: !3355)
!3363 = !DILocation(line: 1576, column: 67, scope: !3355)
!3364 = !DILocation(line: 1576, column: 21, scope: !3355)
!3365 = !DILocation(line: 1576, column: 75, scope: !3366)
!3366 = !DILexicalBlockFile(scope: !3350, file: !945, discriminator: 2)
!3367 = !DILocation(line: 1576, column: 83, scope: !3366)
!3368 = !DILocation(line: 1576, column: 21, scope: !3366)
!3369 = !DILocation(line: 1576, column: 21, scope: !3370)
!3370 = !DILexicalBlockFile(scope: !3350, file: !945, discriminator: 3)
!3371 = !DILocation(line: 1576, column: 21, scope: !3372)
!3372 = !DILexicalBlockFile(scope: !3350, file: !945, discriminator: 4)
!3373 = !DILocation(line: 1575, column: 37, scope: !3350)
!3374 = !DILocation(line: 1575, column: 40, scope: !3350)
!3375 = !DILocation(line: 1575, column: 47, scope: !3350)
!3376 = !DILocation(line: 1575, column: 50, scope: !3350)
!3377 = !DILocation(line: 1575, column: 57, scope: !3350)
!3378 = !DILocation(line: 1575, column: 60, scope: !3350)
!3379 = !DILocation(line: 1575, column: 55, scope: !3350)
!3380 = !DILocation(line: 1575, column: 45, scope: !3350)
!3381 = !DILocation(line: 1575, column: 17, scope: !3350)
!3382 = !DILocation(line: 1575, column: 20, scope: !3350)
!3383 = !DILocation(line: 1575, column: 29, scope: !3350)
!3384 = !DILocation(line: 1575, column: 71, scope: !3350)
!3385 = !DILocation(line: 1577, column: 9, scope: !3242)
!3386 = !DILocation(line: 1542, column: 50, scope: !3387)
!3387 = !DILexicalBlockFile(scope: !3235, file: !945, discriminator: 2)
!3388 = !DILocation(line: 1542, column: 53, scope: !3387)
!3389 = !DILocation(line: 1542, column: 57, scope: !3387)
!3390 = !DILocation(line: 1542, column: 9, scope: !3387)
!3391 = distinct !{!3391, !3392}
!3392 = !DILocation(line: 1542, column: 9, scope: !3230)
!3393 = !DILocation(line: 1579, column: 28, scope: !3230)
!3394 = !DILocation(line: 1579, column: 35, scope: !3230)
!3395 = !DILocation(line: 1579, column: 38, scope: !3230)
!3396 = !DILocation(line: 1579, column: 47, scope: !3230)
!3397 = !DILocation(line: 1580, column: 28, scope: !3230)
!3398 = !DILocation(line: 1580, column: 31, scope: !3230)
!3399 = !DILocation(line: 1580, column: 41, scope: !3230)
!3400 = !DILocation(line: 1580, column: 44, scope: !3230)
!3401 = !DILocation(line: 1580, column: 54, scope: !3402)
!3402 = !DILexicalBlockFile(scope: !3230, file: !945, discriminator: 1)
!3403 = !DILocation(line: 1580, column: 57, scope: !3402)
!3404 = !DILocation(line: 1580, column: 67, scope: !3402)
!3405 = !DILocation(line: 1580, column: 28, scope: !3402)
!3406 = !DILocation(line: 1580, column: 28, scope: !3407)
!3407 = !DILexicalBlockFile(scope: !3230, file: !945, discriminator: 2)
!3408 = !DILocation(line: 1580, column: 28, scope: !3409)
!3409 = !DILexicalBlockFile(scope: !3230, file: !945, discriminator: 3)
!3410 = !DILocation(line: 1581, column: 33, scope: !3230)
!3411 = !DILocation(line: 1581, column: 36, scope: !3230)
!3412 = !DILocation(line: 1581, column: 31, scope: !3230)
!3413 = !DILocation(line: 1582, column: 28, scope: !3230)
!3414 = !DILocation(line: 1582, column: 31, scope: !3230)
!3415 = !DILocation(line: 1579, column: 9, scope: !3402)
!3416 = !DILocation(line: 1583, column: 5, scope: !3230)
!3417 = !DILocation(line: 1541, column: 47, scope: !3418)
!3418 = !DILexicalBlockFile(scope: !3222, file: !945, discriminator: 2)
!3419 = !DILocation(line: 1541, column: 50, scope: !3418)
!3420 = !DILocation(line: 1541, column: 54, scope: !3418)
!3421 = !DILocation(line: 1541, column: 5, scope: !3418)
!3422 = distinct !{!3422, !3423}
!3423 = !DILocation(line: 1541, column: 5, scope: !2560)
!3424 = !DILocation(line: 1585, column: 12, scope: !2560)
!3425 = !DILocation(line: 1585, column: 20, scope: !2560)
!3426 = !DILocation(line: 1585, column: 41, scope: !2560)
!3427 = !DILocation(line: 1585, column: 44, scope: !2560)
!3428 = !DILocation(line: 1585, column: 25, scope: !2560)
!3429 = !DILocation(line: 1585, column: 23, scope: !2560)
!3430 = !DILocation(line: 1585, column: 10, scope: !2560)
!3431 = !DILocation(line: 1587, column: 9, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !2560, file: !945, line: 1587, column: 9)
!3433 = !DILocation(line: 1587, column: 12, scope: !3432)
!3434 = !DILocation(line: 1587, column: 20, scope: !3432)
!3435 = !DILocation(line: 1587, column: 23, scope: !3432)
!3436 = !DILocation(line: 1587, column: 17, scope: !3432)
!3437 = !DILocation(line: 1587, column: 33, scope: !3432)
!3438 = !DILocation(line: 1587, column: 36, scope: !3439)
!3439 = !DILexicalBlockFile(scope: !3432, file: !945, discriminator: 1)
!3440 = !DILocation(line: 1587, column: 39, scope: !3439)
!3441 = !DILocation(line: 1587, column: 47, scope: !3439)
!3442 = !DILocation(line: 1587, column: 50, scope: !3439)
!3443 = !DILocation(line: 1587, column: 44, scope: !3439)
!3444 = !DILocation(line: 1587, column: 9, scope: !3439)
!3445 = !DILocation(line: 1588, column: 16, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3432, file: !945, line: 1587, column: 60)
!3447 = !DILocation(line: 1588, column: 78, scope: !3446)
!3448 = !DILocation(line: 1588, column: 85, scope: !3446)
!3449 = !DILocation(line: 1588, column: 99, scope: !3446)
!3450 = !DILocation(line: 1588, column: 102, scope: !3446)
!3451 = !DILocation(line: 1588, column: 108, scope: !3446)
!3452 = !DILocation(line: 1588, column: 111, scope: !3446)
!3453 = !DILocation(line: 1588, column: 117, scope: !3446)
!3454 = !DILocation(line: 1588, column: 9, scope: !3446)
!3455 = !DILocation(line: 1590, column: 5, scope: !3446)
!3456 = !DILocation(line: 1592, column: 9, scope: !3457)
!3457 = distinct !DILexicalBlock(scope: !2560, file: !945, line: 1592, column: 9)
!3458 = !DILocation(line: 1592, column: 14, scope: !3457)
!3459 = !DILocation(line: 1592, column: 9, scope: !2560)
!3460 = !DILocation(line: 1593, column: 16, scope: !3461)
!3461 = distinct !DILexicalBlock(scope: !3457, file: !945, line: 1592, column: 19)
!3462 = !DILocation(line: 1593, column: 53, scope: !3461)
!3463 = !DILocation(line: 1593, column: 60, scope: !3461)
!3464 = !DILocation(line: 1593, column: 74, scope: !3461)
!3465 = !DILocation(line: 1593, column: 9, scope: !3461)
!3466 = !DILocation(line: 1594, column: 9, scope: !3461)
!3467 = !DILocation(line: 1597, column: 9, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !2560, file: !945, line: 1597, column: 9)
!3469 = !DILocation(line: 1597, column: 12, scope: !3468)
!3470 = !DILocation(line: 1597, column: 22, scope: !3468)
!3471 = !DILocation(line: 1597, column: 43, scope: !3468)
!3472 = !DILocation(line: 1597, column: 46, scope: !3473)
!3473 = !DILexicalBlockFile(scope: !3468, file: !945, discriminator: 1)
!3474 = !DILocation(line: 1597, column: 49, scope: !3473)
!3475 = !DILocation(line: 1597, column: 9, scope: !3473)
!3476 = !DILocation(line: 1598, column: 28, scope: !3468)
!3477 = !DILocation(line: 1598, column: 34, scope: !3468)
!3478 = !DILocation(line: 1598, column: 37, scope: !3468)
!3479 = !DILocation(line: 1598, column: 46, scope: !3468)
!3480 = !DILocation(line: 1598, column: 15, scope: !3468)
!3481 = !DILocation(line: 1598, column: 13, scope: !3468)
!3482 = !DILocation(line: 1598, column: 9, scope: !3468)
!3483 = !DILocation(line: 1599, column: 14, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3468, file: !945, line: 1599, column: 14)
!3485 = !DILocation(line: 1599, column: 17, scope: !3484)
!3486 = !DILocation(line: 1599, column: 27, scope: !3484)
!3487 = !DILocation(line: 1599, column: 30, scope: !3484)
!3488 = !DILocation(line: 1599, column: 14, scope: !3468)
!3489 = !DILocation(line: 1600, column: 28, scope: !3484)
!3490 = !DILocation(line: 1600, column: 34, scope: !3484)
!3491 = !DILocation(line: 1600, column: 37, scope: !3484)
!3492 = !DILocation(line: 1600, column: 47, scope: !3484)
!3493 = !DILocation(line: 1600, column: 15, scope: !3484)
!3494 = !DILocation(line: 1600, column: 13, scope: !3484)
!3495 = !DILocation(line: 1600, column: 9, scope: !3484)
!3496 = !DILocation(line: 1601, column: 9, scope: !3497)
!3497 = distinct !DILexicalBlock(scope: !2560, file: !945, line: 1601, column: 9)
!3498 = !DILocation(line: 1601, column: 13, scope: !3497)
!3499 = !DILocation(line: 1601, column: 9, scope: !2560)
!3500 = !DILocation(line: 1602, column: 16, scope: !3497)
!3501 = !DILocation(line: 1602, column: 9, scope: !3497)
!3502 = !DILocation(line: 1605, column: 9, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !2560, file: !945, line: 1605, column: 9)
!3504 = !DILocation(line: 1605, column: 12, scope: !3503)
!3505 = !DILocation(line: 1605, column: 22, scope: !3503)
!3506 = !DILocation(line: 1605, column: 25, scope: !3503)
!3507 = !DILocation(line: 1605, column: 33, scope: !3503)
!3508 = !DILocation(line: 1605, column: 36, scope: !3509)
!3509 = !DILexicalBlockFile(scope: !3503, file: !945, discriminator: 1)
!3510 = !DILocation(line: 1605, column: 39, scope: !3509)
!3511 = !DILocation(line: 1605, column: 9, scope: !3509)
!3512 = !DILocation(line: 1606, column: 10, scope: !3503)
!3513 = !DILocation(line: 1606, column: 20, scope: !3503)
!3514 = !DILocation(line: 1606, column: 9, scope: !3503)
!3515 = !DILocation(line: 1608, column: 9, scope: !3516)
!3516 = distinct !DILexicalBlock(scope: !2560, file: !945, line: 1608, column: 9)
!3517 = !DILocation(line: 1608, column: 12, scope: !3516)
!3518 = !DILocation(line: 1608, column: 22, scope: !3516)
!3519 = !DILocation(line: 1608, column: 9, scope: !2560)
!3520 = !DILocation(line: 1609, column: 9, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3516, file: !945, line: 1608, column: 44)
!3522 = distinct !{!3522, !3520}
!3523 = !DILocalVariable(name: "SWAP_tmp", scope: !3524, file: !945, line: 1609, type: !1909)
!3524 = distinct !DILexicalBlock(scope: !3521, file: !945, line: 1609, column: 11)
!3525 = !DILocation(line: 1609, column: 23, scope: !3524)
!3526 = !DILocation(line: 1609, column: 33, scope: !3527)
!3527 = !DILexicalBlockFile(scope: !3524, file: !945, discriminator: 1)
!3528 = !DILocation(line: 1609, column: 36, scope: !3527)
!3529 = !DILocation(line: 1609, column: 23, scope: !3527)
!3530 = !DILocation(line: 1609, column: 59, scope: !3527)
!3531 = !DILocation(line: 1609, column: 62, scope: !3527)
!3532 = !DILocation(line: 1609, column: 46, scope: !3527)
!3533 = !DILocation(line: 1609, column: 49, scope: !3527)
!3534 = !DILocation(line: 1609, column: 57, scope: !3527)
!3535 = !DILocation(line: 1609, column: 83, scope: !3527)
!3536 = !DILocation(line: 1609, column: 71, scope: !3527)
!3537 = !DILocation(line: 1609, column: 74, scope: !3527)
!3538 = !DILocation(line: 1609, column: 81, scope: !3527)
!3539 = !DILocation(line: 1609, column: 92, scope: !3527)
!3540 = !DILocation(line: 1610, column: 5, scope: !3521)
!3541 = !DILocation(line: 1611, column: 24, scope: !3542)
!3542 = distinct !DILexicalBlock(scope: !3516, file: !945, line: 1610, column: 12)
!3543 = !DILocation(line: 1611, column: 27, scope: !3542)
!3544 = !DILocation(line: 1611, column: 36, scope: !3542)
!3545 = !DILocation(line: 1611, column: 9, scope: !3542)
!3546 = !DILocation(line: 1614, column: 12, scope: !2560)
!3547 = !DILocation(line: 1614, column: 5, scope: !2560)
!3548 = !DILocation(line: 1615, column: 1, scope: !2560)
!3549 = distinct !DISubprogram(name: "svq3_decode_end", scope: !945, file: !945, line: 1617, type: !1034, isLocal: true, isDefinition: true, scopeLine: 1618, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!3550 = !DILocalVariable(name: "avctx", arg: 1, scope: !3549, file: !945, line: 1617, type: !1036)
!3551 = !DILocation(line: 1617, column: 66, scope: !3549)
!3552 = !DILocalVariable(name: "s", scope: !3549, file: !945, line: 1619, type: !1735)
!3553 = !DILocation(line: 1619, column: 18, scope: !3549)
!3554 = !DILocation(line: 1619, column: 22, scope: !3549)
!3555 = !DILocation(line: 1619, column: 29, scope: !3549)
!3556 = !DILocation(line: 1621, column: 18, scope: !3549)
!3557 = !DILocation(line: 1621, column: 25, scope: !3549)
!3558 = !DILocation(line: 1621, column: 28, scope: !3549)
!3559 = !DILocation(line: 1621, column: 5, scope: !3549)
!3560 = !DILocation(line: 1622, column: 18, scope: !3549)
!3561 = !DILocation(line: 1622, column: 25, scope: !3549)
!3562 = !DILocation(line: 1622, column: 28, scope: !3549)
!3563 = !DILocation(line: 1622, column: 5, scope: !3549)
!3564 = !DILocation(line: 1623, column: 18, scope: !3549)
!3565 = !DILocation(line: 1623, column: 25, scope: !3549)
!3566 = !DILocation(line: 1623, column: 28, scope: !3549)
!3567 = !DILocation(line: 1623, column: 5, scope: !3549)
!3568 = !DILocation(line: 1624, column: 20, scope: !3549)
!3569 = !DILocation(line: 1624, column: 23, scope: !3549)
!3570 = !DILocation(line: 1624, column: 32, scope: !3549)
!3571 = !DILocation(line: 1624, column: 5, scope: !3549)
!3572 = !DILocation(line: 1625, column: 20, scope: !3549)
!3573 = !DILocation(line: 1625, column: 23, scope: !3549)
!3574 = !DILocation(line: 1625, column: 33, scope: !3549)
!3575 = !DILocation(line: 1625, column: 5, scope: !3549)
!3576 = !DILocation(line: 1626, column: 20, scope: !3549)
!3577 = !DILocation(line: 1626, column: 23, scope: !3549)
!3578 = !DILocation(line: 1626, column: 33, scope: !3549)
!3579 = !DILocation(line: 1626, column: 5, scope: !3549)
!3580 = !DILocation(line: 1627, column: 15, scope: !3549)
!3581 = !DILocation(line: 1627, column: 18, scope: !3549)
!3582 = !DILocation(line: 1627, column: 14, scope: !3549)
!3583 = !DILocation(line: 1627, column: 5, scope: !3549)
!3584 = !DILocation(line: 1628, column: 15, scope: !3549)
!3585 = !DILocation(line: 1628, column: 18, scope: !3549)
!3586 = !DILocation(line: 1628, column: 14, scope: !3549)
!3587 = !DILocation(line: 1628, column: 5, scope: !3549)
!3588 = !DILocation(line: 1629, column: 15, scope: !3549)
!3589 = !DILocation(line: 1629, column: 18, scope: !3549)
!3590 = !DILocation(line: 1629, column: 14, scope: !3549)
!3591 = !DILocation(line: 1629, column: 5, scope: !3549)
!3592 = !DILocation(line: 1630, column: 15, scope: !3549)
!3593 = !DILocation(line: 1630, column: 18, scope: !3549)
!3594 = !DILocation(line: 1630, column: 14, scope: !3549)
!3595 = !DILocation(line: 1630, column: 5, scope: !3549)
!3596 = !DILocation(line: 1631, column: 15, scope: !3549)
!3597 = !DILocation(line: 1631, column: 18, scope: !3549)
!3598 = !DILocation(line: 1631, column: 14, scope: !3549)
!3599 = !DILocation(line: 1631, column: 5, scope: !3549)
!3600 = !DILocation(line: 1632, column: 15, scope: !3549)
!3601 = !DILocation(line: 1632, column: 18, scope: !3549)
!3602 = !DILocation(line: 1632, column: 14, scope: !3549)
!3603 = !DILocation(line: 1632, column: 5, scope: !3549)
!3604 = !DILocation(line: 1633, column: 15, scope: !3549)
!3605 = !DILocation(line: 1633, column: 18, scope: !3549)
!3606 = !DILocation(line: 1633, column: 14, scope: !3549)
!3607 = !DILocation(line: 1633, column: 5, scope: !3549)
!3608 = !DILocation(line: 1636, column: 15, scope: !3549)
!3609 = !DILocation(line: 1636, column: 18, scope: !3549)
!3610 = !DILocation(line: 1636, column: 14, scope: !3549)
!3611 = !DILocation(line: 1636, column: 5, scope: !3549)
!3612 = !DILocation(line: 1637, column: 5, scope: !3549)
!3613 = !DILocation(line: 1637, column: 8, scope: !3549)
!3614 = !DILocation(line: 1637, column: 17, scope: !3549)
!3615 = !DILocation(line: 1639, column: 5, scope: !3549)
!3616 = distinct !DISubprogram(name: "init_get_bits", scope: !1684, file: !1684, line: 615, type: !3617, isLocal: true, isDefinition: true, scopeLine: 617, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!3617 = !DISubroutineType(types: !3618)
!3618 = !{!899, !1682, !1474, !899}
!3619 = !DILocalVariable(name: "s", arg: 1, scope: !3616, file: !1684, line: 615, type: !1682)
!3620 = !DILocation(line: 615, column: 48, scope: !3616)
!3621 = !DILocalVariable(name: "buffer", arg: 2, scope: !3616, file: !1684, line: 615, type: !1474)
!3622 = !DILocation(line: 615, column: 66, scope: !3616)
!3623 = !DILocalVariable(name: "bit_size", arg: 3, scope: !3616, file: !1684, line: 616, type: !899)
!3624 = !DILocation(line: 616, column: 37, scope: !3616)
!3625 = !DILocalVariable(name: "buffer_size", scope: !3616, file: !1684, line: 618, type: !899)
!3626 = !DILocation(line: 618, column: 9, scope: !3616)
!3627 = !DILocalVariable(name: "ret", scope: !3616, file: !1684, line: 619, type: !899)
!3628 = !DILocation(line: 619, column: 9, scope: !3616)
!3629 = !DILocation(line: 621, column: 9, scope: !3630)
!3630 = distinct !DILexicalBlock(scope: !3616, file: !1684, line: 621, column: 9)
!3631 = !DILocation(line: 621, column: 18, scope: !3630)
!3632 = !DILocation(line: 621, column: 64, scope: !3630)
!3633 = !DILocation(line: 621, column: 67, scope: !3634)
!3634 = !DILexicalBlockFile(scope: !3630, file: !1684, discriminator: 1)
!3635 = !DILocation(line: 621, column: 76, scope: !3634)
!3636 = !DILocation(line: 621, column: 80, scope: !3634)
!3637 = !DILocation(line: 621, column: 84, scope: !3638)
!3638 = !DILexicalBlockFile(scope: !3630, file: !1684, discriminator: 2)
!3639 = !DILocation(line: 621, column: 9, scope: !3638)
!3640 = !DILocation(line: 622, column: 18, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3630, file: !1684, line: 621, column: 92)
!3642 = !DILocation(line: 623, column: 16, scope: !3641)
!3643 = !DILocation(line: 624, column: 13, scope: !3641)
!3644 = !DILocation(line: 625, column: 5, scope: !3641)
!3645 = !DILocation(line: 627, column: 20, scope: !3616)
!3646 = !DILocation(line: 627, column: 29, scope: !3616)
!3647 = !DILocation(line: 627, column: 34, scope: !3616)
!3648 = !DILocation(line: 627, column: 17, scope: !3616)
!3649 = !DILocation(line: 629, column: 17, scope: !3616)
!3650 = !DILocation(line: 629, column: 5, scope: !3616)
!3651 = !DILocation(line: 629, column: 8, scope: !3616)
!3652 = !DILocation(line: 629, column: 15, scope: !3616)
!3653 = !DILocation(line: 630, column: 23, scope: !3616)
!3654 = !DILocation(line: 630, column: 5, scope: !3616)
!3655 = !DILocation(line: 630, column: 8, scope: !3616)
!3656 = !DILocation(line: 630, column: 21, scope: !3616)
!3657 = !DILocation(line: 631, column: 29, scope: !3616)
!3658 = !DILocation(line: 631, column: 38, scope: !3616)
!3659 = !DILocation(line: 631, column: 5, scope: !3616)
!3660 = !DILocation(line: 631, column: 8, scope: !3616)
!3661 = !DILocation(line: 631, column: 27, scope: !3616)
!3662 = !DILocation(line: 632, column: 21, scope: !3616)
!3663 = !DILocation(line: 632, column: 30, scope: !3616)
!3664 = !DILocation(line: 632, column: 28, scope: !3616)
!3665 = !DILocation(line: 632, column: 5, scope: !3616)
!3666 = !DILocation(line: 632, column: 8, scope: !3616)
!3667 = !DILocation(line: 632, column: 19, scope: !3616)
!3668 = !DILocation(line: 633, column: 5, scope: !3616)
!3669 = !DILocation(line: 633, column: 8, scope: !3616)
!3670 = !DILocation(line: 633, column: 14, scope: !3616)
!3671 = !DILocation(line: 639, column: 12, scope: !3616)
!3672 = !DILocation(line: 639, column: 5, scope: !3616)
!3673 = distinct !DISubprogram(name: "get_bits", scope: !1684, file: !1684, line: 381, type: !3674, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!3674 = !DISubroutineType(types: !3675)
!3675 = !{!898, !1682, !899}
!3676 = !DILocation(line: 66, column: 98, scope: !1723, inlinedAt: !3677)
!3677 = distinct !DILocation(line: 401, column: 16, scope: !3673)
!3678 = !DILocalVariable(name: "s", arg: 1, scope: !3673, file: !1684, line: 381, type: !1682)
!3679 = !DILocation(line: 381, column: 52, scope: !3673)
!3680 = !DILocalVariable(name: "n", arg: 2, scope: !3673, file: !1684, line: 381, type: !899)
!3681 = !DILocation(line: 381, column: 59, scope: !3673)
!3682 = !DILocalVariable(name: "tmp", scope: !3673, file: !1684, line: 383, type: !899)
!3683 = !DILocation(line: 383, column: 18, scope: !3673)
!3684 = !DILocalVariable(name: "re_index", scope: !3673, file: !1684, line: 399, type: !898)
!3685 = !DILocation(line: 399, column: 18, scope: !3673)
!3686 = !DILocation(line: 399, column: 30, scope: !3673)
!3687 = !DILocation(line: 399, column: 34, scope: !3673)
!3688 = !DILocalVariable(name: "re_cache", scope: !3673, file: !1684, line: 399, type: !898)
!3689 = !DILocation(line: 399, column: 78, scope: !3673)
!3690 = !DILocalVariable(name: "re_size_plus8", scope: !3673, file: !1684, line: 399, type: !898)
!3691 = !DILocation(line: 399, column: 101, scope: !3673)
!3692 = !DILocation(line: 399, column: 118, scope: !3673)
!3693 = !DILocation(line: 399, column: 122, scope: !3673)
!3694 = !DILocation(line: 401, column: 60, scope: !3673)
!3695 = !DILocation(line: 401, column: 64, scope: !3673)
!3696 = !DILocation(line: 401, column: 74, scope: !3673)
!3697 = !DILocation(line: 401, column: 83, scope: !3673)
!3698 = !DILocation(line: 401, column: 71, scope: !3673)
!3699 = !DILocation(line: 401, column: 92, scope: !3673)
!3700 = !DILocation(line: 401, column: 16, scope: !3673)
!3701 = !DILocation(line: 68, column: 16, scope: !1723, inlinedAt: !3677)
!3702 = !DILocation(line: 68, column: 19, scope: !1723, inlinedAt: !3677)
!3703 = !DILocation(line: 68, column: 24, scope: !1723, inlinedAt: !3677)
!3704 = !DILocation(line: 68, column: 38, scope: !1723, inlinedAt: !3677)
!3705 = !DILocation(line: 68, column: 41, scope: !1723, inlinedAt: !3677)
!3706 = !DILocation(line: 68, column: 46, scope: !1723, inlinedAt: !3677)
!3707 = !DILocation(line: 68, column: 34, scope: !1723, inlinedAt: !3677)
!3708 = !DILocation(line: 68, column: 57, scope: !1723, inlinedAt: !3677)
!3709 = !DILocation(line: 68, column: 69, scope: !1723, inlinedAt: !3677)
!3710 = !DILocation(line: 68, column: 72, scope: !1723, inlinedAt: !3677)
!3711 = !DILocation(line: 68, column: 79, scope: !1723, inlinedAt: !3677)
!3712 = !DILocation(line: 68, column: 84, scope: !1723, inlinedAt: !3677)
!3713 = !DILocation(line: 68, column: 99, scope: !1723, inlinedAt: !3677)
!3714 = !DILocation(line: 68, column: 102, scope: !1723, inlinedAt: !3677)
!3715 = !DILocation(line: 68, column: 109, scope: !1723, inlinedAt: !3677)
!3716 = !DILocation(line: 68, column: 114, scope: !1723, inlinedAt: !3677)
!3717 = !DILocation(line: 68, column: 94, scope: !1723, inlinedAt: !3677)
!3718 = !DILocation(line: 68, column: 63, scope: !1723, inlinedAt: !3677)
!3719 = !DILocation(line: 401, column: 100, scope: !3673)
!3720 = !DILocation(line: 401, column: 109, scope: !3673)
!3721 = !DILocation(line: 401, column: 96, scope: !3673)
!3722 = !DILocation(line: 401, column: 14, scope: !3673)
!3723 = !DILocation(line: 402, column: 21, scope: !3673)
!3724 = !DILocation(line: 402, column: 31, scope: !3673)
!3725 = !DILocation(line: 402, column: 11, scope: !3673)
!3726 = !DILocation(line: 402, column: 9, scope: !3673)
!3727 = !DILocation(line: 403, column: 18, scope: !3673)
!3728 = !DILocation(line: 403, column: 36, scope: !3673)
!3729 = !DILocation(line: 403, column: 48, scope: !3673)
!3730 = !DILocation(line: 403, column: 45, scope: !3673)
!3731 = !DILocation(line: 403, column: 33, scope: !3673)
!3732 = !DILocation(line: 403, column: 17, scope: !3673)
!3733 = !DILocation(line: 403, column: 55, scope: !3734)
!3734 = !DILexicalBlockFile(scope: !3673, file: !1684, discriminator: 1)
!3735 = !DILocation(line: 403, column: 67, scope: !3734)
!3736 = !DILocation(line: 403, column: 64, scope: !3734)
!3737 = !DILocation(line: 403, column: 17, scope: !3734)
!3738 = !DILocation(line: 403, column: 74, scope: !3739)
!3739 = !DILexicalBlockFile(scope: !3673, file: !1684, discriminator: 2)
!3740 = !DILocation(line: 403, column: 17, scope: !3739)
!3741 = !DILocation(line: 403, column: 17, scope: !3742)
!3742 = !DILexicalBlockFile(scope: !3673, file: !1684, discriminator: 3)
!3743 = !DILocation(line: 403, column: 14, scope: !3742)
!3744 = !DILocation(line: 404, column: 18, scope: !3673)
!3745 = !DILocation(line: 404, column: 6, scope: !3673)
!3746 = !DILocation(line: 404, column: 10, scope: !3673)
!3747 = !DILocation(line: 404, column: 16, scope: !3673)
!3748 = !DILocation(line: 406, column: 12, scope: !3673)
!3749 = !DILocation(line: 406, column: 5, scope: !3673)
!3750 = distinct !DISubprogram(name: "get_bits1", scope: !1684, file: !1684, line: 487, type: !3751, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!3751 = !DISubroutineType(types: !3752)
!3752 = !{!898, !1682}
!3753 = !DILocalVariable(name: "s", arg: 1, scope: !3750, file: !1684, line: 487, type: !1682)
!3754 = !DILocation(line: 487, column: 53, scope: !3750)
!3755 = !DILocalVariable(name: "index", scope: !3750, file: !1684, line: 499, type: !898)
!3756 = !DILocation(line: 499, column: 18, scope: !3750)
!3757 = !DILocation(line: 499, column: 26, scope: !3750)
!3758 = !DILocation(line: 499, column: 29, scope: !3750)
!3759 = !DILocalVariable(name: "result", scope: !3750, file: !1684, line: 500, type: !902)
!3760 = !DILocation(line: 500, column: 13, scope: !3750)
!3761 = !DILocation(line: 500, column: 32, scope: !3750)
!3762 = !DILocation(line: 500, column: 38, scope: !3750)
!3763 = !DILocation(line: 500, column: 22, scope: !3750)
!3764 = !DILocation(line: 500, column: 25, scope: !3750)
!3765 = !DILocation(line: 505, column: 16, scope: !3750)
!3766 = !DILocation(line: 505, column: 22, scope: !3750)
!3767 = !DILocation(line: 505, column: 12, scope: !3750)
!3768 = !DILocation(line: 506, column: 12, scope: !3750)
!3769 = !DILocation(line: 509, column: 9, scope: !3770)
!3770 = distinct !DILexicalBlock(scope: !3750, file: !1684, line: 509, column: 9)
!3771 = !DILocation(line: 509, column: 12, scope: !3770)
!3772 = !DILocation(line: 509, column: 20, scope: !3770)
!3773 = !DILocation(line: 509, column: 23, scope: !3770)
!3774 = !DILocation(line: 509, column: 18, scope: !3770)
!3775 = !DILocation(line: 509, column: 9, scope: !3750)
!3776 = !DILocation(line: 511, column: 14, scope: !3770)
!3777 = !DILocation(line: 511, column: 9, scope: !3770)
!3778 = !DILocation(line: 512, column: 16, scope: !3750)
!3779 = !DILocation(line: 512, column: 5, scope: !3750)
!3780 = !DILocation(line: 512, column: 8, scope: !3750)
!3781 = !DILocation(line: 512, column: 14, scope: !3750)
!3782 = !DILocation(line: 514, column: 12, scope: !3750)
!3783 = !DILocation(line: 514, column: 5, scope: !3750)
!3784 = distinct !DISubprogram(name: "skip_1stop_8data_bits", scope: !1684, file: !1684, line: 819, type: !3785, isLocal: true, isDefinition: true, scopeLine: 820, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!3785 = !DISubroutineType(types: !3786)
!3786 = !{!899, !1682}
!3787 = !DILocalVariable(name: "gb", arg: 1, scope: !3784, file: !1684, line: 819, type: !1682)
!3788 = !DILocation(line: 819, column: 56, scope: !3784)
!3789 = !DILocation(line: 821, column: 23, scope: !3790)
!3790 = distinct !DILexicalBlock(scope: !3784, file: !1684, line: 821, column: 9)
!3791 = !DILocation(line: 821, column: 9, scope: !3790)
!3792 = !DILocation(line: 821, column: 27, scope: !3790)
!3793 = !DILocation(line: 821, column: 9, scope: !3784)
!3794 = !DILocation(line: 822, column: 9, scope: !3790)
!3795 = !DILocation(line: 824, column: 5, scope: !3784)
!3796 = !DILocation(line: 824, column: 22, scope: !3797)
!3797 = !DILexicalBlockFile(scope: !3784, file: !1684, discriminator: 1)
!3798 = !DILocation(line: 824, column: 12, scope: !3797)
!3799 = !DILocation(line: 824, column: 5, scope: !3797)
!3800 = !DILocation(line: 825, column: 19, scope: !3801)
!3801 = distinct !DILexicalBlock(scope: !3784, file: !1684, line: 824, column: 27)
!3802 = !DILocation(line: 825, column: 9, scope: !3801)
!3803 = !DILocation(line: 826, column: 27, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !3801, file: !1684, line: 826, column: 13)
!3805 = !DILocation(line: 826, column: 13, scope: !3804)
!3806 = !DILocation(line: 826, column: 31, scope: !3804)
!3807 = !DILocation(line: 826, column: 13, scope: !3801)
!3808 = !DILocation(line: 827, column: 13, scope: !3804)
!3809 = !DILocation(line: 824, column: 5, scope: !3810)
!3810 = !DILexicalBlockFile(scope: !3784, file: !1684, discriminator: 2)
!3811 = distinct !{!3811, !3795}
!3812 = !DILocation(line: 830, column: 5, scope: !3784)
!3813 = !DILocation(line: 831, column: 1, scope: !3784)
!3814 = distinct !DISubprogram(name: "get_interleaved_ue_golomb", scope: !3815, file: !3815, line: 141, type: !3751, isLocal: true, isDefinition: true, scopeLine: 142, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!3815 = !DIFile(filename: "libavcodec/golomb.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!3816 = !DILocation(line: 66, column: 98, scope: !1723, inlinedAt: !3817)
!3817 = distinct !DILocation(line: 196, column: 24, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3819, file: !3815, line: 185, column: 12)
!3819 = distinct !DILexicalBlock(scope: !3820, file: !3815, line: 182, column: 12)
!3820 = distinct !DILexicalBlock(scope: !3814, file: !3815, line: 176, column: 9)
!3821 = !DILocation(line: 66, column: 98, scope: !1723, inlinedAt: !3822)
!3822 = distinct !DILocation(line: 173, column: 16, scope: !3814)
!3823 = !DILocalVariable(name: "gb", arg: 1, scope: !3814, file: !3815, line: 141, type: !1682)
!3824 = !DILocation(line: 141, column: 65, scope: !3814)
!3825 = !DILocalVariable(name: "buf", scope: !3814, file: !3815, line: 143, type: !896)
!3826 = !DILocation(line: 143, column: 14, scope: !3814)
!3827 = !DILocalVariable(name: "re_index", scope: !3814, file: !3815, line: 172, type: !898)
!3828 = !DILocation(line: 172, column: 18, scope: !3814)
!3829 = !DILocation(line: 172, column: 30, scope: !3814)
!3830 = !DILocation(line: 172, column: 35, scope: !3814)
!3831 = !DILocalVariable(name: "re_cache", scope: !3814, file: !3815, line: 172, type: !898)
!3832 = !DILocation(line: 172, column: 79, scope: !3814)
!3833 = !DILocalVariable(name: "re_size_plus8", scope: !3814, file: !3815, line: 172, type: !898)
!3834 = !DILocation(line: 172, column: 102, scope: !3814)
!3835 = !DILocation(line: 172, column: 119, scope: !3814)
!3836 = !DILocation(line: 172, column: 124, scope: !3814)
!3837 = !DILocation(line: 173, column: 60, scope: !3814)
!3838 = !DILocation(line: 173, column: 65, scope: !3814)
!3839 = !DILocation(line: 173, column: 75, scope: !3814)
!3840 = !DILocation(line: 173, column: 84, scope: !3814)
!3841 = !DILocation(line: 173, column: 72, scope: !3814)
!3842 = !DILocation(line: 173, column: 93, scope: !3814)
!3843 = !DILocation(line: 173, column: 16, scope: !3814)
!3844 = !DILocation(line: 68, column: 16, scope: !1723, inlinedAt: !3822)
!3845 = !DILocation(line: 68, column: 19, scope: !1723, inlinedAt: !3822)
!3846 = !DILocation(line: 68, column: 24, scope: !1723, inlinedAt: !3822)
!3847 = !DILocation(line: 68, column: 38, scope: !1723, inlinedAt: !3822)
!3848 = !DILocation(line: 68, column: 41, scope: !1723, inlinedAt: !3822)
!3849 = !DILocation(line: 68, column: 46, scope: !1723, inlinedAt: !3822)
!3850 = !DILocation(line: 68, column: 34, scope: !1723, inlinedAt: !3822)
!3851 = !DILocation(line: 68, column: 57, scope: !1723, inlinedAt: !3822)
!3852 = !DILocation(line: 68, column: 69, scope: !1723, inlinedAt: !3822)
!3853 = !DILocation(line: 68, column: 72, scope: !1723, inlinedAt: !3822)
!3854 = !DILocation(line: 68, column: 79, scope: !1723, inlinedAt: !3822)
!3855 = !DILocation(line: 68, column: 84, scope: !1723, inlinedAt: !3822)
!3856 = !DILocation(line: 68, column: 99, scope: !1723, inlinedAt: !3822)
!3857 = !DILocation(line: 68, column: 102, scope: !1723, inlinedAt: !3822)
!3858 = !DILocation(line: 68, column: 109, scope: !1723, inlinedAt: !3822)
!3859 = !DILocation(line: 68, column: 114, scope: !1723, inlinedAt: !3822)
!3860 = !DILocation(line: 68, column: 94, scope: !1723, inlinedAt: !3822)
!3861 = !DILocation(line: 68, column: 63, scope: !1723, inlinedAt: !3822)
!3862 = !DILocation(line: 173, column: 101, scope: !3814)
!3863 = !DILocation(line: 173, column: 110, scope: !3814)
!3864 = !DILocation(line: 173, column: 97, scope: !3814)
!3865 = !DILocation(line: 173, column: 14, scope: !3814)
!3866 = !DILocation(line: 174, column: 23, scope: !3814)
!3867 = !DILocation(line: 174, column: 9, scope: !3814)
!3868 = !DILocation(line: 176, column: 9, scope: !3820)
!3869 = !DILocation(line: 176, column: 13, scope: !3820)
!3870 = !DILocation(line: 176, column: 9, scope: !3814)
!3871 = !DILocation(line: 177, column: 13, scope: !3872)
!3872 = distinct !DILexicalBlock(scope: !3820, file: !3815, line: 176, column: 27)
!3873 = !DILocation(line: 178, column: 22, scope: !3872)
!3874 = !DILocation(line: 178, column: 40, scope: !3872)
!3875 = !DILocation(line: 178, column: 82, scope: !3872)
!3876 = !DILocation(line: 178, column: 52, scope: !3872)
!3877 = !DILocation(line: 178, column: 51, scope: !3872)
!3878 = !DILocation(line: 178, column: 49, scope: !3872)
!3879 = !DILocation(line: 178, column: 37, scope: !3872)
!3880 = !DILocation(line: 178, column: 21, scope: !3872)
!3881 = !DILocation(line: 178, column: 92, scope: !3882)
!3882 = !DILexicalBlockFile(scope: !3872, file: !3815, discriminator: 1)
!3883 = !DILocation(line: 178, column: 134, scope: !3882)
!3884 = !DILocation(line: 178, column: 104, scope: !3882)
!3885 = !DILocation(line: 178, column: 103, scope: !3882)
!3886 = !DILocation(line: 178, column: 101, scope: !3882)
!3887 = !DILocation(line: 178, column: 21, scope: !3882)
!3888 = !DILocation(line: 178, column: 144, scope: !3889)
!3889 = !DILexicalBlockFile(scope: !3872, file: !3815, discriminator: 2)
!3890 = !DILocation(line: 178, column: 21, scope: !3889)
!3891 = !DILocation(line: 178, column: 21, scope: !3892)
!3892 = !DILexicalBlockFile(scope: !3872, file: !3815, discriminator: 3)
!3893 = !DILocation(line: 178, column: 18, scope: !3892)
!3894 = !DILocation(line: 179, column: 23, scope: !3872)
!3895 = !DILocation(line: 179, column: 10, scope: !3872)
!3896 = !DILocation(line: 179, column: 15, scope: !3872)
!3897 = !DILocation(line: 179, column: 21, scope: !3872)
!3898 = !DILocation(line: 181, column: 50, scope: !3872)
!3899 = !DILocation(line: 181, column: 16, scope: !3872)
!3900 = !DILocation(line: 181, column: 9, scope: !3872)
!3901 = !DILocalVariable(name: "ret", scope: !3819, file: !3815, line: 183, type: !898)
!3902 = !DILocation(line: 183, column: 18, scope: !3819)
!3903 = !DILocation(line: 185, column: 9, scope: !3819)
!3904 = distinct !{!3904, !3903}
!3905 = !DILocation(line: 186, column: 17, scope: !3818)
!3906 = !DILocation(line: 187, column: 26, scope: !3818)
!3907 = !DILocation(line: 187, column: 44, scope: !3818)
!3908 = !DILocation(line: 187, column: 88, scope: !3818)
!3909 = !DILocation(line: 187, column: 58, scope: !3818)
!3910 = !DILocation(line: 187, column: 57, scope: !3818)
!3911 = !DILocation(line: 187, column: 94, scope: !3818)
!3912 = !DILocation(line: 187, column: 57, scope: !3913)
!3913 = !DILexicalBlockFile(scope: !3818, file: !3815, discriminator: 1)
!3914 = !DILocation(line: 187, column: 139, scope: !3915)
!3915 = !DILexicalBlockFile(scope: !3818, file: !3815, discriminator: 2)
!3916 = !DILocation(line: 187, column: 109, scope: !3915)
!3917 = !DILocation(line: 187, column: 108, scope: !3915)
!3918 = !DILocation(line: 187, column: 57, scope: !3915)
!3919 = !DILocation(line: 187, column: 57, scope: !3920)
!3920 = !DILexicalBlockFile(scope: !3818, file: !3815, discriminator: 3)
!3921 = !DILocation(line: 187, column: 53, scope: !3920)
!3922 = !DILocation(line: 187, column: 41, scope: !3920)
!3923 = !DILocation(line: 187, column: 25, scope: !3920)
!3924 = !DILocation(line: 187, column: 151, scope: !3925)
!3925 = !DILexicalBlockFile(scope: !3818, file: !3815, discriminator: 4)
!3926 = !DILocation(line: 187, column: 195, scope: !3925)
!3927 = !DILocation(line: 187, column: 165, scope: !3925)
!3928 = !DILocation(line: 187, column: 164, scope: !3925)
!3929 = !DILocation(line: 187, column: 201, scope: !3925)
!3930 = !DILocation(line: 187, column: 164, scope: !3931)
!3931 = !DILexicalBlockFile(scope: !3818, file: !3815, discriminator: 5)
!3932 = !DILocation(line: 187, column: 246, scope: !3933)
!3933 = !DILexicalBlockFile(scope: !3818, file: !3815, discriminator: 6)
!3934 = !DILocation(line: 187, column: 216, scope: !3933)
!3935 = !DILocation(line: 187, column: 215, scope: !3933)
!3936 = !DILocation(line: 187, column: 164, scope: !3933)
!3937 = !DILocation(line: 187, column: 164, scope: !3938)
!3938 = !DILexicalBlockFile(scope: !3818, file: !3815, discriminator: 7)
!3939 = !DILocation(line: 187, column: 160, scope: !3938)
!3940 = !DILocation(line: 187, column: 25, scope: !3938)
!3941 = !DILocation(line: 187, column: 258, scope: !3942)
!3942 = !DILexicalBlockFile(scope: !3818, file: !3815, discriminator: 8)
!3943 = !DILocation(line: 187, column: 25, scope: !3942)
!3944 = !DILocation(line: 187, column: 25, scope: !3945)
!3945 = !DILexicalBlockFile(scope: !3818, file: !3815, discriminator: 9)
!3946 = !DILocation(line: 187, column: 22, scope: !3945)
!3947 = !DILocation(line: 190, column: 47, scope: !3948)
!3948 = distinct !DILexicalBlock(scope: !3818, file: !3815, line: 190, column: 17)
!3949 = !DILocation(line: 190, column: 17, scope: !3948)
!3950 = !DILocation(line: 190, column: 52, scope: !3948)
!3951 = !DILocation(line: 190, column: 17, scope: !3818)
!3952 = !DILocation(line: 191, column: 56, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3948, file: !3815, line: 190, column: 58)
!3954 = !DILocation(line: 191, column: 26, scope: !3953)
!3955 = !DILocation(line: 191, column: 61, scope: !3953)
!3956 = !DILocation(line: 191, column: 66, scope: !3953)
!3957 = !DILocation(line: 191, column: 21, scope: !3953)
!3958 = !DILocation(line: 192, column: 61, scope: !3953)
!3959 = !DILocation(line: 192, column: 24, scope: !3953)
!3960 = !DILocation(line: 192, column: 21, scope: !3953)
!3961 = !DILocation(line: 193, column: 17, scope: !3953)
!3962 = !DILocation(line: 195, column: 20, scope: !3818)
!3963 = !DILocation(line: 195, column: 24, scope: !3818)
!3964 = !DILocation(line: 195, column: 69, scope: !3818)
!3965 = !DILocation(line: 195, column: 32, scope: !3818)
!3966 = !DILocation(line: 195, column: 30, scope: !3818)
!3967 = !DILocation(line: 195, column: 17, scope: !3818)
!3968 = !DILocation(line: 196, column: 68, scope: !3818)
!3969 = !DILocation(line: 196, column: 73, scope: !3818)
!3970 = !DILocation(line: 196, column: 83, scope: !3818)
!3971 = !DILocation(line: 196, column: 92, scope: !3818)
!3972 = !DILocation(line: 196, column: 80, scope: !3818)
!3973 = !DILocation(line: 196, column: 101, scope: !3818)
!3974 = !DILocation(line: 196, column: 24, scope: !3818)
!3975 = !DILocation(line: 68, column: 16, scope: !1723, inlinedAt: !3817)
!3976 = !DILocation(line: 68, column: 19, scope: !1723, inlinedAt: !3817)
!3977 = !DILocation(line: 68, column: 24, scope: !1723, inlinedAt: !3817)
!3978 = !DILocation(line: 68, column: 38, scope: !1723, inlinedAt: !3817)
!3979 = !DILocation(line: 68, column: 41, scope: !1723, inlinedAt: !3817)
!3980 = !DILocation(line: 68, column: 46, scope: !1723, inlinedAt: !3817)
!3981 = !DILocation(line: 68, column: 34, scope: !1723, inlinedAt: !3817)
!3982 = !DILocation(line: 68, column: 57, scope: !1723, inlinedAt: !3817)
!3983 = !DILocation(line: 68, column: 69, scope: !1723, inlinedAt: !3817)
!3984 = !DILocation(line: 68, column: 72, scope: !1723, inlinedAt: !3817)
!3985 = !DILocation(line: 68, column: 79, scope: !1723, inlinedAt: !3817)
!3986 = !DILocation(line: 68, column: 84, scope: !1723, inlinedAt: !3817)
!3987 = !DILocation(line: 68, column: 99, scope: !1723, inlinedAt: !3817)
!3988 = !DILocation(line: 68, column: 102, scope: !1723, inlinedAt: !3817)
!3989 = !DILocation(line: 68, column: 109, scope: !1723, inlinedAt: !3817)
!3990 = !DILocation(line: 68, column: 114, scope: !1723, inlinedAt: !3817)
!3991 = !DILocation(line: 68, column: 94, scope: !1723, inlinedAt: !3817)
!3992 = !DILocation(line: 68, column: 63, scope: !1723, inlinedAt: !3817)
!3993 = !DILocation(line: 196, column: 109, scope: !3818)
!3994 = !DILocation(line: 196, column: 118, scope: !3818)
!3995 = !DILocation(line: 196, column: 105, scope: !3818)
!3996 = !DILocation(line: 196, column: 22, scope: !3818)
!3997 = !DILocation(line: 197, column: 31, scope: !3818)
!3998 = !DILocation(line: 197, column: 17, scope: !3818)
!3999 = !DILocation(line: 198, column: 9, scope: !3818)
!4000 = !DILocation(line: 198, column: 18, scope: !4001)
!4001 = !DILexicalBlockFile(scope: !3819, file: !3815, discriminator: 1)
!4002 = !DILocation(line: 198, column: 21, scope: !4001)
!4003 = !DILocation(line: 198, column: 33, scope: !4001)
!4004 = !DILocation(line: 198, column: 36, scope: !4005)
!4005 = !DILexicalBlockFile(scope: !3819, file: !3815, discriminator: 2)
!4006 = !DILocation(line: 198, column: 47, scope: !4005)
!4007 = !DILocation(line: 198, column: 45, scope: !4005)
!4008 = !DILocation(line: 198, column: 9, scope: !3920)
!4009 = !DILocation(line: 200, column: 23, scope: !3819)
!4010 = !DILocation(line: 200, column: 10, scope: !3819)
!4011 = !DILocation(line: 200, column: 15, scope: !3819)
!4012 = !DILocation(line: 200, column: 21, scope: !3819)
!4013 = !DILocation(line: 201, column: 16, scope: !3819)
!4014 = !DILocation(line: 201, column: 20, scope: !3819)
!4015 = !DILocation(line: 201, column: 9, scope: !3819)
!4016 = !DILocation(line: 204, column: 1, scope: !3814)
!4017 = distinct !DISubprogram(name: "get_bits_count", scope: !1684, file: !1684, line: 219, type: !4018, isLocal: true, isDefinition: true, scopeLine: 220, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!4018 = !DISubroutineType(types: !4019)
!4019 = !{!899, !4020}
!4020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4021, size: 64, align: 64)
!4021 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1683)
!4022 = !DILocalVariable(name: "s", arg: 1, scope: !4017, file: !1684, line: 219, type: !4020)
!4023 = !DILocation(line: 219, column: 55, scope: !4017)
!4024 = !DILocation(line: 224, column: 12, scope: !4017)
!4025 = !DILocation(line: 224, column: 15, scope: !4017)
!4026 = !DILocation(line: 224, column: 5, scope: !4017)
!4027 = distinct !DISubprogram(name: "init_dequant4_coeff_table", scope: !945, file: !945, line: 1112, type: !4028, isLocal: true, isDefinition: true, scopeLine: 1113, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!4028 = !DISubroutineType(types: !4029)
!4029 = !{null, !1735}
!4030 = !DILocalVariable(name: "s", arg: 1, scope: !4027, file: !945, line: 1112, type: !1735)
!4031 = !DILocation(line: 1112, column: 52, scope: !4027)
!4032 = !DILocalVariable(name: "q", scope: !4027, file: !945, line: 1114, type: !899)
!4033 = !DILocation(line: 1114, column: 9, scope: !4027)
!4034 = !DILocalVariable(name: "x", scope: !4027, file: !945, line: 1114, type: !899)
!4035 = !DILocation(line: 1114, column: 12, scope: !4027)
!4036 = !DILocalVariable(name: "max_qp", scope: !4027, file: !945, line: 1115, type: !971)
!4037 = !DILocation(line: 1115, column: 15, scope: !4027)
!4038 = !DILocation(line: 1117, column: 12, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !4027, file: !945, line: 1117, column: 5)
!4040 = !DILocation(line: 1117, column: 10, scope: !4039)
!4041 = !DILocation(line: 1117, column: 17, scope: !4042)
!4042 = !DILexicalBlockFile(scope: !4043, file: !945, discriminator: 1)
!4043 = distinct !DILexicalBlock(scope: !4039, file: !945, line: 1117, column: 5)
!4044 = !DILocation(line: 1117, column: 19, scope: !4042)
!4045 = !DILocation(line: 1117, column: 5, scope: !4042)
!4046 = !DILocalVariable(name: "shift", scope: !4047, file: !945, line: 1118, type: !899)
!4047 = distinct !DILexicalBlock(scope: !4043, file: !945, line: 1117, column: 38)
!4048 = !DILocation(line: 1118, column: 13, scope: !4047)
!4049 = !DILocation(line: 1118, column: 40, scope: !4047)
!4050 = !DILocation(line: 1118, column: 21, scope: !4047)
!4051 = !DILocation(line: 1118, column: 43, scope: !4047)
!4052 = !DILocalVariable(name: "idx", scope: !4047, file: !945, line: 1119, type: !899)
!4053 = !DILocation(line: 1119, column: 13, scope: !4047)
!4054 = !DILocation(line: 1119, column: 38, scope: !4047)
!4055 = !DILocation(line: 1119, column: 19, scope: !4047)
!4056 = !DILocation(line: 1120, column: 16, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !4047, file: !945, line: 1120, column: 9)
!4058 = !DILocation(line: 1120, column: 14, scope: !4057)
!4059 = !DILocation(line: 1120, column: 21, scope: !4060)
!4060 = !DILexicalBlockFile(scope: !4061, file: !945, discriminator: 1)
!4061 = distinct !DILexicalBlock(scope: !4057, file: !945, line: 1120, column: 9)
!4062 = !DILocation(line: 1120, column: 23, scope: !4060)
!4063 = !DILocation(line: 1120, column: 9, scope: !4060)
!4064 = !DILocation(line: 1122, column: 62, scope: !4061)
!4065 = !DILocation(line: 1122, column: 64, scope: !4061)
!4066 = !DILocation(line: 1122, column: 73, scope: !4061)
!4067 = !DILocation(line: 1122, column: 75, scope: !4061)
!4068 = !DILocation(line: 1122, column: 81, scope: !4061)
!4069 = !DILocation(line: 1122, column: 69, scope: !4061)
!4070 = !DILocation(line: 1122, column: 28, scope: !4061)
!4071 = !DILocation(line: 1122, column: 56, scope: !4061)
!4072 = !DILocation(line: 1122, column: 18, scope: !4061)
!4073 = !DILocation(line: 1122, column: 87, scope: !4061)
!4074 = !DILocation(line: 1122, column: 96, scope: !4061)
!4075 = !DILocation(line: 1122, column: 93, scope: !4061)
!4076 = !DILocation(line: 1121, column: 35, scope: !4061)
!4077 = !DILocation(line: 1121, column: 37, scope: !4061)
!4078 = !DILocation(line: 1121, column: 47, scope: !4061)
!4079 = !DILocation(line: 1121, column: 49, scope: !4061)
!4080 = !DILocation(line: 1121, column: 55, scope: !4061)
!4081 = !DILocation(line: 1121, column: 43, scope: !4061)
!4082 = !DILocation(line: 1121, column: 13, scope: !4061)
!4083 = !DILocation(line: 1121, column: 31, scope: !4061)
!4084 = !DILocation(line: 1121, column: 16, scope: !4061)
!4085 = !DILocation(line: 1121, column: 63, scope: !4061)
!4086 = !DILocation(line: 1120, column: 30, scope: !4087)
!4087 = !DILexicalBlockFile(scope: !4061, file: !945, discriminator: 2)
!4088 = !DILocation(line: 1120, column: 9, scope: !4087)
!4089 = distinct !{!4089, !4090}
!4090 = !DILocation(line: 1120, column: 9, scope: !4047)
!4091 = !DILocation(line: 1123, column: 5, scope: !4047)
!4092 = !DILocation(line: 1117, column: 34, scope: !4093)
!4093 = !DILexicalBlockFile(scope: !4043, file: !945, discriminator: 2)
!4094 = !DILocation(line: 1117, column: 5, scope: !4093)
!4095 = distinct !{!4095, !4096}
!4096 = !DILocation(line: 1117, column: 5, scope: !4027)
!4097 = !DILocation(line: 1124, column: 1, scope: !4027)
!4098 = distinct !DISubprogram(name: "NEG_USR32", scope: !4099, file: !4099, line: 124, type: !4100, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!4099 = !DIFile(filename: "libavcodec/x86/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!4100 = !DISubroutineType(types: !4101)
!4101 = !{!896, !896, !1142}
!4102 = !DILocalVariable(name: "a", arg: 1, scope: !4098, file: !4099, line: 124, type: !896)
!4103 = !DILocation(line: 124, column: 43, scope: !4098)
!4104 = !DILocalVariable(name: "s", arg: 2, scope: !4098, file: !4099, line: 124, type: !1142)
!4105 = !DILocation(line: 124, column: 53, scope: !4098)
!4106 = !DILocation(line: 125, column: 5, scope: !4098)
!4107 = !DILocation(line: 127, column: 29, scope: !4098)
!4108 = !DILocation(line: 127, column: 28, scope: !4098)
!4109 = !DILocation(line: 127, column: 18, scope: !4098)
!4110 = !{i32 225455, i32 225469}
!4111 = !DILocation(line: 129, column: 12, scope: !4098)
!4112 = !DILocation(line: 129, column: 5, scope: !4098)
!4113 = distinct !DISubprogram(name: "get_bits_left", scope: !1684, file: !1684, line: 814, type: !3785, isLocal: true, isDefinition: true, scopeLine: 815, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!4114 = !DILocalVariable(name: "gb", arg: 1, scope: !4113, file: !1684, line: 814, type: !1682)
!4115 = !DILocation(line: 814, column: 48, scope: !4113)
!4116 = !DILocation(line: 816, column: 12, scope: !4113)
!4117 = !DILocation(line: 816, column: 16, scope: !4113)
!4118 = !DILocation(line: 816, column: 46, scope: !4113)
!4119 = !DILocation(line: 816, column: 31, scope: !4113)
!4120 = !DILocation(line: 816, column: 29, scope: !4113)
!4121 = !DILocation(line: 816, column: 5, scope: !4113)
!4122 = distinct !DISubprogram(name: "skip_bits", scope: !1684, file: !1684, line: 460, type: !4123, isLocal: true, isDefinition: true, scopeLine: 461, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!4123 = !DISubroutineType(types: !4124)
!4124 = !{null, !1682, !899}
!4125 = !DILocalVariable(name: "s", arg: 1, scope: !4122, file: !1684, line: 460, type: !1682)
!4126 = !DILocation(line: 460, column: 45, scope: !4122)
!4127 = !DILocalVariable(name: "n", arg: 2, scope: !4122, file: !1684, line: 460, type: !899)
!4128 = !DILocation(line: 460, column: 52, scope: !4122)
!4129 = !DILocalVariable(name: "re_index", scope: !4122, file: !1684, line: 481, type: !898)
!4130 = !DILocation(line: 481, column: 18, scope: !4122)
!4131 = !DILocation(line: 481, column: 30, scope: !4122)
!4132 = !DILocation(line: 481, column: 34, scope: !4122)
!4133 = !DILocalVariable(name: "re_cache", scope: !4122, file: !1684, line: 481, type: !898)
!4134 = !DILocation(line: 481, column: 78, scope: !4122)
!4135 = !DILocalVariable(name: "re_size_plus8", scope: !4122, file: !1684, line: 481, type: !898)
!4136 = !DILocation(line: 481, column: 101, scope: !4122)
!4137 = !DILocation(line: 481, column: 118, scope: !4122)
!4138 = !DILocation(line: 481, column: 122, scope: !4122)
!4139 = !DILocation(line: 482, column: 18, scope: !4122)
!4140 = !DILocation(line: 482, column: 36, scope: !4122)
!4141 = !DILocation(line: 482, column: 48, scope: !4122)
!4142 = !DILocation(line: 482, column: 45, scope: !4122)
!4143 = !DILocation(line: 482, column: 33, scope: !4122)
!4144 = !DILocation(line: 482, column: 17, scope: !4122)
!4145 = !DILocation(line: 482, column: 55, scope: !4146)
!4146 = !DILexicalBlockFile(scope: !4122, file: !1684, discriminator: 1)
!4147 = !DILocation(line: 482, column: 67, scope: !4146)
!4148 = !DILocation(line: 482, column: 64, scope: !4146)
!4149 = !DILocation(line: 482, column: 17, scope: !4146)
!4150 = !DILocation(line: 482, column: 74, scope: !4151)
!4151 = !DILexicalBlockFile(scope: !4122, file: !1684, discriminator: 2)
!4152 = !DILocation(line: 482, column: 17, scope: !4151)
!4153 = !DILocation(line: 482, column: 17, scope: !4154)
!4154 = !DILexicalBlockFile(scope: !4122, file: !1684, discriminator: 3)
!4155 = !DILocation(line: 482, column: 14, scope: !4154)
!4156 = !DILocation(line: 483, column: 18, scope: !4122)
!4157 = !DILocation(line: 483, column: 6, scope: !4122)
!4158 = !DILocation(line: 483, column: 10, scope: !4122)
!4159 = !DILocation(line: 483, column: 16, scope: !4122)
!4160 = !DILocation(line: 485, column: 1, scope: !4122)
!4161 = distinct !DISubprogram(name: "svq3_decode_slice_header", scope: !945, file: !945, line: 1018, type: !1034, isLocal: true, isDefinition: true, scopeLine: 1019, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!4162 = !DILocalVariable(name: "avctx", arg: 1, scope: !4161, file: !945, line: 1018, type: !1036)
!4163 = !DILocation(line: 1018, column: 53, scope: !4161)
!4164 = !DILocalVariable(name: "s", scope: !4161, file: !945, line: 1020, type: !1735)
!4165 = !DILocation(line: 1020, column: 18, scope: !4161)
!4166 = !DILocation(line: 1020, column: 22, scope: !4161)
!4167 = !DILocation(line: 1020, column: 29, scope: !4161)
!4168 = !DILocalVariable(name: "mb_xy", scope: !4161, file: !945, line: 1021, type: !971)
!4169 = !DILocation(line: 1021, column: 15, scope: !4161)
!4170 = !DILocation(line: 1021, column: 23, scope: !4161)
!4171 = !DILocation(line: 1021, column: 26, scope: !4161)
!4172 = !DILocalVariable(name: "i", scope: !4161, file: !945, line: 1022, type: !899)
!4173 = !DILocation(line: 1022, column: 9, scope: !4161)
!4174 = !DILocalVariable(name: "header", scope: !4161, file: !945, line: 1022, type: !899)
!4175 = !DILocation(line: 1022, column: 12, scope: !4161)
!4176 = !DILocalVariable(name: "slice_id", scope: !4161, file: !945, line: 1023, type: !898)
!4177 = !DILocation(line: 1023, column: 14, scope: !4161)
!4178 = !DILocation(line: 1025, column: 24, scope: !4161)
!4179 = !DILocation(line: 1025, column: 27, scope: !4161)
!4180 = !DILocation(line: 1025, column: 14, scope: !4161)
!4181 = !DILocation(line: 1025, column: 12, scope: !4161)
!4182 = !DILocation(line: 1027, column: 11, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4161, file: !945, line: 1027, column: 9)
!4184 = !DILocation(line: 1027, column: 18, scope: !4183)
!4185 = !DILocation(line: 1027, column: 26, scope: !4183)
!4186 = !DILocation(line: 1027, column: 31, scope: !4183)
!4187 = !DILocation(line: 1027, column: 35, scope: !4188)
!4188 = !DILexicalBlockFile(scope: !4183, file: !945, discriminator: 1)
!4189 = !DILocation(line: 1027, column: 42, scope: !4188)
!4190 = !DILocation(line: 1027, column: 50, scope: !4188)
!4191 = !DILocation(line: 1027, column: 56, scope: !4188)
!4192 = !DILocation(line: 1027, column: 60, scope: !4193)
!4193 = !DILexicalBlockFile(scope: !4183, file: !945, discriminator: 2)
!4194 = !DILocation(line: 1027, column: 67, scope: !4193)
!4195 = !DILocation(line: 1027, column: 75, scope: !4193)
!4196 = !DILocation(line: 1027, column: 9, scope: !4193)
!4197 = !DILocation(line: 1029, column: 16, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !4183, file: !945, line: 1027, column: 81)
!4199 = !DILocation(line: 1029, column: 64, scope: !4198)
!4200 = !DILocation(line: 1029, column: 9, scope: !4198)
!4201 = !DILocation(line: 1030, column: 9, scope: !4198)
!4202 = !DILocalVariable(name: "slice_bits", scope: !4203, file: !945, line: 1032, type: !899)
!4203 = distinct !DILexicalBlock(scope: !4183, file: !945, line: 1031, column: 12)
!4204 = !DILocation(line: 1032, column: 13, scope: !4203)
!4205 = !DILocalVariable(name: "slice_bytes", scope: !4203, file: !945, line: 1032, type: !899)
!4206 = !DILocation(line: 1032, column: 25, scope: !4203)
!4207 = !DILocalVariable(name: "slice_length", scope: !4203, file: !945, line: 1032, type: !899)
!4208 = !DILocation(line: 1032, column: 38, scope: !4203)
!4209 = !DILocalVariable(name: "length", scope: !4203, file: !945, line: 1033, type: !899)
!4210 = !DILocation(line: 1033, column: 13, scope: !4203)
!4211 = !DILocation(line: 1033, column: 22, scope: !4203)
!4212 = !DILocation(line: 1033, column: 29, scope: !4203)
!4213 = !DILocation(line: 1033, column: 34, scope: !4203)
!4214 = !DILocation(line: 1035, column: 35, scope: !4203)
!4215 = !DILocation(line: 1035, column: 38, scope: !4203)
!4216 = !DILocation(line: 1035, column: 46, scope: !4203)
!4217 = !DILocation(line: 1035, column: 44, scope: !4203)
!4218 = !DILocation(line: 1035, column: 24, scope: !4203)
!4219 = !DILocation(line: 1035, column: 22, scope: !4203)
!4220 = !DILocation(line: 1036, column: 22, scope: !4203)
!4221 = !DILocation(line: 1036, column: 35, scope: !4203)
!4222 = !DILocation(line: 1036, column: 20, scope: !4203)
!4223 = !DILocation(line: 1037, column: 23, scope: !4203)
!4224 = !DILocation(line: 1037, column: 38, scope: !4203)
!4225 = !DILocation(line: 1037, column: 36, scope: !4203)
!4226 = !DILocation(line: 1037, column: 45, scope: !4203)
!4227 = !DILocation(line: 1037, column: 21, scope: !4203)
!4228 = !DILocation(line: 1039, column: 20, scope: !4203)
!4229 = !DILocation(line: 1039, column: 23, scope: !4203)
!4230 = !DILocation(line: 1039, column: 9, scope: !4203)
!4231 = !DILocation(line: 1041, column: 25, scope: !4203)
!4232 = !DILocation(line: 1041, column: 28, scope: !4203)
!4233 = !DILocation(line: 1041, column: 24, scope: !4203)
!4234 = !DILocation(line: 1041, column: 40, scope: !4203)
!4235 = !DILocation(line: 1041, column: 43, scope: !4203)
!4236 = !DILocation(line: 1041, column: 55, scope: !4203)
!4237 = !DILocation(line: 1041, column: 67, scope: !4203)
!4238 = !DILocation(line: 1041, column: 9, scope: !4203)
!4239 = !DILocation(line: 1042, column: 14, scope: !4240)
!4240 = distinct !DILexicalBlock(scope: !4203, file: !945, line: 1042, column: 13)
!4241 = !DILocation(line: 1042, column: 17, scope: !4240)
!4242 = !DILocation(line: 1042, column: 13, scope: !4203)
!4243 = !DILocation(line: 1043, column: 13, scope: !4240)
!4244 = !DILocation(line: 1045, column: 13, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4203, file: !945, line: 1045, column: 13)
!4246 = !DILocation(line: 1045, column: 25, scope: !4245)
!4247 = !DILocation(line: 1045, column: 48, scope: !4245)
!4248 = !DILocation(line: 1045, column: 51, scope: !4245)
!4249 = !DILocation(line: 1045, column: 33, scope: !4245)
!4250 = !DILocation(line: 1045, column: 31, scope: !4245)
!4251 = !DILocation(line: 1045, column: 13, scope: !4203)
!4252 = !DILocation(line: 1046, column: 20, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4245, file: !945, line: 1045, column: 56)
!4254 = !DILocation(line: 1046, column: 13, scope: !4253)
!4255 = !DILocation(line: 1047, column: 13, scope: !4253)
!4256 = !DILocation(line: 1049, column: 16, scope: !4203)
!4257 = !DILocation(line: 1049, column: 19, scope: !4203)
!4258 = !DILocation(line: 1049, column: 30, scope: !4203)
!4259 = !DILocation(line: 1049, column: 33, scope: !4203)
!4260 = !DILocation(line: 1049, column: 36, scope: !4203)
!4261 = !DILocation(line: 1049, column: 45, scope: !4203)
!4262 = !DILocation(line: 1049, column: 48, scope: !4203)
!4263 = !DILocation(line: 1049, column: 51, scope: !4203)
!4264 = !DILocation(line: 1049, column: 57, scope: !4203)
!4265 = !DILocation(line: 1049, column: 43, scope: !4203)
!4266 = !DILocation(line: 1049, column: 62, scope: !4203)
!4267 = !DILocation(line: 1049, column: 9, scope: !4203)
!4268 = !DILocation(line: 1051, column: 13, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4203, file: !945, line: 1051, column: 13)
!4270 = !DILocation(line: 1051, column: 16, scope: !4269)
!4271 = !DILocation(line: 1051, column: 13, scope: !4203)
!4272 = !DILocalVariable(name: "header", scope: !4273, file: !945, line: 1052, type: !896)
!4273 = distinct !DILexicalBlock(scope: !4269, file: !945, line: 1051, column: 31)
!4274 = !DILocation(line: 1052, column: 22, scope: !4273)
!4275 = !DILocation(line: 1052, column: 64, scope: !4273)
!4276 = !DILocation(line: 1052, column: 67, scope: !4273)
!4277 = !DILocation(line: 1052, column: 83, scope: !4273)
!4278 = !DILocation(line: 1053, column: 66, scope: !4273)
!4279 = !DILocation(line: 1053, column: 75, scope: !4273)
!4280 = !DILocation(line: 1053, column: 78, scope: !4273)
!4281 = !DILocation(line: 1053, column: 73, scope: !4273)
!4282 = !DILocation(line: 1053, column: 41, scope: !4273)
!4283 = !DILocation(line: 1053, column: 44, scope: !4273)
!4284 = !DILocation(line: 1053, column: 60, scope: !4273)
!4285 = !DILocation(line: 1053, column: 63, scope: !4273)
!4286 = !DILocation(line: 1054, column: 9, scope: !4273)
!4287 = !DILocation(line: 1055, column: 24, scope: !4203)
!4288 = !DILocation(line: 1055, column: 27, scope: !4203)
!4289 = !DILocation(line: 1055, column: 37, scope: !4203)
!4290 = !DILocation(line: 1055, column: 40, scope: !4203)
!4291 = !DILocation(line: 1055, column: 51, scope: !4203)
!4292 = !DILocation(line: 1055, column: 9, scope: !4203)
!4293 = !DILocation(line: 1057, column: 13, scope: !4294)
!4294 = distinct !DILexicalBlock(scope: !4203, file: !945, line: 1057, column: 13)
!4295 = !DILocation(line: 1057, column: 20, scope: !4294)
!4296 = !DILocation(line: 1057, column: 13, scope: !4203)
!4297 = !DILocation(line: 1058, column: 21, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4294, file: !945, line: 1057, column: 25)
!4299 = !DILocation(line: 1058, column: 24, scope: !4298)
!4300 = !DILocation(line: 1058, column: 49, scope: !4298)
!4301 = !DILocation(line: 1058, column: 36, scope: !4298)
!4302 = !DILocation(line: 1058, column: 39, scope: !4298)
!4303 = !DILocation(line: 1058, column: 64, scope: !4298)
!4304 = !DILocation(line: 1058, column: 71, scope: !4298)
!4305 = !DILocation(line: 1058, column: 13, scope: !4298)
!4306 = !DILocation(line: 1059, column: 9, scope: !4298)
!4307 = !DILocation(line: 1060, column: 25, scope: !4203)
!4308 = !DILocation(line: 1060, column: 28, scope: !4203)
!4309 = !DILocation(line: 1060, column: 32, scope: !4203)
!4310 = !DILocation(line: 1060, column: 44, scope: !4203)
!4311 = !DILocation(line: 1060, column: 9, scope: !4203)
!4312 = !DILocation(line: 1063, column: 48, scope: !4313)
!4313 = distinct !DILexicalBlock(scope: !4161, file: !945, line: 1063, column: 9)
!4314 = !DILocation(line: 1063, column: 51, scope: !4313)
!4315 = !DILocation(line: 1063, column: 21, scope: !4313)
!4316 = !DILocation(line: 1063, column: 19, scope: !4313)
!4317 = !DILocation(line: 1063, column: 62, scope: !4313)
!4318 = !DILocation(line: 1063, column: 9, scope: !4161)
!4319 = !DILocation(line: 1064, column: 16, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4313, file: !945, line: 1063, column: 68)
!4321 = !DILocation(line: 1064, column: 19, scope: !4320)
!4322 = !DILocation(line: 1064, column: 58, scope: !4320)
!4323 = !DILocation(line: 1064, column: 9, scope: !4320)
!4324 = !DILocation(line: 1065, column: 9, scope: !4320)
!4325 = !DILocation(line: 1068, column: 49, scope: !4161)
!4326 = !DILocation(line: 1068, column: 21, scope: !4161)
!4327 = !DILocation(line: 1068, column: 5, scope: !4161)
!4328 = !DILocation(line: 1068, column: 8, scope: !4161)
!4329 = !DILocation(line: 1068, column: 19, scope: !4161)
!4330 = !DILocation(line: 1070, column: 10, scope: !4331)
!4331 = distinct !DILexicalBlock(scope: !4161, file: !945, line: 1070, column: 9)
!4332 = !DILocation(line: 1070, column: 17, scope: !4331)
!4333 = !DILocation(line: 1070, column: 25, scope: !4331)
!4334 = !DILocation(line: 1070, column: 9, scope: !4161)
!4335 = !DILocation(line: 1071, column: 14, scope: !4336)
!4336 = distinct !DILexicalBlock(scope: !4331, file: !945, line: 1070, column: 31)
!4337 = !DILocation(line: 1071, column: 17, scope: !4336)
!4338 = !DILocation(line: 1071, column: 24, scope: !4336)
!4339 = !DILocation(line: 1071, column: 13, scope: !4336)
!4340 = !DILocation(line: 1071, column: 13, scope: !4341)
!4341 = !DILexicalBlockFile(scope: !4336, file: !945, discriminator: 1)
!4342 = !DILocation(line: 1071, column: 62, scope: !4343)
!4343 = !DILexicalBlockFile(scope: !4336, file: !945, discriminator: 2)
!4344 = !DILocation(line: 1071, column: 65, scope: !4343)
!4345 = !DILocation(line: 1071, column: 72, scope: !4343)
!4346 = !DILocation(line: 1071, column: 76, scope: !4343)
!4347 = !DILocation(line: 1071, column: 47, scope: !4343)
!4348 = !DILocation(line: 1071, column: 45, scope: !4343)
!4349 = !DILocation(line: 1071, column: 39, scope: !4343)
!4350 = !DILocation(line: 1071, column: 13, scope: !4343)
!4351 = !DILocation(line: 1071, column: 13, scope: !4352)
!4352 = !DILexicalBlockFile(scope: !4336, file: !945, discriminator: 3)
!4353 = !DILocation(line: 1071, column: 11, scope: !4352)
!4354 = !DILocation(line: 1072, column: 19, scope: !4336)
!4355 = !DILocation(line: 1072, column: 22, scope: !4336)
!4356 = !DILocation(line: 1072, column: 32, scope: !4336)
!4357 = !DILocation(line: 1072, column: 9, scope: !4336)
!4358 = !DILocation(line: 1073, column: 5, scope: !4336)
!4359 = !DILocation(line: 1073, column: 27, scope: !4360)
!4360 = !DILexicalBlockFile(scope: !4361, file: !945, discriminator: 1)
!4361 = distinct !DILexicalBlock(scope: !4331, file: !945, line: 1073, column: 16)
!4362 = !DILocation(line: 1073, column: 30, scope: !4360)
!4363 = !DILocation(line: 1073, column: 16, scope: !4360)
!4364 = !DILocation(line: 1074, column: 39, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4361, file: !945, line: 1073, column: 41)
!4366 = !DILocation(line: 1074, column: 42, scope: !4365)
!4367 = !DILocation(line: 1074, column: 9, scope: !4365)
!4368 = !DILocation(line: 1075, column: 9, scope: !4365)
!4369 = !DILocation(line: 1078, column: 30, scope: !4161)
!4370 = !DILocation(line: 1078, column: 33, scope: !4161)
!4371 = !DILocation(line: 1078, column: 20, scope: !4161)
!4372 = !DILocation(line: 1078, column: 5, scope: !4161)
!4373 = !DILocation(line: 1078, column: 8, scope: !4161)
!4374 = !DILocation(line: 1078, column: 18, scope: !4161)
!4375 = !DILocation(line: 1079, column: 27, scope: !4161)
!4376 = !DILocation(line: 1079, column: 30, scope: !4161)
!4377 = !DILocation(line: 1079, column: 17, scope: !4161)
!4378 = !DILocation(line: 1079, column: 5, scope: !4161)
!4379 = !DILocation(line: 1079, column: 8, scope: !4161)
!4380 = !DILocation(line: 1079, column: 15, scope: !4161)
!4381 = !DILocation(line: 1080, column: 36, scope: !4161)
!4382 = !DILocation(line: 1080, column: 39, scope: !4161)
!4383 = !DILocation(line: 1080, column: 25, scope: !4161)
!4384 = !DILocation(line: 1080, column: 5, scope: !4161)
!4385 = !DILocation(line: 1080, column: 8, scope: !4161)
!4386 = !DILocation(line: 1080, column: 23, scope: !4161)
!4387 = !DILocation(line: 1083, column: 17, scope: !4161)
!4388 = !DILocation(line: 1083, column: 20, scope: !4161)
!4389 = !DILocation(line: 1083, column: 5, scope: !4161)
!4390 = !DILocation(line: 1085, column: 9, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4161, file: !945, line: 1085, column: 9)
!4392 = !DILocation(line: 1085, column: 12, scope: !4391)
!4393 = !DILocation(line: 1085, column: 9, scope: !4161)
!4394 = !DILocation(line: 1086, column: 21, scope: !4391)
!4395 = !DILocation(line: 1086, column: 24, scope: !4391)
!4396 = !DILocation(line: 1086, column: 9, scope: !4391)
!4397 = !DILocation(line: 1088, column: 17, scope: !4161)
!4398 = !DILocation(line: 1088, column: 20, scope: !4161)
!4399 = !DILocation(line: 1088, column: 5, scope: !4161)
!4400 = !DILocation(line: 1089, column: 16, scope: !4161)
!4401 = !DILocation(line: 1089, column: 19, scope: !4161)
!4402 = !DILocation(line: 1089, column: 5, scope: !4161)
!4403 = !DILocation(line: 1091, column: 32, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4161, file: !945, line: 1091, column: 9)
!4405 = !DILocation(line: 1091, column: 35, scope: !4404)
!4406 = !DILocation(line: 1091, column: 9, scope: !4404)
!4407 = !DILocation(line: 1091, column: 45, scope: !4404)
!4408 = !DILocation(line: 1091, column: 9, scope: !4161)
!4409 = !DILocation(line: 1092, column: 9, scope: !4404)
!4410 = !DILocation(line: 1095, column: 9, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !4161, file: !945, line: 1095, column: 9)
!4412 = !DILocation(line: 1095, column: 12, scope: !4411)
!4413 = !DILocation(line: 1095, column: 17, scope: !4411)
!4414 = !DILocation(line: 1095, column: 9, scope: !4161)
!4415 = !DILocation(line: 1096, column: 16, scope: !4416)
!4416 = distinct !DILexicalBlock(scope: !4411, file: !945, line: 1095, column: 22)
!4417 = !DILocation(line: 1096, column: 19, scope: !4416)
!4418 = !DILocation(line: 1096, column: 52, scope: !4416)
!4419 = !DILocation(line: 1096, column: 58, scope: !4416)
!4420 = !DILocation(line: 1096, column: 40, scope: !4416)
!4421 = !DILocation(line: 1096, column: 43, scope: !4416)
!4422 = !DILocation(line: 1096, column: 38, scope: !4416)
!4423 = !DILocation(line: 1096, column: 63, scope: !4416)
!4424 = !DILocation(line: 1096, column: 9, scope: !4416)
!4425 = !DILocation(line: 1098, column: 16, scope: !4416)
!4426 = !DILocation(line: 1098, column: 19, scope: !4416)
!4427 = !DILocation(line: 1098, column: 52, scope: !4416)
!4428 = !DILocation(line: 1098, column: 60, scope: !4416)
!4429 = !DILocation(line: 1098, column: 63, scope: !4416)
!4430 = !DILocation(line: 1098, column: 58, scope: !4416)
!4431 = !DILocation(line: 1098, column: 40, scope: !4416)
!4432 = !DILocation(line: 1098, column: 43, scope: !4416)
!4433 = !DILocation(line: 1098, column: 38, scope: !4416)
!4434 = !DILocation(line: 1099, column: 41, scope: !4416)
!4435 = !DILocation(line: 1099, column: 44, scope: !4416)
!4436 = !DILocation(line: 1099, column: 39, scope: !4416)
!4437 = !DILocation(line: 1098, column: 9, scope: !4416)
!4438 = !DILocation(line: 1100, column: 5, scope: !4416)
!4439 = !DILocation(line: 1101, column: 9, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !4161, file: !945, line: 1101, column: 9)
!4441 = !DILocation(line: 1101, column: 12, scope: !4440)
!4442 = !DILocation(line: 1101, column: 17, scope: !4440)
!4443 = !DILocation(line: 1101, column: 9, scope: !4161)
!4444 = !DILocation(line: 1102, column: 16, scope: !4445)
!4445 = distinct !DILexicalBlock(scope: !4440, file: !945, line: 1101, column: 22)
!4446 = !DILocation(line: 1102, column: 19, scope: !4445)
!4447 = !DILocation(line: 1102, column: 52, scope: !4445)
!4448 = !DILocation(line: 1102, column: 60, scope: !4445)
!4449 = !DILocation(line: 1102, column: 63, scope: !4445)
!4450 = !DILocation(line: 1102, column: 58, scope: !4445)
!4451 = !DILocation(line: 1102, column: 40, scope: !4445)
!4452 = !DILocation(line: 1102, column: 43, scope: !4445)
!4453 = !DILocation(line: 1102, column: 38, scope: !4445)
!4454 = !DILocation(line: 1103, column: 42, scope: !4445)
!4455 = !DILocation(line: 1103, column: 45, scope: !4445)
!4456 = !DILocation(line: 1103, column: 56, scope: !4445)
!4457 = !DILocation(line: 1103, column: 59, scope: !4445)
!4458 = !DILocation(line: 1103, column: 54, scope: !4445)
!4459 = !DILocation(line: 1103, column: 41, scope: !4445)
!4460 = !DILocation(line: 1103, column: 39, scope: !4445)
!4461 = !DILocation(line: 1102, column: 9, scope: !4445)
!4462 = !DILocation(line: 1105, column: 13, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4445, file: !945, line: 1105, column: 13)
!4464 = !DILocation(line: 1105, column: 16, scope: !4463)
!4465 = !DILocation(line: 1105, column: 21, scope: !4463)
!4466 = !DILocation(line: 1105, column: 13, scope: !4445)
!4467 = !DILocation(line: 1106, column: 47, scope: !4463)
!4468 = !DILocation(line: 1106, column: 55, scope: !4463)
!4469 = !DILocation(line: 1106, column: 58, scope: !4463)
!4470 = !DILocation(line: 1106, column: 53, scope: !4463)
!4471 = !DILocation(line: 1106, column: 68, scope: !4463)
!4472 = !DILocation(line: 1106, column: 35, scope: !4463)
!4473 = !DILocation(line: 1106, column: 38, scope: !4463)
!4474 = !DILocation(line: 1106, column: 73, scope: !4463)
!4475 = !DILocation(line: 1106, column: 13, scope: !4463)
!4476 = !DILocation(line: 1106, column: 16, scope: !4463)
!4477 = !DILocation(line: 1106, column: 78, scope: !4463)
!4478 = !DILocation(line: 1107, column: 5, scope: !4445)
!4479 = !DILocation(line: 1109, column: 5, scope: !4161)
!4480 = !DILocation(line: 1110, column: 1, scope: !4161)
!4481 = distinct !DISubprogram(name: "get_buffer", scope: !945, file: !945, line: 1350, type: !4482, isLocal: true, isDefinition: true, scopeLine: 1351, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!4482 = !DISubroutineType(types: !4483)
!4483 = !{!899, !1036, !1909}
!4484 = !DILocalVariable(name: "avctx", arg: 1, scope: !4481, file: !945, line: 1350, type: !1036)
!4485 = !DILocation(line: 1350, column: 39, scope: !4481)
!4486 = !DILocalVariable(name: "pic", arg: 2, scope: !4481, file: !945, line: 1350, type: !1909)
!4487 = !DILocation(line: 1350, column: 57, scope: !4481)
!4488 = !DILocalVariable(name: "s", scope: !4481, file: !945, line: 1352, type: !1735)
!4489 = !DILocation(line: 1352, column: 18, scope: !4481)
!4490 = !DILocation(line: 1352, column: 22, scope: !4481)
!4491 = !DILocation(line: 1352, column: 29, scope: !4481)
!4492 = !DILocalVariable(name: "big_mb_num", scope: !4481, file: !945, line: 1353, type: !971)
!4493 = !DILocation(line: 1353, column: 15, scope: !4481)
!4494 = !DILocation(line: 1353, column: 28, scope: !4481)
!4495 = !DILocation(line: 1353, column: 31, scope: !4481)
!4496 = !DILocation(line: 1353, column: 44, scope: !4481)
!4497 = !DILocation(line: 1353, column: 47, scope: !4481)
!4498 = !DILocation(line: 1353, column: 57, scope: !4481)
!4499 = !DILocation(line: 1353, column: 41, scope: !4481)
!4500 = !DILocation(line: 1353, column: 62, scope: !4481)
!4501 = !DILocalVariable(name: "mb_array_size", scope: !4481, file: !945, line: 1354, type: !971)
!4502 = !DILocation(line: 1354, column: 15, scope: !4481)
!4503 = !DILocation(line: 1354, column: 31, scope: !4481)
!4504 = !DILocation(line: 1354, column: 34, scope: !4481)
!4505 = !DILocation(line: 1354, column: 46, scope: !4481)
!4506 = !DILocation(line: 1354, column: 49, scope: !4481)
!4507 = !DILocation(line: 1354, column: 44, scope: !4481)
!4508 = !DILocalVariable(name: "b4_stride", scope: !4481, file: !945, line: 1355, type: !971)
!4509 = !DILocation(line: 1355, column: 15, scope: !4481)
!4510 = !DILocation(line: 1355, column: 27, scope: !4481)
!4511 = !DILocation(line: 1355, column: 30, scope: !4481)
!4512 = !DILocation(line: 1355, column: 39, scope: !4481)
!4513 = !DILocation(line: 1355, column: 43, scope: !4481)
!4514 = !DILocalVariable(name: "b4_array_size", scope: !4481, file: !945, line: 1356, type: !971)
!4515 = !DILocation(line: 1356, column: 15, scope: !4481)
!4516 = !DILocation(line: 1356, column: 31, scope: !4481)
!4517 = !DILocation(line: 1356, column: 43, scope: !4481)
!4518 = !DILocation(line: 1356, column: 46, scope: !4481)
!4519 = !DILocation(line: 1356, column: 41, scope: !4481)
!4520 = !DILocation(line: 1356, column: 56, scope: !4481)
!4521 = !DILocalVariable(name: "ret", scope: !4481, file: !945, line: 1357, type: !899)
!4522 = !DILocation(line: 1357, column: 9, scope: !4481)
!4523 = !DILocation(line: 1359, column: 10, scope: !4524)
!4524 = distinct !DILexicalBlock(scope: !4481, file: !945, line: 1359, column: 9)
!4525 = !DILocation(line: 1359, column: 15, scope: !4524)
!4526 = !DILocation(line: 1359, column: 9, scope: !4481)
!4527 = !DILocalVariable(name: "i", scope: !4528, file: !945, line: 1360, type: !899)
!4528 = distinct !DILexicalBlock(scope: !4524, file: !945, line: 1359, column: 34)
!4529 = !DILocation(line: 1360, column: 13, scope: !4528)
!4530 = !DILocation(line: 1362, column: 46, scope: !4528)
!4531 = !DILocation(line: 1362, column: 59, scope: !4528)
!4532 = !DILocation(line: 1362, column: 62, scope: !4528)
!4533 = !DILocation(line: 1362, column: 57, scope: !4528)
!4534 = !DILocation(line: 1362, column: 45, scope: !4528)
!4535 = !DILocation(line: 1362, column: 73, scope: !4528)
!4536 = !DILocation(line: 1362, column: 28, scope: !4528)
!4537 = !DILocation(line: 1362, column: 9, scope: !4528)
!4538 = !DILocation(line: 1362, column: 14, scope: !4528)
!4539 = !DILocation(line: 1362, column: 26, scope: !4528)
!4540 = !DILocation(line: 1363, column: 14, scope: !4541)
!4541 = distinct !DILexicalBlock(scope: !4528, file: !945, line: 1363, column: 13)
!4542 = !DILocation(line: 1363, column: 19, scope: !4541)
!4543 = !DILocation(line: 1363, column: 13, scope: !4528)
!4544 = !DILocation(line: 1364, column: 13, scope: !4541)
!4545 = !DILocation(line: 1365, column: 35, scope: !4528)
!4546 = !DILocation(line: 1365, column: 40, scope: !4528)
!4547 = !DILocation(line: 1365, column: 53, scope: !4528)
!4548 = !DILocation(line: 1365, column: 24, scope: !4528)
!4549 = !DILocation(line: 1365, column: 64, scope: !4528)
!4550 = !DILocation(line: 1365, column: 67, scope: !4528)
!4551 = !DILocation(line: 1365, column: 62, scope: !4528)
!4552 = !DILocation(line: 1365, column: 58, scope: !4528)
!4553 = !DILocation(line: 1365, column: 77, scope: !4528)
!4554 = !DILocation(line: 1365, column: 9, scope: !4528)
!4555 = !DILocation(line: 1365, column: 14, scope: !4528)
!4556 = !DILocation(line: 1365, column: 22, scope: !4528)
!4557 = !DILocation(line: 1367, column: 16, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4528, file: !945, line: 1367, column: 9)
!4559 = !DILocation(line: 1367, column: 14, scope: !4558)
!4560 = !DILocation(line: 1367, column: 21, scope: !4561)
!4561 = !DILexicalBlockFile(scope: !4562, file: !945, discriminator: 1)
!4562 = distinct !DILexicalBlock(scope: !4558, file: !945, line: 1367, column: 9)
!4563 = !DILocation(line: 1367, column: 23, scope: !4561)
!4564 = !DILocation(line: 1367, column: 9, scope: !4561)
!4565 = !DILocation(line: 1368, column: 60, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4562, file: !945, line: 1367, column: 33)
!4567 = !DILocation(line: 1368, column: 74, scope: !4566)
!4568 = !DILocation(line: 1368, column: 57, scope: !4566)
!4569 = !DILocation(line: 1368, column: 55, scope: !4566)
!4570 = !DILocation(line: 1368, column: 79, scope: !4566)
!4571 = !DILocation(line: 1368, column: 38, scope: !4566)
!4572 = !DILocation(line: 1368, column: 33, scope: !4566)
!4573 = !DILocation(line: 1368, column: 13, scope: !4566)
!4574 = !DILocation(line: 1368, column: 18, scope: !4566)
!4575 = !DILocation(line: 1368, column: 36, scope: !4566)
!4576 = !DILocation(line: 1369, column: 58, scope: !4566)
!4577 = !DILocation(line: 1369, column: 56, scope: !4566)
!4578 = !DILocation(line: 1369, column: 37, scope: !4566)
!4579 = !DILocation(line: 1369, column: 32, scope: !4566)
!4580 = !DILocation(line: 1369, column: 13, scope: !4566)
!4581 = !DILocation(line: 1369, column: 18, scope: !4566)
!4582 = !DILocation(line: 1369, column: 35, scope: !4566)
!4583 = !DILocation(line: 1370, column: 38, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4566, file: !945, line: 1370, column: 17)
!4585 = !DILocation(line: 1370, column: 18, scope: !4584)
!4586 = !DILocation(line: 1370, column: 23, scope: !4584)
!4587 = !DILocation(line: 1370, column: 41, scope: !4584)
!4588 = !DILocation(line: 1370, column: 64, scope: !4589)
!4589 = !DILexicalBlockFile(scope: !4584, file: !945, discriminator: 1)
!4590 = !DILocation(line: 1370, column: 45, scope: !4589)
!4591 = !DILocation(line: 1370, column: 50, scope: !4589)
!4592 = !DILocation(line: 1370, column: 17, scope: !4589)
!4593 = !DILocation(line: 1371, column: 21, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4584, file: !945, line: 1370, column: 68)
!4595 = !DILocation(line: 1372, column: 17, scope: !4594)
!4596 = !DILocation(line: 1375, column: 70, scope: !4566)
!4597 = !DILocation(line: 1375, column: 50, scope: !4566)
!4598 = !DILocation(line: 1375, column: 55, scope: !4566)
!4599 = !DILocation(line: 1375, column: 74, scope: !4566)
!4600 = !DILocation(line: 1375, column: 34, scope: !4566)
!4601 = !DILocation(line: 1375, column: 79, scope: !4566)
!4602 = !DILocation(line: 1375, column: 29, scope: !4566)
!4603 = !DILocation(line: 1375, column: 13, scope: !4566)
!4604 = !DILocation(line: 1375, column: 18, scope: !4566)
!4605 = !DILocation(line: 1375, column: 32, scope: !4566)
!4606 = !DILocation(line: 1376, column: 52, scope: !4566)
!4607 = !DILocation(line: 1376, column: 33, scope: !4566)
!4608 = !DILocation(line: 1376, column: 38, scope: !4566)
!4609 = !DILocation(line: 1376, column: 56, scope: !4566)
!4610 = !DILocation(line: 1376, column: 28, scope: !4566)
!4611 = !DILocation(line: 1376, column: 13, scope: !4566)
!4612 = !DILocation(line: 1376, column: 18, scope: !4566)
!4613 = !DILocation(line: 1376, column: 31, scope: !4566)
!4614 = !DILocation(line: 1377, column: 9, scope: !4566)
!4615 = !DILocation(line: 1367, column: 29, scope: !4616)
!4616 = !DILexicalBlockFile(scope: !4562, file: !945, discriminator: 2)
!4617 = !DILocation(line: 1367, column: 9, scope: !4616)
!4618 = distinct !{!4618, !4619}
!4619 = !DILocation(line: 1367, column: 9, scope: !4528)
!4620 = !DILocation(line: 1378, column: 5, scope: !4528)
!4621 = !DILocation(line: 1380, column: 25, scope: !4481)
!4622 = !DILocation(line: 1380, column: 32, scope: !4481)
!4623 = !DILocation(line: 1380, column: 37, scope: !4481)
!4624 = !DILocation(line: 1381, column: 26, scope: !4481)
!4625 = !DILocation(line: 1381, column: 29, scope: !4481)
!4626 = !DILocation(line: 1381, column: 39, scope: !4481)
!4627 = !DILocation(line: 1381, column: 25, scope: !4481)
!4628 = !DILocation(line: 1380, column: 11, scope: !4481)
!4629 = !DILocation(line: 1380, column: 9, scope: !4481)
!4630 = !DILocation(line: 1383, column: 9, scope: !4631)
!4631 = distinct !DILexicalBlock(scope: !4481, file: !945, line: 1383, column: 9)
!4632 = !DILocation(line: 1383, column: 13, scope: !4631)
!4633 = !DILocation(line: 1383, column: 9, scope: !4481)
!4634 = !DILocation(line: 1384, column: 9, scope: !4631)
!4635 = !DILocation(line: 1386, column: 10, scope: !4636)
!4636 = distinct !DILexicalBlock(scope: !4481, file: !945, line: 1386, column: 9)
!4637 = !DILocation(line: 1386, column: 13, scope: !4636)
!4638 = !DILocation(line: 1386, column: 9, scope: !4481)
!4639 = !DILocation(line: 1387, column: 47, scope: !4640)
!4640 = distinct !DILexicalBlock(scope: !4636, file: !945, line: 1386, column: 30)
!4641 = !DILocation(line: 1387, column: 52, scope: !4640)
!4642 = !DILocation(line: 1387, column: 55, scope: !4640)
!4643 = !DILocation(line: 1387, column: 30, scope: !4640)
!4644 = !DILocation(line: 1387, column: 9, scope: !4640)
!4645 = !DILocation(line: 1387, column: 12, scope: !4640)
!4646 = !DILocation(line: 1387, column: 28, scope: !4640)
!4647 = !DILocation(line: 1388, column: 14, scope: !4648)
!4648 = distinct !DILexicalBlock(scope: !4640, file: !945, line: 1388, column: 13)
!4649 = !DILocation(line: 1388, column: 17, scope: !4648)
!4650 = !DILocation(line: 1388, column: 13, scope: !4640)
!4651 = !DILocation(line: 1389, column: 13, scope: !4648)
!4652 = !DILocation(line: 1390, column: 5, scope: !4640)
!4653 = !DILocation(line: 1392, column: 5, scope: !4481)
!4654 = !DILocation(line: 1394, column: 18, scope: !4481)
!4655 = !DILocation(line: 1394, column: 25, scope: !4481)
!4656 = !DILocation(line: 1394, column: 5, scope: !4481)
!4657 = !DILocation(line: 1395, column: 12, scope: !4481)
!4658 = !DILocation(line: 1395, column: 5, scope: !4481)
!4659 = !DILocation(line: 1396, column: 1, scope: !4481)
!4660 = distinct !DISubprogram(name: "show_bits", scope: !1684, file: !1684, line: 443, type: !3674, isLocal: true, isDefinition: true, scopeLine: 444, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!4661 = !DILocation(line: 66, column: 98, scope: !1723, inlinedAt: !4662)
!4662 = distinct !DILocation(line: 454, column: 16, scope: !4660)
!4663 = !DILocalVariable(name: "s", arg: 1, scope: !4660, file: !1684, line: 443, type: !1682)
!4664 = !DILocation(line: 443, column: 53, scope: !4660)
!4665 = !DILocalVariable(name: "n", arg: 2, scope: !4660, file: !1684, line: 443, type: !899)
!4666 = !DILocation(line: 443, column: 60, scope: !4660)
!4667 = !DILocalVariable(name: "tmp", scope: !4660, file: !1684, line: 445, type: !899)
!4668 = !DILocation(line: 445, column: 18, scope: !4660)
!4669 = !DILocalVariable(name: "re_index", scope: !4660, file: !1684, line: 452, type: !898)
!4670 = !DILocation(line: 452, column: 18, scope: !4660)
!4671 = !DILocation(line: 452, column: 30, scope: !4660)
!4672 = !DILocation(line: 452, column: 34, scope: !4660)
!4673 = !DILocalVariable(name: "re_cache", scope: !4660, file: !1684, line: 452, type: !898)
!4674 = !DILocation(line: 452, column: 78, scope: !4660)
!4675 = !DILocation(line: 454, column: 60, scope: !4660)
!4676 = !DILocation(line: 454, column: 64, scope: !4660)
!4677 = !DILocation(line: 454, column: 74, scope: !4660)
!4678 = !DILocation(line: 454, column: 83, scope: !4660)
!4679 = !DILocation(line: 454, column: 71, scope: !4660)
!4680 = !DILocation(line: 454, column: 92, scope: !4660)
!4681 = !DILocation(line: 454, column: 16, scope: !4660)
!4682 = !DILocation(line: 68, column: 16, scope: !1723, inlinedAt: !4662)
!4683 = !DILocation(line: 68, column: 19, scope: !1723, inlinedAt: !4662)
!4684 = !DILocation(line: 68, column: 24, scope: !1723, inlinedAt: !4662)
!4685 = !DILocation(line: 68, column: 38, scope: !1723, inlinedAt: !4662)
!4686 = !DILocation(line: 68, column: 41, scope: !1723, inlinedAt: !4662)
!4687 = !DILocation(line: 68, column: 46, scope: !1723, inlinedAt: !4662)
!4688 = !DILocation(line: 68, column: 34, scope: !1723, inlinedAt: !4662)
!4689 = !DILocation(line: 68, column: 57, scope: !1723, inlinedAt: !4662)
!4690 = !DILocation(line: 68, column: 69, scope: !1723, inlinedAt: !4662)
!4691 = !DILocation(line: 68, column: 72, scope: !1723, inlinedAt: !4662)
!4692 = !DILocation(line: 68, column: 79, scope: !1723, inlinedAt: !4662)
!4693 = !DILocation(line: 68, column: 84, scope: !1723, inlinedAt: !4662)
!4694 = !DILocation(line: 68, column: 99, scope: !1723, inlinedAt: !4662)
!4695 = !DILocation(line: 68, column: 102, scope: !1723, inlinedAt: !4662)
!4696 = !DILocation(line: 68, column: 109, scope: !1723, inlinedAt: !4662)
!4697 = !DILocation(line: 68, column: 114, scope: !1723, inlinedAt: !4662)
!4698 = !DILocation(line: 68, column: 94, scope: !1723, inlinedAt: !4662)
!4699 = !DILocation(line: 68, column: 63, scope: !1723, inlinedAt: !4662)
!4700 = !DILocation(line: 454, column: 100, scope: !4660)
!4701 = !DILocation(line: 454, column: 109, scope: !4660)
!4702 = !DILocation(line: 454, column: 96, scope: !4660)
!4703 = !DILocation(line: 454, column: 14, scope: !4660)
!4704 = !DILocation(line: 455, column: 21, scope: !4660)
!4705 = !DILocation(line: 455, column: 31, scope: !4660)
!4706 = !DILocation(line: 455, column: 11, scope: !4660)
!4707 = !DILocation(line: 455, column: 9, scope: !4660)
!4708 = !DILocation(line: 457, column: 12, scope: !4660)
!4709 = !DILocation(line: 457, column: 5, scope: !4660)
!4710 = distinct !DISubprogram(name: "svq3_decode_mb", scope: !945, file: !945, line: 719, type: !4711, isLocal: true, isDefinition: true, scopeLine: 720, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!4711 = !DISubroutineType(types: !4712)
!4712 = !{!899, !1735, !898}
!4713 = !DILocalVariable(name: "d", arg: 1, scope: !934, file: !933, line: 83, type: !937)
!4714 = !DILocation(line: 83, column: 68, scope: !934, inlinedAt: !4715)
!4715 = distinct !DILocation(line: 955, column: 9, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !4717, file: !945, line: 953, column: 33)
!4717 = distinct !DILexicalBlock(scope: !4710, file: !945, line: 953, column: 9)
!4718 = !DILocation(line: 83, column: 68, scope: !934, inlinedAt: !4719)
!4719 = distinct !DILocation(line: 954, column: 9, scope: !4716)
!4720 = !DILocalVariable(name: "s", arg: 1, scope: !4710, file: !945, line: 719, type: !1735)
!4721 = !DILocation(line: 719, column: 40, scope: !4710)
!4722 = !DILocalVariable(name: "mb_type", arg: 2, scope: !4710, file: !945, line: 719, type: !898)
!4723 = !DILocation(line: 719, column: 56, scope: !4710)
!4724 = !DILocalVariable(name: "i", scope: !4710, file: !945, line: 721, type: !899)
!4725 = !DILocation(line: 721, column: 9, scope: !4710)
!4726 = !DILocalVariable(name: "j", scope: !4710, file: !945, line: 721, type: !899)
!4727 = !DILocation(line: 721, column: 12, scope: !4710)
!4728 = !DILocalVariable(name: "k", scope: !4710, file: !945, line: 721, type: !899)
!4729 = !DILocation(line: 721, column: 15, scope: !4710)
!4730 = !DILocalVariable(name: "m", scope: !4710, file: !945, line: 721, type: !899)
!4731 = !DILocation(line: 721, column: 18, scope: !4710)
!4732 = !DILocalVariable(name: "dir", scope: !4710, file: !945, line: 721, type: !899)
!4733 = !DILocation(line: 721, column: 21, scope: !4710)
!4734 = !DILocalVariable(name: "mode", scope: !4710, file: !945, line: 721, type: !899)
!4735 = !DILocation(line: 721, column: 26, scope: !4710)
!4736 = !DILocalVariable(name: "cbp", scope: !4710, file: !945, line: 722, type: !899)
!4737 = !DILocation(line: 722, column: 9, scope: !4710)
!4738 = !DILocalVariable(name: "vlc", scope: !4710, file: !945, line: 723, type: !896)
!4739 = !DILocation(line: 723, column: 14, scope: !4710)
!4740 = !DILocalVariable(name: "top", scope: !4710, file: !945, line: 724, type: !1141)
!4741 = !DILocation(line: 724, column: 13, scope: !4710)
!4742 = !DILocalVariable(name: "left", scope: !4710, file: !945, line: 724, type: !1141)
!4743 = !DILocation(line: 724, column: 19, scope: !4710)
!4744 = !DILocalVariable(name: "mb_xy", scope: !4710, file: !945, line: 725, type: !971)
!4745 = !DILocation(line: 725, column: 15, scope: !4710)
!4746 = !DILocation(line: 725, column: 23, scope: !4710)
!4747 = !DILocation(line: 725, column: 26, scope: !4710)
!4748 = !DILocalVariable(name: "b_xy", scope: !4710, file: !945, line: 726, type: !971)
!4749 = !DILocation(line: 726, column: 15, scope: !4710)
!4750 = !DILocation(line: 726, column: 26, scope: !4710)
!4751 = !DILocation(line: 726, column: 29, scope: !4710)
!4752 = !DILocation(line: 726, column: 24, scope: !4710)
!4753 = !DILocation(line: 726, column: 40, scope: !4710)
!4754 = !DILocation(line: 726, column: 43, scope: !4710)
!4755 = !DILocation(line: 726, column: 38, scope: !4710)
!4756 = !DILocation(line: 726, column: 50, scope: !4710)
!4757 = !DILocation(line: 726, column: 53, scope: !4710)
!4758 = !DILocation(line: 726, column: 48, scope: !4710)
!4759 = !DILocation(line: 726, column: 34, scope: !4710)
!4760 = !DILocation(line: 728, column: 33, scope: !4710)
!4761 = !DILocation(line: 728, column: 36, scope: !4710)
!4762 = !DILocation(line: 728, column: 41, scope: !4710)
!4763 = !DILocation(line: 728, column: 32, scope: !4710)
!4764 = !DILocation(line: 728, column: 5, scope: !4710)
!4765 = !DILocation(line: 728, column: 8, scope: !4710)
!4766 = !DILocation(line: 728, column: 30, scope: !4710)
!4767 = !DILocation(line: 729, column: 34, scope: !4710)
!4768 = !DILocation(line: 729, column: 37, scope: !4710)
!4769 = !DILocation(line: 729, column: 42, scope: !4710)
!4770 = !DILocation(line: 729, column: 33, scope: !4710)
!4771 = !DILocation(line: 729, column: 5, scope: !4710)
!4772 = !DILocation(line: 729, column: 8, scope: !4710)
!4773 = !DILocation(line: 729, column: 31, scope: !4710)
!4774 = !DILocation(line: 730, column: 5, scope: !4710)
!4775 = !DILocation(line: 730, column: 8, scope: !4710)
!4776 = !DILocation(line: 730, column: 35, scope: !4710)
!4777 = !DILocation(line: 732, column: 9, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4710, file: !945, line: 732, column: 9)
!4779 = !DILocation(line: 732, column: 17, scope: !4778)
!4780 = !DILocation(line: 732, column: 9, scope: !4710)
!4781 = !DILocation(line: 733, column: 13, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4783, file: !945, line: 733, column: 13)
!4783 = distinct !DILexicalBlock(scope: !4778, file: !945, line: 732, column: 23)
!4784 = !DILocation(line: 733, column: 16, scope: !4782)
!4785 = !DILocation(line: 733, column: 26, scope: !4782)
!4786 = !DILocation(line: 733, column: 47, scope: !4782)
!4787 = !DILocation(line: 734, column: 34, scope: !4782)
!4788 = !DILocation(line: 734, column: 13, scope: !4782)
!4789 = !DILocation(line: 734, column: 16, scope: !4782)
!4790 = !DILocation(line: 734, column: 26, scope: !4782)
!4791 = !DILocation(line: 734, column: 41, scope: !4782)
!4792 = !DILocation(line: 733, column: 13, scope: !4793)
!4793 = !DILexicalBlockFile(scope: !4783, file: !945, discriminator: 1)
!4794 = !DILocation(line: 735, column: 30, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4782, file: !945, line: 734, column: 48)
!4796 = !DILocation(line: 735, column: 38, scope: !4795)
!4797 = !DILocation(line: 735, column: 41, scope: !4795)
!4798 = !DILocation(line: 735, column: 36, scope: !4795)
!4799 = !DILocation(line: 735, column: 52, scope: !4795)
!4800 = !DILocation(line: 735, column: 55, scope: !4795)
!4801 = !DILocation(line: 735, column: 50, scope: !4795)
!4802 = !DILocation(line: 735, column: 13, scope: !4795)
!4803 = !DILocation(line: 738, column: 17, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !4795, file: !945, line: 738, column: 17)
!4805 = !DILocation(line: 738, column: 20, scope: !4804)
!4806 = !DILocation(line: 738, column: 30, scope: !4804)
!4807 = !DILocation(line: 738, column: 17, scope: !4795)
!4808 = !DILocation(line: 739, column: 34, scope: !4804)
!4809 = !DILocation(line: 739, column: 42, scope: !4804)
!4810 = !DILocation(line: 739, column: 45, scope: !4804)
!4811 = !DILocation(line: 739, column: 40, scope: !4804)
!4812 = !DILocation(line: 739, column: 56, scope: !4804)
!4813 = !DILocation(line: 739, column: 59, scope: !4804)
!4814 = !DILocation(line: 739, column: 54, scope: !4804)
!4815 = !DILocation(line: 739, column: 17, scope: !4804)
!4816 = !DILocation(line: 742, column: 21, scope: !4795)
!4817 = !DILocation(line: 743, column: 9, scope: !4795)
!4818 = !DILocation(line: 744, column: 46, scope: !4819)
!4819 = distinct !DILexicalBlock(scope: !4782, file: !945, line: 743, column: 16)
!4820 = !DILocation(line: 744, column: 25, scope: !4819)
!4821 = !DILocation(line: 744, column: 28, scope: !4819)
!4822 = !DILocation(line: 744, column: 38, scope: !4819)
!4823 = !DILocation(line: 744, column: 54, scope: !4819)
!4824 = !DILocation(line: 744, column: 24, scope: !4819)
!4825 = !DILocation(line: 744, column: 24, scope: !4826)
!4826 = !DILexicalBlockFile(scope: !4819, file: !945, discriminator: 1)
!4827 = !DILocation(line: 744, column: 90, scope: !4828)
!4828 = !DILexicalBlockFile(scope: !4819, file: !945, discriminator: 2)
!4829 = !DILocation(line: 744, column: 69, scope: !4828)
!4830 = !DILocation(line: 744, column: 72, scope: !4828)
!4831 = !DILocation(line: 744, column: 82, scope: !4828)
!4832 = !DILocation(line: 744, column: 24, scope: !4828)
!4833 = !DILocation(line: 744, column: 24, scope: !4834)
!4834 = !DILexicalBlockFile(scope: !4819, file: !945, discriminator: 3)
!4835 = !DILocation(line: 744, column: 21, scope: !4834)
!4836 = !DILocation(line: 745, column: 29, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4819, file: !945, line: 745, column: 17)
!4838 = !DILocation(line: 745, column: 32, scope: !4837)
!4839 = !DILocation(line: 745, column: 17, scope: !4837)
!4840 = !DILocation(line: 745, column: 50, scope: !4837)
!4841 = !DILocation(line: 745, column: 17, scope: !4819)
!4842 = !DILocation(line: 746, column: 17, scope: !4837)
!4843 = !DILocation(line: 747, column: 29, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4819, file: !945, line: 747, column: 17)
!4845 = !DILocation(line: 747, column: 32, scope: !4844)
!4846 = !DILocation(line: 747, column: 17, scope: !4844)
!4847 = !DILocation(line: 747, column: 50, scope: !4844)
!4848 = !DILocation(line: 747, column: 17, scope: !4819)
!4849 = !DILocation(line: 748, column: 17, scope: !4844)
!4850 = !DILocation(line: 750, column: 21, scope: !4819)
!4851 = !DILocation(line: 752, column: 5, scope: !4783)
!4852 = !DILocation(line: 752, column: 16, scope: !4853)
!4853 = !DILexicalBlockFile(scope: !4854, file: !945, discriminator: 1)
!4854 = distinct !DILexicalBlock(scope: !4778, file: !945, line: 752, column: 16)
!4855 = !DILocation(line: 752, column: 24, scope: !4853)
!4856 = !DILocation(line: 753, column: 13, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4858, file: !945, line: 753, column: 13)
!4858 = distinct !DILexicalBlock(scope: !4854, file: !945, line: 752, column: 29)
!4859 = !DILocation(line: 753, column: 16, scope: !4857)
!4860 = !DILocation(line: 753, column: 30, scope: !4857)
!4861 = !DILocation(line: 753, column: 33, scope: !4862)
!4862 = !DILexicalBlockFile(scope: !4857, file: !945, discriminator: 1)
!4863 = !DILocation(line: 753, column: 36, scope: !4862)
!4864 = !DILocation(line: 753, column: 64, scope: !4862)
!4865 = !DILocation(line: 753, column: 67, scope: !4862)
!4866 = !DILocation(line: 753, column: 53, scope: !4862)
!4867 = !DILocation(line: 753, column: 52, scope: !4862)
!4868 = !DILocation(line: 753, column: 49, scope: !4862)
!4869 = !DILocation(line: 753, column: 13, scope: !4862)
!4870 = !DILocation(line: 754, column: 18, scope: !4857)
!4871 = !DILocation(line: 754, column: 13, scope: !4857)
!4872 = !DILocation(line: 755, column: 18, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4857, file: !945, line: 755, column: 18)
!4874 = !DILocation(line: 755, column: 21, scope: !4873)
!4875 = !DILocation(line: 755, column: 34, scope: !4873)
!4876 = !DILocation(line: 756, column: 18, scope: !4873)
!4877 = !DILocation(line: 756, column: 21, scope: !4873)
!4878 = !DILocation(line: 756, column: 50, scope: !4873)
!4879 = !DILocation(line: 756, column: 53, scope: !4873)
!4880 = !DILocation(line: 756, column: 39, scope: !4873)
!4881 = !DILocation(line: 756, column: 38, scope: !4873)
!4882 = !DILocation(line: 756, column: 35, scope: !4873)
!4883 = !DILocation(line: 755, column: 18, scope: !4862)
!4884 = !DILocation(line: 757, column: 18, scope: !4873)
!4885 = !DILocation(line: 757, column: 13, scope: !4873)
!4886 = !DILocation(line: 759, column: 18, scope: !4873)
!4887 = !DILocation(line: 770, column: 16, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4858, file: !945, line: 770, column: 9)
!4889 = !DILocation(line: 770, column: 14, scope: !4888)
!4890 = !DILocation(line: 770, column: 21, scope: !4891)
!4891 = !DILexicalBlockFile(scope: !4892, file: !945, discriminator: 1)
!4892 = distinct !DILexicalBlock(scope: !4888, file: !945, line: 770, column: 9)
!4893 = !DILocation(line: 770, column: 23, scope: !4891)
!4894 = !DILocation(line: 770, column: 9, scope: !4891)
!4895 = !DILocation(line: 771, column: 17, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4897, file: !945, line: 771, column: 17)
!4897 = distinct !DILexicalBlock(scope: !4892, file: !945, line: 770, column: 33)
!4898 = !DILocation(line: 771, column: 20, scope: !4896)
!4899 = !DILocation(line: 771, column: 25, scope: !4896)
!4900 = !DILocation(line: 771, column: 29, scope: !4896)
!4901 = !DILocation(line: 771, column: 66, scope: !4902)
!4902 = !DILexicalBlockFile(scope: !4896, file: !945, discriminator: 1)
!4903 = !DILocation(line: 771, column: 72, scope: !4902)
!4904 = !DILocation(line: 771, column: 54, scope: !4902)
!4905 = !DILocation(line: 771, column: 57, scope: !4902)
!4906 = !DILocation(line: 771, column: 77, scope: !4902)
!4907 = !DILocation(line: 771, column: 32, scope: !4902)
!4908 = !DILocation(line: 771, column: 35, scope: !4902)
!4909 = !DILocation(line: 771, column: 82, scope: !4902)
!4910 = !DILocation(line: 771, column: 17, scope: !4902)
!4911 = !DILocation(line: 772, column: 24, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4913, file: !945, line: 772, column: 17)
!4913 = distinct !DILexicalBlock(scope: !4896, file: !945, line: 771, column: 89)
!4914 = !DILocation(line: 772, column: 22, scope: !4912)
!4915 = !DILocation(line: 772, column: 29, scope: !4916)
!4916 = !DILexicalBlockFile(scope: !4917, file: !945, discriminator: 1)
!4917 = distinct !DILexicalBlock(scope: !4912, file: !945, line: 772, column: 17)
!4918 = !DILocation(line: 772, column: 31, scope: !4916)
!4919 = !DILocation(line: 772, column: 17, scope: !4916)
!4920 = !DILocation(line: 773, column: 130, scope: !4917)
!4921 = !DILocation(line: 773, column: 135, scope: !4917)
!4922 = !DILocation(line: 773, column: 141, scope: !4917)
!4923 = !DILocation(line: 773, column: 145, scope: !4917)
!4924 = !DILocation(line: 773, column: 148, scope: !4917)
!4925 = !DILocation(line: 773, column: 143, scope: !4917)
!4926 = !DILocation(line: 773, column: 139, scope: !4917)
!4927 = !DILocation(line: 773, column: 104, scope: !4917)
!4928 = !DILocation(line: 773, column: 127, scope: !4917)
!4929 = !DILocation(line: 773, column: 107, scope: !4917)
!4930 = !DILocation(line: 773, column: 116, scope: !4917)
!4931 = !DILocation(line: 773, column: 161, scope: !4917)
!4932 = !DILocation(line: 773, column: 52, scope: !4917)
!4933 = !DILocation(line: 773, column: 61, scope: !4917)
!4934 = !DILocation(line: 773, column: 67, scope: !4917)
!4935 = !DILocation(line: 773, column: 69, scope: !4917)
!4936 = !DILocation(line: 773, column: 65, scope: !4917)
!4937 = !DILocation(line: 773, column: 37, scope: !4917)
!4938 = !DILocation(line: 773, column: 49, scope: !4917)
!4939 = !DILocation(line: 773, column: 40, scope: !4917)
!4940 = !DILocation(line: 773, column: 77, scope: !4917)
!4941 = !DILocation(line: 773, column: 81, scope: !4917)
!4942 = !DILocation(line: 773, column: 21, scope: !4917)
!4943 = !DILocation(line: 772, column: 37, scope: !4944)
!4944 = !DILexicalBlockFile(scope: !4917, file: !945, discriminator: 2)
!4945 = !DILocation(line: 772, column: 17, scope: !4944)
!4946 = distinct !{!4946, !4947}
!4947 = !DILocation(line: 772, column: 17, scope: !4913)
!4948 = !DILocation(line: 775, column: 13, scope: !4913)
!4949 = !DILocation(line: 776, column: 24, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4951, file: !945, line: 776, column: 17)
!4951 = distinct !DILexicalBlock(scope: !4896, file: !945, line: 775, column: 20)
!4952 = !DILocation(line: 776, column: 22, scope: !4950)
!4953 = !DILocation(line: 776, column: 29, scope: !4954)
!4954 = !DILexicalBlockFile(scope: !4955, file: !945, discriminator: 1)
!4955 = distinct !DILexicalBlock(scope: !4950, file: !945, line: 776, column: 17)
!4956 = !DILocation(line: 776, column: 31, scope: !4954)
!4957 = !DILocation(line: 776, column: 17, scope: !4954)
!4958 = !DILocation(line: 777, column: 52, scope: !4955)
!4959 = !DILocation(line: 777, column: 61, scope: !4955)
!4960 = !DILocation(line: 777, column: 67, scope: !4955)
!4961 = !DILocation(line: 777, column: 69, scope: !4955)
!4962 = !DILocation(line: 777, column: 65, scope: !4955)
!4963 = !DILocation(line: 777, column: 37, scope: !4955)
!4964 = !DILocation(line: 777, column: 49, scope: !4955)
!4965 = !DILocation(line: 777, column: 40, scope: !4955)
!4966 = !DILocation(line: 777, column: 77, scope: !4955)
!4967 = !DILocation(line: 777, column: 81, scope: !4955)
!4968 = !DILocation(line: 777, column: 21, scope: !4955)
!4969 = !DILocation(line: 776, column: 37, scope: !4970)
!4970 = !DILexicalBlockFile(scope: !4955, file: !945, discriminator: 2)
!4971 = !DILocation(line: 776, column: 17, scope: !4970)
!4972 = distinct !{!4972, !4973}
!4973 = !DILocation(line: 776, column: 17, scope: !4951)
!4974 = !DILocation(line: 779, column: 17, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4897, file: !945, line: 779, column: 17)
!4976 = !DILocation(line: 779, column: 20, scope: !4975)
!4977 = !DILocation(line: 779, column: 25, scope: !4975)
!4978 = !DILocation(line: 779, column: 17, scope: !4897)
!4979 = !DILocation(line: 780, column: 39, scope: !4980)
!4980 = distinct !DILexicalBlock(scope: !4975, file: !945, line: 779, column: 30)
!4981 = !DILocation(line: 780, column: 48, scope: !4980)
!4982 = !DILocation(line: 780, column: 24, scope: !4980)
!4983 = !DILocation(line: 780, column: 36, scope: !4980)
!4984 = !DILocation(line: 780, column: 27, scope: !4980)
!4985 = !DILocation(line: 780, column: 17, scope: !4980)
!4986 = !DILocation(line: 781, column: 50, scope: !4980)
!4987 = !DILocation(line: 781, column: 57, scope: !4980)
!4988 = !DILocation(line: 781, column: 60, scope: !4980)
!4989 = !DILocation(line: 781, column: 55, scope: !4980)
!4990 = !DILocation(line: 781, column: 24, scope: !4980)
!4991 = !DILocation(line: 781, column: 47, scope: !4980)
!4992 = !DILocation(line: 781, column: 27, scope: !4980)
!4993 = !DILocation(line: 781, column: 36, scope: !4980)
!4994 = !DILocation(line: 783, column: 41, scope: !4980)
!4995 = !DILocation(line: 783, column: 50, scope: !4980)
!4996 = !DILocation(line: 783, column: 25, scope: !4980)
!4997 = !DILocation(line: 783, column: 38, scope: !4980)
!4998 = !DILocation(line: 783, column: 28, scope: !4980)
!4999 = !DILocation(line: 784, column: 59, scope: !4980)
!5000 = !DILocation(line: 784, column: 67, scope: !4980)
!5001 = !DILocation(line: 784, column: 70, scope: !4980)
!5002 = !DILocation(line: 784, column: 65, scope: !4980)
!5003 = !DILocation(line: 784, column: 47, scope: !4980)
!5004 = !DILocation(line: 784, column: 50, scope: !4980)
!5005 = !DILocation(line: 784, column: 25, scope: !4980)
!5006 = !DILocation(line: 784, column: 28, scope: !4980)
!5007 = !DILocation(line: 784, column: 82, scope: !4980)
!5008 = !DILocation(line: 784, column: 24, scope: !4980)
!5009 = !DILocation(line: 783, column: 17, scope: !4980)
!5010 = !DILocation(line: 786, column: 21, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !4980, file: !945, line: 786, column: 21)
!5012 = !DILocation(line: 786, column: 24, scope: !5011)
!5013 = !DILocation(line: 786, column: 31, scope: !5011)
!5014 = !DILocation(line: 786, column: 34, scope: !5011)
!5015 = !DILocation(line: 786, column: 43, scope: !5011)
!5016 = !DILocation(line: 786, column: 29, scope: !5011)
!5017 = !DILocation(line: 786, column: 21, scope: !4980)
!5018 = !DILocation(line: 787, column: 130, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5011, file: !945, line: 786, column: 48)
!5020 = !DILocation(line: 787, column: 137, scope: !5019)
!5021 = !DILocation(line: 787, column: 140, scope: !5019)
!5022 = !DILocation(line: 787, column: 135, scope: !5019)
!5023 = !DILocation(line: 787, column: 149, scope: !5019)
!5024 = !DILocation(line: 787, column: 104, scope: !5019)
!5025 = !DILocation(line: 787, column: 127, scope: !5019)
!5026 = !DILocation(line: 787, column: 107, scope: !5019)
!5027 = !DILocation(line: 787, column: 116, scope: !5019)
!5028 = !DILocation(line: 787, column: 157, scope: !5019)
!5029 = !DILocation(line: 787, column: 52, scope: !5019)
!5030 = !DILocation(line: 787, column: 61, scope: !5019)
!5031 = !DILocation(line: 787, column: 65, scope: !5019)
!5032 = !DILocation(line: 787, column: 37, scope: !5019)
!5033 = !DILocation(line: 787, column: 49, scope: !5019)
!5034 = !DILocation(line: 787, column: 40, scope: !5019)
!5035 = !DILocation(line: 787, column: 77, scope: !5019)
!5036 = !DILocation(line: 787, column: 81, scope: !5019)
!5037 = !DILocation(line: 790, column: 60, scope: !5019)
!5038 = !DILocation(line: 790, column: 68, scope: !5019)
!5039 = !DILocation(line: 790, column: 71, scope: !5019)
!5040 = !DILocation(line: 790, column: 66, scope: !5019)
!5041 = !DILocation(line: 790, column: 81, scope: !5019)
!5042 = !DILocation(line: 790, column: 48, scope: !5019)
!5043 = !DILocation(line: 790, column: 51, scope: !5019)
!5044 = !DILocation(line: 790, column: 86, scope: !5019)
!5045 = !DILocation(line: 790, column: 26, scope: !5019)
!5046 = !DILocation(line: 790, column: 29, scope: !5019)
!5047 = !DILocation(line: 790, column: 91, scope: !5019)
!5048 = !DILocation(line: 790, column: 97, scope: !5019)
!5049 = !DILocation(line: 791, column: 60, scope: !5019)
!5050 = !DILocation(line: 791, column: 68, scope: !5019)
!5051 = !DILocation(line: 791, column: 71, scope: !5019)
!5052 = !DILocation(line: 791, column: 66, scope: !5019)
!5053 = !DILocation(line: 791, column: 48, scope: !5019)
!5054 = !DILocation(line: 791, column: 51, scope: !5019)
!5055 = !DILocation(line: 791, column: 26, scope: !5019)
!5056 = !DILocation(line: 791, column: 29, scope: !5019)
!5057 = !DILocation(line: 791, column: 83, scope: !5019)
!5058 = !DILocation(line: 790, column: 97, scope: !5059)
!5059 = !DILexicalBlockFile(scope: !5019, file: !945, discriminator: 1)
!5060 = !DILocation(line: 790, column: 25, scope: !5061)
!5061 = !DILexicalBlockFile(scope: !5019, file: !945, discriminator: 2)
!5062 = !DILocation(line: 789, column: 37, scope: !5019)
!5063 = !DILocation(line: 789, column: 46, scope: !5019)
!5064 = !DILocation(line: 789, column: 50, scope: !5019)
!5065 = !DILocation(line: 789, column: 21, scope: !5019)
!5066 = !DILocation(line: 789, column: 34, scope: !5019)
!5067 = !DILocation(line: 789, column: 24, scope: !5019)
!5068 = !DILocation(line: 789, column: 59, scope: !5019)
!5069 = !DILocation(line: 792, column: 17, scope: !5019)
!5070 = !DILocation(line: 793, column: 37, scope: !5011)
!5071 = !DILocation(line: 793, column: 46, scope: !5011)
!5072 = !DILocation(line: 793, column: 50, scope: !5011)
!5073 = !DILocation(line: 793, column: 21, scope: !5011)
!5074 = !DILocation(line: 793, column: 34, scope: !5011)
!5075 = !DILocation(line: 793, column: 24, scope: !5011)
!5076 = !DILocation(line: 793, column: 59, scope: !5011)
!5077 = !DILocation(line: 794, column: 21, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !4980, file: !945, line: 794, column: 21)
!5079 = !DILocation(line: 794, column: 24, scope: !5078)
!5080 = !DILocation(line: 794, column: 29, scope: !5078)
!5081 = !DILocation(line: 794, column: 21, scope: !4980)
!5082 = !DILocation(line: 795, column: 130, scope: !5083)
!5083 = distinct !DILexicalBlock(scope: !5078, file: !945, line: 794, column: 34)
!5084 = !DILocation(line: 795, column: 137, scope: !5083)
!5085 = !DILocation(line: 795, column: 140, scope: !5083)
!5086 = !DILocation(line: 795, column: 135, scope: !5083)
!5087 = !DILocation(line: 795, column: 149, scope: !5083)
!5088 = !DILocation(line: 795, column: 104, scope: !5083)
!5089 = !DILocation(line: 795, column: 127, scope: !5083)
!5090 = !DILocation(line: 795, column: 107, scope: !5083)
!5091 = !DILocation(line: 795, column: 116, scope: !5083)
!5092 = !DILocation(line: 795, column: 157, scope: !5083)
!5093 = !DILocation(line: 795, column: 52, scope: !5083)
!5094 = !DILocation(line: 795, column: 61, scope: !5083)
!5095 = !DILocation(line: 795, column: 65, scope: !5083)
!5096 = !DILocation(line: 795, column: 37, scope: !5083)
!5097 = !DILocation(line: 795, column: 49, scope: !5083)
!5098 = !DILocation(line: 795, column: 40, scope: !5083)
!5099 = !DILocation(line: 795, column: 77, scope: !5083)
!5100 = !DILocation(line: 795, column: 81, scope: !5083)
!5101 = !DILocation(line: 798, column: 60, scope: !5083)
!5102 = !DILocation(line: 798, column: 68, scope: !5083)
!5103 = !DILocation(line: 798, column: 71, scope: !5083)
!5104 = !DILocation(line: 798, column: 66, scope: !5083)
!5105 = !DILocation(line: 798, column: 81, scope: !5083)
!5106 = !DILocation(line: 798, column: 48, scope: !5083)
!5107 = !DILocation(line: 798, column: 51, scope: !5083)
!5108 = !DILocation(line: 798, column: 86, scope: !5083)
!5109 = !DILocation(line: 798, column: 26, scope: !5083)
!5110 = !DILocation(line: 798, column: 29, scope: !5083)
!5111 = !DILocation(line: 798, column: 91, scope: !5083)
!5112 = !DILocation(line: 798, column: 25, scope: !5083)
!5113 = !DILocation(line: 797, column: 37, scope: !5083)
!5114 = !DILocation(line: 797, column: 46, scope: !5083)
!5115 = !DILocation(line: 797, column: 50, scope: !5083)
!5116 = !DILocation(line: 797, column: 21, scope: !5083)
!5117 = !DILocation(line: 797, column: 34, scope: !5083)
!5118 = !DILocation(line: 797, column: 24, scope: !5083)
!5119 = !DILocation(line: 797, column: 59, scope: !5083)
!5120 = !DILocation(line: 799, column: 17, scope: !5083)
!5121 = !DILocation(line: 800, column: 37, scope: !5078)
!5122 = !DILocation(line: 800, column: 46, scope: !5078)
!5123 = !DILocation(line: 800, column: 50, scope: !5078)
!5124 = !DILocation(line: 800, column: 21, scope: !5078)
!5125 = !DILocation(line: 800, column: 34, scope: !5078)
!5126 = !DILocation(line: 800, column: 24, scope: !5078)
!5127 = !DILocation(line: 800, column: 59, scope: !5078)
!5128 = !DILocation(line: 801, column: 13, scope: !4980)
!5129 = !DILocation(line: 802, column: 41, scope: !4975)
!5130 = !DILocation(line: 802, column: 50, scope: !4975)
!5131 = !DILocation(line: 802, column: 58, scope: !4975)
!5132 = !DILocation(line: 802, column: 25, scope: !4975)
!5133 = !DILocation(line: 802, column: 38, scope: !4975)
!5134 = !DILocation(line: 802, column: 28, scope: !4975)
!5135 = !DILocation(line: 802, column: 17, scope: !4975)
!5136 = !DILocation(line: 805, column: 17, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !4897, file: !945, line: 805, column: 17)
!5138 = !DILocation(line: 805, column: 20, scope: !5137)
!5139 = !DILocation(line: 805, column: 30, scope: !5137)
!5140 = !DILocation(line: 805, column: 17, scope: !4897)
!5141 = !DILocation(line: 806, column: 17, scope: !5137)
!5142 = !DILocation(line: 807, column: 9, scope: !4897)
!5143 = !DILocation(line: 770, column: 29, scope: !5144)
!5144 = !DILexicalBlockFile(scope: !4892, file: !945, discriminator: 2)
!5145 = !DILocation(line: 770, column: 9, scope: !5144)
!5146 = distinct !{!5146, !5147}
!5147 = !DILocation(line: 770, column: 9, scope: !4858)
!5148 = !DILocation(line: 810, column: 13, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !4858, file: !945, line: 810, column: 13)
!5150 = !DILocation(line: 810, column: 16, scope: !5149)
!5151 = !DILocation(line: 810, column: 26, scope: !5149)
!5152 = !DILocation(line: 810, column: 13, scope: !4858)
!5153 = !DILocation(line: 811, column: 29, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5155, file: !945, line: 811, column: 17)
!5155 = distinct !DILexicalBlock(scope: !5149, file: !945, line: 810, column: 48)
!5156 = !DILocation(line: 811, column: 32, scope: !5154)
!5157 = !DILocation(line: 811, column: 40, scope: !5154)
!5158 = !DILocation(line: 811, column: 45, scope: !5154)
!5159 = !DILocation(line: 811, column: 17, scope: !5154)
!5160 = !DILocation(line: 811, column: 57, scope: !5154)
!5161 = !DILocation(line: 811, column: 17, scope: !5155)
!5162 = !DILocation(line: 812, column: 17, scope: !5154)
!5163 = !DILocation(line: 813, column: 9, scope: !5155)
!5164 = !DILocation(line: 814, column: 17, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5166, file: !945, line: 814, column: 17)
!5166 = distinct !DILexicalBlock(scope: !5149, file: !945, line: 813, column: 16)
!5167 = !DILocation(line: 814, column: 25, scope: !5165)
!5168 = !DILocation(line: 814, column: 17, scope: !5166)
!5169 = !DILocation(line: 815, column: 33, scope: !5170)
!5170 = distinct !DILexicalBlock(scope: !5171, file: !945, line: 815, column: 21)
!5171 = distinct !DILexicalBlock(scope: !5165, file: !945, line: 814, column: 31)
!5172 = !DILocation(line: 815, column: 39, scope: !5170)
!5173 = !DILocation(line: 815, column: 21, scope: !5170)
!5174 = !DILocation(line: 815, column: 51, scope: !5170)
!5175 = !DILocation(line: 815, column: 21, scope: !5171)
!5176 = !DILocation(line: 816, column: 21, scope: !5170)
!5177 = !DILocation(line: 817, column: 13, scope: !5171)
!5178 = !DILocation(line: 818, column: 24, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5180, file: !945, line: 818, column: 17)
!5180 = distinct !DILexicalBlock(scope: !5165, file: !945, line: 817, column: 20)
!5181 = !DILocation(line: 818, column: 22, scope: !5179)
!5182 = !DILocation(line: 818, column: 29, scope: !5183)
!5183 = !DILexicalBlockFile(scope: !5184, file: !945, discriminator: 1)
!5184 = distinct !DILexicalBlock(scope: !5179, file: !945, line: 818, column: 17)
!5185 = !DILocation(line: 818, column: 31, scope: !5183)
!5186 = !DILocation(line: 818, column: 17, scope: !5183)
!5187 = !DILocation(line: 819, column: 54, scope: !5184)
!5188 = !DILocation(line: 819, column: 61, scope: !5184)
!5189 = !DILocation(line: 819, column: 65, scope: !5184)
!5190 = !DILocation(line: 819, column: 68, scope: !5184)
!5191 = !DILocation(line: 819, column: 63, scope: !5184)
!5192 = !DILocation(line: 819, column: 59, scope: !5184)
!5193 = !DILocation(line: 819, column: 28, scope: !5184)
!5194 = !DILocation(line: 819, column: 31, scope: !5184)
!5195 = !DILocation(line: 819, column: 40, scope: !5184)
!5196 = !DILocation(line: 819, column: 21, scope: !5184)
!5197 = !DILocation(line: 818, column: 37, scope: !5198)
!5198 = !DILexicalBlockFile(scope: !5184, file: !945, discriminator: 2)
!5199 = !DILocation(line: 818, column: 17, scope: !5198)
!5200 = distinct !{!5200, !5201}
!5201 = !DILocation(line: 818, column: 17, scope: !5180)
!5202 = !DILocation(line: 822, column: 17, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5166, file: !945, line: 822, column: 17)
!5204 = !DILocation(line: 822, column: 25, scope: !5203)
!5205 = !DILocation(line: 822, column: 17, scope: !5166)
!5206 = !DILocation(line: 823, column: 33, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5208, file: !945, line: 823, column: 21)
!5208 = distinct !DILexicalBlock(scope: !5203, file: !945, line: 822, column: 31)
!5209 = !DILocation(line: 823, column: 39, scope: !5207)
!5210 = !DILocation(line: 823, column: 48, scope: !5207)
!5211 = !DILocation(line: 823, column: 56, scope: !5207)
!5212 = !DILocation(line: 823, column: 21, scope: !5207)
!5213 = !DILocation(line: 823, column: 62, scope: !5207)
!5214 = !DILocation(line: 823, column: 21, scope: !5208)
!5215 = !DILocation(line: 824, column: 21, scope: !5207)
!5216 = !DILocation(line: 825, column: 13, scope: !5208)
!5217 = !DILocation(line: 826, column: 24, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !5219, file: !945, line: 826, column: 17)
!5219 = distinct !DILexicalBlock(scope: !5203, file: !945, line: 825, column: 20)
!5220 = !DILocation(line: 826, column: 22, scope: !5218)
!5221 = !DILocation(line: 826, column: 29, scope: !5222)
!5222 = !DILexicalBlockFile(scope: !5223, file: !945, discriminator: 1)
!5223 = distinct !DILexicalBlock(scope: !5218, file: !945, line: 826, column: 17)
!5224 = !DILocation(line: 826, column: 31, scope: !5222)
!5225 = !DILocation(line: 826, column: 17, scope: !5222)
!5226 = !DILocation(line: 827, column: 54, scope: !5223)
!5227 = !DILocation(line: 827, column: 61, scope: !5223)
!5228 = !DILocation(line: 827, column: 65, scope: !5223)
!5229 = !DILocation(line: 827, column: 68, scope: !5223)
!5230 = !DILocation(line: 827, column: 63, scope: !5223)
!5231 = !DILocation(line: 827, column: 59, scope: !5223)
!5232 = !DILocation(line: 827, column: 28, scope: !5223)
!5233 = !DILocation(line: 827, column: 31, scope: !5223)
!5234 = !DILocation(line: 827, column: 40, scope: !5223)
!5235 = !DILocation(line: 827, column: 21, scope: !5223)
!5236 = !DILocation(line: 826, column: 37, scope: !5237)
!5237 = !DILexicalBlockFile(scope: !5223, file: !945, discriminator: 2)
!5238 = !DILocation(line: 826, column: 17, scope: !5237)
!5239 = distinct !{!5239, !5240}
!5240 = !DILocation(line: 826, column: 17, scope: !5219)
!5241 = !DILocation(line: 832, column: 17, scope: !4858)
!5242 = !DILocation(line: 833, column: 5, scope: !4858)
!5243 = !DILocation(line: 833, column: 16, scope: !5244)
!5244 = !DILexicalBlockFile(scope: !5245, file: !945, discriminator: 1)
!5245 = distinct !DILexicalBlock(scope: !4854, file: !945, line: 833, column: 16)
!5246 = !DILocation(line: 833, column: 24, scope: !5244)
!5247 = !DILocation(line: 833, column: 29, scope: !5244)
!5248 = !DILocation(line: 833, column: 32, scope: !5249)
!5249 = !DILexicalBlockFile(scope: !5245, file: !945, discriminator: 2)
!5250 = !DILocation(line: 833, column: 40, scope: !5249)
!5251 = !DILocation(line: 833, column: 16, scope: !5249)
!5252 = !DILocalVariable(name: "i4x4", scope: !5253, file: !945, line: 834, type: !1141)
!5253 = distinct !DILexicalBlock(scope: !5245, file: !945, line: 833, column: 47)
!5254 = !DILocation(line: 834, column: 17, scope: !5253)
!5255 = !DILocation(line: 834, column: 24, scope: !5253)
!5256 = !DILocation(line: 834, column: 27, scope: !5253)
!5257 = !DILocation(line: 834, column: 60, scope: !5253)
!5258 = !DILocation(line: 834, column: 63, scope: !5253)
!5259 = !DILocation(line: 834, column: 48, scope: !5253)
!5260 = !DILocation(line: 834, column: 51, scope: !5253)
!5261 = !DILocation(line: 834, column: 46, scope: !5253)
!5262 = !DILocalVariable(name: "i4x4_cache", scope: !5253, file: !945, line: 835, type: !1141)
!5263 = !DILocation(line: 835, column: 17, scope: !5253)
!5264 = !DILocation(line: 835, column: 30, scope: !5253)
!5265 = !DILocation(line: 835, column: 33, scope: !5253)
!5266 = !DILocation(line: 837, column: 16, scope: !5253)
!5267 = !DILocation(line: 837, column: 19, scope: !5253)
!5268 = !DILocation(line: 837, column: 9, scope: !5253)
!5269 = !DILocation(line: 839, column: 13, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5253, file: !945, line: 839, column: 13)
!5271 = !DILocation(line: 839, column: 21, scope: !5270)
!5272 = !DILocation(line: 839, column: 13, scope: !5253)
!5273 = !DILocation(line: 840, column: 17, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5275, file: !945, line: 840, column: 17)
!5275 = distinct !DILexicalBlock(scope: !5270, file: !945, line: 839, column: 27)
!5276 = !DILocation(line: 840, column: 20, scope: !5274)
!5277 = !DILocation(line: 840, column: 25, scope: !5274)
!5278 = !DILocation(line: 840, column: 17, scope: !5275)
!5279 = !DILocation(line: 841, column: 24, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5281, file: !945, line: 841, column: 17)
!5281 = distinct !DILexicalBlock(scope: !5274, file: !945, line: 840, column: 30)
!5282 = !DILocation(line: 841, column: 22, scope: !5280)
!5283 = !DILocation(line: 841, column: 29, scope: !5284)
!5284 = !DILexicalBlockFile(scope: !5285, file: !945, discriminator: 1)
!5285 = distinct !DILexicalBlock(scope: !5280, file: !945, line: 841, column: 17)
!5286 = !DILocation(line: 841, column: 31, scope: !5284)
!5287 = !DILocation(line: 841, column: 17, scope: !5284)
!5288 = !DILocation(line: 842, column: 107, scope: !5285)
!5289 = !DILocation(line: 842, column: 113, scope: !5285)
!5290 = !DILocation(line: 842, column: 95, scope: !5285)
!5291 = !DILocation(line: 842, column: 98, scope: !5285)
!5292 = !DILocation(line: 842, column: 118, scope: !5285)
!5293 = !DILocation(line: 842, column: 124, scope: !5285)
!5294 = !DILocation(line: 842, column: 122, scope: !5285)
!5295 = !DILocation(line: 842, column: 73, scope: !5285)
!5296 = !DILocation(line: 842, column: 76, scope: !5285)
!5297 = !DILocation(line: 842, column: 49, scope: !5285)
!5298 = !DILocation(line: 842, column: 58, scope: !5285)
!5299 = !DILocation(line: 842, column: 64, scope: !5285)
!5300 = !DILocation(line: 842, column: 66, scope: !5285)
!5301 = !DILocation(line: 842, column: 62, scope: !5285)
!5302 = !DILocation(line: 842, column: 21, scope: !5285)
!5303 = !DILocation(line: 842, column: 24, scope: !5285)
!5304 = !DILocation(line: 842, column: 71, scope: !5285)
!5305 = !DILocation(line: 841, column: 37, scope: !5306)
!5306 = !DILexicalBlockFile(scope: !5285, file: !945, discriminator: 2)
!5307 = !DILocation(line: 841, column: 17, scope: !5306)
!5308 = distinct !{!5308, !5309}
!5309 = !DILocation(line: 841, column: 17, scope: !5281)
!5310 = !DILocation(line: 843, column: 49, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5281, file: !945, line: 843, column: 21)
!5312 = !DILocation(line: 843, column: 58, scope: !5311)
!5313 = !DILocation(line: 843, column: 21, scope: !5311)
!5314 = !DILocation(line: 843, column: 24, scope: !5311)
!5315 = !DILocation(line: 843, column: 63, scope: !5311)
!5316 = !DILocation(line: 843, column: 21, scope: !5281)
!5317 = !DILocation(line: 844, column: 21, scope: !5311)
!5318 = !DILocation(line: 844, column: 24, scope: !5311)
!5319 = !DILocation(line: 844, column: 47, scope: !5311)
!5320 = !DILocation(line: 845, column: 13, scope: !5281)
!5321 = !DILocation(line: 846, column: 17, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5275, file: !945, line: 846, column: 17)
!5323 = !DILocation(line: 846, column: 20, scope: !5322)
!5324 = !DILocation(line: 846, column: 25, scope: !5322)
!5325 = !DILocation(line: 846, column: 17, scope: !5275)
!5326 = !DILocation(line: 847, column: 92, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5322, file: !945, line: 846, column: 30)
!5328 = !DILocation(line: 847, column: 100, scope: !5327)
!5329 = !DILocation(line: 847, column: 103, scope: !5327)
!5330 = !DILocation(line: 847, column: 98, scope: !5327)
!5331 = !DILocation(line: 847, column: 80, scope: !5327)
!5332 = !DILocation(line: 847, column: 83, scope: !5327)
!5333 = !DILocation(line: 847, column: 114, scope: !5327)
!5334 = !DILocation(line: 847, column: 58, scope: !5327)
!5335 = !DILocation(line: 847, column: 61, scope: !5327)
!5336 = !DILocation(line: 847, column: 17, scope: !5327)
!5337 = !DILocation(line: 847, column: 20, scope: !5327)
!5338 = !DILocation(line: 847, column: 56, scope: !5327)
!5339 = !DILocation(line: 848, column: 92, scope: !5327)
!5340 = !DILocation(line: 848, column: 100, scope: !5327)
!5341 = !DILocation(line: 848, column: 103, scope: !5327)
!5342 = !DILocation(line: 848, column: 98, scope: !5327)
!5343 = !DILocation(line: 848, column: 80, scope: !5327)
!5344 = !DILocation(line: 848, column: 83, scope: !5327)
!5345 = !DILocation(line: 848, column: 114, scope: !5327)
!5346 = !DILocation(line: 848, column: 58, scope: !5327)
!5347 = !DILocation(line: 848, column: 61, scope: !5327)
!5348 = !DILocation(line: 848, column: 17, scope: !5327)
!5349 = !DILocation(line: 848, column: 20, scope: !5327)
!5350 = !DILocation(line: 848, column: 56, scope: !5327)
!5351 = !DILocation(line: 849, column: 92, scope: !5327)
!5352 = !DILocation(line: 849, column: 100, scope: !5327)
!5353 = !DILocation(line: 849, column: 103, scope: !5327)
!5354 = !DILocation(line: 849, column: 98, scope: !5327)
!5355 = !DILocation(line: 849, column: 80, scope: !5327)
!5356 = !DILocation(line: 849, column: 83, scope: !5327)
!5357 = !DILocation(line: 849, column: 114, scope: !5327)
!5358 = !DILocation(line: 849, column: 58, scope: !5327)
!5359 = !DILocation(line: 849, column: 61, scope: !5327)
!5360 = !DILocation(line: 849, column: 17, scope: !5327)
!5361 = !DILocation(line: 849, column: 20, scope: !5327)
!5362 = !DILocation(line: 849, column: 56, scope: !5327)
!5363 = !DILocation(line: 850, column: 92, scope: !5327)
!5364 = !DILocation(line: 850, column: 100, scope: !5327)
!5365 = !DILocation(line: 850, column: 103, scope: !5327)
!5366 = !DILocation(line: 850, column: 98, scope: !5327)
!5367 = !DILocation(line: 850, column: 80, scope: !5327)
!5368 = !DILocation(line: 850, column: 83, scope: !5327)
!5369 = !DILocation(line: 850, column: 114, scope: !5327)
!5370 = !DILocation(line: 850, column: 58, scope: !5327)
!5371 = !DILocation(line: 850, column: 61, scope: !5327)
!5372 = !DILocation(line: 850, column: 17, scope: !5327)
!5373 = !DILocation(line: 850, column: 20, scope: !5327)
!5374 = !DILocation(line: 850, column: 56, scope: !5327)
!5375 = !DILocation(line: 852, column: 21, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5327, file: !945, line: 852, column: 21)
!5377 = !DILocation(line: 852, column: 24, scope: !5376)
!5378 = !DILocation(line: 852, column: 60, scope: !5376)
!5379 = !DILocation(line: 852, column: 21, scope: !5327)
!5380 = !DILocation(line: 853, column: 21, scope: !5376)
!5381 = !DILocation(line: 853, column: 24, scope: !5376)
!5382 = !DILocation(line: 853, column: 46, scope: !5376)
!5383 = !DILocation(line: 854, column: 13, scope: !5327)
!5384 = !DILocation(line: 857, column: 20, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !5275, file: !945, line: 857, column: 13)
!5386 = !DILocation(line: 857, column: 18, scope: !5385)
!5387 = !DILocation(line: 857, column: 25, scope: !5388)
!5388 = !DILexicalBlockFile(scope: !5389, file: !945, discriminator: 1)
!5389 = distinct !DILexicalBlock(scope: !5385, file: !945, line: 857, column: 13)
!5390 = !DILocation(line: 857, column: 27, scope: !5388)
!5391 = !DILocation(line: 857, column: 13, scope: !5388)
!5392 = !DILocation(line: 858, column: 50, scope: !5393)
!5393 = distinct !DILexicalBlock(scope: !5389, file: !945, line: 857, column: 41)
!5394 = !DILocation(line: 858, column: 53, scope: !5393)
!5395 = !DILocation(line: 858, column: 23, scope: !5393)
!5396 = !DILocation(line: 858, column: 21, scope: !5393)
!5397 = !DILocation(line: 860, column: 21, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !5393, file: !945, line: 860, column: 21)
!5399 = !DILocation(line: 860, column: 25, scope: !5398)
!5400 = !DILocation(line: 860, column: 21, scope: !5393)
!5401 = !DILocation(line: 861, column: 28, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !5398, file: !945, line: 860, column: 33)
!5403 = !DILocation(line: 861, column: 31, scope: !5402)
!5404 = !DILocation(line: 862, column: 58, scope: !5402)
!5405 = !DILocation(line: 861, column: 21, scope: !5402)
!5406 = !DILocation(line: 863, column: 21, scope: !5402)
!5407 = !DILocation(line: 866, column: 59, scope: !5393)
!5408 = !DILocation(line: 866, column: 53, scope: !5393)
!5409 = !DILocation(line: 866, column: 62, scope: !5393)
!5410 = !DILocation(line: 866, column: 25, scope: !5393)
!5411 = !DILocation(line: 866, column: 28, scope: !5393)
!5412 = !DILocation(line: 866, column: 22, scope: !5393)
!5413 = !DILocation(line: 867, column: 58, scope: !5393)
!5414 = !DILocation(line: 867, column: 52, scope: !5393)
!5415 = !DILocation(line: 867, column: 61, scope: !5393)
!5416 = !DILocation(line: 867, column: 24, scope: !5393)
!5417 = !DILocation(line: 867, column: 27, scope: !5393)
!5418 = !DILocation(line: 867, column: 21, scope: !5393)
!5419 = !DILocation(line: 869, column: 76, scope: !5393)
!5420 = !DILocation(line: 869, column: 64, scope: !5393)
!5421 = !DILocation(line: 869, column: 27, scope: !5393)
!5422 = !DILocation(line: 869, column: 51, scope: !5393)
!5423 = !DILocation(line: 869, column: 59, scope: !5393)
!5424 = !DILocation(line: 869, column: 39, scope: !5393)
!5425 = !DILocation(line: 869, column: 46, scope: !5393)
!5426 = !DILocation(line: 869, column: 17, scope: !5393)
!5427 = !DILocation(line: 869, column: 25, scope: !5393)
!5428 = !DILocation(line: 870, column: 76, scope: !5393)
!5429 = !DILocation(line: 870, column: 64, scope: !5393)
!5430 = !DILocation(line: 870, column: 27, scope: !5393)
!5431 = !DILocation(line: 870, column: 51, scope: !5393)
!5432 = !DILocation(line: 870, column: 59, scope: !5393)
!5433 = !DILocation(line: 870, column: 39, scope: !5393)
!5434 = !DILocation(line: 870, column: 46, scope: !5393)
!5435 = !DILocation(line: 870, column: 17, scope: !5393)
!5436 = !DILocation(line: 870, column: 25, scope: !5393)
!5437 = !DILocation(line: 872, column: 21, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5393, file: !945, line: 872, column: 21)
!5439 = !DILocation(line: 872, column: 29, scope: !5438)
!5440 = !DILocation(line: 872, column: 35, scope: !5438)
!5441 = !DILocation(line: 872, column: 38, scope: !5442)
!5442 = !DILexicalBlockFile(scope: !5438, file: !945, discriminator: 1)
!5443 = !DILocation(line: 872, column: 46, scope: !5442)
!5444 = !DILocation(line: 872, column: 21, scope: !5442)
!5445 = !DILocation(line: 873, column: 28, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !5438, file: !945, line: 872, column: 53)
!5447 = !DILocation(line: 873, column: 31, scope: !5446)
!5448 = !DILocation(line: 873, column: 21, scope: !5446)
!5449 = !DILocation(line: 874, column: 21, scope: !5446)
!5450 = !DILocation(line: 876, column: 13, scope: !5393)
!5451 = !DILocation(line: 857, column: 35, scope: !5452)
!5452 = !DILexicalBlockFile(scope: !5389, file: !945, discriminator: 2)
!5453 = !DILocation(line: 857, column: 13, scope: !5452)
!5454 = distinct !{!5454, !5455}
!5455 = !DILocation(line: 857, column: 13, scope: !5275)
!5456 = !DILocation(line: 877, column: 9, scope: !5275)
!5457 = !DILocation(line: 878, column: 20, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !5459, file: !945, line: 878, column: 13)
!5459 = distinct !DILexicalBlock(scope: !5270, file: !945, line: 877, column: 16)
!5460 = !DILocation(line: 878, column: 18, scope: !5458)
!5461 = !DILocation(line: 878, column: 25, scope: !5462)
!5462 = !DILexicalBlockFile(scope: !5463, file: !945, discriminator: 1)
!5463 = distinct !DILexicalBlock(scope: !5458, file: !945, line: 878, column: 13)
!5464 = !DILocation(line: 878, column: 27, scope: !5462)
!5465 = !DILocation(line: 878, column: 13, scope: !5462)
!5466 = !DILocation(line: 879, column: 53, scope: !5463)
!5467 = !DILocation(line: 879, column: 68, scope: !5463)
!5468 = !DILocation(line: 879, column: 66, scope: !5463)
!5469 = !DILocation(line: 879, column: 62, scope: !5463)
!5470 = !DILocation(line: 879, column: 25, scope: !5463)
!5471 = !DILocation(line: 879, column: 28, scope: !5463)
!5472 = !DILocation(line: 879, column: 17, scope: !5463)
!5473 = !DILocation(line: 878, column: 33, scope: !5474)
!5474 = !DILexicalBlockFile(scope: !5463, file: !945, discriminator: 2)
!5475 = !DILocation(line: 878, column: 13, scope: !5474)
!5476 = distinct !{!5476, !5477}
!5477 = !DILocation(line: 878, column: 13, scope: !5459)
!5478 = !DILocation(line: 882, column: 60, scope: !5253)
!5479 = !DILocation(line: 882, column: 71, scope: !5253)
!5480 = !DILocation(line: 882, column: 75, scope: !5253)
!5481 = !DILocation(line: 882, column: 86, scope: !5253)
!5482 = !DILocation(line: 882, column: 25, scope: !5253)
!5483 = !DILocation(line: 882, column: 33, scope: !5253)
!5484 = !DILocation(line: 882, column: 37, scope: !5253)
!5485 = !DILocation(line: 883, column: 19, scope: !5253)
!5486 = !DILocation(line: 883, column: 9, scope: !5253)
!5487 = !DILocation(line: 883, column: 17, scope: !5253)
!5488 = !DILocation(line: 884, column: 19, scope: !5253)
!5489 = !DILocation(line: 884, column: 9, scope: !5253)
!5490 = !DILocation(line: 884, column: 17, scope: !5253)
!5491 = !DILocation(line: 885, column: 19, scope: !5253)
!5492 = !DILocation(line: 885, column: 9, scope: !5253)
!5493 = !DILocation(line: 885, column: 17, scope: !5253)
!5494 = !DILocation(line: 887, column: 13, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5253, file: !945, line: 887, column: 13)
!5496 = !DILocation(line: 887, column: 21, scope: !5495)
!5497 = !DILocation(line: 887, column: 13, scope: !5253)
!5498 = !DILocation(line: 888, column: 46, scope: !5499)
!5499 = distinct !DILexicalBlock(scope: !5495, file: !945, line: 887, column: 27)
!5500 = !DILocation(line: 888, column: 49, scope: !5499)
!5501 = !DILocation(line: 889, column: 46, scope: !5499)
!5502 = !DILocation(line: 889, column: 49, scope: !5499)
!5503 = !DILocation(line: 889, column: 56, scope: !5499)
!5504 = !DILocation(line: 889, column: 59, scope: !5499)
!5505 = !DILocation(line: 890, column: 46, scope: !5499)
!5506 = !DILocation(line: 890, column: 49, scope: !5499)
!5507 = !DILocation(line: 888, column: 13, scope: !5499)
!5508 = !DILocation(line: 892, column: 41, scope: !5499)
!5509 = !DILocation(line: 892, column: 44, scope: !5499)
!5510 = !DILocation(line: 892, column: 49, scope: !5499)
!5511 = !DILocation(line: 892, column: 40, scope: !5499)
!5512 = !DILocation(line: 892, column: 13, scope: !5499)
!5513 = !DILocation(line: 892, column: 16, scope: !5499)
!5514 = !DILocation(line: 892, column: 38, scope: !5499)
!5515 = !DILocation(line: 893, column: 42, scope: !5499)
!5516 = !DILocation(line: 893, column: 45, scope: !5499)
!5517 = !DILocation(line: 893, column: 50, scope: !5499)
!5518 = !DILocation(line: 893, column: 41, scope: !5499)
!5519 = !DILocation(line: 893, column: 13, scope: !5499)
!5520 = !DILocation(line: 893, column: 16, scope: !5499)
!5521 = !DILocation(line: 893, column: 39, scope: !5499)
!5522 = !DILocation(line: 894, column: 9, scope: !5499)
!5523 = !DILocation(line: 895, column: 20, scope: !5524)
!5524 = distinct !DILexicalBlock(scope: !5525, file: !945, line: 895, column: 13)
!5525 = distinct !DILexicalBlock(scope: !5495, file: !945, line: 894, column: 16)
!5526 = !DILocation(line: 895, column: 18, scope: !5524)
!5527 = !DILocation(line: 895, column: 25, scope: !5528)
!5528 = !DILexicalBlockFile(scope: !5529, file: !945, discriminator: 1)
!5529 = distinct !DILexicalBlock(scope: !5524, file: !945, line: 895, column: 13)
!5530 = !DILocation(line: 895, column: 27, scope: !5528)
!5531 = !DILocation(line: 895, column: 13, scope: !5528)
!5532 = !DILocation(line: 896, column: 53, scope: !5529)
!5533 = !DILocation(line: 896, column: 68, scope: !5529)
!5534 = !DILocation(line: 896, column: 66, scope: !5529)
!5535 = !DILocation(line: 896, column: 62, scope: !5529)
!5536 = !DILocation(line: 896, column: 25, scope: !5529)
!5537 = !DILocation(line: 896, column: 28, scope: !5529)
!5538 = !DILocation(line: 896, column: 17, scope: !5529)
!5539 = !DILocation(line: 895, column: 33, scope: !5540)
!5540 = !DILexicalBlockFile(scope: !5529, file: !945, discriminator: 2)
!5541 = !DILocation(line: 895, column: 13, scope: !5540)
!5542 = distinct !{!5542, !5543}
!5543 = !DILocation(line: 895, column: 13, scope: !5525)
!5544 = !DILocation(line: 898, column: 13, scope: !5525)
!5545 = !DILocation(line: 898, column: 16, scope: !5525)
!5546 = !DILocation(line: 898, column: 38, scope: !5525)
!5547 = !DILocation(line: 899, column: 13, scope: !5525)
!5548 = !DILocation(line: 899, column: 16, scope: !5525)
!5549 = !DILocation(line: 899, column: 39, scope: !5525)
!5550 = !DILocation(line: 902, column: 17, scope: !5253)
!5551 = !DILocation(line: 903, column: 5, scope: !5253)
!5552 = !DILocation(line: 904, column: 38, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5245, file: !945, line: 903, column: 12)
!5554 = !DILocation(line: 904, column: 46, scope: !5553)
!5555 = !DILocation(line: 904, column: 15, scope: !5553)
!5556 = !DILocation(line: 904, column: 51, scope: !5553)
!5557 = !DILocation(line: 904, column: 13, scope: !5553)
!5558 = !DILocation(line: 905, column: 16, scope: !5553)
!5559 = !DILocation(line: 905, column: 20, scope: !5553)
!5560 = !DILocation(line: 905, column: 33, scope: !5553)
!5561 = !DILocation(line: 905, column: 37, scope: !5553)
!5562 = !DILocation(line: 905, column: 30, scope: !5553)
!5563 = !DILocation(line: 905, column: 26, scope: !5553)
!5564 = !DILocation(line: 905, column: 42, scope: !5553)
!5565 = !DILocation(line: 905, column: 13, scope: !5553)
!5566 = !DILocation(line: 907, column: 70, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5553, file: !945, line: 907, column: 13)
!5568 = !DILocation(line: 907, column: 73, scope: !5567)
!5569 = !DILocation(line: 907, column: 80, scope: !5567)
!5570 = !DILocation(line: 907, column: 83, scope: !5567)
!5571 = !DILocation(line: 908, column: 70, scope: !5567)
!5572 = !DILocation(line: 908, column: 73, scope: !5567)
!5573 = !DILocation(line: 908, column: 97, scope: !5567)
!5574 = !DILocation(line: 907, column: 40, scope: !5567)
!5575 = !DILocation(line: 907, column: 14, scope: !5567)
!5576 = !DILocation(line: 907, column: 17, scope: !5567)
!5577 = !DILocation(line: 907, column: 38, scope: !5567)
!5578 = !DILocation(line: 908, column: 106, scope: !5567)
!5579 = !DILocation(line: 907, column: 13, scope: !5553)
!5580 = !DILocation(line: 909, column: 20, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5567, file: !945, line: 908, column: 111)
!5582 = !DILocation(line: 909, column: 23, scope: !5581)
!5583 = !DILocation(line: 909, column: 13, scope: !5581)
!5584 = !DILocation(line: 910, column: 20, scope: !5581)
!5585 = !DILocation(line: 910, column: 23, scope: !5581)
!5586 = !DILocation(line: 910, column: 13, scope: !5581)
!5587 = !DILocation(line: 913, column: 38, scope: !5553)
!5588 = !DILocation(line: 913, column: 46, scope: !5553)
!5589 = !DILocation(line: 913, column: 15, scope: !5553)
!5590 = !DILocation(line: 913, column: 51, scope: !5553)
!5591 = !DILocation(line: 913, column: 13, scope: !5553)
!5592 = !DILocation(line: 914, column: 17, scope: !5553)
!5593 = !DILocation(line: 917, column: 12, scope: !5594)
!5594 = distinct !DILexicalBlock(scope: !4710, file: !945, line: 917, column: 9)
!5595 = !DILocation(line: 917, column: 21, scope: !5594)
!5596 = !DILocation(line: 917, column: 68, scope: !5594)
!5597 = !DILocation(line: 917, column: 71, scope: !5598)
!5598 = !DILexicalBlockFile(scope: !5594, file: !945, discriminator: 1)
!5599 = !DILocation(line: 917, column: 74, scope: !5598)
!5600 = !DILocation(line: 917, column: 84, scope: !5598)
!5601 = !DILocation(line: 917, column: 9, scope: !5598)
!5602 = !DILocation(line: 918, column: 16, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !5604, file: !945, line: 918, column: 9)
!5604 = distinct !DILexicalBlock(scope: !5594, file: !945, line: 917, column: 106)
!5605 = !DILocation(line: 918, column: 14, scope: !5603)
!5606 = !DILocation(line: 918, column: 21, scope: !5607)
!5607 = !DILexicalBlockFile(scope: !5608, file: !945, discriminator: 1)
!5608 = distinct !DILexicalBlock(scope: !5603, file: !945, line: 918, column: 9)
!5609 = !DILocation(line: 918, column: 23, scope: !5607)
!5610 = !DILocation(line: 918, column: 9, scope: !5607)
!5611 = !DILocation(line: 919, column: 46, scope: !5608)
!5612 = !DILocation(line: 919, column: 53, scope: !5608)
!5613 = !DILocation(line: 919, column: 57, scope: !5608)
!5614 = !DILocation(line: 919, column: 60, scope: !5608)
!5615 = !DILocation(line: 919, column: 55, scope: !5608)
!5616 = !DILocation(line: 919, column: 51, scope: !5608)
!5617 = !DILocation(line: 919, column: 20, scope: !5608)
!5618 = !DILocation(line: 919, column: 23, scope: !5608)
!5619 = !DILocation(line: 919, column: 32, scope: !5608)
!5620 = !DILocation(line: 919, column: 13, scope: !5608)
!5621 = !DILocation(line: 918, column: 29, scope: !5622)
!5622 = !DILexicalBlockFile(scope: !5608, file: !945, discriminator: 2)
!5623 = !DILocation(line: 918, column: 9, scope: !5622)
!5624 = distinct !{!5624, !5625}
!5625 = !DILocation(line: 918, column: 9, scope: !5604)
!5626 = !DILocation(line: 921, column: 13, scope: !5627)
!5627 = distinct !DILexicalBlock(scope: !5604, file: !945, line: 921, column: 13)
!5628 = !DILocation(line: 921, column: 16, scope: !5627)
!5629 = !DILocation(line: 921, column: 26, scope: !5627)
!5630 = !DILocation(line: 921, column: 13, scope: !5604)
!5631 = !DILocation(line: 922, column: 20, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5633, file: !945, line: 922, column: 13)
!5633 = distinct !DILexicalBlock(scope: !5627, file: !945, line: 921, column: 48)
!5634 = !DILocation(line: 922, column: 18, scope: !5632)
!5635 = !DILocation(line: 922, column: 25, scope: !5636)
!5636 = !DILexicalBlockFile(scope: !5637, file: !945, discriminator: 1)
!5637 = distinct !DILexicalBlock(scope: !5632, file: !945, line: 922, column: 13)
!5638 = !DILocation(line: 922, column: 27, scope: !5636)
!5639 = !DILocation(line: 922, column: 13, scope: !5636)
!5640 = !DILocation(line: 923, column: 50, scope: !5637)
!5641 = !DILocation(line: 923, column: 57, scope: !5637)
!5642 = !DILocation(line: 923, column: 61, scope: !5637)
!5643 = !DILocation(line: 923, column: 64, scope: !5637)
!5644 = !DILocation(line: 923, column: 59, scope: !5637)
!5645 = !DILocation(line: 923, column: 55, scope: !5637)
!5646 = !DILocation(line: 923, column: 24, scope: !5637)
!5647 = !DILocation(line: 923, column: 27, scope: !5637)
!5648 = !DILocation(line: 923, column: 36, scope: !5637)
!5649 = !DILocation(line: 923, column: 17, scope: !5637)
!5650 = !DILocation(line: 922, column: 33, scope: !5651)
!5651 = !DILexicalBlockFile(scope: !5637, file: !945, discriminator: 2)
!5652 = !DILocation(line: 922, column: 13, scope: !5651)
!5653 = distinct !{!5653, !5654}
!5654 = !DILocation(line: 922, column: 13, scope: !5633)
!5655 = !DILocation(line: 925, column: 9, scope: !5633)
!5656 = !DILocation(line: 926, column: 5, scope: !5604)
!5657 = !DILocation(line: 927, column: 12, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !4710, file: !945, line: 927, column: 9)
!5659 = !DILocation(line: 927, column: 21, scope: !5658)
!5660 = !DILocation(line: 927, column: 9, scope: !4710)
!5661 = !DILocation(line: 928, column: 16, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5658, file: !945, line: 927, column: 34)
!5663 = !DILocation(line: 928, column: 19, scope: !5662)
!5664 = !DILocation(line: 928, column: 52, scope: !5662)
!5665 = !DILocation(line: 928, column: 40, scope: !5662)
!5666 = !DILocation(line: 928, column: 43, scope: !5662)
!5667 = !DILocation(line: 928, column: 38, scope: !5662)
!5668 = !DILocation(line: 928, column: 9, scope: !5662)
!5669 = !DILocation(line: 929, column: 5, scope: !5662)
!5670 = !DILocation(line: 930, column: 12, scope: !5671)
!5671 = distinct !DILexicalBlock(scope: !4710, file: !945, line: 930, column: 9)
!5672 = !DILocation(line: 930, column: 21, scope: !5671)
!5673 = !DILocation(line: 930, column: 34, scope: !5671)
!5674 = !DILocation(line: 930, column: 37, scope: !5675)
!5675 = !DILexicalBlockFile(scope: !5671, file: !945, discriminator: 1)
!5676 = !DILocation(line: 930, column: 40, scope: !5675)
!5677 = !DILocation(line: 930, column: 50, scope: !5675)
!5678 = !DILocation(line: 930, column: 9, scope: !5675)
!5679 = !DILocation(line: 931, column: 16, scope: !5680)
!5680 = distinct !DILexicalBlock(scope: !5671, file: !945, line: 930, column: 72)
!5681 = !DILocation(line: 931, column: 19, scope: !5680)
!5682 = !DILocation(line: 931, column: 40, scope: !5680)
!5683 = !DILocation(line: 931, column: 9, scope: !5680)
!5684 = !DILocation(line: 932, column: 5, scope: !5680)
!5685 = !DILocation(line: 934, column: 12, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !4710, file: !945, line: 934, column: 9)
!5687 = !DILocation(line: 934, column: 21, scope: !5686)
!5688 = !DILocation(line: 934, column: 33, scope: !5686)
!5689 = !DILocation(line: 935, column: 13, scope: !5686)
!5690 = !DILocation(line: 935, column: 22, scope: !5686)
!5691 = !DILocation(line: 935, column: 35, scope: !5686)
!5692 = !DILocation(line: 935, column: 38, scope: !5693)
!5693 = !DILexicalBlockFile(scope: !5686, file: !945, discriminator: 1)
!5694 = !DILocation(line: 935, column: 41, scope: !5693)
!5695 = !DILocation(line: 935, column: 51, scope: !5693)
!5696 = !DILocation(line: 934, column: 9, scope: !5697)
!5697 = !DILexicalBlockFile(scope: !4710, file: !945, discriminator: 1)
!5698 = !DILocation(line: 936, column: 47, scope: !5699)
!5699 = distinct !DILexicalBlock(scope: !5700, file: !945, line: 936, column: 13)
!5700 = distinct !DILexicalBlock(scope: !5686, file: !945, line: 935, column: 74)
!5701 = !DILocation(line: 936, column: 50, scope: !5699)
!5702 = !DILocation(line: 936, column: 20, scope: !5699)
!5703 = !DILocation(line: 936, column: 18, scope: !5699)
!5704 = !DILocation(line: 936, column: 61, scope: !5699)
!5705 = !DILocation(line: 936, column: 13, scope: !5700)
!5706 = !DILocation(line: 937, column: 20, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5699, file: !945, line: 936, column: 68)
!5708 = !DILocation(line: 937, column: 23, scope: !5707)
!5709 = !DILocation(line: 937, column: 66, scope: !5707)
!5710 = !DILocation(line: 937, column: 13, scope: !5707)
!5711 = !DILocation(line: 938, column: 13, scope: !5707)
!5712 = !DILocation(line: 941, column: 17, scope: !5700)
!5713 = !DILocation(line: 941, column: 26, scope: !5700)
!5714 = !DILocation(line: 941, column: 15, scope: !5700)
!5715 = !DILocation(line: 941, column: 64, scope: !5716)
!5716 = !DILexicalBlockFile(scope: !5700, file: !945, discriminator: 1)
!5717 = !DILocation(line: 941, column: 33, scope: !5716)
!5718 = !DILocation(line: 941, column: 15, scope: !5716)
!5719 = !DILocation(line: 942, column: 63, scope: !5700)
!5720 = !DILocation(line: 942, column: 35, scope: !5700)
!5721 = !DILocation(line: 941, column: 15, scope: !5722)
!5722 = !DILexicalBlockFile(scope: !5700, file: !945, discriminator: 2)
!5723 = !DILocation(line: 941, column: 15, scope: !5724)
!5724 = !DILexicalBlockFile(scope: !5700, file: !945, discriminator: 3)
!5725 = !DILocation(line: 941, column: 13, scope: !5724)
!5726 = !DILocation(line: 943, column: 5, scope: !5700)
!5727 = !DILocation(line: 944, column: 11, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !4710, file: !945, line: 944, column: 9)
!5729 = !DILocation(line: 944, column: 20, scope: !5728)
!5730 = !DILocation(line: 944, column: 32, scope: !5728)
!5731 = !DILocation(line: 945, column: 10, scope: !5728)
!5732 = !DILocation(line: 945, column: 13, scope: !5728)
!5733 = !DILocation(line: 945, column: 23, scope: !5728)
!5734 = !DILocation(line: 945, column: 44, scope: !5728)
!5735 = !DILocation(line: 945, column: 47, scope: !5736)
!5736 = !DILexicalBlockFile(scope: !5728, file: !945, discriminator: 1)
!5737 = !DILocation(line: 945, column: 50, scope: !5736)
!5738 = !DILocation(line: 945, column: 65, scope: !5736)
!5739 = !DILocation(line: 945, column: 68, scope: !5740)
!5740 = !DILexicalBlockFile(scope: !5728, file: !945, discriminator: 2)
!5741 = !DILocation(line: 944, column: 9, scope: !5697)
!5742 = !DILocation(line: 946, column: 49, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5728, file: !945, line: 945, column: 74)
!5744 = !DILocation(line: 946, column: 52, scope: !5743)
!5745 = !DILocation(line: 946, column: 22, scope: !5743)
!5746 = !DILocation(line: 946, column: 9, scope: !5743)
!5747 = !DILocation(line: 946, column: 12, scope: !5743)
!5748 = !DILocation(line: 946, column: 19, scope: !5743)
!5749 = !DILocation(line: 948, column: 13, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5743, file: !945, line: 948, column: 13)
!5751 = !DILocation(line: 948, column: 16, scope: !5750)
!5752 = !DILocation(line: 948, column: 23, scope: !5750)
!5753 = !DILocation(line: 948, column: 13, scope: !5743)
!5754 = !DILocation(line: 949, column: 20, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5750, file: !945, line: 948, column: 30)
!5756 = !DILocation(line: 949, column: 23, scope: !5755)
!5757 = !DILocation(line: 949, column: 49, scope: !5755)
!5758 = !DILocation(line: 949, column: 52, scope: !5755)
!5759 = !DILocation(line: 949, column: 13, scope: !5755)
!5760 = !DILocation(line: 950, column: 13, scope: !5755)
!5761 = !DILocation(line: 952, column: 5, scope: !5743)
!5762 = !DILocation(line: 953, column: 11, scope: !4717)
!5763 = !DILocation(line: 953, column: 20, scope: !4717)
!5764 = !DILocation(line: 953, column: 9, scope: !4710)
!5765 = !DILocation(line: 954, column: 20, scope: !4716)
!5766 = !DILocation(line: 954, column: 23, scope: !4716)
!5767 = !DILocation(line: 954, column: 37, scope: !4716)
!5768 = !DILocation(line: 954, column: 9, scope: !4716)
!5769 = !DILocation(line: 89, column: 32, scope: !934, inlinedAt: !4719)
!5770 = !DILocation(line: 89, column: 21, scope: !934, inlinedAt: !4719)
!5771 = !DILocation(line: 87, column: 5, scope: !934, inlinedAt: !4719)
!5772 = !{i32 181845, i32 181869, i32 181909}
!5773 = !DILocation(line: 955, column: 20, scope: !4716)
!5774 = !DILocation(line: 955, column: 23, scope: !4716)
!5775 = !DILocation(line: 955, column: 37, scope: !4716)
!5776 = !DILocation(line: 955, column: 9, scope: !4716)
!5777 = !DILocation(line: 89, column: 32, scope: !934, inlinedAt: !4715)
!5778 = !DILocation(line: 89, column: 21, scope: !934, inlinedAt: !4715)
!5779 = !DILocation(line: 87, column: 5, scope: !934, inlinedAt: !4715)
!5780 = !DILocation(line: 956, column: 32, scope: !5781)
!5781 = distinct !DILexicalBlock(scope: !4716, file: !945, line: 956, column: 13)
!5782 = !DILocation(line: 956, column: 35, scope: !5781)
!5783 = !DILocation(line: 956, column: 45, scope: !5781)
!5784 = !DILocation(line: 956, column: 48, scope: !5781)
!5785 = !DILocation(line: 956, column: 13, scope: !5781)
!5786 = !DILocation(line: 956, column: 13, scope: !4716)
!5787 = !DILocation(line: 957, column: 20, scope: !5788)
!5788 = distinct !DILexicalBlock(scope: !5781, file: !945, line: 956, column: 70)
!5789 = !DILocation(line: 957, column: 23, scope: !5788)
!5790 = !DILocation(line: 957, column: 13, scope: !5788)
!5791 = !DILocation(line: 959, column: 13, scope: !5788)
!5792 = !DILocation(line: 961, column: 5, scope: !4716)
!5793 = !DILocation(line: 963, column: 9, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !4710, file: !945, line: 963, column: 9)
!5795 = !DILocation(line: 963, column: 9, scope: !4710)
!5796 = !DILocalVariable(name: "index", scope: !5797, file: !945, line: 964, type: !971)
!5797 = distinct !DILexicalBlock(scope: !5794, file: !945, line: 963, column: 14)
!5798 = !DILocation(line: 964, column: 19, scope: !5797)
!5799 = !DILocation(line: 964, column: 29, scope: !5797)
!5800 = !DILocation(line: 964, column: 38, scope: !5797)
!5801 = !DILocation(line: 964, column: 27, scope: !5797)
!5802 = !DILocalVariable(name: "type", scope: !5797, file: !945, line: 965, type: !971)
!5803 = !DILocation(line: 965, column: 19, scope: !5797)
!5804 = !DILocation(line: 965, column: 28, scope: !5797)
!5805 = !DILocation(line: 965, column: 31, scope: !5797)
!5806 = !DILocation(line: 965, column: 38, scope: !5797)
!5807 = !DILocation(line: 965, column: 43, scope: !5797)
!5808 = !DILocation(line: 965, column: 48, scope: !5809)
!5809 = !DILexicalBlockFile(scope: !5797, file: !945, discriminator: 1)
!5810 = !DILocation(line: 965, column: 57, scope: !5809)
!5811 = !DILocation(line: 965, column: 43, scope: !5809)
!5812 = !DILocation(line: 965, column: 27, scope: !5813)
!5813 = !DILexicalBlockFile(scope: !5797, file: !945, discriminator: 2)
!5814 = !DILocation(line: 965, column: 19, scope: !5813)
!5815 = !DILocation(line: 967, column: 16, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5797, file: !945, line: 967, column: 9)
!5817 = !DILocation(line: 967, column: 14, scope: !5816)
!5818 = !DILocation(line: 967, column: 21, scope: !5819)
!5819 = !DILexicalBlockFile(scope: !5820, file: !945, discriminator: 1)
!5820 = distinct !DILexicalBlock(scope: !5816, file: !945, line: 967, column: 9)
!5821 = !DILocation(line: 967, column: 23, scope: !5819)
!5822 = !DILocation(line: 967, column: 9, scope: !5819)
!5823 = !DILocation(line: 968, column: 18, scope: !5824)
!5824 = distinct !DILexicalBlock(scope: !5820, file: !945, line: 968, column: 17)
!5825 = !DILocation(line: 968, column: 30, scope: !5824)
!5826 = !DILocation(line: 968, column: 27, scope: !5824)
!5827 = !DILocation(line: 968, column: 22, scope: !5824)
!5828 = !DILocation(line: 968, column: 17, scope: !5820)
!5829 = !DILocation(line: 969, column: 24, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5831, file: !945, line: 969, column: 17)
!5831 = distinct !DILexicalBlock(scope: !5824, file: !945, line: 968, column: 35)
!5832 = !DILocation(line: 969, column: 22, scope: !5830)
!5833 = !DILocation(line: 969, column: 29, scope: !5834)
!5834 = !DILexicalBlockFile(scope: !5835, file: !945, discriminator: 1)
!5835 = distinct !DILexicalBlock(scope: !5830, file: !945, line: 969, column: 17)
!5836 = !DILocation(line: 969, column: 31, scope: !5834)
!5837 = !DILocation(line: 969, column: 17, scope: !5834)
!5838 = !DILocation(line: 970, column: 25, scope: !5839)
!5839 = distinct !DILexicalBlock(scope: !5835, file: !945, line: 969, column: 41)
!5840 = !DILocation(line: 970, column: 39, scope: !5841)
!5841 = !DILexicalBlockFile(scope: !5839, file: !945, discriminator: 1)
!5842 = !DILocation(line: 970, column: 41, scope: !5841)
!5843 = !DILocation(line: 970, column: 36, scope: !5841)
!5844 = !DILocation(line: 970, column: 53, scope: !5841)
!5845 = !DILocation(line: 970, column: 55, scope: !5841)
!5846 = !DILocation(line: 970, column: 50, scope: !5841)
!5847 = !DILocation(line: 970, column: 46, scope: !5841)
!5848 = !DILocation(line: 971, column: 39, scope: !5839)
!5849 = !DILocation(line: 971, column: 41, scope: !5839)
!5850 = !DILocation(line: 971, column: 36, scope: !5839)
!5851 = !DILocation(line: 970, column: 60, scope: !5841)
!5852 = !DILocation(line: 971, column: 53, scope: !5839)
!5853 = !DILocation(line: 971, column: 55, scope: !5839)
!5854 = !DILocation(line: 971, column: 50, scope: !5839)
!5855 = !DILocation(line: 971, column: 46, scope: !5839)
!5856 = !DILocation(line: 970, column: 25, scope: !5841)
!5857 = !DILocation(line: 972, column: 38, scope: !5839)
!5858 = !DILocation(line: 972, column: 36, scope: !5839)
!5859 = !DILocation(line: 972, column: 42, scope: !5839)
!5860 = !DILocation(line: 972, column: 40, scope: !5839)
!5861 = !DILocation(line: 970, column: 25, scope: !5862)
!5862 = !DILexicalBlockFile(scope: !5839, file: !945, discriminator: 2)
!5863 = !DILocation(line: 970, column: 25, scope: !5864)
!5864 = !DILexicalBlockFile(scope: !5839, file: !945, discriminator: 3)
!5865 = !DILocation(line: 970, column: 23, scope: !5864)
!5866 = !DILocation(line: 973, column: 51, scope: !5839)
!5867 = !DILocation(line: 973, column: 45, scope: !5839)
!5868 = !DILocation(line: 973, column: 21, scope: !5839)
!5869 = !DILocation(line: 973, column: 24, scope: !5839)
!5870 = !DILocation(line: 973, column: 55, scope: !5839)
!5871 = !DILocation(line: 975, column: 44, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5839, file: !945, line: 975, column: 25)
!5873 = !DILocation(line: 975, column: 47, scope: !5872)
!5874 = !DILocation(line: 975, column: 69, scope: !5872)
!5875 = !DILocation(line: 975, column: 67, scope: !5872)
!5876 = !DILocation(line: 975, column: 58, scope: !5872)
!5877 = !DILocation(line: 975, column: 61, scope: !5872)
!5878 = !DILocation(line: 975, column: 73, scope: !5872)
!5879 = !DILocation(line: 975, column: 80, scope: !5872)
!5880 = !DILocation(line: 975, column: 25, scope: !5872)
!5881 = !DILocation(line: 975, column: 25, scope: !5839)
!5882 = !DILocation(line: 976, column: 32, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5872, file: !945, line: 975, column: 87)
!5884 = !DILocation(line: 976, column: 35, scope: !5883)
!5885 = !DILocation(line: 976, column: 25, scope: !5883)
!5886 = !DILocation(line: 978, column: 25, scope: !5883)
!5887 = !DILocation(line: 980, column: 17, scope: !5839)
!5888 = !DILocation(line: 969, column: 37, scope: !5889)
!5889 = !DILexicalBlockFile(scope: !5835, file: !945, discriminator: 2)
!5890 = !DILocation(line: 969, column: 17, scope: !5889)
!5891 = distinct !{!5891, !5892}
!5892 = !DILocation(line: 969, column: 17, scope: !5831)
!5893 = !DILocation(line: 981, column: 13, scope: !5831)
!5894 = !DILocation(line: 968, column: 32, scope: !5895)
!5895 = !DILexicalBlockFile(scope: !5824, file: !945, discriminator: 1)
!5896 = !DILocation(line: 967, column: 29, scope: !5897)
!5897 = !DILexicalBlockFile(scope: !5820, file: !945, discriminator: 2)
!5898 = !DILocation(line: 967, column: 9, scope: !5897)
!5899 = distinct !{!5899, !5900}
!5900 = !DILocation(line: 967, column: 9, scope: !5797)
!5901 = !DILocation(line: 983, column: 14, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5797, file: !945, line: 983, column: 13)
!5903 = !DILocation(line: 983, column: 18, scope: !5902)
!5904 = !DILocation(line: 983, column: 13, scope: !5797)
!5905 = !DILocation(line: 984, column: 20, scope: !5906)
!5906 = distinct !DILexicalBlock(scope: !5907, file: !945, line: 984, column: 13)
!5907 = distinct !DILexicalBlock(scope: !5902, file: !945, line: 983, column: 27)
!5908 = !DILocation(line: 984, column: 18, scope: !5906)
!5909 = !DILocation(line: 984, column: 25, scope: !5910)
!5910 = !DILexicalBlockFile(scope: !5911, file: !945, discriminator: 1)
!5911 = distinct !DILexicalBlock(scope: !5906, file: !945, line: 984, column: 13)
!5912 = !DILocation(line: 984, column: 27, scope: !5910)
!5913 = !DILocation(line: 984, column: 13, scope: !5910)
!5914 = !DILocation(line: 985, column: 40, scope: !5915)
!5915 = distinct !DILexicalBlock(scope: !5911, file: !945, line: 985, column: 21)
!5916 = !DILocation(line: 985, column: 43, scope: !5915)
!5917 = !DILocation(line: 985, column: 70, scope: !5915)
!5918 = !DILocation(line: 985, column: 68, scope: !5915)
!5919 = !DILocation(line: 985, column: 54, scope: !5915)
!5920 = !DILocation(line: 985, column: 57, scope: !5915)
!5921 = !DILocation(line: 985, column: 21, scope: !5915)
!5922 = !DILocation(line: 985, column: 21, scope: !5911)
!5923 = !DILocation(line: 986, column: 28, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5915, file: !945, line: 985, column: 81)
!5925 = !DILocation(line: 986, column: 31, scope: !5924)
!5926 = !DILocation(line: 986, column: 21, scope: !5924)
!5927 = !DILocation(line: 988, column: 21, scope: !5924)
!5928 = !DILocation(line: 985, column: 78, scope: !5929)
!5929 = !DILexicalBlockFile(scope: !5915, file: !945, discriminator: 1)
!5930 = !DILocation(line: 984, column: 32, scope: !5931)
!5931 = !DILexicalBlockFile(scope: !5911, file: !945, discriminator: 2)
!5932 = !DILocation(line: 984, column: 13, scope: !5931)
!5933 = distinct !{!5933, !5934}
!5934 = !DILocation(line: 984, column: 13, scope: !5907)
!5935 = !DILocation(line: 991, column: 18, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5907, file: !945, line: 991, column: 17)
!5937 = !DILocation(line: 991, column: 22, scope: !5936)
!5938 = !DILocation(line: 991, column: 17, scope: !5907)
!5939 = !DILocation(line: 992, column: 24, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5941, file: !945, line: 992, column: 17)
!5941 = distinct !DILexicalBlock(scope: !5936, file: !945, line: 991, column: 31)
!5942 = !DILocation(line: 992, column: 22, scope: !5940)
!5943 = !DILocation(line: 992, column: 29, scope: !5944)
!5944 = !DILexicalBlockFile(scope: !5945, file: !945, discriminator: 1)
!5945 = distinct !DILexicalBlock(scope: !5940, file: !945, line: 992, column: 17)
!5946 = !DILocation(line: 992, column: 31, scope: !5944)
!5947 = !DILocation(line: 992, column: 17, scope: !5944)
!5948 = !DILocation(line: 993, column: 28, scope: !5949)
!5949 = distinct !DILexicalBlock(scope: !5950, file: !945, line: 993, column: 21)
!5950 = distinct !DILexicalBlock(scope: !5945, file: !945, line: 992, column: 41)
!5951 = !DILocation(line: 993, column: 26, scope: !5949)
!5952 = !DILocation(line: 993, column: 33, scope: !5953)
!5953 = !DILexicalBlockFile(scope: !5954, file: !945, discriminator: 1)
!5954 = distinct !DILexicalBlock(scope: !5949, file: !945, line: 993, column: 21)
!5955 = !DILocation(line: 993, column: 35, scope: !5953)
!5956 = !DILocation(line: 993, column: 21, scope: !5953)
!5957 = !DILocation(line: 994, column: 34, scope: !5958)
!5958 = distinct !DILexicalBlock(scope: !5954, file: !945, line: 993, column: 45)
!5959 = !DILocation(line: 994, column: 32, scope: !5958)
!5960 = !DILocation(line: 994, column: 38, scope: !5958)
!5961 = !DILocation(line: 994, column: 36, scope: !5958)
!5962 = !DILocation(line: 994, column: 27, scope: !5958)
!5963 = !DILocation(line: 995, column: 55, scope: !5958)
!5964 = !DILocation(line: 995, column: 49, scope: !5958)
!5965 = !DILocation(line: 995, column: 25, scope: !5958)
!5966 = !DILocation(line: 995, column: 28, scope: !5958)
!5967 = !DILocation(line: 995, column: 59, scope: !5958)
!5968 = !DILocation(line: 997, column: 48, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5958, file: !945, line: 997, column: 29)
!5970 = !DILocation(line: 997, column: 51, scope: !5969)
!5971 = !DILocation(line: 997, column: 73, scope: !5969)
!5972 = !DILocation(line: 997, column: 71, scope: !5969)
!5973 = !DILocation(line: 997, column: 62, scope: !5969)
!5974 = !DILocation(line: 997, column: 65, scope: !5969)
!5975 = !DILocation(line: 997, column: 29, scope: !5969)
!5976 = !DILocation(line: 997, column: 29, scope: !5958)
!5977 = !DILocation(line: 998, column: 36, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5969, file: !945, line: 997, column: 84)
!5979 = !DILocation(line: 998, column: 39, scope: !5978)
!5980 = !DILocation(line: 998, column: 29, scope: !5978)
!5981 = !DILocation(line: 1000, column: 29, scope: !5978)
!5982 = !DILocation(line: 1002, column: 21, scope: !5958)
!5983 = !DILocation(line: 993, column: 41, scope: !5984)
!5984 = !DILexicalBlockFile(scope: !5954, file: !945, discriminator: 2)
!5985 = !DILocation(line: 993, column: 21, scope: !5984)
!5986 = distinct !{!5986, !5987}
!5987 = !DILocation(line: 993, column: 21, scope: !5950)
!5988 = !DILocation(line: 1003, column: 17, scope: !5950)
!5989 = !DILocation(line: 992, column: 37, scope: !5990)
!5990 = !DILexicalBlockFile(scope: !5945, file: !945, discriminator: 2)
!5991 = !DILocation(line: 992, column: 17, scope: !5990)
!5992 = distinct !{!5992, !5993}
!5993 = !DILocation(line: 992, column: 17, scope: !5941)
!5994 = !DILocation(line: 1004, column: 13, scope: !5941)
!5995 = !DILocation(line: 1005, column: 9, scope: !5907)
!5996 = !DILocation(line: 1006, column: 5, scope: !5797)
!5997 = !DILocation(line: 1008, column: 14, scope: !4710)
!5998 = !DILocation(line: 1008, column: 5, scope: !4710)
!5999 = !DILocation(line: 1008, column: 8, scope: !4710)
!6000 = !DILocation(line: 1008, column: 12, scope: !4710)
!6001 = !DILocation(line: 1009, column: 34, scope: !4710)
!6002 = !DILocation(line: 1009, column: 25, scope: !4710)
!6003 = !DILocation(line: 1009, column: 5, scope: !4710)
!6004 = !DILocation(line: 1009, column: 8, scope: !4710)
!6005 = !DILocation(line: 1009, column: 17, scope: !4710)
!6006 = !DILocation(line: 1009, column: 32, scope: !4710)
!6007 = !DILocation(line: 1011, column: 11, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !4710, file: !945, line: 1011, column: 9)
!6009 = !DILocation(line: 1011, column: 20, scope: !6008)
!6010 = !DILocation(line: 1011, column: 9, scope: !4710)
!6011 = !DILocation(line: 1012, column: 61, scope: !6008)
!6012 = !DILocation(line: 1012, column: 64, scope: !6008)
!6013 = !DILocation(line: 1012, column: 71, scope: !6008)
!6014 = !DILocation(line: 1012, column: 74, scope: !6008)
!6015 = !DILocation(line: 1013, column: 61, scope: !6008)
!6016 = !DILocation(line: 1013, column: 64, scope: !6008)
!6017 = !DILocation(line: 1012, column: 31, scope: !6008)
!6018 = !DILocation(line: 1012, column: 9, scope: !6008)
!6019 = !DILocation(line: 1012, column: 12, scope: !6008)
!6020 = !DILocation(line: 1012, column: 29, scope: !6008)
!6021 = !DILocation(line: 1015, column: 5, scope: !4710)
!6022 = !DILocation(line: 1016, column: 1, scope: !4710)
!6023 = distinct !DISubprogram(name: "hl_decode_mb", scope: !945, file: !945, line: 671, type: !4028, isLocal: true, isDefinition: true, scopeLine: 672, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!6024 = !DILocalVariable(name: "s", arg: 1, scope: !6025, file: !945, line: 617, type: !1735)
!6025 = distinct !DISubprogram(name: "hl_decode_mb_idct_luma", scope: !945, file: !945, line: 617, type: !6026, isLocal: true, isDefinition: true, scopeLine: 620, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!6026 = !DISubroutineType(types: !6027)
!6027 = !{null, !1735, !899, !970, !899, !928}
!6028 = !DILocation(line: 617, column: 87, scope: !6025, inlinedAt: !6029)
!6029 = distinct !DILocation(line: 700, column: 5, scope: !6023)
!6030 = !DILocalVariable(name: "mb_type", arg: 2, scope: !6025, file: !945, line: 618, type: !899)
!6031 = !DILocation(line: 618, column: 57, scope: !6025, inlinedAt: !6029)
!6032 = !DILocalVariable(name: "block_offset", arg: 3, scope: !6025, file: !945, line: 618, type: !970)
!6033 = !DILocation(line: 618, column: 77, scope: !6025, inlinedAt: !6029)
!6034 = !DILocalVariable(name: "linesize", arg: 4, scope: !6025, file: !945, line: 619, type: !899)
!6035 = !DILocation(line: 619, column: 57, scope: !6025, inlinedAt: !6029)
!6036 = !DILocalVariable(name: "dest_y", arg: 5, scope: !6025, file: !945, line: 619, type: !928)
!6037 = !DILocation(line: 619, column: 76, scope: !6025, inlinedAt: !6029)
!6038 = !DILocalVariable(name: "i", scope: !6025, file: !945, line: 621, type: !899)
!6039 = !DILocation(line: 621, column: 9, scope: !6025, inlinedAt: !6029)
!6040 = !DILocalVariable(name: "ptr", scope: !6041, file: !945, line: 625, type: !6047)
!6041 = distinct !DILexicalBlock(scope: !6042, file: !945, line: 624, column: 69)
!6042 = distinct !DILexicalBlock(scope: !6043, file: !945, line: 624, column: 17)
!6043 = distinct !DILexicalBlock(scope: !6044, file: !945, line: 623, column: 9)
!6044 = distinct !DILexicalBlock(scope: !6045, file: !945, line: 623, column: 9)
!6045 = distinct !DILexicalBlock(scope: !6046, file: !945, line: 622, column: 34)
!6046 = distinct !DILexicalBlock(scope: !6025, file: !945, line: 622, column: 9)
!6047 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !928)
!6048 = !DILocation(line: 625, column: 32, scope: !6041, inlinedAt: !6029)
!6049 = !DILocalVariable(name: "s", arg: 1, scope: !6050, file: !945, line: 632, type: !1735)
!6050 = distinct !DISubprogram(name: "hl_decode_mb_predict_luma", scope: !945, file: !945, line: 632, type: !6026, isLocal: true, isDefinition: true, scopeLine: 637, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!6051 = !DILocation(line: 632, column: 90, scope: !6050, inlinedAt: !6052)
!6052 = distinct !DILocation(line: 697, column: 9, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6054, file: !945, line: 693, column: 26)
!6054 = distinct !DILexicalBlock(scope: !6023, file: !945, line: 693, column: 9)
!6055 = !DILocalVariable(name: "mb_type", arg: 2, scope: !6050, file: !945, line: 633, type: !899)
!6056 = !DILocation(line: 633, column: 60, scope: !6050, inlinedAt: !6052)
!6057 = !DILocalVariable(name: "block_offset", arg: 3, scope: !6050, file: !945, line: 634, type: !970)
!6058 = !DILocation(line: 634, column: 67, scope: !6050, inlinedAt: !6052)
!6059 = !DILocalVariable(name: "linesize", arg: 4, scope: !6050, file: !945, line: 635, type: !899)
!6060 = !DILocation(line: 635, column: 60, scope: !6050, inlinedAt: !6052)
!6061 = !DILocalVariable(name: "dest_y", arg: 5, scope: !6050, file: !945, line: 636, type: !928)
!6062 = !DILocation(line: 636, column: 65, scope: !6050, inlinedAt: !6052)
!6063 = !DILocalVariable(name: "i", scope: !6050, file: !945, line: 638, type: !899)
!6064 = !DILocation(line: 638, column: 9, scope: !6050, inlinedAt: !6052)
!6065 = !DILocalVariable(name: "qscale", scope: !6050, file: !945, line: 639, type: !899)
!6066 = !DILocation(line: 639, column: 9, scope: !6050, inlinedAt: !6052)
!6067 = !DILocalVariable(name: "ptr", scope: !6068, file: !945, line: 643, type: !6047)
!6068 = distinct !DILexicalBlock(scope: !6069, file: !945, line: 642, column: 34)
!6069 = distinct !DILexicalBlock(scope: !6070, file: !945, line: 642, column: 9)
!6070 = distinct !DILexicalBlock(scope: !6071, file: !945, line: 642, column: 9)
!6071 = distinct !DILexicalBlock(scope: !6072, file: !945, line: 641, column: 33)
!6072 = distinct !DILexicalBlock(scope: !6050, file: !945, line: 641, column: 9)
!6073 = !DILocation(line: 643, column: 28, scope: !6068, inlinedAt: !6052)
!6074 = !DILocalVariable(name: "dir", scope: !6068, file: !945, line: 644, type: !971)
!6075 = !DILocation(line: 644, column: 23, scope: !6068, inlinedAt: !6052)
!6076 = !DILocalVariable(name: "topright", scope: !6068, file: !945, line: 646, type: !928)
!6077 = !DILocation(line: 646, column: 22, scope: !6068, inlinedAt: !6052)
!6078 = !DILocalVariable(name: "nnz", scope: !6068, file: !945, line: 647, type: !899)
!6079 = !DILocation(line: 647, column: 17, scope: !6068, inlinedAt: !6052)
!6080 = !DILocalVariable(name: "tr", scope: !6068, file: !945, line: 647, type: !899)
!6081 = !DILocation(line: 647, column: 22, scope: !6068, inlinedAt: !6052)
!6082 = !DILocalVariable(name: "topright_avail", scope: !6083, file: !945, line: 649, type: !971)
!6083 = distinct !DILexicalBlock(scope: !6084, file: !945, line: 648, column: 39)
!6084 = distinct !DILexicalBlock(scope: !6068, file: !945, line: 648, column: 17)
!6085 = !DILocation(line: 649, column: 27, scope: !6083, inlinedAt: !6052)
!6086 = !DILocalVariable(name: "s", arg: 1, scope: !6023, file: !945, line: 671, type: !1735)
!6087 = !DILocation(line: 671, column: 39, scope: !6023)
!6088 = !DILocalVariable(name: "mb_x", scope: !6023, file: !945, line: 673, type: !971)
!6089 = !DILocation(line: 673, column: 15, scope: !6023)
!6090 = !DILocation(line: 673, column: 22, scope: !6023)
!6091 = !DILocation(line: 673, column: 25, scope: !6023)
!6092 = !DILocalVariable(name: "mb_y", scope: !6023, file: !945, line: 674, type: !971)
!6093 = !DILocation(line: 674, column: 15, scope: !6023)
!6094 = !DILocation(line: 674, column: 22, scope: !6023)
!6095 = !DILocation(line: 674, column: 25, scope: !6023)
!6096 = !DILocalVariable(name: "mb_xy", scope: !6023, file: !945, line: 675, type: !971)
!6097 = !DILocation(line: 675, column: 15, scope: !6023)
!6098 = !DILocation(line: 675, column: 23, scope: !6023)
!6099 = !DILocation(line: 675, column: 26, scope: !6023)
!6100 = !DILocalVariable(name: "mb_type", scope: !6023, file: !945, line: 676, type: !971)
!6101 = !DILocation(line: 676, column: 15, scope: !6023)
!6102 = !DILocation(line: 676, column: 45, scope: !6023)
!6103 = !DILocation(line: 676, column: 25, scope: !6023)
!6104 = !DILocation(line: 676, column: 28, scope: !6023)
!6105 = !DILocation(line: 676, column: 37, scope: !6023)
!6106 = !DILocalVariable(name: "dest_y", scope: !6023, file: !945, line: 677, type: !928)
!6107 = !DILocation(line: 677, column: 14, scope: !6023)
!6108 = !DILocalVariable(name: "dest_cb", scope: !6023, file: !945, line: 677, type: !928)
!6109 = !DILocation(line: 677, column: 23, scope: !6023)
!6110 = !DILocalVariable(name: "dest_cr", scope: !6023, file: !945, line: 677, type: !928)
!6111 = !DILocation(line: 677, column: 33, scope: !6023)
!6112 = !DILocalVariable(name: "linesize", scope: !6023, file: !945, line: 678, type: !899)
!6113 = !DILocation(line: 678, column: 9, scope: !6023)
!6114 = !DILocalVariable(name: "uvlinesize", scope: !6023, file: !945, line: 678, type: !899)
!6115 = !DILocation(line: 678, column: 19, scope: !6023)
!6116 = !DILocalVariable(name: "i", scope: !6023, file: !945, line: 679, type: !899)
!6117 = !DILocation(line: 679, column: 9, scope: !6023)
!6118 = !DILocalVariable(name: "j", scope: !6023, file: !945, line: 679, type: !899)
!6119 = !DILocation(line: 679, column: 12, scope: !6023)
!6120 = !DILocalVariable(name: "block_offset", scope: !6023, file: !945, line: 680, type: !970)
!6121 = !DILocation(line: 680, column: 16, scope: !6023)
!6122 = !DILocation(line: 680, column: 32, scope: !6023)
!6123 = !DILocation(line: 680, column: 35, scope: !6023)
!6124 = !DILocalVariable(name: "block_h", scope: !6023, file: !945, line: 681, type: !971)
!6125 = !DILocation(line: 681, column: 15, scope: !6023)
!6126 = !DILocation(line: 683, column: 16, scope: !6023)
!6127 = !DILocation(line: 683, column: 19, scope: !6023)
!6128 = !DILocation(line: 683, column: 28, scope: !6023)
!6129 = !DILocation(line: 683, column: 31, scope: !6023)
!6130 = !DILocation(line: 683, column: 14, scope: !6023)
!6131 = !DILocation(line: 684, column: 18, scope: !6023)
!6132 = !DILocation(line: 684, column: 21, scope: !6023)
!6133 = !DILocation(line: 684, column: 30, scope: !6023)
!6134 = !DILocation(line: 684, column: 33, scope: !6023)
!6135 = !DILocation(line: 684, column: 16, scope: !6023)
!6136 = !DILocation(line: 686, column: 14, scope: !6023)
!6137 = !DILocation(line: 686, column: 17, scope: !6023)
!6138 = !DILocation(line: 686, column: 26, scope: !6023)
!6139 = !DILocation(line: 686, column: 29, scope: !6023)
!6140 = !DILocation(line: 686, column: 40, scope: !6023)
!6141 = !DILocation(line: 686, column: 47, scope: !6023)
!6142 = !DILocation(line: 686, column: 54, scope: !6023)
!6143 = !DILocation(line: 686, column: 52, scope: !6023)
!6144 = !DILocation(line: 686, column: 45, scope: !6023)
!6145 = !DILocation(line: 686, column: 64, scope: !6023)
!6146 = !DILocation(line: 686, column: 37, scope: !6023)
!6147 = !DILocation(line: 686, column: 12, scope: !6023)
!6148 = !DILocation(line: 687, column: 15, scope: !6023)
!6149 = !DILocation(line: 687, column: 18, scope: !6023)
!6150 = !DILocation(line: 687, column: 27, scope: !6023)
!6151 = !DILocation(line: 687, column: 30, scope: !6023)
!6152 = !DILocation(line: 687, column: 40, scope: !6023)
!6153 = !DILocation(line: 687, column: 45, scope: !6023)
!6154 = !DILocation(line: 687, column: 38, scope: !6023)
!6155 = !DILocation(line: 687, column: 51, scope: !6023)
!6156 = !DILocation(line: 687, column: 58, scope: !6023)
!6157 = !DILocation(line: 687, column: 56, scope: !6023)
!6158 = !DILocation(line: 687, column: 69, scope: !6023)
!6159 = !DILocation(line: 687, column: 49, scope: !6023)
!6160 = !DILocation(line: 687, column: 13, scope: !6023)
!6161 = !DILocation(line: 688, column: 15, scope: !6023)
!6162 = !DILocation(line: 688, column: 18, scope: !6023)
!6163 = !DILocation(line: 688, column: 27, scope: !6023)
!6164 = !DILocation(line: 688, column: 30, scope: !6023)
!6165 = !DILocation(line: 688, column: 40, scope: !6023)
!6166 = !DILocation(line: 688, column: 45, scope: !6023)
!6167 = !DILocation(line: 688, column: 38, scope: !6023)
!6168 = !DILocation(line: 688, column: 51, scope: !6023)
!6169 = !DILocation(line: 688, column: 58, scope: !6023)
!6170 = !DILocation(line: 688, column: 56, scope: !6023)
!6171 = !DILocation(line: 688, column: 69, scope: !6023)
!6172 = !DILocation(line: 688, column: 49, scope: !6023)
!6173 = !DILocation(line: 688, column: 13, scope: !6023)
!6174 = !DILocation(line: 690, column: 5, scope: !6023)
!6175 = !DILocation(line: 690, column: 8, scope: !6023)
!6176 = !DILocation(line: 690, column: 13, scope: !6023)
!6177 = !DILocation(line: 690, column: 22, scope: !6023)
!6178 = !DILocation(line: 690, column: 32, scope: !6023)
!6179 = !DILocation(line: 690, column: 35, scope: !6023)
!6180 = !DILocation(line: 690, column: 40, scope: !6023)
!6181 = !DILocation(line: 690, column: 45, scope: !6023)
!6182 = !DILocation(line: 690, column: 51, scope: !6023)
!6183 = !DILocation(line: 690, column: 49, scope: !6023)
!6184 = !DILocation(line: 690, column: 29, scope: !6023)
!6185 = !DILocation(line: 690, column: 60, scope: !6023)
!6186 = !DILocation(line: 690, column: 66, scope: !6023)
!6187 = !DILocation(line: 691, column: 5, scope: !6023)
!6188 = !DILocation(line: 691, column: 8, scope: !6023)
!6189 = !DILocation(line: 691, column: 13, scope: !6023)
!6190 = !DILocation(line: 691, column: 22, scope: !6023)
!6191 = !DILocation(line: 691, column: 33, scope: !6023)
!6192 = !DILocation(line: 691, column: 36, scope: !6023)
!6193 = !DILocation(line: 691, column: 41, scope: !6023)
!6194 = !DILocation(line: 691, column: 48, scope: !6023)
!6195 = !DILocation(line: 691, column: 46, scope: !6023)
!6196 = !DILocation(line: 691, column: 30, scope: !6023)
!6197 = !DILocation(line: 691, column: 59, scope: !6023)
!6198 = !DILocation(line: 691, column: 65, scope: !6023)
!6199 = !DILocation(line: 691, column: 75, scope: !6023)
!6200 = !DILocation(line: 691, column: 73, scope: !6023)
!6201 = !DILocation(line: 693, column: 11, scope: !6054)
!6202 = !DILocation(line: 693, column: 20, scope: !6054)
!6203 = !DILocation(line: 693, column: 9, scope: !6023)
!6204 = !DILocation(line: 694, column: 24, scope: !6053)
!6205 = !DILocation(line: 694, column: 27, scope: !6053)
!6206 = !DILocation(line: 694, column: 9, scope: !6053)
!6207 = !DILocation(line: 694, column: 12, scope: !6053)
!6208 = !DILocation(line: 694, column: 16, scope: !6053)
!6209 = !DILocation(line: 694, column: 45, scope: !6053)
!6210 = !DILocation(line: 694, column: 54, scope: !6053)
!6211 = !DILocation(line: 695, column: 24, scope: !6053)
!6212 = !DILocation(line: 695, column: 27, scope: !6053)
!6213 = !DILocation(line: 695, column: 9, scope: !6053)
!6214 = !DILocation(line: 695, column: 12, scope: !6053)
!6215 = !DILocation(line: 695, column: 16, scope: !6053)
!6216 = !DILocation(line: 695, column: 45, scope: !6053)
!6217 = !DILocation(line: 695, column: 54, scope: !6053)
!6218 = !DILocation(line: 697, column: 35, scope: !6053)
!6219 = !DILocation(line: 697, column: 38, scope: !6053)
!6220 = !DILocation(line: 697, column: 47, scope: !6053)
!6221 = !DILocation(line: 697, column: 61, scope: !6053)
!6222 = !DILocation(line: 697, column: 71, scope: !6053)
!6223 = !DILocation(line: 697, column: 9, scope: !6053)
!6224 = !DILocation(line: 639, column: 18, scope: !6050, inlinedAt: !6052)
!6225 = !DILocation(line: 639, column: 21, scope: !6050, inlinedAt: !6052)
!6226 = !DILocation(line: 641, column: 11, scope: !6072, inlinedAt: !6052)
!6227 = !DILocation(line: 641, column: 20, scope: !6072, inlinedAt: !6052)
!6228 = !DILocation(line: 641, column: 9, scope: !6050, inlinedAt: !6052)
!6229 = !DILocation(line: 642, column: 16, scope: !6070, inlinedAt: !6052)
!6230 = !DILocation(line: 642, column: 14, scope: !6070, inlinedAt: !6052)
!6231 = !DILocation(line: 642, column: 21, scope: !6232, inlinedAt: !6052)
!6232 = !DILexicalBlockFile(scope: !6069, file: !945, discriminator: 1)
!6233 = !DILocation(line: 642, column: 23, scope: !6232, inlinedAt: !6052)
!6234 = !DILocation(line: 642, column: 9, scope: !6232, inlinedAt: !6052)
!6235 = !DILocation(line: 643, column: 34, scope: !6068, inlinedAt: !6052)
!6236 = !DILocation(line: 643, column: 56, scope: !6068, inlinedAt: !6052)
!6237 = !DILocation(line: 643, column: 43, scope: !6068, inlinedAt: !6052)
!6238 = !DILocation(line: 643, column: 41, scope: !6068, inlinedAt: !6052)
!6239 = !DILocation(line: 644, column: 63, scope: !6068, inlinedAt: !6052)
!6240 = !DILocation(line: 644, column: 57, scope: !6068, inlinedAt: !6052)
!6241 = !DILocation(line: 644, column: 29, scope: !6068, inlinedAt: !6052)
!6242 = !DILocation(line: 644, column: 32, scope: !6068, inlinedAt: !6052)
!6243 = !DILocation(line: 648, column: 17, scope: !6084, inlinedAt: !6052)
!6244 = !DILocation(line: 648, column: 21, scope: !6084, inlinedAt: !6052)
!6245 = !DILocation(line: 648, column: 26, scope: !6084, inlinedAt: !6052)
!6246 = !DILocation(line: 648, column: 29, scope: !6247, inlinedAt: !6052)
!6247 = !DILexicalBlockFile(scope: !6084, file: !945, discriminator: 1)
!6248 = !DILocation(line: 648, column: 33, scope: !6247, inlinedAt: !6052)
!6249 = !DILocation(line: 648, column: 17, scope: !6247, inlinedAt: !6052)
!6250 = !DILocation(line: 649, column: 45, scope: !6083, inlinedAt: !6052)
!6251 = !DILocation(line: 649, column: 48, scope: !6083, inlinedAt: !6052)
!6252 = !DILocation(line: 649, column: 78, scope: !6083, inlinedAt: !6052)
!6253 = !DILocation(line: 649, column: 75, scope: !6083, inlinedAt: !6052)
!6254 = !DILocation(line: 649, column: 81, scope: !6083, inlinedAt: !6052)
!6255 = !DILocation(line: 651, column: 22, scope: !6256, inlinedAt: !6052)
!6256 = distinct !DILexicalBlock(scope: !6083, file: !945, line: 651, column: 21)
!6257 = !DILocation(line: 651, column: 21, scope: !6083, inlinedAt: !6052)
!6258 = !DILocation(line: 652, column: 34, scope: !6259, inlinedAt: !6052)
!6259 = distinct !DILexicalBlock(scope: !6256, file: !945, line: 651, column: 38)
!6260 = !DILocation(line: 652, column: 32, scope: !6259, inlinedAt: !6052)
!6261 = !DILocation(line: 652, column: 26, scope: !6259, inlinedAt: !6052)
!6262 = !DILocation(line: 652, column: 44, scope: !6259, inlinedAt: !6052)
!6263 = !DILocation(line: 652, column: 24, scope: !6259, inlinedAt: !6052)
!6264 = !DILocation(line: 653, column: 32, scope: !6259, inlinedAt: !6052)
!6265 = !DILocation(line: 653, column: 30, scope: !6259, inlinedAt: !6052)
!6266 = !DILocation(line: 654, column: 17, scope: !6259, inlinedAt: !6052)
!6267 = !DILocation(line: 655, column: 32, scope: !6256, inlinedAt: !6052)
!6268 = !DILocation(line: 655, column: 36, scope: !6256, inlinedAt: !6052)
!6269 = !DILocation(line: 655, column: 42, scope: !6256, inlinedAt: !6052)
!6270 = !DILocation(line: 655, column: 40, scope: !6256, inlinedAt: !6052)
!6271 = !DILocation(line: 655, column: 30, scope: !6256, inlinedAt: !6052)
!6272 = !DILocation(line: 656, column: 13, scope: !6083, inlinedAt: !6052)
!6273 = !DILocation(line: 657, column: 26, scope: !6084, inlinedAt: !6052)
!6274 = !DILocation(line: 659, column: 28, scope: !6068, inlinedAt: !6052)
!6275 = !DILocation(line: 659, column: 13, scope: !6068, inlinedAt: !6052)
!6276 = !DILocation(line: 659, column: 16, scope: !6068, inlinedAt: !6052)
!6277 = !DILocation(line: 659, column: 20, scope: !6068, inlinedAt: !6052)
!6278 = !DILocation(line: 659, column: 33, scope: !6068, inlinedAt: !6052)
!6279 = !DILocation(line: 659, column: 38, scope: !6068, inlinedAt: !6052)
!6280 = !DILocation(line: 659, column: 48, scope: !6068, inlinedAt: !6052)
!6281 = !DILocation(line: 660, column: 49, scope: !6068, inlinedAt: !6052)
!6282 = !DILocation(line: 660, column: 43, scope: !6068, inlinedAt: !6052)
!6283 = !DILocation(line: 660, column: 19, scope: !6068, inlinedAt: !6052)
!6284 = !DILocation(line: 660, column: 22, scope: !6068, inlinedAt: !6052)
!6285 = !DILocation(line: 660, column: 17, scope: !6068, inlinedAt: !6052)
!6286 = !DILocation(line: 661, column: 17, scope: !6287, inlinedAt: !6052)
!6287 = distinct !DILexicalBlock(scope: !6068, file: !945, line: 661, column: 17)
!6288 = !DILocation(line: 661, column: 17, scope: !6068, inlinedAt: !6052)
!6289 = !DILocation(line: 662, column: 33, scope: !6290, inlinedAt: !6052)
!6290 = distinct !DILexicalBlock(scope: !6287, file: !945, line: 661, column: 22)
!6291 = !DILocation(line: 662, column: 38, scope: !6290, inlinedAt: !6052)
!6292 = !DILocation(line: 662, column: 41, scope: !6290, inlinedAt: !6052)
!6293 = !DILocation(line: 662, column: 46, scope: !6290, inlinedAt: !6052)
!6294 = !DILocation(line: 662, column: 48, scope: !6290, inlinedAt: !6052)
!6295 = !DILocation(line: 662, column: 44, scope: !6290, inlinedAt: !6052)
!6296 = !DILocation(line: 662, column: 54, scope: !6290, inlinedAt: !6052)
!6297 = !DILocation(line: 662, column: 64, scope: !6290, inlinedAt: !6052)
!6298 = !DILocation(line: 662, column: 17, scope: !6290, inlinedAt: !6052)
!6299 = !DILocation(line: 663, column: 13, scope: !6290, inlinedAt: !6052)
!6300 = !DILocation(line: 642, column: 30, scope: !6301, inlinedAt: !6052)
!6301 = !DILexicalBlockFile(scope: !6069, file: !945, discriminator: 2)
!6302 = !DILocation(line: 642, column: 9, scope: !6301, inlinedAt: !6052)
!6303 = distinct !{!6303, !6304}
!6304 = !DILocation(line: 642, column: 9, scope: !6071)
!6305 = !DILocation(line: 665, column: 5, scope: !6071, inlinedAt: !6052)
!6306 = !DILocation(line: 666, column: 26, scope: !6307, inlinedAt: !6052)
!6307 = distinct !DILexicalBlock(scope: !6072, file: !945, line: 665, column: 12)
!6308 = !DILocation(line: 666, column: 29, scope: !6307, inlinedAt: !6052)
!6309 = !DILocation(line: 666, column: 9, scope: !6307, inlinedAt: !6052)
!6310 = !DILocation(line: 666, column: 12, scope: !6307, inlinedAt: !6052)
!6311 = !DILocation(line: 666, column: 16, scope: !6307, inlinedAt: !6052)
!6312 = !DILocation(line: 666, column: 51, scope: !6307, inlinedAt: !6052)
!6313 = !DILocation(line: 666, column: 59, scope: !6307, inlinedAt: !6052)
!6314 = !DILocation(line: 667, column: 37, scope: !6307, inlinedAt: !6052)
!6315 = !DILocation(line: 667, column: 40, scope: !6307, inlinedAt: !6052)
!6316 = !DILocation(line: 667, column: 44, scope: !6307, inlinedAt: !6052)
!6317 = !DILocation(line: 667, column: 47, scope: !6307, inlinedAt: !6052)
!6318 = !DILocation(line: 667, column: 62, scope: !6307, inlinedAt: !6052)
!6319 = !DILocation(line: 667, column: 9, scope: !6307, inlinedAt: !6052)
!6320 = !DILocation(line: 698, column: 5, scope: !6053)
!6321 = !DILocation(line: 700, column: 28, scope: !6023)
!6322 = !DILocation(line: 700, column: 31, scope: !6023)
!6323 = !DILocation(line: 700, column: 40, scope: !6023)
!6324 = !DILocation(line: 700, column: 54, scope: !6023)
!6325 = !DILocation(line: 700, column: 64, scope: !6023)
!6326 = !DILocation(line: 700, column: 5, scope: !6023)
!6327 = !DILocation(line: 622, column: 12, scope: !6046, inlinedAt: !6029)
!6328 = !DILocation(line: 622, column: 21, scope: !6046, inlinedAt: !6029)
!6329 = !DILocation(line: 622, column: 9, scope: !6025, inlinedAt: !6029)
!6330 = !DILocation(line: 623, column: 16, scope: !6044, inlinedAt: !6029)
!6331 = !DILocation(line: 623, column: 14, scope: !6044, inlinedAt: !6029)
!6332 = !DILocation(line: 623, column: 21, scope: !6333, inlinedAt: !6029)
!6333 = !DILexicalBlockFile(scope: !6043, file: !945, discriminator: 1)
!6334 = !DILocation(line: 623, column: 23, scope: !6333, inlinedAt: !6029)
!6335 = !DILocation(line: 623, column: 9, scope: !6333, inlinedAt: !6029)
!6336 = !DILocation(line: 624, column: 47, scope: !6042, inlinedAt: !6029)
!6337 = !DILocation(line: 624, column: 41, scope: !6042, inlinedAt: !6029)
!6338 = !DILocation(line: 624, column: 17, scope: !6042, inlinedAt: !6029)
!6339 = !DILocation(line: 624, column: 20, scope: !6042, inlinedAt: !6029)
!6340 = !DILocation(line: 624, column: 51, scope: !6042, inlinedAt: !6029)
!6341 = !DILocation(line: 624, column: 60, scope: !6342, inlinedAt: !6029)
!6342 = !DILexicalBlockFile(scope: !6042, file: !945, discriminator: 1)
!6343 = !DILocation(line: 624, column: 62, scope: !6342, inlinedAt: !6029)
!6344 = !DILocation(line: 624, column: 54, scope: !6342, inlinedAt: !6029)
!6345 = !DILocation(line: 624, column: 57, scope: !6342, inlinedAt: !6029)
!6346 = !DILocation(line: 624, column: 17, scope: !6342, inlinedAt: !6029)
!6347 = !DILocation(line: 625, column: 38, scope: !6041, inlinedAt: !6029)
!6348 = !DILocation(line: 625, column: 60, scope: !6041, inlinedAt: !6029)
!6349 = !DILocation(line: 625, column: 47, scope: !6041, inlinedAt: !6029)
!6350 = !DILocation(line: 625, column: 45, scope: !6041, inlinedAt: !6029)
!6351 = !DILocation(line: 626, column: 33, scope: !6041, inlinedAt: !6029)
!6352 = !DILocation(line: 626, column: 38, scope: !6041, inlinedAt: !6029)
!6353 = !DILocation(line: 626, column: 41, scope: !6041, inlinedAt: !6029)
!6354 = !DILocation(line: 626, column: 46, scope: !6041, inlinedAt: !6029)
!6355 = !DILocation(line: 626, column: 48, scope: !6041, inlinedAt: !6029)
!6356 = !DILocation(line: 626, column: 44, scope: !6041, inlinedAt: !6029)
!6357 = !DILocation(line: 626, column: 54, scope: !6041, inlinedAt: !6029)
!6358 = !DILocation(line: 627, column: 33, scope: !6041, inlinedAt: !6029)
!6359 = !DILocation(line: 627, column: 36, scope: !6041, inlinedAt: !6029)
!6360 = !DILocation(line: 627, column: 46, scope: !6041, inlinedAt: !6029)
!6361 = !DILocation(line: 627, column: 55, scope: !6041, inlinedAt: !6029)
!6362 = !DILocation(line: 627, column: 44, scope: !6041, inlinedAt: !6029)
!6363 = !DILocation(line: 626, column: 17, scope: !6041, inlinedAt: !6029)
!6364 = !DILocation(line: 628, column: 13, scope: !6041, inlinedAt: !6029)
!6365 = !DILocation(line: 623, column: 30, scope: !6366, inlinedAt: !6029)
!6366 = !DILexicalBlockFile(scope: !6043, file: !945, discriminator: 2)
!6367 = !DILocation(line: 623, column: 9, scope: !6366, inlinedAt: !6029)
!6368 = distinct !{!6368, !6369}
!6369 = !DILocation(line: 623, column: 9, scope: !6045)
!6370 = !DILocation(line: 629, column: 5, scope: !6045, inlinedAt: !6029)
!6371 = !DILocation(line: 702, column: 9, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6023, file: !945, line: 702, column: 9)
!6373 = !DILocation(line: 702, column: 12, scope: !6372)
!6374 = !DILocation(line: 702, column: 16, scope: !6372)
!6375 = !DILocation(line: 702, column: 9, scope: !6023)
!6376 = !DILocalVariable(name: "dest", scope: !6377, file: !945, line: 703, type: !6378)
!6377 = distinct !DILexicalBlock(scope: !6372, file: !945, line: 702, column: 24)
!6378 = !DICompositeType(tag: DW_TAG_array_type, baseType: !928, size: 128, align: 64, elements: !909)
!6379 = !DILocation(line: 703, column: 18, scope: !6377)
!6380 = !DILocation(line: 703, column: 28, scope: !6377)
!6381 = !DILocation(line: 703, column: 30, scope: !6377)
!6382 = !DILocation(line: 703, column: 39, scope: !6377)
!6383 = !DILocation(line: 704, column: 9, scope: !6377)
!6384 = !DILocation(line: 704, column: 12, scope: !6377)
!6385 = !DILocation(line: 704, column: 20, scope: !6377)
!6386 = !DILocation(line: 704, column: 48, scope: !6377)
!6387 = !DILocation(line: 704, column: 51, scope: !6377)
!6388 = !DILocation(line: 704, column: 54, scope: !6377)
!6389 = !DILocation(line: 705, column: 48, scope: !6377)
!6390 = !DILocation(line: 705, column: 51, scope: !6377)
!6391 = !DILocation(line: 706, column: 9, scope: !6377)
!6392 = !DILocation(line: 706, column: 12, scope: !6377)
!6393 = !DILocation(line: 706, column: 20, scope: !6377)
!6394 = !DILocation(line: 706, column: 48, scope: !6377)
!6395 = !DILocation(line: 706, column: 51, scope: !6377)
!6396 = !DILocation(line: 706, column: 54, scope: !6377)
!6397 = !DILocation(line: 707, column: 48, scope: !6377)
!6398 = !DILocation(line: 707, column: 51, scope: !6377)
!6399 = !DILocation(line: 708, column: 16, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6377, file: !945, line: 708, column: 9)
!6401 = !DILocation(line: 708, column: 14, scope: !6400)
!6402 = !DILocation(line: 708, column: 21, scope: !6403)
!6403 = !DILexicalBlockFile(scope: !6404, file: !945, discriminator: 1)
!6404 = distinct !DILexicalBlock(scope: !6400, file: !945, line: 708, column: 9)
!6405 = !DILocation(line: 708, column: 23, scope: !6403)
!6406 = !DILocation(line: 708, column: 9, scope: !6403)
!6407 = !DILocation(line: 709, column: 22, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6409, file: !945, line: 709, column: 13)
!6409 = distinct !DILexicalBlock(scope: !6404, file: !945, line: 708, column: 33)
!6410 = !DILocation(line: 709, column: 24, scope: !6408)
!6411 = !DILocation(line: 709, column: 20, scope: !6408)
!6412 = !DILocation(line: 709, column: 18, scope: !6408)
!6413 = !DILocation(line: 709, column: 30, scope: !6414)
!6414 = !DILexicalBlockFile(scope: !6415, file: !945, discriminator: 1)
!6415 = distinct !DILexicalBlock(scope: !6408, file: !945, line: 709, column: 13)
!6416 = !DILocation(line: 709, column: 34, scope: !6414)
!6417 = !DILocation(line: 709, column: 36, scope: !6414)
!6418 = !DILocation(line: 709, column: 41, scope: !6414)
!6419 = !DILocation(line: 709, column: 32, scope: !6414)
!6420 = !DILocation(line: 709, column: 13, scope: !6414)
!6421 = !DILocation(line: 710, column: 51, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6415, file: !945, line: 710, column: 21)
!6423 = !DILocation(line: 710, column: 45, scope: !6422)
!6424 = !DILocation(line: 710, column: 21, scope: !6422)
!6425 = !DILocation(line: 710, column: 24, scope: !6422)
!6426 = !DILocation(line: 710, column: 55, scope: !6422)
!6427 = !DILocation(line: 710, column: 64, scope: !6428)
!6428 = !DILexicalBlockFile(scope: !6422, file: !945, discriminator: 1)
!6429 = !DILocation(line: 710, column: 66, scope: !6428)
!6430 = !DILocation(line: 710, column: 58, scope: !6428)
!6431 = !DILocation(line: 710, column: 61, scope: !6428)
!6432 = !DILocation(line: 710, column: 21, scope: !6428)
!6433 = !DILocalVariable(name: "ptr", scope: !6434, file: !945, line: 711, type: !6047)
!6434 = distinct !DILexicalBlock(scope: !6422, file: !945, line: 710, column: 73)
!6435 = !DILocation(line: 711, column: 36, scope: !6434)
!6436 = !DILocation(line: 711, column: 47, scope: !6434)
!6437 = !DILocation(line: 711, column: 49, scope: !6434)
!6438 = !DILocation(line: 711, column: 42, scope: !6434)
!6439 = !DILocation(line: 711, column: 69, scope: !6434)
!6440 = !DILocation(line: 711, column: 56, scope: !6434)
!6441 = !DILocation(line: 711, column: 54, scope: !6434)
!6442 = !DILocation(line: 712, column: 37, scope: !6434)
!6443 = !DILocation(line: 712, column: 42, scope: !6434)
!6444 = !DILocation(line: 712, column: 45, scope: !6434)
!6445 = !DILocation(line: 712, column: 50, scope: !6434)
!6446 = !DILocation(line: 712, column: 52, scope: !6434)
!6447 = !DILocation(line: 712, column: 48, scope: !6434)
!6448 = !DILocation(line: 713, column: 37, scope: !6434)
!6449 = !DILocation(line: 713, column: 70, scope: !6434)
!6450 = !DILocation(line: 713, column: 73, scope: !6434)
!6451 = !DILocation(line: 713, column: 80, scope: !6434)
!6452 = !DILocation(line: 713, column: 49, scope: !6434)
!6453 = !DILocation(line: 713, column: 86, scope: !6434)
!6454 = !DILocation(line: 712, column: 21, scope: !6434)
!6455 = !DILocation(line: 714, column: 17, scope: !6434)
!6456 = !DILocation(line: 710, column: 70, scope: !6457)
!6457 = !DILexicalBlockFile(scope: !6422, file: !945, discriminator: 2)
!6458 = !DILocation(line: 709, column: 47, scope: !6459)
!6459 = !DILexicalBlockFile(scope: !6415, file: !945, discriminator: 2)
!6460 = !DILocation(line: 709, column: 13, scope: !6459)
!6461 = distinct !{!6461, !6462}
!6462 = !DILocation(line: 709, column: 13, scope: !6409)
!6463 = !DILocation(line: 715, column: 9, scope: !6409)
!6464 = !DILocation(line: 708, column: 29, scope: !6465)
!6465 = !DILexicalBlockFile(scope: !6404, file: !945, discriminator: 2)
!6466 = !DILocation(line: 708, column: 9, scope: !6465)
!6467 = distinct !{!6467, !6468}
!6468 = !DILocation(line: 708, column: 9, scope: !6377)
!6469 = !DILocation(line: 716, column: 5, scope: !6377)
!6470 = !DILocation(line: 717, column: 1, scope: !6023)
!6471 = distinct !DISubprogram(name: "skip_bits_long", scope: !1684, file: !1684, line: 293, type: !4123, isLocal: true, isDefinition: true, scopeLine: 294, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!6472 = !DILocalVariable(name: "a", arg: 1, scope: !6473, file: !6474, line: 127, type: !899)
!6473 = distinct !DISubprogram(name: "av_clip_c", scope: !6474, file: !6474, line: 127, type: !6475, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!6474 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!6475 = !DISubroutineType(types: !6476)
!6476 = !{!899, !899, !899, !899}
!6477 = !DILocation(line: 127, column: 87, scope: !6473, inlinedAt: !6478)
!6478 = distinct !DILocation(line: 301, column: 17, scope: !6471)
!6479 = !DILocalVariable(name: "amin", arg: 2, scope: !6473, file: !6474, line: 127, type: !899)
!6480 = !DILocation(line: 127, column: 94, scope: !6473, inlinedAt: !6478)
!6481 = !DILocalVariable(name: "amax", arg: 3, scope: !6473, file: !6474, line: 127, type: !899)
!6482 = !DILocation(line: 127, column: 104, scope: !6473, inlinedAt: !6478)
!6483 = !DILocalVariable(name: "s", arg: 1, scope: !6471, file: !1684, line: 293, type: !1682)
!6484 = !DILocation(line: 293, column: 50, scope: !6471)
!6485 = !DILocalVariable(name: "n", arg: 2, scope: !6471, file: !1684, line: 293, type: !899)
!6486 = !DILocation(line: 293, column: 57, scope: !6471)
!6487 = !DILocation(line: 301, column: 27, scope: !6471)
!6488 = !DILocation(line: 301, column: 31, scope: !6471)
!6489 = !DILocation(line: 301, column: 34, scope: !6471)
!6490 = !DILocation(line: 301, column: 30, scope: !6471)
!6491 = !DILocation(line: 301, column: 41, scope: !6471)
!6492 = !DILocation(line: 301, column: 44, scope: !6471)
!6493 = !DILocation(line: 301, column: 65, scope: !6471)
!6494 = !DILocation(line: 301, column: 68, scope: !6471)
!6495 = !DILocation(line: 301, column: 63, scope: !6471)
!6496 = !DILocation(line: 301, column: 17, scope: !6471)
!6497 = !DILocation(line: 132, column: 9, scope: !6498, inlinedAt: !6478)
!6498 = distinct !DILexicalBlock(scope: !6473, file: !6474, line: 132, column: 9)
!6499 = !DILocation(line: 132, column: 13, scope: !6498, inlinedAt: !6478)
!6500 = !DILocation(line: 132, column: 11, scope: !6498, inlinedAt: !6478)
!6501 = !DILocation(line: 132, column: 9, scope: !6473, inlinedAt: !6478)
!6502 = !DILocation(line: 132, column: 26, scope: !6503, inlinedAt: !6478)
!6503 = !DILexicalBlockFile(scope: !6498, file: !6474, discriminator: 1)
!6504 = !DILocation(line: 132, column: 19, scope: !6503, inlinedAt: !6478)
!6505 = !DILocation(line: 133, column: 14, scope: !6506, inlinedAt: !6478)
!6506 = distinct !DILexicalBlock(scope: !6498, file: !6474, line: 133, column: 14)
!6507 = !DILocation(line: 133, column: 18, scope: !6506, inlinedAt: !6478)
!6508 = !DILocation(line: 133, column: 16, scope: !6506, inlinedAt: !6478)
!6509 = !DILocation(line: 133, column: 14, scope: !6498, inlinedAt: !6478)
!6510 = !DILocation(line: 133, column: 31, scope: !6511, inlinedAt: !6478)
!6511 = !DILexicalBlockFile(scope: !6506, file: !6474, discriminator: 1)
!6512 = !DILocation(line: 133, column: 24, scope: !6511, inlinedAt: !6478)
!6513 = !DILocation(line: 134, column: 17, scope: !6506, inlinedAt: !6478)
!6514 = !DILocation(line: 134, column: 10, scope: !6506, inlinedAt: !6478)
!6515 = !DILocation(line: 135, column: 1, scope: !6473, inlinedAt: !6478)
!6516 = !DILocation(line: 301, column: 5, scope: !6471)
!6517 = !DILocation(line: 301, column: 8, scope: !6471)
!6518 = !DILocation(line: 301, column: 14, scope: !6471)
!6519 = !DILocation(line: 304, column: 1, scope: !6471)
!6520 = distinct !DISubprogram(name: "skip_bits1", scope: !1684, file: !1684, line: 523, type: !6521, isLocal: true, isDefinition: true, scopeLine: 524, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!6521 = !DISubroutineType(types: !6522)
!6522 = !{null, !1682}
!6523 = !DILocalVariable(name: "s", arg: 1, scope: !6520, file: !1684, line: 523, type: !1682)
!6524 = !DILocation(line: 523, column: 46, scope: !6520)
!6525 = !DILocation(line: 525, column: 15, scope: !6520)
!6526 = !DILocation(line: 525, column: 5, scope: !6520)
!6527 = !DILocation(line: 526, column: 1, scope: !6520)
!6528 = distinct !DISubprogram(name: "free_picture", scope: !945, file: !945, line: 1338, type: !6529, isLocal: true, isDefinition: true, scopeLine: 1339, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!6529 = !DISubroutineType(types: !6530)
!6530 = !{null, !1036, !1909}
!6531 = !DILocalVariable(name: "avctx", arg: 1, scope: !6528, file: !945, line: 1338, type: !1036)
!6532 = !DILocation(line: 1338, column: 42, scope: !6528)
!6533 = !DILocalVariable(name: "pic", arg: 2, scope: !6528, file: !945, line: 1338, type: !1909)
!6534 = !DILocation(line: 1338, column: 60, scope: !6528)
!6535 = !DILocalVariable(name: "i", scope: !6528, file: !945, line: 1340, type: !899)
!6536 = !DILocation(line: 1340, column: 9, scope: !6528)
!6537 = !DILocation(line: 1341, column: 12, scope: !6538)
!6538 = distinct !DILexicalBlock(scope: !6528, file: !945, line: 1341, column: 5)
!6539 = !DILocation(line: 1341, column: 10, scope: !6538)
!6540 = !DILocation(line: 1341, column: 17, scope: !6541)
!6541 = !DILexicalBlockFile(scope: !6542, file: !945, discriminator: 1)
!6542 = distinct !DILexicalBlock(scope: !6538, file: !945, line: 1341, column: 5)
!6543 = !DILocation(line: 1341, column: 19, scope: !6541)
!6544 = !DILocation(line: 1341, column: 5, scope: !6541)
!6545 = !DILocation(line: 1342, column: 46, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6542, file: !945, line: 1341, column: 29)
!6547 = !DILocation(line: 1342, column: 26, scope: !6546)
!6548 = !DILocation(line: 1342, column: 31, scope: !6546)
!6549 = !DILocation(line: 1342, column: 9, scope: !6546)
!6550 = !DILocation(line: 1343, column: 45, scope: !6546)
!6551 = !DILocation(line: 1343, column: 26, scope: !6546)
!6552 = !DILocation(line: 1343, column: 31, scope: !6546)
!6553 = !DILocation(line: 1343, column: 9, scope: !6546)
!6554 = !DILocation(line: 1344, column: 5, scope: !6546)
!6555 = !DILocation(line: 1341, column: 25, scope: !6556)
!6556 = !DILexicalBlockFile(scope: !6542, file: !945, discriminator: 2)
!6557 = !DILocation(line: 1341, column: 5, scope: !6556)
!6558 = distinct !{!6558, !6559}
!6559 = !DILocation(line: 1341, column: 5, scope: !6528)
!6560 = !DILocation(line: 1345, column: 22, scope: !6528)
!6561 = !DILocation(line: 1345, column: 27, scope: !6528)
!6562 = !DILocation(line: 1345, column: 5, scope: !6528)
!6563 = !DILocation(line: 1347, column: 20, scope: !6528)
!6564 = !DILocation(line: 1347, column: 25, scope: !6528)
!6565 = !DILocation(line: 1347, column: 5, scope: !6528)
!6566 = !DILocation(line: 1348, column: 1, scope: !6528)
!6567 = distinct !DISubprogram(name: "svq3_mc_dir_part", scope: !945, file: !945, line: 429, type: !6568, isLocal: true, isDefinition: true, scopeLine: 433, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!6568 = !DISubroutineType(types: !6569)
!6569 = !{null, !1735, !899, !899, !899, !899, !899, !899, !899, !899, !899, !899}
!6570 = !DILocation(line: 127, column: 87, scope: !6473, inlinedAt: !6571)
!6571 = distinct !DILocation(line: 448, column: 14, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6573, file: !945, line: 445, column: 53)
!6573 = distinct !DILexicalBlock(scope: !6567, file: !945, line: 444, column: 9)
!6574 = !DILocation(line: 127, column: 94, scope: !6473, inlinedAt: !6571)
!6575 = !DILocation(line: 127, column: 104, scope: !6473, inlinedAt: !6571)
!6576 = !DILocation(line: 127, column: 87, scope: !6473, inlinedAt: !6577)
!6577 = distinct !DILocation(line: 447, column: 14, scope: !6572)
!6578 = !DILocation(line: 127, column: 94, scope: !6473, inlinedAt: !6577)
!6579 = !DILocation(line: 127, column: 104, scope: !6473, inlinedAt: !6577)
!6580 = !DILocalVariable(name: "s", arg: 1, scope: !6567, file: !945, line: 429, type: !1735)
!6581 = !DILocation(line: 429, column: 50, scope: !6567)
!6582 = !DILocalVariable(name: "x", arg: 2, scope: !6567, file: !945, line: 430, type: !899)
!6583 = !DILocation(line: 430, column: 41, scope: !6567)
!6584 = !DILocalVariable(name: "y", arg: 3, scope: !6567, file: !945, line: 430, type: !899)
!6585 = !DILocation(line: 430, column: 48, scope: !6567)
!6586 = !DILocalVariable(name: "width", arg: 4, scope: !6567, file: !945, line: 430, type: !899)
!6587 = !DILocation(line: 430, column: 55, scope: !6567)
!6588 = !DILocalVariable(name: "height", arg: 5, scope: !6567, file: !945, line: 430, type: !899)
!6589 = !DILocation(line: 430, column: 66, scope: !6567)
!6590 = !DILocalVariable(name: "mx", arg: 6, scope: !6567, file: !945, line: 431, type: !899)
!6591 = !DILocation(line: 431, column: 41, scope: !6567)
!6592 = !DILocalVariable(name: "my", arg: 7, scope: !6567, file: !945, line: 431, type: !899)
!6593 = !DILocation(line: 431, column: 49, scope: !6567)
!6594 = !DILocalVariable(name: "dxy", arg: 8, scope: !6567, file: !945, line: 431, type: !899)
!6595 = !DILocation(line: 431, column: 57, scope: !6567)
!6596 = !DILocalVariable(name: "thirdpel", arg: 9, scope: !6567, file: !945, line: 432, type: !899)
!6597 = !DILocation(line: 432, column: 41, scope: !6567)
!6598 = !DILocalVariable(name: "dir", arg: 10, scope: !6567, file: !945, line: 432, type: !899)
!6599 = !DILocation(line: 432, column: 55, scope: !6567)
!6600 = !DILocalVariable(name: "avg", arg: 11, scope: !6567, file: !945, line: 432, type: !899)
!6601 = !DILocation(line: 432, column: 64, scope: !6567)
!6602 = !DILocalVariable(name: "pic", scope: !6567, file: !945, line: 434, type: !6603)
!6603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6604, size: 64, align: 64)
!6604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1910)
!6605 = !DILocation(line: 434, column: 22, scope: !6567)
!6606 = !DILocation(line: 434, column: 29, scope: !6567)
!6607 = !DILocation(line: 434, column: 33, scope: !6567)
!6608 = !DILocation(line: 434, column: 28, scope: !6567)
!6609 = !DILocation(line: 434, column: 41, scope: !6610)
!6610 = !DILexicalBlockFile(scope: !6567, file: !945, discriminator: 1)
!6611 = !DILocation(line: 434, column: 44, scope: !6610)
!6612 = !DILocation(line: 434, column: 28, scope: !6610)
!6613 = !DILocation(line: 434, column: 55, scope: !6614)
!6614 = !DILexicalBlockFile(scope: !6567, file: !945, discriminator: 2)
!6615 = !DILocation(line: 434, column: 58, scope: !6614)
!6616 = !DILocation(line: 434, column: 28, scope: !6614)
!6617 = !DILocation(line: 434, column: 28, scope: !6618)
!6618 = !DILexicalBlockFile(scope: !6567, file: !945, discriminator: 3)
!6619 = !DILocation(line: 434, column: 22, scope: !6618)
!6620 = !DILocalVariable(name: "src", scope: !6567, file: !945, line: 435, type: !928)
!6621 = !DILocation(line: 435, column: 14, scope: !6567)
!6622 = !DILocalVariable(name: "dest", scope: !6567, file: !945, line: 435, type: !928)
!6623 = !DILocation(line: 435, column: 20, scope: !6567)
!6624 = !DILocalVariable(name: "i", scope: !6567, file: !945, line: 436, type: !899)
!6625 = !DILocation(line: 436, column: 9, scope: !6567)
!6626 = !DILocalVariable(name: "emu", scope: !6567, file: !945, line: 436, type: !899)
!6627 = !DILocation(line: 436, column: 12, scope: !6567)
!6628 = !DILocalVariable(name: "blocksize", scope: !6567, file: !945, line: 437, type: !899)
!6629 = !DILocation(line: 437, column: 9, scope: !6567)
!6630 = !DILocation(line: 437, column: 26, scope: !6567)
!6631 = !DILocation(line: 437, column: 32, scope: !6567)
!6632 = !DILocation(line: 437, column: 23, scope: !6567)
!6633 = !DILocalVariable(name: "linesize", scope: !6567, file: !945, line: 438, type: !899)
!6634 = !DILocation(line: 438, column: 9, scope: !6567)
!6635 = !DILocation(line: 438, column: 20, scope: !6567)
!6636 = !DILocation(line: 438, column: 23, scope: !6567)
!6637 = !DILocation(line: 438, column: 32, scope: !6567)
!6638 = !DILocation(line: 438, column: 35, scope: !6567)
!6639 = !DILocalVariable(name: "uvlinesize", scope: !6567, file: !945, line: 439, type: !899)
!6640 = !DILocation(line: 439, column: 9, scope: !6567)
!6641 = !DILocation(line: 439, column: 22, scope: !6567)
!6642 = !DILocation(line: 439, column: 25, scope: !6567)
!6643 = !DILocation(line: 439, column: 34, scope: !6567)
!6644 = !DILocation(line: 439, column: 37, scope: !6567)
!6645 = !DILocation(line: 441, column: 11, scope: !6567)
!6646 = !DILocation(line: 441, column: 8, scope: !6567)
!6647 = !DILocation(line: 442, column: 11, scope: !6567)
!6648 = !DILocation(line: 442, column: 8, scope: !6567)
!6649 = !DILocation(line: 444, column: 9, scope: !6573)
!6650 = !DILocation(line: 444, column: 12, scope: !6573)
!6651 = !DILocation(line: 444, column: 16, scope: !6573)
!6652 = !DILocation(line: 444, column: 19, scope: !6653)
!6653 = !DILexicalBlockFile(scope: !6573, file: !945, discriminator: 1)
!6654 = !DILocation(line: 444, column: 25, scope: !6653)
!6655 = !DILocation(line: 444, column: 28, scope: !6653)
!6656 = !DILocation(line: 444, column: 41, scope: !6653)
!6657 = !DILocation(line: 444, column: 39, scope: !6653)
!6658 = !DILocation(line: 444, column: 47, scope: !6653)
!6659 = !DILocation(line: 444, column: 22, scope: !6653)
!6660 = !DILocation(line: 444, column: 51, scope: !6653)
!6661 = !DILocation(line: 445, column: 9, scope: !6573)
!6662 = !DILocation(line: 445, column: 12, scope: !6573)
!6663 = !DILocation(line: 445, column: 16, scope: !6573)
!6664 = !DILocation(line: 445, column: 19, scope: !6653)
!6665 = !DILocation(line: 445, column: 25, scope: !6653)
!6666 = !DILocation(line: 445, column: 28, scope: !6653)
!6667 = !DILocation(line: 445, column: 41, scope: !6653)
!6668 = !DILocation(line: 445, column: 39, scope: !6653)
!6669 = !DILocation(line: 445, column: 48, scope: !6653)
!6670 = !DILocation(line: 445, column: 22, scope: !6653)
!6671 = !DILocation(line: 444, column: 9, scope: !6614)
!6672 = !DILocation(line: 446, column: 13, scope: !6572)
!6673 = !DILocation(line: 447, column: 24, scope: !6572)
!6674 = !DILocation(line: 447, column: 33, scope: !6572)
!6675 = !DILocation(line: 447, column: 36, scope: !6572)
!6676 = !DILocation(line: 447, column: 49, scope: !6572)
!6677 = !DILocation(line: 447, column: 47, scope: !6572)
!6678 = !DILocation(line: 447, column: 55, scope: !6572)
!6679 = !DILocation(line: 447, column: 14, scope: !6572)
!6680 = !DILocation(line: 132, column: 9, scope: !6498, inlinedAt: !6577)
!6681 = !DILocation(line: 132, column: 13, scope: !6498, inlinedAt: !6577)
!6682 = !DILocation(line: 132, column: 11, scope: !6498, inlinedAt: !6577)
!6683 = !DILocation(line: 132, column: 9, scope: !6473, inlinedAt: !6577)
!6684 = !DILocation(line: 132, column: 26, scope: !6503, inlinedAt: !6577)
!6685 = !DILocation(line: 132, column: 19, scope: !6503, inlinedAt: !6577)
!6686 = !DILocation(line: 133, column: 14, scope: !6506, inlinedAt: !6577)
!6687 = !DILocation(line: 133, column: 18, scope: !6506, inlinedAt: !6577)
!6688 = !DILocation(line: 133, column: 16, scope: !6506, inlinedAt: !6577)
!6689 = !DILocation(line: 133, column: 14, scope: !6498, inlinedAt: !6577)
!6690 = !DILocation(line: 133, column: 31, scope: !6511, inlinedAt: !6577)
!6691 = !DILocation(line: 133, column: 24, scope: !6511, inlinedAt: !6577)
!6692 = !DILocation(line: 134, column: 17, scope: !6506, inlinedAt: !6577)
!6693 = !DILocation(line: 134, column: 10, scope: !6506, inlinedAt: !6577)
!6694 = !DILocation(line: 135, column: 1, scope: !6473, inlinedAt: !6577)
!6695 = !DILocation(line: 447, column: 12, scope: !6572)
!6696 = !DILocation(line: 448, column: 24, scope: !6572)
!6697 = !DILocation(line: 448, column: 33, scope: !6572)
!6698 = !DILocation(line: 448, column: 36, scope: !6572)
!6699 = !DILocation(line: 448, column: 49, scope: !6572)
!6700 = !DILocation(line: 448, column: 47, scope: !6572)
!6701 = !DILocation(line: 448, column: 56, scope: !6572)
!6702 = !DILocation(line: 448, column: 14, scope: !6572)
!6703 = !DILocation(line: 132, column: 9, scope: !6498, inlinedAt: !6571)
!6704 = !DILocation(line: 132, column: 13, scope: !6498, inlinedAt: !6571)
!6705 = !DILocation(line: 132, column: 11, scope: !6498, inlinedAt: !6571)
!6706 = !DILocation(line: 132, column: 9, scope: !6473, inlinedAt: !6571)
!6707 = !DILocation(line: 132, column: 26, scope: !6503, inlinedAt: !6571)
!6708 = !DILocation(line: 132, column: 19, scope: !6503, inlinedAt: !6571)
!6709 = !DILocation(line: 133, column: 14, scope: !6506, inlinedAt: !6571)
!6710 = !DILocation(line: 133, column: 18, scope: !6506, inlinedAt: !6571)
!6711 = !DILocation(line: 133, column: 16, scope: !6506, inlinedAt: !6571)
!6712 = !DILocation(line: 133, column: 14, scope: !6498, inlinedAt: !6571)
!6713 = !DILocation(line: 133, column: 31, scope: !6511, inlinedAt: !6571)
!6714 = !DILocation(line: 133, column: 24, scope: !6511, inlinedAt: !6571)
!6715 = !DILocation(line: 134, column: 17, scope: !6506, inlinedAt: !6571)
!6716 = !DILocation(line: 134, column: 10, scope: !6506, inlinedAt: !6571)
!6717 = !DILocation(line: 135, column: 1, scope: !6473, inlinedAt: !6571)
!6718 = !DILocation(line: 448, column: 12, scope: !6572)
!6719 = !DILocation(line: 449, column: 5, scope: !6572)
!6720 = !DILocation(line: 452, column: 12, scope: !6567)
!6721 = !DILocation(line: 452, column: 15, scope: !6567)
!6722 = !DILocation(line: 452, column: 24, scope: !6567)
!6723 = !DILocation(line: 452, column: 27, scope: !6567)
!6724 = !DILocation(line: 452, column: 37, scope: !6567)
!6725 = !DILocation(line: 452, column: 35, scope: !6567)
!6726 = !DILocation(line: 452, column: 41, scope: !6567)
!6727 = !DILocation(line: 452, column: 45, scope: !6567)
!6728 = !DILocation(line: 452, column: 43, scope: !6567)
!6729 = !DILocation(line: 452, column: 39, scope: !6567)
!6730 = !DILocation(line: 452, column: 10, scope: !6567)
!6731 = !DILocation(line: 453, column: 11, scope: !6567)
!6732 = !DILocation(line: 453, column: 16, scope: !6567)
!6733 = !DILocation(line: 453, column: 19, scope: !6567)
!6734 = !DILocation(line: 453, column: 29, scope: !6567)
!6735 = !DILocation(line: 453, column: 27, scope: !6567)
!6736 = !DILocation(line: 453, column: 34, scope: !6567)
!6737 = !DILocation(line: 453, column: 39, scope: !6567)
!6738 = !DILocation(line: 453, column: 37, scope: !6567)
!6739 = !DILocation(line: 453, column: 32, scope: !6567)
!6740 = !DILocation(line: 453, column: 9, scope: !6567)
!6741 = !DILocation(line: 455, column: 9, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6567, file: !945, line: 455, column: 9)
!6743 = !DILocation(line: 455, column: 9, scope: !6567)
!6744 = !DILocation(line: 456, column: 9, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6742, file: !945, line: 455, column: 14)
!6746 = !DILocation(line: 456, column: 12, scope: !6745)
!6747 = !DILocation(line: 456, column: 17, scope: !6745)
!6748 = !DILocation(line: 456, column: 34, scope: !6745)
!6749 = !DILocation(line: 456, column: 37, scope: !6745)
!6750 = !DILocation(line: 456, column: 54, scope: !6745)
!6751 = !DILocation(line: 457, column: 34, scope: !6745)
!6752 = !DILocation(line: 457, column: 44, scope: !6745)
!6753 = !DILocation(line: 458, column: 34, scope: !6745)
!6754 = !DILocation(line: 458, column: 40, scope: !6745)
!6755 = !DILocation(line: 458, column: 45, scope: !6745)
!6756 = !DILocation(line: 458, column: 52, scope: !6745)
!6757 = !DILocation(line: 459, column: 34, scope: !6745)
!6758 = !DILocation(line: 459, column: 38, scope: !6745)
!6759 = !DILocation(line: 459, column: 42, scope: !6745)
!6760 = !DILocation(line: 459, column: 45, scope: !6745)
!6761 = !DILocation(line: 459, column: 57, scope: !6745)
!6762 = !DILocation(line: 459, column: 60, scope: !6745)
!6763 = !DILocation(line: 460, column: 15, scope: !6745)
!6764 = !DILocation(line: 460, column: 18, scope: !6745)
!6765 = !DILocation(line: 460, column: 13, scope: !6745)
!6766 = !DILocation(line: 461, column: 5, scope: !6745)
!6767 = !DILocation(line: 462, column: 9, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6567, file: !945, line: 462, column: 9)
!6769 = !DILocation(line: 462, column: 9, scope: !6567)
!6770 = !DILocation(line: 464, column: 45, scope: !6768)
!6771 = !DILocation(line: 463, column: 9, scope: !6768)
!6772 = !DILocation(line: 463, column: 10, scope: !6768)
!6773 = !DILocation(line: 463, column: 16, scope: !6774)
!6774 = !DILexicalBlockFile(scope: !6768, file: !945, discriminator: 1)
!6775 = !DILocation(line: 463, column: 19, scope: !6774)
!6776 = !DILocation(line: 463, column: 24, scope: !6774)
!6777 = !DILocation(line: 463, column: 10, scope: !6774)
!6778 = !DILocation(line: 464, column: 16, scope: !6774)
!6779 = !DILocation(line: 464, column: 19, scope: !6774)
!6780 = !DILocation(line: 464, column: 24, scope: !6774)
!6781 = !DILocation(line: 463, column: 10, scope: !6782)
!6782 = !DILexicalBlockFile(scope: !6768, file: !945, discriminator: 2)
!6783 = !DILocation(line: 463, column: 10, scope: !6784)
!6784 = !DILexicalBlockFile(scope: !6768, file: !945, discriminator: 3)
!6785 = !DILocation(line: 463, column: 9, scope: !6784)
!6786 = !DILocation(line: 464, column: 50, scope: !6782)
!6787 = !DILocation(line: 464, column: 56, scope: !6782)
!6788 = !DILocation(line: 464, column: 61, scope: !6782)
!6789 = !DILocation(line: 465, column: 50, scope: !6768)
!6790 = !DILocation(line: 465, column: 57, scope: !6768)
!6791 = !DILocation(line: 468, column: 51, scope: !6768)
!6792 = !DILocation(line: 467, column: 9, scope: !6768)
!6793 = !DILocation(line: 468, column: 40, scope: !6768)
!6794 = !DILocation(line: 467, column: 10, scope: !6768)
!6795 = !DILocation(line: 467, column: 16, scope: !6774)
!6796 = !DILocation(line: 467, column: 19, scope: !6774)
!6797 = !DILocation(line: 467, column: 24, scope: !6774)
!6798 = !DILocation(line: 467, column: 10, scope: !6774)
!6799 = !DILocation(line: 468, column: 16, scope: !6774)
!6800 = !DILocation(line: 468, column: 19, scope: !6774)
!6801 = !DILocation(line: 468, column: 24, scope: !6774)
!6802 = !DILocation(line: 467, column: 10, scope: !6782)
!6803 = !DILocation(line: 467, column: 10, scope: !6784)
!6804 = !DILocation(line: 467, column: 9, scope: !6784)
!6805 = !DILocation(line: 468, column: 56, scope: !6782)
!6806 = !DILocation(line: 468, column: 62, scope: !6782)
!6807 = !DILocation(line: 468, column: 67, scope: !6782)
!6808 = !DILocation(line: 469, column: 56, scope: !6768)
!6809 = !DILocation(line: 471, column: 11, scope: !6810)
!6810 = distinct !DILexicalBlock(scope: !6567, file: !945, line: 471, column: 9)
!6811 = !DILocation(line: 471, column: 14, scope: !6810)
!6812 = !DILocation(line: 471, column: 21, scope: !6810)
!6813 = !DILocation(line: 471, column: 27, scope: !6810)
!6814 = !DILocation(line: 471, column: 9, scope: !6567)
!6815 = !DILocation(line: 472, column: 14, scope: !6816)
!6816 = distinct !DILexicalBlock(scope: !6810, file: !945, line: 471, column: 41)
!6817 = !DILocation(line: 472, column: 20, scope: !6816)
!6818 = !DILocation(line: 472, column: 31, scope: !6816)
!6819 = !DILocation(line: 472, column: 23, scope: !6816)
!6820 = !DILocation(line: 472, column: 17, scope: !6816)
!6821 = !DILocation(line: 472, column: 34, scope: !6816)
!6822 = !DILocation(line: 472, column: 12, scope: !6816)
!6823 = !DILocation(line: 473, column: 14, scope: !6816)
!6824 = !DILocation(line: 473, column: 20, scope: !6816)
!6825 = !DILocation(line: 473, column: 31, scope: !6816)
!6826 = !DILocation(line: 473, column: 23, scope: !6816)
!6827 = !DILocation(line: 473, column: 17, scope: !6816)
!6828 = !DILocation(line: 473, column: 34, scope: !6816)
!6829 = !DILocation(line: 473, column: 12, scope: !6816)
!6830 = !DILocation(line: 474, column: 17, scope: !6816)
!6831 = !DILocation(line: 474, column: 23, scope: !6816)
!6832 = !DILocation(line: 474, column: 15, scope: !6816)
!6833 = !DILocation(line: 475, column: 18, scope: !6816)
!6834 = !DILocation(line: 475, column: 25, scope: !6816)
!6835 = !DILocation(line: 475, column: 16, scope: !6816)
!6836 = !DILocation(line: 476, column: 18, scope: !6816)
!6837 = !DILocation(line: 478, column: 16, scope: !6838)
!6838 = distinct !DILexicalBlock(scope: !6816, file: !945, line: 478, column: 9)
!6839 = !DILocation(line: 478, column: 14, scope: !6838)
!6840 = !DILocation(line: 478, column: 21, scope: !6841)
!6841 = !DILexicalBlockFile(scope: !6842, file: !945, discriminator: 1)
!6842 = distinct !DILexicalBlock(scope: !6838, file: !945, line: 478, column: 9)
!6843 = !DILocation(line: 478, column: 23, scope: !6841)
!6844 = !DILocation(line: 478, column: 9, scope: !6841)
!6845 = !DILocation(line: 479, column: 40, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6842, file: !945, line: 478, column: 33)
!6847 = !DILocation(line: 479, column: 20, scope: !6846)
!6848 = !DILocation(line: 479, column: 23, scope: !6846)
!6849 = !DILocation(line: 479, column: 32, scope: !6846)
!6850 = !DILocation(line: 479, column: 35, scope: !6846)
!6851 = !DILocation(line: 479, column: 46, scope: !6846)
!6852 = !DILocation(line: 479, column: 48, scope: !6846)
!6853 = !DILocation(line: 479, column: 43, scope: !6846)
!6854 = !DILocation(line: 479, column: 57, scope: !6846)
!6855 = !DILocation(line: 479, column: 59, scope: !6846)
!6856 = !DILocation(line: 479, column: 67, scope: !6846)
!6857 = !DILocation(line: 479, column: 65, scope: !6846)
!6858 = !DILocation(line: 479, column: 54, scope: !6846)
!6859 = !DILocation(line: 479, column: 18, scope: !6846)
!6860 = !DILocation(line: 480, column: 32, scope: !6846)
!6861 = !DILocation(line: 480, column: 19, scope: !6846)
!6862 = !DILocation(line: 480, column: 24, scope: !6846)
!6863 = !DILocation(line: 480, column: 27, scope: !6846)
!6864 = !DILocation(line: 480, column: 37, scope: !6846)
!6865 = !DILocation(line: 480, column: 35, scope: !6846)
!6866 = !DILocation(line: 480, column: 42, scope: !6846)
!6867 = !DILocation(line: 480, column: 47, scope: !6846)
!6868 = !DILocation(line: 480, column: 45, scope: !6846)
!6869 = !DILocation(line: 480, column: 40, scope: !6846)
!6870 = !DILocation(line: 480, column: 17, scope: !6846)
!6871 = !DILocation(line: 482, column: 17, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6846, file: !945, line: 482, column: 17)
!6873 = !DILocation(line: 482, column: 17, scope: !6846)
!6874 = !DILocation(line: 483, column: 17, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6872, file: !945, line: 482, column: 22)
!6876 = !DILocation(line: 483, column: 20, scope: !6875)
!6877 = !DILocation(line: 483, column: 25, scope: !6875)
!6878 = !DILocation(line: 483, column: 42, scope: !6875)
!6879 = !DILocation(line: 483, column: 45, scope: !6875)
!6880 = !DILocation(line: 483, column: 62, scope: !6875)
!6881 = !DILocation(line: 484, column: 42, scope: !6875)
!6882 = !DILocation(line: 484, column: 54, scope: !6875)
!6883 = !DILocation(line: 485, column: 42, scope: !6875)
!6884 = !DILocation(line: 485, column: 48, scope: !6875)
!6885 = !DILocation(line: 485, column: 53, scope: !6875)
!6886 = !DILocation(line: 485, column: 60, scope: !6875)
!6887 = !DILocation(line: 486, column: 42, scope: !6875)
!6888 = !DILocation(line: 486, column: 46, scope: !6875)
!6889 = !DILocation(line: 486, column: 51, scope: !6875)
!6890 = !DILocation(line: 486, column: 54, scope: !6875)
!6891 = !DILocation(line: 486, column: 65, scope: !6875)
!6892 = !DILocation(line: 487, column: 42, scope: !6875)
!6893 = !DILocation(line: 487, column: 45, scope: !6875)
!6894 = !DILocation(line: 487, column: 56, scope: !6875)
!6895 = !DILocation(line: 488, column: 23, scope: !6875)
!6896 = !DILocation(line: 488, column: 26, scope: !6875)
!6897 = !DILocation(line: 488, column: 21, scope: !6875)
!6898 = !DILocation(line: 489, column: 13, scope: !6875)
!6899 = !DILocation(line: 490, column: 17, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6846, file: !945, line: 490, column: 17)
!6901 = !DILocation(line: 490, column: 17, scope: !6846)
!6902 = !DILocation(line: 492, column: 53, scope: !6900)
!6903 = !DILocation(line: 491, column: 17, scope: !6900)
!6904 = !DILocation(line: 491, column: 18, scope: !6900)
!6905 = !DILocation(line: 491, column: 24, scope: !6906)
!6906 = !DILexicalBlockFile(scope: !6900, file: !945, discriminator: 1)
!6907 = !DILocation(line: 491, column: 27, scope: !6906)
!6908 = !DILocation(line: 491, column: 32, scope: !6906)
!6909 = !DILocation(line: 491, column: 18, scope: !6906)
!6910 = !DILocation(line: 492, column: 24, scope: !6906)
!6911 = !DILocation(line: 492, column: 27, scope: !6906)
!6912 = !DILocation(line: 492, column: 32, scope: !6906)
!6913 = !DILocation(line: 491, column: 18, scope: !6914)
!6914 = !DILexicalBlockFile(scope: !6900, file: !945, discriminator: 2)
!6915 = !DILocation(line: 491, column: 18, scope: !6916)
!6916 = !DILexicalBlockFile(scope: !6900, file: !945, discriminator: 3)
!6917 = !DILocation(line: 491, column: 17, scope: !6916)
!6918 = !DILocation(line: 492, column: 58, scope: !6914)
!6919 = !DILocation(line: 492, column: 64, scope: !6914)
!6920 = !DILocation(line: 493, column: 58, scope: !6900)
!6921 = !DILocation(line: 494, column: 58, scope: !6900)
!6922 = !DILocation(line: 494, column: 65, scope: !6900)
!6923 = !DILocation(line: 497, column: 59, scope: !6900)
!6924 = !DILocation(line: 496, column: 17, scope: !6900)
!6925 = !DILocation(line: 497, column: 48, scope: !6900)
!6926 = !DILocation(line: 496, column: 18, scope: !6900)
!6927 = !DILocation(line: 496, column: 24, scope: !6906)
!6928 = !DILocation(line: 496, column: 27, scope: !6906)
!6929 = !DILocation(line: 496, column: 32, scope: !6906)
!6930 = !DILocation(line: 496, column: 18, scope: !6906)
!6931 = !DILocation(line: 497, column: 24, scope: !6906)
!6932 = !DILocation(line: 497, column: 27, scope: !6906)
!6933 = !DILocation(line: 497, column: 32, scope: !6906)
!6934 = !DILocation(line: 496, column: 18, scope: !6914)
!6935 = !DILocation(line: 496, column: 18, scope: !6916)
!6936 = !DILocation(line: 496, column: 17, scope: !6916)
!6937 = !DILocation(line: 497, column: 64, scope: !6914)
!6938 = !DILocation(line: 497, column: 70, scope: !6914)
!6939 = !DILocation(line: 498, column: 64, scope: !6900)
!6940 = !DILocation(line: 499, column: 64, scope: !6900)
!6941 = !DILocation(line: 500, column: 9, scope: !6846)
!6942 = !DILocation(line: 478, column: 29, scope: !6943)
!6943 = !DILexicalBlockFile(scope: !6842, file: !945, discriminator: 2)
!6944 = !DILocation(line: 478, column: 9, scope: !6943)
!6945 = distinct !{!6945, !6946}
!6946 = !DILocation(line: 478, column: 9, scope: !6816)
!6947 = !DILocation(line: 501, column: 5, scope: !6816)
!6948 = !DILocation(line: 502, column: 1, scope: !6567)
!6949 = distinct !DISubprogram(name: "svq3_mc_dir", scope: !945, file: !945, line: 504, type: !6950, isLocal: true, isDefinition: true, scopeLine: 506, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!6950 = !DISubroutineType(types: !6951)
!6951 = !{!899, !1735, !899, !899, !899, !899}
!6952 = !DILocalVariable(name: "vp", arg: 1, scope: !6953, file: !6954, line: 41, type: !937)
!6953 = distinct !DISubprogram(name: "fill_rectangle", scope: !6954, file: !6954, line: 41, type: !6955, isLocal: true, isDefinition: true, scopeLine: 41, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!6954 = !DIFile(filename: "libavcodec/rectangle.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!6955 = !DISubroutineType(types: !6956)
!6956 = !{null, !937, !899, !899, !899, !896, !899}
!6957 = !DILocation(line: 41, column: 72, scope: !6953, inlinedAt: !6958)
!6958 = distinct !DILocation(line: 609, column: 13, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6960, file: !945, line: 515, column: 46)
!6960 = distinct !DILexicalBlock(scope: !6961, file: !945, line: 515, column: 9)
!6961 = distinct !DILexicalBlock(scope: !6962, file: !945, line: 515, column: 9)
!6962 = distinct !DILexicalBlock(scope: !6963, file: !945, line: 514, column: 5)
!6963 = distinct !DILexicalBlock(scope: !6949, file: !945, line: 514, column: 5)
!6964 = !DILocalVariable(name: "w", arg: 2, scope: !6953, file: !6954, line: 41, type: !899)
!6965 = !DILocation(line: 41, column: 80, scope: !6953, inlinedAt: !6958)
!6966 = !DILocalVariable(name: "h", arg: 3, scope: !6953, file: !6954, line: 41, type: !899)
!6967 = !DILocation(line: 41, column: 87, scope: !6953, inlinedAt: !6958)
!6968 = !DILocalVariable(name: "stride", arg: 4, scope: !6953, file: !6954, line: 41, type: !899)
!6969 = !DILocation(line: 41, column: 94, scope: !6953, inlinedAt: !6958)
!6970 = !DILocalVariable(name: "val", arg: 5, scope: !6953, file: !6954, line: 41, type: !896)
!6971 = !DILocation(line: 41, column: 111, scope: !6953, inlinedAt: !6958)
!6972 = !DILocalVariable(name: "size", arg: 6, scope: !6953, file: !6954, line: 41, type: !899)
!6973 = !DILocation(line: 41, column: 120, scope: !6953, inlinedAt: !6958)
!6974 = !DILocalVariable(name: "p", scope: !6953, file: !6954, line: 42, type: !928)
!6975 = !DILocation(line: 42, column: 14, scope: !6953, inlinedAt: !6958)
!6976 = !DILocalVariable(name: "v", scope: !6977, file: !6954, line: 52, type: !6979)
!6977 = distinct !DILexicalBlock(scope: !6978, file: !6954, line: 51, column: 13)
!6978 = distinct !DILexicalBlock(scope: !6953, file: !6954, line: 51, column: 8)
!6979 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !919)
!6980 = !DILocation(line: 52, column: 24, scope: !6977, inlinedAt: !6958)
!6981 = !DILocalVariable(name: "v", scope: !6982, file: !6954, line: 60, type: !1715)
!6982 = distinct !DILexicalBlock(scope: !6983, file: !6954, line: 59, column: 19)
!6983 = distinct !DILexicalBlock(scope: !6978, file: !6954, line: 59, column: 14)
!6984 = !DILocation(line: 60, column: 24, scope: !6982, inlinedAt: !6958)
!6985 = !DILocalVariable(name: "v", scope: !6986, file: !6954, line: 70, type: !977)
!6986 = distinct !DILexicalBlock(scope: !6987, file: !6954, line: 67, column: 19)
!6987 = distinct !DILexicalBlock(scope: !6983, file: !6954, line: 67, column: 14)
!6988 = !DILocation(line: 70, column: 24, scope: !6986, inlinedAt: !6958)
!6989 = !DILocalVariable(name: "v", scope: !6990, file: !6954, line: 78, type: !977)
!6990 = distinct !DILexicalBlock(scope: !6991, file: !6954, line: 77, column: 20)
!6991 = distinct !DILexicalBlock(scope: !6987, file: !6954, line: 77, column: 14)
!6992 = !DILocation(line: 78, column: 24, scope: !6990, inlinedAt: !6958)
!6993 = !DILocalVariable(name: "a", arg: 1, scope: !6994, file: !1664, line: 660, type: !898)
!6994 = distinct !DISubprogram(name: "pack16to32", scope: !1664, file: !1664, line: 660, type: !6995, isLocal: true, isDefinition: true, scopeLine: 661, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!6995 = !DISubroutineType(types: !6996)
!6996 = !{!896, !898, !898}
!6997 = !DILocation(line: 660, column: 75, scope: !6994, inlinedAt: !6998)
!6998 = distinct !DILocation(line: 611, column: 28, scope: !6959)
!6999 = !DILocalVariable(name: "b", arg: 2, scope: !6994, file: !1664, line: 660, type: !898)
!7000 = !DILocation(line: 660, column: 87, scope: !6994, inlinedAt: !6998)
!7001 = !DILocation(line: 660, column: 75, scope: !6994, inlinedAt: !7002)
!7002 = distinct !DILocation(line: 594, column: 30, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !7004, file: !945, line: 593, column: 28)
!7004 = distinct !DILexicalBlock(scope: !6959, file: !945, line: 593, column: 17)
!7005 = !DILocation(line: 660, column: 87, scope: !6994, inlinedAt: !7002)
!7006 = !DILocation(line: 127, column: 87, scope: !6473, inlinedAt: !7007)
!7007 = distinct !DILocation(line: 545, column: 18, scope: !6959)
!7008 = !DILocation(line: 127, column: 94, scope: !6473, inlinedAt: !7007)
!7009 = !DILocation(line: 127, column: 104, scope: !6473, inlinedAt: !7007)
!7010 = !DILocation(line: 127, column: 87, scope: !6473, inlinedAt: !7011)
!7011 = distinct !DILocation(line: 544, column: 18, scope: !6959)
!7012 = !DILocation(line: 127, column: 94, scope: !6473, inlinedAt: !7011)
!7013 = !DILocation(line: 127, column: 104, scope: !6473, inlinedAt: !7011)
!7014 = !DILocalVariable(name: "s", arg: 1, scope: !7015, file: !945, line: 359, type: !7018)
!7015 = distinct !DISubprogram(name: "svq3_fetch_diagonal_mv", scope: !945, file: !945, line: 359, type: !7016, isLocal: true, isDefinition: true, scopeLine: 361, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!7016 = !DISubroutineType(types: !7017)
!7017 = !{!899, !7018, !7020, !899, !899, !899}
!7018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7019, size: 64, align: 64)
!7019 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1736)
!7020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7021, size: 64, align: 64)
!7021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7022, size: 64, align: 64)
!7022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !907)
!7023 = !DILocation(line: 359, column: 43, scope: !7015, inlinedAt: !7024)
!7024 = distinct !DILocation(line: 400, column: 20, scope: !7025, inlinedAt: !7029)
!7025 = distinct !DISubprogram(name: "svq3_pred_motion", scope: !945, file: !945, line: 380, type: !7026, isLocal: true, isDefinition: true, scopeLine: 383, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!7026 = !DISubroutineType(types: !7027)
!7027 = !{null, !7018, !899, !899, !899, !899, !7028, !7028}
!7028 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1327)
!7029 = distinct !DILocation(line: 525, column: 17, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7031, file: !945, line: 524, column: 28)
!7031 = distinct !DILexicalBlock(scope: !6959, file: !945, line: 524, column: 17)
!7032 = !DILocalVariable(name: "C", arg: 2, scope: !7015, file: !945, line: 359, type: !7020)
!7033 = !DILocation(line: 359, column: 62, scope: !7015, inlinedAt: !7024)
!7034 = !DILocalVariable(name: "i", arg: 3, scope: !7015, file: !945, line: 360, type: !899)
!7035 = !DILocation(line: 360, column: 28, scope: !7015, inlinedAt: !7024)
!7036 = !DILocalVariable(name: "list", arg: 4, scope: !7015, file: !945, line: 360, type: !899)
!7037 = !DILocation(line: 360, column: 35, scope: !7015, inlinedAt: !7024)
!7038 = !DILocalVariable(name: "part_width", arg: 5, scope: !7015, file: !945, line: 360, type: !899)
!7039 = !DILocation(line: 360, column: 45, scope: !7015, inlinedAt: !7024)
!7040 = !DILocalVariable(name: "topright_ref", scope: !7015, file: !945, line: 362, type: !971)
!7041 = !DILocation(line: 362, column: 15, scope: !7015, inlinedAt: !7024)
!7042 = !DILocalVariable(name: "s", arg: 1, scope: !7025, file: !945, line: 380, type: !7018)
!7043 = !DILocation(line: 380, column: 87, scope: !7025, inlinedAt: !7029)
!7044 = !DILocalVariable(name: "n", arg: 2, scope: !7025, file: !945, line: 380, type: !899)
!7045 = !DILocation(line: 380, column: 94, scope: !7025, inlinedAt: !7029)
!7046 = !DILocalVariable(name: "part_width", arg: 3, scope: !7025, file: !945, line: 381, type: !899)
!7047 = !DILocation(line: 381, column: 51, scope: !7025, inlinedAt: !7029)
!7048 = !DILocalVariable(name: "list", arg: 4, scope: !7025, file: !945, line: 381, type: !899)
!7049 = !DILocation(line: 381, column: 67, scope: !7025, inlinedAt: !7029)
!7050 = !DILocalVariable(name: "ref", arg: 5, scope: !7025, file: !945, line: 382, type: !899)
!7051 = !DILocation(line: 382, column: 51, scope: !7025, inlinedAt: !7029)
!7052 = !DILocalVariable(name: "mx", arg: 6, scope: !7025, file: !945, line: 382, type: !7028)
!7053 = !DILocation(line: 382, column: 67, scope: !7025, inlinedAt: !7029)
!7054 = !DILocalVariable(name: "my", arg: 7, scope: !7025, file: !945, line: 382, type: !7028)
!7055 = !DILocation(line: 382, column: 82, scope: !7025, inlinedAt: !7029)
!7056 = !DILocalVariable(name: "index8", scope: !7025, file: !945, line: 384, type: !971)
!7057 = !DILocation(line: 384, column: 15, scope: !7025, inlinedAt: !7029)
!7058 = !DILocalVariable(name: "top_ref", scope: !7025, file: !945, line: 385, type: !971)
!7059 = !DILocation(line: 385, column: 15, scope: !7025, inlinedAt: !7029)
!7060 = !DILocalVariable(name: "left_ref", scope: !7025, file: !945, line: 386, type: !971)
!7061 = !DILocation(line: 386, column: 15, scope: !7025, inlinedAt: !7029)
!7062 = !DILocalVariable(name: "A", scope: !7025, file: !945, line: 387, type: !7063)
!7063 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7021)
!7064 = !DILocation(line: 387, column: 26, scope: !7025, inlinedAt: !7029)
!7065 = !DILocalVariable(name: "B", scope: !7025, file: !945, line: 388, type: !7063)
!7066 = !DILocation(line: 388, column: 26, scope: !7025, inlinedAt: !7029)
!7067 = !DILocalVariable(name: "C", scope: !7025, file: !945, line: 389, type: !7021)
!7068 = !DILocation(line: 389, column: 20, scope: !7025, inlinedAt: !7029)
!7069 = !DILocalVariable(name: "diagonal_ref", scope: !7025, file: !945, line: 390, type: !899)
!7070 = !DILocation(line: 390, column: 9, scope: !7025, inlinedAt: !7029)
!7071 = !DILocalVariable(name: "match_count", scope: !7025, file: !945, line: 390, type: !899)
!7072 = !DILocation(line: 390, column: 23, scope: !7025, inlinedAt: !7029)
!7073 = !DILocalVariable(name: "s", arg: 1, scope: !6949, file: !945, line: 504, type: !1735)
!7074 = !DILocation(line: 504, column: 44, scope: !6949)
!7075 = !DILocalVariable(name: "size", arg: 2, scope: !6949, file: !945, line: 504, type: !899)
!7076 = !DILocation(line: 504, column: 51, scope: !6949)
!7077 = !DILocalVariable(name: "mode", arg: 3, scope: !6949, file: !945, line: 504, type: !899)
!7078 = !DILocation(line: 504, column: 61, scope: !6949)
!7079 = !DILocalVariable(name: "dir", arg: 4, scope: !6949, file: !945, line: 505, type: !899)
!7080 = !DILocation(line: 505, column: 35, scope: !6949)
!7081 = !DILocalVariable(name: "avg", arg: 5, scope: !6949, file: !945, line: 505, type: !899)
!7082 = !DILocation(line: 505, column: 44, scope: !6949)
!7083 = !DILocalVariable(name: "i", scope: !6949, file: !945, line: 507, type: !899)
!7084 = !DILocation(line: 507, column: 9, scope: !6949)
!7085 = !DILocalVariable(name: "j", scope: !6949, file: !945, line: 507, type: !899)
!7086 = !DILocation(line: 507, column: 12, scope: !6949)
!7087 = !DILocalVariable(name: "k", scope: !6949, file: !945, line: 507, type: !899)
!7088 = !DILocation(line: 507, column: 15, scope: !6949)
!7089 = !DILocalVariable(name: "mx", scope: !6949, file: !945, line: 507, type: !899)
!7090 = !DILocation(line: 507, column: 18, scope: !6949)
!7091 = !DILocalVariable(name: "my", scope: !6949, file: !945, line: 507, type: !899)
!7092 = !DILocation(line: 507, column: 22, scope: !6949)
!7093 = !DILocalVariable(name: "dx", scope: !6949, file: !945, line: 507, type: !899)
!7094 = !DILocation(line: 507, column: 26, scope: !6949)
!7095 = !DILocalVariable(name: "dy", scope: !6949, file: !945, line: 507, type: !899)
!7096 = !DILocation(line: 507, column: 30, scope: !6949)
!7097 = !DILocalVariable(name: "x", scope: !6949, file: !945, line: 507, type: !899)
!7098 = !DILocation(line: 507, column: 34, scope: !6949)
!7099 = !DILocalVariable(name: "y", scope: !6949, file: !945, line: 507, type: !899)
!7100 = !DILocation(line: 507, column: 37, scope: !6949)
!7101 = !DILocalVariable(name: "part_width", scope: !6949, file: !945, line: 508, type: !971)
!7102 = !DILocation(line: 508, column: 15, scope: !6949)
!7103 = !DILocation(line: 508, column: 30, scope: !6949)
!7104 = !DILocation(line: 508, column: 35, scope: !6949)
!7105 = !DILocation(line: 508, column: 40, scope: !6949)
!7106 = !DILocation(line: 508, column: 28, scope: !6949)
!7107 = !DILocation(line: 508, column: 28, scope: !7108)
!7108 = !DILexicalBlockFile(scope: !6949, file: !945, discriminator: 1)
!7109 = !DILocation(line: 508, column: 59, scope: !7110)
!7110 = !DILexicalBlockFile(scope: !6949, file: !945, discriminator: 2)
!7111 = !DILocation(line: 508, column: 64, scope: !7110)
!7112 = !DILocation(line: 508, column: 55, scope: !7110)
!7113 = !DILocation(line: 508, column: 28, scope: !7110)
!7114 = !DILocation(line: 508, column: 28, scope: !7115)
!7115 = !DILexicalBlockFile(scope: !6949, file: !945, discriminator: 3)
!7116 = !DILocation(line: 508, column: 15, scope: !7115)
!7117 = !DILocalVariable(name: "part_height", scope: !6949, file: !945, line: 509, type: !971)
!7118 = !DILocation(line: 509, column: 15, scope: !6949)
!7119 = !DILocation(line: 509, column: 47, scope: !6949)
!7120 = !DILocation(line: 509, column: 52, scope: !6949)
!7121 = !DILocation(line: 509, column: 57, scope: !6949)
!7122 = !DILocation(line: 509, column: 32, scope: !6949)
!7123 = !DILocalVariable(name: "extra_width", scope: !6949, file: !945, line: 510, type: !971)
!7124 = !DILocation(line: 510, column: 15, scope: !6949)
!7125 = !DILocation(line: 510, column: 30, scope: !6949)
!7126 = !DILocation(line: 510, column: 35, scope: !6949)
!7127 = !DILocation(line: 510, column: 29, scope: !6949)
!7128 = !DILocalVariable(name: "h_edge_pos", scope: !6949, file: !945, line: 511, type: !971)
!7129 = !DILocation(line: 511, column: 15, scope: !6949)
!7130 = !DILocation(line: 511, column: 33, scope: !6949)
!7131 = !DILocation(line: 511, column: 36, scope: !6949)
!7132 = !DILocation(line: 511, column: 49, scope: !6949)
!7133 = !DILocation(line: 511, column: 47, scope: !6949)
!7134 = !DILocation(line: 511, column: 30, scope: !6949)
!7135 = !DILocation(line: 511, column: 63, scope: !6949)
!7136 = !DILocation(line: 511, column: 61, scope: !6949)
!7137 = !DILocalVariable(name: "v_edge_pos", scope: !6949, file: !945, line: 512, type: !971)
!7138 = !DILocation(line: 512, column: 15, scope: !6949)
!7139 = !DILocation(line: 512, column: 33, scope: !6949)
!7140 = !DILocation(line: 512, column: 36, scope: !6949)
!7141 = !DILocation(line: 512, column: 49, scope: !6949)
!7142 = !DILocation(line: 512, column: 47, scope: !6949)
!7143 = !DILocation(line: 512, column: 30, scope: !6949)
!7144 = !DILocation(line: 512, column: 64, scope: !6949)
!7145 = !DILocation(line: 512, column: 62, scope: !6949)
!7146 = !DILocation(line: 514, column: 12, scope: !6963)
!7147 = !DILocation(line: 514, column: 10, scope: !6963)
!7148 = !DILocation(line: 514, column: 17, scope: !7149)
!7149 = !DILexicalBlockFile(scope: !6962, file: !945, discriminator: 1)
!7150 = !DILocation(line: 514, column: 19, scope: !7149)
!7151 = !DILocation(line: 514, column: 5, scope: !7149)
!7152 = !DILocation(line: 515, column: 16, scope: !6961)
!7153 = !DILocation(line: 515, column: 14, scope: !6961)
!7154 = !DILocation(line: 515, column: 21, scope: !7155)
!7155 = !DILexicalBlockFile(scope: !6960, file: !945, discriminator: 1)
!7156 = !DILocation(line: 515, column: 23, scope: !7155)
!7157 = !DILocation(line: 515, column: 9, scope: !7155)
!7158 = !DILocalVariable(name: "b_xy", scope: !6959, file: !945, line: 516, type: !971)
!7159 = !DILocation(line: 516, column: 23, scope: !6959)
!7160 = !DILocation(line: 516, column: 35, scope: !6959)
!7161 = !DILocation(line: 516, column: 38, scope: !6959)
!7162 = !DILocation(line: 516, column: 33, scope: !6959)
!7163 = !DILocation(line: 516, column: 46, scope: !6959)
!7164 = !DILocation(line: 516, column: 48, scope: !6959)
!7165 = !DILocation(line: 516, column: 43, scope: !6959)
!7166 = !DILocation(line: 517, column: 35, scope: !6959)
!7167 = !DILocation(line: 517, column: 38, scope: !6959)
!7168 = !DILocation(line: 517, column: 33, scope: !6959)
!7169 = !DILocation(line: 517, column: 46, scope: !6959)
!7170 = !DILocation(line: 517, column: 48, scope: !6959)
!7171 = !DILocation(line: 517, column: 43, scope: !6959)
!7172 = !DILocation(line: 517, column: 57, scope: !6959)
!7173 = !DILocation(line: 517, column: 60, scope: !6959)
!7174 = !DILocation(line: 517, column: 55, scope: !6959)
!7175 = !DILocation(line: 516, column: 55, scope: !6959)
!7176 = !DILocalVariable(name: "dxy", scope: !6959, file: !945, line: 518, type: !899)
!7177 = !DILocation(line: 518, column: 17, scope: !6959)
!7178 = !DILocation(line: 519, column: 22, scope: !6959)
!7179 = !DILocation(line: 519, column: 25, scope: !6959)
!7180 = !DILocation(line: 519, column: 20, scope: !6959)
!7181 = !DILocation(line: 519, column: 32, scope: !6959)
!7182 = !DILocation(line: 519, column: 30, scope: !6959)
!7183 = !DILocation(line: 519, column: 15, scope: !6959)
!7184 = !DILocation(line: 520, column: 22, scope: !6959)
!7185 = !DILocation(line: 520, column: 25, scope: !6959)
!7186 = !DILocation(line: 520, column: 20, scope: !6959)
!7187 = !DILocation(line: 520, column: 32, scope: !6959)
!7188 = !DILocation(line: 520, column: 30, scope: !6959)
!7189 = !DILocation(line: 520, column: 15, scope: !6959)
!7190 = !DILocation(line: 521, column: 18, scope: !6959)
!7191 = !DILocation(line: 521, column: 20, scope: !6959)
!7192 = !DILocation(line: 521, column: 25, scope: !6959)
!7193 = !DILocation(line: 521, column: 33, scope: !6959)
!7194 = !DILocation(line: 521, column: 35, scope: !6959)
!7195 = !DILocation(line: 521, column: 40, scope: !6959)
!7196 = !DILocation(line: 521, column: 30, scope: !6959)
!7197 = !DILocation(line: 522, column: 18, scope: !6959)
!7198 = !DILocation(line: 522, column: 20, scope: !6959)
!7199 = !DILocation(line: 522, column: 25, scope: !6959)
!7200 = !DILocation(line: 521, column: 45, scope: !6959)
!7201 = !DILocation(line: 522, column: 33, scope: !6959)
!7202 = !DILocation(line: 522, column: 35, scope: !6959)
!7203 = !DILocation(line: 522, column: 30, scope: !6959)
!7204 = !DILocation(line: 521, column: 15, scope: !6959)
!7205 = !DILocation(line: 524, column: 17, scope: !7031)
!7206 = !DILocation(line: 524, column: 22, scope: !7031)
!7207 = !DILocation(line: 524, column: 17, scope: !6959)
!7208 = !DILocation(line: 525, column: 34, scope: !7030)
!7209 = !DILocation(line: 525, column: 37, scope: !7030)
!7210 = !DILocation(line: 525, column: 40, scope: !7030)
!7211 = !DILocation(line: 525, column: 51, scope: !7030)
!7212 = !DILocation(line: 525, column: 57, scope: !7030)
!7213 = !DILocation(line: 525, column: 17, scope: !7030)
!7214 = !DILocation(line: 384, column: 30, scope: !7025, inlinedAt: !7029)
!7215 = !DILocation(line: 384, column: 24, scope: !7025, inlinedAt: !7029)
!7216 = !DILocation(line: 385, column: 44, scope: !7025, inlinedAt: !7029)
!7217 = !DILocation(line: 385, column: 51, scope: !7025, inlinedAt: !7029)
!7218 = !DILocation(line: 385, column: 25, scope: !7025, inlinedAt: !7029)
!7219 = !DILocation(line: 385, column: 38, scope: !7025, inlinedAt: !7029)
!7220 = !DILocation(line: 385, column: 28, scope: !7025, inlinedAt: !7029)
!7221 = !DILocation(line: 386, column: 45, scope: !7025, inlinedAt: !7029)
!7222 = !DILocation(line: 386, column: 52, scope: !7025, inlinedAt: !7029)
!7223 = !DILocation(line: 386, column: 26, scope: !7025, inlinedAt: !7029)
!7224 = !DILocation(line: 386, column: 39, scope: !7025, inlinedAt: !7029)
!7225 = !DILocation(line: 386, column: 29, scope: !7025, inlinedAt: !7029)
!7226 = !DILocation(line: 387, column: 48, scope: !7025, inlinedAt: !7029)
!7227 = !DILocation(line: 387, column: 55, scope: !7025, inlinedAt: !7029)
!7228 = !DILocation(line: 387, column: 30, scope: !7025, inlinedAt: !7029)
!7229 = !DILocation(line: 387, column: 42, scope: !7025, inlinedAt: !7029)
!7230 = !DILocation(line: 387, column: 33, scope: !7025, inlinedAt: !7029)
!7231 = !DILocation(line: 388, column: 48, scope: !7025, inlinedAt: !7029)
!7232 = !DILocation(line: 388, column: 55, scope: !7025, inlinedAt: !7029)
!7233 = !DILocation(line: 388, column: 30, scope: !7025, inlinedAt: !7029)
!7234 = !DILocation(line: 388, column: 42, scope: !7025, inlinedAt: !7029)
!7235 = !DILocation(line: 388, column: 33, scope: !7025, inlinedAt: !7029)
!7236 = !DILocation(line: 400, column: 43, scope: !7025, inlinedAt: !7029)
!7237 = !DILocation(line: 400, column: 50, scope: !7025, inlinedAt: !7029)
!7238 = !DILocation(line: 400, column: 58, scope: !7025, inlinedAt: !7029)
!7239 = !DILocation(line: 400, column: 64, scope: !7025, inlinedAt: !7029)
!7240 = !DILocation(line: 400, column: 20, scope: !7025, inlinedAt: !7029)
!7241 = !DILocation(line: 362, column: 49, scope: !7015, inlinedAt: !7024)
!7242 = !DILocation(line: 362, column: 51, scope: !7015, inlinedAt: !7024)
!7243 = !DILocation(line: 362, column: 57, scope: !7015, inlinedAt: !7024)
!7244 = !DILocation(line: 362, column: 55, scope: !7015, inlinedAt: !7024)
!7245 = !DILocation(line: 362, column: 30, scope: !7015, inlinedAt: !7024)
!7246 = !DILocation(line: 362, column: 43, scope: !7015, inlinedAt: !7024)
!7247 = !DILocation(line: 362, column: 33, scope: !7015, inlinedAt: !7024)
!7248 = !DILocation(line: 364, column: 9, scope: !7249, inlinedAt: !7024)
!7249 = distinct !DILexicalBlock(scope: !7015, file: !945, line: 364, column: 9)
!7250 = !DILocation(line: 364, column: 22, scope: !7249, inlinedAt: !7024)
!7251 = !DILocation(line: 364, column: 9, scope: !7015, inlinedAt: !7024)
!7252 = !DILocation(line: 365, column: 32, scope: !7253, inlinedAt: !7024)
!7253 = distinct !DILexicalBlock(scope: !7249, file: !945, line: 364, column: 29)
!7254 = !DILocation(line: 365, column: 34, scope: !7253, inlinedAt: !7024)
!7255 = !DILocation(line: 365, column: 40, scope: !7253, inlinedAt: !7024)
!7256 = !DILocation(line: 365, column: 38, scope: !7253, inlinedAt: !7024)
!7257 = !DILocation(line: 365, column: 14, scope: !7253, inlinedAt: !7024)
!7258 = !DILocation(line: 365, column: 26, scope: !7253, inlinedAt: !7024)
!7259 = !DILocation(line: 365, column: 17, scope: !7253, inlinedAt: !7024)
!7260 = !DILocation(line: 365, column: 10, scope: !7253, inlinedAt: !7024)
!7261 = !DILocation(line: 365, column: 12, scope: !7253, inlinedAt: !7024)
!7262 = !DILocation(line: 366, column: 16, scope: !7253, inlinedAt: !7024)
!7263 = !DILocation(line: 366, column: 9, scope: !7253, inlinedAt: !7024)
!7264 = !DILocation(line: 368, column: 32, scope: !7265, inlinedAt: !7024)
!7265 = distinct !DILexicalBlock(scope: !7249, file: !945, line: 367, column: 12)
!7266 = !DILocation(line: 368, column: 34, scope: !7265, inlinedAt: !7024)
!7267 = !DILocation(line: 368, column: 38, scope: !7265, inlinedAt: !7024)
!7268 = !DILocation(line: 368, column: 14, scope: !7265, inlinedAt: !7024)
!7269 = !DILocation(line: 368, column: 26, scope: !7265, inlinedAt: !7024)
!7270 = !DILocation(line: 368, column: 17, scope: !7265, inlinedAt: !7024)
!7271 = !DILocation(line: 368, column: 10, scope: !7265, inlinedAt: !7024)
!7272 = !DILocation(line: 368, column: 12, scope: !7265, inlinedAt: !7024)
!7273 = !DILocation(line: 369, column: 35, scope: !7265, inlinedAt: !7024)
!7274 = !DILocation(line: 369, column: 37, scope: !7265, inlinedAt: !7024)
!7275 = !DILocation(line: 369, column: 41, scope: !7265, inlinedAt: !7024)
!7276 = !DILocation(line: 369, column: 16, scope: !7265, inlinedAt: !7024)
!7277 = !DILocation(line: 369, column: 29, scope: !7265, inlinedAt: !7024)
!7278 = !DILocation(line: 369, column: 19, scope: !7265, inlinedAt: !7024)
!7279 = !DILocation(line: 369, column: 9, scope: !7265, inlinedAt: !7024)
!7280 = !DILocation(line: 371, column: 1, scope: !7015, inlinedAt: !7024)
!7281 = !DILocation(line: 400, column: 18, scope: !7025, inlinedAt: !7029)
!7282 = !DILocation(line: 401, column: 20, scope: !7025, inlinedAt: !7029)
!7283 = !DILocation(line: 401, column: 36, scope: !7025, inlinedAt: !7029)
!7284 = !DILocation(line: 401, column: 33, scope: !7025, inlinedAt: !7029)
!7285 = !DILocation(line: 401, column: 44, scope: !7025, inlinedAt: !7029)
!7286 = !DILocation(line: 401, column: 55, scope: !7025, inlinedAt: !7029)
!7287 = !DILocation(line: 401, column: 52, scope: !7025, inlinedAt: !7029)
!7288 = !DILocation(line: 401, column: 41, scope: !7025, inlinedAt: !7029)
!7289 = !DILocation(line: 401, column: 63, scope: !7025, inlinedAt: !7029)
!7290 = !DILocation(line: 401, column: 75, scope: !7025, inlinedAt: !7029)
!7291 = !DILocation(line: 401, column: 72, scope: !7025, inlinedAt: !7029)
!7292 = !DILocation(line: 401, column: 60, scope: !7025, inlinedAt: !7029)
!7293 = !DILocation(line: 401, column: 17, scope: !7025, inlinedAt: !7029)
!7294 = !DILocation(line: 402, column: 9, scope: !7295, inlinedAt: !7029)
!7295 = distinct !DILexicalBlock(scope: !7025, file: !945, line: 402, column: 9)
!7296 = !DILocation(line: 402, column: 21, scope: !7295, inlinedAt: !7029)
!7297 = !DILocation(line: 402, column: 9, scope: !7025, inlinedAt: !7029)
!7298 = !DILocation(line: 403, column: 24, scope: !7299, inlinedAt: !7029)
!7299 = distinct !DILexicalBlock(scope: !7295, file: !945, line: 402, column: 26)
!7300 = !DILocation(line: 403, column: 30, scope: !7299, inlinedAt: !7029)
!7301 = !DILocation(line: 403, column: 36, scope: !7299, inlinedAt: !7029)
!7302 = !DILocation(line: 403, column: 15, scope: !7299, inlinedAt: !7029)
!7303 = !DILocation(line: 403, column: 10, scope: !7299, inlinedAt: !7029)
!7304 = !DILocation(line: 403, column: 13, scope: !7299, inlinedAt: !7029)
!7305 = !DILocation(line: 404, column: 24, scope: !7299, inlinedAt: !7029)
!7306 = !DILocation(line: 404, column: 30, scope: !7299, inlinedAt: !7029)
!7307 = !DILocation(line: 404, column: 36, scope: !7299, inlinedAt: !7029)
!7308 = !DILocation(line: 404, column: 15, scope: !7299, inlinedAt: !7029)
!7309 = !DILocation(line: 404, column: 10, scope: !7299, inlinedAt: !7029)
!7310 = !DILocation(line: 404, column: 13, scope: !7299, inlinedAt: !7029)
!7311 = !DILocation(line: 405, column: 5, scope: !7299, inlinedAt: !7029)
!7312 = !DILocation(line: 405, column: 16, scope: !7313, inlinedAt: !7029)
!7313 = !DILexicalBlockFile(scope: !7314, file: !945, discriminator: 1)
!7314 = distinct !DILexicalBlock(scope: !7295, file: !945, line: 405, column: 16)
!7315 = !DILocation(line: 405, column: 28, scope: !7313, inlinedAt: !7029)
!7316 = !DILocation(line: 406, column: 13, scope: !7317, inlinedAt: !7029)
!7317 = distinct !DILexicalBlock(scope: !7318, file: !945, line: 406, column: 13)
!7318 = distinct !DILexicalBlock(scope: !7314, file: !945, line: 405, column: 34)
!7319 = !DILocation(line: 406, column: 25, scope: !7317, inlinedAt: !7029)
!7320 = !DILocation(line: 406, column: 22, scope: !7317, inlinedAt: !7029)
!7321 = !DILocation(line: 406, column: 13, scope: !7318, inlinedAt: !7029)
!7322 = !DILocation(line: 407, column: 19, scope: !7323, inlinedAt: !7029)
!7323 = distinct !DILexicalBlock(scope: !7317, file: !945, line: 406, column: 30)
!7324 = !DILocation(line: 407, column: 14, scope: !7323, inlinedAt: !7029)
!7325 = !DILocation(line: 407, column: 17, scope: !7323, inlinedAt: !7029)
!7326 = !DILocation(line: 408, column: 19, scope: !7323, inlinedAt: !7029)
!7327 = !DILocation(line: 408, column: 14, scope: !7323, inlinedAt: !7029)
!7328 = !DILocation(line: 408, column: 17, scope: !7323, inlinedAt: !7029)
!7329 = !DILocation(line: 409, column: 9, scope: !7323, inlinedAt: !7029)
!7330 = !DILocation(line: 409, column: 20, scope: !7331, inlinedAt: !7029)
!7331 = !DILexicalBlockFile(scope: !7332, file: !945, discriminator: 1)
!7332 = distinct !DILexicalBlock(scope: !7317, file: !945, line: 409, column: 20)
!7333 = !DILocation(line: 409, column: 31, scope: !7331, inlinedAt: !7029)
!7334 = !DILocation(line: 409, column: 28, scope: !7331, inlinedAt: !7029)
!7335 = !DILocation(line: 410, column: 19, scope: !7336, inlinedAt: !7029)
!7336 = distinct !DILexicalBlock(scope: !7332, file: !945, line: 409, column: 36)
!7337 = !DILocation(line: 410, column: 14, scope: !7336, inlinedAt: !7029)
!7338 = !DILocation(line: 410, column: 17, scope: !7336, inlinedAt: !7029)
!7339 = !DILocation(line: 411, column: 19, scope: !7336, inlinedAt: !7029)
!7340 = !DILocation(line: 411, column: 14, scope: !7336, inlinedAt: !7029)
!7341 = !DILocation(line: 411, column: 17, scope: !7336, inlinedAt: !7029)
!7342 = !DILocation(line: 412, column: 9, scope: !7336, inlinedAt: !7029)
!7343 = !DILocation(line: 413, column: 19, scope: !7344, inlinedAt: !7029)
!7344 = distinct !DILexicalBlock(scope: !7332, file: !945, line: 412, column: 16)
!7345 = !DILocation(line: 413, column: 14, scope: !7344, inlinedAt: !7029)
!7346 = !DILocation(line: 413, column: 17, scope: !7344, inlinedAt: !7029)
!7347 = !DILocation(line: 414, column: 19, scope: !7344, inlinedAt: !7029)
!7348 = !DILocation(line: 414, column: 14, scope: !7344, inlinedAt: !7029)
!7349 = !DILocation(line: 414, column: 17, scope: !7344, inlinedAt: !7029)
!7350 = !DILocation(line: 416, column: 5, scope: !7318, inlinedAt: !7029)
!7351 = !DILocation(line: 417, column: 13, scope: !7352, inlinedAt: !7029)
!7352 = distinct !DILexicalBlock(scope: !7353, file: !945, line: 417, column: 13)
!7353 = distinct !DILexicalBlock(scope: !7314, file: !945, line: 416, column: 12)
!7354 = !DILocation(line: 417, column: 21, scope: !7352, inlinedAt: !7029)
!7355 = !DILocation(line: 417, column: 27, scope: !7352, inlinedAt: !7029)
!7356 = !DILocation(line: 418, column: 13, scope: !7352, inlinedAt: !7029)
!7357 = !DILocation(line: 418, column: 26, scope: !7352, inlinedAt: !7029)
!7358 = !DILocation(line: 418, column: 32, scope: !7352, inlinedAt: !7029)
!7359 = !DILocation(line: 419, column: 13, scope: !7352, inlinedAt: !7029)
!7360 = !DILocation(line: 419, column: 22, scope: !7352, inlinedAt: !7029)
!7361 = !DILocation(line: 417, column: 13, scope: !7362, inlinedAt: !7029)
!7362 = !DILexicalBlockFile(scope: !7353, file: !945, discriminator: 1)
!7363 = !DILocation(line: 420, column: 19, scope: !7364, inlinedAt: !7029)
!7364 = distinct !DILexicalBlock(scope: !7352, file: !945, line: 419, column: 29)
!7365 = !DILocation(line: 420, column: 14, scope: !7364, inlinedAt: !7029)
!7366 = !DILocation(line: 420, column: 17, scope: !7364, inlinedAt: !7029)
!7367 = !DILocation(line: 421, column: 19, scope: !7364, inlinedAt: !7029)
!7368 = !DILocation(line: 421, column: 14, scope: !7364, inlinedAt: !7029)
!7369 = !DILocation(line: 421, column: 17, scope: !7364, inlinedAt: !7029)
!7370 = !DILocation(line: 422, column: 9, scope: !7364, inlinedAt: !7029)
!7371 = !DILocation(line: 423, column: 28, scope: !7372, inlinedAt: !7029)
!7372 = distinct !DILexicalBlock(scope: !7352, file: !945, line: 422, column: 16)
!7373 = !DILocation(line: 423, column: 34, scope: !7372, inlinedAt: !7029)
!7374 = !DILocation(line: 423, column: 40, scope: !7372, inlinedAt: !7029)
!7375 = !DILocation(line: 423, column: 19, scope: !7372, inlinedAt: !7029)
!7376 = !DILocation(line: 423, column: 14, scope: !7372, inlinedAt: !7029)
!7377 = !DILocation(line: 423, column: 17, scope: !7372, inlinedAt: !7029)
!7378 = !DILocation(line: 424, column: 28, scope: !7372, inlinedAt: !7029)
!7379 = !DILocation(line: 424, column: 34, scope: !7372, inlinedAt: !7029)
!7380 = !DILocation(line: 424, column: 40, scope: !7372, inlinedAt: !7029)
!7381 = !DILocation(line: 424, column: 19, scope: !7372, inlinedAt: !7029)
!7382 = !DILocation(line: 424, column: 14, scope: !7372, inlinedAt: !7029)
!7383 = !DILocation(line: 424, column: 17, scope: !7372, inlinedAt: !7029)
!7384 = !DILocation(line: 526, column: 13, scope: !7030)
!7385 = !DILocation(line: 527, column: 49, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7031, file: !945, line: 526, column: 20)
!7387 = !DILocation(line: 527, column: 22, scope: !7386)
!7388 = !DILocation(line: 527, column: 25, scope: !7386)
!7389 = !DILocation(line: 527, column: 35, scope: !7386)
!7390 = !DILocation(line: 527, column: 58, scope: !7386)
!7391 = !DILocation(line: 527, column: 20, scope: !7386)
!7392 = !DILocation(line: 528, column: 49, scope: !7386)
!7393 = !DILocation(line: 528, column: 22, scope: !7386)
!7394 = !DILocation(line: 528, column: 25, scope: !7386)
!7395 = !DILocation(line: 528, column: 35, scope: !7386)
!7396 = !DILocation(line: 528, column: 58, scope: !7386)
!7397 = !DILocation(line: 528, column: 20, scope: !7386)
!7398 = !DILocation(line: 530, column: 21, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7386, file: !945, line: 530, column: 21)
!7400 = !DILocation(line: 530, column: 25, scope: !7399)
!7401 = !DILocation(line: 530, column: 21, scope: !7386)
!7402 = !DILocation(line: 531, column: 26, scope: !7403)
!7403 = distinct !DILexicalBlock(scope: !7399, file: !945, line: 530, column: 31)
!7404 = !DILocation(line: 531, column: 31, scope: !7403)
!7405 = !DILocation(line: 531, column: 34, scope: !7403)
!7406 = !DILocation(line: 531, column: 29, scope: !7403)
!7407 = !DILocation(line: 532, column: 26, scope: !7403)
!7408 = !DILocation(line: 532, column: 29, scope: !7403)
!7409 = !DILocation(line: 531, column: 51, scope: !7403)
!7410 = !DILocation(line: 532, column: 51, scope: !7403)
!7411 = !DILocation(line: 532, column: 55, scope: !7403)
!7412 = !DILocation(line: 531, column: 24, scope: !7403)
!7413 = !DILocation(line: 533, column: 26, scope: !7403)
!7414 = !DILocation(line: 533, column: 31, scope: !7403)
!7415 = !DILocation(line: 533, column: 34, scope: !7403)
!7416 = !DILocation(line: 533, column: 29, scope: !7403)
!7417 = !DILocation(line: 534, column: 26, scope: !7403)
!7418 = !DILocation(line: 534, column: 29, scope: !7403)
!7419 = !DILocation(line: 533, column: 51, scope: !7403)
!7420 = !DILocation(line: 534, column: 51, scope: !7403)
!7421 = !DILocation(line: 534, column: 55, scope: !7403)
!7422 = !DILocation(line: 533, column: 24, scope: !7403)
!7423 = !DILocation(line: 535, column: 17, scope: !7403)
!7424 = !DILocation(line: 536, column: 26, scope: !7425)
!7425 = distinct !DILexicalBlock(scope: !7399, file: !945, line: 535, column: 24)
!7426 = !DILocation(line: 536, column: 32, scope: !7425)
!7427 = !DILocation(line: 536, column: 35, scope: !7425)
!7428 = !DILocation(line: 536, column: 54, scope: !7425)
!7429 = !DILocation(line: 536, column: 57, scope: !7425)
!7430 = !DILocation(line: 536, column: 52, scope: !7425)
!7431 = !DILocation(line: 536, column: 29, scope: !7425)
!7432 = !DILocation(line: 537, column: 26, scope: !7425)
!7433 = !DILocation(line: 537, column: 29, scope: !7425)
!7434 = !DILocation(line: 536, column: 80, scope: !7425)
!7435 = !DILocation(line: 537, column: 51, scope: !7425)
!7436 = !DILocation(line: 537, column: 55, scope: !7425)
!7437 = !DILocation(line: 536, column: 24, scope: !7425)
!7438 = !DILocation(line: 538, column: 26, scope: !7425)
!7439 = !DILocation(line: 538, column: 32, scope: !7425)
!7440 = !DILocation(line: 538, column: 35, scope: !7425)
!7441 = !DILocation(line: 538, column: 54, scope: !7425)
!7442 = !DILocation(line: 538, column: 57, scope: !7425)
!7443 = !DILocation(line: 538, column: 52, scope: !7425)
!7444 = !DILocation(line: 538, column: 29, scope: !7425)
!7445 = !DILocation(line: 539, column: 26, scope: !7425)
!7446 = !DILocation(line: 539, column: 29, scope: !7425)
!7447 = !DILocation(line: 538, column: 80, scope: !7425)
!7448 = !DILocation(line: 539, column: 51, scope: !7425)
!7449 = !DILocation(line: 539, column: 55, scope: !7425)
!7450 = !DILocation(line: 538, column: 24, scope: !7425)
!7451 = !DILocation(line: 544, column: 28, scope: !6959)
!7452 = !DILocation(line: 544, column: 32, scope: !6959)
!7453 = !DILocation(line: 544, column: 50, scope: !6959)
!7454 = !DILocation(line: 544, column: 48, scope: !6959)
!7455 = !DILocation(line: 544, column: 44, scope: !6959)
!7456 = !DILocation(line: 544, column: 53, scope: !6959)
!7457 = !DILocation(line: 544, column: 70, scope: !6959)
!7458 = !DILocation(line: 544, column: 68, scope: !6959)
!7459 = !DILocation(line: 544, column: 64, scope: !6959)
!7460 = !DILocation(line: 544, column: 18, scope: !6959)
!7461 = !DILocation(line: 132, column: 9, scope: !6498, inlinedAt: !7011)
!7462 = !DILocation(line: 132, column: 13, scope: !6498, inlinedAt: !7011)
!7463 = !DILocation(line: 132, column: 11, scope: !6498, inlinedAt: !7011)
!7464 = !DILocation(line: 132, column: 9, scope: !6473, inlinedAt: !7011)
!7465 = !DILocation(line: 132, column: 26, scope: !6503, inlinedAt: !7011)
!7466 = !DILocation(line: 132, column: 19, scope: !6503, inlinedAt: !7011)
!7467 = !DILocation(line: 133, column: 14, scope: !6506, inlinedAt: !7011)
!7468 = !DILocation(line: 133, column: 18, scope: !6506, inlinedAt: !7011)
!7469 = !DILocation(line: 133, column: 16, scope: !6506, inlinedAt: !7011)
!7470 = !DILocation(line: 133, column: 14, scope: !6498, inlinedAt: !7011)
!7471 = !DILocation(line: 133, column: 31, scope: !6511, inlinedAt: !7011)
!7472 = !DILocation(line: 133, column: 24, scope: !6511, inlinedAt: !7011)
!7473 = !DILocation(line: 134, column: 17, scope: !6506, inlinedAt: !7011)
!7474 = !DILocation(line: 134, column: 10, scope: !6506, inlinedAt: !7011)
!7475 = !DILocation(line: 135, column: 1, scope: !6473, inlinedAt: !7011)
!7476 = !DILocation(line: 544, column: 16, scope: !6959)
!7477 = !DILocation(line: 545, column: 28, scope: !6959)
!7478 = !DILocation(line: 545, column: 32, scope: !6959)
!7479 = !DILocation(line: 545, column: 50, scope: !6959)
!7480 = !DILocation(line: 545, column: 48, scope: !6959)
!7481 = !DILocation(line: 545, column: 44, scope: !6959)
!7482 = !DILocation(line: 545, column: 53, scope: !6959)
!7483 = !DILocation(line: 545, column: 70, scope: !6959)
!7484 = !DILocation(line: 545, column: 68, scope: !6959)
!7485 = !DILocation(line: 545, column: 64, scope: !6959)
!7486 = !DILocation(line: 545, column: 18, scope: !6959)
!7487 = !DILocation(line: 132, column: 9, scope: !6498, inlinedAt: !7007)
!7488 = !DILocation(line: 132, column: 13, scope: !6498, inlinedAt: !7007)
!7489 = !DILocation(line: 132, column: 11, scope: !6498, inlinedAt: !7007)
!7490 = !DILocation(line: 132, column: 9, scope: !6473, inlinedAt: !7007)
!7491 = !DILocation(line: 132, column: 26, scope: !6503, inlinedAt: !7007)
!7492 = !DILocation(line: 132, column: 19, scope: !6503, inlinedAt: !7007)
!7493 = !DILocation(line: 133, column: 14, scope: !6506, inlinedAt: !7007)
!7494 = !DILocation(line: 133, column: 18, scope: !6506, inlinedAt: !7007)
!7495 = !DILocation(line: 133, column: 16, scope: !6506, inlinedAt: !7007)
!7496 = !DILocation(line: 133, column: 14, scope: !6498, inlinedAt: !7007)
!7497 = !DILocation(line: 133, column: 31, scope: !6511, inlinedAt: !7007)
!7498 = !DILocation(line: 133, column: 24, scope: !6511, inlinedAt: !7007)
!7499 = !DILocation(line: 134, column: 17, scope: !6506, inlinedAt: !7007)
!7500 = !DILocation(line: 134, column: 10, scope: !6506, inlinedAt: !7007)
!7501 = !DILocation(line: 135, column: 1, scope: !6473, inlinedAt: !7007)
!7502 = !DILocation(line: 545, column: 16, scope: !6959)
!7503 = !DILocation(line: 548, column: 17, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !6959, file: !945, line: 548, column: 17)
!7505 = !DILocation(line: 548, column: 22, scope: !7504)
!7506 = !DILocation(line: 548, column: 17, scope: !6959)
!7507 = !DILocation(line: 549, column: 25, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7504, file: !945, line: 548, column: 28)
!7509 = !DILocation(line: 549, column: 20, scope: !7508)
!7510 = !DILocation(line: 550, column: 13, scope: !7508)
!7511 = !DILocation(line: 551, column: 49, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7504, file: !945, line: 550, column: 20)
!7513 = !DILocation(line: 551, column: 52, scope: !7512)
!7514 = !DILocation(line: 551, column: 22, scope: !7512)
!7515 = !DILocation(line: 551, column: 20, scope: !7512)
!7516 = !DILocation(line: 552, column: 49, scope: !7512)
!7517 = !DILocation(line: 552, column: 52, scope: !7512)
!7518 = !DILocation(line: 552, column: 22, scope: !7512)
!7519 = !DILocation(line: 552, column: 20, scope: !7512)
!7520 = !DILocation(line: 554, column: 21, scope: !7521)
!7521 = distinct !DILexicalBlock(scope: !7512, file: !945, line: 554, column: 21)
!7522 = !DILocation(line: 554, column: 36, scope: !7521)
!7523 = !DILocation(line: 554, column: 27, scope: !7521)
!7524 = !DILocation(line: 554, column: 24, scope: !7521)
!7525 = !DILocation(line: 554, column: 39, scope: !7521)
!7526 = !DILocation(line: 554, column: 42, scope: !7527)
!7527 = !DILexicalBlockFile(scope: !7521, file: !945, discriminator: 1)
!7528 = !DILocation(line: 554, column: 57, scope: !7527)
!7529 = !DILocation(line: 554, column: 48, scope: !7527)
!7530 = !DILocation(line: 554, column: 45, scope: !7527)
!7531 = !DILocation(line: 554, column: 21, scope: !7527)
!7532 = !DILocation(line: 555, column: 28, scope: !7533)
!7533 = distinct !DILexicalBlock(scope: !7521, file: !945, line: 554, column: 61)
!7534 = !DILocation(line: 555, column: 31, scope: !7533)
!7535 = !DILocation(line: 555, column: 21, scope: !7533)
!7536 = !DILocation(line: 556, column: 21, scope: !7533)
!7537 = !DILocation(line: 561, column: 17, scope: !7538)
!7538 = distinct !DILexicalBlock(scope: !6959, file: !945, line: 561, column: 17)
!7539 = !DILocation(line: 561, column: 22, scope: !7538)
!7540 = !DILocation(line: 561, column: 17, scope: !6959)
!7541 = !DILocalVariable(name: "fx", scope: !7542, file: !945, line: 562, type: !899)
!7542 = distinct !DILexicalBlock(scope: !7538, file: !945, line: 561, column: 28)
!7543 = !DILocation(line: 562, column: 21, scope: !7542)
!7544 = !DILocalVariable(name: "fy", scope: !7542, file: !945, line: 562, type: !899)
!7545 = !DILocation(line: 562, column: 25, scope: !7542)
!7546 = !DILocation(line: 563, column: 23, scope: !7542)
!7547 = !DILocation(line: 563, column: 26, scope: !7542)
!7548 = !DILocation(line: 563, column: 30, scope: !7542)
!7549 = !DILocation(line: 563, column: 38, scope: !7542)
!7550 = !DILocation(line: 563, column: 36, scope: !7542)
!7551 = !DILocation(line: 563, column: 20, scope: !7542)
!7552 = !DILocation(line: 564, column: 23, scope: !7542)
!7553 = !DILocation(line: 564, column: 26, scope: !7542)
!7554 = !DILocation(line: 564, column: 30, scope: !7542)
!7555 = !DILocation(line: 564, column: 38, scope: !7542)
!7556 = !DILocation(line: 564, column: 36, scope: !7542)
!7557 = !DILocation(line: 564, column: 20, scope: !7542)
!7558 = !DILocation(line: 565, column: 33, scope: !7542)
!7559 = !DILocation(line: 565, column: 36, scope: !7542)
!7560 = !DILocation(line: 565, column: 47, scope: !7542)
!7561 = !DILocation(line: 565, column: 51, scope: !7542)
!7562 = !DILocation(line: 565, column: 20, scope: !7542)
!7563 = !DILocation(line: 566, column: 33, scope: !7542)
!7564 = !DILocation(line: 566, column: 36, scope: !7542)
!7565 = !DILocation(line: 566, column: 47, scope: !7542)
!7566 = !DILocation(line: 566, column: 51, scope: !7542)
!7567 = !DILocation(line: 566, column: 20, scope: !7542)
!7568 = !DILocation(line: 567, column: 24, scope: !7542)
!7569 = !DILocation(line: 567, column: 33, scope: !7542)
!7570 = !DILocation(line: 567, column: 31, scope: !7542)
!7571 = !DILocation(line: 567, column: 27, scope: !7542)
!7572 = !DILocation(line: 567, column: 44, scope: !7542)
!7573 = !DILocation(line: 567, column: 53, scope: !7542)
!7574 = !DILocation(line: 567, column: 51, scope: !7542)
!7575 = !DILocation(line: 567, column: 47, scope: !7542)
!7576 = !DILocation(line: 567, column: 41, scope: !7542)
!7577 = !DILocation(line: 567, column: 37, scope: !7542)
!7578 = !DILocation(line: 567, column: 21, scope: !7542)
!7579 = !DILocation(line: 569, column: 34, scope: !7542)
!7580 = !DILocation(line: 569, column: 37, scope: !7542)
!7581 = !DILocation(line: 569, column: 40, scope: !7542)
!7582 = !DILocation(line: 569, column: 43, scope: !7542)
!7583 = !DILocation(line: 569, column: 55, scope: !7542)
!7584 = !DILocation(line: 570, column: 34, scope: !7542)
!7585 = !DILocation(line: 570, column: 38, scope: !7542)
!7586 = !DILocation(line: 570, column: 42, scope: !7542)
!7587 = !DILocation(line: 570, column: 50, scope: !7542)
!7588 = !DILocation(line: 570, column: 55, scope: !7542)
!7589 = !DILocation(line: 569, column: 17, scope: !7542)
!7590 = !DILocation(line: 571, column: 23, scope: !7542)
!7591 = !DILocation(line: 571, column: 20, scope: !7542)
!7592 = !DILocation(line: 572, column: 23, scope: !7542)
!7593 = !DILocation(line: 572, column: 20, scope: !7542)
!7594 = !DILocation(line: 573, column: 13, scope: !7542)
!7595 = !DILocation(line: 573, column: 24, scope: !7596)
!7596 = !DILexicalBlockFile(scope: !7597, file: !945, discriminator: 1)
!7597 = distinct !DILexicalBlock(scope: !7538, file: !945, line: 573, column: 24)
!7598 = !DILocation(line: 573, column: 29, scope: !7596)
!7599 = !DILocation(line: 573, column: 34, scope: !7596)
!7600 = !DILocation(line: 573, column: 37, scope: !7601)
!7601 = !DILexicalBlockFile(scope: !7597, file: !945, discriminator: 2)
!7602 = !DILocation(line: 573, column: 42, scope: !7601)
!7603 = !DILocation(line: 573, column: 24, scope: !7601)
!7604 = !DILocation(line: 574, column: 33, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7597, file: !945, line: 573, column: 48)
!7606 = !DILocation(line: 574, column: 36, scope: !7605)
!7607 = !DILocation(line: 574, column: 40, scope: !7605)
!7608 = !DILocation(line: 574, column: 51, scope: !7605)
!7609 = !DILocation(line: 574, column: 57, scope: !7605)
!7610 = !DILocation(line: 574, column: 55, scope: !7605)
!7611 = !DILocation(line: 574, column: 60, scope: !7605)
!7612 = !DILocation(line: 574, column: 20, scope: !7605)
!7613 = !DILocation(line: 575, column: 33, scope: !7605)
!7614 = !DILocation(line: 575, column: 36, scope: !7605)
!7615 = !DILocation(line: 575, column: 40, scope: !7605)
!7616 = !DILocation(line: 575, column: 51, scope: !7605)
!7617 = !DILocation(line: 575, column: 57, scope: !7605)
!7618 = !DILocation(line: 575, column: 55, scope: !7605)
!7619 = !DILocation(line: 575, column: 60, scope: !7605)
!7620 = !DILocation(line: 575, column: 20, scope: !7605)
!7621 = !DILocation(line: 576, column: 24, scope: !7605)
!7622 = !DILocation(line: 576, column: 27, scope: !7605)
!7623 = !DILocation(line: 576, column: 39, scope: !7605)
!7624 = !DILocation(line: 576, column: 42, scope: !7605)
!7625 = !DILocation(line: 576, column: 36, scope: !7605)
!7626 = !DILocation(line: 576, column: 32, scope: !7605)
!7627 = !DILocation(line: 576, column: 21, scope: !7605)
!7628 = !DILocation(line: 578, column: 34, scope: !7605)
!7629 = !DILocation(line: 578, column: 37, scope: !7605)
!7630 = !DILocation(line: 578, column: 40, scope: !7605)
!7631 = !DILocation(line: 578, column: 43, scope: !7605)
!7632 = !DILocation(line: 578, column: 55, scope: !7605)
!7633 = !DILocation(line: 579, column: 34, scope: !7605)
!7634 = !DILocation(line: 579, column: 37, scope: !7605)
!7635 = !DILocation(line: 579, column: 43, scope: !7605)
!7636 = !DILocation(line: 579, column: 46, scope: !7605)
!7637 = !DILocation(line: 579, column: 52, scope: !7605)
!7638 = !DILocation(line: 579, column: 60, scope: !7605)
!7639 = !DILocation(line: 579, column: 65, scope: !7605)
!7640 = !DILocation(line: 578, column: 17, scope: !7605)
!7641 = !DILocation(line: 580, column: 20, scope: !7605)
!7642 = !DILocation(line: 581, column: 20, scope: !7605)
!7643 = !DILocation(line: 582, column: 13, scope: !7605)
!7644 = !DILocation(line: 583, column: 33, scope: !7645)
!7645 = distinct !DILexicalBlock(scope: !7597, file: !945, line: 582, column: 20)
!7646 = !DILocation(line: 583, column: 36, scope: !7645)
!7647 = !DILocation(line: 583, column: 40, scope: !7645)
!7648 = !DILocation(line: 583, column: 51, scope: !7645)
!7649 = !DILocation(line: 583, column: 57, scope: !7645)
!7650 = !DILocation(line: 583, column: 55, scope: !7645)
!7651 = !DILocation(line: 583, column: 60, scope: !7645)
!7652 = !DILocation(line: 583, column: 20, scope: !7645)
!7653 = !DILocation(line: 584, column: 33, scope: !7645)
!7654 = !DILocation(line: 584, column: 36, scope: !7645)
!7655 = !DILocation(line: 584, column: 40, scope: !7645)
!7656 = !DILocation(line: 584, column: 51, scope: !7645)
!7657 = !DILocation(line: 584, column: 57, scope: !7645)
!7658 = !DILocation(line: 584, column: 55, scope: !7645)
!7659 = !DILocation(line: 584, column: 60, scope: !7645)
!7660 = !DILocation(line: 584, column: 20, scope: !7645)
!7661 = !DILocation(line: 586, column: 34, scope: !7645)
!7662 = !DILocation(line: 586, column: 37, scope: !7645)
!7663 = !DILocation(line: 586, column: 40, scope: !7645)
!7664 = !DILocation(line: 586, column: 43, scope: !7645)
!7665 = !DILocation(line: 586, column: 55, scope: !7645)
!7666 = !DILocation(line: 587, column: 34, scope: !7645)
!7667 = !DILocation(line: 587, column: 38, scope: !7645)
!7668 = !DILocation(line: 587, column: 48, scope: !7645)
!7669 = !DILocation(line: 587, column: 53, scope: !7645)
!7670 = !DILocation(line: 586, column: 17, scope: !7645)
!7671 = !DILocation(line: 588, column: 20, scope: !7645)
!7672 = !DILocation(line: 589, column: 20, scope: !7645)
!7673 = !DILocation(line: 593, column: 17, scope: !7004)
!7674 = !DILocation(line: 593, column: 22, scope: !7004)
!7675 = !DILocation(line: 593, column: 17, scope: !6959)
!7676 = !DILocalVariable(name: "mv", scope: !7003, file: !945, line: 594, type: !942)
!7677 = !DILocation(line: 594, column: 25, scope: !7003)
!7678 = !DILocation(line: 594, column: 41, scope: !7003)
!7679 = !DILocation(line: 594, column: 45, scope: !7003)
!7680 = !DILocation(line: 594, column: 30, scope: !7003)
!7681 = !DILocation(line: 665, column: 13, scope: !6994, inlinedAt: !7002)
!7682 = !DILocation(line: 665, column: 15, scope: !6994, inlinedAt: !7002)
!7683 = !DILocation(line: 665, column: 28, scope: !6994, inlinedAt: !7002)
!7684 = !DILocation(line: 665, column: 30, scope: !6994, inlinedAt: !7002)
!7685 = !DILocation(line: 665, column: 25, scope: !6994, inlinedAt: !7002)
!7686 = !DILocation(line: 596, column: 21, scope: !7687)
!7687 = distinct !DILexicalBlock(scope: !7003, file: !945, line: 596, column: 21)
!7688 = !DILocation(line: 596, column: 33, scope: !7687)
!7689 = !DILocation(line: 596, column: 38, scope: !7687)
!7690 = !DILocation(line: 596, column: 41, scope: !7691)
!7691 = !DILexicalBlockFile(scope: !7687, file: !945, discriminator: 1)
!7692 = !DILocation(line: 596, column: 43, scope: !7691)
!7693 = !DILocation(line: 596, column: 21, scope: !7691)
!7694 = !DILocation(line: 597, column: 82, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7687, file: !945, line: 596, column: 48)
!7696 = !DILocation(line: 597, column: 60, scope: !7695)
!7697 = !DILocation(line: 597, column: 54, scope: !7695)
!7698 = !DILocation(line: 597, column: 63, scope: !7695)
!7699 = !DILocation(line: 597, column: 37, scope: !7695)
!7700 = !DILocation(line: 597, column: 49, scope: !7695)
!7701 = !DILocation(line: 597, column: 40, scope: !7695)
!7702 = !DILocation(line: 597, column: 75, scope: !7695)
!7703 = !DILocation(line: 597, column: 79, scope: !7695)
!7704 = !DILocation(line: 599, column: 25, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7695, file: !945, line: 599, column: 25)
!7706 = !DILocation(line: 599, column: 36, scope: !7705)
!7707 = !DILocation(line: 599, column: 41, scope: !7705)
!7708 = !DILocation(line: 599, column: 44, scope: !7709)
!7709 = !DILexicalBlockFile(scope: !7705, file: !945, discriminator: 1)
!7710 = !DILocation(line: 599, column: 46, scope: !7709)
!7711 = !DILocation(line: 599, column: 25, scope: !7709)
!7712 = !DILocation(line: 600, column: 90, scope: !7705)
!7713 = !DILocation(line: 600, column: 64, scope: !7705)
!7714 = !DILocation(line: 600, column: 58, scope: !7705)
!7715 = !DILocation(line: 600, column: 67, scope: !7705)
!7716 = !DILocation(line: 600, column: 71, scope: !7705)
!7717 = !DILocation(line: 600, column: 41, scope: !7705)
!7718 = !DILocation(line: 600, column: 53, scope: !7705)
!7719 = !DILocation(line: 600, column: 44, scope: !7705)
!7720 = !DILocation(line: 600, column: 83, scope: !7705)
!7721 = !DILocation(line: 600, column: 87, scope: !7705)
!7722 = !DILocation(line: 600, column: 25, scope: !7705)
!7723 = !DILocation(line: 601, column: 17, scope: !7695)
!7724 = !DILocation(line: 602, column: 21, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7003, file: !945, line: 602, column: 21)
!7726 = !DILocation(line: 602, column: 32, scope: !7725)
!7727 = !DILocation(line: 602, column: 37, scope: !7725)
!7728 = !DILocation(line: 602, column: 40, scope: !7729)
!7729 = !DILexicalBlockFile(scope: !7725, file: !945, discriminator: 1)
!7730 = !DILocation(line: 602, column: 42, scope: !7729)
!7731 = !DILocation(line: 602, column: 21, scope: !7729)
!7732 = !DILocation(line: 603, column: 78, scope: !7725)
!7733 = !DILocation(line: 603, column: 60, scope: !7725)
!7734 = !DILocation(line: 603, column: 54, scope: !7725)
!7735 = !DILocation(line: 603, column: 63, scope: !7725)
!7736 = !DILocation(line: 603, column: 37, scope: !7725)
!7737 = !DILocation(line: 603, column: 49, scope: !7725)
!7738 = !DILocation(line: 603, column: 40, scope: !7725)
!7739 = !DILocation(line: 603, column: 71, scope: !7725)
!7740 = !DILocation(line: 603, column: 75, scope: !7725)
!7741 = !DILocation(line: 603, column: 21, scope: !7725)
!7742 = !DILocation(line: 604, column: 21, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7003, file: !945, line: 604, column: 21)
!7744 = !DILocation(line: 604, column: 32, scope: !7743)
!7745 = !DILocation(line: 604, column: 37, scope: !7743)
!7746 = !DILocation(line: 604, column: 40, scope: !7747)
!7747 = !DILexicalBlockFile(scope: !7743, file: !945, discriminator: 1)
!7748 = !DILocation(line: 604, column: 52, scope: !7747)
!7749 = !DILocation(line: 604, column: 21, scope: !7747)
!7750 = !DILocation(line: 605, column: 74, scope: !7743)
!7751 = !DILocation(line: 605, column: 60, scope: !7743)
!7752 = !DILocation(line: 605, column: 54, scope: !7743)
!7753 = !DILocation(line: 605, column: 37, scope: !7743)
!7754 = !DILocation(line: 605, column: 49, scope: !7743)
!7755 = !DILocation(line: 605, column: 40, scope: !7743)
!7756 = !DILocation(line: 605, column: 67, scope: !7743)
!7757 = !DILocation(line: 605, column: 71, scope: !7743)
!7758 = !DILocation(line: 605, column: 21, scope: !7743)
!7759 = !DILocation(line: 606, column: 13, scope: !7003)
!7760 = !DILocation(line: 609, column: 56, scope: !6959)
!7761 = !DILocation(line: 609, column: 28, scope: !6959)
!7762 = !DILocation(line: 609, column: 51, scope: !6959)
!7763 = !DILocation(line: 609, column: 31, scope: !6959)
!7764 = !DILocation(line: 609, column: 40, scope: !6959)
!7765 = !DILocation(line: 610, column: 28, scope: !6959)
!7766 = !DILocation(line: 610, column: 39, scope: !6959)
!7767 = !DILocation(line: 610, column: 45, scope: !6959)
!7768 = !DILocation(line: 610, column: 57, scope: !6959)
!7769 = !DILocation(line: 610, column: 63, scope: !6959)
!7770 = !DILocation(line: 610, column: 66, scope: !6959)
!7771 = !DILocation(line: 611, column: 39, scope: !6959)
!7772 = !DILocation(line: 611, column: 43, scope: !6959)
!7773 = !DILocation(line: 611, column: 28, scope: !6959)
!7774 = !DILocation(line: 665, column: 13, scope: !6994, inlinedAt: !6998)
!7775 = !DILocation(line: 665, column: 15, scope: !6994, inlinedAt: !6998)
!7776 = !DILocation(line: 665, column: 28, scope: !6994, inlinedAt: !6998)
!7777 = !DILocation(line: 665, column: 30, scope: !6994, inlinedAt: !6998)
!7778 = !DILocation(line: 665, column: 25, scope: !6994, inlinedAt: !6998)
!7779 = !DILocation(line: 609, column: 13, scope: !6959)
!7780 = !DILocation(line: 42, column: 27, scope: !6953, inlinedAt: !6958)
!7781 = !DILocation(line: 46, column: 10, scope: !6953, inlinedAt: !6958)
!7782 = !DILocation(line: 46, column: 7, scope: !6953, inlinedAt: !6958)
!7783 = !DILocation(line: 47, column: 15, scope: !6953, inlinedAt: !6958)
!7784 = !DILocation(line: 47, column: 12, scope: !6953, inlinedAt: !6958)
!7785 = !DILocation(line: 51, column: 8, scope: !6978, inlinedAt: !6958)
!7786 = !DILocation(line: 51, column: 9, scope: !6978, inlinedAt: !6958)
!7787 = !DILocation(line: 51, column: 8, scope: !6953, inlinedAt: !6958)
!7788 = !DILocation(line: 52, column: 27, scope: !6977, inlinedAt: !6958)
!7789 = !DILocation(line: 52, column: 31, scope: !6977, inlinedAt: !6958)
!7790 = !DILocation(line: 52, column: 37, scope: !7791, inlinedAt: !6958)
!7791 = !DILexicalBlockFile(scope: !6977, file: !6954, discriminator: 1)
!7792 = !DILocation(line: 52, column: 27, scope: !7791, inlinedAt: !6958)
!7793 = !DILocation(line: 52, column: 43, scope: !7794, inlinedAt: !6958)
!7794 = !DILexicalBlockFile(scope: !6977, file: !6954, discriminator: 2)
!7795 = !DILocation(line: 52, column: 46, scope: !7794, inlinedAt: !6958)
!7796 = !DILocation(line: 52, column: 27, scope: !7794, inlinedAt: !6958)
!7797 = !DILocation(line: 52, column: 27, scope: !7798, inlinedAt: !6958)
!7798 = !DILexicalBlockFile(scope: !6977, file: !6954, discriminator: 3)
!7799 = !DILocation(line: 52, column: 24, scope: !7798, inlinedAt: !6958)
!7800 = !DILocation(line: 53, column: 37, scope: !6977, inlinedAt: !6958)
!7801 = !DILocation(line: 53, column: 22, scope: !6977, inlinedAt: !6958)
!7802 = !DILocation(line: 53, column: 28, scope: !6977, inlinedAt: !6958)
!7803 = !DILocation(line: 53, column: 9, scope: !6977, inlinedAt: !6958)
!7804 = !DILocation(line: 53, column: 35, scope: !6977, inlinedAt: !6958)
!7805 = !DILocation(line: 54, column: 12, scope: !7806, inlinedAt: !6958)
!7806 = distinct !DILexicalBlock(scope: !6977, file: !6954, line: 54, column: 12)
!7807 = !DILocation(line: 54, column: 13, scope: !7806, inlinedAt: !6958)
!7808 = !DILocation(line: 54, column: 12, scope: !6977, inlinedAt: !6958)
!7809 = !DILocation(line: 54, column: 18, scope: !7810, inlinedAt: !6958)
!7810 = !DILexicalBlockFile(scope: !7806, file: !6954, discriminator: 1)
!7811 = !DILocation(line: 55, column: 37, scope: !6977, inlinedAt: !6958)
!7812 = !DILocation(line: 55, column: 22, scope: !6977, inlinedAt: !6958)
!7813 = !DILocation(line: 55, column: 28, scope: !6977, inlinedAt: !6958)
!7814 = !DILocation(line: 55, column: 24, scope: !6977, inlinedAt: !6958)
!7815 = !DILocation(line: 55, column: 9, scope: !6977, inlinedAt: !6958)
!7816 = !DILocation(line: 55, column: 35, scope: !6977, inlinedAt: !6958)
!7817 = !DILocation(line: 56, column: 12, scope: !7818, inlinedAt: !6958)
!7818 = distinct !DILexicalBlock(scope: !6977, file: !6954, line: 56, column: 12)
!7819 = !DILocation(line: 56, column: 13, scope: !7818, inlinedAt: !6958)
!7820 = !DILocation(line: 56, column: 12, scope: !6977, inlinedAt: !6958)
!7821 = !DILocation(line: 56, column: 18, scope: !7822, inlinedAt: !6958)
!7822 = !DILexicalBlockFile(scope: !7818, file: !6954, discriminator: 1)
!7823 = !DILocation(line: 57, column: 37, scope: !6977, inlinedAt: !6958)
!7824 = !DILocation(line: 57, column: 22, scope: !6977, inlinedAt: !6958)
!7825 = !DILocation(line: 57, column: 28, scope: !6977, inlinedAt: !6958)
!7826 = !DILocation(line: 57, column: 27, scope: !6977, inlinedAt: !6958)
!7827 = !DILocation(line: 57, column: 24, scope: !6977, inlinedAt: !6958)
!7828 = !DILocation(line: 57, column: 9, scope: !6977, inlinedAt: !6958)
!7829 = !DILocation(line: 57, column: 35, scope: !6977, inlinedAt: !6958)
!7830 = !DILocation(line: 58, column: 37, scope: !6977, inlinedAt: !6958)
!7831 = !DILocation(line: 58, column: 22, scope: !6977, inlinedAt: !6958)
!7832 = !DILocation(line: 58, column: 28, scope: !6977, inlinedAt: !6958)
!7833 = !DILocation(line: 58, column: 27, scope: !6977, inlinedAt: !6958)
!7834 = !DILocation(line: 58, column: 24, scope: !6977, inlinedAt: !6958)
!7835 = !DILocation(line: 58, column: 9, scope: !6977, inlinedAt: !6958)
!7836 = !DILocation(line: 58, column: 35, scope: !6977, inlinedAt: !6958)
!7837 = !DILocation(line: 59, column: 5, scope: !6977, inlinedAt: !6958)
!7838 = !DILocation(line: 59, column: 14, scope: !7839, inlinedAt: !6958)
!7839 = !DILexicalBlockFile(scope: !6983, file: !6954, discriminator: 1)
!7840 = !DILocation(line: 59, column: 15, scope: !7839, inlinedAt: !6958)
!7841 = !DILocation(line: 60, column: 27, scope: !6982, inlinedAt: !6958)
!7842 = !DILocation(line: 60, column: 31, scope: !6982, inlinedAt: !6958)
!7843 = !DILocation(line: 60, column: 37, scope: !7844, inlinedAt: !6958)
!7844 = !DILexicalBlockFile(scope: !6982, file: !6954, discriminator: 1)
!7845 = !DILocation(line: 60, column: 27, scope: !7844, inlinedAt: !6958)
!7846 = !DILocation(line: 60, column: 43, scope: !7847, inlinedAt: !6958)
!7847 = !DILexicalBlockFile(scope: !6982, file: !6954, discriminator: 2)
!7848 = !DILocation(line: 60, column: 47, scope: !7847, inlinedAt: !6958)
!7849 = !DILocation(line: 60, column: 53, scope: !7850, inlinedAt: !6958)
!7850 = !DILexicalBlockFile(scope: !6982, file: !6954, discriminator: 3)
!7851 = !DILocation(line: 60, column: 56, scope: !7850, inlinedAt: !6958)
!7852 = !DILocation(line: 60, column: 43, scope: !7850, inlinedAt: !6958)
!7853 = !DILocation(line: 60, column: 70, scope: !7854, inlinedAt: !6958)
!7854 = !DILexicalBlockFile(scope: !6982, file: !6954, discriminator: 4)
!7855 = !DILocation(line: 60, column: 73, scope: !7854, inlinedAt: !6958)
!7856 = !DILocation(line: 60, column: 43, scope: !7854, inlinedAt: !6958)
!7857 = !DILocation(line: 60, column: 43, scope: !7858, inlinedAt: !6958)
!7858 = !DILexicalBlockFile(scope: !6982, file: !6954, discriminator: 5)
!7859 = !DILocation(line: 60, column: 27, scope: !7858, inlinedAt: !6958)
!7860 = !DILocation(line: 60, column: 27, scope: !7861, inlinedAt: !6958)
!7861 = !DILexicalBlockFile(scope: !6982, file: !6954, discriminator: 6)
!7862 = !DILocation(line: 60, column: 24, scope: !7861, inlinedAt: !6958)
!7863 = !DILocation(line: 61, column: 37, scope: !6982, inlinedAt: !6958)
!7864 = !DILocation(line: 61, column: 22, scope: !6982, inlinedAt: !6958)
!7865 = !DILocation(line: 61, column: 28, scope: !6982, inlinedAt: !6958)
!7866 = !DILocation(line: 61, column: 9, scope: !6982, inlinedAt: !6958)
!7867 = !DILocation(line: 61, column: 35, scope: !6982, inlinedAt: !6958)
!7868 = !DILocation(line: 62, column: 12, scope: !7869, inlinedAt: !6958)
!7869 = distinct !DILexicalBlock(scope: !6982, file: !6954, line: 62, column: 12)
!7870 = !DILocation(line: 62, column: 13, scope: !7869, inlinedAt: !6958)
!7871 = !DILocation(line: 62, column: 12, scope: !6982, inlinedAt: !6958)
!7872 = !DILocation(line: 62, column: 18, scope: !7873, inlinedAt: !6958)
!7873 = !DILexicalBlockFile(scope: !7869, file: !6954, discriminator: 1)
!7874 = !DILocation(line: 63, column: 37, scope: !6982, inlinedAt: !6958)
!7875 = !DILocation(line: 63, column: 22, scope: !6982, inlinedAt: !6958)
!7876 = !DILocation(line: 63, column: 28, scope: !6982, inlinedAt: !6958)
!7877 = !DILocation(line: 63, column: 24, scope: !6982, inlinedAt: !6958)
!7878 = !DILocation(line: 63, column: 9, scope: !6982, inlinedAt: !6958)
!7879 = !DILocation(line: 63, column: 35, scope: !6982, inlinedAt: !6958)
!7880 = !DILocation(line: 64, column: 12, scope: !7881, inlinedAt: !6958)
!7881 = distinct !DILexicalBlock(scope: !6982, file: !6954, line: 64, column: 12)
!7882 = !DILocation(line: 64, column: 13, scope: !7881, inlinedAt: !6958)
!7883 = !DILocation(line: 64, column: 12, scope: !6982, inlinedAt: !6958)
!7884 = !DILocation(line: 64, column: 18, scope: !7885, inlinedAt: !6958)
!7885 = !DILexicalBlockFile(scope: !7881, file: !6954, discriminator: 1)
!7886 = !DILocation(line: 65, column: 37, scope: !6982, inlinedAt: !6958)
!7887 = !DILocation(line: 65, column: 22, scope: !6982, inlinedAt: !6958)
!7888 = !DILocation(line: 65, column: 28, scope: !6982, inlinedAt: !6958)
!7889 = !DILocation(line: 65, column: 27, scope: !6982, inlinedAt: !6958)
!7890 = !DILocation(line: 65, column: 24, scope: !6982, inlinedAt: !6958)
!7891 = !DILocation(line: 65, column: 9, scope: !6982, inlinedAt: !6958)
!7892 = !DILocation(line: 65, column: 35, scope: !6982, inlinedAt: !6958)
!7893 = !DILocation(line: 66, column: 37, scope: !6982, inlinedAt: !6958)
!7894 = !DILocation(line: 66, column: 22, scope: !6982, inlinedAt: !6958)
!7895 = !DILocation(line: 66, column: 28, scope: !6982, inlinedAt: !6958)
!7896 = !DILocation(line: 66, column: 27, scope: !6982, inlinedAt: !6958)
!7897 = !DILocation(line: 66, column: 24, scope: !6982, inlinedAt: !6958)
!7898 = !DILocation(line: 66, column: 9, scope: !6982, inlinedAt: !6958)
!7899 = !DILocation(line: 66, column: 35, scope: !6982, inlinedAt: !6958)
!7900 = !DILocation(line: 67, column: 5, scope: !6982, inlinedAt: !6958)
!7901 = !DILocation(line: 67, column: 14, scope: !7902, inlinedAt: !6958)
!7902 = !DILexicalBlockFile(scope: !6987, file: !6954, discriminator: 1)
!7903 = !DILocation(line: 67, column: 15, scope: !7902, inlinedAt: !6958)
!7904 = !DILocation(line: 70, column: 27, scope: !6986, inlinedAt: !6958)
!7905 = !DILocation(line: 70, column: 31, scope: !6986, inlinedAt: !6958)
!7906 = !DILocation(line: 70, column: 37, scope: !7907, inlinedAt: !6958)
!7907 = !DILexicalBlockFile(scope: !6986, file: !6954, discriminator: 1)
!7908 = !DILocation(line: 70, column: 40, scope: !7907, inlinedAt: !6958)
!7909 = !DILocation(line: 70, column: 27, scope: !7907, inlinedAt: !6958)
!7910 = !DILocation(line: 70, column: 65, scope: !7911, inlinedAt: !6958)
!7911 = !DILexicalBlockFile(scope: !6986, file: !6954, discriminator: 2)
!7912 = !DILocation(line: 70, column: 68, scope: !7911, inlinedAt: !6958)
!7913 = !DILocation(line: 70, column: 27, scope: !7911, inlinedAt: !6958)
!7914 = !DILocation(line: 70, column: 27, scope: !7915, inlinedAt: !6958)
!7915 = !DILexicalBlockFile(scope: !6986, file: !6954, discriminator: 3)
!7916 = !DILocation(line: 70, column: 24, scope: !7915, inlinedAt: !6958)
!7917 = !DILocation(line: 71, column: 37, scope: !6986, inlinedAt: !6958)
!7918 = !DILocation(line: 71, column: 22, scope: !6986, inlinedAt: !6958)
!7919 = !DILocation(line: 71, column: 28, scope: !6986, inlinedAt: !6958)
!7920 = !DILocation(line: 71, column: 9, scope: !6986, inlinedAt: !6958)
!7921 = !DILocation(line: 71, column: 35, scope: !6986, inlinedAt: !6958)
!7922 = !DILocation(line: 72, column: 12, scope: !7923, inlinedAt: !6958)
!7923 = distinct !DILexicalBlock(scope: !6986, file: !6954, line: 72, column: 12)
!7924 = !DILocation(line: 72, column: 13, scope: !7923, inlinedAt: !6958)
!7925 = !DILocation(line: 72, column: 12, scope: !6986, inlinedAt: !6958)
!7926 = !DILocation(line: 72, column: 18, scope: !7927, inlinedAt: !6958)
!7927 = !DILexicalBlockFile(scope: !7923, file: !6954, discriminator: 1)
!7928 = !DILocation(line: 73, column: 37, scope: !6986, inlinedAt: !6958)
!7929 = !DILocation(line: 73, column: 22, scope: !6986, inlinedAt: !6958)
!7930 = !DILocation(line: 73, column: 28, scope: !6986, inlinedAt: !6958)
!7931 = !DILocation(line: 73, column: 24, scope: !6986, inlinedAt: !6958)
!7932 = !DILocation(line: 73, column: 9, scope: !6986, inlinedAt: !6958)
!7933 = !DILocation(line: 73, column: 35, scope: !6986, inlinedAt: !6958)
!7934 = !DILocation(line: 74, column: 12, scope: !7935, inlinedAt: !6958)
!7935 = distinct !DILexicalBlock(scope: !6986, file: !6954, line: 74, column: 12)
!7936 = !DILocation(line: 74, column: 13, scope: !7935, inlinedAt: !6958)
!7937 = !DILocation(line: 74, column: 12, scope: !6986, inlinedAt: !6958)
!7938 = !DILocation(line: 74, column: 18, scope: !7939, inlinedAt: !6958)
!7939 = !DILexicalBlockFile(scope: !7935, file: !6954, discriminator: 1)
!7940 = !DILocation(line: 75, column: 37, scope: !6986, inlinedAt: !6958)
!7941 = !DILocation(line: 75, column: 22, scope: !6986, inlinedAt: !6958)
!7942 = !DILocation(line: 75, column: 28, scope: !6986, inlinedAt: !6958)
!7943 = !DILocation(line: 75, column: 27, scope: !6986, inlinedAt: !6958)
!7944 = !DILocation(line: 75, column: 24, scope: !6986, inlinedAt: !6958)
!7945 = !DILocation(line: 75, column: 9, scope: !6986, inlinedAt: !6958)
!7946 = !DILocation(line: 75, column: 35, scope: !6986, inlinedAt: !6958)
!7947 = !DILocation(line: 76, column: 37, scope: !6986, inlinedAt: !6958)
!7948 = !DILocation(line: 76, column: 22, scope: !6986, inlinedAt: !6958)
!7949 = !DILocation(line: 76, column: 28, scope: !6986, inlinedAt: !6958)
!7950 = !DILocation(line: 76, column: 27, scope: !6986, inlinedAt: !6958)
!7951 = !DILocation(line: 76, column: 24, scope: !6986, inlinedAt: !6958)
!7952 = !DILocation(line: 76, column: 9, scope: !6986, inlinedAt: !6958)
!7953 = !DILocation(line: 76, column: 35, scope: !6986, inlinedAt: !6958)
!7954 = !DILocation(line: 77, column: 5, scope: !6986, inlinedAt: !6958)
!7955 = !DILocation(line: 77, column: 14, scope: !7956, inlinedAt: !6958)
!7956 = !DILexicalBlockFile(scope: !6991, file: !6954, discriminator: 1)
!7957 = !DILocation(line: 77, column: 15, scope: !7956, inlinedAt: !6958)
!7958 = !DILocation(line: 78, column: 27, scope: !6990, inlinedAt: !6958)
!7959 = !DILocation(line: 78, column: 30, scope: !6990, inlinedAt: !6958)
!7960 = !DILocation(line: 79, column: 39, scope: !6990, inlinedAt: !6958)
!7961 = !DILocation(line: 79, column: 22, scope: !6990, inlinedAt: !6958)
!7962 = !DILocation(line: 79, column: 30, scope: !6990, inlinedAt: !6958)
!7963 = !DILocation(line: 79, column: 9, scope: !6990, inlinedAt: !6958)
!7964 = !DILocation(line: 79, column: 37, scope: !6990, inlinedAt: !6958)
!7965 = !DILocation(line: 80, column: 39, scope: !6990, inlinedAt: !6958)
!7966 = !DILocation(line: 80, column: 22, scope: !6990, inlinedAt: !6958)
!7967 = !DILocation(line: 80, column: 24, scope: !6990, inlinedAt: !6958)
!7968 = !DILocation(line: 80, column: 30, scope: !6990, inlinedAt: !6958)
!7969 = !DILocation(line: 80, column: 9, scope: !6990, inlinedAt: !6958)
!7970 = !DILocation(line: 80, column: 37, scope: !6990, inlinedAt: !6958)
!7971 = !DILocation(line: 81, column: 39, scope: !6990, inlinedAt: !6958)
!7972 = !DILocation(line: 81, column: 22, scope: !6990, inlinedAt: !6958)
!7973 = !DILocation(line: 81, column: 30, scope: !6990, inlinedAt: !6958)
!7974 = !DILocation(line: 81, column: 27, scope: !6990, inlinedAt: !6958)
!7975 = !DILocation(line: 81, column: 9, scope: !6990, inlinedAt: !6958)
!7976 = !DILocation(line: 81, column: 37, scope: !6990, inlinedAt: !6958)
!7977 = !DILocation(line: 82, column: 39, scope: !6990, inlinedAt: !6958)
!7978 = !DILocation(line: 82, column: 22, scope: !6990, inlinedAt: !6958)
!7979 = !DILocation(line: 82, column: 24, scope: !6990, inlinedAt: !6958)
!7980 = !DILocation(line: 82, column: 30, scope: !6990, inlinedAt: !6958)
!7981 = !DILocation(line: 82, column: 27, scope: !6990, inlinedAt: !6958)
!7982 = !DILocation(line: 82, column: 9, scope: !6990, inlinedAt: !6958)
!7983 = !DILocation(line: 82, column: 37, scope: !6990, inlinedAt: !6958)
!7984 = !DILocation(line: 83, column: 12, scope: !7985, inlinedAt: !6958)
!7985 = distinct !DILexicalBlock(scope: !6990, file: !6954, line: 83, column: 12)
!7986 = !DILocation(line: 83, column: 13, scope: !7985, inlinedAt: !6958)
!7987 = !DILocation(line: 83, column: 12, scope: !6990, inlinedAt: !6958)
!7988 = !DILocation(line: 83, column: 18, scope: !7989, inlinedAt: !6958)
!7989 = !DILexicalBlockFile(scope: !7985, file: !6954, discriminator: 1)
!7990 = !DILocation(line: 84, column: 39, scope: !6990, inlinedAt: !6958)
!7991 = !DILocation(line: 84, column: 22, scope: !6990, inlinedAt: !6958)
!7992 = !DILocation(line: 84, column: 30, scope: !6990, inlinedAt: !6958)
!7993 = !DILocation(line: 84, column: 29, scope: !6990, inlinedAt: !6958)
!7994 = !DILocation(line: 84, column: 27, scope: !6990, inlinedAt: !6958)
!7995 = !DILocation(line: 84, column: 9, scope: !6990, inlinedAt: !6958)
!7996 = !DILocation(line: 84, column: 37, scope: !6990, inlinedAt: !6958)
!7997 = !DILocation(line: 85, column: 39, scope: !6990, inlinedAt: !6958)
!7998 = !DILocation(line: 85, column: 22, scope: !6990, inlinedAt: !6958)
!7999 = !DILocation(line: 85, column: 24, scope: !6990, inlinedAt: !6958)
!8000 = !DILocation(line: 85, column: 30, scope: !6990, inlinedAt: !6958)
!8001 = !DILocation(line: 85, column: 29, scope: !6990, inlinedAt: !6958)
!8002 = !DILocation(line: 85, column: 27, scope: !6990, inlinedAt: !6958)
!8003 = !DILocation(line: 85, column: 9, scope: !6990, inlinedAt: !6958)
!8004 = !DILocation(line: 85, column: 37, scope: !6990, inlinedAt: !6958)
!8005 = !DILocation(line: 86, column: 39, scope: !6990, inlinedAt: !6958)
!8006 = !DILocation(line: 86, column: 22, scope: !6990, inlinedAt: !6958)
!8007 = !DILocation(line: 86, column: 30, scope: !6990, inlinedAt: !6958)
!8008 = !DILocation(line: 86, column: 29, scope: !6990, inlinedAt: !6958)
!8009 = !DILocation(line: 86, column: 27, scope: !6990, inlinedAt: !6958)
!8010 = !DILocation(line: 86, column: 9, scope: !6990, inlinedAt: !6958)
!8011 = !DILocation(line: 86, column: 37, scope: !6990, inlinedAt: !6958)
!8012 = !DILocation(line: 87, column: 39, scope: !6990, inlinedAt: !6958)
!8013 = !DILocation(line: 87, column: 22, scope: !6990, inlinedAt: !6958)
!8014 = !DILocation(line: 87, column: 24, scope: !6990, inlinedAt: !6958)
!8015 = !DILocation(line: 87, column: 30, scope: !6990, inlinedAt: !6958)
!8016 = !DILocation(line: 87, column: 29, scope: !6990, inlinedAt: !6958)
!8017 = !DILocation(line: 87, column: 27, scope: !6990, inlinedAt: !6958)
!8018 = !DILocation(line: 87, column: 9, scope: !6990, inlinedAt: !6958)
!8019 = !DILocation(line: 87, column: 37, scope: !6990, inlinedAt: !6958)
!8020 = !DILocation(line: 119, column: 5, scope: !6990, inlinedAt: !6958)
!8021 = !DILocation(line: 612, column: 9, scope: !6959)
!8022 = !DILocation(line: 515, column: 34, scope: !8023)
!8023 = !DILexicalBlockFile(scope: !6960, file: !945, discriminator: 2)
!8024 = !DILocation(line: 515, column: 31, scope: !8023)
!8025 = !DILocation(line: 515, column: 9, scope: !8023)
!8026 = distinct !{!8026, !8027}
!8027 = !DILocation(line: 515, column: 9, scope: !6962)
!8028 = !DILocation(line: 612, column: 9, scope: !8029)
!8029 = !DILexicalBlockFile(scope: !6961, file: !945, discriminator: 1)
!8030 = !DILocation(line: 514, column: 30, scope: !8031)
!8031 = !DILexicalBlockFile(scope: !6962, file: !945, discriminator: 2)
!8032 = !DILocation(line: 514, column: 27, scope: !8031)
!8033 = !DILocation(line: 514, column: 5, scope: !8031)
!8034 = distinct !{!8034, !8035}
!8035 = !DILocation(line: 514, column: 5, scope: !6949)
!8036 = !DILocation(line: 614, column: 5, scope: !6949)
!8037 = !DILocation(line: 615, column: 1, scope: !6949)
!8038 = distinct !DISubprogram(name: "get_interleaved_se_golomb", scope: !3815, file: !3815, line: 299, type: !3785, isLocal: true, isDefinition: true, scopeLine: 300, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!8039 = !DILocation(line: 66, column: 98, scope: !1723, inlinedAt: !8040)
!8040 = distinct !DILocation(line: 340, column: 20, scope: !8041)
!8041 = distinct !DILexicalBlock(scope: !8042, file: !3815, line: 337, column: 12)
!8042 = distinct !DILexicalBlock(scope: !8038, file: !3815, line: 331, column: 9)
!8043 = !DILocation(line: 66, column: 98, scope: !1723, inlinedAt: !8044)
!8044 = distinct !DILocation(line: 328, column: 16, scope: !8038)
!8045 = !DILocalVariable(name: "gb", arg: 1, scope: !8038, file: !3815, line: 299, type: !1682)
!8046 = !DILocation(line: 299, column: 60, scope: !8038)
!8047 = !DILocalVariable(name: "buf", scope: !8038, file: !3815, line: 301, type: !898)
!8048 = !DILocation(line: 301, column: 18, scope: !8038)
!8049 = !DILocalVariable(name: "re_index", scope: !8038, file: !3815, line: 327, type: !898)
!8050 = !DILocation(line: 327, column: 18, scope: !8038)
!8051 = !DILocation(line: 327, column: 30, scope: !8038)
!8052 = !DILocation(line: 327, column: 35, scope: !8038)
!8053 = !DILocalVariable(name: "re_cache", scope: !8038, file: !3815, line: 327, type: !898)
!8054 = !DILocation(line: 327, column: 79, scope: !8038)
!8055 = !DILocalVariable(name: "re_size_plus8", scope: !8038, file: !3815, line: 327, type: !898)
!8056 = !DILocation(line: 327, column: 102, scope: !8038)
!8057 = !DILocation(line: 327, column: 119, scope: !8038)
!8058 = !DILocation(line: 327, column: 124, scope: !8038)
!8059 = !DILocation(line: 328, column: 60, scope: !8038)
!8060 = !DILocation(line: 328, column: 65, scope: !8038)
!8061 = !DILocation(line: 328, column: 75, scope: !8038)
!8062 = !DILocation(line: 328, column: 84, scope: !8038)
!8063 = !DILocation(line: 328, column: 72, scope: !8038)
!8064 = !DILocation(line: 328, column: 93, scope: !8038)
!8065 = !DILocation(line: 328, column: 16, scope: !8038)
!8066 = !DILocation(line: 68, column: 16, scope: !1723, inlinedAt: !8044)
!8067 = !DILocation(line: 68, column: 19, scope: !1723, inlinedAt: !8044)
!8068 = !DILocation(line: 68, column: 24, scope: !1723, inlinedAt: !8044)
!8069 = !DILocation(line: 68, column: 38, scope: !1723, inlinedAt: !8044)
!8070 = !DILocation(line: 68, column: 41, scope: !1723, inlinedAt: !8044)
!8071 = !DILocation(line: 68, column: 46, scope: !1723, inlinedAt: !8044)
!8072 = !DILocation(line: 68, column: 34, scope: !1723, inlinedAt: !8044)
!8073 = !DILocation(line: 68, column: 57, scope: !1723, inlinedAt: !8044)
!8074 = !DILocation(line: 68, column: 69, scope: !1723, inlinedAt: !8044)
!8075 = !DILocation(line: 68, column: 72, scope: !1723, inlinedAt: !8044)
!8076 = !DILocation(line: 68, column: 79, scope: !1723, inlinedAt: !8044)
!8077 = !DILocation(line: 68, column: 84, scope: !1723, inlinedAt: !8044)
!8078 = !DILocation(line: 68, column: 99, scope: !1723, inlinedAt: !8044)
!8079 = !DILocation(line: 68, column: 102, scope: !1723, inlinedAt: !8044)
!8080 = !DILocation(line: 68, column: 109, scope: !1723, inlinedAt: !8044)
!8081 = !DILocation(line: 68, column: 114, scope: !1723, inlinedAt: !8044)
!8082 = !DILocation(line: 68, column: 94, scope: !1723, inlinedAt: !8044)
!8083 = !DILocation(line: 68, column: 63, scope: !1723, inlinedAt: !8044)
!8084 = !DILocation(line: 328, column: 101, scope: !8038)
!8085 = !DILocation(line: 328, column: 110, scope: !8038)
!8086 = !DILocation(line: 328, column: 97, scope: !8038)
!8087 = !DILocation(line: 328, column: 14, scope: !8038)
!8088 = !DILocation(line: 329, column: 23, scope: !8038)
!8089 = !DILocation(line: 329, column: 9, scope: !8038)
!8090 = !DILocation(line: 331, column: 9, scope: !8042)
!8091 = !DILocation(line: 331, column: 13, scope: !8042)
!8092 = !DILocation(line: 331, column: 9, scope: !8038)
!8093 = !DILocation(line: 332, column: 13, scope: !8094)
!8094 = distinct !DILexicalBlock(scope: !8042, file: !3815, line: 331, column: 27)
!8095 = !DILocation(line: 333, column: 22, scope: !8094)
!8096 = !DILocation(line: 333, column: 40, scope: !8094)
!8097 = !DILocation(line: 333, column: 82, scope: !8094)
!8098 = !DILocation(line: 333, column: 52, scope: !8094)
!8099 = !DILocation(line: 333, column: 51, scope: !8094)
!8100 = !DILocation(line: 333, column: 49, scope: !8094)
!8101 = !DILocation(line: 333, column: 37, scope: !8094)
!8102 = !DILocation(line: 333, column: 21, scope: !8094)
!8103 = !DILocation(line: 333, column: 92, scope: !8104)
!8104 = !DILexicalBlockFile(scope: !8094, file: !3815, discriminator: 1)
!8105 = !DILocation(line: 333, column: 134, scope: !8104)
!8106 = !DILocation(line: 333, column: 104, scope: !8104)
!8107 = !DILocation(line: 333, column: 103, scope: !8104)
!8108 = !DILocation(line: 333, column: 101, scope: !8104)
!8109 = !DILocation(line: 333, column: 21, scope: !8104)
!8110 = !DILocation(line: 333, column: 144, scope: !8111)
!8111 = !DILexicalBlockFile(scope: !8094, file: !3815, discriminator: 2)
!8112 = !DILocation(line: 333, column: 21, scope: !8111)
!8113 = !DILocation(line: 333, column: 21, scope: !8114)
!8114 = !DILexicalBlockFile(scope: !8094, file: !3815, discriminator: 3)
!8115 = !DILocation(line: 333, column: 18, scope: !8114)
!8116 = !DILocation(line: 334, column: 23, scope: !8094)
!8117 = !DILocation(line: 334, column: 10, scope: !8094)
!8118 = !DILocation(line: 334, column: 15, scope: !8094)
!8119 = !DILocation(line: 334, column: 21, scope: !8094)
!8120 = !DILocation(line: 336, column: 50, scope: !8094)
!8121 = !DILocation(line: 336, column: 16, scope: !8094)
!8122 = !DILocation(line: 336, column: 9, scope: !8094)
!8123 = !DILocalVariable(name: "log", scope: !8041, file: !3815, line: 338, type: !899)
!8124 = !DILocation(line: 338, column: 13, scope: !8041)
!8125 = !DILocation(line: 339, column: 22, scope: !8041)
!8126 = !DILocation(line: 339, column: 40, scope: !8041)
!8127 = !DILocation(line: 339, column: 49, scope: !8041)
!8128 = !DILocation(line: 339, column: 37, scope: !8041)
!8129 = !DILocation(line: 339, column: 21, scope: !8041)
!8130 = !DILocation(line: 339, column: 59, scope: !8131)
!8131 = !DILexicalBlockFile(scope: !8041, file: !3815, discriminator: 1)
!8132 = !DILocation(line: 339, column: 68, scope: !8131)
!8133 = !DILocation(line: 339, column: 21, scope: !8131)
!8134 = !DILocation(line: 339, column: 78, scope: !8135)
!8135 = !DILexicalBlockFile(scope: !8041, file: !3815, discriminator: 2)
!8136 = !DILocation(line: 339, column: 21, scope: !8135)
!8137 = !DILocation(line: 339, column: 21, scope: !8138)
!8138 = !DILexicalBlockFile(scope: !8041, file: !3815, discriminator: 3)
!8139 = !DILocation(line: 339, column: 18, scope: !8138)
!8140 = !DILocation(line: 340, column: 64, scope: !8041)
!8141 = !DILocation(line: 340, column: 69, scope: !8041)
!8142 = !DILocation(line: 340, column: 79, scope: !8041)
!8143 = !DILocation(line: 340, column: 88, scope: !8041)
!8144 = !DILocation(line: 340, column: 76, scope: !8041)
!8145 = !DILocation(line: 340, column: 97, scope: !8041)
!8146 = !DILocation(line: 340, column: 20, scope: !8041)
!8147 = !DILocation(line: 68, column: 16, scope: !1723, inlinedAt: !8040)
!8148 = !DILocation(line: 68, column: 19, scope: !1723, inlinedAt: !8040)
!8149 = !DILocation(line: 68, column: 24, scope: !1723, inlinedAt: !8040)
!8150 = !DILocation(line: 68, column: 38, scope: !1723, inlinedAt: !8040)
!8151 = !DILocation(line: 68, column: 41, scope: !1723, inlinedAt: !8040)
!8152 = !DILocation(line: 68, column: 46, scope: !1723, inlinedAt: !8040)
!8153 = !DILocation(line: 68, column: 34, scope: !1723, inlinedAt: !8040)
!8154 = !DILocation(line: 68, column: 57, scope: !1723, inlinedAt: !8040)
!8155 = !DILocation(line: 68, column: 69, scope: !1723, inlinedAt: !8040)
!8156 = !DILocation(line: 68, column: 72, scope: !1723, inlinedAt: !8040)
!8157 = !DILocation(line: 68, column: 79, scope: !1723, inlinedAt: !8040)
!8158 = !DILocation(line: 68, column: 84, scope: !1723, inlinedAt: !8040)
!8159 = !DILocation(line: 68, column: 99, scope: !1723, inlinedAt: !8040)
!8160 = !DILocation(line: 68, column: 102, scope: !1723, inlinedAt: !8040)
!8161 = !DILocation(line: 68, column: 109, scope: !1723, inlinedAt: !8040)
!8162 = !DILocation(line: 68, column: 114, scope: !1723, inlinedAt: !8040)
!8163 = !DILocation(line: 68, column: 94, scope: !1723, inlinedAt: !8040)
!8164 = !DILocation(line: 68, column: 63, scope: !1723, inlinedAt: !8040)
!8165 = !DILocation(line: 340, column: 105, scope: !8041)
!8166 = !DILocation(line: 340, column: 114, scope: !8041)
!8167 = !DILocation(line: 340, column: 101, scope: !8041)
!8168 = !DILocation(line: 340, column: 18, scope: !8041)
!8169 = !DILocation(line: 341, column: 33, scope: !8041)
!8170 = !DILocation(line: 341, column: 43, scope: !8041)
!8171 = !DILocation(line: 341, column: 18, scope: !8041)
!8172 = !DILocation(line: 341, column: 13, scope: !8041)
!8173 = !DILocation(line: 343, column: 14, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !8041, file: !3815, line: 343, column: 13)
!8175 = !DILocation(line: 343, column: 18, scope: !8174)
!8176 = !DILocation(line: 343, column: 32, scope: !8174)
!8177 = !DILocation(line: 343, column: 13, scope: !8041)
!8178 = !DILocation(line: 344, column: 13, scope: !8174)
!8179 = !DILocation(line: 346, column: 18, scope: !8180)
!8180 = distinct !DILexicalBlock(scope: !8041, file: !3815, line: 346, column: 9)
!8181 = !DILocation(line: 346, column: 14, scope: !8180)
!8182 = !DILocation(line: 346, column: 25, scope: !8183)
!8183 = !DILexicalBlockFile(scope: !8184, file: !3815, discriminator: 1)
!8184 = distinct !DILexicalBlock(scope: !8180, file: !3815, line: 346, column: 9)
!8185 = !DILocation(line: 346, column: 29, scope: !8183)
!8186 = !DILocation(line: 346, column: 43, scope: !8183)
!8187 = !DILocation(line: 346, column: 9, scope: !8183)
!8188 = !DILocation(line: 347, column: 20, scope: !8184)
!8189 = !DILocation(line: 347, column: 24, scope: !8184)
!8190 = !DILocation(line: 347, column: 34, scope: !8184)
!8191 = !DILocation(line: 347, column: 41, scope: !8184)
!8192 = !DILocation(line: 347, column: 38, scope: !8184)
!8193 = !DILocation(line: 347, column: 50, scope: !8184)
!8194 = !DILocation(line: 347, column: 54, scope: !8184)
!8195 = !DILocation(line: 347, column: 46, scope: !8184)
!8196 = !DILocation(line: 347, column: 30, scope: !8184)
!8197 = !DILocation(line: 347, column: 63, scope: !8184)
!8198 = !DILocation(line: 347, column: 67, scope: !8184)
!8199 = !DILocation(line: 347, column: 60, scope: !8184)
!8200 = !DILocation(line: 347, column: 17, scope: !8184)
!8201 = !DILocation(line: 347, column: 13, scope: !8184)
!8202 = !DILocation(line: 346, column: 52, scope: !8203)
!8203 = !DILexicalBlockFile(scope: !8184, file: !3815, discriminator: 2)
!8204 = !DILocation(line: 346, column: 9, scope: !8203)
!8205 = distinct !{!8205, !8206}
!8206 = !DILocation(line: 346, column: 9, scope: !8041)
!8207 = !DILocation(line: 349, column: 22, scope: !8041)
!8208 = !DILocation(line: 349, column: 40, scope: !8041)
!8209 = !DILocation(line: 349, column: 61, scope: !8041)
!8210 = !DILocation(line: 349, column: 59, scope: !8041)
!8211 = !DILocation(line: 349, column: 55, scope: !8041)
!8212 = !DILocation(line: 349, column: 65, scope: !8041)
!8213 = !DILocation(line: 349, column: 49, scope: !8041)
!8214 = !DILocation(line: 349, column: 37, scope: !8041)
!8215 = !DILocation(line: 349, column: 21, scope: !8041)
!8216 = !DILocation(line: 349, column: 74, scope: !8131)
!8217 = !DILocation(line: 349, column: 95, scope: !8131)
!8218 = !DILocation(line: 349, column: 93, scope: !8131)
!8219 = !DILocation(line: 349, column: 89, scope: !8131)
!8220 = !DILocation(line: 349, column: 99, scope: !8131)
!8221 = !DILocation(line: 349, column: 83, scope: !8131)
!8222 = !DILocation(line: 349, column: 21, scope: !8131)
!8223 = !DILocation(line: 349, column: 108, scope: !8135)
!8224 = !DILocation(line: 349, column: 21, scope: !8135)
!8225 = !DILocation(line: 349, column: 21, scope: !8138)
!8226 = !DILocation(line: 349, column: 18, scope: !8138)
!8227 = !DILocation(line: 350, column: 23, scope: !8041)
!8228 = !DILocation(line: 350, column: 10, scope: !8041)
!8229 = !DILocation(line: 350, column: 15, scope: !8041)
!8230 = !DILocation(line: 350, column: 21, scope: !8041)
!8231 = !DILocation(line: 352, column: 30, scope: !8041)
!8232 = !DILocation(line: 352, column: 37, scope: !8041)
!8233 = !DILocation(line: 352, column: 34, scope: !8041)
!8234 = !DILocation(line: 352, column: 45, scope: !8041)
!8235 = !DILocation(line: 352, column: 42, scope: !8041)
!8236 = !DILocation(line: 352, column: 50, scope: !8041)
!8237 = !DILocation(line: 352, column: 59, scope: !8041)
!8238 = !DILocation(line: 352, column: 63, scope: !8041)
!8239 = !DILocation(line: 352, column: 57, scope: !8041)
!8240 = !DILocation(line: 352, column: 55, scope: !8041)
!8241 = !DILocation(line: 352, column: 71, scope: !8041)
!8242 = !DILocation(line: 352, column: 76, scope: !8041)
!8243 = !DILocation(line: 352, column: 9, scope: !8041)
!8244 = !DILocation(line: 355, column: 1, scope: !8038)
!8245 = !DILocalVariable(name: "gb", arg: 1, scope: !1679, file: !945, line: 299, type: !1682)
!8246 = !DILocation(line: 299, column: 52, scope: !1679)
!8247 = !DILocalVariable(name: "block", arg: 2, scope: !1679, file: !945, line: 299, type: !1692)
!8248 = !DILocation(line: 299, column: 65, scope: !1679)
!8249 = !DILocalVariable(name: "index", arg: 3, scope: !1679, file: !945, line: 300, type: !899)
!8250 = !DILocation(line: 300, column: 41, scope: !1679)
!8251 = !DILocalVariable(name: "type", arg: 4, scope: !1679, file: !945, line: 300, type: !971)
!8252 = !DILocation(line: 300, column: 58, scope: !1679)
!8253 = !DILocalVariable(name: "run", scope: !1679, file: !945, line: 306, type: !899)
!8254 = !DILocation(line: 306, column: 9, scope: !1679)
!8255 = !DILocalVariable(name: "level", scope: !1679, file: !945, line: 306, type: !899)
!8256 = !DILocation(line: 306, column: 14, scope: !1679)
!8257 = !DILocalVariable(name: "sign", scope: !1679, file: !945, line: 306, type: !899)
!8258 = !DILocation(line: 306, column: 21, scope: !1679)
!8259 = !DILocalVariable(name: "limit", scope: !1679, file: !945, line: 306, type: !899)
!8260 = !DILocation(line: 306, column: 27, scope: !1679)
!8261 = !DILocalVariable(name: "vlc", scope: !1679, file: !945, line: 307, type: !898)
!8262 = !DILocation(line: 307, column: 14, scope: !1679)
!8263 = !DILocalVariable(name: "intra", scope: !1679, file: !945, line: 308, type: !971)
!8264 = !DILocation(line: 308, column: 15, scope: !1679)
!8265 = !DILocation(line: 308, column: 27, scope: !1679)
!8266 = !DILocation(line: 308, column: 25, scope: !1679)
!8267 = !DILocation(line: 308, column: 32, scope: !1679)
!8268 = !DILocalVariable(name: "scan", scope: !1679, file: !945, line: 309, type: !1694)
!8269 = !DILocation(line: 309, column: 26, scope: !1679)
!8270 = !DILocation(line: 309, column: 47, scope: !1679)
!8271 = !DILocation(line: 309, column: 33, scope: !1679)
!8272 = !DILocation(line: 311, column: 25, scope: !8273)
!8273 = distinct !DILexicalBlock(scope: !1679, file: !945, line: 311, column: 5)
!8274 = !DILocation(line: 311, column: 22, scope: !8273)
!8275 = !DILocation(line: 311, column: 16, scope: !8273)
!8276 = !DILocation(line: 311, column: 10, scope: !8273)
!8277 = !DILocation(line: 311, column: 33, scope: !8278)
!8278 = !DILexicalBlockFile(scope: !8279, file: !945, discriminator: 1)
!8279 = distinct !DILexicalBlock(scope: !8273, file: !945, line: 311, column: 5)
!8280 = !DILocation(line: 311, column: 39, scope: !8278)
!8281 = !DILocation(line: 311, column: 5, scope: !8278)
!8282 = !DILocation(line: 312, column: 9, scope: !8283)
!8283 = distinct !DILexicalBlock(scope: !8279, file: !945, line: 311, column: 72)
!8284 = !DILocation(line: 312, column: 49, scope: !8285)
!8285 = !DILexicalBlockFile(scope: !8286, file: !945, discriminator: 1)
!8286 = distinct !DILexicalBlock(scope: !8287, file: !945, line: 312, column: 9)
!8287 = distinct !DILexicalBlock(scope: !8283, file: !945, line: 312, column: 9)
!8288 = !DILocation(line: 312, column: 23, scope: !8285)
!8289 = !DILocation(line: 312, column: 21, scope: !8285)
!8290 = !DILocation(line: 312, column: 54, scope: !8285)
!8291 = !DILocation(line: 312, column: 9, scope: !8285)
!8292 = !DILocation(line: 313, column: 26, scope: !8293)
!8293 = distinct !DILexicalBlock(scope: !8294, file: !945, line: 313, column: 17)
!8294 = distinct !DILexicalBlock(scope: !8286, file: !945, line: 312, column: 69)
!8295 = !DILocation(line: 313, column: 30, scope: !8293)
!8296 = !DILocation(line: 313, column: 17, scope: !8294)
!8297 = !DILocation(line: 314, column: 17, scope: !8293)
!8298 = !DILocation(line: 316, column: 21, scope: !8294)
!8299 = !DILocation(line: 316, column: 25, scope: !8294)
!8300 = !DILocation(line: 316, column: 20, scope: !8294)
!8301 = !DILocation(line: 316, column: 18, scope: !8294)
!8302 = !DILocation(line: 317, column: 19, scope: !8294)
!8303 = !DILocation(line: 317, column: 23, scope: !8294)
!8304 = !DILocation(line: 317, column: 27, scope: !8294)
!8305 = !DILocation(line: 317, column: 17, scope: !8294)
!8306 = !DILocation(line: 319, column: 17, scope: !8307)
!8307 = distinct !DILexicalBlock(scope: !8294, file: !945, line: 319, column: 17)
!8308 = !DILocation(line: 319, column: 22, scope: !8307)
!8309 = !DILocation(line: 319, column: 17, scope: !8294)
!8310 = !DILocation(line: 320, column: 21, scope: !8311)
!8311 = distinct !DILexicalBlock(scope: !8312, file: !945, line: 320, column: 21)
!8312 = distinct !DILexicalBlock(scope: !8307, file: !945, line: 319, column: 28)
!8313 = !DILocation(line: 320, column: 25, scope: !8311)
!8314 = !DILocation(line: 320, column: 21, scope: !8312)
!8315 = !DILocation(line: 321, column: 25, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !8311, file: !945, line: 320, column: 30)
!8317 = !DILocation(line: 322, column: 29, scope: !8316)
!8318 = !DILocation(line: 322, column: 27, scope: !8316)
!8319 = !DILocation(line: 323, column: 17, scope: !8316)
!8320 = !DILocation(line: 323, column: 28, scope: !8321)
!8321 = !DILexicalBlockFile(scope: !8322, file: !945, discriminator: 1)
!8322 = distinct !DILexicalBlock(scope: !8311, file: !945, line: 323, column: 28)
!8323 = !DILocation(line: 323, column: 32, scope: !8321)
!8324 = !DILocation(line: 324, column: 25, scope: !8325)
!8325 = distinct !DILexicalBlock(scope: !8322, file: !945, line: 323, column: 37)
!8326 = !DILocation(line: 325, column: 27, scope: !8325)
!8327 = !DILocation(line: 326, column: 17, scope: !8325)
!8328 = !DILocation(line: 327, column: 27, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8322, file: !945, line: 326, column: 24)
!8330 = !DILocation(line: 327, column: 31, scope: !8329)
!8331 = !DILocation(line: 327, column: 25, scope: !8329)
!8332 = !DILocation(line: 328, column: 30, scope: !8329)
!8333 = !DILocation(line: 328, column: 34, scope: !8329)
!8334 = !DILocation(line: 328, column: 38, scope: !8329)
!8335 = !DILocation(line: 328, column: 46, scope: !8329)
!8336 = !DILocation(line: 328, column: 44, scope: !8329)
!8337 = !DILocation(line: 328, column: 27, scope: !8329)
!8338 = !DILocation(line: 330, column: 13, scope: !8312)
!8339 = !DILocation(line: 331, column: 21, scope: !8340)
!8340 = distinct !DILexicalBlock(scope: !8341, file: !945, line: 331, column: 21)
!8341 = distinct !DILexicalBlock(scope: !8307, file: !945, line: 330, column: 20)
!8342 = !DILocation(line: 331, column: 25, scope: !8340)
!8343 = !DILocation(line: 331, column: 21, scope: !8341)
!8344 = !DILocation(line: 332, column: 50, scope: !8345)
!8345 = distinct !DILexicalBlock(scope: !8340, file: !945, line: 331, column: 32)
!8346 = !DILocation(line: 332, column: 27, scope: !8345)
!8347 = !DILocation(line: 332, column: 43, scope: !8345)
!8348 = !DILocation(line: 332, column: 55, scope: !8345)
!8349 = !DILocation(line: 332, column: 25, scope: !8345)
!8350 = !DILocation(line: 333, column: 52, scope: !8345)
!8351 = !DILocation(line: 333, column: 29, scope: !8345)
!8352 = !DILocation(line: 333, column: 45, scope: !8345)
!8353 = !DILocation(line: 333, column: 57, scope: !8345)
!8354 = !DILocation(line: 333, column: 27, scope: !8345)
!8355 = !DILocation(line: 334, column: 17, scope: !8345)
!8356 = !DILocation(line: 334, column: 28, scope: !8357)
!8357 = !DILexicalBlockFile(scope: !8358, file: !945, discriminator: 1)
!8358 = distinct !DILexicalBlock(scope: !8340, file: !945, line: 334, column: 28)
!8359 = !DILocation(line: 335, column: 27, scope: !8360)
!8360 = distinct !DILexicalBlock(scope: !8358, file: !945, line: 334, column: 35)
!8361 = !DILocation(line: 335, column: 31, scope: !8360)
!8362 = !DILocation(line: 335, column: 25, scope: !8360)
!8363 = !DILocation(line: 336, column: 30, scope: !8360)
!8364 = !DILocation(line: 336, column: 34, scope: !8360)
!8365 = !DILocation(line: 336, column: 44, scope: !8360)
!8366 = !DILocation(line: 336, column: 48, scope: !8360)
!8367 = !DILocation(line: 336, column: 43, scope: !8360)
!8368 = !DILocation(line: 336, column: 43, scope: !8369)
!8369 = !DILexicalBlockFile(scope: !8360, file: !945, discriminator: 1)
!8370 = !DILocation(line: 336, column: 62, scope: !8371)
!8371 = !DILexicalBlockFile(scope: !8360, file: !945, discriminator: 2)
!8372 = !DILocation(line: 336, column: 66, scope: !8371)
!8373 = !DILocation(line: 336, column: 61, scope: !8371)
!8374 = !DILocation(line: 336, column: 61, scope: !8375)
!8375 = !DILexicalBlockFile(scope: !8360, file: !945, discriminator: 3)
!8376 = !DILocation(line: 336, column: 79, scope: !8377)
!8377 = !DILexicalBlockFile(scope: !8360, file: !945, discriminator: 4)
!8378 = !DILocation(line: 336, column: 83, scope: !8377)
!8379 = !DILocation(line: 336, column: 78, scope: !8377)
!8380 = !DILocation(line: 336, column: 61, scope: !8377)
!8381 = !DILocation(line: 336, column: 61, scope: !8382)
!8382 = !DILexicalBlockFile(scope: !8360, file: !945, discriminator: 5)
!8383 = !DILocation(line: 336, column: 43, scope: !8382)
!8384 = !DILocation(line: 336, column: 43, scope: !8385)
!8385 = !DILexicalBlockFile(scope: !8360, file: !945, discriminator: 6)
!8386 = !DILocation(line: 336, column: 40, scope: !8385)
!8387 = !DILocation(line: 336, column: 27, scope: !8385)
!8388 = !DILocation(line: 337, column: 17, scope: !8360)
!8389 = !DILocation(line: 338, column: 27, scope: !8390)
!8390 = distinct !DILexicalBlock(scope: !8358, file: !945, line: 337, column: 24)
!8391 = !DILocation(line: 338, column: 31, scope: !8390)
!8392 = !DILocation(line: 338, column: 25, scope: !8390)
!8393 = !DILocation(line: 339, column: 30, scope: !8390)
!8394 = !DILocation(line: 339, column: 34, scope: !8390)
!8395 = !DILocation(line: 339, column: 44, scope: !8390)
!8396 = !DILocation(line: 339, column: 48, scope: !8390)
!8397 = !DILocation(line: 339, column: 43, scope: !8390)
!8398 = !DILocation(line: 339, column: 43, scope: !8399)
!8399 = !DILexicalBlockFile(scope: !8390, file: !945, discriminator: 1)
!8400 = !DILocation(line: 339, column: 62, scope: !8401)
!8401 = !DILexicalBlockFile(scope: !8390, file: !945, discriminator: 2)
!8402 = !DILocation(line: 339, column: 66, scope: !8401)
!8403 = !DILocation(line: 339, column: 61, scope: !8401)
!8404 = !DILocation(line: 339, column: 61, scope: !8405)
!8405 = !DILexicalBlockFile(scope: !8390, file: !945, discriminator: 3)
!8406 = !DILocation(line: 339, column: 79, scope: !8407)
!8407 = !DILexicalBlockFile(scope: !8390, file: !945, discriminator: 4)
!8408 = !DILocation(line: 339, column: 83, scope: !8407)
!8409 = !DILocation(line: 339, column: 78, scope: !8407)
!8410 = !DILocation(line: 339, column: 61, scope: !8407)
!8411 = !DILocation(line: 339, column: 61, scope: !8412)
!8412 = !DILexicalBlockFile(scope: !8390, file: !945, discriminator: 5)
!8413 = !DILocation(line: 339, column: 43, scope: !8412)
!8414 = !DILocation(line: 339, column: 43, scope: !8415)
!8415 = !DILexicalBlockFile(scope: !8390, file: !945, discriminator: 6)
!8416 = !DILocation(line: 339, column: 40, scope: !8415)
!8417 = !DILocation(line: 339, column: 27, scope: !8415)
!8418 = !DILocation(line: 344, column: 27, scope: !8419)
!8419 = distinct !DILexicalBlock(scope: !8294, file: !945, line: 344, column: 17)
!8420 = !DILocation(line: 344, column: 24, scope: !8419)
!8421 = !DILocation(line: 344, column: 35, scope: !8419)
!8422 = !DILocation(line: 344, column: 32, scope: !8419)
!8423 = !DILocation(line: 344, column: 17, scope: !8294)
!8424 = !DILocation(line: 345, column: 17, scope: !8419)
!8425 = !DILocation(line: 347, column: 35, scope: !8294)
!8426 = !DILocation(line: 347, column: 43, scope: !8294)
!8427 = !DILocation(line: 347, column: 41, scope: !8294)
!8428 = !DILocation(line: 347, column: 51, scope: !8294)
!8429 = !DILocation(line: 347, column: 49, scope: !8294)
!8430 = !DILocation(line: 347, column: 34, scope: !8294)
!8431 = !DILocation(line: 347, column: 24, scope: !8294)
!8432 = !DILocation(line: 347, column: 19, scope: !8294)
!8433 = !DILocation(line: 347, column: 13, scope: !8294)
!8434 = !DILocation(line: 347, column: 32, scope: !8294)
!8435 = !DILocation(line: 348, column: 9, scope: !8294)
!8436 = !DILocation(line: 312, column: 65, scope: !8437)
!8437 = !DILexicalBlockFile(scope: !8286, file: !945, discriminator: 2)
!8438 = !DILocation(line: 312, column: 9, scope: !8437)
!8439 = distinct !{!8439, !8282}
!8440 = !DILocation(line: 350, column: 13, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8283, file: !945, line: 350, column: 13)
!8442 = !DILocation(line: 350, column: 18, scope: !8441)
!8443 = !DILocation(line: 350, column: 13, scope: !8283)
!8444 = !DILocation(line: 351, column: 13, scope: !8445)
!8445 = distinct !DILexicalBlock(scope: !8441, file: !945, line: 350, column: 24)
!8446 = !DILocation(line: 353, column: 5, scope: !8283)
!8447 = !DILocation(line: 311, column: 53, scope: !8448)
!8448 = !DILexicalBlockFile(scope: !8279, file: !945, discriminator: 2)
!8449 = !DILocation(line: 311, column: 51, scope: !8448)
!8450 = !DILocation(line: 311, column: 66, scope: !8448)
!8451 = !DILocation(line: 311, column: 5, scope: !8448)
!8452 = distinct !{!8452, !8453}
!8453 = !DILocation(line: 311, column: 5, scope: !1679)
!8454 = !DILocation(line: 355, column: 5, scope: !1679)
!8455 = !DILocation(line: 356, column: 1, scope: !1679)
!8456 = distinct !DISubprogram(name: "mid_pred", scope: !4099, file: !4099, line: 76, type: !6475, isLocal: true, isDefinition: true, scopeLine: 77, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!8457 = !DILocalVariable(name: "a", arg: 1, scope: !8456, file: !4099, line: 76, type: !899)
!8458 = !DILocation(line: 76, column: 55, scope: !8456)
!8459 = !DILocalVariable(name: "b", arg: 2, scope: !8456, file: !4099, line: 76, type: !899)
!8460 = !DILocation(line: 76, column: 62, scope: !8456)
!8461 = !DILocalVariable(name: "c", arg: 3, scope: !8456, file: !4099, line: 76, type: !899)
!8462 = !DILocation(line: 76, column: 69, scope: !8456)
!8463 = !DILocalVariable(name: "i", scope: !8456, file: !4099, line: 78, type: !899)
!8464 = !DILocation(line: 78, column: 9, scope: !8456)
!8465 = !DILocation(line: 78, column: 11, scope: !8456)
!8466 = !DILocation(line: 79, column: 5, scope: !8456)
!8467 = !DILocation(line: 88, column: 14, scope: !8456)
!8468 = !DILocation(line: 88, column: 22, scope: !8456)
!8469 = !{i32 224920, i32 224937, i32 224966, i32 224995, i32 225024, i32 225053, i32 225082, i32 225111}
!8470 = !DILocation(line: 90, column: 12, scope: !8456)
!8471 = !DILocation(line: 90, column: 5, scope: !8456)
!8472 = distinct !DISubprogram(name: "svq3_add_idct_c", scope: !945, file: !945, line: 259, type: !8473, isLocal: true, isDefinition: true, scopeLine: 261, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!8473 = !DISubroutineType(types: !8474)
!8474 = !{null, !928, !1692, !899, !899, !899}
!8475 = !DILocalVariable(name: "a", arg: 1, scope: !8476, file: !6474, line: 159, type: !899)
!8476 = distinct !DISubprogram(name: "av_clip_uint8_c", scope: !6474, file: !6474, line: 159, type: !8477, isLocal: true, isDefinition: true, scopeLine: 160, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !938)
!8477 = !DISubroutineType(types: !8478)
!8478 = !{!902, !899}
!8479 = !DILocation(line: 159, column: 97, scope: !8476, inlinedAt: !8480)
!8480 = distinct !DILocation(line: 291, column: 31, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8482, file: !945, line: 283, column: 29)
!8482 = distinct !DILexicalBlock(scope: !8483, file: !945, line: 283, column: 5)
!8483 = distinct !DILexicalBlock(scope: !8472, file: !945, line: 283, column: 5)
!8484 = !DILocation(line: 159, column: 97, scope: !8476, inlinedAt: !8485)
!8485 = distinct !DILocation(line: 292, column: 31, scope: !8481)
!8486 = !DILocation(line: 159, column: 97, scope: !8476, inlinedAt: !8487)
!8487 = distinct !DILocation(line: 293, column: 31, scope: !8481)
!8488 = !DILocation(line: 159, column: 97, scope: !8476, inlinedAt: !8489)
!8489 = distinct !DILocation(line: 290, column: 31, scope: !8481)
!8490 = !DILocalVariable(name: "dst", arg: 1, scope: !8472, file: !945, line: 259, type: !928)
!8491 = !DILocation(line: 259, column: 38, scope: !8472)
!8492 = !DILocalVariable(name: "block", arg: 2, scope: !8472, file: !945, line: 259, type: !1692)
!8493 = !DILocation(line: 259, column: 52, scope: !8472)
!8494 = !DILocalVariable(name: "stride", arg: 3, scope: !8472, file: !945, line: 260, type: !899)
!8495 = !DILocation(line: 260, column: 33, scope: !8472)
!8496 = !DILocalVariable(name: "qp", arg: 4, scope: !8472, file: !945, line: 260, type: !899)
!8497 = !DILocation(line: 260, column: 45, scope: !8472)
!8498 = !DILocalVariable(name: "dc", arg: 5, scope: !8472, file: !945, line: 260, type: !899)
!8499 = !DILocation(line: 260, column: 53, scope: !8472)
!8500 = !DILocalVariable(name: "qmul", scope: !8472, file: !945, line: 262, type: !971)
!8501 = !DILocation(line: 262, column: 15, scope: !8472)
!8502 = !DILocation(line: 262, column: 41, scope: !8472)
!8503 = !DILocation(line: 262, column: 22, scope: !8472)
!8504 = !DILocalVariable(name: "i", scope: !8472, file: !945, line: 263, type: !899)
!8505 = !DILocation(line: 263, column: 9, scope: !8472)
!8506 = !DILocation(line: 265, column: 9, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !8472, file: !945, line: 265, column: 9)
!8508 = !DILocation(line: 265, column: 9, scope: !8472)
!8509 = !DILocation(line: 266, column: 25, scope: !8510)
!8510 = distinct !DILexicalBlock(scope: !8507, file: !945, line: 265, column: 13)
!8511 = !DILocation(line: 266, column: 28, scope: !8510)
!8512 = !DILocation(line: 266, column: 42, scope: !8513)
!8513 = !DILexicalBlockFile(scope: !8510, file: !945, discriminator: 1)
!8514 = !DILocation(line: 266, column: 40, scope: !8513)
!8515 = !DILocation(line: 266, column: 25, scope: !8513)
!8516 = !DILocation(line: 267, column: 41, scope: !8510)
!8517 = !DILocation(line: 267, column: 49, scope: !8510)
!8518 = !DILocation(line: 267, column: 58, scope: !8510)
!8519 = !DILocation(line: 267, column: 46, scope: !8510)
!8520 = !DILocation(line: 267, column: 64, scope: !8510)
!8521 = !DILocation(line: 266, column: 25, scope: !8522)
!8522 = !DILexicalBlockFile(scope: !8510, file: !945, discriminator: 2)
!8523 = !DILocation(line: 266, column: 25, scope: !8524)
!8524 = !DILexicalBlockFile(scope: !8510, file: !945, discriminator: 3)
!8525 = !DILocation(line: 266, column: 22, scope: !8524)
!8526 = !DILocation(line: 266, column: 12, scope: !8524)
!8527 = !DILocation(line: 268, column: 9, scope: !8510)
!8528 = !DILocation(line: 268, column: 18, scope: !8510)
!8529 = !DILocation(line: 269, column: 5, scope: !8510)
!8530 = !DILocation(line: 271, column: 12, scope: !8531)
!8531 = distinct !DILexicalBlock(scope: !8472, file: !945, line: 271, column: 5)
!8532 = !DILocation(line: 271, column: 10, scope: !8531)
!8533 = !DILocation(line: 271, column: 17, scope: !8534)
!8534 = !DILexicalBlockFile(scope: !8535, file: !945, discriminator: 1)
!8535 = distinct !DILexicalBlock(scope: !8531, file: !945, line: 271, column: 5)
!8536 = !DILocation(line: 271, column: 19, scope: !8534)
!8537 = !DILocation(line: 271, column: 5, scope: !8534)
!8538 = !DILocalVariable(name: "z0", scope: !8539, file: !945, line: 272, type: !971)
!8539 = distinct !DILexicalBlock(scope: !8535, file: !945, line: 271, column: 29)
!8540 = !DILocation(line: 272, column: 19, scope: !8539)
!8541 = !DILocation(line: 272, column: 44, scope: !8539)
!8542 = !DILocation(line: 272, column: 42, scope: !8539)
!8543 = !DILocation(line: 272, column: 38, scope: !8539)
!8544 = !DILocation(line: 272, column: 30, scope: !8539)
!8545 = !DILocation(line: 272, column: 63, scope: !8539)
!8546 = !DILocation(line: 272, column: 61, scope: !8539)
!8547 = !DILocation(line: 272, column: 57, scope: !8539)
!8548 = !DILocation(line: 272, column: 49, scope: !8539)
!8549 = !DILocation(line: 272, column: 47, scope: !8539)
!8550 = !DILocation(line: 272, column: 27, scope: !8539)
!8551 = !DILocalVariable(name: "z1", scope: !8539, file: !945, line: 273, type: !971)
!8552 = !DILocation(line: 273, column: 19, scope: !8539)
!8553 = !DILocation(line: 273, column: 44, scope: !8539)
!8554 = !DILocation(line: 273, column: 42, scope: !8539)
!8555 = !DILocation(line: 273, column: 38, scope: !8539)
!8556 = !DILocation(line: 273, column: 30, scope: !8539)
!8557 = !DILocation(line: 273, column: 63, scope: !8539)
!8558 = !DILocation(line: 273, column: 61, scope: !8539)
!8559 = !DILocation(line: 273, column: 57, scope: !8539)
!8560 = !DILocation(line: 273, column: 49, scope: !8539)
!8561 = !DILocation(line: 273, column: 47, scope: !8539)
!8562 = !DILocation(line: 273, column: 27, scope: !8539)
!8563 = !DILocalVariable(name: "z2", scope: !8539, file: !945, line: 274, type: !971)
!8564 = !DILocation(line: 274, column: 19, scope: !8539)
!8565 = !DILocation(line: 274, column: 42, scope: !8539)
!8566 = !DILocation(line: 274, column: 40, scope: !8539)
!8567 = !DILocation(line: 274, column: 36, scope: !8539)
!8568 = !DILocation(line: 274, column: 28, scope: !8539)
!8569 = !DILocation(line: 274, column: 26, scope: !8539)
!8570 = !DILocation(line: 274, column: 66, scope: !8539)
!8571 = !DILocation(line: 274, column: 64, scope: !8539)
!8572 = !DILocation(line: 274, column: 60, scope: !8539)
!8573 = !DILocation(line: 274, column: 52, scope: !8539)
!8574 = !DILocation(line: 274, column: 50, scope: !8539)
!8575 = !DILocation(line: 274, column: 45, scope: !8539)
!8576 = !DILocalVariable(name: "z3", scope: !8539, file: !945, line: 275, type: !971)
!8577 = !DILocation(line: 275, column: 19, scope: !8539)
!8578 = !DILocation(line: 275, column: 43, scope: !8539)
!8579 = !DILocation(line: 275, column: 41, scope: !8539)
!8580 = !DILocation(line: 275, column: 37, scope: !8539)
!8581 = !DILocation(line: 275, column: 29, scope: !8539)
!8582 = !DILocation(line: 275, column: 27, scope: !8539)
!8583 = !DILocation(line: 275, column: 66, scope: !8539)
!8584 = !DILocation(line: 275, column: 64, scope: !8539)
!8585 = !DILocation(line: 275, column: 60, scope: !8539)
!8586 = !DILocation(line: 275, column: 52, scope: !8539)
!8587 = !DILocation(line: 275, column: 50, scope: !8539)
!8588 = !DILocation(line: 275, column: 46, scope: !8539)
!8589 = !DILocation(line: 277, column: 28, scope: !8539)
!8590 = !DILocation(line: 277, column: 33, scope: !8539)
!8591 = !DILocation(line: 277, column: 31, scope: !8539)
!8592 = !DILocation(line: 277, column: 23, scope: !8539)
!8593 = !DILocation(line: 277, column: 21, scope: !8539)
!8594 = !DILocation(line: 277, column: 17, scope: !8539)
!8595 = !DILocation(line: 277, column: 9, scope: !8539)
!8596 = !DILocation(line: 277, column: 26, scope: !8539)
!8597 = !DILocation(line: 278, column: 28, scope: !8539)
!8598 = !DILocation(line: 278, column: 33, scope: !8539)
!8599 = !DILocation(line: 278, column: 31, scope: !8539)
!8600 = !DILocation(line: 278, column: 23, scope: !8539)
!8601 = !DILocation(line: 278, column: 21, scope: !8539)
!8602 = !DILocation(line: 278, column: 17, scope: !8539)
!8603 = !DILocation(line: 278, column: 9, scope: !8539)
!8604 = !DILocation(line: 278, column: 26, scope: !8539)
!8605 = !DILocation(line: 279, column: 28, scope: !8539)
!8606 = !DILocation(line: 279, column: 33, scope: !8539)
!8607 = !DILocation(line: 279, column: 31, scope: !8539)
!8608 = !DILocation(line: 279, column: 23, scope: !8539)
!8609 = !DILocation(line: 279, column: 21, scope: !8539)
!8610 = !DILocation(line: 279, column: 17, scope: !8539)
!8611 = !DILocation(line: 279, column: 9, scope: !8539)
!8612 = !DILocation(line: 279, column: 26, scope: !8539)
!8613 = !DILocation(line: 280, column: 28, scope: !8539)
!8614 = !DILocation(line: 280, column: 33, scope: !8539)
!8615 = !DILocation(line: 280, column: 31, scope: !8539)
!8616 = !DILocation(line: 280, column: 23, scope: !8539)
!8617 = !DILocation(line: 280, column: 21, scope: !8539)
!8618 = !DILocation(line: 280, column: 17, scope: !8539)
!8619 = !DILocation(line: 280, column: 9, scope: !8539)
!8620 = !DILocation(line: 280, column: 26, scope: !8539)
!8621 = !DILocation(line: 281, column: 5, scope: !8539)
!8622 = !DILocation(line: 271, column: 25, scope: !8623)
!8623 = !DILexicalBlockFile(scope: !8535, file: !945, discriminator: 2)
!8624 = !DILocation(line: 271, column: 5, scope: !8623)
!8625 = distinct !{!8625, !8626}
!8626 = !DILocation(line: 271, column: 5, scope: !8472)
!8627 = !DILocation(line: 283, column: 12, scope: !8483)
!8628 = !DILocation(line: 283, column: 10, scope: !8483)
!8629 = !DILocation(line: 283, column: 17, scope: !8630)
!8630 = !DILexicalBlockFile(scope: !8482, file: !945, discriminator: 1)
!8631 = !DILocation(line: 283, column: 19, scope: !8630)
!8632 = !DILocation(line: 283, column: 5, scope: !8630)
!8633 = !DILocalVariable(name: "z0", scope: !8481, file: !945, line: 284, type: !8634)
!8634 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !898)
!8635 = !DILocation(line: 284, column: 24, scope: !8481)
!8636 = !DILocation(line: 284, column: 41, scope: !8481)
!8637 = !DILocation(line: 284, column: 43, scope: !8481)
!8638 = !DILocation(line: 284, column: 35, scope: !8481)
!8639 = !DILocation(line: 284, column: 60, scope: !8481)
!8640 = !DILocation(line: 284, column: 62, scope: !8481)
!8641 = !DILocation(line: 284, column: 54, scope: !8481)
!8642 = !DILocation(line: 284, column: 52, scope: !8481)
!8643 = !DILocation(line: 284, column: 32, scope: !8481)
!8644 = !DILocalVariable(name: "z1", scope: !8481, file: !945, line: 285, type: !8634)
!8645 = !DILocation(line: 285, column: 24, scope: !8481)
!8646 = !DILocation(line: 285, column: 41, scope: !8481)
!8647 = !DILocation(line: 285, column: 43, scope: !8481)
!8648 = !DILocation(line: 285, column: 35, scope: !8481)
!8649 = !DILocation(line: 285, column: 60, scope: !8481)
!8650 = !DILocation(line: 285, column: 62, scope: !8481)
!8651 = !DILocation(line: 285, column: 54, scope: !8481)
!8652 = !DILocation(line: 285, column: 52, scope: !8481)
!8653 = !DILocation(line: 285, column: 32, scope: !8481)
!8654 = !DILocalVariable(name: "z2", scope: !8481, file: !945, line: 286, type: !8634)
!8655 = !DILocation(line: 286, column: 24, scope: !8481)
!8656 = !DILocation(line: 286, column: 39, scope: !8481)
!8657 = !DILocation(line: 286, column: 41, scope: !8481)
!8658 = !DILocation(line: 286, column: 33, scope: !8481)
!8659 = !DILocation(line: 286, column: 31, scope: !8481)
!8660 = !DILocation(line: 286, column: 63, scope: !8481)
!8661 = !DILocation(line: 286, column: 65, scope: !8481)
!8662 = !DILocation(line: 286, column: 57, scope: !8481)
!8663 = !DILocation(line: 286, column: 55, scope: !8481)
!8664 = !DILocation(line: 286, column: 50, scope: !8481)
!8665 = !DILocalVariable(name: "z3", scope: !8481, file: !945, line: 287, type: !8634)
!8666 = !DILocation(line: 287, column: 24, scope: !8481)
!8667 = !DILocation(line: 287, column: 40, scope: !8481)
!8668 = !DILocation(line: 287, column: 42, scope: !8481)
!8669 = !DILocation(line: 287, column: 34, scope: !8481)
!8670 = !DILocation(line: 287, column: 32, scope: !8481)
!8671 = !DILocation(line: 287, column: 63, scope: !8481)
!8672 = !DILocation(line: 287, column: 65, scope: !8481)
!8673 = !DILocation(line: 287, column: 57, scope: !8481)
!8674 = !DILocation(line: 287, column: 55, scope: !8481)
!8675 = !DILocation(line: 287, column: 51, scope: !8481)
!8676 = !DILocalVariable(name: "rr", scope: !8481, file: !945, line: 288, type: !971)
!8677 = !DILocation(line: 288, column: 19, scope: !8481)
!8678 = !DILocation(line: 288, column: 25, scope: !8481)
!8679 = !DILocation(line: 288, column: 28, scope: !8481)
!8680 = !DILocation(line: 290, column: 51, scope: !8481)
!8681 = !DILocation(line: 290, column: 55, scope: !8481)
!8682 = !DILocation(line: 290, column: 62, scope: !8481)
!8683 = !DILocation(line: 290, column: 53, scope: !8481)
!8684 = !DILocation(line: 290, column: 47, scope: !8481)
!8685 = !DILocation(line: 290, column: 77, scope: !8481)
!8686 = !DILocation(line: 290, column: 82, scope: !8481)
!8687 = !DILocation(line: 290, column: 80, scope: !8481)
!8688 = !DILocation(line: 290, column: 88, scope: !8481)
!8689 = !DILocation(line: 290, column: 86, scope: !8481)
!8690 = !DILocation(line: 290, column: 95, scope: !8481)
!8691 = !DILocation(line: 290, column: 93, scope: !8481)
!8692 = !DILocation(line: 290, column: 99, scope: !8481)
!8693 = !DILocation(line: 290, column: 67, scope: !8481)
!8694 = !DILocation(line: 290, column: 31, scope: !8481)
!8695 = !DILocation(line: 161, column: 9, scope: !8696, inlinedAt: !8489)
!8696 = distinct !DILexicalBlock(scope: !8476, file: !6474, line: 161, column: 9)
!8697 = !DILocation(line: 161, column: 10, scope: !8696, inlinedAt: !8489)
!8698 = !DILocation(line: 161, column: 9, scope: !8476, inlinedAt: !8489)
!8699 = !DILocation(line: 161, column: 29, scope: !8700, inlinedAt: !8489)
!8700 = !DILexicalBlockFile(scope: !8696, file: !6474, discriminator: 1)
!8701 = !DILocation(line: 161, column: 28, scope: !8700, inlinedAt: !8489)
!8702 = !DILocation(line: 161, column: 31, scope: !8700, inlinedAt: !8489)
!8703 = !DILocation(line: 161, column: 27, scope: !8700, inlinedAt: !8489)
!8704 = !DILocation(line: 161, column: 20, scope: !8700, inlinedAt: !8489)
!8705 = !DILocation(line: 162, column: 17, scope: !8696, inlinedAt: !8489)
!8706 = !DILocation(line: 162, column: 10, scope: !8696, inlinedAt: !8489)
!8707 = !DILocation(line: 163, column: 1, scope: !8476, inlinedAt: !8489)
!8708 = !DILocation(line: 290, column: 13, scope: !8481)
!8709 = !DILocation(line: 290, column: 17, scope: !8481)
!8710 = !DILocation(line: 290, column: 24, scope: !8481)
!8711 = !DILocation(line: 290, column: 15, scope: !8481)
!8712 = !DILocation(line: 290, column: 9, scope: !8481)
!8713 = !DILocation(line: 290, column: 29, scope: !8481)
!8714 = !DILocation(line: 291, column: 51, scope: !8481)
!8715 = !DILocation(line: 291, column: 55, scope: !8481)
!8716 = !DILocation(line: 291, column: 62, scope: !8481)
!8717 = !DILocation(line: 291, column: 53, scope: !8481)
!8718 = !DILocation(line: 291, column: 47, scope: !8481)
!8719 = !DILocation(line: 291, column: 77, scope: !8481)
!8720 = !DILocation(line: 291, column: 82, scope: !8481)
!8721 = !DILocation(line: 291, column: 80, scope: !8481)
!8722 = !DILocation(line: 291, column: 88, scope: !8481)
!8723 = !DILocation(line: 291, column: 86, scope: !8481)
!8724 = !DILocation(line: 291, column: 95, scope: !8481)
!8725 = !DILocation(line: 291, column: 93, scope: !8481)
!8726 = !DILocation(line: 291, column: 99, scope: !8481)
!8727 = !DILocation(line: 291, column: 67, scope: !8481)
!8728 = !DILocation(line: 291, column: 31, scope: !8481)
!8729 = !DILocation(line: 161, column: 9, scope: !8696, inlinedAt: !8480)
!8730 = !DILocation(line: 161, column: 10, scope: !8696, inlinedAt: !8480)
!8731 = !DILocation(line: 161, column: 9, scope: !8476, inlinedAt: !8480)
!8732 = !DILocation(line: 161, column: 29, scope: !8700, inlinedAt: !8480)
!8733 = !DILocation(line: 161, column: 28, scope: !8700, inlinedAt: !8480)
!8734 = !DILocation(line: 161, column: 31, scope: !8700, inlinedAt: !8480)
!8735 = !DILocation(line: 161, column: 27, scope: !8700, inlinedAt: !8480)
!8736 = !DILocation(line: 161, column: 20, scope: !8700, inlinedAt: !8480)
!8737 = !DILocation(line: 162, column: 17, scope: !8696, inlinedAt: !8480)
!8738 = !DILocation(line: 162, column: 10, scope: !8696, inlinedAt: !8480)
!8739 = !DILocation(line: 163, column: 1, scope: !8476, inlinedAt: !8480)
!8740 = !DILocation(line: 291, column: 13, scope: !8481)
!8741 = !DILocation(line: 291, column: 17, scope: !8481)
!8742 = !DILocation(line: 291, column: 24, scope: !8481)
!8743 = !DILocation(line: 291, column: 15, scope: !8481)
!8744 = !DILocation(line: 291, column: 9, scope: !8481)
!8745 = !DILocation(line: 291, column: 29, scope: !8481)
!8746 = !DILocation(line: 292, column: 51, scope: !8481)
!8747 = !DILocation(line: 292, column: 55, scope: !8481)
!8748 = !DILocation(line: 292, column: 62, scope: !8481)
!8749 = !DILocation(line: 292, column: 53, scope: !8481)
!8750 = !DILocation(line: 292, column: 47, scope: !8481)
!8751 = !DILocation(line: 292, column: 77, scope: !8481)
!8752 = !DILocation(line: 292, column: 82, scope: !8481)
!8753 = !DILocation(line: 292, column: 80, scope: !8481)
!8754 = !DILocation(line: 292, column: 88, scope: !8481)
!8755 = !DILocation(line: 292, column: 86, scope: !8481)
!8756 = !DILocation(line: 292, column: 95, scope: !8481)
!8757 = !DILocation(line: 292, column: 93, scope: !8481)
!8758 = !DILocation(line: 292, column: 99, scope: !8481)
!8759 = !DILocation(line: 292, column: 67, scope: !8481)
!8760 = !DILocation(line: 292, column: 31, scope: !8481)
!8761 = !DILocation(line: 161, column: 9, scope: !8696, inlinedAt: !8485)
!8762 = !DILocation(line: 161, column: 10, scope: !8696, inlinedAt: !8485)
!8763 = !DILocation(line: 161, column: 9, scope: !8476, inlinedAt: !8485)
!8764 = !DILocation(line: 161, column: 29, scope: !8700, inlinedAt: !8485)
!8765 = !DILocation(line: 161, column: 28, scope: !8700, inlinedAt: !8485)
!8766 = !DILocation(line: 161, column: 31, scope: !8700, inlinedAt: !8485)
!8767 = !DILocation(line: 161, column: 27, scope: !8700, inlinedAt: !8485)
!8768 = !DILocation(line: 161, column: 20, scope: !8700, inlinedAt: !8485)
!8769 = !DILocation(line: 162, column: 17, scope: !8696, inlinedAt: !8485)
!8770 = !DILocation(line: 162, column: 10, scope: !8696, inlinedAt: !8485)
!8771 = !DILocation(line: 163, column: 1, scope: !8476, inlinedAt: !8485)
!8772 = !DILocation(line: 292, column: 13, scope: !8481)
!8773 = !DILocation(line: 292, column: 17, scope: !8481)
!8774 = !DILocation(line: 292, column: 24, scope: !8481)
!8775 = !DILocation(line: 292, column: 15, scope: !8481)
!8776 = !DILocation(line: 292, column: 9, scope: !8481)
!8777 = !DILocation(line: 292, column: 29, scope: !8481)
!8778 = !DILocation(line: 293, column: 51, scope: !8481)
!8779 = !DILocation(line: 293, column: 55, scope: !8481)
!8780 = !DILocation(line: 293, column: 62, scope: !8481)
!8781 = !DILocation(line: 293, column: 53, scope: !8481)
!8782 = !DILocation(line: 293, column: 47, scope: !8481)
!8783 = !DILocation(line: 293, column: 77, scope: !8481)
!8784 = !DILocation(line: 293, column: 82, scope: !8481)
!8785 = !DILocation(line: 293, column: 80, scope: !8481)
!8786 = !DILocation(line: 293, column: 88, scope: !8481)
!8787 = !DILocation(line: 293, column: 86, scope: !8481)
!8788 = !DILocation(line: 293, column: 95, scope: !8481)
!8789 = !DILocation(line: 293, column: 93, scope: !8481)
!8790 = !DILocation(line: 293, column: 99, scope: !8481)
!8791 = !DILocation(line: 293, column: 67, scope: !8481)
!8792 = !DILocation(line: 293, column: 31, scope: !8481)
!8793 = !DILocation(line: 161, column: 9, scope: !8696, inlinedAt: !8487)
!8794 = !DILocation(line: 161, column: 10, scope: !8696, inlinedAt: !8487)
!8795 = !DILocation(line: 161, column: 9, scope: !8476, inlinedAt: !8487)
!8796 = !DILocation(line: 161, column: 29, scope: !8700, inlinedAt: !8487)
!8797 = !DILocation(line: 161, column: 28, scope: !8700, inlinedAt: !8487)
!8798 = !DILocation(line: 161, column: 31, scope: !8700, inlinedAt: !8487)
!8799 = !DILocation(line: 161, column: 27, scope: !8700, inlinedAt: !8487)
!8800 = !DILocation(line: 161, column: 20, scope: !8700, inlinedAt: !8487)
!8801 = !DILocation(line: 162, column: 17, scope: !8696, inlinedAt: !8487)
!8802 = !DILocation(line: 162, column: 10, scope: !8696, inlinedAt: !8487)
!8803 = !DILocation(line: 163, column: 1, scope: !8476, inlinedAt: !8487)
!8804 = !DILocation(line: 293, column: 13, scope: !8481)
!8805 = !DILocation(line: 293, column: 17, scope: !8481)
!8806 = !DILocation(line: 293, column: 24, scope: !8481)
!8807 = !DILocation(line: 293, column: 15, scope: !8481)
!8808 = !DILocation(line: 293, column: 9, scope: !8481)
!8809 = !DILocation(line: 293, column: 29, scope: !8481)
!8810 = !DILocation(line: 294, column: 5, scope: !8481)
!8811 = !DILocation(line: 283, column: 25, scope: !8812)
!8812 = !DILexicalBlockFile(scope: !8482, file: !945, discriminator: 2)
!8813 = !DILocation(line: 283, column: 5, scope: !8812)
!8814 = distinct !{!8814, !8815}
!8815 = !DILocation(line: 283, column: 5, scope: !8472)
!8816 = !DILocation(line: 296, column: 12, scope: !8472)
!8817 = !DILocation(line: 296, column: 5, scope: !8472)
!8818 = !DILocation(line: 297, column: 1, scope: !8472)
!8819 = !DILocalVariable(name: "output", arg: 1, scope: !1709, file: !945, line: 224, type: !1692)
!8820 = !DILocation(line: 224, column: 50, scope: !1709)
!8821 = !DILocalVariable(name: "input", arg: 2, scope: !1709, file: !945, line: 224, type: !1692)
!8822 = !DILocation(line: 224, column: 67, scope: !1709)
!8823 = !DILocalVariable(name: "qp", arg: 3, scope: !1709, file: !945, line: 224, type: !899)
!8824 = !DILocation(line: 224, column: 78, scope: !1709)
!8825 = !DILocalVariable(name: "qmul", scope: !1709, file: !945, line: 226, type: !8634)
!8826 = !DILocation(line: 226, column: 20, scope: !1709)
!8827 = !DILocation(line: 226, column: 46, scope: !1709)
!8828 = !DILocation(line: 226, column: 27, scope: !1709)
!8829 = !DILocalVariable(name: "i", scope: !1709, file: !945, line: 228, type: !899)
!8830 = !DILocation(line: 228, column: 9, scope: !1709)
!8831 = !DILocalVariable(name: "temp", scope: !1709, file: !945, line: 229, type: !8832)
!8832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !899, size: 512, align: 32, elements: !1697)
!8833 = !DILocation(line: 229, column: 9, scope: !1709)
!8834 = !DILocation(line: 232, column: 12, scope: !8835)
!8835 = distinct !DILexicalBlock(scope: !1709, file: !945, line: 232, column: 5)
!8836 = !DILocation(line: 232, column: 10, scope: !8835)
!8837 = !DILocation(line: 232, column: 17, scope: !8838)
!8838 = !DILexicalBlockFile(scope: !8839, file: !945, discriminator: 1)
!8839 = distinct !DILexicalBlock(scope: !8835, file: !945, line: 232, column: 5)
!8840 = !DILocation(line: 232, column: 19, scope: !8838)
!8841 = !DILocation(line: 232, column: 5, scope: !8838)
!8842 = !DILocalVariable(name: "z0", scope: !8843, file: !945, line: 233, type: !971)
!8843 = distinct !DILexicalBlock(scope: !8839, file: !945, line: 232, column: 29)
!8844 = !DILocation(line: 233, column: 19, scope: !8843)
!8845 = !DILocation(line: 233, column: 40, scope: !8843)
!8846 = !DILocation(line: 233, column: 38, scope: !8843)
!8847 = !DILocation(line: 233, column: 42, scope: !8843)
!8848 = !DILocation(line: 233, column: 30, scope: !8843)
!8849 = !DILocation(line: 233, column: 59, scope: !8843)
!8850 = !DILocation(line: 233, column: 57, scope: !8843)
!8851 = !DILocation(line: 233, column: 61, scope: !8843)
!8852 = !DILocation(line: 233, column: 49, scope: !8843)
!8853 = !DILocation(line: 233, column: 47, scope: !8843)
!8854 = !DILocation(line: 233, column: 27, scope: !8843)
!8855 = !DILocalVariable(name: "z1", scope: !8843, file: !945, line: 234, type: !971)
!8856 = !DILocation(line: 234, column: 19, scope: !8843)
!8857 = !DILocation(line: 234, column: 40, scope: !8843)
!8858 = !DILocation(line: 234, column: 38, scope: !8843)
!8859 = !DILocation(line: 234, column: 42, scope: !8843)
!8860 = !DILocation(line: 234, column: 30, scope: !8843)
!8861 = !DILocation(line: 234, column: 59, scope: !8843)
!8862 = !DILocation(line: 234, column: 57, scope: !8843)
!8863 = !DILocation(line: 234, column: 61, scope: !8843)
!8864 = !DILocation(line: 234, column: 49, scope: !8843)
!8865 = !DILocation(line: 234, column: 47, scope: !8843)
!8866 = !DILocation(line: 234, column: 27, scope: !8843)
!8867 = !DILocalVariable(name: "z2", scope: !8843, file: !945, line: 235, type: !971)
!8868 = !DILocation(line: 235, column: 19, scope: !8843)
!8869 = !DILocation(line: 235, column: 38, scope: !8843)
!8870 = !DILocation(line: 235, column: 36, scope: !8843)
!8871 = !DILocation(line: 235, column: 40, scope: !8843)
!8872 = !DILocation(line: 235, column: 28, scope: !8843)
!8873 = !DILocation(line: 235, column: 26, scope: !8843)
!8874 = !DILocation(line: 235, column: 62, scope: !8843)
!8875 = !DILocation(line: 235, column: 60, scope: !8843)
!8876 = !DILocation(line: 235, column: 64, scope: !8843)
!8877 = !DILocation(line: 235, column: 52, scope: !8843)
!8878 = !DILocation(line: 235, column: 50, scope: !8843)
!8879 = !DILocation(line: 235, column: 45, scope: !8843)
!8880 = !DILocalVariable(name: "z3", scope: !8843, file: !945, line: 236, type: !971)
!8881 = !DILocation(line: 236, column: 19, scope: !8843)
!8882 = !DILocation(line: 236, column: 39, scope: !8843)
!8883 = !DILocation(line: 236, column: 37, scope: !8843)
!8884 = !DILocation(line: 236, column: 41, scope: !8843)
!8885 = !DILocation(line: 236, column: 29, scope: !8843)
!8886 = !DILocation(line: 236, column: 27, scope: !8843)
!8887 = !DILocation(line: 236, column: 62, scope: !8843)
!8888 = !DILocation(line: 236, column: 60, scope: !8843)
!8889 = !DILocation(line: 236, column: 64, scope: !8843)
!8890 = !DILocation(line: 236, column: 52, scope: !8843)
!8891 = !DILocation(line: 236, column: 50, scope: !8843)
!8892 = !DILocation(line: 236, column: 46, scope: !8843)
!8893 = !DILocation(line: 238, column: 27, scope: !8843)
!8894 = !DILocation(line: 238, column: 32, scope: !8843)
!8895 = !DILocation(line: 238, column: 30, scope: !8843)
!8896 = !DILocation(line: 238, column: 18, scope: !8843)
!8897 = !DILocation(line: 238, column: 16, scope: !8843)
!8898 = !DILocation(line: 238, column: 20, scope: !8843)
!8899 = !DILocation(line: 238, column: 9, scope: !8843)
!8900 = !DILocation(line: 238, column: 25, scope: !8843)
!8901 = !DILocation(line: 239, column: 27, scope: !8843)
!8902 = !DILocation(line: 239, column: 32, scope: !8843)
!8903 = !DILocation(line: 239, column: 30, scope: !8843)
!8904 = !DILocation(line: 239, column: 18, scope: !8843)
!8905 = !DILocation(line: 239, column: 16, scope: !8843)
!8906 = !DILocation(line: 239, column: 20, scope: !8843)
!8907 = !DILocation(line: 239, column: 9, scope: !8843)
!8908 = !DILocation(line: 239, column: 25, scope: !8843)
!8909 = !DILocation(line: 240, column: 27, scope: !8843)
!8910 = !DILocation(line: 240, column: 32, scope: !8843)
!8911 = !DILocation(line: 240, column: 30, scope: !8843)
!8912 = !DILocation(line: 240, column: 18, scope: !8843)
!8913 = !DILocation(line: 240, column: 16, scope: !8843)
!8914 = !DILocation(line: 240, column: 20, scope: !8843)
!8915 = !DILocation(line: 240, column: 9, scope: !8843)
!8916 = !DILocation(line: 240, column: 25, scope: !8843)
!8917 = !DILocation(line: 241, column: 27, scope: !8843)
!8918 = !DILocation(line: 241, column: 32, scope: !8843)
!8919 = !DILocation(line: 241, column: 30, scope: !8843)
!8920 = !DILocation(line: 241, column: 18, scope: !8843)
!8921 = !DILocation(line: 241, column: 16, scope: !8843)
!8922 = !DILocation(line: 241, column: 20, scope: !8843)
!8923 = !DILocation(line: 241, column: 9, scope: !8843)
!8924 = !DILocation(line: 241, column: 25, scope: !8843)
!8925 = !DILocation(line: 242, column: 5, scope: !8843)
!8926 = !DILocation(line: 232, column: 25, scope: !8927)
!8927 = !DILexicalBlockFile(scope: !8839, file: !945, discriminator: 2)
!8928 = !DILocation(line: 232, column: 5, scope: !8927)
!8929 = distinct !{!8929, !8930}
!8930 = !DILocation(line: 232, column: 5, scope: !1709)
!8931 = !DILocation(line: 244, column: 12, scope: !8932)
!8932 = distinct !DILexicalBlock(scope: !1709, file: !945, line: 244, column: 5)
!8933 = !DILocation(line: 244, column: 10, scope: !8932)
!8934 = !DILocation(line: 244, column: 17, scope: !8935)
!8935 = !DILexicalBlockFile(scope: !8936, file: !945, discriminator: 1)
!8936 = distinct !DILexicalBlock(scope: !8932, file: !945, line: 244, column: 5)
!8937 = !DILocation(line: 244, column: 19, scope: !8935)
!8938 = !DILocation(line: 244, column: 5, scope: !8935)
!8939 = !DILocalVariable(name: "offset", scope: !8940, file: !945, line: 245, type: !971)
!8940 = distinct !DILexicalBlock(scope: !8936, file: !945, line: 244, column: 29)
!8941 = !DILocation(line: 245, column: 19, scope: !8940)
!8942 = !DILocation(line: 245, column: 37, scope: !8940)
!8943 = !DILocation(line: 245, column: 28, scope: !8940)
!8944 = !DILocalVariable(name: "z0", scope: !8940, file: !945, line: 246, type: !971)
!8945 = !DILocation(line: 246, column: 19, scope: !8940)
!8946 = !DILocation(line: 246, column: 43, scope: !8940)
!8947 = !DILocation(line: 246, column: 41, scope: !8940)
!8948 = !DILocation(line: 246, column: 30, scope: !8940)
!8949 = !DILocation(line: 246, column: 61, scope: !8940)
!8950 = !DILocation(line: 246, column: 59, scope: !8940)
!8951 = !DILocation(line: 246, column: 48, scope: !8940)
!8952 = !DILocation(line: 246, column: 46, scope: !8940)
!8953 = !DILocation(line: 246, column: 27, scope: !8940)
!8954 = !DILocalVariable(name: "z1", scope: !8940, file: !945, line: 247, type: !971)
!8955 = !DILocation(line: 247, column: 19, scope: !8940)
!8956 = !DILocation(line: 247, column: 43, scope: !8940)
!8957 = !DILocation(line: 247, column: 41, scope: !8940)
!8958 = !DILocation(line: 247, column: 30, scope: !8940)
!8959 = !DILocation(line: 247, column: 61, scope: !8940)
!8960 = !DILocation(line: 247, column: 59, scope: !8940)
!8961 = !DILocation(line: 247, column: 48, scope: !8940)
!8962 = !DILocation(line: 247, column: 46, scope: !8940)
!8963 = !DILocation(line: 247, column: 27, scope: !8940)
!8964 = !DILocalVariable(name: "z2", scope: !8940, file: !945, line: 248, type: !971)
!8965 = !DILocation(line: 248, column: 19, scope: !8940)
!8966 = !DILocation(line: 248, column: 41, scope: !8940)
!8967 = !DILocation(line: 248, column: 39, scope: !8940)
!8968 = !DILocation(line: 248, column: 28, scope: !8940)
!8969 = !DILocation(line: 248, column: 26, scope: !8940)
!8970 = !DILocation(line: 248, column: 64, scope: !8940)
!8971 = !DILocation(line: 248, column: 62, scope: !8940)
!8972 = !DILocation(line: 248, column: 51, scope: !8940)
!8973 = !DILocation(line: 248, column: 49, scope: !8940)
!8974 = !DILocation(line: 248, column: 44, scope: !8940)
!8975 = !DILocalVariable(name: "z3", scope: !8940, file: !945, line: 249, type: !971)
!8976 = !DILocation(line: 249, column: 19, scope: !8940)
!8977 = !DILocation(line: 249, column: 42, scope: !8940)
!8978 = !DILocation(line: 249, column: 40, scope: !8940)
!8979 = !DILocation(line: 249, column: 29, scope: !8940)
!8980 = !DILocation(line: 249, column: 27, scope: !8940)
!8981 = !DILocation(line: 249, column: 64, scope: !8940)
!8982 = !DILocation(line: 249, column: 62, scope: !8940)
!8983 = !DILocation(line: 249, column: 51, scope: !8940)
!8984 = !DILocation(line: 249, column: 49, scope: !8940)
!8985 = !DILocation(line: 249, column: 45, scope: !8940)
!8986 = !DILocation(line: 251, column: 42, scope: !8940)
!8987 = !DILocation(line: 251, column: 47, scope: !8940)
!8988 = !DILocation(line: 251, column: 45, scope: !8940)
!8989 = !DILocation(line: 251, column: 53, scope: !8940)
!8990 = !DILocation(line: 251, column: 51, scope: !8940)
!8991 = !DILocation(line: 251, column: 58, scope: !8940)
!8992 = !DILocation(line: 251, column: 69, scope: !8940)
!8993 = !DILocation(line: 251, column: 35, scope: !8940)
!8994 = !DILocation(line: 251, column: 25, scope: !8940)
!8995 = !DILocation(line: 251, column: 23, scope: !8940)
!8996 = !DILocation(line: 251, column: 9, scope: !8940)
!8997 = !DILocation(line: 251, column: 33, scope: !8940)
!8998 = !DILocation(line: 252, column: 42, scope: !8940)
!8999 = !DILocation(line: 252, column: 47, scope: !8940)
!9000 = !DILocation(line: 252, column: 45, scope: !8940)
!9001 = !DILocation(line: 252, column: 53, scope: !8940)
!9002 = !DILocation(line: 252, column: 51, scope: !8940)
!9003 = !DILocation(line: 252, column: 58, scope: !8940)
!9004 = !DILocation(line: 252, column: 69, scope: !8940)
!9005 = !DILocation(line: 252, column: 35, scope: !8940)
!9006 = !DILocation(line: 252, column: 25, scope: !8940)
!9007 = !DILocation(line: 252, column: 23, scope: !8940)
!9008 = !DILocation(line: 252, column: 9, scope: !8940)
!9009 = !DILocation(line: 252, column: 33, scope: !8940)
!9010 = !DILocation(line: 253, column: 42, scope: !8940)
!9011 = !DILocation(line: 253, column: 47, scope: !8940)
!9012 = !DILocation(line: 253, column: 45, scope: !8940)
!9013 = !DILocation(line: 253, column: 53, scope: !8940)
!9014 = !DILocation(line: 253, column: 51, scope: !8940)
!9015 = !DILocation(line: 253, column: 58, scope: !8940)
!9016 = !DILocation(line: 253, column: 69, scope: !8940)
!9017 = !DILocation(line: 253, column: 35, scope: !8940)
!9018 = !DILocation(line: 253, column: 25, scope: !8940)
!9019 = !DILocation(line: 253, column: 23, scope: !8940)
!9020 = !DILocation(line: 253, column: 9, scope: !8940)
!9021 = !DILocation(line: 253, column: 33, scope: !8940)
!9022 = !DILocation(line: 254, column: 43, scope: !8940)
!9023 = !DILocation(line: 254, column: 48, scope: !8940)
!9024 = !DILocation(line: 254, column: 46, scope: !8940)
!9025 = !DILocation(line: 254, column: 54, scope: !8940)
!9026 = !DILocation(line: 254, column: 52, scope: !8940)
!9027 = !DILocation(line: 254, column: 59, scope: !8940)
!9028 = !DILocation(line: 254, column: 70, scope: !8940)
!9029 = !DILocation(line: 254, column: 36, scope: !8940)
!9030 = !DILocation(line: 254, column: 26, scope: !8940)
!9031 = !DILocation(line: 254, column: 24, scope: !8940)
!9032 = !DILocation(line: 254, column: 9, scope: !8940)
!9033 = !DILocation(line: 254, column: 34, scope: !8940)
!9034 = !DILocation(line: 255, column: 5, scope: !8940)
!9035 = !DILocation(line: 244, column: 25, scope: !9036)
!9036 = !DILexicalBlockFile(scope: !8936, file: !945, discriminator: 2)
!9037 = !DILocation(line: 244, column: 5, scope: !9036)
!9038 = distinct !{!9038, !9039}
!9039 = !DILocation(line: 244, column: 5, scope: !1709)
!9040 = !DILocation(line: 256, column: 1, scope: !1709)
